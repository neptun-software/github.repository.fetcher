{
  "metadata": {
    "timestamp": 1736710020852,
    "page": 624,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "numberwolf/h265web.js",
      "stars": 2058,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".babelrc",
          "type": "blob",
          "size": 0.0615234375,
          "content": "{\n    \"presets\": [\"@babel/preset-env\"],\n    \"compact\": false\n}\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.52734375,
          "content": ".DS_Store\n*.swp~\n*.swp\npush.sh\n\n#\n# Media\n#\n*.mp4\n*.hevc\n*.265\n*.h265\n*.aac\n*.pcm\n*.mp3\n#Node stuff\nnode_modules\nnode_modules*\nbundle_player.js\n# Others\nVideoMissileServerDemo\n\ndemo/dist\ndemo/res\naa\nres\ntest.sh\n\nnode_modules.bak/\n\n*.bak\n*.bak1\n\nresource/demo3.png\nresource/demo1.png\n\nexample/dist/missile-512mb*\nexample/dist/missile-256mb*\nexample_normal/dist/missile-512mb*\nexample_normal/dist/missile-256mb*\nsrc/src/decoder/dc-worker*\n\nexample_normal/dist*\nexample_vue3_vite/public/dist\nexample_vue3/public/dist\nexample_vue2/public/dist\n\n"
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.2099609375,
          "content": ".DS_Store\n*.swp~\n#\n# Media\n#\n*.mp4\n*.hevc\n*.265\n*.h265\n*.aac\n*.pcm\n*.mp3\n#Node stuff\npackage-lock.json\nnode_modules\nbundle_player.js\n# Others\nVideoMissileServerDemo\n\ndist/*\nres/*\ndemo/res\ndemo/dist\naa\n\ndemo\ntest.sh\n"
        },
        {
          "name": "LICENSE-Free_CN.MD",
          "type": "blob",
          "size": 8.5205078125,
          "content": "# h265web.js技术项目<u>使用与开发协议 CYL_Free-1.0</u>\n\n此协议约定目的\n> 促进科学技术的进步，加速科学技术成果的研发、转化、应用和推广\n\n(技术合同最后更新日期:2022/04/18版)\n\n(_以下内容出现的任何 <u>代表性 枚举名称、名词、词汇、姓名等</u>,排名不分先后,按照拼音首字母排序_)\n\n<br>\n\n## 目录\n\n- [第一部分 项目技术工程创始人简介](#第一部分-项目技术工程创始人简介)\n\n- [第二部分 免费使用协议](#第二部分-免费使用协议)\n\n- [第三部分 此项目创始人本人权益声明](#第三部分-此项目创始人本人权益声明)\n\n- [第四部分 此项目其他贡献者协议](#第四部分-此项目其他贡献者协议)\n\n- [附录一 司法条文引用](#附录一-司法条文引用)\n\n- [附录二 特别链接](#附录二-特别链接)\n\n<br>\n\n## 第一部分 项目技术工程创始人简介 ##\n\n* 姓名:常炎隆/Numberwolf/小老虎\n* <small><u>_技术咨询QQ群:925466059_</u></small>\n* 自毕业开始就职 `Baidu`、`Tencent`\n* <strong>音视频全栈研发工程师</strong>、<strong>知识产权以及相关法律参与者</strong>\n\t* 主攻音视频播放器、渲染、视频非线性编辑(端到端技术架构)、视频转码等\n\t* 曾做过业务层分布式、前端、后端、客户端、分布式爬虫。\n\t* 知识产权以及相关法律参与者，曾发表40+专利。\n* 个人代表作\n\t* <a href=\"https://github.com/numberwolf/h265web.js\">h265web.js</a>\n\t\t* 自2019年开始进行开发的一款网页端HEVC/H.265点播/直播播放器.\n\t\t\t* 特征1:非职务创作(<small><u>_引用:附录一 司法条文引用_</u></small>)。\n\t\t\t* 特征2:技术工程创始人、作者、一切权利拥有人。\n\t* <a href=\"https://github.com/numberwolf/FFmpeg-Plus-OpenGL\">FFmpeg-Plus-Opengl</a>\n\t\t* 自2021年开始进行开发的一款FFmpeg-AvFilter支持特效/转场/画中画、特效/LUT贴纸能力, 支持OpenGL Shader.\n\t\t\t* 特征1:非职务创作(<small><u>_引用:附录一 司法条文引用_</u></small>)。\n\t\t\t* 特征2:技术工程创始人、作者、一切权利拥有人。\n\t* <a href=\"https://www.zzsin.com/YUVEye.html\">YuvEye</a>\n\t\t* 自2019年开始，国内第一款免费YUV、图像的播放、分析软件。\n\t\t\t* 特征1:非职务创作(<small><u>_引用:附录一 司法条文引用_</u></small>)。\n\t\t\t* 特征2:联合创始人、作者、一切权利拥有人。\n\n\n<br>\n\n## 第二部分 免费使用协议 ##\n\n### 名称 ###\n\nh265web.js技术项目<u>免费使用协议 CYL_Free-1.0</u>\n\n### 标的的内容 ###\n\n* 本项目在Github(<small><u>_引用:附录二 特别链接_</u></small>)的所有功能。\n\n* 本项目在Github(<small><u>_引用:附录二 特别链接_</u></small>)的所有公开代码。\n\n### 范围和要求 ###\n\n* 可行范围\n\n\t* 使用方可使用本项目在Github(<small><u>_引用:附录二 特别链接_</u></small>)上的所有功能。\n\n\t* 使用方可使用本项目在Github(<small><u>_引用:附录二 特别链接_</u></small>)上的所有公开代码运行在期项目中。\n\n\t* 使用方可使用本项目进行商业化生产、赚取收益。\n\n\t* 使用方可使用本项目进行科学研究与学习。\n\n\t* 使用方可对本项目在Github(<small><u>_引用:附录二 特别链接_</u></small>)上进行代码贡献。\n\n* 不可行范围\n\n\t* 禁止将本项目<strong>单独进行</strong>售卖/盈利；如违约，将承担一切违约法律责任，禁止使用本项目且赔偿使用该项目违约此条款的一切收益\n\t\t* (<small><u>_协议解释：需有上位业务存在，结合其他业务使用，例如监控安防、文娱视频网站等_</u></small>)。\n\n\t* 禁止将本项目、以及项目内部代码<strong>单独进行</strong>任何著作、专利、知识产权、财产权的声明与申请，此项目的一切权利拥有人为创始人(<small><u>_引用:本文-第一部分_</u></small>)本人；如违约，将承担一切违约法律责任，禁止使用本项目且赔偿使用该项目违约此条款的一切收益\n\t\t* (<small><u>_协议解释：需有上位业务存在，结合其他业务使用，例如监控安防、文娱视频网站等_</u></small>)。\n\n\t* 禁止使用本项目进行从事任何<u>_违反 当地法律法规、道德、公序良俗等对社会发展产生负面影响_</u> 的用途。\n\n\t* 禁止给本项目提交任何恶意代码以及相关信息内容。\n\n* 使用本项目的任何风险，本项目的创始人、相关贡献者不负任何责任。\n\n* 使用本项目用于任何违背当地法律法规、道德、公序良俗造成的用途造成的影响，本项目的创始人、相关贡献者不负任何责任。\n\n### 履行的计划 ###\n\n* 本项目目前公开方案为纯免费使用方案。\n\n* 本项目如需定制化研发、技术顾问等特殊需求能力，需要联系创始人(<small><u>_引用:本文-第一部分_</u></small>)进行技术开发合同签订并且支付酬劳。\n\n### 地点和方式 ###\n\n* 任何国家、任何当地合法地点。\n\n### 技术信息和资料的保密 ###\n\n* 无。\n\n### 技术成果的归属和收益的分配办法 ###\n\n* 使用方使用本项目商业化获取的所有收益可自行支配。\n\n* 使用方使用本项目科研、学习获取的所有收益可自行支配。\n\n\n<br>\n\n## 第三部分 此项目创始人本人权益声明 ##\n\n* 本项目的一切成果均为创始人本人(<small><u>_引用:本文-第一部分_</u></small>)的研究开发成果。\n\n* 本项目在创始人本人(<small><u>_引用:本文-第一部分_</u></small>)与任何公司、个人签订劳动、劳务、以及任何雇佣合同以及不管是否关系存续阶段情况下，一切权利均属于创始人本人所有，其他方不得在本人未允许条件下占有任何相关成果权利。\n\n\n<br>\n\n## 第四部分 此项目其他贡献者协议 ##\n\n* 此项目的代码贡献者，在Github主页享有署名权(<small><u>_引用:附录一 司法条文引用_</u></small>)。\n\n<br>\n\n\n## 附录一 司法条文引用 ##\n\n### 职务创作成果以及定义 ###\n\n<strong> 中华人民共和国民法典 - 第八百四十七条 </strong>\n\n> 职务技术成果的使用权、转让权属于法人或者非法人组织的，法人或者非法人组织可以就该项职务技术成果订立技术合同。法人或者非法人组织订立技术合同转让职务技术成果时，职务技术成果的完成人享有以同等条件优先受让的权利。\n> \n> 职务技术成果是执行法人或者非法人组织的工作任务，或者主要是利用法人或者非法人组织的物质技术条件所完成的技术成果。\n\n<strong> 中华人民共和国著作权法 - 第十八、十九条 </strong>\n\n> 第十八条　自然人为完成法人或者非法人组织工作任务所创作的作品是`职务作品`，除本条第二款的规定以外，著作权由作者享有，但法人或者非法人组织有权在其业务范围内优先使用。作品完成两年内，未经单位同意，作者不得许可第三人以与单位使用的相同方式使用该作品。\n>\n> 有下列情形之一的职务作品，作者享有署名权，著作权的其他权利由法人或者非法人组织享有，法人或者非法人组织可以给予作者奖励：\n>\n> （一）主要是利用法人或者非法人组织的物质技术条件创作，并由法人或者非法人组织承担责任的工程设计图、产品设计图、地图、示意图、计算机软件等职务作品；\n>\n> （二）报社、期刊社、通讯社、广播电台、电视台的工作人员创作的职务作品；\n>\n> （三）法律、行政法规规定或者合同约定著作权由法人或者非法人组织享有的职务作品。\n>\n> 第十九条　受委托创作的作品，著作权的归属由委托人和受托人通过合同约定。合同未作明确约定或者没有订立合同的，著作权属于受托人。\n\n\n### 非职务创作成果收益 ###\n\n<strong> 中华人民共和国民法典 - 第八百四十八条 </strong>\n\n> 非职务技术成果的使用权、转让权属于完成技术成果的个人，完成技术成果的个人可以就该项非职务技术成果订立技术合同。\n\n<strong> 中华人民共和国民法典 - 第八百五十条 </strong>\n\n> 非法垄断技术或者侵害他人技术成果的技术合同无效。\n\n### 署名权 ###\n\n<strong> 中华人民共和国著作权法 - 第十条第二款 </strong>\n\n> 署名权，即表明作者身份，在作品上署名的权利；\n\n<br>\n\n## 附录二 特别链接 ##\n\n#### 项目公开地址 ####\n\n> <a href=\"https://github.com/numberwolf/h265web.js\">https://github.com/numberwolf/h265web.js</a>\n\n"
        },
        {
          "name": "README.MD",
          "type": "blob",
          "size": 10.455078125,
          "content": "# h265web.js - 适配浏览器HEVC硬解码\n\n<a href=\"README.MD\">中文</a> | <a href=\"README_EN.MD\">English</a>\n\n<hr>\n<img src=\"./resource/logo@300x300.png\" height=\"250px\" />\n<a href=\"./resource/demo.png\">\n<img src=\"./resource/demo.png\" height=\"220px\" />\n</a>\n<hr>\n<strong>\n<font color=\"red\">市场上能找到的支持的能力最多的HEVC/H.265网页播放器.</font>\n<br>\n<font color=\"blue\">流媒体服务推荐用 <a href=\"https://github.com/ZLMediaKit/ZLMediaKit\">ZLMediaKit(https://github.com/ZLMediaKit/ZLMediaKit) - 更好用的流媒体服务</a></font>\n</strong>\n<br>\n一个可支持HEVC/H.265编码播放360P、480P、540P、720P、1080P的HEVC播放器 \n<br>\n\n### O、接入案例（部分）\n\n<font color=\"blue\">\n<strong>\n\n| <img width=\"100\" alt=\"拼多多\" src=\"https://user-images.githubusercontent.com/101395606/175973989-83175780-8b8f-43e3-bef9-6898a16a36fb.png\"> | <img width=\"100\" alt=\"快手\" src=\"https://user-images.githubusercontent.com/101395606/175974004-3313eaea-cdb2-45eb-a9af-625028196892.png\"> | <img width=\"100\" alt=\"爱奇艺\" src=\"https://user-images.githubusercontent.com/101395606/175973913-e1bce7a4-4348-409f-aa7a-51987d91e7cb.png\"> | <img width=\"100\" alt=\"百度\" src=\"https://user-images.githubusercontent.com/101395606/175973953-de4a6e9f-6bb1-4fec-8140-dfd088d6ba45.png\"> | <img width=\"100\" alt=\"百度智能云\" src=\"https://user-images.githubusercontent.com/101395606/175973965-70aa3f6b-8557-4300-a591-1e4d69c1231c.png\"> | <img width=\"100\" alt=\"北京数通魔方钙瓷\" src=\"https://user-images.githubusercontent.com/101395606/175974028-9ca49903-7bec-4ee8-9de8-2c2b56bf35c6.png\"> | <img width=\"100\" alt=\"杭州诚智天扬科技\" src=\"https://user-images.githubusercontent.com/101395606/175974037-65fd1b54-22e0-4bc3-a971-50b7d425dc8d.png\"> | <img width=\"100\" alt=\"南京一乙\" src=\"https://user-images.githubusercontent.com/101395606/175974049-a9df9ef9-6bb0-44bb-a900-a08cdae91116.png\"> |\n| ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- |\n| 拼多多 | 快手 | 爱奇艺 | 百度集团 | 百度智能云 | 北京数通魔方 | 杭州诚智天扬 | 南京一乙 |\n| <br> | <br> | <br> | <br> | <br> | <br> | <br> | <br> |\n| <img width=\"100\" alt=\"山东呢沃尔德workd-group cn\" src=\"https://user-images.githubusercontent.com/101395606/175974059-c9a7cff5-ca8a-4540-8b3f-f559e5b867fb.png\"> | <img width=\"100\" alt=\"上海联通\" src=\"https://user-images.githubusercontent.com/101395606/175974083-cdb98f54-d2a6-42e1-9129-d2934608f887.png\"> | <img width=\"100\" alt=\"西安思华www sihua tech\" src=\"https://user-images.githubusercontent.com/101395606/175974092-90bc48c4-2874-417e-a7b5-2ded8e06c29c.png\"> | <br> | <br> | <br> | <br> | <br> |\n| 山东呢尔德 | 上海联通 | 西安思华 | <br> | <br> | <br> | <br> | <br> |\n\n</strong>\n</font>\n\n<hr>\n<h3>能力矩阵</h3>\n\n<strong>\n<font color=\"black\">\n\n| <font color=\"gray\">Feature</font> | <font color=\"gray\">Feature</font> | <font color=\"gray\">Feature</font> | <font color=\"gray\">Feature</font> |\n| ---- | ---- | ---- | ---- |\n| <img src=\"resource/icon-hls.png\" width=\"100\"> | <img src=\"resource/icon-m3u8.png\" width=\"100\"> | <img src=\"resource/icon-mp4.png\" width=\"100\"> | <img src=\"resource/icon-flv.png\" width=\"100\"> | \n| HLS(LIVE)| M3u8(VOD) | MP4(VOD) | FLV(VOD) | \n| <br> | <br> | <br> | <br> |\n| <img src=\"resource/icon-httpflv.png\" width=\"100\"> | <img src=\"resource/icon-httpts.png\" width=\"100\"> | <img src=\"resource/icon-websocketflv.png\" width=\"100\"> | <img src=\"resource/icon-websocketts.png\" width=\"100\"> |\n| HTTP-FLV(LIVE) | HTTP-TS(LIVE) | WS-FLV(LIVE) | WS-TS(LIVE) |\n| <br> | <br> | <br> | <br> |\n| <img src=\"resource/icon-ts.png\" width=\"100\"> | <img src=\"resource/icon-mpegps.png\" width=\"100\"> | <img src=\"resource/icon-av1.png\" width=\"100\"> | <img src=\"resource/icon-mov-h265.png\" width=\"100\">|\n| MPEG-TS(VOD) | MPEG-PS(VOD) | AV1(Chrome) | MOV(H.265) |\n| <br> | <br> | <br> | <br> |\n| <img src=\"resource/icon-hevc.png\" width=\"100\"> | <img src=\"resource/icon-websockethevc.png\" width=\"100\"> | <img src=\"resource/icon-mkv.png\" width=\"100\"><br> | <img src=\"resource/icon-aac.png\" width=\"100\"> |\n| HTTP-HEVC | WS-HEVC | MKV(HEVC) | AAC(MAIN/LC) |\n| <br> | <br> | <br> | <br> |\n| <img src=\"resource/icon-thread.png\" width=\"100\"> | <img src=\"resource/icon-single-thread.png\" width=\"100\"> | <img src=\"resource/icon-pcm.png\" width=\"100\"> | <img src=\"resource/icon-pcm.png\" width=\"100\"> | <img src=\"resource/icon-mediainfo.png\" width=\"100\">  |\n| Multi-Thread<br><font color=\"red\">(only:<br>https+nginx conf)</font> | Single-Thread | G711A(HTTP-FLV) | G711U(HTTP-FLV) |\n| <br> | <br> | <br> | <br> |\n| <img src=\"resource/icon-mediainfo.png\" width=\"100\"> | <img src=\"resource/icon-hevc-s.png\" width=\"100\"> | <img src=\"resource/icon-avc-s.png\" width=\"100\"> | <img src=\"resource/icon-hdecode.png\" width=\"100\"> |\n| MediaInfo | HEVC/H.265 | AVC/H.264 | Hardware decoder<br>硬解码<br>(FLV/HTTP-FLV/MP4) |\n\n</font>\n</strong>\n\n#### 在线DEMO <a href=\"https://www.zzsin.com/h265webjs.html\"> h265webjs.html (请以Github最新为准,在线Demo已长时间未更新)\n</a>\n\n#### 入门调试Demo <a href=\"index-debug.html\">index-debug.html</a>\n\n<hr>\n\n#### 当前能力 ####\n\n* 协议\n\n| 协议  | 模式 | 是否支持 | 说明 |\n| ---- | ---- |  ----  | ---- |\n| mp4 | 点播 |  是  | ---- |\n| mov | 点播 |  是  | HEVC/H.265 |\n| mkv | 点播 |  是  | HEVC/H.265 |\n| av1 | 点播 |  是  | Chrome |\n| mpeg-ts | 点播 |  是  | ---- |\n| mpeg-ps | 点播 |  是  | ---- |\n| m3u8 | 点播 |  是  | ---- |\n| hls | 直播 |  是  | ---- |\n| flv | 点播 |  是  | --- |\n| http-flv | 直播 |  是  | CodecID=12 |\n| http-ts | 直播 |  是  | ---- |\n| http-hevc | 直播 |  是  | ---- |\n| http-hevc | 点播 |  是  | ---- |\n| websocket-hevc | 直播 |  是  | ---- |\n| websocket-flv | 直播 |  是  | ---- |\n| websocket-ts | 直播 |  是  | ---- |\n| HEVC/H.265 | 点播 |  是  | ---- |\n| HEVC/H.265 | 直播 |  是  | ---- |\n| AVC/H.264 | 点播 |  是  | ---- |\n| AVC/H.264 | 直播 |  是  | ---- |\n\n* 编码\n\n| 编码 | 是否支持 | 说明 |\n| ---- |  ----  | ---- |\n| AVC/H.264 |  是  | ---- |\n| HEVC/H.265 |  是  | ---- |\n| AAC |  是  | ---- |\n| G711A |  是  | HTTP-FLV |\n| G711U |  是  | HTTP-FLV |\n| AV1 |  是  | Chrome |\n\n* 能力\n\n| 能力 | 是否支持 | 其他 |\n| ---- | ---- |  ----  |\n| 硬解码 | 是 |  适配Chrome/Safari等 |\n| 直播 | 是 |  ----  |\n| 点播 | 是 |  ----  |\n| Seek跳转 | 是 | ---- |\n| 精准Seek | 是 |  ----  |\n| 封面图 | 是 |  ----  |\n| 边下边播 | 是 |  ----  |\n| 音量调节 | 是 |  ----  |\n| 播放 | 是 |  ----  |\n| 暂停 | 是 |  ----  |\n| 重新播放 | 是 |  ----  |\n| 暂停截图 | 是 |  ----  |\n| 1080p播放 | 是 |  ----  |\n| 720p播放 | 是 |  ----  |\n| 多路播放 | 是 |  ----  |\n| 去音频播放 | 是 |  ----  |\n| 缓冲进度 | 是 |  ----  |\n| 开启全屏播放 | 是 |  ----  |\n| 退出全屏播放 | 是 |  ----  |\n| 逐帧播放 | 是 |  ----  |\n| 截图 | 是 | ----  |\n| 自动播放 | 是 | HTTP-FLV 265+264<br>HTTP-TS 265+264<br>HLS 264  |\n| 设置缓存长度 | 是 | MP4 265 |\n| 多线程解码 | 是 | (需要HTTPS+配置NGINX支持) |\n| 单线程解码 | 是 | 兼容性强 |\n| 获取 MediaInfo | 是 | ---- |\n| 获取 Codec编码 | 是 | 视频&音频 |\n| 获取 Media Duration 时长 | 是 | 视频&音频|\n| 获取 视频尺寸 | 是 | ---- |\n| 获取 视频帧率 | 是 | ---- |\n| 获取 音频采样率 | 是 | ---- |\n| 追帧策略算法 | 是 |  HTTP-FLV(no audio) |\n| 倍速调整 | 是 |  H.264/AV1 |\n| Resize缩放 | 是 | ---- |\n\n<br>\n\n\n# 全部文档 #\n\n* <a href=\"https://github.com/numberwolf/h265web.js/wiki\">WIKI首页</a>\n\n\n### 一、SDK使用文档\n\n* [【LICENSE】CYL—Free 1.0](https://github.com/numberwolf/h265web.js/wiki/%E3%80%90LICENSE%E3%80%91CYL%E2%80%94Free-1.0)\n\n* [【说明】播放器能力介绍](https://github.com/numberwolf/h265web.js/wiki/%E3%80%90%E8%AF%B4%E6%98%8E%E3%80%91%E6%92%AD%E6%94%BE%E5%99%A8%E8%83%BD%E5%8A%9B%E4%BB%8B%E7%BB%8D)\n\n* [【说明】创建播放器](https://github.com/numberwolf/h265web.js/wiki/%E3%80%90%E8%AF%B4%E6%98%8E%E3%80%91%E5%88%9B%E5%BB%BA%E6%92%AD%E6%94%BE%E5%99%A8)\n\n* [【说明】API使用](https://github.com/numberwolf/h265web.js/wiki/%E3%80%90%E8%AF%B4%E6%98%8E%E3%80%91API%E4%BD%BF%E7%94%A8)\n\n* [【说明】Event事件 回调](https://github.com/numberwolf/h265web.js/wiki/%E3%80%90%E8%AF%B4%E6%98%8E%E3%80%91Event%E4%BA%8B%E4%BB%B6-%E5%9B%9E%E8%B0%83)\n\n### 二、问题QA指引\n\n* [【QA解答】初始化失败系列](https://github.com/numberwolf/h265web.js/wiki/%E3%80%90QA%E8%A7%A3%E7%AD%94%E3%80%91%E5%88%9D%E5%A7%8B%E5%8C%96%E5%A4%B1%E8%B4%A5%E7%B3%BB%E5%88%97)\n\n* [【QA解答】开始播放后遇到的问题系列](https://github.com/numberwolf/h265web.js/wiki/%E3%80%90QA%E8%A7%A3%E7%AD%94%E3%80%91%E5%BC%80%E5%A7%8B%E6%92%AD%E6%94%BE%E5%90%8E%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98%E7%B3%BB%E5%88%97)\n\n* [【视频转码指南】如何用FFmpeg编码合格的 直播 点播 视频](https://github.com/numberwolf/h265web.js/wiki/%E3%80%90%E8%A7%86%E9%A2%91%E8%BD%AC%E7%A0%81%E6%8C%87%E5%8D%97%E3%80%91%E5%A6%82%E4%BD%95%E7%94%A8FFmpeg%E7%BC%96%E7%A0%81%E5%90%88%E6%A0%BC%E7%9A%84-%E7%9B%B4%E6%92%AD-%E7%82%B9%E6%92%AD-%E8%A7%86%E9%A2%91)\n\n### 三、合作项目\n\n* [好用的流媒体服务 ZLMediaKit](https://github.com/ZLMediaKit/ZLMediaKit)\n\n* [FFmpeg支持265的HTTP-FLV直播](https://github.com/numberwolf/FFmpeg-QuQi-H265-FLV-RTMP)\n\n* [Web端265解码器](https://github.com/numberwolf/h265web.js-wasm-decoder)\n\n* [YuvEye 国内第一款图像质量、YUV分析工具](https://www.zzsin.com/YUVEye.html)\n\n### 四、关于\n\n* [【技术社区】提问 交流 — 联系我 技术支持群](https://github.com/numberwolf/h265web.js/wiki/%E3%80%90%E6%8A%80%E6%9C%AF%E7%A4%BE%E5%8C%BA%E3%80%91%E6%8F%90%E9%97%AE-%E4%BA%A4%E6%B5%81-%E2%80%94-%E8%81%94%E7%B3%BB%E6%88%91-%E6%8A%80%E6%9C%AF%E6%94%AF%E6%8C%81%E7%BE%A4)\n\n* [【日志】播放器更新记录](https://github.com/numberwolf/h265web.js/wiki/%E3%80%90%E6%97%A5%E5%BF%97%E3%80%91%E6%92%AD%E6%94%BE%E5%99%A8%E6%9B%B4%E6%96%B0%E8%AE%B0%E5%BD%95)\n\n* [【作者说】为什么不建议私聊](https://github.com/numberwolf/h265web.js/wiki/%E3%80%90%E4%BD%9C%E8%80%85%E8%AF%B4%E3%80%91%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E5%BB%BA%E8%AE%AE%E7%A7%81%E8%81%8A)\n\n* [【作者说】关于创始人](https://github.com/numberwolf/h265web.js/wiki/%E3%80%90%E4%BD%9C%E8%80%85%E8%AF%B4%E3%80%91%E5%85%B3%E4%BA%8E%E5%88%9B%E5%A7%8B%E4%BA%BA)\n\n<hr>\n\n### 捐赠 ###\n\n|  微信 | 支付宝 | PayPal |\n|  ---- | ----  | ---- |\n| <img src=\"resource/donate/wechat.JPG\" height=\"500\"> | <img src=\"resource/donate/alipay.JPG\" height=\"500\"> | TODO |\n\n\n\n\n\n\n"
        },
        {
          "name": "README_EN.MD",
          "type": "blob",
          "size": 30.71875,
          "content": "# h265web.js - Support Hard-Decode\n\n<a href=\"README.MD\">中文</a> | <a href=\"README_EN.MD\">English</a>\n\n<hr>\n<img src=\"./resource/logo@300x300.png\" height=\"250px\" />\n<a href=\"./resource/demo.png\">\n<img src=\"./resource/demo.png\" height=\"220px\" />\n</a>\n<hr>\n\n<strong>\n<font color=\"red\">H265web.js is the best HEVC/H.265 web player you can find.</font>\n<br>\n<font color=\"blue\">Video Stream Server recommand use <a href=\"https://github.com/ZLMediaKit/ZLMediaKit\">ZLMediaKit(https://github.com/ZLMediaKit/ZLMediaKit) - Pretty good video live stream server/framework</a></font>\n</strong>\n\nA hevc/h.265 web player, easy to play 1080P. `~^_^~ For love` if <a href=\"https://github.com/numberwolf/h265web.js\">h265web</a> helped you, please `star` it~\n\n<hr>\n\n<h3>All Features</h3>\n\n<strong>\n<font color=\"black\">\n\n| <font color=\"gray\">Feature</font> | <font color=\"gray\">Feature</font> | <font color=\"gray\">Feature</font> | <font color=\"gray\">Feature</font> |\n| ---- | ---- | ---- | ---- |\n| <img src=\"resource/icon-hls.png\" width=\"100\"> | <img src=\"resource/icon-m3u8.png\" width=\"100\"> | <img src=\"resource/icon-mp4.png\" width=\"100\"> | <img src=\"resource/icon-flv.png\" width=\"100\"> | \n| HLS(LIVE)| M3u8(VOD) | MP4(VOD) | FLV(VOD) | \n| <br> | <br> | <br> | <br> |\n| <img src=\"resource/icon-httpflv.png\" width=\"100\"> | <img src=\"resource/icon-httpts.png\" width=\"100\"> | <img src=\"resource/icon-websocketflv.png\" width=\"100\"> | <img src=\"resource/icon-websocketts.png\" width=\"100\"> |\n| HTTP-FLV(LIVE) | HTTP-TS(LIVE) | WS-FLV(LIVE) | WS-TS(LIVE) |\n| <br> | <br> | <br> | <br> |\n| <img src=\"resource/icon-ts.png\" width=\"100\"> | <img src=\"resource/icon-mpegps.png\" width=\"100\"> | <img src=\"resource/icon-av1.png\" width=\"100\"> | <img src=\"resource/icon-mov-h265.png\" width=\"100\">|\n| MPEG-TS(VOD) | MPEG-PS(VOD) | AV1(Chrome) | MOV(H.265) |\n| <br> | <br> | <br> | <br> |\n| <img src=\"resource/icon-hevc.png\" width=\"100\"> | <img src=\"resource/icon-websockethevc.png\" width=\"100\"> | <img src=\"resource/icon-mkv.png\" width=\"100\"><br> | <img src=\"resource/icon-aac.png\" width=\"100\"> |\n| HTTP-HEVC | WS-HEVC | MKV(HEVC) | AAC(MAIN/LC) |\n| <br> | <br> | <br> | <br> |\n| <img src=\"resource/icon-thread.png\" width=\"100\"> | <img src=\"resource/icon-single-thread.png\" width=\"100\"> | <img src=\"resource/icon-pcm.png\" width=\"100\"> | <img src=\"resource/icon-pcm.png\" width=\"100\"> | <img src=\"resource/icon-mediainfo.png\" width=\"100\">  |\n| Multi-Thread<br><font color=\"red\">(only:<br>https+nginx conf)</font> | Single-Thread | G711A(HTTP-FLV) | G711U(HTTP-FLV) |\n| <br> | <br> | <br> | <br> |\n| <img src=\"resource/icon-mediainfo.png\" width=\"100\"> | <img src=\"resource/icon-hevc-s.png\" width=\"100\"> | <img src=\"resource/icon-avc-s.png\" width=\"100\"> | <img src=\"resource/icon-hdecode.png\" width=\"100\"> |\n| MediaInfo | HEVC/H.265 | AVC/H.264 | Hardware decoder<br>(FLV/HTTP-FLV/MP4) |\n\n\n</font>\n</strong>\n\n#### Contact ####\n\n* Github: https://github.com/numberwolf/h265web.js\n* Email: porschegt23@foxmail.com\n* <strong><font color=\"red\">QQ Group Number: 925466059(recommand)</font></strong>\n* <strong>QQ: 531365872</strong>\n* Discord:numberwolf#8694\n* Wechat:numberwolf11\n\n#### Online DEMO <a href=\"https://www.zzsin.com/h265webjs.html\"> h265webjs.html (Demo is not newest version, you need to download from github and get newest version)\n</a>\n\n#### First Demo - for first use <a href=\"index-debug.html\">index-debug.html</a>\n\n| h265web.js | mpeg.js `(ts demuxer)` | h265web.js's H.265 decoder | LICENSE |\n| ---- | ---- | ---- | ---- |\n| [h265web.js](https://github.com/numberwolf/h265web.js)  | [MPEG-Demuxer.js](https://github.com/numberwolf/MPEG-Demuxer.js) | [h265web.js-wasm-decoder](https://github.com/numberwolf/h265web.js-wasm-decoder) | <a href=\"LICENSE-Free_CN.MD\">CYL_Free-1.0 LICENSE-Free_CN.MD</a> |\n\n<hr>\n\n# Remind!\n\nH265web.js use the soft-decode mode(Can not use hard-decode and assembly-optimization on browers), so your device performance has a large impact on player.\n\nNotice：\n\n* Recommended FPS <= 30fps\n\t* Better: 24fps\n\n* Recommended Bitrate <= 1500kbps\n\t* Better: 300~600kbps\n\n\n\n## Index\n\n- [Update Log](#updatelog)\n\n- [0、README](#0readme)\n\n\t- [Support what?](#supported)\n\n\t- [Free token](#freetoken)\n\n\t- [Demo](#demo)\n\n\t- [Preview image](#previewimage)\n\n- [1、How to use it? See demo code](#1useitbydemo)\n\n- [2、SDK/API Document](#2sdkandapidocument)\n\n\t- [How to install it](#install)\n\n\t- [Player Config](#playerconfig)\n\n\t- [Init Player](#initplayer)\n\n\t- [Player bind events](#playerbindevents)\n\n\t\t- [Seed Finished](#seedfinished)\n\n\t\t- [Callback Yuv Data](#callbackyuvdata)\n\n\t\t- [Media Load Successed](#medialoadsuccessed)\n\n\t\t- [Player Pts Update](#playerptsupdate)\n\n\t\t- [Play Finished](#playfinished)\n\n\t\t- [Cache Download](#cachedownload)\n\n\t\t- [Cover Image Load Finished](#coverimageloadfinished)\n\n\t\t- [Caching Decode Frames](#cachingdecodeframes)\n\n\t\t- [Caching Decode Finished](#cachingdecodefinished)\n\n\t\t- [Open FullScreen Event](#openfullscreenevent)\n\n\t\t- [Exit FullScreen Event](#closefullscreenevent)\n\t\t\n\t\t- [Callback Play State](#callbackplaystate)\n\n\t- [Player API Document](#playerapidocument)\n\n\t\t- [Build Player](#buildplayer)\n\n\t\t- [Get Player Play Status](#getplayerplaystatus)\n\n\t\t- [Start Play](#startplay)\n\n\t\t- [Pause](#pause)\n\n\t\t- [Set Render Callback YuvFrame](#setrendercallbackyuvframe)\n\n\t\t- [Seek](#seek)\n\n\t\t- [Volume Option](#volumeoption)\n\n\t\t- [Get MediaInfo - and check is h265 video](#getmediainfo)\n\n\t\t- [Open Fullscreen](#openfullscreen)\n\n\t\t- [Exit Fullscreen](#exitfullscreen)\n\n\t\t- [Play frame by frame(next frame)](#nextframe)\n\n\t\t- [Resize](#resize)\n\n\t\t- [Snapshot](#snapshot)\n\n\t\t- [SetPlayRate](#setplayrate)\n\n\t\t- [GetPlayRate](#getplayrate)\n\n\t\t- [Release Player](#release)\n\n- [3、Others](#3others)\n\n\t- [Donate](#donate)\n\n\t- [FFmpeg Support H265 Live Encode](#ffmpegsupporth265liveencode)\n\t\n\t- [Transcode and get HEVC/H.265 media file by ffmpeg](#transcodeandget265codecfilebyffmpeg)\n\n<hr>\n\n### 0、README ###\n\n| TODO | Content |\n| ---- | ---- |\n| 1 | Support HDR10 BT.2020 |\n\n\n#### Supported ####\n\n* Protocol box\n\n|  protocol | model | support | desc |\n| ---- | ---- |  ----  | ---- |\n| mp4 | Video on demand |  Y  | ---- |\n| mov | Video on demand |  Y  | HEVC/H.265 |\n| mkv | Video on demand |  Y  | HEVC/H.265 |\n| av1 | Video on demand |  Y  | Chrome |\n| mpeg-ts | Video on demand |  Y  | ---- |\n| mpeg-ps | Video on demand |  Y  | ---- |\n| m3u8 | Video on demand |  Y  | ---- |\n| hls | Live |  Y  | ---- |\n| flv | Video on demand |  Y  | ---- |\n| http-flv | Live |  Y  | CodecID=12 |\n| http-ts | Live |  Y  | ---- |\n| http-hevc | Live |  Y  | ---- |\n| http-hevc | Video on demand |  Y  | ---- |\n| websocket-hevc | Live |  Y  | ---- |\n| websocket-flv | Live |  Y  | ---- |\n| websocket-ts | Live |  Y  | ---- |\n| HEVC/H.265 | Video on demand |  Y  | ---- |\n| HEVC/H.265 | Live |  Y  | ---- |\n| AVC/H.264 | Video on demand |  Y  | ---- |\n| AVC/H.264 | Live |  Y  | ---- |\n\n* Codec\n\n| Codec | Support | Desc |\n| ---- |  ----  | ---- |\n| AVC/H.264 |  Y  | ---- |\n| HEVC/H.265 |  Y  | ---- |\n| AAC |  Y  | ---- |\n| G711A |  Y  | HTTP-FLV |\n| G711U |  Y  | HTTP-FLV |\n| AV1 |  Y  | Chrome |\n\n\n* Features\n\n|  Feature | Support | Desc |\n| ---- | ---- |  ----  |\n| Hardware-Decode | Y | For Chrome/Safari etc... |\n| Video on demand | Y |  ----  |\n| Live | Y |  ----  |\n| Seek | Y | ----  |\n| AccurateSeek | Y |  ----  |\n| Cover Image | Y |  ----  |\n| Playing with download | Y |  ----  |\n| Volume | Y |  ----  |\n| Play | Y |  ----  |\n| Pause | Y |  ----  |\n| ReStart | Y |  ----  |\n| PauseWithCoverImage | Y |  ----  |\n| 1080P | Y |  ----  |\n| 720P | Y |  ----  |\n| Create multi players | Y |  ----  |\n| Play without Audio | Y |  ----  |\n| Cache process | Y |  ----  |\n| Open Fullscreen | Y |  ----  |\n| Exit Fullscreen | Y |  ----  |\n| Play frame by frame | Y |  ----  |\n| Snapshot | Y |  ----  |\n| Autoplay | Y |  HTTP-FLV 265+264<br>HTTP-TS 265+264<br>HLS 264  |\n| Cache Length | Y | MP4 265 |\n| Multi-thread decoder | Y | (HTTPS+ Conf NGINX) |\n| Single-thread decoder | Y | compatible |\n| Get MediaInfo | Y | ---- |\n| Get Codec Param | Y | Video&Audio |\n| Get Media Duration | Y | Video&Audio |\n| Get Video Size | Y | ---- |\n| Get Video FPS | Y | ---- |\n| Get Audio SampleRate | Y | ---- |\n| Chase Frame | Y | HTTP-FLV(no audio) |\n| PlayBackRate | Y | H.264/AV1 |\n| Resize | Y | ---- |\n\n<br>\n\n#### freeToken ####\n\n```javascript\ntoken = \"base64:QXV0aG9yOmNoYW5neWFubG9uZ3xudW1iZXJ3b2xmLEdpdGh1YjpodHRwczovL2dpdGh1Yi5jb20vbnVtYmVyd29sZixFbWFpbDpwb3JzY2hlZ3QyM0Bmb3htYWlsLmNvbSxRUTo1MzEzNjU4NzIsSG9tZVBhZ2U6aHR0cDovL3h2aWRlby52aWRlbyxEaXNjb3JkOm51bWJlcndvbGYjODY5NCx3ZWNoYXI6bnVtYmVyd29sZjExLEJlaWppbmcsV29ya0luOkJhaWR1\";\n```\n\n<br>\n\n#### Demo ####\n\n<a href=\"https://www.zzsin.com/h265webjs.html\">https://www.zzsin.com/h265webjs.html</a>\n\nSimple Demo - First <a href=\"index-debug.html\">index-debug.html</a>\n\n<br>\n\n#### PreviewImage ####\n\n|  Type | Example |\n| ---- |  ----  |\n|  VOD | <a href='./resource/demo.png' target=\"_blank\"><img src=\"./resource/demo.png\" height=\"300px\" /></a>  |\n| LIVE | <a href='./resource/demo2.png' target=\"_blank\"><img src=\"./resource/demo2.png\" height=\"300px\" /></a> |\n\n<br>\n\n## 1、UseItByDemo ##\n\n* Simple Demo - First <a href=\"index-debug.html\">index-debug.html</a>\n\n* You need to put project in your `web server` path, and open it with `index.html`\n\n<br>\n\n## 2、SdkAndApiDocument ##\n\n———————— __API/Events__\n\n#### New SDK Project for H.265/HEVC decoder - [https://github.com/numberwolf/h265web.js-wasm-decoder](https://github.com/numberwolf/h265web.js-wasm-decoder)\n\n### Install ###\n\n> * <h4> Warning: Do not install from npm store! Please download from Github！ Because npm store is not friendly with Webassembly!</h4>\n\n> * <h4> Warning: Put the .wasm file into `webpack`/`browerify`'s dist Directory! If wasm's path is not same with `webpack`/`browerify`'s dist file's path, you can not running with it！！！Or you can include with this github's dist/\\*.js and dist/missile\\*.wasm</h4>\n\n```bash\nbash init.sh\n```\n\n#### 1）Install SDK Package\n\n* By github 1.1 <a href=\"https://github.com/numberwolf/h265web.js\">h265web.js</a>\n\n* Simple Demo - First <a href=\"index-debug.html\">index-debug.html</a>\n\n* demo: <a href=\"./example_normal\">example_normal</a> （recommend）\n\t```javascript\n\t<script src=\"dist/missile.js\"></script>\n\t<script src=\"dist/h265webjs-v20211016.js\"></script>\n\t```\n\n* demo: <a href=\"./example\">example</a>\n\t```javascript\n\t// import wasm in html file\n\t<script src=\"dist/missile.js\"></script>\n\t// import from local file in your es js file\n\trequire('./dist/h265webjs');\n\t```\n\n* demo: <a href=\"./example\">example</a>\n\t* `import xxx from xxx`\n\n\t```javascript\n\t// import wasm in html file\n\t<script src=\"dist/missile.js\"></script>\n\t// import from local file in your es js file\n\timport H265webjsModule from './dist/index';\n\t```\n\n<br>\n\n#### 2）Install Wasm\n\n* If you install it by github, you could skip this step.\n\n<br>\n\n#### 3）Include h265web.js to project\n\n* Github <a href=\"https://github.com/numberwolf/h265web.js\">h265web.js</a>\n\n\n<br>\n\n### PlayerConfig ###\n\n* Make player config\n\n```javascript\nconst PLAYER_CORE_TYPE_DEFAULT = 0; // Default player core\nconst PLAYER_CORE_TYPE_CNATIVE = 1; // BAK player Core\n\nlet config = {\n    player: \"glplayer\",\n    width: 960,\n    height: 540,\n    token : token,\n    extInfo : {\n        moovStartFlag : true\n    }\n};\n```\n\n* Config desc\n\n|  Config | Type | Value | Need | Desc | \n|  ----  | ----  | ---- | ---- | ---- |\n| type  | String | mp4/hls/ts/raw265/flv | N | Media file type, or auto detect |\n| player  | String | - | Y | Player dom id |\n| width  | Int | - | Y | Player width |\n| height  | Int | - | Y | Player height |\n| token  | String | - | Y | player's token |\n| extInfo  | Object | - | N | player extra info |\n| \\+ moovStartFlag  | Bool | true/false | N:default is sfalse | mp4 with moov before mdat |\n| \\+ rawFps  | Float32 | Example:30 | N:default 24 | Fps for play HEVC/AVC stream |\n| \\+ coreProbePart  | Float32 | - | N:Default is 1.0 | Probe Mp4 media info，interval: `0.0~1.0`, traditional mp4 file which moov box front of mdat box, use 0.1(10%) （only with Bak player core mode(beta)) |\n| \\+ core  | Int | - | N:Default 0 | 0:Default Core <br>1:Bak Core |\n| \\+ ignoreAudio | Int | - | N:Default is 0 | 0:Play with audio <br>1:Without audio |\n| \\+ probeSize | Int | - | N:4096 | HTTP-FLV(LIVE) Mode's probe size, default is 4096 |\n| \\+ autoPlay | Bool | true/false | N:false | Open autoplay <br>HTTP-FLV 265+264<br>HTTP-TS 265+264<br>HLS 264 |\n| \\+ cacheLength | Int | [5, ∞+] | N:Default is 50 frames | Set cache frame count by manual <br>MP4 265 |\n\n\n<br>\n\n### InitPlayer ###\n\n* Warning！！！\n\n<strong>After compile ,Please put your `JS file` with `wasm file` in the same directory </strong>\n\n* Example\n\n```c\n\t./dist/your dist play file\n\t./dist/sdk files\n\t./index.html\n```\n\n* Create your player(Global function) \n\n> new265webjs(`mediaAddress`, `playerConfig`)\n\n|  Param | Type | Default | Need | Desc | \n|  ----  | ----  | ---- | ---- | ---- |\n| mediaAddress  | String | - | Y | media file address/path |\n| playerConfig  | Object | - | Y | player's config |\n\n* Example\n\n\t* 1）URI and Config\n\n\t\t* Example 1 Create `mp4/hls/ts` Player\n\n\t\t```javascript\n\t\tlet videoURL = \"h265_test.mp4\";\n\t\tlet config = {\n\t\t    player: \"glplayer\",\n\t\t    width: 960,\n\t\t    height: 540,\n\t\t    accurateSeek : true,\n\t\t    token : token,\n\t\t    extInfo : {\n\t\t        moovStartFlag : true,\n\t\t        readyShow : true\n\t\t    }\n\t\t};\n\t\t````\n\n\t\t* Example 2 Create `raw265` Player (play hevc raw stream)\n\n\t\t```javascript\n\t\tlet videoURL = \"demo/res/raw.h265\";\n\t\tlet config = {\n\t\t    player: \"glplayer\",\n\t\t    width: 960,\n\t\t    height: 540,\n\t\t    accurateSeek : true,\n\t\t    token : token,\n\t\t    extInfo : {\n\t\t        readyShow : true,\n\t\t        rawFps : 30 // frame rate\n\t\t    }\n\t\t};\n\t\t````\n\n\t\t* Example 3 Create `FLV`(Video on demand) Player\n\n\t\t```javascript\n\t\tconst PLAYER_CORE_TYPE_DEFAULT = 0; // Default player core\n        const PLAYER_CORE_TYPE_CNATIVE = 1; // Bak player core mode\n\t\tlet config = {\n            player: \"glplayer\",\n            width: 960,\n            height: 540,\n            accurateSeek : true,\n            token : token,\n            extInfo : {\n                moovStartFlag : true,\n                readyShow : true,\n                autoCrop : false,\n                coreProbePart : 0.1,\n                ignoreAudio : 0\n            }\n        };\n\t\t````\n\n\t* 2）Player\n\t\t* 0. Example 0 Create by normal js without compile\n\t\tExample:\n\t\t```javascript\n\t\tlet player = window.new265webjs(url, config);\n\t\t```\n\n\t\t* 1. If `require('./src/h265webjs');`\n\n\t\tExample:\n\t\t```javascript\n\t\tlet player = new265webjs(videoURL, config); // Global Function\n\t\t```\n\n\t\t* 2. If `import H265webjsModule from './dist/index';`（recommend）\n\n\t\tExample:\n\t\t```javascript\n\t\tlet player = H265webjsModule.createPlayer(videoURL, config);\n\t\t```\n\n\t\t* 3. NOTICE! If you want to create `raw265` stream player\n\t\t\t(Do not need execute with this step when you play 265 vod stream)\n\n\t\t\t* Add `raw265` type, and set `rawFps` for player's fps\n\n\t\t\t```javascript\n\t\t\tconfig = {\n                type: 'raw265',\n                player: \"glplayer\",\n                width: 960,\n                height: 540,\n                // accurateSeek : true,\n                token : token,\n                extInfo : {\n                    rawFps: 24,\n                    moovStartFlag : true,\n                    coreProbePart : 0.1,\n                    ignoreAudio : 0,\n                    probeSize : 8192,\n                    autoPlay : true,\n                }\n            };\n\t\t\t```\n\t\n\n<br>\n\n### PlayerBindEvents ###\n\n#### SeedFinished ####\n\n* Example\n\n```javascript\nplayer.onSeekFinish = () => {\n    // todo\n};\n```\n\n<br>\n\n#### CallbackYuvData ####\n\n|  Callback param | Type | Default | Need | Desc | \n|  ----  | ----  | ---- | ---- | ---- |\n| width  | int | - | - | YUV width |\n| height  | int | - | - | YUV height |\n| imageBufferY  | Uint8Array | - | - | Y |\n| imageBufferB  | Uint8Array | - | - | ChromaB |\n| imageBufferR  | Uint8Array | - | - | ChromaR |\n\n> You can use this event's data to render a new window(full screen play)\n\n> must use `setRenderScreen` to open this feature.\n\n* Example\n\n```javascript\nplayer.onRender = (width, height, imageBufferY, imageBufferB, imageBufferR) => {\n\t// todo\n};\n```\n\n<br>\n\n#### MediaLoadSuccessed ####\n\n> If this event happened, you can start play\n\n* Example\n\n```javascript\nplayer.onLoadFinish = () => {\n\t// todo\n};\n```\n\n<br>\n\n#### PlayerPtsUpdate ####\n\n|  Callback param | Type | Default | Need | Desc | \n|  ----  | ----  | ---- | ---- | ---- |\n| videoPTS  | float64 | - | - | pts now |\n\n* Example\n\n```javascript\nplayer.onPlayTime = (videoPTS) => {\n\t// todo\n\tconsole.log(videoPTS)\n};\n```\n\n#### PlayFinished ####\n\n* Example\n\n```javascript\nplayer.onPlayFinish = () => {\n    // finished\n};\n```\n\n#### CacheDownload ####\n\n|  Callback param | Type | Default | Need | Desc | \n|  ----  | ----  | ---- | ---- | ---- |\n| cPts  | float64 | - | - | Cache process timestamp |\n\n* Example\n\n```javascript\nplayer.onCacheProcess = (cPts) => {\n    // console.log(\"onCacheProcess => \", cPts);\n};\n````\n\n#### CoverImageLoadFinished ####\n\n* Example\n\n```javascript\nplayer.onReadyShowDone = () => {\n    // console.log(\"onReadyShowDone\");\n    // to play\n};\n```\n\n#### CachingDecodeFrames ####\n\n* Example\n\n```javascript\nplayer.onLoadCache = () => {\n\t// caching frames\n};\n```\n\n\n#### CachingDecodeFinished ####\n\n* Example\n\n```javascript\nplayer.onLoadCacheFinshed = () => {\n    // cache finished\n};\n```\n\n#### OpenFullScreenEvent ####\n\n* Example\n\n```javascript\nplayer.onOpenFullScreen = () => {\n    // todo\n};\n```\n\n#### CloseFullScreenEvent ####\n\n* Example\n\n```javascript\nplayer.onCloseFullScreen = () => {\n    // todo\n};\n```\n\n#### CallbackPlayState ####\n\n* Example\n\n```javascript\nplayer.onPlayState = (state) => {\n    // state\n    // true: playing / false: paused\n};\n```\n\n<br>\n\n### PlayerAPIDocument ###\n\n#### BuildPlayer ####\n\n> After【set player config】和【bind events】\n\n* Example\n\n```javascript\nplayer.do();\n```\n\n<br>\n\n#### GetPlayerPlayStatus ####\n\n|  Function | Return | Desc |\n|  ---- | ----  | ---- |\n| isPlaying() | bool | play status |\n\n* Example\n\n```javascript\nif (player.isPlaying()) {\n\t// now is playing\n} else {\n}\n```\n\n<br>\n\n#### StartPlay ####\n\n|  Function | Return | Desc |\n|  ----  | ----  | ---- |\n| play()  | - | Start play |\n\n* Example\n\n```javascript\nplayer.play();\n```\n\n<br>\n\n#### Pause ####\n\n|  Function | Return | Desc |\n|  ----  | ----  | ---- |\n| pause()  | - | Pause |\n\n* Example\n\n```javascript\nplayer.pause();\n```\n\n<br>\n\n#### SetRenderCallbackYuvFrame ####\n\n> After open，you can use `onRender` Event\n\n|  Function | Return | Desc |\n|  ----  | ----  | ---- |\n| setRenderScreen(`{param1}`)  | - | Open/Close : Render callback YUV Frame data |\n\n* Param\n\n|  Param | Type | Default | Desc |\n|  ----  | ---- | ----  | ---- |\n| param1 | bool | false | Open/Close : Render callback YUV Frame data |\n\n* Example\n\n```javascript\n// Open\nplayer.setRenderScreen(true);\n// Close\nplayer.setRenderScreen(false);\n```\n\n<br>\n\n#### Seek ####\n\n|  Function | Return | Desc |\n|  ----  | ----  | ---- |\n| seek(`{pts}`)  | - | Seek to any timestamp |\n\n* Params\n\n|  Param | Type | Default | Desc |\n|  ----  | ---- | ----  | ---- |\n| pts | float64 | - | Seek to any timestamp |\n\n* Example\n\n```javascript\n// Seek to 10.01s\nplayer.seek(10.01);\n```\n\n<br>\n\n#### VolumeOption ####\n\n|  Function | Return | Desc |\n|  ----  | ----  | ---- |\n| setVoice(`{volume}`)  | - | volume value |\n\n* Params\n\n|  Param | Type | Default | Desc |\n|  ----  | ---- | ----  | ---- |\n| volume | float64 | - | Set value in `[0, 1.0]`, 0 is mute，1.0 is full |\n\n* Example\n\n```javascript\n// half\nplayer.setVoice(0.5);\n```\n\n<br>\n\n#### GetMediaInfo ####\n\n|  Function | Return | Desc |\n|  ----  | ----  | ---- |\n| mediaInfo()  | Object | Media file info |\n\n* Return Example\n\n```json\nmeta:\n\taudioNone: false // include audio stream\n\tdurationMs: 600000 // media duration(ms)\n\tfps: 25 // frame rate\n\tsampleRate: 44100 // audio sampleRate\n\tsize:\n\t\theight: 720\n\t\twidth: 1280\n\tvideoCodec: 0 // 0:HEVC/H.265 1:Others Codec\n\tisHEVC: true // video is HEVC Codec\nvideoType: \"vod\" // vod or live\n```\n\n* Example\n\n```javascript\nlet mediaInfo = player.mediaInfo();\n```\n\n<br>\n\n#### OpenFullscreen ####\n\n|  Function | Return | Desc |\n|  ----  | ----  | ---- |\n| fullScreen()  | - | open fullscreen |\n\n* Example\n\n```javascript\nplayer.fullScreen();\n```\n\n<br>\n\n#### ExitFullscreen ####\n\n|  Function | Return | Desc |\n|  ----  | ----  | ---- |\n| closeFullScreen()  | - | exit fullscreen |\n\n* Example\n\n```javascript\nplayer.closeFullScreen();\n```\n\n<br>\n\n\n#### nextframe ####\n\n|  Function | Return | Desc |\n|  ----  | ----  | ---- |\n| playNextFrame()  | true/false | play next frame |\n\n<br>\n\n#### setplayrate ####\n\n| Function | Return | Desc |\n|  ----  | ----  | ---- |\n| setPlaybackRate(rate)  | true/false | 设置倍速 默认1.0 |\n\n* 示例\n\n```javascript\nh265Object.setPlaybackRate(0.5);\n```\n\n<br>\n\n#### getplayrate ####\n\n| Function | Return | Desc |\n|  ----  | ----  | ---- |\n| getPlaybackRate()  | Double | 截取当前帧图像 |\n\n* 示例\n\n```javascript\nlet rate = h265Object.getPlaybackRate();\n```\n\n<br>\n\n#### resize ####\n\n| Function | Return | Desc |\n| ---- | ---- | ----|\n| resize(width, height) | true/false | resize |\n\n<br>\n\n#### snapshot ####\n\n|  Function | Return | Desc |\n|  ----  | ----  | ---- |\n| snapshot()  | - | Snapshot frame |\n\n* Example\n\n```javascript\nconst snapCanvas = document.getElementById(\"snapshot-player\"); // create canvas\nh265Object.snapshot(snapCanvas); // snapshot to canvas\n```\n\n<br>\n\n#### release ####\n\n| Function | Return | Desc |\n| ----  | ----  | ---- |\n| release()  | - | Release Player |\n\n* Example\n\n```javascript\nplayer.release();\n```\n\n<br>\n\n## 3、Others ##\n\n### Donate ###\n\n|  Wechat | Alipay | PayPal |\n|  ---- | ----  | ---- |\n| <img src=\"resource/donate/wechat.JPG\" height=\"500\"> | <img src=\"resource/donate/alipay.JPG\" height=\"500\"> | TODO |\n<br>\n\n### FFmpegSupportH265LiveEncode ###\n\n* Github: https://github.com/numberwolf/FFmpeg-QuQi-H265-FLV-RTMP\n\n<br>\n\n### TranscodeAndGet265CodecFileByFFmpeg ###\n\n* mp4\n\n```bash\nffmpeg -i input.mp4 \\\n-vcodec libx265 -pix_fmt \\\n-acodec aac -ac 2 -ar 44100 \\\n-preset medium -maxrate 1000k -bufsize 1000k \\\n-vtag hvc1 \\\n-movflags faststart \\\n-y video.mp4\n```\n\n* hls/m3u8 capture\n\n```bash\nffmpeg -f avfoundation -i 1:0 \\\n-q 4 -r 10 \\\n-filter_complex \"scale=1280:720\" \\\n-pix_fmt yuv420p \\\n-vcodec libx265 \\\n-ar 22050 -ab 64k -ac 1 -acodec aac \\\n-threads 4 \\\n-preset veryfast \\\n-f segment \\\n-segment_list test.m3u8 \\\n-segment_time 5 \\\n-y /Users/numberwolf/Documents/webroot/VideoMissile/VideoMissilePlayer/res/hls1/v-%03d.ts\n```\n\n* mpeg-ts\n\n```bash\nffmpeg -ss 20 -t 10 -i ./res/xinxiaomen.mp4 \\\n-vcodec libx265 -x265-params \"bframes=0:keyint=10\" -r 24 -filter_complex \"scale=720:1280\" -preset fast -maxrate 800k -bufsize 800k \\\n-acodec aac -ar 22050 -ac 1 \\\n-pix_fmt yuv420p \\\n-f mpegts -y ./res/veilside2.ts\n```\n\n<br>\n\n# UpdateLog #\n\n| Update | Content |\n| ---- | ---- |\n| Time | 2022/11/06 |\n| - | 0.Update |\n| Time | 2022/11/02 |\n| - | 0.Update WASM |\n| Time | 2022/10/22 |\n| - | 0.Support: Hard-Decode for FLV/HTTP-FLV/MP4 |\n| - | 1.Support: AVC with Mpeg-TS |\n| Time | 2022/09/13 |\n| - | 0.Fixed: AVC stream loop buffer error without autoplay |\n| Time | 2022/09/12 |\n| - | 0.Fixed: hevc url cannot play without text of \"http\" |\n| Time | 2022/08/24 |\n| - | 0.Feature: Safari with native player(version>13) |\n| Time | 2022/08/23 |\n| - | 0.Fixed: Buffer Progress with AVC |\n| Time | 2022/08/13 |\n| - | 0.Support: Resize |\n| Time | 2022/07/27 |\n| - | 0.Support: PlayBackRate |\n| Time | 2022/07/12 |\n| - | 0.Fixed some problem |\n| Time | 2022/07/06-10 |\n| - | 0.Support g711u (http-flv) |\n| - | 1.Fixed: HTTP-FLV(AVC) without Audio |\n| Time | 2022/07/01 |\n| - | 0.Feature: HTTP-FLV(Without audio) Stream Performance optimizing |\n| Time | 2022/06/27 |\n| - | 0.Fixed: problem with hls parser |\n| Time | 2022/06/26 |\n| - | 0.Support g711a (http-flv) |\n| - | 1.Fixed 264(avc) flv error with mediainfo |\n| - | 2.Support Multi/Single Thread |\n| Time | 2022/05/18 |\n| - | 0.Support multi-thread decode |\n| - | 1.Support mp4's cache length config |\n| - | 2.Performance optimizing |\n| - | 3.This version is for Beta |\n| Time | 2022/05/09 |\n| - | 0.Suport play with Websocket 265 raw stream |\n| Time | 2022/05/07 |\n| - | 0.Fixed:MP4(VOD) retry error |\n| - | 1.Support:HEVC raw stream(VOD), create with url |\n| - | 2.Support:MKV format |\n| Time | 2022/04/21 |\n| - | 0.Performance optimizing |\n| Time | 2022/04/17 |\n| - | New Opensource Free Protocol <a href=\"LICENSE-Free_CN.MD\">CYL_Free-1.0 LICENSE-Free_CN.MD</a> |\n| Time | 2022/04/14 |\n| - | 0.Support Mov File |\n| - | 1.Support HTTP-FLV/HTTP-TS/HLS Autoplay |\n| - | 2.Performance optimizing of 1080P MP4(VOD) |\n| - | 3.Retry of mp4 sniff action |\n| - | 4.Support AV1 |\n| - | 5.Support Play frame by frame |\n| - | 6.Support Video Frame Snapshot |\n| Time | 2022/03/28 |\n| - | 0.Support MPEG-PS(MPEG1) stream |\n| Time | 2022/03/02 |\n| - | 0.Fixed h264 FLV(LIVE) can not get resolution info with retry |\n| Time | 2022/01/17 |\n| - | 0.Fixed ISSUE of HLS 265 OOM Case https://github.com/numberwolf/h265web.js/issues/108  <img src=\"resource/mem-hls.jpg\" width=\"300px\"> |\n| - | 1.Fixed ISSUE of HLS Split Rules https://github.com/numberwolf/h265web.js/issues/105 |\n| - | 2.Add New Demo <a href=\"index-debug.html\">index-debug.html</a> |\n| - | 3.Fixed 10+playes of 264 play failed, stack overflow |\n| Time | 2021/12/31 |\n| - | 0.Add H.264 HTTP-FLV Retry after error |\n| Time | 2021/12/24 |\n| - | 0.Fixed H.264 HTTP-FLV Some Badcase with callback |\n| Time | 2021/12/19 |\n| - | 0.Fixed H.264 HLS Callback's problem |\n| Time | 2021/12/08 |\n| - | 0.Fixed Problem of H.264 MP4 onReadyShowDone Event |\n| Time | 2021/12/04 - In the small hours |\n| - | 0.Fixed http-flv 265 Render With crash |\n| - | 1.Fixed hls problem of fullscreen |\n| - | 2.Fixed some bugs |\n| Time | 2021/11/29 - Night |\n| - | 0.Fixed http-flv retry case and some bugs |\n| Time | 2021/11/25 - Night |\n| - | 0.Fixed httpflv/ws LIVE ignoreAudio problem |\n| Time | 2021/11/23 - Night |\n| - | 0.Fixed https://github.com/numberwolf/h265web.js/issues/90 |\n| Time | 2021/11/21 - In the small hours |\n| - | 0.Support Websocket-FLV (HEVC/H.265) |\n| - | 1.Support Websocket-TS (HEVC/H.265) |\n| - | 2.Support HTTP-TS (HEVC/H.265) |\n| Time | 2021/11/16 - Evening |\n| - | 0.First request, if no response and timeout, then retry 5 times |\n| Time | 2021/11/15 - Evening |\n| - | 0.HTTP-FLV auto retry when timeout with out packet.(7s) |\n| Time | 2021/11/14 - Evening |\n| - | 0.Add wasm file of 265mb version(can memory auto grow) |\n| - | 1.Add wasm file of 512mb version(can memory auto grow) |\n| Time | 2021/11/04 - Evening |\n| - | 0.Fixed: release many times with crash |\n| Time | 2021/10/26 - Evening |\n| - | 0.Fixed some bugs |\n| Time | 2021/10/24 - Evening |\n| - | 0.Support Codec of AVC/H.264's MP4/HLS/M3u8/FLV/HTTP-FLV play |\n| Time | 2021/10/18 - Evening |\n| - | 0.Add new example |\n| Time | 2021/10/16 - Evening |\n| - | 0.Fixed: HTTP-FLV: Mediainfo's codec fault value |\n| - | 1.Update example |\n| Time | 2021/10/14 - Evening |\n| - | 0.Fixed: Mediainfo's codec fault value |\n| Time | 2021/10/13 - Evening |\n| - | 0.The player compatible with WebIDE develop, split wasm(js) and h265web.js, need include wasm(js) as single |\n| Time | 2021/10/12 - Evening |\n| - | 0.Fixed: Support HTTP-FLV(HEVC) without fps param |\n| Time | 2021/10/09 - In the small hours |\n| - | 0.Support HTTP-FLV(HEVC) LIVE, CodecID=12 |\n| - | 0.MP4/FLV(VOD) performance optimizing of Seek operation(out of cache area) |\n| Time | 2021/09/27 - Evening |\n| - | 0.M3u8/MpegTS performance optimizing of Seek operation(out of cache area) |\n| Time | 2021/09/25 - In the small hours |\n| - | 0.HLS Live Fixed: Crash by OOM |\n| - | 1.HLS Live Fixed: MPEG-TS full path |\n| - | 2.HLS Live Fixed: Stop by lost stream a moment |\n| - | 3.HLS Live Fixed: Stop by unstable network |\n| Time | 2021/09/08 - Evening |\n| - | 0.Fixed: M3U8 Seek with Decode Failed |\n| - | 1.Fixed: Some MP4 Case |\n| - | 2.Config update, remove some options, make it auto set |\n| Time | 2021/09/07 - Evening |\n| - | 0.M3U8 Fixed: some error with parse mpegts file |\n| Time | 2021/09/07 - In the small hours |\n| - | 0.Bak Player Core - Fixed:MP4/FLV(VOD) Seek BUG can not seek to 0; And performance optimizing for play |\n| Time | 2021/08/15 |\n| - | 0.H265/HEVC Upgrade Raw Data Player for VOD/LIVE |\n| Time | 2021/07/18 |\n| - | 0.Upgrade: Player UI Style |\n| - | 1.Support: fullscreen & close fullscreen |\n| - | 2.Add Event: open/close fullscreen |\n| Time | 2021/07/11 |\n| - | 0.Fixed: The player compatible with ZLMediaKit + HUAWEI HoloSens Camera LIVE Stream |\n| Time | 2021/07/04 |\n| - | 0.Fixed: <a href=\"https://github.com/numberwolf/h265web.js/issues/58\">`ISSUE#58`</a> (When default player-core's status is caching-frames, can not pause video) |\n| Time | 2021/07/01 |\n| - | 0.Add example and package.json file |\n| Time | 2021/06/27 |\n| - | 0.Open Source! |\n| - | 1.Support Seek in FLV |\n| - | 2.Fixed: Seek problems with bak player core mode |\n| - | 3.Add FLV type ,and do not need set player-core |\n| Time | 2021/05/30 |\n| - | 1.Fixed: Some problem with seek and play(Important) |\n| - | 2.Feature: Event/Callback of Video's cover image load finished |\n| Time | 2021/05/24 |\n| - | 1.FLV VOD Play(In the bak player core mode) |\n| Time | 2021/05/21 |\n| - | 1.HLS(LIVE:No audio)performance optimizing |\n| Time | 2021/05/18 |\n| - | 1.HLS(LIVE) performance optimizing and add Audio |\n| Time | 2021/05/16 |\n| - | 1.MP4(VOD) Fixed:BD265 Mp4 box badcase |\n| Time | 2021/05/15 |\n| - | 1.Fixed: HLS Play(LIVE) |\n| Time | 2021/04/27 |\n| - | 1.Fixed: Some video playing with gray block(mosic) |\n| - | 2.Fixed: Some video when playing first gop with gray block(mosic) |\n| Time | 2021/04/22 |\n| - | 1.Bak player core mode(test) support: seek |\n| - | 2.Bak player core mode(test) support: yuvj420p |\n| - | 3.Others |\n| Time | 2021/04/12 |\n| - | 1.Fixed bug: Some video(encode hev) play failed |\n| - | 2.Fixed bug: Some video(nalu unstandard) play failed |\n| - | 3.Fixed bug: Some video play error with mosic |\n| Time | 2021/04/07 |\n| - | 1.Fixed duration error |\n| Time | 2021/03/28 |\n| - | 1.Add cache process event |\n| - | 2.Fixed some bugs |\n| - | 3.Remove HLS Log |\n| - | 4.Play without audio optio(New Core) |\n| Time | 2021/03/14 |\n| - | 1.Bak player core mode: Fixed: render of bytes align |\n| Time | 2021/03/12 |\n| - | 1.Sorry my friends, I was too tired to make a mistake with hls feature... Now I have fixed it. ~_~! |\n| Time | 2021/03/06 |\n| - | 1.Bak player core mode, Fixed: multi-stream play badcase |\n| Time | 2021/02/28 |\n| - | 1.Add function to feed 265 nalu-frame `append265NaluFrame(nalBuf);` |\n| - | 2.Add new library to parse 265 stream [raw-parser.js](./dist/raw-parser.js) |\n| Time | 2021/02/21 |\n| - | 1.New SDK Project for H.265/HEVC decoder - [https://github.com/numberwolf/h265web.js-wasm-decoder](https://github.com/numberwolf/h265web.js-wasm-decoder) |\n| Time | 2021/02/18 |\n| - | 1.Bak player core mode support play with audio |\n| Time | 2021/02/08 |\n| - | 1.Bak player core mode (beta version , do not support play audio and seek. Make your mp4's moov box front of the mdat) |\n| Time | 2021/01/04 |\n| - | 1.Player Support Hevc file|\n| - | 2.Player Support Hevc stream|\n| - | 3.Remove Play/Pause Mask |\n| - | 4.Add Event:`onPlayFinish`, called when play video finished |\n\n\n<hr>\n\n\n\n\n\n\n\n\n\n"
        },
        {
          "name": "dist-multi-thread",
          "type": "tree",
          "content": null
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "example_normal",
          "type": "tree",
          "content": null
        },
        {
          "name": "example_vue2",
          "type": "tree",
          "content": null
        },
        {
          "name": "example_vue3",
          "type": "tree",
          "content": null
        },
        {
          "name": "example_vue3_vite",
          "type": "tree",
          "content": null
        },
        {
          "name": "index-debug.html",
          "type": "blob",
          "size": 14.6357421875,
          "content": "<!DOCType html>\n<!--\n/*********************************************************\n * LICENSE: LICENSE-Free_CN.MD is CYL_Free-1.0\n *\n * Author: Numberwolf - ChangYanlong\n * QQ: 531365872\n * QQ Group:925466059\n * Wechat: numberwolf11\n * Discord: numberwolf#8694\n * E-Mail: porschegt23@foxmail.com\n * Github: https://github.com/numberwolf/h265web.js\n *\n * 作者: 小老虎(Numberwolf)(常炎隆)\n * QQ: 531365872\n * QQ群: 531365872\n * 微信: numberwolf11\n * Discord: numberwolf#8694\n * 邮箱: porschegt23@foxmail.com\n * 博客: https://www.jianshu.com/u/9c09c1e00fd1\n * Github: https://github.com/numberwolf/h265web.js\n *\n **********************************************************/\n-->\n<html>\n<head>\n    <link href=\"/favicon.ico\" rel=\"icon\" type=\"image/x-icon\" />\n    <meta charset=\"utf-8\">\n    <title>h265webjs - https://github.com/numberwolf/h265web.js</title>\n    <meta charset=\"utf-8\" name=\"author\" content=\"ChangYanlong\">\n    <meta charset=\"utf-8\" name=\"email\" content=\"porschegt23@foxmail.com\">\n    <meta charset=\"utf-8\" name=\"discord\" content=\"numberwolf#8694\">\n    <meta charset=\"utf-8\" name=\"github\" content=\"https://github.com/numberwolf/h265web.js\">\n\n    <script src=\"dist/missile.js\"></script>\n    <script src=\"dist/h265webjs-v20221106.js\"></script>\n\n    <!--<script src=\"dist-multi-thread/missile-multi-thread.js\"></script>\n    <script src=\"dist-multi-thread/h265webjs-v20221106.js\"></script>-->\n\n    <style>\n    </style>\n</head>\n<body>\n\n<div style=\"width:1190px;background-color: #e9e9e9;\">\n    <div style=\"width:100%; height:20px; background-color:blue; color:white;\">\n        Player Area\n    </div>\n    <div style=\"width:100%;height:360px;overflow:hidden;\">\n        <div id=\"glplayer\" style=\"width: 640px; height: 360px; background-color: #c9c9c9;float:left\">\n        </div>\n        <div style=\"width: 550px; height: 360px; float:left; background-color:black; overflow:hidden;\">\n            <div style=\"width:100%; height:25px; background-color:blue; color:white;\">\n                1. Input Play URL (Editable)\n            </div>\n            <!-- <input id=\"url-input\" style=\"width:100%; height: 20px; background-color: rgba(30,31,20,1); color:rgba(240,181,53,1);\" value=\"http://127.0.0.1/live/test.flv\"> -->\n            <input id=\"url-input\" style=\"width:100%; height: 20px; background-color: rgba(30,31,20,1); color:rgba(240,181,53,1);\" value=\"example_normal/hevc_test_moov_set_head_16s.mp4\">\n            \n            <!--<input id=\"url-input\" style=\"width:100%; height: 20px; background-color: rgba(30,31,20,1); color:rgba(240,181,53,1);\" value=\"http://flv.vaiwan.com/live/test.live.flv\">-->\n            </input>\n            <div style=\"width:100%; height:25px; background-color:blue; color:white;\">\n                2. Input Player Config (Editable)\n            </div>\n            <textarea id=\"config-input\" style=\"width:100%; height: 280px; background-color: rgba(30,31,20,1); color:rgba(240,181,53,1);\">\n{\n    \"player\": \"glplayer\",\n    \"width\": 640,\n    \"height\": 360,\n    \"token\" : \"base64:QXV0aG9yOmNoYW5neWFubG9uZ3xudW1iZXJ3b2xmLEdpdGh1YjpodHRwczovL2dpdGh1Yi5jb20vbnVtYmVyd29sZixFbWFpbDpwb3JzY2hlZ3QyM0Bmb3htYWlsLmNvbSxRUTo1MzEzNjU4NzIsSG9tZVBhZ2U6aHR0cDovL3h2aWRlby52aWRlbyxEaXNjb3JkOm51bWJlcndvbGYjODY5NCx3ZWNoYXI6bnVtYmVyd29sZjExLEJlaWppbmcsV29ya0luOkJhaWR1\",\n    \"extInfo\" : {\n        \"probeSize\" : 8192,\n        \"ignoreAudio\" : 0,\n        \"coreProbePart\" : 0.1,\n        \"autoPlay\" : false,\n        \"cacheLength\" : 50,\n        \"rawFps\": 24\n    }\n}\n            </textarea>\n        </div>\n    </div>\n\n    <hr>\n\n    <div style=\"width:100%;height: 200px; overflow: hidden\">\n        <div style=\"width:360px;height:200px;float:left;\">\n            <div style=\"width:100%; height:20px; background-color:blue; color:white;\">\n                SnapShot\n            </div>\n            <canvas id=\"snapshot-canvas\" style=\"width: 360px; height: 180px; background-color: #000000;\">\n            </canvas>\n        </div>\n        <div style=\"width:830px;height:200px;background-color:black;float:left;\">\n            <div style=\"width:100%; height:20px; background-color:blue; color:white;\">\n                Event Log\n            </div>\n            <div style=\"width:100%;height:170px;overflow: hidden;\">\n                <textarea disabled=\"disabled\" id=\"logger\" style=\"width: 300px; height: 170px; background-color: #000000; color:white; float:left\">\nevents\n--------------------</textarea>\n                <textarea disabled=\"disabled\" id=\"logger-cache\" style=\"width: 250px; height: 170px; background-color: #000000; color:white;float:left\">\ncache log</textarea>\n                <textarea disabled=\"disabled\" id=\"logger-pts\" style=\"width: 250px; height: 170px; background-color: #000000; color:white; float:left\">\npts log</textarea>\n            </div>\n        </div>\n    </div>\n\n    <hr>\n    <button style=\"background-color:blue;color:white;\" onclick=\"installPlayer()\">1.Install</button>\n    <button style=\"background-color:red;\" onclick=\"releasePlayer()\">2.Release</button>\n    |\n    <button onclick=\"playPausePlayer()\" id=\"play-button\" disabled>1.Play/Pause</button>\n    <button onclick=\"seekPlayer()\">2.Seek To 5s</button>\n    <button onclick=\"mutePlayer()\">3.Mute(Volume 0.0)</button>\n    <button onclick=\"unmutePlayer()\">4.Volume To 1.0</button>\n    |\n    <button onclick=\"fullscreenPlayer()\">1.Fullscreen</button>\n    |\n    <button onclick=\"nextFrame()\">1.Next Frame</button>\n    <button onclick=\"snapshot()\">2.Snapshot</button>\n    <button onclick=\"playrate(0.5)\">3.PlayRate 0.5</button>\n    <button onclick=\"resize(640, 200)\">resize640x200</button>\n\n    <hr>\n\n</div>\n\n<pre>\n--> 1.Install Player \n--> when [onReadyShowDone] happened \n--> 2.Play/Pause/Seek/Other operations\n--> 3.Release Player\n</pre>\n<a href=\"https://github.com/numberwolf/h265web.js\">https://github.com/numberwolf/h265web.js</a>\n\n    <script>\n        if((/Safari/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent))) {\n            alert(\"safari\");\n        }\n\n        const h265webURL = \"https://github.com/numberwolf/h265web.js\";\n        \n        var playerObj = null;\n        var loggerObj = document.getElementById(\"logger\");\n        var loggerCacheObj = document.getElementById(\"logger-cache\");\n        var loggerPtsObj = document.getElementById(\"logger-pts\");\n\n        function clear() {\n            window.STATICE_MEM_playerCount = -1;\n            window.STATICE_MEM_playerIndexPtr = 0;\n        } // end func clear\n\n        function releasePlayer() {\n            if (playerObj !== null) {\n                playerObj.release();\n                playerObj = null;\n                // log\n                loggerObj.value = h265webURL + \"\\r\\nRelease done!\";\n                document.getElementById(\"play-button\").setAttribute(\"disabled\", \"disabled\");\n            }\n        }\n\n        function installPlayer() {\n            clear();\n\n            const textarea_conf = document.getElementById(\"config-input\");\n            const textarea_conf_value = textarea_conf.value;\n            const config = JSON.parse(textarea_conf_value);\n            const play_url = document.getElementById(\"url-input\").value;\n\n            console.log(textarea_conf_value);\n            console.log(config);\n            console.log(play_url);\n\n            /*\n             *\n             *\n             * 1. create player object\n             *\n             *\n             */\n            playerObj = window.new265webjs(play_url, config);\n            /*\n             *\n             *\n             * 2. bind events\n             *\n             *\n             */\n            playerObj.onSeekStart = (pts) => {\n                loggerObj.scrollNewest(\"\\r\\nonSeekStart:\" + pts);\n            };\n\n            playerObj.onSeekFinish = () => {\n                loggerObj.scrollNewest(\"\\r\\nonSeekFinish\");\n            };\n\n            playerObj.onPlayFinish = () => {\n                loggerObj.scrollNewest(\"\\r\\nonPlayFinish\");\n            };\n\n            playerObj.onRender = (width, height, imageBufferY, imageBufferB, imageBufferR) => {\n                loggerObj.scrollNewest(\"\\r\\nonRender\");\n            };\n\n            playerObj.onOpenFullScreen = () => {\n                loggerObj.scrollNewest(\"\\r\\nonOpenFullScreen\");\n            };\n\n            playerObj.onCloseFullScreen = () => {\n                loggerObj.scrollNewest(\"\\r\\nonCloseFullScreen\");\n            };\n\n            playerObj.onSeekFinish = () => {\n                loggerObj.scrollNewest(\"\\r\\nonSeekFinish\");\n            };\n\n            playerObj.onLoadCache = () => {\n                loggerObj.scrollNewest(\"\\r\\nonLoadCache\");\n            };\n\n            playerObj.onLoadCacheFinshed = () => {\n                loggerObj.scrollNewest(\"\\r\\nonLoadCacheFinshed\");\n            };\n\n            playerObj.onReadyShowDone = () => {\n                loggerObj.scrollNewest(\"\\r\\nonReadyShowDone:【You can play now】\");\n                document.getElementById(\"play-button\").removeAttribute(\"disabled\");\n            };\n\n            playerObj.onLoadFinish = () => {\n                loggerObj.scrollNewest(\"\\r\\nonLoadFinish\");\n\n                playerObj.setVoice(1.0);\n                mediaInfo = playerObj.mediaInfo();\n                console.log(\"onLoadFinish mediaInfo===========>\", mediaInfo);\n                /*\n                meta:\n                    isHEVC: true\n                    durationMs: 144400\n                    fps: 25\n                    sampleRate: 44100\n                    size: {\n                        width: 864,\n                        height: 480\n                    },\n                    audioNone : false\n                videoType: \"vod\"\n                */\n                let codecName = \"h265\";\n                if (mediaInfo.meta.isHEVC === false) {\n                    loggerObj.scrollNewest(\"\\r\\nonLoadFinish is Not HEVC/H.265\");\n                    codecName = \"h264\";\n                } else {\n                    loggerObj.scrollNewest(\"\\r\\nonLoadFinish is HEVC/H.265\");\n                }\n\n                loggerObj.scrollNewest(\"\\r\\nonLoadFinish media Codec:\" + codecName);\n                loggerObj.scrollNewest(\"\\r\\nonLoadFinish media FPS:\" + mediaInfo.meta.fps);\n                loggerObj.scrollNewest(\"\\r\\nonLoadFinish media size:\" + mediaInfo.meta.size.width + \"x\" + mediaInfo.meta.size.height);\n\n                if (mediaInfo.meta.audioNone) {\n                    loggerObj.scrollNewest(\"\\r\\nonLoadFinish media no Audio\");\n                } else {\n                    loggerObj.scrollNewest(\"\\r\\nonLoadFinish media sampleRate:\" + mediaInfo.meta.sampleRate);\n                }\n\n                if (mediaInfo.videoType == \"vod\") {\n                    loggerObj.scrollNewest(\"\\r\\nonLoadFinish media is VOD\");\n                    loggerObj.scrollNewest(\"\\r\\nonLoadFinish media dur:\" + Math.ceil(mediaInfo.meta.durationMs) / 1000.0);\n                } else {\n                    loggerObj.scrollNewest(\"\\r\\nonLoadFinish media is LIVE\");\n                }\n            };\n\n            playerObj.onCacheProcess = (cPts) => {\n                loggerCacheObj.scrollNewest(\"onCacheProcess:\" + cPts);\n            };\n\n            playerObj.onPlayTime = (videoPTS) => {\n                if (mediaInfo.videoType == \"vod\") {\n                    loggerPtsObj.scrollNewest(\"onPlayTime:\" + videoPTS);\n                } else {\n                    // LIVE\n                }\n            };\n\n            /*\n             *\n             *\n             * 3. install player\n             *\n             *\n             */\n            playerObj.do();\n        } // end func installPlayer\n\n        function playPausePlayer() {\n            if (playerObj !== null) {\n                if (playerObj.isPlaying()) {\n                    loggerObj.scrollNewest(\"\\r\\nplayerObj.pause()\");\n                    playerObj.pause();\n                } else {\n                    loggerObj.scrollNewest(\"\\r\\nplayerObj.play()\");\n                    playerObj.play();\n                }\n            }\n        } // end func playPausePlayer\n\n        function seekPlayer() {\n            loggerObj.scrollNewest(\"\\r\\nplayerObj.seek(5)\");\n            if (playerObj !== null) {\n                playerObj.seek(5);\n            }\n        } // end func seekPlayer\n\n        function mutePlayer() {\n            loggerObj.scrollNewest(\"\\r\\nplayerObj.setVoice(0)\");\n            if (playerObj !== null) {\n                playerObj.setVoice(0);\n            }\n        } // end func mutePlayer\n\n        function unmutePlayer() {\n            loggerObj.scrollNewest(\"\\r\\nplayerObj.setVoice(1.0)\");\n            if (playerObj !== null) {\n                playerObj.setVoice(1.0);\n            }\n        } // end func unmutePlayer\n\n        function fullscreenPlayer() {\n            loggerObj.scrollNewest(\"\\r\\nplayerObj.fullScreen()\"); \n\n            if (playerObj !== null) {\n                playerObj.fullScreen();\n            }\n        }\n\n        function nextFrame() {\n            loggerObj.scrollNewest(\"\\r\\nplayerObj.playNextFrame()\"); \n            if (playerObj !== null) {\n                playerObj.playNextFrame();\n            }\n        }\n\n        function snapshot() {\n            const snapCanvas = document.querySelector(\"#snapshot-canvas\");\n            if (playerObj !== null) {\n                playerObj.snapshot(snapCanvas);\n                loggerObj.scrollNewest(\"\\r\\nplayerObj.snapshot\"); \n            }\n        }\n\n        function playrate(rate=1.0) {\n            console.log(playerObj.player.videoTag);\n            if (playerObj !== null) {\n                let ret = playerObj.setPlaybackRate(rate);\n                loggerObj.scrollNewest(\n                    \"\\r\\nplayerObj playrate:\" \n                    + ' ret:' + ret\n                    + ' tag:' + rate\n                    + ' res:' + playerObj.getPlaybackRate()); \n            }\n        }\n\n        function resize(w, h) {\n            if (playerObj !== null) {\n                let ret = playerObj.resize(w, h);\n                loggerObj.scrollNewest(\n                    \"\\r\\nplayerObj resize:\" \n                    + ' ret:' + ret\n                    + ' w:' + w\n                    + ' h:' + h); \n            }\n        }\n        \n\n        window.onload = function() {\n            if (loggerObj === null) {\n                loggerObj = document.getElementById(\"logger\");\n                loggerCacheObj = document.getElementById(\"logger-cache\");\n                loggerPtsObj = document.getElementById(\"logger-pts\");\n            }\n            loggerObj.scrollNewest = function(val) {\n                loggerObj.value += val;\n                loggerObj.scrollTop = loggerObj.scrollHeight;\n            };\n            loggerCacheObj.scrollNewest = function(val) {\n                loggerCacheObj.value = val;\n                //loggerCacheObj.scrollTop = loggerCacheObj.scrollHeight;\n            };\n            loggerPtsObj.scrollNewest = function(val) {\n                loggerPtsObj.value = val;\n                //loggerPtsObj.scrollTop = loggerPtsObj.scrollHeight;\n            };\n        }; // end onload\n    </script>\n</body>\n</html>\n\n\n\n\n\n\n"
        },
        {
          "name": "init.sh",
          "type": "blob",
          "size": 0.8984375,
          "content": "#!/bin/bash\n\nPLAYER_TEST_DIR=`pwd`\nPLAYER_TEST_DIR_DIST=\"$PLAYER_TEST_DIR/dist\"\nPLAYER_TEST_DIR_DIST_MULTI=\"$PLAYER_TEST_DIR/dist-multi-thread\"\nPLAYER_TEST_DIR_EXP_NORMAL=\"${PLAYER_TEST_DIR}/example_normal\"\nPLAYER_TEST_DIR_VUE3_VITE=\"${PLAYER_TEST_DIR}/example_vue3_vite\"\nPLAYER_TEST_DIR_VUE3=\"${PLAYER_TEST_DIR}/example_vue3\"\nPLAYER_TEST_DIR_VUE2=\"${PLAYER_TEST_DIR}/example_vue2\"\n\n\nrm -rf $PLAYER_TEST_DIR_EXP_NORMAL/dist\ncp -r $PLAYER_TEST_DIR_DIST $PLAYER_TEST_DIR_EXP_NORMAL/\n\nrm -rf $PLAYER_TEST_DIR_EXP_NORMAL/dist-multi-thread\ncp -r $PLAYER_TEST_DIR_DIST_MULTI $PLAYER_TEST_DIR_EXP_NORMAL/\n\nrm -rf $PLAYER_TEST_DIR_VUE3_VITE/public/dist\ncp -r $PLAYER_TEST_DIR_DIST $PLAYER_TEST_DIR_VUE3_VITE/public/dist\n\nrm -rf $PLAYER_TEST_DIR_VUE3/public/dist\ncp -r $PLAYER_TEST_DIR_DIST $PLAYER_TEST_DIR_VUE3/public/dist\n\nrm -rf $PLAYER_TEST_DIR_VUE2/public/dist\ncp -r $PLAYER_TEST_DIR_DIST $PLAYER_TEST_DIR_VUE2/public/dist\n"
        },
        {
          "name": "resource",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}