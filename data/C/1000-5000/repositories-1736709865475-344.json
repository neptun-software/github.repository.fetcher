{
  "metadata": {
    "timestamp": 1736709865475,
    "page": 344,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "gpac/gpac",
      "stars": 2854,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.4169921875,
          "content": "* text=auto\n\n*.c text\n*.cpp text\n*.h text\n*.ttx text\nMakefile text\n\n#unix\n*.sh text eol=lf\nconfigure text eol=lf\n\n#windows\n*.bat text eol=crlf\n*.sln text eol=crlf\n*.vcproj text eol=crlf\n*.vcxproj text eol=crlf\n*.dsp text eol=crlf\n*.dsw text eol=crlf\n\n#tests\ntests/media/xmlin4/input.txt text eol=crlf\ntests/media/xmlin4/input.xml text eol=lf\ntests/media/laser/*.xml text eol=lf\ntests/media/ttml/ebu-ttd_sample.ttml text eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.8701171875,
          "content": "\n*.o\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n.vscode\n*.userprefs\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n*.aps\n*.ncb\n*.opensdf\n*.sdf\n*.cachefile\n*~\n*.plg\n*.opt\n*.gcno\n*.gcda\n*.gcov\n*.DS_Store\n\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\n[Rr]eleases/\nx64/\nx86/\nbld/\n[Bb]in/\n[Oo]bj/\n__pycache__/\n*.py[cod]\n\n\n.DS_Store .AppleDouble .LSOverride\n\n*.class\n\n*.so\n*.dylib\n*.dll\n*.lai\n*.la\n*.a\n*.lib\n*.exe\n*.out\n*.app\n*.apk\n*.dmg\n*.gz\n*.deb\n\n.depend\n.deps/\n.dep\n\n#GPAC specific\nconfig.h\ninclude/gpac/revision.h\ninclude/gpac/revision.h.new\nextra_lib/\nconfig.mak\nconfigure-stamp\ngpac.pc\ntests/external_media/\ntests/results/\ntests/hash_refs/\n\nsrc/modules/**/*.dep\n*doxygen_warnings.txt\n*/nodejs/node_modules/\n*/nodejs/package-lock.json\napplications/deprecated/\n\n\n# nix output\nresult\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1171875,
          "content": "[submodule \"testsuite\"]\n\tpath = testsuite\n\turl = https://github.com/gpac/testsuite.git\n\tbranch = master\n\tignore = dirty\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 4.673828125,
          "content": "#changes for GPAC filters (0.9+) for travis CI: GPAC hosts its own buildbot for building on various platforms, running tests, coverage and safety checks\n#TravisCI is only used for checking sanity of PRs. Consequently:\n#- OSX and mingw no longer compiled\n#- linux only compiled for\n#  - mp4box and gpac static\n#  - release mode with mem tracking and gcov\n\nlanguage: c\ncompiler: gcc\nos:\n  - linux\n#  - osx\ndist: bionic\nservices:\n  - xvfb\n\nbefore_install:\n  - if [ \"$TRAVIS_OS_NAME\" == \"linux\" ]; then sudo apt-get -y update -qq ; fi\ninstall:\n  - if [ \"$TRAVIS_OS_NAME\" == \"linux\" ]; then sudo apt-get -y install build-essential fakeroot dpkg-dev devscripts ccache debhelper pkg-config g++ mesa-utils lcov ; fi\n  - if [ \"$TRAVIS_OS_NAME\" == \"linux\" ]; then sudo apt-get -y install -y zlib1g-dev libfreetype6-dev libjpeg62-dev libpng-dev libmad0-dev libfaad-dev libogg-dev libvorbis-dev libtheora-dev liba52-0.7.4-dev libavcodec-dev libavformat-dev libavutil-dev libswscale-dev libavdevice-dev libxv-dev x11proto-video-dev libgl1-mesa-dev x11proto-gl-dev libxvidcore-dev libssl-dev libjack-dev libasound2-dev libpulse-dev libsdl2-dev dvb-apps ; fi\n  - if [ \"$TRAVIS_OS_NAME\" == \"linux\" ]; then sudo apt-get -qq -y install time; fi\n#  - if [ \"$TRAVIS_OS_NAME\" == \"linux\" ]; then sudo apt-get -y install -y gcc-mingw-w64-i686 g++-mingw-w64-i686 binutils-mingw-w64-i686 gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 binutils-mingw-w64-x86-64 mingw-w64-x86-64-dev ; fi\n#  - if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then sudo chown -R \"$USER\":admin /usr/local; fi\n#  - if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then brew update; fi\n#  - if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then brew install gnu-time gnu-sed gnu-tar xz lcov ; fi\n#  - if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then brew install faad2 sdl freetype libvorbis theora openjpeg libmad xvid libogg spidermonkey ffmpeg ; fi\nenv:\n  - GPAC_CONFIGURE_OPTIONS=\"--prefix=build/mp4box --enable-debug --static-bin\" GPAC_CONFIGURE_ECFLAGS=\"\" DOINSTALL=\"make install\" DOTRAVIS=\"\"\n  - GPAC_CONFIGURE_OPTIONS=\"--enable-debug --static-modules\" GPAC_CONFIGURE_ECFLAGS=\"\" DOINSTALL=\"\" DOTRAVIS=\"\"\n  - GPAC_CONFIGURE_OPTIONS=\"--enable-debug --static-build\" GPAC_CONFIGURE_ECFLAGS=\"\" DOINSTALL=\"\" DOTRAVIS=\"\"\nmatrix:\n  include:\n    - os: linux\n      before_script:\n        #git submodule update is called by travis, just checkout filter branch\n        - \"git -C ./testsuite checkout filters\"\n        - xvfb-run -e /dev/stdout --auto-servernum --server-num=1 glxinfo # check glx status\n      env: GPAC_CONFIGURE_OPTIONS=\"--enable-mem-track --enable-gcov\" GPAC_CONFIGURE_ECFLAGS=\"\" DOINSTALL=\"sudo make install\" DOTRAVIS=\"make travis\" AUDIODEV=null\n\n#    - os: linux\n#      env: GPAC_CONFIGURE_OPTIONS=\"--prefix=build/x86_64-w64-mingw32 --enable-debug --static-bin --use-zlib=no --target-os=mingw32 --cross-prefix=i686-w64-mingw32- --extra-ldflags=-Lbuild/x86_64-w64-mingw32/lib\" GPAC_CONFIGURE_ECFLAGS=\"-Ibuild/x86_64-w64-mingw32/include -w -fPIC\" DOINSTALL=\"\" DOTRAVIS=\"\"\n#    - os: linux\n#      env: GPAC_CONFIGURE_OPTIONS=\"--prefix=build/x86_64-w64-mingw32 --enable-debug --static-bin --use-zlib=no --target-os=mingw32 --cross-prefix=x86_64-w64-mingw32- --extra-ldflags=-Lbuild/x86_64-w64-mingw32/lib\" GPAC_CONFIGURE_ECFLAGS=\"-Ibuild/x86_64-w64-mingw32/include -w -fPIC\" DOINSTALL=\"\" DOTRAVIS=\"\"\n#    - os: linux\n#      env: GPAC_CONFIGURE_OPTIONS=\"--prefix=build/all --enable-debug --disable-all\" GPAC_CONFIGURE_ECFLAGS=\"\" DOINSTALL=\"make install\" DOTRAVIS=\"\"\n#    - os: linux\n#      env: GPAC_CONFIGURE_OPTIONS=\"--enable-debug --use-js=no --use-mad=no --use-xvid=no --use-ogg=no --use-vorbis=no --use-theora=no --use-openjpeg=no --disable-streaming --disable-isoff-frag --disable-isoff-hint --disable-isoff-write --disable-loader-xmt --disable-loader-bt --disable-loader-isoff --disable-scene-encode --disable-mcrypt --disable-od-dump --disable-scene-dump --disable-scene-stats --disable-swf --disable-export --disable-import --disable-m2ps --disable-ogg -disable-avi --disable-qtvr --disable-seng --disable-smgr --disable-x3d --disable-3d --disable-ssl --disable-jack --disable-pulse --use-a52=no --disable-odf --disable-isoff --disable-m2ts-mux --disable-dvbx --disable-saf --disable-vobsub --disable-ttxt --disable-od-parse --disable-atsc\" GPAC_CONFIGURE_ECFLAGS=\"\" DOINSTALL=\"\" DOTRAVIS=\"\"\n#    - os: osx\n#      env: GPAC_CONFIGURE_OPTIONS=\"--enable-mem-track\" GPAC_CONFIGURE_ECFLAGS=\"\" DOINSTALL=\"sudo make install\" DOTRAVIS=\"\" AUDIODEV=null\nscript:\n  - ./configure --extra-cflags=''\"$GPAC_CONFIGURE_ECFLAGS\"'' $GPAC_CONFIGURE_OPTIONS && make && $DOINSTALL && ( if [ -n \"$DOTRAVIS\" ]; then xvfb-run -e /dev/stdout --auto-servernum --server-num=1 --server-args=\"-screen 0 1024x768x24\" $DOTRAVIS ; fi )\n\nnotifications:\n  email:\n    recipients:\n      - travisci@gpac.io\n\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 25.80859375,
          "content": "\t\t  GNU LESSER GENERAL PUBLIC LICENSE\n\t\t       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n     59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\f\n\t\t  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n  \n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\f\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\f\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\f\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\f\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\f\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n\n\n"
        },
        {
          "name": "Changelog",
          "type": "blob",
          "size": 69.6923828125,
          "content": "# Ongoing: GPAC 2.5-DEV\n\n## gpac\n- Added mode for testing defered graph linking apps\n- Introduce unit tests in complement to the testsuite and various buildbot continuous checks\n- main can now return filter session error code using -rv\n\n## Emscripten\n- Fixes in UI\n\n## Filters\n- DVB-I MABR flute aux and demux\n- avmix playlists now accept ipid:// urls to locate input pics, allowing to specify playlists independently from source URLs\n- SCTE-35, id3, and other markers improved support\n\n## Misc\n- Added packet reordering rule for netcap replay from file\n- Added libcurl as backend for GPAC downloader - http(s) downloads require -curl option to activate \n\n#04/2024: GPAC 2.4\n\n## Emscripten|WebAssembly(WASM) support\n- Session can run in worker or in main browser loop\n- Automatic disable of ffdec and ffenc threads when not running in worker\n- Use fetch() api for downloader\n- Support for WebCodecs\n- Support for getUserMedia and canvas readable streams\n- gpac.html demo page\n\n## Media Formats\n- Fixes in text subtitle converters\n- Improved DolbyVision muxing from mkv\n- Dasher support for inputs with multiple stsd entries\n- Allow multiplexed representations for LL-HLS\n- Improved eac3 support\n- QT cmov support (reading and writing)\n- QT lpcm support\n- Improved chaptering support\n- Improved timecode inspection\n- Support for big-endian PCM formats\n- Support for uncv (raw video in mp4 and heif)\n- Support for forced subtitles\n- Support for HEVC bitstreams merging in dash (for multi-res tile adaptation)\n \n## Filters\n- Async HTTP request in all filters\n- JS/Python/NodeJS bindings for httpout server\n- Fixed CORS and mime types in httpout for wasm and sharedArrayuffer support\n- Allow compilation without threads\n- Allow compilation without network\n- Fixed GF_FileIO for async read and write modes\n- Added seeking in mp4dmx in mem mode\n- vout updated to use VBO (required for gles2)\n- libcaca video output support\n- Allow ffdmx to work as demux filter on gpac input file pids\n- GHI format for pre-indexing DASH/HLS session for JIT packaging/encryption/transcode\n- Zero-copy for mp4dmx and fragmented mp4mx\n- Various speed optimizations (filter session, isomedia lib, disk io, xml)\n- Allow running the session without mutexes\n- Closed Caption decoding filter (CEA708)\n- MPEG-H decoder using IIS mpeghdec\n- Templating for property assignment \n- Conditional filter replacement to identify based on codecID \n- Per-filter logging\n\n## MP4Box\n- Add track reordering option\n\n## Misc\n- Migrated doc from github's wiki to wiki.gpac.io\n- FFmpeg 7 support\n- Added features for configure (vout, aout, fonts, doc, evg)\n- Allow specifying network interface by name or IP (instead of IP only)\n- UDP/TCP filtering and recording to / playback from pcap, pcapng and GPAC gpc files\n- Added Nix and Docker build files\n- many bug fixes, improvements and security patches\n\n\n# 19/12/2022: GPAC 2.2\n\n## Media Formats\n- 2-pass encoding for FFmpeg codecs other than libx264\n- Conversion filters for VTT, TXG3 and TTML\n- SubstationAlpha subtitle import (basic)\n- DVB subpictures in M2TS mux and demux\n- FFmpeg (mostly for Matroska) subtitle import and export (SRT/SSA to TX3G, TX3G to SRT, WebVTT and DVB subpictures)\n- EC3+Atmos signaling support\n- ALAC support\n- Improved DolbyVision muxing\n\n## Media player\n- Subtitle delay and position adjustment\n- Audio delay adjustment\n\n## MP4Box\n- Allow numbers and media types as identifiers for track actions\n- dlba option to update atmos+ec3 signaling\n\n## Filters\n- UTC-based range extraction in reframer\n- Thumbnail generator filter\n- Added unframer filter\n- FFmpeg bitstream filters support\n- Initseg support in mp4dmx filter\n- Access to GPU textures of decoders in Python and JSF bindings (glpush filter for tests)\n- Chapters editing and original timestamp dispatch in reformer range extraction \n- Dual in-band and out-of-band parameter set support in dasher\n- Non-blocking IO for RTSP and HTTP servers/clients\n- RTSP over HTTP in rtsp server\n- Source-Specific multicast for udp and rtp inputs\n- User Authentication for HTTP and RTSP servers\n- TLS support for RTSP client and server\n- Per-filter buffering options\n\n## Encryption\n- ClearKey support in dasher and decryption\n\n## Misc\n- QT metadata tags in MP4Box and qt muxer \n- Support for some packet properties in URL templates\n\n## DEPRECATED\n- Removed GF_Terminal API\n- Removed MP4Client, merged old behaviour in gpac -mp4c\n- Removed osmo4ios, direct compilation of gpac is now used on iOS\n- Removed Android Osmo4 and MP4Box, replaced by GPAC for Android which can run GUI as well as MP4Box and gpac command lines\n- Removed filemode option from dash demure\n\n\n# 22/02/2022: GPAC 2.0\n\n## Adaptive Streaming\n- Low Latency HLS (LL-HLS, generation and playback)\n- Custom forwarding modes of DASH reader, allowing for example to encrypt/decrypt a live DASH/HLS session\n- DASHing now possible using inband cues (generated by flist, dashin or dasher filters)\n- Cue-generation only mode for dasher\n- HLS/DASH signaling of intra-only representations\n- playback improvements for SRD (HEVC tiling and independent streams)\n- CMAF-compatible signaling\n- PPS injection for inband parameter set modes\n- Improved SmoothStreaming support\n- DASH period continuity support (from playlists or reframer)\n- DASH MPD Chaining support\n- Text segments in native format (WebVTT, TTML) in dasher\n- User tags injection for HLS master and variant playlists\n\n## Image File Format (HEIF)\n- Grid creation and other derived images\n- Encryption\n- Time range in -add-image\n- Item to sample data reference (no copy)\n- Item to item data reference (no copy)\n- Generic auxiliary image tagging\n- Image replacement in HEIF collection\n- AV1 (AVIF) and VVC support\n\n## MP4Box\n- In-place editing (no file remultiplexing) \n- Improved splitting, including sample-accurate split\n- ISOBMFF edit lists modification through :edits and -edits options\n- Track extraction from non ISOBMFF sources in MP4Box\n- Most import options can now be applied on an existing ISOBMF file or track\n- Multiple filter chains per source in -dash or -add modes\n- Chunk interleaving dumper\n\n## Filters\n- Simplified gpac command line (backward compatible syntax) avoiding links directives for common cases\n- Added avmix, a playlist-based audio video mixer/compositor with GPU or software rendering\n- Python bindings for filter session\n- NodeJS bindings for filter session\n- Custom HAS adaptation algorithms (JS, Python and NodeJS)\n- Custom Remotery callbacks (JS, Python and NodeJS)\n- Added avgen, a simple counter generation\n- Splicing support in playlists: raw and compressed domain, vod and live splicing\n- Tile splitting now available as a filter \n- Added restamp, a stream timestamp rewriter filter\n- Added bssplit and bsagg, compressed bitstream splitter and aggregator filters\n- Aspect ratio support in rescaler (ffsws)\n- Raw (uncompressed) modes for flist and reframer\n- Flip and rotate in vout\n- Simple UI for vout to test seeking and speed modes\n- Improved color space support in rendering (OpenGL only)\n- Improved round-trip audio decode\n- Improved audio resampler\n- Added back old arch compositor features (TEMI support, HEVC tiling JS monitoring, MPEG-4 SegmentDescriptor) \n- Reading back frame interface data (GPU, decoder mem) in JS or Python sink filters\n- Memory storage in httpout server file sink\n- FileIO wrapper available in QJS, Python and NodeJS\n\n## Protocols\n- HTTP/2 (client and server) through nghttp2\n- ROUTE multiplexer and low-latency ROUTE (mux and demux)\n\n## Media Formats\n- Improved MPEG-H audio mux/demux/dashing\n- VVC parsing, inspecting, mux/demux (ISOBMFF, M2TS), RTP, DASH and encryption\n- VUI color info rewrite for AVC, HEVC and VVC (mp4box and bsrw filter)\n- Dolby TrueHD\n- DolbyVision muxing\n- Improved multichannel AAC (>=8) support \n- Improved raw video in ISOBMFF support\n- Bitstream dumping for inspect analyze mode\n- Improved TTML support: metrics, image embedding (IMSC1), TTML sample merging while exporting, subtitle zero in TTML\n- YouTube VR meta-data\n- yuv4mpeg format read/write\n- Extended NHML syntax for properties, reconfiguration, subsamples and sample auxiliary data\n\n## Encryption\n- Multi-key per sample encryption\n- HLS full segment encryption and decryption\n- Per-segment or per-period key roll\n- Master/leaf key schemes\n\n## Misc\n- Improved HTTP rate limiter and chunk-transfer rate estimator\n- Cleanup of mod-dirs and js-dirs usage, JS filters can now be included in the default available filters\n- Support for windows long path\n- Moved to latest QuickJS (2021-03-27)\n- Added QJS-libc modules, support for exec/waitpid/kill and Workers on most platforms\n- Support for FFmpeg 4.4 +\n- many bug fixes, improvements and security patches\n\n\n# 10/09/2020: GPAC 1.0.1\nThis release fixes build and installation issues in 1.0.0, as well as various bugs introduced during the migration to the filters architecture.\n\nIt also adds several small features:\n- better ttml import\n- better support for MPEGH audio\n- support fur DASH UTCTiming\n- manifest generation from pre-fragmented DASH/HLS mp4\n- speed optimization in isobmf reading (normal and fragmented)\n- improved JS API for the filter session\n- core tools exposed as JS module (file io, bitstream, etc ...)\n- android fixes\n\n# 16/06/2020: GPAC 1.0\n - Complete rewrite of GPAC streaming core:\n    * addition of a filter-based architecture, used by MP4Client and MP4Box.\n    * moving all decoders and demuxer plugins of MP4Client and most of MP4Box import/export code as filters for this new architecture,\n    * moving DASH/HLS segmenter to a filter\n    * moving MP4Client compositor and most of the GF_Terminal internals to a filter\n    * addition of a new application gpac, whose only purpose is to create and run filter chains\n    * removal of MP42TS and DashCast applications since these functionalities are provided by gpac\n    * deprecation of some features (widget management, MSE draft implementation for SVG media, UPnP, TEMI player support).\n- Profile system allowing to override through a static file default options of all filters and libgpac core\n- Alias system for gpac app to simplify your command lines\n- Enhanced DASHer:\n    * Support for HLS and dual HLS / DASH generation\n    * Support for any input\n    * True low-latency mode for DASH\n    * Support for multiple periods\n    * Support for other segment formats (raw, mkv, webm currently tested)\n- Input and outputs\n    * Generic pipe, TCP, UDP, and Unix Domain socket input and output\n    * RTSP server output\n    * HTTP output (client and server), supporting low latency DASH access\n    * Ad-hoc stream format called GSF to allow serialization to file, pipe or socket of a session (for distributed filter chains), supporting AES-128 CBC encryption.\n- Raw audio (PCM) and video (RGB, YUV) reframers and exporters\n- HEVC tile splitting and merging filters\n- Compositor is a standalone filter (SVG/BIFS/VRML graphics in a filter chain)\n- Image encoding support through libjpg and libpng\n- Full FFmpeg support:\n    * Encoding/decoding through FFmpeg libavcodec\n    * Multiplexing/demultiplexing through FFmpeg libavformat\n    * Device grabbers through FFmpeg libavdevice\n    * Raw audio and video filters through FFmpeg libavfilter\n- Support for QuickJS (ES2002) and bindings for:\n    * Complete filter API\n    * GPAC software rasterizer (EVG)\n    * WebGL 1.0 Core\n    * XmlHttpRequest and uDOM APIs\n    * Storage\n- Inspect and analyze filter\n- MPEG-2 TS splitter\n- Video cropper filter with zero-copy mode\n- Video flip filter\n- Source concatenator filter\n- Simple audio and video output filters\n- Experimental audio and video rewinder filter\n- Encryption\n    * On-the-fly encryption and decryption, now available as filters\n    * Segment-based encryption and decryption\n- ISOBMFF \n    * box customization\n    * Better QT support, prores parsing and dumping\n    * Support for raw media (QT style or ISOBMFF for audio)\n    * Simplify HEIF batch conversion through item to track mapping\n    * Reading from pipes (fragmented or progressive files)\n    * Writing to packets rather than files\n    * Fast interleaved file creation mode with less storage requirements\n- FileIO wrapper for cases where files are not stored in a file system known by GPAC\n- Testing and Documentation\n    * Live doc generation (man and wiki)\n    * Improved coverage\n    * Split test suite as dedicated repo\n    * Moved all resource to https://wiki.gpac.io\n    * Started howto pages on wiki\n    * Many bug fixes\n\n27/06/2019: GPAC 0.8.0\n - General\n    * Many security fixes (static compile and fuzzing through AFL, always ongoing).\n    * Many bugs fixes\n    * Added :ncl option in log levels to disable color logs\n    * More tests and coverage\n - File Formats\n    * Better support of QTFF / ProRes files\n    * Support for AV1\n       - import and export\n       - source formats: OBUs (Section 5), IVF and AnnexB\n       - AV1 in HEIF\n    * Support for color (nclc, nclx and ICC profiles) in HEIF and ISOBMFF\n    * Support for HDR (mdcv, clli) info in HEIF and ISOBMFF\n    * Support for alpha in HEIF\n    * Support for enforcing pasp presence even for 1:1 ratios\n    * HEVC temporal sublayer split in MP4Box\n    * Allow meta storage before mdat for meta-only files (heif and co)\n    * Added option to keep AU delimiter in isobmff samples\n    * Support for opus import\n    * Support for pixi and ccst in HEIF\n    * DolbyVision 'dvcC' and partial 'dvhe' boxes for HDR\n    * Support for VP9 import and playback\n    * Sample dependency in avc and hevc importers, and track thinner for non-refs images\n    * Support for audio_roll signaling\n    * New audio import mode to control AudioSampleEntry creation (v0, v1 ISOBMFF, v1 QTFF)\n    * xHE-AAC import with detection of sync samples\n    * Added support for MPEG-H 3D audio boxes (no import yet)\n    * Handle Vobsub empty SPU packets\n    * Added auxv and pict support\n - Common Encryption\n    * Fully compliant CENC supporting cenc, cens, cbc1 and cbcs\n    * CENC for AV1\n    * Improved DASH+CENC support, pssh in MPD\n    * ForceClear mode for CENC to skip encryption without sample groups\n    * Made senc in movie fragments always stored before truns\n    * Added default values handling for cbcs and possibility to set protection system per track\n    * Compatibility with OpenSSL 1.1.x\n - Streaming and Adaptive Streaming\n    * Support for ATSC3.0 both US and Korean versions !\n    * Support for for live splices (xlink period insertions) in DASH client\n    * Automatic period continuity in DASH when no codec change between periods\n    * Added DASH cue-base segmentation (XML based) and -dsap option to generate cue files from source\n    * Support for BBA-0 and BOLA implementations\n    * Write fragment defaults in trex even when not using them\n    * Support for simple ssix for keyframe data byterange at the start of a segment\n    * Moved segment template at AdaptationSet level if only one representation\n    * Changed default bsmode in dasher if single input file\n    * Added init-seg-ext option\n    * Added -mvex-after-traks option to MP4Box when dashing for CMAF\n    * Added segmentation option to insert a tfdt per traf\n    * Added -closest mode for DASH segmentation\n    * Added -bound option to use audio segmenting method for video\n    * Renamed -dash-run-for to -run-for\n    * Added '=' in dash templates\n    * Improved bandwith estimation when using HTTP 1.1 chunk transfer\n    * Add option to force moof base offsets\n - MP4Box\n    * Added -catpl to concatenate from playlist in MP4Box\n    * Added options to set movie timescale at import and dash time\n    * Added mpd rip option and top-level box compressor in MP4Box\n    * Made -dts skip timing check and added -dtsc for that\n    * Made force-cat option more agressive\n    * Support for MovieFragmentRandomAccess using -mfra option\n    * Added -dtsx to dump timing without offset\n    * Added -dnalc opt for nal CRC dump\n    * Added chunk extraction up to time until end\n    * ISOBMFF single track import now removes references by default\n - Decoders\n    * Updated ffmpeg to 4.0.2\n    * Moved to openHEVC 3.0 API\n    * Added nvdec support (windows, linux) with reuse of decoder context for tiled VR\n    * Added HEVC support to mediacodec on android\n    * AV1 playback through ffmpeg\n    * Opus playback through ffmpeg\n - 3D, VR and 360\n    * Added vrhud for multiviewpoint 360\n    * Added forced visibility mode of tiles in VR\n    * Added tile visibility debug mode\n    * Added forced stereo output for openhevc\n    * Disable face nav if mouse grabbed\n    * Added simple face tracking vr navigation based on udp commands\n    * Added PSVR support\n    * Added mouse move emulation at window border to force sphere rotation when inactive\n    * Changed tile visibility algo to sample points in mesh\n - Players (Mobile and Desktop)\n    * Added about extension\n    * Added multiple audio objects in dynamic scene\n    * Added addon splicing of main content\n    * Added mosaic://v1:.:vN url support\n    * Added gaze simulation through mouse and gaze-sphere visibility test\n - Subtitles\n    * Allow * as argument of -srt|ttxt to dump all possible tracks (#925)\n    * Improved support for WebVTT import\n    * Improved support for WebVTT DASHing/fragmentation\n - Misc\n    * OSX install now done through PKG and modify PATH env in/etc/paths\n    * Added initial PMT version and disc marker to TS muxer\n    * Moved dektec output to matrix API, added SDI clipping\n    * Added temi periodic toggle and manual toggle in MP42TS\n\n# 26/04/2017: GPAC 0.7.1\n - Full changelog at https://github.com/gpac/gpac/releases/tag/v0.7.0\n - Many security fixes (static compile and fuzzing through [AFL](http://lcamtuf.coredump.cx/afl/), always ongoing)\n - Colorized log.\n - Fix pkg-config Private.libs.\n - Changed default audio volume to 100% instead of 75%.\n - Expose more experimental options through the [documentation](http://htmlpreview.github.io/?https://github.com/gpac/gpac/blob/master/doc/configuration.html).\n - Improved GLES renderer on mobile platforms \n - YUV422 and YUV444 8 and 10 bit support in GLES renderer \n - Improvements on AVI dump.\n - SAT>IP modified RTSP client.\n - Added L-HEVC File Format support (SHVC/MV-HEVC tracks and HEVC Tile Tracks).\n - Added MPEG IFF (image File Format) support.\n - Range extension support for AVC and HEVC.\n - SHVC and MV-HEVC importers and playback: moved to final spec version (SHM6+).\n - Support of HLS with fragmented MP4 playback.\n - APIs: gf_mpd_() functions and new segmenter API.\n - Improved alternate groups.\n - More support for PIFF PSEC and Smooth Streaming ( file format & playback).\n - DASH client: pluggable algorithms + improvements with scalable contents.\n - The counter source from the DASH sequences added to the public content.\n - HLS and DASH playback minor fixes.\n - Cleanup of DASH client logs.\n - Added support for DASH SRD in 360 for independent videos videos (NxM partial spheres) [more](https://gpac.io/2016/05/25/srd/)\n - Added support for DASH SRD in 360 for HEV Ctiled videos (NxM tiles on one sphere) - [checkout tuto](https://gpac.io/2017/02/01/hevc-tile-based-adaptation-guide/)\n - Apple VideoToolBox hardware decoding support for OSX and iOS for AVC|H264.\n - Android hardware decoding hardware acceleration for AVC|H264 (HEVC on its way).\n - Android build is based on Android Studio.\n - Android: new File Manager.\n - Import of TTML via NHML according to MPEG-4 part 30 improved.\n\n# 19/02/2016: GPAC 0.6.0\n  Many things added, improved and fixed - see https://github.com/gpac/gpac/releases/tag/v0.6.0\n\n# 25/05/2012: GPAC 0.5.0\n  - MPEG-DASH and Apple HLS support in GPAC Clients\n  - MPEG-DASH segmenter for ISO files and MPEG-2 TS in MP4Box\n  - MP42TS generator now supports HLS output\n  - Support for MPEG-U and W3C widgets\n  - UPnP and DLNA support in the player through Platinum libraries, interfaced in JavaScript\n  - Better support for AVC and SVC muxing in MP4\n  - Support for OpenSVC decoder\n  - Stereo and Multi-view renderer for auto-stereoscopic screens\n  - iOS and Android support (but Symbian support has been dropped)\n  - Camera input through \"camera://default\" URLs on Windows, OSX 32bit, Linux V4L v1 and Android \n  - experimental audio filters\n  - Better T-DMB support \n  - experimental DVB-MPE and DSM-CC support\n  - BIFS ExtendedCore2D profile support\n  - more work on GUI\n  - and many many fixes and improvements in players and MP4Box \n\n# 02/12/08: GPAC 0.4.5\n  - Support for AC3 in ISO Media, AC3 decoder (liba52) RTP hinting\n  - Support for MediaAccessEvent (spec still under development ??)\n  - Added support for user extensions (global class only) in JS through modules - cf gpac_js for sample code.\n  - Initial support for 3GPP DIMS (file creation and dumping + playback)\n      * Currently only SVG as overlay is supported for DIMS files, we are not sure about the specification on this topic\n      * RTP hinting /playback is not supported yet      \n  - Support for SVG foreignObject - all GPAC supported content can be played in a foreign object\n  - Added automatic switch between 2D and 3D context for VRML/BIFS Inline node \n  - Basic support for DCCI queries: \n    * the DCCI object is exposed in scripts as 'DCCIRoot'\n    * the related document can be specified in GPAC configuration file in the [General] section with the 'EnvironmentFile' key \n      pointing to an XML file to use as the ontology context\n    * DCCI's propertyFilters are NOT supported yet.   \n  - Added support for YCbCr OpenGL texturing (only tested with GL_MESA_ycbcr_texture)\n  - Fixed bugs in OSS audio (100% CPU usage when no audio to play) and ALSA (broken playback)\n  - Initial support for YUV overlays on Win32 and Linux (Needs XVideo) \n      * only one overlay at the moment\n      * Vector graphics /images can be drawn above the overlay if the video output supports dest color keying\n  - Changed 3D mesh object to be slightly more compact (colors and normal)\n  - Unified focus model for SVG and MPEG-4. MPEG-4 focus can only be used through tab/-tab (no north/east/.. navigation)\n      * The MPEG-4 focus is based on the groups (2D/3D) presenting interactive features (sensors)\n        * keyboard mapping for sensors is:\n            isOver triggered when focus moves in(isOver=TRUE) and out (isOver=FALSE)\n            isActive triggered when ENTER key is pressed (isActive=TRUE) and released (isActive=TRUE) \n            direction keys with or without SHIFT to simulate mouse move\n        * Layout node is considered as a sensor when scroll_rate is 0, so that the user can scroll the layout\n      * The focus is by default on the UA (GPAC), not on the content.              \n  - Added support for inplace text edition in SVGT and in MPEG4\n      * support for clipboard paste at current caret pos (win32, wxWidgets - no WinCE/symbian yet) \n      * VRML/MPEG4/X3D: this is not standard, enabled with \"EDITABLE\" present in text->fontStyle->styles. \n            Added because StringSensor does not allow for in-place editing of the string\n  - Added support for text selection in MPEG4 (non standard) / SVGT with clipboard copy (win32, wxWidgets - no copy for text+tspan - no WinCE/symbian yet)\n  - Better support for SVG <animation>, added support for SVG->svg linking (ElementID and svgView) and many svg fixes \n  - Added support for MPEG-4 over MPEG-2 TS in mp42ts (MPEG-4 SL in MPEG-2 PES)\n  - Added support for MPEG-4 AAC/LOAS/LATM/ over MPEG-2 TS for import in ISO Media and in the player. \n      Only basic DVB config is supported for LATM \n  - Fixed support for AVC/H264 over MPEG-2 TS import in ISO Media and in the player. Only one PPS/SPS is allowed \n  - Added support for offscreen GL rendering on symbian using PBuffers\n  - SVG fonts should now be quite stable, but does not support kerning\n  - Moved all Font modules to the new glyph-based architecture \n  - Moved SVG text to new glyph-based renderer, added support for OpenGL drawing and textured mode\n  - Added support for AVC/H264 in mp4_streamer\n  - Added support of MPEG-4 systems over MPEG-2\n  - Added extended version of \"-node\" switch in MP4Box, to get the list of possible nodes. For insatnce, \"MP4Box -node Anchor.children\"\n  - New glyph-based font manager\n  - Misc fixes in SVG rendering with OpenGL\n  - Renderer modules have been removed from GPAC. The new integrated 2D+3D renderer has been moved to libgpac and is now \n      called \"compositor\". Some renaming has been done in the process to clarify a bit some functions.\n      NOTE: EVC3 and MSVC8 projects have not been updated yet\n  - added support for TrackSelection (tsel) - (c) 2007 ENST & RresonateMP4 - cf MP4Box -h general\n  - added support for PASP in ISO files\n  - misc fixes in render_full module\n  - committed patch fixing VobSub extraction bug\n  - added support for http playback in ffmpeg demuxer\n  \n# 31/05/07: GPAC 0.4.4\n  - Added support for XMLHttpRequest for both VRML/MPEG-4 and SVG. All methods should be supported, but only GET/HEAD have been tested\n  - Added a basic subset of DOM Core for xml doc (XMLHttpRequest, SVG) and moved the uDOM implementation in it.\n  - Added support for SVG focus & navigation in 2D renderer\n  - new SVG scene graph implementation with much lower memory usage \n  - Updated LASeR to new SVG implementation and fixed many bugs in codec \n      current LASeR binary version should now be in sync with the latest spec (IS+COR, AMD still to be done)\n  - Added support for some LASeR tools:\n      - conditional\n      - clipBegin/clipEnd and syncReference on audio/video elements\n      - WARNING: \n          * other LASeR (non-SVG) v1 elements and all v2 elements are NOT supported\n          * LASeR save/restore and sendEvents are NOT supported\n          * SAF handling is likely not conformant yet          \n  - Moved default SVG implementation to dynamic attribute allocation\n  - ALSA output module\n  - DVB support for Linux - connection URL is dvb://ChannelName, cf doc/configuration.html\n  - Moved ISMA decryption to run-time module for basic DRM tests\n  - Added support for NAT Keep Alive (RTP streaming only)\n  - Two new test apps:\n      mp4_streamer: RTP unicaster/mulitcaster\n      mp42ts: MPEG-2 TS sample gateway, can output to file or to RTP. Supports ISO file and SDPs (RTP only, no RTSP) as input.\n  - Changed default behavior in MP4Box when adding AAC-SBR with explicit signaling: full SBR Samplerate is now used in media track.\n  - Added JP2 and MJP2 support for mux/demux and playback - latest version of openjpeg (1.1) used for decoding (Win32 only).\n        Win32 user: if you don't want to install openjpeg, remove GPAC_HAS_JP2 from img_in project settings\n  - large code rewrite in scenegraph and 2D renderer to lower memory usage\n  - added support for OMA DRM2 packaging in MP4Box (doc to come)\n  - Symbian OS now supported. Build instructions are in doc/INSTALL.symbian. Network is NOT working on symbian yet\n  - Major speed improvement of XML SAX parser\n  - added unthreaded mode in MP4Client (-no-thread switch) to test behavior on symbian\n  - added fullscreen startup mode in MP4Client (-fs switch)\n  - better handling of iTunes tags in MP4Box (set/get) and in players (title display)\n  - added support for multiple RTSP sessions in an SDP description\n  - added support for faked broadcast mode in SDP (forbids any timeline control by player except initial play/final stop)\n      syntax is (in media SDP section, per stream): a=gpac-broadcast:1\n  - added ffmpeg support for WinCE devices (ffmpeg for WinCE is available in gpac_extra_libs)\n  - added GPAC log system\n\n  - moved key/mouse event subsystem to DOM3 model \n  - Fixed handling of QT V1 and V2 audio descriptions\n  - Misc source code reorganization for RTP (depacketizers now in libgpac, no longer in plugins)\n  - Fixed support for IPV6 and for multicast (IPV4 and IPV6). Some issues remain with IPV6 on Win32 XP, so IPV6 is disabled by default on Win32\n  - Fixed handling of negative delays when adding/appending media tracks with MP4Box\n  - moved ffmpeg headers to latest CVS version (05/01/2007).\n  - fixes in MPEG2 TS import and demuxer\n  - added detection of FPS for raw AVC import when present\n  - fixed a display freezing bug in osmo4 for PocketPC 2003.\n  - added support for svg animation and svg use with external resources\n  - cleanup of MPEG-4 RemoteOD + support for segment identifiers at scene level\n  - some workarounds for iPod file producing (special UUID needed) (-ipod option, auto on for .m4a and .m4v extensions)\n  - added windowless mode on Win32: transparent background color is defined in the config file ( [Rendering] ColorKey )\n  - major speed improvements in MPEG-4/VRML scripts and SVG uDOM regarding node creation\n  - and a lot more bug fixes...\n\n# 21/07/06: GPAC 0.4.2\n  - commit of GPAX (GPAC ActiveX) - controller only works in IE and ActiveX control tester for now.\n  - API changes to Osmozilla to keep in sync with GPAX. Sample html file can be found in applications/GPAX.\n     - both plugin now support browser navigation (ie link to html within MPEG-4 content)\n     - Plugins can be used to modify the presentation from a parent HTML doc\n     - check sample files in regression tests for more details\n  - iTune tagging support, (patch from Andrew Voznytsa with slight modif). Tagging can be done with MP4Box -itags option. The tags are passed in a single string, separated by ':', formatted as 'tag_name=tag_value'. Supported tags names are: album, artist, comment, compilation, composer, created, disk, encoder, genre, name, tempo, track, tracknum, writer.\n     NOTE: to make sure you mp4 is importable on an iPod, you must:\n       - use .m4a extension\n       - specify the right brands: MP4Box -brand \"M4A \" -ab mp42\n     This process is automated in MP4Box for all file with extension .m4a\n  - added MPEG-1/2 raw importing (extensions: .m1v and .m2v).\n  - cleanup of all Makefiles: \n      no more recursive makes for libgpac\n      gpac can now be compiled outside the main source tree with gcc, eg $ ~/cvs/test>../gpac/configure\n  - Support for VobSub import and export (.idx) thanks to a great patch from Falco !\n  - initial version of MPEG-2 TS demuxer (MP4Box and client plugin)\n      program-based import for MPEG-2 TS streams (MP4Box -add file.ts#program=ProgName).\n  - initial IPV6 support\n  - MP42AVI is now deprecated. MP4Client can now be used to produce uncompressed bmp/raw/AVI, dumping the complete presentattion rather than just BIFS scenes (audio is currently not extracted). Usage:\n     MP4Client -bmp 1-2.5-3 file.mp4 take screenshots of file.mp4 aty T=1, 2.5 and 3 seconds\n     MP4Client -avi -fps 15.0 -size 176x144 file.mp4 produces an uncompressed AVI of resolution 176x144, framerate 15\n     MP4Client -avi 4-10 file.mp4 produces an uncompressed AVI of the scene between 4 and 10 seconds\n      Check MP4Client man page for more details.\n  - added support for major brand versioning in MP4Box: \"-brand GPAC:2\" will set the major brand to GPAC, with a version of 2.\n  - regression tests (.bt and .x3dv) are now part of GPAC source tree\n     changed all audio and video media in regression tests.\n  - added 2D/3D selection param for osmozilla: use3d=\"true\" or use3d=\"false\" to force renderer used.\n  - added support for importing AMR/SMV/EVRC file missing their magic number\n  - moved all language handling to both ISO 639-1 (2 char code) and 639-2 (3 char code), as 639-1 is used in SVG.\n  - removed old XML parser, all parsing now relies on a new GPAC SAX parser (avoid dependency on libxml when unneeded).\n    - support for progressive loading support for XMT and X3D files.\n    - new svg_in module using gpac sax parser (supports progressive loading too)\n    - cf configuration.html or man gpac for more info on progressive loading control\n  - added 'define' support in BT - to use it just do:\n     #define symbol blab labl a\n    and reuse the symbol in the BT text. This may be quite buggy, but it can be useful\n  - support for Scene Carousel in hinters, core and rtp reassembler. Currently only BIFS and BIFS+AV can be use the scene carousel, carouseling of \n    static data (eg images) is not supported. The OD data must be embedded in the IOD a la ISMA.\n  - added FPS and size info dumping for MPEG and AVI file import (MP4Box -info file.mpg)\n  - improved 3D renderer while checking the X3D conformance suite\n  - changed MPEG-4 SP -> AVI to add VOSH before each I-frame\n  - Experimental support for LASeR (encoder, decoder and decoder module). \n    - Far from behing complete or usable at this time, binary syntax not 100% safe and COR to standard is in edition stage...\n    - LASeR RAP generation in MP4Box\n    - added SAF (LASeR Simple Aggregation Format) support: mux and demux (MP4Box) + SAF input plugin.\n    Basic LASeR usage: \n      encoding: MP4Box -mp4 file.svg, MP4Box -saf file.svg\n      decoding: MP4Box -svg file.mp4, MP4Box -xsr file.mp4 (dumps to LASeRML format)\n  - added patch from FT R&D for simple anim mask encoding needed for FAP/BAP streams on FDT/BDP nodes.\n  - added patch for drift-controled interleaving (interleaves while trying to keep chunk synchronized). This is now the storage mode of MP4Box, old interleaving is possible with -old-inter option.\n  - added support for tight interleaving without hinting in MP4Box.\n  - added support for delayed concatenation (-cat file.mp4:delay=2000 test.mp4)\n  - added \"-name\" option to MP4Box (track import and general cmd line opt) for setting the track handler name\n  - More SVG improvements and features:\n    - support for SVG scripting (ecmascript through SpiderMonkey) - a good subset of microDOM is supported (!! presentation traits are missing).\n    - support for SVG events (DOM)\n    - support for SVG scene dumping\n    - SVG Tiny 1.2 gradients + gradient matrix (1.1 feature)\n    - SVG.preserveAspectRatio support\n    - system color paint \n    - basic conditional processing (switch)\n    - SMIL anim events (begin, end, restart)\n  - added PAR modification support to MP4Box (import time and file based)\n  - improved precision of IsoMedia file splitting\n  - added NHML import/export. NHML is an XML representation of the NHNT file, with add-ons and a more flexible way of integrating media. Doc to come on web site\n  - clean-up of 2D direct rendering mode: \n      * no more bounds tracking for less memory usage\n      * automatically mode switch to direct rendering when using slide navigation (pan&zoom)\n  - clean-up of soft raster: \n      * removed all bezier curbs handling, let gpac core handle those\n      * paths are now always flatten to reduce rastering times\n      * misc optimizations of scanline converter (no more Y-sorting, only X-sorting used)\n  - speed improvements in BT/WRL loader\n  - updated makefiles for compilation under GPE\n  - made FreeType plugin log unknown fonts in general cfg file to speed up font selection.\n  - changed module naming - all modules are now prefixed with \"gm_\", and module is loaded/unloaded at run-time\n  - changed isomedia file open API for better support of temporary directories\n  - simplified 2D blitter for non DirectX output: no more in-middle surface used, direct stretch, blit and yuv conversion to back buffer\n  - added software and hardware support for MaterialKey in 2D renderer\n  - Support for SP2003 and PPC2003\n    - added all project files for evc4\n    - added osmophone to gpac/applications, demo player for Smartphone devices (tested on SPV C500 and PocketPC)\n    - support for GDI drawing on WinCE to avoid weird menu behaviour in windowed mode\n  - added support for OpenGL-ES in 3D renderer, in DX and in GAPI plugins \n      * tested with Hybrid Graphics and Vincent3D implementations\n      * Klimt could compile but no decent results\n      * Result tested on PocketPC/SmartPhone 2003 and regular windows\n  - added LASeR XML to SVG loader\n  - improved SRT -> 3GPP convertion - now accepts any number of <b>, <i>, <u> tags at random places.\n\n  - fixed AVC/H264 parsing (pic size detection on interleaved stream and cropping were broken)\n  - fixes on X3D scene parsing and dumping\n  - fixed mp4 root OD creating when fragmenting file (PLs were not copied over)\n  - fixed bug in large MP4 file (> 4GB) writing (chunk offset table was corrupted)\n  - fixes in InputSensor handling.\n  - fixes in XMT proto+script parsing\n  - fixed ISOMedia track duration in case of ctts table\n  - fixed PAR issus at import time setting wrong track sizes for visual media.\n  - fixed handling of 64-bit timing in GPAC (clients and MP4Box). Impacts on a few APIs (libisomedia, scene manager and terminal).\n  - fixed bugs in BIFS RAP generation (BT and XMT-A loaders) \n  - fixed support for node insert and delete in laser\n  - fixed AVC import bug with multiple PPSs per stream\n  - fixed stts bug in file concatenation (first inserted sample had a wrong duration)\n  - fixed v5 and v7 MPEG-4 node templates\n  - fixed ttxt extraction (fontID was missing in styles)\n  - fixed MP4Box -add file1 -cat file2 use case (broken CTTS compute)\n  - fixed 3GP brand when using AVC (3GP6 shall be used)\n  - fixed misc issues with text import/info display on track sizes and 3GP text track importing.\n  - fixed bug in gradient raster (spread/pad/repeat modes were broken)\n  - fixed bevel stroking bug and many SVG rendering ones\n  - fixed bug in MP4Box track concatenation of MPEG-4 user streams\n  - fixed bug in meta items storage (existing items were corrupted on file rewrite)\n  - fixed splitx option to support end times larger than file duration\n  - fixed globalQP context loading issues\n  - fixed display bug when switching between MPEG-4 and SVG scenes\n  - fixed absolute URLs handling on WinCE devices\n  - fixed redraw bug in 2D renderer for simple video drawing (background was always repaint regardless of video transparency)\n  - fixed UTF8 vs Win-CP text handling (BT and XMT parsers, subs->bifs and subs->ttxt converters)\n  - fixed bug in unknown stsd boxes handling\n  - fixes for gpac compilation on 64 bits platforms\n  - fixed bugs related to cache in file downloader\n  \n# 03/08/05: GPAC 0.4.0 RC2\n  - fixed Invalid versioning of previous release (was still 0.4.0-DEV...)\n  - fixed MinGW compilation\n  - fixed MP4Box handling of full MSDOS paths (C:\\)\n  - fixed GCC 4 compilation issues\n  - added MacOS X (DARWIN) compilation patches \n  - fixed OSS audio compilation (seems to perform perfectly on 50% of systems tested and dramatically fail on the rest...)\n  - fixed MP4A-LATM support at client side\n  - fixed X11 module in embedded mode (should work well with both Osmo4/wx and Osmozilla)\n  \n# 28/07/05: GPAC 0.4.0 release\n  ** GPAC is now licensed under LGPL. **\n  Massive code rewrite and repository reorganization in order to comply to some base coding style (cf gpac/doc/CODING_STYLE) have taken place \n  since previous release. Documentation is still a work in progress.\n  APIs are not backward compatible, but should now be in a frozen state/spelling for the most common tools (utils, MPEG-4 OD, IsoMedia and terminal APIs)\n    \n  - Fixed FAAD multichannel support with latest FAAD CVS version (bug due to FAAD inner channel creation). Latest version should \n    support both multichannel and AAC radios.\n  - added support for normal drawing (for debug purposes) in 3D renderer\n  - adedd support for single instance of Osmo4/w32 \n  - changed audio configuration options to \"Number of buffers\" and \"TotalDuration\"\n\t- fixed old bug in audio renderer screwing up the audio from time to time\n\t- moved ffmpeg to latest CVS version (25/07/05). THIS VERSION IS NO LONGER COMPATIBLE with previous ones used in GPAC, update\n\t  your binaries!! Also updated ffmpeg plugin to new ffmpeg API\n\t- moved all fullscreen handling to dedicated windows, refinement of wxOsmo4.\n\t- more work on x11 plugin (events handling, 3D support) - THIS IS EXPERIMENTAL AT THIS RELEASE LEVEL, CHECKOUT CVS FOR BETTER SUPPORT...\n  - fixed anamorphic video handling in GPAC, both playing (2D and 3D) and MP4Box parsers (only done for MPEG-4 Visual, not AVC). Video is\n    now only rescaled at blit time\n  - changed ';' separators to ':' seprators in MP4Box (meta options and track import options) for linux prompt compatibility.\n  - misc fixes in tx3g track import, tx3g bt dump and couple of issues introduced in 0.3.0->0.4.0 migration\n  - misc cleanup of GF_VideoOutput interface.\n\t- started doc manager using doxygen (doxyfile added in gpac/doc). APIs may be slightly reworked during the documentation phase. \n\t\tDocumentation will only be produced for libgpac, eg all exported headers in gpac/include/gpac\n\t\tDevelopment APIs documentation (gpac/include/gpac/internal) will come later.\n\t- cleaned up IsoMedia reading for more efficient and more reliable parsing\n  - misc fixes in MP4Box option parsing, in RTP multicast setup\n  - Osmozilla should now be much more stable on Win32 - Linux version to come.\n\n\n# 20/06/05: GPAC 0.3.0 release\n  - fixed bug in 4GB file writing in interleaving mode\n  - fixed bug in absolute path usage in MP4Box\n  - added -cat file*.mpg syntax support\n  - added support for mass encryption in ISMACrypt drm_file (trackID=\"*\" means all tracks get encrypted with the desired key)\n  - fixed compilation of wxOsmo4 with wxWidgets+Unicode\n  - fixed bug in 3GPP text layout when not fully contained in video\n  - added mapping between OD.ESD.GF_Language and MP4.MediaHeader.Language (BT/XMT <-> MP4)\n  - fixed bug in SDP playback without RTSP session attached (live casts)\n  - added language and delay selection at import time (cf MP4Box -h import)\n  - made -lang able to change all tracks languages by default !erase language specified at import time!\n  - added -lang option to MP4Box to change track language\n  - added -delay option to MP4Box to change initil media delay - ALTHOUGH 100% STANDARD, THIS MAY NOT BE SUPPORTED BY SOME PLAYERS\n\t- updated configure for opengl disabling and fixed-point configuration\n  - misc fixes in ffmpeg decoder and MP4Box ISMA for PAR - this is disabled by default due to some unsolved crashes, cf gpac/doc/configuration.html or man gpac.s\n  - misc updates in MP4Box meta handling for item extraction.\n  - fixed MPEG-2 aac importing and info dumping\n  - fixed 3GPP text display bug when stopping and changing an animationStream using a 3GPP text object.\n  - fixed AVC/H264 HP parsing\n  - added BIFS track visual size info at BT/XMT encoding stage\n  - MOVED FFmpeg INCLUDE FILES TO LATEST CVS VERSION to support AVC/H264 HP decoding\n\t- added meta self reference item for dual-headed files\n\t- commit MPEG-4 LATM Audio hinting patch and added rtp aggregation. RTP reassembler NOT UPDATED YET\n\t- fixed bugs in TeXML parser\n\t- fixed bt/xmt to MP4 encoding for IOD with single BIFS ESD.URLString set\n\t- fixed SVG outline handling and SVG/SMIL anim on appearance/geometry\n\t- fixed svg_loader compilation on winCE (ARM binaries and include to follow in next release of gpac_extra_libs)\n\t- commit of SVG fixed-point version\n\t- Fixed MP4Box spliter crash introduced by MetaBox support.\n\t- Merged MP21 and MP4 handling, added meta support in MP4Box (creation/extraction - cf MP4Box -h meta)\n\n\tFROM THIS DAY ON, ALL WORK ADDED TO GPAC IS COPYLEFT ENST\n\n# 15/05/05: \n\t- Updated makefiles and configure for MacOSX support\n\t- commit of GPAC fixed-point version - may not be completely stable yet :)\n\t- changed all project files location for soon-to-come EVC4 and Visual .NET support\n\t- changed 2D path object to directly support cubic and quadratic bezier (outliner do support them too), inspired from FreeType.\n\t- MSVC Users: moved to wxWidgets 2.6.0 !!\n\t- more fixes on CTTS in H264/AVC importer (p-frame reorder and some I/B sequences with neg POC)\n\t- fixed last sample duration in mp4 for BIFS/OD/Text\n\t- completely rewrote AVC CTS computing to handle b-refs properly\n\t- fixed improper instanciation of externProto with VRML files not declaring default field values in externProtos\n\t- reworked file splitter to support duration and size based splittings\n\t- fixes in file concatanation\n\t- support for \"self\" parameter in Anchor to replace only inline scenes on anchors\n\t- fixed H263 raw importer (frame boundary detection and frame size) - changed default H263 frame rate to 15 fps (more used than 25 in 3GP).\n\t- added support for new chaper format: CHAPTERX=HH:MM:SS[:ms or .ms] and CHAPTERXNAME=string\n\t- committed AVC parser patch from bobolobo (SEI parsing and recovery points)\n\t- added support for nero chapters in MP4 ('chpl' box), in MP4Box (-chap file.chp) and selection in players (chapters mapped to MPEG-4 SegmentDescriptors).\n\t\tnote regarding chp files: not sure about file syntax, currently support for (one chapter entry per line):\n\t\t\t ZoomPlayer syntax: AddChapter (-fps for import framerate selection), AddChapterBySecond and AddChapterByTime\n\t\t\t Regular time code … la SRT: HH:MM:SS[:ms or .ms] [Chapter Name]\n\t\t\t SMPTE time code: HH:MM:SS;fr/fps [Chapter Name] - if fps is omitted, use '-fps' if specified or 25 fps default.\n\t\t\t \n\t- fixed avi packed bitstream flag removal bug with beta versions of DivX.\n\t- fixed bugs in AVC CTTS compute\n\t- wxOsmo4 now single-windowed on win32 with DirectX output driver (SDL one buggy).\n\t- fixed bugs in media exporter for non-MPEG4 streams (AMR & co).\n\t- added '-dts' option to MP4Box - dumps samp num, DTS and CTS for all tracks and performs sanity check of CTS offsets.\n\t- added '-split time_sec' option to MP4Box - splits a simple AV IsoMedia file (no systems, only ONE VIDEO stream supported) into several movies of time_sec duration.\n\t- added '-cat' option to MP4Box - concatenates several input file (IsoMedia or not) to a single IsoMedia file. Same options as -add. \n\t\t\t** Streams with different sample descriptions are imported as distinct tracks **\n\t- fixed bugs in OD and IPMPX parsers (ipmpDescrPtr and IPMP_ToolID)\n\n# 30/03/05: GPAC 0.2.4 release\n\t- Added TeXML import (QT XML format for 3GPP text)\n\t- Added SRT extraction for text tracks.\n\t- Added SUB subtitles support (SUB->3GPP text, SUB->BIFS)\n\t- New lifting for MP4Box - nicer progress notifications and help screens.\n\t- changed MP4Box to OVERRIDE FILES BY DEFAULT if '-out' is not specified.\n\t- changed MP4Box to use 0.5sec interleaving storage by default on all operations.\n\t- added file associations for Osmo4/Win32 (not for wx version) \n\t- added volume control and playlist restoring (Osmo4_w32 and Osmo4_wx) as well as fullscreen restoring when changing file through playlist\n\t- added '-unhint' option in MP4Box to remove all hinting from file.\n\t- many rewrite and fixes in WinCE version (Osmo4 and gapi), much more stable and usable player.\n\t- changed SBR import in MP4Box: -sbr for backward compatible HE-AAC (implicit) signaling, -sbrx for non-backward compatible (explicit) signaling.\n\t- added bandwidth signaling in SDP (b=AS:X) for some players compatibility\n\t- added H263 and MPEG4 Visual(CMP) importers in MP4Box\n\t- added extra SDP lines support in MP4Box - PLEASE refer to rfc2327 before complaining :)\n\t- added hinters for QCELP (RFC 2658) and EVRC/SMV (RFC 3558). Not tested (no decoder available) - QCELP hinter works with QT6.5.\n\t- added QCP importer/export in MP4Box and raw EVRC and SMV importers (not tested)\n\t- added support for 3GPP2 extensions in IsoMedia (EVRC, QCELP and SMV config)\n\t- added basic media cache for stream recording (rtp, internet radios). Only MP4 cache available, but other formats possible (plugin)\n\t- added raw samples export and avi track to raw export in MP4Box\n\t- More H264: import/export/rtp hinter in MP4Box, rtp reassembler\n\t- Basic ISMACryp support in client (RTP and file)\n\t- ISMACryp hinter in MP4Box\n\t- ISMACryp support in MP4Box - cf \"MP4Box -h crypt\" for more details. Selective encryption (sample-based) is supported but not key switching (only one key at this time). \n\t- added smaller version of libmcrypt to M4Systems library for ISMA AES-128 CTR (but kept other algos for future IPMPX usage)\n\t- added simple converter from cubic QTVR to MP4\n\t- added 3GGP AMR NB and WB (float code) plugin (Fixed Point AMRWB is just so slow ....)\n\t- moved 3GGP AMR NB decoder to 600 release (old lib should still be compatible)\n\t- moved to latest official ffmpeg tarball for AVC B-frames decoding support (older ffmpeg versions should still work despite some API changes)\n\t- added IPMPX base code (read/write and BT/XMT dump/parse)\n\t- added chunk encoding in MP4Box (uses 2 input files, one with base scene, one with BIFS updates only)\n\t- changed OGG muxing in MP4 - one single OTI (0xDD) used for all OGG streams - DSI format same as before.\n\t- Fixed bug in CTTS computing in MPEG4 Video import caused by consecutive I frames.\n\t- fixed MPA hinter RTP agregation mode (was always on).\n\t- misc updates in importers, exporters and ISMACryp APIs\n\t- cleaning of ISMA and 3GP related stuff in m4systems, forced 3GP file to be branded '3GP5' for QT compatibility...\n\t- rewrote AMR hinter for RTP agregation, added maxptime hint param for speech rtp payloads (AMR/QCELP/EVRC/SMV).\n\t- Fixed MediaControl/Inline URL changing\n\t- fixed video RTP timescale in hinters for QT compatibility\n\t- fixed language-based alternate stream selection in ODs\n\t- cleanup of m4_config.h (removing all unneeded includes, misc cleanup for FreeBSD port)\n\t- brought XMT-A in line with spec regarding MFString/MFURL/MFScript (parsers and dumpers)\n\t- added support for \"od://\" in XMT-A urls according to XMT spec\n\t- fixed raw aac export bug\n\t- fixed DIV5 import issues with PLs\n\n# 05/01/05: GPAC 0.2.3 release\n\t- new regression tests (X3D and some other features)\n\t- MPEG-4 playback from BT/XMT now supports proper startTime/stopTime behaviour\n\t- found a port of XVID for WinCE/ARM, removed OpenDivX from distribution (seemed no longer maintained). This XviD port is BTW much faster & more reliable than old OpenDivx\n\t- split codec_pack in xvid_dec, img_in and mp3_in plugins\n\t- fixed ffmpeg H264 support\n\t- scene time for VRML/X3D now complies with spec (VRML uses absolute UTC timing since 1970)\n\t- fixed 3D spot/point lighting bug\n\t- added support for raw AMR file format (AMR and AMR-WB, multichannel AMR not supported) in MP4Box (import/extract) and reader plugin.\n\t- added MP4Box '-tmp directory': forces temp file creation to given directory rather than OS-specific temp file storage.\n\t- integrated the very nice mpeg ps parser from MPEG4IP - MP4Box now supports MPEG PS import to MP4 (ATM only one audio, one video, and only MP3 audio)\n\t- added basic MPEG 1/2 Video RTP hinter and reassembler, checked MPEG files hinted to MP4 compatibility with QT player.\n\t- fixed color transform and texturing issues.\n\t- various fixes due to \"dynamic scenes\" in RTP stack and ESM module\n\t- fixed copy/paste in Osmo4 address bar, mp4 on http issues, MP4Box -add pbs with IsoMedia\n\t- Freezing TTXT format version 1.0 - documentation avail on gpac.sf.net\n\t- Updated MP4Box documentation on gpac.sf.net to 0.2.3 version.\n\t- Changed NetClientPluggin API (got rid of status query, status handled internally in ESM and in plugin if needed)\n\t- Updated evc3 projects, made M4Systems READ/WRITE on CE to enable timedtext parsing (and future streaming cache, who knows ...).\n\t- Added 3GPP text hinting in MP4Box and 3GPP text reassembler in rtp plugin.\n\t- Bug fixes and testing of 3GP timed text with some 3GP files\n\t- GF_InlineScene now supports MediaControl with mediaStartTime and mediaStopTime\n\t- AAC SBR import now uses backward compatible decoder config.\n\t- 3GPP/MPEG4 timed text decoder - supports everything except soft wrap & dynamic highlighting (karaoke) - vertical text not fully tested\n\t- new \"ttxt\" format (for \"timed text\"): XML representation of 3GPP/MPEG4 timed text streams - importer (from ttxt and from srt) and dumper (to ttxt only) support.\n\t- MP4Box \"-ttxt\" option: converts an SRT file to a TTXT one.\n\t- Input plugin for ttxt and srt files.\n\t- Support for \"dynamic scenes\", eg gpac will now generate on the fly a scene description when none is found, and allows stream selection in GUI.\n\t- Modified Osmo4 & wxOsmo4 GUI: stream selection & subtitle adding\n\t- Changed MP4Box \"-import\" to \"-convert\" (\"-import\" is kept for backward compatibility).\n\t- Added MP4Box -nosys (removes all MPEG-4 systems streams and writes an empty IOD)\n\t- Added MP4Box \"-add\": adds any supported format to an mp4 file (same input conventions as -convert). Several input can be specified (ex: -add audio1.aac -add sub1.srt video.mp4 -out full_movie.mp4)\n\t- fixed a nasty bug in RTSP stack screwing up all mediaControl & rtsp session.\n\t- 3D NonLinearDeformer (AFX) support (taper, twister and bender)\n\t- Completed X3D geometry set: LineSet, (Indexed)TriangleSet, (Indexed)TriangleStripSet, (Indexed)TriangleFanSet \n\t- Full multichannel audio mixing and resampling (and better audio speed support). Multichannel->stereo conversion (not configurable atm).\n\t- Yet Another Announcement of a stable ffmpeg demuxer - stable with avi & mpeg, still sync issues with some QT files (same issues with ffplay).\n\t- added SBR mode for aac importing ('-sbr' switch) in MP4Box.\n\t- fixed: MP4Box hinters (empty tracks), SDL -> BIFS coord mapping in fullscreen, rounding segmentDescriptor.startTime pbs in seeking with mp4menu\n\t- Added Playlist and brower-like navigation to Osmo4 and wxOsmo4\n\t- AAC/ADTS file & streaming input (radios) - FAAD decoder moved to aac_in plugin\n\t- ADTS import/extraction in MP4Box\n\t- fixed OD XMT-A for ESD.OCR_ES_ID and ESD.dependsOn_ES_ID (now use IDREFs and not binary IDs)\n\t- integrated ogg lib in gpac (<gpac/m4_ogg.h>), and added ogg/vorbis and ogg/theora importers to mp4 - THIS IS NOT STANDARD AT ALL. \n\t\tThe current syntax is to put needed headers in the MPEG-4 DecoderSpecificInfo, with the following syntax:\n\t\t\tu16 sizeof_header;\n\t\t\tchar *header_data;\n\t\tfor each header (quite similar to what is found in qtcomponents). Vorbis ObjectTypeIndication is 0xDE, theora ObjectTypeIndication is 0xDF.\n\t\tNeed some more testing before filing a request to mp4ra.org.\n\t\tStreaming possible as MPEG-4 streams, Vorbis RTP packetizer still to be done. \n\t\n# 09/11/04: GPAC 0.2.2 release\n\t- Xiph OGG demuxer: supports file, http download (not tested) and icecast servers.\n\t- Xiph Vorbis decoder\n\t- Xiph Theora support (should work with fluendo but I can't get any data from the server...)\n\t- Better FFmpeg support (moved to latest ffmpeg cvs tarball).\n\t- all file associations in client are made through mime types, and changed handling of service (mime type query if possible before loading plugin)\n\t- network stats & changed all UIs for that.\n\t- decoder stats & changed all UIs for that.\n\t- nicer Osmo4/wxGTK\n\t- shoutcast support in mp3 reader\n\t- Install doc cleanup\n\t- MP4Box \"-single\" option now work for 3GP files\n\t- MP4Box \"-rem TrackID\" option to remove a track\n\t- made 3GP hinter produce QT-compatible streams (as usual QT only accepts specific RTP timescales)\n\t- moved M4Systems to a dynamic lib (static is still first built & used for MP4Box)\n\t- moved all scene decoders (bifs, OD and context loader) to real plugins\n\t- moved BT & XMT parsers from stdio to ZLIB io, in order to support GZIPed VRML & X3D (and consequently, BT and XMT-A ;). GPAC CAN NO LONGER COMPILE WITHOUT ZLIB\n\t- massive cleanups in scenegraph & MPEG-4 node naming convention\n\t- !!!scene graph no longer customizable without code hacking!!!\n\t- X3D scene graph generator (decided NOT TO SUPPORT VRML 97 extensions, since they are in X3D and with a different format...)\n\t- updated vrml tools for X3D support (Double precision coords & RGBA colors)\n\t- culling of AABB tree against frustum at draw stage in 3D renderer - greatly speeds up large meshes & terrains rendering\n\t- support for weird cyclic graphs in scenegraph (mainly to support encoding of conditionals). Works with nodes as well, configurable through scenegraph but this can \n\tlikely crash a renderer other than GPACs (tested with blaxxun & old GPAC versions, crash works each time:)\n\t- lighting and transformations now properly set in 3D renderer \n\t- improved gravity (ground detection) and added jump in walk mode (right click or 'j')\n\t- support for streams without systems timing knowledge (non MPEG4), eg streams where timing is computed after decoding (and not given by transport layer) for simpler ogg support.\n\t- support for multiple URL in VRML nodes (including remote script)\n\t- '#Viewpoint' and 'URL#Viewpoint' support in Anchor and Inline - #segment_name is not supported and should not be used (not standard IMHO)\n\t- ColorRGBA support for X3D\n\t- texture generator (only \"SPHERE-LCOAL\" and \"COORD\" supported for now)\n\t- XML scene dumper now supports X3D (scene dumping API has changed)\n\t- X3D support in BT and XMT-A loader\n\t- updated 3D renderer & ESM for X3D support\n\t- added X3D geometry2D nodes in 3D renderer\n\t- Anchor.activate now works with no children\n\t- plethora of bug fixes\n\n\n# 15/10/04: GPAC 0.2.1 release\n\t- massive fixes in javascript (assignment was only 50% working), new faster, less memory-hungry implementation (and Othello reg test now passes!!)\n\t- CreateVrmlFromScript support for VRML content.\n\t- collision detection\n\t- gravity (not really working)\n\t- Layer3D fully supported (including navigation!)\n\t- InputSensor in non-encoded scenes (bt/xmt)\n\t- aabb tree in 3D meshes for faster picking/collision - needs more cfg options though\n\t- user input in composite texture 2D/3D, and completed TouchSensor (hitNormal & texCoords event out) in 3D renderer\n\t- added full blending support in 3D renderer (depth sorting)\n\t- fixed handling of clipers (layout/form) and layer2D.\n\t- added text change checking in spidermonkey to avoid rebuilding text\n\t- support for usual coords in 2D renderer (window top-left in 0, 0 and decreasing y) for SVG integration \n\t- 3D normal renormalization for GL when scaling (eg now there's a proper lighting)\n\t- 4/3 and 16/9 aspect ratio modes now work as expected\n\t- interactions with fullscreen SDL now happen where they should\n\t- LinearGradient and RadialGradient in 3D renderer\n\t- hide all scene context importing through a single ContextLoader object to get first frame and progress info for swf loading in player\n\t- added Orbit navigation mode (orbit around the user look point) & updated interfaces\n\t- massive cleanup of scene handling & decoders to enable run-time modules for scene decoding. APIs have changed, 2 new ones for scene decoders and media decoders \n\t- finished BT/XMT/WRL scene handler and added support for SWF.\n\t- added toolbar for Osmo4_w32 (_wx one to come)\n\t- added PlanarExtrusion hardcoded proto (2D shape extruded by 2D shape)\n\t- added bt/wrl support in MP4Client, update scene graph accordingly to use a single graph & lots of related fixes in ESM\n\t- added texture text support in 3D renderer (graphics plugin being now loaded by main renderer)\n\t- upgraded avilib to latest version from ogmtools (should support OpenDML 2.0)\n\t- updated configure, Makefiles, & EVC3 project files\n\t- textured text support (eg render to texture then blit) in 2D renderer\n\t- ElevationGrid, Extrusion, VisibilitySensor, LOD support\n\t- Sound support (stereo spatializer only) and reworked generic audio renderer for Sound/Sound2D support\n\t- MPEG-4 V5 animators (not complete)\n\t- reworked hardcoded proto mechanism to comply with VRML recommendations - some doc to come soon\n\t- hardcoded proto PathExtrusion for any 2D shape extrusion except Bitmap and PointSet2D - eg EXTRUDED TEXT SUPPORT :)\n\t- fixed Win32 large file support in GPAC, needs testing of AVI importer...\n\t- cleaned up multichannel support, fixed faad channel reordering\n\t- added background support: sky & ground dome, cube image (6 sides)\n\t- added navigation support (WALK/FLY/EXAMINE/ + extra modes a la blaxxun) and user selection in Osmo4/wxOsmo4 and MP4Client\n\t- added animation between viewpoints\n\t- changed handling of empty boundable stacks according to VRML: no more default backColor, and real 3D scenes (top=Group or Layer3D) no longer may use orthographic projections\n\t- normal smoothing for IFS.\n\t- full lighting support (spot, point and directional)\n\t- fog and billboard support.\n\t- basic AVC support in MP4 (only AVCSampleEntry and child atoms)\n\t- VRML/MPEG-4 interaction sensor support (added ProximitySensor, SphereSensor, PlaneSensor and CylinderSensors). still some work to do on TouchSensor hitNormal & hitTex\n\t- SWF parser updates: PlaceObject2 and defineShape2.NewStyle bugs, support for soundStream\n\t- added user interaction in 3D renderer (ray casting) in both ortho and projection modes\n\t- frustum is now only recomputed when change in size or viewpoint\n\t- viewport/viewpoint selection to osmo4/wxOsmo4 GUIs\n\t- BT parser supports basic VRML (uncompressed .WRL should now be imported fine)\n\t- plethora of bug fixes\n\t\n# 02/09/04: GPAC 0.2.0 release\n\t- updated cfg file doc man pages & makefiles\n\t- massive re-arch of renderer(s) to be able to load at run-time either 2D or 3D renderer, instead of static linking\n\t- new 2D and 3D renderers\n\t- re-organized development headers\n\t- added basic file<->plugin association by file extension (cf doc)\n\t- Osmo4/wxWidgets version in Applications/Osmo4_wx\n\t- put zoom & pan back in place in 2D render plugin\n\t- fixed V4Studio (upgrade to wxWidgets 2.5.2)\n\t- MP42AVI supports 3D scenes duming\n\t- updated templates for v5 & v6. WARNING: it seems that some nodes will be removed from v5 (AFX COR) which will invalidate v6 bitstreams\n\t- still more fixes related to scenegraph arch changes\n\t- reworked importers & exporters\n\t- updated new regression test suite (no 3D yet)\n\t- bug fixes in MediaControl, MediaSensor & inline scene control\n\t- more fixes related to scenegraph arch changes\n\t- cleanup of SWF importer: \n\t\t\t* shape importing is OK, gradient so-so (wrong matrix mapping), no bitmap fill\n\t\t\t* font & text OK.\n\t\t\t* sprites should work\n\t\t\t* sound work - sound stream not done yet\n\t\tthere will likely not be any new SWF feature supported, ActionScript & buttons are out of scope for GPAC.\n\t- added swf support from MP4Box (cf -swf switch)\n\t- fixed XMT-A syntax of script and proto SF/MFNode field, and BIFS/XMT UTF-16 support\n\t- fixed avg/max rate compute on large files for AVI and MP3 importers\n\t- Background2D texturing uses hw blitter when possible (2D renderer only)\n\t- better inline scene & segment descriptors handling\n\t- encoding of IOD extra descriptors now supported\n\t- configure script fixes\n\t- changed all 3D handling, encapsulating all GL calls in a single file\n\t- moved all primitives in 3D renderer to use a single mesh object (rendering done through vertex arrays)\n\t- added IFS, ILS, Sphere\n\t- optimized AVI importer, fixed vbr mp3 in avi import\n\t- changed scenegraph: \n\t\t* all nodes now keep track of their parents in order to signal sub-tree changes for frustum culling\n\t\t* no more \"SimulationTime\" used in scenegraph, using node modif flags instead\n\t\t* updated 2D and 3D renderer accordingly\n\t- added support for rectangular textures in GL (most graphic cards support this, at least on win32)\n\t- added frustum culling\n\t- added SFTime->SFString formatting in valuator (current MPEG-4 COR)\n\t- plethora of bug fixes\n\n# 11/05/04: JLF: dev version 0.1.9\n\t- changed source code architecture: rendering code is now in a dedicated static link outside libm4systems\n\t- intergated draft 3D renderer:\n\t\t\t- Most 2D features have been ported to the new renderer (missing: viewport, colorTransform and gradients)\n\t\t\t- no user interaction, no viewpoint, no background, no lighting, NO ETC !!!!\n\t\t\t- Box, cylinder, cone working\n\t\t\t- texture mapping working (still images and video)\n\t- changed video plugin API accordingly\n\t- changed graphics API: all path handling (building & flatening , outlining & dashing) moved to authoring subproject\n\t- changed font API: no more graphics driver used to get font outline\n\t- cf install documentation to recompile.\n\t- updated all node tables to COMPLETE BIFS (eg all nodes from v1 to v6)\n\t- updated v6 template & code to final amendment version\n\t- fixed inline scene start/stop when modifying inline URL.\n\t- updated TODO :)\n\t- uploaded ultra basic SWF convertor (so that it doesn't get lost on my hard drive:)\n\t- plethora of bug fixes\n\n# 28/04/04: GPAC Release 0.1.4\n\t- MP4Box avi import fixes (key frames, VOL removal, n-VOP handling)\n\t- Fixed MP4 and NHNT importers (visual tracks sizes)\n\t- MP4Box avi extractor for visual tracks\n\t- XMT-A parser fixes (unicode, DEF routes, proto namespaces)\n\t- better ExternProto resolving\n\t- added VRML addressing (eg url \"protolib#protoName\" and \"protolib#protoID\")\n\t- added pause/resume in Layout scrolling\n\t- fixed rendering of layout nodes (layout, Form and Layer2D) in layout nodes\n\t- fixed port reuse bug: 2 instances of the client may now use RTP streaming (UDP or TCP) at the same time\n\t- fixed video Profile and Levels handling (was old 2000 spec version)\n\t- added -merge option in MP4Box (merges 2 files into a single AV file)\n\t- Fixes in SDL surfaces handling\n\t- better \"end of presentation\" support\n\t- plethora of bug fixes\n\t\t\n# 18/04/04: JLF: GPAC Release 0.1.3 rc2\n\t- MP4Box default hinting is now QT compatible - b-frame hinting support\n\t- DecodingBuffer and CompositionMemory occupancey in ODInfo\n\t- layout text splitting (word boundaries only)\n\t- linux install and man pages\n\t- OCR stream support in (authoring/playing) - only tested with MP4. MediaControl supported on OCR\n\t- MP4Box B-frame import now works with data referencing\n\t- fixed many seeking and buffering issues\n\t- multi-framed audio units (needed for most formats understood by ffmpeg demux)\n\t- multiplexed input streams now properly setup\n\t- networking under linux (http and rtp)\n\t- fixed udp streaming on win32/winCE, rtp reordering (was never on), default udp buffer size.\n\t- changed config file for reordering\n\t- changed audio driver interface (retrieve the HW config on setup for SDL) + some audio resync addons\n\t- support for console events detection in MP4Client linux (a la win32 kbhit())\n\t- anchor (mp4 navigation only) support in MP4Client\n\t- uploaded linux version of extra libs\n\t- added non-system SDL support in GCC configure script (cf --sdl-cfg)\n\t- default font handling in freetype plugin: some text will be diplayed if at least one font is present\n\t- better MPEG-4 video import (B-frame and packed bitstream)\n\t- updated MP4 with full trackHeader (was old v1) and fixed MP4Box compatibility issues with 3ivx splitter\n\t- moved all windowing architecture to the video output plugins (keyboard and mouse events, WM messages) in order to support SDL, moved old input functions to new event model\n\t- modified jconfig.h to support both win32 and MinGW.\n\t- updated V4Studio to work with new event/windowing architecture (work with SDL and DX)\n\t- UDP autoconfig option (if no UDP traffic is received, restart with TCP)\n\t- moved to FAAD2.1 (CVS), fixed faad2 compil on MinGW & winCE\n\t- cleaned up install docs\n\t- added support for SDL with software YUV->RGB and software stretching\n\t- fixed ffmpeg audio support\n  - added ffmpeg JPEG support\n\t- moved to FreeType 2.1.7 \n\t- moved to libmad 0.15.1b\n\t- MinGW support in all extra libs\n\t- MinGW compilation supported - including DirectX under mingw\n\t- added support for xvid 1.0.0\n\t- plethora of bug fixes\n\n# 28/01/04: GPAC Release 0.1.2\n\t- codec selection in Osmo4 GUI\n\t- PocketPC installer\n\t- OpenDivx plugin\n\t- clean-up extra lib package, install notes and added missing libs\n\t- FFmpeg demuxer done (synchro not good and seeking pbs). GPAC now supports all FFmpeg-supported formats.\n\t- new NSIS script for complete install\n\t- fixed hang on PocketPC WavOut and misc cleanups for PocketPC compilation\n\t- H263 in 3GP files (use FFmpeg dec)\n\t- H263 streaming (RFC 2429)\n\t- B-frame parsing and CTS reconstruction in AVI importer (needs debug).\n\t- muxInfo.duration parameter is now in milliseconds (was in seconds)\n\t- '-node' options to MP4Box to get a given node syntax (fields default value and QP info)\n\t- relative time stamps in BT ('AT D1000 ' means 'at last AU TS + 1000')\n\t- FFmpeg decoder plugin now working with latest CVS snapshot\n\t- MediaControl switching (several MC on single object)\n\t- separate file downloader API and streaming client API / cleanup of plugins and ESM module\n\t- base support for non-MPEG4 URLs in the scene (eg, url \"http://whatever/resource\")\n\t- loader (local/network) for JPEG and PNG files\n\t- loader (local/network) for MP3 files. Would be nice to add SHOUTCAST/ICECAST too...\n\t- support for ESD URLs and non-inline OD URLs (supports any service, local file, download and streaming)\n\t- MP4Box no longer needs SpiderMonkey\n\t- added MatteTexture support (needs testing and debug)\n\t- cleanup of exported headers (install in <gpac/m4_xxx.h>)\n\t- move all config info to a single include file <gpac/m4_config.h> and updated some compil macro to avoid touching the file\n\t- persistant associations font name / file name for freetype in GPAC.cfg\n\t- support for conditional in proto creating node interfacing with the proto\n\t- complete XMT-A parser (script, proto, externProto and extendedUpdates)\n\t- edit list support in MP4 reader plugin\n\t- BT->XMT-A and XMT-A->BT in MP4Box\n\t- support for MP4 track start offset in BT/MP4Box (edit Lists)\n\t- BIFS random access point generation in MP4Box (sync shadow or regular RAP) for cartoons\n\t- AMR NB support (payload parsing and 3GP codec plugin)\n\t- plethora of bug fixes\n\t\t\n# 20/11/03: GPAC Release 0.1.1 \n\t- 3GP rtsp streaming support\n\t- GPAC uses latest stable extra libs: faad2 2.0rc3, FreeType 2.1.5 and mad 0.15.0b, and dev version (20031117) of xvid\n\t- support for MediaSegment ranges (\"#seg+\" and \"#seg1-seg2\") in MediaControl/MediaSensor\n\t- flow control for RTP over RTSP and session restart when RTSP TEARDOWN not acknowledged\n\t- 3GPP hinting (AMR NB and H263) contribution by Andrew Voznytsa \n\t- playback support for basic 3GPP files (that is only MPEG-4 visual and AAC audio)\n\t- support for MPA payload format - RFC 2250 (hinting and playback)\n\t- support for mode detection (CELP and AAC) in hinting since QT6 understands only these modes\n\t- support for several mediaSensors per OD\n\t- AudioBuffer\n\t- removed DirectDraw display resolution changes when switching to fullscreen\n\t- BIFS Extended Updates from AFX/MU amendment (integrated in GF_SceneGraph, dumping, memory decoding and encoding)\n\t- BT parser completed - complete BIFS syntax is now supported except PMF\n\t- SRT importer through BT (converts SRT file to a BIFS animationStream)\n\t- better audio playback/sync\n\t- ffmpeg plugin, decoder seems OK (MPEG1 and MPEG4 visual tested), demuxer not working yet.\n\t- added AVI/mp3/MP4/NHNT import to mp4box\n\t- BIFS encoder initial release (missing: PMF, BIFS extended Updates), bt parser almost done, bt->mp4 working\n\t- exporters in MP4Box (cmp, aac, mp3, jpg, png and nhnt) \n\t- mp4 XML reports for hint tracks and atoms in MP4Box\n\t- merged old soft rasterizer with charcoal + freetype (using ftgrays standalone raster) - better quality, faster ...\n\t- added BIFS stat tools in MP4Box\n\t- lots of updates in dirty rect algo.\n\t- changed GraphicsDriver2D API\n\t- scene graph dumper in Osmo4 win32\n\t- New app MP42AVI for BIFS to video (AVI, BMP, RAW) conversion, single-frame dump support\n\t- MP4 dumping to XMT-A and bt (BIFS, OD and OCI) - cf MP4Box\n\t- PredictiveMFField support (only IPPPPPPP...)\n\t- segment descriptors in MediaControl\n\t- ported wav audio for WinCE - TEST AND FIXING NEEDEED , DOESN'T WORK ON ALL IPAQs\n\t- support for hardcoded proto testing\n\t- WinCE port + GAPI video renderer (for iPaq only)\n\t- externProto support (only tested with local proto libs)\n\t- InputSensor (keySensor, Mouse and StringSensor)\n\t- plethora of bug fixes\n\t\n# version 0.1.0:\n\tinitial release\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 14.49609375,
          "content": "#\n# Main gpac Makefile\n#\ninclude config.mak\n\nifndef SRC_PATH\noverride SRC_PATH = .\nendif\n\nvpath %.c $(SRC_PATH)\n\nall: version unit_tests\n\t$(MAKE) -C src all\n\t$(MAKE) -C applications all\nifneq ($(STATIC_BINARY),yes)\n\t$(MAKE) -C modules all\nendif\n\n\nconfig.mak:\n\t@echo \"running default configure\"\n\t@./configure\n\n\nGITREV_PATH:=$(SRC_PATH)/include/gpac/revision.h\nTAG:=$(shell git --git-dir=$(SRC_PATH)/.git describe --tags --abbrev=0 2> /dev/null)\nVERSION:=$(shell echo `git --git-dir=$(SRC_PATH)/.git describe --tags --long  || echo \"UNKNOWN\"` | sed \"s/^$(TAG)-//\")\nBRANCH:=$(shell git --git-dir=$(SRC_PATH)/.git rev-parse --abbrev-ref HEAD 2> /dev/null || echo \"UNKNOWN\")\n\nversion:\n\t@if [ -d $(SRC_PATH)/\".git\" ]; then \\\n\t\techo \"#define GPAC_GIT_REVISION\t\\\"$(VERSION)-$(BRANCH)\\\"\" > $(GITREV_PATH).new; \\\n\t\tif ! diff -q $(GITREV_PATH) $(GITREV_PATH).new >/dev/null ; then \\\n\t\t\tmv $(GITREV_PATH).new  $(GITREV_PATH); \\\n\t\tfi; \\\n\telse \\\n\t\techo \"No GIT Version found\" ; \\\n\tfi\n\nlib:\tversion\n\t$(MAKE) -C src all\n\napps:\n\t$(MAKE) -C applications all\n\nsggen:\n\t$(MAKE) -C applications sggen\n\nmods:\n\t$(MAKE) -C modules all\n\ndepend:\n\t$(MAKE) -C src dep\n\t$(MAKE) -C applications dep\n\t$(MAKE) -C modules dep\n\nclean: unit_tests_clean\n\t$(MAKE) -C src clean\n\t$(MAKE) -C applications clean\n\t$(MAKE) -C modules clean\n\ndistclean:\n\t$(MAKE) -C src distclean\n\t$(MAKE) -C applications distclean\n\t$(MAKE) -C modules distclean\n\trm -f config.mak config.h config.log\n\t@find . -type f -name '*.gcno*' -delete\n\t@find . -type f -name '*.gcda*' -delete\n\t@find . -type f -name '*.dep*' -delete\n\t@rm -f coverage.info 2> /dev/null\n\t@rm -f bin/gcc/gm_*$(DYN_LIB_SUFFIX) 2> /dev/null\n\t@rm -f bin/gcc/gf_*$(DYN_LIB_SUFFIX) 2> /dev/null\n\ndoc:\n\t@cd $(SRC_PATH)/share/doc && doxygen\n\nman:\n\t@cd $(SRC_PATH)/share/doc/man && MP4Box -genman && gpac -genman\n\n\nUT_CFG_PATH:=unittests/build/config\n\nunit_tests:\nifeq ($(UNIT_TESTS),yes)\n\t@echo \"Unit Tests:\"\n\t@echo \"- configuring\"\n\t@mkdir -p unittests/build/bin/gcc\n\n\t@cp config.mak unittests/build/\n\t@sed 's|BUILD_PATH=$(BUILD_PATH)|BUILD_PATH=$(BUILD_PATH)/unittests/build|g' config.mak | \\\n\t\tsed 's|-I\"$(BUILD_PATH)\"|-I\"$(BUILD_PATH)/unittests/build\"|g' > $(UT_CFG_PATH).mak.new\n\t@if [ -e $(UT_CFG_PATH).mak ]; then \\\n\t\tif ! diff -q $(UT_CFG_PATH).mak $(UT_CFG_PATH).mak.new >/dev/null ; then \\\n\t\t\tmv $(UT_CFG_PATH).mak.new $(UT_CFG_PATH).mak; \\\n\t\tfi; \\\n\telse \\\n\t\tmv $(UT_CFG_PATH).mak.new $(UT_CFG_PATH).mak; \\\n\tfi\n\n\t@sed 's/GF_STATIC static/GF_STATIC GF_EXPORT/' config.h > $(UT_CFG_PATH).h.new.tmp\n\t@sed 's/GF_NOT_EXPORTED/GF_NOT_EXPORTED GF_EXPORT/' $(UT_CFG_PATH).h.new.tmp > $(UT_CFG_PATH).h.new\n\t@rm $(UT_CFG_PATH).h.new.tmp\n\t@if [ -e $(UT_CFG_PATH).h ]; then \\\n\t\tif ! diff -q $(UT_CFG_PATH).h $(UT_CFG_PATH).h.new >/dev/null ; then \\\n\t\t\tmv $(UT_CFG_PATH).h.new $(UT_CFG_PATH).h; \\\n\t\tfi; \\\n\telse \\\n\t\tmv $(UT_CFG_PATH).h.new $(UT_CFG_PATH).h; \\\n\tfi\n\n\t@$(SRC_PATH)/unittests/build.sh > unittests/build/bin/gcc/unittests.c\n\n\t@echo \"- building\"\n\t@cd unittests/build && $(MAKE) -C src && $(MAKE) -C src unit_tests\n\n\t@echo \"- executing\"\n\t$(SRC_PATH)/unittests/launch.sh\n\n\t@echo \"- done\"\nendif\n\nunit_tests_clean:\nifeq ($(UNIT_TESTS),yes)\n\t@echo \"Cleaning unit tests artifacts\"\n\t@rm -rf unittests/build/bin\n\t@cd unittests/build && $(MAKE) -C src clean\nendif\n\ntest_suite:\n\t@cd $(SRC_PATH)/testsuite && ./make_tests.sh -precommit -p=0\n\nlcov_clean:\n\tlcov --directory . --zerocounters\n\nlcov_only:\n\t@echo \"Generating lcov info in coverage.info\"\n\t@rm -f ./gpac-conf-* > /dev/null\n\t@lcov -q -capture --directory . --output-file all.info\n\t@lcov --remove all.info '*/usr/*' '*/opt/*' '*/include/*' '*/validator/*' '*/quickjs/*' '*/jsmods/WebGLRenderingContextBase*' '*/utils/Remotery*' '*/utils/gzio*'  --output coverage.info\n\t@rm all.info\n\t@echo \"Purging lcov info\"\n\t@cd src ; for dir in * ; do cd .. ; sed -i -- \"s/$$dir\\/$$dir\\//$$dir\\//g\" coverage.info; cd src; done ; cd ..\n\t@echo \"Done - coverage.info ready\"\n\nlcov:\tlcov_only\n\t@rm -rf coverage/\n\t@genhtml -q -o coverage coverage.info\n\ntravis_tests:\n\t@echo \"Running tests in $(SRC_PATH)/testsuite\"\n\t@cd $(SRC_PATH)/testsuite && ./make_tests.sh -precommit -p=0\n\ntravis_deploy:\n\t@echo \"Deploying results\"\n\t@cd $(SRC_PATH)/testsuite && ./ghp_deploy.sh\n\ntravis: travis_tests lcov travis_deploy\n\ndep:\tdepend\n\ninstall:\n\t$(INSTALL) -d \"$(DESTDIR)$(prefix)\"\n\n\t$(MAKE) install-lib\n\n\t$(INSTALL) -d \"$(DESTDIR)$(prefix)/bin\"\n\tif [ -f bin/gcc/MP4Box$(EXE_SUFFIX) ] ; then \\\n\t$(INSTALL) $(INSTFLAGS) -m 755 bin/gcc/gpac$(EXE_SUFFIX) \"$(DESTDIR)$(prefix)/bin\" ; \\\n\tfi\nifeq ($(DISABLE_ISOFF),no)\n\tif [ -f bin/gcc/MP4Box$(EXE_SUFFIX) ] ; then \\\n\t$(INSTALL) $(INSTFLAGS) -m 755 bin/gcc/MP4Box$(EXE_SUFFIX) \"$(DESTDIR)$(prefix)/bin\" ; \\\n\tfi\nendif\n\t$(INSTALL) -d \"$(DESTDIR)$(prefix)/$(lib_dir)/$(moddir)\"\nifneq ($(STATIC_BINARY),yes)\n\t$(INSTALL) bin/gcc/gm_*$(DYN_LIB_SUFFIX) \"$(DESTDIR)$(prefix)/$(lib_dir)/$(moddir)\" || true\n\t$(INSTALL) bin/gcc/gf_*$(DYN_LIB_SUFFIX) \"$(DESTDIR)$(prefix)/$(lib_dir)/$(moddir)\" || true\nifeq ($(CONFIG_OPENHEVC),yes)\n\tcp -a bin/gcc/libopenhevc* $(DESTDIR)$(prefix)/$(lib_dir)/ || true\nendif\n\nendif\n\t$(INSTALL) -d \"$(DESTDIR)$(prefix)/$(man_dir)\"\n\t$(INSTALL) -d \"$(DESTDIR)$(prefix)/$(man_dir)/man1\"\n\t$(INSTALL) $(INSTFLAGS) -m 644 $(SRC_PATH)/share/doc/man/mp4box.1 $(DESTDIR)$(prefix)/$(man_dir)/man1/\n\t$(INSTALL) $(INSTFLAGS) -m 644 $(SRC_PATH)/share/doc/man/gpac.1 $(DESTDIR)$(prefix)/$(man_dir)/man1/\n\t$(INSTALL) $(INSTFLAGS) -m 644 $(SRC_PATH)/share/doc/man/gpac-filters.1 $(DESTDIR)$(prefix)/$(man_dir)/man1/\n\t$(INSTALL) -d \"$(DESTDIR)$(prefix)/share/gpac\"\n\t$(INSTALL) -d \"$(DESTDIR)$(prefix)/share/gpac/res\"\n\t$(INSTALL) -d \"$(DESTDIR)$(prefix)/share/gpac/gui\"\n\t$(INSTALL) -d \"$(DESTDIR)$(prefix)/share/gpac/gui/icons\"\n\t$(INSTALL) -d \"$(DESTDIR)$(prefix)/share/gpac/gui/extensions\"\n\t$(INSTALL) -d \"$(DESTDIR)$(prefix)/share/gpac/shaders\"\n\t$(INSTALL) -d \"$(DESTDIR)$(prefix)/share/gpac/scripts\"\n\t$(INSTALL) -d \"$(DESTDIR)$(prefix)/share/gpac/python\"\n\t$(INSTALL) -d \"$(DESTDIR)$(prefix)/share/gpac/vis\"\n\t$(INSTALL) $(INSTFLAGS) -m 644 $(SRC_PATH)/share/default.cfg $(DESTDIR)$(prefix)/share/gpac/\n\nifneq ($(CONFIG_DARWIN),yes)\n\t$(INSTALL) -d \"$(DESTDIR)$(prefix)/share/icons/hicolor/128x128/apps\"\n\t$(INSTALL) -d \"$(DESTDIR)$(prefix)/share/applications\"\n\n\t$(INSTALL) $(INSTFLAGS) -m 644 $(SRC_PATH)/share/res/gpac.png \"$(DESTDIR)$(prefix)/share/icons/hicolor/128x128/apps/\"\n\t$(INSTALL) $(INSTFLAGS) -m 644 $(SRC_PATH)/share/gpac.desktop \"$(DESTDIR)$(prefix)/share/applications/\"\nendif\n\n\t$(INSTALL) $(INSTFLAGS) -m 644 $(SRC_PATH)/share/gui/gui.bt \"$(DESTDIR)$(prefix)/share/gpac/gui/\"\n\t$(INSTALL) $(INSTFLAGS) -m 644 $(SRC_PATH)/share/gui/gui.js \"$(DESTDIR)$(prefix)/share/gpac/gui/\"\n\t$(INSTALL) $(INSTFLAGS) -m 644 $(SRC_PATH)/share/gui/gwlib.js \"$(DESTDIR)$(prefix)/share/gpac/gui/\"\n\n\nifeq ($(CONFIG_DARWIN),yes)\n\tcp $(SRC_PATH)/share/gui/icons/* \"$(DESTDIR)$(prefix)/share/gpac/gui/icons/\"\n\tcp -R $(SRC_PATH)/share/gui/extensions/* \"$(DESTDIR)$(prefix)/share/gpac/gui/extensions/\"\n\tcp $(SRC_PATH)/share/shaders/* \"$(DESTDIR)$(prefix)/share/gpac/shaders/\"\n\tcp -R $(SRC_PATH)/share/scripts/* \"$(DESTDIR)$(prefix)/share/gpac/scripts/\"\n\tcp -R $(SRC_PATH)/share/python/* \"$(DESTDIR)$(prefix)/share/gpac/python/\"\n\tcp $(SRC_PATH)/share/res/* \"$(DESTDIR)$(prefix)/share/gpac/res/\"\n\tcp -R $(SRC_PATH)/share/vis/* \"$(DESTDIR)$(prefix)/share/gpac/vis/\"\nelse\n\tcp --no-preserve=mode,ownership,timestamp $(SRC_PATH)/share/gui/icons/* $(DESTDIR)$(prefix)/share/gpac/gui/icons/\n\tcp -R --no-preserve=mode,ownership,timestamp $(SRC_PATH)/share/gui/extensions/* $(DESTDIR)$(prefix)/share/gpac/gui/extensions/\n\tcp --no-preserve=mode,ownership,timestamp $(SRC_PATH)/share/shaders/* $(DESTDIR)$(prefix)/share/gpac/shaders/\n\tcp -R --no-preserve=mode,ownership,timestamp $(SRC_PATH)/share/scripts/* $(DESTDIR)$(prefix)/share/gpac/scripts/\n\tcp -R --no-preserve=mode,ownership,timestamp $(SRC_PATH)/share/python/* $(DESTDIR)$(prefix)/share/gpac/python/\n\tcp --no-preserve=mode,ownership,timestamp $(SRC_PATH)/share/res/* $(DESTDIR)$(prefix)/share/gpac/res/\n\tcp -R --no-preserve=mode,ownership,timestamp $(SRC_PATH)/share/vis/* $(DESTDIR)$(prefix)/share/gpac/vis/\nendif\n\nlninstall:\n\t$(INSTALL) -d \"$(DESTDIR)$(prefix)\"\n\t$(INSTALL) -d \"$(DESTDIR)$(prefix)/$(lib_dir)\"\n\t$(INSTALL) -d \"$(DESTDIR)$(prefix)/bin\"\n\tln -sf $(BUILD_PATH)/bin/gcc/gpac$(EXE_SUFFIX) $(DESTDIR)$(prefix)/bin/gpac$(EXE_SUFFIX)\nifeq ($(DISABLE_ISOFF),no)\n\tln -sf $(BUILD_PATH)/bin/gcc/MP4Box$(EXE_SUFFIX) $(DESTDIR)$(prefix)/bin/MP4Box$(EXE_SUFFIX)\nendif\nifeq ($(CONFIG_DARWIN),yes)\n\tln -s $(BUILD_PATH)/bin/gcc/libgpac$(DYN_LIB_SUFFIX) $(DESTDIR)$(prefix)/$(lib_dir)/libgpac.$(VERSION_SONAME)$(DYN_LIB_SUFFIX)\n\tln -sf $(DESTDIR)$(prefix)/$(lib_dir)/libgpac.$(VERSION_SONAME)$(DYN_LIB_SUFFIX) $(DESTDIR)$(prefix)/$(lib_dir)/libgpac.$(VERSION_MAJOR)$(DYN_LIB_SUFFIX)\n\tln -sf $(DESTDIR)$(prefix)/$(lib_dir)/libgpac.$(VERSION_SONAME)$(DYN_LIB_SUFFIX) $(DESTDIR)$(prefix)/$(lib_dir)/libgpac$(DYN_LIB_SUFFIX)\n\n\tln -s $(BUILD_PATH)/bin/gcc/ $(DESTDIR)$(prefix)/$(lib_dir)/gpac\n\tln -s $(SRC_PATH)/share/ $(DESTDIR)$(prefix)/share/gpac\nelse\n\tln -s $(BUILD_PATH)/bin/gcc/libgpac$(DYN_LIB_SUFFIX).$(VERSION_SONAME) $(DESTDIR)$(prefix)/$(lib_dir)/libgpac$(DYN_LIB_SUFFIX).$(VERSION_SONAME)\n\tln -sf $(DESTDIR)$(prefix)/$(lib_dir)/libgpac$(DYN_LIB_SUFFIX).$(VERSION_SONAME) $(DESTDIR)$(prefix)/$(lib_dir)/libgpac.so.$(VERSION_MAJOR)\n\tln -sf $(DESTDIR)$(prefix)/$(lib_dir)/libgpac$(DYN_LIB_SUFFIX).$(VERSION_SONAME) $(DESTDIR)$(prefix)/$(lib_dir)/libgpac.so\n\tln -s $(BUILD_PATH)/bin/gcc/ $(DESTDIR)$(prefix)/$(lib_dir)/gpac\n\n\tln -s $(SRC_PATH)/share/ $(DESTDIR)$(prefix)/share/gpac\n\tln -sf $(DESTDIR)$(prefix)/share/gpac/res/gpac.png $(DESTDIR)/usr/share/icons/hicolor/128x128/apps/gpac.png\n\tln -sf $(SRC_PATH)/share/gpac.desktop $(DESTDIR)/usr/share/applications/\n\nifeq ($(DESTDIR)$(prefix),$(prefix))\n\tldconfig || true\nendif\n\nendif\n\nuninstall:\n\t$(MAKE) -C applications uninstall\n\t$(MAKE) uninstall-lib\n\trm -rf $(DESTDIR)$(prefix)/$(lib_dir)/$(moddir)\n\trm -rf $(DESTDIR)$(prefix)/bin/MP4Box\n\trm -rf $(DESTDIR)$(prefix)/bin/gpac\n\trm -rf $(DESTDIR)$(prefix)/$(man_dir)/man1/mp4box.1\n\trm -rf $(DESTDIR)$(prefix)/$(man_dir)/man1/gpac.1\n\trm -rf $(DESTDIR)$(prefix)/$(man_dir)/man1/gpac-filters.1\n\trm -rf $(DESTDIR)$(prefix)/share/gpac\n\trm -rf $(DESTDIR)$(prefix)/share/icons/hicolor/128x128/apps/gpac.png\n\trm -rf $(DESTDIR)$(prefix)/share/applications/gpac.desktop\n\n\ninstalldylib:\nifneq ($(STATIC_BINARY),yes)\n\n\t$(INSTALL) -d \"$(DESTDIR)$(prefix)/$(lib_dir)\"\n\nifeq ($(CONFIG_WIN32),yes)\n\t$(INSTALL) -d \"$(DESTDIR)$(prefix)/bin\"\n\n\t$(INSTALL) $(INSTFLAGS) -m 755 bin/gcc/libgpac.dll.a $(DESTDIR)$(prefix)/$(lib_dir)\n\t$(INSTALL) $(INSTFLAGS) -m 755 bin/gcc/libgpac.dll $(DESTDIR)$(prefix)/bin\nelse\n\nifeq ($(DEBUGBUILD),no)\n\t$(STRIP) -S bin/gcc/libgpac$(DYN_LIB_SUFFIX)\nendif\n\nifeq ($(CONFIG_DARWIN),yes)\n\t$(INSTALL) -m 755 bin/gcc/libgpac$(DYN_LIB_SUFFIX) $(DESTDIR)$(prefix)/$(lib_dir)/libgpac.$(VERSION_SONAME)$(DYN_LIB_SUFFIX)\n\tln -sf libgpac.$(VERSION_SONAME)$(DYN_LIB_SUFFIX) $(DESTDIR)$(prefix)/$(lib_dir)/libgpac.$(VERSION_MAJOR)$(DYN_LIB_SUFFIX)\n\tln -sf libgpac.$(VERSION_SONAME)$(DYN_LIB_SUFFIX) $(DESTDIR)$(prefix)/$(lib_dir)/libgpac$(DYN_LIB_SUFFIX)\nelse\n\t$(INSTALL) $(INSTFLAGS) -m 755 bin/gcc/libgpac$(DYN_LIB_SUFFIX).$(VERSION_SONAME) $(DESTDIR)$(prefix)/$(lib_dir)/libgpac$(DYN_LIB_SUFFIX).$(VERSION_SONAME)\n\tln -sf libgpac$(DYN_LIB_SUFFIX).$(VERSION_SONAME) $(DESTDIR)$(prefix)/$(lib_dir)/libgpac.so.$(VERSION_MAJOR)\n\tln -sf libgpac$(DYN_LIB_SUFFIX).$(VERSION_SONAME) $(DESTDIR)$(prefix)/$(lib_dir)/libgpac.so\nifeq ($(DESTDIR)$(prefix),$(prefix))\n\tldconfig || true\nendif\nendif\n\nendif\n\nendif\n\n\nuninstalldylib:\n\trm -rf $(DESTDIR)$(prefix)/$(lib_dir)/libgpac*\nifeq ($(CONFIG_WIN32),yes)\n\trm -rf \"$(DESTDIR)$(prefix)/bin/libgpac*\"\nendif\n\ninstall-lib:\n\t$(INSTALL) -d \"$(DESTDIR)$(prefix)/include/gpac\"\n\t$(INSTALL) -d \"$(DESTDIR)$(prefix)/include/gpac/internal\"\n\t$(INSTALL) -d \"$(DESTDIR)$(prefix)/include/gpac/modules\"\n\n\t$(INSTALL) $(INSTFLAGS) -m 644 $(SRC_PATH)/include/gpac/*.h \"$(DESTDIR)$(prefix)/include/gpac\"\n\t$(INSTALL) $(INSTFLAGS) -m 644 $(SRC_PATH)/include/gpac/internal/*.h \"$(DESTDIR)$(prefix)/include/gpac/internal\"\n\t$(INSTALL) $(INSTFLAGS) -m 644 $(SRC_PATH)/include/gpac/modules/*.h \"$(DESTDIR)$(prefix)/include/gpac/modules\"\n\n\t$(INSTALL) $(INSTFLAGS) -m 644 config.h \"$(DESTDIR)$(prefix)/include/gpac/configuration.h\" || true\n\n\t$(INSTALL) -d \"$(DESTDIR)$(prefix)/$(lib_dir)\"\n\t$(INSTALL) $(INSTFLAGS) -m 644 \"./bin/gcc/libgpac_static.a\" \"$(DESTDIR)$(prefix)/$(lib_dir)\" || true\n\n\t$(INSTALL) -d $(DESTDIR)$(prefix)/$(lib_dir)/pkgconfig\n\t$(INSTALL) $(INSTFLAGS) -m 644 gpac.pc \"$(DESTDIR)$(prefix)/$(lib_dir)/pkgconfig\"\n\n\t$(MAKE) installdylib\n\n\nuninstall-lib:\n\trm -rf \"$(DESTDIR)$(prefix)/include/gpac/internal\"\n\trm -rf \"$(DESTDIR)$(prefix)/include/gpac/modules\"\n\trm -rf \"$(DESTDIR)$(prefix)/include/gpac/enst\"\n\trm -rf \"$(DESTDIR)$(prefix)/include/gpac\"\n\trm -f  \"$(DESTDIR)$(prefix)/$(lib_dir)/libgpac_static.a\"\n\trm -f  \"$(DESTDIR)$(prefix)/$(lib_dir)/pkgconfig/gpac.pc\"\n\t$(MAKE) uninstalldylib\n\nifeq ($(CONFIG_DARWIN),yes)\ndmg:\n\t./mkdmg.sh $(arch)\nendif\n\nifeq ($(CONFIG_LINUX),yes)\n\n# strip illegal debian version string characters\nDHBRANCH:=$(shell echo \"$(BRANCH)\" | sed 's/[^-+:.0-9a-zA-Z~]/-/g' )\n\ndeb:\n\tgit checkout --\tdebian/changelog\n\tfakeroot debian/rules clean\n\t# add version to changelog for final filename\n\tsed -i -r \"s/^(\\w+) \\(([0-9\\.]+)(-[A-Z]+)?\\)/\\1 (\\2\\3-rev$(VERSION)-$(DHBRANCH))/\" debian/changelog\n\tfakeroot debian/rules configure\n\tfakeroot debian/rules binary\n\trm -rf debian/\n\tgit checkout debian\nendif\n\nhelp:\n\t@echo \"Input to GPAC make:\"\n\t@echo \"depend/dep: builds dependencies (dev only)\"\n\t@echo \"all (void): builds main library, programs and plugins\"\n\t@echo \"lib: builds GPAC library only (libgpac.so)\"\n\t@echo \"apps: builds programs only\"\n\t@echo \"modules: builds modules only\"\n\t@echo \"sggen: builds scene graph generators\"\n\t@echo\n\t@echo \"clean: clean src repository\"\n\t@echo \"distclean: clean src repository and host config file\"\n\t@echo\n\t@echo \"install: install applications and modules on system\"\n\t@echo \"uninstall: uninstall applications and modules\"\nifeq ($(CONFIG_DARWIN),yes)\n\t@echo \"dmg: creates DMG package file for OSX\"\nendif\nifeq ($(CONFIG_LINUX),yes)\n\t@echo \"deb: creates DEB package file for debian based systems\"\nendif\n\t@echo\n\t@echo \"install-lib: install gpac library (dyn and static) and headers <gpac/*.h>, <gpac/modules/*.h> and <gpac/internal/*.h>\"\n\t@echo \"uninstall-lib: uninstall gpac library (dyn and static) and headers\"\n\t@echo\n\t@echo \"test_suite: run all tests. For more info, check https://github.com/gpac/testsuite\"\n\t@echo\n\t@echo \"doc:  build libgpac documentation in gpac/doc\"\n\t@echo \"man:  build gpac man files in gpac/doc/man (must have latest build binaries installed)\"\n\t@echo\n\t@echo \"lcov: generate lcov files\"\n\t@echo \"lcov_clean: clean all lcov/gcov files\"\n\n\n-include .depend\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.7724609375,
          "content": "[![Build Status](https://tests.gpac.io/testres/badge/build/ubuntu64)](https://buildbot.gpac.io/#/grid?branch=master)\n[![Tests](https://tests.gpac.io/testres/badge/tests/linux64)](https://tests.gpac.io/)\n\n[![Build Status](https://tests.gpac.io/testres/badge/build/debian32)](https://buildbot.gpac.io/#/grid?branch=master)\n[![Tests](https://tests.gpac.io/testres/badge/tests/linux32)](https://tests.gpac.io/)\n\n[![Build Status](https://tests.gpac.io/testres/badge/build/windows64)](https://buildbot.gpac.io/#/grid?branch=master)\n[![Tests](https://tests.gpac.io/testres/badge/tests/win64)](https://tests.gpac.io/)\n\n[![Build Status](https://tests.gpac.io/testres/badge/build/windows32)](https://buildbot.gpac.io/#/grid?branch=master)\n[![Tests](https://tests.gpac.io/testres/badge/tests/win32)](https://tests.gpac.io/)\n\n[![Build Status](https://tests.gpac.io/testres/badge/build/macos)](https://buildbot.gpac.io/#/grid?branch=master)\n[![Tests](https://tests.gpac.io/testres/badge/tests/macos)](https://tests.gpac.io/)\n\n[![Build Status](https://tests.gpac.io/testres/badge/build/ios)](https://buildbot.gpac.io/#/grid?branch=master)\n[![Build Status](https://tests.gpac.io/testres/badge/build/android)](https://buildbot.gpac.io/#/grid?branch=master)\n\n[![Coverage](https://tests.gpac.io/testres/badge/cov/linux64?branch=master)](https://tests.gpac.io/testres/)\n[![Coverage](https://tests.gpac.io/testres/badge/covfn/linux64?branch=master)](https://tests.gpac.io/testres/)\n\n![License](https://img.shields.io/badge/license-LGPL-blue.svg)\n[![OpenHub](https://www.openhub.net/p/gpac/widgets/project_thin_badge.gif)](https://www.openhub.net/p/gpac)\n\n\n# GPAC Introduction\n\nCurrent version: 2.5-DEV\n\nLatest Release: 2.4\n\nGPAC is an open-source multimedia framework focused on modularity and standards compliance.\nGPAC provides tools to process, inspect, package, stream, playback and interact with media content. Such content can be any combination of audio, video, subtitles, metadata, scalable graphics, encrypted media, 2D/3D graphics and ECMAScript.\nGPAC is best-known for its wide MP4/ISOBMFF capabilities and is popular among video enthusiasts, academic researchers, standardization bodies, and professional broadcasters.\n\nFor more information, visit [https://gpac.io](https://gpac.io)\n\nGPAC is distributed under the LGPL v2.1 or later, and is also available, for most of it, under a [commercial license](https://www.motionspell.com/gpac-licensing).\n\nPlease ! _cite_ ! our work in your research:\n- \"GPAC Filters\" (https://doi.org/10.1145/3339825.3394929) for recent versions (0.9 or above) \n- \"GPAC: open source multimedia framework\" (https://doi.org/10.1145/1291233.1291452) for older versions.\n\n\n# Features\n\nGPAC can process, analyse, package, stream, encode, decode and playback a wide variety of contents. Selected feature list:\n- Audio: MPEG audio (mp1/2/3, aac), AC3, E-AC3, Opus, FLAC, …\n- Video: MPEG 1 / 2 / 4 (H264/AVC) / H (HEVC), VVC, AV1, VP9, Theora, ...\n- Subtitles: WebVTT, TTML (full, EBU-TTD, …), 3GPP/Apple Timed Text, …\n- Encryption: CENC, PIFF, ISMA, OMA, ...\n- Containers: MP4/fMP4/CMAF/Quicktime MOV/ProRes MOV, AVI, MPG, OGG, MKV, ...\n- Streaming: MPEG-2 Transport Stream, RTP, RTSP, HTTP, Apple HLS, MPEG-DASH, ATSC 3.0 ROUTE, ...\n- Supported IOs: local files, pipes, UDP/TCP, HTTP(S), custom IO\n- Presentation formats: MPEG-4 BIFS, SVG Tiny 1.2, VRML/X3D\n- JS scripting through QuickJS for both SVG/BIFS/VRML and extending GPAC framework tools\n- 3D support (360 videos, WebGL JS filters…)\n- Inputs: microphone, camera, desktop grabbing\n- Highly configurable media processing pipeline\n- Python and NodeJS bindings\n\nFeatures are encapsulated in processing modules called filters:\n- to get the full list of available features, you can run the command line `gpac -h filters` or check [filters' wiki](https://wiki.gpac.io/Filters/Filters).\n- to get the full list of playback features, check [the dedicated wiki page](https://wiki.gpac.io/Player/Player).\n\n\n# Tools\n\n## MP4Box\nMP4Box is a multi-purpose MP4 file manipulation for the prompt, featuring media importing and extracting, file inspection, DASH segmentation, RTP hinting, ... See `MP4Box -h`, `man MP4Box` or [our wiki](https://wiki.gpac.io/MP4Box/MP4Box).\n\n\n## gpac \nGPAC includes a filter engine in charge of stream management and used by most applications in GPAC - [read this post](https://wiki.gpac.io/Filters/Rearchitecture) for more discussion on how this impacts MP4Box.\nThe gpac application is a direct interface to the filter engine of GPAC, allowing any combination of filters not enabled by other applications. See `gpac -h`, `man gpac`, `man gpac-filters` or [our wiki](https://wiki.gpac.io/Filters/Filters) for more details.\n\n# Getting started\n## Download\nStable and nightly builds installers for Windows, Linux, OSX, Android, iOS are available on [gpac.io](https://gpac.io/downloads/).\n\nIf you want to compile GPAC yourself, please follow the instructions in the [build section](https://wiki.gpac.io/Build/Build-Introduction) of our wiki.\n\n## Documentation\nThe general GPAC framework documentation is available on [wiki.gpac.io](https://wiki.gpac.io), including [HowTos](https://wiki.gpac.io/Howtos/howtos/).\n\nGPAC tools are mostly wrappers around an underlying library called libgpac which can easily be embedded in your projects. The libgpac developer documentation is available at [doxygen.gpac.io](https://doxygen.gpac.io), including documentation of [JS APIs](https://doxygen.gpac.io/group__jsapi__grp.html), [Python APIs](https://doxygen.gpac.io/group__pyapi__grp.html) and [NodeJS APIs](https://doxygen.gpac.io/group__nodejs__grp.html).\n\n\n## Testing\nGPAC has a test suite exercising most features of the framework. The test suite is in a separate repository [https://github.com/gpac/testsuite/](https://github.com/gpac/testsuite/), but is available as a submodule of the GPAC main repository. To initialize the testsuite submodule, do `git submodule update --init`.\n\nFor more details on the test suite, read [this page](https://wiki.gpac.io/Build/tests/GPAC_tests/) and check the [testsuite readme](https://github.com/gpac/testsuite).\n\nPer-commit [build](https://buildbot.gpac.io/) and [tests results](https://tests.gpac.io) are available.\n\n\n## Support, ongoing tasks and bugs\n\nPlease use [github](https://github.com/gpac/gpac/issues) for feature requests and bug reports. When filing a request there, please tag it as _feature-request_.\t\n\n## Contributing\nA complex project like GPAC wouldn’t exist and persist without the support of its community. Please contribute: a nice message, supporting us in our communication, reporting issues when you see them… any gesture, even the smallest ones, counts. \n\nIf you want to contribute to GPAC, you can find ideas at [GSoC page](https://gpac.io/jobs/google-summer-of-code-ideas/) or look for a [good first issue](https://github.com/gpac/gpac/labels/good%20first%20issue). In any doubt please feel free to [contact us](mailto:contact@gpac.io).\n\n# Team\nGPAC is brought to you by an experienced team of developers with a wide track-record on media processing. \n\nThe project is mainly developed in the MultiMedia group of [Telecom Paris](https://www.telecom-paris.fr/) with the help of many [great contributors](https://github.com/gpac/gpac/graphs/contributors).\n\nGPAC has a peculiar story: started as a startup in NYC, GPAC gained traction from research and a nascent multimedia community as it was open-sourced in 2003. Since then we have never stopped transforming GPAC into a useful and up-to-date project, with many industrial R&D collaborations and a community of tens of thousands of users. This makes GPAC one of the few open-source multimedia projects that gathers so much diversity.\n\n\n# Roadmap\nUsers are encouraged to use the latest tag or the master branch.\n\n## V2.X\nTargets:\n- [ ] DASH event support\n- [ ] Web GUI\n- [ ] QUIC support\n- [ ] ROUTE file repair support\n- [ ] FLUTE support\n- [ ] Rust Bindings\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.2373046875,
          "content": "# Security Policy\n\n## Email Contact\n\nsecurity@gpac.io\n\n## Supported Versions\n\nGPAC is under constant development using a continuous integration and deployment process. As a consequence the `HEAD` of the `master` branch is always considered as the _current version_ at any point. \n\nThus only reports that are confirmed reproducible on the current `HEAD` of the `master` branch will receive a patch. \n\n\n## Reporting a Vulnerability\n\nVulnerabilities (as well as other bugs) should be reported directly using the [Github issue tracker](https://github.com/gpac/gpac/issues).\n\nCorner cases which do not lead to some security concerns are not considered as part as our security policy. For example isolated overflows generated by fuzzers and reported by ASAN and not leading to a crash are excluded.\n\nPlease include all information needed to reproduce the issue, including a sample file. \n\nSample files can be joined directly via github (preferred way) or uploaded to the [GPAC file drop](https://www.mediafire.com/filedrop/filedrop_hosted.php?drop=eec9e058a9486fe4e99c33021481d9e1826ca9dbc242a6cfaab0fe95da5e5d95).\n\nHowever if public disclosure seems unreasonable, or if confidential information needs to be shared, you can contact security@gpac.io for private disclosure.\n"
        },
        {
          "name": "applications",
          "type": "tree",
          "content": null
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "change_version.sh",
          "type": "blob",
          "size": 1.998046875,
          "content": "#!/bin/sh\n\n\nversion=\"`grep '#define GPAC_VERSION ' \\\"./include/gpac/version.h\\\" | cut -d '\"' -f 2`\"\nversion_major=`grep '#define GPAC_VERSION_MAJOR ' ./include/gpac/version.h | sed 's/[^0-9]*//g'`\nversion_minor=`grep '#define GPAC_VERSION_MINOR ' ./include/gpac/version.h | sed 's/[^0-9]*//g'`\nversion_micro=`grep '#define GPAC_VERSION_MICRO ' ./include/gpac/version.h | sed 's/[^0-9]*//g'`\nlibgac_version=\"$version_major.$version_minor.$version_micro\"\n\necho \"Version is $version - libgpac $libgac_version\"\n\n#patch README.md\nsource=\"README.md\"\nsed -e \"s/README for GPAC version.*/README for GPAC version $version/;\" $source > ftmp\nrm $source\nmv ftmp $source\n\n\n#patch  applications/gpac/ios-Info.plist\nsource=\"applications/gpac/ios-Info.plist\"\nsed -e \"/CFBundleShortVersionString/{n;s/.*/\t<string>$version<\\/string>/;}\" $source | sed -e \"/CFBundleVersion/{n;s/.*/\t<string>$libgac_version<\\/string>/;}\" > ftmp\nrm $source\nmv ftmp $source\n\n# patch file gpac.pc\nsource=\"gpac.pc\"\nsed -e \"s/Version:.*/Version:$version/;\" $source > ftmp\nrm $source\nmv ftmp $source\n\n# patch file gpac.spec\nsource=\"gpac.spec\"\nsed -e \"s/Version:.*/Version: $version/;\" $source | sed -e \"s/Release:.*/Release: $version/;\" | sed -e \"s/Source0:.*/Source0: gpac-$version.tar.gz/;\" > ftmp\nrm $source\nmv ftmp $source\n\n# patch file debian/changelog\nsource=\"debian/changelog\"\nsed -e \"s/gpac (.*/gpac ($version) stable; urgency=low/;\" $source | sed -e \"s/Check https.*/Check https:\\/\\/github.com\\/gpac\\/gpac\\/releases\\/tag\\/v$version/;\" > ftmp\nrm $source\nmv ftmp $source\n\n# patch packagers/win32_64/nsis/gpac_installer.nsi\nsource=\"packagers/win32_64/nsis/gpac_installer.nsi\"\nsed -e \"s/\\!define GPAC_VERSION.*/\\!define GPAC_VERSION $version/;\" $source > ftmp\nrm $source\nmv ftmp $source\n\n#patch  packagers/osx/GPAC.app/Contents/Info.plist\nsource=\"packagers/osx/GPAC.app/Contents/Info.plist\"\nsed -e \"/CFBundleShortVersionString/{n;s/.*/\t<string>$version<\\/string>/;}\" $source | sed -e \"/CFBundleVersion/{n;s/.*/\t<string>$libgac_version<\\/string>/;}\" > ftmp\nrm $source\nmv ftmp $source\n\n"
        },
        {
          "name": "check_revision.sh",
          "type": "blob",
          "size": 0.974609375,
          "content": "#!/bin/sh\n\nversion=\"`grep '#define GPAC_VERSION ' \\\"./include/gpac/version.h\\\" | cut -d '\"' -f 2`\"\n\n#check for .git - if so use nb commits till last tag for rev + commit id\nif [ -d \".git\" ]; then\nTAG=$(git describe --tags --abbrev=0 2>>gtmp)\nVERSION=$(echo `git describe --tags --long 2>>gtmp || echo \"UNKNOWN\"` | sed \"s/^$TAG-//\")\nBRANCH=$(git rev-parse --abbrev-ref HEAD 2>>gtmp || echo \"UNKNOWN\")\nrevision=\"$VERSION-$BRANCH\"\n\nrm gtmp\n\necho \"#define GPAC_GIT_REVISION\t\\\"$revision\\\"\" > htmp\n\nif ! diff htmp ./include/gpac/revision.h > /dev/null ; then\necho \"revision has changed\"\nrm ./include/gpac/revision.h\nmv htmp ./include/gpac/revision.h\nelse\nrm htmp\nfi\n\nelse\n#otherwise, check id -DEV is in the version name. If not consider this a release\n\nif [ ! -e \".include/gpac/revision.h\" ]; then\n\nif test \"$version\" != *\"-DEV\"* ; then\necho \"#define GPAC_GIT_REVISION \\\"release\\\"\" > ./include/gpac/revision.h\nelse\necho \"#define GPAC_GIT_REVISION \\\"UNKNOWN_REV\\\"\" > ./include/gpac/revision.h\nfi\n\nfi\n\nfi\n"
        },
        {
          "name": "configure",
          "type": "blob",
          "size": 86.5224609375,
          "content": "#!/bin/sh\n#\n# GPAC configure script\n#     (c) 2003-2024 Telecom ParisTech\n#     Authors: Jean Le Feuvre, Romain Bouqueau, Aurelien David\n#\n#set -v\n\n#set temporary file name\nif test ! -z \"$TMPDIR\" ; then\n    TMPDIR1=\"${TMPDIR}\"\nelif test ! -z \"$TEMPDIR\" ; then\n    TMPDIR1=\"${TEMPDIR}\"\nelse\n    TMPDIR1=\"/tmp\"\nfi\n\n\n#remember the ./configure command line\nGPAC_CONFIGURATION=\"$@\"\n\nTMPC=\"${TMPDIR1}/gpac-conf-${RANDOM}-$$-${RANDOM}.c\"\nTMPH=\"${TMPDIR1}/gpac-conf-${RANDOM}-$$-${RANDOM}.h\"\nTMPCXX=\"${TMPDIR1}/gpac-conf-${RANDOM}-$$-${RANDOM}.cpp\"\nTMPE=\"${TMPDIR1}/gpac-conf-${RANDOM}-$$-${RANDOM}\"\nTMPO=\"${TMPDIR1}/gpac-conf-${RANDOM}-$$-${RANDOM}.o\"\nTMPS=\"${TMPDIR1}/gpac-conf-${RANDOM}-$$-${RANDOM}.S\"\nTMPL=\"${TMPDIR1}/gpac-conf-${RANDOM}-$$-${RANDOM}.LOG\"\n\n# DO NOT DECLARE variables called disable_, this is reserved for features:\n#each feature FOO declare upon load the variable disable_FOO ('-' replaced with '_' in var name)\n\n#default parameters\nDESTDIR=\"\"\nprefix=\"/usr/local\"\nmandir=\"\"\ncross_prefix=\"\"\ntargetos=\"\"\ndxsdk_path=\"\"\n\ncc_orig=$CC\nif test \"$cc_orig\" = \"\" ; then\ncc_orig=\"gcc\"\nfi\n\ncxx_orig=$CXX\nif test \"$cxx_orig\" = \"\" ; then\ncxx_orig=\"g++\"\nfi\n\nar=\"$AR\"\nif test \"$ar\" = \"\" ; then\nar=\"ar\"\nfi\n\nranlib=\"$RANLIB\"\nif test \"$ranlib\" = \"\" ; then\nranlib=\"ranlib\"\nfi\n\nmake=\"$MAKE\"\nif test \"$make\" = \"\" ; then\nmake=\"make\"\nfi\n\nstrip=\"$STRIP\"\nif test \"$strip\" = \"\" ; then\nstrip=\"strip\"\nfi\n\npkg_config=\"pkg-config\"\nwindres=\"windres\"\nreadelf=\"readelf\"\ninstall=\"${INSTALL:=install}\"\ninstflags=\"${INSTFLAGS:=-p}\"\ncpu=`uname -m`\ndebuginfo=\"no\"\nsdl_path=\"\"\nsdl_local=\"no\"\nsdl_static=\"no\"\nverbose=\"no\"\nlibdir=\"lib\"\nno_gcc_opt=\"no\"\nuse_fixed_point=\"no\"\nuse_memory_tracking=\"no\"\ngprof_build=\"no\"\nwant_pic=\"no\"\nwant_gcov=\"no\"\nenable_sanitizer=\"no\"\nlibgpac_cflags=\"\"\nlibgpac_extralibs=\"\"\nstatic_build=\"no\"\nstatic_bin=\"no\"\nunit_tests=\"no\"\nstatic_modules=\"no\"\nlm_lib=\"\"\nhas_directx=\"no\"\nwin32=\"no\"\nmingw32=\"no\"\ncygwin=\"no\"\nlinux=\"no\"\nfreebsd=\"no\"\ndarwin=\"no\"\nsunos=\"no\"\nalt_macosx_dir=\"\"\nMac_Applications=\"\"\nextralibs=\"-lm\"\nbigendian=\"no\"\nSHFLAGS=-shared\nneed_inet_aton=\"no\"\nCFLAGS=\"\"\nCXXFLAGS=\"\"\nPTHREAD_CFLAGS=\"\"\nPTHREAD_LDFLAGS=-lpthread\nGPAC_SH_FLAGS=\"\"\nDYN_LIB_SUFFIX=\".so\"\nX11_PATH=\"/usr/X11R6\"\nINSTFLAGS=\"\"\nis_64=\"no\"\nis_em=\"no\"\nis_emcfg=\"no\"\nhas_remotery=\"yes\"\nem_type=\"js\"\nem_size=\"0\"\nfatal_assert=\"no\"\n\n#flags not set by generic lib config\nhas_x11=\"no\"\nhas_x11_shm=\"no\"\nhas_x11_xv=\"no\"\nhas_x11_glx=\"no\"\nffmpeg_vvc=\"no\"\n\nhas_strlcpy=\"no\"\n\nffmpeg_extra_ldflags=\"\"\n\ncase \"$cc_orig\" in\n    *emcc) is_emcfg=\"yes\"\n        ;;\nesac\n\nnb_features=0\nall_features=\"\"\nall_descs=\"\"\nnb_filters=0\nall_filters=\"\"\n\npush_feature()\n{\n    name=$1\n    #var=${name//[-]/_}\n    var=$(printf '%s' \"$name\" | tr '-' '_')\n    desc=\"$2\"\n\n    fc=`echo $desc | cut -c1-1`\n    if test \"$fc\" = \"!\" ; then\n        eval \"disable_$var=\\\"yes\\\"\"\n    else\n        eval \"disable_$var=\\\"no\\\"\"\n    fi\n\n    if test \"$fc\" = \"*\" ; then\n        desc=`echo $desc | cut -c2-`\n        desc=\"$desc filter\"\n        if [ -z $all_filters ] ; then\n            all_filters=\"$1\"\n        else\n            all_filters=\"$all_filters|$1\"\n        fi\n        nb_filters=$((nb_filters+1))\n    fi\n\n\n    if [ -z $all_features ] ; then\n        all_features=\"$1\"\n        all_descs=\"$desc\"\n    else\n        all_features=\"$all_features|$1\"\n        all_descs=\"$all_descs|$desc\"\n    fi\n    nb_features=$((nb_features+1))\n}\n\n#all features enabled with --enable- or --disable-\n#if first character is !, feature is disabled by default otherwise enabled by default\n\npush_feature \"log\" \"logging support\"\npush_feature \"3d\" \"3D rendering\"\npush_feature \"threads\" \"Threading support\"\npush_feature \"network\" \"Network support (including RTP streaming)\"\npush_feature \"crypto\" \"crypto support\"\npush_feature \"restrict\" \"!restriction configuration file\"\npush_feature \"svg\" \"SVG 1.2 support\"\npush_feature \"vrml\" \"MPEG-4/VRML/X3D support\"\npush_feature \"x3d\" \"X3D-only support\"\npush_feature \"depth\" \"!depth handling in the compositor\"\npush_feature \"odf\" \"full support of MPEG-4 OD Framework\"\npush_feature \"bifs\" \"MPEG-4 BIFS decoding\"\npush_feature \"bifs-enc\" \"MPEG-4 BIFS encoding\"\npush_feature \"laser\" \"MPEG-4 LaSer encode and decode\"\npush_feature \"seng\" \"scene encoder engine\"\npush_feature \"qtvr\" \"import of Cubic QTVR files\"\npush_feature \"swf\" \"SWF import\"\npush_feature \"scene-stats\" \"scene graph statistics\"\npush_feature \"scene-dump\" \"scene graph dump\"\npush_feature \"scene-encode\" \"BIFS & LASeR to ISOBMFF\"\npush_feature \"loader-isoff\" \"scene loading from ISO File Format\"\npush_feature \"loader-bt\" \"scene loading from BT/VRML files\"\npush_feature \"loader-xmt\" \"scene loading from XMT/X3D files\"\npush_feature \"od-dump\" \"MPEG-4 OD dump\"\npush_feature \"od-parse\" \"MPEG-4 OD parse\"\npush_feature \"scenegraph\" \"scenegraph, scene parsers and player (compositor)\"\npush_feature \"smgr\" \"scene manager\"\npush_feature \"codecs\" \"All audio and video codec support\"\npush_feature \"parsers\" \"AV bitstream parsers\"\npush_feature \"import\" \"media importers\"\npush_feature \"export\" \"media exporters\"\npush_feature \"avi\" \"AVI read and write\"\npush_feature \"ogg\" \"OGG read and write\"\npush_feature \"m2ps\" \"MPEG-2 PS read\"\npush_feature \"m2ts\" \"MPEG-2 TS demultiplexer\"\npush_feature \"m2ts-mux\" \"MPEG-2 TS multiplexer\"\npush_feature \"saf\" \"SAF container\"\npush_feature \"isom-dump\" \"ISOBMFF file dump\"\npush_feature \"isoff\" \"ISOBMFF support\"\npush_feature \"isoff-write\" \"ISOBMFF edit/write support\"\npush_feature \"isoff-hint\" \"ISOBMFF hinting support\"\npush_feature \"isoff-frag\" \"ISOBMFF fragments support\"\npush_feature \"isoff-hds\" \"Adobe HDS in ISOBMFF support\"\npush_feature \"streaming\" \"RTP/RTSP/SDP support\"\npush_feature \"fonts\" \"Font and Text engine (used by compositor and EVG.js\"\npush_feature \"player\" \"deprecated - old name for compositor feature\"\npush_feature \"dvbx\" \"!DVB-specific tools (MPE, FEC, DSM-CC)\"\npush_feature \"vobsub\" \"VobSub support\"\npush_feature \"ttxt\" \"TTXT (3GPP / MPEG-4 Timed Text) support\"\npush_feature \"ttml\" \"TTML/EBU TTD support\"\npush_feature \"vtt\" \"WebVTT support\"\npush_feature \"route\" \"ROUTE (ATSC3) support\"\npush_feature \"qjs\" \"QuickJS support\"\npush_feature \"qjs-libc\" \"QuickJS libc module support\"\npush_feature \"qjs-stack\" \"!stack depth checking in QuickJS (WILL CRASH in multithreaded modes)\"\npush_feature \"tinygl\" \"!TinyGL support\"\npush_feature \"doc\" \"Embedded documentation\"\npush_feature \"evg\" \"EVG (GPAC vector graphics tools)\"\npush_feature \"avdevice\" \"avdevice support in FFmpeg\"\npush_feature \"avfilter\" \"avfilter support in FFmpeg\"\npush_feature \"net-cap\" \"network grab and replay support\"\n\npush_feature \"compositor\" \"*Compositor\"\npush_feature \"vout\" \"*video output\"\npush_feature \"aout\" \"*audio output\"\npush_feature \"bsagg\" \"*scalable bitstream aggregator\"\npush_feature \"bssplit\" \"*scalable bitstream spliter\"\npush_feature \"bsrw\" \"*bitstream rewriter\"\npush_feature \"dasher\" \"*DASH/HLS mux\"\npush_feature \"dashin\" \"*DASH/HLS demux\"\npush_feature \"imgdec\" \"*image decoder\"\npush_feature \"uncvdec\" \"*uncompressed video decoder\"\npush_feature \"cdcrypt\" \"*CENC decryptor\"\npush_feature \"ghidmx\" \"*GPAC HTTP Streaming index demuxer\"\npush_feature \"gsfdmx\" \"*GPAC serialized format demuxer\"\npush_feature \"nhmlr\" \"*NHML demuxer\"\npush_feature \"nhntr\" \"*NHNT demuxer\"\npush_feature \"cecrypt\" \"*CENC Encryptor\"\npush_feature \"flist\" \"*Playlist concetenator\"\npush_feature \"hevcmerge\" \"*HEVC tile merger\"\npush_feature \"hevcsplit\" \"*HEVC tile spliter\"\npush_feature \"fin\" \"*File input\"\npush_feature \"pin\" \"*Pipe input\"\npush_feature \"inspect\" \"*Inspecter\"\npush_feature \"cryptfile\" \"*Crypted input and output file\"\npush_feature \"mp4dmx\" \"*MP4/QT demuxer\"\npush_feature \"txtin\" \"*Subtitle loader\"\npush_feature \"gsfmx\" \"*GPAC serialized format demuxer\"\npush_feature \"mp4mx\" \"*MP4/QT muxer\"\npush_feature \"fout\" \"*File output\"\npush_feature \"pout\" \"*Pipe output\"\npush_feature \"rfac3\" \"*AC3 parser\"\npush_feature \"rfadts\" \"*ADTS parser\"\npush_feature \"rfamr\" \"*AMR parser\"\npush_feature \"rfav1\" \"*AV1/VP9 parser\"\npush_feature \"rfflac\" \"*FLAC parser\"\npush_feature \"rfh263\" \"*H263 parser\"\npush_feature \"rfimg\" \"*Image parser\"\npush_feature \"rflatm\" \"*LATM parser\"\npush_feature \"rfmhas\" \"*MPEG-H Audio parser\"\npush_feature \"rfmp3\" \"*MP3 parser\"\npush_feature \"rfmpgvid\" \"*MPEG 1/2/4 video parser\"\npush_feature \"rfnalu\" \"*NALU-based video parser\"\npush_feature \"rfprores\" \"*QT ProRes parser\"\npush_feature \"rfqcp\" \"*QCP file parser\"\npush_feature \"rfpcm\" \"*Raw PCM and wav parser\"\npush_feature \"rfrawvid\" \"*Raw video parser\"\npush_feature \"rftruehd\" \"*Dolby TrueHD parser\"\npush_feature \"reframer\" \"*Reframer\"\npush_feature \"resample\" \"*Audio resampler\"\npush_feature \"restamp\" \"*Restamper\"\npush_feature \"rewind\" \"*Reverse playback\"\npush_feature \"ufaac\" \"*ADTS and LATM rewriter\"\npush_feature \"ufmhas\" \"*MPEG-H Audio rewriter\"\npush_feature \"ufm4v\" \"*MPEG 1/2/4 and VC1 video rewriter\"\npush_feature \"ufnalu\" \"*NALU-based video rewriter\"\npush_feature \"ufobu\" \"*AV1/VP9 video rewriter\"\npush_feature \"tileagg\" \"*HEVC Tile aggregator\"\npush_feature \"tilesplit\" \"*HEVC Tile spliter\"\npush_feature \"ttmlconv\" \"*TTML conversion\"\npush_feature \"unframer\" \"*Unframer\"\npush_feature \"vcrop\" \"*Video croping\"\npush_feature \"vflip\" \"*Video flip\"\npush_feature \"writegen\" \"*Generic rewriter\"\npush_feature \"webcodec\" \"*WebCodecs support\"\npush_feature \"nhmlw\" \"*NHML writer\"\npush_feature \"nhntw\" \"*NHNT writer\"\npush_feature \"writeqcp\" \"*QCP writer\"\npush_feature \"units\" \"*unit tests\"\npush_feature \"nvdec\" \"*NVDec decoder\"\npush_feature \"vtbdec\" \"*VideoToolBox (OSX/iOS) decoder\"\n\nar_it=\"\"\nget_item()\n{\n    idx=$1\n    IFS='|'\n    set -- $2\n    eval \"ar_it=\\${$idx}\"\n    IFS=' '\n}\nget_item2()\n{\n    idx=$1\n    set -- $2\n    eval \"ar_it=\\${$idx}\"\n}\n\n\nnb_it=0\nget_size()\n{\n    nb_it=`echo \"$1\" | wc -w`\n}\n\n#zlib MUST be first\nall_packages=\"zlib opensvc openhevc platinum freetype ssl jpeg openjpeg png mad a52 xvid faad ffmpeg freenect vorbis theora nghttp2\"\nall_packages=\"$all_packages oss dvb4linux alsa pulseaudio jack directfb hid lzma tinygl vtb ogg sdl caption mpeghdec libcaca curl\"\ndisabled_packages=\"\"\n\n#init all has_FOO=no and set FOO_cflags=\nfor pck in $all_packages ; do\n    eval \"has_$pck=\\\"no\\\"\"\n\n    eval \"cflags_$pck=\\\"\\\"\"\ndone\n\nlogs=\"config.log\"\necho \"Logs for GPAC configure $GPAC_CONFIGURATION\" > $logs\n\n\n#configure usage\nif test x\"$1\" = x\"-h\" -o x\"$1\" = x\"--help\" ; then\n    cat << EOF\n\nUsage: configure [options]\nOptions: [defaults in brackets after descriptions]\n\nGPAC build options:\n  --help                   print this message\n  --prefix=PREFIX          install in PREFIX [$prefix]\n  --libdir=DIR             lib dir in DIR [$libdir]\n  --mandir=DIR             man documentation in DIR [PREFIX/share/man]\n  --verbose                enable verbose building [$verbose]\n  --source-path=PATH       path of source code [$source_path]\n  --cross-prefix=PREFIX    use PREFIX for compile tools [$cross_prefix]\n  --target-os=TARGETOS     use TARGETOS for compile tools [$targetos]\n  --cc=CC                  use C   compiler CC  [$cc]\n  --cxx=CXX                use C++ compiler CXX [$cxx] (also valid as --cpp=CXX)\n  --make=MAKE              use specified make [$make]\n  --extra-cflags=ECFLAGS   add ECFLAGS to CFLAGS [$CFLAGS]\n  --extra-ldflags=ELDFLAGS add ELDFLAGS to LDFLAGS [$LDFLAGS]\n  --extra-libs=ELIBS       add ELIBS [$ELIBS]\n  --cpu=CPU                force cpu to CPU  [$cpu]\n  --enable-debug           produce debug version\n  --enable-gprof           enable profiling\n  --enable-gcov            enable coverage\n  --enable-pic             enable Position Independant Code for shared objects\n  --fatal-assert           make any call to assert abort program\n  --strip                  enable strip\n  --std-allocator          uses standard lib memory allocator\n  --enable-sanitizer       enable address sanitizer\n  --enable-afl             enable instrumentation for American Fuzzy Lop\n  --enable-afl-clang       enable instrumentation for American Fuzzy Lop using afl-clang(++)\n  --disable-opt            disable GCC optimizations\n  --static-build           link statically against libgpac but still allow dependencies to shared libraries (enable --static-modules)\n  --static-bin             enable static linking of MP4Box and gpac only (will enable --static-build), disable all libraries not linkable statically.\n  --unittests              enable unit tests [default=no]\n  --sdl-cfg=SDL_PATH       specify path to sdl-config for local install [$sdl_path]\n  --enable-sdl-static      use static SDL linking [default=no]\n  --X11-path=X11_PATH      specify path for X11 includes and libraries [$X11_PATH]\n  --dxsdk-path=DX_PATH     specify DirectX SDK for MinGW [$dxsdk_path]\n  --extra-ff-ldflags=EF    add EF flags to FFmpeg LDFLAGS [$ffmpeg_extra_ldflags]\n  --emscripten             configure for emscripten build (same as running emconfigure configure) - this will disable some features by default (network, avdevice), use --enable-FOO to re-enable\n  --em-type=EXT            output type, can be js, html or wasm [$em_type]\n  --em-size=V              total memory in bytes to use for emscripten - if 0, dynamic memory growth will be used [$em_size]\n\nGPAC core configuration:\n  --static-modules         embed modules in libgpac rather than using dynamic library modules\n  --enable-fixed-point     enable fixed-point math\n  --disable-ipv6           disable IPV6 support\n  --enable-mem-track       enable tracking of all memory allocated by gpac\n  --disable-remotery       disable Remotery support\n  --disable-x11            disable X11\n  --disable-x11-shm        disable X11 shared memory support\n  --disable-x11-xv         disable X11 Xvideo support\n  --enable-depth           enables depth handling in the compositor (experimental for stereoscopic rendering)\n  --disable-all            disables all features in libgpac (see below)\n  --isomedia-only          disables all features except \"parsers import export isom-dump isoff isoff-write isoff-hint isoff-frag isoff-hds ttxt ttml vtt txtin\"\n\n\nExtra libraries configuration:\nYou can turn a library off or force using the local version in gpac/extra_lib/\n  --use-FOO=no             disable library FOO\n  --use-FOO=local          force use of library FOO in gpac/extra_lib/include, gpac/extra_lib/lib/gcc/bin/\n  --use-FOO=system         force using system version only of library FOO\n  --use-FOO=PATH           force use of library FOO in \\$PATH/include, \\$PATH/lib\n\nExtra libraries used are: $all_packages\nEOF\n\ncat << EOF\n\nFeatures for libgpac configuration:\nFeature FOO can be enabled with --enable-FOO or disabled with --disable-FOO\nEOF\n\nidx=1\nwhile [ $idx -le $nb_features ]; do\n    get_item $idx \"$all_features\"\n    name=\"$ar_it\"\n    get_item $idx \"$all_descs\"\n    desc=\"$ar_it\"\n\n    enabled=\"on\"\n    fc=`echo $desc | cut -c1-1`\n    if test \"$fc\" = \"!\" ; then\n        enabled=\"disabled\"\n        desc=`echo $desc | cut -c2-`\n    fi\n\n    while [ ${#name} -le 12 ]\n    do\n        name=\"$name \"\n    done\n\n    echo \"  $name $desc (default: $enabled)\"\n    idx=$((idx+1))\ndone\n\ncat << EOF\n\n\n\nNOTE: The object files are built at the place where configure is launched\nEOF\n\nexit 1\nfi\n#end help\n\n#append $2 to $1 if not already present, or prepend if $3 is yes\nappend() {\n    if [ -z \"$2\" ] ; then\n        return\n    fi\n    prepend=\"no\"\n    if test \"$3\" = \"yes\" ; then\n        prepend=\"yes\"\n    fi\n\n    all_vars=\"$2\"\n    get_size \"$all_vars\"\n    nb_items=$nb_it\n\n    skip=\"no\"\n    var=$1\n\n    idx=1\n    while [ $idx -le $nb_items ]; do\n        get_item2 $idx \"$all_vars\"\n        n=\"$ar_it\"\n\n        if test \"$n\" = \"-framework\" ; then\n            idx=$((idx+1))\n            get_item2 $idx \"$all_vars\"\n            n2=\"$ar_it\"\n            n=\"$n $n2\"\n        fi\n\n        eval \"tmpv=\\\"\\$$var\\\"\"\n        case \"$tmpv\" in\n        *\"$n\"*) idx=$((idx+1))\n\t\tcontinue\n\t\t;;\n        esac\n\n        if [ -z \"$var\" ] ; then\n            eval \"$var=\\\"$n\\\"\"\n        elif test \"$prepend\" = \"yes\" ; then\n            eval \"$var=\\\"$n \\$$var\\\"\"\n        else\n            eval \"$var=\\\"\\$$var $n\\\"\"\n        fi\n        idx=$((idx+1))\n    done\n}\n\n#set feature $1 to $2 (yes or no)\nset_feature()\n{\n    name=\"$1\"\n    disable_feat=\"$2\"\n\n\n    idx=1\n    while [ $idx -le $nb_features ]; do\n        get_item $idx \"$all_features\"\n        iname=\"$ar_it\"\n\n        if test \"$iname\" = \"$name\" ; then\n            var=$(printf '%s' \"$name\" | tr '-' '_')\n            eval \"disable_$var=\\\"$disable_feat\\\"\"\n            return\n        fi\n        idx=$((idx+1))\n    done\n\n    #allow --disable for packages\n    if test \"$disable_feat\" = \"yes\" ; then\n        for i in $all_packages ; do\n            pck_name=\"$i\"\n            case \"$name\" in\n            \"$pck_name\"*) append disabled_packages \"$name \"\n                return\n                ;;\n            esac\n        done\n    fi\n\n    echo \"! Unknown feature \\\"$name\\\", ignoring - please check help (-h) ! \"\n}\n\n#disable all features\ndisable_all_features()\n{\n    idx=1\n    while [ $idx -le $nb_features ]; do\n        get_item $idx \"$all_features\"\n        name=\"$ar_it\"\n        var=$(printf '%s' \"$name\" | tr '-' '_')\n        eval \"disable_$var=\\\"yes\\\"\"\n        idx=$((idx+1))\n    done\n}\n\n#enable all features in $1\nenable_features ()\n{\n    params=\"$1\"\n    for i in $params ; do\n        set_feature \"$i\" \"no\"\n    done\n}\n\n\n#store $1 (FOO=BAR from --use-FOO=BAR) for later package check\nlib_args=\"\"\nset_package ()\n{\n    for i in $all_packages ; do\n        pck_name=\"$i=\"\n        case \"$1\" in\n        \"$pck_name\"*) opt=`echo $1 | cut -d '=' -f 2`\n            if [ \"$opt\" = \"local\" -o \"$opt\" = \"system\" -o \"$opt\" = \"no\" ] ; then\n                lib_args=\"$lib_args $1\"\n            elif [ -d \"$opt\" ]; then\n                lib_args=\"$lib_args $1\"\n            else\n                echo \"Invalid package option $opt - please check help (-h)\"\n                exit 1\n            fi\n            return\n            ;;\n        esac\n    done\n\n    echo \"no package pck $1 - please check help (-h)\"\n    exit 1\n}\n\n\n#parse all options\nfor opt do\n    case \"$opt\" in\n        --prefix=*) prefix=`echo $opt | cut -d '=' -f 2`\n            ;;\n        --libdir=*) libdir=`echo $opt | cut -d '=' -f 2`\n            ;;\n        --mandir=*) mandir=`echo $opt | cut -d '=' -f 2`\n            ;;\n        --cross-prefix=*) cross_prefix=`echo $opt | cut -d '=' -f 2` && echo \"cross-prefix detected: $cross_prefix\"\n            ;;\n        --target-os=*) targetos=`echo $opt | cut -d '=' -f 2` && echo \"target-os detected: $targetos\"\n            ;;\n        --cc=*) cc_orig=`echo $opt | cut -d '=' -f 2`\n            ;;\n        --cxx=*) cxx_orig=`echo $opt | cut -d '=' -f 2`\n            ;;\n        --cpp=*) cxx_orig=`echo $opt | cut -d '=' -f 2`\n            ;;\n        --make=*) make=`echo $opt | cut -d '=' -f 2`\n            ;;\n        --extra-cflags=*) CFLAGS=\"$CFLAGS ${opt#--extra-cflags=}\"\n            ;;\n        --extra-ldflags=*) LDFLAGS=\"$LDFLAGS ${opt#--extra-ldflags=}\"\n            ;;\n        --extra-ff-ldflags=*) ffmpeg_extra_ldflags=`echo $opt | cut -d '=' -f 2`\n            ;;\n        --extra-libs=*) extralibs=${opt#--extra-libs=}\n            ;;\n        --cpu=*) cpu=`echo $opt | cut -d '=' -f 2`\n            ;;\n        --enable-debug) debuginfo=\"yes\"; no_gcc_opt=\"yes\"\n            ;;\n        --disable-opt) no_gcc_opt=\"yes\"\n            ;;\n        --enable-pic) want_pic=\"yes\";\n            ;;\n        --enable-gcov) want_gcov=\"yes\";\n            ;;\n        --enable-afl) cc_orig=\"afl-gcc\"; cxx_orig=\"afl-g++\"\n            ;;\n        --enable-afl-clang) cc_orig=\"afl-clang\"; cxx_orig=\"afl-clang++\"\n            ;;\n        --fatal-assert) fatal_assert=\"yes\";\n            ;;\n        --verbose) verbose=\"yes\";\n            ;;\n        --static-bin) static_bin=\"yes\"\n            ;;\n        --static-mp4box) echo \"$opt deprecated, use --static-bin instead\"\n            static_bin=\"yes\"\n            ;;\n        --enable-sanitizer) enable_sanitizer=\"yes\"\n            ;;\n        --unittests) unit_tests=\"yes\"\n            ;;\n        --static-modules) static_modules=\"yes\"\n            ;;\n        --sdl-cfg=*) sdl_path=`echo $opt | cut -d '=' -f 2`; sdl_local=\"yes\"\n            ;;\n        --enable-sdl-static=*) sdl_static=\"yes\"\n            ;;\n        --enable-jack) has_jack=\"yes\"\n            ;;\n        --X11-path=*) X11_PATH=`echo $opt | cut -d '=' -f 2`\n            ;;\n        --dxsdk-path=*) dxsdk_path=`echo $opt | cut -d '=' -f 2`\n            ;;\n        --disable-pulseaudio) append disabled_packages \"pulseaudio\"\n            ;;\n        --disable-jack) append disabled_packages \"jack\"\n            ;;\n        --disable-alsa) append disabled_packages \"alsa\"\n            ;;\n        --enable-gprof) gprof_build=\"yes\";\n            ;;\n        --static-build) static_build=\"yes\";\n            ;;\n        --enable-static-bin)\n            echo \"$opt deprecated, use --static-build instead\"\n            static_build=\"yes\";\n            ;;\n        --enable-fixed-point) use_fixed_point=\"yes\"\n            ;;\n        --strip) INSTFLAGS=\"-s $INSTFLAGS\"\n            ;;\n        --enable-mem-track) use_memory_tracking=\"yes\"\n            ;;\n        --disable-remotery) has_remotery=\"no\"\n            ;;\n        --disable-x11) append disabled_packages \"x11\"\n            ;;\n        --disable-x11-shm) append disabled_packages \"x11_shm\"\n            ;;\n        --disable-x11-xv) append disabled_packages \"x11_xv\"\n            ;;\n        --disable-all) disable_all_features\n            ;;\n        --isomedia-only) disable_all_features\n            #disable all packages except first one \"zlib\"\n            disabled_packages=`echo $opt | cut -c6-`\n            append disabled_packages \"x11 sdl directx \"\n            #enable all parsers and isobmff related\n            enable_features \"parsers import export isom-dump isoff isoff-write isoff-hint isoff-frag isoff-hds ttxt ttml vtt txtin\"\n            ;;\n        --use-*) v=`echo $opt | cut -c7-`\n        \tset_package \"$v\"\n            ;;\n        --disable-ipv6) append disabled_packages \"ipv6 \"\n            ;;\n        --disable-*) v=`echo $opt | cut -c11-`\n\t        set_feature \"$v\" \"yes\"\n            ;;\n        --enable-*) v=`echo $opt | cut -c10-`\n        \tset_feature \"$v\" \"no\"\n            ;;\n        --emscripten) is_em=\"yes\"\n            disable_network=\"yes\"\n            ;;\n        --em-type=*) em_type=`echo $opt | cut -d '=' -f 2`\n            ;;\n        --em-size=*) em_size=`echo $opt | cut -d '=' -f 2`\n            ;;\n        *) echo \"! Unrecognized option $opt, ignoring !\"\n            ;;\n    esac\ndone\n\n\nif test \"$is_em\" = \"yes\" ; then\ncc_orig=\"emcc\"\ncxx_orig=\"em++\"\nar=\"emar\"\nranlib=\"emranlib\"\nmake=\"make\"\nstrip=\"emstrip\"\nelse\n\ncase \"$cc_orig\" in\n    *emcc) is_em=\"yes\"\n        ;;\nesac\nfi\n\nif test \"$is_em\" = \"yes\" ; then\n    cpu=\"wasm\"\n    static_modules=\"yes\"\n    static_build=\"yes\"\n    targetos=\"wasm\"\n    pkg_cfg_path=$PKG_CONFIG_PATH\n    if test \"$pkg_cfg_path\" = \"\" ; then\n        echo \"Emscripten missing PKG_CONFIG_PATH, disabling pkg-config\"\n        pkg_config=\"no\"\n    fi\n    has_remotery=\"no\"\n\n    #to refine\n    append disabled_packages \"freenect platinum vtb oss alsa jack pulseaudio directfb x11 dvb4linux directx\"\n\n    if test \"$disable_threads\" = \"yes\" ; then\n        GPAC_SH_FLAGS=\"\"\n    fi\nfi\n\ncc=\"${cc_orig}\"\ncxx=\"${cxx_orig}\"\n\n\n\ncase \"$cpu\" in\n    i386|i486|i586|i686|i86pc|BePC)\n        cpu=\"x86\"\n        ;;\n    x86_64|amd64)\n        cpu=\"x86\"\n        if [ \"$linux\" = \"yes\" -o \"$darwin\" = \"yes\" ] ; then\n            is_64=\"yes\"\n        fi\n        case `uname -s` in\n            SunOS)\n                canon_arch=`isainfo -n`\n                ;;\n            Darwin)\n                canon_arch=\"x86_64\"\n                ;;\n            *)\n                canon_arch=\"`$cc -dumpmachine | sed -e 's,\\([^-]*\\)-.*,\\1,'`\"\n                ;;\n        esac\n\n        if [ x\"$canon_arch\" = x\"x86_64\" -o x\"$canon_arch\" = x\"amd64\" ]; then\n            if [ -z \"`echo $CFLAGS | grep -- -m32`\"  ]; then\n                cpu=\"x86_64\"\n                want_pic=\"yes\"\n            is_64=\"yes\"\n            fi\n        fi\n        ;;\n    armv4l|arm)\n        cpu=\"armv4l\"\n        ;;\n    aarch64)\n        cpu=\"aarch64\"\n        if [ -z \"`echo $CFLAGS | grep -- -m32`\" ]; then\n            is_64=\"yes\"\n            PIC_CFLAGS=\"-fPIC -DPIC\"\n            want_pic=\"yes\"\n        fi\n        ;;\n    alpha)\n        cpu=\"alpha\"\n        ;;\n    ppc64)\n        cpu=\"powerpc\"\n        ;;\n    \"Power Macintosh\"|ppc)\n        cpu=\"powerpc\"\n        ;;\n    mips)\n        cpu=\"mips\"\n        ;;\n    sh4|sh4a|sh)\n        cpu=\"sh4\"\n        ;;\n    sun4u|sun4v)\n        cpu=\"sparc\"\n        if [ -z \"`echo $CFLAGS | grep -- -m32`\" ]; then\n            is_64=\"yes\"\n            PIC_CFLAGS=\"-fPIC -DPIC\"\n            want_pic=\"yes\"\n        fi\n        ;;\n    wasm)\n        cpu=\"wasm\"\n        ;;\n    *)\n        cpu=\"unknown\"\n        ;;\nesac\n\n#checking for CFLAGS\nif test -z \"$CFLAGS\"; then\n    CFLAGS=\"\"\nfi\n\n\ncc=\"${cross_prefix}${cc}\"\n#for ccache\ncc=\"${cc}\"\ncxx=\"${cross_prefix}${cxx}\"\nar=\"${cross_prefix}${ar}\"\nranlib=\"${cross_prefix}${ranlib}\"\nstrip=\"${cross_prefix}${strip}\"\nwindres=\"${cross_prefix}${windres}\"\n\nif test \"$enable_sanitizer\" = \"yes\" ; then\nif test \"$static_bin\" = \"yes\" ; then\necho \"Cannot use static bin with sanitizer, disabling static bin\"\nstatic_bin=\"no\"\nfi\nfi\n\nif test \"$static_bin\" = \"yes\" ; then\npkg_config=\"${pkg_config} --static\"\nif test \"$darwin\" != \"yes\" ; then\n  LDFLAGS=\"-static $LDFLAGS\"\nfi\nelse\npkg_config=\"${pkg_config}\"\nfi\n\n#check pkg_config\nif test \"$cross_prefix\" = \"\" -a \"$pkg_config\" != \"no\"; then\n    if ! $pkg_config --version >/dev/null 2>>$logs ; then\n        pkg_config=\"no\"\n    fi\nfi\n\n\n#find source path\nsource_path=\"`echo $0 | sed -e 's#/configure##'`\"\nsource_path_used=\"yes\"\nif test -z \"$source_path\" -o \"$source_path\" = \".\" ; then\n    source_path=\"`pwd`\"\n    source_path_used=\"no\"\n    build_path=$source_path\nelse\n    source_path=\"`cd \\\"$source_path\\\"; pwd`\"\n    build_path=\"`pwd`\"\nfi\n\n\n#OS specific\nif test \"$targetos\" = \"\" ; then\n    targetos=`uname -s`\nfi\ncase $targetos in\n    BeOS)\n        prefix=\"/boot/home/config\"\n        CFLAGS=\"$CFLAGS -DPIC -fomit-frame-pointer\"\n        # 3 gcc releases known for BeOS, each with ugly bugs\n        gcc_version=\"$($cc -v 2>>$logs | grep version | cut -d ' ' -f3-)\"\n        case \"$gcc_version\" in\n            2.9-beos-991026*|2.9-beos-000224*) echo \"R5/GG gcc\"\n                ;;\n            *20010315*) echo \"BeBits gcc\"\n                CFLAGS=\"$CFLAGS -fno-expensive-optimizations\"\n                ;;\n        esac\n\n        SHFLAGS=-nostart\n        #no need for libm, but the inet stuff\n        #check for BONE\n        if (echo $BEINCLUDES|grep 'headers/be/bone' >/dev/null); then\n            extralibs=\"-lbind -lsocket\"\n        else\n            need_inet_aton=\"yes\"\n            extralibs=\"-lnet\"\n        fi\n        ;;\n\n    SunOS)\n        make=\"gmake\"\n        readelf=\"greadelf\"\n        LDFLAGS=\"$LDFLAGS\"\n        instflags=\"\"\n        #check for 64-bit\n        cat > $TMPC << EOF\n#include <stdio.h>\nint main( void ) { return 0; }\nEOF\n        CFLAGS_NO_LTO=$(echo ${CFLAGS} | sed -e 's/\\ -flto[-A-Za-z0-9=]*//g')\n        $cc ${CFLAGS_NO_LTO} -o $TMPO $TMPC 2>>$logs && $($readelf -h $TMPO | grep \"Class:.*ELF64$\" >/dev/null 2>>$logs)\n        if test $? -eq 0; then\n          is_64=\"yes\"\n        fi\n        if test \"$is_64\" = \"yes\"; then\n            if test \"$cpu\" = \"x86_64\"; then\n                libdir=lib/amd64\n            elif test \"$cpu\" = \"sparc\"; then\n                libdir=lib/sparcv9\n            fi\n        fi\n        sunos=\"yes\"\n        need_inet_aton=\"yes\"\n        extralibs=\"$extralibs -lsocket -lnsl\"\n        ;;\n\n    FreeBSD)\n        make=\"gmake\"\n        LDFLAGS=\"$LDFLAGS -export-dynamic\"\n        PTHREAD_CFLAGS=-pthread\n        PTHREAD_LDFLAGS=-pthread\n        freebsd=\"yes\"\n        ;;\n\n    BSD/OS)\n        extralibs=\"-lpoll -lgnugetopt -lm\"\n        make=\"gmake\"\n        ;;\n\n    Darwin)\n        CFLAGS_DIR=\"-I$prefix/include\"\n        if test \"$static_bin\" = \"yes\" ; then\n            LDFLAGS=\"-L$prefix/$libdir\"\n        else\n            LDFLAGS=\"$LDFLAGS -L$prefix/$libdir\"\n        fi\n\n        if test \"$is_em\" != \"yes\" ; then\n            if test -d /sw/bin ; then\n                alt_macosx_dir=\"/sw\"\n            elif test -d /opt/local/bin ; then\n                alt_macosx_dir=\"/opt/local\"\n            fi\n            if test \"$alt_macosx_dir\" != \"\" ; then\n                CFLAGS_DIR=\"-I$alt_macosx_dir -I$alt_macosx_dir/include $CFLAGS_DIR\"\n                LDFLAGS=\"-L$alt_macosx_dir -L$alt_macosx_dir/lib $LDFLAGS\"\n            fi\n        fi\n\n        CFLAGS=\"$CFLAGS_DIR $CFLAGS\"\n        Mac_Applications=\"/Applications\"\n        SHFLAGS=\"-dynamiclib\"\n        DYN_LIB_SUFFIX=\".dylib\"\n        extralibs=\"\"\n        GPAC_SH_FLAGS=\"\"\n        X11_PATH=\"\"\n        strip=\"strip -x\"\n        if test \"$is_64\" = \"yes\" ; then\n            LDFLAGS=\"$LDFLAGS\"\n        fi\n        darwin=\"yes\"\n        gcc_version=`$cc -v 2>>$logs | grep version | cut -d ' ' -f3`\n        case \"$gcc_version\" in\n            *2.95*)\n                CFLAGS=\"$CFLAGS -no-cpp-precomp -pipe -fomit-frame-pointer\"\n                ;;\n            3.*)\n                CFLAGS=\"$CFLAGS -no-cpp-precomp -pipe -fomit-frame-pointer -mdynamic-no-pic -fno-common\"\n                ;;\n            4.*)\n                CFLAGS=\"$CFLAGS -pipe -fomit-frame-pointer -fno-common\"\n                ;;\n        esac\n        ;;\n\n    MINGW32*|mingw32|MINGW64*|mingw64|msys*|MSYS*)\n        mingw32=\"yes\"\n        win32=\"yes\"\n        want_pic=\"no\"\n        #ugly patch for msys2 mingw32/mingw64 where toolchain is not properly setup\n        if [ x\"$MSYSTEM\" = x\"MSYS\" ] && [ -e /mingw64 ]; then\n          extralibs=\"$extralibs -lws2_32 -lwinmm -limagehlp\"\n          CFLAGS=\"$CFLAGS -I/mingw64/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64\"\n          LDFLAGS=\"$LDFLAGS -L/mingw64/lib\"\n        elif [ x\"$MSYSTEM\" = x\"MSYS\" ] && [ -e /mingw32 ]; then\n          extralibs=\"-L/mingw32/lib $extralibs -lws2_32 -lwinmm -limagehlp\"\n          CFLAGS=\"$CFLAGS -I/mingw32/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64\"\n          LDFLAGS=\"$LDFLAGS -L/mingw32/lib\"\n        else\n          extralibs=\"$extralibs -lws2_32 -lwinmm -limagehlp -ldbghelp\"\n          CFLAGS=\"$CFLAGS -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64\"\n        fi\n\t\tLDFLAGS=\"$LDFLAGS\"\n        if test \"$cross_prefix\" != \"\" ; then\n            GPAC_SH_FLAGS=\"\"\n        fi\n        ;;\n\n    CYGWIN*|cygwin*)\n        extralibs=\"$extralibs -lws2_32 -lwinmm\"\n        cygwin=\"yes\"\n        win32=\"yes\"\n        ;;\n\n    Linux|linux|android)\n        LDFLAGS=\"$LDFLAGS -Wl,--warn-common -Wl,-z,defs\"\n        linux=\"yes\"\n        case \"$cpu\" in\n            sh4)\n                CFLAGS=\"$CFLAGS -isystem \\\"$prefix/include\\\"\"\n                ;;\n        esac\n\t\tcat > $TMPC << EOF\n#include <sys/cdefs.h>\n#if !defined (__BIONIC__)\n#error\n#endif\nEOF\n\t\tif $cc -c $CFLAGS $TMPC 0>/dev/null 2>$TMPL ; then\n\t\t\t#bionic libc (android)\n\t\t\tCFLAGS=\"$CFLAGS -DPTHREAD_HAS_NO_CANCEL\"\n\t\t\tGPAC_SH_FLAGS=\"\"\n\t\tfi\n\t\t;;\n\n    *) ;;\nesac\n\n\n\n\nif test \"$disable_threads\" = \"no\" ; then\nCFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\nGPAC_SH_FLAGS=$PTHREAD_LDFLAGS\nelse\nPTHREAD_LDFLAGS=\"\"\nfi\n\n\n\n#defines directory for binaries and libs (ex. for TinyGL)\ntarget_bin_dir=\"\"\nif test \"$cross_prefix\" = \"\" ; then\n    target_bin_dir=`${cc} -v 2>>$logs | sed -n '2p' | awk ' {print $2}'`-${cc_orig}\nelse\n    target_bin_dir=${cross_prefix}${cc_orig}\nfi\n\n\n#if test \"$source_path_used\" = \"yes\" ; then\nmkdir -p extra_lib\nmkdir -p extra_lib/lib\nmkdir -p extra_lib/lib/gcc\n#fi\n\n\nlocal_inc=$source_path/extra_lib/include\nlocal_lib=$source_path/extra_lib/lib/gcc\nexecdir=$source_path/bin/gcc\n\n\ndolog() {\n rv=$?\n if [ $rv -eq 0 ] ; then\n     echo \"*** CC/CXX Test Passed (args $@) : \">>$logs\n     rv=0\n else\n     echo \"*** CC/CXX Test Failed (res $rv args $@) : \">>$logs\n     rv=1\n fi\n\n echo \"\">>$logs\n cat $TMPL >> $logs\n echo \"\">>$logs\n echo \"Source was: \">>$logs\n cat $TMPC >> $logs\n echo \"\">>$logs\n echo \"\">>$logs\n return $rv;\n}\n\ndocc() {\n $cc -o $TMPO $TMPC $@ 0>/dev/null 2>$TMPL\n dolog $@\n}\n\n\ndocxx() {\n #for logs\n cat $TMPCXX > $TMPC\n $cxx -o $TMPO $TMPCXX $@ 0>/dev/null 2>$TMPL\n dolog $@\n}\n\n#check GCC flags support\ncat > $TMPC << EOF\n#include <stdio.h>\nint main( void ) { return 0; }\nEOF\nCFLAGS=\"$CFLAGS -Wall\"\nif docc -fno-strict-aliasing ; then\n    CFLAGS=\"$CFLAGS -fno-strict-aliasing\"\nfi\nCXXFLAGS=\"$CFLAGS\"\nif docc -lz -Wno-pointer-sign ; then\n    CFLAGS=\"$CFLAGS -Wno-pointer-sign\"\nfi\n\n\n#GCC opt\nif test \"$no_gcc_opt\" = \"no\"; then\n    CFLAGS=\"-O3 $CFLAGS\"\nelse\n\n#on emscripten+asan, failure to load wasm when build with -00, use -01\nif test \"$is_em\" = \"yes\" -a \"$enable_sanitizer\" = \"yes\"; then\n    CFLAGS=\"-O1 $CFLAGS\"\nelse\n    CFLAGS=\"-O0 $CFLAGS\"\nfi\nfi\n\n\n#GCC PIC\nif test \"$cross_prefix\" != \"\" ; then\n    want_pic=\"no\"\nfi\nif test \"$want_pic\"  = \"yes\" ; then\n    CFLAGS=\"$CFLAGS -fPIC -DPIC\"\n    CXXFLAGS=\"$CXXFLAGS -fPIC -DPIC\"\nfi\n\nif test \"$want_gcov\"  = \"yes\" ; then\n    CFLAGS=\"$CFLAGS --coverage\"\n    CXXFLAGS=\"$CXXFLAGS --coverage\"\n    LDFLAGS=\"$LDFLAGS --coverage\"\nfi\n\n#force use of cflags with cc\ncc_naked=$cc\ncxx_naked=$cxx\ncc=\"$cc $CFLAGS\"\ncxx=\"$cxx $CXXFLAGS\"\n\n#check sse support\ncat > $TMPC << EOF\n#include <emmintrin.h>\nint main( void ) { return 0; }\nEOF\n\nsseflags=\"-msse2\"\n#experimental in emscriptem, we doon't enable it\n#if test \"$is_em\" = \"yes\" ; then\n#sseflags=\"$sseflags -msimd128\"\n#fi\n\nif docc $sseflags $LDFLAGS ; then\n  CFLAGS=\"$CFLAGS $sseflags\"\nfi\n\n\n#check dlopen support\nhas_dlopen=\"no\"\ncat > $TMPC << EOF\n#include <dlfcn.h>\nint main( void ) { dlopen(\"foo\", 0); return 0; }\nEOF\n\nif docc ; then\n    has_dlopen=\"yes\"\nelif docc $LDFLAGS -ldl ; then\n    GPAC_SH_FLAGS=\"$GPAC_SH_FLAGS -ldl\"\n    has_dlopen=\"yes\"\nfi\n\n\n\n#check st_mtim.tv_nsec support\nhas_st_nsec=\"no\"\ncat > $TMPC << EOF\n#include <sys/stat.h>\nint main( void ) { struct stat st; st.st_mtim.tv_nsec = 0; return 0; }\nEOF\n\nif docc ; then\n    has_st_nsec=\"yes\"\nfi\n\n\n#look for atomic.h support\ncat > $TMPC << EOF\n#include <pthread.h>\n#include <stdatomic.h>\nint main( void ) { return 0; }\nEOF\n\nhas_atomic=\"no\"\nif docc $LDFLAGS ; then\n    has_atomic=\"yes\"\nelse\n    CFLAGS=\"$CFLAGS -DGPAC_NO_STDATOMIC\"\nfi\n\n\n#look for builtin atomic support\ncat > $TMPC << EOF\n#include <stdint.h>\nint main(void) {\n    int i4 = 4;\n    int64_t i8 = 8;\n    __sync_add_and_fetch(&i4, 12);\n    __sync_add_and_fetch(&i8, 12);\n}\nEOF\nhas_builtinatomic=\"no\"\nif docc ; then\n    has_builtinatomic=\"yes\"\nelse\ncat > $TMPC << EOF\n#include <stdint.h>\nint main(void) {\n    int i4 = 4;\n    int64_t i8 = 8;\n    __atomic_add_fetch(&i4, 12, __ATOMIC_SEQ_CST);\n    __atomic_add_fetch(&i8, 12, __ATOMIC_SEQ_CST);\n}\nEOF\n    if docc -latomic ; then\n        CFLAGS=\"$CFLAGS -DGPAC_NEED_LIBATOMIC\"\n        LDFLAGS=\"$LDFLAGS -latomic\"\n    fi\nfi\n\n\n#look for strlcpy support\ncat > $TMPC << EOF\n#include <string.h>\nint main( void ) {\n    char dest[1];\n    strlcpy(dest, \"1\", 1);\n    return 0;\n}\nEOF\nhas_strlcpy=\"no\"\nif docc $LDFLAGS ; then\n    has_strlcpy=\"yes\"\nfi\n\n#look for sys/un.h support\ncat > $TMPC << EOF\n#include <sys/un.h>\nint main( void ) { struct sockaddr_un serv_add; return 0; }\nEOF\nhas_sock_un=\"no\"\nif docc $LDFLAGS ; then\n    has_sock_un=\"yes\"\nfi\n\n\n#look for ifaddrs support\ncat > $TMPC << EOF\n#include <ifaddrs.h>\n#include <net/if.h>\nint main( void ) {  struct ifaddrs *ifap; getifaddrs(&ifap); return 0; }\nEOF\nhas_ifaddrs=\"no\"\nif docc $LDFLAGS ; then\n    has_ifaddrs=\"yes\"\nfi\n\n#package config helpers\n\n\npck_cxx=\"no\"\nconfig_package_test ()\n{\n    package_name=$1\n    pkg_cfg_name=$2\n    package_cflags=$3\n    package_ldflags=$4\n    local_inc_dir=$5\n    package_src=\"$6\"\n\n    sysname=\"system\"\n    if test \"$is_em\" = \"yes\" ; then\n        is_port=\"yes\";\n        case \"$package_name\" in\n            \"zlib\") package_cflags=\"-sUSE_ZLIB=1\" ;;\n            \"jpeg\") package_cflags=\"-sUSE_LIBJPEG=1\" ;;\n            \"png\") package_cflags=\"-sUSE_LIBPNG=1\" ;;\n            \"vorbis\") package_cflags=\"-sUSE_VORBIS\" ;;\n            \"freetype\") package_cflags=\"-sUSE_FREETYPE=1\" ;;\n            *) is_port=\"no\" ;;\n        esac\n\n        if test \"$is_port\" = \"yes\" ; then\n            package_ldflags=\"$package_cflags\"\n            sysname=\"emcc-ports\"\n        fi\n    fi\n\n    forced=\"\"\n    custom=\"no\"\n    optname=\"$package_name=\"\n    for opt in $lib_args ; do\n        case \"$opt\" in\n        $optname*) forced=`echo $opt | cut -d '=' -f 2`\n            ;;\n        esac\n    done\n\n    if test \"$forced\" != \"\" ; then\n        case \"$forced\" in\n        \"no\")\n            if test \"$package_name\" = \"zlib\" ; then\n                has_pck=\"force-no\"\n            fi\n            return\n            ;;\n        \"local\") ;;\n        \"system\") ;;\n        \"emcc-ports\") ;;\n        \"\") ;;\n        *)  if [ -d \"$forced\" ]; then\n                custom=\"yes\"\n            else\n                echo \"Invalid value $forced for $optname\"\n                exit 1\n            fi\n            ;;\n        esac\n    fi\n\n    #test pkgconfig\n    if test \"$forced\" != \"local\" -a \"$custom\" != \"yes\" ; then\n        if test \"$cross_prefix\" = \"\" -a \"$is_port\" != \"yes\" -a \"$pkg_config\" != \"no\"; then\n            if $pkg_config --exists $pkg_cfg_name ; then\n                pck_cflags=`$pkg_config --cflags $pkg_cfg_name`\n                pck_ldflags=`$pkg_config --libs $pkg_cfg_name`\n\n                if test \"$pck_cxx\" = \"yes\" ; then\n                    echo \"$package_src\" > $TMPCXX\n                    if docxx $pck_cflags $pck_ldflags $LDFLAGS ; then\n                        has_pck=\"$sysname (pkgconfig)\"\n                        return\n                    fi\n                else\n                    echo \"$package_src\" > $TMPC\n                    if docc $pck_cflags $pck_ldflags $LDFLAGS ; then\n                        has_pck=\"$sysname (pkgconfig)\"\n                        return\n                    fi\n                fi\n            fi\n        fi\n    fi\n\n    if [ -z \"$package_src\" ] ; then\n        return\n    fi\n\n    #for now docc and docxx are the same, just using a different source\n    if test \"$pck_cxx\" = \"yes\" ; then\n        echo \"$package_src\" > $TMPCXX\n\n        if test \"$forced\" != \"local\" ; then\n            if docxx $package_cflags $LDFLAGS $package_ldflags ; then\n                pck_cflags=\"$package_cflags\"\n                pck_ldflags=\"$package_ldflags\"\n                has_pck=\"$sysname\"\n                return\n            fi\n        fi\n\n        if test \"$forced\" = \"system\" ; then\n            return\n        fi\n\n        if docxx -I\"$local_inc/$local_inc_dir\" $package_cflags $LDFLAGS -L$local_lib $package_ldflags ; then\n            pck_cflags=\"-I$local_inc/$local_inc_dir $package_cflags\"\n            pck_ldflags=\"-L$local_lib $package_ldflags\"\n            has_pck=\"local\"\n            return\n        fi\n\n        if docxx -I\"$local_inc/$local_inc_dir\" $package_cflags $LDFLAGS -L$execdir $package_ldflags ; then\n            pck_cflags=\"-I$local_inc/$local_inc_dir $package_cflags\"\n            pck_ldflags=\"-L$execdir $package_ldflags\"\n            has_pck=\"local (bin dir)\"\n            return\n        fi\n        return\n    fi\n\n    echo \"$package_src\" > $TMPC\n\n    if test \"$custom\" = \"yes\" ; then\n        if docc -I\"$forced//include\" $package_cflags -L$forced//lib $package_ldflags ; then\n            pck_cflags=\"-I$forced//include $package_cflags\"\n            pck_ldflags=\"-L$forced//lib $package_ldflags\"\n            has_pck=\"custom\"\n        fi\n        return\n    fi\n\n    if test \"$forced\" != \"local\" ; then\n        if docc $package_cflags $LDFLAGS $package_ldflags ; then\n            pck_cflags=\"$package_cflags\"\n            pck_ldflags=\"$package_ldflags\"\n            has_pck=\"$sysname\"\n            return\n        fi\n\n        if test \"$alt_macosx_dir\" != \"\" ; then\n            if docc -I$alt_macosx_dir/include $package_cflags -L$alt_macosx_dir/lib $LDFLAGS $package_ldflags 2>>$logs ; then\n                pck_cflags=\"$package_cflags\"\n                pck_ldflags=\"$package_ldflags\"\n                has_pck=\"system\"\n                return\n            fi\n        fi\n    fi\n\n\n    if test \"$forced\" = \"system\" ; then\n        return\n    fi\n\n    if docc -I\"$local_inc/$local_inc_dir\" $package_cflags $LDFLAGS -L$local_lib $package_ldflags ; then\n        pck_cflags=\"-I$local_inc/$local_inc_dir $package_cflags\"\n        pck_ldflags=\"-L$local_lib $package_ldflags\"\n        has_pck=\"local\"\n        return\n    fi\n\n    if docc -I\"$local_inc/$local_inc_dir\" $package_cflags $LDFLAGS -L$execdir $package_ldflags ; then\n        pck_cflags=\"-I$local_inc/$local_inc_dir $package_cflags\"\n        pck_ldflags=\"-L$execdir $package_ldflags\"\n        has_pck=\"local\"\n        return\n    fi\n}\n\nconfig_package ()\n{\n    has_pck=\"no\"\n    pck_cflags=\"\"\n    pck_ldflags=\"\"\n\n    pname=\"$1\"\n    case \"$disabled_packages\" in\n    *\"$pname \"*) shift\n        eval \"has_$pname=\\\"no\\\"\"\n        return\n        ;;\n    esac\n\n    config_package_test \"$1\" \"$2\" \"$3\" \"$4\" \"$5\" \"$6\"\n    if test \"$has_pck\" != \"no\" ; then\n        eval \"cflags_$pname=\\\"$pck_cflags\\\"\"\n        eval \"ldflags_$pname=\\\"$pck_ldflags\\\"\"\n    fi\n\n    eval \"has_$pname=\\\"$has_pck\\\"\"\n    pck_cxx=\"no\"\n}\n\ncheck_has_lib ()\n{\n    has_pck=\"no\"\n\n    tmpv=$1\n    for pck in $disabled_packages ; do\n        case \"$tmpv\" in\n        $pck) shift\n            eval \"has_$tmpv=\\\"no\\\"\"\n            return\n            ;;\n        esac\n    done\n\n    echo \"$3\" > $TMPC\n    if docc $LDFLAGS $2 ; then\n        has_pck=\"yes\"\n    fi\n\n    var=$1\n    shift\n    eval \"has_$var=\\\"$has_pck\\\"\"\n}\n#end package config helpers\n\n\n\n\nif test \"$disable_codecs\" = \"yes\"; then\n    append disabled_packages \"jpeg png mad a52 faad xvid opensvc openjpeg ffmpeg theora vorbis openhevc\"\nfi\n\nif test \"$static_bin\" = \"yes\"; then\n    static_modules=\"yes\"\n    static_build=\"yes\"\n\n    #we cannot use these to produce a static bin, no static lib on most distributions\n    append disabled_packages \"openjpeg ffmpeg theora vorbis openhevc freenect platinum\"\n\n    #we cannot use openssl vanilla since it is usually built with DSO and requires dlopen\n    append disabled_packages \"ssl\"\n    #we cannot use ipv6 due to getaddrinfo not being present\n    append disabled_packages \"ipv6\"\n\n    append disabled_packages \"lzma vtb sdl oss alsa jack pulseaudio directfb x11 dvb4linux directx\"\nfi\n\nif test \"$disable_parsers\" = \"yes\" ; then\n    append disabled_packages \"jpeg png\"\nfi\n\n\n\n#look for all packages\n\n#start with zlib to disable png and freetype if forced to no\n\nconfig_package zlib \"zlib\" \"\" \"-lz\" \"zlib\" '#include <string.h>\n#include <stdio.h>\n#include <zlib.h>\nint main( void ) { if (strcmp(zlibVersion(), ZLIB_VERSION)) { puts(\"zlib version differs !!!\"); return 1; } return 0; }'\n\nif test \"$has_zlib\" = \"force-no\" ; then\n    # can't have libpng without zlib or freetype without libpng\n    append disabled_packages \"png freetype\"\nfi\n\nconfig_package opensvc \"OpenSVC\" \"\" \"-lOpenSVCDec\" \"\" '#include <OpenSVCDecoder/SVCDecoder_ietr_api.h>\nint main( void ) { void *codec; SVCDecoder_init(&codec); return 0; }'\n\n\n#look for openhevc support\nconfig_package openhevc \"openhevc\" \"\" \"-lopenhevc -lm $PTHREAD_LDFLAGS\" \"\" '#include <stdio.h>\n#include <libopenhevc/openhevc.h>\nint main( void ) { oh_init(1, 1); return 0; }\n'\n\npck_cxx=\"yes\"\nconfig_package platinum \"platinum\" \"\" \"-lPlatinum -lPltMediaServer -lPltMediaConnect -lPltMediaRenderer -lNeptune -lZlib -laxTLS $PTHREAD_LDFLAGS\" \"platinum\" '#include <Platinum.h>\nint main( void ) { new PLT_UPnP(); return 0; }'\n\n\nconfig_package freetype \"freetype2\" \"\" \"-lfreetype\" \"freetype\" '#include <ft2build.h>\n#include FT_FREETYPE_H\n#include FT_GLYPH_H\n#include FT_OUTLINE_H\nint main( void ) { FT_Library library; FT_Init_FreeType(&library); return 0; }'\n\nif test \"$mingw32\" = \"yes\" ; then\n    ssl_lflags=\"-lssl -lcrypto\"\nelif test \"$win32\" = \"yes\" ; then\n    ssl_lflags=\"-lssleay32 -leay32\"\nelse\n    ssl_lflags=\"-lssl -lcrypto\"\nfi\n\nconfig_package ssl \"openssl\" \"\" \"$ssl_lflags\" \"\" '#include <openssl/ssl.h>\n#include <openssl/x509.h>\n#include <openssl/err.h>\n#include <openssl/rand.h>\n#include <stddef.h>\nint main( void ) {  SSL_CTX_set_options(NULL, SSL_OP_ALL); return 0; }'\n\n\nconfig_package jpeg \"libjpeg\" \"\" \"-ljpeg\" \"jpeg\" '#include <stdio.h>\n#include <jpeglib.h>\nint main( void ) { struct jpeg_decompress_struct cinfo; jpeg_create_decompress(&cinfo); return 0; }'\n\n\n\nconfig_package openjpeg \"libopenjp2\" \"\" \"-lopenjp2\" \"openjp2\" '#include <stdio.h>\n#include <openjpeg.h>\nint main( void ) { opj_create_decompress(OPJ_CODEC_J2K); return 0; }'\n\nif test \"$has_openjpeg\" = \"no\" ; then\nconfig_package openjpeg \"libopenjpeg\" \"\" \"-lopenjpeg -lm\" \"openjpeg\" '#include <stdio.h>\n#include <openjpeg.h>\nint main( void ) { opj_create_decompress(CODEC_J2K); return 0; }'\nfi\n\nif test \"$has_openjpeg\" = \"no\" ; then\nconfig_package openjpeg \"libopenjpeg\" \"-DOPJ_STATIC\" \"-lopenjpeg -lm\" \"openjpeg\" '#include <stdio.h>\n#include <openjpeg.h>\nint main( void ) { opj_create_decompress(CODEC_J2K); return 0; }'\nfi\n\nconfig_package png \"libpng\" \"\" \"-lpng -lz\" \"png\" '#include <png.h>\n#include <stddef.h>\nint main( void ) {  png_struct *png_ptr = png_create_read_struct(PNG_LIBPNG_VER_STRING, NULL, NULL, NULL); return 0; }'\n\n\nconfig_package mad \"mad\" \"\" \"-lmad\" \"\" '#include <mad.h>\nint main( void ) {  struct mad_stream stream; mad_stream_finish(&stream); return 0; }'\n\nconfig_package a52 \"liba52\" \"\" \"-la52 -lm\" \"\" '#include <inttypes.h>\n#define uint32_t unsigned int\n#define uint8_t unsigned char\n#include <a52dec/mm_accel.h>\n#include <a52dec/a52.h>\nint main( void ) { a52_state_t *codec; a52_free(codec); return 0; }'\n\n\n\nconfig_package xvid \"xvid\" \"\" \"-lxvidcore $PTHREAD_LDFLAGS\" \"\" '#include <xvid.h>\n#include <stddef.h>\nint main( void ) { void *codec; xvid_decore(codec, XVID_DEC_DESTROY, NULL, NULL); return 0; }'\n\nconfig_package faad \"faad2\" \"\" \"-lfaad -lm\" \"\" '#include <faad.h>\nint main( void ) { NeAACDecOpen(); return 0; }'\n\n\nffmpeg_lflags=\"-lz -lavcodec -lavformat -lavutil -lswscale -lpostproc\"\nffmpeg_pck_names=\"libavcodec libavformat libswscale libavutil\"\n\nif test \"$is_em\" = \"yes\" ; then\ndisable_avdevice=\"yes\"\nfi\n\nif test \"$disable_avdevice\" = \"no\" ; then\nffmpeg_lflags=\"$ffmpeg_lflags -lavdevice\"\nffmpeg_pck_names=\"$ffmpeg_pck_names libavdevice\"\nfi\n\nif test \"$disable_avfilter\" = \"no\" ; then\nffmpeg_lflags=\"$ffmpeg_lflags -lavfilter\"\nffmpeg_pck_names=\"$ffmpeg_pck_names libavfilter\"\nfi\n\nffmpeg_lflags=\"$ffmpeg_lflags $ffmpeg_extra_ldflags\"\n\nconfig_package ffmpeg \"$ffmpeg_pck_names\" \"\" \"$ffmpeg_lflags\" \"\" '#include <libavformat/avformat.h>\nint main(void) { avformat_alloc_context(); return 0; }'\n\nif test \"$has_ffmpeg\" != \"no\" ; then\n\n#detect vvc support in ffmpeg\ncat > $TMPC << EOF\n#include <libavcodec/avcodec.h>\nint main(void) {\n    AVCodec *codec = avcodec_find_decoder(AV_CODEC_ID_VVC);\n    return 0;\n}\nEOF\n\n#compile file but do not link\nif $cc -o $TMPO -c $TMPC $ffmpeg_cflags 0>/dev/null 2>$TMPL ; then\n    ffmpeg_vvc=\"yes\"\n    dolog $ffmpeg_cflags\nelse\n    dolog $ffmpeg_cflags\nfi\n\nfi\n\n#end ffmpeg specific tests\n\n\nconfig_package freenect \"libfreenect\" \"\" \"-lfreenect\" \"freenect\" '#include <libfreenect/libfreenect.h>\n#include <stddef.h>\nint main( void ) { freenect_context *f_ctx; freenect_init(&f_ctx, NULL); return 0; }'\n\n\nconfig_package vorbis \"vorbis\" \"\" \"-lvorbis\" \"\" '#include <vorbis/codec.h>\nint main( void ) { vorbis_info vi; vorbis_info_init(&vi); return 0; }'\n\n\nconfig_package theora \"theora\" \"\" \"-ltheora -logg\" \"\" '#include <theora/theora.h>\nint main( void ) { theora_info ti; theora_info_init(&ti); return 0; }'\n\nconfig_package nghttp2 \"libnghttp2\" \"\" \"-lnghttp2\" \"\" '#include <stdio.h>\n#include <nghttp2/nghttp2.h>\nint main( void ) {  nghttp2_session *ng_sess; nghttp2_session_del(ng_sess); return 0; }'\n\nconfig_package caption \"libcaption\" \"\" \"-lcaption\" \"\" '#include <caption/cea708.h>\nint main( void ) { caption_frame_t ccframe; caption_frame_init(&ccframe); return 0; }'\n\nconfig_package libcaca \"caca\" \"\" \"-lcaca\" \"\" '#include <caca.h>\nint main( void ) { caca_canvas_t *canvas = caca_create_canvas(20, 20); return 0; }'\n\n\nconfig_package mpeghdec \"mpeghdec\" \"\" \"-lMpeghDec -lMpegTPDec -lPCMutils -lIGFdec -lArithCoding -lFormatConverter -lgVBAPRenderer -lDRCdec -lUIManager -lSYS -lFDK -lm\" \"\" '\n#ifndef bool\ntypedef int bool;\n#endif\n#include <mpeghdecoder.h>\nint main( void ) { HANDLE_MPEGH_DECODER_CONTEXT codec = mpeghdecoder_init(2); return 0; }'\n\n\nconfig_package curl \"curl\" \"\" \"-lcurl\" \"\" '#include <curl/curl.h>\nint main( void ) { CURLM *curl_multi = curl_multi_init(); int fn_opt = CURLOPT_PREREQFUNCTION; const struct curl_easyoption *opt = curl_easy_option_next(NULL); return 0; }'\n\n\n\n#look for VideoToolBox support\nif test \"$darwin\" = \"yes\" ; then\nldflags_vtb=\"-framework CoreFoundation -framework CoreVideo -framework CoreMedia -framework VideoToolbox\"\ncheck_has_lib vtb \"$ldflags_vtb\" '#include <VideoToolbox/VideoToolbox.h>\nint main( void ) { return 0; }'\nfi\n\n#look for OSS support\nif test \"$darwin\" = \"yes\" ; then\n\ncat > $TMPC << EOF\n#include <soundcard.h>\nint main( void ) { return 0; }\nEOF\n\n    if docc -DLIBOSS_INTERNAL -I$alt_macosx_dir/include/ -I$alt_macosx_dir/include/liboss -L$alt_macosx_dir/lib -loss $LDFLAGS 2>>$logs ; then\n        has_oss=\"yes\"\n        oss_cflags=\"-DLIBOSS_INTERNAL -I$alt_macosx_dir/include/ -I$alt_macosx_dir/include/liboss\"\n        oss_ldflags=\"-L$alt_macosx_dir/lib -loss\"\n    fi\n\nelse\n\ncheck_has_lib oss \"\" '#include <sys/ioctl.h>\n#include <unistd.h>\n#include <fcntl.h>\n#include <sys/soundcard.h>\nint main( void ) { return 0; }'\n\nif test \"$has_oss\" = \"no\" ; then\ncheck_has_lib oss \"\" '#include <sys/ioctl.h>\n#include <unistd.h>\n#include <fcntl.h>\n#include <soundcard.h>\nint main( void ) { return 0; }'\nfi\n\nfi\n\n#look for IPv6\ncheck_has_lib ipv6 \"$extralibs\" '#include <string.h>\n#include <sys/types.h>\n#include <sys/socket.h>\n#include <netinet/in.h>\n#include <netdb.h>\nint main( void ) {\nstruct sockaddr_storage saddr;\nstruct ipv6_mreq mreq6;\ngetaddrinfo(0,0,0,0);\ngetnameinfo(0,0,0,0,0,0,0);\nmemset(&saddr, 0, sizeof(saddr));\nmemset(&mreq6, 0, sizeof(mreq6));\nIN6_IS_ADDR_MULTICAST( (struct in6_addr *) 0);\nreturn 0;\n}'\n\n#look for poll\ncheck_has_lib poll \"$extralibs\" '#include <poll.h>\nint main( void ) {\nstruct pollfd fds;\nint res = poll(&fds, 1, 1);\nreturn 0;\n}'\n\n\n\ncheck_has_lib dvb4linux \"\" '#include <linux/dvb/dmx.h>\n#include <linux/dvb/frontend.h>\nint main( void ) {return 0;}'\n\ncheck_has_lib alsa \"\" '#include <alsa/asoundlib.h>\nint main( void ) {return 0;}'\n\n\ncheck_has_lib pulseaudio \"\" '#include <pulse/pulseaudio.h>\nint main( void ) {return 0;}'\n\ncheck_has_lib jack \"\" '#include <jack/jack.h>\nint main( void ) {return 0;}'\n\n\ndirectfb_lib=\"-ldirectfb -lfusion -ldirect\"\ncheck_has_lib directfb \"$directfb_lib\" '#include <directfb.h>\nint main( void ) {return 0;}'\n\n\n#config X11\ncheck_has_lib x11 \"-I$X11_PATH/include -L$X11_PATH/lib\" '#include <X11/Xlib.h>\nint main( void ) { return 0; }'\n\nif test \"$has_x11\" = \"yes\" ; then\n    #look for X11 shared memory support\n    check_has_lib x11_shm \"-I$X11_PATH/include -L$X11_PATH/lib\" '#include <X11/Xlib.h>\n#include <X11/extensions/XShm.h>\n#include <sys/ipc.h>\n#include <sys/shm.h>\nint main( void ) { return 0; }'\n\n    #look for XVideo support\n    check_has_lib x11_xv \"-I$X11_PATH/include -L$X11_PATH/lib\" '#include <X11/Xlib.h>\n#include <X11/extensions/Xv.h>\n#include <X11/extensions/Xvlib.h>\nint main( void ) { return 0; }'\n\n    #look for glx support\n    check_has_lib x11_glx \"-I$X11_PATH/include -L$X11_PATH/lib\" '#include <X11/Xlib.h>\n#include <GL/gl.h>\n#include <GL/glx.h>\nint main( void ) { return 0; }'\n\nfi\n#end x11 test\n\n#look for hid support\nhid_lib=\"-lhidapi-hidraw\"\ncheck_has_lib hid \"$hid_lib\" '#include <hidapi/hidapi.h>\nint main( void ) { hid_init(); hid_exit(); return 0; }'\n\n#look for lzma support\ncheck_has_lib lzma \"-llzma\" '#include <lzma.h>\nint main( void ) { lzma_options_lzma opt_lzma2; lzma_lzma_preset(&opt_lzma2, 9); return 0; }'\n\n#look for joystick support\n#check_has_lib joystick \"\" '#include <linux/joystick.h>\n#int main( void ) { return 0; }'\n\n\n\n#always force static modules when static build is used, we cannot have one exe with libgpac_static using a module with libgpac dynamic, this would cause bugs with gf_sys_init()\nif test \"$static_build\" = \"yes\"; then\nstatic_modules=\"yes\"\n\nif test \"$has_openhevc\" != \"no\" -a \"$has_ffmpeg!=no\"; then\n    #we cannot have both openhevc and ffmpeg in static build\n    has_openhevc=\"no\"\nfi\n\nfi\n\n\nif test \"$has_zlib\" = \"no\" ; then\n    echo \"error: zlib not found on system or in local libs\"\n    exit 1\nfi\n\nif test \"$has_dlopen\" = \"no\"; then\n    if test \"$win32\" = \"no\"; then\n      echo \"error: dlopen not found on system\"\n      exit 1\n    fi\nfi\n\n#look for OpenGL support or for TinyGL support\nhas_opengl=\"no\"\nif test \"$is_em\" != \"yes\" ; then\nLINK3D=\"\"\nINCL3D=\"\"\nDarwinGL=\"no\"\n\nif test \"$darwin\" = \"yes\" ; then\n    cat > $TMPC << EOF\n#include <OpenGL/gl.h>\n#include <OpenGL/glu.h>\nint main( void ) { glEnable(GL_NORMALIZE); return 0; }\nEOF\n\nelse\n    cat > $TMPC << EOF\n#include <GL/gl.h>\n#include <GL/glu.h>\nint main( void ) { glEnable(GL_NORMALIZE); return 0; }\nEOF\n\nfi\n\n#we cannot use openGL to produce a static bin\nif test \"$disable_3d\" = \"no\" -a \"$static_bin\" = \"no\" ; then\n    if test \"$win32\" = \"yes\" ; then\n        if test \"$cygwin\" = \"yes\" ; then\n            LINK3D=\"-lw32api/opengl32 -lw32api/glu32\"\n        else\n            LINK3D=\"-lopengl32 -lglu32\"\n        fi\n    elif test \"$darwin\" = \"yes\" ; then\n        LINK3D=\"-framework OpenGL -framework GLUT\"\n        DarwinGL=\"yes\"\n    else\n        LINK3D=\"-lGL -lGLU -lX11\"\n    fi\n    if docc $LINK3D $LDFLAGS ; then\n        has_opengl=\"yes\"\n    elif docc -I$X11_PATH/include -L$X11_PATH/lib $LDFLAGS ; then\n        has_opengl=\"yes\"\n        INCL3D=\"-I$X11_PATH/include\"\n        LINK3D=\"-L$X11_PATH/lib $LINK3D\"\n    fi\n    if test \"$has_opengl\" = \"no\" ; then\n        LINK3D=\"\"\n    fi\nfi\nfi\n#end GL test\n\n#look for tinyGL only if desired\nhas_tinygl=no\nif test \"$disable_tinygl\" = \"no\"  ;then\n\ncheck_has_lib tinygl \"-lTinyGL\" '#include <GL/gl.h>\nint main( void ) { int a ; a = TINYGL ; return 0;}'\n\n    if test \"$has_tinygl\" = \"yes\"  ;then\n        has_opengl=\"yes\"\n        LINK3D=\"-lTinyGL\"\n    fi\nfi\n\n\n\n\n#look for DX support\ndx_path=\"system\"\nhas_directx=\"no\"\nif test \"$win32\" = \"yes\" ; then\n\ncheck_has_lib directx \"-lddraw\" '#include <ddraw.h>\nint main( void ) { return 0; }'\n\nif test \"has_directx\" = \"no\" ; then\n    dx_path=\"$dxsdk_path\"\n    check_has_lib directx \"-I$dxsdk_path/include -L$dxsdk_path/lib -lddraw\" '#include <ddraw.h>\nint main( void ) { return 0; }'\n    fi\nfi\n\n\n#look for SDL support - we don't use check_has_lib for the time being\ncase \"$disabled_packages\" in\n*\"sdl \"*) has_sdl=no\n    ;;\n*) sdl_too_old=no\nhas_sdl=no\n\nsdl_config=\"sdl2-config\"\nif test \"$sdl_local\" = \"yes\"; then\n    sdl_config=\"$sdl_path/sdl2-config\"\n    sdl_static=\"yes\"\nfi\n\n    cat > $TMPC << EOF\n#include <SDL.h>\n#undef main\nint main( void ) { return SDL_Init (SDL_INIT_VIDEO); }\nEOF\n\n\nif test \"$is_em\" = \"yes\"; then\n    if docc $sdl_cflags $LDFLAGS -sUSE_SDL=2 ; then\n        has_sdl=\"emcc-ports\"\n        sdl_cflags=\"-sUSE_SDL=2\"\n        sdl_lib_flags=\"-sUSE_SDL=2\"\n        if test \"$disable_3d\" = \"no\" ; then\n            has_opengl=\"yes\"\n        fi\n    fi\nelif type $sdl_config >/dev/null 2>>$logs; then\n    if test \"$sdl_static\" = \"yes\"; then\n        sdl_lib_flags=`$sdl_config --static-libs`\n    else\n        sdl_lib_flags=`$sdl_config --libs`\n    fi\n    sdl_cflags=`$sdl_config --cflags`\n\n    if docc $sdl_cflags $LDFLAGS $sdl_lib_flags ; then\n        _sdlversion=`$sdl_config --version | sed 's/[^0-9]//g'`\n        if test \"$_sdlversion\" -lt 121 ; then\n            sdl_too_old=yes\n        else\n            has_sdl=yes\n        fi\n    fi\nfi\n\nif test \"$has_sdl\" = \"no\" ; then\n\n  sdl_config=\"sdl-config\"\n  if test \"$sdl_local\" = \"yes\"; then\n    sdl_config=\"$sdl_path/sdl-config\"\n    sdl_static=\"yes\"\n  fi\n\n  if test \"$cross_prefix\" = \"\" ; then\n    if type $sdl_config >/dev/null 2>>$logs; then\n\n        cat > $TMPC << EOF\n#include <SDL.h>\n#undef main\nint main( void ) { return SDL_Init (SDL_INIT_VIDEO); }\nEOF\n\n        if test \"$sdl_static\" = \"yes\"; then\n            sdl_lib_flags=`$sdl_config --static-libs`\n        else\n            sdl_lib_flags=`$sdl_config --libs`\n        fi\n        sdl_cflags=`$sdl_config --cflags`\n\n        if docc $sdl_cflags $LDFLAGS $sdl_lib_flags ; then\n            _sdlversion=`$sdl_config --version | sed 's/[^0-9]//g'`\n            if test \"$_sdlversion\" -lt 121 ; then\n                sdl_too_old=yes\n            else\n                has_sdl=yes\n            fi\n        fi\n    fi\n  fi\nfi\n;;\nesac\n#end SDL check\n\n\n#look at endianess\nif test -z \"$cross_prefix\" -a \"$is_em\" != \"yes\" ; then\n\n# big/little endian test\ncat > $TMPC << EOF\n#include <inttypes.h>\nint main(int argc, char ** argv){\nvolatile uint32_t i=0x01234567;\nreturn (*((uint8_t*)(&i))) == 0x67;\n}\nEOF\n\n    if docc $LDFLAGS 2>>$logs ; then\n        $TMPO && bigendian=\"yes\"\n    else\n        echo big/little endian test failed\n    fi\n\nelse\n\n    # if cross compiling, cannot launch a program, so make a static guess\n    if test \"$cpu\" = \"powerpc\" -o \"$cpu\" = \"mips\" ; then\n        bigendian=\"yes\"\n    fi\n\nfi\n\nif test \"$debuginfo\" = \"no\"; then\n    CFLAGS=\"$CFLAGS -DNDEBUG\"\nfi\n\n\n#set gnu90 once all packages have been chcked, otherwise we will use it in docxx\nif docc $CFLAGS -std=gnu99 ; then\n    CFLAGS=\"$CFLAGS -std=gnu99\"\nfi\n\n\n#man dir\nif test x\"$mandir\" = x\"\"; then\n    mandir=\"share/man\"\nfi\n\n\nif test \"$disable_player\" = \"yes\" ; then\ndisable_compositor=$disable_player;\nfi\n\nif test \"$disable_compositor\" = \"yes\" ; then\n    disable_scenegraph=\"yes\"\nfi\n\nif test \"$disable_scenegraph\" = \"yes\" ; then\n    disable_3d=\"yes\"\n    disable_svg=\"yes\"\n    disable_vrml=\"yes\"\n    disable_x3d=\"yes\"\n    disable_bifs=\"yes\"\n    disable_bifs_enc=\"yes\"\n    disable_laser=\"yes\"\n    disable_seng=\"yes\"\n    disable_qtvr=\"yes\"\n    disable_swf=\"yes\"\n    disable_scene_stats=\"yes\"\n    disable_scene_dump=\"yes\"\n    disable_scene_encode=\"yes\"\n    disable_loader_isoff=\"yes\"\n    disable_loader_bt=\"yes\"\n    disable_loader_xmt=\"yes\"\n    disable_streaming=\"yes\"\n    disable_compositor=\"yes\"\n    disable_smgr=\"yes\"\nfi\n\nif test \"$disable_od_parse\" = \"yes\" ; then\n    disable_loader_isoff=\"yes\"\n    disable_loader_bt=\"yes\"\n    disable_loader_xmt=\"yes\"\nfi\n\n\n\nif test \"$has_lzma\" = \"yes\"; then\n  GPAC_SH_FLAGS=\"$GPAC_SH_FLAGS -llzma\"\n  if test \"$win32\" = \"yes\"; then\n    #add to extra lib for static mp4box build\n    extralibs=\"$extralibs -llzma\"\n  fi\nfi\n\n\n\n#all done, prepare for config.h writing\nTMPH=\"${TMPDIR1}/gpac-conf-${RANDOM}-$$-${RANDOM}.h\"\necho \"/* Automatically generated by configure */\" > $TMPH\necho \"#ifndef GF_CONFIG_H\" >> $TMPH\necho \"#define GF_CONFIG_H\" >> $TMPH\n\n#don't print full config for emscripten, we usually have local FS paths in the command line for custom builds\nif test \"$is_em\" = \"yes\" ; then\necho \"#define GPAC_CONFIGURATION \\\"(emscripten build)\\\"\" >> $TMPH\nelse\necho \"#define GPAC_CONFIGURATION \\\"$GPAC_CONFIGURATION\\\"\" >> $TMPH\nfi\n\nversion=\"`grep '#define GPAC_VERSION ' \\\"$source_path/include/gpac/version.h\\\" | cut -d '\"' -f 2`\"\nversion_major=`grep '#define GPAC_VERSION_MAJOR ' $source_path/include/gpac/version.h | sed 's/[^0-9]*//g'`\nversion_minor=`grep '#define GPAC_VERSION_MINOR ' $source_path/include/gpac/version.h | sed 's/[^0-9]*//g'`\nversion_micro=`grep '#define GPAC_VERSION_MICRO ' $source_path/include/gpac/version.h | sed 's/[^0-9]*//g'`\nsoname_version=\"${version_major}.${version_minor}.${version_micro}\"\n\n#check revision.h\ncd $source_path\n. ./check_revision.sh\ncd $build_path\n\necho \"\"\necho \"** System Configuration\"\necho \"Install prefix: $prefix\"\necho \"Source path: $source_path\"\necho \"C   compiler: $cc_naked\"\necho \"C++ compiler: $cxx_naked\"\necho \"make: $make\"\necho \"CPU: $cpu\"\necho \"Big Endian: $bigendian\"\nif test $cpu = \"mips\"; then\n    echo \"MMI enabled: $mmi\"\nfi\necho \"\"\necho \"** GPAC $version rev$revision Core Configuration **\"\necho \"Unit Tests: $unit_tests ('make unit_tests')\"\necho \"#define GF_STATIC static\" >> $TMPH\necho \"#define GF_NOT_EXPORTED\" >> $TMPH\nif test \"$static_bin\" = \"yes\" ; then\n    echo \"Static binaries enabled\"\n    echo \"#define GPAC_STATIC_BIN\" >> $TMPH\n    echo \"#define GPAC_STATIC_BUILD\" >> $TMPH\nelif test \"$static_build\" = \"yes\" ; then\n    echo \"Static build enabled\"\n    echo \"#define GPAC_STATIC_BUILD\" >> $TMPH\nelse\n    echo \"Static Modules: $static_modules\"\nfi\necho \"debug version: $debuginfo\"\necho \"GProf enabled: $gprof_build\"\necho \"Memory tracking enabled: $use_memory_tracking\"\necho \"Sanitizer enabled: $enable_sanitizer\"\necho \"Fixed-Point Version: $use_fixed_point\"\necho \"IPV6 Support: $has_ipv6\"\n\nif test $disable_qjs = \"no\" ; then\nenable_qjs=\"yes\"\nif test $disable_qjs_libc = \"no\" ; then\necho \"QuickJS Support: yes (with qjs-libc)\"\nelse\necho \"QuickJS Support: yes (no qjs-libc)\"\nfi\nelse\nenable_qjs=\"no\"\necho \"QuickJS Support: no\"\nfi\n\n\nif test \"$disable_compositor\" = \"yes\" ; then\n    echo \"Compositor disabled\"\n    echo \"#define GPAC_DISABLE_COMPOSITOR\" >> $TMPH\n    disable_laser=\"yes\"\nfi\n\nif test \"$disable_fonts\" = \"yes\" ; then\n    echo \"Font Engine disabled\"\n    echo \"#define GPAC_DISABLE_FONTS\" >> $TMPH\nfi\n\nif test \"$has_st_nsec\" = \"yes\" ; then\n    echo \"#define GPAC_HAS_MTIM_NSEC\" >> $TMPH\nfi\n\n\nif test \"$disable_smgr\" = \"yes\" ; then\ndisable_seng=\"yes\"\ndisable_qtvr=\"yes\"\ndisable_swf=\"yes\"\ndisable_scene_stats=\"yes\"\ndisable_scene_dump=\"yes\"\ndisable_scene_encode=\"yes\"\ndisable_loader_isoff=\"yes\"\ndisable_loader_bt=\"yes\"\ndisable_loader_xmt=\"yes\"\ndisable_svg=\"yes\"\n    echo \"Scene Manager disabled\"\n    echo \"#define GPAC_DISABLE_SMGR\" >> $TMPH\nfi\nif test \"$disable_svg\" = \"yes\" ; then\n    echo \"SVG disabled\"\n    echo \"#define GPAC_DISABLE_SVG\" >> $TMPH\n    disable_laser=\"yes\"\nfi\nif test \"$disable_vrml\" = \"yes\" ; then\n    echo \"MPEG-4/VRML/X3D disabled\"\n    echo \"#define GPAC_DISABLE_VRML\" >> $TMPH\nfi\nif test \"$disable_x3d\" = \"yes\" ; then\n    echo \"X3D disabled\"\n    echo \"#define GPAC_DISABLE_X3D\" >> $TMPH\nfi\nif test \"$disable_odf\" = \"yes\" ; then\n    echo \"OD Full support disabled\"\n    echo \"#define GPAC_MINIMAL_ODF\" >> $TMPH\nfi\nif test \"$disable_od_parse\" = \"yes\" ; then\n    echo \"OD Parsing disabled\"\n    echo \"#define GPAC_DISABLE_OD_PARSE\" >> $TMPH\nfi\nif test \"$disable_bifs\" = \"yes\" ; then\n    echo \"BIFS coder disabled\"\n    echo \"#define GPAC_DISABLE_BIFS\" >> $TMPH\nfi\nif test \"$disable_bifs_enc\" = \"yes\" ; then\n    echo \"BIFS encoder disabled\"\n    echo \"#define GPAC_DISABLE_BIFS_ENC\" >> $TMPH\nfi\nif test \"$disable_laser\" = \"yes\" ; then\n    echo \"LASeR coder disabled\"\n    echo \"#define GPAC_DISABLE_LASER\" >> $TMPH\nfi\nif test \"$disable_saf\" = \"yes\" ; then\n    echo \"SAF container disabled\"\n    echo \"#define GPAC_DISABLE_SAF\" >> $TMPH\nfi\nif test \"$disable_seng\" = \"yes\" ; then\n    echo \"Scene encoder engine disabled\"\n    echo \"#define GPAC_DISABLE_SENG\" >> $TMPH\nfi\nif test \"$disable_qtvr\" = \"yes\" ; then\n    echo \"Cubic QTVR import disabled\"\n    echo \"#define GPAC_DISABLE_QTVR\" >> $TMPH\nfi\nif test \"$disable_avi\" = \"yes\" ; then\n    echo \"AVI disabled\"\n    echo \"#define GPAC_DISABLE_AVILIB\" >> $TMPH\nfi\nif test \"$disable_ogg\" = \"yes\" ; then\n    echo \"OGG disabled\"\n    echo \"#define GPAC_DISABLE_OGG\" >> $TMPH\nfi\nif test \"$disable_m2ps\" = \"yes\" ; then\n    echo \"MPEG-2 PS disabled\"\n    echo \"#define GPAC_DISABLE_MPEG2PS\" >> $TMPH\nfi\nif test \"$disable_m2ts\" = \"yes\" ; then\n    echo \"MPEG-2 TS disabled\"\n    echo \"#define GPAC_DISABLE_MPEG2TS\" >> $TMPH\nfi\n\nif test \"$disable_parsers\" = \"yes\" ; then\n    disable_m2ts_mux=\"yes\"\nfi\n\nif test \"$disable_m2ts_mux\" = \"yes\" ; then\n    echo \"MPEG-2 TS Multiplexer disabled\"\n    echo \"#define GPAC_DISABLE_MPEG2TS_MUX\" >> $TMPH\nfi\nif test \"$disable_parsers\" = \"yes\" ; then\n    echo \"AV Parsers disabled\"\n    echo \"#define GPAC_DISABLE_AV_PARSERS\" >> $TMPH\nfi\nif test \"$disable_import\" = \"yes\" ; then\n    echo \"Media importers disabled\"\n    echo \"#define GPAC_DISABLE_MEDIA_IMPORT\" >> $TMPH\nfi\nif test \"$disable_export\" = \"yes\" ; then\n    echo \"Media exporters disabled\"\n    echo \"#define GPAC_DISABLE_MEDIA_EXPORT\" >> $TMPH\nfi\nif test \"$disable_swf\" = \"yes\" ; then\n    echo \"SWF import disabled\"\n    echo \"#define GPAC_DISABLE_SWF_IMPORT\" >> $TMPH\nfi\nif test \"$disable_scenegraph\" = \"yes\" ; then\n    echo \"Scene Graph disabled\"\n    echo \"#define GPAC_DISABLE_SCENEGRAPH\" >> $TMPH\nfi\nif test \"$disable_scene_stats\" = \"yes\" ; then\n    echo \"Scene statistics disabled\"\n    echo \"#define GPAC_DISABLE_SCENE_STATS\" >> $TMPH\nfi\nif test \"$disable_scene_dump\" = \"yes\" ; then\n    echo \"Scene dump disabled\"\n    echo \"#define GPAC_DISABLE_SCENE_DUMP\" >> $TMPH\nfi\nif test \"$disable_scene_encode\" = \"yes\" ; then\n    echo \"Scene encoder to ISO FF disabled\"\n    echo \"#define GPAC_DISABLE_SCENE_ENCODER\" >> $TMPH\nfi\nif test \"$disable_loader_isoff\" = \"yes\" ; then\n    echo \"Scene loader from ISO FF disabled\"\n    echo \"#define GPAC_DISABLE_LOADER_ISOM\" >> $TMPH\nfi\nif test \"$disable_loader_bt\" = \"yes\" ; then\n    echo \"BT/WRL Scene loader disabled\"\n    echo \"#define GPAC_DISABLE_LOADER_BT\" >> $TMPH\nfi\nif test \"$disable_loader_xmt\" = \"yes\" ; then\n    echo \"XMT/X3D Scene loader disabled\"\n    echo \"#define GPAC_DISABLE_LOADER_XMT\" >> $TMPH\nfi\nif test \"$disable_od_dump\" = \"yes\" ; then\n    echo \"OD dump disabled\"\n    echo \"#define GPAC_DISABLE_OD_DUMP\" >> $TMPH\nfi\nif test \"$disable_isom_dump\" = \"yes\" ; then\n    echo \"ISOM dump disabled\"\n    echo \"#define GPAC_DISABLE_ISOM_DUMP\" >> $TMPH\nfi\nif test \"$disable_crypto\" = \"yes\" ; then\n    echo \"Crypto tools disabled\"\n    echo \"#define GPAC_DISABLE_CRYPTO\" >> $TMPH\nfi\nif test \"$disable_isoff\" = \"yes\" ; then\n    echo \"ISO File Format disabled\"\n    echo \"#define GPAC_DISABLE_ISOM\" >> $TMPH\nfi\nif test \"$disable_isoff_write\" = \"yes\" ; then\n    echo \"ISO File Format write disabled\"\n    echo \"#define GPAC_DISABLE_ISOM_WRITE\" >> $TMPH\nfi\nif test \"$disable_isoff_hint\" = \"yes\" ; then\n    echo \"ISO File Format hinting disabled\"\n    echo \"#define GPAC_DISABLE_ISOM_HINTING\" >> $TMPH\nfi\nif test \"$disable_isoff_frag\" = \"yes\" ; then\n    echo \"ISO File Format fragments disabled\"\n    echo \"#define GPAC_DISABLE_ISOM_FRAGMENTS\" >> $TMPH\nfi\nif test \"$disable_isoff_hds\" = \"yes\" ; then\n    echo \"ISO File Format Adobe HDS disabled\"\n    echo \"#define GPAC_DISABLE_ISOM_ADOBE\" >> $TMPH\nfi\n\nif test \"$disable_streaming\" = \"yes\" ; then\n    echo \"RTP/RTSP/SDP streaming disabled\"\n    echo \"#define GPAC_DISABLE_STREAMING\" >> $TMPH\nfi\nif test \"$disable_dvbx\" = \"no\" ; then\n    echo \"DVB MPE and DSM-CC enabled\"\n    echo \"#define GPAC_ENABLE_MPE\" >> $TMPH\n    echo \"#define GPAC_ENABLE_DSMCC\" >> $TMPH\nfi\nif test \"$disable_vobsub\" = \"yes\" ; then\n    echo \"VobSub disabled\"\n    echo \"#define GPAC_DISABLE_VOBSUB\" >> $TMPH\nfi\nif test \"$disable_ttxt\" = \"yes\" ; then\n    echo \"3GPP/Apple TimedText disabled\"\n    echo \"#define GPAC_DISABLE_TTXT\" >> $TMPH\nfi\n\nif test \"$disable_ttml\" = \"yes\" ; then\n    echo \"TTML TimedText disabled\"\n    echo \"#define GPAC_DISABLE_TTML\" >> $TMPH\nfi\n\nif test \"$disable_vtt\" = \"yes\" ; then\n    echo \"WebVTT disabled\"\n    echo \"#define GPAC_DISABLE_VTT\" >> $TMPH\nfi\n\nif test \"$disable_depth_compositor\" = \"no\" ; then\n    echo \"Depth Compositor enabled\"\n    echo \"#define GF_SR_USE_DEPTH\" >> $TMPH\nfi\n\nif test \"$disable_qjs_stack\" = \"no\" ; then\n    echo \"#define GPAC_QJS_STACK_CHECK\" >> $TMPH\nfi\n\nif test \"$disable_doc\" = \"yes\" ; then\n    echo \"Doc disabled\"\n    echo \"#define GPAC_DISABLE_DOC\" >> $TMPH\nfi\n\nif test \"$disable_evg\" = \"yes\" ; then\n    echo \"EVG disabled\"\n    echo \"#define GPAC_DISABLE_EVG\" >> $TMPH\nfi\n\nif test \"$disable_route\" = \"yes\" ; then\n    echo \"ROUTE Support disabled\"\n    echo \"#define GPAC_DISABLE_ROUTE\" >> $TMPH\nfi\n\nif test \"$disable_crypto\" = \"yes\" ; then\n    echo \"CRYPTO Support disabled\"\n    echo \"#define GPAC_DISABLE_CRYPTO\" >> $TMPH\nfi\n\nif test \"$disable_log\" = \"yes\" ; then\n    echo \"Logging disabled\"\n    echo \"#define GPAC_DISABLE_LOG\" >> $TMPH\nfi\n\nif test \"$disable_vout\" = \"yes\" ; then\n    echo \"Filter vout disabled\"\n    echo \"#define GPAC_DISABLE_VOUT\" >> $TMPH\nfi\n\nif test \"$disable_aout\" = \"yes\" ; then\n    echo \"Filter aout disabled\"\n    echo \"#define GPAC_DISABLE_AOUT\" >> $TMPH\nfi\n\nif test \"$disable_restrict\" = \"no\" ; then\n    echo \"#define GPAC_ENABLE_RESTRICT\" >> $TMPH\nfi\n\nif test \"$disable_net_cap\" = \"yes\" ; then\n    echo \"Network record/playback disabled\"\n    echo \"#define GPAC_DISABLE_NETCAP\" >> $TMPH\nfi\n\n\necho \"\"\n\necho \"** Detected libraries **\"\necho \"zlib: $has_zlib\"\necho \"OpenGL support: $has_opengl\"\n\nif test \"$disable_tinygl\" = \"no\" ; then\necho \"TinyGL support: $has_tinygl\"\nfi\necho \"OpenSSL support: $has_ssl\"\necho \"nghttp2: $has_nghttp2\"\n\nif test \"$win32\" != \"yes\" ; then\n    echo \"OSS Audio: $has_oss\"\n    echo \"ALSA Audio: $has_alsa\"\n    echo \"Jack Audio: $has_jack\"\n    echo \"Pulse Audio: $has_pulseaudio\"\n    echo \"DirectFB: $has_directfb\"\n\n    if test \"$has_x11\" != \"no\" ; then\n        echo \"X11: $has_x11 (path: $X11_PATH)\"\n    else\n        echo \"X11: $has_x11\"\n    fi\n\n    if test \"$has_x11\" != \"no\" ; then\n        echo \"X11 Shared Memory support: $has_x11_shm\"\n        echo \"X11 XVideo support: $has_x11_xv\"\n    fi\nfi\necho \"SDL: $has_sdl\"\nif test \"$sdl_too_old\" = \"yes\" ; then\n    echo \"SDL Version too old - please upgrade for SDL support\"\nfi\n\nif test \"$win32\" = \"yes\" ; then\n    echo \"DirectX: $has_directx\"\nfi\nif test \"$linux\" = \"yes\" ; then\n    echo \"DVB for Linux: $has_dvb4linux\"\nfi\n\necho \"FreeType: $has_freetype\"\necho \"JPEG: $has_jpeg\"\necho \"OpenJPEG: $has_openjpeg\"\necho \"PNG: $has_png\"\necho \"MAD: $has_mad\"\necho \"FAAD: $has_faad\"\necho \"XVID: $has_xvid\"\necho \"libcaption: $has_caption\"\necho \"MpeghDecoder: $has_mpeghdec\"\necho \"libcaca: $has_libcaca\"\necho \"libcurl: $has_curl\"\n\nffopts=\"\"\nif test \"$has_ffmpeg\" != \"no\" ; then\nif test \"$ffmpeg_vvc\" = \"yes\" ; then\n    ffopts=\"VVC $ffopts \"\nfi\nfi\n\nif [ -z $ffopts ] ; then\necho \"FFmpeg: $has_ffmpeg\"\nelse\necho \"FFmpeg: $has_ffmpeg - \\\"$ffopts\\\" supported\"\nfi\n\n\necho \"LZMA: $has_lzma\"\necho \"Xiph Vorbis: $has_vorbis\"\necho \"Xiph Theora: $has_theora\"\necho \"A52 (AC3): $has_a52\"\necho \"OpenSVCDecoder: $has_opensvc\"\necho \"OpenHEVCDecoder: $has_openhevc\"\necho \"Platinum UPnP: $has_platinum\"\necho \"Freenect: $has_freenect\"\n\n\necho \"\"\n\n#needs gmon for win32 gprof\nif test \"$gprof_build\" = \"yes\"; then\n    if test \"$win32\" = \"yes\"; then\n        extralibs=\"$extralibs -lgmon\"\n    fi\nfi\n\n#we add no deprecate by default on osx (due to opengl ...)\nif test \"$darwin\" = \"yes\" ; then\n    CFLAGS=\"$CFLAGS -Wno-deprecated -Wno-deprecated-declarations\"\nelse\n    CFLAGS=\"$CFLAGS -Wno-deprecated -Wno-deprecated-declarations -Wno-int-in-bool-context\"\nfi\n\n\nif test \"$is_em\" = \"yes\" ; then\n\nextralibs=\"$extralibs -sALLOW_TABLE_GROWTH -sWASM_BIGINT\"\n\nif test \"$disable_threads\" = \"no\" ; then\n    CFLAGS=\"$CFLAGS -sUSE_PTHREADS\"\n    extralibs=\"$extralibs -sUSE_PTHREADS\"\nfi\n\nif test \"$em_size\" = \"0\" ; then\n    extralibs=\"$extralibs -sALLOW_MEMORY_GROWTH\"\n    if test \"$has_ffmpeg\" != \"no\"; then\n        extralibs=\"$extralibs -sSTACK_SIZE=1MB\"\n    fi\nelse\n    extralibs=\"$extralibs -sTOTAL_MEMORY=$em_size\"\nfi\n\nif test \"$enable_sanitizer\" = \"yes\" ; then\n    CFLAGS=\"$CFLAGS -fsanitize=address -g2 -DASAN_ENABLED\"\n    LDFLAGS=\"$LDFLAGS -fsanitize=address -ldl\"\nfi\n\nelse\n\nif test \"$enable_sanitizer\" = \"yes\" ; then\n    CFLAGS=\"$CFLAGS -fsanitize=address,undefined -fno-sanitize-recover -g -fno-omit-frame-pointer -DASAN_ENABLED\"\n    LDFLAGS=\"$LDFLAGS -fsanitize=address,undefined -ldl\"\nfi\n\nfi\n\nldir=`pwd`\nCFLAGS=\"$CFLAGS -DGPAC_HAVE_CONFIG_H -I\\\"$ldir\\\"\"\nif test \"$win32\" = \"no\" ; then\n    CFLAGS=\"$CFLAGS -fvisibility=\\\"hidden\\\"\"\nfi\nCXXFLAGS=\"$CXXFLAGS\"\n\n\necho \"Creating config.mak\"\necho \"# Automatically generated by configure - do not modify\" > config.mak\n\necho \"GPAC_CONFIGURATION=$GPAC_CONFIGURATION\" >> config.mak\n\necho \"prefix=$prefix\" >> config.mak\necho \"DESTDIR=$DESTDIR\" >> config.mak\necho \"moddir=gpac\" >> config.mak\necho \"MAKE=$make\" >> config.mak\n\nif test \"$verbose\" = \"yes\" ; then\necho \"CC=$cc_naked\" >> config.mak\necho \"AR=$ar\" >> config.mak\necho \"RANLIB=$ranlib\" >> config.mak\necho \"STRIP=$strip\" >> config.mak\necho \"WINDRES=$windres\" >> config.mak\nelse\necho \"CC=@$cc_naked\" >> config.mak\necho \"AR=@$ar\" >> config.mak\necho \"RANLIB=@$ranlib\" >> config.mak\necho \"STRIP=@$strip\" >> config.mak\necho \"WINDRES=$windres\" >> config.mak\nfi\necho \"INSTALL=$install\" >> config.mak\necho \"LIBTOOL=@libtool\" >> config.mak\n\necho \"INSTFLAGS=$instflags\" >> config.mak\necho \"OPTFLAGS=$CFLAGS\" >> config.mak\necho \"CXXFLAGS=$CXXFLAGS\" >> config.mak\necho \"LDFLAGS=$LDFLAGS\" >> config.mak\necho \"SHFLAGS=$SHFLAGS\" >> config.mak\n\npf=\"$prefix/\"\nlib_dir=${libdir#\"$pf\"}\necho \"lib_dir=$lib_dir\" >> config.mak\n\npf=\"$prefix/\"\nman_dir=${mandir#\"$pf\"}\necho \"man_dir=$man_dir\" >> config.mak\n\n\necho \"UNIT_TESTS=$unit_tests\" >> config.mak\n\n\necho \"STATIC_MODULES=$static_modules\" >> config.mak\n\n#for cross-compilation\nif test \"$cross_prefix\" != \"\" ; then\n    echo \"CROSS_COMPILING=yes\" >> config.mak\nfi\n\nif test \"$cpu\" = \"x86\" ; then\n    echo \"TARGET_ARCH_X86=yes\" >> config.mak\nelif test \"$cpu\" = \"armv4l\" ; then\n    echo \"TARGET_ARCH_ARMV4L=yes\" >> config.mak\nelif test \"$cpu\" = \"alpha\" ; then\n    echo \"TARGET_ARCH_ALPHA=yes\" >> config.mak\nelif test \"$cpu\" = \"sparc64\" ; then\n    echo \"TARGET_ARCH_SPARC64=yes\" >> config.mak\nelif test \"$cpu\" = \"powerpc\" ; then\n    echo \"TARGET_ARCH_POWERPC=yes\" >> config.mak\nelif test \"$cpu\" = \"mips\" ; then\n    echo \"TARGET_ARCH_MIPS=yes\" >> config.mak\nfi\n\nif test \"$bigendian\" = \"yes\" ; then\n    echo \"IS_BIGENDIAN=yes\" >> config.mak\n    echo \"#define GPAC_BIG_ENDIAN\" >> $TMPH\nfi\necho \"EXTRALIBS=$extralibs\" >> config.mak\necho \"LIBGPAC_CFLAGS=$libgpac_cflags\" >> config.mak\necho \"LIBGPAC_LDFLAGS=$libgpac_extralibs\" >> config.mak\n\necho \"VERSION=$version\" >>config.mak\necho \"VERSION_MAJOR=$version_major\" >>config.mak\necho \"VERSION_SONAME=$soname_version\" >>config.mak\n\nif test \"$use_fixed_point\" = \"yes\"; then\n    echo \"#define GPAC_FIXED_POINT\" >> $TMPH\nfi\n\nif test \"$use_memory_tracking\" = \"yes\"; then\n    echo \"#define GPAC_MEMORY_TRACKING\" >> $TMPH\n    if test \"$cygwin\" = \"yes\" ; then\n\t\techo \"#define GPAC_MEMORY_TRACKING_DISABLE_STACKTRACE\" >> $TMPH\n    fi\nfi\n\n\nif test \"$win32\" = \"yes\" ; then\n    echo \"CONFIG_WIN32=yes\" >> config.mak\n    echo \"#define GPAC_CONFIG_WIN32\" >> $TMPH\n    if test \"$cygwin\" = \"yes\" ; then\n        echo \"#define ftello64 ftell\" >> $TMPH\n        echo \"#define fseeko64 fseek\" >> $TMPH\n    fi\n    if test \"$mingw32\" = \"yes\" ; then\n\n# -municode test\ncat > $TMPC << EOF\n#include <inttypes.h>\nint wmain(int argc, char ** argv){\nreturn 0;\n}\nEOF\n\n      if docc -municode ; then\n        echo \"UNICODEFLAGS=-municode\" >> config.mak\n        echo \"HAS_WMAIN=yes\" >> config.mak\n      else\n        echo \"UNICODEFLAGS=\" >> config.mak\n        if docc ; then\n          echo \"HAS_WMAIN=yes\" >> config.mak\n        else\n          echo \"HAS_WMAIN=no\" >> config.mak\n        fi\n      fi\n    fi\nelif test \"$linux\" = \"yes\" ; then\n    echo \"CONFIG_LINUX=yes\" >> config.mak\n    echo \"#define GPAC_CONFIG_LINUX\" >> $TMPH\nelif test \"$freebsd\" = \"yes\" ; then\n    echo \"CONFIG_FREEBSD=yes\" >> config.mak\n    echo \"#define GPAC_CONFIG_FREEBSD\" >> $TMPH\nelif test \"$darwin\" = \"yes\" ; then\n    echo \"CONFIG_DARWIN=yes\" >> config.mak\n    echo \"#define GPAC_CONFIG_DARWIN\" >> $TMPH\n    if test \"$DarwinGL\" = \"yes\" ; then\n        echo \"#define CONFIG_DARWIN_GL\" >> $TMPH\n    fi\n    echo \"mac_apps=$Mac_Applications\" >> config.mak\nelif test \"$sunos\" = \"yes\" ; then\n    echo \"CONFIG_SUNOS=yes\" >> config.mak\n    echo \"#define GPAC_CONFIG_SUNOS\" >> $TMPH\nelif test \"$is_em\" = \"yes\" ; then\n    echo \"CONFIG_EMSCRIPTEN=yes\" >> config.mak\n    echo \"EM_TYPE=$em_type\" >> config.mak\n    echo \"#define GPAC_CONFIG_EMSCRIPTEN\" >> $TMPH\nelse\n    echo \"#define GPAC_CONFIG_GENERIC\" >> $TMPH\nfi\n\nif test \"$win32\" = \"no\" ; then\n    echo \"GPAC_SH_FLAGS=$GPAC_SH_FLAGS\" >> config.mak\n    echo \"EXE_SUFFIX=\" >> config.mak\n    echo \"DYN_LIB_SUFFIX=$DYN_LIB_SUFFIX\" >> config.mak\nelse\n    echo \"EXE_SUFFIX=.exe\" >> config.mak\n    echo \"DYN_LIB_SUFFIX=.dll\" >> config.mak\nfi\n\n\necho \"INSTFLAGS=$INSTFLAGS\" >> config.mak\n\necho \"CONFIG_JS=$enable_qjs\" >> config.mak\nif test \"$enable_qjs\" = \"yes\" ; then\necho \"#define GPAC_HAS_QJS\" >> $TMPH\nif test \"$disable_qjs_libc\" = \"yes\" ; then\necho \"#define GPAC_DISABLE_QJS_LIBC\" >> $TMPH\nfi\n\nfi\n\nif test \"$fatal_assert\" = \"yes\" ; then\necho \"#define GPAC_ASSERT_FATAL\" >> $TMPH\nfi\n\n\necho \"HAS_OPENSSL=$has_ssl\" >> config.mak\nif test \"$has_ssl\" != \"no\" ; then\n    echo \"#define GPAC_HAS_SSL\" >> $TMPH\nfi\n\nif test \"$has_poll\" = \"yes\" ; then\n    echo \"#define GPAC_HAS_POLL\" >> $TMPH\nfi\n\nif test \"$is_64\" = \"yes\" ; then\n    echo \"#define GPAC_64_BITS\" >> $TMPH\nfi\n\necho \"DISABLE_THREADS=$disable_threads\" >> config.mak\nif test \"$disable_threads\" = \"yes\" ; then\n    echo \"#define GPAC_DISABLE_THREADS\" >> $TMPH\nfi\n\nif test \"$disable_network\" = \"yes\" ; then\n    echo \"Network disabled\"\n    echo \"#define GPAC_DISABLE_NETWORK\" >> $TMPH\nfi\n\n\nif test \"$has_zlib\" = \"no\" -o \"$has_zlib\" = \"force-no\" ; then\n    echo \"#define GPAC_DISABLE_ZLIB\" >> $TMPH\n    echo \"CONFIG_ZLIB=no\" >> config.mak\nelse\n    echo \"CONFIG_ZLIB=$has_zlib\" >> config.mak\nfi\necho \"CONFIG_FT=$has_freetype\" >> config.mak\n\nif test \"$has_remotery\" = \"no\" ; then\n    echo \"#define GPAC_DISABLE_REMOTERY\" >> $TMPH\nfi\n\n\nif test \"$has_jpeg\" != \"no\" ; then\n    echo \"#define GPAC_HAS_JPEG\" >> $TMPH\nfi\n\nif test \"$has_png\" != \"no\" ; then\n    echo \"#define GPAC_HAS_PNG\" >> $TMPH\nfi\n\nif test \"$has_vtb\" != \"no\" ; then\n    echo \"#define GPAC_HAS_VTB\" >> $TMPH\nfi\n\necho \"CONFIG_STRLCPY=$has_strlcpy\" >> config.mak\nif test \"$has_strlcpy\" != \"no\" ; then\n    echo \"#define GPAC_HAS_STRLCPY\" >> $TMPH\nfi\n\nif test \"$has_sock_un\" != \"no\" ; then\n    echo \"#define GPAC_HAS_SOCK_UN\" >> $TMPH\nfi\n\nif test \"$has_ifaddrs\" != \"no\" ; then\n    echo \"#define GPAC_HAS_IFADDRS\" >> $TMPH\nfi\n\necho \"CONFIG_LZMA=$has_lzma\" >> config.mak\nif test \"$has_lzma\" != \"no\"; then\necho \"#define GPAC_HAS_LZMA\" >> $TMPH\nfi\n\n\nif test \"$has_openjpeg\" != \"no\" ; then\n    echo \"#define GPAC_HAS_JP2\" >> $TMPH\nfi\n\nif test \"$has_faad\" != \"no\" ; then\n    echo \"#define GPAC_HAS_FAAD\" >> $TMPH\nfi\n\nif test \"$has_mad\" != \"no\" ; then\n    echo \"#define GPAC_HAS_MAD\" >> $TMPH\nfi\n\nif test \"$has_xvid\" != \"no\" ; then\n    echo \"#define GPAC_HAS_XVID\" >> $TMPH\nfi\n\nif test \"$has_vorbis\" != \"no\" ; then\n    echo \"#define GPAC_HAS_VORBIS\" >> $TMPH\nfi\n\nif test \"$has_theora\" != \"no\" ; then\n    echo \"#define GPAC_HAS_THEORA\" >> $TMPH\nfi\n\nif test \"$has_ffmpeg\" != \"no\"; then\n    echo \"#define GPAC_HAS_FFMPEG\" >> $TMPH\n    if test \"$ffmpeg_vvc\" = \"yes\"; then\n      echo \"#define FFMPEG_ENABLE_VVC\" >> $TMPH\n    fi\n    if test \"$disable_avdevice\" = \"yes\" ; then\n      echo \"#define FFMPEG_DISABLE_AVDEVICE\" >> $TMPH\n    fi\n    if test \"$disable_avfilter\" = \"yes\" ; then\n      echo \"#define FFMPEG_DISABLE_AVFILTER\" >> $TMPH\n    fi\nfi\n\necho \"CONFIG_OSS_AUDIO=$has_oss\" >> config.mak\necho \"CONFIG_ALSA=$has_alsa\" >> config.mak\necho \"CONFIG_JACK=$has_jack\" >> config.mak\n\nif test \"$has_a52\" != \"no\" ; then\n    echo \"#define GPAC_HAS_LIBA52\" >> $TMPH\nfi\necho \"CONFIG_PULSEAUDIO=$has_pulseaudio\" >> config.mak\necho \"CONFIG_FREENECT=$has_freenect\" >> config.mak\nif test \"$has_freenect\" != \"no\"\nthen\n    echo \"FREENECT_CFLAGS=$freenect_flags\" >> config.mak\n    echo \"FREENECT_LDLAGS=$freenect_ld\" >> config.mak\nfi\n\nif test \"$want_gcov\" = \"yes\" ; then\n    echo \"#define GPAC_ENABLE_COVERAGE\" >> $TMPH\nfi\n\nif test \"$has_nghttp2\" != \"no\" ; then\n    echo \"#define GPAC_HAS_HTTP2\" >> $TMPH\nfi\n\nif test \"$has_caption\" != \"no\" ; then\n    echo \"#define GPAC_HAS_LIBCAPTION\" >> $TMPH\nfi\n\nif test \"$has_libcaca\" != \"no\" ; then\n    echo \"#define GPAC_HAS_LIBCACA\" >> $TMPH\n    echo \"CONFIG_CACA=yes\" >> config.mak\nelse\n    echo \"CONFIG_CACA=no\" >> config.mak\nfi\n\nif test \"$has_mpeghdec\" != \"no\" ; then\n    echo \"#define GPAC_HAS_MPEGHDECODER\" >> $TMPH\nfi\n\nif test \"$has_curl\" != \"no\" ; then\n    echo \"#define GPAC_HAS_CURL\" >> $TMPH\nfi\n\n#dump all cflags\nfor pcklib in $all_packages ; do\n    eval \"has_pck=\\$has_$pcklib\"\n    if test \"$has_pck\" = \"no\" ; then\n        lib_cflags=\"\"\n        lib_ldflags=\"\"\n    else\n        eval \"lib_cflags=\\$cflags_$pcklib\"\n        eval \"lib_ldflags=\\$ldflags_$pcklib\"\n    fi\n    echo $pcklib\"_cflags=\"$lib_cflags >> config.mak\n    echo $pcklib\"_ldflags=\"$lib_ldflags >> config.mak\ndone\n\n\nidx=1\nwhile [ $idx -le $nb_filters ]; do\n    get_item $idx \"$all_filters\"\n    name=\"$ar_it\"\n    var=$(printf '%s' \"$name\" | tr '-' '_')\n    ret=\"\"\n    eval \"ret=\\${disable_$var}\"\n    uvar=`echo $var | tr a-z A-Z`\n    if test \"$ret\" = \"yes\" ; then\n        echo \"#define GPAC_DISABLE_$uvar\" >> $TMPH\n    fi\n    idx=$((idx+1))\ndone\n\necho \"DISABLE_COMPOSITOR=$disable_compositor\" >> config.mak\necho \"DISABLE_STREAMING=$disable_streaming\" >> config.mak\necho \"DISABLE_SVG=$disable_svg\" >> config.mak\necho \"DISABLE_LASER=$disable_laser\" >> config.mak\necho \"DISABLE_SAF=$disable_saf\" >> config.mak\necho \"DISABLE_BIFS=$disable_bifs\" >> config.mak\necho \"DISABLE_SENG=$disable_seng\" >> config.mak\necho \"DISABLE_LOADER_ISOFF=$disable_loader_isoff\" >> config.mak\necho \"DISABLE_LOADER_BT=$disable_loader_bt\" >> config.mak\necho \"DISABLE_LOADER_XMT=$disable_loader_xmt\" >> config.mak\necho \"DISABLE_LOADER_QTVR=$disable_qtvr\" >> config.mak\necho \"DISABLE_LOADER_SWF=$disable_swf\" >> config.mak\necho \"DISABLE_SCENE_STATS=$disable_scene_stats\" >> config.mak\necho \"DISABLE_SCENE_DUMP=$disable_scene_dump\" >> config.mak\necho \"DISABLE_SCENE_ENCODE=$disable_scene_encode\" >> config.mak\necho \"DISABLE_SCENEGRAPH=$disable_scenegraph\" >> config.mak\necho \"DISABLE_CRYPTO=$disable_crypto\" >> config.mak\necho \"DISABLE_DVBX=$disable_dvbx\" >> config.mak\necho \"DISABLE_AVILIB=$disable_avi\" >> config.mak\necho \"DISABLE_M2PS=$disable_m2ps\" >> config.mak\necho \"DISABLE_OGG=$disable_ogg\" >> config.mak\necho \"DISABLE_ISOFF=$disable_isoff\" >> config.mak\necho \"DISABLE_ISOFF_HINT=$disable_isoff_hint\" >> config.mak\necho \"DISABLE_VOBSUB=$disable_vobsub\" >> config.mak\necho \"DISABLE_TTXT=$disable_ttxt\" >> config.mak\necho \"DISABLE_TTML=$disable_ttml\" >> config.mak\necho \"DISABLE_SMGR=$disable_smgr\" >> config.mak\necho \"DISABLE_AV_PARSERS=$disable_parsers\" >> config.mak\necho \"DISABLE_MEDIA_IMPORT=$disable_import\" >> config.mak\necho \"DISABLE_MEDIA_EXPORT=$disable_export\" >> config.mak\necho \"DISABLE_CORE_TOOLS=$disable_core\" >> config.mak\necho \"DISABLE_OD_DUMP=$disable_od_dump\" >> config.mak\necho \"DISABLE_OD_PARSE=$disable_od_parse\" >> config.mak\necho \"MINIMAL_OD=$disable_od\" >> config.mak\necho \"DISABLE_ISOM_ADOBE=$disable_isoff_hds\" >> config.mak\necho \"DISABLE_VRML=$disable_vrml\" >> config.mak\necho \"DISABLE_ROUTE=$disable_route\" >> config.mak\necho \"DISABLE_CRYPTO=$disable_crypto\" >> config.mak\necho \"DISABLE_M2TS_MUX=$disable_m2ts_mux\" >> config.mak\necho \"DISABLE_M2TS=$disable_m2ts\" >> config.mak\n\n\necho \"GPAC_USE_TINYGL=$has_tinygl\" >> config.mak\necho \"OGL_INCLS=$INCL3D\" >> config.mak\n\necho \"HAS_OPENGL=$has_opengl\" >> config.mak\n\nif test \"$has_opengl\" = \"yes\" ; then\n    echo \"OGL_LIBS=$LINK3D\" >> config.mak\n    if test \"$is_em\" = \"yes\" ; then\n        echo \"#define GPAC_USE_GLES2\" >> $TMPH\n    fi\nelse\n    echo \"#define GPAC_DISABLE_3D\" >> $TMPH\nfi\n\nif test \"$has_tinygl\" = \"yes\" ; then\n    echo \"#define GPAC_USE_TINYGL\" >> $TMPH\nfi\n\nif test \"$has_sdl\" != \"no\" ; then\n    echo \"CONFIG_SDL=yes\" >> config.mak\n    echo \"sdl_cflags=$sdl_cflags\" >> config.mak\n    echo \"sdl_ldflags=$sdl_lib_flags\" >> config.mak\nelse\n    echo \"CONFIG_SDL=no\" >> config.mak\nfi\n\n\necho \"DEBUGBUILD=$debuginfo\" >> config.mak\necho \"GPROFBUILD=$gprof_build\" >> config.mak\necho \"STATIC_BINARY=$static_bin\" >> config.mak\necho \"STATIC_BUILD=$static_build\" >> config.mak\n\necho \"CONFIG_IPV6=$has_ipv6\" >> config.mak\nif test \"$has_ipv6\" = \"yes\" ; then\n    echo \"#define GPAC_HAS_IPV6\" >> $TMPH\nfi\n\nif test \"$win32\" = \"yes\" ; then\n    echo \"CONFIG_DIRECTX=$has_directx\" >> config.mak\n    if test \"$has_directx\" = \"yes\" ; then\n        echo \"DX_PATH=$dx_path\" >> config.mak\n    fi\nfi\n\necho \"CONFIG_PLATINUM=$has_platinum\" >> config.mak\n\nif test \"$has_opensvc\" != \"no\" ; then\n    echo \"#define GPAC_HAS_OPENSVC\" >> $TMPH\nfi\n\necho \"CONFIG_OPENHEVC=$has_openhevc\" >> config.mak\nif test \"$has_openhevc\" != \"no\" ; then\n    echo \"#define GPAC_HAS_OPENHEVC\" >> $TMPH\n    if test \"$static_modules\" = \"yes\" ; then\n        echo \"#define GPAC_OPENHEVC_STATIC\" >> $TMPH\n    fi\nfi\n\necho \"LINUX_DVB=$has_dvb4linux\" >> config.mak\nif test \"$has_dvb4linux\" != \"no\"; then\n    echo \"#define GPAC_HAS_LINUX_DVB\" >> $TMPH\nfi\n\necho \"CONFIG_DIRECTFB=$has_directfb\" >> config.mak\nif test \"$has_directfb\" != \"no\"; then\necho \"DIRECTFB_INC_PATH=$directfb_inc\" >> config.mak\necho \"DIRECTFB_LIB=$directfb_lib\" >> config.mak\nfi\n\necho \"CONFIG_X11=$has_x11\" >> config.mak\nif test \"$has_x11\" != \"no\"; then\n\nif test \"$has_x11_shm\" = \"yes\"; then\n    echo \"USE_X11_SHM=$has_x11_shm\" >> config.mak\nfi\nif test \"$has_x11_xv\" = \"yes\"; then\n    echo \"USE_X11_XV=$has_x11_xv\" >> config.mak\nfi\nif test \"$has_x11_glx\" = \"yes\"; then\n    echo \"USE_X11_GLX=$has_x11_glx\" >> config.mak\nfi\n\n\nif [ -n \"$X11_PATH\" ] ; then\nif test \"$is_64\" = \"yes\"; then\n#not on OSX ...\nif test \"$darwin\" = \"yes\"; then\n    echo \"X11_LIB_PATH=$X11_PATH/lib\" >> config.mak\nelse\n    echo \"X11_LIB_PATH=$X11_PATH/lib64\" >> config.mak\nfi\nelse\n    echo \"X11_LIB_PATH=$X11_PATH/lib\" >> config.mak\nfi\necho \"X11_INC_PATH=$X11_PATH/include\" >> config.mak\nfi\n\nfi\n#end x11!=no\n\necho \"CONFIG_HID=$has_hid\" >> config.mak\nif test \"$has_hid\" != \"no\"; then\necho \"HID_LDFLAGS=$hid_lib\" >> config.mak\nfi\n\necho \"PKG_CONFIG=$pkg_config\" >> config.mak\n\n\n\nbuild_object_files_directory_tree()\n{\n    SRC_DIRS=\"src src/utils src/isomedia src/ietf src/odf src/bifs src/scenegraph src/filter_core src/filters src/crypto src/media_tools src/scene_manager src/compositor src/laser src/evg src/quickjs src/jsmods\"\n\n    APP_DIRS=\"applications/gpac applications/mp4box\"\n\n    for dir in $SRC_DIRS ; do\n        mkdir -p \"$dir\"\n    done\n    ln -sf \"$1/Makefile\" Makefile\n    ln -sf \"$1/static.mak\" static.mak\n    ln -sf \"$1/src/Makefile\" src/Makefile\n\n    mkdir -p applications\n    ln -sf \"$1/applications/Makefile\" applications/Makefile\n    mkdir -p applications/testapps\n\n    for dir in $APP_DIRS ; do\n        mkdir -p \"$dir\"\n        ln -sf \"$1/$dir/Makefile\" \"$dir/Makefile\"\n    done\n\n    mkdir -p modules\n    ln -sf \"$1/modules/Makefile\" modules/Makefile\n\n    for moddir in \"$1/modules/\"* ; do\n        if [ -d \"$moddir\"  -a -f \"$moddir/Makefile\" ]; then\n            dir=\"${moddir#\"$1/\"}\"\n            mkdir -p \"$dir\"\n            ln -sf \"$moddir/Makefile\" \"$dir/Makefile\"\n        fi\n    done\n    if test \"$has_directx\" = \"yes\"; then\n        ln -sf \"$1/modules/dx_hw/hand.cur\" modules/dx_hw/hand.cur\n        ln -sf \"$1/modules/dx_hw/collide.cur\" modules/dx_hw/collide.cur\n    fi\n}\n\n#build tree in object directory if source path is different from current one\nif test \"$source_path_used\" = \"yes\" ; then\n    echo \"Creating compilation tree image\"\n    build_object_files_directory_tree \"$source_path\"\nfi\n\necho \"SRC_PATH=$source_path\" >> config.mak\necho \"BUILD_PATH=$build_path\" >> config.mak\necho \"LOCAL_INC_PATH=$local_inc\" >> config.mak\n\n\nif test \"$unit_tests\" = \"yes\" ; then\n    mkdir -p unittests/build && cd unittests/build\n    build_object_files_directory_tree \"$source_path\"\n    cd -\nfi\n\n\necho \"#endif\" >> $TMPH\n\n\n#do not overwrite config.h if unchanged to avoid superfluous rebuilds.\nif ! cmp -s $TMPH config.h ; then\n    rm -f config.h\n    mv -f $TMPH config.h\nelse\n    echo \"config.h is unchanged\"\nfi\n\necho \"Check config.log for detection failures\"\n\nrm -f $TMPO $TMPC $TMPE $TMPS $TMPCXX $TMPH\n\n\nif [ ! -d \"./bin\" ] ; then\n    mkdir ./bin\nfi\nif [ ! -d \"./bin/gcc\" ] ; then\n    mkdir ./bin/gcc\nfi\nif [ ! -d \"./bin/gcc/temp\" ] ; then\n    mkdir ./bin/gcc/temp\nfi\n\nif test \"$is_em\" = \"yes\" ; then\n    ln -sf \"$source_path/share/emscripten/gpac.html\" \"bin/gcc/gpac.html\"\nfi\n\n\necho '%.opic : %.c' >> config.mak\nif test \"$verbose\" = \"no\" ; then\necho '\t@echo \"  CC $<\"' >> config.mak\nfi\necho '\t$(CC) $(CFLAGS) $(PIC_CFLAGS) -c $< -o $@' >> config.mak\n\necho '%.o : %.c' >> config.mak\nif test \"$verbose\" = \"no\" ; then\necho '\t@echo \"  CC $<\"' >> config.mak\nfi\necho '\t$(CC) $(CFLAGS) -c -o $@ $<' >> config.mak\n\necho '%.o: %.cpp' >> config.mak\nif test \"$verbose\" = \"no\" ; then\necho '\t@echo \"  CC $<\"' >> config.mak\nfi\necho '\t$(CXX) $(CFLAGS) -c -o $@ $<' >> config.mak\n\necho '%.o: %.rc' >> config.mak\nif test \"$verbose\" = \"no\" ; then\necho '\t@echo \"  RC $<\"' >> config.mak\nfi\necho '\t$(WINDRES) $< -o $@ ' >> config.mak\n\n\n#pkg-config\ngenerate_pkgconfig () {\n\techo \"prefix=$prefix\"\n\techo \"exec_prefix=\\${prefix}\"\n\techo \"libdir=\\${exec_prefix}/$libdir\"\n\techo \"includedir=\\${exec_prefix}/include\"\n\techo \"\"\n\techo \"Name: gpac\"\n\techo \"Description: GPAC Multimedia Framework\"\n\techo \"URL: https://gpac.io\"\n\techo \"Version:$version\"\n\techo \"Cflags: -I\\${prefix}/include\"\n\techo \"Libs: -L\\${libdir} -lgpac\"\n}\n\ngenerate_pkgconfig > gpac.pc\n\n\nif test \"$static_bin\" = \"yes\"; then\n if test \"$darwin\" = \"yes\" ; then\n  echo \"\\nWarning: static binaries on OSX cannot remove all dependendencies to system libraries\\n\"\n elif test \"$win32\" = \"yes\" ; then\n  echo \"\\nWarning: static binaries on Win32 cannot remove all dependendencies to system libraries\\n\"\n fi\nfi\n\n\n\necho \"Done - type 'make help' for make info, 'make' to build\"\n"
        },
        {
          "name": "debian",
          "type": "tree",
          "content": null
        },
        {
          "name": "extra_lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "flake.lock",
          "type": "blob",
          "size": 0.5537109375,
          "content": "{\n  \"nodes\": {\n    \"nixpkgs\": {\n      \"locked\": {\n        \"lastModified\": 1686960236,\n        \"narHash\": \"sha256-AYCC9rXNLpUWzD9hm+askOfpliLEC9kwAo7ITJc4HIw=\",\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"04af42f3b31dba0ef742d254456dc4c14eedac86\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"NixOS\",\n        \"ref\": \"nixos-unstable\",\n        \"repo\": \"nixpkgs\",\n        \"type\": \"github\"\n      }\n    },\n    \"root\": {\n      \"inputs\": {\n        \"nixpkgs\": \"nixpkgs\"\n      }\n    }\n  },\n  \"root\": \"root\",\n  \"version\": 7\n}\n"
        },
        {
          "name": "flake.nix",
          "type": "blob",
          "size": 1.2001953125,
          "content": "{\n  description = \"GPAC Multimedia Open Source Project\";\n  inputs =  {\n    nixpkgs.url = \"github:NixOS/nixpkgs/nixos-unstable\";\n  };\n  outputs = { self, nixpkgs }@inputs: \n  let\n    pkgs = nixpkgs.legacyPackages.x86_64-linux;\n    buildInputs = with pkgs; [ \n      zlib \n      git\n      freetype \n      libjpeg_turbo \n      libpng \n      libmad \n      faad2 \n      libogg \n      libvorbis \n      libtheora\n      a52dec\n      ffmpeg\n      xorg.libX11\n      xorg.libXv\n      xorg.xorgproto\n      mesa\n      xvidcore\n      openssl\n      alsa-lib\n      jack2\n      pulseaudio\n      SDL2\n      mesa-demos\n    ];\n    nativeBuildInputs = with pkgs; [ pkg-config ];\n in\n  with pkgs; {  \n    devShells.x86_64-linux.default = mkShell {\n        inherit buildInputs nativeBuildInputs;\n    };\n    packages.x86_64-linux.default =  with import nixpkgs { system = \"x86_64-linux\"; };\n      stdenv.mkDerivation {\n        name = \"gpac\";\n        src = self;\n        inherit buildInputs nativeBuildInputs;\n        configurePhase = ''\n          runHook preConfigure\n          ./configure --prefix=$out\n          runHook postConfigure\n        '';\n        buildPhase = \"make -j $NIX_BUILD_CORES\";\n        installPhase = \"make install\";\n      }; \n\n  };\n}\n"
        },
        {
          "name": "generate_installer.bat",
          "type": "blob",
          "size": 3.73828125,
          "content": "@echo off\nset OLDDIR=%CD%\ncd /d %~dp0\nREM ============================================\necho *** Generating a Windows GPAC installer ***\nREM ============================================\n\n\n:begin\nIF \"%1\"==\"win32\" GOTO next\nIF \"%1\"==\"x64\" GOTO next\necho You must specified target architecture : win32 or x64\nGOTO Abort\n\n:next\necho:\nREM ============================================\necho Check NSIS is in your PATH\nREM ============================================\n\n\nif \"%PROCESSOR_ARCHITECTURE%\" == \"AMD64\" (\n    setlocal enabledelayedexpansion\n    SET PRGROOT=!programfiles(x86^)!\n    setlocal disabledelayedexpansion\n)\nif \"%PROCESSOR_ARCHITECTURE%\" == \"x86\" (\n    setlocal enabledelayedexpansion\n    SET PRGROOT=!programfiles!\n    setlocal disabledelayedexpansion\n)\n\nset NSIS_EXEC=\"%PRGROOT%\\NSIS\\makensis.exe\"\nif not exist \"%PRGROOT%\\NSIS\\makensis.exe\" echo   NSIS couldn't be found at default location %NSIS_EXEC%\nif not exist \"%PRGROOT%\\NSIS\\makensis.exe\" goto Abort\necho   Found NSIS at default location %NSIS_EXEC%\n\n\necho:\nREM ============================================\necho Retrieving version/revision information\nREM ============================================\nif not exist include/gpac/revision.h echo   version couldn't be found - check include/gpac/revision.h exists\nif not exist include/gpac/revision.h goto Abort\n\nREM check if found a local commit which has not been pushed\nfor /f \"delims=\" %%a in ('git diff FETCH_HEAD') do @set diff=%%a\necho diff = %diff%\nif not \"%diff%\"==\"\" echo Local and remote revisions not in sync, consider pushing or pulling changes\n\nREM execute git and check if the result if found within revision.h\nfor /f \"delims=\" %%a in ('git describe --tags --long') do @set VERSION=%%a\nfor /f \"delims=\" %%a in ('git describe --tags --abbrev^=0') do @set TAG=%%a-\nfor /f \"delims=\" %%a in ('git rev-parse --abbrev-ref HEAD') do @set BRANCH=%%a\nREM remove anotated tag from VERSION\nsetlocal enabledelayedexpansion\ncall set VERSION=%%VERSION:!TAG!=%%\nsetlocal disabledelayedexpansion\nSET VarRevisionGIT=%VERSION%-%BRANCH%\nfor /f \"delims=\" %%i in ('type include\\gpac\\revision.h ^| findstr /i /r \"%VarRevisionGIT%\"') do Set VarRevisionBuild=%%i\necho VarRevisionBuild = %VarRevisionBuild%\necho VarRevisionGIT  = %VarRevisionGIT%\nif !\"%VarRevisionBuild%\"==!\"%VarRevisionGIT%\" echo   local revision and last build revision are not congruent - please consider rebuilding before generating an installer\nif !\"%VarRevisionBuild%\"==!\"%VarRevisionGIT%\" goto Abort\n\nmove packagers\\win32_64\\nsis\\default.out packagers\\win32_64\\nsis\\default.out_\necho Name \"GPAC Framework ${GPAC_VERSION} for %1 revision %VarRevisionGIT%\" > packagers\\win32_64\\nsis\\default.out\necho OutFile \"gpac-${GPAC_VERSION}-rev%VarRevisionGIT%-%1.exe\" >> packagers\\win32_64\\nsis\\default.out\nIF \"%1\"==\"x64\" echo !define IS_WIN64 >> packagers\\win32_64\\nsis\\default.out\n\necho:\nREM ============================================\necho Executing NSIS\nREM ============================================\ncall %NSIS_EXEC% packagers\\win32_64\\nsis\\gpac_installer.nsi\nIF %ERRORLEVEL% NEQ 0 GOTO Abort\n\n\necho:\nREM ============================================\necho Removing temporary files\nREM ============================================\nmove packagers\\win32_64\\nsis\\default.out_ packagers\\win32_64\\nsis\\default.out\n\n\necho:\nREM ============================================\necho Windows GPAC installer generated - goodbye!\nREM ============================================\nREM LeaveBatchSuccess\nset VarRevisionGIT=\nset VarRevisionBuild=\ncd /d %OLDDIR%\nexit/b 0\n\n:RevisionAbort\necho Local revision and remote revision are not congruent; you may have local commit\necho Please consider pushing your commit before generating an installer\n\n:Abort\necho:\necho  *** ABORTING: CHECK ERROR MESSAGES ABOVE ***\n\nREM LeaveBatchError\nset VarRevisionBuild=\ncd /d %OLDDIR%\nexit/b 1\n"
        },
        {
          "name": "gpac.spec",
          "type": "blob",
          "size": 2.880859375,
          "content": "# $Id: gpac.spec,v 1.5 2008-12-02 18:04:42 jeanlf Exp $\nSummary: Framework for production, encoding, delivery and interactive playback of multimedia content\nName: gpac\nVersion: 2.5-DEV\nRelease: 2.5-DEV\nLicense: LGPL\nGroup: Applications/Multimedia\nSource0: gpac-2.5-DEV.tar.gz\nURL: https://gpac.io/\nBuildRoot: %{_tmppath}/%{name}-root\nRequires: SDL\n%{!?_without_freetype:Requires: freetype}\n%{!?_without_faad:Requires: faad2}\n%{!?_without_jpeg:Requires: libjpeg-6b}\n%{!?_without_png:Requires: libpng}\n%{!?_without_mad:Requires: libmad}\n%{!?_without_xvid:Requires: xvidcore}\n%{!?_without_ffmpeg:Requires: ffmpeg}\n%{!?_without_jack:Requires: libjack}\nBuildRequires: SDL-devel\n%{!?_without_freetype:BuildRequires: freetype-devel}\n%{!?_without_faad:BuildRequires: faad2-devel}\n%{!?_without_jpeg:BuildRequires: libjpeg-devel}\n%{!?_without_png:BuildRequires: libpng-devel}\n%{!?_without_mad:BuildRequires: libmad-devel}\n%{!?_without_xvid:BuildRequires: xvidcore-devel}\n%{!?_without_ffmpeg:BuildRequires: ffmpeg-devel}\n%{!?_without_jack:BuildRequires: jack-audio-connection-kit}\n\n%global debug_package %{nil}\n\n%description\n\nGPAC is a framework for production, encoding, delivery and interactive playback of multimedia content.\n\nGPAC supports many AV codecs, multimedia containers (MP4,fMP4, TS, avi, mov, mpg, mkv ...), complex presentation formats (MPEG-4 Systems, SVG Tiny 1.2, VRML/X3D) and subtitles (SRT, WebVTT, TTXT/TX3G, TTML).\n\nSupported inputs and outputs are pipes, UDP/TCP/UN sockets, local files, HTTP, DASH/HLS, RTP/RTSP, MPEG-2 TS, ATSC 3.0 ROUTE sessions, desktop grabbing, camera/microphone inputs and any input format supported by FFmpeg.\n\nGPAC features a highly configurable media processing pipeline extensible through JavaScript, and can be embedded in Python or NodeJS applications.\n\nGPAC is licensed under the GNU Lesser General Public License.\n\n\nAvailable rpmbuild rebuild options :\n--without : freetype faad a52 jpeg png mad xvid ffmpeg jack\n\n\n%prep\n%setup -q -n gpac\n\n%build\n%configure     --enable-oss-audio     %{?_without_freetype: --disable-ft}     %{?_without_faad: --disable-faad}    %{?_without_jpeg: --disable-jpeg}     %{?_without_png: --disable-png}     %{?_without_mad: --disable-mad}     %{?_without_xvid: --disable-xvid}     %{?_without_ffmpeg: --disable-ffmpeg} %{?_without_jack: --disable-jack}\nmake\n\n%install\nrm -rf %{buildroot}\n%makeinstall\n\n%clean\nrm -rf %{buildroot}\n\n%post -p /sbin/ldconfig\n\n%postun -p /sbin/ldconfig\n\n\n%files\n%defattr(-, root, root)\n# %doc Changelog COPYING README.md\n%{_bindir}/*\n%{_libdir}/*\n%{_includedir}/*\n%{_datadir}/*\n\n%changelog\n* Fri Dec 16 2022 Jean Le Feuvre\n- GPAC 2.2 release\n* Fri Sep 4 2020 Jean Le Feuvre\n- GPAC 1.0 release\n* Fri Jul 3 2015 Jean Le Feuvre\n- Changed to README.md\n* Wed Feb 13 2008 Pierre Souchay\n- Added libjack\n* Wed Jul 13 2005 Jean Le Feuvre\n- Updated for GPAC LGPL release\n* Mon Aug 09 2004 Sverker Abrahamsson <sverker@abrahamsson.com>\n- Initial RPM release\n"
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "manifest.rc",
          "type": "blob",
          "size": 0.0361328125,
          "content": "1 24 \"build/msvc14/gpac_manifest.xml\""
        },
        {
          "name": "mkdmg.sh",
          "type": "blob",
          "size": 4.2919921875,
          "content": "#!/bin/sh -e\n\nsource_path=.\n\nfunction rewrite_deps {\n# echo rewriting deps for $1\nfor ref in `otool -L $1 | grep '/local' | awk '{print $1}'`\ndo\n# echo changing $ref to @executable_path/lib/`basename $ref` $1\n  install_name_tool -change $ref @executable_path/lib/`basename $ref` $1 || { echo \"Failed, permissions issue for $1 ? Try with sudo...\" ; exit 1 ;}\n  copy_lib $ref\ndone\n\n}\n\nfunction copy_lib {\n# echo testing $1 for bundle copy\nbasefile=`basename $1`\nif [ ! $basefile == 'libgpac.dylib' ] &&  [ ! -e lib/$basefile ];\nthen\n#  echo copying $1 to bundle\n  cp $1 lib/\n  chmod +w lib/$basefile\n  rewrite_deps lib/$basefile\nfi\n}\n\n#copy all libs\necho Copying binaries\nif [ -d tmpdmg ]\nthen\nrm -fr tmpdmg\nfi\nmkdir -p tmpdmg/GPAC.app\nrsync -r --exclude=.git $source_path/packagers/osx/GPAC.app/ ./tmpdmg/GPAC.app/\nln -s /Applications ./tmpdmg/Applications\ncp $source_path/README.md ./tmpdmg\ncp $source_path/COPYING ./tmpdmg\n\nmkdir -p tmpdmg/GPAC.app/Contents/MacOS/modules\nmkdir -p tmpdmg/GPAC.app/Contents/MacOS/lib\n\ncp bin/gcc/gm* tmpdmg/GPAC.app/Contents/MacOS/modules\ncp bin/gcc/gf_* tmpdmg/GPAC.app/Contents/MacOS/modules\ncp bin/gcc/libgpac.dylib tmpdmg/GPAC.app/Contents/MacOS/lib\nif [ -f bin/gcc/libopenhevc.1.dylib ]; then\n    cp bin/gcc/libopenhevc.1.dylib tmpdmg/GPAC.app/Contents/MacOS/lib\nfi\ncp bin/gcc/MP4Box tmpdmg/GPAC.app/Contents/MacOS/MP4Box\ncp bin/gcc/gpac tmpdmg/GPAC.app/Contents/MacOS/gpac\n\ncd tmpdmg/GPAC.app/Contents/MacOS/\n\n#check all external deps, and copy them\necho rewriting DYLIB dependencies\nfor dylib in lib/*.dylib modules/*.dylib\ndo\n  rewrite_deps $dylib\ndone\n\necho rewriting APPS dependencies\ninstall_name_tool -change /usr/local/lib/libgpac.dylib @executable_path/lib/libgpac.dylib MP4Box\ninstall_name_tool -change /usr/local/lib/libgpac.dylib @executable_path/lib/libgpac.dylib gpac\ninstall_name_tool -change ../bin/gcc/libgpac.dylib @executable_path/lib/libgpac.dylib MP4Box\ninstall_name_tool -change ../bin/gcc/libgpac.dylib @executable_path/lib/libgpac.dylib gpac\n\ncd ../../../..\n\necho Copying shared resources\nrsync -r --exclude=.git $source_path/share/res ./tmpdmg/GPAC.app/Contents/MacOS/share/\nrsync -r --exclude=.git $source_path/share/gui ./tmpdmg/GPAC.app/Contents/MacOS/share/\nrsync -r --exclude=.git $source_path/share/vis ./tmpdmg/GPAC.app/Contents/MacOS/share/\nrsync -r --exclude=.git $source_path/share/shaders ./tmpdmg/GPAC.app/Contents/MacOS/share/\nrsync -r --exclude=.git $source_path/share/scripts ./tmpdmg/GPAC.app/Contents/MacOS/share/\nrsync -r --exclude=.git $source_path/share/python ./tmpdmg/GPAC.app/Contents/MacOS/share/\ncp $source_path/share/default.cfg ./tmpdmg/GPAC.app/Contents/MacOS/share/\n\necho Building DMG\nversion=`grep '#define GPAC_VERSION ' $source_path/include/gpac/version.h | cut -d '\"' -f 2`\n\ncur_dir=`pwd`\ncd $source_path\nTAG=$(git describe --tags --abbrev=0 2> /dev/null)\nREVISION=$(echo `git describe --tags --long 2> /dev/null || echo \"UNKNOWN\"` | sed \"s/^$TAG-//\")\nBRANCH=$(git rev-parse --abbrev-ref HEAD 2> /dev/null || echo \"UNKNOWN\")\nrev=\"$REVISION-$BRANCH\"\ncd $cur_dir\n\nfull_version=$version\nif [ \"$rev\" != \"\" ]\nthen\n\tfull_version=\"$full_version-rev$rev\"\nelse\n\t#if no revision can be extracted, use date\n   \trev = $(date +%Y%m%d)\nfi\n\nsed 's/<string>.*<\\/string><!-- VERSION_REV_REPLACE -->/<string>'\"$version\"'<\\/string>/' tmpdmg/GPAC.app/Contents/Info.plist > tmpdmg/GPAC.app/Contents/Info.plist.new && sed 's/<string>.*<\\/string><!-- BUILD_REV_REPLACE -->/<string>'\"$rev\"'<\\/string>/' tmpdmg/GPAC.app/Contents/Info.plist.new > tmpdmg/GPAC.app/Contents/Info.plist && rm tmpdmg/GPAC.app/Contents/Info.plist.new\n\n#GPAC.app now ready, build pkg\necho \"Building PKG\"\nfind ./tmpdmg/ -name '*.DS_Store' -type f -delete\nchmod -R 755 ./tmpdmg/\nxattr -rc ./tmpdmg/\n\npkgbuild --install-location /Applications --component ./tmpdmg/GPAC.app --scripts ./packagers/osx/scripts --ownership preserve ./tmppkg.pkg\ncat ./packagers/osx/res/preamble.txt > ./packagers/osx/res/full_license.txt\ncat ./COPYING >> ./packagers/osx/res/full_license.txt\n\nproductbuild --distribution packagers/osx/distribution.xml --resources ./packagers/osx/res --package-path ./tmppkg.pkg gpac.pkg\n\nrm ./packagers/osx/res/full_license.txt\n\npck_name=\"gpac-$full_version.pkg\"\nif [ \"$1\" = \"snow-leopard\" ]; then\npck_name=\"gpac-$full_version-$1.pkg\"\nfi\nmv gpac.pkg $pck_name\nchmod 755 $pck_name\n\necho \"$pck_name ready\"\nrm -rf tmpdmg\nrm -rf tmppkg.pkg\n\n\n"
        },
        {
          "name": "modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "packagers",
          "type": "tree",
          "content": null
        },
        {
          "name": "run_configure.sh",
          "type": "blob",
          "size": 0.724609375,
          "content": "#!/bin/bash\n#\n# calls ./configure and prints out build dependency for platform\n#\n# Shell-script based on code suplied in [1]\n#     [1] Guide du nouveau responsable Debian. Copyright © 1998-2002 Josip Rodin\n\nstrace -f -o /tmp/log ./configure\necho \"\"\necho \"\"\necho \"GPAC Build dependency for your platform\"\n       for x in `dpkg -S $(grep open /tmp/log|\\\n                           perl -pe 's!.* open\\(\\\"([^\\\"]*).*!$1!' |\\\n                           grep \"^/\"| sort | uniq|\\\n                           grep -v \"^\\(/tmp\\|/dev\\|/proc\\)\" ) 2>/dev/null|\\\n                           cut -f1 -d\":\"| sort | uniq`; \\\n             do \\\n               echo -n \"$x (>=\" `dpkg -s $x|grep ^Version|cut -f2 -d\":\"` \"), \"; \\\n             done\necho \"\"\necho \"\"\n"
        },
        {
          "name": "share",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "static.mak",
          "type": "blob",
          "size": 3.4033203125,
          "content": "\nLINKLIBS=\n\n#1 - zlib support\nifneq ($(CONFIG_ZLIB),no)\nCFLAGS+=$(zlib_cflags)\nLINKLIBS+=$(zlib_ldflags)\nendif\n\n#2 - ssl support\nifneq ($(HAS_OPENSSL),no)\nCFLAGS+=$(ssl_cflags)\nLINKLIBS+=$(ssl_ldflags)\nendif\n\n## libgpac compositor compilation options\nCOMPOSITOR_CFLAGS=\n\n## Add prefix before every lib\nifneq ($(prefix),/usr/local)\nifneq ($(prefix),/usr)\nEXTRALIBS+=-L$(prefix)/lib\nendif\nendif\n\n## OpenGL available\nifeq ($(HAS_OPENGL),yes)\nEXTRALIBS+= $(OGL_LIBS)\nCOMPOSITOR_CFLAGS+=$(OGL_INCLS)\nendif\n\nEXTRALIBS+=$(LINKLIBS)\n\nifeq ($(GPAC_USE_TINYGL),yes)\nCOMPOSITOR_CFLAGS+=-I\"$(SRC_PATH)/../TinyGL/include\"\nelse\nifneq ($(CONFIG_EMSCRIPTEN),yes)\nCOMPOSITOR_CFLAGS+=-DGPAC_HAS_GLU\nendif\nendif\n\n\n## libgpac media tools compilation options\nifeq ($(GPACREADONLY),yes)\nMEDIATOOLS_CFLAGS=-DGPAC_READ_ONLY\nendif\n\n\nifeq ($(STATIC_BINARY),yes)\nCFLAGS+= -DGPAC_MP4BOX_MINI\nendif\n\n\nifeq ($(STATIC_BUILD),yes)\nLINKFLAGS+=$(zlib_ldflags) $(opensvc_ldflags) $(ssl_ldflags) $(jpeg_ldflags) $(openjpeg_ldflags) $(png_ldflags) $(mad_ldflags) $(a52_ldflags) $(xvid_ldflags) $(faad_ldflags)\nLINKFLAGS+=$(ffmpeg_ldflags) $(ogg_ldflags) $(vorbis_ldflags) $(theora_ldflags) $(nghttp2_ldflags) $(vtb_ldflags) $(caption_ldflags) $(mpeghdec_ldflags) $(curl_ldflags)\nendif\n\n\n## static modules\n\n# configure static modules\nifeq ($(STATIC_MODULES),yes)\n\nCFLAGS+= -DGPAC_STATIC_MODULES\n\nifeq ($(CONFIG_ALSA),yes)\nOBJS+=../modules/alsa/alsa.o\nCFLAGS+=-DGPAC_HAS_ALSA\nEXTRALIBS+= -lasound\nendif\n\nOBJS+=../modules/validator/validator.o\n\nifneq ($(CONFIG_FT),no)\nOBJS+=../modules/ft_font/ft_font.o\nEXTRALIBS+= $(freetype_ldflags)\nCFLAGS+=-DGPAC_HAS_FREETYPE $(freetype_cflags)\nendif\n\nifeq ($(CONFIG_SDL),yes)\nCFLAGS+=-DGPAC_HAS_SDL $(sdl_cflags)\nEXTRALIBS+= $(sdl_ldflags)\nOBJS+=../modules/sdl_out/sdl_out.o ../modules/sdl_out/audio.o ../modules/sdl_out/video.o\nendif\n\nifeq ($(CONFIG_CACA),yes)\nCFLAGS+= $(libcaca_cflags)\nEXTRALIBS+= $(libcaca_ldflags)\nOBJS+=../modules/caca_out/caca_out.o\nendif\n\nifeq ($(CONFIG_X11),yes)\nOBJS+= ../modules/x11_out/x11_out.o\nCFLAGS+=-DGPAC_HAS_X11\nifneq ($(X11_INC_PATH),)\nCFLAGS+=-I$(X11_INC_PATH)\nendif\n\nifneq ($(X11_LIB_PATH),)\nEXTRALIBS+=-L$(X11_LIB_PATH)\nendif\nEXTRALIBS+=-lX11\n\nifeq ($(USE_X11_XV),yes)\nCFLAGS+=-DGPAC_HAS_X11_XV\nEXTRALIBS+=-lXv\nendif\n\nifeq ($(USE_X11_XV),yes)\nCFLAGS+=-DGPAC_HAS_X11_XV\nEXTRALIBS+=-lXv\nendif\n\nifeq ($(USE_X11_SHM),yes)\nCFLAGS+=-DGPAC_HAS_X11_SHM\nEXTRALIBS+=-lXext\nendif\n\nifeq ($(HAS_OPENGL),yes)\nifeq ($(CONFIG_DARWIN),yes)\n#EXTRALIBS+=-lGL -lGLU\nendif\nendif\n\n#end of x11\nendif\n\n\nifeq ($(CONFIG_JACK),yes)\nOBJS+= ../modules/jack/jack.o\nCFLAGS+=-DGPAC_HAS_JACK\nEXTRALIBS+=-ljack\nendif\n\nifeq ($(CONFIG_PULSEAUDIO),yes)\nOBJS+= ../modules/pulseaudio/pulseaudio.o\nCFLAGS+=-DGPAC_HAS_PULSEAUDIO\nEXTRALIBS+=-lpulse -lpulse-simple\nendif\n\n\nifeq ($(CONFIG_DIRECTFB),yes)\nOBJS+= ../modules/directfb_out/directfb_out.o ../modules/directfb_out/directfb_wrapper.o\nCFLAGS+=-DGPAC_HAS_DIRECTFB -I$(DIRECTFB_INC_PATH)\nEXTRALIBS+=$(DIRECTFB_LIB)\nendif\n\nifeq ($(CONFIG_WIN32),yes)\nOBJS+= ../modules/wav_out/wav_out.o\nEXTRALIBS+=-DGPAC_HAS_WAVEOUT -DDISABLE_WAVE_EX\nendif\n\nifeq ($(CONFIG_DIRECTX),yes)\nOBJS+= ../modules/dx_hw/dx_audio.o ../modules/dx_hw/dx_video.o ../modules/dx_hw/dx_window.o ../modules/dx_hw/dx_2d.o\nCFLAGS+=-DGPAC_HAS_DIRECTX -DDIRECTSOUND_VERSION=0x0500\nifneq ($(DX_PATH),system)\nEXTRALIBS+=-L$(DX_PATH)/lib\nCFLAGS+= -I$(DX_PATH)/include\nendif\nEXTRALIBS+=-ldsound -ldxguid -lddraw -lole32 -lgdi32 -lopengl32\nendif\n\n\n\n#end of static modules\nendif\n"
        },
        {
          "name": "testsuite",
          "type": "commit",
          "content": null
        },
        {
          "name": "unittests",
          "type": "tree",
          "content": null
        },
        {
          "name": "version.bat",
          "type": "blob",
          "size": 1.044921875,
          "content": "@echo off\nset OLDDIR=%CD%\ncd /d %~dp0\n\nIF NOT EXIST .\\.git\\NUL GOTO not_git\n\nfor /f \"delims=\" %%a in ('git describe --tags --long') do @set VERSION=%%a\nfor /f \"delims=\" %%a in ('git describe --tags --abbrev^=0') do @set TAG=%%a-\nfor /f \"delims=\" %%a in ('git rev-parse --abbrev-ref HEAD') do @set BRANCH=%%a\nREM remove anotated tag from VERSION\nsetlocal enabledelayedexpansion\ncall set VERSION=%%VERSION:!TAG!=%%\nsetlocal disabledelayedexpansion\necho #define GPAC_GIT_REVISION \"%VERSION%-%BRANCH%\" > test.h\n\n:write_file\nif not exist include\\gpac\\revision.h goto create\nECHO n|COMP test.h include\\gpac\\revision.h > nul\nif errorlevel 1 goto create\nDEL test.h\ngoto done\n\n:create\nMOVE /Y test.h include\\gpac\\revision.h\ngoto done\n\n:not_git\necho \"not a git dir\"\nfind /c \"-DEV\" include\\gpac\\version.h >nul \nif %errorlevel% equ 1 goto rel_tag\necho \"unknwon tag\"\n@echo off\necho #define GPAC_GIT_REVISION \"UNKNOWN_REV\" > test.h\ngoto write_file\n\n:rel_tag\necho \"release tag\"\n@echo off\necho #define GPAC_GIT_REVISION \"release\" > test.h\ngoto write_file\n\n\n:done\ncd /d %OLDDIR%\nexit/b\n\n"
        }
      ]
    }
  ]
}