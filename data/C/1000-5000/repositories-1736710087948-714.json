{
  "metadata": {
    "timestamp": 1736710087948,
    "page": 714,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "cossacklabs/themis",
      "stars": 1887,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 1.2939453125,
          "content": "ï»¿---\nBasedOnStyle: LLVM\nAccessModifierOffset: -4\nAlignEscapedNewlines: Left\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: false\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakTemplateDeclarations: true\nBinPackArguments: false\nBinPackParameters: false\nBreakBeforeBinaryOperators: NonAssignment\nBreakBeforeBraces: Linux\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: true\nBreakStringLiterals: false\nColumnLimit: 100\nIncludeBlocks: Preserve\nIncludeCategories:\n  - Regex:      '^<([^/]+|(sys|arpa)/.+)>$'\n    Priority:   1\n  - Regex:      '^<soter/.+>$'\n    Priority:   2\n  - Regex:      '^<(themis|themispp|jsthemis)/.+>$'\n    Priority:   3\n  - Regex:      '^<.+>$'\n    Priority:   4\n  - Regex:      '^\"soter/.+\"$'\n    Priority:   5\n  - Regex:      '^\"(themis|themispp|jsthemis)/.+\"$'\n    Priority:   6\n  - Regex:      '^\".+\"$'\n    Priority:   7\nIndentWidth: 4\nObjCSpaceAfterProperty: true\nPenaltyBreakAssignment: 100\nPenaltyBreakBeforeFirstCallParameter: 1000\nPenaltyBreakComment: 10000\nPenaltyReturnTypeOnItsOwnLine: 10000\nPenaltyExcessCharacter: 4\nPointerAlignment: Left\nReflowComments: false\nStandard: Auto\nTabWidth: 8\nUseTab: Never\n...\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 0.34765625,
          "content": "---\nChecks: 'bugprone-*,cppcoreguidelines-*,clang-analyzer-*,misc-*,performance-*,portability-*,readability-*,-readability-implicit-bool-conversion,-readability-isolate-declaration,-*-magic-numbers,-cppcoreguidelines-pro-type-vararg'\nFormatStyle: none\nCheckOptions:\n  - key: cppcoreguidelines-special-member-functions.AllowSoleDefaultDtor\n    value: 1\n...\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.408203125,
          "content": "libs/**\nbuild/**\ntests/tools/splint/splbin/**\ntests/tools/splint/source/**\ntests/tools/splint/source/src/.deps/**\n**.o\n**.a\n**.so\n**.**~\n**.**#\nstatic_analysis.txt\n\n\n# iOS and OSX\n.DS_Store\n\n# TextMate noise\n*.tm_build_errors\n\n# Xcode noise, after https://github.com/github/gitignore/blob/master/Objective-C.gitignore\n# http://stackoverflow.com/a/12021580\n*.pbxuser\n!default.pbxuser\n*.mode1v3\n!default.mode1v3\n*.mode2v3\n!default.mode2v3\n*.perspectivev3\n!default.perspectivev3\nxcuserdata\n*.moved-aside\n*~.nib\n*.swp\n*.xcworkspacedata\n\n# additional rules\nDerivedData/\n.idea/\nbuild\n.gradle\nsrc/wrappers/themis/react-native-themis/ios/themis.xcframework/*\n\n\n# python rules\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\nsrc/wrappers/themis/python/dist\nsrc/wrappers/themis/python/files3.txt\nsrc/wrappers/themis/python/pythemis.egg-info\n\ntests/phpthemis/vendor\ntests/phpthemis/composer.json\ntests/phpthemis/composer.phar\ntests/phpthemis/composer.lock\n\n# Android build system\nsrc/wrappers/themis/android/.externalNativeBuild\nthird_party/boringssl/.externalNativeBuild\n\n# php\n\n*.lai\n*.la\n*.lo\n\n# ios\ndocs/examples/swift/iOS-CocoaPods/Pods\ndocs/examples/objc/iOS-CocoaPods/Pods\n\n# Carthage\nCarthage/\ndocs/examples/swift/iOS-Carthage/Carthage\ndocs/examples/objc/iOS-Carthage/Carthage\n\n\n# rust\n/target\n/src/wrappers/themis/rust/target\n**/*.rs.bk\nCargo.lock\n\n# ruby\n/src/wrappers/themis/ruby/*.gem\n\n# vscode\n.settings\n.project\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.123046875,
          "content": "[submodule \"third_party/boringssl/src\"]\n\tpath = third_party/boringssl/src\n\turl = https://boringssl.googlesource.com/boringssl\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.15625,
          "content": "language: objective-c\nxcode_workspace: docs/examples/objc/ThemisTest.xcworkspace\nxcode_scheme: ThemisTest\nosx_image: xcode8\npodfile: docs/examples/objc/Podfile\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 120.0830078125,
          "content": "# Themis ChangeLog\n\n## Unreleased\n\nChanges that are currently in development and have not been released yet.\n\n## [0.15.1](https://github.com/cossacklabs/themis/releases/tag/0.15.1), September 13 2023\n\n### Swift, Objective-C wrappers \n- Updated OpenSSL to 1.1.1v \n- Removed support of 32-bit platforms \n- Minimum iOS: 11, macOS: 10.13, Catalyst: 14 \n\n## [0.15.0](https://github.com/cossacklabs/themis/releases/tag/0.15.0), June 21st 2023\n\n**TL;DR:**\n\n- Uncompressed EC public keys are now supported.\n- Increased PBKDF2 iteration count from 200000 to 314110 for Secure Cell passphrase mode.\n- OpenSSL 3.0 is now supported.\n- Pythemis now uses `pyproject.toml`.\n- And as usual: enhanced security measures and fixed bugs.\n\n**Breaking changes and deprecations:**\n- AndroidThemis build requires Gradle 7.3, Android SDK 11, Android NDK 25.\n- Some Soter functions are deprecated.\n- Node.js 8 is no longer supported.\n- Rust `SecureSessionTransport` implementations are now `Send`.\n- Rust 1.58 is now the minimum supported version.\n\n_Code:_\n\n- **Core**\n\n  - Uncompressed EC public keys are now supported ([#959](https://github.com/cossacklabs/themis/pull/959), [#954](https://github.com/cossacklabs/themis/pull/954))\n  - Themis will generate uncompressed EC public keys when `THEMIS_GEN_EC_KEY_PAIR_UNCOMPRESSED=1` environment variable is set ([#959](https://github.com/cossacklabs/themis/pull/959))\n  - Increased PBKDF2 iteration count to maintain security of Secure Cell passphrase mode ([#976](https://github.com/cossacklabs/themis/pull/976)).\n  - Bumped embedded BoringSSL to the latest version ([#1004](https://github.com/cossacklabs/themis/pull/1004)).\n\n  - **Soter** (low-level security core used by Themis)\n\n    - `soter_sign_export_key()` is now deprecated, superseded by `soter_sign_export_private_key()` and `soter_sign_export_public_key()` ([#959](https://github.com/cossacklabs/themis/pull/959))\n    - better OpenSSL 3 support, with many EC- and RSA-related deprecated functions being replaced with newer alternatives, and OpenSSL 1.X is still supported\n    - removed build option THEMIS_EXPERIMENTAL_OPENSSL_3_SUPPORT since building/linking with OpenSSL 3 now works out of the box\n\n- **Android**\n\n  - AndroidThemis build from source now requires Gradle 7.3, Android SDK 11, Android NDK 25 ([#942](https://github.com/cossacklabs/themis/pull/942)).\n\n- **Node.js**\n\n  - Node.js v8 is no longer supported ([#901](https://github.com/cossacklabs/themis/pull/901)).\n  - Fixed bug that leads to segfauls if key pair generation fails ([#999](https://github.com/cossacklabs/themis/pull/999))\n\n- **Python**\n\n  - `pythemis.scomparator` and `pythemis.skeygen` are now imported with `from pythemis import *` ([#914](https://github.com/cossacklabs/themis/pull/914)).\n  - Pythemis supports `pyproject.toml` as a main way of building packages. The old `setup.py` is preserved for backwards compatibility ([#1006](https://github.com/cossacklabs/themis/pull/1006)).\n\n  - New installation methods, accessible with make ([#1023](https://github.com/cossacklabs/themis/pull/1023), [#1042](https://github.com/cossacklabs/themis/pull/1042)).\n    - install package into virtualenv\n    - create/install `.deb` or `.rpm` package for system-wide installation\n\n- **Ruby**\n\n  - Improved compatibility with non-standard installations on Apple M1 ([#917](https://github.com/cossacklabs/themis/pull/917)).\n\n- **Rust**\n\n  - `SecureSessionTransport` implementations are now required to be `Send` ([#898](https://github.com/cossacklabs/themis/pull/898)).\n\n    This is technically a breaking change, but most reasonble implementations should be `Send` already. Please raise an issue if your code fails to build.\n\n  - Minimum supported Rust version is now 1.60 ([#977](https://github.com/cossacklabs/themis/pull/977), [#984](https://github.com/cossacklabs/themis/pull/984), [#1039](https://github.com/cossacklabs/themis/pull/1039)).\n\n- **WasmThemis**\n\n  - Updated required `emsdk` version to 3.1.47 ([#1036](https://github.com/cossacklabs/themis/pull/1036)).\n  - WasmThemis now works with Node v18 and v20 ([#1036](https://github.com/cossacklabs/themis/pull/1036)).\n\n- **WebAssembly**\n\n  - Node.js v8 is no longer supported ([#901](https://github.com/cossacklabs/themis/pull/901)).\n\n\n## [0.14.10](https://github.com/cossacklabs/themis/releases/tag/0.14.10), Nov 3rd 2022\n\n### React Native Themis\n\n- Redesigned the framework to make it less vulnerable to native exceptions ([#955](https://github.com/cossacklabs/themis/pull/955)).\n\n- Updates for react native examples. ([#956](https://github.com/cossacklabs/themis/pull/956)).\n\n### PyThemis\n\n- Improved compatibility with non-Homebrew Python installations on Apple M1 ([#915](https://github.com/cossacklabs/themis/pull/915)).\n\n\n## [0.14.9](https://github.com/cossacklabs/themis/releases/tag/0.14.9), Sep 12th 2022\n\n### Hotfix for macOS Themis installed via SPM\n\n- Fixing the code signing issue for macOS Themis installation via SPM ([#944](https://github.com/cossacklabs/themis/pull/944/)).\n\n\n\n\n## [0.14.8](https://github.com/cossacklabs/themis/releases/tag/0.14.8), Aug 22th 2022\n\n### WASM Themis\n\n- Rebuild wasm-themis with optimization flag to make package smaller again.\n([938](https://github.com/cossacklabs/themis/pull/938/)).\n\n\n## [0.14.7](https://github.com/cossacklabs/themis/releases/tag/0.14.7), Aug 12th 2022\n\n### React Native Themis\n\n**Upgrade packages versions for security reasons in React Native Themis package.json\n([934](https://github.com/cossacklabs/themis/pull/934/)).**\n\n**Resolve the issue in React Native Themis to support Javascript exceptions\n([930](https://github.com/cossacklabs/themis/pull/930/))**\n\n- Define additional checks to generate Javascript exceptions in case of empty required parameters.\n\n### WASM Themis\n\n**Fix the bug with encryption of large files\n([933](https://github.com/cossacklabs/themis/pull/933/)).**\n\n- Added option to build WASM file.\n\n\n## [0.14.6](https://github.com/cossacklabs/themis/releases/tag/0.14.6), May 24th 2022\n\n**Reduce WasmThemis binary size x3, by increasing the compiler optimization level for WasmThemis build ([919](https://github.com/cossacklabs/themis/pull/919/)).**\n\n## [0.14.5](https://github.com/cossacklabs/themis/releases/tag/0.14.5), April 14th 2022\n\n**Typescript compatibility issues in WasmThemis**\n\n- Improved SecureCell Seal in WasmThemis. Added optional context parameters to SecureCell Seal mode instead of using arguments in methods `encrypt()` and `decrypt()` to make compilers happy ([#909]).\n\n[#909]: https://github.com/cossacklabs/themis/pull/909\n\n## [0.14.4](https://github.com/cossacklabs/themis/releases/tag/0.14.4), March 15th 2022 / April 05th 2022\n\n**React Native Support**\n\n- Added React Native Themis with Typescript support ([#902], [#903], [#905], [#906]).\n\n  [`react-native-themis`](https://www.npmjs.com/package/react-native-themis) is now available on npm! ð\n\n      npm install react-native-themis\n\n  [Read more about React Native support](https://docs.cossacklabs.com/themis/languages/react-native/).\n\n[#902]: https://github.com/cossacklabs/themis/pull/902\n[#903]: https://github.com/cossacklabs/themis/pull/903\n[#905]: https://github.com/cossacklabs/themis/pull/905\n[#906]: https://github.com/cossacklabs/themis/pull/906\n\n\n## [0.14.0](https://github.com/cossacklabs/themis/releases/tag/0.14.0), December 24th 2021\n\n**TL;DR:**\n\n- JavaThemis for Android has moved to Maven Central ([read more](#0.14-maven-central)).\n- JavaThemis for Java is available on Maven Central ([read more](#0.14-maven-central)).\n- Themis is now available via Swift Package Manager ([read more](https://docs.cossacklabs.com/themis/languages/swift/installation/#installing-with-spm))\n- Themis for iOS and macOS is also available as XCFramework, attached to the release.\n- TypeScript definitions and ES6 module are now available for WasmThemis ([read more](#0.14-typescript)).\n- Node.js v16 is now supported.\n- [Overhaul of documentation once again](https://docs.cossacklabs.com/themis/).\n- New Themis Core packages with BoringSSL â `libthemis-boringssl`.\n- OpenSSL 3.0 support is work-in-progress, but not ready yet ([read more](https://github.com/cossacklabs/themis/issues/873)).\n- And as usual: more security hardening, fewer known bugs.\n\n**Breaking changes and deprecations:**\n\n- Themis Core: private C header files are no longer installed.\n- GoThemis: `ErrOverflow` is now deprecated.\n- Rust: `themis` now requires Rust 1.47 or newer.\n- Rust: `libthemis-src` is no longer supported.\n- Installing Themis via Carthage now requires Carthage 0.38 or newer ([read more](#0.13.9-carthage-0.38)).\n- Deprecated CocoaPods subspecs `themis/themis-openssl` and `themis/themis-boringssl` have been removed ([read more](#0.13.10-subspecs))\n- Themis Server (Themis Interactive Simulator) is no longer supported ([read more](https://docs.cossacklabs.com/themis/debugging/themis-server/).\n\n_Code:_\n\n- **Core**\n\n  - Include embedded BoringSSL into Soter for convenience ([#681](https://github.com/cossacklabs/themis/pull/681), [#702](https://github.com/cossacklabs/themis/pull/702)).\n  - `make deb` and `make rpm` with `ENGINE=boringssl` will now produce `libthemis-boringssl` packages with embedded BoringSSL ([#683](https://github.com/cossacklabs/themis/pull/683), [#686](https://github.com/cossacklabs/themis/pull/686)).\n  - `secure_session_create()` now allows only EC keys, returning an error for RSA ([#693](https://github.com/cossacklabs/themis/pull/693)).\n  - Cleaned up unused private API. Thanks to [**@luismerino**](https://github.com/luismerino) for pointing this out ([#714](https://github.com/cossacklabs/themis/pull/714)).\n  - Cleaned up public header files and API of Themis and Soter ([#759](https://github.com/cossacklabs/themis/pull/759)).\n\n    Private header files are no longer installed. Private APIs which have been unintentially exported are no longer available. This might be a **breaking change** for those who have used them. Please refrain from using private API and include only public API:\n\n    ```c\n    #include <themis/themis.h>\n    ```\n\n    Users of official high-level wrappers are not affected. However, this might affect developers of third-party wrappers. Refer to the detailed description below for a list of removed headers.\n\n    <details>\n\n    The following Soter headers are no longer available:\n\n      - `<soter/soter_container.h>`\n      - `<soter/soter_crc32.h>`\n      - `<soter/soter_ec_key.h>`\n      - `<soter/soter_portable_endian.h>`\n      - `<soter/soter_rsa_key.h>`\n      - `<soter/soter_sign_ecdsa.h>`\n      - `<soter/soter_sign_rsa.h>`\n      - `<soter/soter_t.h>`\n\n    All APIs previously exported by them are no longer available as well.\n\n    The following Themis headers are no longer available:\n\n      - `<themis/secure_cell_alg.h>`\n      - `<themis/secure_cell_seal_passphrase.h>`\n      - `<themis/secure_comparator_t.h>`\n      - `<themis/secure_message_wrapper.h>`\n      - `<themis/secure_session_peer.h>`\n      - `<themis/secure_session_t.h>`\n      - `<themis/secure_session_utils.h>`\n      - `<themis/sym_enc_message.h>`\n      - `<themis/themis_portable_endian.h>`\n\n    All APIs previously exported by them are no longer available as well.\n\n    In addition to that, the following private symbols and definitions previously exported by `<themis/secure_session.h>` have been hidden:\n\n      - `THEMIS_SESSION_ID_TAG`\n      - `THEMIS_SESSION_PROTO_TAG`\n      - `SESSION_MASTER_KEY_LENGTH`\n      - `SESSION_MESSAGE_KEY_LENGTH`\n      - `struct secure_session_peer_type`\n      - `typedef secure_session_peer_t`\n      - `typedef secure_session_handler`\n      - `secure_session_peer_init()`\n      - `secure_session_peer_cleanup()`\n\n    </details>\n\n  - Fixed multiple buffer overflows in Secure Message ([#763](https://github.com/cossacklabs/themis/pull/763)).\n  - Fixed cross-compilation on macOS by setting `ARCH` and `SDK` variables ([#849](https://github.com/cossacklabs/themis/pull/849)).\n  - Updated embedded BoringSSL to the latest version ([#812](https://github.com/cossacklabs/themis/pull/812)).\n  - Builds with OpenSSL 3.0 will result in a compilation error for the time being ([#872](https://github.com/cossacklabs/themis/pull/872)).\n  - Hardened EC/RSA key generation and handling in Secure Message and Secure Session ([#875](https://github.com/cossacklabs/themis/pull/875), [#876](https://github.com/cossacklabs/themis/pull/876))\n\n- **Android**\n\n  - Example project moved to the main repository â [`docs/examples/android`](docs/examples/android) ([#813](https://github.com/cossacklabs/themis/pull/813)).\n  - Example project is now written in Kotlin ([#813](https://github.com/cossacklabs/themis/pull/813)).\n  - Updated embedded BoringSSL to the latest version ([#812](https://github.com/cossacklabs/themis/pull/812)).\n\n- **C++**\n\n  - `themispp::secure_message_t::sign()` output is a bit smaller now ([#775](https://github.com/cossacklabs/themis/pull/775)).\n\n- **Go**\n\n  - Error `ErrOverflow` is now deprecated in favor of `ErrOutOfMemory`, new error types were added ([#711](https://github.com/cossacklabs/themis/pull/711)).\n  - `SecureMessage.Sign()` output is a bit smaller now ([#775](https://github.com/cossacklabs/themis/pull/775)).\n\n- **Java / Kotlin**\n\n  - `SecureMessage#sign()` output is a bit smaller now ([#777](https://github.com/cossacklabs/themis/pull/777)).\n  - <a id=\"0.14-maven-central\">JavaThemis for Android and desktop Java is now published in the Maven Central repository</a> ([#786](https://github.com/cossacklabs/themis/pull/786), [#788](https://github.com/cossacklabs/themis/pull/788)).\n\n    Add the Maven Central repository to your `build.gradle`:\n\n    ```groovy\n    repositories {\n        mavenCentral()\n    }\n    ```\n\n    For Android, use this dependency:\n\n    ```groovy\n    dependencies {\n        implementation 'com.cossacklabs.com:themis:0.14.0'\n    }\n    ```\n\n    For desktop systems use this one:\n\n    ```groovy\n    dependencies {\n        implementation 'com.cossacklabs.com:java-themis:0.14.0'\n    }\n    ```\n\n  - Example project for desktop Java moved to the main repository â [`docs/examples/java`](docs/examples/java) ([#816](https://github.com/cossacklabs/themis/pull/816)).\n\n- **Objective-C**\n\n  - Updated Objective-C examples (iOS and macOS, Carthage and CocoaPods) to showcase usage of the newest Secure Cell API: generating symmetric keys and using Secure Cell with Passphrase ([#688](https://github.com/cossacklabs/themis/pull/688)) and to use latest Themis 0.13.4 ([#701](https://github.com/cossacklabs/themis/pull/701), [#703](https://github.com/cossacklabs/themis/pull/703), [#706](https://github.com/cossacklabs/themis/pull/706), [#723](https://github.com/cossacklabs/themis/pull/723), [#724](https://github.com/cossacklabs/themis/pull/724), [#726](https://github.com/cossacklabs/themis/pull/726), [#740](https://github.com/cossacklabs/themis/pull/740)).\n  - `TSSession` initializer now returns an error (`nil`) when given incorrect key type ([#710](https://github.com/cossacklabs/themis/pull/710)).\n  - Improved compatibility with Xcode 12 ([#742](https://github.com/cossacklabs/themis/pull/742)).\n  - Updated CocoaPods examples to the latest Themis version 0.13.10 ([#834](https://github.com/cossacklabs/themis/pull/834)).\n  - Removed deprecated CocoaPods subspecs: `themis/themis-openssl` and `themis/themis-boringssl` ([#884](https://github.com/cossacklabs/themis/pull/884), [#885](https://github.com/cossacklabs/themis/pull/885)).\n\n- **PHP**\n\n  - `libphpthemis` packages for Debian/Ubuntu now have accurate dependencies ([#683](https://github.com/cossacklabs/themis/pull/683)).\n  - PHP Composer 2.0 is now supported by PHPThemis unit tests ([#730](https://github.com/cossacklabs/themis/pull/730)).\n\n- **Node.js**\n\n  - `SecureSession` constructor now throws an exception when given incorrect key type ([#698](https://github.com/cossacklabs/themis/pull/698)).\n  - Node.js v16 is now supported ([#801](https://github.com/cossacklabs/themis/pull/801)).\n\n- **Python**\n\n  - `SSession` constructor now throws an exception when given incorrect key type ([#710](https://github.com/cossacklabs/themis/pull/710)).\n\n- **Ruby**\n\n  - `Ssession` constructor now throws an exception when given incorrect key type ([#710](https://github.com/cossacklabs/themis/pull/710)).\n\n- **Rust**\n\n  - Dropped `libthemis-src` crate support and removed the `vendored` feature. RustThemis wrapper now requires Themis Core to be installed in the system ([#691](https://github.com/cossacklabs/themis/pull/691)).\n  - Updated `zeroize` depedency to 1.x version. Rust 1.47 or newer is now required ([#799](https://github.com/cossacklabs/themis/pull/799)).\n\n- **Swift**\n\n  - Updated Swift examples (iOS and macOS, Carthage and CocoaPods) to showcase usage of the newest Secure Cell API: generating symmetric keys and using Secure Cell with Passphrase ([#688](https://github.com/cossacklabs/themis/pull/688)) and to use latest Themis 0.13.4 ([#701](https://github.com/cossacklabs/themis/pull/701), [#703](https://github.com/cossacklabs/themis/pull/703), [#706](https://github.com/cossacklabs/themis/pull/706), [#740](https://github.com/cossacklabs/themis/pull/740)).\n  - `TSSession` initializer now returns an error (`nil`) when given incorrect key type ([#710](https://github.com/cossacklabs/themis/pull/710)).\n  - Improved compatibility with Xcode 12 ([#742](https://github.com/cossacklabs/themis/pull/742)).\n  - Updated CocoaPods examples to the latest Themis version 0.13.10 ([#834](https://github.com/cossacklabs/themis/pull/834)).\n  - Removed deprecated CocoaPods subspecs: `themis/themis-openssl` and `themis/themis-boringssl` ([#884](https://github.com/cossacklabs/themis/pull/884), [#885](https://github.com/cossacklabs/themis/pull/885)).\n\n- **WebAssembly**\n\n  - Updated Emscripten toolchain to the latest version ([#760](https://github.com/cossacklabs/themis/pull/760), [#880](https://github.com/cossacklabs/themis/pull/880)).\n  - Node.js v16 is now supported ([#801](https://github.com/cossacklabs/themis/pull/801)).\n  - <a id=\"0.14-typescript\">TypeScript type definitions and ES6 module are now available,</a> thanks to [**@maxammann**](https://github.com/maxammann) ([#792](https://github.com/cossacklabs/themis/pull/792)).\n    ```js\n    import {SecureCell, SecureMessage, SecureSession, SecureComparator} from 'wasm-themis';\n    ```\n  - New initialization API: `initialize()`, allowing to specify custom URL for `libthemis.wasm` ([#792](https://github.com/cossacklabs/themis/pull/792), [#854](https://github.com/cossacklabs/themis/pull/854), [#857](https://github.com/cossacklabs/themis/pull/857)).\n  - Updated embedded BoringSSL to the latest version ([#812](https://github.com/cossacklabs/themis/pull/812)).\n  - `make wasmthemis` now fails with unsupported Emscripten toolchains ([#879](https://github.com/cossacklabs/themis/pull/879)).\n\n_Infrastructure:_\n\n- Improved package split making `libthemis` thinner ([#678](https://github.com/cossacklabs/themis/pull/678)).\n- Optimized dependencies of `libthemis` DEB and RPM packages ([#682](https://github.com/cossacklabs/themis/pull/682), [#686](https://github.com/cossacklabs/themis/pull/686)).\n- `make deb` and `make rpm` with `ENGINE=boringssl` will now produce `libthemis-boringssl` packages with embedded BoringSSL ([#683](https://github.com/cossacklabs/themis/pull/683), [#686](https://github.com/cossacklabs/themis/pull/686)).\n- Build system and tests now respect the `PATH` settings ([#685](https://github.com/cossacklabs/themis/pull/685)).\n- Rename embedded BoringSSL symbols by default to avoid conflicts with system OpenSSL ([#702](https://github.com/cossacklabs/themis/pull/702)).\n- Started phasing out CircleCI in favour of GitHub Actions ([#709](https://github.com/cossacklabs/themis/pull/709), [#755](https://github.com/cossacklabs/themis/pull/755)).\n- Themis is now fuzzed with `afl++` ([#766](https://github.com/cossacklabs/themis/pull/766)).\n- Secure Message is now covered with fuzz testing ([#762](https://github.com/cossacklabs/themis/pull/762)).\n- JavaThemis for Android and desktop Java is now published in the Maven Central repository ([#786](https://github.com/cossacklabs/themis/pull/786), [#788](https://github.com/cossacklabs/themis/pull/788)).\n- MSYS2 builds for Windows are now checked by CI ([#791](https://github.com/cossacklabs/themis/pull/791)).\n- Added automated tests for Android example project ([#813](https://github.com/cossacklabs/themis/pull/813)).\n- Added automated tests for desktop Java example project ([#816](https://github.com/cossacklabs/themis/pull/816)).\n- Embedded BoringSSL now builds faster if Ninja is available ([#837](https://github.com/cossacklabs/themis/pull/837)).\n- Embedded BoringSSL can now be cross-compiled on macOS by setting `ARCH` and `SDK` variables ([#849](https://github.com/cossacklabs/themis/pull/849)).\n- Builds on macOS use OpenSSL 1.1 from Homebrew by default ([#871](https://github.com/cossacklabs/themis/pull/871)).\n- Builds with OpenSSL 3.0 are currently **not supported** ([#872](https://github.com/cossacklabs/themis/pull/872)).\n\n\n## [0.13.12](https://github.com/cossacklabs/themis/releases/tag/0.13.12), July 26th 2021\n\n**Hotfix for Apple arm64 simulators for M1**\n\n- Fixed issue [864](https://github.com/cossacklabs/themis/issues/864): Themis XCFramework now includes arm64 slice for simulators ([865](https://github.com/cossacklabs/themis/pull/865)).\n\n_Code:_\n\n  - Fixed `Themis.xcodeproj` build settings: removed arm64 from exluded architectures ([865](https://github.com/cossacklabs/themis/pull/865)).\n\n\n## [0.13.11](https://github.com/cossacklabs/themis/releases/tag/0.13.11), July 6th 2021\n\n**Hotfix for WasmThemis:**\n\n- Fixed issue when bundling WasmThemis with webpack ([#779](https://github.com/cossacklabs/themis/issue/779)).\n\n_Code:_\n\n- **WebAssembly**\n\n  - Fixed issue with `TypeError: TextEncoder is not a constructor` when bundling WasmThemis with webpack ([#779](https://github.com/cossacklabs/themis/issue/779)).\n\n\n## [0.13.10](https://github.com/cossacklabs/themis/releases/tag/0.13.10), May 26th 2021\n\n<a id=\"0.13.10-subspecs\"></a>\n**Deprecation Notice for CocoaPods users:**\n  - `themis/themis-openssl` subspec based on GRKOpenSSLFramework is deprecated and will be removed in Themis version 0.14.\n  - `themis/themis-boringssl` subspec based on BoringSSL is deprecated and will be removed in Themis version 0.14.\n\nPlease, switch to the default option in your Podfile: `pod 'themis'`\n\n**Hotfix for Apple platforms:**\n\n- `themis` for CocoaPods now uses XCFrameworks, supports Apple Silicon, and OpenSSL 1.1.1k ([#828](https://github.com/cossacklabs/themis/pull/828)).\n- Updated Carthage examples to use Themis XCFramework ([#823](https://github.com/cossacklabs/themis/pull/823)).\n\n_Code:_\n\n- **Objective-C / Swift**\n\n  - `themis` for CocoaPods now uses XCFrameworks, supports Apple Silicon, and OpenSSL 1.1.1k ([#828](https://github.com/cossacklabs/themis/pull/828)).\n\n## [0.13.9](https://github.com/cossacklabs/themis/releases/tag/0.13.9), May 14th 2021\n\n**Hotfix for Apple platforms:**\n\n- `themis` for Carthage switched to using XCFrameworks ([#817](https://github.com/cossacklabs/themis/pull/817)). So, <a id=\"0.13.9-carthage-0.38\">the minimum required Carthage version</a> is now [0.38.0](https://github.com/Carthage/Carthage/releases/tag/0.38.0). You can continue using previous Themis version with previous Carthage versions.\n- Updated OpenSSL to the latest 1.1.1k for Carthage ([#817](https://github.com/cossacklabs/themis/pull/817)).\n\n_Code:_\n\n- **Objective-C / Swift**\n\n  - `themis` for Carthage now pulls OpenSSL dependency as XCFramework, and Carthage builds `themis` as XCFramework as well. `Themis.xcodeproj` now uses `openssl.xcframwork` and `themis.xcframework`. Carthage dependencies should be built with `--use-xcframeworks` flag ([#817](https://github.com/cossacklabs/themis/pull/817)).\n  - Updated OpenSSL to the latest 1.1.1k for Carthage ([#817](https://github.com/cossacklabs/themis/pull/817)).\n  - Tests (Github Actions) are updated to use the latest Carthage version (0.38.0 and up) and `--use-xcframeworks` flag ([#817](https://github.com/cossacklabs/themis/pull/817)).\n\n## [0.13.8](https://github.com/cossacklabs/themis/releases/tag/0.13.8), April 30th 2021\n\n**Hotfix for Apple platforms:**\n\n- Updated OpenSSL to the latest 1.1.1k for SPM and attached `themis.xcframework` (iOS and macOS) ([#808](https://github.com/cossacklabs/themis/pull/808)).\n- New Swift and Objective-C example projects: SPM for iOS and macOS ([#808](https://github.com/cossacklabs/themis/pull/808)).\n\n_Code:_\n\n- **Objective-C / Swift**\n\n  - Updated OpenSSL to the latest 1.1.1k for SPM and attached `themis.xcframework`. It is `openssl-apple` version 1.1.11101 ([#808](https://github.com/cossacklabs/themis/pull/808)).\n  - New Swift and Objective-C example projects: SPM for iOS and macOS ([#808](https://github.com/cossacklabs/themis/pull/808)).\n  - Updated SPM examples source code to remove deprecated calls ([#808](https://github.com/cossacklabs/themis/pull/808)).\n\n## [0.13.7](https://github.com/cossacklabs/themis/releases/tag/0.13.7), April 28th 2021\n\n**Hotfix for Apple platforms:**\n\n- `themis` is now packaged as XCFramework ([#789](https://github.com/cossacklabs/themis/pull/789)). It is available in the release attached files section.\n- `themis` now supports SPM ([#789](https://github.com/cossacklabs/themis/pull/789)), its installation and usage are very straightforward, just add `themis` as SPM dependency.\n\n_Code:_\n\n- **Objective-C / Swift**\n\n  - Added script to generate XCFramework for iOS, iOS Simulator and macOS ([#789](https://github.com/cossacklabs/themis/pull/789)).\n  - Added Package.swift file for SPM ([#789](https://github.com/cossacklabs/themis/pull/789)).\n\n\n\n## [0.13.6](https://github.com/cossacklabs/themis/releases/tag/0.13.6), November 23rd 2020\n\n**Hotfix for Apple platforms:**\n\n- `themis` pod is now restored to use *dynamic* linkage again\n- Resolved errors related to `@rpath` when using CocoaPods\n- Removed `arm64e` architecture slice from Carthage builds for iOS which prevented CocoaPods from functioning correctly\n\n_Code:_\n\n- **Objective-C / Swift**\n\n  - CocoaPods will now again link ObjCThemis *dynamically* into application ([#750](https://github.com/cossacklabs/themis/pull/750)).\n  - Carthage no longer builds `arm64e` architecture slice ([#750](https://github.com/cossacklabs/themis/pull/750)).\n  - Updated OpenSSL to the latest 1.1.1h-2 ([#750](https://github.com/cossacklabs/themis/pull/750)).\n\n\n## [0.13.5](https://github.com/cossacklabs/themis/releases/tag/0.13.5), November 12th 2020\n\n**Hotfix for Apple platforms:**\n\n- Resolved issues with deploying macOS apps with Apple Silicon support when Themis is installed via Carthage\n\n_Code:_\n\n- **Objective-C / Swift**\n\n  - Fixed code signing issues on macOS with Xcode 12 ([#744](https://github.com/cossacklabs/themis/pull/744)).\n\n\n## [0.13.4](https://github.com/cossacklabs/themis/releases/tag/0.13.4), October 29th 2020\n\n**Hotfix for Apple platforms:**\n\n- Improved Apple Silicon support (arm64 builds for macOS with Xcode 12.2 beta)\n- Resolved issues with stable Xcode 12 support (disabled arm64 builds for iOS Simulator)\n- Updated OpenSSL to the latest 1.1.1h\n- CocoaPods is now using OpenSSL 1.1.1h by default (again)\n- CocoaPods and Carthage now both produce full-static builds of Themis, resolving critical issues with App Store deployment (see [#715](https://github.com/cossacklabs/themis/issues/715))\n\n_Code:_\n\n- **Objective-C / Swift**\n\n  - Switched to test on Xcode 12.0, disable ARM64 builds for Themis CocoaPods and Themis Carthage ([#721](https://github.com/cossacklabs/themis/pull/721), [#722](https://github.com/cossacklabs/themis/pull/722), [#732](https://github.com/cossacklabs/themis/pull/732), [#733](https://github.com/cossacklabs/themis/pull/733)).\n  - CocoaPods will now link ObjCThemis statically into application ([#731](https://github.com/cossacklabs/themis/pull/731), [#735](https://github.com/cossacklabs/themis/pull/735)).\n  - Updated OpenSSL to the latest 1.1.1h ([#735](https://github.com/cossacklabs/themis/pull/735)).\n\n\n## [0.13.3](https://github.com/cossacklabs/themis/releases/tag/0.13.3), October 12th 2020\n\n**Hotfix for Themis CocoaPods and Xcode12:**\n\n- Default Themis podspec is using OpenSSL 1.0.2u again (\"themis/themis-openssl\"). OpenSSL 1.1.1g podspec (\"themis/openssl\") might be broken for Xcode12, fixing is in progress. BoringSSL podspec (\"themis/themis-boringssl\") is available too.\n\n_Code:_\n\n- **Objective-C / Swift**\n\n  - Themis CocoaPods podspec is updated with bitcode fixes and disabling arm64 simulator in order to support Xcode12 builds. This is a podspec change only, no changes in code, headers or whatsoever. Default podspec is set as \"themis/themis-openssl\", which uses OpenSSL 1.0.2u. Fixes for \"themis/openssl\" podspec (OpenSSL 1.1.1g) might arrive soon.\n\n\n## [0.13.2](https://github.com/cossacklabs/themis/releases/tag/0.13.2), August 14th 2020\n\n**Breaking changes and deprecations:**\n\n- ObjCThemis framework built by Carthage is now called `themis.framework` once again ([read more](#0.13.2-revert-objcthemis-rename)).\n\n_Code:_\n\n- **Objective-C**\n\n  - **Breaking changes**\n\n    - <a id=\"0.13.2-revert-objcthemis-rename\">ObjCThemis framework built by Carthage is now called `themis.framework` once again</a> ([#704](https://github.com/cossacklabs/themis/pull/704)).\n\n      [ObjCThemis 0.13.0](#0.13.0-objcthemis-rename) has initiated renaming of the framework produced by Carthage into `objcthemis.framework` from its historical name `themis.framework`. This decision has been a mistake. More information is available in the pull request linked above.\n\n      `objcthemis.framework` is removed and should not be used.\n\n      Please continue linking your applications to `themis.framework`. Note as well that starting with ObjCThemis 0.13.1, you do not have to embed `openssl.framework` anymore when ObjCThemis is installed via Carthage.\n\n## [0.13.1](https://github.com/cossacklabs/themis/releases/tag/0.13.1), August 13th 2020\n\n**TL;DR:**\n\n- AndroidThemis is now available on JCenter\n- ObjCThemis and SwiftThemis get latest OpenSSL update\n- ObjCThemis and SwiftThemis now require Xcode 11 (or later)\n- Minor security fixes in GoThemis, JsThemis, WasmThemis\n\n_Code:_\n\n- **Core**\n\n  - Improved compatibility with OpenSSL 1.1.1 ([#684](https://github.com/cossacklabs/themis/pull/684)).\n\n- **Android**\n\n  - AndroidThemis is now available on JCenter ([#679](https://github.com/cossacklabs/themis/pull/679)).\n\n- **Go**\n\n  - Fixed panics on 32-bit systems when processing corrupted data ([#677](https://github.com/cossacklabs/themis/pull/677)).\n  - Improved GoThemis package README and documentation ([#699](https://github.com/cossacklabs/themis/pull/699)).\n\n- **Node.js**\n\n  - Minor dependency updates making the world a better place ([#680](https://github.com/cossacklabs/themis/pull/680)).\n\n- **WebAssembly**\n\n  - Minor dependency updates making the world a better place ([#680](https://github.com/cossacklabs/themis/pull/680)).\n\n- **Swift**\n\n  - Updated OpenSSL to the latest 1.1.1g ([#692](https://github.com/cossacklabs/themis/pull/692)).\n\n- **Objective-C**\n\n  - Updated OpenSSL to the latest 1.1.1g ([#692](https://github.com/cossacklabs/themis/pull/692)).\n\n_Infrastructure:_\n\n- AndroidThemis is now available on JCenter ([#679](https://github.com/cossacklabs/themis/pull/679)).\n- ObjCThemis and SwiftThemis now require Xcode 11 ([#692](https://github.com/cossacklabs/themis/pull/692)).\n\n## [0.13.0](https://github.com/cossacklabs/themis/releases/tag/0.13.0), July 8th 2020\n\n**TL;DR:**\n\n- Added API for generating symmetric keys for use with Secure Cell.\n- Added API for Secure Cell encryption with human-readable passphrases.\n- [New supported platforms: Kotlin, Swift 5, iPadOS](#0.13.0-new-platforms).\n- [Updated look-and-feel of the documentation](https://docs.cossacklabs.com/products/themis/).\n- Squished many tricky bugs and added whole lot of extra security checks.\n\n**Breaking changes and deprecations:**\n\n- Many languages received Secure Cell API overhaul with parts of the old API becoming deprecated. Refer to individual language sections for details.\n- ObjCThemis installed via Carthage is now called `objcthemis` instead of just `themis` ([read more](#0.13.0-objcthemis-rename)).\n- Themis 0.9.6 compatibility is now disabled by default ([read more](#0.13.0-drop-0.9.6-compat)).\n- Themis is known to be broken on big-endian architectures ([read more](#0.13.0-big-endian)).\n- Java 7 is no longer supported, breaking Android and Java builds on outdated systems ([read more](#0.13.0-drop-java-7)).\n- Python 2 is no longer supported ([read more](#0.13.0-drop-python-2)).\n- Serialisation of Secure Session state in JavaThemis is now deprecated\n  ([read more](#0.13.0-deprecate-session-save-restore)).\n\n_Code:_\n\n- **Core**\n\n  - Added support for building with sanitizers like ASan and UBSan,\n    enabled by `WITH_ASAN=1` flags\n    ([#548](https://github.com/cossacklabs/themis/pull/548),\n     [#556](https://github.com/cossacklabs/themis/pull/556)).\n  - Fixed a number of possible use-after-free conditions\n    ([#546](https://github.com/cossacklabs/themis/pull/546)).\n  - Themis Core is now compiled with `-O2` optimizations enabled by default\n    ([#543](https://github.com/cossacklabs/themis/pull/543)).\n  - Themis Core is now compiled with even more paranoid compiler flags\n    ([#578](https://github.com/cossacklabs/themis/pull/578)).\n  - Fixed various edge-case correctness issues pointed out by sanitizers,\n    clang-tidy, and compiler warnings\n    ([#540](https://github.com/cossacklabs/themis/pull/540),\n     [#545](https://github.com/cossacklabs/themis/pull/545),\n     [#554](https://github.com/cossacklabs/themis/pull/554),\n     [#570](https://github.com/cossacklabs/themis/pull/570),\n     [#597](https://github.com/cossacklabs/themis/pull/597),\n     [#613](https://github.com/cossacklabs/themis/pull/613)).\n  - Improved memory wiping,\n    making sure that sensitive data doesn't stay in memory longer than absolutely necessary\n    ([#584](https://github.com/cossacklabs/themis/pull/584),\n     [#585](https://github.com/cossacklabs/themis/pull/585),\n     [#586](https://github.com/cossacklabs/themis/pull/586),\n     [#612](https://github.com/cossacklabs/themis/pull/612)).\n\n  - **Soter** (low-level security core used by Themis)\n\n    - New function `soter_pbkdf2_sha256()` can be used to derive encryption keys from passphrases with PBKDF2 algorithm ([#574](https://github.com/cossacklabs/themis/pull/574)).\n\n  - **Key generation**\n\n    - New function `themis_gen_sym_key()` can be used to securely generate symmetric keys for Secure Cell ([#560](https://github.com/cossacklabs/themis/pull/560)).\n\n  - **Secure Cell**\n\n    - New functions:\n\n      - `themis_secure_cell_encrypt_seal_with_passphrase()`\n      - `themis_secure_cell_decrypt_seal_with_passphrase()`\n\n      provide Seal mode API that is safe to use with passphrases\n      ([#577](https://github.com/cossacklabs/themis/pull/577),\n       [#582](https://github.com/cossacklabs/themis/pull/582),\n       [#640](https://github.com/cossacklabs/themis/pull/640)).\n\n  - **Secure Session**\n\n    - Fixed serialization issue in `secure_session_save()` and `secure_session_load()` methods\n      ([#658](https://github.com/cossacklabs/themis/pull/658)).\n\n  - **Breaking changes**\n\n    - <a id=\"0.13.0-drop-0.9.6-compat\">Secure Cell compatibility with Themis 0.9.6 is now disabled by default ([#614](https://github.com/cossacklabs/themis/pull/614)).\n\n      Old versions of Themis have been calculating encrypted data length incorrectly, which made Secure Cells encrypted on 64-bit machines impossible to decrypt on 32-bit machines (see [#279](https://github.com/cossacklabs/themis/pull/279) for details).\n\n      Themis 0.10 and later versions include a fix for that issue and a compatiblity workaround that allows to decrypt data encrypted by Themis 0.9.6 on 64-bit platforms. This workaround was enabled by default and could be disabled by setting the `NO_SCELL_COMPAT` varible.\n\n      Since Themis 0.13 the workaround for Themis 0.9.6 compatibility is *disabled* by default (as it has performance implications). It can be enabled if needed by compling with `WITH_SCELL_COMPAT`.\n\n      We are planning to **remove** the workaround completely after Themis 0.9.6 reaches end-of-life in December 2020. Please use this time to migrate existing data if you have been using Themis 0.9.6. To migrate the data, decrypt it and encrypt it back with the latest Themis version.\n\n    - <a id=\"0.13.0-big-endian\">Themis is known to be broken on big-endian architectures</a> ([#623](https://github.com/cossacklabs/themis/pull/623), [#592](https://github.com/cossacklabs/themis/pull/592)).\n\n      Themis has never committed to supporting machines with big-endian architectures.\n      However, it was expected to accidentally work to some degree on such machines,\n      with certain compatibility restrictions on interaction with little-endian machines.\n\n      Recent changes in Themis Core are known to introduce compatibility issues on big-endian architectures.\n      If you believe you are affected by this change, please reach out to us via\n      [dev@cossacklabs.com](mailto:dev@cossacklabs.com).\n\n- **Android**\n\n  See also: [Java API updates](#0.13.0-java).\n\n  - Kotlin is now officially supported language on Android\n    ([#637](https://github.com/cossacklabs/themis/pull/637)).\n  - Fixed a crash when decrypting corrupted Secure Cell data\n    ([#639](https://github.com/cossacklabs/themis/pull/639)).\n  - Updated embedded BoringSSL to the latest version\n    ([#643](https://github.com/cossacklabs/themis/pull/643)).\n  - Fixed broken `SecureSession#save` and `SecureSession#restore` methods\n    ([#658](https://github.com/cossacklabs/themis/pull/658)).\n\n  - **Breaking changes**\n\n    - Android build now uses Gradle 5.6 and requires Java 8 ([#633](https://github.com/cossacklabs/themis/pull/633)).\n\n      It is no longer possible to build AndroidThemis with Java 7.\n      Please upgrade to Java 8 or later version.\n\n  - **Deprecations**\n\n    - Unqualified Gradle targets are now deprecated ([#633](https://github.com/cossacklabs/themis/pull/633)).\n\n      To build Themis for Android, run\n\n          ./gradlew :android:assembleRelease\n\n      instead of\n\n          ./gradlew assembleRelease\n\n      The unqualified form still works for now, but may break in future releases.\n\n- **C++**\n\n  - Secure Cell API updates ([#588](https://github.com/cossacklabs/themis/pull/588))\n\n    - ThemisPP now supports _passphrase API_ of Secure Cell in Seal mode:\n\n      ```c++\n      #include <themispp/secure_cell.hpp>\n\n      auto cell = themispp::secure_cell_seal_with_passphrase(\"string\");\n\n      uint8_t[] plaintext = \"message\";\n\n      std::vector<uint8_t> encrypted = cell.encrypt(plaintext);\n      std::vector<uint8_t> decrypted = cell.decrypt(encrypted);\n      ```\n\n      You can safely and securely use short, human-readable passphrases as strings with this new API.\n\n      Existing master key API (`themispp::secure_cell_seal` and other modes) should not be used with passphrases or passwords.\n      Use master key API with symmetric encryption keys, such as generated by `themispp::gen_sym_key()` ([#561](https://github.com/cossacklabs/themis/pull/561)).\n      Use passphrase API with human-readable passphrases.\n\n    - All modes of Secure Cell get a new initialisation API to avoid ambiguity over whether Secure Cell is secured with a passphrase or a master key (since both are effectively byte arrays in C++):\n\n      - `themispp::secure_cell_seal_with_key(master_key)`\n      - `themispp::secure_cell_token_protect_with_key(master_key)`\n      - `themispp::secure_cell_context_imprint_with_key(master_key)`\n\n      New API has additional benefits:\n\n      - broader range of input types is accepted, including STL-compatible containers such as `std::vector`, `std::array`, `std::span`, C arrays, etc.\n      - Token Protect API is much easier to use\n      - Secure Cell is now thread-safe\n\n    - **Deprecated API**\n\n      The following classes are deprecated:\n\n      - `themispp::secure_cell_seal_t`\n      - `themispp::secure_cell_token_protect_t`\n      - `themispp::secure_cell_context_imprint_t`\n\n      They should be replaced with their `_with_key` counterparts. In most cases migration should be a trivial renaming but there are caveats with Token Protect mode and iterator usage. Please see [#588](https://github.com/cossacklabs/themis/pull/588) for details.\n\n  - New function `themispp::gen_sym_key()` can be used to generate symmetric keys for Secure Cell\n    ([#561](https://github.com/cossacklabs/themis/pull/561),\n     [#576](https://github.com/cossacklabs/themis/pull/576)).\n  - Updated test suite to test C++14 and C++17 (in addition to C++11 and C++03) ([#572](https://github.com/cossacklabs/themis/pull/572)).\n\n  - **Breaking changes**\n\n    - `get_pub_key_by_id()` method of `secure_session_callback_interface_t`\n      now has to return non-const vector\n      ([#540](https://github.com/cossacklabs/themis/pull/540)).\n\n      Change your implementation like this:\n\n      ```diff\n      -const std::vector<uint8_t> get_pub_key_by_id(const std::vector<uint8_t>& id) override\n      +std::vector<uint8_t> get_pub_key_by_id(const std::vector<uint8_t>& id) override\n       {\n           // ...\n       }\n      ```\n\n- **Go**\n\n  - New function `keys.NewSymmetricKey()` can be used to generate symmetric keys for Secure Cell ([#561](https://github.com/cossacklabs/themis/pull/561)).\n  - Improved `ThemisError` introspection: added error constants, numeric error codes ([#622](https://github.com/cossacklabs/themis/pull/622)).\n\n  - Secure Cell API updates:\n\n    - New API with improved usability and consistent naming ([#624](https://github.com/cossacklabs/themis/pull/624)).\n\n      ```go\n      func SealWithKey(key *keys.SymmetricKey) (*SecureCellSeal, error)\n          func (sc *SecureCellSeal) Encrypt(plaintext, context []byte) ([]byte, error)\n          func (sc *SecureCellSeal) Decrypt(encrypted, context []byte) ([]byte, error)\n\n      func TokenProtectWithKey(key *keys.SymmetricKey) (*SecureCellTokenProtect, error)\n          func (sc *SecureCellTokenProtect) Encrypt(plaintext, context []byte) (encrypted, token []byte, error)\n          func (sc *SecureCellTokenProtect) Decrypt(encrypted, token, context []byte) ([]byte, error)\n\n      func ContextImprintWithKey(key *keys.SymmetricKey) (*SecureCellContextImprint, error)\n          func (sc *SecureCellContextImprint) Encrypt(plaintext, context []byte) ([]byte, error)\n          func (sc *SecureCellContextImprint) Decrypt(encrypted, context []byte) ([]byte, error)\n      ```\n\n      This API is less ambiguous and more convenient to use.\n\n    - GoThemis now supports _passphrase API_ in Seal mode ([#625](https://github.com/cossacklabs/themis/pull/625)).\n\n      ```go\n      scell, err := cell.SealWithPassphrase(\"secret\")\n      if err != nil {\n              return err\n      }\n\n      encrypted, err := scell.Encrypt([]byte(\"message\"), nil)\n      if err != nil {\n              return err\n      }\n\n      decrypted, err := scell.Decrypt(encrypted, nil)\n      if err != nil {\n              return err\n      }\n      ```\n\n      You can safely and securely use short, human-readable passphrases as strings with this new API.\n\n      Existing master key API (`cell.SealWithKey()` or `cell.New()`) should not be used with passphrases or passwords.\n      Use master key API with symmetric encryption keys, such as generated by `keys.NewSymmetricKey()` ([#561](https://github.com/cossacklabs/themis/pull/561)).\n      Use passphrase API with human-readable passphrases.\n\n  - **Deprecated API**\n\n    - Run-time mode-setting for Secure Cell is deprecated ([#624](https://github.com/cossacklabs/themis/pull/624)).\n\n      Please use new constructors `cell.SealWithKey()` instead of `cell.New()` and `cell.ModeSeal...` constants.\n      Encryption is now performed with `Encrypt()` method instead of `Protect()`.\n      For decryption use `Decrypt()` instead of `Unprotect()`.\n\n      Old API is retained for compatibility.\n\n- **iOS and macOS**\n\n  - New function `TSGenerateSymmetricKey()` (available in Objective-C and Swift) can be used to generate symmetric keys for Secure Cell ([#561](https://github.com/cossacklabs/themis/pull/561)).\n  - Mac Catalyst is explicitly disabled\n    ([#598](https://github.com/cossacklabs/themis/pull/598)).\n  - Improved test coverage of platforms\n    ([#599](https://github.com/cossacklabs/themis/pull/599),\n     [#607](https://github.com/cossacklabs/themis/pull/607),\n     [#610](https://github.com/cossacklabs/themis/pull/610),\n     [#642](https://github.com/cossacklabs/themis/pull/642)).\n  - SwiftThemis is now tested with Swift 5\n    ([#605](https://github.com/cossacklabs/themis/pull/605)).\n  - iPadOS is now officially supported target for ObjCThemis\n    ([#641](https://github.com/cossacklabs/themis/pull/641)).\n\n  - Secure Cell API updates:\n\n    - New encryption/decryption API with consistent naming: `encrypt` and `decrypt` ([#606](https://github.com/cossacklabs/themis/pull/606)).\n\n    - Improved Token Protect API ([#606](https://github.com/cossacklabs/themis/pull/606)):\n      - Encryption results use `NSData` now which bridges with Swift `Data` directly.\n      - Decryption no longer requires an intermediate `TSCellTokenEncryptedData` object.\n\n    - ObjCThemis now supports _passphrase API_ of in Seal mode ([#609](https://github.com/cossacklabs/themis/pull/609)).\n\n      In Swift:\n\n      ```swift\n      let cell = TSCellSeal(passphrase: \"secret\")\n\n      let encrypted = try cell.encrypt(\"message\".data(using: .utf8)!)\n      let decrypted = try cell.decrypt(encrypted)\n      ```\n\n      In Objective-C:\n\n      ```objective-c\n      TSCellSeal *cell = [[TSCellSeal alloc] initWithPassphrase:@\"secret\"];\n\n      NSData *encrypted = [cell encrypt:[@\"message\" dataUsingEncoding:NSUTF8StringEncoding]];\n      NSData *decrypted = [cell decrypt:encrypted];\n      ```\n\n      You can safely and securely use short, human-readable passphrases as strings with this new API.\n\n      Existing master key API (`TSCellSeal(key: ...)` or `initWithKey:...`) should not be used with passphrases or passwords.\n      Use master key API with symmetric encryption keys, such as generated by `TSGenerateSymmetricKey()` ([#561](https://github.com/cossacklabs/themis/pull/561)).\n      Use passphrase API with human-readable passphrases.\n\n  - **Deprecated API**\n\n    - Secure Cell wrapData/unwrapData renamed into encrypt/decrypt ([#606](https://github.com/cossacklabs/themis/pull/606)).\n\n      As a result, the following methods are deprecated. There are no plans for their removal.\n\n      <details>\n      <summary>Swift</summary>\n      <table>\n        <tr><th>Mode</th><th>Deprecation</th><th>Replacement</th></tr>\n        <tr>\n          <td rowspan=2><code>TSCellSeal</code></td>\n          <td><code>wrap(_:, context:)</code><br/><code>wrap</code></td>\n          <td><code>encrypt(_:, context:)</code><br/><code>encrypt</code></td>\n        </tr>\n        <tr>\n          <td><code>unwrapData(_:, context:)</code><br/><code>unwrapData</code></td>\n          <td><code>decrypt(_:, context:)</code><br/><code>decrypt</code></td>\n        </tr>\n        <tr>\n          <td rowspan=2><code>TSCellToken</code></td>\n          <td><code>wrap(_:, context:)</code><br/><code>wrap</code></td>\n          <td><code>encrypt(_:, context:)</code><br/><code>encrypt</code></td>\n        </tr>\n        <tr>\n          <td><code>unwrapData(_:, context:)</code><br/><code>unwrapData</code></td>\n          <td><code>decrypt(_:, token:, context:)</code><br/><code>decrypt(_:, token:)</code></td>\n        </tr>\n        <tr>\n          <td rowspan=2><code>TSCellContextImprint</code></td>\n          <td><code>wrap(_:, context:)</code><br/><code>wrap</code></td>\n          <td><code>encrypt(_:, context:)</code><br/><code>encrypt</code></td>\n        </tr>\n        <tr>\n          <td><code>unwrapData(_:, context:)</code><br/><code>unwrapData</code></td>\n          <td><code>decrypt(_:, context:)</code><br/><code>decrypt</code></td>\n        </tr>\n      </table>\n      </details>\n\n      <details>\n      <summary>Objective-C</summary>\n      <table>\n        <tr><th>Mode</th><th>Deprecation</th><th>Replacement</th></tr>\n        <tr>\n          <td rowspan=2><code>TSCellSeal</code></td>\n          <td><code>wrapData:context:error:</code><br><code>wrapData:error:</code></td>\n          <td><code>encrypt:context:error:</code><br><code>encrypt:error:</code></td>\n        </tr>\n        <tr>\n          <td><code>unwrapData:context:error:</code><br><code>unwrapData:error:</code></td>\n          <td><code>decrypt:context:error:</code><br><code>decrypt:error:</code></td>\n        </tr>\n        <tr>\n          <td rowspan=2><code>TSCellToken</code></td>\n          <td><code>wrapData:context:error:</code><br><code>wrapData:error:</code></td>\n          <td><code>encrypt:context:error:</code><br><code>encrypt:error:</code></td>\n        </tr>\n        <tr>\n          <td><code>unwrapData:context:error:</code><br><code>unwrapData:error:</code></td>\n          <td><code>decrypt:token:context:error:</code><br><code>decrypt:token:error:</code></td>\n        </tr>\n        <tr>\n          <td rowspan=2><code>TSCellContextImprint</code></td>\n          <td><code>wrapData:context:error:</code><br><code>wrapData:error:</code></td>\n          <td><code>encrypt:context:error:</code><br><code>encrypt:error:</code></td>\n        </tr>\n        <tr>\n          <td><code>unwrapData:context:error:</code><br><code>unwrapData:error:</code></td>\n          <td><code>decrypt:context:error:</code><br><code>decrypt:error:</code></td>\n        </tr>\n      </table>\n      </details>\n\n  - **Breaking changes**\n\n    - <a id=\"0.13.0-objcthemis-rename\">ObjCThemis framework built by Carthage is now called `objcthemis.framework`</a> ([#604](https://github.com/cossacklabs/themis/pull/604)).\n\n      We have renamed the Carthage framework from `themis.framework` to `objcthemis.framework` in order to improve compatibility with CocoaPods and avoid possible import conflicts with Themis Core.\n\n      > â ï¸ Please migrate to `objcthemis.framework` in a timely manner. `themis.framework` is *deprecated* since Themis 0.13 and will be **removed** in the next release due to maintainability issues.\n      >\n      > â¹ï¸ Installations via CocoaPods are *not affected*. If you get Themis via CocoaPods then no action is necessary.\n\n      <details>\n      <summary>Migration instructions (click to reveal)</summary>\n\n      After upgrading to Themis 0.13 and running `carthage update` you will notice that _two_ Themis projects have been built:\n\n      ```\n      *** Building scheme \"OpenSSL (iOS)\" in OpenSSL.xcodeproj\n      *** Building scheme \"ObjCThemis (iOS)\" in ObjCThemis.xcodeproj\n      *** Building scheme \"Themis (iOS)\" in Themis.xcodeproj\n      ```\n\n      Your project is currently using âThemisâ. In order to migrate to âObjCThemisâ you need to do the following:\n\n        - update `#import` statements in code (for Objective-C only)\n\n        - link against `objcthemis.framework` in Xcode project\n        - remove link to `themis.framework` in Xcode project\n\n      Use the new syntax to import ObjCThemis in Objective-C projects:\n\n      ```objective-c\n      // NEW:\n      #import <objcthemis/objcthemis.h>\n\n      // old and deprecated:\n      #import <themis/themis.h>\n      ```\n\n      The new syntax is now the same as used by CocoaPods.\n\n      If you are using Swift, the import syntax is unchanged:\n\n      ```swift\n      import themis\n      ```\n\n      After updating imports you *also* need to link against the new framework (regardless of the language).\n\n      1. Add `objcthemis.framework` to your project (can be found in `Carthage/Build/iOS` or `Mac`).\n      2. For each Xcode target:\n\n         1. Open **General** tab, **Frameworks and Libraries** section\n         2. Drag `objcthemis.framework` there. Select _Embed & Sign_ if necessary.\n         3. Remove `themis.framework` from dependencies.\n\n      3. Finally, remove `themis.framework` reference from the project.\n\n      Migration is complete, your project should build successfully now.\n\n      We are sorry for the inconvenience.\n\n      </details>\n\n- <a id=\"0.13.0-java\">**Java**</a>\n\n  - JDK location is now detected automatically in most cases, you should not need to set JAVA_HOME or JDK_INCLUDE_PATH manually ([#551](https://github.com/cossacklabs/themis/pull/551)).\n  - JNI libraries are now available as `libthemis-jni` packages for supported Linux systems ([#552](https://github.com/cossacklabs/themis/pull/552), [#553](https://github.com/cossacklabs/themis/pull/553)).\n  - Fixed a NullPointerException bug in `SecureSocket` initialisation ([#557](https://github.com/cossacklabs/themis/pull/557)).\n  - Some Themis exceptions have been converted from checked `Exception` to _unchecked_ `RuntimeException`, relaxing requirements for `throws` specifiers ([#563](https://github.com/cossacklabs/themis/pull/563)).\n  - Introduced `IKey` interface with accessors to raw key data ([#564](https://github.com/cossacklabs/themis/pull/564)).\n  - New class `SymmetricKey` can be used to generate symmetric keys for Secure Cell ([#565](https://github.com/cossacklabs/themis/pull/565)).\n  - It is now possible to build desktop Java with Gradle.\n    Run `./gradlew :desktop:tasks` to learn more\n    ([#633](https://github.com/cossacklabs/themis/pull/633)).\n  - Kotlin is now officially supported language for JavaThemis\n    ([#637](https://github.com/cossacklabs/themis/pull/637)).\n  - Fixed broken `SecureSession#save` and `SecureSession#restore` methods\n    ([#658](https://github.com/cossacklabs/themis/pull/658)).\n  - Java source code is now ASCII-only for improved compatibility\n    ([#655](https://github.com/cossacklabs/themis/pull/655)).\n\n  - Secure Cell API updates:\n\n    - New encryption/decryption API with consistent naming: `encrypt` and `decrypt`\n      ([#634](https://github.com/cossacklabs/themis/pull/634)).\n    - Improved Token Protect API\n      ([#634](https://github.com/cossacklabs/themis/pull/634)).\n      - Decryption no longer requires an intermediate `SecureCellData` object.\n      - `SecureCellData` can now be destructured in Kotlin\n        ([#638](https://github.com/cossacklabs/themis/pull/638)).\n\n        ```kotlin\n        // You can now write like this:\n        val (encrypted, authToken) = cellTP.encrypt(message, context)\n\n        // Instead of having to spell it out like this:\n        val result = cellTP.protect(context, message)\n        val encrypted = result.protectedData\n        val authToken = result.additionalData\n        ```\n\n    - Secure Cell mode can now be selected by instantiating an appropriate interface:\n\n      | New API | Old API |\n      | ------- | ------- |\n      | `SecureCell.SealWithKey(key)`                 | `new SecureCell(key, SecureCell.MODE_SEAL)` |\n      | `SecureCell.SealWithPassphrase(passphrase)`   | _not available_ |\n      | `SecureCell.TokenProtectWithKey(key)`         | `new SecureCell(key, SecureCell.MODE_TOKEN_PROTECT)` |\n      | `SecureCell.ContextImprintWithKey(key)`       | `new SecureCell(key, SecureCell.MODE_CONTEXT_IMPRINT)` |\n\n    - JavaThemis now supports _passphrase API_ of in Seal mode\n      ([#635](https://github.com/cossacklabs/themis/pull/635)).\n\n      In Kotlin:\n\n      ```kotlin\n      import com.cossacklabs.themis.SecureCell\n\n      val cell = SecureCell.SealWithPassphrase(\"secret\")\n\n      val message = \"message\".toByteArray()\n\n      val encrypted = cell.encrypt(message)\n      val decrypted = cell.decrypt(encrypted)\n\n      assertArrayEquals(decrypted, message)\n      ```\n\n      In Java:\n\n      ```java\n      import com.cossacklabs.themis.SecureCell;\n\n      SecureCell.Seal cell = SecureCell.SealWithPassphrase(\"secret\");\n\n      byte[] message = \"message\".getBytes(StandardCharsets.UTF_8);\n\n      byte[] encrypted = cell.encrypt(message);\n      byte[] decrypted = cell.decrypt(encrypted);\n\n      assertArrayEquals(decrypted, message);\n      ```\n\n      You can safely and securely use short, human-readable passphrases as strings with this new API.\n\n      Existing symmetric key API (`SecureCell.SealWithKey(...)` or `new SecureCell(...)`)\n      should not be used with passphrases or passwords.\n      Use symmetric key API with symmetric encryption keys,\n      such as generated by `SymmetricKey` ([#565](https://github.com/cossacklabs/themis/pull/565)).\n      Use passphrase API with human-readable passphrases.\n\n  - **Deprecated API**\n\n    - Secure Cell has received API overhaul which deprecates old API\n      ([#636](https://github.com/cossacklabs/themis/pull/636)).\n\n      The following items are deprecated:\n\n        - Constructors:\n          - `new SecureCell(int mode)`\n          - `new SecureCell(byte[] key)`\n          - `new SecureCell(byte[] key, int mode)`\n          - `new SecureCell(String password)` â ï¸ **not recommended, insecure**\n          - `new SecureCell(String password, int mode)` â ï¸ **not recommended, insecure**\n        - Methods:\n          - `protect(byte[] key, byte[] context, byte[] data)`\n          - `protect(byte[] constext, byte[] data)`\n          - `protect(String password, String context, byte[] data)` â ï¸ **not recommended, insecure**\n          - `protect(String context, byte[] data)`\n          - `unprotect(byte[] key, byte[] context, SecureCellData protected)`\n          - `unprotect(byte[] context, SecureCellData protected)`\n          - `unprotect(String password, String context, SecureCellData protected)` â ï¸ **not recommended, insecure**\n          - `unprotect(String context, SecureCellData protected)`\n        - Constants:\n          - `SecureCell.MODE_SEAL`\n          - `SecureCell.MODE_TOKEN_PROTECT`\n          - `SecureCell.MODE_CONTEXT_IMPRINT`\n\n      Some methods are not secure when used with short passphrases,\n      consider using new passphrase API instead.\n      Other methods have easier to use replacements in the new API,\n      consider using them instead.\n\n      Deprecated API is still supported, there are no plans for its removal.\n\n    - <a id=\"0.13.0-deprecate-session-save-restore\"></a>\n      `SecureSession` methods `save` and `restore` are now deprecated\n      ([#659](https://github.com/cossacklabs/themis/pull/659)).\n\n      An improved API for serialisation might appear in some next version of JavaThemis.\n      For now, please refrain from using `SecureSession#save` and `SecureSession#restore`\n      which may be removed in the future.\n\n- **Node.js**\n\n  - New class `SymmetricKey` can be used to generate symmetric keys for Secure Cell ([#562](https://github.com/cossacklabs/themis/pull/562)).\n  - New makefile target `make jsthemis` can be used to build JsThemis from source ([#618](https://github.com/cossacklabs/themis/pull/618)).\n  - `SecureCell` now allows `null` to explicitly specify omitted encryption context ([#620](https://github.com/cossacklabs/themis/pull/620)).\n  - `SecureMessage` now allows `null` for omitted keys in sign/verify mode ([#620](https://github.com/cossacklabs/themis/pull/620)).\n  - Fixed a crash when an exception is thrown from `SecureSession` callback ([#620](https://github.com/cossacklabs/themis/pull/620)).\n  - Node.js v14 is now supported\n    ([#654](https://github.com/cossacklabs/themis/pull/654)).\n\n  - Passphrase API support in Secure Cell ([#621](https://github.com/cossacklabs/themis/pull/621)).\n\n    JsThemis now supports _passphrase API_ of Secure Cell in Seal mode:\n\n    ```javascript\n    const themis = require('jsthemis')\n\n    let cell = themis.SecureCellSeal.withPassphrase('secret')\n\n    let encrypted = cell.encrypt(Buffer.from('message data'))\n    let decrypted = cell.decrypt(encrypted)\n    ```\n\n    You can safely and securely use short, human-readable passphrases as strings with this new API.\n\n    Existing master key API (available as `themis.SecureCellSeal.withKey(...)`) should not be used with passphrases or passwords.\n    Use master key API with symmetric encryption keys, such as generated by `SymmetricKey` ([#562](https://github.com/cossacklabs/themis/pull/562)).\n    Use passphrase API with human-readable passphrases.\n\n  - **Deprecated API**\n\n    - Secure Cell construction with `new` is deprecated ([#621](https://github.com/cossacklabs/themis/pull/621)).\n\n      Passphrase API makes it ambiguous whether a Secure Cell is initialised with a master key or a passphrase.\n      All Secure Cell classes â `SecureCellSeal`, `SecureCellTokenProtect`, `SecureCellContextImprint` â\n      get a static factory method `withKey` to reduce the ambiguity.\n      Please use it instead:\n\n      ```javascript\n      // NEW, write like this:\n      let cell = themis.SecureCellSeal.withKey(secret)\n\n      // old, avoid this:\n      let cell = new themis.SecureCellSeal(secret)\n      ```\n\n      `new` constructors are not recommended for use but they are still supported and will always work with master keys, as they did before.\n\n- **PHP**\n\n  - New function `phpthemis_gen_sym_key()` can be used to generate symmetric keys for Secure Cell ([#561](https://github.com/cossacklabs/themis/pull/561)).\n  - Resolved PHP Composer checksum issues once and for all\n    ([#566](https://github.com/cossacklabs/themis/pull/566),\n     [#567](https://github.com/cossacklabs/themis/pull/567)).\n  - PHPThemis now supports _passphrase API_ of Secure Cell in Seal mode ([#594](https://github.com/cossacklabs/themis/pull/594), [#601](https://github.com/cossacklabs/themis/pull/601)).\n\n    ```php\n    $encrypted = phpthemis_scell_seal_encrypt_with_passphrase('passphrase', 'message');\n    $decrypted = phpthemis_scell_seal_decrypt_with_passphrase('passphrase', $encrypted);\n    ```\n\n    You can safely and securely use short, human-readable passphrases as strings with this new API.\n\n    Existing master key API (`phpthemis_scell_seal_{encrypt,decrypt}` and other modes) should not be used with passphrases or passwords.\n    Use master key API with symmetric encryption keys, such as generated by `phpthemis_gen_sym_key()` ([#561](https://github.com/cossacklabs/themis/pull/561)).\n    Use passphrase API with human-readable passphrases.\n\n- **Python**\n\n  - Fixed compatibility issues on 32-bit platforms ([#555](https://github.com/cossacklabs/themis/pull/555)).\n  - New function `skeygen.GenerateSymmetricKey()` can be used to generate symmetric keys for Secure Cell ([#561](https://github.com/cossacklabs/themis/pull/561)).\n  - PyThemis now supports _passphrase API_ of Secure Cell in Seal mode ([#596](https://github.com/cossacklabs/themis/pull/596)).\n\n    ```python\n    from pythemis.scell import SCellSeal\n\n    cell = SCellSeal(passphrase='my passphrase')\n\n    encrypted = cell.encrypt(b'message data')\n    decrypted = cell.decrypt(encrypted)\n    ```\n\n    You can safely and securely use short, human-readable passphrases as strings with this new API.\n\n    Existing master key API (`SCellSeal(key=...)`) should not be used with passphrases or passwords.\n    Use master key API with symmetric encryption keys, such as generated by `GenerateSymmetricKey()` ([#561](https://github.com/cossacklabs/themis/pull/561)).\n    Use passphrase API with human-readable passphrases.\n  - <a id=\"0.13.0-drop-python-2\">Python 2 is no longer supported</a>\n    ([#648](https://github.com/cossacklabs/themis/pull/648)).\n\n    Python 2 had reached EOL on 2020-01-01.\n\n    In fact, we are not making any changes in this release that break compatibility, but we no longer officially support it. This means that we do not run any CI tests for Python 2, and in the future we will develop code compatible only with Python 3+.\n\n- **Ruby**\n\n  - New function `Themis::gen_sym_key()` can be used to generate symmetric keys for Secure Cell ([#561](https://github.com/cossacklabs/themis/pull/561)).\n  - Secure Cell API updates ([#603](https://github.com/cossacklabs/themis/pull/603)).\n\n    - RbThemis now supports _passphrase API_ of Secure Cell in Seal mode:\n\n      ```ruby\n      require 'rbthemis'\n\n      cell = Themis::ScellSealPassphrase.new('secret string')\n\n      encrypted = cell.encrypt('message data')\n      decrypted = cell.decrypt(encrypted)\n      ```\n\n      You can safely and securely use short, human-readable passphrases as strings with this new API.\n\n      Existing master key API (`Themis::Scell...`) should not be used with passphrases or passwords.\n      Use master key API with symmetric encryption keys, such as generated by `Themis::gen_sym_key` ([#561](https://github.com/cossacklabs/themis/pull/561)).\n      Use passphrase API with human-readable passphrases.\n\n    - Secure Cell mode can now be selected by instantiating an appropriate subclass:\n\n      | New API | Old API |\n      | ------- | ------- |\n      | `Themis::ScellSeal.new(key)`                  | `Themis::Scell.new(key, Themis::Scell::SEAL_MODE)`            |\n      | `Themis::ScellSealPassphrase.new(passphrase)` | _not available_                                               |\n      | `Themis::ScellTokenProtect.new(key)`          | `Themis::Scell.new(key, Themis::Scell::TOKEN_PROTECT_MODE)`   |\n      | `Themis::ScellContextImprint.new(key`         | `Themis::Scell.new(key, Themis::Scell::CONTEXT_IMPRINT_MODE)` |\n\n      `Themis::Scell` class is **deprecated** and should be replaced with new API.\n\n    - Token Protect mode now accepts encrypted data and token as separate arguments instead of requiring an array:\n\n      ```ruby\n      decrypted = cell.decrypt([encrypted, token], context) # old\n      decrypted = cell.decrypt(encrypted, token, context)   # new\n      ```\n\n      (Arrays are still accepted for compatibility but this API is deprecated.)\n\n- **Rust**\n\n  - New object `themis::keys::SymmetricKey` can be used to generate symmetric keys for Secure Cell\n    ([#561](https://github.com/cossacklabs/themis/pull/561),\n     [#631](https://github.com/cossacklabs/themis/pull/631)).\n  - Significantly reduced compilation time by removing `bindgen` crate from dependencies ([#626](https://github.com/cossacklabs/themis/pull/626)).\n  - Bindgen 0.54.1 or later is now required for RustThemis development\n    ([#664](https://github.com/cossacklabs/themis/pull/664)).\n  - Passphrase API support in Secure Cell ([#630](https://github.com/cossacklabs/themis/pull/630)).\n\n    RustThemis now supports _passphrase API_ of Secure Cell in Seal mode:\n\n    ```rust\n    use themis::secure_cell::SecureCell;\n\n    let cell = SecureCell::with_passphase(\"secret\")?.seal();\n\n    let encrypted = cell.encrypt(b\"message data\")?;\n    let decrypted = cell.decrypt(&encrypted)?;\n    ```\n\n    You can safely and securely use short, human-readable passphrases as strings with this new API.\n\n    Existing master key API (available as `SecureCell::with_key(...)`) should not be used with passphrases or passwords.\n    Use master key API with symmetric encryption keys, such as generated by `themis::keys::SymmetricKey` ([#561](https://github.com/cossacklabs/themis/pull/561)).\n    Use passphrase API with human-readable passphrases.\n\n  - Miscellaneous minor improvements in code quality\n    ([#571](https://github.com/cossacklabs/themis/pull/571),\n     [#591](https://github.com/cossacklabs/themis/pull/591)).\n\n- **WebAssembly**\n\n  - New class `SymmetricKey` can be used to generate symmetric keys for Secure Cell ([#561](https://github.com/cossacklabs/themis/pull/561)).\n  - Fixed an issue with webpack Terser plugin\n    ([#568](https://github.com/cossacklabs/themis/pull/568)).\n  - Updated Emscripten toolchain to the latest version\n    ([#550](https://github.com/cossacklabs/themis/pull/550),\n     [#569](https://github.com/cossacklabs/themis/pull/569),\n     [#602](https://github.com/cossacklabs/themis/pull/602),\n     [#653](https://github.com/cossacklabs/themis/pull/653)).\n  - Updated embedded BoringSSL and other dependencies to the latest versions\n    ([#608](https://github.com/cossacklabs/themis/pull/608),\n     [#643](https://github.com/cossacklabs/themis/pull/643)).\n  - Node.js v14 is now supported\n    ([#654](https://github.com/cossacklabs/themis/pull/654)).\n\n  - Passphrase API support in Secure Cell ([#616](https://github.com/cossacklabs/themis/pull/616)).\n\n    WasmThemis now supports _passphrase API_ of Secure Cell in Seal mode:\n\n    ```javascript\n    const themis = require('wasm-themis')\n\n    let cell = themis.SecureCellSeal.withPassphrase('secret')\n\n    let encrypted = cell.encrypt(Buffer.from('message data'))\n    let decrypted = cell.decrypt(encrypted)\n    ```\n\n    You can safely and securely use short, human-readable passphrases as strings with this new API.\n\n    Existing master key API (available as `themis.SecureCellSeal.withKey(...)`) should not be used with passphrases or passwords.\n    Use master key API with symmetric encryption keys, such as generated by `SymmetricKey` ([#561](https://github.com/cossacklabs/themis/pull/561)).\n    Use passphrase API with human-readable passphrases.\n\n  - **Deprecated API**\n\n    - Secure Cell construction with `new` is deprecated ([#616](https://github.com/cossacklabs/themis/pull/616)).\n\n      Passphrase API makes it ambiguous whether a Secure Cell is initialised with a master key or a passphrase. All Secure Cell classes â\n      `SecureCellSeal`, `SecureCellTokenProtect`, `SecureCellContextImprint` â get a static factory method `withKey` to reduce the ambiguity. Please use it instead:\n\n      ```javascript\n      // NEW, write like this:\n      let cell = themis.SecureCellSeal.withKey(secret)\n\n      // old, avoid this:\n      let cell = new themis.SecureCellSeal(secret)\n      ```\n\n      `new` constructors are not recommended for use but they are still supported and will always work with master keys, as they did before.\n\n_Docs:_\n\n- New improved design and structure of [Themis documentation](https://docs.cossacklabs.com/products/themis/).\n- Updated templates for GitHub issues and pull requests\n  ([#549](https://github.com/cossacklabs/themis/pull/549)).\n- Miscellaneous quality improvements in various pieces of documentation\n  ([#558](https://github.com/cossacklabs/themis/pull/558),\n   [#575](https://github.com/cossacklabs/themis/pull/575),\n   [#581](https://github.com/cossacklabs/themis/pull/581),\n   [#587](https://github.com/cossacklabs/themis/pull/587),\n   [#590](https://github.com/cossacklabs/themis/pull/590)).\n- Clarified information on data privacy regulations\n  ([#593](https://github.com/cossacklabs/themis/pull/593)).\n- Removed last surviving links to deprecated GitHub Wiki\n  ([#589](https://github.com/cossacklabs/themis/pull/589)).\n\n_Infrastructure:_\n\n- Changed name of the tarball produced by `make dist` to `themis_X.Y.Z.tar.gz`\n  ([#544](https://github.com/cossacklabs/themis/pull/544)).\n- Fixed Doxygen support\n  ([#559](https://github.com/cossacklabs/themis/pull/559)).\n- Automated benchmarking harness is now tracking Themis performance.\n  See [`benches`](https://github.com/cossacklabs/themis/tree/master/benches/)\n  ([#580](https://github.com/cossacklabs/themis/pull/580),\n   [#582](https://github.com/cossacklabs/themis/pull/582)).\n- Automated regular fuzzing of the code with AFL\n  ([#579](https://github.com/cossacklabs/themis/pull/579),\n   [#583](https://github.com/cossacklabs/themis/pull/583)).\n- Added automated tests for all code samples in documentation, ensuring they are always up-to-date ([#600](https://github.com/cossacklabs/themis/pull/600)).\n- All 13 supported platforms are verified on GitHub Actions, along with existing CircleCI and Bitrise tests ([#600](https://github.com/cossacklabs/themis/pull/600)).\n- New Makefile targets:\n  - `make jsthemis` builds JsThemis from source ([#618](https://github.com/cossacklabs/themis/pull/618)).\n- Resolved issues with library search paths on CentOS\n  when Themis Core is built from source and installed with `make install`\n  ([#645](https://github.com/cossacklabs/themis/pull/645).\n- Resolved issues with library search paths on Debian\n  when Themis Core is installed from packages\n  ([#651](https://github.com/cossacklabs/themis/pull/651)).\n- Introduced `./configure` script to significantly improve rebuild performance\n  ([#611](https://github.com/cossacklabs/themis/pull/611),\n   [#628](https://github.com/cossacklabs/themis/pull/628)).\n- Improved package installation testing and platform coverage\n  ([#595](https://github.com/cossacklabs/themis/pull/595),\n   [#650](https://github.com/cossacklabs/themis/pull/650)).\n- Miscellaneous minor improvements and updates in the build system\n  ([#542](https://github.com/cossacklabs/themis/pull/542),\n   [#573](https://github.com/cossacklabs/themis/pull/573),\n   [#615](https://github.com/cossacklabs/themis/pull/615),\n   [#617](https://github.com/cossacklabs/themis/pull/617),\n   [#629](https://github.com/cossacklabs/themis/pull/629),\n   [#627](https://github.com/cossacklabs/themis/pull/627),\n   [#632](https://github.com/cossacklabs/themis/pull/632),\n   [#644](https://github.com/cossacklabs/themis/pull/644),\n   [#646](https://github.com/cossacklabs/themis/pull/646),\n   [#649](https://github.com/cossacklabs/themis/pull/649),\n   [#656](https://github.com/cossacklabs/themis/pull/656)).\n\n- <a id=\"0.13.0-new-platforms\">**New supported platforms**</a>\n\n  - CentOS 8 is now fully fully supported.\n  - Ubuntu 20.04 âFocal Fossaâ is now fully fully supported.\n  - GoThemis is now tested with Go 1.14\n    ([#595](https://github.com/cossacklabs/themis/pull/595)).\n  - SwiftThemis is now tested with Swift 5\n    ([#605](https://github.com/cossacklabs/themis/pull/605)).\n  - Kotlin API of JavaThemis is now verified by all CI platforms\n    ([#637](https://github.com/cossacklabs/themis/pull/637)).\n  - iPadOS is now officially supported target for ObjCThemis\n    ([#641](https://github.com/cossacklabs/themis/pull/641)).\n  - Node.js v14 is now supported for JsThemis and WasmThemis\n    ([#654](https://github.com/cossacklabs/themis/pull/654)).\n\n- **Breaking changes**\n\n  - <a id=\"0.13.0-drop-java-7\">Java 7 is no longer supported</a>\n    ([#633](https://github.com/cossacklabs/themis/pull/633)).\n\n    Updates in Gradle build infrastructure require Java 8.\n\n  - Debian 8 âJessieâ is no longer supported\n    ([#633](https://github.com/cossacklabs/themis/pull/633)).\n\n    This version is no longer maintained by the Debian team and it lacks Java 8.\n    We no longer provide binary packages for this distribution.\n\n  - Python 2 is no longer supported\n    ([#648](https://github.com/cossacklabs/themis/pull/648)).\n\n    Python 2 had finally reached EOL on 2020-01-01.\n    PyThemis 0.13 is the last version guaranteed to be compatible with Python 2.\n\n## [0.12.0](https://github.com/cossacklabs/themis/releases/tag/0.12.0), September 27th 2019\n\n**TL;DR:**\n- Added WasmThemis to support WebAssembly (works with Electron and Node.js);\n- added experimental support for Windows (using MSYS2 compiler and NSIS installer);\n- added support of Go Modules;\n- added package for ThemisPP;\n- added support for Node.js v12 LTS (in addition to v10 and v8) in jsThemis;\n- added extra safety checks and fixes for tricky bugs.\n\n**Breaking changes:**\n\n- **Linux:** when building from sources, the default installation path of Themis Core library has been changed from `/usr` to `/usr/local`. If youâre affected, read the instructions on how to make a clean upgrade below.\n- **Go:** some of GoThemis APIs have been renamed to comply with Go naming convention (old API are marked as deprecated and will be removed in the next release). If youâre using Go â please switch to new functions.\n- **Ruby:** deprecated `rubythemis` gem has been completely removed in favour of `rbthemis`.\n\n_Code:_\n\n- **Core**\n\n  - **Soter** (low-level security core used by Themis)\n\n    Improved security and code quality, implemented better handling of secrets and memory management. These changes decrease the chance of potential memory leaks.\n\n    - Introduced new internal function: `soter_wipe()`.\n      It can be used to securely wipe sensitive data from memory after it's no longer needed.\n      All Themis cryptosystems now use this new API ([#488](https://github.com/cossacklabs/themis/pull/488)).\n\n    - Improved usage and error handling of OpenSSL/BoringSSL PRNGs.\n      Thank you, [**@veorq**](https://github.com/veorq) for bringing up this issue ([#485](https://github.com/cossacklabs/themis/pull/485)).\n\n    - Improved memory safety and fixed potential corner-case issues in OpenSSL/BoringSSL usage.\n      Thanks, [**@outspace**](https://github.com/outspace) for identifying these issues ([#501](https://github.com/cossacklabs/themis/pull/501), [#524](https://github.com/cossacklabs/themis/pull/524), [#525](https://github.com/cossacklabs/themis/pull/525), [#535](https://github.com/cossacklabs/themis/pull/535)).\n\n  - **Key generation**\n\n    - Improved key validity checks across all Themis cryptosystems. Now itâs harder to use wrong keys or misuse them ([#486](https://github.com/cossacklabs/themis/pull/486)).\n\n    - Improved error handling for EC key generator that could produce an invalid public key without returning an error.\n      Thanks, [**@vixentael**](https://github.com/vixentael) for finding this issue ([#500](https://github.com/cossacklabs/themis/pull/500)).\n\n  - **Secure Cell**\n\n    - Improved handling of edge cases with large data buffers ([#496](https://github.com/cossacklabs/themis/pull/496), [#497](https://github.com/cossacklabs/themis/pull/497)).\n\n    - Improved performance of Secure Cell's encryption/decryption ([#496](https://github.com/cossacklabs/themis/pull/496)).\n\n  - **Library ABI**\n\n    - Themis shared libraries now have a formal ABI version.\n      This ensures that no compatibility issues arise if we ever need to introduce breaking changes in the ABI ([#454](https://github.com/cossacklabs/themis/pull/454)).\n\n    - Removed private symbols from public export lists.\n      Themis has been accidentally exporting various private utility functions.\n      Private functions not intended for public use are now hidden ([#458](https://github.com/cossacklabs/themis/pull/458), [#472](https://github.com/cossacklabs/themis/pull/472)).\n\n  - <a id=\"0.12.0-packaging-updates\">**Installation & packaging**</a>\n\n    - Themis now installs to `/usr/local` by default when building from source on Linux ([#448](https://github.com/cossacklabs/themis/pull/448)).\n\n      This _may_ be a **breaking change** if your system has non-standard precedence rules.\n      If you install Themis from source code directly, please do a clean upgrade the following way:\n\n      ```bash\n      make uninstall PREFIX=/usr\n      make install   PREFIX=/usr/local\n      ```\n\n      Please consider using [binary repositories](https://docs.cossacklabs.com/pages/documentation-themis/#installing-themis-from-repositories) to install Themis.\n      If your system or package manager is not supported yet, please let us know via dev@cossacklabs.com.\n\n    - Themis packages now support multiarch installations ([#512](https://github.com/cossacklabs/themis/pull/512)).\n\n      Multiarch enables parallel installation of 32-bit and 64-bit versions of the library.\n      This is particularly important on CentOS where some tools like _pkg-config_ would fail to locate Themis due to non-standard installation path.\n\n    - Updated Makefile to support a number of [standard GNU variables](https://www.gnu.org/prep/standards/html_node/Directory-Variables.html) like `libdir` ([#453](https://github.com/cossacklabs/themis/pull/453), [#455](https://github.com/cossacklabs/themis/pull/455)).\n\n    - Improved accuracy of package dependencies to make sure you don't have to install anything manually after installing Themis from package repositories ([#446](https://github.com/cossacklabs/themis/pull/446)).\n\n    - NSIS installer is now available for Windows. To build NSIS installer, use `make nsis_installer` command in MSYS2 environment.\n      You can read more about MSYS2 target [here](https://github.com/cossacklabs/themis/pull/469) ([#474](https://github.com/cossacklabs/themis/pull/474)).\n\n  - **Dependency updates**\n\n    - Embedded BoringSSL submodule has been updated to the latest upstream version ([#528](https://github.com/cossacklabs/themis/pull/528)).\n\n    - Only the necessary parts of embedded BoringSSL are now built, leading to 2x build speedup ([#447](https://github.com/cossacklabs/themis/pull/447)).\n\n  - **Other changes**\n\n    - Miscellaneous improvements and cleanups in the Makefile ([#450](https://github.com/cossacklabs/themis/pull/450), [#451](https://github.com/cossacklabs/themis/pull/451), [#452](https://github.com/cossacklabs/themis/pull/452), [#459](https://github.com/cossacklabs/themis/pull/459), [#523](https://github.com/cossacklabs/themis/pull/523), [#527](https://github.com/cossacklabs/themis/pull/527)).\n\n    - Core libraries are now linked dynamically to test binaries ([#460](https://github.com/cossacklabs/themis/pull/460)).\n\n- **Android**\n\n  - Embedded BoringSSL submodule has been updated to the latest upstream version ([#528](https://github.com/cossacklabs/themis/pull/528)).\n\n  - Only the necessary parts of embedded BoringSSL are now built, leading to 2x build speedup ([#447](https://github.com/cossacklabs/themis/pull/447)).\n\n- **C++**\n\n  - ThemisPP is now available as a system package through [Cossack Labs repositories](https://docs.cossacklabs.com/pages/documentation-themis/#installing-themis-from-repositories) ([#506](https://github.com/cossacklabs/themis/pull/506)).\n\n    Use\n      - `libthemispp-dev` for Debian and Ubuntu,\n      - `libthemispp-devel` for CentOS.\n\n- **Go**\n\n  - **Breaking changes**\n\n    - Some APIs have been renamed to conform with the Go naming conventions ([#424](https://github.com/cossacklabs/themis/pull/424)).\n\n      The old names are now deprecated and scheduled for removal in the next release.\n      Please migrate to using the new names when you upgrade.\n\n      | Old API                                | New API                    |\n      | -------------------------------------- | -------------------------- |\n      | `cell.CELL_MODE_SEAL`                  | `cell.ModeSeal`            |\n      | `compare.COMPARE_MATCH`                | `compare.Match`            |\n      | `keys.KEYTYPE_EC`                      | `keys.TypeEC`              |\n      | `session.STATE_ESTABLISHED`            | `session.StateEstablished` |\n      | `(*session.SecureSession) GetRemoteId` | `GetRemoteID`              |\n\n  - GoThemis is now compatible with Go 1.11 modules starting with this release.\n    For example, you are now able to pin a specific version of GoThemis in your projects ([#505](https://github.com/cossacklabs/themis/pull/505)).\n\n- **iOS, macOS**\n\n  - Example code and projects for Objective-C and Swift are now up-to-date, cleaned up, and modernised ([#463](https://github.com/cossacklabs/themis/pull/463), [#467](https://github.com/cossacklabs/themis/pull/467))\n\n  - OpenSSL version is pinned to 1.0.2.17 for Carthage package and to 1.0.2.18 to CocoaPods package as a workaround for a compilation issue with the latest versions ([#539](https://github.com/cossacklabs/themis/pull/539), [#484](https://github.com/cossacklabs/themis/pull/484)).\n\n- **Java**\n\n  - JNI wrapper for desktop Java does not require a separate installation of Themis Core from now on ([#450](https://github.com/cossacklabs/themis/pull/450)).\n\n- **Node.js**\n\n  - JsThemis now supports latest Node.js v12 LTS (in addition to v10 and v8) ([#499](https://github.com/cossacklabs/themis/pull/499),\n     [#502](https://github.com/cossacklabs/themis/pull/502)).\n\n  - JsThemis can now be used on Windows provided that Themis Core is installed to `C:\\Program Files\\Themis` ([#475](https://github.com/cossacklabs/themis/pull/475)).\n\n  - Improved error reporting when keys are misused with Secure Message objects ([#465](https://github.com/cossacklabs/themis/pull/465)).\n\n- **PHP**\n\n  - Updated PHP installer to use the latest Composer version ([#519](https://github.com/cossacklabs/themis/pull/519)).\n\n- **Ruby**\n\n  - **Breaking changes**\n\n    - `rubythemis` gem has been completely removed after being deprecated in Themis 0.11.\n      Please use `require 'rbthemis'` in your projects ([#508](https://github.com/cossacklabs/themis/pull/508)).\n\n- **Rust**\n\n  - Minor internal code style modernizations ([#466](https://github.com/cossacklabs/themis/pull/466)).\n\n- **WebAssembly**\n\n  - **WasmThemis** brings Themis to Web using [_WebAssembly_](https://webassembly.org).\n    Thank you to [**@ilammy**](https://github.com/ilammy) for adding it.\n\n    WasmThemis supports the full functionality of other Themis wrappers:\n    Secure Cell, Secure Message, Secure Session, and Secure Comparator.\n    WasmThemis package is [available via npm](https://www.npmjs.com/package/wasm-themis) as `wasm-themis`,\n    sample code can be found in [docs/examples/js](https://github.com/cossacklabs/themis/tree/master/docs/examples/js),\n    and the HowTo guide is available [on the documentation server](https://docs.cossacklabs.com/pages/js-wasm-howto/) ([#457](https://github.com/cossacklabs/themis/pull/457), [#461](https://github.com/cossacklabs/themis/pull/461), [#462](https://github.com/cossacklabs/themis/pull/462), [#473](https://github.com/cossacklabs/themis/pull/473), [#482](https://github.com/cossacklabs/themis/pull/482), [#489](https://github.com/cossacklabs/themis/pull/489), [#490](https://github.com/cossacklabs/themis/pull/490), [#491](https://github.com/cossacklabs/themis/pull/491), [#492](https://github.com/cossacklabs/themis/pull/492),[#494](https://github.com/cossacklabs/themis/pull/494), [#495](https://github.com/cossacklabs/themis/pull/495), [#498](https://github.com/cossacklabs/themis/pull/498), [#507](https://github.com/cossacklabs/themis/pull/507), [#513](https://github.com/cossacklabs/themis/pull/513)).\n\n  - WasmThemis is tested with current Node.js LTS versions, popular Web browsers, and Electron framework.\n    It is also tested for compatibility with other Themis wrappers ([#509](https://github.com/cossacklabs/themis/pull/509), [#510](https://github.com/cossacklabs/themis/pull/510), [#511](https://github.com/cossacklabs/themis/pull/511)).\n\n- **Windows**\n\n  - It is now possible to compile Themis Core for Windows using MSYS2 environment.\n    See the instructions [here](https://github.com/cossacklabs/themis/issues/522#issuecomment-527519113) ([#469](https://github.com/cossacklabs/themis/pull/469)).\n\n  - NSIS installer is now provided for the distribution of Themis on Windows.\n    It's compatible with the new MSYS2 builds ([#474](https://github.com/cossacklabs/themis/pull/474)).\n\n  - It is now possible to compile JsThemis on Windows, given that Themis Core is installed ([#475](https://github.com/cossacklabs/themis/pull/475)).\n\n  - Miscellaneous compatibility fixes should make it possible to compile Themis Core with Microsoft Visual Studio.\n    This platform does not have full official support yet, though ([#470](https://github.com/cossacklabs/themis/pull/470), [#471](https://github.com/cossacklabs/themis/pull/471)).\n\n_Docs:_\n\n- [Themis GitHub Wiki](https://github.com/cossacklabs/themis/wiki) is being deprecated.\n  Please find the latest documentation for Themis on [Cossack Labs Documentation Server](https://docs.cossacklabs.com/products/themis/). If you're used to using the [Themis Wiki](https://github.com/cossacklabs/themis/wiki) or have bookmarked a few pages for further use, don't worry - its pages and table of contents stay where they were, but each will now link to its corresponding [Cossack Labs Documentation Server](https://docs.cossacklabs.com/products/themis/) counterpart.\n\n- [Code of Conduct](https://github.com/cossacklabs/themis/blob/master/CODE_OF_CONDUCT.md) has been introduced to make sure that Themis project has a welcoming environment ([#518](https://github.com/cossacklabs/themis/pull/518)).\n\n- Improved and updated installation guides for numerous languages and platforms.\n\n\n_Infrastructure:_\n\n- New Makefile targets and use cases:\n\n  - `emmake make all` builds WasmThemis in Emscripten environment ([#475](https://github.com/cossacklabs/themis/pull/457));\n  - `make all` can be run in MSYS2 environment on Windows now ([#469](https://github.com/cossacklabs/themis/pull/469));\n  - `make nsis_installer` builds NSIS installer for Windows binaries ([#474](https://github.com/cossacklabs/themis/pull/474));\n  - `make deb` and `make rpm` now build ThemisPP packages, too ([#506](https://github.com/cossacklabs/themis/pull/506));\n  - `NO_NIST_STS` environment variable can be used to disable the long-running NIST statistical test suite when doing `make test` ([#456](https://github.com/cossacklabs/themis/pull/456)).\n\n- Removed Makefile targets:\n\n  - Deprecated `rubythemis` targets have been completely removed.\n    Use `make rbthemis_install` to install RubyThemis instead ([#508](https://github.com/cossacklabs/themis/pull/508)).\n\n- Multiple updates in the way Themis is installed and packaged.\n  The most significant are switch to `/usr/local` for installation from source code and added support for multiarch installation packages ([Read more](#0.12.0-packaging-updates)).\n\n- JsThemis and WasmThemis are now tested on all current LTS versions of Node.js ([#502](https://github.com/cossacklabs/themis/pull/502),\n   [#510](https://github.com/cossacklabs/themis/pull/510)).\n\n- Integration tests are getting stronger with WebAssembly platform being added to the suite ([#511](https://github.com/cossacklabs/themis/pull/511)).\n\n- CI servers are now using the latest RVM for testing RubyThemis ([#503](https://github.com/cossacklabs/themis/pull/503), [#504](https://github.com/cossacklabs/themis/pull/504)).\n\n\n## [0.11.1](https://github.com/cossacklabs/themis/releases/tag/0.11.1), April 1st 2019\n\n**TL;DR:** Rust-Themis can now be installed entirely from packages (repositories and crates.io), without building anything from source.\n\n_Code:_\n\n- **Rust**\n\n  - Improvements in lookup of core Themis library ([#444](https://github.com/cossacklabs/themis/pull/444)).\n\n  - Minor changes in dependencies ([#443](https://github.com/cossacklabs/themis/pull/443)).\n\n_Infrastructure:_\n\n- Minor fixes in the packaging process ([#442](https://github.com/cossacklabs/themis/pull/442)).\n\n\n## [0.11.0](https://github.com/cossacklabs/themis/releases/tag/0.11.0), March 28th 2019\n\n**TL;DR:** Added Rust Themis, added Carthage distribution for iOS and Maven distribution for Android. Improved Secure Message API and propagated it to all our language wrappers.\n\nWe found that Themis is now [recommended by OWASP](https://github.com/OWASP/owasp-mstg/blob/1.1.0/Document/0x06e-Testing-Cryptography.md#third-party-libraries) as data encryption library for mobile platforms.\n\n**Breaking changes:** We renamed `rubythemis` to `rbthemis` as a beginning of a tradition of gentle deprecations, with timely warning of all the users that can potentially be affected. We removed `themis_version()` function that allowed checking Themis' version at run-time (with no replacement function).\n\n_Code:_\n\n- **Core**\n\n  - **Fixes in Soter (low-level security core used by Themis):**\n\n    - Fixed possible null pointer deference caused by the misusage of short-circuit evaluation. Huge thanks to [@movie-travel-code](https://github.com/movie-travel-code) for pointing out ([#315](https://github.com/cossacklabs/themis/pull/315), [#314](https://github.com/cossacklabs/themis/pull/314)).\n\n    - Fixed crash in Secure Message when RSA keys are used incorrectly (swapped or empty) â a shoutout for [@ilammy](https://github.com/ilammy) and [@secumod](https://github.com/secumod) for fixing this ([#334](https://github.com/cossacklabs/themis/pull/334)).\n\n    - Fixed issue with RSA key generator silently truncating private keys â our gratitude going out to [@ilammy](https://github.com/ilammy) and [@secumod](https://github.com/secumod) again ([#335](https://github.com/cossacklabs/themis/pull/335)).\n\n    - Fixed crash that occured on re-using Secure Comparator with BoringSSL â thanks to [@ilammy](https://github.com/ilammy) and [@secumod](https://github.com/secumod) for this fix ([#347](https://github.com/cossacklabs/themis/pull/347)).\n\n    - Fixed overflow during Secure Cell decryption in Seal mode - thanks to [@ilammy](https://github.com/ilammy) and his skills in fuzz testing ([#367](https://github.com/cossacklabs/themis/pull/367)).\n\n    - Improved the test suite to catch more corner cases, including with OpenSSL-specific issues ([#323](https://github.com/cossacklabs/themis/pull/323), [#319](https://github.com/cossacklabs/themis/pull/319)).\n\n  - **Secure Session**\n\n    - Added additional safety tests for Secure Session: return error if clientID is empty (thanks [@deszip](https://github.com/deszip) for asking tough questions and mis-using clientID) ([#386](https://github.com/cossacklabs/themis/pull/386)).\n\n    - Described [thread safety code practices](https://docs.cossacklabs.com/pages/thread-safety-themis/) when using Secure Session.\n\n  - **Secure Message**\n\n    - Updated Secure Message API: divided the `wrap` function into `encrypt` and `sign`, and the `unwrap` function into `decrypt` and `verify`. The new API has more intuitive naming and should be harder to misuse, with encrypt/decrypt and sign/verify API clearly named and separated.\n\n      A common mistake with the old API was that users could accidentally use sign/verify API instead of encryption because they didn't provide a private key. The new API features more strict checks and prevents this kind of mistake.\n\n      This change doesn't affect the language wrappers you are using, so no code changes are required from you.\n\n      Documentation for the new API calls is available [in the Wiki documentation](https://docs.cossacklabs.com/pages/secure-message-cryptosystem/#implementation-details) and for each language separately (in their HowTos) ([#389](https://github.com/cossacklabs/themis/pull/389)).\n\n    - Fixed a potential memory leak in Secure Message encryption and decryption ([#398](https://github.com/cossacklabs/themis/pull/398)).\n\n  - **Code quality**\n\n    - Cleaned up circular dependencies in header files. This change has made the code cleaner and the compilation time faster ([#392](https://github.com/cossacklabs/themis/pull/392)).\n\n    - Improved code quality by fixing warnings from various compiler flags (`-Wall -Wextra -Wformat-security -Wnull-dereference -Wshift-overflow` and so on) ([#377](https://github.com/cossacklabs/themis/pull/377)).\n\n    - Formatted the code using `clang-format` and `clang-tidy`, added automated formatting for core and tests ([#418](https://github.com/cossacklabs/themis/pull/418), [#399](https://github.com/cossacklabs/themis/pull/399), [#397](https://github.com/cossacklabs/themis/pull/397), [#396](https://github.com/cossacklabs/themis/pull/396), [#395](https://github.com/cossacklabs/themis/pull/395)).\n\n  - **Other changes**\n\n    - Improved and refactored our Great Makefile to be more stable, more user-friendly, and to support OS-specific issues ([#417](https://github.com/cossacklabs/themis/pull/417), [#413](https://github.com/cossacklabs/themis/pull/413), [#348](https://github.com/cossacklabs/themis/pull/348), [#346](https://github.com/cossacklabs/themis/pull/346), [#345](https://github.com/cossacklabs/themis/pull/345), [#343](https://github.com/cossacklabs/themis/pull/343), [#321](https://github.com/cossacklabs/themis/pull/321)).\n\n    - Removed `themis_version()` function and all related API for querying Themis and Soter versions at run-time. There is no replacement for it and this is obviously a breaking change ([#388](https://github.com/cossacklabs/themis/pull/388)).\n\n- **Rust**\n\n  - Introduced Rust Themis wrapper, all work done by brilliant [@ilammy](https://github.com/ilammy)!\n\n    Rust Themis supports the same functionality as other Themis wrappers: Secure Cell, Secure Message, Secure Session, and Secure Comparator. Rust Themis package is available through [crates.io](https://crates.io/crates/themis), examples are stored in [docs/examples/rust](https://github.com/cossacklabs/themis/tree/master/docs/examples/rust), the HowTo guide is available [in Wiki](https://docs.cossacklabs.com/pages/rust-howto/) ([#419](https://github.com/cossacklabs/themis/pull/419), [#405](https://github.com/cossacklabs/themis/pull/405), [#403](https://github.com/cossacklabs/themis/pull/403), [#390](https://github.com/cossacklabs/themis/pull/390), [#383](https://github.com/cossacklabs/themis/pull/383), [#382](https://github.com/cossacklabs/themis/pull/382), [#381](https://github.com/cossacklabs/themis/pull/381), [#380](https://github.com/cossacklabs/themis/pull/380), [#376](https://github.com/cossacklabs/themis/pull/376), [#375](https://github.com/cossacklabs/themis/pull/375), [#374](https://github.com/cossacklabs/themis/pull/374), [#373](https://github.com/cossacklabs/themis/pull/373), [#372](https://github.com/cossacklabs/themis/pull/372), [#365](https://github.com/cossacklabs/themis/pull/365), [#363](https://github.com/cossacklabs/themis/pull/363), [#362](https://github.com/cossacklabs/themis/pull/362), [#358](https://github.com/cossacklabs/themis/pull/358), [#357](https://github.com/cossacklabs/themis/pull/357), [#356](https://github.com/cossacklabs/themis/pull/356), [#353](https://github.com/cossacklabs/themis/pull/353), [#349](https://github.com/cossacklabs/themis/pull/349), [#340](https://github.com/cossacklabs/themis/pull/340)).\n\n- **iOS and macOS**\n\n  - Added Carthage support. Now users can add Themis to their Cartfile using `github \"cossacklabs/themis\"`.\n\n    More details available in [Objective-C HowTo](https://docs.cossacklabs.com/pages/objective-c-howto/) and [Swift HowTo](https://docs.cossacklabs.com/pages/swift-howto/). Example projects available in [docs/examples/objc](https://github.com/cossacklabs/themis/tree/master/docs/examples/objc) and [docs/examples/swift/](https://github.com/cossacklabs/themis/tree/master/docs/examples/swift) folders ([#432](https://github.com/cossacklabs/themis/pull/432), [#430](https://github.com/cossacklabs/themis/pull/430), [#428](https://github.com/cossacklabs/themis/pull/428), [#427](https://github.com/cossacklabs/themis/pull/427)).\n\n  - Added BoringSSL support, now users can select which crypto-engine they want to include. This change affects only Themis CocoaPod: users can add Themis based on BoringSSL to their Podfile using `pod 'themis/themis-boringssl'` ([#351](https://github.com/cossacklabs/themis/pull/351), [#331](https://github.com/cossacklabs/themis/pull/331), [#330](https://github.com/cossacklabs/themis/pull/330), [#329](https://github.com/cossacklabs/themis/pull/329)).\n\n  - Added bitcode support. This affects only Themis CocoaPod that uses OpenSSL â thanks [@deszip](https://github.com/deszip) and [@popaaaandrei](https://github.com/popaaaandrei) ([#407](https://github.com/cossacklabs/themis/pull/407), [#355](https://github.com/cossacklabs/themis/pull/355), [#354](https://github.com/cossacklabs/themis/pull/354)).\n\n  - Added compatibility for Swift frameworks. Now Themis can be used directly from Swift without Bridging header file, kudos to [@popaaaandrei](https://github.com/popaaaandrei) for pointing on this out ([#416](https://github.com/cossacklabs/themis/pull/416), [#415](https://github.com/cossacklabs/themis/pull/415)).\n\n  - Updated code to use the latest Secure Message API (see description of core changes above). This change doesn't affect user-facing code so no code changes are required from users ([#393](https://github.com/cossacklabs/themis/pull/393)).\n\n  - Updated error codes and error messages for all crypto systems, now errors and logs are more user-friendly and understandable ([#394](https://github.com/cossacklabs/themis/pull/394), [#393](https://github.com/cossacklabs/themis/pull/393)).\n\n  - Improved code quality here and there ([#317](https://github.com/cossacklabs/themis/pull/317)).\n\n  - Dropped feature flag `SECURE_COMPARATOR_ENABLED` because it's redundant: Secure Comparator is enabled by default ([#429](https://github.com/cossacklabs/themis/pull/429)).\n\n- **macOS specific**\n\n  - Added Homebrew support for Themis Core. Now users can install Themis Core library using `brew tap cossacklabs/tap && brew update && brew install libthemis`. This is useful when you're developing on macOS.\n\n  More details can be found in [the Installation guide](https://docs.cossacklabs.com/pages/documentation-themis/#macos).\n\n- **C++**\n\n  - Improved Secure Session memory behavior (now users can move and copy Secure Session objects and callbacks) ([#370](https://github.com/cossacklabs/themis/pull/370), [#369](https://github.com/cossacklabs/themis/pull/369)).\n\n  - Allowed to link ThemisPP as header-only library by adding \"inline\" functions â thanks [@deszip](https://github.com/deszip) for pushing us. Check for detailed instructions in [C++ HowTo](https://docs.cossacklabs.com/pages/cpp-howto/) ([#371](https://github.com/cossacklabs/themis/pull/371)).\n\n  - Added support of smart pointer constructors for Secure Session, now users should use `std::shared_ptr<secure_session_callback_interface_t>` constructor ([#378](https://github.com/cossacklabs/themis/pull/378)).\n\n  - Added functions for key validation: now you can check if keypairs are valid before using it for encryption/decryption ([#389](https://github.com/cossacklabs/themis/pull/389)).\n\n  - Updated test suite to test C++03 and C++11 ([#379](https://github.com/cossacklabs/themis/pull/379)).\n\n  - Updated error codes and error messages for all crypto systems, now errors and logs are more user-friendly and understandable ([#385](https://github.com/cossacklabs/themis/pull/385)).\n\n  - Formatted code using `clang-format` rules and implemented some `clang-tidy` recommendations ([#410](https://github.com/cossacklabs/themis/pull/410), [#404](https://github.com/cossacklabs/themis/pull/404)).\n\n- **Java**\n\n  - Updated Secure Message API: separated function `wrap` into `encrypt` and `sign`, and function `unwrap` into `decrypt` and `verify`. Old functions are still available, but will be deprecated eventually ([#389](https://github.com/cossacklabs/themis/pull/389)).\n\n  - Significantly improved [Themis usage examples for Desktop Java](https://github.com/cossacklabs/themis-java-examples) - thanks to [@Dimdron](https://github.com/Dimdron) [#3](https://github.com/cossacklabs/themis-java-examples/pull/3).\n\n  - Formatted JNI code using `clang-format` rules and implemented some `clang-tidy` recommendations ([#420](https://github.com/cossacklabs/themis/pull/420)).\n\n- **Android**\n\n  - Added Maven distribution ([#361](https://github.com/cossacklabs/themis/pull/361)).\n\n    The new installation process requires adding only two lines to the Maven app configuration (instead of manually re-compiling the whole Themis library)!\n    See the updated [HowTo guide](https://docs.cossacklabs.com/pages/java-and-android-howto/) in Wiki.\n\n  - Significantly improved [Themis usage examples for Android](https://github.com/cossacklabs/themis-java-examples) - thanks to [@Dimdron](https://github.com/Dimdron) [#3](https://github.com/cossacklabs/themis-java-examples/pull/3).\n\n  - Significantly improved [Secure mobile websocket example](https://github.com/cossacklabs/mobile-websocket-example) - thanks to [@sergeyzenchenko](https://github.com/sergeyzenchenko) [#4](https://github.com/cossacklabs/mobile-websocket-example/pull/4).\n\n  - Formatted JNI code using `clang-format` rules and implemented some `clang-tidy` recommendations ([#420](https://github.com/cossacklabs/themis/pull/420)).\n\n- **Go**\n\n  - Updated code to use the latest Secure Message API (see the description of core changes above). This change doesn't affect user-facing code so no code changes are required from users ([#400](https://github.com/cossacklabs/themis/pull/400)).\n\n  - Formatted code and fixed `gofmt` and `golint` warnings ([#426](https://github.com/cossacklabs/themis/pull/426), [#424](https://github.com/cossacklabs/themis/pull/424), [#432](https://github.com/cossacklabs/themis/pull/423), [#422](https://github.com/cossacklabs/themis/pull/422)).\n\n- **Node.js**\n\n  - Fixed jsthemis to be compatible with Node 10, huge thanks to [@deszip](https://github.com/deszip) ([#327](https://github.com/cossacklabs/themis/pull/327), [#326](https://github.com/cossacklabs/themis/pull/326)).\n\n  - Updated error codes and error messages for all crypto systems, now errors and logs are more user-friendly and understandable ([#384](https://github.com/cossacklabs/themis/pull/384)).\n\n  - Fixed memory corruption tests on i386 systems ([#408](https://github.com/cossacklabs/themis/pull/408)).\n\n  - Formatted native extension code using `clang-format` rules and implemented some `clang-tidy` recommendations ([#412](https://github.com/cossacklabs/themis/pull/412)).\n\n- **PHP**\n\n  - Updated PHP installer to use the latest Composer installer ([#360](https://github.com/cossacklabs/themis/pull/360), [#328](https://github.com/cossacklabs/themis/pull/328)).\n\n- **Python**\n\n  - Updated code to use the latest Secure Message API (see description of core changes above). This change doesn't affect user-facing code so no code changes are required from users ([#401](https://github.com/cossacklabs/themis/pull/401)).\n\n  - Updated error codes and error messages for all crypto systems, now errors and logs are more user-friendly and understandable ([#401](https://github.com/cossacklabs/themis/pull/401)).\n\n- **Ruby**\n\n  - Updated code to use latest Secure Message API (see description of core changes above). This change doesn't affect user-facing code so no code changes are required from users ([#402](https://github.com/cossacklabs/themis/pull/402)).\n\n  - Updated error codes and error messages for all crypto systems, now errors and logs are more user-friendly and understandable ([#402](https://github.com/cossacklabs/themis/pull/402)).\n\n  - Deprecated `rubythemis` in favor of `rbthemis`. Users should use `require 'rbthemis'` in their projects ([#434](https://github.com/cossacklabs/themis/pull/434)).\n\n- **Tests and other things**\n\n  - Added tools for fuzzing testing and tests on Themis Core ([#421](https://github.com/cossacklabs/themis/pull/421), [#368](https://github.com/cossacklabs/themis/pull/368), [#366](https://github.com/cossacklabs/themis/pull/366), [#364](https://github.com/cossacklabs/themis/pull/364)).\n\n  - Updated BoringSSL submodule configuration to use Clang while building ([#352](https://github.com/cossacklabs/themis/pull/352)).\n\n  - Updated NIST test suite: improved readability, maintainability, and output of NIST STS makefile, added build files to gitignore ([#414](https://github.com/cossacklabs/themis/pull/414)).\n\n\n_Docs:_\n\n- Described the new [Secure Message API](https://docs.cossacklabs.com/pages/secure-message-cryptosystem/#implementation-details): how we divided the `wrap` function into `encrypt` and `sign`, and the `unwrap` function â into `decrypt` and `verify` to make it more obvious for the users.\n\n- Described [thread safety code practices](https://docs.cossacklabs.com/pages/thread-safety-themis/) when using Secure Session.\n\n- Improved installation guides for numerous languages.\n\n\n_Infrastructure:_\n\n- Added Homebrew support for Themis Core. Now users can install Themis Core libraby using `brew tap cossacklabs/tap && brew update && brew install libthemis`. This is useful when you're developing on macOS. More details can be found in [the Installation guide](https://docs.cossacklabs.com/pages/documentation-themis/#macos).\n\n- Added [installation guide on using Docker container](https://docs.cossacklabs.com/pages/documentation-themis/#themis-with-docker) as a building environment for Themis: if you can't download Themis Core from packages, feel free to use Docker container for this.\n\n\n## [0.10.0](https://github.com/cossacklabs/themis/releases/tag/0.10.0), February 6th 2018\n\n**TL;DR:** Multi-platform, multi-language compatibility improved.\n\nâ ï¸ _Incompatibility issues:_\n\n- If you are using Themis on x64 systems, consider upgrading every Themis library/wrapper you were using to `0.10.0`. Incompatibility issues may arise between previous Themis versions and `0.10.0` on x64 machines ([#279](https://github.com/cossacklabs/themis/pull/279)).\n\n- Rubythemis has breaking changes for Secure Cell Token Protect mode ([#281](https://github.com/cossacklabs/themis/pull/281)). We added checks for other language wrappers to make sure this won't happen again ([#282](https://github.com/cossacklabs/themis/pull/282), [#283](https://github.com/cossacklabs/themis/pull/283)).\n\nCheck the [Migration Guide](https://docs.cossacklabs.com/pages/migration-guide-themis-v096-themis-0100/) for more details.\n\n_Docs:_\n\n- Updated the descriptions of [Crypto systems](https://docs.cossacklabs.com/pages/cryptosystems/), added more usage examples and code samples.\n- Refreshed code samples in language tutorials, made them more readable.<br/>[Obj-C](https://docs.cossacklabs.com/pages/objective-c-howto/) | [Swift](https://docs.cossacklabs.com/pages/swift-howto/) | [Java and Android](https://docs.cossacklabs.com/pages/java-and-android-howto/) | [Python](https://docs.cossacklabs.com/pages/python-howto/) | [PHP](https://docs.cossacklabs.com/pages/php-howto/) | [Ruby](https://docs.cossacklabs.com/pages/ruby-howto/) | [C++](https://docs.cossacklabs.com/pages/cpp-howto/) | [Go](https://docs.cossacklabs.com/pages/go-howto/) | [Node.js](https://docs.cossacklabs.com/pages/nodejs-howto/).\n- Added human-friendly description of [Secure Comparator](https://docs.cossacklabs.com/pages/secure-comparator-cryptosystem/) and supplied usage examples for all languages with the exception of PHP.\n\n_Infrastructure:_\n\n- Added support of _Ubuntu 17.10_.\n- Removed support of _Ubuntu 16.10_ and _Ubuntu 17.04_ (no more compiled binaries for these OSs now).\n- Added CLI utils for easy testing of Secure Cell, Secure Message, and Key generation on local machine. Available for Python, Ruby, Go, NodeJS, and PHP. Check the [Console Utils](https://docs.cossacklabs.com/pages/documentation-themis/#encrypt-decrypt-console-utils) guide for more details and usage description/guide.\n- Added [Integration test suit](https://github.com/cossacklabs/themis/tree/master/tests/_integration) for the majority of the available language wrappers, which was the catalyst for many fixes in this release.\n- Added support of CircleCI 2.0 with multiple workflows. This allows testing each language wrapper and integrations between them easily and quickly ([#295](https://github.com/cossacklabs/themis/pull/295), [#299](https://github.com/cossacklabs/themis/pull/299)).\n\n\n_Code:_\n\n- **Core:**\n  - Fixed incompatibility issue that existed in Secure Cell between x32 and x64 machines ([#279](https://github.com/cossacklabs/themis/pull/279));\n  - Added C examples for using buffer API in Secure Session ([#271](https://github.com/cossacklabs/themis/pull/271));\n  - Fixed possible SigFault in Secure Message at the point of providing an incorrect private key path ([#286](https://github.com/cossacklabs/themis/pull/286)).\n- **C++ wrapper:**\n  - Added a set of unit tests ([#292](https://github.com/cossacklabs/themis/pull/292)).\n- **Android wrapper**:\n  - simplified Android build by providing a ready-to-use Docker container. No need to compile BoringSSL manually now! ([#273](https://github.com/cossacklabs/themis/pull/273) by [@secumod](https://github.com/secumod)).\n- **iOS wrapper:**\n  - Updated Secure Comparator definitions and provided code samples ([#287](https://github.com/cossacklabs/themis/pull/287), [#288](https://github.com/cossacklabs/themis/pull/288)).\n- **GoThemis:**\n  - Added `get_remote_id` function, which is making SecureSession easier to use ([#272](https://github.com/cossacklabs/themis/pull/272));\n  - Added [CLI utils](https://docs.cossacklabs.com/pages/documentation-themis/#encrypt-decrypt-console-utils) and integration tests that allow you to test Secure Cell, Secure Message, and Key generation on your local machine ([#277](https://github.com/cossacklabs/themis/pull/277), [#293](https://github.com/cossacklabs/themis/pull/293), [#305](https://github.com/cossacklabs/themis/pull/305), [#306](https://github.com/cossacklabs/themis/pull/306)).\n- **JSThemis:**\n  - Added a separate installation step in Makefile. Now you can install jsthemis via `make jsthemis_install` ([#302](https://github.com/cossacklabs/themis/pull/302));\n  - Added [CLI utils](https://docs.cossacklabs.com/pages/documentation-themis/#encrypt-decrypt-console-utils) and integration tests that allow you to test Secure Cell, Secure Message, and Key generation on your local machine ([#277](https://github.com/cossacklabs/themis/pull/277), [#293](https://github.com/cossacklabs/themis/pull/293), [#305](https://github.com/cossacklabs/themis/pull/305), [#306](https://github.com/cossacklabs/themis/pull/306)).\n- **RubyThemis:**\n  - Fixed arguments' order for Secure Cell in the Token Protect mode, which caused incompatibility with older versions of rubythemis ([#281](https://github.com/cossacklabs/themis/pull/281)). Please check the [migration guide](https://docs.cossacklabs.com/pages/migration-guide-themis-v096-themis-0100/) for the details;\n  - Added [CLI utils](https://docs.cossacklabs.com/pages/documentation-themis/#encrypt-decrypt-console-utils) and integration tests that allow you to test Secure Cell, Secure Message, and Key generation on your local machine ([#277](https://github.com/cossacklabs/themis/pull/277), [#293](https://github.com/cossacklabs/themis/pull/293), [#305](https://github.com/cossacklabs/themis/pull/305), [#306](https://github.com/cossacklabs/themis/pull/306))\n- **PyThemis:**\n  - Improved the installation process via Makefile for python3 users ([#300](https://github.com/cossacklabs/themis/pull/300));\n  - Added [CLI utils](https://docs.cossacklabs.com/pages/documentation-themis/#encrypt-decrypt-console-utils) and integration tests that allow you to test Secure Cell, Secure Message, and Key generation on your local machine ([#277](https://github.com/cossacklabs/themis/pull/277), [#293](https://github.com/cossacklabs/themis/pull/293), [#305](https://github.com/cossacklabs/themis/pull/305), [#306](https://github.com/cossacklabs/themis/pull/306)).\n- **PHPThemis:**\n  - Added support of PHP 7.0, 7.1, 7.2 ([#278](https://github.com/cossacklabs/themis/pull/278), [#280](https://github.com/cossacklabs/themis/pull/280));\n  - Added a package for `phpthemis`. Now you don't need to compile it from sources. See the installation [PHP guide](https://docs.cossacklabs.com/pages/php-howto/#installing-stable-version-from-packages) for more details;\n  - Improved [unit tests](https://docs.cossacklabs.com/pages/php-howto/#installing-stable-version-from-packages). Now it's easy to run tests because all the dependencies are handled by a php-composer ([#284](https://github.com/cossacklabs/themis/pull/284), [#285](https://github.com/cossacklabs/themis/pull/285), [#303](https://github.com/cossacklabs/themis/pull/303));\n  - Added a memory test suit, which allows us to keep a closer eye on PHPThemis' memory usage ([#298](https://github.com/cossacklabs/themis/pull/298));\n  - Added [CLI utils](https://docs.cossacklabs.com/pages/documentation-themis/#encrypt-decrypt-console-utils) and integration tests that allow you to test Secure Cell, Secure Message, and Key generation on your local machine ([#277](https://github.com/cossacklabs/themis/pull/277), [#293](https://github.com/cossacklabs/themis/pull/293), [#305](https://github.com/cossacklabs/themis/pull/305), [#306](https://github.com/cossacklabs/themis/pull/306)).\n\n\n## [0.9.6](https://github.com/cossacklabs/themis/releases/tag/0.9.6), December 14th 2017\n\n**TL;DR:** OpenSSL 1.1 support.\n\n_Docs:_\n\n- Significant update of the [Contributing section](https://docs.cossacklabs.com/pages/documentation-themis/#contributing-to-themis).\n\n_Infrastructure:_\n\n- Removed support for _Ubuntu Precise_.\n- Fixed `.rpm` package versioning ([#240](https://github.com/cossacklabs/themis/pull/240)).\n- Added a handy command for preparing and running of all the tests `make test` ([#243](https://github.com/cossacklabs/themis/issues/243)).\n- Added small changes and updates into [Makefile](https://github.com/cossacklabs/themis/blob/master/Makefile) to make it even better and fixed the installing dependencies ([#236](https://github.com/cossacklabs/themis/pull/236), [#239](https://github.com/cossacklabs/themis/pull/239), [#250](https://github.com/cossacklabs/themis/pull/250)).\n\n\n_Code:_\n\n- **Core:**\n  - added OpenSSL 1.1 support ([#208](https://github.com/cossacklabs/themis/issues/208)).\n- **Android wrapper**:\n  - fixed Secure Cell in token protect mode ([#251](https://github.com/cossacklabs/themis/pull/251));\n  - fixed casting warnings in JNI code ([#246](https://github.com/cossacklabs/themis/pull/246)).\n- **iOS wrapper:**\n  - updated wrapper to be compatible with Swift4 ([#230](https://github.com/cossacklabs/themis/issues/230));\n  - added nullability support ([#255](https://github.com/cossacklabs/themis/pull/255));\n  - made the NSError autoreleasing ([#257](https://github.com/cossacklabs/themis/pull/257), [#259](https://github.com/cossacklabs/themis/pull/259)) from [@valeriyvan](https://github.com/valeriyvan);\n  - fixed warnings that appeared due to renaming `error.h` files ([#247](https://github.com/cossacklabs/themis/pull/247));\n  - updated and refactored tests ([#231](https://github.com/cossacklabs/themis/pull/231), [#232](https://github.com/cossacklabs/themis/pull/232)).\n- **GoThemis:**\n   - added compatibility with old Go (1.2) ([#253](https://github.com/cossacklabs/themis/issues/253));\n   - fixed tests ([#261](https://github.com/cossacklabs/themis/pull/261)).\n- **JSThemis:**\n  - fixed installation path for macOS ([#237](https://github.com/cossacklabs/themis/issues/237), [#238](https://github.com/cossacklabs/themis/pull/238/)).\n- **PyThemis:**\n  - fixed compatibility with version 0.9.5 ([#241](https://github.com/cossacklabs/themis/pull/241)), pushed as a separate package [0.9.5.1](https://pypi.python.org/pypi/pythemis/0.9.5.1).\n\n\n## [0.9.5](https://github.com/cossacklabs/themis/releases/tag/0.9.5), September 13th 2017\n\n**TL;DR:** Mostly usability fixes for wrappers.\n\n_Infrastructure:_\n\n- You can now download pre-built Themis packages from **our package server**.\n- Enhanced building process for **MacOS** (working now!) ([#215](https://github.com/cossacklabs/themis/issues/215)).\n- Enhanced building process for **Debian 9.x** (working even better now!).\n- Updated documentation and examples to make it easier to understand.\n- Now we use Bitrise as a separate CI for iOS wrapper.\n- Test and code coverage are automagically measured now!\n\n_Code:_\n\n- **Core:** disabled SHA1 support.\n- **Secure Comparator:** magically improved code readability ([#196](https://github.com/cossacklabs/themis/issues/196), [#195](https://github.com/cossacklabs/themis/issues/195)).\n- **iOS wrapper:** added support of dynamic frameworks and bitcode ([#222](https://github.com/cossacklabs/themis/issues/222), [#219](https://github.com/cossacklabs/themis/issues/219), [#205](https://github.com/cossacklabs/themis/issues/205)).\n- **GoThemis:** refactored custom error (`themisError`) type.\n- **PHP wrapper:** updated tests.\n- **PyThemis:** considerably improved example projects.\n\n\n## [0.9.4](https://github.com/cossacklabs/themis/releases/tag/0.9.4), November 22nd 2016\n\nThis is tiny intermediary release to lock ongoing changes in stable form for all languages:\n\n* **BoringSSL** support on **Android** and **Linux**\n* Fixed some leaks and code styling problems (thanks to [@bryongloden](https://github.com/bryongloden))\n* Memory management updates for stability in languages, which rely on sloppy GC\n* Fix Themis build errors under certain conditions\n* **Secure Comparator** examples for many languages\n* **Swift3** support + numerous enhancements from [@valeriyvan](https://github.com/valeriyvan), thanks a lot!\n* **GoThemis**: fixed rare behavior in Secure Session wrapper\n* GoThemis examples\n* **JsThemis** syntax corrections and style fixes\n* JsThemis Nan usage to enhance compatibility\n* More and better **Themis Server examples**\n* Enhanced **error messages** (now with proper spelling!)\n* Corrections for **[RD_Themis](https://github.com/cossacklabs/rd_themis)**\n\n## [0.9.3.1](https://github.com/cossacklabs/themis/releases/tag/0.9.3.1), August 24th 2016\n\nUpdating podspec to be compatible with CocoaPods 1.0\n\n\n## [0.9.3](https://github.com/cossacklabs/themis/releases/tag/0.9.3), May 24th 2016\n\n_Infrastructure_:\n* Lots of new high-level language wrappers\n* Enhanced **[documentation](https://docs.cossacklabs.com/products/themis/)**\n* Lots of various demo projects\n* Updated **[Themis Server](https://themis.cossacklabs.com)**\n* Better **make** system verbosity (now you can actually see what succeeded and what didn't)\n* Infrastructure to **build Java** on all platforms\n\n_Code_:\n* **iOS wrapper** now has umbrella header.\n* We added **Swift** language [examples](https://github.com/cossacklabs/themis/tree/master/docs/examples/swift) and [howto](https://docs.cossacklabs.com/pages/swift-howto/).\n* Themis wrapper for **Go** language: [howto](https://docs.cossacklabs.com/pages/go-howto/) (examples coming soon).\n* Themis wrapper for **NodeJS**: [examples](https://github.com/cossacklabs/themis/tree/master/docs/examples/nodejs) and [howto](https://docs.cossacklabs.com/pages/nodejs-howto/).\n* Google Chrome-friendly spin-off called [WebThemis](https://github.com/cossacklabs/webthemis) was released.\n* Themis wrapper for **C++**: [examples](https://github.com/cossacklabs/themis/tree/master/docs/examples/c%2B%2B) and [HowTo](https://docs.cossacklabs.com/pages/cpp-howto/).\n* **[Secure Comparator](https://www.cossacklabs.com/files/secure-comparator-paper-rev12.pdf)** got [serious updates](https://cossacklabs.com/fixing-secure-comparator.html) to eliminate possible security drawbacks pointed out by cryptographic community.\n\n\n## [0.9.2](https://github.com/cossacklabs/themis/releases/tag/0.9.2), November 4th 2015\n\n_Infrastructure_:\n\n- **Much better documentation**\n- We've introduced **Themis Server**, interactive environment to debug your apps and learn how Themis works.\n- **Tests** for all platforms and languages.\n- Themis is now integrated with **Circle CI**, with controls every repository change and tests it\n- Added **conditional compilation for advanced features** (see 4.5 and our blog for more information)\n- **Doxygen**-friendly comments in code\n\n_Code_:\n\n- **Python Themis wrapper** is now Python 3 / PEP friendly.\n- **Android Themis wrapper** for Secure Message now works in Sign/Verify mode, too.\n- **PHP Themis** wrapper now supports Secure Session (although with some advice on use cases, see docs).\n- **iOS wrapper** supports iOS 9, lots of minor fixes.\n- **Better exceptions** and verbose errors in some wrappers.\n- **Longer RSA keys** support\n- **Better abstractions for cryptosystem parameters** like key lengths.\n- **Zero Knowledge Proof-based authentication** called Secure Comparator. Advanced experimental feature.\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 1.8671875,
          "content": "project(themis)\ncmake_minimum_required(VERSION 3.8)\ninclude_directories(src)\n\nif (NO_NIST_STS)\nadd_definitions(-DNO_NIST_STS=1)\nendif()\n\nfile(GLOB SOTER_SOURCE_FILES src/soter/*.c src/soter/openssl/*.c src/soter/ed25519/*)\nadd_library(soter ${SOTER_SOURCE_FILES})\nadd_library(soter_shared SHARED ${SOTER_SOURCE_FILES})\nset_target_properties(soter_shared PROPERTIES OUTPUT_NAME soter)\ntarget_compile_definitions(soter PRIVATE \"DNIST_STS_EXE_PATH=tests/soter/nist-sts\")\ntarget_compile_options(soter PRIVATE -std=gnu99)\n\ntarget_compile_definitions(soter_shared PRIVATE \"DNIST_STS_EXE_PATH=tests/soter/nist-sts\")\ntarget_compile_options(soter_shared PRIVATE -std=gnu99)\n\nfile(GLOB_RECURSE THEMIS_SOURCE_FILES src/themis/*.c)\nadd_library(themis ${THEMIS_SOURCE_FILES})\nadd_library(themis_shared SHARED ${THEMIS_SOURCE_FILES})\nset_target_properties(themis_shared PROPERTIES OUTPUT_NAME themis)\n\nfile(GLOB SOTER_TEST_SOURCE tests/soter/*.c tests/common/*.c )\nfile(GLOB THEMIS_TEST_SOURCE tests/themis/*.c tests/common/*.c)\n\nadd_executable(soter_test ${SOTER_TEST_SOURCE} )\ntarget_include_directories(soter_test PRIVATE tests)\ntarget_link_libraries(soter_test soter crypto)\n\nadd_executable(themis_test ${THEMIS_TEST_SOURCE} ${SOTER_SOURCE_FILES})\ntarget_include_directories(themis_test PRIVATE tests)\ntarget_link_libraries(themis_test soter crypto themis)\n\nfile(GLOB THEMISPP_SOURCE src/wrappers/themis/themispp/*.hpp)\nadd_library(themispp ${THEMISPP_SOURCE})\ntarget_link_libraries(themispp soter themis)\nset_target_properties(themispp PROPERTIES LINKER_LANGUAGE CXX)\n\nfile(GLOB THEMISPP_TEST_SOURCE tests/themispp/*.hpp tests/themispp/*.cpp tests/common/*)\nadd_executable(themispp_test ${THEMISPP_TEST_SOURCE})\ntarget_include_directories(themispp_test PUBLIC tests src/wrappers/themis)\ntarget_link_libraries(themispp_test themispp themis soter crypto)\nset_target_properties(themispp_test PROPERTIES LINKER_LANGUAGE CXX)\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 1.0966796875,
          "content": "# Default reviewer set\n*                   @vixentael @Lagovas\n/src/soter/         @vixentael @Lagovas @ilammy @G1gg1L3s\n/src/themis/        @vixentael @Lagovas @ilammy @G1gg1L3s\n\n# Build system\nMakefile            @vixentael @ilammy @shadinua\n*.mk                @vixentael @ilammy @shadinua\n*.sh                @vixentael @ilammy @shadinua\n\n# rust-themis\nCargo.toml          @vixentael @ilammy @iamnotacake @G1gg1L3s\n*.rs                @vixentael @ilammy @iamnotacake @G1gg1L3s\n\n# Land of the Fruit\n/docs/examples/objc         @vixentael @julepka\n/docs/examples/swift        @vixentael @julepka\n/src/wrappers/themis/Obj-C  @vixentael @julepka\n/tests/objcthemis           @vixentael @julepka\n*.podspec                   @vixentael @julepka\n*.xcodeproj                 @vixentael @julepka\n*.xcworkspace               @vixentael @julepka\nCartfile*                   @vixentael @julepka\nPackage.swift               @vixentael @julepka\nPodfile*                    @vixentael @julepka\n\n/docs/reference-implementation  @vixentael @Lagovas @ilammy @G1gg1L3s\n/tests/reference-implementation @vixentael @Lagovas @ilammy @G1gg1L3s\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.8232421875,
          "content": "# Contributor Covenant Code of Conduct    \n\n## A note on Code of Conduct for Themis    \n\nAt [Cossack Labs](https://www.cossacklabs.com/), we consider the current version of\n[Covenant Code of Conduct](https://www.contributor-covenant.org/version/1/4/code-of-conduct.md)\nto be the one that best represents our views on contributing standards.    \n**TL;DR** - be respectful to other sentient beings and check out\n[Contributing to Themis](https://github.com/cossacklabs/themis/blob/master/CONTRIBUTING.md)\nbefore you decide to create and commit something to [Themis](https://github.com/cossacklabs/themis).\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at dev@cossacklabs.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.9267578125,
          "content": "# Contributing to Themis\n\nThemis is an open-source, Apache 2 licensed software, maintained by [Cossack Labs](https://www.cossacklabs.com) for building reliable cryptography in our products: [Acra](https://www.github.com/cossacklabs/acra), [Hermes](https://www.cossacklabs.com/hermes), and [Toughbase](https://www.cossacklabs.com/toughbase). You can hack it in any way you want and contribute things back if you need something more than what we provide. As a development company, we focus on implementing features that are important to our products but would gladly spend some time to make Themis useful for everybody.\n\nWe highly encourage you to: \n\n  - Ask questions and participate in [discussions on GitHub](https://github.com/cossacklabs/themis/discussions).\n  - Report any bugs and request features via [GitHub Issues](https://github.com/cossacklabs/themis/issues).\n  - Report bugs that you have fixes with a patch via [GitHub Pull request](https://github.com/cossacklabs/themis/pulls) (after issuing a corresponding issue and leaving a link to pull there).\n  - Add something new to Themis. There is a certain design scheme according to which we'd like to keep developing Themis. If your contributions fall along with it, we'd be more than glad to accept some fundamental additions. It's better to discuss the subject using [email](mailto:dev@cossacklabs.com) before taking action.\n\n\nEvery commit that goes into the master branch is audited and reviewed by somebody from Cossack Labs, so don't be surprised if it takes longer than you expect. \n\n## \"I'd like to help somehow, but don't know what will be useful. What should I do?\"\n\nIf you're looking for something to contribute to and gain eternal respect,\njust pick the things in the [list of issues](https://github.com/cossacklabs/themis/issues)\nand let us know via [email](mailto:dev@cossacklabs.com),\nor raise a [new issue](https://github.com/cossacklabs/themis/issues)\nto make sure nobody's on it yet.\n\nIssues marked as [\"enhancement\"](https://github.com/cossacklabs/themis/issues?utf8=%E2%9C%93&q=is%3Aissue%20is%3Aopen%20label%3Aenhancement%20) are a great place to start.\n\nIf you'd like to do independent parts (implement new procedures/objects, create a language wrapper or a set of examples for languages or architectures we don't have and don't even plan yet) â just go ahead and let us know when you finish. \n\nIf you'd like to participate in the core development more closely, [get in touch](mailto:dev@cossacklabs.com). \n\n### Getting in touch\n\n- Requests/bugfixes/queries should go through [GitHub Issues](https://github.com/cossacklabs/themis/issues)\n- To reach the developers, use [dev@cossacklabs.com](mailto:dev@cossacklabs.com).\n- See more information [on contributing](https://docs.cossacklabs.com/themis/community/contributing/) and [Themis community](https://docs.cossacklabs.com/themis/community/).\n- To talk to the business wing of Cossack Labs, drop us an email to [info@cossacklabs.com](mailto:info@cossacklabs.com).\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.212890625,
          "content": "[workspace]\nmembers = [\n    \"benches/themis\",\n    \"benches/rust\",\n    \"src/wrappers/themis/rust\",\n    \"src/wrappers/themis/rust/libthemis-sys\",\n    \"tools/rust\",\n]\ndefault-members = [\n    \"src/wrappers/themis/rust\",\n]\n"
        },
        {
          "name": "Cartfile",
          "type": "blob",
          "size": 0.1923828125,
          "content": "# OpenSSL 1.1.1v - we need this to build themis framework. \nbinary \"https://raw.githubusercontent.com/cossacklabs/openssl-apple/cossacklabs/carthage/openssl-static-xcframework.json\" == 1.1.12201\n \n"
        },
        {
          "name": "Cartfile.resolved",
          "type": "blob",
          "size": 0.130859375,
          "content": "binary \"https://raw.githubusercontent.com/cossacklabs/openssl-apple/cossacklabs/carthage/openssl-static-xcframework.json\" \"1.1.12201\"\n"
        },
        {
          "name": "Doxyfile",
          "type": "blob",
          "size": 100.447265625,
          "content": "# Doxyfile 1.8.8\n\n# This file describes the settings to be used by the documentation system\n# doxygen (www.doxygen.org) for a project.\n#\n# All text after a double hash (##) is considered a comment and is placed in\n# front of the TAG it is preceding.\n#\n# All text after a single hash (#) is considered a comment and will be ignored.\n# The format is:\n# TAG = value [value, ...]\n# For lists, items can also be appended using:\n# TAG += value [value, ...]\n# Values that contain spaces should be placed between quotes (\\\" \\\").\n\n#---------------------------------------------------------------------------\n# Project related configuration options\n#---------------------------------------------------------------------------\n\n# This tag specifies the encoding used for all characters in the config file\n# that follow. The default is UTF-8 which is also the encoding used for all text\n# before the first occurrence of this tag. Doxygen uses libiconv (or the iconv\n# built into libc) for the transcoding. See http://www.gnu.org/software/libiconv\n# for the list of possible encodings.\n# The default value is: UTF-8.\n\nDOXYFILE_ENCODING      = UTF-8\n\n# The PROJECT_NAME tag is a single word (or a sequence of words surrounded by\n# double-quotes, unless you are using Doxywizard) that should identify the\n# project for which the documentation is generated. This name is used in the\n# title of most generated pages and in a few other places.\n# The default value is: My Project.\n\nPROJECT_NAME           = Themis\n\n# The PROJECT_NUMBER tag can be used to enter a project or revision number. This\n# could be handy for archiving the generated documentation or if some version\n# control system is used.\n\nPROJECT_NUMBER         =\n\n# Using the PROJECT_BRIEF tag one can provide an optional one line description\n# for a project that appears at the top of each page and should give viewer a\n# quick idea about the purpose of the project. Keep the description short.\n\nPROJECT_BRIEF          = \"Data security library for network communication and data storage\"\n\n# With the PROJECT_LOGO tag one can specify an logo or icon that is included in\n# the documentation. The maximum height of the logo should not exceed 55 pixels\n# and the maximum width should not exceed 200 pixels. Doxygen will copy the logo\n# to the output directory.\n\nPROJECT_LOGO           =\n\n# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) path\n# into which the generated documentation will be written. If a relative path is\n# entered, it will be relative to the location where doxygen was started. If\n# left blank the current directory will be used.\n\nOUTPUT_DIRECTORY       = docs/\n\n# If the CREATE_SUBDIRS tag is set to YES, then doxygen will create 4096 sub-\n# directories (in 2 levels) under the output directory of each output format and\n# will distribute the generated files over these directories. Enabling this\n# option can be useful when feeding doxygen a huge amount of source files, where\n# putting all generated files in the same directory would otherwise causes\n# performance problems for the file system.\n# The default value is: NO.\n\nCREATE_SUBDIRS         = NO\n\n# If the ALLOW_UNICODE_NAMES tag is set to YES, doxygen will allow non-ASCII\n# characters to appear in the names of generated files. If set to NO, non-ASCII\n# characters will be escaped, for example _xE3_x81_x84 will be used for Unicode\n# U+3044.\n# The default value is: NO.\n\nALLOW_UNICODE_NAMES    = NO\n\n# The OUTPUT_LANGUAGE tag is used to specify the language in which all\n# documentation generated by doxygen is written. Doxygen will use this\n# information to generate all constant output in the proper language.\n# Possible values are: Afrikaans, Arabic, Armenian, Brazilian, Catalan, Chinese,\n# Chinese-Traditional, Croatian, Czech, Danish, Dutch, English (United States),\n# Esperanto, Farsi (Persian), Finnish, French, German, Greek, Hungarian,\n# Indonesian, Italian, Japanese, Japanese-en (Japanese with English messages),\n# Korean, Korean-en (Korean with English messages), Latvian, Lithuanian,\n# Macedonian, Norwegian, Persian (Farsi), Polish, Portuguese, Romanian, Russian,\n# Serbian, Serbian-Cyrillic, Slovak, Slovene, Spanish, Swedish, Turkish,\n# Ukrainian and Vietnamese.\n# The default value is: English.\n\nOUTPUT_LANGUAGE        = English\n\n# If the BRIEF_MEMBER_DESC tag is set to YES doxygen will include brief member\n# descriptions after the members that are listed in the file and class\n# documentation (similar to Javadoc). Set to NO to disable this.\n# The default value is: YES.\n\nBRIEF_MEMBER_DESC      = YES\n\n# If the REPEAT_BRIEF tag is set to YES doxygen will prepend the brief\n# description of a member or function before the detailed description\n#\n# Note: If both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the\n# brief descriptions will be completely suppressed.\n# The default value is: YES.\n\nREPEAT_BRIEF           = YES\n\n# This tag implements a quasi-intelligent brief description abbreviator that is\n# used to form the text in various listings. Each string in this list, if found\n# as the leading text of the brief description, will be stripped from the text\n# and the result, after processing the whole list, is used as the annotated\n# text. Otherwise, the brief description is used as-is. If left blank, the\n# following values are used ($name is automatically replaced with the name of\n# the entity):The $name class, The $name widget, The $name file, is, provides,\n# specifies, contains, represents, a, an and the.\n\nABBREVIATE_BRIEF       =\n\n# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then\n# doxygen will generate a detailed section even if there is only a brief\n# description.\n# The default value is: NO.\n\nALWAYS_DETAILED_SEC    = NO\n\n# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all\n# inherited members of a class in the documentation of that class as if those\n# members were ordinary class members. Constructors, destructors and assignment\n# operators of the base classes will not be shown.\n# The default value is: NO.\n\nINLINE_INHERITED_MEMB  = NO\n\n# If the FULL_PATH_NAMES tag is set to YES doxygen will prepend the full path\n# before files name in the file list and in the header files. If set to NO the\n# shortest path that makes the file name unique will be used\n# The default value is: YES.\n\nFULL_PATH_NAMES        = YES\n\n# The STRIP_FROM_PATH tag can be used to strip a user-defined part of the path.\n# Stripping is only done if one of the specified strings matches the left-hand\n# part of the path. The tag can be used to show relative paths in the file list.\n# If left blank the directory from which doxygen is run is used as the path to\n# strip.\n#\n# Note that you can specify absolute paths here, but also relative paths, which\n# will be relative from the directory where doxygen is started.\n# This tag requires that the tag FULL_PATH_NAMES is set to YES.\n\nSTRIP_FROM_PATH        =\n\n# The STRIP_FROM_INC_PATH tag can be used to strip a user-defined part of the\n# path mentioned in the documentation of a class, which tells the reader which\n# header file to include in order to use a class. If left blank only the name of\n# the header file containing the class definition is used. Otherwise one should\n# specify the list of include paths that are normally passed to the compiler\n# using the -I flag.\n\nSTRIP_FROM_INC_PATH    =\n\n# If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter (but\n# less readable) file names. This can be useful is your file systems doesn't\n# support long names like on DOS, Mac, or CD-ROM.\n# The default value is: NO.\n\nSHORT_NAMES            = NO\n\n# If the JAVADOC_AUTOBRIEF tag is set to YES then doxygen will interpret the\n# first line (until the first dot) of a Javadoc-style comment as the brief\n# description. If set to NO, the Javadoc-style will behave just like regular Qt-\n# style comments (thus requiring an explicit @brief command for a brief\n# description.)\n# The default value is: NO.\n\nJAVADOC_AUTOBRIEF      = YES\n\n# If the QT_AUTOBRIEF tag is set to YES then doxygen will interpret the first\n# line (until the first dot) of a Qt-style comment as the brief description. If\n# set to NO, the Qt-style will behave just like regular Qt-style comments (thus\n# requiring an explicit \\brief command for a brief description.)\n# The default value is: NO.\n\nQT_AUTOBRIEF           = NO\n\n# The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make doxygen treat a\n# multi-line C++ special comment block (i.e. a block of //! or /// comments) as\n# a brief description. This used to be the default behavior. The new default is\n# to treat a multi-line C++ comment block as a detailed description. Set this\n# tag to YES if you prefer the old behavior instead.\n#\n# Note that setting this tag to YES also means that rational rose comments are\n# not recognized any more.\n# The default value is: NO.\n\nMULTILINE_CPP_IS_BRIEF = NO\n\n# If the INHERIT_DOCS tag is set to YES then an undocumented member inherits the\n# documentation from any documented member that it re-implements.\n# The default value is: YES.\n\nINHERIT_DOCS           = YES\n\n# If the SEPARATE_MEMBER_PAGES tag is set to YES, then doxygen will produce a\n# new page for each member. If set to NO, the documentation of a member will be\n# part of the file/class/namespace that contains it.\n# The default value is: NO.\n\nSEPARATE_MEMBER_PAGES  = NO\n\n# The TAB_SIZE tag can be used to set the number of spaces in a tab. Doxygen\n# uses this value to replace tabs by spaces in code fragments.\n# Minimum value: 1, maximum value: 16, default value: 4.\n\nTAB_SIZE               = 4\n\n# This tag can be used to specify a number of aliases that act as commands in\n# the documentation. An alias has the form:\n# name=value\n# For example adding\n# \"sideeffect=@par Side Effects:\\n\"\n# will allow you to put the command \\sideeffect (or @sideeffect) in the\n# documentation, which will result in a user-defined paragraph with heading\n# \"Side Effects:\". You can put \\n's in the value part of an alias to insert\n# newlines.\n\nALIASES                =\n\n# This tag can be used to specify a number of word-keyword mappings (TCL only).\n# A mapping has the form \"name=value\". For example adding \"class=itcl::class\"\n# will allow you to use the command class in the itcl::class meaning.\n\nTCL_SUBST              =\n\n# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C sources\n# only. Doxygen will then generate output that is more tailored for C. For\n# instance, some of the names that are used will be different. The list of all\n# members will be omitted, etc.\n# The default value is: NO.\n\nOPTIMIZE_OUTPUT_FOR_C  = YES\n\n# Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java or\n# Python sources only. Doxygen will then generate output that is more tailored\n# for that language. For instance, namespaces will be presented as packages,\n# qualified scopes will look different, etc.\n# The default value is: NO.\n\nOPTIMIZE_OUTPUT_JAVA   = NO\n\n# Set the OPTIMIZE_FOR_FORTRAN tag to YES if your project consists of Fortran\n# sources. Doxygen will then generate output that is tailored for Fortran.\n# The default value is: NO.\n\nOPTIMIZE_FOR_FORTRAN   = NO\n\n# Set the OPTIMIZE_OUTPUT_VHDL tag to YES if your project consists of VHDL\n# sources. Doxygen will then generate output that is tailored for VHDL.\n# The default value is: NO.\n\nOPTIMIZE_OUTPUT_VHDL   = NO\n\n# Doxygen selects the parser to use depending on the extension of the files it\n# parses. With this tag you can assign which parser to use for a given\n# extension. Doxygen has a built-in mapping, but you can override or extend it\n# using this tag. The format is ext=language, where ext is a file extension, and\n# language is one of the parsers supported by doxygen: IDL, Java, Javascript,\n# C#, C, C++, D, PHP, Objective-C, Python, Fortran (fixed format Fortran:\n# FortranFixed, free formatted Fortran: FortranFree, unknown formatted Fortran:\n# Fortran. In the later case the parser tries to guess whether the code is fixed\n# or free formatted code, this is the default for Fortran type files), VHDL. For\n# instance to make doxygen treat .inc files as Fortran files (default is PHP),\n# and .f files as C (default is Fortran), use: inc=Fortran f=C.\n#\n# Note For files without extension you can use no_extension as a placeholder.\n#\n# Note that for custom extensions you also need to set FILE_PATTERNS otherwise\n# the files are not read by doxygen.\n\nEXTENSION_MAPPING      =\n\n# If the MARKDOWN_SUPPORT tag is enabled then doxygen pre-processes all comments\n# according to the Markdown format, which allows for more readable\n# documentation. See http://daringfireball.net/projects/markdown/ for details.\n# The output of markdown processing is further processed by doxygen, so you can\n# mix doxygen, HTML, and XML commands with Markdown formatting. Disable only in\n# case of backward compatibilities issues.\n# The default value is: YES.\n\nMARKDOWN_SUPPORT       = YES\n\n# When enabled doxygen tries to link words that correspond to documented\n# classes, or namespaces to their corresponding documentation. Such a link can\n# be prevented in individual cases by by putting a % sign in front of the word\n# or globally by setting AUTOLINK_SUPPORT to NO.\n# The default value is: YES.\n\nAUTOLINK_SUPPORT       = YES\n\n# If you use STL classes (i.e. std::string, std::vector, etc.) but do not want\n# to include (a tag file for) the STL sources as input, then you should set this\n# tag to YES in order to let doxygen match functions declarations and\n# definitions whose arguments contain STL classes (e.g. func(std::string);\n# versus func(std::string) {}). This also make the inheritance and collaboration\n# diagrams that involve STL classes more complete and accurate.\n# The default value is: NO.\n\nBUILTIN_STL_SUPPORT    = NO\n\n# If you use Microsoft's C++/CLI language, you should set this option to YES to\n# enable parsing support.\n# The default value is: NO.\n\nCPP_CLI_SUPPORT        = NO\n\n# Set the SIP_SUPPORT tag to YES if your project consists of sip (see:\n# http://www.riverbankcomputing.co.uk/software/sip/intro) sources only. Doxygen\n# will parse them like normal C++ but will assume all classes use public instead\n# of private inheritance when no explicit protection keyword is present.\n# The default value is: NO.\n\nSIP_SUPPORT            = NO\n\n# For Microsoft's IDL there are propget and propput attributes to indicate\n# getter and setter methods for a property. Setting this option to YES will make\n# doxygen to replace the get and set methods by a property in the documentation.\n# This will only work if the methods are indeed getting or setting a simple\n# type. If this is not the case, or you want to show the methods anyway, you\n# should set this option to NO.\n# The default value is: YES.\n\nIDL_PROPERTY_SUPPORT   = YES\n\n# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC\n# tag is set to YES, then doxygen will reuse the documentation of the first\n# member in the group (if any) for the other members of the group. By default\n# all members of a group must be documented explicitly.\n# The default value is: NO.\n\nDISTRIBUTE_GROUP_DOC   = NO\n\n# Set the SUBGROUPING tag to YES to allow class member groups of the same type\n# (for instance a group of public functions) to be put as a subgroup of that\n# type (e.g. under the Public Functions section). Set it to NO to prevent\n# subgrouping. Alternatively, this can be done per class using the\n# \\nosubgrouping command.\n# The default value is: YES.\n\nSUBGROUPING            = YES\n\n# When the INLINE_GROUPED_CLASSES tag is set to YES, classes, structs and unions\n# are shown inside the group in which they are included (e.g. using \\ingroup)\n# instead of on a separate page (for HTML and Man pages) or section (for LaTeX\n# and RTF).\n#\n# Note that this feature does not work in combination with\n# SEPARATE_MEMBER_PAGES.\n# The default value is: NO.\n\nINLINE_GROUPED_CLASSES = NO\n\n# When the INLINE_SIMPLE_STRUCTS tag is set to YES, structs, classes, and unions\n# with only public data fields or simple typedef fields will be shown inline in\n# the documentation of the scope in which they are defined (i.e. file,\n# namespace, or group documentation), provided this scope is documented. If set\n# to NO, structs, classes, and unions are shown on a separate page (for HTML and\n# Man pages) or section (for LaTeX and RTF).\n# The default value is: NO.\n\nINLINE_SIMPLE_STRUCTS  = NO\n\n# When TYPEDEF_HIDES_STRUCT tag is enabled, a typedef of a struct, union, or\n# enum is documented as struct, union, or enum with the name of the typedef. So\n# typedef struct TypeS {} TypeT, will appear in the documentation as a struct\n# with name TypeT. When disabled the typedef will appear as a member of a file,\n# namespace, or class. And the struct will be named TypeS. This can typically be\n# useful for C code in case the coding convention dictates that all compound\n# types are typedef'ed and only the typedef is referenced, never the tag name.\n# The default value is: NO.\n\nTYPEDEF_HIDES_STRUCT   = YES\n\n# The size of the symbol lookup cache can be set using LOOKUP_CACHE_SIZE. This\n# cache is used to resolve symbols given their name and scope. Since this can be\n# an expensive process and often the same symbol appears multiple times in the\n# code, doxygen keeps a cache of pre-resolved symbols. If the cache is too small\n# doxygen will become slower. If the cache is too large, memory is wasted. The\n# cache size is given by this formula: 2^(16+LOOKUP_CACHE_SIZE). The valid range\n# is 0..9, the default is 0, corresponding to a cache size of 2^16=65536\n# symbols. At the end of a run doxygen will report the cache usage and suggest\n# the optimal cache size from a speed point of view.\n# Minimum value: 0, maximum value: 9, default value: 0.\n\nLOOKUP_CACHE_SIZE      = 0\n\n#---------------------------------------------------------------------------\n# Build related configuration options\n#---------------------------------------------------------------------------\n\n# If the EXTRACT_ALL tag is set to YES doxygen will assume all entities in\n# documentation are documented, even if no documentation was available. Private\n# class members and static file members will be hidden unless the\n# EXTRACT_PRIVATE respectively EXTRACT_STATIC tags are set to YES.\n# Note: This will also disable the warnings about undocumented members that are\n# normally produced when WARNINGS is set to YES.\n# The default value is: NO.\n\nEXTRACT_ALL            = NO\n\n# If the EXTRACT_PRIVATE tag is set to YES all private members of a class will\n# be included in the documentation.\n# The default value is: NO.\n\nEXTRACT_PRIVATE        = NO\n\n# If the EXTRACT_PACKAGE tag is set to YES all members with package or internal\n# scope will be included in the documentation.\n# The default value is: NO.\n\nEXTRACT_PACKAGE        = NO\n\n# If the EXTRACT_STATIC tag is set to YES all static members of a file will be\n# included in the documentation.\n# The default value is: NO.\n\nEXTRACT_STATIC         = NO\n\n# If the EXTRACT_LOCAL_CLASSES tag is set to YES classes (and structs) defined\n# locally in source files will be included in the documentation. If set to NO\n# only classes defined in header files are included. Does not have any effect\n# for Java sources.\n# The default value is: YES.\n\nEXTRACT_LOCAL_CLASSES  = YES\n\n# This flag is only useful for Objective-C code. When set to YES local methods,\n# which are defined in the implementation section but not in the interface are\n# included in the documentation. If set to NO only methods in the interface are\n# included.\n# The default value is: NO.\n\nEXTRACT_LOCAL_METHODS  = NO\n\n# If this flag is set to YES, the members of anonymous namespaces will be\n# extracted and appear in the documentation as a namespace called\n# 'anonymous_namespace{file}', where file will be replaced with the base name of\n# the file that contains the anonymous namespace. By default anonymous namespace\n# are hidden.\n# The default value is: NO.\n\nEXTRACT_ANON_NSPACES   = NO\n\n# If the HIDE_UNDOC_MEMBERS tag is set to YES, doxygen will hide all\n# undocumented members inside documented classes or files. If set to NO these\n# members will be included in the various overviews, but no documentation\n# section is generated. This option has no effect if EXTRACT_ALL is enabled.\n# The default value is: NO.\n\nHIDE_UNDOC_MEMBERS     = NO\n\n# If the HIDE_UNDOC_CLASSES tag is set to YES, doxygen will hide all\n# undocumented classes that are normally visible in the class hierarchy. If set\n# to NO these classes will be included in the various overviews. This option has\n# no effect if EXTRACT_ALL is enabled.\n# The default value is: NO.\n\nHIDE_UNDOC_CLASSES     = NO\n\n# If the HIDE_FRIEND_COMPOUNDS tag is set to YES, doxygen will hide all friend\n# (class|struct|union) declarations. If set to NO these declarations will be\n# included in the documentation.\n# The default value is: NO.\n\nHIDE_FRIEND_COMPOUNDS  = NO\n\n# If the HIDE_IN_BODY_DOCS tag is set to YES, doxygen will hide any\n# documentation blocks found inside the body of a function. If set to NO these\n# blocks will be appended to the function's detailed documentation block.\n# The default value is: NO.\n\nHIDE_IN_BODY_DOCS      = NO\n\n# The INTERNAL_DOCS tag determines if documentation that is typed after a\n# \\internal command is included. If the tag is set to NO then the documentation\n# will be excluded. Set it to YES to include the internal documentation.\n# The default value is: NO.\n\nINTERNAL_DOCS          = NO\n\n# If the CASE_SENSE_NAMES tag is set to NO then doxygen will only generate file\n# names in lower-case letters. If set to YES upper-case letters are also\n# allowed. This is useful if you have classes or files whose names only differ\n# in case and if your file system supports case sensitive file names. Windows\n# and Mac users are advised to set this option to NO.\n# The default value is: system dependent.\n\nCASE_SENSE_NAMES       = YES\n\n# If the HIDE_SCOPE_NAMES tag is set to NO then doxygen will show members with\n# their full class and namespace scopes in the documentation. If set to YES the\n# scope will be hidden.\n# The default value is: NO.\n\nHIDE_SCOPE_NAMES       = NO\n\n# If the SHOW_INCLUDE_FILES tag is set to YES then doxygen will put a list of\n# the files that are included by a file in the documentation of that file.\n# The default value is: YES.\n\nSHOW_INCLUDE_FILES     = YES\n\n# If the SHOW_GROUPED_MEMB_INC tag is set to YES then Doxygen will add for each\n# grouped member an include statement to the documentation, telling the reader\n# which file to include in order to use the member.\n# The default value is: NO.\n\nSHOW_GROUPED_MEMB_INC  = NO\n\n# If the FORCE_LOCAL_INCLUDES tag is set to YES then doxygen will list include\n# files with double quotes in the documentation rather than with sharp brackets.\n# The default value is: NO.\n\nFORCE_LOCAL_INCLUDES   = NO\n\n# If the INLINE_INFO tag is set to YES then a tag [inline] is inserted in the\n# documentation for inline members.\n# The default value is: YES.\n\nINLINE_INFO            = YES\n\n# If the SORT_MEMBER_DOCS tag is set to YES then doxygen will sort the\n# (detailed) documentation of file and class members alphabetically by member\n# name. If set to NO the members will appear in declaration order.\n# The default value is: YES.\n\nSORT_MEMBER_DOCS       = YES\n\n# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the brief\n# descriptions of file, namespace and class members alphabetically by member\n# name. If set to NO the members will appear in declaration order. Note that\n# this will also influence the order of the classes in the class list.\n# The default value is: NO.\n\nSORT_BRIEF_DOCS        = NO\n\n# If the SORT_MEMBERS_CTORS_1ST tag is set to YES then doxygen will sort the\n# (brief and detailed) documentation of class members so that constructors and\n# destructors are listed first. If set to NO the constructors will appear in the\n# respective orders defined by SORT_BRIEF_DOCS and SORT_MEMBER_DOCS.\n# Note: If SORT_BRIEF_DOCS is set to NO this option is ignored for sorting brief\n# member documentation.\n# Note: If SORT_MEMBER_DOCS is set to NO this option is ignored for sorting\n# detailed member documentation.\n# The default value is: NO.\n\nSORT_MEMBERS_CTORS_1ST = NO\n\n# If the SORT_GROUP_NAMES tag is set to YES then doxygen will sort the hierarchy\n# of group names into alphabetical order. If set to NO the group names will\n# appear in their defined order.\n# The default value is: NO.\n\nSORT_GROUP_NAMES       = NO\n\n# If the SORT_BY_SCOPE_NAME tag is set to YES, the class list will be sorted by\n# fully-qualified names, including namespaces. If set to NO, the class list will\n# be sorted only by class name, not including the namespace part.\n# Note: This option is not very useful if HIDE_SCOPE_NAMES is set to YES.\n# Note: This option applies only to the class list, not to the alphabetical\n# list.\n# The default value is: NO.\n\nSORT_BY_SCOPE_NAME     = NO\n\n# If the STRICT_PROTO_MATCHING option is enabled and doxygen fails to do proper\n# type resolution of all parameters of a function it will reject a match between\n# the prototype and the implementation of a member function even if there is\n# only one candidate or it is obvious which candidate to choose by doing a\n# simple string match. By disabling STRICT_PROTO_MATCHING doxygen will still\n# accept a match between prototype and implementation in such cases.\n# The default value is: NO.\n\nSTRICT_PROTO_MATCHING  = NO\n\n# The GENERATE_TODOLIST tag can be used to enable ( YES) or disable ( NO) the\n# todo list. This list is created by putting \\todo commands in the\n# documentation.\n# The default value is: YES.\n\nGENERATE_TODOLIST      = YES\n\n# The GENERATE_TESTLIST tag can be used to enable ( YES) or disable ( NO) the\n# test list. This list is created by putting \\test commands in the\n# documentation.\n# The default value is: YES.\n\nGENERATE_TESTLIST      = YES\n\n# The GENERATE_BUGLIST tag can be used to enable ( YES) or disable ( NO) the bug\n# list. This list is created by putting \\bug commands in the documentation.\n# The default value is: YES.\n\nGENERATE_BUGLIST       = YES\n\n# The GENERATE_DEPRECATEDLIST tag can be used to enable ( YES) or disable ( NO)\n# the deprecated list. This list is created by putting \\deprecated commands in\n# the documentation.\n# The default value is: YES.\n\nGENERATE_DEPRECATEDLIST= YES\n\n# The ENABLED_SECTIONS tag can be used to enable conditional documentation\n# sections, marked by \\if <section_label> ... \\endif and \\cond <section_label>\n# ... \\endcond blocks.\n\nENABLED_SECTIONS       =\n\n# The MAX_INITIALIZER_LINES tag determines the maximum number of lines that the\n# initial value of a variable or macro / define can have for it to appear in the\n# documentation. If the initializer consists of more lines than specified here\n# it will be hidden. Use a value of 0 to hide initializers completely. The\n# appearance of the value of individual variables and macros / defines can be\n# controlled using \\showinitializer or \\hideinitializer command in the\n# documentation regardless of this setting.\n# Minimum value: 0, maximum value: 10000, default value: 30.\n\nMAX_INITIALIZER_LINES  = 30\n\n# Set the SHOW_USED_FILES tag to NO to disable the list of files generated at\n# the bottom of the documentation of classes and structs. If set to YES the list\n# will mention the files that were used to generate the documentation.\n# The default value is: YES.\n\nSHOW_USED_FILES        = YES\n\n# Set the SHOW_FILES tag to NO to disable the generation of the Files page. This\n# will remove the Files entry from the Quick Index and from the Folder Tree View\n# (if specified).\n# The default value is: YES.\n\nSHOW_FILES             = YES\n\n# Set the SHOW_NAMESPACES tag to NO to disable the generation of the Namespaces\n# page. This will remove the Namespaces entry from the Quick Index and from the\n# Folder Tree View (if specified).\n# The default value is: YES.\n\nSHOW_NAMESPACES        = YES\n\n# The FILE_VERSION_FILTER tag can be used to specify a program or script that\n# doxygen should invoke to get the current version for each file (typically from\n# the version control system). Doxygen will invoke the program by executing (via\n# popen()) the command command input-file, where command is the value of the\n# FILE_VERSION_FILTER tag, and input-file is the name of an input file provided\n# by doxygen. Whatever the program writes to standard output is used as the file\n# version. For an example see the documentation.\n\nFILE_VERSION_FILTER    =\n\n# The LAYOUT_FILE tag can be used to specify a layout file which will be parsed\n# by doxygen. The layout file controls the global structure of the generated\n# output files in an output format independent way. To create the layout file\n# that represents doxygen's defaults, run doxygen with the -l option. You can\n# optionally specify a file name after the option, if omitted DoxygenLayout.xml\n# will be used as the name of the layout file.\n#\n# Note that if you run doxygen from a directory containing a file called\n# DoxygenLayout.xml, doxygen will parse it automatically even if the LAYOUT_FILE\n# tag is left empty.\n\nLAYOUT_FILE            =\n\n# The CITE_BIB_FILES tag can be used to specify one or more bib files containing\n# the reference definitions. This must be a list of .bib files. The .bib\n# extension is automatically appended if omitted. This requires the bibtex tool\n# to be installed. See also http://en.wikipedia.org/wiki/BibTeX for more info.\n# For LaTeX the style of the bibliography can be controlled using\n# LATEX_BIB_STYLE. To use this feature you need bibtex and perl available in the\n# search path. See also \\cite for info how to create references.\n\nCITE_BIB_FILES         =\n\n#---------------------------------------------------------------------------\n# Configuration options related to warning and progress messages\n#---------------------------------------------------------------------------\n\n# The QUIET tag can be used to turn on/off the messages that are generated to\n# standard output by doxygen. If QUIET is set to YES this implies that the\n# messages are off.\n# The default value is: NO.\n\nQUIET                  = NO\n\n# The WARNINGS tag can be used to turn on/off the warning messages that are\n# generated to standard error ( stderr) by doxygen. If WARNINGS is set to YES\n# this implies that the warnings are on.\n#\n# Tip: Turn warnings on while writing the documentation.\n# The default value is: YES.\n\nWARNINGS               = YES\n\n# If the WARN_IF_UNDOCUMENTED tag is set to YES, then doxygen will generate\n# warnings for undocumented members. If EXTRACT_ALL is set to YES then this flag\n# will automatically be disabled.\n# The default value is: YES.\n\nWARN_IF_UNDOCUMENTED   = YES\n\n# If the WARN_IF_DOC_ERROR tag is set to YES, doxygen will generate warnings for\n# potential errors in the documentation, such as not documenting some parameters\n# in a documented function, or documenting parameters that don't exist or using\n# markup commands wrongly.\n# The default value is: YES.\n\nWARN_IF_DOC_ERROR      = YES\n\n# This WARN_NO_PARAMDOC option can be enabled to get warnings for functions that\n# are documented, but have no documentation for their parameters or return\n# value. If set to NO doxygen will only warn about wrong or incomplete parameter\n# documentation, but not about the absence of documentation.\n# The default value is: NO.\n\nWARN_NO_PARAMDOC       = NO\n\n# The WARN_FORMAT tag determines the format of the warning messages that doxygen\n# can produce. The string should contain the $file, $line, and $text tags, which\n# will be replaced by the file and line number from which the warning originated\n# and the warning text. Optionally the format may contain $version, which will\n# be replaced by the version of the file (if it could be obtained via\n# FILE_VERSION_FILTER)\n# The default value is: $file:$line: $text.\n\nWARN_FORMAT            = \"$file:$line: $text\"\n\n# The WARN_LOGFILE tag can be used to specify a file to which warning and error\n# messages should be written. If left blank the output is written to standard\n# error (stderr).\n\nWARN_LOGFILE           =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the input files\n#---------------------------------------------------------------------------\n\n# The INPUT tag is used to specify the files and/or directories that contain\n# documented source files. You may enter file names like myfile.cpp or\n# directories like /usr/src/myproject. Separate the files or directories with\n# spaces.\n# Note: If this tag is empty the current directory is searched.\n\nINPUT                  = README.md src/soter src/themis\n\n# This tag can be used to specify the character encoding of the source files\n# that doxygen parses. Internally doxygen uses the UTF-8 encoding. Doxygen uses\n# libiconv (or the iconv built into libc) for the transcoding. See the libiconv\n# documentation (see: http://www.gnu.org/software/libiconv) for the list of\n# possible encodings.\n# The default value is: UTF-8.\n\nINPUT_ENCODING         = UTF-8\n\n# If the value of the INPUT tag contains directories, you can use the\n# FILE_PATTERNS tag to specify one or more wildcard patterns (like *.cpp and\n# *.h) to filter out the source-files in the directories. If left blank the\n# following patterns are tested:*.c, *.cc, *.cxx, *.cpp, *.c++, *.java, *.ii,\n# *.ixx, *.ipp, *.i++, *.inl, *.idl, *.ddl, *.odl, *.h, *.hh, *.hxx, *.hpp,\n# *.h++, *.cs, *.d, *.php, *.php4, *.php5, *.phtml, *.inc, *.m, *.markdown,\n# *.md, *.mm, *.dox, *.py, *.f90, *.f, *.for, *.tcl, *.vhd, *.vhdl, *.ucf,\n# *.qsf, *.as and *.js.\n\nFILE_PATTERNS          = *.c *.h\n\n# The RECURSIVE tag can be used to specify whether or not subdirectories should\n# be searched for input files as well.\n# The default value is: NO.\n\nRECURSIVE              = YES\n\n# The EXCLUDE tag can be used to specify files and/or directories that should be\n# excluded from the INPUT source files. This way you can easily exclude a\n# subdirectory from a directory tree whose root is specified with the INPUT tag.\n#\n# Note that relative paths are relative to the directory from which doxygen is\n# run.\n\nEXCLUDE                =\n\n# The EXCLUDE_SYMLINKS tag can be used to select whether or not files or\n# directories that are symbolic links (a Unix file system feature) are excluded\n# from the input.\n# The default value is: NO.\n\nEXCLUDE_SYMLINKS       = NO\n\n# If the value of the INPUT tag contains directories, you can use the\n# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude\n# certain files from those directories.\n#\n# Note that the wildcards are matched against the file with absolute path, so to\n# exclude all test directories for example use the pattern */test/*\n\nEXCLUDE_PATTERNS       =\n\n# The EXCLUDE_SYMBOLS tag can be used to specify one or more symbol names\n# (namespaces, classes, functions, etc.) that should be excluded from the\n# output. The symbol name can be a fully qualified name, a word, or if the\n# wildcard * is used, a substring. Examples: ANamespace, AClass,\n# AClass::ANamespace, ANamespace::*Test\n#\n# Note that the wildcards are matched against the file with absolute path, so to\n# exclude all test directories use the pattern */test/*\n\nEXCLUDE_SYMBOLS        =\n\n# The EXAMPLE_PATH tag can be used to specify one or more files or directories\n# that contain example code fragments that are included (see the \\include\n# command).\n\nEXAMPLE_PATH           =\n\n# If the value of the EXAMPLE_PATH tag contains directories, you can use the\n# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp and\n# *.h) to filter out the source-files in the directories. If left blank all\n# files are included.\n\nEXAMPLE_PATTERNS       =\n\n# If the EXAMPLE_RECURSIVE tag is set to YES then subdirectories will be\n# searched for input files to be used with the \\include or \\dontinclude commands\n# irrespective of the value of the RECURSIVE tag.\n# The default value is: NO.\n\nEXAMPLE_RECURSIVE      = NO\n\n# The IMAGE_PATH tag can be used to specify one or more files or directories\n# that contain images that are to be included in the documentation (see the\n# \\image command).\n\nIMAGE_PATH             = docs/images/\n\n# The INPUT_FILTER tag can be used to specify a program that doxygen should\n# invoke to filter for each input file. Doxygen will invoke the filter program\n# by executing (via popen()) the command:\n#\n# <filter> <input-file>\n#\n# where <filter> is the value of the INPUT_FILTER tag, and <input-file> is the\n# name of an input file. Doxygen will then use the output that the filter\n# program writes to standard output. If FILTER_PATTERNS is specified, this tag\n# will be ignored.\n#\n# Note that the filter must not add or remove lines; it is applied before the\n# code is scanned, but not when the output code is generated. If lines are added\n# or removed, the anchors will not be placed correctly.\n\nINPUT_FILTER           =\n\n# The FILTER_PATTERNS tag can be used to specify filters on a per file pattern\n# basis. Doxygen will compare the file name with each pattern and apply the\n# filter if there is a match. The filters are a list of the form: pattern=filter\n# (like *.cpp=my_cpp_filter). See INPUT_FILTER for further information on how\n# filters are used. If the FILTER_PATTERNS tag is empty or if none of the\n# patterns match the file name, INPUT_FILTER is applied.\n\nFILTER_PATTERNS        =\n\n# If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using\n# INPUT_FILTER ) will also be used to filter the input files that are used for\n# producing the source files to browse (i.e. when SOURCE_BROWSER is set to YES).\n# The default value is: NO.\n\nFILTER_SOURCE_FILES    = NO\n\n# The FILTER_SOURCE_PATTERNS tag can be used to specify source filters per file\n# pattern. A pattern will override the setting for FILTER_PATTERN (if any) and\n# it is also possible to disable source filtering for a specific pattern using\n# *.ext= (so without naming a filter).\n# This tag requires that the tag FILTER_SOURCE_FILES is set to YES.\n\nFILTER_SOURCE_PATTERNS =\n\n# If the USE_MDFILE_AS_MAINPAGE tag refers to the name of a markdown file that\n# is part of the input, its contents will be placed on the main page\n# (index.html). This can be useful if you have a project on for instance GitHub\n# and want to reuse the introduction page also for the doxygen output.\n\nUSE_MDFILE_AS_MAINPAGE = README.md\n\n#---------------------------------------------------------------------------\n# Configuration options related to source browsing\n#---------------------------------------------------------------------------\n\n# If the SOURCE_BROWSER tag is set to YES then a list of source files will be\n# generated. Documented entities will be cross-referenced with these sources.\n#\n# Note: To get rid of all source code in the generated output, make sure that\n# also VERBATIM_HEADERS is set to NO.\n# The default value is: NO.\n\nSOURCE_BROWSER         = NO\n\n# Setting the INLINE_SOURCES tag to YES will include the body of functions,\n# classes and enums directly into the documentation.\n# The default value is: NO.\n\nINLINE_SOURCES         = NO\n\n# Setting the STRIP_CODE_COMMENTS tag to YES will instruct doxygen to hide any\n# special comment blocks from generated source code fragments. Normal C, C++ and\n# Fortran comments will always remain visible.\n# The default value is: YES.\n\nSTRIP_CODE_COMMENTS    = YES\n\n# If the REFERENCED_BY_RELATION tag is set to YES then for each documented\n# function all documented functions referencing it will be listed.\n# The default value is: NO.\n\nREFERENCED_BY_RELATION = NO\n\n# If the REFERENCES_RELATION tag is set to YES then for each documented function\n# all documented entities called/used by that function will be listed.\n# The default value is: NO.\n\nREFERENCES_RELATION    = NO\n\n# If the REFERENCES_LINK_SOURCE tag is set to YES and SOURCE_BROWSER tag is set\n# to YES, then the hyperlinks from functions in REFERENCES_RELATION and\n# REFERENCED_BY_RELATION lists will link to the source code. Otherwise they will\n# link to the documentation.\n# The default value is: YES.\n\nREFERENCES_LINK_SOURCE = YES\n\n# If SOURCE_TOOLTIPS is enabled (the default) then hovering a hyperlink in the\n# source code will show a tooltip with additional information such as prototype,\n# brief description and links to the definition and documentation. Since this\n# will make the HTML file larger and loading of large files a bit slower, you\n# can opt to disable this feature.\n# The default value is: YES.\n# This tag requires that the tag SOURCE_BROWSER is set to YES.\n\nSOURCE_TOOLTIPS        = YES\n\n# If the USE_HTAGS tag is set to YES then the references to source code will\n# point to the HTML generated by the htags(1) tool instead of doxygen built-in\n# source browser. The htags tool is part of GNU's global source tagging system\n# (see http://www.gnu.org/software/global/global.html). You will need version\n# 4.8.6 or higher.\n#\n# To use it do the following:\n# - Install the latest version of global\n# - Enable SOURCE_BROWSER and USE_HTAGS in the config file\n# - Make sure the INPUT points to the root of the source tree\n# - Run doxygen as normal\n#\n# Doxygen will invoke htags (and that will in turn invoke gtags), so these\n# tools must be available from the command line (i.e. in the search path).\n#\n# The result: instead of the source browser generated by doxygen, the links to\n# source code will now point to the output of htags.\n# The default value is: NO.\n# This tag requires that the tag SOURCE_BROWSER is set to YES.\n\nUSE_HTAGS              = NO\n\n# If the VERBATIM_HEADERS tag is set the YES then doxygen will generate a\n# verbatim copy of the header file for each class for which an include is\n# specified. Set to NO to disable this.\n# See also: Section \\class.\n# The default value is: YES.\n\nVERBATIM_HEADERS       = YES\n\n# If the CLANG_ASSISTED_PARSING tag is set to YES, then doxygen will use the\n# clang parser (see: http://clang.llvm.org/) for more accurate parsing at the\n# cost of reduced performance. This can be particularly helpful with template\n# rich C++ code for which doxygen's built-in parser lacks the necessary type\n# information.\n# Note: The availability of this option depends on whether or not doxygen was\n# compiled with the --with-libclang option.\n# The default value is: NO.\n\nCLANG_ASSISTED_PARSING = NO\n\n# If clang assisted parsing is enabled you can provide the compiler with command\n# line options that you would normally use when invoking the compiler. Note that\n# the include paths will already be set by doxygen for the files and directories\n# specified with INPUT and INCLUDE_PATH.\n# This tag requires that the tag CLANG_ASSISTED_PARSING is set to YES.\n\nCLANG_OPTIONS          =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the alphabetical class index\n#---------------------------------------------------------------------------\n\n# If the ALPHABETICAL_INDEX tag is set to YES, an alphabetical index of all\n# compounds will be generated. Enable this if the project contains a lot of\n# classes, structs, unions or interfaces.\n# The default value is: YES.\n\nALPHABETICAL_INDEX     = YES\n\n# The COLS_IN_ALPHA_INDEX tag can be used to specify the number of columns in\n# which the alphabetical index list will be split.\n# Minimum value: 1, maximum value: 20, default value: 5.\n# This tag requires that the tag ALPHABETICAL_INDEX is set to YES.\n\nCOLS_IN_ALPHA_INDEX    = 5\n\n# In case all classes in a project start with a common prefix, all classes will\n# be put under the same header in the alphabetical index. The IGNORE_PREFIX tag\n# can be used to specify a prefix (or a list of prefixes) that should be ignored\n# while generating the index headers.\n# This tag requires that the tag ALPHABETICAL_INDEX is set to YES.\n\nIGNORE_PREFIX          =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the HTML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_HTML tag is set to YES doxygen will generate HTML output\n# The default value is: YES.\n\nGENERATE_HTML          = YES\n\n# The HTML_OUTPUT tag is used to specify where the HTML docs will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: html.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_OUTPUT            = html\n\n# The HTML_FILE_EXTENSION tag can be used to specify the file extension for each\n# generated HTML page (for example: .htm, .php, .asp).\n# The default value is: .html.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_FILE_EXTENSION    = .html\n\n# The HTML_HEADER tag can be used to specify a user-defined HTML header file for\n# each generated HTML page. If the tag is left blank doxygen will generate a\n# standard header.\n#\n# To get valid HTML the header file that includes any scripts and style sheets\n# that doxygen needs, which is dependent on the configuration options used (e.g.\n# the setting GENERATE_TREEVIEW). It is highly recommended to start with a\n# default header using\n# doxygen -w html new_header.html new_footer.html new_stylesheet.css\n# YourConfigFile\n# and then modify the file new_header.html. See also section \"Doxygen usage\"\n# for information on how to generate the default header that doxygen normally\n# uses.\n# Note: The header is subject to change so you typically have to regenerate the\n# default header when upgrading to a newer version of doxygen. For a description\n# of the possible markers and block names see the documentation.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_HEADER            =\n\n# The HTML_FOOTER tag can be used to specify a user-defined HTML footer for each\n# generated HTML page. If the tag is left blank doxygen will generate a standard\n# footer. See HTML_HEADER for more information on how to generate a default\n# footer and what special commands can be used inside the footer. See also\n# section \"Doxygen usage\" for information on how to generate the default footer\n# that doxygen normally uses.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_FOOTER            =\n\n# The HTML_STYLESHEET tag can be used to specify a user-defined cascading style\n# sheet that is used by each HTML page. It can be used to fine-tune the look of\n# the HTML output. If left blank doxygen will generate a default style sheet.\n# See also section \"Doxygen usage\" for information on how to generate the style\n# sheet that doxygen normally uses.\n# Note: It is recommended to use HTML_EXTRA_STYLESHEET instead of this tag, as\n# it is more robust and this tag (HTML_STYLESHEET) will in the future become\n# obsolete.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_STYLESHEET        =\n\n# The HTML_EXTRA_STYLESHEET tag can be used to specify additional user-defined\n# cascading style sheets that are included after the standard style sheets\n# created by doxygen. Using this option one can overrule certain style aspects.\n# This is preferred over using HTML_STYLESHEET since it does not replace the\n# standard style sheet and is therefor more robust against future updates.\n# Doxygen will copy the style sheet files to the output directory.\n# Note: The order of the extra stylesheet files is of importance (e.g. the last\n# stylesheet in the list overrules the setting of the previous ones in the\n# list). For an example see the documentation.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_EXTRA_STYLESHEET  =\n\n# The HTML_EXTRA_FILES tag can be used to specify one or more extra images or\n# other source files which should be copied to the HTML output directory. Note\n# that these files will be copied to the base HTML output directory. Use the\n# $relpath^ marker in the HTML_HEADER and/or HTML_FOOTER files to load these\n# files. In the HTML_STYLESHEET file, use the file name only. Also note that the\n# files will be copied as-is; there are no commands or markers available.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_EXTRA_FILES       =\n\n# The HTML_COLORSTYLE_HUE tag controls the color of the HTML output. Doxygen\n# will adjust the colors in the stylesheet and background images according to\n# this color. Hue is specified as an angle on a colorwheel, see\n# http://en.wikipedia.org/wiki/Hue for more information. For instance the value\n# 0 represents red, 60 is yellow, 120 is green, 180 is cyan, 240 is blue, 300\n# purple, and 360 is red again.\n# Minimum value: 0, maximum value: 359, default value: 220.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_COLORSTYLE_HUE    = 220\n\n# The HTML_COLORSTYLE_SAT tag controls the purity (or saturation) of the colors\n# in the HTML output. For a value of 0 the output will use grayscales only. A\n# value of 255 will produce the most vivid colors.\n# Minimum value: 0, maximum value: 255, default value: 100.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_COLORSTYLE_SAT    = 100\n\n# The HTML_COLORSTYLE_GAMMA tag controls the gamma correction applied to the\n# luminance component of the colors in the HTML output. Values below 100\n# gradually make the output lighter, whereas values above 100 make the output\n# darker. The value divided by 100 is the actual gamma applied, so 80 represents\n# a gamma of 0.8, The value 220 represents a gamma of 2.2, and 100 does not\n# change the gamma.\n# Minimum value: 40, maximum value: 240, default value: 80.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_COLORSTYLE_GAMMA  = 80\n\n# If the HTML_TIMESTAMP tag is set to YES then the footer of each generated HTML\n# page will contain the date and time when the page was generated. Setting this\n# to NO can help when comparing the output of multiple runs.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_TIMESTAMP         = YES\n\n# If the HTML_DYNAMIC_SECTIONS tag is set to YES then the generated HTML\n# documentation will contain sections that can be hidden and shown after the\n# page has loaded.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_DYNAMIC_SECTIONS  = NO\n\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n# representing an infinite number of entries and will result in a full expanded\n# tree by default.\n# Minimum value: 0, maximum value: 9999, default value: 100.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_INDEX_NUM_ENTRIES = 100\n\n# If the GENERATE_DOCSET tag is set to YES, additional index files will be\n# generated that can be used as input for Apple's Xcode 3 integrated development\n# environment (see: http://developer.apple.com/tools/xcode/), introduced with\n# OSX 10.5 (Leopard). To create a documentation set, doxygen will generate a\n# Makefile in the HTML output directory. Running make will produce the docset in\n# that directory and running make install will install the docset in\n# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find it at\n# startup. See http://developer.apple.com/tools/creatingdocsetswithdoxygen.html\n# for more information.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_DOCSET        = NO\n\n# This tag determines the name of the docset feed. A documentation feed provides\n# an umbrella under which multiple documentation sets from a single provider\n# (such as a company or product suite) can be grouped.\n# The default value is: Doxygen generated docs.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_FEEDNAME        = \"Doxygen generated docs\"\n\n# This tag specifies a string that should uniquely identify the documentation\n# set bundle. This should be a reverse domain-name style string, e.g.\n# com.mycompany.MyDocSet. Doxygen will append .docset to the name.\n# The default value is: org.doxygen.Project.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_BUNDLE_ID       = org.doxygen.Project\n\n# The DOCSET_PUBLISHER_ID tag specifies a string that should uniquely identify\n# the documentation publisher. This should be a reverse domain-name style\n# string, e.g. com.mycompany.MyDocSet.documentation.\n# The default value is: org.doxygen.Publisher.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_PUBLISHER_ID    = org.doxygen.Publisher\n\n# The DOCSET_PUBLISHER_NAME tag identifies the documentation publisher.\n# The default value is: Publisher.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_PUBLISHER_NAME  = Publisher\n\n# If the GENERATE_HTMLHELP tag is set to YES then doxygen generates three\n# additional HTML index files: index.hhp, index.hhc, and index.hhk. The\n# index.hhp is a project file that can be read by Microsoft's HTML Help Workshop\n# (see: http://www.microsoft.com/en-us/download/details.aspx?id=21138) on\n# Windows.\n#\n# The HTML Help Workshop contains a compiler that can convert all HTML output\n# generated by doxygen into a single compiled HTML file (.chm). Compiled HTML\n# files are now used as the Windows 98 help format, and will replace the old\n# Windows help format (.hlp) on all Windows platforms in the future. Compressed\n# HTML files also contain an index, a table of contents, and you can search for\n# words in the documentation. The HTML workshop also contains a viewer for\n# compressed HTML files.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_HTMLHELP      = NO\n\n# The CHM_FILE tag can be used to specify the file name of the resulting .chm\n# file. You can add a path in front of the file if the result should not be\n# written to the html output directory.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nCHM_FILE               =\n\n# The HHC_LOCATION tag can be used to specify the location (absolute path\n# including file name) of the HTML help compiler ( hhc.exe). If non-empty\n# doxygen will try to run the HTML help compiler on the generated index.hhp.\n# The file has to be specified with full path.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nHHC_LOCATION           =\n\n# The GENERATE_CHI flag controls if a separate .chi index file is generated (\n# YES) or that it should be included in the master .chm file ( NO).\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nGENERATE_CHI           = NO\n\n# The CHM_INDEX_ENCODING is used to encode HtmlHelp index ( hhk), content ( hhc)\n# and project file content.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nCHM_INDEX_ENCODING     =\n\n# The BINARY_TOC flag controls whether a binary table of contents is generated (\n# YES) or a normal table of contents ( NO) in the .chm file. Furthermore it\n# enables the Previous and Next buttons.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nBINARY_TOC             = NO\n\n# The TOC_EXPAND flag can be set to YES to add extra items for group members to\n# the table of contents of the HTML help documentation and to the tree view.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nTOC_EXPAND             = NO\n\n# If the GENERATE_QHP tag is set to YES and both QHP_NAMESPACE and\n# QHP_VIRTUAL_FOLDER are set, an additional index file will be generated that\n# can be used as input for Qt's qhelpgenerator to generate a Qt Compressed Help\n# (.qch) of the generated HTML documentation.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_QHP           = NO\n\n# If the QHG_LOCATION tag is specified, the QCH_FILE tag can be used to specify\n# the file name of the resulting .qch file. The path specified is relative to\n# the HTML output folder.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQCH_FILE               =\n\n# The QHP_NAMESPACE tag specifies the namespace to use when generating Qt Help\n# Project output. For more information please see Qt Help Project / Namespace\n# (see: http://qt-project.org/doc/qt-4.8/qthelpproject.html#namespace).\n# The default value is: org.doxygen.Project.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_NAMESPACE          = org.doxygen.Project\n\n# The QHP_VIRTUAL_FOLDER tag specifies the namespace to use when generating Qt\n# Help Project output. For more information please see Qt Help Project / Virtual\n# Folders (see: http://qt-project.org/doc/qt-4.8/qthelpproject.html#virtual-\n# folders).\n# The default value is: doc.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_VIRTUAL_FOLDER     = doc\n\n# If the QHP_CUST_FILTER_NAME tag is set, it specifies the name of a custom\n# filter to add. For more information please see Qt Help Project / Custom\n# Filters (see: http://qt-project.org/doc/qt-4.8/qthelpproject.html#custom-\n# filters).\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_CUST_FILTER_NAME   =\n\n# The QHP_CUST_FILTER_ATTRS tag specifies the list of the attributes of the\n# custom filter to add. For more information please see Qt Help Project / Custom\n# Filters (see: http://qt-project.org/doc/qt-4.8/qthelpproject.html#custom-\n# filters).\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_CUST_FILTER_ATTRS  =\n\n# The QHP_SECT_FILTER_ATTRS tag specifies the list of the attributes this\n# project's filter section matches. Qt Help Project / Filter Attributes (see:\n# http://qt-project.org/doc/qt-4.8/qthelpproject.html#filter-attributes).\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_SECT_FILTER_ATTRS  =\n\n# The QHG_LOCATION tag can be used to specify the location of Qt's\n# qhelpgenerator. If non-empty doxygen will try to run qhelpgenerator on the\n# generated .qhp file.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHG_LOCATION           =\n\n# If the GENERATE_ECLIPSEHELP tag is set to YES, additional index files will be\n# generated, together with the HTML files, they form an Eclipse help plugin. To\n# install this plugin and make it available under the help contents menu in\n# Eclipse, the contents of the directory containing the HTML and XML files needs\n# to be copied into the plugins directory of eclipse. The name of the directory\n# within the plugins directory should be the same as the ECLIPSE_DOC_ID value.\n# After copying Eclipse needs to be restarted before the help appears.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_ECLIPSEHELP   = NO\n\n# A unique identifier for the Eclipse help plugin. When installing the plugin\n# the directory name containing the HTML and XML files should also have this\n# name. Each documentation set should have its own identifier.\n# The default value is: org.doxygen.Project.\n# This tag requires that the tag GENERATE_ECLIPSEHELP is set to YES.\n\nECLIPSE_DOC_ID         = org.doxygen.Project\n\n# If you want full control over the layout of the generated HTML pages it might\n# be necessary to disable the index and replace it with your own. The\n# DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top\n# of each HTML page. A value of NO enables the index and the value YES disables\n# it. Since the tabs in the index contain the same information as the navigation\n# tree, you can set this option to YES if you also set GENERATE_TREEVIEW to YES.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nDISABLE_INDEX          = NO\n\n# The GENERATE_TREEVIEW tag is used to specify whether a tree-like index\n# structure should be generated to display hierarchical information. If the tag\n# value is set to YES, a side panel will be generated containing a tree-like\n# index structure (just like the one that is generated for HTML Help). For this\n# to work a browser that supports JavaScript, DHTML, CSS and frames is required\n# (i.e. any modern browser). Windows users are probably better off using the\n# HTML help feature. Via custom stylesheets (see HTML_EXTRA_STYLESHEET) one can\n# further fine-tune the look of the index. As an example, the default style\n# sheet generated by doxygen has an example that shows how to put an image at\n# the root of the tree instead of the PROJECT_NAME. Since the tree basically has\n# the same information as the tab index, you could consider setting\n# DISABLE_INDEX to YES when enabling this option.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_TREEVIEW      = NO\n\n# The ENUM_VALUES_PER_LINE tag can be used to set the number of enum values that\n# doxygen will group on one line in the generated HTML documentation.\n#\n# Note that a value of 0 will completely suppress the enum values from appearing\n# in the overview section.\n# Minimum value: 0, maximum value: 20, default value: 4.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nENUM_VALUES_PER_LINE   = 4\n\n# If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be used\n# to set the initial width (in pixels) of the frame in which the tree is shown.\n# Minimum value: 0, maximum value: 1500, default value: 250.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nTREEVIEW_WIDTH         = 250\n\n# When the EXT_LINKS_IN_WINDOW option is set to YES doxygen will open links to\n# external symbols imported via tag files in a separate window.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nEXT_LINKS_IN_WINDOW    = NO\n\n# Use this tag to change the font size of LaTeX formulas included as images in\n# the HTML documentation. When you change the font size after a successful\n# doxygen run you need to manually remove any form_*.png images from the HTML\n# output directory to force them to be regenerated.\n# Minimum value: 8, maximum value: 50, default value: 10.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nFORMULA_FONTSIZE       = 10\n\n# Use the FORMULA_TRANPARENT tag to determine whether or not the images\n# generated for formulas are transparent PNGs. Transparent PNGs are not\n# supported properly for IE 6.0, but are supported on all modern browsers.\n#\n# Note that when changing this option you need to delete any form_*.png files in\n# the HTML output directory before the changes have effect.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nFORMULA_TRANSPARENT    = YES\n\n# Enable the USE_MATHJAX option to render LaTeX formulas using MathJax (see\n# http://www.mathjax.org) which uses client side Javascript for the rendering\n# instead of using prerendered bitmaps. Use this if you do not have LaTeX\n# installed or if you want to formulas look prettier in the HTML output. When\n# enabled you may also need to install MathJax separately and configure the path\n# to it using the MATHJAX_RELPATH option.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nUSE_MATHJAX            = NO\n\n# When MathJax is enabled you can set the default output format to be used for\n# the MathJax output. See the MathJax site (see:\n# http://docs.mathjax.org/en/latest/output.html) for more details.\n# Possible values are: HTML-CSS (which is slower, but has the best\n# compatibility), NativeMML (i.e. MathML) and SVG.\n# The default value is: HTML-CSS.\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_FORMAT         = HTML-CSS\n\n# When MathJax is enabled you need to specify the location relative to the HTML\n# output directory using the MATHJAX_RELPATH option. The destination directory\n# should contain the MathJax.js script. For instance, if the mathjax directory\n# is located at the same level as the HTML output directory, then\n# MATHJAX_RELPATH should be ../mathjax. The default value points to the MathJax\n# Content Delivery Network so you can quickly see the result without installing\n# MathJax. However, it is strongly recommended to install a local copy of\n# MathJax from http://www.mathjax.org before deployment.\n# The default value is: http://cdn.mathjax.org/mathjax/latest.\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_RELPATH        = http://cdn.mathjax.org/mathjax/latest\n\n# The MATHJAX_EXTENSIONS tag can be used to specify one or more MathJax\n# extension names that should be enabled during MathJax rendering. For example\n# MATHJAX_EXTENSIONS = TeX/AMSmath TeX/AMSsymbols\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_EXTENSIONS     =\n\n# The MATHJAX_CODEFILE tag can be used to specify a file with javascript pieces\n# of code that will be used on startup of the MathJax code. See the MathJax site\n# (see: http://docs.mathjax.org/en/latest/output.html) for more details. For an\n# example see the documentation.\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_CODEFILE       =\n\n# When the SEARCHENGINE tag is enabled doxygen will generate a search box for\n# the HTML output. The underlying search engine uses javascript and DHTML and\n# should work on any modern browser. Note that when using HTML help\n# (GENERATE_HTMLHELP), Qt help (GENERATE_QHP), or docsets (GENERATE_DOCSET)\n# there is already a search function so this one should typically be disabled.\n# For large projects the javascript based search engine can be slow, then\n# enabling SERVER_BASED_SEARCH may provide a better solution. It is possible to\n# search using the keyboard; to jump to the search box use <access key> + S\n# (what the <access key> is depends on the OS and browser, but it is typically\n# <CTRL>, <ALT>/<option>, or both). Inside the search box use the <cursor down\n# key> to jump into the search results window, the results can be navigated\n# using the <cursor keys>. Press <Enter> to select an item or <escape> to cancel\n# the search. The filter options can be selected when the cursor is inside the\n# search box by pressing <Shift>+<cursor down>. Also here use the <cursor keys>\n# to select a filter and <Enter> or <escape> to activate or cancel the filter\n# option.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nSEARCHENGINE           = YES\n\n# When the SERVER_BASED_SEARCH tag is enabled the search engine will be\n# implemented using a web server instead of a web client using Javascript. There\n# are two flavors of web server based searching depending on the EXTERNAL_SEARCH\n# setting. When disabled, doxygen will generate a PHP script for searching and\n# an index file used by the script. When EXTERNAL_SEARCH is enabled the indexing\n# and searching needs to be provided by external tools. See the section\n# \"External Indexing and Searching\" for details.\n# The default value is: NO.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nSERVER_BASED_SEARCH    = NO\n\n# When EXTERNAL_SEARCH tag is enabled doxygen will no longer generate the PHP\n# script for searching. Instead the search results are written to an XML file\n# which needs to be processed by an external indexer. Doxygen will invoke an\n# external search engine pointed to by the SEARCHENGINE_URL option to obtain the\n# search results.\n#\n# Doxygen ships with an example indexer ( doxyindexer) and search engine\n# (doxysearch.cgi) which are based on the open source search engine library\n# Xapian (see: http://xapian.org/).\n#\n# See the section \"External Indexing and Searching\" for details.\n# The default value is: NO.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nEXTERNAL_SEARCH        = NO\n\n# The SEARCHENGINE_URL should point to a search engine hosted by a web server\n# which will return the search results when EXTERNAL_SEARCH is enabled.\n#\n# Doxygen ships with an example indexer ( doxyindexer) and search engine\n# (doxysearch.cgi) which are based on the open source search engine library\n# Xapian (see: http://xapian.org/). See the section \"External Indexing and\n# Searching\" for details.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nSEARCHENGINE_URL       =\n\n# When SERVER_BASED_SEARCH and EXTERNAL_SEARCH are both enabled the unindexed\n# search data is written to a file for indexing by an external tool. With the\n# SEARCHDATA_FILE tag the name of this file can be specified.\n# The default file is: searchdata.xml.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nSEARCHDATA_FILE        = searchdata.xml\n\n# When SERVER_BASED_SEARCH and EXTERNAL_SEARCH are both enabled the\n# EXTERNAL_SEARCH_ID tag can be used as an identifier for the project. This is\n# useful in combination with EXTRA_SEARCH_MAPPINGS to search through multiple\n# projects and redirect the results back to the right project.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nEXTERNAL_SEARCH_ID     =\n\n# The EXTRA_SEARCH_MAPPINGS tag can be used to enable searching through doxygen\n# projects other than the one defined by this configuration file, but that are\n# all added to the same external search index. Each project needs to have a\n# unique id set via EXTERNAL_SEARCH_ID. The search mapping then maps the id of\n# to a relative location where the documentation can be found. The format is:\n# EXTRA_SEARCH_MAPPINGS = tagname1=loc1 tagname2=loc2 ...\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nEXTRA_SEARCH_MAPPINGS  =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the LaTeX output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_LATEX tag is set to YES doxygen will generate LaTeX output.\n# The default value is: YES.\n\nGENERATE_LATEX         = NO\n\n# The LATEX_OUTPUT tag is used to specify where the LaTeX docs will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: latex.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_OUTPUT           = latex\n\n# The LATEX_CMD_NAME tag can be used to specify the LaTeX command name to be\n# invoked.\n#\n# Note that when enabling USE_PDFLATEX this option is only used for generating\n# bitmaps for formulas in the HTML output, but not in the Makefile that is\n# written to the output directory.\n# The default file is: latex.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_CMD_NAME         = latex\n\n# The MAKEINDEX_CMD_NAME tag can be used to specify the command name to generate\n# index for LaTeX.\n# The default file is: makeindex.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nMAKEINDEX_CMD_NAME     = makeindex\n\n# If the COMPACT_LATEX tag is set to YES doxygen generates more compact LaTeX\n# documents. This may be useful for small projects and may help to save some\n# trees in general.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nCOMPACT_LATEX          = NO\n\n# The PAPER_TYPE tag can be used to set the paper type that is used by the\n# printer.\n# Possible values are: a4 (210 x 297 mm), letter (8.5 x 11 inches), legal (8.5 x\n# 14 inches) and executive (7.25 x 10.5 inches).\n# The default value is: a4.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nPAPER_TYPE             = a4\n\n# The EXTRA_PACKAGES tag can be used to specify one or more LaTeX package names\n# that should be included in the LaTeX output. To get the times font for\n# instance you can specify\n# EXTRA_PACKAGES=times\n# If left blank no extra packages will be included.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nEXTRA_PACKAGES         =\n\n# The LATEX_HEADER tag can be used to specify a personal LaTeX header for the\n# generated LaTeX document. The header should contain everything until the first\n# chapter. If it is left blank doxygen will generate a standard header. See\n# section \"Doxygen usage\" for information on how to let doxygen write the\n# default header to a separate file.\n#\n# Note: Only use a user-defined header if you know what you are doing! The\n# following commands have a special meaning inside the header: $title,\n# $datetime, $date, $doxygenversion, $projectname, $projectnumber,\n# $projectbrief, $projectlogo. Doxygen will replace $title with the empy string,\n# for the replacement values of the other commands the user is refered to\n# HTML_HEADER.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_HEADER           =\n\n# The LATEX_FOOTER tag can be used to specify a personal LaTeX footer for the\n# generated LaTeX document. The footer should contain everything after the last\n# chapter. If it is left blank doxygen will generate a standard footer. See\n# LATEX_HEADER for more information on how to generate a default footer and what\n# special commands can be used inside the footer.\n#\n# Note: Only use a user-defined footer if you know what you are doing!\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_FOOTER           =\n\n# The LATEX_EXTRA_FILES tag can be used to specify one or more extra images or\n# other source files which should be copied to the LATEX_OUTPUT output\n# directory. Note that the files will be copied as-is; there are no commands or\n# markers available.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_EXTRA_FILES      =\n\n# If the PDF_HYPERLINKS tag is set to YES, the LaTeX that is generated is\n# prepared for conversion to PDF (using ps2pdf or pdflatex). The PDF file will\n# contain links (just like the HTML output) instead of page references. This\n# makes the output suitable for online browsing using a PDF viewer.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nPDF_HYPERLINKS         = YES\n\n# If the USE_PDFLATEX tag is set to YES, doxygen will use pdflatex to generate\n# the PDF file directly from the LaTeX files. Set this option to YES to get a\n# higher quality PDF documentation.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nUSE_PDFLATEX           = YES\n\n# If the LATEX_BATCHMODE tag is set to YES, doxygen will add the \\batchmode\n# command to the generated LaTeX files. This will instruct LaTeX to keep running\n# if errors occur, instead of asking the user for help. This option is also used\n# when generating formulas in HTML.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_BATCHMODE        = NO\n\n# If the LATEX_HIDE_INDICES tag is set to YES then doxygen will not include the\n# index chapters (such as File Index, Compound Index, etc.) in the output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_HIDE_INDICES     = NO\n\n# If the LATEX_SOURCE_CODE tag is set to YES then doxygen will include source\n# code with syntax highlighting in the LaTeX output.\n#\n# Note that which sources are shown also depends on other settings such as\n# SOURCE_BROWSER.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_SOURCE_CODE      = NO\n\n# The LATEX_BIB_STYLE tag can be used to specify the style to use for the\n# bibliography, e.g. plainnat, or ieeetr. See\n# http://en.wikipedia.org/wiki/BibTeX and \\cite for more info.\n# The default value is: plain.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_BIB_STYLE        = plain\n\n#---------------------------------------------------------------------------\n# Configuration options related to the RTF output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_RTF tag is set to YES doxygen will generate RTF output. The\n# RTF output is optimized for Word 97 and may not look too pretty with other RTF\n# readers/editors.\n# The default value is: NO.\n\nGENERATE_RTF           = NO\n\n# The RTF_OUTPUT tag is used to specify where the RTF docs will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: rtf.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_OUTPUT             = rtf\n\n# If the COMPACT_RTF tag is set to YES doxygen generates more compact RTF\n# documents. This may be useful for small projects and may help to save some\n# trees in general.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nCOMPACT_RTF            = NO\n\n# If the RTF_HYPERLINKS tag is set to YES, the RTF that is generated will\n# contain hyperlink fields. The RTF file will contain links (just like the HTML\n# output) instead of page references. This makes the output suitable for online\n# browsing using Word or some other Word compatible readers that support those\n# fields.\n#\n# Note: WordPad (write) and others do not support links.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_HYPERLINKS         = NO\n\n# Load stylesheet definitions from file. Syntax is similar to doxygen's config\n# file, i.e. a series of assignments. You only have to provide replacements,\n# missing definitions are set to their default value.\n#\n# See also section \"Doxygen usage\" for information on how to generate the\n# default style sheet that doxygen normally uses.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_STYLESHEET_FILE    =\n\n# Set optional variables used in the generation of an RTF document. Syntax is\n# similar to doxygen's config file. A template extensions file can be generated\n# using doxygen -e rtf extensionFile.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_EXTENSIONS_FILE    =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the man page output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_MAN tag is set to YES doxygen will generate man pages for\n# classes and files.\n# The default value is: NO.\n\nGENERATE_MAN           = NO\n\n# The MAN_OUTPUT tag is used to specify where the man pages will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it. A directory man3 will be created inside the directory specified by\n# MAN_OUTPUT.\n# The default directory is: man.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_OUTPUT             = man\n\n# The MAN_EXTENSION tag determines the extension that is added to the generated\n# man pages. In case the manual section does not start with a number, the number\n# 3 is prepended. The dot (.) at the beginning of the MAN_EXTENSION tag is\n# optional.\n# The default value is: .3.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_EXTENSION          = .3\n\n# The MAN_SUBDIR tag determines the name of the directory created within\n# MAN_OUTPUT in which the man pages are placed. If defaults to man followed by\n# MAN_EXTENSION with the initial . removed.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_SUBDIR             =\n\n# If the MAN_LINKS tag is set to YES and doxygen generates man output, then it\n# will generate one additional man file for each entity documented in the real\n# man page(s). These additional files only source the real man page, but without\n# them the man command would be unable to find the correct page.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_LINKS              = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the XML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_XML tag is set to YES doxygen will generate an XML file that\n# captures the structure of the code including all documentation.\n# The default value is: NO.\n\nGENERATE_XML           = NO\n\n# The XML_OUTPUT tag is used to specify where the XML pages will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: xml.\n# This tag requires that the tag GENERATE_XML is set to YES.\n\nXML_OUTPUT             = xml\n\n# If the XML_PROGRAMLISTING tag is set to YES doxygen will dump the program\n# listings (including syntax highlighting and cross-referencing information) to\n# the XML output. Note that enabling this will significantly increase the size\n# of the XML output.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_XML is set to YES.\n\nXML_PROGRAMLISTING     = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to the DOCBOOK output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_DOCBOOK tag is set to YES doxygen will generate Docbook files\n# that can be used to generate PDF.\n# The default value is: NO.\n\nGENERATE_DOCBOOK       = NO\n\n# The DOCBOOK_OUTPUT tag is used to specify where the Docbook pages will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be put in\n# front of it.\n# The default directory is: docbook.\n# This tag requires that the tag GENERATE_DOCBOOK is set to YES.\n\nDOCBOOK_OUTPUT         = docbook\n\n# If the DOCBOOK_PROGRAMLISTING tag is set to YES doxygen will include the\n# program listings (including syntax highlighting and cross-referencing\n# information) to the DOCBOOK output. Note that enabling this will significantly\n# increase the size of the DOCBOOK output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_DOCBOOK is set to YES.\n\nDOCBOOK_PROGRAMLISTING = NO\n\n#---------------------------------------------------------------------------\n# Configuration options for the AutoGen Definitions output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_AUTOGEN_DEF tag is set to YES doxygen will generate an AutoGen\n# Definitions (see http://autogen.sf.net) file that captures the structure of\n# the code including all documentation. Note that this feature is still\n# experimental and incomplete at the moment.\n# The default value is: NO.\n\nGENERATE_AUTOGEN_DEF   = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the Perl module output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES doxygen will generate a Perl module\n# file that captures the structure of the code including all documentation.\n#\n# Note that this feature is still experimental and incomplete at the moment.\n# The default value is: NO.\n\nGENERATE_PERLMOD       = NO\n\n# If the PERLMOD_LATEX tag is set to YES doxygen will generate the necessary\n# Makefile rules, Perl scripts and LaTeX code to be able to generate PDF and DVI\n# output from the Perl module output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\nPERLMOD_LATEX          = NO\n\n# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be nicely\n# formatted so it can be parsed by a human reader. This is useful if you want to\n# understand what is going on. On the other hand, if this tag is set to NO the\n# size of the Perl module output will be much smaller and Perl will parse it\n# just the same.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\nPERLMOD_PRETTY         = YES\n\n# The names of the make variables in the generated doxyrules.make file are\n# prefixed with the string contained in PERLMOD_MAKEVAR_PREFIX. This is useful\n# so different doxyrules.make files included by the same Makefile don't\n# overwrite each other's variables.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\nPERLMOD_MAKEVAR_PREFIX =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the preprocessor\n#---------------------------------------------------------------------------\n\n# If the ENABLE_PREPROCESSING tag is set to YES doxygen will evaluate all\n# C-preprocessor directives found in the sources and include files.\n# The default value is: YES.\n\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES doxygen will expand all macro names\n# in the source code. If set to NO only conditional compilation will be\n# performed. Macro expansion can be done in a controlled way by setting\n# EXPAND_ONLY_PREDEF to YES.\n# The default value is: NO.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nMACRO_EXPANSION        = YES\n\n# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES then\n# the macro expansion is limited to the macros specified with the PREDEFINED and\n# EXPAND_AS_DEFINED tags.\n# The default value is: NO.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nEXPAND_ONLY_PREDEF     = YES\n\n# If the SEARCH_INCLUDES tag is set to YES the includes files in the\n# INCLUDE_PATH will be searched if a #include is found.\n# The default value is: YES.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nSEARCH_INCLUDES        = YES\n\n# The INCLUDE_PATH tag can be used to specify one or more directories that\n# contain include files that are not input files but should be processed by the\n# preprocessor.\n# This tag requires that the tag SEARCH_INCLUDES is set to YES.\n\nINCLUDE_PATH           =\n\n# You can use the INCLUDE_FILE_PATTERNS tag to specify one or more wildcard\n# patterns (like *.h and *.hpp) to filter out the header-files in the\n# directories. If left blank, the patterns specified with FILE_PATTERNS will be\n# used.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nINCLUDE_FILE_PATTERNS  =\n\n# The PREDEFINED tag can be used to specify one or more macro names that are\n# defined before the preprocessor is started (similar to the -D option of e.g.\n# gcc). The argument of the tag is a list of macros of the form: name or\n# name=definition (no spaces). If the definition and the \"=\" are omitted, \"=1\"\n# is assumed. To prevent a macro definition from being undefined via #undef or\n# recursively expanded use the := operator instead of the = operator.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nPREDEFINED             = THEMIS_API SOTER_API\n\n# If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then this\n# tag can be used to specify a list of macro names that should be expanded. The\n# macro definition that is found in the sources will be used. Use the PREDEFINED\n# tag if you want to use a different macro definition that overrules the\n# definition found in the source code.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nEXPAND_AS_DEFINED      =\n\n# If the SKIP_FUNCTION_MACROS tag is set to YES then doxygen's preprocessor will\n# remove all references to function-like macros that are alone on a line, have\n# an all uppercase name, and do not end with a semicolon. Such function macros\n# are typically used for boiler-plate code, and will confuse the parser if not\n# removed.\n# The default value is: YES.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nSKIP_FUNCTION_MACROS   = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to external references\n#---------------------------------------------------------------------------\n\n# The TAGFILES tag can be used to specify one or more tag files. For each tag\n# file the location of the external documentation should be added. The format of\n# a tag file without this location is as follows:\n# TAGFILES = file1 file2 ...\n# Adding location for the tag files is done as follows:\n# TAGFILES = file1=loc1 \"file2 = loc2\" ...\n# where loc1 and loc2 can be relative or absolute paths or URLs. See the\n# section \"Linking to external documentation\" for more information about the use\n# of tag files.\n# Note: Each tag file must have a unique name (where the name does NOT include\n# the path). If a tag file is not located in the directory in which doxygen is\n# run, you must also specify the path to the tagfile here.\n\nTAGFILES               =\n\n# When a file name is specified after GENERATE_TAGFILE, doxygen will create a\n# tag file that is based on the input files it reads. See section \"Linking to\n# external documentation\" for more information about the usage of tag files.\n\nGENERATE_TAGFILE       =\n\n# If the ALLEXTERNALS tag is set to YES all external class will be listed in the\n# class index. If set to NO only the inherited external classes will be listed.\n# The default value is: NO.\n\nALLEXTERNALS           = NO\n\n# If the EXTERNAL_GROUPS tag is set to YES all external groups will be listed in\n# the modules index. If set to NO, only the current project's groups will be\n# listed.\n# The default value is: YES.\n\nEXTERNAL_GROUPS        = YES\n\n# If the EXTERNAL_PAGES tag is set to YES all external pages will be listed in\n# the related pages index. If set to NO, only the current project's pages will\n# be listed.\n# The default value is: YES.\n\nEXTERNAL_PAGES         = YES\n\n# The PERL_PATH should be the absolute path and name of the perl script\n# interpreter (i.e. the result of 'which perl').\n# The default file (with absolute path) is: /usr/bin/perl.\n\nPERL_PATH              = /usr/bin/perl\n\n#---------------------------------------------------------------------------\n# Configuration options related to the dot tool\n#---------------------------------------------------------------------------\n\n# If the CLASS_DIAGRAMS tag is set to YES doxygen will generate a class diagram\n# (in HTML and LaTeX) for classes with base or super classes. Setting the tag to\n# NO turns the diagrams off. Note that this option also works with HAVE_DOT\n# disabled, but it is recommended to install and use dot, since it yields more\n# powerful graphs.\n# The default value is: YES.\n\nCLASS_DIAGRAMS         = NO\n\n# You can define message sequence charts within doxygen comments using the \\msc\n# command. Doxygen will then run the mscgen tool (see:\n# http://www.mcternan.me.uk/mscgen/)) to produce the chart and insert it in the\n# documentation. The MSCGEN_PATH tag allows you to specify the directory where\n# the mscgen tool resides. If left empty the tool is assumed to be found in the\n# default search path.\n\nMSCGEN_PATH            =\n\n# You can include diagrams made with dia in doxygen documentation. Doxygen will\n# then run dia to produce the diagram and insert it in the documentation. The\n# DIA_PATH tag allows you to specify the directory where the dia binary resides.\n# If left empty dia is assumed to be found in the default search path.\n\nDIA_PATH               =\n\n# If set to YES, the inheritance and collaboration graphs will hide inheritance\n# and usage relations if the target is undocumented or is not a class.\n# The default value is: YES.\n\nHIDE_UNDOC_RELATIONS   = YES\n\n# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is\n# available from the path. This tool is part of Graphviz (see:\n# http://www.graphviz.org/), a graph visualization toolkit from AT&T and Lucent\n# Bell Labs. The other options in this section have no effect if this option is\n# set to NO\n# The default value is: YES.\n\nHAVE_DOT               = NO\n\n# The DOT_NUM_THREADS specifies the number of dot invocations doxygen is allowed\n# to run in parallel. When set to 0 doxygen will base this on the number of\n# processors available in the system. You can set it explicitly to a value\n# larger than 0 to get control over the balance between CPU load and processing\n# speed.\n# Minimum value: 0, maximum value: 32, default value: 0.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_NUM_THREADS        = 0\n\n# When you want a differently looking font in the dot files that doxygen\n# generates you can specify the font name using DOT_FONTNAME. You need to make\n# sure dot is able to find the font, which can be done by putting it in a\n# standard location or by setting the DOTFONTPATH environment variable or by\n# setting DOT_FONTPATH to the directory containing the font.\n# The default value is: Helvetica.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_FONTNAME           = Helvetica\n\n# The DOT_FONTSIZE tag can be used to set the size (in points) of the font of\n# dot graphs.\n# Minimum value: 4, maximum value: 24, default value: 10.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_FONTSIZE           = 10\n\n# By default doxygen will tell dot to use the default font as specified with\n# DOT_FONTNAME. If you specify a different font using DOT_FONTNAME you can set\n# the path where dot can find it using this tag.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_FONTPATH           =\n\n# If the CLASS_GRAPH tag is set to YES then doxygen will generate a graph for\n# each documented class showing the direct and indirect inheritance relations.\n# Setting this tag to YES will force the CLASS_DIAGRAMS tag to NO.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCLASS_GRAPH            = NO\n\n# If the COLLABORATION_GRAPH tag is set to YES then doxygen will generate a\n# graph for each documented class showing the direct and indirect implementation\n# dependencies (inheritance, containment, and class references variables) of the\n# class with other documented classes.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCOLLABORATION_GRAPH    = NO\n\n# If the GROUP_GRAPHS tag is set to YES then doxygen will generate a graph for\n# groups, showing the direct groups dependencies.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nGROUP_GRAPHS           = NO\n\n# If the UML_LOOK tag is set to YES doxygen will generate inheritance and\n# collaboration diagrams in a style similar to the OMG's Unified Modeling\n# Language.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nUML_LOOK               = NO\n\n# If the UML_LOOK tag is enabled, the fields and methods are shown inside the\n# class node. If there are many fields or methods and many nodes the graph may\n# become too big to be useful. The UML_LIMIT_NUM_FIELDS threshold limits the\n# number of items for each type to make the size more manageable. Set this to 0\n# for no limit. Note that the threshold may be exceeded by 50% before the limit\n# is enforced. So when you set the threshold to 10, up to 15 fields may appear,\n# but if the number exceeds 15, the total amount of fields shown is limited to\n# 10.\n# Minimum value: 0, maximum value: 100, default value: 10.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nUML_LIMIT_NUM_FIELDS   = 10\n\n# If the TEMPLATE_RELATIONS tag is set to YES then the inheritance and\n# collaboration graphs will show the relations between templates and their\n# instances.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nTEMPLATE_RELATIONS     = NO\n\n# If the INCLUDE_GRAPH, ENABLE_PREPROCESSING and SEARCH_INCLUDES tags are set to\n# YES then doxygen will generate a graph for each documented file showing the\n# direct and indirect include dependencies of the file with other documented\n# files.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nINCLUDE_GRAPH          = YES\n\n# If the INCLUDED_BY_GRAPH, ENABLE_PREPROCESSING and SEARCH_INCLUDES tags are\n# set to YES then doxygen will generate a graph for each documented file showing\n# the direct and indirect include dependencies of the file with other documented\n# files.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nINCLUDED_BY_GRAPH      = YES\n\n# If the CALL_GRAPH tag is set to YES then doxygen will generate a call\n# dependency graph for every global function or class method.\n#\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable call graphs for selected\n# functions only using the \\callgraph command.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCALL_GRAPH             = NO\n\n# If the CALLER_GRAPH tag is set to YES then doxygen will generate a caller\n# dependency graph for every global function or class method.\n#\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable caller graphs for selected\n# functions only using the \\callergraph command.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCALLER_GRAPH           = NO\n\n# If the GRAPHICAL_HIERARCHY tag is set to YES then doxygen will graphical\n# hierarchy of all classes instead of a textual one.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nGRAPHICAL_HIERARCHY    = YES\n\n# If the DIRECTORY_GRAPH tag is set to YES then doxygen will show the\n# dependencies a directory has on other directories in a graphical way. The\n# dependency relations are determined by the #include relations between the\n# files in the directories.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDIRECTORY_GRAPH        = YES\n\n# The DOT_IMAGE_FORMAT tag can be used to set the image format of the images\n# generated by dot.\n# Note: If you choose svg you need to set HTML_FILE_EXTENSION to xhtml in order\n# to make the SVG files visible in IE 9+ (other browsers do not have this\n# requirement).\n# Possible values are: png, png:cairo, png:cairo:cairo, png:cairo:gd, png:gd,\n# png:gd:gd, jpg, jpg:cairo, jpg:cairo:gd, jpg:gd, jpg:gd:gd, gif, gif:cairo,\n# gif:cairo:gd, gif:gd, gif:gd:gd and svg.\n# The default value is: png.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_IMAGE_FORMAT       = png\n\n# If DOT_IMAGE_FORMAT is set to svg, then this option can be set to YES to\n# enable generation of interactive SVG images that allow zooming and panning.\n#\n# Note that this requires a modern browser other than Internet Explorer. Tested\n# and working are Firefox, Chrome, Safari, and Opera.\n# Note: For IE 9+ you need to set HTML_FILE_EXTENSION to xhtml in order to make\n# the SVG files visible. Older versions of IE do not have SVG support.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nINTERACTIVE_SVG        = NO\n\n# The DOT_PATH tag can be used to specify the path where the dot tool can be\n# found. If left blank, it is assumed the dot tool can be found in the path.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_PATH               =\n\n# The DOTFILE_DIRS tag can be used to specify one or more directories that\n# contain dot files that are included in the documentation (see the \\dotfile\n# command).\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOTFILE_DIRS           =\n\n# The MSCFILE_DIRS tag can be used to specify one or more directories that\n# contain msc files that are included in the documentation (see the \\mscfile\n# command).\n\nMSCFILE_DIRS           =\n\n# The DIAFILE_DIRS tag can be used to specify one or more directories that\n# contain dia files that are included in the documentation (see the \\diafile\n# command).\n\nDIAFILE_DIRS           =\n\n# When using plantuml, the PLANTUML_JAR_PATH tag should be used to specify the\n# path where java can find the plantuml.jar file. If left blank, it is assumed\n# PlantUML is not used or called during a preprocessing step. Doxygen will\n# generate a warning when it encounters a \\startuml command in this case and\n# will not generate output for the diagram.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nPLANTUML_JAR_PATH      =\n\n# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of nodes\n# that will be shown in the graph. If the number of nodes in a graph becomes\n# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that doxygen if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n# Minimum value: 0, maximum value: 10000, default value: 50.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_GRAPH_MAX_NODES    = 50\n\n# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the graphs\n# generated by dot. A depth value of 3 means that only nodes reachable from the\n# root by following a path via at most 3 edges will be shown. Nodes that lay\n# further from the root node will be omitted. Note that setting this option to 1\n# or 2 may greatly reduce the computation time needed for large code bases. Also\n# note that the size of a graph can be further restricted by\n# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.\n# Minimum value: 0, maximum value: 1000, default value: 0.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nMAX_DOT_GRAPH_DEPTH    = 0\n\n# Set the DOT_TRANSPARENT tag to YES to generate images with a transparent\n# background. This is disabled by default, because dot on Windows does not seem\n# to support this out of the box.\n#\n# Warning: Depending on the platform used, enabling this option may lead to\n# badly anti-aliased labels on the edges of a graph (i.e. they become hard to\n# read).\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_TRANSPARENT        = NO\n\n# Set the DOT_MULTI_TARGETS tag to YES allow dot to generate multiple output\n# files in one run (i.e. multiple -o and -T options on the command line). This\n# makes dot run faster, but since only newer versions of dot (>1.8.10) support\n# this, this feature is disabled by default.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_MULTI_TARGETS      = NO\n\n# If the GENERATE_LEGEND tag is set to YES doxygen will generate a legend page\n# explaining the meaning of the various boxes and arrows in the dot generated\n# graphs.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nGENERATE_LEGEND        = YES\n\n# If the DOT_CLEANUP tag is set to YES doxygen will remove the intermediate dot\n# files that are used to generate the various graphs.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_CLEANUP            = YES\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.083984375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2015 Cossack Labs Limited\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 33.337890625,
          "content": "#\n# Copyright (c) 2015 Cossack Labs Limited\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n#===== Early setup =============================================================\n\n# Set default goal for \"make\"\n.DEFAULT_GOAL := all\n\n# Set shell for target commands\nSHELL = bash\n\n# Disable built-in rules\nMAKEFLAGS += --no-builtin-rules\n.SUFFIXES:\n\n## build directory\nBUILD_PATH ?= build\n\n# Include system configuration file, creating it if necessary\n-include $(BUILD_PATH)/configure.mk\n\n$(BUILD_PATH)/configure.mk:\n\t@./configure\n\n#===== Variables ===============================================================\n\n#----- Versioning --------------------------------------------------------------\n\n# Increment VERSION when making a new release of Themis.\n#\n# If you make breaking (backwards-incompatible) changes to API or ABI\n# then increment LIBRARY_SO_VERSION as well, and update package names.\nVERSION := $(shell test -d .git && git describe --tags || cat VERSION)\nLIBRARY_SO_VERSION = 0\n# Version in format X.Y.Z, without build number and commit hash\nVERSION_SHORT := $(shell cat VERSION)\n\n#----- Toolchain ---------------------------------------------------------------\n\nCMAKE ?= cmake\nGO    ?= go\n\nCLANG_FORMAT ?= clang-format\nCLANG_TIDY   ?= clang-tidy\n\nINSTALL         ?= install\nINSTALL_PROGRAM ?= $(INSTALL)\nINSTALL_DATA    ?= $(INSTALL) -m 644\n\n#----- Build directories -------------------------------------------------------\n\nINC_PATH = include\nSRC_PATH = src\nBIN_PATH = $(BUILD_PATH)\nOBJ_PATH = $(BIN_PATH)/obj\nAUD_PATH = $(BIN_PATH)/for_audit\n\nTEST_SRC_PATH = tests\nTEST_BIN_PATH = $(BIN_PATH)/tests\n\n#----- Installation paths ------------------------------------------------------\n\n## installation prefix\nPREFIX ?= /usr/local\n\n# Advanced variables for fine-tuning installation paths\nprefix       ?= $(PREFIX)\nexec_prefix  ?= $(prefix)\nbindir       ?= $(prefix)/bin\nincludedir   ?= $(prefix)/include\nlibdir       ?= $(exec_prefix)/lib\njnidir       ?= $(libdir)\npkgconfigdir ?= $(libdir)/pkgconfig\n\n#----- Basic compiler flags ----------------------------------------------------\n\n# Add Themis source directory to search paths\nCFLAGS  += -I$(INC_PATH) -I$(SRC_PATH) -I$(SRC_PATH)/wrappers/themis/\nLDFLAGS += -L$(BIN_PATH)\n# Build shared libraries\nCFLAGS  += -fPIC\n\n########################################################################\n#\n# Pretty-printing utilities\n#\n\nNO_COLOR=\\033[0m\nOK_COLOR=\\033[32;01m\nERROR_COLOR=\\033[31;01m\nWARN_COLOR=\\033[33;01m\n\nRIGHT_EDGE:=$(shell cols=$$(($$(tput cols) - 12)); cols=$$((cols > 68 ? 68 : cols)); echo $$cols)\nMOVE_COLUMN=\\033[$(RIGHT_EDGE)G\n\nOK_STRING=$(MOVE_COLUMN)$(OK_COLOR)[OK]$(NO_COLOR)\nERROR_STRING=$(MOVE_COLUMN)$(ERROR_COLOR)[ERRORS]$(NO_COLOR)\nWARN_STRING=$(MOVE_COLUMN)$(WARN_COLOR)[WARNINGS]$(NO_COLOR)\n\nifeq ($(VERBOSE),)\nPRINT_OK = printf \"$@ $(OK_STRING)\\n\"\nPRINT_OK_ = printf \"$(OK_STRING)\\n\"\nelse\nPRINT_OK = printf \"$@ $(OK_STRING)\\n\" && printf \"$(CMD)\\n\"\nPRINT_OK_ = printf \"$(OK_STRING)\\n\" && printf \"$(CMD)\\n\"\nendif\nPRINT_ERROR = printf \"$@ $(ERROR_STRING)\\n\" && printf \"$(CMD)\\n$$LOG\\n\" && false\nPRINT_ERROR_ = printf \"$(ERROR_STRING)\\n\" && printf \"$(CMD)\\n$$LOG\\n\" && false\nPRINT_WARNING = printf \"$@ $(WARN_STRING)\\n\" && printf \"$(CMD)\\n$$LOG\\n\"\nPRINT_WARNING_ = printf \"$(WARN_STRING)\\n\" && printf \"$(CMD)\\n$$LOG\\n\"\nBUILD_CMD = LOG=$$($(CMD) 2>&1) ; if [ $$? -ne 0 ]; then $(PRINT_ERROR); elif [ \"$$LOG\" != \"\" ] ; then $(PRINT_WARNING); else $(PRINT_OK); fi;\nBUILD_CMD_ = LOG=$$($(CMD) 2>&1) ; if [ $$? -ne 0 ]; then $(PRINT_ERROR_); elif [ \"$$LOG\" != \"\" ] ; then $(PRINT_WARNING_); else $(PRINT_OK_); fi;\n\n########################################################################\n#\n# Select and configure cryptographic engine\n#\n\nifdef IS_EMSCRIPTEN\nENGINE ?= boringssl\nelse\nENGINE ?= libressl\nendif\n\nifeq ($(ENGINE),openssl)\n\tCRYPTO_ENGINE_DEF  = OPENSSL\n\tCRYPTO_ENGINE_PATH = openssl\nelse ifeq ($(ENGINE),libressl)\n\tCRYPTO_ENGINE_DEF  = LIBRESSL\n\tCRYPTO_ENGINE_PATH = openssl\nelse ifeq ($(ENGINE),boringssl)\n\tCRYPTO_ENGINE_DEF  = BORINGSSL\n\tCRYPTO_ENGINE_PATH = boringssl\nelse\n$(error engine $(ENGINE) is not supported)\nendif\n\nCRYPTO_ENGINE = $(SRC_PATH)/soter/$(CRYPTO_ENGINE_PATH)\nCFLAGS += -D$(CRYPTO_ENGINE_DEF) -DCRYPTO_ENGINE_PATH=$(CRYPTO_ENGINE_PATH)\nCFLAGS += $(CRYPTO_ENGINE_CFLAGS)\n\n# If we're building for macOS and there's Homebrew installed then prefer\n# Homebrew's OpenSSL instead of the system one by default.\nifdef IS_MACOS\n\tifeq ($(CRYPTO_ENGINE_PATH),openssl)\n\t\tifneq ($(HOMEBREW_OPENSSL_PATH),)\n\t\t\tCRYPTO_ENGINE_INCLUDE_PATH = $(HOMEBREW_OPENSSL_PATH)/include\n\t\t\tCRYPTO_ENGINE_LIB_PATH = $(HOMEBREW_OPENSSL_PATH)/lib\n\t\tendif\n\tendif\nendif\n\nifneq ($(ENGINE_INCLUDE_PATH),)\n\tCRYPTO_ENGINE_INCLUDE_PATH = $(ENGINE_INCLUDE_PATH)\nendif\nifneq ($(ENGINE_LIB_PATH),)\n\tCRYPTO_ENGINE_LIB_PATH = $(ENGINE_LIB_PATH)\nendif\n\n# Basic compiler flags (lower priority than selected engine)\n# We got /usr/local as default PREFIX and not all platforms include that path in default search path.\n# Make sure whatever PREFIX is used, includes and libs are searched there.\n#\n# These two additional flags, -I and -L, need to be _after_ engine flags to not override it.\n# CFLAGS is populated with CRYPTO_ENGINE_CFLAGS few lines above, so we could add -I to CFLAGS.\n# LDFLAGS and CRYPTO_ENGINE_LDFLAGS are used separately, in this same order, so new macro was\n# introduced, ADDITIONAL_LDFLAGS, to be used after CRYPTO_ENGINE_LDFLAGS, so that LDFLAGS remain\n# at the beginning of linker flags.\nCFLAGS  += -I$(includedir)\nADDITIONAL_LDFLAGS += -L$(libdir)\n\nifneq ($(AUTH_SYM_ALG),)\n\tCFLAGS += -D$(AUTH_SYM_ALG)\nendif\nifneq ($(SYM_ALG),)\n\tCFLAGS += -D$(SYM_ALG)\nendif\n\nifeq ($(RSA_KEY_LENGTH),1024)\n\tCFLAGS += -DTHEMIS_RSA_KEY_LENGTH=RSA_KEY_LENGTH_1024\nendif\nifeq ($(RSA_KEY_LENGTH),2048)\n\tCFLAGS += -DTHEMIS_RSA_KEY_LENGTH=RSA_KEY_LENGTH_2048\nendif\nifeq ($(RSA_KEY_LENGTH),4096)\n\tCFLAGS += -DTHEMIS_RSA_KEY_LENGTH=RSA_KEY_LENGTH_4096\nendif\nifeq ($(RSA_KEY_LENGTH),8192)\n\tCFLAGS += -DTHEMIS_RSA_KEY_LENGTH=RSA_KEY_LENGTH_8192\nendif\n\n########################################################################\n#\n# Compilation flags for C/C++ code\n#\n\n# Some build systems may call C compilers themselves. We don't want to leak\n# our compilation flags there, so do not export these variables.\nunexport CFLAGS LDFLAGS\n\n# Prevent undefined symbols in produced binaries, but allow them for sanitizers\n# which expect the libraries linked into the main executable to be underlinked.\nifndef WITH_ASAN\nifndef WITH_MSAN\nifndef WITH_TSAN\nifndef WITH_UBSAN\n# Not all Emscripten toolchains support these flags so leave them out as well.\nifndef IS_EMSCRIPTEN\nifdef IS_MACOS\nLDFLAGS += -Wl,-undefined,error\nendif\nifdef IS_LINUX\nLDFLAGS += -Wl,--no-undefined\nendif\nendif\nendif\nendif\nendif\nendif\n\nCFLAGS += -O2 -g\n# Get better runtime backtraces by preserving the frame pointer. This eats\n# one of seven precious registers on x86, but our functions are quite large\n# so they almost always use stack and need the frame pointer anyway.\nCFLAGS += -fno-omit-frame-pointer\n# Enable runtime stack canaries for functions to guard for buffer overflows.\n# FIXME(ilammy, 2020-10-29): enable stack canaries for WasmThemis too\n# Currently, stack protector is not supported by the \"upstream\" flavor\n# of Emscripten toolchain. Tracking issue is here:\n# https://github.com/emscripten-core/emscripten/issues/9780\nifndef IS_EMSCRIPTEN\nifeq (yes,$(call supported,-fstack-protector-strong))\nCFLAGS += -fstack-protector-strong\nelse\nCFLAGS += -fstack-protector\nendif\nendif\n# Enable miscellaneous compile-time checks in standard library usage.\nCFLAGS += -D_FORTIFY_SOURCE=2\n# Prevent global offset table overwrite attacks.\nifdef IS_LINUX\nLDFLAGS += -Wl,-z,relro -Wl,-z,now\nendif\n\nifdef COVERAGE\n\tCFLAGS += -O0 --coverage\n\tLDFLAGS += --coverage\nendif\n\nifdef DEBUG\n\tCFLAGS += -O0 -DDEBUG\nendif\n\nifneq ($(GEM_INSTALL_OPTIONS),)\n\t_GEM_INSTALL_OPTIONS = $(GEM_INSTALL_OPTIONS)\nendif\n\ndefine supported =\n$(shell if echo \"int main(void){}\" | $(if $(AFL_CC),$(AFL_CC),$(CC)) -x c -fsyntax-only -Werror $(1) - >/dev/null 2>&1; then echo \"yes\"; fi)\nendef\n\nifeq (yes,$(WITH_FATAL_WARNINGS))\nCFLAGS += -Werror\nendif\n\n# We are security-oriented so we use a pretty paranoid^W comprehensive set\n# of compiler flags. Some of them are not available for all compilers, so\n# we have to check if we can use them first.\nCFLAGS += -Wall -Wextra\nCFLAGS += -Wformat\nCFLAGS += -Wformat-nonliteral\nifeq (yes,$(call supported,-Wformat-overflow))\nCFLAGS += -Wformat-overflow\nendif\nCFLAGS += -Wformat-security\nifeq (yes,$(call supported,-Wformat-signedness))\nCFLAGS += -Wformat-signedness\nendif\nifeq (yes,$(call supported,-Wformat-truncation))\nCFLAGS += -Wformat-truncation\nendif\nifeq (yes,$(call supported,-Wnull-dereference))\nCFLAGS += -Wnull-dereference\nendif\nifeq (yes,$(call supported,-Wshift-overflow))\nCFLAGS += -Wshift-overflow\nendif\nifeq (yes,$(call supported,-Wshift-negative-value))\nCFLAGS += -Wshift-negative-value\nendif\nCFLAGS += -Wstrict-overflow\nCFLAGS += -Wswitch\nifeq (yes,$(call supported,-Walloca))\nCFLAGS += -Walloca\nendif\nCFLAGS += -Wvla\nCFLAGS += -Wpointer-arith\n# Forbid old-style C function prototypes\n# (skip for C++ files as older g++ complains about it)\nifeq (yes,$(call supported,-Wstrict-prototypes))\nCFLAGS += $(if $(findstring .cpp,$(suffix $<)),,-Wstrict-prototypes)\nendif\n\nCFLAGS += -fvisibility=hidden\n\n#\n# Enable code sanitizers on demand and if supported by compiler\n#\n\nifdef WITH_ASAN\nCFLAGS += -DWITH_ASAN\nifeq (yes,$(call supported,-fsanitize=address))\nSANITIZERS += -fsanitize=address\nelse\n$(error -fsanitize=address requested but $(CC) does not seem to support it)\nendif\nendif\n\nifdef WITH_MSAN\nCFLAGS += -DWITH_MSAN\nifeq (yes,$(call supported,-fsanitize=memory))\nSANITIZERS += -fsanitize=memory -fsanitize-memory-track-origins=2\nelse\n$(error -fsanitize=memory requested but $(CC) does not seem to support it)\nendif\nendif\n\nifdef WITH_TSAN\nCFLAGS += -DWITH_TSAN\nifeq (yes,$(call supported,-fsanitize=thread))\nSANITIZERS += -fsanitize=thread\nelse\n$(error -fsanitize=thread requested but $(CC) does not seem to support it)\nendif\nendif\n\nifdef WITH_UBSAN\nCFLAGS += -DWITH_UBSAN\nifeq (yes,$(call supported,-fsanitize=undefined))\nSANITIZERS += -fsanitize=undefined\nelse\n$(error -fsanitize=undefined requested but $(CC) does not seem to support it)\nendif\nifeq (yes,$(call supported,-fsanitize=integer))\nSANITIZERS += -fsanitize=integer\nelse\n$(warning -fsanitize=integer not supported by $(CC), skipping...)\nendif\nifeq (yes,$(call supported,-fsanitize=nullability))\nSANITIZERS += -fsanitize=nullability\nelse\n$(warning -fsanitize=nullability not supported by $(CC), skipping...)\nendif\nendif\n\nifeq (yes,$(WITH_FATAL_SANITIZERS))\nSANITIZERS += -fno-sanitize-recover=all\nendif\n\nCFLAGS  += $(SANITIZERS)\nLDFLAGS += $(SANITIZERS)\n\n# Binary format compatibility with Themis 0.9.6 on x86_64 architecture.\n# https://github.com/cossacklabs/themis/pull/279\n# Themis 0.9.6 is going EOL on 2020-12-13 so it can be removed after that.\nifneq ($(WITH_SCELL_COMPAT),)\n\tCFLAGS += -DSCELL_COMPAT\nendif\n\n########################################################################\n\ninclude src/soter/soter.mk\ninclude src/themis/themis.mk\nifndef CARGO\ninclude src/wrappers/themis/jsthemis/jsthemis.mk\ninclude src/wrappers/themis/themispp/themispp.mk\ninclude src/wrappers/themis/wasm/wasmthemis.mk\ninclude jni/themis_jni.mk\ninclude tests/test.mk\ninclude tools/afl/fuzzy.mk\nendif\n\n########################################################################\n#\n# Principal Makefile targets\n#\n\nall: themis_static soter_static themis_shared soter_shared themis_pkgconfig soter_pkgconfig\n\t@echo $(VERSION)\n\nsoter_static:  $(BIN_PATH)/$(LIBSOTER_A)\nsoter_shared:  $(BIN_PATH)/$(LIBSOTER_SO)\nthemis_static: $(BIN_PATH)/$(LIBTHEMIS_A)\nthemis_shared: $(BIN_PATH)/$(LIBTHEMIS_SO)\nthemis_jni:    $(BIN_PATH)/$(LIBTHEMISJNI_SO)\n\nsoter_pkgconfig:  $(BIN_PATH)/libsoter.pc\nthemis_pkgconfig: $(BIN_PATH)/libthemis.pc\n\nfmt: $(FMT_FIXUP)\nfmt_check: $(FMT_CHECK)\n\nclean: CMD = rm -rf $(BIN_PATH)\nclean: nist_rng_test_suite_clean clean_rust clean_python\n\t@$(BUILD_CMD)\n\nclean_rust:\nifdef RUST_VERSION\n\t@cargo clean\n\t@rm -f tools/rust/*.rust\nendif\n\nclean_python:\nifdef PYTHON3_VERSION\n\t@rm -rf src/wrappers/themis/python/dist\n\t@rm -rf src/wrappers/themis/python/pythemis.egg-info\nendif\n\nget_version:\n\t@echo $(VERSION)\n\nfor-audit: $(SOTER_AUD) $(THEMIS_AUD)\n\n########################################################################\n#\n# Common build rules\n#\n\n$(OBJ_PATH)/%.c.o: CMD = $(CC) -c -o $@ $< $(CFLAGS)\n\n$(OBJ_PATH)/%.c.o: %.c\n\t@mkdir -p $(@D)\n\t@echo -n \"compile \"\n\t@$(BUILD_CMD)\n\n$(OBJ_PATH)/%.cpp.o: CMD = $(CXX) -c -o $@ $< $(CFLAGS)\n\n$(OBJ_PATH)/%.cpp.o: %.cpp\n\t@mkdir -p $(@D)\n\t@echo -n \"compile \"\n\t@$(BUILD_CMD)\n\n$(OBJ_PATH)/%.c.fmt_fixup $(OBJ_PATH)/%.h.fmt_fixup $(OBJ_PATH)/%.cpp.fmt_fixup $(OBJ_PATH)/%.hpp.fmt_fixup: \\\n    CMD = $(CLANG_TIDY) -fix $< -- $(CFLAGS) 2>/dev/null && $(CLANG_FORMAT) -i $< && touch $@\n\n$(OBJ_PATH)/%.c.fmt_check $(OBJ_PATH)/%.h.fmt_check $(OBJ_PATH)/%.cpp.fmt_check $(OBJ_PATH)/%.hpp.fmt_check: \\\n    CMD = $(CLANG_FORMAT) $< | diff -u $< - && $(CLANG_TIDY) $< -- $(CFLAGS) 2>/dev/null && touch $@\n\n$(OBJ_PATH)/%.fmt_fixup: %\n\t@mkdir -p $(@D)\n\t@echo -n \"fixup $< \"\n\t@$(BUILD_CMD_)\n\n$(OBJ_PATH)/%.fmt_check: %\n\t@mkdir -p $(@D)\n\t@echo -n \"check $< \"\n\t@$(BUILD_CMD_)\n\n#$(AUD_PATH)/%: CMD = $(CC) $(CFLAGS) -E -dI -dD $< -o $@\n$(AUD_PATH)/%: CMD = ./scripts/pp.sh  $< $@\n\n$(AUD_PATH)/%: $(SRC_PATH)/%\n\t@mkdir -p $(@D)\n\t@echo -n \"compile \"\n\t@$(BUILD_CMD)\n\n########################################################################\n#\n# Themis Core installation\n#\n\n# Red Hat systems usually do not have \"lsb_release\" in their default setup\n# so we look into the release version files from \"centos-release\" package.\nifdef IS_LINUX\nifeq ($(shell . /etc/os-release; echo $$ID),centos)\nIS_CENTOS := true\nLD_SO_CONF = $(DESTDIR)/etc/ld.so.conf.d/themis.conf\nendif\nendif\n\ninstall: all install_soter install_themis\n\t@echo -n \"Themis installed to $(PREFIX)\"\n\t@$(PRINT_OK_)\n# CentOS does not have /usr/local/lib in the default search path, add it there.\nifeq ($(IS_CENTOS),true)\n\t-@mkdir -p \"$$(dirname \"$(LD_SO_CONF)\")\"\n\t-@echo \"$(libdir)\" > \"$(LD_SO_CONF)\" && echo \"Added $(libdir) to $(LD_SO_CONF)\"\nendif\nifdef IS_LINUX\n\t-@ldconfig\nendif\n\t@if [ -e /usr/include/themis/themis.h ] && [ -e /usr/local/include/themis/themis.h ]; then \\\n\t     echo \"\"; \\\n\t     echo \"Multiple Themis installations detected in standard system paths:\"; \\\n\t     echo \"\"; \\\n\t     echo \"  - /usr\"; \\\n\t     echo \"  - /usr/local\"; \\\n\t     echo \"\"; \\\n\t     echo \"This may lead to surprising behaviour when building and using software\"; \\\n\t     echo \"which depends on Themis.\"; \\\n\t     echo \"\"; \\\n\t     echo \"If you previously had Themis installed from source to \\\"/usr\\\",\"; \\\n\t     echo \"consider uninstalling the old version with\"; \\\n\t     echo \"\"; \\\n\t     echo \"    sudo $(MAKE) uninstall PREFIX=/usr\"; \\\n\t     echo \"\"; \\\n\t     echo \"and keep the new version in \\\"/usr/local\\\".\"; \\\n\t     echo \"\"; \\\n\t fi\n\nuninstall: uninstall_themis uninstall_soter\n\t@echo -n \"Themis uninstalled from $(PREFIX) \"\n\t@$(PRINT_OK_)\n# Remove non-standard library search path created by \"install\" for CentOS.\nifeq ($(IS_CENTOS),true)\n\t@rm -f \"$(LD_SO_CONF)\"\nendif\n\n########################################################################\n#\n# Themis distribution tarball\n#\n\nDIST_DIR = themis_$(VERSION)\n\n# Themis Core source code, tests, docs\nDIST_FILES += docs src tests Makefile VERSION\nDIST_FILES += README.md CHANGELOG.md LICENSE\nDIST_FILES += PKGBUILD.MSYS2 Themis.nsi\n# Supporting files for language wrappers\nDIST_FILES += Cargo.toml\nDIST_FILES += CMakeLists.txt\nDIST_FILES += gothemis\nDIST_FILES += jni\nDIST_FILES += scripts tools\n\ndist:\n\t@mkdir -p $(DIST_DIR)\n\t@rsync -a $(DIST_FILES) $(DIST_DIR)\n\t@tar czf $(DIST_DIR).tar.gz $(DIST_DIR)\n\t@rm -rf $(DIST_DIR)\n\t@echo $(DIST_DIR).tar.gz\n\nunpack_dist:\n\t@tar -xf $(DIST_DIR).tar.gz\n\n########################################################################\n#\n# Themis wrapper installation\n#\n\n## PHP #########################\n\nifeq ($(PHP_VERSION),5)\n    PHP_FOLDER = php\nelse\n    PHP_FOLDER = php7\nendif\n\nphpthemis_install: CMD = cd src/wrappers/themis/$(PHP_FOLDER) && phpize && ./configure && make install\nphpthemis_install:\nifdef PHP_VERSION\n\t@echo -n \"phpthemis install \"\n\t@$(BUILD_CMD_)\nelse\n\t@echo \"Error: php not found\"\n\t@exit 1\nendif\n\nifneq (\"$(wildcard src/wrappers/themis/php/Makefile)\",\"\")\nPHP_THEMIS_INSTALL = 1\nendif\n\nphpthemis_uninstall: CMD = if [ -e src/wrappers/themis/php/Makefile ]; then cd src/wrappers/themis/php && make distclean ; fi;\nphpthemis_uninstall:\nifdef PHP_THEMIS_INSTALL\n\t@echo -n \"phpthemis uninstall \"\n\t@$(BUILD_CMD_)\nendif\n\nuninstall: phpthemis_uninstall\n\n## Ruby ########################\n\nrbthemis_install: CMD = cd src/wrappers/themis/ruby && gem build rbthemis.gemspec && gem install ./*.gem $(_GEM_INSTALL_OPTIONS)\nrbthemis_install:\nifdef RUBY_GEM_VERSION\n\t@echo -n \"rbthemis install \"\n\t@$(BUILD_CMD_)\nelse\n\t@echo \"Error: ruby gem not found\"\n\t@exit 1\nendif\n\nrbthemis_uninstall: CMD = gem uninstall rbthemis\nrbthemis_uninstall:\nifdef RUBY_GEM_VERSION\n\t@echo -n \"rbthemis uninstall \"\n\t@$(BUILD_CMD_)\nendif\n\nuninstall: rbthemis_uninstall\n\n## Python ######################\n\nifdef PIP_VERSION\nPIP_THEMIS_INSTALL := $(shell pip freeze |grep themis)\nendif\n\npythemis_install: CMD = cd src/wrappers/themis/python/ && pip3 install .\npythemis_install:\nifeq ($(PYTHON3_VERSION),)\n\t@echo \"python3 not found\"\n\t@exit 1\nendif\n\t@echo -n \"pythemis install \"\n\t@$(BUILD_CMD_)\n\n########################################################################\n#\n# Packaging Themis Core: Linux distributions\n#\n\nifeq ($(ENGINE),boringssl)\nifeq ($(CRYPTO_ENGINE_LIB_PATH),)\nPACKAGE_EMBEDDED_BORINGSSL := yes\nendif\nendif\n\nCOSSACKLABS_URL = https://www.cossacklabs.com\nMAINTAINER = \"Cossack Labs Limited <dev@cossacklabs.com>\"\nLICENSE_NAME = \"Apache License Version 2.0\"\n\nDEB_CODENAME := $(shell lsb_release -cs 2> /dev/null)\nDEB_ARCHITECTURE = `dpkg --print-architecture 2>/dev/null`\nifeq ($(PACKAGE_EMBEDDED_BORINGSSL),yes)\n# fpm has \"--provides\" option, but it eats package versions when we need to\n# preserve them for correct dependency resolution. Insert fields directly.\nDEB_DEPENDENCIES += --deb-field \"Provides: $(CANONICAL_PACKAGE_NAME) (= $(VERSION)+$(OS_CODENAME))\"\nDEB_DEPENDENCIES += --conflicts $(CANONICAL_PACKAGE_NAME)\nDEB_DEPENDENCIES += --replaces  $(CANONICAL_PACKAGE_NAME)\nDEB_DEPENDENCIES_DEV += --deb-field \"Provides: $(DEB_CANONICAL_DEV_PACKAGE_NAME) (= $(VERSION)+$(OS_CODENAME))\"\nDEB_DEPENDENCIES_DEV += --conflicts $(DEB_CANONICAL_DEV_PACKAGE_NAME)\nDEB_DEPENDENCIES_DEV += --replaces  $(DEB_CANONICAL_DEV_PACKAGE_NAME)\nelse\n# If we were using native Debian packaging, dpkg-shlibdeps could supply us with\n# accurate dependency information. However, we build packages manually, so we\n# use dependencies of \"libssl-dev\" as a proxy. Typically this is \"libssl1.1\".\n#\n# Example output of \"apt-cache depends\" (from Ubuntu 16.04):\n#\n# libssl-dev\n#   Depends: libssl1.0.0\n#   Depends: zlib1g-dev\n#   Recommends: libssl-doc\nDEB_DEPENDENCIES += $(shell apt-cache depends libssl-dev | awk '$$1 == \"Depends:\" && $$2 ~ /^libssl/ { print \"--depends\", $$2 }' )\nDEB_DEPENDENCIES_DEV += --depends libssl-dev\nendif\nDEB_DEPENDENCIES_DEV += --depends \"$(PACKAGE_NAME) = $(VERSION)+$(OS_CODENAME)\"\nDEB_DEPENDENCIES_THEMISPP = --depends \"$(DEB_CANONICAL_DEV_PACKAGE_NAME) = $(VERSION)+$(OS_CODENAME)\"\nDEB_DEPENDENCIES_JNI += --depends \"$(CANONICAL_PACKAGE_NAME) >= $(VERSION)+$(OS_CODENAME)\"\n\nifeq ($(PACKAGE_EMBEDDED_BORINGSSL),yes)\nRPM_DEPENDENCIES += --provides  $(CANONICAL_PACKAGE_NAME)\nRPM_DEPENDENCIES += --conflicts $(CANONICAL_PACKAGE_NAME)\nRPM_DEPENDENCIES += --replaces  $(CANONICAL_PACKAGE_NAME)\nRPM_DEPENDENCIES_DEV += --provides  $(RPM_CANONICAL_DEV_PACKAGE_NAME)\nRPM_DEPENDENCIES_DEV += --conflicts $(RPM_CANONICAL_DEV_PACKAGE_NAME)\nRPM_DEPENDENCIES_DEV += --replaces  $(RPM_CANONICAL_DEV_PACKAGE_NAME)\nelse\nRPM_DEPENDENCIES     += --depends openssl-libs\nRPM_DEPENDENCIES_DEV += --depends openssl-devel\nendif\nRPM_DEPENDENCIES_DEV += --depends \"$(PACKAGE_NAME) = $(RPM_VERSION)-$(RPM_RELEASE_NUM)\"\nRPM_DEPENDENCIES_THEMISPP = --depends \"$(RPM_CANONICAL_DEV_PACKAGE_NAME) = $(RPM_VERSION)-$(RPM_RELEASE_NUM)\"\nRPM_DEPENDENCIES_JNI += --depends \"$(CANONICAL_PACKAGE_NAME) >= $(RPM_VERSION)-$(RPM_RELEASE_NUM)\"\nRPM_RELEASE_NUM = 1\n\nOS_NAME := $(shell lsb_release -is 2>/dev/null || printf 'unknown')\nifeq ($(OS_NAME),$(filter $(OS_NAME),Debian Ubuntu))\n#0.9.4-153-g9915004+jessie_amd64.deb.\n\tNAME_SUFFIX = $(VERSION)+$(DEB_CODENAME)_$(DEB_ARCHITECTURE).deb\n\tOS_CODENAME = $(shell lsb_release -cs)\n\tDEB_LIBDIR := /lib/$(shell dpkg-architecture -qDEB_HOST_MULTIARCH)\nelse ifeq ($(OS_NAME),$(filter $(OS_NAME),RedHatEnterpriseServer CentOS))\n\tOS_NAME = $(shell cat /etc/os-release | grep -e \"^ID=\\\".*\\\"\" | cut -d'\"' -f2)\n\tOS_VERSION = $(shell cat /etc/os-release | grep -i version_id|cut -d'\"' -f2)\n\tARCHITECTURE = $(shell arch)\n\tRPM_VERSION = $(shell echo -n \"$(VERSION)\"|sed s/-/_/g)\n\tNAME_SUFFIX = $(RPM_VERSION).$(OS_NAME)$(OS_VERSION).$(ARCHITECTURE).rpm\n\tRPM_LIBDIR := /$(shell [ $$(arch) == \"x86_64\" ] && echo \"lib64\" || echo \"lib\")\nendif\n\nCANONICAL_PACKAGE_NAME         = libthemis\nDEB_CANONICAL_DEV_PACKAGE_NAME = $(CANONICAL_PACKAGE_NAME)-dev\nRPM_CANONICAL_DEV_PACKAGE_NAME = $(CANONICAL_PACKAGE_NAME)-devel\nifeq ($(PACKAGE_EMBEDDED_BORINGSSL),yes)\nPACKAGE_NAME = libthemis-boringssl\nelse\nPACKAGE_NAME = libthemis\nendif\nDEB_DEV_PACKAGE_NAME = $(PACKAGE_NAME)-dev\nRPM_DEV_PACKAGE_NAME = $(PACKAGE_NAME)-devel\nDEB_THEMISPP_PACKAGE_NAME = libthemispp-dev\nRPM_THEMISPP_PACKAGE_NAME = libthemispp-devel\nJNI_PACKAGE_NAME = libthemis-jni\n\nPACKAGE_CATEGORY = security\nSHORT_DESCRIPTION = Data security library for network communication and data storage\nRPM_SUMMARY = Data security library for network communication and data storage. \\\n\t Themis is a data security library, providing users with high-quality security \\\n\t services for secure messaging of any kinds and flexible data storage. Themis \\\n\t is aimed at modern developers, with high level OOP wrappers for Ruby, Python, \\\n\t PHP, Java / Android and iOS / OSX. It is designed with ease of use in mind, \\\n\t high security and cross-platform availability.\n\nPOST_INSTALL_SCRIPT := $(BIN_PATH)/post_install.sh\nPOST_UNINSTALL_SCRIPT := $(BIN_PATH)/post_uninstall.sh\n\nDEV_PACKAGE_FILES += $(includedir)/soter/\nDEV_PACKAGE_FILES += $(includedir)/themis/\nDEV_PACKAGE_FILES += $(pkgconfigdir)/\nDEV_PACKAGE_FILES += $(libdir)/$(LIBSOTER_A)\nDEV_PACKAGE_FILES += $(libdir)/$(LIBSOTER_LINK)\nDEV_PACKAGE_FILES += $(libdir)/$(LIBTHEMIS_A)\nDEV_PACKAGE_FILES += $(libdir)/$(LIBTHEMIS_LINK)\n\nLIB_PACKAGE_FILES += $(libdir)/$(LIBSOTER_SO)\nLIB_PACKAGE_FILES += $(libdir)/$(LIBTHEMIS_SO)\n\nTHEMISPP_PACKAGE_FILES += $(includedir)/themispp/\n\nJNI_PACKAGE_FILES += $(jnidir)/$(LIBTHEMISJNI_SO)\n\ndeb: MODE_PACKAGING = 1\ndeb: DESTDIR = $(BIN_PATH)/deb/root\ndeb: PREFIX = /usr\ndeb: libdir = $(PREFIX)$(DEB_LIBDIR)\ndeb: jnidir = $(PREFIX)$(DEB_LIBDIR)/jni\n\ndeb: install $(if $(WITHOUT_THEMISPP), , themispp_install) $(if $(WITHOUT_JAVA), , themis_jni_install)\n\t@printf \"ldconfig\" > $(POST_INSTALL_SCRIPT)\n\t@printf \"ldconfig\" > $(POST_UNINSTALL_SCRIPT)\n\n\t@find $(DESTDIR) -name '*.$(SHARED_EXT)*' -type f -exec strip -o {} {} \\;\n\n\t@fpm --input-type dir \\\n\t\t --output-type deb \\\n\t\t --name $(DEB_DEV_PACKAGE_NAME) \\\n\t\t --license $(LICENSE_NAME) \\\n\t\t --url '$(COSSACKLABS_URL)' \\\n\t\t --description '$(SHORT_DESCRIPTION)' \\\n\t\t --maintainer $(MAINTAINER) \\\n\t\t --package $(BIN_PATH)/deb/$(DEB_DEV_PACKAGE_NAME)_$(NAME_SUFFIX) \\\n\t\t --architecture $(DEB_ARCHITECTURE) \\\n\t\t --version $(VERSION)+$(OS_CODENAME) \\\n\t\t $(DEB_DEPENDENCIES_DEV) \\\n\t\t --deb-priority optional \\\n\t\t --after-install $(POST_INSTALL_SCRIPT) \\\n\t\t --after-remove $(POST_UNINSTALL_SCRIPT) \\\n\t\t --category $(PACKAGE_CATEGORY) \\\n\t\t --force \\\n\t\t $(foreach file,$(DEV_PACKAGE_FILES),$(DESTDIR)/$(file)=$(file))\n\n\t@fpm --input-type dir \\\n\t\t --output-type deb \\\n\t\t --name $(PACKAGE_NAME) \\\n\t\t --license $(LICENSE_NAME) \\\n\t\t --url '$(COSSACKLABS_URL)' \\\n\t\t --description '$(SHORT_DESCRIPTION)' \\\n\t\t --maintainer $(MAINTAINER) \\\n\t\t --package $(BIN_PATH)/deb/$(PACKAGE_NAME)_$(NAME_SUFFIX) \\\n\t\t --architecture $(DEB_ARCHITECTURE) \\\n\t\t --version $(VERSION)+$(OS_CODENAME) \\\n\t\t $(DEB_DEPENDENCIES) \\\n\t\t --after-install $(POST_INSTALL_SCRIPT) \\\n\t\t --after-remove $(POST_UNINSTALL_SCRIPT) \\\n\t\t --deb-priority optional \\\n\t\t --category $(PACKAGE_CATEGORY) \\\n\t\t --force \\\n\t\t $(foreach file,$(LIB_PACKAGE_FILES),$(DESTDIR)/$(file)=$(file))\n\nifndef WITHOUT_THEMISPP\n\t@fpm --input-type dir \\\n\t\t --output-type deb \\\n\t\t --name $(DEB_THEMISPP_PACKAGE_NAME) \\\n\t\t --license $(LICENSE_NAME) \\\n\t\t --url '$(COSSACKLABS_URL)' \\\n\t\t --description '$(SHORT_DESCRIPTION)' \\\n\t\t --maintainer $(MAINTAINER) \\\n\t\t --package $(BIN_PATH)/deb/$(DEB_THEMISPP_PACKAGE_NAME)_$(NAME_SUFFIX) \\\n\t\t --architecture $(DEB_ARCHITECTURE) \\\n\t\t --version $(VERSION)+$(OS_CODENAME) \\\n\t\t $(DEB_DEPENDENCIES_THEMISPP) \\\n\t\t --deb-priority optional \\\n\t\t --after-install $(POST_INSTALL_SCRIPT) \\\n\t\t --after-remove $(POST_UNINSTALL_SCRIPT) \\\n\t\t --category $(PACKAGE_CATEGORY) \\\n\t\t --force \\\n\t\t $(foreach file,$(THEMISPP_PACKAGE_FILES),$(DESTDIR)/$(file)=$(file))\nendif\n\nifndef WITHOUT_JAVA\n\t@fpm --input-type dir \\\n\t\t --output-type deb \\\n\t\t --name $(JNI_PACKAGE_NAME) \\\n\t\t --license $(LICENSE_NAME) \\\n\t\t --url '$(COSSACKLABS_URL)' \\\n\t\t --description '$(SHORT_DESCRIPTION)' \\\n\t\t --maintainer $(MAINTAINER) \\\n\t\t --package $(BIN_PATH)/deb/$(JNI_PACKAGE_NAME)_$(NAME_SUFFIX) \\\n\t\t --architecture $(DEB_ARCHITECTURE) \\\n\t\t --version $(VERSION)+$(OS_CODENAME) \\\n\t\t $(DEB_DEPENDENCIES_JNI) \\\n\t\t --after-install $(POST_INSTALL_SCRIPT) \\\n\t\t --after-remove $(POST_UNINSTALL_SCRIPT) \\\n\t\t --deb-priority optional \\\n\t\t --category $(PACKAGE_CATEGORY) \\\n\t\t --force \\\n\t\t $(foreach file,$(JNI_PACKAGE_FILES),$(DESTDIR)/$(file)=$(file))\nendif\n\n\t@find $(BIN_PATH) -name \\*.deb\n\n# Use builtin feature of fpm to create a .deb package from a Python package dir.\n# Dependencies are automatically added, i.e. PyThemis depends on `six`, so fpm will add `python3-six` to deps.\ndeb_python: DEB_ARCHITECTURE = all\ndeb_python: DESTDIR = $(BIN_PATH)/deb/pythemis_root\ndeb_python:\n\t@mkdir -p $(BIN_PATH)/deb\n\t@fpm --input-type python \\\n\t\t --output-type deb \\\n\t\t --python-bin=python3 \\\n\t\t --python-package-name-prefix=python3 \\\n\t\t --name python3-pythemis \\\n\t\t --license $(LICENSE_NAME) \\\n\t\t --url '$(COSSACKLABS_URL)' \\\n\t\t --description '$(SHORT_DESCRIPTION)' \\\n\t\t --maintainer $(MAINTAINER) \\\n\t\t --package $(BIN_PATH)/deb/python3-pythemis_$(NAME_SUFFIX) \\\n\t\t --architecture $(DEB_ARCHITECTURE) \\\n\t\t --version $(VERSION)+$(OS_CODENAME) \\\n\t\t --depends python3 --depends libthemis \\\n\t\t --deb-priority optional \\\n\t\t --category $(PACKAGE_CATEGORY) \\\n\t\t --force \\\n\t\t src/wrappers/themis/python\n\n\t@echo $(BIN_PATH)/deb/python3-pythemis_$(NAME_SUFFIX)\n\n# Using `apt` since it could install dependencies (we depend on python3-six),\n# while dpkg would just complain about missing dependency and fail\npythemis_install_deb: DEB_ARCHITECTURE = all\npythemis_install_deb: deb_python\n\tapt install ./$(BIN_PATH)/deb/python3-pythemis_$(NAME_SUFFIX)\n\nrpm: MODE_PACKAGING = 1\nrpm: DESTDIR = $(BIN_PATH)/rpm/root\nrpm: PREFIX = /usr\nrpm: libdir = $(PREFIX)$(RPM_LIBDIR)\n\nrpm: install themispp_install themis_jni_install\n\t@printf \"ldconfig\" > $(POST_INSTALL_SCRIPT)\n\t@printf \"ldconfig\" > $(POST_UNINSTALL_SCRIPT)\n\n\t@find $(DESTDIR) -name '*.$(SHARED_EXT)*' -type f -exec strip -o {} {} \\;\n\n\t@fpm --input-type dir \\\n         --output-type rpm \\\n         --name $(RPM_DEV_PACKAGE_NAME) \\\n         --license $(LICENSE_NAME) \\\n         --url '$(COSSACKLABS_URL)' \\\n         --description '$(SHORT_DESCRIPTION)' \\\n         --rpm-summary '$(RPM_SUMMARY)' \\\n         $(RPM_DEPENDENCIES_DEV) \\\n         --maintainer $(MAINTAINER) \\\n         --after-install $(POST_INSTALL_SCRIPT) \\\n         --after-remove $(POST_UNINSTALL_SCRIPT) \\\n         --package $(BIN_PATH)/rpm/$(RPM_DEV_PACKAGE_NAME)-$(NAME_SUFFIX) \\\n         --version $(RPM_VERSION) \\\n         --category $(PACKAGE_CATEGORY) \\\n         $(foreach file,$(DEV_PACKAGE_FILES),$(DESTDIR)/$(file)=$(file))\n\n\t@fpm --input-type dir \\\n         --output-type rpm \\\n         --name $(PACKAGE_NAME) \\\n         --license $(LICENSE_NAME) \\\n         --url '$(COSSACKLABS_URL)' \\\n         --description '$(SHORT_DESCRIPTION)' \\\n         --rpm-summary '$(RPM_SUMMARY)' \\\n         --maintainer $(MAINTAINER) \\\n         --after-install $(POST_INSTALL_SCRIPT) \\\n         --after-remove $(POST_UNINSTALL_SCRIPT) \\\n         $(RPM_DEPENDENCIES) \\\n         --package $(BIN_PATH)/rpm/$(PACKAGE_NAME)-$(NAME_SUFFIX) \\\n         --version $(RPM_VERSION) \\\n         --category $(PACKAGE_CATEGORY) \\\n         $(foreach file,$(LIB_PACKAGE_FILES),$(DESTDIR)/$(file)=$(file))\n\n\t@fpm --input-type dir \\\n         --output-type rpm \\\n         --name $(RPM_THEMISPP_PACKAGE_NAME) \\\n         --license $(LICENSE_NAME) \\\n         --url '$(COSSACKLABS_URL)' \\\n         --description '$(SHORT_DESCRIPTION)' \\\n         --rpm-summary '$(RPM_SUMMARY)' \\\n         --maintainer $(MAINTAINER) \\\n         --after-install $(POST_INSTALL_SCRIPT) \\\n         --after-remove $(POST_UNINSTALL_SCRIPT) \\\n         $(RPM_DEPENDENCIES_THEMISPP) \\\n         --package $(BIN_PATH)/rpm/$(RPM_THEMISPP_PACKAGE_NAME)-$(NAME_SUFFIX) \\\n         --version $(RPM_VERSION) \\\n         --category $(PACKAGE_CATEGORY) \\\n         $(foreach file,$(THEMISPP_PACKAGE_FILES),$(DESTDIR)/$(file)=$(file))\n\n\t@fpm --input-type dir \\\n         --output-type rpm \\\n         --name $(JNI_PACKAGE_NAME) \\\n         --license $(LICENSE_NAME) \\\n         --url '$(COSSACKLABS_URL)' \\\n         --description '$(SHORT_DESCRIPTION)' \\\n         --rpm-summary '$(RPM_SUMMARY)' \\\n         --maintainer $(MAINTAINER) \\\n         --after-install $(POST_INSTALL_SCRIPT) \\\n         --after-remove $(POST_UNINSTALL_SCRIPT) \\\n         $(RPM_DEPENDENCIES_JNI) \\\n         --package $(BIN_PATH)/rpm/$(JNI_PACKAGE_NAME)-$(NAME_SUFFIX) \\\n         --version $(RPM_VERSION) \\\n         --category $(PACKAGE_CATEGORY) \\\n         $(foreach file,$(JNI_PACKAGE_FILES),$(DESTDIR)/$(file)=$(file))\n\n\t@find $(BIN_PATH) -name \\*.rpm\n\nrpm_python: ARCHITECTURE = all\nrpm_python:\n\t@mkdir -p $(BIN_PATH)/rpm\n\t@fpm --input-type python \\\n\t\t --output-type rpm \\\n\t\t --python-bin=python3 \\\n\t\t --python-package-name-prefix=python3 \\\n\t\t --name python3-pythemis \\\n\t\t --license $(LICENSE_NAME) \\\n\t\t --url '$(COSSACKLABS_URL)' \\\n\t\t --description '$(SHORT_DESCRIPTION)' \\\n\t\t --rpm-summary '$(RPM_SUMMARY)' \\\n\t\t --maintainer $(MAINTAINER) \\\n\t\t --package $(BIN_PATH)/rpm/python3-pythemis_$(NAME_SUFFIX) \\\n\t\t --version $(RPM_VERSION) \\\n\t\t --depends python3 --depends libthemis \\\n\t\t --category $(PACKAGE_CATEGORY) \\\n\t\t --force \\\n\t\t src/wrappers/themis/python\n\n\t@echo $(BIN_PATH)/rpm/python3-pythemis_$(NAME_SUFFIX)\n\npythemis_install_rpm: ARCHITECTURE = all\npythemis_install_rpm: rpm_python\n\tyum install ./$(BIN_PATH)/rpm/python3-pythemis_$(NAME_SUFFIX)\n\n\n########################################################################\n#\n# Packaging Themis Core: Windows (NSIS)\n#\n\nnsis_installer: $(BIN_PATH)/InstallThemis.exe\n\n$(BIN_PATH)/InstallThemis.exe: FORCE\nifdef IS_MSYS\n\t@$(MAKE) install PREFIX=/ DESTDIR=\"$(BIN_PATH)/install\"\n\t@ldd \"$(BIN_PATH)/install/bin\"/*.dll | \\\n\t awk '$$3 ~ \"^/usr/bin\" { print $$3}' | sort --uniq | \\\n\t xargs -I % cp % \"$(BIN_PATH)/install/bin\"\n\t@makensis Themis.nsi\n\t@rm -r \"$(BIN_PATH)/install\"\nelse\n\t@echo \"NSIS installers can only be build in MSYS environment on Windows.\"\n\t@echo\n\t@echo \"Please make sure that you are using MSYS terminal session which\"\n\t@echo \"is usually available as 'MSYS2 MSYS' shortcut in the MSYS group\"\n\t@echo \"of the Start menu.\"\n\t@exit 1\nendif\n\nFORCE:\n\n########################################################################\n#\n# Packaging PHP Themis: Linux distributions\n#\n\ndefine PKGINFO\nPACKAGE=$(PACKAGE_NAME)\nSECTION=$(PACKAGE_CATEGORY)\nMAINTAINER=$(MAINTAINER)\nVERSION=$(VERSION)\nHOMEPAGE=$(COSSACKLABS_URL)\nLICENSE=$(LICENSE_NAME)\nDESCRIPTION=\"$(SHORT_DESCRIPTION)\"\nendef\nexport PKGINFO\n\nPKGINFO_PATH = PKGINFO\n\npkginfo:\n\t@echo \"$$PKGINFO\" > $(PKGINFO_PATH)\n\nPHP_VERSION_FULL:=$(shell php -r \"echo PHP_MAJOR_VERSION.'.'.PHP_MINOR_VERSION;\" 2>/dev/null)\nifeq ($(OS_CODENAME),jessie)\n    PHP_DEPENDENCIES += --depends php5\nelse\n    PHP_DEPENDENCIES += --depends php$(PHP_VERSION_FULL)\nendif\nPHP_DEPENDENCIES += --depends \"$(CANONICAL_PACKAGE_NAME) >= $(VERSION)+$(OS_CODENAME)\"\n\nPHP_PACKAGE_NAME:=libphpthemis-php$(PHP_VERSION_FULL)\nPHP_POST_INSTALL_SCRIPT:=./scripts/phpthemis_postinstall.sh\nPHP_PRE_UNINSTALL_SCRIPT:=./scripts/phpthemis_preuninstall.sh\nPHP_API:=$(shell php -i 2>/dev/null|grep 'PHP API'|sed 's/PHP API => //')\nPHP_LIB_MAP:=./src/wrappers/themis/$(PHP_FOLDER)/.libs/phpthemis.so=/usr/lib/php/$(PHP_API)/\n\ndeb_php: MODE_PACKAGING = 1\ndeb_php:\n\t@mkdir -p $(BIN_PATH)/deb\n\t@fpm --input-type dir \\\n\t\t --output-type deb \\\n\t\t --name $(PHP_PACKAGE_NAME) \\\n\t\t --license $(LICENSE_NAME) \\\n\t\t --url '$(COSSACKLABS_URL)' \\\n\t\t --description '$(SHORT_DESCRIPTION)' \\\n\t\t --package $(BIN_PATH)/deb/$(PHP_PACKAGE_NAME)_$(NAME_SUFFIX) \\\n\t\t --architecture $(DEB_ARCHITECTURE) \\\n\t\t --version $(VERSION)+$(OS_CODENAME) \\\n\t\t $(PHP_DEPENDENCIES) \\\n\t\t --deb-priority optional \\\n\t\t --after-install $(PHP_POST_INSTALL_SCRIPT) \\\n\t\t --before-remove $(PHP_PRE_UNINSTALL_SCRIPT) \\\n\t\t --category $(PACKAGE_CATEGORY) \\\n\t\t --deb-no-default-config-files \\\n\t\t $(PHP_LIB_MAP)\n\t@find $(BIN_PATH) -name $(PHP_PACKAGE_NAME)\\*.deb\n\nphp_info:\n\t@echo \"PHP_VERSION_FULL: $(PHP_VERSION_FULL)\"\n\t@echo \"PHP_API: $(PHP_API)\"\n\t@echo \"PHP_PACKAGE_NAME: $(PHP_PACKAGE_NAME)\"\n\t@echo \"PHP_FOLDER: $(PHP_FOLDER)\"\n"
        },
        {
          "name": "PKGBUILD.MSYS2",
          "type": "blob",
          "size": 1.8310546875,
          "content": "# Themis build script for pacman in MSYS2 environment\n#\n# Maintainer: Cossack Labs Limited <dev@cossacklabs.com>\n\npkgname=('themis' 'themis-devel')\npkgbase=themis\npkgver=0.15.0\npkgrel=1\n\npkgdesc=\"Data security library for network communication and data storage\"\nurl=\"https://www.cossacklabs.com/themis/\"\nlicense=('Apache')\nchangelog=CHANGELOG.md\n\narch=('x86_64' 'i686')\ndepends=('libopenssl>=1.1.1')\nmakedepends=('tar' 'gcc' 'make' 'openssl-devel>=1.1.1')\n\nsource=(\"https://github.com/cossacklabs/themis/archive/$pkgver.tar.gz\")\nsha256sums=('e5ff84e020ea02f545be6948b4a5ed04944fed10d4bc500684d8e79be3f6020d')\nsha1sums=('abab5054190049cdb00540501316a8df3c2496f3')\nmd5sums=('30acf0963fae74808041a54b7c902d42')\n# TODO: verify package signature\n\n# Unfortunately, bsdtar cannot handle symlinks on MSYS2 [1] so we have to use\n# regular tar for source code extraction, and make sure that files are removed\n# before extracting them.\n#\n# [1]: https://github.com/msys2/MSYS2-packages/issues/140\nnoextract=(\"$pkgver.tar.gz\")\nprepare() {\n    tar --unlink-first --recursive-unlink -xf \"$pkgver.tar.gz\"\n}\n\nbuild() {\n    cd \"$pkgbase-$pkgver\"\n    make PREFIX=/usr\n}\n\ncheck() {\n    cd \"$pkgname-$pkgver\"\n    # Skip NIST STS tests which take long time and are prone to spurious\n    # failures in virtualized environments.\n    make -k test NO_NIST_STS=1\n}\n\n# Themis does not provide separate installation targets. It's easier to just\n# install everything and then remove unnecessary files for package splitting.\n\npackage_themis() {\n    cd \"$pkgbase-$pkgver\"\n    make install PREFIX=/usr DESTDIR=\"$pkgdir/\"\n    rm -rf \"$pkgdir/usr/include\"\n    rm -rf \"$pkgdir/usr/lib\"\n}\n\npackage_themis-devel() {\n    pkgdesc=\"Themis header files and development libraries\"\n    depends=(\"themis=$pkgver\")\n\n    cd \"$pkgbase-$pkgver\"\n    make install PREFIX=/usr DESTDIR=\"$pkgdir/\"\n    rm -rf \"$pkgdir/usr/bin\"\n}\n"
        },
        {
          "name": "Package.swift",
          "type": "blob",
          "size": 0.9921875,
          "content": "// swift-tools-version:5.3\n// The swift-tools-version declares the minimum version of Swift required to build this package.\n\nimport PackageDescription\n\nlet package = Package(\n    name: \"themis\",\n    products: [\n        .library(\n            name: \"themis\",\n            targets: [\"themis\"]),\n    ],\n    // OpenSSL XCF is statically linked to Themis XCF, so no need to have it as a dependency\n    dependencies: [],\n    targets: [\n        .binaryTarget(name: \"themis\",\n                      // update version in URL path\n                      url: \"https://github.com/cossacklabs/themis/releases/download/0.15.1/themis.xcframework.zip\",\n                      // The scripts/create_xcframework.sh calculates the checksum when generating the XCF.\n                      // Alternatively, run from package directory:\n                      // swift package compute-checksum build/xcf_output/themis.xcframework.zip\n                      checksum: \"2d5bfbba7d5d3ecd0d40acdaee65d1b5d42dee5df5ae9d99faec4119087238c5\"),\n\n    ]\n)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 19.3818359375,
          "content": "<h3 align=\"center\">\n  <a href=\"https://www.cossacklabs.com/themis/\"><img src=\"https://github.com/cossacklabs/themis/wiki/images/logo.png\" alt=\"Themis provides strong, usable cryptography for busy people\" width=\"420\"></a>\n  <br>\n  <br>\n  Themis provides strong, usable cryptography for busy people\n  <br>\n  <br>\n</h3>\n\n---\n\n<p align=\"center\">\n  <a href=\"https://github.com/cossacklabs/themis/releases\"><img src=\"https://img.shields.io/github/release/cossacklabs/themis.svg\" alt=\"GitHub release\"></a>\n  <a href=\"https://github.com/cossacklabs/themis/releases/latest\"><img src=\"https://img.shields.io/badge/platform-Android%20%7C%20iOS%20%7C%20macOS%20%7C%20Linux%20%7C%20Java%20%7C%20WASM-green.svg\" alt=\"Platforms\"></a>\n  <a href='https://coveralls.io/github/cossacklabs/themis'><img src='https://coveralls.io/repos/github/cossacklabs/themis/badge.svg?branch=master' alt='Coverage Status' /></a>\n  <a href='https://goreportcard.com/report/github.com/cossacklabs/themis'><img class=\"badge\" tag=\"github.com/cossacklabs/themis\" src=\"https://goreportcard.com/badge/github.com/cossacklabs/themis\"></a>\n  <br>\n  <a href=\"https://github.com/cossacklabs/themis/actions?query=workflow%3A%22Themis+Core%22\"><img src=\"https://github.com/cossacklabs/themis/workflows/Themis%20Core/badge.svg\" alt=\"Themis Core\"></a>\n  <a href=\"https://github.com/cossacklabs/themis/actions?query=workflow%3A%22Integration+testing%22\"><img src=\"https://github.com/cossacklabs/themis/workflows/Integration%20testing/badge.svg\" alt=\"Integration testing\"></a>\n  <a href=\"https://github.com/cossacklabs/themis/actions?query=workflow%3A%22Code+style%22\"><img src=\"https://github.com/cossacklabs/themis/workflows/Code%20style/badge.svg\" alt=\"Code style\"></a>\n  <a href=\"https://circleci.com/gh/cossacklabs/themis\"><img src=\"https://circleci.com/gh/cossacklabs/themis/tree/master.svg?style=shield\" alt=\"Circle CI\"></a>\n  <a href=\"https://app.bitrise.io/app/69a1d5c9d42fa60f\"><img src=\"https://app.bitrise.io/app/69a1d5c9d42fa60f/status.svg?token=Fp_06Ema5PgzBbZQyQy1bA&branch=master\" alt=\"Bitrise\"></a>\n</p>\n<h4 align=\"center\">General purpose cryptographic library for storage and messaging for iOS (Swift, Obj-C), Android (Java, Kotlin), React Native (iOS, Android), desktop Java, Ð¡/Ð¡++, Node.js, Python, Ruby, PHP, Go, Rust, WASM.</h4>\n<h4 align=\"center\">Perfect fit for multi-platform apps. Hides cryptographic details. Made by cryptographers for developers ð§¡</h4>\n\n\n\n## What Themis is\n\nThemis is an open-source high-level cryptographic services library for securing data during authentication, storage, messaging, network exchange, etc. Themis solves 90% of typical data protection use cases that are common for most apps. \n\nThemis helps to build both simple and complex cryptographic features easily, quickly, and securely. Themis allows developers to focus on the main thing: developing their applications.\n\n## Use cases that Themis solves\n\n* **Encrypt stored secrets** in your apps and backend: API keys, session tokens, files.\n\n* **Encrypt sensitive data fields** before storing in database (_\"application-side field-level encryption\"_).\n\n* Support **searchable encryption**, data tokenization and data masking using Themis and [Acra](https://www.cossacklabs.com/acra/).\n\n* Exchange secrets securely: **share sensitive data** between parties, build simple chat app between patients and doctors.\n\n* Build **end-to-end encryption schemes** with centralised or decentralised architecture: encrypt data locally on one app, use it encrypted everywhere, decrypt only for authenticated user.\n\n* Maintain **real-time secure sessions**: send encrypted messages to control connected devices from your app, receive real-time sensitive data from your apps to your backend.\n\n* **Compare secrets** between parties without revealing them (zero-knowledge proof-based authentication).\n\n* **One cryptographic library that fits them all**: Themis is the best fit for multi-platform apps (e.g., iOS+Android+Electron app with Node.js backend) because it provides 100% compatible API and works in the same way across all supported platforms.\n\n\n## Cryptosystems\n\nThemis provides ready-made building blocks *([âcryptosystemsâ](https://docs.cossacklabs.com/themis/#cryptosystems))* which simplify usage of core cryptographic security operations.\n\nThemis provides 4 important cryptographic services:\n\n* **[Secure Cell](https://docs.cossacklabs.com/themis/crypto-theory/cryptosystems/secure-cell/)**: a multi-mode cryptographic container suitable for **storing anything** from encrypted files to database records and format-preserved strings. Secure Cell is built around AES-256-GCM, AES-256-CTR.\n* **[Secure Message](https://docs.cossacklabs.com/themis/crypto-theory/cryptosystems/secure-message/)**: a simple **encrypted messaging** solution for the widest scope of applications. Exchange the keys between the parties and you're good to go. Two pairs of underlying cryptosystems: ECC + ECDSA / RSA + PSS + PKCS#7.\n* **[Secure Session](https://docs.cossacklabs.com/themis/crypto-theory/cryptosystems/secure-session/)**: **session-oriented encrypted data exchange** with forward secrecy for better security guarantees and more demanding infrastructures. Secure Session can perfectly function as socket encryption, session security, or a high-level messaging primitive (with some additional infrastructure like PKI). ECDH key agreement, ECC & AES encryption.\n* **[Secure Comparator](https://docs.cossacklabs.com/themis/crypto-theory/cryptosystems/secure-comparator/)**: Zero knowledge proofs-based cryptographic protocol for **authentication** and comparing secrets.\n\nWe created Themis to build other products on top of it - i.e. [Acra](https://www.cossacklabs.com/acra/) and [Hermes](https://www.cossacklabs.com/hermes/).\n\n# Installation\n\nRefer to the [Installation](https://docs.cossacklabs.com/themis/installation/) page to install Themis for your mobile, web, desktop, or server-side application.\nWe highly recommend [installation packages](https://docs.cossacklabs.com/themis/installation/installation-from-packages/) instead of building from source.\n\n\n# Languages\n\nThemis is available for the following languages/platforms, refer to [language howtos](https://docs.cossacklabs.com/themis/getting-started/#language-howtos) for each: \n\n| Platform | Documentation | Examples | Version |\n| :----- | :----- | :------ | :--- |\n| âï¸ React Native (iOS, Android) | [React Native Howto](https://docs.cossacklabs.com/themis/languages/react-native/) | [docs/examples/react-native](https://github.com/cossacklabs/themis/tree/master/docs/examples/react-native) | [![npm](https://img.shields.io/npm/v/react-native-themis.svg)](https://www.npmjs.com/package/react-native-themis) |\n| ð¶ Swift (iOS, macOS) | [Swift Howto](https://docs.cossacklabs.com/themis/languages/swift/) | [docs/examples/swift](https://github.com/cossacklabs/themis/tree/master/docs/examples/swift) | [![CocoaPods](https://img.shields.io/cocoapods/v/themis.svg)](https://cocoapods.org/pods/themis) |\n| ð± Objective-C (iOS, macOS) | [Objective-C Howto](https://docs.cossacklabs.com/themis/languages/objc/) | [docs/examples/objc](https://github.com/cossacklabs/themis/tree/master/docs/examples/objc)| [![CocoaPods](https://img.shields.io/cocoapods/v/themis.svg)](https://cocoapods.org/pods/themis) |\n| âï¸ Java (Desktop) | [Java (Desktop) Howto](https://docs.cossacklabs.com/themis/languages/java/installation-desktop/) | [docs/examples/java](https://github.com/cossacklabs/themis/tree/master/docs/examples/java) | [![maven](https://img.shields.io/maven-central/v/com.cossacklabs.com/java-themis )](https://central.sonatype.com/artifact/com.cossacklabs.com/java-themis/) |\n| âï¸ Java (Android) | [Java (Android) Howto](https://docs.cossacklabs.com/themis/languages/java/installation-android/) | [docs/examples/android](https://github.com/cossacklabs/themis/tree/master/docs/examples/android) | [![maven](https://img.shields.io/maven-central/v/com.cossacklabs.com/java-themis )](https://central.sonatype.com/artifact/com.cossacklabs.com/java-themis/) |\n| ð Kotlin (Android) | [Kotlin (Android) Howto](https://docs.cossacklabs.com/themis/languages/kotlin/installation-android/) | [docs/examples/android](https://github.com/cossacklabs/themis/tree/master/docs/examples/android) | [![maven](https://img.shields.io/maven-central/v/com.cossacklabs.com/themis)](https://central.sonatype.com/artifact/com.cossacklabs.com/themis) |\n| ð» Ruby | [Ruby Howto](https://docs.cossacklabs.com/themis/languages/ruby/) | [docs/examples/ruby](https://github.com/cossacklabs/themis/tree/master/docs/examples/ruby) | [![Gem](https://img.shields.io/gem/v/rbthemis.svg)](https://rubygems.org/gems/rbthemis) |\n| ð Python | [Python Howto](https://docs.cossacklabs.com/themis/languages/python/) | [docs/examples/python](https://github.com/cossacklabs/themis/tree/master/docs/examples/python) | [![PyPI](https://img.shields.io/pypi/v/pythemis.svg)](https://pypi.python.org/pypi?%3Aaction=search&term=pythemis&submit=search) |\n| ð PHP | [PHP Howto](https://docs.cossacklabs.com/themis/languages/php/) | [docs/examples/php](https://github.com/cossacklabs/themis/tree/master/docs/examples/php) | |\n| â C++ | [CPP Howto](https://docs.cossacklabs.com/themis/languages/cpp/) | [docs/examples/c++](https://github.com/cossacklabs/themis/tree/master/docs/examples/c%2B%2B) ||\n| ð­ Node.js | [Javascript (Node.js) Howto](https://docs.cossacklabs.com/themis/languages/nodejs/) | [docs/examples/js](https://github.com/cossacklabs/themis/tree/master/docs/examples/js) | [![npm](https://img.shields.io/npm/v/jsthemis.svg)](https://www.npmjs.com/package/jsthemis) |\n| ð¥ WebAssembly | [Javascript (WebAssembly) Howto](https://docs.cossacklabs.com/themis/languages/wasm/)| [docs/examples/js](https://github.com/cossacklabs/themis/tree/master/docs/examples/js) | [![npm](https://img.shields.io/npm/v/wasm-themis.svg)](https://www.npmjs.com/package/wasm-themis) |\n| ð¹ Go | [Go Howto](https://docs.cossacklabs.com/themis/languages/go/)| [docs/examples/go](https://github.com/cossacklabs/themis/tree/master/docs/examples/go) | [![go.dev](https://img.shields.io/badge/go.dev-v0.14.0-007d9c)](https://pkg.go.dev/mod/github.com/cossacklabs/themis/gothemis) |\n| ð¦ Rust | [Rust Howto](https://docs.cossacklabs.com/themis/languages/rust/)| [docs/examples/rust](https://github.com/cossacklabs/themis/tree/master/docs/examples/rust) | [![crates](https://img.shields.io/crates/v/themis.svg)](https://crates.io/crates/themis)|\n| ð¸ Ð¡++ PNaCl for Google Chrome||[WebThemis project](https://github.com/cossacklabs/webthemis)|\n\n# Availability\n\nThemis supports following CPU architectures: x86_64/i386, ARM, Apple Silicon (ARM64), various Android architectures.\n\nWe build and verify Themis on the latest stable OS versions:\n\n  - Debian (10, 11, 12), CentOS 8, Ubuntu (20.04, 22.04, 24.04)\n  - macOS (10.12â10.15, 11.*)\n  - Android (7â12)\n  - iOS (11â15)\n  - Windows (experimental MSYS2 support)\n\nWe plan to expand this list with a broader set of platforms.\nIf you'd like to help improve or bring Themis to your favourite platform or language â\n[get in touch](mailto:dev@cossacklabs.com).\n\n# Documentation\n\n[Documentation for Themis](https://docs.cossacklabs.com/themis/) contains the ever-evolving official docs, which covers everything from deployment guidelines to use cases, with brief explanations of cryptosystems and architecture behind the main Themis library. \n\nRefer to the documentation to learn more about:\n- [cryptography in Themis](https://docs.cossacklabs.com/themis/crypto-theory/) ([Themis cryptosystems and attacks on them](https://docs.cossacklabs.com/themis/crypto-theory/cryptosystems/), [cryptography donors](https://docs.cossacklabs.com/themis/crypto-theory/cryptography-donors/), [key management advice](https://docs.cossacklabs.com/themis/crypto-theory/key-management/), [FIPS 140-2 and GOST](https://docs.cossacklabs.com/themis/crypto-theory/fips-and-gost/)),\n- [debugging and troubleshooting Themis](https://docs.cossacklabs.com/themis/debugging/) ([command-line utilities](https://docs.cossacklabs.com/themis/debugging/cli-utilities/), [thread safety](https://docs.cossacklabs.com/themis/debugging/thread-safety/), [migration guidelines between Themis versions](https://docs.cossacklabs.com/themis/debugging/migration-guides/)),  \n- [Themis architecture](https://docs.cossacklabs.com/themis/architecture/),\n- [Themis security](https://docs.cossacklabs.com/themis/security/) ([Themis and OWASP](https://docs.cossacklabs.com/themis/security/owasp/), [Themis development security practices](https://docs.cossacklabs.com/themis/security/dev-security-practices/)),\n- [community behind Themis](https://docs.cossacklabs.com/themis/community/) ([contributing guidelines](https://docs.cossacklabs.com/themis/community/contributing/), [credits and honorable mentions](https://docs.cossacklabs.com/themis/community/credits/),  [projects that use Themis](https://docs.cossacklabs.com/themis/community/projects-that-use-themis/), [tutorials](https://docs.cossacklabs.com/themis/community/tutorials-workshops-talks/), [workshops and talks](https://docs.cossacklabs.com/themis/community/tutorials-workshops-talks/)).\n\n# Cryptography\n\nThemis relies on proven cryptographic algorithms implemented by well-known cryptography libraries such as OpenSSL, LibreSSL, BoringSSL. Refer to [Cryptography in Themis](https://docs.cossacklabs.com/themis/crypto-theory/) docs to learn more.\n\n\nThis distribution includes cryptographic software. The country in which you currently reside may have restrictions on the import, possession, use, and/or re-export to another country, of encryption software. BEFORE using any encryption software, please check your country's laws, regulations, and policies concerning the import, possession, or use, and re-export of encryption software, to see if this is permitted. See http://www.wassenaar.org/ for more information.\n\nThe U.S. Government Department of Commerce, Bureau of Industry and Security (BIS), has classified this software as Export Commodity Control Number (ECCN) 5D002.C.1, which includes information security software using or performing cryptographic functions with asymmetric algorithms. The form and manner of this distribution make it eligible for export under the License Exception ENC Technology Software Unrestricted (TSU) exception (see the BIS Export Administration Regulations, Section 740.13) for both object code and source code.\n\n# Submitting apps to the App Store\n\nIf your application uses Themis and you want to submit it to the Apple App Store, there are certain requirements towards declaring use of any cryptography.\n\nRead about [Apple export regulations on cryptography for Themis](https://docs.cossacklabs.com/themis/regulations/apple-crypto-regulations/) to find out what to do.\n\n# Security\n\nEach change in Themis core library is being reviewed and approved by our internal team of cryptographers and security engineers. For every release, we perform internal audits by cryptographers who don't work on Themis.\n\nWe use a lot of automated security testing, i.e. static code analysers, fuzzing tools, memory analysers, unit tests (per each platform), integration tests (to find compatibility issues between different Themis-supported languages, OS and x86/x64 architectures). Read more about our security testing practices in [Themis security docs](https://docs.cossacklabs.com/themis/security/).\n\nIf you believe that you've found a security-related issue, please drop us an email to [dev@cossacklabs.com](mailto:dev@cossacklabs.com). Bug bounty program may apply.\n\n# GDPR, HIPAA, CCPA  \n\nAs a cryptographic services library for mobile and server platforms, Themis is a [\"state of the art\"](https://gdpr-info.eu/art-32-gdpr/) encryption tool, which provides secure data exchange and storage. \n\nUsing Themis, you can reach better compliance with the current data privacy regulations, such as:     \n* [General Data Protection Regulation (GDPR)](https://gdpr-info.eu/)   \n* [HIPAA (Health Insurance Portability and Accountability Act)](https://en.wikipedia.org/wiki/Health_Insurance_Portability_and_Accountability_Act)        \n* [DPA (Data Protection Act)](http://www.legislation.gov.uk/ukpga/2018/12/contents/enacted)     \n* [CCPA (California Consumer Privacy Act)](https://en.wikipedia.org/wiki/California_Consumer_Privacy_Act)      \n\nRead more about [Regulations](https://docs.cossacklabs.com/themis/regulations/) in docs.\n\n# Community\n\nThemis is [recommended by OWASP](https://github.com/OWASP/owasp-mstg/blob/1.1.0/Document/0x06e-Testing-Cryptography.md#third-party-libraries) as data encryption library for mobile platforms.\n\n\nThemis is widely-used for both non-commercial and commercial projects, [some public applications and libraries can be found here](https://docs.cossacklabs.com/themis/community/projects-that-use-themis/).\n\nWant to be featured on our blog and on the list of contributors, too? [Write us](mailto:dev@cossacklabs.com) about the project youâve created using Themis!\n\n# Contributing\n\nIf you're looking for something to contribute to and gain eternal respect, just pick the things in the [list of issues](https://github.com/cossacklabs/themis/issues). Head over to our [Contribution guidelines](https://docs.cossacklabs.com/themis/community/contributing/) as your starting point.\n\nSupporting Themis for all these numerous platforms is hard work, but we try to do our best to make using Themis convenient for everyone. Most issues that our users encounter are connected with the installation process and dependency management. If you face any challenges, please [let us know](https://github.com/cossacklabs/themis/issues).\n\n# Commercial support\n\nAt Cossack Labs, we offer professional support services for Themis and applications using Themis. \n\nThis support includes, but is not limited to the library integration, with a focus on web and mobile applications; designing and building end-to-end encryption schemes for mobile applications; security audits, for in-house library integrations or high-level protocol; custom application development that requires cryptography; consulting and [training services](https://training.cossacklabs.com).\n\nDrop us an email to [info@cossacklabs.com](mailto:info@cossacklabs.com) or check out the [Cossack Labs cybersecurity services](https://www.cossacklabs.com/services/overview/).\n\n# Contacts\n\nIf you want to ask a technical question, report a bug or suggest a feature,\nfeel free to [start a discussion on GitHub](https://github.com/cossacklabs/themis/discussions),\nraise an issue in the [issue tracker](https://github.com/cossacklabs/themis/issues),\nor write to [dev@cossacklabs.com](mailto:dev@cossacklabs.com).\n\nTo talk to the business wing of Cossack Labs Limited, drop us an email to [info@cossacklabs.com](mailto:info@cossacklabs.com).\n\n[![Blog](https://img.shields.io/badge/blog-cossacklabs.com-7a7c98.svg)](https://cossacklabs.com/) [![Twitter CossackLabs](https://img.shields.io/badge/twitter-cossacklabs-fbb03b.svg)](http://twitter.com/cossacklabs) [![Dev.to CossackLabs](https://img.shields.io/badge/dev.to-%40cossacklabs-orange.svg)](https://dev.to/@cossacklabs/) [![Medium CossackLabs](https://img.shields.io/badge/medium-%40cossacklabs-orange.svg)](https://medium.com/@cossacklabs/) \n\n[![Closed pull requests with Bitcode-related changes](https://img.shields.io/github/issues-pr-closed/cossacklabs/themis/Bitcode%20%F0%9F%90%99?color=informational&label=Bitcode-related%20issues)](https://github.com/cossacklabs/themis/pulls?q=is%3Apr+is%3Aclosed+label%3A%22Bitcode+%F0%9F%90%99%22)\n\n<!--[![Join the chat at https://gitter.im/cossacklabs/themis](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/cossacklabs/themis?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) -->\n"
        },
        {
          "name": "Themis.nsi",
          "type": "blob",
          "size": 0.8974609375,
          "content": "Name \"Themis\"\nOutFile \"build\\InstallThemis.exe\"\nLicenseData \"LICENSE\"\nInstallDir \"$PROGRAMFILES\\Themis\"\n\nVIAddVersionKey \"ProductName\"     \"Themis\"\nVIAddVersionKey \"CompanyName\"     \"Cossack Labs Limited\"\nVIAddVersionKey \"LegalCopyright\"  \"(c) Cossack Labs Limited\"\nVIAddVersionKey \"FileDescription\" \"Themis library installer\"\nVIAddVersionKey \"FileVersion\"     \"0.15.0\"\nVIAddVersionKey \"ProductVersion\"  \"0.15.0\"\nVIFileVersion    0.15.0.0\nVIProductVersion 0.15.0.0\n\nPage license\nPage directory\nPage instfiles\nUninstPage uninstConfirm\nUninstPage instfiles\n\nSection \"Install\"\n\tSetOutPath $INSTDIR\n\tFile LICENSE\n\tFile /r /x pkgconfig build\\install\\*\n\tWriteUninstaller $INSTDIR\\Uninstall.exe\nSectionEnd\n\nSection \"Uninstall\"\n\tDelete $INSTDIR\\Uninstall.exe\n\tDelete $INSTDIR\\LICENSE\n\tRmDir /r /REBOOTOK $INSTDIR\\bin\n\tRmDir /r           $INSTDIR\\include\n\tRmDir /r           $INSTDIR\\lib\n\tRmDir              $INSTDIR\nSectionEnd\n"
        },
        {
          "name": "Themis.xcodeproj",
          "type": "tree",
          "content": null
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.005859375,
          "content": "0.15.0"
        },
        {
          "name": "benches",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.5830078125,
          "content": "// Common dependency repositories for all subprojects. They need to be set\n// for both Gradle build itself and for the project it compiles.\nallprojects {\n    buildscript {\n        repositories {\n            google()\n            mavenCentral()\n        }\n\n        // Set common Kotlin version that we are going to use.\n        // Can't use higher versions if we are to maintain API 21 as our minimum.\n        // > Invoke-customs are only supported starting with Android O (--min-api 26)\n        ext.kotlin_version = '1.4.32'\n    }\n\n    repositories {\n        google()\n        mavenCentral()\n    }\n}\n"
        },
        {
          "name": "configure",
          "type": "blob",
          "size": 6.4599609375,
          "content": "#!/usr/bin/env sh\n#\n# Configure Themis build.\n#\n# Normally you should not need to call this script explicitly as \"make\"\n# executes it automatically if needed. But by all means, you can do\n#\n#     ./configure\n#     make\n#     sudo make install\n#\n# to install Themis in a traditional way, or if you need to configure\n# something non-standard.\n#\n# Important environment variables:\n#\n#     BUILD_PATH - path to build directory (default: \"build\")\n#\n# ./configure expects to be run from the source root with build directory\n# configured by BUILD_PATH if necessary.\n#\n# Run\n#\n#     ./configure --help\n#\n# to see available options.\n\nset -eu\n\nBUILD_PATH=${BUILD_PATH:-build}\n\nCC=${CC:-cc}\nCMAKE=${CMAKE:-cmake}\n\nusage() {\n    cat <<EOF\nUsage:\n    $0 [options...] [<var>=<value>...]\n\nOptions:\n    --prefix=path           installation prefix\n    --bindir=path           installation path for binaries\n    --includedir=path       installation path for headers\n    --libdir=path           installation path for shared libraries\n    --jnidir=path           installation path for JNI libraries\n    --pkgconfigdir=path     installation path for pkg-config files\n\n    --help                  read this help\nEOF\n}\n\ndie() {\n    exec >&2\n    echo $@\n    echo\n    usage\n    exit 1\n}\n\nconfigure_mk=\"$BUILD_PATH/configure.mk\"\n\nwrite_boilerplate() {\n    mkdir -p \"$(dirname \"$configure_mk\")\"\n    cat > \"$configure_mk\"  <<EOF\n# DO NOT EDIT\n#\n# Generated automatically by $0\n\nEOF\n}\n\nset_variable() {\n    eval \"$1=\\\"$2\\\"\"\n    echo \"$1 = $2\" >> \"$configure_mk\"\n}\n\nappend_variable() {\n    eval \"$1=\\\"$1 $2\\\"\"\n    echo \"$1 += $2\" >> \"$configure_mk\"\n}\n\nstandard_dirs=\"prefix bindir includedir libdir jnidir pkgconfigdir\"\n\nis_standard_dir() {\n    for dir in $standard_dirs\n    do\n        if [ \"$1\" = \"$dir\" ]\n        then\n            return 0\n        fi\n    done\n    return 1\n}\n\nparse_variable_override() {\n    case \"$1\" in\n      --*=*)\n        var=${1#--}\n        value=${var#*=}\n        var=${var%%=*}\n        if is_standard_dir \"$var\"\n        then\n            set_variable \"$var\" \"$value\"\n            nshift=1\n            return 0\n        fi\n        die \"unrecognized option: $1\"\n        ;;\n\n      --*)\n        var=${1#--}\n        if is_standard_dir \"$var\"\n        then\n            if [ $# = 1 ]\n            then\n                die \"option $1 expects an argument\"\n            fi\n            value=$2\n            set_variable \"$var\" \"$value\"\n            nshift=2\n            return 0\n        fi\n        die \"unrecognized option: $1\"\n        ;;\n\n      *=*)\n        var=${1%%=*}\n        value=${1#*=}\n        set_variable \"$var\" \"$value\"\n        nshift=1\n        return 0\n        ;;\n    esac\n    return 1\n}\n\nparse_commandline() {\n    while [ $# -gt 0 ]\n    do\n        if [ \"$1\" = \"--help\" ]\n        then\n            usage\n            exit\n        fi\n\n        if parse_variable_override \"$@\"\n        then\n            shift $nshift\n            continue\n        fi\n\n        die \"unrecognized argument: $1\"\n    done\n}\n\ndetect_platform() {\n    case \"$(uname)\" in\n      Darwin)\n        set_variable IS_MACOS \"true\"\n        ;;\n      Linux)\n        set_variable IS_LINUX \"true\"\n        ;;\n      *)\n        case \"$(uname -o)\" in\n          Msys)\n            set_variable IS_MSYS \"true\"\n            ;;\n        esac\n        ;;\n    esac\n\n    if $CC --version 2>&1 | grep -qi Emscripten\n    then\n        set_variable IS_EMSCRIPTEN \"true\"\n    fi\n}\n\ndetect_compiler() {\n    if $CC --version 2>&1 | grep -qi \"clang version\"\n    then\n        set_variable IS_CLANG_COMPILER \"true\"\n    fi\n}\n\nselect_shared_object_extension() {\n    if [ -n \"${IS_MSYS:-}\" ]\n    then\n        set_variable SHARED_EXT \"dll\"\n    elif [ -n \"${IS_MACOS:-}\" ]\n    then\n        set_variable SHARED_EXT \"dylib\"\n    else\n        set_variable SHARED_EXT \"so\"\n    fi\n}\n\nselect_cmake_for_emscripten() {\n    [ -z \"${IS_EMSCRIPTEN:-}\" ] && return\n    # Recent versions of Emscripten toolchain provide new \"emcmake\" utility\n    # specifically for CMake. Older versions rely on generic \"emconfigure\".\n    if which emcmake >/dev/null 2>&1\n    then\n        set_variable CMAKE \"emcmake $CMAKE\"\n    else\n        set_variable CMAKE \"emconfigure $CMAKE\"\n    fi\n}\n\nconfigure_macos_toolchain() {\n    [ -z \"${IS_MACOS:-}\" ] && return\n\n    if [ -n \"${SDK:-}\" ]\n    then\n        set_variable SDK_PLATFORM_VERSION \"$(xcrun --sdk \"$SDK\" --show-sdk-platform-version)\"\n        set_variable XCODE_BASE \"$(xcode-select --print-path)\"\n        set_variable CC         \"$XCODE_BASE/usr/bin/gcc\"\n        set_variable BASE       \"$(xcrun --sdk \"$SDK\" --show-sdk-platform-path)\"\n        set_variable SDK_BASE   \"$(xcrun --sdk \"$SDK\" --show-sdk-path)\"\n        set_variable FRAMEWORKS   \"$SDK_BASE/System/Library/Frameworks/\"\n        set_variable SDK_INCLUDES \"$SDK_BASE/usr/include\"\n        append_variable CFLAGS \"-isysroot \\\"$SDK_BASE\\\"\"\n        append_variable LDFLAGS \"-isysroot \\\"$SDK_BASE\\\"\"\n    fi\n\n    if [ -n \"${ARCH:-}\" ]\n    then\n        append_variable CFLAGS \"-arch $ARCH\"\n        append_variable LDFLAGS \"-arch $ARCH\"\n    fi\n}\n\nfind_macos_openssl() {\n    [ -z \"${IS_MACOS:-}\" ] && return\n    local path=\"$(brew --prefix openssl@1.1 2> /dev/null || true)\"\n    if [ -n \"$path\" ]\n    then\n        set_variable HOMEBREW_OPENSSL_PATH \"$path\"\n    fi\n}\n\ndetect_language_runtimes() {\n    set_variable PHP_VERSION        \"$(exec 2>/dev/null; which php     >/dev/null && php -r \"echo PHP_MAJOR_VERSION;\")\"\n    set_variable RUBY_GEM_VERSION   \"$(exec 2>/dev/null; which gem     >/dev/null && gem --version)\"\n    set_variable RUST_VERSION       \"$(exec 2>/dev/null; which rustc   >/dev/null && rustc --version)\"\n    set_variable GO_VERSION         \"$(exec 2>/dev/null; which go      >/dev/null && go version)\"\n    set_variable NODE_VERSION       \"$(exec 2>/dev/null; which node    >/dev/null && node --version)\"\n    set_variable NPM_VERSION        \"$(exec 2>/dev/null; which npm     >/dev/null && npm --version)\"\n    set_variable PIP_VERSION        \"$(exec 2>/dev/null; which pip     >/dev/null && pip --version)\"\n    set_variable PYTHON3_VERSION    \"$(exec 2>/dev/null; which python3 >/dev/null && python3 --version)\"\n}\n\ndetect_optional_toolchain() {\n    local ninja=\"$(which ninja 2>/dev/null || true)\"\n    if [ -n \"$ninja\" ]\n    then\n        set_variable NINJA \"$ninja\"\n    fi\n}\n\nmain() {\n    write_boilerplate\n    parse_commandline \"$@\"\n    detect_platform\n    detect_compiler\n    select_shared_object_extension\n    select_cmake_for_emscripten\n    configure_macos_toolchain\n    find_macos_openssl\n    detect_language_runtimes\n    detect_optional_toolchain\n    echo \"configuration written to $configure_mk\"\n}\n\nmain \"$@\"\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "gothemis",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.462890625,
          "content": "# We'd like to enable \"configuration on demand\" [1] to allow building Themis\n# for Desktop Java without having Android SDK installed.\n#\n# [1]: https://docs.gradle.org/current/userguide/multi_project_builds.html#sec:configuration_on_demand\norg.gradle.configureondemand=true\n\n# Versions of AndroidThemis and JavaThemis packages.\nandroidThemisVersion=0.15.0\njavaThemisVersion=0.15.0\n\n# Android Studio insists that this is set to use JUnit test runner.\nandroid.useAndroidX=true\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.1806640625,
          "content": "#!/usr/bin/env sh\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\"'\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=$(save \"$@\")\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\n# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\nif [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n  cd \"$(dirname \"$0\")\"\nfi\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.2158203125,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\"-Xmx64m\"\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windows variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "jni",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.177734375,
          "content": "include ':android'\nproject(':android').projectDir = new File('src/wrappers/themis/android')\n\ninclude ':desktop'\nproject(':desktop').projectDir = new File('src/wrappers/themis/java')\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "themis.podspec",
          "type": "blob",
          "size": 4.296875,
          "content": "Pod::Spec.new do |s|\n    s.name = \"themis\"\n    s.version = \"0.15.1\"\n    s.summary = \"Data security library for network communication and data storage for iOS and mac OS\"\n    s.description = \"Themis is a convenient cryptographic library for data protection. It provides secure messaging with forward secrecy and secure data storage. Themis is aimed at modern development practices and has a unified API across 12 platforms, including iOS/macOS, Ruby, JavaScript, Python, and Java/Android.\"\n    s.homepage = \"https://cossacklabs.com\"\n    s.license = { :type => 'Apache 2.0'}\n\n    s.source = { :git => \"https://github.com/cossacklabs/themis.git\", :tag => \"#{s.version}\" }\n\n    s.author = {'cossacklabs' => 'info@cossacklabs.com'}\n\n    s.module_name = 'themis'\n    s.default_subspec = 'openssl-1.1.1'\n\n    s.ios.deployment_target = '11.0'\n    s.osx.deployment_target = '10.13'\n    s.ios.frameworks = 'UIKit', 'Foundation'\n\n    # TODO(ilammy, 2020-03-02): resolve \"pod spec lint\" warnings due to dependencies\n    # If you update dependencies, please check whether we can remove \"--allow-warnings\"\n    # from podspec validation in .github/workflows/test-objc.yaml\n\n    # This variant uses the current stable, non-legacy version of OpenSSL.\n    s.subspec 'openssl-1.1.1' do |so|\n        # OpenSSL 1.1.1u\n        so.dependency 'CLOpenSSL-XCF', '1.1.12201'\n\n        # Enable bitcode for OpenSSL in a very specific way, but it works, thanks to @deszip\n        so.ios.pod_target_xcconfig = {\n            'OTHER_CFLAGS[config=Debug]'                => '$(inherited) -fembed-bitcode-marker',\n            'OTHER_CFLAGS[config=Release]'              => '$(inherited) -fembed-bitcode',\n            'BITCODE_GENERATION_MODE[config=Release]'   => 'bitcode',\n            'BITCODE_GENERATION_MODE[config=Debug]'     => 'bitcode-marker'\n        }\n\n        # We're building some C code here which uses includes as it pleases.\n        # Allow this behavior, but we will have to control header mappings.\n        # Also, configure some preprocessor definitions to select OpenSSL backend.\n        so.ios.xcconfig = {\n            'OTHER_CFLAGS' => '-DLIBRESSL',\n            'USE_HEADERMAP' => 'NO',\n            'HEADER_SEARCH_PATHS' => '\"${PODS_ROOT}/themis/include\" \"${PODS_ROOT}/themis/src\" \"${PODS_ROOT}/themis/src/wrappers/themis/Obj-C\"',\n            'CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES' => 'YES',\n        }\n        so.osx.xcconfig = {\n            'OTHER_CFLAGS' => '-DLIBRESSL',\n            'USE_HEADERMAP' => 'NO',\n            'HEADER_SEARCH_PATHS' => '\"${PODS_ROOT}/themis/include\" \"${PODS_ROOT}/themis/src\" \"${PODS_ROOT}/themis/src/wrappers/themis/Obj-C\"',\n            'CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES' => 'YES',\n        }\n\n        # We need to do this weird subspec matryoshka because CocoaPods\n        # insists on compiling everything as if it were a modular framework.\n        # Unfortunately, Themis has a lot of #include \"themis/something.h\"\n        # which break in modular compilation. The \"header_dir\" fixes it up,\n        # but we must set it differently for ObjCThemis. Hence two subspecs.\n        # End users should use \"themis/openssl-1.1.1\" only, not these ones.\n        so.subspec 'core' do |ss|\n            ss.source_files = [\n                \"include/themis/*.h\",\n                \"include/soter/*.h\",\n                \"src/themis/*.{c,h}\",\n                \"src/soter/*.{c,h}\",\n                \"src/soter/ed25519/*.{c,h}\",\n                \"src/soter/openssl/*.{c,h}\",\n            ]\n            # Prevent CocoaPods from flattening the headers, we need structure.\n            ss.header_mappings_dir = \".\"\n            # Don't export Themis Core headers, make only ObjcThemis public.\n            ss.private_header_files = [\n                \"include/themis/*.h\",\n                \"include/soter/*.h\",\n                \"src/themis/*.h\",\n                \"src/soter/*.h\",\n                \"src/soter/ed25519/*.h\",\n                \"src/soter/openssl/*.h\",\n            ]\n        end\n        so.subspec 'objcwrapper' do |ss|\n            ss.dependency 'themis/openssl-1.1.1/core'\n            ss.source_files = \"src/wrappers/themis/Obj-C/objcthemis/*.{m,h}\"\n            ss.header_dir = \"objcthemis\"\n            ss.header_mappings_dir = \"src/wrappers/themis/Obj-C/objcthemis\"\n            ss.public_header_files = \"src/wrappers/themis/Obj-C/objcthemis/*.h\"\n        end\n    end\nend\n"
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}