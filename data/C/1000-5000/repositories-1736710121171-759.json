{
  "metadata": {
    "timestamp": 1736710121171,
    "page": 759,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "wysaid/android-gpuimage-plus",
      "stars": 1828,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 3.484375,
          "content": "---\n#Language: Cpp\nBasedOnStyle: LLVM\nAccessModifierOffset: -4\n#AlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlines: Left\nAlignOperands: false\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: Empty\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: WithoutElse\nAllowShortLoopsOnASingleLine: false\nAllowShortEnumsOnASingleLine: true\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: MultiLine\nBinPackArguments: true\nBinPackParameters: true\nBreakBeforeBraces: Custom\nBraceWrapping:\n  AfterClass: true\n  AfterControlStatement: Always\n  AfterEnum: true\n  AfterFunction: true\n  AfterNamespace: true\n  AfterObjCDeclaration: true\n  AfterStruct: true\n  AfterUnion: true\n  AfterExternBlock: true\n  BeforeCatch: true\n  BeforeElse: true\n  IndentBraces: false\n  SplitEmptyFunction: false\n  SplitEmptyRecord: false\n  SplitEmptyNamespace: false\nBreakBeforeBinaryOperators: None\nObjCSpaceBeforeProtocolList: false\nObjCSpaceAfterProperty: true\nObjCBlockIndentWidth: 4\nObjCBreakBeforeNestedBlockParam: false\nBreakInheritanceList: AfterColon\nBreakBeforeTernaryOperators: false\nBreakConstructorInitializers: AfterColon\nBreakAfterJavaFieldAnnotations: true\nBreakStringLiterals: false\nColumnLimit: 0\nCommentPragmas: '^ IWYU pragma:'\nCompactNamespaces: true\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: false\nDerivePointerAlignment: false\nDisableFormat: false\nExperimentalAutoDetectBinPacking: false\nFixNamespaceComments: true\nForEachMacros:\n  - foreach\n  - Q_FOREACH\n  - BOOST_FOREACH\nIncludeBlocks: Regroup\nIncludeCategories:\n  - Regex: '^\"(llvm|llvm-c|clang|clang-c)/'\n    Priority: 2\n  - Regex: '^(<|\"(gtest|gmock|isl|json)/)'\n    Priority: 3\n  - Regex: '.*'\n    Priority: 1\n#IncludeIsMainRegex: '(Test)?$'\nIndentCaseLabels: false\nIndentPPDirectives: None\nIndentWidth: 4\nIndentWrappedFunctionNames: true\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: false\n#MacroBlockBegin: ''\n#MacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nIndentExternBlock: NoIndent\nPenaltyBreakAssignment: 4\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyBreakTemplateDeclaration: 10\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 60\nPointerAlignment: Left\nReflowComments: true\nSortIncludes: true\nSortUsingDeclarations: true\nSpaceAfterCStyleCast: false\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCpp11BracedList: false\nSpaceBeforeCtorInitializerColon: true\nSpaceBeforeInheritanceColon: true\nSpaceBeforeParens: ControlStatements\nSpaceBeforeRangeBasedForLoopColon: true\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles: false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard: c++17\nStatementMacros:\n  - Q_UNUSED\n  - QT_REQUIRE_VERSION\nTabWidth: 4\nUseTab: Never\n---\nLanguage: Java\nDisableFormat: true\n---\nLanguage: TableGen\nDisableFormat: true\n---\nLanguage: TextProto\nDisableFormat: true\n---\nLanguage: CSharp\nDisableFormat: true\n---\nLanguage: Proto\nDisableFormat: true\n---\nLanguage: JavaScript\nDisableFormat: true\n...\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1142578125,
          "content": ".gradle\n/local.properties\n.idea\n*.iml\n.DS_Store\n/build\n/captures\ntarget/\ntmp\nobjs/\nobj/\nbuild/\nlibrary/.cxx/\n.kotlin/"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGE.md",
          "type": "blob",
          "size": 4.060546875,
          "content": "\n====== Changelist =========\n\n# 2018-6 Version 2.5.0 #\n\n1. Add class `org.wysaid.view.CameraGLSurfaceViewWithBuffer` to do camera preview with buffer.\n2. Remove some useless functions.\n3. Bug fix for face detection demo.\n\n# 2017-7 Version 2.4.6 #\n\n1. Add demos for android version.\n2. Write some JNI wrapper for native code.\n3. Add some new filters like color mapping.\n4. Add real time camera filter. (Preview, take picture, record video)\n4. Add real time video filter. (Preview and save)\n5. Add face landmark module. (By [FaceTracker](https://github.com/kylemcdonald/FaceTracker), not neccessary. )\n\n/////  Other small fix.     ////////\n\n\n# 2015-5-13 Version 1.13.1 #\n\nFix definition of ``CGE_CURVE_PRECISION``\n\n# 2015-5-11 Version 1.13.0 #\n\nFeature: new filter ``monochrome`` with argument ``red, green, blue, cyan, magenta, yellow``. (The same with Photoshop)\n\n# 2015-4-10 Version 1.12.0 #\n\nFeature: Add font render module. (With FreeType)\n\n# 2015-3-26 Version 1.11.1 #\n\nReplace ``glGetAttribLocation`` with ``glBindAttribLocation``.\nNo ``glGetAttribLocation`` now.\n\n# 2015-3-26 Version 1.11.0 #\n\nBug fix for invalid usage of glPixelStorei.\n\n# 2015-2-4 Version 1.10.1 #\n\nBug fix for scene roaming: Error value when the watch point plus the watch dir is equal to 0.\n\n# 2015-1-26 Version 1.10.0 #\n\n1. Support all blend modes of photoshop. (There may be difference such as dissolve)\n2. Optimize the random function in shader. (The blur looks better)\n3. Add fast filter judgement. (in cgeInitialize function)\n4. Bug fix.\n5. Finish slideshow3d, support scene roaming. Support both using 2d&3d sprites in one timeline.\n\n# 2015-1-13 Version 1.9.1 #\n\nOptimize the code structure of slideshow, reduce useless public functions.\n\n# 2015-1-8 Version 1.9.0 #\n\n1. New 3d sprite.\n2. Support adding actions to the timeline. (Use actions to control the scene. )\n3. Optimize for the code structure.\n\n# 2014-12-18 Version 1.8.1 #\n\n1. Be better with iOS.\n2. Remove some inline functions, reduce the size of library.\n\n# 2014-12-16 Version 1.8.0 #\n\n1. SDK fix, support image with alpha channels.(Keep the alpha channel for the result).\n2. Fix the invalid effect of ``cvlomo`` on iOS device.\n3. Some compatible fix for Android.\n\n# 2014-12-16 Version 1.7.1 #\n\nFix issue: The curve texture may be failed to create in some device(OpenGLES2.0).\n\n# 2014-12-10 Version 1.7.0 #\n\nBe compatible with older version of CGE app.\n\n# 2014-11-24 Version 1.6.1 #\n\nBug fix: Fix the parsing method of rule ``vigblend``.\n\n# 2014-11-18 Version 1.6.0 #\n\nMerge with CGE Filter module, add some filters & effects.\n\n# 2014-11-14 Version 1.5.1 #\n\nAdd ``Sprite2dWithSpecialAlpha`` for special alpha gradient.\n\n# 2014-11-12 Version 1.5.0 #\n\nFix for curve module, remove some useless files.\n\n# 2014-11-11 Version 1.4.4 #\n\nBug fix & Optimize Curve Filter.\n\n# 2014-11-5 Version 1.4.3 #\n\nFinish filter generator for libCGE.\n\n# 2014-10-31 Version 1.4.2 #\n\nMake GeometryLineStrip2d's program single instance. Avoid recreating it when using.\n\n# 2014-10-30 Version 1.4.1 #\n\nAdd some test case for sprite module.\n\n# 2014-10-29 Version 1.4.0 #\n\nNew feature: timeline realtime jumping by progress.\n\n# 2014-10-25 Version 1.3.0 #\n\nAdd shader cache for the sprite module.\nReduce the time for slideshow's initialization.\n\n# 2014-10-16 Version 1.2.1 #\n\nAdd global blending mode macro. Support global setting of texture's alpha.(premultiply or not)\n\n# 2014-10-16 Version 1.2.0 #\n\nOptimize code include method, avoid long-time compile time for slideshow module. \n\n# 2014-10-13 Version 1.1.5 #\n\nAdd antialias for line drawing.\n\n# 2014-10-11 Version 1.1.4 #\n\nOptimize the stucture of the Sprite module.\n\n# 2014-9-25 Version1.1.1 #\n\nUse global array buffer cache, avoid recreating it for every instance.\nYou may need to call ``cgeInitialize``.\n\n//////////////////////////////////////////////////////////\n\n# 2014-9-24 Version 1.1.0 #\n\nSupport mixed type of sprites in the same timeline.\n\n//////////////////////////////////////////////////////////\n\n## 2014-9-4 Version 1.0.0 ##\nFirst stable version.\nMaybe some bugs. If there're anything wrong, you can go back to 0.1.*\n\n/////////////////////////////////////////////////////////"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.041015625,
          "content": "MIT License\n\nCopyright (c) 2017 Wang Yang\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.072265625,
          "content": "# Android-GPUImage-Plus\n\nA C++ & Java library for `Image`/`Camera`/`Video` filters. PRs are welcomed.\n\n## New Feature\n\nSee the `image deform demo`.\n\n![screenshots](screenshots/6.gif) ![screenshots](screenshots/5.gif)\n\n## Gradle dependency\n\n```gradle\nallprojects {\n    repositories {\n        maven {\n            // Use github hosted maven repo for now.\n            // Will be uploaded to maven central later.\n            url 'https://maven.wysaid.org/'\n        }\n    }\n}\n\n//Choose only one of them\ndependencies {\n    //All arch: armeabi-v7a, arm64-v8a, x86, x86_64 with video module (ffmpeg bundled)\n    implementation 'org.wysaid:gpuimage-plus:3.0.0'\n\n    //All arch: armeabi-v7a, arm64-v8a, x86, x86_64 without video module (no ffmpeg)\n    implementation 'org.wysaid:gpuimage-plus:3.0.0-min'\n}\n```\n\n> __The jcenter is out of date, please try the source for now. Latest prebuilt versions will be provided soon.__\n\n> To compile other versions of ffmpeg, see: <https://github.com/wysaid/FFmpeg-Android.git>\n\n## Build\n\n* Important options in `local.properties`:\n  * `usingCMakeCompile=true`: Set to true to compile the native library with CMake. Defaults to false, allowing the use of prebuilt libraries.\n  * `usingCMakeCompileDebug=true`: Set to true to compile the native library in Debug Mode. Defaults to false.\n  * `disableVideoModule=true`: Set to true to disable the video recording feature, which is useful for image-only scenarios. This reduces the size of the native library significantly. Defaults to false.\n  * `enable16kPageSizes=true`: Set to true to enable [16k page sizes](https://developer.android.com/guide/practices/page-sizes#16-kb-impact) for the native library, applicable only in CMake compile mode. Defaults to false.\n\n* Build with `Android Studio` and CMake: (Recommended)\n  * Put `usingCMakeCompile=true` in your `local.properties`\n  * Open the repo with the latest version of `Android Studio`\n  * Waiting for the initialization. (NDK/cmake install)\n  * Done.\n\n* Using `Visual Studio Code`: (Requires __[WSL(Recommended)](https://learn.microsoft.com/en-us/windows/wsl/install)__/__[MinGW](https://osdn.net/projects/mingw/)__/__[Cygwin](https://www.cygwin.com/)__ on Windows.)\n  * Setup ENV variable `ANDROID_HOME` to your Android SDK installation directory.\n  * Open the repo with `Visual Studio Code`\n  * Press `⌘ + shift + B` (Mac) or `ctrl + shift + B` (Win/Linux), choose the option `Enable CMake And Build Project With CMake`.\n  * Done.\n\n* Build with preset tasks: (Requires __[WSL(Recommended)](https://learn.microsoft.com/en-us/windows/wsl/install)__/__[MinGW](https://osdn.net/projects/mingw/)__/__[Cygwin](https://www.cygwin.com/)__ on Windows.)\n\n  ```shell\n  # define the environment variable \"ANDROID_HOME\"\n  # If using Windows, define ANDROID_HOME in Windows Environment Settings by yourself.\n  export ANDROID_HOME=/path/to/android/sdk\n  \n  # Setup Project\n  bash tasks.sh --setup-project\n\n  # Compile with CMake Debug\n  bash tasks.sh --debug --enable-cmake --build\n  # Compile with CMake Release\n  bash tasks.sh --release --enable-cmake --build\n\n  # Start Demo By Command\n  bash tasks.sh --run\n  ```\n\n* Build `JNI` part with ndk-build: (Not recommended)\n\n  ```shell\n  export NDK=path/of/your/ndk\n  cd folder/of/jni (android-gpuimage-plus/library/src/main/jni)\n  \n  #This will make all arch: armeabi, armeabi-v7a arm64-v8a, x86, mips\n  ./buildJNI\n  #Or use \"sh buildJNI\"\n  \n  #Try this if you failed to run the shell above\n  export CGE_USE_VIDEO_MODULE=1\n  $NDK/ndk-build\n  \n  #If you don't want anything except the image filter,\n  #Do as below to build with only cge module\n  #No ffmpeg, opencv or faceTracker.\n  #And remove the loading part of ffmpeg&facetracker\n  $NDK/ndk-build\n  \n  #For Windows user, you should include the `.cmd` extension to `ndk-build` like this:\n  cd <your\\path\\to\\this\\repo>\\library\\src\\main\\jni\n  <your\\path\\to\\ndk>\\ndk-build.cmd\n  \n  #Also remember to comment out these line in NativeLibraryLoader\n  //System.loadLibrary(\"ffmpeg\");\n  //CGEFFmpegNativeLibrary.avRegisterAll();\n  ```\n\n> You can find precompiled libs here: [android-gpuimage-plus-libs](https://github.com/wysaid/android-gpuimage-plus-libs) (The precompiled '.so' files are generated with NDK-r23b)\n\nNote that the generated file \"libFaceTracker.so\" is not necessary. So just remove this file if you don't want any feature of it.\n\n* iOS version: [https://github.com/wysaid/ios-gpuimage-plus](https://github.com/wysaid/ios-gpuimage-plus \"http://wysaid.org\")\n\n## Manual\n\n### 1. Usage\n\n___Sample Code for doing a filter with Bitmap___\n\n```java\n//Simply apply a filter to a Bitmap.\n@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n\n    Bitmap srcImage = ...;\n\n    //HSL Adjust (hue: 0.02, saturation: -0.31, luminance: -0.17)\n    //Please see the manual for more details.\n    String ruleString = \"@adjust hsl 0.02 -0.31 -0.17\";\n\n    Bitmap dstImage = CGENativeLibrary.filterImage_MultipleEffects(src, ruleString, 1.0f);\n\n    //Then the dstImage is applied with the filter.\n\n    //Save the result image to /sdcard/libCGE/rec_???.jpg.\n    ImageUtil.saveBitmap(dstImage);\n}\n```\n\n### 2. Custom Shader Filter\n\n#### 2.1 Write your own filter\n\n>Your filter must inherit [CGEImageFilterInterfaceAbstract](https://github.com/wysaid/android-gpuimage-plus/blob/master/library/src/main/jni/include/cgeImageFilter.h#L42) or its child class. Most of the filters are inherited from [CGEImageFilterInterface](https://github.com/wysaid/android-gpuimage-plus/blob/master/library/src/main/jni/include/cgeImageFilter.h#L57) because it has many useful functions.\n\n```cpp\n// A simple customized filter to do a color reversal.\nclass MyCustomFilter : public CGE::CGEImageFilterInterface\n{\npublic:\n    \n    bool init()\n    {\n        CGEConstString fragmentShaderString = CGE_SHADER_STRING_PRECISION_H\n        (\n        varying vec2 textureCoordinate;  //defined in 'g_vshDefaultWithoutTexCoord'\n        uniform sampler2D inputImageTexture; // the same to above.\n\n        void main()\n        {\n            vec4 src = texture2D(inputImageTexture, textureCoordinate);\n            src.rgb = 1.0 - src.rgb;  //Simply reverse all channels.\n            gl_FragColor = src;\n        }\n        );\n\n        //m_program is defined in 'CGEImageFilterInterface'\n        return m_program.initWithShaderStrings(g_vshDefaultWithoutTexCoord, s_fsh);\n    }\n\n    //void render2Texture(CGE::CGEImageHandlerInterface* handler, GLuint srcTexture, GLuint vertexBufferID)\n    //{\n    //  //Your own render functions here.\n    //  //Do not override this function to use the CGEImageFilterInterface's.\n    //}\n};\n```\n\n>Note: To add your own shader filter with c++. [Please see the demo for further details](https://github.com/wysaid/android-gpuimage-plus/blob/master/library/src/main/jni/source/customFilter_N.cpp).\n\n#### 2.2 Run your own filter\n\n__In C++, you can use a CGEImageHandler to do that:__\n\n```cpp\n//Assume the gl context already exists:\n//JNIEnv* env = ...;\n//jobject bitmap = ...;\nCGEImageHandlerAndroid handler;\nCustomFilterType* customFilter = new CustomFilterType();\n\n//You should handle the return value (false is returned when failed.)\ncustomFilter->init();\nhandler.initWithBitmap(env, bitmap);\n\n//The customFilter will be released when the handler' destructor is called.\n//So you don't have to call 'delete customFilter' if you add it into the handler.\nhandler.addImageFilter(customFilter);\n\nhandler.processingFilters(); //Run the filters.\n\njobject resultBitmap = handler.getResultBitmap(env);\n```\n\n>If no gl context exists, the class [CGESharedGLContext](https://github.com/wysaid/android-gpuimage-plus/blob/master/library/src/main/jni/interface/cgeSharedGLContext.h#L22) may be helpful.\n\n__In Java, you can simply follow the sample:__\n\nSee: [CGENativeLibrary.cgeFilterImageWithCustomFilter](https://github.com/wysaid/android-gpuimage-plus/blob/master/cgeDemo/src/main/java/org/wysaid/cgeDemo/TestCaseActivity.java#L123)\n\n__Or to do with a [CGEImageHandler](https://github.com/wysaid/android-gpuimage-plus/blob/master/library/src/main/java/org/wysaid/nativePort/CGEImageHandler.java#L93)__\n\n### 3. Filter Rule String ###\n\nDoc: <https://github.com/wysaid/android-gpuimage-plus/wiki>\n\nEn: [https://github.com/wysaid/android-gpuimage-plus/wiki/Parsing-String-Rule-(EN)](https://github.com/wysaid/android-gpuimage-plus/wiki/Parsing-String-Rule-(EN) \"http://wysaid.org\")\n\nCh: [https://github.com/wysaid/android-gpuimage-plus/wiki/Parsing-String-Rule-(ZH)](https://github.com/wysaid/android-gpuimage-plus/wiki/Parsing-String-Rule-(ZH) \"http://wysaid.org\")\n\n## Tool\n\nSome utils are available for creating filters: [https://github.com/wysaid/cge-tools](https://github.com/wysaid/cge-tools \"http://wysaid.org\")\n\n[![Tool](https://raw.githubusercontent.com/wysaid/cge-tools/master/screenshots/0.jpg \"cge-tool\")](https://github.com/wysaid/cge-tools)\n\n## License\n\n[MIT License](https://github.com/wysaid/android-gpuimage-plus/blob/master/LICENSE)\n\n## Donate\n\nAlipay:\n\n![Alipay](https://raw.githubusercontent.com/wysaid/android-gpuimage-plus/master/screenshots/alipay.jpg \"alipay\")\n\nPaypal:\n\n[![Paypal](https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif \"Paypal\")](http://blog.wysaid.org/p/donate.html)\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 1.0791015625,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    ext {\n        kotlin_version = '2.0.20'\n    }\n    repositories {\n        mavenCentral()\n        google()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:8.7.3'\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        mavenCentral()\n        google()\n    }\n}\n\next {\n    android = [\n            compileSdkVersion: 30,\n            buildToolsVersion: '34.0.0',\n            minSdkVersion    : 21,\n            targetSdkVersion : 25, // higher target version needs more storage permission request.\n            versionCode      : 2,\n            versionName      : \"3.0.0\",\n            applicationId    : \"org.wysaid.cgeDemo\",\n            appcompatX       : \"1.2.0\",\n            ndkVersion       : \"26.3.11579264\",\n            cmakeVersion     : \"3.22.1+\",\n    ]\n}"
        },
        {
          "name": "cgeDemo",
          "type": "tree",
          "content": null
        },
        {
          "name": "demoRelease",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.9638671875,
          "content": "# Project-wide Gradle settings.\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx10248m -XX:MaxPermSize=256m\n\norg.gradle.jvmargs+=-Dfile.encoding=UTF-8\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n\nandroid.useAndroidX=true\nandroid.enableJetifier=true\nandroid.injected.testOnly=false\n#android.defaults.buildfeatures.buildconfig=true\nandroid.nonTransitiveRClass=false\nandroid.nonFinalResIds=false"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.9609375,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched.\nif $cygwin ; then\n    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\nfi\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >&-\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >&-\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.34765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windowz variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\ngoto execute\r\n\r\n:4NT_args\r\n@rem Get arguments from the 4NT Shell from JP Software\r\nset CMD_LINE_ARGS=%$\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "screenshots",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 1.8466796875,
          "content": "include ':library', ':cgeDemo'\n\ndef pFile = new File(settingsDir, 'local.properties')\nProperties properties = new Properties()\n\n/// if the local.properties file does not exist, create it.\nif (pFile.exists()) {\n    properties.load(pFile.newDataInputStream())\n}\n\nif (properties.getProperty('usingCMakeCompile', null) == null) {\n    pFile.append('\\nusingCMakeCompile=false\\n')\n}\n\nif (properties.getProperty('usingCMakeCompileDebug', null) == null) {\n    pFile.append('\\nusingCMakeCompileDebug=false\\n')\n}\n\n/// if disableVideoModule is true, the recording functions is disabled,\n/// and ffmpeg will not be used.\nif (properties.getProperty('disableVideoModule', null) == null) {\n    pFile.append('\\ndisableVideoModule=false\\n')\n}\n\nif (properties.getProperty('deployArtifacts', null) == null) {\n    pFile.append('\\ndeployArtifacts=false\\n')\n}\n\nif (properties.getProperty('enable16kPageSizes', null) == null) {\n    pFile.append('\\nenable16kPageSizes=false\\n')\n}\n\ndef homeDir = System.getenv('HOME')\ndef mavenLocalDir = \"maven_local_repo\"\n\nif (homeDir != null && !homeDir.isEmpty()) {\n    mavenLocalDir = homeDir + '/' + mavenLocalDir\n}\n\n/// if deployArtifacts is true, the deploy mode is on.\nif (properties.getProperty('localRepoDir', null) == null) {\n\n    pFile.append('\\nlocalRepoDir=' + mavenLocalDir + '\\n')\n}\n\nif (gradle.ext == null) {\n    gradle.ext = {}\n}\n\ngradle.ext.usingCMakeCompile = properties.getProperty(\"usingCMakeCompile\", \"\") == \"true\"\ngradle.ext.usingCMakeCompileDebug = properties.getProperty(\"usingCMakeCompileDebug\", \"\") == \"true\"\ngradle.ext.disableVideoModule = properties.getProperty(\"disableVideoModule\", \"\") == \"true\"\ngradle.ext.deployArtifacts = properties.getProperty(\"deployArtifacts\", \"\") == \"true\"\ngradle.ext.localRepoDir = properties.getProperty(\"localRepoDir\", mavenLocalDir)\ngradle.ext.enable16kPageSizes = properties.getProperty(\"enable16kPageSizes\", \"\") == \"true\""
        },
        {
          "name": "tasks.sh",
          "type": "blob",
          "size": 6.6923828125,
          "content": "#!/usr/bin/env bash\n\nif [[ $# -eq 0 ]]; then\n    echo \"usage: [--debug|--release] [--clean] [--enable-cmake] [--setup-project] [--build] [--run]\"\n    exit 0\nfi\n\ncd \"$(dirname \"$0\")\"\nTHIS_DIR=\"$(pwd)\"\nPROJECT_DIR=\"$THIS_DIR\"\nADB_COMMAND=\"$PROJECT_DIR/utils/adb_command.sh\"\n\nsource \"$PROJECT_DIR/utils/platform_utils.sh\"\n\nexport PACKAGE_NAME=\"org.wysaid.cgeDemo\"\nexport LAUNCH_ACTIVITY=\"MainActivity\"\nexport GRADLEW_RUN_TASK=\"installDebug\"\nexport ANDROID_BUILD_TYPE=\"assembleDebug\"\n\nfunction setupProject() {\n    if [[ -f \"$PROJECT_DIR/local.properties\" ]] && grep -E '^usingCMakeCompile=true' \"$PROJECT_DIR/local.properties\"; then\n        echo \"Using cmake, skip ndk build...\"\n    else\n        bash \"$PROJECT_DIR/library/src/main/jni/buildJNI\" || exit 1\n    fi\n}\n\nfunction runAndroidApp() {\n\n    if . \"$ADB_COMMAND\" -d shell am start -n \"$PACKAGE_NAME/$PACKAGE_NAME.$LAUNCH_ACTIVITY\"; then\n        if [[ -z \"$(ps -ef | grep -i adb | grep -v grep | grep logcat)\" ]]; then\n            . \"$ADB_COMMAND\" -d logcat -c\n            if [[ $(uname -s) == \"Linux\" ]] || [[ $(uname -s) == \"Darwin\" ]]; then\n                APP_PROC_ID=$(. \"$ADB_COMMAND\" shell ps | grep org.wysaid.cgeDemo | tr -s ' ' | cut -d' ' -f2)\n                if [[ -n \"$APP_PROC_ID\" ]]; then\n                    . \"$ADB_COMMAND\" -d logcat | grep -F \"$APP_PROC_ID\"\n                else\n                    echo \"Can not find proc id of org.wysaid.cgeDemo\"\n                fi\n            else\n                . \"$ADB_COMMAND\" -d logcat | grep -iE \"(cge|demo|wysaid| E |crash)\"\n            fi\n        fi\n    else\n        echo \"Launch $PACKAGE_NAME/$PACKAGE_NAME.$LAUNCH_ACTIVITY failed.\"\n    fi\n}\n\nfunction cleanProject() {\n    runGradleCommand clean --refresh-dependencies\n}\n\nfunction buildProject() {\n    if ! runGradleCommand -p cgeDemo \"$ANDROID_BUILD_TYPE\"; then\n\n        echo \"Failed to run: ./gradlew -p cgeDemo $ANDROID_BUILD_TYPE\"\n        echo \"Please run the following command and try again:\"\n        echo \"---\"\n        echo \"$THIS_DIR/tasks.sh --setup-project\"\n        echo \"---\"\n        exit 1\n    fi\n\n    GENERATED_APK_FILE=$(find \"$THIS_DIR/cgeDemo/build\" -iname \"*.apk\" | grep -i \"${ANDROID_BUILD_TYPE/assemble/}\")\n    echo \"apk generated at: $GENERATED_APK_FILE\"\n\n    if [[ -n \"$GRADLEW_RUN_TASK\" ]] && [[ $(. \"$ADB_COMMAND\" -d devices | grep -v 'List' | grep -vE '^$' | wc -l | tr -d ' ') -ne 0 ]]; then\n        if [[ \"$GRADLEW_RUN_TASK\" == \"installRelease\" ]]; then\n            # release can not be installed directly. do adb install.\n            . \"$ADB_COMMAND\" -d install \"$GENERATED_APK_FILE\"\n        else\n            if ! runGradleCommand -p cgeDemo \"$GRADLEW_RUN_TASK\"; then\n                echo \"Install failed.\" >&2\n            fi\n        fi\n    else\n        echo \"No device connected, skip installation.\"\n    fi\n}\n\nfunction patchAndroidSDKLocation() {\n    VAR_ENV_VALUE=$(getEnvironmentVariable $@)\n    echo VAR_ENV_VALUE=$VAR_ENV_VALUE\n    if [[ -n \"$VAR_ENV_VALUE\" ]]; then\n        VAR_ENV_VALUE=$(echo $VAR_ENV_VALUE | tr '\\\\' '/')\n        echo \"sdk.dir=$VAR_ENV_VALUE\" >>local.properties\n        return 0\n    fi\n    return 1\n}\n\nif [[ ! -f \"local.properties\" ]] && ! grep \"sdk.dir=\" local.properties &>/dev/null; then\n    if ! (patchAndroidSDKLocation ANDROID_HOME ||\n        patchAndroidSDKLocation ANDROID_SDK_ROOT); then\n        echo \"sdk.dir is missing in 'local.properties' and env var ANDROID_HOME is not defined.\" >&2\n    fi\nfi\n\nfunction changeProperty() {\n    TARGET_FILE=\"$1\"\n    MATCH_PATTERN=\"$2\"\n    SED_PATTERN=\"$3\"\n    DEFAULT_VALUE=\"$4\"\n    if [[ -f \"$TARGET_FILE\" ]] && grep -E \"$MATCH_PATTERN\" \"$TARGET_FILE\" >/dev/null; then\n        echo \"Change property in $TARGET_FILE, pattern $SED_PATTERN\"\n        # Stupid diff between the command.\n        if [[ \"$(uname -s)\" == \"Darwin\" ]]; then # Mac OS\n            sed -I \"\" -E \"$SED_PATTERN\" \"$TARGET_FILE\"\n        else\n            sed -i\"\" -E \"$SED_PATTERN\" \"$TARGET_FILE\"\n        fi\n    else\n        echo \"$DEFAULT_VALUE\" >>\"$TARGET_FILE\"\n    fi\n}\n\nwhile [[ $# > 0 ]]; do\n\n    PARSE_KEY=\"$1\"\n\n    case \"$PARSE_KEY\" in\n    --rebuild-android-demo)\n        cd \"$PROJECT_DIR\" && git clean -ffdx\n        cleanProject\n        setupProject\n        buildProject\n        shift\n        ;;\n    --release)\n        export ANDROID_BUILD_TYPE=\"assembleRelease\"\n        # ANDROID_BUILD_TYPE=\"assembleDebug\" # use this if the release apk can not be installed.\n        export GRADLEW_RUN_TASK=\"installRelease\"\n        changeProperty \"local.properties\" '^usingCMakeCompileDebug=' 's/usingCMakeCompileDebug=.*/usingCMakeCompileDebug=false/' 'usingCMakeCompileDebug=false'\n        shift\n        ;;\n    --debug)\n        export ANDROID_BUILD_TYPE=\"assembleDebug\"\n        export GRADLEW_RUN_TASK=\"installDebug\"\n        changeProperty \"local.properties\" '^usingCMakeCompileDebug=' 's/usingCMakeCompileDebug=.*/usingCMakeCompileDebug=true/' 'usingCMakeCompileDebug=true'\n        shift\n        ;;\n    --setup-project)\n        setupProject\n        runGradleCommand signingReport\n        exit 0 # setup then stop.\n        ;;\n    --clean)\n        echo \"clean\"\n        cleanProject\n        shift # past argument\n        ;;\n    --build)\n        echo \"build\"\n        setupProject\n        buildProject\n        shift # past argument\n        ;;\n    --run)\n        echo \"run android demo\"\n        runAndroidApp\n        shift # past argument\n        ;;\n    --enable-cmake)\n        changeProperty \"local.properties\" '^usingCMakeCompile=' 's/usingCMakeCompile=.*/usingCMakeCompile=true/' 'usingCMakeCompile=true'\n        shift # past argument\n        ;;\n    --enable-video-module)\n        changeProperty \"local.properties\" '^disableVideoModule=' 's/disableVideoModule=.*/disableVideoModule=false/' 'disableVideoModule=false'\n        shift # past argument\n        ;;\n    --disable-video-module)\n        changeProperty \"local.properties\" '^disableVideoModule=' 's/disableVideoModule=.*/disableVideoModule=true/' 'disableVideoModule=true'\n        shift # past argument\n        ;;\n    --publish)\n        echo \"publish\"\n        git clean -fdx library\n        changeProperty \"local.properties\" '^usingCMakeCompileDebug=' 's/usingCMakeCompileDebug=.*/usingCMakeCompileDebug=false/' 'usingCMakeCompileDebug=false'\n        changeProperty \"local.properties\" '^deployArtifacts=' 's/deployArtifacts=.*/deployArtifacts=true/' 'disableVideoModule=true'\n        ./gradlew assembleRelease publish\n        shift\n        ;;\n    *)\n        echo \"Invalid argument $PARSE_KEY...\"\n        exit 1\n        ;;\n\n    esac\n\ndone\n\n# if [[ -z \"$SKIP_GRADLEW_TASKS\" ]]; then\n\n#     if [[ -n \"$CLEAN_GRADLEW_TASKS\" ]]; then\n#         ./gradlew clean\n#     fi\n\n#     buildProject\n# fi\n\n# if [[ -n \"$GRADLEW_RUN_TASK\" ]] || [[ -n $SKIP_GRADLEW_TASKS ]]; then\n#     runAndroidApp\n# else\n#     echo \"apk generated at:\"\n#     find \"$THIS_DIR/cgeDemo/build\" -iname \"*.apk\"\n# fi\n"
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}