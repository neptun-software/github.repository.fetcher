{
  "metadata": {
    "timestamp": 1736709669618,
    "page": 26,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "lxc/lxc",
      "stars": 4736,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.076171875,
          "content": "# Temporarily files.\n*~\n*.swp\n*.orig\n*.rej\n\n# Release tarballs.\nlxc-*.tar.gz*\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.1162109375,
          "content": "The list of authors and contributors can be retrieved from the git\ncommit history and in some cases, the file headers.\n"
        },
        {
          "name": "CODING_STYLE.md",
          "type": "blob",
          "size": 26.7939453125,
          "content": "LXC Coding Style Guide\n======================\n\nIn general the LXC project follows the Linux kernel coding style.  However,\nthere are a few differences. They are outlined in this document.\n\nThe Linux kernel coding style guide can be found within the kernel tree:\n\n\tDocumentation/process/coding-style.rst\n\nIt can be accessed online too:\n\nhttps://www.kernel.org/doc/html/latest/process/coding-style.html\n\n## 1) General Notes\n\n- The coding style guide refers to new code. But legacy code can be cleaned up\n  and we are happy to take those patches.\n- Just because there is still code in LXC that doesn't adhere to the coding\n  standards outlined here does not license not adhering to the coding style. In\n  other words: please stick to the coding style.\n- Maintainers are free to ignore rules specified here when merging pull\n  requests. This guideline might seem a little weird but it exits to ease new\n  developers into the code base and to prevent unnecessary bikeshedding. If\n  a maintainer feels hat enforcing a specific rule in a given commit would do\n  more harm than good they should always feel free to ignore the rule.\n\n  Furthermore, when merging pull requests that do not adhere to our coding\n  style maintainers should feel free to grab the commit, adapt it to our coding\n  style and add their Signed-off-by line to it. This is especially helpful to\n  make it easier for first-time contributors and to prevent having pull\n  requests being stuck in the merge queue because of minor details.\n- We currently do not provide automatic coding style checks but if a suitable\n  tool is found we are happy to integrate it into our test suite. It is\n  possible and recommended to use the `clang-format` binary to check your code.\n  The following options are an approximation of the coding style used here.\n  Simply create a file called `.clang-format` in your home directory with the\n  following options:\n  ```sh\n  cat << EOF > \"${HOME}\"/.clang-format\n  AlignEscapedNewlines: Left\n  BreakBeforeBraces: Attach\n  AlwaysBreakBeforeMultilineStrings: false\n  BreakBeforeBinaryOperators: None\n  MaxEmptyLinesToKeep: 1\n  PenaltyBreakBeforeFirstCallParameter: 1000000\n  BinPackArguments: true\n  BinPackParameters: true\n  AllowAllParametersOfDeclarationOnNextLine: false\n  AlignAfterOpenBracket: true\n  SpacesInSquareBrackets: false\n  SpacesInCStyleCastParentheses: false\n  SpaceInEmptyParentheses: false\n  SpaceBeforeParens: ControlStatements\n  SpaceAfterCStyleCast: false\n  SortIncludes: true\n  PenaltyReturnTypeOnItsOwnLine: 10000\n  PenaltyExcessCharacter: 10\n  Language: Cpp\n  ForEachMacros: ['lxc_list_for_each', 'lxc_list_for_each_safe']\n  AllowShortLoopsOnASingleLine: false\n  AllowShortIfStatementsOnASingleLine: false\n  AllowShortFunctionsOnASingleLine: None\n  AllowShortCaseLabelsOnASingleLine: false\n  AllowShortBlocksOnASingleLine: false\n  BasedOnStyle: LLVM\n  TabWidth: 8\n  IndentWidth: 8\n  UseTab: Always\n  BreakBeforeBraces: Linux\n  AllowShortIfStatementsOnASingleLine: false\n  IndentCaseLabels: false\n  EOF\n  ```\n  However, it will not handle all cases correctly. For example, most `struct`\n  initializations will not be correct. In such cases please refer to the coding\n  style here.\n\n## 2) Only Use Tabs\n\n- LXC uses tabs.\n\n## 3) Only use `/* */` Style Comments\n\n- Any comments that are added must use `/* */`.\n- Single-line comments should start on the same line as the opening `/*`.\n- Single-line comments should simply be placed between `/* */`. For example:\n  ```C\n  /* Define pivot_root() if missing from the C library */\n  ```\n- Mutli-line comment should start on the next line following the opening\n  `/*`and should end with the closing `*/` on a separate line. For\n  example:\n  ```C\n  /*\n   * At this point the old-root is mounted on top of our new-root\n   * To unmounted it we must not be chdir()ed into it, so escape back\n   * to old-root.\n   */\n  ```\n\n## 4) Try To Wrap At 80chars\n\n- This is not strictly enforced. It is perfectly valid to sometimes\n  overflow this limit if it helps clarity. Nonetheless, try to stick to it\n  and use common sense to decide when not to.\n\n## 5) Error Messages\n\n- Error messages must start with a capital letter and must **not** end with a\n  punctuation sign.\n- They should be descriptive, without being needlessly long. It is best to just\n  use already existing error messages as examples.\n- The commit message itself is not subject to rule 4), i.e. it should not be\n  wrapped at 80chars. This is to make it easy to grep for it.\n- Examples of acceptable error messages are:\n  ```C\n  SYSERROR(\"Failed to create directory \\\"%s\\\"\", path);\n  WARN(\"\\\"/dev\\\" directory does not exist. Proceeding without autodev being set up\");\n  ```\n\n## 6) Set `errno`\n\n- Functions that can fail in a non-binary way should return `-1` and set\n  `errno` to a meaningful error code.\n  As a convenience LXC provides the `minus_one_set_errno` macro:\n  ```C\n  static int set_config_net_l2proxy(const char *key, const char *value,\n                                    struct lxc_conf *lxc_conf, void *data)\n  {\n          struct lxc_netdev *netdev = data;\n          unsigned int val = 0;\n          int ret;\n\n          if (lxc_config_value_empty(value))\n                  return clr_config_net_l2proxy(key, lxc_conf, data);\n\n          if (!netdev)\n                  return minus_one_set_errno(EINVAL);\n\n          ret = lxc_safe_uint(value, &val);\n          if (ret < 0)\n                  return minus_one_set_errno(-ret);\n\n          switch (val) {\n          case 0:\n                  netdev->l2proxy = false;\n                  return 0;\n          case 1:\n                  netdev->l2proxy = true;\n                  return 0;\n          }\n\n          return minus_one_set_errno(EINVAL);\n  }\n  ```\n\n## 7) All Unexported Functions Must Be Declared `static`\n\n- Functions which are only used in the current file and are not exported\n  within the codebase need to be declared with the `static` attribute.\n\n## 8) All Exported Functions Must Be Declared `extern` In A Header File\n\n- Functions declared in header files (`*.h`) should use the `extern` keyword.\n- Functions declared in source files (`*.c`) should not use the `extern` keyword.\n\n## 9) Declaring Variables\n\n- variables should be declared at the top of the function or at the beginning\n  of a new scope but **never** in the middle of a scope. They should be ordered\n  in the following way:\n1. automatically freed variables\n   - This specifically references variables cleaned up via the `cleanup`\n     attribute as supported by `gcc` and `clang`.\n2. initialized variables\n3. uninitialized variables\nGeneral rules are:\n- put base types before complex types\n- put standard types defined by libc before types defined by LXC\n- put multiple declarations of the same type on the same line\n- Examples of good declarations can be seen in the following function:\n  ```C\n  int lxc_clear_procs(struct lxc_conf *c, const char *key)\n  {\n          struct lxc_list *it, *next;\n          bool all = false;\n          const char *k = NULL;\n\n          if (strcmp(key, \"lxc.proc\") == 0)\n                  all = true;\n          else if (strncmp(key, \"lxc.proc.\", sizeof(\"lxc.proc.\") - 1) == 0)\n                  k = key + sizeof(\"lxc.proc.\") - 1;\n          else\n                  return -1;\n\n          lxc_list_for_each_safe(it, &c->procs, next) {\n                  struct lxc_proc *proc = it->elem;\n\n                  if (!all && strcmp(proc->filename, k) != 0)\n                          continue;\n                  lxc_list_del(it);\n                  free(proc->filename);\n                  free(proc->value);\n                  free(proc);\n                  free(it);\n          }\n\n          return 0;\n  }\n    ```\n\n## 10) Functions Not Returning Booleans Must Assign Return Value Before Performing Checks\n\n- When checking whether a function not returning booleans was successful or not\n  the returned value must be assigned before it is checked (`str{n}cmp()`\n  functions being one notable exception). For example:\n  ```C\n  /* assign value to \"ret\" first */\n  ret = mount(sourcepath, cgpath, \"cgroup\", remount_flags, NULL);\n  /* check whether function was successful */\n  if (ret < 0) {\n          SYSERROR(\"Failed to remount \\\"%s\\\" ro\", cgpath);\n          free(sourcepath);\n          return -1;\n  }\n  ```\n  Functions returning booleans can be checked directly. For example:\n  ```C\n  extern bool lxc_string_in_array(const char *needle, const char **haystack);\n\n  /* check right away */\n  if (lxc_string_in_array(\"ns\", (const char **)h->subsystems))\n          continue;\n  ```\n\n## 11) Non-Boolean Functions That Behave Like Boolean Functions Must Explicitly Check Against A Value\n\n- This rule mainly exists for `str{n}cmp()` type functions. In most cases they\n  are used like a boolean function to check whether a string matches or not.\n  But they return an integer. It is perfectly fine to check `str{n}cmp()`\n  functions directly but you must compare explicitly against a value. That is\n  to say, while they are conceptually boolean functions they shouldn't be\n  treated as such since they don't really behave like boolean functions. So\n  `if (!str{n}cmp())` and `if (str{n}cmp())` checks must not be used. Good\n  examples are found in the following functions:\n  ```C\n  static int set_config_hooks(const char *key, const char *value,\n                              struct lxc_conf *lxc_conf, void *data)\n\n          char *copy;\n\n          if (lxc_config_value_empty(value))\n                  return lxc_clear_hooks(lxc_conf, key);\n\n          if (strcmp(key + 4, \"hook\") == 0) {\n                  ERROR(\"lxc.hook must not have a value\");\n                  return -1;\n          }\n\n          copy = strdup(value);\n          if (!copy)\n                  return -1;\n\n          if (strcmp(key + 9, \"pre-start\") == 0)\n                  return add_hook(lxc_conf, LXCHOOK_PRESTART, copy);\n          else if (strcmp(key + 9, \"start-host\") == 0)\n                  return add_hook(lxc_conf, LXCHOOK_START_HOST, copy);\n          else if (strcmp(key + 9, \"pre-mount\") == 0)\n                  return add_hook(lxc_conf, LXCHOOK_PREMOUNT, copy);\n          else if (strcmp(key + 9, \"autodev\") == 0)\n                  return add_hook(lxc_conf, LXCHOOK_AUTODEV, copy);\n          else if (strcmp(key + 9, \"mount\") == 0)\n                  return add_hook(lxc_conf, LXCHOOK_MOUNT, copy);\n          else if (strcmp(key + 9, \"start\") == 0)\n                  return add_hook(lxc_conf, LXCHOOK_START, copy);\n          else if (strcmp(key + 9, \"stop\") == 0)\n                  return add_hook(lxc_conf, LXCHOOK_STOP, copy);\n          else if (strcmp(key + 9, \"post-stop\") == 0)\n                  return add_hook(lxc_conf, LXCHOOK_POSTSTOP, copy);\n          else if (strcmp(key + 9, \"clone\") == 0)\n                  return add_hook(lxc_conf, LXCHOOK_CLONE, copy);\n          else if (strcmp(key + 9, \"destroy\") == 0)\n                  return add_hook(lxc_conf, LXCHOOK_DESTROY, copy);\n\n          free(copy);\n          return -1;\n  }\n  ```\n\n## 12) Do Not Use C99 Variable Length Arrays (VLA)\n\n- They are made optional and there is no guarantee that future C standards\n  will support them.\n\n## 13) Use Standard libc Macros When Exiting\n\n- libc provides `EXIT_FAILURE` and `EXIT_SUCCESS`. Use them whenever possible\n  in the child of `fork()`ed process or when exiting from a `main()` function.\n\n## 14) Use `goto`s\n\n`goto`s are an essential language construct of C and are perfect to perform\ncleanup operations or simplify the logic of functions. However, here are the\nrules to use them:\n- use descriptive `goto` labels.\n  For example, if you know that this label is only used as an error path you\n  should use something like `on_error` instead of `out` as label name.\n- **only** jump downwards unless you are handling `EAGAIN` errors and want to\n  avoid `do-while` constructs.\n- An example of a good usage of `goto` is:\n  ```C\n  static int set_config_idmaps(const char *key, const char *value,\n                             struct lxc_conf *lxc_conf, void *data)\n  {\n          unsigned long hostid, nsid, range;\n          char type;\n          int ret;\n          struct lxc_list *idmaplist = NULL;\n          struct id_map *idmap = NULL;\n\n          if (lxc_config_value_empty(value))\n                  return lxc_clear_idmaps(lxc_conf);\n\n          idmaplist = malloc(sizeof(*idmaplist));\n          if (!idmaplist)\n                  goto on_error;\n\n          idmap = malloc(sizeof(*idmap));\n          if (!idmap)\n                  goto on_error;\n          memset(idmap, 0, sizeof(*idmap));\n\n          ret = parse_idmaps(value, &type, &nsid, &hostid, &range);\n          if (ret < 0) {\n                  ERROR(\"Failed to parse id mappings\");\n                  goto on_error;\n          }\n\n          INFO(\"Read uid map: type %c nsid %lu hostid %lu range %lu\", type, nsid, hostid, range);\n          if (type == 'u')\n                  idmap->idtype = ID_TYPE_UID;\n          else if (type == 'g')\n                  idmap->idtype = ID_TYPE_GID;\n          else\n                  goto on_error;\n\n          idmap->hostid = hostid;\n          idmap->nsid = nsid;\n          idmap->range = range;\n          idmaplist->elem = idmap;\n          lxc_list_add_tail(&lxc_conf->id_map, idmaplist);\n\n          if (!lxc_conf->root_nsuid_map && idmap->idtype == ID_TYPE_UID)\n                  if (idmap->nsid == 0)\n                          lxc_conf->root_nsuid_map = idmap;\n\n\n          if (!lxc_conf->root_nsgid_map && idmap->idtype == ID_TYPE_GID)\n                  if (idmap->nsid == 0)\n                          lxc_conf->root_nsgid_map = idmap;\n\n          idmap = NULL;\n\n          return 0;\n\n  on_error:\n          free(idmaplist);\n          free(idmap);\n\n          return -1;\n  }\n  ```\n\n## 15) Use Booleans instead of integers\n\n- When something can be conceptualized in a binary way use a boolean not\n  an integer.\n\n## 16) Cleanup Functions Must Handle The Object's Null Type And Being Passed Already Cleaned Up Objects\n\n- If you implement a custom cleanup function to e.g. free a complex type\n  you declared you must ensure that the object's null type is handled and\n  treated as a NOOP. For example:\n  ```C\n  void lxc_free_array(void **array, lxc_free_fn element_free_fn)\n  {\n          void **p;\n          for (p = array; p && *p; p++)\n                  element_free_fn(*p);\n          free((void*)array);\n  }\n  ```\n- Cleanup functions should also expect to be passed already cleaned up objects.\n  One way to handle this cleanly is to initialize the cleaned up variable to\n  a special value that signals the function that the element has already been\n  freed on the next call. For example, the following function cleans up file\n  descriptors and sets the already closed file descriptors to `-EBADF`. On the\n  next call it can simply check whether the file descriptor is positive and\n  move on if it isn't:\n  ```C\n  static void lxc_put_attach_clone_payload(struct attach_clone_payload *p)\n  {\n          if (p->ipc_socket >= 0) {\n                  shutdown(p->ipc_socket, SHUT_RDWR);\n                  close(p->ipc_socket);\n                  p->ipc_socket = -EBADF;\n          }\n\n          if (p->pty_fd >= 0) {\n                  close(p->pty_fd);\n                  p->pty_fd = -EBADF;\n          }\n\n          if (p->init_ctx) {\n                  lxc_proc_put_context_info(p->init_ctx);\n                  p->init_ctx = NULL;\n          }\n  }\n  ```\n\n## 17) Cast to `(void)` When Intentionally Ignoring Return Values\n\n- There are cases where you do not care about the return value of a function.\n  Please cast the return value to `(void)` when doing so.\n- Standard library functions or functions which are known to be ignored by\n  default do not need to be cast to `(void)`. Classical candidates are\n  `close()` and `fclose()`.\n- A good example is:\n  ```C\n  for (i = 0; hierarchies[i]; i++) {\n          char *fullpath;\n          char *path = hierarchies[i]->fullcgpath;\n\n          ret = chowmod(path, destuid, nsgid, 0755);\n          if (ret < 0)\n                  return -1;\n\n          /* failures to chown() these are inconvenient but not\n           * detrimental we leave these owned by the container launcher,\n           * so that container root can write to the files to attach.  we\n           * chmod() them 664 so that container systemd can write to the\n           * files (which systemd in wily insists on doing).\n           */\n\n          if (hierarchies[i]->version == cgroup_super_magic) {\n                  fullpath = must_make_path(path, \"tasks\", null);\n                  (void)chowmod(fullpath, destuid, nsgid, 0664);\n                  free(fullpath);\n          }\n\n          fullpath = must_make_path(path, \"cgroup.procs\", null);\n          (void)chowmod(fullpath, destuid, 0, 0664);\n          free(fullpath);\n\n          if (hierarchies[i]->version != cgroup2_super_magic)\n                  continue;\n\n          fullpath = must_make_path(path, \"cgroup.subtree_control\", null);\n          (void)chowmod(fullpath, destuid, nsgid, 0664);\n          free(fullpath);\n\n          fullpath = must_make_path(path, \"cgroup.threads\", null);\n          (void)chowmod(fullpath, destuid, nsgid, 0664);\n          free(fullpath);\n  }\n  ```\n\n## 18) Use `for (;;)` instead of `while (1)` or `while (true)`\n\n- Let's be honest, it is really the only sensible way to do this.\n\n## 19) Use The Set Of Supported DCO Statements\n\n- Signed-off-by: Random J Developer <random@developer.org>\n  - You did write this code or have the right to contribute it to LXC.\n- Acked-by: Random J Developer <random@developer.org>\n  - You did read the code and think it is correct. This is usually only used by\n    maintainers or developers that have made significant contributions and can\n    vouch for the correctness of someone else's code.\n- Reviewed-by: Random J Developer <random@developer.org>\n  - You did review the code and vouch for its correctness, i.e. you'd be\n    prepared to fix bugs it might cause. This is usually only used by\n    maintainers or developers that have made significant contributions and can\n    vouch for the correctness of someone else's code.\n- Co-developed-by: Random J Developer <random@developer.org>\n  - The code can not be reasonably attributed to a single developer, i.e.\n    you worked on this together.\n- Tested-by: Random J Developer <random@developer.org>\n  - You verified that the code fixes a given bug or is behaving as advertised.\n- Reported-by: Random J Developer <random@developer.org>\n  - You found and reported the bug.\n- Suggested-by: Random J Developer <random@developer.org>\n  - You wrote the code but someone contributed the idea. This line is usually\n    overlooked but it is a sign of good etiquette and coding ethics: if someone\n    helped you solve a problem or had a clever idea do not silently claim it by\n    slapping your Signed-off-by underneath. Be honest and add a Suggested-by.\n\n## 20) Commit Message Outline\n\n- You **must** stick to the 80chars limit especially in the title of the commit\n  message.\n- Please use English commit messages only.\n- use meaningful commit messages.\n- Use correct spelling and grammar.\n  If you are not a native speaker and/or feel yourself struggling with this it\n  is perfectly fine to point this out and there's no need to apologize. Usually\n  developers will be happy to pull your branch and adopt the commit message.\n- Please always use the affected file (without the file type suffix) or module\n  as a prefix in the commit message.\n- Examples of good commit messages are:\n  ```Diff\n  commit b87243830e3b5e95fa31a17cf1bfebe55353bf13\n  Author: Felix Abecassis <fabecassis@nvidia.com>\n  Date:   Fri Feb 2 06:19:13 2018 -0800\n\n      hooks: change the semantic of NVIDIA_VISIBLE_DEVICES=\"\"\n\n      With LXC, you can override the value of an environment variable to\n      null, but you can't unset an existing variable.\n\n      The NVIDIA hook was previously activated when NVIDIA_VISIBLE_DEVICES\n      was set to null. As a result, it was not possible to disable the hook\n      by overriding the environment variable in the configuration.\n\n      The hook can now be disabled by setting NVIDIA_VISIBLE_DEVICES to\n      null or to the new special value \"void\".\n\n      Signed-off-by: Felix Abecassis <fabecassis@nvidia.com>\n\n\n  commit d6337a5f9dc7311af168aa3d586fdf239f5a10d3\n  Author: Christian Brauner <christian.brauner@ubuntu.com>\n  Date:   Wed Jan 31 16:25:11 2018 +0100\n\n      cgroups: get controllers on the unified hierarchy\n\n      Signed-off-by: Christian Brauner <christian.brauner@ubuntu.com>\n\n  ```\n## 21) Use `_exit()` To Terminate `fork()`ed Child Processes\n\n- When `fork()`ing off a child process use `_exit()` to terminate it instead of\n  `exit()`. The `exit()` function is not thread-safe and thus not suited for\n  the shared library which must ensure that it is thread-safe.\n\n## 22) Keep Arrays of `struct`s Aligned Horizontally When Initializing\n\n- Arrays of `struct`s are:\n  ```C\n  struct foo_struct {\n        int n;\n        int m;\n        int p;\n  };\n\n  struct foo_struct new_instance[] = {\n          { 1, 2, 3 },\n          { 4, 5, 6 },\n          { 7, 8, 9 },\n  };\n  ```\n- Leave a single space after the opening `{` and before closing `}` of the\n  largest member of the last column.\n- Always leave a single space between the largest member of the current column\n  and the member in the next column.\n- A good example is\n  ```C\n  struct signame {\n          int num;\n          const char *name;\n  };\n\n  static const struct signame signames[] = {\n          { SIGHUP,    \"HUP\"    },\n          { SIGINT,    \"INT\"    },\n          { SIGQUIT,   \"QUIT\"   },\n          { SIGILL,    \"ILL\"    },\n          { SIGABRT,   \"ABRT\"   },\n          { SIGFPE,    \"FPE\"    },\n          { SIGKILL,   \"KILL\"   },\n          { SIGSEGV,   \"SEGV\"   },\n          { SIGPIPE,   \"PIPE\"   },\n          { SIGALRM,   \"ALRM\"   },\n          { SIGTERM,   \"TERM\"   },\n          { SIGUSR1,   \"USR1\"   },\n          { SIGUSR2,   \"USR2\"   },\n          { SIGCHLD,   \"CHLD\"   },\n          { SIGCONT,   \"CONT\"   },\n          { SIGSTOP,   \"STOP\"   },\n          { SIGTSTP,   \"TSTP\"   },\n          { SIGTTIN,   \"TTIN\"   },\n          { SIGTTOU,   \"TTOU\"   },\n  #ifdef SIGTRAP\n          { SIGTRAP,   \"TRAP\"   },\n  #endif\n  #ifdef SIGIOT\n          { SIGIOT,    \"IOT\"    },\n  #endif\n  #ifdef SIGEMT\n          { SIGEMT,    \"EMT\"    },\n  #endif\n  #ifdef SIGBUS\n          { SIGBUS,    \"BUS\"    },\n  #endif\n  #ifdef SIGSTKFLT\n          { SIGSTKFLT, \"STKFLT\" },\n  #endif\n  #ifdef SIGCLD\n          { SIGCLD,    \"CLD\"    },\n  #endif\n  #ifdef SIGURG\n          { SIGURG,    \"URG\"    },\n  #endif\n  #ifdef SIGXCPU\n          { SIGXCPU,   \"XCPU\"   },\n  #endif\n  #ifdef SIGXFSZ\n          { SIGXFSZ,   \"XFSZ\"   },\n  #endif\n  #ifdef SIGVTALRM\n          { SIGVTALRM, \"VTALRM\" },\n  #endif\n  #ifdef SIGPROF\n          { SIGPROF,   \"PROF\"   },\n  #endif\n  #ifdef SIGWINCH\n          { SIGWINCH,  \"WINCH\"  },\n  #endif\n  #ifdef SIGIO\n          { SIGIO,     \"IO\"     },\n  #endif\n  #ifdef SIGPOLL\n          { SIGPOLL,   \"POLL\"   },\n  #endif\n  #ifdef SIGINFO\n          { SIGINFO,   \"INFO\"   },\n  #endif\n  #ifdef SIGLOST\n          { SIGLOST,   \"LOST\"   },\n  #endif\n  #ifdef SIGPWR\n          { SIGPWR,    \"PWR\"    },\n  #endif\n  #ifdef SIGUNUSED\n          { SIGUNUSED, \"UNUSED\" },\n  #endif\n  #ifdef SIGSYS\n          { SIGSYS,    \"SYS\"    },\n  #endif\n  };\n  ```\n\n## 23) Use `strlcpy()` instead of `strncpy()`\n\nWhen copying strings always use `strlcpy()` instead of `strncpy()`. The\nadvantage of `strlcpy()` is that it will always append a `\\0` byte to the\nstring.\n\nUnless you have a valid reason to accept truncation you must check whether\ntruncation has occurred, treat it as an error, and handle the error\nappropriately.\n\n## 24) Use `strlcat()` instead of `strncat()`\n\nWhen concatenating strings always use `strlcat()` instead of `strncat()`. The\nadvantage of `strlcat()` is that it will always append a `\\0` byte to the\nstring.\n\nUnless you have a valid reason to accept truncation you must check whether\ntruncation has occurred, treat it as an error, and handle the error\nappropriately.\n\n## 25) Use `__fallthrough__` in switch statements\n\nIf LXC detects that the compiler is new enough it will tell it to check\n`switch` statements for non-documented fallthroughs. Please always place\na `__fallthrough__` after a `case` which falls through the next one.\n\n```c\nint lxc_attach_run_command(void *payload)\n{\n\tint ret = -1;\n\tlxc_attach_command_t *cmd = payload;\n\n\tret = execvp(cmd->program, cmd->argv);\n\tif (ret < 0) {\n\t\tswitch (errno) {\n\t\tcase ENOEXEC:\n\t\t\tret = 126;\n\t\t\tbreak;\n\t\tcase ENOTDIR:\n\t\t\t__fallthrough;\n\t\tcase ENOENT:\n\t\t\tret = 127;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tSYSERROR(\"Failed to exec \\\"%s\\\"\", cmd->program);\n\treturn ret;\n}\n```\n\n## 24) Never use `fgets()`\n\nLXC does not allow the use of `fgets()`. Use `getline()` or other methods\ninstead.\n\n## 25) Never allocate memory on the stack\n\nThis specifically forbids any usage of `alloca()` in the codebase.\n\n## 26) Use cleanup macros supported by `gcc` and `clang`\n\nLXC has switched from manually cleaning up resources to using cleanup macros\nsupported by `gcc` and `clang`:\n```c\n__attribute__((__cleanup__(<my-cleanup-function-wrapper>)))\n```\nWe do not allow manually cleanups anymore if there are appropriate macros.\nCurrently the following macros are supported:\n```c\n/* close file descriptor */\n__do_close_prot_errno\n\n/* free allocated memory */\n__do_free __attribute__((__cleanup__(__auto_free__)))\n\n/* close FILEs */\n__do_fclose __attribute__((__cleanup__(__auto_fclose__)))\n\n/* close DIRs */\n__do_closedir __attribute__((__cleanup__(__auto_closedir__)))\n```\nFor example:\n```c\nvoid turn_into_dependent_mounts(void)\n{\n\t__do_free char *line = NULL;\n\t__do_fclose FILE *f = NULL;\n\t__do_close int memfd = -EBADF, mntinfo_fd = -EBADF;\n\tint ret;\n\tssize_t copied;\n\tsize_t len = 0;\n\n\tmntinfo_fd = open(\"/proc/self/mountinfo\", O_RDONLY | O_CLOEXEC);\n\tif (mntinfo_fd < 0) {\n\t\tSYSERROR(\"Failed to open \\\"/proc/self/mountinfo\\\"\");\n\t\treturn;\n\t}\n\n\tmemfd = memfd_create(\".lxc_mountinfo\", MFD_CLOEXEC);\n\tif (memfd < 0) {\n\t\tchar template[] = P_tmpdir \"/.lxc_mountinfo_XXXXXX\";\n\n\t\tif (errno != ENOSYS) {\n\t\t\tSYSERROR(\"Failed to create temporary in-memory file\");\n\t\t\treturn;\n\t\t}\n\n\t\tmemfd = lxc_make_tmpfile(template, true);\n\t\tif (memfd < 0) {\n\t\t\tWARN(\"Failed to create temporary file\");\n\t\t\treturn;\n\t\t}\n\t}\n\nagain:\n\tcopied = lxc_sendfile_nointr(memfd, mntinfo_fd, NULL, LXC_SENDFILE_MAX);\n\tif (copied < 0) {\n\t\tif (errno == EINTR)\n\t\t\tgoto again;\n\n\t\tSYSERROR(\"Failed to copy \\\"/proc/self/mountinfo\\\"\");\n\t\treturn;\n\t}\n\n\tret = lseek(memfd, 0, SEEK_SET);\n\tif (ret < 0) {\n\t\tSYSERROR(\"Failed to reset file descriptor offset\");\n\t\treturn;\n\t}\n\n\tf = fdopen(memfd, \"re\");\n\tif (!f) {\n\t\tSYSERROR(\"Failed to open copy of \\\"/proc/self/mountinfo\\\" to mark all shared. Continuing\");\n\t\treturn;\n\t}\n\n\t/*\n\t * After a successful fdopen() memfd will be closed when calling\n\t * fclose(f). Calling close(memfd) afterwards is undefined.\n\t */\n\tmove_fd(memfd);\n\n\twhile (getline(&line, &len, f) != -1) {\n\t\tchar *opts, *target;\n\n\t\ttarget = get_field(line, 4);\n\t\tif (!target)\n\t\t\tcontinue;\n\n\t\topts = get_field(target, 2);\n\t\tif (!opts)\n\t\t\tcontinue;\n\n\t\tnull_endofword(opts);\n\t\tif (!strstr(opts, \"shared\"))\n\t\t\tcontinue;\n\n\t\tnull_endofword(target);\n\t\tret = mount(NULL, target, NULL, MS_SLAVE, NULL);\n\t\tif (ret < 0) {\n\t\t\tSYSERROR(\"Failed to recursively turn old root mount tree into dependent mount. Continuing...\");\n\t\t\tcontinue;\n\t\t}\n\t\tTRACE(\"Recursively turned old root mount tree into dependent mount\");\n\t}\n\tTRACE(\"Turned all mount table entries into dependent mount\");\n}\n```\n"
        },
        {
          "name": "CONTRIBUTING",
          "type": "blob",
          "size": 4.544921875,
          "content": "Contributing to this project\n----------------------------\n\nThis project accepts contributions. In order to contribute, you should\npay attention to a few things:\n\n    1 - your code must follow the coding style rules\n    2 - the format of the submission must be GitHub pull requests\n    3 - your work must be signed\n\n\nCoding Style:\n-------------\n\nThe LXC project generally follows the Linux kernel coding style.  However there\nare a few differences, these are outlined it CODING_STLYE.md\n\nThe Linux kernel coding style guide can be found within the kernel tree:\n\n\tDocumentation/process/coding-style.rst\n\nIt can be accessed online too:\n\nhttps://www.kernel.org/doc/html/latest/process/coding-style.html\n\nSubmitting Modifications:\n-------------------------\n\nThe contributions must be GitHub pull requests.\n\nLicensing for new files:\n------------------------\n\nLXC is made of files shipped under a few different licenses.\n\nAnything that ends up being part of the LXC library needs to be released\nunder LGPLv2.1+ or a license compatible with it (though the latter will\nonly be accepted for cases where the code originated elsewhere and was\nimported into LXC).\n\nLanguage bindings for the libraries need to be released under LGPLv2.1+.\n\nAnything else (non-libraries) needs to be Free Software and needs to be\nallowed to link with LGPLv2.1+ code (if needed). LXC upstream prefers\nLGPLv2.1+ or GPLv2 for those.\n\nWhen introducing a new file into the project, please make sure it has a\ncopyright header making clear under which license it's being released\nand if it doesn't match the criteria described above, please explain\nyour decision on the lxc-devel mailing-list when submitting your patch.\n\nDeveloper Certificate of Origin:\n--------------------------------\n\nTo improve tracking of contributions to this project we will use a\nprocess modeled on the modified DCO 1.1 and use a \"sign-off\" procedure.\n\nThe sign-off is a simple line at the end of the explanation for the\npatch, which certifies that you wrote it or otherwise have the right\nto pass it on as an open-source patch.  The rules are pretty simple:\nif you can certify the below:\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I have\n    the right to submit it under the open source license indicated in\n    the file; or\n\n(b) The contribution is based upon previous work that, to the best of\n    my knowledge, is covered under an appropriate open source License\n    and I have the right under that license to submit that work with\n    modifications, whether created in whole or in part by me, under\n    the same open source license (unless I am permitted to submit\n    under a different license), as indicated in the file; or\n\n(c) The contribution was provided directly to me by some other person\n    who certified (a), (b) or (c) and I have not modified it.\n\n(d) The contribution is made free of any other party's intellectual\n    property claims or rights.\n\n(e) I understand and agree that this project and the contribution are\n    public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n\n\nthen you just add a line saying\n\n    Signed-off-by: Random J Developer <random@developer.org>\n\nYou can do it by using option -s or --signoff when you commit\n\n    git commit --signoff ...\n\nusing your real name (sorry, no pseudonyms or anonymous contributions.)\n\nIn addition we support the following DCOs which maintainers can use to indicate\nthat a patch is acceptable:\n\n    Acked-by: Random J Developer <random@developer.org>\n    Reviewed-by: Random J Developer <random@developer.org>\n\nIf you are contributing as a group who is implementing a feature together such\nthat it cannot be reasonably attributed to a single developer please use:\n\n    Co-developed-by: Random J Developer 1 <random_1@developer.org>\n    Co-developed-by: Random J Developer 2 <random_1@developer.org>\n\nAI Generated Code:\n------------------\n\nSubstantially AI generated code is not welcome.  There are several\nreasons for this.  First, it violates the \"The contribution was created\nin whole or in part by me\" statement of DCO.  Second, the licensing\nimplications are not yet clear.  Thirdly, we expect anyone who submits\ncode to fully understand what they are submitting.  Finally, we put\na lot of time into reviewing patch submissions.  Increasing the\nvolume of code to be reviewed with autogenerated boilerplate drivel\nwill take away time from more important reviews.\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 0.2705078125,
          "content": "All source files have SPDX headers that declare what license applies.\nThe applicable licenses are included in the code repository.\n\nFor other files such as examples, config files, ... they can be assumed\nto be licensed the same way that the LXC library is, so under LGPLv2.1+.\n"
        },
        {
          "name": "LICENSE.GPL2",
          "type": "blob",
          "size": 17.5654296875,
          "content": "\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\n\t    How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "LICENSE.LGPL2.1",
          "type": "blob",
          "size": 25.908203125,
          "content": "                  GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\f\n                  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\f\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\f\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\f\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\f\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n                            NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\f\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n"
        },
        {
          "name": "MAINTAINERS",
          "type": "blob",
          "size": 0.556640625,
          "content": "Before submitting your patches, check they are signed-off-by\nconforming with the DCO contained in the ./CONTRIBUTING file.\n\nMaintainer\n----------\n\nCommitters              : Serge Hallyn, Stéphane Graber, Christian Brauner and Wolfgang Bumiller\nMail patches to         : lxc-devel@lists.linuxcontainers.org\nSend pull requests at   : https://github.com/lxc/lxc\nMailing lists           : lxc-devel@lists.linuxcontainers.org, lxc-users@lists.linuxcontainers.org\nWeb page                : https://linuxcontainers.org/lxc\nGit location            : https://github.com/lxc/lxc\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.29296875,
          "content": "# SPDX-License-Identifier: LGPL-2.1+\n\n.PHONY: all\nall: meson\n\tninja -C build\n\n.PHONY: meson\nmeson:\n\t[ -d build ] || meson setup build/\n\n.PHONY: dist\ndist: meson\n\tmeson dist -C build/ --formats=gztar\n\tcp build/meson-dist/*.tar.gz .\n\n.PHONY: install\ninstall:\n\tDESTDIR=$(DESTDIR) ninja -C build install\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.220703125,
          "content": "![Linux Containers logo](https://linuxcontainers.org/static/img/containers.png)\n# LXC\n\nLXC is the well-known and heavily tested low-level Linux container runtime. It\nis in active development since 2008 and has proven itself in critical\nproduction environments world-wide. Some of its core contributors are the same\npeople that helped to implement various well-known containerization features\ninside the Linux kernel.\n\n## Status\nType            | Service               | Status\n---             | ---                   | ---\nCI (Linux)      | GitHub                | [![Build Status](https://github.com/lxc/lxc/actions/workflows/build.yml/badge.svg)](https://github.com/lxc/lxc/actions)\nCI (Linux)      | Jenkins               | [![Build Status](https://jenkins.linuxcontainers.org/job/lxc-github-commit/badge/icon)](https://jenkins.linuxcontainers.org/job/lxc-github-commit/)\nProject status  | CII Best Practices    | [![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/1087/badge)](https://bestpractices.coreinfrastructure.org/projects/1087)\nFuzzing         | OSS-Fuzz              | [![Fuzzing Status](https://oss-fuzz-build-logs.storage.googleapis.com/badges/lxc.svg)](https://oss-fuzz-build-logs.storage.googleapis.com/index.html#lxc)\nFuzzing         | CIFuzz                | [![CIFuzz](https://github.com/lxc/lxc/actions/workflows/cifuzz.yml/badge.svg)](https://github.com/lxc/lxc/actions/workflows/cifuzz.yml)\n\n## System Containers\n\nLXC's main focus is system containers. That is, containers which offer an\nenvironment as close as possible as the one you'd get from a VM but without the\noverhead that comes with running a separate kernel and simulating all the\nhardware.\n\nThis is achieved through a combination of kernel security features such as\nnamespaces, mandatory access control and control groups.\n\n## Unprivileged Containers\n\nUnprivileged containers are containers that are run without any privilege. This\nrequires support for user namespaces in the kernel that the container is run\non. LXC was the first runtime to support unprivileged containers after user\nnamespaces were merged into the mainline kernel.\n\nIn essence, user namespaces isolate given sets of UIDs and GIDs. This is\nachieved by establishing a mapping between a range of UIDs and GIDs on the host\nto a different (unprivileged) range of UIDs and GIDs in the container. The\nkernel will translate this mapping in such a way that inside the container all\nUIDs and GIDs appear as you would expect from the host whereas on the host\nthese UIDs and GIDs are in fact unprivileged. For example, a process running as\nUID and GID 0 inside the container might appear as UID and GID 100000 on the\nhost. The implementation and working details can be gathered from the\ncorresponding user namespace man page.\n\nSince unprivileged containers are a security enhancement they naturally come\nwith a few restrictions enforced by the kernel. In order to provide a fully\nfunctional unprivileged container LXC interacts with 3 pieces of setuid code:\n\n- lxc-user-nic (setuid helper to create a veth pair and bridge it on the host)\n- newuidmap (from the shadow package, sets up a uid map)\n- newgidmap (from the shadow package, sets up a gid map)\n\nEverything else is run as your own user or as a uid which your user owns.\n\nIn general, LXC's goal is to make use of every security feature available in\nthe kernel. This means LXC's configuration management will allow experienced\nusers to intricately tune LXC to their needs.\n\nA more detailed introduction into LXC security can be found under the following link\n\n- https://linuxcontainers.org/lxc/security/\n\n### Removing all Privilege\n\nIn principle LXC can be run without any of these tools provided the correct\nconfiguration is applied. However, the usefulness of such containers is usually\nquite restricted. Just to highlight the two most common problems:\n\n1. Network: Without relying on a setuid helper to setup appropriate network\n   devices for an unprivileged user (see LXC's `lxc-user-nic` binary) the only\n   option is to share the network namespace with the host. Although this should\n   be secure in principle, sharing the host's network namespace is still one\n   step of isolation less and increases the attack vector.\n   Furthermore, when host and container share the same network namespace the\n   kernel will refuse any sysfs mounts. This usually means that the init binary\n   inside of the container will not be able to boot up correctly.\n\n2. User Namespaces: As outlined above, user namespaces are a big security\n   enhancement. However, without relying on privileged helpers users who are\n   unprivileged on the host are only permitted to map their own UID into\n   a container. A standard POSIX system however, requires 65536 UIDs and GIDs\n   to be available to guarantee full functionality.\n\n## Configuration\n\nLXC is configured via a simple set of keys. For example,\n\n- `lxc.rootfs.path`\n- `lxc.mount.entry`\n\nLXC namespaces configuration keys by using single dots. This means complex\nconfiguration keys such as `lxc.net.0` expose various subkeys such as\n`lxc.net.0.type`, `lxc.net.0.link`, `lxc.net.0.ipv6.address`, and others for\neven more fine-grained configuration.\n\nLXC is used as the default runtime for [Incus](https://github.com/lxc/incus),\na container hypervisor exposing a well-designed and stable REST-api on top of\nit.\n\n## Kernel Requirements\n\nLXC runs on any kernel from 2.6.32 onwards. All it requires is a functional\nC compiler. LXC works on all architectures that provide the necessary kernel\nfeatures. This includes (but isn't limited to):\n\n- i686\n- x86_64\n- ppc, ppc64, ppc64le\n- riscv64\n- s390x\n- armv7l, arm64\n- loongarch64\n\nLXC also supports at least the following C standard libraries:\n\n- glibc\n- musl\n- bionic (Android's libc)\n\n## Backwards Compatibility\n\nLXC has always focused on strong backwards compatibility. In fact, the API\nhasn't been broken from release `1.0.0` onwards. Main LXC is currently at\nversion `4.*.*`.\n\n## Reporting Security Issues\n\nThe LXC project has a good reputation in handling security issues quickly and\nefficiently. If you think you've found a potential security issue, please\nreport it by e-mail to security (at) linuxcontainers (dot) org.\n\nFor further details please have a look at\n\n- https://linuxcontainers.org/lxc/security/\n\n## Becoming Active in LXC development\n\nWe always welcome new contributors and are happy to provide guidance when\nnecessary. LXC follows the kernel coding conventions. This means we only\nrequire that each commit includes a `Signed-off-by` line. The coding style we\nuse is identical to the one used by the Linux kernel. You can find a detailed\nintroduction at:\n\n- https://www.kernel.org/doc/html/v4.10/process/coding-style.html\n\nand should also take a look at the [CONTRIBUTING](CONTRIBUTING) file in this\nrepo.\n\nIf you want to become more active it is usually also a good idea to show up in\nthe LXC IRC channel [#lxc-dev](https://kiwiirc.com/client/irc.libera.chat/#lxc-dev) on irc.libera.chat. We try to do all development out\nin the open and discussion of new features or bugs is done either in\nappropriate GitHub issues or on IRC.\n\nWhen thinking about making security critical contributions or substantial\nchanges it is usually a good idea to ping the developers first and ask whether\na PR would be accepted.\n\n## Semantic Versioning\n\nLXC and its related projects strictly adhere to a [semantic\nversioning](http://semver.org/) scheme.\n\n## Downloading the current source code\n\nSource for the latest released version can always be downloaded from\n\n- https://linuxcontainers.org/lxc/downloads/\n\nYou can browse the up to the minute source code and change history online\n\n- https://github.com/lxc/lxc\n\n## Building LXC\n\nWithout considering distribution specific details a simple\n\n    meson setup -Dprefix=/usr build\n    meson compile -C build\n\nis usually sufficient.\n\n## Getting help\n\nWhen you find you need help, the LXC projects provides you with several options.\n\n### Discuss Forum\n\nWe maintain a discuss forum at\n\n- https://discuss.linuxcontainers.org/\n\nwhere you can get support.\n\n### IRC\nYou can find us in [#lxc](https://kiwiirc.com/client/irc.libera.chat/#lxc) on irc.libera.chat.\n\n### Mailing Lists\n\nYou can check out one of the two LXC mailing list archives and register if\ninterested:\n\n- http://lists.linuxcontainers.org/listinfo/lxc-devel\n- http://lists.linuxcontainers.org/listinfo/lxc-users\n"
        },
        {
          "name": "coccinelle",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "hooks",
          "type": "tree",
          "content": null
        },
        {
          "name": "lxc.spec.in",
          "type": "blob",
          "size": 8.033203125,
          "content": "#\n# SPDX-License-Identifier: LGPL-2.1+\n#\n# lxc: linux Container library\n\n# Set with_systemd on distros that use it, so we can install the service\n# file, otherwise the sysvinit script will be installed\n%if 0%{?fedora} >= 14 || 0%{?rhel} >= 7 || 0%{?suse_version} >= 1210\n%global with_systemd 1\n%define init_script systemd\n#\n# BuildRequires systemd-units on fedora and rhel\n%if 0%{?fedora} >= 14 || 0%{?rhel} >= 7\nBuildRequires: systemd-units\n%endif\n#\n# BuildRequires systemd on openSUSE and SUSE\n%if 0%{?suse_version} >= 1210\nBuildRequires: systemd\n%endif\n%else\n%global with_systemd 0\n%define init_script sysvinit\n%endif\n\n# Must use /var/run for runtime_path on older releases or dnsmasq in the\n# lxc-net script will not be able to write its pid in /run (selinux denial)\n%if 0%{?fedora} < 15 || 0%{?rhel} < 7\n%define _with_runtime_path --with-runtime-path=/var/run\n%endif\n\n# RPM needs alpha/beta/rc in Release: not Version: to ensure smooth\n# package upgrades from alpha->beta->rc->release. For more info see:\n# http://fedoraproject.org/wiki/Packaging%3aNamingGuidelines#NonNumericRelease\n%if \"x@LXC_VERSION_BETA@\" != \"x\"\n%global beta_rel @LXC_VERSION_BETA@\n%global beta_dot .%{beta_rel}\n%else\n%global norm_rel 1\n%endif\n\nName: @PACKAGE@\nVersion: @LXC_VERSION_BASE@\nRelease: %{?beta_rel:0.1.%{beta_rel}}%{?!beta_rel:%{norm_rel}}%{?dist}\nURL: http://linuxcontainers.org\nSource: http://linuxcontainers.org/downloads/%{name}-%{version}%{?beta_dot}.tar.gz\nSummary: Linux Containers userspace tools\nGroup: Applications/System\nLicense: LGPLv2+\nBuildRoot: %{_tmppath}/%{name}-%{version}-build\nRequires: openssl rsync dnsmasq bridge-utils\nRequires: %{name}-libs = %{version}-%{release}\nRequires(pre): /usr/sbin/useradd\nRequires(postun): /usr/sbin/userdel\n%if 0%{?fedora} < 15 || 0%{?rhel} < 7\nRequires: libcgroup\n%endif\n# Note for Suse.  The \"docbook2X\" BuildRequires does properly\n# match docbook2x on Suse in a case insensitive manner\nBuildRequires: libcap libcap-devel docbook2X graphviz libxslt pkgconfig dbus-1\n\n#\n# Additional packages for openSUSE and SUSE\n#\n%if 0%{?suse_version} >= 1210\nPreReq:   permissions\nBuildRequires:  libapparmor-devel linux-glibc-devel lsb-release docbook-utils\n\n#\n# libseccomp-devel only needed on i386/i586/i686 and X86_64\n#\n%ifarch %ix86 x86_64\nBuildRequires:  libseccomp-devel\n%endif\n%endif\n\n#\n# Additional package for Tizen\n#\n%if %{defined tizen_version}\nBuildRequires:  pkgconfig(dlog)\n%endif\n\n%description\nContainers are insulated areas inside a system, which have their own namespace\nfor filesystem, network, PID, IPC, CPU and memory allocation and which can be\ncreated using the Control Group and Namespace features included in the Linux\nkernel.\n\nThis package provides the lxc-* tools, which can be used to start a single\ndaemon in a container, or to boot an entire \"containerized\" system, and to\nmanage and debug your containers.\n\n%package\tlibs\nSummary:\tShared library files for %{name}\nGroup:\t\tSystem Environment/Libraries\n%description\tlibs\nThe %{name}-libs package contains libraries for running %{name} applications.\n\n%package\tdevel\nSummary:\tDevelopment library for %{name}\nGroup:\t\tDevelopment/Libraries\nRequires:\t%{name} = %{version}-%{release}, pkgconfig\n%description\tdevel\nThe %{name}-devel package contains header files and library needed for\ndevelopment of the Linux containers.\n\n%prep\n%setup -q -n %{name}-%{version}%{?beta_dot}\n%build\n\n#Dont use pkgconfig to get bash completion dir and use backwards compatible location.\nexport bashcompdir=%{_sysconfdir}/bash_completion.d\n\nPATH=$PATH:/usr/sbin:/sbin %configure $args \\\n%if \"x%{_unitdir}\" != \"x\"\n  --with-systemdsystemunitdir=%{_unitdir} \\\n%endif\n  %{?_with_runtime_path} \\\n  --disable-rpath \\\n  --with-init-script=%{init_script}\nmake %{?_smp_mflags}\n\n%install\nrm -rf %{buildroot}\nmake install DESTDIR=%{buildroot}\nfind %{buildroot} -type f -name '*.la' -exec rm -f {} ';'\n\n%clean\nrm -rf %{buildroot}\n\n%pre\n# Ensure that lxc-dnsmasq uid & gid gets correctly allocated\nif getent passwd lxc-dnsmasq >/dev/null 2>&1 ; then : ; else \\\n /usr/sbin/useradd -M -r -s /sbin/nologin \\\n -c \"LXC Networking Service\" -d %_localstatedir/%name lxc-dnsmasq 2> /dev/null \\\n || exit 1\nfi\n\n%post\n# This test should trigger a network configure on a new install.\nif [ ! -d @LXC_DISTRO_SYSCONF@ ]\nthen\n\tmkdir -p @LXC_DISTRO_SYSCONF@\nfi\n\nif [ ! -f @LXC_DISTRO_SYSCONF@/lxc-net ] || ! grep -q 'USE_LXC_BRIDGE=' @LXC_DISTRO_SYSCONF@/lxc-net\nthen\n\t# Grab a random 10net subnet.  Need to add test logic...\n\twhile [ true ]\n\tdo\n\t\tSUBNET=10.$(($RANDOM % 256)).$(($RANDOM % 256))\n\t\tif ! ip -4 route ls | grep -q \"^$SUBNET\"\n\t\tthen\n\t\t\tbreak\n\t\tfi\n\tdone\n\n\tcat >  @LXC_DISTRO_SYSCONF@/lxc-net <<EOF\n# Leave USE_LXC_BRIDGE as \"true\" if you want to use lxcbr0 for your\n# containers.  Set to \"false\" if you'll use virbr0 or another existing\n# bridge, or macvlan to your host's NIC.\nUSE_LXC_BRIDGE=\"true\"\n\n# If you change the LXC_BRIDGE to something other than lxcbr0, then\n# you will also need to update your /etc/lxc/default.conf as well as the\n# configuration (/var/lib/lxc/<container>/config) for any containers\n# already created using the default config to reflect the new bridge\n# name.\n# If you have the dnsmasq daemon installed, you'll also have to update\n# /etc/dnsmasq.d/lxc and restart the system wide dnsmasq daemon.\nLXC_BRIDGE=\"lxcbr0\"\nLXC_BRIDGE_MAC=\"00:16:3e:00:00:00\"\nLXC_ADDR=\"$SUBNET.1\"\nLXC_NETMASK=\"255.255.255.0\"\nLXC_NETWORK=\"$SUBNET.0/24\"\nLXC_DHCP_RANGE=\"$SUBNET.2,$SUBNET.254\"\nLXC_DHCP_MAX=\"253\"\n# Uncomment the next line if you'd like to use a conf-file for the lxcbr0\n# dnsmasq.  For instance, you can use 'dhcp-host=mail1,10.0.3.100' to have\n# container 'mail1' always get ip address 10.0.3.100.\n#LXC_DHCP_CONFILE=/etc/lxc/dnsmasq.conf\n\n# Whether to use nftables (if available) to configure required network rules.\n# Set to any value != \"true\" to force iptables backend instead.\nLXC_USE_NFT=\"true\"\n\n# Uncomment the next line if you want lxcbr0's dnsmasq to resolve the .lxc\n# domain.  You can then add \"server=/lxc/10.0.3.1' (or your actual $LXC_ADDR)\n# to /etc/dnsmasq.conf, after which 'container1.lxc' will resolve on your\n# host.\n#LXC_DOMAIN=\"lxc\"\nEOF\nfi\n\n%postun\n/usr/sbin/userdel lxc-dnsmasq > /dev/null 2>&1 || :\n\n%post   libs -p /sbin/ldconfig\n%postun libs -p /sbin/ldconfig\n\n%files\n%defattr(-,root,root)\n%{_bindir}/*\n# openSUSE/SUSE\n%if 0%{?suse_version} >= 1210\n%dir  %{_sysconfdir}/apparmor.d\n%dir  %{_sysconfdir}/apparmor.d/abstractions\n%dir  %{_sysconfdir}/apparmor.d/abstractions/%{name}\n%config %{_sysconfdir}/apparmor.d/abstractions/%{name}/container-base\n%config %{_sysconfdir}/apparmor.d/abstractions/%{name}/start-container\n%config %{_sysconfdir}/apparmor.d/%{name}-containers\n%dir  %{_sysconfdir}/apparmor.d/%{name}\n%config %{_sysconfdir}/apparmor.d/%{name}/%{name}-default\n%config %{_sysconfdir}/apparmor.d/%{name}/%{name}-default-with-mounting\n%config %{_sysconfdir}/apparmor.d/%{name}/%{name}-default-with-nesting\n%config %{_sysconfdir}/apparmor.d/usr.bin.%{name}-start\n%endif\n%{_mandir}/man1/lxc*\n%{_mandir}/man5/lxc*\n%{_mandir}/man7/lxc*\n# not openSUSE/SUSE\n%if %{undefined suse_version}\n%{_mandir}/ja/man1/lxc*\n%{_mandir}/ja/man5/lxc*\n%{_mandir}/ja/man7/lxc*\n%{_mandir}/ko/man1/lxc*\n%{_mandir}/ko/man5/lxc*\n%{_mandir}/ko/man7/lxc*\n%endif\n%{_datadir}/doc/*\n%{_datadir}/lxc/*\n%{_sysconfdir}/bash_completion.d\n%config(noreplace) %{_sysconfdir}/lxc/*\n%config(noreplace) %{_sysconfdir}/sysconfig/*\n\n%if %{with_systemd}\n%{_unitdir}/lxc-net.service\n%{_unitdir}/lxc.service\n%{_unitdir}/lxc@.service\n%{_unitdir}/lxc-monitord.service\n%else\n%{_sysconfdir}/rc.d/init.d/lxc\n%{_sysconfdir}/rc.d/init.d/lxc-net\n%endif\n\n%files libs\n%defattr(-,root,root)\n%{_sbindir}/*\n%{_libdir}/*.so.*\n%{_libdir}/*.a\n%{_libdir}/%{name}\n%{_localstatedir}/*\n%{_libexecdir}/%{name}/hooks/unmount-namespace\n%{_libexecdir}/%{name}/lxc-apparmor-load\n%{_libexecdir}/%{name}/lxc-monitord\n%attr(4111,root,root) %{_libexecdir}/%{name}/lxc-user-nic\n%if %{with_systemd}\n%attr(555,root,root) %{_libexecdir}/%{name}/lxc-net\n%attr(555,root,root) %{_libexecdir}/%{name}/lxc-containers\n%endif\n\n%files devel\n%defattr(-,root,root)\n%{_includedir}/%{name}/*\n%{_libdir}/*.so\n%{_libdir}/pkgconfig/*\n\n%changelog\n\n# Local variables:\n# mode: shell-script\n# sh-shell: rpm\n# end:\n"
        },
        {
          "name": "meson.build",
          "type": "blob",
          "size": 32.85546875,
          "content": "# SPDX-License-Identifier: LGPL-2.1+\n\n# Project.\nproject(\n    'lxc',\n    'c',\n    version: '6.0.0',\n    license: 'LGPLv2+',\n    default_options: [\n        'b_lto=true',\n        'b_lto_mode=thin',\n        'b_colorout=always',\n        'b_asneeded=false',\n        'b_pie=true',\n        'b_staticpic=true',\n        'c_std=gnu11',\n        'warning_level=2',\n    ],\n    meson_version: '>= 0.61')\n\ncc = meson.get_compiler('c')\npkgconfig = import('pkgconfig')\npkgconfig_libs = []\n\nliblxc_dependencies = []\noss_fuzz_dependencies = []\n\n# Version.\nliblxc_version = '1.8.0'\nversion_data = configuration_data()\nversion_data.set('LXC_VERSION_MAJOR', '6')\nversion_data.set('LXC_VERSION_MINOR', '0')\nversion_data.set('LXC_VERSION_MICRO', '0')\nversion_data.set('LXC_VERSION_BETA', '')\nversion_data.set('LXC_ABI', liblxc_version)\nversion_data.set('LXC_DEVEL', '1')\nversion_data.set('LXC_VERSION', meson.project_version())\n\n# Path handling.\nproject_source_root = meson.current_source_dir()\nproject_build_root = meson.current_build_dir()\nprefixdir = get_option('prefix')\n\napparmorcachedir = get_option('apparmor-cache-path')\nglobalconfig = get_option('global-config-path')\nlocalstatedir = join_paths('/', get_option('localstatedir'))\nlogpath = get_option('log-path')\nlxcpathprefix = get_option('data-path')\nrootfsmount = get_option('rootfs-mount-path')\nuser_network_db_opt = get_option('usernet-db-path')\nuser_network_conf_opt = get_option('usernet-config-path')\n\nbashcompletiondir = join_paths(prefixdir, get_option('datadir'), 'bash-completion', 'completions')\nbindir = join_paths(prefixdir, get_option('bindir'))\ndatadir = join_paths(prefixdir, get_option('datadir'))\nmandir = join_paths(prefixdir, get_option('mandir'))\ndocdir = join_paths(datadir, get_option('doc-path'))\nincludedir = join_paths(prefixdir, get_option('includedir'))\nlibdir = join_paths(prefixdir, get_option('libdir'))\nlibexecdir = join_paths(prefixdir, get_option('libexecdir'))\nruntimepath = join_paths(prefixdir, get_option('runtime-path'))\nsbindir = join_paths(prefixdir, get_option('sbindir'))\nsysconfdir = join_paths(prefixdir, get_option('sysconfdir'))\n\nlxcapparmorcachedir = join_paths(localstatedir, apparmorcachedir)\nlxcconfdir = join_paths(sysconfdir, globalconfig)\nlxcdefaultconfig = join_paths(lxcconfdir, 'default.conf')\nlxcglobalconfig = join_paths(lxcconfdir, 'lxc.conf')\nlxcexamplesdir = join_paths(docdir, 'examples')\nlxchookbindir = join_paths(libexecdir, 'lxc/hooks')\nlxcinclude = join_paths(includedir, 'lxc')\nlxclibexec = join_paths(libexecdir, 'lxc')\nlxclogpath = join_paths(localstatedir, logpath)\nlxcpath = join_paths(localstatedir, lxcpathprefix)\nlxcrootfsmount = join_paths(libdir, rootfsmount)\nlxcdatadir = join_paths(datadir, 'lxc')\nlxchookdir = join_paths(lxcdatadir, 'hooks')\nlxcselinuxdir = join_paths(lxcdatadir, 'selinux')\nlxctemplateconfdir = join_paths(lxcdatadir, 'config')\nlxctemplateconfcommondir = join_paths(lxctemplateconfdir, 'common.conf.d')\nlxctemplatedir = join_paths(lxcdatadir, 'templates')\nlxc_user_network_conf = join_paths(sysconfdir, user_network_conf_opt)\nlxc_user_network_db = join_paths(runtimepath, user_network_db_opt)\npam_security = join_paths(libdir, 'security')\n\n# Configuration options.\nsrcconf = configuration_data()\nsrcconf.set('_GNU_SOURCE', true)\nsrcconf.set('_FILE_OFFSET_BITS', 64)\nsrcconf.set('__STDC_FORMAT_MACROS', true)\n\n## This is a hack to prevent any inclusion ofr linux/mount.h which causes\n## conflicts with sys/mount.h all over the place\nsrcconf.set('_LINUX_MOUNT_H', true)\n\nsrcconf.set_quoted('APPARMOR_CACHE_DIR', lxcapparmorcachedir)\nsrcconf.set_quoted('LIBEXECDIR', libexecdir)\nsrcconf.set_quoted('LOGPATH', lxclogpath)\nsrcconf.set_quoted('LXC_DEFAULT_CONFIG', lxcdefaultconfig)\nsrcconf.set_quoted('LXC_GLOBAL_CONF', lxcglobalconfig)\nsrcconf.set_quoted('LXCINITDIR', libexecdir)\nsrcconf.set_quoted('LXCPATH', lxcpath)\nsrcconf.set_quoted('LXCROOTFSMOUNT', lxcrootfsmount)\nsrcconf.set_quoted('LXCTEMPLATECONFIG', lxctemplateconfdir)\nsrcconf.set_quoted('LXCTEMPLATECONFIG', lxctemplateconfdir)\nsrcconf.set_quoted('LXCTEMPLATEDIR', lxctemplatedir)\nsrcconf.set_quoted('LXC_USERNIC_CONF', lxc_user_network_conf)\nsrcconf.set_quoted('LXC_USERNIC_DB', lxc_user_network_db)\nsrcconf.set_quoted('RUNTIME_PATH', runtimepath)\nsrcconf.set_quoted('SBINDIR', sbindir)\n\nconf = configuration_data()\nconf.set('BINDIR', bindir)\nconf.set('LIBEXECDIR', libexecdir)\nconf.set('LOCALSTATEDIR', localstatedir)\nconf.set('LXC_GLOBAL_CONF', lxcglobalconfig)\nconf.set('LXCHOOKDIR', lxchookdir)\nconf.set('LXCINITDIR', libexecdir)\nconf.set('LXCROOTFSMOUNT', lxcrootfsmount)\nconf.set('LXCTEMPLATECONFIG', lxctemplateconfdir)\nconf.set('LXCTEMPLATEDIR', lxctemplatedir)\nconf.set('PACKAGE_VERSION', meson.project_version())\nconf.set('RUNTIME_PATH', runtimepath)\nconf.set('SYSCONFDIR', sysconfdir)\n\n# Cross-compile on Android.\nsrcconf.set10('IS_BIONIC', host_machine.system() == 'android')\n\n# Custom configuration.\ncgrouppattern = get_option('cgroup-pattern')\ncoverity = get_option('coverity-build')\ninit_script = get_option('init-script')\nsanitize = get_option('b_sanitize')\nwant_examples = get_option('examples')\nwant_install_init = get_option('install-init-files')\nwant_io_uring = get_option('io-uring-event-loop')\nwant_pam_cgroup = get_option('pam-cgroup')\nwant_mans = get_option('man')\nwant_tests = get_option('tests')\nwant_tools = get_option('tools')\nwant_tools_multicall = get_option('tools-multicall')\nwant_commands = get_option('commands')\nwant_capabilities = get_option('capabilities')\nwant_apparmor = get_option('apparmor')\nwant_openssl = get_option('openssl')\nwant_selinux = get_option('selinux')\nwant_oss_fuzz = get_option('oss-fuzz')\nwant_seccomp = get_option('seccomp')\nwant_spec = get_option('specfile')\nwant_state_dirs = get_option('install-state-dirs')\nwant_thread_safety = get_option('thread-safety')\nwant_memfd_rexec = get_option('memfd-rexec')\nwant_dbus = get_option('dbus')\n\n# Set sysconfdir\nfs = import('fs')\nif want_install_init\n    distrosysconfdir = get_option('distrosysconfdir')\n    if distrosysconfdir != ''\n        distrosysconfdir = join_paths(sysconfdir, distrosysconfdir)\n        conf.set('LXC_DISTRO_SYSCONF', distrosysconfdir)\n    elif fs.is_dir('/etc/sysconfig')\n        distrosysconfdir = join_paths(sysconfdir, 'sysconfig')\n        conf.set('LXC_DISTRO_SYSCONF', distrosysconfdir)\n    elif fs.is_dir('/etc/default')\n        distrosysconfdir = join_paths(sysconfdir, 'default')\n        conf.set('LXC_DISTRO_SYSCONF', distrosysconfdir)\n    else\n        error('\"distrosysconfdir\" is not set')\n    endif\nendif\n\nsrcconf.set_quoted('DEFAULT_CGROUP_PATTERN', cgrouppattern)\nif coverity\n    srcconf.set('ENABLE_COVERITY_BUILD', 1)\nendif\n\ndummy_config_data = configuration_data()\ndummy_config_data.set_quoted('DUMMY_VARIABLE', '1')\n\n# Those generate many false positives, and we do not want to change the code to\n# avoid them.\nbasic_disabled_warnings = [\n        '-Wno-format-signedness',\n        '-Wno-missing-field-initializers',\n        '-Wno-unused-parameter',\n]\n\n# Build flags.\npossible_cc_flags = [\n    '-Wvla',\n    '-Wimplicit-fallthrough=5',\n    '-Wcast-align',\n    '-Wstrict-prototypes',\n    '-fno-strict-aliasing',\n    '-fstack-clash-protection',\n    '--param=ssp-buffer-size=4',\n    '--mcet -fcf-protection',\n    '-Werror=implicit-function-declaration',\n    '-Wlogical-op',\n    '-Wmissing-include-dirs',\n    '-Wold-style-definition',\n    '-Winit-self',\n    '-Wunused-but-set-variable',\n    '-Wno-unused-parameter',\n    '-Wfloat-equal',\n    '-Werror=return-type',\n    '-Werror=incompatible-pointer-types',\n    '-Wformat=2',\n    '-Wshadow',\n    '-Wendif-labels',\n    '-Werror=overflow',\n    '-fdiagnostics-show-option',\n    '-Werror=shift-count-overflow',\n    '-Werror=shift-overflow=2',\n    '-Wdate-time',\n    '-Wnested-externs',\n    '-fasynchronous-unwind-tables',\n    '-fexceptions',\n    '-Warray-bounds',\n    '-Wrestrict',\n    '-Wreturn-local-addr',\n    '-fsanitize=cfi',\n    '-Wstringop-overflow',\n]\n\npossible_link_flags = [\n    '-Wl,--no-as-needed',\n    '-Wl,--gc-sections',\n    '-Wl,-z,relro',\n    '-Wl,-z,now',\n    '-fstack-protector',\n    '-fstack-protector-strong',\n]\n\n# The gold linker fails with a bus error on sparc64\nif build_machine.cpu_family() != 'sparc64'\n    possible_link_flags += '-Wl,-fuse-ld=gold'\nendif\n\nif sanitize == 'none'\n    possible_link_flags += '-Wl,--warn-common'\nendif\n\nif cc.get_id() == 'clang'\n    possible_cc_flags += [\n            '-Wno-typedef-redefinition',\n            '-Wno-gnu-variable-sized-type-not-at-end',\n    ]\nendif\npossible_cc_flags += [\n    '-ffat-lto-objects',\n]\n\nif meson.version().version_compare('>=0.46')\n    add_project_link_arguments(cc.get_supported_link_arguments(possible_link_flags), language: 'c')\nelse\n    add_project_link_arguments(possible_link_flags, language: 'c')\nendif\n\nadd_project_arguments(cc.get_supported_arguments(basic_disabled_warnings), language : 'c')\nadd_project_arguments(cc.get_supported_arguments(possible_cc_flags), language: 'c')\n\nif add_languages('cpp', required : want_oss_fuzz)\n    #  Used only for tests\n    cxx = meson.get_compiler('cpp')\n    cxx_cmd = ' '.join(cxx.cmd_array())\n    add_project_arguments(cxx.get_supported_arguments(basic_disabled_warnings), language : 'cpp')\nendif\n\n# Feature detection\n## I/O uring.\nif want_io_uring\n    liburing = dependency('liburing')\n    if cc.has_function('io_uring_prep_poll_add', prefix: '#include <liburing.h>', dependencies: liburing) == false\n        error('liburing version does not support IORING_POLL_ADD_MULTI')\n    endif\n    pkgconfig_libs += liburing\n    liblxc_dependencies += liburing\n\n    srcconf.set10('HAVE_LIBURING', true)\nelse\n    srcconf.set10('HAVE_LIBURING', false)\nendif\n\nif want_dbus\n    libdbus = dependency('dbus-1', required: true)\n    pkgconfig_libs += libdbus\n    liblxc_dependencies += libdbus\n    srcconf.set10('HAVE_DBUS', libdbus.found())\nelse\n    srcconf.set10('HAVE_DBUS', false)\nendif\n\n## Time EPOCH.\nsh = find_program('sh')\ndate = find_program('date')\ngit = find_program('git', required: false)\ntime_epoch = run_command(sh, '-c', 'echo \"$SOURCE_DATE_EPOCH\"', check: true).stdout().strip()\nif time_epoch == '' and git.found() and run_command('test', '-e', '.git', check: false).returncode() == 0\n    # If we're in a git repository, use the creation time of the latest git tag.\n    latest_tag = run_command(git, 'describe', '--abbrev=0', '--tags', check: false).stdout().strip()\n    if latest_tag != ''\n      time_epoch = run_command(git, 'log', '--no-show-signature', '-1', '--format=%at', latest_tag, check: true).stdout().strip()\n    endif\nendif\n\n# Fallback to current epoch.\nif time_epoch == ''\n    time_epoch = run_command(date, '+%s', check: true).stdout().strip()\nendif\ngenerate_date = run_command(date, '--utc', '--date=@' + time_epoch, '+%Y-%m-%d', check: true).stdout().strip()\n\n## Manpages.\ndocconf = configuration_data()\ndocconf.set('builddir', '.')\ndocconf.set('BINDIR', bindir)\ndocconf.set('DATADIR', datadir)\ndocconf.set('DOCDIR', docdir)\ndocconf.set('LOGPATH', lxclogpath)\ndocconf.set('LXC_DEFAULT_CONFIG', lxcdefaultconfig)\ndocconf.set('LXC_GENERATE_DATE', generate_date)\ndocconf.set('LXC_GLOBAL_CONF', lxcglobalconfig)\ndocconf.set('LXCPATH', lxcpath)\ndocconf.set('LXCTEMPLATEDIR', lxctemplatedir)\ndocconf.set('LXC_USERNIC_CONF', lxc_user_network_conf)\ndocconf.set('LXC_USERNIC_DB', lxc_user_network_db)\ndocconf.set('PACKAGE_VERSION', version_data.get('LXC_VERSION'))\ndocconf.set('docdtd', '\"-//OASIS//DTD DocBook XML\" \"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd\"')\nsgml2man = find_program('docbook2X2man', 'docbook2x-man', 'db2x_docbook2man', 'docbook2man', 'docbook-to-man', required: false, version: '>=0.8')\nif not sgml2man.found()\n    sgml2man = find_program('docbook2man', required: false, version: '<0.8')\n    if sgml2man.found()\n        docconf.set('docdtd', '\"-//Davenport//DTD DocBook V3.0//EN\"')\n    elif want_mans\n        error('missing required docbook2x or docbook-utils dependency')\n    endif\nendif\n\n## Threads.\nthreads = dependency('threads')\nliblxc_dependencies += threads\n\n## Seccomp.\nif want_seccomp\n    libseccomp = dependency('libseccomp', required: false)\n    srcconf.set10('HAVE_SECCOMP', libseccomp.found())\n    pkgconfig_libs += libseccomp\n    liblxc_dependencies += libseccomp\n    if libseccomp.found()\n        if libseccomp.version().version_compare('>=2.5.0')\n            # https://github.com/seccomp/libseccomp/commit/dead12bc788b259b148cc4d93b970ef0bd602b1a\n            srcconf.set10('HAVE_DECL_SECCOMP_NOTIFY_FD', true)\n        else\n            srcconf.set10('HAVE_DECL_SECCOMP_NOTIFY_FD', false)\n        endif\n\n        if libseccomp.version().version_compare('>=2.0.0')\n            # https://github.com/seccomp/libseccomp/commit/6220c8c0fc479d97b6d3e3166a4e46fbfe25a3c0\n            srcconf.set10('HAVE_DECL_SECCOMP_SYSCALL_RESOLVE_NAME_ARCH', true)\n        else\n            srcconf.set10('HAVE_DECL_SECCOMP_SYSCALL_RESOLVE_NAME_ARCH', false)\n        endif\n\n        seccomp_headers = '''\n        #include <seccomp.h>\n        '''\n\n        foreach decl: [\n            'scmp_filter_ctx',\n            'struct seccomp_notif_sizes',\n            'struct clone_args',\n        ]\n\n            # We get -1 if the size cannot be determined\n            if cc.sizeof(decl, prefix: seccomp_headers, args: '-D_GNU_SOURCE', dependencies: libseccomp) > 0\n                srcconf.set10('HAVE_' + decl.underscorify().to_upper(), true)\n            else\n                srcconf.set10('HAVE_' + decl.underscorify().to_upper(), false)\n            endif\n        endforeach\n    endif\nelse\n    srcconf.set10('HAVE_SECCOMP', false)\nendif\n\n## SELinux.\nif want_selinux\n    libselinux = dependency('libselinux', required: false)\n    srcconf.set10('HAVE_SELINUX', libselinux.found())\n    pkgconfig_libs += libselinux\n    liblxc_dependencies += libselinux\nelse\n    srcconf.set10('HAVE_SELINUX', false)\nendif\n\n## AppArmor.\nif want_apparmor\n    libapparmor = dependency('libapparmor', required: false)\n    srcconf.set10('HAVE_APPARMOR', libapparmor.found())\n    # We do not use the AppArmor library at runtime, so it's not in our pkg-config.\n    liblxc_dependencies += libapparmor\nelse\n    srcconf.set10('HAVE_APPARMOR', false)\nendif\n\n## OpenSSL.\nif want_openssl\n    libopenssl = dependency('openssl', required: false)\n    srcconf.set10('HAVE_OPENSSL', libopenssl.found())\n    pkgconfig_libs += libopenssl\n    liblxc_dependencies += libopenssl\nelse\n    srcconf.set10('HAVE_OPENSSL', false)\nendif\n\n## Libcap..\nif want_capabilities\n    libcap = dependency('libcap', required: false)\n    if not libcap.found()\n        # Compat with Ubuntu 14.04 which ships libcap w/o .pc file\n        libcap = cc.find_library('cap', required: false)\n    else\n        have = cc.has_function('cap_get_file', dependencies: libcap, prefix: '#include <sys/capability.h>')\n        srcconf.set10('LIBCAP_SUPPORTS_FILE_CAPABILITIES', have)\n    endif\n    srcconf.set10('HAVE_LIBCAP', libcap.found())\n    pkgconfig_libs += libcap\n    liblxc_dependencies += libcap\n\n    libcap_static = dependency('libcap', required: false, static: true)\n    if not libcap_static.found()\n        # Compat with Ubuntu 14.04 which ships libcap w/o .pc file\n        libcap_static = cc.find_library('cap', required: false, static: true)\n    endif\n\n    code = '''\nint main(int argc, char *argv[]) { return 0; };\n'''\n    if libcap_static.found()\n        libcap_static_linkable = cc.links(code, args: '-static', dependencies: libcap_static)\n    else\n        libcap_static_linkable = false\n    endif\n    srcconf.set10('HAVE_STATIC_LIBCAP', libcap_static_linkable)\nelse\n    libcap_static = []\n    libcap_static_linkable = false\n    srcconf.set10('HAVE_LIBCAP', false)\n    srcconf.set10('HAVE_STATIC_LIBCAP', false)\nendif\n\nlibutil = cc.find_library('util', required: false)\n\nif want_oss_fuzz\n    srcconf.set10('FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION', true)\n    srcconf.set10('RUN_ON_OSS_FUZZ', true)\n    fuzzing_engine = meson.get_compiler('cpp').find_library('FuzzingEngine')\nendif\n\nsrcconf.set10('ENFORCE_THREAD_SAFETY', want_thread_safety)\nsrcconf.set10('ENFORCE_MEMFD_REXEC', want_memfd_rexec)\n\n## PAM.\npam = cc.find_library('pam', has_headers: 'security/pam_modules.h', required: want_pam_cgroup)\nsrcconf.set10('HAVE_PAM', pam.found())\npkgconfig_libs += pam\n\n## Others.\nhave = cc.has_function('fmemopen', prefix: '#include <stdio.h>', args: '-D_GNU_SOURCE')\nsrcconf.set10('HAVE_FMEMOPEN', have)\n\nhave = cc.has_function('openpty', dependencies: libutil, prefix: '#include <pty.h>')\nsrcconf.set10('HAVE_OPENPTY', have)\nif have\n    liblxc_dependencies += libutil\n    if want_oss_fuzz\n        oss_fuzz_dependencies += libutil\n    endif\nendif\n\nhave = cc.has_function('pthread_setcancelstate', prefix: '#include <pthread.h>')\nsrcconf.set10('HAVE_PTHREAD_SETCANCELSTATE', have)\n\nhave = cc.has_function('rand_r')\nsrcconf.set10('HAVE_RAND_R', have)\n\nhave = cc.has_function('strchrnul', prefix: '#include <string.h>', args: '-D_GNU_SOURCE')\nsrcconf.set10('HAVE_STRCHRNUL', have)\n\nhave_func_strerror_r = cc.has_function('strerror_r', prefix: '#include <string.h>', args: '-D_GNU_SOURCE')\nsrcconf.set10('HAVE_STRERROR_R', have_func_strerror_r)\n\nhave_func_strerror_r_char_p = false\n\nif have_func_strerror_r\n    code = '''\n#define _GNU_SOURCE\n#include <string.h>\nint func (void) {\n    char error_string[256];\n    char *ptr = strerror_r (-2, error_string, 256);\n    char c = *strerror_r (-2, error_string, 256);\n    return c != 0 && ptr != (void*) 0L;\n}\n'''\n\n    if cc.get_id() == 'clang'\n        have_func_strerror_r_char_p = cc.compiles(code, args : '-Wno-error=unused-command-line-argument', name : 'strerror_r() returns char *')\n    else\n        have_func_strerror_r_char_p = cc.compiles(code, name : 'strerror_r() returns char *')\n    endif\nendif\n\nsrcconf.set10('STRERROR_R_CHAR_P', have_func_strerror_r_char_p)\n\n## Compiler attributes.\nforeach ccattr: [\n    'fallthrough',\n    'nonnull',\n    'returns_nonnull',\n]\n\n    srcconf.set10('HAVE_COMPILER_ATTR_' + ccattr.underscorify().to_upper(), cc.has_function_attribute(ccattr))\nendforeach\n\n## Syscalls.\nfound_syscalls = []\nmissing_syscalls = []\nforeach tuple: [\n    ['bpf'],\n    ['close_range'],\n    ['endmntent'],\n    ['execveat'],\n    ['faccessat'],\n    ['strchrnul'],\n    ['strerror_r'],\n    ['fgetln'],\n    ['fsconfig'],\n    ['fsmount'],\n    ['fsopen'],\n    ['fspick'],\n    ['getgrgid_r'],\n    ['getline'],\n    ['getsubopt'],\n    ['gettid'],\n    ['hasmntopt'],\n    ['kcmp'],\n    ['keyctl'],\n    ['memfd_create'],\n    ['mount_setattr'],\n    ['move_mount'],\n    ['openat2'],\n    ['open_tree'],\n    ['personality'],\n    ['pidfd_open'],\n    ['pidfd_send_signal'],\n    ['pivot_root'],\n    ['prlimit'],\n    ['prlimit64'],\n    ['renameat2'],\n    ['sethostname'],\n    ['setmntent'],\n    ['setns'],\n    ['sigdescr_np'],\n    ['signalfd'],\n    ['statx'],\n    ['statvfs'],\n    ['strlcat'],\n    ['strlcpy'],\n    ['unshare'],\n]\n\n    if tuple.length() >= 2\n        cond = tuple[1]\n    else\n        ident1 = 'HAVE_' + tuple[0].underscorify().to_upper()\n        ident2 = 'ENABLE_' + tuple[0].underscorify().to_upper()\n        cond = srcconf.get(ident1, 0) == 1 or srcconf.get(ident2, 0) == 1\n    endif\n\n    if cond\n        found_syscalls += tuple[0]\n    else\n        missing_syscalls += tuple[0]\n    endif\nendforeach\n\n## Types.\ndecl_headers = '''\n#include <uchar.h>\n#include <sys/mount.h>\n#include <sys/stat.h>\n#include <linux/if_link.h>\n#include <linux/types.h>\n'''\n\nforeach decl: [\n    '__aligned_u64',\n    'struct clone_args',\n    'struct open_how',\n    'struct rtnl_link_stats64',\n]\n\n    # We get -1 if the size cannot be determined\n    if cc.sizeof(decl, prefix: decl_headers, args: '-D_GNU_SOURCE') > 0\n        srcconf.set10('HAVE_' + decl.underscorify().to_upper(), true)\n    else\n        srcconf.set10('HAVE_' + decl.underscorify().to_upper(), false)\n    endif\nendforeach\n\nfound_types = []\nmissing_types = []\nforeach tuple: [\n    ['scmp_filter_ctx'],\n    ['struct seccomp_notif_sizes'],\n    ['struct clone_args'],\n    ['__aligned_u64'],\n    ['struct open_how'],\n    ['struct rtnl_link_stats64'],\n]\n\n    if tuple.length() >= 2\n        cond = tuple[1]\n    else\n        ident1 = 'HAVE_' + tuple[0].underscorify().to_upper()\n        ident2 = 'ENABLE_' + tuple[0].underscorify().to_upper()\n        cond = srcconf.get(ident1, 0) == 1 or srcconf.get(ident2, 0) == 1\n    endif\n\n    if cond\n        found_types += tuple[0]\n    else\n        missing_types += tuple[0]\n    endif\nendforeach\n\ndecl_headers = '''\n#include <sys/mount.h>\n'''\n\n# We get -1 if the size cannot be determined\nif cc.sizeof('struct mount_attr', prefix: decl_headers, args: '-D_GNU_SOURCE') > 0\n    srcconf.set10('HAVE_' + 'struct mount_attr'.underscorify().to_upper(), true)\n    found_types += 'struct mount_attr (sys/mount.h)'\nelse\n    srcconf.set10('HAVE_' + 'struct mount_attr'.underscorify().to_upper(), false)\n    missing_types += 'struct mount_attr (sys/mount.h)' endif\n\n## Check if sys/mount.h defines the fsconfig commands\nif cc.get_define('FSCONFIG_SET_FLAG', prefix: decl_headers) != ''\n    srcconf.set10('HAVE_' + 'FSCONFIG_SET_FLAG'.underscorify().to_upper(), true)\n    found_types += 'FSCONFIG_SET_FLAG (sys/mount.h)'\nelse\n    srcconf.set10('HAVE_' + 'FSCONFIG_SET_FLAG'.underscorify().to_upper(), false)\n    missing_types += 'FSCONFIG_SET_FLAG (sys/mount.h)'\nendif\n\nif cc.get_define('FS_CONFIG_SET_STRING', prefix: decl_headers) != ''\n    srcconf.set10('HAVE_' + 'FS_CONFIG_SET_STRING'.underscorify().to_upper(), true)\n    found_types += 'FS_CONFIG_SET_STRING (sys/mount.h)'\nelse\n    srcconf.set10('HAVE_' + 'FS_CONFIG_SET_STRING'.underscorify().to_upper(), false)\n    missing_types += 'FS_CONFIG_SET_STRING (sys/mount.h)'\nendif\n\nif cc.get_define('FS_CONFIG_SET_BINARY', prefix: decl_headers) != ''\n    srcconf.set10('HAVE_' + 'FS_CONFIG_SET_BINARY'.underscorify().to_upper(), true)\n    found_types += 'FS_CONFIG_SET_BINARY (sys/mount.h)'\nelse\n    srcconf.set10('HAVE_' + 'FS_CONFIG_SET_BINARY'.underscorify().to_upper(), false)\n    missing_types += 'FS_CONFIG_SET_BINARY (sys/mount.h)'\nendif\n\nif cc.get_define('FS_CONFIG_SET_PATH_EMPTY', prefix: decl_headers) != ''\n    srcconf.set10('HAVE_' + 'FS_CONFIG_SET_PATH_EMPTY'.underscorify().to_upper(), true)\n    found_types += 'FS_CONFIG_SET_PATH_EMPTY (sys/mount.h)'\nelse\n    srcconf.set10('HAVE_' + 'FS_CONFIG_SET_PATH_EMPTY'.underscorify().to_upper(), false)\n    missing_types += 'FS_CONFIG_SET_PATH_EMPTY (sys/mount.h)'\nendif\n\nif cc.get_define('FS_CONFIG_SET_PATH_FD', prefix: decl_headers) != ''\n    srcconf.set10('HAVE_' + 'FS_CONFIG_SET_PATH_FD'.underscorify().to_upper(), true)\n    found_types += 'FS_CONFIG_SET_PATH_FD (sys/mount.h)'\nelse\n    srcconf.set10('HAVE_' + 'FS_CONFIG_SET_PATH_FD'.underscorify().to_upper(), false)\n    missing_types += 'FS_CONFIG_SET_PATH_FD (sys/mount.h)'\nendif\n\nif cc.get_define('FS_CONFIG_SET_CMD_CREATE', prefix: decl_headers) != ''\n    srcconf.set10('HAVE_' + 'FS_CONFIG_SET_CMD_CREATE'.underscorify().to_upper(), true)\n    found_types += 'FS_CONFIG_SET_CMD_CREATE (sys/mount.h)'\nelse\n    srcconf.set10('HAVE_' + 'FS_CONFIG_SET_CMD_CREATE'.underscorify().to_upper(), false)\n    missing_types += 'FS_CONFIG_SET_CMD_CREATE (sys/mount.h)'\nendif\n\nif cc.get_define('FS_CONFIG_SET_CMD_RECONFIGURE', prefix: decl_headers) != ''\n    srcconf.set10('HAVE_' + 'FS_CONFIG_SET_CMD_RECONFIGURE'.underscorify().to_upper(), true)\n    found_types += 'FS_CONFIG_SET_CMD_RECONFIGURE (sys/mount.h)'\nelse\n    srcconf.set10('HAVE_' + 'FS_CONFIG_SET_CMD_RECONFIGURE'.underscorify().to_upper(), false)\n    missing_types += 'FS_CONFIG_SET_CMD_RECONFIGURE (sys/mount.h)'\nendif\n\n## Headers.\nforeach ident: [\n    ['bpf',               '''#include <sys/syscall.h>\n                             #include <unistd.h>'''],\n    ['close_range',       '''#include <unistd.h>'''],\n    ['execveat',          '''#include <unistd.h>'''],\n    ['endmntent',         '''#include <stdio.h>\n                             #include <mntent.h>'''],\n    ['faccessat',         '''#include <fcntl.h>\n                             #include <unistd.h>'''],\n    ['fexecve',           '''#include <unistd.h>'''],\n    ['fgetln',            '''#include <stdio.h>'''],\n    ['fsconfig',          '''#include <sys/mount.h>'''],\n    ['fsmount',           '''#include <sys/mount.h>'''],\n    ['fsopen',            '''#include <sys/mount.h>'''],\n    ['fspick',            '''#include <sys/mount.h>'''],\n    ['getgrgid_r',        '''#include <sys/types.h>\n                             #include <grp.h>'''],\n    ['getline',           '''#include <stdio.h>'''],\n    ['getsubopt',         '''#include <stdlib.h>'''],\n    ['gettid',            '''#include <sys/types.h>\n                             #include <unistd.h>'''],\n    ['hasmntopt',         '''#include <stdio.h>\n                             #include <mntent.h>'''],\n    ['kcmp',              '''#include <linux/kcmp.h>'''],\n    ['keyctl',            '''#include <sys/types.h>\n                             #include <keyutils.h>'''],\n    ['memfd_create',      '''#include <sys/mman.h>'''],\n    ['mount_setattr',     '''#include <sys/mount.h>'''],\n    ['move_mount',        '''#include <sys/mount.h>'''],\n    ['openat2',           '''#include <sys/types.h>\n                             #include <sys/stat.h>\n                             #include <fctnl.h>'''],\n    ['open_tree',         '''#include <sys/mount.h>'''],\n    ['personality',       '''#include <sys/personality.h>'''],\n    ['pidfd_open',        '''#include <stdlib.h>\n                             #include <unistd.h>\n                             #include <signal.h>\n                             #include <sys/wait.h>'''],\n    ['pidfd_send_signal', '''#include <stdlib.h>\n                             #include <unistd.h>\n                             #include <signal.h>\n                             #include <sys/wait.h>'''],\n    ['pivot_root',        '''#include <stdlib.h>\n                             #include <unistd.h>'''],     # no known header declares pivot_root\n    ['prlimit',           '''#include <sys/time.h>\n                             #include <sys/resource.h>'''],\n    ['prlimit64',         '''#include <sys/time.h>\n                             #include <sys/resource.h>'''],\n    ['renameat2',         '''#include <stdio.h>\n                             #include <fcntl.h>'''],\n    ['sethostname',       '''#include <unistd.h>'''],\n    ['setmntent',         '''#include <stdio.h>\n                             #include <mntent.h>'''],\n    ['setns',             '''#include <sched.h>'''],\n    ['sigdescr_np',       '''#include <string.h>'''],\n    ['signalfd',          '''#include <sys/signalfd.h>'''],\n    ['statvfs',           '''#include <sys/statvfs.h>'''],\n    ['statx',             '''#include <sys/types.h>\n                             #include <sys/stat.h>\n                             #include <unistd.h>'''],\n    ['strchrnul',         '''#include <string.h>'''],\n    ['strlcat',           '''#include <string.h>'''],\n    ['strlcpy',           '''#include <string.h>'''],\n    ['unshare',           '''#include <sched.h>'''],\n]\n\n    have = cc.has_function(ident[0], prefix: ident[1], args: '-D_GNU_SOURCE')\n    srcconf.set10('HAVE_' + ident[0].to_upper(), have)\nendforeach\n\nfound_headers = []\nmissing_headers = []\nforeach tuple: [\n    ['sys/resource.h'],\n    ['sys/memfd.h'],\n    ['sys/personality.h'],\n    ['sys/pidfd.h'],\n    ['sys/signalfd.h'],\n    ['sys/timerfd.h'],\n    ['pty.h'],\n    ['utmpx.h'],\n]\n    srcconf.set10('HAVE_' + tuple[0].underscorify().to_upper(), cc.has_header(tuple[0]))\n\n    if tuple.length() >= 2\n        cond = tuple[1]\n    else\n        ident1 = 'HAVE_' + tuple[0].underscorify().to_upper()\n        ident2 = 'ENABLE_' + tuple[0].underscorify().to_upper()\n        cond = srcconf.get(ident1, 0) == 1 or srcconf.get(ident2, 0) == 1\n    endif\n\n    if cond\n        found_headers += tuple[0]\n    else\n        missing_headers += tuple[0]\n    endif\nendforeach\n\n## Deps.\nfound_deps = []\nmissing_deps = []\nforeach tuple: [\n    ['AppArmor'],\n    ['SECCOMP'],\n    ['SELinux'],\n    ['libcap'],\n    ['static libcap'],\n    ['pam'],\n    ['openssl'],\n    ['liburing'],\n]\n\n    if tuple.length() >= 2\n        cond = tuple[1]\n    else\n        ident1 = 'HAVE_' + tuple[0].underscorify().to_upper()\n        ident2 = 'ENABLE_' + tuple[0].underscorify().to_upper()\n        cond = srcconf.get(ident1, 0) == 1 or srcconf.get(ident2, 0) == 1\n    endif\n\n    if cond\n        found_deps += tuple[0]\n    else\n        missing_deps += tuple[0]\n    endif\nendforeach\n\n# Generate config.h\nconfig_h = configure_file(\n        output: 'config.h',\n        configuration: srcconf)\n\nadd_project_arguments('-include', 'config.h', language: 'c')\n\n# Binaries.\ncmd_programs = []\nhook_programs = []\npublic_programs = []\ntemplate_scripts = []\ntest_programs = []\n\n# Includes.\nliblxc_includes = include_directories(\n    '.',\n    'src',\n    'src/include',\n    'src/lxc',\n    'src/lxc/cgroups',\n    'src/lxc/storage')\n\n# Our static sub-project binaries don't (and in fact can't) link to our\n# dependencies directly, but need access to the headers when compiling (most\n# notably seccomp headers).\nliblxc_dependency_headers = []\nforeach dep: liblxc_dependencies\n    liblxc_dependency_headers += dep.partial_dependency(compile_args: true)\nendforeach\n\n# Early sub-directories.\nsubdir('src/include')\nsubdir('src/lxc')\nsubdir('src/lxc/pam')\n\nliblxc_link_whole = [liblxc_static]\n\nliblxc = shared_library(\n    'lxc',\n    version: liblxc_version,\n    include_directories: liblxc_includes,\n    link_args: ['-DPIC'],\n    c_args: ['-DPIC'],\n    link_whole: liblxc_link_whole,\n    dependencies: liblxc_dependencies,\n    install: true)\n\nliblxc_dep = declare_dependency(\n    link_with: liblxc,\n    dependencies: liblxc_dependencies)\n\n# Rest of sub-directories.\nif want_apparmor\n    subdir('config/apparmor')\n    subdir('config/apparmor/abstractions')\n    subdir('config/apparmor/profiles')\nendif\nsubdir('config/bash')\nsubdir('config/etc')\nif want_install_init\n    subdir('config/init/common')\n    subdir('config/init/systemd')\n    subdir('config/init/sysvinit')\n    subdir('config/sysconfig')\nendif\nif want_selinux\n    subdir('config/selinux')\nendif\nsubdir('config/templates')\nsubdir('config/templates/common.conf.d')\nsubdir('config/yum')\nsubdir('doc')\nsubdir('doc/ja')\nsubdir('doc/ko')\nsubdir('doc/examples')\nsubdir('doc/rootfs')\nsubdir('hooks')\nif want_commands\n    subdir('src/lxc/cmd')\nendif\nif want_tools or want_tools_multicall\n    subdir('src/lxc/tools')\nendif\nsubdir('src/lxc/tools/include')\nsubdir('src/tests')\nsubdir('templates')\n\n# Pkg-config.\npkg_config_file = pkgconfig.generate(liblxc,\n    description: 'linux container tools',\n    version: version_data.get('LXC_VERSION'),\n    url: 'http://linuxcontainers.org',\n    libraries: '-lutil -lpthread -ldl',\n    libraries_private: pkgconfig_libs,\n)\n\n# Empty dirs.\nif want_state_dirs\n    install_emptydir(join_paths(localstatedir, 'cache', 'lxc'))\n    install_emptydir(join_paths(localstatedir, 'lib', 'lxc'))\nendif\n\n# RPM spec file.\nif want_spec\n    specconf = configuration_data()\n    specconf.set('LXC_VERSION_BASE', meson.project_version())\n    specconf.set('LXC_VERSION_BETA', version_data.get('LXC_VERSION_BETA'))\n    specconf.set('PACKAGE', meson.project_name())\n    specconf.set('LXC_DISTRO_SYSCONF', conf.get('LXC_DISTRO_SYSCONF'))\n\n    configure_file(\n        configuration: specconf,\n        input: 'lxc.spec.in',\n        output: 'lxc.spec',\n        install: false)\nendif\n\n# Build overview.\nstatus = [\n    '@0@ @1@'.format(meson.project_name(), meson.project_version()),\n\n    'Meson version:\t\t\t@0@'.format(meson.version()),\n\n    'prefix directory:\t\t@0@'.format(prefixdir),\n    'bin directory:\t\t\t@0@'.format(bindir),\n    'data directory:\t\t@0@'.format(datadir),\n    'doc directory:\t\t\t@0@'.format(docdir),\n    'include directory:\t\t@0@'.format(includedir),\n    'lib directory:\t\t\t@0@'.format(libdir),\n    'libexec directory:\t\t@0@'.format(libexecdir),\n    'local state directory:\t\t@0@'.format(localstatedir),\n    'sbin directory:\t\t@0@'.format(sbindir),\n    'sysconf directory:\t\t@0@'.format(sysconfdir),\n\n    'lxc cgroup pattern:\t\t@0@'.format(cgrouppattern),\n    'lxc init directory:\t\t@0@'.format(libexecdir),\n    'runtime path:\t\t\t@0@'.format(runtimepath),\n\n    'lxc default config:\t\t@0@'.format(lxcdefaultconfig),\n    'lxc global config:\t\t@0@'.format(lxcglobalconfig),\n    'lxc hook directory:\t\t@0@'.format(lxchookdir),\n    'lxc hook bin directory:\t@0@'.format(lxchookbindir),\n    'lxc rootfs mount directory:\t@0@'.format(lxcrootfsmount),\n    'log path:\t\t\t@0@'.format(lxclogpath),\n    'lxc path:\t\t\t@0@'.format(lxcpath),\n    'lxc template config:\t\t@0@'.format(lxctemplateconfdir),\n    'lxc template directory:\t@0@'.format(lxctemplatedir),\n    'lxc user network config:\t@0@'.format(lxc_user_network_conf),\n    'lxc user network database:\t@0@'.format(lxc_user_network_db)]\n\nalt_time_epoch = run_command('date', '-Is', '-u', '-d',\n                             '@@0@'.format(time_epoch), check: true).stdout().strip()\nstatus += [\n    'time epoch:\t\t\t@0@ (@1@)'.format(time_epoch, alt_time_epoch)]\n\nstatus += [\n    '',\n    'supported dependencies:\t@0@'.format(', '.join(found_deps)),\n    '',\n    'unsupported dependencies:\t@0@'.format(', '.join(missing_deps)),\n    '']\n\nstatus += [\n    '',\n    'supported headers:\t@0@'.format(', '.join(found_headers)),\n    '',\n    'unsupported headers:\t@0@'.format(', '.join(missing_headers)),\n    '']\n\nstatus += [\n    '',\n    'supported calls:\t@0@'.format(', '.join(found_syscalls)),\n    '',\n    'unsupported calls:\t@0@'.format(', '.join(missing_syscalls)),\n    '']\n\nstatus += [\n    '',\n    'supported types:\t@0@'.format(', '.join(found_types)),\n    '',\n    'unsupported types:\t@0@'.format(', '.join(missing_types)),\n    '']\n\nmessage('\\n     '.join(status))\n"
        },
        {
          "name": "meson_options.txt",
          "type": "blob",
          "size": 4.88671875,
          "content": "# -*- mode: meson -*-\n\n# Main options\n# was --cgroup-pattern in autotools\noption('cgroup-pattern', type: 'string', value: '',\n       description: 'CGroup pattern')\n\n# was --coverity-build in autotools\noption('coverity-build', type: 'boolean', value: 'true',\n       description: 'build for coverity')\n\n# was --{disable,enable}-examples in autotools\noption('examples', type: 'boolean', value: 'true',\n       description: 'build and install examples')\n\n# was --init-script in autotools\noption('init-script', type : 'array',\n       choices : ['systemd', 'sysvinit'], value : ['systemd'],\n       description : 'init script')\n\n# was --systemd-unidir in autotools\n# If set to \"\", the value is taken from the running systemd instance.\noption('systemd-unitdir', type : 'string', value: '',\n       description : 'systemd system unit directory')\n\n# was --{disable,enable}-liburing in autotools\noption('io-uring-event-loop', type: 'boolean', value: 'false',\n       description: 'Enable io-uring based event loop')\n\n# was --{disable,enable}-doc in autotools\noption('man', type: 'boolean', value: 'true',\n       description: 'build and install manpages')\n\n# was --{disable,enable}-pam in autotools\noption('pam-cgroup', type: 'boolean', value: 'false',\n       description: 'build and install the pam cgroup module')\n\n# was --{disable,enable}-tools in autotools\noption('tools', type: 'boolean', value: 'true',\n       description: 'build and install tools')\n\noption('tools-multicall', type: 'boolean', value: 'false',\n       description: 'build and install busybox style multicall binary')\n\n# was --{disable,enable}-commands in autotools\noption('commands', type: 'boolean', value: 'true',\n       description: 'build and install commands')\n\n# was --{disable,enable}-capabilities in autotools\noption('capabilities', type: 'boolean', value: 'true',\n       description: 'use capabilities')\n\n# was --{disable,enable}-seccomp in autotools\noption('seccomp', type: 'boolean', value: 'true',\n       description: 'use seccomp')\n\n# was --{disable,enable}-apparmor in autotools\noption('apparmor', type: 'boolean', value: 'true',\n       description: 'use apparmor')\n\n# was --{disable,enable}-openssl in autotools\noption('openssl', type: 'boolean', value: 'true',\n       description: 'use openssl')\n\n# was --{disable,enable}-selinux in autotools\noption('selinux', type: 'boolean', value: 'true',\n       description: 'use selinux')\n\n# was --{disable,enable}-tests in autotools\noption('tests', type: 'boolean', value: 'false',\n       description: 'build and install tests')\n\n# Paths\n# was --apparmor-cache-dir in autotools\noption('apparmor-cache-path', type: 'string', value: 'cache/lxc/apparmor',\n       description: 'AppArmor cache directory')\n\n# was --with-config-path in autotools\noption('data-path', type: 'string', value: 'lib/lxc',\n       description: 'Container storage directory')\n\n# was --with-doc-dir in autotools\noption('doc-path', type: 'string', value: 'doc/lxc',\n       description: 'Documentation directory')\n\n# was --with-global-conf in autotools\noption('global-config-path', type: 'string', value: 'lxc',\n       description: 'Global configuration directory')\n\n# was --log-path in autotools\noption('log-path', type: 'string', value: 'log/lxc',\n       description: 'Loging directory')\n\n# was --with-rootfs-path in autotools\noption('rootfs-mount-path', type: 'string', value: 'lxc/rootfs',\n       description: 'Container rootfs mount directory')\n\n# was --with-runtime-path in autotools\noption('runtime-path', type: 'string', value: '/run',\n       description: 'Main runtime directory')\n\n# was --with-usernic-conf in autotools\noption('usernet-config-path', type: 'string', value: 'lxc/lxc-usernet',\n       description: 'User network configuration file path')\n\n# was --with-usernic-db in autotools\noption('usernet-db-path', type: 'string', value: 'lxc/nics',\n       description: 'User network database file path')\n\noption('oss-fuzz', type : 'boolean', value : 'false',\n       description : 'build against oss-fuzz')\n\n# was --{disable,enable}-thread-safety in autotools\noption('thread-safety', type : 'boolean', value : 'true',\n       description : 'whether the build fails when thread-safe logging cannot be guaranteed')\n\n# was --{disable,enable}-memfd-rexec in autotools\noption('memfd-rexec', type : 'boolean', value : 'true',\n       description : 'whether to rexec the lxc-attach binary when attaching to a container')\n\noption('distrosysconfdir', type : 'string', value: '',\n       description: 'relative path to sysconfdir for distro default configuration')\n\noption('dbus', type: 'boolean', value: 'true',\n       description: 'use dbus')\n\noption('specfile', type : 'boolean', value: true,\n       description: 'whether to prepare RPM spec')\n\noption('install-init-files', type : 'boolean', value: true,\n       description: 'whether to install init files for local init (e.g. systemd units)')\n\noption('install-state-dirs', type : 'boolean', value: true,\n       description: 'whether to create state directories on install')\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}