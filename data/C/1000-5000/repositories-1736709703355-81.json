{
  "metadata": {
    "timestamp": 1736709703355,
    "page": 81,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "RfidResearchGroup/proxmark3",
      "stars": 4190,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".coverity.conf.sample",
          "type": "blob",
          "size": 0.8681640625,
          "content": "COVLOGIN=myemail@corp.com\nCOVTOKEN=aAbBcCdDeEfFgGhHiIjJkK\n# Toolchain available at https://scan.coverity.com/download\nCOVBINDIR=\"/opt/cov-analysis-linux64-2020.09/bin\"\n# Nickname included in scan description:\nNICKNAME=myself\nHOSTCC=gcc-10\nHOSTCXX=g++-10\nHOSTLD=g++-10\n\n# Do not change it:\nCOVDIR=cov-int\n\n# Depending if your kernel > 4.8.x, you might need to activate this to run Coverity executables\n# (but latest tools with kernel 5.2 run fine)\n#sysctl vsyscall=emulate\n\nexport PATH=\"$PATH:$COVBINDIR\"\n\nfunction pre_build_hook() {\n    # tmp dir will be /tmp/cov-$username/\n    # It's the good place if you need to redirect to elsewhere with a symlink\n    return 0\n}\n\nfunction post_build_hook() {\n    return 0\n}\n\nfunction pre_submit_hook() {\n    return 0\n}\n\nfunction post_submit_hook() {\n    # Clean up build folders?\n    rm -rf \"$COVDIR\"\n    echo \"Coverity build cleaned\"\n    return 0\n}\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.322265625,
          "content": "# .gitattributes\n\n# prevent binary files from CRLF handling, diff and merge:\nfpga/fpga.bit -crlf -diff\n*.bin -crlf -diff\n*.z -crlf -diff\n\n# Force LF\n*.c text=auto eol=lf\n*.cpp text=auto eol=lf\n*.h text=auto eol=lf\n*.lua text=auto eol=lf\n*.py text=auto eol=lf\n*.pl text=auto eol=lf\n*.dic text=auto eol=lf\nMakefile text=auto eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.583984375,
          "content": "# .gitignore\n# don't push these files to the repository\n\n.history\n.bash_history\n.bash_profile\n.bash_logout\n.bashrc\n.inputrc\n.profile\n*.log\n*.eml\n*.html\n*.o\n*.a\n*.d\n*.elf\n*.s19\n*.map\n*.bin\n*.dll\n*.moc.cpp\n*.z\n*.gz\n*.Td\n*.DS_Store\n*.exe\n*.dsym\nversion_pm3.c\n*.json\n*.old\n*.swp\n*.json.bak\n*.pyc\n*.bmp\noriginalitysig.csv\n\n# new build file for add-ons.\nMakefile.platform\nMakefile.platform.*\n!Makefile.platform.sample\n\n# Cache for detecting platform def changes\n.Makefile.options.cache\n\n# cmake\nCMakeFiles/\ndeps/\nclient/CMakeFiles/\nclient/deps/\nclient/build/\nclient/android/build/\nCMakeCache.txt\n*.cmake\n\n# Coverity\ncov-int/\n.coverity.conf\n\n# profiling\n*.gcno\n\n!client/resources/hardnested/*.bin\n!client/resources/hardnested_tables/*.z\nclient/src/ui/ui_image.h\nclient/src/ui/ui_overlays.h\nclient/deps/reveng/bmptst\n\nhardnested_stats.txt\nproxmark3\nproxmark3-flasher\nflasher\n!flasher/\nlua\nluac\ntools/fpga_compress/fpga_compress\ntools/cryptorf/cm\ntools/cryptorf/sm\ntools/cryptorf/sma\ntools/cryptorf/sma_multi\ntools/jtag_openocd/openocd_configuration\ntools/mfd_aes_brute/mfd_aes_brute\ntools/mfd_aes_brute/mfd_multi_brute\ntools/mfd_aes_brute/brute_key\n!tools/lena.bmp\n\nfpga/__build*\n\n# offcial dumps folder\ndumps/*\ntraces/*\n\n#client/*\nclient/traces/*\nclient/dumps/*\n*.ice\n*.new\n*- Copy.*\n/EF_*\n\nclient/lualibs/mfc_default_keys.lua\nclient/lualibs/pm3_cmd.lua\n# recompiled\nfpga_version_info.c\n\n# log / history\n.proxmark3/*\n\n# .tmp files are created during compilation\n*.tmp\n\n# VSCode files\n!.vscode/templates/*.json\n!.vscode/extensions.json\n!.vscode/tasks.json\n\n# docs\n!doc/*.json\n\n# local codeql\n_codeql*\n/codeql\n\n# Pyton venvs\nvenv/\n"
        },
        {
          "name": ".lsan_suppressions",
          "type": "blob",
          "size": 0.021484375,
          "content": "leak:libfontconfig.so\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 4.794921875,
          "content": "# https://git-scm.com/docs/gitmailmap\n# Reunificating commits done under various names and emails variants\n# Feel free to edit if you need to reunify your commits or change your display name\niceman1001 <iceman@iuse.se>\niceman1001 <iceman@iuse.se> <herrmann1001@gmail.com>\niceman1001 <iceman@iuse.se> <iceman1001@iuse.se>\niceman1001 <iceman@iuse.se> <40314039+RfidResearchGroup@users.noreply.github.com>\niceman1001 <iceman@iuse.se> <chris@rfidresearch.com>\nPhilippe Teuwen <phil@teuwen.org>\nPhilippe Teuwen <phil@teuwen.org> <phil-github@teuwen.org>\nPhilippe Teuwen <phil@teuwen.org> <yobibe@ef4ab9da-24cd-11de-8aaa-f3a34680c41f>\nOleg Moiseenko <olegmsn@gmail.com>\nOleg Moiseenko <olegmsn@gmail.com> <807634+merlokk@users.noreply.github.com>\nOleg Moiseenko <olegmsn@gmail.com> <Merlokbr@gmail.com>\nOleg Moiseenko <olegmsn@gmail.com> <Merlokbr@gmail.com@ef4ab9da-24cd-11de-8aaa-f3a34680c41f>\ntharexde <joerg.classen@bowsky.de>\ntharexde <joerg.classen@bowsky.de> <61853685+tharexde@users.noreply.github.com>\nmarshmellow42 <marshmellowrf@gmail.com>\nmarshmellow42 <marshmellowrf@gmail.com> <marshmellow42@users.noreply.github.com>\nMartin Holst Swende <martin@swende.se>\nMartin Holst Swende <martin@swende.se> <martin.holst@gmail.com@ef4ab9da-24cd-11de-8aaa-f3a34680c41f>\nMartin Holst Swende <martin@swende.se> <martin.holst@gmail.com>\nAve Ozkal <ave@ave.zone>\nmwalker33 <mwal5099@bigpond.net.au>\nmwalker33 <mwal5099@bigpond.net.au> <51802811+mwalker33@users.noreply.github.com>\ntcprst <nick.draffen@gmail.com>\ntcprst <nick.draffen@gmail.com> <nd@Nicks-MacBook-Pro.local>\nBjoern Kerler <info@revskills.de>\nBjoern Kerler <info@revskills.de> <6317772+bkerler@users.noreply.github.com>\nRoel Verdult <roel@libnfc.org>\nRoel Verdult <roel@libnfc.org> <roel@libnfc.org@ef4ab9da-24cd-11de-8aaa-f3a34680c41f>\nBrian Pow <brianpow@gmail.com>\nAdam Laurie <adam@algroup.co.uk>\nAdam Laurie <adam@algroup.co.uk> <adam@algroup.co.uk@ef4ab9da-24cd-11de-8aaa-f3a34680c41f>\nGator96100 <jupuerzi@gmx.at>\nHenryk Plötz <henryk@ploetzli.ch>\nHenryk Plötz <henryk@ploetzli.ch> <henryk@ploetzli.ch@ef4ab9da-24cd-11de-8aaa-f3a34680c41f>\npwpiwi <pwpiwi@users.noreply.github.com>\npwpiwi <pwpiwi@users.noreply.github.com> <micki.held@gmx.de>\npwpiwi <pwpiwi@users.noreply.github.com> <micki.held@gmx.de@ef4ab9da-24cd-11de-8aaa-f3a34680c41f>\nd18c7db <d18c7db@ef4ab9da-24cd-11de-8aaa-f3a34680c41f>\nThomas Sutter <suth@zhaw.ch>\nMarlin Sööse <30473690+msoose@users.noreply.github.com>\nVincent Ratiskol <vincent.ratiskol@github.com>\nVincent Ratiskol <vincent.ratiskol@github.com> <vincent.ratiskol@gmail.com>\nVincent Ratiskol <vincent.ratiskol@github.com> <vratiskol@users.noreply.github.com>\ndn337t <dn337t@gmail.com>\ndn337t <dn337t@gmail.com> <dn337t@gmail.com@ef4ab9da-24cd-11de-8aaa-f3a34680c41f>\nHector Martin <marcansoft@ef4ab9da-24cd-11de-8aaa-f3a34680c41f>\nbushing <bushing@ef4ab9da-24cd-11de-8aaa-f3a34680c41f>\nMatt Moran <mattmoran2000@gmail.com>\nMatthias Konrath <office@inet-sec.at>\nSlurdge <slurdge@slurdge.org>\nSlurdge <slurdge@slurdge.org> <slurdge@users.noreply.github.com>\niZsh <izsh@fail0verflow.com>\niZsh <izsh@fail0verflow.com> <izsh@fail0verflow.com@ef4ab9da-24cd-11de-8aaa-f3a34680c41f>\niZsh <izsh@fail0verflow.com> <izsh.f0f@ef4ab9da-24cd-11de-8aaa-f3a34680c41f>\nChristian Molson <christian@cmolabs.org>\nUli Heilmeier <uh@heilmeier.eu>\nAndreas Dröscher <github@anticat.ch>\nMcEloff <eloff@mail.ru>\nRay Lee <rayleesky@outlook.com>\nIkarus <ikarus4ever@web.de>\nSalvador Mendoza <salvador_m_g@msn.com>\nBogiton <34060135+bogiton@users.noreply.github.com>\nİlteriş Eroğlu <ilteris@asenkron.com.tr>\nSamy Kamkar <git@samy.pl>\nSamy Kamkar <git@samy.pl> <skamkar@ef4ab9da-24cd-11de-8aaa-f3a34680c41f>\nBlaine Forbort <b.forbort@gmail.com>\nDaniel Underhay <27876907+dunderhay@users.noreply.github.com>\nVictor <virb3e@gmail.com>\nÉdouard Lafargue <edouard@lafargue.name>\nÉdouard Lafargue <edouard@lafargue.name> <edouard@lafargue.name@ef4ab9da-24cd-11de-8aaa-f3a34680c41f>\nAnže Jenšterle <anze@anze.xyz>\nAnže Jenšterle <anze@anze.xyz> <anze@anze.dev>\nDXL <64101226@qq.com>\nColin J. Brigato <colin@brigato.fr>\ncyberpunk-re <tiagor2010@gmail.com>\nAkif Dinc <akif@dinc.org>\nRyan Saridar <8403417+VortixDev@users.noreply.github.com>\nGabriele Gristina <gabriele.gristina@gmail.com>\nGabriele Gristina <gabriele.gristina@gmail.com> <matrix@users.noreply.github.com>\nGerhard de Koning Gans <dekoninggans@gmail.com>\nGerhard de Koning Gans <dekoninggans@gmail.com> <dekoninggans@gmail.com@ef4ab9da-24cd-11de-8aaa-f3a34680c41f>\nSébastien Dudek <sebastien.dudek@penthertz.com>\nSébastien Dudek <sebastien.dudek@penthertz.com> <fluxius@gmail.com>\nSébastien Dudek <sebastien.dudek@penthertz.com> <sebastien_dudek@trendmicro.com>\nNahuel Grisolia <nahuel@cintainfinita.com.ar>\nNahuel Grisolia <nahuel@cintainfinita.com.ar> <nahuelgrisolia@gmail.com>\nWinds <lalamy@yandex.ru>\nWinds <lalamy@yandex.ru> <60715874+Windslab@users.noreply.github.com>\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "AUTHORS.md",
          "type": "blob",
          "size": 1.740234375,
          "content": "Initial author of the Proxmark3 code is Jonathan Westhues, starting in August 2005.  \nHis latest release was done in May 2007 and is available [here](https://cq.cx/dl/proxmark3-may23-2007.zip) (copy available [here](http://proxmark.org/files/J.Westhues/)).\n\nInitial copyright notice is therefore:  \nCopyright (C) 2005-2007 Jonathan Westhues\n\nSince then, each contribution is under the copyright of its respective author.\n\nA few releases were done by the Proxmark3 community between 2007 and March 2009 before using version control.  \nThe last release which served as basis for version control, under SVN then migrated to Git, was the `20090306_ela` release by Edouard Lafargue. See the first commit of this repository.\n\nTherefore, only the following copyright notices are left untouched in the corresponding files:\n- copyright notices present in the `20090306_ela` release\n- copyright notices of code borrowed from other projects\n- copyright notices of standalone modes initial authors\n- copyright notices of dependencies (client/deps, common)\n\nSince then, copyright of each contribution is tracked by the Git history. See the output of `git shortlog -nse` for a full list or `git log --pretty=short --follow <path/to/sourcefile> |git shortlog -ne` to track a specific file. See also [the Contributors page on Github](https://github.com/RfidResearchGroup/proxmark3/graphs/contributors) and [this Gource animation](https://www.youtube.com/watch?v=N7vpk0iIq9s) retracing the commits history from March 2009 until January 2022.\n\nA [mailmap](.mailmap) is maintained to map author and committer names and email addresses to canonical names and email addresses.\n\nIf by accident a copyright was removed from a file and is *not* directly deducible from the Git history, please submit a PR.\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 140.876953125,
          "content": " Change Log\nAll notable changes to this project will be documented in this file.\nThis project uses the changelog in accordance with [keepchangelog](http://keepachangelog.com/). Please use this to write notable changes, which is not the same as git commit log...\n\n## [unreleased][unreleased]\n- Changed `lf hitag chk` - added key counter, client side abort and minor delay (@iceman1001) \n- Added `hf seos sam` - Added support for HID SAM SEOS communications (@jkramarz)\n- Changed (extended) area accessible by spiffs into last page of FLASH (@piotrva)\n- Changed flash-stored key dictionaries (Mifare, iClass, T55XX) and T55XX configurations to SPIFFS files (@piotrva)\n- Changed `lf em 410x sim` to use default gap value of 0 and extended help (@piotrva)\n- Changed `hf 14a info` - now identifies MIAFRE Duox (@iceman1001)\n- Added `hf iclass trbl` to perform tear-off attacks on iClass (@antiklesys)\n- Added support for connection to host device in all Docker envs (@doegox)\n- Changed `hf 15 info` to show all type matches and check ST25TVxC signature (@doegox)\n- Added initial support for ST25TN and its signature verification (@doegox)\n- Changed originality checks handling to refactor code and pk data (@doegox)\n- Changed `uniq.yaml` workflow to be case-insensitive (@iceman1001)\n- Fixed `mem load --mfc` not erasing all SPI flash blocks after extending to 4095 keys (@piotrva)\n- Changed extended area for Mifare keys in SPI flash to hold 4095 keys (@piotrva)\n- Fixed DESFire D40 secure channel crypto (@nvx)\n- Fixed `hf mfp info` fix signature check on 4b UID cards (@doegox)\n- Automatically set maximum read/write block when using predefined types in `hf_mf_ultimatecard` script (@piotrva)\n- Changed SPI flash detection to calculate the size instead of table lookup, updated spi_flash_decode.py script with more ICs (@ANTodorov)\n- Fixed `hf/lf tune` segfault when called from script (@doegox)\n- Added option to set and get maximum read/write block number using `hf_mf_ultimatecard` script (@piotrva)\n- Added JEDEC information for SPI flash W25Q64JV (@ANTodorov)\n- Added special iclass legacy config cards in `hf iclass configcard` (@antiklesys)\n- Added simulation function to `hf iclass legrec` (@antiklesys)\n- Added keys from Momentum firmware projects. (@onovy)\n- Added Dutch Statistics Agency default key (@eagle00789)\n- Changed `hf mf autopwn` - now allows for custom suffix (@zxkmm)\n\n## [Orca.4.19552][2024-11-22]\n- Fixed `hf_legic.lua` - removed bit32 commands from the script (@diorch1968)\n- Fixed `mem spiffs tree` - now show correct symlink name (@ANTodorov)\n- Fixed `mem spiffs wipe` - reported file/link names is now correct  (@ANTodorov)\n- Updated atrs list (@iceman1001)\n- Added support for a new KDF (@iceman1001)\n- Added Inner range aid and mad entries (@iceman1001)\n- Changed `mem spiffs` - Use all available space in SPI flash (@ANTodorov)\n- Fixed `hf mf sim` - wrong size check in MifareSim (@iceman1001)\n- Fixed `hf mf sim` not to respond to authentication attempts for sectors out of bound for selected Mifare type (@piotrva)\n- Added option to build against non-default python3 with CMake as well (@doegox)\n- Added option to build against non-default python3 with Makefile (@ANTodorov)\n- Changed `hf 14a info` `hf mf info` - now detects FM1216-137 CPU cards (@iceman1001)\n- Changed `hf iclass configcard` - expanding the list of available options and functionalities (@antiklesys)\n- Fixed `intertic.py` - missing comma in array (@iceman1001)\n- Changed `hf iclass legrec` - improved algorithm leveraging reduced entropy from hash0 constraints (@antiklesys)\n- Fixed `hf iclass configcard` when generating elite or keyroll elite configcards for Rev.C legacy readers (@antiklesys)\n- Changed `hf mf c*` - now accepts a --gdm flag to write using uscuid/gdm 20/23 alt magic wakeup (@nvx)\n- Changed `pm3_console()` - Python/Lua/C: replace `passthru` by `capture` and `quiet` (@doegox)\n- Fixed `hf iclass list` - annotation crc handled better (@iceman1001)\n- Fixed `hf_mf_uscuid_prog.lua` - bad divisions and code style fixes (@iceman1001)\n- Changed `hf iclass info` - now checks for cards silicon version (@antiklesys)\n- Changed `hf iclass legrec` - updated script implementation to ensure functionality (@antiklesys)\n- Added recovered iclass custom key to dictionary (@antiklesys)\n- Added support for all Hitag S response protocol mode (@douniwan5788)\n- Fixed `hf_young` - flags declaration was missing a semicolon (@jakkpotts)\n- Changed `hf mf sim` - add option to allow key b to be used even if readable (@doegox)\n- Changed `data num` - outputed binary strings are now properly zero padded (@iceman1001)\n- Changed `hf iclass info` - now tries default keys and decode if legacy (@iceman1001)\n- Changed `hf iclass chk` - now loads dictionary file by default (@iceman1001)\n- Added Makefile variable `DONT_BUILD_NATIVE` in mfd_aes_brute Makefile to easify downstream package (@Cryolitia)\n- Auto detect whether compile option `march=native` is supported for mfd_aes_brute Makefile\n- Changed `hf mf sim` - support data-first and nested reader attacks (@doegox)\n- Fixed `lf search` and `lf em 4x50 rdbl -b <blk>` does not coredump reading EM4450 tag (@ANTodorov)\n- Fixed flashing - client doesnt fail every other flash attempt (@iceman1001)\n- Changed `pref show` - add option to dump as JSON (@doegox)\n- Changed `mf_backdoor_dump.py`- use faster ecfill/eview (@doegox)\n- Changed `hf mf ecfill` - wait for execution and return status (@doegox)\n- Changed `hf 14a reader` - added option to wait for a card (@doegox)\n- Changed `hf mf ecfill` - added support for quick dump via backdoor auth (@doegox)\n- Fixed `hf mf restore` - really skip strict ACLs unless --force (@doegox)\n- Added `hf 14b setuid` - set uid on magic 14b tag (@iceman1001)\n- Changed `hf 14b info` - now detect Tiananxin (@iceman1001)\n- Fixed `lf em 410x brute` - better filehandling and memory handling (@iceman1001)\n- Changed split PacketResponseNG status into status and reason (@douniwan5788)\n- Added `spi_flash_decode.py` - helper script to decode JEDEC data (@ANTodorov)\n- Changed `hw status` - now show SPI flash JEDEC Manufacturer ID and Device ID in output (@ANTodorov)\n- Changed `hf iclass configcards` to support generating config cards using a different key than the default k0 as the card's key (@antiklesys)\n- Added maur keys (@iceman1001)\n- Fixed `hf mfu pwdgen` for the 7 byte UID (@ANTodorov)\n- Added `hf iclass unhash` command to reverse an iclass diversified key to hash0 pre-images (@antiklesys)\n- Changed `hf 14a raw` - now supports crypto  (@doegox)\n- Changed `hw version` command to print LUA and Python versions (@jmichelp)\n- Updated LUA to v5.4.7 which adds utf-8 support (@jmichelp)\n- Moved `lf hitag sim --hts` -> `lf hitag hts sim` (@douniwan5788)\n- Removed `lf hitag read/write --hts` (@douniwan5788)\n- Changed `lf search` - it now tries to read and decode paxton id (@iceman1001)\n- Changed `lf search` - to identify hitag2/s/82xx in chipset detection to preserve their EM4100 or other outputs (@iceman1001)\n- Added `lf hitag hts reader` - to act as a HitagS / 82xx reader (@iceman1001)\n- Changed `lf hitag hts write` -> `lf hitag hts wdbl` to fit rest of client command names (@iceman1001)\n- Changed `lf hitag hts read` -> `lf hitag hts rdbl` to fit rest of client command names (@iceman1001)\n- Changed `hf mf info` - Better handling when printing ATS (@iceman1001)\n- Changed to also try the MFC_B key when extracting memory (@iceman1001)\n- Fixed `make -j check`  Thanks @elboulangero  (@iceman1001)\n- Added support for 8268/8310 (@douniwan5788)\n- Changed scripting string params to accept 1024 chars, Thanks @evildaemond! (@iceman1001)\n- Added detection for FM11NT021 (@iceman1001)\n- Added detection of a magic NTAG 215 (@iceman1001)\n- Fixed hardnested on AVX512F #2410 (@xianglin1998)\n- Added `hf 14a aidsim` - simulates a PICC and allows you to respond to specific AIDs and getData responses (@evildaemond)\n- Fixed arguments for `SimulateIso14443aTag` and `SimulateIso14443aInit` in `hf_young.c`, `hf_aveful.c`, `hf_msdsal.c`, `hf_cardhopper.c`, `hf_reblay.c`, `hf_tcprst.c` and `hf_craftbyte.c` (@archi)\n- Added `mf_backdoor_dump.py` script that dumps FM11RF08S and similar (Mifare Classic 1k) tag data that can be directly read by known backdoor keys. (@Aptimex)\n- Added keys for Metro Q transit cards in Huston, TX. (@Anarchothulhu)\n- Added keys from MifareClassicTool and Flipper projects. (@onovy)\n\n## [Backdoor.4.18994][2024-09-10]\n- Changed flashing messages to be less scary (@iceman1001)\n- Fixed docker containers and their documentation (@doegox)\n- Fixed `hf ict` - buffer overflow (@doegox)\n- Fixed `hf felica raw -s` - dont check crc for select tag response,  thanks @RebornedBrian! (@iceman1001)\n- Added a multi-threaded of ht2crack2search (@iceman1001)\n- Fixed ISO14443a bounds-checking because @doegex found cards not following ISO14443a when fuzzed (@iceman1001)\n- Added `mfkey32nested`: recovering partial nested authentication with known nT (@doegox)\n- Added support for dumping FM11RF08S data at once (@doegox)\n- Added support for collecting all FM11RF08S nT/{nT}/par_err at once (@doegox)\n- Fixed `hf mfu wrbl` - compatibility write only writes 4 bytes. Now handled correctly (@iceman1001)\n- Changed `hf mfu info` - better magic tag detection (@iceman1001)\n- Added ELECTRA pattern decoding in `lf search` (@CiRIP)\n- Firmware size optimization, skipping unused FPGA bitstreams (@douniwan5788)\n- Added pretty Hitag S config parsing (@CiRIP)\n- Moved Hitag S operations into separate submenu: `lf hitag s` (@CiRIP)\n- Added MFC keys for Sofia public transport cards (@user890104)\n- Added `lf em 410x clone --hs` clone EM410x ID to Hitag S/8211 (@douniwan5788)\n- Fixed Hitag S read/write in plain mode (@douniwan5788)\n- Fixed fm11rf08s script for non-4B UID (FM11RF08S-7B) (@Foxushka)\n- Fixed missing require of ansicolors in `lf_hid_bulkclone_v2.lua` script (@whiteneon)\n- Added `lf_t55xx_reset.lua` - a script to aid in quickly resetting t55xx chips (@whiteneon)\n- Added more fingerprinting in `hf mf info` (@doegox)\n- Added --issue and (--emu)lator support to `hf iclass encode` command (@micsen)\n- Added custom CTF Wiegand format from Defcon32 with comments (@micsen)\n- Added native output grabbing for Python and Lua: less hacky than `output_grabber.py`, should work on ProxSpace as well (@doegox)\n- Changed `hf mf chk/fchk`: added option `--no-default` to skip loading the usual ~61 hardcoded keys (@doegox)\n- Fixed `hf mf wipe` to detect properly write errors (@doegox)\n- Fixed `hf mf fchk` which was leaving the RF field on when interrupted by keyboard (@doegox)\n- Changed file saving: do not prepend with default path if given path is an absolute path (@doegox)\n- Added few tools to crack static encrypted nonce tags such as FM11RF08S (@doegox)\n- Added `hf mf isen` for analyzing some static encrypted nonce tags (@doegox)\n- Changed `hf mf rdbl/wrbl/rdsc/nested` to support extended authentication commands (@doegox)\n- Changed `hf mf fchk` to allow cracking a single key and show progress info (@doegox)\n- Changed `trace list -t mf` to add support for extended authentication commands (@doegox)\n- Fixed `output_grabber.py` to allow several calls in a script, make it robust to emoji and make it available to scripts (@doegox)\n- Changed `validate_prng_nonce` for a much faster version (@doegox)\n- Changed standalone mode HF_MATTYRUN - support more card sizes, user dictionaries, improved emulation (@michaelroland)\n- Changed `hf iclass dump --ns` - now supports the nosave flag (@iceman1001)\n- Fixed write check in hitag2crack2 buildtables (@mwalker33)\n- Fixed breaking of client when trying to load a non-supported .picopass file (@iceman100)  Thanks to Jump for suggested fixes!\n- Changed `mf_nonce_brute` tool to handle the odd case of multiple key candidates (@iceman1001)\n- Fixed a bad memory erase (@iceman1001)\n- Fixed BT serial comms (@iceman1001)\n- Changed `intertic.py` - updated and code clean up (@gentilkiwi)\n- Added `pm3_tears_for_fears.py` - a ISO14443b tear off script by Pierre Granier\n- Added new t55xx password (002BCFCF) sniffed from cheap cloner (@davidbeauchamp)\n- Fixed 'hf 14b sim' - now works (@michi-jung)\n- Added VB6 Rng for iclass elite keys `hf iclass lookup` and `hf iclass chk` functions by porting @bettse work in the Flipper Zero Picopass App (@antiklesys)\n- Added MFC Key for swimming pool cards in Reykjavík Iceland (@dandri)\n- Added key for Orkan keyfobs (@dandri)\n- Added key for Atlantsolía keyfobs (@dandri)\n- Added `hf iclass legbrute` this function allows to bruteforce 40/64 k1 bits of an iclass card to recover the raw key used(@antiklesys).\n- Added `hf iclass legrec` this function allows to recover 24/64 k1 bits of an iclass card (@antiklesys).\n- Added script for quick WSL-2 environment initialization every reboot (@dhuuthang).\n## [Aurora.4.18589][2024-05-28]\n- Fixed the pm3 regressiontests for Hitag2Crack (@iceman1001)\n- Changed `mem spiffs tree` - adapted to bigbuff and show if empty (@iceman1001)\n- Changed `lf hitag info` - now tries to identify different key fob emulators (@iceman1001)\n- Added `lf hitag reader` - act as a Hitag2 reader (@iceman1001)\n- Fixed `lf hitag crack2` - now works. (@iceman1001)\n- Fixed wrong use of free() in desfire crypto on arm src,  thanks @jlitewski! (@iceman1001)\n- Added `lf em 4x70 calc` - calculate `frn`/`grn` for a given `key` + `rnd`\n- Fixed `hf 15 dump` memory leaks (@jlitewski)\n- Changed `hf search` - topaz is detect before ISO14443a and commented out WIP ICT code path (@iceman1001)\n- Fixed `hf search` - where felica reader now doesnt timeout and give wrong response (@iceman1001)\n- Fixed overflow in deps/jansson library (@iceman1001)\n- Added `lf hitag crack2` -  WIP.  Trying to add the second attack vector against Hitag2 (@iceman1001)\n- Changed `hf 14b reader --plot` - made the anticollision signal trace download optional (@iceman1001)\n- Added `lf_hitag_crypto.trace` - trace file of a complete read out of a Hitag2 in crypto mode (@iceman1001)\n- Fix `lf cmdread` - uninitialised memory usage (@iceman1001)\n- Changed `hf st info` - now tries to check signature if available (@iceman1001)\n- Added `hf 14b mobib` - try to read out all data from a MOBIB card (@iceman1001)\n- Added `hf 14b calyso` - try to read out all data from a Calypso card (@iceman1001)\n- Changed the graphbuffer handling implementation (@HACKhalo2)\n- Changed `lf hitag dump --nrar` - now supports attack 1 from \"gone in 360 seconds\" paper. Thanks @kevsecurity! (@iceman1001)\n- Added `lf hitag selftest` - converted from RFIDLers selftest (@iceman1001)\n- Added `lf hitag chk` - dictionary attack against card (@iceman1001)\n- Added `lf hitag lookup` - verify collected challenges aginst dictionary (@iceman1001)\n- Updated windows workflow to use latest setup-wsl script (@iceman1001)\n- Added a micro second clock in the client (@iceman1001)\n- Fix `hf mfdes read` - buffer overflow when reading large files (@iceman1001)\n- Changed `hf 15 csetuid` - now supports gen2 command. Thanks @whywilson! (@iceman1001)\n- Changed `hf mfp info` - to identify Ev2 (@iceman1001)\n- Updated Graph Markers implementation to include temporary markers and marker labels (@HACKhalo2)\n- Updated to SWIG 4.2.1 (@iceman1001)\n- Removed `data bin2hex` - replaced by `data num`  (@iceman1001)\n- Removed `data hex2bin` - replaced by `data num`  (@iceman1001)\n- Fixed `lf em 410x clone --electra` - now writes properly (@iceman1001)\n- Changed waiting for device loops. More stable experience (@iceman1001)\n- Changed client now handles CTRL-C and saves history if using READLINE (@iceman1001)\n- Changed `hf mf *` - printing of keys if MFC EV1 added extra explaination (@iceman1001)\n- Changed `hf mf ginfo` - now supports decoding of user supplied configuration block (@iceman1001)\n- Changed `data load` - now shows loaded number as comma printed. (@iceman1001)\n- Updated `/tools/hitag2crack/common/OpenCL-Headers/CL` with latest from KhronosGroup github page (@iceman1001)\n- Fixed `lf hitag list` - improved HITAG2 protocol annotation (@iceman1001)\n- Added AIDs `002000` and `FF30FF` from Metrolinx Presto Card (@RunTheBot)\n\n## [Zenith.4.18340][2024-03-20]\n - Changed `hf mf info` - some detections (@iceman1001)\n - Changed `hf mf autopwn` - minor fix (@iceman1001)\n - Fixed `lf em 4x70 recover` - no more compiler warning (@iceman1001)\n - Added `hf mfu wipe` - filles card memory with zeros (@iceman1001)\n - Added `lf em 4x70 autorecover` - writable ID48 tags now have automatic key recovery (@henrygab)\n - Set max write blocks to 251 in hf_mf_ultimatecard before writing version/signature in NTAG 21X (@antgamdia)\n - Changed HF_UNISNIFF standalone mode, output and also sniffs iclass too (@iceman1001)\n - Changed `hw standalone` - added `-b` param to control HF_UNISNIFF from client (@iceman1001)\n - Changed `mem spiffs dump` - now if `-t` and `-d` it will also save to file (@iceman1001)\n - Fixed `hf mf sim` - key type identification (@iceman1001)\n - Added `lf em 4x70 recover` - recovery the second half of an id48 key (@henrygab)\n - Changed `hf emrtd info` - Added EG_DG7 viewing (@iceman1001)\n - Changed `hf mf dump` - it now also prints the dumped memory (@franscesco-scar)\n - Changed NDEF parsing to show mime images (@iceman1001)\n - Fixed `hf mf ndefformat` - now correctly handles MADv2 when formatting (@iceman1001)\n - Fixed `hf 14a info` - magic detection works again and better hint detection (@iceman1001)\n - Changed `hf 14b wrbl` - now uses SRIX 4k as default tag (@Sonic803)\n - Changed `hf 14b reader` - now shows data plot (@Sonic803)\n - Added `hf 14b restore` - new command to restore dump files to a SR512/4k card (@Sonic803)\n - Changed led show / leds detection for PM3 Easy devices (@francesco-scar)\n\n## [DEFCON is Cancelled.4.18218][2024-02-18]\n - Fixed `hf mf autopwn` - now correctly attempts static nested attack (@Sonic803 and @francesco-scar)\n - Changed `hf fudan dump --ns` - now supports nosave flag (@iceman1001)\n - Added `lf em 410x --electra` - adds two extra blocks. Thanks jareckib (@iceman1001)\n - Changed `hf mfu info` - now identifies UL-AES correct (@iceman1001)\n - Changed `hw detectreader` - Detect both LF and HF at the same time (@wh201906)\n - Changed `hf mfu info` - should not try pwd against a UL-AES (@iceman1001)\n - Fixed `hf mfu info` - tag type identification now properly handles 64bits (@iceman1001)\n - Changed `hf st info` - reworked the output (@iceman1001)\n - Rename `smart relay` to `smart pcsc` and add support for contact interface (@gm3197)\n - Updated ATR list (@iceman1001)\n - Changed `hf mfu keygen -b` - now takes a block number (@iceman1001)\n - Fixed `hf mfu info` - now tries pwdgens better (@iceman1001)\n - Changed `hf mf info` - now also checks sector 1 (@iceman1001)\n - Changed `lf em 410x` - now allows for card number zero.  thanks @dangerousthings !  (@iceman1001)\n - Changed `liblua` - now bugfixes applied and current version is v.5.2.4 (@iceman1001)\n - Changed `lf em 4x50 dump --ns` - now supports the nosave flag (@iceman1001)\n - Added `lf em 4x50 view` - view on Em4x50 dump files (@iceman1001)\n - Changed the magic card detection. It now acts as flags (@iceman1001)\n - Added `hf ict` - skeleton commands in preperation (@iceman1001)\n - Added `lf hitag eview` - now supports viewing of emulator memory (@iceman1001)\n - Added `lf hitag view` - now supports viewing of dump files (@iceman1001)\n - Changed `lf hitag dump --ns` - now support nosave flag (@iceman1001)\n - Added `hf xerox rdbl` - read block of a Fuji/Xerox tag (@iceman1001)\n - Added a xerox trace file,  thanks @jeroenSteen,  (@iceman1001)\n - Fixed `lf em 4x05 view` - now loads JSON files properl (@iceman1001)\n - Added `hf mf gdmparsecfg` command to decode the GDM/USCUID config block (@nvx)\n - Changed `hf mf gdmcfg` show the parsed config on read (@nvx)\n - Changed `hf mf gdmcfg/gdmsetcfg` commands to support Gen1a and GDM Alt magic wakeups (@nvx)\n - Fixed `hf 15 writedsfid` - long wait after write and dont force -o flag (@iceman1001)\n - Changed `hf 14a sniff -i` - now supports the interactive flag (@iceman1001)\n - Added `HF_15SIM` standalone mode that dump then simulate iso15 tags (@lnv42)\n - Changed `iso15 simulation`, reworked, added support for lot of features (@lnv42)\n - Changed `hf 15 sniff` quality while low signal (@lnv42)\n - Fixed `hf sniff` broken since 17ab86c52 (@nvx)\n - Added `--dumpmem` to proxmark3 client for memory dumping to file (@martian01010)\n - Changed `hw readmem` to allow larger reads, write to file and better hex viewer (@martian01010)\n - Added `CMD_READ_MEM_DOWNLOAD` and `CMD_READ_MEM_DOWNLOADED` to osimage and bootloader (@martian01010)\n - Changed `hf mfu info` - now correctly identifies NTAG I2C tags (@icemann1001)\n - Changed `hf 14b dump/view` - now supports `-z` flag for dense output (@iceman1001)\n - Changed `hf xerox dump/view` - now supports `-z` flag for dense output (@iceman1001)\n - Changed `hf mfu dump/view/eview` - now supports `-z` flag for dense output (@iceman1001)\n - Added `data crypto` to encrypt and decrypt data in the proxmark client using built-in methods (@team-orangeBlue)\n - Changed `hf tune` and `lf tune` - Added an option to show statistical data after tuning (@wh201906)\n - Changed `lf idteck demod --raw` - now supports raw hex string to decode (@iceman1001)\n - Changed `lf em 410x demod --bin` - now supports a raw binary string to demodulate. (@iceman1001)\n - Changed `lf em 4x05 info` - use `-v` verbose flag to see protection bits (@iceman1001)\n - Changed `lf em 4x05 info` - output now shows detailed bits (@iceman1001)\n - Added `lf em 4x05 view` - now supports viewing of dump files (@iceman1001)\n - Changed `hf 15 eview/view` - now supports `-z` flag for dense output (@iceman1001)\n - Changed `hf mf cload` - now supports specifying tag size (@augustozanellato)\n - Added `hf 14b raw --pico` - now supports picopass anticollision over ISO14443-B (@iceman1001)\n - Changed `hf 14b *` - worked apdu and comms. Improved output. Uses NG packets (@iceman1001)\n - Fixed `data manrawdecode` - now copy to demodbuf even if em4100 decode fails (@iceman1001)\n - Changed `nfc decode` - now supports Android Managed Provision NDEF message decoding (@iceman1001)\n - Changed `hf_cardhopper` - Allow button presses to break, handle non-zero CID from reader by relaying RATS and improving PPS and WTX handling, more reliably cook ATS, ignore client packets on serial line (@nvx)\n - Fixed `data diff` - client no longer crashes when using short widths on long filenames (@iceman1001)\n - Added `hf 15 wipe` - fills card memory with zeros (@iceman1001)\n - Changed `hf xerox info` - now prints some part info (@iceman1001)\n - Added `hf xerox view` - view dump files of fuji/xerox tags (@iceman1001)\n - Changed `hf 15 findafi` - improved the params (@iceman1001)\n - Changed `hf 15 rdbl/rdmulti/dump` - should handle 4 vs 8 bytes block sizes in cards (@iceman1001)\n - Changed `hf 15 *` - all 15 commands now uses NG packets (@iceman1001)\n - Changed `hf 15 raw` - now supports `-k` keep field on and `-s` select (@iceman1001)\n - Changed `prefs set client.debug` - now also toggles the client side APDU logging (@iceman1001)\n - Changed `hf 14b sriwrbl` - now supports `--force` to override block checks. Thanks @gentilkiwi for the idea! (@iceman1001)\n - Changed `hf 14b sriwrbl` - now tries to verify the write (@iceman1001)\n - Changed `hf 14b apdu` - now supports tearoff (@iceman1001)\n - Fixed `hf 14b raw` - fixed a potential write out of bounds. (@iceman1001)\n - Fixed `hf 14b` commands got some serious overhaul and love. Better return values and packet handling (@iceman1001)\n - Changed `hf waveshare` - image is automatically scaled and cropped to match panel size (@socram8888)\n - Changed `hf waveshare` - image loading and processing is now done using [GDlib](https://github.com/libgd/libgd) (@socram8888)\n - Added trace of sniffed SEOS traffic between reader and card (@iceman1001)\n - Change `hf seos list` - print crc and annotate better (@iceman1001)\n - Added troubleshooting entry - ARM architecture error (@francis2054)\n - Fixed `lf pyramid sim` - wrong parameter handling (@iceman1001)\n - Fixed bootloader - Ignore jitters when pressing the button (@wh201906)\n\n## [Steamboat Willie.4.17768][2024-01-03]\n - Changed `mem spiffs dump -t` - now supports downloading direct into trace buffer (@hazardousvoltage)\n - Changed `hf search` - added hints for all HF protocols we search for (@iceman1001)\n - Changed `hf search` - added hint for iClass (@bettse)\n - Changed `hf 14a apdu` - It now uses the FWI and SGFI values from the ATS to determine an appropriate timeout (@nvx)\n - Added a thread to check when device comes online again. It will connect and update prompt (@iceman1001)\n - Changed CLI offline prompt - replaces the old prompt when offline is detected (@iceman100)\n - Changed `hf mf info` - it now uses found keys to try identify Gen2 cards (@iceman1001)\n - Changed `hf 14a info` - disabled debug logging while performing the magic tests (@iceman1001)\n - Changed `hf 14a info` - magic detection to better detect different GDM/USCUID configurations and improved Gen2/CUID detection when default keys are used (@nvx)\n - Changed `hf_cardhopper` - standalone mode to allow running over the internal Proxmark3 USB-CDC serial port (@nvx)\n - Fixed CLI prompt - Update connection type prompt after running `hw connect` (@wh201906)\n - Changed `uart_receive()` - Check if TCP connection is lost (@wh201906)\n - Change `data detectclock` - now tries all clocks if called w/o any params (@iceman1001)\n - Changed `lf search -1u` - improved the autocorrelation detection for unknown signals (@iceman1001)\n - Fixed `hf emrtd dump` stack smashing on device side (@iceman1001)\n - Changed `dbprint` on device side to use max 200 chars strings. (@iceman1001)\n - Fixed bootloader to correctly clear bss segment on start. Fixes USB serial number sometimes not working in the bootloader (@nvx)\n - Changed `notes on downgrade attacks` - reworked the original text follow repo style (@iceman1001)\n - Added `hf mf info` command and static encrypted nonce detection (@merlokk)\n - Added Saflok KDF - generate MFC keys (@h1kari)\n - Changed `lf fdx demod` - now raw bytes shows all data (@iceman1001)\n - Changed `data num` - now can print reversed and inverse (@iceman1001)\n - Fixed `hf mf sim -ix` never returning console (@datatags)\n - Added standalone mode `hf_unisniff` combining 14a/14b/15 sniffing with extra flash save options (@hazardousvoltage)\n - Added encryption and other SL3 functions for Mifare Plus - more to come (@team-orangeBlue)\n - Fixed the corrupted data in real-time sampling (@wh201906)\n - Added a slider in the plot window for navigation (@wh201906)\n - Fixed client build bug with Python 3.12 (@wh201906)\n - Fixed `ExchangeAPDUSC()` in `cmdsmartcard.c` to prevent client crash (@wh201906)\n - Added real-time LF sampling support (@wh201906)\n - Changed `hf 14a info` - now reads and prints QL88 sigantures (@iceman1001)\n - Fixed `hf iclass dump` truncating AA2 blocks and improve reliability (@nvx)\n - Added some info about UMC in \"doc/magic_cards_notes.md\" (@temskiy)\n - Added `hw bootloader` to reboot to the bootloader mode (@wh201906)\n\n## [Faraday.4.17511][2023-11-13]\n - Fixed Python support of `experimental_client_with_swig` (@doegox)\n - Use proxmark3 as a generic smartcard reader with other software with `smart relay` (@gm3197)\n - Added `tools\\mfkeys\\staticnested` - program to recover static nested keys (@iceman1001)\n - Added `pm3_gen_dictionary.py` - python script to extract and save all keys from MFC dump files. (@iceman1001)\n - Changed `hf mfu info` - now detect MIFARE Ultralight AES (@iceman1001)\n - Changed `hf mf autopwn` - now supports multiple user supplied keys (@iceman1001)\n - Added `hf mf gchpwd` command for change Gen4 GTU card access password (@merlokk)\n - Added `--ms` option in `hw status` to specify the timeout of connection speed test (@wh201906)\n - Added `hf mf ginfo` command for get info about Gen4 GTU configuration (@merlokk)\n - Added support for loading Flipper PICOPASS dump files (@iceman1001)\n - Fixed unknown chip identification (@jmichelp)\n - Fixed `nfc decode` - now properly handles MFU dump files (@iceman1001)\n - Added support for loading Flipper MCT/MFU dump files (@iceman1001)\n - Changed `data bmap` - now default `-m` is 8 (@iceman1001)\n - Added support for NTAG424 cards. (@dankar)\n - Additional fixes to configcard code for keyroll mode based on nfc-iclass output (@Antiklesys)\n - Changed lf sampling - improved the performance (@yah01)\n - Added `bind` option for network connections to specify the outbound address and port (@wh201906)\n - Changed `lf em 4x05 dump` - now supports the `--ns` nosave parameter (@iceman1001)\n - Fixed some wrong synchronization waits in usb_write() to increase the communication speed (@wh201906)\n - Added new command `data bmap` - breaks down a hexvalue to a binary template (@iceman1001)\n - Changed aid_desfire.json - added entreis from the Metrodroid project (@iceman1001)\n - Changed mad.json - added entries from the Metrodroid project (@iceman1001)\n - Changed `hf iclass dump` - now allow no save of dumped data (@iceman1001)\n - Changed `hf iclass calcnewkey` - Added calculations for old key elite and new key non elite (@Antiklesys)\n - Changed the CLI prompt to show tcp/udp if used (@iceman1001)\n - Changed `hw ping` - now shows transfer time (@doegox)\n - Added `hf mf encodehid` - writes HID legacy credential to a empty MFC (@iceman1001)\n - Added `hf iclass sam` - Added support for HID SAM Picopass communications (@iceman1001)\n - Add support for quoted arguments in the CLI, allowing spaces in them which\n   are removed automatically (@jmichelp)\n - Added UDP support on Windows (@wh201906)\n - Added client communication timeout to preferences (@iceman1001)\n - Added IPv6 support (@wh201906)\n - Fixed `lf hid clone --bin` - now correctly handles sentinel bits (@iceman1001)\n - Experimental UDP support in linux (@iceman1001, @wh201906)\n - Changed CI scripts to speed up the builds (@wh201906)\n - Changed the timeout of local TCP connections (@wh201906)\n - Finalized implementation of configcard generation for keyroll when cardhelper is not present (@Antiklesys)\n - Added documentation for compiling on iOS (@The-SamminAter)\n - Fixed `hf iclass wrbl` - pagemap bit map for secured is now handled better (@iceman1001)\n - Changed `hf iclass view/decrypt` to detect SIO lengths better and show if legacy credentials are encrypted (@nvx)\n - Changed the json file formats for mfc, 14b, 15, legic, cryptorf, ndef (@iceman1001)\n - Deprecated the EML file format when saving dump files. (@iceman1001)\n - Added `sim014.bin` - new sim module firmware v4.42 with improved ISO7816 Protocol T0 support (@gentilkiwi)\n - Added datasheet for sim module (@iceman1001)\n - Changed `smart raw --timeout` - allows for a custom timeout (@iceman1001)\n - Changed `lf t55 detectp1` - now also accepts 0xE039 Silicon Craft Tech as valid card (@iceman1001)\n - Fixed `utils.lua` library function \"convertdectohex\" wasn't working (@iceman1001)\n - Added `hf iclass creditepurse` command to allow crediting the epurse debit value (@nvx)\n - Modified `hf iclass configcard` to only support online mode (@Antiklesys)\n - Modified `hf iclass configcard` command to generate config cards without a cardhelper module by porting the contents of blocks 6 & 7 from nfc-iclass (@Antiklesys)\n - Fixed `hf iclass info` command showing incorrectly in offline mode (@Antiklesys)\n - The \"doc/magic_cards_notes.md\" file has been rebuilt, filled up, and so on. (@team-orangeBlue)\n\n## [Raccoon.4.17140][2023-09-09]\n - Changed text and adjust pm3_test case for mf_aes_brute (@doegox)\n - Fix CPPChecker warnings (@doegox)\n - Fix TubmleWeed docker setup (@doegox)\n - Added default keys (@ernestask) (@craftbyte)\n - Fixed MFU authentication to send PACK correctly (@shallax)\n - Fixed list output when line has 16 bytes (@piru)\n - Changed AIDlist w new entries (@kormax)\n - Swapped to OE1 for Shallow modulation on RDV4. Thanks to @gentilkiwi for testing (@d18c7db)\n - Changed iClass SIO and Legacy credential detection to be more reliable (@nvx)\n - Add hf_cardhopper standalone mode for long-distance relay attacks (@startrekdude)\n - Added `hf iclass esetblk` - set iClass emulator memory block data (@nvx)\n - Added cryptorf regressiontests (@iceman1001)\n - Fixed `cryptorf/sma_multi` - local state used in multithread (@iceman1001)\n - Changed `fpga_compress` - better deallocation of memory and closing of file handles (@iceman1001)\n - Changed `hf search` - less swaps of fpga images on device side (@iceman1001)\n - Changed `mkversion.sh` - now regenerates version_pm3.c (and consequently the binaries) only when needed (@doegox)\n - Added `data atr` - a command to lookup ATR (@iceman1001)\n - Fixed bug in ATR lookup fct, thanks @DidierA  (@iceman1001)\n - Updated ATR list (@iceman1001)\n - Changed `mem load -m` - now correctly erase all allocated flash memory (@iceman1001)\n - Fixed emulator quick dump to handle MFC Ev1 extra sectors (@iceman100)\n - Removed some empty dump files (@iceman1001)\n - Added a fct to choose fpga mode (@iceman1001)\n - Changed `hf mf eload/gsave` - fast uploading to emulator memory (@iceman1001)\n - Added empty dump files with keys for easy simulation (@iceman1001)\n - Added `hf 15 view` - view ISO15693 dump files (@iceman1001)\n - Fixed `hf iclass config` - now loops correct in keyroll generation (@iceman1001)\n - Added `hf iclass sam` - skeleton command (@iceman1001)\n - Changed `lf cotag demo` - a new decoder (@iceman1001)\n - Changed `hf legic view/eview/info` - now in verbose mode will print raw hex dump (@iceman1001)\n - Added new test for cotag demod using data commands in pm3_test.sh (@iceman1001)\n - Added new sample trace file for cotag w fc/272. Thanks s1acky! (@iceman1001)\n - Fixed `hf legic eload` - now it doesn't crash client (@doegox)\n - Changed `lf hitag *` - rework client side (@doegox)\n - Changed data commands to handle ask/nrz clocks above 256 (@iceman1001)\n - Added `data envelope` - almost acts like data askedgedetect (@iceman1001)\n - Added `data cthreshold` - acts like an inverted dirtythreshold command. Remove center values (@iceman1001)\n - Added `hf mfp list` - interprets MIFARE Plus commands in traces (@DidierA)\n - Changed `hf legic sim` - loop and return codes on deviceside updated to DEFINES (@iceman1001)\n - Changed `hf legic einfo` - now accepts the three different cardsizes as params (@iceman1001)\n - Fixed `lf cotag reader -1` - now doesn't fail (@iceman1001)\n - Added support for LZ4 compressed hardnested tables (@doegox)\n - Changed `emv reader -v` - now tries to print found transactions logs (@iceman1001)\n - Added ISO4217 currency lookup (@iceman1001)\n - Fixed bad free in loadfilebinarykey fct.  Thanks to @gentilkiwi\n - Changed `emv reader -v` - now can decode track1/2 data if found (@iceman1001)\n - Added `emv reader` - act as a EMV reader (@iceman1001)\n - Added support for Apple Wallet NFC Passes with the Value Added Services protocol implementation (@gm3197)\n - Fixed compiling liblua on iOS (@The-SamminAter)\n - Changed `hf_mf_luxeo_dump.lua` - now have list of keys to iterate (@iceman1001)\n - Fixed the timeout of TCP connections (@wh201906)\n - Added `hw timeout` - make the connection timeout configurable (@wh201906)\n\n## [Seven.4.16717][2023-06-25]\n - Change `hf 14a info` - now identifes QL88 tags (@iceman1001)\n - Added support for compiling on iOS (@The-SamminAter)\n - Fixed viewing MFC dump - border char is now white (@iceman1001)\n - Changed `data diff` - to print filenames in header if it fits (@iceman1001)\n - Changed viewing MFC dump files - it now colors ACL + GPB bytes (@iceman1001)\n - Added `hf mf supercard --furui` - now supports key recovery from Furui detection card. Thanks foxushka! (@iceman1001)\n - Added `hf topaz dump --ns` - now supports nosave param (@iceman1001)\n - Changed `hf topaz rdbl` - unified output (@iceman1001)\n - Fixed `hf topaz wrbl` - now supports tear off and write_nonerase command (@iceman1001)\n - Fixed `hf mf` commands (@iceman1001)\n - Fixed `hf mfp` commands (@iceman1001)\n - Added more default keys (@iceman1001)  Thanks anon!\n - Fixed `pm3-flash-all` shell script now correctly identify the if running on outdated bootloader (@iceman1001)\n - Fixed `hf 15693/iclass sniff` trace timings (@nvx)\n - Fixed LegicCash segment handling in `hf_legic.lua` script (@jmichelp)\n - Fixed `trace list` - now handles marking of crc bytes w color a bit better (@iceman1001)\n - Changed `hf mfu pwdgen -r` - now generates pwd/pack for Philips Sonicare, thanks @ckuenzi, @atc1441 (@iceman1001)\n - Changed `hf mfu info` - now detects Philips Sonicare devices (@iceman1001)\n - Fixed truncated FPGA upload due to incorrect integer size variable (@d18c7db)\n - Changed `usart btfactory` - handles the new BT board with version \"BT SPP V3.0\" (@iceman1001)\n - Changed `hf mf eview --sk` - now can extract keys and save to file (@iceman1001)\n - Changed `hf mf view --sk` - now can extract keys and save to file (@iceman1001)\n - Changed `hf mf sim` - reduce 6ms threshold to 4ms for reset to idle #1974 (@net147)\n - Rebuilt the Spartan-2 `fpga_*.bit` files to include the `hi_iso14443a.v` update (@d18c7db)\n - Added minor orphaned change from `hi_iso14443a.v` in `fpga-xc3s100e` to `hi_iso14443a.v` in `fpga-xc2s30` (@d18c7db)\n - Added python3 script to convert amiibo nfc Flipper Zero files to eml files to be used with Proxmark3 (@OscarAkaElvis)\n - Changed `hf mf restore` - Auth both key A and key B with default password (@wh201906)\n - Changed `nfc decode -f` - now can detect and convert MFC dumpfiles to NDEF byte arrays (@iceman1001)\n - Changed `nfc decode` - now handles EXTERNAL RECORDS better (@iceman1001)\n - Fixed `nfc decode` - now handles NDEF Signature version1 records better (@iceman1001)\n - Added new standalone mode `LF_MULTIHID` - HID26 (H1031) multi simulator (@flamebarke)\n - Changed `hf 14b dump --ns` - now supports `no save` of card memory (@iceman1001)\n - Changed `hf mfu dump --ns` - now supports `no save` of card memory (@iceman1001)\n - Changed the PM3 client to honor the preferences dump/trace paths. experimental support (@iceman1001)\n - Added the possibility to load `.MCT` dump files (@iceman1001)\n - Changed `lf t55xx dump --ns` - now supports `no save` of memory (@iceman1001)\n - Fixed the USB enumeration process (@wh201906)\n - Fixed `hf mf rdsc` - now correctly gets size in bytes when sector is larger than 32 (@iceman1001)\n - Changed `hf mf supercard` - Support editing UID and recovery of keys from second generation card (@AloneLiberty)\n - Added iClass credit key to default iClass key table and reorganized key order (@GuruSteve)\n - Changed `hf mf value` - ability to use transfer on different block (@AloneLiberty)\n - Changed `hf mf dump --ns` - dump command now supports `no save` of MFC card memory (@iceman1001)\n - Added `hf mf gdmsetcfg` - Supprt Gen4 GDM write configuration block (@iceman1001)\n - Added `hf mf gdmcfg` - Support Gen4 GDM read configuration block (@iceman1001)\n - Changed magic note to include a section about GDM tags (@iceman1001)\n - Added `hf mf gdmsetblk` - Support Gen4 GDM write block (@iceman1001)\n - Changed `hf 14a info` - detect Gen GDM magic tags (@iceman1001)\n - Changed CLI max string argument length limit from 512 to 4096 (@iceman1001)\n - Fixed `data asn1` - now handles bad input better (@iceman1001)\n - Added new public key for signature MIFARE Plus Troika (@iceman100)\n - Fixed the client build on Android (@wh201906)\n - Added TCP connection support on Windows (@wh201906)\n - Added `data num` - easy convert between dec/hex/bin (@iceman1001)\n - Fixed `hf mfdes info` - now handles incorrect tag answers better (@didiera)\n - Fixed `hf mfdes` generic help text is now correct (@didiera)\n - Fixed `pm3` script to correctly identify WSL enabled distros (@henrygab)\n - Changed device enumeration with \"unique USB serial numbers when built with `FLASH` -- **_UPDATES BOOTROM ALSO_**\" (@henrygab)\n - Changed the readline package to v8.2 in the CMAKE files for the client (@iceman1001)\n - Fixed `pm3` script for passing arguments (@doegox)\n - Fixed python paths to include current directory (@jmichelp)\n - Fixed infinite loops in spindelayus (@lnv42)\n - Changed ICECLASS standalone to support a read/sim mode (@natesales)\n - Changed `hf iclass encode` - added verbose flag (@natesales)\n - Changed `hf waveshare` - now identify 1.54 nfc epaper correct (@ah01)\n - Fixed `Makefile` regression that broke `make install` (@henrygab)\n - Fixed `lf em 4x70 brute` - now works as expected (@adite)\n - Fixed the lf sampling when bits_per_sample is less than 8 (@wh201906)\n - Added `lf em 4x70 brute` command (@adite)\n - Added documentation for usage of Proxmark3 under WSL2 (@henrygab)\n - Fixed device permissions via updated `udev` rules (@henrygab)\n - Added `--back` option to `clear` command to clear the scrollback buffer (@wh201906)\n - Changed `hf iclass decrypt` - mark credentials as decrypted in the dump (@natesales)\n - Changed `hf iclass view` - show credentials on a decrypted dump (@natesales)\n - Changed `hf mfu info` - NTAG213TT tamper info (mjaksn)\n - Added commands for configuring NTAG213TT tamper featue (@mjaksn)\n - Added Mifare Classic EV1 signature write support to gen4 magic tag lua script (@augustozanellato)\n - Added XOR key extraction and flag to Guardall G-Prox II (@GuruSteve)\n - Changed verbiage on `hf iclass info` KeyAccess area to be congruent with AA1 and AA2 areas (@GuruSteve)\n - Added `hf legic info` command for other sources (@0xdeb)\n - Added `hf legic einfo` - views emulator menory (@0xdeb)\n - Changed `hf legic view` - now also print the decoded info of the dump file (@0xdeb)\n - Changed `script run hf_mf_ultimatecard.lua -u` to support 10bytes UID (@alejandro12120)\n - Updated documentation for installation on macOS with MacPorts (@linuxgemini)\n - Added possible Paxton id to hitag2 tag info output\n - Changed `hf mf sim` - reduce 50ms threshold to 6ms for reset to idle #1974 (@net147)\n - Update `amiibo_tools.lua` with new identifiers and create a python script `update_amiibo_tools_lua.py` to automate the process in the future. (@CorySolovewicz)\n - Added `lf paradox sim --fc --cn` - Simulates Paradox fob from facility code and card number (jerji)\n\n\n## [Nitride.4.16191][2023-01-29]\n - Changed `build_all_firmwares.sh` to fit GENERIC 256kb firmware images (@doegox)\n - Fixed some coverity fixes (@iceman1001)\n - Fixed `make accessrights` on Fedora (@mooey5775)\n - Fixed `hf mfu info` - can now identify the 50 pF version of NTAG 210u(micro) (@mjacksn)\n - Added `hf 15` sub-commands for controlling EAS, AFI, privacy mode, and the setting of passwords on SLIX tags (@mjacksn)\n - Added new magic gen4 cards command in docs (@McEloff)\n - Added `hf tesla info` - intital information command to read TESLA cards (@iceman1001)\n - Changed `hf emrtd info` - looking for lower case .bin extensions (@iceman1001)\n - Changed `hf emrtd dump` - looking for lower case .bin extensions (@iceman1001)\n - Changed `lf paradox clone` - it now accepts FC/CN (@mwalker33)\n - Added standalone mode for simulatin Nedap ID (@anon)\n - Changed `hf mfu info` - now also does a simple OTP fingerprinting (@iceman1001)\n - Changed `hf mf wrbl` - now checks for strict readonly ACL's in the data to write (@iceman1001)\n - Changed `hf mf view` - verbose printing if strict readonly ACL's exists in dump file (@iceman1001)\n - Added command `piv authsign` to get a buffer signed by the selected key (@jmichelp)\n - Added command `piv scan` which tries to read all known containers on PIV (@jmichelp)\n - Added support for PIV commands, over wired and contactless interfaces (@jmichelp)\n - Added `--shallow` option to `hf iclass` reader commands to do shallow (ASK) reader modulation instead of OOK (@nvx)\n - Change and improved NXP SLI/SLIX series tag identification (@nvx)\n - Fixed buffer overflow in \"lf em 4x05 sniff\" (@HeinrichsH)\n - Fixed potential NULL array printing (@jmichelp)\n - Added PIV aid to resource file (@jmichelp)\n - Fixed failing compilation on Proxspace environment due to how python is initialized (@jmichelp)\n - Fixed length check in sim module communications (@jmichelp)\n - Changed timings in i2c.c when communicating with sim module (@iceman1001)\n - Moved to non-deprecated API to initialize Python interpreter (@jmichelp)\n - Changed `sc upgrade` updated firmware v4.13 (RDV40) - frame buffer is now 384 bytes (@sentiprox)\n - Fixed contact interface / smartcard APDU chaining logic and allow 256 bytes ADPU payload. Need SIM firmware 4.13 to work (@jmichelp)\n - Fixed `lf hitag dump` - Should now work as described in the command help (@natmchugh)\n - Fixed SPI flash overflow when loading dictionnaries into flash. Breaking change: added 1 more sector for Mifare - dictionnaries should be loaded again (@jmichelp)\n - Added `hf mf gload, gsave, ggetblk, gsetblk` for Gen4 GTU in mifare classic mode (@DidierA)\n - Fixed `trace list -r` (relative times) not working unless `-u` (microseconds) was specified, and made `--frame` respect `-u` and `-r` options (@nvx)\n - Added detection of magic Gen4 GTU (@DidierA)\n - Added luascript `hf_i2c_plus_2k_utils` - Script for dumping/modifying user memory of sectors 0 and 1 (@flamebarke)\n - Added `hf mfu esave` - saves emulator memory to mfu dump file (@DidierA)\n - Added luascript `hf_mfu_ntag` - Script for configuring NTAG216 configuration pages (@flamebarke)\n - Changed `hf mf hardnested` - a detection for static encrypted nonces (@iceman1001)\n - Added requirements.txt file to tools folder. Minimum to run pm3_tests.sh (@iceman1001)\n - Changed `hf mf hardnested` - now can detect and use MFC EV1 signature sector key (@iceman1001)\n - Changed `hf mf autopwn` - now can detect and use MFC EV1 signature sector key (@iceman1001)\n - Fixed `pm3` shell script now automatically detects WSL2 with USBIPD serial ports (@iceman1001)\n - Fixed `trace list -c` - annotation of CRC bytes now is colored or squared if no ansi colors is supported (@iceman1001)\n - Fixed `trace list -t mf` - now also finds UID if anticollision is partial captured, to be used for mfkey (@iceman1001)\n\n## [Radium.4.15864][2022-10-29]\n - Changed `lf indala sim` - now accepts fc / cn (@iceman1001)\n - Added `lf indala brute`- brute forcing of 64b Indala ID (@iceman1001)\n - Added `hf 14a ndefwrite` - write raw NDEF records to TYPE4A tags (@iceman1001)\n - Changed ndef output to be more dense. Honors verbose now (@iceman1001)\n - Fixed `hf mf ndefwrite` - now skips not ndef formatted sectors (@iceman1001)\n - Fixed `hf mf ndefread` - now skips not ndef formatted sectors correctly (@iceman1001)\n - Fixed `lf hitag` - keep inside the arrays for key/password/nrar (@iceman1001)\n - Added `hf mf ndefwrite` - write raw NDEF records to MIFARE Classic tag (@iceman1001)\n - Changed `hf mf cwipe` - swapped the block0 data to genuine manufacture ones (@iceman1001)\n - Added `hf mf ndefformat` - format a MIFARE Classic tag as NFC tag with Data Exchange Format (NDEF) (@iceman1001)\n - Changed `hf 14b dump, view` to get correct chip type in case of SRT512 and friends (@DidierA)\n - Added `hf 15 eview` and `hf 15 esave` - Retrieve emulator image for ISO15693 simulation (@markus-oehme-pg40)\n - Changed `hf 15 sim` - now supports reader writes (@markus-oehme-pg40)\n - Added `hf 15 eload` - specify memory image for ISO15693 simulation (@markus-oehme-pg40)\n - Added `hf 15 sim --blocksize` - configure block size for simulation (@markus-oehme-pg40)\n - Fixed buffer overflow in mfu ndef decode (@mwalker33)\n - Changed spiffs write/append to send in 8192 chunks to ensure its eraised (@mwalker33)\n - Fixed spiffs dump to ensure to fails correctly if no big_buff was allocated (@mwalker33)\n - Change Client Makefile to respect global flags (@blshkv)\n - Change Makefile, honors global CC values (@blshkv)\n - Fixed bad memory handling in MifareSim device side (@iceman1001)\n - Added json topaz file format (@iceman1001)\n - Added `hf topaz rdbl,  wrbl, view` commands (@iceman1001)\n - Added more details to the annotations of `hf mfdes list` output (@nvx)\n - Changed `hf iclass view` and related to suppress consecutive blocks with repeated contents with a `-z` flag, or `prefs set output --dense` (@nvx)\n - Changed `hf iclass list` to display matched keys on the CHECK command rather than the card response, and made it check for elite keys too (@nvx)\n - Fixed `hf iclass info` and `hf iclass view` key access info looking at the wrong card config bit (@nvx)\n - Added `hf gallagher decode` command and fix Gallagher diversification for card master key (@nvx)\n - Changed `hf texkom reader` - now supports mmbit-002 (kibi-002, kb5004xk1) russian tag (@merlokk)\n - Added `hf sniff --smode` skip/group adc data to consume less memory. Now it can sniff very long signals (@merlokk)\n - Added `hf fudan` skeleton commands (@iceman1001)\n - Added `--reboot-to-bootloader` arg to pm3\n - Changed `hf 14b raw` - now supports selecting Fuji/Xerox tag (@horror)\n - Added `hf xerox dump` - dump a Fuji/Xerox tag (@horror)\n - Added `hf xerox info` - read Fuji/Xerox tag (@horror)\n - Fixed `hf 14a reader --ecp` to work consistently (@kormax)\n - Change `trace list -t 14a` to annotate ECP frames of all valid V1 and V2 formats (@kormax)\n - Added 122 new keys from Flipper Zero community to `mfc_default_keys.dic` (@UberGuidoZ)\n - Added showing password for the read command in the `lf t55xx sniff` command (@merlokk)\n - Added reading texcom tk13 and tk17 tags with `hf texkom read` command (@merlokk @iceman1001)\n - Added simulating texcom tk13 and tk17 tags with `hf texkom sim` command (@merlokk)\n - Changed `hf mf staticnested` - significant speedups by using two encrypted nonces (@xianglin1998)\n - Change use of `sprintf` in code to `snprintf` to fix compilation on macOS (@Doridian)\n - Change `hf mf mad` - it now takes a dump file for offline MAD decoding (@iceman1001)\n - Fixed Standalone mode  hf_iceclass - wrong fpga image set (@iceman1001)\n - Fixed `hf iclass sim` - wrong fpga image set (@iceman1001)  Thanks to NVX!\n - Fixed `lf viking reader` - search in inverted bitsteam as well (#doegox)\n - Added more default keys (@CONIGUERO)\n - Change `hf 14a info` - it now detects FUDAN (@iceman1001)  Thanks to @secit-pl\n - Fixed support to clone Pyramic, Paradox and Awid on EM4x05 (@doegox)\n - Added support to clone HID, Viking and EM410x on EM4x05 (@doegox)\n - Fixed `lf config --reset` - averaging is set to 1 rather than 0 (@wh201906)\n - Added standalone mode for sniffing 14b (@jacopo-j)\n - Fixed `hf 14a apdu` - now don't skip first P2 iteration (@iceman1001)\n - Added `hf ntag424` - skeleton with SDM (@iceman1001)\n - Updated hf_14a_i2crevive.lua - fixed broken apdus (@Equipter)\n - Use 128 bit slices whenever ARM NEON is available to speed up hardnested (@Doridian)\n - Fixed compilation of mfd_aes_brute on Apple M1 based Macs (@Doridian)\n - Changed calculation of companion ARM firmware hash to be uniform accross platforms (@Doridian)\n - Changed `hf mf *` - verbose flag now also decode and prints found value blocks (@iceman1001)\n - Changed `hf mf wrbl` - added more helptext and new param --force to point out block0 writes (@iceman1001)\n - Changed `hf 15 raw` - it now uses NG frame for response (@iceman1001)\n - Added `hf_14a_i2crevive` Script, revives soft bricked i2c (@equipter)\n - Changed `hf mf view` - now prints all keys and all value blocks under the ´verbose´ param (@iceman1001)\n - Added a new OSX install guide (@maxieds)\n - Added new public key (@anon)\n - Changed start screen to be less intimidating (@iceman1001)\n - Added detection of a possible mismatch between client and Proxmark3 image (@doegox)\n - Changed `hf 14a info` - added a ATR historical compact TLV decoder (@iceman1001)\n - Added `hf mf value` - decode a value block (@iceman1001)\n - Changed `hf mf nested` - removed option `--single` redundant with usage of `--tblk` (@doegox)\n - Fixed `hf mf chk` - single block mode (@doegox)\n - Fixed `hf mf fchk/chk` - internal logic to load keys (@doegox)\n - Changed `hf mf *` - printKeyTable: now display sector trailer info too (@doegox)\n - Changed `hf mf chk` - option `--blk` into `--tblk` (as for nested) (@doegox)\n - Added new tool `mfd_multi_brute` - MIFARE DESfire / UL-C key recovery (@iceman1001)\n - Fixed `hf emrtd info` - segfault on some platforms (@doegox)\n - Fixed `hf emrtd info` - when offline (@doegox)\n - Fixed `commands.json` - generation (@doegox)\n - Added new standalone mode `hf_legicsim` (@uhei)\n - Changed `hf legic *` - now uses NG instead (@iceman1001)\n - Added `hf legic view` - view contents of LEGIC Prime dump files (@iceman1001)\n - Changed `hf mfu restore` - now takes bin/json as dump files (@iceman1001)\n - Added `hf mfu view` - view contents of MFU dump files (@iceman1001)\n - Changed `hf_mf_uidbruteforce` - added support for S70, enhance UID length management (@cactuschibre)\n - Fixed build issues that may happen from building `mfd_aes_brute` (@linuxgemini)\n - Added silicon data parsing logic for NXP chips in `hf mfu info` (@linuxgemini)\n - Added luascript `hf_mf_em_util.lua` - Script for emulator configuration (@nisgola)\n - Fixes `hf mf restore` - now takes bin/eml/json as dump files (@iceman1001)\n - Fixes `script run some_python_script` segfault on armhf architecture (@doegox)\n - Added `trace extract` - extract authentication parts from trace (@iceman1001)\n - Added luascript `hf_mf_ultimatecard.lua` - Script for Ultimate Magic Card (GEN4) (@startrk1995)\n - Added new tool `brute_key` - MIFARE DESFire Telenot access AES recovery (@x41sec)\n - Fixed `hf mfu dump -k` - insert PWD in dump (@doegox)\n - Changed `hf mfu pwdgen` - now generate xiaomi air purifier pwd/pack (@doegox)\n - Fixed `hf 14a sim` - sneaky detection of user supplied UID might be empty (@iceman1001)\n - Added support for PCSC's proprietary HID 37bit format P10004 (@bthedorff)\n - Added `nfc decode` - now NDEF vCard messages with a PHOTO in base64 format is shown (@iceman1001)\n - Changed - AID limitations when using Gallagher key diversification (@DarkMatterMatt)\n - Added new standalone mode `lf_em4100rsww` (@zabszk)\n - Fixed `hf 15 slixdisable` wrong pass id (@r1ddl3rz)\n - Added `script run hf_mf_hid_sim.lua` (@micsen)\n - Added flashmem support in `HF_14BSNIFF` standalone mode (@wh201906)\n - Changed `HF_14ASNIFF` standalone mode - now supports Proxmark3 without flashmem (@wh201906)\n\n## [Frostbit.4.14831][2022-01-11]\n - Changed Wiegand format lookup - now case-insensitive (@iceman1001)\n - Added new standalone mode `hf_15SNIFF` - Same as `hf_14ASNIFF` standalone mode for RDV4 - flashmem (@startrk1995)\n - Added `hf gallagher` commands for read/writing DESFire cards (@DarkMatterMatt)\n - Added support for MIFARE DESFire application creation without authentication (@joswr1ght)\n - Changed drastically Hitag S ARM code to remove state machines and ease way to build new commands (@doegox)\n - Fixed Hitag S crypto mode with key or NrAr, fixed `lf hitag cc`, fixed pwd dump in hitagS dump with LKP (@doegox)\n - Changed `trace list -h` - textual change (@iceman1001)\n - Fixed `hf iclass config` - not get stuck when trying to make a keyroll config card (@iceman1001)\n - Changed textual output for iclass (@iceman1001)\n - Changed `hf iclass reader` to use NG (@iceman1001)\n - Changed various notes to have ToC and top links (@iceman1001)\n - Added option `lf gprox demod --raw` - now supports decoding of raw bytes (@iceman1001)\n - Added option `hf mf gview --pwd` - now supports user supplied password (@iceman1001)\n - Added option `--force` to `hf mfu rdb/wrbl` to force operation even if address is out of range (@doegox)\n - Added documentation for detailed usage of the Ultimate Magic Card (@doegox)\n - Changed HitagS trace record and parsing to deal with partial bytes and to check CRC8 (@doegox)\n - Added support for KS X 6924 (South Korea's T-money card) (@toucan12)\n - Fixed `hf 15 dump` - now correctly dumps 256 blocks w/o crashing the client (@iceman1001)\n - Changed `hf 14a sim -t 3` - anticollision for DESFire simulation now uses different RATS (@mosci)\n - Fixed `hf mfdes` - works with dynamic apdu and encode/decode buffers (@merlokk)\n - Added luascript `hf_ntag_bruteforce.lua` - ntag password bruteforce with the option to do NFC Tools MD5 versions of passwords (@keldnorman)\n - Added option `--crc-ht` to `lf cmdread` to compute and add CRC-8/HITAG (@doegox)\n - Added option `-k` to `lf cmdread` to keep field on (@doegox)\n - Added `hf mf acl` - decode and print MIFARE access rights (@iceman1001)\n - Added for readline, <tab> autocomplete work inside pm3 client (@iceman1001)\n - Fixed `hf iclass dump` - now uses the right key when suppling credit key (@iceman1001)\n - Changed crc16_legic to be supported in lua (@iceman1001)\n - Changed `trace list -t 14a` - now annotate magsafe wupa (@iceman1001)\n - Added magsafe polling (thanks to @tcprst !) (@iceman1001)\n - Changed `trace list -t 14a` - now annotate ECP (@iceman1001)\n - Added enhanced contactless polling (thanks to @relays user at gitlab) (@iceman1001)\n - Added iCS key (@FlUxIuS)\n - Changed `trace list -t 14a` - now annotate ULC when known key is used in auth (@doegox)\n - Fixed `hf mfu cauth` - option -k collision, used both for key and keep (@doegox)\n - Changed Dockerfiles, instructions, tests and CI to cover Python script within client (@doegox, @gator96100)\n - Changed `hw version` - now works offline too and provides client info (@doegox)\n - Added trace of VISA Apple transactions (thanks @a66at)\n - Added trace of reading a MIFARE UL-C with 3DES authentication (thanks @rad1game)\n - Added ATR fingerprinting (@iceman1001, @doegox)\n - Fixed DesFIRE decoding when not using wrapped cmds (@colinoflynn)\n - Added script to build all firmware variants (@doegox, @sbrun)\n - Fixed `hw tune` voltage values when no antenna is connected (@mwalker33)\n - Fixed `hf mf dump/auto/csave` MFC JSON dumps - save real ATQA/SAK (@doegox)\n - Fixed dynamic-stack-buffer-overflow in ndefDecodePayload (@AxisRay)\n - Added option to load raw NDEF to `nfc decode` command (@doegox)\n - Added option to save raw NDEF to all `hf * ndefread` commands (@doegox)\n - Changed `hf 14a info` - different FUDAN clone detection (@iceman1001)\n - Added `CROSS_CC` and similar args for maintainers, see Maintainers.md (@doegox)\n - Fixed crack5opencl - fix deadlock in wu_queue_destroy() + minor changes on threads.c (@matrix)\n - Fixed 14a incorrect BCC when multiple tags (@AxisRay)\n - Added additional support for macOS users utilizing MacPorts (@linuxgemini)\n - Fixed Windows USB prioritization (@gator96100)\n - Fixed `hf mfdes` - fix buffer overflow (@AxisRay)\n - Changed `hf mfdes` - detect LRP mode and info updates (@merlokk)\n - Fixed `hf mfdes` - increase response buffer length (@merlokk)\n - Fixed `SimulateTagLowFrequencyEx` ignoring the `ledcontrol` argument (@zabszk)\n - Added ledcontrol argument to LF operations (@zabszk)\n - Added new standalone mode `dankarmulti` -  select and run multiple standalone modes (@dankar)\n\n## [crimson.4.14434][2021-09-18]\n - Fixed `hf mf staticnested` - flashmem / non loop now works (@horrordash)\n - Fixed `hf 15 restore` write command and `trace list -t 15` write command (@doegox)\n - Changed default standalone mode to LF_SAMYRUN (@iceman1001)\n - Added MIFARE Plus SL3 mode traces (@iceman1001)\n - Fixed PAC/Stanley checksum calculation (@rknoll)\n - Added option --mem to `hf mf nested`, from icopyx source (@doegox)\n - Added fpga-xc3s100e and icopyx source code specificities to this repo (@doegox)\n - Changed `hf mfdes` - Transactions. commit, abort, commit reader id. (@merlokk)\n - Changed `hf mfdes` - LRP secure channel for Desfire Light. (@merlokk)\n - Changed `hf mfdes` - commands refactoring. now fully works: des,2tdea,3tdea,aes keys with d40,ev1,ev2 channels and native/nativeiso/iso command sets(@merlokk)\n - Changed `lf em 410x *` - now better text (@clach04)\n - Fixed `hf mfu dump` - now sets keytype correct #1426 (@axisray)\n - Added new standalone mode `hf_mfcsim` which can load dump from flash and simulate Mifare Classic 1K card (@axisray)\n - Added support to demodulate Electra tags and column parity check for EM410x (@doegox)\n - Fixed demod plot for various demodulations (@doegox)\n - Fixed `lf t55xx detect/rdbl/dump` - to override if user set `lf config` and use default values during operation (@iceman1001)\n - Added `hf iclass encode --wiegand/--fc/--cn` - direct fmt/fc/cn support (@bettse)\n - Fixed `lf t55xx detect` - to unset lf config decimation if value is not one (@iceman1001)\n - Fixed `hf 15 sample` - data collection works again (@iceman1001)\n - Changed `data plot -h` - removed line (@doegox)\n - Fixed `lf_tharexde` - double define of global variable (@axisray)\n - Added new standalone mode `lf_hidfcbrute` - bruteforce facility code (@ss23)\n - Changed `hf felica info` - got more ic chip definitions (@ah01)\n - Changed `lf pyramid demod` - relaxed the size check (@iceman1001)\n - Changed `hf emrtd info` to view DG5 picture (@iceman1001)\n - Added `-4041x` option to lf indala clone for the Indala 4041X format (@chunkystew)\n - Added a new client preference,  delay of execution,  a delay in ms before a cmd is sent. Good for implants (@iceman1001)\n - Fixed `lf t55xx brute` - now correctly prints last key if it was correct (@scott4290)\n - Added support python scripts (@salmg)\n - Added new standalone mode `hf_reblay` -  relay 14a over bt (@salmg)\n - Added one new key from gun cloner found in wild (@scott4290)\n - Fixed `hf_msdsal` standalone in simulation flow (@salmg)\n - Added a picture viewer in QT. To be used with `hf emrtd info` (@iceman1001)\n - Fixed - move des functions to libcrypto (@merlokk)\n - Added `CLIGetOptionList` to cliparser that makes it easier to implement text options in the cli (@merlokk)\n - Added experimental support for macOS users utilizing MacPorts instead of Homebrew (@linuxgemini)\n - Added `pm3_online_check.py` - a script to verify and initialize a Proxmark3 RDV4 device (@iceman1001)\n\n## [midsummer.4.13441][2021-06-25]\n - Fixed `hf iclass` - a crash when AA1 limit was larger than AA2 (@pcunning)\n - Added bruteforce function for the magic byte in `cmdlfnexwatch.c` and ability to clone with psk2 modulation (@Guilhem7, @MaximeBosca)\n - Changed `hw setmux` - improve user feedback for special case (@iceman1001)\n - Changed 'filename' - unified file name param across client (@iceman1001)\n - Fixed `lf em 4x05 brute/chk` - fixed input params crash (@iceman1001)\n - Fixed `lf hitag reader --23` - now accepts 6bytes key (@iceman1001)\n - Fixed coverity scans findigs (@merlokk, @iceman1001)\n - Fixed `hf iclass config` - now fallback to default config card configuration (@iceman1001)\n - Changed `nfc parser` - now also identify xvcard types (@iceman1001)\n - Added `hf mf gview` - view contents of a magic Gen3 GTU (@iceman1001)\n - Added Standalone mode for nexwatch ID credentials (@Guilhem7, @MaximeBosca)\n - Fixed `lf em 4x50/4x70 *`  reverted a misunderstanding in byte order macros (@iceman1001)\n - Added more keys (@equipter)\n - Changed `hf nfc ndefread` - ndef parser now handles more types (@iceman1001)\n - Fixed `hf desfire` changekey, GetUID, 3DES session key tweak. (@mwalker33)\n - Fixed `hf fido` commands now works correctly (@merlokk)\n - Moved / renamed  `client/resource/fido2_defparams.json` ->  `client/resource/hf_fido2_defparams.json` (@merlokk)\n - Added `hf cipurse` commands to work with cipurse transport cards (@merlokk)\n - Added `--gap` option to lf em 410x sim for more control over sim data (@mwalker33)\n - Changed `hf fido` - refactored load/save json objects (@iceman1001)\n - Moved / renamed  `fido2.json` ->  `client/resource/fido2_defparams.json` (@iceman1001)\n - Added openocd shikra support based on @ninjastyle82 patch to deprecated iceman fork (@iceman1001)\n - Changed `hf lto info` - now decode more of LTO CM info (@iceman1001)\n - Added `HF_TMUDFORD` standalone mode that reads and emulates ISO15693 UID (@tmudford)\n - Changed `hf mf wipe` - now supports enforcing sector 0 / block 0 writes (@iceman1001)\n - Added `data asn1` - a command to decode ASN1 byte arrays  (@iceman1001)\n - Added `hf 15 disableprivacy` - from @g3gg0 fork *WIP* (@iceman1001)\n - Added `lf_ident_json.lua` - script to identify t55xx json dump files (@iceman1001)\n - Fixed `hf iclass chk` -  multithread concurrency issues solved (@iceman1001)\n - Fixed hf_iceclass standalone - correct null terminator filename (@metalauricle)\n - Changed `trace list -t mfdes - added annotations for EV2, EV3 (@iceman1001)`\n - Changed `hf iclass lookup` - fixed swapped args (@iceman1001)\n - Changed `hf iclass decrypt` - added the possibility to decode the data as block6 if you have a cardhelper (@iceman1001)\n - Changed `weigand decode` - removed -p param since we wanna see all encodings anyway (@iceman1001)\n - Changed `wiegand decode` - when bin string is supplied, use that exact length instead (@iceman1001)\n - Added a bunch more wiegand formats (@iceman1001)\n - Added `lf idteck clone` - now supports creating using raw values (@iceman1001)\n - Changed calypso scripts to work with NG (@iceman1001)\n - Changed HF 14b - fixed timings on device side (@iceman1001)\n - Changed `hf 14b raw` - now uses NG (@iceman1001)\n - Changed `hf 14a/14b/15 list etc alias commands now unified helptext (@doegox)\n - Changed `trace list` - now colors whole reader line (@iceman1001)\n - Changed `lf search` - add option `-c` to continue searching after first hit (@doegox)\n - Fixed DESFire mis-annotation (@VortixDev)\n - Changed `lf pac demod` - now also search for inverted bitstreams (@iceman1001)\n - Changed `hf 14b reader` - now supports continuous mode (@iceman1001)\n - Fixed `hf search` - now doesn't false identify ISO15693 (@iceman1001)\n - Changed emv commands now works with tokenized cards (@merlokk)\n - Changed `hf 15 restore` - now also support EML/JSON (@iceman1001)\n - Changed - all commands now use cliparser (@iceman1001)\n - Changed `lf t55xx restore` - now also support JSON (@iceman1001)\n - Changed `hf mf csetuid` - adapted to accept 7byte uids ~untested~  (@iceman1001)\n - Added `hf mf view/eload/cload` - now accepts bin/eml/json  (@iceman1001)\n - Added `hf mf eload/cload' - now accepts bin/eml/json  (@iceman1001)\n - Fixed RESTORE mis-annotation (@VortixDev)\n - Changed `smart raw` - now uses NG (@iceman1001)\n - Added `hf iclass configcard` - now can download / generate config card dumps with a cardhelper [WIP] (@iceman1001)\n - Fixed swapped DESELECT and WTX annotations (@VortixDev)\n - Fixed `hf 15 findafi` - cliparser bug, and loop is user interruptible (@iceman1001)\n - Added `hf mf wipe` - takes a keyfile and wipes a MFC to default values (@iceman1001)\n - Changed `pm3 shell` - now prioritize USB connections in WSL1 (@gator96100)\n - Added `hf mf restore -w` - now supports usage of specified keyfile to authenticate with instead of default FFFFFF key (@iceman1001)\n - Added `mem info --pem`- now supports loading of private key in PEM format (@iceman1001)\n - Changed `hf mfp auth` - more verbose message (@vortixdev)\n - Fixed `hf mfdes rd` - AES chained mode fixes (@anon)\n - Added `weigand decode -b` - now supports binary wiegand string as input (@iceman1001)\n - Updated `README.md` - new link to a GUI project,  and textual update (@iceman1001)\n - Changed `hf search` - reenabled FeliCa search (@iceman1001)\n - Changed `auto -a` - now allows for keep on searching, useful when detecting unknown multi tech cards (@iceman1001)\n - Added more aid (@anon)\n - Changed `hw version` - now also looks for FPGA chip id match (@iceman1001)\n - Added WSL checks for outdated bootloader (@gator96100)\n - Changed many, many more commands uses cliparser (@iceman1001)\n - Changed many many cppchecker fixes (@iceman1001)\n - Changed some coverity scan fixes (@iceman1001)\n - Added `hw break` - to break device side loops from client (@iceman1001)\n - Changed `hf mf sim` - removed field detection on device side (@iceman1001)\n - Changed `mf_nonce_brute` - to recover key for nested authentications from traces (@iceman1001)\n - Changed `trace list -t mf` - now prints needed data for mf_nonce_brute (@iceman1001)\n - Fixed `trace list -t mf` crc overwrote first hex char (@iceman1001)\n - Fixed `trace list -t mf` to print correct parity \"!\" (@doegox)\n - Fixed `lf em 4x05 unlock` not to break when tear off happens (@doegox)\n - Fixed `mem spiffs view` to not print when file doesn't exist on flash mem (@iceman1001)\n - Changed `hf mf rdsc, egetsc, cgetsc` to have unified output (@iceman1001)\n - Changed `hf mf rdsc` output to be more clear (@iceman1001)\n - Changed `mem dump -c` now supports optional column breaks of output (@iceman1001)\n - Changed unified client menu's to use curly brackets to indicate a sub category (@iceman1001)\n - Added `mem spiffs view` to view external flash memory (@iceman1001)\n - Fixed 'lf t55xx config, chk, bruteforce' some logic to got mixed up in cliparser conversion (@mwalker33)\n - Moved countones / bitcount fcts to utils.c (@doegox)\n - Changed tunings in `hf mfu opttear` (@doegox)\n - Updated the text in T5577_Guide.md to match new output (@iceman1001)\n - Added a new t55xx configblock found in the wild (@iceman1001)\n - Added `mem info -d` to support manual input of data (@iceman1001)\n - Fixed 'lf t55xx detect' some logic to got mixed up in cliparser conversion (@mwalker33)\n - Added `HF_CRAFTBYTE` standalone mode that reads and emulates 14a UID (@craftbyte)\n - Added cryptoRF trace (@iceman1001)\n - Changed default tcp port to 18888  (@iceman1001)\n - Added more default keys to MFC dictionary (@iceman1001)\n - Added one more icode slix2 signature to recover_pk.py (@iceman1001)\n - Changed C15001 format to use OEM = 900 by default (@iceman1001)\n - Added a script to dump originality signatures from MFU EV1s and NTAGs (@aveao)\n - Fixed `hf emrtd` segfaults (@aveao)\n - Fixed `lf em 4150` timings on device side (@tharexde)\n - Changed dependencies fixes in build scripts (@doegox, @iceman1001, @gator96100)\n - Changed `recover_pk.py` to support colors (@iceman1001)\n - Changed flashing feedback text to include needed steps (@iceman1001)\n - Changed `lf_em4100_bulk.lua` in order to handle Proxspace odd 32b limit (@iceman1001)\n - Added `script run lf_em4100_bulk.lua` a EM4100 bulk enrolling script (@iceman1001)\n - Changed amiitool now linked, compiles in cmake,  and outlined code usage in cmdhfmfu.c (@iceman1001)\n - Changed `hf mfu info` - to have a fingerprint fct (@iceman1001)\n - Added parsing of EF_CardAccess to display PACE algorithm, version and parameter in `hf emrtd info` (@aveao)\n - Changed numerous commands more uses cliparser (@tcprst, @iceman1001)\n - Added more originality public keys (@anon)\n - Added `hf 14a info` - now also verify MFC Ev1 signatures (@iceman1001)\n - Added `LF_THAREXDE` standalone mode which simulates and reads EM4x50 cards (@tharexde)\n - Added `hf jooki` commands (@iceman1001)\n - Changed `lf hid clone` - also accepts binary wiegand (@iceman1001)\n - Changed `wiegand encode` - format param is now optional, w/o it will try encode all formats (@iceman1001)\n - Fixed cppchecker warnings (@iceman1001)\n - Added `trace list -t mf` - now can use external dictionary keys file (@McEloff)\n - Fixed `lf gallagher read` - now correctly decodes card data\n - Added support to `lf gallagher clone` and `lf gallagher sim` for writing specific card region, facility, card & issue numbers (@DarkMatterMatt)\n - Added support for older vid/pid detection (@Gator96100)\n - Added `hf mfdes bruteaid` - proper bruteforce of DESFire AID when no reading of files is possible (@craftbyte)\n - Added support for bidirectional communication for `lf em 4x50 sim` (@tharexde)\n - Changed `PLATFORM=PM3OTHER` to `PLATFORM=PM3GENERIC` (@iceman1001)\n - Added `tools/hitag2crack/crack5opencl`, an optimized version of `crack5gpu` (@matrix)\n - Fixed Makefile to account for changes when running on Apple Silicon (@tcprst)\n - Added support for debugging ARM with JTAG & VSCode (@Gator96100)\n - Added MFUL \"Gen1b\" support to `hf_mfu_setuid.lua` (@iceman1001)\n - Added possibility to get bargraph in `lf tune` and `hf tune` (@iceman1001, @doegox)\n - Added `hf emrtd` ePassport dumping and parsing (@aveao)\n - Added `aidsearch` to `hf 14b info` (@iceman1001)\n - Added `ICE_STATE_DUMP_SIM` - standalone mode for dumping/simming one iClass tag (@iconicsec)\n - Added  `lf em 4x50 eview` - show uploaded EM4x50 data in emul memory (@tharexde)\n - Fixed `data rawdemod` parsing for psk2 and user defined clock (@cyberpunk-re)\n - Added `hf iclass encode` - encode a wiegand binary to a encrypted credential (@iceman1001)\n - Changed `recoverpk.py` - now tests more ECDSA curves (@doegox)\n - Added `hf 14a apdufuzz`- a naive apdu cla/ins/p1p2/len fuzzer (@iceman1001)\n - Improved `hf 14a apdufuzz/apdufind` to find hidden APDUs (@ikarus23)\n - Fixed mixed up INC/DEC in MIFARE protocol defs (@vortixdev)\n - Added `lf em 4x70 info` - new support for ID48 transponders (@cmolson)\n - Fixed multiple coverity scan issues (@iceman1001)\n - Added a SIO item (@iceman1001)\n - Fixed `lf hid brute` - param (@iceman1001)\n - Changed `lf em` layouts (@iceman1001)\n - Changed many commands to cliparser (@iceman1001, @tcprst, ...)\n - Fixed issue #844 - `lf t55xx config` => recompute block0 (@cyberpunk-re)\n - Changed `lf em 4x50` - changed cli parameter from w (word) to d (data) (@tharexde)\n - Added `lf em 4x50 login` - authenticate against tag (@tharexde)\n - Added `lf em 4x50 brute` - guess password within a given password range (@tharexde)\n - Added `lf em 4x50 chk` - try passwords from dictionary (without option -> T55xx default dictionary or -f user dictionary) (@tharexde)\n - Added `lf em 4x50 reader` - read data from tag (configured data -> standard read mode), incl. option -@  (@tharexde)\n - Added `lf em 4x50 sim` - simulate dump from file or emulator/flash (@tharexde)\n - Added `lf em 4x50 restore` - restore dump file (bin, eml, json) onto tag  (@tharexde)\n - Added `lf em 4x50 esave` - dump em4x50 content in emulator memory to file (bin + eml + json) (@tharexde)\n - Added `lf em 4x50 eload` - upload em4x50 file content (bin, eml, json) to emulator memory  (@tharexde)\n - Changed EM4x50 - added LED signals (@tharexde)\n - Changed `lf em 4x50 dump` - now support json format (@tharexde)\n - Changed `lf em 4x50 wipe` - relocated write requests from device to client (@tharexde)\n - Renamed `lf em 4x50 write_passwordd` -> `writepwd` (@tharexde)\n - Changed `lf em 4x50` - all hex input parameters now have to be given in lsb format (output is still msb + lsb) (@tharexde)\n - Changed `lf em 4x50` - changed cli parameter from a (address) to b (block) (@tharexde)\n - Changed `lf em 4x50` - now supports cliparser (@tharexde)\n - Changed EM4x50 - stabilized and accelerated tag detection (@tharexde)\n - Changed EM4x50 - removed global tag structure on device side (@tharexde)\n - Fixed `hf 15 sim` - Added basic response to GET_SYSTEM_INFO and READBLOCK requests in order to fix iso15693 tag sim (@cyberpunk-re)\n - Added `mf mfu sim t 7 n <numreads>` - MFU emulation now supports automatic exit after <num> blocks read. (@cyberpunk-re)\n - Added T55xx Guide to assist in learning how to use the T55xx chip (@mwalker33)\n - Fixed `hf iclass wrbl` - dealing with tags in unsecured vs secured pagemode now is correct (@iceman1001)\n - Changed many commands to cliparser (@iceman1001, @tcprst, @mwalker33,...)\n - ...\n - Changed `hf iclass chk/lookup/loclass` speedups (@iceman1001)\n - Changed - ongoing conversion to cliparser (@tcprst, @iceman1001)\n - Added compilation options for 256k Proxmark versions, see doc (@doegox)\n - Added support for 10b UID in `hf 14a sim` (@doegox)\n - Added `HF_TCPRST` standalone mode which read and emulate IKEA Rothult cards (@tcprst)\n - Added Gallagher key checking/KDF on MIFARE Desfire (@NZSmartie)\n - Added dictionaries with common words of proper size (@will-caruana)\n - Added `hf mf supercard` (@iceman1001)\n - Added initial support for MIFARE Key Diversification, cf AN10922 (@NZSmartie)\n - Changed MIFARE detection improved (@VortixDev)\n - Changed `hf 14b sriread` to `hf 14b rdbl` and `hf 14b dump` (@iceman1001)\n - Added continuous mode to `hf 14a reader` (@doegox and @iceman1001)\n - Added `lf em 4x05_sniff` to allow extracting commands and passwords used be cloners. (@mwalker33)\n - Removed 'hf iclass replay' -  use the 'hf iclass dump' or 'hf iclass rdbl' with option \"n\"  instead (@iceman1001).  Concept taken from official repo (@pwpiwi)\n - Added Destron FDX-A support (@doegox and @iceman1001)\n - Added `lf em 4x05_chk` (@iceman1001)\n - Added `lf em 4x05_unlock` tear-off (@doegox and @iceman1001)\n - Added customizable 3DES key to hf mfu cauth (@socram8888)\n - Added generic `hw tearoff` and hooks in various write commands (@doegox and @iceman1001)\n - Added protect support for EM4x05 and fix various EM4x69/EM4x05 aspects (@doegox and @iceman1001)\n - Added incognito option to client to avoid mangling history & logs (@doegox)\n - Added option to hide/show plot sliders (@mwalker33)\n - Added \"</>\" key bindings to realign demod plot on samples (@doegox)\n - Added \"T\" key binding to trim plot (@doegox)\n - Added units options to `data timescale` (@doegox)\n - Added mouse scrolling to pan & zoom to plot (@doegox)\n - Added hf_14b_mobib Lua script (@iceman1001)\n - Added ASK CTx detection to hf 14b reader (@iceman1001 and @doegox)\n - Added low level support for 14b' aka Innovatron (@doegox)\n - Added doc/cliparser.md (@mwalker33)\n - Added `hf 14b apdu` - send APDU over ISO14443B (@iceman1001)\n - Added `lf t55xx chk e <EM4100> option` - Checks calculated password based on the EM4100 id from some white cloners formula by paleopterix (@mwalker33)\n - Added `lf t55xx sniff` to allow extracting commands and passwords used be cloners. (@mwalker33)\n - Added options to `lf read`, `lf cmdread`, `lf sniff` for repeated acquisitions (@doegox)\n - Changed options of `lf read` to match `lf cmdread`, this affects historical `d` and `s` options (@doegox)\n - Added `hf waveshare` to upload picture to Waveshare NFC-Powered e-Paper (@doegox)\n - Added `hf 14a config` to deal with badly configured cards: invalid ATQA/BCC/SAK (@doegox)\n - Added Mikron JSC Russia Ultralight EV1 41 pages tag type support (@McEloff)\n - Added test for Ultralight gen2 magic 'hf search' (@McEloff)\n - Added test for Ultralight EV1 gen2 magic 'hf search' (@McEloff)\n - Added `hf mf gen3*`magic gen 3 card operations (@McEloff)\n - Re-added verichip command which seems missing (@iceman1001)\n - Fixed missing t55x7 config block detection (@iceman1001)\n - Fixed missing define on proxspace (@mwalker33)\n - Added `lf em 4x50_dump` (@iceman1001)\n - Added `lf em 4x50_read` (@tharexde)\n - Added `lf em 4x50_info` (@tharexde)\n - Added `4x50_write` (@tharexde)\n - Added `4x50_write_password` (@tharexde)\n - Fixed em4x50 demodulation error (@tharexde)\n - Fixed `hf mfdes` authentication issues, DES working (@bkerler)\n - Added Android cross-compilation to client cmake (@dxl, @doegox)\n - Fixed `emv scan` - now saves in current folder and uses unique names (@iceman1001)\n - Fixed pm3.sh - parse COM ports larger than one digit (@doegox)\n - Fixed stack size and automatically use available space for BigBuf. Stack is now 5K (@slurdge)\n - Added Mifare MAD Card Holder Information decoding (@lukaskuzmiak)\n - Changed Better precision for HF and LF voltage measurements and Add theremin.py script (@rosco)\n - Added Mifare MAD Info Byte decoding. Easier to identify Card Publisher (@lukaskuzmiak)\n - Changed use system Bzip2 library instead of Zlib for hardnested tables, tables are now 7x smaller (@doegox)\n - Changed pushed some ARM source to compile with THUMB.  Saves a lot of space of ARM flash memory (@slurdge)\n - Changed from using ZLIB compression of FPGA images in ARM to LZ4.  15%+ speedups when swapping between HF & LF now (@slurdge)\n - Fixed `emv scan -w` - hash mismatch, solution similar to below (@iceman1001)\n - Fixed 'emv roca' - hash mismatch, merged from official repo (@pwpiwi)\n - Fixed 'lf ti demod' - now calculates correct crc (@iceman1001)\n - Added Python3 as possible script engine (@iceman1001, @doegox)\n - Added doc/mfu_binary_format_notes.md (@iceman1001)\n - Fixed `hf mfu dump` - now reads Ulev1 3counter vs NTAG 1 counters (@iceman1001)\n - Fixed `hf mfu info` - now print correct cfg1 - nfc protection (@iceman1001)\n - Fixed `hf mfu eload` - now detects and converts between plain/old/new mfu binary format (@iceman1001)\n - Changed hitag2crack now integrated into main Makefile, tests added (@doegox)\n - Added `make check` mechanics (@doegox)\n - Changed log files moved to subfolders (@doegox)\n - Changed use system Lua library if available (@doegox)\n - Changed use system Jansson library if available (@doegox)\n - Changed use system Whereami library if available (@doegox)\n - Changed use system Zlib library if available (@doegox)\n - Fixed release version information (@doegox)\n\n## [ice coffee.4.9237][2020-05-21]\n - Updated documentation (@doegox, @iceman1001)\n - Changed `pm3test.sh` - more regression tests to  (@doegox, @iceman1001)\n - Changed `hf 15 dump` - now supports basic json format (@iceman1001)\n - Changed Test and fix many `-Wxxxxxx` warnings [compiler trials] (@doegox)\n - Fixed COVERITY warnings [compiler trials] (@doegox, @iceman1001)\n - Fixed CPPCHECKER warnings [compiler trials] (@doegox, @iceman1001)\n - Fixed CLANG warnings [compiler trials] (@doegox)\n - Changed stricter warnings [compiler trials] (@doegox)\n - Changed remove section version_information for client (@doegox)\n - Changed Add RELEASE_NAME (@doegox)\n - Changed version info also for client (@doegox)\n - Added `make release` (@doegox)\n - Changed `trace load` - err if offline mode (@doegox)\n - Fixed `standalone mode matty_run` eloadcard (@iceman1001)\n - Added, HF 15 traces (@FlUxIUS)\n - Fixed follow naming conventions [android] (@dxl)\n - Changed work directory supported [android] (@dxl)\n - Added `lf fdx demod` - decoding of Bio-Thermo lf tag. Thanks to Rosco! (@iceman1001)\n - Fixed  32-bit time_t compilation error on [WIN64] (@grspy)\n - Changed LogTrace error msg (@doegox)\n - Changed remove inline [compiler trials] (@iceman1001)\n - Changed adding execute/home/current working directory functions to lua (<@iceman1001)\n - Changed fix max duration in LogTrace (@doegox)\n - Changed first attempt for trace log header (@iceman1001)\n - Changed pm3.sh, attempt to detect BT dongle when udevadm is not available (@doegox)\n - Changed pm3.sh, test access to /dev/ttyXXX files as prerequisite for [linux] (@doegox)\n - iclass bf: avoid slowdown (@doegox)\n - Changed pm3tests.sh, shellcheck (@doegox)\n - Changed pm3.sh, shellcheck (@doegox)\n - Changed pm3.sh, err msgs on stderr (@doegox)\n - Changed pm3.sh, textual and --list with no device, exit 1 (@doegox)\n - Changed pm3.sh, without udev: change detection routine (@doegox)\n - Changed pm3.sh, alternative if udevadm is not available [termux] (@doegox)\n - Changed `makefiles` - allow to skip pthread [termux] (@doegox)\n - Changed `script run test_t55x7` - enabled param to swap modulation to test (@iceman1001)\n - Added mf_nonce_brute from https://github.com/@iceman1001/mf_nonce_brute and merge to pm3 Makefile (@doegox)\n - Changed `lf indala demod` - more lenient size check (@iceman1001)\n - Changed clarify BUTTON macro usages (@doegox)\n - Changed fix REV macros & hitagS (@doegox)\n - Changed `hf iclass loclass` -removed printvar function (@iceman1001)\n - Changed clock can be negative  (@iceman1001)\n - Changed `data tune` (@doegox)\n - fancy timers (@doegox)\n - Changed copied from pm3 repo (@iceman1001)\n - Changed psk demodualtion, keep starting samples to easily find the zero init bit (@iceman1001)\n - Changed use machine/endian.h with osx (Jamie Fiedler)\n - Fixed 2 issues in proxendian.h (@doegox)\n - Fixed issue #729. Avoid stalling on non-rdv4 when polling for FeliCa without card in proximity (@doegox)\n - Changed `lf nexwatch demod` - lenient demod sizes (@iceman1001)\n - Changed `lf nexwath sim/clone` - now supports 88bit format direct. (@iceman1001)\n - Rewritten `standalone mode lf_em4100rwc `, added card bruteforce mode. (Dmitriy Loginoov)\n - Changed `data load` - color (@iceman1001)\n - Changed appveyor verbose (@doegox)\n - Changed `lf nexwatch demod` - now detects type, and show parity /chksum (@iceman1001)\n - Changed `lfsampling` - interruptible only when logging not yet triggered (@doegox)\n - Changed `lf keri demod` - more leanient when it comes to bits (@iceman1001)\n - Fixed proper filtering of RL markers (@doegox)\n - Changed clean deps [compiler trials] (@doegox)\n - Changed remove c99 restrictions [compiler trials] (@doegox)\n - Added tracelog file for hf mfu sniff or a ntag (@iceman1001)\n - Changed `trace list` - different alloc (@iceman1001)\n - Changed convert OLD -> MIX  (@iceman1001)\n - Changed `trace list` - adjust messages (@iceman1001)\n - Fixed a mem corruption in `trace load/list` (@doegox)\n - Changed rework banners (@doegox)\n - Changed Let's see if the prompt suffixed spaces are still needed.(@doegox)\n - Fixed colored readline prompt bug (@doegox)\n - Changed simpler ul_print_type (@doegox)\n - Fixed cmake for reveng [compiler trials] (@doegox)\n - Changed hook reveng outputs to pm3 machinery, add regression test (@doegox)\n - Changed cmake android: add backslashes for host compatibility [compiler trials](@doegox)\n - Changed Translation some comments from Chinese to English. [android] (@dxl)\n - Changed cmake android: use common cmake files for deps [android] (@doegox)\n - Fixed proper way to fix reveng getopt bug(@doegox)\n - Changed cmake deps: add prefix pm3rrg_rdv4_  [compiler trials] (@doegox)\n - Changed cmake deps: add -fPIC so they can be integrated in a pm3 shared lib [compiler trials] (@doegox)\n - Changed platform adaptation [android] (@dxl)\n - Changed don't mix ifdef and defined [android] (@dxl)\n - Fixed `trace list`- too short array for explanation (@iceman1001)\n - Changed check for sim module fw file (@iceman1001)\n - Changed rpi aling warning [compiler trials] (@iceman1001)\n - Changed more LF demodulation tests (@iceman1001)\n - Changed update whereami and avoid compiling unnneded troublesome parts [compiler trials] (@doegox)\n - Changed rework C includes in C++ [compiler trials] (@doegox)\n - Changed leanient parsing of tcp:/bt:/socket: vars (@iceman1001)\n - Changed add bluetooth group to `make accessrights` (@iceman1001)\n - Changed `Makefile` - fix PKG_CONFIG_ENV (@uli)\n - Changed `f sim` - now only fills until bigbuffer is full (@iceman1001)\n - Changed `hf mf hardnested` - don't drop field when in test mode (@doegox)\n - Changed `lf sim` - better to return err on faulty offset, thanks @iceman (@doegox)\n - Changed `lf sim` - fix offset of last packet (@doegox)\n - Changed `client Makefile` - make sure to rebuild deps when needed [compiler trials](@doegox)\n - Changed silent err if dbus absent [linux] (@doegox)\n - Changed `pm3.sh` - for direct bt devices (@doegox)\n - Changed `pm3.sh` - moved WSL/PS3.x bt native to be tested first. Since call to Win32_serialport crashes it. (@iceman1001)\n - Changed `pm3.sh` - Bt dongle, bt direct listing of serial ports on WSL and PS3.x,  now using powershell.exe since wmic is deprecated (@iceman1001)\n - Changed remove libsndfile (@doegox)\n - Changed enforce PACKED structs [compiler trials] (@iceman1001)\n - Changed adjust number of threads according to cpu (@iceman1001)\n - Changed `hitag2crack` compile flags(@doegox)\n - Changed msdsal fix bug after var de-shadowing (@doegox)\n - Changed lighter msg for loading prefs, json will anyway always tell the filename (@doegox)\n - Changed make sure colors and emoji are disabled when not on TTY (@doegox)\n - Added `pref` command. PM3 client now support user preferences saved to a json file. (@mwalker33)\n - Added native support for Bluetooth in client [linux] (@doegox)\n - Added `LF_EM4100RSWB` (based on `LF_EM4100RWC`) standalone mode to read/sim/clone/brute EM4100 cards (@Monster1024)\n - Added `HF_MSDSAL` standalone mode which read and emulate Visa EMV cards (@Netxing)\n - Added `hf mfu tear` - Mifare Ultralight tear off experiment (@cintainfinitam, @fukmar)\n - Added Mifare Desfire Read/Write/Create files/records/values functionality and several fixes to `hf mfdes` (@bkerler)\n - Added CreateStdFile command to Mifare `hf mfdes` (@bkerler)\n - Rework des/3des/3k3des/aes auth. Port to mbedtls crypto library on device (@bkerler)\n - Port `hf mfdes` Auntentication to CommandNG structure, fix auth session key (@bkerler)\n - Updates `hf mfdes` functions, improved logging and added new commands (@bkerler)\n - Updated 'legic.lua' and 'legic_clone.lua' script - works with current command set (@Pizza_4u)\n - Rewrote `hf mfdes` functions and added apdu debugging (@bkerler)\n - Added Mifare Desfire GetDFNames and improve HF MFDES Enum output (@bkerler)\n - Fixed Mifare Desfire select appid handling (@bkerler)\n - Improved `hf 14a info` - card detection handling (@bkerler)\n - Updated helptext layout in all luascripts (@iceman1001)\n - Changed `hf mfdes info` - output and logging (@bkerler)\n - Updated texts in `hf legic` commands (@ikarus23)\n - Fixed timing bug inside 40x5 (@mwalker33)\n - Refactored all Hitag2 attacks (@doegox)\n - Added two new Hitag2 attacks (@doegox)\n - Changed `hf iclass decrypt` - limit amount of data to read if wrong app limit (@iceman1001)\n - Changed `hf search` - now continue to search in case of dual tech cards (@iceman1001) Thanks to @ikarus23 for the suggestion!\n - Added `hf topas info` - old reader command,  now also prints NDEF (@iceman1001)\n - Changed `hf topaz reader` - now only prints lighter info, like UID. (@iceman1001)\n - Changed `hf iclass readtagfile` - improved param handling (@iceman1001)\n - Changed `hf mfu ndef` - text record now correctly decode language code and test (@iceman1001) Thanks to @bettse!\n - Updated the helptexts for `hf iclass` commands (@iceman1001)\n - Fixed NDEF TLV lock / memory parsed correct (@merlokk)\n - Changed `mem spiffs` commands now parse h param correct (@iceman1001)\n - Added colour to `hf mf chk` and `hf mf fchk` (@dunderhay)\n - Changed - updated public keys info (@bkerler)\n - Changed - mfc default keys removed dublicates (@iceman1001)\n . Change - mfc default keys got new entries found on TagInfo app (@bkerler)\n - Added `hf mfu ndef` - read and decode NDEF Type2 messages (@iceman1001)\n - Added `data ndef` - decode NDEF messages (@iceman1001)\n - Changed - usb write's now waits for shiftregisters (@pwpiwi)\n - Changed - NDEF supports more signatures now (@iceman1001)\n - OSX Makefile now supports `make style` and `make checks` (@Pizza_4u)\n - Added `HF_LEGIC` standalone mode to read and simulate a Legic prime tag (@Pizza_4u)\n - Added keri MS decode/encode and update `lf keri clone` to support MS fc/cid cloning. (@mwalker33)\n - Fixed `hf mfdes enum` - now actually manages to enumerate files under all AID's. :smiley:  (@iceman1001)\n - Fixed `hf mfdes info` - now detects DESFire light and work properly Wrapped commands :+1: (@iceman1001)\n - :smiling_imp: support (@doegox)\n - Additional colour changes as recommended by @iceman (@dunderhay)\n - Changed type colour for `hf 14a` card types (@dunderhay)\n - Added colour to `hf mfdes` command (@dunderhay)\n - Added `HINTS` command.  Will turn off / on hint messages. Default mode is OFF.  (@iceman1001)\n - Added colour to `hf 14a` and `hf mfu` commands (@dunderhay)\n - Added colour to `lf hid` commands (@dunderhay)\n - Changed `script run hf_bruteforce -s start_id -e end_id -t timeout -x mifare_card_type` - The hf_bruteforce card script now requires Mifare type (mfc or mfu) (@dunderhay)\n - Updated `hf_bruteforce.lua` script - added support for brute forcing Mifare Ultralight EV1 cards (@dunderhay)\n - Added `hf mf personlize` - personalize the UID of a Mifare Classic EV1 card (@pwpiwi)\n - Changed - hint texts added to all lf clone commands (@iceman1001)\n - Changed `lf keri demod` - adjusted the internal id. (@mwalker33)\n - Added seamless integration with cryptohelper (@iceman1001)\n - Changed `lf hid brute` - new params for direction (UP/DOWN); textual and main loop actually exit. (@capnkrunchy and @iceman1001)\n - Fixed `lf hid brute` - made it work again (@capnkrunchy)\n - Fixed standalone mode HF_MATTYRUN - correct logic when all keys found in printing. partial fix  (@iceman1001)\n - Changed static nonce detection got tighter (@iceman1001)\n - Improved termux notes (@msoose)\n - Fixed `hf mf autopwn` - works on debian 10 *nix. Bad exit commands in hardnested (@iceman1001)\n - Fixed `hf mf hardnested` - bad mutex strategies (@msoose)\n - Changed `lf hitag` - now obeys `lf config` (@iceman1001)\n - Added all python 2 scripts to python 3 (@doegox and @sigwinch28)\n - Removed undefined exit behaviour from `analyzesize` tool: it now exits with code 2 when called with wrong args (@sigwinch28)\n - Replaced shebangs in scripts with more portable versions which use `/usr/bin/env` (@sigwinch28)\n - Added `hf lto restore` - restore LTO cartridge memory from dump file [.bin|.eml] (@Kevin-Nakamoto)\n - Added `LF_ICEHID` standalone mode which searches for lf HID credentials and store to RDV4 flashmem (@iceman1001)\n - Added `HF_14ASNIFF` standalone mode with storing trace to RDV4 flashmem (@micolous)\n - Added `hf lto dump` - dump 8160 bytes of data from LTO cartridge memory and save to file (@Kevin-Nakamoto)\n - Changed `data plot` - write serial port name in window title for plot / slider window (@iceman1001)\n - Added `hf lto wrbl` - write block support for LTO Cartridge memory (@Kevin-Nakamoto)\n - Fixed compilation under openSUSE (@hsanjuan)\n - Added `lf nexwatch sim` - use raw hex to simulate (@iceman1001)\n - Fixed `lf indala read` - long id 224bits preamble identification less strict (@iceman1001)\n - Added `hf mf staticnested` - useful when targeting the strange cards with a static nonce. (@iceman1001) Thanks to @xtigmh @uzlonewolf for their solutions.\n - Added `hf plot` (@pwpiwi)\n - Fixed `lf config` - when called with no params, it no longer mess up all device lf config settings. (@iceman1001)\n - Changed `lf indala clone` - new option `--Q5` writes to q5/T5555 tags. (@iceman1001)\n - Changed `lf indala clone` - new option `-c <card id>` allows cloning INDALA tag from Heden2L/Hedengren ID format (@iceman1001) - Thanks to @randomdude42 for solution\n - Changed `lf indala demod` - added decode Heden2L/Hedengren format (@iceman1001) - Thanks to @randomdude42 for solution\n - Added `commands.md` - document with all proxmark client commands. Generated with XX_internal_command_dump_markdown_XX. (@iceman1001)\n - Changed `lf pac clone` - new option `c <card id>` to allow cloning PAC/Stanley tag from card ID (@danshuk)\n - Changed `lf pac read` - decoded PAC/Stanley card ID (@danshuk)\n - Changed mifare classic keytable output refactored and uses colors (@iceman1001)\n - Fixed `hf mf nested` - now writes the correct blockno (@iceman1001)\n - Changed `lf t55xx dump` - now supports saving to JSON (@iceman1001)\n - Changed `hf mf chk | fchk`  faster authentication by lower timeout limit. (@pwpiwi)\n - Changed `hf mf hardnested` - now detects \"static / fixed\" nonce tags and exits (@iceman1001)\n - Changed `hf mf csave` - now uses UID in filename (@iceman1001)\n - Fixed `hf mf chk` - read block B logical error. #489 (@iceman1001)\n - Added `hf mf ekeyprn d` - new parameter to save keys to file (@iceman1001)\n - Added `mfu_magic.lua` - script to interact with your magic NTAG tag. (@iceman1001)\n - Added `hf_bruteforce.lua` - script bruteforces uid for 14a using hf 14a sim (@keld)\n - Added `tools\\pm3_cs8.pl` - convert .pm3 files to wave format (@samyk)\n - Added `tools\\pm3_amii_bin2eml.pl` - amiibo convering script (@samyk)\n - Changed `hf 14a info` - now detects \"static / fixed\" nonce tags (@iceman1001)\n - Changed `data save f <filename> w` - params reworked.  (@iceman1001)\n - Changed `hf search` - now should detect LTO-CM tags (@iceman1001)\n - Added `hf lto info` - skeleton support for LTO Cartridge memory (@iceman1001)\n - Added saving as wave format (@anon)\n - Added ISO15_WRITE annotation (@pwipiw)\n - Added `lto_dump.lua` @kevin\n - Added `hf mf cwipe` magic chinese card (gen1a) wipe to default state (@merlokk)\n - Added `pm3_mf7b_wipe.py` python script. Wipes magic S70 7B Gen2 card. (@vulnersCom)\n - Added `hf mfp chk` Mifare plus command for check keys from public keys list, from dictionary or 1 and 2-byte bruteforce (@merlokk)\n - Changed `hf 15` - some refactoring (@grspy)\n - Added `hf 15 writeafi` and `hf 15 writedsfid` (@grspy)\n - Added detailed info for SLIX2 tags in `hf 15 info` (@grspy)\n - Fixed `hf list felica` and `hf felica sniff` (@7homasSutter)\n - Added `hf felica wrunencrypted` (@7homasSutter)\n - Added `hf felica rdunencrypted` (@7homasSutter)\n - Added `hf felica rqresponse` (@7homasSutter)\n - Added `hf felica rqservice` (@7homasSutter)\n - Added polling for felica standard (@7homasSutter)\n - Added `lf t55xx dump save` and `lf t55xx restore` for .bin and .eml files (@mwalker33)\n - Added `lf t55xx detected` to try without password first (@mwalker33)\n - Changed `lf indala read` - added indala 26bit decoding (@martinbeier)\n - Changed `lf t55xx detect` to try without password first (@mwalker33)\n - Display high bit for detected Kastle HIDs to allow `lf hid clone [id]` to work properly (@swg0101)\n - Added option `-n` to scripts pm3* (@doegox)\n - Added `wiegand list/encode/decode` - wiegand format manipulation. Adapted to fit here. (@grauerfuchs)\n - Added support for color text on windows 10 (@mwalker33)\n - Added `s` <samples to skip> to `lf config` / `lf sniff` to skip samples when sniffing based on same option in Proxmark/proxmark3 by @marshmellow42. (@mwalker33)\n - Added save to .eml and .bin for `em 4x05_dump` (@mwalker33)\n - Added option `-n` to scripts pm3* (@doegox)\n - Fixed `em 4x05_dump` to print all blocks read (@mwalker33)\n - Fixed T55xx config getting displayed when using password when no password needed on read. (@mwalker33)\n - Added T55x7 downlink mode auto usage via mode detected (lf t55 detect) (@mwalker33)\n - Added `lf t55xx protect` - sets password and enables password protection on t55x7 tag (@iceman1001)\n - Changed `lf t55xx wipe` - now accepts user provided configuration block (@iceman1001)\n - Added T55x7 downlink mode support r <mode> 0 Default, 1 Long Leading 0, 2 Leading 0, 3 1 of 4 and 4 (in some commands) try all. (@mwalker33)\n - Changed proxmark3-flasher is now merged into proxmark3 client. Add pm3-flash (@doegox)\n - Changed `hf iclass clone\\dump\\rdbl\\wrbl` - now uses NG (@iceman1001)\n - Fixed `hf iclass clone` - last block always fails (@iceman1001)\n - Changed `hf iclass clone` - retries ten times, less output (honor verbose)  (@iceman1001)\n - Changed `hf iclass dump` - retries ten times, less output (honor verbose)  (@iceman1001)\n - Rename `hf iclass writeblk` ->  `hf iclass wrbl` to match hf mf wrbl (@iceman1001)\n - Rename `hf iclass readblk` ->  `hf iclass rdbl`  to match hf mf rdbl (@iceman1001)\n - Added cmdscript example and show usage with shebang (@doegox)\n - Added instructions for Fedora (@doegox)\n - Changed reduce the list of requirements to the minimum and move to QT5 (@doegox)\n - Added `make install` and reorganize/rename stuffs accordingly (@doegox)\n - Added searchFile for several types of files (@doegox / @iceman1001)\n - Changed posix sh version of mkversion (@doegox)\n - Changed remove entirely ncurses, not needed nowadays (@doegox)\n - Changed remove deprecated termcap, use ncurses instead (@ZeroChaos-)\n - Changed `hf iclass encrypt` - now takes transport key as param. (@iceman1001)\n - Changed `hf iclass decrypt` - now takes transport key as param. (@iceman1001)\n - Changed `hf mf fchk m` - now secretly dumps card to emul, if all keys are found (@iceman1001)\n - Changed history and logfile are now saved into $HOME/.proxmark3/ (@doegox)\n - Changed optimization of iclass mac calculations on deviceside (@pwpiwi)\n - Added `hf mf autopwn` - Autopwn function for Mifare Classic, extract all keys and dump card memory (@matthiaskonrath)\n - Added Lua paths: look for scripts also in ~/.proxmark/lua{scripts,libs} and /usr/local/share/proxmark3/lua{scripts,libs} (@doegox)\n - Changed Lua directory scripts/ to luascript/ (@doegox)\n - Changed non-rdv4 PLATFORM must now use the generic PM3OTHER, simpler (@doegox)\n - Fixed reveng integration for all platforms else than WIN32 (@doegox)\n - Added cheat sheet for easy operations of the Proxmark3 (scund00r)\n - Chg commands are now in green in the helptext list (@iceman1001)\n - Fixed `script run ndefdump` - better exit messages when failing (@iceman1001)\n - Fixed `hf iclass dump` - now also saves in EML format (@iceman1001)\n - Fixed `hf iclass sim 3` - now works on legacy readers and legacy SE readers (@iceman1001)\n - Rework hitag2 read/write help (@ViRb3)\n - Added `lf nedap` - encoding / decoding  (anon)\n - Added client option `-i` to stay in interactive mode after a script or command (@DidierStevens/@doegox)\n - Added VSCode tasks (@ViRb3)\n - Better warn user of hardcoded hitag info (@ViRb3)\n - Format and docs hitag (@ViRb3)\n - Fixed hitag password write offset by 1 (@ViRb3)\n - Fixed momentarily flash read/write of dicts (@doegox/@cjbrigato)\n - Added some more default keys (@anon)\n - Added `hf thinfilm sim` simulating Thinfilm NFC barcode tags (@doegox)\n - Added `hf thinfilm list` specific trace decoding (Thinfilm NFC barcode tags) (@doegox)\n - Fixed `hf topaz reader` - don't crash when trying to read a Thinfilm tag (@iceman1001)\n - Added `hf thinfilm info` - read / decode Kovio Thinfilm NFC barcode tags (@iceman1001)\n - Added FPGA LF adc path (@anon)\n - Added ECC support / check for NID_secp128r1 (@pwpiwi)\n - Added some more default keys (ollibolli)\n - Fixed T55x7 Downlink timings backward compatible (@mwalker33)\n - Added proper Makefile halting when using incompatible STANDALONE and PLATFORM vars (@doegox)\n - Added T55x7 Downlink mode support (@mwalker33)\n - Added SPIFFS Flash filesystem support (@cjbrigato)\n - Fixed support for flashing 512K units with old bootrom (@slurdge/@doegox)\n - Fixed `hf mf sim` - wrong access rights to write key B in trailer (@McEloff)\n - Added option -i to flasher to query Pm3 for its memory size (@doegox)\n - Added support for flashing 512K units (@slurdge)\n - Added a simple python tool to check the elf sizes (@slurdge)\n - Changed new keys for Vigik badges in default_keys.dict (@luminouw)\n - Added `hw standalone` to jump to standalone mode from command line or script (@doegox)\n - Added to `hf 14a apdu` print apdu and compose apdu (@merlokk)\n - Changed buggy `mem read` removed, `mem save` renamed `mem dump`, can now display too (@doegox)\n - Fixed timeout for mem wipe was too short, thanks @cjbrigato (@doegox)\n - Fixed `hf mf sim` - Mifare Classic simulation more flexible anti-collision check (@McEloff)\n - Changed `hf mf sim` - Mifare Classic simulation not respond NACK on invalid authentication request (@McEloff)\n - Changed `read_pwd_mem.lua` now handles Mifare Classic dictionaries large than 4096 bytes (@iceman1001)\n - Changed Do not clear trace log during `hf mf chk`, to save whole process history (@McEloff)\n - Added `msleep` command, for pauses in scripts (@doegox)\n - Added support for WSL in proxmark.sh (@doegox)\n - Added documentation for usage of Proxmark3 under WSL (@doegox)\n - Changed replace aes.c with mbedtls version (@slurdge)\n - Changed replace ukbhit by kbd_enter_pressed, not requiring tcgetattr (@xianglin1998/@doegox)\n - Added config for RaspberryPi in JTAG tools (@doegox)\n - Added config for FTDI C232HM-DDHSL-0 in JTAG tools (@doegox)\n - Fixed compilation under MacOSX with binutils (@matrix)\n - Added dynamic report of the chipID for flashing purposes (@slurdge)\n - Fixed Clang warnings (@matrix)\n - Fixed EMVGPO bug (@matrix)\n - Added hitag2 write password auth (@ViRb3)\n - Added check if bootloader segment is within bounds (@slurdge)\n - Added `hf 15 csetuid` - set UID on ISO-15693 Magic tags (@t0m4-null)\n - Changed Print help if unknown arg for hitag reader/writer (@ViRb3)\n - Fixed clock deadlock in hitag sniff (@ViRb3)\n - Added compiler info in client & ARM sections (@slurdge)\n - Added support for automatic COM detection on Windows (@slurdge)\n - Added support for compilation on RaspberryPiZero (armv6) (@doegox)\n - Changed updates to README (@iceman1001)\n - Changed `hf mf/mfu dbg` => `hw dbg` (@doegox)\n - Changed replace usb_poll_validate_length() by data_available() that supports USART too (@doegox)\n - Make sure standalone modes can be launched when connected on USB without client (@doegox)\n - Changed cleaner makefile execution, use `make V=1` if you want to see full lines (@doegox)\n - Changed automate make clean when platform definitions are changed (@doegox)\n - Added STANDALONE option to Makefile.hal (@Fl0-0)\n - Changed mem info - production public key to verify rdv4.0 flash  signature (@iceman1001)\n - Fixed specify that we need TCP and not UDP connection (@phcoder)\n - Changed lf cotag demod - adjusted error trigger (@iceman1001)\n - Added documentation on BT add-on (@iceman1001/@doegox)\n - Changed new button behaviour in bootloader mode, no need to keep it pressed, press again to interrupt (@doegox)\n - Changed new keys in dicts, new mem layout to accommodate them (@iceman1001/various)\n - Fixed lf sim -  if called with empty graphbuffer all strange things happen, like turning on HF field (@iceman1001)\n - Changed hf 14a sim / hf mf sim - check buttonpress/usb frame fewer times in order not to disrupt simulation (@McEloff)\n - Changed data convertbitstream - converts bit to max/min in order to facilitate demodulation of simulation data (@iceman1001)\n - Changed lf em 410x_demod - now can demod the simulation data (@iceman1001)\n - Added HC-06 scripts for BT add-on (@doegox)\n - Fixed lf nedap sim - error when adding parity (@iceman1001)\n - Added documentation on UART and baudrates (@doegox/@iceman1001)\n - Changed prompt now shows which channel is used (@iceman1001)\n - Changed USART baudrates computation, up to 6Mbps (@iceman1001/@doegox)\n - Changed hf mf nack - keep sync if started without card over antenna\n - Added usart btfactory - to reset a misconfigured BT add-on (@doegox)\n - Changed hw status - now prints number of dictionary keys loaded (@iceman1001)\n - Added home, end, pageup, and pagedown keybinds to the plot GUI. Also fix paged movement in GUI. (@mcd1992)\n - Changed legic.lua saves data in EML and BIN formats (@iceman1001)\n - Changed hf tune - is now synchronous (for BT add-on) and can be interrupted by kbd (@doegox)\n - Changed update macOS install instruction (@ Uli Heilmeier)\n - Added trace output in hexdump format for Wireshark import (@ Uli Heilmeier)\n - Added usart btpin - to change BT add-on PIN (@doegox)\n - Added reconnection support (@iceman1001/@doegox)\n - Added usart tx/rx/... - USART developer commands (@doegox)\n - Added PLATFORM_EXTRAS, WITH_FPC_USART_HOST, BTADDON Makefile configuration (@doegox)\n - Fixed slow reconfigure on mingw of serial port (@iceman1001)\n - Fixed cross thread communictions of timeout variable (@iceman1001)\n - Changed client is now \"universal\", adapting to Proxmark3 capabilities (@doegox)\n - Added disconnect support to Lua (@iceman1001)\n - Changed handles FPC/FLASH FW more gracefully on non-RDV4 pm3 (@doegox)\n - Added JTAG support for Shikra (@NinjaStyle82)\n - Changed smart color handling: only if linux and on real term (@doegox)\n - Changed reconfigure uart timeouts when compiled for FPC and connecting over USB (@iceman1001)\n - Changed fast push for many commands (@iceman1001/@doegox)\n - Added: fast push for Lua (@iceman1001)\n - Added NDEF parser in Lua (@iceman1001)\n - Changed improve NDEF parser (@iceman1001)\n - Changed all commands got migrated to MIX/NG packet format (@iceman1001/@doegox)\n - Fixed Mifare Ultralight read block missing bytes (@doegox)\n - Added support new frame format in all Lua scripts (@iceman1001)\n - Added CMD_CAPABILITIES for pm3 to inform dynamically the client (@doegox)\n - Changed baudrate handling, make it clear it is only indicative for USB-CDC & BT (@doegox)\n - Changed new progressive light scheme for `hw detectreader` (@doegox)\n - Added common error definitions system for retvals (@doegox)\n - Changed USART RX & TX code and fix delays handling to make it more robust, especially over BT (@doegox)\n - Added support for new frames format, speedup & huge changes, see doc/new_frame_format.txt (@doegox)\n - Changed loadFile* & saveFile* accept filenames with (or still without) extension (@doegox)\n - Fixed LoadEML to accept final \"\\n\", e.g. from pm3_mfd2eml.py (@doegox)\n - Changed rework shell scripts for easy client or flasher (@doegox)\n - Fixed stop poking Internet when compiling (@doegox)\n - Added support for multiple commands to \"-c\", e.g. proxmark3 -c \"hw ping;hw version\" (@doegox)\n - Fixed external flash writing bitflips issues at 24MHz (@doegox)\n - Added color support to Dbprintf & alike and rework Dbprintf flags (@doegox)\n - Changed archive (and fix) hid-flasher (@doegox)\n - Added standalone placeholder to simplify new standalone integration (@doegox)\n - Changed refactor standalone mode info string (@iceman1001)\n - Added iceman skeleton standalone mode for ppl to use as base for their new modes (@iceman1001)\n - Changed move compilation options to Makefile.hal (@doegox)\n - Fixed compilation under OSX (@iceman1001)\n - Added openocd config files for JLink (@doegox)\n - Fixed compilation dependencies for recovery (@doegox)\n - Fixed segfault when loading a file (@doegox)\n - Change/Add new dump format for Ultralight/NTAG, counters support, simulation (@mceloff)\n - Added `hf mf sim` full-byte split anticollision support (@mceloff)\n - Fix/Add `hf mf sim` bugs fix, RATS support, etc (@mceloff)\n - Fixed serial of FPC. (@ryan)\n - Fixed `data shiftgraphzero` corrupting end of GraphBuffer (@doegox)\n - Fixed `hf legic info` - unsegmented card now uses card size to calc remaining length (@iceman1001)\n - Added 36bit HID format, extend calcWiegand() to include oem bits (@davidbeauchamp)\n - Fixed `hf mf hardnested` - not verify key when reading nonce file (@iceman1001)\n - Changed optimizations for ask/bi (@iceman1001)\n - Fixed `hf mf sim` - bugs fix, refactoring (@mceloff)\n - Added WRITE and COMPATIBLE_WRITE support to Mifare Ultralight/NTAG simulation (@mceloff)\n - Changed installation instructions and add video links (@5w0rdfish)\n - Changed `hf mf sim` to support more types (@vratiskol)\n - Changed better strong wave detection for biphase (@iceman1001)\n - Added `script run test_t55x7` (@iceman1001)\n - Added new lua scripting support for some t55xx commands (@iceman1001)\n - Added FPC USART for BT add-on with pm3 client. (@doegox)\n - Added `-b baudrate` option to the pm3 client. (@doegox)\n - Changed `lf t55xx info`: tell if known configuration block0. (@iceman1001)\n - Fix/Add FPC usart: fix TX, bring RX, full speed. (@doegox)\n - Changed `lf t55xx config` options: allow to toggle on/off i/q5/st\n - Changed `lf t55xx info`: support offline block0, Q5, fix extended, add warns. (@doegox)\n - Avoid race condition when flasher finds the not yet closed pm3 port. (@doegox)\n - Fixed `lf t55xx trace`: read the proper block. (@doegox)\n - Fixed Indala 64 on T55xx: use PSK1. (@doegox)\n - Force proper Linefeed (LF) handling in ProxSpace. (@vratiskol)\n - Fixed Makefiles race conditions to allow parallel compilation, e.g. `make -j8`. (@doegox)\n - Added - dictionary key file for MFU. (not in use at the moment) (@mazodude)\n - Changed `lf fdx demod` - better biphase maxerrors. (@MalteHillmann)\n - Changed `hf mf sim` - now works better against android (@mceloff)\n - Fixed `lf t55xx brute` - now works after aquiredata adaptations (@iceman1001)\n - Fixed `lf t55xx chk` - now works after aquiredata adaptations (@iceman1001)\n - Fixed `lf t55xx recoverpwd` - now works after aquiredata adaptations (@iceman1001)\n - Fixed `data detect p` - reverted bad clock detection (@iceman1001)\n - Changed `data detect a` - better clock detection (@iceman1001)\n - Added `hf 14a info` - now detects some magic card Gen2 (@iceman1001)\n - Removed `LCD` code in armsrc compilation (@iceman1001)\n - Changed - Generic fixes of codestyle (@doegox) (@iceman1001)\n - Changed `lf indala demod` - refactoring (@iceman1001)\n - Changed - handling fault bit markers (7) and partial nibbles in hex printing (@doegox)\n - Changed - printing of fault bit markers (7) using a dot (@doegox)\n - Changed `sc upgrade` - firmware file integrity check (@pwpiwi)\n - Fixed `data rawdemod am` - last bit was missing (@doegox)\n - Fixed `hf 15 dump f` - also selects tag first (@iceman1001)\n - Fixed `hf iclass clone` - missing fileclose (@iceman1001)\n - Added `trace list hitag` - old hitag annotations now use the new trace (@iceman1001)\n - Changed `lf hitag sim` - loads bin/eml/json (@iceman1001)\n - Changed `lf hitag reader 21` - saves in bin/eml/json (@iceman1001)\n - Changed `lf hitag` - refactoring (@iceman1001)\n - Changed `lf hitag` - refactoring (@pwpiwi)\n - Fixed `lf hitag` - generic fix for missing clock init (@pwpiwi)\n - Fixed fsk sim operations on deviceside - avoid division by zero (@doegox)\n - Fixed `hf mf fchk` - condition always false (@doegox)\n - Fixed `lf t55xx recoverpw` - shift as u32 (@doegox)\n - Fixed `lf ti demod` - shift as u32 (@doegox)\n - Fixed `lf ti read` - shift as u32 (@doegox)\n - Fixed `lf t55xx chk` - condition always false (@doegox)\n - Changed `lf sim` - ledcontrol refactoring (@doegox)\n - Fixed `hf mf nack` - signedness bug (@doegox)\n - Fixed `hf epa cnonce` - check return value (@doegox)\n - Fixed `lf hitag write` - condition always true (@doegox)\n - Fixed `mem write` - added extra check (@doegox)\n - Fixed `iso15693` - bad string cpy (@doegox)\n - Fixed `make style` - EOF LF support (@doegox)\n - Added `hf 14b raw` - added -t for timeout  (@iceman1001)\n - Rename `lf hitag snoop` - renamed to `lf hitag sniff` (@iceman1001)\n - Rename `lf snoop` - renamed to `lf sniff` (@iceman1001)\n - Rename `hf snoop` - renamed to `hf sniff` (@iceman1001)\n - Fixed `hf mfp wrbl` - more blocks available (@merlokk)\n - Added `make platform` - compile for non-rdv4 devices made simpler (@doegox)\n - Changed Makefiles optimizations when recompiling (@doegox)\n - Fixed `data load` - loads TITEST.txt again (@iceman1001)\n - Changed `lf search` - now detects TI (@iceman1001)\n - Changed fixing signal cleaning for LF (@doegox)\n - Fixed `lf paradox demod` - wrong check (@iceman1001)\n - Changed `lf t55xx` - aquiredata uses getsamples (@iceman1001)\n - Fixed `lf search` - chipset detection restore demod buffer again (@iceman1001)\n - Added `make style` (@doegox)\n - Fixed mixed tabs vs spaces. Now only use 4 space as tab. (@doegox)\n - Fixed `lf visa2000 read` - too few samples (@iceman1001)\n - Fixed `lf t55xx bruteforce` - infinity loop (@doegox)\n - Fixed `analyse nuid` - correct crc (@doegox)\n - Added command history not repeating logged commands (@doegox)\n - Fixed path for aidjson (@doegox)\n - Fixed missing init i2x (@doegox)\n - Fixed `14b select card` - (@doegox)\n - Added `hf mf ndef` - parsing of NDEF messages (@merlokk)\n - Added `hf mf mad` - parsing of Mifare Application Directory (@merlokk)\n - Rename `lf snoop` -> `lf sniff` (@iceman1001)\n - Rename `hf snoop` -> `hf sniff` (@iceman1001)\n - Changed generally added more colors (@iceman1001)\n - Changed `sc upgrade` updated firmware v3.11 (RDV40) (@sentiprox)\n - Changed `data autocorrelate` - better visual representation and added extra peak detection (@iceman1001)\n - Fixed `lf search` - false positive indala identification fixed (@iceman1001)\n - Added `lf keri` - basic support for Keri tags (@iceman1001)\n - Added `hf mf list` - re-added it again (@iceman1001)\n - Fixed - A lot of bugfixes, like memory leaks (@iceman1001)\n - Changed `hf 14a antifuzz` - original implementation (@asfabw),  reworked a bit\n - Fixed `hf mf fchk` (@iceman1001)\n - Fixed `usb slow on posix based systems` (@fl0-0)\n - Changed `lf pcf7931` - improved read code (@sguerrini97)\n - Changed `hf felica list` - started with some FeliCa annotations (@iceman1001)\n - Fixed `hf tune` - now works as expected (@iceman1001)\n - Added `option to use flash memory to upload dictionary files` (RDV40) (@iceman1001)\n - Fixed `printing percentage now standard compliant` (@fabled)\n - Added `emv roca` - command to test for ROCA vuln in public RSA modulus (@merlokk / @iceman1001)\n - Added TCP ports support (on linux) (@phcoder)\n - Added HF sniff standalone mode with optional storing of ULC/NTAG/ULEV1 authentication attempts (@bogiton)\n - Fixed `Lining up plot and control window` (@anticat)\n - Fixed `annoying focus behaviour` on OSX  (@Anticat)\n - Implemented AppNap API, fixing #283 and #627 OSX USB comm issues (@AntiCat)\n - Added `sc brute` - a naive SFI bruteforcer for contact smartcards (RDV40) (@iceman1001)\n - Changed `lf t55xx detectconfig` - now optional to persist settings to flashmem (RDV40) (@iceman1001)\n - Changed `hf mf csave` - now saves both EML/BIN formats (@iceman1001)\n - Changed `hf mf esave` - now saves both EML/BIN formats (@iceman1001)\n - Fixed `compiler warning on macos and gcc7.1 or higher`  (@TomHarkness)\n - Fixed `crash on Bionic libc if CloseProxmark is called twice` (@micolous)\n - Changed `lf hid` - got an  updated to Kastle format (@xilni)\n - Added `lf t55xx deviceconfig` - enables custom t55xx timing settings. (RDV40) (@iceman1001)\n - Chg adaptations for FPC communications (work in progress)  (@iceman1001)\n - Fixed `stand-alone Colin` - remake to benefit from flashmem for persistence. (@cjbrigato)\n - Fixed `LEGIC SIM` - remake of legic sim (@drandreas)\n - Changed `proxmark3 client threading`  - remake from official repo (@micolous)\n - Added `rem` - new command that adds a line to the log file (@didierStevens)\n - Fixed `EM410xdemod  empty tag id in lfops.c` (@Defensor7)\n - Fixed `usb device descriptor` - some android phones will enumerate better when iSerialnumber is not a multiple of 8 (@micolous, @megabug)\n - Fixed `StandaloneMode LF` -  when collecting signal, justNoise detection is needed (@didierStevens, @Megabug)\n - Fixed `StandAloneMode Colin` - mifare1ksim called with right params (@cjbrigato)\n - Improved `install.sh` to install dependencies for Ubuntu 18.04 and using max number of processors during compilation (@joanbono)\n - Modified `install.sh` script to work in macOS and Linux + added the `update.sh` and `proxmark3.sh` from joanbono (@TomHarkness)\n - Fixed `hf emv` - some cards need to have Le=0x00, some do not need to have (@merlokk)\n - Fixed `hf legic`  enhancement of rx / tx in legic commands (@drandreas)\n - Fixed `data buffclear` - now frees bigbuff also (@iceman1001)\n - Fixed GET_TICKS  and signess while shifting (@drandreas)\n - Added `hf 14b dump` - now dumps to file (bin & eml)  (@iceman1001)\n - Fixed fixed xcorrelation for strong signal (@drandreas)\n - Fixed `hf mf chk` - keytype was reversed (@TomHarkness)\n - Added strange vid/pid found in wild.  Could be pm3 easy clones. (@iceman1001)\n - Fixed `make udev`  -  udev filename could be in conflict,  renamed.  (@blshkv)\n - Fixed `lf t55xx config`  - wrong sized array disabled FSK1a/FSK2a as options (@grauerfuchs)\n - Added more default keys  (@j8048188) (@iceman1001)\n - Added `sc list/info/raw/reader/upgrade` - (RDV40) smart card module functionality  (@iceman1001)\n - Fixed `download eml buffer` (@drandreas)\n - Changed `exclusion of floatingpoint lib` (@pwpiwi)\n - Changed `lua scripts bit32 calls` (@iceman1001)\n - Changed `hw version`  (@pwpiwi),   adapted to iceman fork (@iceman1001)\n - Added `amiibo functionality`  (@jamchamb),   adapted to iceman fork (@iceman1001)\n - Fixed `hf legic`  (RDV40) adaptations to FPGA HF enhanched reading distance (@iceman1001)   Thanks to @drandreas!\n - Added `script run mifare_acces` - script to decode Mifare classic accessbits (@Neuromancer)\n - Added `mem load/save/wipe` - commands to upload / download to new RDV40 onboard flashmemory (@iceman1001)\n - Added `script run mifareplus` - script to communicate with a mifare plus tag (@dceliano)\n - Added FlashMemory functionality  (RDV40)  (@willok)\n - Fixed `hf mfu dump` - partial reads lead to corrupt data (Thanks @elafargue for pointing it out)\n - Changed `hf mfu dump / read`  - now retries five times. (@jamchamb)\n - Added `hf list mf` - deciphers crypto1 stream and works with first authentication and weak nested authentications (@Merlok)\n - Adjusted `lf cmdread` to respond to client when complete and the client will then automatically call `data samples` (@marshmellow42)\n - Added a bitbang mode to `lf cmdread` if delay is 0 the cmd bits turn off and on the antenna with 0 and 1 respectively (@marshmellow42)\n - dump / restore now uses custom filenames (@brianpow)\n - Removed `hf mf sniff` ,  (@iceman1001),  use HF 14A SNIFF instead\n - Added `hf iclass lookup` (@iceman1001)\n - Added `hf iclass chk` (@iceman1001)\n - Fixed ADC mux all closed push-pull state (@iceman1001)\n - Fixed `hf mf darkside` - speed fixes (@pwpiwi)\n - Fixed `hw tune`  -  now compensates for 3% error in output,  also measure full 140v using ADC channel 5 and 7.  (@iceman1001)\n - Updated loclass gpl license (@holiman)\n - Fixed Antenna on after changed FPGA Mode. (@iceman1001)\n - Added `hf mf nack` - Mifare NACK bug detection (@iceman1001) (@doegox)\n - Fixed `hf mf mifare` - zero parity works, no more double runs for normal darkside (@iceman1001)\n - Added `hf mf fchk` - the fastest check keys implementation tothisday (@iceman1001)\n - Fixed `hf iclass` - more stable demod (@iceman1001)\n - Added `hf iclass chk`  - check keys from default_iclass_keys.dic file (@iceman1001)\n - Fixed `hf 15 dump` - no more crc faults (@iceman1001)\n - Fixed `hf 15 read` - no more crc faults (@iceman1001)\n - Fixed `hf 15 readmulti` - no more crc faults (@iceman1001)\n - Changed proxmark command line parameter `flush` to `-f` or `-flush` (@merlokk)\n - Added to proxmark command line parameters `w` - wait 20s for serial port (@merlokk)\n - Added to proxmark command line parameters `c` and `l` - execute command and lua script from command line (@merlokk)\n - Added to proxmark ability to execute commands from stdin (pipe) (@merlokk)\n - Added new standalone mode \"HF Mifare ultra fast sniff/sim/clone - aka VIGIKPWN\"  (@cjbrigato)\n - Added to `hf 14a apdu` - exchange apdu via iso14443-4 (@merlokk)\n - Added to `hf 14a apdu` - apdu and tlv results parser (@merlokk)\n - Added `hf emv` commands  (@merlokk)\n - lots of bug fixes (many many)\n - Changed hf mfp security. Now it works in all the modes. (@drHatson)\n - Added `hf fido` commands that work with FIDO U2F authenticators (@merlokk)\n - Added mbedtls instead of old polarssl (@merlokk)\n - Added jansson (@merlokk)\n - Added `hf emv scan` - save card data to json file (@merlokk)\n - Added `hf emv` `gpo`, `readrec`, `genac`, `challenge`, `intauth` - separate commands from `hf emc exec` (@merlokk)\n - Added  `hf fido` `assert` and `make` commands from fido2 protocol (authenticatorMakeCredential and authenticatorGetAssertion) (@merlokk)\n - Added trailer block decoding to `hf mf rdbl` and `hf mf cgetbl` (@merlokk)\n - Added `hf mf mad` and `hf mfp mad` MAD decode, check and print commands (@merlokk)\n - Added `script run luxeodump` (@0xdrrb)\n - Fixed `lf hitag reader 02` - print all bytes (@bosb)\n - Fixed hitag S simulation (still not working), write, add example HITAG S 256  (@bosb)\n\n\n### Fixed\n - Changed driver file proxmark3.inf to support both old and new Product/Vendor IDs (@pwpiwi)\n - Changed start sequence in Qt mode (fix: short commands hangs main Qt thread) (@merlokk)\n\n## [ice.3.1.0][2017-09-26]\n - proxmark3 client can reconnect to device without restart (@iceman1001)\n - lots of bug fixes (many many)\n - trace/securakey-64169.pm3 - trace of a scecurakey (@atyppo)\n - `hf mf decrypt` - got some longer input and helptext parameter (@iceman1001)\n - Updated the Reveng 1.51 sourcecode to 1.52 from Reveng project homepage (@iceman1001)\n - `hf 14a read` - disconnects when failing to read tag (@iceman1001)\n - `hf mf csave` - renamed parameter `i` to `o` as in output (@iceman1001)\n\n## [3.0.0][2017-08-29]\n  Notes on this release\n  this version includes a merge with the PM3 official v3.0.1 code, a.k.a the \"Monster merge\"\n  There is a lot of changes,  command breaking changes, which is the cause for the JUMP in version number.\n  It is set to v3.0.0 to show that it is on par with PM3 Official v3 release.\n\n - Updated `mkversion.pl` to write a date based on file when repo is downloaded as a zip file from github (@iceman1001)\n - Update `readme.md` to fit GitHubs markup(@joanbono)\n - Added `script run ul_uid`, try to change UID on a magic UL-card. (@iceman1001)\n - Fixed `hf snoop` bug,  of wrong bool value (@ikarus23)\n - Fixed fullimage.s19, wrong offsets (@doegox)\n - Updated `77-mm-usb-device-blacklist.rules` for the pid/vid (@iceman1001)\n - `hf 14a sim` now follows Mifare UL-EV1 protocol better (@iceman1001)\n - Updated `fpga_hf.bit` file (@pwpiwi)\n - Added more card detections to `hf mfu info` (@iceman1001)\n - Fixed `hf mfu restore/dump` to use the right struct values in special data in dumpfile. (@iceman1001)\n - Added `hf mfu restore r` new parameter to use the new pwd for all further auths needed when executing (@iceman1001)\n - Added `default_keys_dic2lua.awk` script to generate default_keys file in client/lualibs (@iceman1001)\n - Fixes to lots of lua scripts, among others\n    - `mifare_autopwn`, now uses PRNG detection (@iceman1001)\n    - `mfkeys`, fixed bug which only tested the first key (@iceman1001)\n    - `dumptoemul`, removed last newline (@iceman1001)\n    - ...\n - Added USB/SERIAL communication enhancements (@micolous)\n - Changed `hf 14a cuids`, to be interrupted with keyboard press (@iceman1001)\n - Changed debugstatements for LF to show which function more unified (@iceman1001)\n - Added `script run calc_di` , to calculate some Mifare keys (@iceman1001)\n - Fixed iclass commands never shut down antenna afterwards (@iceman1001)\n - Changed 512kb detection when flashing (@iceman1001)\n - Fixed compilation GCC4.9 or higher detection (@winguru)\n - Fixed compiler warnings in Ubuntu 17.04 (@iceman1001)\n - Ripped out `standalone` code into separate folder to be continued. (@iceman1001)\n - `hf mf nested`, added key validation to entered key (@merlokk)\n - `hf mf hardnested`, added key validation to enterd key (@iceman1001)\n - Changed a lot of help texts (@iceman1001)\n - Fixed `hf mf chk` - keyblock bug, limited keys to 256. (@iceman1001)\n - Changed `hf mf dump` retries three times now before giving up (@marshmellow42)\n - Fixed `mfu authentication`, with pack-len error (@iceman1001)\n - `Script list`, change sortorder to alphabetic order (@iceman1001)\n - Changed `hf mfu gen` to read taguid (@iceman1001)\n - Changed `hf mfu pwdgen` to read taguid (@iceman1001)\n - Added `hf mf setmod` sets Mifare Classic EV1 load modulation strength to card (@angelsl)\n - Added `hf 14a read`  Mifare PRNG detection based on @doegox LIBNFC impl (@iceman1001)\n - Added `hf mf nonces`, collects Mifare Classic nonces for analysing of PRNG (@iceman1001)\n - Added new CSNS in `hf iclass sim 2` attack (@iceman1001)\n - Added more default keys (@iceman1001)\n - Added analyse nuid, enable creation of Mifare NUID (@iceman1001)\n - Updated the Reveng 1.44 sourcecode to 1.51 from Reveng project homepage (@iceman1001)\n - script run formatMifare - got an option to execute the generate strings (@iceman1001)\n - Fixed `hf mf cgetsc` (@iceman1001)\n - Fixed `hf legic info` (@iceman1001)\n - Changed version output (@iceman1001)\n - Added PAC/Stanley detection to lf search (@marshmellow42)\n - Added lf pac demod and lf pac read - extracts the raw blocks from a PAC/Stanley tag (@marshmellow42)\n - Added hf mf csave commands compatibity for 4k (@Fl0-0)\n - Added data fsktonrz, a fsk cleaning/demodulating routine for weak fsk signal. Note: follow this up with a `data rawdemod nr` to finish demoding your signal. (@marshmellow42)\n - Added lf em 410xbrute, LF EM410x reader bruteforce attack by simulating UIDs from a file (@Fl0-0)\n - Compiles on OS X\n - Compiles with gcc 4.9\n - Compiles for non-Intel CPUs\n - Added lf hitag write 24, the command writes a block to hitag2 tags in crypto mode (@henjo)\n - Added the improved `hf mf hardnested`, an attack working for hardened Mifare cards (EV1, Mifare Plus SL1)\n - Added experimental testmode write option for t55xx (danger) (@marshmellow42)\n - Added t55xx p1detect to `lf search` chip detections (@marshmellow42)\n - Added lf t55xx p1detect, detect page 1 of a t55xx tag based on E015 mfg code (@marshmellow42)\n - Added lf noralsy demod, read, clone, sim commands (@iceman1001)\n - Added lf jablotron demod, read, clone, sim commands (@iceman1001)\n - Added lf nexwatch read   - reads a nexwatch tag from the antenna\n - Added lf paradox read    - reads a paradox tag from the antenna\n - Added lf fdx sim (@iceman1001)\n - Added lf fdx clone       - clones an fdx-b animal tag to t55x7 or q5 (@iceman1001)\n - Added lf fdx read        - reads a fdx-b tag from the antenna (@iceman1001)\n - Added lf gproxii read    - reads a gproxii tag from the antenna (@marshmellow42)\n - Added lf indala read     - reads an indala tag from the antenna (@marshmellow42)\n - Added lf visa2000 demod, read, clone, sim commands (@iceman1001)\n\n## [1.7.0 iceman fork] [2017-03-07]\n - hf mf dump - added retry loops to try each read attempt up to 3 times.  makes getting a complete dump easier with many antennas. (@marshmellow42)\n - Added markers in the graph around found Sequence Terminator after askmandemod. (@marshmellow42)\n - Added data mtrim <start> <stop> command to trim out samples between start and stop. (@marshmellow42)\n - Added data setgraphmarkers <orange> <blue> command to set two extra markers on the graph (@marshmellow42)\n - added json support in lua (@vitorio)\n - added a buspirate settings file for at91sam7s512 (@adamlaurie)\n - `lf read` timeouts is now depended on what threshold level you set in `lf config`  (@marshmellow42)\n - `hf mf sim` fixed a bug which made sim fail auths. (@iceman1001)\n - `hf 14a read` added magic tag generation 1a and 1b detection  (@iceman1001)\n - correctly using stdtypes.h printf and scanf format string macros (PRIx64 et al) (@pwpiwi)\n - Fixed linker warning re missing entry point when linking fullimage.elf (@pwpiwi)\n - small changes to lf psk and fsk demods to improve results when the trace begins with noise or the chip is not broadcasting yet (@marshmellow42)\n - NOTE CHANGED ALL `lf em4x em*` cmds to simpler `lf em ` - example: `lf em4x em410xdemod` is now `lf em 410xdemod`\n - Renamed and rebuilt `lf em readword` && readwordpwd to `lf em 4x05read` - it now demods and outputs the read block (@marshmellow42/@iceman1001)\n - Renamed and rebuilt `lf em writeword` && writewordpwd to `lf em 4x05write` - it now also reads validation output from the tag (@marshmellow42/@iceman1001)\n - Fixed bug in lf sim and continuous demods not turning off antenna when finished\n - Added lua script path fixes (@pwpiwi)\n - `lf search` - Added EM4x05/EM4x69 chip detection (@marshmellow42)\n - Added lf em 4x05dump command to read and output all the blocks of the chip (@marshmellow42)\n - Added lf em 4x05info command to read and display information about the chip (@marshmellow42)\n - `lf em4x em4x50***` refactoring of em4x50 commands. (@iceman1001)\n\n## [1.6.9 iceman fork] [2017-02-06]\n - Serial speedup,  if possible 408600baud otherwise default to 115200baud (@iceman1001)\n - `hf emv` - Added Peter Fillmore EMV branch now compiles on iceman fork.  See separate issue. (@iceman1001)\n - `hf 14a reader` - Aztek detection. (@iceman1001)\n - `standalone mode` - added more detection of tags and refactored (@iceman1001)\n - `script run ufodump` - dumps an Aztek tag. (@iceman1001)\n - `script run hard_autopwn` - runs hardnested attack against all sectors on tag (@iceman1001)\n - Added lf cotag read, and added it to lf search (@iceman1001)\n - Added hitag2 read UID only and added that to lf search (@marshmellow42)\n - `lf search` -  check for if signal is only noice (@marshmellow42)\n - `hf 14a reader` - fixed a bug when card has sak 0x00 but still is not UL/NTAG etc. (@iceman1001)\n - `hf mf sim` / `hf 14a sim` - use random nonce. (@micolous)\n - `hw tune` - only prints out if voltage is detected from antenna. (@iceman1001)\n - `hf iclass decrypt` - only decrypt Application1 (@iceman1001)\n - `lf t55xx detect` - when finding multiple possible config blocks, see if a known configblock exists and select. (@iceman1001)\n\n## [1.6.7 iceman fork] [2017-01-05]\n - `lf animal` - FDX-B animal commands (@iceman1001)\n - Fixed bugs in `lf sim` and other lf continuous demods not turning off antenna when finished (@marshmellow42)\n - `hf iclass write` - fixed bugs, added crc. (?)\n - `hf iclass dump` - changed layout in dump (@iceman1001)\n - Changed - debug statements are more clear (@iceman1001)\n - `lf search` - fixed the silent option when acquire data. (@iceman1001)\n - `lf search` - added presco, visa2000, noralsy detection (@iceman1001)\n - `lf precso` - fixed some bitsgeneration in precso bits (@iceman1001)\n - Added `lf noralsy` -  adds demod/clone/sime of Noralsy LF tags. (@iceman1001)\n - Added `lf visa2000` - adds demod/clone/sim of Visa2000 lF tags. (@iceman1001)\n - Added `hf mf key_brute` - adds J-Runs 2nd phase bruteforce ref: https://github.com/J-Run/mf_key_brute   (@iceman1001)\n - Added `lf jablotron` - adds demod/clone/sim of Jablotron LF tags. (@iceman1001)\n - Added `lf t55xx recoverpw` - adds a new password recovery using bitflips and partial flips if password write went bad. (@alexgrin)\n - `hf legic` - added improved legic data mapping. (jason)\n - `hf mf mifare` - added possibility to target key A|B (@douniwan5788)\n - Added `analyse lrc` - added a new main command group,  to help analysing bytes & bits & nibbles. (@iceman1001)\n - Added `lf nedap` - added identification of a NEDAP tag. (@iceman1001)\n - `lf viking clone` - fixed a bug. (@iceman1001)\n - Added bitsliced bruteforce solver in `hf mf hardnested` (@Aczid)\n - `hf mf chk` speedup (@iceman1001)\n - `hf 14a/mf sim x` attack mode,  now uses also moebius version of mfkey32 to try finding the key. (@iceman1001)\n - `hf 14a sim` Added emulation of Mifare cards with 10byte UID length. (@iceman1001)\n - `hf mf sim` Added emulation of Mifare cards with 10byte UID length. (@iceman1001)\n - Added `lf guard clone/sim` (@iceman1001)\n - Added `lf pyramd clone/sim` (@iceman1001)\n - trying to fix `hf 14b` command to be able to read CALYPSO card. (@iceman1001)\n - `hf legic load`, it now loads faster and a casting bug is gone. (@iceman1001)\n - Added `hf legic calccrc8` added a method to calculate the legic crc-8 value (@iceman1001)\n - `hf legic decode` fixed the output overflow bugs, better printing (@iceman1001)\n - Coverity Scan fixes a lot of resource leaks, etc (@iceman1001)\n - Added `lf presco *` commands started (@iceman1001)\n - Added `lf hid wiegand` added a method to calculate WIEGAND in different formats, (@iceman1001)\n - `hf mf chkkeys` better printing, same table output as nested, faster execution and added Adam Lauries \"try to read Key B if Key A is found\" (@iceman1001)\n - `hf mf nested` better printing and added Adam Lauries \"try to read Key B if Key A is found\" (@iceman1001)\n - `hf mf mifare` fixing the zero parity path, which did not get called. (@iceman1001)\n - Updated the @blapost Crapto1 implementation to v3.3 (blapost)\n - `hf mf c*` updated the calling structure and refactored of the chinese magic commands (@iceman1001, @marshmellow42)\n - Started to add Peter Fillmore  EMV fork into Iceman fork. ref: https://github.com/peterfillmore/proxmark3  (@peterfillmore,  @iceman1001)\n - Added Travis-CI automatic build integration with GitHub fork. (@iceman1001)\n - Updated the Reveng 1.30 sourcecode to 1.31 from Reveng project homepage (@iceman1001)\n - Updated the Reveng 1.31 sourcecode to 1.40 from Reveng project homepage (@iceman1001)\n - Added possibility to write direct to a Legic Prime Tag (MIM256/1024) without using values from the `BigBuffer` -> `hf legic writeRaw <addr> <value>` (@icsom)\n - Added possibility to decrease DCF values at address 0x05 & 0x06 on a Legic Prime Tag\n   DCF-value will be pulled from the BigBuffer (address 0x05 & 0x06) so you have to\n   load the data into the BigBuffer before with `hf legic load <path/to/legic.dump>` & then\n   write the DCF-Values (both at once) with `hf legic write 0x05 0x02`  (@icsom)\n - Added script `legic.lua` for display and edit Data of Legic-Prime Tags (@icsom)\n - Added the experimental HITAG_S support (@spenneb)\n - Added topaz detection to `hf search` (@iceman1001)\n - Fixed the silent mode for 14b to be used inside `hf search` (@iceman1001)\n\n### Added\n - Added a LF ASK Sequence Terminator detection option to the standard ask demod - and applied it to `lf search u`, `lf t55xx detect`, and `data rawdemod am s` (@marshmellow42)\n - `lf awid bruteforce <facilitycode>` - Simple bruteforce attack against a AWID reader.\n - `lf t55xx bruteforce <start password> <end password> [i <*.dic>]` - Simple bruteforce attack to find password - (@iceman1001 and others)\n - `lf viking clone`- clone viking tag to t55x7 or Q5 from 4byte hex ID input\n - `lf viking sim`  - sim full viking tag from 4byte hex ID input\n - `lf viking read` - read viking tag and output ID\n - `lf t55xx wipe`  - sets t55xx back to factory defaults\n - Added viking demod to `lf search` (@marshmellow42)\n - `data askvikingdemod` demod viking id tag from graphbuffer (@marshmellow42)\n - `lf t55xx resetread` added reset then read command - should allow determining start of stream transmissions (@marshmellow42)\n - `lf t55xx wakeup` added wake with password (AOR) to allow lf search or standard lf read after (@iceman1001, @marshmellow42)\n - `hf mf eload u` added an ultralight/ntag option. (@marshmellow42)\n - `hf iclass managekeys` to save, load and manage iclass keys.  (adjusted most commands to accept a loaded key in memory) (@marshmellow42)\n - `hf iclass readblk` to select, authenticate, and read 1 block from an iclass card (@marshmellow42)\n - `hf iclass writeblk` to select, authenticate, and write 1 block to an iclass card (or picopass) (@marshmellow42 + others)\n - `hf iclass clone` to take a saved dump file and clone selected blocks to a new tag (@marshmellow42 + others)\n - `hf iclass calcnewkey` - to calculate the div_key change to change a key - (experimental) (@marshmellow42 + others)\n - `hf iclass encryptblk` - to encrypt a data block hex to prep for writing that block (@marshmellow42)\n - ISO14443a stand-alone operation with ARM CFLAG=\"WITH_ISO14443a_StandAlone\". This code can read & emulate two banks of 14a tag UIDs and write to \"magic\" cards  (Craig Young)\n - AWID26 command context added as `lf awid` containing realtime demodulation as well as cloning/simulation based on tag numbers (Craig Young)\n - Added `hw status`. This command makes the ARM print out some runtime information. (@holiman)\n - Added `hw ping`. This command just sends a usb packets and checks if the pm3 is responsive. Can be used to abort certain operations which supports abort over usb. (@holiman)\n - Added `data hex2bin` and `data bin2hex` for command line conversion between binary and hexadecimal (@holiman)\n - Added `hf snoop`. This command take digitalized signal from FPGA and put in BigBuffer. (@pwpiwi + enio)\n - Added Topaz (NFC type 1) protocol support (`hf topaz reader`, `hf list topaz`, `hf 14a raw -T`, `hf topaz snoop`). (@pwpiwi)\n - Added option c to `hf list` (mark CRC bytes) (@pwpiwi)\n\n### Changed\n - Added `[l] <length>` option to data printdemodbuffer\n - Adjusted lf awid clone to optionally clone to Q5 tags\n - Adjusted lf t55xx detect to find Q5 tags (t5555) instead of just t55x7\n - Adjusted all lf NRZ demods - works more accurately and consistently (as long as you have strong signal)\n - Adjusted lf pskindalademod to reduce false positive reads.\n - Small adjustments to psk, nrz, and ask clock detect routines - more reliable.\n - Adjusted lf em410x em410xsim to accept a clock argument\n - Adjusted lf t55xx dump to allow overriding the safety check and warning text (@marshmellow42)\n - Adjusted lf t55xx write input variables (@marshmellow42)\n - Adjusted lf t55xx read with password safety check and warning text and adjusted the input variables (@marshmellow42 & @iceman1001)\n - Adjusted LF FSK demod to account for cross threshold fluctuations (898 count waves will adjust the 9 to 8 now...) more accurate. (@marshmellow42)\n - Adjusted timings for t55xx commands.  more reliable now. (@marshmellow42 & @iceman1001)\n - `lf cmdread` adjusted input methods and added help text (@marshmellow42 & @iceman1001)\n - changed `lf config t <threshold>` to be 0 - 128 and will trigger on + or - threshold value (@marshmellow42)\n - `hf iclass dump` cli options - can now dump AA1 and AA2 with different keys in one run (does not go to multiple pages for the larger tags yet) (@marshmellow42)\n - Revised workflow for StandAloneMode14a (Craig Young)\n - EPA functions (`hf epa`) now support both ISO 14443-A and 14443-B cards (@frederikmoellers)\n - `hw version` only talks to ARM at startup, after that the info is cached. (@pwpiwi)\n - Added `r` option to iclass functions - allows key to be provided in raw block 3/4 format\n\n## [2.2.0][2015-07-12]\n\n### Changed\n - Added `hf 14b raw -s` option to auto select a 14b std tag before raw command\n - Changed `hf 14b write` to `hf 14b sriwrite` as it only applied to sri tags (@marshmellow42)\n - Added `hf 14b info` to `hf search` (@marshmellow42)\n - Added compression of fpga config and data, *BOOTROM REFLASH REQUIRED* (@pwpiwi)\n - Implemented better detection of mifare-tags that are not vulnerable to classic attacks (`hf mf mifare`, `hf mf nested`) (@pwpiwi)\n\n### Added\n - Added `hf 14b reader` to find and print general info about known 14b tags (@marshmellow42)\n - Added `hf 14b info` to find and print info about std 14b tags and sri tags (using 14b raw commands in the client)  (@marshmellow42)\n - Added PACE replay functionality (@frederikmoellers)\n\n### Fixed\n - t55xx write timing (@marshmellow42)\n\n\n## [2.1.0][2015-06-23]\n\n### Changed\n - Added ultralight/ntag tag type detection to `hf 14a read` (@marshmellow42)\n - Improved ultralight dump command to auto detect tag type, take authentication, and dump full memory (or subset specified) of known tag types (@iceman1001 / @marshmellow42)\n - Combined ultralight read/write commands and added authentication (@iceman1001)\n - Improved LF manchester and biphase demodulation and ask clock detection especially for reads with heavy clipping. (@marshmellow42)\n - Iclass read, `hf iclass read` now also reads tag config and prints configuration. (@holiman)\n - *bootrom* needs to be flashed, due to new address boundaries between os and fpga, after a size optimization (@pwpiwi)\n\n### Fixed\n - Fixed EM4x50 read/demod of the tags broadcasted memory blocks. `lf em4x em4x50read` (not page read) (@marshmellow42)\n - Fixed issue #19, problems with LF T55xx commands (@iceman1001, @marshmellow42)\n - Fixed various problems with iso14443b, issue #103 (@pwpiwi, @marshmellow42)\n\n### Added\n - Added `hf search` - currently tests for 14443a tags, iclass tags, and 15693 tags (@marshmellow42)\n - Added `hf mfu info` Ultralight/NTAG info command - reads tag configuration and info, allows authentication if needed (@iceman1001, @marshmellow42)\n - Added Mifare Ultralight C and Ultralight EV1/NTAG authentication. (@iceman1001)\n - Added changelog\n - Added `data fdxbdemod` - Demodulate a FDX-B ISO11784/85 Biphase tag from GraphBuffer aka ANIMAL TAG (@marshmellow42, @iceman1001)\n\n## [2.0.0] - 2015-03-25\n### Changed\n - LF sim operations now abort when new commands arrive over the USB - not required to push the device button anymore.\n\n### Fixed\n - Mifare simulation, `hf mf sim` (was broken a long time) (@pwpiwi)\n - Major improvements in LF area and data operations. (@marshmellow42, @iceman1001)\n - Issues regarding LF simulation (@pwpiwi)\n - Issue interpreting NXP \"get sys info\" command return value for icode tags. (@mjacksn)\n\n### Added\n - iClass functionality: full simulation of iclass tags, so tags can be simulated with data (not only CSN). Not yet support for write/update, but readers do not seem to enforce update. (@holiman).\n - iClass decryption. Proxmark can now decrypt data on an iclass tag, but requires you to have the HID decryption key locally on your computer, as this is not bundled with the sourcecode.\n - `hf 15 info` can detect NTAG 5 tags\n - `hf 15 info` include an EAS status check on more of the icode tags which support EAS (SLI, SLIX, SLIX-L, and SLIX-S)\n"
        },
        {
          "name": "COMPILING.txt",
          "type": "blob",
          "size": 0.0927734375,
          "content": "\nRefer to doc/md/Installation_Instructions/ for up-to-date instructions for various platforms.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 9.337890625,
          "content": "\n# Contributing to Proxmark3\n\n:+1::tada: First off, thanks for taking the time to contribute! :tada::+1:\n\nThis guide covers mostly coding style for submitting pull requests, but you can also contribute by [Reporting Bugs](https://github.com/RfidResearchGroup/proxmark3/issues) and [Suggesting Enhancements](https://github.com/RfidResearchGroup/proxmark3/issues) after having carefully checked that a corresponding issue doesn't exist yet.\n\nBeware we're all very busy so the best way is by providing yourself some fixes and enhancements via [Pull Requests](https://github.com/RfidResearchGroup/proxmark3/pulls) respecting the following coding style.\n\n[Styleguides](#styleguides)\n  * [Overview](#overview)\n  * [Indentation](#indentation)\n  * [Width](#width)\n  * [Macros](#macros)\n  * [Identifiers](#identifiers)\n  * [Data types](#data-types)\n  * [Expressions](#expressions)\n  * [If / for / while etc](#if-for-while-etc)\n  * [Functions](#fonctions)\n  * [Structs / unions / enums](#structs-unions-enums)\n  * [Switch](#switch)\n  * [Comments](#comments)\n  * [File](#file)\n  * [File headers](#file-headers)\n  * [Header files](#header-files)\n  * [Whitespace](#whitespace)\n\n# Styleguides\n\n_\"Coding styles are like assholes, everyone has one and no one likes anyone elses.\"_\n--Eric Warmenhoven\n\n## Overview\n\nWe have established a set of coding style guidelines in order to\nclean up the code consistently and keep it consistent in the future.\nLook around and respect the same style.\n\nHelper script to get some uniformity in the style:\n\n```bash\n$ make style\n```\n\nIt makes use of `astyle` so be sure to install it first.\n\n\n## Indentation\n\nDon't use tabs, editors are messing them up too easily.\nIncrement unit is four spaces.\n\nIf you use `make style`, this will be done for you.\n\n## Width\n\nTry to keep lines to a reasonable length. 80 characters is a good mark; using an\neditor that shows a vertical line is a great idea. However, don't break a line\njust because you're slightly over, it's not worth it. No 200-character lines,\nthough.\n\n## Macros\n\n`#define`, function-like or not, are all UPPERCASE unless you're emulating a\nwell-known function name.\n\n## Identifiers\n\nFunctions, local variables, and arguments are all named using\n`underscores_as_spaces`. Global variables are Evil and are prepended with `g_` to\ndistinguish them. Avoid them.\n\nSingle-character variables are a bad idea. Exceptions: loop iterators and maybe\nsimple byte pointers (`*p`) in very obvious places. If you have more than one\nsuch pointer, use a real name. If you have more than a couple nested loops,\ncomplex logic, or indices that differ in interpretation or purpose, use real\nnames instead of i,j,k.\n\n## Data types\n\nUse `stdint.h` types (`uint32_t` and friends) unless you have a reason not to. Don't\nuse microsoft-style `DWORD` and the like, we're getting rid of those. Avoid char\nfor buffers, `uint8_t` is more obvious when you're not working with strings. Use\n`const` where things are const. Try to use `size_t` for sizes.\n\nPointers and reference operators are attached to the variable name:\n```c\n    void *ptr;\n```\nnot:\n```c\n    void* ptr;\n```\notherwise you're tempted to write:\n```c\n    void* in, out;\n```\nand you'll fail.\n\n`make style` will take care of pointers & reference operators.\n\n## Expressions\n\nIn general, use whitespace around binary operators - no unspaced blobs of an\nexpression. `make style` will take care of whitespaces around operators.\n\nFor example,\n```c\n    if (5 * a < b && some_bool_var)\n```\nbut not\n```c\n    if (5*a<b&&some_bool_var)\n```\nFor equality with constants, use `i == 0xF00`, not `0xF00 == i`. The compiler warns\nyou about `=` vs `==` anyway, and you shouldn't be screwing that one up by now\nanyway.\n\n## If / for / while etc\n\nPut the opening brace on the same line, with a space before it.\nThere should be a space between the construct name (if/for/whatever) and the\nopening parenthesis, and there should be a space between the closing parenthesis\nand the opening brace, and no space between parenthesis and expression.\n`make style` will take care of all that.\n\nIf you do split the condition, put the binary operators that join the lines at\nthe beginning of the following lines, not at the end of the prior lines.\n\nFor generic `for()` iterator variables, declare them in-line:\n```c\n    for (int i = 0; i < 10; i++) {\n        ...\n    }\n```\nNote the spaces after the semicolons.\n\nif/else should be laid out as follows:\n```c\n    if (foo) {\n        ...\n    } else if (bar) {\n        ...\n    } else {\n        ...\n    }\n```\nYou can skip braces around 1-line statements but don't mix braces vs. no braces.\n\n## Functions\n\nPut the return type on the same line.\nPut a space after a comma in argument lists.\nOpen the brace after the declaration (after a space).\n`make style` will take care of all that.\n```c\nvoid foo(int a_thing, int something_else) {\n    ...\n}\n```\nFunctions with no arguments are declared as `f(void)`, not `f()`.\nUse static for functions that aren't exported, and put exported functions\nin a header file (one header file per source file with exported functions\nusually, no huge headers with all functions). \n```c\nvoid baz(void) {\n    foo(bluh, blah);\n}\n```\nFunction names should be `separated_with_underscores()`, except for standard\nfunctions (`memcpy`, etc.). It may make sense to break this rule for very common,\ngeneric functions that look like library functions (e.g. `dprintf()`).\n\nDon't use single-character arguments.\nException: very short functions with one argument that's really obvious:\n```c\nstatic int ascii(char c) {\n    if (c < 0x20 || c >= 0x7f)\n        return '.';\n    else\n        return c;\n}\n```\nvs.\n```c\nstatic void hexdump(void *buf, size_t len) {\n    ...\n}\n```\nAs a general guideline, functions shouldn't usually be much more than 30-50\nlines. Above, the general algorithm won't be easily apparent, and you're\nprobably missing some factoring/restructuring opportunity.\n\n## Structs / unions / enums\n\nUse typedefs when defining structs. The type should be named something_t.\n```c\ntypedef struct {\n    blah blah;\n} prox_cmd_t;\n```\nYou can use anonymous enums to replace lots of sequential or mostly-sequential\n#defines.\n\n## Switch\n\nIndent once for the `case:` labels, then again for the body. Like this:\n```c\nswitch(bar) {\n    case OPTION_A:\n        do_stuff();\n        break;\n    case OPTION_B:\n        do_other_stuff();\n        break;\n}\n```\n`make style` will take care of the indentation.\n\nIf you fall through into another case, add an explicit comment;\notherwise, it can look confusing.\n\nIf your `switch()` is too long or has too many cases, it should be cleaned up.\nSplit off the cases into functions, break the switch() into parent and children\nswitches (e.g. command and subcommand), or use an array of function pointers or\nthe like. In other words, use common sense and your brain.\n\nIf you need local scope variables for a case, you can add braces:\n```c\nswitch(bar) {\n    case OPTION_A: {\n        int baz = 5 * bar;\n        do_stuff(baz);\n        break;\n    }\n    ...\n```\nBut at that point you should probably consider using a separate function.\n\n## Comments\n\nUse //, it's shorter:\n```c\n// this does foo\n...\n\n// baz:\n// This does blah blah blah .....\n// blah blah...\n```\n`/* */` can be used to comment blocks of code, but you should probably remove\nthem anyway - we have version control, it's easy to fetch old code if needed,\nso avoid committing commented out chunks of code. The same goes for `#if 0`.\n\n## File\n\nPlease use common sense and restrain yourself from having a thousands line\nfile. Functions in a file should have something *specific* in common. Over time\nsub-categories can arise and should therefore yield to file splitting.\n\nFor these reasons, vague and general filenames (e.g. `util.*`, `global.*`, `misc.*`,\n`main.*`, and the like) should be very limited, if not prohibited.\n\n## File headers\n\nLicense/description header first:\n```c\n//-----------------------------------------------------------------------------\n// Copyright (C) Proxmark3 contributors. See AUTHORS.md for details.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// See LICENSE.txt for the text of the license.\n//-----------------------------------------------------------------------------\n// FILE DESCRIPTION GOES HERE\n//-----------------------------------------------------------------------------\n```\n\nTo avoid a huge mess of copyright notices in the source files, it has been chosen to keep this generic notice. Don't worry, you still hold the copyright on your respective contributions and date and authorship are tracked by the Git history, as explained in [AUTHORS](AUTHORS.md).\nIn January 2022, the Git history has recorded 293 different authors.\n\n## Header files\n\nUse the following include guard format:\n```c\n#ifndef FOOBAR_H__\n#define FOOBAR_H__\n\n...\n\n#endif // FOOBAR_H__\n```\nKeep in mind that `__FOOBAR_H` would be reserved by the implementation and thus\nyou shouldn't use it (same for `_FOOBAR_H`).\n\n## Whitespace\n\nAvoid trailing whitespace (no line should end in tab or space).\nKeep a newline (blank line) at the end of each file.\n\n`make style` will take care of both.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 34.3232421875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 18.3798828125,
          "content": "#-----------------------------------------------------------------------------\n# Copyright (C) Proxmark3 contributors. See AUTHORS.md for details.\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# See LICENSE.txt for the text of the license.\n#-----------------------------------------------------------------------------\n\n-include Makefile.platform\n-include .Makefile.options.cache\ninclude Makefile.defs\ninclude common_arm/Makefile.hal\n\n# preserve relative DESTDIR path for subdir makes\nifneq (,$(DESTDIR))\n    # realpath needs the directory to exist\n    $(shell $(MKDIR) $(DESTDIR))\n    MYDESTDIR:=$(realpath $(DESTDIR))\n    ifeq (,$(MYDESTDIR))\n        $(error Can't create $(DESTDIR))\n    endif\nendif\n\nall clean install uninstall check: %: client/% bootrom/% armsrc/% recovery/% mfc_card_only/% mfc_card_reader/% mfd_aes_brute/% fpga_compress/% cryptorf/%\n# hitag2crack toolsuite is not yet integrated in \"all\", it must be called explicitly: \"make hitag2crack\"\n#all clean install uninstall check: %: hitag2crack/%\n\nINSTALLTOOLS=mfc/pm3_eml2lower.sh mfc/pm3_eml2upper.sh mfc/pm3_mfdread.py mfc/pm3_mfd2eml.py mfc/pm3_eml2mfd.py pm3_amii_bin2eml.pl pm3_reblay-emulating.py pm3_reblay-reading.py\nINSTALLSIMFW=sim011.bin sim011.sha512.txt sim013.bin sim013.sha512.txt sim014.bin sim014.sha512.txt\nINSTALLSCRIPTS=pm3 pm3-flash pm3-flash-all pm3-flash-bootrom pm3-flash-fullimage\nINSTALLSHARES=tools/jtag_openocd traces\nINSTALLDOCS=doc/*.md doc/md\n\ninstall: common/install\n\ncommon/install:\n\t$(info [@] Installing common resources to $(MYDESTDIR)$(PREFIX)...)\nifneq (,$(INSTALLSCRIPTS))\n\t$(Q)$(INSTALLSUDO) $(MKDIR) $(DESTDIR)$(PREFIX)$(PATHSEP)$(INSTALLBINRELPATH)\n\t$(Q)$(INSTALLSUDO) $(CP) $(INSTALLSCRIPTS) $(DESTDIR)$(PREFIX)$(PATHSEP)$(INSTALLBINRELPATH)\nendif\nifneq (,$(INSTALLSHARES))\n\t$(Q)$(INSTALLSUDO) $(MKDIR) $(DESTDIR)$(PREFIX)$(PATHSEP)$(INSTALLSHARERELPATH)\n\t$(Q)$(INSTALLSUDO) $(CP) $(INSTALLSHARES) $(DESTDIR)$(PREFIX)$(PATHSEP)$(INSTALLSHARERELPATH)\nendif\nifneq (,$(INSTALLDOCS))\n\t$(Q)$(INSTALLSUDO) $(MKDIR) $(DESTDIR)$(PREFIX)$(PATHSEP)$(INSTALLDOCSRELPATH)\n\t$(Q)$(INSTALLSUDO) $(CP) $(INSTALLDOCS) $(DESTDIR)$(PREFIX)$(PATHSEP)$(INSTALLDOCSRELPATH)\nendif\nifneq (,$(INSTALLTOOLS))\n\t$(Q)$(INSTALLSUDO) $(MKDIR) $(DESTDIR)$(PREFIX)$(PATHSEP)$(INSTALLTOOLSRELPATH)\n\t$(Q)$(INSTALLSUDO) $(CP) $(foreach tool,$(INSTALLTOOLS),tools/$(tool)) $(DESTDIR)$(PREFIX)$(PATHSEP)$(INSTALLTOOLSRELPATH)\nendif\nifneq (,$(INSTALLSIMFW))\n\t$(Q)$(INSTALLSUDO) $(MKDIR) $(DESTDIR)$(PREFIX)$(PATHSEP)$(INSTALLFWRELPATH)\n\t$(Q)$(INSTALLSUDO) $(CP) $(foreach fw,$(INSTALLSIMFW),client/resources/$(fw)) $(DESTDIR)$(PREFIX)$(PATHSEP)$(INSTALLFWRELPATH)\nendif\nifeq ($(platform),Linux)\n\t$(Q)$(INSTALLSUDO) $(MKDIR) $(DESTDIR)$(UDEV_PREFIX)\n# If user is running ArchLinux, use group 'uucp'\n# Else, use group 'dialout'\nifneq ($(wildcard /etc/arch-release),)\n\t$(Q)$(INSTALLSUDO) $(CP) driver/77-pm3-usb-device-blacklist-uucp.rules    $(DESTDIR)$(UDEV_PREFIX)/77-pm3-usb-device-blacklist.rules\nelse\n\t$(Q)$(INSTALLSUDO) $(CP) driver/77-pm3-usb-device-blacklist-dialout.rules $(DESTDIR)$(UDEV_PREFIX)/77-pm3-usb-device-blacklist.rules\nendif\nendif\n\nuninstall: common/uninstall\n\ncommon/uninstall:\n\t$(info [@] Uninstalling common resources from $(MYDESTDIR)$(PREFIX)...)\nifneq (,$(INSTALLSCRIPTS))\n\t$(Q)$(INSTALLSUDO) $(RM) $(foreach script,$(INSTALLSCRIPTS),$(DESTDIR)$(PREFIX)$(PATHSEP)$(INSTALLBINRELPATH)$(PATHSEP)$(notdir $(script)))\nendif\n\nifneq (,$(INSTALLSHARES))\n\t$(Q)$(INSTALLSUDO) $(RMDIR) $(foreach share,$(INSTALLSHARES),$(DESTDIR)$(PREFIX)$(PATHSEP)$(INSTALLSHARERELPATH)$(PATHSEP)$(notdir $(share)))\nendif\n\nifneq (,$(INSTALLDOCS))\n\t$(Q)$(INSTALLSUDO) $(RMDIR) $(foreach doc,$(INSTALLDOCS),$(DESTDIR)$(PREFIX)$(PATHSEP)$(INSTALLDOCSRELPATH)$(PATHSEP)$(notdir $(doc)))\n\t$(Q)-$(INSTALLSUDO) $(RMDIR_SOFT) $(DESTDIR)$(PREFIX)$(PATHSEP)$(INSTALLDOCSRELPATH)\nendif\n\nifneq (,$(INSTALLTOOLS))\n\t$(Q)$(INSTALLSUDO) $(RM) $(foreach tool,$(INSTALLTOOLS),$(DESTDIR)$(PREFIX)$(PATHSEP)$(INSTALLTOOLSRELPATH)$(PATHSEP)$(notdir $(tool)))\nendif\n\n\t$(Q)-$(INSTALLSUDO) $(RMDIR_SOFT) $(DESTDIR)$(PREFIX)$(PATHSEP)$(INSTALLTOOLSRELPATH)\n\nifneq (,$(INSTALLSIMFW))\n\t$(Q)$(INSTALLSUDO) $(RM) $(foreach fw,$(INSTALLSIMFW),$(DESTDIR)$(PREFIX)$(PATHSEP)$(INSTALLFWRELPATH)$(PATHSEP)$(notdir $(fw)))\nendif\n\n\t$(Q)-$(INSTALLSUDO) $(RMDIR_SOFT) $(DESTDIR)$(PREFIX)$(PATHSEP)$(INSTALLFWRELPATH)\n\nifeq ($(platform),Linux)\n\t$(Q)$(INSTALLSUDO) $(RM) $(DESTDIR)$(UDEV_PREFIX)/77-pm3-usb-device-blacklist.rules\nendif\n\t$(Q)-$(INSTALLSUDO) $(RMDIR_SOFT) $(DESTDIR)$(PREFIX)$(PATHSEP)$(INSTALLSHARERELPATH)\n\n# tests\ncryptorf/check: FORCE\n\t$(info [*] CHECK $(patsubst %/check,%,$@))\n\t$(Q)$(BASH) tools/pm3_tests.sh $(CHECKARGS) $(patsubst %/check,%,$@)\nmfc_card_only/check: FORCE\n\t$(info [*] CHECK $(patsubst %/check,%,$@))\n\t$(Q)$(BASH) tools/pm3_tests.sh $(CHECKARGS) nonce2key staticnested $(patsubst %/check,%,$@)\nmfc_card_reader/check: FORCE\n\t$(info [*] CHECK $(patsubst %/check,%,$@))\n\t$(Q)$(BASH) tools/pm3_tests.sh $(CHECKARGS) mfkey mf_nonce_brute $(patsubst %/check,%,$@)\nmfd_aes_brute/check: FORCE\n\t$(info [*] CHECK $(patsubst %/check,%,$@))\n\t$(Q)$(BASH) tools/pm3_tests.sh $(CHECKARGS) $(patsubst %/check,%,$@)\nfpga_compress/check: FORCE\n\t$(info [*] CHECK $(patsubst %/check,%,$@))\n\t$(Q)$(BASH) tools/pm3_tests.sh $(CHECKARGS) $(patsubst %/check,%,$@)\nbootrom/check: FORCE\n\t$(info [*] CHECK $(patsubst %/check,%,$@))\n\t$(Q)$(BASH) tools/pm3_tests.sh $(CHECKARGS) $(patsubst %/check,%,$@)\narmsrc/check: FORCE\n\t$(info [*] CHECK $(patsubst %/check,%,$@))\n\t$(Q)$(BASH) tools/pm3_tests.sh $(CHECKARGS) $(patsubst %/check,%,$@)\nclient/check: FORCE\n\t$(info [*] CHECK $(patsubst %/check,%,$@))\n\t$(Q)$(BASH) tools/pm3_tests.sh $(CHECKARGS) $(patsubst %/check,%,$@)\nrecovery/check: FORCE\n\t$(info [*] CHECK $(patsubst %/check,%,$@))\n\t$(Q)$(BASH) tools/pm3_tests.sh $(CHECKARGS) $(patsubst %/check,%,$@)\nhitag2crack/check: FORCE\n\t$(info [*] CHECK $(patsubst %/check,%,$@))\n\t$(Q)$(BASH) tools/pm3_tests.sh $(CHECKARGS) $(patsubst %/check,%,$@)\ncommon/check: FORCE\n\t$(info [*] CHECK $(patsubst %/check,%,$@))\n\t$(Q)$(BASH) tools/pm3_tests.sh $(CHECKARGS) $(patsubst %/check,%,$@)\ncheck: common/check\n\t$(info [*] ALL CHECKS DONE)\n\ncryptorf/%: FORCE\n\t$(info [*] MAKE $@)\n\t$(Q)$(MAKE) --no-print-directory -C tools/cryptorf $(patsubst cryptorf/%,%,$@) DESTDIR=$(MYDESTDIR)\nmfc_card_only/%: FORCE\n\t$(info [*] MAKE $@)\n\t$(Q)$(MAKE) --no-print-directory -C tools/mfc/card_only $(patsubst mfc_card_only/%,%,$@) DESTDIR=$(MYDESTDIR)\nmfc_card_reader/%: FORCE\n\t$(info [*] MAKE $@)\n\t$(Q)$(MAKE) --no-print-directory -C tools/mfc/card_reader $(patsubst mfc_card_reader/%,%,$@) DESTDIR=$(MYDESTDIR)\nmfd_aes_brute/%: FORCE\n\t$(info [*] MAKE $@)\n\t$(Q)$(MAKE) --no-print-directory -C tools/mfd_aes_brute $(patsubst mfd_aes_brute/%,%,$@) DESTDIR=$(MYDESTDIR)\nfpga_compress/%: FORCE cleanifplatformchanged\n\t$(info [*] MAKE $@)\n\t$(Q)$(MAKE) --no-print-directory -C tools/fpga_compress $(patsubst fpga_compress/%,%,$@) DESTDIR=$(MYDESTDIR)\nbootrom/%: FORCE cleanifplatformchanged\n\t$(info [*] MAKE $@)\n\t$(Q)$(MAKE) --no-print-directory -C bootrom $(patsubst bootrom/%,%,$@) DESTDIR=$(MYDESTDIR)\narmsrc/%: FORCE cleanifplatformchanged fpga_compress/%\n\t$(info [*] MAKE $@)\n\t$(Q)$(MAKE) --no-print-directory -C armsrc $(patsubst armsrc/%,%,$@) DESTDIR=$(MYDESTDIR)\nclient/%: FORCE cleanifplatformchanged\n\t$(info [*] MAKE $@)\n\t$(Q)$(MAKE) --no-print-directory -C client $(patsubst client/%,%,$@) DESTDIR=$(MYDESTDIR)\nrecovery/all: bootrom/all armsrc/all\nrecovery/install: bootrom/install armsrc/install\nrecovery/%: FORCE cleanifplatformchanged\n\t$(info [*] MAKE $@)\n\t$(Q)$(MAKE) --no-print-directory -C recovery $(patsubst recovery/%,%,$@) DESTDIR=$(MYDESTDIR)\nhitag2crack/%: FORCE\n\t$(info [*] MAKE $@)\n\t$(Q)$(MAKE) --no-print-directory -C tools/hitag2crack $(patsubst hitag2crack/%,%,$@) DESTDIR=$(MYDESTDIR)\nFORCE: # Dummy target to force remake in the subdirectories, even if files exist (this Makefile doesn't know about the prerequisites)\n\n.PHONY: all clean install uninstall help _test bootrom fullimage recovery client mfc_card_only mfc_card_reader mfd_aes_brute hitag2crack style miscchecks release FORCE udev accessrights cleanifplatformchanged\n\nhelp:\n\t@echo \"Multi-OS Makefile\"\n\t@echo\n\t@echo \"Possible targets:\"\n\t@echo \"+ all             - Make all targets: bootrom, fullimage and OS-specific host tools\"\n\t@echo \"+ clean           - Clean in all targets\"\n\t@echo \"+ .../clean       - Clean in specified target and its deps, e.g. bootrom/clean\"\n\t@echo \"+ (un)install     - Install/uninstall Proxmark files in the system, default to /usr/local/share,\"\n\t@echo \"                    else provide a PREFIX. See Maintainers.md for more options\"\n\t@echo\n\t@echo \"+ bootrom         - Make bootrom\"\n\t@echo \"+ fullimage       - Make armsrc fullimage (includes fpga)\"\n\t@echo \"+ recovery        - Make bootrom and fullimage files for JTAG flashing\"\n\t@echo\n\t@echo \"+ client          - Make only the OS-specific host client\"\n\t@echo \"+ cryptorf        - Make tools/cryptorf\"\n\t@echo \"+ mfc_card_only   - Make tools/mfc/card_only\"\n\t@echo \"+ mfc_card_reader - Make tools/mfc/card_reader\"\n\t@echo \"+ mfd_aes_brute   - Make tools/mfd_aes_brute\"\n\t@echo \"+ hitag2crack     - Make tools/hitag2crack\"\n\t@echo \"+ fpga_compress   - Make tools/fpga_compress\"\n\t@echo\n\t@echo \"+ style           - Apply some automated source code formatting rules\"\n\t@echo \"+ check           - Run offline tests. Set CHECKARGS to pass arguments to the test script\"\n\t@echo \"+ .../check       - Run offline tests against specific target. See above.\"\n\t@echo \"+ miscchecks      - Detect various encoding issues in source code\"\n\t@echo\n\t@echo \"+ udev            - Sets udev rules on *nix\"\n\t@echo \"+ accessrights    - Ensure user belongs to correct group on *nix\"\n\t@echo\n\t@echo \"To see possible platforms. default is PM3RDV4\"\n\t@echo \"   make PLATFORM=\"\n\t@echo\n\t@echo \"For verbose mode\"\n\t@echo \"   make V=1\"\n\t@echo\n\nclient: client/all\n\nbootrom: bootrom/all\n\n# aliases fullimage = armsrc\n\nfullimage: armsrc/all\n\nfullimage/all: armsrc/all\n\nfullimage/clean: armsrc/clean\n\nfullimage/install: armsrc/install\n\nfullimage/uninstall: armsrc/uninstall\n\nrecovery: recovery/all\n\ncryptorf: cryptorf/all\n\nmfc_card_only: mfc_card_only/all\n\nmfc_card_reader: mfc_card_reader/all\n\nmfd_aes_brute: mfd_aes_brute/all\n\nfpga_compress: fpga_compress/all\n\nhitag2crack: hitag2crack/all\n\nnewtarbin:\n\t$(RM) proxmark3-$(platform)-bin.tar proxmark3-$(platform)-bin.tar.gz\n\t@touch proxmark3-$(platform)-bin.tar\n\ntarbin: newtarbin client/tarbin armsrc/tarbin bootrom/tarbin\n\t$(info GEN proxmark3-$(platform)-bin.tar)\n\t$(Q)$(GZIP) proxmark3-$(platform)-bin.tar\n\n# detect if there were changes in the platform definitions, requiring a clean\ncleanifplatformchanged:\nifeq ($(PLATFORM_CHANGED),true)\n\t$(info [!] Platform definitions changed, cleaning bootrom/armsrc/recovery first...)\n\t$(Q)$(MAKE) --no-print-directory -C bootrom clean\n\t$(Q)$(MAKE) --no-print-directory -C armsrc clean\n\t$(Q)$(MAKE) --no-print-directory -C recovery clean\n\t$(Q)$(MAKE) --no-print-directory -C client clean\n\t$(Q)$(MAKE) --no-print-directory -C tools/fpga_compress clean\n\t$(Q)$(ECHO) CACHED_PLATFORM=$(PLATFORM) > .Makefile.options.cache\n\t$(Q)$(ECHO) CACHED_PLATFORM_EXTRAS=$(PLATFORM_EXTRAS) >> .Makefile.options.cache\n\t$(Q)$(ECHO) CACHED_PLATFORM_DEFS=$(PLATFORM_DEFS) >> .Makefile.options.cache\nendif\n\n# configure system to ignore PM3 device as a modem (ModemManager blacklist, effective *only* if ModemManager is not using _strict_ policy)\n# Read doc/md/ModemManager-Must-Be-Discarded.md for more info\nudev:\nifneq ($(wildcard /etc/arch-release),)\n# If user is running ArchLinux, use group 'uucp'\n\t$(SUDO) cp -rf driver/77-pm3-usb-device-blacklist-uucp.rules    $(DESTDIR)$(UDEV_PREFIX)/77-pm3-usb-device-blacklist.rules\nelse\n# Else, use group 'dialout'\n\t$(SUDO) cp -rf driver/77-pm3-usb-device-blacklist-dialout.rules $(DESTDIR)$(UDEV_PREFIX)/77-pm3-usb-device-blacklist.rules\nendif\n\t$(SUDO) udevadm control --reload-rules\n\t$(SUDO) udevadm trigger --action=change\n\n# configure system to add user to the dialout group and if bluetooth group exists,  add user to it\n# you need to logout, relogin to get this access right correct.\n# Finally,  you might need to run the proxmark3 client under SUDO on some systems\naccessrights:\nifneq ($(wildcard /etc/arch-release),)\n#If user is running ArchLinux, use specific command and group\n\t$(Q)$(SUDO) $(USERMOD) uucp $(USER)\n\t$(Q)$(GETENT_BL) >/dev/null && $(SUDO) $(USERMOD) bluetooth $(USER) || true\nelse ifneq ($(wildcard /etc/fedora-release),)\n# If the user is running Fedora, use `usermod` with the dialout group\n\t$(Q)$(SUDO) $(USERMOD) dialout $(USER)\n\t$(Q)$(GETENT_BL) >/dev/null && $(SUDO) $(USERMOD) bluetooth $(USER) || true\nelse\n\t$(Q)$(SUDO) $(ADDUSER) $(USER) dialout\n\t$(Q)$(GETENT_BL) >/dev/null && $(SUDO) $(ADDUSER) $(USER) bluetooth || true\nendif\n\n# easy printing of MAKE VARIABLES\nprint-%: ; @echo $* = $($*)\n\nstyle:\n\t# Make sure astyle is installed\n\t@command -v astyle >/dev/null || ( echo \"Please install 'astyle' package first\" ; exit 1 )\n\t# Remove spaces & tabs at EOL, add LF at EOF if needed on *.c, *.h, *.cpp. *.lua, *.py, *.pl, Makefile, *.v, pm3\n\tfind . \\( -not -path \"./cov-int/*\" -and -not -path \"./fpga*/xst/*\" -and \\( -name \"*.[ch]\" -or \\( -name \"*.cpp\" -and -not -name \"*.moc.cpp\" \\) -or -name \"*.lua\" -or -name \"*.py\" -or -name \"*.pl\" -or -name \"Makefile\" -or -name \"*.v\" -or -name \"pm3\" \\) \\) \\\n\t\t-exec perl -pi -e 's/[ \\t]+$$//' {} \\; \\\n\t\t-exec sh -c \"tail -c1 {} | xxd -p | tail -1 | grep -q -v 0a$$\" \\; \\\n\t\t-exec sh -c \"echo >> {}\" \\;\n\t# Apply astyle on *.c, *.h, *.cpp\n\tfind . \\( -not -path \"./cov-int/*\" -and \\( \\( -name \"*.[ch]\" -and -not -name \"ui_overlays.h\" \\) -or \\( -name \"*.cpp\" -and -not -name \"*.moc.cpp\" \\) \\) \\) -exec astyle --formatted --mode=c --suffix=none \\\n\t\t--indent=spaces=4 --indent-switches \\\n\t\t--keep-one-line-blocks --max-continuation-indent=60 \\\n\t\t--style=google --pad-oper --unpad-paren --pad-header \\\n\t\t--align-pointer=name {} \\;\n\t# Update commands.md\n\t[ -x client/proxmark3 ] && client/proxmark3 -m | tr -d '\\r' > doc/commands.md\n\t# Make sure python3 is installed\n\t@command -v python3 >/dev/null || ( echo \"Please install 'python3' package first\" ; exit 1 )\n\t# Update commands.json, patch port in case it was run under Windows\n\t[ -x client/proxmark3 ] && client/proxmark3 --fulltext | sed 's#com[0-9]#/dev/ttyACM0#'|python3 client/pyscripts/pm3_help2json.py - - | tr -d '\\r' > doc/commands.json\n\n\t# Update the readline autocomplete autogenerated code\n\t[ -x client/proxmark3 ] && client/proxmark3 --fulltext | python3 client/pyscripts/pm3_help2list.py - - | tr -d '\\r' > client/src/pm3line_vocabulary.h\n\n\n# Detecting weird codepages and tabs.\nifeq ($(platform),Darwin)\nmiscchecks: TABSCMD=egrep -l  '\\t' {}\nelse\nmiscchecks: TABSCMD=grep -lP '\\t' {}\nendif\nifneq (,$(EDIT))\nmiscchecks: TABSCMD+= && vi {} -c ':set tabstop=4' -c ':set et|retab' -c ':wq'\nendif\nmiscchecks:\n# Make sure recode is installed\n\t@command -v recode >/dev/null || ( echo \"Please install 'recode' package first\" ; exit 1 )\n\t@echo \"Files with suspicious chars:\"\n\t@find . \\( -not -path \"./cov-int/*\" -and -not -path \"./client/deps/*\" -and \\( -name \"*.[ch]\" -or -name \"*.cpp\" -or -name \"*.lua\" -or -name \"*.py\" -or -name \"*.pl\" -or -name \"Makefile\" -or -name \"*.v\" -or -name \"pm3\" \\) \\) \\\n\t      -exec sh -c \"cat {} |recode utf8.. >/dev/null || echo {}\" \\;\nifneq (,$(EDIT))\n\t@echo \"Files with tabs: (EDIT enabled, files will be rewritten!)\"\nelse\n\t@echo \"Files with tabs: (rerun with EDIT=1 if you want to convert them with vim)\"\nendif\n# to remove tabs within lines, one can try with: vi $file -c ':set tabstop=4' -c ':set et|retab' -c ':wq'\n\t@find . \\( -not -path \"./cov-int/*\" -and -not -path \"./client/deps/*\" -and -not -wholename \"./client/src/pm3_*wrap.c\" -and \\( -name \"*.[ch]\" -or \\( -name \"*.cpp\" -and -not -name \"*.moc.cpp\" \\) -or -name \"*.lua\" -or -name \"*.py\" -or -name \"*.pl\" -or -name \"*.md\" -or -name \"*.txt\" -or -name \"*.awk\" -or -name \"*.v\" -or -name \"pm3\" \\) \\) \\\n\t      -exec sh -c \"$(TABSCMD)\" \\;\n#\t@echo \"Files with printf \\\\\\\\t:\"\n#\t@find . \\( -name \"*.[ch]\" -or \\( -name \"*.cpp\" -and -not -name \"*.moc.cpp\" \\) -or -name \"*.lua\" -or -name \"*.py\" -or -name \"*.pl\" -or -name \"*.md\" -or -name \"*.txt\" -or -name \"*.awk\" -or -name \"*.v\" \\) \\\n#\t      -exec grep -lP '\\\\t' {} \\;\n\nrelease: VERSION=\"v4.$(shell git log --oneline master | wc -l)\"\nrelease:\n\t$(if $(findstring master,$(shell git rev-parse --abbrev-ref HEAD)),,$(error \"!!! you are not on master branch, aborting\"))\n\t$(if $(findstring dirty,$(shell git describe --dirty --always)),$(error \"!!! you have pending changes, aborting\"))\n\t$(if $(RELEASE_NAME),,$(error \"!!! missing RELEASE_NAME, aborting\"))\n\t# Preparing a commit for release tagging, to be reverted after tagging.\n\t@echo \"# - Release Tag:  $(VERSION)\"\n\t@echo \"# - Release Name: $(RELEASE_NAME)\"\n\t# - Removing -Werror...\n\t@find . \\( -path \"./Makefile.defs\" -or -path \"./client/Makefile\" -or -path \"./common_arm/Makefile.common\" -or -path \"./tools/hitag2crack/*/Makefile\" \\) -exec sed -i 's/ -Werror//' {} \\;\n\t@find . \\( -path \"./client/deps/*.cmake\" -or -path \"./client/CMakeLists.txt\" \\) -exec sed -i 's/ -Werror//' {} \\;\n\t# - Changing banner...\n\t@sed -i \"s/^#define BANNERMSG3 .*/#define BANNERMSG3 \\\"Release $(VERSION) - $(RELEASE_NAME)\\\"/\" client/src/proxmark3.c\n\t@echo -n \"#   \";grep \"^#define BANNERMSG3\" client/src/proxmark3.c\n\t# - Committing temporarily...\n\t@git commit -a -m \"Release $(VERSION) - $(RELEASE_NAME)\"\n\t# - Tagging temporarily...\n\t@git tag -a -m \"Release $(VERSION) - $(RELEASE_NAME)\" $(VERSION)\n\t# - Changing default version information based on new tag\n\t@$(SH) tools/mkversion.sh --force common/default_version_pm3.c\n\t# - Removing mkversion calls\n\t@sed -i 's#^.*\\.\\./tools/mkversion.sh.*|| #\\t$$(Q)#' client/Makefile bootrom/Makefile armsrc/Makefile\n\t@sed -i '/COMMAND/s/sh .*|| //' client/CMakeLists.txt client/experimental_lib/CMakeLists.txt\n\t# - Deleting tag...\n\t@git tag -d $(VERSION)\n\t# - Amending commit...\n\t@git commit -a --amend -m \"Release $(VERSION) - $(RELEASE_NAME)\"\n\t# - Tagging again...\n\t@git tag -a -m \"Release $(VERSION) - $(RELEASE_NAME)\" $(VERSION)\n\t# - Reverting tagged commit...\n\t@git revert --no-edit HEAD\n\t@echo \"===================================================================\"\n\t@echo \"Done! You can now execute 'git push && git push origin $(VERSION)'\"\n\n# Dummy target to test for GNU make availability\n_test:\n"
        },
        {
          "name": "Makefile.defs",
          "type": "blob",
          "size": 6.22265625,
          "content": "#-----------------------------------------------------------------------------\n# Copyright (C) Proxmark3 contributors. See AUTHORS.md for details.\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# See LICENSE.txt for the text of the license.\n#-----------------------------------------------------------------------------\nifneq ($(V),1)\n  Q?=@\nendif\n# To see full command lines, use make V=1\n\n# been here\nDEFSBEENHERE = true\n\n# USER not defined on some platforms like Archlinux\nUSER ?= $(shell id -u -n)\n\nCP = cp -a\nGZIP = gzip\nMKDIR = mkdir -p\nRM = rm -f\nRMDIR = rm -rf\n# rmdir only if dir is empty, you must add \"-\" when using it to tolerate failure\nRMDIR_SOFT = rmdir\nMV = mv\nTOUCH = touch\nFALSE = false\nTAR = tar\nTARFLAGS ?= -v --ignore-failed-read -r\nTARFLAGS += -C .. -f\nCROSS ?= arm-none-eabi-\nCC ?= gcc\nCXX ?= g++\nSH = sh\nBASH = bash\nPERL = perl\nSWIG = swig\nCC_VERSION = $(shell $(CC) -dumpversion 2>/dev/null|sed 's/\\..*//')\nCC_VERSION := $(or $(strip $(CC_VERSION)),0)\n\nECHO = echo\nSUDO = sudo\nUSERMOD = usermod -aG\nADDUSER = adduser\nGETENT_BL = getent group bluetooth\n\nPYTHON3_PKGCONFIG ?=   python3\n\nPATHSEP=/\nPREFIX ?=              /usr/local\nUDEV_PREFIX ?=         /etc/udev/rules.d\nINSTALLBINRELPATH ?=   bin\nINSTALLSHARERELPATH ?= share/proxmark3\nINSTALLFWRELPATH ?=    share/proxmark3/firmware\nINSTALLTOOLSRELPATH ?= share/proxmark3/tools\nINSTALLDOCSRELPATH ?=  share/doc/proxmark3\nexport INSTALLSUDO\n\nplatform = $(shell uname)\nDETECTED_OS=$(platform)\n\nifeq ($(shell $(CC) -v 2>&1 | grep -c \"clang version\"), 1)\n  DETECTED_COMPILER = clang\nelse\n  DETECTED_COMPILER = gcc\nendif\n\nifeq ($(platform),Darwin)\n    ifeq ($(shell uname -p),arm64)\n        # The platform is iOS\n        USE_BREW ?= 0\n        # iOS refuses to compile unless this is set\n        export IPHONEOS_DEPLOYMENT_TARGET=11.0\n    else\n        # M* macOS devices return arm\n        USE_BREW ?= 1\n    endif\n  USE_MACPORTS ?= 0\n  AR= /usr/bin/ar rcs\n  RANLIB= /usr/bin/ranlib\nelse\n  AR= ar rcs\n  RANLIB= ranlib\nendif\n\nifeq ($(USE_BREW),1)\n  ifneq ($(strip $(HOMEBREW_PREFIX)),)\n    BREW_PREFIX = $(HOMEBREW_PREFIX)\n  else\n    BREW_PREFIX = $(shell brew --prefix 2>/dev/null)\n    ifeq ($(strip $(BREW_PREFIX)),)\n      USE_BREW = 0\n    endif\n  endif\nendif\n\nifeq ($(USE_MACPORTS),1)\n  MACPORTS_PREFIX ?= /opt/local\nendif\n\nifeq ($(DEBUG),1)\n  DEFCXXFLAGS = -g -O0 -pipe\n  DEFCFLAGS = -g -O0 -fstrict-aliasing -pipe\n  DEFLDFLAGS =\nelse\n  DEFCXXFLAGS = -Wall -Werror -O3 -pipe\n  DEFCFLAGS = -Wall -Werror -O3 -fstrict-aliasing -pipe\n  DEFLDFLAGS =\nendif\n\nifeq ($(DEBUG_ARM),1)\n  APP_CFLAGS += -g\n  SKIP_COMPRESSION=1\nendif\n# Next ones are activated only if SANITIZE=1\nifeq ($(SANITIZE),1)\n  DEFCFLAGS += -g -fsanitize=address -fno-omit-frame-pointer\n  DEFCXXFLAGS += -g -fsanitize=address -fno-omit-frame-pointer\n  DEFLDFLAGS += -g -fsanitize=address\nendif\n# Some more warnings we want as errors:\nDEFCFLAGS += -Wbad-function-cast -Wredundant-decls -Wmissing-prototypes -Wchar-subscripts -Wshadow -Wundef -Wwrite-strings -Wunused -Wuninitialized -Wpointer-arith -Winline -Wformat -Wformat-security -Winit-self -Wmissing-include-dirs -Wnested-externs -Wmissing-declarations -Wempty-body -Wignored-qualifiers -Wmissing-field-initializers -Wtype-limits -Wold-style-definition\n# Some more warnings we need first to eliminate, so temporarely tolerated:\nDEFCFLAGS += -Wcast-align -Wno-error=cast-align\nDEFCFLAGS += -Wswitch-enum -Wno-error=switch-enum\n# GCC 10 has issues with false positives on stringop-overflow, let's disable them for now (cf https://gcc.gnu.org/bugzilla/show_bug.cgi?id=92955, https://gcc.gnu.org/bugzilla/show_bug.cgi?id=94335)\n# beware these flags didn't exist for GCC < 7\nifeq ($(shell expr $(CC_VERSION) \\>= 10), 1)\n  ifneq ($(DETECTED_COMPILER), clang)\n    DEFCFLAGS += -Wno-stringop-overflow -Wno-error=stringop-overflow\n  endif\nendif\nifeq ($(platform),Darwin)\n  ifeq ($(shell uname -p),arm64)\n    # iOS will refuse to compile without the minimum target of iOS 11.0\n    DEFCFLAGS += -mios-version-min=11.0\n  endif\n  # their readline has strict-prototype issues\n  DEFCFLAGS += -Wno-strict-prototypes\n  # some warnings about braced initializers on structs we want to ignore\n  DEFCFLAGS += -Wno-missing-braces\nelse\n  DEFCFLAGS += -Wstrict-prototypes\nendif\n\n# Next ones are activated only if GCCEXTRA=1 or CLANGEXTRA=1\nEXTRACFLAGS =\nEXTRACFLAGS += -Wunused-parameter -Wno-error=unused-parameter\nEXTRACFLAGS += -Wsign-compare -Wno-error=sign-compare\nEXTRACFLAGS += -Wconversion -Wno-error=conversion -Wno-error=sign-conversion -Wno-error=float-conversion\n\n# unknown to clang or old gcc:\n# First we activate Wextra then we explicitly list those we know about\n# Those without -Wno-error are supposed to be completely solved\nGCCEXTRACFLAGS = -Wextra\nGCCEXTRACFLAGS += -Wclobbered -Wno-error=clobbered\nGCCEXTRACFLAGS += -Wcast-function-type\nGCCEXTRACFLAGS += -Wimplicit-fallthrough=3 -Wno-error=implicit-fallthrough\nGCCEXTRACFLAGS += -Wmissing-parameter-type\nGCCEXTRACFLAGS += -Wold-style-declaration -Wno-error=old-style-declaration\nGCCEXTRACFLAGS += -Woverride-init\nGCCEXTRACFLAGS += -Wshift-negative-value\nGCCEXTRACFLAGS += -Wunused-but-set-parameter -Wno-error=unused-but-set-parameter\n# enable gcc static analysis\nGCCEXTRACFLAGS += -fanalyzer\nifeq ($(GCCEXTRA),1)\n  DEFCFLAGS += $(GCCEXTRACFLAGS) $(EXTRACFLAGS)\nendif\n# unknown to gcc or old clang:\n# First we activate Wextra then we explicitly list those we know about\n# Those without -Wno-error are supposed to be completely solved\nCLANGEXTRACFLAGS = -Wextra\nCLANGEXTRACFLAGS += -Wtautological-type-limit-compare\nCLANGEXTRACFLAGS += -Wnull-pointer-arithmetic\nCLANGEXTRACFLAGS += -Woverride-init\nCLANGEXTRACFLAGS += -Wshift-negative-value\nCLANGEXTRACFLAGS += -Wimplicit-fallthrough\nifeq ($(CLANGEXTRA),1)\n  DEFCFLAGS += $(CLANGEXTRACFLAGS) $(EXTRACFLAGS)\nendif\nifeq ($(CLANGEVERYTHING),1)\n  DEFCFLAGS += -Weverything -Wno-error\nendif\nifeq ($(NOERROR),1)\n  DEFCFLAGS += -Wno-error\nendif\n"
        },
        {
          "name": "Makefile.host",
          "type": "blob",
          "size": 3.44921875,
          "content": "#-----------------------------------------------------------------------------\n# Copyright (C) Proxmark3 contributors. See AUTHORS.md for details.\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# See LICENSE.txt for the text of the license.\n#-----------------------------------------------------------------------------\n# This Makefile might have been called from various subdirs, trying to find our Makefile.defs\nifeq ($(DEFSBEENHERE),)\n    -include Makefile.defs\nendif\nifeq ($(DEFSBEENHERE),)\n    -include ../Makefile.defs\nendif\nifeq ($(DEFSBEENHERE),)\n    -include ../../Makefile.defs\nendif\nifeq ($(DEFSBEENHERE),)\n    -include ../../../Makefile.defs\nendif\nifeq ($(DEFSBEENHERE),)\n    $(error Can't find Makefile.defs)\nendif\n\nCFLAGS ?= $(DEFCFLAGS)\nCFLAGS += $(MYDEFS) $(MYCFLAGS) $(MYINCLUDES)\nCXXFLAGS ?= $(DEFCXXFLAGS)\nCXXFLAGS += $(MYDEFS) $(MYCXXFLAGS) $(MYINCLUDES)\nLDFLAGS ?= $(DEFLDFLAGS)\nLDFLAGS += $(MYLDFLAGS)\nLDLIBS += $(MYLDLIBS)\n\nvpath %.c $(MYSRCPATHS)\n\n# Flags to generate temporary dependency files\nDEPFLAGS = -MT $@ -MMD -MP -MF $(OBJDIR)/$*.Td\n# make temporary to final dependency files after successful compilation\nPOSTCOMPILE = $(MV) -f $(OBJDIR)/$*.Td $(OBJDIR)/$*.d && $(TOUCH) $@\n\nBINDIR := .\nOBJDIR := obj\n\nMYOBJS ?= $(MYSRCS:%.c=$(OBJDIR)/%.o)\nMYCXXOBJS ?= $(MYCXXSRCS:%.cpp=$(OBJDIR)/%.o)\nCLEAN = $(foreach bin,$(MYLIBS) $(BINS) $(LIB_A),$(BINDIR)/$(bin))\n\nall: $(foreach bin,$(MYLIBS) $(BINS) $(LIB_A),$(BINDIR)/$(bin))\n\nclean:\n\t$(Q)$(RM) $(CLEAN)\n\t$(Q)$(RMDIR) $(OBJDIR)\nifneq (,$(MYCLEANOLDPATH))\n\t    $(Q)$(RM) $(foreach f,$(CLEAN),$(MYCLEANOLDPATH)/$(f))\n\t    $(Q)$(RMDIR) $(MYCLEANOLDPATH)/$(OBJDIR)\n\t    $(Q)$(RMDIR_SOFT) $(MYCLEANOLDPATH) 2>/dev/null || true\nendif\n\ninstall: all\nifneq (,$(INSTALLTOOLS))\n\t    $(info [@] Installing $(BINS) to $(DESTDIR)$(PREFIX)...)\n\t    $(Q)$(INSTALLSUDO) $(MKDIR) $(DESTDIR)$(PREFIX)$(PATHSEP)$(INSTALLTOOLSRELPATH)\n\t    $(Q)$(INSTALLSUDO) $(CP) $(INSTALLTOOLS) $(DESTDIR)$(PREFIX)$(PATHSEP)$(INSTALLTOOLSRELPATH)\nendif\n\t@true\n\nuninstall:\nifneq (,$(INSTALLTOOLS))\n\t    $(info [@] Uninstalling $(BINS) from $(DESTDIR)$(PREFIX)...)\n\t    $(Q)$(INSTALLSUDO) $(RM) $(foreach tool,$(INSTALLTOOLS),$(DESTDIR)$(PREFIX)$(PATHSEP)$(INSTALLTOOLSRELPATH)$(PATHSEP)$(notdir $(tool)))\nendif\n\t@true\n\n.PHONY: all clean install uninstall\n\n$(BINDIR)/$(LIB_A): $(MYOBJS) $(MYCXXOBJS)\n\t$(info [=] AR $(notdir $@))\n\t$(Q)$(AR) $@ $(MYOBJS) $(MYCXXOBJS)\n\t$(Q)$(RANLIB) $@\n\n$(BINDIR)/% : $(OBJDIR)/%.o $(MYOBJS) $(MYCXXOBJS) $(MYLIBS)\n\t$(info [=] CXX $(notdir $@))\n\t$(Q)$(CXX) $(LDFLAGS) $(MYOBJS) $(MYCXXOBJS) $< -o $@ $(MYLIBS) $(MYLDLIBS)\n\n%.o: %.c\n$(OBJDIR)/%.o : %.c $(OBJDIR)/%.d | $(OBJDIR)\n\t$(info [-] CC $<)\n\t$(Q)$(CC) $(DEPFLAGS) $(CFLAGS) -c -o $@ $<\n\t$(Q)$(POSTCOMPILE)\n\n%.o: %.cpp\n$(OBJDIR)/%.o : %.cpp $(OBJDIR)/%.d | $(OBJDIR)\n\t$(info [-] CXX $<)\n\t$(Q)$(CXX) $(DEPFLAGS) $(CXXFLAGS) -c -o $@ $<\n\t$(Q)$(POSTCOMPILE)\n\n$(OBJDIR):\n\t$(Q)$(MKDIR) $(OBJDIR)\n\nDEPENDENCY_FILES = $(MYOBJS:%.o=%.d) $(MYCXXOBJS:%.o=%.d) $(BINS:%=$(OBJDIR)/%.d)\n\n$(DEPENDENCY_FILES): ;\n.PRECIOUS: $(DEPENDENCY_FILES)\n\n-include $(DEPENDENCY_FILES)\n"
        },
        {
          "name": "Makefile.platform.sample",
          "type": "blob",
          "size": 1.189453125,
          "content": "# If you want to use it, copy this file as Makefile.platform and adjust it to your needs\n# Run 'make PLATFORM=' to get an exhaustive list of possible parameters for this file.\n\nPLATFORM=PM3RDV4\n#PLATFORM=PM3GENERIC\n# If you want more than one PLATFORM_EXTRAS option, separate them by spaces:\n#PLATFORM_EXTRAS=BTADDON\n#PLATFORM_EXTRAS=FLASH\n#PLATFORM_EXTRAS=SMARTCARD\n#PLATFORM_EXTRAS=BTADDON FLASH\n#STANDALONE=LF_SAMYRUN\n\n# Uncomment the line below to set the correct LED order on board Proxmark3 Easy\n# Only available with PLATFORM=PM3GENERIC\n#LED_ORDER=PM3EASY\n\n# Uncomment the lines below in order to make a 256KB image\n# and comment out the lines above\n\n#PLATFORM=PM3GENERIC\n#PLATFORM_SIZE=256\n#STANDALONE=\n#SKIP_LF=1\n#SKIP_HITAG=1\n#SKIP_EM4x50=1\n#SKIP_EM4x70=1\n#SKIP_ZX8211=1\n#SKIP_HF=1\n#SKIP_ISO15693=1\n#SKIP_LEGICRF=1\n#SKIP_ISO14443b=1\n#SKIP_ISO14443a=1\n#SKIP_ICLASS=1\n#SKIP_FELICA=1\n#SKIP_NFCBARCODE=1\n#SKIP_HFSNIFF=1\n#SKIP_HFPLOT=1\n\n# To accelerate repetitive compilations:\n# Install package \"ccache\" -> Debian/Ubuntu: /usr/lib/ccache, Fedora/CentOS/RHEL: /usr/lib64/ccache\n# And uncomment the following line\n#export PATH := /usr/lib64/ccache:/usr/lib/ccache:${PATH}\n\n# To install with sudo:\nINSTALLSUDO=sudo\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.841796875,
          "content": "# Iceman Fork - Proxmark3\n\nThe Proxmark3 is the swiss-army tool of RFID, allowing for interactions with the vast majority of RFID tags on a global scale. Originally built by Jonathan Westhues, the device is now the goto tool for RFID Analysis for the enthusiast. Iceman repository is considered to be the pinnacle of features and functionality, enabling a huge range of extremely useful and convenient commands and LUA scripts to automate chip identification, penetration testing, and programming\n\n\n| Latest Release | Coverity | Contributors |\n|:--------------:|:--------:|:------------:|\n| [![Latest release](https://img.shields.io/github/v/release/rfidresearchgroup/proxmark3)](https://github.com/RfidResearchGroup/proxmark3/releases/latest) | [![Coverity Status](https://scan.coverity.com/projects/19334/badge.svg)](https://scan.coverity.com/projects/proxmark3-rrg-iceman-repo)| ![GitHub contributors](https://img.shields.io/github/contributors/rfidresearchgroup/proxmark3) |\n\n\n| Actions OSX CI |  Actions Ubuntu CI | Actions Windows CI |\n|:--------------:|:------------------:|:------------------:|\n| [![MacOS Build and Test](https://github.com/RfidResearchGroup/proxmark3/actions/workflows/macos.yml/badge.svg?branch=master)](https://github.com/RfidResearchGroup/proxmark3/actions/workflows/macos.yml) | [![Ubuntu Build and Test](https://github.com/RfidResearchGroup/proxmark3/actions/workflows/ubuntu.yml/badge.svg?branch=master)](https://github.com/RfidResearchGroup/proxmark3/actions/workflows/ubuntu.yml) | [![Windows Build and Test](https://github.com/RfidResearchGroup/proxmark3/actions/workflows/windows.yml/badge.svg?branch=master)](https://github.com/RfidResearchGroup/proxmark3/actions/workflows/windows.yml) |\n\n# Table of Contents\n- [Iceman Fork - Proxmark3](#iceman-fork---proxmark3)\n- [Table of Contents](#table-of-contents)\n- [PROXMARK3 INSTALLATION AND OVERVIEW](#proxmark3-installation-and-overview)\n  - [Notes / helpful documents](#notes--helpful-documents)\n- [How to build?](#how-to-build)\n  - [Proxmark3 RDV4](#proxmark3-rdv4)\n  - [Generic Proxmark3 platforms](#generic-proxmark3-platforms)\n- [What has changed?](#what-has-changed)\n- [Development](#development)\n  - [Supported operative systems](#supported-operative-systems)\n  - [Precompiled binaries](#precompiled-binaries)\n  - [Proxmark3 GUI](#proxmark3-gui)\n  - [Official channels](#official-channels)\n  - [Maintainers](#maintainers)\n  - [Citation](#citation)\n  - [Copyright and licensing terms](#copyright-and-licensing-terms)\n\n# PROXMARK3 INSTALLATION AND OVERVIEW\n\n| Installation         | Use of the Proxmark3 |\n| :------------------: | :------------------: |\n| [Linux - Setup and Build](/doc/md/Installation_Instructions/Linux-Installation-Instructions.md) | [Compilation Instructions](/doc/md/Use_of_Proxmark/0_Compilation-Instructions.md)|\n| [Linux - Important notes on ModemManager](/doc/md/Installation_Instructions/ModemManager-Must-Be-Discarded.md) | [Validating Proxmark3 Client Functionality](/doc/md/Use_of_Proxmark/1_Validation.md)|\n| [macOS - Homebrew & Upgrading HomeBrew Tap Formula](/doc/md/Installation_Instructions/macOS-Homebrew-Installation-Instructions.md) | [First Use and Verification](/doc/md/Use_of_Proxmark/2_Configuration-and-Verification.md)|\n| [macOS - MacPorts](/doc/md/Installation_Instructions/macOS-MacPorts-Installation-Instructions.md) | [Commands & Features](/doc/md/Use_of_Proxmark/3_Commands-and-Features.md)|\n| [macOS - Setup and Build](/doc/md/Installation_Instructions/macOS-Compile-From-Source-Instructions.md) ||\n| [Windows - Setup and Build](/doc/md/Installation_Instructions/Windows-Installation-Instructions.md) ||\n| [Termux / Android - Setup and Build](/doc/termux_notes.md) ||\n| [iOS - Setup and Build](/doc/md/Installation_Instructions/iOS-Installation-Instructions.md)\n| [Blue Shark Manual](/doc/bt_manual_v10.md) | [Command Cheat Sheet](/doc/cheatsheet.md)|\n| [Advanced Compilation Parameters](/doc/md/Use_of_Proxmark/4_Advanced-compilation-parameters.md) | [More Cheat Sheets](https://github.com/RfidResearchGroup/proxmark3/wiki/More-cheat-sheets)|\n| [Troubleshooting](/doc/md/Installation_Instructions/Troubleshooting.md) | [Complete Client Command Set](/doc/commands.md) |\n| [JTAG](/doc/jtag_notes.md) | [T5577 Introduction Guide](/doc/T5577_Guide.md)|\n\n\n\n## Notes / helpful documents\n\n| Notes |||\n| ------------------- |:-------------------:| -------------------:|\n|[Notes on UART](/doc/uart_notes.md)|[Notes on Termux / Android](/doc/termux_notes.md)|[Notes on paths](/doc/path_notes.md)|\n|[Notes on frame format](/doc/new_frame_format.md)|[Notes on tracelog / wireshark](/doc/trace_notes.md)|[Notes on EMV](/doc/emv_notes.md)|\n|[Notes on external flash](/doc/ext_flash_notes.md)|[Notes on loclass](/doc/loclass_notes.md)|[Notes on Coverity Scan Config & Run](/doc/md/Development/Coverity-Scan-Config-and-Run.md)|\n|[Notes on file formats used with Proxmark3](/doc/extensions_notes.md)|[Notes on MFU binary format](/doc/mfu_binary_format_notes.md)|[Notes on FPGA & ARM](/doc/fpga_arm_notes.md)|\n|[Developing standalone mode](/armsrc/Standalone/readme.md)|[Wiki about standalone mode](https://github.com/RfidResearchGroup/proxmark3/wiki/Standalone-mode)|[Notes on Magic UID cards](/doc/magic_cards_notes.md)|\n|[Notes on Color usage](/doc/colors_notes.md)|[Makefile vs CMake](/doc/md/Development/Makefile-vs-CMake.md)|[Notes on Cloner guns](/doc/cloner_notes.md)|\n|[Notes on cliparser usage](/doc/cliparser.md)|[Notes on clocks](/doc/clocks.md)|[Notes on MIFARE DESFire](/doc/desfire.md)|\n|[Notes on CIPURSE](/doc/cipurse.md)|[Notes on NDEF type4a](/doc/ndef_type4a.md)|[Notes on downgrade attacks](/doc/hid_downgrade.md)|\n\n# How to build?\n\n## Proxmark3 RDV4\n\nSee the instruction links in the tables above to build, flash and run for your Proxmark3 RDV4 device.\n\n## Generic Proxmark3 platforms\n\nIn order to build this repo for generic Proxmark3 platforms we urge you to read [Advanced compilation parameters](/doc/md/Use_of_Proxmark/4_Advanced-compilation-parameters.md)\n\nWe define generic Proxmark3 platforms as following devices.\n\n**Supported**\n  - RDV1, RDV2, RDV3 easy\n  - Ryscorp green PCB version\n  - Radiowar black PCB version\n  - numerous Chinese adapted versions of the RDV3 easy (kkmoon, PiSwords etc)\n  - Proxmark3 SE  (Special Edition)  (BLE enabled)\n  - Proxmark3 X\n    - **Note**: Community tested\n    - **Note**: unknown device hw\n\n**Not supported**\n - ⚠  Proxmark Evolution (EVO) \n   - **Note**: unknown pin assignments.\n - ⚠  Ryscorp Proxmark3 Pro \n   - **Note**: device has different fpga and unknown pin assignments.\n   - **Note**: Company have disappeared, leaving their customers in the dark.\n\n**Experimental support**\n - ⚠  iCopy-X\n   - **Note**: currently incompatible with iCopy-X GUI as Proxmark client commands using different syntax\n   - **Note**: see also [icopyx-community repos](https://github.com/iCopy-X-Community/) for upstream sources, reversed hw etc.\n   - **Note**: Uses DRM to lock down tags, ignores the open source licences. Use on your own risk. \n\n**Unknown support status**\n - ⚠  VX\n   - **Note**: unknown device hw\n-  ⚠ Proxmark3 Ultimate\n   - **Note**: unknown device hw\n\nWhen it comes to these new unknown models we are depending on the community to report in if this repo works and what they did to make it work.\n\n\n**256KB flash memory size of generic Proxmark3 platforms**\n\n> ⚠ **Note**: \n> You need to keep a eye on how large your ARM chip built-in flash memory is. \n> With 512KB you are fine but if its 256KB you need to compile this repo with even less functionality.\n> When running the `./pm3-flash-all` you can see which size your device have if you have the bootloader from this repo installed. \n> Otherwise you will find the size reported in the start message when running the Proxmark3 client `./pm3`.\n>\n> [OBS! Read the 256KB flash memory advisory](/doc/md/Use_of_Proxmark/4_Advanced-compilation-parameters.md#256KB-versions)\n\n\n# What has changed?\n\nProxmark3 RDV4 hardware modifications:\n  * added flash memory 256KB\n  * added smart card module\n  * added FPC connector for peripherals such as Bluetooth+battery addon\n  * improved antennas\n    * swappable\n    * LF Q factor switch\n    * LF 125/134 frequency switch\n  * tiny PCB form factor\n  * ABS case\n\nThis repo vs official Proxmark3 repo:\n\nSee the [Changelog file](CHANGELOG.md) which we try to keep updated.\n\nIn short this repo gives you a completely different user experience when it comes to Proxmark3.\n\n  * Supports command tab complete\n  * Richer CLI with use of colors / emojis\n  * Help text system implemented everywhere\n  * Hints system\n  * User preference settings\n  * Extensive testing with continuous integration build systems on Linux, OSX and Windows, and regular usage of static analysis tools like \n    * [Coverity Scan](https://scan.coverity.com/projects/proxmark3-rrg-iceman-repo/)\n    * Cppcheck (v2.6)\n    * GCC and Clang aggressive enforcement of diagnostic flags\n  * Auto detection of serial ports and seamless integration with Bluetooth addon\n  * Reconnect to device from inside client\n  * Supports tearoff attacks\n  * Supports NFC NDEF type1, type2, type4a, type4b, mifare, barcode\n  * Supports pm3 client scripts,  lua scripts,  python scripts\n  * Most comprehensive collection of scripts available\n  * Wiegand encoding, decoding.\n  * Supports EMV\n  * Supports CIPURSE\n  * Most standalone modes available with easy compilation\n  * Extensive test script for client and external tools\n  * Most comprehensive compiled known keys dictionaries\n  * Slimed down usb communications with NG-frames\n  * The most compiled public known key recovery software\n  * The fastest implementations of said software\n  * Support multiple fileformats for dump files (BIN/EML/JSON) \n  * Interoperability of said fileformats with libnfc, MFC tool app etc\n  * Supports more RFID based protocols than ever\n  * Easy install for package maintainers, distro maintainers\n  * Supports cmake, make\n  * Builds without errors or warnings on more OS/platforms than ever\n  * Available as package on known distros like Gentoo, Kali, Termux, Macports, Homebrew\n  * Much more documentation \n\n\n# Development\n\n> ⚠ **Note**: This is a bleeding edge repository. The maintainers actively is working out of this repository and will be periodically re-structuring the code to make it easier to comprehend, navigate, build, test, and contribute to, so **DO expect significant changes to code layout on a regular basis**.\n\n> 👉 **Remember!** If you intend to contribute to the code, please read the [coding style notes](CONTRIBUTING.md) first.\nWe usually merge your contributions fast since we do like the idea of getting a functionality in the Proxmark3 and weed out the bugs afterwards.\n\nThe [public roadmap](https://github.com/RfidResearchGroup/proxmark3/wiki/Public-Roadmap) is an excellent start to read if you are interesting in contributing.\n\n\n## Supported operative systems \n\nThis repo compiles nicely on \n   - WSL1 on Windows 10\n   - Proxspace environment [release v3.xx](https://github.com/Gator96100/ProxSpace/releases)\n   - Windows/MinGW environment\n   - Ubuntu, ParrotOS, Gentoo, Pentoo, Kali, NetHunter, Arch Linux, Fedora, Debian, Raspbian\n   - Android / Termux\n   - macOS / Homebrew (or MacPorts, experimental) / Apple Silicon M1\n   - iOS (Jailbroken, rootful)\n   - Docker container\n      - [ Iceman repo based ubuntu 18.04 container ](https://hub.docker.com/r/secopsconsult/proxmark3)\n      - [ Iceman fork based container v1.7 ](https://hub.docker.com/r/iceman1001/proxmark3/)\n\n\n## Precompiled binaries\n\nSee [Proxmark3 precompiled builds](https://www.proxmarkbuilds.org/) \n\n\n## Proxmark3 GUI\n\nThe official PM3-GUI from Gaucho will not work. Not to mention is quite old and not maintained any longer.\n\n- [Proxmark3 Universal GUI](https://github.com/burma69/PM3UniversalGUI) will work more or less.\n- [Proxmark3 GUI cross-compiled](https://github.com/wh201906/Proxmark3GUI/) which is recently updated and claims to support latest source of this repo.\n- [Proxmark3_GUI](https://github.com/Phreak87/Proxmark3_GUI) simple gui in vb.net\n\n\n## Official channels\nWhere do you find the community?\n   - [RFID Hacking community discord server](https://t.ly/d4_C)\n   - [Proxmark3 IRC channel](https://web.libera.chat/?channels=#proxmark3)\n   - [Proxmark3 sub reddit](https://www.reddit.com/r/proxmark3/)\n   - [Proxmark3 forum](http://www.proxmark.org/forum/index.php)\n\n\n## Maintainers\n\nTo all distro, package maintainers, we tried to make your life easier.\n\n`make install` is now available and if you want to know more.\n\nThis document will be helpful for you\n- [Notes for maintainers](/doc/md/Development/Maintainers.md)\n\n\n## Citation\nUse this bibtex to cite this repository globally:\n```\n@misc{proxmark3,\n  author = {C. {Herrmann} and P. {Teuwen} and O. {Moiseenko} and M. {Walker} and others},\n  title = {{Proxmark3 -- Iceman repo}},\n  howpublished = {\\url{https://github.com/RfidResearchGroup/proxmark3}},\n  keywords = {rfid nfc iceman proxmark3 125khz 134khz 13.56mhz},\n}\n```\nIf you need to refer to a specific state of the repository, use a commit number or a date of access, e.g.:\n```\n  note = {Accessed: commit 12327f71a27da23831901847886aaf20e8ad3ca0}\n  note = {Accessed: 2021-01-01}\n```\n\n## Copyright and licensing terms\n\nEach contribution is under the copyright of its author. See [AUTHORS](AUTHORS.md).\n\nThe Proxmark3 source code is covered by the following licensing terms, usually referred as **GPLv3 or later**.\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\nA copy of the GPLv3 is available in [LICENSE](LICENSE.txt).  \n\nSome dependencies may be under other free licensing terms compatible with the Proxmark3 licensing terms, see their respective description.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.76171875,
          "content": "# Security Policy\n\nThis is an open source project driven by volunteering devs contributing their time for free.\n\nThis is a bleeding edge repository. \nThe maintainers actively is working out of this repository and will be periodically re-structuring the code to make it easier to comprehend, navigate, build, test, and contribute to, so DO expect significant changes to code layout on a regular basis.\n\n\n## Reporting a Vulnerability\n\nif you find a vulnerability feel free to make a pull request with your fix and we will deal with it.\n\n\n👉 Remember! \nIf you intend to contribute to the code, please read the coding style notes first. We usually merge your contributions fast since we do like the idea of getting a functionality in the Proxmark3 and weed out the bugs afterwards.\n"
        },
        {
          "name": "armsrc",
          "type": "tree",
          "content": null
        },
        {
          "name": "bootrom",
          "type": "tree",
          "content": null
        },
        {
          "name": "client",
          "type": "tree",
          "content": null
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "common_arm",
          "type": "tree",
          "content": null
        },
        {
          "name": "common_fpga",
          "type": "tree",
          "content": null
        },
        {
          "name": "covbuild.sh",
          "type": "blob",
          "size": 2.10546875,
          "content": "#!/usr/bin/env bash\n\nset -e\n. .coverity.conf || exit 1\n\npre_build_hook\n\nmkdir -p \"$COVDIR\"\nmake clean\ncov-build --dir \"$COVDIR\" --initialize\n\n#########################################\n# Build Host prerequisites              #\n#########################################\ncov-build --dir \"$COVDIR\" --c-coverage=gcov --no-network-coverage --no-generate-build-id --force make CC=$HOSTCC CXX=$HOSTCXX LD=$HOSTLD fpga_compress\n\n#########################################\n# Build ARM, no test coverage           #\n#########################################\ncov-build --dir \"$COVDIR\" --no-generate-build-id --force make recovery\n\n#########################################\n# Build client                          #\n#########################################\n# make sure to do client after ARM because Coverity retains one build info per file\n# and we want the client-side of the common/ analysis\ncov-build --dir \"$COVDIR\" --c-coverage=gcov --no-network-coverage --no-generate-build-id --force make CC=$HOSTCC CXX=$HOSTCXX LD=$HOSTLD mfkey\ncov-build --dir \"$COVDIR\" --c-coverage=gcov --no-network-coverage --no-generate-build-id --force make CC=$HOSTCC CXX=$HOSTCXX LD=$HOSTLD nonce2key\ncov-build --dir \"$COVDIR\" --c-coverage=gcov --no-network-coverage --no-generate-build-id --force make CC=$HOSTCC CXX=$HOSTCXX LD=$HOSTLD mf_nonce_brute\ncov-build --dir \"$COVDIR\" --c-coverage=gcov --no-network-coverage --no-generate-build-id --force make CC=$HOSTCC CXX=$HOSTCXX LD=$HOSTLD mfd_aes_brute\ncov-build --dir \"$COVDIR\" --c-coverage=gcov --no-network-coverage --no-generate-build-id --force make CC=$HOSTCC CXX=$HOSTCXX LD=$HOSTLD client\n\n#########################################\n# Run tests                             #\n#########################################\ncov-build --dir \"$COVDIR\" --c-coverage=gcov --no-network-coverage --test-capture tools/pm3_tests.sh --long\n#cov-manage-emit --dir \"$COVDIR\" list-coverage-known\n\n#########################################\n# Import Git annotations (~ git blame)  #\n#########################################\ncov-import-scm --dir \"$COVDIR\" --scm git --filename-regex \"$PWD\" --log \"\"$COVDIR\"/cov-import-scm-log.txt\"\n\npost_build_hook\n"
        },
        {
          "name": "covconfig.sh",
          "type": "blob",
          "size": 0.2275390625,
          "content": "#!/usr/bin/env bash\n\nset -e\n. .coverity.conf || exit 1\n\n# cov-configure --list-configured-compilers text\ncov-configure --template --compiler arm-none-eabi-gcc --comptype gcc\ncov-configure --template --compiler $HOSTCC --comptype gcc\n"
        },
        {
          "name": "covsubmit.sh",
          "type": "blob",
          "size": 1.791015625,
          "content": "#!/usr/bin/env bash\n\nset -e\n. .coverity.conf || exit 1\n\npre_submit_hook\n\necho \"Checking upload permissions...\"\n\nif ! up_perm=\"$(wget https://scan.coverity.com/api/upload_permitted --post-data \"token=${COVTOKEN}&project=${COVPROJECT}\" -q -O -)\"; then\n    echo \"Coverity Scan API access denied: bad token?\"\n    exit 1\nfi\n\n# Really up_perm is a JSON response with either\n# {upload_permitted:true} or {next_upload_permitted_at:<date>}\n# We do some hacky string parsing instead of properly parsing it.\ncase \"$up_perm\" in\n    *upload_permitted*true*)\n        echo \"Coverity Scan: upload permitted\"\n        ;;\n    *next_upload_permitted_at*)\n        if [ -z \"$COVERITY_DRYRUN\" ]; then\n            echo \"Coverity Scan: upload quota reached; stopping here\"\n            # Exit success as this isn't a build error.\n            exit 0\n        else\n            echo \"Coverity Scan: upload quota reached, continuing dry run\"\n        fi\n        ;;\n    *)\n        echo \"Coverity Scan upload check: unexpected result $up_perm\"\n        exit 1\n        ;;\nesac\n\n\n\n## delete all previous tarballs\nrm -f proxmark3.all.*.tgz proxmark3.all.*.log\n\nTODAY=\"$(date --date now +%Y%m%d.%H%M)\"\nVERSION=\"0.1.$TODAY\"\nDESCNAME=\"manual_by_$NICKNAME.$TODAY.$(git describe --dirty --always)\"\nFILENAME=\"proxmark3.all.$TODAY.tgz\"\nLOGFILENAME=\"${FILENAME/.tgz/.log}\"\n\n## create tarball\ntar cfz \"$FILENAME\" \"$COVDIR\" || exit $?\necho \"Coverity build file is ready\"\n\n## upload tarball to Coverity.com\ncurl --progress-bar --fail \\\n  --form token=\"$COVTOKEN\" \\\n  --form email=\"$COVLOGIN\" \\\n  --form file=\"@$FILENAME\" \\\n  --form version=\"$VERSION\" \\\n  --form description=\"$DESCNAME\" \\\n  https://scan.coverity.com/builds?project=\"${COVPROJECT}\" | tee -a \"${LOGFILENAME}\" ; test \"${PIPESTATUS[0]}\" -eq 0  || exit $?\necho \"tarball uploaded to Coverity for analyse\"\n\npost_submit_hook\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "driver",
          "type": "tree",
          "content": null
        },
        {
          "name": "fpga",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "pm3",
          "type": "blob",
          "size": 17.4306640625,
          "content": "#!/usr/bin/env bash\n\n# Usage: run option -h to get help\n\n# BT auto detection\n#   Shall we look for white HC-06-USB dongle ?\nFINDBTDONGLE=true\n#   Shall we look for rfcomm interface ?\nFINDBTRFCOMM=true\n#   Shall we look for registered BT device ? (Linux only)\nFINDBTDIRECT=true\n\nPM3PATH=$(dirname \"$0\")\nEVALENV=\"\"\nFULLIMAGE=\"fullimage.elf\"\nBOOTIMAGE=\"bootrom.elf\"\n\n#Skip check if --list is used\nif [ ! \"$1\" == \"--list\" ]; then\n    # try pm3 dirs in current repo workdir\n    if [ -d \"$PM3PATH/client/\" ]; then\n        if [ -x \"$PM3PATH/client/proxmark3\" ]; then\n            CLIENT=\"$PM3PATH/client/proxmark3\"\n        elif [ -x \"$PM3PATH/client/build/proxmark3\" ]; then\n            CLIENT=\"$PM3PATH/client/build/proxmark3\"\n        else\n            echo >&2 \"[!!] In devel workdir but no executable found, did you compile it?\"\n            exit 1\n        fi\n    # try install dir\n    elif [ -x \"$PM3PATH/proxmark3\" ]; then\n        CLIENT=\"$PM3PATH/proxmark3\"\n    else\n    # hope it's installed somehow, still not sure where fw images and pm3.py are...\n        CLIENT=\"proxmark3\"\n    fi\nfi\n\n# LeakSanitizer suppressions\nif [ -e .lsan_suppressions ]; then\n  EVALENV+=\" LSAN_OPTIONS=suppressions=.lsan_suppressions\"\nfi\nif [ \"$EVALENV\" != \"\" ]; then\n  EVALENV=\"export $EVALENV\"\nfi\nPM3LIST=()\nSHOWLIST=false\n\nfunction get_pm3_list_Linux {\n    N=$1\n    PM3LIST=()\n    if [ ! -c \"/dev/tty0\" ]; then\n        echo >&2 \"[!!] Script cannot access /dev/ttyXXX files, insufficient privileges\"\n        exit 1\n    fi\n    for DEV in $(find /dev/ttyACM* 2>/dev/null); do\n        if command -v udevadm >/dev/null; then\n            # WSL1 detection\n            if udevadm info -q property -n \"$DEV\" | grep -q \"ID_VENDOR=proxmark.org\"; then\n                PM3LIST+=(\"$DEV\")\n                if [ ${#PM3LIST[*]} -ge \"$N\" ]; then\n                    return\n                fi\n            fi\n        fi\n        # WSL2 with usbipd detection - doesn't report same things as WSL1\n        if grep -q \"proxmark.org\" \"/sys/class/tty/${DEV#/dev/}/../../../manufacturer\" 2>/dev/null; then\n            if echo \"${PM3LIST[*]}\" | grep -qv \"${DEV}\"; then\n                PM3LIST+=(\"$DEV\")\n                if [ ${#PM3LIST[*]} -ge \"$N\" ]; then\n                    return\n                fi\n            fi\n        fi\n    done\n    if $FINDBTDONGLE; then\n        # check if the HC-06-USB white dongle is present (still, that doesn't tell us if it's paired with a Proxmark3...)\n        for DEV in $(find /dev/ttyUSB* 2>/dev/null); do\n            if command -v udevadm >/dev/null; then\n                if udevadm info -q property -n \"$DEV\" | grep -q \"ID_MODEL=CP2104_USB_to_UART_Bridge_Controller\"; then\n                    PM3LIST+=(\"$DEV\")\n                    if [ ${#PM3LIST[*]} -ge \"$N\" ]; then\n                        return\n                    fi\n                fi\n            else\n                if grep -q \"DRIVER=cp210x\" \"/sys/class/tty/${DEV#/dev/}/../../uevent\" 2>/dev/null; then\n                    PM3LIST+=(\"$DEV\")\n                    if [ ${#PM3LIST[*]} -ge \"$N\" ]; then\n                        return\n                    fi\n                fi\n            fi\n        done\n    fi\n    if $FINDBTRFCOMM; then\n        # check if the MAC of a Proxmark3 was bound to a local rfcomm interface\n        # (on OSes without deprecated rfcomm and hcitool, the loop will be simply skipped)\n        for DEVMAC in $(rfcomm -a 2>/dev/null | grep \" 20:19:0[45]\" | sed 's/^\\(.*\\): \\([0-9:]*\\) .*/\\1@\\2/'); do\n            DEV=${DEVMAC/@*/}\n            MAC=${DEVMAC/*@/}\n            # check which are Proxmark3 and, side-effect, if they're actually present\n            if hcitool name \"$MAC\" | grep -q \"PM3\"; then\n                PM3LIST+=(\"/dev/$DEV\")\n                if [ ${#PM3LIST[*]} -ge \"$N\" ]; then\n                    return\n                fi\n            fi\n        done\n    fi\n    if $FINDBTDIRECT; then\n        # check if the MAC of a Proxmark3 was registered in the known devices\n        for MAC in $(dbus-send --system --print-reply --type=method_call --dest='org.bluez' '/' org.freedesktop.DBus.ObjectManager.GetManagedObjects 2>/dev/null|\\\n                         awk '/\"Address\"/{getline;gsub(/\"/,\"\",$3);a=$3}/Name/{getline;if (/PM3_RDV4/ || /Proxmark3 SE/) print a}'); do\n            PM3LIST+=(\"bt:$MAC\")\n        done\n        # we don't probe the device so there is no guarantee the device is actually present\n    fi\n}\n\nfunction get_pm3_list_macOS {\n    N=$1\n    PM3LIST=()\n    for DEV in $(ioreg -r -c \"IOUSBHostDevice\" -l | awk -F '\"' '\n        $2==\"USB Vendor Name\"{b=($4==\"proxmark.org\")}\n        b==1 && $2==\"IODialinDevice\"{print $4}'); do\n        PM3LIST+=(\"$DEV\")\n        if [ ${#PM3LIST[*]} -ge \"$N\" ]; then\n            return\n        fi\n    done\n}\n\nfunction get_pm3_list_Windows {\n    N=$1\n    PM3LIST=()\n\n    # Normal SERIAL PORTS (COM)\n    for DEV in $(wmic /locale:ms_409 path Win32_SerialPort Where \"PNPDeviceID LIKE '%VID_9AC4&PID_4B8F%' Or PNPDeviceID LIKE '%VID_2D2D&PID_504D%'\" Get DeviceID 2>/dev/null | awk -b '/^COM/{print $1}'); do\n        DEV=${DEV/ */}\n        #prevent soft bricking when using pm3-flash-all on an outdated bootloader\n        if [ $(basename -- \"$0\") = \"pm3-flash-all\" ]; then\n            line=$(wmic /locale:ms_409 path Win32_SerialPort Where \"DeviceID='$DEV'\" Get PNPDeviceID 2>/dev/null | awk -b '/^USB/{print $1}');\n            if [[ ! $line =~ ^\"USB\\VID_9AC4&PID_4B8F\\ICEMAN\" ]]; then\n                echo -e \"\\033[0;31m[!] Using pm3-flash-all on an oudated bootloader, use pm3-flash-bootrom first!\"\n                exit 1\n            fi\n        fi\n        PM3LIST+=(\"$DEV\")\n        if [ ${#PM3LIST[*]} -ge \"$N\" ]; then\n            return\n        fi\n    done\n\n    #BT direct SERIAL PORTS (COM)\n    if $FINDBTRFCOMM; then\n        for DEV in $(wmic /locale:ms_409 path Win32_PnPEntity Where \"Caption LIKE '%Bluetooth%(COM%'\" Get Name 2> /dev/null | awk -b 'match($0,/(COM[0-9]+)/,m){print m[1]}'); do\n            DEV=${DEV/ */}\n            PM3LIST+=(\"$DEV\")\n            if [ ${#PM3LIST[*]} -ge \"$N\" ]; then\n                return\n            fi\n        done\n    fi\n\n    #white BT dongle SERIAL PORTS (COM)\n    if $FINDBTDONGLE; then\n        for DEV in $(wmic /locale:ms_409 path Win32_SerialPort Where \"PNPDeviceID LIKE '%VID_10C4&PID_EA60%'\" Get DeviceID 2>/dev/null | awk -b '/^COM/{print $1}'); do\n            DEV=${DEV/ */}\n            PM3LIST+=(\"$DEV\")\n            if [ ${#PM3LIST[*]} -ge \"$N\" ]; then\n                return\n            fi\n        done\n    fi\n}\n\nfunction get_pm3_list_WSL {\n    N=$1\n    PM3LIST=()\n\n    # Normal SERIAL PORTS (COM)\n    for DEV in $($PSHEXE -command \"Get-CimInstance -ClassName Win32_serialport | Where-Object {\\$_.PNPDeviceID -like '*VID_9AC4&PID_4B8F*' -or \\$_.PNPDeviceID -like '*VID_2D2D&PID_504D*'} | Select -expandproperty DeviceID\" 2>/dev/null); do\n        DEV=$(echo $DEV | tr -dc '[:print:]')\n        _comport=$DEV\n        DEV=$(echo $DEV | sed -nr 's#^COM([0-9]+)\\b#/dev/ttyS\\1#p')\n        # ttyS counterpart takes some more time to appear\n        if [ -e \"$DEV\" ]; then\n\n            #prevent soft bricking when using pm3-flash-all on an outdated bootloader\n            if [ $(basename -- \"$0\") = \"pm3-flash-all\" ]; then\n                line=$($PSHEXE -command \"Get-CimInstance -ClassName Win32_serialport | Where-Object {\\$_.DeviceID -eq '$_comport'} | Select -expandproperty PNPDeviceID\" 2>/dev/null | tr -dc '[:print:]');\n                if [[ ! $line =~ ^\"USB\\VID_9AC4&PID_4B8F\\ICEMAN\" ]]; then\n                    echo -e \"\\033[0;31m[!] Using pm3-flash-all on an oudated bootloader, use pm3-flash-bootrom first!\"\n                    exit 1\n                fi\n            fi\n            PM3LIST+=(\"$DEV\")\n            if [ ! -w \"$DEV\" ]; then\n                echo \"[!] Let's give users read/write access to $DEV\"\n                sudo chmod 666 \"$DEV\"\n            fi\n            if [ ${#PM3LIST[*]} -ge \"$N\" ]; then\n                return\n            fi\n        fi\n    done\n\n    #BT direct SERIAL PORTS (COM)\n    if $FINDBTRFCOMM; then\n        for DEV in $($PSHEXE -command \"Get-CimInstance -ClassName Win32_PnPEntity | Where-Object Caption -like 'Standard Serial over Bluetooth link (COM*' | Select Name\" 2> /dev/null | sed -nr 's#.*\\bCOM([0-9]+)\\b.*#/dev/ttyS\\1#p'); do\n            # ttyS counterpart takes some more time to appear\n            if [ -e \"$DEV\" ]; then\n                PM3LIST+=(\"$DEV\")\n                if [ ! -w \"$DEV\" ]; then\n                    echo \"[!] Let's give users read/write access to $DEV\"\n                    sudo chmod 666 \"$DEV\"\n                fi\n                if [ ${#PM3LIST[*]} -ge \"$N\" ]; then\n                    return\n                fi\n            fi\n\n        done\n    fi\n\n    #white BT dongle SERIAL PORTS (COM)\n    if $FINDBTDONGLE; then\n        for DEV in $($PSHEXE -command \"Get-CimInstance -ClassName Win32_serialport | Where-Object PNPDeviceID -like '*VID_10C4&PID_EA60*' | Select DeviceID\" 2>/dev/null | sed -nr 's#^COM([0-9]+)\\b#/dev/ttyS\\1#p'); do\n            # ttyS counterpart takes some more time to appear\n            if [ -e \"$DEV\" ]; then\n                PM3LIST+=(\"$DEV\")\n                if [ ! -w \"$DEV\" ]; then\n                    echo \"[!] Let's give users read/write access to $DEV\"\n                    sudo chmod 666 \"$DEV\"\n                fi\n                if [ ${#PM3LIST[*]} -ge \"$N\" ]; then\n                    return\n                fi\n            fi\n\n        done\n    fi\n}\n\nSCRIPT=$(basename -- \"$0\")\n\nif [ \"$SCRIPT\" = \"pm3\" ]; then\n  CMD() { eval \"$EVALENV\"; $CLIENT \"$@\"; }\n  HELP() {\n      cat << EOF\n\nQuick helper script for proxmark3 client when working with a Proxmark3 device\n\nDescription:\n    The usage is the same as for the proxmark3 client, with the following differences:\n     * the correct port name will be automatically guessed;\n     * the script will wait for a Proxmark3 to be connected (same as option -w of the client).\n    You can also specify a first option -n N to access the Nth Proxmark3 connected.\n    To see a list of available ports, use --list.\n\nUsage:\n    $SCRIPT [-n <N>] [<any other proxmark3 client option>]\n    $SCRIPT [--list] [-h|--help] [-hh|--helpclient]\n    $SCRIPT [-o|--offline]\n\n\nArguments:\n    -h/--help        this help\n    -hh/--helpclient proxmark3 client help (the script will forward these options)\n    --list           list all detected com ports\n    -n <N>           connect device referred to the N:th number on the --list output\n    -o/--offline     shortcut to use directly the proxmark3 client without guessing ports\n\nSamples:\n    ./$SCRIPT                       -- Auto detect/ select com port in the following order BT, USB/CDC, BT DONGLE\n    ./$SCRIPT -p /dev/ttyACM0       -- connect to port /dev/ttyACM0\n    ./$SCRIPT -n 2                  -- use second item from the --list output\n    ./$SCRIPT -c 'lf search' -i     -- run command and stay in client once completed\n\n\nEOF\n  }\nelif [ \"$SCRIPT\" = \"pm3-flash\" ]; then\n  FINDBTDONGLE=false\n  FINDBTRFCOMM=false\n  FINDBTDIRECT=false\n  CMD() {\n      ARGS=(\"--port\" \"$1\" \"--flash\")\n      shift;\n      while [ \"$1\" != \"\" ]; do\n          if [ \"$1\" == \"-b\" ]; then\n              ARGS+=(\"--unlock-bootloader\")\n          elif [ \"$1\" == \"--force\" ]; then\n              ARGS+=(\"--force\")\n          else\n              ARGS+=(\"--image\" \"$1\")\n          fi\n          shift;\n      done\n      $CLIENT \"${ARGS[@]}\";\n  }\n  HELP() {\n      cat << EOF\nQuick helper script for flashing a Proxmark3 device via USB\n\nDescription:\n    The usage is similar to the old proxmark3-flasher binary, except that the correct port name will be automatically guessed.\n    You can also specify a first option -n N to access the Nth Proxmark3 connected on USB.\n    If this doesn't work, you'll have to use manually the proxmark3 client, see \"$CLIENT -h\".\n    To see a list of available ports, use --list.\n\nUsage:\n    $SCRIPT [-n <N>] [-b] image.elf [image.elf...]\n    $SCRIPT --list\n\nOptions:\n    -b         Enable flashing of bootloader area (DANGEROUS)\n\nExample:\n     $SCRIPT -b bootrom.elf fullimage.elf\nEOF\n  }\nelif [ \"$SCRIPT\" = \"pm3-flash-all\" ]; then\n  FINDBTDONGLE=false\n  FINDBTRFCOMM=false\n  FINDBTDIRECT=false\n\n\n  CMD() {\n      ARGS=(\"--port\" \"$1\" \"--flash\" \"--unlock-bootloader\" \"--image\" \"$BOOTIMAGE\" \"--image\" \"$FULLIMAGE\")\n      shift;\n      while [ \"$1\" != \"\" ]; do\n          if [ \"$1\" == \"--force\" ]; then\n              ARGS+=(\"--force\")\n          fi\n          shift;\n      done\n      $CLIENT \"${ARGS[@]}\";\n  }\n  HELP() {\n      cat << EOF\nQuick helper script for flashing a Proxmark3 device via USB\n\nDescription:\n    The correct port name will be automatically guessed and the stock bootloader and firmware image will be flashed.\n    You can also specify a first option -n N to access the Nth Proxmark3 connected on USB.\n    If this doesn't work, you'll have to use manually the proxmark3 client, see \"$CLIENT -h\".\n    To see a list of available ports, use --list.\n\nUsage:\n    $SCRIPT [-n <N>]\n    $SCRIPT --list\nEOF\n  }\nelif [ \"$SCRIPT\" = \"pm3-flash-fullimage\" ]; then\n  FINDBTDONGLE=false\n  FINDBTRFCOMM=false\n  FINDBTDIRECT=false\n  CMD() {\n      ARGS=(\"--port\" \"$1\" \"--flash\" \"--image\" \"$FULLIMAGE\")\n      shift;\n      while [ \"$1\" != \"\" ]; do\n          if [ \"$1\" == \"--force\" ]; then\n              ARGS+=(\"--force\")\n          fi\n          shift;\n      done\n      $CLIENT \"${ARGS[@]}\";\n  }\n  HELP() {\n      cat << EOF\nQuick helper script for flashing a Proxmark3 device via USB\n\nDescription:\n    The correct port name will be automatically guessed and the stock firmware image will be flashed.\n    You can also specify a first option -n N to access the Nth Proxmark3 connected on USB.\n    If this doesn't work, you'll have to use manually the proxmark3 client, see \"$CLIENT -h\".\n    To see a list of available ports, use --list.\n\nUsage:\n    $SCRIPT [-n <N>]\n    $SCRIPT --list\nEOF\n  }\nelif [ \"$SCRIPT\" = \"pm3-flash-bootrom\" ]; then\n  FINDBTDONGLE=false\n  FINDBTRFCOMM=false\n  FINDBTDIRECT=false\n  CMD() {\n      ARGS=(\"--port\" \"$1\" \"--flash\" \"--unlock-bootloader\" \"--image\" \"$BOOTIMAGE\")\n      shift;\n      while [ \"$1\" != \"\" ]; do\n          if [ \"$1\" == \"--force\" ]; then\n              ARGS+=(\"--force\")\n          fi\n          shift;\n      done\n      $CLIENT \"${ARGS[@]}\";\n  }\n  HELP() {\n      cat << EOF\nQuick helper script for flashing a Proxmark3 device via USB\n\nDescription:\n    The correct port name will be automatically guessed and the stock bootloader will be flashed.\n    You can also specify a first option -n N to access the Nth Proxmark3 connected on USB.\n    If this doesn't work, you'll have to use manually the proxmark3 client, see \"$CLIENT -h\".\n    To see a list of available ports, use --list.\n\nUsage:\n    $SCRIPT [-n <N>]\n    $SCRIPT --list\nEOF\n  }\nelse\n  echo >&2 \"[!!] Script ran under unknown name, abort: $SCRIPT\"\n  exit 1\nfi\n\n# priority to the help options\nfor ARG; do\n    if [ \"$ARG\" == \"-h\" ] || [ \"$ARG\" == \"--help\" ]; then\n        HELP\n        exit 0\n    fi\n    if [ \"$ARG\" == \"-hh\" ] || [ \"$ARG\" == \"--helpclient\" ]; then\n        CMD \"-h\"\n        exit 0\n    fi\ndone\n\n# if offline, bypass the script and forward all other args\nfor ARG; do\n    shift\n    if [ \"$ARG\" == \"-o\" ] || [ \"$ARG\" == \"--offline\" ]; then\n        CMD \"$@\"\n        exit $?\n    fi\n    set -- \"$@\" \"$ARG\"\ndone\n\n# if a port is already provided, let's just run the command as such\nfor ARG; do\n    shift\n    if [ \"$ARG\" == \"-p\" ]; then\n        CMD \"$@\"\n        exit $?\n    fi\n    set -- \"$@\" \"$ARG\"\ndone\n\nif [ \"$1\" == \"--list\" ]; then\n    shift\n    if [ \"$1\" != \"\" ]; then\n        echo >&2 \"[!!] Option --list must be used alone\"\n        exit 1\n    fi\n    SHOWLIST=true\nfi\n\n# Number of the Proxmark3 we're interested in\nN=1\nif [ \"$1\" == \"-n\" ]; then\n    shift\n    if [ \"$1\" -ge 1 ] && [ \"$1\" -lt 10 ]; then\n        N=$1\n        shift\n    else\n        echo >&2 \"[!!] Option -n requires a number between 1 and 9, got \\\"$1\\\"\"\n        exit 1\n    fi\nfi\n\nHOSTOS=$(uname | awk '{print toupper($0)}')\nif [ \"$HOSTOS\" = \"LINUX\" ]; then\n    # Detect when running under WSL1 (but exclude WSL2)\n    if uname -a | grep -qi Microsoft && uname -a | grep -qvi WSL2; then\n        # First try finding it using the PATH environment variable\n        PSHEXE=$(command -v powershell.exe 2>/dev/null)\n\n        # If it fails (such as if WSLENV is not set), try using the default installation path\n        if [ -z \"$PSHEXE\" ]; then\n            PSHEXE=/mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe\n        fi\n\n        # Finally test if PowerShell is working\n        if ! \"$PSHEXE\" exit >/dev/null 2>&1; then\n            echo >&2 \"[!!] Cannot run powershell.exe, are you sure your WSL is authorized to run Windows processes? (cf WSL interop flag)\"\n            exit 1\n        fi\n\n        GETPM3LIST=get_pm3_list_WSL\n    else\n        GETPM3LIST=get_pm3_list_Linux\n    fi\nelif [ \"$HOSTOS\" = \"DARWIN\" ]; then\n    GETPM3LIST=get_pm3_list_macOS\nelif [[ \"$HOSTOS\" =~ MINGW(32|64)_NT* ]]; then\n    GETPM3LIST=get_pm3_list_Windows\nelse\n    echo >&2 \"[!!] Host OS not recognized, abort: $HOSTOS\"\n    exit 1\nfi\n\nif $SHOWLIST; then\n    # Probe for up to 9 devs\n    $GETPM3LIST 9\n    if [ ${#PM3LIST} -lt 1 ]; then\n        echo >&2 \"[!!] No port found\"\n        exit 1\n    fi\n    n=1\n    for DEV in \"${PM3LIST[@]}\"\n        do\n            echo \"$n: $DEV\"\n            n=$((n+1))\n        done\n    exit 0\nfi\n\n# Wait till we get at least N Proxmark3 devices\n$GETPM3LIST \"$N\"\nif [ ${#PM3LIST} -lt \"$N\" ]; then\n    echo >&2 \"[=] Waiting for Proxmark3 to appear...\"\nfi\nwhile true; do\n    if [ ${#PM3LIST[*]} -ge \"$N\" ]; then\n        break\n    fi\n    sleep .1\n    $GETPM3LIST \"$N\"\ndone\n\nif [ ${#PM3LIST} -lt \"$N\" ]; then\n    HELP() {\n      cat << EOF\n[!!] No port found, abort\n\n[?] Hint: try '$SCRIPT --list' to see list of available ports,  and use the -n command like below\n[?]    $SCRIPT [-n <N>]\n\nEOF\n  }\n    HELP\n    exit 1\nfi\n\nCMD \"${PM3LIST[$((N-1))]}\" \"$@\"\nexit $?\n"
        },
        {
          "name": "pm3-flash",
          "type": "blob",
          "size": 0.060546875,
          "content": "#!/usr/bin/env bash\n\nPM3PATH=$(dirname \"$0\")\n. \"$PM3PATH/pm3\"\n"
        },
        {
          "name": "pm3-flash-all",
          "type": "blob",
          "size": 0.060546875,
          "content": "#!/usr/bin/env bash\n\nPM3PATH=$(dirname \"$0\")\n. \"$PM3PATH/pm3\"\n"
        },
        {
          "name": "pm3-flash-bootrom",
          "type": "blob",
          "size": 0.060546875,
          "content": "#!/usr/bin/env bash\n\nPM3PATH=$(dirname \"$0\")\n. \"$PM3PATH/pm3\"\n"
        },
        {
          "name": "pm3-flash-fullimage",
          "type": "blob",
          "size": 0.060546875,
          "content": "#!/usr/bin/env bash\n\nPM3PATH=$(dirname \"$0\")\n. \"$PM3PATH/pm3\"\n"
        },
        {
          "name": "recovery",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "traces",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}