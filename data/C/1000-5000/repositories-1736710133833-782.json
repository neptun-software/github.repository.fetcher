{
  "metadata": {
    "timestamp": 1736710133833,
    "page": 782,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "gen2brain/raylib-go",
      "stars": 1788,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0283203125,
          "content": "# IDE folders\n.idea\n.vsc\n.vs\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.8720703125,
          "content": "  Copyright (C) 2016 Milan Nikolic (gen2brain)\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.4404296875,
          "content": "![logo](https://goo.gl/XlIcXz)\n## raylib-go\n[![Build Status](https://github.com/gen2brain/raylib-go/actions/workflows/build.yml/badge.svg)](https://github.com/gen2brain/raylib-go/actions)\n[![GoDoc](https://godoc.org/github.com/gen2brain/raylib-go/raylib?status.svg)](https://godoc.org/github.com/gen2brain/raylib-go/raylib)\n[![Go Report Card](https://goreportcard.com/badge/github.com/gen2brain/raylib-go/raylib)](https://goreportcard.com/report/github.com/gen2brain/raylib-go/raylib)\n[![Examples](https://img.shields.io/badge/learn%20by-examples-0077b3.svg?style=flat-square)](https://github.com/gen2brain/raylib-go/tree/master/examples)\n\nGolang bindings for [raylib](http://www.raylib.com/), a simple and easy-to-use library to enjoy videogames programming.\n\nraylib C source code is included and compiled together with bindings. Note that the first build can take a few minutes.\n\nIt is also possible to use raylib-go without cgo (Windows only; see requirements below).\n\n### Requirements\n\n##### Ubuntu\n\n    apt-get install libgl1-mesa-dev libxi-dev libxcursor-dev libxrandr-dev libxinerama-dev libwayland-dev libxkbcommon-dev\n\n##### Fedora\n\n    dnf install mesa-libGL-devel libXi-devel libXcursor-devel libXrandr-devel libXinerama-devel wayland-devel libxkbcommon-devel\n\n##### macOS\n\nOn macOS, you need Xcode or Command Line Tools for Xcode (if you have `brew` installed, you already have this).\n\n##### Windows\n\n###### cgo\n\nOn Windows you need C compiler, like [Mingw-w64](https://mingw-w64.org) or [TDM-GCC](http://tdm-gcc.tdragon.net/).\nYou can also build binary in [MSYS2](https://msys2.github.io/) shell.\n\nTo remove console window, build with `-ldflags \"-H=windowsgui\"`.\n\n###### purego (without cgo, i.e. CGO_ENABLED=0)\n\nDownload the raylib.dll from the assets on the [releases page](https://github.com/raysan5/raylib/releases). It is contained in the `raylib-*_win64_msvc*.zip`.\nPut the raylib.dll into the root folder of your project or copy it into `C:\\Windows\\System32` for a system-wide installation.\n\nIt is also possible to build the DLL yourself. You can find more info at [raylib's wiki](https://github.com/raysan5/raylib/wiki/Working-on-Windows).\n\n##### Android\n\n[Android example](https://github.com/gen2brain/raylib-go/tree/master/examples/others/android/example).\n\n### Installation\n\n    go get -v -u github.com/gen2brain/raylib-go/raylib\n\n### Build tags\n\n* `drm` - build for Linux native [DRM](https://en.wikipedia.org/wiki/Direct_Rendering_Manager) mode, including Raspberry Pi 4 and other devices (PLATFORM_DRM)\n* `sdl` - build for [SDL](https://github.com/libsdl-org/SDL) backend (PLATFORM_DESKTOP_SDL)\n* `sdl3` - build for [SDL3](https://github.com/libsdl-org/SDL) backend (PLATFORM_DESKTOP_SDL3)\n* `rgfw` - build for [RGFW](https://github.com/ColleagueRiley/RGFW) backend (PLATFORM_DESKTOP_RGFW)\n* `noaudio` - disables audio functions\n* `opengl43` - uses OpenGL 4.3 backend\n* `opengl21` - uses OpenGL 2.1 backend (default is 3.3 on desktop)\n* `opengl11` - uses OpenGL 1.1 backend (pseudo OpenGL 1.1 style)\n* `es2` - uses OpenGL ES 2.0 backend (can be used to link against [Google's ANGLE](https://github.com/google/angle))\n* `es3` - experimental support for OpenGL ES 3.0\n* `x11` - force X11 compatibility mode on Wayland (PLATFORM_DESKTOP/GLFW)\n* `wayland` - force Wayland only mode (PLATFORM_DESKTOP/GLFW)\n\n### Documentation\n\nDocumentation on [GoDoc](https://godoc.org/github.com/gen2brain/raylib-go/raylib). Also check raylib [cheatsheet](http://www.raylib.com/cheatsheet/cheatsheet.html). If you have problems or need assistance there is an active community in the #raylib-go channel of the [Raylib Discord Server](https://discord.gg/raylib) that can help.\n\n### Example\n\n```go\npackage main\n\nimport rl \"github.com/gen2brain/raylib-go/raylib\"\n\nfunc main() {\n\trl.InitWindow(800, 450, \"raylib [core] example - basic window\")\n\tdefer rl.CloseWindow()\n\n\trl.SetTargetFPS(60)\n\n\tfor !rl.WindowShouldClose() {\n\t\trl.BeginDrawing()\n\n\t\trl.ClearBackground(rl.RayWhite)\n\t\trl.DrawText(\"Congrats! You created your first window!\", 190, 200, 20, rl.LightGray)\n\n\t\trl.EndDrawing()\n\t}\n}\n```\n\nCheck more [examples](https://github.com/gen2brain/raylib-go/tree/master/examples) organized by raylib modules.\n\n### Cross-compile (Linux)\n\nTo cross-compile for Windows install [MinGW](https://www.mingw-w64.org/) toolchain.\n\n```\n$ CGO_ENABLED=1 CC=x86_64-w64-mingw32-gcc GOOS=windows GOARCH=amd64 go build -ldflags \"-s -w\"\n$ file basic_window.exe\nbasic_window.exe: PE32+ executable (console) x86-64 (stripped to external PDB), for MS Windows, 11 sections\n\n$ CGO_ENABLED=1 CC=i686-w64-mingw32-gcc GOOS=windows GOARCH=386 go build -ldflags \"-s -w\"\n$ file basic_window.exe\nbasic_window.exe: PE32 executable (console) Intel 80386 (stripped to external PDB), for MS Windows, 9 sections\n```\n\nTo cross-compile for macOS install [OSXCross](https://github.com/tpoechtrager/osxcross) toolchain.\n\n```\n$ CGO_ENABLED=1 CC=x86_64-apple-darwin21.1-clang GOOS=darwin GOARCH=amd64 go build -ldflags \"-linkmode external -s -w '-extldflags=-mmacosx-version-min=10.15'\"\n$ file basic_window\nbasic_window: Mach-O 64-bit x86_64 executable, flags:<NOUNDEFS|DYLDLINK|TWOLEVEL>\n\n$ CGO_ENABLED=1 CC=aarch64-apple-darwin21.1-clang GOOS=darwin GOARCH=arm64 go build -ldflags \"-linkmode external -s -w '-extldflags=-mmacosx-version-min=12.0.0'\"\n$ file basic_window\nbasic_window: Mach-O 64-bit arm64 executable, flags:<NOUNDEFS|DYLDLINK|TWOLEVEL|PIE>\n```\n\n### License\n\nraylib-go is licensed under an unmodified zlib/libpng license. View [LICENSE](https://github.com/gen2brain/raylib-go/blob/master/LICENSE).\n"
        },
        {
          "name": "easings",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "physics",
          "type": "tree",
          "content": null
        },
        {
          "name": "raygui",
          "type": "tree",
          "content": null
        },
        {
          "name": "raylib",
          "type": "tree",
          "content": null
        },
        {
          "name": "rres",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}