{
  "metadata": {
    "timestamp": 1736709729457,
    "page": 130,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "kohler/gifsicle",
      "stars": 3839,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".appveyor.yml",
          "type": "blob",
          "size": 0.2666015625,
          "content": "os: Visual Studio 2015\n\nbuild_script:\n  - CALL \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\vcvars32.bat\"\n  - cd \"%APPVEYOR_BUILD_FOLDER%\\src\"\n  - nmake -f Makefile.w32 gifsicle.exe gifdiff.exe\n  - gifsicle.exe --version\n  - gifdiff.exe --version\n\ntest: off\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.314453125,
          "content": "*.d\n*.o\n.deps\nMakefile\nMakefile.in\naclocal.m4\nautom4te*\nconfig.cache\nconfig.h\nconfig.h.in\nconfig.h.in~\nconfig.log\nconfig.status\nconfigure\ndepcomp\ngifdiff\ngifsicle\ngifsicle-*.rpm\ngifsicle-*.tar.gz\ngifview\ninclude\ninstall-sh\nmissing\nsrc/gifdiff\nsrc/gifsicle\nsrc/gifview\nstamp-h*\nungifsicle-*.rpm\nungifsicle-*.tar.gz\ncompile\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.0224609375,
          "content": "language: c\ncompiler:\n  - gcc\n  - clang\nenv:\n  global:\n    # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created\n    #   via the \"travis encrypt\" command using the project repo's public key\n    - secure: \"NEQUeZwTTJ+1Pdy2CpNte1nJLYRY2H8+dpvnGS2HP6U/Ok6ZQm4Zxic+ufhabuymbCV7Jvwwy6Gaj8+ObIDahhzAsiMRXSymnvFHELAnq7DiikJ2HqBvFhPzPI2/vDmEP37msGW1dloipLhdKMeuYYP++BpApnC6KVRVJDXg5JI=\"\nmatrix:\n  include:\n    - compiler: gcc\n    - compiler: gcc\n      env: CCARG=-std=c89\n    - compiler: gcc\n      env: CCARG=-m32\n      addons:\n        apt:\n          packages:\n            - gcc-multilib\n            - libc6:i386\n    - compiler: clang\nscript: ./configure || cat config.log && make check\nbefore_script:\n  - export CC=\"$CC $CCARG\"\n  - ./bootstrap.sh\nsudo: false\n\naddons:\n  coverity_scan:\n    project:\n      name: \"kohler/gifsicle\"\n      description: \"Build submitted via Travis CI\"\n    notification_email: ekohler@gmail.com\n    build_command_prepend: \"./configure; make clean\"\n    build_command: \"make -j 4\"\n    branch_pattern: coverity_scan\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 17.66796875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "INSTALL",
          "type": "blob",
          "size": 7.287109375,
          "content": "Basic Installation\n==================\n\n   These are generic installation instructions.\n\n   The `configure' shell script attempts to guess correct values for\nvarious system-dependent variables used during compilation.  It uses\nthose values to create a `Makefile' in each directory of the package.\nIt may also create one or more `.h' files containing system-dependent\ndefinitions.  Finally, it creates a shell script `config.status' that\nyou can run in the future to recreate the current configuration, a file\n`config.cache' that saves the results of its tests to speed up\nreconfiguring, and a file `config.log' containing compiler output\n(useful mainly for debugging `configure').\n\n   If you need to do unusual things to compile the package, please try\nto figure out how `configure' could check whether to do them, and mail\ndiffs or instructions to the address given in the `README' so they can\nbe considered for the next release.  If at some point `config.cache'\ncontains results you don't want to keep, you may remove or edit it.\n\n   The file `configure.in' is used to create `configure' by a program\ncalled `autoconf'.  You only need `configure.in' if you want to change\nit or regenerate `configure' using a newer version of `autoconf'.\n\nThe simplest way to compile this package is:\n\n  1. `cd' to the directory containing the package's source code and type\n     `./configure' to configure the package for your system.  If you're\n     using `csh' on an old version of System V, you might need to type\n     `sh ./configure' instead to prevent `csh' from trying to execute\n     `configure' itself.\n\n     Running `configure' takes awhile.  While running, it prints some\n     messages telling which features it is checking for.\n\n  2. Type `make' to compile the package.\n\n  3. Optionally, type `make check' to run any self-tests that come with\n     the package.\n\n  4. Type `make install' to install the programs and any data files and\n     documentation.\n\n  5. You can remove the program binaries and object files from the\n     source code directory by typing `make clean'.  To also remove the\n     files that `configure' created (so you can compile the package for\n     a different kind of computer), type `make distclean'.  There is\n     also a `make maintainer-clean' target, but that is intended mainly\n     for the package's developers.  If you use it, you may have to get\n     all sorts of other programs in order to regenerate files that came\n     with the distribution.\n\nCompilers and Options\n=====================\n\n   Some systems require unusual options for compilation or linking that\nthe `configure' script does not know about.  You can give `configure'\ninitial values for variables by setting them in the environment.  Using\na Bourne-compatible shell, you can do that on the command line like\nthis:\n     CC=c89 CFLAGS=-O2 LIBS=-lposix ./configure\n\nOr on systems that have the `env' program, you can do it like this:\n     env CPPFLAGS=-I/usr/local/include LDFLAGS=-s ./configure\n\nCompiling For Multiple Architectures\n====================================\n\n   You can compile the package for more than one kind of computer at the\nsame time, by placing the object files for each architecture in their\nown directory.  To do this, you must use a version of `make' that\nsupports the `VPATH' variable, such as GNU `make'.  `cd' to the\ndirectory where you want the object files and executables to go and run\nthe `configure' script.  `configure' automatically checks for the\nsource code in the directory that `configure' is in and in `..'.\n\n   If you have to use a `make' that does not supports the `VPATH'\nvariable, you have to compile the package for one architecture at a time\nin the source code directory.  After you have installed the package for\none architecture, use `make distclean' before reconfiguring for another\narchitecture.\n\nInstallation Names\n==================\n\n   By default, `make install' will install the package's files in\n`/usr/local/bin', `/usr/local/man', etc.  You can specify an\ninstallation prefix other than `/usr/local' by giving `configure' the\noption `--prefix=PATH'.\n\n   You can specify separate installation prefixes for\narchitecture-specific files and architecture-independent files.  If you\ngive `configure' the option `--exec-prefix=PATH', the package will use\nPATH as the prefix for installing programs and libraries.\nDocumentation and other data files will still use the regular prefix.\n\n   If the package supports it, you can cause programs to be installed\nwith an extra prefix or suffix on their names by giving `configure' the\noption `--program-prefix=PREFIX' or `--program-suffix=SUFFIX'.\n\nOptional Features\n=================\n\n   Some packages pay attention to `--enable-FEATURE' options to\n`configure', where FEATURE indicates an optional part of the package.\nThey may also pay attention to `--with-PACKAGE' options, where PACKAGE\nis something like `gnu-as' or `x' (for the X Window System).  The\n`README' should mention any `--enable-' and `--with-' options that the\npackage recognizes.\n\n   For packages that use the X Window System, `configure' can usually\nfind the X include and library files automatically, but if it doesn't,\nyou can use the `configure' options `--x-includes=DIR' and\n`--x-libraries=DIR' to specify their locations.\n\nSpecifying the System Type\n==========================\n\n   There may be some features `configure' can not figure out\nautomatically, but needs to determine by the type of host the package\nwill run on.  Usually `configure' can figure that out, but if it prints\na message saying it can not guess the host type, give it the\n`--host=TYPE' option.  TYPE can either be a short name for the system\ntype, such as `sun4', or a canonical name with three fields:\n     CPU-COMPANY-SYSTEM\n\nSee the file `config.sub' for the possible values of each field.  If\n`config.sub' isn't included in this package, then this package doesn't\nneed to know the host type.\n\n   If you are building compiler tools for cross-compiling, you can also\nuse the `--target=TYPE' option to select the type of system they will\nproduce code for and the `--build=TYPE' option to select the type of\nsystem on which you are compiling the package.\n\nSharing Defaults\n================\n\n   If you want to set default values for `configure' scripts to share,\nyou can create a site shell script called `config.site' that gives\ndefault values for variables like `CC', `cache_file', and `prefix'.\n`configure' looks for `PREFIX/share/config.site' if it exists, then\n`PREFIX/etc/config.site' if it exists.  Or, you can set the\n`CONFIG_SITE' environment variable to the location of the site script.\nA warning: not all `configure' scripts look for a site script.\n\nOperation Controls\n==================\n\n   `configure' recognizes the following options to control how it\noperates.\n\n`--cache-file=FILE'\n     Use and save the results of the tests in FILE instead of\n     `./config.cache'.  Set FILE to `/dev/null' to disable caching, for\n     debugging `configure'.\n\n`--help'\n     Print a summary of the options to `configure', and exit.\n\n`--quiet'\n`--silent'\n`-q'\n     Do not print messages saying which checks are being made.\n\n`--srcdir=DIR'\n     Look for the package's source code in directory DIR.  Usually\n     `configure' can determine that directory automatically.\n\n`--version'\n     Print the version of Autoconf used to generate the `configure'\n     script, and exit.\n\n`configure' also accepts some other, not widely useful, options.\n\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 1.5,
          "content": "## Process this file with automake to produce Makefile.in\nAUTOMAKE_OPTIONS = foreign\n\nSUBDIRS = src\n\nman_MANS = gifsicle.1 @OTHERMANS@\n\nEXTRA_DIST = COPYING README.md NEWS.md \\\n\tinclude/lcdf/clp.h include/lcdf/inttypes.h \\\n\tinclude/lcdfgif/gif.h include/lcdfgif/gifx.h \\\n\tgifsicle.1 gifview.1 gifdiff.1 logo.gif logo1.gif \\\n\ttest/testie \\\n\ttest/001-transexpand.testie \\\n\ttest/002-cropresize.testie \\\n\ttest/003-bgopt.testie \\\n\ttest/004-careful.testie \\\n\ttest/005-resize.testie \\\n\ttest/006-unoptdisposal.testie \\\n\ttest/007-alltransp.testie \\\n\ttest/008-resizemix.testie \\\n\ttest/009-zerowidth.testie \\\n\ttest/010-warnings.testie \\\n\ttest/011-resizemix.testie\n\ngifsicle: config.h\n\t@cd src && $(MAKE) gifsicle\ngifdiff: config.h\n\t@cd src && $(MAKE) gifdiff\ngifview: config.h\n\t@cd src && $(MAKE) gifview\n\nsrclinks:\n\tcd $(top_srcdir); sh ./sourcecheckout.sh\n\nversionize:\n\tperl -pi -e \"s/^\\\\.ds V.*/.ds V $(VERSION)/;\" $(top_srcdir)/gifsicle.1 $(top_srcdir)/gifview.1 $(top_srcdir)/gifdiff.1\n\tperl -pi -e \"s/gifsicle [\\d.]+/gifsicle $(VERSION)/; s/VERSION \\\"[\\w.]+/VERSION \\\"$(VERSION)/;\" $(top_srcdir)/src/win32cfg.h\n\ndist-ungif: dist\n\t$(AMTAR) xzf gifsicle-$(VERSION).tar.gz\n\t@rm gifsicle-$(VERSION)/src/gifwrite.c\n\trm -rf ungifsicle-$(VERSION)\n\tmv gifsicle-$(VERSION) ungifsicle-$(VERSION)\n\tGZIP=$(GZIP_ENV) $(AMTAR) chozf ungifsicle-$(VERSION).tar.gz ungifsicle-$(VERSION)\n\trm -rf ungifsicle-$(VERSION)\n\ncheck: all\n\t$(top_srcdir)/test/testie -p $(top_builddir)/src $(top_srcdir)/test\n\n.PHONY: srclinks versionize rpm dist-ungif rpm-ungif check\n"
        },
        {
          "name": "NEWS.md",
          "type": "blob",
          "size": 35.4072265625,
          "content": "Gifsicle NEWS\n=============\n\n## Version 1.95 – 19.Feb.2024\n\n* Fix some bugs.\n\n\n## Version 1.94 – 23.Jun.2023\n\n* Fix some bugs.\n\n\n## Version 1.93 – 30.Jun.2021\n\n* Fix security bug on certain resize operations with `--resize-method=box`.\n\n* Fix problems with colormapless GIFs.\n\n\n## Version 1.92 – 18.Apr.2019\n\n* Add `--lossy` option from Kornel Lipiński.\n\n* Remove an assertion failure possible with `--conserve-memory` + `--colors` +\n  `--careful`.\n\n\n## Version 1.91 – 5.Jan.2018\n\n* Several security bug fixes with malicious GIFs.\n\n\n## Version 1.90 – 14.Aug.2017\n\n* Kill a use-after-free error reported by @junxzm1990.\n\n\n## Version 1.89 - 11.Jul.2017\n\n* Add SIMD support for resizing. When enabled this improves resize\n  performance enormously for complex resize methods.\n\n* Add thread support for resizing. `-j[NTHREADS]` tells gifsicle to use\n  up to NTHREADS threads to resize an input image. There are several\n  caveats---multiple threads can be only used on unoptimized images.\n  Thanks to Github user @wilkesybear.\n\n* Quashed several crashes and undefined behaviors. Thanks to Github users\n  including @pornel, @strazzere, and @b0b0505.\n\n* Minor bug fixes.\n\n\n## Version 1.88 - 1.Jul.2015\n\n* Fix bug where long comments were read incorrectly. Reported by\n  kazarny.\n\n* Add --no-ignore-errors option.\n\n\n## Version 1.87 - 9.Dec.2014\n\n* Always optimize as if the background is transparent. This fixes some\n  rare bugs reported by Lars Dieckow.\n\n* Fix --crop issue with must-be-preserved frames that are out of the\n  crop window.\n\n\n## Version 1.86 - 14.Oct.2014\n\n* Further fix --rotate + --crop.\n\n\n## Version 1.85 - 14.Oct.2014\n\n* Greatly improve optimization time for images with many colors.\n\n* Add --no-extensions (with the s) and document those options more.\n\n* Fix bug in interaction of --resize and --rotate reported by Michał\n  Ziemba.\n\n\n## Version 1.84 - 29.Jun.2014\n\n* Correct optimizer bug that affected GIFs with 65535 or more total\n  colors. Reported by Jernej Simončič.\n\n\n## Version 1.83 - 21.Apr.2014\n\n* Correct bug in custom gamma values reported by Kornel Lesiński.\n\n* Update Windows build.\n\n\n## Version 1.82 - 27.Mar.2014\n\n* Correct bug in `mix` sampling method reported by Bryan Stillwell.\n\n\n## Version 1.81 - 24.Mar.2014\n\n* Correct bug in `mix` sampling method reported by Bryan Stillwell.\n\n\n## Version 1.80 - 18.Mar.2014\n\n* Bug fixes and improved error messages.\n\n\n## Version 1.79 - 17.Mar.2014\n\n* Major improvements in image scaling. Work sponsored by Tumblr via\n  Mike Hurwitz.\n\n  * Add new resize sampling methods `mix`, `box`, `catrom`, `mitchell`,\n    `lanczos2`, and `lanczos3`, selectable by `--resize-method`. The\n    `catrom` filter often gives good results; the slightly faster `mix`\n    method (a bilinear interpolator) is now the default. These new\n    sampling methods consider all of the image's input colors when\n    shrinking the image, producing better, less noisy output for most\n    images.\n\n  * Add `--resize-colors`, which allows Gifsicle to enlarge the palette\n    when resizing images. This is particularly important when shrinking\n    images with small colormaps---e.g., shrinking a black-and-white\n    image should probably introduce shades of gray.\n\n* Support extensions such as XMP4 in which extension packet boundaries\n  matter. Reported by `ata4`.\n\n* Many bug fixes, especially to cropping. Thanks to Tumblr and to\n  Bryan Stillwell, Tal Lev-Ami, \"Marco,\" and others.\n\n\n## Version 1.78 - 9.Dec.2013\n\n* Correct an optimization bug introduced in 1.76. Reported by Tom\n  Roostan.\n\n\n## Version 1.77 - 26.Nov.2013\n\n* Major improvements to color selection (important when reducing\n  colormap size). Use gamma-corrected colors in selection and\n  dithering; this makes image quality much better. Also, when reducing\n  colors with dithering, prefer to select colors that dithering can't\n  approximate.\n\n* Add ordered dithering modes, which avoid animation artifacts. The\n  default ordered dithering mode (`--dither=ordered`) is a novel mode\n  that combines some of the visual advantages of error diffusion with\n  the artifact avoidance of ordered dithering.\n\n* Add halftone dithering (`--dither=halftone`).\n\n* gifview: Improved cache memory management for better animations.\n  Collect memory for old frames based on an explicit --memory-limit\n  (default 40MB).\n\n* gifview: Add `--fallback-delay` option, to specify a fallback delay\n  for frames with delay 0. Thanks to Sung Pae.\n\n\n## Version 1.76 - 20.Nov.2013\n\n* Fix `-O2` crashes introduced with `--resize` improvements. Reported\n  by Bryan Stillwell.\n\n\n## Version 1.75 - 18.Nov.2013\n\n* Improve `--careful` (fewer crashes). Reported by Bryan Stillwell.\n\n* Improve `-O2`: again, don't refuse to optimize images with local\n  color tables. Reported by Bryan Stillwell.\n\n* Greatly improve `--dither` speed.\n\n\n## Version 1.74 - 16.Nov.2013\n\n* Improve `--resize` behavior: avoid animation artifacts due to\n  different rounding decisions. Also speed it up. Reported by Bryan\n  Stillwell.\n\n\n## Version 1.73 - 15.Nov.2013\n\n* Fix bug where `-O2` would refuse to optimize some images with local\n  color tables, claiming that \"more than 256 colors were required\".\n  What was really required is previous disposal. Reported by Bryan\n  Stillwell.\n\n\n## Version 1.72 - 9.Nov.2013\n\n* Fix crash bugs on some combinations of `--crop` and `--resize`\n  (prevalent on images whose first frame didn't cover the whole\n  logical screen). Reported by Bryan Stillwell.\n\n\n## Version 1.71 - 15.Jun.2013\n\n* Avoid rounding errors in `--resize`. Reported by Paul Kane.\n\n* Report error when `-I` is combined with `-b`. Reported by Frank\n  Dana.\n\n* Frame selections also apply in batch mode. Reported by LOU Yu Hong\n  Leo.\n\n\n## Version 1.70 - 31.Jan.2013\n\n* Fix `--crop` bug introduced in version 1.68, visible in images\n  containing local color tables. Bug reported by Alberto Nannini.\n\n\n## Version 1.69 - 31.Jan.2013\n\n* Minor bug fix release.\n\n\n## Version 1.68 - 24.Nov.2012\n\n* gifsicle: Alberto Nannini reported some images that are optimized\n  beyond what Gifsicle can do. In fact, Gifsicle's GIF writer was\n  limited enough that even when running without optimization, it\n  seriously expanded the input images. Some improvements to Gifsicle's\n  writing procedure avoid this problem; now `gifsicle IMAGE` will\n  produce large results less often, and when it does generate larger\n  results, they're larger by hundreds of bytes, not hundreds of\n  thousands. However, due to restrictions in the current optimizer (and\n  on my time), I was unable to improve `gifsicle -O3`'s handling of\n  these images. The optimizer that produced the images must be doing\n  something pretty clever. (Is it SuperGIF?)\n\n\n## Version 1.67 - 5.May.2012\n\n* gifsicle: Frame specifications like \"#2-0\" are allowed; they insert\n  frames in reverse order. Feature request from Leon Arnott.\n\n* gifview: Add --min-delay option.\n\n\n## Version 1.66 - 2.Apr.2012\n\n* gifsicle: Add -Okeep-empty for Gerald Johanson.\n\n\n## Version 1.65 - 2.Apr.2012\n\n* gifsicle: Several users (Kornel Lesiński and others) reported \"bugs\" with\n  Gifsicle-optimized images and Mac programs like Safari. The bug is in\n  Safari, but add --careful to work around it.\n\n* Improve -O3 a bit (although for some images, the new -O3 is bigger than\n  the old).\n\n\n## Version 1.64 - 22.Nov.2011\n\n* gifsicle: Add --resize-fit options.  Tom Glenne request.\n\n\n## Version 1.63 - 17.Jul.2011\n\n* gifsicle: Avoid crash on frame selections where frames are repeated.\n  Werner Lemberg report.\n\n\n## Version 1.62 - 4.Apr.2011\n\n* gifsicle: -O3 optimization level tries even harder, so that now gifsicle\n  -O3 should never produce larger results than gifsicle-1.60 -O2.  Jernej\n  Simončič report.\n\n\n## Version 1.61 - 25.Feb.2011\n\n* gifsicle: Add new -O3 optimization level, which applies several\n  transparency heuristics and picks the one with the best result.  David\n  Jamroga pointed out a file that gifsicle made larger; -O3 shrinks it.\n\n* gifsicle: Correct some optimizer bugs introduced in 1.59 that could lead\n  to visually different output.\n\n* gifdiff: Add -w/--ignore-redundancy option.\n\n* gifview: Correct crash bug.\n\n* gifsicle/gifdiff: Correct occasionally odd error messages.\n\n\n## Version 1.60 - 12.Apr.2010\n\n* GIF reading library: Correct error that could corrupt the reading of\n  certain large images.  Reported by Jernej Simončič.\n\n\n## Version 1.59 - 11.Mar.2010\n\n* gifsicle -O2: Optimize away entirely-transparent frames when possible.\n  Requested by Gerald Johanson.\n\n\n## Version 1.58 - 14.Jan.2010\n\n* gifsicle: Fix optimizer bug reported by Dion Mendel.\n\n\n## Version 1.57 - 11.Nov.2009\n\n* gifsicle: Don't throw away totally-cropped frames with 0 delay, since\n  most browsers treat 0-delay frames as 100ms-delay frames.  Reported by\n  Calle Kabo.\n\n\n## Version 1.56 - 18.Oct.2009\n\n* gifsicle: Fix --crop-transparency for animated images; previous versions\n  could lose frames.  Problem reported by Daniel v. Dombrowski.\n\n* gifview: Make --disposal=background behavior look like Firefox.\n\n\n## Version 1.55 - 3.Apr.2009\n\n* gifsicle: Another optimize fix for --disposal previous.  Reported by\n  Gerald Johanson.\n\n\n## Version 1.54 - 3.Apr.2009\n\n* gifsicle, gifview: Fix several serious bugs with --disposal previous that\n  could affect optimized, unoptimized, and displayed images.  Reported by\n  Gerald Johanson.\n\n\n## Version 1.53 - 19.Mar.2009\n\n* gifsicle: Frames in an unoptimized image will use disposal \"none\" when\n  possible.  This leads to fewer surprises later.\n\n\n## Version 1.52 - 18.May.2008\n\n* gifsicle: Fix bug introduced in 1.51: --crop-transparent works.  Reported by\n  dgdd wanadoo fr.\n\n\n## Version 1.51 - 12.May.2008\n\n* gifsicle: `--crop` preserves the logical screen when it can.  Reported by\n  Petio Tonev.\n\n\n## Version 1.50 - 7.May.2008\n\n* gifsicle, gifview: Refuse to read GIFs from the terminal.  Requested by\n  Robert Riebisch.\n\n\n## Version 1.49 - 2.May.2008\n\n* Just some Makefile updates requested by Robert Riebisch.\n\n\n## Version 1.48 - 16.Mar.2007\n\n* gifsicle: Avoid crash in `--crop-transparency` when an image's first\n  frame is totally transparent.  Reported by Gerald Johanson.\n\n\n## Version 1.47 - 10.Mar.2007\n\n* gifsicle: Improve `--nextfile` behavior.\n\n\n## Version 1.46 - 9.Jan.2007\n\n* gifsicle: Add `--nextfile` option, useful for scripts.  Problem reported\n  by Jason Young.\n\n\n## Version 1.45 - 30.Dec.2006\n\n* Do not compile gifview by default when X is not available.\n\n* gifview: Add `--title` option, based on patch supplied by Andres Tello\n  Abrego.\n\n\n## Version 1.44 - 3.Oct.2005\n\n* gifview: Enforce a minimum delay of 0.002 sec.  Requested by Dale Wiles.\n\n\n## Version 1.43 - 8.Sep.2005\n\n* '-I -b', and other similar combinations, causes a fatal error rather than\n  putting information in an unexpected file.  Reported by Michiel de Bondt.\n\n\n## Version 1.42 - 8.Jan.2005\n\n* Improve manual page.\n\n\n## Version 1.41 - 19.Aug.2004\n\n* Fix problems with 64-bit machines.  Thanks to Dan Stahlke for pointing\n  out the problem and providing a patch.\n\n\n## Version 1.40 - 28.Aug.2003\n\n* Fix longstanding bug where `--disposal=previous` was mistakenly\n  equivalent to `--disposal=asis`.\n\n* Include Makefile.bcc, from Stephen Schnipsel.\n\n\n## Version 1.39 - 11.Jul.2003\n\n* Fix Makefile.w32 (oops).\n\n\n## Version 1.38 - 26.Jun.2003\n\n* Include Makefile.w32 (oops).\n\n\n## Version 1.37 - 11.Feb.2003\n\n* Fix bug where combining `--rotate-X` and `-O` options would cause a\n  segmentation fault. Reported by Dan Lasley <Dan_Lasley@hilton.com>.\n\n* Rearrange source tree.\n\n\n## Version 1.36 - 17.Nov.2002\n\n* Fix subscript-out-of-range error in main.c reported by Andrea Suatoni.\n\n\n## Version 1.35 - 14.Aug.2002\n\n* Fixed bug where `--crop` could cause a segmentation fault, present since\n  1.32 or 1.33. Reported by Tom Schumm <phong@phong.org>.\n\n\n## Version 1.34 - 13.Aug.2002\n\n* Fixed bug where combining `--crop` and `-O` options could corrupt output.\n  Reported by Tom Schumm <phong@phong.org>.\n\n\n## Version 1.33 - 1.Aug.2002\n\n* Be more careful about time while animating. In particular, prepare frames\n  before they are needed, so that they can be displayed exactly when\n  required. Problem reported by Walter Harms <WHarms@bfs.de>.\n\n* More warning fixes.\n\n\n## Version 1.32 - 5.Jul.2002\n\n* Add `--multifile` option handling concatenated GIF files. This is useful\n  for scripts. For example, `gifsicle --multifile -` will merge all GIF\n  files written to its standard input into a single animation.\n\n* More fixes for spurious background warnings.\n\n\n## Version 1.31 - 17.Jun.2002\n\n* Changed behavior of `--crop X,Y+WIDTHxHEIGHT` option when WIDTH or HEIGHT\n  is negative. Previously, zero or negative WIDTH and HEIGHT referred to\n  the image's entire width or height. Thus, the option `--crop 10,0+0x0`\n  would always lead to an error, because the crop left position (10) plus\n  the crop width (the image width) was 10 pixels beyond the image edge. The\n  new behavior measures zero or negative WIDTH and HEIGHT relative to the\n  image's bottom-right corner.\n\n* Changed background behavior. Hopefully the only user-visible effect will\n  be fewer spurious warnings.\n\n* Fixed a bug that could corrupt output when optimizing images with `-O2`\n  that had more than 256 colors.\n\n\n## Version 1.30 - 27.Jul.2001\n\n* Fixed bug in ungif code: Writing a large ungif could corrupt memory,\n  leading eventually to bad output. This bug has been present since\n  Gifsicle could write ungifs! Bad files and assistance provided by Jeff\n  Brown <jabrown@ipn.caida.org>.\n\n\n## Version 1.29 - 22.May.2001\n\n* Fixed an optimization bug that could produce bad images. Again, reported\n  by Dale Wiles <dwiles@buffalo.veridian.com>. It turns out that 1.26 was a\n  bad release! I've reconstructed and run some regression tests; hopefully\n  Dale and I have exhausted the bug stream.\n\n\n## Version 1.28 - 13.May.2001\n\n* `--colors` option still didn't work; it produced bad images. Again,\n  thanks to Dale Wiles <dwiles@buffalo.veridian.com> for reporting the bug.\n\n* Added explicit `--conserve-memory` option.\n\n\n## Version 1.27 - 10.May.2001\n\n* Fixed `--colors` option, which caused segmentation faults. Thanks to Dale\n  Wiles <dwiles@buffalo.veridian.com> for reporting the bug.\n\n\n## Version 1.26 - 22.Apr.2001\n\n* Added `--crop-transparency` option, which crops any transparent edges off\n  the image. Requested by Gre7g Luterman <gre7glut@earthlink.com>.\n\n* Try to conserve memory in gifsicle when working with huge images (> 20\n  megabytes of uncompressed data). May make gifsicle slower if you actually\n  had enough memory to deal with the uncompressed data.\n\n\n## Version 1.25 - 13.Feb.2001\n\n* Fixed gifview bug: If every frame in an animation had a small or\n  zero delay, then gifview would previously enter a infinite loop and\n  become noninteractive. Reported by Franc,ois Petitjean\n  <francois.petitjean@bureauveritas.com>.\n\n\n## Version 1.24 - 11.Feb.2001\n\n* Delete `unoptimized_pixmaps` array when deleting a viewer in gifview.\n  Reported by Franc,ois Petitjean <francois.petitjean@bureauveritas.com>.\n\n* Added `--resize-width` and `--resize-height` options.\n\n* Why is it that Frenchmen are always telling me to delete the Clp_Parser\n  immediately before calling exit()? Don't they realize that exit() frees\n  application memory just as well as free()? Are things different in\n  France? More French, perhaps?\n\n\n## Version 1.23 - 12.Dec.2000\n\n* In Houston on a layover because of stupid Continental Airlines: allow\n  GIFs without terminators. Problem reported by Matt Olech\n  <Matt.Olech@airliance.com>.\n\n\n## Version 1.22 - 23.Nov.2000\n\n* Handle time more carefully when displaying animations. Should result in\n  more precise timings. Problem reported by Iris Baye <ibaye@gwdg.de>.\n\n\n## Version 1.21 - 9.Sep.2000\n\n* Fixed `--careful -O2`, which could create bad GIFs when there were bad\n  interactions with transparency. Bug reported by Manfred Schwarb\n  <schwarb@geo.umnw.ethz.ch>.\n\n\n## Version 1.20 - 23.Jun.2000\n\n* Added `--careful` option, because some bad GIF implementations (Java,\n  Internet Explorer) don't support Gifsicle's super-optimized, but legal,\n  GIFs. Problem reported by Andrea Beiser <abb9@columbia.edu>.\n\n* Gifdiff will work on very large images (better memory usage).\n\n\n## Version 1.19 - 25.Apr.2000\n\n* Fixed memory corruption bug: `gifsicle --use-colormap=FILE.gif` would\n  formerly cause a segmentation fault. Bug reported by Alan Watts\n  <alan@16color.com>.\n\n\n## Version 1.18 - 3.Apr.2000\n\n* Gifview now uses X server memory more parsimoniously. This should make it\n  more robust, and nicer to the X server, on large animations. Requested by\n  Vladimir Eltsov <ve@boojum.hut.fi>. Appears to solve bug reported by\n  Vince McIntyre <vjm@Physics.usyd.edu.au>.\n\n* Gifview treats frame selection more sensibly. A frame selection just\n  tells it which frame to start on.\n\n* Added a message to the manual page warning people to quote the `#`\n  character in frame selections. The interactive bash shell, for example,\n  interprets it as a comment.\n\n\n## Version 1.17 - 15.Mar.2000\n\n* Added `--resize _xH` and `--resize Wx_`. Requested by Edwin Piekart\n  <edwin@ckz.com.pl>.\n\n* Changed behavior of `--no-logical-screen`. Now gifsicle will include all\n  visible GIFs when calculating the size of the logical screen.\n\n* Got rid of spurious redundant-option warnings.\n\n\n## Version 1.16.1 - 10.Sep.1999\n\n* Gifview can put a GIF (or an animated GIF) on the root window; use\n  `gifview -w root`. Requested by Roland Blais <roland@greatbasin.com>.\n\n\n## Version 1.16 - 31.Aug.1999\n\n* Optimization improvement: More colormap manipulation. Version 1.16\n  produces smaller GIFs than 1.15 in the large majority of cases (but not\n  all).\n\n* Fixed memory corruption bug in quantization. Found and fixed by Steven\n  Marthouse <comments@vrml3d.com>.\n\n\n## Version 1.15 - 20.Aug.1999\n\n* Bug fix: no more assertion failures when combining images that require\n  local colormaps.\n\n* Fixed serious quantization bug introduced in 1.14: when reducing the\n  number of colors, gifsicle would ignore a random portion of the colors in\n  the old colormap.\n\n* Optimization bug fix: two adjacent identical frames will no longer crash\n  the optimizer. Bug introduced in 1.14. That's two for two: two \"speed\n  improvements\" in 1.14, two bugs introduced!\n\n* Bug fix: Exploding the standard input results in files named\n  `#stdin#.NNN`, as the documentation claims, not `<stdin>.NNN`.\n\n* Optimization improvement: the optimizer reorders colormaps in a slightly\n  smarter way, which can result in smaller compression.\n\n* If a position option like `-p 0,5` is followed by a multi-frame GIF\n  (without frame specifications), then the position option places the\n  animation as a whole, not each of its individual frames.\n\n* An unrecognized nonnumeric frame specification is now treated as a file\n  name, so you can say `gifsicle #stdin#.000`, for example.\n\n* Gifview improvements: Now even images with local color tables can be\n  \"unoptimized\" or animated.\n\n* `--replace` now preserves the replaced frame's disposal as well as its\n  delay.\n\n* `gifsicle -I -` reports \"<stdin>\" as the input file name.\n\n\n## Version 1.14.2 - 16.Aug.1999\n\n* Fixed memory bug in Gif_DeleteImage (I freed a block of memory, then\n  accessed it). I am a moron!! This bug affected Version 1.14.1 only.\n\n\n## Version 1.14.1 - 9.Aug.1999\n\n* Fixed configuration bug: you couldn't compile gifsicle from a different\n  directory (it told you to try --enable-ungif).\n\n* Steven Marthouse <comments@vrml3d.com> helped fix `Makefile.w32` to\n  enable wildcards in filenames under Windows. Requested by Mark Olesen\n  <mark_olesen@hotmail.com>.\n\n\n## Version 1.14 - 2.Aug.1999\n\n* Switched to an adaptive tree strategy for LZW GIF compression, which is\n  faster than the old hashing strategy. This method is the brainchild of\n  Hans Dinsen-Hansen <dino@danbbs.dk>.\n\n* Bug fix/optimization improvement: Some images would include a transparent\n  index that was not a valid color (it was larger than the colormap).\n  Gifsicle formerly ignored these transparent indices. It doesn't any\n  longer; furthermore, it will generate those kinds of transparent index,\n  which can mean smaller colormaps and smaller GIFs.\n\n* Speed improvements in optimization and colormap quantization.\n\n* Added `--no-warnings` (`-w`) option to inhibit warning messages.\n  Suggested by Andrea Beiser <abb9@columbia.edu>.\n\n* `--info` output can now be sent to a file with `-o`, just as with any\n  other kind of output.\n\n* More specific error messages on invalid GIFs.\n\n\n## Version 1.13 - 16.Jun.1999\n\n* Added optional support for run-length-encoded GIFs to avoid patent\n  problems. Run-length encoding idea based on code by Hutchinson Avenue\n  Software Corporation <http://www.hasc.com> found in Thomas Boutell's gd\n  library <http://www.boutell.com>.\n\n* `gifsicle --explode` now generates filenames of the form `file.000 ..\n  file.100` rather than `file.0 .. file.100`, so you can use shell globbing\n  like `file.*` and automatically get the right order.\n\n* Added `--background` option to gifview, so you can set the color used for\n  transparent pixels. Suggested by Art Blair <apblair@students.wisc.edu>.\n\n* Gifdiff is built by default on Unix.\n\n\n## Version 1.12 - 25.Mar.1999\n\n* Added `--window` option to gifview, which lets it display a GIF in an\n  arbitrary X window. Thanks to Larry Smith <lcs@zk3.dec.com> for patches.\n\n* Added `--install-colormap` to gifview. Suggested by Yair Lenga\n  <yair.lenga@ssmb.com>.\n\n* Gifsicle now exits with status 1 if there were any errors, status 0\n  otherwise. Before, it exited with status 1 only if there was a fatal error,\n  or nothing was successfully output. The new behavior seems more useful.\n  Problem reported by David Kelly <dkelly@nebula.tbe.com>.\n\n\n## Version 1.11.2 - 10.Mar.1999\n\n* `gifsicle -U` will now unoptimize 1-image GIFs as well as animations.\n\n\n## Version 1.11.1 - 24.Jan.1999\n\n* Fixed core dump on corrupted GIF files (in particular, bad extensions).\n  Problem reported by tenthumbs <tenthumbs@cybernex.net>.\n\n\n## Version 1.11 - 22.Jan.1999\n\n* Added `--scale XFACTORxYFACTOR` to complement `--resize`.\n\n* Made `--resize` work better on animations (no more off-by-one errors).\n\n* Fixed bug in `--use-colormap`: If transparency was added to the new\n  colormap, the transparent color index could later be used (incorrectly)\n  as a real image color. This was particularly common if the image was\n  dithered.\n\n* `--dither` now tries to mitigate \"jumping dither\" animation artifacts\n  (where adjacent frames in an animation have different dithering patterns,\n  so the animation shifts). It does an OK job.\n\n* Improvements to `--color-method=blend-diversity`.\n\n\n## Version 1.10 - 6.Jan.1999\n\n* Gifview is built by default.\n\n* No other changes from 1.10b1: Emil said it worked on Windows.\n\n\n## Version 1.10b1 - 31.Dec.1998\n\n* The two malloc packages that come with Gifsicle don't #define `malloc` or\n  `realloc`; they #define `xmalloc` and `xrealloc`.\n\n* Changes to Windows port from Emil Mikulic <darkmoon@connexus.net.au>.\n\n\n## Version 1.9.2 - 28.Dec.1998\n\n* Gifsicle compiles out of the box on Windows! Port maintained by Emil\n  Mikulic <darkmoon@connexus.net.au>.\n\n* Moved to config.h-based configuration to simplify GIF library and Windows\n  port.\n\n* Some CLP improvements.\n\n\n## Version 1.9.1 - 16.Dec.1998\n\n* If a reduced-colormap image needs a special transparent color, gifsicle\n  will now try to keep the same transparent color value as the input GIF.\n\n* Cropping an image now automatically recalculates the output logical\n  screen, rather than retaining the logical screen of the uncropped image.\n\n* Improvement to colormap modification behavior: If it looks like a color\n  reserved for transparency will be necessary, gifsicle will reserve a slot\n  for it. This will reduce the likelihood that you ask for a colormap of\n  size 64, say, and get one of size 128 (because gifsicle added a slot for\n  transparency).\n\n\n## Version 1.9 - 14.Dec.1998\n\n* `--no-background` is now the same as `--background=0` (set the background\n  to pixel 0) instead of `--same-background`.\n\n\n## Version 1.9b3 - 10.Dec.1998\n\n* Fixed a serious bug in merge.c introduced in 1.8: Merging several images\n  with global colormaps could corrupt the output colors.\n\n* Fixed a serious bug in optimize.c introduced in 1.9b1: Optimizing GIFs\n  which required local color tables could crash the program due to a buffer\n  overrun. (I was adding the background to the output colormap without\n  making sure there was room for it.)\n\n* Fixed an optimizer bug which could result in incorrect animations:\n  background disposal was not handled correctly.\n\n* The optimizer now generates `--disposal=none` instead of\n  `--disposal=asis` in certain situations, which can result in smaller\n  animations. Suggestion by Markus F.X.J. Oberhumer\n  <k3040e4@c210.edvz.uni-linz.ac.at>.\n\n* GIF library changes: cleaner, somewhat faster GIF reading code inspired\n  by Patrick J. Naughton <naughton@wind.sun.com>, whose code is distributed\n  with XV.\n\n\n## Version 1.9b2 - 9.Dec.1998\n\n* Fixed `--logical-screen` and `--no-logical-screen`, which had no effect\n  in 1.9b1. In a stunning turn of events, this problem was reported by\n  Markus F.X.J. Oberhumer <k3040e4@c210.edvz.uni-linz.ac.at>.\n\n\n## Version 1.9b1 - 5.Dec.1998\n\n* Added `--resize WxH` option, prompted by code from Christian Kumpf\n  <kumpf@igd.fhg.de>.\n\n* Made `--change-color PIXELINDEX color` work, and `--change-color color\n  PIXELINDEX' illegal.\n\n* Many behavior fixes relating to background and transparency. Gifsicle\n  would tend to create GIFs which looked as expected, but lost information\n  internally; for example, a color value which was only used for\n  transparency would be changed to black, no matter what the input color\n  was. In some cases, gifsicle simply reports a warning now where it\n  ignored information before. Problems reported by Markus F.X.J. Oberhumer\n  <k3040e4@c210.edvz.uni-linz.ac.at>.\n\n* Better error messages are now given on redundant, ambiguous, or useless\n  command-line options.\n\n* Options that affect GIFs on output (such as `--output`, `--optimize`) now\n  behave more like other options: you should put them before the files they\n  affect. (You may still put them at the end of the argument list if they\n  should affect the last output file.) This should only affect people who\n  used batch or explode mode in complex ways.\n\n* Gifsicle will not write a GIF to stdout if it's connected to a terminal.\n\n\n## Version 1.8 - 3.Dec.1998\n\n* Fixed strange behavior when changing transparency: a new black entry was\n  added to the colormap in almost all situations. Problem reported by\n  Markus F.X.J. Oberhumer <k3040e4@c210.edvz.uni-linz.ac.at>.\n\n* Fixed `--transform-colormap` bug: commands like \"thing 2\" (ending in an\n  integer) will work now.\n\n* Small fixes (in a gifsicle pipeline, error messages won't be interleaved).\n\n\n## Version 1.7.1 - 2.Dec.1998\n\n* Added configuration check for `strerror`. Problem reported by Mario\n  Gallotta <Mario_Gallotta@optilink.dsccc.com>.\n\n* Added colormap canonicalization: If you pipe a GIF through `gifsicle -O`\n  or `-O2`, the output colormaps will be arranged in a predictable order.\n  Feature suggested by Markus F.X.J. Oberhumer\n  <k3040e4@c210.edvz.uni-linz.ac.at>.\n\n\n## Version 1.7 - 28.Nov.1998\n\n* Added `--use-colormap=gray` and `--use-colormap=bw`. Idea and some code\n  thanks to Christian Kumpf <kumpf@igd.fhg.de>.\n\n* Added `--transform-colormap`, which allows you to plug programs into\n  gifsicle that arbitrarily change GIF files' colormaps.\n\n* All `--change-color` options now happen simultaneously, so you can safely\n  swap two colors with `--change-color C1 C2 --change-color C2 C1`.\n\n* Colormap modifications are slightly more powerful (they don't reserve a\n  color for transparency if they don't need one, and if a subset of the\n  modified colormap is used, only that subset is output).\n\n* Fixed `--use-colormap` bug: the last color in a used colormap would be\n  ignored (it was reserved for transparency). Symptom: if you put a\n  partially transparent image into the Web-safe palette, the result would\n  never contain white.\n\n* When changing to a grayscale colormap, gifsicle now uses luminance\n  difference to find the closest color. This gives better results for\n  `--use-colormap=gray` and the like.\n\n* Added Introduction and Concept Index sections to the gifsicle manpage.\n\n* The gifsicle package now uses automake.\n\n\n## Version 1.6 - 23.Nov.1998\n\n* A frame extracted from the middle of an animation will now have the\n  animation's screen size rather than 640x480. Problem reported by Mr.\n  Moose <mrmoose@execpc.com>.\n\n\n## Version 1.5 - 27.Sep.1998\n\n* `--help` now prints on stdout, as according to the GNU standards.\n\n* Changes to support Win32 port thanks to Emil Mikulic\n  <darkmoon@connexus.net.au>.\n\n* Makefiles: Added `make uninstall` target, enabled `./configure`'s\n  program name transformations, made VPATH builds possible.\n\n\n## Version 1.4.1 - 16.Sep.1998\n\n* Fixed `--unoptimize` bug: a frame's transparency could disappear under rare\n  circumstances. Bug reported by Rodney Brown <rodneybrown@pmsc.com>\n\n\n## Version 1.4 - 12.Sep.1998\n\n* Added `--extension` and `--app-extension`.\n\n\n## Version 1.3.4 - 7.Sep.1998\n\n* More configuration changes.\n\n* Fixed bug in gifview `--geometry` option processing: `--geometry -0-0`\n  wasn't recognized.\n\n\n## Version 1.3.2 - 5.Sep.1998\n\n* Fixed configuration bugs reported by Alexander Mai\n  <st002279@hrzpub.tu-darmstadt.de> (OS/2 build didn't work).\n\n\n## Version 1.3.1 - 4.Sep.1998\n\n* Fixed configuration bug: int32_t could be improperly redefined. Reported by\n  Anne \"Idiot\" Dudfield <anne@lvld.hp.com> and Dax Kelson\n  <dkelson@inconnect.com>.\n\n\n## Version 1.3 - 3.Sep.1998\n\n* Added `--flip-*` and `--rotate-*` options.\n\n* Fixed rare bug in GIF writing code: the last pixel in a frame could\n  previously become corrupted.\n\n\n## Version 1.3b1 - 2.Aug.1998\n\n* Optimization has been completely overhauled. All optimization functions\n  are in a separate file, optimize.c. Some bugs have been caught.\n  Optimization is now quite powerful, and rarely expands any input file.\n  (An expansion of 1-30 bytes usually means that the input file cheated by\n  leaving off 'end-of-image' codes, which the standard says must be used.)\n  People interested in making optimization even better should contact me,\n  or just go ahead and hack the code. Thanks again to David Hedbor\n  <david@hedbor.org> for providing test cases.\n\n  Specific changes:\n\n  - The optimizer can handle any input file, even one with local colormaps or\n    more than 256 colors. If there are more than 256 colors, an optimal subset\n    is placed in the global colormap.\n\n  - The global colormap is reordered so that some images can use a small\n    initial portion of it, which lets them compress smaller.\n\n  - Bug fix: Images relying on background disposal are optimized correctly.\n\n  - `-O2` never does worse than `-O1`.\n\n  - Made the `-O2` heuristic better. Some other small changes and\n    improvements here and there.\n\n  - The optimizer has been pretty extensively tested using gifdiff.\n\n* New program: gifdiff compares two GIFs for identical appearance. It is\n  not built unless you give the `--enable-gifdiff` option to `./configure`.\n  It's probably not useful unless you're testing a GIF optimizer.\n\n* Robustness fixes in GIF library.\n\n\n## Version 1.2.1 - 8.Jun.1998\n\n* `--info` now sends information to standard output. `--info --info` still\n  sends information to standard error.\n\n* `--transparent` didn't work. It does now.\n\n* Added `--background` option. Fixed background processing so that an input\n  background is reflected in the output GIF.\n\n* Re-fixed small bug with the interaction between per-frame options and\n  frame selections.\n\n\n## Version 1.2 - 28.May.1998\n\n* Fixed small bug with the interaction between per-frame options (`--name`,\n  `--comment`) and frame selections.\n\n* Fixed bad bug in merge: If a global colormap from the source needed to be\n  dumped into a local colormap in the destination, the pixel map was wrong,\n  resulting in bad colors in the destination.\n\n* Fixed memory leaks. Changed memory usage pattern in gifsicle to\n  release source image memory as soon as possible, resulting in a better\n  memory profile. Both programs now keep images in compressed form for\n  better performance.\n\n* Fixed bugs in gifread.c that corrupted memory when uncompressing some bad\n  images.\n\n* Added debugging malloc library (`./configure --enable-dmalloc` to use it).\n\n* Added `--no-delay` and `--no-disposal` options, which should have been there\n  all along.\n\n* `--crop` will not generate an image with 0 width or height, even if a\n  frame is cropped out of existence.\n\n* Other performance improvements.\n\n\n## Version 1.2b6 - 25.May.1998\n\n* License clarification in README.\n\n* GIF comments are now printed out more carefully in `--info`: binary\n  characters appear as backslash escapes. (Literal backslashes are printed\n  as `\\\\`.)\n\n* New `--extension-info/--xinfo` option.\n\n* Removed spurious warning about local colormaps when a `--colors` option\n  is in effect.\n\n* Replacing a named frame with another image now keeps the name by default.\n\n* Many changes to gifview. Added `--animate`, `--display`, `--geometry`,\n  `--name`, `--help` options, keystrokes, multiple GIFs on the command\n  line, and a manual page.\n\n\n## Version 1.2b5 - 12.May.1998\n\n* Longstanding bug fix in gifunopt.c: an interlaced replacement frame\n  caused strange behavior when later optimizing, as the underlying data\n  wasn't deinterlaced.\n\n* Further improvements in optimizer; specifically, `-O2` works better now\n  -- it uses actual image data to look for an unused pixel value when\n  there's no transparency specified.\n\n\n## Version 1.2b4 - 12.May.1998\n\n* Improved `--optimize`'s performance on images where successive frames had\n  different transparent color indexes.\n\n\n## Version 1.2b3 - 11.May.1998\n\n* Fixed bugs in `--unoptimize`: it would try to unoptimize images with\n  local color tables and some transparency manipulations could cause a\n  silent failure (example: 2 colors; frame 0 = [*11], frame 1 = [*0*],\n  where * is a transparent pixel. Unoptimized, frame 1 should contain [*01]\n  -- but this can't be expressed with only 2 colors.)\n\n* Greatly improved `--optimize`'s performance on some images by changing the\n  way frames were switched to `--disposal=background`. Problem noticed by\n  David Hedbor <david@hedbor.org>\n\n* Documentation improvements.\n\n* Unrecognized extensions are now passed through without change. The\n  `--no-extensions` option (currently undocumented) removes all\n  unrecognized extensions.\n\n* Bug fix in gifview: frame selections now prevent display of entire GIF.\n\n\n## Version 1.2b2 - 9.May.1998\n\n* Fixed bad dumb bug in gif.h: lack of parens around macro argument\n\n* Changed heuristic for diversity algorithm: never blend if there are 3 colors\n  or less\n\n* Some optimizations to Floyd-Steinberg code\n\n\n## Version 1.2b1 - 8.May.1998\n\n* Added colormap options: `--colors`, `--color-method`, `--dither`, and\n  `--use-colormap`. All this code is in quantize.c.\n\n* Renamed `--color-change` to `--change-color`.\n\n\n## Version 1.1.2\n\n* Added `--color-change` option.\n\n* Added negative frame numbers. `#-N` no longer means `#0-N`; it means the\n  `N`th frame from the end (where `#-1` is the last frame). You can use\n  negative frame numbers in ranges as well (e.g., `#-5--1`).\n\n\n## Version 1.1.1 - 22.Nov.1997\n\n* Fixed bug in CLP which segmentation-faulted on `-` arguments.\n\n\n## Version 1.1 - 20.Nov.1997\n\n* Added `--crop` option.\n\n* Changed usage behavior on bad command lines.\n\n\n## Version 1.0 - 21.Jun.1997\n\n* Added `--output/-o` option to specify output filename.\n\n* Slight behavior change: Now, if you replace a frame (say frame #2), its\n  delay value will be preserved in the replacement frame, unless you give\n  an explicit delay. (Before, the replacement frame's delay would be used,\n  which was probably 0.)\n\n\n## Version 0.91 - 15.Jun.1997\n\n* Bug fix: `--optimize` didn't handle the bottom row of an image's changed\n  area correctly. This could lead to incorrect animations. Specific change:\n  merge.c line 744: was y < fbt, now y <= fbt.\n\n* Added `-S` as synonym for `--logical-screen`.\n\n\n## Version 0.9 - 12.Jun.1997\n\n* First public release.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.4873046875,
          "content": "![gifsicle-logo](https://raw.githubusercontent.com/kohler/gifsicle/master/logo.gif)\n\nGifsicle\n========\n[![TravisCI status](https://travis-ci.com/kohler/gifsicle.svg?branch=master)](https://travis-ci.com/kohler/gifsicle)\n\nGifsicle manipulates GIF image files. Depending on command line\noptions, it can merge several GIFs into a GIF animation; explode an\nanimation into its component frames; change individual frames in an\nanimation; turn interlacing on and off; add transparency; add delays,\ndisposals, and looping to animations; add and remove comments; flip\nand rotate; optimize animations for space; change images' colormaps;\nand other things.\n\nGifview, a companion program, displays GIF images and animations on an\nX display. It can display multi-frame GIFs either as slideshows,\ndisplaying one frame at a time, or as real-time animations.\n\nGifdiff, another companion program, checks two GIF files for identical\nvisual appearance. This is probably most useful for testing\nGIF-manipulating software.\n\nEach of these programs has a manpage, `PROGRAMNAME.1`.\n\nThe Gifsicle package comes with NO WARRANTY, express or implied,\nincluding, but not limited to, the implied warranties of\nmerchantability and fitness for a particular purpose.\n\nSee `NEWS.md` in this directory for changes in recent versions. The Gifsicle\nhome page is:\n\nhttp://www.lcdf.org/gifsicle/\n\n\nBuilding Gifsicle on UNIX\n-------------------------\n\nType `./configure`, then `make`.\n\nIf `./configure` does not exist (you downloaded from Github), run\n`autoreconf -i` first.\n\n`./configure` accepts the usual options; see `INSTALL` for details.\nTo build without gifview (for example, if you don't have X11), use\n`./configure --disable-gifview`. To build without gifdiff,\nuse `./configure --disable-gifdiff`.\n\n`make install` will build and install Gifsicle and its manual page\n(under /usr/local by default).\n\n\nBuilding Gifsicle on Windows\n----------------------------\n\nTo build Gifsicle on Windows using Visual C, change into the `src`\ndirectory and run\n\n    nmake -f Makefile.w32\n\nGifview will not be built. The makefile is from Emil Mikulic\n<darkmoon@connexus.net.au> with updates by Steven Marthouse\n<comments@vrml3d.com>.\n\nTo build Gifsicle on Windows using Borland C++, change into the `src`\ndirectory and run\n\n    nmake -f Makefile.bcc\n\nStephen Schnipsel <schnipsel@m4f.net> provided `Makefile.bcc`. You\nwill need to edit one of these Makefiles to use a different compiler.\nYou can edit it with any text editor (like Notepad). See the file for\nmore information.\n\n\nContact\n-------\n\nIf you have trouble building or running Gifsicle, try GitHub issues:\nhttps://github.com/kohler/gifsicle\n\nEddie Kohler, ekohler@gmail.com  \nhttp://www.read.seas.harvard.edu/~kohler/  \nPlease note that I do not provide support for Windows.\n\n\nCopyright/License\n-----------------\n\nAll source code is Copyright (C) 1997-2024 Eddie Kohler.\n\nIF YOU PLAN TO USE GIFSICLE ONLY TO CREATE OR MODIFY GIF IMAGES, DON'T\nWORRY ABOUT THE REST OF THIS SECTION. Anyone can use Gifsicle however\nthey wish; the license applies only to those who plan to copy,\ndistribute, or alter its code. If you use Gifsicle for an\norganizational or commercial Web site, I would appreciate a link to\nthe Gifsicle home page on any 'About This Server' page, but it's not\nrequired.\n\nThis code is distributed under the GNU General Public License, Version\n2 (and only Version 2). The GNU General Public License is available\nvia the Web at <http://www.gnu.org/licenses/gpl.html> or in the\n'COPYING' file in this directory.\n\nThe following alternative license may be used at your discretion.\n\nPermission is granted to copy, distribute, or alter Gifsicle, whole or\nin part, as long as source code copyright notices are kept intact,\nwith the following restriction: Developers or distributors who plan to\nuse Gifsicle code, whole or in part, in a product whose source code\nwill not be made available to the end user -- more precisely, in a\ncontext which would violate the GPL -- MUST contact the author and\nobtain permission before doing so.\n\n\nAuthors\n-------\n\nThis program is dedicated to the memory of Anne Dudfield, who named\nit. Anne was an incredible friend and ridiculous person. ANNIED!!!!!!\n\nEddie Kohler <ekohler@gmail.com> \\\nhttp://www.read.seas.harvard.edu/~kohler/ \\\nHe wrote it.\n\nDavid Hedbor <david@hedbor.org> \\\nMany bug reports and constructive whining about the optimizer.\n\nEmil Mikulic <darkmoon@connexus.net.au> \\\nWin32 port help.\n\nHans Dinsen-Hansen <dino@danbbs.dk> \\\nhttp://www.danbbs.dk/~dino/ \\\nAdaptive tree method for GIF writing.\n\nKornel Lesiński \\\n`--lossy` option.\n"
        },
        {
          "name": "bootstrap.sh",
          "type": "blob",
          "size": 0.0234375,
          "content": "#!/bin/sh\nautoreconf -i\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 9.9365234375,
          "content": "dnl Process this file with autoconf to produce a configure script.\nAC_INIT([gifsicle],[1.96])\nAC_PREREQ([2.69])\nAC_CONFIG_SRCDIR([src/gifsicle.h])\nAC_CONFIG_HEADERS([config.h])\nAC_CONFIG_FILES([Makefile src/Makefile])\nAM_INIT_AUTOMAKE\nac_user_cc=${CC+y}\n\nAC_PROG_MAKE_SET\nAC_PROG_CC\nAC_PROG_CPP\nAC_C_CONST\nAC_C_INLINE\n\nAC_CHECK_HEADERS([sys/select.h sys/stat.h inttypes.h unistd.h])\n\nbuild_gifview=maybe\nAC_ARG_ENABLE([gifview],\n    [AS_HELP_STRING([--disable-gifview], [do not build gifview X11 viewer])],\n    [if test \"x$enableval\" != xyes; then build_gifview=no; fi])\n\nbuild_gifdiff=yes\nAC_ARG_ENABLE([gifdiff],\n    [AS_HELP_STRING([--disable-gifdiff], [do not build gifdiff comparison utility])],\n    [if test \"x$enableval\" != xyes; then build_gifdiff=no; fi])\n\nAC_ARG_ENABLE([warnings],\n    [AS_HELP_STRING([--disable-warnings], [compile without -W -Wall])],\n    [:], [enable_warnings=yes])\nif test x$enable_warnings = xyes; then\n    CC=\"$CC -W -Wall\"\nfi\n\nWERROR=\nAC_ARG_ENABLE([werror],\n    [AS_HELP_STRING([--enable-werror], [compile with -Werror])],\n    [if test \"x$enableval\" = xyes; then WERROR=\"-Werror\"; fi])\nAC_SUBST([WERROR])\n\nuse_dmalloc=\nAC_ARG_ENABLE([dmalloc],\n    [AS_HELP_STRING([--enable-dmalloc], [build with debugging malloc library])],\n    [if test \"x$enableval\" = xyes; then use_dmalloc=yes; fi])\n\nungif=\nAC_ARG_ENABLE([ungif],\n    [AS_HELP_STRING([--enable-ungif], [build without LZW compression])],\n    [if test \"x$enableval\" = xyes; then ungif=yes; fi])\n\n\ndnl\ndnl Choose programs to build. Always build gifsicle\ndnl\n\nOTHERPROGRAMS=\"\"\nOTHERMANS=\"\"\n\nif test \"x$build_gifview\" = xyes -o \"x$build_gifview\" = xmaybe; then\n    AC_PATH_XTRA\n    if test \"x$no_x\" = xyes; then\n        if test \"x$build_gifview\" = xyes; then\n            AC_MSG_ERROR([\n******************************************************************************\nCannot find X, but you explicitly requested that gifview be built.\nYou may need to install an X11 development package to get the X headers,\nsupply a '--with-x' option, or simply '--disable-gifview'.])\n\t      else\n\t          AC_MSG_WARN([Not compiling gifview since X is not available.])\n\t          build_gifview=no\n\t      fi\n    else\n\t      build_gifview=yes\n    fi\nfi\n\nif test \"x$build_gifview\" = xyes ; then\n    OTHERPROGRAMS=\"$OTHERPROGRAMS gifview\"'$(EXEEXT)'\n    OTHERMANS=\"$OTHERMANS gifview.1\"\n    AC_CHECK_HEADERS([time.h sys/time.h])\n    AC_CACHE_CHECK([for gettimeofday prototype], [ac_cv_gettimeofday],\n        [AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n            [[#include <time.h>\n#include <sys/time.h>]],\n            [[gettimeofday((void*) 0, (void*) 0)]])],\n            [ac_cv_gettimeofday=2],\n            [AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n                [[#include <time.h>\n    #include <sys/time.h>]],\n                [[gettimeofday((void*) 0)]])],\n                [ac_cv_gettimeofday=1], [ac_cv_gettimeofday=0])])])\n    AC_DEFINE_UNQUOTED([GETTIMEOFDAY_PROTO], [$ac_cv_gettimeofday], [Define to the number of arguments to gettimeofday.])\nelse\n    AC_DEFINE_UNQUOTED(X_DISPLAY_MISSING, 1, [Define if X is not available.])\nfi\n\nif test \"x$build_gifdiff\" = xyes ; then\n    OTHERPROGRAMS=\"$OTHERPROGRAMS gifdiff\"'$(EXEEXT)'\n    OTHERMANS=\"$OTHERMANS gifdiff.1\"\nfi\n\nAC_SUBST(OTHERPROGRAMS)\nAC_SUBST(OTHERMANS)\n\n\ndnl\ndnl Set up ungif support\ndnl\n\nif test \"x$ungif\" = xyes -o \"x$GIFSICLE_UNGIF\" = xyes ; then\n  GIFWRITE_O=ungifwrt.o\n  AC_DEFINE(GIF_UNGIF, 1, [Define if GIF LZW compression is off.])\nelif test -r $srcdir/src/gifwrite.c ; then\n  GIFWRITE_O=gifwrite.o\nelse\n  AC_MSG_ERROR([This version of gifsicle cannot create compressed GIFs.\n*** Either reconfigure with the '--enable-ungif' option or download the\n*** version with compression from http://www.lcdf.org/gifsicle/])\nfi\nAC_SUBST(GIFWRITE_O)\n\ndnl\ndnl random or rand, strerror, strtoul, mkstemp, snprintf\ndnl\n\nAC_CHECK_FUNC([random], [random_func=random], [random_func=rand])\nAC_DEFINE_UNQUOTED(RANDOM, ${random_func}, [Define to a function that returns a random number.])\n\nAC_REPLACE_FUNCS([strerror])\nAC_CHECK_FUNCS([strtoul mkstemp snprintf])\nAC_SEARCH_LIBS([pow], [m], [AC_DEFINE([HAVE_POW], [1], [Define to 1 if you have the `pow' function.])])\nAC_SEARCH_LIBS([cbrtf], [m], [AC_DEFINE([HAVE_CBRTF], [1], [Define to 1 if you have the `cbrtf' function.])])\n\n\ndnl\ndnl integer types\ndnl\n\nAC_CHECK_HEADERS(inttypes.h, have_inttypes_h=yes, have_inttypes_h=no)\nAC_CHECK_HEADERS(sys/types.h, have_sys_types_h=yes, have_sys_types_h=no)\n\nif test $have_inttypes_h = no -a $have_sys_types_h = yes; then\n    AC_CACHE_CHECK([for uintXX_t typedefs], ac_cv_uint_t,\n    [AC_EGREP_HEADER(dnl\nchangequote(<<,>>)<<(^|[^a-zA-Z_0-9])uint32_t[^a-zA-Z_0-9]>>changequote([,]),\n    sys/types.h, ac_cv_uint_t=yes, ac_cv_uint_t=no)])\nfi\nif test $have_inttypes_h = no -a $have_sys_types_h = yes -a \"$ac_cv_uint_t\" = no; then\n    AC_CACHE_CHECK([for u_intXX_t typedefs], ac_cv_u_int_t,\n    [AC_EGREP_HEADER(dnl\nchangequote(<<,>>)<<(^|[^a-zA-Z_0-9])u_int32_t[^a-zA-Z_0-9]>>changequote([,]),\n    sys/types.h, ac_cv_u_int_t=yes, ac_cv_u_int_t=no)])\nfi\nif test $have_inttypes_h = yes -o \"$ac_cv_uint_t\" = yes; then\n    :\nelif test \"$ac_cv_u_int_t\" = yes; then\n    AC_DEFINE([HAVE_U_INT_TYPES], [1], [Define if you have u_intXX_t types but not uintXX_t types.])\nfi\n\nAC_CHECK_TYPES([uintptr_t, int64_t, uint64_t], [], [],\n[#if HAVE_INTTYPES_H\n# include <inttypes.h>\n#endif\n#if HAVE_SYS_TYPES_H\n# include <sys/types.h>\n#endif\n])\n\nAC_CHECK_SIZEOF([float])\nAC_CHECK_SIZEOF([unsigned int])\nAC_CHECK_SIZEOF([unsigned long])\nAC_CHECK_SIZEOF([void *])\n\n\ndnl\ndnl vector types\ndnl\n\nAC_MSG_CHECKING([for usable vector_size vector types])\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n    [AC_INCLUDES_DEFAULT\n    [typedef float float4 __attribute__((vector_size (4 * sizeof(float))));]],\n    [[float4 a;\n    a[0] = a[1] = a[2] = a[3] = (float) rand();\n    a *= (float) 3;\n    printf(\"%f\\n\", a[0]);]])],\n    [AC_DEFINE([HAVE_VECTOR_SIZE_VECTOR_TYPES], 1, [Define to 1 if `vector_size' vector types are usable.])\n    ac_cv_vector_size_vector_types=yes], [ac_cv_vector_size_vector_types=no])\nAC_MSG_RESULT([$ac_cv_vector_size_vector_types])\n\nAC_MSG_CHECKING([for usable ext_vector_type vector types])\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n    [AC_INCLUDES_DEFAULT\n    [typedef float float4 __attribute__((ext_vector_type (4)));]],\n    [[float4 a;\n    a[0] = a[1] = a[2] = a[3] = (float) rand();\n    a *= (float) 3;\n    printf(\"%f\\n\", a[0]);]])],\n    [AC_DEFINE([HAVE_EXT_VECTOR_TYPE_VECTOR_TYPES], 1, [Define to 1 if `ext_vector_type' vector types are usable.])\n    ac_cv_ext_vector_type_vector_types=yes], [ac_cv_ext_vector_type_vector_types=no])\nAC_MSG_RESULT([$ac_cv_ext_vector_type_vector_types])\n\nAC_MSG_CHECKING([for __builtin_shufflevector])\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n    [AC_INCLUDES_DEFAULT\n    [typedef float float4 __attribute__((ext_vector_type (4)));]],\n    [[float4 a;\n    a[0] = a[1] = a[2] = a[3] = (float) rand();\n    a = __builtin_shufflevector(a, a, 3, 2, 1, 0);\n    printf(\"%f\\n\", a[0]);]])],\n    [AC_DEFINE([HAVE___BUILTIN_SHUFFLEVECTOR], 1, [Define to 1 if you have the `__builtin_shufflevector' function.])\n    ac_cv___builtin_shufflevector=yes], [ac_cv___builtin_shufflevector=no])\nAC_MSG_RESULT([$ac_cv___builtin_shufflevector])\n\nAC_ARG_ENABLE([simd],\n    [AS_HELP_STRING([--disable-simd], [do not use SIMD instructions])],\n    [], [enable_simd=maybe])\n\nif test $ac_cv_vector_size_vector_types = no -a $ac_cv_ext_vector_type_vector_types = no; then\n    if test x$enable_simd = xmaybe; then\n        AC_MSG_WARN([\nNot using SIMD since your compiler's support for SIMD types is inadequate.\n])\n    elif test x$enable_simd != xno; then\n        AC_MSG_ERROR([\n******************************************************************************\n`--enable-simd' was supplied, but this compiler does not support SIMD types.])\n    fi\n    enable_simd=no\nfi\nif test x\"$enable_simd\" != xno; then\n    AC_DEFINE([HAVE_SIMD], [1], [Define to 1 if SIMD types should be used.])\nfi\n\n\ndnl\ndnl threads\ndnl\n\nAC_SEARCH_LIBS([pthread_create], [pthread], [have_threads=yes], [have_threads=no])\nAC_MSG_CHECKING([for __sync_add_and_fetch])\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n    [AC_INCLUDES_DEFAULT\n    extern volatile int x;],\n    [[printf(\"%d\", __sync_add_and_fetch(&x, 1));]])],\n    [AC_DEFINE([HAVE___SYNC_ADD_AND_FETCH], 1, [Define to 1 if you have the `__sync_add_and_fetch' function.])\n    result=yes], [result=no])\nAC_MSG_RESULT([$result])\n\nAC_ARG_ENABLE([threads],\n    [AS_HELP_STRING([--disable-threads], [do not include multithreading])],\n    [], [enable_threads=maybe])\n\nif test \"x$have_threads\" = xno -a \"x$enable_threads\" = xyes; then\n    AC_MSG_ERROR([\n******************************************************************************\nThreading support is not available on this platform.])\nelif test \"x$have_threads\" = xyes -a \"x$enable_threads\" != xno; then\n    AC_DEFINE([ENABLE_THREADS], [1], [Define to 1 if multithreading support is available.])\nfi\n\n\ndnl\ndnl verbatim portions of the header\ndnl\n\nAC_DEFINE_UNQUOTED(PATHNAME_SEPARATOR, ['/'], [Pathname separator character ('/' on Unix).])\nif false; then\n  AC_DEFINE(OUTPUT_GIF_TO_TERMINAL, 1, [Define to write GIFs to stdout even when stdout is a terminal.])\nfi\n\nAH_TOP([#ifndef GIFSICLE_CONFIG_H\n#define GIFSICLE_CONFIG_H])\n\nAH_BOTTOM([#include <stddef.h>\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n/* Use the clean-failing malloc library in fmalloc.c. */\n#define GIF_ALLOCATOR_DEFINED   1\n#define Gif_Free free\n\n/* Prototype strerror if we don't have it. */\n#ifndef HAVE_STRERROR\nchar *strerror(int errno);\n#endif\n\n#ifdef __cplusplus\n}\n/* Get rid of a possible inline macro under C++. */\n# define inline inline\n#endif\n\n/* Need _setmode under MS-DOS, to set stdin/stdout to binary mode */\n/* Need _fsetmode under OS/2 for the same reason */\n/* Windows has _isatty, not isatty */\n/* Modern Windows has _snprintf, but we prefer snprintf */\n#if defined(_MSDOS) || defined(_WIN32) || defined(__EMX__) || defined(__DJGPP__)\n# include <fcntl.h>\n# include <io.h>\n# define isatty _isatty\n#endif\n\n#ifndef HAVE_SNPRINTF\n#define snprintf(s, n, ...) sprintf((s), __VA_ARGS__)\n#endif\n\n#endif /* GIFSICLE_CONFIG_H */])\n\n\ndnl\ndnl Output\ndnl\n\nAC_OUTPUT\n"
        },
        {
          "name": "gifdiff.1",
          "type": "blob",
          "size": 1.580078125,
          "content": ".\\\" -*- mode: nroff -*-\n.ds V 1.95\n.ds E \" \\-\\- \n.if t .ds E \\(em\n.de Op\n.BR \"\\\\$1\" \"\\\\$2\" \"\\\\$3\" \"\\\\$4\" \"\\\\$5\" \"\\\\$6\"\n..\n.de Sp\n.if n .sp\n.if t .sp 0.4\n..\n.de Es\n.Sp\n.RS 5\n.nf\n..\n.de Ee\n.fi\n.RE\n.PP\n..\n.TH GIFDIFF 1 \"11 July 2017\" \"Version \\*V\"\n.SH NAME\ngifdiff \\- compares GIF images\n.SH SYNOPSIS\n.B gifdiff\n\\%[options]\nGIF\\-file\\-1\nGIF\\-file\\-2\n'\n.SH DESCRIPTION\n.B gifdiff\ncompares two GIF files and determines if they appear identical. Differences\nthat don't affect appearance (like colormap ordering or how much an\nanimation is optimized) are not reported.\n.PP\n.B gifdiff\nprints details of any differences it finds. If the GIFs are the same, it\nprints nothing. It exits with status 0 if there were no differences, 1 if\nthere were some differences, and 2 if there was trouble.\n'\n.SH OPTIONS\n\n.PD 0\n.TP 5\n.Op \\-\\-brief \", \" \\-q\n'\nReport only whether the GIFs differ, not the details of the differences.\n'\n.Sp\n.TP 5\n.Op \\-\\-ignore\\-redundancy \", \" \\-w\n'\nDo not report differences in the numbers of redundant frames (frames which\ndo not change the displayed image).\n'\n.Sp\n.TP 5\n.Op \\-\\-ignore\\-background \", \" \\-B\n'\nDo not report differences in background colors.\n'\n.Sp\n.TP 5\n.Op \\-\\-help\n'\nPrint usage information and exit.\n'\n.Sp\n.TP\n.Op \\-\\-version\n'\nPrint the version number and some quickie warranty information and exit.\n'\n.PD\n'\n.SH SEE ALSO\n\n.BR gifsicle (1)\n'\n.SH BUGS\n\nPlease email suggestions, additions, patches and bugs to\nekohler@gmail.com.\n'\n.SH AUTHORS\n.na\nEddie Kohler, ekohler@gmail.com\n.br\nhttp://www.read.seas.harvard.edu/~kohler/\n.PP\nhttp://www.lcdf.org/gifsicle/\n.br\nThe \n.B gifsicle\nhome page.\n'\n"
        },
        {
          "name": "gifsicle.1",
          "type": "blob",
          "size": 32.029296875,
          "content": ".\\\" -*- mode: nroff -*-\n.AM\n.ds V 1.95\n.ds E \" \\-\\- \n.if t .ds E \\(em\n.de Op\n.BR \"\\\\$1\" \"\\\\$2\" \"\\\\$3\" \"\\\\$4\" \"\\\\$5\" \"\\\\$6\"\n..\n.de Oa\n.IR \"\\fB\\\\$1\\& \\|\\fI\\\\$2\" \"\\\\$3\" \"\\\\$4\" \"\\\\$5\" \"\\\\$6\"\n..\n.de Qo\n.RB \\(oq \"\\\\$1\" \"\\(cq\\\\$2\"\n..\n.de Qa\n.BI \"\\fR\\(oq\\fB\\\\$1\" \" \\\\$2\" \" \\\\$3\" \" \\\\$4\" \"\\fR\\(cq\\\\$5\"\n..\n.de Sp\n.if n .sp\n.if t .sp 0.4\n..\n.de Ix\n.TP 25\n\\\\$1\n.nh\n\\\\$2\n.hy\n..\n.de Es\n.Sp\n.RS 5\n.nf\n..\n.de Ee\n.fi\n.RE\n.PP\n..\n.de Xs\n.RS 5\n.nf\n..\n.de Xe\n.fi\n.RE\n..\n.TH GIFSICLE 1 \"11 July 2017\" \"Version \\*V\"\n.SH NAME\ngifsicle \\- manipulates GIF images and animations\n.SH SYNOPSIS\n.B gifsicle\n\\%[options, frames, and filenames].\\|.\\|.\n'\n.SH DESCRIPTION\n.B gifsicle\ncreates, edits, manipulates, and\nprints information about GIF images and animations.\n.PP\n.B Gifsicle\nnormally processes input GIF files according to its command line\noptions and writes the result to the standard output. The\n.Op \\-i\noption, for example, tells\n.B gifsicle\nto interlace its inputs:\n.Es\n\\fBgifsicle \\-i < pic.gif > interlaced-pic.gif\\fR\n.Ee\n.PP\nBy default,\n.B gifsicle\ncombines two or more input files into a \\(lqflipbook\\(rq animation:\n.Es\n\\fBgifsicle pic1.gif pic2.gif pic3.gif > animation.gif\\fR\n.Ee\nUse options like\n.Op \\-\\-delay \", \" \\-\\-loopcount \", and \" \\-\\-optimize\nto tune your animations.\n.PP\nTo modify GIF files in place, use the\n.Op \\-\\-batch\noption. With\n.Op \\-\\-batch ,\n.B gifsicle\nwill modify the files you specify instead of writing a new file to the\nstandard output. To interlace all the GIFs in the current directory, you\ncould say:\n.Es\n\\fBgifsicle \\-\\-batch \\-i *.gif\n.Ee\n.PP\nNew users may want to skip to\nthe Examples section at the end.\n'\n.SH CONCEPT INDEX\n'\nConcepts are on the left, relevant\n.B gifsicle\noptions are on the right.\n'\n.Sp\n.PD 0\n.Ix \"Animations, changing\" \"frame selections, frame changes, etc.\"\n.Ix \"\\ \\ \\ disposal\" \"\\fB\\-\\-disposal\\fP\"\n.Ix \"\\ \\ \\ looping\" \"\\fB\\-\\-loopcount\\fP\"\n.Ix \"\\ \\ \\ portions of\" \"frame selections\"\n.Ix \"\\ \\ \\ smaller\" \"\\fB\\-\\-optimize\\fP, \\fB\\-\\-colors\\fP, \\fB\\-\\-lossy\\fP\"\n.Ix \"\\ \\ \\ speed\" \"\\fB\\-\\-delay\\fP\"\n.Ix \"Bad output\" \"\\fB\\-\\-careful\\fP\"\n.Ix \"Background color\" \"\\fB\\-\\-background\\fP\"\n.Ix \"Colors, changing\" \"\\fB\\-\\-change\\-color\\fP, \\fB\\-\\-use\\-colormap\\fP, \\fB\\-\\-dither\\fP, \\fB\\-\\-transform\\-colormap\\fP\"\n.Ix \"\\ \\ \\ reducing number\" \"\\fB\\-\\-colors\\fP, \\fB\\-\\-dither\\fP, \\fB\\-\\-gamma\\fP\"\n.Ix \"Comments\" \"\\fB\\-\\-comment\\fP\"\n.Ix \"Extensions\" \"\\fB\\-\\-extension\\fP, \\fB\\-\\-app\\-extension\\fP, \\fB\\-\\-extension\\-info\\fP\"\n.Ix \"File size\" \"\\fB\\-\\-optimize\\fP, \\fB\\-\\-unoptimize\\fP, \\fB\\-\\-colors\\fP, \\fB\\-\\-lossy\\fP\"\n.TP 30\nImage transformations\n.Ix \"\\ \\ \\ cropping\" \"\\fB\\-\\-crop\\fP, \\fB\\-\\-crop\\-transparency\\fP\"\n.Ix \"\\ \\ \\ flipping\" \"\\fB\\-\\-flip\\-*\\fP\"\n.Ix \"\\ \\ \\ resizing\" \"\\fB\\-\\-resize\\fP, \\fB\\-\\-scale\\fP\"\n.Ix \"\\ \\ \\ rotating\" \"\\fB\\-\\-rotate\\-*\\fP\"\n.Ix \"Grayscale\" \"\\fB\\-\\-use\\-colormap\\fP\"\n.Ix \"Interlacing\" \"\\fB\\-\\-interlace\\fP\"\n.Ix \"Positioning frames\" \"\\fB\\-\\-position\\fP\"\n.Ix \"Screen, logical\" \"\\fB\\-\\-logical\\-screen\\fP\"\n.Ix \"Selecting frames\" \"frame selections (like \\fB'#0'\\fP)\"\n.Ix \"Transparency\" \"\\fB\\-\\-transparent\\fP\"\n.Ix \"Warnings\" \"\\fB\\-\\-no\\-warnings\\fP\"\n.PD\n'\n.SH COMMAND LINE\n\n.BR gifsicle 's\ncommand line consists of GIF input files and options. Most options start\nwith a dash (\\-) or plus (+); frame selections, a kind of option, start\nwith a number sign (#). Anything else is a GIF input file.\n.PP\n.B gifsicle\nreads and processes GIF input files in order. If no GIF input file is\ngiven, or you give the special filename \\(oq\\-\\(cq,\nit reads from the standard input.\n.PP\n.B gifsicle\nexits with status 0 if there were no errors and status 1 otherwise.\n'\n.SH OPTIONS\n\nEvery option has a long form,\n.Qo \\-\\-long\\-descriptive\\-name .\nYou don't need to type the whole long descriptive name, just enough to\nmake it unambiguous.\n.PP\nSome options also have a short form,\n.Qo \\-X .\nYou can combine short options if they don't take arguments:\n.Qo \\-IIb\nis the same as\n.Qo \"\\-I \\-I \\-b\" .\nBut be careful with options that do take arguments:\n.Qo \\-cblah\nmeans\n.Qo \"\\-c \\fRblah\" ,\nnot\n.Qo \"\\-c \\-b \\-l \\-a \\-h\" .\n.PP\nMany options also have a converse,\n.Qo \\-\\-no\\-option ,\nwhich turns off the option. You can turn off a short option\n.Qo \\-X\nby saying\n.Qo \\+X\ninstead.\n'\n.\\\" -----------------------------------------------------------------\n.SS Mode Options\n\nMode options tell\n.B gifsicle\nwhat kind of output to generate. There can be at most one, and it must\nprecede any GIF inputs.\n.TP 5\n.Op \"\\-\\-merge\" \", \" \"\\-m\"\n'\nCombine all GIF inputs into one file with multiple frames and write that\nfile to the standard output. This is the default mode.\n'\n.TP\n.Op \\-\\-batch \", \" \\-b\n'\nModify each GIF input in place by reading and writing to the same filename.\n(GIFs read from the standard input are written to the standard output.)\n'\n.TP\n.Op \\-\\-explode \", \" \\-e\n'\nCreate an output GIF for each frame of each input file. The output GIFs are\nnamed \\(oqxxx.000\\(cq, \\(oqxxx.001\\(cq, and so on, where \\(oqxxx\\(cq is the name of the input\nfile (or whatever you specified with\n.Qo \\-\\-output )\nand the numeric extension is the frame number.\n'\n.TP\n.Op \\-\\-explode\\-by\\-name \", \" \\-E\n'\nSame as\n.Op \\-\\-explode \",\"\nbut write any named frames to files \\(oqxxx.\\fIname\\fR\\(cq instead of\n\\(oqxxx.\\fIframe-number\\fR\\(cq.  Frames are named using the\n.Qo \\-\\-name\noption.\n'\n.\\\" -----------------------------------------------------------------\n.SS General Options\n\nGeneral options control the information\n.B gifsicle\nprints and where it writes its output. The info options and\n.Op \\-\\-verbose\ncan be turned off with\n.Qo \\-\\-no\\-X .\n'\n.Sp\n.PD 0\n.TP 5\n.Op \\-\\-info \", \" \\-I\n'\nPrint a human-readable description of each input GIF to the standard\noutput, or whatever file you specify with\n.Op \\-o .\nThis option suppresses normal output, and cannot be combined with mode\noptions like\n.Op \\-\\-batch .\nIf you give two\n.Op \\-\\-info\nor\n.Op \\-I\noptions, however, information is printed to standard error, and normal\noutput takes place as usual.\n'\n.Sp\n.TP 5\n.Op \\-\\-color\\-info \", \" \\-\\-cinfo\n'\nLike\n.Op \\%\\-\\-info ,\nbut also print information about input files' colormaps.\n'\n.Sp\n.TP 5\n.Op \\-\\-extension\\-info \", \" \\-\\-xinfo\n'\nLike\n.Op \\%\\-\\-info ,\nbut also print any unrecognized GIF extensions in a\n.BR hexdump (1)-like\nformat.\n'\n.Sp\n.TP 5\n.Op \\-\\-size\\-info \", \" \\-\\-sinfo\n'\nLike\n.Op \\%\\-\\-info ,\nbut also print information about compressed image sizes.\n'\n.Sp\n.TP 5\n.Op \\-\\-help \", \" \\-h\n'\nPrint usage information and exit.\n'\n.Sp\n.TP\n.Oa \\-o file\n.TP\n.Oa \\-\\-output file\n'\nSend output to\n.IR file .\nThe special filename \\(oq-\\(cq means the standard output.\n'\n.Sp\n.TP\n.Op \\-\\-verbose \", \" \\-V\n'\nPrint progress information (files read and written) to standard\nerror.\n'\n.Sp\n.TP\n.Op \\-\\-no\\-warnings \", \" \\-w\n'\nSuppress all warning messages.\n'\n.Sp\n.TP\n.Op \\-\\-no\\-ignore\\-errors\n'\nExit with status 1 when encountering a very erroneous GIF. Default is to\nmuddle on.\n'\n.Sp\n.TP\n.Op \\-\\-version\n'\nPrint the version number and some short non-warranty information and exit.\n'\n.Sp\n.PD 0\n.TP 5\n.Op \\-\\-careful\n'\nWrite slightly larger GIFs that avoid bugs in some other GIF\nimplementations. Some Java and Internet Explorer versions cannot display\nthe correct, minimal GIFs that Gifsicle produces. Use the\n.Op \\-\\-careful\noption if you are having problems with a particular image.\n'\n.Sp\n.TP\n.Op \\-\\-conserve\\-memory\n'\nConserve memory usage at the expense of processing time. This may be useful\nif you are processing large GIFs on a computer without very much memory. Or\nsay\n.Op \\-\\-no\\-conserve\\-memory .\n'\n.Sp\n.TP\n.Op \\-\\-nextfile\n'\nAllow input files to contain multiple concatenated GIF images. If a\nfilename appears multiple times on the command line, \\fBgifsicle\\fR will\nread a new image from the file each time. This option can help scripts\navoid the need for temporary files. For example, to create an animated GIF\nwith three frames with different delays, you might run \"\\fBgifsicle\n\\-\\-nextfile \\-d10 \\- \\-d20 \\- \\-d30 \\- > out.gif\\fR\" and write the three\nGIF images, in sequence, to \\fBgifsicle\\fR's standard input.\n'\n.Sp\n.TP\n.Op \\-\\-multifile\n'\nLike\n.Op \\-\\-nextfile ,\nbut read\n.I as many GIF images as possible\nfrom each file. This option is intended for scripts. For example, to merge\nan unknown number of GIF images into a single animation, run \"\\fBgifsicle\n\\-\\-multifile \\- > out.gif\\fR\" and write the GIF images, in sequence, to\n\\fBgifsicle\\fR's standard input.  Any frame selections apply only to the\nlast file in the concatenation.\n'\n.PD\n'\n.\\\" -----------------------------------------------------------------\n.SS Frame Selections\n\nA frame selection tells\n.B gifsicle\nwhich frames to use from the current input file. They are useful only for\nanimations, as non-animated GIFs only have one frame. Here are the\nacceptable forms for frame specifications.\n.Sp\n.PD 0\n.TP 13\n.BI # num\n'\nSelect frame \\fInum\\fR. (The first frame is\n.Qo #0 .\nNegative numbers count backwards from the last frame, which is\n.Qo #-1 .)\n'\n.TP 13\n.BI # num1 \\- num2\n'\nSelect frames \\fInum1\\fR through \\fInum2\\fR.\n'\n.TP 13\n.BI # num1 \\-\n'\nSelect frames \\fInum1\\fR through the last frame.\n'\n.TP 13\n.BI # name\n'\nSelect the frame named \\fIname\\fR.\n.PD\n.PP\nThe \\(oq#\\(cq character has special meaning for many shells, so you generally\nneed to quote it.\n.PP\nFor example,\n.Xs\n\\fBgifsicle happy.gif \"#0\"\\fR\n.Xe\nuses the first frame from happy.gif;\n.Xs\n\\fBgifsicle happy.gif \"#0-2\"\\fR\n.Xe\nuses its first three frames; and\n.Xs\n\\fBgifsicle happy.gif \"#-1-0\"\\fR\n.Xe\nuses its frames in reverse order (starting from frame #-1\\*Ethe\nlast frame\\*Eand ending at frame #0\\*Ethe first).\n.PP\nThe action performed with the selected frames depends on the current\nmode. In merge mode, only the selected frames are merged into the output\nGIF. In batch mode, only the selected frames are modified; other frames\nremain unchanged. In explode mode, only the selected frames are exploded\ninto output GIFs.\n'\n.\\\" -----------------------------------------------------------------\n.SS Frame Change Options\n\nFrame change options insert new frames into an animation or replace or\ndelete frames that already exist. Some things\\*Efor example, changing one\nframe in an animation\\*Eare difficult to express with frame selections, but\neasy with frame changes.\n'\n.TP 5\n.Oa \\-\\-delete frames \" [\" frames \".\\|.\\|.]\"\n'\nDelete\n.I frames\nfrom the input GIF.\n'\n.TP\n.Oa \\-\\-insert\\-before \"frame other-GIFs\"\n'\nInsert\n.I other-GIFs\nbefore\n.I frame\nin the input GIF.\n'\n.TP\n.Oa \\-\\-append \"other-GIFs\"\n'\nAppend\n.I other-GIFs\nto the input GIF.\n'\n.TP\n.Oa \\-\\-replace \"frames other-GIFs\"\n'\nReplace\n.I frames\nfrom the input GIF with\n.IR other-GIFs .\n'\n.TP\n\\fB\\-\\-done\\fR\n'\nComplete the current set of frame changes.\n'\n.PP\nThe\n.I frames\narguments are frame selections (see above). These arguments always refer to\nframes from the\n.I original\ninput GIF. So, if \\(oqa.gif\\(cq has 3 frames and \\(oqb.gif\\(cq has one, this\ncommand\n.Xs\n\\fBgifsicle a.gif \\-\\-delete \"#0\" \\-\\-replace \"#2\" b.gif\\fR\n.Xe\nwill produce an output animation with 2 frames: \\(oqa.gif\\(cq frame 1, then\n\\(oqb.gif\\(cq.\n.PP\nThe\n.I other-GIFs\narguments are any number of GIF input files and frame selections.\nThese images are combined in merge mode and added to the input GIF.\nThe\n.I other-GIFs\nlast until the next frame change option, so this command replaces the\nfirst frame of \\(oqin.gif\\(cq with the merge of \\(oqa.gif\\(cq and \\(oqb.gif\\(cq:\n.Xs\n\\fBgifsicle \\-b in.gif \\-\\-replace \"#0\" a.gif b.gif\\fR\n.Xe\n.PP\nThis command, however, replaces the first frame of \\(oqin.gif\\(cq with\n\\(oqa.gif\\(cq and then processes \\(oqb.gif\\(cq separately:\n.Xs\n\\fBgifsicle \\-b in.gif \\-\\-replace \"#0\" a.gif \\-\\-done b.gif\\fR\n.Xe\n.PP\nWarning: You shouldn't use both frame selections and frame changes on\nthe same input GIF.\n'\n.\\\" -----------------------------------------------------------------\n.SS Image Options\n\nImage options modify input images\\*Eby changing their interlacing,\ntransparency, and cropping, for example. Image options have three forms:\n.Qo \\-\\-X ,\n.Qo \\-\\-no\\-X ,\nand\n.Qo \\-\\-same\\-X .\nThe\n.Qo \\-\\-X\nform selects a value for the feature, the\n.Qo \\-\\-no\\-X\nform turns off the feature, and the\n.Qo \\-\\-same\\-X\nform means that the feature's value is copied from each input. The default\nis always\n.Qo \\-\\-same\\-X .\nFor example,\n.Op \\-background= \"\"\"#0000FF\"\"\"\nsets the background color to blue,\n.Op \\-\\-no\\-background\nturns the background color off (by setting it to 0), and\n.Op \\-\\-same\\-background\nuses input images' existing background colors. You can give each option\nmultiple times; for example,\n.Xs\n\\fBgifsicle \\-b \\-O2 \\-i a.gif \\-\\-same\\-interlace b.gif c.gif\\fR\n.Xe\nwill make \\(oqa.gif\\(cq interlaced, but leave \\(oqb.gif\\(cq and \\(oqc.gif\\(cq interlaced only\nif they were already.\n'\n.Sp\n.PD 0\n.TP 5\n.Oa \\-B color\n.TP\n.Oa \\-\\-background color\n'\nSet the output GIF's background to\n.IR color .\nThe argument can have the same forms as in the\n.Op \\-\\-transparent\noption below.\n'\n.Sp\n.TP\n.Oa \\-\\-crop x1 , y1 - x2\\fR,\\fIy2\n.TP\n.Oa \\-\\-crop x1 , y1 + width\\fRx\\fIheight\n'\nCrop the following input frames to a smaller rectangular area. The top-left\ncorner of this rectangle is\n.RI ( x1 , y1 );\nyou can give either the lower-right corner,\n.RI ( x2 , y2 ),\nor the width and height of the rectangle. In the\n.IR x1 , y1 + width x height\nform,\n.I width\nand\n.I height\ncan be zero or negative. A zero dimension means the cropping area goes to\nthe edge of the image; a negative dimension brings the cropping area that\nmany pixels back from the image edge. For example,\n.Op \\-\\-crop \" 2,2+-2x-2\"\nwill shave 2 pixels off each side of the input image. Cropping happens\nbefore any rotation, flipping, resizing, or positioning.\n'\n.Sp\n.TP\n.Op \\-\\-crop\\-transparency\n'\nCrop any transparent borders off the following input frames. This happens\nafter any cropping due to the\n.Op \\-\\-crop\noption. It works on the raw input images; for example, any transparency\noptions have not yet been applied.\n'\n.Sp\n.TP\n.Op \\-\\-flip\\-horizontal\n.TP\n.Op \\-\\-flip\\-vertical\n'\nFlip the following frames horizontally or vertically.\n'\n.Sp\n.TP\n.Op \\-i\n.TP\n.Op \\-\\-interlace\n'\nTurn interlacing on.\n'\n.Sp\n.TP\n.Oa \\-S width x height\n.TP\n.Oa \\-\\-logical\\-screen width x height\n'\nSet the output logical screen to\n.IR width x height .\n.Op \\-\\-no\\-logical\\-screen\nsets the output logical screen large enough to include all output frames, while\n.Op \\-\\-same\\-logical\\-screen\nsets the output logical screen large enough to include all input logical\nscreens.\n.Op \\-\\-screen\nis a synonym for\n.Op \\-\\-logical\\-screen .\n'\n.Sp\n.TP\n.Oa \\-p x\\fR,\\fIy\n.TP\n.Oa \\-\\-position x\\fR,\\fIy\n'\nSet the following frames' positions to\n.RI ( x , y ).\n.Op \\-\\-no\\-position\nmeans\n.Op \\-\\-position \" 0,0.\"\nNormally,\n.Oa \\-\\-position x\\fR,\\fIy\nplaces every succeeding frame exactly at \\fIx\\fR,\\fIy\\fR. However, if an\nentire animation is input, \\fIx\\fR,\\fIy\\fR is treated as the position for\nthe animation.\n'\n.Sp\n.TP\n.Op \\-\\-rotate\\-90\n.TP\n.Op \\-\\-rotate\\-180\n.TP\n.Op \\-\\-rotate\\-270\n'\nRotate the following frames by 90, 180, or 270 degrees.\n.Op \\-\\-no\\-rotate\nturns off any rotation.\n'\n.Sp\n.TP\n.Oa \\-t color\n.TP\n.Oa \\-\\-transparent color\n'\nMake\n.I color\ntransparent in the following frames.\n.I Color\ncan be a colormap index (0\\-255), a hexadecimal color specification\n(like \"#FF00FF\" for magenta), or slash- or comma-separated red, green\nand blue values (each between 0 and 255).\n.PD\n'\n.\\\" -----------------------------------------------------------------\n.SS Extension Options\n\nExtension options add non-visual information to the output GIF. This\nincludes names, comments, and generic extensions.\n'\n.Sp\n.PD 0\n.TP 5\n.Oa \\-\\-app\\-extension app\\-name \" \" extension\n'\nAdd an application extension named\n.I app\\-name\nand with the value\n.I extension\nto the output GIF.\n.Op \\-\\-no\\-app\\-extensions\nremoves application extensions from the input images.\n'\n.Sp\n.TP\n.Oa \\-c text\n.TP\n.Oa \\-\\-comment text\n'\nAdd a comment,\n.IR text ,\nto the output GIF. The comment will be placed before the next frame in\nthe stream.\n.Op \\-\\-no\\-comments\nremoves comments from the input images.\n'\n.Sp\n.TP\n.Oa \\-\\-extension number \" \" extension\n'\nAdd an extension numbered\n.I number\nand with the value\n.I extension\nto the output GIF.\n.I Number\ncan be in decimal, octal, hex, or it can be a single character like \\(oqn\\(cq,\nwhose ASCII value is used.\n.Op \\-\\-no\\-extensions\n(or\n.Op +x )\nremoves extensions from the input images.\n'\n.Sp\n.TP\n.Oa \\-n text\n.TP\n.Oa \\-\\-name text\n'\nSet the next frame's name to\n.IR text .\nThis name is stored as an extension in the output GIF (extension number\n0xCE, followed by the characters of the frame name).\n.Op \\-\\-no\\-names\nremoves name extensions from the input images.\n'\n.PD\n'\n.\\\" -----------------------------------------------------------------\n.SS Animation Options\n\nAnimation options apply to GIF animations, or to individual frames in GIF\nanimations. As with image options, most animation options have three forms,\n.Qo \\-\\-X ,\n.Qo \\-\\-no\\-X ,\nand\n.Qo \\-\\-same\\-X ,\nand you can give animation options multiple times; for example,\n.Xs\n\\fBgifsicle \\-b a.gif \\-d50 \"#0\" \"#1\" \\-d100 \"#2\" \"#3\"\\fR\n.Xe\nsets the delays of frames 0 and 1 to 50, and frames 2 and 3 to 100.\n'\n.Sp\n.PD 0\n.TP 5\n.Oa \\-d time\n.TP\n.Oa \\-\\-delay time\n'\nSet the delay between frames to\n.IR time\nin hundredths of a second.\n'\n.Sp\n.TP\n.Oa \\-D method\n.TP\n.Oa \\-\\-disposal method\n'\nSet the disposal method for the following frames to\n.IR method .\nA frame's disposal method determines how a viewer should remove the frame\nwhen it's time to display the next.\n.I Method\ncan be a number between 0 and 7 (although only 0 through 3 are\ngenerally meaningful), or one of these names:\n.BR none\n(leave the frame visible for future frames to build upon),\n.BR asis\n(same as \"none\"),\n.BR background \" (or \" bg \")\"\n(replace the frame with the background), or\n.BR previous\n(replace the frame with the area from the previous displayed frame).\n.Op \\-\\-no\\-disposal\nmeans\n.Op \\-\\-disposal = none .\n'\n.Sp\n.TP\n.Op \\-l \"[\\fIcount\\fR]\"\n.TP\n.Op \\-\\-loopcount \"[=\\fIcount\\fR]\"\n'\nSet the Netscape loop extension to\n.IR count .\n.I Count\nis an integer, or\n.B forever\nto loop endlessly. If you supply a\n.Op \\-\\-loopcount\noption without specifying\n.IR count ,\nGifsicle will use\n.BR forever .\n.Op \\-\\-no\\-loopcount\n(the default) turns off looping.\n.Sp\nSet the loop count to one less than the number of times you want the\nanimation to run. An animation with\n.Op \\-\\-no\\-loopcount\nwill show every frame once;\n.Op \\-\\-loopcount =1\nwill loop once, thus showing every frame twice; and so forth.\nNote that\n.Op \\-\\-loopcount =0\nis equivalent to\n.Op \\-\\-loopcount =forever,\nnot\n.Op \\-\\-no\\-loopcount .\n'\n.Sp\n.TP\n.Op \\-O \"[\\fIlevel\\fR]\"\n.TP\n.Op \\-\\-optimize \"[=\\fIlevel\\fR]\"\n'\nAttempt to shrink the file sizes of GIF animations.\n.I Level\ndetermines how much optimization is done; higher levels take longer, but\nmay have better results. There are currently three levels:\n.Sp\n.RS\n.TP 5\n.Op \\-O1\nStore only the changed portion of each image. This is the default.\n.TP 5\n.Op \\-O2\nStore only the changed portion of each image, and use transparency.\n.TP 5\n.Op \\-O3\nTry several optimization methods (usually slower, sometimes better results).\n.Sp\n.PP\nOther optimization flags provide finer-grained control.\n.Sp\n.TP 5\n.Op \\-Okeep-empty\nPreserve empty transparent frames (they are dropped by default).\n.Sp\n.PP\nYou may also be interested in other options for shrinking GIFs, such as\n.Op \\-k ,\n.Op \\-\\-lossy ,\nand\n.Op \\-\\-no\\-extensions .\nNote that\n.Op \\-O\ndoes not guarantee to shrink file size, and in rare cases, even\n.Op \\-O3\nmay actually enlarge file size.\n.RE\n'\n.Sp\n.TP 5\n.Oa \\-U\n.TP\n.Oa \\-\\-unoptimize\n'\nUnoptimize GIF animations into an easy-to-edit form.\n.Sp\nGIF animations are often optimized (see\n.Op \\-\\-optimize )\nto make them smaller and faster to load, which unfortunately makes them\ndifficult to edit.\n.Op \\-\\-unoptimize\nchanges optimized input GIFs into unoptimized GIFs, where each frame is a\nfaithful representation of what a user would see at that point in the\nanimation.\n.RE\n'\n.PD\n'\n.\\\" -----------------------------------------------------------------\n.SS Image Transformation Options\n'\nImage transformation options apply to entire GIFs as they are read or\nwritten. They can be turned off with\n.Qo \\-\\-no\\-option .\n'\n.Sp\n.PD 0\n.TP 5\n.Oa \\-\\-resize width x height\n'\nResize the output GIF to the given\n.IR width \" and \" height .\nIf\n.I width\nor\n.I height\nis an underscore \\(oq_\\(cq, that dimension is chosen so that the\naspect ratio remains unchanged.\nResizing happens after all input frames have been combined and before\noptimization. Resizing uses logical screen dimensions; if\nthe input stream has an unusual logical screen (many GIF displayers ignore\nlogical screens), you may want to provide\n.Op \\-\\-no\\-logical\\-screen\n(or\n.Op +S )\nto reset it so\n.B gifsicle\nuses image dimensions instead. See also\n.Op \\-\\-resize\\-method .\n'\n.Sp\n.TP\n.Oa \\-\\-resize\\-width width\n.TP\n.Oa \\-\\-resize\\-height height\n'\nResize to a given width or height, preserving aspect ratio. Equivalent to\n.Oa \\-\\-resize width x_\nor\n.Oa \\-\\-resize \"\" _x height .\n'\n.Sp\n.TP\n.Oa \\-\\-resize\\-fit width x height\n.TP\n.Oa \\-\\-resize\\-touch width x height\n'\nResize the output GIF to fit within a rectangle with dimensions\n.IR width x height .\nThe aspect ratio remains unchanged. The\n.Op \\-\\-resize\\-fit\noption only shrinks the image\\(emno resize is performed if the GIF already\nfits within the rectangle. Either\n.I width\nor\n.I height\nmay be an underscore \\(oq_\\(cq, which leaves that dimension unconstrained.\n'\n.Sp\n.TP\n.Oa \\-\\-resize\\-fit\\-width width\n.TP\n.Oa \\-\\-resize\\-fit\\-height height\n.TP\n.Oa \\-\\-resize\\-touch\\-width width\n.TP\n.Oa \\-\\-resize\\-touch\\-height height\n'\nLike\n.Oa \\-\\-resize\\-fit\nand\n.Op \\-\\-resize\\-touch ,\nbut constrains only one dimension.\n'\n.Sp\n.TP\n.Oa \\-\\-scale Xfactor [x Yfactor ]\n'\nScale the output GIF's width and height by\n.IR Xfactor \" and \" Yfactor .\nIf\n.I Yfactor\nis not given, it defaults to\n.IR Xfactor .\nScaling happens after all input frames have been combined and before\noptimization.\n'\n.Sp\n.TP\n.Oa \\-\\-resize\\-method method\n'\nSet the method used to resize images. The \\(oqsample\\(cq method runs\nvery quickly, but when shrinking images, it produces noisy results.\nThe \\(oqmix\\(cq method is somewhat slower, but produces better-looking\nresults. The default method is\ncurrently \\(oqmix\\(cq.\n.RS\n.Sp\n.PP\nDetails: The resize methods differ most when shrinking images. The\n\\(oqsample\\(cq method is a point sampler: each pixel position in the\noutput image maps to exactly one pixel position in the input. When\nshrinking, full rows and columns from the input are dropped. The other\nmethods use all input pixels, which generally produces better-looking\nimages. The \\(oqbox\\(cq method, a box sampler, is faster than the more\ncomplex filters and produces somewhat sharper results, but there will\nbe anomalies when shrinking images by a small amount in one dimension.\n(Some output pixels will correspond to exactly 1 input row or column,\nwhile others will correspond to exactly 2 input rows or columns.) The\n\\(oqmix\\(cq method is a full bilinear interpolator. This is slower and\nproduces somewhat blurrier results, but avoids anomalies.\n.Sp\n.PP\nGifsicle also supports more complex resamplers, including\nCatmull-Rom cubic resampling (\\(oqcatrom\\(cq), the Mitchell-Netravali\nfilter (\\(oqmitchell\\(cq), a 2-lobed Lanczos filter\n(\\(oqlanczos2\\(cq), and a 3-lobed Lanczos filter (\\(oqlanczos3\\(cq).\nThese filters are slower still, but can give sharper, better results.\n.RE\n'\n.Sp\n.TP\n.Oa \\-\\-resize\\-colors n\n'\nAllow Gifsicle to add intermediate colors when resizing images.\nNormally, Gifsicle's resize algorithms use input images' color\npalettes without changes. When shrinking images with very few colors\n(e.g., pure black-and-white images), adding intermediate colors can\nimprove the results. Example:\n.Oa \\-\\-resize\\-colors 64\nallows Gifsicle to add intermediate colors for images that have fewer\nthan 64 input colors.\n.PD\n'\n.\\\" -----------------------------------------------------------------\n.SS Color Options\n'\nColor options apply to entire GIFs as they are read or\nwritten. They can be turned off with\n.Qo \\-\\-no\\-option .\n.Sp\n.PD 0\n.TP 5\n.Oa \\-k num\n.TP\n.Oa \\-\\-colors num\n'\nReduce the number of distinct colors in each output GIF to\n.I num\nor less.\n.I Num\nmust be between 2 and 256. This can be used to shrink output GIFs or\neliminate any local color tables.\n.Sp\nNormally, an adaptive group of colors is chosen from the existing\ncolor table. You can affect this process with the\n.Op \\-\\-color\\-method\noption or by giving your own colormap with\n.Op \\-\\-use\\-colormap .\nGifsicle may need to add an additional color (making\n.IR num +1\nin all) if there is transparency in the image.\n'\n.Sp\n.TP\n.Oa \\-\\-color\\-method method\n'\nDetermine how a smaller colormap is chosen.\n.RB \\(oq diversity \\(cq,\nthe default, is\n.BR xv (1)'s\ndiversity algorithm, which uses a strict subset of the existing colors\nand generally produces good results.\n.RB \\(oq blend\\-diversity \\(cq\nis a modification of this: some color values are blended from groups of\nexisting colors.\n.RB \\(oq median\\-cut \\(cq\nis the median cut algorithm described by Heckbert.\n.Op \\-\\-method\nis a synonym for\n.Op \\-\\-color\\-method .\n'\n.Sp\n.TP 5\n.Oa \\-f\n.TP\n.Op \\-\\-dither \"[=\\fImethod\\fR]\"\n'\nWhen\n.Op \\-\\-dither\nis on and the colormap is changed, combinations of colors are used to\napproximate missing colors. This looks better, but makes bigger files\nand can cause animation artifacts, so it is off by default.\n.Sp\nSpecify a dithering method with the optional \\fImethod\\fR argument.\nThe default method,\n.RB \\(oq floyd-steinberg \\(cq,\nuses Floyd-Steinberg error\ndiffusion. This usually looks best, but can cause animation artifacts,\nbecause dithering choices will vary from frame to frame.\nThe\n.RB \\(oq atkinson \\(cq\nmethod uses Atkinson error diffusion, which is a variant of Floyd-Steinberg.\nIt offers a more localized dithering pattern, which can be useful for\nimages with large areas of solid color.\nGifsicle also\nsupports ordered dithering methods that avoid animation artifacts.\nThe\n.RB \\(oq ro64 \\(cq\nmethod uses a\nlarge, random-looking pattern and generally produces good results. The\n.RB \\(oq o3 \\(cq,\n.RB \\(oq o4 \\(cq,\nand\n.RB \\(oq o8 \\(cq\nmethods use smaller, more\nregular patterns. The\n.RB \\(oq ordered \\(cq\nmethod chooses a good ordered\ndithering algorithm. For special effects, try the halftone methods\n.RB \\(oq halftone \\(cq,\n.RB \\(oq squarehalftone \\(cq,\nand\n.RB \\(oq diagonal \\(cq.\nSome methods take optional parameters using commas. The halftone methods\ntake a cell size and a color limit:\n.RB \\(oq halftone,10,3 \\(cq\ncreates 10-pixel wide halftone cells where each cell uses up to 3\ncolors.\n'\n.Sp\n.TP 5\n.Oa \\-\\-gamma gamma\n'\nSet the gamma correction to\n.IR gamma ,\nwhich can be a real number or\n.RB \\(oq srgb \\(cq.\nRoughly speaking, higher\nnumbers exaggerate shadows and lower numbers exaggerate highlights.\nThe default is the function defined by the standard sRGB color space,\nwhich usually works well. (Its effects are similar to\n\\fB\\-\\-gamma\\fP=2.2.) Gifsicle uses gamma correction when choosing a\ncolor palette (\\fB\\-\\-colors\\fP) and when dithering\n(\\fB\\-\\-dither\\fP).\n'\n.Sp\n.TP\n.Op \\-\\-lossy \"[=\\fIlossiness\\fR]\"\n'\nAlter image colors to shrink output file size at the cost of artifacts\nand noise.\n.I Lossiness\ndetermines how many artifacts are allowed; higher values can result\nin smaller file sizes, but cause more artifacts. The default\n.I lossiness\nis 20.\n'\n.Sp\n.PD 0\n.TP\n.Oa \\-\\-change\\-color color1 \" \" color2\n'\nChange\n.I color1\nto\n.I color2\nin the following input GIFs. (The\n.I color\narguments have the same forms as in the\n.Op \\-t\noption.) Change multiple colors by giving the option multiple\ntimes. Color changes don't interfere with one another, so you can safely\nswap two colors with\n.Qa \\-\\-change\\-color \"color1 color2\" \\-\\-change\\-color \"color2 color1\" .\nThey all take effect as an input GIF is read.\n.Op \\-\\-no\\-change\\-color\ncancels all color changes.\n'\n.Sp\n.TP\n.Oa \\-\\-transform\\-colormap command\n'\n.I Command\nshould be a shell command that reads from standard input and writes to\nstandard output. Each colormap in the output GIF is translated into text\ncolormap format (see\n.Op \\-\\-use\\-colormap\nbelow) and piped to the command. The output that command generates\n(which should also be in text colormap format) will replace the input\ncolormap. The replacement doesn't consider color matching, so pixels\nthat used color slot\n.I n\nin the input will still use color slot\n.I n\nin the output.\n'\n.Sp\n.TP\n.Oa \\-\\-use\\-colormap colormap\n'\nChange the image to use\n.IR colormap .\nEach pixel in the image is changed to the closest match in\n.I colormap\n(or, if\n.Op \\-\\-dither\nis on, to a dithered combination of colors in\n.IR colormap \").\"\n.I Colormap\ncan be\n.BR web\nfor the 216-color \\(lqWeb-safe palette\\(rq;\n.BR gray\nfor grayscale;\n.BR bw\nfor black-and-white; or the name of a file. That file should either be a\ntext file (the format is described below) or a GIF file, whose global\ncolormap will be used. If\n.Op \\-\\-colors\\fR=\\fIN\nis also given, an\n.IR N \\-sized\nsubset of\n.I colormap\nwill be used.\n.Sp\nText colormap files use this format:\n.Es\n; each non-comment line represents one color, \"red green blue\"\n; each component should be between 0 and 255\n0 0 0            ; like this\n255 255 255\n; or use web hex notation\n#ffffff          ; like this\n.Ee\n'\n.PD\n.PP\n.br\n'\n.SH EXAMPLES\n'\nFirst, let's create an animation, \\(oqanim.gif\\(cq:\n.Es\n\\fBgifsicle a.gif b.gif c.gif d.gif > anim.gif\\fR\n.Ee\nThis animation will move very quickly: since we didn't specify a delay, a\nbrowser will cycle through the frames as fast as it can. Let's slow it down\nand pause .5 seconds between frames, using the\n.Op \\-\\-delay\noption.\n.Es\n\\fBgifsicle \\-\\-delay 50 a.gif b.gif c.gif d.gif > anim.gif\\fR\n.Ee\nIf we also want the GIF to loop three times, we can use\n.Op \\-\\-loopcount :\n.Es\n\\fBgifsicle \\-d 50 \\-\\-loop=3 a.gif b.gif c.gif d.gif > anim.gif\\fR\n.Ee\n(Rather than type\n.Op \\-\\-delay\nagain, we used its short form,\n.Op \\-d .\nMany options have short forms; you can see them by running\n.RB \\(oq \"gifsicle \\-\\-help\" \\(cq.\nWe also abbreviated\n.Op \\-\\-loopcount\nto\n.Op \\-\\-loop ,\nwhich is OK since no other option starts with \\(oqloop\\(cq.)\n.PP\nTo explode \\(oqanim.gif\\(cq into its component frames:\n.Es\n\\fBgifsicle \\-\\-explode anim.gif\\fR\n.br\n\\fBls anim.gif*\\fR\n.br\nanim.gif  anim.gif.000  anim.gif.001  anim.gif.002  anim.gif.003\n.Ee\nTo optimize \\(oqanim.gif\\(cq:\n.Es\n\\fBgifsicle \\-b \\-O2 anim.gif\\fR\n.Ee\nTo change the second frame of \\(oqanim.gif\\(cq to \\(oqx.gif\\(cq:\n.Es\n\\fBgifsicle \\-b \\-\\-unoptimize \\-O2 anim.gif \\-\\-replace \"#1\" x.gif\\fR\n.Ee\n.Op \\-\\-unoptimize\nis used since \\(oqanim.gif\\(cq was optimized in the last step. Editing\nindividual frames in optimized GIFs is dangerous without\n.Op \\-\\-unoptimize ;\nframes following the changed frame could be corrupted by the change.\nOf course, this might be what you want.\n.PP\nNote that\n.Op \\-\\-unoptimize\nand\n.Op \\-\\-optimize\ncan be on simultaneously.\n.Op \\-\\-unoptimize\naffects\n.I input\nGIF files, while\n.Op \\-\\-optimize\naffects\n.I output\nGIF files.\n.PP\nTo print information about the first and fourth frames of \\(oqanim.gif\\(cq:\n.Es\n\\fBgifsicle \\-I \"#0\" \"#3\" < anim.gif\\fR\n.Ee\nTo make black the transparent color in all the GIFs in the current\ndirectory, and also print information about each:\n.Es\n\\fBgifsicle \\-bII \\-\\-trans \"#000000\" *.gif\\fR\n.Ee\nGiving\n.Op \\-I\ntwice forces normal output to occur. With only one\n.Op \\-I ,\nthe GIFs would not be modified.\n.PP\nTo change \\(oqanim.gif\\(cq to use a 64-color subset of the Web-safe palette:\n.Es\n\\fBgifsicle \\-b \\-\\-colors=64 \\-\\-use\\-col=web anim.gif\\fR\n.Ee\nTo make a dithered black-and-white version of \\(oqanim.gif\\(cq:\n.Es\n\\fBgifsicle \\-\\-dither \\-\\-use\\-col=bw anim.gif > anim-bw.gif\\fR\n.Ee\n.PP\nTo overlay one GIF atop another\\*Eproducing a one-frame output GIF that\nlooks like the superposition of the two inputs\\*Euse\n.B gifsicle\ntwice:\n.Es\n\\fBgifsicle bottom.gif top.gif | gifsicle \\-U \"#1\" > result.gif\\fR\n.Ee\n'\n.SH BUGS\n'\nSome optimized output GIFs may appear incorrectly on some GIF\nimplementations (for example, Java's); see the\n.Op \\-\\-careful\noption.\n.PP\nPlease email suggestions, additions, patches and bugs to\nekohler@gmail.com.\n'\n.SH \"SEE ALSO\"\n'\nFor a tutorial on GIF images and animations, you might try some of the\nresources listed on-line at webreference\\%.com:\n.br\nhttp://www.webreference.com/authoring/graphics/animation\\|.html\n'\n.SH AUTHORS\n.na\nEddie Kohler <ekohler@gmail.com>\n.br\nhttp://www.read.seas.harvard.edu/~kohler/\n.br\nHe wrote it.\n.PP\nAnne Dudfield <annied@frii.com>\n.br\nhttp://www.frii.com/~annied/\n.br\nShe named it.\n.PP\nHans Dinsen-Hansen <dino@danbbs.dk>\n.br\nhttp://www.danbbs.dk/~dino/\n.br\nAdaptive tree method for GIF writing.\n.PP\nKornel Lesin\\*[']ski\n.br\n.Op \\-\\-lossy\noption.\n.PP\nhttp://www.lcdf.org/gifsicle/\n.br\nThe\n.B gifsicle\nhome page.\n'\n"
        },
        {
          "name": "gifview.1",
          "type": "blob",
          "size": 5.880859375,
          "content": ".\\\" -*- mode: nroff -*-\n.ds V 1.95\n.ds E \" \\-\\- \n.if t .ds E \\(em\n.de Op\n.BR \"\\\\$1\" \"\\\\$2\" \"\\\\$3\" \"\\\\$4\" \"\\\\$5\" \"\\\\$6\"\n..\n.de Oa\n.IR \"\\fB\\\\$1\\& \\|\\fI\\\\$2\" \"\\\\$3\" \"\\\\$4\" \"\\\\$5\" \"\\\\$6\"\n..\n.de Qo\n.RB ` \"\\\\$1\" \"'\\\\$2\"\n..\n.de Sp\n.if n .sp\n.if t .sp 0.4\n..\n.de Es\n.Sp\n.RS 5\n.nf\n..\n.de Ee\n.fi\n.RE\n.PP\n..\n.TH GIFVIEW 1 \"11 July 2017\" \"Version \\*V\"\n.SH NAME\ngifview \\- displays GIF images and animations on the X window system\n.SH SYNOPSIS\n.B gifview\n\\%[\\fB--display\\fP \\fIdisplay\\fP]\n\\%[options]\n\\%[filenames and frames].\\|.\\|.\n'\n.SH DESCRIPTION\n.B gifview\ndisplays GIF image files on workstations and terminals running the X Window\nSystem.\n.B gifview\nunderstands multi-image GIFs, which can be displayed either as slideshows\nor as animations.\n'\n.SH INTERACTION\n.B gifview\nwindows recognize several keystrokes and button commands. Many of them are\nonly useful for multi-image GIFs.\n.TP 12\n.RB \"Space or \" n\n'\nGo to the next frame.\n.TP\n.BR b \" or \" p\nGo to the previous frame.\n.TP\n.BR r \" or \" <\nGo to the first frame.\n.TP\n.BR >\nGo to the last frame.\n.TP\nESC\nStop the animation.\n.TP\n.BR s \" or \" a\nToggle between animation and slideshow mode.\n.TP\n.BR u\nToggle between normal and unoptimized mode.\n.TP\nBackspace\n'\nDelete this window.\n.TP\n.B q\nQuit\n.BR gifview .\n'\n.PP\nLeft-clicking on a window goes to the next frame; right-clicking on a\nwindow deletes that window.\n'\n.SH COMMAND LINE\n\n.BR gifview 's\ncommand line consists of\n.IR \"GIF input files\" \nand\n.IR options .\nMost options start with a dash (\\-) or plus (+); frame selections, a kind\nof option, start with a number sign (#). Anything else is a GIF input file.\n.PP\n.B gifview\ndisplays one window for each GIF input file you specify. If no GIF input\nfile is given, or you give the special filename `\\-', it reads from the\nstandard input.\n'\n.SH OPTIONS\n\n.PD 0\n.TP 5\n.Op \\-\\-animate \", \" \\-a\n'\nAnimate multi-image GIFs by default. Normally, multi-image GIFs first\nappear in slideshow mode. You can always use the\n.RB ` a '\nkeystroke to toggle between modes. This option has a converse,\n.Qo \\-\\-no\\-animate\nor\n.Qo +a .\n'\n.Sp\n.TP 5\n.Op \\-\\-unoptimize \", \" \\-U\n'\nDisplay multi-image GIFs as ``unoptimized'', which shows a faithful\nrepresentation of what a user will see at each frame of an animation. See\n.BR gifsicle (1)\nfor a more detailed description of unoptimization. This option has a\nconverse,\n.Qo \\-\\-no\\-unoptimize\nor\n.Qo +U .\nGIFs are always displayed unoptimized in animation mode.\n'\n.Sp\n.TP 5\n.Oa \\-d display\n.TP\n.Oa \\-\\-display display\n'\nSets the X display to\n.IR display .\nThis option must come before any GIF files.\n'\n.Sp\n.TP 5\n.Oa \\-\\-name name\n'\nSets the application name under which resources are found, rather than\nthe default of \"gifview\". Since\n.B gifview\nitself does not use the resource database, this is mostly useful for\ncommunication with your window manager.\n'\n.Sp\n.TP 5\n.Oa \\-\\-geometry geometry\n'\nSet the size and position of\n.BR gifview 's\nwindows. This is a standard X option. At most one\n.Op \\-\\-geometry\noption can be given per window (that is, per input GIF file).\n'\n.Sp\n.TP 5\n.Oa \\-\\-title title\n'\nSets the\n.B gifview\nwindow's title. The default is \"gifview\", followed by information about the\ncurrently displayed file and frame.\n'\n.Sp\n.TP 5\n.Oa \\-w window\n.TP\n.Oa \\-\\-window window\n'\nDisplay the next GIF input in an existing X window, instead of making a new\ntop-level window. This way, you can use\n.B gifview\nto display animated GIFs in a window you created with another program. The\n.I window\nargument should be an integer\n.RB ( gifview\nwill use that window ID)\nor `root'\n.RB ( gifview\nwill use the root window).\n'\n.Sp\n.TP 5\n.Oa \\-\\-new\\-window window\n'\nDisplay the next GIF input in a new child of an existing X window. This\nchild window will disappear when\n.B gifview\nexits. The\n.I window\nargument should be an integer\n.RB ( gifview\nwill use that window ID)\nor `root'\n.RB ( gifview\nwill use the root window).\n'\n.Sp\n.TP 5\n.Op \\-\\-install\\-colormap \", \" \\-i\n'\nUse a private colormap for each window (if you are using a PseudoColor\ndisplay). This avoids polluting the existing colormap, and may produce\nbetter results if your colormap is full, but causes annoying colormap\nflashing.\n'\n.Sp\n.TP 5\n.Oa \\-\\-background color\n.TP\n.Oa \\-\\-bg color\n'\nSet the background color, which is used\nfor transparent pixels.\n'\n.Sp\n.TP 5\n.Oa \\-\\-min\\-delay delay\n'\nSet the minimum delay between frames to\n.IR delay ,\nwhich is measured in hundredths of a second. Default is 0.\n'\n.Sp\n.TP 5\n.Oa \\-\\-fallback\\-delay delay\n'\nSet the frame delay of GIFs that do not specify a delay value\nor have a delay of 0.\nThe final value is still subject to the value of \\-\\-min\\-delay.\nLike \\-\\-min\\-delay,\n.IR delay\nis measured in hundredths of a second. Default is 0.\n'\n.Sp\n.TP 5\n.Op \\-\\-no\\-interactive \", \" \\+e\n'\nDon't pay attention to mouse buttons or keystrokes.\n'\n.Sp\n.TP 5\n.Op \\-\\-memory\\-limit lim\n'\nCache at most\n.I lim\nmegabytes of images in memory when animating. Default is 40.\n'\n.Sp\n.TP 5\n.Op \\-\\-help\n'\nPrint usage information and exit.\n'\n.Sp\n.TP\n.Op \\-\\-version\n'\nPrint the version number and some quickie warranty information and exit.\n'\n.PD\n'\n.\\\" -----------------------------------------------------------------\n.SS Frame Selections\n\nA frame selection tells\n.B gifview\nwhich frame to initially display from the current input file. They are\nuseful only for animations, as non-animated GIFs only have one frame. Frame\nselections can only be displayed in slideshow mode.\n.Sp\n.PD 0\n.TP 13\n.BI # num\n'\nSelect frame \\fInum\\fR. (The first frame is\n.Qo #0 .\nNegative numbers count backwards from the last frame, which is\n.Qo #-1 .)\n'\n.TP 13\n.BI # name\n'\nSelect the frame named \\fIname\\fR.\n.PD\n.PP\nIf you give two or more frame selections, you will get one window per frame\nselection.\n'\n.SH SEE ALSO\n\n.BR gifsicle (1)\n'\n.SH BUGS\n\nPlease email suggestions, additions, patches and bugs to\nekohler@gmail.com.\n'\n.SH AUTHORS\n.na\nEddie Kohler, ekohler@gmail.com\n.br\nhttp://www.read.seas.harvard.edu/~kohler/\n.PP\nhttp://www.lcdf.org/gifsicle/\n.br\nThe \n.B gifsicle\nhome page.\n'\n"
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "logo.gif",
          "type": "blob",
          "size": 8.4990234375,
          "content": null
        },
        {
          "name": "logo1.gif",
          "type": "blob",
          "size": 0.8017578125,
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}