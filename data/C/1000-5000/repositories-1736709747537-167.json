{
  "metadata": {
    "timestamp": 1736709747537,
    "page": 167,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "moby/hyperkit",
      "stars": 3622,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1318359375,
          "content": "/.opam\n/build/\n_build\n/src/include/xhyve/dtrace.h\n/test/vmlinuz\n/test/initrd\n/test/initrd.gz\n/test/disk.dmg\n/test/disk.qcow2\nInfo.plist"
        },
        {
          "name": "CODINGSTYLE.md",
          "type": "blob",
          "size": 0.6044921875,
          "content": "The majority of code is derived from `bhyve` and therefore the general\ncoding style should follow the\n[FreeBSD coding style guidelines](https://www.freebsd.org/cgi/man.cgi?query=style&sektion=9)\n(which are also accessible via `man 9 style` on Mac OS X).\n\nYou may use tools like\n[uncrustify](http://uncrustify.sourceforge.net/) with this\n[config file](https://raw.githubusercontent.com/freebsd/pkg/master/freebsd.cfg)\nfor *new* code, though the result may not be perfect.\n\nKeep in mind that, especially for most of the `bhyve` derived code, it\nis more important to try to keep the code in line with `bhyve` if\npossible.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.9052734375,
          "content": "# Contributing to Docker open source projects\n\nWant to hack on this project? Awesome! Here are instructions to get you started.\n\nThis project is a part of the [Docker](https://www.docker.com) project, and follows\nthe same rules and principles. If you're already familiar with the way\nDocker does things, you'll feel right at home.\n\nOtherwise, go read Docker's\n[contributions guidelines](https://github.com/docker/docker/blob/master/CONTRIBUTING.md),\n[issue triaging](https://github.com/docker/docker/blob/master/project/ISSUE-TRIAGE.md),\n[review process](https://github.com/docker/docker/blob/master/project/REVIEWING.md) and\n[branches and tags](https://github.com/docker/docker/blob/master/project/BRANCHES-AND-TAGS.md).\n\nFor an in-depth description of our contribution process, visit the\ncontributors guide: [Understand how to contribute](https://docs.docker.com/opensource/workflow/make-a-contribution/)\n\n### Sign your work\n\nThe sign-off is a simple line at the end of the explanation for the patch. Your\nsignature certifies that you wrote the patch or otherwise have the right to pass\nit on as an open-source patch. The rules are pretty simple: if you can certify\nthe below (from [developercertificate.org](http://developercertificate.org/)):\n\n```\nDeveloper Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n660 York Street, Suite 102,\nSan Francisco, CA 94110 USA\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n```\n\nThen you just add a line to every git commit message:\n\n    Signed-off-by: Joe Smith <joe.smith@email.com>\n\nUse your real name (sorry, no pseudonyms or anonymous contributions.)\n\nIf you set your `user.name` and `user.email` git configs, you can sign your\ncommit automatically with `git commit -s`.\n"
        },
        {
          "name": "Info.plist.in",
          "type": "blob",
          "size": 0.8193359375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n\t<key>CFBundleDisplayName</key>\n\t<string>HyperKit</string>\n\t<key>CFBundleIdentifier</key>\n\t<string>com.moby.hyperkit</string>\n\t<key>CFBundleInfoDictionaryVersion</key>\n\t<string>6.0</string>\n\t<key>CFBundleName</key>\n\t<string>HyperKit</string>\n\t<key>CFBundlePackageType</key>\n\t<string>APPL</string>\n\t<key>CFBundleShortVersionString</key>\n\t<string>%VERSION%</string>\n\t<key>CFBundleSupportedPlatforms</key>\n\t<array>\n\t\t<string>MacOSX</string>\n\t</array>\n\t<key>CFBundleVersion</key>\n\t<string>0.0.0</string>\n\t<key>LSApplicationCategoryType</key>\n\t<string>public.app-category.developer-tools</string>\n\t<key>LSMinimumSystemVersion</key>\n\t<string>10.11</string>\n</dict>\n</plist>\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.2958984375,
          "content": "Copyright the authors and contributors. See individual source files\nfor details.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions\n are met:\n 1. Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n 2. Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n\n THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND\n ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\n FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n SUCH DAMAGE.\n\n"
        },
        {
          "name": "MAINTAINERS",
          "type": "blob",
          "size": 1.7109375,
          "content": "# HyperKit maintainers file\n#\n# This file describes who runs the docker/hyperkit project and how.\n# This is a living document - if you see something out of date or missing, speak up!\n#\n# It is structured to be consumable by both humans and programs.\n# To extract its contents programmatically, use any TOML-compliant\n# parser.\n#\n# This file is compiled into the MAINTAINERS file in docker/opensource.\n#\n[Org]\n\t[Org.\"Core maintainers\"]\n\t\tpeople = [\n\t\t\t\"avsm\",\n\t\t\t\"djs55\",\n\t\t\t\"dsheets\",\n\t\t\t\"gdevillele\",\n\t\t\t\"ijc\",\n\t\t\t\"justincormack\",\n\t\t\t\"MagnusS\",\n\t\t\t\"rn\",\n\t\t\t\"samoht\",\n\t\t\t\"ebriney\",\n\t\t]\n\n[people]\n\n# A reference list of all people associated with the project.\n# All other sections should refer to people by their canonical key\n# in the people section.\n\n\t# ADD YOURSELF HERE IN ALPHABETICAL ORDER\n\n\t[people.avsm]\n\tName = \"Anil Madhavapeddy\"\n\tEmail = \"anil@recoil.org\"\n\tGitHub = \"avsm\"\n\n\t[people.djs55]\n\tName = \"David Scott\"\n\tEmail = \"dave.scott@docker.com\"\n\tGitHub = \"djs55\"\n\n\t[people.dsheets]\n\tName = \"David Sheets\"\n\tEmail = \"dsheets@docker.com\"\n\tGitHub = \"dsheets\"\n\n\t[people.gdevillele]\n\tName = \"Gaetan de Villele\"\n\tEmail = \"gdevillele@gmail.com\"\n\tGitHub = \"gdevillele\"\n\n\t[people.ijc]\n\tName = \"Ian Campbell\"\n\tEmail = \"ian.campbell@docker.com\"\n\tGitHub = \"ijc\"\n\n\t[people.justincormack]\n\tName = \"Justin Cormack\"\n\tEmail = \"justin.cormack@docker.com\"\n\tGitHub = \"justincormack\"\n\n\t[people.MagnusS]\n\tName = \"Magnus Skjegstad\"\n\tEmail = \"magnus@skjegstad.com\"\n\tGitHub = \"MagnusS\"\n\n\t[people.rn]\n\tName = \"Rolf Neugebauer\"\n\tEmail = \"rn@rneugeba.io\"\n\tGitHub = \"rn\"\n\n\t[people.samoht]\n\tName = \"Thomas Gazagnaire\"\n\tEmail = \"thomas@gazagnaire.org\"\n\tGitHub = \"samoht\"\n\n\t[people.ebriney]\n\tName = \"Emmanuel Briney\"\n\tEmail = \"emmanuel.briney@docker.com\"\n\tGitHub = \"ebriney\"\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 6.1455078125,
          "content": "GIT_VERSION := $(shell git describe --abbrev=6 --dirty --always --tags)\nGIT_VERSION_SHA1 := $(shell git rev-parse HEAD)\n\nifeq ($V, 1)\n\tVERBOSE =\nelse\n\tVERBOSE = @\nendif\n\ninclude config.mk\n\nVMM_LIB_SRC := \\\n\tsrc/lib/vmm/intel/vmcs.c \\\n\tsrc/lib/vmm/intel/vmx.c \\\n\tsrc/lib/vmm/intel/vmx_msr.c \\\n\t\\\n\tsrc/lib/vmm/io/vatpic.c \\\n\tsrc/lib/vmm/io/vatpit.c \\\n\tsrc/lib/vmm/io/vhpet.c \\\n\tsrc/lib/vmm/io/vioapic.c \\\n\tsrc/lib/vmm/io/vlapic.c \\\n\tsrc/lib/vmm/io/vpmtmr.c \\\n\tsrc/lib/vmm/io/vrtc.c \\\n\t\\\n\tsrc/lib/vmm/vmm.c \\\n\tsrc/lib/vmm/vmm_api.c \\\n\tsrc/lib/vmm/vmm_callout.c \\\n\tsrc/lib/vmm/vmm_host.c \\\n\tsrc/lib/vmm/vmm_instruction_emul.c \\\n\tsrc/lib/vmm/vmm_ioport.c \\\n\tsrc/lib/vmm/vmm_lapic.c \\\n\tsrc/lib/vmm/vmm_mem.c \\\n\tsrc/lib/vmm/vmm_stat.c \\\n\tsrc/lib/vmm/vmm_util.c \\\n\tsrc/lib/vmm/x86.c\n\nHYPERKIT_LIB_SRC := \\\n\tsrc/lib/acpitbl.c \\\n\tsrc/lib/atkbdc.c \\\n\tsrc/lib/block_if.c \\\n\tsrc/lib/consport.c \\\n\tsrc/lib/dbgport.c \\\n\tsrc/lib/fwctl.c \\\n\tsrc/lib/inout.c \\\n\tsrc/lib/ioapic.c \\\n\tsrc/lib/log.c \\\n\tsrc/lib/md5c.c \\\n\tsrc/lib/mem.c \\\n\tsrc/lib/mevent.c \\\n\tsrc/lib/mptbl.c \\\n\tsrc/lib/pci_ahci.c \\\n\tsrc/lib/pci_emul.c \\\n\tsrc/lib/pci_hostbridge.c \\\n\tsrc/lib/pci_irq.c \\\n\tsrc/lib/pci_lpc.c \\\n\tsrc/lib/pci_uart.c \\\n\tsrc/lib/pci_virtio_9p.c \\\n\tsrc/lib/pci_virtio_block.c \\\n\tsrc/lib/pci_virtio_net_tap.c \\\n\tsrc/lib/pci_virtio_net_vmnet.c \\\n\tsrc/lib/pci_virtio_net_vpnkit.c \\\n\tsrc/lib/pci_virtio_rnd.c \\\n\tsrc/lib/pci_virtio_sock.c \\\n\tsrc/lib/pm.c \\\n\tsrc/lib/post.c \\\n\tsrc/lib/rtc.c \\\n\tsrc/lib/smbiostbl.c \\\n\tsrc/lib/task_switch.c \\\n\tsrc/lib/uart_emul.c \\\n\tsrc/lib/virtio.c \\\n\tsrc/lib/xmsr.c\n\nFIRMWARE_LIB_SRC := \\\n\tsrc/lib/firmware/bootrom.c \\\n\tsrc/lib/firmware/kexec.c \\\n\tsrc/lib/firmware/fbsd.c \\\n\tsrc/lib/firmware/multiboot.c\n\nHYPERKIT_SRC := src/hyperkit.c\n\nHAVE_OCAML_QCOW := $(shell if ocamlfind query qcow prometheus-app uri logs logs.fmt mirage-unix >/dev/null 2>/dev/null ; then echo YES ; else echo NO; fi)\n\nifeq ($(HAVE_OCAML_QCOW),YES)\nCFLAGS += -DHAVE_OCAML=1 -DHAVE_OCAML_QCOW=1 -DHAVE_OCAML=1\n\nLIBEV_FILE=/usr/local/lib/libev.a\nLIBEV=$(shell if test -e $(LIBEV_FILE) ; then echo $(LIBEV_FILE) ; fi )\n\n# prefix vsock file names if PRI_ADDR_PREFIX\n# is defined. (not applied to aliases)\nifneq ($(PRI_ADDR_PREFIX),)\nCFLAGS += -DPRI_ADDR_PREFIX=\\\"$(PRI_ADDR_PREFIX)\\\"\nendif\n\n# override default connect socket name if \n# CONNECT_SOCKET_NAME is defined \nifneq ($(CONNECT_SOCKET_NAME),)\nCFLAGS += -DCONNECT_SOCKET_NAME=\\\"$(CONNECT_SOCKET_NAME)\\\"\nendif\n\nOCAML_SRC := \\\n\tsrc/lib/mirage_block_ocaml.ml\n\nOCAML_C_SRC := \\\n\tsrc/lib/mirage_block_c.c\n\nOCAML_WHERE := $(shell ocamlc -where)\nOCAML_PACKS := cstruct cstruct-lwt io-page io-page.unix uri mirage-block \\\n\tmirage-block-unix qcow unix threads lwt lwt.unix logs logs.fmt   \\\n\tmirage-unix prometheus-app conduit-lwt cohttp-lwt-unix \\\n\tunix-type-representations\nOCAML_LDLIBS := -L $(OCAML_WHERE) \\\n\t$(shell ocamlfind query bigstringaf)/bigstringaf.a \\\n\t$(shell ocamlfind query bigstringaf)/libbigstringaf_stubs.a \\\n\t$(shell ocamlfind query cstruct)/cstruct.a \\\n\t$(shell ocamlfind query cstruct)/libcstruct_stubs.a \\\n\t$(shell ocamlfind query io-page)/io_page.a \\\n\t$(shell ocamlfind query io-page)/libio_page_stubs.a \\\n\t$(shell ocamlfind query io-page-unix)/io_page_unix.a \\\n\t$(shell ocamlfind query io-page-unix)/libio_page_unix_stubs.a \\\n\t$(shell ocamlfind query lwt.unix)/liblwt_unix_stubs.a \\\n\t$(shell ocamlfind query lwt.unix)/lwt_unix.a \\\n\t$(shell ocamlfind query lwt)/lwt.a \\\n\t$(shell ocamlfind query threads)/libthreadsnat.a \\\n\t$(shell ocamlfind query mirage-block-unix)/libmirage_block_unix_stubs.a \\\n\t$(shell ocamlfind query base)/libbase_stubs.a \\\n\t$(shell ocamlfind query unix-type-representations)/libunix_type_representations_stubs.a \\\n        $(LIBEV) \\\n\t-lasmrun -lunix\n\nbuild/hyperkit.o: CFLAGS += -I$(OCAML_WHERE)\nendif\n\nSRC := \\\n\t$(VMM_LIB_SRC) \\\n\t$(HYPERKIT_LIB_SRC) \\\n\t$(FIRMWARE_LIB_SRC) \\\n\t$(OCAML_C_SRC) \\\n\t$(HYPERKIT_SRC)\n\nOBJ := $(SRC:src/%.c=build/%.o) $(OCAML_SRC:src/%.ml=build/%.o)\nDEP := $(OBJ:%.o=%.d)\nINC := -Isrc/include\n\nCFLAGS += -DVERSION=\\\"$(GIT_VERSION)\\\" -DVERSION_SHA1=\\\"$(GIT_VERSION_SHA1)\\\"\n\nTARGET = build/hyperkit\n\nall: $(TARGET) | build\n\n.PHONY: clean all test test-qcow\n.SUFFIXES:\n\n-include $(DEP)\n\nbuild:\n\t@mkdir -p build\n\nsrc/include/xhyve/dtrace.h: src/lib/dtrace.d\n\t@echo gen $<\n\t$(VERBOSE) $(DTRACE) -h -s $< -o $@\n\n$(SRC): src/include/xhyve/dtrace.h\n\nbuild/%.o: src/%.c\n\t@echo cc $<\n\t@mkdir -p $(dir $@)\n\t$(VERBOSE) $(ENV) $(CC) $(CFLAGS) $(INC) $(DEF) -MMD -MT $@ -MF build/$*.d -o $@ -c $<\n\n$(OCAML_C_SRC:src/%.c=build/%.o): CFLAGS += -I$(OCAML_WHERE)\nbuild/%.o: src/%.ml\n\t@echo ml $<\n\t@mkdir -p $(dir $@)\n\t$(VERBOSE) $(ENV) ocamlfind ocamlopt -thread -package \"$(OCAML_PACKS)\" -c $< -o build/$*.cmx\n\t$(VERBOSE) $(ENV) ocamlfind ocamlopt -thread -linkpkg -package \"$(OCAML_PACKS)\" -output-obj -o $@ build/$*.cmx\n\nInfo.plist: Info.plist.in\n\tcat Info.plist.in | sed \"s/%VERSION%/$(shell git describe --tags)/\" > Info.plist\n\n$(TARGET).sym: $(OBJ) Info.plist\n\t@echo ld $(notdir $@)\n\t$(VERBOSE) $(ENV) $(LD) $(LDFLAGS) -Xlinker $(TARGET).lto.o -o $@ $(OBJ) $(LDLIBS) $(OCAML_LDLIBS) -sectcreate __TEXT __info_plist Info.plist\n\t@echo dsym $(notdir $(TARGET).dSYM)\n\t$(VERBOSE) $(ENV) $(DSYM) $@ -o $(TARGET).dSYM\n\n$(TARGET): $(TARGET).sym app.entitlements\n\t@echo strip $(notdir $@)\n\t$(VERBOSE) $(ENV) $(STRIP) $(TARGET).sym -o $@\n\t@echo sign $(notdir $@)\n\t$(VERBOSE) $(ENV) $(CODESIGN) -s - --entitlements app.entitlements --force $@\n\nclean:\n\t@rm -rf build\n\t@rm -f src/include/xhyve/dtrace.h\n\t@rm -f test/vmlinuz test/initrd.gz\n\t@rm -f test/disk.qcow2\n\ntest/vmlinuz test/initrd.gz:\n\t@cd test; ./tinycore.sh\n\ntest: $(TARGET) test/vmlinuz test/initrd.gz\n\t@(cd test && ./retry-infra-failure 5 ./test_linux.exp)\n\ntest-qcow: $(TARGET) test/vmlinuz test/initrd.gz\n\t@(cd test && ./retry-infra-failure 5 ./test_linux_qcow.exp)\n\n\n## ----------- ##\n## Artifacts.  ##\n## ----------- ##\n\n.PHONY: artifacts\nartifacts: build/LICENSE build/COMMIT\n\n.PHONY: build/LICENSE\nbuild/LICENSE:\n\t@echo \"  GEN     \" $@\n\t@find src -type f | xargs awk '/^\\/\\*-/{p=1;print FILENAME \":\";print;next} p&&/^.*\\*\\//{print;print \"\";p=0};p' > $@.tmp\n\t@opam config exec -- make -C ocaml list-licenses\n\t@cat ocaml/OCAML-LICENSES >> $@.tmp\n\t@mv $@.tmp $@\n\n.PHONY: build/COMMIT\nbuild/COMMIT:\n\t@echo \"  GEN     \" $@\n\t@git rev-parse HEAD > $@.tmp\n\t@mv $@.tmp $@\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.8291015625,
          "content": "## [HyperKit](http://github.com/moby/hyperkit)\n\n![Build Status macOS](https://circleci.com/gh/moby/hyperkit.svg?style=shield&circle-token=cf8379b302eab2bbf33821cafe164dbefb71982d)\n\n*HyperKit* is a toolkit for embedding hypervisor capabilities in your application. It includes a complete hypervisor, based on [xhyve](https://github.com/mist64/xhyve)/[bhyve](http://bhyve.org), which is optimized for lightweight virtual machines and container deployment.  It is designed to be interfaced with higher-level components such as the [VPNKit](https://github.com/moby/vpnkit) and [DataKit](https://github.com/moby/datakit).\n\nHyperKit currently only supports macOS using the [Hypervisor.framework](https://developer.apple.com/library/mac/documentation/DriversKernelHardware/Reference/Hypervisor/index.html). It is a core component of Docker Desktop for Mac.\n\n\n## Requirements\n\n* OS X 10.10.3 Yosemite or later\n* a 2010 or later Mac (i.e. a CPU that supports EPT)\n\n## Reporting Bugs\n\nIf you are using a version of Hyperkit which is embedded into a higher level application (e.g. [Docker Desktop for Mac](https://github.com/docker/for-mac)) then please report any issues against that higher level application in the first instance. That way the relevant team can triage and determine if the issue lies in Hyperkit and assign as necessary.\n\nIf you are using Hyperkit directly then please report issues against this repository.\n\n## Usage\n\n    $ hyperkit -h\n\n## Building\n\n    $ git clone https://github.com/moby/hyperkit\n    $ cd hyperkit\n    $ make\n\nThe resulting binary will be in `build/hyperkit`\n\nTo enable qcow support in the block backend an OCaml [OPAM](https://opam.ocaml.org) development\nenvironment is required with the qcow module available. A\nsuitable environment can be setup by installing `opam` and `libev`\nvia `brew` and using `opam` to install the appropriate libraries:\n\n    $ brew install opam libev\n    $ opam init\n    $ eval `opam env`\n    $ opam pin add qcow.0.11.0 git://github.com/mirage/ocaml-qcow -n\n    $ opam pin add qcow-tool.0.11.0 git://github.com/mirage/ocaml-qcow -n\n    $ opam install uri qcow.0.11.0 conduit.2.1.0 lwt.5.3.0 qcow-tool mirage-block-unix.2.12.0 conf-libev logs fmt mirage-unix prometheus-app\n\nNotes:\n\n- `opam config env` must be evaluated each time prior to building\n  hyperkit so the build will find the ocaml environment.\n- Any previous pin of `mirage-block-unix` or `qcow`\n  should be removed with the commands:\n  \n  ```sh\n  $ opam update\n  $ opam pin remove mirage-block-unix\n  $ opam pin remove qcow\n  ```\n\n## Tracing\n\nHyperKit defines a number of static DTrace probes to simplify investigation of\nperformance problems. To list the probes supported by your version of HyperKit,\ntype the following command while HyperKit VM is running:\n\n     $ sudo dtrace -l -P 'hyperkit$target' -p $(pgrep hyperkit)\n\nRefer to scripts in dtrace/ directory for examples of possible usage and\navailable probes.\n\n### Relationship to xhyve and bhyve\n\nHyperKit includes a hypervisor derived from [xhyve](http://www.xhyve.org), which in turn\nwas derived from [bhyve](http://www.bhyve.org). See the [original xhyve\nREADME](README.xhyve.md) which incorporates the bhyve README.\n\nWe try to avoid deviating from these upstreams unnecessarily in order\nto more easily share code, for example the various device\nmodels/emulations should be easily shareable.\n\n### Reporting security issues\n\nThe maintainers take security seriously. If you discover a security issue,\nplease bring it to their attention right away!\n\nPlease **DO NOT** file a public issue, instead send your report privately to\n[security@docker.com](mailto:security@docker.com).\n\nSecurity reports are greatly appreciated and we will publicly thank you for it.\nWe also like to send gifts&mdash;if you're into Docker schwag, make sure to let\nus know. We currently do not offer a paid security bounty program, but are not\nruling it out in the future.\n"
        },
        {
          "name": "README.xhyve.md",
          "type": "blob",
          "size": 10.7734375,
          "content": "# [xhyve.org](http://www.xhyve.org)\n\n![](./xhyve_logo.png)\n<!-- https://thenounproject.com/term/squirrel/57718/ -->\n\nAbout\n-----\n\nThe *xhyve hypervisor* is a port of [bhyve](http://www.bhyve.org) to OS X. It is built on top of [Hypervisor.framework](https://developer.apple.com/library/mac/documentation/DriversKernelHardware/Reference/Hypervisor/index.html) in OS X 10.10 Yosemite and higher, runs entirely in userspace, and has no other dependencies. It can run FreeBSD and vanilla Linux distributions and may gain support for other guest operating systems in the future.\n\nLicense: BSD\n\nIntroduction: [http://www.pagetable.com/?p=831](http://www.pagetable.com/?p=831)\n\nRequirements\n------------\n\n* OS X 10.10.3 Yosemite or later\n* a 2010 or later Mac (i.e. a CPU that supports EPT)\n\nInstallation\n------------\n\nIf you have homebrew, then simply:\n\n    $ brew update\n    $ brew install --HEAD xhyve\n\nThe `--HEAD` in the brew command ensures that you always get the latest changes, even if the homebrew database is not yet updated. If for any reason you don't want that simply do `brew install xhyve` .\n\nif not then:  \n\nBuilding\n--------\n    $ git clone https://github.com/mist64/xhyve\n    $ cd xhyve\n    $ make\n\nThe resulting binary will be in build/xhyve\n\nUsage\n-----\n\n    $ xhyve -h\n\n\nWhat is bhyve?\n--------------\n\nbhyve is the FreeBSD hypervisor, roughly analogous to KVM + QEMU on Linux. It has a focus on simplicity and being legacy free.\n\nIt exposes the following peripherals to virtual machines:\n\n  - Local x(2)APIC\n  - IO-APIC\n  - 8259A PIC\n  - 8253/8254 PIT\n  - HPET\n  - PM Timer\n  - RTC\n  - PCI\n    - host bridge\n    - passthrough\n    - UART\n    - AHCI (i.e. HDD and CD)\n    - VirtIO block device\n    - VirtIO networking\n    - VirtIO RNG\n\nNotably absent are sound, USB, HID and any kind of graphics support. With a focus on server virtualization this is not strictly a requirement. bhyve may gain desktop virtualization capabilities in the future but this doesn't seem to be a priority.\n\nUnlike QEMU, bhyve also currently lacks any kind of guest-side firmware (QEMU uses the GPL3 [SeaBIOS](http://www.seabios.org)), but aims to provide a compatible [OVMF EFI](http://www.linux-kvm.org/page/OVMF) in the near future. It does however provide ACPI, SMBIOS and MP Tables.\n\nbhyve architecture\n------------------\n                                                           Linux\n               I/O        VM control       FreeBSD        NetBSD\n                                                          OpenBSD\n             |     A        |     A           |              |\n             V     |        V     |           V              V\n         +-------------++-------------++-------------++-------------+\n         |             ||             ||             ||             |\n         |    bhyve    ||  bhyvectl   ||  bhyveload  || grub2-bhyve |\n         |             ||             ||             ||             |\n         |             ||             ||             ||             |\n         +-------------++-------------++-------------++-------------+\n         +----------------------------------------------------------+\n         |                        libvmmapi                         |\n         +----------------------------------------------------------+\n                                       A\n                                       |                         user\n         ------------------------------┼------------------------------\n                                       | ioctl         FreeBSD kernel\n                                       V\n                         +----------------------------+\n                         |        VMX/SVM host        |\n                         |       VMX/SVM guest        |\n                         |   VMX/SVM nested paging    |\n                         |           Timers           |\n                         |         Interrupts         |\n                         +----------------------------+\n                          vmm.ko\n\n\n**vmm.ko**\n\nThe bhyve FreeBSD kernel module. Manages VM and vCPU objects, the guest physical address space and handles guest interaction with PIC, PIT, HPET, PM Timer, x(2)APIC and I/O-APIC. Contains a minimal x86 emulator to decode guest MMIO. Executes the two innermost vCPU runloops (VMX/SVM and interrupts/timers/paging). Has backends for Intel VMX and AMD SVM. Provides an ioctl and mmap API to userspace.\n\n**libvmmapi**\n\nThin abstraction layer between the vmm.ko ioctl interface and the userspace C API.\n\n**bhyve**\n\nThe userspace bhyve component (kind of a very light-weight QEMU) that executes virtual machines. Runs the guest I/O vCPU runloops. Manages ACPI, PCI and all non in-kernel devices. Interacts with vmm.ko through libvmmapi.\n\n**bhyvectl**\n\nSomewhat superfluous utility to introspect and manage the life cycle of virtual machines. Virtual machines and vCPUs can exist as kernel objects independently of a bhyve host process. Typically used to delete VM objects after use. Odd architectural choice.\n\n**bhyveload**\n\nUserspace port of the FreeBSD bootloader. Since bhyve still lacks a firmware this is a cumbersome workaround to bootstrap a guest operating system. It creates a VM object, loads the FreeBSD kernel into guest memory, sets up the initial vCPU state and then exits. Only then a VM can be executed by bhyve.\n\n**grub2-bhyve**\n\nPerforms the same function as bhyveload but is a userspace port of [GRUB2](http://github.com/grehan-freebsd/grub2-bhyve). It is used to bootstrap guest operating systems other than FreeBSD, i.e. Linux, OpenBSD and NetBSD.\n\nSupport for Windows guests is work in progress and dependent on the EFI port.\n\n\nxhyve architecture\n------------------\n        +----------------------------------------------------------+\n        | xhyve                                                    |\n        |                                                          |\n        |                            I/O                           |\n        |                                                          |\n        |                                                          |\n        |                                                          |\n        |+--------------------------------------------------------+|\n        ||  vmm                   VMX guest                       ||\n        ||                          Timers                        ||\n        ||                        Interrupts                      ||\n        |+--------------------------------------------------------+|\n        +----------------------------------------------------------+\n        +----------------------------------------------------------+\n        |                   Hypervisor.framework                   |\n        +----------------------------------------------------------+\n                                      A\n                                      |                         user\n        ------------------------------┼------------------------------\n                                      |syscall            xnu kernel\n                                      V\n        \n                                   VMX host\n                               VMX nested paging\n\n\nxhyve shares most of the code with bhyve but is architecturally very different. Hypervisor.framework provides an interface to the VMX VMCS guest state and a safe subset of the VMCS control fields, thus making userspace hypervisors without any additional kernel extensions possible. The VMX host state and all aspects of nested paging are handled by the OS X kernel, you can manage the guest physical address space simply through mapping of regions of your own address space.\n\n*xhyve* is equivalent to the *bhyve* process but gains a subset of a userspace port of the vmm kernel module. SVM, PCI passthrough and the VMX host and EPT aspects are dropped. The vmm component provides a libvmmapi compatible interface to xhyve. Hypervisor.framework seems to enforce a strict 1:1 relationship between a host process/VM and host thread/vCPU, that means VMs and vCPUs can only be interacted with by the processes and threads that created them. Therefore, unlike bhyve, xhyve needs to adhere to a single process model. Multiple virtual machines can be created by launching multiple instances of xhyve. xhyve retains most of the bhyve command line interface.\n\n*bhyvectl*, *bhyveload* and *grub2-bhyve* are incompatible with a single process model and are dropped. As a stop-gap solution until we have a proper firmware xhyve supports the Linux [kexec protocol](http://www.kernel.org/doc/Documentation/x86/boot.txt), a very simple and straightforward way to bootstrap a Linux kernel. It takes a bzImage and optionally initrd image and kernel parameter string as input.\n\nNetworking\n------\nIf you want the same IP address across VM reboots, assign a UUID to a particular VM:\n\n    $ xhyve [-U uuid]\n\n**Optional:**\n\nIf you need more advanced networking and already have a configured [TAP](http://tuntaposx.sourceforge.net) device you can use it with:\n\n\tvirtio-tap,tapX\n\ninstead of:\n\n    virtio-net\n\nWhere *X* is your tap device, i.e. */dev/tapX*.\n\nIssues\n------\nIf you are, or were, running any version of VirtualBox, prior to 4.3.30 or 5.0,\nand attempt to run xhyve your system will immediately crash as a kernel panic is\ntriggered. This is due to a VirtualBox bug (that got fixed in newest VirtualBox\nversions) as VirtualBox wasn't playing nice with OSX's Hypervisor.framework used\nby xhyve.\n\nTo get around this you either have to update to newest VirtualBox 4.3 or 5.0 or,\nif you for some reason are unable to update, to reboot\nyour Mac after using VirtualBox and before attempting to use xhyve.\n(see issues [#5](https://github.com/mist64/xhyve/issues/5) and\n[#9](https://github.com/mist64/xhyve/issues/9) for the full context)\n\nTODO\n----\n\n- vmm:\n  - enable APIC access page to speed up APIC emulation (**performance**)\n  - enable x2APIC MSRs (even faster) (**performance**)\n  - vmm_callout:\n      - is a quick'n'dirty implementation of the FreeBSD kernel callout mechanism\n      - seems to be racy\n      - fix races or perhaps replace with something better\n      - use per vCPU timer event thread (**performance**)?\n      - use hardware VMX preemption timer instead of `pthread_cond_wait` (**performance**)\n  - some 32-bit guests are broken (support PAE paging in VMCS)\n  - PCID guest support (**performance**)\n- block_if:\n  - OS X does not support `preadv`/`pwritev`, we need to serialize reads and writes for the time being until we find a better solution. (**performance**)\n  - support block devices other than plain files\n- virtio_net:\n  - unify TAP and vmnet backends\n  - vmnet: make it not require root\n  - vmnet: send/receive more than a single packet at a time (**performance**)\n- virtio_rnd:\n  - is untested\n- remove explicit state transitions:\n  - since only the owning task/thread can modify the VM/vCPUs a lot of the synchronization might be unnecessary (**performance**)\n- performance, performance and performance\n- remove vestigial code, cleanup\n"
        },
        {
          "name": "TESTING.md",
          "type": "blob",
          "size": 0.689453125,
          "content": "## Testing\n\nCurrent testing is limited and under development. Proposals should be discussed\nvia github issues/pull requests following \n\nhttps://docs.docker.com/opensource/workflow/advanced-contributing/\n\n## Expect based test\n\nThe current integration test uses expect to drive it. Some tips for diagnosing tests for people new to expect.\n\n* [A basic introductory guide to expect](https://gist.github.com/Fluidbyte/6294378)\n* Turn on internal diagnostics - add `exp_internal 1` to the top of the expect script. This will allow you to see the matches expect is using and how it sees the strings.\n* Interact with a running test - you can use the `interact` to give control of the current process to the user. \n"
        },
        {
          "name": "app.entitlements",
          "type": "blob",
          "size": 0.23828125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n    <key>com.apple.security.hypervisor</key>\n    <true/>\n</dict>\n</plist>"
        },
        {
          "name": "config.mk",
          "type": "blob",
          "size": 2.3349609375,
          "content": "###############################################################################\n# Config                                                                      #\n#                                                                             #\n# [XHYVE_CONFIG_ASSERT] VMM asserts (disable for release builds?)             #\n# [XHYVE_CONFIG_TRACE]  VMM event tracer                                      #\n# [XHYVE_CONFIG_STATS]  VMM event profiler                                    #\n###############################################################################\n\nDEFINES := \\\n  -DXHYVE_CONFIG_ASSERT\n\n###############################################################################\n# Toolchain                                                                   #\n###############################################################################\n\nCC := clang\nAS := clang\nLD := clang\nSTRIP := strip\nDSYM := dsymutil\nDTRACE := dtrace\nCODESIGN := codesign\n\nENV := \\\n  LANG=en_US.US-ASCII\n\n###############################################################################\n# CFLAGS                                                                      #\n###############################################################################\n\nCFLAGS_OPT := \\\n  -Os \\\n  -flto \\\n  -fstrict-aliasing\n\n# enable everything and then selectively disable some warnings\nCFLAGS_WARN := \\\n  -Weverything \\\n  -Werror \\\n  -pedantic \\\n  \\\n  -Wno-dollar-in-identifier-extension \\\n  -Wno-gnu-statement-expression \\\n  -Wno-packed \\\n  -Wno-padded \\\n  -Wno-reserved-id-macro \\\n  -Wno-unknown-warning-option \\\n  -Wno-unused-macros \\\n  -Wno-switch-enum \\\n  -Wno-poison-system-directories\n\nCFLAGS_DIAG := \\\n  -fmessage-length=152 \\\n  -fdiagnostics-show-note-include-stack \\\n  -fmacro-backtrace-limit=0 \\\n  -fcolor-diagnostics\n\nCFLAGS_DBG := \\\n  -g\n\nCFLAGS := \\\n  -arch x86_64 \\\n  -x c \\\n  -std=c11 \\\n  -fno-common \\\n  -fvisibility=hidden \\\n  $(DEFINES) \\\n  $(CFLAGS_OPT) \\\n  $(CFLAGS_WARN) \\\n  $(CFLAGS_DIAG) \\\n  $(CFLAGS_DBG)\n\n###############################################################################\n# LDFLAGS                                                                     #\n###############################################################################\n\nLDFLAGS_DBG := \\\n  -Xlinker -object_path_lto\n\nLDFLAGS := \\\n  -arch x86_64 \\\n  -framework Hypervisor \\\n  -framework vmnet \\\n  -Wl,-no_compact_unwind \\\n  $(LDFLAGS_DBG)\n"
        },
        {
          "name": "dtrace",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 0.173828125,
          "content": "module github.com/moby/hyperkit\n\ngo 1.14\n\nrequire (\n\tgithub.com/mitchellh/go-ps v1.0.0\n\tgithub.com/stretchr/testify v1.6.1\n\tgolang.org/x/sys v0.0.0-20201015000850-e3ed0017c211\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 1.47265625,
          "content": "github.com/davecgh/go-spew v1.1.0 h1:ZDRjVQ15GmhC3fiQ8ni8+OwkZQO4DARzQgrnXU1Liz8=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/mitchellh/go-ps v1.0.0 h1:i6ampVEEF4wQFF+bkYfwYgY+F/uYJDktmvLPf7qIgjc=\ngithub.com/mitchellh/go-ps v1.0.0/go.mod h1:J4lOc8z8yJs6vUwklHw2XEIiT4z4C40KtWVN3nvg8Pg=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.6.1 h1:hDPOHmpOpP40lSULcqw7IrRb/u7w6RpDC9399XyoNd0=\ngithub.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngolang.org/x/sys v0.0.0-20200722175500-76b94024e4b6 h1:X9xIZ1YU8bLZA3l6gqDUHSFiD0GFI9S548h6C8nDtOY=\ngolang.org/x/sys v0.0.0-20200722175500-76b94024e4b6/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201015000850-e3ed0017c211 h1:9UQO31fZ+0aKQOFldThf7BKPMJTiBfWycGh/u3UoO88=\ngolang.org/x/sys v0.0.0-20201015000850-e3ed0017c211/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c h1:dUUwHk2QECo/6vqA44rthZ8ie2QXMNeKRTHCNY2nXvo=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n"
        },
        {
          "name": "go",
          "type": "tree",
          "content": null
        },
        {
          "name": "hyperkit.1",
          "type": "blob",
          "size": 10.8994140625,
          "content": ".\\\" Copyright (c) 2013 Peter Grehan\n.\\\" Copyright (c) 2015 xhyve developers\n.\\\" All rights reserved.\n.\\\"\n.\\\" Redistribution and use in source and binary forms, with or without\n.\\\" modification, are permitted provided that the following conditions\n.\\\" are met:\n.\\\" 1. Redistributions of source code must retain the above copyright\n.\\\"    notice, this list of conditions and the following disclaimer.\n.\\\" 2. Redistributions in binary form must reproduce the above copyright\n.\\\"    notice, this list of conditions and the following disclaimer in the\n.\\\"    documentation and/or other materials provided with the distribution.\n.\\\"\n.\\\" THIS SOFTWARE IS PROVIDED BY THE AUTHORS AND CONTRIBUTORS ``AS IS'' AND\n.\\\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n.\\\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n.\\\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE LIABLE\n.\\\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n.\\\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n.\\\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n.\\\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n.\\\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n.\\\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n.\\\" SUCH DAMAGE.\n.\\\"\n.Dd September 11, 2015\n.Dt HYPERKIT 1\n.Os\n.Sh NAME\n.Nm hyperkit\n.Nd \"run a guest operating system inside a virtual machine\"\n.Sh SYNOPSIS\n.Nm\n.Op Fl behuwxACHPWY\n.Op Fl c Ar numcpus\n.Op Fl g Ar gdbport\n.Op Fl l Ar lpcdev Ns Op , Ns Ar conf\n.Op Fl m Ar size Ns Op Ar K|k|M|m|G|g|T|t\n.Op Fl p Ar vcpu:hostcpu\n.Op Fl s Ar slot,emulation Ns Op , Ns Ar conf\n.Op Fl U Ar uuid\n.Op Fl f Ar firmware\n.Sh DESCRIPTION\n.Nm\nis a hypervisor that runs guest operating systems inside a\nvirtual machine.\n.Pp\nParameters such as the number of virtual CPUs, amount of guest memory, and\nI/O connectivity can be specified with command-line parameters.\n.Pp\n.Nm\nruns until the guest operating system reboots or an unhandled hypervisor\nexit is detected.\n.Sh OPTIONS\n.Bl -tag -width 10n\n.It Fl A\nGenerate ACPI tables.\nRequired for\n.Fx Ns /amd64\nguests.\n.It Fl b\nEnable a low-level console device supported by\n.Fx\nkernels compiled with\n.Cd \"device bvmconsole\" .\nThis option will be deprecated in a future version.\n.It Fl c Ar numcpus\nNumber of guest virtual CPUs.\nThe default is 1 and the maximum is 16.\n.It Fl C\nInclude guest memory in core file.\n.It Fl e\nForce\n.Nm\nto exit when a guest issues an access to an I/O port that is not emulated.\nThis is intended for debug purposes.\n.It Fl g Ar gdbport\nFor\n.Fx\nkernels compiled with\n.Cd \"device bvmdebug\" ,\nallow a remote kernel kgdb to be relayed to the guest kernel gdb stub\nvia a local IPv4 address and this port.\nThis option will be deprecated in a future version.\n.It Fl h\nPrint help message and exit.\n.It Fl H\nYield the virtual CPU thread when a HLT instruction is detected.\nIf this option is not specified, virtual CPUs will use 100% of a host CPU.\n.It Fl l Ar lpcdev Ns Op , Ns Ar conf\nAllow devices behind the LPC PCI-ISA bridge to be configured.\nThe only supported devices are the TTY-class devices\n.Ar com1\nand\n.Ar com2.\n.It Fl m Ar size Ns Op Ar K|k|M|m|G|g|T|t\nGuest physical memory size in bytes.\n.Pp\nThe size argument may be suffixed with one of K, M, G or T (either upper\nor lower case) to indicate a multiple of kilobytes, megabytes, gigabytes,\nor terabytes.\nIf no suffix is given, the value is assumed to be in megabytes.\n.It Fl M\nPrint MAC address and exit if using vmnet.\n.It Fl p Ar vcpu:hostcpu\nPin guest's virtual CPU\n.Em vcpu\nto\n.Em hostcpu .\n.It Fl P\nForce the guest virtual CPU to exit when a PAUSE instruction is detected.\n.It Fl s Ar slot,emulation Ns Op , Ns Ar conf\nConfigure a virtual PCI slot and function.\n.Pp\n.Nm\nprovides PCI bus emulation and virtual devices that can be attached to\nslots on the bus.\nThere are 32 available slots, with the option of providing up to 8 functions\nper slot.\n.Bl -tag -width 10n\n.It Ar slot\n.Ar pcislot[:function]\n.Ar bus:pcislot:function\n.Pp\nThe\n.Ar pcislot\nvalue is 0 to 31.\nThe optional\n.Ar function\nvalue is 0 to 7.\nThe optional\n.Ar bus\nvalue is 0 to 255.\nIf not specified, the\n.Ar function\nvalue defaults to 0.\nIf not specified, the\n.Ar bus\nvalue defaults to 0.\n.It Ar emulation\n.Bl -tag -width 10n\n.It Li hostbridge | Li amd_hostbridge\n.Pp\nProvide a simple host bridge.\nThis is usually configured at slot 0, and is required by most guest\noperating systems.\nThe\n.Li amd_hostbridge\nemulation is identical but uses a PCI vendor ID of\n.Li AMD .\n.It Li virtio-net\nVirtio network interface.\n.It Li virtio-blk\nVirtio block storage interface.\n.It Li virtio-rnd\nVirtio RNG interface.\n.It Li virtio-9p\nVirtio 9P backend bridge.\n.It Li ahci-cd\nAHCI controller attached to an ATAPI CD/DVD.\n.It Li ahci-hd\nAHCI controller attached to a SATA hard-drive.\n.It Li uart\nPCI 16550 serial device.\n.It Li lpc\nLPC PCI-ISA bridge with COM1 and COM2 16550 serial ports.\nThe LPC bridge emulation can only be configured on bus 0.\n.El\n.It Op Ar conf\nThis optional parameter describes the backend for device emulations.\nIf\n.Ar conf\nis not specified, the device emulation has no backend and can be\nconsidered unconnected.\n.Pp\nNetwork devices:\n.Bl -tag -width 10n\n.It Ar tapN Ns Op , Ns Ar mac=xx:xx:xx:xx:xx:xx\n.It Ar vmnetN Ns Op , Ns Ar mac=xx:xx:xx:xx:xx:xx\n.Pp\nIf\n.Ar mac\nis not specified, the MAC address is derived from a fixed OUI and the\nremaining bytes from an MD5 hash of the slot and function numbers and\nthe device name.\n.Pp\nThe MAC address is an ASCII string in\n.Xr ethers 5\nformat.\n.El\n.Pp\nBlock storage devices:\n.Bl -tag -width 10n\n.It Pa /filename Ns Oo , Ns Ar block-device-options Oc\n.It Pa /dev/xxx Ns Oo , Ns Ar block-device-options Oc\n.It file:///filename.qcow, Ns format=qcow Ns Oo , Ns Ar block-device-options Oc\n.El\n.Pp\nThe\n.Ar block-device-options\nare:\n.Bl -tag -width 8n\n.It Li nocache\nOpen the file with\n.Dv O_DIRECT .\n.It Li direct\nOpen the file using\n.Dv O_SYNC .\n.It Li ro\nForce the file to be opened read-only.\n.It Li sectorsize= Ns Ar logical Ns Oo / Ns Ar physical Oc\nSpecify the logical and physical sector sizes of the emulated disk.\nThe physical sector size is optional and is equal to the logical sector size\nif not explicitly specified.\n.It format=qcow\nIndicates that the image is in qcow format. The filename must be\ngiven in the URL syntax.\n.El\n.Pp\n9P backend:\n.Bl -tag -width 10n\n.It port= Ns Ar port Ns Oo , Ns Ar 9p-device-options Oc\nConnect to server listening on the loopback device at the given port\n.It path= Ns Ar path Ns Oo , Ns Ar 9p-device-options Oc\nConnect to server listening on the given Unix domain socket\n.El\n.Pp\nThe\n.Ar 9p-device-options\nare:\n.Bl -tag -width 8n\n.It Li tag= Ns Ar mount-tag Ns\nThe 9p mount tag\n.El\n.Pp\nTTY devices:\n.Bl -tag -width 10n\n.It Li stdio Ns Oo , Ns Ar uart-device-options Oc\nConnect the serial port to the standard input and output of\nthe\n.Nm\nprocess.\n.It Pa /dev/xxx Ns Oo , Ns Ar uart-device-options Oc\nUse the host TTY device for serial port I/O.\n.It Pa autopty Ns Oo , Ns Ar uart-device-options Oc\nAutomatically select a host TTY device.\n.It Pa autopty=/path/to/symlink Ns Oo , Ns Ar uart-device-options Oc\nAutomatically select a host TTY device and setup a convenience symlink.\n.El\n.Pp\nThe\n.Ar uart-device-options\nare:\n.Bl -tag -width 8n\n.It Pa log=/path/to/ring-log\nAlso log output to a ring buffer\n.El\n.It Fl u\nRTC keeps UTC time.\n.It Fl U Ar uuid\nSet the universally unique identifier\n.Pq UUID\nin the guest's System Management BIOS System Information structure.\nBy default a UUID is generated from the host's hostname and\n.Ar vmname .\n.It Fl w\nIgnore accesses to unimplemented Model Specific Registers (MSRs).\nThis is intended for debug purposes.\n.It Fl W\nForce virtio PCI device emulations to use MSI interrupts instead of MSI-X\ninterrupts.\n.It Fl x\nThe guest's local APIC is configured in x2APIC mode.\n.It Fl Y\nDisable MPtable generation.\n.It Fl f Ar firmware,arg1,arg2,arg3\n.Pp\nFirmware/bootrom configuration.\n.Bl -tag -width 10n\n.It kexec , Ns Pa kernel Ns Oo , Ns Pa ramdisk Ns Oc Ns Oo , Ns Pa cmdline Oc\nLaunch\n.Ar kernel\nusing the Linux kexec protocol.\n.It fbsd , Ns Pa userboot , Ns Pa bootvolume Ns Oo , Ns Pa kernelenv Ns Oc\nBoot using the fbsd protocol.\n.It bootrom , Ns Pa path\nBoot using\n.Ar path\nas a firmware image. Allows booting a UEFI/tianocore binary, such as\nthe one from bhyve (source: <https://github.com/freebsd/uefi-edk2.git>; binary <https://people.freebsd.org/~grehan/bhyve_uefi/>).\n.It multiboot , Ns Pa kernel Ns Oo , Ns Pa module Ns Oo ;cmdline Ns Oc Ns Oo :module Ns Oo ;cmdline Ns Oc Ns Oc Ns ... Oc Ns Oo , Ns Pa cmdline Ns Oc\nBoot using the multiboot protocol.\n.El\n.Pp\nNote that commas are required even for empty options with the exception that they may be omitted for any trailing empty options.\n.El\n.Sh EXAMPLES\nTo run a virtual machine with 1GB of memory, two virtual CPUs, a virtio\nblock device backed by the\n.Pa /my/image\nfilesystem image, and a serial port for the console:\n.Bd -literal -offset indent\nhyperkit -c 2 -s 0,hostbridge -s 1,lpc -s 2,virtio-blk,/my/image \\\\\n  -l com1,stdio -A -H -P -m 1G \\\\\n  -f kexec,vmlinuz,initrd.gz,\"earlyprintk=serial console=ttyS0\"\n.Ed\n.Pp\nRun a 24GB single-CPU virtual machine with three network ports, one of which\nhas a MAC address specified:\n.Bd -literal -offset indent\nhyperkit -s 0,hostbridge -s 1,lpc -s 2:0,virtio-net,tap0 \\\\\n  -s 2:1,virtio-net,tap1 \\\\\n  -s 2:2,virtio-net,tap2,mac=00:be:fa:76:45:00 \\\\\n  -s 3,virtio-blk,/my/image -l com1,stdio \\\\\n  -A -H -P -m 24G -f fbsd,userboot.so,bootvolume.img \\\\\n.Ed\n.Pp\nRun an 8GB quad-CPU virtual machine with 8 AHCI SATA disks, a raw AHCI SATA volume,\nan AHCI ATAPI CD-ROM, a single virtio network port, an AMD hostbridge,\nand the console port connected to an\n.Xr nmdm 4\nnull-modem device.\n.Bd -literal -offset indent\nhyperkit -c 4 \\\\\n  -s 0,amd_hostbridge -s 1,lpc \\\\\n  -s 1:0,ahci-hd,/images/disk.1 \\\\\n  -s 1:1,ahci-hd,/images/disk.2 \\\\\n  -s 1:2,ahci-hd,/images/disk.3 \\\\\n  -s 1:3,ahci-hd,/images/disk.4 \\\\\n  -s 1:4,ahci-hd,/images/disk.5 \\\\\n  -s 1:5,ahci-hd,/images/disk.6 \\\\\n  -s 1:6,ahci-hd,/images/disk.7 \\\\\n  -s 1:7,ahci-hd,/images/disk.8 \\\\\n  -s 1:8,ahci-hd,/dev/rdisk2 \\\\\n  -s 2,ahci-cd,/images/install.iso \\\\\n  -s 3,virtio-net,tap0 \\\\\n  -l com1,/dev/nmdm0A \\\\\n  -A -H -P -m 8G \\\\\n  -f kexec,vmlinuz,initrd.gz,\"earlyprintk=serial console=ttyS0\"\n\n.Ed\n\n.Sh EXIT STATUS\nThe\n.Nm hyperkit\nprocess exits with one of the following values:\n.Pp\n.Bl -tag -width flag -compact\n.It Li 0\nThe guest either powered down or halted cleanly.\n.It Li 1\nAn error occurred.\n.It Li 2\nThe guest rebooted/reset. The caller is responsible for starting a new hyperkit process in this case.\n.It Li 3\nA triple fault occurred.\n.It Li 100\nAn invalid/unknown VM exit occurred.\n.El\n\n.Sh SIGNALS\n.Bl -tag -width 10n\n.It Pa SIGUSR1\nPause all VCPU threads\n.It Pa SIGUSR2\nUnpause all VCPU threads\n.El\n\n.Sh HISTORY\n.Nm\nis a port of FreeBSD's bhyve hypervisor to OS X that\nworks entirely in userspace and has no other dependencies.\n.Sh AUTHORS\n.An Michael Steil Aq Mt mist64@mac.com\n\n.\\ net ipc\n"
        },
        {
          "name": "hyperkit.opam",
          "type": "blob",
          "size": 0.6025390625,
          "content": "opam-version: \"2.0\"\nmaintainer: \"dave@recoil.org\"\nauthors: [ \"see github source\" ]\nlicense: \"BSD 2 clause\"\nhomepage: \"https://github.com/moby/hyperkit\"\ndev-repo: \"git+https://github.com/moby/hyperkit.git\"\nbug-reports: \"https://github.com/moby/hyperkit/issues\"\ndoc: \"https://github.com/moby/hyperkit\"\n\ndepends: [\n  \"uri\"\n  \"qcow\"              {= \"0.11.0\"}\n  \"qcow-tool\"\n  \"sha\"\n  \"conduit\"           {= \"2.1.0\"}\n  \"lwt\"               {= \"5.3.0\"}\n  \"mirage-block-unix\" {= \"2.12.0\"}\n  \"conf-libev\"\n  \"logs\"\n  \"fmt\"\n  \"mirage-unix\"\n  \"prometheus-app\"\n]\nsynopsis: \"Uses the Hypervisor.framework on macOS to run Linux VMs\"\n"
        },
        {
          "name": "hyperkitrun.sh",
          "type": "blob",
          "size": 0.9228515625,
          "content": "#!/bin/sh\n\nHYPERKIT=\"build/hyperkit\"\n\n# Linux\nKERNEL=\"test/vmlinuz\"\nINITRD=\"test/initrd.gz\"\nCMDLINE=\"earlyprintk=serial console=ttyS0\"\n\n# FreeBSD\n#USERBOOT=\"test/userboot.so\"\n#BOOTVOLUME=\"/somepath/somefile.{img | iso}\"\n#KERNELENV=\"\"\n\nMEM=\"-m 1G\"\n#SMP=\"-c 2\"\n#NET=\"-s 2:0,virtio-net\"\n#IMG_CD=\"-s 3,ahci-cd,/somepath/somefile.iso\"\n#IMG_HDD=\"-s 4,virtio-blk,/somepath/somefile.img\"\nPCI_DEV=\"-s 0:0,hostbridge -s 31,lpc\"\nLPC_DEV=\"-l com1,stdio\"\nACPI=\"-A\"\n#UUID=\"-U deadbeef-dead-dead-dead-deaddeafbeef\"\n\nif [ ! -x  \"$HYPERKIT\" ]; then\n  make\n  if [ ! $? -eq 0 ]; then\n    echo \"Error whilst building $HYPERKIT\"\n    exit 1\n  fi\nfi\n\n# Linux\nif [ ! -f \"$KERNEL\" ]; then\n pushd test\n ./tinycore.sh\n popd\nfi\nbuild/hyperkit $ACPI $MEM $SMP $PCI_DEV $LPC_DEV $NET $IMG_CD $IMG_HDD $UUID -f kexec,$KERNEL,$INITRD,\"$CMDLINE\"\n\n# FreeBSD\n#build/hyperkit $ACPI $MEM $SMP $PCI_DEV $LPC_DEV $NET $IMG_CD $IMG_HDD $UUID -f fbsd,$USERBOOT,$BOOTVOLUME,\"$KERNELENV\"\n"
        },
        {
          "name": "ocaml",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "xhyve_logo.png",
          "type": "blob",
          "size": 19.572265625,
          "content": null
        }
      ]
    }
  ]
}