{
  "metadata": {
    "timestamp": 1736709786782,
    "page": 238,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "collectd/collectd",
      "stars": 3218,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cirrus.yml",
          "type": "blob",
          "size": 6.8837890625,
          "content": "env:\n  LANG: C\n  CIRRUS_CLONE_DEPTH: 1\n  DEFAULT_CONFIG_OPTS: --enable-debug --without-libstatgrab --disable-dependency-tracking\n\n\n###\n# make distcheck and other sanity checks\n#\nrelease_ready_task:\n  container:\n    image: collectd/ci:debian12\n  lint_script:\n    - /checks/check-bashisms.sh\n    - /checks/check-pod.sh\n  configure_script:\n    - ./build.sh\n    - ./configure $DEFAULT_CONFIG_OPTS\n  make_distcheck_script:\n    - make -j$(nproc) -s distcheck DISTCHECK_CONFIGURE_FLAGS=\"${DEFAULT_CONFIG_OPTS}\"\n  always:\n    make_check_artifacts:\n      path: \"**/*.log\"\n\n###\n# Default toolchain and build flags used in deb packages, on a range of Debian\n# and Ubuntu releases (+ Debian/unstable)\n# Most should succeed, and PRs shouldn't break them.\n#\ndebian_default_toolchain_task:\n  matrix:\n    - container:\n        image: collectd/ci:debian12\n      allow_failures: false\n      env:\n        CONTAINER_IMAGE: debian12\n    - container:\n        image: collectd/ci:ubuntu23.10\n      allow_failures: false\n      env:\n        CONTAINER_IMAGE: ubuntu23.10\n    - container:\n        image: collectd/ci:debian_unstable\n      allow_failures: true\n      skip_notifications: true\n      only_if: $CIRRUS_BRANCH == 'main'\n      env:\n        CONTAINER_IMAGE: debian_unstable\n  configure_script:\n    - ./build.sh\n    - gcc --version\n    - >\n      ./configure CC=gcc $DEFAULT_CONFIG_OPTS\n      CFLAGS=\"$(dpkg-buildflags --get CFLAGS)\"\n      CPPLAGS=\"$(dpkg-buildflags --get CPPFLAGS)\"\n      LDFLAGS=\"$(dpkg-buildflags --get LDFLAGS)\"\n  build_script:\n    - make -j$(nproc) -sk\n  tests_script:\n    - VALGRIND_OPTS=\"--errors-for-leak-kinds=definite\" make -j$(nproc) -sk check || (cat ./test-suite.log && false)\n    - |\n      if [[ -e \".expected-plugins/$CONTAINER_IMAGE\" ]]; then\n        /checks/check-built-plugins.sh \".expected-plugins/$CONTAINER_IMAGE\"\n      else\n        /checks/check-built-plugins.sh\n      fi\n  always:\n    make_check_artifacts:\n      path: \"**/*.log\"\n\n###\n# Default toolchain and build flags used in RPM packages, on a range of RedHat\n# and Fedora releases (+ Fedora/rawhide)\n# Most should succeed, and PRs shouldn't break them.\n#\nredhat_default_toolchain_task:\n  matrix:\n    - container:\n        image: collectd/ci:centos9\n      allow_failures: false\n      env:\n        CONTAINER_IMAGE: centos9\n    - container:\n        image: collectd/ci:fedora39\n      allow_failures: false\n      env:\n        CONTAINER_IMAGE: fedora39\n    - container:\n        image: collectd/ci:fedora_main\n      allow_failures: true\n      skip_notifications: true\n      only_if: $CIRRUS_BRANCH == 'main'\n      env:\n        CONTAINER_IMAGE: fedora_main\n  configure_script:\n    - ./build.sh\n    - gcc --version\n    - ./configure CC=gcc $DEFAULT_CONFIG_OPTS CFLAGS=\"$(rpm --eval '%optflags')\"\n  build_script:\n    - make -j$(nproc) -sk\n  tests_script:\n    - VALGRIND_OPTS=\"--errors-for-leak-kinds=definite\" make -j$(nproc) -sk check || (cat ./test-suite.log && false)\n    - |\n      if [[ -e \".expected-plugins/$CONTAINER_IMAGE\" ]]; then\n        /checks/check-built-plugins.sh \".expected-plugins/$CONTAINER_IMAGE\"\n      else\n        /checks/check-built-plugins.sh\n      fi\n  always:\n    make_check_artifacts:\n      path: \"**/*.log\"\n\n\n###\n# Misc non-standard build environment & options on most recent released debian\n# version.\n# Some are expected to fail, others should always pass\nnon_standard_toolchains_task:\n  container:\n    image: collectd/ci:debian12\n  only_if: $CIRRUS_PR == ''\n\n  matrix:\n\n    # build using clang with default build flags, should always pass\n    - env:\n        LABEL: clang\n      allow_failures: true # TODO: fix this platform\n      skip_notifications: true\n      configure_script:\n        - ./build.sh\n        - clang --version\n        - >\n          ./configure CC=clang CXX=clang++\n          $DEFAULT_CONFIG_OPTS\n          CFLAGS=\"$(dpkg-buildflags --get CFLAGS)\"\n          CPPLAGS=\"$(dpkg-buildflags --get CPPFLAGS)\"\n          LDFLAGS=\"$(dpkg-buildflags --get LDFLAGS)\"\n      build_script:\n        - make -j$(nproc) -sk\n      tests_script:\n        - VALGRIND_OPTS=\"--errors-for-leak-kinds=definite\" make -j$(nproc) -sk check || (cat ./test-suite.log && false)\n      always:\n        make_check_artifacts:\n          path: \"**/*.log\"\n\n    # build using clang with a collection of strict build flags, will most\n    # probably always fail\n    - env:\n        LABEL: clang strict\n      allow_failures: true\n      skip_notifications: true\n      configure_script:\n        - ./build.sh\n        - clang --version\n        - >\n          ./configure CC=clang CXX=clang++\n          $DEFAULT_CONFIG_OPTS\n          CFLAGS='-Wall\n          -Wno-error\n          -Wextra\n          -Wformat=2\n          -Wformat-security\n          -Wformat-nonliteral\n          -Wmissing-include-dirs\n          -Wold-style-definition\n          -Wpointer-arith\n          -Winit-self\n          -Wmissing-prototypes\n          -Wimplicit-function-declaration\n          -Wmissing-declarations\n          -Wstrict-prototypes\n          -Wmissing-noreturn\n          -Wshadow\n          -Wendif-labels\n          -Wwrite-strings\n          -Wno-unused-parameter\n          -Wno-missing-field-initializers\n          -Wdate-time\n          -Wnested-externs\n          -Wno-typedef-redefinition\n          -Wno-gnu-variable-sized-type-not-at-end'\n      build_script:\n        - make -j$(nproc) -sk\n      tests_script:\n        - VALGRIND_OPTS=\"--errors-for-leak-kinds=definite\" make -j$(nproc) -sk check || (cat ./test-suite.log && false)\n      always:\n        make_check_artifacts:\n          path: \"**/*.log\"\n\n###\n# Build using a range of compilers, available in debian/unstable. NB: might\n# fail because of changes to the distro, not the compiler used.\n#\nbleeding_edge_compilers_task:\n  container:\n    image: collectd/ci:debian_unstable\n  only_if: $CIRRUS_BRANCH == 'main'\n  allow_failures: true\n  skip_notifications: true\n  env:\n    matrix:\n      CC: gcc-10\n      CC: clang\n      CC: clang-18\n      CC: clang-17\n  configure_script:\n    - ./build.sh\n    - $CC --version\n    - >\n      ./configure CC=$CC\n      $DEFAULT_CONFIG_OPTS\n      CFLAGS=\"$(dpkg-buildflags --get CFLAGS)\"\n      CPPLAGS=\"$(dpkg-buildflags --get CPPFLAGS)\"\n      LDFLAGS=\"$(dpkg-buildflags --get LDFLAGS)\"\n  build_script:\n    - make -j$(nproc) -sk\n  tests_script:\n    - VALGRIND_OPTS=\"--errors-for-leak-kinds=definite\" make -j$(nproc) -sk check || (cat ./test-suite.log && false)\n  always:\n    make_check_artifacts:\n      path: \"**/*.log\"\n\nfreebsd_task:\n  freebsd_instance:\n    matrix:\n      - image_family: freebsd-13-2\n  allow_failures: false\n  pkg_install_script:\n    - >\n      pkg install --yes\n      autotools\n      bison\n      flex\n      libpfctl\n      pkgconf\n  configure_script:\n    - ./build.sh\n    - >\n      ./configure --disable-perl\n      CPPFLAGS='-I/usr/local/include'\n      LIBS=\"-L/usr/local/lib\"\n  build_script:\n    - make -j$(nproc) -sk\n  tests_script:\n    - VALGRIND_OPTS=\"--errors-for-leak-kinds=definite\" make -j$(nproc) -sk check || (cat ./test-suite.log && false)\n  always:\n    make_check_artifacts:\n      path: \"**/*.log\"\n"
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.0830078125,
          "content": "---\nBasedOnStyle: LLVM\nIncludeCategories:\n  - Regex: '\"collectd.h\"'\n  - Priority: -1\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.3046875,
          "content": "# build.sh stuff:\nMakefile.in\n/INSTALL\n/aclocal.m4\n/autom4te.cache\n/autom4te.cache\n/build-aux/\n/compile\n/config.guess\n/config.sub\n/configure\n/depcomp\n/install-sh\n/libltdl/\n/ltmain.sh\n/m4/libtool.m4\n/m4/ltargz.m4\n/m4/ltdl.m4\n/m4/lt~obsolete.m4\n/m4/ltoptions.m4\n/m4/ltsugar.m4\n/m4/ltversion.m4\n/missing\n/src/config.h.in\n\n# configure stuff:\nMakefile\nconfig.log\nconfig.status\nlibtool\nsrc/collectd.conf\nsrc/config.h\nsrc/libcollectdclient/libcollectdclient.pc\nsrc/stamp-h1\n\n# make stuff:\n*.la\n*.lo\n*.o\n.dirstamp\n.libs/\n.deps/\n/collectd-nagios\n/collectd-tg\n/collectdctl\n/collectdmon\nsrc/*.1\nsrc/*.5\nsrc/.pod2man.tmp.*\nsrc/libcollectdclient/collectd/lcc_features.h\n\n# patch stuff\n*.rej\n*.orig\n\n# lex / yacc stuff:\nylwrap\nsrc/liboconfig/parser.c\nsrc/liboconfig/parser.h\nsrc/liboconfig/scanner.c\n\n# protobuf stuff:\n*.pb-c.[ch]\n*.grpc.pb.cc\n*.pb.cc\n*.pb.h\n\n# make dist stuff:\n/collectd-*.tar.gz\n/collectd-*.tar.bz2\n\n# perl stuff:\n/.perl-directory-stamp\nbindings/perl/Collectd/pm_to_blib\nbindings/perl/blib/\nbindings/perl/pm_to_blib\n/buildperl\n\n# java stuff\n*.jar\n/org/collectd/api/*.class\n/org/collectd/java/*.class\n/bindings/java/java-build-stamp\n/classnoinst.stamp\n\n# python stuff\n*.pyc\n\n# backup stuff\n*~\n\n# lint stuff\n*.ln\n\n#ide stuff\n.vscode\n\n# cscope stuff\ncscope.*\n\n# Unit tests\ntest-suite.log\nsrc/tests/\ntest_*\n\n# src/daemon/...\n/collectd\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.0791015625,
          "content": "[submodule \"gnulib\"]\n\tpath = gnulib\n\turl = git://git.savannah.gnu.org/gnulib.git\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 0.255859375,
          "content": "Anthony <anthony>\nFlorian Forster <octo>\nFlorian Forster <octo@dev4.office.noris.de>\nLuboš Staněk <kolektor@atlas.cz>\nLuboš Staněk <lubek@users.sourceforge.net>\nNiki W. Waibel <niki>\nSebastian Harl <tokkee>\nRodolphe Quiedeville <rquiedeville@bearstech.com>\n\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 9.453125,
          "content": "Permanent project members\n=========================\n\nFlorian \"octo\" Forster <octo at verplant.org>\n - Initial author.\n\nMarc Fournier <marc.fournier at camptocamp.com>\n - Various fixes to the varnish plugin.\n - RPM specfile maintenance.\n - libmnl support in the netlink plugin.\n - linux support in the zfs_arc plugin.\n - openldap plugin.\n - continuous integration system.\n\nMatthias Runge <mrunge@redhat.com>\n - general house keeping.\n\nPierre-Yves Ritschard <pyr at spootnik.org>\n - Write-Riemann plugin.\n - Write-Graphite plugin: Notification support.\n - Write-Kafka plugin.\n - Log-Logstash plugin.\n - Normalization in the CPU plugin.\n - Relative values in the Load plugin.\n\nRuben Kerkhof <ruben at rubenkerkhof.com>\n - Bugfixes and enhancements in many places all around the project.\n - Fedora and EPEL packages.\n\nSebastian \"tokkee\" Harl <sh at tokkee.org>\n - Bugfixes and enhancements in many places all around the project.\n - grpc plugin.\n - perl plugin.\n - postgresql plugin.\n - users plugin.\n - vserver plugin.\n - Debian package.\n\n\nContributors (sorted alphabetically)\n====================================\n\nAdrian Boczkowski\n - Logparser plugin.\n - Redfish plugin.\n\nAkkarit Sangpetch <asangpet at andrew.cmu.edu>\n - write_mongodb plugin.\n\nAlessandro Iurlano <alessandro.iurlano at gmail.com>\n - Initial filecount plugin.\n\nAlex Deymo <deymo at chromium.org>\n - aquaero plugin.\n\nAlvaro Barcellos <alvaro.barcellos at gmail.com>\n - Don't-fork patch.\n\nAmit Gupta <amit.gupta221 at gmail.com>\n - Multiple servers in the apache plugin.\n - curl_xml plugin.\n\nAndreas Henriksson <andreas at fatal.se>\n - libmnl support in the netlink plugin.\n\nAndrew Bays <abays at redhat.com>\n - connectivity plugin.\n - procevent plugin.\n - sysevent plugin.\n - connectivity plugin.\n\nAndy Parkins <andyp at fussylogic.co.uk>\n - battery plugin: sysfs code.\n\nAndy Smith <ansmith at redhat.com>\n - AMQP 1.0 plugin.\n\nAneesh Puttur <aputtur at redhat.com>\n - connectivity plugin.\n\nAnthony Dewhurst <dewhurst at gmail.com>\n - zfs_arc plugin.\n\nAnthony Gialluca <tonyabg at charter.net>\n - apcups plugin.\n\nAntony Dovgal <tony at daylessday.org>\n - memcached plugin.\n\nAsaf Kahlon <asafka7 at gmail.com>\n - buddyinfo plugin\n\nAurélien Reynaud <collectd at wattapower.net>\n - LPAR plugin.\n - Various fixes for AIX, HP-UX and Solaris.\n\nBenjamin Gilbert <bgilbert at backtick.net>\n - Improvements to the LVM plugin.\n\nBert Vermeulen <bert at biot.com>\n - sigrok plugin\n\nBrett Hawn <bhawn at llnw.com>\n - write_tsdb plugin for http://opentsdb.net/\n\nBruno Prémont <bonbons at linux-vserver.org>\n - BIND plugin.\n - Many bug reports and -fixes in various plugins,\n   especially a nasty bug in the network plugin.\n - Wireshark dissector.\n\nCarlos Peon Costa\n - Write_Influxdb_UDP plugin\n\nChad Malfait <malfaitc at yahoo.com>\n - LVM plugin.\n\nChris Brown\n - Zookeeper plugin, add quorum stat.\n\nChris Lundquist <clundquist at bluebox.net>\n - Improvements to the write_mongodb plugin.\n\nChristophe Kalt <collectd at klb.taranis.org>\n - The version 3 `log' mode.\n - Many Solaris related hints and fixes.\n\nClaudius Zingerli <gitmail at zeuz.ch>\n - chrony plugin.\n\nCyril Feraudet <cyril at feraudet.com>\n - ethstat plugin.\n\nDagobert Michelsen <dam at opencsw.org>\n - zone plugin.\n - Many Solaris related hints and fixes.\n - Capabilities plugin.\n - NFS plugin for BSD\n\nDan Berrange <berrange at redhat.com>\n - uuid plugin.\n\nDan Ryder <daryder at cisco.com>\n - ceph plugin.\n\nDavid Bacher <drbacher at gmail.com>\n - serial plugin.\n\nDenis Pompilio <denis.pompilio at gmail.com>\n - Improvements to the write_http plugin.\n\nDheeraj Gupta\n - Tail_CSV plugin, field separator option\n\nDoug MacEachern <dougm at hyperic.com>\n - The `-T' option (config testing mode).\n - OpenVPN plugin.\n - jcollectd (two-way JMX integration).\n - A few other patches to various plugins.\n - curl_json plugin.\n\nEdgar Fuß\n - NFS plugin implementation on NetBSD\n\nEdward “Koko” Konetzko <konetzed at quixoticagony.com>\n - fscache plugin.\n\nEvan Felix <evan.felix at pnnl.gov>\n - mic plugin.\n\nFabian Linzberger <e at lefant.net>\n - Percentage aggregation for `collectd-nagios'.\n\nFabien Wernli <cpan at faxm0dem.org>\n - Solaris improvements in the memory and interfaces plugin.\n\nFabrice A. Marie <fabrice at kibinlabs.com>\n - write_sensu plugin.\n\nFlavio Stanchina <flavio at stanchina.net>\n - mbmon plugin.\n\nFranck Lombardi\n - UNIX socket code for the memcached plugin.\n\nFlorian Eckert\n - MMC plugin\n\nGergely Nagy <algernon at madhouse-project.org>\n - Write-Riemann plugin.\n\nHari TG <hari.tg at intel.com>\n - dcpmm plugin.\n\nJason Pepas <cell at ices.utexas.edu>\n - nfs plugin.\n\nJ. Javier Maestro <jjmaestro at ieee.org>\n - Write-Graphite plugin: UDP support and LogSendErrors flag.\n\nJeremy Katz <jeremy at katzbox.net>\n - percentage reporting in memory and swap plugins.\n - zookeeper plugin.\n\nJérôme Renard <jerome.renard at gmail.com>\n - varnish plugin.\n\nJiri Tyr <jiri.tyr at gmail.com>\n - fhcount plugin.\n\nJulien Ammous <j.ammous at gmail.com>\n - Lua plugin.\n\nKamil Wiatrowski\n - Capabilities plugin.\n - Logparser plugin.\n\nKevin Bowling <kbowling at llnw.com>\n - write_tsdb plugin for http://opentsdb.net/\n\nKimo Rosenbaum <kimor79 at yahoo.com>\n - openldap plugin.\n\nKris Nielander <nielander at fox-it.com>\n - tail_csv plugin.\n\nKrzysztof Kepka\n - Redfish plugin.\n\nKrzysztof Matczak\n - Logparser plugin.\n\nLuboš Staněk <kolektor at atlas.cz>\n - sensors plugin improvements.\n - Time and effort to find a nasty bug in the ntpd-plugin.\n\nLuke Herberling <collectd at c-ware.com>\n - powerdns plugin.\n - Initial `tail' subsystem by:\n\nLyonel Vincent <lyonel at ezix.org>\n - processes plugin.\n\nMan Singh\n - Redfish plugin.\n\nManuel Sanmartin\n - AIX port of the following plugins:\n   + cpu\n   + disk\n   + interface\n   + load\n   + memory\n   + processes\n   + swap\n - Various AIX-related fixes and hacks.\n\nMarcin Mozejko\n - Logparser plugin.\n - Redfish plugin.\n\nMarco Chiappero <marco at absence.it>\n - uptime plugin.\n - ip6tables support in the iptables plugin.\n - openvpn plugin (support for more status file formats)\n\nMärt Bakhof\n - TLS support for AMQP plugin\n\nMathijs Möhlmann <collectd at mmrc.nl>\n - zone plugin.\n\nMichael Hanselmann <public at hansmi.ch>\n - md plugin.\n\nMichael Schenck <mschenck at digitalocean.com>\n - IO time support to disk plugin.\n\nMichael Stapelberg <michael+git at stapelberg.de>\n - OpenBSD port of the tcpconns plugin.\n - cgroups plugin.\n\nMichal Kobylinski\n - Redfish plugin.\n\nMichał Mirosław <mirq-linux at rere.qmqm.pl>\n - thermal plugin.\n - Streamlines recursive directory traversion.\n\nMirko Buffoni <briareos at eswat.org>\n - Port/Socket selection in the MySQL plugin.\n\nNicolas Jourden <nicolas.jourden at laposte.net>\n - gps plugin.\n\nNiki W. Waibel <niki.waibel at newlogic.com>\n - Initial autotools fixes.\n - libltdl code.\n - getmnt-wizardry.\n\nOleg King <king2 at kaluga.ru>\n - Added support for the statgrab library to\n   + the cpu plugin,\n   + the disk plugin, and\n   + the users plugin.\n\nOndrej Zajicek <santiago at crfreenet.org>\n - madwifi plugin.\n\nPablo Llopis <pablo.llopis at gmail.com>\n - Slurm plugin\n - RestoreAffinityPolicy in turbostat plugin\n\nPatrik Weiskircher <weiskircher at inqnet.at>\n - Contextswitch plugin.\n - Forkrate counter in the processes plugin.\n - INode count in the DF plugin.\n\nPaul Sadauskas <psadauskas at gmail.com>\n - tokyotyrant plugin.\n - `ReportByDevice' option of the df plugin.\n - write_http plugin.\n\nPavel Rochnyack <pavel2000 at ngs.ru>\n - xencpu plugin.\n - Bugfixes and enhancements in many places all around the project.\n\nPeter Holik <peter at holik.at>\n - cpufreq plugin.\n - multimeter plugin.\n - irq plugin.\n - Some bugfixes in the exec plugin.\n - Notifications in the ipmi plugin.\n\nPierre Lebleu\n - UBI plugin.\n\nPhoenix Kayo <kayo.k11.4 at gmail.com>\n - pinba plugin.\n\nPiotr Hosowicz <the55 at wp.pl>\n - SMF manifest for collectd.\n\nRadoslaw Jablonski\n - Logparser plugin.\n\nReshma Pattan\n - DPDK Telemetry plugin.\n\nRichard W. M. Jones <rjones at redhat.com>\n - virt plugin.\n - uuid plugin.\n\nRoman Klesel <roman.klesel at noris.de>\n - Oracle schema and sample SQL statements to be used with the Oracle plugin.\n\nRodolphe Quiédeville <rquiedeville at bearstech.com>\n - Lock statistics in the mysql plugin.\n\nScott Garrett <sgarrett at technomancer.com>\n - tape plugin.\n\nScott Sanders <scott at jssjr.com>\n - Write-Graphite plugin.\n\nSebastien Pahl <sebastien.pahl at dotcloud.com>\n - AMQP 0.9 plugin.\n\nSerhiy Pshyk <serhiyx.pshyk at intel.com>\n - intel_pmu plugin\n - intel_rdt plugin\n - snmp_agent plugin\n\nShirly Radco <sradco at redhat.com>\n - write_syslog plugin.\n\nSimon Kuhnle <simon at blarzwurst.de>\n - OpenBSD code for the cpu and memory plugins.\n\nSjoerd van der Berg <harekiet at gmail.com>\n - iptables plugin.\n\nStefan Hacker <stefan.hacker at web.de>\n - teamspeak2 plugin.\n\nSteven Bell <stv.bell07 at gmail.com>\n - nut plugin.\n\nSven Trenkel <collectd at semidefinite.de>\n - netapp plugin.\n - python plugin.\n\nTakuro Ashie\n - Network plugin fixes.\n\nTim Laszlo <tim.laszlo at gmail.com>\n - drbd plugin.\n\nThomas Meson <zllak at hycik.org>\n - Graphite support for the AMQP plugin.\n\nTomasz Pala <gotar at pld-linux.org>\n - conntrack plugin.\n\nTommie Gannert <d00-tga at d.kth.se>\n - PID-file patch.\n\nVincent Bernat <vincent at bernat.im>\n - smart plugin.\n\nVincent Brillault <git at lerya.net>\n - turbostat plugin, based on Len Brown <len.brown at intel.com> kernel tool\n\nVincent Stehlé <vincent.stehle at free.fr>\n - hddtemp plugin.\n\nWilfried Goesgens <dothebart at citadel.org>\n - linux support in the zfs_arc plugin.\n\nXin Li <delphij at freebsd.org>\n - FreeBSD port of the ZFS-ARC plugin.\n\nZoltan Szabo\n - Redfish plugin.\n\ncollectd is available at:\n  <http://collectd.org/>\n\nEnjoy :)\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 1.6611328125,
          "content": "# Code ownership information.\n# See\n# https://help.github.com/en/github/creating-cloning-and-archiving-repositories/about-code-owners\n# for details.\n\n# Order is important; the *last* matching pattern takes precedence.\n\n# Default\n#\n# These owners will be the default owners for everything in the repo. Unless a\n# later match takes precedence, @collectd/trusted-contributors will be\n# requested for review when someone opens a pull request.\n*       @collectd/trusted-contributors\n\n# Per-plugin owners\n#\n# These plugins are owned by subject matter experts and require their review.\n/src/intel_pmu.c\t@collectd/intel\n/src/intel_rdt.c\t@collectd/intel\n/src/ipmi.c\t\t@collectd/intel\n/src/mcelog.c\t\t@collectd/intel\n/src/virt.c\t\t@collectd/intel\n# TODO(#2926): Add the following owners:\n#/src/redfish.c\t\t@collectd/intel\n\n# Core\n#\n# The daemon and some plugins with a huge \"blast radius\" are considered \"core\"\n# to the collectd project and require review form a \"core owner\".\n/CODEOWNERS\t\t@collectd/core-maintainers\n/src/daemon/\t\t@collectd/core-maintainers\n/src/liboconfig/\t@collectd/core-maintainers\n/src/cpu.c\t\t@collectd/core-maintainers\n/src/df.c\t\t@collectd/core-maintainers\n/src/disk.c\t\t@collectd/core-maintainers\n/src/exec.c\t\t@collectd/core-maintainers\n/src/interface.c\t@collectd/core-maintainers\n/src/memory.c\t\t@collectd/core-maintainers\n/src/network.*\t\t@collectd/core-maintainers\n/src/utils/avltree/\t@collectd/core-maintainers\n/src/utils/common/\t@collectd/core-maintainers\n/src/utils_fbhash.*\t@collectd/core-maintainers\n/src/utils/heap/\t@collectd/core-maintainers\n/src/utils/ignorelist/\t@collectd/core-maintainers\n/src/utils/metadata/\t@collectd/core-maintainers\n/src/utils/mount/\t@collectd/core-maintainers\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.4111328125,
          "content": "# Code of Conduct\n\nContributor Covenant 2.0\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement. Currently\nresponsible are:\n\n*   Florian Forster &lt;octo at collectd.org&gt;\n*   Kinga Grabarczyk &lt;kinga.grabarczyk at intel.com&gt;\n*   Nikolay Tsvetkov &lt;n.tsvetkov at cern.ch&gt;\n*   Sunku Ranganath &lt;sunku.ranganath at intel.com&gt;\n\nYou can reach this group by sending an email to:\n&lt;conduct&nbsp;at&nbsp;collectd.org&gt;.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 19.1875,
          "content": "collectd consists of a daemon and numerous plugins. The daemon is licensed\nunder the \"MIT License\"; its source files are located at src/daemon/. The\nplugins are licenses individually, please check the top of the plugin's source\nfile(s) to see which license applies. The majority of plugins is licensed\neither under the \"MIT License\" or the \"GNU General Public License\".\n\nThe \"MIT License\" and \"GNU General Public License\" follow. Other licenses, not\nincluded in this file, should be considered \"as published by the Open Source\nInitiative (OSI)\".\n\nMIT License\n===========\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\nGNU General Public License (GPL)\n================================\n\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\n\t    How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "ChangeLog",
          "type": "blob",
          "size": 232.9248046875,
          "content": "2020-09-03, Version 5.12.0\n\t* varnish plugin: Added varnish 6 support. Thanks to Charly Koza, Ismael\n\t  Puerto. #3445\n\t* amqp1 plugin: New options to limit send queue length has been added.\n\t  Thanks to Ryan McCabe. #3432\n\t* mdevents plugin: New plugin to generate notifications about events in\n\t  RAID arrays. Thanks to Krzysztof Kazimierczak, Maciej Fijałkowskii,\n\t  Michał Kobyliński. #2841\n\t* amqp plugin: Updated option to allow multiple hosts to support\n\t  failover. Thanks to Märt Bakhoff. #3410\n\t* mysql plugin: Reporting of the fields Slave_IO_Running and\n\t  Slave_SQL_Running has been added. Thanks to Thomas Mieslinger. #3463\n\t* write_http plugin: libcurl default HTTP response has been moved to a\n\t  buffer instead of stdout. Thanks to Duane Waddle. #3263\n\t* disk plugin: Provided an udev rule with ID_SERIAL based attribute so\n\t  disk and partition data don't get mixed incorrectly in udev-based disk\n\t  naming. Thanks to Maciej S. Szmigiero. #3441\n\t* swap plugin: Implementation for NetBSD has been added. Thanks to\n\t  Håvard Eidnes, Edgar Fuß. #3501\n\t* netstat_udp plugin: New plugin ((currently NetBSD-only) to report UDP\n\t  summary statistics has been aded. Thanks to Håvard Eidnes, Edgar Fuß.\n\t  #3502\n\t* smart plugin: SMART plugin has been extended with NVMe device\n\t  functionality. Thanks to Bartłomiej Kotłowski, Paweł Żak,\n\t  Sławomir Strehlau. #3510\n\t* infiniband plugin: New plugin to collect metrics about IB ports has\n\t  been added. Thanks to Luke Yeager. #3494\n\t* snmp plugin: Count option was added allowing to gather the number of\n\t  table entries (matching given criteria) rather than their values.\n\t  Thanks to Edgar Fuß. #3504\n\t* cpu plugin: Implementation for NetBSD has been added. Thanks to\n\t  Håvard Eidnes, Edgar Fuß. #3496\n\t* irq plugin: Implementation for NetBSD has been added. Thanks to\n\t  Håvard Eidnes, Edgar Fuß. #3498\n\t* processes plugin: Implementation for NetBSD has been added. Thanks to\n\t  Håvard Eidnes, Edgar Fuß. #3500\n\t* entropy plugin: Implementation for NetBSD has been added. Thanks to\n\t  Håvard Eidnes, Edgar Fuß. #3497\n\t* netlink plugin: VFs statistics and link info has been added. Thanks\n\t  to Kamil Wiatrowski. #3487\n\t* memory plugin: Implementation for NetBSD has been added. Thanks to\n\t  Håvard Eidnes, Edgar Fuß. #3499\n\t* curl_jolokia plugin: New plugin has been added to integrate jolokia to\n\t  fetch jmx counters via HTTP/json. Thanks to Wilfried Goesgens. #2470\n\t* write_sensu plugin: IncludeSource option has been added. Thanks to\n\t  Märt Bakhoff. #3398\n\t* intel_pmu plugin: Check for libjevents version has been improved.\n\t  Thanks to Kamil Wiatrowski. #3407\n\t* python plugin: Error-handling code of PyType_Ready has been added.\n\t  Thanks to Jia Zhouyang. #3402\n\t* collectd: Updated specfile for EL8. Thanks to Fabien Wernli. #3346\n\t* openvpn plugin: Parsing of empty fields has been fixed. Thanks to\n\t  Pavel Rochnyak. #3425\n\t* dpdk_telemetry plugin: Build issues has been fixed. Thanks to Fabrice\n\t  Fontaine. #3439\n\t* mqtt plugin: A problem with stuck after 20 (qos=1) messages has been\n\t  fixed. Thanks to Viulian. #2730\n\t* varnish plugin: Target in category for varnish 6 has been added.\n\t  Thanks to Charly Koza. #3446\n\t* mqtt plugin: Resubscribe after a reconnect. Thanks to Maciej\n\t  S. Szmigiero. #3452\n\t* zookeeper plugin: Missing 3.5 mntr fields has been added. Thanks to\n\t  Théophane Charbonnier. #3450\n\t* sensors plugin: The documentation has been improved. Thanks to Florian\n\t  Forster. #3443\n\t* types.db(5): Documentation of metric definitions has been improved.\n\t  Thanks to Florian Forster. #3458\n\t* intel_pmu plugin: The possible crash on plugin init has been fixed.\n\t  Thanks to Kamil Wiatrowski. #3480\n\t* processes plugin: Size of reading buffer for /proc/stat has been\n\t  increased. Thanks to Mhumpula. #3479\n\t* ubi plugin: Data source type has been fixed from counter to gauge.\n\t  Thanks to Florian Eckert. #3486\n\t* intelrdt plugin: NaN values in csv output has been fixed. Thanks to\n\t  Michał Aleksiński, Paweł Tomaszewski. #3503\n\t* capabilities plugin: Conditionalized return type for microhttpd\n\t  callback functions. Thanks to José M. Guisado. #3512\n\t* write_prometheus plugin: fix for libmicrohttpd api change. Thanks to\n\t  Bernd Zeimetz. #3514\n\t* nfs plugin: NetBSD implementation has been fixed, undefined\n\t  suppress_warning variable has been removed. Thanks to Edgar Fuß. #3495\n\t* collection3: Some small titles has been improved from {type_instance}\n\t  to {instance}. Thanks to Christian Tacke. #3476\n\t* slurm plugin: Compatibility with Slurm versions >= 20.02 has been\n\t  provided. Thanks to Pablo Llopis. #3518\n\t* collectd: Build fix: duplicate switch case has been removed. Thanks to\n\t  Sebastian Schmidt. #3536\n\t* infiniband plugin: The build has been fixed by linking with\n\t  libignorelist. Thanks to Luke Yeager. #3516\n\t* curl plugin: Memory leak has been fixed. Thanks to Barbara\n\t  Kaczorowska. #3547\n\t* network plugin: Initialization of sockent_t has been simplified.\n\t  Thanks to Florian Forster, Dagobert Michelsen. #3543\n\t* mysql plugin: Compatibility with MariaDB >=10.5 has been fixed. Thanks\n\t  to Alexander Meshcheryakov. #3548\n\t* zookeeper plugin: Missing mntr fields has been fixed. Thanks to\n\t  Théophane Charbonnier. #3449\n\t* ceph plugin: An incorrect close on file descriptor 0 has been fixed.\n\t  Thanks to Florian Forster. #3459\n\t* snmp_agent plugin: A strncat() truncation warning has been fixed.\n\t  Thanks to Florian Forster. #3564\n\n\n2020-03-15, Version 5.11.0\n\t* collectd: A Code of Conduct has been added. Thanks to Florian Forster.\n\t  #3401\n\t* text protocol: Support for meta_data in PUTVAL has been added. Thanks\n\t  to Rafael Marinheiro, Dagobert Michelsen. #3381, #2726\n\t* utils_cache: Internal API has changed - exposed meta_data_toc\n\t  function. Thanks to Javier Kohen. #3339\n\t* filter_chain: Auto load matches and targets if AutoLoadPlugin option\n\t  is set. Thanks to Manuel Luis Sanmartín Rozada. #1034\n\t* AMQP plugin: TLS support has been added. Thanks to Märt Bakhoff.\n\t  #3391\n\t* Battery plugin: Read from Linux sysfs charge files has been added.\n\t  Thanks to Nimrod Maclomhair. #3190\n\t* Buddyinfo plugin: New plugin for memory fragmentation info has been\n\t  added. Thanks to Asaf Kahlon. #3303\n\t* capabilities plugin: New plugin to read static platform data has been\n\t  added. Thanks to Kamil Wiatrowski, Dagobert Michelsen. #3384, #3292\n\t* DCPMM plugin: New plugin for Intel Optane DC Presistent Memory (DCPMM)\n\t  has been added. Thanks to Hari TG. #3274\n\t* DF plugin: LogOnce option has been added. Thanks to themylogin. #2910\n\t* DPDK Telemetry plugin: New plugin to fetch DPDK metrics (with intent\n\t  to replace dpdk_stat) has been added. Thanks to Reshma Pattan. #3273\n\t* Disk plugin: A native (sysctl-based) implementation for NetBSD has\n\t  been added. Thanks to Edgar Fuß, Dagobert Michelsen. #3379, #3334\n\t* GPU_Nvidia‏‎ plugin: Configurable plugin instance by GPU name\n\t  and/or GPU index has been added. Thanks to Robert Dietrich. #3264\n\t* Intel_PMU plugin: Support for uncore multi pmu has been added. Thanks\n\t  to Kamil Wiatrowski. #3388\n\t* Ipstats plugin: New plugin to count incoming, outgoing, forwarded\n\t  packets on FreeBSD has been added. Thanks to Marco van Tol. #3187\n\t* Java plugin: Support boolean input has been added. Thanks to Caden.\n\t  #3044\n\t* Logparser plugin: New plugin for filtering and parsing log messages\n\t  has been added. Thanks to Kamil Wiatrowski, Krzysztof Matczak, Marcin\n\t  Możejko, Adrian Boczkowski, Radosław Jabłonski. #3045\n\t* Network plugin: New metadata \"network:ip_address\" has been added.\n\t  Thanks to Takuro Ashie. #3191\n\t* NFS plugin: An implementation for NetBSD (using sysctl) has been\n\t  added. Thanks to Edgar Fuß, Dagobert Michelsen. #3377, #3333\n\t* NUT plugin: Support for the \"output.realpower\" value from the ups code\n\t  has been added. Thanks to Michael Poetters. #2528\n\t* Redfish plugin: New read plugin to collect out-of-band sensor data\n\t  from Redfish endpoints has been added. Thanks to Marcin Możejko,\n\t  Adrian Boczkowski, Michal Kobyliński, Krzysztof Kepka, Man Singh,\n\t  Zoltan Szabo. #2926\n\t* Slurm plugin: The new SLURM plugin gathers metrics from the SLURM\n\t  workload manager has been added. Thanks to Pablo Llopis. #3037\n\t* Tail_CSV plugin: FieldSeparator option has been added. Thanks to\n\t  Dheeraj Gupta. #3394\n\t* UBI plugin: The new \"ubifs\" plugin reports block state for flash\n\t  memory devices with UBIFS filesystem has been added. Thanks to Pierre\n\t  Lebleu. #3204\n\t* Write_HTTP plugin: Ability to configure cURL statistics has been\n\t  added. Thanks to Nelson. #3265\n\t* Write_Influxdb_UDP plugin: New plugin to send values to InfluxDB using\n\t  line protocol via udp has been added. Thanks to Carlos Peón Costa.\n\t  #3162\n\t* Zookeeper plugin: 'quorum' stat has been added. Thanks to Chris Brown.\n\t  #2991\n\t* collectd: Missing package in specfile has been fixed. Thanks to Fabien\n\t  Wernli. #3399\n\t* collectd: Factored out read_text_file_contents for reading text files\n\t  and used it to fix a potential unterminated string in the thermal\n\t  plugin. Thanks to Igor Peshansky. #3359\n\t* collectd: Error/warning messages has been extended with more\n\t  information. Thanks to Dagobert Michelsen. #3386\n\t* collectd: Regression caused by #3217 has been fixed. Thanks to Pavel\n\t  Rochnyak. #3349\n\t* build: version-gen.sh has been cleaned up. Thanks to William Pursell.\n\t  #2635\n\t* build: Linking with Python 3.8 has been fixed. Thanks to Alexander\n\t  Meshcheryakov. #3344\n\t* build: Avoid $< (implied source) in non-inference rules / Building\n\t  grpc with non-GNU make has been fixed. Thanks to Edgar Fuß, Dagobert\n\t  Michelsen. #3376, #3330\n\t* filter_chain: Constant for max plugin name length introduced in #1034\n\t  has been fixed. Thanks to Dagobert Michelsen. #3385\n\t* ignorelist: Coding style has been fixed. Thanks to Dagobert Michelsen.\n\t  #3397\n\t* match_regex: Accept all data types of meta data. Thanks to Takuro\n\t  Ashie. #3231\n\t* perl unixsock: Made the module robust against socket errors and\n\t  disconnects. Thanks to Guillem Jover. #3083\n\t* tree-wide: Race condition when setting thread names has been fixed.\n\t  Thanks to Michael Kaufmann. #2762\n\t* types.db: ping_droprate range spec has been fixed. Thanks to Yousong\n\t  Zhou. #3244\n\t* utils/format_graphite: Comma sign has been added to the list of\n\t  prohibited characters. Thanks to Marat Salimzianov. #2998\n\t* Aggregation plugin: Unreachable clause where both tmp_plugin and\n\t  tmp_plugin_instance are non-empty has been fixed. Thanks to Ling\n\t  Huang. #3350\n\t* AMQP1 plugin: Leaks on error paths has been fixed. Thanks to Ryan\n\t  McCabe. #3352\n\t* Apache plugin: BusyWorkers/IdleWorkers update has been fixed. Thanks\n\t  to Christian W. Zuckschwerdt. #3131\n\t* CPU plugin, Memory plugin, Swap plugin, UUID plugin: Contain use of\n\t  sysctl / sysctrlbyname to BSD variants, as deprecated on Linux. Thanks\n\t  to Zebity Spring. #3342\n\t* Exec plugin: Select has been replaced with poll to allow more then\n\t  1024 open file descriptors. Thanks to Kamil Wiatrowski. #3363\n\t* GPU_Nvidia plugin: Build issues has been fixed. Thanks to Ruben\n\t  Kerkhof. #3393\n\t* Interface plugin: Reorder so that Linux-specific code is actually\n\t  executed. Thanks to Dagobert Michelsen. #3378\n\t* NFS plugin: Condition on existence of libkstat has been fixed. Thanks\n\t  to Dagobert Michelsen. #3382\n\t* Network plugin: Memory leak has been fixed. Thanks to Ryan McCabe.\n\t  #3352\n\t* Processes plugin: Number of running processes has been fixed. Thanks\n\t  to Bart De Vos. #3243\n\t* Write_Riemann plugin: Memory leak has been fixed. Thanks to Fabien\n\t  Wernli. #3351\n\t* Write_Stackdriver plugin: NaN value handing with gauge metrics has\n\t  been fixed. Thanks to Jaroslaw Przybylowicz. #3226\n\n\n2019-10-17, Version 5.10.0\n\t* turbostat plugin: Power metrics update for recent server CPUs. Thanks\n\t  to Chris MacNamara. #3276\n\t* turbostat plugin: Fix warnings generated by the turbostat plugin.\n\t  Thanks to Ryan Mccabe. #3340\n\t* ZFS ARC plugin: New cache values are now read on Linux. Thanks to\n\t  Jan-Philipp Litza. #3247, #2843\n\t* connectivity plugin: monitor the network interface up/down status via\n\t  the netlink library. Thanks to Andrew Bays. #2622\n\t* sysevent plugin: A new plugin that monitors rsyslog for system events.\n\t  Thanks to Andrew Bays. #2624\n\t* procevent plugin: A new plugin that monitors process starts/stops via\n\t  netlink library. Thanks to Andrew Bays. #2623\n\t* daemon: Check if plugin actually loaded before reporting configuration\n\t  issues. Thanks to Pavel Rochnyak. #3217\n\t* daemon: Recover setlocale() call in src/daemon/collectd.c do_init().\n\t  Thanks to Pavel Rochnyak. #3181, #3214\n\t* Build System: Only include <sys/sysctl.h> when needed. Thanks to Ruben\n\t  Kerkhof. #3298\n\t* Build System: Link to libnsl.so if needed for inet_ntop(). Thanks to\n\t  Dagobert Michelsen. #3291\n\t* Build System: Remove double \"without\" added by commit b781871. Thanks\n\t  to Fabrice Fontaine. #3261\n\t* Build System: fix compile time issues. Thanks to Matthias Runge.\n\t  #3179, #3242, #3245\n\t* Build System: Fix activation of snmp_agent. Thanks to Fabrice\n\t  Fontaine. #3241\n\t* Build System: Fix bug that leads to CPPFLAGS gets overridden with\n\t  CFLAGS when libxmms is enabled. Thanks to Dagobert Michelsen. #3207\n\t* perl module: Collectd::Plugins::Openvz: Fix indentation of some\n\t  closing curlies. Thanks to Christian Bartolomäus. #3239\n\t* tree-wide: Fix a few issues found with LGTM. Thanks to Ruben Kerkhof.\n\t  #3252\n\t* tree-wide: fix ssnprintf wrapper. Thanks to Fabien Wernli.\n\t  #3237, #3232, #3235, #3236\n\t* tree-wide: Fix make check. Thanks to Ruben Kerkhof. #3306\n\t* CI System: Travis: switch to Bionic. Thanks to Ruben Kerkhof. #3307\n\t* CI System: Travis improvements for MacOS. Thanks to Ruben Kerkhof.\n\t  #3308\n\t* MySQL plugin: Minor documentation improvements. Thanks to Christian\n\t  Bartolomäus. #3288\n\t* Java plugin: Fix typo in an error message. Thanks to Matthias Runge.\n\t  #3285, #3286\n\t* sysevent plugin: Add a few missing calloc result checks in the\n\t  sysevent_init function. Thanks to Andrew Bays. #3282\n\t* ZFS ARC plugin: A bug that caused the first to values to be skipped\n\t  was fixed. Thanks to Jan-Philipp Litza. #3246\n\t* SysLog plugin: restore previous behaviour: fallback to info for\n\t  unsupported level. Thanks to Fabien Wernli. #3236, #3238\n\t* virt plugin: Fix memory leak with libvirt MetadataXPath enabled.\n\t  Thanks to Pavel Rochnyak. #3225, #3228\n\t* GPU NVidia plugin: Fix build of the plugin. Thanks to Ruben Kerkhof.\n\t  #3320\n\n2019-10-01, Version 5.9.2\n\t* syslog plugin: Don't fail if syslog loglevel doesn't match. Thanks to\n\t  Fabien Wernli. #3236 #3238\n\t* collectd: Fix ssnprintf wrapper. Thanks to Fabien Wernli. #3237\n\t* rdt plugin: Fix compile time issues. Thanks to Matthias Runge. #3245\n\n2019-07-24, Version 5.9.1\n\t* collectd: redhat spec: fix build due to new upstream plugins. Thanks\n\t  to Fabien Wernli. #3175\n\t* collectd: regex match: Fix unexpected match with empty meta data .\n\t  Thanks to Takuro Ashie. #3178\n\t* collectd: Fix return value or loglevel for several plugins. Thanks to\n\t  Fabien Wernli. #3182\n\t* collectd: Add standard include early or _FILE_OFFSET_BITS will have\n\t  definition … . Thanks to Dagobert Michelsen. #3193\n\t* collectd: Use GCC-specific flags only when compiling with GCC. Thanks\n\t  to Dagobert Michelsen. #3195\n\t* Use test_utils_proc_pids only when compiling the plugin that uses it.\n\t  Thanks to Dagobert Michelsen. #3197\n\t* DNS plugin: Do not use headers from glibc. Thanks to Pavel Rochnyak.\n\t  #3156, #3145\n\t* collectd: Add missing definitions for libnetsnmpagent. Thanks to\n\t  Dagobert Michelsen. #3203\n\t* collectd: Move Makefile rules for pid_test inside conditional for\n\t  code. Thanks to Dagobert Michelsen. #3206\n\t* collectd: Recover setlocale() call in src/daemon/collectd.c do_init().\n\t  Thanks to Pavel Rochnyak. #3214, #3181\n\t* collectd: Add snprintf wrapper for GCC 8.2/3. Thanks to zebity. #3153,\n\t  #2895, #3038\n\t* collectd: Fix bug that leads to CPPFLAGS gets overridden with CFLAGS\n\t  when libxmms is enabled. Thanks to Dagobert Michelsen. #3207\n\t* Write_Riemann plugin: Copy MetaData to Riemann events in\n\t  write_riemann. Thanks to Romain Tartière. #3158\n\t* virt plugin: Fix memory leak with libvirt MetadataXPath enabled.\n\t  Thanks to Pavel Rochnyak. #3225, #3230\n\n2019-06-13, Version 5.9.0\n\t* Build System: configure.ac: option \"--with-libxml2\" has been added.\n\t  Thanks to Dimitrios Apostolou, Pavel Rochnyak. #2864\n\t* Build System: configure.ac: run dpdk build tests only if pkgconfig\n\t  fails. Thanks to Luca Boccassi, Pavel Rochnyak. #3015\n\t* Build System: The \"df\" plugin is now built when \"getmntent_r()\" is\n\t  available. Thanks to Florian Forster. #3095\n\t* Build System: The ability to turn on collectd \"debug\" feature in RPMs\n\t  has been added. Thanks to dehotot. #2755\n\t* collectd: A new \"UNKNOWN\" state as the initial state of metrics has\n\t  been added. Thanks to Luis Fernández Álvarez, Florian Forster. #2976\n\t* collectd: Base port to Windows. Thanks to Sean Campbell. #2810\n\t* collectd: Code ownership of five plugins has been handed out to folks\n\t  from Intel. Thanks to Florian Forster. #3053\n\t* collectd: config parser: Improved error reporting on global options.\n\t  Thanks to Pavel Rochnyak. #2813\n\t* collectd: daemon: make plugin_dispatch_multivalue() obey write queue\n\t  limits. Thanks to Adam Romanek. #2898\n\t* collectd: Macros \"STRERROR\" and \"STRERRNO\" have been added. Thanks to\n\t  Florian Forster. #2519\n\t* collectd: Plugin name field has been added to plugin context to\n\t  improve error reporting. Thanks to Pavel Rochnyak. #2821\n\t* collectd-tg: Use \"CLOCK_REALTIME\" for collectd-tg times. Thanks to\n\t  Andrew Bays. #2837\n\t* tree-wide: Don't initialize static pointers to NULL, use \"bool\" from\n\t  \"stdbool.h\" (instead of \"_Bool\"). Thanks to Ruben Kerkhof. #2771,\n\t  #2772\n\t* tree-wide: Replace zu with \"PRIsz\" and llu with \"PRIu64\". Thanks to\n\t  Sean Campbell. #2512\n\t* tree-wide: Use interval value from plugin context, do not set\n\t  \"vl->interval\" in plugins more. Thanks to Pavel Rochnyak. #2847\n\t* tree-wide: Utilities and libraries have been moved to \"src/utils/\".\n\t  Thanks to Florian Forster. #2961\n\t* AMPQ1 plugin: A new plugin to write to amqp1 protocol. Thanks to Andy\n\t  Smith. #2618\n\t* Chrony plugin: Ignoring late responses has been added. Thanks to\n\t  Miroslav Lichvar, Pavel Rochnyak. #2896\n\t* CPUFreq plugin: Read number of p-state transitions and time spent in\n\t  each p-state. Thanks to Sexton Rory. #2803\n\t* cURL, cURL-XML plugins: Option \"Interval\" has been added. Thanks to\n\t  Pavel Rochnyak. #2847\n\t* Disk plugin: Report number of in progress disk IO requests on FreeBSD.\n\t  Thanks to Nathan Huff. #2878\n\t* Exec plugin: Dynamic allocation of grname buffer has been added.\n\t  Thanks to sreedi, Florian Forster. #2937\n\t* GPU NVML plugin: New plugin to collect NVIDIA GPU stats. Thanks to\n\t  Evgeny Naumov. #2923\n\t* gRPC plugin: The \"VerifyPeer\" option for servers has been added.\n\t  Thanks to Florian Forster. #2593\n\t* Intel RDT plugin: Support for groups of PIDs has been added. Thanks to\n\t  Wojciech Andralojc, Mateusz Starzyk, Michal Aleksinski. #2891\n\t* IPMI plugin: Config options \"SELSensor\" and \"SELIgnoreSelected\" have\n\t  been added. Thanks to Mariusz Szafranski. #2796\n\t* Modbus plugin: Support for 64 bit vals has been added, support for\n\t  CDAB endian 32-bit modbus polls has been added. Thanks to Anthony\n\t  Vickers, PJ Bostley. #2670, #2660\n\t* Modbus plugin: The \"Scale\" and \"Shift\" metrics have been added. Thanks\n\t  to cekstam. #2729\n\t* Netlink plugin: Handle new counter from Linux kernel version 4.6+.\n\t  Thanks to Pavel Rochnyak. #2767\n\t* Network plugin: Option \"BindAddress\" has been added. Thanks to Ofir\n\t  Hermesh. #2831\n\t* Ping plugin: An \"AddressFamily\" configuration option has been added.\n\t  Thanks to 依云 lilydjwg. #2961\n\t* OVS Stats plugin: Extended metrics \"ovs-dpdk\" have been added. Thanks\n\t  to Matteo Croce, Ryan McCabe. #3000\n\t* OVS Stats plugin: Support of bond interface and a \"InterfaceStats\"\n\t  config option have been added. Thanks to Andrew Bays. #2880\n\t* PCIe Errors plugin: New plugin to read \"PCIe\" errors. Thanks to Kamil\n\t  Wiatrowski. #2733\n\t* Processes plugin: Support for Linux Delay Accounting has been added.\n\t  Thanks to Florian Forster. #2598\n\t* Redis plugin: Keyspace \"hitratio\" metric has been added, metric\n\t  \"operations_per_second\" has been removed, an option for connecting via\n\t  UNIX socket has been added. Thanks to Pavel Rochnyak. #2838, #2845,\n\t  #2904\n\t* RouterOS plugin: Support for temperature and voltage data has been\n\t  added, use MAC-address when Radio-name is missing. Thanks to Pavel\n\t  Rochnyak. #2851, #2854\n\t* RRDCacheD plugin: Time resolution has been improved to microseconds.\n\t  Thanks to Brian T. O'Neill. #3065\n\t* Sensors plugin: Checks for upper limit of \"SENSORS_API_VERSION\" have\n\t  been removed, support for libsensors older than 3.0.0 has been\n\t  dropped. Thanks to Pavel Rochnyak. #3013, #3014\n\t* SNMP plugin: New options \"PluginInstance\", \"TypeInstance\",\n\t  \"TypeInstanceOID\", \"PluginInstanceOID\", \"FilterOID\", \"FilterValues\"\n\t  and \"FilterIgnoreSelected\" have been added. Thanks to Pavel Rochnyak.\n\t  #2817, #2819\n\t* SNMP Agent plugin: Multiple key indexes to snmp table and other new\n\t  features have been added, refactoring, coverity scan issues have been\n\t  fixed. Thanks to Marcin Mozejko. #2702, #2844\n\t* Swap plugin: Support for Linux 2.4 has been dropped. Thanks to Pavel\n\t  Rochnyak. #2979\n\t* Turbostat plugin: Configuration option \"RestoreAffinityPolicy\" has\n\t  been added. Thanks to Pablo Llopis. #2627\n\t* Turbostat plugin: New metrics \"P-states\", \"Turboboost\", \"Platform\n\t  TDP\", \"Uncore bus ratio\" have been added. Thanks to Sexton Rory. #2806\n\t* Turbostat plugin: Support of reporting GPU power on SKL has been\n\t  added. Thanks to Gordon Kelly. #2605\n\t* virt plugin: Allow read \"Hostname\" from libvirt metadata. Thanks to\n\t  Mehdi ABAAKOUK. #2807\n\t* virt plugin: Block info statistics for disk devices have been added.\n\t  Thanks to Radoslaw Jablonski. #2874\n\t* Wireless plugin: A \"bitrate\" metric has been added. Thanks to Florian\n\t  Forster. #2950\n\t* Write Graphite, Write Kafka plugins: Support for Graphite 1.1+ tag has\n\t  been added. Thanks to Dan Cech. #2631\n\t* Write Prometheus plugin: Option \"Host\" has been added. Thanks to Pavel\n\t  Rochnyak. #2969\n\t* Write Stackdriver plugin: New plugin to write to Google Stackdriver\n\t  Monitoring. Thanks to Florian Forster. #2472\n\t* Write Syslog plugin: \"write_syslog\" plugin writes values lists as\n\t  syslog messages. Thanks to Shirly Radco. #3019\n\t* Build System: A warning that pkgdatadir and pkglibdir were previously\n\t  defined has been fixed, additional plugins have been enabled,\n\t  GNULIB_DIR has been added to LDFLAGS in configure.ac on Windows.\n\t  Thanks to Sean Campbell. #2907, #2885, #2882\n\t* Build System: Including \"utils/mount/mount.h\" has been fixed. Thanks\n\t  to Florian Forster. #3097\n\t* Build System: The amount of output from ./configure has been reduced,\n\t  rendering of collectd-lua(5) manpage has been fixed, don't hide errors\n\t  when creating manpage. Thanks to Ruben Kerkhof. #3086, #3088, #3092\n\t* collectd: A bug in \"c_avl_iterator_prev\" has been fixed. Thanks to\n\t  volth. #2917\n\t* collectd: A stringop compiler warning has been fixed. Thanks to Ruben\n\t  Kerkhof, Juan Osorio Robles. #3021\n\t* collectd: An invalid memory access in the \"strjoin()\" function has\n\t  been fixed. Thanks to Florian Forster. #3063\n\t* collectd: collectd binary has been refactored. Thanks to Sean\n\t  Campbell, Sebastian Harl. #2745\n\t* collectd: collectdmon cannot exit command line options parse loop has\n\t  been fixed. Thanks to takahashi-tsc. #2774\n\t* collectd: Endianness checks for AIX have been added, gcc issue on Mac\n\t  byteorder has been fixed, fallback for endianness conversion has been\n\t  added. Thanks to Dagobert Michelsen. #2761, #2741, #2717\n\t* collectd: Handle failure of simple config callbacks. Thanks to Ruben\n\t  Kerkhof. #3085\n\t* collectd: Include \"kstat.h\" if available to provide \"kstat_ctl_t\",\n\t  include \"kstat.h\" when available. Thanks to Dagobert Michelsen. #2716,\n\t  #2711\n\t* collectd: Parsing option for avoiding making BaseDir has been fixed.\n\t  Thanks to Mariusz Białończyk. #2856\n\t* collectd: Remove empty \"cmd_listval_t\" data structure and related\n\t  no-op code. Thanks to Pavel Rochnyak. #2779\n\t* collectd: src/daemon/plugin.c: Refactor plugin_load_file(),\n\t  src/utils_format_json.c: Remove chatty debug messages. Thanks to\n\t  Florian Forster. #2558, #2938\n\t* collectd: Stop poisoning function in debug mode. Thanks to Ruben\n\t  Kerkhof. #2804\n\t* collectd: The number of allocations when parsing types.db has been\n\t  reduced. Thanks to Ruben Kerkhof. #3091\n\t* collectd: The organization of the source repository has been improved.\n\t  Thanks to Florian Forster. #2961\n\t* collectd: Typos have been fixed. Thanks to Florian Forster, Jakub\n\t  Jankowski, William Pursell. #2944, #2692, #2643\n\t* tree-wide: cleanup: cf_util_get* instead of local copy in plugins,\n\t  prefixed error reporting. Thanks to Pavel Rochnyak. #2833\n\t* tree-wide: Some style issues have been fixed. Thanks to Ruben Kerkhof.\n\t  #3022\n\t* tree-wide: \"sstrerror()\" has been replaced with \"STRERRNO\". Thanks to\n\t  Pavel Rochnyak. #2735\n\t* AMQP1 plugin: Potential memory leaks found via scan-build have been\n\t  fixed, a typo in error log message has been fixed, cleanups. Thanks to\n\t  Andy Smith, Andrew Bays, Ruben Kerkhof. #2802, #2876, #2797\n\t* Barometer plugin: Support to \"libi2c-4.0\" has been added. Thanks to\n\t  Pavel Rochnyak. #2783\n\t* DBI, Oracle, PostgreSQL plugins: Fixes and improvements. Thanks to\n\t  Pavel Rochnyak. #1705\n\t* Disk plugin: \"HAVE_UDEV_H\" has been changed to \"HAVE_LIBUDEV_H\".\n\t  Thanks to Dylan Stephano-Shachter. #2668\n\t* Disk plugin: In linux, reset the disk when it disappears from\n\t  \"/proc/diskstats\". Thanks to Nikita Kozlov, Pavel Rochnyak. #2551\n\t* DPDK Events, DPDK Stats plugins: Buffer size for parsing lcores has\n\t  been increased, a deprecation warning has been fixed, runtime config\n\t  file path has been fixed. Thanks to Kevin Laatz. #2722, #2840, #2924\n\t* DPDK Stats plugin: A compilation issue has been fixed. Thanks to\n\t  Volodymyr Mytnyk. #2524\n\t* GPS plugin: Build with gpsd version 3.18 has been fixed. Thanks to\n\t  Baruch Siach. #2947\n\t* Intel RDT plugin: Compiler warnings have been fixed. Thanks to Ruben\n\t  Kerkhof. #3104\n\t* Log Logstash plugin: Non-portable struct initialization with \"{}\" has\n\t  been fixed. Thanks to Florian Forster. #2988\n\t* LUA plugin: A memory leak has been fixed. Thanks to Ruben Kerkhof.\n\t  #3090\n\t* MySQL plugin: Properly cleanup dropped MySQL connections. Thanks to\n\t  Dhrupad Bhardwaj. #2704\n\t* Netlink plugin: Truncation warnings have been fixed. Thanks to Ruben\n\t  Kerkhof. #2777\n\t* NFS plugin: Message \"Unexpected number of fields for NFSv4 server\n\t  statistics: 62\" has been fixed. Thanks to Yedidyah Bar David. #2076\n\t* NFS plugin: Number of fields for \"NFSv4\" has been fixed. Thanks to\n\t  Jan-Philipp Litza. #2915\n\t* Notify Email plugin: All notification parameters have been included\n\t  into email. Thanks to Pavel Rochnyak. #2834\n\t* NTPd plugin: Don't treat normal peers as refclocks, skip \"0.0.0.0\"\n\t  hosts in ntpd plugin. Thanks to Pavel Rochnyak, Ivan Kurnosov. #2822,\n\t  #2376\n\t* OAuth plugin: src/utils_oauth.c: Renew OAuth tokens 30 seconds before\n\t  they expire. Thanks to Florian Forster. #2970\n\t* OVS Stats plugin: A macro to populate counters list has been added,\n\t  value of \"OpenFlow\" has been corrected. Thanks to Matteo Croce. #2966,\n\t  #2963\n\t* OVS Stats plugin: Code style, cleanup and improvements. Thanks to\n\t  Pavel Rochnyak. #3011, #3012\n\t* OVS Stats, OVS Events plugins: utils_ovs: Avoid potential access of\n\t  freed memory, fixes. Thanks to Ciara Loftus, Mark Kavanagh. #2801,\n\t  #2731\n\t* Processes plugin: Compilation has been fixed when ps_delay() is not\n\t  used. Thanks to Pavel Rochnyak. #2610\n\t* Python plugin: A compilation warning with Python 3.7 has been fixed.\n\t  Thanks to Manoj Srivastava. #3042\n\t* Redis plugin: Bugfixes, extended error reporting, persistent\n\t  connections and parallel polling, ability to select db for queries has\n\t  been fixed. Thanks to Pavel Rochnyak, skob. #2826, #2789\n\t* Router OS plugin: Unset radio-name showing up as \"(null)\" has been\n\t  fixed. Thanks to melak. #2740\n\t* RRDCacheD plugin: Cleanup rrdcached plugin a bit. Thanks to Pavel\n\t  Rochnyak. #3080\n\t* RRDTool plugin: Error reporting has been extended. Thanks to Pavel\n\t  Rochnyak. #2825\n\t* Sensors plugin: Support for humidity sensors has been added. Thanks to\n\t  Sarah Fischmann. #2913\n\t* Sensu, OVS Stat, Turbostat, virt, OAuth, Write Prometheus, Intel RDT\n\t  plugins: Compiler warnings have been fixed. Thanks to Ruben Kerkhof.\n\t  #3093, #3098, #3099, #3100, #3102, #3103, #3104\n\t* virt plugin: Code \"do {} while(0)\" around macro has been removed.\n\t  Thanks to Florian Forster. #2579\n\t* virt plugin: Compiler warnings, a segfault in libvirt, typo in error\n\t  messages have been fixed. Thanks to Antoine Naud, Ruben Kerkhof, sarah\n\t  niuxu18. #2808, #2919, #2957\n\t* virt plugin: Optional \"virDomainGetCPUStats()\" has been removed from\n\t  main flow, cleanup. Thanks to Pavel Rochnyak. #2972, #2978\n\t* virt plugin: Tracking of VM state changes has been fixed. Thanks to\n\t  Radoslaw Jablonski. #2701\n\t* Write MongoDB plugin: Plugin dependencies have been fixed. Thanks to\n\t  Pavel Rochnyak. #3010\n\t* Write Prometheus plugin: A compilation issue on Mac OS X has been\n\t  fixed. Thanks to Florian Forster. #3059\n\t* Write Redis plugin: Bug \"\"max_set_duration\" deletes unexpected data\"\n\t  has been fixed. Thanks to takahashi-tsc. #2773\n\t* Write Stackdriver plugin: Potential NULL dereference and error\n\t  reporting have been fixed. Thanks to Florian Forster. #2960\n\t* collectd.conf(5): a typo has been fixed, the tail plugin's\n\t  documentation has been improved. Thanks to Ruben Kerkhof, Florian\n\t  Forster. #3087, #2994\n\t* collectd.conf.pod: virt: \"Instances\" option has been documented, a\n\t  clarifying example has been added. Thanks to Pavel Rochnyak, Fabien\n\t  Wernli. #2990, #2903\n\t* collectd-python: \"Import\" configuration option has been documented.\n\t  Thanks to Tyler Harper. #2985\n\t* collectd-snmp.pod: Document thread usage correctly. Thanks to Nathan\n\t  Ward. #3078\n\t* CONTRIBUTING.md: Improve wording around ChangeLog; fix example,\n\t  document the new change log requirement / behavior. Thanks to Florian\n\t  Forster. #3061, #3054\n\t* docs/review_comments.md: document with frequent review comments has\n\t  been started. Thanks to Florian Forster. #2964\n\t* README: Include compiler defenses suggestion, do not point users to\n\t  non-existing file. Thanks to Kevin Laatz, Ruben Kerkhof. #2721, #2045\n\n2018-10-23, Version 5.8.1\n\t* collectd: Fix \"BaseDir\" option. Thanks to Mariusz Białończyk and\n\t  Pavel Rochnyak. #2857\n\t* collectd: improve error handling, check return values. Thanks to\n\t  Florian Forster.\n\t* Build System: use \"kstat.h\", when available. Thanks to Dagobert\n\t  Michelsen and Pavel Rochnyak. #2784\n\t* Build System: Fix distcheck on MacOS. Thanks to Ruben Kerkhof.\n\t* Build System: add missing include of \"\"collectd.h\"\" to fix builds on\n\t  Solaris. Thanks to Pavel Rochnyak.\n\t* Build System: add endianess checks for AIX, fix GCC issue on Mac\n\t  byteorder, fix byteorder on Solaris, add fallback for endianess\n\t  conversion. Thanks to Dagobert Michelsen (multiple cherry picks from\n\t  master).\n\t* Build System: Out-of-tree builds have been fixed. Thanks to Florian\n\t  Forster. #2602\n\t* Configuration: Error handling in the config parsing code has been\n\t  improved. Thanks to Florian Forster.\n\t* Documentation: Fix typo in collectd.conf(5). Thanks to Pavel Rochnyak.\n\t  #2760\n\t* Documentation: update note on dpdkstat. Thanks to Maryam Tahhan. #2613\n\t* Various plugins: Errors found by the static code analysis tool\n\t  Coverity were fixed. Thanks to Florian Forster. #2559, #2560, #2561,\n\t  #2562, #2563, #2565, #2568, #2575, #2579, #2580, #2588, #2589\n\t* Ceph plugin: A segfault has been fixed. Thanks to Aleksei Zakharov and\n\t  Matthias Runge. #2572\n\t* DF plugin: fix memory leak in error case. Thanks to Takahashi tsc.\n\t* Exec plugin: check return value of \"plugin_thread_create()\". Thanks to\n\t  Florian Forster.\n\t* Exec plugin: Handling of large groups has been fixed. Thanks to\n\t  Sridhar Mallem. #2696\n\t* Exec plugin: Incorrect use of *putenv(3)* has been fixed. Thanks to\n\t  Daniel Vrátil.\n\t* Exec plugin: A deadlock related to setting environment variables after\n\t  *fork()* has been fixed. Thanks to Daniel Vrátil.\n\t* Intel PMU plugin: add core groups feature. Thanks to Kamil Wiatrowski.\n\t  #2681\n\t* Intel PMU plugin: fix compatibility issue with collectd 5.8. Thanks to\n\t  Kamil Wiatrowski.\n\t* Intel PMU plugin: fix possible \"NULL\" pointer dereference. Thanks to\n\t  Kamil Wiatrowski. #2676\n\t* IPMI plugin: A segfault caused by a wrong data type has been fixed.\n\t  Thanks to Mariusz Szafrański. #2742\n\t* IPMI plugin: The sensor configuration option has been fixed. Thanks to\n\t  Pavel Rochnyak. #2629\n\t* memcached plugin: A deadlock situation has been fixed. Thanks to Pavel\n\t  Rochnyak. #2612\n\t* NFS plugin: Support for NFSv4 has been fixed. Thanks to Jan-Philipp\n\t  Litza. #2076\n\t* NTPd plugin: A memory leak in the error handling path has been fixed.\n\t  Thanks to Ruben Kerkhof. #2942\n\t* OVS Stats plugin: A deadlock situation has been fixed. Thanks to\n\t  Volodymyr Mytnyk. #2590\n\t* OVS Stats plugin: Fix reconnect after thread terminated. Thanks to\n\t  Volodymyr Mytnyk and Maram Tahhan. #2574\n\t* Perl plugin: A compilation failure has been fixed. Thanks to Pavel\n\t  Rochnyak. #2732\n\t* Perl plugin: Fix exporting notification meta data. Thanks to Florian\n\t  Forster.\n\t* RRDtool plugin: Handling of very large \"GAUGE\" metrics has been fixed.\n\t  Thanks to Miroslav Lichvar. #2566\n\t* Tail plugin: Several regressions have been fixed. Thanks to Pavel\n\t  Rochnyak. #2535, #2587, #2611\n\t* turbostat plugin: A potential segfault due to an incorrect *free()*\n\t  has been fixed. Thanks to Ruben Kerkhof. #2948\n\t* UUID plugin: Fix hostname setting. Thanks to Pavel Rochnyak. #2723\n\t* virt plugin: A segfault during error handling has been fixed. Thanks\n\t  to Ruben Kerkhof. {{Issue|2919]}\n\t* Write Kafka plugin: A build failure due to a deprecated API call has\n\t  been fixed. Thanks to Pavel Rochnyak. #2607, #2628, #2640\n\t* Write Prometheus plugin: Fix \"MHD_USE_INTERNAL_POLLING_THREAD\" flag in\n\t  newer libmicrohttpd. Thanks to Pavel Rochnyak. #2849\n\t* Write Prometheus plugin: set \"SO_REUSEADDRESS\" on listening socket.\n\t  Thanks to Pavel Rochnyak. #2570, #2673\n\t* Write Syslog plugin: The new \"write_syslog\" plugin writes value\n\t  lists as syslog messages. Thanks to Shirly Radco. #3019\n\n2017-11-17, Version 5.8.0\n\t* collectd: The core daemon is now completely licensed under the MIT\n\t  license.\n\t* collectd: Added daemon option to avoid making BaseDir. Thanks to\n\t  Nathaniel Wesley Filardo and Florian Forster. #2422\n\t* collectd: Global variables have been moved to their own module to make\n\t  porting collectd easier. Thanks to Sean Campbell. #2467\n\t* collectd as well as Apache, memcached, OpenLDAP, Perl, RouterOS, SNMP,\n\t  Tail-CSV plugins: Free userdata for \"plugin_register_complex_read()\".\n\t  Thanks to Pavel Rochnyack. #2349\n\t* Collectd client library: Added parsing and server code. Thanks to\n\t  Florian Forster. #2258\n\t* Build system: Dependency on libltdl has been removed, support for\n\t  libtool 1 has been dropped. Thanks to Ruben Kerkhof. #1898\n\t* Build system: The build system has been switched to non-recursive\n\t  make. Thanks to Ruben Kerkhof. #2085\n\t* APC UPS plugin: The plugin's configuration is now optional. Without a\n\t  \"<Plugin />\" block reasonable defaults will be used. Thanks to Pavel\n\t  Rochnyack. #2351\n\t* Chrony plugin: Several issues found when working with a stratum-1\n\t  server have been fixed. Thanks to Miroslav Lichvar. #2190\n\t* Ceph plugin: Support for the Ceph version \"Luminous\" has been added.\n\t  Thanks to Aleksei Zakharov. #2464\n\t* CPU plugin : Linux-specific \"guest\" states have been added. Thanks to\n\t  Xavier G. #2439\n\t* cURL plugin, cURL-JSON, cURL-XML, DBI, FileCount, memcachec, Oracle,\n\t  PostgreSQL, Table, Tail, Tail CSV plugins: The ability to configure\n\t  the \"plugin\" field of generated metrics has been added. Thanks to\n\t  Pavel Rochnyack. #1944, #1681, #1558\n\t* cURL-JSON plugin: Parsing of arrays has been fixed. Thanks to Florian\n\t  Forster. #2281\n\t* DPDKEvents plugin: This new plugin reports link status and keep alive\n\t  events. Thanks to Maryam Tahhan, Harry van Haaren, Serhiy Pshyk,\n\t  Kim-Marie Jones, Krzysztof Matczak, Przemyslaw Szczerbik, Christian\n\t  Ehrhardt and Luca Boccassi. #2157, #2348, #2400, #2405, #2417\n\t* DPDKStat plugin: The plugin has been refactored to make DPDK related\n\t  utility functions reusable. Thanks to Krzysztof Matczak, Przemyslaw\n\t  Szczerbik, Christian Ehrhardt and Luca Boccassi. #2130, #2348, #2400,\n\t  #2405, #2417\n\t* DPDKStat plugin: The \"LogLevel\" and \"RteDriverLibPath\" config options\n\t  have been added. Thanks to Jiri Prokes. #2505\n\t* Email plugin as well as Exec and Unixsock plugins: Use\n\t  \"_SC_GETPW_R_SIZE_MAX\". Thanks to Florian Forster. #2451\n\t* FileCount plugin: Custom values for reported plugin, type and type\n\t  instance. Thanks to Pavel Rochnyack. #1979\n\t* GenericJMX plugin: Support for \"AtomicInteger\" and \"AtomicLong\" has\n\t  been added. Thanks to Pierre Mauduit. #2158\n\t* gRPC plugin: Support for meta data has been added. Thanks to Taylor\n\t  Cramer. #2378\n\t* IPC plugin: Fixed failed compilation on AIX. Thanks to Pavel\n\t  Rochnyack. #2357\n\t* Intel PMU plugin: This new plugin collects CPU performance metrics\n\t  using Intel's Performance Monitoring Unit (PMU). Scaling information\n\t  added to metadata. Thanks to Serhiy Pshyk and Roman Korynkevych.\n\t  #2276, #2398, #2374\n\t* Intel RDT plugin: Support for collectd's logging infrastructure has\n\t  been added. PQoS monitoring groups are being reset on start-up to fix\n\t  potential previous unclean shutdowns. Thanks to Roman Korynkevych.\n\t  #2089.\n\t* IPMI plugin: Support for System Event Log (SEL) has been added. Thanks\n\t  to Roman Korynkevych. #2091\n\t* IPMI plugin: Support for remote IPMI controllers has been added.\n\t  Thanks to Pavel Rochnyack. #2024\n\t* LVM plugin: A check for the \"CAP_SYS_ADMIN\" capability has been added.\n\t  This will give users an informative warning when the process is not\n\t  running with the required privileges for this plugin. Thanks to\n\t  Florian Forster. #2426, #2499\n\t* mcelog plugin: This new plugin subscribes to Machine Check Exceptions\n\t  (MCE) and dispatches notifications. Metadata reset. Thanks to Maryam\n\t  Tahhan, Volodymyr Mytnyk, Taras Chornyi, Krzysztof Matczak and Roman\n\t  Korynkevych. #2003, #2246, #2380\n\t* MQTT plugin: Add support for TLS in \"Subscriber\" blocks. Thanks to\n\t  Florian Forster. #2434\n\t* memcached plugin: Persistent connections have been implemented. Fix\n\t  hit ratio reporting, add connections rate report. Thanks to Pavel\n\t  Rochnyack. #2388, #2385\n\t* memcached plugin: The type of the \"listen_disabled\" metric has been\n\t  changed to \"total_events\". Thanks to Florian Forster. #2386, #2468\n\t* Netlink plugin: The dropped packets metric has been added. Thanks to\n\t  Denys Fedoryshchenko. #2053\n\t* NFS plugin: Support for NFS 4.2 metrics has been added. Thanks to\n\t  Marek Becka. #2369\n\t* NFS plugin: Config options to ignore specified NFS versions have been\n\t  added. Thanks to Christian Bartolomäus. #2430\n\t* NUT plugin: The \"ConnectTimeout\", \"ForceSSL\", \"VerifyPeer\" and\n\t  \"CAPath\" options have been added. Thanks to Pavel Rochnyack and Steven\n\t  Bell. #2145, #2354\n\t* OpenLDAP plugin: A segfault after a connection failure has been fixed.\n\t  Thanks to Pavel Rochnyack. #2377\n\t* Openvpn plugin: Added support for status files from latest OpenVPN-2.4\n\t  and possible from future versions. Thanks to Pavel Rochnyack. #2352\n\t* OVS Events plugin: This new plugin reports link state changes from\n\t  Open vSwitch (OVS). Thanks to Volodymyr Mytnyk. #1971\n\t* OVS Stats plugin: This new plugin reports bridge / interface\n\t  statistics from Open vSwitch (OVS). Thanks to Volodymyr Mytnyk and\n\t  Taras Chornyi. #2137\n\t* Perl plugin: Bugfix, added check of proper interpreter initialization.\n\t  Thanks to Pavel Rochnyack. #2391\n\t* PostgreSQL plugin: The plugin now sets the \"application_name\"\n\t  parameter when connecting to the database. Thanks to daniacs. #2497\n\t* Processes plugin: The I/O operations reported for selected processes\n\t  has been fixed. The metric \"ps_disk_octets\" has been renamed to\n\t  \"io_octets\" because it actually contains the number of I/O operation\n\t  by the process, not just disk related I/O. Same for \"io_ops\"\n\t  (previously \"ps_disk_ops\"). The new metric \"disk_octets\" has been\n\t  added and is reporting disk I/O only. Add option to collect the count\n\t  of active memory maps for Linux processes. The \"CollectFileDescriptor\"\n\t  and \"CollectContextSwitch\" options have been added. Thanks to Pavel\n\t  Rochnyack and to Wilfried Goesgens. #2232, #2454, #1989\n\t* Processes and TCPConns plugins: The OpenBSD implementation has been\n\t  changed to use \"kvm_openfiles\" with \"KVM_NO_FILES\". Thanks to Jeremie\n\t  Courreges-Anglas. #2061\n\t* Python plugin: Extend Notification class to include metadata. Thanks\n\t  to Volodymyr Mytnyk. #2135\n\t* Python plugin: The \"CollectdException\" class has been added. This\n\t  allows to throw an exception without a stack trace being logged.\n\t  Thanks to Sven Trenkel. #2330, #2346\n\t* Sensors plugin: Support for (electrical) current has been added.\n\t  Thanks to Clemens Gruber. #2255\n\t* SNMP plugin: Error handling has been improved: a potential double-free\n\t  is now avoided (potentially leaking memory) and handling of\n\t  non-failing subtrees has been fixed. Thanks to Pavel Rochnyack. #2449\n\t* SNMP plugin: The \"Timeout\" and \"Retries\" config options have been\n\t  added. Thanks to Carlos Vicente. #1472, #2488\n\t* SNMP Agent plugin: This new plugin implements an SNMP AgentX subagent\n\t  that receives and handles queries from SNMP master agent and returns\n\t  configured metrics. Thanks to Roman Korynkevych, Serhiy Pshyk and\n\t  Pavel Rochnyack. #2105, #2362\n\t* Synproxy plugin: This new plugin provides statistics for Linux\n\t  SYNPROXY. Thanks to Marek Bečka. #2381\n\t* Tail plugin: Allow the calculation of several distributions in one\n\t  \"tail\" instance through a \"bucket\" type. Thanks to Pavel Rochnyack.\n\t  #2442\n\t* Turbostat plugin: Import \"msr-index.h\" header from Linux and better\n\t  support for mutliple packages. Thanks to Vincent Brillault. #2445,\n\t  #2446\n\t* Uptime plugin: Changed implementation to read from \"/proc/uptime\"\n\t  instead of \"/proc/stat\". Update for Linux and AIX, uptime is read\n\t  directly using a system call. Update for BSD and Solaris, uptime is\n\t  calculated by subtracting boot time from current time. Thanks to Ivan\n\t  Kurnosov and Marcin Jurkowski. #2431, #2034\n\t* UUID plugin: Support for libhal has been removed. Thanks to Ruben\n\t  Kerkhof. #2080\n\t* Varnish plugin: Extended the varnish plugin with varnish-plus\n\t  counters. Fixed invalid data source type. Thanks to Denes Matetelki.\n\t  #2453, #2463\n\t* virt plugin: The plugin has been updated to use\n\t  \"virConnectListAllDomains()\". Thanks to Denis Silakov. #2051\n\t* virt plugin: Support for domain tags has been added. Thanks to\n\t  Francesco Romani. #2048\n\t* virt plugin: Connection handling has been improved. Thanks to\n\t  Francesco Romani. #2100, #2101\n\t* virt plugin: Many metrics have been added, including disk, hypervisor\n\t  CPU usage, performance monitoring events, domain state, CPU pinning\n\t  (affinity), file system, and job statistics. Thanks to Francesco\n\t  Romani and Przemyslaw Szczerbik. #2103, #2175, #2168\n\t* Write Graphite plugin: Additional tests have been added. Thanks to\n\t  Florian Forster.\n\t* Write HTTP plugin: The \"Attribute\" and \"TTL\" options for the KairosDB\n\t  format have been added. Implementation of \"Prefix\" option. Thanks to\n\t  jaroug, Denis Pompilio and Pavel Rochnyack. #2199, #2252, #2482\n\t* Write MongoDB plugin: Memory leaks have been fixed. Thanks to\n\t  Saikrishna Arcot. #2307\n\t* Write Prometheus plugin: Label values are now properly escaped. Thanks\n\t  to Florian Forster. #2035\n\t* Write Redis plugin: Add \"max_set_duration\" to set duration for value.\n\t  Thanks to Tomofumi Hayashi. #2440\n\t* Write Riemann plugin: Export times with microsecond resolution. Thanks\n\t  to mcorbin. #2315\n\t* Write TSDB plugin: The options \"ResolveInterval\" and \"ResolveJitter\"\n\t  have been added to control DNS lookup behavior. This prevents DNS\n\t  flooding in case TSDB is not available. Thanks to Yves Mettier and\n\t  Florian Forster. #2059\n\t* ZFS ARC plugin: Header lines are now ignored in the Linux\n\t  implementation. Thanks to YmrDtnJu. #2097\n\n2017-06-06, Version 5.7.2\n\t* Build system: The Notify Email plugin is no longer linked with\n\t  indirect dependencies. Thanks to Marc Fournier.\n\t* collectd: A race condition when calculating a metric's rate has been\n\t  fixed. Thanks to Florian Forster. #1193\n\t* AMQP, Exec, UnixSock, Write Kafka plugins: Parsing of the PUTVAL\n\t  command with multiple values has been fixed. Thanks to Florian\n\t  Forster. #2274\n\t* AMQP plugin: The \"ExchangeType\" option is now also valid for\n\t  publishers. Thanks to Florian Forster. #2286\n\t* BIND plugin: Fix parsing of the sample time provided by BIND.\n\t  Previously, the time was assumed to be in the local timezone when in\n\t  fact it was in UTC. Thanks to Ed Ravin. #1268\n\t* BIND plugin: Memory leaks have been fixed. Thanks to Ruben Kerkhof.\n\t  #2303\n\t* cURL-JSON plugin: Handling of arrays has been fixed. Thanks to Florian\n\t  Forster. #2266\n\t* DPDKStat plugin: Error handling during initialization has been\n\t  improved. Thanks to Ruben Kerkhof.\n\t* DPDKStat plugin: Handling of a number of metrics has been improved,\n\t  for example \"rx_q0bytes\". Thanks to Przemyslaw Szczerbik. #2167\n\t* Intel RDT plugin: Configuration handling has been changed to be more\n\t  graceful. Thanks to Maryam Tahhan. #2165\n\t* Log Logstash plugin: If writing the log entry fails, print it to\n\t  \"STDERR\" instead. Thanks to Marc Fournier.\n\t* LogFile plugin: If writing to the file fails, print log messages on\n\t  \"STDERR\" instead. Thanks to Marc Fournier.\n\t* memcachec, Tail plugins: A resource leak in the matching\n\t  infrastructure has been fixed. Thanks to Krzysztof Matczak. #2192\n\t* MQTT plugin: Invalid symbols in topic names are now replaced and a\n\t  resource leak has been fixed. Thanks to Denys Fedoryshchenko. #2123\n\t* Network plugin: A potential endless-loop has been fixed. This can be\n\t  triggered remotely by sending a signed network packet to a server\n\t  which is not set up to check signatures. Thanks to Marcin Kozlowski\n\t  and Pavel Rochnyack. #2174, #2233, CVE-2017-7401\n\t* Perl plugin: A potential double-free has been fixed. Thanks to Florian\n\t  Forster. #2278\n\t* Processes plugin: A compilation error on AIX has been fixed. Thanks to\n\t  Pavel Rochnyack. #2210\n\t* SMART plugin: A check for the \"CAP_SYS_RAWIO\" capability has been\n\t  added. Thanks to Marc Fournier.\n\t* Write Graphite plugin: Error handling in the case that calculating a\n\t  metric's rate fails has been improved. Previously, the raw counter\n\t  values were sent to Graphite. Thanks to Iain Buclaw. #2209\n\t* Write Prometheus plugin: An incorrect use of \"realloc(3)\" has been\n\t  fixed. Thanks to Florian Forster. #2275\n\n2017-01-23, Version 5.7.1\n\t* collectd: Handling of boolean configuration options has been unified.\n\t  Thanks to Sebastian Harl. #2083, #2098\n\t* collectd: Reporting of internal statistics has been fixed. Thanks to\n\t  Florian Forster. #2108\n\t* collectd, various plugins: Bugs and issues reported by scan-build and\n\t  coverity-scan have been fixed. Thanks to Ruben Kerkhof and Florian\n\t  Forster.\n\t* Build system: Parallel build have been fixed. Thanks to Ruben Kerkhof.\n\t  #2110\n\t* DPDKStat plugin: Portability issues and a double-close bug have been\n\t  fixed. Thanks to Ruben Kerkhof and Marc Fournier.\n\t* Intel RDT plugin: A check for the libpqos library version has been\n\t  added. Thanks to Serhiy Pshyk.\n\t* NetApp plugin: Compilation problems have been corrected. Thanks to\n\t  Florian Forster. #2120\n\t* Write Prometheus plugin: A memory leak has been fixed. Thanks to Ruben\n\t  Kerkhof.\n\n2016-12-12, Version 5.7.0\n\t* Documentation: The Turbostat plugin section has been improved. Thanks\n\t  to Florian Forster\n\t* Documentation: The semantics of the \"TypesDB\" option have been\n\t  improved. Thanks to Florian Forster.\n\t* collectd: A generic interface for parsing the text protocol has been\n\t  added. Thanks to Sebastian Harl. #1749\n\t* collectd: Threads now get named, making them easier to track using\n\t  tools such as top, ps, etc. Thanks to Manuel Luis Sanmartín Rozada\n\t  and Marc Fournier. #547\n\t* AMQP plugin, Write Graphite plugin, Write Kafka plugin: The new\n\t  \"[Graphite]PreserveSeparator\" option allows retaining the default dot\n\t  separator rather than escaping it. Thanks to Florian Forster. #419\n\t* Battery plugin: A StateFS backend for gathering statistics has been\n\t  added. Thanks to Rinigus. #1795\n\t* CPU plugin: CPU aggregation on AIX was fixed. Thanks to Chao Yang.\n\t  #1957\n\t* Collectd::Unixsock: Fractional seconds support has been made more\n\t  robust. Thanks to Matthias Bethke. #2052\n\t* DPDKStat plugin: This new plugin collects DPDK interface statistics.\n\t  Thanks to Maryam Tahhan, Harry van Haaren, Taras Chornyi and Kim\n\t  Jones. #1649\n\t* gRPC plugin: The \"DispatchValues\" option has been renamed to\n\t  \"PutValues\". Thanks to Florian Forster.\n\t* HDDTemp plugin: The 32 devices limit has been removed. Thanks to\n\t  Benjamin Gilbert. #631\n\t* Hugepages plugin: This new plugin reports the number of used and free\n\t  hugepages on Linux. Thanks to Jaroslav Safka, Maryam Tahhan, Kim Jones\n\t  and Florian Forster. #1799\n\t* Intel RDT plugin: This new plugin collects statistics exposed by\n\t  Intel's Resource Director Technology . Thanks to SerhiyX. #1970\n\t* memcached plugin: The new \"Address\" option allows connecting to a\n\t  different server than specified by the \"Host\" option. Thanks to Pavel\n\t  Rochnyack. #1975\n\t* nginx plugin: Support for reporting failed connections has been added.\n\t  Thanks to Pavel Rochnyack. #1609\n\t* Perl plugin: Significant internal reworking has been made. The new\n\t  \"RegisterLegacyFlush\" option has been added. Thanks to Pavel\n\t  Rochnyack. #1731\n\t* PostgreSQL plugin: Timestamps are now RFC 3339-formatted local time.\n\t  Thanks to Igor Peshansky and Dave Cunningham. #1918\n\t* Processes plugin: Internal performance improvements have been made.\n\t  Thanks to Pavel Rochnyack. #1980, #1981\n\t* RRDCacheD plugin: The plugin now tries to reconnect upon failed\n\t  operations. Thanks to Sebastian Harl. #1959\n\t* SpamAssassin: The plugin can now run in Perl's \"tainted mode\" (\"-T\").\n\t  Thanks to Akos Vandra. #1962\n\t* Tail plugin: Support for calculating latency distribution of matching\n\t  values has been added. Thanks to Pavel Rochnyack and Florian Forster.\n\t  #1700\n\t* Tail plugin: The new \"GaugePersist\" option has been added. Thanks to\n\t  Florian Forster. #2015\n\t* Target:Set, Target:Replace, Match:RegEx: MetaData support has been\n\t  added . Thanks to Igor Peshansky. #1922, #1923, #1930\n\t* turbostat plugin: The new \"LogicalCoreNames\" option allows switching\n\t  to per-core naming rather than per-CPU. Thanks to Brock Johnson. #2056\n\t* virt plugin: The new \"BlockDeviceFormat\" and\n\t  \"BlockDeviceFormatBasename\" options help controlling the names\n\t  reported for block-device metrics. Thanks to Deyan Chepishev. #2004\n\t* Write Graphite plugin: A new \"DropDuplicateFields\" option has been\n\t  added. Thanks to Michael Leinartas. #1915\n\t* Write Kafka plugin: The \"Key Random\" setting has been reintroduced.\n\t  Thanks to Florian Forster. #1977\n\t* Write Log plugin: Support for formatting output in JSON has been\n\t  added, using the new \"Format\" configuration option. Thanks to Igor\n\t  Peshansky. #1924\n\t* Write Prometheus plugin: This new plugin publishes values using an\n\t  embedded HTTP server, in a format compatible with Prometheus'\n\t  collectd_exporter. Thanks to Florian Forster. #1967\n\n2017-10-06, Version 5.6.3\n\t* collectd: support for boolean string config values has been\n\t  reintroduced. Thanks to Sebastian Harl. #2083, #2098\n\t* collectd: The capability checking has been changed to use\n\t  \"cap_get_proc()\". Thanks to Marc Fournier. #2151\n\t* Documentation: A section documenting ignore lists has been added to\n\t  collectd.conf(5). Thanks to Florian Forster.\n\t* AMQP plugin: The \"ExchangeType\" option is now also valid for\n\t  publishers. Thanks to Florian Forster. #2286\n\t* Apache, Ascent, BIND, cURL, cURL-JSON, cURL-XML, nginx, Write HTTP\n\t  plugins: Handling of URLs that redirect elsewhere has been fixed.\n\t  Thanks to Pavel Rochnyack. #2328\n\t* BIND plugin: Fix parsing of the sample time provided by BIND.\n\t  Previously, the time was assumed to be in the local time zone when in\n\t  fact it was in UTC. Thanks to Ed Ravin. #1268\n\t* BIND plugin: Memory leaks have been fixed. Thanks to Ruben Kerkhof.\n\t  #2303\n\t* Chrony plugin: Build flags have been fixed. Thanks to Thomas Jost and\n\t  Marc Fournier. #2133\n\t* cURL-JSON plugin: The timeout value has been changed to default to the\n\t  collection interval. This fixes a regression. Thanks to Marc Fournier.\n\t* cURL-JSON plugin: Handling of arrays has been fixed. Thanks to Florian\n\t  Forster. #2266\n\t* DBI plugin: Memory leaks at shutdown have been fixes. Thanks to Pavel\n\t  Rochnyack and Florian Forster.\n\t* E-Mail, Exec, UnixSock plugins: Group ID lookup on systems with many\n\t  groups has been fixed. Thanks to Ruben Kerkhof and Florian Forster.\n\t  #2208\n\t* IPC plugin: A compilation error on AIX has been fixed. Thanks to Pavel\n\t  Rochnyack. #2305\n\t* LogFile plugin: If writing to the file fails, print log messages on\n\t  \"STDERR\" instead. Thanks to Marc Fournier.\n\t* Log Logstash plugin: If writing the log entry fails, print it to\n\t  \"STDERR\" instead. Thanks to Marc Fournier.\n\t* memcachec, Tail plugins: A resource leak in the matching\n\t  infrastructure has been fixed. Thanks to Krzysztof Matczak. #2192\n\t* MQTT plugin: Invalid symbols in topic names are now replaced and a\n\t  resource leak has been fixed. Thanks to Denys Fedoryshchenko. #2123\n\t* Network plugin: A potential endless-loop has been fixed. This can be\n\t  triggered remotely by sending a signed network packet to a server\n\t  which is not set up to check signatures. Thanks to Marcin Kozlowski\n\t  and Pavel Rochnyack. #2174, #2233, CVE-2017-7401\n\t* Network plugin: A use-after-free has been fixed. Thanks to Pavel\n\t  Rochnyack. #2375\n\t* Notify Email plugin: The plugin is no longer explicitly linked against\n\t  libssl and libcrypto, relies on libesmtp being linked correctly.\n\t  Thanks to Marc Fournier. Debian#852924\n\t* NTPd plugin: Calculation of loop offset and error has been fixed.\n\t  Thanks to Neil Wilson. #2188\n\t* OpenLDAP plugin: An incorrect use of the ldap library, leading to a\n\t  crash, has been fixed. Thanks to Marc Fournier. #2331\n\t* Perl plugin: A potential double-free has been fixed. Thanks to Florian\n\t  Forster. #2278\n\t* Perl plugin: Print an error when an incorrect configuration is\n\t  encountered. Thanks to Pavel Rochnyack. #927\n\t* RRDtool plugin: Incorrect handling of the flushes timeout option has\n\t  been fixed. Handling of the \"RandomTimeout\" has been fixed. Thanks to\n\t  Pavel Rochnyack. #2363\n\t* SMART plugin: Some warning messages have been removed and the code has\n\t  been cleaned up. Thanks to Florian Forster. #2062\n\t* SMART plugin: A check for the \"CAP_SYS_RAWIO\" capability has been\n\t  added. Thanks to Marc Fournier.\n\t* SNMP plugin: A double free has been fixed. Thanks to Pavel Rochnyack.\n\t  #2291\n\t* Write Graphite plugin: Error handling in the case that calculating a\n\t  metric's rate fails has been improved. Previously, the raw counter\n\t  values were sent to Graphite. Thanks to Iain Buclaw. #2209\n\t* Write Kafka plugin: A 32 bit random number is now used when formatting\n\t  a random key. Thanks to Florian Forster. #2074\n\n\n2016-11-30, Version 5.6.2\n\t* collectd: A compile error on AIX has been fixed: \"MSG_DONTWAIT\" is not\n\t  available on AIX. Thanks to Chao Yang.\n\t* collectd: The capability checking has been rewritten to be more\n\t  portable. Thanks to Florian Forster. #2009\n\t* collectd.conf(5): Various typos have been fixed. Thanks to Marc\n\t  Fournier.\n\t* collectd-tg: Incorrect usage of \"nanosleep()\" has been fixed which\n\t  caused the tool to sleep (almost) indefinitely. Thanks to Florian\n\t  Forster.\n\t* Build system: Detection of the Java environment has been made\n\t  deterministic to allow for reproducible builds. Thanks to Marc\n\t  Fournier. #1523\n\t* Build system: Detection of the Lua headers has been improved. Thanks\n\t  to Ruben Kerkhof.\n\t* APC UPS plugin: Unavailable metrics are now skipped instead of\n\t  reported as 0 (zero). Thanks to Florian Forster. #2025\n\t* Modbus plugin: Build issues on FreeBSD have been fixed. Thanks to\n\t  Florian Forster.\n\t* OpenVPN plugin: Gracefully handle empty configurations. Thanks to\n\t  Pavel Rochnyack. #1932\n\t* PowerDNS plugin: The \"recursor command\" has been fixed so PowerDNS can\n\t  correctly parse all requested fields. Thanks to Ruben Kerkhof.\n\t* Write Graphite and AMQP plugins: A bug that could lead to a missing\n\t  null-termination has been fixed. Thanks to Markus Linnala.\n\t* Write HTTP plugin: A logic error when checking the correctness of the\n\t  data set has been fixed. Thanks to Pavel Rochnyack. #1996\n\t* Write Kafka plugin: The \"Key Random\" config option has been fixed.\n\t  Thanks to Florian Forster. #1977\n\t* Write Kafka plugin: Support for librdkafka 0.9.0 has been added.\n\t  Thanks to Florian Forster.\n\t* Write Riemann plugin: Build issues on Solaris have been fixed. Thanks\n\t  to Florian Forster.\n\t* ZFS ARC plugin: A duplicate metric has been removed. Thanks to Ruben\n\t  Kerkhof. #1963\n\n2016-10-07, Version 5.6.1\n\t* Build system: Unnecessary linking of the Write Graphite plugin with\n\t  libyajl has been removed. Thanks to Marc Fournier.\n\t  Debian#839771, #1976\n\t* collectd: A bug in the \"FlushInterval\" option that caused a\n\t  segmentation fault in the Write HTTP plugin has been fixed. Thanks to\n\t  Florian Forster. #1954\n\t* Apache plugin: A syntax error has been fixed. Thanks to Florian\n\t  Forster.\n\t* cURL-JSON plugin: A segmentation fault that occurred when handling\n\t  JSON with unexpected structure has been fixed. Thanks to Florian\n\t  Forster. #1896\n\t* PostgreSQL plugin: Handling of \"NULL\" values in the \"query_plans\" and\n\t  \"query_plans_by_table\" queries has been fixed. Thanks to Bernd\n\t  Zeimetz. #1905\n\t* RRDCacheD plugin: Reconnection behavior has been added. Thanks to\n\t  Sebastian Harl. Debian#657877\n\t* VServer plugin: Use of a deprecated API (\"readdir_r()\") has been\n\t  fixed. Thanks to Sebastian Harl.\n\t* Write Graphite plugin: Make default values configurable at compile\n\t  time again. Thanks to Florian Forster. #1953\n\t* Write HTTP plugin: A bug has been fixed that lead to flush callbacks\n\t  being registered twice. Thanks to Florian Forster. #1955\n\n2016-09-11, Version 5.6.0\n\t* Build system: An option to to avoid building the DF plugin against XFS\n\t  has been added. Thanks to Ruben Kerkhof. #1878\n\t* Build system: Autoconf ≥ 2.60, a C99-capable compiler and pkg-config\n\t  are now required. Thanks to Ruben Kerkhof.\n\t* Build system: Building with \"-Werror\" is now optional. Thanks to Ruben\n\t  Kerkhof. #1222\n\t* Build system: Many compilation issues on non-Linux platforms have been\n\t  fixed, leading to wider plugin support. Thanks to Ruben Kerkhof,\n\t  Dagobert Michelsen, Havard Eidnes and Robert Viduya.\n\t* Build system: The configuration summary now also ends up in\n\t  config.log. Thanks to Sebastian Harl.\n\t* collectd: All command-line options now override global options from\n\t  the config file. Thanks to Sebastian Harl. #366\n\t* collectd: A number of unit tests for commonly used functions have been\n\t  added. Thanks to Florian Forster.\n\t* collectd: Plugins start up and read timeouts are now logged. Thanks to\n\t  Marc Fournier. #1293, #1254\n\t* collectd: Support for a timeout has been added to \"FLUSH\" callbacks.\n\t  Thanks to Manuel Luis Sanmartín Rozada.\n\t* collectd: The \"-T\" command line switch now reports more errors. Thanks\n\t  to Corey Kosak. #1642\n\t* collectd: The max size of value list elements (\"DATA_MAX_NAME_LEN\")\n\t  has been doubled and is now configurable at build time. Thanks to Amy\n\t  Lin, Florian Forster and Radu Brumariu. #1120\n\t* Set target: The \"MetaData\" option has been added. Thanks to Yves\n\t  Mettier and Kevin Bowling. #1106, #1656, #1913\n\t* AMQP, Write_HTTP, Write_Kafka plugins: Support for libyajl < 2 has\n\t  been added. Thanks to Florian Forster.\n\t* APC UPS plugin: Parsing of end markers has been fixed. Thanks to\n\t  Florian Forster #617\n\t* APC UPS plugin: The \"PersistentConnection\" option has been added.\n\t  Thanks to Florian Forster #617\n\t* ceph, DNS, Exec, IPTables, Ping, turbostat plugins: When running\n\t  unprivileged, these plugins will now warn about insuffiscient\n\t  permissions or capabilities(7). Thanks to Marc Fournier. #1530\n\t* Chrony plugin: This new plugin collects NTP data from the chrony NTP\n\t  server. Thanks to Claudius Zingerli. #1548\n\t* cpusleep plugin: This new plugin measures time spent by CPU in deep\n\t  sleep mode. Thanks to Rinigus. #1826\n\t* CPU plugin: The \"ReportNumCpu\" option has been added. Thanks to Fabien\n\t  Wernli.\n\t* cURL, cURL-JSON, cURL-XML plugins: The new \"Statistics\" reports\n\t  various per-HTTP connection timers. Thanks to Sebastian Harl. #1004\n\t* DBI plugin: The \"Interval\" option has been added to \"Database\" blocks.\n\t  Thanks to Michal Bebjak.\n\t* Disk plugin: Support for FreeBSD has been added. Thanks to Xin Li,\n\t  Brad Davis, Ruben Kerfhof and Kevin Bowling.\n\t* Empty Counter match: Support for derives has been implemented. Thanks\n\t  to Florian Forster. #1813\n\t* GenericJMX plugin: Support for TabularData and the \"PluginName\" option\n\t  have been added. Thanks to David Crane. #1290, #1291\n\t* GPS plugin: This new plugin reports the number of sattelites seen by\n\t  and precision of a GPS receiver. Thanks to Nicolas Jourden. #1346\n\t* gRPC plugin: This new client and server plugin allows sending and\n\t  receiving metrics using the gRPC protocol. Comparable to the UnixSock\n\t  plugin, but using TCP and TLS. Thanks to Sebastian Harl and Florian\n\t  Forster.\n\t* Interface plugin: Reporting dropped packets has been added. Thanks to\n\t  Marc Falzon. #1555\n\t* Interface plugin: The \"ReportInactive\" has been added, letting users\n\t  skip inactive network interfaces. Thanks to Rinigus. #1791\n\t* Interface plugin: The new, Solaris-only \"UniqueName\" option has been\n\t  added. Thanks to Yoga Ramalingam. #1416\n\t* Lua plugin: This new language binding allows writing plugins using the\n\t  Lua programming language. Thanks to Julien Ammous, Florian Forster and\n\t  Ruben Kerkhof.\n\t* Memory plugin: Reporting of ARC memory on Solaris has been added.\n\t  Thanks to Brian ONeill.\n\t* MQTT plugin: This new plugin sends metrics to and/or receives metrics\n\t  from an MQTT broker. Thanks to Marc Falzon, Jan-Piet Mens, Nicholas\n\t  Humfrey and Florian Forster. #805, #1124\n\t* MySQL plugin: Connection to the database server can now be done over\n\t  SSL. Thanks to Brian Lalor. #1256\n\t* MySQL plugin: Monitoring slow queries has been added. Thanks to skob.\n\t  #1773\n\t* MySQL plugin: mysql_bpool_pages-flushed has been renamed to\n\t  mysql_bpool_counters-pages_flushed because the value is cumulative.\n\t  Thanks to Marek Becka.\n\t* MySQL plugin: Support for Galera statistics has been added. Thanks to\n\t  Rachid Zarouali. #1849\n\t* MySQL plugin: Support for InnoDB metrics was improved. Thanks to Aman\n\t  Gupta. #1111\n\t* MySQL plugin: The \"mysql_sort\" type has been split into 3 different\n\t  types. Thanks to Pavel Rochnyack. #1592\n\t* Network plugin: Decryption error logging has been improved. Thanks to\n\t  Pavel Rochnyack. #1735\n\t* Notify Nagios plugin: This new plugin sends notifications to Nagios as\n\t  a passive check result. Thanks to Florian Forster.\n\t* NTPd plugin: The plugin now detects if the ntp daemon reports\n\t  nanoseconds instead of microseconds. Thanks to Matwey V. Kornilov.\n\t  #1783\n\t* OpenLDAP plugin: Several connection-related improvements have been\n\t  made. Thanks to Marc Fournier. #1308\n\t* OpenLDAP plugin: Support for \"simple authentication\" has been added.\n\t  Thanks to Marek Becka. #1087\n\t* Ping plugin: The \"Size\" option has been added, allowing the ICMP data\n\t  payload size to be configured. Thanks to Witold Baryluk. #1395\n\t* PostgreSQL, DBI, Oracle plugins: The new \"PluginInstanceFrom\" option\n\t  has been added. Thanks to Pavel Rochnyack. #1707\n\t* PowerDNS plugin: The recursor metrics have been updated to 3.7.3 and\n\t  missing rr types have been added. Thanks to Ruben Kerkhof.\n\t* Processes plugin: Counting of context switches was added for Linux.\n\t  Thanks to Manuel Luis Sanmartín Rozada. #1036\n\t* Processes plugin: Improve reliability of thread counts on Linux.\n\t  Thanks to Manuel Luis Sanmartín Rozada.\n\t* Python plugin: Minimal Python version requirement has been bumped to\n\t  2.6. Thanks to Ruben Kerkhof. #1864\n\t* Redis plugin: Several additional metrics are now collected. Thanks to\n\t  Marc Falzon and Matteo Contrini. #1807, #1483\n\t* Sensors plugin: The \"UseLabels\" option has been added. Thanks to\n\t  Christian Fetzer.\n\t* SMART plugin: The new \"IgnoreSleepMode\" option has been added. Thanks\n\t  to Scott Talbert. #1770\n\t* SMART plugin: The new \"UseSerial\" option allows identifying devices in\n\t  a stable way. Thanks to Scott Talbert. #1794\n\t* SNMP plugin: The \"IpAddress\" can now be used for instances. Thanks to\n\t  Vincent Bernat. #1397\n\t* StatsD plugin: Latency calculation histogram is now able to shrink\n\t  automatically to optimal size. Thanks to Pavel Rochnyack. #1622\n\t* StatsD plugin: The \"CounterSum\" option has been added. Thanks to\n\t  Florian Forster. #929, #1282, #1311\n\t* UUID plugin: The plugin now also looks in in smbios system table and\n\t  \"/sys/class/dmi\". Thanks to Ruben Kerkhof. #1490\n\t* virt plugin: The \"PluginInstanceFormat\" option has been added. Thanks\n\t  to Ruben Kerkhof. #1100\n\t* Write Graphite plugin: The \"ReconnectInterval\" option has been added.\n\t  Thanks to Toni Moreno and Florian Forster.\n\t* Write HTTP plugin: A KairosDB formatter has been added. Thanks to\n\t  Aurélien Rougemont. #1809\n\t* Write HTTP plugin: Notifications are now handled by this plugin.\n\t  Thanks to Florian Forster.\n\t* Write HTTP plugin: The \"LogHttpError\" option has been added. Thanks to\n\t  vzubko.\n\t* Write HTTP plugin: The new \"Headers\" option allows setting custom HTTP\n\t  headers in outgoing requests. Thanks to Brandon Arp. #1634\n\t* Write Kafka plugin: Key handling has been made more comprehensive and\n\t  reliable. Thanks to Florian Forster, Pierre-Yves Ritschard and Vincent\n\t  Bernat. #1765, #1695, #1393\n\t* Write Redis plugin: The \"Database\", \"MaxSetSize\", \"Prefix\" and\n\t  \"StoreRates\" options have been added. Thanks to Brian Kelly and\n\t  Sebastian Pfahl.\n\t* Write Riemann plugin: The new \"BatchFlushTimeout\" and \"Timeout\" option\n\t  have been added. Thanks to Pierre-Yves Ritschard and Gergely Nagy.\n\t* Write Riemann plugin: This plugin now requires the riemann-c-client\n\t  library, version 1.6.0+. This adds support for submitting values to\n\t  Riemann over TLS. Thanks to Gergely Nagy. #986\n\t* Write TSDB, Write Sensu, Write Riemann, Write Graphite, Write TSDB\n\t  plugin: TCP keepalive is now enabled, helping graceful recovery from\n\t  unclean network disconnections. Thanks to Marc Fournier. #1549\n\t* XenCPU plugin: This new plugin collects XEN Hypervisor CPU stats.\n\t  Thanks to Pavel Rochnyack. #1608\n\t* ZFS ARC plugin: Several new statistics have been added and a couple of\n\t  obsolete ones removed. Thanks to Brad Davis, Brian ONeill and Ruben\n\t  Kerkhof.\n\t* Zone plugin: This new plugin reads per-zone CPU usage on Solaris.\n\t  Thanks to Mathijs Mohlmann and Dagobert Michelsen.\n\n2016-11-28, Version 5.5.3\n\t* collectd: Write threads are stopped before shutdown callbacks are\n\t  called. Thanks to Florian Forster. #1110\n\t* collectd: A compile error on AIX has been fixed: \"MSG_DONTWAIT\" is not\n\t  available on AIX. Thanks to Chao Yang.\n\t* libcollectdclient: Lines printed to \"STDERR\" are now guarded by the\n\t  environment variable \"COLLECTD_TRACE\". Thanks to Florian Forster. #105\n\t* collectd.conf(5): Various typos have been fixed. Thanks to Marc\n\t  Fournier.\n\t* Build system: Detection of the Java environment has been made\n\t  deterministic to allow for reproducible builds. Thanks to Marc\n\t  Fournier. #1523\n\t* APC UPS plugin: Unavailable metrics are now skipped instead of\n\t  reported as 0 (zero). Thanks to Florian Forster. #2025\n\t* Battery plugin: The minimum value has been removed from the power type\n\t  to allow the plugin to report discharging batteries as negative power.\n\t  Thanks to Florian Forster.\n\t* DBI, Oracle and PostgreSQL plugins: An error message when the type\n\t  instance is truncated has been added. Thanks to Florian Forster. #4\n\t* cURL-JSON plugin: A possible segmentation fault when parsing\n\t  unexpected JSON has been fixed. Thanks to Florian Forster. #1896\n\t* DF plugin: Compilation with xfsprogs ≥ 4.7.0 has been fixed. Thanks\n\t  to Thomas Deutschmann. #1877\n\t* Modbus plugin: Build issues on FreeBSD have been fixed. Thanks to\n\t  Florian Forster.\n\t* Network plugin: An error message has been corrected. Thanks to Florian\n\t  Forster.\n\t* Network plugin: Handling of errors form secure memory initialization\n\t  has been improved: the plugin fails gracefully now instead of calling\n\t  \"abort()\". Thanks to Sebastian Harl.\n\t* Network plugin: The gcrypt library is only initialized when it is\n\t  actually required due to the network plugin's configuration. Thanks to\n\t  Florian Forster. #1902\n\t* Ping plugin: The init callback has been changed to be idempotent,\n\t  fixing errors being reported on Solaris. Thanks to Florian Forster.\n\t  #869\n\t* PostgreSQL plugin: The query_plans and query_plans_by_table queries\n\t  have been improved to return 0 (zero) instead of \"NULL\" when not\n\t  available. Thanks to Bernd Zeimetz. #1905\n\t* PowerDNS plugin: The \"recursor command\" has been fixed so PowerDNS can\n\t  correctly parse all requested fields. Thanks to Ruben Kerkhof.\n\t* Python plugin: Handling of data sets with multiple data sources of\n\t  different type has been fixed. Thanks to Sebastian Harl.\n\t* RRDCacheD plugin: Reconnection behavior after failed operations has\n\t  been added. Thanks to Sebastian Harl. Debian#657877\n\t* Write Graphite and AMQP plugins: A bug that could lead to a missing\n\t  null-termination has been fixed. Thanks to Markus Linnala.\n\t* Write Kafka plugin: Support for librdkafka 0.9.0 has been added.\n\t  Thanks to Florian Forster.\n\t* Write Riemann plugin: Build issues on Solaris have been fixed. Thanks\n\t  to Florian Forster.\n\n2016-07-25, Version 5.5.2\n\t* collectd: A division by zero has been fixed in the\n\t  \"plugin_dispatch_multivalue()\" function. Thanks to Corey Kosak.\n\t* collectd: The address of the Free Software Foundation has been fixed\n\t  in GPL license headers. Thanks to Ruben Kerkhof.\n\t* Build system: Detection and handling of librrd 1.6 and later has been\n\t  fixed. Thanks to Ruben Kerkof.\n\t* Apache plugin: A warning about a possible misconfiguration has been\n\t  added. Thanks to Marc Fournier.\n\t* cURL, cURL-JSON and cURL-XML plugins: A memory leak when allocating\n\t  more memory fails has been fixed. Thanks to Brandon Arp.\n\t* DF plugin: A build issue on DragonFlyBSD has been fixed. Thanks to\n\t  Ruben Kerkhof. #1575\n\t* Ethstat plugin: Code to strip leading whitespace from device names.\n\t  This works around an issue in the VMXNet3 driver. Thanks to Thomas\n\t  Guthmann. #1059\n\t* Exec plugin: A problem in the error handling of an fdopen() failure\n\t  has been fixed. Thanks to @ciomaire.\n\t* Modbus plugin: The debug output has been disabled by default. It is\n\t  now only enabled when building with \"--enable-debug\". Thanks to Eric\n\t  Sandeen and Marc Fournier.\n\t* Network plugin: A check for the initialization of secure memory has\n\t  been added. Previously, failure to initialize this memory was\n\t  ignored. Thanks to @yujokang. #1665\n\t* Network plugin: A heap overflow has been fixed in the server code.\n\t  This issue can be triggered remotely and is potentially exploitable.\n\t  Thanks to Emilien Gaspar. CVE-2016-6254\n\t* Perl plugin: Init callbacks have been changed to run essentially\n\t  single-threaded to avoid race conditions by init functions which\n\t  create additional threads. Thanks to Pavel Rochnyack. #1706\n\t* Processes plugin: A warning about too long process names has been\n\t  added. Thanks to Marc Fournier. #1284\n\t* Redis plugin: A memory leak in an error handling code path has been\n\t  fixed. Thanks to Andrés J. Díaz.\n\t* Redis plugin: The data source type of the expired_keys metric has been\n\t  corrected to \"DERIVE\". Thanks to Marc Falzon and Marc Fournier. #1483.\n\t* SMART plugin: A build dependency on libudev has been added. Thanks to\n\t  Pavel Rochnyack. #1724\n\t* StatsD plugin: A deadlock on plugin shutdown has been fixed. Thanks to\n\t  Pavel Rochnyack #1703\n\t* Write HTTP plugin: Freeing of memory holding HTTP headers during\n\t  shutdown has been fixed. Thanks to Tolga Ceylan.\n\t* Write Sensu plugin: A segfault when the Tag was unset has been fixed.\n\t  Thanks to Marc Fournier.\n\t* ZFS ARC plugin: The cache_operation-stolen metric has been removed for\n\t  FreeBSD 10.2 and later. Thanks to Ruben Kerkhof. #1580\n\n2016-01-22, Version 5.5.1\n\t* Build system: Compilation errors have been avoided by correctly\n\t  defining package name and version used by autoconf. Thanks to Nathan\n\t  Berkley. #1063\n\t* Build system: Dependency ordering was fixed to ensure parallel builds\n\t  work reliably. Thanks to Gustavo Zacarias. #1125\n\t* Build system: Error messages have been improved and building the unit\n\t  tests has been fixed on Solaris. Thanks to Florian Forster and\n\t  Dagobert Michelsen. #1077\n\t* Build system: The move of the \"utils_ignorelist\" functions has been\n\t  reverted. This fixes build issues of numerous plugins. Thanks to\n\t  Benjamin Drung;. #1323\n\t* Build system: The fhcount plugin has been restricted to Linux. Thanks\n\t  to Ruben Kerkhof. #1195\n\t* Build system: Detection of header files for the turbostat plugin has\n\t  been fixed. Thanks to Marc Fournier. #1075\n\t* collectd: The \"LC_NUMERIC\" locale is now forced, to prevent issues\n\t  with some plugins on environments using a comma as decimal separator.\n\t  Thanks to Florian Forster. #1237\n\t* Documentation: Some precisions related to the virt plugin have beed\n\t  added. Thanks to Wojtek Bocer and Ruben Kerkhof.\n\t* Documentation: The CollectdInternalStats documentation has been\n\t  improved. Thanks to Yves Mettier and Florian Forster.\n\t* Battery plugin: A missing Type has been added. Thanks to Marc\n\t  Fournier. #1338\n\t* Bind plugin: An off-by-one error has been fixed: an index was checked\n\t  against a wrong variable, which may lead to an out-of-bounds read.\n\t  Thanks to Michal Humpula. #1123\n\t* Ceph plugin: JSON parsing has been refactored to support ceph 10.0.0\n\t  and fixes several buffer overflows. Thanks to Florian Forster. #1350\n\t* CPU plugin: A Mac OS X specific bug has been fixed: the plugin\n\t  expected an incorrect number of CPU states, resulting in failing read\n\t  callbacks. This regression was introduced in 5.5.0. Thanks to Robert\n\t  Viduya.\n\t* Disk plugin: Support for Mac OS X 10.10 has been added. Thanks to\n\t  Robert Viduya. #1065\n\t* IPC plugin: Support for building with musl-libc has been added. Thanks\n\t  to Natanael Copa. #1147\n\t* Log Logstash plugin: A segfault when using libyajl, version 1 was\n\t  fixed. Thanks to Vincent Bernat. #1190\n\t* Log Logstash plugin: The timestamp is now ISO 8601 compliant. Thanks\n\t  to Marc Fournier. #1132\n\t* memcached plugin: The Type of the listen-disabled metric was fixed.\n\t  Thanks to Florian Forster. #1356\n\t* MySQL plugin: The Type used by Innodb_buffer_pool_pages_flushed was\n\t  fixed. Thanks to Marek Becka. #1085\n\t* OpenLDAP plugin: A crash when using LDAPI (LDAP-over-IPC) got fixed.\n\t  Thanks to Marek Becka. #1080\n\t* OpenLDAP plugin: Support for Mac OS X has been added. Thanks to Ruben\n\t  Kerkhof. #1489\n\t* SMART plugin: A memory leak has been fixed. Thanks to Florian\n\t  Schüller and Pierre-Yves Ritschard. #1076\n\t* Swap plugin: A regression that would lead to swap usage being reported\n\t  in kilobytes (instead of bytes) has been fixed. Thanks to Marek Becka.\n\t  #1071\n\t* Varnish plugin: Support for FreeBSD has been added. Thanks to Ruben\n\t  Kerkhof. #1182\n\t* Varnish plugin: Support for versions 3 and 4 has been made more\n\t  tolerant to minor changes in Varnish point releases. Thanks to Marc\n\t  Fournier. #1302\n\t* virt plugin: A copy-and-paste mistake in an error message has been\n\t  fixed. Thanks to Ruben Kerkhof. #1101\n\t* Write Kafka plugin: Support for Solaris has been added. Thanks to\n\t  Shahul Hameed. #1171\n\t* Write Redis plugin: Dead code has been removed. Thanks to Brian Kelly.\n\t  #1143\n\t* 27 patches have been applied to numerous plugins and core components,\n\t  fixing various programming errors which were reported by scan-build,\n\t  libasan, FBInfer, coverity-scan and clang: Thanks to Ruben Kerkhof,\n\t  Florian Forster and Marek Becka.\n\t* Collectd::Unixsock: A Perl error got corrected. Thanks to Ciaran Mac\n\t  An Iomaire. #1295\n\n2015-05-27, Version 5.5.0\n\t* Build system: Ability to make out-of-tree builds has been fixed.\n\t  Thanks to Vincent Bernat. #792\n\t* Build system, Disk and Users plugins: Detection and use of libstatgrab\n\t  ≧ 0.90 has been added. Thanks to Vincent Bernat. #445, #795, #806,\n\t  #807, #908\n\t* Build system, Memory, CPU, TCPConns and Processes plugins: Numerous\n\t  fixes related to OpenBSD support have been added. Thanks to Landry\n\t  Breuil. #777, #778, #779, #808\n\t* Build system: Plugins now only export \"module_register()\". Thanks to\n\t  Florian Forster.\n\t* Build system: Various cleanups and improvements have been done. Thanks\n\t  to Marc Fournier.\n\t* collectd: Numerous internal changes and improvements to the daemon and\n\t  the plugin API have been make. Thanks to Florian Forster, Pierre-Yves\n\t  Ritschard and Alex Petrov. #512, #727\n\t* collectd: Numerous spelling mistakes have been corrected in comments\n\t  and documentation and several error messages have been improved.\n\t  Thanks to Ruben Kerkhof, Abhinav Upadhyay, Olivier Bazoud, Pierre-Yves\n\t  Ritschard, Tim Smith, Moshe Zada, Katelyn Perry and Marc Fournier.\n\t* collectd: Rules/Targets can now be appended to existing Filter Chains.\n\t  Thanks to Marc Falzon. #444\n\t* collectd: Failing Filter Chains destinations will now log the list of\n\t  available write targets. Thanks to Wilfried Goesgens. #650, #1043\n\t* collectd: Support for process signaling and management by upstart and\n\t  systemd has been implemented for the Linux platform. Thanks to\n\t  Pierre-Yves Ritschard and Marc Fournier. #798, #811, #814\n\t* collectd: The \"CollectInternalStats\" option has been added. Thanks to\n\t  Yves Mettier. #691\n\t* collectd: The daemon source code and dependencies have moved to the\n\t  \"src/daemon/\" directory. Thanks to Florian Forster.\n\t* collectd: The new \"MaxReadInterval\" option allows to cap the\n\t  exponential retry interval of plugins read errors. Thanks to Alexey\n\t  Remizov and Florian Forster. #713\n\t* collectd: The \"-P\" command-line option now has precedence over the\n\t  \"PIDFile\" option. Thanks to Thomas D. #553\n\t* collection.cgi: Various data-source related adjustments have been\n\t  made. Thanks to Fabiano Pires and Sebastian Harl.\n\t* libcollectdclient: Now propagates errors when signing / encrypting\n\t  network packets. Thanks to Florian Forster.\n\t* Configuration: Support for unquoted IPv6 addresses has been added.\n\t  Thanks to Sebastian Harl. #489\n\t* Documentation: Various improvements have been done. Thanks to Florian\n\t  Forster and Marc Fournier.\n\t* Examples: the sample C plugin has been updated to the current plugin\n\t  API. Thanks to Sebastian Harl.\n\t* Licensing: The following components have been relicensed to the MIT\n\t  license: the Apple Sensors, Ascent, DBI, E-Mail, Entropy, GenericJMX,\n\t  gmond, LogFile, nginx, Notify Desktop, NTPd, NUT, olsrd, Perl, Ping,\n\t  PostgreSQL, Protocols, RouterOS, RRDCacheD, SNMP, StatsD, SysLog,\n\t  Table, Tail, UnixSock, vmem, VServer, Wireless, Write Riemann and XMMS\n\t  plugins, the core collectd daemon, the collectdmon, collectd-nagios\n\t  and collectd-tg utilities, all the Targets and Matches, liboconfig,\n\t  most of the \"utils_*\" files and the plugin API.\n\t* Tests: A test suite has been added. Thanks to Florian Forster.\n\t* Threshold: The hysteresis calculation has been made more reliable.\n\t  Thanks to Jan Kundrát. #581\n\t* Threshold: Various fixes and improvements have been made. Thanks to\n\t  Manuel Luis Sanmartín Rozada. #649, #644\n\t* AMQP plugin: The \"ConnectionRetryDelay\" option has been added,\n\t  allowing to delay reconnection. Thanks to Yoga Ramalingam and Marc\n\t  Fournier. #833\n\t* AMQP plugin: The \"QueueDurable\" and \"QueueAutoDelete\" options have\n\t  been added, giving control over queue creation and deletion. Thanks to\n\t  David Blundell and Marc Fournier. #623\n\t* Apache, Ascent, BIND, cURL, cURL-JSON, cURL-XML, nginx and Write HTTP\n\t  plugins: Customizing the \"User-Agent\" field is now possible at\n\t  compile-time. Thanks to Jeremy Katz. #440\n\t* Apache, Ascent, BIND, cURL, cURL-JSON, cURL-XML, nginx plugins: The\n\t  connection will be reset if it hasn't completed within the configured\n\t  \"Interval\". The new \"Timeout\" option gives control over this behavior.\n\t  Thanks to Jan Kundrát and Marc Fournier. #982, #983, #993\n\t* Apache, Ascent, cURL, cURL-JSON, cURL-XML, nginx, Write HTTP plugins:\n\t  Allow usernames and passwords to contain colons if built against\n\t  libcurl ≧ 7.19.1. Thanks to Marc Fournier. #695, #947\n\t* Apache plugin: The \"SSLCiphers\" option gives control over the\n\t  encryption algorithms to use with TLS connections. Thanks to Toni\n\t  Moreno. #946\n\t* Barometer plugin: This new plugin reads sensor data from various\n\t  Freescale and Bosch digital barometers. Thanks to Tomas Menzl. #69,\n\t  #693\n\t* Battery plugin: Reporting values as percentages and reporting degraded\n\t  batteries has been added. Thanks to Florian Forster.\n\t* Battery plugin: Support for reading values from sysfs on Linux has\n\t  been added. Thanks to Andy Parkins, Nicholas Humfrey, Peter Wu and\n\t  Florian Forster. #725, #810, #998\n\t* Battery plugin: The value for current is no longer supplied unless the\n\t  battery provides this information. Thanks to Florian Forster.\n\t* BIND plugin: Bind's XML v3 API is now supported; Thanks to Victor\n\t  Berger, Bruno Prémont and Michal Humpula. #742, #847\n\t* Ceph plugin: This new plugin collects statistics from the Ceph\n\t  distributed storage system. Thanks to Dan Ryder, Dennis Zou, Colin\n\t  McCabe, Sage Weil. #522, #598\n\t* ConnTrack plugin: Support for reporting values as percentages as well\n\t  as legacy conntrack files in \"/proc\" has been added. Thanks to\n\t  Pierre-Yves Ritschard. #497, #680\n\t* CPU plugin: The plugin is now able to report values as percentages and\n\t  aggregate values per-state and per-CPU. Thanks to Pierre-Yves\n\t  Ritschard, Florian Forster, Fabien Wernli, Nicholas Humfrey and\n\t  Wilfried Goesgens. #499, #516, #639 #734, #812, #802\n\t* cURL-JSON plugin: Extracting values from complex JSON structures has\n\t  been enhanced. Thanks to Jim Radford. #408, #411\n\t* cURL-JSON plugin: Intervals can now be configured on a per-URL basis.\n\t  Thanks to Stan Sawa. #685\n\t* cURL-JSON, cURL-XML, Write HTTP plugins: These plugins now also follow\n\t  HTTP redirects. Thanks to Marc Fournier.\n\t* cURL, cURL-JSON, cURL-XML plugins: HTTP Digest authentication has been\n\t  implemented. Thanks to Frank Cornelis. #482\n\t* DBI, Oracle, PostgreSQL plugins: A \"MetadataFrom\" parameter has been\n\t  added which allows to set metadata from database columns. Thanks to\n\t  Mark Wong. #317, #321\n\t* DBI plugin: Querying several databases in parallel is now possible.\n\t  Thanks to Vincent Bernat. #453\n\t* Disk plugin: On the Linux platform, disk names can now get looked up\n\t  in udev with the \"UdevNameAttr\" option. Thanks to Patrick Mooney. #537\n\t* Disk plugin: This plugin now collects several additional I/O-related\n\t  metrics on the Linux platform. Thanks to Florian Forster and Michael\n\t  Schenck. #705, #759\n\t* DRBD plugin: This new plugin reads Linux's Distributed Replicated\n\t  Block Device (DRBD) statistics. Thanks to Tim Laszlo. #566, #700\n\t* Exec, UnixSock plugins: The \"PUTNOTIF\" command now allows to set\n\t  metadata on notifications. Thanks to John-John Tedro. #416\n\t* fhcount plugin: This new plugin reports the number of used file\n\t  handles. Thanks to Jiri Tyr. #1009\n\t* GenericJMX plugin: A Class Loader for \"JMXConnectorFactory\" has been\n\t  added, allowing the plugin to work with JBOSS > 7. Thanks to Alexandre\n\t  Moutot. #452\n\t* IPC plugin: This new plugin collects information related to shared\n\t  memory. Thanks to Andrés J. Díaz. #925\n\t* Java plugin: Now uses the hostname defined in the configuration file.\n\t  Thanks to Pierre-Yves Ritschard. #530, #681\n\t* Load plugin: The plugin is now able to report values as percentages.\n\t  Thanks to Vedran Bartonicek and Pierre-Yves Ritschard. #344, #498\n\t* Log Logstash plugin: This new plugin writes collectd logs and events\n\t  as Logstash JSON formatted events. Thanks to Pierre-Yves Ritschard.\n\t  #360\n\t* LVM plugin: The plugin collects thin pool data volumes size, and no\n\t  longer reports virtual volumes. Thanks to Benjamin Gilbert. #603\n\t* memcached plugin: \"listen_disabled_num\" are now also reported. Thanks\n\t  to Matt Cottingham. #622\n\t* Memory plugin: Slab memory reporting on the Linux platform has been\n\t  added. Thanks to Manuel CISSÉ and Marc Fournier. #560, #697\n\t* Memory plugin: The plugin is now able to report values as percentages.\n\t  Thanks to Jeremy Katz, Florian Forster and Manuel CISSÉ. #501, #511,\n\t  #559\n\t* Modbus plugin: Selecting between holding and input registers is now\n\t  possible. Thanks to Jan Vitek. #338\n\t* Modbus plugin: Support for accessing devices through an RS-485 serial\n\t  port has been added. Thanks to Eric Sandeen.\n\t* Multimeter plugin: This plugin isn't built by default on the AIX\n\t  platform anymore. Thanks to Manuel Luis Sanmartin Rozada. #549, #684\n\t* MySQL and PostgreSQL plugins: Passing \"127.0.0.1\" as a host will now\n\t  result in the global Hostname being used in metric names. Thanks to\n\t  Jeremy Katz. #441\n\t* MySQL plugin: InnoDB, Select and Sort statistics collection has been\n\t  added. Thanks to Wilson Felipe, Marek Becka and Pierre-Yves Ritschard.\n\t  #248, #621, #699, #824\n\t* MySQL plugin: The \"Alias\" and \"ConnectTimeout\" options have been\n\t  added. Thanks to William Tisäter.\n\t* Netlink plugin: Support for 64bit netlink counters has been added.\n\t  Thanks to Marek Becka. #435\n\t* Network plugin: The \"ReconnectInterval\" configuration option has been\n\t  added. Thanks to John Ferlito. #732\n\t* NFS plugin: Support for NFSv4.0 has been implemented. Thanks to Marek\n\t  Becka. #550\n\t* OneWire plugin: Support for more temperature-providing sensor families\n\t  has been added. Thanks to Tomasz Torcz. #672\n\t* OneWire plugin: Support for full OWFS path and more device families\n\t  has been implemented. Thanks to Tomas Menzl. #68\n\t* OpenLDAP plugin: This new plugin reads monitoring information from\n\t  OpenLDAP's \"cn=Monitor\" subtree. Thanks to Kimo Rosenbaum, Marc\n\t  Fournier and Nicholas Humfrey. #719\n\t* OpenVPN plugin: Support for OpenVPN 2.3.0 has been implemented. Thanks\n\t  to Ed Okerson. #252\n\t* OpenVZ plugin: Various improvements have been made, making the plugin\n\t  report values like the other collectd plugins do. Thanks to Chris\n\t  Lundquist. #264\n\t* Perl plugin: A new \"listval_filter\" method has been added, various\n\t  internal cleanups and improvements have been made and a test suite has\n\t  been added. Thanks to Matthias Bethke. #728\n\t* PostgreSQL plugin: The new \"ExpireDelay\" option allows skipping older\n\t  values pending write when the database slows down. Thanks to Stephen\n\t  O'Dor. #593\n\t* PowerDNS plugin: The plugin was updated for stats from pdns 3.4.3.\n\t  Thanks to Ruben Kerkhof. #965\n\t* Processes plugin: A memory-usage related optimization for low-profile\n\t  systems has been added. Thanks to Florian Forster. #652\n\t* Python plugin: Support for Python3 has been improved, \"ModulePath\" is\n\t  now prepended to \"sys.path\", and the \"get_dataset()\" function has been\n\t  added to the Python API. Thanks to Sven Trenkel and Patrick Browne.\n\t  #890, #751, #771\n\t* Redis and Write_Redis plugins: The support library has been switched\n\t  from credis to hiredis. Thanks to Andrés J. Díaz, Victor Seva, Marc\n\t  Fournier, Johan Bergström, Michael Spiegle and brianpkelly. #296,\n\t  #464, #475, #799, #1030\n\t* Redis plugin: Custom commands can now be used to fetch values stored\n\t  in Redis. Thanks to Pierre-Yves Ritschard. #816\n\t* Redis plugin: Support for passwords up to 512 characters long has been\n\t  added. Thanks to Jeremy Katz. #532\n\t* Sensors plugin: Support for lm_sensors' power sensors has been added.\n\t  Thanks to Jan Kundrát. #571\n\t* SMART plugin: This new plugin collects SMART statistics from disk\n\t  drives. Thanks to Vincent Bernat. #797\n\t* SNMP plugin: A blacklist/whitelist feature can now be used to filter\n\t  which OIDs to collect. Thanks to Christophe Courtaut. #414\n\t* SNMP plugin: SNMPv3 authentication and encryption support has been\n\t  implemented. Thanks to Michael Pilat. #362\n\t* SNMP plugin: Two error messages have been disambiguated. Thanks to\n\t  Sergey. #939, #952\n\t* Swap plugin: The plugin is now able to report values as percentages.\n\t  Thanks to Jeremy Katz and Florian Forster. #500, #510\n\t* Swap plugin: The plugin no longer fails on Linux systems where\n\t  \"SwapCached\" isn't exposed by the kernel. Thanks to Florian Forster.\n\t  #733\n\t* Tail plugin: \"GaugeInc\" and \"GaugeAdd\" options have been implemented.\n\t  Thanks to Andre Ferraz. #673\n\t* Tail plugin: Intervals can now be configured on a per-File basis.\n\t  Thanks to Tom Leaman. #446\n\t* TCPConns plugin: The \"AllPortsSummary\" option, allowing to summarize\n\t  all connections, has been added. Thanks to Marek Becka. #488\n\t* TCPConns plugin: Three metrics were renamed on the AIX platform, for\n\t  the sake of consistency. Thanks to Manuel Luis Sanmartín Rozada. #546\n\t* Turbostat plugin: This new plugin reads CPU frequency and C-state\n\t  residency on modern Intel turbo-capable processors. Thanks to Vincent\n\t  Brillault, Jean Delvare and Nicolas Iooss. #651\n\t* UnixSock plugin: The \"GETTHRESHOLD\" command has been re-added. Thanks\n\t  to Manuel Luis Sanmartín Rozada. #674\n\t* Varnish plugin: Varnish 4 support has been added, as well as as\n\t  monitoring metrics only available in Varnish 4. Thanks to Marc\n\t  Fournier. #618, #783\n\t* virt plugin: Guests memory usage is now also collected. Thanks to\n\t  Tiago Carvalho, jazzmes and Zollner Robert.\n\t* virt plugin: It is now possible to chose between using guests' name or\n\t  UUID as plugin_instance. Thanks to Remi Ferrand. #385\n\t* virt plugin: The libvirt plugin has been renamed to virt. Thanks to\n\t  Florian Forster.\n\t* Write Graphite plugin: When the connection to graphite fails,\n\t  reconnection attempts are now limited to once per second. Thanks to\n\t  Florian Forster. #625\n\t* Write HTTP plugin: Multi-instance support of this plugin has been\n\t  improved. The \"<URL \"url\">\" block has been deprecated in favor of\n\t  \"<Node \"identifier\">\". Thanks to Marc Fournier. #902\n\t* Write HTTP plugin: Several TLS-related configuration options have been\n\t  added. Thanks to Ingmar Runge. #666\n\t* Write HTTP plugin: The \"LowSpeedLimit\" and \"Timeout\" options allow to\n\t  reset slow/stalled network connections. Thanks to loginator17 and Marc\n\t  Fournier. #752, #985\n\t* Write HTTP plugin: The size of the payload posted to the HTTP server\n\t  can now be controlled with the \"BufferSize\" option. Thanks to Florian\n\t  Forster. #722\n\t* Write Kafka plugin: This new plugin sends data to Apache Kafka, a\n\t  distributed messaging queue. Thanks to Pierre-Yves Ritschard,\n\t  ciomaire, Vincent Bernat, Marc Fournier. #670, #694, #794, #853, #014\n\t* Write Log plugin: This new plugin dispatches collected values to the\n\t  configured log destination(s). Thanks to Pierre-Yves Ritschard. #886\n\t* Write Riemann plugin: Extra meta strings are now added as attributes\n\t  in notifications. Thanks to John-John Tedro. #417\n\t* Write Riemann plugin: Notification message are now sent to the Riemann\n\t  server via the description field. Thanks to Adrian Miron. #575\n\t* Write Riemann plugin: Support for custom attributes has been added.\n\t  Thanks to Pierre-Yves Ritschard. #459\n\t* Write Riemann plugin: Support had been implemented for sending events\n\t  to Riemann in batches (when using TCP), and is enabled by default.\n\t  Thanks to Pierre-Yves Ritschard. #800\n\t* Write Riemann plugin: The \"EventServicePrefix\" option has been added,\n\t  which adds a prefix to event service names. Thanks to Moshe Zada. #706\n\t* Write Riemann plugin: Threshold checks can now be passed down to the\n\t  Riemann server. Thanks to Pierre-Yves Ritschard. #518\n\t* Write Sensu plugin: This new plugin submits values to Sensu, a stream\n\t  processing and monitoring system. Thanks to Fabrice A. Marie and Marc\n\t  Fournier. #912, #1001, #1016\n\t* Write TSDB plugin: This new plugin sends data to OpenTSDB, a scalable\n\t  time series database. Thanks to Kevin Bowling, Florian Forster, Dallin\n\t  Young, Michael Schenck and Pierre-Yves Ritschard. #703, #772, #945\n\t* ZFS ARC plugin: Support for ZFS-on-Linux has been added. Thanks to\n\t  Marc Fournier and Wilfried Goesgens. #552\n\t* Zookeeper plugin: This new plugin reads data from the Apache Zookeeper\n\t  \"MNTR\" command. Thanks to Jeremy Katz. #826\n\n2016-07-26, Version 5.4.3\n\t* Build system: A deprecation warning has been removed. Thanks to\n\t  Florian Forster.\n\t* Build system: An ordering issue when build the AMQP plugin was\n\t  corrected. Thanks to Shahul Hameed.\n\t* Build system: Building the gmond plugin against recent libganglia\n\t  versions has been added. Thanks to Marc Fournier. #1129\n\t* Build system: \"collectd-tg\" now builds on AIX. Thanks to Manuel Luis\n\t  Sanmartín Rozada. #542\n\t* Build system: \"version-gen.sh\" portablility was improved. Thanks to\n\t  Marc Fournier and Ruben Kerkhof.\n\t* Build system: Compiling utils_dns.c on Solaris has beed fixed. Thanks\n\t  to Yves Mettier, Dagobert Michelsen and Florian Forster. #348\n\t* Build system: Default JDK detection got improved. Thanks to Ruben\n\t  Kerkhof and Marc Fournier.\n\t* Build system: Detection and handling of librrd 1.6 and later has been\n\t  fixed. Thanks to Ruben Kerkhof.\n\t* Build system: notify_email build options got corrected to make it\n\t  build on non-GNU libc systems. Thanks to Marc Fournier.\n\t* Build system: Protobuf building and logging has been improved. Thanks\n\t  to Ruben Kerkhof.\n\t* Build system: The \"make distcheck\" target was fixed to properly handle\n\t  java build artifacts. Thanks to Florian Forster.\n\t* Build system: The configure script got fixed to work properly when\n\t  called with \"CC=\"gcc -Wall -Werror\"\" . Thanks to Marc Fournier.\n\t* Build system: The configure script will now fail if pkg-config isn't\n\t  available. Thanks to Ruben Kerkhof.\n\t* Build system: The users plugin now builds properly on Solaris when\n\t  libstatgrab is available. Thanks to Dagobert Michelsen. #1061\n\t* Build system: Various fixes have been done to improve library\n\t  detection on FreeBSD. Thanks to Ruben Kerkhof.\n\t* collectd2html: Several perl errors have been corrected. Thanks to Ruud\n\t  van Melick. #1103\n\t* collectd: A global gauge format-string is now used to avoid loss of\n\t  precision. Thanks to Florian Forster. #1039\n\t* collectd: A race condition at plugin initialization time was fixed.\n\t  Thanks to Jan Andres. #1316\n\t* collectd: Autoloading now properly sets plugin context, allowing\n\t  plugins to determine the interval. Thanks to Florian Forster. #1069\n\t* collectd: Empty \"Plugin\" blocks are now supported by the configuration\n\t  file parser. Thanks to Manuel Luis Sanmartín Rozada. #1035\n\t* collectd: The address of the Free Software Foundation has been fixed\n\t  in GPL license headers. Thanks to Ruben Kerkhof.\n\t* collectd: Writing to a closed TCP socket is now properly handled.\n\t  Thanks to Tamás Földesi. #1104\n\t* Documentation: iptables plugin: IPv6 configuration option has been\n\t  added to the collectd.conf(5) manpage. Thanks to 'Marc Fournier''.\n\t  #1496\n\t* AMQP plugin: The plugin was fixed to build against librabbitmq 0.6.0.\n\t  Thanks to Remi Collet. #1008\n\t* Apache plugin: A warning about a possible misconfiguration has been\n\t  added. Thanks to Marc Fournier.\n\t* Apache plugin: The plugin was extended to parse the whole response,\n\t  required to support Apache versions greater than 2.4.17. Thanks to\n\t  Marc Fournier and Florian Forster. #1170, #1343\n\t* APC UPS plugin: Log messages are now prefixed with the plugin name.\n\t  Thanks to Sergey. #1329\n\t* Bind plugin: The type_instance now gets properly sanitized. Thanks to\n\t  Thomas Kho. #992\n\t* CPU plugin: Error messages on MacOSX have been improved. Thanks to\n\t  Florian Forster. #22\n\t* cURL plugin: A typo in an error message got corrected. Thanks to Marc\n\t  Fournier.\n\t* cURL, cURL-JSON and cURL-XML plugins: A memory leak when allocating\n\t  more memory fails has been fixed. Thanks to Brandon Arp.\n\t* DF plugin: An bug preventing filesystems which don't report inodes\n\t  such as btrfs has been corrected. Thanks to Marek Becka. #1096\n\t* DF plugin: Duplicate entries are no longer reported twice. Thanks to\n\t  Stefan Brüns and Florian Forster. #1402\n\t* DF plugin: Legacy code for skipping \"rootfs\" mount points has been\n\t  removed. Thanks to Marc Fournier. #1402\n\t* DF plugin: Legacy references to the \"ReportReserved\" option have been\n\t  removed. Thanks to Marc Fournier.\n\t* DF plugin: Reading the mtab now uses a reentrant function when\n\t  possible. Thanks to Ruben Kerkhof. #1163\n\t* Ethstat plugin: Code to strip leading whitespace from device names.\n\t  This works around an issue in the VMXNet3 driver. Thanks to Thomas\n\t  Guthmann. #1059\n\t* Exec plugin: A file descriptor leak when the plugin is configured to\n\t  run as a non-existing user was corrected. Thanks to Gautam BT and Marc\n\t  Fournier. #762\n\t* Exec plugin: A problem in the error handling of an fdopen() failure\n\t  has been fixed. Thanks to @ciomaire.\n\t* Interface plugin: Documentation about regular expressions in the\n\t  ignore list has been added. Thanks to Jakub Jankowski.\n\t* IRQ plugin: The \"FIQ\" line is now skipped as it doesn't contain any\n\t  counter. Thanks to Ruben Kerkhof. #971\n\t* Modbus plugin: The debug output has been disabled by default. It is\n\t  now only enabled when building with \"--enable-debug\". Thanks to Eric\n\t  Sandeen and Marc Fournier.\n\t* MongoDB plugin: A memory leak has been fixed and some adaptations to\n\t  the current API of the mongo-c-driver have been made. Thanks to\n\t  Florian Forster. #956\n\t* Network plugin: A check for the initialization of secure memory has\n\t  been added. Previously, failure to initialize this memory was ignored.\n\t  Thanks to @yujokang. #1665\n\t* Network plugin: A heap overflow has been fixed in the server code.\n\t  This issue can be triggered remotely and is potentially exploitable.\n\t  Thanks to Emilien Gaspar. CVE-2016-6254\n\t* Network plugin: The TimeToLive option handling was made more robust.\n\t  Thanks to Tim Laszlo. #654\n\t* NTPd plugin: Documentation about the required \"mode 7\" has been added.\n\t  Thanks to Jakub Jankowski.\n\t* NTPd plugin: Reporting of \"time_offset-loop\" was corrected to match\n\t  the values from ntpq/ntpdc. Thanks to Pierre Fersing and Florian\n\t  Forster. #1300\n\t* OpenVPN plugin: The plugin was fixe to avoid signaling an error when\n\t  no clients were connected. Thanks to Florian Forster. #731\n\t* Perl plugin: Init callbacks have been changed to run essentially\n\t  single-threaded to avoid race conditions by init functions which\n\t  create additional threads. Thanks to Pavel Rochnyack. #1706\n\t* PF plugin and DNS plugin: These plugins have been fixed to build\n\t  properly on OpenBSD again. Thanks to Ruben Kerkhof.\n\t* Processes plugin: A compilation error on systems without \"regex.h\" has\n\t  been fixed. Thanks to Corey Kosak.\n\t* Processes plugin: A memory leak on Solaris has been fixed. Thanks to\n\t  Jim Quinn.\n\t* Processes plugin and Swap plugin: These plugins have been corrected to\n\t  also work inside FreeBSD jails. Thanks to biancalana. #1019\n\t* Processes plugin: A warning about too long process names has been\n\t  added. Thanks to Marc Fournier. #1284\n\t* Processes plugin: Process counting on the FreeBSD and OpenBSD\n\t  platforms has been fixed. Thanks to Herve COMMOWICK. #1298\n\t* Processes plugin: The plugin was fixed to work properly on Solaris.\n\t  Thanks to Jan Andres. #919\n\t* Python plugin: A double-free bug got fixed. Thanks to Sven Trenkel.\n\t  #1285\n\t* RRDtool plugin: A race condition leading to corrupt RRD file creation\n\t  has been fixed. Thanks to Manuel Luis Sanmartín Rozada. #1031\n\t* SNMP plugin: The \"Gauge32\" signedness was corrected to match RFC1902.\n\t  Thanks to Nathan Ward. #1325\n\t* StatsD plugin: A deadlock on plugin shutdown has been fixed. Thanks to\n\t  Pavel Rochnyack #1703\n\t* StatsD plugin: A memory leak was corrected. Thanks to Florian Forster.\n\t  #997\n\t* StatsD plugin: A symbol lookup error was fixed by properly linking the\n\t  plugin against libm. Thanks to Florian Forster.\n\t* StatsD plugin: \"utils_latency\": Support for including values above\n\t  1000 in percentile calculation has been added. Thanks to Yoga\n\t  Ramalingam. #401\n\t* StatsD plugin: \"utils_latency\": Two division by zero error conditions\n\t  have been corrected. Thanks to Wilfried Goesgens. #655\n\t* StatsD plugin: Counters absolute counts are now also reported. Thanks\n\t  to Pierre-Yves Ritschard. #1311\n\t* StatsD plugin: The plugin now emits NaN values when no timer event is\n\t  recorded. Thanks to Florian Forster. #1038, #1039\n\t* StatsD plugin: The plugin was corrected to avoid crashing when\n\t  negative timer values are submitted. Thanks to Florian Forster. #1131\n\t* Tail CSV plugin: The plugin was fixed to work properly with multiple\n\t  \"Collect\" options and a bug got fixed when no \"TimeFrom\" is specified.\n\t  Thanks to Manuel Luis Sanmartín Rozada and Florian Forster. #1032\n\t* TCPConns plugin: A memory leak was fixed. Thanks to Florian Forster.\n\t  #1074\n\t* TCPConns plugin: An bug causing collectd to enter an inifinite loop on\n\t  OpenBSD was fixed. Thanks to Landry Breuil. #1094\n\t* Threshold plugin: Threshold configuration blocks can now be defined in\n\t  different files. Thanks to Michael Salmon. #551\n\t* vmem plugin: Support for pgsteal in recent Linux kernels has been\n\t  added. Thanks to Jakub Jankowski. #1307\n\t* vmem plugin: The DSType for nr_dirtied and nr_written was corrected to\n\t  report a derive. Thanks to Marek Becka. #1072\n\t* Write Graphite plugin: Error handling when submitting metrics to the\n\t  server is now more robust. Thanks to Sam Pointer. #1364\n\t* Write HTTP plugin: Freeing of memory holding HTTP headers during\n\t  shutdown has been fixed. Thanks to Tolga Ceylan.\n\t* Write Redis plugin: Multi-Valued key was made easier to parse by\n\t  adding a \"|\" character as a delimiter. Thanks to brianpkelly and\n\t  Florian Forster. #1070\n\t* Write Redis plugin: The timestamp format was corrected. Thanks to\n\t  Florian Forster.\n\t* ZFS ARC plugin: The plugin was will not emit warning about missing\n\t  \"l2_size\" stats anymore. Thanks to Jan Andres. #919\n\t* 152 patches have been applied to numerous plugins and core components,\n\t  fixing various programming errors which were reported by scan-build,\n\t  libasan, FBInfer, coverity-scan, clang and gcc-6: Thanks to Ruben\n\t  Kerkhof, Florian Forster, Marc Fournier, Corey Kosak, Laurent,\n\t  Claudius Zingerli and Fabien Wernli.\n\n2015-02-26, Version 5.4.2\n\t* Build system: Numerous fixes. Thanks to Bjørn Nordbø, Jim Radford,\n\t  KOMEDA Shinji, Lauri Tirkkonen, Manuel Luis Sanmartin Rozada, Marc\n\t  Fournier, Rainer Müller, Yoga Ramalingam and Yves Mettier. #326,\n\t  #373, #653, #828\n\t* collectd: A use-after-free has been fixed in the \"parse_value()\"\n\t  function. Thanks to Matthias Urlichs.\n\t* collectd: Fix carriage return sign in types_list Thanks to Marc\n\t  Fournier and @NsLib.\n\t* collectd: Fix programming error in src/configfile.c. Thanks to\n\t  Wilfried Goesgens.\n\t* collectd: An off-by-one error has been fixed in the\n\t  \"strstripnewline()\" function. Patch by Florian Forster.\n\t* collectd: Use the complain mechanism to report filter chain write\n\t  failures. Thanks to Sebastian Harl.\n\t* collectd: Spelling and grammar of error messages have been fixed.\n\t  Thanks to Katelyn Perry and Tim Laszlo.\n\t* collectdctl: Fixed buffering issues which caused trouble on AIX and\n\t  Solaris. Thanks to Yoga Ramalingam.\n\t* Documentation: Details and example about multi-instance filterchain\n\t  targets have been added. Thanks to Marc Fournier.\n\t* Documentation: The \"CollectStatistics\" option of the rrdcached has\n\t  been documented. Thanks to Micha Krause. #907\n\t* Documentation: The write_redis has been documented. Thanks to Marc\n\t  Fournier.\n\t* Documentation: The \"GraphiteSeparateInstances\" and\n\t  \"GraphiteAlwaysAppendDS\" options of the amqp have been documented.\n\t  Thanks to Marc Fournier.\n\t* Documentation: Documentation of the \"AutoLoadPlugin\" option has been\n\t  improved. Thanks to Florian Forster. #715\n\t* aggregation: \"utils_vl_lookup\": A race when creating user objects\n\t  has been fixed. Thanks to Sebastian Harl. #535\n\t* cpu: Temperature code for Mac&nbsp;OS&nbsp;X has been removed.\n\t  Thanks to Florian Forster and Marc Fournier. #22\n\t* cURL, cURL-JSON, cURL-XML and Write HTTP plugins: Call\n\t  \"curl_global_init()\" in the plugins' \"init()\" callback. Thanks to\n\t  Jeremy Katz.\n\t* cURL and memcachec plugins: Fix calculation of gauge, average,\n\t  minimum and maximum. Previously, they were calculated from the start\n\t  of the daemon, which is not the documented behavior. Thanks to\n\t  Florian Forster. #663\n\t* curl-json: A bug, which triggered when two URLs with a long common\n\t  prefix were configured, was fixed. Thanks to Marc Fournier. #582\n\t* dbi: Compatibility with new versions of libdbi has been restored.\n\t  Thanks to Florian Forster. #950\n\t* Exec, UnixSock plugins: Fix parsing of the \"time\" option of the\n\t  \"PUTNOTIF\" command. Thanks to Adrian Miron. #477\n\t* ipmi: A conflict with the java over the \"SIGUSR2\" signal has been\n\t  fixed. Thanks to Vincent Bernat. #114\n\t* java: Conversion from Java's time representation to collectd's\n\t  representation has been fixed. Thanks to Manuel Luis Sanmartín\n\t  Rozada.\n\t* java: Make sure \"cjni_thread_detach()\" is called on all paths.\n\t  Thanks to Florian Forster.\n\t* LogFile and SysLog plugins: Avoid total silence in case of a\n\t  misconfiguration. Thanks to Marc Fournier and Wilfried Goesgens.\n\t* network: Support for recent versions of gcrypt has been added.\n\t  Thanks to Vincent Bernat. #632\n\t* network: Robustness of the client connecting behavior has been\n\t  improved. Thanks to Florian Forster. #627\n\t* python: Don't create empty \"meta_data_t\" objects. Thanks to Florian\n\t  Forster. #716\n\t* python: Fix Py list length check in \"cpy_build_meta()\". Thanks to\n\t  Yoga Ramalingam.\n\t* python: The \"interval\" member was fixed to export seconds as a\n\t  double. Thanks to Justin Burnham.\n\t* RRDtool and RRDCacheD plugins: A memory leak when creating RRD files\n\t  has been fixed. Thanks to Yves Mettier. #661\n\t* snmp: Fix a memory leak. Thanks to Marc Fournier and Pierre-Yves\n\t  Ritschard. #610, #804\n\t* statsd: Support for samplerates in timer metrics was added. Thanks\n\t  to John Leach. #461\n\t* swap: Fix behavior under OpenVZ by making \"cached\" optional. Thanks\n\t  to Florian Forster. #733\n\t* threshold: Population of the \"time\" field in notifications has been\n\t  added. Thanks to Manuel Luis Sanmartín Rozada.\n\t* libvirt: Only gather stats for running domains. Thanks to Ruben\n\t  Kerkhof.\n\t* lvm: An issue with Volume Groups (VGs) without Logical Volumes (LVs)\n\t  has been fixed. Thanks to Jan Kundrát.\n\t* write_graphite: Escape characters not supported by Graphite. Thanks\n\t  to Pierre-Yves Ritschard and Marc Fournier.\n\t* write_http: Make callback names context-dependent. Thanks to Marc\n\t  Fournier. #821\n\t* write_redis: A formatting bug, which resulted in totally unusable\n\t  numbers being transmitted to Redis, was fixed. Thanks to Marc\n\t  Fournier.\n\t* write_riemann: Receive acknowledge message when using TCP. Thanks to\n\t  John-John Tedro.\n\n2014-01-26, Version 5.4.1\n\t* amqp plugin: Add support for RabbitMQ 0.4.x to avoid compiler\n\t  warnings. Thanks to Sebastian Harl for implementing this.\n\t* apache / network plugins: Improved initialization order hopefully\n\t  resolved gcrypt initialization problems.\n\t* aquaero plugin: The type used to submit fan utilization was fixed.\n\t  Thanks to Alex Deymo for the patch.\n\t* cgroups plugin: A small memory leak was fixed. Checking the existence\n\t  of a mount option without a value was fixed. More permissive parsing\n\t  of the cpuacct.stats file fixes support for some versions of Linux.\n\t  Thanks to Marc Fournier for bug reports and patches.\n\t* curl plugin: Fix <Match> blocks without an instance. Thanks to\n\t  Alexander Golovko for reporting and Sebastian Harl for fixing this.\n\t* curl_json plugin: Potentially invalid memory access has been\n\t  sanitized. Thanks to Jim Radford for his patch.\n\t* interface plugin: Fix behavior under FreeBSD 10: Reporting of\n\t  per-address statistics caused duplicate updates to the same metric.\n\t  Thanks to demon / @trtrmitya for the patch.\n\t* write_graphite plugin: Use TCP to connect to Graphite by default. The\n\t  default changed from TCP to UDP between 5.3.1 and 5.4.0, which is a\n\t  regression. Thanks to Marc Fournier for fixing this. Reconnect\n\t  behavior was improved. Thanks to Michael Hart for his patch.\n\t* zfs_arc plugin: Collect \"allocated\" and \"stolen\" on FreeBSD only.\n\n2013-08-18, Version 5.4.0\n\t* collectd: The \"LoadPlugin\" config option no longer attempts to load\n\t  plugins twice. If more than one \"LoadPlugin\" statement or block is\n\t  encountered, only the first will have any effect.\n\t* collectd: The \"AutoLoadPlugin\" option allows to automatically load\n\t  plugins for which a configuration is found.\n\t* collectd: The \"WriteQueueLimitHigh\" and \"WriteQueueLimitLow\" options\n\t  allow collectd to drop values when under stress, to avoid running out\n\t  of memory. Thanks to Yves Mettier for his patch.\n\t* amqp plugin: The \"GraphiteSeparateInstances\" and\n\t  \"GraphiteAlwaysAppendDS\" options have been added. Thanks to Laurent\n\t  for the patch.\n\t* aquaero plugin: This new plugin reads various metrics, e.g. fan\n\t  speeds and temperatures, from Aquaero 5, a fan and water cooling\n\t  control panel. Thanks to Alex Deymo for his patch.\n\t* curl plugin: The \"MeasureResponseCode\" option has been added. Thanks\n\t  to Jan Matějka for his patch.\n\t* curl_json plugin: Support for UNIX domain sockets and array wildcards\n\t  has been added. Thanks to Jim Radford for his patch.\n\t* curl_xml plugin: Support for long URLs has been improved.\n\t* cgroups plugin: This new plugin collects CPU accounting information\n\t  for processes in a cgroup. Thanks to Michael Stapelberg for his patch.\n\t* df plugin: The \"ValuesAbsolute\" and \"ValuesPercentage\" options have\n\t  been added. Thanks to Vedran Bartonicek for the patch.\n\t* exec plugin: Do UID / GID lookups before forking. This should prevent\n\t  a race condition in the NSS library. Thanks to Ceri Storey for the\n\t  patch.\n\t* lvm plugin: This new plugin collects size information from Linux'\n\t  Logical Volume Manager (LVM). Thanks to Chad Malfait for his work.\n\t* memcached plugin: Support for increment and decrement counts has been\n\t  added. Thanks to Blake Matheny for the patch.\n\t* mic plugin: This new plugin collects CPU and memory usage, power\n\t  consumption and temperatures of Intel's Many-Integrated-Core (MIC)\n\t  architecture, such as Xeon Phi cards. Thanks to Evan Felix for his\n\t  work.\n\t* netlink plugin: This plugin has been converted to use the supported\n\t  \"libmnl\" library. Thanks to Andreas Henriksson for his patch.\n\t* nginx plugin: Collection of accepted and handled connections has been\n\t  added. Thanks to Patrick Shan for his patch.\n\t* sigrok plugin: This new plugin collects metrics from sigrok, a signal\n\t  processing framework reading various hardware devices, from light\n\t  meters to spectrum analyzers. Thanks to Bert Vermeulen for his patch.\n\t* statsd plugin: This new plugin listens to a UDP socket and reads\n\t  metrics in the StatsD format.\n\t* varnish plugin: Many additional metrics have been added. Thanks to\n\t  Nick Stenning for his patch.\n\t* write_graphite plugin: Support for \"UDP\" has been added. Thanks to\n\t  Javier Maestro for his patch.\n\t* write_riemann plugin: The \"TTLFactor\" option has been added.\n\t* zfs_arc plugin: Support for FreeBSD has been added. Thanks to Xin Li\n\t  for his patch.\n\n2015-02-26, Version 5.3.2\n\t* Build system: Numerous fixes. Thanks to Bjørn Nordbø, Jim Radford,\n\t  KOMEDA Shinji, Lauri Tirkkonen, Manuel Luis Sanmartin Rozada, Marc\n\t  Fournier, Rainer Müller, Yoga Ramalingam and Yves Mettier. #326,\n\t  #373, #653, #828\n\t* collectd: A use-after-free has been fixed in the \"parse_value()\"\n\t  function. Thanks to Matthias Urlichs.\n\t* collectd: Fix carriage return sign in types_list Thanks to Marc\n\t  Fournier and @NsLib.\n\t* collectd: Fix programming error in src/configfile.c Thanks to\n\t  Wilfried Goesgens.\n\t* collectd: An off-by-one error has been fixed in the\n\t  \"strstripnewline()\" function. Patch by Florian Forster.\n\t* collectd: Use the complain mechanism to report filter chain write\n\t  failures. Thanks to Sebastian Harl.\n\t* collectd: Spelling and grammar of error messages have been fixed.\n\t  Thanks to Katelyn Perry and Tim Laszlo.\n\t* collectdctl: Fixed buffering issues which caused trouble on AIX and\n\t  Solaris. Thanks to Yoga Ramalingam.\n\t* Documentation: Details and example about multi-instance filterchain\n\t  targets have been added. Thanks to Marc Fournier.\n\t* Documentation: The \"CollectStatistics\" option of the rrdcached has\n\t  been documented. Thanks to Micha Krause. #907\n\t* Documentation: The write_redis has been documented. Thanks to Marc\n\t  Fournier.\n\t* Documentation: The synopsis of the threshold has been fixed. Thanks\n\t  to Fabien Wernli.\n\t* Documentation: The \"GraphiteSeparateInstances\" and\n\t  \"GraphiteAlwaysAppendDS\" options of the amqp have been documented.\n\t  Thanks to Marc Fournier.\n\t* aggregation: \"utils_vl_lookup\": A race when creating user objects\n\t  has been fixed. Thanks to Sebastian Harl. #535\n\t* cpu: Temperature code for Mac&nbsp;OS&nbsp;X has been removed.\n\t  Thanks to Florian Forster and Marc Fournier. #22\n\t* csv: A regression which would lead to the \"DataDir\" option to be\n\t  ignored has been fixed. Thanks to Manuel Luis Sanmartin Rozada.\n\t* curl, curl-json, curl-xml and write_http plugins: Call\n\t  \"curl_global_init()\" in the plugins' \"init()\" callback. Thanks to\n\t  Jeremy Katz.\n\t* curl and memcachec plugins: Fix calculation of gauge, average,\n\t  minimum and maximum. Previously, they were calculated from the start\n\t  of the daemon, which is not the documented behavior. Thanks to\n\t  Florian Forster. #663\n\t* dbi plugin: Compatibility with new versions of libdbi has been\n\t  restored. Thanks to Florian Forster. #950\n\t* exec, unixsock plugins: Fix parsing of the \"time\" option of the\n\t  \"PUTNOTIF\" command. Thanks to Adrian Miron. #477\n\t* java: Conversion from Java's time representation to collectd's\n\t  representation has been fixed. Thanks to Manuel Luis Sanmartín\n\t  Rozada.\n\t* ipmi: A conflict with the java over the \"SIGUSR2\" signal has been\n\t  fixed. Thanks to Vincent Bernat. #114\n\t* java: Make sure \"cjni_thread_detach()\" is called on all paths.\n\t  Thanks to Florian Forster.\n\t* logfile and syslog plugins: Avoid total silence in case of a\n\t  misconfiguration. Thanks to Marc Fournier and Wilfried Goesgens.\n\t* memcached: Connecting to a UNIX socket has been fixed. Thanks to Jim\n\t  Radford.\n\t* network: Support for recent versions of gcrypt has been added.\n\t  Thanks to Vincent Bernat. #632\n\t* network: Robustness of the client connecting behavior has been\n\t  improved. Thanks to Florian Forster. #627\n\t* python: Don't create empty \"meta_data_t\" objects. Thanks to Florian\n\t  Forster. #716\n\t* python: Fix Py list length check in \"cpy_build_meta()\". Thanks to\n\t  Yoga Ramalingam.\n\t* python: The \"interval\" member was fixed to export seconds as a\n\t  double. Thanks to Justin Burnham.\n\t* replace and set targets: Fix error message. Thanks to Marc Fournier.\n\t  #448\n\t* rrdtool and rrdcached plugins: Honor the \"DataDir\" config option;\n\t  this fixes a regression. Thanks to Florian Forster. #380\n\t* rrdtool and rrdcached plugins: A memory leak when creating RRD files\n\t  has been fixed. Thanks to Yves Mettier. #661\n\t* snmp: Fix a memory leak. Thanks to Marc Fournier and Pierre-Yves\n\t  Ritschard. #610, #804\n\t* swap: Fix behavior under OpenVZ by making \"cached\" optional. Thanks\n\t  to Florian Forster. #733\n\t* threshold: Population of the \"time\" field in notifications has been\n\t  added. Thanks to Manuel Luis Sanmartín Rozada.\n\t* libvirt: Only gather stats for running domains. Thanks to Ruben\n\t  Kerkhof.\n\t* write_graphite: Escape characters not supported by Graphite. Thanks\n\t  to Pierre-Yves Ritschard and Marc Fournier.\n\t* write_http: Make callback names context-dependent. Thanks to Marc\n\t  Fournier. #821\n\t* write_riemann: Receive acknowledge message when using TCP. Thanks to\n\t  John-John Tedro.\n\n2013-07-13, Version 5.3.1\n\t* Documentation: Various fixes.\n\t* Configuration: Fix error handling: Errors in included files were\n\t  ignored, causing configuration mistakes to go unnoticed.\n\t* dns plugin: Don't abort when PCAP returns an error.\n\t* modbus plugin: The reconnection strategy was improved, fixing a\n\t  segfault in the libmodbud library. Thanks to Stefan Nickl and\n\t  Fabien Wernli for their patches.\n\t* mysql plugin: The notification about a newly running MySQL slave\n\t  thread has been fixed. Thanks to Joaquín Cuenca Abela for the patch.\n\t* snmp plugin: A build issue has been fixed (C99 mixed declaration).\n\t  The end-of-tree check has been improved by Pierre-Yves Ritschard.\n\t* threshold plugin: Handling of the \"Interesting\" configuration option\n\t  has been fixed. Thanks to Björn for the patch.\n\t* write_riemann plugin: A memory leak has been fixed. Thanks to Dave\n\t  Cottlehuber for reporting it.\n\n2013-04-09, Version 5.3.0\n\t* collectd: The \"Include\" statements can now be limited to include\n\t  only matching files in a directory. Thanks to Sebastian Harl for his\n\t  patch.\n\t* collectd: Dispatches / writes are now handled by a thread pool. This\n\t  improves reliability and throughput for instances configured to act\n\t  as a \"server\". Thanks to Sebastian Harl and Dan Fandrich for\n\t  reviewing this change and fixing bugs.\n\t* aggregation plugin: Selection of value lists is now possible using\n\t  regular expressions. Parts of the identifier of the resulting metric\n\t  can now be set via the configuration file.\n\t* apcups plugin: The \"ReportSeconds\" option has been implemented.\n\t* curl* plugins: Support for POST requests and custom request headers\n\t  has been added. Thanks to Dan Fandrich for his patch.\n\t* curl_xml plugin: Support for XML namespaces has been added. Thanks\n\t  to Dan Fandrich for his patch.\n\t* dbi plugin: Support for numeric options has been added. The\n\t  \"Host\" option has been added. Thanks to Daniel Hilst for his patch.\n\t* disk plugin: Support for systems with >256 has been fixed. Thanks to\n\t  Greg Mason for his patch.\n\t* libvirt plugin: Support for memory allocation has been added. Thanks\n\t  to Johan Wirén for his patch.\n\t* netapp plugin: Support for \"SnapVault\", \"VFiler\" and deduplication /\n\t  compression and quota metrics. Thanks to Sebastian Harl for his\n\t  patches and teamix GmbH for sponsoring this work.\n\t* postgresql plugin: The reconnection logic has been improved. Thanks\n\t  to Sebastian Harl for his patches.\n\t* rrdtool, rrdcached plugins: The \"CreateFilesAsync\" option has been\n\t  implemented. When enabled, new RRD files will be created\n\t  asynchronously, which improved throughput of \"server\" instances.\n\t  Many thanks to Yves Mettier for all his input and code.\n\t* tail_csv plugin: This new plugins allows to read metrics from CSV\n\t  files, such as Snort's statistics file. Thanks to Kris Nielander for\n\t  his patch.\n\t* write_mongodb plugin: Authentication options have been added.\n\t* write_riemann plugin: This new plugin allows sending metrics to\n\t  Riemann, a stream processing and alerting tool. Big thanks to\n\t  Pierre-Yves Ritschard for his work.\n\n2013-04-08, Version 5.2.2\n\t* Build system: A bad interaction between the Java detection code and\n\t  libltdl has been fixed. Thanks to Dave Cottlehuber for his patch.\n\t  Installation of the Perl bindings has been improved / fixed. Thanks\n\t  to Sebastian Harl for his patch.\n\t* collectd: Fixed read callback scheduling at startup.\n\t* apache, ascent, bind, curl, curl_json, curl_xml, nginx and\n\t  write_http plugins: Portability fixes, protection from infinite\n\t  redirect loops, improved error handling and incorrect dereferences\n\t  have been fixed. Most of these are related to the cURL library.\n\t  Thanks to Dan Fandrich for his patches.\n\t* logfile plugin: Flush the output file handle. This works around\n\t  caching when logging to STDOUT and redirecting into a file. Thanks\n\t  to Nathan Huff for the patch.\n\t* mysql plugin: Fix a memory leak in the error handling. Thanks to\n\t  Tomas Doran for his patch.\n\t* netapp plugin: Fix the interval with which values are dispatched.\n\t* network plugin: Build issues under FreeBSD and initialization have\n\t  been fixed. Thanks to Ed Schouten for his patch.\n\t* nfs plugin: A compilation problem has been fixed.\n\t* notify_email plugin: Add a character set to the mail header. Thanks\n\t  to Manuel Cissé for his patch.\n\t* pf plugin: Build issues have been fixed.\n\t* postgresql plugin: Build issues have been fixed.\n\t* rrdcached plugin: Connect to the daemon from the read callback.\n\t* snmp plugin: Matching of SNMP subtrees has been improved. Thanks to\n\t  \"jkrabbe\" for the patch.\n\t* thermal plugin: The initialization of dispatched value lists has\n\t  been fixed. Thanks to Markus Knetschke for his patch.\n\t* unixsock plugin: Parsing of options with an underscore, e.g.\n\t  \"plugin_instance\" has been fixed. Thanks to Tommie Gannert for his\n\t  patch.\n\n2013-01-27, Version 5.2.1\n\t* Build system: \"make distcheck\" has been fixed. Build fixes Solaris\n\t  and systems without gcrypt. Thanks to Yves Mettier for his patches.\n\t* collectd: The complaint mechanism was fixed. It reported messages\n\t  more frequently than intended.\n\t* collectd-tg: A manual page has been added.\n\t* dns plugin: Build issues on FreeBSD have been fixed. Thanks to\n\t  Ed Schouten for his patch.\n\t* ethstat plugin: Fix the \"Map\" config option. An incorrectly used\n\t  character pointer may lead to a segmentation fault.\n\t* network plugin: Build issues on FreeBSD have been fixed. Thanks to\n\t  Ed Schouten for his patch.\n\t* postgresql plugin: A memory leak in the writing code has been fixed.\n\t  A use-after-free issue that happened when more than one database was\n\t  configured was fixed. Thanks to Sebastian Harl for fixing these\n\t  problems.\n\t* redis plugin: A build failure has been fixed. Thanks to Pierre-Yves\n\t  Ritschard for his patch.\n\t* varnish plugin: Fix a problem with instances without name.\n\t* write_graphite plugin: A regression which rendered the\n\t  \"SeparateInstances\" and \"AlwaysAppendDS\" options unusable has been\n\t  fixed. A failed assertion when using types with many data sources\n\t  has been fixed. Improve reporting of connection errors to not spam\n\t  log files too much. Thanks to Pierre-Yves Ritschard for reporting\n\t  the logging problem.\n\t* zfs_arc plugin: Fix the type used for mutex misses. Thanks to Yves\n\t  Mettier for reporting this bug.\n\n2012-11-17, Version 5.2.0\n\t* collectd: The performance of the LISTVAL command has been improved.\n\t  Thanks to Yves Mettier for the patch.\n\t* collectd: The possibility to configure the collection interval on a\n\t  per-plugin basis has been added. Huge thanks to Sebastian Harl for\n\t  his work.\n\t* collectd-tg: This new binary allows to generate random but real\n\t  looking collectd network traffic. This can be used to load-test new\n\t  plugin, for example.\n\t* libcollectdclient: Code for constructing and sending network packets\n\t  in the binary format has been added.\n\t* aggregation plugin: This new plugin allows to aggregate multiple\n\t  value lists into one.\n\t* amqp and write_http plugins: Meta data is now included in the JSON\n\t  output format. Thanks to Mark Wong for the patch.\n\t* amqp plugin: Support for \"Graphite\" output has been added. Thanks to\n\t  Thomas Meson for the patch.\n\t* contextswitch plugin: Support for AIX has been added. Thanks to\n\t  Manuel Rozada for his patch.\n\t* disk plugin: The \"UseBSDName\" config option has been added to the\n\t  Mac OS X version.\n\t* GenericJMX plugin: Automatically determine the host name if it isn't\n\t  configured.\n\t* libvirt plugin: The \"number\" interface format has been added. Thanks\n\t  to \"Davide Guerri\" for the patch.\n\t* memcached plugin: Support for multiple connections has been added.\n\t  Thanks to Nicolas Szalay for the patch.\n\t* ntpd plugin: The \"IncludeUnitID\" config option has been added. The\n\t  behavior when a peer is unreachable has been improved. Thanks to\n\t  Johan Kiviniemi for the patches.\n\t* oracle plugin: The \"Host\" config option has been added.\n\t* pf plugin: This new plugin allows to collect statistics from BSD's\n\t  packet filter \"pf\". Thanks to Pierre-Yves Ritschard and Stefan Rinkes\n\t  for their work.\n\t* postgresql plugin: The \"Instance\" config option has been added.\n\t  Support for writing values to a PostgreSQL database has been added.\n\t  Thanks to Sebastian Harl for the patches.\n\t* processes plugin: Support for Solaris has been added. Thanks to\n\t  Cosmin Ioiart for the patch.\n\t* redis plugin: Support for authenticating via password has been added.\n\t  Thanks to biancalana for the patch.\n\t* rrdcached plugin: The \"HeartBeat\", \"RRARows\", \"RRATimespan\",\n\t  \"StepSize\" and \"XFF\" config options have been added.\n\t* swap plugin: The \"ReportBytes\" config option has been added. The AIX\n\t  version now also exports \"reserved\" pages and swap-in / swap-out\n\t  \"traffic\". Thanks to Manuel Rozada for the patch.\n\t* tcpconns plugin: Use a netlink socket rather than reading from /proc\n\t  for improved performance. Thanks to Michael Stapelberg for the patch.\n\n2013-04-08, Version 5.1.3\n\t* Build system: A bad interaction between the Java detection code and\n\t  libltdl has been fixed. Thanks to Dave Cottlehuber for his patch.\n\t* collectd: Fixed read callback scheduling at startup.\n\t* apache, ascent, bind, curl, curl_json, curl_xml, nginx and\n\t  write_http plugins: Portability fixes, protection from infinite\n\t  redirect loops, improved error handling and incorrect dereferences\n\t  have been fixed. Most of these are related to the cURL library.\n\t  Thanks to Dan Fandrich for his patches.\n\t* logfile plugin: Flush the output file handle. This works around\n\t  caching when logging to STDOUT and redirecting into a file. Thanks\n\t  to Nathan Huff for the patch.\n\t* mysql plugin: Fix a memory leak in the error handling. Thanks to\n\t  Tomas Doran for his patch.\n\t* netapp plugin: Fix the interval with which values are dispatched.\n\t* network plugin: Build issues under FreeBSD and initialization have\n\t  been fixed. Thanks to Ed Schouten for his patch.\n\t* nfs plugin: A compilation problem has been fixed.\n\t* notify_email plugin: Add a character set to the mail header. Thanks\n\t  to Manuel Cissé for his patch.\n\t* rrdcached plugin: Connect to the daemon from the read callback.\n\t* snmp plugin: Matching of SNMP subtrees has been improved. Thanks to\n\t  \"jkrabbe\" for the patch.\n\t* thermal plugin: The initialization of dispatched value lists has\n\t  been fixed. Thanks to Markus Knetschke for his patch.\n\t* unixsock plugin: Parsing of options with an underscore, e.g.\n\t  \"plugin_instance\" has been fixed. Thanks to Tommie Gannert for his\n\t  patch.\n\n2013-01-25, Version 5.1.2\n\t* Build system: \"make distcheck\" has been fixed. Thanks to Yves\n\t  Mettier for his patches.\n\t* collectd: The complaint mechanism was fixed. It reported messages\n\t  more frequently than intended.\n\t* dns plugin: Build issues on FreeBSD have been fixed. Thanks to\n\t  Ed Schouten for his patch.\n\t* ethstat plugin: Fix the \"Map\" config option. An incorrectly used\n\t  character pointer may lead to a segmentation fault.\n\t* network plugin: Build issues on FreeBSD have been fixed. Thanks to\n\t  Ed Schouten for his patch.\n\t* varnish plugin: Fix a problem with instances without name.\n\t* write_graphite: Improve reporting of connection errors to not spam\n\t  log files too much. Thanks to Pierre-Yves Ritschard for reporting\n\t  this problem.\n\t* zfs_arc plugin: Fix the type used for mutex misses. Thanks to Yves\n\t  Mettier for reporting this bug.\n\n2012-11-11, Version 5.1.1\n\t* collectd: Create new directories with mode 0777 and let umask remove\n\t  unwanted permission bits.\n\t* collectd: Build issues have been fixed.\n\t* collectd: An incorrect assertion has been fixed in some common code\n\t  for Solaris. This should resolve pseudo-random assertion failures\n\t  under Solaris. Thanks to Jeff Blane for his help debugging this.\n\t* collectd: A couple of memory leaks through PThread thread attributes\n\t  have been fixed. Thanks to Gerrie Roos for fixing these.\n\t* collectdctl: Fix PUTVAL for data sets with multiple data sources.\n\t  Thanks to Cyril Feraudet for reporting this problem.\n\t* contrib/migrate-4-5.px: Handle to \"df\" to \"df_complex\" conversion\n\t  correctly.\n\t* apcups plugin: Improve the reconnect behavior.\n\t* curl_xml plugin: The \"Host\" setting was silently ignored. Thanks to\n\t  Fabien Wernli for fixing this.\n\t* df plugin: Ignore \"rootfs\" devices under Linux to avoid having them\n\t  reported twice. Thanks to Brune Prémont for fixing this.\n\t* disk plugin: Fix incorrect computation of read and write latency (the\n\t  \"disk_time\" type). Previously, the numbers reported where too small\n\t  by a factor of \"interval\", e.g. when the interval is set to 10\n\t  seconds, the values were too low by a factor of 10. Thanks to Manuel\n\t  Sanmartin for reporting this problem.\n\t* dns plugin: A build issue under Solaris has been fixed. A erroneous\n\t  define that could lead to the reporting of bad data has been fixed by\n\t  Daniel Sutto.\n\t* ethstat plugin: An off-by-one error and potential use of\n\t  uninitialized memory has been fixed. Thanks to Mark Voelker for\n\t  reporting these problems.\n\t* memcachec plugin: A bug in the configuration handling has been fixed.\n\t  Thanks to Pascal Hofmann for fixing this issue.\n\t* mysql plugin: Fix a bug when registering multiple databases. Thanks\n\t  to Sebastian Harl for fixing this.\n\t* netapp plugin: Correctly close the connection on communication\n\t  errors.\n\t* netlink plugin: The function used to query statistics has been\n\t  changed to be more in line with iproute2's behavior. Thanks to\n\t  \"KIvosak\" for the patch.\n\t* network plugin: Initialization of libgcrypt has been fixed. Thanks to\n\t  Chris Lundquist for his patch.\n\t* oracle plugin: Error messages have been improved.\n\t* ping plugin: Don't enter the exponential back-off mode when\n\t  ping_send() fails. This should make recovery after a network failure\n\t  much faster.\n\t* python plugin: Memory leaks have been fixed. Thanks to Tommie Gannert\n\t  and Sven Trenkel for fixing this.\n\t* redis plugin: Fix a compilation problem on FreeBSD. Thanks to\n\t  \"biancalana\" for the fix.\n\t* rrdtool plugin: Fix an out-of-bounds array access when printing a\n\t  warning message. Thanks to Will Hawkins for fixing this bug.\n\t* snmp plugin: Support for the SNMP_ENDOFMIBVIEW return value has been\n\t  added. Support for more complex / unusual MIBs / subtrees has been\n\t  added. Thanks to Mark Juric to test the changes and point out these\n\t  problems.\n\t* varnish plugin: Support for multiple instances of Varnish 3 has been\n\t  fixed. Thanks to Jonathan Huot for the patch.\n\t* write_mongodb plugin: Add compatibility with libmongo 0.6.0 and\n\t  later. Thanks to Chris Lundquist for this patch.\n\n2012-04-01, Version 5.1.0\n\t* Build system, iptables plugin: The shipped version of libiptc has\n\t  been removed.\n\t* collectd-nagios: A list of value lists can now be queried using\n\t  \"-n LIST\". Thanks to Sebastian Harl for his patches.\n\t* bind plugin: The \"ParseTime\" option has been added. It allows to use\n\t  the system time rather than the time reported by BIND.\n\t* curl, memcachec, tail plugins: The \"ExcludeRegexp\" option has been\n\t  added. Thanks to Peter Warasin for his initial patch.\n\t* ethstat plugin: The new \"ethstat\" plugin reads performance statistics\n\t  directly from ethernet cards. Thanks to Cyril Feraudet for his patch.\n\t* GenericJMX plugin: Support for querying MBean \"Operations\" (in\n\t  addition to \"Attributes\") has been added. Thanks to Pierre-Yves\n\t  Ritschard for his patch.\n\t* irq plugin: The selection / ignore code now uses the default\n\t  ignorelist infrastructure, providing the standard feature set, e.g.\n\t  regex matching.\n\t* md plugin: The new \"md\" plugin reports the number of disks in various\n\t  states in Linux software RAID devices. Thanks to Michael Hanselmann\n\t  for his patch.\n\t* modbus plugin: Support for signed integer register types has been\n\t  added.\n\t* nfs plugin: Support for Solaris has been added. Thanks to Cosmin\n\t  Ioiart for his patch.\n\t* numa plugin: The new \"numa\" plugin reports statistics of the\n\t  Non-Uniform Memory Access (NUMA) subsystem of Linux.\n\t* processes plugin: Various fixes for the FreeBSD implementation.\n\t  Thanks to Phil Kulin for his patch.\n\t* rrdcached plugin: Passing flushes to the caching daemon has been\n\t  added.\n\t* sensors plugin: The initialization code has been improved. Thanks to\n\t  Henrique de Moraes Holschuh for his patch.\n\t* swap plugin: The \"ReportByDevice\" option has been added.\n\t* syslog plugin: Support for writing notifications has been added.\n\t  Thanks to Fabien Wernli for his patch.\n\t* tcpconns plugin: Support for AIX has been added. Thanks to Manuel\n\t  Luis Sanmartín Rozada for his patch.\n\t* threshold plugin: The \"PersistOK\" option has been added. Thanks to\n\t  Aaron Brady for his patch.\n\t* varnish plugin: Support for Varnish 3.0 has been added. Thanks to\n\t  Jérôme Renard for his patches.\n\t* write_mongodb plugin: The new \"write_mongodb\" plugin writes value\n\t  lists to MongoDB, a shema-less database. Thanks to Akkarit Sangpetch\n\t  and Chris Lundquist for their work.\n\t* write_graphite plugin: The new \"write_graphite\" plugin writes value\n\t  lists to Carbon, the storage layer of the Graphite time-series\n\t  database. Thanks to Scott Sanders and Pierre-Yves Ritschard for their\n\t  work.\n\t* zfs_arc plugin: Several new statistics have been added. Thanks to\n\t  Aurelien Rougemont for his patches.\n\t* scale target: Support for scaling specific data sources only has been\n\t  added. Thanks to Gerrie Roos for his patch.\n\n2012-11-11, Version 5.0.5\n\t* collectd: Create new directories with mode 0777 and let umask remove\n\t  unwanted permission bits.\n\t* collectd: Build issues have been fixed.\n\t* collectd: An incorrect assertion has been fixed in some common code\n\t  for Solaris. This should resolve pseudo-random assertion failures\n\t  under Solaris. Thanks to Jeff Blane for his help debugging this.\n\t* collectd: A couple of memory leaks through PThread thread attributes\n\t  have been fixed. Thanks to Gerrie Roos for fixing these.\n\t* collectdctl: Fix PUTVAL for data sets with multiple data sources.\n\t  Thanks to Cyril Feraudet for reporting this problem.\n\t* contrib/migrate-4-5.px: Handle to \"df\" to \"df_complex\" conversion\n\t  correctly.\n\t* apcups plugin: Improve the reconnect behavior.\n\t* curl_xml plugin: The \"Host\" setting was silently ignored. Thanks to\n\t  Fabien Wernli for fixing this.\n\t* df plugin: Ignore \"rootfs\" devices under Linux to avoid having them\n\t  reported twice. Thanks to Brune Prémont for fixing this.\n\t* disk plugin: Fix incorrect computation of read and write latency (the\n\t  \"disk_time\" type). Previously, the numbers reported where too small\n\t  by a factor of \"interval\", e.g. when the interval is set to 10\n\t  seconds, the values were too low by a factor of 10. Thanks to Manuel\n\t  Sanmartin for reporting this problem.\n\t* dns plugin: A build issue under Solaris has been fixed. A erroneous\n\t  define that could lead to the reporting of bad data has been fixed by\n\t  Daniel Sutto.\n\t* memcachec plugin: A bug in the configuration handling has been fixed.\n\t  Thanks to Pascal Hofmann for fixing this issue.\n\t* mysql plugin: Fix a bug when registering multiple databases. Thanks\n\t  to Sebastian Harl for fixing this.\n\t* netapp plugin: Correctly close the connection on communication\n\t  errors.\n\t* netlink plugin: The function used to query statistics has been\n\t  changed to be more in line with iproute2's behavior. Thanks to\n\t  \"KIvosak\" for the patch.\n\t* network plugin: Initialization of libgcrypt has been fixed. Thanks to\n\t  Chris Lundquist for his patch.\n\t* oracle plugin: Error messages have been improved.\n\t* ping plugin: Don't enter the exponential back-off mode when\n\t  ping_send() fails. This should make recovery after a network failure\n\t  much faster.\n\t* python plugin: Memory leaks have been fixed. Thanks to Tommie Gannert\n\t  and Sven Trenkel for fixing this.\n\t* redis plugin: Fix a compilation problem on FreeBSD. Thanks to\n\t  \"biancalana\" for the fix.\n\t* rrdtool plugin: Fix an out-of-bounds array access when printing a\n\t  warning message. Thanks to Will Hawkins for fixing this bug.\n\t* snmp plugin: Support for the SNMP_ENDOFMIBVIEW return value has been\n\t  added. Support for more complex / unusual MIBs / subtrees has been\n\t  added. Thanks to Mark Juric to test the changes and point out these\n\t  problems.\n\n2012-04-01, Version 5.0.4\n\t* Build system: Fix the use of a libltdl macro. Thanks to Clemens Lang\n\t  for fixing this. Adresses some issues with building the iptables\n\t  plugin under Gentoo.\n\t* libcollectdclient: A memory leak in the lcc_getval() function has\n\t  been fixed. Thanks to Jason Schmidlapp for finding and fixing this\n\t  issue.\n\t* bind plugin: The use of 'QType\" types has been fixed.\n\t* df plugin: Fixed compiler issue under Mac OS X 10.7.\n\t* conntrack plugin: Support zero as legitimate value. Thanks to Louis\n\t  Opter for his patch.\n\t* memcached plugin: Increased the size of a static buffer, which was\n\t  truncating status messages form memcached. Thanks to Timon for the\n\t  patch.\n\t* network plugin: Forwarding of notifications has been disabled. This\n\t  was a contition not checked for before, which may retult in an\n\t  endless loop.\n\t* processes plugin: Support for process names with spaces has been\n\t  added to the Linux implementation. Thanks to Darrell Bishop for his\n\t  patch.\n\t* perl plugin: A race condition in several callbacks, including log and\n\t  write callbacks, has been fixed. Thanks to \"Rrpv\" for reporting this\n\t  bug.\n\t* snmp plugin: A bug when casting unsigned integers to gauge values has\n\t  been fixed: Unsigned integers would be cast to a signed integer and\n\t  then to a gauge, possibly resulting in a negative value.\n\t* tcpconns plugin: Compilation with newer versions of the FreeBSD\n\t  runtime has been fixed.\n\n2012-02-19, Version 5.0.3\n\t* Build system: Fix problems when building the ipvs and iptables\n\t  plugins. Thanks to Sebastian Harl for his patch. A bashism in the\n\t  version-gen.sh script has been fixed. Thanks to Jo-Philipp Wich for\n\t  his patch.\n\t* csv and rrdtool plugins: Print a more helpful error message when the\n\t  DataDir is a symlink pointing to a non-existing location. Thanks to\n\t  Jonathan Nieder for his patch.\n\t* exec plugin: Fix a problem when using select(2) to read from file\n\t  handles. Thanks to Gerrie Roos for his patch.\n\t* network plugin: An incorrect error message in the handling of the\n\t  \"Interface\" configuration option has been fixed. Thanks to Gerrie\n\t  Roos for his patch.\n\t* oracle plugin: A potential endless loop in the error handling has\n\t  been fixed.\n\t* python plugin: A crash bug in the configuration handling has been\n\t  fixed. Thanks to Sven Trenkel for his patch.\n\t* interfaces plugin: The change which was supposed to ignore \"bogus\"\n\t  interfaces has been reverted, since it ignored legit interfaces, such\n\t  as bonding pseudo-devices as well.\n\n2012-01-21, Version 5.0.2\n\t* curl_xml plugin: Fix handling of file:// and other URLs (which don't\n\t  follow HTTP status codes). Thanks to Fabien Wernli for his patch!\n\t* df plugin: Fix handling of negative \"available\" counts. This can\n\t  occur with some file systems, for example UFS. Thanks to Toni Ylenius\n\t  for his patch.\n\t* interface plugin: \"mac\" interfaces are now ignored on Solaris. These\n\t  pseudo-interfaces occur multiple times, causing warnings. Also switch\n\t  to 64-bit counters on Solaris, improving overflow behavior for\n\t  high-speed interfaces. Thanks to Eddy Geez and Fabien Wernli for\n\t  their patches.\n\t* memory plugin: Account kernel and unused memory under Solaris. Thanks\n\t  to Fabien Wernli for his patch.\n\t* network plugin: A bug in the interaction between the Network plugin\n\t  and filter chains has been fixed: When a filter modified a field such\n\t  as the hostname, subsequent values in the same network packets could\n\t  have ended up using the modified name rather than the original name.\n\t  Thanks to Sebastian Harl for identifying the problem.\n\t* oracle plugin: A memory leak has been fixed in the parameter handling.\n\t* python plugin: A memory leak has been fixed. Thanks to Sven Trenkel\n\t  for fixing this bug!\n\n2011-10-07, Version 5.0.1\n\t* collectd: A mutex leak has been fixed in the meta data code. Thanks\n\t  to Rafal Lesniak for his patch.\n\t* collectd: Compatibility fixes for GCC 4.6 have been applied. Thanks\n\t  to Peter Green for his patch.\n\t* csv plugin: The line buffer size has been increased. Thanks to Colin\n\t  McCabe for the patch.\n\t* curl_json plugin: Don't use the \"parent\" node to build the type\n\t  instance, if it is empty. Compatibility with libyajl 2 has been\n\t  added. Thanks to \"spupykin\" of the Arch Linux project for the initial\n\t  code. Formatting of time has been fixed in the JSON module.\n\t* exec plugin: Fix the timestamp value passed to notification scripts.\n\t  Thanks to Alexander Kovalenko for fixing this.\n\t* iptables plugin: Fix linking with some versions of libiptc.\n\t* irq plugin: Fix support for interrupts under Linux. The old code\n\t  assumed that interrupts have a numeric value -- this is no longer\n\t  true for Linux. Thanks to Bostjan Skufca for implementing this.\n\t* notify_desktop plugin: Compatibility with libnotify 0.7 has been\n\t  added. Thanks to Samuli Suominen for his patch.\n\t* processes plugin: Fix handling of regular expressions containing\n\t  spaces. Thanks for Sebastian Harl for fixing this.\n\t* rrdtool, rrdcached plugins: Improve precision of the XFF parameter.\n\t  Previously, values like 0.999 would have been rounded to 1.0. Thanks\n\t  to Francois-Xavier Bourlet for fixing this.\n\t* varnish plugin: Fix data type handling of some metrics. Some values\n\t  were submitted as gauge even though they were derives.\n\t* Various plugin: Set a multi-threading flag in libcurl. Thanks to Mike\n\t  Flisher for the fix.\n\n2011-03-28, Version 5.0.0\n\t* collectd: The \"FQDNLookup\" option is now enabled by default.\n\t* collectd: The internal representation of time has been changed to\n\t  allow a higher accuracy than one second.\n\t* collectdcmd: This new command line utility can send various commands\n\t  to collectd using the UnixSock plugin. Thanks to Håkon Dugstad\n\t  Johnsen and Sebastian Harl for their code.\n\t* collectd-nagios: The \"-m\" option has been implemented (treat NaNs as\n\t  critical).\n\t* collectd-tg: Traffic generator creating bogus network traffic\n\t  compatible to the Network plugin. This utility can be used to\n\t  stress-test new write plugins and collectd in general.\n\t* libcollectdclient: Creating and sending network packets has been\n\t  added to the collectd client library.\n\t* All data sets: The data source name of all data sets with exactly\n\t  one data source has been changed to \"value\".\n\t* All plugins: All \"counter\" data sources have been converted to\n\t  \"derive\" data sources. All plugins now use \"derive\" by default, but\n\t  plugins such as the network plugin can still handle \"counter\", of\n\t  course. The minimum value of all derive data sources is zero, the\n\t  maximum value is unspecified.\n\t* amqp plugin: The new AMQP plugin can send data to and receive data\n\t  from an AMQP broker. Thanks to Sebastien Pahl for his code.\n\t* apache plugin: Backwards compatibility code has been removed.\n\t  Support for the IBM HTTP Server has been added. Thanks to Manuel\n\t  Luis Sanmartín Rozada for his patch.\n\t* contextswitch plugin: Support for sysctlbyname(3) has been added.\n\t  Thanks to Kimo Rosenbaum for his patch.\n\t* df plugin: The default behavior has been changed to be equivalent to\n\t  the \"ReportReserved\" behavior of v4.\n\t* dns plugin: Improved RFC 1035 name parsing has been imported from\n\t  \"dnstop\".\n\t* exec plugin: Backwards compatibility code has been removed.\n\t* GenericJMX plugin: The \"InstancePrefix\" option has been added to\n\t  \"Connection\" blocks.\n\t* hddtemp plugin: The \"TranslateDevicename\" config option has been\n\t  removed.\n\t* interface plugin: Use the \"plugin instance\" to store the interface\n\t  value.\n\t* libvirt plugin: The \"InterfaceFormat\" option has been added. Thanks\n\t  to Ruben Kerkhof for his patch.\n\t* lpar plugin: New plugins for \"logical partitions\", a virtualization\n\t  technique of POWER CPUs. Thanks to Aurélien Reynaud for his code and\n\t  patience.\n\t* modbus plugin: Support for libmodbus 2.9.2 has been added and the\n\t  license has been changed to LGPLv2.1.\n\t* mysql plugin: Backwards compatibility code has been removed. The\n\t  data sets used have been improved.\n\t* network plugin: The default buffer size has been increased to\n\t  1452 bytes.\n\t* perl plugin: Backwards compatibility code has been removed.\n\t* postgresql plugin: Backwards compatibility code has been removed.\n\t* redis plugin: Plugin for collecting statistics from Redis, a key-\n\t  value store, has been added. Thanks to Andres J. Diaz for his code.\n\t* swap plugin: Implement collection of physical and virtual memory\n\t  statistics under Solaris. The new default is collecting physical\n\t  memory. Thanks to Aurélien Reynaud for his patches.\n\t* threshold plugin: The threshold configuration has been moved into\n\t  this separate plugin.\n\t* unixsock plugin: The \"DeleteSocket\" option has been added.\n\t* varnish plugin: The new Varnish plugin reads statistics from\n\t  Varnish, a web accelerator. Thanks to Jérôme Renard and Marc\n\t  Fournier for their contributions.\n\t* write_redis: New plugin for writing data to Redis, a key-value\n\t  store.\n\t* zfs_arc plugin: The data sets have been replaced by more elegant\n\t  alternatives.\n\t* v5upgrade target: Target for converting v4 data sets to the v5\n\t  schema.\n\n2013-04-07, Version 4.10.9\n\t* Build system: A bad interaction between the Java detection code and\n\t  libltdl has been fixed. Thanks to Dave Cottlehuber for his patch.\n\t* apache, ascent, bind, curl, curl_json, curl_xml, nginx and\n\t  write_http plugins: Portability fixes, protection from infinite\n\t  redirect loops, improved error handling and incorrect dereferences\n\t  have been fixed. Most of these are related to the cURL library.\n\t  Thanks to Dan Fandrich for his patches.\n\t* logfile plugin: Flush the output file handle. This works around\n\t  caching when logging to STDOUT and redirecting into a file. Thanks\n\t  to Nathan Huff for the patch.\n\t* network plugin: Build issues under FreeBSD and initialization have\n\t  been fixed. Thanks to Ed Schouten for his patch.\n\t* mysql plugin: Fix a memory leak in the error handling. Thanks to\n\t  Tomas Doran for his patch.\n\t* thermal plugin: The initialization of dispatched value lists has\n\t  been fixed. Thanks to Markus Knetschke for his patch.\n\t* unixsock plugin: Parsing of options with an underscore, e.g.\n\t  \"plugin_instance\" has been fixed. Thanks to Tommie Gannert for his\n\t  patch.\n\n2012-11-11, Version 4.10.8\n\t* collectd: Create new directories with mode 0777 and let umask remove\n\t  unwanted permission bits.\n\t* collectd: Build issues have been fixed.\n\t* collectd: An incorrect assertion has been fixed in some common code\n\t  for Solaris. This should resolve pseudo-random assertion failures\n\t  under Solaris. Thanks to Jeff Blane for his help debugging this.\n\t* collectd: A couple of memory leaks through PThread thread attributes\n\t  have been fixed. Thanks to Gerrie Roos for fixing these.\n\t* apcups plugin: Improve the reconnect behavior.\n\t* df plugin: Ignore \"rootfs\" devices under Linux to avoid having them\n\t  reported twice. Thanks to Brune Prémont for fixing this.\n\t* disk plugin: Fix incorrect computation of read and write latency (the\n\t  \"disk_time\" type). Previously, the numbers reported where too small\n\t  by a factor of \"interval\", e.g. when the interval is set to 10\n\t  seconds, the values were too low by a factor of 10. Thanks to Manuel\n\t  Sanmartin for reporting this problem.\n\t* dns plugin: A build issue under Solaris has been fixed. A erroneous\n\t  define that could lead to the reporting of bad data has been fixed by\n\t  Daniel Sutto.\n\t* memcachec plugin: A bug in the configuration handling has been fixed.\n\t  Thanks to Pascal Hofmann for fixing this issue.\n\t* netapp plugin: Correctly close the connection on communication\n\t  errors.\n\t* netlink plugin: The function used to query statistics has been\n\t  changed to be more in line with iproute2's behavior. Thanks to\n\t  \"KIvosak\" for the patch.\n\t* network plugin: Initialization of libgcrypt has been fixed. Thanks to\n\t  Chris Lundquist for his patch.\n\t* oracle plugin: Error messages have been improved.\n\t* ping plugin: Don't enter the exponential back-off mode when\n\t  ping_send() fails. This should make recovery after a network failure\n\t  much faster.\n\t* python plugin: Memory leaks have been fixed. Thanks to Tommie Gannert\n\t  and Sven Trenkel for fixing this.\n\t* rrdtool plugin: Fix an out-of-bounds array access when printing a\n\t  warning message. Thanks to Will Hawkins for fixing this bug.\n\t* snmp plugin: Support for the SNMP_ENDOFMIBVIEW return value has been\n\t  added. Support for more complex / unusual MIBs / subtrees has been\n\t  added. Thanks to Mark Juric to test the changes and point out these\n\t  problems.\n\n2012-04-01, Version 4.10.7\n\t* Build system: Fix the use of a libltdl macro. Thanks to Clemens Lang\n\t  for fixing this. Adresses some issues with building the iptables\n\t  plugin under Gentoo.\n\t* libcollectdclient: A memory leak in the lcc_getval() function has\n\t  been fixed. Thanks to Jason Schmidlapp for finding and fixing this\n\t  issue.\n\t* bind plugin: The use of 'QType\" types has been fixed.\n\t* df plugin: Fixed compiler issue under Mac OS X 10.7.\n\t* conntrack plugin: Support zero as legitimate value. Thanks to Louis\n\t  Opter for his patch.\n\t* memcached plugin: Increased the size of a static buffer, which was\n\t  truncating status messages form memcached. Thanks to Timon for the\n\t  patch.\n\t* network plugin: Forwarding of notifications has been disabled. This\n\t  was a contition not checked for before, which may retult in an\n\t  endless loop.\n\t* processes plugin: Support for process names with spaces has been\n\t  added to the Linux implementation. Thanks to Darrell Bishop for his\n\t  patch.\n\t* perl plugin: A race condition in several callbacks, including log and\n\t  write callbacks, has been fixed. Thanks to \"Rrpv\" for reporting this\n\t  bug.\n\t* snmp plugin: A bug when casting unsigned integers to gauge values has\n\t  been fixed: Unsigned integers would be cast to a signed integer and\n\t  then to a gauge, possibly resulting in a negative value.\n\t* tcpconns plugin: Compilation with newer versions of the FreeBSD\n\t  runtime has been fixed.\n\n2012-02-19, Version 4.10.6\n\t* Build system: Fix problems when building the ipvs and iptables\n\t  plugins. Thanks to Sebastian Harl for his patch. A bashism in the\n\t  version-gen.sh script has been fixed. Thanks to Jo-Philipp Wich for\n\t  his patch.\n\t* csv and rrdtool plugins: Print a more helpful error message when the\n\t  DataDir is a symlink pointing to a non-existing location. Thanks to\n\t  Jonathan Nieder for his patch.\n\t* exec plugin: Fix a problem when using select(2) to read from file\n\t  handles. Thanks to Gerrie Roos for his patch.\n\t* network plugin: An incorrect error message in the handling of the\n\t  \"Interface\" configuration option has been fixed. Thanks to Gerrie\n\t  Roos for his patch.\n\t* oracle plugin: A potential endless loop in the error handling has\n\t  been fixed.\n\t* python plugin: A crash bug in the configuration handling has been\n\t  fixed. Thanks to Sven Trenkel for his patch.\n\t* interfaces plugin: The change which was supposed to ignore \"bogus\"\n\t  interfaces has been reverted, since it ignored legit interfaces, such\n\t  as bonding pseudo-devices as well.\n\n2012-01-21, Version 4.10.5\n\t* curl_xml plugin: Fix handling of file:// and other URLs (which don't\n\t  follow HTTP status codes). Thanks to Fabien Wernli for his patch!\n\t* df plugin: Fix handling of negative \"available\" counts. This can\n\t  occur with some file systems, for example UFS. Thanks to Toni Ylenius\n\t  for his patch.\n\t* interface plugin: \"mac\" interfaces are now ignored on Solaris. These\n\t  pseudo-interfaces occur multiple times, causing warnings. Also switch\n\t  to 64-bit counters on Solaris, improving overflow behavior for\n\t  high-speed interfaces. Thanks to Eddy Geez and Fabien Wernli for\n\t  their patches.\n\t* memory plugin: Account kernel and unused memory under Solaris. Thanks\n\t  to Fabien Wernli for his patch.\n\t* network plugin: A bug in the interaction between the Network plugin\n\t  and filter chains has been fixed: When a filter modified a field such\n\t  as the hostname, subsequent values in the same network packets could\n\t  have ended up using the modified name rather than the original name.\n\t  Thanks to Sebastian Harl for identifying the problem.\n\t* oracle plugin: A memory leak has been fixed in the parameter handling.\n\t* python plugin: A memory leak has been fixed. Thanks to Sven Trenkel\n\t  for fixing this bug!\n\n2011-10-14, Version 4.10.4\n\t* collectd: A mutex leak has been fixed in the meta data code. Thanks\n\t  to Rafal Lesniak for his patch.\n\t* collectd: Compatibility fixes for GCC 4.6 have been applied. Thanks\n\t  to Peter Green for his patch.\n\t* csv plugin: The line buffer size has been increased. Thanks to Colin\n\t  McCabe for the patch.\n\t* curl_json plugin: Don't use the \"parent\" node to build the type\n\t  instance, if it is empty. Compatibility with libyajl 2 has been\n\t  added. Thanks to \"spupykin\" of the Arch Linux project for the initial\n\t  code.\n\t* iptables plugin: Fix linking with some versions of libiptc.\n\t* irq plugin: Fix support for interrupts under Linux. The old code\n\t  assumed that interrupts have a numeric value -- this is no longer\n\t  true for Linux. Thanks to Bostjan Skufca for implementing this.\n\t* notify_desktop plugin: Compatibility with libnotify 0.7 has been\n\t  added. Thanks to Samuli Suominen for his patch.\n\t* processes plugin: Fix handling of regular expressions containing\n\t  spaces. Thanks for Sebastian Harl for fixing this.\n\t* rrdtool, rrdcached plugins: Improve precision of the XFF parameter.\n\t  Previously, values like 0.999 would have been rounded to 1.0. Thanks\n\t  to Francois-Xavier Bourlet for fixing this.\n\t* Various plugin: Set a multi-threading flag in libcurl. Thanks to Mike\n\t  Flisher for the fix.\n\n2011-03-26, Version 4.10.3\n\t* Documentation: Several updates and additions. Thanks to Sebastian Harl.\n\t* collectd: Build issues (compiler warnings) have been fixed. Thanks to\n\t  Bruno Prémont.\n\t* collectd: Threshold subsection: Handling of NAN values in the\n\t  percentage calculation has been fixed.\n\t* collectd, java plugin, ntpd plugin: Several diagnostic messages have\n\t  been improved.\n\t* curl_json plugin: Handling of arrays has been fixed.\n\t* libvirt plugin: A bug in reading the virtual CPU statistics has been\n\t  fixed. Thanks to “JLPC” for reporting this problem.\n\t* modbus plugin: Compatibility with libmodbus 2.0.3 has been restored.\n\t* processes plugin: Potentially erroneous behavior has been fixed in an\n\t  error handling case.\n\t* python plugin: Fix dispatching of values from Python scripts to\n\t  collectd. Thanks to Gregory Szorc for finding and fixing this\n\t  problem.\n\n2010-11-27, Version 4.10.2\n\t* Documentation: Various documentation fixes.\n\t* collectd: If including one configuration file fails, continue with\n\t  the rest of the configuration if possible.\n\t* collectd: Fix a bug in the read function scheduling. In rare cases\n\t  read functions may not have been called as often as requested.\n\t* collectd: Concurrency issues with errno(3) under AIX have been\n\t  fixed: A thread-safe version of errno has to be requested under AIX.\n\t  Thanks to Aurélien Reynaud for his patch.\n\t* collectd: A left-over hard-coded 2 has been replaced by the\n\t  configurable timeout value.\n\t* curl, memcachec, tail plugins: Fix handling of \"DERIVE\" data\n\t  sources. Matching the end of a string has been improved; thanks to\n\t  Sebastian Harl for the patch.\n\t* curl_json plugin: Fix a problem when parsing 64bit integers. Reading\n\t  JSON data from non-HTTP sources has been fixed.\n\t* netapp plugin: Pass the interval setting to the dispatch function.\n\t  Restore compatibility to NetApp Release 7.3. Thanks to Sven Trenkel\n\t  for the patch.\n\t* network plugin: Be less verbose about unchecked signatures, in order\n\t  to prevent spamming the logs.\n\t* notify_email plugin: Concurrency problems have been fixed.\n\t* python plugin: Set \"sys.argv\", since many scripts don't expect that\n\t  it may not be set. Thanks to Sven Trenkel for the patch.\n\t* rrdtool, rrdcached plugin: Fix a too strict assertion when creating\n\t  RRD files.\n\t* swap plugin: A bug which lead to incorrect I/O values has been\n\t  fixed.\n\t* value match: A minor memory leak has been fixed. Thanks to Sven\n\t  Trenkel for the patch.\n\n2010-07-09, Version 4.10.1\n\t* Build system: Checking for \"strtok_r\" under Solaris has been fixed.\n\t* Portability: Fixes for Solaris 8 have been applied. Thanks to\n\t  Alexander Wuerstlein for his patch.\n\t* collectd: The shutdown speed when terminating the read threads has\n\t  been improved.\n\t* libcollectdclient: A format error in the PUTVAL command has been\n\t  removed. Thanks to Johan Van den Brande for fixing this.\n\t* df plugin: An error message shown when \"cu_mount_getlist\" fails has\n\t  been added.\n\t* processes plugin: Missing initialization code for IO members of a\n\t  struct has been added. Thanks to Aurélien Reynaud for fixing this.\n\t* python plugin: Memory leaks in the write and notification callbacks\n\t  have been fixed. A possible crash when the plugin was loaded but not\n\t  configured has been fixed. Thanks to Sven Trenkel for his patches.\n\t* snmp plugin: Verbosity with regard to unknown ASN types has been\n\t  increased. A build problem on PowerPC and ARM processors has been\n\t  fixed by Aurélien Reynaud; thanks!\n\t* powerdns plugin: Compatibility changes for PowerDNS 2.9.22 and above\n\t  have been applied. Thanks to Luke Heberling for his changes.\n\n2010-05-01, Version 4.10.0\n\t* collectd: JSON output now includes the \"dstypes\" and \"dsnames\"\n\t  fields. This makes it easier for external applications to interpret\n\t  the data. Thanks to Chris Buben for his work.\n\t* collectd: The new \"Timeout\" option can be used to specify a\n\t  \"timeout\" for missing values. This is used in the threshold checking\n\t  code to detect missing values. Thanks to Andrés J. Díaz for the\n\t  patch.\n\t* apache plugin: Support for \"IdleWorkers\" (Apache 1.*: \"IdleServers\")\n\t  has been added.\n\t* curl plugin: The new \"ExcludeRegex\" allows to easily exclude certain\n\t  lines from the match.\n\t* curl_xml plugin: This new plugin allows to read XML files using cURL\n\t  and extract metrics included in the files. Thanks to Amit Gupta for\n\t  his work.\n\t* filecount plugin: The new \"IncludeHidden\" option allows to include\n\t  \"hidden\" files and directories in the statistics. Thanks to Vaclav\n\t  Malek for the patch.\n\t* logfile plugin: The new \"PrintSeverity\" option allows to include the\n\t  severity of a message in the output. Thanks to Clément Stenac for\n\t  his patch.\n\t* memcachec plugin: The new \"ExcludeRegex\" allows to easily exclude\n\t  certain lines from the match.\n\t* modbus plugin: This new plugin allows to read registers from\n\t  Modbus-TCP enabled devices.\n\t* network plugin: The new \"Interface\" option allows to set the\n\t  interface to be used for multicast and, if supported, unicast\n\t  traffic. Thanks to Max Henkel for his work.\n\t* openvpn plugin: The \"CollectUserCount\" and \"CollectIndividualUsers\"\n\t  options allow more detailed control over how to report sessions of\n\t  multiple users. Thanks to Fabian Schuh for his work.\n\t* pinba plugin: This new plugin receives timing information from the\n\t  Pinba PHP extension, which can be used for profiling PHP code and\n\t  webserver performance. Thanks to Phoenix Kayo for his work.\n\t* ping plugin: The new \"MaxMissed\" allows to re-resolve a hosts\n\t  address when it doesn't reply to a number of ping requests. Thanks\n\t  to Stefan Völkel for the patch.\n\t* postgresql plugin: The \"Interval\" config option has been added. The\n\t  plugin has been relicensed under the 2-clause BSD license. Thanks to\n\t  Sebastian Harl for his work.\n\t* processes plugin: Support for \"code\" and \"data\" virtual memory sizes\n\t  has been added. Thanks to Clément Stenac for his patch.\n\t* python plugin: Support for Python 3 has been implemented. Thanks to\n\t  Sven Trenkel for his work.\n\t* routeros plugin: Support for collecting CPU load, memory usage, used\n\t  and free disk space, sectors written and number of bad blocks from\n\t  MikroTik devices has been added.\n\t* swap plugin: Support for Linux < 2.6 has been added. Thanks to Lorin\n\t  Scraba for his patch.\n\t* tail plugin: The new \"ExcludeRegex\" allows to easily exclude certain\n\t  lines from the match. Thanks to Peter Warasin for his patch.\n\t* write_http plugin: The \"StoreRates\" option has been added. Thanks to\n\t  Paul Sadauskas for his patch.\n\t* regex match: The \"Invert\" option has been added. Thanks to Julien\n\t  Ammous for his patch.\n\n2011-03-26, Version 4.9.5\n\t* Documentation: Several updates and additions. Thanks to Sebastian Harl.\n\t* collectd: Build issues (compiler warnings) have been fixed. Thanks to\n\t  Bruno Prémont.\n\t* collectd: Threshold subsection: Handling of NAN values in the\n\t  percentage calculation has been fixed.\n\t* collectd, java plugin, ntpd plugin: Several diagnostic messages have\n\t  been improved.\n\t* libvirt plugin: A bug in reading the virtual CPU statistics has been\n\t  fixed. Thanks to “JLPC” for reporting this problem.\n\t* processes plugin: Potentially erroneous behavior has been fixed in an\n\t  error handling case.\n\t* python plugin: Fix dispatching of values from Python scripts to\n\t  collectd. Thanks to Gregory Szorc for finding and fixing this\n\t  problem.\n\n2010-11-27, Version 4.9.4\n\t* Documentation: Various documentation fixes.\n\t* collectd: If including one configuration file fails, continue with\n\t  the rest of the configuration if possible.\n\t* collectd: Fix a bug in the read function scheduling. In rare cases\n\t  read functions may not have been called as often as requested.\n\t* collectd: Concurrency issues with errno(3) under AIX have been\n\t  fixed: A thread-safe version of errno has to be requested under AIX.\n\t  Thanks to Aurélien Reynaud for his patch.\n\t* curl, memcachec, tail plugins: Fix handling of \"DERIVE\" data\n\t  sources. Matching the end of a string has been improved; thanks to\n\t  Sebastian Harl for the patch.\n\t* curl_json plugin: Fix a problem when parsing 64bit integers. Reading\n\t  JSON data from non-HTTP sources has been fixed.\n\t* netapp plugin: Pass the interval setting to the dispatch function.\n\t  Restore compatibility to NetApp Release 7.3. Thanks to Sven Trenkel\n\t  for the patch.\n\t* network plugin: Be less verbose about unchecked signatures, in order\n\t  to prevent spamming the logs.\n\t* notify_email plugin: Concurrency problems have been fixed.\n\t* python plugin: Set \"sys.argv\", since many scripts don't expect that\n\t  it may not be set. Thanks to Sven Trenkel for the patch.\n\t* rrdtool, rrdcached plugin: Fix a too strict assertion when creating\n\t  RRD files.\n\t* value match: A minor memory leak has been fixed. Thanks to Sven\n\t  Trenkel for the patch.\n\n2010-07-09, Version 4.9.3\n\t* Build system: Checking for \"strtok_r\" under Solaris has been fixed.\n\t* Portability: Fixes for Solaris 8 have been applied. Thanks to\n\t  Aurélien Reynaud and Alexander Wuerstlein for their patches.\n\t* collectd: The shutdown speed when terminating the read threads has\n\t  been improved.\n\t* collectd-nagios: The format of the performance data has been fixed.\n\t* libcollectdclient: A format error in the PUTVAL command has been\n\t  removed. Thanks to Johan Van den Brande for fixing this.\n\t* df plugin: An error message shown when \"cu_mount_getlist\" fails has\n\t  been added.\n\t* processes plugin: Missing initialization code for IO members of a\n\t  struct has been added. Thanks to Aurélien Reynaud for fixing this.\n\t* python plugin: Memory leaks in the write and notification callbacks\n\t  have been fixed. A possible crash when the plugin was loaded but not\n\t  configured has been fixed. Thanks to Sven Trenkel for his patches.\n\t* rrdcached plugin: A build issue has been resolved. Thanks to\n\t  Thorsten von Eicken for the patch.\n\t* snmp plugin: Verbosity with regard to unknown ASN types has been\n\t  increased. A build problem on PowerPC and ARM processors has been\n\t  fixed by Aurélien Reynaud; thanks!\n\t* powerdns plugin: Compatibility changes for PowerDNS 2.9.22 and above\n\t  have been applied. Thanks to Luke Heberling for his changes.\n\n2010-04-22, Version 4.9.2\n\t* Build system, various plugins: Fixes for AIX compatibility have been\n\t  added. Thanks to Manuel Sanmartin for his patches.\n\t* Build system: Checking for \"nanosleep\" on old Solaris machines has\n\t  been fixed. Thanks to Vincent McIntyre and Sebastian Harl for\n\t  figuring out a way to make this work.\n\t* collectd: Append a newline to messages written to STDERR.\n\t* collectd: Serialization of NANs in JSON format has been fixed.\n\t  Thanks to Chris Buben for pointing out the resulting syntax error.\n\t* collectd: Checks whether a \"sleep\" returned early have been added;\n\t  the cases are now handled correctly. Thanks to Michael Stapelberg\n\t  for the patch.\n\t* collectd: Continue reading files in a directory when parsing one\n\t  file fails.\n\t* apache plugin: Collection of the number of active connections has\n\t  been fixed for Apache 2.*.\n\t* contextswitch plugin: Handle large counter/derive values correctly.\n\t  Thanks to Martin Merkel for reporting the bug.\n\t* exec plugin: Error messages have been improved. The \"running\" flag\n\t  is now cleared correctly when forking a child fails.\n\t* iptables plugin: Fix a violation of aliasing rules. This resolves a\n\t  warning / error with new GCC versions. Thanks to Jan Engelhardt for\n\t  the work-around.\n\t* java plugin: The Java API files are now packaged into a .jar file.\n\t  Thanks to Amit Gupta for his patch.\n\t* network plugin: Fix a segmentation fault when receiving packets with\n\t  an unknown data source type.\n\t* network plugin: A memory leak when receiving encrypted network\n\t  packets has been fixed.\n\t* openvpn plugin: Fix naming schema when reading \"MULTI1\" type status\n\t  files.\n\t* oracle plugin: Fix checking for lost connections and reconnect in\n\t  this case. Thanks to Sven Trenkel for pointing out the problem.\n\t* unixsock plugin: A memory leak in the \"LISTVAL\" command has been\n\t  fixed. Thanks to Peter Warasin for pointing it out.\n\t* write_http plugin: Use the \"any\" authentication schema. This used to\n\t  be \"digest\". Thanks to Paul Sadauskas for the patch.\n\n2010-01-14, Version 4.9.1\n\t* Documentation: Some manpage fixes.\n\t* Default config: Added sample configuration for missing plugins.\n\t* apache plugin: Fix a segmentation fault in the config handling of\n\t  VerifyPeer / VerifyHost. Thanks to \"plazmus\" for his or her patch.\n\t* processes plugin: Fix handling of derive data sources.\n\t* rrdtool plugin: Fix a bug with random write timeouts. Due to an\n\t  incorrect initialization some files may be suspended basically\n\t  indefinitely. After flushing the files they were written regularly\n\t  again.\n\t* routeros plugin: Use the node name for the \"host\" field.\n\t* Monitorus.pm: Put the plugin into the \"Collectd::Plugins\" namespace.\n\t* Perl bindings: Fix a warning that was printed when building\n\t  debugging output.\n\n2009-12-21, Version 4.9.0\n\t* contextswitch plugin: The new ContextSwitch plugin gathers the\n\t  number of context switches done by the CPU. Thanks to Patrik\n\t  Weiskircher for the patch.\n\t* cpu plugin: Support for SMP (multiple processors) under FreeBSD has\n\t  been added. Thanks to Doug MacEachern for the patch.\n\t* curl plugin: The “MeasureResponseTime” option has been added. Thanks\n\t  to Aman Gupta for the patch.\n\t* df plugin: Collecting the inode count and reserved space has been\n\t  added. Thanks to Patrik Weiskircher for the patch.\n\t* exec plugin: The environment variables “COLLECTD_INTERVAL” and\n\t  “COLLECTD_HOSTNAME” are now set before executing the application.\n\t* Monitorus plugin: This Perl-based plugin to query statistics from\n\t  mon.itor.us has been added. Thanks to Jeff Green for the patch.\n\t* netapp plugin: New plugin to collect statistics from NetApp filers.\n\t  Thanks to Sven Trenkel of the noris network AG for the patch.\n\t* network plugin: Statistics collection about the plugin itself has\n\t  been implemented.\n\t* openvpn plugin: Add support for more versions of the “status file”.\n\t  Thanks to Marco Chiappero for the patch.\n\t* OpenVZ plugin: This Perl-based plugin to gather OpenVZ statistics\n\t  has been added. Thanks to Jonathan Kolb for the patch.\n\t* ping plugin: The config options \"SourceAddress\" and \"Device\"\n\t  have been added. Thanks to Sebastian Harl for the patch.\n\t* processes plugin: Collection of IO-metrics has been added. Thanks to\n\t  Andrés J. Díaz for the patch.\n\t* python plugin: The new Python plugin integrates a Python interpreter\n\t  into collectd and allows to execute plugins written in the scripting\n\t  language. Thanks to Sven Trenkel for his work.\n\t* routeros plugin: The new RouterOS plugin queries interface and\n\t  wireless registration statistics from RouterOS.\n\t* Various plugins: AIX support has been added to the cpu, disk,\n\t  interface, load, memory, processes, and swap plugins. Thanks to\n\t  Manuel Sanmartin for his patches.\n\t* hashed match: This match for simple load balancing and redundant\n\t  storage has been added.\n\t* scale target: This target to scale (multiply) values by an arbitrary\n\t  value has been added.\n\n2010-04-22, Version 4.8.5\n\t* collectd: Append a newline to messages written to STDERR.\n\t* network plugin: Fix a segmentation fault when receiving packets with\n\t  an unknown data source type.\n\n2010-04-07, Version 4.8.4\n\t* Build system, various plugins: Fixes for AIX compatibility have been\n\t  added. Thanks to Manuel Sanmartin for his patches.\n\t* Build system: Checking for \"nanosleep\" on old Solaris machines has\n\t  been fixed. Thanks to Vincent McIntyre and Sebastian Harl for\n\t  figuring out a way to make this work.\n\t* collectd: Serialization of NANs in JSON format has been fixed.\n\t  Thanks to Chris Buben for pointing out the resulting syntax error.\n\t* collectd: Checks whether a \"sleep\" returned early have been added;\n\t  the cases are now handled correctly. Thanks to Michael Stapelberg\n\t  for the patch.\n\t* collectd: Continue reading files in a directory when parsing one\n\t  file fails.\n\t* apache plugin: Collection of the number of active connections has\n\t  been fixed for Apache 2.*.\n\t* exec plugin: Error messages have been improved. The \"running\" flag\n\t  is now cleared correctly when forking a child fails.\n\t* iptables plugin: Fix a violation of aliasing rules. This resolves a\n\t  warning / error with new GCC versions. Thanks to Jan Engelhardt for\n\t  the work-around.\n\t* java plugin: The Java API files are now packaged into a .jar file.\n\t  Thanks to Amit Gupta for his patch.\n\t* network plugin: A memory leak when receiving encrypted network\n\t  packets has been fixed.\n\t* oracle plugin: Fix checking for lost connections and reconnect in\n\t  this case. Thanks to Sven Trenkel for pointing out the problem.\n\t* unixsock plugin: A memory leak in the \"LISTVAL\" command has been\n\t  fixed. Thanks to Peter Warasin for pointing it out.\n\t* write_http plugin: Use the \"any\" authentication schema. This used to\n\t  be \"digest\". Thanks to Paul Sadauskas for the patch.\n\n2010-01-14, Version 4.8.3\n\t* Documentation: Some manpage fixes.\n\t* rrdtool plugin: Fix a bug with random write timeouts. Due to an\n\t  incorrect initialization some files may be suspended basically\n\t  indefinitely. After flushing the files they were written regularly\n\t  again.\n\n2009-12-18, Version 4.8.2\n\t* Build system, java plugin: Don't use “find -L” to search for Java\n\t  headers, because it's a GNU extension.\n\t* Build system: Support for parallel builds has been improved. Thanks\n\t  Sebastian Harl and Stefan Völkel for looking into this.\n\t* collectd: Print error messages to STDERR if no log plugin has been\n\t  loaded.\n\t* genericjmx plugin: Close and re-open the connection upon I/O-errors.\n\t* gmond plugin: Fix typos which caused syntax errors.\n\t* memory plugin: Handling of >4 Gbyte of memory has been fixed.\n\t* network plugin: The license has been changed to LGPL 2.1.\n\t* oracle plugin: Reconnect to the database if the connection dies.\n\t* rrdcached plugin: Work-around for a bug in RRDtool 1.4rc2 has been\n\t  added.\n\t* snmp plugin: Handling of negative values has been fixed. Strings\n\t  containing control characters are now interpreted as hex-strings.\n\t* unixsock plugin: A memory leak in the LISTVAL command has been\n\t  fixed. Thanks to Ben Knight for his patch.\n\n2009-10-04, Version 4.8.1\n\t* Build system: Issues when building the iptables plugin have been\n\t  fixed.\n\t* exec plugin: Clear the signal block mask before calling exec(2).\n\t* perl plugin: Declare the “environ” variable. This solves build\n\t  issues on some platforms.\n\t* processes plugin: Remove unnecessary call of realloc(3). Thanks to\n\t  Andrés J. Díaz for the patch.\n\t* unixsock plugin: Fix a (well hidden) race condition related to file\n\t  descriptor handling.\n\n2009-09-13, Version 4.8.0\n\t* collectd: Two new data source types, “DERIVE” and “ABSOLUTE”, have\n\t  been added. “DERIVE” can be used for counters that are reset\n\t  occasionally. Thanks to Mariusz Gronczewski for implementing this.\n\t* thresholds: The advanced threshold options “Percentage”, “Hits”, and\n\t  “Hysteresis” have been added. Thanks to Andrés J. Díaz for his\n\t  patches.\n\t* curl_json plugin: The new cURL-JSON plugin reads JSON files using\n\t  the cURL library and parses the contents according to user\n\t  specification. Among other things, this allows to read statistics\n\t  from a CouchDB instance. Thanks to Doug MacEachern for the patch.\n\t* df plugin: Using the new “ReportByDevice” option the device rather\n\t  than the mount point can be used to identify partitions. Thanks to\n\t  Paul Sadauskas for the patch.\n\t* dns plugin: The possibility to ignore numeric QTypes has been added.\n\t  Thanks to Mirko Buffoni for the patch.\n\t* GenericJMX plugin: The new, Java-based GenericJMX plugin allows to\n\t  query arbitrary data from a Java process using the “Java Management\n\t  Extensions” (JMX).\n\t* madwifi plugin: The new MadWifi plugin collects information about\n\t  Atheros wireless LAN chipsets from the MadWifi driver. Thanks to\n\t  Ondrej Zajicek for his patches.\n\t* network plugin: The receive- and send-buffer-sizes have been made\n\t  configurable, allowing for bigger and smaller packets. Thanks to\n\t  Aman Gupta for the patch.\n\t* olsrd plugin: The new OLSRd plugin queries routing information from\n\t  the “Optimized Link State Routing” daemon.\n\t* rrdtool plugin: A new configuration option allows to define a random\n\t  write delay when writing RRD files. This spreads the load created by\n\t  writing RRD files more evenly. Thanks to Mariusz Gronczewski for the\n\t  patch.\n\t* swap plugin: The possibility to collect swapped in/out pages has\n\t  been added to the Swap plugin. Thanks to Stefan Völkel for the\n\t  patch.\n\t* tokyotyrant plugin: The new TokyoTyrant plugin reads the number of\n\t  records and file size from a running Tokyo Tyrant server. Thanks to\n\t  Paul Sadauskas for the patch.\n\t* unixsock plugin: Add the “GETTHRESHOLD” command. This command can be\n\t  used to query the thresholds configured for a particular identifier.\n\t* write_http plugin: The new Write HTTP plugin sends the values\n\t  collected by collectd to a web-server using HTTP POST requests.\n\t  Thanks to Paul Sadauskas for the patch.\n\t* zfs_arc plugin: The new ZFS ARC plugin collects information about\n\t  the “Adaptive Replacement Cache” (ARC) of the “Zeta File-System”\n\t  (ZFS). Thanks to Anthony Dewhurst for the patch.\n\t* empty_counter match: The new Empty Counter match matches value\n\t  lists, where at least one data source is of type COUNTER and the\n\t  counter value of all counter data sources is zero.\n\n2009-12-18, Version 4.7.5\n\t* Build system, java plugin: Don't use “find -L” to search for Java\n\t  headers, because it's a GNU extension.\n\t* Build system: Support for parallel builds has been improved. Thanks\n\t  Sebastian Harl and Stefan Völkel for looking into this.\n\t* collectd: Print error messages to STDERR if no log plugin has been\n\t  loaded.\n\t* memory plugin: Handling of >4 Gbyte of memory has been fixed.\n\t* network plugin: The license has been changed to LGPL 2.1.\n\t* oracle plugin: Reconnect to the database if the connection dies.\n\t* rrdcached plugin: Work-around for a bug in RRDtool 1.4rc2 has been\n\t  added.\n\t* snmp plugin: Handling of negative values has been fixed. Strings\n\t  containing control characters are now interpreted as hex-strings.\n\t* unixsock plugin: A memory leak in the LISTVAL command has been\n\t  fixed. Thanks to Ben Knight for his patch.\n\n2009-10-03, Version 4.7.4\n\t* Build system: Issues when building the iptables plugin have been\n\t  fixed.\n\t* exec plugin: Clear the signal block mask before calling exec(2).\n\t* perl plugin: Declare the “environ” variable. This solves build\n\t  issues on some platforms.\n\t* processes plugin: Remove unnecessary call of realloc(3). Thanks to\n\t  Andrés J. Díaz for the patch.\n\t* unixsock plugin: Fix a (well hidden) race condition related to file\n\t  descriptor handling.\n\n2009-09-13, Version 4.7.3\n\t* collectd: Fix a possible but very rare invalid “free” in the caching\n\t  code. Thanks to Sebastian Harl for the patch.\n\t* collectd: Remove old values when a cache entry is marked as missing.\n\t  This way the “GETVAL” command of the UnixSock plugin doesn't return\n\t  old, no longer valid values when this happens. Thanks to Andrés J.\n\t  Díaz for the patch.\n\t* collectd: The “plugin_unregister_read” function has been fixed.\n\t* apache, ascent, bind, curl, nginx plugins: Advise the cURL library\n\t  to follow redirects. Thanks to Joey Hess for reporting this bug.\n\t* df plugin: Check the ignorelist before stating the file system,\n\t  possibly reducing the number of stats considerably. Thanks to Joey\n\t  Hess for reporting this bug.\n\t* iptables plugin: Support for the new libiptc API has been added.\n\t  Thanks to Sebastian Harl for the patch. The build system has been\n\t  updated to the plugin only includes the shipped header files when it\n\t  is linked with the shipped library, too.\n\t* java plugin: Delay creating the JVM until after the daemon has\n\t  forked. The JVM internally creates threads that are lost when\n\t  forking. This means that Java-based plugins are now configured\n\t  during the init-phase, i. e. later than other plugins.\n\t* libvirt plugin: Re-connect to libvirtd if connecting fails. Thanks\n\t  to Alan Pevec for the patch.\n\t* network plugin: Fix the handling of the “CacheFlush” option: The\n\t  value was assigned to a wrong variable. The initialization of the\n\t  gcrypt library, which is used for signing / encrypting traffic, has\n\t  been fixed. Thanks to Luke Heberling for the patch.\n\t* powerdns plugin: Set a timeout when reading data from the datagram\n\t  socket. Handling of the “LocalSocket” option has been fixed.  An\n\t  incorrectly used “type” has been corrected. Thanks to Luke Heberling\n\t  for his patches.\n\n2009-07-19, Version 4.7.2\n\t* Build system: Support for `DESTDIR' has been fixed in the Java\n\t  bindings.\n\t* collectd: Okay-notifications have been fixed. Thanks to Andrés J.\n\t  Díaz for fixing this bug.\n\t* collectd: A programming error has been fixed in the notification\n\t  code. The bug may result in an assertion failure.\n\t* memcached plugin: Portability fix for Solaris. Thanks to Amit Gupta\n\t  for reporting the bug.\n\t* ping plugin: Link the plugin with libm.\n\n2009-06-02, Version 4.7.1\n\t* Build system: Detection of Java has been improved and missing\n\t  details have been added to the configuration summary. Support for\n\t  libtool 2.2 has been added.\n\t* collectd: Two bugs with the threshold checking have been fixed. The\n\t  first one prevented thresholds to be checked at all, the second one\n\t  caused wrong behavior with the persistency option. Thanks to Andrés\n\t  J. Díaz for fixing these problems.\n\t* collectd: Handling of the `Include' configuration option has been\n\t  fixed.\n\t* rrdtool plugin: Make sure initialization is run only once. This\n\t  resolves problems under Solaris and potentially other systems.\n\t  Thanks to Amit Gupta for reporting this bug.\n\t* java plugin: Make it possible to use dots ('.') instead of slashes\n\t  ('/') as the class separator. Thanks to Randy Rizun for pointing\n\t  this out.\n\t* swap plugin: A work-around for 32-bit Solaris has been added. Thanks\n\t  to Doug MacEachern for the patch.\n\n2009-05-11, Version 4.7.0\n\t* apache plugin: Support to query multiple servers has been added.\n\t  Thanks to Amit Gupta for the patch.\n\t* apache plugin: Handling of lighttpd's scoreboard statistics has been\n\t  improved. Thanks to Amit Gupta for the patch.\n\t* conntrack plugin: The new conntrack plugin collects the connection\n\t  tracking table size. Thanks to Tomasz Pala for the patch.\n\t* fscache plugin: The new fscache plugin collects statistics about\n\t  Linux' file-system based caching framework. Thanks to Edward\n\t  Konetzko for the patch.\n\t* gmond plugin: The new gmond plugin can receive and interpret\n\t  multicast traffic from Ganglia's gmond daemon.\n\t* java plugin: The new java plugin exports the collectd API to Java,\n\t  making it possible to write extensions to collectd in Java.\n\t* memcachec plugin: The new memcachec plugin queries data from a\n\t  memcached daemon and parses it similar to the cURL plugin. Thanks to\n\t  Doug MacEachern for the initial code.\n\t* memcached plugin: Support for connections over UNIX domain sockets\n\t  has been added. Thanks to Franck Lombardi for the patch.\n\t* memory plugin: Support for OpenBSD and possibly other *BSDs has been\n\t  added. Thanks to Simon Kuhnle for the patch.\n\t* mysql plugin: Support to query multiple databases has been added.\n\t  Thanks to Doug MacEachern for the patch.\n\t* mysql plugin: Master/slave statistics have been added.\n\t* mysql plugin: Lock statistics have been added. Thanks to Rodolphe\n\t  Quiédeville for the patch.\n\t* network plugin: The possibility to sign or encrypt network traffic\n\t  has been added.\n\t* protocols plugin: The new protocols plugin provides information\n\t  about network protocols, such as IP, TCP and UDP.\n\t* snmp plugin: The intervals given in the configuration of the SNMP\n\t  plugin must no longer be a multiple of the global interval.\n\t* table plugin: The new Table plugin provides parsing for table-like\n\t  structured files, such as many files beneath /proc.\n\t* ted plugin: The new TED plugin reads power consumption measurements\n\t  from “The Energy Detective” (TED). Thanks to Eric Reed for this\n\t  plugin.\n\t* onewire plugin: The new `Interval' option allows collecting\n\t  information from OneWire sensors at arbitrary intervals.\n\t* ping plugin: Support for collecting the drop rate and standard\n\t  deviation of round-trip times has been added.\n\t* uptime plugin: The new uptime plugin can collect the server's\n\t  uptime. Thanks to Marco Chiappero for the patch.\n\n2009-09-10, Version 4.6.5\n\t* collectd: Remove old values when a cache entry is marked as missing.\n\t  This way the “GETVAL” command of the UnixSock plugin doesn't return\n\t  old, no longer valid values when this happens. Thanks to Andrés J.\n\t  Díaz for the patch.\n\t* apache, ascent, bind, curl, nginx plugins: Advise the cURL library\n\t  to follow redirects. Thanks to Joey Hess for reporting this bug.\n\t* df plugin: Check the ignorelist before stating the file system,\n\t  possibly reducing the number of stats considerably. Thanks to Joey\n\t  Hess for reporting this bug.\n\t* iptables plugin: Support for the new libiptc API has been added.\n\t  Thanks to Sebastian Harl for the patch. The build system has been\n\t  updated to the plugin only includes the shipped header files when it\n\t  is linked with the shipped library, too.\n\t* libvirt plugin: Re-connect to libvirtd if connecting fails. Thanks\n\t  to Alan Pevec for the patch.\n\t* powerdns plugin: Set a timeout when reading data from the datagram\n\t  socket. Handling of the “LocalSocket” option has been fixed.  An\n\t  incorrectly used “type” has been corrected. Thanks to Luke Heberling\n\t  for his patches.\n\n2009-07-18, Version 4.6.4\n\t* collectd: Okay-notifications have been fixed. Thanks to Andrés J.\n\t  Díaz for fixing this bug.\n\t* collectd: A programming error has been fixed in the notification\n\t  code. The bug may result in an assertion failure.\n\t* memcached plugin: Portability fix for Solaris. Thanks to Amit Gupta\n\t  for reporting the bug.\n\n2009-06-02, Version 4.6.3\n\t* Build system, various plugins: Many build fixes for FreeBSD,\n\t  OpenBSD, NetBSD, Solaris and Mac OS X. Big thanks to Doug MacEachern\n\t  for many fixes and providing a build system for many platforms,\n\t  Ulf Zimmermann for providing a FreeBSD system and Simon Kuhnle for\n\t  providing an OpenBSD system.\n\t* collectd: Two bugs with the threshold checking have been fixed. The\n\t  first one prevented thresholds to be checked at all, the second one\n\t  caused wrong behavior with the persistency option. Thanks to Andrés\n\t  J. Díaz for fixing these problems.\n\t* collectd: Handling of the `Include' configuration option has been\n\t  fixed.\n\t* battery plugin: Don't complain about a missing directory every\n\t  interval.\n\t* exec plugin: Allow executed programs to close STDERR. Thanks to\n\t  Thorsten von Eicken for reporting this problem.\n\t* irq plugin: Fix handling of overflowing 32-bit counters. Thanks to\n\t  Tomasz Pala for the patch.\n\t* perl plugin: Portability build-fixes. Thanks to Doug MacEachern for\n\t  the patch.\n\t* memory plugin: Fix a potential problem under Solaris.\n\t* swap plugin: A work-around for 32-bit Solaris has been added. Thanks\n\t  to Doug MacEachern for the patch.\n\n2009-03-18, Version 4.6.2\n\t* collectd: Some Solaris utility code has been improved.\n\t* filter subsystem: Allow `Chains' without default targets.\n\t* liboping: A patch to comply with strict aliasing rules has been\n\t  added.\n\t* timediff match: Fix a typo: The match was registered with a wrong\n\t  name which prevented this match to be used as documented. Thanks to\n\t  Bruno Prémont for finding this problem.\n\t* bind plugin: Fix collection of the cached RR sets. The number of RR\n\t  sets currently in the cache was collected as a counter value, which\n\t  is nonsense. Thanks to Bruno Prémont for implementing this.\n\t* dns plugin: Don't pass NULL to `pcap_open_live': Some systems,\n\t  primarily BSDs, don't take it well and crash.\n\t* oracle plugin: Portability to 64 bit systems has been improved.\n\t* postgresql plugin: The default configuration has been improved.\n\t* rrdtool plugin: Fix a possible race condition: If the network plugin\n\t  is brought and dispatches a value before the rrdtool plugin is\n\t  initialized, the daemon may crash.\n\n2009-02-22, Version 4.6.1\n\t* collectd: Many documentation fixes.\n\t* Collectd::Unixsock: Error handling has been improved.\n\t* regex match: Don't link with the PCRE library.\n\t* bind plugin: Various bugs have been fixed. Thanks to Bruno Prémont\n\t  for finding and fixing most of them.\n\t* ipmi plugin: Fix an off-by-one error which could cause segmentation\n\t  faults. Thanks to Peter Holik for his patch.\n\n2009-02-16, Version 4.6.0\n\t* collectd: Added the `filter chain' infrastructure, which allows the\n\t  user to use `matches' and `targets' to control value processing.\n\t* collectd: The new `-T' command line argument allows more in-depth\n\t  testing of a configuration. Thanks to Doug MacEachern for the patch.\n\t* collectd-nagios: The Nagios integration command has been updated to\n\t  use libcollectdclient. The `percentage' aggregation function has\n\t  been added. Thanks to Fabian Linzberger for the patch.\n\t* libcollectdclient: A library which abstracts communication with the\n\t  unixsock plugin for clients has been added.\n\t* regex match: Match values by their identifies using regular\n\t  expressions.\n\t* timediff match: Match for values with an invalid timestamp.\n\t* value match: Select values by their data sources' values.\n\t* notification target: Create and dispatch a notification.\n\t* replace target: Replace parts of an identifier using regular\n\t  expressions.\n\t* set target: Set (overwrite) entire parts of an identifier.\n\t* bind plugin: This new plugin uses the new HTTP/XML interface to BIND\n\t  statistics, allowing very detailed name server statistics. Thanks to\n\t  Bruno Prémont for this plugin.\n\t* cpu plugin: Report `interrupt' separately when using\n\t  sysctlbyname(3) (used under *BSD). Support for sysctl(3), for\n\t  example for native OpenBSD support, has been added. Thanks to Simon\n\t  Kuhnle for the patch.\n\t* csv plugin: Make it possible to write values to STDOUT instead of\n\t  files. This is meant for testing purposes mostly. The output written\n\t  to STDOUT is compatible with the exec plugin. Thanks to Doug\n\t  MacEachern for the patch.\n\t* curl plugin: This new plugin can be used to read web pages and parse\n\t  them using the same mechanism that's used in the tail plugin.\n\t* dbi plugin: This new plugin allows you to connect to a variety of\n\t  relational databases and use SQL to gather custom statistics from\n\t  it. It is similar to the already existing PostgreSQL plugin but uses\n\t  libdbi to communicate with the database(s).\n\t* interface plugin: Use the ignorelist framework when selecting /\n\t  ignoring interfaces. This allows one to use regular expressions to\n\t  select interfaces, too.\n\t* ipmi plugin: Handle temporary IPMI error conditions more gracefully.\n\t  Thanks to Bruno Prémont for this patch.\n\t* memcached plugin: Add hit-ratio metric. Thanks to Doug MacEachern\n\t  for the patch.\n\t* mysql plugin: Allow connecting to a database via the UNIX domain\n\t  socket, too. Thanks to Mirko Buffoni for the patch.\n\t* network plugin: Further performance improvements for the receive\n\t  code. This hopefully will help very large setups.\n\t* openvpn plugin: This new plugin collects statistics provided by the\n\t  OpenVPN daemon. Thanks to Doug MacEachern for the patch.\n\t* oracle plugin: This new plugin allows you to connect to an Oracle\n\t  database and use SQL to gather custom statistics from it. It is\n\t  similar to the already existing PostgreSQL plugin.\n\t* perl plugin: Compatibility fixes for broken versions of Perl 5.10\n\t  have been added.\n\t* perl plugin: Export the newly added plugin_write() to Perl plugins.\n\t* perl plugin: Added support for `notification meta data'.\n\t* perl plugin: Added support for the `filter chain' infrastructure by\n\t  allowing plugins to register `matches' and `targets'.\n\t* postgresql plugin: The preferred configuration syntax has been\n\t  updated to be in line with the syntax used by the new dbi and oracle\n\t  plugins. The compatibility code for the old syntax is present.\n\t  Support for the new `Result' blocks and the interval parameter has\n\t  been added.\n\t* processes plugin: Stacksize and virtual memory usage statistics have\n\t  been added. Portability fixes.\n\t* rrdcached plugin: This new plugin uses the (still in development)\n\t  RRD accelerator daemon, rrdcached. This daemon works very similar to\n\t  the original rrdtool plugin of collectd, but adds some more nice\n\t  features.\n\t* swap plugin: Code for OpenBSD (and possibly other *BSDs) has been\n\t  added.\n\n2009-05-09, Version 4.5.4\n\t* Build system, various plugins: Many build fixes for FreeBSD,\n\t  OpenBSD, NetBSD, Solaris and Mac OS X. Big thanks to Doug MacEachern\n\t  for many fixes and providing a build system for many platforms,\n\t  Ulf Zimmermann for providing a FreeBSD system and Simon Kuhnle for\n\t  providing an OpenBSD system.\n\t* collectd: Fix a potential race condition when creating directories.\n\t* battery plugin: Don't complain about a missing directory every\n\t  interval.\n\t* dns plugin: Slight portability fixes.\n\t* exec plugin: Allow executed programs to close STDERR. Thanks to\n\t  Thorsten von Eicken for reporting this problem.\n\t* irq plugin: Fix handling of overflowing 32-bit counters. Thanks to\n\t  Tomasz Pala for the patch.\n\t* perl plugin: Portability build-fixes. Thanks to Doug MacEachern for\n\t  the patch.\n\t* rrdtool plugin: Fix a possible race condition: If the network plugin\n\t  is initialized and dispatches a value before the rrdtool plugin is\n\t  initialized, the daemon may crash.\n\t* memory plugin: Fix a potential problem under Solaris.\n\n2009-02-22, Version 4.5.3\n\t* build system: The check for libupsclient even when `pkg-config' is\n\t  not available.\n\t* collectd: Fix error handling in the global cache.\n\t* Collectd::Unixsock: Error handling has been improved.\n\t* ascent plugin: Fix a memory leak. Thanks to Bruno Prémont for his\n\t  patch.\n\t* ipmi plugin: Fix an off-by-one error which could cause segmentation\n\t  faults. Thanks to Peter Holik for his patch.\n\t* tcpconns plugin: An endianness problem has been fixed in the *BSD\n\t  code. Thanks to \"thated\" for reporting this.\n\n2009-01-02, Version 4.5.2\n\t* build system: Check for `mysql.h' and `mysql/mysql.h', since the\n\t  file may be in both locations, especially when the database was\n\t  installed in a non-standard path. Thanks to Dusty Doris for\n\t  reporting this.\n\t* build system: Handle the _POSIX_PTHREAD_SEMANTICS defined, needed by\n\t  Solaris, in the configure script automatically.\n\t* build system, tcpconns plugin: Check for `kvm_nlist' and\n\t  `kvm_openfiles' before enabling the plugin: Solaris provides a KVM\n\t  library with similar functions to the BSD variant, but doesn't\n\t  provide these necessary functions.\n\t* collectd.conf(5): Various fixes and clarifications.\n\t* collectd: Remove a GNUism (unnamed unions), thus improving\n\t  portability.\n\t* collectd, apcups plugin: Include \"collectd.h\" before <stdlib.h>.\n\t  This solves portability problems, especially for Solaris.\n\t* dns plugin: Fix a portability problem with NetBSD.\n\t* filecount plugin: Fix an off-by-one error. This error may cause a\n\t  segmentation fault.\n\t* network plugin: Fix the handling of `type' in the network protocol.\n\t  Due to a programming mistake, only 4 or 8 bytes would be copied to a\n\t  much larger buffer. This caused the `type' to be transferred much\n\t  more often than necessary. In some cases, e. g. the `cpu' and\n\t  `cpufreq' plugins being used at the same time, data may be corrupted\n\t  in those files. Thanks to Bruno Prémont for debugging and reporting\n\t  this issue.\n\t* processes plugin: Fix a possible segmentation fault when specifying\n\t  invalid configuration options.\n\t* unixsock plugin: Make sure the initialization function is run only\n\t  once. This resolves a file descriptor leak under systems which run\n\t  the initialization more than once, such as Solaris.\n\n2008-10-16, Version 4.5.1\n\t* build system: Change `--enable-<plugin>' to abort with an error if\n\t  dependencies are not met. Thanks to Bruno Prémont for the patch.\n\t  Also, the poisoning of various string functions has been restricted\n\t  to debug builds.\n\t* collectd: Fix a memory leak in the global value cache. With every\n\t  *missing* value a couple of bytes would be leaked. Another memory\n\t  leak in the configuration handling code has been fixed. Thanks to\n\t  Niraj Tolia for reporting these issues.\n\t* collectd: Fix an off-by-one error in the ignorelist functionality.\n\t  When using regular expressions, the last character would be missing,\n\t  possibly matching differently from what one would expect.\n\t* collectdmon: Don't block SIGCHLD. This fixes a potential portability\n\t  problem.\n\t* collectd-nagios: Fix handling of the `-d' option. Thanks to Fabian\n\t  Linzberger for reporting the bug.\n\t* iptables plugin: Fix an off-by-one error. If a string was just one\n\t  character too long, it was truncated instead of reporting an error.\n\t* network plugin: Fix a memory leak in the configuration handling\n\t  code. Thanks to Niraj Tolia for reporting this issue.\n\t* perl plugin: Log an error message if bootstrapping `Collectd' fails.\n\t* postgresql plugin: Don't reopen connection during reinitialization.\n\t  This fixes a bug under Solaris and potentially other platforms.\n\t  Missing calls to `PQclear' have been added, too. This fixes memory\n\t  leaks. Thanks to ``Admin'' for reporting these bugs.\n\t* snmp plugin: Don't expect null-terminated strings from the Net-SNMP\n\t  library.\n\t* tail plugin: Call `clearerr(3)' after reading an EOF. This fixes\n\t  problems with some `libc's. Thanks to Matthias Lay for reporting the\n\t  bug.\n\n2008-09-04, Version 4.5.0\n\t* collectd: Added the ability to flush certain identifiers.\n\t* collectd: The concept of `notification meta data' has been\n\t  introduced.\n\t* filecount plugin: The new filecount plugin counts the number of\n\t  files in a directory and its subdirectories.\n\t* ipmi plugin: Sensor names have been changed to ensure unique names.\n\t  Notifications upon added and removed sensors can now be generated.\n\t* notify_desktop plugin: This new plugin sends notifications to the\n\t  X desktop using the structure defined in the `Desktop Notification\n\t  Specification'.\n\t* notify_email plugin: This new plugin sends out notifications via\n\t  email, using the `esmtp' library.\n\t* onewire plugin: The new experimental(!) onewire plugin reads values,\n\t  such as temperatures, from sensors connected to the computer via the\n\t  onewire bus.\n\t* perl plugin: Improved synchronized access to internal data structures\n\t  and fixed a possible dead-lock.\n\t* perl plugin: Added the ability to flush certain identifiers and marked\n\t  plugin_flush_all() and plugin_flush_one() as deprecated in favor of\n\t  plugin_flush().\n\t* perl plugin: Added the ability to configure Perl plugins.\n\t* postgresql plugin: The new postgresql plugin collects statistics\n\t  about or from a PostgreSQL database.\n\t* processes plugin: The `ProcessMatch' option has been added.\n\t* rrdtool plugin: Implement throttling of the `update queue' to lessen\n\t  IO load.\n\t* tcpconns plugin: This plugin has been ported to OpenBSD.\n\t* thermal plugin: The new thermal plugin collects system temperatures\n\t  using Linux ACPI thermal zone data.\n\n2009-01-02, Version 4.4.5\n\t* build system: Check for `mysql.h' and `mysql/mysql.h', since the\n\t  file may be in both locations, especially when the database was\n\t  installed in a non-standard path. Thanks to Dusty Doris for\n\t  reporting this.\n\t* build system: Handle the _POSIX_PTHREAD_SEMANTICS defined, needed by\n\t  Solaris, in the configure script automatically.\n\t* collectd.conf(5): Various fixes and clarifications.\n\t* apcups plugin: Include \"collectd.h\" before <stdlib.h>. This solves\n\t  portability problems, especially for Solaris.\n\t* dns plugin: Fix a portability problem with NetBSD.\n\t* network plugin: Fix the handling of `type' in the network protocol.\n\t  Due to a programming mistake, only 4 or 8 bytes would be copied to a\n\t  much larger buffer. This caused the `type' to be transferred much\n\t  more often than necessary. In some cases, e. g. the `cpu' and\n\t  `cpufreq' plugins being used at the same time, data may be corrupted\n\t  in those files. Thanks to Bruno Prémont for debugging and reporting\n\t  this issue.\n\t* unixsock plugin: Make sure the initialization function is run only\n\t  once. This resolves a file descriptor leak under systems which run\n\t  the initialization more than once, such as Solaris.\n\n2008-10-16, Version 4.4.4\n\t* build system: Change `--enable-<plugin>' to abort with an error if\n\t  dependencies are not met. Thanks to Bruno Prémont for the patch.\n\t  Also, the poisoning of various string functions has been restricted\n\t  to debug builds.\n\t* collectd: Fix a memory leak in the global value cache. With every\n\t  *missing* value a couple of bytes would be leaked. Another memory\n\t  leak in the configuration handling code has been fixed. Thanks to\n\t  Niraj Tolia for reporting these issues.\n\t* collectd: Fix an off-by-one error in the ignorelist functionality.\n\t  When using regular expressions, the last character would be missing,\n\t  possibly matching differently from what one would expect.\n\t* collectdmon: Don't block SIGCHLD. This fixes a potential portability\n\t  problem.\n\t* collectd-nagios: Fix handling of the `-d' option. Thanks to Fabian\n\t  Linzberger for reporting the bug.\n\t* network plugin: Fix a memory leak in the configuration handling\n\t  code. Thanks to Niraj Tolia for reporting this issue.\n\t* perl plugin: Log an error message if bootstrapping `Collectd' fails.\n\t* tail plugin: Call `clearerr(3)' after reading an EOF. This fixes\n\t  problems with some `libc's. Thanks to Matthias Lay for reporting the\n\t  bug.\n\n2008-09-01, Version 4.4.3\n\t* collectd: Fix a memory leak in the threshold checking code.\n\t* memcached plugin: Fix a too short timeout and a related file\n\t  descriptor leak.\n\t* memory plugin: A typo in the libstatgrab code has been fixed.\n\t* snmp plugin: Fix a possible memory leak.\n\n2008-07-15, Version 4.4.2\n\t* build system: Use pkg-config to detect the upsclient library.\n\t* collectd: Try even harder to determine the endianness of the\n\t  architecture collectd is being built on.\n\t* disk plugin: Fix for Linux 2.4: A wrong field was used as the name\n\t  of disks.\n\t* dns plugin: Fix compilation errors with BIND versions 19991001\n\t  through 19991005.\n\t* network plugin: Bugfix in the init routine: The init function\n\t  cleared a buffer regardless of its contents. This could lead to lost\n\t  values under Solaris.\n\t* nginx plugin: Remove usage of the thread-unsafe `strtok' function.\n\t* vserver plugin: Remove usage of the thread-unsafe `readdir'\n\t  function.\n\t* wireless plugin: Work around incorrect noise and power values\n\t  returned by some broken drivers.\n\n2008-06-03, Version 4.4.1\n\t* collectd: Fix the `DataSource' option within `Type' blocks. Thanks\n\t  to kyrone for reporting this.\n\t* collectd: Fixed min/max output in notifications generated by\n\t  threshold checking.\n\t* collectd-nagios: Fix the protocol used to communicate with the\n\t  daemon.\n\t* perl plugin: Fail noisily, but don't shutdown the daemon, if\n\t  initialization has errors. An issue with Perl 5.10 has been fixed.\n\t* teamspeak2 plugin: Fixed an out of bound array access. Thanks to\n\t  René Rebe and Siegmund Gorr for reporting this.\n\n2008-05-06, Version 4.4.0\n\t* collectd: Internal code cleanups.\n\t* collectd: Added support for a `Flush' command in the unixsock and\n\t  exec plugins. This command can be used to force a plugin (or all) to\n\t  flush its values to disk.\n\t* collectd: Thresholds can now be configured to apply to one data\n\t  source only, making it possible to configure different thresholds\n\t  for each data source.\n\t* apache, nginx plugins: Added the possibility to disable host and/or\n\t  peer verification.\n\t* ascent plugin: The new ascent plugin reads and parses the statistics\n\t  page of an Ascent server.\n\t* cpu plugin: Support for the statgrab library has been added.\n\t* disk plugin: The possibility to ignore certain disks or collect only\n\t  specific disks has been added.\n\t* disk plugin: Support for the statgrab library has been added.\n\t* ipmi plugin: The new ipmi plugin uses the OpenIPMI library to read\n\t  sensor values via IPMI, the intelligent platform management\n\t  interface.\n\t* iptables plugin: The iptc library that is used by the iptables\n\t  plugin has been added to the distribution, because it is not\n\t  provided by all distributions and removed from at least one.\n\t* powerdns plugin: The new powerdns plugin reads statistics from an\n\t  authoritative or a recursing PowerDNS name server.\n\t* rrdtool plugin: The size of the files generated with the default\n\t  configuration has been decreased.\n\t* tail plugin: The new tail plugin can be used to gather statistics by\n\t  continuously reading from log files.\n\t* teamspeak2 plugin: The new teamspeak2 plugin connects to a\n\t  TeamSpeak2 server and collects statistics about the number of users\n\t  and number of channels.\n\t* users plugin: Support for the statgrab library has been added.\n\t* vmem plugin: The new vmem plugin collects very detailed statistics\n\t  about the virtual memory subsystem of Linux.\n\n2008-08-30, Version 4.3.4\n\t* Build system: Improved detection of and linking with the statgrab\n\t  library.\n\t* collectd: Portability fixes, especially to determine endianness more\n\t  reliable.\n\t* Various plugins: Fix format strings.\n\t* disk plugin: A fix for giving disks under Linux 2.4 the right names\n\t  again has been applied.\n\t* memcached plugin: Fix a too short timeout and a related file\n\t  descriptor leak.\n\t* memory plugin: A typo in the libstatgrab code has been fixed.\n\t* network plugin: A fix in the initialization function solves problems\n\t  under Solaris.\n\t* nginx plugin: A thread-unsafe function has been replaced.\n\t* vserver plugin: A thread-unsafe function has been replaced.\n\t* wireless plugin: A work-around for broken wireless drivers has been\n\t  added.\n\n2008-04-22, Version 4.3.3\n\t* build system: Improved detection of several libraries, especially if\n\t  they are in non-standard paths.\n\t* build system: Portability fixes: Automatically define \"_REENTRANT\"\n\t  if the libc expects it.\n\t* collectd: Error and warning messages have been improved.\n\t* collectd: Check for the BYTE_ORDER and BIG_ENDIAN defines before\n\t  using them.\n\t* apache plugin: Allocate new memory when reading a webpage instead of\n\t  using a buffer of static size.\n\t* exec plugin: Close (almost) all filedescriptors before exec(2)ing\n\t  the program.\n\t* hddtemp plugin: Error and warning messages have been improved.\n\t* sensors plugin: Fix sensor collection for some chip types.\n\n2008-03-29, Version 4.3.2\n\t* collectd: Fix configuration of the `FailureMax', `WarningMax', and\n\t  `Persist' threshold options.\n\t* collectd: Fix handling of missing values in the global value cache.\n\t* collectd: Improved error messages when parsing the configuration.\n\t* sensors plugin: Fix temperature collection with libsensors4.\n\t* unixsock plugin: Fix mixed input and output operation on streams.\n\t* wireless plugin: Fix reading noise value.\n\n2008-03-05, Version 4.3.1\n\t* exec plugin: Set supplementary group IDs.\n\t* network plugin:\n\t  + Use `memcpy' when constructing/parsing a package to avoid\n\t    alignment problems on weird architectures, such as Sparc.\n\t  + Translate doubles to/from the x86 byte representation to ensure\n\t    cross-platform compatibility.\n\t* ping plugin: Correct the handling of the `TTL' setting.\n\t* swap plugin: Reapply a patch for Solaris.\n\t* tcpconns plugin: Portability improvements.\n\n2008-02-18, Version 4.3.0\n\t* collectd: Notifications have been added to the daemon. Notifications\n\t  are status messages that may be associated with a data instance.\n\t* collectd: Threshold checking has been added to the daemon. This\n\t  means that you can configure threshold values for each data\n\t  instance. If this threshold is exceeded a notification will be\n\t  created.\n\t* collectd: The new `FQDNLookup' option tells the daemon to use the\n\t  full qualified domain name as the hostname, not just the host part\n\t  es returned by `gethostname(2)'.\n\t* collectd: Support for more than one `TypesDB' file has been added.\n\t  This is useful when one such file is included in a package but one\n\t  wants to add custom type definitions.\n\t* collectd: The `Include' config option has been expanded to handle\n\t  entire directories and shell wildcards.\n\t* collectdmon: The new `collectdmon' binary detects when collectd\n\t  terminates and automatically restarts it again.\n\t* csv plugin: The CSV plugin is now able to store counter values as a\n\t  rate, using the `StoreRates' configuration option.\n\t* exec plugin: Handling of notifications has been added and the\n\t  ability to pass arguments to the executed programs has been added.\n\t* hddtemp plugin: The new `TranslateDevicename' option lets you\n\t  disable the translation from device names to major-minor-numbers.\n\t* logfile plugin: Handling of notifications has been added.\n\t* ntpd plugin: The new `ReverseLookups' can be used to disable reverse\n\t  domain name lookups in this plugin.\n\t* perl plugin: Many internal changes added support for handling multiple\n\t  threads making the plugin reasonably usable inside collectd. The API has\n\t  been extended to support notifications and export global variables to\n\t  Perl plugins; callbacks now have to be identified by name rather than a\n\t  pointer to a subroutine. The plugin is no longer experimental.\n\t* uuid plugin: The new UUID plugin sets the hostname to an unique\n\t  identifier for this host. This is meant for setups where each client\n\t  may migrate to another physical host, possibly going through one or\n\t  more name changes in the process. Thanks to Richard Jones from\n\t  Red Hat's Emerging Technology group for this plugin.\n\t* libvirt: The new libvirt plugin uses the `libvirt' library to query\n\t  CPU, disk and network statistics about guest systems on the same\n\t  physical server. Thanks to Richard Jones from Red Hat's Emerging\n\t  Technology group for this plugin.\n\n2008-04-22, Version 4.2.7\n\t* build system: Improved detection of several libraries, especially if\n\t  they are in non-standard paths.\n\t* build system: Portability fixes: Automatically define \"_REENTRANT\"\n\t  if the libc expects it.\n\t* collectd: Error and warning messages have been improved.\n\t* collectd: Check for the BYTE_ORDER and BIG_ENDIAN defines before\n\t  using them.\n\t* apache plugin: Allocate new memory when reading a webpage instead of\n\t  using a buffer of static size.\n\t* exec plugin: Close (almost) all filedescriptors before exec(2)ing\n\t  the program.\n\t* hddtemp plugin: Error and warning messages have been improved.\n\t* sensors plugin: Fix sensor collection for some chip types.\n\n2008-03-29, Version 4.2.6\n\t* collectd: Improved error messages when parsing the configuration.\n\t* sensors plugin: Fix temperature collection with libsensors4.\n\t* unixsock plugin: Fix mixed input and output operation on streams.\n\t* wireless plugin: Fix reading noise value.\n\n2008-03-04, Version 4.2.5\n\t* apache plugin: Improved initialization and error messages.\n\t* exec plugin: Set supplementary group IDs.\n\t* network plugin:\n\t  + Create separate threads for reading from the socket and parsing\n\t    and dispatching incoming packets. Versions prior to this may have\n\t    problems in high-load situations, where the socket receive buffers\n\t    overflows, resulting in gaps in the data.\n\t  + Use `memcpy' when constructing/parsing a package to avoid\n\t    alignment problems on weird architectures, such as Sparc.\n\t  + Translate doubles to/from the x86 byte representation to ensure\n\t    cross-platform compatibility.\n\t* ping plugin: Correct the handling of the `TTL' setting.\n\t* rrdtool plugin: Ensure correct handling of the `RRATimespan' option.\n\t* swap plugin: Reapply a patch for Solaris.\n\t* tcpconns plugin: Portability improvements.\n\n2008-01-21, Version 4.2.4\n\t* unixsock plugin: A bug in the unixsock plugin caused it not to set\n\t  the permission on the socket as documented in the manpage. Thanks to\n\t  Evgeny Chukreev for fixing this issue.\n\t* collectd: The documentation has been improved.\n\n2007-12-28, Version 4.2.3\n\t* sensors plugin: Updated the plugin to build and work with version 3\n\t  of the libsensors library.\n\n2007-12-15, Version 4.2.2\n\t* nginx plugin: Incorrect comparison of strings lead to a segfault\n\t  when using the plugin. Thanks to Saulius Grigaliunas for fixing\n\t  this.\n\t* logfile plugin: The config option `Timestamp' was handled\n\t  incorrectly and basically always active. Thanks to Luke Heberling\n\t  for fixing this.\n\n2007-11-08, Version 4.2.1\n\t* tcpconns plugin: Don't complain about a missing file if IPv6 is not\n\t  enabled on the host.\n\t* snmp plugin: Fix a memory leak.\n\n2007-10-27, Version 4.2.0\n\t* collectd: The new config option `Include' lets you include other\n\t  configfiles and thus split up your config into smaller parts. This\n\t  may be especially interesting for the snmp plugin to keep the data\n\t  definitions separate from the host definitions.\n\t* ipvs plugin: The new `ipvs' plugin collects IPVS connection statistics\n\t  (number of connections, octets and packets for each service and\n\t  destination). Thanks to Sebastian Harl for this plugin.\n\t* memcached plugin: The new `memcached' plugin connects to a memcached\n\t  daemon process and collects statistics of this distributed caching\n\t  system. Thanks to Antony Dovgal for contributing this plugin.\n\t* nginx plugin: The new `nginx' plugin reads the status page of an\n\t  nginx daemon and saves the handled connections and requests.\n\t* perl plugin: Many changes, including the added `EnableDebugger'\n\t  config option which lets you debug your Perl plugins more easily.\n\t* rrdtool plugin: Use the thread-safe RRD-library if available. Try to\n\t  be more thread-safe otherwise by locking calls to the library.\n\t* snmp plugin: Added the options `Scale' and `Shift' to Data-blocks to\n\t  correct the values returned by SNMP-agents. If a <data> block is\n\t  defined as `table' the instance is now optional. The sequence number\n\t  is used as the type-instance in this case. The new `InstancePrefix'\n\t  option allows to add arbitrary prefixes to the type-instance.\n\t* tcpconns plugin: The new `tcpconns' plugin collects the number of\n\t  certain TCP connections and what state they're in. This can be used\n\t  to see how many connections your FTP server has to handle or how\n\t  many outgoing connections your mailserver has open.\n\n2008-01-11, Version 4.1.6\n\t* unixsock plugin: A bug in the unixsock plugin caused it not to set\n\t  the permission on the socket as documented in the manpage. Thanks to\n\t  Evgeny Chukreev for fixing this issue.\n\t* collectd: The documentation has been improved.\n\n2007-12-27, Version 4.1.5\n\t* rrdtool plugin: Fix a memory leak that only occurred in very-low-\n\t  memory situations.\n\t* sensors plugin: Updated the plugin to build and work with version 3\n\t  of the libsensors library.\n\n2007-11-08, Version 4.1.4\n\t* Build system: Improve detection of the rrd library, especially if\n\t  it's in a non-standard location.\n\t* Build system: A bug when parsing the argument for\n\t  `--with-libnetsnmp' has been fixed.\n\t* collectd: Implement `strerror_r' if the libc doesn't provide it.\n\t* rrdtool plugin: Fix a bug in the shutdown sequence that might cause\n\t  a deadlock or delay when shutting down the daemon.\n\t* snmp plugin: Fix a memory leak.\n\n2007-10-24, Version 4.1.3\n\t* collectd: A build issue under Solaris has been resolved by renaming\n\t  data types.\n\t* rrdtool plugin: Use the thread-safe RRD-library if available. Try to\n\t  be more thread-safe otherwise by locking calls to the library.\n\n2007-09-28, Version 4.1.2\n\t* apcups plugin: Fix reporting of the `load percent' data.\n\t* wireless plugin: Correct the handling of cards returning signal and\n\t  noise quality as percentage.\n\t* perl plugin: Fix a possible buffer overflow in get_module_name().\n\t* build system: Further improve the detection of libraries.\n\t* netlink plugin: Build issues under some older versions of the Linux\n\t  includes (i. e. Debian Sarge) have been fixed.\n\t* snmp plugin: Fix a potential segfault when a host times out. Add\n\t  support for the `timeticks' type. \n\n2007-09-12, Version 4.1.1\n\t* Build system: The detection of `libnetlink' has been improved.\n\t* collectd: The documentation has been fixed in numerous places.\n\t* exec plugin: Setting the group under which to run a program has been\n\t  fixed.\n\t* collectd: The `sstrerror' function was improved to work correctly\n\t  with the broken GNU version of `strerror_r'.\n\t* collectd: Write an error message to STDERR when loading of a plugin\n\t  fails.\n\t* apcups plugin: Fix the `types' used to submit the values: They still\n\t  has an `apcups_' prefix which doesn't work anymore.\n\t* rrdtool plugin: Create new RRD-files with the `begin' time set to\n\t  whatever the client thinks is `now'..\n\n2007-09-01, Version 4.1.0\n\t* Build system: The build system has been changed to automatically\n\t  disable all plugins, which are missing dependencies. The dependency\n\t  checking has been removed from the plugins themselves to remove\n\t  redundancy.\n\t* Flexible interval: The interval of collected data is now sent along\n\t  with the data itself over the network, so that the interval-settings\n\t  of server and clients no longer needs to match.\n\t* netlink plugin: The new `netlink' plugin connects to the Linux\n\t  kernel using a netlink socket and uses it to query information about\n\t  interfaces, qdiscs and classes.\n\t* rrdtool plugin: The cache is now dumped to disk in an extra thread\n\t  to not block data collection.\n\t* snmp plugin: The new `snmp' plugin can read values from SNMP enabled\n\t  network devices, such as switches, routers, thermometers, rack\n\t  monitoring servers, etc. The collectd-snmp(5) manpage documents this\n\t  plugin.\n\t* unixsock plugin: Added the `LISTVAL' command.\n\t* xmms plugin: The new `xmms' plugin graphs the bitrate and frequency\n\t  of music played with xmms.\n\n2007-09-28, Version 4.0.9\n\t* apcups plugin: Fix reporting of the `load percent' data.\n\t* wireless plugin: Correct the handling of cards returning signal and\n\t  noise quality as percentage.\n\t* perl plugin: Fix a possible buffer overflow in get_module_name().\n\n2007-09-12, Version 4.0.8\n\t* collectd: The `sstrerror' function was improved to work correctly\n\t  with the broken GNU version of `strerror_r'.\n\t* collectd: Write an error message to STDERR when loading of a plugin\n\t  fails.\n\t* apcups plugin: Fix the `types' used to submit the values: They still\n\t  has an `apcups_' prefix which doesn't work anymore.\n\t* rrdtool plugin: Create new RRD-files with the `begin' time set to\n\t  whatever the client thinks is `now'..\n\n2007-08-26, Version 4.0.7\n\t* documentation: Some typos have been fixed and some information has\n\t  been improved.\n\t* build system: Many fixes for detecting libraries in unusual places,\n\t  such as on RedHat systems. The affected libraries are `libcurl',\n\t  `libmysql', and `libupsclient'.\n\t* network plugin: Allow the `Port' option to be specified as a number\n\t  (i. e. without quotes).\n\t* nut plugin: A fix allows linking the nut plugin against\n\t  libupsclient, version >= 2.2.0.\n\t* processes plugin: Fix a potential segmentation fault.\n\n2007-07-30, Version 4.0.6\n\t* sensors plugin: Fix the ignorelist functionality: Only the `type\n\t  instance' was used to match against the list, but the documentation\n\t  told otherwise. This release fixes the code, so it complies with the\n\t  documentation.\n\t* syslog plugin: Call `openlog' right when the plugin is loaded, so\n\t  configuration messages will end up in the logging facility.\n\t* conrtib/fedora: The contributed specfile for Fedora has been\n\t  updated.\n\n2007-07-05, Version 4.0.5\n\t* Portability: More fixes for OpenBSD have been included.\n\n2007-06-24, Version 4.0.4\n\t* cpu plugin: Fixed the Solaris code.\n\t* dns plugin: Fixed a build issue for OpenBSD.\n\t* interface plugin: Fixed the Solaris code.\n\t* load plugin: Fixed the alternative `/proc' Linux code.\n\t* memory plugin: Fixed the Solaris code.\n\t* oconfig: Don't require `-lfl' anymore.\n\n2007-06-19, Version 4.0.3\n\t* cpu plugin: Fix the Darwin / Mac OS X code.\n\t* ping plugin: Use the return value of `getpid', not its address.\n\t* csv, rrdtool plugin: Fixed a bug that prevented an buffer to be\n\t  initialized correctly.\n\t* configure: Added `--with-nan-emulation' to aid cross compilation.\n\n2007-06-12, Version 4.0.2\n\t* hddtemp and ntpd plugin: Corrected the parsing of port numbers when\n\t  they're given in numerically form.\n\n2007-06-07, Version 4.0.1\n\t* iptables plugin: A bug in the configuration routine has been fixed.\n\t  Setting a comment in the configfile will no longer cause a\n\t  segmentation fault.\n\n2007-06-03, Version 4.0.0\n\t* collectd: The plugin-infrastructure has been changed to allow for\n\t  more types of plugins, namely `write' and `log' plugins.\n\t* collectd: The read-function has been changed to read many plugins in\n\t  parallel, using threads. Thus, plugins generally need to use\n\t  thread-safe functions from now on.\n\t* collectd: The '-t' command line options allows to perform syntax tests\n\t  of the configuration file and exit immediately.\n\t* csv plugin: The new `csv' plugin handles output to `comma separated\n\t  values'-files.\n\t* rrdtool plugin: The new `rrdtool' plugin handles output to\n\t  RRD-files. Data can be cached to combine multiple updates into one\n\t  write to increase IO-performance.\n\t* network plugin: The new `network' plugin handles IO via the network.\n\t  It implements a different, much more extensible protocol which can\n\t  combine many values in one packet, decreasing the number of UDP-\n\t  packets being sent. It can read from and send to the network and\n\t  with the appropriate configuration even forward packets to other\n\t  networks.\n\t* unixsock plugin: The new `unixsock' plugin provides an interface to\n\t  communicate with the daemon while it is running. Right now the\n\t  commands `GETVAL' and `PUTVAL' are implemented, but more are to\n\t  come.\n\t* perl plugin: The new `perl' plugin allows you to write extensions\n\t  for collectd in the scripting-language Perl.\n\t* logfile plugin: The new `logfile' plugin writes logmessages to files\n\t  or STDOUT or STDERR.\n\t* syslog plugin: The new `syslog' plugin sends logmessages to the\n\t  system's syslog daemon.\n\t* entropy plugin: The new `entropy' plugin collects the amount of\n\t  entropy currently being available to the system.\n\t* exec plugin: The new `exec' plugin forks child processes and reads\n\t  back values provided by the forked processes.\n\t* iptables plugin: The new `iptables' plugin reads counters from\n\t  iptables rules. Thanks to Sjoerd van der Berg for contributing this\n\t  plugin.\n\t* irq plugin: The new `irq' plugin collects the IRQ-counters. Thanks\n\t  to Peter Holik for contributing this plugin.\n\t* nut plugin: The new `nut' plugin connects the upsd of the `network\n\t  ups tools' and reads information about the connected UPS.\n\t* apache plugin: Support for lighttpd's `BusyServers' (aka.\n\t  connections) field was added by Florent Monbillard.\n\t* collectd-nagios: The new `collectd-nagios' binary queries values\n\t  from collectd, parses them and exits according to Nagios-standards.\n\t* manpages: The manpages have been improved a lot.\n\n2007-09-28, Version 3.11.7\n\t* wireless plugin: Correct the handling of cards returning signal and\n\t  noise quality as percentage.\n\n2007-08-31, Version 3.11.6\n\t* processes plugin: Fix a potential segmentation fault.\n\n2007-05-29, Version 3.11.5\n\t* configure: Added `AC_SYS_LARGEFILE' for LFS.\n\t* ntpd plugin: Fix a potential buffer overflow.\n\t* processes plugin: Fix a bug when run under Linux 2.4. All processes\n\t  were accounted as `zombies'.\n\n2007-04-10, Version 3.11.4\n\t* dns plugin: Change the order of includes to make the plugin compile\n\t  under FreeBSD.\n\n2007-03-30, Version 3.11.3\n\t* configure: Have the configure-script define `HAVE_LIBKSTAT' instead\n\t  of the unused `COLLECT_KSTAT'.\n\n2007-02-11, Version 3.11.2\n\t* plugin: Catch NULL-pointer and try to fix them. Otherwise the\n\t  NULL-pointer may have been passed to `printf' which causes a\n\t  segfault with some libcs.\n\n2007-02-10, Version 3.11.1\n\t* df plugin: Some wrong defines have been fixed so the plugin works\n\t  under Solaris again.\n\t* dns plugin: The usage of a struct has been fixed to work with\n\t  non-GNU libcs.\n\t* processes plugin: Some missing defines have been added so the plugin\n\t  compiles cleanly under FreeBSD and presumably other UNIXes.\n\n2006-12-22, Version 3.11.0\n\t* collectd: The new command line option `-P' makes it easier for\n\t  distributors to change the location of PID-files.\n\t* collectd: The daemon shuts down faster now which makes it easier to\n\t  write init.d-scripts for it.\n\t* apache plugin: Increase the buffersize to 16k, because the 4k buffer\n\t  caused problems every now and then.\n\t* df plugin: New config options allow to ignore certain mountpoints,\n\t  filesystem types or devices.\n\t* dns plugin: The new dns plugin uses `libpcap' to capture DNS traffic\n\t  and interprets it. It collects traffic as well as qtype, opcode and\n\t  rcode counts.\n\t* email plugin: Sebastian Harl has contributed this plugin which\n\t  counts received mails in categories (e. g. ham, spam, virus), spam\n\t  score (as given by SpamAssassin) and check types.\n\t* mbmon plugin: Flavio Stanchina has contributed this plugin which\n\t  uses `mbmon' to gather information from sensors on the motherboard.\n\t* processes plugin: Collect detailed statistics for configured\n\t  processes, that's process and thread count, CPU usage, resident\n\t  segment size and pagefaults.\n\t* multimeter plugin: Peter Holik contributed a new plugin which\n\t  queries multimeters.\n\t* sensors plugin: Lubos Stanek has put much effort into improving this\n\t  plugin, including `extended naming', collection of voltage values\n\t  and the possibility to ignore certain values.\n\n2006-12-21, Version 3.10.4\n\t* Max Kellermann has identified a bug in the server routine: When\n\t  opening a socket fails the daemon will (re)try opening the socket in\n\t  an endless loop, ultimately leading to a `EMFILE' error.\n\n2006-11-04, Version 3.10.3\n\t* Lubos Stanek has identified a bug in the ntpd-plugin: When the\n\t  ntpd's reply was sent in more than one packet, the buffer size was\n\t  calculated incorrectly, resulting in the reading of uninitialized or\n\t  freed memory.\n\n2006-11-01, Version 3.10.2\n\t* The sample config file has been improved.\n\t* Errors in the manpages have been corrected.\n\t* The ping-plugin now adds hosts during initialization, not during\n\t  startup. This speeds up startup when no network connectivity is\n\t  available. Also, the hosts are being added later when the network is\n\t  available.\n\t* Improved BSD-support for the df-plugin.\n\t* Fixed syntax errors in the swap-plugin for Mac OS X.\n\t* Fix a wrong structure being passed to `getnameinfo' in the ntpd-\n\t  plugin.\n\t* Don't disable the mysql-plugin if connecting to the database fails\n\t  during initialization. Instead, try again in increasing intervals.\n\n2006-07-19, Version 3.10.1\n\t* A bug in the apcups plugin was fixed: Is the plugin is loaded, but\n\t  the apcups cannot be reached, unconnected sockets will pile up and\n\t  eventually lead to `Too many open files' errors.\n\n2006-07-09, Version 3.10.0\n\t* The `disk' plugin has been ported to Darwin.\n\t* The `battery' plugin should work on many Apple computers now.\n\t* The `traffic' plugin can now ignore certain interfaces. Also,\n\t  statistics for sent/received packets and errors have been added.\n\t* A plugin to monitor APC UPSes using `apcupsd' has been added. Thanks\n\t  to Anthony Gialluca for contributing this plugin and providing me\n\t  with a test environment :)\n\t* A plugin for monitoring an NTP instance and the local clock drift\n\t  has been added.\n\n2006-06-25, Version 3.9.4\n\t* The Solaris code in the `swap' plugin has been changed to reflect\n\t  the numbers returned by `swap -s'. Thanks to Christophe Kalt for\n\t  working this out.\n\t* The debugging system has been fixed to work with the Sun libc.\n\t* When built without librrd the variable `operating_mode' could be\n\t  uninitialized. Thanks to David Elliot for reporting the bug.\n\n2006-06-01, Version 3.9.3\n\t* Fixed the ping-plugin under FreeBSD and Mac OS X. Potentially other\n\t  operating systems also profit from the changes, but I wasn't able to\n\t  check that.\n\t* Changed the build system to find the netinet-includes under FreeBSD\n\t  and therefore successfully build the `liboping' library there.\n\n2006-05-09, Version 3.9.2\n\t* Applied a patch to the `liboping' library. Due to a bug in the\n\t  sequence checking the `ping' plugin stopped working after\n\t  approximately 7.6 days.\n\n2006-05-09, Version 3.8.5\n\t* Applied a patch to the `liboping' library. Due to a bug in the\n\t  sequence checking the `ping' plugin stopped working after\n\t  approximately 7.6 days.\n\n2006-04-21, Version 3.9.1\n\t* Build issues with Solaris and possible other architectures have been\n\t  resolved.\n\t* Problems when building the `apache'-plugin without `libcurl' have\n\t  been resolved.\n\t* A bug in the `ping' plugin has been fixed. Sorry folks.\n\n2006-04-02, Version 3.9.0\n\t* A plugin to monitor the Apache webserver has been added.\n\t  <http://httpd.apache.org/>\n\t* A plugin to collect statistics about virtual servers using VServer.\n\t  <http://linux-vserver.org/> Thanks to Sebastian Harl for writing\n\t  this plugin :)\n\t* A plugin for wireless LAN cards has been added. It monitors signal\n\t  strength, link quality and noise ratio..\n\t* A plugin for Apple hardware sensors has been added.\n\t* An option to compile collectd with different `step' and `heartbeat'\n\t  settings has been added. The size of RRAs is no longer static but\n\t  calculated based on the settings for `step' and `width'.\n\t* The `ping' plugin can now be configured to use a certain TTL.\n\t* A plugin to monitor the hardware sensors of Apple computers has been\n\t  added.\n\t* The plugins `cpu', `memory', `processes' and `traffic' have been\n\t  ported to Mach/Darwin (Mac OS X).\n\t* The `log mode' has been contributed by Christophe Kalt. It writes\n\t  the data into text files rather than RRD files.\n\n2006-04-09, Version 3.8.4\n\t* Applied patch by Vincent Stehlé which improves the disk-name\n\t  resolution in the `hddtemp' plugin for Linux systems.\n\n2006-04-02, Version 3.8.3\n\t* Applied a patch by James Byers: The MySQL plugin was not working\n\t  with MySQL 5.0.2 or later.\n\n2006-03-14, Version 3.8.2\n\t* `utils_mount.c' has been changed to not use the `MNTTAB' defined by\n\t  the GNU libc, because it points to `/etc/fstab' rather than\n\t  `/etc/mtab'.\n\n2006-03-13, Version 3.8.1\n\t* Fixes for building collectd under FreeBSD, Mac OS X and Solaris.\n\t* Fixes in the debian `postinst' and `init.d' scripts.\n\n2006-03-09, Version 3.8.0\n\t* The `ping' plugin no longer uses `libping' but a self written\n\t  library named `liboping'. With this library it's possible to ping\n\t  multiple IPv4 and IPv6 addresses and hostnames - in parallel.\n\n2006-02-18, Version 3.7.2\n\t* A simple bug in the `battery' plugin has been fixed. It should now\n\t  work with ACPI based batteries as well. Thanks to Sebastian for\n\t  fixing this.\n\t* Fixing a bug that prevented collectd to be built without librrd.\n\t  Thanks to Werner Heuser for reporting it.\n\n2006-02-04, Version 3.7.1\n\t* The new network code has been improved to build with older versions\n\t  of glibc.\n\t* Fix in `libping' sets the ICMP sequence on outgoing packets. Thanks\n\t  to Tommie Gannert for this patch.\n\n2006-01-30, Version 3.7.0\n\t* The `battery' plugin has been added. It collects information about\n\t  laptop batteries..\n\t* The MySQL plugin has been improved: It now writes two more RRD\n\t  files, `mysql_qcache.rrd' and `mysql_threads.rrd'.\n\t* The `cpufreq' plugin now reads another file since the file it did\n\t  read so far causes much overhead in the kernel. Also, you need root\n\t  to read the old file, but not to read the new one.\n\t* The `hddtemp' plugin can now be configured to connect to another\n\t  address and/or port than localhost.\n\t* The `df' plugin now prefers `statvfs' over `statfs'.\n\t* The network code has been rewritten. collectd now supports unicast\n\t  and multicast, and IPv4 and IPv6. Also, the TTL of sent packages can\n\t  be set in the configfile.\n\n2006-01-24, Version 3.6.2\n\t* Due to a bug in the configfile handling collectd wouldn't start in\n\t  client mode. This released fixes this.\n\n2006-01-20, Version 3.6.1\n\t* Due to a bug in `configure.in' all modules and the binary were\n\t  linked against `libmysqlclient'. This issue is solved by this\n\t  release.\n\n2006-01-17, Version 3.6.0\n\t* A config file has been added. This allows for loading only specific\n\t  plugins.\n\t* A `df' plugin has been added.\n\t* A `mysql' plugin has been added.\n\t* The `ping' plugin doesn't entirely give up hope when a socket error\n\t  occurred, but will back of and increase the intervals between tries.\n\n2006-01-21, Version 3.5.2\n\t* Fixed yet another bug in the signal handling.. Stupid typo..\n\t* Improved the ping plugin to not give up on socket errors (backport\n\t  from 3.6.0).\n\n2005-12-18, Version 3.5.1\n\t* The PID-file is now deleted correctly when shutting down the daemon.\n\t* SIGINT and SIGTERM are now handled correctly.\n\n2005-12-16, Version 3.5.0 (Revision 326)\n\t* A bug in the `load' module under Solaris has been fixed.\n\t* The `users' module has been contributed by Sebastian Harl. It counts\n\t  currently logged in users.\n\t* The CPU module now works under FreeBSD without the use of\n\t  `libstatgrab', however SMP support is missing.\n\t* The default directories for the RRD files and the PID file now\n\t  depend on the compile time setting of `localstatedir'.\n\n2005-11-15, Version 3.4.0 (Revision 236)\n\t* A PID-file is written to /var/run upon startup. Thanks to `Tommie'\n\t  from gentoo's bugzilla for writing the patch.\n\t* The build dependency for librrd has been removed. Binaries built\n\t  without librrd are client-only and will multicast their value as\n\t  with the `-c' argument.\n\t* A patch by Peter Holik adds a module for monitoring CPU frequencies.\n\t* The newly introduced `-f' switch prevents daemon initialization\n\t  (forking, closing standard filehandles, etc.) Thanks to Alvaro\n\t  Barcellos for this patch.\n\n2005-11-04, Version 3.3.0 (Revision 216)\n\t* New modules have been added:\n\t  - `serial', for monitoring traffic on the serial interfaces\n\t  - `nfs', for graphing NFS procedure calls\n\t  - `tape', traffic from/to tape devices\n\t* The memory.rrd now accepts more than 4Gig of memory.\n\n2005-10-26, Version 3.2.0 (Revision 200)\n\t* Support for graphing the processes has been added (thanks to Lyonel\n\t  Vincent)\n\t* If reading from hddtemp fails collectd will increase the time\n\t  between polls up to one day.\n\t* The init.d files have been improved.\n\t* Problems with the spec file have been fixed.\n\n2005-10-16, Version 3.1.0 (Revision 194)\n\t* Added the `setsid' syscall to the startup code.\n\t* Support for hddtemp has been added (thanks to Vincent Stehlé)\n\n2005-09-30, Version 3.0.0 (Revision 184)\n\t* The ability to send/receive data to/from the network (think\n\t  multicast) has been added.\n\t* Modules have been split up into shared libraries can be loaded at\n\t  runtime. The biggest advantage is that the core program doesn't need\n\t  to be linked against an external library.\n\t* A patch by George Kargiotakis has been applied: It fixes the sensors\n\t  behaviour then more than one sensor is being queried.\n\n2005-09-16, Version 2.1.0 (Revision 172)\n\t* A module for swap statistics has been added.\n\n2005-09-09, Version 2.0.0 (Revision 135)\n\t* Filenames can no longer be configured at program startup. The only\n\t  options as of this version are the directory and ping hosts.\n\t* CPU statistics now include Wait-IO. If provided under Linux IRQ and\n\t  Soft-IRQ statistics are added to `System'. \n\t* Diskstats now collect read and write bytes, not sectors.\n\t* Ping statistics can now be collected for more than one host. There\n\t  is no default any more: If no host is given no host will be pinged.\n\t* A self-written patch for libping has been applied so it builds\n\t  cleanly.\n\n2005-09-01, Version 1.8.1 (Revision 123)\n\t* Much improved configure-script: libraries and features may now be\n\t  disabled.\n\t* More detailed warnings/error messages when RRD update fails.\n\n2005-08-29, Version 1.8.0:\n\t* Support for collecting disk statistics under Solaris.\n\n2005-08-25, Version 1.7.0:\n\t* Support for libstatgrab[1] for load, memory usage and network\n\t  traffic. CPU- and disk-usage are not (yet) supported, since\n\t  libstatgrab returns insufficient information. I will contact the\n\t  authors.\n\t* Improved the CPU-initialization code for Solaris. Apparently CPUs\n\t  aren't necessarily counted linear which is now handled correctly.\n\t[1]: http://www.i-scream.org/libstatgrab/\n\n2005-08-21, Version 1.6.0:\n\t* Basic support for Solaris: System load and cpu-usage can be\n\t  collected under Solaris, too. Other stats will follow later.\n\t* Many fixes in the autoconf-script\n\t* Collection/Museum scripts have been added under contrib/museum\n\t* collectd may now be started in unprivileged mode, though ping\n\t  statistics will not work.\n\n2005-07-17, Version 1.5.1:\n\t* Diskstats-RRDs now use major/minor for naming. Some systems have\n\t  weird strings as disk-names..\n\n2005-07-17, Version 1.5:\n\t* A new module, diskstats, has been added. It collects information\n\t  about the disks and partitions.\n\n2005-07-11, Version 1.4.2:\n\t* The meminfo module has been changed to work with more platforms\n\t  and/or kernel versions.\n\n2005-07-10, Version 1.4.1: Correct traffic stats\n\t* The traffic rrd-file is now created with DS-type `COUNTER' which I\n\t  forgot to correct when I changed that module.\n\n2005-07-09, Version 1.4: More traffic stats\n\t* Traffic is now collected for all interfaces that can be found\n\t* Temperature-statistics are read from lm-sensors if available\n\n2005-07-08, Version 1.3: CPU stats\n\t* Collecting CPU statistics now\n\n2005-07-12, Version 1.2: Using syslog\n\t* collectd is now using the syslog facility to report errors, warnings\n\t  and the like..\n\t* The default directory is now /var/db/collectd\n\n2005-07-10, Version 1.1: Minor changes\n\t* Nothing really useful to say ;)\n\n2005-07-09, Version 1.0: Initial Version\n\t* The following modules are provided:\n\t  * Load average\n\t  * Ping time\n\t  * Traffic\n\t  * Memory info\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 73.2333984375,
          "content": "ACLOCAL_AMFLAGS = -I m4\nAM_YFLAGS = -d\n\nif BUILD_WIN32\ncpkgdatadir=$(datadir)\ncpkglibdir=$(libdir)/plugins\ncpkglocalstatedir=${localstatedir}\nelse\ncpkgdatadir=$(pkgdatadir)\ncpkglibdir=$(pkglibdir)\ncpkglocalstatedir=${localstatedir}/lib/${PACKAGE_NAME}\nendif\n\nBUILT_SOURCES = \\\n\tsrc/libcollectdclient/collectd/lcc_features.h \\\n\tsrc/liboconfig/parser.h \\\n\t$(dist_man_MANS)\n\n\nCLEANFILES = \\\n\t.perl-directory-stamp \\\n\tbindings/buildperl/Collectd.pm \\\n\tbindings/buildperl/Collectd/Plugins/OpenVZ.pm \\\n\tbindings/buildperl/Collectd/Unixsock.pm \\\n\tbindings/buildperl/Makefile.PL \\\n\tcollectd-api.jar \\\n\tcollectd.grpc.pb.cc \\\n\tcollectd.grpc.pb.h \\\n\tcollectd.pb.cc \\\n\tcollectd.pb.h \\\n\tgeneric-jmx.jar \\\n\torg/collectd/api/*.class \\\n\torg/collectd/java/*.class \\\n\tprometheus.pb-c.c \\\n\tprometheus.pb-c.h \\\n\tsrc/pinba.pb-c.c \\\n\tsrc/pinba.pb-c.h \\\n\ttypes.grpc.pb.cc \\\n\ttypes.grpc.pb.h \\\n\ttypes.pb.cc \\\n\ttypes.pb.h\n\n\nEXTRA_DIST = \\\n\tbindings/perl/Makefile.PL \\\n\tbindings/perl/lib/Collectd.pm \\\n\tbindings/perl/lib/Collectd/Plugins/Monitorus.pm \\\n\tbindings/perl/lib/Collectd/Plugins/OpenVZ.pm \\\n\tbindings/perl/lib/Collectd/Unixsock.pm \\\n\tbindings/perl/uninstall_mod.pl \\\n\tcontrib \\\n\tproto/collectd.proto \\\n\tproto/prometheus.proto \\\n\tproto/types.proto \\\n\tREADME.md \\\n\tsrc/collectd-email.pod \\\n\tsrc/collectd-exec.pod \\\n\tsrc/collectd-java.pod \\\n\tsrc/collectd-lua.pod \\\n\tsrc/collectd-nagios.pod \\\n\tsrc/collectd-perl.pod \\\n\tsrc/collectd-python.pod \\\n\tsrc/collectd-snmp.pod \\\n\tsrc/collectd-tg.pod \\\n\tsrc/collectd-threshold.pod \\\n\tsrc/collectd-unixsock.pod \\\n\tsrc/collectd.conf.pod \\\n\tsrc/collectd.pod \\\n\tsrc/collectdctl.pod \\\n\tsrc/collectdmon.pod \\\n\tsrc/pinba.proto \\\n\tsrc/postgresql_default.conf \\\n\tsrc/types.db \\\n\tsrc/types.db.pod \\\n\tsrc/valgrind.FreeBSD.suppress \\\n\tsrc/valgrind.suppress \\\n\ttestwrapper.sh \\\n\tversion-gen.sh\n\n\ndist_man_MANS = \\\n\tsrc/collectd.1 \\\n\tsrc/collectd.conf.5 \\\n\tsrc/collectd-email.5 \\\n\tsrc/collectd-exec.5 \\\n\tsrc/collectdctl.1 \\\n\tsrc/collectd-java.5 \\\n\tsrc/collectd-lua.5 \\\n\tsrc/collectdmon.1 \\\n\tsrc/collectd-nagios.1 \\\n\tsrc/collectd-perl.5 \\\n\tsrc/collectd-python.5 \\\n\tsrc/collectd-snmp.5 \\\n\tsrc/collectd-tg.1 \\\n\tsrc/collectd-threshold.5 \\\n\tsrc/collectd-unixsock.5 \\\n\tsrc/types.db.5\n\n\nnodist_pkgconfig_DATA = \\\n\tsrc/libcollectdclient/libcollectdclient.pc\n\npkginclude_HEADERS = \\\n\tsrc/libcollectdclient/collectd/client.h \\\n\tsrc/libcollectdclient/collectd/lcc_features.h \\\n\tsrc/libcollectdclient/collectd/network_buffer.h \\\n\tsrc/libcollectdclient/collectd/network.h \\\n\tsrc/libcollectdclient/collectd/network_parse.h \\\n\tsrc/libcollectdclient/collectd/server.h \\\n\tsrc/libcollectdclient/collectd/types.h\n\nlib_LTLIBRARIES = libcollectdclient.la\n\nif BUILD_WIN32\n# TODO: Build all executables on Windows as well.\nsbin_PROGRAMS = \\\n        collectd\n\nbin_PROGRAMS =\nelse\nsbin_PROGRAMS = \\\n\tcollectd \\\n\tcollectdmon\n\n\nbin_PROGRAMS = \\\n\tcollectd-nagios \\\n\tcollectd-tg \\\n\tcollectdctl\nendif # BUILD_WIN32\n\n\nnoinst_LTLIBRARIES = \\\n\tlibavltree.la \\\n\tlibcmds.la \\\n\tlibcommon.la \\\n\tlibformat_influxdb.la \\\n\tlibformat_graphite.la \\\n\tlibformat_json.la \\\n\tlibheap.la \\\n\tlibignorelist.la \\\n\tliblatency.la \\\n\tlibllist.la \\\n\tliblookup.la \\\n\tlibmetadata.la \\\n\tlibmount.la \\\n\tliboconfig.la\n\n\ncheck_LTLIBRARIES = \\\n\tlibplugin_mock.la\n\n\ncheck_PROGRAMS = \\\n\ttest_common \\\n\ttest_format_graphite \\\n\ttest_meta_data \\\n\ttest_utils_avltree \\\n\ttest_utils_cmds \\\n\ttest_utils_cmds_putval \\\n\ttest_utils_heap \\\n\ttest_utils_latency \\\n\ttest_utils_message_parser \\\n\ttest_utils_mount \\\n\ttest_utils_subst \\\n\ttest_utils_time \\\n\ttest_utils_vl_lookup \\\n\ttest_libcollectd_network_parse \\\n\ttest_utils_config_cores\n\n\nTESTS = $(check_PROGRAMS)\n\nLOG_COMPILER = env VALGRIND=\"@VALGRIND@\" $(abs_srcdir)/testwrapper.sh\n\n\njardir = $(cpkgdatadir)/java\n\npkglib_LTLIBRARIES =\n\n\nPLUGIN_LDFLAGS = \\\n\t-module \\\n\t-avoid-version \\\n\t-export-symbols-regex '\\<module_register\\>'\nif BUILD_WIN32\nPLUGIN_LDFLAGS += -shared -no-undefined -lcollectd -L.\nendif\n\n\nAM_CPPFLAGS = \\\n\t-I$(top_srcdir)/src -I$(top_srcdir)/src/daemon \\\n\t-DPREFIX='\"${prefix}\"' \\\n\t-DCONFIGFILE='\"${sysconfdir}/${PACKAGE_NAME}.conf\"' \\\n\t-DLOCALSTATEDIR='\"${localstatedir}\"' \\\n\t-DPKGLOCALSTATEDIR='\"${cpkglocalstatedir}\"' \\\n\t-DPLUGINDIR='\"${cpkglibdir}\"' \\\n\t-DPKGDATADIR='\"${cpkgdatadir}\"'\nif BUILD_WIN32\nAM_CPPFLAGS += -DNOGDI\nendif\n\nCOMMON_DEPS =\nif BUILD_WIN32\nCOMMON_DEPS += collectd.exe\nendif\n\n# Link to these libraries..\nCOMMON_LIBS = $(PTHREAD_LIBS)\nif BUILD_WIN32\nCOMMON_LIBS += -lws2_32\nendif\nif BUILD_WITH_GNULIB\nCOMMON_LIBS += -lgnu\nendif\nif BUILD_WITH_CAPABILITY\nCOMMON_LIBS += -lcap\nendif\nif BUILD_WITH_LIBRT\nCOMMON_LIBS += -lrt\nendif\nif BUILD_WITH_LIBPOSIX4\nCOMMON_LIBS += -lposix4\nendif\nif BUILD_WITH_LIBSOCKET\nCOMMON_LIBS += -lsocket\nendif\nif BUILD_WITH_LIBKSTAT\nCOMMON_LIBS += -lkstat\nendif\nif BUILD_WITH_LIBDEVINFO\nCOMMON_LIBS += -ldevinfo\nendif\n\n\ncollectd_SOURCES = \\\n\tsrc/daemon/cmd.h \\\n\tsrc/daemon/collectd.c \\\n\tsrc/daemon/collectd.h \\\n\tsrc/daemon/configfile.c \\\n\tsrc/daemon/configfile.h \\\n\tsrc/daemon/filter_chain.c \\\n\tsrc/daemon/filter_chain.h \\\n\tsrc/daemon/globals.c \\\n\tsrc/daemon/globals.h \\\n\tsrc/utils/metadata/meta_data.c \\\n\tsrc/utils/metadata/meta_data.h \\\n\tsrc/daemon/plugin.c \\\n\tsrc/daemon/plugin.h \\\n\tsrc/daemon/utils_cache.c \\\n\tsrc/daemon/utils_cache.h \\\n\tsrc/daemon/utils_complain.c \\\n\tsrc/daemon/utils_complain.h \\\n\tsrc/daemon/utils_random.c \\\n\tsrc/daemon/utils_random.h \\\n\tsrc/daemon/utils_subst.c \\\n\tsrc/daemon/utils_subst.h \\\n\tsrc/daemon/utils_time.c \\\n\tsrc/daemon/utils_time.h \\\n\tsrc/daemon/types_list.c \\\n\tsrc/daemon/types_list.h \\\n\tsrc/daemon/utils_threshold.c \\\n\tsrc/daemon/utils_threshold.h\n\n\ncollectd_CFLAGS = $(AM_CFLAGS)\ncollectd_CPPFLAGS = $(AM_CPPFLAGS)\ncollectd_LDFLAGS = -export-dynamic\ncollectd_LDADD = \\\n\tlibavltree.la \\\n\tlibcommon.la \\\n\tlibheap.la \\\n\tlibllist.la \\\n\tliboconfig.la \\\n\t-lm \\\n\t$(COMMON_LIBS) \\\n\t$(DLOPEN_LIBS)\n\nif BUILD_WIN32\ncollectd_SOURCES += src/daemon/cmd_windows.c\ncollectd_LDFLAGS += -ldl -Wl,--out-implib,libcollectd.a\nelse\ncollectd_SOURCES += src/daemon/cmd.c\nendif\n\nif BUILD_FEATURE_DAEMON\ncollectd_CPPFLAGS += -DPIDFILE='\"${localstatedir}/run/${PACKAGE_NAME}.pid\"'\nendif\n\n# The daemon needs to call sg_init, so we need to link it against libstatgrab,\n# too. -octo\nif BUILD_WITH_LIBSTATGRAB\ncollectd_CFLAGS += $(BUILD_WITH_LIBSTATGRAB_CFLAGS)\ncollectd_LDADD += $(BUILD_WITH_LIBSTATGRAB_LDFLAGS)\nendif\n\nif BUILD_WIN32\ncollectd_LDFLAGS += -Wl,--out-implib,libcollectd.a\nendif\n\ncollectdmon_SOURCES = src/collectdmon.c\n\n\ncollectd_nagios_SOURCES = src/collectd-nagios.c\ncollectd_nagios_CPPFLAGS = $(AM_CPPFLAGS) \\\n\t-I$(srcdir)/src/libcollectdclient \\\n\t-I$(top_builddir)/src/libcollectdclient\ncollectd_nagios_LDADD = libcollectdclient.la\nif BUILD_WITH_LIBSOCKET\ncollectd_nagios_LDADD += -lsocket\nendif\nif BUILD_AIX\ncollectd_nagios_LDADD += -lm\nendif\n\n\ncollectdctl_SOURCES = src/collectdctl.c\ncollectdctl_CPPFLAGS = $(AM_CPPFLAGS) \\\n\t-I$(srcdir)/src/libcollectdclient \\\n\t-I$(top_builddir)/src/libcollectdclient\ncollectdctl_LDADD = libcollectdclient.la\nif BUILD_WITH_LIBSOCKET\ncollectdctl_LDADD += -lsocket\nendif\nif BUILD_AIX\ncollectdctl_LDADD += -lm\nendif\n\n\ncollectd_tg_SOURCES = src/collectd-tg.c\ncollectd_tg_CPPFLAGS = $(AM_CPPFLAGS) \\\n\t-I$(srcdir)/src/libcollectdclient \\\n\t-I$(top_builddir)/src/libcollectdclient\ncollectd_tg_LDADD = \\\n\t$(PTHREAD_LIBS) \\\n\tlibheap.la \\\n\tlibcollectdclient.la\nif BUILD_WITH_LIBSOCKET\ncollectd_tg_LDADD += -lsocket\nendif\nif BUILD_WITH_LIBRT\ncollectd_tg_LDADD += -lrt\nendif\nif BUILD_AIX\ncollectd_tg_LDADD += -lm\nendif\n\n\ntest_common_SOURCES = \\\n\tsrc/utils/common/common_test.c \\\n\tsrc/testing.h\ntest_common_LDADD = libplugin_mock.la\n\ntest_meta_data_SOURCES = \\\n\tsrc/utils/metadata/meta_data_test.c \\\n\tsrc/testing.h\ntest_meta_data_LDADD = libmetadata.la libplugin_mock.la\n\ntest_utils_avltree_SOURCES = \\\n\tsrc/utils/avltree/avltree_test.c \\\n\tsrc/testing.h\ntest_utils_avltree_LDADD = libavltree.la $(COMMON_LIBS)\n\ntest_utils_heap_SOURCES = \\\n\tsrc/utils/heap/heap_test.c \\\n\tsrc/testing.h\ntest_utils_heap_LDADD = libheap.la $(COMMON_LIBS)\n\ntest_utils_message_parser_SOURCES = \\\n\tsrc/utils/message_parser/message_parser_test.c \\\n\tsrc/testing.h \\\n\tsrc/daemon/configfile.c \\\n\tsrc/daemon/types_list.c \\\n\tsrc/utils_tail_match.c src/utils_tail_match.h \\\n\tsrc/utils/tail/tail.c src/utils/tail/tail.h \\\n\tsrc/utils/match/match.c src/utils/match/match.h \\\n\tsrc/utils/latency/latency.c src/utils/latency/latency.h \\\n\tsrc/utils/latency/latency_config.c src/utils/latency/latency_config.h\ntest_utils_message_parser_CPPFLAGS = $(AM_CPPFLAGS)\ntest_utils_message_parser_LDADD = liboconfig.la libplugin_mock.la -lm\n\ntest_utils_time_SOURCES = \\\n\tsrc/daemon/utils_time_test.c \\\n\tsrc/testing.h\n\ntest_utils_subst_SOURCES = \\\n\tsrc/daemon/utils_subst_test.c \\\n\tsrc/testing.h \\\n\tsrc/daemon/utils_subst.c \\\n\tsrc/daemon/utils_subst.h\ntest_utils_subst_LDADD = libplugin_mock.la\n\ntest_utils_config_cores_SOURCES = \\\n\tsrc/utils/config_cores/config_cores_test.c \\\n\tsrc/testing.h\ntest_utils_config_cores_LDADD = libplugin_mock.la\n\nlibavltree_la_SOURCES = \\\n\tsrc/utils/avltree/avltree.c \\\n\tsrc/utils/avltree/avltree.h\n\nlibcommon_la_SOURCES = \\\n\tsrc/utils/common/common.c \\\n\tsrc/utils/common/common.h\nlibcommon_la_LIBADD = $(COMMON_LIBS)\n\nlibheap_la_SOURCES = \\\n\tsrc/utils/heap/heap.c \\\n\tsrc/utils/heap/heap.h\n\nlibignorelist_la_SOURCES = \\\n\tsrc/utils/ignorelist/ignorelist.c \\\n\tsrc/utils/ignorelist/ignorelist.h\n\nlibllist_la_SOURCES = \\\n\tsrc/daemon/utils_llist.c \\\n\tsrc/daemon/utils_llist.h\n\nlibmetadata_la_SOURCES = \\\n\tsrc/utils/metadata/meta_data.c \\\n\tsrc/utils/metadata/meta_data.h\n\nlibplugin_mock_la_SOURCES = \\\n\tsrc/daemon/plugin_mock.c \\\n\tsrc/daemon/utils_cache_mock.c \\\n\tsrc/daemon/utils_complain.c \\\n\tsrc/daemon/utils_complain.h \\\n\tsrc/daemon/utils_time.c \\\n\tsrc/daemon/utils_time.h\n\nlibplugin_mock_la_CPPFLAGS = $(AM_CPPFLAGS) -DMOCK_TIME\nlibplugin_mock_la_LIBADD = libcommon.la libignorelist.la $(COMMON_LIBS)\n\nlibformat_influxdb_la_SOURCES = \\\n\tsrc/utils/format_influxdb/format_influxdb.c \\\n\tsrc/utils/format_influxdb/format_influxdb.h\n\nlibformat_graphite_la_SOURCES = \\\n\tsrc/utils/format_graphite/format_graphite.c \\\n\tsrc/utils/format_graphite/format_graphite.h\n\ntest_format_graphite_SOURCES = \\\n\tsrc/utils/format_graphite/format_graphite_test.c \\\n\tsrc/testing.h\ntest_format_graphite_LDADD = \\\n\tlibformat_graphite.la \\\n\tlibmetadata.la \\\n\tlibplugin_mock.la \\\n\t-lm\n\nlibformat_json_la_SOURCES = \\\n\tsrc/utils/format_json/format_json.c \\\n\tsrc/utils/format_json/format_json.h\nlibformat_json_la_CPPFLAGS  = $(AM_CPPFLAGS)\nlibformat_json_la_LDFLAGS   = $(AM_LDFLAGS)\nlibformat_json_la_LIBADD    =\nif BUILD_WITH_LIBYAJL\nlibformat_json_la_CPPFLAGS += $(BUILD_WITH_LIBYAJL_CPPFLAGS)\nlibformat_json_la_LDFLAGS  += $(BUILD_WITH_LIBYAJL_LDFLAGS)\nlibformat_json_la_LIBADD   += $(BUILD_WITH_LIBYAJL_LIBS)\n\ncheck_PROGRAMS += test_format_json\n\ntest_format_json_SOURCES = \\\n\tsrc/utils/format_json/format_json_test.c \\\n\tsrc/testing.h\ntest_format_json_LDADD = \\\n\tlibformat_json.la \\\n\tlibmetadata.la \\\n\tlibplugin_mock.la \\\n\t-lm\nendif\n\nif BUILD_PLUGIN_CEPH\ntest_plugin_ceph_SOURCES = src/ceph_test.c\ntest_plugin_ceph_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBYAJL_CPPFLAGS)\ntest_plugin_ceph_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBYAJL_LDFLAGS)\ntest_plugin_ceph_LDADD = libplugin_mock.la $(BUILD_WITH_LIBYAJL_LIBS)\ncheck_PROGRAMS += test_plugin_ceph\nendif\n\nliblatency_la_SOURCES = \\\n\tsrc/utils/latency/latency.c \\\n\tsrc/utils/latency/latency.h \\\n\tsrc/utils/latency/latency_config.c \\\n\tsrc/utils/latency/latency_config.h\nliblatency_la_LIBADD = \\\n\tlibcommon.la \\\n\t-lm\n\ntest_utils_latency_SOURCES = \\\n\tsrc/utils/latency/latency_test.c \\\n\tsrc/testing.h\ntest_utils_latency_LDADD = \\\n\tliblatency.la \\\n\tlibplugin_mock.la \\\n\t-lm\n\nlibcmds_la_SOURCES = \\\n\tsrc/utils/cmds/cmds.c \\\n\tsrc/utils/cmds/cmds.h \\\n\tsrc/utils/cmds/flush.c \\\n\tsrc/utils/cmds/flush.h \\\n\tsrc/utils/cmds/getthreshold.c \\\n\tsrc/utils/cmds/getthreshold.h \\\n\tsrc/utils/cmds/getval.c \\\n\tsrc/utils/cmds/getval.h \\\n\tsrc/utils/cmds/listval.c \\\n\tsrc/utils/cmds/listval.h \\\n\tsrc/utils/cmds/putnotif.c \\\n\tsrc/utils/cmds/putnotif.h \\\n\tsrc/utils/cmds/putval.c \\\n\tsrc/utils/cmds/putval.h \\\n\tsrc/utils/cmds/parse_option.c \\\n\tsrc/utils/cmds/parse_option.h\nlibcmds_la_LIBADD = \\\n\tlibcommon.la \\\n\tlibmetadata.la \\\n\t-lm\n\ntest_utils_cmds_SOURCES = \\\n\tsrc/utils/cmds/cmds_test.c \\\n\tsrc/testing.h\ntest_utils_cmds_LDADD = \\\n\tlibcmds.la \\\n\tlibplugin_mock.la\n\ntest_utils_cmds_putval_SOURCES = \\\n\tsrc/utils/cmds/putval_test.c \\\n\tsrc/testing.h\ntest_utils_cmds_putval_LDADD = \\\n\tlibcmds.la \\\n\tlibplugin_mock.la\n\nliblookup_la_SOURCES = \\\n\tsrc/utils/lookup/vl_lookup.c \\\n\tsrc/utils/lookup/vl_lookup.h\nliblookup_la_LIBADD = libavltree.la\n\ntest_utils_vl_lookup_SOURCES = \\\n\tsrc/utils/lookup/vl_lookup_test.c \\\n\tsrc/testing.h\ntest_utils_vl_lookup_LDADD = \\\n\tliblookup.la \\\n\tlibplugin_mock.la\nif BUILD_WITH_LIBKSTAT\ntest_utils_vl_lookup_LDADD += -lkstat\nendif\n\nlibmount_la_SOURCES = \\\n\tsrc/utils/mount/mount.c \\\n\tsrc/utils/mount/mount.h\n\ntest_utils_mount_SOURCES = \\\n\tsrc/utils/mount/mount_test.c \\\n\tsrc/testing.h\ntest_utils_mount_LDADD = \\\n\tlibmount.la \\\n\tlibplugin_mock.la\nif BUILD_WITH_LIBKSTAT\ntest_utils_mount_LDADD += -lkstat\nendif\n\n\nlibcollectdclient_la_SOURCES = \\\n\tsrc/libcollectdclient/client.c \\\n\tsrc/libcollectdclient/network.c \\\n\tsrc/libcollectdclient/network_buffer.c \\\n\tsrc/libcollectdclient/network_parse.c \\\n\tsrc/libcollectdclient/server.c \\\n\tsrc/libcollectdclient/collectd/stdendian.h\nlibcollectdclient_la_CPPFLAGS = \\\n\t$(AM_CPPFLAGS) \\\n\t-I$(srcdir)/src/libcollectdclient \\\n\t-I$(top_builddir)/src/libcollectdclient \\\n\t-I$(srcdir)/src/daemon\nlibcollectdclient_la_LDFLAGS = -version-info 2:0:1\nlibcollectdclient_la_LIBADD = -lm\nif BUILD_WIN32\nlibcollectdclient_la_LDFLAGS += -shared -no-undefined\nlibcollectdclient_la_LIBADD += -lgnu -lws2_32 -liphlpapi\nendif\nif BUILD_WITH_LIBGCRYPT\nlibcollectdclient_la_CPPFLAGS += $(GCRYPT_CPPFLAGS)\nlibcollectdclient_la_LDFLAGS += $(GCRYPT_LDFLAGS)\nlibcollectdclient_la_LIBADD += $(GCRYPT_LIBS)\nendif\n\n# network_parse_test.c includes network_parse.c, so no need to link with\n# libcollectdclient.so.\ntest_libcollectd_network_parse_SOURCES = src/libcollectdclient/network_parse_test.c\ntest_libcollectd_network_parse_CPPFLAGS = \\\n\t$(AM_CPPFLAGS) \\\n\t-I$(srcdir)/src/libcollectdclient \\\n\t-I$(top_builddir)/src/libcollectdclient\nif BUILD_WITH_LIBGCRYPT\ntest_libcollectd_network_parse_CPPFLAGS += $(GCRYPT_CPPFLAGS)\ntest_libcollectd_network_parse_LDFLAGS = $(GCRYPT_LDFLAGS)\ntest_libcollectd_network_parse_LDADD = $(GCRYPT_LIBS)\nendif\n\nliboconfig_la_SOURCES = \\\n\tsrc/liboconfig/oconfig.c \\\n\tsrc/liboconfig/oconfig.h \\\n\tsrc/liboconfig/aux_types.h \\\n\tsrc/liboconfig/scanner.l \\\n\tsrc/liboconfig/parser.y\nliboconfig_la_CPPFLAGS = -I$(srcdir)/src/liboconfig $(AM_CPPFLAGS)\nliboconfig_la_LDFLAGS = -avoid-version $(LEXLIB)\n\nif BUILD_WITH_LIBCURL\nif BUILD_WITH_LIBSSL\nif BUILD_WITH_LIBYAJL2\nnoinst_LTLIBRARIES += liboauth.la\nliboauth_la_SOURCES = \\\n\tsrc/utils/oauth/oauth.c \\\n\tsrc/utils/oauth/oauth.h\nliboauth_la_CPPFLAGS = \\\n\t$(AM_CPPFLAGS) \\\n\t$(BUILD_WITH_LIBCURL_CFLAGS) \\\n\t$(BUILD_WITH_LIBSSL_CFLAGS) \\\n\t$(BUILD_WITH_LIBYAJL_CPPFLAGS)\nliboauth_la_LIBADD = \\\n\t$(BUILD_WITH_LIBCURL_LIBS) \\\n\t$(BUILD_WITH_LIBSSL_LIBS) \\\n\t$(BUILD_WITH_LIBYAJL_LIBS)\n\ncheck_PROGRAMS += test_utils_oauth\nTESTS += test_utils_oauth\ntest_utils_oauth_SOURCES = \\\n\tsrc/utils/oauth/oauth_test.c\ntest_utils_oauth_LDADD = \\\n\tliboauth.la \\\n\tlibcommon.la \\\n\tlibplugin_mock.la\n\nnoinst_LTLIBRARIES += libgce.la\nlibgce_la_SOURCES = \\\n\tsrc/utils/gce/gce.c \\\n\tsrc/utils/gce/gce.h\nlibgce_la_CPPFLAGS = \\\n\t$(AM_CPPFLAGS) \\\n\t$(BUILD_WITH_LIBCURL_CFLAGS)\nlibgce_la_LIBADD = \\\n\t$(BUILD_WITH_LIBCURL_LIBS)\nendif\nendif\nendif\n\nif BUILD_WITH_LIBYAJL2\nnoinst_LTLIBRARIES += libformat_stackdriver.la\nlibformat_stackdriver_la_SOURCES = \\\n\tsrc/utils/format_stackdriver/format_stackdriver.c \\\n\tsrc/utils/format_stackdriver/format_stackdriver.h\nlibformat_stackdriver_la_CPPFLAGS = \\\n\t$(AM_CPPFLAGS) \\\n\t$(BUILD_WITH_LIBYAJL_CPPFLAGS)\nlibformat_stackdriver_la_LIBADD = \\\n\tlibavltree.la \\\n\t$(BUILD_WITH_LIBSSL_LIBS) \\\n\t$(BUILD_WITH_LIBYAJL_LIBS)\n\ncheck_PROGRAMS += test_format_stackdriver\nTESTS += test_format_stackdriver\ntest_format_stackdriver_SOURCES = \\\n\tsrc/utils/format_stackdriver/format_stackdriver_test.c \\\n\tsrc/testing.h\ntest_format_stackdriver_LDADD = \\\n\tlibformat_stackdriver.la \\\n\tlibplugin_mock.la \\\n\t-lm\nendif\n\nif BUILD_PLUGIN_AGGREGATION\npkglib_LTLIBRARIES += aggregation.la\naggregation_la_SOURCES = \\\n\tsrc/aggregation.c \\\n\tsrc/utils/lookup/vl_lookup.c \\\n\tsrc/utils/lookup/vl_lookup.h\naggregation_la_LDFLAGS = $(PLUGIN_LDFLAGS)\naggregation_la_LIBADD = -lm\nendif\n\nif BUILD_PLUGIN_AMQP\npkglib_LTLIBRARIES += amqp.la\namqp_la_SOURCES = src/amqp.c\namqp_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBRABBITMQ_CPPFLAGS)\namqp_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBRABBITMQ_LDFLAGS)\namqp_la_LIBADD = \\\n\t$(BUILD_WITH_LIBRABBITMQ_LIBS) \\\n\tlibcmds.la \\\n\tlibformat_graphite.la \\\n\tlibformat_json.la\nendif\n\nif BUILD_PLUGIN_AMQP1\npkglib_LTLIBRARIES += amqp1.la\namqp1_la_SOURCES = \\\n\tsrc/amqp1.c \\\n\tsrc/utils/deq/deq.h\namqp1_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBQPIDPROTON_CPPFLAGS)\namqp1_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBQPIDPROTON_LDFLAGS)\namqp1_la_LIBADD = \\\n\t$(BUILD_WITH_LIBQPIDPROTON_LIBS) \\\n\tlibcmds.la \\\n\tlibformat_graphite.la \\\n\tlibformat_json.la\nendif\n\nif BUILD_PLUGIN_APACHE\npkglib_LTLIBRARIES += apache.la\napache_la_SOURCES = src/apache.c\napache_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBCURL_CFLAGS)\napache_la_LDFLAGS = $(PLUGIN_LDFLAGS)\napache_la_LIBADD = $(BUILD_WITH_LIBCURL_LIBS)\nendif\n\n\nif BUILD_PLUGIN_APCUPS\npkglib_LTLIBRARIES += apcups.la\napcups_la_SOURCES = src/apcups.c\napcups_la_LDFLAGS = $(PLUGIN_LDFLAGS)\napcups_la_LIBADD =\nif BUILD_WITH_LIBSOCKET\napcups_la_LIBADD += -lsocket\nendif\nendif\n\nif BUILD_PLUGIN_APPLE_SENSORS\npkglib_LTLIBRARIES += apple_sensors.la\napple_sensors_la_SOURCES = src/apple_sensors.c\napple_sensors_la_LDFLAGS = $(PLUGIN_LDFLAGS) -framework IOKit\nendif\n\nif BUILD_PLUGIN_AQUAERO\npkglib_LTLIBRARIES += aquaero.la\naquaero_la_SOURCES = src/aquaero.c\naquaero_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBAQUAERO5_CFLAGS)\naquaero_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBAQUAERO5_LDFLAGS)\naquaero_la_LIBADD = -laquaero5\nendif\n\nif BUILD_PLUGIN_ASCENT\npkglib_LTLIBRARIES += ascent.la\nascent_la_SOURCES = src/ascent.c\nascent_la_CFLAGS = \\\n\t$(AM_CFLAGS) \\\n\t$(BUILD_WITH_LIBCURL_CFLAGS) \\\n\t$(BUILD_WITH_LIBXML2_CFLAGS)\nascent_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nascent_la_LIBADD = \\\n\t$(BUILD_WITH_LIBCURL_LIBS) \\\n\t$(BUILD_WITH_LIBXML2_LIBS)\nendif\n\nif BUILD_PLUGIN_BAROMETER\npkglib_LTLIBRARIES += barometer.la\nbarometer_la_SOURCES = src/barometer.c\nbarometer_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nbarometer_la_LIBADD = -lm $(BUILD_WITH_LIBI2C_LIBS)\nendif\n\nif BUILD_PLUGIN_BATTERY\npkglib_LTLIBRARIES += battery.la\nbattery_la_SOURCES = \\\n\tsrc/battery.c \\\n\tsrc/battery_statefs.c\nbattery_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nif BUILD_WITH_LIBIOKIT\nbattery_la_LDFLAGS += -framework IOKit\nendif\nendif\n\nif BUILD_PLUGIN_BIND\npkglib_LTLIBRARIES += bind.la\nbind_la_SOURCES = src/bind.c\nbind_la_CFLAGS = $(AM_CFLAGS) \\\n\t$(BUILD_WITH_LIBCURL_CFLAGS) $(BUILD_WITH_LIBXML2_CFLAGS)\nbind_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nbind_la_LIBADD = $(BUILD_WITH_LIBCURL_LIBS) $(BUILD_WITH_LIBXML2_LIBS)\nendif\n\nif BUILD_PLUGIN_BUDDYINFO\npkglib_LTLIBRARIES += buddyinfo.la\nbuddyinfo_la_SOURCES = src/buddyinfo.c\nbuddyinfo_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nbuddyinfo_la_LIBADD = libignorelist.la\nendif\n\nif BUILD_PLUGIN_CAPABILITIES\npkglib_LTLIBRARIES += capabilities.la\ncapabilities_la_SOURCES = src/capabilities.c \\\n                          src/utils/dmi/dmi.c \\\n                          src/utils/dmi/dmi.h\ncapabilities_la_CPPFLAGS = $(AM_CPPFLAGS) \\\n\t$(BUILD_WITH_LIBMICROHTTPD_CPPFLAGS) $(BUILD_WITH_LIBJANSSON_CPPFLAGS)\ncapabilities_la_LDFLAGS = $(PLUGIN_LDFLAGS) \\\n\t$(BUILD_WITH_LIBMICROHTTPD_LDFLAGS) $(BUILD_WITH_LIBJANSSON_LDFLAGS)\ncapabilities_la_LIBADD = $(BUILD_WITH_LIBMICROHTTPD_LIBS) \\\n\t$(BUILD_WITH_LIBJANSSON_LIBS)\n\ntest_plugin_capabilities_SOURCES = \\\n        src/capabilities_test.c \\\n        src/daemon/configfile.c \\\n        src/daemon/types_list.c\ntest_plugin_capabilities_CPPFLAGS = $(AM_CPPFLAGS) \\\n        $(BUILD_WITH_LIBJANSSON_CPPFLAGS)\ntest_plugin_capabilities_LDFLAGS = $(PLUGIN_LDFLAGS) \\\n        $(BUILD_WITH_LIBJANSSON_LDFLAGS)\ntest_plugin_capabilities_LDADD = liboconfig.la libplugin_mock.la \\\n        $(BUILD_WITH_LIBJANSSON_LIBS)\ncheck_PROGRAMS += test_plugin_capabilities\nTESTS += test_plugin_capabilities\nendif\n\nif BUILD_PLUGIN_CEPH\npkglib_LTLIBRARIES += ceph.la\nceph_la_SOURCES = src/ceph.c\nceph_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBYAJL_CPPFLAGS)\nceph_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBYAJL_LDFLAGS)\nceph_la_LIBADD = $(BUILD_WITH_LIBYAJL_LIBS)\nendif\n\nif BUILD_PLUGIN_CGROUPS\npkglib_LTLIBRARIES += cgroups.la\ncgroups_la_SOURCES = src/cgroups.c\ncgroups_la_LDFLAGS = $(PLUGIN_LDFLAGS)\ncgroups_la_LIBADD = libignorelist.la libmount.la\nendif\n\nif BUILD_PLUGIN_CHRONY\npkglib_LTLIBRARIES += chrony.la\nchrony_la_SOURCES = src/chrony.c\nchrony_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nchrony_la_LIBADD = -lm\nendif\n\nif BUILD_PLUGIN_CHECK_UPTIME\npkglib_LTLIBRARIES += check_uptime.la\ncheck_uptime_la_SOURCES = src/check_uptime.c\ncheck_uptime_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_CONNECTIVITY\npkglib_LTLIBRARIES += connectivity.la\nconnectivity_la_SOURCES = src/connectivity.c\nconnectivity_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBMNL_CFLAGS)\nconnectivity_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBYAJL_CPPFLAGS)\nconnectivity_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBYAJL_LDFLAGS)\nconnectivity_la_LIBADD = $(BUILD_WITH_LIBYAJL_LIBS) $(BUILD_WITH_LIBMNL_LIBS) libignorelist.la\nendif\n\nif BUILD_PLUGIN_CONNTRACK\npkglib_LTLIBRARIES += conntrack.la\nconntrack_la_SOURCES = src/conntrack.c\nconntrack_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_CONTEXTSWITCH\npkglib_LTLIBRARIES += contextswitch.la\ncontextswitch_la_SOURCES = src/contextswitch.c\ncontextswitch_la_LDFLAGS = $(PLUGIN_LDFLAGS)\ncontextswitch_la_LIBADD =\nif BUILD_WITH_PERFSTAT\ncontextswitch_la_LIBADD += -lperfstat\nendif\nendif\n\nif BUILD_PLUGIN_CPU\npkglib_LTLIBRARIES += cpu.la\ncpu_la_SOURCES = src/cpu.c\ncpu_la_CFLAGS = $(AM_CFLAGS)\ncpu_la_LDFLAGS = $(PLUGIN_LDFLAGS)\ncpu_la_LIBADD =\nif BUILD_WITH_LIBKSTAT\ncpu_la_LIBADD += -lkstat\nendif\nif BUILD_WITH_LIBDEVINFO\ncpu_la_LIBADD += -ldevinfo\nendif\nif BUILD_WITH_LIBSTATGRAB\ncpu_la_CFLAGS += $(BUILD_WITH_LIBSTATGRAB_CFLAGS)\ncpu_la_LIBADD += $(BUILD_WITH_LIBSTATGRAB_LDFLAGS)\nendif\nif BUILD_WITH_PERFSTAT\ncpu_la_LIBADD += -lperfstat\nendif\nendif\n\nif BUILD_PLUGIN_CPUFREQ\npkglib_LTLIBRARIES += cpufreq.la\ncpufreq_la_SOURCES = src/cpufreq.c\ncpufreq_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_CPUSLEEP\npkglib_LTLIBRARIES += cpusleep.la\ncpusleep_la_SOURCES = src/cpusleep.c\ncpusleep_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_CSV\npkglib_LTLIBRARIES += csv.la\ncsv_la_SOURCES = src/csv.c\ncsv_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_CURL\npkglib_LTLIBRARIES += curl.la\ncurl_la_SOURCES = \\\n\tsrc/curl.c \\\n\tsrc/utils/curl_stats/curl_stats.c \\\n\tsrc/utils/curl_stats/curl_stats.h \\\n\tsrc/utils/match/match.c \\\n\tsrc/utils/match/match.h\ncurl_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBCURL_CFLAGS)\ncurl_la_LDFLAGS = $(PLUGIN_LDFLAGS)\ncurl_la_LIBADD = liblatency.la $(BUILD_WITH_LIBCURL_LIBS)\nendif\n\nif BUILD_PLUGIN_CURL_JSON\npkglib_LTLIBRARIES += curl_json.la\ncurl_json_la_SOURCES = \\\n\tsrc/curl_json.c \\\n\tsrc/utils/curl_stats/curl_stats.c \\\n\tsrc/utils/curl_stats/curl_stats.h\ncurl_json_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBCURL_CFLAGS)\ncurl_json_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBYAJL_CPPFLAGS)\ncurl_json_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBYAJL_LDFLAGS)\ncurl_json_la_LIBADD = $(BUILD_WITH_LIBCURL_LIBS) $(BUILD_WITH_LIBYAJL_LIBS)\n\ntest_plugin_curl_json_SOURCES = src/curl_json_test.c \\\n\t\t\t\tsrc/utils/curl_stats/curl_stats.c \\\n\t\t\t\tsrc/daemon/configfile.c \\\n\t\t\t\tsrc/daemon/types_list.c\ntest_plugin_curl_json_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBYAJL_CPPFLAGS)\ntest_plugin_curl_json_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBYAJL_LDFLAGS)\ntest_plugin_curl_json_LDADD = libavltree.la liboconfig.la libplugin_mock.la $(BUILD_WITH_LIBCURL_LIBS) $(BUILD_WITH_LIBYAJL_LIBS)\ncheck_PROGRAMS += test_plugin_curl_json\nendif\n\nif BUILD_PLUGIN_CURL_XML\npkglib_LTLIBRARIES += curl_xml.la\ncurl_xml_la_SOURCES = \\\n\tsrc/curl_xml.c \\\n\tsrc/utils/curl_stats/curl_stats.c \\\n\tsrc/utils/curl_stats/curl_stats.h\ncurl_xml_la_CFLAGS = $(AM_CFLAGS) \\\n\t\t$(BUILD_WITH_LIBCURL_CFLAGS) $(BUILD_WITH_LIBXML2_CFLAGS)\ncurl_xml_la_LDFLAGS = $(PLUGIN_LDFLAGS)\ncurl_xml_la_LIBADD = $(BUILD_WITH_LIBCURL_LIBS) $(BUILD_WITH_LIBXML2_LIBS)\nendif\n\nif BUILD_PLUGIN_DBI\npkglib_LTLIBRARIES += dbi.la\ndbi_la_SOURCES = \\\n\tsrc/dbi.c \\\n\tsrc/utils/db_query/db_query.c \\\n\tsrc/utils/db_query/db_query.h\ndbi_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBDBI_CPPFLAGS)\ndbi_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBDBI_LDFLAGS)\ndbi_la_LIBADD = $(BUILD_WITH_LIBDBI_LIBS)\nendif\n\nif BUILD_PLUGIN_DCPMM\npkglib_LTLIBRARIES += dcpmm.la\ndcpmm_la_SOURCES = src/dcpmm.c\ndcpmm_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBPMWAPI_CPPFLAGS)\ndcpmm_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBPMWAPI_LDFLAGS)\ndcpmm_la_LIBADD = -lpmwapi\nendif\n\nif BUILD_PLUGIN_DF\npkglib_LTLIBRARIES += df.la\ndf_la_SOURCES = src/df.c\ndf_la_LDFLAGS = $(PLUGIN_LDFLAGS)\ndf_la_LIBADD = libignorelist.la libmount.la\nendif\n\nif BUILD_PLUGIN_DISK\npkglib_LTLIBRARIES += disk.la\ndisk_la_SOURCES = src/disk.c\ndisk_la_CFLAGS = $(AM_CFLAGS)\ndisk_la_CPPFLAGS = $(AM_CPPFLAGS)\ndisk_la_LDFLAGS = $(PLUGIN_LDFLAGS)\ndisk_la_LIBADD = libignorelist.la\nif BUILD_WITH_LIBKSTAT\ndisk_la_LIBADD += -lkstat\nendif\nif BUILD_WITH_LIBDEVINFO\ndisk_la_LIBADD += -ldevinfo\nendif\nif BUILD_WITH_LIBIOKIT\ndisk_la_LDFLAGS += -framework IOKit\nendif\nif BUILD_WITH_LIBSTATGRAB\ndisk_la_CFLAGS += $(BUILD_WITH_LIBSTATGRAB_CFLAGS)\ndisk_la_LIBADD += $(BUILD_WITH_LIBSTATGRAB_LDFLAGS)\nendif\nif BUILD_WITH_LIBUDEV\ndisk_la_CPPFLAGS += $(BUILD_WITH_LIBUDEV_CPPFLAGS)\ndisk_la_LDFLAGS += $(BUILD_WITH_LIBUDEV_LDFLAGS)\ndisk_la_LIBADD += $(BUILD_WITH_LIBUDEV_LIBS)\nendif\nif BUILD_FREEBSD\ndisk_la_LIBADD += -ldevstat -lgeom\nendif\nif BUILD_WITH_PERFSTAT\ndisk_la_LIBADD += -lperfstat\nendif\nendif\n\nif BUILD_PLUGIN_DNS\npkglib_LTLIBRARIES += dns.la\ndns_la_SOURCES = \\\n\tsrc/dns.c \\\n\tsrc/utils/dns/dns.c \\\n\tsrc/utils/dns/dns.h\ndns_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBPCAP_CPPFLAGS)\ndns_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBPCAP_LDFLAGS)\ndns_la_LIBADD = $(BUILD_WITH_LIBPCAP_LIBS)\nendif\n\nif BUILD_PLUGIN_DPDKEVENTS\npkglib_LTLIBRARIES += dpdkevents.la\ndpdkevents_la_SOURCES = src/dpdkevents.c src/utils/dpdk/dpdk.c src/utils/dpdk/dpdk.h\ndpdkevents_la_CPPFLAGS = $(AM_CPPFLAGS) $(LIBDPDK_CPPFLAGS)\ndpdkevents_la_CFLAGS = $(AM_CFLAGS) $(LIBDPDK_CFLAGS)\ndpdkevents_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(LIBDPDK_LDFLAGS)\ndpdkevents_la_LIBADD = $(LIBDPDK_LIBS)\nendif\n\nif BUILD_PLUGIN_DPDKSTAT\npkglib_LTLIBRARIES += dpdkstat.la\ndpdkstat_la_SOURCES = src/dpdkstat.c src/utils/dpdk/dpdk.c src/utils/dpdk/dpdk.h\ndpdkstat_la_CPPFLAGS = $(AM_CPPFLAGS) $(LIBDPDK_CPPFLAGS)\ndpdkstat_la_CFLAGS = $(AM_CFLAGS) $(LIBDPDK_CFLAGS)\ndpdkstat_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(LIBDPDK_LDFLAGS)\ndpdkstat_la_LIBADD = $(LIBDPDK_LIBS)\nendif\nif BUILD_PLUGIN_DPDK_TELEMETRY\npkglib_LTLIBRARIES += dpdk_telemetry.la\ndpdk_telemetry_la_SOURCES = src/dpdk_telemetry.c\ndpdk_telemetry_la_CFLAGS = $(AM_CFLAGS)\ndpdk_telemetry_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBJANSSON_LDFLAGS)\ndpdk_telemetry_la_LIBADD = $(BUILD_WITH_LIBJANSSON_LIBS)\nendif\n\nif BUILD_PLUGIN_DRBD\npkglib_LTLIBRARIES += drbd.la\ndrbd_la_SOURCES = src/drbd.c\ndrbd_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_EMAIL\npkglib_LTLIBRARIES += email.la\nemail_la_SOURCES = src/email.c\nemail_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_ENTROPY\npkglib_LTLIBRARIES += entropy.la\nentropy_la_SOURCES = src/entropy.c\nentropy_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_EPICS\npkglib_LTLIBRARIES += epics.la\nepics_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_EPICS_BASE_CFLAGS)\nepics_la_SOURCES = src/epics.c\nepics_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nepics_la_LIBADD = -lpthread $(BUILD_WITH_EPICS_BASE_LIBS)\nendif\n\nif BUILD_PLUGIN_EXEC\npkglib_LTLIBRARIES += exec.la\nexec_la_SOURCES = src/exec.c\nexec_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nexec_la_LIBADD = libcmds.la\nendif\n\nif BUILD_PLUGIN_ETHSTAT\npkglib_LTLIBRARIES += ethstat.la\nethstat_la_SOURCES = src/ethstat.c\nethstat_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_FHCOUNT\npkglib_LTLIBRARIES += fhcount.la\nfhcount_la_SOURCES = src/fhcount.c\nfhcount_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_FILECOUNT\npkglib_LTLIBRARIES += filecount.la\nfilecount_la_SOURCES = src/filecount.c\nfilecount_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_FSCACHE\npkglib_LTLIBRARIES += fscache.la\nfscache_la_SOURCES = src/fscache.c\nfscache_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_GMOND\npkglib_LTLIBRARIES += gmond.la\ngmond_la_SOURCES = src/gmond.c\ngmond_la_CPPFLAGS = $(AM_CPPFLAGS) $(GANGLIA_CPPFLAGS)\ngmond_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(GANGLIA_LDFLAGS)\ngmond_la_LIBADD = $(GANGLIA_LIBS)\nendif\n\nif BUILD_PLUGIN_GPS\npkglib_LTLIBRARIES += gps.la\ngps_la_SOURCES = src/gps.c\ngps_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBGPS_CFLAGS)\ngps_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBGPS_LDFLAGS)\ngps_la_LIBADD = -lpthread $(BUILD_WITH_LIBGPS_LIBS)\nendif\n\nif BUILD_PLUGIN_GPU_NVIDIA\npkglib_LTLIBRARIES += gpu_nvidia.la\ngpu_nvidia_la_SOURCES = src/gpu_nvidia.c\ngpu_nvidia_la_CPPFLAGS = $(AM_CPPFLAGS) $(PLUGIN_CPPFLAGS) $(BUILD_WITH_CUDA_CPPFLAGS)\ngpu_nvidia_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_CUDA_LDFLAGS)\ngpu_nvidia_la_LIBADD = $(BUILD_WITH_CUDA_LIBS)\nendif\n\nif BUILD_PLUGIN_GRPC\npkglib_LTLIBRARIES += grpc.la\ngrpc_la_SOURCES = src/grpc.cc\nnodist_grpc_la_SOURCES = \\\n\tcollectd.grpc.pb.cc \\\n\tcollectd.pb.cc \\\n\ttypes.pb.cc\ngrpc_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBGRPCPP_CPPFLAGS) $(BUILD_WITH_LIBPROTOBUF_CPPFLAGS)\ngrpc_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBGRPCPP_LDFLAGS) $(BUILD_WITH_LIBPROTOBUF_LDFLAGS)\ngrpc_la_LIBADD = $(BUILD_WITH_LIBGRPCPP_LIBS) $(BUILD_WITH_LIBPROTOBUF_LIBS)\nendif\n\nif BUILD_PLUGIN_HDDTEMP\npkglib_LTLIBRARIES += hddtemp.la\nhddtemp_la_SOURCES = src/hddtemp.c\nhddtemp_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nhddtemp_la_LIBADD =\nif BUILD_WITH_LIBSOCKET\nhddtemp_la_LIBADD += -lsocket\nendif\nendif\n\nif BUILD_PLUGIN_HUGEPAGES\npkglib_LTLIBRARIES += hugepages.la\nhugepages_la_SOURCES = src/hugepages.c\nhugepages_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_INFINIBAND\npkglib_LTLIBRARIES += infiniband.la\ninfiniband_la_SOURCES = src/infiniband.c\ninfiniband_la_LDFLAGS = $(PLUGIN_LDFLAGS)\ninfiniband_la_LIBADD = libignorelist.la\nendif\n\nif BUILD_PLUGIN_INTEL_PMU\npkglib_LTLIBRARIES += intel_pmu.la\nintel_pmu_la_SOURCES = \\\n\tsrc/intel_pmu.c \\\n\tsrc/utils/config_cores/config_cores.h \\\n\tsrc/utils/config_cores/config_cores.c\nintel_pmu_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBJEVENTS_CPPFLAGS)\nintel_pmu_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBJEVENTS_LDFLAGS)\nintel_pmu_la_LIBADD = $(BUILD_WITH_LIBJEVENTS_LIBS)\n\ntest_plugin_intel_pmu_SOURCES = \\\n\tsrc/intel_pmu_test.c \\\n\tsrc/utils/config_cores/config_cores.c \\\n\tsrc/daemon/configfile.c \\\n\tsrc/daemon/types_list.c\ntest_plugin_intel_pmu_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBJEVENTS_CPPFLAGS)\ntest_plugin_intel_pmu_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBJEVENTS_LDFLAGS)\ntest_plugin_intel_pmu_LDADD = libplugin_mock.la liboconfig.la $(BUILD_WITH_LIBJEVENTS_LIBS)\ncheck_PROGRAMS += test_plugin_intel_pmu\nTESTS += test_plugin_intel_pmu\nendif\n\nif BUILD_PLUGIN_INTEL_RDT\npkglib_LTLIBRARIES += intel_rdt.la\nintel_rdt_la_SOURCES = \\\n\tsrc/intel_rdt.c \\\n\tsrc/utils/proc_pids/proc_pids.c \\\n\tsrc/utils/proc_pids/proc_pids.h \\\n\tsrc/utils/config_cores/config_cores.h \\\n\tsrc/utils/config_cores/config_cores.c\nintel_rdt_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBPQOS_CPPFLAGS)\nintel_rdt_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBPQOS_LDFLAGS)\nintel_rdt_la_LIBADD = $(BUILD_WITH_LIBPQOS_LIBS)\n\ntest_plugin_intel_rdt_SOURCES = \\\n\tsrc/intel_rdt_test.c \\\n\tsrc/utils/config_cores/config_cores.c \\\n\tsrc/utils/proc_pids/proc_pids.c \\\n\tsrc/daemon/configfile.c \\\n\tsrc/daemon/types_list.c\ntest_plugin_intel_rdt_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBPQOS_CPPFLAGS)\ntest_plugin_intel_rdt_LDFLAGS = $(AM_LDFLAGS) $(BUILD_WITH_LIBPQOS_LDFLAGS)\ntest_plugin_intel_rdt_LDADD = liboconfig.la libplugin_mock.la $(BUILD_WITH_LIBPQOS_LIBS)\ncheck_PROGRAMS += test_plugin_intel_rdt\nTESTS += test_plugin_intel_rdt\n\ntest_utils_proc_pids_SOURCES = \\\n\tsrc/utils/proc_pids/proc_pids_test.c \\\n\tsrc/testing.h\ntest_utils_proc_pids_LDADD = libplugin_mock.la\ncheck_PROGRAMS += test_utils_proc_pids\nTESTS += test_utils_proc_pids\nendif\n\nif BUILD_PLUGIN_INTERFACE\npkglib_LTLIBRARIES += interface.la\ninterface_la_SOURCES = src/interface.c\ninterface_la_CFLAGS = $(AM_CFLAGS)\ninterface_la_LDFLAGS = $(PLUGIN_LDFLAGS)\ninterface_la_LIBADD = libignorelist.la\nif BUILD_WITH_LIBSTATGRAB\ninterface_la_CFLAGS += $(BUILD_WITH_LIBSTATGRAB_CFLAGS)\ninterface_la_LIBADD += $(BUILD_WITH_LIBSTATGRAB_LDFLAGS)\nelse\nif BUILD_WITH_LIBKSTAT\ninterface_la_LIBADD += -lkstat\nendif\nif BUILD_WITH_LIBDEVINFO\ninterface_la_LIBADD += -ldevinfo\nendif # BUILD_WITH_LIBDEVINFO\nendif # !BUILD_WITH_LIBSTATGRAB\nif BUILD_WITH_PERFSTAT\ninterface_la_LIBADD += -lperfstat\nendif\nendif # BUILD_PLUGIN_INTERFACE\n\nif BUILD_PLUGIN_IPC\npkglib_LTLIBRARIES += ipc.la\nipc_la_SOURCES = src/ipc.c\nipc_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_IPTABLES\npkglib_LTLIBRARIES += iptables.la\niptables_la_SOURCES = src/iptables.c\niptables_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBIPTC_CPPFLAGS)\niptables_la_LDFLAGS = $(PLUGIN_LDFLAGS)\niptables_la_LIBADD = $(BUILD_WITH_LIBIPTC_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_IPMI\npkglib_LTLIBRARIES += ipmi.la\nipmi_la_SOURCES = src/ipmi.c\nipmi_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_OPENIPMI_CFLAGS)\nipmi_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nipmi_la_LIBADD = libignorelist.la $(BUILD_WITH_OPENIPMI_LIBS)\nendif\n\nif BUILD_PLUGIN_IPSTATS\npkglib_LTLIBRARIES += ipstats.la\nipstats_la_SOURCES = src/ipstats.c\nipstats_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_IPVS\npkglib_LTLIBRARIES += ipvs.la\nipvs_la_SOURCES = src/ipvs.c\nipvs_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_IRQ\npkglib_LTLIBRARIES += irq.la\nirq_la_SOURCES = src/irq.c\nirq_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nirq_la_LIBADD = libignorelist.la\nendif\n\nif BUILD_PLUGIN_JAVA\npkglib_LTLIBRARIES += java.la\njava_la_SOURCES = src/java.c\njava_la_CPPFLAGS = $(AM_CPPFLAGS) $(JAVA_CPPFLAGS)\njava_la_CFLAGS = $(AM_CFLAGS) $(JAVA_CFLAGS)\njava_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(JAVA_LDFLAGS)\njava_la_LIBADD = $(JAVA_LIBS)\nendif\n\nif BUILD_PLUGIN_LOAD\npkglib_LTLIBRARIES += load.la\nload_la_SOURCES = src/load.c\nload_la_CFLAGS = $(AM_CFLAGS)\nload_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nload_la_LIBADD =\nif BUILD_WITH_LIBSTATGRAB\nload_la_CFLAGS += $(BUILD_WITH_LIBSTATGRAB_CFLAGS)\nload_la_LIBADD += $(BUILD_WITH_LIBSTATGRAB_LDFLAGS)\nendif # BUILD_WITH_LIBSTATGRAB\nif BUILD_WITH_PERFSTAT\nload_la_LIBADD += -lperfstat\nendif\nendif # BUILD_PLUGIN_LOAD\n\nif BUILD_PLUGIN_LOGFILE\npkglib_LTLIBRARIES += logfile.la\nlogfile_la_SOURCES = src/logfile.c\nlogfile_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nlogfile_la_DEPENDENCIES = $(COMMON_DEPS)\nendif\n\nif BUILD_PLUGIN_LOGPARSER\npkglib_LTLIBRARIES += logparser.la\nlogparser_la_SOURCES = src/logparser.c \\\n\tsrc/utils/message_parser/message_parser.c src/utils/message_parser/message_parser.h \\\n\tsrc/utils_tail_match.c src/utils_tail_match.h \\\n\tsrc/utils/tail/tail.c src/utils/tail/tail.h \\\n\tsrc/utils/match/match.c src/utils/match/match.h \\\n\tsrc/utils/latency/latency.c src/utils/latency/latency.h \\\n\tsrc/utils/latency/latency_config.c src/utils/latency/latency_config.h\nlogparser_la_CPPFLAGS = $(AM_CPPFLAGS)\nlogparser_la_LDFLAGS = $(PLUGIN_LDFLAGS) -lm\n\ntest_plugin_logparser_SOURCES = src/logparser_test.c \\\n       src/utils/message_parser/message_parser.c \\\n       src/utils_tail_match.c src/utils_tail_match.h \\\n       src/utils/tail/tail.c src/utils/tail/tail.h \\\n       src/utils/match/match.c src/utils/match/match.h \\\n       src/daemon/configfile.c \\\n       src/daemon/types_list.c\ntest_plugin_logparser_CPPFLAGS = $(AM_CPPFLAGS)\ntest_plugin_logparser_LDFLAGS = $(PLUGIN_LDFLAGS)\ntest_plugin_logparser_LDADD = liboconfig.la libplugin_mock.la liblatency.la\ncheck_PROGRAMS += test_plugin_logparser\nTESTS += test_plugin_logparser\nendif\n\nif BUILD_PLUGIN_LOG_LOGSTASH\npkglib_LTLIBRARIES += log_logstash.la\nlog_logstash_la_SOURCES = src/log_logstash.c\nlog_logstash_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBYAJL_CPPFLAGS)\nlog_logstash_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBYAJL_LDFLAGS)\nlog_logstash_la_LIBADD = $(BUILD_WITH_LIBYAJL_LIBS)\nendif\n\nif BUILD_PLUGIN_LPAR\npkglib_LTLIBRARIES += lpar.la\nlpar_la_SOURCES = src/lpar.c\nlpar_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nlpar_la_LIBADD = -lperfstat\nendif\n\nif BUILD_PLUGIN_LUA\npkglib_LTLIBRARIES += lua.la\nlua_la_SOURCES = \\\n\tsrc/lua.c \\\n\tsrc/utils_lua.c \\\n\tsrc/utils_lua.h\nlua_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBLUA_CFLAGS)\nlua_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nlua_la_LIBADD = $(BUILD_WITH_LIBLUA_LIBS)\n\ntest_plugin_lua_SOURCES = src/lua_test.c src/daemon/configfile.c \\\n\tsrc/daemon/types_list.c\ntest_plugin_lua_CFLAGS = $(AM_CFLAGS) \\\n\t$(BUILD_WITH_LIBLUA_CFLAGS)\ntest_plugin_lua_LDFLAGS = $(PLUGIN_LDFLAGS) \\\n\t$(BUILD_WITH_LIBLUA_LDFLAGS)\ntest_plugin_lua_LDADD = liboconfig.la libplugin_mock.la \\\n\t$(BUILD_WITH_LIBLUA_LIBS)\ncheck_PROGRAMS += test_plugin_lua\nTESTS += test_plugin_lua\nendif\n\nif BUILD_PLUGIN_MADWIFI\npkglib_LTLIBRARIES += madwifi.la\nmadwifi_la_SOURCES = \\\n\tsrc/madwifi.c \\\n\tsrc/madwifi.h\nmadwifi_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nmadwifi_la_LIBADD = libignorelist.la\nendif\n\nif BUILD_PLUGIN_MATCH_EMPTY_COUNTER\npkglib_LTLIBRARIES += match_empty_counter.la\nmatch_empty_counter_la_SOURCES = src/match_empty_counter.c\nmatch_empty_counter_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_MATCH_HASHED\npkglib_LTLIBRARIES += match_hashed.la\nmatch_hashed_la_SOURCES = src/match_hashed.c\nmatch_hashed_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_MATCH_REGEX\npkglib_LTLIBRARIES += match_regex.la\nmatch_regex_la_SOURCES = src/match_regex.c\nmatch_regex_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_MATCH_TIMEDIFF\npkglib_LTLIBRARIES += match_timediff.la\nmatch_timediff_la_SOURCES = src/match_timediff.c\nmatch_timediff_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_MATCH_VALUE\npkglib_LTLIBRARIES += match_value.la\nmatch_value_la_SOURCES = src/match_value.c\nmatch_value_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_MBMON\npkglib_LTLIBRARIES += mbmon.la\nmbmon_la_SOURCES = src/mbmon.c\nmbmon_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nmbmon_la_LIBADD =\nif BUILD_WITH_LIBSOCKET\nmbmon_la_LIBADD += -lsocket\nendif\nendif\n\nif BUILD_PLUGIN_MCELOG\npkglib_LTLIBRARIES += mcelog.la\nmcelog_la_SOURCES = src/mcelog.c\nmcelog_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_MD\npkglib_LTLIBRARIES += md.la\nmd_la_SOURCES = src/md.c\nmd_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nmd_la_LIBADD = libignorelist.la\nendif\n\nif BUILD_PLUGIN_MDEVENTS\npkglib_LTLIBRARIES += mdevents.la\nmdevents_la_SOURCES = src/mdevents.c\nmdevents_la_CFLAGS = $(AM_FLAGS)\nmdevents_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nmdevents_la_LIBADD = libignorelist.la\n\ntest_plugin_mdevents_SOURCES = src/mdevents_test.c\ntest_plugin_mdevents_CFLAGS = $(AM_FLAGS)\ntest_plugin_mdevents_LDFLAGS = $(PLUGIN_LDFLAGS)\ntest_plugin_mdevents_LDADD = libplugin_mock.la\ncheck_PROGRAMS += test_plugin_mdevents\nTESTS += test_plugin_mdevents\nendif\n\nif BUILD_PLUGIN_MEMCACHEC\npkglib_LTLIBRARIES += memcachec.la\nmemcachec_la_SOURCES = \\\n\tsrc/memcachec.c \\\n\tsrc/utils/match/match.c \\\n\tsrc/utils/match/match.h\nmemcachec_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBMEMCACHED_CPPFLAGS)\nmemcachec_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBMEMCACHED_LDFLAGS)\nmemcachec_la_LIBADD = liblatency.la $(BUILD_WITH_LIBMEMCACHED_LIBS)\nendif\n\nif BUILD_PLUGIN_MEMCACHED\npkglib_LTLIBRARIES += memcached.la\nmemcached_la_SOURCES = src/memcached.c\nmemcached_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nmemcached_la_LIBADD =\nif BUILD_WITH_LIBSOCKET\nmemcached_la_LIBADD += -lsocket\nendif\nendif\n\nif BUILD_PLUGIN_MEMORY\npkglib_LTLIBRARIES += memory.la\nmemory_la_SOURCES = src/memory.c\nmemory_la_CFLAGS = $(AM_CFLAGS)\nmemory_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nmemory_la_LIBADD =\nif BUILD_WITH_LIBKSTAT\nmemory_la_LIBADD += -lkstat\nendif\nif BUILD_WITH_LIBDEVINFO\nmemory_la_LIBADD += -ldevinfo\nendif\nif BUILD_WITH_LIBSTATGRAB\nmemory_la_CFLAGS += $(BUILD_WITH_LIBSTATGRAB_CFLAGS)\nmemory_la_LIBADD += $(BUILD_WITH_LIBSTATGRAB_LDFLAGS)\nendif\nif BUILD_WITH_PERFSTAT\nmemory_la_LIBADD += -lperfstat\nendif\nendif\n\nif BUILD_PLUGIN_MIC\npkglib_LTLIBRARIES += mic.la\nmic_la_SOURCES = src/mic.c\nmic_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_MIC_CPPFLAGS)\nmic_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_MIC_LDFLAGS)\nmic_la_LIBADD = libignorelist.la $(BUILD_WITH_MIC_LIBS)\nendif\n\nif BUILD_PLUGIN_MODBUS\npkglib_LTLIBRARIES += modbus.la\nmodbus_la_SOURCES = src/modbus.c\nmodbus_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBMODBUS_CFLAGS)\nmodbus_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nmodbus_la_LIBADD = $(BUILD_WITH_LIBMODBUS_LIBS)\nendif\n\nif BUILD_PLUGIN_MQTT\npkglib_LTLIBRARIES += mqtt.la\nmqtt_la_SOURCES = src/mqtt.c\nmqtt_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBMOSQUITTO_CPPFLAGS)\nmqtt_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBMOSQUITTO_LDFLAGS)\nmqtt_la_LIBADD = $(BUILD_WITH_LIBMOSQUITTO_LIBS)\nendif\n\nif BUILD_PLUGIN_MMC\npkglib_LTLIBRARIES += mmc.la\nmmc_la_SOURCES = src/mmc.c\nmmc_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBUDEV_CPPFLAGS)\nmmc_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBUDEV_LDFLAGS)\nmmc_la_LIBADD = libignorelist.la $(BUILD_WITH_LIBUDEV_LIBS)\nendif\n\nif BUILD_PLUGIN_MULTIMETER\npkglib_LTLIBRARIES += multimeter.la\nmultimeter_la_SOURCES = src/multimeter.c\nmultimeter_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_MYSQL\npkglib_LTLIBRARIES += mysql.la\nmysql_la_SOURCES = src/mysql.c\nmysql_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBMYSQL_CFLAGS)\nmysql_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nmysql_la_LIBADD = $(BUILD_WITH_LIBMYSQL_LIBS)\nendif\n\nif BUILD_PLUGIN_NETAPP\npkglib_LTLIBRARIES += netapp.la\nnetapp_la_SOURCES = src/netapp.c\nnetapp_la_CPPFLAGS = $(AM_CPPFLAGS) $(LIBNETAPP_CPPFLAGS)\nnetapp_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(LIBNETAPP_LDFLAGS)\nnetapp_la_LIBADD = libignorelist.la $(LIBNETAPP_LIBS)\nendif\n\nif BUILD_PLUGIN_NETLINK\npkglib_LTLIBRARIES += netlink.la\nnetlink_la_SOURCES = src/netlink.c\nnetlink_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBMNL_CFLAGS)\nnetlink_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nnetlink_la_LIBADD = $(BUILD_WITH_LIBMNL_LIBS)\n\ntest_plugin_netlink_SOURCES = \\\n\tsrc/netlink_test.c \\\n\tsrc/daemon/configfile.c \\\n\tsrc/daemon/types_list.c\ntest_plugin_netlink_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBMNL_CFLAGS)\ntest_plugin_netlink_LDFLAGS = $(PLUGIN_LDFLAGS)\ntest_plugin_netlink_LDADD = \\\n\tliboconfig.la \\\n\tlibplugin_mock.la \\\n\t$(BUILD_WITH_LIBMNL_LIBS)\ncheck_PROGRAMS += test_plugin_netlink\nTESTS += test_plugin_netlink\nendif\n\nif BUILD_PLUGIN_NETWORK\npkglib_LTLIBRARIES += network.la\nnetwork_la_SOURCES = \\\n\tsrc/network.c \\\n\tsrc/network.h \\\n\tsrc/utils_fbhash.c \\\n\tsrc/utils_fbhash.h\nnetwork_la_CPPFLAGS = $(AM_CPPFLAGS)\nnetwork_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nnetwork_la_LIBADD =\nif BUILD_WITH_LIBSOCKET\nnetwork_la_LIBADD += -lsocket\nendif\nif BUILD_WITH_LIBGCRYPT\nnetwork_la_CPPFLAGS += $(GCRYPT_CPPFLAGS)\nnetwork_la_LDFLAGS += $(GCRYPT_LDFLAGS)\nnetwork_la_LIBADD += $(GCRYPT_LIBS)\nendif\n\ntest_plugin_network_SOURCES = \\\n\tsrc/network_test.c \\\n\tsrc/utils_fbhash.c \\\n\tsrc/daemon/configfile.c \\\n\tsrc/daemon/types_list.c\ntest_plugin_network_CPPFLAGS = $(AM_CPPFLAGS) $(GCRYPT_CPPFLAGS)\ntest_plugin_network_LDFLAGS = $(PLUGIN_LDFLAGS) $(GCRYPT_LDFLAGS)\ntest_plugin_network_LDADD = \\\n\tlibavltree.la \\\n\tliboconfig.la \\\n\tlibplugin_mock.la \\\n\tlibmetadata.la \\\n\t$(GCRYPT_LIBS)\nif BUILD_WITH_LIBSOCKET\ntest_plugin_network_LDADD += -lsocket\nendif\nif BUILD_WITH_LIBNSL\ntest_plugin_network_LDADD += -lnsl\nendif\ncheck_PROGRAMS += test_plugin_network\nendif\n\nif BUILD_PLUGIN_NFS\npkglib_LTLIBRARIES += nfs.la\nnfs_la_SOURCES = src/nfs.c\nnfs_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_NGINX\npkglib_LTLIBRARIES += nginx.la\nnginx_la_SOURCES = src/nginx.c\nnginx_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBCURL_CFLAGS)\nnginx_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nnginx_la_LIBADD = $(BUILD_WITH_LIBCURL_LIBS)\nendif\n\nif BUILD_PLUGIN_NOTIFY_DESKTOP\npkglib_LTLIBRARIES += notify_desktop.la\nnotify_desktop_la_SOURCES = src/notify_desktop.c\nnotify_desktop_la_CFLAGS = $(AM_CFLAGS) $(LIBNOTIFY_CFLAGS)\nnotify_desktop_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nnotify_desktop_la_LIBADD = $(LIBNOTIFY_LIBS)\nendif\n\nif BUILD_PLUGIN_NOTIFY_EMAIL\npkglib_LTLIBRARIES += notify_email.la\nnotify_email_la_SOURCES = src/notify_email.c\nnotify_email_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBESMTP_CPPFLAGS)\nnotify_email_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBESMTP_LDFLAGS)\nnotify_email_la_LIBADD = $(BUILD_WITH_LIBESMTP_LIBS)\nendif\n\nif BUILD_PLUGIN_NOTIFY_NAGIOS\npkglib_LTLIBRARIES += notify_nagios.la\nnotify_nagios_la_SOURCES = src/notify_nagios.c\nnotify_nagios_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_NTPD\npkglib_LTLIBRARIES += ntpd.la\nntpd_la_SOURCES = src/ntpd.c\nntpd_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nntpd_la_LIBADD =\nif BUILD_WITH_LIBSOCKET\nntpd_la_LIBADD += -lsocket\nendif\nendif\n\nif BUILD_PLUGIN_NUMA\npkglib_LTLIBRARIES += numa.la\nnuma_la_SOURCES = src/numa.c\nnuma_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_NUT\npkglib_LTLIBRARIES += nut.la\nnut_la_SOURCES = src/nut.c\nnut_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBUPSCLIENT_CFLAGS)\nnut_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nnut_la_LIBADD = $(BUILD_WITH_LIBUPSCLIENT_LIBS)\nendif\n\nif BUILD_PLUGIN_OLSRD\npkglib_LTLIBRARIES += olsrd.la\nolsrd_la_SOURCES = src/olsrd.c\nolsrd_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nolsrd_la_LIBADD =\nif BUILD_WITH_LIBSOCKET\nolsrd_la_LIBADD += -lsocket\nendif\nendif\n\nif BUILD_PLUGIN_ONEWIRE\npkglib_LTLIBRARIES += onewire.la\nonewire_la_SOURCES = src/onewire.c\nonewire_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBOWCAPI_CPPFLAGS)\nonewire_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBOWCAPI_LDFLAGS)\nonewire_la_LIBADD = libignorelist.la $(BUILD_WITH_LIBOWCAPI_LIBS)\nendif\n\nif BUILD_PLUGIN_OPENLDAP\npkglib_LTLIBRARIES += openldap.la\nopenldap_la_SOURCES = src/openldap.c\nopenldap_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBLDAP_CPPFLAGS)\nopenldap_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBLDAP_LDFLAGS)\nopenldap_la_LIBADD = -lldap\nendif\n\nif BUILD_PLUGIN_OPENVPN\npkglib_LTLIBRARIES += openvpn.la\nopenvpn_la_SOURCES = src/openvpn.c\nopenvpn_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_ORACLE\npkglib_LTLIBRARIES += oracle.la\noracle_la_SOURCES = \\\n\tsrc/oracle.c \\\n\tsrc/utils/db_query/db_query.c \\\n\tsrc/utils/db_query/db_query.h\noracle_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_ORACLE_CPPFLAGS)\noracle_la_LIBADD = $(BUILD_WITH_ORACLE_LIBS)\noracle_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_OVS_EVENTS\npkglib_LTLIBRARIES += ovs_events.la\novs_events_la_SOURCES = \\\n\tsrc/ovs_events.c \\\n\tsrc/utils/ovs/ovs.c \\\n\tsrc/utils/ovs/ovs.h\novs_events_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBYAJL_CPPFLAGS)\novs_events_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBYAJL_LDFLAGS)\novs_events_la_LIBADD = $(BUILD_WITH_LIBYAJL_LIBS)\nendif\n\nif BUILD_PLUGIN_OVS_STATS\npkglib_LTLIBRARIES += ovs_stats.la\novs_stats_la_SOURCES = \\\n\tsrc/ovs_stats.c \\\n\tsrc/utils/ovs/ovs.c \\\n\tsrc/utils/ovs/ovs.h\novs_stats_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBYAJL_CPPFLAGS)\novs_stats_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBYAJL_LDFLAGS)\novs_stats_la_LIBADD = $(BUILD_WITH_LIBYAJL_LIBS)\nendif\n\nif BUILD_PLUGIN_PCIE_ERRORS\npkglib_LTLIBRARIES += pcie_errors.la\npcie_errors_la_SOURCES = src/pcie_errors.c\npcie_errors_la_CPPFLAGS = $(AM_CPPFLAGS)\npcie_errors_la_LDFLAGS = $(PLUGIN_LDFLAGS)\n\ntest_plugin_pcie_errors_SOURCES = \\\n\tsrc/pcie_errors_test.c \\\n\tsrc/daemon/utils_llist.c \\\n\tsrc/daemon/configfile.c \\\n\tsrc/daemon/types_list.c\ntest_plugin_pcie_errors_CPPFLAGS = $(AM_CPPFLAGS)\ntest_plugin_pcie_errors_LDFLAGS = $(PLUGIN_LDFLAGS)\ntest_plugin_pcie_errors_LDADD = liboconfig.la libplugin_mock.la\ncheck_PROGRAMS += test_plugin_pcie_errors\nTESTS += test_plugin_pcie_errors\nendif\n\nif BUILD_PLUGIN_PERL\npkglib_LTLIBRARIES += perl.la\nperl_la_SOURCES = src/perl.c\n# Despite C99 providing the \"bool\" type thru stdbool.h, Perl defines its own\n# version of that type if HAS_BOOL is not defined... *sigh*\nperl_la_CPPFLAGS = $(AM_CPPFLAGS) -DHAS_BOOL=1\n# Despite off_t being 64 bit wide on 64 bit platforms, Perl insist on using\n# off64_t which is only exposed when _LARGEFILE64_SOURCE is defined... *sigh*\n# On older platforms we also need _REENTRANT. _GNU_SOURCE sets both of these.\nperl_la_CPPFLAGS += -D_GNU_SOURCE\nperl_la_CFLAGS = $(AM_CFLAGS) \\\n\t$(PERL_CFLAGS) \\\n\t-DXS_VERSION=\\\"$(VERSION)\\\" -DVERSION=\\\"$(VERSION)\\\"\nperl_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(PERL_LDFLAGS)\nperl_la_LIBADD = $(PERL_LIBS)\nendif\n\nif BUILD_PLUGIN_PF\npkglib_LTLIBRARIES += pf.la\npf_la_SOURCES = src/pf.c\npf_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nif BUILD_WITH_LIBPFCTL\npf_la_LDFLAGS += -lpfctl\nendif\nendif\n\nif BUILD_PLUGIN_PINBA\npkglib_LTLIBRARIES += pinba.la\npinba_la_SOURCES = src/pinba.c\nnodist_pinba_la_SOURCES = \\\n\tsrc/pinba.pb-c.c \\\n\tsrc/pinba.pb-c.h\npinba_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBPROTOBUF_C_CPPFLAGS)\npinba_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBPROTOBUF_C_LDFLAGS)\npinba_la_LIBADD = $(BUILD_WITH_LIBPROTOBUF_C_LIBS)\nendif\n\nif BUILD_PLUGIN_PING\npkglib_LTLIBRARIES += ping.la\nping_la_SOURCES = src/ping.c\nping_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBOPING_CPPFLAGS)\nping_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBOPING_LDFLAGS)\nping_la_LIBADD = -loping -lm\nendif\n\nif BUILD_PLUGIN_POSTGRESQL\npkglib_LTLIBRARIES += postgresql.la\npostgresql_la_SOURCES = \\\n\tsrc/postgresql.c \\\n\tsrc/utils/db_query/db_query.c \\\n\tsrc/utils/db_query/db_query.h\npostgresql_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBPQ_CPPFLAGS)\npostgresql_la_LDFLAGS = $(PLUGIN_LDFLAGS) \\\n\t$(BUILD_WITH_LIBPQ_LDFLAGS)\npostgresql_la_LIBADD = $(BUILD_WITH_LIBPQ_LIBS)\nendif\n\nif BUILD_PLUGIN_POWERDNS\npkglib_LTLIBRARIES += powerdns.la\npowerdns_la_SOURCES = src/powerdns.c\npowerdns_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_PYTHON\npkglib_LTLIBRARIES += python.la\npython_la_SOURCES = \\\n\tsrc/python.c \\\n\tsrc/pyconfig.c \\\n\tsrc/pyvalues.c \\\n\tsrc/cpython.h\npython_la_CPPFLAGS = $(AM_CPPFLAGS) $(LIBPYTHON_CPPFLAGS)\npython_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(LIBPYTHON_LDFLAGS)\nendif\n\nif HAVE_LIBMNL\nnoinst_LTLIBRARIES += libtaskstats.la\nlibtaskstats_la_SOURCES = \\\n\tsrc/utils/taskstats/taskstats.c \\\n\tsrc/utils/taskstats/taskstats.h\nlibtaskstats_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBMNL_CFLAGS)\nlibtaskstats_la_LIBADD = $(BUILD_WITH_LIBMNL_LIBS)\nendif\n\nif BUILD_PLUGIN_PROCESSES\npkglib_LTLIBRARIES += processes.la\nprocesses_la_SOURCES = src/processes.c\nprocesses_la_CPPFLAGS = $(AM_CPPFLAGS)\nprocesses_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nprocesses_la_LIBADD =\nif BUILD_WITH_LIBKVM_GETPROCS\nprocesses_la_LIBADD += -lkvm\nendif\nif HAVE_LIBMNL\nprocesses_la_CPPFLAGS += -DHAVE_LIBTASKSTATS=1\nprocesses_la_LIBADD += libtaskstats.la\nendif\nendif\n\nif BUILD_PLUGIN_PROCEVENT\npkglib_LTLIBRARIES += procevent.la\nprocevent_la_SOURCES = src/procevent.c\nprocevent_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBYAJL_CPPFLAGS)\nprocevent_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBYAJL_LDFLAGS)\nprocevent_la_LIBADD = $(BUILD_WITH_LIBYAJL_LIBS) libignorelist.la\nendif\n\nif BUILD_PLUGIN_PROTOCOLS\npkglib_LTLIBRARIES += protocols.la\nprotocols_la_SOURCES = src/protocols.c\nprotocols_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nprotocols_la_LIBADD = libignorelist.la\nendif\n\nif BUILD_PLUGIN_RAS\npkglib_LTLIBRARIES += ras.la\nras_la_SOURCES = src/ras.c\nras_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_SQLITE3_CPPFLAGS)\nras_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_SQLITE3_LDFLAGS)\nras_la_LIBADD = $(BUILD_WITH_SQLITE3_LIBS)\n\ntest_plugin_ras_SOURCES = src/ras_test.c\ntest_plugin_ras_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_SQLITE3_CPPFLAGS)\ntest_plugin_ras_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_SQLITE3_LDFLAGS)\ntest_plugin_ras_LDADD = libplugin_mock.la $(BUILD_WITH_SQLITE3_LIBS)\ncheck_PROGRAMS += test_plugin_ras\n\nendif\n\nif BUILD_PLUGIN_REDFISH\npkglib_LTLIBRARIES += redfish.la\nredfish_la_SOURCES = src/redfish.c\nredfish_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBREDFISH_CPPFLAGS)\nredfish_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBREDFISH_LDFLAGS)\nredfish_la_LIBADD = $(BUILD_WITH_LIBREDFISH_LIBS) -lredfish\n\ntest_plugin_redfish_SOURCES = src/redfish_test.c \\\n                              src/utils/avltree/avltree.c \\\n                              src/daemon/utils_llist.c \\\n                              src/daemon/configfile.c \\\n                              src/daemon/types_list.c\ntest_plugin_redfish_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBREDFISH_CPPFLAGS)\ntest_plugin_redfish_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBREDFISH_LDFLAGS)\ntest_plugin_redfish_LDADD = liboconfig.la libplugin_mock.la \\\n                            $(BUILD_WITH_LIBREDFISH_LIBS) -lredfish -ljansson\ncheck_PROGRAMS += test_plugin_redfish\nTESTS += test_plugin_redfish\nendif\n\nif BUILD_PLUGIN_REDIS\npkglib_LTLIBRARIES += redis.la\nredis_la_SOURCES = src/redis.c\nredis_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBHIREDIS_CPPFLAGS)\nredis_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBHIREDIS_LDFLAGS)\nredis_la_LIBADD = -lhiredis\nendif\n\nif BUILD_PLUGIN_ROUTEROS\npkglib_LTLIBRARIES += routeros.la\nrouteros_la_SOURCES = src/routeros.c\nrouteros_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBROUTEROS_CPPFLAGS)\nrouteros_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBROUTEROS_LDFLAGS)\nrouteros_la_LIBADD = -lrouteros\nendif\n\nif BUILD_PLUGIN_RRDCACHED\npkglib_LTLIBRARIES += rrdcached.la\nrrdcached_la_SOURCES = \\\n\tsrc/rrdcached.c \\\n\tsrc/utils/rrdcreate/rrdcreate.c \\\n\tsrc/utils/rrdcreate/rrdcreate.h\nrrdcached_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBRRD_CFLAGS)\nrrdcached_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBRRD_LDFLAGS)\nrrdcached_la_LIBADD = $(BUILD_WITH_LIBRRD_LIBS)\nendif\n\nif BUILD_PLUGIN_RRDTOOL\npkglib_LTLIBRARIES += rrdtool.la\nrrdtool_la_SOURCES = \\\n\tsrc/rrdtool.c \\\n\tsrc/utils/rrdcreate/rrdcreate.c \\\n\tsrc/utils/rrdcreate/rrdcreate.h\nrrdtool_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBRRD_CFLAGS)\nrrdtool_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBRRD_LDFLAGS)\nrrdtool_la_LIBADD = $(BUILD_WITH_LIBRRD_LIBS)\nendif\n\nif BUILD_PLUGIN_SENSORS\npkglib_LTLIBRARIES += sensors.la\nsensors_la_SOURCES = src/sensors.c\nsensors_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBSENSORS_CPPFLAGS)\nsensors_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBSENSORS_LDFLAGS)\nsensors_la_LIBADD = libignorelist.la $(BUILD_WITH_LIBSENSORS_LIBS)\nendif\n\nif BUILD_PLUGIN_SERIAL\npkglib_LTLIBRARIES += serial.la\nserial_la_SOURCES = src/serial.c\nserial_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_SIGROK\npkglib_LTLIBRARIES += sigrok.la\nsigrok_la_SOURCES = src/sigrok.c\nsigrok_la_CFLAGS = $(AM_CFLAGS) $(LIBSIGROK_CFLAGS)\nsigrok_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nsigrok_la_LIBADD = $(LIBSIGROK_LIBS)\nendif\n\nif BUILD_PLUGIN_SLURM\npkglib_LTLIBRARIES += slurm.la\nslurm_la_SOURCES = src/slurm.c\nslurm_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBSLURM_CFLAGS)\nslurm_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nslurm_la_LIBADD = $(BUILD_WITH_LIBSLURM_LIBS)\nendif\n\nif BUILD_PLUGIN_SMART\nif BUILD_WITH_LIBUDEV\npkglib_LTLIBRARIES += smart.la\nsmart_la_SOURCES = \\\n    src/smart.c \\\n    src/nvme.h \\\n    src/intel-nvme.h\nsmart_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBATASMART_CPPFLAGS) $(BUILD_WITH_LIBUDEV_CPPFLAGS)\nsmart_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBATASMART_LDFLAGS) $(BUILD_WITH_LIBUDEV_LDFLAGS)\nsmart_la_LIBADD = libignorelist.la $(BUILD_WITH_LIBATASMART_LIBS) $(BUILD_WITH_LIBUDEV_LIBS)\n\ntest_plugin_smart_SOURCES = src/smart_test.c\ntest_plugin_smart_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBATASMART_CPPFLAGS) $(BUILD_WITH_LIBUDEV_CPPFLAGS)\ntest_plugin_smart_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBATASMART_LDFLAGS) $(BUILD_WITH_LIBUDEV_LDFLAGS)\ntest_plugin_smart_LDADD = libplugin_mock.la $(BUILD_WITH_LIBATASMART_LIBS) $(BUILD_WITH_LIBUDEV_LIBS)\ncheck_PROGRAMS += test_plugin_smart\nTESTS += test_plugin_smart\nendif\nendif\n\nif BUILD_PLUGIN_SNMP\npkglib_LTLIBRARIES += snmp.la\nsnmp_la_SOURCES = src/snmp.c\nsnmp_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBNETSNMP_CPPFLAGS)\nsnmp_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBNETSNMP_LDFLAGS)\nsnmp_la_LIBADD = libignorelist.la $(BUILD_WITH_LIBNETSNMP_LIBS)\nendif\n\nif BUILD_PLUGIN_SNMP_AGENT\npkglib_LTLIBRARIES += snmp_agent.la\nsnmp_agent_la_SOURCES = src/snmp_agent.c\nsnmp_agent_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBNETSNMPAGENT_CPPFLAGS)\nsnmp_agent_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBNETSNMPAGENT_LDFLAGS)\nsnmp_agent_la_LIBADD = $(BUILD_WITH_LIBNETSNMPAGENT_LIBS)\n\ntest_plugin_snmp_agent_SOURCES = src/snmp_agent_test.c \\\n                                 src/utils/avltree/avltree.c \\\n                                 src/daemon/utils_llist.c \\\n                                 src/daemon/configfile.c \\\n                                 src/daemon/types_list.c\ntest_plugin_snmp_agent_CPPFLAGS = $(AM_CPPFLAGS) \\\n\t$(BUILD_WITH_LIBNETSNMPAGENT_CPPFLAGS)\ntest_plugin_snmp_agent_LDFLAGS = $(PLUGIN_LDFLAGS) \\\n\t$(BUILD_WITH_LIBNETSNMPAGENT_LDFLAGS)\ntest_plugin_snmp_agent_LDADD = liboconfig.la libplugin_mock.la \\\n\t$(BUILD_WITH_LIBNETSNMPAGENT_LIBS) $(BUILD_WITH_LIBNETSNMP_LIBS)\n\ncheck_PROGRAMS += test_plugin_snmp_agent\nTESTS += test_plugin_snmp_agent\n\n\nendif\n\nif BUILD_PLUGIN_STATSD\npkglib_LTLIBRARIES += statsd.la\nstatsd_la_SOURCES = src/statsd.c\nstatsd_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nstatsd_la_LIBADD = liblatency.la\nendif\n\nif BUILD_PLUGIN_SWAP\npkglib_LTLIBRARIES += swap.la\nswap_la_SOURCES = src/swap.c\nswap_la_CFLAGS = $(AM_CFLAGS)\nswap_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nswap_la_LIBADD =\nif BUILD_WITH_LIBKSTAT\nswap_la_LIBADD += -lkstat\nendif\nif BUILD_WITH_LIBDEVINFO\nswap_la_LIBADD += -ldevinfo\nendif\nif BUILD_WITH_LIBKVM_GETSWAPINFO\nswap_la_LIBADD += -lkvm\nendif\nif BUILD_WITH_LIBSTATGRAB\nswap_la_CFLAGS += $(BUILD_WITH_LIBSTATGRAB_CFLAGS)\nswap_la_LIBADD += $(BUILD_WITH_LIBSTATGRAB_LDFLAGS)\nendif\nif BUILD_WITH_PERFSTAT\nswap_la_LIBADD += -lperfstat\nendif\n\nendif\n\nif BUILD_PLUGIN_SYNPROXY\npkglib_LTLIBRARIES += synproxy.la\nsynproxy_la_SOURCES = src/synproxy.c\nsynproxy_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_SYSEVENT\npkglib_LTLIBRARIES += sysevent.la\nsysevent_la_SOURCES = src/sysevent.c\nsysevent_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBYAJL_CPPFLAGS)\nsysevent_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBYAJL_LDFLAGS)\nsysevent_la_LIBADD = $(BUILD_WITH_LIBYAJL_LIBS) libignorelist.la\nendif\n\nif BUILD_PLUGIN_SYSLOG\npkglib_LTLIBRARIES += syslog.la\nsyslog_la_SOURCES = src/syslog.c\nsyslog_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_TABLE\npkglib_LTLIBRARIES += table.la\ntable_la_SOURCES = src/table.c\ntable_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_TAIL\npkglib_LTLIBRARIES += tail.la\ntail_la_SOURCES = \\\n\tsrc/tail.c \\\n\tsrc/utils/match/match.c \\\n\tsrc/utils/match/match.h \\\n\tsrc/utils/tail/tail.c \\\n\tsrc/utils/tail/tail.h \\\n\tsrc/utils_tail_match.c \\\n\tsrc/utils_tail_match.h\ntail_la_LDFLAGS = $(PLUGIN_LDFLAGS)\ntail_la_LIBADD = liblatency.la\nendif\n\nif BUILD_PLUGIN_TAIL_CSV\npkglib_LTLIBRARIES += tail_csv.la\ntail_csv_la_SOURCES = \\\n\tsrc/tail_csv.c \\\n\tsrc/utils/tail/tail.c \\\n\tsrc/utils/tail/tail.h\ntail_csv_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_TAPE\npkglib_LTLIBRARIES += tape.la\ntape_la_SOURCES = src/tape.c\ntape_la_LDFLAGS = $(PLUGIN_LDFLAGS)\ntape_la_LIBADD = -lkstat -ldevinfo\nendif\n\nif BUILD_PLUGIN_TARGET_NOTIFICATION\npkglib_LTLIBRARIES += target_notification.la\ntarget_notification_la_SOURCES = src/target_notification.c\ntarget_notification_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_TARGET_REPLACE\npkglib_LTLIBRARIES += target_replace.la\ntarget_replace_la_SOURCES = src/target_replace.c\ntarget_replace_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_TARGET_SCALE\npkglib_LTLIBRARIES += target_scale.la\ntarget_scale_la_SOURCES = src/target_scale.c\ntarget_scale_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_TARGET_SET\npkglib_LTLIBRARIES += target_set.la\ntarget_set_la_SOURCES = src/target_set.c\ntarget_set_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_TARGET_V5UPGRADE\npkglib_LTLIBRARIES += target_v5upgrade.la\ntarget_v5upgrade_la_SOURCES = src/target_v5upgrade.c\ntarget_v5upgrade_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_TCPCONNS\npkglib_LTLIBRARIES += tcpconns.la\ntcpconns_la_SOURCES = src/tcpconns.c\ntcpconns_la_LDFLAGS = $(PLUGIN_LDFLAGS)\ntcpconns_la_LIBADD =\nif BUILD_WITH_LIBKVM_NLIST\ntcpconns_la_LIBADD += -lkvm\nendif\nendif\n\nif BUILD_PLUGIN_TEAMSPEAK2\npkglib_LTLIBRARIES += teamspeak2.la\nteamspeak2_la_SOURCES = src/teamspeak2.c\nteamspeak2_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_TED\npkglib_LTLIBRARIES += ted.la\nted_la_SOURCES = src/ted.c\nted_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_THERMAL\npkglib_LTLIBRARIES += thermal.la\nthermal_la_SOURCES = src/thermal.c\nthermal_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nthermal_la_LIBADD = libignorelist.la\nendif\n\nif BUILD_PLUGIN_THRESHOLD\npkglib_LTLIBRARIES += threshold.la\nthreshold_la_SOURCES = src/threshold.c\nthreshold_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_TOKYOTYRANT\npkglib_LTLIBRARIES += tokyotyrant.la\ntokyotyrant_la_SOURCES = src/tokyotyrant.c\ntokyotyrant_la_CPPFLAGS  = $(AM_CPPFLAGS) $(BUILD_WITH_LIBTOKYOTYRANT_CPPFLAGS)\ntokyotyrant_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBTOKYOTYRANT_LDFLAGS)\ntokyotyrant_la_LIBADD  = $(BUILD_WITH_LIBTOKYOTYRANT_LIBS)\nif BUILD_WITH_LIBSOCKET\ntokyotyrant_la_LIBADD += -lsocket\nendif\nendif\n\nif BUILD_PLUGIN_TURBOSTAT\npkglib_LTLIBRARIES += turbostat.la\nturbostat_la_SOURCES = \\\n\tsrc/turbostat.c \\\n\tsrc/msr-index.h\nturbostat_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_UBI\npkglib_LTLIBRARIES += ubi.la\nubi_la_SOURCES = src/ubi.c\nubi_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nubi_la_LIBADD = libignorelist.la\nendif\n\nif BUILD_PLUGIN_UNIXSOCK\npkglib_LTLIBRARIES += unixsock.la\nunixsock_la_SOURCES = src/unixsock.c\nunixsock_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nunixsock_la_LIBADD = libcmds.la\nendif\n\nif BUILD_PLUGIN_UPTIME\npkglib_LTLIBRARIES += uptime.la\nuptime_la_SOURCES = src/uptime.c\nuptime_la_CFLAGS = $(AM_CFLAGS)\nuptime_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nuptime_la_LIBADD =\nif BUILD_WITH_LIBKSTAT\nuptime_la_LIBADD += -lkstat\nendif\nif BUILD_WITH_PERFSTAT\nuptime_la_LIBADD += -lperfstat\nendif\nendif\n\nif BUILD_PLUGIN_USERS\npkglib_LTLIBRARIES += users.la\nusers_la_SOURCES = src/users.c\nusers_la_CFLAGS = $(AM_CFLAGS)\nusers_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nusers_la_LIBADD =\nif BUILD_WITH_LIBSTATGRAB\nusers_la_CFLAGS += $(BUILD_WITH_LIBSTATGRAB_CFLAGS)\nusers_la_LIBADD += $(BUILD_WITH_LIBSTATGRAB_LDFLAGS)\nendif\nendif\n\nif BUILD_PLUGIN_UUID\npkglib_LTLIBRARIES += uuid.la\nuuid_la_SOURCES = src/uuid.c\nuuid_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_VARNISH\npkglib_LTLIBRARIES += varnish.la\nvarnish_la_SOURCES = src/varnish.c\nvarnish_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBVARNISH_CFLAGS)\nvarnish_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nvarnish_la_LIBADD = $(BUILD_WITH_LIBVARNISH_LIBS)\nendif\n\nif BUILD_PLUGIN_VIRT\npkglib_LTLIBRARIES += virt.la\nvirt_la_SOURCES = src/virt.c\nvirt_la_CFLAGS = $(AM_CFLAGS) \\\n\t$(BUILD_WITH_LIBVIRT_CFLAGS) $(BUILD_WITH_LIBXML2_CFLAGS)\nvirt_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nvirt_la_LIBADD = libignorelist.la $(BUILD_WITH_LIBVIRT_LIBS) $(BUILD_WITH_LIBXML2_LIBS)\n\ntest_plugin_virt_SOURCES = src/virt_test.c src/daemon/configfile.c \\\n\tsrc/daemon/types_list.c\ntest_plugin_virt_CFLAGS = $(AM_CFLAGS) \\\n\t$(BUILD_WITH_LIBVIRT_CFLAGS) $(BUILD_WITH_LIBXML2_CFLAGS)\ntest_plugin_virt_LDFLAGS = $(PLUGIN_LDFLAGS) \\\n\t$(BUILD_WITH_LIBVIRT_LDFLAGS) $(BUILD_WITH_LIBXML2_LDFLAGS)\ntest_plugin_virt_LDADD = liboconfig.la libplugin_mock.la \\\n\t$(BUILD_WITH_LIBVIRT_LIBS) $(BUILD_WITH_LIBXML2_LIBS)\ncheck_PROGRAMS += test_plugin_virt\nTESTS += test_plugin_virt\nendif\n\nif BUILD_PLUGIN_VMEM\npkglib_LTLIBRARIES += vmem.la\nvmem_la_SOURCES = src/vmem.c\nvmem_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_VSERVER\npkglib_LTLIBRARIES += vserver.la\nvserver_la_SOURCES = src/vserver.c\nvserver_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_WIRELESS\npkglib_LTLIBRARIES += wireless.la\nwireless_la_SOURCES = src/wireless.c\nwireless_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_WRITE_GRAPHITE\npkglib_LTLIBRARIES += write_graphite.la\nwrite_graphite_la_SOURCES = src/write_graphite.c\nwrite_graphite_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nwrite_graphite_la_LIBADD = libformat_graphite.la\nendif\n\nif BUILD_PLUGIN_WRITE_HTTP\npkglib_LTLIBRARIES += write_http.la\nwrite_http_la_SOURCES = \\\n\tsrc/write_http.c \\\n\tsrc/utils/curl_stats/curl_stats.c \\\n\tsrc/utils/curl_stats/curl_stats.h \\\n\tsrc/utils/format_kairosdb/format_kairosdb.c \\\n\tsrc/utils/format_kairosdb/format_kairosdb.h\nwrite_http_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBCURL_CFLAGS)\nwrite_http_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nwrite_http_la_LIBADD = libformat_influxdb.la libformat_json.la $(BUILD_WITH_LIBCURL_LIBS)\nendif\n\nif BUILD_PLUGIN_WRITE_INFLUXDB_UDP\npkglib_LTLIBRARIES += write_influxdb_udp.la\nwrite_influxdb_udp_la_SOURCES = src/write_influxdb_udp.c\nwrite_influxdb_udp_la_CPPFLAGS = $(AM_CPPFLAGS)\nwrite_influxdb_udp_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nwrite_influxdb_udp_la_LIBADD = libformat_influxdb.la\nif BUILD_WITH_LIBSOCKET\nwrite_influxdb_udp_la_LIBADD += -lsocket\nendif\nendif\n\nif BUILD_PLUGIN_WRITE_KAFKA\npkglib_LTLIBRARIES += write_kafka.la\nwrite_kafka_la_SOURCES = src/write_kafka.c\nwrite_kafka_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBRDKAFKA_CPPFLAGS)\nwrite_kafka_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBRDKAFKA_LDFLAGS)\nwrite_kafka_la_LIBADD = \\\n\tlibcmds.la \\\n\tlibformat_graphite.la \\\n\tlibformat_json.la \\\n\t$(BUILD_WITH_LIBRDKAFKA_LIBS)\nendif\n\nif BUILD_PLUGIN_WRITE_LOG\npkglib_LTLIBRARIES += write_log.la\nwrite_log_la_SOURCES = src/write_log.c\nwrite_log_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nwrite_log_la_LIBADD = libformat_graphite.la libformat_json.la\nendif\n\nif BUILD_PLUGIN_WRITE_MONGODB\npkglib_LTLIBRARIES += write_mongodb.la\nwrite_mongodb_la_SOURCES = src/write_mongodb.c\nwrite_mongodb_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBMONGOC_CFLAGS)\nwrite_mongodb_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBMONGOC_LDFLAGS)\nwrite_mongodb_la_LIBADD = $(BUILD_WITH_LIBMONGOC_LIBS)\nendif\n\nif BUILD_PLUGIN_WRITE_PROMETHEUS\npkglib_LTLIBRARIES += write_prometheus.la\nwrite_prometheus_la_SOURCES = src/write_prometheus.c\nnodist_write_prometheus_la_SOURCES = \\\n\tprometheus.pb-c.c \\\n\tprometheus.pb-c.h\nwrite_prometheus_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBPROTOBUF_C_CPPFLAGS) $(BUILD_WITH_LIBMICROHTTPD_CPPFLAGS)\nwrite_prometheus_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBPROTOBUF_C_LDFLAGS) $(BUILD_WITH_LIBMICROHTTPD_LDFLAGS)\nwrite_prometheus_la_LIBADD = $(BUILD_WITH_LIBPROTOBUF_C_LIBS) $(BUILD_WITH_LIBMICROHTTPD_LIBS)\nendif\n\nif BUILD_PLUGIN_WRITE_REDIS\npkglib_LTLIBRARIES += write_redis.la\nwrite_redis_la_SOURCES = src/write_redis.c\nwrite_redis_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBHIREDIS_CPPFLAGS)\nwrite_redis_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(BUILD_WITH_LIBHIREDIS_LDFLAGS)\nwrite_redis_la_LIBADD = -lhiredis\nendif\n\nif BUILD_PLUGIN_WRITE_RIEMANN\npkglib_LTLIBRARIES += write_riemann.la\nwrite_riemann_la_SOURCES = \\\n\tsrc/write_riemann.c \\\n\tsrc/write_riemann_threshold.c \\\n\tsrc/write_riemann_threshold.h\nwrite_riemann_la_CFLAGS = $(AM_CFLAGS) $(LIBRIEMANN_CLIENT_CFLAGS)\nwrite_riemann_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(LIBRIEMANN_CLIENT_LIBS)\nendif\n\nif BUILD_PLUGIN_WRITE_SENSU\npkglib_LTLIBRARIES += write_sensu.la\nwrite_sensu_la_SOURCES = src/write_sensu.c\nwrite_sensu_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_WRITE_STACKDRIVER\npkglib_LTLIBRARIES += write_stackdriver.la\nwrite_stackdriver_la_SOURCES = src/write_stackdriver.c\nwrite_stackdriver_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nwrite_stackdriver_la_CPPFLAGS = $(AM_CPPFLAGS) $(BUILD_WITH_LIBCURL_CFLAGS)\nwrite_stackdriver_la_LIBADD = libformat_stackdriver.la libgce.la liboauth.la \\\n                     $(BUILD_WITH_LIBCURL_LIBS)\nendif\n\nif BUILD_PLUGIN_WRITE_SYSLOG\npkglib_LTLIBRARIES += write_syslog.la\nwrite_syslog_la_SOURCES = src/write_syslog.c\nwrite_syslog_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_WRITE_TSDB\npkglib_LTLIBRARIES += write_tsdb.la\nwrite_tsdb_la_SOURCES = src/write_tsdb.c\nwrite_tsdb_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_XENCPU\npkglib_LTLIBRARIES += xencpu.la\nxencpu_la_SOURCES = src/xencpu.c\nxencpu_la_CPPFLAGS = $(AM_CPPFLAGS) $(LIBXENCTL_CPPFLAGS)\nxencpu_la_LDFLAGS = $(PLUGIN_LDFLAGS) $(LIBXENCTL_LDFLAGS)\nxencpu_la_LIBADD = -lxenctrl\nendif\n\nif BUILD_PLUGIN_XMMS\npkglib_LTLIBRARIES += xmms.la\nxmms_la_SOURCES = src/xmms.c\nxmms_la_CFLAGS = $(AM_CFLAGS) $(BUILD_WITH_LIBXMMS_CFLAGS)\nxmms_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nxmms_la_LIBADD = $(BUILD_WITH_LIBXMMS_LIBS)\nendif\n\nif BUILD_PLUGIN_ZFS_ARC\npkglib_LTLIBRARIES += zfs_arc.la\nzfs_arc_la_SOURCES = src/zfs_arc.c\nzfs_arc_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nif BUILD_FREEBSD\nzfs_arc_la_LIBADD = -lm\nendif\nif BUILD_SOLARIS\nzfs_arc_la_LIBADD = -lkstat\nendif\nendif\n\nif BUILD_PLUGIN_ZOOKEEPER\npkglib_LTLIBRARIES += zookeeper.la\nzookeeper_la_SOURCES = src/zookeeper.c\nzookeeper_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nif BUILD_PLUGIN_ZONE\npkglib_LTLIBRARIES += zone.la\nzone_la_SOURCES = src/zone.c\nzone_la_LDFLAGS = $(PLUGIN_LDFLAGS)\nendif\n\nAM_V_POD2MAN_C = $(am__v_POD2MAN_C_@AM_V@)\nam__v_POD2MAN_C_ = $(am__v_POD2MAN_C_@AM_DEFAULT_V@)\nam__v_POD2MAN_C_0 = @echo \"  POD2MAN \" $@;\nam__v_POD2MAN_C_1 =\n\n.pod.1:\n\t$(AM_V_POD2MAN_C)pod2man --release=$(VERSION) --center=$(PACKAGE) $< $@\n\n.pod.5:\n\t$(AM_V_POD2MAN_C)pod2man --section=5 --release=$(VERSION) --center=$(PACKAGE) $< $@\n\nV_PROTOC = $(v_protoc_@AM_V@)\nv_protoc_ = $(v_protoc_@AM_DEFAULT_V@)\nv_protoc_0 = @echo \"  PROTOC  \" $@;\n\nAM_V_PROTOC_C = $(am__v_PROTOC_C_@AM_V@)\nam__v_PROTOC_C_ = $(am__v_PROTOC_C_@AM_DEFAULT_V@)\nam__v_PROTOC_C_0 = @echo \"  PROTOC-C\" $@;\nam__v_PROTOC_C_1 =\n\n# Protocol buffer for the \"pinba\" plugin.\nif BUILD_PLUGIN_PINBA\nBUILT_SOURCES += src/pinba.pb-c.c src/pinba.pb-c.h\n\nsrc/pinba.pb-c.c src/pinba.pb-c.h: $(srcdir)/src/pinba.proto\n\t$(AM_V_PROTOC_C)$(PROTOC_C) -I$(srcdir) --c_out . $(srcdir)/src/pinba.proto\nendif\n\n# Protocol buffer for the \"write_prometheus\" plugin.\nif BUILD_PLUGIN_WRITE_PROMETHEUS\nBUILT_SOURCES += prometheus.pb-c.c prometheus.pb-c.h\n\nprometheus.pb-c.c prometheus.pb-c.h: $(srcdir)/proto/prometheus.proto\n\t$(AM_V_PROTOC_C)$(PROTOC_C) -I$(srcdir)/proto --c_out=$(builddir) $(srcdir)/proto/prometheus.proto\nendif\n\nif HAVE_PROTOC3\nif HAVE_GRPC_CPP\nBUILT_SOURCES += collectd.grpc.pb.cc types.grpc.pb.cc collectd.pb.cc types.pb.cc\n\ncollectd.grpc.pb.cc types.grpc.pb.cc: $(srcdir)/proto/collectd.proto $(srcdir)/proto/types.proto\n\t$(V_PROTOC)$(PROTOC) -I$(srcdir)/proto \\\n\t\t--grpc_out=$(builddir) --plugin=protoc-gen-grpc=$(GRPC_CPP_PLUGIN) \\\n\t$(srcdir)/proto/collectd.proto $(srcdir)/proto/types.proto\n\ncollectd.pb.cc: $(srcdir)/proto/collectd.proto $(srcdir)/proto/types.proto\n\t$(V_PROTOC)$(PROTOC) -I$(srcdir)/proto --cpp_out=$(builddir) \\\n\t$(srcdir)/proto/collectd.proto $(srcdir)/proto/types.proto\n\ntypes.pb.cc: $(srcdir)/proto/types.proto\n\t$(V_PROTOC)$(PROTOC) -I$(srcdir)/proto --cpp_out=$(builddir) \\\n\t$(srcdir)/proto/types.proto\nendif\nendif\n\ninstall-exec-hook:\n\t$(mkinstalldirs) $(DESTDIR)$(localstatedir)/run\n\t$(mkinstalldirs) $(DESTDIR)$(localstatedir)/lib/$(PACKAGE_NAME)\n\t$(mkinstalldirs) $(DESTDIR)$(localstatedir)/log\n\t$(mkinstalldirs) $(DESTDIR)$(sysconfdir)\n\tif test -e $(DESTDIR)$(sysconfdir)/collectd.conf; \\\n\tthen \\\n\t\t$(INSTALL) -m 0640 $(builddir)/src/collectd.conf $(DESTDIR)$(sysconfdir)/collectd.conf.pkg-orig; \\\n\telse \\\n\t\t$(INSTALL) -m 0640 $(builddir)/src/collectd.conf $(DESTDIR)$(sysconfdir)/collectd.conf; \\\n\tfi; \\\n\t$(mkinstalldirs) $(DESTDIR)$(cpkgdatadir)\n\t$(INSTALL) -m 0644 $(srcdir)/src/types.db $(DESTDIR)$(cpkgdatadir)/types.db;\n\t$(INSTALL) -m 0644 $(srcdir)/src/postgresql_default.conf \\\n\t\t$(DESTDIR)$(cpkgdatadir)/postgresql_default.conf;\n\nuninstall-hook:\n\trm -f $(DESTDIR)$(cpkgdatadir)/types.db;\n\trm -f $(DESTDIR)$(sysconfdir)/collectd.conf\n\trm -f $(DESTDIR)$(cpkgdatadir)/postgresql_default.conf;\n\nall-local: @PERL_BINDINGS@\n\ninstall-exec-local:\n\t[ ! -f buildperl/Makefile ] || ( cd buildperl && $(MAKE) install )\n\n# Perl 'make uninstall' does not work as well as wanted.\n# So we do the work here.\nuninstall-local:\n\t@PERL@ -I$(DESTDIR)$(prefix) $(srcdir)/bindings/perl/uninstall_mod.pl Collectd\n\tfind $(DESTDIR)$(prefix) -name \"perllocal.pod\" -exec rm {} \\;\n\nclean-local:\n\trm -rf buildperl\n\nperl: buildperl/Makefile\n\tcd buildperl && $(MAKE)\n\nbuildperl/Makefile: .perl-directory-stamp buildperl/Makefile.PL \\\n\t$(top_builddir)/config.status\n\t@# beautify the output a bit\n\t@echo 'cd buildperl && @PERL@ Makefile.PL @PERL_BINDINGS_OPTIONS@'\n\t@cd buildperl && ( if ! @PERL@ Makefile.PL @PERL_BINDINGS_OPTIONS@; then \\\n\t\t\techo \"\"; \\\n\t\t\techo 'Check whether you have set $$PERL_MM_OPT in your environment and try using ./configure --with-perl-bindings=\"\"'; \\\n\t\t\techo \"\"; \\\n\t\tfi )\n\nbuildperl/Makefile.PL: .perl-directory-stamp $(top_builddir)/config.status\n\n.perl-directory-stamp:\n\tif test ! -d buildperl; then \\\n\t  mkdir -p buildperl/Collectd/Plugins; \\\n\t  cp $(srcdir)/bindings/perl/lib/Collectd.pm buildperl/; \\\n\t  cp $(srcdir)/bindings/perl/Makefile.PL buildperl/; \\\n\t  cp $(srcdir)/bindings/perl/lib/Collectd/Unixsock.pm buildperl/Collectd/; \\\n\t  cp $(srcdir)/bindings/perl/lib/Collectd/Plugins/OpenVZ.pm buildperl/Collectd/Plugins/; \\\n\tfi\n\ttouch $@\n\n.PHONY: perl\n\n\nif BUILD_WITH_JAVA\ndist_noinst_JAVA = \\\n\tbindings/java/org/collectd/api/Collectd.java \\\n\tbindings/java/org/collectd/api/CollectdConfigInterface.java \\\n\tbindings/java/org/collectd/api/CollectdFlushInterface.java \\\n\tbindings/java/org/collectd/api/CollectdInitInterface.java \\\n\tbindings/java/org/collectd/api/CollectdLogInterface.java \\\n\tbindings/java/org/collectd/api/CollectdMatchFactoryInterface.java \\\n\tbindings/java/org/collectd/api/CollectdMatchInterface.java \\\n\tbindings/java/org/collectd/api/CollectdNotificationInterface.java \\\n\tbindings/java/org/collectd/api/CollectdReadInterface.java \\\n\tbindings/java/org/collectd/api/CollectdShutdownInterface.java \\\n\tbindings/java/org/collectd/api/CollectdTargetFactoryInterface.java \\\n\tbindings/java/org/collectd/api/CollectdTargetInterface.java \\\n\tbindings/java/org/collectd/api/CollectdWriteInterface.java \\\n\tbindings/java/org/collectd/api/DataSet.java \\\n\tbindings/java/org/collectd/api/DataSource.java \\\n\tbindings/java/org/collectd/api/Notification.java \\\n\tbindings/java/org/collectd/api/OConfigItem.java \\\n\tbindings/java/org/collectd/api/OConfigValue.java \\\n\tbindings/java/org/collectd/api/PluginData.java \\\n\tbindings/java/org/collectd/api/ValueList.java \\\n\tbindings/java/org/collectd/java/GenericJMX.java \\\n\tbindings/java/org/collectd/java/GenericJMXConfConnection.java \\\n\tbindings/java/org/collectd/java/GenericJMXConfMBean.java \\\n\tbindings/java/org/collectd/java/GenericJMXConfValue.java \\\n\tbindings/java/org/collectd/java/JMXMemory.java\n\ncollectd-api.jar: $(JAVA_TIMESTAMP_FILE)\n\t$(JAR) cf $(JARFLAGS) $@ org/collectd/api/*.class\n\ngeneric-jmx.jar: $(JAVA_TIMESTAMP_FILE)\n\t$(JAR) cf $(JARFLAGS) $@ org/collectd/java/*.class\n\njar_DATA = collectd-api.jar generic-jmx.jar\nendif\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 40.265625,
          "content": " collectd - System information collection daemon\n=================================================\nhttps://collectd.org/\n\nAbout\n-----\n\n  collectd is a small daemon which collects system information periodically\n  and provides mechanisms to store and monitor the values in a variety of\n  ways.\n\n- [collectd - System information collection daemon](#collectd---system-information-collection-daemon)\n  - [About](#about)\n  - [Features](#features)\n  - [Operation](#operation)\n  - [collectd and chkrootkit](#collectd-and-chkrootkit)\n  - [Prerequisites](#prerequisites)\n  - [Configuring / Compiling / Installing](#configuring--compiling--installing)\n  - [Generating the configure script](#generating-the-configure-script)\n  - [Building on Windows](#building-on-windows)\n  - [Crosscompiling](#crosscompiling)\n  - [Contact](#contact)\n  - [Author](#author)\n\n\nFeatures\n--------\n\n  * collectd is able to collect the following data:\n\n    - apache\n      Apache server utilization: Number of bytes transferred, number of\n      requests handled and detailed scoreboard statistics\n\n    - apcups\n      APC UPS Daemon: UPS charge, load, input/output/battery voltage, etc.\n\n    - apple_sensors\n      Sensors in Macs running Mac OS X / Darwin: Temperature, fan speed and\n      voltage sensors.\n\n    - aquaero\n      Various sensors in the Aquaero 5 water cooling board made by Aquacomputer.\n\n    - ascent\n      Statistics about Ascent, a free server for the game \"World of Warcraft\".\n\n    - barometer\n      Reads absolute barometric pressure, air pressure reduced to sea level and\n      temperature.  Supported sensors are MPL115A2 and MPL3115 from Freescale\n      and BMP085 from Bosch.\n\n    - battery\n      Batterycharge, -current and voltage of ACPI and PMU based laptop\n      batteries.\n\n    - bind\n      Name server and resolver statistics from the `statistics-channel`\n      interface of BIND 9.5, 9,6 and later.\n\n    - buddyinfo\n      Statistics from buddyinfo file about memory fragmentation.\n\n    - capabilities\n      Platform capabilities decoded from hardware subsystems, for example from\n      SMBIOS using dmidecode.\n      <https://www.nongnu.org/dmidecode/>\n\n    - ceph\n      Statistics from the Ceph distributed storage system.\n\n    - cgroups\n      CPU accounting information for process groups under Linux.\n\n    - chrony\n      Chrony daemon statistics: Local clock drift, offset to peers, etc.\n\n    - connectivity\n      Event-based interface status.\n\n    - conntrack\n      Number of nf_conntrack entries.\n\n    - contextswitch\n      Number of context switches done by the operating system.\n\n    - cpu\n      CPU utilization: Time spent in the system, user, nice, idle, and related\n      states.\n\n    - cpufreq\n      CPU frequency (For laptops with speed step or a similar technology)\n\n    - cpusleep\n      CPU sleep: Time spent in suspend (For mobile devices which enter suspend automatically)\n\n    - curl\n      Parse statistics from websites using regular expressions.\n\n    - curl_json\n      Retrieves JSON data via cURL and parses it according to user\n      configuration.\n\n    - curl_xml\n      Retrieves XML data via cURL and parses it according to user\n      configuration.\n\n    - dbi\n      Executes SQL statements on various databases and interprets the returned\n      data.\n\n    - dcpmm\n      Collects Intel Optane DC Presistent Memory (DCPMM) performance and health statistics.\n\n    - df\n      Mountpoint usage (Basically the values `df(1)` delivers)\n\n    - disk\n      Disk utilization: Sectors read/written, number of read/write actions,\n      average time an IO-operation took to complete.\n\n    - dns\n      DNS traffic: Query types, response codes, opcodes and traffic/octets\n      transferred.\n\n    - dpdkstat\n      Collect DPDK interface statistics.\n      See docs/BUILD.dpdkstat.md for detailed build instructions.\n\n      This plugin should be compiled with compiler defenses enabled, for\n      example -fstack-protector.\n\n    - dpdk_telemetry\n      Collect DPDK interface, application and global statistics.\n      This plugin can be used as a substitute to dpdkstat plugin.\n\n      This plugin is dependent on DPDK 19.08 release and must be used\n      along with the DPDK application.\n\n      Also, this plugin has dependency on Jansson library.\n\n    - drbd\n      Collect individual drbd resource statistics.\n\n    - email\n      Email statistics: Count, traffic, spam scores and checks.\n      See collectd-email(5).\n\n    - entropy\n      Amount of entropy available to the system.\n\n    - epics\n      Collect data from EPICS message bus.\n      <https://epics-controls.org>\n\n    - ethstat\n      Network interface card statistics.\n\n    - exec\n      Values gathered by a custom program or script.\n      See collectd-exec(5).\n\n    - fhcount\n      File handles statistics.\n\n    - filecount\n      Count the number of files in directories.\n\n    - fscache\n      Linux file-system based caching framework statistics.\n\n    - gmond\n      Receive multicast traffic from Ganglia instances.\n\n    - gps\n      Monitor gps related data through gpsd.\n\n    - gpu_nvidia\n      Monitor NVIDIA GPU statistics available through NVML.\n\n    - hddtemp\n      Hard disk temperatures using hddtempd.\n\n    - hugepages\n      Report the number of used and free hugepages. More info on\n      hugepages can be found here:\n      https://www.kernel.org/doc/Documentation/vm/hugetlbpage.txt.\n\n      This plugin should be compiled with compiler defenses enabled, for\n      example -fstack-protector.\n\n    - infiniband\n      Attributes and counters for each port on each IB device.\n\n    - intel_pmu\n      The intel_pmu plugin reads performance counters provided by the Linux\n      kernel perf interface. The plugin uses jevents library to resolve named\n      events to perf events and access perf interface.\n\n    - intel_rdt\n      The intel_rdt plugin collects information provided by monitoring features\n      of Intel Resource Director Technology (Intel(R) RDT) like Cache Monitoring\n      Technology (CMT), Memory Bandwidth Monitoring (MBM). These features\n      provide information about utilization of shared resources like last level\n      cache occupancy, local memory bandwidth usage, remote memory bandwidth\n      usage, instructions per clock.\n      <https://01.org/packet-processing/cache-monitoring-technology-memory-bandwidth-monitoring-cache-allocation-technology-code-and-data>\n\n    - interface\n      Interface traffic: Number of octets, packets and errors for each\n      interface.\n\n    - ipc\n      IPC counters: semaphores used, number of allocated segments in shared\n      memory and more.\n\n    - ipmi\n      IPMI (Intelligent Platform Management Interface) sensors information.\n\n    - ipstats\n      IPv4 and IPv6; incoming, outgoing, forwarded counters. FreeBSD only.\n\n    - iptables\n      Iptables' counters: Number of bytes that were matched by a certain\n      iptables rule.\n\n    - ipvs\n      IPVS connection statistics (number of connections, octets and packets\n      for each service and destination).\n      See http://www.linuxvirtualserver.org/software/index.html.\n\n    - irq\n      IRQ counters: Frequency in which certain interrupts occur.\n\n    - java\n      Integrates a Java Virtual Machine (JVM) to execute plugins in Java\n      bytecode.\n      See docs/BUILD.java.md for detailed build instructions.\n\n    - load\n      System load average over the last 1, 5 and 15 minutes.\n\n    - lpar\n      Detailed CPU statistics of the “Logical Partitions” virtualization\n      technique built into IBM's POWER processors.\n\n    - lua\n      The Lua plugin implements a Lua interpreter into collectd. This\n      makes it possible to write plugins in Lua which are executed by\n      collectd without the need to start a heavy interpreter every interval.\n      See collectd-lua(5) for details.\n\n    - madwifi\n      Queries very detailed usage statistics from wireless LAN adapters and\n      interfaces that use the Atheros chipset and the MadWifi driver.\n\n    - mbmon\n      Motherboard sensors: temperature, fan speed and voltage information,\n      using mbmon(1).\n\n    - mcelog\n      Monitor machine check exceptions (hardware errors detected by hardware\n      and reported to software) reported by mcelog and generate appropriate\n      notifications when machine check exceptions are detected.\n\n    - md\n      Linux software-RAID device information (number of active, failed, spare\n      and missing disks).\n\n    - memcachec\n      Query and parse data from a memcache daemon (memcached).\n\n    - memcached\n      Statistics of the memcached distributed caching system.\n      <http://www.danga.com/memcached/>\n\n    - memory\n      Memory utilization: Memory occupied by running processes, page cache,\n      buffer cache and free.\n\n    - mic\n      Collects CPU usage, memory usage, temperatures and power consumption from\n      Intel Many Integrated Core (MIC) CPUs.\n\n    - mmc\n      Reads the life time estimates reported by eMMC 5.0+ devices and some more\n      detailed health metrics, like bad block and erase counts or power cycles,\n      for micron and sandisk eMMCs and some swissbit mmc Cards (MANFID=0x5D\n      OEMID=0x5342).\n\n    - modbus\n      Reads values from Modbus/TCP enabled devices. Supports reading values\n      from multiple \"slaves\" so gateway devices can be used.\n\n    - multimeter\n      Information provided by serial multimeters, such as the `Metex M-4650CR`.\n\n    - mysql\n      MariaDB and MySQL server statistics: Commands issued, handlers triggered, thread\n      usage, query cache utilization and traffic/octets sent and received.\n\n    - netapp\n      Plugin to query performance values from a NetApp storage system using the\n      “Manage ONTAP” SDK provided by NetApp.\n\n    - netlink\n      Very detailed Linux network interface and routing statistics. You can get\n      (detailed) information on interfaces, qdiscs, classes, and, if you can\n      make use of it, filters.\n\n    - network\n      Receive values that were collected by other hosts. Large setups will\n      want to collect the data on one dedicated machine, and this is the\n      plugin of choice for that.\n\n    - nfs\n      NFS Procedures: Which NFS command were called how often.\n\n    - nginx\n      Collects statistics from `nginx` (speak: engine X), a HTTP and mail\n      server/proxy.\n\n    - ntpd\n      NTP daemon statistics: Local clock drift, offset to peers, etc.\n\n    - numa\n      Information about Non-Uniform Memory Access (NUMA).\n\n    - nut\n      Network UPS tools: UPS current, voltage, power, charge, utilisation,\n      temperature, etc. See upsd(8).\n\n    - olsrd\n      Queries routing information from the “Optimized Link State Routing”\n      daemon.\n\n    - onewire (EXPERIMENTAL!)\n      Read onewire sensors using the owcapu library of the owfs project.\n      Please read in collectd.conf(5) why this plugin is experimental.\n\n    - openldap\n      Read monitoring information from OpenLDAP's cn=Monitor subtree.\n\n    - openvpn\n      RX and TX of each client in openvpn-status.log (status-version 2).\n      <http://openvpn.net/index.php/documentation/howto.html>\n\n    - oracle\n      Query data from an Oracle database.\n\n    - ovs_events\n      The plugin monitors the link status of Open vSwitch (OVS) connected\n      interfaces, dispatches the values to collectd and sends the notification\n      whenever the link state change occurs in the OVS database. It requires\n      YAJL library to be installed.\n      Detailed instructions for installing and setting up Open vSwitch, see\n      OVS documentation.\n      <http://openvswitch.org/support/dist-docs/INSTALL.rst.html>\n\n    - ovs_stats\n      The plugin collects the statistics of OVS connected bridges and\n      interfaces. It requires YAJL library to be installed.\n      Detailed instructions for installing and setting up Open vSwitch, see\n      OVS documentation.\n      <http://openvswitch.org/support/dist-docs/INSTALL.rst.html>\n\n    - pcie_errors\n      Read errors from PCI Express Device Status and AER extended capabilities.\n      <https://www.design-reuse.com/articles/38374/pcie-error-logging-and-handling-on-a-typical-soc.html>\n\n    - perl\n      The perl plugin implements a Perl-interpreter into collectd. You can\n      write your own plugins in Perl and return arbitrary values using this\n      API. See collectd-perl(5).\n\n    - pf\n      Query statistics from BSD's packet filter \"pf\".\n\n    - pinba\n      Receive and dispatch timing values from Pinba, a profiling extension for\n      PHP.\n\n    - ping\n      Network latency: Time to reach the default gateway or another given\n      host.\n\n    - postgresql\n      PostgreSQL database statistics: active server connections, transaction\n      numbers, block IO, table row manipulations.\n\n    - powerdns\n      PowerDNS name server statistics.\n\n    - processes\n      Process counts: Number of running, sleeping, zombie, ... processes.\n\n    - procevent\n      Listens for process starts and exits via netlink.\n\n    - protocols\n      Counts various aspects of network protocols such as IP, TCP, UDP, etc.\n\n    - python\n      The python plugin implements a Python interpreter into collectd. This\n      makes it possible to write plugins in Python which are executed by\n      collectd without the need to start a heavy interpreter every interval.\n      See collectd-python(5) for details.\n\n    - ras\n      The ras plugin gathers and counts errors provided by RASDaemon\n\n    - redis\n      The redis plugin gathers information from a Redis server, including:\n      uptime, used memory, total connections etc.\n\n    - routeros\n      Query interface and wireless registration statistics from RouterOS.\n\n    - rrdcached\n      RRDtool caching daemon (RRDcacheD) statistics.\n\n    - sensors\n      System sensors, accessed using lm_sensors: Voltages, temperatures and\n      fan rotation speeds.\n\n    - serial\n      RX and TX of serial interfaces. Linux only; needs root privileges.\n\n    - sigrok\n      Uses libsigrok as a backend, allowing any sigrok-supported device\n      to have its measurements fed to collectd. This includes multimeters,\n      sound level meters, thermometers, and much more.\n\n    - slurm\n      Gathers per-partition node and job state information using libslurm,\n      as well as internal health statistics.\n\n    - smart\n      Collect SMART statistics, notably load cycle count, temperature\n      and bad sectors.\n\n    - snmp\n      Read values from SNMP (Simple Network Management Protocol) enabled\n      network devices such as switches, routers, thermometers, rack monitoring\n      servers, etc. See collectd-snmp(5).\n\n    - statsd\n      Acts as a StatsD server, reading values sent over the network from StatsD\n      clients and calculating rates and other aggregates out of these values.\n\n    - sysevent\n      Listens to rsyslog events and submits matched values.\n\n    - swap\n      Pages swapped out onto hard disk or whatever is called `swap` by the OS.\n\n    - table\n      Parse table-like structured files.\n\n    - tail\n      Follows (tails) log files, parses them by lines and submits matched\n      values.\n\n    - tail_csv\n      Follows (tails) files in CSV format, parses each line and submits\n      extracted values.\n\n    - tape\n      Bytes and operations read and written on tape devices. Solaris only.\n\n    - tcpconns\n      Number of TCP connections to specific local and remote ports.\n\n    - teamspeak2\n      TeamSpeak2 server statistics.\n\n    - ted\n      Plugin to read values from \"the energy detective\" (TED).\n\n    - thermal\n      Linux ACPI thermal zone information.\n\n    - tokyotyrant\n      Reads the number of records and file size from a running Tokyo Tyrant\n      server.\n\n    - turbostat\n      Reads CPU frequency and C-state residency on modern Intel\n      turbo-capable processors.\n\n    - ubi\n      Reads the count of bad physical eraseblocks and the current\n      maximum erase counter value on UBI volumes.\n\n    - uptime\n      System uptime statistics.\n\n    - users\n      Users currently logged in.\n\n    - varnish\n      Various statistics from Varnish, an HTTP accelerator.\n\n    - virt\n      CPU, memory, disk and network I/O statistics from virtual machines.\n\n    - vmem\n      Virtual memory statistics, e.g. the number of page-ins/-outs or the\n      number of pagefaults.\n\n    - vserver\n      System resources used by Linux VServers.\n      See <http://linux-vserver.org/>.\n\n    - wireless\n      Link quality of wireless cards. Linux only.\n\n    - xencpu\n      XEN Hypervisor CPU stats.\n\n    - xmms\n      Bitrate and frequency of music played with XMMS.\n\n    - zfs_arc\n      Statistics for ZFS' “Adaptive Replacement Cache” (ARC).\n\n    - zone\n      Measures the percentage of cpu load per container (zone) under Solaris 10\n      and higher\n\n    - zookeeper\n      Read data from Zookeeper's MNTR command.\n\n  * Output can be written or sent to various destinations by the following\n    plugins:\n\n    - amqp\n      Sends JSON-encoded data to an Advanced Message Queuing Protocol (AMQP)\n      0.9.1 server, such as RabbitMQ.\n\n    - amqp1\n      Sends JSON-encoded data to an Advanced Message Queuing Protocol (AMQP)\n      1.0 server, such as Qpid Dispatch Router or Apache Artemis Broker.\n\n    - csv\n      Write to comma separated values (CSV) files. This needs lots of\n      diskspace but is extremely portable and can be analysed with almost\n      every program that can analyse anything. Even Microsoft's Excel.\n\n    - grpc\n      Send and receive values over the network using the gRPC framework.\n\n    - lua\n      It's possible to implement write plugins in Lua using the Lua\n      plugin. See collectd-lua(5) for details.\n\n    - mqtt\n      Publishes and subscribes to MQTT topics.\n\n    - network\n      Send the data to a remote host to save the data somehow. This is useful\n      for large setups where the data should be saved by a dedicated machine.\n\n    - perl\n      Of course the values are propagated to plugins written in Perl, too, so\n      you can easily do weird stuff with the plugins we didn't dare think of\n      ;) See collectd-perl(5).\n\n    - python\n      It's possible to implement write plugins in Python using the python\n      plugin. See collectd-python(5) for details.\n\n    - rrdcached\n      Output to round-robin-database (RRD) files using the RRDtool caching\n      daemon (RRDcacheD) - see `rrdcached(1)`. That daemon provides a general\n      implementation of the caching done by the `rrdtool` plugin.\n\n    - rrdtool\n      Output to round-robin-database (RRD) files using librrd. See rrdtool(1).\n      This is likely the most popular destination for such values. Since\n      updates to RRD-files are somewhat expensive this plugin can cache\n      updates to the files and write a bunch of updates at once, which lessens\n      system load a lot.\n\n    - snmp_agent\n      Receives and handles queries from SNMP master agent and returns the data\n      collected by read plugins. Handles requests only for OIDs specified in\n      configuration file. To handle SNMP queries the plugin gets data from\n      collectd and translates requested values from collectd's internal format\n      to SNMP format.\n\n    - unixsock\n      One can query the values from the unixsock plugin whenever they're\n      needed. Please read collectd-unixsock(5) for a description on how that's\n      done.\n\n    - write_graphite\n      Sends data to Carbon, the storage layer of Graphite using TCP or UDP. It\n      can be configured to avoid logging send errors (especially useful when\n      using UDP).\n\n    - write_http\n      Sends the values collected by collectd to a web-server using HTTP POST\n      requests. The transmitted data is either in a form understood by the\n      Exec plugin or formatted in JSON.\n\n    - write_kafka\n      Sends data to Apache Kafka, a distributed queue.\n\n    - write_log\n      Writes data to the log\n\n    - write_mongodb\n      Sends data to MongoDB, a NoSQL database.\n\n    - write_prometheus\n      Publish values using an embedded HTTP server, in a format compatible\n      with Prometheus' collectd_exporter.\n\n    - write_redis\n      Sends the values to a Redis key-value database server.\n\n    - write_riemann\n      Sends data to Riemann, a stream processing and monitoring system.\n\n    - write_sensu\n      Sends data to Sensu, a stream processing and monitoring system, via the\n      Sensu client local TCP socket.\n\n    - write_syslog\n      Sends data in syslog format, using TCP, where the message\n      contains the metric in human or JSON format.\n\n    - write_tsdb\n      Sends data OpenTSDB, a scalable no master, no shared state time series\n      database.\n\n  * Logging is, as everything in collectd, provided by plugins. The following\n    plugins keep us informed about what's going on:\n\n    - logfile\n      Writes log messages to a file or STDOUT/STDERR.\n\n    - perl\n      Log messages are propagated to plugins written in Perl as well.\n      See collectd-perl(5).\n\n    - python\n      It's possible to implement log plugins in Python using the python plugin.\n      See collectd-python(5) for details.\n\n    - syslog\n      Logs to the standard UNIX logging mechanism, syslog.\n\n    - log_logstash\n      Writes log messages formatted as logstash JSON events.\n\n  * Notifications can be handled by the following plugins:\n\n    - notify_desktop\n      Send a desktop notification to a notification daemon, as defined in\n      the Desktop Notification Specification. To actually display the\n      notifications, notification-daemon is required.\n      See http://www.galago-project.org/specs/notification/.\n\n    - notify_email\n      Send an E-mail with the notification message to the configured\n      recipients.\n\n    - notify_nagios\n      Submit notifications as passive check results to a local nagios instance.\n\n    - exec\n      Execute a program or script to handle the notification.\n      See collectd-exec(5).\n\n    - logfile\n      Writes the notification message to a file or STDOUT/STDERR.\n\n    - network\n      Send the notification to a remote host to handle it somehow.\n\n    - perl\n      Notifications are propagated to plugins written in Perl as well.\n      See collectd-perl(5).\n\n    - python\n      It's possible to implement notification plugins in Python using the\n      python plugin. See collectd-python(5) for details.\n\n  * Value processing can be controlled using the \"filter chain\" infrastructure\n    and \"matches\" and \"targets\". The following plugins are available:\n\n    - match_empty_counter\n      Match counter values which are currently zero.\n\n    - match_hashed\n      Match values using a hash function of the hostname.\n\n    - match_regex\n      Match values by their identifier based on regular expressions.\n\n    - match_timediff\n      Match values with an invalid timestamp.\n\n    - match_value\n      Select values by their data sources' values.\n\n    - target_notification\n      Create and dispatch a notification.\n\n    - target_replace\n      Replace parts of an identifier using regular expressions.\n\n    - target_scale\n      Scale (multiply) values by an arbitrary value.\n\n    - target_set\n      Set (overwrite) entire parts of an identifier.\n\n  * Miscellaneous plugins:\n\n    - aggregation\n      Selects multiple value lists based on patterns or regular expressions\n      and creates new aggregated values lists from those.\n\n    - threshold\n      Checks values against configured thresholds and creates notifications if\n      values are out of bounds. See collectd-threshold(5) for details.\n\n    - uuid\n      Sets the hostname to a unique identifier. This is meant for setups\n      where each client may migrate to another physical host, possibly going\n      through one or more name changes in the process.\n\n  * Performance: Since collectd is running as a daemon it doesn't spend much\n    time starting up again and again. With the exception of the exec plugin no\n    processes are forked. Caching in output plugins, such as the rrdtool and\n    network plugins, makes sure your resources are used efficiently. Also,\n    since collectd is programmed multithreaded it benefits from hyper-threading\n    and multicore processors and makes sure that the daemon isn't idle if only\n    one plugin waits for an IO-operation to complete.\n\n  * Once set up, hardly any maintenance is necessary. Setup is kept as easy\n    as possible and the default values should be okay for most users.\n\n\nOperation\n---------\n\n  * collectd's configuration file can be found at `sysconfdir/collectd.conf`.\n    Run `collectd -h` for a list of built-in defaults. See `collectd.conf(5)`\n    for a list of options and a syntax description.\n\n  * When the `csv` or `rrdtool` plugins are loaded they'll write the values to\n    files. The usual place for these files is beneath `/var/lib/collectd`.\n\n  * When using some of the plugins, collectd needs to run as user root, since\n    only root can do certain things, such as craft ICMP packages needed to ping\n    other hosts. collectd should NOT be installed setuid root since it can be\n    used to overwrite valuable files!\n\n  * Sample scripts to generate graphs reside in `contrib/` in the source\n    package or somewhere near `/usr/share/doc/collectd` in most distributions.\n    Please be aware that those script are meant as a starting point for your\n    own experiments. Some of them require the `RRDs` Perl module.\n    (`librrds-perl` on Debian) If you have written a more sophisticated\n    solution please share it with us.\n\n  * The RRAs of the automatically created RRD files depend on the `step`\n    and `heartbeat` settings given. If change these settings you may need to\n    re-create the files, losing all data. Please be aware of that when changing\n    the values and read the rrdtool(1) manpage thoroughly.\n\n\ncollectd and chkrootkit\n-----------------------\n\n  If you are using the `dns` plugin, `chkrootkit(1)` will report `collectd` as a\n  packet sniffer (`<iface>: PACKET SNIFFER(/usr/sbin/collectd[<pid>])`). The\n  plugin captures all UDP packets on port 53 to analyze the DNS traffic. In\n  this case, collectd is a legitimate sniffer and the report should be\n  considered to be a false positive. However, you might want to check that\n  this really is collectd and not some other, illegitimate sniffer.\n\n\nPrerequisites\n-------------\n\n  To compile collectd from source you will need:\n\n  * Usual suspects: C compiler, linker, preprocessor, make, ...\n\n    collectd makes use of some common C99 features, e.g. compound literals and\n    mixed declarations, and therefore requires a C99 compatible compiler.\n\n    On Debian and Ubuntu, the \"build-essential\" package should pull in\n    everything that's necessary.\n\n  * A POSIX-threads (pthread) implementation.\n    Since gathering some statistics is slow (network connections, slow devices,\n    etc) collectd is parallelized. The POSIX threads interface is being\n    used and should be found in various implementations for hopefully all\n    platforms.\n\n  * When building from the Git repository, flex (tokenizer) and bison (parser\n    generator) are required. Release tarballs include the generated files – you\n    don't need these packages in that case.\n\n  * aerotools-ng (optional)\n    Used by the `aquaero` plugin. Currently, the `libaquaero5` library, which\n    is used by the `aerotools-ng` toolkit, is not compiled as a shared object\n    nor does it feature an installation routine. Therefore, you need to point\n    collectd's configure script at the source directory of the `aerotools-ng`\n    project.\n    <https://github.com/lynix/aerotools-ng>\n\n  * CoreFoundation.framework and IOKit.framework (optional)\n    For compiling on Darwin in general and the `apple_sensors` plugin in\n    particular.\n    <http://developer.apple.com/corefoundation/>\n\n  * CUDA (optional)\n    Used by the `gpu_nvidia` plugin\n    <https://developer.nvidia.com/cuda-downloads>\n\n  * libatasmart (optional)\n    Used by the `smart` plugin.\n    <http://git.0pointer.de/?p=libatasmart.git>\n\n  * libcap (optional)\n    The `turbostat` plugin can optionally build Linux Capabilities support,\n    which avoids full privileges requirement (aka. running as root) to read\n    values.\n    <http://sites.google.com/site/fullycapable/>\n\n  * libclntsh (optional)\n    Used by the `oracle` plugin.\n\n  * libhiredis (optional)\n    Used by the `redis` plugin. Please note that you require a 0.10.0 version\n    or higher. <https://github.com/redis/hiredis>\n\n  * libcurl (optional)\n    If you want to use the `apache`, `ascent`, `bind`, `curl`, `curl_json`,\n    `curl_xml`, `nginx`, or `write_http` plugin.\n    <http://curl.haxx.se/>\n\n  * libdbi (optional)\n    Used by the `dbi` plugin to connect to various databases.\n    <http://libdbi.sourceforge.net/>\n\n  * libesmtp (optional)\n    For the `notify_email` plugin.\n    <http://www.stafford.uklinux.net/libesmtp/>\n\n  * libganglia (optional)\n    Used by the `gmond` plugin to process data received from Ganglia.\n    <http://ganglia.info/>\n\n  * libgrpc (optional)\n    Used by the `grpc` plugin. gRPC requires a C++ compiler supporting the\n    C++11 standard.\n    <https://grpc.io/>\n\n  * libgcrypt (optional)\n    Used by the `network` plugin for encryption and authentication.\n    <http://www.gnupg.org/>\n\n  * libgps (optional)\n    Used by the `gps` plugin.\n    <http://developer.berlios.de/projects/gpsd/>\n\n  * libi2c-dev (optional)\n    Used for the plugin `barometer`, provides just the `i2c-dev.h` header file\n    for user space i2c development.\n\n  * libiptc (optional)\n    For querying iptables counters.\n    <http://netfilter.org/>\n\n  * libjansson (optional)\n    Parse JSON data. This is used for the `capabilities` and `dpdk_telemetry` plugins.\n    <http://www.digip.org/jansson/>\n\n  * libjevents (optional)\n    The jevents library is used by the `intel_pmu` plugin to access the Linux\n    kernel perf interface.\n    Note: the library should be build with `-fPIC` flag to be linked with\n    intel_pmu shared object correctly.\n    <https://github.com/andikleen/pmu-tools>\n\n  * libjvm (optional)\n    Library that encapsulates the Java Virtual Machine (JVM). This library is\n    used by the `java` plugin to execute Java bytecode.\n    See docs/BUILD.java.md for detailed build instructions.\n    <http://openjdk.java.net/> (and others)\n\n  * libldap (optional)\n    Used by the `openldap` plugin.\n    <http://www.openldap.org/>\n\n  * liblua (optional)\n    Used by the `lua` plugin. Currently, Lua 5.1 and later are supported.\n    <https://www.lua.org/>\n\n  * libmemcached (optional)\n    Used by the `memcachec` plugin to connect to a memcache daemon.\n    <http://tangent.org/552/libmemcached.html>\n\n  * libmicrohttpd (optional)\n    Used by the write_prometheus plugin to run an http daemon.\n    <http://www.gnu.org/software/libmicrohttpd/>\n\n  * libmnl (optional)\n    Used by the `netlink` plugin.\n    <http://www.netfilter.org/projects/libmnl/>\n\n  * libmodbus (optional)\n    Used by the `modbus` plugin to communicate with Modbus/TCP devices. The\n    `modbus` plugin works with version 2.0.3 of the library – due to frequent\n    API changes other versions may or may not compile cleanly.\n    <http://www.libmodbus.org/>\n\n  * libmysqlclient (optional)\n    Unsurprisingly used by the `mysql` plugin.\n    <http://dev.mysql.com/>\n\n  * libnetapp (optional)\n    Required for the `netapp` plugin.\n    This library is part of the “Manage ONTAP SDK” published by NetApp.\n\n  * libnetsnmp (optional)\n    For the `snmp` and `snmp_agent` plugins.\n    <http://www.net-snmp.org/>\n\n  * libnetsnmpagent (optional)\n    Required for the `snmp_agent` plugin.\n    <http://www.net-snmp.org/>\n\n  * libnotify (optional)\n    For the `notify_desktop` plugin.\n    <http://www.galago-project.org/>\n\n  * libopenipmi (optional)\n    Used by the `ipmi` plugin to prove IPMI devices.\n    <http://openipmi.sourceforge.net/>\n\n  * liboping (optional)\n    Used by the `ping` plugin to send and receive ICMP packets.\n    <http://octo.it/liboping/>\n\n  * libowcapi (optional)\n    Used by the `onewire` plugin to read values from onewire sensors (or the\n    owserver(1) daemon).\n    <http://www.owfs.org/>\n\n  * libpcap (optional)\n    Used to capture packets by the `dns` plugin.\n    <http://www.tcpdump.org/>\n\n  * libperfstat (optional)\n    Used by various plugins to gather statistics under AIX.\n\n  * libperl (optional)\n    Obviously used by the `perl` plugin. The library has to be compiled with\n    ithread support (introduced in Perl 5.6.0).\n    <http://www.perl.org/>\n\n  * libpmwapi (optional)\n    Used by the `dcpmm` plugin.\n    The library github: https://github.com/intel/intel-pmwatch\n    Follow the pmwatch build instructions mentioned for dcpmm plugin and\n    use the install path to resolve the dependency here.\n\n  * libpq (optional)\n    The PostgreSQL C client library used by the `postgresql` plugin.\n    <http://www.postgresql.org/>\n\n  * libpqos (optional)\n    The PQoS library for Intel(R) Resource Director Technology used by the\n    `intel_rdt` plugin.\n    <https://github.com/01org/intel-cmt-cat>\n\n  * libprotobuf, protoc 3.0+ (optional)\n    Used by the `grpc` plugin to generate service stubs and code to handle\n    network packets of collectd's protobuf-based network protocol.\n    <https://developers.google.com/protocol-buffers/>\n\n  * libprotobuf-c, protoc-c (optional)\n    Used by the `pinba` plugin to generate a parser for the network packets\n    sent by the Pinba PHP extension.\n    <http://code.google.com/p/protobuf-c/>\n\n  * libpython (optional)\n    Used by the `python` plugin. Currently, Python 2.6 and later and Python 3\n    are supported.\n    <http://www.python.org/>\n\n  * libqpid-proton (optional)\n    Used by the `amqp1` plugin for AMQP 1.0 connections, for example to\n    Qdrouterd.\n    <http://qpid.apache.org/>\n\n  * librabbitmq (optional; also called “rabbitmq-c”)\n    Used by the `amqp` plugin for AMQP 0.9.1 connections, for example to\n    RabbitMQ.\n    <http://hg.rabbitmq.com/rabbitmq-c/>\n\n  * librdkafka (optional; also called “rdkafka”)\n    Used by the `write_kafka` plugin for producing messages and sending them\n    to a Kafka broker.\n    <https://github.com/edenhill/librdkafka>\n\n  * librouteros (optional)\n    Used by the `routeros` plugin to connect to a device running _RouterOS_.\n    <http://octo.it/librouteros/>\n\n  * librrd (optional)\n    Used by the `rrdtool` and `rrdcached` plugins. The latter requires RRDtool\n    client support which was added after version 1.3 of RRDtool. Versions 1.0,\n    1.2 and 1.3 are known to work with the `rrdtool` plugin.\n    <http://oss.oetiker.ch/rrdtool/>\n\n  * librt, libsocket, libkstat, libdevinfo (optional)\n    Various standard Solaris libraries which provide system functions.\n    <http://developers.sun.com/solaris/>\n\n  * libsensors (optional)\n    To read from `lm_sensors`, see the `sensors` plugin.\n    <http://www.lm-sensors.org/>\n\n  * libsigrok (optional)\n    Used by the `sigrok` plugin. In addition, `libsigrok` depends on `glib`,\n    `libzip`, and optionally (depending on which drivers are enabled) on\n    `libusb`, `libftdi` and `libudev`.\n\n  * libslurm (optional)\n    Used by the `slurm` plugin.\n    <https://slurm.schedmd.com/>\n\n  * libsqlite3 (optional)\n    Used by the `ras` plugin.\n    <https://sqlite.org/>\n\n  * libstatgrab (optional)\n    Used by various plugins to collect statistics on systems other than Linux\n    and/or Solaris.\n    <http://www.i-scream.org/libstatgrab/>\n\n  * libtokyotyrant (optional)\n    Used by the `tokyotyrant` plugin.\n    <http://1978th.net/tokyotyrant/>\n\n  * libupsclient/nut (optional)\n    For the `nut` plugin which queries nut's `upsd`.\n    <http://networkupstools.org/>\n\n  * libvirt (optional)\n    Collect statistics from virtual machines.\n    <http://libvirt.org/>\n\n  * libxml2 (optional)\n    Parse XML data. This is needed for the `ascent`, `bind`, `curl_xml` and\n    `virt` plugins.\n    <http://xmlsoft.org/>\n\n  * libxen (optional)\n    Used by the `xencpu` plugin.\n    <http://xenbits.xensource.com/>\n\n  * libxmms (optional)\n    <http://www.xmms.org/>\n\n  * libyajl (optional)\n    Parse JSON data. This is needed for the `ceph`, `curl_json`, `ovs_events`,\n    `ovs_stats` and `log_logstash` plugins.\n    <http://github.com/lloyd/yajl>\n\n  * libvarnish (optional)\n     Fetches statistics from a Varnish instance. This is needed for the\n     `varnish` plugin.\n     <http://varnish-cache.org>\n\n  * riemann-c-client (optional)\n     For the `write_riemann` plugin.\n     <https://github.com/algernon/riemann-c-client>\n\nConfiguring / Compiling / Installing\n------------------------------------\n\n  To configure, build and install collectd with the default settings, run\n  `./configure && make && make install`.  For a complete list of configure\n  options and their description, run `./configure --help`.\n\n  By default, the configure script will check for all build dependencies and\n  disable all plugins whose requirements cannot be fulfilled (any other plugin\n  will be enabled). To enable a plugin, install missing dependencies (see\n  section [Prerequisites](#prerequisites) above) and rerun `configure`. If you specify the\n  `--enable-<plugin>` configure option, the script will fail if the depen-\n  dencies for the specified plugin are not met. In that case you can force the\n  plugin to be built using the `--enable-<plugin>=force` configure option.\n  This will most likely fail though unless you're working in a very unusual\n  setup and you really know what you're doing. If you specify the\n  `--disable-<plugin>` configure option, the plugin will not be built. If you\n  specify the `--enable-all-plugins` or `--disable-all-plugins` configure\n  options, all plugins will be enabled or disabled respectively by default.\n  Explicitly enabling or disabling a plugin overwrites the default for the\n  specified plugin. These options are meant for package maintainers and should\n  not be used in everyday situations.\n\n  By default, collectd will be installed into `/opt/collectd`. You can adjust\n  this setting by specifying the `--prefix` configure option - see INSTALL for\n  details. If you pass `DESTDIR=<path>` to `make install`, `<path>` will be\n  prefixed to all installation directories. This might be useful when creating\n  packages for collectd.\n\nGenerating the configure script\n-------------------------------\n\nCollectd ships with a `build.sh` script to generate the `configure`\nscript shipped with releases.\n\nTo generate the `configure` script, you'll need the following dependencies:\n\n- autoconf\n- automake\n- flex\n- bison\n- libtool\n- pkg-config\n\nThe `build.sh` script takes no arguments.\n\n\nBuilding on Windows\n-----------------------------------------------\n\nCollectd can be built on Windows using Cygwin, and the result is a binary that\nruns natively on Windows. That is, Cygwin is only needed for building, not running,\ncollectd.\n\nYou will need to install the following Cygwin packages:\n- automake\n- bison\n- flex\n- git\n- libtool\n- make\n- mingw64-x86_64-dlfcn\n- mingw64-x86_64-gcc-core\n- mingw64-x86_64-zlib\n- pkg-config\n\nTo build, just run the `build.sh` script in your Cygwin terminal. By default, it installs\nto \"C:/Program Files/collectd\". You can change the location by setting the INSTALL_DIR\nvariable:\n\n$ export INSTALL_DIR=\"C:/some/other/install/directory\"\n$ ./build.sh\n\nor:\n\n$ INSTALL_DIR=\"C:/some/other/install/directory\" ./build.sh\n\n\nCrosscompiling\n--------------\n\n  To compile correctly collectd needs to be able to initialize static\n  variables to NAN (Not A Number). Some C libraries, especially the GNU\n  libc, have a problem with that.\n\n  Luckily, with GCC it's possible to work around that problem: One can define\n  NAN as being (0.0 / 0.0) and `isnan` as `f != f`. However, to test this\n  \"implementation\" the configure script needs to compile and run a short\n  test program. Obviously running a test program when doing a cross-\n  compilation is, well, challenging.\n\n  If you run into this problem, you can use the `--with-nan-emulation`\n  configure option to force the use of this implementation. We can't promise\n  that the compiled binary actually behaves as it should, but since NANs\n  are likely never passed to the libm you have a good chance to be lucky.\n\n  Likewise, collectd needs to know the layout of doubles in memory, in order\n  to craft uniform network packets over different architectures. For this, it\n  needs to know how to convert doubles into the memory layout used by x86. The\n  configure script tries to figure this out by compiling and running a few\n  small test programs. This is of course not possible when cross-compiling.\n  You can use the `--with-fp-layout` option to tell the configure script which\n  conversion method to assume. Valid arguments are:\n\n    * `nothing`    (12345678 -> 12345678)\n    * `endianflip` (12345678 -> 87654321)\n    * `intswap`    (12345678 -> 56781234)\n\n\nContact\n-------\n\n  Please use GitHub to report bugs and submit pull requests:\n  <https://github.com/collectd/collectd/>.\n  See CONTRIBUTING.md for details.\n\n  For questions, development information and basically all other concerns please\n  send an email to collectd's mailing list at\n  (list at collectd.org).\n\n  For live discussion and more personal contact visit us in IRC, we're in\n  channel #collectd on freenode.\n\n\nAuthor\n------\n\n  Florian octo Forster (octo at collectd.org),\n  Sebastian tokkee Harl (sh at tokkee.org),\n  and many other [authors](AUTHORS) and [contributors](https://github.com/collectd/collectd/graphs/contributors).\n"
        },
        {
          "name": "bindings",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 4.3173828125,
          "content": "#!/bin/sh\n\nGLOBAL_ERROR_INDICATOR=0\n\ncheck_for_application()\n{\n    for PROG in \"$@\"\n    do\n        which \"$PROG\" >/dev/null 2>&1\n        if test $? -ne 0; then\n            cat >&2 <<EOF\nWARNING: \\`$PROG' not found!\n    Please make sure that \\`$PROG' is installed and is in one of the\n    directories listed in the PATH environment variable.\nEOF\n            GLOBAL_ERROR_INDICATOR=1\n        fi\n    done\n}\n\nsetup_libtool()\n{\n    libtoolize=\"\"\n    libtoolize --version >/dev/null 2>/dev/null\n    if test $? -eq 0; then\n        libtoolize=libtoolize\n    else\n        glibtoolize --version >/dev/null 2>/dev/null\n        if test $? -eq 0; then\n            libtoolize=glibtoolize\n        else\n            cat >&2 <<EOF\nWARNING: Neither \\`libtoolize' nor \\`glibtoolize' have been found!\n    Please make sure that one of them is installed and is in one of the\n    directories listed in the PATH environment variable.\nEOF\n            GLOBAL_ERROR_INDICATOR=1\n        fi\n    fi\n\n    if test \"$GLOBAL_ERROR_INDICATOR\" != \"0\"; then\n        exit 1\n    fi\n}\n\nbuild()\n{\n    echo \"Building...\"\n    check_for_application lex bison autoheader aclocal automake autoconf pkg-config\n    setup_libtool\n\n    set -x\n    autoheader \\\n    && aclocal -I m4 \\\n    && $libtoolize --copy --force \\\n    && automake --add-missing --copy \\\n    && autoconf\n}\n\nbuild_cygwin()\n{\n    echo \"Building for Cygwin...\"\n    check_for_application aclocal autoconf autoheader automake bison flex git make pkg-config x86_64-w64-mingw32-gcc\n    setup_libtool\n\n    set -e\n\n    : ${INSTALL_DIR:=\"C:/PROGRA~1/collectd\"}\n    : ${LIBDIR:=\"${INSTALL_DIR}\"}\n    : ${BINDIR:=\"${INSTALL_DIR}\"}\n    : ${SBINDIR:=\"${INSTALL_DIR}\"}\n    : ${SYSCONFDIR:=\"${INSTALL_DIR}\"}\n    : ${LOCALSTATEDIR:=\"${INSTALL_DIR}\"}\n    : ${DATAROOTDIR:=\"${INSTALL_DIR}\"}\n    : ${DATADIR:=\"${INSTALL_DIR}\"}\n\n    echo \"Installing collectd to ${INSTALL_DIR}.\"\n    TOP_SRCDIR=\"$(pwd)\"\n    MINGW_ROOT=\"$(x86_64-w64-mingw32-gcc -print-sysroot)/mingw\"\n    export GNULIB_DIR=\"${TOP_SRCDIR}/gnulib/build/gllib\"\n\n    export CC=\"x86_64-w64-mingw32-gcc\"\n\n    if [ -d \"${TOP_SRCDIR}/gnulib/build\" ]; then\n        echo \"Assuming that gnulib is already built, because gnulib/build exists.\"\n    else\n        git submodule init\n        git submodule update\n        cd gnulib\n        ./gnulib-tool \\\n          --create-testdir \\\n          --source-base=lib \\\n          --dir=${TOP_SRCDIR}/gnulib/build \\\n          canonicalize-lgpl \\\n          fcntl-h \\\n          fnmatch \\\n          getsockopt \\\n          gettimeofday \\\n          nanosleep \\\n          netdb \\\n          net_if \\\n          poll \\\n          recv \\\n          regex \\\n          sendto \\\n          setlocale \\\n          strtok_r \\\n          sys_resource \\\n          sys_socket \\\n          sys_stat \\\n          sys_wait \\\n          time_r\n\n        cd ${TOP_SRCDIR}/gnulib/build\n        ./configure --host=\"mingw32\" LIBS=\"-lws2_32 -lpthread\"\n        make \n        cd gllib\n\n        # We have to rebuild libgnu.a to get the list of *.o files to build a dll later\n        rm libgnu.a\n        OBJECT_LIST=`make V=1 | grep \"ar\" | cut -d' ' -f4-`\n        $CC -shared -o libgnu.dll $OBJECT_LIST -lws2_32 -lpthread\n        rm libgnu.a # get rid of it, to use libgnu.dll\n\tfi\n    cd \"${TOP_SRCDIR}\"\n\n    set -x\n    autoreconf --install\n\n    export LDFLAGS=\"-L${GNULIB_DIR}\"\n    export LIBS=\"-lgnu\"\n    export CFLAGS=\"-Drestrict=__restrict -I${GNULIB_DIR}\"\n\n    ./configure \\\n      --prefix=\"${INSTALL_DIR}\" \\\n      --libdir=\"${LIBDIR}\" \\\n      --bindir=\"${BINDIR}\" \\\n      --sbindir=\"${SBINDIR}\" \\\n      --sysconfdir=\"${SYSCONFDIR}\" \\\n      --localstatedir=\"${LOCALSTATEDIR}\" \\\n      --datarootdir=\"${DATAROOTDIR}\" \\\n      --disable-all-plugins \\\n      --host=\"mingw32\" \\\n      --enable-logfile \\\n      --enable-match_regex \\\n      --enable-target_replace \\\n      --enable-target_set\n\n    cp ${GNULIB_DIR}/../config.h src/gnulib_config.h\n    echo \"#include <config.h.in>\" >> src/gnulib_config.h\n\n    cp libtool libtool_bak\n    sed -i \"s%\\$LTCC \\$LTCFLAGS\\(.*cwrapper.*\\)%\\$LTCC \\1%\" libtool\n\n    make\n    make install\n\n    cp \"${GNULIB_DIR}/libgnu.dll\" \"${INSTALL_DIR}\"\n    cp \"${MINGW_ROOT}/bin/zlib1.dll\" \"${INSTALL_DIR}\"\n    cp \"${MINGW_ROOT}/bin/libwinpthread-1.dll\" \"${INSTALL_DIR}\"\n    cp \"${MINGW_ROOT}/bin/libdl.dll\" \"${INSTALL_DIR}\"\n\n    echo \"Done.\"\n}\n\nos_name=\"$(uname)\"\nif test \"${os_name#CYGWIN}\" != \"$os_name\"; then\n    build_cygwin\nelse\n    build\nfi\n\n"
        },
        {
          "name": "clean.sh",
          "type": "blob",
          "size": 2.677734375,
          "content": "#! /bin/sh\n\nset -x\n\ntrue \\\n&& rm -f aclocal.m4 \\\n&& rm -f -r autom4te.cache \\\n&& rm -f collectd-*.tar.bz2 \\\n&& rm -f collectd-*.tar.gz \\\n&& rm -f compile \\\n&& rm -f config.guess \\\n&& rm -f config.log \\\n&& rm -f config.status \\\n&& rm -f config.sub \\\n&& rm -f configure \\\n&& rm -f depcomp \\\n&& rm -f install-sh \\\n&& rm -f libtool \\\n&& rm -f ltmain.sh \\\n&& rm -f Makefile \\\n&& rm -f Makefile.in \\\n&& rm -f missing \\\n&& rm -f INSTALL \\\n&& rm -f -r src/.deps \\\n&& rm -f -r src/.libs \\\n&& rm -f src/*.o \\\n&& rm -f src/*.la \\\n&& rm -f src/*.lo \\\n&& rm -f src/collectd.1 \\\n&& rm -f src/collectd.conf \\\n&& rm -f src/collectdctl \\\n&& rm -f src/collectd-tg \\\n&& rm -f src/collectd-nagios \\\n&& rm -f src/collectdmon \\\n&& rm -f src/config.h \\\n&& rm -f src/config.h.in \\\n&& rm -f src/config.h.in~ \\\n&& rm -f src/Makefile \\\n&& rm -f src/Makefile.in \\\n&& rm -f src/stamp-h1 \\\n&& rm -f src/stamp-h1.in \\\n&& rm -f src/*.pb-c.c \\\n&& rm -f src/*.pb-c.h \\\n&& rm -f src/Makefile.in \\\n&& rm -f src/test-suite.log \\\n&& rm -f src/test_common* \\\n&& rm -f src/test_utils* \\\n&& rm -f -r src/tests/.deps \\\n&& rm -f -r src/tests/mock/.deps \\\n&& rm -f src/tests/*.o \\\n&& rm -f src/tests/mock/*.o \\\n&& rm -f -r src/daemon/.deps \\\n&& rm -f -r src/daemon/.libs \\\n&& rm -f src/daemon/*.o \\\n&& rm -f src/daemon/*.la \\\n&& rm -f src/daemon/*.lo \\\n&& rm -f src/daemon/collectd \\\n&& rm -f src/daemon/Makefile.in \\\n&& rm -f src/daemon/Makefile \\\n&& rm -f src/liboconfig/*.o \\\n&& rm -f src/liboconfig/*.la \\\n&& rm -f src/liboconfig/*.lo \\\n&& rm -f -r src/liboconfig/.libs \\\n&& rm -f -r src/liboconfig/Makefile \\\n&& rm -f -r src/liboconfig/Makefile.in \\\n&& rm -f -r src/liboconfig/parser.c \\\n&& rm -f -r src/liboconfig/parser.h \\\n&& rm -f -r src/liboconfig/scanner.c \\\n&& rm -f -r src/libping/.libs \\\n&& rm -f src/libping/*.o \\\n&& rm -f src/libping/*.la \\\n&& rm -f src/libping/*.lo \\\n&& rm -f src/libping/config.h \\\n&& rm -f src/libping/config.h.in \\\n&& rm -f src/libping/Makefile \\\n&& rm -f src/libping/Makefile.in \\\n&& rm -f src/libping/stamp-h2 \\\n&& rm -f -r src/libcollectdclient/.libs \\\n&& rm -f src/libcollectdclient/*.o \\\n&& rm -f src/libcollectdclient/*.la \\\n&& rm -f src/libcollectdclient/*.lo \\\n&& rm -f src/libcollectdclient/Makefile \\\n&& rm -f src/libcollectdclient/Makefile.in \\\n&& rm -f src/libcollectdclient/collectd/lcc_features.h \\\n&& rm -f src/libcollectdclient/libcollectdclient.pc \\\n&& rm -f bindings/Makefile \\\n&& rm -f bindings/Makefile.in \\\n&& rm -f -r bindings/java/.libs \\\n&& rm -f bindings/java/Makefile \\\n&& rm -f bindings/java/Makefile.in \\\n&& rm -f bindings/java/java-build-stamp \\\n&& rm -f bindings/java/org/collectd/api/*.class \\\n&& rm -f bindings/java/org/collectd/java/*.class \\\n&& rm -f bindings/.perl-directory-stamp \\\n&& rm -f -r bindings/buildperl\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 218.3037109375,
          "content": "dnl Process this file with autoconf to produce a configure script.\nAC_PREREQ([2.60])\nAC_INIT([collectd],[m4_esyscmd(./version-gen.sh)])\nAC_CONFIG_SRCDIR(src/target_set.c)\nAC_CONFIG_HEADERS(src/config.h)\nAC_CONFIG_AUX_DIR([build-aux])\nAC_CONFIG_MACRO_DIR([m4])\n\ndnl older automake's default of ARFLAGS=cru is noisy on newer binutils;\ndnl we don't really need the 'u' even in older toolchains.  Then there is\ndnl older libtool, which spelled it AR_FLAGS\nm4_divert_text([DEFAULTS], [: \"${ARFLAGS=cr} ${AR_FLAGS=cr}\"])\n\nLT_INIT([dlopen disable-static])\n\nAM_INIT_AUTOMAKE([subdir-objects tar-pax dist-bzip2 no-dist-gzip foreign])\nm4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\nAC_LANG(C)\n\nAC_PREFIX_DEFAULT(\"/opt/collectd\")\n\nAC_SYS_LARGEFILE\n\n#\n# Checks for programs.\n#\nAC_PROG_CC_C99([],\n  [AC_MSG_ERROR([No compiler found that supports C99])]\n)\n\nAX_COMPILER_VENDOR\n\nAC_PROG_CXX\nAC_PROG_CPP\nAC_PROG_EGREP\nAC_PROG_INSTALL\nAC_PROG_LN_S\nAC_PROG_MAKE_SET\nAM_PROG_CC_C_O\n\nAC_PROG_LEX\nAC_PROG_YACC\n\nAC_PATH_PROG([VALGRIND], [valgrind])\n\n# Warn when pkg.m4 is missing\nm4_pattern_forbid([^_?PKG_[A-Z_]+$],[*** pkg.m4 missing, please install pkg-config])\n\nPKG_PROG_PKG_CONFIG\n\nAC_CACHE_CHECK([if Bison is the parser generator],\n  [collectd_cv_prog_bison],\n  [\n    AS_IF([$YACC --version 2>/dev/null | $EGREP -q '^bison '],\n      [collectd_cv_prog_bison=yes],\n      [collectd_cv_prog_bison=no]\n    )\n  ]\n)\n\nif test \"x$collectd_cv_prog_bison\" = \"xno\" && test ! -f \"${srcdir}/src/liboconfig/parser.c\"; then\n  AC_MSG_ERROR([bison is missing and you do not have ${srcdir}/src/liboconfig/parser.c. Please install bison])\nfi\n\nif test \"x$lt_cv_dlopen\" = \"xno\"; then\n  AC_MSG_ERROR([Your system does not support dlopen])\nfi\n\nAC_SUBST([DLOPEN_LIBS], [$lt_cv_dlopen_libs])\n\n\nAC_MSG_CHECKING([for kernel type ($host_os)])\ncase $host_os in\n  *aix*)\n    AC_DEFINE([KERNEL_AIX], [1], [True if program is to be compiled for a AIX kernel])\n    ac_system=\"AIX\"\n    ;;\n  *darwin*)\n    AC_DEFINE([KERNEL_DARWIN], [1], [True if program is to be compiled for a Darwin kernel])\n    ac_system=\"Darwin\"\n    ;;\n  *freebsd*)\n    AC_DEFINE([KERNEL_FREEBSD], [1], [True if program is to be compiled for a FreeBSD kernel])\n    ac_system=\"FreeBSD\"\n    ;;\n  *linux*)\n    AC_DEFINE([KERNEL_LINUX], [1], [True if program is to be compiled for a Linux kernel])\n    ac_system=\"Linux\"\n    ;;\n  *netbsd*)\n    AC_DEFINE([KERNEL_NETBSD], [1], [True if program is to be compiled for a NetBSD kernel])\n    ac_system=\"NetBSD\"\n    ;;\n  *openbsd*)\n    AC_DEFINE([KERNEL_OPENBSD], [1], [True if program is to be compiled for an OpenBSD kernel])\n    ac_system=\"OpenBSD\"\n    ;;\n  *solaris*)\n    AC_DEFINE([KERNEL_SOLARIS], [1], [True if program is to be compiled for a Solaris kernel])\n    ac_system=\"Solaris\"\n    ;;\n  *mingw32*)\n    AC_DEFINE([KERNEL_WIN32], [1], [True if program is to be compiled for a Windows kernel])\n    ac_system=\"Windows\"\n    ;;\n  *)\n    ac_system=\"unknown\"\n    ;;\nesac\nAC_MSG_RESULT([$ac_system])\n\nAM_CONDITIONAL([BUILD_AIX], [test \"x$ac_system\" = \"xAIX\"])\nAM_CONDITIONAL([BUILD_DARWIN], [test \"x$ac_system\" = \"xDarwin\"])\nAM_CONDITIONAL([BUILD_FREEBSD], [test \"x$ac_system\" = \"xFreeBSD\"])\nAM_CONDITIONAL([BUILD_LINUX], [test \"x$ac_system\" = \"xLinux\"])\nAM_CONDITIONAL([BUILD_OPENBSD], [test \"x$ac_system\" = \"xOpenBSD\"])\nAM_CONDITIONAL([BUILD_NETBSD], [test \"x$ac_system\" = \"xNetBSD\"])\nAM_CONDITIONAL([BUILD_SOLARIS], [test \"x$ac_system\" = \"xSolaris\"])\nAM_CONDITIONAL([BUILD_WIN32], [test \"x$ac_system\" = \"xWindows\"])\n\nif test \"x$ac_system\" = \"xSolaris\"; then\n  AC_DEFINE([_POSIX_PTHREAD_SEMANTICS], [1], [Define to enforce POSIX thread semantics under Solaris.])\n  AC_DEFINE([_REENTRANT], [1], [Define to enable reentrancy interfaces.])\n\n  AC_MSG_CHECKING([whether compiler builds 64bit binaries])\n  AC_COMPILE_IFELSE(\n    [\n      AC_LANG_PROGRAM(\n        [\n          #ifndef _LP64\n          # error \"Compiler not in 64bit mode.\"\n          #endif\n        ]\n      )\n    ],\n    [AC_MSG_RESULT([yes])],\n    [\n      AC_MSG_RESULT([no])\n      AC_MSG_NOTICE([Solaris detected. Please consider building a 64-bit binary.])\n    ]\n  )\nfi\n\nif test \"x$ac_system\" = \"xAIX\"; then\n  AC_DEFINE([_THREAD_SAFE_ERRNO], [1], [Define to use the thread-safe version of errno under AIX.])\nfi\n\nif test \"x${prefix}\" != xNONE; then\n  AC_DEFINE_UNQUOTED([PREFIX], [\"${prefix}\"], [Define the install prefix.])\nfi\n\n# Where to install .pc files.\npkgconfigdir=\"${libdir}/pkgconfig\"\nAC_SUBST([pkgconfigdir])\n\n#\n# Checks for header files.\n#\nAC_HEADER_SYS_WAIT\nAC_HEADER_DIRENT\n\nAC_CHECK_HEADERS_ONCE([ \\\n  arpa/inet.h \\\n  endian.h \\\n  fcntl.h \\\n  fnmatch.h \\\n  fs_info.h \\\n  fshelp.h \\\n  grp.h \\\n  kstat.h \\\n  kvm.h \\\n  libgen.h \\\n  locale.h \\\n  mntent.h \\\n  mnttab.h \\\n  netdb.h \\\n  paths.h \\\n  poll.h \\\n  pthread_np.h \\\n  pwd.h \\\n  regex.h \\\n  sys/endian.h \\\n  sys/fs_types.h \\\n  sys/fstyp.h \\\n  sys/ioctl.h \\\n  sys/isa_defs.h \\\n  sys/mntent.h \\\n  sys/mnttab.h \\\n  sys/param.h \\\n  sys/resource.h \\\n  sys/select.h \\\n  sys/socket.h \\\n  sys/statfs.h \\\n  sys/statvfs.h \\\n  sys/types.h \\\n  sys/un.h \\\n  sys/vfs.h \\\n  sys/vfstab.h \\\n  sys/vmmeter.h \\\n  syslog.h \\\n  wordexp.h\n])\n\nif test \"x$ac_system\" = \"xNetBSD\"; then\n  # For entropy plugin on newer NetBSD\n  AC_CHECK_HEADERS([sys/rndio.h], [], [],\n    [[\n      #if HAVE_SYS_TYPES_H\n      # include <sys/types.h>\n      #endif\n      #if HAVE_SYS_IOCTL_H\n      # include <sys/ioctl.h>\n      #endif\n      #if HAVE_SYS_PARAM_H\n      # include <sys/param.h>\n      #endif\n    ]]\n  )\nfi\n\n# For ping library\nAC_CHECK_HEADERS([netinet/in_systm.h], [], [],\n  [[\n    #include <stdint.h>\n    #if HAVE_SYS_TYPES_H\n    # include <sys/types.h>\n    #endif\n  ]]\n)\n\nAC_CHECK_HEADERS([netinet/in.h], [], [],\n  [[\n    #include <stdint.h>\n    #if HAVE_SYS_TYPES_H\n    # include <sys/types.h>\n    #endif\n    #if HAVE_NETINET_IN_SYSTM_H\n    # include <netinet/in_systm.h>\n    #endif\n  ]]\n)\n\nAC_CHECK_HEADERS([netinet/ip.h], [], [],\n  [[\n    #include <stdint.h>\n    #if HAVE_SYS_TYPES_H\n    # include <sys/types.h>\n    #endif\n    #if HAVE_NETINET_IN_SYSTM_H\n    # include <netinet/in_systm.h>\n    #endif\n    #if HAVE_NETINET_IN_H\n    # include <netinet/in.h>\n    #endif\n  ]]\n)\n\nAC_CHECK_HEADERS([netinet/ip_icmp.h], [], [],\n  [[\n    #include <stdint.h>\n    #if HAVE_SYS_TYPES_H\n    # include <sys/types.h>\n    #endif\n    #if HAVE_NETINET_IN_SYSTM_H\n    # include <netinet/in_systm.h>\n    #endif\n    #if HAVE_NETINET_IN_H\n    # include <netinet/in.h>\n    #endif\n    #if HAVE_NETINET_IP_H\n    # include <netinet/ip.h>\n    #endif\n  ]]\n)\n\nAC_CHECK_HEADERS([netinet/ip_var.h], [], [],\n  [[\n    #include <stdint.h>\n    #if HAVE_SYS_TYPES_H\n    # include <sys/types.h>\n    #endif\n    #if HAVE_NETINET_IN_SYSTM_H\n    # include <netinet/in_systm.h>\n    #endif\n    #if HAVE_NETINET_IN_H\n    # include <netinet/in.h>\n    #endif\n    #if HAVE_NETINET_IP_H\n    # include <netinet/ip.h>\n    #endif\n  ]]\n)\n\nAC_CHECK_HEADERS([netinet/ip6.h], [], [],\n  [[\n    #include <stdint.h>\n    #if HAVE_SYS_TYPES_H\n    # include <sys/types.h>\n    #endif\n    #if HAVE_NETINET_IN_SYSTM_H\n    # include <netinet/in_systm.h>\n    #endif\n    #if HAVE_NETINET_IN_H\n    # include <netinet/in.h>\n    #endif\n  ]]\n)\n\nAC_CHECK_HEADERS([netinet/icmp6.h], [], [],\n  [[\n    #include <stdint.h>\n    #if HAVE_SYS_TYPES_H\n    # include <sys/types.h>\n    #endif\n    #if HAVE_NETINET_IN_SYSTM_H\n    # include <netinet/in_systm.h>\n    #endif\n    #if HAVE_NETINET_IN_H\n    # include <netinet/in.h>\n    #endif\n    #if HAVE_NETINET_IP6_H\n    # include <netinet/ip6.h>\n    #endif\n  ]]\n)\n\nAC_CHECK_HEADERS([netinet/tcp.h], [], [],\n  [[\n    #include <stdint.h>\n    #if HAVE_SYS_TYPES_H\n    # include <sys/types.h>\n    #endif\n    #if HAVE_NETINET_IN_SYSTM_H\n    # include <netinet/in_systm.h>\n    #endif\n    #if HAVE_NETINET_IN_H\n    # include <netinet/in.h>\n    #endif\n    #if HAVE_NETINET_IP_H\n    # include <netinet/ip.h>\n    #endif\n  ]]\n)\n\nAC_CHECK_HEADERS([netinet/udp.h], [], [],\n  [[\n    #include <stdint.h>\n    #if HAVE_SYS_TYPES_H\n    # include <sys/types.h>\n    #endif\n    #if HAVE_NETINET_IN_SYSTM_H\n    # include <netinet/in_systm.h>\n    #endif\n    #if HAVE_NETINET_IN_H\n    # include <netinet/in.h>\n    #endif\n    #if HAVE_NETINET_IP_H\n    # include <netinet/ip.h>\n    #endif\n  ]]\n)\n\n# For cpu modules\nAC_CHECK_HEADERS([sys/dkstat.h])\nif test \"x$ac_system\" = \"xDarwin\"; then\n  AC_CHECK_HEADERS(\n    [ \\\n      mach/mach_init.h \\\n      mach/host_priv.h \\\n      mach/mach_error.h \\\n      mach/mach_host.h \\\n      mach/mach_port.h \\\n      mach/mach_types.h \\\n      mach/message.h \\\n      mach/processor_set.h \\\n      mach/processor.h \\\n      mach/processor_info.h \\\n      mach/task.h \\\n      mach/thread_act.h \\\n      mach/vm_region.h \\\n      mach/vm_map.h \\\n      mach/vm_prot.h \\\n      mach/vm_statistics.h \\\n      mach/kern_return.h \\\n      CoreFoundation/CoreFoundation.h \\\n      IOKit/IOKitLib.h \\\n      IOKit/IOTypes.h \\\n      IOKit/ps/IOPSKeys.h \\\n      IOKit/IOBSD.h \\\n      IOKit/storage/IOBlockStorageDriver.h\n    ]\n  )\n\n  # For the battery plugin\n  AC_CHECK_HEADERS([IOKit/ps/IOPowerSources.h], [], [],\n    [[\n      #if HAVE_IOKIT_IOKITLIB_H\n      #  include <IOKit/IOKitLib.h>\n      #endif\n      #if HAVE_IOKIT_IOTYPES_H\n      #  include <IOKit/IOTypes.h>\n      #endif\n    ]]\n  )\nfi\n\nAC_CHECK_HEADERS([sys/sysctl.h], [], [],\n  [[\n    #if HAVE_SYS_TYPES_H\n    #  include <sys/types.h>\n    #endif\n    #if HAVE_SYS_PARAM_H\n    # include <sys/param.h>\n    #endif\n  ]]\n)\n\n# For interface plugin\nAC_CHECK_HEADERS([ifaddrs.h])\nAC_CHECK_HEADERS([net/if.h], [], [],\n  [[\n    #if HAVE_SYS_TYPES_H\n    #  include <sys/types.h>\n    #endif\n    #if HAVE_SYS_SOCKET_H\n    #  include <sys/socket.h>\n    #endif\n  ]]\n)\n\nif test \"x$ac_system\" = \"xLinux\"; then\n  # For hddtemp module\n  AC_CHECK_HEADERS([linux/major.h])\n\n  # For md module (Linux only)\n  AC_CHECK_HEADERS([linux/raid/md_u.h],\n    [have_linux_raid_md_u_h=\"yes\"],\n    [have_linux_raid_md_u_h=\"no\"],\n    [[\n      #include <sys/ioctl.h>\n      #include <linux/major.h>\n      #include <linux/types.h>\n    ]]\n  )\n  AC_CHECK_HEADERS([sys/sysmacros.h])\n\n  AC_CHECK_HEADERS([linux/wireless.h],\n    [have_linux_wireless_h=\"yes\"],\n    [have_linux_wireless_h=\"no\"],\n    [[\n      #include <dirent.h>\n      #include <sys/ioctl.h>\n      #include <sys/socket.h>\n    ]]\n  )\n\n  AC_CHECK_HEADERS([linux/if.h], [], [],\n    [[\n      #if HAVE_SYS_TYPES_H\n      #  include <sys/types.h>\n      #endif\n      #if HAVE_SYS_SOCKET_H\n      #  include <sys/socket.h>\n      #endif\n    ]]\n  )\n\n  AC_CHECK_HEADERS([linux/inet_diag.h], [], [],\n    [[\n      #if HAVE_SYS_TYPES_H\n      #  include <sys/types.h>\n      #endif\n      #if HAVE_SYS_SOCKET_H\n      #  include <sys/socket.h>\n      #endif\n    ]]\n  )\n\n  AC_CHECK_HEADERS([linux/netdevice.h], [], [],\n    [[\n      #if HAVE_SYS_TYPES_H\n      #  include <sys/types.h>\n      #endif\n      #if HAVE_SYS_SOCKET_H\n      #  include <sys/socket.h>\n      #endif\n      #if HAVE_LINUX_IF_H\n      # include <linux/if.h>\n      #endif\n    ]]\n  )\n\n  # For ethstat module\n  AC_CHECK_HEADERS([linux/sockios.h],\n    [have_linux_sockios_h=\"yes\"],\n    [have_linux_sockios_h=\"no\"],\n    [[\n      #if HAVE_SYS_IOCTL_H\n      # include <sys/ioctl.h>\n      #endif\n      #if HAVE_NET_IF_H\n      # include <net/if.h>\n      #endif\n    ]]\n  )\n\n  AC_CHECK_HEADERS([linux/ethtool.h],\n    [have_linux_ethtool_h=\"yes\"],\n    [have_linux_ethtool_h=\"no\"],\n    [[\n      #if HAVE_SYS_IOCTL_H\n      # include <sys/ioctl.h>\n      #endif\n      #if HAVE_NET_IF_H\n      # include <net/if.h>\n      #endif\n      #if HAVE_LINUX_SOCKIOS_H\n      # include <linux/sockios.h>\n      #endif\n    ]]\n  )\n\n  # For ipvs module\n  AC_CHECK_HEADERS_ONCE([linux/ip_vs.h])\n\n  # For the email plugin\n  AC_CHECK_HEADERS([linux/un.h], [], [],\n    [[\n      #if HAVE_SYS_SOCKET_H\n      #  include <sys/socket.h>\n      #endif\n    ]]\n  )\n  # For the turbostat plugin\n  AC_CHECK_HEADERS([cpuid.h],\n    [have_cpuid_h=\"yes\"],\n    [have_cpuid_h=\"no (cpuid.h not found)\"]\n  )\n\n  AC_CHECK_HEADERS([sys/capability.h],\n    [have_capability=\"yes\"],\n    [have_capability=\"no (<sys/capability.h> not found)\"]\n  )\n\n  if test \"x$have_capability\" = \"xyes\"; then\n    AC_CHECK_LIB([cap], [cap_get_proc],\n      [have_capability=\"yes\"],\n      [have_capability=\"no (cap_get_proc() not found)\"]\n    )\n  fi\n\n  if test \"x$have_capability\" = \"xyes\"; then\n    AC_CHECK_DECL([CAP_IS_SUPPORTED],\n      [have_capability=\"yes\"],\n      [have_capability=\"no (CAP_IS_SUPPORTED not found)\"],\n      [[#include <sys/capability.h>]]\n    )\n  fi\n\n  if test \"x$have_capability\" = \"xyes\"; then\n    AC_DEFINE([HAVE_CAPABILITY], [1], [Define to 1 if you have cap_get_proc() (-lcap).])\n  fi\n\n  # For pcie_errors plugin\n  AC_CHECK_HEADERS([linux/pci_regs.h],\n    [have_pci_regs_h=\"yes\"],\n    [have_pci_regs_h=\"no (linux/pci_regs.h not found)\"]\n  )\n\nelse\n  have_linux_raid_md_u_h=\"no\"\n  have_linux_wireless_h=\"no\"\nfi\n\nAM_CONDITIONAL([BUILD_WITH_CAPABILITY], [test \"x$have_capability\" = \"xyes\"])\n\n# For the swap module\nhave_sys_swap_h=\"yes\"\nAC_CHECK_HEADERS([sys/swap.h vm/anon.h],\n  [],\n  [have_sys_swap_h=\"no\"],\n  [[\n    #undef _FILE_OFFSET_BITS\n    #undef _LARGEFILE64_SOURCE\n    #if HAVE_SYS_TYPES_H\n    #  include <sys/types.h>\n    #endif\n    #if HAVE_SYS_PARAM_H\n    # include <sys/param.h>\n    #endif\n  ]]\n)\n\n# For load module\n# For the processes plugin\n# For users module\nAC_CHECK_HEADERS([sys/loadavg.h linux/config.h utmp.h utmpx.h])\n\n# For quota module\nAC_CHECK_HEADERS([sys/ucred.h], [], [],\n  [[\n    #if HAVE_SYS_TYPES_H\n    #  include <sys/types.h>\n    #endif\n    #if HAVE_SYS_PARAM_H\n    # include <sys/param.h>\n    #endif\n  ]]\n)\n\n# For mount interface\nAC_CHECK_HEADERS([sys/mount.h], [], [],\n  [[\n    #if HAVE_SYS_TYPES_H\n    #  include <sys/types.h>\n    #endif\n    #if HAVE_SYS_PARAM_H\n    # include <sys/param.h>\n    #endif\n  ]]\n)\n\n# --enable-xfs {{{\nAC_ARG_ENABLE([xfs],\n  [AS_HELP_STRING([--enable-xfs], [xfs support in df plugin @<:@default=yes@:>@])],\n  [],\n  [enable_xfs=\"auto\"]\n)\n\nif test \"x$enable_xfs\" != \"xno\"; then\n  AC_CHECK_HEADERS([xfs/xqm.h],\n    [],\n    [\n      if test \"x$enable_xfs\" = \"xyes\"; then\n        AC_MSG_ERROR([xfs/xqm.h not found])\n      fi\n    ],\n    [[#define _GNU_SOURCE]]\n  )\nfi\n\n# }}}\n\nAC_CHECK_HEADERS([net/if_arp.h], [], [],\n  [[\n    #if HAVE_SYS_SOCKET_H\n    # include <sys/socket.h>\n    #endif\n  ]]\n)\n\nAC_CHECK_HEADERS([net/ppp_defs.h])\nAC_CHECK_HEADERS([net/if_ppp.h], [], [],\n  [[\n    #if HAVE_NET_PPP_DEFS_H\n    # include <net/ppp_defs.h>\n    #endif\n  ]]\n)\n\nAC_CHECK_HEADERS([netinet/if_ether.h], [], [],\n  [[\n    #include <stdint.h>\n    #if HAVE_SYS_TYPES_H\n    # include <sys/types.h>\n    #endif\n    #if HAVE_SYS_SOCKET_H\n    # include <sys/socket.h>\n    #endif\n    #if HAVE_NET_IF_H\n    # include <net/if.h>\n    #endif\n    #if HAVE_NETINET_IN_H\n    # include <netinet/in.h>\n    #endif\n  ]]\n)\n\nAC_CHECK_HEADERS([net/pfvar.h],\n  [have_net_pfvar_h=\"yes\"],\n  [have_net_pfvar_h=\"no\"],\n  [[\n    #if HAVE_SYS_IOCTL_H\n    # include <sys/ioctl.h>\n    #endif\n    #if HAVE_SYS_SOCKET_H\n    # include <sys/socket.h>\n    #endif\n    #if HAVE_NET_IF_H\n    # include <net/if.h>\n    #endif\n    #if HAVE_NETINET_IN_H\n    # include <netinet/in.h>\n    #endif\n  ]]\n)\n\n# For the multimeter plugin\nAC_CHECK_HEADERS([termios.h],\n  [have_termios_h=\"yes\"],\n  [have_termios_h=\"no\"]\n)\n\n# For cpusleep plugin\nAC_CACHE_CHECK([whether clock_boottime and clock_monotonic are supported],\n  [c_cv_have_clock_boottime_monotonic],\n  [\n    AC_COMPILE_IFELSE(\n      [AC_LANG_PROGRAM(\n        [[#include <time.h>]],\n        [[\n          struct timespec b, m;\n          clock_gettime(CLOCK_BOOTTIME, &b );\n          clock_gettime(CLOCK_MONOTONIC, &m );\n        ]]\n      )\n      ],\n      [c_cv_have_clock_boottime_monotonic=\"yes\"],\n      [c_cv_have_clock_boottime_monotonic=\"no\"]\n    )\n  ]\n)\n\n\n#\n# Checks for typedefs, structures, and compiler characteristics.\n#\nAC_C_CONST\nAC_TYPE_PID_T\nAC_TYPE_SIZE_T\nAC_TYPE_UID_T\nAC_HEADER_TIME\n\ntest_cxx_flags() {\n  AC_LANG_PUSH([C++])\n  AC_LANG_CONFTEST(\n    [AC_LANG_SOURCE([[int main(void){}]]) ]\n  )\n  $CXX -c conftest.cpp $CXXFLAGS $@ > /dev/null 2> /dev/null\n  ret=$?\n  rm -f conftest.o\n  AC_LANG_POP([C++])\n  return $ret\n}\n\n#\n# Checks for library functions.\n#\nAC_CHECK_FUNCS_ONCE([ \\\n    asprintf \\\n    execvpe \\\n    getpwnam \\\n    getpwnam_r \\\n    if_indextoname \\\n    setgroups \\\n    setlocale\n  ]\n)\n\nAC_FUNC_STRERROR_R\n\nif test \"x$GCC\" = \"xyes\"; then\n  SAVE_CFLAGS=\"$CFLAGS\"\n  CFLAGS=\"$CFLAGS -Wall -Werror\"\nfi\nSAVE_LDFLAGS=\"$LDFLAGS\"\nLDFLAGS=\"\"\nif test \"x$ac_system\" = \"xWindows\"; then\n  # This is exported from build.sh\n  LDFLAGS=\"$LDFLAGS -L${GNULIB_DIR}\"\nfi\n\nAC_CACHE_CHECK([for strtok_r],\n  [c_cv_have_strtok_r_default],\n  [\n    AC_LINK_IFELSE(\n      [\n        AC_LANG_PROGRAM(\n          [[\n            #include <stdlib.h>\n            #include <stdio.h>\n            #include <string.h>\n          ]],\n          [[\n            char buffer[] = \"foo,bar,baz\";\n            char *token;\n            char *dummy;\n            char *saveptr;\n\n            dummy = buffer;\n            saveptr = NULL;\n            while ((token = strtok_r (dummy, \",\", &saveptr)) != NULL)\n            {\n              dummy = NULL;\n              printf (\"token = %s;\\n\", token);\n            }\n          ]]\n        )\n      ],\n      [c_cv_have_strtok_r_default=\"yes\"],\n      [c_cv_have_strtok_r_default=\"no\"]\n    )\n  ]\n)\n\nif test \"x$c_cv_have_strtok_r_default\" = \"xno\"; then\n  CFLAGS=\"$CFLAGS -D_REENTRANT=1\"\n\n  AC_CACHE_CHECK([if strtok_r needs _REENTRANT],\n    [c_cv_have_strtok_r_reentrant],\n    [\n      AC_LINK_IFELSE(\n        [\n          AC_LANG_PROGRAM(\n            [[\n              #include <stdlib.h>\n              #include <stdio.h>\n              #include <string.h>\n            ]],\n            [[\n              char buffer[] = \"foo,bar,baz\";\n              char *token;\n              char *dummy;\n              char *saveptr;\n\n              dummy = buffer;\n              saveptr = NULL;\n              while ((token = strtok_r (dummy, \",\", &saveptr)) != NULL)\n              {\n                dummy = NULL;\n                printf (\"token = %s;\\n\", token);\n              }\n            ]]\n          )\n        ],\n        [c_cv_have_strtok_r_reentrant=\"yes\"],\n        [AC_MSG_FAILURE([strtok_r is not available. Please file a bugreport!])]\n      )\n    ]\n  )\nfi\n\nCFLAGS=\"$SAVE_CFLAGS\"\nLDFLAGS=\"$SAVE_LDFLAGS\"\nif test \"x$c_cv_have_strtok_r_reentrant\" = \"xyes\"; then\n  CFLAGS=\"$CFLAGS -D_REENTRANT=1\"\nfi\n\nAC_CHECK_FUNCS([socket],\n  [],\n  [\n    AC_CHECK_LIB([socket], [socket],\n      [socket_needs_socket=\"yes\"],\n      [\n        AC_CHECK_LIB([gnu], [rpl_socket],\n          [socket_needs_gnulib=\"yes\"],\n          [AC_MSG_ERROR([cannot find socket() in libsocket])]\n        )\n      ]\n    )\n  ]\n)\nAM_CONDITIONAL([BUILD_WITH_LIBSOCKET], [test \"x$socket_needs_socket\" = \"xyes\"])\nAM_CONDITIONAL([BUILD_WITH_GNULIB], [test \"x$socket_needs_gnulib\" = \"xyes\"])\n\nAC_CHECK_FUNCS([inet_ntop],\n  [],\n  [\n    AC_CHECK_LIB([nsl], [inet_ntop],\n      [inet_ntop_needs_nsl=\"yes\"],\n      [AC_MSG_ERROR([cannot find inet_ntop() in libnsl])]\n    )\n  ]\n)\nAM_CONDITIONAL([BUILD_WITH_LIBNSL], [test \"x$inet_ntop_needs_nsl\" = \"xyes\"])\n\nclock_gettime_needs_posix4=\"no\"\nAC_CHECK_FUNCS([clock_gettime],\n  [have_clock_gettime=\"yes\"],\n  [have_clock_gettime=\"no\"]\n)\n\nif test \"x$have_clock_gettime\" = \"xno\"; then\n  AC_CHECK_LIB([rt], [clock_gettime],\n    [\n      clock_gettime_needs_rt=\"yes\"\n      have_clock_gettime=\"yes\"\n    ]\n  )\nfi\n\nif test \"x$have_clock_gettime\" = \"xno\"; then\n  AC_CHECK_LIB([posix4], [clock_gettime],\n    [\n      clock_gettime_needs_posix4=\"yes\"\n      have_clock_gettime=\"yes\"\n    ]\n  )\nfi\n\nif test \"x$have_clock_gettime\" = \"xyes\"; then\n  AC_DEFINE([HAVE_CLOCK_GETTIME], [1], [Define if the clock_gettime(2) function is available.])\nfi\n\nAC_CHECK_FUNCS([nanosleep], [],\n  AC_CHECK_LIB([rt], [nanosleep],\n    [nanosleep_needs_rt=\"yes\"],\n    [\n      AC_CHECK_LIB([posix4], [nanosleep],\n        [nanosleep_needs_posix4=\"yes\"],\n        [AC_MSG_ERROR([cannot find nanosleep])]\n      )\n    ]\n  )\n)\n\nAM_CONDITIONAL([BUILD_WITH_LIBRT], [test \"x$clock_gettime_needs_rt\" = \"xyes\" || test \"x$nanosleep_needs_rt\" = \"xyes\"])\nAM_CONDITIONAL([BUILD_WITH_LIBPOSIX4], [test \"x$clock_gettime_needs_posix4\" = \"xyes\" || test \"x$nanosleep_needs_posix4\" = \"xyes\"])\n\nAC_CHECK_FUNCS([getifaddrs], [have_getifaddrs=\"yes\"], [have_getifaddrs=\"no\"])\nAC_CHECK_FUNCS([getloadavg], [have_getloadavg=\"yes\"], [have_getloadavg=\"no\"])\nAC_CHECK_FUNCS([getutent], [have_getutent=\"yes\"], [have_getutent=\"no\"])\nAC_CHECK_FUNCS([getutxent], [have_getutxent=\"yes\"], [have_getutxent=\"no\"])\nAC_CHECK_FUNCS([host_statistics], [have_host_statistics=\"yes\"], [have_host_statistics=\"no\"])\nAC_CHECK_FUNCS([processor_info], [have_processor_info=\"yes\"], [have_processor_info=\"no\"])\nAC_CHECK_FUNCS([statfs], [have_statfs=\"yes\"], [have_statfs=\"no\"])\nAC_CHECK_FUNCS([statvfs], [have_statvfs=\"yes\"], [have_statvfs=\"no\"])\nAC_CHECK_FUNCS([sysctl], [have_sysctl=\"yes\"], [have_sysctl=\"no\"])\nAC_CHECK_FUNCS([sysctlbyname], [have_sysctlbyname=\"yes\"], [have_sysctlbyname=\"no\"])\nAC_CHECK_FUNCS([syslog], [have_syslog=\"yes\"], [have_syslog=\"no\"])\nAC_CHECK_FUNCS([thread_info], [have_thread_info=\"yes\"], [have_thread_info=\"no\"])\n\n# Check for strptime {{{\nif test \"x$GCC\" = \"xyes\"; then\n  SAVE_CFLAGS=\"$CFLAGS\"\n  CFLAGS=\"$CFLAGS -Wall -Wextra -Werror\"\nfi\n\nAC_CHECK_FUNCS([strptime], [have_strptime=\"yes\"], [have_strptime=\"no\"])\nif test \"x$have_strptime\" = \"xyes\"; then\n  AC_CACHE_CHECK([whether strptime is exported by default],\n    [c_cv_have_strptime_default],\n    [\n      AC_COMPILE_IFELSE(\n        [\n          AC_LANG_PROGRAM(\n            [[#include <time.h>]],\n            [[\n              struct tm stm;\n              (void)strptime (\"2010-12-30%13:42:42\", \"%Y-%m-%dT%T\", &stm);\n            ]]\n          )\n        ],\n        [c_cv_have_strptime_default=\"yes\"],\n        [c_cv_have_strptime_default=\"no\"])\n    ]\n  )\nfi\n\nif test \"x$have_strptime\" = \"xyes\" && test \"x$c_cv_have_strptime_default\" = \"xno\"; then\n  AC_CACHE_CHECK([whether strptime needs standards mode],\n    [c_cv_have_strptime_standards],\n    [\n      AC_COMPILE_IFELSE(\n        [\n          AC_LANG_PROGRAM(\n            [[\n              #ifndef _ISOC99_SOURCE\n              # define _ISOC99_SOURCE 1\n              #endif\n              #ifndef _POSIX_C_SOURCE\n              # define _POSIX_C_SOURCE 200112L\n              #endif\n              #ifndef _XOPEN_SOURCE\n              # define _XOPEN_SOURCE 500\n              #endif\n              # ifndef _BSD_SOURCE\n              #  define _BSD_SOURCE\n              # endif\n              # ifndef _DEFAULT_SOURCE\n              #  define _DEFAULT_SOURCE\n              # endif\n              #include <time.h>\n            ]],\n            [[\n              struct tm stm;\n              (void)strptime (\"2010-12-30%13:42:42\", \"%Y-%m-%dT%T\", &stm);\n            ]]\n          )\n        ],\n        [c_cv_have_strptime_standards=\"yes\"],\n        [c_cv_have_strptime_standards=\"no\"]\n      )\n    ]\n  )\n\n  if test \"x$c_cv_have_strptime_standards\" = \"xyes\"; then\n    AC_DEFINE([STRPTIME_NEEDS_STANDARDS], [1],\n      [Set to true if strptime is only exported in X/Open mode (GNU libc).]\n    )\n  else\n    have_strptime=\"no\"\n  fi\nfi\n\nif test \"x$GCC\" = \"xyes\"; then\n  CFLAGS=\"$SAVE_CFLAGS\"\nfi\n# }}} Check for strptime\n\n# Check for timegm {{{\n\n# These checks need -Werror because implicit function declarations are only a\n# warning ...\nSAVE_CFLAGS=\"$CFLAGS\"\nCFLAGS=\"$CFLAGS -Werror\"\n\nAC_CACHE_CHECK([for timegm],\n  [c_cv_have_timegm],\n  AC_LINK_IFELSE(\n    [AC_LANG_PROGRAM(\n[[[\n#if STRPTIME_NEEDS_STANDARDS\n# ifndef _ISOC99_SOURCE\n#  define _ISOC99_SOURCE 1\n# endif\n# ifndef _POSIX_C_SOURCE\n#  define _POSIX_C_SOURCE 200112L\n# endif\n# ifndef _XOPEN_SOURCE\n#  define _XOPEN_SOURCE 500\n# endif\n# ifndef _BSD_SOURCE\n#  define _BSD_SOURCE\n# endif\n# ifndef _DEFAULT_SOURCE\n#  define _DEFAULT_SOURCE\n# endif\n#endif\n#include <time.h>\n]]],\n[[[\n time_t t = timegm(&(struct tm){0});\n if (t == ((time_t) -1)) {\n   return 1;\n }\n]]]\n    )],\n    [c_cv_have_timegm=\"yes\"],\n    [c_cv_have_timegm=\"no\"]\n  )\n)\n\nif test \"x$c_cv_have_timegm\" = \"xyes\"\nthen\n  AC_DEFINE(HAVE_TIMEGM, 1, [Define if the timegm(3) function is available.])\nfi\n\nCFLAGS=\"$SAVE_CFLAGS\"\n# }}} Check for timegm\n\nAC_MSG_CHECKING([for sysctl kern.cp_times])\nif test -x /sbin/sysctl; then\n  /sbin/sysctl kern.cp_times >/dev/null 2>&1\n  if test $? -eq 0; then\n    AC_MSG_RESULT([yes])\n    AC_DEFINE([HAVE_SYSCTL_KERN_CP_TIMES], [1], [Define if sysctl supports kern.cp_times])\n  else\n    AC_MSG_RESULT([no])\n  fi\nelse\n  AC_MSG_RESULT([no])\nfi\n\nAC_MSG_CHECKING([for sysctl kern.cp_time])\nif test -x /sbin/sysctl; then\n  /sbin/sysctl kern.cp_time >/dev/null 2>&1\n  if test $? -eq 0\n  then\n    AC_MSG_RESULT([yes])\n    AC_DEFINE([HAVE_SYSCTL_KERN_CP_TIME], [1], [Define if sysctl supports kern.cp_time])\n  else\n    AC_MSG_RESULT([no])\n  fi\nelse\n  AC_MSG_RESULT([no])\nfi\n\nAC_CHECK_FUNCS([swapctl], [have_swapctl=\"yes\"], [have_swapctl=\"no\"])\nif test \"x$have_swapctl\" = \"xyes\"; then\n  AC_CACHE_CHECK([whether swapctl takes two arguments],\n    [c_cv_have_swapctl_two_args],\n    [\n      AC_COMPILE_IFELSE(\n        [\n          AC_LANG_PROGRAM(\n            [[\n              #if HAVE_SYS_SWAP_H && !defined(_LP64) && _FILE_OFFSET_BITS == 64\n              #  undef _FILE_OFFSET_BITS\n              #  undef _LARGEFILE64_SOURCE\n              #endif\n              #include <sys/stat.h>\n              #include <sys/param.h>\n              #include <sys/swap.h>\n              #include <unistd.h>\n            ]],\n            [[int num = swapctl(0, NULL);]]\n          )\n        ],\n        [c_cv_have_swapctl_two_args=\"yes\"],\n        [c_cv_have_swapctl_two_args=\"no\"]\n      )\n    ]\n  )\n\n  AC_CACHE_CHECK([whether swapctl takes three arguments],\n    [c_cv_have_swapctl_three_args],\n    [\n      AC_COMPILE_IFELSE(\n        [\n          AC_LANG_PROGRAM(\n            [[\n              #if HAVE_SYS_SWAP_H && !defined(_LP64) && _FILE_OFFSET_BITS == 64\n              #  undef _FILE_OFFSET_BITS\n              #  undef _LARGEFILE64_SOURCE\n              #endif\n              #include <sys/stat.h>\n              #include <sys/param.h>\n              #include <sys/swap.h>\n              #include <unistd.h>\n            ]],\n            [[int num = swapctl(0, NULL, 0);]]\n          )\n        ],\n        [c_cv_have_swapctl_three_args=\"yes\"],\n        [c_cv_have_swapctl_three_args=\"no\"]\n      )\n    ]\n  )\nfi\n\n# Check for different versions of `swapctl' here..\nif test \"x$have_swapctl\" = \"xyes\"; then\n  if test \"x$c_cv_have_swapctl_two_args\" = \"xyes\"; then\n    AC_DEFINE([HAVE_SWAPCTL_TWO_ARGS], [1], [Define if the function swapctl exists and takes two arguments.])\n  fi\n\n  if test \"x$c_cv_have_swapctl_three_args\" = \"xyes\"; then\n    AC_DEFINE([HAVE_SWAPCTL_THREE_ARGS], [1], [Define if the function swapctl exists and takes three arguments.])\n  fi\nfi\n\n# Check for NAN\nAC_ARG_WITH([nan-emulation],\n  [AS_HELP_STRING([--with-nan-emulation], [use emulated NAN. For crosscompiling only.])],\n  [\n    if test \"x$withval\" = \"xno\"; then\n      nan_type=\"none\"\n    else if test \"x$withval\" = \"xyes\"; then\n      nan_type=\"zero\"\n    else\n      nan_type=\"$withval\"\n    fi; fi\n  ],\n  [nan_type=\"none\"]\n)\n\nif test \"x$nan_type\" = \"xnone\"; then\n  AC_CACHE_CHECK([whether NAN is defined by default],\n    [c_cv_have_nan_default],\n    [\n      AC_COMPILE_IFELSE(\n        [\n          AC_LANG_PROGRAM(\n            [[\n              #include <stdlib.h>\n              #include <math.h>\n              static double foo = NAN;\n            ]],\n            [[\n              if (isnan (foo))\n                return 0;\n              return 1;\n            ]]\n          )\n        ],\n        [c_cv_have_nan_default=\"yes\"],\n        [c_cv_have_nan_default=\"no\"]\n      )\n    ]\n  )\nfi\n\nif test \"x$c_cv_have_nan_default\" = \"xyes\"; then\n  nan_type=\"default\"\nfi\n\nif test \"x$nan_type\" = \"xnone\"; then\n  AC_CACHE_CHECK([whether NAN is defined by __USE_ISOC99],\n    [c_cv_have_nan_isoc],\n    [\n      AC_COMPILE_IFELSE(\n        [\n          AC_LANG_PROGRAM(\n            [[\n              #include <stdlib.h>\n              #define __USE_ISOC99 1\n              #include <math.h>\n              static double foo = NAN;\n            ]],\n            [[\n              if (isnan (foo))\n                return 0;\n              return 1;\n            ]]\n          )\n        ],\n        [c_cv_have_nan_isoc=\"yes\"],\n        [c_cv_have_nan_isoc=\"no\"]\n      )\n    ]\n  )\nfi\n\nif test \"x$c_cv_have_nan_isoc\" = \"xyes\"; then\n  nan_type=\"isoc99\"\nfi\n\nif test \"x$nan_type\" = \"xnone\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS -lm\"\n  AC_CACHE_CHECK([whether NAN can be defined by 0/0],\n    [c_cv_have_nan_zero],\n    [\n      AC_RUN_IFELSE(\n        [\n          AC_LANG_PROGRAM(\n            [[\n              #include <stdlib.h>\n              #include <math.h>\n              #ifdef NAN\n              # undef NAN\n              #endif\n              #define NAN (0.0 / 0.0)\n              #ifndef isnan\n              # define isnan(f) ((f) != (f))\n              #endif\n              static double foo = NAN;\n            ]],\n            [[\n              if (isnan (foo))\n                return 0;\n              return 1;\n            ]]\n          )\n        ],\n        [c_cv_have_nan_zero=\"yes\"],\n        [c_cv_have_nan_zero=\"no\"]\n      )\n    ]\n  )\n  LDFLAGS=$SAVE_LDFLAGS\nfi\n\nif test \"x$c_cv_have_nan_zero\" = \"xyes\"; then\n  nan_type=\"zero\"\nfi\n\nif test \"x$nan_type\" = \"xdefault\"; then\n  AC_DEFINE([NAN_STATIC_DEFAULT], [1],\n    [Define if NAN is defined by default and can initialize static variables.]\n  )\nelse if test \"x$nan_type\" = \"xisoc99\"; then\n  AC_DEFINE([NAN_STATIC_ISOC], [1],\n    [Define if NAN is defined by __USE_ISOC99 and can initialize static variables.]\n  )\nelse if test \"x$nan_type\" = \"xzero\"; then\n  AC_DEFINE([NAN_ZERO_ZERO], [1],\n    [Define if NAN can be defined as (0.0 / 0.0)]\n  )\nelse\n  AC_MSG_ERROR([Didn't find out how to statically initialize variables to NAN. Sorry.])\nfi; fi; fi\n\nAC_ARG_WITH([fp-layout],\n  [\n    AS_HELP_STRING([--with-fp-layout],\n      [set the memory layout of doubles. For crosscompiling only.]\n    )\n  ],\n  [\n    if test \"x$withval\" = \"xnothing\"; then\n      fp_layout_type=\"nothing\"\n    else if test \"x$withval\" = \"xendianflip\"; then\n      fp_layout_type=\"endianflip\"\n    else if test \"x$withval\" = \"xintswap\"; then\n      fp_layout_type=\"intswap\"\n    else\n      AC_MSG_ERROR([Invalid argument for --with-fp-layout. Valid arguments are: nothing, endianflip, intswap]);\n    fi; fi; fi\n  ],\n  [fp_layout_type=\"unknown\"]\n)\n\nif test \"x$fp_layout_type\" = \"xunknown\"; then\n  AC_CACHE_CHECK([if doubles are stored in x86 representation],\n    [c_cv_fp_layout_need_nothing],\n    [\n      AC_RUN_IFELSE(\n        [\n          AC_LANG_PROGRAM(\n            [[\n              #include <stdlib.h>\n              #include <stdio.h>\n              #include <string.h>\n              #include <stdint.h>\n              #include <inttypes.h>\n              #include <stdbool.h>\n            ]],\n            [[\n              uint64_t i0;\n              uint64_t i1;\n              uint8_t c[8];\n              double d;\n\n              d = 8.642135e130;\n              memcpy ((void *) &i0, (void *) &d, 8);\n\n              i1 = i0;\n              memcpy ((void *) c, (void *) &i1, 8);\n\n              if ((c[0] == 0x2f) && (c[1] == 0x25)\n                  && (c[2] == 0xc0) && (c[3] == 0xc7)\n                  && (c[4] == 0x43) && (c[5] == 0x2b)\n                  && (c[6] == 0x1f) && (c[7] == 0x5b))\n                return 0;\n              return 1;\n            ]]\n          )\n        ],\n        [c_cv_fp_layout_need_nothing=\"yes\"],\n        [c_cv_fp_layout_need_nothing=\"no\"]\n      )\n    ]\n  )\nfi\n\nif test \"x$c_cv_fp_layout_need_nothing\" = \"xyes\"; then\n  fp_layout_type=\"nothing\"\nfi\n\nif test \"x$fp_layout_type\" = \"xunknown\"; then\n  AC_CACHE_CHECK([if endianflip converts to x86 representation],\n    [c_cv_fp_layout_need_endianflip],\n    [\n      AC_RUN_IFELSE(\n        [\n          AC_LANG_PROGRAM(\n            [[\n              #include <stdlib.h>\n              #include <stdio.h>\n              #include <string.h>\n              #include <stdint.h>\n              #include <inttypes.h>\n              #include <stdbool.h>\n              #define endianflip(A) ((((uint64_t)(A) & 0xff00000000000000LL) >> 56) | \\\n                                     (((uint64_t)(A) & 0x00ff000000000000LL) >> 40) | \\\n                                     (((uint64_t)(A) & 0x0000ff0000000000LL) >> 24) | \\\n                                     (((uint64_t)(A) & 0x000000ff00000000LL) >> 8)  | \\\n                                     (((uint64_t)(A) & 0x00000000ff000000LL) << 8)  | \\\n                                     (((uint64_t)(A) & 0x0000000000ff0000LL) << 24) | \\\n                                     (((uint64_t)(A) & 0x000000000000ff00LL) << 40) | \\\n                                     (((uint64_t)(A) & 0x00000000000000ffLL) << 56))\n            ]],\n            [[\n              uint64_t i0;\n              uint64_t i1;\n              uint8_t c[8];\n              double d;\n\n              d = 8.642135e130;\n              memcpy ((void *) &i0, (void *) &d, 8);\n\n              i1 = endianflip (i0);\n              memcpy ((void *) c, (void *) &i1, 8);\n\n              if ((c[0] == 0x2f) && (c[1] == 0x25)\n                  && (c[2] == 0xc0) && (c[3] == 0xc7)\n                  && (c[4] == 0x43) && (c[5] == 0x2b)\n                  && (c[6] == 0x1f) && (c[7] == 0x5b))\n                return 0;\n              return 1;\n            ]]\n          )\n        ],\n        [c_cv_fp_layout_need_endianflip=\"yes\"],\n        [c_cv_fp_layout_need_endianflip=\"no\"]\n      ]\n    )\n  )\nfi\n\nif test \"x$c_cv_fp_layout_need_endianflip\" = \"xyes\"; then\n  fp_layout_type=\"endianflip\"\nfi\n\nif test \"x$fp_layout_type\" = \"xunknown\"; then\n  AC_CACHE_CHECK([if intswap converts to x86 representation],\n    [c_cv_fp_layout_need_intswap],\n    [\n      AC_RUN_IFELSE(\n        [\n          AC_LANG_PROGRAM(\n            [[\n              #include <stdlib.h>\n              #include <stdio.h>\n              #include <string.h>\n              #include <stdint.h>\n              #include <inttypes.h>\n              #include <stdbool.h>\n              #define intswap(A)    ((((uint64_t)(A) & 0xffffffff00000000LL) >> 32) | \\\n                                     (((uint64_t)(A) & 0x00000000ffffffffLL) << 32))\n            ]],\n            [[\n              uint64_t i0;\n              uint64_t i1;\n              uint8_t c[8];\n              double d;\n\n              d = 8.642135e130;\n              memcpy ((void *) &i0, (void *) &d, 8);\n\n              i1 = intswap (i0);\n              memcpy ((void *) c, (void *) &i1, 8);\n\n              if ((c[0] == 0x2f) && (c[1] == 0x25)\n                  && (c[2] == 0xc0) && (c[3] == 0xc7)\n                  && (c[4] == 0x43) && (c[5] == 0x2b)\n                  && (c[6] == 0x1f) && (c[7] == 0x5b))\n                return 0;\n              return 1;\n            ]]\n          )\n        ],\n        [c_cv_fp_layout_need_intswap=\"yes\"],\n        [c_cv_fp_layout_need_intswap=\"no\"]\n      )\n    ]\n  )\nfi\n\nif test \"x$c_cv_fp_layout_need_intswap\" = \"xyes\"; then\n  fp_layout_type=\"intswap\"\nfi\n\nif test \"x$fp_layout_type\" = \"xnothing\"; then\n  AC_DEFINE([FP_LAYOUT_NEED_NOTHING], [1],\n    [Define if doubles are stored in x86 representation.]\n  )\nelse if test \"x$fp_layout_type\" = \"xendianflip\"; then\n  AC_DEFINE([FP_LAYOUT_NEED_ENDIANFLIP], [1],\n    [Define if endianflip is needed to convert to x86 representation.]\n  )\nelse if test \"x$fp_layout_type\" = \"xintswap\"; then\n  AC_DEFINE([FP_LAYOUT_NEED_INTSWAP], [1],\n    [Define if intswap is needed to convert to x86 representation.]\n  )\nelse\n  AC_MSG_ERROR([Didn't find out how doubles are stored in memory. Sorry.])\nfi; fi; fi\n\n# For cpusleep plugin\nAC_CACHE_CHECK([whether clock_boottime and clock_monotonic are supported],\n  [c_cv_have_clock_boottime_monotonic],\n  [\n    AC_COMPILE_IFELSE(\n      [AC_LANG_PROGRAM(\n        [[#include <time.h>]],\n        [[\n          struct timespec b, m;\n          clock_gettime(CLOCK_BOOTTIME, &b );\n          clock_gettime(CLOCK_MONOTONIC, &m );\n        ]]\n      )\n      ],\n      [c_cv_have_clock_boottime_monotonic=\"yes\"],\n      [c_cv_have_clock_boottime_monotonic=\"no\"]\n    )\n  ]\n)\n\n# --with-useragent {{{\nAC_ARG_WITH([useragent],\n  [AS_HELP_STRING([--with-useragent@<:@=AGENT@:>@], [User agent to use on http requests])],\n  [\n    if test \"x$withval\" != \"xno\" && test \"x$withval\" != \"xyes\"; then\n      AC_DEFINE_UNQUOTED([COLLECTD_USERAGENT], [\"$withval\"], [User agent for http requests])\n    fi\n  ]\n)\n\n# }}}\n\n# --with-data-max-name-len {{{\nAC_ARG_WITH([data-max-name-len],\n  [AS_HELP_STRING([--with-data-max-name-len@<:@=VALUE@:>@], [Maximum length of data buffers])],\n  [\n    if test \"x$withval\" != \"x\" && test $withval -gt 0; then\n      AC_DEFINE_UNQUOTED([DATA_MAX_NAME_LEN], [$withval], [Maximum length of data buffers])\n    else\n      AC_MSG_ERROR([DATA_MAX_NAME_LEN must be a positive integer -- $withval given])\n    fi\n  ],\n  [AC_DEFINE([DATA_MAX_NAME_LEN], [128], [Maximum length of data buffers])]\n)\n# }}}\n\nAC_CHECK_FUNCS([getfsstat], [have_getfsstat=\"yes\"], [have_getfsstat=\"no\"])\nAC_CHECK_FUNCS(getvfsstat, [have_getvfsstat=\"yes\"], [have_getvfsstat=\"no\"])\nAC_CHECK_FUNCS(listmntent, [have_listmntent=\"yes\"], [have_listmntent=\"no\"])\nAC_CHECK_FUNCS(getmntent_r, [have_getmntent_r=\"yes\"], [have_getmntent_r=\"no\"])\n\nAC_CHECK_FUNCS(getmntent, [have_getmntent=\"libc\"], [have_getmntent=\"no\"])\nif test \"x$have_getmntent\" = \"xno\"; then\n  AC_CHECK_LIB([sun], [getmntent],\n    [have_getmntent=\"sun\"],\n    [have_gemntent=\"no\"]\n  )\nfi\n\nif test \"x$have_getmntent\" = \"xno\"; then\n  AC_CHECK_LIB([seq], [getmntent],\n    [have_getmntent=\"seq\"],\n    [have_getmntent=\"no\"]\n  )\nfi\n\nif test \"x$have_getmntent\" = \"xno\"; then\n  AC_CHECK_LIB([gen], [getmntent],\n    [have_getmntent=\"gen\"],\n    [have_getmntent=\"no\"]\n  )\nfi\n\nif test \"x$have_getmntent\" = \"xlibc\"; then\n  AC_CACHE_CHECK([whether getmntent takes one argument],\n    [c_cv_have_one_getmntent],\n    [\n      AC_COMPILE_IFELSE(\n        [\n          AC_LANG_PROGRAM(\n            [[#include \"$srcdir/src/utils/mount/mount.h\"]],\n            [[\n              FILE *fh;\n              struct mntent *me;\n              fh = setmntent (\"/etc/mtab\", \"r\");\n              me = getmntent (fh);\n              return me->mnt_passno;\n            ]]\n          )\n        ],\n        [c_cv_have_one_getmntent=\"yes\"],\n        [c_cv_have_one_getmntent=\"no\"]\n      )\n    ]\n  )\n\n  AC_CACHE_CHECK([whether getmntent takes two arguments],\n    [c_cv_have_two_getmntent],\n    [\n      AC_COMPILE_IFELSE(\n        [\n          AC_LANG_PROGRAM(\n            [[#include \"$srcdir/src/utils/mount/mount.h\"]],\n            [[\n              FILE *fh;\n              struct mnttab mt;\n              int status;\n              fh = fopen (\"/etc/mnttab\", \"r\");\n              status = getmntent (fh, &mt);\n              return status;\n            ]]\n          )\n        ],\n        [c_cv_have_two_getmntent=\"yes\"],\n        [c_cv_have_two_getmntent=\"no\"]\n      )\n    ]\n  )\nfi\n\n# Check for different versions of `getmntent' here..\n\nif test \"x$have_getmntent\" = \"xlibc\"; then\n  if test \"x$c_cv_have_one_getmntent\" = \"xyes\"; then\n    AC_DEFINE([HAVE_ONE_GETMNTENT], [1],\n      [Define if the function getmntent exists and takes one argument.]\n    )\n  fi\n\n  if test \"x$c_cv_have_two_getmntent\" = \"xyes\"; then\n    AC_DEFINE([HAVE_TWO_GETMNTENT], [1],\n      [Define if the function getmntent exists and takes two arguments.]\n    )\n  fi\nfi\n\nif test \"x$have_getmntent\" = \"xsun\"; then\n  AC_DEFINE([HAVE_SUN_GETMNTENT], [1],\n    [Define if the function getmntent exists. It is the version from libsun.]\n  )\nfi\n\nif test \"x$have_getmntent\" = \"xgen\"; then\n  AC_DEFINE([HAVE_GEN_GETMNTENT], [1],\n    [Define if the function getmntent exists. It is the version from libgen.]\n  )\nfi\n\n# Check for htonll\nAC_CACHE_CHECK([whether htonll is defined],\n  [c_cv_have_htonll],\n  [\n    AC_LINK_IFELSE(\n      [\n        AC_LANG_PROGRAM(\n          [[\n            #include <inttypes.h>\n            #include <sys/types.h>\n            #include <netinet/in.h>\n          ]],\n          [[return htonll(0);]]\n        )\n      ],\n      [c_cv_have_htonll=\"yes\"],\n      [c_cv_have_htonll=\"no\"]\n    )\n  ]\n)\n\nif test \"x$c_cv_have_htonll\" = \"xyes\"; then\n  AC_DEFINE([HAVE_HTONLL], [1], [Define if the function htonll exists.])\nfi\n\n# Check for structures\nAC_CHECK_MEMBERS([struct if_data.ifi_ibytes, struct if_data.ifi_opackets, struct if_data.ifi_ierrors],\n  [AC_DEFINE([HAVE_STRUCT_IF_DATA], [1], [Define if struct if_data exists and is usable.])],\n  [],\n  [[\n    #include <sys/types.h>\n    #include <sys/socket.h>\n    #include <net/if.h>\n  ]]\n)\n\nAC_CHECK_MEMBERS([struct net_device_stats.rx_bytes, struct net_device_stats.tx_packets, struct net_device_stats.rx_errors],\n  [AC_DEFINE([HAVE_STRUCT_NET_DEVICE_STATS], [1], [Define if struct net_device_stats exists and is usable.])],\n  [],\n  [[\n    #include <sys/types.h>\n    #include <sys/socket.h>\n    #include <linux/if.h>\n    #include <linux/netdevice.h>\n  ]]\n)\n\nAC_CHECK_MEMBERS([struct inet_diag_req.id, struct inet_diag_req.idiag_states],\n  [AC_DEFINE([HAVE_STRUCT_LINUX_INET_DIAG_REQ], [1], [Define if struct inet_diag_req exists and is usable.])],\n  [],\n  [[#include <linux/inet_diag.h>]]\n)\n\nAC_CHECK_MEMBERS([struct ip_mreqn.imr_ifindex], [],\n  [],\n  [[\n    #include <netinet/in.h>\n    #include <net/if.h>\n  ]]\n)\n\nAC_CHECK_MEMBERS([struct kinfo_proc.ki_pid, struct kinfo_proc.ki_rssize, struct kinfo_proc.ki_rusage],\n  [\n    AC_DEFINE([HAVE_STRUCT_KINFO_PROC_FREEBSD], [1], [Define if struct kinfo_proc exists in the FreeBSD variant.])\n    have_struct_kinfo_proc_freebsd=\"yes\"\n  ],\n  [],\n  [[\n    #include <kvm.h>\n    #include <sys/param.h>\n    #include <sys/sysctl.h>\n    #include <sys/user.h>\n  ]]\n)\n\nAC_CHECK_MEMBERS([struct kinfo_proc.p_pid, struct kinfo_proc.p_vm_rssize],\n  [\n    AC_DEFINE([HAVE_STRUCT_KINFO_PROC_OPENBSD], [1], [Define if struct kinfo_proc exists in the OpenBSD variant.])\n    have_struct_kinfo_proc_openbsd=\"yes\"\n  ],\n  [],\n  [[\n    #include <sys/param.h>\n    #include <sys/sysctl.h>\n    #include <kvm.h>\n  ]]\n)\n\nAC_CHECK_MEMBERS([struct kinfo_proc2.p_pid, struct kinfo_proc2.p_uru_maxrss],\n  [\n    AC_DEFINE([HAVE_STRUCT_KINFO_PROC2_NETBSD], [1], [Define if struct kinfo_proc2 exists in the NetBSD variant.])\n    have_struct_kinfo_proc2_netbsd=\"yes\"\n  ],\n  [],\n  [[\n    #include <sys/param.h>\n    #include <sys/sysctl.h>\n    #include <kvm.h>\n  ]]\n)\n\nAC_CHECK_MEMBERS([struct udphdr.uh_dport, struct udphdr.uh_sport],\n  [],\n  [],\n  [[\n    #define _BSD_SOURCE\n    #define _DEFAULT_SOURCE\n    #include <stdint.h>\n    #if HAVE_SYS_TYPES_H\n    # include <sys/types.h>\n    #endif\n    #if HAVE_NETINET_IN_SYSTM_H\n    # include <netinet/in_systm.h>\n    #endif\n    #if HAVE_NETINET_IN_H\n    # include <netinet/in.h>\n    #endif\n    #if HAVE_NETINET_IP_H\n    # include <netinet/ip.h>\n    #endif\n    #if HAVE_NETINET_UDP_H\n    # include <netinet/udp.h>\n    #endif\n  ]]\n)\n\nAC_CHECK_MEMBERS([struct udphdr.dest, struct udphdr.source],\n  [],\n  [],\n  [[\n    #define _BSD_SOURCE\n    #define _DEFAULT_SOURCE\n    #include <stdint.h>\n    #if HAVE_SYS_TYPES_H\n    # include <sys/types.h>\n    #endif\n    #if HAVE_NETINET_IN_SYSTM_H\n    # include <netinet/in_systm.h>\n    #endif\n    #if HAVE_NETINET_IN_H\n    # include <netinet/in.h>\n    #endif\n    #if HAVE_NETINET_IP_H\n    # include <netinet/ip.h>\n    #endif\n    #if HAVE_NETINET_UDP_H\n    # include <netinet/udp.h>\n    #endif\n  ]]\n)\n\nAC_CHECK_MEMBERS([kstat_io_t.nwritten, kstat_io_t.writes, kstat_io_t.nwrites, kstat_io_t.wtime],\n  [],\n  [],\n  [[# include <kstat.h>]]\n)\n\n# check for pthread_setname_np\nSAVE_LDFLAGS=\"$LDFLAGS\"\nLDFLAGS=\"$LDFLAGS -lpthread\"\n\nAC_MSG_CHECKING([for pthread_setname_np])\nhave_pthread_setname_np=\"no\"\nAC_LINK_IFELSE(\n  [\n    AC_LANG_PROGRAM(\n      [[\n        #define _GNU_SOURCE\n        #include <pthread.h>\n      ]],\n      [[pthread_setname_np((pthread_t) {0}, \"conftest\");]]\n    )\n  ],\n  [\n    have_pthread_setname_np=\"yes\"\n    AC_DEFINE(HAVE_PTHREAD_SETNAME_NP, 1, [pthread_setname_np() is available.])\n  ]\n)\n\nAC_MSG_RESULT([$have_pthread_setname_np])\n\n# check for pthread_set_name_np(3) (FreeBSD)\nAC_MSG_CHECKING([for pthread_set_name_np])\nhave_pthread_set_name_np=\"no\"\nAC_LINK_IFELSE(\n  [\n    AC_LANG_PROGRAM(\n      [[#include <pthread_np.h>]],\n      [[pthread_set_name_np((pthread_t) {0}, \"conftest\");]]\n    )\n   ],\n  [\n    have_pthread_set_name_np=\"yes\"\n    AC_DEFINE(HAVE_PTHREAD_SET_NAME_NP, 1, [pthread_set_name_np() is available.])\n  ]\n)\nAC_MSG_RESULT([$have_pthread_set_name_np])\n\nLDFLAGS=\"$SAVE_LDFLAGS\"\n\nAC_CHECK_TYPES([struct ip6_ext],\n  [have_ip6_ext=\"yes\"],\n  [have_ip6_ext=\"no\"],\n  [[\n    #include <stdint.h>\n    #if HAVE_SYS_TYPES_H\n    # include <sys/types.h>\n    #endif\n    #if HAVE_NETINET_IN_SYSTM_H\n    # include <netinet/in_systm.h>\n    #endif\n    #if HAVE_NETINET_IN_H\n    # include <netinet/in.h>\n    #endif\n    #if HAVE_NETINET_IP6_H\n    # include <netinet/ip6.h>\n    #endif\n  ]]\n)\n\nif test \"x$have_ip6_ext\" = \"xno\"; then\n  SAVE_CFLAGS=\"$CFLAGS\"\n  CFLAGS=\"$CFLAGS -DSOLARIS2=8\"\n  AC_CHECK_TYPES([struct ip6_ext],\n    [have_ip6_ext=\"yes, with -DSOLARIS2=8\"],\n    [have_ip6_ext=\"no\"],\n    [[\n      #include <stdint.h>\n      #if HAVE_SYS_TYPES_H\n      # include <sys/types.h>\n      #endif\n      #if HAVE_NETINET_IN_SYSTM_H\n      # include <netinet/in_systm.h>\n      #endif\n      #if HAVE_NETINET_IN_H\n      # include <netinet/in.h>\n      #endif\n      #if HAVE_NETINET_IP6_H\n      # include <netinet/ip6.h>\n      #endif\n    ]]\n  )\n  if test \"x$have_ip6_ext\" = \"xno\"; then\n    CFLAGS=\"$SAVE_CFLAGS\"\n  fi\nfi\n\n# libi2c-dev\nif test \"x$ac_system\" = \"xLinux\"; then\n  with_libi2c_libs=\"\"\n  AC_CHECK_HEADERS([i2c/smbus.h],\n    [with_libi2c_libs=\"-li2c\"]\n  )\n  AC_CHECK_DECL([i2c_smbus_read_i2c_block_data],\n    [with_libi2c=\"yes\"],\n    [with_libi2c=\"no (symbol i2c_smbus_read_i2c_block_data not found - have you installed libi2c-dev ?)\"],\n    [[\n      #include <stdlib.h>\n      #include <linux/i2c-dev.h>\n      #if HAVE_I2C_SMBUS_H\n      # include <i2c/smbus.h>\n      #endif\n    ]]\n  )\n  BUILD_WITH_LIBI2C_LIBS=\"$with_libi2c_libs\"\n  AC_SUBST([BUILD_WITH_LIBI2C_LIBS])\nelse\n  with_libi2c=\"no (Linux only)\"\nfi\n\n#\n# Checks for libraries begin here\n#\n\n# Check for libpthread\nSAVE_LIBS=\"$LIBS\"\nAC_CHECK_LIB([pthread],\n  [pthread_create],\n  [],\n  [AC_MSG_ERROR([Symbol 'pthread_create' not found in libpthread])],\n  []\n)\nPTHREAD_LIBS=\"$LIBS\"\nLIBS=\"$SAVE_LIBS\"\nAC_SUBST([PTHREAD_LIBS])\n\nAC_CHECK_HEADERS([pthread.h],\n  [],\n  [AC_MSG_ERROR([pthread.h not found])]\n)\n\nm4_divert_once([HELP_WITH], [\nCollectd additional packages:])\n\nif test \"x$ac_system\" = \"xAIX\"; then\n  with_perfstat=\"yes\"\n  with_procinfo=\"yes\"\nelse\n  with_perfstat=\"no (AIX only)\"\n  with_procinfo=\"no (AIX only)\"\nfi\n\nif test \"x$with_perfstat\" = \"xyes\"; then\n  AC_CHECK_LIB([perfstat], [perfstat_reset],\n    [with_perfstat=\"yes\"],\n    [with_perfstat=\"no (perfstat not found)\"]\n  )\nfi\n\nif test \"x$with_perfstat\" = \"xyes\"; then\n  AC_DEFINE([HAVE_PERFSTAT], [1], [Define to 1 if you have the 'perfstat' library (-lperfstat)])\n  # struct members pertaining to donation have been added to libperfstat somewhere between AIX5.3ML5 and AIX5.3ML9\n  AC_CHECK_MEMBER([perfstat_partition_type_t.b.donate_enabled],\n    [],\n    [],\n    [[#include <libperfstat.h]]\n  )\n  if test \"x$av_cv_member_perfstat_partition_type_t_b_donate_enabled\" = \"xyes\"; then\n    AC_DEFINE([PERFSTAT_SUPPORTS_DONATION], [1], [Define to 1 if your version of the 'perfstat' library supports donation])\n  fi\nfi\nAM_CONDITIONAL([BUILD_WITH_PERFSTAT], [test \"x$with_perfstat\" = \"xyes\"])\n\n# Processes plugin under AIX.\nif test \"x$with_procinfo\" = \"xyes\"; then\n  AC_CHECK_HEADERS([procinfo.h],\n    [AC_DEFINE([HAVE_PROCINFO_H], [1], [Define to 1 if you have the procinfo.h])],\n    [with_procinfo=\"no (procinfo.h not found)\"]\n  )\nfi\n\nif test \"x$ac_system\" = \"xSolaris\"; then\n  with_kstat=\"yes\"\n  with_devinfo=\"yes\"\nelse\n  with_kstat=\"no (Solaris only)\"\n  with_devinfo=\"no (Solaris only)\"\nfi\n\nif test \"x$with_kstat\" = \"xyes\"; then\n  AC_CHECK_LIB([kstat], [kstat_open],\n    [with_kstat=\"yes\"],\n    [with_kstat=\"no (libkstat not found)\"]\n  )\nfi\n\nif test \"x$with_kstat\" = \"xyes\"; then\n  AC_CHECK_LIB([devinfo], [di_init],\n    [with_devinfo=\"yes\"],\n    [with_devinfo=\"no (not found)\"]\n  )\n  AC_CHECK_HEADERS([kstat.h],\n    [AC_DEFINE(HAVE_LIBKSTAT, [1], [Define to 1 if you have the 'kstat' library (-lkstat)])],\n    [with_kstat=\"no (kstat.h not found)\"]\n  )\nfi\n\nAM_CONDITIONAL([BUILD_WITH_LIBDEVINFO], [test \"x$with_devinfo\" = \"xyes\"])\nAM_CONDITIONAL([BUILD_WITH_LIBKSTAT], [test \"x$with_kstat\" = \"xyes\"])\n\nif test \"x$ac_system\" = \"xDarwin\"; then\n  with_libiokit=\"yes\"\nelse\n  with_libiokit=\"no\"\nfi\nAM_CONDITIONAL([BUILD_WITH_LIBIOKIT], [test \"x$with_libiokit\" = \"xyes\"])\n\nwith_libkvm=\"no\"\nAC_CHECK_LIB([kvm], [kvm_getprocs],\n  [with_kvm_getprocs=\"yes\"],\n  [with_kvm_getprocs=\"no\"]\n)\n\nif test \"x$with_kvm_getprocs\" = \"xyes\"; then\n  AC_DEFINE([HAVE_LIBKVM_GETPROCS], [1],\n    [Define to 1 if you have the 'kvm' library with the 'kvm_getprocs' symbol (-lkvm)]\n  )\n  with_libkvm=\"yes\"\nfi\n\nAM_CONDITIONAL([BUILD_WITH_LIBKVM_GETPROCS], [test \"x$with_kvm_getprocs\" = \"xyes\"])\n\nAC_CHECK_LIB([kvm], [kvm_getswapinfo],\n  [with_kvm_getswapinfo=\"yes\"],\n  [with_kvm_getswapinfo=\"no\"]\n)\n\nif test \"x$with_kvm_getswapinfo\" = \"xyes\"; then\n  AC_DEFINE([HAVE_LIBKVM_GETSWAPINFO], [1],\n    [Define to 1 if you have the 'kvm' library with the 'kvm_getswapinfo' symbol (-lkvm)]\n  )\n  with_libkvm=\"yes\"\nfi\n\nAM_CONDITIONAL([BUILD_WITH_LIBKVM_GETSWAPINFO], [test \"x$with_kvm_getswapinfo\" = \"xyes\"])\n\nAC_CHECK_LIB([kvm], [kvm_nlist],\n  [with_kvm_nlist=\"yes\"],\n  [with_kvm_nlist=\"no\"]\n)\n\nif test \"x$with_kvm_nlist\" = \"xyes\"; then\n  AC_CHECK_HEADERS([bsd/nlist.h nlist.h])\n  AC_DEFINE([HAVE_LIBKVM_NLIST], [1],\n    [Define to 1 if you have the 'kvm' library with the 'kvm_nlist' symbol (-lkvm)]\n  )\n  with_libkvm=\"yes\"\nfi\n\nAM_CONDITIONAL([BUILD_WITH_LIBKVM_NLIST], [test \"x$with_kvm_nlist\" = \"xyes\"])\n\nAC_CHECK_LIB([kvm], [kvm_openfiles],\n  [with_kvm_openfiles=\"yes\"],\n  [with_kvm_openfiles=\"no\"]\n)\n\nif test \"x$with_kvm_openfiles\" = \"xyes\"; then\n  AC_DEFINE([HAVE_LIBKVM_NLIST], [1],\n    [Define to 1 if you have the 'kvm' library with the 'kvm_openfiles' symbol (-lkvm)]\n  )\n  with_libkvm=\"yes\"\nfi\n\nAC_CHECK_HEADERS([libpfctl.h],,,\n[\n  #include <sys/queue.h>\n  #include <sys/types.h>\n  #include <netinet/in.h>\n  #include <net/if.h>\n  #include <net/pfvar.h>\n])\nAC_CHECK_LIB([pfctl], [pfctl_status_counter],\n  [with_libpfctl=\"yes\"],\n  [with_libpfctl=\"no\"]\n)\nAM_CONDITIONAL([BUILD_WITH_LIBPFCTL], [test \"x$with_libpfctl\" = \"xyes\"])\n\n# --with-cuda {{{\nAC_ARG_WITH([cuda],\n  [AS_HELP_STRING([--with-cuda@<:@=PREFIX@:>@], [Path to cuda.])],\n  [\n    if test \"x$withval\" != \"xno\" && test \"x$withval\" != \"xyes\"; then\n      with_cuda_cppflags=\"-I$withval/include\"\n      with_cuda_ldflags=\"-L$withval/lib\"\n      with_cuda=\"yes\"\n    else\n      with_cuda=\"$withval\"\n    fi\n  ],\n  [with_cuda=\"no\"]\n)\n\nif test \"x$with_cuda\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_cuda_cppflags\"\n\n  AC_CHECK_HEADERS([nvml.h],\n    [with_cuda=\"yes\"],\n    [with_cuda=\"no (nvml.h not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_cuda\" = \"xyes\"; then\n  BUILD_WITH_CUDA_CPPFLAGS=\"$with_cuda_cppflags\"\n  BUILD_WITH_CUDA_LDFLAGS=\"$with_cuda_ldflags\"\n  BUILD_WITH_CUDA_LIBS=\"-lnvidia-ml\"\nfi\n\nAC_SUBST([BUILD_WITH_CUDA_CPPFLAGS])\nAC_SUBST([BUILD_WITH_CUDA_LDFLAGS])\nAC_SUBST([BUILD_WITH_CUDA_LIBS])\n\n# }}}\n\n# --with-epics-base {{{\nAC_ARG_WITH([epics-base],\n  [AS_HELP_STRING([--with-epics-base@<:@=PREFIX@:>@], [Path to epics-base.])],\n  [\n    with_epics_base=\"$withval\"\n    if test \"x$withval\" = \"xno\"; then\n      with_epics_base=\"no (disabled on command line)\"\n    fi\n  ],\n  [with_epics_base=\"yes\"]\n)\n\nif test \"x$with_epics_base\" = \"xyes\"; then\nPKG_CHECK_MODULES([EPICS_BASE], [epics-base],\n  [with_epics_base=\"yes\"],\n  [with_epics_base=\"no (pkg-config could not find epics-base)\"]\n)\nfi\n\nif test \"x$with_epics_base\" = \"xyes\"; then\n  BUILD_WITH_EPICS_BASE_CFLAGS=\"$EPICS_BASE_CFLAGS\"\n  BUILD_WITH_EPICS_BASE_LIBS=\"$EPICS_BASE_LIBS -lca\"\nfi\n\nAC_SUBST([BUILD_WITH_EPICS_BASE_CFLAGS])\nAC_SUBST([BUILD_WITH_EPICS_BASE_LIBS])\n\n# }}}\n\n# --with-libaquaero5 {{{\nAC_ARG_WITH([libaquaero5],\n  [AS_HELP_STRING([--with-libaquaero5@<:@=PREFIX@:>@], [Path to aquatools-ng source code.])],\n  [\n    if test \"x$withval\" = \"xyes\"; then\n      with_libaquaero5=\"yes\"\n    else if test \"x$withval\" = \"xno\"; then\n      with_libaquaero5=\"no\"\n    else\n      with_libaquaero5=\"yes\"\n      LIBAQUAERO5_CFLAGS=\"$LIBAQUAERO5_CFLAGS -I$withval/src\"\n      LIBAQUAERO5_LDFLAGS=\"$LIBAQUAERO5_LDFLAGS -L$withval/obj\"\n    fi; fi\n  ],\n  [with_libaquaero5=\"yes\"]\n)\n\nSAVE_CPPFLAGS=\"$CPPFLAGS\"\nSAVE_LDFLAGS=\"$LDFLAGS\"\nCPPFLAGS=\"$CPPFLAGS $LIBAQUAERO5_CFLAGS\"\nLDFLAGS=\"$LDFLAGS $LIBAQUAERO5_LDFLAGS\"\n\nif test \"x$with_libaquaero5\" = \"xyes\"; then\n  AC_CHECK_HEADERS([libaquaero5.h],\n    [with_libaquaero5=\"yes\"],\n    [with_libaquaero5=\"no (libaquaero5.h not found)\"]\n  )\nfi\n\nif test \"x$with_libaquaero5\" = \"xyes\"; then\n  AC_CHECK_LIB([aquaero5], libaquaero5_poll,\n    [with_libaquaero5=\"yes\"],\n    [with_libaquaero5=\"no (symbol 'libaquaero5_poll' not found)\"]\n  )\nfi\n\nCPPFLAGS=\"$SAVE_CPPFLAGS\"\nLDFLAGS=\"$SAVE_LDFLAGS\"\n\nif test \"x$with_libaquaero5\" = \"xyes\"; then\n  BUILD_WITH_LIBAQUAERO5_CFLAGS=\"$LIBAQUAERO5_CFLAGS\"\n  BUILD_WITH_LIBAQUAERO5_LDFLAGS=\"$LIBAQUAERO5_LDFLAGS\"\nfi\nAC_SUBST([BUILD_WITH_LIBAQUAERO5_CFLAGS])\nAC_SUBST([BUILD_WITH_LIBAQUAERO5_LDFLAGS])\n# }}}\n\n# --with-libhiredis {{{\nAC_ARG_WITH([libhiredis],\n  [AS_HELP_STRING([--with-libhiredis@<:@=PREFIX@:>@], [Path to libhiredis.])],\n  [\n    if test \"x$withval\" = \"xyes\"; then\n      with_libhiredis=\"yes\"\n    else if test \"x$withval\" = \"xno\"; then\n      with_libhiredis=\"no\"\n    else\n      with_libhiredis=\"yes\"\n      LIBHIREDIS_CPPFLAGS=\"$LIBHIREDIS_CPPFLAGS -I$withval/include\"\n      LIBHIREDIS_LDFLAGS=\"$LIBHIREDIS_LDFLAGS -L$withval/lib\"\n    fi; fi\n  ],\n  [with_libhiredis=\"yes\"]\n)\n\nSAVE_CPPFLAGS=\"$CPPFLAGS\"\nSAVE_LDFLAGS=\"$LDFLAGS\"\nCPPFLAGS=\"$CPPFLAGS $LIBHIREDIS_CPPFLAGS\"\nLDFLAGS=\"$LDFLAGS $LIBHIREDIS_LDFLAGS\"\n\nif test \"x$with_libhiredis\" = \"xyes\"; then\n  AC_CHECK_HEADERS([hiredis/hiredis.h],\n    [with_libhiredis=\"yes\"],\n    [with_libhiredis=\"no (hiredis.h not found)\"]\n  )\nfi\n\nif test \"x$with_libhiredis\" = \"xyes\"; then\n  AC_CHECK_LIB([hiredis], [redisCommand],\n    [with_libhiredis=\"yes\"],\n    [with_libhiredis=\"no (symbol 'redisCommand' not found)\"]\n  )\nfi\n\nCPPFLAGS=\"$SAVE_CPPFLAGS\"\nLDFLAGS=\"$SAVE_LDFLAGS\"\n\nif test \"x$with_libhiredis\" = \"xyes\"; then\n  BUILD_WITH_LIBHIREDIS_CPPFLAGS=\"$LIBHIREDIS_CPPFLAGS\"\n  BUILD_WITH_LIBHIREDIS_LDFLAGS=\"$LIBHIREDIS_LDFLAGS\"\nfi\n\nAC_SUBST([BUILD_WITH_LIBHIREDIS_CPPFLAGS])\nAC_SUBST([BUILD_WITH_LIBHIREDIS_LDFLAGS])\n# }}}\n\n# --with-libredfish {{{\nAC_ARG_WITH([libredfish],\n  [AS_HELP_STRING([--with-libredfish@<:@=PREFIX@:>@], [Path to libredfish.])],\n  [\n    if test \"x$withval\" = \"xyes\"; then\n      with_libredfish=\"yes\"\n    else if test \"x$withval\" = \"xno\"; then\n      with_libredfish=\"no\"\n    else\n      with_libredfish=\"yes\"\n      LIBREDFISH_CPPFLAGS=\"$LIBREDFISH_CPPFLAGS -I$withval/include\"\n      LIBREDFISH_LDFLAGS=\"$LIBREDFISH_LDFLAGS -L$withval/lib\"\n    fi; fi\n  ],\n  [with_libredfish=\"yes\"]\n)\n\nSAVE_CPPFLAGS=\"$CPPFLAGS\"\nSAVE_LDFLAGS=\"$LDFLAGS\"\nCPPFLAGS=\"$CPPFLAGS $LIBREDFISH_CPPFLAGS\"\nLDFLAGS=\"$LDFLAGS $LIBREDFISH_LDFLAGS\"\n\nif test \"x$with_libredfish\" = \"xyes\"; then\n  if test \"x$LIBREDFISH_CPPFLAGS\" != \"x\"; then\n    AC_MSG_NOTICE([libredfish CPPFLAGS: $LIBREDFISH_CPPFLAGS])\n  fi\n  AC_CHECK_HEADERS([redfish.h],\n    [with_libredfish=\"yes\"],\n    [with_libredfish=\"no (redfish.h not found)\"]\n  )\nfi\n\nif test \"x$with_libredfish\" = \"xyes\"; then\n  if test \"x$LIBREDFISH_LDFLAGS\" != \"x\"; then\n    AC_MSG_NOTICE([libredfish LDFLAGS: $LIBREDFISH_LDFLAGS])\n  fi\n  AC_CHECK_LIB([redfish], [createServiceEnumerator],\n    [with_libredfish=\"yes\"],\n    [with_libredfish=\"no (symbol 'createServiceEnumerator' not found)\"]\n  )\nfi\n\nCPPFLAGS=\"$SAVE_CPPFLAGS\"\nLDFLAGS=\"$SAVE_LDFLAGS\"\n\nif test \"x$with_libredfish\" = \"xyes\"; then\n  BUILD_WITH_LIBREDFISH_CPPFLAGS=\"$LIBREDFISH_CPPFLAGS\"\n  BUILD_WITH_LIBREDFISH_LDFLAGS=\"$LIBREDFISH_LDFLAGS\"\nfi\n\nAC_SUBST([BUILD_WITH_LIBREDFISH_CPPFLAGS])\nAC_SUBST([BUILD_WITH_LIBREDFISH_LDFLAGS])\n\n# }}}\n\n# --with-sqlite3 {{{\nAC_ARG_WITH([sqlite3],\n  [AS_HELP_STRING([--with-sqlite3@<:@=PREFIX@:>@], [Path to sqlite3.])],\n  [\n    if test \"x$withval\" = \"xyes\"; then\n      with_sqlite3=\"yes\"\n    else if test \"x$withval\" = \"xno\"; then\n      with_sqlite3=\"no\"\n    else\n      with_sqlite3=\"yes\"\n      SQLITE3_CPPFLAGS=\"$SQLITE3_CPPFLAGS -I$withval/include\"\n      SQLITE3_LDFLAGS=\"$SQLITE3_LDFLAGS -L$withval/lib\"\n    fi; fi\n  ],\n  [with_sqlite3=\"yes\"]\n)\n\nSAVE_CPPFLAGS=\"$CPPFLAGS\"\nSAVE_LDFLAGS=\"$LDFLAGS\"\nCPPFLAGS=\"$CPPFLAGS $SQLITE3_CPPFLAGS\"\nLDFLAGS=\"$LDFLAGS $SQLITE3_LDFLAGS\"\n\nif test \"x$with_sqlite3\" = \"xyes\"; then\n  if test \"x$SQLITE3_CPPFLAGS\" != \"x\"; then\n    AC_MSG_NOTICE([sqlite3 CPPFLAGS: $SQLITE3_CPPFLAGS])\n  fi\n  AC_CHECK_HEADERS([sqlite3.h],\n    [with_sqlite3=\"yes\"],\n    [with_sqlite3=\"no (sqlite3.h not found)\"]\n  )\nfi\n\nCPPFLAGS=\"$SAVE_CPPFLAGS\"\nLDFLAGS=\"$SAVE_LDFLAGS\"\n\nif test \"x$with_sqlite3\" = \"xyes\"; then\n  BUILD_WITH_SQLITE3_CPPFLAGS=\"$SQLITE3_CPPFLAGS\"\n  BUILD_WITH_SQLITE3_LDFLAGS=\"$SQLITE3_LDFLAGS\"\n  BUILD_WITH_SQLITE3_LIBS=\"-lsqlite3\"\nfi\n\nAC_SUBST([BUILD_WITH_SQLITE3_CPPFLAGS])\nAC_SUBST([BUILD_WITH_SQLITE3_LDFLAGS])\nAC_SUBST([BUILD_WITH_SQLITE3_LIBS])\n# }}}\n\n# --with-libcurl {{{\nwith_curl_config=\"curl-config\"\nwith_curl_cflags=\"\"\nwith_curl_libs=\"\"\nAC_ARG_WITH(libcurl,\n  [AS_HELP_STRING([--with-libcurl@<:@=PREFIX@:>@], [Path to libcurl.])],\n  [\n    if test \"x$withval\" = \"xno\"; then\n      with_libcurl=\"no\"\n    else if test \"x$withval\" = \"xyes\"; then\n      with_libcurl=\"yes\"\n    else\n      if test -f \"$withval\" && test -x \"$withval\"; then\n        with_curl_config=\"$withval\"\n        with_libcurl=\"yes\"\n      else if test -x \"$withval/bin/curl-config\"; then\n        with_curl_config=\"$withval/bin/curl-config\"\n        with_libcurl=\"yes\"\n      fi; fi\n      with_libcurl=\"yes\"\n    fi; fi\n  ],\n  [with_libcurl=\"yes\"]\n)\n\nif test \"x$with_libcurl\" = \"xyes\"; then\n  with_curl_cflags=`$with_curl_config --cflags 2>/dev/null`\n  curl_config_status=$?\n\n  if test $curl_config_status -ne 0; then\n    with_libcurl=\"no ($with_curl_config failed)\"\n  else\n    SAVE_CPPFLAGS=\"$CPPFLAGS\"\n    CPPFLAGS=\"$CPPFLAGS $with_curl_cflags\"\n\n    AC_CHECK_HEADERS([curl/curl.h],\n      [with_libcurl=\"yes\"],\n      [with_libcurl=\"no (curl/curl.h not found)\"]\n    )\n\n    CPPFLAGS=\"$SAVE_CPPFLAGS\"\n  fi\nfi\n\nif test \"x$with_libcurl\" = \"xyes\"; then\n  with_curl_libs=`$with_curl_config --libs 2>/dev/null`\n  curl_config_status=$?\n\n  if test $curl_config_status -ne 0; then\n    with_libcurl=\"no ($with_curl_config failed)\"\n  else\n    AC_CHECK_LIB([curl], [curl_easy_init],\n      [with_libcurl=\"yes\"],\n      [with_libcurl=\"no (symbol 'curl_easy_init' not found)\"],\n      [$with_curl_libs]\n    )\n\n    AC_CHECK_DECL([CURLOPT_USERNAME],\n      [have_curlopt_username=\"yes\"],\n      [have_curlopt_username=\"no\"],\n      [[#include <curl/curl.h>]]\n    )\n\n    AC_CHECK_DECL(CURLOPT_TIMEOUT_MS,\n      [have_curlopt_timeout=\"yes\"],\n      [have_curlopt_timeout=\"no\"],\n      [[#include <curl/curl.h>]]\n    )\n\n    AC_CHECK_DECL(CURLOPT_UNIX_SOCKET_PATH,\n      [have_curlopt_unix_socket_path=\"yes\"],\n      [have_curlopt_unix_socket_path=\"no\"],\n      [[#include <curl/curl.h>]]\n    )\n  fi\nfi\n\nif test \"x$with_libcurl\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_curl_cflags\"\n  LDFLAGS=\"$LDFLAGS $with_curl_libs\"\n  AC_CACHE_CHECK([for CURLINFO_APPCONNECT_TIME],\n    [c_cv_have_curlinfo_appconnect_time],\n    [\n      AC_LINK_IFELSE(\n        [\n          AC_LANG_PROGRAM(\n            [[#include <curl/curl.h>]],\n            [[\n              int val = CURLINFO_APPCONNECT_TIME;\n              return val;\n            ]]\n          )\n        ],\n        [c_cv_have_curlinfo_appconnect_time=\"yes\"],\n        [c_cv_have_curlinfo_appconnect_time=\"no\"]\n      )\n    ]\n  )\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$c_cv_have_curlinfo_appconnect_time\" = \"xyes\"; then\n  AC_DEFINE([HAVE_CURLINFO_APPCONNECT_TIME], [1],\n    [Define if curl.h defines CURLINFO_APPCONNECT_TIME.]\n  )\nfi\n\nif test \"x$with_libcurl\" = \"xyes\"; then\n  BUILD_WITH_LIBCURL_CFLAGS=\"$with_curl_cflags\"\n  BUILD_WITH_LIBCURL_LIBS=\"$with_curl_libs\"\n\n  if test \"x$have_curlopt_username\" = \"xyes\"; then\n    AC_DEFINE([HAVE_CURLOPT_USERNAME], [1],\n      [Define if libcurl supports CURLOPT_USERNAME option.]\n    )\n  fi\n\n  if test \"x$have_curlopt_timeout\" = \"xyes\"; then\n    AC_DEFINE([HAVE_CURLOPT_TIMEOUT_MS], [1],\n      [Define if libcurl supports CURLOPT_TIMEOUT_MS option.]\n    )\n  fi\n\n  if test \"x$have_curlopt_unix_socket_path\" = \"xyes\"; then\n    AC_DEFINE([HAVE_CURLOPT_UNIX_SOCKET_PATH], [1],\n      [Define if libcurl supports CURLOPT_UNIX_SOCKET_PATH option.]\n    )\n  fi\nfi\n\nAC_SUBST(BUILD_WITH_LIBCURL_CFLAGS)\nAC_SUBST(BUILD_WITH_LIBCURL_LIBS)\n\nAM_CONDITIONAL([BUILD_WITH_LIBCURL], [test \"x$with_libcurl\" = \"xyes\"])\n# }}}\n\n# --with-libdbi {{{\nAC_ARG_WITH([libdbi],\n  [AS_HELP_STRING([--with-libdbi@<:@=PREFIX@:>@], [Path to libdbi.])],\n  [\n    if test \"x$withval\" != \"xno\" && test \"x$withval\" != \"xyes\"; then\n      with_libdbi_cppflags=\"-I$withval/include\"\n      with_libdbi_ldflags=\"-L$withval/lib\"\n      with_libdbi=\"yes\"\n    else\n      with_libdbi=\"$withval\"\n    fi\n  ],\n  [with_libdbi=\"yes\"]\n)\n\nif test \"x$with_libdbi\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libdbi_cppflags\"\n\n  AC_CHECK_HEADERS([dbi/dbi.h],\n    [with_libdbi=\"yes\"],\n    [with_libdbi=\"no (dbi/dbi.h not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libdbi\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_libdbi_ldflags\"\n\n  AC_CHECK_LIB([dbi], [dbi_initialize],\n    [with_libdbi=\"yes\"],\n    [with_libdbi=\"no (Symbol 'dbi_initialize' not found)\"]\n  )\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nBUILD_WITH_LIBDBI_CPPFLAGS=\"$with_libdbi_cppflags\"\nBUILD_WITH_LIBDBI_LDFLAGS=\"$with_libdbi_ldflags\"\nBUILD_WITH_LIBDBI_LIBS=\"-ldbi\"\nAC_SUBST(BUILD_WITH_LIBDBI_CPPFLAGS)\nAC_SUBST(BUILD_WITH_LIBDBI_LDFLAGS)\nAC_SUBST(BUILD_WITH_LIBDBI_LIBS)\n# }}}\n\n# --with-libdpdk {{{\nAC_ARG_VAR([LIBDPDK_CPPFLAGS], [Preprocessor flags for libdpdk])\nAC_ARG_VAR([LIBDPDK_CFLAGS], [Compiler flags for libdpdk])\nAC_ARG_VAR([LIBDPDK_LDFLAGS], [Linker flags for libdpdk])\nAC_ARG_VAR([LIBDPDK_LIBS], [Libraries to link for libdpdk])\n\nAC_ARG_WITH([libdpdk],\n  [AS_HELP_STRING([--without-libdpdk], [Disable libdpdk.])],\n  [with_libdpdk=\"$withval\"],\n  [with_libdpdk=\"yes\"]\n)\n\nif test \"x$with_libdpdk\" != \"xno\"; then\n  PKG_CHECK_MODULES([DPDK], [libdpdk], [],\n    [AC_MSG_NOTICE([no DPDK pkg-config, using defaults])])\n  if test \"x$LIBDPDK_CPPFLAGS\" = \"x\"; then\n    LIBDPDK_CPPFLAGS=\"-I/usr/include/dpdk\"\n  fi\n  if test \"x$LIBDPDK_CFLAGS\" = \"x\"; then\n    LIBDPDK_CFLAGS=\"$DPDK_CFLAGS\"\n    LIBDPDK_CPPFLAGS=\"$LIBDPDK_CPPFLAGS $DPDK_CFLAGS\"\n  fi\n  if test \"x$LIBDPDK_LIBS\" = \"x\"; then\n    if test \"x$DPDK_LIBS\" != \"x\"; then\n      LIBDPDK_LIBS=\"$DPDK_LIBS\"\n    else\n      LIBDPDK_LIBS=\"-ldpdk\"\n    fi\n  fi\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$LIBDPDK_CPPFLAGS $CPPFLAGS\"\n  SAVE_CFLAGS=\"$CFLAGS\"\n  CFLAGS=\"$LIBDPDK_CFLAGS $CFLAGS\"\n  AC_CHECK_HEADERS([rte_config.h],\n    [\n      with_libdpdk=\"yes\"\n      AC_PREPROC_IFELSE(\n        [\n          AC_LANG_SOURCE(\n            [[\n              #include <rte_version.h>\n              #if RTE_VERSION < RTE_VERSION_NUM(16,7,0,0)\n              #error \"required DPDK >= 16.07\"\n              #endif\n            ]]\n          )\n        ],\n        [dpdk_keepalive=\"yes\"],\n        [dpdk_keepalive=\"no (DPDK version < 16.07)\"]\n      )\n    ],\n    [with_libdpdk=\"no (rte_config.h not found)\"]\n  )\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\n  CFLAGS=\"$SAVE_CFLAGS\"\nfi\n\nif test \"x$with_libdpdk\" = \"xyes\"; then\n  SAVE_LIBS=\"$LIBS\"\n  LIBS=\"$LIBDPDK_LIBS $LIBS\"\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LIBDPDK_LDFLAGS $LDFLAGS\"\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$LIBDPDK_CPPFLAGS $CPPFLAGS\"\n  SAVE_CFLAGS=\"$CFLAGS\"\n  CFLAGS=\"$LIBDPDK_CFLAGS $CFLAGS\"\n  AC_LINK_IFELSE(\n    [\n      AC_LANG_PROGRAM(\n        [[\n          #include <rte_eal.h>\n        ]],\n        [[return rte_eal_init(0, NULL);]]\n      )\n    ],\n    [with_libdpdk=\"yes\"],\n    [with_libdpdk=\"no (symbol 'rte_eal_init' not found)\"]\n  )\n  LIBS=\"$SAVE_LIBS\"\n  LDFLAGS=\"$SAVE_LDFLAGS\"\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\n  CFLAGS=\"$SAVE_CFLAGS\"\nfi\n\n# }}}\n\n# --with-libesmtp {{{\nAC_ARG_WITH([libesmtp],\n  [AS_HELP_STRING([--with-libesmtp@<:@=PREFIX@:>@], [Path to libesmtp.])],\n  [\n    if test \"x$withval\" != \"xno\" && test \"x$withval\" != \"xyes\"; then\n      with_libesmtp_cppflags=\"-I$withval/include\"\n      with_libesmtp_ldflags=\"-L$withval/lib\"\n      with_libesmtp=\"yes\"\n    else\n      with_libesmtp=\"$withval\"\n    fi\n  ],\n  [with_libesmtp=\"yes\"]\n)\n\nif test \"x$with_libesmtp\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libesmtp_cppflags\"\n\n  AC_CHECK_HEADERS([libesmtp.h],\n    [with_libesmtp=\"yes\"],\n    [with_libesmtp=\"no (libesmtp.h not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libesmtp\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_esmtp_ldflags\"\n\n  AC_CHECK_LIB([esmtp], [smtp_create_session],\n    [with_libesmtp=\"yes\"],\n    [with_libesmtp=\"no (Symbol 'smtp_create_session' not found)\"]\n  )\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nBUILD_WITH_LIBESMTP_CPPFLAGS=\"$with_libesmtp_cppflags\"\nBUILD_WITH_LIBESMTP_LDFLAGS=\"$with_libesmtp_ldflags\"\nBUILD_WITH_LIBESMTP_LIBS=\"-lesmtp\"\nAC_SUBST(BUILD_WITH_LIBESMTP_CPPFLAGS)\nAC_SUBST(BUILD_WITH_LIBESMTP_LDFLAGS)\nAC_SUBST(BUILD_WITH_LIBESMTP_LIBS)\n# }}}\n\n# --with-libganglia {{{\nAC_ARG_WITH([libganglia],\n  [AS_HELP_STRING([--with-libganglia@<:@=PREFIX@:>@], [Path to libganglia.])],\n  [\n    if test -f \"$withval\" && test -x \"$withval\"; then\n      with_libganglia_config=\"$withval\"\n      with_libganglia=\"yes\"\n    else if test -f \"$withval/bin/ganglia-config\" && test -x \"$withval/bin/ganglia-config\"; then\n      with_libganglia_config=\"$withval/bin/ganglia-config\"\n      with_libganglia=\"yes\"\n    else if test -d \"$withval\"; then\n      GANGLIA_CPPFLAGS=\"-I$withval/include\"\n      GANGLIA_LDFLAGS=\"-L$withval/lib\"\n      with_libganglia=\"yes\"\n    else\n      with_libganglia=\"$withval\"\n    fi; fi; fi\n  ],\n  [with_libganglia=\"yes\"]\n)\n\nif test \"x$with_libganglia\" = \"xyes\"; then\n  if test \"x$with_libganglia_config\" != \"x\"; then\n    if test \"x$GANGLIA_CPPFLAGS\" = \"x\"; then\n      GANGLIA_CPPFLAGS=`\"$with_libganglia_config\" --cflags 2>/dev/null`\n    fi\n\n    if test \"x$GANGLIA_LDFLAGS\" = \"x\"; then\n      GANGLIA_LDFLAGS=`\"$with_libganglia_config\" --ldflags 2>/dev/null`\n    fi\n\n    if test \"x$GANGLIA_LIBS\" = \"x\"; then\n      GANGLIA_LIBS=`\"$with_libganglia_config\" --libs 2>/dev/null`\n    fi\n  else\n    GANGLIA_LIBS=\"-lganglia\"\n  fi\nfi\n\nAC_CHECK_HEADERS([rpc/types.h],\n  [have_rpc_types_h=\"yes\"],\n  [have_rpc_types_h=\"no\"]\n)\nAS_UNSET([ac_cv_header_rpc_types_h])\nif test \"x$have_rpc_types_h\" = \"xno\"; then\n  # SunRPC has been removed from glibc.\n  # Replacement headers are in the \"tirpc\" subdirectory.\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS -I/usr/include/tirpc\"\n\n  AC_CHECK_HEADERS([rpc/types.h],\n    [GANGLIA_CPPFLAGS=\"$GANGLIA_CPPFLAGS -I/usr/include/tirpc\"],\n    [with_libganglia=\"no (rpc/types.h not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nSAVE_CPPFLAGS=\"$CPPFLAGS\"\nSAVE_LDFLAGS=\"$LDFLAGS\"\nCPPFLAGS=\"$CPPFLAGS $GANGLIA_CPPFLAGS\"\nLDFLAGS=\"$LDFLAGS $GANGLIA_LDFLAGS\"\n\nif test \"x$with_libganglia\" = \"xyes\"; then\n  AC_CHECK_HEADERS([ganglia.h],\n    [with_libganglia=\"yes\"],\n    [with_libganglia=\"no (ganglia.h not found)\"]\n  )\nfi\n\nif test \"x$with_libganglia\" = \"xyes\"; then\n  AC_CHECK_LIB([ganglia], [xdr_Ganglia_value_msg],\n    [with_libganglia=\"yes\"],\n    [with_libganglia=\"no (symbol xdr_Ganglia_value_msg not found)\"]\n  )\nfi\n\nCPPFLAGS=\"$SAVE_CPPFLAGS\"\nLDFLAGS=\"$SAVE_LDFLAGS\"\n\nAC_SUBST(GANGLIA_CPPFLAGS)\nAC_SUBST(GANGLIA_LDFLAGS)\nAC_SUBST(GANGLIA_LIBS)\n# }}}\n\n# --with-libgcrypt {{{\nGCRYPT_CPPFLAGS=\"$GCRYPT_CPPFLAGS\"\nGCRYPT_LDFLAGS=\"$GCRYPT_LDFLAGS\"\nGCRYPT_LIBS=\"$GCRYPT_LIBS\"\nAC_ARG_WITH([libgcrypt],\n  [AS_HELP_STRING([--with-libgcrypt@<:@=PREFIX@:>@], [Path to libgcrypt.])],\n  [\n    if test -f \"$withval\" && test -x \"$withval\"; then\n      with_libgcrypt_config=\"$withval\"\n      with_libgcrypt=\"yes\"\n    else if test -f \"$withval/bin/libgcrypt-config\" && test -x \"$withval/bin/libgcrypt-config\"; then\n      with_libgcrypt_config=\"$withval/bin/libgcrypt-config\"\n      with_libgcrypt=\"yes\"\n    else if test -d \"$withval\"; then\n      GCRYPT_CPPFLAGS=\"$GCRYPT_CPPFLAGS -I$withval/include\"\n      GCRYPT_LDFLAGS=\"$GCRYPT_LDFLAGS -L$withval/lib\"\n      with_libgcrypt=\"yes\"\n    else\n      with_libgcrypt_config=\"libgcrypt-config\"\n      with_libgcrypt=\"$withval\"\n    fi; fi; fi\n  ],\n  [\n    with_libgcrypt_config=\"libgcrypt-config\"\n    with_libgcrypt=\"yes\"\n  ]\n)\n\nif test \"x$with_libgcrypt\" = \"xyes\" && test \"x$with_libgcrypt_config\" != \"x\"; then\n  if test \"x$GCRYPT_CPPFLAGS\" = \"x\"; then\n    GCRYPT_CPPFLAGS=`\"$with_libgcrypt_config\" --cflags 2>/dev/null`\n  fi\n\n  if test \"x$GCRYPT_LIBS\" = \"x\"; then\n    GCRYPT_LIBS=`\"$with_libgcrypt_config\" --libs 2>/dev/null`\n  fi\nfi\n\nSAVE_CPPFLAGS=\"$CPPFLAGS\"\nSAVE_LDFLAGS=\"$LDFLAGS\"\nSAVE_LIBS=\"$LIBS\"\nCPPFLAGS=\"$CPPFLAGS $GCRYPT_CPPFLAGS\"\nLDFLAGS=\"$LDFLAGS $GCRYPT_LDFLAGS\"\nLIBS=\"$LIBS $GCRYPT_LIBS\"\n\nif test \"x$with_libgcrypt\" = \"xyes\"; then\n  AC_CHECK_HEADERS([gcrypt.h],\n    [with_libgcrypt=\"yes\"],\n    [with_libgcrypt=\"no (gcrypt.h not found)\"]\n  )\nfi\n\nif test \"x$with_libgcrypt\" = \"xyes\"; then\n  AC_CHECK_LIB(gcrypt, gcry_md_hash_buffer,\n    [with_libgcrypt=\"yes\"],\n    [with_libgcrypt=\"no (symbol gcry_md_hash_buffer not found)\"]\n  )\nfi\n\nCPPFLAGS=\"$SAVE_CPPFLAGS\"\nLDFLAGS=\"$SAVE_LDFLAGS\"\nLIBS=\"$SAVE_LIBS\"\n\nAC_SUBST([GCRYPT_CPPFLAGS])\nAC_SUBST([GCRYPT_LDFLAGS])\nAC_SUBST([GCRYPT_LIBS])\nAM_CONDITIONAL([BUILD_WITH_LIBGCRYPT], [test \"x$with_libgcrypt\" = \"xyes\"])\n# }}}\n\n# --with-libgps {{{\nAC_ARG_WITH([libgps],\n  [AS_HELP_STRING([--with-libgps@<:@=PREFIX@:>@], [Path to libgps.])],\n  [\n    if test \"x$withval\" != \"xno\" && test \"x$withval\" != \"xyes\"; then\n      with_libgps_cflags=\"-I$withval/include\"\n      with_libgps_ldflags=\"-L$withval/lib\"\n      with_libgps=\"yes\"\n    else\n      with_libgps=\"$withval\"\n    fi\n  ],\n  [with_libgps=\"yes\"]\n)\n\nif test \"x$with_libgps\" = \"xyes\"; then\n  SAVE_CFLAGS=\"$CFLAGS\"\n  CFLAGS=\"$CFLAGS $with_libgps_cflags\"\n\n  AC_CHECK_HEADERS([gps.h],\n    [with_libgps=\"yes\"],\n    [with_libgps=\"no (gps.h not found)\"]\n  )\n\n  CFLAGS=\"$SAVE_CFLAGS\"\nfi\n\nif test \"x$with_libgps\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_libgps_ldflags\"\n\n  AC_CHECK_LIB([gps], [gps_open],\n    [with_libgps=\"yes\"],\n    [with_libgps=\"no (symbol gps_open not found)\"]\n  )\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_libgps\" = \"xyes\"; then\n  BUILD_WITH_LIBGPS_CFLAGS=\"$with_libgps_cflags\"\n  BUILD_WITH_LIBGPS_LDFLAGS=\"$with_libgps_ldflags\"\n  BUILD_WITH_LIBGPS_LIBS=\"-lgps\"\nfi\n\nAC_SUBST([BUILD_WITH_LIBGPS_CFLAGS])\nAC_SUBST([BUILD_WITH_LIBGPS_LDFLAGS])\nAC_SUBST([BUILD_WITH_LIBGPS_LIBS])\n\n# }}}\n\n# --with-libgrpc++ {{{\nAC_ARG_WITH([libgrpc++],\n  [AS_HELP_STRING([--with-libgrpc++@<:@=PREFIX@:>@], [Path to libgrpc++.])],\n  [\n    with_grpcpp=\"$withval\"\n    if test \"x$withval\" != \"xno\" && test \"x$withval\" != \"xyes\"; then\n      with_libgrpcpp_cppflags=\"-I$withval/include\"\n      with_libgrpcpp_ldflags=\"-L$withval/lib\"\n      with_libgrpcpp_bin=\"$withval/bin\"\n      with_libgrpcpp=\"yes\"\n    fi\n    if test \"x$withval\" = \"xno\"; then\n      with_libgrpcpp=\"no (disabled on command line)\"\n    fi\n  ],\n  [withval=\"yes\"]\n)\nif test \"x$withval\" = \"xyes\"; then\nPKG_CHECK_MODULES([GRPCPP], [grpc++],\n  [with_libgrpcpp=\"yes\"],\n  [with_libgrpcpp=\"no (pkg-config could not find libgrpc++)\"]\n)\nfi\n\nif test \"x$withval\" != \"xno\"; then\n  AC_MSG_CHECKING([whether $CXX accepts -std=c++14])\n  if test_cxx_flags -std=c++14; then\n    AC_MSG_RESULT([yes])\n  else\n    AC_MSG_RESULT([no])\n    with_libgrpcpp=\"no (requires C++14 support)\"\n    with_libprotobuf=\"no (<absl/base/policy_checks.h> requires C++14 support)\"\n  fi\nfi\n\nif test \"x$with_libgrpcpp\" = \"xyes\"; then\n  AC_LANG_PUSH(C++)\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"-std=c++14 $with_libgrpcpp_cppflags $GRPCPP_CFLAGS $CPPFLAGS\"\n  AC_CHECK_HEADERS([grpc++/grpc++.h],\n    [with_libgrpcpp=\"yes\"],\n    [with_libgrpcpp=\"no (<grpc++/grpc++.h> not found)\"]\n  )\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\n  AC_LANG_POP(C++)\nfi\n\nif test \"x$with_libgrpcpp\" = \"xyes\"; then\n  AC_LANG_PUSH(C++)\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  SAVE_LIBS=\"$LIBS\"\n  CPPFLAGS=\"-std=c++14 $with_libgrpcpp_cppflags $GRPCPP_CFLAGS $CPPFLAGS\"\n  LDFLAGS=\"$with_libgrpcpp_ldflags\"\n  if test \"x$GRPCPP_LIBS\" = \"x\"; then\n    LIBS=\"-lgrpc++\"\n  else\n    LIBS=\"$GRPCPP_LIBS\"\n  fi\n  AC_LINK_IFELSE(\n    [\n      AC_LANG_PROGRAM(\n        [[#include <grpc++/grpc++.h>]],\n        [[grpc::ServerBuilder sb;]]\n      )\n    ],\n    [\n      with_libgrpcpp=\"yes\"\n      if test \"x$GRPCPP_LIBS\" = \"x\"; then\n        GRPCPP_LIBS=\"-lgrpc++\"\n      fi\n    ],\n    [with_libgrpcpp=\"no (libgrpc++ not found)\"]\n  )\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\n  LDFLAGS=\"$SAVE_LDFLAGS\"\n  LIBS=\"$SAVE_LIBS\"\n  AC_LANG_POP(C++)\nfi\n\nBUILD_WITH_LIBGRPCPP_CPPFLAGS=\"-std=c++14 $with_libgrpcpp_cppflags $GRPCPP_CFLAGS\"\nBUILD_WITH_LIBGRPCPP_LDFLAGS=\"$with_libgrpcpp_ldflags\"\nBUILD_WITH_LIBGRPCPP_LIBS=\"$GRPCPP_LIBS\"\nAC_SUBST([BUILD_WITH_LIBGRPCPP_CPPFLAGS])\nAC_SUBST([BUILD_WITH_LIBGRPCPP_LDFLAGS])\nAC_SUBST([BUILD_WITH_LIBGRPCPP_LIBS])\n# }}}\n\nAC_ARG_VAR([GRPC_CPP_PLUGIN], [path to the grpc_cpp_plugin binary])\nif test \"x$with_libgrpcpp_bin\" = \"x\"; then\n  AC_PATH_PROG([GRPC_CPP_PLUGIN], [grpc_cpp_plugin])\nelse\n  AC_PATH_PROG([GRPC_CPP_PLUGIN], [grpc_cpp_plugin], [], \"$with_libgrpcpp_bin:$PATH\")\nfi\nAM_CONDITIONAL([HAVE_GRPC_CPP], [test \"x$GRPC_CPP_PLUGIN\" != \"x\"])\n\n# --with-libiptc {{{\nAC_ARG_WITH([libiptc],\n  [AS_HELP_STRING([--with-libiptc@<:@=PREFIX@:>@], [Path to libiptc.])],\n  [\n    if test \"x$withval\" = \"xyes\"; then\n      with_libiptc=\"pkgconfig\"\n    else if test \"x$withval\" = \"xno\"; then\n      with_libiptc=\"no\"\n    else\n      with_libiptc=\"yes\"\n      with_libiptc_cflags=\"-I$withval/include\"\n      with_libiptc_libs=\"-L$withval/lib\"\n    fi; fi\n  ],\n  [\n    if test \"x$ac_system\" = \"xLinux\"; then\n      with_libiptc=\"pkgconfig\"\n    else\n      with_libiptc=\"no (Linux only)\"\n    fi\n  ]\n)\n\nif test \"x$with_libiptc\" = \"xpkgconfig\"; then\n  $PKG_CONFIG --exists 'libiptc' 2>/dev/null\n  if test $? -ne 0; then\n    with_libiptc=\"no (pkg-config doesn't know libiptc)\"\n  fi\nfi\n\nif test \"x$with_libiptc\" = \"xpkgconfig\"; then\n  with_libiptc_cflags=\"`$PKG_CONFIG --cflags 'libiptc'`\"\n  if test $? -ne 0; then\n    with_libiptc=\"no ($PKG_CONFIG failed)\"\n  fi\n\n  with_libiptc_libs=\"`$PKG_CONFIG --libs 'libiptc'`\"\n  if test $? -ne 0; then\n    with_libiptc=\"no ($PKG_CONFIG failed)\"\n  fi\nfi\n\nSAVE_CPPFLAGS=\"$CPPFLAGS\"\nCPPFLAGS=\"$CPPFLAGS $with_libiptc_cflags\"\n\n# check whether the header file for libiptc is available.\nif test \"x$with_libiptc\" = \"xpkgconfig\"; then\n  AC_CHECK_HEADERS([libiptc/libiptc.h libiptc/libip6tc.h],\n    [],\n    [with_libiptc=\"no (header file missing)\"]\n  )\nfi\n\n# If the header file is available, check for the required type declaractions.\n# They may be missing in old versions of libiptc. In that case, they will be\n# declared in the iptables plugin.\nif test \"x$with_libiptc\" = \"xpkgconfig\"; then\n  AC_CHECK_TYPES([iptc_handle_t, ip6tc_handle_t], [], [])\nfi\n\n# Check for the iptc_init symbol in the library.\n# This could be in iptc or ip4tc\nif test \"x$with_libiptc\" = \"xpkgconfig\"; then\n  SAVE_LIBS=\"$LIBS\"\n  AC_SEARCH_LIBS([iptc_init], [iptc ip4tc],\n    [with_libiptc=\"pkgconfig\"],\n    [with_libiptc=\"no\"],\n    [$with_libiptc_libs]\n  )\n  LIBS=\"$SAVE_LIBS\"\nfi\n\nif test \"x$with_libiptc\" = \"xpkgconfig\"; then\n  with_libiptc=\"yes\"\nfi\n\nCPPFLAGS=\"$SAVE_CPPFLAGS\"\n\nif test \"x$with_libiptc\" = \"xyes\"; then\n  BUILD_WITH_LIBIPTC_CPPFLAGS=\"$with_libiptc_cflags\"\n  BUILD_WITH_LIBIPTC_LDFLAGS=\"$with_libiptc_libs\"\nfi\nAC_SUBST([BUILD_WITH_LIBIPTC_CPPFLAGS])\nAC_SUBST([BUILD_WITH_LIBIPTC_LDFLAGS])\n# }}}\n\n# --with-java {{{\nwith_java_home=\"$JAVA_HOME\"\nif test \"x$with_java_home\" = \"x\"; then\n  with_java_home=\"/usr/lib/jvm\"\nfi\n\nJAVAC=\"$JAVAC\"\nJAR=\"$JAR\"\nAC_ARG_WITH([java],\n  [AS_HELP_STRING([--with-java@<:@=PREFIX@:>@], [Path to Java home.])],\n  [\n    if test \"x$withval\" = \"xno\"; then\n      with_java=\"no\"\n    else if test \"x$withval\" = \"xyes\"; then\n      with_java=\"yes\"\n    else\n      with_java_home=\"$withval\"\n      with_java=\"yes\"\n    fi; fi\n  ],\n  [with_java=\"yes\"]\n)\n\nAX_COMPARE_VERSION([$am__api_version],[lt],[1.12],\n  [JAVA_TIMESTAMP_FILE=\"classdist_noinst.stamp\"],\n  [JAVA_TIMESTAMP_FILE=\"classnoinst.stamp\"])\nif test \"x$with_java\" = \"xyes\"; then\n  if test -d \"$with_java_home\"; then\n    AC_MSG_CHECKING([for jni.h])\n    TMPVAR=`find -L \"$with_java_home\" -name jni.h -type f -exec 'dirname' '{}' ';' 2>/dev/null | LC_ALL=C sort | head -n 1`\n    if test \"x$TMPVAR\" != \"x\"; then\n      AC_MSG_RESULT([found in $TMPVAR])\n      JAVA_CPPFLAGS=\"$JAVA_CPPFLAGS -I$TMPVAR\"\n    else\n      AC_MSG_RESULT([not found])\n    fi\n\n    AC_MSG_CHECKING([for jni_md.h])\n    TMPVAR=`find -L \"$with_java_home\" -name jni_md.h -type f -exec 'dirname' '{}' ';' 2>/dev/null | LC_ALL=C sort | head -n 1`\n    if test \"x$TMPVAR\" != \"x\"; then\n      AC_MSG_RESULT([found in $TMPVAR])\n      JAVA_CPPFLAGS=\"$JAVA_CPPFLAGS -I$TMPVAR\"\n    else\n      AC_MSG_RESULT([not found])\n    fi\n\n    AC_MSG_CHECKING([for libjvm.so])\n    TMPVAR=`find -L \"$with_java_home\" -type f \\( -name libjvm.so -o -name libjvm.dylib \\) -exec 'dirname' '{}' ';' 2>/dev/null | LC_ALL=C sort | head -n 1`\n    if test \"x$TMPVAR\" != \"x\"; then\n      AC_MSG_RESULT([found in $TMPVAR])\n      JAVA_LDFLAGS=\"$JAVA_LDFLAGS -L$TMPVAR -Wl,-rpath -Wl,$TMPVAR\"\n    else\n      AC_MSG_RESULT([not found])\n    fi\n\n    if test \"x$JAVAC\" = \"x\"; then\n      AC_MSG_CHECKING([for javac])\n      TMPVAR=`find -L \"$with_java_home\" -name javac -type f 2>/dev/null | LC_ALL=C sort | head -n 1`\n      if test \"x$TMPVAR\" != \"x\"; then\n        JAVAC=\"$TMPVAR\"\n        AC_MSG_RESULT([$JAVAC])\n      else\n        AC_MSG_RESULT([not found])\n      fi\n    fi\n\n    if test \"x$JAR\" = \"x\"; then\n      AC_MSG_CHECKING([for jar])\n      TMPVAR=`find -L \"$with_java_home\" -name jar -type f 2>/dev/null | LC_ALL=C sort | head -n 1`\n      if test \"x$TMPVAR\" != \"x\"; then\n        JAR=\"$TMPVAR\"\n        AC_MSG_RESULT([$JAR])\n      else\n        AC_MSG_RESULT([not found])\n      fi\n    fi\n  else if test \"x$with_java_home\" != \"x\"; then\n    AC_MSG_WARN([JAVA_HOME: No such directory: $with_java_home])\n  fi; fi\nfi\n\nif test \"x$JAVAC\" = \"x\"; then\n  with_javac_path=\"$PATH\"\n  if test \"x$with_java_home\" != \"x\"; then\n    with_javac_path=\"$with_java_home:with_javac_path\"\n    if test -d \"$with_java_home/bin\"; then\n      with_javac_path=\"$with_java_home/bin:with_javac_path\"\n    fi\n  fi\n\n  AC_PATH_PROG([JAVAC], [javac], [], \"$with_javac_path\")\nfi\n\nif test \"x$JAVAC\" = \"x\"; then\n  with_java=\"no (javac not found)\"\nfi\n\nif test \"x$JAR\" = \"x\"; then\n  with_jar_path=\"$PATH\"\n  if test \"x$with_java_home\" != \"x\"; then\n    with_jar_path=\"$with_java_home:$with_jar_path\"\n    if test -d \"$with_java_home/bin\"; then\n      with_jar_path=\"$with_java_home/bin:$with_jar_path\"\n    fi\n  fi\n\n  AC_PATH_PROG([JAR], [jar], [], \"$with_jar_path\")\nfi\n\nif test \"x$JAR\" = \"x\"; then\n  with_java=\"no (jar not found)\"\nfi\n\nSAVE_CPPFLAGS=\"$CPPFLAGS\"\nSAVE_CFLAGS=\"$CFLAGS\"\nSAVE_LDFLAGS=\"$LDFLAGS\"\nSAVE_LIBS=\"$LIBS\"\nCPPFLAGS=\"$CPPFLAGS $JAVA_CPPFLAGS\"\nCFLAGS=\"$CFLAGS $JAVA_CFLAGS\"\nLDFLAGS=\"$LDFLAGS $JAVA_LDFLAGS\"\nLIBS=\"$LIBS $JAVA_LIBS\"\n\nif test \"x$with_java\" = \"xyes\"; then\n  AC_CHECK_HEADERS([jni.h],\n    [with_jave=\"yes\"],\n    [with_java=\"no (jni.h not found)\"])\nfi\n\nif test \"x$with_java\" = \"xyes\"; then\n  AC_CHECK_LIB([jvm], [JNI_CreateJavaVM],\n    [with_java=\"yes\"],\n    [with_java=\"no (Symbol 'JNI_CreateJavaVM' not found)\"],\n    [$JAVA_LIBS $PTHREAD_LIBS]\n  )\nfi\n\nif test \"x$with_java\" = \"xyes\"; then\n  JAVA_LIBS=\"$JAVA_LIBS -ljvm\"\nfi\n\nCPPFLAGS=\"$SAVE_CPPFLAGS\"\nCFLAGS=\"$SAVE_CFLAGS\"\nLDFLAGS=\"$SAVE_LDFLAGS\"\nLIBS=\"$SAVE_LIBS\"\n\nAC_SUBST([JAVA_CPPFLAGS])\nAC_SUBST([JAVA_CFLAGS])\nAC_SUBST([JAVA_LDFLAGS])\nAC_SUBST([JAVA_LIBS])\nAC_SUBST([JAVA_TIMESTAMP_FILE])\nAM_CONDITIONAL([BUILD_WITH_JAVA], [test \"x$with_java\" = \"xyes\"])\n# }}}\n\n# --with-libldap {{{\nAC_ARG_WITH([libldap],\n  [AS_HELP_STRING([--with-libldap@<:@=PREFIX@:>@], [Path to libldap.])],\n  [\n    if test \"x$withval\" = \"xyes\"; then\n      with_libldap=\"yes\"\n    else if test \"x$withval\" = \"xno\"; then\n      with_libldap=\"no\"\n    else\n      with_libldap=\"yes\"\n      LIBLDAP_CPPFLAGS=\"$LIBLDAP_CPPFLAGS -I$withval/include\"\n      LIBLDAP_LDFLAGS=\"$LIBLDAP_LDFLAGS -L$withval/lib\"\n    fi; fi\n  ],\n  [with_libldap=\"yes\"]\n)\n\nSAVE_CPPFLAGS=\"$CPPFLAGS\"\nSAVE_LDFLAGS=\"$LDFLAGS\"\n\nCPPFLAGS=\"$CPPFLAGS $LIBLDAP_CPPFLAGS\"\nLDFLAGS=\"$LDFLAGS $LIBLDAP_LDFLAGS\"\n\nif test \"x$with_libldap\" = \"xyes\"; then\n  AC_CHECK_HEADERS([ldap.h],\n    [with_libldap=\"yes\"],\n    [with_libldap=\"no ('ldap.h' not found)\"]\n  )\nfi\n\nif test \"x$with_libldap\" = \"xyes\"; then\n  AC_CHECK_LIB([ldap], [ldap_initialize],\n    [with_libldap=\"yes\"],\n    [with_libldap=\"no (symbol 'ldap_initialize' not found)\"]\n  )\nfi\n\nCPPFLAGS=\"$SAVE_CPPFLAGS\"\nLDFLAGS=\"$SAVE_LDFLAGS\"\n\nif test \"x$with_libldap\" = \"xyes\"\nthen\n  BUILD_WITH_LIBLDAP_CPPFLAGS=\"$LIBLDAP_CPPFLAGS\"\n  BUILD_WITH_LIBLDAP_LDFLAGS=\"$LIBLDAP_LDFLAGS\"\nfi\nAC_SUBST([BUILD_WITH_LIBLDAP_CPPFLAGS])\nAC_SUBST([BUILD_WITH_LIBLDAP_LDFLAGS])\n# }}}\n\n# --with-liblua {{{\nAC_ARG_VAR([LIBLUA_PKG_CONFIG_NAME], [Name of liblua used by pkg-config])\nif test \"x$LIBLUA_PKG_CONFIG_NAME\" != \"x\"\nthen\n  PKG_CHECK_MODULES([LUA], [$LIBLUA_PKG_CONFIG_NAME],\n    [with_liblua=\"yes\"],\n    [with_liblua=\"no\"]\n  )\nelse\n  PKG_CHECK_MODULES([LUA], [lua],\n    [with_liblua=\"yes\"],\n    [\n      PKG_CHECK_MODULES([LUA], [lua-5.3],\n        [with_liblua=\"yes\"],\n        [\n          PKG_CHECK_MODULES([LUA], [lua5.3],\n            [with_liblua=\"yes\"],\n            [\n              PKG_CHECK_MODULES([LUA], [lua53],\n                [with_liblua=\"yes\"],\n                [\n                  PKG_CHECK_MODULES([LUA], [lua-5.2],\n                    [with_liblua=\"yes\"],\n                    [\n                      PKG_CHECK_MODULES([LUA], [lua5.2],\n                        [with_liblua=\"yes\"],\n                        [\n                          PKG_CHECK_MODULES([LUA], [lua52],\n                            [with_liblua=\"yes\"],\n                            [\n                              PKG_CHECK_MODULES([LUA], [lua-5.1],\n                                [with_liblua=\"yes\"],\n                                [\n                                  PKG_CHECK_MODULES([LUA], [lua5.1],\n                                    [with_liblua=\"yes\"],\n                                    [\n                                      PKG_CHECK_MODULES([LUA], [lua51],\n                                        [with_liblua=\"yes\"],\n                                        [\n                                          PKG_CHECK_MODULES([LUA], [luajit],\n                                            [\n                                              with_liblua=\"yes\"\n                                            ],\n                                            [with_liblua=\"no (pkg-config cannot find libluajit)\"]\n\t\t\t\t\t  )\n\t\t\t\t\t]\n                                      )\n                                    ]\n                                  )\n                                ]\n                              )\n                            ]\n                          )\n                        ]\n                      )\n                    ]\n                  )\n                ]\n              )\n            ]\n          )\n        ]\n      )\n    ]\n  )\nfi\n\nif test \"x$with_liblua\" = \"xyes\"\nthen\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $LUA_CFLAGS\"\n\n  AC_CHECK_HEADERS([lua.h lauxlib.h lualib.h],\n    [with_liblua=\"yes\"],\n    [with_liblua=\"no (header not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_liblua\" = \"xyes\"\nthen\n  SAVE_LIBS=\"$LIBS\"\n  LIBS=\"$LIBS $LUA_LIBS\"\n\n  AC_CHECK_FUNC([lua_settop],\n    [with_liblua=\"yes\"],\n    [with_liblua=\"no (symbol 'lua_settop' not found)\"]\n  )\n\n  LIBS=\"$SAVE_LIBS\"\nfi\n\nif test \"x$with_liblua\" = \"xyes\"\nthen\n    BUILD_WITH_LIBLUA_CFLAGS=\"$LUA_CFLAGS\"\n    BUILD_WITH_LIBLUA_LIBS=\"$LUA_LIBS\"\nfi\nAC_SUBST(BUILD_WITH_LIBLUA_CFLAGS)\nAC_SUBST(BUILD_WITH_LIBLUA_LIBS)\n# }}}\n\n# --with-libmemcached {{{\nAC_ARG_WITH([libmemcached],\n  [AS_HELP_STRING([--with-libmemcached@<:@=PREFIX@:>@], [Path to libmemcached.])],\n  [\n    if test \"x$withval\" != \"xno\" && test \"x$withval\" != \"xyes\"; then\n      with_libmemcached_cppflags=\"-I$withval/include\"\n      with_libmemcached_ldflags=\"-L$withval/lib\"\n      with_libmemcached=\"yes\"\n    else\n      with_libmemcached=\"$withval\"\n    fi\n  ],\n  [with_libmemcached=\"yes\"]\n)\n\nif test \"x$with_libmemcached\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libmemcached_cppflags\"\n\n  AC_CHECK_HEADERS([libmemcached/memcached.h],\n    [with_libmemcached=\"yes\"],\n    [with_libmemcached=\"no (libmemcached/memcached.h not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libmemcached\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libmemcached_cppflags\"\n  LDFLAGS=\"$LDFLAGS $with_libmemcached_ldflags\"\n\n  AC_CHECK_LIB([memcached], [memcached_create],\n    [with_libmemcached=\"yes\"],\n    [with_libmemcached=\"no (Symbol 'memcached_create' not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_libmemcached\" = \"xyes\"; then\n  BUILD_WITH_LIBMEMCACHED_CPPFLAGS=\"$with_libmemcached_cppflags\"\n  BUILD_WITH_LIBMEMCACHED_LDFLAGS=\"$with_libmemcached_ldflags\"\n  BUILD_WITH_LIBMEMCACHED_LIBS=\"-lmemcached\"\nfi\n\nAC_SUBST([BUILD_WITH_LIBMEMCACHED_CPPFLAGS])\nAC_SUBST([BUILD_WITH_LIBMEMCACHED_LDFLAGS])\nAC_SUBST([BUILD_WITH_LIBMEMCACHED_LIBS])\n# }}}\n\n# --with-libmicrohttpd {{{\nwith_libmicrohttpd_cppflags=\"\"\nwith_libmicrohttpd_ldflags=\"\"\nAC_ARG_WITH([libmicrohttpd], [AS_HELP_STRING([--with-libmicrohttpd@<:@=PREFIX@:>@], [Path to libmicrohttpd.])],\n  [\n    if test \"x$withval\" != \"xno\" && test \"x$withval\" != \"xyes\"; then\n      with_libmicrohttpd_cppflags=\"-I$withval/include\"\n      with_libmicrohttpd_ldflags=\"-L$withval/lib\"\n      with_libmicrohttpd=\"yes\"\n    fi\n    if test \"x$withval\" = \"xno\"; then\n      with_libmicrohttpd=\"no (disabled on command line)\"\n    fi\n  ],\n  [withval=\"yes\"]\n)\nif test \"x$withval\" = \"xyes\"; then\n  PKG_CHECK_MODULES([MICROHTTPD], [libmicrohttpd],\n    [with_libmicrohttpd=\"yes\"],\n    [with_libmicrohttpd=\"no (pkg-config could not find libmicrohttpd)\"]\n  )\nfi\n\nif test \"x$MICROHTTPD_LIBS\" = \"x\"; then\n  MICROHTTPD_LIBS=\"-lmicrohttpd\"\nfi\n\nSAVE_CPPFLAGS=\"$CPPFLAGS\"\nSAVE_LDFLAGS=\"$LDFLAGS\"\nSAVE_LIBS=\"$LIBS\"\nCPPFLAGS=\"$with_libmicrohttpd_cppflags $MICROHTTPD_CFLAGS\"\nLDFLAGS=\"$with_libmicrohttpd_ldflags $LDFLAGS\"\nLIBS=\"$LIBS $MICROHTTPD_LIBS\"\n\nif test \"x$with_libmicrohttpd\" = \"xyes\"; then\n  AC_CHECK_HEADERS([microhttpd.h],\n   [with_libmicrohttpd=\"yes\"],\n   [with_libmicrohttpd=\"no (<microhttpd.h> not found)\"]\n  )\nfi\n\nif test \"x$with_libmicrohttpd\" = \"xyes\"; then\n  AC_CHECK_LIB([microhttpd], [MHD_start_daemon],\n    [with_libmicrohttpd=\"yes\"],\n    [with_libmicrohttpd=\"no (libmicrohttpd not found)\"]\n  )\nfi\n\nCPPFLAGS=\"$SAVE_CPPFLAGS\"\nLDFLAGS=\"$SAVE_LDFLAGS\"\nLIBS=\"$SAVE_LIBS\"\n\nBUILD_WITH_LIBMICROHTTPD_CPPFLAGS=\"$with_libmicrohttpd_cppflags $MICROHTTPD_CFLAGS\"\nBUILD_WITH_LIBMICROHTTPD_LDFLAGS=\"$with_libmicrohttpd_ldflags\"\nBUILD_WITH_LIBMICROHTTPD_LIBS=\"$MICROHTTPD_LIBS\"\nAC_SUBST([BUILD_WITH_LIBMICROHTTPD_CPPFLAGS])\nAC_SUBST([BUILD_WITH_LIBMICROHTTPD_LDFLAGS])\nAC_SUBST([BUILD_WITH_LIBMICROHTTPD_LIBS])\n# }}}\n\n# --with-libmodbus {{{\nAC_ARG_WITH([libmodbus],\n  [AS_HELP_STRING([--with-libmodbus@<:@=PREFIX@:>@], [Path to the modbus library.])],\n  [\n    if test \"x$withval\" = \"xno\"; then\n      with_libmodbus=\"no\"\n    else if test \"x$withval\" = \"xyes\"; then\n      with_libmodbus=\"use_pkgconfig\"\n    else if test -d \"$with_libmodbus/lib\"; then\n      AC_MSG_NOTICE([Not checking for libmodbus: Manually configured])\n      with_libmodbus_cflags=\"-I$withval/include\"\n      with_libmodbus_libs=\"-L$withval/lib -lmodbus\"\n      with_libmodbus=\"yes\"\n    fi; fi; fi\n  ],\n  [with_libmodbus=\"use_pkgconfig\"]\n)\n\n# configure using pkg-config\nif test \"x$with_libmodbus\" = \"xuse_pkgconfig\"; then\n  $PKG_CONFIG --exists 'libmodbus' 2>/dev/null\n  if test $? -ne 0; then\n    with_libmodbus=\"no (pkg-config doesn't know libmodbus)\"\n  fi\nfi\n\nif test \"x$with_libmodbus\" = \"xuse_pkgconfig\"; then\n  with_libmodbus_cflags=\"`$PKG_CONFIG --cflags 'libmodbus'`\"\n  if test $? -ne 0; then\n    with_libmodbus=\"no ($PKG_CONFIG failed)\"\n  fi\n\n  with_libmodbus_libs=\"`$PKG_CONFIG --libs 'libmodbus'`\"\n  if test $? -ne 0; then\n    with_libmodbus=\"no ($PKG_CONFIG failed)\"\n  fi\nfi\n\nif test \"x$with_libmodbus\" = \"xuse_pkgconfig\"; then\n  with_libmodbus=\"yes\"\nfi\n\nif test \"x$with_libmodbus\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libmodbus_cflags\"\n\n  AC_CHECK_HEADERS([modbus.h],\n    [with_libmodbus=\"yes\"],\n    [with_libmodbus=\"no (modbus.h not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libmodbus\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_libmodbus_libs\"\n\n  AC_CHECK_LIB([modbus], [modbus_connect],\n    [with_libmodbus=\"yes\"],\n    [with_libmodbus=\"no (symbol modbus_connect not found)\"]\n  )\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_libmodbus\" = \"xyes\"; then\n  BUILD_WITH_LIBMODBUS_CFLAGS=\"$with_libmodbus_cflags\"\n  BUILD_WITH_LIBMODBUS_LIBS=\"$with_libmodbus_libs\"\nfi\n\nAC_SUBST([BUILD_WITH_LIBMODBUS_CFLAGS])\nAC_SUBST([BUILD_WITH_LIBMODBUS_LIBS])\n# }}}\n\n# --with-libmongoc {{{\nAC_ARG_WITH([libmongoc],\n  [AS_HELP_STRING([--with-libmongoc@<:@=PREFIX@:>@], [Path to libmongoc.])],\n  [\n    if test \"x$withval\" = \"xyes\"; then\n      with_libmongoc=\"yes\"\n    else if test \"x$withval\" = \"xno\"; then\n      with_libmongoc=\"no\"\n    else\n      with_libmongoc=\"no\"\n    fi; fi\n  ],\n  [with_libmongoc=\"yes\"]\n)\n\nif test \"x$with_libmongoc\" = \"xyes\"; then\n  PKG_CHECK_MODULES([LIBMONGOC], [libmongoc-1.0],\n    [with_libmongoc=\"yes\"],\n    [with_libmongoc=\"no (pkg-config could not find libmongoc)\"]\n  )\nfi\n\nif test \"x$with_libmongoc\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n\n  CPPFLAGS=\"$CPPFLAGS $LIBMONGOC_CFLAGS\"\n\n  AC_CHECK_HEADERS([mongoc.h],\n    [with_libmongoc=\"yes\"],\n    [with_libmongoc=\"no ('mongoc.h' not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libmongoc\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n\n  CPPFLAGS=\"$CPPFLAGS $LIBMONGOC_CFLAGS\"\n  LDFLAGS=\"$LDFLAGS $LIBMONGOC_LDFLAGS\"\n\n  AC_CHECK_LIB([mongoc-1.0], [mongoc_init],\n    [with_libmongoc=\"yes\"],\n    [with_libmongoc=\"no (symbol 'mongoc_init' not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_libmongoc\" = \"xyes\"; then\n  BUILD_WITH_LIBMONGOC_CFLAGS=\"$LIBMONGOC_CFLAGS\"\n  BUILD_WITH_LIBMONGOC_LDFLAGS=\"$LIBMONGOC_LDFLAGS\"\n  BUILD_WITH_LIBMONGOC_LIBS=\"$LIBMONGOC_LIBS\"\nfi\n\nAC_SUBST([BUILD_WITH_LIBMONGOC_CFLAGS])\nAC_SUBST([BUILD_WITH_LIBMONGOC_LDFLAGS])\nAC_SUBST([BUILD_WITH_LIBMONGOC_LIBS])\n# }}}\n\n# --with-libmosquitto {{{\nAC_ARG_WITH([libmosquitto],\n  [AS_HELP_STRING([--with-libmosquitto@<:@=PREFIX@:>@], [Path to libmosquitto.])],\n  [\n    if test \"x$withval\" != \"xno\" && test \"x$withval\" != \"xyes\"; then\n      with_libmosquitto_cppflags=\"-I$withval/include\"\n      with_libmosquitto_ldflags=\"-L$withval/lib\"\n      with_libmosquitto=\"yes\"\n    else\n      with_libmosquitto=\"$withval\"\n    fi\n  ],\n  [with_libmosquitto=\"yes\"]\n)\n\nif test \"x$with_libmosquitto\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libmosquitto_cppflags\"\n\n  AC_CHECK_HEADERS([mosquitto.h],\n    [with_libmosquitto=\"yes\"],\n    [with_libmosquitto=\"no (mosquitto.h not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libmosquitto\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_libmosquitto_ldflags\"\n\n  AC_CHECK_LIB([mosquitto], [mosquitto_connect],\n    [with_libmosquitto=\"yes\"],\n    [with_libmosquitto=\"no (libmosquitto not found)\"]\n  )\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_libmosquitto\" = \"xyes\"; then\n  BUILD_WITH_LIBMOSQUITTO_CPPFLAGS=\"$with_libmosquitto_cppflags\"\n  BUILD_WITH_LIBMOSQUITTO_LDFLAGS=\"$with_libmosquitto_ldflags\"\n  BUILD_WITH_LIBMOSQUITTO_LIBS=\"-lmosquitto\"\nfi\n\nAC_SUBST([BUILD_WITH_LIBMOSQUITTO_CPPFLAGS])\nAC_SUBST([BUILD_WITH_LIBMOSQUITTO_LDFLAGS])\nAC_SUBST([BUILD_WITH_LIBMOSQUITTO_LIBS])\n# }}}\n\n# --with-libmysql {{{\nwith_mysql_config=\"mysql_config\"\nAC_ARG_WITH([libmysql],\n  [AS_HELP_STRING([--with-libmysql@<:@=PREFIX@:>@], [Path to libmysql.])],\n  [\n    if test \"x$withval\" = \"xno\"; then\n      with_libmysql=\"no\"\n    else if test \"x$withval\" = \"xyes\"; then\n      with_libmysql=\"yes\"\n    else\n      if test -f \"$withval\" && test -x \"$withval\"; then\n        with_mysql_config=\"$withval\"\n      else if test -x \"$withval/bin/mysql_config\"; then\n        with_mysql_config=\"$withval/bin/mysql_config\"\n      fi; fi\n      with_libmysql=\"yes\"\n    fi; fi\n  ],\n  [with_libmysql=\"yes\"]\n)\n\nif test \"x$with_libmysql\" = \"xyes\"; then\n  with_mysql_cflags=`$with_mysql_config --include 2>/dev/null`\n  if test $? -ne 0; then\n    with_libmysql=\"no ($with_mysql_config failed)\"\n  else\n    SAVE_CPPFLAGS=\"$CPPFLAGS\"\n    CPPFLAGS=\"$CPPFLAGS $with_mysql_cflags\"\n\n    AC_CHECK_HEADERS([mysql.h],\n      [have_mysql_h=\"yes\"],\n      [have_mysql_h=\"no\"]\n    )\n\n    if test \"x$have_mysql_h\" != \"xyes\"; then\n      AC_CHECK_HEADERS([mysql/mysql.h],\n        [have_mysql_mysql_h=\"yes\"],\n        [],\n      )\n    fi\n\n    if test \"x$have_mysql_h\" != \"xyes\" && test \"x$have_mysql_mysql_h\" != \"xyes\"; then\n      with_libmysql=\"no (mysql.h not found)\"\n    fi\n\n    CPPFLAGS=\"$SAVE_CPPFLAGS\"\n  fi\nfi\n\nif test \"x$with_libmysql\" = \"xyes\"; then\n  with_mysql_libs=`$with_mysql_config --libs_r 2>/dev/null`\n  if test $? -ne 0; then\n    with_libmysql=\"no ($with_mysql_config failed)\"\n  else\n    SAVE_LIBS=\"$LIBS\"\n    LIBS=\"$with_mysql_libs\"\n\n    AC_SEARCH_LIBS([mysql_get_server_version],\n      [],\n      [with_libmysql=\"yes\"],\n      [with_libmysql=\"no (symbol 'mysql_get_server_version' not found in ${LIBS})\"],\n      []\n    )\n    LIBS=\"$SAVE_LIBS\"\n  fi\nfi\n\nif test \"x$with_libmysql\" = \"xyes\"; then\n  BUILD_WITH_LIBMYSQL_CFLAGS=\"$with_mysql_cflags\"\n  BUILD_WITH_LIBMYSQL_LIBS=\"$with_mysql_libs\"\nfi\n\nAC_SUBST([BUILD_WITH_LIBMYSQL_CFLAGS])\nAC_SUBST([BUILD_WITH_LIBMYSQL_LIBS])\n# }}}\n\n# --with-libmnl {{{\nAC_ARG_WITH([libmnl],\n  [AS_HELP_STRING([--with-libmnl@<:@=PREFIX@:>@], [Path to libmnl.])],\n  [\n    if test \"x$withval\" = \"xyes\"; then\n      with_libmnl=\"yes\"\n     else if test \"x$withval\" = \"xno\"; then\n       with_libmnl=\"no\"\n     else\n       if test -d \"$withval/include\"; then\n         with_libmnl_cflags=\"-I$withval/include\"\n         with_libmnl_libs=\"-L$withval/lib -lmnl\"\n         with_libmnl=\"yes\"\n       else\n         AC_MSG_ERROR(\"no such directory: $withval/include\")\n       fi\n     fi; fi\n  ],\n  [\n    if test \"x$ac_system\" = \"xLinux\"; then\n      with_libmnl=\"yes\"\n    else\n      with_libmnl=\"no (Linux only library)\"\n    fi\n  ]\n)\n\nif test \"x$with_libmnl\" = \"xyes\"; then\n  if $PKG_CONFIG --exists libmnl 2>/dev/null; then\n    with_libmnl_cflags=\"$with_libmnl_ldflags `$PKG_CONFIG --cflags libmnl`\"\n    with_libmnl_libs=\"$with_libmnl_libs `$PKG_CONFIG --libs libmnl`\"\n  fi\n\n  AC_CHECK_HEADERS([libmnl.h libmnl/libmnl.h],\n    [\n      with_libmnl=\"yes\"\n      break\n    ],\n    [],\n    [[\n      #include <stdio.h>\n      #include <sys/types.h>\n      #include <asm/types.h>\n      #include <sys/socket.h>\n      #include <linux/netlink.h>\n      #include <linux/rtnetlink.h>]]\n  )\n\n  AC_CHECK_HEADERS([linux/gen_stats.h linux/pkt_sched.h],\n    [],\n    [],\n    [[\n      #include <stdio.h>\n      #include <sys/types.h>\n      #include <asm/types.h>\n      #include <sys/socket.h>\n    ]]\n  )\n\n  AC_COMPILE_IFELSE(\n    [\n      AC_LANG_PROGRAM(\n        [[\n          #include <stdio.h>\n          #include <sys/types.h>\n          #include <asm/types.h>\n          #include <sys/socket.h>\n          #include <linux/netlink.h>\n          #include <linux/rtnetlink.h>\n        ]],\n        [[\n          int retval = TCA_STATS2;\n          return retval;\n        ]]\n      )\n    ],\n    [AC_DEFINE([HAVE_TCA_STATS2], [1], [True if the enum-member TCA_STATS2 exists])]\n  )\n\n  AC_COMPILE_IFELSE(\n    [\n      AC_LANG_PROGRAM(\n        [[\n          #include <stdio.h>\n          #include <sys/types.h>\n          #include <asm/types.h>\n          #include <sys/socket.h>\n          #include <linux/netlink.h>\n          #include <linux/rtnetlink.h>\n        ]],\n        [[\n          int retval = TCA_STATS;\n          return retval;\n        ]]\n      )\n    ],\n    [AC_DEFINE([HAVE_TCA_STATS], 1, [True if the enum-member TCA_STATS exists])]\n  )\n\n  AC_CHECK_MEMBERS([struct rtnl_link_stats64.tx_window_errors],\n    [AC_DEFINE(HAVE_RTNL_LINK_STATS64, 1, [Define if struct rtnl_link_stats64 exists and is usable.])],\n    [],\n    [[#include <linux/if_link.h>]]\n  )\n\n  AC_CHECK_MEMBERS([struct rtnl_link_stats.rx_nohandler],\n    [],\n    [],\n    [[#include <linux/if_link.h>]]\n  )\n\n  AC_CHECK_MEMBERS([struct rtnl_link_stats64.rx_nohandler],\n    [],\n    [],\n    [[#include <linux/if_link.h>]]\n  )\n\n  AC_CHECK_DECLS([IFLA_VF_STATS_RX_DROPPED],\n    [AC_DEFINE(HAVE_IFLA_VF_STATS_RX_DROPPED, 1, [Define if IFLA_VF_STATS_RX_DROPPED exists.])],\n    [],\n    [[#include <linux/if_link.h>]]\n  )\n\n  AC_CHECK_DECLS([IFLA_VF_STATS_TX_DROPPED],\n    [AC_DEFINE(HAVE_IFLA_VF_STATS_TX_DROPPED, 1, [Define if IFLA_VF_STATS_TX_DROPPED exists.])],\n    [],\n    [[#include <linux/if_link.h>]]\n  )\n\n  AC_CHECK_DECLS([IFLA_VF_STATS],\n    [AC_DEFINE(HAVE_IFLA_VF_STATS, 1, [Define if IFLA_VF_STATS exists.])],\n    [],\n    [[#include <linux/if_link.h>]]\n  )\n\n  AC_CHECK_LIB([mnl], [mnl_nlmsg_get_payload],\n    [with_libmnl=\"yes\"],\n    [with_libmnl=\"no (symbol 'mnl_nlmsg_get_payload' not found)\"],\n    [$with_libmnl_libs]\n  )\nfi\n\nif test \"x$with_libmnl\" = \"xyes\"; then\n  BUILD_WITH_LIBMNL_CFLAGS=\"$with_libmnl_cflags\"\n  BUILD_WITH_LIBMNL_LIBS=\"$with_libmnl_libs\"\nfi\nAC_SUBST([BUILD_WITH_LIBMNL_CFLAGS])\nAC_SUBST([BUILD_WITH_LIBMNL_LIBS])\nAM_CONDITIONAL([HAVE_LIBMNL], [test \"x$with_libmnl\" = \"xyes\"])\n# }}}\n\n# --with-libnetapp {{{\nAC_ARG_VAR([LIBNETAPP_CPPFLAGS], [C preprocessor flags required to build with libnetapp])\nAC_ARG_VAR([LIBNETAPP_LDFLAGS],  [Linker flags required to build with libnetapp])\nAC_ARG_VAR([LIBNETAPP_LIBS],     [Other libraries required to link against libnetapp])\nAC_ARG_WITH([libnetapp],\n  [AS_HELP_STRING([--with-libnetapp@<:@=PREFIX@:>@], [Path to libnetapp.])],\n  [\n   if test -d \"$withval\"; then\n     LIBNETAPP_CPPFLAGS=\"$LIBNETAPP_CPPFLAGS -I$withval/include\"\n     LIBNETAPP_LDFLAGS=\"$LIBNETAPP_LDFLAGS -L$withval/lib\"\n     with_libnetapp=\"yes\"\n   else\n     with_libnetapp=\"$withval\"\n   fi\n  ],\n  [with_libnetapp=\"yes\"]\n)\n\nSAVE_CPPFLAGS=\"$CPPFLAGS\"\nSAVE_LDFLAGS=\"$LDFLAGS\"\nCPPFLAGS=\"$CPPFLAGS $LIBNETAPP_CPPFLAGS\"\nLDFLAGS=\"$LDFLAGS $LIBNETAPP_LDFLAGS\"\n\nif test \"x$with_libnetapp\" = \"xyes\"; then\n  AC_CHECK_HEADERS([netapp_api.h],\n    [with_libnetapp=\"yes\"],\n    [with_libnetapp=\"no (netapp_api.h not found)\"]\n  )\nfi\n\nif test \"x$with_libnetapp\" = \"xyes\"; then\n  if test \"x$LIBNETAPP_LIBS\" = \"x\"; then\n    LIBNETAPP_LIBS=\"$PTHREAD_LIBS -lxml -ladt -lssl -lm -lcrypto -lz\"\n  fi\n\n  AC_CHECK_LIB([netapp], [na_server_invoke_elem],\n    [with_libnetapp=\"yes\"],\n    [with_libnetapp=\"no (symbol na_server_invoke_elem not found)\"],\n    [$LIBNETAPP_LIBS]\n  )\n\n  LIBNETAPP_LIBS=\"-lnetapp $LIBNETAPP_LIBS\"\nfi\n\nCPPFLAGS=\"$SAVE_CPPFLAGS\"\nLDFLAGS=\"$SAVE_LDFLAGS\"\n\nAC_SUBST([LIBNETAPP_CPPFLAGS])\nAC_SUBST([LIBNETAPP_LDFLAGS])\nAC_SUBST([LIBNETAPP_LIBS])\n# }}}\n\n# --with-libnetsnmp {{{\nAC_ARG_WITH([libnetsnmp],\n  [AS_HELP_STRING([--with-libnetsnmp@<:@=PREFIX@:>@], [Path to libnetsnmp.])],\n  [\n    if test \"x$withval\" = \"xno\"; then\n     with_libnetsnmp=\"no\"\n    else if test \"x$withval\" = \"xyes\"; then\n     with_libnetsnmp=\"yes\"\n    else\n      with_libnetsnmp_cppflags=\"-I$withval/include\"\n      with_libnetsnmp_ldflags=\"-L$withval/lib\"\n      with_libnetsnmp=\"yes\"\n    fi; fi\n  ],\n  [with_libnetsnmp=\"yes\"]\n)\n\nif test \"x$with_libnetsnmp\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libnetsnmp_cppflags\"\n\n  AC_CHECK_HEADERS([net-snmp/net-snmp-config.h],\n    [with_libnetsnmp=\"yes\"],\n    [with_libnetsnmp=\"no (net-snmp/net-snmp-config.h not found)\"]\n  )\n\n  AC_CHECK_HEADERS([net-snmp/net-snmp-includes.h],\n    [with_libnetsnmp=\"yes\"],\n    [with_libnetsnmp=\"no (net-snmp/net-snmp-includes.h not found)\"],\n    [[\n      #if HAVE_NET_SNMP_NET_SNMP_CONFIG_H\n      # include <net-snmp/net-snmp-config.h>\n      #endif\n    ]]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libnetsnmp\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_libnetsnmp_ldflags\"\n\n  AC_CHECK_LIB([netsnmp], [init_snmp],\n    [with_libnetsnmp=\"yes\"],\n    [with_libnetsnmp=\"no (libnetsnmp not found)\"]\n  )\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_libnetsnmp\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_libnetsnmp_ldflags\"\n\n  AC_CHECK_LIB([netsnmp], [netsnmp_get_version],\n    [with_libnetsnmp=\"yes\"],\n    [with_libnetsnmp=\"no (couldn't get libnetsnmp version)\"]\n  )\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_libnetsnmp\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  SAVE_LIBS=\"$LIBS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libnetsnmp_cppflags\"\n  if test \"x$GCC\" = \"xyes\"; then\n    CPPFLAGS=\"$CPPFLAGS -Wall -Werror\"\n  fi\n  LDFLAGS=\"$LDFLAGS $with_libnetsnmp_ldflags\"\n  LIBS=\"$LIBS -lnetsnmp\"\n\n  AC_CACHE_CHECK([whether netsnmp library has old API],\n    [c_cv_have_netsnmp_old_api],\n    [\n      AC_LINK_IFELSE(\n        [\n          AC_LANG_PROGRAM(\n            [[\n              #include <net-snmp/net-snmp-config.h>\n              #include <net-snmp/net-snmp-includes.h>\n            ]],\n            [[\n              netsnmp_variable_list *key = SNMP_MALLOC_TYPEDEF(netsnmp_variable_list);;\n              int val;\n              u_char type = ASN_INTEGER;\n              snmp_set_var_value(key, &val, sizeof(val));\n              snmp_set_var_typed_value(key, type, &val, sizeof(val));\n              return 0;\n            ]]\n          )\n        ],\n        [c_cv_have_netsnmp_old_api=\"no\"],\n        [c_cv_have_netsnmp_old_api=\"yes\"]\n      )\n    ]\n  )\n\n  if test \"x$c_cv_have_netsnmp_old_api\" = \"xyes\"; then\n    AC_DEFINE([HAVE_NETSNMP_OLD_API], [1],\n              [\"Define 1 if you have old netsnmp API]\")\n  fi\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\n  LDFLAGS=\"$SAVE_LDFLAGS\"\n  LIBS=\"$SAVE_LIBS\"\nfi\n\nif test \"x$with_libnetsnmp\" = \"xyes\"; then\n  BUILD_WITH_LIBNETSNMP_CPPFLAGS=\"$with_libnetsnmp_cppflags\"\n  BUILD_WITH_LIBNETSNMP_LDFLAGS=\"$with_libnetsnmp_ldflags\"\n  BUILD_WITH_LIBNETSNMP_LIBS=\"-lnetsnmp\"\nfi\n\nAC_SUBST([BUILD_WITH_LIBNETSNMP_CPPFLAGS])\nAC_SUBST([BUILD_WITH_LIBNETSNMP_LDFLAGS])\nAC_SUBST([BUILD_WITH_LIBNETSNMP_LIBS])\n# }}}\n\n# --with-libnetsnmpagent {{{\nAC_ARG_WITH([libnetsnmpagent],\n  [AS_HELP_STRING([--with-libnetsnmpagent@<:@=PREFIX@:>@], [Path to libnetsnmpagent.])],\n  [\n    if test \"x$withval\" = \"xno\"; then\n      with_libnetsnmpagent=\"no\"\n    else if test \"x$withval\" = \"xyes\"; then\n      with_libnetsnmpagent=\"yes\"\n    else\n      with_libnetsnmpagent_cppflags=\"-I$withval/include\"\n      with_libnetsnmpagent_ldflags=\"-L$withval/lib\"\n      with_libnetsnmpagent=\"yes\"\n    fi; fi\n  ],\n  [with_libnetsnmpagent=\"yes\"]\n)\n\nif test \"x$with_libnetsnmpagent\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libnetsnmpagent_cppflags\"\n\n  AC_CHECK_HEADERS([net-snmp/agent/net-snmp-agent-includes.h],\n    [],\n    [with_libnetsnmpagent=\"no (net-snmp/agent/net-snmp-agent-includes.h not found)\"],\n    [[\n      #if HAVE_NET_SNMP_NET_SNMP_CONFIG_H\n      # include <net-snmp/net-snmp-config.h>\n      #endif\n      #if HAVE_NET_SNMP_NET_SNMP_INCLUDES_H\n      # include <net-snmp/net-snmp-includes.h>\n      #endif\n    ]]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libnetsnmpagent\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_libnetsnmpagent_ldflags\"\n\n  # older versions of libnetsnmpagent fail to link\n  # against the helpers library, so do that explicitly\n  AC_CHECK_LIB([netsnmphelpers], [netsnmp_init_helpers],\n    [libnetsnmphelpers=\"-lnetsnmphelpers\"],\n    [libnetsnmphelpers=\"\"]\n  )\n\n  AC_CHECK_LIB([netsnmpagent], [init_agent],\n    [\n      # libnetsnmp can be built without mib loading support\n      AC_CHECK_LIB([netsnmp], [get_tree],\n        [with_libnetsnmpagent=\"yes\"],\n        [with_libnetsnmpagent=\"no (libnetsnmp doesn't support mib loading)\"]\n      )\n    ],\n    [with_libnetsnmpagent=\"no (libnetsnmpagent not found)\"],\n    [$libnetsnmphelpers]\n  )\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_libnetsnmpagent\" = \"xyes\"; then\n  BUILD_WITH_LIBNETSNMPAGENT_CPPFLAGS=\"$with_libnetsnmpagent_cppflags\"\n  BUILD_WITH_LIBNETSNMPAGENT_LDFLAGS=\"$with_libnetsnmpagent_ldflags\"\n  BUILD_WITH_LIBNETSNMPAGENT_LIBS=\"-lnetsnmpagent $libnetsnmphelpers\"\nfi\n\nAC_SUBST([BUILD_WITH_LIBNETSNMPAGENT_CPPFLAGS])\nAC_SUBST([BUILD_WITH_LIBNETSNMPAGENT_LDFLAGS])\nAC_SUBST([BUILD_WITH_LIBNETSNMPAGENT_LIBS])\n# }}}\n\n# --with-liboping {{{\nAC_ARG_WITH([liboping],\n  [AS_HELP_STRING([--with-liboping@<:@=PREFIX@:>@], [Path to liboping.])],\n  [\n    if test \"x$withval\" = \"xyes\"; then\n      with_liboping=\"yes\"\n    else if test \"x$withval\" = \"xno\"; then\n      with_liboping=\"no\"\n    else\n      with_liboping=\"yes\"\n      LIBOPING_CPPFLAGS=\"-I$withval/include\"\n      LIBOPING_LDFLAGS=\"-L$withval/lib\"\n    fi; fi\n  ],\n  [with_liboping=\"yes\"]\n)\n\nSAVE_CPPFLAGS=\"$CPPFLAGS\"\nSAVE_LDFLAGS=\"$LDFLAGS\"\nCPPFLAGS=\"$CPPFLAGS $LIBOPING_CPPFLAGS\"\nLDFLAGS=\"$LDFLAGS $LIBOPING_LDFLAGS\"\n\nif test \"x$with_liboping\" = \"xyes\"; then\n  AC_CHECK_HEADERS([oping.h],\n    [with_liboping=\"yes\"],\n    [with_liboping=\"no (oping.h not found)\"]\n  )\nfi\n\nif test \"x$with_liboping\" = \"xyes\"; then\n  AC_CHECK_LIB([oping], [ping_construct],\n    [with_liboping=\"yes\"],\n    [with_liboping=\"no (symbol 'ping_construct' not found)\"]\n  )\nfi\n\nCPPFLAGS=\"$SAVE_CPPFLAGS\"\nLDFLAGS=\"$SAVE_LDFLAGS\"\n\nif test \"x$with_liboping\" = \"xyes\"; then\n  BUILD_WITH_LIBOPING_CPPFLAGS=\"$LIBOPING_CPPFLAGS\"\n  BUILD_WITH_LIBOPING_LDFLAGS=\"$LIBOPING_LDFLAGS\"\nfi\n\nAC_SUBST([BUILD_WITH_LIBOPING_CPPFLAGS])\nAC_SUBST([BUILD_WITH_LIBOPING_LDFLAGS])\n# }}}\n\n# --with-oracle {{{\nAC_ARG_WITH([oracle],\n  [AS_HELP_STRING([--with-oracle@<:@=ORACLE_HOME@:>@], [Path to Oracle.])],\n  [\n    if test \"x$withval\" = \"xyes\"; then\n      if test \"x$ORACLE_HOME\" = \"x\"; then\n        AC_MSG_WARN([Use of the Oracle library has been forced, but the environment variable ORACLE_HOME is not set.])\n      fi\n      with_oracle=\"yes\"\n    else if test \"x$withval\" = \"xno\"; then\n      with_oracle=\"no\"\n    else\n      with_oracle=\"yes\"\n      ORACLE_HOME=\"$withval\"\n    fi; fi\n  ],\n  [\n    if test \"x$ORACLE_HOME\" = \"x\"; then\n      with_oracle=\"no (ORACLE_HOME is not set)\"\n    else\n      with_oracle=\"yes\"\n    fi\n  ]\n)\n\nif test \"x$ORACLE_HOME\" != \"x\"; then\n  with_oracle_cppflags=\"-I$ORACLE_HOME/rdbms/public\"\n  if test -e \"$ORACLE_HOME/lib/ldflags\"; then\n    with_oracle_libs=`cat \"$ORACLE_HOME/lib/ldflags\"`\n  fi\n  with_oracle_libs=\"-L$ORACLE_HOME/lib -lclntsh\"\nfi\n\nif test \"x$with_oracle\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_oracle_cppflags\"\n\n  AC_CHECK_HEADERS([oci.h],\n    [with_oracle=\"yes\"],\n    [with_oracle=\"no (oci.h not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_oracle\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  SAVE_LIBS=\"$LIBS\"\n  CPPFLAGS=\"$CPPFLAGS $with_oracle_cppflags\"\n  LIBS=\"$LIBS $with_oracle_libs\"\n\n  AC_CHECK_FUNC([OCIEnvCreate],\n    [with_oracle=\"yes\"],\n    [with_oracle=\"no (Symbol 'OCIEnvCreate' not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\n  LIBS=\"$SAVE_LIBS\"\nfi\n\nif test \"x$with_oracle\" = \"xyes\"; then\n  BUILD_WITH_ORACLE_CPPFLAGS=\"$with_oracle_cppflags\"\n  BUILD_WITH_ORACLE_LIBS=\"$with_oracle_libs\"\nfi\n\nAC_SUBST([BUILD_WITH_ORACLE_CPPFLAGS])\nAC_SUBST([BUILD_WITH_ORACLE_LIBS])\n# }}}\n\n# --with-libowcapi {{{\nAC_ARG_WITH([libowcapi],\n  [AS_HELP_STRING([--with-libowcapi@<:@=PREFIX@:>@], [Path to libowcapi.])],\n  [\n    if test \"x$withval\" != \"xno\" && test \"x$withval\" != \"xyes\"; then\n      with_libowcapi_cppflags=\"-I$withval/include\"\n      with_libowcapi_ldflags=\"-L$withval/lib\"\n      with_libowcapi=\"yes\"\n    else\n      with_libowcapi=\"$withval\"\n    fi\n  ],\n  [with_libowcapi=\"yes\"]\n)\n\nif test \"x$with_libowcapi\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libowcapi_cppflags\"\n\n  AC_CHECK_HEADERS([owcapi.h],\n    [with_libowcapi=\"yes\"],\n    [with_libowcapi=\"no (owcapi.h not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libowcapi\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_libowcapi_ldflags\"\n\n  AC_CHECK_LIB([owcapi], [OW_get],\n    [with_libowcapi=\"yes\"],\n    [with_libowcapi=\"no (libowcapi not found)\"]\n  )\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_libowcapi\" = \"xyes\"; then\n  BUILD_WITH_LIBOWCAPI_CPPFLAGS=\"$with_libowcapi_cppflags\"\n  BUILD_WITH_LIBOWCAPI_LDFLAGS=\"$with_libowcapi_ldflags\"\n  BUILD_WITH_LIBOWCAPI_LIBS=\"-lowcapi\"\nfi\n\nAC_SUBST([BUILD_WITH_LIBOWCAPI_CPPFLAGS])\nAC_SUBST([BUILD_WITH_LIBOWCAPI_LDFLAGS])\nAC_SUBST([BUILD_WITH_LIBOWCAPI_LIBS])\n# }}}\n\n# --with-libpcap {{{\nAC_ARG_WITH([libpcap],\n  [AS_HELP_STRING([--with-libpcap@<:@=PREFIX@:>@], [Path to libpcap.])],\n  [\n    if test \"x$withval\" != \"xno\" && test \"x$withval\" != \"xyes\"; then\n      with_libpcap_cppflags=\"-I$withval/include\"\n      with_libpcap_ldflags=\"$LDFLAGS -L$withval/lib\"\n      with_libpcap=\"yes\"\n    else\n      with_libpcap=\"$withval\"\n    fi\n  ],\n  [with_libpcap=\"yes\"]\n)\n\nif test \"x$with_libpcap\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libpcap_cppflags\"\n\n  AC_CHECK_HEADERS([pcap.h],\n    [with_libpcap=\"yes\"],\n    [with_libpcap=\"no (pcap.h not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libpcap\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_libpcap_ldflags\"\n\n  AC_CHECK_LIB([pcap], [pcap_open_live],\n    [with_libpcap=\"yes\"],\n    [with_libpcap=\"no (libpcap not found)\"]\n  )\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_libpcap\" = \"xyes\"; then\n  AC_CACHE_CHECK([whether libpcap has PCAP_ERROR_IFACE_NOT_UP],\n    [c_cv_libpcap_have_pcap_error_iface_not_up],\n    [\n      AC_COMPILE_IFELSE(\n        [\n          AC_LANG_PROGRAM(\n            [[#include <pcap.h>]],\n            [[\n              int val = PCAP_ERROR_IFACE_NOT_UP;\n              return val;\n            ]]\n          )\n        ],\n        [c_cv_libpcap_have_pcap_error_iface_not_up=\"yes\"],\n        [c_cv_libpcap_have_pcap_error_iface_not_up=\"no\"]\n      )\n    ]\n  )\nfi\n\nif test \"x$c_cv_libpcap_have_pcap_error_iface_not_up\" != \"xyes\"; then\n  with_libpcap=\"no (pcap.h misses PCAP_ERROR_IFACE_NOT_UP)\"\nfi\n\nif test \"x$with_libpcap\" = \"xyes\"; then\n  BUILD_WITH_LIBPCAP_CPPFLAGS=\"$with_libpcap_cppflags\"\n  BUILD_WITH_LIBPCAP_LDFLAGS=\"$with_libpcap_ldflags\"\n  BUILD_WITH_LIBPCAP_LIBS=\"-lpcap\"\nfi\n\nAC_SUBST([BUILD_WITH_LIBPCAP_CPPFLAGS])\nAC_SUBST([BUILD_WITH_LIBPCAP_LDFLAGS])\nAC_SUBST([BUILD_WITH_LIBPCAP_LIBS])\n# }}}\n\n# --with-libperl {{{\nAC_ARG_WITH([libperl],\n  [AS_HELP_STRING([--with-libperl@<:@=PREFIX@:>@], [Path to libperl.])],\n  [\n    if test \"x$withval\" != \"xno\" && test \"x$withval\" != \"xyes\"; then\n      LDFLAGS=\"$LDFLAGS -L$withval/lib\"\n      CPPFLAGS=\"$CPPFLAGS -I$withval/include\"\n      with_libperl=\"yes\"\n    else\n      with_libperl=\"$withval\"\n    fi\n  ],\n  [with_libperl=\"yes\"]\n)\n\nAC_ARG_VAR([PERL], [path to Perl interpreter])\nAC_PATH_PROG([PERL], [perl])\n\nif test \"x$PERL\" = \"x\"; then\n  with_libperl=\"no (no Perl interpreter found)\"\nfi\n\nif test \"x$with_libperl\" = \"xyes\"; then\n  SAVE_CFLAGS=\"$CFLAGS\"\n  SAVE_LIBS=\"$LIBS\"\n  dnl ARCHFLAGS=\"\" -> disable multi -arch on OSX (see Config_heavy.pl:fetch_string)\n  PERL_CFLAGS=`ARCHFLAGS=\"\" $PERL -MExtUtils::Embed -e perl_inc`\n  PERL_LIBS=`ARCHFLAGS=\"\" $PERL -MExtUtils::Embed -e ldopts`\n  CFLAGS=\"$CFLAGS $PERL_CFLAGS\"\n  LIBS=\"$LIBS $PERL_LIBS\"\n\n  AC_CACHE_CHECK([for libperl],\n    [c_cv_have_libperl],\n    [\n      AC_LINK_IFELSE(\n        [\n          AC_LANG_PROGRAM(\n            [[\n              #define PERL_NO_GET_CONTEXT\n              #include <EXTERN.h>\n              #include <perl.h>\n              #include <XSUB.h>\n            ]],\n            [[\n              dTHX;\n              load_module (PERL_LOADMOD_NOIMPORT,\n                newSVpv (\"Collectd::Plugin::FooBar\", 24),\n                Nullsv);\n            ]]\n          )\n        ],\n        [c_cv_have_libperl=\"yes\"],\n        [c_cv_have_libperl=\"no\"]\n      )\n    ]\n  )\n\n  CFLAGS=\"$SAVE_CFLAGS\"\n  LIBS=\"$SAVE_LIBS\"\n\n  if test \"x$c_cv_have_libperl\" = \"xno\"; then\n    with_libperl=\"no\"\n  fi\nfi\n\nif test \"x$with_libperl\" = \"xyes\"; then\n  SAVE_CFLAGS=\"$CFLAGS\"\n  SAVE_LIBS=\"$LIBS\"\n  CFLAGS=\"$CFLAGS $PERL_CFLAGS\"\n  LIBS=\"$LIBS $PERL_LIBS\"\n\n  AC_CACHE_CHECK([if Perl supports ithreads],\n    [c_cv_have_perl_ithreads],\n    [\n      AC_LINK_IFELSE(\n        [\n          AC_LANG_PROGRAM(\n            [[\n              #include <EXTERN.h>\n              #include <perl.h>\n              #include <XSUB.h>\n\n              #if !defined(USE_ITHREADS)\n              # error \"Perl does not support ithreads!\"\n              #endif /* !defined(USE_ITHREADS) */\n            ]],\n            []\n          )\n        ],\n        [c_cv_have_perl_ithreads=\"yes\"],\n        [c_cv_have_perl_ithreads=\"no\"]\n      )\n    ]\n  )\n\n  CFLAGS=\"$SAVE_CFLAGS\"\n  LIBS=\"$SAVE_LIBS\"\nfi\n\nif test \"x$with_libperl\" = \"xyes\"; then\n  # trigger an error if Perl_load_module*() uses __attribute__nonnull__(3)\n  # (see issues #41 and #42)\n  SAVE_CFLAGS=\"$CFLAGS\"\n  SAVE_LIBS=\"$LIBS\"\n  CFLAGS=\"$CFLAGS $PERL_CFLAGS\"\n  if test \"x$GCC\" = \"xyes\"; then\n    CFLAGS=\"$CFLAGS -Wall -Werror\"\n  fi\n  LIBS=\"$LIBS $PERL_LIBS\"\n\n  AC_CACHE_CHECK([for broken Perl_load_module()],\n    [c_cv_have_broken_perl_load_module],\n    [\n      AC_LINK_IFELSE(\n        [\n          AC_LANG_PROGRAM(\n            [[\n              #define PERL_NO_GET_CONTEXT\n              #include <EXTERN.h>\n              #include <perl.h>\n              #include <XSUB.h>\n            ]],\n            [[\n              dTHX;\n              load_module (PERL_LOADMOD_NOIMPORT,\n                newSVpv (\"Collectd::Plugin::FooBar\", 24),\n                Nullsv);\n            ]]\n          )\n        ],\n        [c_cv_have_broken_perl_load_module=\"no\"],\n        [c_cv_have_broken_perl_load_module=\"yes\"]\n      )\n    ]\n  )\n\n  CFLAGS=\"$SAVE_CFLAGS\"\n  LIBS=\"$SAVE_LIBS\"\nfi\n\nif test \"x$c_cv_have_broken_perl_load_module\" = \"xyes\"; then\n  PERL_CFLAGS=\"$PERL_CFLAGS -Wno-nonnull\"\nfi\n\nif test \"x$with_libperl\" = \"xyes\"; then\n  SAVE_CFLAGS=\"$CFLAGS\"\n  SAVE_LIBS=\"$LIBS\"\n  CFLAGS=\"$CFLAGS $PERL_CFLAGS\"\n  LIBS=\"$LIBS $PERL_LIBS\"\n\n  AC_CHECK_MEMBER(\n    [struct mgvtbl.svt_local],\n    [have_struct_mgvtbl_svt_local=\"yes\"],\n    [have_struct_mgvtbl_svt_local=\"no\"],\n    [[\n      #include <EXTERN.h>\n      #include <perl.h>\n      #include <XSUB.h>\n    ]]\n  )\n\n  if test \"x$have_struct_mgvtbl_svt_local\" = \"xyes\"; then\n    AC_DEFINE([HAVE_PERL_STRUCT_MGVTBL_SVT_LOCAL], [1], [Define if Perls struct mgvtbl has member svt_local.])\n  fi\n\n  CFLAGS=\"$SAVE_CFLAGS\"\n  LIBS=\"$SAVE_LIBS\"\nfi\nAC_SUBST([PERL_CFLAGS])\nAC_SUBST([PERL_LIBS])\n\n# }}}\n\n\n# --with-libpmwapi {{{\nAC_ARG_WITH([libpmwapi],\n  [AS_HELP_STRING([--with-libpmwapi@<:@=PREFIX@:>@], [Path to libpmwapi.])],\n  [\n    if test \"x$withval\" = \"xyes\" || test \"x$withval\" = \"xno\"; then\n      with_libpmwapi=\"$withval\"\n    else\n      with_libpmwapi_cppflags=\"-I$withval/include\"\n      with_libpmwapi_ldflags=\"-L$withval/lib64\"\n      with_libpmwapi=\"yes\"\n    fi\n  ],\n  [with_libpmwapi=\"yes\"]\n)\n\nif test \"x$with_libpmwapi\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libpmwapi_cppflags\"\n\n  AC_CHECK_HEADERS([pmw_api.h],\n    [with_libpmwapi=\"yes\"],\n    [with_libpmwapi=\"no (pmw_api.h not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libpmwapi\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_libpmwapi_ldflags\"\n\n  AC_CHECK_LIB([pmwapi], [PMWAPIGetDIMMCount],\n    [with_libpmwapis=\"yes\"],\n    [with_libpmwapi=\"no (symbol 'PMWAPIGetDIMMCount' not found)\"],\n    [-lpmwcollect]\n  )\n\n  AC_CHECK_LIB([pmwapi], [PMWAPIStart],\n    [with_libpmwapi=\"yes\"],\n    [with_libpmwapi=\"no (symbol 'PMWAPIStart' not found)\"],\n    [-lpmwcollect]\n  )\n\n  AC_CHECK_LIB([pmwapi], [PMWAPIStop],\n    [with_libpmwapi=\"yes\"],\n    [with_libpmwapi=\"no (symbol 'PMWAPIStop' not found)\"],\n    [-lpmwcollect]\n  )\n\n  AC_CHECK_LIB([pmwapi], [PMWAPIRead],\n    [with_libpmwapi=\"yes\"],\n    [with_libpmwapi=\"no (symbol 'PMWAPIRead' not found)\"],\n    [-lpmwcollect]\n  )\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_libpmwapi\" = \"xyes\"; then\n  BUILD_WITH_LIBPMWAPI_CPPFLAGS=\"$with_libpmwapi_cppflags\"\n  BUILD_WITH_LIBPMWAPI_LDFLAGS=\"$with_libpmwapi_ldflags\"\nfi\n\nAC_SUBST([BUILD_WITH_LIBPMWAPI_CPPFLAGS])\nAC_SUBST([BUILD_WITH_LIBPMWAPI_LDFLAGS])\n# }}}\n\n# --with-libpq {{{\nwith_pg_config=\"pg_config\"\nAC_ARG_WITH([libpq],\n  [AS_HELP_STRING([--with-libpq@<:@=PREFIX@:>@], [Path to libpq.])],\n  [\n    if test \"x$withval\" = \"xno\" || test \"x$withval\" = \"xyes\"; then\n      with_libpq=\"$withval\"\n    else\n      if test -f \"$withval\" && test -x \"$withval\"; then\n        with_pg_config=\"$withval\"\n      else if test -x \"$withval/bin/pg_config\"; then\n        with_pg_config=\"$withval/bin/pg_config\"\n      fi; fi\n      with_libpq=\"yes\"\n    fi\n  ],\n  [with_libpq=\"yes\"]\n)\n\nif test \"x$with_libpq\" = \"xyes\"; then\n  with_libpq_includedir=`$with_pg_config --includedir 2> /dev/null`\n  pg_config_status=$?\n\n  if test $pg_config_status -eq 0; then\n    if test -n \"$with_libpq_includedir\"; then\n      for dir in $with_libpq_includedir; do\n        with_libpq_cppflags=\"$with_libpq_cppflags -I$dir\"\n      done\n    fi\n  else\n    AC_MSG_WARN([$with_pg_config returned with status $pg_config_status])\n  fi\n\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libpq_cppflags\"\n\n  AC_CHECK_HEADERS([libpq-fe.h],\n    [with_libpq=\"yes\"],\n    [with_libpq=\"no (libpq-fe.h not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libpq\" = \"xyes\"; then\n  with_libpq_libdir=`$with_pg_config --libdir 2> /dev/null`\n  pg_config_status=$?\n\n  if test $pg_config_status -eq 0\n  then\n    if test -n \"$with_libpq_libdir\"; then\n      for dir in $with_libpq_libdir; do\n        with_libpq_ldflags=\"$with_libpq_ldflags -L$dir\"\n      done\n    fi\n  else\n    AC_MSG_WARN([$with_pg_config returned with status $pg_config_status])\n  fi\n\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_libpq_ldflags\"\n\n  AC_CHECK_LIB([pq], [PQserverVersion],\n    [with_libpq=\"yes\"],\n    [with_libpq=\"no (symbol 'PQserverVersion' not found)\"])\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_libpq\" = \"xyes\"; then\n  BUILD_WITH_LIBPQ_CPPFLAGS=\"$with_libpq_cppflags\"\n  BUILD_WITH_LIBPQ_LDFLAGS=\"$with_libpq_ldflags\"\n  BUILD_WITH_LIBPQ_LIBS=\"-lpq\"\nfi\n\nAC_SUBST([BUILD_WITH_LIBPQ_CPPFLAGS])\nAC_SUBST([BUILD_WITH_LIBPQ_LDFLAGS])\nAC_SUBST([BUILD_WITH_LIBPQ_LIBS])\n# }}}\n\n# --with-libpqos {{{\nAC_ARG_WITH([libpqos],\n  [AS_HELP_STRING([--with-libpqos@<:@=PREFIX@:>@], [Path to libpqos.])],\n  [\n    if test \"x$withval\" != \"xno\" && test \"x$withval\" != \"xyes\"; then\n      with_libpqos_cppflags=\"-I$withval/include\"\n      with_libpqos_ldflags=\"-L$withval/lib\"\n      with_libpqos=\"yes\"\n    else\n      with_libpqos=\"$withval\"\n    fi\n  ],\n  [with_libpqos=\"yes\"]\n)\n\nif test \"x$with_libpqos\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libpqos_cppflags\"\n\n  AC_CHECK_HEADERS([pqos.h],\n    [with_libpqos=\"yes\"],\n    [with_libpqos=\"no (pqos.h not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libpqos\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_libpqos_ldflags\"\n\n  AC_CHECK_LIB([pqos], [pqos_init],\n    [with_libpqos=\"yes\"],\n    [with_libpqos=\"no (Can't find libpqos)\"]\n  )\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_libpqos\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libpqos_cppflags\"\n  AC_PREPROC_IFELSE(\n    [\n      AC_LANG_SOURCE(\n        [[\n          #include <pqos.h>\n          #if PQOS_VERSION < 106\n          #error \"required PQOS version >= 1.06\"\n          #endif\n        ]]\n      )\n    ],\n    [with_libpqos=\"yes\"],\n    [with_libpqos=\"no (pqos library version 1.06 or higher is required)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libpqos\" = \"xyes\"; then\n  BUILD_WITH_LIBPQOS_CPPFLAGS=\"$with_libpqos_cppflags\"\n  BUILD_WITH_LIBPQOS_LDFLAGS=\"$with_libpqos_ldflags\"\n  BUILD_WITH_LIBPQOS_LIBS=\"-lpqos\"\nfi\n\nAC_SUBST([BUILD_WITH_LIBPQOS_CPPFLAGS])\nAC_SUBST([BUILD_WITH_LIBPQOS_LDFLAGS])\nAC_SUBST([BUILD_WITH_LIBPQOS_LIBS])\n# }}}\n\n# --with-libjansson {{{\nAC_ARG_WITH([libjansson],\n[AS_HELP_STRING([--with-libjansson@<:@=PREFIX@:>@], [Path to libjansson.])],\n[\n  if test \"x$withval\" != \"xno\" && test \"x$withval\" != \"xyes\"; then\n   with_libjansson_cppflags=\"-I$withval/include\"\n   with_libjansson_ldflags=\"-L$withval/lib\"\n   with_libjansson=\"yes\"\n  else\n      with_libjansson=\"$withval\"\n  fi\n],\n  [with_libjansson=\"yes\"]\n)\n\nif test \"x$with_libjansson\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libjansson_cppflags\"\n\n  AC_CHECK_HEADERS([jansson.h],\n    [with_libjansson=\"yes\"],\n    [with_libjansson=\"no (jansson.h not found)\"]\n  )\n CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\nif test \"x$with_libjansson\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_libjansson_ldflags\"\n\n  AC_CHECK_LIB([jansson], [json_loads],\n    [with_libjansson=\"yes\"],\n    [with_libjansson=\"no (symbol 'json_loads' not found)\"]\n  )\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nBUILD_WITH_LIBJANSSON_CPPFLAGS=\"$with_libjansson_cppflags\"\nBUILD_WITH_LIBJANSSON_LDFLAGS=\"$with_libjansson_ldflags\"\nBUILD_WITH_LIBJANSSON_LIBS=\"-ljansson\"\nAC_SUBST(BUILD_WITH_LIBJANSSON_CPPFLAGS)\nAC_SUBST(BUILD_WITH_LIBJANSSON_LDFLAGS)\nAC_SUBST(BUILD_WITH_LIBJANSSON_LIBS)\n# }}}\n\n# --with-libjevents {{{\nwith_libjevents_cppflags=\"\"\nwith_libjevents_ldflags=\"\"\nAC_ARG_WITH([libjevents],\n  [AS_HELP_STRING([--with-libjevents@<:@=PREFIX@:>@], [Path to libjevents.])],\n  [\n    if test \"x$withval\" != \"xno\" && test \"x$withval\" != \"xyes\"; then\n      with_libjevents_cppflags=\"-I$withval/include\"\n      with_libjevents_ldflags=\"-L$withval/lib\"\n      with_libjevents=\"yes\"\n    else\n      with_libjevents=\"$withval\"\n    fi\n  ],\n  [with_libjevents=\"yes\"]\n)\n\nif test \"x$with_libjevents\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libjevents_cppflags\"\n\n  AC_CHECK_HEADERS([jevents.h], [with_libjevents=\"yes\"], [with_libjevents=\"no (jevents.h not found)\"])\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\nif test \"x$with_libjevents\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_libjevents_ldflags\"\n\n  AC_CHECK_LIB([jevents], [json_events], [with_libjevents=\"yes\"], [with_libjevents=\"no (Can't find libjevents)\"])\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\nif test \"x$with_libjevents\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_libjevents_ldflags\"\n\n  AC_CHECK_LIB([jevents], [event_scaled_value_sum], [with_libjevents=\"yes\"], [with_libjevents=\"no (libjevents is too old)\"])\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\nif test \"x$with_libjevents\" = \"xyes\"; then\n  BUILD_WITH_LIBJEVENTS_CPPFLAGS=\"$with_libjevents_cppflags\"\n  BUILD_WITH_LIBJEVENTS_LDFLAGS=\"$with_libjevents_ldflags\"\n  BUILD_WITH_LIBJEVENTS_LIBS=\"-ljevents\"\nfi\nAC_SUBST([BUILD_WITH_LIBJEVENTS_CPPFLAGS])\nAC_SUBST([BUILD_WITH_LIBJEVENTS_LDFLAGS])\nAC_SUBST([BUILD_WITH_LIBJEVENTS_LIBS])\n# }}}\n\n# --with-libprotobuf {{{\nwith_libprotobuf_cppflags=\"\"\nwith_libprotobuf_ldflags=\"\"\nAC_ARG_WITH([libprotobuf],\n  [AS_HELP_STRING([--with-libprotobuf@<:@=PREFIX@:>@], [Path to libprotobuf.])],\n  [\n    if test \"x$withval\" != \"xno\" && test \"x$withval\" != \"xyes\"; then\n      with_libprotobuf_cppflags=\"-I$withval/include\"\n      with_libprotobuf_ldflags=\"-L$withval/lib\"\n      with_libprotobuf=\"yes\"\n    fi\n    if test \"x$withval\" = \"xno\"; then\n      with_libprotobuf=\"no (disabled on command line)\"\n    fi\n  ],\n  [withval=\"yes\"]\n)\n\nif test \"x$withval\" = \"xyes\"; then\n  PKG_CHECK_MODULES([PROTOBUF], [protobuf],\n    [with_libprotobuf=\"yes\"],\n    [with_libprotobuf=\"no (pkg-config could not find libprotobuf)\"]\n  )\nfi\n\nif test \"x$withval\" != \"xno\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  SAVE_LIBS=\"$LIBS\"\n  LDFLAGS=\"$with_libprotobuf_ldflags\"\n  LIBS=\"$PROTOBUF_LIBS $LIBS\"\n  AC_LANG_PUSH([C++])\n  AC_CHECK_LIB([protobuf], [main],\n    [\n      SAVE_CPPFLAGS=\"$CPPFLAGS\"\n      CPPFLAGS=\"-std=c++14 $with_libprotobuf_cppflags $PROTOBUF_CFLAGS\"\n      if test \"x$PROTOBUF_LIBS\" = \"x\"\n      then\n        PROTOBUF_LIBS=\"-lprotobuf\"\n      fi\n      AC_CHECK_HEADERS([google/protobuf/util/time_util.h],\n        [with_libprotobuf=\"yes\"],\n        [with_libprotobuf=\"no (<google/protobuf/util/time_util.h> not found)\"]\n      )\n      CPPFLAGS=\"$SAVE_CPPFLAGS\"\n    ],\n    [with_libprotobuf=\"no (libprotobuf not found)\"]\n  )\n  AC_LANG_POP([C++])\n  LDFLAGS=\"$SAVE_LDFLAGS\"\n  LIBS=\"$SAVE_LIBS\"\nfi\n\nBUILD_WITH_LIBPROTOBUF_CPPFLAGS=\"$with_libprotobuf_cppflags $PROTOBUF_CFLAGS\"\nBUILD_WITH_LIBPROTOBUF_LDFLAGS=\"$with_libprotobuf_ldflags\"\nBUILD_WITH_LIBPROTOBUF_LIBS=\"$PROTOBUF_LIBS\"\nAC_SUBST([BUILD_WITH_LIBPROTOBUF_CPPFLAGS])\nAC_SUBST([BUILD_WITH_LIBPROTOBUF_LDFLAGS])\nAC_SUBST([BUILD_WITH_LIBPROTOBUF_LIBS])\n# }}}\n\nAC_ARG_VAR([PROTOC], [path to the protoc binary])\nAC_PATH_PROG([PROTOC], [protoc])\nhave_protoc3=\"no\"\nif test \"x$PROTOC\" != \"x\"; then\n  AC_MSG_CHECKING([for protoc 3.0.0+])\n  if $PROTOC --version | $EGREP libprotoc.3 >/dev/null; then\n    protoc3=\"yes (`$PROTOC --version`)\"\n    have_protoc3=\"yes\"\n  else\n    protoc3=\"no (`$PROTOC --version`)\"\n  fi\n  AC_MSG_RESULT([$protoc3])\nfi\nAM_CONDITIONAL([HAVE_PROTOC3], [test \"x$have_protoc3\" = \"xyes\"])\n\n# --with-libprotobuf-c {{{\nAC_ARG_WITH([libprotobuf-c],\n  [AS_HELP_STRING([--with-libprotobuf-c@<:@=PREFIX@:>@], [Path to libprotobuf-c.])],\n  [\n    if test \"x$withval\" != \"xno\" && test \"x$withval\" != \"xyes\"; then\n      with_libprotobuf_c_cppflags=\"-I$withval/include\"\n      with_libprotobuf_c_ldflags=\"-L$withval/lib\"\n      with_libprotobuf_c=\"yes\"\n    fi\n\n    if test \"x$withval\" = \"xno\"; then\n      with_libprotobuf_c=\"no (disabled on command line)\"\n    fi\n  ],\n  [withval=\"yes\"]\n)\n\nif test \"x$withval\" = \"xyes\"; then\n  PKG_CHECK_MODULES([PROTOBUF_C], [libprotobuf-c],\n    [with_libprotobuf_c=\"yes\"],\n    [with_libprotobuf_c=\"no (pkg-config could not find libprotobuf-c)\"]\n  )\nfi\n\nif test \"x$withval\" != \"xno\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  SAVE_LIBS=\"$LIBS\"\n  LDFLAGS=\"$with_libprotobuf_c_ldflags\"\n  LIBS=\"$PROTOBUF_C_LIBS $LIBS\"\n  AC_CHECK_LIB([protobuf-c], [protobuf_c_message_pack],\n    [\n      SAVE_CPPFLAGS=\"$CPPFLAGS\"\n      CPPFLAGS=\"$with_libprotobuf_c_cppflags $PROTOBUF_C_CFLAGS\"\n      if test \"x$PROTOBUF_C_LIBS\" = \"x\"; then\n        PROTOBUF_C_LIBS=\"-lprotobuf-c\"\n      fi\n\n      AC_CHECK_HEADERS([protobuf-c/protobuf-c.h google/protobuf-c/protobuf-c.h],\n        [\n          with_libprotobuf_c=\"yes\"\n          break\n        ],\n        [with_libprotobuf_c=\"no (<protobuf-c.h> not found)\"]\n      )\n\n      CPPFLAGS=\"$SAVE_CPPFLAGS\"\n    ],\n    [with_libprotobuf_c=\"no (libprotobuf-c not found)\"]\n  )\n  LDFLAGS=\"$SAVE_LDFLAGS\"\n  LIBS=\"$SAVE_LIBS\"\nfi\n\nBUILD_WITH_LIBPROTOBUF_C_CPPFLAGS=\"$with_libprotobuf_c_cppflags $PROTOBUF_C_CFLAGS\"\nBUILD_WITH_LIBPROTOBUF_C_LDFLAGS=\"$with_libprotobuf_c_ldflags\"\nBUILD_WITH_LIBPROTOBUF_C_LIBS=\"$PROTOBUF_C_LIBS\"\nAC_SUBST([BUILD_WITH_LIBPROTOBUF_C_CPPFLAGS])\nAC_SUBST([BUILD_WITH_LIBPROTOBUF_C_LDFLAGS])\nAC_SUBST([BUILD_WITH_LIBPROTOBUF_C_LIBS])\n# }}}\n\nAC_ARG_VAR([PROTOC_C], [path to the protoc-c binary])\nAC_PATH_PROG([PROTOC_C], [protoc-c])\nif test \"x$PROTOC_C\" = \"x\"\nthen\n  have_protoc_c=\"no (protoc-c compiler not found)\"\nelse\n  have_protoc_c=\"yes\"\nfi\n\n# --with-libpython {{{\nAC_ARG_VAR([LIBPYTHON_CPPFLAGS], [Preprocessor flags for libpython])\nAC_ARG_VAR([LIBPYTHON_LDFLAGS], [Linker flags for libpython])\nAC_ARG_VAR([LIBPYTHON_LIBS], [Libraries for libpython])\n\nAC_ARG_WITH([libpython],\n  [AS_HELP_STRING([--with-libpython], [if we should build with libpython @<:@default=yes@:>@])],\n  [with_libpython=\"$withval\"],\n  [with_libpython=\"check\"]\n)\n\nif test \"$with_libpython\" != \"no\"; then\n  if test \"$LIBPYTHON_CPPFLAGS\" = \"\" && test \"$LIBPYTHON_LDFLAGS\" = \"\"; then\n    AC_ARG_VAR([PYTHON_CONFIG], [path to python-config])\n    AC_PATH_PROGS([PYTHON_CONFIG],\n      [python3-config python2-config python-config]\n    )\n    if test \"$PYTHON_CONFIG\" = \"\"; then\n      if test \"$with_libpython\" = \"yes\"; then\n        AC_MSG_ERROR([Unable to find python-config])\n      fi\n      with_libpython=\"no\"\n    fi\n  fi\nfi\n\nif test \"$PYTHON_CONFIG\" != \"\"; then\n  LIBPYTHON_CPPFLAGS=\"`${PYTHON_CONFIG} --includes`\"\n  if test $? -ne 0; then\n    with_libpython=\"no\"\n  fi\n  LIBPYTHON_LDFLAGS=\"`${PYTHON_CONFIG} --ldflags --embed`\" || LIBPYTHON_LDFLAGS=\"`${PYTHON_CONFIG} --ldflags`\"\n  if test $? -ne 0; then\n    with_libpython=\"no\"\n  fi\n  LIBPYTHON_LIBS=\"`${PYTHON_CONFIG} --libs --embed`\" || LIBPYTHON_LIBS=\"`${PYTHON_CONFIG} --libs`\"\n  if test $? -ne 0; then\n    with_libpython=\"no\"\n  fi\nfi\n\nif test \"$with_libpython\" != \"xno\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  SAVE_LIBS=\"$LIBS\"\n  CPPFLAGS=\"$LIBPYTHON_CPPFLAGS $CPPFLAGS\"\n  LDFLAGS=\"$LIBPYTHON_LDFLAGS $LDFLAGS\"\n  LIBS=\"$LIBPYTHON_LIBS $LIBS\"\n\n  AC_CHECK_HEADERS([Python.h],\n    [\n      AC_MSG_CHECKING([for libpython])\n      AC_LINK_IFELSE([AC_LANG_PROGRAM(\n          [[#include <Python.h>]],\n          [[Py_Initialize();]])\n        ],\n        [with_libpython=\"yes\"],\n        [with_libpython=\"no\"]\n      )\n      AC_MSG_RESULT([$with_libpython])\n    ],\n    [with_libpython=\"no\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\n  LDFLAGS=\"$SAVE_LDFLAGS\"\n  LIBS=\"$SAVE_LIBS\"\nfi\n# }}} --with-libpython\n\n# --with-libqpid_proton {{{\nAC_ARG_WITH([libqpid_proton],\n  [AS_HELP_STRING([--with-libqpid_proton@<:@=PREFIX@:>@], [Path to libqpid_proton.])],\n  [\n    if test \"x$withval\" != \"xno\" && test \"x$withval\" != \"xyes\"; then\n      with_libqpid_proton_cppflags=\"-I$withval/include\"\n      with_libqpid_proton_ldflags=\"-L$withval/lib\"\n      with_libqpid_proton=\"yes\"\n    else\n      with_libqpid_proton=\"$withval\"\n    fi\n  ],\n  [with_libqpid_proton=\"yes\"]\n)\n\nif test \"x$with_libqpid_proton\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libqpid_proton_cppflags\"\n\n  AC_CHECK_HEADERS([proton/proactor.h],\n    [with_libqpid_proton=\"yes\"],\n    [with_libqpid_proton=\"no (proton/proactor.h not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libqpid_proton\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_libqpid_proton_ldflags\"\n\n  AC_CHECK_LIB([qpid-proton], [pn_connection],\n    [with_libqpid_proton=\"yes\"],\n    [with_libqpid_proton=\"no (Symbol 'pn_connection' not found)\"])\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_libqpid_proton\" = \"xyes\"; then\n  BUILD_WITH_LIBQPIDPROTON_CPPFLAGS=\"$with_libqpid_proton_cppflags\"\n  BUILD_WITH_LIBQPIDPROTON_LDFLAGS=\"$with_libqpid_proton_ldflags\"\n  BUILD_WITH_LIBQPIDPROTON_LIBS=\"-lqpid-proton\"\nfi\n\nAC_SUBST(BUILD_WITH_LIBQPIDPROTON_CPPFLAGS)\nAC_SUBST(BUILD_WITH_LIBQPIDPROTON_LDFLAGS)\nAC_SUBST(BUILD_WITH_LIBQPIDPROTON_LIBS)\n\n# }}}\n\n# --with-librabbitmq {{{\nAC_ARG_WITH([librabbitmq],\n  [AS_HELP_STRING([--with-librabbitmq@<:@=PREFIX@:>@], [Path to librabbitmq.])],\n  [\n    if test \"x$withval\" != \"xno\" && test \"x$withval\" != \"xyes\"; then\n      with_librabbitmq_cppflags=\"-I$withval/include\"\n      with_librabbitmq_ldflags=\"-L$withval/lib\"\n      with_librabbitmq=\"yes\"\n    else\n      with_librabbitmq=\"$withval\"\n    fi\n  ],\n  [with_librabbitmq=\"yes\"]\n)\n\nif test \"x$with_librabbitmq\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_librabbitmq_cppflags\"\n\n  with_librabbitmq=\"no (amqp.h and rabbitmq-c/amqp.h not found)\"\n  AC_CHECK_HEADERS([rabbitmq-c/amqp.h], [with_librabbitmq=\"yes\"], [])\n  AC_CHECK_HEADERS([amqp.h], [with_librabbitmq=\"yes\"], [])\n\n  AC_CHECK_HEADERS([rabbitmq-c/framing.h rabbitmq-c/ssl_socket.h rabbitmq-c/tcp_socket.h \\\n                    amqp_framing.h amqp_ssl_socket.h amqp_tcp_socket.h])\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_librabbitmq\" = \"xyes\"; then\n  # librabbitmq up to version 0.9.1 provides \"library_errno\", later\n  # versions use \"library_error\". The library does not provide a version\n  # macro :(.\n\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_librabbitmq_cppflags\"\n\n  AC_CHECK_MEMBERS([amqp_rpc_reply_t.library_errno],\n    [],\n    [],\n    [[\n      #include <stdlib.h>\n      #include <stdio.h>\n      #include <stdint.h>\n      #include <inttypes.h>\n      #if HAVE_RABBITMQ_C_AMQP_H\n      # include <rabbitmq-c/amqp.h>\n      #else\n      # include <amqp.h>\n      #endif\n    ]]\n  )\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\n\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_librabbitmq_ldflags\"\n\n  AC_CHECK_LIB([rabbitmq], [amqp_basic_publish],\n    [with_librabbitmq=\"yes\"],\n    [with_librabbitmq=\"no (Symbol 'amqp_basic_publish' not found)\"]\n  )\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_librabbitmq\" = \"xyes\"; then\n  BUILD_WITH_LIBRABBITMQ_CPPFLAGS=\"$with_librabbitmq_cppflags\"\n  BUILD_WITH_LIBRABBITMQ_LDFLAGS=\"$with_librabbitmq_ldflags\"\n  BUILD_WITH_LIBRABBITMQ_LIBS=\"-lrabbitmq\"\nfi\n\nAC_SUBST(BUILD_WITH_LIBRABBITMQ_CPPFLAGS)\nAC_SUBST(BUILD_WITH_LIBRABBITMQ_LDFLAGS)\nAC_SUBST(BUILD_WITH_LIBRABBITMQ_LIBS)\n\n# }}}\n\n# --with-librdkafka {{{\nAC_ARG_WITH([librdkafka],\n  [AS_HELP_STRING([--with-librdkafka@<:@=PREFIX@:>@], [Path to librdkafka.])],\n  [\n    if test \"x$withval\" != \"xno\" && test \"x$withval\" != \"xyes\"; then\n      with_librdkafka_cppflags=\"-I$withval/include\"\n      with_librdkafka_ldflags=\"-L$withval/lib\"\n      with_librdkafka_rpath=\"$withval/lib\"\n      with_librdkafka=\"yes\"\n    else\n      with_librdkafka=\"$withval\"\n    fi\n  ],\n  [with_librdkafka=\"yes\"]\n)\n\nif test \"x$with_librdkafka\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_librdkafka_cppflags\"\n\n  AC_CHECK_HEADERS([librdkafka/rdkafka.h],\n    [with_librdkafka=\"yes\"],\n    [with_librdkafka=\"no (librdkafka/rdkafka.h not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_librdkafka\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_librdkafka_ldflags\"\n\n  AC_CHECK_LIB([rdkafka], [rd_kafka_new],\n    [with_librdkafka=\"yes\"],\n    [with_librdkafka=\"no (Symbol 'rd_kafka_new' not found)\"])\n\n  AC_CHECK_LIB([rdkafka], [rd_kafka_conf_set_log_cb],\n    [with_librdkafka_log_cb=\"yes\"],\n    [with_librdkafka_log_cb=\"no\"])\n\n  AC_CHECK_LIB([rdkafka], [rd_kafka_set_logger],\n    [with_librdkafka_logger=\"yes\"],\n    [with_librdkafka_logger=\"no\"]\n  )\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_librdkafka\" = \"xyes\"; then\n  BUILD_WITH_LIBRDKAFKA_CPPFLAGS=\"$with_librdkafka_cppflags\"\n  BUILD_WITH_LIBRDKAFKA_LDFLAGS=\"$with_librdkafka_ldflags\"\n\n  if test \"x$with_librdkafka_rpath\" != \"x\"; then\n    BUILD_WITH_LIBRDKAFKA_LIBS=\"-Wl,-rpath,$with_librdkafka_rpath -lrdkafka\"\n  else\n    BUILD_WITH_LIBRDKAFKA_LIBS=\"-lrdkafka\"\n  fi\n\n  if test \"x$with_librdkafka_log_cb\" = \"xyes\"; then\n    AC_DEFINE(HAVE_LIBRDKAFKA_LOG_CB, 1, [Define if librdkafka log facility is present and usable.])\n  else if test \"x$with_librdkafka_logger\" = \"xyes\"; then\n    AC_DEFINE(HAVE_LIBRDKAFKA_LOGGER, 1, [Define if librdkafka log facility is present and usable.])\n  fi; fi\nfi\n\nAC_SUBST([BUILD_WITH_LIBRDKAFKA_CPPFLAGS])\nAC_SUBST([BUILD_WITH_LIBRDKAFKA_LDFLAGS])\nAC_SUBST([BUILD_WITH_LIBRDKAFKA_LIBS])\n# }}}\n\n# --with-librouteros {{{\nAC_ARG_WITH([librouteros],\n  [AS_HELP_STRING([--with-librouteros@<:@=PREFIX@:>@], [Path to librouteros.])],\n  [\n    if test \"x$withval\" = \"xyes\" || test \"x$withval\" = \"xno\"; then\n      with_librouteros=\"$witval\"\n    else\n      with_librouteros_cppflags=\"-I$withval/include\"\n      with_librouteros_ldflags=\"-L$withval/lib\"\n      with_librouteros=\"yes\"\n   fi\n  ],\n  [with_librouteros=\"yes\"]\n)\n\nif test \"x$with_librouteros\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_librouteros_cppflags\"\n\n  AC_CHECK_HEADERS([routeros_api.h],\n    [with_librouteros=\"yes\"],\n    [with_librouteros=\"no (routeros_api.h not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_librouteros\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_librouteros_ldflags\"\n\n  AC_CHECK_LIB([routeros], [ros_interface],\n    [with_librouteros=\"yes\"],\n    [with_librouteros=\"no (symbol 'ros_interface' not found)\"]\n  )\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_librouteros\" = \"xyes\"; then\n  BUILD_WITH_LIBROUTEROS_CPPFLAGS=\"$with_librouteros_cppflags\"\n  BUILD_WITH_LIBROUTEROS_LDFLAGS=\"$with_librouteros_ldflags\"\nfi\n\nAC_SUBST([BUILD_WITH_LIBROUTEROS_CPPFLAGS])\nAC_SUBST([BUILD_WITH_LIBROUTEROS_LDFLAGS])\n# }}}\n\n# --with-librrd {{{\nlibrrd_threadsafe=\"no\"\nlibrrd_rrdc_update=\"no\"\nAC_ARG_WITH([librrd],\n  [AS_HELP_STRING([--with-librrd@<:@=PREFIX@:>@], [Path to rrdtool.])],\n  [\n    if test \"x$withval\" != \"xno\" && test \"x$withval\" != \"xyes\"; then\n      librrd_cflags=\"-I$withval/include\"\n      librrd_ldflags=\"-L$withval/lib\"\n      with_librrd=\"yes\"\n    else\n      with_librrd=\"$withval\"\n    fi\n  ],\n  [with_librrd=\"yes\"]\n)\n\nif test \"x$with_librrd\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $librrd_ldflags\"\n  PKG_CHECK_MODULES([RRD], [librrd >= 1.6.0],\n    [\n      AC_CHECK_LIB([rrd], [rrd_update_r],\n        [librrd_threadsafe=\"yes\"],\n        [:]\n      )\n      AC_CHECK_LIB([rrd], [rrdc_update],\n        [librrd_rrdc_update=\"yes\"],\n        [:]\n      )\n    ],[:]\n  )\n  LDFLAGS=\"$SAVE_LDFLAGS\"\n\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $RRD_CFLAGS $librrd_cflags\"\n\n  AC_CHECK_HEADERS([rrd.h],, [with_librrd=\"no (rrd.h not found)\"])\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_librrd\" = \"xyes\" && test \"x$librrd_threadsafe\" = \"xno\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $librrd_ldflags\"\n\n  AC_CHECK_LIB([rrd_th], [rrd_update_r],\n    [\n      librrd_ldflags=\"$librrd_ldflags -lrrd_th\"\n      librrd_threadsafe=\"yes\"\n      AC_CHECK_LIB([rrd_th], [rrdc_update],\n        [librrd_rrdc_update=\"yes\"],\n        [:],\n      )\n    ],\n    [:]\n  )\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_librrd\" = \"xyes\" && test \"x$librrd_threadsafe\" = \"xno\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $librrd_ldflags\"\n\n  AC_CHECK_LIB([rrd], [rrd_update],\n    [\n      librrd_ldflags=\"$librrd_ldflags -lrrd\"\n      AC_CHECK_LIB([rrd], [rrdc_update],\n        [librrd_rrdc_update=\"yes\"],\n        [:]\n      )\n    ],\n    [with_librrd=\"no (symbol 'rrd_update' not found)\"]\n  )\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_librrd\" = \"xyes\"; then\n  BUILD_WITH_LIBRRD_CFLAGS=\"$RRD_CFLAGS $librrd_cflags\"\n  BUILD_WITH_LIBRRD_LDFLAGS=\"$librrd_ldflags\"\n  BUILD_WITH_LIBRRD_LIBS=\"$RRD_LIBS\"\nfi\n\nif test \"x$librrd_threadsafe\" = \"xyes\"; then\n  AC_DEFINE([HAVE_THREADSAFE_LIBRRD], [1],\n    [Define to 1 if the rrd library is thread-safe]\n  )\nfi\n\nAC_SUBST([BUILD_WITH_LIBRRD_CFLAGS])\nAC_SUBST([BUILD_WITH_LIBRRD_LDFLAGS])\nAC_SUBST([BUILD_WITH_LIBRRD_LIBS])\n# }}}\n\n# --with-libsensors {{{\nAC_ARG_WITH([libsensors],\n  [AS_HELP_STRING([--with-libsensors@<:@=PREFIX@:>@], [Path to lm_sensors.])],\n  [\n    if test \"x$withval\" = \"xno\" || test \"x$withval\" = \"xyes\"; then\n      with_libsensors=\"$withval\"\n    else\n      with_sensors_cppflags=\"-I$withval/include\"\n      with_sensors_ldflags=\"-L$withval/lib\"\n      with_libsensors=\"yes\"\n    fi\n  ],\n  [\n    if test \"x$ac_system\" = \"xLinux\"; then\n      with_libsensors=\"yes\"\n    else\n      with_libsensors=\"no (Linux only library)\"\n    fi\n  ]\n)\n\nif test \"x$with_libsensors\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_sensors_cppflags\"\n\n  AC_CHECK_HEADERS([sensors/sensors.h],\n    [with_libsensors=\"yes\"],\n    [with_libsensors=\"no (sensors/sensors.h not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libsensors\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_sensors_ldflags\"\n\n  AC_CHECK_LIB([sensors], [sensors_init],\n    [with_libsensors=\"yes\"],\n    [with_libsensors=\"no (libsensors not found)\"]\n  )\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_libsensors\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_sensors_cppflags\"\n  AC_PREPROC_IFELSE(\n    [\n      AC_LANG_SOURCE(\n        [[\n          #include <sensors/sensors.h>\n          #if SENSORS_API_VERSION < 0x400\n          #error \"required libsensors version >= 3.0\"\n          #endif\n        ]]\n      )\n    ],\n    [with_libsensors=\"yes\"],\n    [with_libsensors=\"no (sensors library version 3.0.0 or higher is required)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libsensors\" = \"xyes\"; then\n  BUILD_WITH_LIBSENSORS_CPPFLAGS=\"$with_sensors_cppflags\"\n  BUILD_WITH_LIBSENSORS_LDFLAGS=\"$with_sensors_ldflags\"\n  BUILD_WITH_LIBSENSORS_LIBS=\"-lsensors\"\nfi\n\nAC_SUBST([BUILD_WITH_LIBSENSORS_CPPFLAGS])\nAC_SUBST([BUILD_WITH_LIBSENSORS_LDFLAGS])\nAC_SUBST([BUILD_WITH_LIBSENSORS_LIBS])\n\n# }}}\n\n# libsigrok {{{\nAC_SUBST([LIBSIGROK_CFLAGS])\nAC_SUBST([LIBSIGROK_LIBS])\nPKG_CHECK_MODULES([LIBSIGROK], [libsigrok < 0.4],\n  [with_libsigrok=\"yes\"],\n  [with_libsigrok=\"no (pkg-config could not find libsigrok)\"]\n)\n# }}}\n\n# --with-libssl {{{\nwith_libssl_cflags=\"\"\nwith_libssl_ldflags=\"\"\nAC_ARG_WITH([libssl], [AS_HELP_STRING([--with-libssl@<:@=PREFIX@:>@], [Path to libssl.])],\n[\n\tif test \"x$withval\" != \"xno\" && test \"x$withval\" != \"xyes\"; then\n\t\twith_libssl_cppflags=\"-I$withval/include\"\n\t\twith_libssl_ldflags=\"-L$withval/lib\"\n\t\twith_libssl=\"yes\"\n\telse\n\t\twith_libssl=\"$withval\"\n\tfi\n],\n[\n\twith_libssl=\"yes\"\n])\nif test \"x$with_libssl\" = \"xyes\"; then\n\tSAVE_CPPFLAGS=\"$CPPFLAGS\"\n\tCPPFLAGS=\"$CPPFLAGS $with_libssl_cppflags\"\n\n  AC_CHECK_HEADERS([openssl/sha.h openssl/blowfish.h openssl/rand.h],\n    [with_libssl=\"yes\"],\n    [with_libssl=\"no (ssl header not found)\"])\n\n\tCPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\nif test \"x$with_libssl\" = \"xyes\"; then\n\tSAVE_CPPFLAGS=\"$CPPFLAGS\"\n\tSAVE_LDFLAGS=\"$LDFLAGS\"\n\tCPPFLAGS=\"$CPPFLAGS $with_libssl_cppflags\"\n\tLDFLAGS=\"$LDFLAGS $with_libssl_ldflags\"\n\n\tAC_CHECK_LIB([ssl], [OPENSSL_init_ssl], [with_libssl=\"yes\"], [with_libssl=\"no (Symbol 'SSL_library_init' not found)\"])\n\n\tCPPFLAGS=\"$SAVE_CPPFLAGS\"\n\tLDFLAGS=\"$SAVE_LDFLAGS\"\nfi\nif test \"x$with_libssl\" = \"xyes\"; then\n\tBUILD_WITH_LIBSSL_CFLAGS=\"$with_libssl_cflags\"\n\tBUILD_WITH_LIBSSL_LDFLAGS=\"$with_libssl_ldflags\"\n\tBUILD_WITH_LIBSSL_LIBS=\"-lssl -lcrypto\"\n\tAC_SUBST([BUILD_WITH_LIBSSL_CFLAGS])\n\tAC_SUBST([BUILD_WITH_LIBSSL_LDFLAGS])\n\tAC_SUBST([BUILD_WITH_LIBSSL_LIBS])\n\tAC_DEFINE([HAVE_LIBSSL], [1], [Define if libssl is present and usable.])\nfi\nAM_CONDITIONAL(BUILD_WITH_LIBSSL, test \"x$with_libssl\" = \"xyes\")\n# }}}\n\n# --with-libstatgrab {{{\nAC_ARG_WITH([libstatgrab],\n  [AS_HELP_STRING([--with-libstatgrab@<:@=PREFIX@:>@], [Path to libstatgrab.])],\n  [\n    if test \"x$withval\" != \"xno\" && test \"x$withval\" != \"xyes\"; then\n      with_libstatgrab_cflags=\"-I$withval/include\"\n      with_libstatgrab_ldflags=\"-L$withval/lib -lstatgrab\"\n      with_libstatgrab=\"yes\"\n      with_libstatgrab_pkg_config=\"no\"\n    else\n      with_libstatgrab=\"$withval\"\n      with_libstatgrab_pkg_config=\"yes\"\n    fi\n  ],\n  [\n    with_libstatgrab=\"yes\"\n    with_libstatgrab_pkg_config=\"yes\"\n  ])\n\nif test \"x$with_libstatgrab\" = \"xyes\" && test \"x$with_libstatgrab_pkg_config\" = \"xyes\"; then\n  AC_MSG_CHECKING([pkg-config for libstatgrab])\n  temp_result=\"found\"\n  $PKG_CONFIG --exists libstatgrab 2>/dev/null\n  if test \"$?\" != \"0\"; then\n    with_libstatgrab_pkg_config=\"no\"\n    with_libstatgrab=\"no (pkg-config doesn't know libstatgrab)\"\n    temp_result=\"not found\"\n  fi\n  AC_MSG_RESULT([$temp_result])\nfi\n\nif test \"x$with_libstatgrab\" = \"xyes\" && test \"x$with_libstatgrab_pkg_config\" = \"xyes\" && test \"x$with_libstatgrab_cflags\" = \"x\"; then\n  AC_MSG_CHECKING([for libstatgrab CFLAGS])\n  temp_result=\"`$PKG_CONFIG --cflags libstatgrab`\"\n  if test \"$?\" = \"0\"; then\n    with_libstatgrab_cflags=\"$temp_result\"\n  else\n    with_libstatgrab=\"no ($PKG_CONFIG --cflags libstatgrab failed)\"\n    temp_result=\"$PKG_CONFIG --cflags libstatgrab failed\"\n  fi\n  AC_MSG_RESULT([$temp_result])\nfi\n\nif test \"x$with_libstatgrab\" = \"xyes\" && test \"x$with_libstatgrab_pkg_config\" = \"xyes\" && test \"x$with_libstatgrab_ldflags\" = \"x\"; then\n  AC_MSG_CHECKING([for libstatgrab LDFLAGS])\n  temp_result=\"`$PKG_CONFIG --libs libstatgrab`\"\n  if test \"$?\" = \"0\"\n  then\n    with_libstatgrab_ldflags=\"$temp_result\"\n  else\n    with_libstatgrab=\"no ($PKG_CONFIG --libs libstatgrab failed)\"\n    temp_result=\"$PKG_CONFIG --libs libstatgrab failed\"\n  fi\n  AC_MSG_RESULT([$temp_result])\nfi\n\nif test \"x$with_libstatgrab\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libstatgrab_cflags\"\n\n  AC_CHECK_HEADERS([statgrab.h],\n    [with_libstatgrab=\"yes\"],\n    [with_libstatgrab=\"no (statgrab.h not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libstatgrab\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_libstatgrab_ldflags\"\n\n  AC_CHECK_LIB([statgrab], [sg_init],\n    [with_libstatgrab=\"yes\"],\n    [with_libstatgrab=\"no (symbol sg_init not found)\"]\n  )\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_libstatgrab\" = \"xyes\"; then\n  SAVE_CFLAGS=\"$CFLAGS\"\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  SAVE_LIBS=\"$LIBS\"\n\n  CFLAGS=\"$CFLAGS $with_libstatgrab_cflags\"\n  LDFLAGS=\"$LDFLAGS $with_libstatgrab_ldflags\"\n  LIBS=\"-lstatgrab $LIBS\"\n\n  AC_CACHE_CHECK([if libstatgrab >= 0.90],\n    [c_cv_have_libstatgrab_0_90],\n    [\n      AC_LINK_IFELSE(\n        [\n          AC_LANG_PROGRAM(\n            [[\n              #include <stdio.h>\n              #include <statgrab.h>\n            ]],\n            [[\n              if (sg_init()) return 0;\n            ]]\n          )\n        ],\n        [c_cv_have_libstatgrab_0_90=\"no\"],\n        [c_cv_have_libstatgrab_0_90=\"yes\"]\n      )\n    ]\n  )\n\n  CFLAGS=\"$SAVE_CFLAGS\"\n  LDFLAGS=\"$SAVE_LDFLAGS\"\n  LIBS=\"$SAVE_LIBS\"\nfi\n\nAM_CONDITIONAL([BUILD_WITH_LIBSTATGRAB], [test \"x$with_libstatgrab\" = \"xyes\"])\n\nif test \"x$with_libstatgrab\" = \"xyes\"; then\n  AC_DEFINE([HAVE_LIBSTATGRAB], [1],\n    [Define to 1 if you have the 'statgrab' library (-lstatgrab)]\n  )\n\n  if test \"x$c_cv_have_libstatgrab_0_90\" = \"xyes\"; then\n    AC_DEFINE([HAVE_LIBSTATGRAB_0_90], [1],\n      [Define to 1 if libstatgrab version >= 0.90]\n    )\n  fi\n\n  BUILD_WITH_LIBSTATGRAB_CFLAGS=\"$with_libstatgrab_cflags\"\n  BUILD_WITH_LIBSTATGRAB_LDFLAGS=\"$with_libstatgrab_ldflags\"\n\nfi\n\nAC_SUBST([BUILD_WITH_LIBSTATGRAB_CFLAGS])\nAC_SUBST([BUILD_WITH_LIBSTATGRAB_LDFLAGS])\n# }}}\n\n# --with-libtokyotyrant {{{\nAC_ARG_WITH([libtokyotyrant],\n  [AS_HELP_STRING([--with-libtokyotyrant@<:@=PREFIX@:>@], [Path to libtokyotyrant.])],\n  [\n    if test \"x$withval\" = \"xno\" || test \"x$withval\" = \"xyes\"; then\n      with_libtokyotyrant=\"$withval\"\n    else\n      with_libtokyotyrant_cppflags=\"-I$withval/include\"\n      with_libtokyotyrant_ldflags=\"-L$withval/lib\"\n      with_libtokyotyrant_libs=\"-ltokyotyrant\"\n      with_libtokyotyrant=\"yes\"\n    fi\n  ],\n  [with_libtokyotyrant=\"yes\"]\n)\n\nif test \"x$with_libtokyotyrant\" = \"xyes\"; then\n  if $PKG_CONFIG --exists tokyotyrant; then\n    with_libtokyotyrant_cppflags=\"$with_libtokyotyrant_cppflags `$PKG_CONFIG --cflags tokyotyrant`\"\n    with_libtokyotyrant_ldflags=\"$with_libtokyotyrant_ldflags `$PKG_CONFIG --libs-only-L tokyotyrant`\"\n    with_libtokyotyrant_libs=\"$with_libtokyotyrant_libs `$PKG_CONFIG --libs-only-l tokyotyrant`\"\n  fi\nfi\n\nif test \"x$with_libtokyotyrant\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libtokyotyrant_cppflags\"\n\n  AC_CHECK_HEADERS([tcrdb.h],\n    [with_libtokyotyrant=\"yes\"],\n    [with_libtokyotyrant=\"no (tcrdb.h not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libtokyotyrant\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_libtokyotyrant_ldflags\"\n\n  AC_CHECK_LIB([tokyotyrant], [tcrdbrnum],\n    [with_libtokyotyrant=\"yes\"],\n    [with_libtokyotyrant=\"no (symbol tcrdbrnum not found)\"],\n    [$with_libtokyotyrant_libs]\n  )\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_libtokyotyrant\" = \"xyes\"; then\n  BUILD_WITH_LIBTOKYOTYRANT_CPPFLAGS=\"$with_libtokyotyrant_cppflags\"\n  BUILD_WITH_LIBTOKYOTYRANT_LDFLAGS=\"$with_libtokyotyrant_ldflags\"\n  BUILD_WITH_LIBTOKYOTYRANT_LIBS=\"$with_libtokyotyrant_libs\"\nfi\nAC_SUBST([BUILD_WITH_LIBTOKYOTYRANT_CPPFLAGS])\nAC_SUBST([BUILD_WITH_LIBTOKYOTYRANT_LDFLAGS])\nAC_SUBST([BUILD_WITH_LIBTOKYOTYRANT_LIBS])\n# }}}\n\n# --with-libudev {{{\nAC_ARG_WITH([libudev],\n  [AS_HELP_STRING([--with-libudev@<:@=PREFIX@:>@], [Path to libudev.])],\n  [\n    if test \"x$withval\" = \"xno\" || test \"x$withval\" = \"xyes\"; then\n      with_libudev=\"$withval\"\n    else\n      with_libudev_cppflags=\"-I$withval/include\"\n      with_libudev_ldflags=\"-L$withval/lib\"\n      with_libudev=\"yes\"\n    fi\n  ],\n  [\n    if test \"x$ac_system\" = \"xLinux\"; then\n      with_libudev=\"yes\"\n    else\n      with_libudev=\"no (Linux only library)\"\n    fi\n  ]\n)\n\nif test \"x$with_libudev\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libudev_cppflags\"\n\n  AC_CHECK_HEADERS([libudev.h],\n    [with_libudev=\"yes\"],\n    [with_libudev=\"no (libudev.h not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libudev\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_libudev_ldflags\"\n\n  AC_CHECK_LIB([udev], [udev_new],\n    [with_libudev=\"yes\"],\n    [with_libudev=\"no (libudev not found)\"]\n  )\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_libudev\" = \"xyes\"; then\n  BUILD_WITH_LIBUDEV_CPPFLAGS=\"$with_libudev_cppflags\"\n  BUILD_WITH_LIBUDEV_LDFLAGS=\"$with_libudev_ldflags\"\n  BUILD_WITH_LIBUDEV_LIBS=\"-ludev\"\nfi\n\nAC_SUBST([BUILD_WITH_LIBUDEV_CPPFLAGS])\nAC_SUBST([BUILD_WITH_LIBUDEV_LDFLAGS])\nAC_SUBST([BUILD_WITH_LIBUDEV_LIBS])\n\nAM_CONDITIONAL([BUILD_WITH_LIBUDEV], [test \"x$with_libudev\" = \"xyes\"])\n# }}}\n\n# --with-libupsclient {{{\nwith_libupsclient_config=\"\"\nAC_ARG_WITH([libupsclient],\n  [AS_HELP_STRING([--with-libupsclient@<:@=PREFIX@:>@], [Path to the upsclient library.])],\n  [\n    if test \"x$withval\" = \"xno\"; then\n      with_libupsclient=\"no\"\n    else if test \"x$withval\" = \"xyes\"; then\n      with_libupsclient=\"use_pkgconfig\"\n    else\n      if test -f \"$withval\" && test -x \"$withval\"; then\n        with_libupsclient_config=\"$withval\"\n        with_libupsclient=\"use_libupsclient_config\"\n      else if test -x \"$withval/bin/libupsclient-config\"; then\n        with_libupsclient_config=\"$withval/bin/libupsclient-config\"\n        with_libupsclient=\"use_libupsclient_config\"\n      else\n        AC_MSG_NOTICE([Not checking for libupsclient: Manually configured])\n        with_libupsclient_cflags=\"-I$withval/include\"\n        with_libupsclient_libs=\"-L$withval/lib -lupsclient\"\n        with_libupsclient=\"yes\"\n      fi; fi\n    fi; fi\n  ],\n  [with_libupsclient=\"use_pkgconfig\"]\n)\n\n# configure using libupsclient-config\nif test \"x$with_libupsclient\" = \"xuse_libupsclient_config\"; then\n  with_libupsclient_cflags=\"`$with_libupsclient_config --cflags`\"\n  if test $? -ne 0; then\n    with_libupsclient=\"no ($with_libupsclient_config failed)\"\n  fi\n  with_libupsclient_libs=\"`$with_libupsclient_config --libs`\"\n  if test $? -ne 0; then\n    with_libupsclient=\"no ($with_libupsclient_config failed)\"\n  fi\nfi\n\nif test \"x$with_libupsclient\" = \"xuse_libupsclient_config\"; then\n  with_libupsclient=\"yes\"\nfi\n\n# configure using pkg-config\nif test \"x$with_libupsclient\" = \"xuse_pkgconfig\"; then\n  $PKG_CONFIG --exists 'libupsclient' 2>/dev/null\n  if test $? -ne 0; then\n    with_libupsclient=\"no (pkg-config doesn't know libupsclient)\"\n  fi\nfi\n\nif test \"x$with_libupsclient\" = \"xuse_pkgconfig\"; then\n  with_libupsclient_cflags=\"`$PKG_CONFIG --cflags 'libupsclient'`\"\n  if test $? -ne 0; then\n    with_libupsclient=\"no ($PKG_CONFIG failed)\"\n  fi\n\n  with_libupsclient_libs=\"`$PKG_CONFIG --libs 'libupsclient'`\"\n  if test $? -ne 0; then\n    with_libupsclient=\"no ($PKG_CONFIG failed)\"\n  fi\nfi\n\nif test \"x$with_libupsclient\" = \"xuse_pkgconfig\"; then\n  with_libupsclient=\"yes\"\nfi\n\nif test \"x$with_libupsclient\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libupsclient_cflags\"\n\n  AC_CHECK_HEADERS([upsclient.h],\n    [with_libupsclient=\"yes\"],\n    [with_libupsclient=\"no (upsclient.h not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libupsclient\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_libupsclient_libs\"\n\n  AC_CHECK_LIB([upsclient], [upscli_connect],\n    [with_libupsclient=\"yes\"],\n    [with_libupsclient=\"no (symbol upscli_connect not found)\"]\n  )\n\n  AC_CHECK_LIB([upsclient], [upscli_init],\n    [AC_DEFINE([HAVE_UPSCLI_INIT], [1], [Define when upscli_init() (since version 2-7) is available.])]\n  )\n\n  AC_CHECK_LIB([upsclient], [upscli_tryconnect],\n    [AC_DEFINE([HAVE_UPSCLI_TRYCONNECT], [1], [Define when upscli_tryconnect() (since version 2.6.2) is available.])]\n  )\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_libupsclient\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libupsclient_cflags\"\n  someUPSCONN_FOUND=false\n\n  AC_CHECK_TYPES([UPSCONN_t, UPSCONN],\n    [someUPSCONN_FOUND=true],\n    [],\n    [[\n      #include <stdlib.h>\n      #include <stdio.h>\n      #include <time.h>\n      #include <upsclient.h>\n    ]]\n  )\n\n  AS_IF([test x\"$someUPSCONN_FOUND\" = xfalse],\n    [AC_MSG_WARN([Can not find either UPSCONN or UPSCONN_t type definition for upsclient library])\n     with_libupsclient=\"no (required data types for NUT API were not detected)\"]\n  )\n\n  unset someUPSCONN_FOUND\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libupsclient\" = \"xyes\"; then\n  dnl The m4 script logic below is modelled after NUT_FUNC_GETNAMEINFO_ARGTYPES\n  dnl further originating in curl autoconf scripts or beyond. See there for an\n  dnl example of general-case logic to handle matching of numerous possible\n  dnl data types for each argument in supported API variants.\n  dnl Note: techically compiler complains here not about int types themselves,\n  dnl but about pointers to such data. We know \"out of band\" that e.g. NUT\n  dnl change to \"size_t\" happened at once for all arguments in the API, so\n  dnl simplify the handling here and now with that assumption.\n  AC_LANG_PUSH([C])\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  SAVE_CFLAGS=\"$CFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libupsclient_cflags\"\n  LDFLAGS=\"$LDFLAGS $with_libupsclient_libs\"\n  CFLAGS=\"$CFLAGS $with_libupsclient_cflags\"\n  if test \"x$GCC\" = \"xyes\"; then\n    CFLAGS=\"$CFLAGS -Wall -Werror\"\n  fi\n\n  dnl upscli_splitname() *is* there forever (2007 or older)\n  dnl but int types e.g. \"port\" changed in NUT 2.8.0\n  dnl Also this is the UPSCONN_t::port field type:\n  AC_CACHE_CHECK([int type of port argument for NUT upscli_splitname],\n    [collectd_cv_func_upscli_splitname_args], [\n     collectd_cv_func_upscli_splitname_args=\"unknown\"\n     for port_arg in 'uint16_t' 'int' ; do\n        AC_COMPILE_IFELSE([\n            AC_LANG_PROGRAM([\n#include <time.h>\n#include <upsclient.h>\n/* int upscli_splitname(const char *buf, char **upsname, char **hostname, <port_arg> *port); */\n            ],[\nconst char *origname = \"ups@localhost:3493\";\n$port_arg port=0;\nchar *hostname;\nchar *upsname;\nint res = upscli_splitname(origname, &upsname, &hostname, &port);\nreturn(res);\n            ])\n        ],[\n            collectd_cv_func_upscli_splitname_args=\"$port_arg\"\n            break\n        ])\n     done\n    ])\n\n  AS_IF([test x\"$collectd_cv_func_upscli_splitname_args\" = xunknown],\n    [AC_MSG_WARN([Can not find proper port type for upscli_splitname()])\n     with_libupsclient=\"no (required data types for NUT API were not detected)\"],\n    [AC_DEFINE_UNQUOTED(NUT_PORT_TYPE, $collectd_cv_func_upscli_splitname_args,\n        [Define to the integer type for TCP/IP ports used by NUT API we build against])\n    ])\n\n\n  AC_CACHE_CHECK([int type of length/numbering arguments for NUT upscli_list_next],\n    [collectd_cv_func_upscli_list_next_args], [\n     collectd_cv_func_upscli_list_next_args=\"unknown\"\n     for size_arg in 'size_t' 'unsigned int' 'int' ; do\n        AC_COMPILE_IFELSE([\n            AC_LANG_PROGRAM([\n#include <time.h>\n#include <upsclient.h>\n/* int upscli_list_next(UPSCONN_t *ups, <size_arg> numq, const char **query, <size_arg> *numa, char ***answer); */\n\n#if HAVE_UPSCONN_T\ntypedef UPSCONN_t collectd_upsconn_t;\n#elif HAVE_UPSCONN\ntypedef UPSCONN collectd_upsconn_t;\n#else\n#error \"Unable to determine the UPS connection type.\"\n#endif\n            ],[\n$size_arg query_num=0;\n$size_arg answer_num=0;\nconst char * query;\nchar** answer;\ncollectd_upsconn_t ups;\nint res = upscli_list_next(&ups, query_num, &query, &answer_num, &answer);\nreturn(res);\n            ])\n        ],[\n            collectd_cv_func_upscli_list_next_args=\"$size_arg\"\n            break\n        ])\n     done\n    ])\n\n  AS_IF([test x\"$collectd_cv_func_upscli_list_next_args\" = xunknown],\n    [AC_MSG_WARN([Can not find proper type for array sizes and string lengths used by upscli_list_next()])\n     with_libupsclient=\"no (required data types for NUT API were not detected)\"],\n    [AC_DEFINE_UNQUOTED(NUT_SIZE_TYPE, $collectd_cv_func_upscli_list_next_args,\n        [Define to the integer type for array sizes and string lengths used by NUT API we build against])\n    ])\n\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\n  LDFLAGS=\"$SAVE_LDFLAGS\"\n  CFLAGS=\"$SAVE_CFLAGS\"\n  AC_LANG_POP([C])\nfi\n\nif test \"x$with_libupsclient\" = \"xyes\"; then\n  BUILD_WITH_LIBUPSCLIENT_CFLAGS=\"$with_libupsclient_cflags\"\n  BUILD_WITH_LIBUPSCLIENT_LIBS=\"$with_libupsclient_libs\"\nfi\n\nAC_SUBST([BUILD_WITH_LIBUPSCLIENT_CFLAGS])\nAC_SUBST([BUILD_WITH_LIBUPSCLIENT_LIBS])\n# }}}\n\n# --with-libxenctrl {{{\nAC_ARG_WITH([libxenctrl],\n  [AS_HELP_STRING([--with-libxenctrl@<:@=PREFIX@:>@], [Path to libxenctrl.])],\n  [\n    if test \"x$withval\" != \"xno\" && test \"x$withval\" != \"xyes\"; then\n      with_libxenctrl_cppflags=\"-I$withval/include\"\n      with_libxenctrl_ldflags=\"-L$withval/lib\"\n      with_libxenctrl=\"yes\"\n    else\n      with_libxenctrl=\"$withval\"\n    fi\n  ],\n  [with_libxenctrl=\"yes\"]\n)\n\nif test \"x$with_libxenctrl\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libxenctrl_cppflags\"\n\n  AC_CHECK_HEADERS([xenctrl.h],\n    [with_libxenctrl=\"yes\"],\n    [with_libxenctrl=\"no (xenctrl.h not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libxenctrl\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_libxenctrl_ldflags\"\n\n  #Xen versions older than 3.4 has no xc_getcpuinfo()\n  AC_CHECK_LIB([xenctrl], [xc_getcpuinfo],\n    [with_libxenctrl=\"yes\"],\n    [with_libxenctrl=\"no (symbol 'xc_getcpuinfo' not found)\"]\n  )\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nLIBXENCTL_CPPFLAGS=\"$with_libxenctl_cppflags\"\nLIBXENCTL_LDFLAGS=\"$with_libxenctl_ldflags\"\nAC_SUBST([LIBXENCTL_CPPFLAGS])\nAC_SUBST([LIBXENCTL_LDFLAGS])\n# }}}\n\n# --with-libxmms {{{\nwith_xmms_config=\"xmms-config\"\nAC_ARG_WITH([libxmms],\n  [AS_HELP_STRING([--with-libxmms@<:@=PREFIX@:>@], [Path to libxmms.])],\n  [\n    if test \"x$withval\" = \"xno\" || test \"x$withval\" = \"xyes\"; then\n      with_libxmms=\"$withval\"\n    else\n      if test -f \"$withval\" && test -x \"$withval\"; then\n        with_xmms_config=\"$withval\"\n      else if test -x \"$withval/bin/xmms-config\"; then\n        with_xmms_config=\"$withval/bin/xmms-config\"\n      fi; fi\n      with_libxmms=\"yes\"\n    fi\n  ],\n  [with_libxmms=\"yes\"]\n)\n\nif test \"x$with_libxmms\" = \"xyes\"; then\n  with_xmms_cflags=`$with_xmms_config --cflags 2>/dev/null`\n  if test $? -ne 0; then\n    with_libxmms=\"no\"\n  fi\nfi\n\nif test \"x$with_libxmms\" = \"xyes\"; then\n  with_xmms_libs=`$with_xmms_config --libs 2>/dev/null`\n  if test $? -ne 0; then\n    with_libxmms=\"no\"\n  fi\nfi\n\nif test \"x$with_libxmms\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$with_xmms_cflags\"\n\n  AC_CHECK_HEADER([xmmsctrl.h],\n    [with_libxmms=\"yes\"],\n    [with_libxmms=\"no\"],\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libxmms\" = \"xyes\"; then\n  SAVE_LIBS=\"$LIBS\"\n  LIBS=\"$with_xmms_libs\"\n\n  AC_CHECK_LIB([xmms], [xmms_remote_get_info],\n    [with_libxmss=\"yes\"],\n    [with_libxmms=\"no\"],\n    [$with_xmms_libs]\n\n  )\n\n  LIBS=\"$SAVE_LIBS\"\nfi\n\nBUILD_WITH_LIBXMMS_CFLAGS=\"$with_xmms_cflags\"\nBUILD_WITH_LIBXMMS_LIBS=\"$with_xmms_libs\"\n\nAC_SUBST([BUILD_WITH_LIBXMMS_CFLAGS])\nAC_SUBST([BUILD_WITH_LIBXMMS_LIBS])\n# }}}\n\n# --with-libyajl {{{\nAC_ARG_WITH([libyajl],\n  [AS_HELP_STRING([--with-libyajl@<:@=PREFIX@:>@], [Path to libyajl.])],\n  [\n    if test \"x$withval\" != \"xno\" && test \"x$withval\" != \"xyes\"; then\n      with_libyajl_cppflags=\"-I$withval/include\"\n      with_libyajl_ldflags=\"-L$withval/lib\"\n      with_libyajl=\"yes\"\n    else\n      with_libyajl=\"$withval\"\n    fi\n  ],\n  [with_libyajl=\"yes\"]\n)\n\nif test \"x$with_libyajl\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libyajl_cppflags\"\n\n  AC_CHECK_HEADERS([yajl/yajl_parse.h],\n    [with_libyajl=\"yes\"],\n    [with_libyajl=\"no (yajl/yajl_parse.h not found)\"]\n  )\n\n  AC_CHECK_HEADERS([yajl/yajl_tree.h],\n    [with_libyajl2=\"yes\"],\n    [with_libyajl2=\"no (yajl/yajl_tree.h not found)\"]\n  )\n\n  AC_CHECK_HEADERS([yajl/yajl_version.h])\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libyajl\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_libyajl_ldflags\"\n\n  AC_CHECK_LIB([yajl], [yajl_alloc],\n    [with_libyajl=\"yes\"],\n    [with_libyajl=\"no (Symbol 'yajl_alloc' not found)\"]\n  )\n\n  AC_CHECK_LIB([yajl], [yajl_tree_parse],\n    [with_libyajl2=\"yes\"],\n    [with_libyajl2=\"no (Symbol 'yajl_tree_parse' not found)\"]\n  )\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_libyajl\" = \"xyes\"; then\n  BUILD_WITH_LIBYAJL_CPPFLAGS=\"$with_libyajl_cppflags\"\n  BUILD_WITH_LIBYAJL_LDFLAGS=\"$with_libyajl_ldflags\"\n  BUILD_WITH_LIBYAJL_LIBS=\"-lyajl\"\n  AC_DEFINE([HAVE_LIBYAJL], [1], [Define if libyajl is present and usable.])\nfi\n\nAC_SUBST([BUILD_WITH_LIBYAJL_CPPFLAGS])\nAC_SUBST([BUILD_WITH_LIBYAJL_LDFLAGS])\nAC_SUBST([BUILD_WITH_LIBYAJL_LIBS])\n\nAM_CONDITIONAL([BUILD_WITH_LIBYAJL], [test \"x$with_libyajl\" = \"xyes\"])\nAM_CONDITIONAL([BUILD_WITH_LIBYAJL2], [test \"x$with_libyajl$with_libyajl2\" = \"xyesyes\"])\n# }}}\n\n# --with-mic {{{\nwith_mic_cppflags=\"-I/opt/intel/mic/sysmgmt/sdk/include\"\nwith_mic_ldflags=\"-L/opt/intel/mic/sysmgmt/sdk/lib/Linux\"\nwith_mic_libs=\"-lMicAccessSDK -scif\"\nAC_ARG_WITH([mic],\n  [AS_HELP_STRING([--with-mic@<:@=PREFIX@:>@], [Path to Intel MIC Access API.])],\n  [\n    if test \"x$withval\" = \"xno\" || test \"x$withval\" = \"xyes\"; then\n      with_mic=\"$withval\"\n    else if test -d \"$with_mic/lib\"; then\n      with_mic_cppflags=\"-I$withval/include\"\n      with_mic_ldflags=\"-L$withval/lib/Linux\"\n      with_mic=\"yes\"\n    fi; fi\n  ],\n  [with_mic=\"yes\"]\n)\n\nif test \"x$with_mic\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_mic_cppflags\"\n\n  AC_CHECK_HEADERS([MicAccessApi.h],\n    [with_mic=\"yes\"],\n    [with_mic=\"no (MicAccessApi not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_mic\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_mic_ldflags\"\n\n  AC_CHECK_LIB([MicAccessSDK], [MicInitAPI],\n    [with_mic=\"yes\"],\n    [with_mic=\"no (symbol MicInitAPI not found)\"],\n    [$PTHREAD_LIBS -lscif]\n  )\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_mic\" = \"xyes\"; then\n  BUILD_WITH_MIC_CPPFLAGS=\"$with_mic_cppflags\"\n  BUILD_WITH_MIC_LDFLAGS=\"$with_mic_ldflags\"\n  BUILD_WITH_MIC_LIBS=\"$with_mic_libs\"\nfi\nAC_SUBST([BUILD_WITH_MIC_CPPFLAGS])\nAC_SUBST([BUILD_WITH_MIC_LDFLAGS])\nAC_SUBST([BUILD_WITH_MIC_LIBS])\n#}}}\n\n# --with-libvarnish {{{\nAC_ARG_WITH([libvarnish],\n  [AS_HELP_STRING([--with-libvarnish@<:@=PREFIX@:>@], [Path to libvarnish.])],\n  [\n    if test \"x$withval\" = \"xno\"; then\n      with_libvarnish=\"no\"\n    else if test \"x$withval\" = \"xyes\"; then\n      with_libvarnish=\"use_pkgconfig\"\n    else if test -d \"$with_libvarnish/lib\"; then\n      with_libvarnish_cflags=\"-I$withval/include\"\n      with_libvarnish_libs=\"-L$withval/lib -lvarnishapi\"\n      with_libvarnish=\"yes\"\n    fi; fi; fi\n  ],\n  [with_libvarnish=\"use_pkgconfig\"]\n)\n\n# configure using pkg-config\nif test \"x$with_libvarnish\" = \"xuse_pkgconfig\"; then\n  $PKG_CONFIG --exists 'varnishapi' 2>/dev/null\n  if test $? -ne 0; then\n    with_libvarnish=\"no (pkg-config doesn't know varnishapi)\"\n  fi\nfi\n\nif test \"x$with_libvarnish\" = \"xuse_pkgconfig\"; then\n  with_libvarnish_cflags=\"`$PKG_CONFIG --cflags 'varnishapi'`\"\n  if test $? -ne 0; then\n    with_libvarnish=\"no ($PKG_CONFIG failed)\"\n  fi\n\n  with_libvarnish_libs=\"`$PKG_CONFIG --libs 'varnishapi'`\"\n  if test $? -ne 0; then\n    with_libvarnish=\"no ($PKG_CONFIG failed)\"\n  fi\nfi\nif test \"x$with_libvarnish\" = \"xuse_pkgconfig\"; then\n  with_libvarnish=\"yes\"\nfi\n\nif test \"x$with_libvarnish\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libvarnish_cflags\"\n\n  $PKG_CONFIG --atleast-version=6 'varnishapi' 2>/dev/null\n  if test $? -eq 0; then\n    AC_DEFINE([HAVE_VARNISH_V6], [1], [Varnish 6 API support])\n  else\n    $PKG_CONFIG --atleast-version=5.2 'varnishapi' 2>/dev/null\n    if test $? -eq 0; then\n      AC_DEFINE([HAVE_VARNISH_V5], [1], [Varnish 5 API support])\n    else\n      AC_CHECK_HEADERS([vapi/vsc.h],\n        [AC_DEFINE([HAVE_VARNISH_V4], [1], [Varnish 4 API support])],\n        [\n          AC_CHECK_HEADERS([vsc.h],\n            [AC_DEFINE([HAVE_VARNISH_V3], [1], [Varnish 3 API support]) ],\n            [\n              AC_CHECK_HEADERS([varnishapi.h],\n                [AC_DEFINE([HAVE_VARNISH_V2], [1], [Varnish 2 API support])],\n                [with_libvarnish=\"no (found none of the varnish header files)\"]\n              )\n            ]\n          )\n        ]\n      )\n    fi\n  fi\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libvarnish\" = \"xyes\"; then\n  BUILD_WITH_LIBVARNISH_CFLAGS=\"$with_libvarnish_cflags\"\n  BUILD_WITH_LIBVARNISH_LIBS=\"$with_libvarnish_libs\"\nfi\n\nAC_SUBST([BUILD_WITH_LIBVARNISH_CFLAGS])\nAC_SUBST([BUILD_WITH_LIBVARNISH_LIBS])\n# }}}\n\n# --with-libxml2 {{{\nAC_ARG_WITH(libxml2,\n  [AS_HELP_STRING([--with-libxml2@<:@=PREFIX@:>@], [Path to libxml2.])],\n  [\n    if test \"x$withval\" = \"xno\"; then\n      with_libxml2=\"no\"\n    else if test \"x$withval\" = \"xyes\"; then\n      $PKG_CONFIG --exists 'libxml-2.0' 2>/dev/null\n      if test $? -eq 0; then\n        with_libxml2=\"yes\"\n        with_libxml2_cflags=\"`$PKG_CONFIG --cflags libxml-2.0`\"\n        with_libxml2_ldflags=\"`$PKG_CONFIG --libs libxml-2.0`\"\n      else\n        with_libxml2=\"no (pkg-config doesn't know libxml-2.0)\"\n      fi\n    else\n      with_libxml2=\"yes\"\n      with_libxml2_cflags=\"-I$withval/include\"\n      with_libxml2_ldflags=\"-L$withval/lib\"\n    fi; fi\n  ],\n  dnl  if no argument --with-libxml2 was passed, find the library locations\n  dnl  with pkg-config just like above, when --with-libxml2=yes.\n  [\n    with_libxml2=\"yes\"\n    $PKG_CONFIG --exists 'libxml-2.0' 2>/dev/null\n    if test $? -eq 0; then\n      with_libxml2=\"yes\"\n      with_libxml2_cflags=\"`$PKG_CONFIG --cflags libxml-2.0`\"\n      with_libxml2_ldflags=\"`$PKG_CONFIG --libs libxml-2.0`\"\n    else\n      with_libxml2=\"no (pkg-config doesn't know libxml-2.0)\"\n    fi\n  ]\n)\n\nif test \"x$with_libxml2\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libxml2_cflags\"\n\n  AC_CHECK_HEADERS([libxml/parser.h],\n    [with_libxml2=\"yes\"],\n    [with_libxml2=\"no (libxml/parser.h not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libxml2\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_libxml2_ldflags\"\n\n  AC_CHECK_LIB([xml2], [xmlXPathEval],\n    [with_libxml2=\"yes\"],\n    [with_libxml2=\"no (symbol xmlXPathEval not found)\"]\n  )\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_libxml2\" = \"xyes\"; then\n  BUILD_WITH_LIBXML2_CFLAGS=\"$with_libxml2_cflags\"\n  BUILD_WITH_LIBXML2_LIBS=\"$with_libxml2_ldflags\"\nfi\n\nAC_SUBST([BUILD_WITH_LIBXML2_CFLAGS])\nAC_SUBST([BUILD_WITH_LIBXML2_LIBS])\n# }}}\n\n# pkg-config --exists libvirt {{{\n$PKG_CONFIG --exists libvirt 2>/dev/null\nif test $? = 0; then\n  with_libvirt=\"yes\"\nelse\n  with_libvirt=\"no (pkg-config doesn't know libvirt)\"\nfi\n\nif test \"x$with_libvirt\" = \"xyes\"; then\n  with_libvirt_cflags=\"`$PKG_CONFIG --cflags libvirt`\"\n  if test $? -ne 0; then\n    with_libvirt=\"no (pkg-config --cflags failed)\"\n  fi\n\n  with_libvirt_ldflags=\"`$PKG_CONFIG --libs libvirt`\"\n  if test $? -ne 0; then\n    with_libvirt=\"no (pkg-config --cflags failed)\"\n  fi\nfi\n\nif test \"x$with_libvirt\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libvirt_cflags\"\n\n  AC_CHECK_HEADERS([libvirt/libvirt.h],\n    [with_libvirt=\"yes\"],\n    [with_libvirt=\"no (libvirt/libvirt.h not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libvirt\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_libvirt_ldflags\"\n\n  AC_CHECK_LIB([virt], [virDomainBlockStats],\n    [with_libvirt=\"yes\"],\n    [with_libvirt=\"no (symbol virDomainBlockStats not found)\"]\n  )\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_libvirt\" = \"xyes\"; then\n  BUILD_WITH_LIBVIRT_CFLAGS=\"$with_libvirt_cflags\"\n  BUILD_WITH_LIBVIRT_LIBS=\"$with_libvirt_ldflags\"\nfi\n\nAC_SUBST([BUILD_WITH_LIBVIRT_CFLAGS])\nAC_SUBST([BUILD_WITH_LIBVIRT_LIBS])\n# }}}\n\n# $PKG_CONFIG --exists OpenIPMIpthread {{{\nwith_libopenipmipthread=\"yes\"\nAC_MSG_CHECKING([for libOpenIPMIpthread])\n$PKG_CONFIG --exists OpenIPMIpthread 2>/dev/null\nif test $? -ne 0; then\n  with_libopenipmipthread=\"no (pkg-config doesn't know OpenIPMIpthread)\"\nfi\nAC_MSG_RESULT([$with_libopenipmipthread])\n\nif test \"x$with_libopenipmipthread\" = \"xyes\"; then\n  AC_MSG_CHECKING([for libOpenIPMIpthread CFLAGS])\n  temp_result=\"`$PKG_CONFIG --cflags OpenIPMIpthread`\"\n  if test $? -eq 0; then\n    with_libopenipmipthread_cflags=\"$temp_result\"\n  else\n    with_libopenipmipthread=\"no ($PKG_CONFIG --cflags OpenIPMIpthread failed)\"\n    temp_result=\"$PKG_CONFIG --cflags OpenIPMIpthread failed\"\n  fi\n  AC_MSG_RESULT([$temp_result])\nfi\n\nif test \"x$with_libopenipmipthread\" = \"xyes\"; then\n  AC_MSG_CHECKING([for libOpenIPMIpthread LDFLAGS])\n  temp_result=\"`$PKG_CONFIG --libs OpenIPMIpthread`\"\n  if test $? -eq 0; then\n    with_libopenipmipthread_ldflags=\"$temp_result\"\n  else\n    with_libopenipmipthread=\"no ($PKG_CONFIG --libs OpenIPMIpthread failed)\"\n    temp_result=\"$PKG_CONFIG --libs OpenIPMIpthread failed\"\n  fi\n  AC_MSG_RESULT([$temp_result])\nfi\n\nif test \"x$with_libopenipmipthread\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libopenipmipthread_cflags\"\n\n  AC_CHECK_HEADERS([OpenIPMI/ipmi_smi.h],\n    [with_libopenipmipthread=\"yes\"],\n    [with_libopenipmipthread=\"no (OpenIPMI/ipmi_smi.h not found)\"],\n    [[\n      #include <OpenIPMI/ipmiif.h>\n      #include <OpenIPMI/ipmi_err.h>\n      #include <OpenIPMI/ipmi_posix.h>\n      #include <OpenIPMI/ipmi_conn.h>\n    ]]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libopenipmipthread\" = \"xyes\"; then\n  BUILD_WITH_OPENIPMI_CFLAGS=\"$with_libopenipmipthread_cflags\"\n  BUILD_WITH_OPENIPMI_LIBS=\"$with_libopenipmipthread_ldflags\"\nfi\n\nAC_SUBST([BUILD_WITH_OPENIPMI_CFLAGS])\nAC_SUBST([BUILD_WITH_OPENIPMI_LIBS])\n# }}}\n\n# --with-libatasmart {{{\nAC_ARG_WITH([libatasmart],\n  [AS_HELP_STRING([--with-libatasmart@<:@=PREFIX@:>@], [Path to libatasmart.])],\n  [\n    if test \"x$withval\" != \"xno\" && test \"x$withval\" != \"xyes\"; then\n      with_libatasmart_cppflags=\"-I$withval/include\"\n      with_libatasmart_ldflags=\"-L$withval/lib\"\n      with_libatasmart=\"yes\"\n    else\n      with_libatasmart=\"$withval\"\n    fi\n  ],\n  [\n    if test \"x$ac_system\" = \"xLinux\"; then\n      with_libatasmart=\"yes\"\n    else\n      with_libatasmart=\"no (Linux only library)\"\n    fi\n  ]\n)\n\nif test \"x$with_libatasmart\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libatasmart_cppflags\"\n\n  AC_CHECK_HEADERS([atasmart.h],\n    [with_libatasmart=\"yes\"],\n    [with_libatasmart=\"no (atasmart.h not found)\"])\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libatasmart\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_libatasmart_ldflags\"\n\n  AC_CHECK_LIB([atasmart], [sk_disk_open],\n    [with_libatasmart=\"yes\"],\n    [with_libatasmart=\"no (Symbol 'sk_disk_open' not found)\"]\n  )\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_libatasmart\" = \"xyes\"; then\n  BUILD_WITH_LIBATASMART_CPPFLAGS=\"$with_libatasmart_cppflags\"\n  BUILD_WITH_LIBATASMART_LDFLAGS=\"$with_libatasmart_ldflags\"\n  BUILD_WITH_LIBATASMART_LIBS=\"-latasmart\"\nfi\n\nAC_SUBST([BUILD_WITH_LIBATASMART_CPPFLAGS])\nAC_SUBST([BUILD_WITH_LIBATASMART_LDFLAGS])\nAC_SUBST([BUILD_WITH_LIBATASMART_LIBS])\n# }}}\n\nPKG_CHECK_MODULES([LIBNOTIFY], [libnotify],\n  [with_libnotify=\"yes\"],\n  [with_libnotify=\"no (pkg-config doesn't know libnotify)\"]\n)\n\nPKG_CHECK_MODULES([LIBRIEMANN_CLIENT], [riemann-client >= 1.6.0],\n [with_libriemann_client=\"yes\"],\n [with_libriemann_client=\"no (pkg-config doesn't know libriemann-client)\"]\n)\n\n# Check for enabled/disabled features\n#\n\n# AC_COLLECTD(name, enable/disable, info-text, feature/module)\n# ------------------------------------------------------------\ndnl\nm4_define([my_toupper],[m4_translit([$1], m4_defn([m4_cr_letters]), m4_defn([m4_cr_LETTERS]))])\ndnl\nAC_DEFUN(\n  [AC_COLLECTD],\n  [\n  m4_if([$1], [], [AC_FATAL([AC_COLLECTD([$1], [$2], [$3], [$4]): 1st argument must not be empty])])dnl\n  m4_if(\n    [$2],\n    [enable],\n    [dnl\n    m4_define([EnDis],[disabled])dnl\n    m4_define([YesNo],[no])dnl\n    ],dnl\n    [m4_if(\n      [$2],\n      [disable],\n      [dnl\n      m4_define([EnDis],[enabled])dnl\n      m4_define([YesNo],[yes])dnl\n      ],\n      [dnl\n      AC_FATAL([AC_COLLECTD([$1], [$2], [$3], [$4]): 2nd argument must be either enable or disable])dnl\n      ]dnl\n    )]dnl\n  )dnl\n  m4_if([$3], [feature], [],\n    [m4_if(\n      [$3], [module], [],\n      [dnl\n      AC_FATAL([AC_COLLECTD([$1], [$2], [$3], [$4]): 3rd argument must be either feature or disable])dnl\n      ]dnl\n    )]dnl\n  )dnl\n  AC_ARG_ENABLE(\n    [$1],\n    AS_HELP_STRING([--$2-$1], [$2 $4 (EnDis by def)]),\n    [],\n    enable_$1='[YesNo]'dnl\n  )# AC_ARG_ENABLE\n  if test \"x$enable_$1\" = \"xno\"; then\n    collectd_$1=0\n  else\n    if test \"x$enable_$1\" = \"xyes\"; then\n      collectd_$1=1\n    else\n      AC_MSG_NOTICE([please specify either --enable-$1 or --disable-$1; enabling $1.])\n      collectd_$1=1\n      enable_$1='yes'\n    fi\n  fi\n  AC_DEFINE_UNQUOTED([COLLECT_]my_toupper([$1]), [$collectd_$1], [whether or not to enable $3 $4])\n  AM_CONDITIONAL([BUILD_]my_toupper([$3])[_]my_toupper([$1]), [test \"x$enable_$1\" = \"xyes\"])dnl\n  ]dnl\n)# AC_COLLECTD(name, enable/disable, info-text, feature/module)\n\n# AC_PLUGIN(name, default, info)\n# ------------------------------------------------------------\ndnl\nAC_DEFUN(\n  [AC_PLUGIN],\n  [\n    enable_plugin=\"no\"\n    force=\"no\"\n    AC_ARG_ENABLE([$1],\n      [AS_HELP_STRING([--enable-$1],[$3])],\n      [\n        if test \"x$enableval\" = \"xyes\"; then\n          enable_plugin=\"yes\"\n        else if test \"x$enableval\" = \"xforce\"; then\n          enable_plugin=\"yes\"\n          force=\"yes\"\n        else\n          enable_plugin=\"no (disabled on command line)\"\n        fi; fi\n      ],\n      [\n        if test \"x$enable_all_plugins\" = \"xauto\"; then\n          if test \"x$2\" = \"xyes\"; then\n            enable_plugin=\"yes\"\n          else\n            enable_plugin=\"$2\"\n          fi\n        else\n          enable_plugin=\"$enable_all_plugins\"\n        fi\n      ]\n    )\n    if test \"x$enable_plugin\" = \"xyes\"; then\n      if test \"x$2\" = \"xyes\" || test \"x$force\" = \"xyes\"; then\n        AC_DEFINE([HAVE_PLUGIN_]my_toupper([$1]), 1, [Define to 1 if the $1 plugin is enabled.])\n        if test \"x$2\" != \"xyes\"; then\n          dependency_warning=\"yes\"\n        fi\n      else # User passed \"yes\" but dependency checking yielded \"no\" => Dependency problem.\n        dependency_error=\"yes\"\n        enable_plugin=\"$2 (dependency error)\"\n      fi\n    fi\n    AM_CONDITIONAL([BUILD_PLUGIN_]my_toupper([$1]), [test \"x$enable_plugin\" = \"xyes\"])\n    enable_$1=\"$enable_plugin\"\n  ]\n)# AC_PLUGIN(name, default, info)\n\n# --with-libslurm {{{\nAC_ARG_WITH([libslurm],\n  [AS_HELP_STRING([--with-libslurm@<:@=PREFIX@:>@], [Path to the libslurm library.])],\n  [\n    if test \"x$withval\" = \"xno\"; then\n      with_libslurm=\"no\"\n    else if test \"x$withval\" = \"xyes\"; then\n      with_libslurm=\"use_pkgconfig\"\n    else if test -d \"$with_libslurm/lib\"; then\n      AC_MSG_NOTICE([Not checking for libslurm: Manually configured])\n      with_libslurm_cflags=\"-I$withval/include\"\n      with_libslurm_libs=\"-L$withval/lib -llibslurm\"\n      with_libslurm=\"yes\"\n    fi; fi; fi\n  ],\n  [with_libslurm=\"use_pkgconfig\"]\n)\n\n# configure using pkg-config\nif test \"x$with_libslurm\" = \"xuse_pkgconfig\"; then\n  AC_MSG_NOTICE([Checking for libslurm using $PKG_CONFIG])\n  $PKG_CONFIG --exists 'slurm' 2>/dev/null\n  if test $? -ne 0; then\n    with_libslurm=\"no (pkg-config doesn't know libslurm)\"\n  fi\nfi\n\nif test \"x$with_libslurm\" = \"xuse_pkgconfig\"; then\n  with_libslurm_cflags=\"`$PKG_CONFIG --cflags 'slurm'`\"\n  if test $? -ne 0; then\n    with_libslurm=\"no ($PKG_CONFIG failed)\"\n  fi\n\n  with_libslurm_libs=\"`$PKG_CONFIG --libs 'slurm'`\"\n  if test $? -ne 0; then\n    with_libslurm=\"no ($PKG_CONFIG failed)\"\n  fi\nfi\n\nif test \"x$with_libslurm\" = \"xuse_pkgconfig\"; then\n  with_libslurm=\"yes\"\nfi\n\nif test \"x$with_libslurm\" = \"xyes\"; then\n  SAVE_CPPFLAGS=\"$CPPFLAGS\"\n  CPPFLAGS=\"$CPPFLAGS $with_libslurm_cflags\"\n\n  AC_CHECK_HEADERS([slurm/slurm.h],\n    [with_libslurm=\"yes\"],\n    [with_libslurm=\"no (slurm/slurm.h not found)\"]\n  )\n\n  CPPFLAGS=\"$SAVE_CPPFLAGS\"\nfi\n\nif test \"x$with_libslurm\" = \"xyes\"; then\n  SAVE_LDFLAGS=\"$LDFLAGS\"\n  LDFLAGS=\"$LDFLAGS $with_libslurm_libs\"\n\n  AC_CHECK_LIB([slurm], [slurm_load_jobs],\n    [with_libslurm=\"yes\"],\n    [with_libslurm=\"no (symbol slurm_load_jobs not found)\"]\n  )\n\n  LDFLAGS=\"$SAVE_LDFLAGS\"\nfi\n\nif test \"x$with_libslurm\" = \"xyes\"; then\n  BUILD_WITH_LIBSLURM_CFLAGS=\"$with_libslurm_cflags\"\n  BUILD_WITH_LIBSLURM_LIBS=\"$with_libslurm_libs\"\nfi\n\nAC_SUBST([BUILD_WITH_LIBSLURM_CFLAGS])\nAC_SUBST([BUILD_WITH_LIBSLURM_LIBS])\n# }}}\n\n\nm4_divert_once([HELP_ENABLE], [\ncollectd features:])\n# FIXME: Remove these calls to `AC_COLLECTD' and then remove that macro.\nAC_COLLECTD([debug],     [enable],  [feature], [debugging])\nAC_COLLECTD([daemon],    [disable], [feature], [daemon mode])\nAC_COLLECTD([getifaddrs],[enable],  [feature], [getifaddrs under Linux])\nAC_COLLECTD([werror],    [disable], [feature], [building with -Werror])\n\ndependency_warning=\"no\"\ndependency_error=\"no\"\n\nplugin_ascent=\"no\"\nplugin_barometer=\"no\"\nplugin_battery=\"no\"\nplugin_bind=\"no\"\nplugin_buddyinfo=\"no\"\nplugin_capabilities=\"no\"\nplugin_ceph=\"no\"\nplugin_cgroups=\"no\"\nplugin_connectivity=\"no\"\nplugin_conntrack=\"no\"\nplugin_contextswitch=\"no\"\nplugin_cpu=\"no\"\nplugin_cpufreq=\"no\"\nplugin_cpusleep=\"no\"\nplugin_curl_json=\"no\"\nplugin_curl_xml=\"no\"\nplugin_df=\"no\"\nplugin_disk=\"no\"\nplugin_drbd=\"no\"\nplugin_dpdkevents=\"no\"\nplugin_dpdkstat=\"no\"\nplugin_dpdk_telemetry=\"no\"\nplugin_entropy=\"no\"\nplugin_epics=\"no\"\nplugin_ethstat=\"no\"\nplugin_fhcount=\"no\"\nplugin_fscache=\"no\"\nplugin_gps=\"no\"\nplugin_gpu_nvidia=\"no\"\nplugin_grpc=\"no\"\nplugin_hugepages=\"no\"\nplugin_infiniband=\"no\"\nplugin_intel_pmu=\"no\"\nplugin_intel_rdt=\"no\"\nplugin_interface=\"no\"\nplugin_ipc=\"no\"\nplugin_ipmi=\"no\"\nplugin_ipstats=\"no\"\nplugin_ipvs=\"no\"\nplugin_irq=\"no\"\nplugin_load=\"no\"\nplugin_log_logstash=\"no\"\nplugin_mcelog=\"no\"\nplugin_mdevents=\"no\"\nplugin_memory=\"no\"\nplugin_mmc=\"no\"\nplugin_multimeter=\"no\"\nplugin_netstat_udp=\"no\"\nplugin_nfs=\"no\"\nplugin_numa=\"no\"\nplugin_ovs_events=\"no\"\nplugin_ovs_stats=\"no\"\nplugin_pcie_errors=\"no\"\nplugin_perl=\"no\"\nplugin_pinba=\"no\"\nplugin_processes=\"no\"\nplugin_procevent=\"no\"\nplugin_protocols=\"no\"\nplugin_python=\"no\"\nplugin_ras=\"no\"\nplugin_serial=\"no\"\nplugin_smart=\"no\"\nplugin_swap=\"no\"\nplugin_synproxy=\"no\"\nplugin_sysevent=\"no\"\nplugin_tape=\"no\"\nplugin_tcpconns=\"no\"\nplugin_ted=\"no\"\nplugin_thermal=\"no\"\nplugin_turbostat=\"no\"\nplugin_ubi=\"no\"\nplugin_uptime=\"no\"\nplugin_users=\"no\"\nplugin_virt=\"no\"\nplugin_vmem=\"no\"\nplugin_vserver=\"no\"\nplugin_wireless=\"no\"\nplugin_write_prometheus=\"no\"\nplugin_write_stackdriver=\"no\"\nplugin_xencpu=\"no\"\nplugin_zfs_arc=\"no\"\nplugin_zone=\"no\"\nplugin_zookeeper=\"no\"\n\n# Linux\nif test \"x$ac_system\" = \"xLinux\"; then\n  plugin_battery=\"yes\"\n  plugin_buddyinfo=\"yes\"\n  plugin_cgroups=\"yes\"\n  plugin_conntrack=\"yes\"\n  plugin_contextswitch=\"yes\"\n  plugin_cpu=\"yes\"\n  plugin_cpufreq=\"yes\"\n  plugin_disk=\"yes\"\n  plugin_drbd=\"yes\"\n  plugin_entropy=\"yes\"\n  plugin_fhcount=\"yes\"\n  plugin_fscache=\"yes\"\n  plugin_hugepages=\"yes\"\n  plugin_infiniband=\"yes\"\n  plugin_interface=\"yes\"\n  plugin_ipc=\"yes\"\n  plugin_irq=\"yes\"\n  plugin_load=\"yes\"\n  plugin_mcelog=\"yes\"\n  plugin_mdevents=\"yes\"\n  plugin_memory=\"yes\"\n  plugin_nfs=\"yes\"\n  plugin_numa=\"yes\"\n  plugin_processes=\"yes\"\n  plugin_protocols=\"yes\"\n  plugin_serial=\"yes\"\n  plugin_swap=\"yes\"\n  plugin_synproxy=\"yes\"\n  plugin_tcpconns=\"yes\"\n  plugin_thermal=\"yes\"\n  plugin_ubi=\"yes\"\n  plugin_uptime=\"yes\"\n  plugin_vmem=\"yes\"\n  plugin_vserver=\"yes\"\n  plugin_wireless=\"yes\"\n  plugin_zfs_arc=\"yes\"\n\n  if test \"x$ac_cv_header_linux_ip_vs_h\" = \"xyes\"; then\n    plugin_ipvs=\"yes\"\n  fi\n\n  if test \"x$have_cpuid_h\" = \"xyes\"; then\n    plugin_turbostat=\"yes\"\n  fi\n\n  if test \"x$c_cv_have_clock_boottime_monotonic\" = \"xyes\"; then\n    plugin_cpusleep=\"yes\"\n  fi\n\n  if test \"x$with_libyajl\" = \"xyes\" && test \"x$with_libyajl2\" = \"xyes\"; then\n    plugin_ovs_events=\"yes\"\n    plugin_ovs_stats=\"yes\"\n    plugin_procevent=\"yes\"\n\n    if test \"x$with_libmnl\" = \"xyes\"; then\n      plugin_connectivity=\"yes\"\n    fi\n  fi\n\n  if test \"x$have_pci_regs_h\" = \"xyes\"; then\n    plugin_pcie_errors=\"yes\"\n  fi\n\n  if test \"x$with_libmicrohttpd\" = \"xyes\" && test \"x$with_libjansson\" = \"xyes\"; then\n    plugin_capabilities=\"yes\"\n  fi\nfi\n\nif test \"x$ac_system\" = \"xOpenBSD\"; then\n  plugin_tcpconns=\"yes\"\nfi\n\nif test \"x$ac_system\" = \"xNetBSD\"; then\n  plugin_disk=\"yes\"\n  plugin_entropy=\"yes\"\n  plugin_irq=\"yes\"\n  plugin_nfs=\"yes\"\n  plugin_processes=\"yes\"\n  plugin_netstat_udp=\"yes\"\nfi\n\n# Mac OS X devices\nif test \"x$with_libiokit\" = \"xyes\"; then\n  plugin_battery=\"yes\"\n  plugin_disk=\"yes\"\nfi\n\n# AIX\n\nif test \"x$ac_system\" = \"xAIX\"; then\n  plugin_ipc=\"yes\"\n  plugin_tcpconns=\"yes\"\nfi\n\n# FreeBSD\n\nif test \"x$ac_system\" = \"xFreeBSD\"; then\n  plugin_cpufreq=\"yes\"\n  plugin_disk=\"yes\"\n  plugin_ipstats=\"yes\"\n  plugin_zfs_arc=\"yes\"\nfi\n\n\nif test \"x$with_perfstat\" = \"xyes\"; then\n  plugin_contextswitch=\"yes\"\n  plugin_cpu=\"yes\"\n  plugin_disk=\"yes\"\n  plugin_interface=\"yes\"\n  plugin_load=\"yes\"\n  plugin_memory=\"yes\"\n  plugin_swap=\"yes\"\n  plugin_uptime=\"yes\"\nfi\n\nif test \"x$with_procinfo\" = \"xyes\"; then\n  plugin_processes=\"yes\"\nfi\n\n# Solaris\nif test \"x$with_kstat\" = \"xyes\"; then\n  plugin_nfs=\"yes\"\n  plugin_processes=\"yes\"\n  plugin_uptime=\"yes\"\n  plugin_zfs_arc=\"yes\"\n  plugin_zone=\"yes\"\nfi\n\nif test \"x$with_devinfo\" = \"xyes\" && test \"x$with_kstat\" = \"xyes\"; then\n  plugin_cpu=\"yes\"\n  plugin_disk=\"yes\"\n  plugin_interface=\"yes\"\n  plugin_memory=\"yes\"\n  plugin_tape=\"yes\"\nfi\n\nif test \"x$with_libi2c\" = \"xyes\"; then\n  plugin_barometer=\"yes\"\nfi\n\n\n# libstatgrab\nif test \"x$with_libstatgrab\" = \"xyes\"; then\n  plugin_cpu=\"yes\"\n  plugin_disk=\"yes\"\n  plugin_interface=\"yes\"\n  plugin_load=\"yes\"\n  plugin_memory=\"yes\"\n  plugin_swap=\"yes\"\n  plugin_users=\"yes\"\nfi\n\nif test \"x$with_libcurl\" = \"xyes\" && test \"x$with_libxml2\" = \"xyes\"; then\n  plugin_ascent=\"yes\"\n  if test \"x$have_strptime\" = \"xyes\"; then\n    plugin_bind=\"yes\"\n  fi\nfi\n\nif test \"x$with_libopenipmipthread\" = \"xyes\"; then\n  plugin_ipmi=\"yes\"\nfi\n\nif test \"x$with_libcurl\" = \"xyes\" && test \"x$with_libyajl\" = \"xyes\"; then\n  plugin_curl_json=\"yes\"\nfi\n\nif test \"x$with_libcurl\" = \"xyes\" && test \"x$with_libssl\" = \"xyes\" && test \"x$with_libyajl\" = \"xyes\" && test \"x$with_libyajl2\" = \"xyes\"; then\n  plugin_write_stackdriver=\"yes\"\nfi\n\nif test \"x$with_libcurl\" = \"xyes\" && test \"x$with_libxml2\" = \"xyes\"; then\n  plugin_curl_xml=\"yes\"\nfi\n\nif test \"x$with_libyajl\" = \"xyes\"; then\n  plugin_ceph=\"yes\"\n  plugin_sysevent=\"yes\"\nfi\n\nif test \"x$have_processor_info\" = \"xyes\"; then\n  plugin_cpu=\"yes\"\nfi\n\nif test \"x$have_sysctl\" = \"xyes\"; then\n  plugin_cpu=\"yes\"\n  plugin_memory=\"yes\"\n  plugin_uptime=\"yes\"\n  if test \"x$ac_system\" = \"xDarwin\"; then\n    plugin_swap=\"yes\"\n  fi\nfi\n\nif test \"x$have_sysctlbyname\" = \"xyes\"; then\n  plugin_contextswitch=\"yes\"\n  plugin_cpu=\"yes\"\n  plugin_memory=\"yes\"\n  plugin_tcpconns=\"yes\"\nfi\n\nif test \"x$have_getvfsstat\" = \"xyes\" || test \"x$have_getfsstat\" = \"xyes\"; then\n  plugin_df=\"yes\"\nfi\n\nif test \"x$c_cv_have_two_getmntent\" = \"xyes\" || test \"x$have_getmntent\" = \"xgen\" || test \"x$have_getmntent\" = \"xsun\"; then\n  plugin_df=\"yes\"\nfi\n\nif test \"x$c_cv_have_one_getmntent\" = \"xyes\"; then\n  plugin_df=\"yes\"\nfi\n\nif test \"x$have_getmntent_r\" = \"xyes\"; then\n  plugin_df=\"yes\"\nfi\n\nif test \"x$plugin_df\" = \"xyes\"; then\n  plugin_df=\"no\"\n  if test \"x$have_statfs\" = \"xyes\"; then\n    plugin_df=\"yes\"\n  fi\n\n  if test \"x$have_statvfs\" = \"xyes\"; then\n    plugin_df=\"yes\"\n  fi\nfi\n\nif test \"x$have_linux_sockios_h\" = \"xyes\" && test \"x$have_linux_ethtool_h\" = \"xyes\"; then\n  plugin_ethstat=\"yes\"\nfi\n\nif test \"x$with_libgps\" = \"xyes\"; then\n  plugin_gps=\"yes\"\nfi\n\nplugin_grpc=\"yes\"\nif test \"x$GRPC_CPP_PLUGIN\" = \"x\"; then\n  plugin_grpc=\"no (grpc_cpp_plugin not found)\"\nfi\nif test \"x$have_protoc3\" != \"xyes\"; then\n  plugin_grpc=\"no (protoc3 not found)\"\nfi\nif test \"x$with_libprotobuf\" != \"xyes\"; then\n  plugin_grpc=\"no (libprotobuf not found)\"\nfi\nif test \"x$with_libgrpcpp\" != \"xyes\"; then\n  plugin_grpc=\"no (libgrpc++ not found)\"\nfi\n\nif test \"x$have_getifaddrs\" = \"xyes\"; then\n  plugin_interface=\"yes\"\nfi\n\nif test \"x$have_getloadavg\" = \"xyes\"; then\n  plugin_load=\"yes\"\nfi\n\nif test \"x$with_libyajl\" = \"xyes\"; then\n  plugin_log_logstash=\"yes\"\nfi\n\nif test \"x$with_libperl\" = \"xyes\" && test \"x$c_cv_have_perl_ithreads\" = \"xyes\"; then\n  plugin_perl=\"yes\"\nfi\n\nif test \"x$have_protoc_c\" = \"xyes\" && test \"x$with_libprotobuf_c\" = \"xyes\"; then\n  plugin_pinba=\"yes\"\n  if test \"x$with_libmicrohttpd\" = \"xyes\"; then\n    plugin_write_prometheus=\"yes\"\n  fi\nfi\n\n# Mac OS X memory interface\nif test \"x$have_host_statistics\" = \"xyes\"; then\n  plugin_memory=\"yes\"\nfi\n\nif test \"x$have_termios_h\" = \"xyes\"; then\n  if test \"x$ac_system\" != \"xAIX\"; then\n    plugin_multimeter=\"yes\"\n  fi\n  plugin_ted=\"yes\"\nfi\n\nif test \"x$with_libudev\" = \"xyes\"; then\n  plugin_mmc=\"yes\"\nfi\n\nif test \"x$have_thread_info\" = \"xyes\"; then\n  plugin_processes=\"yes\"\nfi\n\nif test \"x$with_kvm_getprocs\" = \"xyes\" && test \"x$have_struct_kinfo_proc_freebsd\" = \"xyes\"; then\n  plugin_processes=\"yes\"\nfi\n\nif test \"x$with_kvm_getprocs\" = \"xyes\" && test \"x$have_struct_kinfo_proc_openbsd\" = \"xyes\"; then\n  plugin_processes=\"yes\"\nfi\n\nif test \"x$with_libpython\" != \"xno\"; then\n  plugin_python=\"yes\"\nfi\n\nif test \"x$with_sqlite3\" = \"xyes\"; then\n  plugin_ras=\"yes\"\nfi\n\nif test \"x$with_libatasmart\" = \"xyes\" && test \"x$with_libudev\" = \"xyes\"; then\n  plugin_smart=\"yes\"\nfi\n\nif test \"x$with_kvm_getswapinfo\" = \"xyes\"; then\n  plugin_swap=\"yes\"\nfi\n\nif test \"x$have_swapctl\" = \"xyes\" && test \"x$c_cv_have_swapctl_two_args\" = \"xyes\"; then\n  plugin_swap=\"yes\"\nfi\n\nif test \"x$have_swapctl\" = \"xyes\" && test \"x$c_cv_have_swapctl_three_args\" = \"xyes\"; then\n  plugin_swap=\"yes\"\nfi\n\nif test \"x$with_kvm_openfiles = \"xyes\" && $with_kvm_nlist\" = \"xyes\"; then\n  plugin_tcpconns=\"yes\"\nfi\n\nif test \"x$have_getutent\" = \"xyes\"; then\n  plugin_users=\"yes\"\nfi\n\nif test \"x$have_getutxent\" = \"xyes\"; then\n  plugin_users=\"yes\"\nfi\n\nif test \"x$with_libxml2\" = \"xyes\" && test \"x$with_libvirt\" = \"xyes\"; then\n  plugin_virt=\"yes\"\nelse\n  plugin_virt=\"no\"\n  if test \"x$with_libvirt\" != \"xyes\"; then\n    plugin_virt=\"$with_libvirt\"\n  elif test \"x$with_libxml2\" != \"xyes\"; then\n    plugin_virt=\"$with_libxml2\"\n  fi\nfi\n\nif test \"x$with_libxenctrl\" = \"xyes\"; then\n  plugin_xencpu=\"yes\"\nfi\n\nif test \"x$with_libdpdk\" = \"xyes\"; then\n  plugin_dpdkevents=\"$dpdk_keepalive\"\n  plugin_dpdkstat=\"yes\"\nfi\n\nif test \"x$with_libjansson\" = \"xyes\"; then\n  plugin_dpdk_telemetry=\"yes\"\nfi\n\nm4_divert_once([HELP_ENABLE], [\ncollectd plugins:])\n\nAC_ARG_ENABLE([all-plugins],\n  [AS_HELP_STRING([--enable-all-plugins], [enable all plugins @<:@default=yes@:>@])],\n  [\n     if test \"x$enableval\" = \"xyes\"; then\n       enable_all_plugins=\"yes\"\n     else if test \"x$enableval\" = \"xauto\"; then\n       enable_all_plugins=\"auto\"\n     else\n       enable_all_plugins=\"no\"\n     fi; fi\n  ],\n  [enable_all_plugins=\"auto\"]\n)\n\nm4_divert_once([HELP_ENABLE], [])\n\nAC_PLUGIN([aggregation],         [yes],                       [Aggregation plugin])\nAC_PLUGIN([amqp],                [$with_librabbitmq],         [AMQP output plugin])\nAC_PLUGIN([amqp1],               [$with_libqpid_proton],      [AMQP 1.0 output plugin])\nAC_PLUGIN([apache],              [$with_libcurl],             [Apache httpd statistics])\nAC_PLUGIN([apcups],              [yes],                       [Statistics of UPSes by APC])\nAC_PLUGIN([apple_sensors],       [$with_libiokit],            [Apple hardware sensors])\nAC_PLUGIN([aquaero],             [$with_libaquaero5],         [Aquaero hardware sensors])\nAC_PLUGIN([ascent],              [$plugin_ascent],            [AscentEmu player statistics])\nAC_PLUGIN([barometer],           [$plugin_barometer],         [Barometer sensor on I2C])\nAC_PLUGIN([battery],             [$plugin_battery],           [Battery statistics])\nAC_PLUGIN([bind],                [$plugin_bind],              [ISC Bind nameserver statistics])\nAC_PLUGIN([buddyinfo],           [$plugin_buddyinfo],         [buddyinfo statistics])\nAC_PLUGIN([capabilities],        [$plugin_capabilities],      [Platform static capabilities])\nAC_PLUGIN([ceph],                [$plugin_ceph],              [Ceph daemon statistics])\nAC_PLUGIN([cgroups],             [$plugin_cgroups],           [CGroups CPU usage accounting])\nAC_PLUGIN([chrony],              [yes],                       [Chrony statistics])\nAC_PLUGIN([check_uptime],        [yes],                       [Notify about uptime reset])\nAC_PLUGIN([connectivity],        [$plugin_connectivity],      [Network interface up/down events])\nAC_PLUGIN([conntrack],           [$plugin_conntrack],         [nf_conntrack statistics])\nAC_PLUGIN([contextswitch],       [$plugin_contextswitch],     [context switch statistics])\nAC_PLUGIN([cpu],                 [$plugin_cpu],               [CPU usage statistics])\nAC_PLUGIN([cpufreq],             [$plugin_cpufreq],           [CPU frequency statistics])\nAC_PLUGIN([cpusleep],            [$plugin_cpusleep],          [CPU sleep statistics])\nAC_PLUGIN([csv],                 [yes],                       [CSV output plugin])\nAC_PLUGIN([curl],                [$with_libcurl],             [CURL generic web statistics])\nAC_PLUGIN([curl_json],           [$plugin_curl_json],         [CouchDB statistics])\nAC_PLUGIN([curl_xml],            [$plugin_curl_xml],          [CURL generic xml statistics])\nAC_PLUGIN([dbi],                 [$with_libdbi],              [General database statistics])\nAC_PLUGIN([dcpmm],               [$with_libpmwapi],           [Intel(R) Optane(TM) DC Persistent Memory performance and health statistics])\nAC_PLUGIN([df],                  [$plugin_df],                [Filesystem usage statistics])\nAC_PLUGIN([disk],                [$plugin_disk],              [Disk usage statistics])\nAC_PLUGIN([dns],                 [$with_libpcap],             [DNS traffic analysis])\nAC_PLUGIN([dpdkevents],          [$plugin_dpdkevents],        [Events from DPDK])\nAC_PLUGIN([dpdkstat],            [$plugin_dpdkstat],          [Stats from DPDK])\nAC_PLUGIN([dpdk_telemetry],      [$plugin_dpdk_telemetry],    [Metrics from DPDK Telemetry])\nAC_PLUGIN([drbd],                [$plugin_drbd],              [DRBD statistics])\nAC_PLUGIN([email],               [yes],                       [EMail statistics])\nAC_PLUGIN([entropy],             [$plugin_entropy],           [Entropy statistics])\nAC_PLUGIN([epics],               [$with_epics_base],          [EPICS CA plugin])\nAC_PLUGIN([ethstat],             [$plugin_ethstat],           [Stats from NIC driver])\nAC_PLUGIN([exec],                [yes],                       [Execution of external programs])\nAC_PLUGIN([fhcount],             [$plugin_fhcount],           [File handles statistics])\nAC_PLUGIN([filecount],           [yes],                       [Count files in directories])\nAC_PLUGIN([fscache],             [$plugin_fscache],           [fscache statistics])\nAC_PLUGIN([gmond],               [$with_libganglia],          [Ganglia plugin])\nAC_PLUGIN([gps],                 [$plugin_gps],               [GPS plugin])\nAC_PLUGIN([gpu_nvidia],          [$with_cuda],                [NVIDIA GPU plugin])\nAC_PLUGIN([grpc],                [$plugin_grpc],              [gRPC plugin])\nAC_PLUGIN([hddtemp],             [yes],                       [Query hddtempd])\nAC_PLUGIN([hugepages],           [$plugin_hugepages],         [Hugepages statistics])\nAC_PLUGIN([infiniband],          [$plugin_infiniband],        [Infiniband statistics])\nAC_PLUGIN([intel_pmu],           [$with_libjevents],          [Intel performance monitor plugin])\nAC_PLUGIN([intel_rdt],           [$with_libpqos],             [Intel RDT monitor plugin])\nAC_PLUGIN([interface],           [$plugin_interface],         [Interface traffic statistics])\nAC_PLUGIN([ipc],                 [$plugin_ipc],               [IPC statistics])\nAC_PLUGIN([ipmi],                [$plugin_ipmi],              [IPMI sensor statistics])\nAC_PLUGIN([iptables],            [$with_libiptc],             [IPTables rule counters])\nAC_PLUGIN([ipstats],             [$plugin_ipstats],           [IP packet statistics])\nAC_PLUGIN([ipvs],                [$plugin_ipvs],              [IPVS connection statistics])\nAC_PLUGIN([irq],                 [$plugin_irq],               [IRQ statistics])\nAC_PLUGIN([java],                [$with_java],                [Embed the Java Virtual Machine])\nAC_PLUGIN([load],                [$plugin_load],              [System load])\nAC_PLUGIN([log_logstash],        [$plugin_log_logstash],      [Logstash json_event compatible logging])\nAC_PLUGIN([logfile],             [yes],                       [File logging plugin])\nAC_PLUGIN([logparser],           [yes],                       [Log parsing plugin])\nAC_PLUGIN([lpar],                [$with_perfstat],            [AIX logical partitions statistics])\nAC_PLUGIN([lua],                 [$with_liblua],              [Lua plugin])\nAC_PLUGIN([madwifi],             [$have_linux_wireless_h],    [Madwifi wireless statistics])\nAC_PLUGIN([match_empty_counter], [yes],                       [The empty counter match])\nAC_PLUGIN([match_hashed],        [yes],                       [The hashed match])\nAC_PLUGIN([match_regex],         [yes],                       [The regex match])\nAC_PLUGIN([match_timediff],      [yes],                       [The timediff match])\nAC_PLUGIN([match_value],         [yes],                       [The value match])\nAC_PLUGIN([mbmon],               [yes],                       [Query mbmond])\nAC_PLUGIN([mcelog],              [$plugin_mcelog],            [Machine Check Exceptions notifications])\nAC_PLUGIN([md],                  [$have_linux_raid_md_u_h],   [md (Linux software RAID) devices])\nAC_PLUGIN([mdevents],            [$plugin_mdevents],          [Events from md (Linux Software RAID) devices])\nAC_PLUGIN([memcachec],           [$with_libmemcached],        [memcachec statistics])\nAC_PLUGIN([memcached],           [yes],                       [memcached statistics])\nAC_PLUGIN([memory],              [$plugin_memory],            [Memory usage])\nAC_PLUGIN([mic],                 [$with_mic],                 [Intel Many Integrated Core stats])\nAC_PLUGIN([modbus],              [$with_libmodbus],           [Modbus plugin])\nAC_PLUGIN([mqtt],                [$with_libmosquitto],        [MQTT output plugin])\nAC_PLUGIN([mmc],                 [$plugin_mmc],               [MMC statistics])\nAC_PLUGIN([multimeter],          [$plugin_multimeter],        [Read multimeter values])\nAC_PLUGIN([mysql],               [$with_libmysql],            [MySQL statistics])\nAC_PLUGIN([netapp],              [$with_libnetapp],           [NetApp plugin])\nAC_PLUGIN([netlink],             [$with_libmnl],              [Enhanced Linux network statistics])\nAC_PLUGIN([netstat_udp],         [$plugin_netstat_udp],       [UDP network statistics])\nAC_PLUGIN([network],             [yes],                       [Network communication plugin])\nAC_PLUGIN([nfs],                 [$plugin_nfs],               [NFS statistics])\nAC_PLUGIN([nginx],               [$with_libcurl],             [nginx statistics])\nAC_PLUGIN([notify_desktop],      [$with_libnotify],           [Desktop notifications])\nAC_PLUGIN([notify_email],        [$with_libesmtp],            [Email notifier])\nAC_PLUGIN([notify_nagios],       [yes],                       [Nagios notification plugin])\nAC_PLUGIN([ntpd],                [yes],                       [NTPd statistics])\nAC_PLUGIN([numa],                [$plugin_numa],              [NUMA virtual memory statistics])\nAC_PLUGIN([nut],                 [$with_libupsclient],        [Network UPS tools statistics])\nAC_PLUGIN([olsrd],               [yes],                       [olsrd statistics])\nAC_PLUGIN([onewire],             [$with_libowcapi],           [OneWire sensor statistics])\nAC_PLUGIN([openldap],            [$with_libldap],             [OpenLDAP statistics])\nAC_PLUGIN([openvpn],             [yes],                       [OpenVPN client statistics])\nAC_PLUGIN([oracle],              [$with_oracle],              [Oracle plugin])\nAC_PLUGIN([ovs_events],          [$plugin_ovs_events],        [OVS events plugin])\nAC_PLUGIN([ovs_stats],           [$plugin_ovs_stats],         [OVS statistics plugin])\nAC_PLUGIN([pcie_errors],         [$plugin_pcie_errors],       [PCIe errors plugin])\nAC_PLUGIN([perl],                [$plugin_perl],              [Embed a Perl interpreter])\nAC_PLUGIN([pf],                  [$have_net_pfvar_h],         [BSD packet filter (PF) statistics])\n# FIXME: Check for libevent, too.\nAC_PLUGIN([pinba],               [$plugin_pinba],             [Pinba statistics])\nAC_PLUGIN([ping],                [$with_liboping],            [Network latency statistics])\nAC_PLUGIN([postgresql],          [$with_libpq],               [PostgreSQL database statistics])\nAC_PLUGIN([powerdns],            [yes],                       [PowerDNS statistics])\nAC_PLUGIN([processes],           [$plugin_processes],         [Process statistics])\nAC_PLUGIN([procevent],           [$plugin_procevent],         [Process event (start, stop) statistics])\nAC_PLUGIN([protocols],           [$plugin_protocols],         [Protocol (IP, TCP, ...) statistics])\nAC_PLUGIN([python],              [$plugin_python],            [Embed a Python interpreter])\nAC_PLUGIN([ras],                 [$plugin_ras],               [RAS plugin])\nAC_PLUGIN([redfish],             [$with_libredfish],          [Redfish plugin])\nAC_PLUGIN([redis],               [$with_libhiredis],          [Redis plugin])\nAC_PLUGIN([routeros],            [$with_librouteros],         [RouterOS plugin])\nAC_PLUGIN([rrdcached],           [$librrd_rrdc_update],       [RRDTool output plugin])\nAC_PLUGIN([rrdtool],             [$with_librrd],              [RRDTool output plugin])\nAC_PLUGIN([sensors],             [$with_libsensors],          [lm_sensors statistics])\nAC_PLUGIN([serial],              [$plugin_serial],            [serial port traffic])\nAC_PLUGIN([sigrok],              [$with_libsigrok],           [sigrok acquisition sources])\nAC_PLUGIN([slurm],               [$with_libslurm],            [SLURM jobs and nodes status])\nAC_PLUGIN([smart],               [$plugin_smart],             [SMART statistics])\nAC_PLUGIN([snmp],                [$with_libnetsnmp],          [SNMP querying plugin])\nAC_PLUGIN([snmp_agent],          [$with_libnetsnmpagent],     [SNMP agent plugin])\nAC_PLUGIN([statsd],              [yes],                       [StatsD plugin])\nAC_PLUGIN([swap],                [$plugin_swap],              [Swap usage statistics])\nAC_PLUGIN([synproxy],            [$plugin_synproxy],          [Synproxy stats plugin])\nAC_PLUGIN([sysevent],            [$plugin_sysevent],          [rsyslog events])\nAC_PLUGIN([syslog],              [$have_syslog],              [Syslog logging plugin])\nAC_PLUGIN([table],               [yes],                       [Parsing of tabular data])\nAC_PLUGIN([tail],                [yes],                       [Parsing of logfiles])\nAC_PLUGIN([tail_csv],            [yes],                       [Parsing of CSV files])\nAC_PLUGIN([tape],                [$plugin_tape],              [Tape drive statistics])\nAC_PLUGIN([target_notification], [yes],                       [The notification target])\nAC_PLUGIN([target_replace],      [yes],                       [The replace target])\nAC_PLUGIN([target_scale],        [yes],                       [The scale target])\nAC_PLUGIN([target_set],          [yes],                       [The set target])\nAC_PLUGIN([target_v5upgrade],    [yes],                       [The v5upgrade target])\nAC_PLUGIN([tcpconns],            [$plugin_tcpconns],          [TCP connection statistics])\nAC_PLUGIN([teamspeak2],          [yes],                       [TeamSpeak2 server statistics])\nAC_PLUGIN([ted],                 [$plugin_ted],               [Read The Energy Detective values])\nAC_PLUGIN([thermal],             [$plugin_thermal],           [Linux ACPI thermal zone statistics])\nAC_PLUGIN([threshold],           [yes],                       [Threshold checking plugin])\nAC_PLUGIN([tokyotyrant],         [$with_libtokyotyrant],      [TokyoTyrant database statistics])\nAC_PLUGIN([turbostat],           [$plugin_turbostat],         [Advanced statistic on Intel cpu states])\nAC_PLUGIN([ubi],                 [$plugin_ubi],               [UBIFS statistics])\nAC_PLUGIN([unixsock],            [yes],                       [Unixsock communication plugin])\nAC_PLUGIN([uptime],              [$plugin_uptime],            [Uptime statistics])\nAC_PLUGIN([users],               [$plugin_users],             [User statistics])\nAC_PLUGIN([uuid],                [yes],                       [UUID as hostname plugin])\nAC_PLUGIN([varnish],             [$with_libvarnish],          [Varnish cache statistics])\nAC_PLUGIN([virt],                [$plugin_virt],              [Virtual machine statistics])\nAC_PLUGIN([vmem],                [$plugin_vmem],              [Virtual memory statistics])\nAC_PLUGIN([vserver],             [$plugin_vserver],           [Linux VServer statistics])\nAC_PLUGIN([wireless],            [$plugin_wireless],          [Wireless statistics])\nAC_PLUGIN([write_graphite],      [yes],                       [Graphite / Carbon output plugin])\nAC_PLUGIN([write_http],          [$with_libcurl],             [HTTP output plugin])\nAC_PLUGIN([write_influxdb_udp],  [yes],                       [Influxdb udp output plugin])\nAC_PLUGIN([write_kafka],         [$with_librdkafka],          [Kafka output plugin])\nAC_PLUGIN([write_log],           [yes],                       [Log output plugin])\nAC_PLUGIN([write_mongodb],       [$with_libmongoc],           [MongoDB output plugin])\nAC_PLUGIN([write_prometheus],    [$plugin_write_prometheus],  [Prometheus write plugin])\nAC_PLUGIN([write_redis],         [$with_libhiredis],          [Redis output plugin])\nAC_PLUGIN([write_riemann],       [$with_libriemann_client],   [Riemann output plugin])\nAC_PLUGIN([write_sensu],         [yes],                       [Sensu output plugin])\nAC_PLUGIN([write_stackdriver],   [$plugin_write_stackdriver], [Google Stackdriver Monitoring output plugin])\nAC_PLUGIN([write_syslog],        [yes],                       [Syslog output plugin])\nAC_PLUGIN([write_tsdb],          [yes],                       [TSDB output plugin])\nAC_PLUGIN([xencpu],              [$plugin_xencpu],            [Xen Host CPU usage])\nAC_PLUGIN([xmms],                [$with_libxmms],             [XMMS statistics])\nAC_PLUGIN([zfs_arc],             [$plugin_zfs_arc],           [ZFS ARC statistics])\nAC_PLUGIN([zone],                [$plugin_zone],              [Solaris container statistics])\nAC_PLUGIN([zookeeper],           [yes],                       [Zookeeper statistics])\n\ndnl Default configuration file\n# Load either syslog or logfile\nLOAD_PLUGIN_SYSLOG=\"\"\nLOAD_PLUGIN_LOGFILE=\"\"\nLOAD_PLUGIN_LOG_LOGSTASH=\"\"\n\nAC_MSG_CHECKING([which default log plugin to load])\ndefault_log_plugin=\"none\"\nif test \"x$enable_syslog\" = \"xyes\"; then\n  default_log_plugin=\"syslog\"\nelse\n  LOAD_PLUGIN_SYSLOG=\"##\"\nfi\n\nif test \"x$enable_logfile\" = \"xyes\"; then\n  if test \"x$default_log_plugin\" = \"xnone\"; then\n    default_log_plugin=\"logfile\"\n  else\n    LOAD_PLUGIN_LOGFILE=\"#\"\n  fi\nelse\n  LOAD_PLUGIN_LOGFILE=\"##\"\nfi\n\nif test \"x$enable_log_logstash\" = \"xyes\"; then\n  LOAD_PLUGIN_LOG_LOGSTASH=\"#\"\nelse\n  LOAD_PLUGIN_LOG_LOGSTASH=\"##\"\nfi\n\nAC_MSG_RESULT([$default_log_plugin])\n\nAC_SUBST([LOAD_PLUGIN_SYSLOG])\nAC_SUBST([LOAD_PLUGIN_LOGFILE])\nAC_SUBST([LOAD_PLUGIN_LOG_LOGSTASH])\n\nif test \"x$enable_debug\" = \"xyes\"; then\n  DEFAULT_LOG_LEVEL=\"debug\"\nelse\n  DEFAULT_LOG_LEVEL=\"info\"\nfi\nAC_SUBST([DEFAULT_LOG_LEVEL])\n\n# Load only one of rrdtool, network, csv in the default config.\nLOAD_PLUGIN_RRDTOOL=\"\"\nLOAD_PLUGIN_NETWORK=\"\"\nLOAD_PLUGIN_CSV=\"\"\n\nAC_MSG_CHECKING([which default write plugin to load])\ndefault_write_plugin=\"none\"\nif test \"x$enable_rrdtool\" = \"xyes\"; then\n  default_write_plugin=\"rrdtool\"\nelse\n  LOAD_PLUGIN_RRDTOOL=\"##\"\nfi\n\nif test \"x$enable_network\" = \"xyes\"; then\n  if test \"x$default_write_plugin\" = \"xnone\"; then\n    default_write_plugin=\"network\"\n  else\n    LOAD_PLUGIN_NETWORK=\"#\"\n  fi\nelse\n  LOAD_PLUGIN_NETWORK=\"##\"\nfi\n\nif test \"x$enable_csv\" = \"xyes\"; then\n  if test \"x$default_write_plugin\" = \"xnone\"; then\n    default_write_plugin=\"csv\"\n  else\n    LOAD_PLUGIN_CSV=\"#\"\n  fi\nelse\n  LOAD_PLUGIN_CSV=\"##\"\nfi\nAC_MSG_RESULT([$default_write_plugin])\n\nAC_SUBST([LOAD_PLUGIN_RRDTOOL])\nAC_SUBST([LOAD_PLUGIN_NETWORK])\nAC_SUBST([LOAD_PLUGIN_CSV])\n\ndnl Perl bindings\nPERL_BINDINGS_OPTIONS=\"PREFIX=${prefix}\"\nAC_ARG_WITH(perl-bindings, [AS_HELP_STRING([--with-perl-bindings@<:@=OPTIONS@:>@], [Options passed to \"perl Makefile.PL\".])],\n[\n  if test \"x$withval\" != \"xno\" && test \"x$withval\" != \"xyes\"; then\n    PERL_BINDINGS_OPTIONS=\"$withval\"\n    with_perl_bindings=\"yes\"\n  else\n    with_perl_bindings=\"$withval\"\n  fi\n],\n[\n  if test \"x$PERL\" != \"x\"; then\n    with_perl_bindings=\"yes\"\n  else\n    with_perl_bindings=\"no (no perl interpreter found)\"\n  fi\n])\n\nif test \"x$with_perl_bindings\" = \"xyes\"; then\n  AC_MSG_CHECKING([for the ExtUtils::MakeMaker module])\n  if $PERL -MExtUtils::MakeMaker -e '' 2>/dev/null; then\n    AC_MSG_RESULT([yes])\n  else\n    AC_MSG_RESULT([no])\n    with_perl_bindings=\"no (ExtUtils::MakeMaker not found)\"\n  fi\nfi\n\nif test \"x$with_perl_bindings\" = \"xyes\"; then\n  PERL_BINDINGS=\"perl\"\nelse\n  PERL_BINDINGS=\"\"\nfi\n\nAC_SUBST([PERL_BINDINGS])\nAC_SUBST([PERL_BINDINGS_OPTIONS])\n\ndnl libcollectdclient\nLCC_VERSION_MAJOR=`echo $PACKAGE_VERSION | cut -d'.' -f1`\nLCC_VERSION_MINOR=`echo $PACKAGE_VERSION | cut -d'.' -f2`\nLCC_VERSION_PATCH=`echo $PACKAGE_VERSION | cut -d'.' -f3`\n\nLCC_VERSION_EXTRA=`echo $PACKAGE_VERSION | cut -d'.' -f4-`\n\nLCC_VERSION_STRING=\"$LCC_VERSION_MAJOR.$LCC_VERSION_MINOR.$LCC_VERSION_PATCH\"\n\nAC_SUBST([LCC_VERSION_MAJOR])\nAC_SUBST([LCC_VERSION_MINOR])\nAC_SUBST([LCC_VERSION_PATCH])\nAC_SUBST([LCC_VERSION_EXTRA])\nAC_SUBST([LCC_VERSION_STRING])\n\nAC_CONFIG_FILES([src/libcollectdclient/collectd/lcc_features.h])\n\nif test \"x$GCC\" = \"xyes\"; then\n  AM_CFLAGS=\"-Wall\"\n  AM_CXXFLAGS=\"-Wall\"\n  if test \"x$enable_werror\" != \"xno\"; then\n    AM_CFLAGS=\"$AM_CFLAGS -Werror\"\n    AM_CXXFLAGS=\"$AM_CXXFLAGS -Werror\"\n  fi\nfi\n\nAC_SUBST([AM_CFLAGS])\nAC_SUBST([AM_CXXFLAGS])\n\nAC_CONFIG_FILES([ \\\n  Makefile \\\n  src/collectd.conf \\\n  src/libcollectdclient/libcollectdclient.pc \\\n])\n\nAC_OUTPUT\n\nif test \"x$with_librrd\" = \"xyes\" && test \"x$librrd_threadsafe\" != \"xyes\"; then\n  with_librrd=\"yes (warning: librrd is not thread-safe)\"\nfi\n\nif test \"x$with_libperl\" = \"xyes\"; then\n  with_libperl=\"yes (version `$PERL -MConfig -e 'print $Config{version};'`)\"\nelse\n  enable_perl=\"no (needs libperl)\"\nfi\n\nif test \"x$enable_perl\" = \"xno\" && test \"x$c_cv_have_perl_ithreads\" = \"xno\"; then\n  enable_perl=\"no (libperl doesn't support ithreads)\"\nfi\n\nif test \"x$with_perl_bindings\" = \"xyes\" && test \"x$PERL_BINDINGS_OPTIONS\" != \"x\"; then\n  with_perl_bindings=\"yes ($PERL_BINDINGS_OPTIONS)\"\nfi\n\nAC_MSG_RESULT()\nAC_MSG_RESULT([Configuration:])\nAC_MSG_RESULT([  Build:])\nAC_MSG_RESULT([    Platform  . . . . . . $ac_system])\nAC_MSG_RESULT([    Compiler vendor . . . $ax_cv_c_compiler_vendor])\nAC_MSG_RESULT([    CC  . . . . . . . . . $CC])\nAC_MSG_RESULT([    CFLAGS  . . . . . . . $AM_CFLAGS $CFLAGS])\nAC_MSG_RESULT([    CXXFLAGS  . . . . . . $AM_CXXFLAGS $CXXFLAGS])\nAC_MSG_RESULT([    CPP . . . . . . . . . $CPP])\nAC_MSG_RESULT([    CPPFLAGS  . . . . . . $CPPFLAGS])\nAC_MSG_RESULT([    GRPC_CPP_PLUGIN . . . $GRPC_CPP_PLUGIN])\nAC_MSG_RESULT([    LD  . . . . . . . . . $LD])\nAC_MSG_RESULT([    LDFLAGS . . . . . . . $LDFLAGS])\nAC_MSG_RESULT([    PROTOC  . . . . . . . $PROTOC])\nAC_MSG_RESULT([    YACC  . . . . . . . . $YACC])\nAC_MSG_RESULT([    YFLAGS  . . . . . . . $YFLAGS])\nAC_MSG_RESULT()\nAC_MSG_RESULT([  Libraries:])\nAC_MSG_RESULT([    epics . . . . . . . . $with_epics_base])\nAC_MSG_RESULT([    intel mic . . . . . . $with_mic])\nAC_MSG_RESULT([    libaquaero5 . . . . . $with_libaquaero5])\nAC_MSG_RESULT([    libatasmart . . . . . $with_libatasmart])\nAC_MSG_RESULT([    libcurl . . . . . . . $with_libcurl])\nAC_MSG_RESULT([    libdbi  . . . . . . . $with_libdbi])\nAC_MSG_RESULT([    libdpdk . . . . . . . $with_libdpdk])\nAC_MSG_RESULT([    libesmtp  . . . . . . $with_libesmtp])\nAC_MSG_RESULT([    libganglia  . . . . . $with_libganglia])\nAC_MSG_RESULT([    libgcrypt . . . . . . $with_libgcrypt])\nAC_MSG_RESULT([    libgps  . . . . . . . $with_libgps])\nAC_MSG_RESULT([    libgrpc++ . . . . . . $with_libgrpcpp])\nAC_MSG_RESULT([    libhiredis  . . . . . $with_libhiredis])\nAC_MSG_RESULT([    libi2c-dev  . . . . . $with_libi2c])\nAC_MSG_RESULT([    libiokit  . . . . . . $with_libiokit])\nAC_MSG_RESULT([    libiptc . . . . . . . $with_libiptc])\nAC_MSG_RESULT([    libjansson  . . . . . $with_libjansson])\nAC_MSG_RESULT([    libjevents  . . . . . $with_libjevents])\nAC_MSG_RESULT([    libjvm  . . . . . . . $with_java])\nAC_MSG_RESULT([    libkstat  . . . . . . $with_kstat])\nAC_MSG_RESULT([    libkvm  . . . . . . . $with_libkvm])\nAC_MSG_RESULT([    libldap . . . . . . . $with_libldap])\nAC_MSG_RESULT([    liblua  . . . . . . . $with_liblua])\nAC_MSG_RESULT([    libmemcached  . . . . $with_libmemcached])\nAC_MSG_RESULT([    libmicrohttpd . . . . $with_libmicrohttpd])\nAC_MSG_RESULT([    libmnl  . . . . . . . $with_libmnl])\nAC_MSG_RESULT([    libmodbus . . . . . . $with_libmodbus])\nAC_MSG_RESULT([    libmongoc . . . . . . $with_libmongoc])\nAC_MSG_RESULT([    libmosquitto  . . . . $with_libmosquitto])\nAC_MSG_RESULT([    libmysql  . . . . . . $with_libmysql])\nAC_MSG_RESULT([    libnetapp . . . . . . $with_libnetapp])\nAC_MSG_RESULT([    libnetsnmp  . . . . . $with_libnetsnmp])\nAC_MSG_RESULT([    libnetsnmpagent . . . $with_libnetsnmpagent])\nAC_MSG_RESULT([    libnotify . . . . . . $with_libnotify])\nAC_MSG_RESULT([    libnvidia-ml  . . . . $with_cuda])\nAC_MSG_RESULT([    libopenipmi . . . . . $with_libopenipmipthread])\nAC_MSG_RESULT([    liboping  . . . . . . $with_liboping])\nAC_MSG_RESULT([    libowcapi . . . . . . $with_libowcapi])\nAC_MSG_RESULT([    libpcap . . . . . . . $with_libpcap])\nAC_MSG_RESULT([    libperfstat . . . . . $with_perfstat])\nAC_MSG_RESULT([    libperl . . . . . . . $with_libperl])\nAC_MSG_RESULT([    libpmwapi . . . . . . $with_libpmwapi])\nAC_MSG_RESULT([    libpq . . . . . . . . $with_libpq])\nAC_MSG_RESULT([    libpqos . . . . . . . $with_libpqos])\nAC_MSG_RESULT([    libprotobuf . . . . . $with_libprotobuf])\nAC_MSG_RESULT([    libprotobuf-c . . . . $with_libprotobuf_c])\nAC_MSG_RESULT([    libpython . . . . . . $with_libpython])\nAC_MSG_RESULT([    libqpid-proton .  . . $with_libqpid_proton])\nAC_MSG_RESULT([    librabbitmq . . . . . $with_librabbitmq])\nAC_MSG_RESULT([    libriemann-client . . $with_libriemann_client])\nAC_MSG_RESULT([    librdkafka  . . . . . $with_librdkafka])\nAC_MSG_RESULT([    librouteros . . . . . $with_librouteros])\nAC_MSG_RESULT([    librrd  . . . . . . . $with_librrd])\nAC_MSG_RESULT([    libsensors  . . . . . $with_libsensors])\nAC_MSG_RESULT([    libsigrok   . . . . . $with_libsigrok])\nAC_MSG_RESULT([    libssl  . . . . . . . $with_libssl])\nAC_MSG_RESULT([    libslurm .  . . . . . $with_libslurm])\nAC_MSG_RESULT([    libstatgrab . . . . . $with_libstatgrab])\nAC_MSG_RESULT([    libtokyotyrant  . . . $with_libtokyotyrant])\nAC_MSG_RESULT([    libudev . . . . . . . $with_libudev])\nAC_MSG_RESULT([    libupsclient  . . . . $with_libupsclient])\nAC_MSG_RESULT([    libvarnish  . . . . . $with_libvarnish])\nAC_MSG_RESULT([    libvirt . . . . . . . $with_libvirt])\nAC_MSG_RESULT([    libxenctrl  . . . . . $with_libxenctrl])\nAC_MSG_RESULT([    libxml2 . . . . . . . $with_libxml2])\nAC_MSG_RESULT([    libxmms . . . . . . . $with_libxmms])\nAC_MSG_RESULT([    libyajl . . . . . . . $with_libyajl])\nAC_MSG_RESULT([    oracle  . . . . . . . $with_oracle])\nAC_MSG_RESULT([    protobuf-c  . . . . . $have_protoc_c])\nAC_MSG_RESULT([    protoc 3  . . . . . . $have_protoc3])\nAC_MSG_RESULT()\nAC_MSG_RESULT([  Features:])\nAC_MSG_RESULT([    daemon mode . . . . . $enable_daemon])\nAC_MSG_RESULT([    debug . . . . . . . . $enable_debug])\nAC_MSG_RESULT()\nAC_MSG_RESULT([  Bindings:])\nAC_MSG_RESULT([    perl  . . . . . . . . $with_perl_bindings])\nAC_MSG_RESULT()\nAC_MSG_RESULT([  Modules:])\nAC_MSG_RESULT([    aggregation . . . . . $enable_aggregation])\nAC_MSG_RESULT([    amqp    . . . . . . . $enable_amqp])\nAC_MSG_RESULT([    amqp1   . . . . . . . $enable_amqp1])\nAC_MSG_RESULT([    apache  . . . . . . . $enable_apache])\nAC_MSG_RESULT([    apcups  . . . . . . . $enable_apcups])\nAC_MSG_RESULT([    apple_sensors . . . . $enable_apple_sensors])\nAC_MSG_RESULT([    aquaero . . . . . . . $enable_aquaero])\nAC_MSG_RESULT([    ascent  . . . . . . . $enable_ascent])\nAC_MSG_RESULT([    barometer . . . . . . $enable_barometer])\nAC_MSG_RESULT([    battery . . . . . . . $enable_battery])\nAC_MSG_RESULT([    bind  . . . . . . . . $enable_bind])\nAC_MSG_RESULT([    buddyinfo . . . . . . $enable_buddyinfo])\nAC_MSG_RESULT([    capabilities  . . . . $enable_capabilities])\nAC_MSG_RESULT([    ceph  . . . . . . . . $enable_ceph])\nAC_MSG_RESULT([    cgroups . . . . . . . $enable_cgroups])\nAC_MSG_RESULT([    chrony. . . . . . . . $enable_chrony])\nAC_MSG_RESULT([    check_uptime. . . . . $enable_check_uptime])\nAC_MSG_RESULT([    connectivity. . . . . $enable_connectivity])\nAC_MSG_RESULT([    conntrack . . . . . . $enable_conntrack])\nAC_MSG_RESULT([    contextswitch . . . . $enable_contextswitch])\nAC_MSG_RESULT([    cpu . . . . . . . . . $enable_cpu])\nAC_MSG_RESULT([    cpufreq . . . . . . . $enable_cpufreq])\nAC_MSG_RESULT([    cpusleep  . . . . . . $enable_cpusleep])\nAC_MSG_RESULT([    csv . . . . . . . . . $enable_csv])\nAC_MSG_RESULT([    curl  . . . . . . . . $enable_curl])\nAC_MSG_RESULT([    curl_json . . . . . . $enable_curl_json])\nAC_MSG_RESULT([    curl_xml  . . . . . . $enable_curl_xml])\nAC_MSG_RESULT([    dbi . . . . . . . . . $enable_dbi])\nAC_MSG_RESULT([    dcpmm  . . . . . .  . $enable_dcpmm])\nAC_MSG_RESULT([    df  . . . . . . . . . $enable_df])\nAC_MSG_RESULT([    disk  . . . . . . . . $enable_disk])\nAC_MSG_RESULT([    dns . . . . . . . . . $enable_dns])\nAC_MSG_RESULT([    dpdkevents. . . . . . $enable_dpdkevents])\nAC_MSG_RESULT([    dpdkstat  . . . . . . $enable_dpdkstat])\nAC_MSG_RESULT([    dpdk_telemetry. . . . $enable_dpdk_telemetry])\nAC_MSG_RESULT([    drbd  . . . . . . . . $enable_drbd])\nAC_MSG_RESULT([    email . . . . . . . . $enable_email])\nAC_MSG_RESULT([    entropy . . . . . . . $enable_entropy])\nAC_MSG_RESULT([    ethstat . . . . . . . $enable_ethstat])\nAC_MSG_RESULT([    epics . . . . . . . . $enable_epics])\nAC_MSG_RESULT([    exec  . . . . . . . . $enable_exec])\nAC_MSG_RESULT([    fhcount . . . . . . . $enable_fhcount])\nAC_MSG_RESULT([    filecount . . . . . . $enable_filecount])\nAC_MSG_RESULT([    fscache . . . . . . . $enable_fscache])\nAC_MSG_RESULT([    gmond . . . . . . . . $enable_gmond])\nAC_MSG_RESULT([    gps . . . . . . . . . $enable_gps])\nAC_MSG_RESULT([    gpu_nvidia  . . . . . $enable_gpu_nvidia])\nAC_MSG_RESULT([    grpc  . . . . . . . . $enable_grpc])\nAC_MSG_RESULT([    hddtemp . . . . . . . $enable_hddtemp])\nAC_MSG_RESULT([    hugepages . . . . . . $enable_hugepages])\nAC_MSG_RESULT([    infiniband  . . . . . $enable_infiniband])\nAC_MSG_RESULT([    intel_pmu . . . . . . $enable_intel_pmu])\nAC_MSG_RESULT([    intel_rdt . . . . . . $enable_intel_rdt])\nAC_MSG_RESULT([    interface . . . . . . $enable_interface])\nAC_MSG_RESULT([    ipc . . . . . . . . . $enable_ipc])\nAC_MSG_RESULT([    ipmi  . . . . . . . . $enable_ipmi])\nAC_MSG_RESULT([    iptables  . . . . . . $enable_iptables])\nAC_MSG_RESULT([    ipstats . . . . . . . $enable_ipstats])\nAC_MSG_RESULT([    ipvs  . . . . . . . . $enable_ipvs])\nAC_MSG_RESULT([    irq . . . . . . . . . $enable_irq])\nAC_MSG_RESULT([    java  . . . . . . . . $enable_java])\nAC_MSG_RESULT([    load  . . . . . . . . $enable_load])\nAC_MSG_RESULT([    logfile . . . . . . . $enable_logfile])\nAC_MSG_RESULT([    logparser . . . . . . $enable_logparser])\nAC_MSG_RESULT([    log_logstash  . . . . $enable_log_logstash])\nAC_MSG_RESULT([    lpar  . . . . . . . . $enable_lpar])\nAC_MSG_RESULT([    lua . . . . . . . . . $enable_lua])\nAC_MSG_RESULT([    madwifi . . . . . . . $enable_madwifi])\nAC_MSG_RESULT([    match_empty_counter . $enable_match_empty_counter])\nAC_MSG_RESULT([    match_hashed  . . . . $enable_match_hashed])\nAC_MSG_RESULT([    match_regex . . . . . $enable_match_regex])\nAC_MSG_RESULT([    match_timediff  . . . $enable_match_timediff])\nAC_MSG_RESULT([    match_value . . . . . $enable_match_value])\nAC_MSG_RESULT([    mbmon . . . . . . . . $enable_mbmon])\nAC_MSG_RESULT([    mcelog  . . . . . . . $enable_mcelog])\nAC_MSG_RESULT([    md  . . . . . . . . . $enable_md])\nAC_MSG_RESULT([    mdevents  . . . . . . $enable_mdevents])\nAC_MSG_RESULT([    memcachec . . . . . . $enable_memcachec])\nAC_MSG_RESULT([    memcached . . . . . . $enable_memcached])\nAC_MSG_RESULT([    memory  . . . . . . . $enable_memory])\nAC_MSG_RESULT([    mic . . . . . . . . . $enable_mic])\nAC_MSG_RESULT([    mmc . . . . . . . . . $enable_mmc])\nAC_MSG_RESULT([    modbus  . . . . . . . $enable_modbus])\nAC_MSG_RESULT([    mqtt  . . . . . . . . $enable_mqtt])\nAC_MSG_RESULT([    multimeter  . . . . . $enable_multimeter])\nAC_MSG_RESULT([    mysql . . . . . . . . $enable_mysql])\nAC_MSG_RESULT([    netapp  . . . . . . . $enable_netapp])\nAC_MSG_RESULT([    netlink . . . . . . . $enable_netlink])\nAC_MSG_RESULT([    netstat_udp . . . . . $enable_netstat_udp])\nAC_MSG_RESULT([    network . . . . . . . $enable_network])\nAC_MSG_RESULT([    nfs . . . . . . . . . $enable_nfs])\nAC_MSG_RESULT([    nginx . . . . . . . . $enable_nginx])\nAC_MSG_RESULT([    notify_desktop  . . . $enable_notify_desktop])\nAC_MSG_RESULT([    notify_email  . . . . $enable_notify_email])\nAC_MSG_RESULT([    notify_nagios . . . . $enable_notify_nagios])\nAC_MSG_RESULT([    ntpd  . . . . . . . . $enable_ntpd])\nAC_MSG_RESULT([    numa  . . . . . . . . $enable_numa])\nAC_MSG_RESULT([    nut . . . . . . . . . $enable_nut])\nAC_MSG_RESULT([    olsrd . . . . . . . . $enable_olsrd])\nAC_MSG_RESULT([    onewire . . . . . . . $enable_onewire])\nAC_MSG_RESULT([    openldap  . . . . . . $enable_openldap])\nAC_MSG_RESULT([    openvpn . . . . . . . $enable_openvpn])\nAC_MSG_RESULT([    oracle  . . . . . . . $enable_oracle])\nAC_MSG_RESULT([    ovs_events  . . . . . $enable_ovs_events])\nAC_MSG_RESULT([    ovs_stats . . . . . . $enable_ovs_stats])\nAC_MSG_RESULT([    pcie_errors . . . . . $enable_pcie_errors])\nAC_MSG_RESULT([    perl  . . . . . . . . $enable_perl])\nAC_MSG_RESULT([    pf  . . . . . . . . . $enable_pf])\nAC_MSG_RESULT([    pinba . . . . . . . . $enable_pinba])\nAC_MSG_RESULT([    ping  . . . . . . . . $enable_ping])\nAC_MSG_RESULT([    postgresql  . . . . . $enable_postgresql])\nAC_MSG_RESULT([    powerdns  . . . . . . $enable_powerdns])\nAC_MSG_RESULT([    processes . . . . . . $enable_processes])\nAC_MSG_RESULT([    procevent . . . . . . $enable_procevent])\nAC_MSG_RESULT([    protocols . . . . . . $enable_protocols])\nAC_MSG_RESULT([    python  . . . . . . . $enable_python])\nAC_MSG_RESULT([    ras . . . . . . . . . $enable_ras])\nAC_MSG_RESULT([    redfish . . . . . . . $enable_redfish])\nAC_MSG_RESULT([    redis . . . . . . . . $enable_redis])\nAC_MSG_RESULT([    routeros  . . . . . . $enable_routeros])\nAC_MSG_RESULT([    rrdcached . . . . . . $enable_rrdcached])\nAC_MSG_RESULT([    rrdtool . . . . . . . $enable_rrdtool])\nAC_MSG_RESULT([    sensors . . . . . . . $enable_sensors])\nAC_MSG_RESULT([    serial  . . . . . . . $enable_serial])\nAC_MSG_RESULT([    sigrok  . . . . . . . $enable_sigrok])\nAC_MSG_RESULT([    slurm . . . . . . . . $enable_slurm])\nAC_MSG_RESULT([    smart . . . . . . . . $enable_smart])\nAC_MSG_RESULT([    snmp  . . . . . . . . $enable_snmp])\nAC_MSG_RESULT([    snmp_agent  . . . . . $enable_snmp_agent])\nAC_MSG_RESULT([    statsd  . . . . . . . $enable_statsd])\nAC_MSG_RESULT([    swap  . . . . . . . . $enable_swap])\nAC_MSG_RESULT([    synproxy  . . . . . . $enable_synproxy])\nAC_MSG_RESULT([    sysevent. . . . . . . $enable_sysevent])\nAC_MSG_RESULT([    syslog  . . . . . . . $enable_syslog])\nAC_MSG_RESULT([    table . . . . . . . . $enable_table])\nAC_MSG_RESULT([    tail_csv  . . . . . . $enable_tail_csv])\nAC_MSG_RESULT([    tail  . . . . . . . . $enable_tail])\nAC_MSG_RESULT([    tape  . . . . . . . . $enable_tape])\nAC_MSG_RESULT([    target_notification . $enable_target_notification])\nAC_MSG_RESULT([    target_replace  . . . $enable_target_replace])\nAC_MSG_RESULT([    target_scale  . . . . $enable_target_scale])\nAC_MSG_RESULT([    target_set  . . . . . $enable_target_set])\nAC_MSG_RESULT([    target_v5upgrade  . . $enable_target_v5upgrade])\nAC_MSG_RESULT([    tcpconns  . . . . . . $enable_tcpconns])\nAC_MSG_RESULT([    teamspeak2  . . . . . $enable_teamspeak2])\nAC_MSG_RESULT([    ted . . . . . . . . . $enable_ted])\nAC_MSG_RESULT([    thermal . . . . . . . $enable_thermal])\nAC_MSG_RESULT([    threshold . . . . . . $enable_threshold])\nAC_MSG_RESULT([    tokyotyrant . . . . . $enable_tokyotyrant])\nAC_MSG_RESULT([    turbostat . . . . . . $enable_turbostat])\nAC_MSG_RESULT([    ubi . . . . . . . . . $enable_ubi])\nAC_MSG_RESULT([    unixsock  . . . . . . $enable_unixsock])\nAC_MSG_RESULT([    uptime  . . . . . . . $enable_uptime])\nAC_MSG_RESULT([    users . . . . . . . . $enable_users])\nAC_MSG_RESULT([    uuid  . . . . . . . . $enable_uuid])\nAC_MSG_RESULT([    varnish . . . . . . . $enable_varnish])\nAC_MSG_RESULT([    virt  . . . . . . . . $enable_virt])\nAC_MSG_RESULT([    vmem  . . . . . . . . $enable_vmem])\nAC_MSG_RESULT([    vserver . . . . . . . $enable_vserver])\nAC_MSG_RESULT([    wireless  . . . . . . $enable_wireless])\nAC_MSG_RESULT([    write_graphite  . . . $enable_write_graphite])\nAC_MSG_RESULT([    write_http  . . . . . $enable_write_http])\nAC_MSG_RESULT([    write_influxdb_udp. . $enable_write_influxdb_udp])\nAC_MSG_RESULT([    write_kafka . . . . . $enable_write_kafka])\nAC_MSG_RESULT([    write_log . . . . . . $enable_write_log])\nAC_MSG_RESULT([    write_mongodb . . . . $enable_write_mongodb])\nAC_MSG_RESULT([    write_prometheus. . . $enable_write_prometheus])\nAC_MSG_RESULT([    write_redis . . . . . $enable_write_redis])\nAC_MSG_RESULT([    write_riemann . . . . $enable_write_riemann])\nAC_MSG_RESULT([    write_sensu . . . . . $enable_write_sensu])\nAC_MSG_RESULT([    write_stackdriver . . $enable_write_stackdriver])\nAC_MSG_RESULT([    write_syslog . .  . . $enable_write_syslog])\nAC_MSG_RESULT([    write_tsdb  . . . . . $enable_write_tsdb])\nAC_MSG_RESULT([    xencpu  . . . . . . . $enable_xencpu])\nAC_MSG_RESULT([    xmms  . . . . . . . . $enable_xmms])\nAC_MSG_RESULT([    zfs_arc . . . . . . . $enable_zfs_arc])\nAC_MSG_RESULT([    zone  . . . . . . . . $enable_zone])\nAC_MSG_RESULT([    zookeeper . . . . . . $enable_zookeeper])\nAC_MSG_RESULT()\n\nif test \"x$dependency_error\" = \"xyes\"; then\n  AC_MSG_ERROR(\"Some plugins are missing dependencies - see the summary above for details\")\nfi\n\nif test \"x$dependency_warning\" = \"xyes\"; then\n  AC_MSG_WARN(\"Some plugins seem to have missing dependencies but have been enabled forcibly - see the summary above for details\")\nfi\n\n# vim: set fdm=marker sw=2 sts=2 ts=2 et :\n\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "gnulib",
          "type": "commit",
          "content": null
        },
        {
          "name": "m4",
          "type": "tree",
          "content": null
        },
        {
          "name": "proto",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "testwrapper.sh",
          "type": "blob",
          "size": 0.701171875,
          "content": "#! /bin/sh\n#\n# collectd -- testwrapper.sh\n#\n# A wrapper script for running tests. If valgrind is available, memory\n# checking will be enabled for all tests.\n\nset -e\n\nMEMCHECK=\"\"\n\nif test -n \"$VALGRIND\"; then\n\tMEMCHECK=\"$VALGRIND --quiet --tool=memcheck --error-exitcode=1\"\n\tMEMCHECK=\"$MEMCHECK --trace-children=yes\"\n\tMEMCHECK=\"$MEMCHECK --leak-check=full\"\n\tMEMCHECK=\"$MEMCHECK --gen-suppressions=all\"\n\n\tfor f in \"valgrind.$( uname -s ).suppress\" \"valgrind.suppress\"; do\n\t\tfilename=\"$( dirname \"$0\" )/src/$f\"\n\t\tif test -e \"$filename\"; then\n\t\t\t# Valgrind supports up to 100 suppression files.\n\t\t\tMEMCHECK=\"$MEMCHECK --suppressions=$filename\"\n\t\tfi\n\tdone\nfi\n\nexec $MEMCHECK \"$@\"\n\n# vim: set tw=78 sw=4 ts=4 noexpandtab :\n\n"
        },
        {
          "name": "version-gen.sh",
          "type": "blob",
          "size": 0.2578125,
          "content": "#!/bin/sh\n\nDEFAULT_VERSION=\"5.12.0.git\"\n\nif [ -d .git ]; then\n\tVERSION=\"`git describe --tags --dirty=+ --abbrev=7 2> /dev/null | sed -e '/^collectd-/!d' -e 's///' -e 'y/-/./'`\"\nfi\n\nif test -z \"$VERSION\"; then\n\tVERSION=\"$DEFAULT_VERSION\"\nfi\n\nprintf \"%s\" \"$VERSION\"\n"
        }
      ]
    }
  ]
}