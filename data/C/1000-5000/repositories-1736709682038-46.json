{
  "metadata": {
    "timestamp": 1736709682038,
    "page": 46,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "microshow/RxFFmpeg",
      "stars": 4547,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.7666015625,
          "content": "/*/build/\nbuild/\nbuildCacheDir/\n\n# Crashlytics configuations\ncom_crashlytics_export_strings.xml\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Gradle generated files\n.gradle/\n\n# built application files\n# *.apk\n# *.ap_\n\n# Signing files\n.signing/\n\n# files for the dex VM\n*.dex\n\n# Java class files\n*.class\n\n# generated files\nbin/\ngen/\nobj/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\n\n# Eclipse project files\n.classpath\n.project\n.settings/\n\n# Proguard folder generated by Eclipse\nproguard/\n\n# Intellij project files\n*.iml\n*.ipr\n*.iws\n\n.idea/\nThumbs.db\n.DS_Store\n.checkstyle\n.DS_Store?\n._*\n.Spotlight-V100\n.Trashes\nehthumbs.db\n\nfabric.properties\n\n.externalNativeBuild\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.73828125,
          "content": "\nLanguage: [English](README_EN.md)\n\n# RxFFmpeg\n\n[![](https://www.jitpack.io/v/microshow/RxFFmpeg.svg)](https://www.jitpack.io/#microshow/RxFFmpeg)\n[![](https://img.shields.io/badge/FFmpeg-4.0-yellow.svg)](http://ffmpeg.org/releases/ffmpeg-4.0.tar.bz2)\n[![](https://img.shields.io/badge/X264-20180212.2245-red.svg)](http://download.videolan.org/x264/snapshots/x264-snapshot-20180212-2245-stable.tar.bz2)\n[![](https://img.shields.io/badge/mp3lame-3.100-blue.svg)](https://jaist.dl.sourceforge.net/project/lame/lame/3.100/lame-3.100.tar.gz)\n[![](https://img.shields.io/badge/fdkaac-0.1.6-orange.svg)](https://jaist.dl.sourceforge.net/project/opencore-amr/fdk-aac/fdk-aac-0.1.6.tar.gz)\n\n<img src=\"/preview/icon/logo-v1.gif\" alt=\"图-1：logo\" width=\"460px\"></img>\n\n>RxFFmpeg 是基于 ( FFmpeg 4.0 + X264 + mp3lame + fdk-aac + opencore-amr + openssl) 编译的适用于 Android 平台的音视频编辑、视频剪辑的快速处理框架，包含以下功能：视频拼接，转码，压缩，裁剪，片头片尾，分离音视频，变速，添加静态贴纸和gif动态贴纸，添加字幕，添加滤镜，添加背景音乐，加速减速视频，倒放音视频，**[#百变魔音#](https://github.com/microshow/AiSound)**，音频裁剪，混音，图片合成视频，视频解码图片，抖音首页，**[#视频播放器#](preview/docs/player.md)**，及支持 OpenSSL https 等主流特色功能\n\n\n# 『DEMO APP』\n\n| 扫码 or [点击下载](https://github.com/microshow/RxFFmpeg/raw/master/preview/app-release.apk)  |\n| :--------:   |\n| <img src=\"/preview/icon/apk_qr.png\" alt=\"图-1：扫码下载体验\" width=\"260px\" />       |\n\n\n# 编译环节\n\n\n## 编译环境\n\n  * win10 + ubuntu 16.04 + gcc + make\n\n## 主要依赖以下库进行编译\n\n| 库名        | 版本    |  下载地址  |\n| :--------   | :-----   | :---- |\n| FFmpeg        | 4.0      |   http://ffmpeg.org/releases/ffmpeg-4.0.tar.bz2    |\n| X264        | x264-snapshot-20180212-2245-stable      |   http://download.videolan.org/x264/snapshots/x264-snapshot-20180212-2245-stable.tar.bz2    |\n| mp3lame        | 3.100      |   https://jaist.dl.sourceforge.net/project/lame/lame/3.100/lame-3.100.tar.gz    |\n| fdk-aac        | 0.1.6      |   https://jaist.dl.sourceforge.net/project/opencore-amr/fdk-aac/fdk-aac-0.1.6.tar.gz    |\n| opencore-amr   | 0.1.5      |   https://jaist.dl.sourceforge.net/project/opencore-amr/opencore-amr/opencore-amr-0.1.5.tar.gz    |\n| ndk        | android-ndk-r10e-linux-x86_64      |   https://dl.google.com/android/repository/android-ndk-r10e-linux-x86_64.zip  |\n\n\n## 编译教程&核心源码&各种采坑历程\n\n* [点击获取RxFFmpeg宝典-付费版》》》](https://docs.qq.com/doc/DUld4TlZxU2hPR09k)\n\n# 特色功能\n\n| 功能        | 是否支持    |  简述  |\n| :--------   | :-----:   | :---- |\n| FFmpeg命令        | √  |   支持任何FFmpeg命令执行    |\n| FFmpeg进度回调    | √  |   支持FFmpeg命令执行进度回调    |\n| FFmpeg中断        | √  |   支持中断进行中的FFmpeg命令    |\n| 同步执行          | √  |   适用于多条命令分步执行   |\n| 异步执行          | √  |   适用于单条命令执行   |\n| Debug模式         | √  |   支持开启/关闭 Debug 模式    |\n| getMediaInfo()    | √  |   获取媒体文件详细属性信息    |\n| 平台架构          | √  |   支持 armeabi-v7a, arm64-v8a, x86, x86_64    |\n| 硬件加速          | √  |   支持硬件加速，使编解码处理更快(已开启MediaCodec)    |\n| 单个so打包        | √  |   支持把FFmpeg的各子模块打包成一个librxffmpeg-core.so核心库，无需导入七八个so库    |\n| X264              | √  |  支持libx264编码库，可以使压缩后的视频体积变的极小，清晰度还保持着很高清    |\n| mp3lame           | √  |  支持MP3音频编解码    |\n| fdk-aac           | √  |  支持AAC音频编解码    |\n| opencore-amr      | √  |  version >= 4.7.0 支持amr音频编解码(转码时需指定：-ar 8000 -ac 1)    |\n| https             | √  |   version >= 3.1.0  支持 https  |\n| 格式转换          | √  |   如: avi > mp4 > avi;  mp3 > aac > mp3 等    |\n| [自研播放器](preview/docs/player.md)           | √  |   RxFFmpegPlayer播放器主打轻量、高效、低功耗、视频秒开等特色   |\n| [常用命令](preview/docs/cmd.md)           | √  |   持续更新 [点击查看](preview/docs/cmd.md)    |\n\n\n# 使用方式\n\n## Gradle\n\n在根目录下的build.gradle里添加maven仓库\n\n```groovy\n\nallprojects {\n\t\trepositories {\n\t\t\t...\n\t\t\tmaven { url 'https://www.jitpack.io' }\n\t\t}\n\t}\n\n```\n\n添加依赖，最新版本[![](https://www.jitpack.io/v/microshow/RxFFmpeg.svg)](https://www.jitpack.io/#microshow/RxFFmpeg)，[版本更新记录](https://github.com/microshow/RxFFmpeg/releases)\n\n```groovy\n\ndependencies {\n    //以下选一个即可\n    \n    //完整版\n    implementation 'com.github.microshow:RxFFmpeg:4.9.0'\n    \n    //极速版 (预计占用 4M 左右空间)，主要移除了一些不常用的编解码器\n    implementation 'com.github.microshow:RxFFmpeg:4.9.0-lite'\n    \n}\n\n```\n\n如果你的App只要v7a平台，可以只保留armeabi-v7a，不过推荐加上arm64-v8a架构，这样性能会大大提升\n\n```groovy\n\ndefaultConfig {\n    .\n    .\n    .\n    ndk {\n        //目前已支持 \"armeabi-v7a\",\"arm64-v8a\",\"x86\",\"x86_64\" 平台架构\n        abiFilters \"armeabi-v7a\",\"arm64-v8a\",\"x86\",\"x86_64\"\n    }\n}\n\n```\n\n## 开始\n\n* 开启/关闭 debug 模式，建议在 Application 初始化调用\n\n```java\n\n    RxFFmpegInvoke.getInstance().setDebug(true);\n\n```\n\n* FFmpeg 命令执行 (RxJava2优雅的调用)\n\n```java\n\n    private void runFFmpegRxJava() {\n\n        String text = \"ffmpeg -y -i /storage/emulated/0/1/input.mp4 -vf boxblur=25:5 -preset superfast /storage/emulated/0/1/result.mp4\";\n\n        String[] commands = text.split(\" \");\n\n        myRxFFmpegSubscriber = new MyRxFFmpegSubscriber(this);\n\n        //开始执行FFmpeg命令\n        RxFFmpegInvoke.getInstance()\n                .runCommandRxJava(commands)\n                .subscribe(myRxFFmpegSubscriber);\n\n    }\n\n    public static class MyRxFFmpegSubscriber extends RxFFmpegSubscriber {\n\n        private WeakReference<HomeFragment> mWeakReference;\n\n        public MyRxFFmpegSubscriber(HomeFragment homeFragment) {\n            mWeakReference = new WeakReference<>(homeFragment);\n        }\n\n        @Override\n        public void onFinish() {\n            final HomeFragment mHomeFragment = mWeakReference.get();\n            if (mHomeFragment != null) {\n                mHomeFragment.cancelProgressDialog(\"处理成功\");\n            }\n        }\n\n        @Override\n        public void onProgress(int progress, long progressTime) {\n            final HomeFragment mHomeFragment = mWeakReference.get();\n            if (mHomeFragment != null) {\n                //progressTime 可以在结合视频总时长去计算合适的进度值\n                mHomeFragment.setProgressDialog(progress, progressTime);\n            }\n        }\n\n        @Override\n        public void onCancel() {\n            final HomeFragment mHomeFragment = mWeakReference.get();\n            if (mHomeFragment != null) {\n                mHomeFragment.cancelProgressDialog(\"已取消\");\n            }\n        }\n\n        @Override\n        public void onError(String message) {\n            final HomeFragment mHomeFragment = mWeakReference.get();\n            if (mHomeFragment != null) {\n                mHomeFragment.cancelProgressDialog(\"出错了 onError：\" + message);\n            }\n        }\n    }\n\n    @Override\n    public void onDestroy() {\n        super.onDestroy();\n        if (myRxFFmpegSubscriber != null) {\n            myRxFFmpegSubscriber.dispose();\n        }\n    }\n\n```\n\n* FFmpeg 命令执行 (同步方式)\n\n```java\n\n    RxFFmpegInvoke.getInstance().runCommand(command, null);\n\n```\n\n* 中断 FFmpeg 命令 \n\n```java\n\n    RxFFmpegInvoke.getInstance().exit();\n\n```\n\n* 构建命令，使用RxFFmpegCommandList构建，可以有效避免路径带有空格等问题\n\n```java\n\n    public static String[] getBoxblur() {\n        RxFFmpegCommandList cmdlist = new RxFFmpegCommandList();\n        cmdlist.append(\"-i\");\n        cmdlist.append(\"/storage/emulated/0/1/input.mp4\");\n        cmdlist.append(\"-vf\");\n        cmdlist.append(\"boxblur=5:1\");\n        cmdlist.append(\"-preset\");\n        cmdlist.append(\"superfast\");\n        cmdlist.append(\"/storage/emulated/0/1/result.mp4\");\n        return cmdlist.build();\n    }\n\n```\n\n* 获取媒体文件信息\n\n```java\n\n    RxFFmpegInvoke.getInstance().getMediaInfo(String filePath);\n\n```\n\n\n# 代码混淆\n\n```java\n\n    -dontwarn io.microshow.rxffmpeg.**\n    -keep class io.microshow.rxffmpeg.**{*;}\n\n```\n\n# 优质项目\n\n### * [GSYVideoPlayer (Android端的视频播放器神器)](https://github.com/CarGuo/GSYVideoPlayer)\n\n### * [AiSound百变魔音 (一个神奇的魔法声音)](https://github.com/microshow/AiSound)\n\n### * [RetrofitGO (轻量级的网络请求库-支持缓存配置)](https://github.com/microshow/RetrofitGO)\n\n\n# 常用命令\n\n### * [常用命令汇总](preview/docs/cmd.md)\n### * [FFmpeg文档汇总](https://ffmpeg.org/documentation.html)\n### * [FFmpeg Filters文档](https://ffmpeg.org/ffmpeg-filters.html)\n\n# ScreenShot\n\n<img src=\"/preview/icon/screen-shot.gif\" alt=\"图-1：screenShot.gif\" width=\"240px\"></img>\n\n## 性能比对：arm64-v8a VS armeabi-v7a\n<img src=\"/preview/icon/run_time_arm64-v8a.jpg\" alt=\"图-2：arm64-v8a\" width=\"240px\"></img>\n<img src=\"/preview/icon/run_time_armeabi-v7a.jpg\" alt=\"图-1：armeabi-v7a\" width=\"240px\"></img>\n\n>总结：可以看出arm64-v8a架构的运行效率远大于armeabi-v7a，强烈建议在你的App添加arm64-v8a架构的so,同时也是响应Google的号召。\n\n# 实验室\n\n## [自研视频播放器RxFFmpegPlayer](preview/docs/player.md)\n\n* 自研RxFFmpegPlayer播放器内核基于(FFmpeg OpenGL OpenSL)\n\n* 主打轻量级、高效、低功耗，播放本地视频秒开等特色\n\n* 涵盖播放器基本的 播放、暂停、快进、快退、音量控制、声道控制、循环播放、播放进度、加载状态等功能\n\n* 支持播放本地视频文件、在线视频、直播流(hls、rtmp、m3u8…)等\n\n* 项目里已集成OpenSSL所以也支持Https访问\n\n* 视频画面支持双指缩放、旋转、移动等手势操作\n\n* 支持切换系统MediaPlayer内核\n\n<img src=\"/preview/icon/screen_player.gif\" alt=\"图-1：screen_player.gif\" width=\"240px\"></img>\n\n\n# 谁在用？\n\n>按登记顺序排序，更多接入APP，欢迎去[这里登记](https://github.com/microshow/RxFFmpeg/issues/37)(供开源用户参考)，据不完整数据统计，目前已有上千款App已接入RxFFmpeg，为音视频项目赋能！\n\n[![](https://pp.myapp.com/ma_icon/0/icon_42333639_1555789191/96)](https://sj.qq.com/myapp/detail.htm?apkName=com.hndnews.main)\n[![](https://www.hndnews.com/static/images/logo.png)](https://www.hndnews.com)\n[![](https://pp.myapp.com/ma_icon/0/icon_53292925_1558869088/96)](https://sj.qq.com/myapp/detail.htm?apkName=com.jianyi.watermarkdog)\n[![](https://pp.myapp.com/ma_icon/0/icon_53929550_1579661691/96)](https://sj.qq.com/myapp/detail.htm?apkName=com.cqjy.eyeschacar)\n[![](https://pp.myapp.com/ma_icon/0/icon_52859659_1558810527/96)](https://a.app.qq.com/o/simple.jsp?pkgname=com.jmhy.tool)\n[![](https://pp.myapp.com/ma_icon/0/icon_52610077_1556520138/96)](https://sj.qq.com/myapp/detail.htm?apkName=com.kmb2b.KmMall)\n[![](https://pp.myapp.com/ma_icon/0/icon_42274023_1557972414/96)](https://sj.qq.com/myapp/detail.htm?apkName=com.yiqizhangda.parent)\n[![](https://pp.myapp.com/ma_icon/0/icon_53871621_1563941814/96)](https://sj.qq.com/myapp/detail.htm?apkName=com.soubo.zimujun)\n[![](https://pp.myapp.com/ma_icon/0/icon_52821569_1564999429/96)](https://sj.qq.com/myapp/detail.htm?apkName=net.youqu.dev.android.miyu)\n[![](https://pp.myapp.com/ma_icon/0/icon_53260423_1565165298/96)](https://sj.qq.com/myapp/detail.htm?apkName=com.aiso.tea)\n[![](http://www.aniic.com/public/l/18.4d1e77d4.png)](http://www.aniic.com/share/download?tdsourcetag=s_pcqq_aiomsg)\n[![](https://pp.myapp.com/ma_icon/0/icon_42373340_1567047517/96)](https://sj.qq.com/myapp/detail.htm?apkName=com.jycj.juyuanmeihui)\n[![](https://pp.myapp.com/ma_icon/0/icon_52743084_1555772496/96)](https://sj.qq.com/myapp/detail.htm?apkName=com.peace.calligraphy)\n[![](https://pp.myapp.com/ma_icon/0/icon_12205109_1570448862/96)](https://sj.qq.com/myapp/detail.htm?apkName=com.peace.guitarmusic)\n[![](https://pp.myapp.com/ma_icon/0/icon_52873563_1570726608/96)](https://sj.qq.com/myapp/detail.htm?apkName=com.queen.oa.xt)\n[![](https://pp.myapp.com/ma_icon/0/icon_53899619_1572422746/96)](https://sj.qq.com/myapp/detail.htm?apkName=com.shifenkexue.appscience)\n[![](https://pp.myapp.com/ma_icon/0/icon_53923023_1570761579/96)](https://sj.qq.com/myapp/detail.htm?apkName=com.sixsix.call)\n[![](https://pp.myapp.com/ma_icon/0/icon_54022753_1585815499/96)](https://sj.qq.com/myapp/detail.htm?apkName=com.bigtotoro.shuiyincamera)\n[![](https://pp.myapp.com/ma_icon/0/icon_54017775_1585724965/96)](https://sj.qq.com/myapp/detail.htm?apkName=com.yuanli.mvpaudioextraction)\n[![](https://pp.myapp.com/ma_icon/0/icon_52517100_1581646762/96)](https://sj.qq.com/myapp/detail.htm?apkName=com.yuan_li_network.texttospeechyuanli)\n[![](https://pp.myapp.com/ma_icon/0/icon_52745305_1585818590/96)](https://sj.qq.com/myapp/detail.htm?apkName=com.zhouzining.yyxc)\n[![](https://pp.myapp.com/ma_icon/0/icon_53332875_1586397821/96)](https://sj.qq.com/myapp/detail.htm?apkName=com.shockwv.nevermore)\n[![](https://pp.myapp.com/ma_icon/0/icon_52762584_1586228655/96)](https://sj.qq.com/myapp/detail.htm?apkName=com.yz.live)\n[![](https://pp.myapp.com/ma_icon/0/icon_52649928_1583549532/96)](https://sj.qq.com/myapp/detail.htm?apkName=scs.com.crosscountry)\n[![](https://upload.jianshu.io/collections/images/1866835/80.png?imageMogr2/auto-orient/strip|imageView2/1/w/240/h/240)](https://www.vivhist.com/)\n[![](https://pp.myapp.com/ma_icon/0/icon_52761428_1595596053/96)](https://sj.qq.com/myapp/detail.htm?apkName=sulisong.ShelledPro.Screenshots)\n<img src=\"http://image.coolapk.com/apk_logo/2019/0317/22/500px-219205-o_1d662al3g3ufvge8v51odk1iimq-uid-1030107@500x500.png\" alt=\"https://www.coolapk.com/apk/yanyan.com.tochar\" width=\"96px\"></img>\n[![](https://pp.myapp.com/ma_icon/0/icon_53947191_1592382950/96)](https://sj.qq.com/myapp/detail.htm?apkName=com.koki.callshow)\n[![](https://pp.myapp.com/ma_icon/0/icon_54047992_1600306987/96)](https://sj.qq.com/myapp/detail.htm?apkName=com.spqsymf.app.them)\n[![](https://pp.myapp.com/ma_icon/0/icon_54014901_1589092180/96)](https://sj.qq.com/myapp/detail.htm?apkName=com.mzxf.funchild)\n[![](https://pp.myapp.com/ma_icon/0/icon_53800886_1593572867/96)](https://sj.qq.com/myapp/detail.htm?apkName=com.smallyin.fastcompre)\n[![](https://pp.myapp.com/ma_icon/0/icon_54063638_1595986594/96)](https://sj.qq.com/myapp/detail.htm?apkName=com.ym.screenrecorder)\n[![](https://pp.myapp.com/ma_icon/0/icon_52448244_1622634768/96)](https://sj.qq.com/myapp/detail.htm?apkName=com.znxh.hyhuo)\n\n\n# 沟通无限\n\n欢迎加入高质量音视频交流群，RxFFmpeg助力您学习移动端音视频！\n\n| QQ群：799934185  | \n| :--------:   |\n| <img src=\"/preview/icon/qqGroup.jpg\" alt=\"图-1：qqGroup\" width=\"260px\" />  | \n\n# 感谢\n\n撸码不易，如果觉得帮您节省了大量的开发时间，对您有所帮助，欢迎您的赞赏！\n\n| 微信赞赏  |\n| :--------:   |\n| <img src=\"/preview/icon/weixinPay.png\" alt=\"图-1：weixin\" width=\"260px\" />  |\n\n\n# License\n\n```text\nCopyright 2020 Super\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n"
        },
        {
          "name": "README_EN.md",
          "type": "blob",
          "size": 6.802734375,
          "content": "\n\n# RxFFmpeg\n\n[![](https://www.jitpack.io/v/microshow/RxFFmpeg.svg)](https://www.jitpack.io/#microshow/RxFFmpeg)\n[![](https://img.shields.io/badge/FFmpeg-4.0-yellow.svg)](http://ffmpeg.org/releases/ffmpeg-4.0.tar.bz2)\n[![](https://img.shields.io/badge/X264-20180212.2245-red.svg)](http://download.videolan.org/x264/snapshots/x264-snapshot-20180212-2245-stable.tar.bz2)\n[![](https://img.shields.io/badge/mp3lame-3.100-blue.svg)](https://jaist.dl.sourceforge.net/project/lame/lame/3.100/lame-3.100.tar.gz)\n[![](https://img.shields.io/badge/fdkaac-0.1.6-orange.svg)](https://jaist.dl.sourceforge.net/project/opencore-amr/fdk-aac/fdk-aac-0.1.6.tar.gz)\n\n<img src=\"/preview/icon/logo.jpg\" alt=\"image-1：logo\" width=\"260px\"></img>\n\n>RxFFmpeg is a fast processing framework for audio and video editing and video editing based on (FFmpeg 4.0 + X264 + mp3lame + fdk-aac) compiled for Android platform. It includes the following functions (video stitching, transcoding, compression, clipping, film head and tail, separation of audio and video, speed change, adding static stickers and GIF dynamic stickers, adding subtitles, adding filters, adding background music, adding Speed deceleration video, rewind audio video, audio clipping, voice change, mixing, picture synthesis video, video decoding pictures and other mainstream features...\n\n# Compile\n\n## Compiling Environment\n  * win10 + ubuntu 16.04 + gcc + make\n\n## Compiling mainly depends on the following Libraries\n\n| Library        | Version    |  Download  |\n| :--------   | :-----   | :---- |\n| FFmpeg        | 4.0      |   http://ffmpeg.org/releases/ffmpeg-4.0.tar.bz2    |\n| X264        | x264-snapshot-20180212-2245-stable      |   http://download.videolan.org/x264/snapshots/x264-snapshot-20180212-2245-stable.tar.bz2    |\n| mp3lame        | 3.100      |   https://jaist.dl.sourceforge.net/project/lame/lame/3.100/lame-3.100.tar.gz    |\n| fdk-aac        | 0.1.6      |   https://jaist.dl.sourceforge.net/project/opencore-amr/fdk-aac/fdk-aac-0.1.6.tar.gz    |\n| ndk        | android-ndk-r14b-linux-x86_64      |   https://dl.google.com/android/repository/android-ndk-r14b-linux-x86_64.zip  |\n\n\n## Compiler Script\n\n* [Compiler script](preview/docs/build.md)\n\n# Features\n\n* **Supporting any FFmpeg command execution**\n\n* **Support FFmpeg command execution schedule callback**\n\n* **Supporting interruption of FFmpeg commands**\n\n* **Supporting synchronous/asynchronous execution**\n\n* **Support debug mode on/off**\n\n* **Supports hardware acceleration to make codec processing faster (MediaCodec is turned on)**\n\n* **Code encapsulation into SDK, easy to rely on**\n\n* **Support sub-modules of FFmpeg libavutil\nlibavcodec \nlibavformat \nlibavdevice \nlibavfilter \nlibswscale \nlibswresample \nlibpostproc Ultimately packaged into a libffmpeg-core.so core library for easy dependency use**\n\n* **Supporting libx264 encoding library, can make the compressed video volume become very small, the clarity remains very high, simple compression commands: ffmpeg -y -i /storage/emulated/0/1/input.mp4 -b 2097k -r 30 -vcodec libx264 -preset superfast /storage/emulated/0/1/result.mp4**\n\n* **Background music that supports the addition of mp3, aac, wav and other mainstream formats**\n\n* **Support mainstream video format conversion, such as: avi > mp4 > avi**\n\n* **Intercept a graph every second: ffmpeg -y -i /storage/emulated/0/1/input.mp4 -f image2 -r 1 -q:v 10 -preset superfast /storage/emulated/0/1/%3d.jpg**\n\n\n# Usage Mode\n\n## Gradle\n\nAdd the Maven repository to build. gradle under the root directory\n\n```groovy\n\nallprojects {\n\t\trepositories {\n\t\t\t...\n\t\t\tmaven { url 'https://www.jitpack.io' }\n\t\t}\n\t}\n\n```\n\nAdding dependencies, latest version[![](https://www.jitpack.io/v/microshow/RxFFmpeg.svg)](https://www.jitpack.io/#microshow/RxFFmpeg)\n\n```groovy\n\ndependencies {\n    implementation 'com.github.microshow:RxFFmpeg:4.9.0'\n}\n\n```\n\n**Be careful**：If your project has so libraries on other platforms, such as arm64-v8a, add the following configuration to build. gradle to keep usage intact\n\n```groovy\n\ndefaultConfig {\n    .\n    .\n    .\n    ndk {\n        abiFilters \"armeabi-v7a\"\n    }\n}\n\n```\n\n## Start\n\n* Open/close debug mode. It is recommended to initialize the call in Application\n\n```java\n\nRxFFmpegInvoke.getInstance().setDebug(true);\n\n```\n\n* FFmpeg command execution (RxJava2 elegant call)\n\n```java\n\nString text = \"ffmpeg -y -i /storage/emulated/0/1/input.mp4 -vf boxblur=25:5 -preset superfast /storage/emulated/0/1/result.mp4\";\n\nString[] commands = text.split(\" \");\n\nRxFFmpegInvoke.getInstance().runCommandRxJava(commands).subscribe(new RxFFmpegSubscriber() {\n            @Override\n            public void onFinish() {\n                if (mProgressDialog != null)\n                    mProgressDialog.cancel();\n                showDialog(\"Successful\");\n            }\n\n            @Override\n            public void onProgress(int progress) {\n                if (mProgressDialog != null)\n                    mProgressDialog.setProgress(progress);\n            }\n\n            @Override\n            public void onCancel() {\n                if (mProgressDialog != null)\n                    mProgressDialog.cancel();\n                showDialog(\"Cancelled\");\n            }\n\n            @Override\n            public void onError(String message) {\n                if (mProgressDialog != null)\n                    mProgressDialog.cancel();\n                showDialog(\"onError：\" + message);\n            }\n        });\n```\n\n* FFmpeg command execution (synchronization)\n\n```java\n\nRxFFmpegInvoke.getInstance().runCommand(command, null);\n\n```\n\n* Interrupt FFmpeg command\n\n```java\n\nRxFFmpegInvoke.getInstance().exit();\n\n```\n\n# Code Confusion\n\n```text\n-dontwarn io.microshow.rxffmpeg.**\n-keep class io.microshow.rxffmpeg.**{*;}\n```\n\n# Frequently used commands\n\n* [Summary of Common Commands](preview/docs/cmd.md)\n* [FFmpeg Documentation](https://ffmpeg.org/documentation.html)\n* [FFmpeg Filters](https://ffmpeg.org/ffmpeg-filters.html)\n\n# Download Experience\n\n| Scanning or [Download](https://github.com/microshow/RxFFmpeg/raw/master/preview/app-release.apk)  |\n| :--------:   |\n| <img src=\"/preview/icon/apk_qr.png\" alt=\"image-1：Scanning Download Experience\" width=\"260px\" />       |\n\n# Unlimited Communication\n\nQQ Email: 986386695@qq.com\n\n| QQ Group：799934185  | \n| :--------:   |\n| <img src=\"/preview/icon/qqGroup.jpg\" alt=\"image-1：qqGroup\" width=\"260px\" />  | \n\n# License\n\n```text\nCopyright 2019 Super\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.701171875,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\napply from: \"configs.gradle\"\n\nbuildscript {\n\n    repositories {\n        google()\n        jcenter()\n        maven { url 'https://repo1.maven.org/maven2/' }\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:4.0.0'\n\n\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        google()\n        jcenter()\n        maven { url 'https://repo1.maven.org/maven2/' }\n        maven { url \"https://jitpack.io\" }\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n"
        },
        {
          "name": "configs.gradle",
          "type": "blob",
          "size": 0.4521484375,
          "content": "ext {\n    /*---- 官方 Support 库、Build 工具版本、主配文件参数 ----*/\n    //最小SDK版本\n    minSdkValue = 19\n    //目标版本\n    targetSdkValue = 28\n    //编译 SDK 版本\n    compileSdkValue = 28\n    //构建工具\n    buildToolsValue = \"28.0.3\"\n    //支持包版本\n    supportLibValue = \"28.0.0\"\n    //应用 versionCode\n    versionCodeValue = 490\n    //应用 version 名称，更多设置里显示的\n    versionNameValue = \"4.9.0\"\n\n}"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.76171875,
          "content": "# Project-wide Gradle settings.\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\norg.gradle.jvmargs=-Xmx1536m\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n\nandroid.useAndroidX=true\nandroid.enableJetifier=true\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.171875,
          "content": "#!/usr/bin/env sh\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=$(save \"$@\")\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\n# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\nif [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n  cd \"$(dirname \"$0\")\"\nfi\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.125,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windows variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "preview",
          "type": "tree",
          "content": null
        },
        {
          "name": "rxffmpeg",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.02734375,
          "content": "include ':app', ':rxffmpeg'\n"
        }
      ]
    }
  ]
}