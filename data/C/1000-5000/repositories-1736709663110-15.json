{
  "metadata": {
    "timestamp": 1736709663110,
    "page": 15,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "warmcat/libwebsockets",
      "stars": 4844,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.77734375,
          "content": "#Ignore build files\nCMakeCache.txt\nCMakeFiles\nbuild\ncmake_install.cmake\nbuild/lws-minimal*\nMakefile\n.cproject\n.project\nconfig.h\nconfig.log\nconfig.status\nlibtool\nstamp-h1\noutput/\nwin32port/ipch/\nwin32port/Debug*/\nwin32port/Release*/\nwin32port/server/Debug*/\nwin32port/server/Release*/\nwin32port/client/Debug*/\nwin32port/client/Release*/\nwin32port/libwebsocketswin32/Debug*/\nwin32port/libwebsocketswin32/Release*/\nwin32port/zlib/Debug*/\nwin32port/zlib/Release*/\n*.vcxproj.user\n*.opensdf\n*.sdf\n*.suo\n*.su\n*.m4\n*.a\nmissing\ndepcomp\ninstall-sh\nconfigure\ncompile\nconfig.guess\n*~\n*.orig\nautom4te.cache/\nltmain.sh\nconfig.sub\nar-lib\nlibwebsockets.pc\nbuild/\n*.swp\ndoc\n/build2/\n/build3/\n/cov-int/\n/.vs/\n/build-mtls/\n/build-mingw64/\n/n9/\n/bb/\n/openssl3/\n/bb-linkit/\n/bq/\n/cros/\n/q/\n/b1/\n/destdir/\n/bb1/\n/bb3/\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 0.1005859375,
          "content": "Andy Green <andy@warmcat.com> <andy.green@linaro.org>\nJoakim SoÌˆderberg <joakim.soderberg@gmail.com>\n\n"
        },
        {
          "name": ".sai.json",
          "type": "blob",
          "size": 22.4521484375,
          "content": "{\n\t\"schema\": \"sai-1\",\n\n\t# We're doing separate install into destdir so that the test server\n\t# has somewhere to go to find its /usr/share content like certs\n\n\t\"platforms\": {\n\t\t\"linux-debian-11/x86_64-amd/gcc\": {\n\t\t\t\"build\": \"mkdir build destdir;cd build;export CCACHE_DISABLE=1;export LD_LIBRARY_PATH=../destdir/usr/local/share/libwebsockets-test-server/plugins:../destdir/usr/local/lib;export SAI_CPACK=\\\"-G DEB\\\";cmake .. ${cmake} && make -j4 && rm -rf ../destdir && make -j DESTDIR=../destdir install && ctest -j2 --output-on-failure ${cpack}\"\n\t\t},\n\t\t\"linux-debian-buster/x86-amd/gcc\": {\n\t\t\t\"build\": \"mkdir build destdir;cd build;export CCACHE_DISABLE=1;export LD_LIBRARY_PATH=../destdir/usr/local/share/libwebsockets-test-server/plugins:../destdir/usr/local/lib;export SAI_CPACK=\\\"-G DEB\\\";cmake .. ${cmake} && make -j4 && rm -rf ../destdir && make -j DESTDIR=../destdir install && ctest -j2 --output-on-failure ${cpack}\"\n\t\t},\n\t\t\"linux-debian-sid/x86_64-amd/gcc\": {\n\t\t\t\"build\": \"mkdir build destdir;cd build;export CCACHE_DISABLE=1;export LD_LIBRARY_PATH=../destdir/usr/local/share/libwebsockets-test-server/plugins:../destdir/usr/local/lib;export SAI_CPACK=\\\"-G DEB\\\";cmake .. ${cmake} && make -j4 && rm -rf ../destdir && make -j DESTDIR=../destdir install && ctest -j2 --output-on-failure ${cpack}\"\n\t\t},\n\t\t\"linux-ubuntu-xenial/x86_64-amd/gcc\": {\n\t\t\t\"build\": \"mkdir build destdir;cd build;export CCACHE_DISABLE=1;export LD_LIBRARY_PATH=../destdir/usr/local/share/libwebsockets-test-server/plugins:../destdir/usr/local/lib;export SAI_CPACK=\\\"-G DEB\\\";cmake .. ${cmake} && make -j4 && rm -rf ../destdir && make -j DESTDIR=../destdir install && ctest -j2 --output-on-failure ${cpack}\"\n\t\t},\n\t\t\"linux-debian-sid/x86-amd/gcc\": {\n\t\t\t\"build\": \"mkdir build destdir;cd build;export CCACHE_DISABLE=1;export LD_LIBRARY_PATH=../destdir/usr/local/share/libwebsockets-test-server/plugins:../destdir/usr/local/lib;export SAI_CPACK=\\\"-G DEB\\\";cmake .. ${cmake} && make -j4 && rm -rf ../destdir && make -j DESTDIR=../destdir install && ctest -j2 --output-on-failure ${cpack}\"\n\t\t},\n\t\t\"linux-debian-sid/x86_64-amd/gcc\": {\n\t\t\t\"build\": \"mkdir build destdir;cd build;export CCACHE_DISABLE=1;export LD_LIBRARY_PATH=../destdir/usr/local/share/libwebsockets-test-server/plugins:../destdir/usr/local/lib;export SAI_CPACK=\\\"-G DEB\\\";cmake .. ${cmake} && make -j4 && rm -rf ../destdir && make -j DESTDIR=../destdir install && ctest -j2 --output-on-failure ${cpack}\"\n\t\t},\n\n\t\t\"linux-ubuntu-1804/x86_64-amd/gcc\": {\n\t\t\t\"build\": \"mkdir build destdir;cd build;export CCACHE_DISABLE=1;export LD_LIBRARY_PATH=../destdir/usr/local/share/libwebsockets-test-server/plugins:../destdir/usr/local/lib;export SAI_CPACK=\\\"-G DEB\\\";cmake .. ${cmake} && make -j4 && rm -rf ../destdir && make -j DESTDIR=../destdir install && ctest -j2 --output-on-failure ${cpack}\"\n\t\t},\n\t\t\"linux-ubuntu-2004/x86_64-amd/gcc\": {\n\t\t\t\"build\": \"mkdir build destdir;cd build;export CCACHE_DISABLE=1;export LD_LIBRARY_PATH=../destdir/usr/local/share/libwebsockets-test-server/plugins:../destdir/usr/local/lib;export SAI_CPACK=\\\"-G DEB\\\";cmake .. ${cmake} && make -j4 && rm -rf ../destdir && make -j DESTDIR=../destdir install && ctest -j2 --output-on-failure ${cpack}\"\n\t\t},\n\t\t\"linux-fedora-32/x86_64-amd/gcc\": {\n\t\t\t\"build\": \"rm -rf build destdir ; mkdir build destdir;cd build;export CCACHE_DISABLE=1;export LD_LIBRARY_PATH=../destdir/usr/local/share/libwebsockets-test-server/plugins:../destdir/usr/local/lib;export SAI_CPACK=\\\"-G RPM\\\";cmake .. ${cmake} && make -j4 && rm -rf ../destdir && make -j DESTDIR=../destdir install && ctest -j2 --output-on-failure ${cpack}\"\n\t\t},\n\t\t\"linux-gentoo/x86_64-amd/gcc\": {\n\t\t\t\"build\": \"mkdir build destdir;cd build;export CCACHE_DISABLE=1;export LD_LIBRARY_PATH=../destdir/usr/local/share/libwebsockets-test-server/plugins:../destdir/usr/local/lib;export SAI_CPACK=\\\"-G ZIP\\\";cmake .. ${cmake} && make -j4 && rm -rf ../destdir && make -j DESTDIR=../destdir install && ctest -j2 --output-on-failure ${cpack}\"\n\t\t},\n\t\t\"linux-centos-7/x86_64-amd/gcc\": {\n\t\t\t\"build\": \"mkdir build destdir;cd build;export CCACHE_DISABLE=1;export LD_LIBRARY_PATH=../destdir/usr/local/share/libwebsockets-test-server/plugins:../destdir/usr/local/lib;export SAI_CPACK=\\\"-G RPM\\\";cmake .. ${cmake} && make -j4 && rm -rf ../destdir && make -j DESTDIR=../destdir install && ctest -j2 --output-on-failure ${cpack}\"\n\t\t},\n\t\t\"linux-centos-8/x86_64-amd/gcc\": {\n\t\t\t\"build\": \"mkdir build destdir;cd build;export CCACHE_DISABLE=1;export LD_LIBRARY_PATH=../destdir/usr/local/share/libwebsockets-test-server/plugins:../destdir/usr/local/lib;export SAI_CPACK=\\\"-G RPM\\\";cmake .. ${cmake} && make -j4 && rm -rf ../destdir && make -j DESTDIR=../destdir install && ctest -j2 --output-on-failure ${cpack}\"\n\t\t},\n\t\t\"linux-centos-8/aarch64-a72-bcm2711-rpi4/gcc\": {\n\t\t\t\"build\": \"mkdir build destdir;cd build;export CCACHE_DISABLE=1;export LD_LIBRARY_PATH=../destdir/usr/local/share/libwebsockets-test-server/plugins:../destdir/usr/local/lib;export SAI_CPACK=\\\"-G RPM\\\";cmake .. ${cmake} && make -j4 && rm -rf ../destdir && make -j DESTDIR=../destdir install && ctest -j2 --output-on-failure ${cpack}\"\n\t\t},\n\t\t\"linux-ubuntu-2004/aarch64-a72-bcm2711-rpi4/gcc\": {\n\t\t\t\"build\": \"mkdir build;cd build;export CCACHE_DISABLE=1;export LD_LIBRARY_PATH=../destdir/usr/local/share/libwebsockets-test-server/plugins:../destdir/usr/local/lib;export SAI_CPACK=\\\"-G DEB\\\";cmake .. ${cmake} && make -j3 && rm -rf ../destdir && make -j DESTDIR=../destdir install && ctest -j3 --output-on-failure ${cpack}\",\n\t\t\t\"default\": false\n\t\t},\n\t\t\"linux-android/aarch64/llvm\": {\n\t\t\t\"build\": \"mkdir build;cd build;cmake .. -DCMAKE_TOOLCHAIN_FILE=../libwebsockets/contrib/cross-aarch64-android.cmake ${cmake} && make -j\",\n\t\t\t\"default\": false\n\t\t},\n\t\t\"netbsd-iOS/aarch64/llvm\": {\n\t\t\t\"build\": \"mkdir build destdir; cd build; export SAI_CPACK=\\\"-G ZIP\\\";cmake .. -DCMAKE_MAKE_PROGRAM=/usr/bin/make -DCMAKE_IOS_DEVELOPER_ROOT=/opt/Xcode-beta.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer -DCMAKE_TOOLCHAIN_FILE=contrib/iOS.cmake -DIOS_PLATFORM=OS ${cmake} && make -j\",\n\t\t\t\"default\": false\n\t\t},\n\t\t\"netbsd-OSX-bigsur/x86_64-intel-i3/llvm\": {\n\t\t\t\"build\": \"mkdir build destdir; cd build; export LD_LIBRARY_PATH=../destdir/usr/local/share/libwebsockets-test-server/plugins:../destdir/usr/local/lib;export SAI_CPACK=\\\"-G ZIP\\\";export MACOSX_DEPLOYMENT_TARGET=10.15 ; cmake .. -DCMAKE_MAKE_PROGRAM=/usr/bin/make -DLWS_OPENSSL_INCLUDE_DIRS=/usr/local/opt/openssl@1.1/include -DLWS_OPENSSL_LIBRARIES=\\\"/usr/local/opt/openssl/lib/libssl.dylib;/usr/local/opt/openssl/lib/libcrypto.dylib\\\" ${cmake} && make -j4 && make -j DESTDIR=../destdir install && ctest -j2 --output-on-failure ${cpack}\"\n\t\t},\n\t\t\"netbsd-OSX-bigsur/aarch64-apple-m1/llvm\": {\n\t\t\t\"build\": \"mkdir build destdir; cd build; export LD_LIBRARY_PATH=../destdir/usr/local/share/libwebsockets-test-server/plugins:../destdir/usr/local/lib;export SAI_CPACK=\\\"-G ZIP\\\";export MACOSX_DEPLOYMENT_TARGET=10.15 ; cmake .. -DLWS_WITH_SUL_DEBUGGING=1 -DCMAKE_SYSTEM_PREFIX_PATH=/opt/homebrew -DLWS_OPENSSL_INCLUDE_DIRS=/opt/homebrew/Cellar/openssl@1.1/1.1.1h/include '-DLWS_OPENSSL_LIBRARIES=/opt/homebrew/Cellar/openssl@1.1/1.1.1h/lib/libssl.dylib;/opt/homebrew/Cellar/openssl@1.1/1.1.1h/lib/libcrypto.dylib' ${cmake} && make -j6 && rm -rf ../destdir && make -j DESTDIR=../destdir install && ctest -j3 --output-on-failure ${cpack}\"\n\t\t},\n\t\t\"solaris/x86_64-amd/gcc\": {\n\t\t\t\"build\": \"mkdir build destdir; cd build; export SAI_CPACK=\\\"-G ZIP\\\";cmake .. ${cmake} && make -j 4 && make install DESTDIR=../destdir && ctest -j2 --output-on-failure ${cpack}\",\n\t\t\t\"default\": false\n\t\t},\n\t\t\"freertos-linkit/arm32-m4-mt7697-usi/gcc\": {\n\t\t\t\"build\": \"mkdir build;cd build;export CCACHE_DISABLE=1;cmake .. -DCMAKE_INSTALL_PREFIX:PATH=/tmp -DCMAKE_TOOLCHAIN_FILE=../contrib/cross-linkit.cmake -DLWS_PLAT_FREERTOS=1 -DLWS_WITH_ZLIB=0 -DLWS_WITHOUT_EXTENSIONS=1 -DLWS_WITH_ZIP_FOPS=0 -DLWS_WITH_HTTP_STREAM_COMPRESSION=0 -DLWS_WITH_MBEDTLS=1 -DLWS_WITH_FILE_OPS=0 -DLWS_IPV6=0 ${cmake};make -j\",\n\t\t\t\"default\": false\n\t\t},\n\t\t\"w10/x86_64-amd/msvc\": {\n\t\t\t\"build\": \"mkdir build && cd build && set SAI_CPACK=\\\"-G ZIP\\\" && cmake .. -DLWS_OPENSSL_LIBRARIES=\\\"C:\\\\Program Files\\\\OpenSSL\\\\lib\\\\libssl.lib;C:\\\\Program Files\\\\OpenSSL\\\\lib\\\\libcrypto.lib\\\" -DLWS_OPENSSL_INCLUDE_DIRS=\\\"C:\\\\Program Files\\\\OpenSSL\\\\include\\\" -DLWS_EXT_PTHREAD_INCLUDE_DIR=\\\"C:\\\\Program Files (x86)\\\\pthreads\\\\include\\\" -DLWS_EXT_PTHREAD_LIBRARIES=\\\"C:\\\\Program Files (x86)\\\\pthreads\\\\lib\\\\x64\\\\libpthreadGC2.a\\\" ${cmake} && cmake --build . --config DEBUG && set CTEST_OUTPUT_ON_FAILURE=1 && ctest . -C DEBUG -j1 --output-on-failure\",\n\t\t\t\"default\": false\n\t\t},\n\n\t\t\"w10/x86_64-amd/wmbedtlsmsvc\": {\n                        \"build\": \"mkdir build && cd build && set SAI_CPACK=\\\"-G ZIP\\\" && cmake ..  -DLWS_WITH_MBEDTLS=1 -DLWS_MBEDTLS_INCLUDE_DIRS=\\\"C:/Program Files (x86)/mbed TLS/include\\\" -DMBEDTLS_LIBRARY=\\\"C:/Program Files (x86)/mbed TLS/lib/mbedtls.lib\\\" -DMBEDX509_LIBRARY=\\\"C:/Program Files (x86)/mbed TLS/lib/mbedx509.lib\\\" -DMBEDCRYPTO_LIBRARY=\\\"C:/Program Files (x86)/mbed TLS/lib/mbedcrypto.lib\\\"  -DLWS_EXT_PTHREAD_INCLUDE_DIR=\\\"C:\\\\Program Files (x86)\\\\pthreads\\\\include\\\" -DLWS_EXT_PTHREAD_LIBRARIES=\\\"C:\\\\Program Files (x86)\\\\pthreads\\\\lib\\\\x64\\\\libpthreadGC2.a\\\" ${cmake} && cmake --build . --config DEBUG && set CTEST_OUTPUT_ON_FAILURE=1 && ctest . -C DEBUG -j1 --output-on-failure\",\n                        \"default\": false\n                },\n\t\t\"w10/x86_64-amd/noptmsvc\": {\n\t\t\t\"build\": \"mkdir build && cd build && set SAI_CPACK=\\\"-G ZIP\\\" && cmake .. -DLWS_OPENSSL_LIBRARIES=\\\"C:\\\\Program Files\\\\OpenSSL\\\\lib\\\\libssl.lib;C:\\\\Program Files\\\\OpenSSL\\\\lib\\\\libcrypto.lib\\\" -DLWS_OPENSSL_INCLUDE_DIRS=\\\"C:\\\\Program Files\\\\OpenSSL\\\\include\\\" ${cmake} && cmake --build . --config DEBUG && set CTEST_OUTPUT_ON_FAILURE=1 && ctest . -C DEBUG -j1 --output-on-failure\",\n\t\t\t\"default\": false\n\t\t},\n\t\t\"w10/x86_64-amd/mingw32\": {\n\t\t\t\"build\": \"mkdir build && cd build && cmake .. -DCMAKE_TOOLCHAIN_FILE=../contrib/cross-w32.cmake ${cmake} && cmake --build . --config DEBUG\",\n\t\t\t\"default\": false\n\t\t},\n\t\t\"w10/x86_64-amd/mingw64\": {\n\t\t\t\"build\": \"mkdir build && cd build && cmake .. -DCMAKE_TOOLCHAIN_FILE=../contrib/cross-w64.cmake ${cmake} && cmake --build . --config DEBUG\",\n\t\t\t\"default\": false\n\t\t},\n\t\t\"freertos-espidf/xl6-esp32/gcc\": {\n\t\t\t# official way to get sdkconfig.h is idf.py menuconfig, but\n\t\t\t# no obvious way to do that in CI\n\t\t\t\"build\":\t\"rm -rf ebuild ; mkdir ebuild; cd ebuild; cp -rp ../minimal-examples/embedded/esp32/${cpack} . ;  cd ${cpack} ; . /opt/esp/esp-idf/export.sh ; ln -sf ../.. libwebsockets ; idf.py set-target esp32 && cp libwebsockets/minimal-examples/embedded/esp32/${cpack}/sdkconfig . && cp sdkconfig.h build && idf.py ${cmake} build size size-components size-files && cd build && /usr/local/bin/sai-device ${cpack} ESPPORT=0 ctest --output-on-failure\",\n\t\t\t\"default\":\tfalse\n\t\t},\n\t\t\"freertos-espidf/riscv-esp32c3/gcc\": {\n\t\t\t\"build\":\t\"rm -rf ebuild ; mkdir ebuild; cd ebuild; cp -rp ../minimal-examples/embedded/esp32/${cpack} . ;  cd ${cpack} ; . /opt/esp/esp-idf/export.sh ; ln -sf ../.. libwebsockets ; idf.py set-target esp32c3 && cp libwebsockets/minimal-examples/embedded/esp32/${cpack}/sdkconfig . && cp sdkconfig.h build && idf.py ${cmake} build size size-components size-files && cd build && /usr/local/bin/sai-device ${cpack} ESPPORT=0 ctest --output-on-failure\",\n\t\t\t\"default\":\tfalse\n\t\t},\n\n\t\t\"linux-fedora-32/riscv64-virt/gcc\": {\n\t\t\t\"build\":\t\"mkdir build destdir;cd build;export LD_LIBRARY_PATH=../destdir/usr/local/share/libwebsockets-test-server/plugins:../destdir/usr/local/lib;export CCACHE_DISABLE=1;export SAI_CPACK=\\\"-G RPM\\\";cmake .. ${cmake} && make -j4 && rm -rf ../destdir && make -j12 DESTDIR=../destdir install && ctest -j3 --output-on-failure ${cpack}\",\n\t\t\t\"default\":\tfalse\n\t\t},\n\t\t\"freebsd-12/x86_64-amd/llvm\": {\n\t\t\t\"build\":\t\"mkdir build destdir;cd build;export LD_LIBRARY_PATH=../destdir/usr/local/share/libwebsockets-test-server/plugins:../destdir/usr/local/lib;export CCACHE_DISABLE=1;cmake .. ${cmake} && make -j3 && rm -rf ../destdir && make -j3 DESTDIR=../destdir install\"\n\t\t},\n\t\t\"openbsd/x86_64-amd/llvm\": {\n                        \"build\": \"mkdir build destdir;cd build;export CCACHE_DISABLE=1;cmake .. ${cmake};make -j4 && rm -rf ../destdir && make -j3 DESTDIR=../destdir install && ctest -j3 --output-on-failure\",\n\t\t\t\"default\": false\n\t\t},\n                \"netbsd/aarch64BE-bcm2837-a53/gcc\": {\n                        \"build\": \"mkdir build destdir;cd build;export LD_LIBRARY_PATH=../destdir/usr/local/share/libwebsockets-test-server/plugins:../destdir/usr/local/lib;export CCACHE_DISABLE=1;cmake .. ${cmake};make -j6 && rm -rf ../destdir && make -j6 DESTDIR=../destdir install && /usr/pkg/bin/ctest -j3 --output-on-failure\",\n                        \"default\": false\n                },\n                \"netbsd/x86_64-amd/gcc\": {\n                        \"build\": \"mkdir build destdir;cd build;export LD_LIBRARY_PATH=../destdir/usr/local/share/libwebsockets-test-server/plugins:../destdir/usr/local/lib;export CCACHE_DISABLE=1;cmake .. ${cmake};make -j6 && rm -rf ../destdir && make -j6 DESTDIR=../destdir install && /usr/pkg/bin/ctest -j3 --output-on-failure\",\n                        \"default\": false\n                }\n\n\t},\n\n\t\"configurations\": {\n\t\t\"default\": {\n\t\t\t\"cmake\":\t\"\",\n\t\t\t\"platforms\":\t\"w10/x86_64-amd/msvc, w10/x86_64-amd/noptmsvc, freertos-linkit/arm32-m4-mt7697-usi/gcc, linux-ubuntu-2004/aarch64-a72-bcm2711-rpi4/gcc, w10/x86_64-amd/mingw32, w10/x86_64-amd/mingw64, netbsd/aarch64BE-bcm2837-a53/gcc, netbsd/x86_64-amd/gcc, w10/x86_64-amd/wmbedtlsmsvc, openbsd/x86_64-amd/llvm, solaris/x86_64-amd/gcc\"\n\t\t},\n\t\t\"default-noudp\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITH_UDP=0\",\n\t\t\t\"platforms\":\t\"w10/x86_64-amd/msvc, w10/x86_64-amd/noptmsvc, freertos-linkit/arm32-m4-mt7697-usi/gcc, linux-ubuntu-2004/aarch64-a72-bcm2711-rpi4/gcc, w10/x86_64-amd/mingw32, w10/x86_64-amd/mingw64, netbsd/aarch64BE-bcm2837-a53/gcc, netbsd/x86_64-amd/gcc, w10/x86_64-amd/wmbedtlsmsvc\"\n\t\t},\n\t\t\"fault-injection\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITH_SYS_FAULT_INJECTION=1 -DLWS_WITH_MINIMAL_EXAMPLES=1 -DLWS_WITH_CBOR=1\",\n\t\t\t\"platforms\":\t\"w10/x86_64-amd/msvc\"\n\t\t},\n\t\t\"esp32-c3\": {\n\t\t\t\"cmake\":\t\"-DLWS_IPV6=0\",\n\t\t\t\"cpack\":\t\"esp-c3dev\",\n\t\t\t\"platforms\":\t\"none, freertos-espidf/riscv-esp32c3/gcc\"\n\t\t},\n\t\t\"esp32-heltec\": {\n\t\t\t\"cmake\":\t\"-DLWS_IPV6=0\",\n\t\t\t\"cpack\":\t\"esp-heltec-wb32\",\n\t\t\t\"platforms\":\t\"none, freertos-espidf/xl6-esp32/gcc\"\n\t\t},\n\t\t\"esp32-wrover\": {\n\t\t\t\"cmake\":\t\"-DLWS_IPV6=0 -DLWS_WITH_CBOR=1\",\n\t\t\t\"cpack\":\t\"esp-wrover-kit\",\n\t\t\t\"platforms\":\t\"none, freertos-espidf/xl6-esp32/gcc\"\n\t\t},\n\t\t\"esp32-wrover-static\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITH_SECURE_STREAMS_STATIC_POLICY_ONLY=1 -DLWS_IPV6=0\",\n\t\t\t\"cpack\":\t\"esp-wrover-kit\",\n\t\t\t\"platforms\":\t\"none, freertos-espidf/xl6-esp32/gcc\"\n\t\t},\n\t\t\"default-examples-openssl-v3-nogencrypto\": {\n\t\t\t\"cmake\":\t\"-DLWS_OPENSSL_LIBRARIES=\\\"/usr/local/src/openssl/v3/usr/local/lib64/libssl.a;/usr/local/src/openssl/v3/usr/local/lib64/libcrypto.a\\\" -DLWS_OPENSSL_INCLUDE_DIRS=\\\"/usr/local/src/openssl/v3/usr/local/include/\\\" -DLWS_WITH_MINIMAL_EXAMPLES=1 -DLWS_WITH_GENCRYPTO=0\",\n\t\t\t\"platforms\":\t\"none,linux-fedora-32/x86_64-amd/gcc\"\n\t\t},\n\t\t\"default-examples-openssl-v3-gencrypto\": {\n\t\t\t\"cmake\":\t\"-DLWS_SUPPRESS_DEPRECATED_API_WARNINGS=1 -DLWS_OPENSSL_LIBRARIES=\\\"/usr/local/src/openssl/v3/usr/local/lib64/libssl.a;/usr/local/src/openssl/v3/usr/local/lib64/libcrypto.a\\\" -DLWS_OPENSSL_INCLUDE_DIRS=\\\"/usr/local/src/openssl/v3/usr/local/include/\\\" -DLWS_WITH_MINIMAL_EXAMPLES=1 -DLWS_WITH_GENCRYPTO=1\",\n\t\t\t\"platforms\":\t\"none,linux-fedora-32/x86_64-amd/gcc\"\n\t\t},\n\t\t\"default-examples-boringssl\": {\n\t\t\t\"cmake\":\t\"cmake .. -DLWS_WITH_BORINGSSL=1 -DLWS_OPENSSL_INCLUDE_DIRS=\\\"/usr/local/src/boringssl/include\\\" -DLWS_OPENSSL_LIBRARIES=\\\"/usr/local/src/boringssl/build/ssl/libssl.so;/usr/local/src/boringssl/build/crypto/libcrypto.so\\\" -DLWS_WITH_MINIMAL_EXAMPLES=1\",\n\t\t\t\"platforms\":\t\"none,linux-fedora-32/x86_64-amd/gcc\"\n\t\t},\n\t\t\"default-examples-libressl\": {\n\t\t\t\"cmake\":\t\"cmake .. -DLWS_OPENSSL_LIBRARIES='/opt/libressl-3.3.1/build/tls/libtls.a;/opt/libressl-3.3.1/build/ssl/libssl.a;/opt/libressl-3.3.1/build/crypto/libcrypto.a' -DLWS_OPENSSL_INCLUDE_DIRS=/opt/libressl-3.3.1/include -DLWS_WITH_MINIMAL_EXAMPLES=1\",\n\t\t\t\"platforms\":\t\"none,linux-fedora-32/x86_64-amd/gcc\"\n\t\t},\n\t\t\"default-wolfssl\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITH_WOLFSSL=1 -DLWS_WOLFSSL_INCLUDE_DIRS=/usr/local/include -DLWS_WOLFSSL_LIBRARIES=/usr/local/lib/libwolfssl.so -DLWS_WITH_MINIMAL_EXAMPLES=0\",\n\t\t\t\"platforms\":\t\"none,linux-fedora-32/x86_64-amd/gcc\"\n\t\t},\n\t\t\"default-examples\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITH_MINIMAL_EXAMPLES=1\",\n\t\t\t\"platforms\":\t\"w10/x86_64-amd/msvc, w10/x86_64-amd/noptmsvc, linux-ubuntu-2004/aarch64-a72-bcm2711-rpi4/gcc, netbsd/aarch64BE-bcm2837-a53/gcc, netbsd/x86_64-amd/gcc, openbsd/x86_64-amd/llvm, solaris/x86_64-amd/gcc\"\n\t\t},\n\t\t\"default-examples-tls-sess\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITH_MINIMAL_EXAMPLES=1 -DLWS_WITH_TLS_SESSIONS=1\",\n\t\t\t\"platforms\":\t\"w10/x86_64-amd/msvc, w10/x86_64-amd/noptmsvc, linux-ubuntu-2004/aarch64-a72-bcm2711-rpi4/gcc, netbsd/aarch64BE-bcm2837-a53/gcc, netbsd/x86_64-amd/gcc, openbsd/x86_64-amd/llvm, solaris/x86_64-amd/gcc\"\n\t\t},\n\t\t\"h1only-examples\": {\n\t\t\t\"cmake\":\t\"cmake .. -DLWS_WITH_HTTP2=0 -DLWS_WITH_MINIMAL_EXAMPLES=1\",\n\t\t\t\"platforms\":\t\"none,linux-fedora-32/x86_64-amd/gcc\"\n\t\t},\n\t\t\"unix-domain\": {\n\t\t\t\"cmake\":\t\"-DUNIX_SOCK=1\",\n\t\t\t\"platforms\":\t\"w10/x86_64-amd/msvc, w10/x86_64-amd/noptmsvc\"\n\t\t},\n\t\t\"plugins\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITH_PLUGINS=1\",\n\t\t\t\"platforms\":\t\"none,linux-fedora-32/x86_64-amd/gcc,linux-debian-sid/x86-amd/gcc,linux-debian-sid/x86_64-amd/gcc\"\n\t\t},\n\t\t# WARN_DEPRECATED disabled for openssl v3 case on windows\n\t\t\"lws_system\": {\n\t\t\t\"cmake\":\t\"-DLWS_SUPPRESS_DEPRECATED_API_WARNINGS=1 -DLWS_WITH_ACME=1 -DLWS_WITH_MINIMAL_EXAMPLES=1 -DCMAKE_BUILD_TYPE=RELEASE -DLWS_WITH_GENCRYPTO=1 -DLWS_WITH_JOSE=1 -DLWS_WITH_SYS_ASYNC_DNS=1 -DLWS_WITH_SYS_NTPCLIENT=1\",\n\t\t\t\"platforms\":\t\"w10/x86_64-amd/msvc, w10/x86_64-amd/noptmsvc, openbsd/x86_64-amd/llvm\"\n\t\t},\n\t\t\"secure-streams\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITH_SECURE_STREAMS=1 -DLWS_WITH_MINIMAL_EXAMPLES=1\",\n\t\t\t\"platforms\":\t\"w10/x86_64-amd/msvc, w10/x86_64-amd/noptmsvc, openbsd/x86_64-amd/llvm, solaris/x86_64-amd/gcc\"\n\t\t},\n\t\t\"secure-streams-proxy\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITH_SECURE_STREAMS=1 -DLWS_WITH_SECURE_STREAMS_PROXY_API=1 -DLWS_WITH_MINIMAL_EXAMPLES=1 -DLWS_WITH_SECURE_STREAMS_AUTH_SIGV4=1\",\n\t\t\t\"platforms\":\t\"not w10/x86_64-amd/msvc, netbsd/aarch64BE-bcm2837-a53/gcc, netbsd/x86_64-amd/gcc, openbsd/x86_64-amd/llvm, solaris/x86_64-amd/gcc\"\n\t\t},\n\t\t\"secure-streams-proxy-metrics\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITH_SECURE_STREAMS=1 -DLWS_WITH_SECURE_STREAMS_PROXY_API=1 -DLWS_WITH_MINIMAL_EXAMPLES=1 -DLWS_WITH_SECURE_STREAMS_AUTH_SIGV4=1 -DLWS_WITH_SYS_METRICS=1\",\n\t\t\t\"platforms\":\t\"not w10/x86_64-amd/msvc, netbsd/aarch64BE-bcm2837-a53/gcc, netbsd/x86_64-amd/gcc\"\n\t\t},\n\t\t\"distro_recommended\": { # minimal examples also needed for ctest\n\t\t\t\"cmake\":\t\"-DLWS_WITH_DISTRO_RECOMMENDED=1 -DLWS_WITH_MINIMAL_EXAMPLES=1\",\n\t\t\t\"platforms\":\t\"not freebsd-12/x86_64-amd/llvm, not linkit-cross, not w10/x86_64-amd/msvc, linux-ubuntu-2004/aarch64-a72-bcm2711-rpi4/gcc, linux-fedora-32/riscv64-virt/gcc\",\n\t\t\t\"cpack\":\t\"&& cpack $SAI_CPACK\",\n\t\t\t\"artifacts\":\t\"build/*.rpm, build/*.deb, build/*.zip\"\n\t\t},\n\t\t\"lwsws\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITH_LWSWS=ON -DLWS_WITHOUT_EXTENSIONS=0 -DLWS_WITH_HTTP2=1 -DLWS_WITH_ACME=1 -DLWS_WITH_MINIMAL_EXAMPLES=1 -DCMAKE_BUILD_TYPE=DEBUG -DLWS_WITH_GENCRYPTO=1 -DLWS_WITH_JOSE=1 -DLWS_WITH_SYS_ASYNC_DNS=1 -DLWS_WITH_SYS_NTPCLIENT=1\",\n\t\t\t# no distro -devel package for libuv\n\t\t\t\"platforms\":\t\"not linux-centos-8/x86_64-amd/gcc\"\n\t\t},\n\t\t\"lwsws-nometrics\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITH_LWSWS=ON -DLWS_WITHOUT_EXTENSIONS=0 -DLWS_WITH_HTTP2=1 -DLWS_WITH_ACME=1 -DLWS_WITH_MINIMAL_EXAMPLES=1 -DCMAKE_BUILD_TYPE=DEBUG -DLWS_WITH_GENCRYPTO=1 -DLWS_WITH_JOSE=1 -DLWS_WITH_SYS_ASYNC_DNS=1 -DLWS_WITH_SYS_NTPCLIENT=1 -DLWS_WITH_SYS_METRICS=0\",\n\t\t\t# no distro -devel package for libuv\n\t\t\t\"platforms\":\t\"not linux-centos-8/x86_64-amd/gcc\"\n\t\t},\n\t\t\"lwsws2\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITH_LWSWS=ON -DLWS_WITHOUT_EXTENSIONS=0 -DLWS_WITH_HTTP2=1 -DLWS_WITH_ACME=1 -DLWS_WITH_MINIMAL_EXAMPLES=1 -DCMAKE_BUILD_TYPE=DEBUG -DLWS_WITH_LWS_DSH=1 -DLWS_WITH_CACHE_NSCOOKIEJAR=0\",\n\t\t\t# no distro -devel package for libuv\n\t\t\t\"platforms\":\t\"not linux-centos-8/x86_64-amd/gcc\"\n\t\t},\n\t\t\"justmbedtls\": {\n\t\t\t\"cmake\": \"-DLWS_WITH_MBEDTLS=1 -DLWS_WITHOUT_TESTAPPS=1\",\n\t\t\t\"platforms\": \"none, linux-android/aarch64/llvm\"\n\t\t},\n\t\t\"mbedtls\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITH_MBEDTLS=1 -DLWS_WITH_HTTP2=1 -DLWS_WITH_LWSWS=1 -DLWS_WITH_MINIMAL_EXAMPLES=1 -DLWS_WITH_JOSE=1 -DCMAKE_BUILD_TYPE=DEBUG\",\n\t\t\t# no distro -devel package for mbedtls\n\t\t\t\"platforms\":\t\"not linux-centos-7/x86_64-amd/gcc, not linux-centos-8/x86_64-amd/gcc, not linux-ubuntu-xenial/x86_64-amd/gcc\"\n\t\t},\n\t\t\"mbedtls-metrics\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITH_MBEDTLS=1 -DLWS_WITH_HTTP2=1 -DLWS_WITH_LWSWS=1 -DLWS_WITH_MINIMAL_EXAMPLES=1 -DLWS_WITH_JOSE=1 -DCMAKE_BUILD_TYPE=DEBUG -DLWS_WITH_SYS_METRICS=1\",\n\t\t\t\"platforms\":\t\"not linux-centos-7/x86_64-amd/gcc, not linux-centos-8/x86_64-amd/gcc, not linux-ubuntu-xenial/x86_64-amd/gcc\"\n\t\t},\n\t\t\"noserver\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITHOUT_SERVER=ON -DLWS_WITH_MINIMAL_EXAMPLES=1 -DLWS_WITH_SECURE_STREAMS=1\",\n\t\t\t\"platforms\":    \"w10/x86_64-amd/msvc, w10/x86_64-amd/noptmsvc\"\n\t\t},\n\t\t\"noclient\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITHOUT_CLIENT=ON -DLWS_WITH_MINIMAL_EXAMPLES=1\"\n\t\t},\n\t\t\"ext\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITHOUT_EXTENSIONS=0 -DLWS_WITH_MINIMAL_EXAMPLES=1\"\n\t\t},\n\t\t\"nonetwork\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITH_NETWORK=0\"\n\t\t},\n\t\t\"libev\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITH_LIBEV=ON\",\n\t\t\t\"platforms\":\t\"openbsd/x86_64-amd/llvm\"\n\t\t},\n\t\t\"libevent\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITH_LIBEVENT=ON\"\n\t\t},\n\t\t\"libglib\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITH_GLIB=ON\"\n\t\t},\n\t\t\"sdevent\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITH_SDEVENT=ON\",\n\t\t\t\"platforms\":\t\"none, linux-fedora-32/x86_64-amd/gcc\"\n\t\t},\n\t\t\"uncommon_headers\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITH_HTTP_BASIC_AUTH=0 -DLWS_WITH_HTTP_UNCOMMON_HEADERS=0 -DLWS_HTTP_HEADERS_ALL=0\",\n\t\t\t\"platforms\":\t\"none, linux-fedora-32/x86_64-amd/gcc\"\n\t\t},\n\t\t\"ipv6\":\t{\n\t\t\t\"cmake\":\t\"-DLWS_IPV6=ON\",\n\t\t\t\"platforms\":\t\"w10/x86_64-amd/mingw64, w10/x86_64-amd/msvc\"\n\t\t},\n\t\t\"nonetlink\":\t{\n\t\t\t\"cmake\":\t\"-DLWS_WITH_NETLINK=0\",\n\t\t\t\"platforms\":\t\"none, linux-ubuntu-2004/x86_64-amd/gcc\"\n\t\t},\n\t\t\"nossl\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITH_SSL=OFF\",\n\t\t\t\"platforms\":\t\"netbsd-iOS/aarch64/llvm\"\n\t\t},\n\t\t\"daemon\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITHOUT_DAEMONIZE=OFF\"\n\t\t},\n\t\t\"cgi\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITH_CGI=ON\"\n\t\t},\n\t\t\"nologs\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITH_NO_LOGS=ON\"\n\t\t},\n\t\t\"cookiejar\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITH_CACHE_NSCOOKIEJAR=ON\"\n\t\t},\n\t\t\"jittrust\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITH_TLS_JIT_TRUST=1\",\n\t\t\t\"platforms\":\t\"none, linux-fedora-32/x86_64-amd/gcc\"\n\t\t},\n\t\t\"smp\": {\n\t\t\t\"cmake\":\t\"-DLWS_MAX_SMP=32 -DLWS_WITH_MINIMAL_EXAMPLES=1\"\n\t\t},\n\t\t\"nows\": {\n\t\t\t\"cmake\":\t\"-DLWS_ROLE_WS=0\"\n\t\t},\n\t\t\"threadpool\": {\n\t\t\t\"cmake\":\t\"-DLWS_WITH_THREADPOOL=1 -DLWS_WITH_MINIMAL_EXAMPLES=1\",\n\t\t\t\"platforms\":\t\"w10/x86_64-amd/msvc\"\n\t\t}\n\t}\n}\n\n"
        },
        {
          "name": "CMakeLists-implied-options.txt",
          "type": "blob",
          "size": 11.34765625,
          "content": "#\n# libwebsockets - small server side websockets and web server implementation\n#\n# Copyright (C) 2010 - 2020 Andy Green <andy@warmcat.com>\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to\n# deal in the Software without restriction, including without limitation the\n# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n# sell copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in\n# all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n# IN THE SOFTWARE.\n#\n# This part of the CMakeLists.txt defines internal logic between options\n\nif(IOS)\n    set(LWS_DETECTED_PLAT_IOS 1)\nendif()\n\n# Workaround for ESP-IDF\n# Detect ESP_PLATFORM environment flag, if exist, set LWS_WITH_ESP32.\n# Otherwise the user may not be able to run configuration ESP-IDF in the first time.\nif (ESP_PLATFORM)\n\tmessage(STATUS \"ESP-IDF enabled\")\n\tset(LWS_WITH_ESP32 ON)\n\tset(LWS_WITH_ZLIB OFF)\n\tset(LWS_HAVE_mbedtls_ssl_get_alpn_protocol 1)\nelse()\n\tset(LWS_WITH_ESP32_HELPER OFF)\nendif()\n\nif (LWS_WITH_ESP32)\n\tset(LWS_PLAT_FREERTOS 1)\nendif()\n\nif (LWS_PLAT_OPTEE)\n\tset(LWS_WITH_UDP 0)\nendif()\n\nif (LWS_PLAT_FREERTOS OR (${CMAKE_SYSTEM_NAME} MATCHES \"QNX\"))\n\tmessage(STATUS \"No LWS_WITH_DIR or LWS_WITH_LEJP_CONF\")\n\tset(LWS_WITH_DIR OFF)\n\tset(LWS_WITH_LEJP_CONF OFF)\n\tmessage(\"LWS_WITH_DIR ${LWS_WITH_DIR}\")\nelse()\n\tmessage(STATUS \"Compiled with LWS_WITH_DIR and LWS_WITH_LEJP_CONF\")\n\tset(LWS_WITH_DIR ON)\n\tset(LWS_WITH_LEJP_CONF ON)\nendif()\n\nif (LWS_FOR_GITOHASHI)\n\tset(LWS_WITH_THREADPOOL 1)\n\tset(LWS_WITH_HTTP2 1)\n\tset(LWS_UNIX_SOCK 1)\n\tset(LWS_WITH_HTTP_PROXY 1)\n\tset(LWS_WITH_FTS 1)\n\tset(LWS_WITH_DISKCACHE 1)\n\tset(LWS_WITH_LWSAC 1)\n\tset(LWS_WITH_LEJP_CONF 1)\n\tset(LWS_WITH_SPAWN 1)\n\tset(LWS_WITH_FSMOUNT 1)\n\tset(LWS_WITH_STRUCT_JSON 1)\n\tset(LWS_WITH_STRUCT_SQLITE3 1)\nendif()\n\nif(LWS_WITH_DISTRO_RECOMMENDED)\n\tset(LWS_WITH_HTTP2 1)\t\t\t\t# selfcontained\n\tset(LWS_WITH_LWSWS 1)\t\t\t\t# libuv\n\tset(LWS_WITH_CGI 1)\t\t\t\t# selfcontained\n\tset(LWS_WITH_HTTP_STREAM_COMPRESSION 1)\t\t# libz and brotli if avail\n\tset(LWS_IPV6 1)\t\t\t\t\t# selfcontained\n\tset(LWS_WITH_ZIP_FOPS 1)\t\t\t# libz\n\tset(LWS_WITH_SOCKS5 1)\t\t\t\t# selfcontained\n\tset(LWS_WITH_RANGES 1)\t\t\t\t# selfcontained\n\tset(LWS_WITH_ACME 1)\t\t\t\t# selfcontained / tls\n\tset(LWS_WITH_SYS_METRICS 1)\t\t\t# selfcontained\n\tset(LWS_WITH_GLIB 1)\t\t\t\t# glib\n\tset(LWS_WITH_LIBUV 1)\t\t\t\t# libuv\n\tset(LWS_WITH_LIBEV 1)\t\t\t\t# libev\n\tset(LWS_WITH_LIBEVENT 1)\t\t\t# libevent\n\tset(LWS_WITH_EVLIB_PLUGINS 1)\t\t\t# event libraries created as plugins / individual packages\n\tset(LWS_WITHOUT_EXTENSIONS 0)\t\t\t# libz\n\tset(LWS_ROLE_DBUS 1)\t\t\t\t# dbus-related libs\n\tset(LWS_WITH_FTS 1)\t\t\t\t# selfcontained\n\tset(LWS_WITH_THREADPOOL 1)\t\t\t# pthreads\n\tset(LWS_UNIX_SOCK 1)\t\t\t\t# selfcontained\n\tset(LWS_WITH_HTTP_PROXY 1)\t\t\t# selfcontained\n\tset(LWS_WITH_DISKCACHE 1)\t\t\t# selfcontained\n\tset(LWS_WITH_LWSAC 1)\t\t\t\t# selfcontained\n\tset(LWS_WITH_LEJP_CONF 1)\t\t\t# selfcontained\n\tset(LWS_WITH_PLUGINS_BUILTIN 1)\t\t\t# selfcontained\n\tset(LWS_ROLE_RAW_PROXY 1)\t\t\t# selfcontained\n\tset(LWS_WITH_GENCRYPTO 1)\t\t\t# selfcontained / tls\n\tset(LWS_WITH_CBOR 1)\t\t\t\t# selfcontained\n\tset(LWS_WITH_COSE 1)\t\t\t\t# selfcontained\n\tset(LWS_WITH_JOSE 1)\t\t\t\t# selfcontained\n\tset(LWS_WITH_STRUCT_JSON 1)\t\t\t# selfcontained\n\tset(LWS_WITH_STRUCT_SQLITE3 1)\t\t\t# sqlite3\n\tset(LWS_WITH_SPAWN 1)\t\t\t\t# selfcontained\n# libmount is problematic on Centos 8 / RHEL 8\n#\tset(LWS_WITH_FSMOUNT 1)\n\tset(LWS_ROLE_MQTT 1)\t\t\t\t# selfcontained\n\tset(LWS_WITH_SECURE_STREAMS 1)\t\t\t# selfcontained\n\tset(LWS_WITH_SECURE_STREAMS_PROXY_API 1)\t# selfcontained\n\tset(LWS_WITH_DIR 1)\t\t\t\t# selfcontained\nendif()\n\n# LWS_WITH_EVENT_LIBS is set if any event lib selected\n\nif (LWS_WITH_LIBEV OR\n    LWS_WITH_LIBUV OR\n    LWS_WITH_LIBEVENT OR\n    LWS_WITH_GLIB OR\n    LWS_WITH_SDEVENT OR\n    LWS_WITH_ULOOP)\n\tset(LWS_WITH_EVENT_LIBS 1)\nelse()\n\tunset(LWS_WITH_EVENT_LIBS)\nendif()\n\nif (LWS_WITH_SECURE_STREAMS_PROXY_API)\n\tset(LWS_WITH_LWS_DSH 1)\n\tset(LWS_WITH_UNIX_SOCK 1)\n\tset(LWS_WITH_SYS_SMD 1)\n\tset(LWS_WITH_SECURE_STREAMS 1)\nendif()\n\nif (NOT LWS_WITH_NETWORK)\n\tset(LWS_ROLE_MQTT 0)\n\tset(LWS_ROLE_H1 0)\n\tset(LWS_ROLE_WS 0)\n\tset(LWS_ROLE_RAW 0)\n\tset(LWS_WITHOUT_EXTENSIONS 1)\n\tset(LWS_WITHOUT_SERVER 1)\n\tset(LWS_WITHOUT_CLIENT 1)\n\tset(LWS_WITH_HTTP2 0)\n\tset(LWS_WITH_SOCKS5 0)\n\tset(LWS_UNIX_SOCK 0)\n\tset(LWS_WITH_HTTP_PROXY 0)\n\tset(LWS_WITH_PLUGINS 0)\n\tset(LWS_WITH_LWSWS 0)\n\tset(LWS_WITH_CGI 0)\n\tset(LWS_ROLE_RAW_PROXY 0)\n\tset(LWS_WITH_PEER_LIMITS 0)\n\tset(LWS_WITH_HTTP_STREAM_COMPRESSION 0)\n\tset(LWS_WITH_HTTP_BROTLI 0)\n\tset(LWS_WITH_POLL 0)\n\tset(LWS_ROLE_DBUS 0)\n\tset(LWS_WITH_LWS_DSH 0)\n\tset(LWS_WITH_THREADPOOL 0)\n\tset(LWS_WITH_SYS_SMD 0)\n\tset(LWS_WITH_LHP 0)\nendif()\n\nif (LWS_WITH_CGI)\n\tset(LWS_WITH_SPAWN 1)\nendif()\n\nif (LWS_WITH_STRUCT_SQLITE3)\n\tset(LWS_WITH_SQLITE3 1)\nendif()\n\nif (LWS_WITH_HTTP_BASIC_AUTH)\n\t# WWW_AUTHENTICATE used by basic auth is an \"uncommon header\"\n\tset(LWS_WITH_HTTP_UNCOMMON_HEADERS 1)\nendif()\n\nif (LWS_WITH_SECURE_STREAMS_AUTH_SIGV4)\n\tset(LWS_WITH_GENCRYPTO 1)\nendif()\n\nif (LWS_WITH_HTTP_DIGEST_AUTH)\n\tset(LWS_WITH_GENCRYPTO 1)\nendif()\n\nif (APPLE)\n\tset(LWS_ROLE_DBUS 0)\nendif()\n\nif(NOT DEFINED CMAKE_BUILD_TYPE)\n\tset(CMAKE_BUILD_TYPE Release CACHE STRING \"Build type\")\nendif()\n\nif (LWS_PLAT_FREERTOS)\n\tset(LWS_UNIX_SOCK 0)\nendif()\n\nif (LWS_PLAT_FREERTOS)\n\tset(LWS_WITH_FTS 0)\nendif()\n\nif (LWS_WITH_HTTP2)\n\tset(LWS_ROLE_H2 1)\nendif()\nif (LWS_WITH_CGI)\n\tset(LWS_ROLE_CGI 1)\nendif()\n\nif (NOT LWS_ROLE_WS)\n\tset(LWS_WITHOUT_EXTENSIONS 1)\nendif()\n\nunset(LWS_WITH_LIBUV_INTERNAL)\n\nif (LWS_WITH_LWSWS)\n message(STATUS \"LWS_WITH_LWSWS --> Enabling LWS_WITH_PLUGINS and LWS_WITH_LIBUV\")\n set(LWS_WITH_PLUGINS 1)\n set(LWS_WITH_LIBUV 1)\n set(LWS_WITH_LIBUV_INTERNAL 1)\n set(LWS_WITH_EVENT_LIBS 1) # implied by LIBUV_INTERNAL\n set(LWS_WITH_ACCESS_LOG 1)\n set(LWS_WITH_SYS_METRICS 1)\n set(LWS_WITH_LEJP 1)\n set(LWS_WITH_LEJP_CONF 1)\n set(LWS_WITH_PEER_LIMITS 1)\n set(LWS_ROLE_RAW_PROXY 1)\nendif()\n\n# sshd plugin\nif (LWS_WITH_PLUGINS)\n set(LWS_WITH_GENCRYPTO 1)\nendif()\n\nif (LWS_ROLE_RAW_PROXY)\n set (LWS_WITH_CLIENT 1)\n set (LWS_WITH_SERVER 1)\nendif()\n\nif (LWS_WITH_ACME)\n set (LWS_WITH_CLIENT 1)\n set (LWS_WITH_SERVER 1)\n set (LWS_WITH_JOSE 1)\nendif()\n\nif (LWS_WITH_JOSE)\n set(LWS_WITH_LEJP 1)\n set(LWS_WITH_GENCRYPTO 1)\nendif()\n\nif (LWS_WITH_PLUGINS AND NOT LWS_WITH_LIBUV)\nmessage(STATUS \"LWS_WITH_PLUGINS --> Enabling LWS_WITH_LIBUV\")\n set(LWS_WITH_LIBUV 1)\n set(LWS_WITH_EVENT_LIBS 1)\nendif()\n\nif (LWS_WITH_PLUGINS OR LWS_WITH_CGI)\n\t# sshd plugin\n set(LWS_WITH_GENCRYPTO 1)\nendif()\n\nif (LWS_PLAT_FREERTOS)\n set(LWS_WITH_SHARED OFF)\n if (LWS_WITH_SSL)\n  set(LWS_WITH_MBEDTLS ON)\n endif()\n  # set(LWS_WITHOUT_CLIENT ON)\n set(LWS_WITHOUT_TESTAPPS ON)\n set(LWS_WITHOUT_EXTENSIONS ON)\n set(LWS_WITH_PLUGINS OFF)\n set(LWS_WITH_RANGES ON)\n # this implies no pthreads in the lib\n set(LWS_MAX_SMP 1)\n set(LWS_HAVE_MALLOC 1)\n set(LWS_HAVE_REALLOC 1)\n set(LWS_HAVE_GETIFADDRS 1)\n set(LWS_WITH_CUSTOM_HEADERS 0)\nendif()\n\nif (LWS_WITHOUT_TESTAPPS)\n\tset(LWS_WITH_MINIMAL_EXAMPLES 0)\nendif()\n\n#if (LWS_WITH_ESP32)\n# set(LWS_WITH_ZIP_FOPS 1)\n#endif()\n\nif (WIN32)\n#set(LWS_MAX_SMP 1)\nif (LWS_WITH_PLUGINS)\nset(LWS_WITH_LIBUV_INTERNAL 1)\nendif()\nendif()\n\nif (LWS_WITHOUT_SERVER)\nset(LWS_WITH_LWSWS OFF)\nendif()\n\nif (LWS_WITH_LEJP_CONF)\n\tset(LWS_WITH_DIR 1)\nendif()\n\n# confirm H1 relationships\n\nif (NOT LWS_ROLE_H1 AND LWS_ROLE_H2)\n\tmessage(FATAL_ERROR \"H2 requires LWS_ROLE_H1\")\nendif()\n\nif (NOT LWS_ROLE_H1 AND LWS_ROLE_WS)\n\tmessage(FATAL_ERROR \"WS requires LWS_ROLE_H1\")\nendif()\n\nif (NOT LWS_ROLE_H1 AND LWS_ROLE_CGI)\n\tmessage(FATAL_ERROR \"CGI requires LWS_ROLE_H1\")\nendif()\n\n# confirm HTTP relationships\n\nif (NOT LWS_ROLE_H1 AND NOT LWS_ROLE_H2 AND LWS_WITH_HTTP_PROXY)\n\tmessage(FATAL_ERROR \"LWS_WITH_LWSWS requires LWS_ROLE_H1\")\nendif()\n\nif (NOT LWS_ROLE_H1 AND NOT LWS_ROLE_H2 AND LWS_WITH_HTTP_PROXY)\n\tmessage(FATAL_ERROR \"LWS_WITH_HTTP_PROXY requires LWS_ROLE_H1\")\nendif()\n\nif (NOT LWS_ROLE_H1 AND NOT LWS_ROLE_H2 AND LWS_WITH_RANGES)\n\tmessage(FATAL_ERROR \"LWS_WITH_RANGES requires LWS_ROLE_H1\")\nendif()\n\nif (NOT LWS_ROLE_H1 AND NOT LWS_ROLE_H2 AND LWS_WITH_ACCESS_LOG)\n\tmessage(FATAL_ERROR \"LWS_WITH_ACCESS_LOG requires LWS_ROLE_H1\")\nendif()\n\nif (LWS_WITH_HTTP_PROXY AND (LWS_WITHOUT_CLIENT OR LWS_WITHOUT_SERVER))\n\tmessage(\"You have to enable both client and server for http proxy\")\n\tset(LWS_WITH_HTTP_PROXY 0)\nendif()\n\nif (NOT LWS_WITHOUT_EXTENSIONS OR LWS_WITH_ZIP_FOPS)\n\tset(LWS_WITH_ZLIB 1)\nendif()\n\nif (LWS_WITH_SECURE_STREAMS)\n\tset(LWS_WITH_SECURE_STREAMS_SYS_AUTH_API_AMAZON_COM 1)\nendif()\n\nif (NOT (LWS_WITH_STATIC OR LWS_WITH_SHARED))\n\tmessage(FATAL_ERROR \"Makes no sense to compile with neither static nor shared libraries.\")\nendif()\n\nif (LWS_WITHOUT_DAEMONIZE OR WIN32)\n\tset(LWS_NO_DAEMONIZE 1)\nendif()\n\nif (LWS_IPV6)\n\tset(LWS_WITH_IPV6 1)\nendif()\n\nif (LWS_UNIX_SOCK)\n    set(LWS_WITH_UNIX_SOCK 1)\nendif()\n\nif (NOT LWS_MAX_SMP)\n\tset(LWS_MAX_SMP 1)\nendif()\nif (\"${LWS_MAX_SMP}\" STREQUAL \"\")\n\tset(LWS_MAX_SMP 1)\nendif()\n\nset(LWS_WITH_CLIENT 1)\nif (LWS_WITHOUT_CLIENT)\n\tset(LWS_WITH_CLIENT 0)\n\tset(LWS_WITH_SECURE_STREAMS 0)\n\tset(LWS_WITH_SECURE_STREAMS_PROXY_API 0)\n\tset(LWS_WITH_LHP 0)\nendif()\nset(LWS_WITH_SERVER 1)\nif (LWS_WITHOUT_SERVER)\n\tset(LWS_WITH_SERVER)\nendif()\n\nif (LWS_WITH_SERVER)\nelse()\n\tset(LWS_WITH_CGI 0)\n\tset(LWS_ROLE_CGI 0)\nendif()\n\nif (LWS_WITH_UPNG)\n\tset(LWS_WITH_GZINFLATE 1)\nendif()\n\nif (LWS_WITH_OTA)\n\tset(LWS_WITH_JOSE 1)\n\tset(LWS_WITH_GENCRYPTO 1)\n\tset(LWS_WITH_GZINFATE 1)\nendif()\n\nif (LWS_WITH_LHP)\n\tset(LWS_WITH_CLIENT 1)\n\tset(LWS_WITH_SECURE_STREAMS 1)\nendif()\n\n# using any abstract protocol enables LWS_WITH_ABSTRACT\n\n#if (LWS_WITH_SMTP)\n#\tset(LWS_WITH_ABSTRACT 1)\n#endif()\n\nif (NOT LWS_WITH_EVLIB_PLUGINS AND (LWS_WITH_LIBEV AND LWS_WITH_LIBEVENT))\n\tmessage(FATAL_ERROR \"Sorry libev and libevent conflict with each others' namespace, you can only have one or the other\")\nendif()\n\nif (LWS_SSL_SERVER_WITH_ECDH_CERT)\n\tset(LWS_SSL_SERVER_WITH_ECDH_CERT 1)\nendif()\n\n# LWS_OPENSSL_SUPPORT deprecated... use LWS_WITH_TLS\nif (LWS_WITH_SSL OR LWS_WITH_MBEDTLS)\n\tset(LWS_OPENSSL_SUPPORT 1)\n\tset(LWS_WITH_TLS 1)\nendif()\n\nif (NOT LWS_WITH_SSL)\n\tset(LWS_WITHOUT_BUILTIN_SHA1 OFF)\nendif()\n# protocol plugins dont make any sense either\nif (LWS_WITH_PLUGINS AND NOT LWS_WITH_SHARED)\n\tmessage(\"Deselecting PLUGINS since building static\")\n\tset(LWS_WITH_PLUGINS 0)\nendif()\n\nif (LWS_WITH_TLS_SESSIONS)\n\tif (NOT LWS_WITH_NETWORK OR NOT LWS_WITH_CLIENT)\n\t\tmessage(\"TLS_SESSIONS support requires client, disabling\")\n\t\tset(LWS_WITH_TLS_SESSIONS OFF)\n\tendif()\nendif()\n\n# if we're only building static, we don't want event lib plugins\n#\nif (LWS_WITH_EVLIB_PLUGINS AND NOT LWS_WITH_SHARED)\n\tmessage(\"Deselecting EVLIB_PLUGINS since building static\")\n\tset(LWS_WITH_EVLIB_PLUGINS 0)\nendif()\n\nif (LWS_WITH_PLUGINS OR (LWS_WITH_EVLIB_PLUGINS AND LWS_WITH_EVENT_LIBS))\n\tset(LWS_WITH_PLUGINS_API 1)\nendif()\n\nif (WIN32 AND NOT LWS_EXT_PTHREAD_LIBRARIES)\n        set(LWS_MAX_SMP 1)\n        message(\"SMD requires pthreads\")\n        set(LWS_WITH_SYS_SMD 0)\nendif()\n\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 46.6484375,
          "content": "#\n# libwebsockets - small server side websockets and web server implementation\n#\n# Copyright (C) 2010 - 2022 Andy Green <andy@warmcat.com>\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to\n# deal in the Software without restriction, including without limitation the\n# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n# sell copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in\n# all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n# IN THE SOFTWARE.\n#\n\nif (PICO_SDK_PATH)\n\tcmake_minimum_required(VERSION 3.13)\nelse()\n\tcmake_minimum_required(VERSION 3.5)\nendif()\ninclude(CheckFunctionExists)\ninclude(CheckSymbolExists)\ninclude(CheckIncludeFile)\ninclude(CheckIncludeFiles)\ninclude(CheckLibraryExists)\ninclude(CheckTypeSize)\ninclude(CheckCSourceCompiles)\nif (PICO_SDK_PATH)\n\tinclude(cmake/pico_sdk_import.cmake)\nendif()\n\n\nif (POLICY CMP0048)\n\tcmake_policy(SET CMP0048 NEW)\nendif()\n\n#if (POLICY CMP0024)\n#\tcmake_policy(SET CMP0024 NEW)\n#endif()\n\nif (POLICY CMP0075)\n\tcmake_policy(SET CMP0075 NEW)\nendif()\n\n# General Advice\n#\n# For selecting between DEBUG / RELEASE, use -DCMAKE_BUILD_TYPE=DEBUG or =RELEASE\n#   debug builds include source level debug info and extra logging\n\nset(LWS_WITH_BUNDLED_ZLIB_DEFAULT OFF)\nif(WIN32)\n\tset(LWS_WITH_BUNDLED_ZLIB_DEFAULT ON)\nendif()\n\nset(LWS_ROLE_RAW 1)\nset(LWS_WITH_POLL 1)\n\nif (ESP_PLATFORM)\n\tset(LWS_ESP_PLATFORM 1)\n\t#set(CMAKE_TOOLCHAIN_FILE contrib/cross-esp32.cmake)\n\tset(LWIP_PROVIDE_ERRNO 1)\nendif()\n\n# it's at this point any toolchain file is brought in\nproject(libwebsockets C)\nif (LWS_WITH_SECURE_STREAMS_CPP)\n\tenable_language(CXX)\nendif()\ninclude(CTest)\n\nif (PICO_SDK_PATH)\n\tpico_sdk_init()\nendif()\n\nif (ESP_PLATFORM)\n       include_directories(\n\t\t$ENV{IDF_PATH}/components/esp_hw_support/include/soc/\n\t\t$ENV{IDF_PATH}/components/freertos/include/\n\t\t$ENV{IDF_PATH}/components/lwip/include/\n\t\t$ENV{IDF_PATH}/components/freertos/esp_additions/include/\n\t\t$ENV{IDF_PATH}/components/freertos/esp_additions/include/freertos/\n\t\t$ENV{IDF_PATH}/components/freertos/FreeRTOS-Kernel/include/\n\t\t$ENV{IDF_PATH}/components/freertos/FreeRTOS-Kernel/portable/linux/include/\n\t\t$ENV{IDF_PATH}/components/xtensa/${CONFIG_IDF_TARGET}/include/\n\t\t$ENV{IDF_PATH}/components/freertos/include/esp_additions\n\t\t$ENV{IDF_PATH}/components/hal/include\n\t\t$ENV{IDF_PATH}/components/soc/${CONFIG_IDF_TARGET}/include/\n\t\t$ENV{IDF_PATH}/components/soc/include/\n\t\t$ENV{IDF_PATH}/components/esp_hw_support/include\n\t\t$ENV{IDF_PATH}/components/hal/${CONFIG_IDF_TARGET}/include/\n\t\t$ENV{IDF_PATH}/components/app_update/include/\n\t\t$ENV{IDF_PATH}/components/bootloader_support/include\n\t\t$ENV{IDF_PATH}/components/lwip/port/include\n\t\t$ENV{IDF_PATH}/components/lwip/port/freertos/include\n\t\t$ENV{IDF_PATH}/components/lwip/port/esp32xx/include\n\t\t$ENV{IDF_PATH}/components/freertos/config/include/freertos/\n\t\t$ENV{IDF_PATH}/components/freertos/config/${CONFIG_IDF_TARGET_ARCH}/include\n\t\t$ENV{IDF_PATH}/components/freertos/FreeRTOS-Kernel/portable/${CONFIG_IDF_TARGET_ARCH}/include\n\t\t$ENV{IDF_PATH}/components/freertos/FreeRTOS-Kernel/portable/${CONFIG_IDF_TARGET_ARCH}/include/freertos\n\t\t$ENV{IDF_PATH}/components/freertos/config/include\n\t\t$ENV{IDF_PATH}/components/esp_driver_gpio/include\n\t\t$ENV{IDF_PATH}/components/esp_driver_spi/include\n\t\t$ENV{IDF_PATH}/components/esp_driver_ledc/include\n\t\t$ENV{IDF_PATH}/components/esp_partition/include\n\t\t$ENV{IDF_PATH}/components/spi_flash/include\n\t\t$ENV{IDF_PATH}/components/esp_app_format/include\n\t\t$ENV{IDF_PATH}/components/esp_bootloader_format/include\n\t\t$ENV{IDF_PATH}/components/esp_system/include/\n\t)\n\n\tif (CONFIG_IDF_TARGET_ARCH_RISCV)\n                include_directories(\n                       $ENV{IDF_PATH}/components/freertos/port/riscv/include\n                       $ENV{IDF_PATH}/components/riscv/include)\n        else()\n                include_directories(\n                       $ENV{IDF_PATH}/components/freertos/port/xtensa/include\n                       $ENV{IDF_PATH}/components/xtensa/include)\n        endif()\n\nendif()\n\n\n#\n# Select features recommended for PC distro packaging\n#\noption(LWS_WITH_DISTRO_RECOMMENDED \"Enable features recommended for distro packaging\" OFF)\noption(LWS_FOR_GITOHASHI \"Enable features recommended for use with gitohashi\" OFF)\n\n#\n# Compiler features\n#\noption(DISABLE_WERROR \"Avoid treating compiler warnings as fatal errors\" OFF)\n\n#\n# Major individual features\n#\noption(LWS_WITH_NETWORK \"Compile with network-related code\" ON)\noption(LWS_ROLE_H1 \"Compile with support for http/1 (needed for ws)\" ON)\noption(LWS_ROLE_WS \"Compile with support for websockets\" ON)\noption(LWS_ROLE_MQTT \"Build with support for MQTT client\" OFF)\noption(LWS_ROLE_DBUS \"Compile with support for DBUS\" OFF)\noption(LWS_ROLE_RAW_PROXY \"Raw packet proxy\" OFF)\noption(LWS_ROLE_RAW_FILE \"Compile with support for raw files\" ON)\noption(LWS_WITH_HTTP2 \"Compile with server support for HTTP/2\" ON)\noption(LWS_WITH_LWSWS \"Libwebsockets Webserver\" OFF)\noption(LWS_WITH_CGI \"Include CGI (spawn process with network-connected stdin/out/err) APIs\" OFF)\noption(LWS_IPV6 \"Compile with support for ipv6\" OFF)\noption(LWS_UNIX_SOCK \"Compile with support for UNIX domain socket if OS supports it\" ON)\noption(LWS_WITH_PLUGINS \"Support plugins for protocols and extensions (implies LWS_WITH_PLUGINS_API)\" OFF)\noption(LWS_WITH_PLUGINS_BUILTIN \"Build the plugin protocols directly into lws library\" OFF)\noption(LWS_WITH_HTTP_PROXY \"Support for active HTTP proxying\" OFF)\noption(LWS_WITH_ZIP_FOPS \"Support serving pre-zipped files\" OFF)\noption(LWS_WITH_SOCKS5 \"Allow use of SOCKS5 proxy on client connections\" OFF)\noption(LWS_WITH_PEER_LIMITS \"Track peers and restrict resources a single peer can allocate\" OFF)\noption(LWS_WITH_ACCESS_LOG \"Support generating Apache-compatible access logs\" OFF)\noption(LWS_WITH_RANGES \"Support http ranges (RFC7233)\" OFF)\noption(LWS_WITH_THREADPOOL \"Managed worker thread pool support (relies on pthreads)\" OFF)\noption(LWS_WITH_HTTP_STREAM_COMPRESSION \"Support HTTP stream compression\" OFF)\noption(LWS_WITH_HTTP_BROTLI \"Also offer brotli http stream compression (requires LWS_WITH_HTTP_STREAM_COMPRESSION)\" OFF)\noption(LWS_WITH_ACME \"Enable support for ACME automatic cert acquisition + maintenance (letsencrypt etc)\" OFF)\noption(LWS_WITH_HUBBUB \"Enable libhubbub rewriting support\" OFF)\noption(LWS_WITH_ALSA \"Enable alsa audio example\" OFF)\noption(LWS_WITH_GTK \"Enable gtk example\" OFF)\noption(LWS_WITH_FTS \"Full Text Search support\" OFF)\noption(LWS_WITH_SYS_ASYNC_DNS \"Nonblocking internal IPv4 + IPv6 DNS resolver\" OFF)\noption(LWS_WITH_SYS_NTPCLIENT \"Build in tiny ntpclient good for tls date validation and run via lws_system\" OFF)\noption(LWS_WITH_SYS_DHCP_CLIENT \"Build in tiny DHCP client\" OFF)\noption(LWS_WITH_HTTP_BASIC_AUTH \"Support Basic Auth\" ON)\noption(LWS_WITH_HTTP_DIGEST_AUTH \"Support Digest Auth (caution deprecated crypto)\" ON)\noption(LWS_WITH_HTTP_UNCOMMON_HEADERS \"Include less common http header support\" ON)\noption(LWS_WITH_SYS_STATE \"lws_system state support\" ON)\noption(LWS_WITH_SYS_SMD \"Lws System Message Distribution\" ON)\noption(LWS_WITH_SYS_FAULT_INJECTION \"Enable fault injection support\" OFF)\noption(LWS_WITH_SYS_METRICS \"Lws Metrics API\" OFF)\noption(LWS_WITH_UPNG \"Enable stateful PNG stream decoder\" ON)\noption(LWS_WITH_GZINFLATE \"Enable internal minimal gzip inflator\" ON)\noption(LWS_WITH_JPEG \"Enable stateful JPEG stream decoder\" ON)\noption(LWS_WITH_DLO \"Enable Display List Objects\" ON)\n\n#\n# Secure Streams\n#\noption(LWS_WITH_SECURE_STREAMS \"Secure Streams protocol-agnostic API\" ON)\noption(LWS_WITH_SECURE_STREAMS_CPP \"Secure Streams C++ classes\" OFF)\noption(LWS_WITH_SECURE_STREAMS_PROXY_API \"Secure Streams support to work across processes\" OFF)\noption(LWS_WITH_SECURE_STREAMS_SYS_AUTH_API_AMAZON_COM \"Auth support for api.amazon.com\" OFF)\noption(LWS_WITH_SECURE_STREAMS_STATIC_POLICY_ONLY \"Secure Streams Policy is hardcoded only\" OFF)\noption(LWS_WITH_SECURE_STREAMS_AUTH_SIGV4 \"Secure Streams Auth support for AWS Sigv4\" OFF)\noption(LWS_WITH_SECURE_STREAMS_BUFFER_DUMP \"Secure Streams protocol buffer dump\" OFF)\noption(LWS_WITH_SS_DIRECT_PROTOCOL_STR \"Secure Streams directly set/get metadata w/o policy\" OFF)\noption(LWS_ONLY_SSPC \"Remove everything from library except standalone SSPC client support\" OFF)\n\n#\n# CTest options\n#\n#\n# If you build with LWS_WITH_MINIMAL_EXAMPLES, you can use CTest / make test to run\n# examples that can give a pass/fail response.  By default it runs tests both against\n# a local server peer and warmcat.com, if your CI wants to do the tests but does not\n# have internet routing, then you can still run a subset of tests with CTest / make\n# test that only does local tests by disabling this option.\n#\noption(LWS_CTEST_INTERNET_AVAILABLE \"CTest will performs tests that need the Internet\" ON)\n\n#\n# TLS library options... all except mbedTLS are basically OpenSSL variants.\n#\noption(LWS_WITH_SSL \"Include SSL support (defaults to OpenSSL or similar, mbedTLS if LWS_WITH_MBEDTLS is set)\" ON)\noption(LWS_WITH_MBEDTLS \"Use mbedTLS (>=2.0) replacement for OpenSSL. When setting this, you also may need to specify LWS_MBEDTLS_LIBRARIES and LWS_MBEDTLS_INCLUDE_DIRS\" OFF)\noption(LWS_WITH_BORINGSSL \"Use BoringSSL replacement for OpenSSL\" OFF)\noption(LWS_WITH_CYASSL \"Use CyaSSL replacement for OpenSSL. When setting this, you also need to specify LWS_CYASSL_LIBRARIES and LWS_CYASSL_INCLUDE_DIRS\" OFF)\noption(LWS_WITH_WOLFSSL \"Use wolfSSL replacement for OpenSSL. When setting this, you also may need to specify LWS_WOLFSSL_LIBRARIES and LWS_WOLFSSL_INCLUDE_DIRS\" OFF)\noption(LWS_SSL_CLIENT_USE_OS_CA_CERTS \"SSL support should make use of the OS-installed CA root certs\" ON)\noption(LWS_TLS_LOG_PLAINTEXT_RX \"For debugging log the received plaintext as soon as decrypted\" OFF)\noption(LWS_TLS_LOG_PLAINTEXT_TX \"For debugging log the transmitted plaintext just before encryption\" OFF)\noption(LWS_WITH_TLS_SESSIONS \"Enable persistent, resumable TLS sessions\" ON)\noption(LWS_WITH_TLS_JIT_TRUST \"Enable dynamically computing which trusted TLS CA is needed to be instantiated\" OFF)\n\n#\n# Event library options (may select multiple, or none for default poll()\n#\noption(LWS_WITH_LIBEV \"Compile with support for libev\" OFF)\noption(LWS_WITH_LIBUV \"Compile with support for libuv\" OFF)\noption(LWS_WITH_LIBEVENT \"Compile with support for libevent\" OFF)\noption(LWS_WITH_GLIB \"Compile with support for glib event loop\" OFF)\noption(LWS_WITH_SDEVENT \"Compile with support for sd-event loop\" OFF)\noption(LWS_WITH_ULOOP \"Compile with support for uloop\" OFF)\n\nif (UNIX)\n# since v4.1, on unix platforms default is build any event libs as runtime plugins\noption(LWS_WITH_EVLIB_PLUGINS \"Compile event lib support into runtime-selected plugins\" ON)\nelse()\n# otherwise default to linking the event lib(s) to libwebsockets.so\noption(LWS_WITH_EVLIB_PLUGINS \"Compile event lib support into runtime-selected plugins\" OFF)\nendif()\n#\n# LWS Drivers\n#\n\noption(LWS_WITH_DRIVERS \"With generic drivers for gpio, i2c, display etc\" OFF)\n\n#\n# Static / Dynamic build options\n#\noption(LWS_WITH_STATIC \"Build the static version of the library\" ON)\noption(LWS_WITH_SHARED \"Build the shared version of the library\" ON)\noption(LWS_LINK_TESTAPPS_DYNAMIC \"Link the test apps to the shared version of the library. Default is to link statically\" OFF)\noption(LWS_STATIC_PIC \"Build the static version of the library with position-independent code\" OFF)\noption(LWS_SUPPRESS_DEPRECATED_API_WARNINGS \"Turn off complaints about, eg, openssl 3 deprecated api usage\" ON)\n\n#\n# Specific platforms\n#\noption(LWS_WITH_ESP32 \"Build for ESP32\" OFF)\noption(LWS_PLAT_OPTEE \"Build for OPTEE\" OFF)\noption(LWS_PLAT_FREERTOS \"Build for FreeRTOS\" OFF)\noption(LWS_PLAT_ANDROID \"Android flavour of unix platform\" OFF)\noption(LWS_PLAT_BAREMETAL \"Build for deeply embedded baremetal\" OFF)\n\n#\n# Client / Server / Test Apps build control\n#\noption(LWS_WITHOUT_CLIENT \"Don't build the client part of the library\" OFF)\noption(LWS_WITHOUT_SERVER \"Don't build the server part of the library\" OFF)\noption(LWS_WITHOUT_TESTAPPS \"Don't build the libwebsocket-test-apps\" OFF)\noption(LWS_WITHOUT_TEST_SERVER \"Don't build the test server\" OFF)\noption(LWS_WITHOUT_TEST_SERVER_EXTPOLL \"Don't build the test server version that uses external poll\" OFF)\noption(LWS_WITHOUT_TEST_PING \"Don't build the ping test application\" OFF)\noption(LWS_WITHOUT_TEST_CLIENT \"Don't build the client test application\" OFF)\n#\n# Extensions (permessage-deflate)\n#\noption(LWS_WITHOUT_EXTENSIONS \"Don't compile with extensions\" ON)\n#\n# Helpers + misc\n#\noption(LWS_WITHOUT_BUILTIN_GETIFADDRS \"Don't use the BSD getifaddrs implementation from libwebsockets if it is missing (this will result in a compilation error) ... The default is to assume that your libc provides it. On some systems such as uclibc it doesn't exist.\" OFF)\noption(LWS_FALLBACK_GETHOSTBYNAME \"Also try to do dns resolution using gethostbyname if getaddrinfo fails\" OFF)\noption(LWS_WITHOUT_BUILTIN_SHA1 \"Don't build the lws sha-1 (eg, because openssl will provide it\" OFF)\noption(LWS_WITHOUT_DAEMONIZE \"Don't build the daemonization api\" ON)\noption(LWS_SSL_SERVER_WITH_ECDH_CERT \"Include SSL server use ECDH certificate\" OFF)\noption(LWS_WITH_LEJP \"With the Lightweight JSON Parser\" ON)\noption(LWS_WITH_CBOR \"With the Lightweight LECP CBOR Parser\" OFF)\noption(LWS_WITH_CBOR_FLOAT \"Build floating point types if building CBOR LECP\" ON)\noption(LWS_WITH_SQLITE3 \"Require SQLITE3 support\" OFF)\noption(LWS_WITH_LHP \"With the Lightweight HTML5 parser\" ON)\noption(LWS_WITH_STRUCT_JSON \"Generic struct serialization to and from JSON\" OFF)\noption(LWS_WITH_STRUCT_SQLITE3 \"Generic struct serialization to and from SQLITE3\" OFF)\noption(LWS_WITH_JSONRPC \"JSON RPC support\" ON)\n# broken atm\n#option(LWS_WITH_SMTP \"Provide SMTP support\" OFF)\nif (LWS_WITH_ESP32)\noption(LWS_WITH_DIR \"Directory scanning api support\" OFF)\noption(LWS_WITH_LEJP_CONF \"With LEJP configuration parser as used by lwsws\" OFF)\nelse()\noption(LWS_WITH_DIR \"Directory scanning api support\" ON)\noption(LWS_WITH_LEJP_CONF \"With LEJP configuration parser as used by lwsws\" ON)\nendif()\noption(LWS_WITH_NO_LOGS \"Disable all logging other than _err and _user from being compiled in\" OFF)\nset(LWS_LOGGING_BITFIELD_SET 0 CACHE STRING \"Bitfield describing which log levels to force included into the build\")\nset(LWS_LOGGING_BITFIELD_CLEAR 0 CACHE STRING \"Bitfield describing which log levels to force removed from the build\")\noption(LWS_LOGS_TIMESTAMP \"Timestamp at start of logs\" ON)\noption(LWS_LOG_TAG_LIFECYCLE \"Log tagged object lifecycle as NOTICE\" ON)\noption(LWS_AVOID_SIGPIPE_IGN \"Android 7+ reportedly needs this\" OFF)\noption(LWS_WITH_JOSE \"JOSE JSON Web Signature / Encryption / Keys (RFC7515/6/) API\" OFF)\noption(LWS_WITH_COSE \"COSE CBOR Signature / Encryption / Keys (RFC8152) API\" OFF)\noption(LWS_WITH_GENCRYPTO \"Enable support for Generic Crypto apis independent of TLS backend\" OFF)\noption(LWS_WITH_SELFTESTS \"Selftests run at context creation\" OFF)\noption(LWS_WITH_GCOV \"Build with gcc gcov coverage instrumentation\" OFF)\noption(LWS_WITH_EXPORT_LWSTARGETS \"Export libwebsockets CMake targets.  Disable if they conflict with an outer cmake project.\" ON)\noption(LWS_REPRODUCIBLE \"Build libwebsockets reproducible. It removes the build user and hostname from the build\" ON)\nif (ESP_PLATFORM OR LWS_WITH_ESP32 OR LWS_PLAT_BAREMETAL OR LWS_PLAT_FREERTOS)\noption(LWS_WITH_MINIMAL_EXAMPLES \"Also build the normally standalone minimal examples, for QA\" OFF)\nelse()\noption(LWS_WITH_MINIMAL_EXAMPLES \"Also build the normally standalone minimal examples, for QA\" ON)\nendif()\noption(LWS_WITH_LWSAC \"lwsac Chunk Allocation api\" ON)\noption(LWS_WITH_CUSTOM_HEADERS \"Store and allow querying custom HTTP headers (H1 only)\" ON)\noption(LWS_WITH_DISKCACHE \"Hashed cache directory with lazy LRU deletion to size limit (unrelated to lws_cache_ttl)\" OFF)\noption(LWS_WITH_ASAN \"Build with gcc runtime sanitizer options enabled (needs libasan)\" OFF)\noption(LWS_WITH_LEJP_CONF \"With LEJP configuration parser as used by lwsws\" OFF)\noption(LWS_WITH_ZLIB \"Include zlib support (required for extensions)\" OFF)\noption(LWS_WITH_BUNDLED_ZLIB \"Use bundled zlib version (Windows only)\" ${LWS_WITH_BUNDLED_ZLIB_DEFAULT})\noption(LWS_WITH_MINIZ \"Use miniz instead of zlib\" OFF)\noption(LWS_WITH_EXTERNAL_POLL \"Support external POLL integration using callback messages (not recommended)\" OFF)\noption(LWS_WITH_LWS_DSH \"Support lws_dsh_t Disordered Shared Heap\" OFF)\noption(LWS_CLIENT_HTTP_PROXYING \"Support external http proxies for client connections\" ON)\noption(LWS_WITH_FILE_OPS \"Support file operations vfs\" ON)\noption(LWS_WITH_UDP \"Platform supports UDP\" ON)\noption(LWS_WITH_SPAWN \"Spawn subprocesses with piped stdin/out/stderr\" OFF)\noption(LWS_WITH_FSMOUNT \"Overlayfs and fallback mounting apis\" OFF)\noption(LWS_WITH_FANALYZER \"Enable gcc -fanalyzer if compiler supports\" OFF)\noption(LWS_HTTP_HEADERS_ALL \"Override header reduction optimization and include all like older lws versions\" OFF)\noption(LWS_WITH_SUL_DEBUGGING \"Enable zombie lws_sul checking on object deletion\" OFF)\noption(LWS_WITH_PLUGINS_API \"Build generic lws_plugins apis (see LWS_WITH_PLUGINS to also build protocol plugins)\" OFF)\noption(LWS_WITH_CONMON \"Collect introspectable connection latency stats on individual client connections\" ON)\noption(LWS_WITH_WOL \"Wake On Lan support\" ON)\noption(LWS_WITHOUT_EVENTFD \"Force using pipe instead of eventfd\" OFF)\nif (UNIX OR WIN32)\n\toption(LWS_WITH_CACHE_NSCOOKIEJAR \"Build file-backed lws-cache-ttl that uses netscape cookie jar format (linux-only)\" ON)\nelse()\n\toption(LWS_WITH_CACHE_NSCOOKIEJAR \"Build file-backed lws-cache-ttl that uses netscape cookie jar format (linux-only)\" OFF)\nendif()\n\nif (${CMAKE_SYSTEM_NAME} MATCHES \"Linux\")\n\toption(LWS_WITH_NETLINK \"Monitor Netlink for Routing Table changes\" ON)\n\toption(LWS_WITH_BINDTODEVICE \"Use bind to interface socket option\" ON)\n\toption(LWS_WITH_LIBCAP \"Enable libcap\" ON)\nelse()\n\tset(LWS_WITH_NETLINK 0)\n\tset(LWS_WITH_BINDTODEVICE 0)\n\tset(LWS_WITH_LIBCAP OFF)\nendif()\noption(LWS_WITH_MCUFONT_ENCODER \"Build the ttf to mcufont encoder\" OFF)\n\n#\n# Compressed backtraces\n#\noption(LWS_WITH_COMPRESSED_BACKTRACES \"Build with support for compressed backtraces\" OFF)\nset(LWS_COMPRESSED_BACKTRACES_SNIP_PRE 2 CACHE STRING \"Amount of callstack to snip from top\")\nset(LWS_COMPRESSED_BACKTRACES_SNIP_POST 1 CACHE STRING \"Amount of callstack to snip from bottom\")\noption(LWS_WITH_ALLOC_METADATA_LWS \"Build lws_*alloc() with compressed backtraces (requires WITH_COMPRESSED_BACKTRACES)\" OFF)\n\n#\n# Over The Air updates\n#\noption(LWS_WITH_OTA \"Build with support for Over The Air update download and validation\" OFF)\nset(LWS_OTA_VARIANT \"set-LWS_OTA_VARIANT\" CACHE STRING \"Build Variant ID for OTA filtering\")\nset(LWS_OTA_PUBLIC_JWK_FILE \"$ENV{HOME}/.lws_ota/libwebsockets.org-ota-v1.public.jwk\" CACHE STRING \"Filepath of public JWK used to validate packages\")\nif (LWS_WITH_OTA)\n\tfile(READ ${LWS_OTA_PUBLIC_JWK_FILE} LWS_OTA_PUBLIC_JWK)\nendif()\n\n\nif (${CMAKE_SYSTEM_NAME} MATCHES \"SunOS\")\n       # its openssl has md5 deprecated\n       set(LWS_SUPPRESS_DEPRECATED_API_WARNINGS 1)\nendif()\n\n\n#\n# to use miniz, enable both LWS_WITH_ZLIB and LWS_WITH_MINIZ\n#\n# End of user settings\n#\n\n# sets of sub-options implied by other options\n#\nset(LIB_LIST \"\")\nset(LIB_LIST_AT_END)\nset(LWS_LIBRARIES)\nset(LWS_OPENSSL_SUPPORT 0)\ninclude(CMakeLists-implied-options.txt)\n\n#\n# Structural helpers for cmake in subdirs\n#\n\nmacro(add_subdir_include_directories arg1)\n\tadd_subdirectory(${arg1})\n\tinclude_directories(${_CMAKE_INC_LIST})\nendmacro()\n\nmacro(exports_to_parent_scope)\n\tset(SOURCES ${SOURCES} PARENT_SCOPE)\n\tif (LIB_LIST)\n\t\tset(LIB_LIST ${LIB_LIST} PARENT_SCOPE)\n\tendif()\n\tget_property(_CURR DIRECTORY PROPERTY INCLUDE_DIRECTORIES) \n\tset(_CMAKE_INC_LIST ${_CURR} PARENT_SCOPE)\n\tif (LWS_LIB_BUILD_INC_PATHS)\n\t\tset(LWS_LIB_BUILD_INC_PATHS ${LWS_LIB_BUILD_INC_PATHS} PARENT_SCOPE)\n\tendif()\nendmacro()\n\nmacro(export_to_parent_intermediate)\n\tset(SOURCES ${SOURCES} PARENT_SCOPE)\n\tif (LIB_LIST)\n\t\tset(LIB_LIST ${LIB_LIST} PARENT_SCOPE)\n\tendif()\n\tset(_CMAKE_INC_LIST ${_CMAKE_INC_LIST} PARENT_SCOPE)\n\tif (LWS_LIB_BUILD_INC_PATHS)\n\t\tset(LWS_LIB_BUILD_INC_PATHS ${LWS_LIB_BUILD_INC_PATHS} PARENT_SCOPE)\n\tendif()\nendmacro()\n\n#\n# Try to find the current Git hash\n#\n\nfind_package(Git)\nif(GIT_EXECUTABLE)\n\texecute_process(\n\t\tWORKING_DIRECTORY \"${CMAKE_CURRENT_SOURCE_DIR}\"\n\t\tCOMMAND \"${GIT_EXECUTABLE}\" describe --tags --always\n\t\tOUTPUT_VARIABLE GIT_HASH\n\t\tOUTPUT_STRIP_TRAILING_WHITESPACE\n\t\t)\n\tset(LWS_BUILD_HASH ${GIT_HASH})\n\n\t# append the build user and hostname\n\tif (NOT LWS_REPRODUCIBLE)\n\t\texecute_process(\n\t\t\tWORKING_DIRECTORY \"${CMAKE_CURRENT_SOURCE_DIR}\"\n\t\t\tCOMMAND \"whoami\"\n\t\t\tOUTPUT_VARIABLE GIT_USER\n\t\t\tOUTPUT_STRIP_TRAILING_WHITESPACE\n\t\t\t)\n\t\texecute_process(\n\t\t\tWORKING_DIRECTORY \"${CMAKE_CURRENT_SOURCE_DIR}\"\n\t\t\tCOMMAND \"hostname\"\n\t\t\tOUTPUT_VARIABLE GIT_HOST\n\t\t\tOUTPUT_STRIP_TRAILING_WHITESPACE\n\t\t\t)\n\t\tstring(REGEX REPLACE \"([^\\\\])[\\\\]([^\\\\])\" \"\\\\1\\\\\\\\\\\\\\\\\\\\2\" GIT_USER ${GIT_USER})\n\t\tset(LWS_BUILD_HASH ${GIT_USER}@${GIT_HOST}-${GIT_HASH})\n\tendif()\n\n\tmessage(\"Git commit hash: ${LWS_BUILD_HASH}\")\nendif()\n\nif (\"${LWS_BUILD_HASH}\" STREQUAL \"\")\n\tset(LWS_BUILD_HASH \"unknown\")\nendif()\n\nset(PACKAGE \"libwebsockets\")\nset(CPACK_RPM_PACKAGE_LICENSE \"MIT\")\nset(CPACK_PACKAGE_NAME \"${PACKAGE}\")\nset(CPACK_PACKAGE_VERSION_MAJOR \"4\")\nset(CPACK_PACKAGE_VERSION_MINOR \"3\")\nset(CPACK_PACKAGE_VERSION_PATCH_NUMBER \"99\")\n\nset(CPACK_PACKAGE_VERSION_PATCH \"${CPACK_PACKAGE_VERSION_PATCH_NUMBER}-${LWS_BUILD_HASH}\")\nset(CPACK_PACKAGE_RELEASE 1)\n\nset(CPACK_PACKAGE_VERSION \"${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}\")\nset(CPACK_PACKAGE_VENDOR \"andy@warmcat.com\")\nset(CPACK_PACKAGE_CONTACT \"andy@warmcat.com\")\nset(CPACK_PACKAGE_DESCRIPTION_SUMMARY \"${PACKAGE} ${CPACK_PACKAGE_VERSION}\")\nset(SOVERSION \"19\")\nif(NOT CPACK_GENERATOR)\n    if(UNIX)\n        set(CPACK_GENERATOR \"TGZ\")\n    else()\n        set(CPACK_GENERATOR \"ZIP\")\n    endif()\nendif()\nset(CPACK_SOURCE_GENERATOR \"TGZ\")\nset(CPACK_SOURCE_PACKAGE_FILE_NAME \"${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}\")\nset(VERSION \"${CPACK_PACKAGE_VERSION}\")\n\nset(CPACK_RPM_PACKAGE_RELEASE_DIST ON)\nset(CPACK_RPM_FILE_NAME \"RPM-DEFAULT\")\n# below makes path length problems in CI\nset(CPACK_RPM_DEBUGINFO_PACKAGE OFF)\n# below makes some kind of chimera rpm with binaries and sources\nset(CPACK_RPM_PACKAGE_SOURCES OFF)\nset(CPACK_RPM_INSTALL_WITH_EXEC ON)\nset(CPACK_RPM_COMPONENT_INSTALL ON)\n\nset(CPACK_DEBIAN_FILE_NAME \"DEB-DEFAULT\")\nset(CPACK_DEBIAN_PACKAGE_SHLIBDEPS ON)\nset(CPACK_DEBIAN_DEBUGINFO_PACKAGE ON)\nset(CPACK_DEBIAN_PACKAGE_SOURCE ON)\nset(CPACK_DEBIAN_COMPONENT_INSTALL ON)\n\n\nset(LWS_LIBRARY_VERSION ${CPACK_PACKAGE_VERSION})\nset(LWS_LIBRARY_VERSION_MAJOR ${CPACK_PACKAGE_VERSION_MAJOR})\nset(LWS_LIBRARY_VERSION_MINOR ${CPACK_PACKAGE_VERSION_MINOR})\nset(LWS_LIBRARY_VERSION_PATCH ${CPACK_PACKAGE_VERSION_PATCH_NUMBER})\nset(LWS_LIBRARY_VERSION_PATCH_ELABORATED ${CPACK_PACKAGE_VERSION_PATCH})\n\nif (NOT CMAKE_MODULE_PATH)\n\tset(CMAKE_MODULE_PATH \"\")\nendif()\nset(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} \"${PROJECT_SOURCE_DIR}/cmake/\")\n\n\nif (CMAKE_TOOLCHAIN_FILE)\n\tmessage(STATUS \"CMAKE_TOOLCHAIN_FILE='${CMAKE_TOOLCHAIN_FILE}'\")\nendif()\n\nif (NOT LIB_SUFFIX)\n\tset(LIB_SUFFIX \"\")\nendif()\n\nif (WIN32)\n\tconfigure_file(${CMAKE_CURRENT_SOURCE_DIR}/win32port/version.rc.in ${CMAKE_CURRENT_BINARY_DIR}/win32port/version.rc @ONLY)\n\tset(RESOURCES ${CMAKE_CURRENT_BINARY_DIR}/win32port/version.rc)\nendif()\n\ninclude_directories(include)\n\n# Allow the user to override installation directories.\nset(LWS_INSTALL_LIB_DIR       lib CACHE PATH \"Installation directory for libraries\")\nset(LWS_INSTALL_BIN_DIR       bin CACHE PATH \"Installation directory for executables\")\nset(LWS_INSTALL_INCLUDE_DIR   include CACHE PATH \"Installation directory for header files\")\nset(LWS_INSTALL_EXAMPLES_DIR  bin CACHE PATH \"Installation directory for example files\")\n\n# if you gave LWS_WITH_MINIZ, point to MINIZ here if not found\n# automatically\n\nset(LWS_ZLIB_LIBRARIES CACHE PATH \"Path to the zlib/miniz library\")\nset(LWS_ZLIB_INCLUDE_DIRS CACHE PATH \"Path to the zlib/miniz include directory\")\nset(LWS_SQLITE3_LIBRARIES CACHE PATH \"Path to the sqlite3 library\")\nset(LWS_SQLITE3_INCLUDE_DIRS CACHE PATH \"Path to the sqlite3 include directory\")\nset(LWS_LIBMOUNT_INCLUDE_DIRS CACHE PATH \"Path to the libmount include directory\")\nset(LWS_LIBMOUNT_LIBRARIES CACHE PATH \"Path to the libmount library\")\n# on unix, these are in the toolchain.  On win32 you have to put them somewhere\n# yourself and point to them here\nset(LWS_EXT_PTHREAD_INCLUDE_DIR CACHE PATH \"Path to an external pthreads include directory\")\nset(LWS_EXT_PTHREAD_LIBRARIES CACHE PATH \"Path to an external pthreads library\")\n\n\nif (LWS_WITH_HTTP_STREAM_COMPRESSION)\n\tset(LWS_WITH_ZLIB 1)\nendif()\n\nif (LWS_WITH_ZLIB AND NOT LWS_WITH_BUNDLED_ZLIB)\n\tif (\"${LWS_ZLIB_LIBRARIES}\" STREQUAL \"\" OR \"${LWS_ZLIB_INCLUDE_DIRS}\" STREQUAL \"\")\n\telse()\n\t\tset(ZLIB_LIBRARIES ${LWS_ZLIB_LIBRARIES})\n\t\tset(ZLIB_INCLUDE_DIRS ${LWS_ZLIB_INCLUDE_DIRS})\n\t\tset(ZLIB_FOUND 1)\n\tendif()\nendif()\n\n\nif (LWS_WITH_SQLITE3)\n\tif (\"${LWS_SQLITE3_LIBRARIES}\" STREQUAL \"\" OR \"${LWS_SQLITE3_INCLUDE_DIRS}\" STREQUAL \"\")\n\telse()\n\t\tset(SQLITE3_LIBRARIES ${LWS_SQLITE3_LIBRARIES})\n\t\tset(SQLITE3_INCLUDE_DIRS ${LWS_SQLITE3_INCLUDE_DIRS})\n\t\tset(SQLITE3_FOUND 1)\n\tendif()\nendif()\n\ninclude_directories(\"${PROJECT_BINARY_DIR}\")\n\n# Check for different inline keyword versions.\nforeach(KEYWORD \"inline\" \"__inline__\" \"__inline\")\n\tset(CMAKE_REQUIRED_DEFINITIONS \"-DKEYWORD=${KEYWORD}\")\n\tCHECK_C_SOURCE_COMPILES(\n\t\t\"\n\t\t#include <stdio.h>\n\t\tstatic KEYWORD void a() {}\n\t\tint main(int argc, char **argv) { a(); return 0; }\n\t\t\" LWS_HAVE_${KEYWORD})\nendforeach()\n\nif (NOT LWS_HAVE_inline)\n\tif (LWS_HAVE___inline__)\n\t\tset(inline __inline__)\n\telseif(LWS_HAVE___inline)\n\t\tset(inline __inline)\n\tendif()\nendif()\n\n# Put the libraries and binaries that get built into directories at the\n# top of the build tree rather than in hard-to-find leaf directories. \nSET(CMAKE_RUNTIME_OUTPUT_DIRECTORY \"${PROJECT_BINARY_DIR}/bin\")\nSET(CMAKE_LIBRARY_OUTPUT_DIRECTORY \"${PROJECT_BINARY_DIR}/lib\")\nSET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY \"${PROJECT_BINARY_DIR}/lib\")\n\nSET(LWS_INSTALL_PATH \"${CMAKE_INSTALL_PREFIX}\")\n\n# Put absolute path of dynamic libraries into the object code. Some\n# architectures, notably Mac OS X, need this.\nSET(CMAKE_INSTALL_NAME_DIR \"${CMAKE_INSTALL_PREFIX}/${LWS_INSTALL_LIB_DIR}${LIB_SUFFIX}\")\n\nif (LWS_WITHOUT_BUILTIN_SHA1)\n\tset(LWS_SHA1_USE_OPENSSL_NAME 1)\nendif()\n\nCHECK_C_SOURCE_COMPILES(\n\t\"#include <malloc.h>\n\tint main(int argc, char **argv) { return malloc_trim(0); }\n\t\" LWS_HAVE_MALLOC_TRIM)\nCHECK_C_SOURCE_COMPILES(\n\t\"#include <malloc.h>\n\tint main(int argc, char **argv) { return (int)malloc_usable_size((void *)0); }\n\t\" LWS_HAVE_MALLOC_USABLE_SIZE)\n\nif (PICO_SDK_PATH)\n\tset(CMAKE_REQUIRED_DEFINITIONS \"-Dxxexit=exit\")\nendif()\n\nCHECK_FUNCTION_EXISTS(fork LWS_HAVE_FORK)\nCHECK_FUNCTION_EXISTS(getenv LWS_HAVE_GETENV)\nCHECK_FUNCTION_EXISTS(malloc LWS_HAVE_MALLOC)\nCHECK_FUNCTION_EXISTS(memset LWS_HAVE_MEMSET)\nCHECK_FUNCTION_EXISTS(realloc LWS_HAVE_REALLOC)\nCHECK_FUNCTION_EXISTS(socket LWS_HAVE_SOCKET)\nCHECK_FUNCTION_EXISTS(strerror LWS_HAVE_STRERROR)\nCHECK_FUNCTION_EXISTS(vfork LWS_HAVE_VFORK)\nCHECK_FUNCTION_EXISTS(execvpe LWS_HAVE_EXECVPE)\nCHECK_FUNCTION_EXISTS(getifaddrs LWS_HAVE_GETIFADDRS)\nCHECK_FUNCTION_EXISTS(snprintf LWS_HAVE_SNPRINTF)\nCHECK_FUNCTION_EXISTS(_snprintf LWS_HAVE__SNPRINTF)\nCHECK_FUNCTION_EXISTS(_vsnprintf LWS_HAVE__VSNPRINTF)\nCHECK_FUNCTION_EXISTS(getloadavg LWS_HAVE_GETLOADAVG)\nCHECK_FUNCTION_EXISTS(atoll LWS_HAVE_ATOLL)\nCHECK_FUNCTION_EXISTS(_atoi64 LWS_HAVE__ATOI64)\nCHECK_FUNCTION_EXISTS(_stat32i64 LWS_HAVE__STAT32I64)\nCHECK_FUNCTION_EXISTS(clock_gettime LWS_HAVE_CLOCK_GETTIME)\nCHECK_FUNCTION_EXISTS(localtime_r LWS_HAVE_LOCALTIME_R)\nCHECK_FUNCTION_EXISTS(gmtime_r LWS_HAVE_GMTIME_R)\nCHECK_FUNCTION_EXISTS(ctime_r LWS_HAVE_CTIME_R)\nCHECK_FUNCTION_EXISTS(getgrgid_r LWS_HAVE_GETGRGID_R)\nCHECK_FUNCTION_EXISTS(getgrnam_r LWS_HAVE_GETGRNAM_R)\nCHECK_FUNCTION_EXISTS(getpwuid_r LWS_HAVE_GETPWUID_R)\nCHECK_FUNCTION_EXISTS(getpwnam_r LWS_HAVE_GETPWNAM_R)\nCHECK_FUNCTION_EXISTS(timegm LWS_HAVE_TIMEGM)\nCHECK_C_SOURCE_COMPILES(\"#include <malloc.h>\\nvoid main(void) { while(1) ; } void xxexit(void){}\" LWS_HAVE_IN6ADDR_H)\nCHECK_C_SOURCE_COMPILES(\"#include <memory.h>\\nvoid main(void) { while(1) ; } void xxexit(void){}\" LWS_HAVE_MEMORY_H)\nCHECK_C_SOURCE_COMPILES(\"#include <netinet/in.h>\\nvoid main(void) { while(1) ; } void xxexit(void){}\" LWS_HAVE_NETINET_IN_H)\nCHECK_C_SOURCE_COMPILES(\"#include <stdint.h>\\nvoid main(void) { while(1) ; } void xxexit(void){}\" LWS_HAVE_STDINT_H)\nCHECK_C_SOURCE_COMPILES(\"#include <stdlib.h>\\nvoid main(void) { while(1) ; } void xxexit(void){}\" LWS_HAVE_STDLIB_H)\nCHECK_C_SOURCE_COMPILES(\"#include <strings.h>\\nvoid main(void) { while(1) ; } void xxexit(void){}\" LWS_HAVE_STRINGS_H)\nCHECK_C_SOURCE_COMPILES(\"#include <string.h>\\nvoid main(void) { while(1) ; } void xxexit(void){}\" LWS_HAVE_STRING_H)\nCHECK_C_SOURCE_COMPILES(\"#include <sys/prctl.h>\\nvoid main(void) { while(1) ; } void xxexit(void){}\" LWS_HAVE_SYS_PRCTL_H)\nCHECK_C_SOURCE_COMPILES(\"#include <sys/socket.h>\\nvoid main(void) { while(1) ; } void xxexit(void){}\" LWS_HAVE_SYS_SOCKET_H)\nCHECK_C_SOURCE_COMPILES(\"#include <sys/sockio.h>\\nvoid main(void) { while(1) ; } void xxexit(void){}\" LWS_HAVE_SYS_SOCKIO_H)\nCHECK_C_SOURCE_COMPILES(\"#include <sys/stat.h>\\nvoid main(void) { while(1) ; } void xxexit(void){}\" LWS_HAVE_SYS_STAT_H)\nCHECK_C_SOURCE_COMPILES(\"#include <sys/types.h>\\nvoid main(void) { while(1) ; } void xxexit(void){}\" LWS_HAVE_SYS_TYPES_H)\nCHECK_C_SOURCE_COMPILES(\"#include <unistd.h>\\nvoid main(void) { while(1) ; } void xxexit(void){}\" LWS_HAVE_UNISTD_H)\nCHECK_C_SOURCE_COMPILES(\"#include <vfork.h>\\nvoid main(void) { while(1) ; } void xxexit(void){}\" LWS_HAVE_VFORK_H)\nCHECK_C_SOURCE_COMPILES(\"#include <sys/capability.h>\\nvoid main(void) { while(1) ; } void xxexit(void){}\" LWS_HAVE_SYS_CAPABILITY_H)\nCHECK_C_SOURCE_COMPILES(\"#include <malloc.h>\\nvoid main(void) { while(1) ; } void xxexit(void){}\" LWS_HAVE_MALLOC_H)\nCHECK_C_SOURCE_COMPILES(\"#include <pthread.h>\\nvoid main(void) { while(1) ; } void xxexit(void){}\" LWS_HAVE_PTHREAD_H)\nCHECK_C_SOURCE_COMPILES(\"#include <inttypes.h>\\nvoid main(void) { while(1) ; } void xxexit(void){}\" LWS_HAVE_INTTYPES_H)\nCHECK_C_SOURCE_COMPILES(\"#include <sys/resource.h>\\nvoid main(void) { while(1) ; } void xxexit(void){}\" LWS_HAVE_SYS_RESOURCE_H)\nCHECK_C_SOURCE_COMPILES(\"#include <linux/ipv6.h>\\nvoid main(void) { while(1) ; } void xxexit(void){}\" LWS_HAVE_LINUX_IPV6_H)\nif (LWS_HAVE_SYS_TYPES_H)\n\tCHECK_C_SOURCE_COMPILES(\"#include <sys/types.h>\\n#include <net/ethernet.h>\\n void main(void) { while (1) ; } void xxexit(void){}\" LWS_HAVE_NET_ETHERNET_H)\nelse()\n\tCHECK_C_SOURCE_COMPILES(\"#include <net/ethernet.h>\\nvoid main(void) { while(1) ; } void xxexit(void){}\" LWS_HAVE_NET_ETHERNET_H)\nendif()\nCHECK_C_SOURCE_COMPILES(\"#include <systemd/sd-daemon.h>\\nvoid main(void) { while(1) ; } void xxexit(void){}\" LWS_HAVE_SYSTEMD_H)\n\n\n\nif (LWS_EXT_PTHREAD_INCLUDE_DIR)\n\tset(LWS_HAVE_PTHREAD_H 1)\nendif()\n\nif(CMAKE_SYSTEM_NAME MATCHES \"Darwin\")\n\tif(CMAKE_OSX_DEPLOYMENT_TARGET LESS \"10.12\")\n\t\tmessage(\"No clock_gettime found on macOS ${CMAKE_OSX_DEPLOYMENT_TARGET}. Disabling LWS_HAVE_CLOCK_GETTIME.\")\n\t\tset(LWS_HAVE_CLOCK_GETTIME 0)\n\tendif()\nendif()\n\nif (NOT LWS_HAVE_GETIFADDRS)\n\tif (LWS_WITHOUT_BUILTIN_GETIFADDRS)\n\t\tmessage(FATAL_ERROR \"No getifaddrs was found on the system. Turn off the LWS_WITHOUT_BUILTIN_GETIFADDRS compile option to use the supplied BSD version.\")\n\tendif()\n\tset(LWS_BUILTIN_GETIFADDRS 1)\nendif()\n\nif (LWS_EXT_PTHREAD_INCLUDE_DIR)\n\tset(CMAKE_REQUIRED_INCLUDES ${CMAKE_REQUIRED_INCLUDES};${LWS_EXT_PTHREAD_INCLUDE_DIR})\n\tinclude_directories(${LWS_EXT_PTHREAD_INCLUDE_DIR})\n\n\tlist(APPEND LIB_LIST_AT_END ${LWS_EXT_PTHREAD_LIBRARIES})\n\tset(CMAKE_REQUIRED_FLAGS ${CMAKE_REQUIRED_FLAGS} \" -DHAVE_STRUCT_TIMESPEC=1\")\nendif()\n\n#\n# add libs here that need to be at the end of the link order\n#\n\nif (LWS_EXT_PTHREAD_INCLUDE_DIR)\n\tlist(APPEND LIB_LIST_AT_END ${LWS_EXT_PTHREAD_LIBRARIES})\nendif()\n\nif (LWS_WITH_ZLIB AND NOT LWS_WITH_BUNDLED_ZLIB)\n\tlist(APPEND LIB_LIST_AT_END \"${ZLIB_LIBRARIES}\")\nendif()\n\nif (LWS_WITH_PLUGINS_API AND UNIX AND CMAKE_DL_LIBS AND NOT (${CMAKE_SYSTEM_NAME} MATCHES \"QNX\"))\n\tlist(APPEND LIB_LIST_AT_END ${CMAKE_DL_LIBS})\nendif()\n\n\nif (WIN32 OR MSVC)\n\tCHECK_C_SOURCE_COMPILES(\"#include <winsock2.h>\n\t\t\t\t #include <afunix.h>\n\t\t\t\t int main() { return 0; }\" LWS_HAVE_WIN32_AFUNIX_H)\n\n\tif (LWS_UNIX_SOCK AND NOT LWS_HAVE_WIN32_AFUNIX_H)\n\t\tmessage(\"No afunix.h found. Disabling LWS_UNIX_SOCK.\")\n\t\tset(LWS_WITH_UNIX_SOCK OFF)\n\tendif()\nendif()\n\nif (LWS_WITH_LIBCAP)\n   CHECK_LIBRARY_EXISTS(cap cap_set_flag \"\" LWS_HAVE_LIBCAP)\nelse()\n   set(LWS_HAVE_LIBCAP OFF)\nendif()\n\n\nif (LWS_WITH_ZLIB AND NOT LWS_WITH_BUNDLED_ZLIB)\n\tif (LWS_WITH_MINIZ)\n\t\tCHECK_INCLUDE_FILE(miniz.h LWS_HAVE_ZLIB_H)\n\telse()\n\t\tCHECK_INCLUDE_FILE(zlib.h LWS_HAVE_ZLIB_H)\n\tendif()\nendif()\n\nCHECK_INCLUDE_FILES(\"stdlib.h;stdarg.h;string.h\" STDC_HEADERS)\n\nif (NOT CMAKE_REQUIRED_FLAGS)\n\tset(CMAKE_REQUIRED_FLAGS \"\")\nendif()\nif (NOT CMAKE_REQUIRED_INCLUDES)\n\tset(CMAKE_REQUIRED_INCLUDES \"\")\nendif()\nif (NOT CMAKE_REQUIRED_LIBRARIES)\n\tset(CMAKE_REQUIRED_LIBRARIES \"\")\nendif()\n\nCHECK_C_SOURCE_COMPILES(\"#include <stdint.h> \n\tint main(void) {\n\t\tintptr_t test = 1;\n\t\treturn 0;\n\t}\" LWS_HAS_INTPTR_T)\n\nif ((CMAKE_C_COMPILER_ID MATCHES \"Clang\") OR\n    (CMAKE_CXX_COMPILER_ID MATCHES \"Clang\"))\n\tset(COMPILER_IS_CLANG ON)\nendif()\n\nif (LWS_HAVE_PTHREAD_H AND NOT LWS_PLAT_FREERTOS)\n\tCHECK_C_SOURCE_COMPILES(\"\n\t\t#ifndef _GNU_SOURCE\n\t\t#define _GNU_SOURCE\n\t\t#endif\n\t\t#include <pthread.h>\n\t\tint main(void) {\n\t\t#ifdef __PTW32_H\n\t\t\tpthread_t th = {0,0};\n\t\t#else\n\t\t\tpthread_t th = 0;\n\t\t#endif\n\t\t\tpthread_setname_np(th, NULL);\n\t\t\treturn 0;\n\t\t}\" LWS_HAS_PTHREAD_SETNAME_NP)\nendif()\n\nCHECK_C_SOURCE_COMPILES(\"#include <stddef.h>\n\t#include <getopt.h>\n\tint main(void) {\n\t\tvoid *p = (void *)getopt_long;\n\t\treturn p != NULL;\n\t}\" LWS_HAS_GETOPT_LONG)\n\nCHECK_C_SOURCE_COMPILES(\"#include <linux/rtnetlink.h>\n\tint main(void) {\n\t\tint test = RTA_PREF;\n\t\treturn 0;\n\t}\" LWS_HAVE_RTA_PREF)\n\nCHECK_C_SOURCE_COMPILES(\"#include <sys/types.h>\n\tint main(void) {\n\t\tsuseconds_t x = 0;\n\t\treturn (int)x;\n\t}\" LWS_HAVE_SUSECONDS_T)\n\nif (NOT PID_T_SIZE)\n\tset(pid_t int)\nendif()\n\nif (NOT SIZE_T_SIZE)\n\tset(size_t \"unsigned int\")\nendif()\n\nif (NOT LWS_HAVE_MALLOC)\n\tset(malloc rpl_malloc)\nendif()\n\nif (NOT LWS_HAVE_REALLOC)\n\tset(realloc rpl_realloc)\nendif()\n\n\n\n\nif (CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX OR COMPILER_IS_CLANG)\n    include (CheckCCompilerFlag)\n    CHECK_C_COMPILER_FLAG(-fvisibility=hidden LWS_HAVE_VISIBILITY)\n    if (LWS_WITH_FANALYZER)\n\t    CHECK_C_COMPILER_FLAG(-fanalyzer LWS_HAVE_FANALYZER)\n    endif()\n    if (LWS_HAVE_VISIBILITY)\n                set(VISIBILITY_FLAG -fvisibility=hidden)\n    endif()\n    if (LWS_WITH_GCOV)\n\t    set (GCOV_FLAGS \"-fprofile-arcs -ftest-coverage \")\n    else()\n\t    set(GCOV_FLAGS \"\")\n    endif()\n\n\tif (LWS_WITH_ASAN)\n\t\tset (ASAN_FLAGS \"-fsanitize=address -fsanitize=undefined -fsanitize-address-use-after-scope -fsanitize-undefined-trap-on-error\")\n\t\tif (NOT COMPILER_IS_CLANG)\n\t\t\tset (ASAN_FLAGS \"${ASAN_FLAGS} -fsanitize=pointer-compare -fsanitize=pointer-subtract -fsanitize=leak\")\n\t\tendif()\n\t\tmessage(\"Enabling ASAN\")\n\telse()\n\t\tset(ASAN_FLAGS \"\")\n\tendif()\n\n\tcheck_c_compiler_flag(\"-Wignored-qualifiers\" LWS_GCC_HAS_IGNORED_QUALIFIERS)\n\tcheck_c_compiler_flag(\"-Wtype-limits\" LWS_GCC_HAS_TYPE_LIMITS)\n\tcheck_c_compiler_flag(\"-Wno-deprecated-declarations\" LWS_GCC_HAS_NO_DEPRECATED_DECLARATIONS)\n\n\tif (LWS_GCC_HAS_IGNORED_QUALIFIERS)\n\t\tset(CMAKE_C_FLAGS \"-Wignored-qualifiers ${CMAKE_C_FLAGS}\" )\n\tendif()\n\n\tif (LWS_GCC_HAS_TYPE_LIMITS)\n\t\tset(CMAKE_C_FLAGS \"-Wtype-limits ${CMAKE_C_FLAGS}\" )\n\tendif()\n\n\tif (LWS_WITH_FANALYZER AND LWS_HAVE_FANALYZER)\n\t\tset(CMAKE_C_FLAGS \"-fanalyzer ${CMAKE_C_FLAGS}\" )\n\tendif()\n\n\tif (CMAKE_COMPILER_IS_CLANG OR CMAKE_C_COMPILER_VERSION VERSION_GREATER 4.4)\n\t\tset(CMAKE_C_FLAGS \"-Wuninitialized ${CMAKE_C_FLAGS}\")\n\tendif()\n\n\t# always warn all and generate debug info\n\tif (UNIX AND NOT LWS_PLAT_FREERTOS)\n\t\tset(CMAKE_C_FLAGS \"-Wall -Wextra -Wno-unused-parameter -Wconversion -Wsign-compare -Wstrict-aliasing ${VISIBILITY_FLAG} -Wundef ${GCOV_FLAGS} ${CMAKE_C_FLAGS} ${ASAN_FLAGS}\" )\n\telse()\n\t\tset(CMAKE_C_FLAGS \"-Wall -Wsign-compare ${VISIBILITY_FLAG} ${GCOV_FLAGS} ${CMAKE_C_FLAGS}\" )\n\tendif()\n\n\tif (PICO_SDK_PATH)\n\t\tset(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wall -Wextra -Wno-unused-parameter -Wconversion -Wsign-compare -Wstrict-aliasing -Wundef -nolibc\")\n\tendif()\n\n\tif (ESP_PLATFORM AND (CONFIG_IDF_TARGET_ESP32 OR CONFIG_IDF_TARGET_ESP32S2 OR CONFIG_IDF_TARGET_ESP32S3))\n\t\tset(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -mlongcalls\")\n\tendif()\n\n\tif (\"${DISABLE_WERROR}\" STREQUAL \"OFF\")\n\t\tset(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Werror\")\n\tendif()\n\n\tif (LWS_SUPPRESS_DEPRECATED_API_WARNINGS)\n\t\tset(CMAKE_C_FLAGS \"-Wno-deprecated ${CMAKE_C_FLAGS}\")\n\t\tif (LWS_GCC_HAS_NO_DEPRECATED_DECLARATIONS)\n\t\t\tset(CMAKE_C_FLAGS \"-Wno-deprecated-declarations ${CMAKE_C_FLAGS}\")\n\t\tendif()\n\tendif()\nendif ()\n\nif ((CMAKE_COMPILER_IS_GNUCC OR CMAKE_COMPILER_IS_GNUCXX) AND NOT LWS_WITHOUT_TESTAPPS)\n\tif (UNIX AND LWS_HAVE_PTHREAD_H AND NOT (${CMAKE_SYSTEM_NAME} MATCHES \"QNX\"))\n\t# jeez clang understands -pthread but dies if he sees it at link time!\n\t# http://stackoverflow.com/questions/2391194/what-is-gs-pthread-equiv-in-clang\n\tset(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -pthread\" )\n\tlist(APPEND LIB_LIST_AT_END -lpthread)\n    endif()\nendif()\n\nif (COMPILER_IS_CLANG)\n\n\t# otherwise osx blows a bunch of openssl deprecated api errors\n\tset(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wno-deprecated-declarations\" )\n\tif (UNIX AND LWS_HAVE_PTHREAD_H)\n\t\tset(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -pthread -Wno-error=unused-command-line-argument\" )\n\tendif()\nendif()\n\nif (WINCE)\n\tlist(APPEND LIB_LIST_AT_END ws2.lib)\nelseif (WIN32)\n\tlist(APPEND LIB_LIST_AT_END ws2_32.lib userenv.lib psapi.lib iphlpapi.lib crypt32.lib)\nendif()\n\nif (MSVC)\n\t# Turn off pointless microsoft security warnings.\n\tadd_definitions(-D_CRT_SECURE_NO_DEPRECATE -D_CRT_NONSTDC_NO_DEPRECATE)\n\t# Fail the build if any warnings\n\tadd_compile_options(/W3 /WX)\n\t# Unbreak MSVC broken preprocessor __VA_ARGS__ behaviour\n\tif (MSVC_VERSION GREATER 1925)\n\t\tadd_compile_options(/Zc:preprocessor /wd5105)\n\telse()\n\t\tadd_compile_options(/experimental:preprocessor /wd5105)\n\tendif()\nendif(MSVC)\n\nif (MINGW)\n\tset(LWS_MINGW_SUPPORT 1)\n\tset(CMAKE_C_FLAGS \"-D__USE_MINGW_ANSI_STDIO ${CMAKE_C_FLAGS}\")\n\tadd_definitions(-DWINVER=0x0601 -D_WIN32_WINNT=0x0601)\nendif()\n\nif (HDR_PRIVATE)\n\tsource_group(\"Headers Private\"  FILES ${HDR_PRIVATE})\nendif()\nif (HDR_PUBLIC)\n\tsource_group(\"Headers Public\"   FILES ${HDR_PUBLIC})\nendif()\nif (SOURCES)\n\tsource_group(\"Sources\"          FILES ${SOURCES})\nendif()\nif (RESOURCES)\n\tsource_group(\"Resources\"        FILES ${RESOURCES})\nendif()\n\n\n#\n# ZLIB (needed for deflate extension and if LWS_WITH_HTTP_STREAM_COMPRESSION)\n#\nif (LWS_WITH_ZLIB)\n\tif (NOT ZLIB_FOUND)\n\t\tif (LWS_WITH_MINIZ)\n\t\t\tfind_package(Miniz REQUIRED)\n\t\t\tset(ZLIB_INCLUDE_DIRS ${MINIZ_INCLUDE_DIR})\n\t\t\tset(ZLIB_LIBRARIES ${MINIZ_LIBRARIES})\n\t\telse()\n\t\t\tfind_package(ZLIB REQUIRED)\n\t\tendif()\n\tendif()\n\tmessage(\"zlib/miniz include dirs: ${ZLIB_INCLUDE_DIRS}\")\n\tmessage(\"zlib/miniz libraries: ${ZLIB_LIBRARIES}\")\n\tinclude_directories(${ZLIB_INCLUDE_DIRS})\n\t# done later at end of link list\n\t# list(APPEND LIB_LIST ${ZLIB_LIBRARIES})\n\tset(CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES} ${ZLIB_LIBRARIES})\n\tlist(APPEND LIB_LIST_AT_END ${ZLIB_LIBRARIES})\nendif()\n\n\nif (LWS_WITH_FSMOUNT AND ${CMAKE_SYSTEM_NAME} STREQUAL \"Linux\")\n\tif (NOT LWS_LIBMOUNT_INCLUDE_DIRS STREQUAL \"\")\n\t\tinclude_directories(${LWS_LIBMOUNT_INCLUDE_DIRS})\n\t\tmessage(\"libmount include dir: ${LWS_LIBMOUNT_INCLUDE_DIRS}\")\n\tendif()\n\tif (NOT LWS_LIBMOUNT_LIBRARIES STREQUAL \"\")\n\t\tmessage(\"libmount libraries: ${LWS_LIBMOUNT_LIBRARIES}\")\n\t\tlist(APPEND LIB_LIST ${LWS_LIBMOUNT_LIBRARIES})\n\telse()\n\t\tlist(APPEND LIB_LIST mount)\n\tendif()\nendif()\n\n\nif (LWS_WITH_SQLITE3)\n\tif (NOT SQLITE3_FOUND)\n\t\tfind_path(SQLITE3_INCLUDE_DIRS NAMES sqlite3.h)\n\t\tfind_library(SQLITE3_LIBRARIES NAMES sqlite3)\n\t\tif(SQLITE3_INCLUDE_DIRS AND SQLITE3_LIBRARIES)\n\t\t\tset(SQLITE3_FOUND 1)\n\t\tendif()\n\tendif()\n\tmessage(\"sqlite3 include dir: ${SQLITE3_INCLUDE_DIRS}\")\n\tmessage(\"sqlite3 libraries: ${SQLITE3_LIBRARIES}\")\n\tinclude_directories(\"${SQLITE3_INCLUDE_DIRS}\")\n\tlist(APPEND LIB_LIST ${SQLITE3_LIBRARIES})\nendif()\n\n\nif (LWS_WITH_HUBBUB)\n\tfind_library(LIBHUBBUB_LIBRARIES NAMES hubbub)\n\tlist(APPEND LIB_LIST ${LIBHUBBUB_LIBRARIES} )\nendif()\n\nif (LWS_HAVE_LIBCAP)\n\tfind_library(LIBCAP_LIBRARIES NAMES cap)\n\tlist(APPEND LIB_LIST_AT_END ${LIBCAP_LIBRARIES} )\nendif()\n\nif (LWS_WITH_PLUGINS_BUILTIN)\n\tadd_subdirectory(plugins)\nendif()\n\n\n#\n# Append the \"at end\" pieces to the lib list\n#\nlist(APPEND LIB_LIST ${LIB_LIST_AT_END})\n\n#\n# Second-level CMakeLists\n#\n\ninclude_directories(\"${PROJECT_SOURCE_DIR}/lib\")\nadd_subdirectory(lib)\n\n\nif(WIN32 AND NOT CYGWIN)\n  set(DEF_INSTALL_CMAKE_DIR cmake)\nelse()\n  set(DEF_INSTALL_CMAKE_DIR lib${LIB_SUFFIX}/cmake/libwebsockets)\nendif()\n                \nconfigure_file(${PROJECT_SOURCE_DIR}/cmake/LwsCheckRequirements.cmake\n\t\t${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/LwsCheckRequirements.cmake\n\t\t@ONLY)\n\t\t\nconfigure_file(${PROJECT_SOURCE_DIR}/cmake/LwsCheckRequirements.cmake\n\t\t${PROJECT_BINARY_DIR}/LwsCheckRequirements.cmake\n\t\t@ONLY)  \n\n# Generate version info for both build-tree and install-tree.\nconfigure_file(${PROJECT_SOURCE_DIR}/cmake/libwebsockets-config-version.cmake.in\n                ${PROJECT_BINARY_DIR}/libwebsockets-config-version.cmake \n                @ONLY)\n\n# Generate the config file for the build-tree.\nset(LWS__INCLUDE_DIRS \n    \"${PROJECT_SOURCE_DIR}/lib\"\n    \"${PROJECT_BINARY_DIR}\")\nset(LIBWEBSOCKETS_INCLUDE_DIRS ${LWS__INCLUDE_DIRS} CACHE PATH \"Libwebsockets include directories\")\nconfigure_file(${PROJECT_SOURCE_DIR}/cmake/libwebsockets-config.cmake.in\n                ${PROJECT_BINARY_DIR}/libwebsockets-config.cmake \n                @ONLY)\nset(LWS_INSTALL_CMAKE_DIR ${DEF_INSTALL_CMAKE_DIR} CACHE PATH \"Installation directory for CMake files\")\n\n# Export targets (This is used for other CMake projects to easily find the libraries and include files).\nif (LWS_WITH_EXPORT_LWSTARGETS)\n    export(TARGETS ${LWS_LIBRARIES}\n            FILE \"${PROJECT_BINARY_DIR}/LibwebsocketsTargets.cmake\")\nendif()\n\n\n\nset(libwebsockets_DIR ${PROJECT_BINARY_DIR})\nset(CMAKE_MODULE_PATH \"${PROJECT_SOURCE_DIR}/cmake\")\nmessage(\"DIR ${libwebsockets_DIR} CMP ${CMAKE_MODULE_PATH}\")\n\nif (LWS_WITH_MINIMAL_EXAMPLES)\n\tif (LWS_WITH_SECURE_STREAMS)\n\t\tadd_subdirectory(minimal-examples)\n\tendif()\n\tadd_subdirectory(minimal-examples-lowlevel)\nendif()\n\nif (NOT LWS_WITHOUT_TESTAPPS)\n\tadd_subdirectory(test-apps)\nendif()\n\nif (NOT LWS_WITH_PLUGINS_BUILTIN)\nadd_subdirectory(plugins)\nendif()\nadd_subdirectory(lwsws)\nif (PICO_SDK_PATH)\n\tlink_libraries(pico_stdlib PRIVATE)\nendif()\n\nif (LWS_WITH_MCUFONT_ENCODER)\n\tadd_subdirectory(contrib/mcufont/encoder)\nendif()\n\n# Generate the lws_config.h that includes all the public compilation settings.\nconfigure_file(\n       \"${PROJECT_SOURCE_DIR}/cmake/lws_config.h.in\"\n       \"${PROJECT_BINARY_DIR}/lws_config.h\")\n       \nadd_custom_command(\n\t\tOUTPUT ${PROJECT_BINARY_DIR}/include/lws_config.h\n\t\t\t${PROJECT_BINARY_DIR}/include/libwebsockets\n\t\t\t${PROJECT_BINARY_DIR}/include/libwebsockets.h\n\t\tCOMMENT \"Creating build include dir\"\n\t\tCOMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/include/libwebsockets.h\n     \t\t\t${CMAKE_CURRENT_BINARY_DIR}/include/libwebsockets.h\n\t\tCOMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_CURRENT_SOURCE_DIR}/include/libwebsockets/\n\t\t\t${CMAKE_CURRENT_BINARY_DIR}/include/libwebsockets\n\t\tCOMMAND ${CMAKE_COMMAND} -E copy ${PROJECT_BINARY_DIR}/lws_config.h\n     \t\t\t${CMAKE_CURRENT_BINARY_DIR}/include/lws_config.h\n\t\tMAIN_DEPENDENCY ${PROJECT_BINARY_DIR}/lws_config.h\n)\n\nadd_custom_target(GENHDR DEPENDS  ${PROJECT_BINARY_DIR}/include/lws_config.h)\nif (CMAKE_VERSION VERSION_GREATER_EQUAL 3.15)\n    set_property(TARGET GENHDR APPEND PROPERTY ADDITIONAL_CLEAN_FILES\n\t    \"${PROJECT_BINARY_DIR}/include/libwebsockets\")\nendif()\n\n\nfile(GLOB HDR_PUBLIC1 RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} include/libwebsockets/*.h)\nfile(GLOB HDR_PUBLIC2 RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} include/libwebsockets.h)\nfile(GLOB HDR_PUBLIC3 RELATIVE ${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR}/include/lws_config.h)\nlist(APPEND HDR_PUBLIC ${HDR_PUBLIC1} ${HDR_PUBLIC2} ${HDR_PUBLIC3})\n\nset_source_files_properties(${HDR_PUBLIC} PROPERTIES GENERATED 1)\n\nif (LWS_WITH_STATIC)\n\tadd_dependencies(websockets GENHDR)\nendif()\nif (LWS_WITH_SHARED)\n\tadd_dependencies(websockets_shared GENHDR)\nendif()\n\nif (LWS_ONLY_SSPC)\n\t\ttarget_compile_definitions(websockets PUBLIC STANDALONE)\nendif()\n\n\n#\n#\n# Installation preparations.\n#\n\nexport(PACKAGE libwebsockets)\n\ninstall(DIRECTORY include/libwebsockets\n\tDESTINATION \"${LWS_INSTALL_INCLUDE_DIR}\" COMPONENT dev)\ninstall(FILES ${PROJECT_BINARY_DIR}/include/libwebsockets.h ${PROJECT_BINARY_DIR}/include/lws_config.h\n\tDESTINATION \"${LWS_INSTALL_INCLUDE_DIR}\" COMPONENT dev)\n\n# Generate the config file for the installation tree.\nget_filename_component(LWS_ABSOLUTE_INSTALL_CMAKE_DIR ${LWS_INSTALL_CMAKE_DIR} ABSOLUTE)\nget_filename_component(LWS_ABSOLUTE_INSTALL_INCLUDE_DIR ${LWS_INSTALL_INCLUDE_DIR} ABSOLUTE)\nfile(RELATIVE_PATH \n    REL_INCLUDE_DIR \n    \"${LWS_ABSOLUTE_INSTALL_CMAKE_DIR}\"\n    \"${LWS_ABSOLUTE_INSTALL_INCLUDE_DIR}\") # Calculate the relative directory from the cmake dir.\n\nif (DEFINED REL_INCLUDE_DIR)\n    set(LWS__INCLUDE_DIRS \"\\${LWS_CMAKE_DIR}/${REL_INCLUDE_DIR}\")\nendif()\nif (DEFINED OPENSSL_INCLUDE_DIRS)\n\tset(LWS__INCLUDE_DIRS \"${LWS__INCLUDE_DIRS};${OPENSSL_INCLUDE_DIRS}\")\nendif()\n\nconfigure_file(${PROJECT_SOURCE_DIR}/cmake/libwebsockets-config.cmake.in\n                ${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/libwebsockets-config.cmake\n                @ONLY)\n\nset_target_properties(${LWS_LIBRARIES}\n\t\tPROPERTIES PUBLIC_HEADER \"${HDR_PUBLIC}\")\n\n# Install the LibwebsocketsConfig.cmake and LibwebsocketsConfigVersion.cmake\ninstall(FILES\n               \"${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/libwebsockets-config.cmake\"\n               \"${PROJECT_BINARY_DIR}/libwebsockets-config-version.cmake\"\n               \"${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/LwsCheckRequirements.cmake\"\n               DESTINATION \"${LWS_INSTALL_CMAKE_DIR}\" COMPONENT dev)\n\n# Install exports for the install-tree.\nif (LWS_WITH_EXPORT_LWSTARGETS)\n    install(EXPORT LibwebsocketsTargets\n            DESTINATION \"${LWS_INSTALL_CMAKE_DIR}\" COMPONENT dev)\nendif()\n\n# build subdir is not part of sources\nset(CPACK_SOURCE_IGNORE_FILES $(CPACK_SOURCE_IGNORE_FILES) \"/.git/\" \"/build/\" \"\\\\\\\\.tgz$\" \"\\\\\\\\.tar\\\\\\\\.gz$\")\n\n# Most people are more used to \"make dist\" compared to \"make package_source\"\nadd_custom_target(dist COMMAND \"${CMAKE_MAKE_PROGRAM}\" package_source)\n\n\n\n# This must always be last!\ninclude(CPack)\n"
        },
        {
          "name": "Kconfig",
          "type": "blob",
          "size": 0.8369140625,
          "content": "menu \"Libwebsockets\"\n\nconfig LWS_MODEL_NAME\n\tstring \"Model name of device firmware is for\"\n\tdefault \"lws\"\n\nconfig LWS_IS_FACTORY_APPLICATION\n\tbool \"Is this application is designed for the FACTORY flash slot\"\n\tdefault \"n\"\n\nconfig LWS_OTA_SERVER_FQDN\n\tdepends on LWS_IS_FACTORY_APPLICATION\n\tstring \"Domain name of OTA update server, eg, warmcat.com\"\n\tdefault \"\"\n\nconfig LWS_OTA_SERVER_BASE_URL\n\tdepends on LWS_IS_FACTORY_APPLICATION\n\tstring \"Base URL on OTA update server, eg, /esp32-ota (model is added)\"\n\tdefault \"/esp32-ota\"\n\nconfig LWS_OTA_SERVER_UPLOAD_USER\n\tdepends on LWS_IS_FACTORY_APPLICATION\n\tstring \"User to scp to upload server with\"\n\tdefault \"root\"\n\nconfig LWS_OTA_SERVER_UPLOAD_PATH\n\tdepends on LWS_IS_FACTORY_APPLICATION\n\tstring \"Path served in upload server (eg, \\\"/var/www/libwebsockets.org\\\"\"\n\tdefault \"/var/www/libwebsockets.org\"\n\nendmenu\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 18.7548828125,
          "content": "Libwebsockets and included programs are provided under the terms of the\nMIT license shown below, with the exception that some sources are under\na similar permissive license like BSD, or are explicitly CC0 / public\ndomain to remove any obstacles from basing differently-licensed code on\nthem.\n\nOriginal liberal license retained:\n\n  - lib/misc/sha-1.c                     - 3-clause BSD license retained, link to original [BSD3]\n  - win32port/zlib\n  - lib/drivers/display/upng.*\t\t - ZLIB license (see zlib.h) [ZLIB]\n  - lib/tls/mbedtls/wrapper              - Apache 2.0 (only built if linked against mbedtls) [APACHE2]\n  - lib/tls/mbedtls/mbedtls-extensions.c\n  - lib/misc/base64-decode.c             - already MIT\n  - contrib/mcufont/encoder\n  - lib/misc/ieeehalfprecision.c         - 2-clause BSD license retained [BSD2]\n  - contrib/mcufont/fonts\t\t - Open Font License [OFL]\n\nRelicensed to MIT:\n\n  - lib/misc/daemonize.c               - relicensed from Public Domain to MIT,\n                                         link to original Public Domain version\n  - lib/plat/windows/windows-resolv.c  - relicensed from \"Beerware v42\" to MIT\n\nPublic Domain (CC-zero) to simplify reuse:\n\n  - test-apps/*.c\n  - test-apps/*.h\n  - minimal-examples/*\n  - lwsws/*\n\nAlthough libwebsockets is available under a permissive license, it does not\nchange the reality of dealing with large lumps of external code... if your\ncopy diverges it is guaranteed to contain security problems after a while\nand can be very painful to pick backports (especially since historically,\nwe are very hot on cleaning and refactoring the codebase).  The least\npainful and lowest risk way remains sending your changes and fixes upstream\nto us so you can easily use later releases and fixes.\n\n## MIT License applied to libwebsockets\n\nhttps://opensource.org/licenses/MIT \n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to\n deal in the Software without restriction, including without limitation the\n rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n sell copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n IN THE SOFTWARE.\n\n## BSD2\n\n```\n *  Redistribution and use in source and binary forms, with or without \n *  modification, are permitted provided that the following conditions are \n *  met:\n *\n *     * Redistributions of source code must retain the above copyright \n *       notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above copyright \n *       notice, this list of conditions and the following disclaimer in \n *       the documentation and/or other materials provided with the distribution\n *      \n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" \n *  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE \n *  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE \n *  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE \n *  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR \n *  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF \n *  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS \n *  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN \n *  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) \n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE \n *  POSSIBILITY OF SUCH DAMAGE.\n```\n\n## BSD3\n\nFor convenience, a copy of the license on `./lib/misc/sha-1.c`.  In binary\ndistribution, this applies to builds with ws support enabled, and without\n`LWS_WITHOUT_BUILTIN_SHA1` at cmake.\n\n```\n/*\n * Copyright (C) 1995, 1996, 1997, and 1998 WIDE Project.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * 3. Neither the name of the project nor the names of its contributors\n *    may be used to endorse or promote products derived from this software\n *    without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE PROJECT AND CONTRIBUTORS ``AS IS'' AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE PROJECT OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH\n```\n\n## ZLIB\n\nFor convenience, a copy of the license on zlib.  In binary distribution,\nthis applies for win32 builds with internal zlib only.  You can avoid\nbuilding any zlib usage or copy at all with `-DLWS_WITH_ZLIB=0` (the\ndefault), and so avoid needing to observe the license for binary\ndistribution that doesn't include the related code.\n\n```\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n\n  Jean-loup Gailly        Mark Adler\n  jloup@gzip.org          madler@alumni.caltech.edu\n```\n\n\n## APACHE2\n\nFor convenience, a copy of the license on the mbedtls wrapper part.  In binary\ndistribution, this applies only when building lws against mbedtls.\n\nThe canonical license application to source files uses the URL reference, so the\nwhole is not reproduced here.\n\n```\n// Copyright 2015-2016 Espressif Systems (Shanghai) PTE LTD\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n```\n\n## CC0\n\nFor convenience,the full text of CC0 dedication found on the lws examples.\nThe intention of this is to dedicate the examples to the public domain, so\nusers can build off and modify them without any constraint.\n\n```\nStatement of Purpose\n\nThe laws of most jurisdictions throughout the world automatically confer exclusive Copyright and Related Rights (defined below) upon the creator and subsequent owner(s) (each and all, an \"owner\") of an original work of authorship and/or a database (each, a \"Work\").\n\nCertain owners wish to permanently relinquish those rights to a Work for the purpose of contributing to a commons of creative, cultural and scientific works (\"Commons\") that the public can reliably and without fear of later claims of infringement build upon, modify, incorporate in other works, reuse and redistribute as freely as possible in any form whatsoever and for any purposes, including without limitation commercial purposes. These owners may contribute to the Commons to promote the ideal of a free culture and the further production of creative, cultural and scientific works, or to gain reputation or greater distribution for their Work in part through the use and efforts of others.\n\nFor these and/or other purposes and motivations, and without any expectation of additional consideration or compensation, the person associating CC0 with a Work (the \"Affirmer\"), to the extent that he or she is an owner of Copyright and Related Rights in the Work, voluntarily elects to apply CC0 to the Work and publicly distribute the Work under its terms, with knowledge of his or her Copyright and Related Rights in the Work and the meaning and intended legal effect of CC0 on those rights.\n\n1. Copyright and Related Rights. A Work made available under CC0 may be protected by copyright and related or neighboring rights (\"Copyright and Related Rights\"). Copyright and Related Rights include, but are not limited to, the following:\n\n    the right to reproduce, adapt, distribute, perform, display, communicate, and translate a Work;\n    moral rights retained by the original author(s) and/or performer(s);\n    publicity and privacy rights pertaining to a person's image or likeness depicted in a Work;\n    rights protecting against unfair competition in regards to a Work, subject to the limitations in paragraph 4(a), below;\n    rights protecting the extraction, dissemination, use and reuse of data in a Work;\n    database rights (such as those arising under Directive 96/9/EC of the European Parliament and of the Council of 11 March 1996 on the legal protection of databases, and under any national implementation thereof, including any amended or successor version of such directive); and\n    other similar, equivalent or corresponding rights throughout the world based on applicable law or treaty, and any national implementations thereof.\n\n2. Waiver. To the greatest extent permitted by, but not in contravention of, applicable law, Affirmer hereby overtly, fully, permanently, irrevocably and unconditionally waives, abandons, and surrenders all of Affirmer's Copyright and Related Rights and associated claims and causes of action, whether now known or unknown (including existing as well as future claims and causes of action), in the Work (i) in all territories worldwide, (ii) for the maximum duration provided by applicable law or treaty (including future time extensions), (iii) in any current or future medium and for any number of copies, and (iv) for any purpose whatsoever, including without limitation commercial, advertising or promotional purposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each member of the public at large and to the detriment of Affirmer's heirs and successors, fully intending that such Waiver shall not be subject to revocation, rescission, cancellation, termination, or any other legal or equitable action to disrupt the quiet enjoyment of the Work by the public as contemplated by Affirmer's express Statement of Purpose.\n\n3. Public License Fallback. Should any part of the Waiver for any reason be judged legally invalid or ineffective under applicable law, then the Waiver shall be preserved to the maximum extent permitted taking into account Affirmer's express Statement of Purpose. In addition, to the extent the Waiver is so judged Affirmer hereby grants to each affected person a royalty-free, non transferable, non sublicensable, non exclusive, irrevocable and unconditional license to exercise Affirmer's Copyright and Related Rights in the Work (i) in all territories worldwide, (ii) for the maximum duration provided by applicable law or treaty (including future time extensions), (iii) in any current or future medium and for any number of copies, and (iv) for any purpose whatsoever, including without limitation commercial, advertising or promotional purposes (the \"License\"). The License shall be deemed effective as of the date CC0 was applied by Affirmer to the Work. Should any part of the License for any reason be judged legally invalid or ineffective under applicable law, such partial invalidity or ineffectiveness shall not invalidate the remainder of the License, and in such case Affirmer hereby affirms that he or she will not (i) exercise any of his or her remaining Copyright and Related Rights in the Work or (ii) assert any associated claims and causes of action with respect to the Work, in either case contrary to Affirmer's express Statement of Purpose.\n\n4. Limitations and Disclaimers.\n\n    No trademark or patent rights held by Affirmer are waived, abandoned, surrendered, licensed or otherwise affected by this document.\n    Affirmer offers the Work as-is and makes no representations or warranties of any kind concerning the Work, express, implied, statutory or otherwise, including without limitation warranties of title, merchantability, fitness for a particular purpose, non infringement, or the absence of latent or other defects, accuracy, or the present or absence of errors, whether or not discoverable, all to the greatest extent permissible under applicable law.\n    Affirmer disclaims responsibility for clearing rights of other persons that may apply to the Work or any use thereof, including without limitation any person's Copyright and Related Rights in the Work. Further, Affirmer disclaims responsibility for obtaining any necessary consents, permissions or other rights required for any use of the Work.\n    Affirmer understands and acknowledges that Creative Commons is not a party to this document and has no duty or obligation with respect to this CC0 or use of the Work.\n```\n\n## OFL: Open Font License\n\n```\nCopyright (c) 2012-2015, The Mozilla Foundation and Telefonica S.A.\n\nThis Font Software is licensed under the SIL Open Font License, Version 1.1.\nThis license is copied below, and is also available with a FAQ at:\nhttp://scripts.sil.org/OFL\n\n\n-----------------------------------------------------------\nSIL OPEN FONT LICENSE Version 1.1 - 26 February 2007\n-----------------------------------------------------------\n\nPREAMBLE\nThe goals of the Open Font License (OFL) are to stimulate worldwide\ndevelopment of collaborative font projects, to support the font creation\nefforts of academic and linguistic communities, and to provide a free and\nopen framework in which fonts may be shared and improved in partnership\nwith others.\n\nThe OFL allows the licensed fonts to be used, studied, modified and\nredistributed freely as long as they are not sold by themselves. The\nfonts, including any derivative works, can be bundled, embedded, \nredistributed and/or sold with any software provided that any reserved\nnames are not used by derivative works. The fonts and derivatives,\nhowever, cannot be released under any other type of license. The\nrequirement for fonts to remain under this license does not apply\nto any document created using the fonts or their derivatives.\n\nDEFINITIONS\n\"Font Software\" refers to the set of files released by the Copyright\nHolder(s) under this license and clearly marked as such. This may\ninclude source files, build scripts and documentation.\n\n\"Reserved Font Name\" refers to any names specified as such after the\ncopyright statement(s).\n\n\"Original Version\" refers to the collection of Font Software components as\ndistributed by the Copyright Holder(s).\n\n\"Modified Version\" refers to any derivative made by adding to, deleting,\nor substituting -- in part or in whole -- any of the components of the\nOriginal Version, by changing formats or by porting the Font Software to a\nnew environment.\n\n\"Author\" refers to any designer, engineer, programmer, technical\nwriter or other person who contributed to the Font Software.\n\nPERMISSION & CONDITIONS\nPermission is hereby granted, free of charge, to any person obtaining\na copy of the Font Software, to use, study, copy, merge, embed, modify,\nredistribute, and sell modified and unmodified copies of the Font\nSoftware, subject to the following conditions:\n\n1) Neither the Font Software nor any of its individual components,\nin Original or Modified Versions, may be sold by itself.\n\n2) Original or Modified Versions of the Font Software may be bundled,\nredistributed and/or sold with any software, provided that each copy\ncontains the above copyright notice and this license. These can be\nincluded either as stand-alone text files, human-readable headers or\nin the appropriate machine-readable metadata fields within text or\nbinary files as long as those fields can be easily viewed by the user.\n\n3) No Modified Version of the Font Software may use the Reserved Font\nName(s) unless explicit written permission is granted by the corresponding\nCopyright Holder. This restriction only applies to the primary font name as\npresented to the users.\n\n4) The name(s) of the Copyright Holder(s) or the Author(s) of the Font\nSoftware shall not be used to promote, endorse or advertise any\nModified Version, except to acknowledge the contribution(s) of the\nCopyright Holder(s) and the Author(s) or with their explicit written\npermission.\n\n5) The Font Software, modified or unmodified, in part or in whole,\nmust be distributed entirely under this license, and must not be\ndistributed under any other license. The requirement for fonts to\nremain under this license does not apply to any document created\nusing the Font Software.\n\nTERMINATION\nThis license becomes null and void if any of the above conditions are\nnot met.\n\nDISCLAIMER\nTHE FONT SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT\nOF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL THE\nCOPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nINCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL\nDAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM\nOTHER DEALINGS IN THE FONT SOFTWARE.\n```\n"
        },
        {
          "name": "Makefile.projbuild",
          "type": "blob",
          "size": 0.052734375,
          "content": "CPPFLAGS += -I$(BUILD_DIR_BASE)/libwebsockets/include\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.5537109375,
          "content": "[![CI status](https://libwebsockets.org/sai/status/libwebsockets)](https://libwebsockets.org/git/libwebsockets) [![Coverity Scan Build Status](https://scan.coverity.com/projects/3576/badge.svg)](https://scan.coverity.com/projects/3576) [![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/2266/badge)](https://bestpractices.coreinfrastructure.org/projects/2266) [![Codacy Badge](https://api.codacy.com/project/badge/Grade/144fb195a83046e484a75c8b4c6cfc99)](https://www.codacy.com/app/lws-team/libwebsockets?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=warmcat/libwebsockets&amp;utm_campaign=Badge_Grade) [![Total alerts](https://img.shields.io/lgtm/alerts/g/warmcat/libwebsockets.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/warmcat/libwebsockets/alerts/) [![Language grade: C/C++](https://img.shields.io/lgtm/grade/cpp/g/warmcat/libwebsockets.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/warmcat/libwebsockets/context:cpp) [![Language grade: JavaScript](https://img.shields.io/lgtm/grade/javascript/g/warmcat/libwebsockets.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/warmcat/libwebsockets/context:javascript)\n\n# Libwebsockets\n\nLibwebsockets is a simple-to-use, MIT-license, pure C library providing client and server\nfor **http/1**, **http/2**, **websockets**, **MQTT** and other protocols in a security-minded,\nlightweight, configurable, scalable and flexible way.  It's easy to build and\ncross-build via cmake and is suitable for tasks from embedded RTOS through mass\ncloud serving.\n\nIt supports a lot of lightweight ancilliary implementations for things like JSON,\nCBOR, JOSE, COSE, and supports OpenSSL and MbedTLS v2 and v3 out of the box for everything.\nIt's very gregarious when it comes to event loop sharing, supporting libuv, libevent, libev,\nsdevent, glib and uloop, as well as custom event libs.\n\n[100+ independent minimal examples](https://libwebsockets.org/git/libwebsockets/tree/minimal-examples) for various scenarios, CC0-licensed\n(public domain) for cut-and-paste, allow you to get started quickly.\n\n[There are a lot of READMEs](https://libwebsockets.org/git/libwebsockets/tree/READMEs) on a variety of topics.\n\n[We do a huge amount of CI testing per push](https://libwebsockets.org/sai/), currently 582 builds on 30 platforms.\n[You can see the lws CI rack and read about how lws-based Sai is used to coordinate all the testing](https://warmcat.com/2021/08/21/Sai-CI.html).\n\n![overview](./doc-assets/lws-overview.png)\n\nNews\n----\n\n## HTML + CSS + JPEG + PNG display stack in lws\n\nWant to drive your EPD or TFT / OLED display using HTML + CSS?  Only got an ESP32?\n\nWant remote JPEGs, PNGs, HTML, RGBA composition, gamma, error diffusion if needed?\n\nRealtime render into a line buffer because you don't have enough heap for a framebuffer?\n\n[Take a look here...](https://libwebsockets.org/git/libwebsockets/tree/READMEs/README.html-parser.md)\n\n## Perl binding for lws available\n\nThanks to Felipe Gasper, there's now a [perl binding for lws available at metacpan](https://metacpan.org/pod/Net::Libwebsockets),\nthis uses the recent generic event loop support in lws to have lws as a guest on an existing perl event loop.\n\n## Lws examples switching to Secure Streams\n\n![Secure Streams direct](./doc-assets/ss-api1.png)\n\n**Secure Streams** support in lws was introduced a couple of years ago, it's a\nhigher-level interface to lws `wsi`-level apis that simplifies connectivity by\nsegregating connection policy like protocol and endpoint information into a\nseparate [JSON policy file](./minimal-examples/client/hello_world/example-policy.json), and just having the [code deal with payloads](./minimal-examples/clients/hello_world/hello_world-ss.c); as many\ndetails of the wire protocol as possible are hidden or moved to the policy, so\nuser code is almost identical even if the wire protocol changes.\n\nThe user code just asks to create a SS by \"streamtype name\", it is created\naccording to the details (protocol, endpoint, etc) under the same name in the\npolicy.\n\nKey policy entries like endpoint can contain `${metadata-name}` string\nsubstitutions to handle runtime adaptations via metadata.  h1, h2, ws and mqtt\nare supported.\n\nAs a layer on top of the `wsi` apis, SS provides a higher-level way to access\nthe existing wsi-level capabilities, both kinds of API will remain supported.\nSecure Streams are longer-lived than a single wsi, so an SS can coordinate\nretries by itself.  SS-based user code is typically significantly smaller and\nmore maintainable than wsi layer.\n\nIn main branch I have moved the older examples into `./minimal-examples-lowlevel`\nand am starting to port more cases from there into SS-based examples.\n\n### Comparison between wsi and SS level lws usage\n\n|Feature|\"low-level\" wsi way|Secure Streams way|\n|---|---|---|\n|Create context|code|same|\n|Loop support, sul scheduler|default, event libs|same|\n|Supports comms mode|Client, Server, Raw|same|\n|Supports protocols|h1, h2, ws, mqtt (client)|same|\n|TLS support|mbedtls (including v3), openssl (including v3), wolfssl, boringssl, libressl|same|\n|Serializable, proxiable, muxable, transportable|No|Yes|\n|Auto-allocated per-connection user object|pss specified in lws_protocols|Specified in ss info struct|\n|Connection User API|Protocol-specific lws_protocols cbs (> 100)|SS API (rx, tx, state callbacks only)|\n|Sending adaptation|lws_callback_on_writeable()  + WRITEABLE|lws_ss_request_write() + tx() cb|\n|Sending buffer|User-chosen + malloc'd partial handling|SS-provided, no partials|\n|Create vhosts|code|**JSON policy**|\n|TLS validation|cert bundle or code|**JSON policy**, or cert bundle|\n|Connection retry / backoff|code|**JSON policy**, Auto|\n|Nailing up|code|**JSON policy**, Auto|\n|Endpoint and protocol details|spread around the code|**JSON policy**|\n|Protocol selection, pipeline / stream sharing|code|**JSON policy**|\n|ws subprotocol selection|code|**JSON policy**|\n|ws binary / text|code|**JSON policy**|\n|Protocol-specific metadata|Protocol-specific apis in code (eg, lws_hdr)|**JSON policy**, generic metadata apis in code|\n|Connection validity rules|struct|**JSON policy**, Auto|\n|Stream as Long Poll|code|**JSON policy**|\n|Auth|code|**JSON policy** + automatic rotation if provider supported, else code|\n\n### Serialized Secure Streams\n\n![Secure Streams direct](./doc-assets/ss-api2.png)\n\nSecure Streams APIs are also **serializable**, the exact same client code can\nfulfil the connection directly in the same process as you would expect, or\nforward the actions, metadata and payloads to an [SS Proxy](./minimal-examples/ssproxy/ssproxy-socket) that owns the policy\nover a Unix Domain or TCP socket connection to be fulfilled centrally.  This\nallows, eg, h2 streams from different processes sharing a single connection.\n\n![Secure Streams direct](./doc-assets/ss-api3.png)\n\nThe serialized SS can also travel over generic transports like UART, an [example\nis provided implementing the Binance example on an RPi Pico](./minimal-examples/embedded/pico/pico-sspc-binance) with a UART transport\nto a [UART transport SS proxy](./minimal-examples/ssproxy/ssproxy-custom-transport-uart), where the pico itself has no network stack, tls, compression or\nwss stack, but can send and receive to and from the endpoint as if it did.\n\nThe optional `lws_trasport_mux` is used to interpose between the UART transport\nand the SSPC layer, allowing a single pipe to carry many separate SS connections.\n\nThe user SS code is identical however it is transported, muxed and fulfilled.\n\n\n## v4.3 is released\n\nSee the [changelog](https://libwebsockets.org/git/libwebsockets/tree/changelog)\n\n\n## Lws work retrospective\n\nThe initial commit for lws will have been 11 years ago come Oct 28 2021, it's been a lot of work.\nThere are a total of 4.3K patches, touching 800KLOC cumulatively (this is not the size in the\nrepo, but over the years, how many source lines were changed by patches).\n\n![overview](./doc-assets/work.png)\n\nGratifyingly, it turns out over the years, ~15% of that was contributed by 404 contributors: that's not so bad.\nThanks a lot to everyone who has provided patches.\n\nToday at least tens of millions of devices and product features rely on lws to\nhandle their communications including several from FAANG; Google now include lws\nas part of Android sources.\n\n## Support\n\nThis is the libwebsockets C library for lightweight websocket clients and\nservers.  For support, visit\n\n https://libwebsockets.org\n\nand consider joining the project mailing list at\n\n https://libwebsockets.org/mailman/listinfo/libwebsockets\n\nYou can get the latest version of the library from git:\n\n- https://libwebsockets.org/git\n\nDoxygen API docs for development: https://libwebsockets.org/lws-api-doc-main/html/index.html\n\n"
        },
        {
          "name": "READMEs",
          "type": "tree",
          "content": null
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.2802734375,
          "content": "# Security Policy\n\nIf you become aware of an issue with lws that has a security dimension for users, please contact andy@warmcat.com by direct email.\n\n## Procedure for announcing vulnerability fixes\nThe problem and fixed versions will be announced by a note added to the main README.md.\n"
        },
        {
          "name": "bug_report.md",
          "type": "blob",
          "size": 2.0703125,
          "content": "** What version of lws **\n\n\"vx.y.z\" or \"01234567 from `main` thismorning\" etc\n\nIf it's much older than last stable release, we will likely suggest you try that\nor `main`.\n\n** What platform and arch? **\n\n\"Fedora 32 x86_64\" or \"OSX Catalina\" etc\n\n** What parts of lws does it involve? **\n\ndunno / core / client / server\nraw / http / ws / mqtt / other (give me a hint)\n\n** How can I reproduce the problem just using lws code? **\n\nWe can't guess your problem especially in your code.  It's great if you can give us a way to\nrealize our own failure clearly with a reproducer that uses our own code.\n\nTry to remove your code from the equation by trying the same flow on an lws minimal example and provide a little diff against that. We can find out if it's only on your platform, or only on that version, or only in your code from that quickly, and if something to fix in lws, I can confirm it really is fixed using the same test.\n\n** Describe the bug **\n\n    \"fails\" --> this word is a red flag you didn't try to debug the issue much... exactly how does it \"fail\", what evidence is it leaving like logs or return codes or traces?\n    \"hangs\" --> this word is a red flag you didn't try to debug the issue much... exactly what does it mean, whole device frozen? Spinning 100% cpu? Just idle? Building on fire? Have you tried it via strace or similar if it seems frozen to see what it's doing? Attach a debugger like gdb -p pid and get a backtrace? perf top if Linux to see what it spends its time on.\n    \"crashes\" --> what happens if you run under valgrind? You know lws is not threadsafe except for lws_cancel_service(), right...\n    \"sucks\" --> let's discuss you writing a patch to improve whatever it is\n\n** Additional data **\n\nBuild problems? Describe the toolchain and paste the warnings / errors.\n\nCrash? Get a usable backtrace by building with `cmake .. -DCMAKE_BUILD_TYPE=DEBUG` and run under gdb, lldb, or valgrind.\n\nMysterious happenings? Get verbose lws logs by building with `cmake .. -DCMAKE_BUILD_TYPE=DEBUG` and run with `lws_set_log_level(1151, NULL)`, on the example apps they all take a switch like -d1151.\n\n"
        },
        {
          "name": "changelog",
          "type": "blob",
          "size": 32.8623046875,
          "content": "Changelog\n---------\n\nv4.4.0\n======\n\n - API CHANGE: VFS open() has an extra file_ops pointer at the beginning.\n The other args shift along one and are otherwise unchanged.  The new\n file_ops is the active file_ops the callback belongs to, the original\n file_ops that's the second arg now remains the platform file_ops ptr.  If you\n don't define your own VFS implementation, you don't need to care.\n\n\n\nv4.3.0\n======\n\n - Add full CBOR stream parsing and writing support, with huge\n   amount of test vectors and resumable printf type write apis\n   See ./READMEs/README.cbor-lecp.md\n - Add COSE key and signing / validation support with huge amount of\n   test vectors\n    cose_sign[1] ES256/384/512, RS256/384/512\n    cose_mac0    HS256/384/512\n   See ./READMEs/README.cbor-cose.md\n - JIT Trust: for constrained devices, provides a way to determine the\n   trusted CA certs the peer requires, and instantiate just those.\n   This allows generic client browsing without the overhead of ~130\n   x.509 CA certs in memory permanently.\n   See ./READMEs/README.jit-trust.md\n - Add support for client Netscape cookie jar with caching\n - Secure Streams: issue LWSSSCS_EVENT_WAIT_CANCELLED state() when\n   lws_cancel_service() called, so cross-thread events can be handled\n   in SS\n - Actively assert() on attempt to destroy SS handles still active in\n   the call stack, use DESTROY_ME returns instead so caller can choose\n   how to handle it.\n - Improved Client Connection Error report strings for tls errors\n - SMP: Use a private fakewsi for PROTOCOL_INIT so pts cannot try to\n   use the same one concurrently\n - MbedTLS v3 support for all release changes, as well as retaining\n   support for v2.x\n - MQTT client: support QoS2\n - Event lib ops can now be set at context creation time directly,\n   bringing full event lib hooking to custom event loops.  See\n   minimal-http-server-eventlib-custom\n - Extra APIs to recover AKID and SKID from x.509 in mbedtls and openssl\n - Improve http redirect to handle h2-> h2 cleanly\n - IPv4+6 listen sockets on vhosts are now done with two separate\n   sockets bound individually to AF_INET and AF_INET6 addresses,\n   handled by the same vhost listen flow.\n - Improved tls restriction handling\n - Log contexts: allow objects to log into local logging contexts, by\n   lws_context, vhost, wsi and ss handle.  Each context has its own\n   emit function and log level. See ./READMEs/README.logging.md\n - Upgrade compiler checking to default to -Werror -Wall -Wextra\n - Fault injection apis now also support pseudo-random number binding\n   within a specified range, eg,\n   --fault-injection \"f1(10%),f1_delay(123..456)\"\n - Remove LWS_WITH_DEPRECATED_THINGS, remove master branch\n - Interface binding now uses ipv6 scoring to select bind address\n\nv4.2.0\n======\n\n - Sai coverage upgrades, 495 builds on 27 platforms, including OSX M1,\n   Xenial, Bionic and Focal Ubuntu, Debian Sid and Buster on both 32 and\n   64-bit OS, and NetBSD, Solaris, FreeBSD, Windows, ESP32.\n   Ctest run on more scenarios including all LWS_WITH_DISTRO_RECOMMENDED.\n   More tests use valgrind if available on platform.\n - RFC7231 date and time parsing and retry-after wired up to lws_retry\n - `LWS_WITH_SUL_DEBUGGING` checks that no sul belonging to Secure Streams\n   and wsi objects are left registered on destruction\n - Netlink monitoring on Linux dynamically tracks interface address and\n   routing changes, and immediately closes connections on invalidated\n   routes.\n - RFC6724 DNS results sorting over ipv4 + ipv6 results, according to\n   available dynamic route information\n - Support new event library, sdevent (systemd native loop), via\n   `LWS_WITH_SDEVENT`\n - Reduce .rodata cost of role structs by making them sparse\n - Additional Secure Streams QA tests and runtime state transition\n   validation\n - SMD-over-ss-proxy documentation and helpers to simplify forwarding\n - SSPC stream buffering at proxy and client set from policy by streamtype\n - Trigger Captive Portal Detection if DNS resolution fails\n - Switch all logs related to wsi and Secure Streams to use unique,\n   descriptive tags instead of pointers (which may be reallocated)\n - Use NOITCE logging for Secure Streams and wsi lifecycle logging using\n   tags\n - Update SSPC serialization to include versioning on initial handshake,\n   and pass client pid to proxy so related objects are tagged with it\n - Enable errors on -Wconversion pedantic type-related build issues\n   throughout the lws sources and upgrade every affected cast.\n - Windows remove WSA event implementation and replace with WSAPoll, with\n   a pair of UDP sockets instead of pipe() for `lws_cancel_service()`\n - `lws_strcmp_wildcard()` helper that understand \"x*\", \"x*y\", \"x*y*\" etc\n - `LWS_WITH_PLUGINS_BUILTIN` cmake option just builds plugins into the main\n library image directly\n - Secure Streams proxy supports policy for flow control between proxy and\n clients\n - libressl also supported along with boringssl, wolfssl\n - prepared for openssl v3 compatibility, for main function and GENCRYPTO\n - Fault injection apis can confirm operation of 48 error paths and counting\n - `LWS_WITH_SYS_METRICS` keeps stats and reports them to user-defined\n function, compatible with openmetrics\n - windows platform knows how to prepare openssl with system trust store certs\n - `LWS_WITH_SYS_CONMON` allows selected client connections to make precise\n measurements of connection performance and DNS results, and report them in a struct\n - New native support for uloop event loop (OpenWRT loop)\n - More options around JWT\n - Support TLS session caching and reuse by default, on both OpenSSL and\n mbedtls\n - Many fixes and improvements...\n\nv4.1.0\n======\n\n - NEW: travis / appveyor / bintray are replaced by Sai\n   https://libwebsockets.org/sai/ which for lws currently does 193 builds per\n   git push on 16 platforms, all self-hosted.  The homebrew bash scripts used\n   to select Minimal examples are replaced by CTest.  Platforms currently\n   include Fedora/AMD/GCC, Windows/AMD/mingw32, Windows/AMD/mingw64, Android/\n   aarch64/LLVM, esp-idf (on WROVER-KIT and HELTEC physical boards), Fedora/\n   RISCV (on QEMU)/GCC, CentOS8/AMD/GCC, Gentoo/AMD/GCC, Bionic/AMD/GCC,\n   Linkit 7697, Focal/AMD/GCC, Windows (on QEMU)/AMD/MSVC,\n   Focal/aarch64-RPI4/GCC, iOS/aarch64/LLVM and OSX/AMD/LLVM.\n\n - NEW: The single CMakeLists.txt has been refactored and modernized into smaller\n CMakeLists.txt in the subdirectory along with the code that is being managed\n for build by it.  Build options are still listed in the top level as before\n but the new way is much more maintainable.\n\n - NEW: event lib support on Unix is now built into dynamically loaded plugins\n and brought in at runtime, allowing all of the support to be built in\n isolation without conflicts, and separately packaged with individual\n dependencies.  See ./READMEs/event-libs.md for details and how to force\n the old static build into lws method.\n\n - NEW: Captive Portal Detection.  Lws can determine if the active default\n route is able to connect to the internet, or is in a captive portal type\n situation, by trying to connect to a remote server that will respond in an\n unusual way, like provide a 204.\n\n - NEW: Secure streams: Support system trust store if it exists\n                        Build on Windows\n\t\t\tSupport lws raw socket protocol in SS\n\t\t\tSupport Unix Domain Socket transport\n\n - NEW: Windows: Support Unix Domain Sockets same as other platforms\n\n - NEW: Windows: Build using native pthreads, async dns, ipv6 on MSVC\n\n - NEW: lws_struct: BLOB support\n\n - NEW: lws_sul: Now provides two sorted timer domains, a default one as\n before, and another whose scheduled events are capable to wake the system from suspend\n\n - NEW: System Message Distribution: lws_smd provides a very lightweight way\n to pass short messages between subsystems both in RTOS type case where the\n subsystems are all on the lws event loop, and in the case participants are in\n different processes, using Secure Streams proxying.   Participants register a bitmap\n of message classes they care about; if no particpant cares about a particular message,\n it is rejected at allocation time for the sender, making it cheap to provide messages\n speculatively.  See lib/system/smd/README.md for full details.\n\n - NEW: lws_drivers: wrappers for SDK driver abstractions (or actual drivers)\n\t\t See lib/drivers/README.md, example implementations\n\t\t minimal-examples/embedded/esp32/esp-wrover-kit\n                     - generic gpio\n\t\t     - generic LED (by name)    lib/drivers/led/README.md\n\t\t     - generic PWM, sophisticated interpolated table\n\t\t                    sequencers with crossfade  \n\t\t     - generic button (by name), with debounce and press classification\n\t\t                       emitting rich SMD click, long-click, double-click,\n\t\t\t\t       down, repeat, up JSON messages\n\t\t\t\t       lib/drivers/button/README.md\n\t\t     - bitbang i2c on generic gpio (hw support can use same\n\t\t                       abstract API)\n\t\t     - bitbang spi on generic gpio (hw support can use same\n\t\t                       abstract API)\n\t\t     - generic display object, can be wired up to controller\n\t\t                  drivers that hook up by generic i2c or spi,\n\t\t\t\t  generic backlight PWM sequencing and\n\t\t\t\t  blanking timer support\n\t\t     - generic settings storage: get and set blobs by name\n\t\t     - generic network device: netdev abstract class with\n\t                                       WIFI / Ethernet implementations\n\t\t\t\t\t       using underlying SDK APIs;\n\t\t\t\t\t       generic 80211 Scan managements\n\t\t\t\t\t       and credentials handling via\n\t\t\t\t\t       lws_settings\n\t\t     This is the new way to provide embedded platform\n\t\t     functionality that was in the past done like\n\t\t     esp32-factory.  Unlike the old way, the new way has no\n\t\t     native apis in it and can be built on other SDK / SoCs\n\t\t     the same.\n\n - NEW: Security-aware JWS JWT (JSON Web Tokens) apis are provided on top of the existing\n JOSE / JWS apis.  All the common algorithms are available along with some\n high level apis like lws http cookie -> JWT struct -> lws http cookie.\n\n - REMOVED: esp32-helper and friends used by esp32-factory now lws_drivers\n exists\n\n - REMOVED: generic sessions and friends now JWT is provided\n\nv4.0.0\n======\n\n - NEW: Lws is now under the MIT license, see ./LICENSE for details\n \n - NEW: GLIB native event loop support, lws + gtk example\n\n - NEW: native lws MQTT client... supports client stream binding like h2 when\n   multiple logical connections are going to the same endpoint over MQTT, they\n   transparently and independently share the one connection + tls tunnel\n \n - NEW: \"Secure Streams\"... if you are making a device with client connections\n   to the internet or cloud, this allows separation of the communications\n   policy (endpoints, tls cert validation, protocols, etc) from the code, with\n   the goal you can combine streams, change protocols and cloud provision, and\n   reflect that in the device's JSON policy document without having to change\n   any code.\n\n - NEW: lws_system: New lightweight and efficient Asynchronous DNS resolver\n   implementation for both A and AAAA records, supports recursive (without\n   recursion in code) lookups, caching, and getaddrinfo() compatible results\n   scheme (from cache directly without per-consumer allocation).  Able to\n   perform DNS lookups without introducing latency in the event loop.\n\n - NEW: lws_system: ntpclient implementation with interface for setting system\n   time via lws_system ops\n \n - NEW: lws_system: dhcpclient implementation\n \n - NEW: Connection validity tracking, autoproduce PING/PONG for protocols that\n   support it if not informed that the connection has passed data in both\n   directions recently enough\n\n - NEW: lws_retry: standardized exponential backoff and retry timing based\n   around backoff table and lws_sul\n\n - NEW: there are official public helpers for unaligned de/serialization of all\n   common types, see eh, lws_ser_wu16be() in include/libwebsockets/lws-misc.h\n\n - NEW: lws_tls_client_vhost_extra_cert_mem() api allows attaching extra certs\n   to a client vhost from DER in memory\n   \n - NEW: lws_system: generic blobs support passing auth tokens, per-connection\n   client certs etc from platform into lws\n\n - NEW: public helpers to consume and produce ipv4/6 addresses in a clean way,\n   along with lws_sockaddr46 type now public.  See eg, lws_sockaddr46-based\n   lws_sa46_parse_numeric_address(), lws_write_numeric_address()\n   in include/libwebsockets/lws-network-helper.h\n\n - Improved client redirect handling, h2 compatibility\n \n - NEW: lwsac: additional features for constant folding support (strings that\n   already are in the lwsac can be pointed to without copying again), backfill\n   (look for gaps in previous chunks that could take a new use size), and\n   lwsac_extend() so last use() can attempt to use more unallocated chunk space\n\n - NEW: lws_humanize: apis for reporting scalar quanties like 1234 as \"1.234KB\"\n   with the scaled symbol strings passed in by caller\n\n - NEW: freertos: support lws_cancel_service() by using UDP pair bound to lo,\n   since it doesn't have logical pipes\n\n - NEW: \"esp32\" plat, which implemented freertos plat compatibility on esp32, is\n   renamed to \"freertos\" plat, targeting esp32 and other freertos platforms\n\n - NEW: base64 has an additional api supporting stateful decode, where the input\n   is not all in the same place at the same time and can be processed\n   incrementally\n\n - NEW: lws ws proxy: support RFC8441\n   \n - NEW: lws_spawn_piped apis: generic support for vforking a process with child\n   wsis attached to its stdin, stdout and stderr via pipes.  When processes are\n   reaped, a specified callback is triggered.  Currently Linux + OSX.\n   \n - NEW: lws_fsmount apis: Linux-only overlayfs mount and unmount management for\n   aggregating read-only layers with disposable, changeable upper layer fs\n\n - Improvements for RTOS / small build case bring the footprint of lws v4 below\n   that of v3.1 on ARM \n   \n - lws_tokenize: flag specifying # should mark rest of line as comment\n\n - NEW: minimal example for integrating libasound / alsa via raw file\n\n - lws_struct: sqlite and json / lejp translation now usable\n\n\nv3.2.0\n======\n\n - This is the last planned release under LGPLv2+SLE.  It's not planned to be\n   maintained like previous releases, please switch to master for the latest\n   stuff or continue to use v3.1-stable until the next release under the\n   new MIT license.\n\n - NEW: completely refactored scheduler with a unified, sorted us-resolution\n   linked-list implementation.  All polled checks like timeout are migrated\n   to use the new timers, which also work on the event lib implementations.\n   Faster operation, us-resolution timeouts and generic scheduled callbacks\n   from the event loop.\n\n - NEW: lws_dsh specialized buffer memory allocator that can borrow space\n   from other cooperating buffers on the same list.\n\n - NEW: lws_sequencer allows managing multi-connection processes and\n   retries\n\n - NEW: memory buffer cert support\n\n - NEW: LWS_WITH_NETWORK in CMake... can be configured without any network-\n   related code at all\n\n - NEW: builds on QNX 6.5 and SmartOS\n\n - NEW: JOSE / JWK / JWS / JWE support, for all common ciphers and algs,\n   works on OpenSSL and mbedtls backends\n\n - NEW: gencrypto now has genaes and genec in addition to genrsa, works\n   on OpenSSL and mbedtls backends\n\n - NEW: raw_proxy role\n\n - NEW: Basic Auth works on ws connections\n\n - CHANGE: REMOVED: LWS_WITH_GENRSA, LWS_WITH_GENHASH, LWS_WITH_GENEC,\n LWS_WITH_GENAES have all been removed and combined into LWS_WITH_GENCRYPTO\n\n - CHANGE: REMOVED: LWS_WITH_JWS, LWS_WITH_JWE have been removed and combined\n into LWS_WITH_JOSE\n\nv3.1.0\n======\n\n - CHANGE: REMOVED: lws_client_connect() and lws_client_connect_extended()\n   compatibility apis for lws_client_connect_via_info() have been marked as\n   deprecated for several versions and are now removed.  Use\n   lws_client_connect_via_info() directly instead.\n\n - CHANGE: CMAKE:\n     - LWS_WITH_HTTP2:         now defaults ON\n\n - CHANGE: Minimal examples updated to use Content Security Policy best\n   practices, using\n   `LWS_SERVER_OPTION_HTTP_HEADERS_SECURITY_BEST_PRACTICES_ENFORCE` vhost\n   option flag and disabling of inline style and scripts.  A side-effect of\n   this is that buffers used to marshal headers have to be prepared to take\n   more content than previously... LWS_RECOMMENDED_MIN_HEADER_SPACE (2048\n   currently) is available for user (and internal) use to logically tie the\n   buffer size to this usecase (and follow future increases).\n\n - NEW: CMAKE\n     - LWS_FOR_GITOHASHI: sets various cmake options suitable for gitohashi\n     - LWS_WITH_ASAN: for Linux, enable build with ASAN\n\n     Don't forget LWS_WITH_DISTRO_RECOMMENDED, which enables a wide range of lws\n     options suitable for a distro build of the library.\n     \n - NEW: lws threadpool - lightweight pool of pthreads integrated to lws wsi, with\n   all synchronization to event loop handled internally, queue for excess tasks\n   [threadpool docs](https://libwebsockets.org/git/libwebsockets/tree/lib/misc/threadpool)\n   [threadpool minimal example](https://libwebsockets.org/git/libwebsockets/tree/minimal-examples/ws-server/minimal-ws-server-threadpool)\n   Cmake config: `-DLWS_WITH_THREADPOOL=1`\n\n - NEW: libdbus support integrated on lws event loop\n   [lws dbus docs](https://libwebsockets.org/git/libwebsockets/tree/lib/roles/dbus)\n   [lws dbus client minimal examples](https://libwebsockets.org/git/libwebsockets/tree/minimal-examples/dbus-client)\n   [lws dbus server minimal examples](https://libwebsockets.org/git/libwebsockets/tree/minimal-examples/dbus-server)\n   Cmake config: `-DLWS_ROLE_DBUS=1`\n\n - NEW: lws allocated chunks (lwsac) - helpers for optimized mass allocation of small\n   objects inside a few larger malloc chunks... if you need to allocate a lot of\n   inter-related structs for a limited time, this removes per-struct allocation\n   library overhead completely and removes the need for any destruction handling\n   [lwsac docs](https://libwebsockets.org/git/libwebsockets/tree/lib/misc/lwsac)\n   [lwsac minimal example](https://libwebsockets.org/git/libwebsockets/tree/minimal-examples/api-tests/api-test-lwsac)\n   Cmake Config: `-DLWS_WITH_LWSAC=1`\n\n - NEW: lws tokenizer - helper api for robustly tokenizing your own strings without\n   allocating or adding complexity.  Configurable by flags for common delimiter\n   sets and comma-separated-lists in the tokenizer.  Detects and reports syntax\n   errors.\n   [lws_tokenize docs](https://libwebsockets.org/git/libwebsockets/tree/include/libwebsockets/lws-tokenize.h)\n   [lws_tokenize minimal example / api test](https://libwebsockets.org/git/libwebsockets/tree/minimal-examples/api-tests/api-test-lws_tokenize)\n\n - NEW: lws full-text search - optimized trie generation, serialization,\n   autocomplete suggestion generation and instant global search support extensible\n   to huge corpuses of UTF-8 text while remaining super lightweight on resources.\n   [full-text search docs](https://libwebsockets.org/git/libwebsockets/tree/lib/misc/fts)\n   [full-text search minimal example / api test](https://libwebsockets.org/git/libwebsockets/tree/minimal-examples/api-tests/api-test-fts)\n   [demo](https://libwebsockets.org/ftsdemo/)\n   [demo sources](https://libwebsockets.org/git/libwebsockets/tree/plugins/protocol_fulltext_demo.c)\n   Cmake config: `-DLWS_WITH_FTS=1 -DLWS_WITH_LWSAC=1`\n\n - NEW: gzip + brotli http server-side compression - h1 and h2 automatic advertising\n   of server compression and application to files with mimetypes \"text/*\",\n   \"application/javascript\" and \"image/svg.xml\".\n   Cmake config: `-DLWS_WITH_HTTP_STREAM_COMPRESSION=1`, `-DLWS_WITH_HTTP_BROTLI=1`\n\n - NEW: managed disk cache - API for managing a directory containing cached files\n   with hashed names, and automatic deletion of LRU files once the cache is\n   above a given limit.\n   [lws diskcache docs](https://libwebsockets.org/git/libwebsockets/tree/include/libwebsockets/lws-diskcache.h)\n   Cmake config: `-DLWS_WITH_DISKCACHE=1`\n\n - NEW: http reverse proxy - lws mounts support proxying h1 or h2 requests to\n   a local or remote IP, or unix domain socket over h1.  This allows microservice\n   type architectures where parts of the common URL space are actually handled\n   by external processes which may be remote or on the same machine.\n   [lws gitohashi serving](https://libwebsockets.org/git/) is handled this way.\n   CMake config: `-DLWS_WITH_HTTP_PROXY=1`\n   \n - NEW: lws_buflist - internally several types of ad-hoc malloc'd buffer have\n   been replaced by a new, exported api `struct lws_buflist`.  This allows\n   multiple buffers to be chained and drawn down in strict FIFO order.\n\n - NEW: In the case of h1 upgrade, the connection header is checked to contain\n   \"upgrade\".   The vhost flag LWS_SERVER_OPTION_VHOST_UPG_STRICT_HOST_CHECK\n   also causes the Host: header to be confirmed to match the vhost name and\n   listen port.\n   \n - NEW: If no 404 redirect for `lws_return_http_status()` is specified for the vhost,\n   the status page produced will try to bring in a stylesheet `/error.css`.  This allows\n   you to produce styled 404 or other error pages with logos, graphics etc.  See\n   https://libwebsockets.org/git/badrepo for an example of what you can do with it.\n\nv3.0.0\n======\n\n - CHANGE: Clients used to call LWS_CALLBACK_CLOSED same as servers...\n   LWS_CALLBACK_CLIENT_CLOSED has been introduced and is called for clients\n   now.\n   \n - CHANGE: LWS_CALLBACK_CLIENT_CONNECTION_ERROR used to only be directed at\n   protocols[0].  However in many cases, the protocol to bind to was provided\n   at client connection info time and the wsi bound accordingly.  In those\n   cases, CONNECTION_ERROR is directed at the bound protocol, not protcols[0]\n   any more.\n\n - CHANGE: CMAKE: the following cmake defaults have changed with this version:\n \n     - LWS_WITH_ZIP_FOPS:      now defaults OFF\n     - LWS_WITH_RANGES:        now defaults OFF\n     - LWS_WITH_ZLIB:          now defaults OFF\n     - LWS_WITHOUT_EXTENSIONS: now defaults ON\n     \n - CHANGE: REMOVED: lws_alloc_vfs_file() (read a file to malloc buffer)\n \n - CHANGE: REMOVED: lws_read() (no longer useful outside of lws internals)\n \n - CHANGE: REMOVED: ESP8266... ESP32 is now within the same price range and much\n   more performant\n   \n - CHANGE: soname bump... don't forget to `ldconfig`\n     \n - NEW: all event libraries support \"foreign\" loop integration where lws itself\n   if just a temporary user of the loop unrelated to the actual loop lifecycle.\n   \n   See `minimal-http-server-eventlib-foreign` for example code demonstrating\n   this for all the event libraries.\n   \n   Internal loop in lws is also supported and demonstrated by\n   `minimal-http-server-eventlib`.\n \n - NEW: ws-over-h2 support.  This is a new RFC-on-the-way supported by Chrome\n   and shortly firefox that allows ws connections to be multiplexed back to the\n   server on the same tcp + tls wrapper h2 connection that the html and scripts\n   came in on.  This is hugely faster that discrete connections.\n \n - NEW: UDP socket adoption and related event callbacks\n \n - NEW: Multi-client connection binding, queuing and pipelining support.\n \n   Lws detects multiple client connections to the same server and port, and\n   optimizes how it handles them according to the server type and provided\n   flags.  For http/1.0, all occur with individual parallel connections.  For\n   http/1.1, you can enable keepalive pipelining, so the connections occur\n   sequentially on a single network connection.  For http/2, they all occur\n   as parallel streams within a single h2 network connection.\n   \n   See minimal-http-client-multi for example code. \n   \n - NEW: High resolution timer API for wsi, get a callback on your wsi with\n   LWS_CALLBACK_TIMER, set and reset the timer with lws_set_timer_usecs(wsi, us)\n   Actual resolution depends on event backend.  Works with all backends, poll,\n   libuv, libevent, and libev.\n   \n - NEW: Protocols can arrange vhost-protocol instance specific callbacks with\n   second resolution using `lws_timed_callback_vh_protocol()`\n\n - NEW: ACME client plugin for self-service TLS certificates\n  \n - NEW: RFC7517 JSON Web Keys RFC7638 JWK thumbprint, and RFC7515 JSON Web\n    signatures support\n  \n - NEW: lws_cancel_service() now provides a generic way to synchronize events\n   from other threads, which appear as a LWS_CALLBACK_EVENT_WAIT_CANCELLED\n   callback on all protocols.  This is compatible with all the event libraries.\n\n - NEW: support BSD poll() where changes to the poll wait while waiting are\n   undone.\n\n - NEW: Introduce generic hash, hmac and RSA apis that operate the same\n   regardless of OpenSSL or mbedTLS tls backend\n  \n - NEW: Introduce X509 element query api that works the same regardless of\n   OpenSSL or mbedTLS tls backend\n    \n - NEW: Introduce over 30 \"minimal examples\" in ./minimal-examples... these\n   replace most of the old test servers\n   \n    - test-echo -> minimal-ws-server-echo and minimal-ws-client-echo\n\n    - test-server-libuv / -libevent / -libev ->\n         minimal-https-server-eventlib / -eventlib-foreign / -eventlib-demos\n\n    - test-server-v2.0 -> folded into all the minimal servers\n\n    - test-server direct http serving -> minimal-http-server-dynamic\n    \n   The minimal examples allow individual standalone build using their own\n   small CMakeLists.txt.\n   \n - NEW: lws now detects any back-to-back writes that did not go through the\n   event loop inbetween and reports them.  This will flag any possibility of\n   failure rather than wait until the problem happens.\n   \n - NEW: CMake has LWS_WITH_DISTRO_RECOMMENDED to select features that are\n   appropriate for distros\n   \n - NEW: Optional vhost URL `error_document_404` if given causes a redirect there\n   instead of serve the default 404 page.\n   \n - NEW: lws_strncpy() wrapper guarantees NUL in copied string even if it was\n   truncated to fit.\n   \n - NEW: for client connections, local protocol binding name can be separated\n   from the ws subprotocol name if needed, using .local_protocol_name\n\n - NEW: Automatic detection of time discontiguities\n   \n - NEW: Applies TCP_USER_TIMEOUT for Linux tcp keepalive where available\n     \n - QA: 1600 tests run on each commit in Travis CI, including almost all\n   Autobahn in client and server mode, various h2load tests, h2spec, attack.sh\n   the minimal example selftests and others.\n\n - QA: fix small warnings introduced on gcc8.x (eg, Fedora 28)\n \n - QA: Add most of -Wextra on gcc (-Wsign-compare, -Wignored-qualifiers,\n   -Wtype-limits, -Wuninitialized)\n   \n - QA: clean out warnings on windows\n \n - QA: pass all 146 h2spec tests now on strict\n \n - QA: introduce 35 selftests that operate different minimal examples against\n   each other and confirm the results.\n \n - QA: LWS_WITH_MINIMAL_EXAMPLES allows mass build of all relevant minimal-\n   examples with the LWS build, for CI and to make all the example binaries\n   available from the lws build dir ./bin\n \n - REFACTOR: the lws source directory layout in ./lib has been radically\n   improved, and there are now README.md files in selected subdirs with extra\n   documentation of interest to people working on lws itself.\n\n - REFACTOR: pipelined transactions return to the event loop before starting the\n   next part. \n \n - REFACTOR: TLS: replace all TLS library constants with generic LWS ones and\n   adapt all the TLS library code to translate to these common ones.\n   \n   Isolated all the tls-related private stuff in `./lib/tls/private.h`, and all\n   the mbedTLS stuff in `./lib/tls/mbedtls` + openSSL stuff in\n   `./lib/tls/openssl`\n   \n - REFACTOR: the various kinds of wsi possible with lws have been extracted\n   from the main code and isolated into \"roles\" in `./lib/roles` which\n   communicate with the core code via an ops struct.  Everything related to\n   ah is migrated to the http role.\n   \n   wsi modes are eliminated and replaced by the ops pointer for the role the\n   wsi is performing.  Generic states for wsi are available to control the\n   lifecycle using core code.\n   \n   Adding new \"roles\" is now much easier with the changes and ops struct to\n   plug into.\n\n - REFACTOR: reduce four different kinds of buffer management in lws into a\n   generic scatter-gather struct lws_buflist. \n\n - REFACTOR: close notifications go through event loop\n\n\nv2.4.0\n======\n\n - HTTP/2 server support is now mature and usable!  LWS_WITH_HTTP2=1 enables it.\n   Uses ALPN to serve HTTP/2, HTTP/1 and ws[s] connections all from the same\n   listen port seamlessly.  (Requires ALPN-capable OpenSSL 1.1 or mbedTLS).\n\n - LWS_WITH_MBEDTLS=1 at CMake now builds and works against mbedTLS instead of\n   OpenSSL.  Most things work identically, although on common targets where\n   OpenSSL has acceleration, mbedTLS is many times slower in operation.  However\n   it is a lot smaller codewise.\n   \n - Generic hash apis introduced that work the same on mbedTLS or OpenSSL backend\n \n - LWS_WITH_PEER_LIMITS tracks IPs across all vhosts and allows restrictions on\n   both the number of simultaneous connections and wsi in use for any single IP\n\n - lws_ring apis provide a generic single- or multi-tail ringbuffer... mirror\n   protocol now uses this.  Features include ring elements may be sized to fit\n   structs in the ringbuffer, callback when no tail any longer needs an element\n   and it can be deleted, and zerocopy options to write new members directly\n   into the ringbuffer, and use the ringbuffer element by address too.\n \n - abstract ssh 2 server plugin included, with both plugin and standalone\n   demos provided.  You can bind the plugin to a vhost and also serve full-\n   strength ssh from the vhost.  IO from the ssh server is controlled by an\n   \"ops\" struct of callbacks for tx, rx, auth etc.\n   \n - Many fixes, cleanups, source refactors and other improvements.\n\n\nv2.3.0\n======\n\n - ESP32 OpenSSL support for client and server\n\n - ESP32 4 x WLAN credential slots may be configured\n\n - Libevent event loop support\n\n - SOCKS5 proxy support\n\n - lws_meta protocol for websocket connection multiplexing\n\n - lws_vhost_destroy() added... allows dynamic removal of listening\n   vhosts.  Vhosts with shared listen sockets adopt the listen socket\n   automatically if the owner is destroyed.\n\n - IPv6 on Windows\n\n - Improved CGI handling suitable for general CGI scripting, eg, PHP\n\n - Convert even the \"old style\" test servers to use statically included\n   plugin sources\n\n - LWS_WITH_STATS cmake option dumps resource usage and timing information\n   every few seconds to debug log, including latency information about\n   delay from asking for writeable callback to getting it\n\n - Large (> 2GB) files may be served\n\n - LWS_WITH_HTTP_PROXY Cmake option adds proxying mounts\n\n - Workaround for libev build by disabling -Werror on the test app\n\n - HTTP2 support disabled since no way to serve websockets on it\n\n\nv2.2.0\n======\n\nMajor new features\n\n - A mount can be protected by Basic Auth... in lwsws it looks like this\n\n ```\n{\n        \"mountpoint\": \"/basic-auth\",\n        \"origin\": \"file://_lws_ddir_/libwebsockets-test-server/private\",\n        \"basic-auth\": \"/var/www/balogins-private\"\n}\n```\n\nThe text file named in `basic-auth` contains user:password information\none per line.\n\nSee README.lwsws.md for more information.\n\n - RFC7233 RANGES support in lws server... both single and multipart.\n This allows seeking for multimedia file serving and download resume.\n It's enabled by default but can be disabled by CMake option.\n\n - On Linux, lwsws can reload configuration without dropping ongoing\n connections, when sent a SIGHUP.  The old configuration drops its\n listen sockets so the new configuration can listen on them.\n New connections connect to the server instance with the new\n configuration.  When all old connections eventually close, the old\n instance automatically exits.  This is equivalent to\n `systemctl reload apache`\n\n - New `adopt` api allow adoption including SSL negotiation and\n for raw sockets and file descriptors.\n\n - Chunked transfer encoding supported for client and server\n\n - Adaptations to allow operations inside OPTEE Secure World\n\n - ESP32 initial port - able to do all test server functions. See\n README.build.md\n\n - Serving gzipped files from inside a ZIP file is supported... this\n includes directly serving the gzipped content if the client\n indicated it could accept it (ie, almost all browsers) saving\n bandwidth and time.  For clients that can't accept it, lws\n automatically decompresses and serves the content in memory-\n efficient chunks. Only a few hundred bytes of heap are needed\n to serve any size file from inside the zip.  See README.coding.md\n\n - RAW file descriptors may now be adopted into the lws event loop,\n independent of event backend (including poll service).\n See README.coding.md\n\n - RAW server socket descriptors may now be enabled on the vhost if\n the first thing sent on the connection is not a valid http method.\n The user code can associate these with a specific protocol per\n vhost, and RAW-specific callbacks appear there for creation, rx,\n writable and close.  See libwebsockets-test-server-v2.0 for an example.\n See README.coding.md\n\n - RAW client connections are now possible using the method \"RAW\".\n After connection, the socket is associated to the protocol\n named in the client connection info and RAW-specific callbacks\n appear there for creation, rx, writable and close.\n See libwebsockets-test-client (with raw://) for an example.\n See README.coding.md\n\n\n(for earlier changelogs, see the tagged releases)\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "component.mk",
          "type": "blob",
          "size": 1.6201171875,
          "content": "COMPONENT_DEPENDS := mbedtls openssl\n#COMPONENT_ADD_INCLUDEDIRS := ../../../../../../../../../../../../../../../../../../../../$(COMPONENT_BUILD_DIR)/include\n\nCOMPONENT_OWNBUILDTARGET := 1\n\nCROSS_PATH1 := $(shell which xtensa-esp32-elf-gcc )\nCROSS_PATH := $(shell dirname $(CROSS_PATH1) )/..\n\n# detect MSYS2 environment and set generator flag if found\n# also set executable extension to .exe so that tools can be properly found\n# and disable bundled zlib\nMSYS_VERSION = $(if $(findstring Msys, $(shell uname -o)),$(word 1, $(subst ., ,$(shell uname -r))),0)\nifneq ($(MSYS_VERSION),0)\n\tMSYS_FLAGS = -DLWS_WITH_BUNDLED_ZLIB=0 -DEXECUTABLE_EXT=.exe -G'MSYS Makefiles'\nendif\n\n# -DNDEBUG=1 after cflags stops debug etc being built\n.PHONY: build\nbuild:\n\tcd $(COMPONENT_BUILD_DIR) ; \\\n\techo \"doing lws cmake\" ; \\\n\tcmake $(COMPONENT_PATH)  -DLWS_C_FLAGS=\"$(CFLAGS) -DNDEBUG=1\" \\\n\t\t-DIDF_PATH=$(IDF_PATH) \\\n\t\t-DCROSS_PATH=$(CROSS_PATH) \\\n\t\t-DBUILD_DIR_BASE=$(BUILD_DIR_BASE) \\\n\t\t-DCMAKE_TOOLCHAIN_FILE=$(COMPONENT_PATH)/contrib/cross-esp32.cmake \\\n\t\t-DCMAKE_BUILD_TYPE=RELEASE \\\n\t\t-DLWS_MBEDTLS_INCLUDE_DIRS=\"${IDF_PATH}/components/openssl/include;${IDF_PATH}/components/mbedtls/mbedtls/include;${IDF_PATH}/components/mbedtls/port/include\" \\\n\t\t-DLWS_WITH_STATS=0 \\\n\t\t-DLWS_WITH_HTTP2=1 \\\n\t\t-DLWS_WITH_RANGES=1 \\\n\t\t-DLWS_WITH_ACME=1 \\\n\t\t-DLWS_WITH_ZLIB=1 \\\n\t\t-DLWS_WITH_ZIP_FOPS=1 \\\n\t\t-DZLIB_LIBRARY=$(BUILD_DIR_BASE)/zlib/libzlib.a \\\n\t\t-DZLIB_INCLUDE_DIR=$(COMPONENT_PATH)/../zlib \\\n\t\t-DLWS_WITH_ESP32=1 \\\n\t\t$(MSYS_FLAGS) ; \\\n\tmake && \\\n\tcp ${COMPONENT_BUILD_DIR}/lib/libwebsockets.a ${COMPONENT_BUILD_DIR}/liblibwebsockets.a\n\nclean: myclean\n\nmyclean:\n\trm -rf ./build\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc-assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "lgtm.yml",
          "type": "blob",
          "size": 0.07421875,
          "content": "queries:\n- exclude: cpp/short-global-name\n- exclude: cpp/useless-expression\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "libwebsockets.dox",
          "type": "blob",
          "size": 112.3701171875,
          "content": "# Doxyfile 1.9.1\n\n# This file describes the settings to be used by the documentation system\n# doxygen (www.doxygen.org) for a project.\n#\n# All text after a double hash (##) is considered a comment and is placed in\n# front of the TAG it is preceding.\n#\n# All text after a single hash (#) is considered a comment and will be ignored.\n# The format is:\n# TAG = value [value, ...]\n# For lists, items can also be appended using:\n# TAG += value [value, ...]\n# Values that contain spaces should be placed between quotes (\\\" \\\").\n\n#---------------------------------------------------------------------------\n# Project related configuration options\n#---------------------------------------------------------------------------\n\n# This tag specifies the encoding used for all characters in the configuration\n# file that follow. The default is UTF-8 which is also the encoding used for all\n# text before the first occurrence of this tag. Doxygen uses libiconv (or the\n# iconv built into libc) for the transcoding. See\n# https://www.gnu.org/software/libiconv/ for the list of possible encodings.\n# The default value is: UTF-8.\n\nDOXYFILE_ENCODING      = UTF-8\n\n# The PROJECT_NAME tag is a single word (or a sequence of words surrounded by\n# double-quotes, unless you are using Doxywizard) that should identify the\n# project for which the documentation is generated. This name is used in the\n# title of most generated pages and in a few other places.\n# The default value is: My Project.\n\nPROJECT_NAME           = libwebsockets\n\n# The PROJECT_NUMBER tag can be used to enter a project or revision number. This\n# could be handy for archiving the generated documentation or if some version\n# control system is used.\n\nPROJECT_NUMBER         =\n\n# Using the PROJECT_BRIEF tag one can provide an optional one line description\n# for a project that appears at the top of each page and should give viewer a\n# quick idea about the purpose of the project. Keep the description short.\n\nPROJECT_BRIEF          = \"Lightweight C library for HTML5 websockets\"\n\n# With the PROJECT_LOGO tag one can specify a logo or an icon that is included\n# in the documentation. The maximum height of the logo should not exceed 55\n# pixels and the maximum width should not exceed 200 pixels. Doxygen will copy\n# the logo to the output directory.\n\nPROJECT_LOGO           = ./test-apps/libwebsockets.org-logo.svg\n\n# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) path\n# into which the generated documentation will be written. If a relative path is\n# entered, it will be relative to the location where doxygen was started. If\n# left blank the current directory will be used.\n\nOUTPUT_DIRECTORY       = doc\n\n# If the CREATE_SUBDIRS tag is set to YES then doxygen will create 4096 sub-\n# directories (in 2 levels) under the output directory of each output format and\n# will distribute the generated files over these directories. Enabling this\n# option can be useful when feeding doxygen a huge amount of source files, where\n# putting all generated files in the same directory would otherwise causes\n# performance problems for the file system.\n# The default value is: NO.\n\nCREATE_SUBDIRS         = NO\n\n# If the ALLOW_UNICODE_NAMES tag is set to YES, doxygen will allow non-ASCII\n# characters to appear in the names of generated files. If set to NO, non-ASCII\n# characters will be escaped, for example _xE3_x81_x84 will be used for Unicode\n# U+3044.\n# The default value is: NO.\n\nALLOW_UNICODE_NAMES    = NO\n\n# The OUTPUT_LANGUAGE tag is used to specify the language in which all\n# documentation generated by doxygen is written. Doxygen will use this\n# information to generate all constant output in the proper language.\n# Possible values are: Afrikaans, Arabic, Armenian, Brazilian, Catalan, Chinese,\n# Chinese-Traditional, Croatian, Czech, Danish, Dutch, English (United States),\n# Esperanto, Farsi (Persian), Finnish, French, German, Greek, Hungarian,\n# Indonesian, Italian, Japanese, Japanese-en (Japanese with English messages),\n# Korean, Korean-en (Korean with English messages), Latvian, Lithuanian,\n# Macedonian, Norwegian, Persian (Farsi), Polish, Portuguese, Romanian, Russian,\n# Serbian, Serbian-Cyrillic, Slovak, Slovene, Spanish, Swedish, Turkish,\n# Ukrainian and Vietnamese.\n# The default value is: English.\n\nOUTPUT_LANGUAGE        = English\n\n# The OUTPUT_TEXT_DIRECTION tag is used to specify the direction in which all\n# documentation generated by doxygen is written. Doxygen will use this\n# information to generate all generated output in the proper direction.\n# Possible values are: None, LTR, RTL and Context.\n# The default value is: None.\n\nOUTPUT_TEXT_DIRECTION  = None\n\n# If the BRIEF_MEMBER_DESC tag is set to YES, doxygen will include brief member\n# descriptions after the members that are listed in the file and class\n# documentation (similar to Javadoc). Set to NO to disable this.\n# The default value is: YES.\n\nBRIEF_MEMBER_DESC      = YES\n\n# If the REPEAT_BRIEF tag is set to YES, doxygen will prepend the brief\n# description of a member or function before the detailed description\n#\n# Note: If both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the\n# brief descriptions will be completely suppressed.\n# The default value is: YES.\n\nREPEAT_BRIEF           = YES\n\n# This tag implements a quasi-intelligent brief description abbreviator that is\n# used to form the text in various listings. Each string in this list, if found\n# as the leading text of the brief description, will be stripped from the text\n# and the result, after processing the whole list, is used as the annotated\n# text. Otherwise, the brief description is used as-is. If left blank, the\n# following values are used ($name is automatically replaced with the name of\n# the entity):The $name class, The $name widget, The $name file, is, provides,\n# specifies, contains, represents, a, an and the.\n\nABBREVIATE_BRIEF       =\n\n# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then\n# doxygen will generate a detailed section even if there is only a brief\n# description.\n# The default value is: NO.\n\nALWAYS_DETAILED_SEC    = NO\n\n# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all\n# inherited members of a class in the documentation of that class as if those\n# members were ordinary class members. Constructors, destructors and assignment\n# operators of the base classes will not be shown.\n# The default value is: NO.\n\nINLINE_INHERITED_MEMB  = YES\n\n# If the FULL_PATH_NAMES tag is set to YES, doxygen will prepend the full path\n# before files name in the file list and in the header files. If set to NO the\n# shortest path that makes the file name unique will be used\n# The default value is: YES.\n\nFULL_PATH_NAMES        = YES\n\n# The STRIP_FROM_PATH tag can be used to strip a user-defined part of the path.\n# Stripping is only done if one of the specified strings matches the left-hand\n# part of the path. The tag can be used to show relative paths in the file list.\n# If left blank the directory from which doxygen is run is used as the path to\n# strip.\n#\n# Note that you can specify absolute paths here, but also relative paths, which\n# will be relative from the directory where doxygen is started.\n# This tag requires that the tag FULL_PATH_NAMES is set to YES.\n\nSTRIP_FROM_PATH        =\n\n# The STRIP_FROM_INC_PATH tag can be used to strip a user-defined part of the\n# path mentioned in the documentation of a class, which tells the reader which\n# header file to include in order to use a class. If left blank only the name of\n# the header file containing the class definition is used. Otherwise one should\n# specify the list of include paths that are normally passed to the compiler\n# using the -I flag.\n\nSTRIP_FROM_INC_PATH    =\n\n# If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter (but\n# less readable) file names. This can be useful is your file systems doesn't\n# support long names like on DOS, Mac, or CD-ROM.\n# The default value is: NO.\n\nSHORT_NAMES            = NO\n\n# If the JAVADOC_AUTOBRIEF tag is set to YES then doxygen will interpret the\n# first line (until the first dot) of a Javadoc-style comment as the brief\n# description. If set to NO, the Javadoc-style will behave just like regular Qt-\n# style comments (thus requiring an explicit @brief command for a brief\n# description.)\n# The default value is: NO.\n\nJAVADOC_AUTOBRIEF      = NO\n\n# If the JAVADOC_BANNER tag is set to YES then doxygen will interpret a line\n# such as\n# /***************\n# as being the beginning of a Javadoc-style comment \"banner\". If set to NO, the\n# Javadoc-style will behave just like regular comments and it will not be\n# interpreted by doxygen.\n# The default value is: NO.\n\nJAVADOC_BANNER         = NO\n\n# If the QT_AUTOBRIEF tag is set to YES then doxygen will interpret the first\n# line (until the first dot) of a Qt-style comment as the brief description. If\n# set to NO, the Qt-style will behave just like regular Qt-style comments (thus\n# requiring an explicit \\brief command for a brief description.)\n# The default value is: NO.\n\nQT_AUTOBRIEF           = NO\n\n# The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make doxygen treat a\n# multi-line C++ special comment block (i.e. a block of //! or /// comments) as\n# a brief description. This used to be the default behavior. The new default is\n# to treat a multi-line C++ comment block as a detailed description. Set this\n# tag to YES if you prefer the old behavior instead.\n#\n# Note that setting this tag to YES also means that rational rose comments are\n# not recognized any more.\n# The default value is: NO.\n\nMULTILINE_CPP_IS_BRIEF = NO\n\n# By default Python docstrings are displayed as preformatted text and doxygen's\n# special commands cannot be used. By setting PYTHON_DOCSTRING to NO the\n# doxygen's special commands can be used and the contents of the docstring\n# documentation blocks is shown as doxygen documentation.\n# The default value is: YES.\n\nPYTHON_DOCSTRING       = YES\n\n# If the INHERIT_DOCS tag is set to YES then an undocumented member inherits the\n# documentation from any documented member that it re-implements.\n# The default value is: YES.\n\nINHERIT_DOCS           = YES\n\n# If the SEPARATE_MEMBER_PAGES tag is set to YES then doxygen will produce a new\n# page for each member. If set to NO, the documentation of a member will be part\n# of the file/class/namespace that contains it.\n# The default value is: NO.\n\nSEPARATE_MEMBER_PAGES  = NO\n\n# The TAB_SIZE tag can be used to set the number of spaces in a tab. Doxygen\n# uses this value to replace tabs by spaces in code fragments.\n# Minimum value: 1, maximum value: 16, default value: 4.\n\nTAB_SIZE               = 8\n\n# This tag can be used to specify a number of aliases that act as commands in\n# the documentation. An alias has the form:\n# name=value\n# For example adding\n# \"sideeffect=@par Side Effects:\\n\"\n# will allow you to put the command \\sideeffect (or @sideeffect) in the\n# documentation, which will result in a user-defined paragraph with heading\n# \"Side Effects:\". You can put \\n's in the value part of an alias to insert\n# newlines (in the resulting output). You can put ^^ in the value part of an\n# alias to insert a newline as if a physical newline was in the original file.\n# When you need a literal { or } or , in the value part of an alias you have to\n# escape them by means of a backslash (\\), this can lead to conflicts with the\n# commands \\{ and \\} for these it is advised to use the version @{ and @} or use\n# a double escape (\\\\{ and \\\\})\n\nALIASES                =\n\n# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C sources\n# only. Doxygen will then generate output that is more tailored for C. For\n# instance, some of the names that are used will be different. The list of all\n# members will be omitted, etc.\n# The default value is: NO.\n\nOPTIMIZE_OUTPUT_FOR_C  = YES\n\n# Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java or\n# Python sources only. Doxygen will then generate output that is more tailored\n# for that language. For instance, namespaces will be presented as packages,\n# qualified scopes will look different, etc.\n# The default value is: NO.\n\nOPTIMIZE_OUTPUT_JAVA   = NO\n\n# Set the OPTIMIZE_FOR_FORTRAN tag to YES if your project consists of Fortran\n# sources. Doxygen will then generate output that is tailored for Fortran.\n# The default value is: NO.\n\nOPTIMIZE_FOR_FORTRAN   = NO\n\n# Set the OPTIMIZE_OUTPUT_VHDL tag to YES if your project consists of VHDL\n# sources. Doxygen will then generate output that is tailored for VHDL.\n# The default value is: NO.\n\nOPTIMIZE_OUTPUT_VHDL   = NO\n\n# Set the OPTIMIZE_OUTPUT_SLICE tag to YES if your project consists of Slice\n# sources only. Doxygen will then generate output that is more tailored for that\n# language. For instance, namespaces will be presented as modules, types will be\n# separated into more groups, etc.\n# The default value is: NO.\n\nOPTIMIZE_OUTPUT_SLICE  = NO\n\n# Doxygen selects the parser to use depending on the extension of the files it\n# parses. With this tag you can assign which parser to use for a given\n# extension. Doxygen has a built-in mapping, but you can override or extend it\n# using this tag. The format is ext=language, where ext is a file extension, and\n# language is one of the parsers supported by doxygen: IDL, Java, JavaScript,\n# Csharp (C#), C, C++, D, PHP, md (Markdown), Objective-C, Python, Slice, VHDL,\n# Fortran (fixed format Fortran: FortranFixed, free formatted Fortran:\n# FortranFree, unknown formatted Fortran: Fortran. In the later case the parser\n# tries to guess whether the code is fixed or free formatted code, this is the\n# default for Fortran type files). For instance to make doxygen treat .inc files\n# as Fortran files (default is PHP), and .f files as C (default is Fortran),\n# use: inc=Fortran f=C.\n#\n# Note: For files without extension you can use no_extension as a placeholder.\n#\n# Note that for custom extensions you also need to set FILE_PATTERNS otherwise\n# the files are not read by doxygen. When specifying no_extension you should add\n# * to the FILE_PATTERNS.\n#\n# Note see also the list of default file extension mappings.\n\nEXTENSION_MAPPING      = png=none\n\n# If the MARKDOWN_SUPPORT tag is enabled then doxygen pre-processes all comments\n# according to the Markdown format, which allows for more readable\n# documentation. See https://daringfireball.net/projects/markdown/ for details.\n# The output of markdown processing is further processed by doxygen, so you can\n# mix doxygen, HTML, and XML commands with Markdown formatting. Disable only in\n# case of backward compatibilities issues.\n# The default value is: YES.\n\nMARKDOWN_SUPPORT       = YES\n\n# When the TOC_INCLUDE_HEADINGS tag is set to a non-zero value, all headings up\n# to that level are automatically included in the table of contents, even if\n# they do not have an id attribute.\n# Note: This feature currently applies only to Markdown headings.\n# Minimum value: 0, maximum value: 99, default value: 5.\n# This tag requires that the tag MARKDOWN_SUPPORT is set to YES.\n\nTOC_INCLUDE_HEADINGS   = 5\n\n# When enabled doxygen tries to link words that correspond to documented\n# classes, or namespaces to their corresponding documentation. Such a link can\n# be prevented in individual cases by putting a % sign in front of the word or\n# globally by setting AUTOLINK_SUPPORT to NO.\n# The default value is: YES.\n\nAUTOLINK_SUPPORT       = YES\n\n# If you use STL classes (i.e. std::string, std::vector, etc.) but do not want\n# to include (a tag file for) the STL sources as input, then you should set this\n# tag to YES in order to let doxygen match functions declarations and\n# definitions whose arguments contain STL classes (e.g. func(std::string);\n# versus func(std::string) {}). This also make the inheritance and collaboration\n# diagrams that involve STL classes more complete and accurate.\n# The default value is: NO.\n\nBUILTIN_STL_SUPPORT    = NO\n\n# If you use Microsoft's C++/CLI language, you should set this option to YES to\n# enable parsing support.\n# The default value is: NO.\n\nCPP_CLI_SUPPORT        = NO\n\n# Set the SIP_SUPPORT tag to YES if your project consists of sip (see:\n# https://www.riverbankcomputing.com/software/sip/intro) sources only. Doxygen\n# will parse them like normal C++ but will assume all classes use public instead\n# of private inheritance when no explicit protection keyword is present.\n# The default value is: NO.\n\nSIP_SUPPORT            = NO\n\n# For Microsoft's IDL there are propget and propput attributes to indicate\n# getter and setter methods for a property. Setting this option to YES will make\n# doxygen to replace the get and set methods by a property in the documentation.\n# This will only work if the methods are indeed getting or setting a simple\n# type. If this is not the case, or you want to show the methods anyway, you\n# should set this option to NO.\n# The default value is: YES.\n\nIDL_PROPERTY_SUPPORT   = YES\n\n# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC\n# tag is set to YES then doxygen will reuse the documentation of the first\n# member in the group (if any) for the other members of the group. By default\n# all members of a group must be documented explicitly.\n# The default value is: NO.\n\nDISTRIBUTE_GROUP_DOC   = NO\n\n# If one adds a struct or class to a group and this option is enabled, then also\n# any nested class or struct is added to the same group. By default this option\n# is disabled and one has to add nested compounds explicitly via \\ingroup.\n# The default value is: NO.\n\nGROUP_NESTED_COMPOUNDS = NO\n\n# Set the SUBGROUPING tag to YES to allow class member groups of the same type\n# (for instance a group of public functions) to be put as a subgroup of that\n# type (e.g. under the Public Functions section). Set it to NO to prevent\n# subgrouping. Alternatively, this can be done per class using the\n# \\nosubgrouping command.\n# The default value is: YES.\n\nSUBGROUPING            = YES\n\n# When the INLINE_GROUPED_CLASSES tag is set to YES, classes, structs and unions\n# are shown inside the group in which they are included (e.g. using \\ingroup)\n# instead of on a separate page (for HTML and Man pages) or section (for LaTeX\n# and RTF).\n#\n# Note that this feature does not work in combination with\n# SEPARATE_MEMBER_PAGES.\n# The default value is: NO.\n\nINLINE_GROUPED_CLASSES = NO\n\n# When the INLINE_SIMPLE_STRUCTS tag is set to YES, structs, classes, and unions\n# with only public data fields or simple typedef fields will be shown inline in\n# the documentation of the scope in which they are defined (i.e. file,\n# namespace, or group documentation), provided this scope is documented. If set\n# to NO, structs, classes, and unions are shown on a separate page (for HTML and\n# Man pages) or section (for LaTeX and RTF).\n# The default value is: NO.\n\nINLINE_SIMPLE_STRUCTS  = YES\n\n# When TYPEDEF_HIDES_STRUCT tag is enabled, a typedef of a struct, union, or\n# enum is documented as struct, union, or enum with the name of the typedef. So\n# typedef struct TypeS {} TypeT, will appear in the documentation as a struct\n# with name TypeT. When disabled the typedef will appear as a member of a file,\n# namespace, or class. And the struct will be named TypeS. This can typically be\n# useful for C code in case the coding convention dictates that all compound\n# types are typedef'ed and only the typedef is referenced, never the tag name.\n# The default value is: NO.\n\nTYPEDEF_HIDES_STRUCT   = NO\n\n# The size of the symbol lookup cache can be set using LOOKUP_CACHE_SIZE. This\n# cache is used to resolve symbols given their name and scope. Since this can be\n# an expensive process and often the same symbol appears multiple times in the\n# code, doxygen keeps a cache of pre-resolved symbols. If the cache is too small\n# doxygen will become slower. If the cache is too large, memory is wasted. The\n# cache size is given by this formula: 2^(16+LOOKUP_CACHE_SIZE). The valid range\n# is 0..9, the default is 0, corresponding to a cache size of 2^16=65536\n# symbols. At the end of a run doxygen will report the cache usage and suggest\n# the optimal cache size from a speed point of view.\n# Minimum value: 0, maximum value: 9, default value: 0.\n\nLOOKUP_CACHE_SIZE      = 0\n\n# The NUM_PROC_THREADS specifies the number threads doxygen is allowed to use\n# during processing. When set to 0 doxygen will based this on the number of\n# cores available in the system. You can set it explicitly to a value larger\n# than 0 to get more control over the balance between CPU load and processing\n# speed. At this moment only the input processing can be done using multiple\n# threads. Since this is still an experimental feature the default is set to 1,\n# which efficively disables parallel processing. Please report any issues you\n# encounter. Generating dot graphs in parallel is controlled by the\n# DOT_NUM_THREADS setting.\n# Minimum value: 0, maximum value: 32, default value: 1.\n\nNUM_PROC_THREADS       = 1\n\n#---------------------------------------------------------------------------\n# Build related configuration options\n#---------------------------------------------------------------------------\n\n# If the EXTRACT_ALL tag is set to YES, doxygen will assume all entities in\n# documentation are documented, even if no documentation was available. Private\n# class members and static file members will be hidden unless the\n# EXTRACT_PRIVATE respectively EXTRACT_STATIC tags are set to YES.\n# Note: This will also disable the warnings about undocumented members that are\n# normally produced when WARNINGS is set to YES.\n# The default value is: NO.\n\nEXTRACT_ALL            = YES\n\n# If the EXTRACT_PRIVATE tag is set to YES, all private members of a class will\n# be included in the documentation.\n# The default value is: NO.\n\nEXTRACT_PRIVATE        = NO\n\n# If the EXTRACT_PRIV_VIRTUAL tag is set to YES, documented private virtual\n# methods of a class will be included in the documentation.\n# The default value is: NO.\n\nEXTRACT_PRIV_VIRTUAL   = NO\n\n# If the EXTRACT_PACKAGE tag is set to YES, all members with package or internal\n# scope will be included in the documentation.\n# The default value is: NO.\n\nEXTRACT_PACKAGE        = NO\n\n# If the EXTRACT_STATIC tag is set to YES, all static members of a file will be\n# included in the documentation.\n# The default value is: NO.\n\nEXTRACT_STATIC         = NO\n\n# If the EXTRACT_LOCAL_CLASSES tag is set to YES, classes (and structs) defined\n# locally in source files will be included in the documentation. If set to NO,\n# only classes defined in header files are included. Does not have any effect\n# for Java sources.\n# The default value is: YES.\n\nEXTRACT_LOCAL_CLASSES  = YES\n\n# This flag is only useful for Objective-C code. If set to YES, local methods,\n# which are defined in the implementation section but not in the interface are\n# included in the documentation. If set to NO, only methods in the interface are\n# included.\n# The default value is: NO.\n\nEXTRACT_LOCAL_METHODS  = NO\n\n# If this flag is set to YES, the members of anonymous namespaces will be\n# extracted and appear in the documentation as a namespace called\n# 'anonymous_namespace{file}', where file will be replaced with the base name of\n# the file that contains the anonymous namespace. By default anonymous namespace\n# are hidden.\n# The default value is: NO.\n\nEXTRACT_ANON_NSPACES   = NO\n\n# If this flag is set to YES, the name of an unnamed parameter in a declaration\n# will be determined by the corresponding definition. By default unnamed\n# parameters remain unnamed in the output.\n# The default value is: YES.\n\nRESOLVE_UNNAMED_PARAMS = YES\n\n# If the HIDE_UNDOC_MEMBERS tag is set to YES, doxygen will hide all\n# undocumented members inside documented classes or files. If set to NO these\n# members will be included in the various overviews, but no documentation\n# section is generated. This option has no effect if EXTRACT_ALL is enabled.\n# The default value is: NO.\n\nHIDE_UNDOC_MEMBERS     = NO\n\n# If the HIDE_UNDOC_CLASSES tag is set to YES, doxygen will hide all\n# undocumented classes that are normally visible in the class hierarchy. If set\n# to NO, these classes will be included in the various overviews. This option\n# has no effect if EXTRACT_ALL is enabled.\n# The default value is: NO.\n\nHIDE_UNDOC_CLASSES     = NO\n\n# If the HIDE_FRIEND_COMPOUNDS tag is set to YES, doxygen will hide all friend\n# declarations. If set to NO, these declarations will be included in the\n# documentation.\n# The default value is: NO.\n\nHIDE_FRIEND_COMPOUNDS  = NO\n\n# If the HIDE_IN_BODY_DOCS tag is set to YES, doxygen will hide any\n# documentation blocks found inside the body of a function. If set to NO, these\n# blocks will be appended to the function's detailed documentation block.\n# The default value is: NO.\n\nHIDE_IN_BODY_DOCS      = NO\n\n# The INTERNAL_DOCS tag determines if documentation that is typed after a\n# \\internal command is included. If the tag is set to NO then the documentation\n# will be excluded. Set it to YES to include the internal documentation.\n# The default value is: NO.\n\nINTERNAL_DOCS          = NO\n\n# With the correct setting of option CASE_SENSE_NAMES doxygen will better be\n# able to match the capabilities of the underlying filesystem. In case the\n# filesystem is case sensitive (i.e. it supports files in the same directory\n# whose names only differ in casing), the option must be set to YES to properly\n# deal with such files in case they appear in the input. For filesystems that\n# are not case sensitive the option should be be set to NO to properly deal with\n# output files written for symbols that only differ in casing, such as for two\n# classes, one named CLASS and the other named Class, and to also support\n# references to files without having to specify the exact matching casing. On\n# Windows (including Cygwin) and MacOS, users should typically set this option\n# to NO, whereas on Linux or other Unix flavors it should typically be set to\n# YES.\n# The default value is: system dependent.\n\nCASE_SENSE_NAMES       = YES\n\n# If the HIDE_SCOPE_NAMES tag is set to NO then doxygen will show members with\n# their full class and namespace scopes in the documentation. If set to YES, the\n# scope will be hidden.\n# The default value is: NO.\n\nHIDE_SCOPE_NAMES       = NO\n\n# If the HIDE_COMPOUND_REFERENCE tag is set to NO (default) then doxygen will\n# append additional text to a page's title, such as Class Reference. If set to\n# YES the compound reference will be hidden.\n# The default value is: NO.\n\nHIDE_COMPOUND_REFERENCE= NO\n\n# If the SHOW_INCLUDE_FILES tag is set to YES then doxygen will put a list of\n# the files that are included by a file in the documentation of that file.\n# The default value is: YES.\n\nSHOW_INCLUDE_FILES     = YES\n\n# If the SHOW_GROUPED_MEMB_INC tag is set to YES then Doxygen will add for each\n# grouped member an include statement to the documentation, telling the reader\n# which file to include in order to use the member.\n# The default value is: NO.\n\nSHOW_GROUPED_MEMB_INC  = YES\n\n# If the FORCE_LOCAL_INCLUDES tag is set to YES then doxygen will list include\n# files with double quotes in the documentation rather than with sharp brackets.\n# The default value is: NO.\n\nFORCE_LOCAL_INCLUDES   = NO\n\n# If the INLINE_INFO tag is set to YES then a tag [inline] is inserted in the\n# documentation for inline members.\n# The default value is: YES.\n\nINLINE_INFO            = YES\n\n# If the SORT_MEMBER_DOCS tag is set to YES then doxygen will sort the\n# (detailed) documentation of file and class members alphabetically by member\n# name. If set to NO, the members will appear in declaration order.\n# The default value is: YES.\n\nSORT_MEMBER_DOCS       = NO\n\n# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the brief\n# descriptions of file, namespace and class members alphabetically by member\n# name. If set to NO, the members will appear in declaration order. Note that\n# this will also influence the order of the classes in the class list.\n# The default value is: NO.\n\nSORT_BRIEF_DOCS        = NO\n\n# If the SORT_MEMBERS_CTORS_1ST tag is set to YES then doxygen will sort the\n# (brief and detailed) documentation of class members so that constructors and\n# destructors are listed first. If set to NO the constructors will appear in the\n# respective orders defined by SORT_BRIEF_DOCS and SORT_MEMBER_DOCS.\n# Note: If SORT_BRIEF_DOCS is set to NO this option is ignored for sorting brief\n# member documentation.\n# Note: If SORT_MEMBER_DOCS is set to NO this option is ignored for sorting\n# detailed member documentation.\n# The default value is: NO.\n\nSORT_MEMBERS_CTORS_1ST = NO\n\n# If the SORT_GROUP_NAMES tag is set to YES then doxygen will sort the hierarchy\n# of group names into alphabetical order. If set to NO the group names will\n# appear in their defined order.\n# The default value is: NO.\n\nSORT_GROUP_NAMES       = NO\n\n# If the SORT_BY_SCOPE_NAME tag is set to YES, the class list will be sorted by\n# fully-qualified names, including namespaces. If set to NO, the class list will\n# be sorted only by class name, not including the namespace part.\n# Note: This option is not very useful if HIDE_SCOPE_NAMES is set to YES.\n# Note: This option applies only to the class list, not to the alphabetical\n# list.\n# The default value is: NO.\n\nSORT_BY_SCOPE_NAME     = NO\n\n# If the STRICT_PROTO_MATCHING option is enabled and doxygen fails to do proper\n# type resolution of all parameters of a function it will reject a match between\n# the prototype and the implementation of a member function even if there is\n# only one candidate or it is obvious which candidate to choose by doing a\n# simple string match. By disabling STRICT_PROTO_MATCHING doxygen will still\n# accept a match between prototype and implementation in such cases.\n# The default value is: NO.\n\nSTRICT_PROTO_MATCHING  = YES\n\n# The GENERATE_TODOLIST tag can be used to enable (YES) or disable (NO) the todo\n# list. This list is created by putting \\todo commands in the documentation.\n# The default value is: YES.\n\nGENERATE_TODOLIST      = YES\n\n# The GENERATE_TESTLIST tag can be used to enable (YES) or disable (NO) the test\n# list. This list is created by putting \\test commands in the documentation.\n# The default value is: YES.\n\nGENERATE_TESTLIST      = YES\n\n# The GENERATE_BUGLIST tag can be used to enable (YES) or disable (NO) the bug\n# list. This list is created by putting \\bug commands in the documentation.\n# The default value is: YES.\n\nGENERATE_BUGLIST       = YES\n\n# The GENERATE_DEPRECATEDLIST tag can be used to enable (YES) or disable (NO)\n# the deprecated list. This list is created by putting \\deprecated commands in\n# the documentation.\n# The default value is: YES.\n\nGENERATE_DEPRECATEDLIST= YES\n\n# The ENABLED_SECTIONS tag can be used to enable conditional documentation\n# sections, marked by \\if <section_label> ... \\endif and \\cond <section_label>\n# ... \\endcond blocks.\n\nENABLED_SECTIONS       =\n\n# The MAX_INITIALIZER_LINES tag determines the maximum number of lines that the\n# initial value of a variable or macro / define can have for it to appear in the\n# documentation. If the initializer consists of more lines than specified here\n# it will be hidden. Use a value of 0 to hide initializers completely. The\n# appearance of the value of individual variables and macros / defines can be\n# controlled using \\showinitializer or \\hideinitializer command in the\n# documentation regardless of this setting.\n# Minimum value: 0, maximum value: 10000, default value: 30.\n\nMAX_INITIALIZER_LINES  = 30\n\n# Set the SHOW_USED_FILES tag to NO to disable the list of files generated at\n# the bottom of the documentation of classes and structs. If set to YES, the\n# list will mention the files that were used to generate the documentation.\n# The default value is: YES.\n\nSHOW_USED_FILES        = YES\n\n# Set the SHOW_FILES tag to NO to disable the generation of the Files page. This\n# will remove the Files entry from the Quick Index and from the Folder Tree View\n# (if specified).\n# The default value is: YES.\n\nSHOW_FILES             = YES\n\n# Set the SHOW_NAMESPACES tag to NO to disable the generation of the Namespaces\n# page. This will remove the Namespaces entry from the Quick Index and from the\n# Folder Tree View (if specified).\n# The default value is: YES.\n\nSHOW_NAMESPACES        = YES\n\n# The FILE_VERSION_FILTER tag can be used to specify a program or script that\n# doxygen should invoke to get the current version for each file (typically from\n# the version control system). Doxygen will invoke the program by executing (via\n# popen()) the command command input-file, where command is the value of the\n# FILE_VERSION_FILTER tag, and input-file is the name of an input file provided\n# by doxygen. Whatever the program writes to standard output is used as the file\n# version. For an example see the documentation.\n\nFILE_VERSION_FILTER    =\n\n# The LAYOUT_FILE tag can be used to specify a layout file which will be parsed\n# by doxygen. The layout file controls the global structure of the generated\n# output files in an output format independent way. To create the layout file\n# that represents doxygen's defaults, run doxygen with the -l option. You can\n# optionally specify a file name after the option, if omitted DoxygenLayout.xml\n# will be used as the name of the layout file.\n#\n# Note that if you run doxygen from a directory containing a file called\n# DoxygenLayout.xml, doxygen will parse it automatically even if the LAYOUT_FILE\n# tag is left empty.\n\nLAYOUT_FILE            =\n\n# The CITE_BIB_FILES tag can be used to specify one or more bib files containing\n# the reference definitions. This must be a list of .bib files. The .bib\n# extension is automatically appended if omitted. This requires the bibtex tool\n# to be installed. See also https://en.wikipedia.org/wiki/BibTeX for more info.\n# For LaTeX the style of the bibliography can be controlled using\n# LATEX_BIB_STYLE. To use this feature you need bibtex and perl available in the\n# search path. See also \\cite for info how to create references.\n\nCITE_BIB_FILES         =\n\n#---------------------------------------------------------------------------\n# Configuration options related to warning and progress messages\n#---------------------------------------------------------------------------\n\n# The QUIET tag can be used to turn on/off the messages that are generated to\n# standard output by doxygen. If QUIET is set to YES this implies that the\n# messages are off.\n# The default value is: NO.\n\nQUIET                  = NO\n\n# The WARNINGS tag can be used to turn on/off the warning messages that are\n# generated to standard error (stderr) by doxygen. If WARNINGS is set to YES\n# this implies that the warnings are on.\n#\n# Tip: Turn warnings on while writing the documentation.\n# The default value is: YES.\n\nWARNINGS               = YES\n\n# If the WARN_IF_UNDOCUMENTED tag is set to YES then doxygen will generate\n# warnings for undocumented members. If EXTRACT_ALL is set to YES then this flag\n# will automatically be disabled.\n# The default value is: YES.\n\nWARN_IF_UNDOCUMENTED   = NO\n\n# If the WARN_IF_DOC_ERROR tag is set to YES, doxygen will generate warnings for\n# potential errors in the documentation, such as not documenting some parameters\n# in a documented function, or documenting parameters that don't exist or using\n# markup commands wrongly.\n# The default value is: YES.\n\nWARN_IF_DOC_ERROR      = YES\n\n# This WARN_NO_PARAMDOC option can be enabled to get warnings for functions that\n# are documented, but have no documentation for their parameters or return\n# value. If set to NO, doxygen will only warn about wrong or incomplete\n# parameter documentation, but not about the absence of documentation. If\n# EXTRACT_ALL is set to YES then this flag will automatically be disabled.\n# The default value is: NO.\n\nWARN_NO_PARAMDOC       = NO\n\n# If the WARN_AS_ERROR tag is set to YES then doxygen will immediately stop when\n# a warning is encountered. If the WARN_AS_ERROR tag is set to FAIL_ON_WARNINGS\n# then doxygen will continue running as if WARN_AS_ERROR tag is set to NO, but\n# at the end of the doxygen process doxygen will return with a non-zero status.\n# Possible values are: NO, YES and FAIL_ON_WARNINGS.\n# The default value is: NO.\n\nWARN_AS_ERROR          = NO\n\n# The WARN_FORMAT tag determines the format of the warning messages that doxygen\n# can produce. The string should contain the $file, $line, and $text tags, which\n# will be replaced by the file and line number from which the warning originated\n# and the warning text. Optionally the format may contain $version, which will\n# be replaced by the version of the file (if it could be obtained via\n# FILE_VERSION_FILTER)\n# The default value is: $file:$line: $text.\n\nWARN_FORMAT            = \"$file:$line: $text\"\n\n# The WARN_LOGFILE tag can be used to specify a file to which warning and error\n# messages should be written. If left blank the output is written to standard\n# error (stderr).\n\nWARN_LOGFILE           =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the input files\n#---------------------------------------------------------------------------\n\n# The INPUT tag is used to specify the files and/or directories that contain\n# documented source files. You may enter file names like myfile.cpp or\n# directories like /usr/src/myproject. Separate the files or directories with\n# spaces. See also FILE_PATTERNS and EXTENSION_MAPPING\n# Note: If this tag is empty the current directory is searched.\n\nINPUT                  = include/libwebsockets.h \\\n                         include/libwebsockets \\\n                         plugins/ssh-base/include/lws-plugin-ssh.h \\\n                         READMEs\n\n# This tag can be used to specify the character encoding of the source files\n# that doxygen parses. Internally doxygen uses the UTF-8 encoding. Doxygen uses\n# libiconv (or the iconv built into libc) for the transcoding. See the libiconv\n# documentation (see:\n# https://www.gnu.org/software/libiconv/) for the list of possible encodings.\n# The default value is: UTF-8.\n\n#INPUT_ENCODING         = UTF-8\n\n# If the value of the INPUT tag contains directories, you can use the\n# FILE_PATTERNS tag to specify one or more wildcard patterns (like *.cpp and\n# *.h) to filter out the source-files in the directories.\n#\n# Note that for custom extensions or not directly supported extensions you also\n# need to set EXTENSION_MAPPING for the extension otherwise the files are not\n# read by doxygen.\n#\n# Note the list of default checked file patterns might differ from the list of\n# default file extension mappings.\n#\n# If left blank the following patterns are tested:*.c, *.cc, *.cxx, *.cpp,\n# *.c++, *.java, *.ii, *.ixx, *.ipp, *.i++, *.inl, *.idl, *.ddl, *.odl, *.h,\n# *.hh, *.hxx, *.hpp, *.h++, *.cs, *.d, *.php, *.php4, *.php5, *.phtml, *.inc,\n# *.m, *.markdown, *.md, *.mm, *.dox (to be provided as doxygen C comment),\n# *.py, *.pyw, *.f90, *.f95, *.f03, *.f08, *.f18, *.f, *.for, *.vhd, *.vhdl,\n# *.ucf, *.qsf and *.ice.\n\nFILE_PATTERNS          = lib/*.c \\\n                         *.md \\\n                         *.png \\\n                         include/*.h \\\n\t\t\t *.h\n\n# The RECURSIVE tag can be used to specify whether or not subdirectories should\n# be searched for input files as well.\n# The default value is: NO.\n\nRECURSIVE              = NO\n\n# The EXCLUDE tag can be used to specify files and/or directories that should be\n# excluded from the INPUT source files. This way you can easily exclude a\n# subdirectory from a directory tree whose root is specified with the INPUT tag.\n#\n# Note that relative paths are relative to the directory from which doxygen is\n# run.\n\nEXCLUDE                =\n\n# The EXCLUDE_SYMLINKS tag can be used to select whether or not files or\n# directories that are symbolic links (a Unix file system feature) are excluded\n# from the input.\n# The default value is: NO.\n\nEXCLUDE_SYMLINKS       = NO\n\n# If the value of the INPUT tag contains directories, you can use the\n# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude\n# certain files from those directories.\n#\n# Note that the wildcards are matched against the file with absolute path, so to\n# exclude all test directories for example use the pattern */test/*\n\nEXCLUDE_PATTERNS       =\n\n# The EXCLUDE_SYMBOLS tag can be used to specify one or more symbol names\n# (namespaces, classes, functions, etc.) that should be excluded from the\n# output. The symbol name can be a fully qualified name, a word, or if the\n# wildcard * is used, a substring. Examples: ANamespace, AClass,\n# AClass::ANamespace, ANamespace::*Test\n#\n# Note that the wildcards are matched against the file with absolute path, so to\n# exclude all test directories use the pattern */test/*\n\nEXCLUDE_SYMBOLS        =\n\n# The EXAMPLE_PATH tag can be used to specify one or more files or directories\n# that contain example code fragments that are included (see the \\include\n# command).\n\nEXAMPLE_PATH           =\n\n# If the value of the EXAMPLE_PATH tag contains directories, you can use the\n# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp and\n# *.h) to filter out the source-files in the directories. If left blank all\n# files are included.\n\nEXAMPLE_PATTERNS       =\n\n# If the EXAMPLE_RECURSIVE tag is set to YES then subdirectories will be\n# searched for input files to be used with the \\include or \\dontinclude commands\n# irrespective of the value of the RECURSIVE tag.\n# The default value is: NO.\n\nEXAMPLE_RECURSIVE      = NO\n\n# The IMAGE_PATH tag can be used to specify one or more files or directories\n# that contain images that are to be included in the documentation (see the\n# \\image command).\n\nIMAGE_PATH             = doc-assets\n\n# The INPUT_FILTER tag can be used to specify a program that doxygen should\n# invoke to filter for each input file. Doxygen will invoke the filter program\n# by executing (via popen()) the command:\n#\n# <filter> <input-file>\n#\n# where <filter> is the value of the INPUT_FILTER tag, and <input-file> is the\n# name of an input file. Doxygen will then use the output that the filter\n# program writes to standard output. If FILTER_PATTERNS is specified, this tag\n# will be ignored.\n#\n# Note that the filter must not add or remove lines; it is applied before the\n# code is scanned, but not when the output code is generated. If lines are added\n# or removed, the anchors will not be placed correctly.\n#\n# Note that for custom extensions or not directly supported extensions you also\n# need to set EXTENSION_MAPPING for the extension otherwise the files are not\n# properly processed by doxygen.\n\nINPUT_FILTER           =\n\n# The FILTER_PATTERNS tag can be used to specify filters on a per file pattern\n# basis. Doxygen will compare the file name with each pattern and apply the\n# filter if there is a match. The filters are a list of the form: pattern=filter\n# (like *.cpp=my_cpp_filter). See INPUT_FILTER for further information on how\n# filters are used. If the FILTER_PATTERNS tag is empty or if none of the\n# patterns match the file name, INPUT_FILTER is applied.\n#\n# Note that for custom extensions or not directly supported extensions you also\n# need to set EXTENSION_MAPPING for the extension otherwise the files are not\n# properly processed by doxygen.\n\nFILTER_PATTERNS        =\n\n# If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using\n# INPUT_FILTER) will also be used to filter the input files that are used for\n# producing the source files to browse (i.e. when SOURCE_BROWSER is set to YES).\n# The default value is: NO.\n\nFILTER_SOURCE_FILES    = NO\n\n# The FILTER_SOURCE_PATTERNS tag can be used to specify source filters per file\n# pattern. A pattern will override the setting for FILTER_PATTERN (if any) and\n# it is also possible to disable source filtering for a specific pattern using\n# *.ext= (so without naming a filter).\n# This tag requires that the tag FILTER_SOURCE_FILES is set to YES.\n\nFILTER_SOURCE_PATTERNS =\n\n# If the USE_MDFILE_AS_MAINPAGE tag refers to the name of a markdown file that\n# is part of the input, its contents will be placed on the main page\n# (index.html). This can be useful if you have a project on for instance GitHub\n# and want to reuse the introduction page also for the doxygen output.\n\nUSE_MDFILE_AS_MAINPAGE = mainpage.md\n\n#---------------------------------------------------------------------------\n# Configuration options related to source browsing\n#---------------------------------------------------------------------------\n\n# If the SOURCE_BROWSER tag is set to YES then a list of source files will be\n# generated. Documented entities will be cross-referenced with these sources.\n#\n# Note: To get rid of all source code in the generated output, make sure that\n# also VERBATIM_HEADERS is set to NO.\n# The default value is: NO.\n\nSOURCE_BROWSER         = YES\n\n# Setting the INLINE_SOURCES tag to YES will include the body of functions,\n# classes and enums directly into the documentation.\n# The default value is: NO.\n\nINLINE_SOURCES         = YES\n\n# Setting the STRIP_CODE_COMMENTS tag to YES will instruct doxygen to hide any\n# special comment blocks from generated source code fragments. Normal C, C++ and\n# Fortran comments will always remain visible.\n# The default value is: YES.\n\nSTRIP_CODE_COMMENTS    = YES\n\n# If the REFERENCED_BY_RELATION tag is set to YES then for each documented\n# entity all documented functions referencing it will be listed.\n# The default value is: NO.\n\nREFERENCED_BY_RELATION = YES\n\n# If the REFERENCES_RELATION tag is set to YES then for each documented function\n# all documented entities called/used by that function will be listed.\n# The default value is: NO.\n\nREFERENCES_RELATION    = YES\n\n# If the REFERENCES_LINK_SOURCE tag is set to YES and SOURCE_BROWSER tag is set\n# to YES then the hyperlinks from functions in REFERENCES_RELATION and\n# REFERENCED_BY_RELATION lists will link to the source code. Otherwise they will\n# link to the documentation.\n# The default value is: YES.\n\nREFERENCES_LINK_SOURCE = YES\n\n# If SOURCE_TOOLTIPS is enabled (the default) then hovering a hyperlink in the\n# source code will show a tooltip with additional information such as prototype,\n# brief description and links to the definition and documentation. Since this\n# will make the HTML file larger and loading of large files a bit slower, you\n# can opt to disable this feature.\n# The default value is: YES.\n# This tag requires that the tag SOURCE_BROWSER is set to YES.\n\nSOURCE_TOOLTIPS        = YES\n\n# If the USE_HTAGS tag is set to YES then the references to source code will\n# point to the HTML generated by the htags(1) tool instead of doxygen built-in\n# source browser. The htags tool is part of GNU's global source tagging system\n# (see https://www.gnu.org/software/global/global.html). You will need version\n# 4.8.6 or higher.\n#\n# To use it do the following:\n# - Install the latest version of global\n# - Enable SOURCE_BROWSER and USE_HTAGS in the configuration file\n# - Make sure the INPUT points to the root of the source tree\n# - Run doxygen as normal\n#\n# Doxygen will invoke htags (and that will in turn invoke gtags), so these\n# tools must be available from the command line (i.e. in the search path).\n#\n# The result: instead of the source browser generated by doxygen, the links to\n# source code will now point to the output of htags.\n# The default value is: NO.\n# This tag requires that the tag SOURCE_BROWSER is set to YES.\n\nUSE_HTAGS              = NO\n\n# If the VERBATIM_HEADERS tag is set the YES then doxygen will generate a\n# verbatim copy of the header file for each class for which an include is\n# specified. Set to NO to disable this.\n# See also: Section \\class.\n# The default value is: YES.\n\nVERBATIM_HEADERS       = YES\n\n# If the CLANG_ASSISTED_PARSING tag is set to YES then doxygen will use the\n# clang parser (see:\n# http://clang.llvm.org/) for more accurate parsing at the cost of reduced\n# performance. This can be particularly helpful with template rich C++ code for\n# which doxygen's built-in parser lacks the necessary type information.\n# Note: The availability of this option depends on whether or not doxygen was\n# generated with the -Duse_libclang=ON option for CMake.\n# The default value is: NO.\n\nCLANG_ASSISTED_PARSING = YES\n\n# If clang assisted parsing is enabled and the CLANG_ADD_INC_PATHS tag is set to\n# YES then doxygen will add the directory of each input to the include path.\n# The default value is: YES.\n\nCLANG_ADD_INC_PATHS    = YES\n\n# If clang assisted parsing is enabled you can provide the compiler with command\n# line options that you would normally use when invoking the compiler. Note that\n# the include paths will already be set by doxygen for the files and directories\n# specified with INPUT and INCLUDE_PATH.\n# This tag requires that the tag CLANG_ASSISTED_PARSING is set to YES.\n\nCLANG_OPTIONS          =\n\n# If clang assisted parsing is enabled you can provide the clang parser with the\n# path to the directory containing a file called compile_commands.json. This\n# file is the compilation database (see:\n# http://clang.llvm.org/docs/HowToSetupToolingForLLVM.html) containing the\n# options used when the source files were built. This is equivalent to\n# specifying the -p option to a clang tool, such as clang-check. These options\n# will then be passed to the parser. Any options specified with CLANG_OPTIONS\n# will be added as well.\n# Note: The availability of this option depends on whether or not doxygen was\n# generated with the -Duse_libclang=ON option for CMake.\n\nCLANG_DATABASE_PATH    =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the alphabetical class index\n#---------------------------------------------------------------------------\n\n# If the ALPHABETICAL_INDEX tag is set to YES, an alphabetical index of all\n# compounds will be generated. Enable this if the project contains a lot of\n# classes, structs, unions or interfaces.\n# The default value is: YES.\n\nALPHABETICAL_INDEX     = YES\n\n# In case all classes in a project start with a common prefix, all classes will\n# be put under the same header in the alphabetical index. The IGNORE_PREFIX tag\n# can be used to specify a prefix (or a list of prefixes) that should be ignored\n# while generating the index headers.\n# This tag requires that the tag ALPHABETICAL_INDEX is set to YES.\n\nIGNORE_PREFIX          =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the HTML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_HTML tag is set to YES, doxygen will generate HTML output\n# The default value is: YES.\n\nGENERATE_HTML          = YES\n\n# The HTML_OUTPUT tag is used to specify where the HTML docs will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: html.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_OUTPUT            = html\n\n# The HTML_FILE_EXTENSION tag can be used to specify the file extension for each\n# generated HTML page (for example: .htm, .php, .asp).\n# The default value is: .html.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_FILE_EXTENSION    = .html\n\n# The HTML_HEADER tag can be used to specify a user-defined HTML header file for\n# each generated HTML page. If the tag is left blank doxygen will generate a\n# standard header.\n#\n# To get valid HTML the header file that includes any scripts and style sheets\n# that doxygen needs, which is dependent on the configuration options used (e.g.\n# the setting GENERATE_TREEVIEW). It is highly recommended to start with a\n# default header using\n# doxygen -w html new_header.html new_footer.html new_stylesheet.css\n# YourConfigFile\n# and then modify the file new_header.html. See also section \"Doxygen usage\"\n# for information on how to generate the default header that doxygen normally\n# uses.\n# Note: The header is subject to change so you typically have to regenerate the\n# default header when upgrading to a newer version of doxygen. For a description\n# of the possible markers and block names see the documentation.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_HEADER            =\n\n# The HTML_FOOTER tag can be used to specify a user-defined HTML footer for each\n# generated HTML page. If the tag is left blank doxygen will generate a standard\n# footer. See HTML_HEADER for more information on how to generate a default\n# footer and what special commands can be used inside the footer. See also\n# section \"Doxygen usage\" for information on how to generate the default footer\n# that doxygen normally uses.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_FOOTER            =\n\n# The HTML_STYLESHEET tag can be used to specify a user-defined cascading style\n# sheet that is used by each HTML page. It can be used to fine-tune the look of\n# the HTML output. If left blank doxygen will generate a default style sheet.\n# See also section \"Doxygen usage\" for information on how to generate the style\n# sheet that doxygen normally uses.\n# Note: It is recommended to use HTML_EXTRA_STYLESHEET instead of this tag, as\n# it is more robust and this tag (HTML_STYLESHEET) will in the future become\n# obsolete.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_STYLESHEET        =\n\n# The HTML_EXTRA_STYLESHEET tag can be used to specify additional user-defined\n# cascading style sheets that are included after the standard style sheets\n# created by doxygen. Using this option one can overrule certain style aspects.\n# This is preferred over using HTML_STYLESHEET since it does not replace the\n# standard style sheet and is therefore more robust against future updates.\n# Doxygen will copy the style sheet files to the output directory.\n# Note: The order of the extra style sheet files is of importance (e.g. the last\n# style sheet in the list overrules the setting of the previous ones in the\n# list). For an example see the documentation.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_EXTRA_STYLESHEET  = scripts/dox-extra.css\n\n# The HTML_EXTRA_FILES tag can be used to specify one or more extra images or\n# other source files which should be copied to the HTML output directory. Note\n# that these files will be copied to the base HTML output directory. Use the\n# $relpath^ marker in the HTML_HEADER and/or HTML_FOOTER files to load these\n# files. In the HTML_STYLESHEET file, use the file name only. Also note that the\n# files will be copied as-is; there are no commands or markers available.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_EXTRA_FILES       =\n\n# The HTML_COLORSTYLE_HUE tag controls the color of the HTML output. Doxygen\n# will adjust the colors in the style sheet and background images according to\n# this color. Hue is specified as an angle on a colorwheel, see\n# https://en.wikipedia.org/wiki/Hue for more information. For instance the value\n# 0 represents red, 60 is yellow, 120 is green, 180 is cyan, 240 is blue, 300\n# purple, and 360 is red again.\n# Minimum value: 0, maximum value: 359, default value: 220.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_COLORSTYLE_HUE    = 220\n\n# The HTML_COLORSTYLE_SAT tag controls the purity (or saturation) of the colors\n# in the HTML output. For a value of 0 the output will use grayscales only. A\n# value of 255 will produce the most vivid colors.\n# Minimum value: 0, maximum value: 255, default value: 100.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_COLORSTYLE_SAT    = 100\n\n# The HTML_COLORSTYLE_GAMMA tag controls the gamma correction applied to the\n# luminance component of the colors in the HTML output. Values below 100\n# gradually make the output lighter, whereas values above 100 make the output\n# darker. The value divided by 100 is the actual gamma applied, so 80 represents\n# a gamma of 0.8, The value 220 represents a gamma of 2.2, and 100 does not\n# change the gamma.\n# Minimum value: 40, maximum value: 240, default value: 80.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_COLORSTYLE_GAMMA  = 80\n\n# If the HTML_TIMESTAMP tag is set to YES then the footer of each generated HTML\n# page will contain the date and time when the page was generated. Setting this\n# to YES can help to show when doxygen was last run and thus if the\n# documentation is up to date.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_TIMESTAMP         = YES\n\n# If the HTML_DYNAMIC_MENUS tag is set to YES then the generated HTML\n# documentation will contain a main index with vertical navigation menus that\n# are dynamically created via JavaScript. If disabled, the navigation index will\n# consists of multiple levels of tabs that are statically embedded in every HTML\n# page. Disable this option to support browsers that do not have JavaScript,\n# like the Qt help browser.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_DYNAMIC_MENUS     = YES\n\n# If the HTML_DYNAMIC_SECTIONS tag is set to YES then the generated HTML\n# documentation will contain sections that can be hidden and shown after the\n# page has loaded.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_DYNAMIC_SECTIONS  = YES\n\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n# representing an infinite number of entries and will result in a full expanded\n# tree by default.\n# Minimum value: 0, maximum value: 9999, default value: 100.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_INDEX_NUM_ENTRIES = 100\n\n# If the GENERATE_DOCSET tag is set to YES, additional index files will be\n# generated that can be used as input for Apple's Xcode 3 integrated development\n# environment (see:\n# https://developer.apple.com/xcode/), introduced with OSX 10.5 (Leopard). To\n# create a documentation set, doxygen will generate a Makefile in the HTML\n# output directory. Running make will produce the docset in that directory and\n# running make install will install the docset in\n# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find it at\n# startup. See https://developer.apple.com/library/archive/featuredarticles/Doxy\n# genXcode/_index.html for more information.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_DOCSET        = NO\n\n# This tag determines the name of the docset feed. A documentation feed provides\n# an umbrella under which multiple documentation sets from a single provider\n# (such as a company or product suite) can be grouped.\n# The default value is: Doxygen generated docs.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_FEEDNAME        = \"Doxygen generated docs\"\n\n# This tag specifies a string that should uniquely identify the documentation\n# set bundle. This should be a reverse domain-name style string, e.g.\n# com.mycompany.MyDocSet. Doxygen will append .docset to the name.\n# The default value is: org.doxygen.Project.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_BUNDLE_ID       = org.doxygen.Project\n\n# The DOCSET_PUBLISHER_ID tag specifies a string that should uniquely identify\n# the documentation publisher. This should be a reverse domain-name style\n# string, e.g. com.mycompany.MyDocSet.documentation.\n# The default value is: org.doxygen.Publisher.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_PUBLISHER_ID    = org.doxygen.Publisher\n\n# The DOCSET_PUBLISHER_NAME tag identifies the documentation publisher.\n# The default value is: Publisher.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_PUBLISHER_NAME  = Publisher\n\n# If the GENERATE_HTMLHELP tag is set to YES then doxygen generates three\n# additional HTML index files: index.hhp, index.hhc, and index.hhk. The\n# index.hhp is a project file that can be read by Microsoft's HTML Help Workshop\n# (see:\n# https://www.microsoft.com/en-us/download/details.aspx?id=21138) on Windows.\n#\n# The HTML Help Workshop contains a compiler that can convert all HTML output\n# generated by doxygen into a single compiled HTML file (.chm). Compiled HTML\n# files are now used as the Windows 98 help format, and will replace the old\n# Windows help format (.hlp) on all Windows platforms in the future. Compressed\n# HTML files also contain an index, a table of contents, and you can search for\n# words in the documentation. The HTML workshop also contains a viewer for\n# compressed HTML files.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_HTMLHELP      = NO\n\n# The CHM_FILE tag can be used to specify the file name of the resulting .chm\n# file. You can add a path in front of the file if the result should not be\n# written to the html output directory.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nCHM_FILE               =\n\n# The HHC_LOCATION tag can be used to specify the location (absolute path\n# including file name) of the HTML help compiler (hhc.exe). If non-empty,\n# doxygen will try to run the HTML help compiler on the generated index.hhp.\n# The file has to be specified with full path.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nHHC_LOCATION           =\n\n# The GENERATE_CHI flag controls if a separate .chi index file is generated\n# (YES) or that it should be included in the main .chm file (NO).\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nGENERATE_CHI           = NO\n\n# The CHM_INDEX_ENCODING is used to encode HtmlHelp index (hhk), content (hhc)\n# and project file content.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nCHM_INDEX_ENCODING     =\n\n# The BINARY_TOC flag controls whether a binary table of contents is generated\n# (YES) or a normal table of contents (NO) in the .chm file. Furthermore it\n# enables the Previous and Next buttons.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nBINARY_TOC             = NO\n\n# The TOC_EXPAND flag can be set to YES to add extra items for group members to\n# the table of contents of the HTML help documentation and to the tree view.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nTOC_EXPAND             = NO\n\n# If the GENERATE_QHP tag is set to YES and both QHP_NAMESPACE and\n# QHP_VIRTUAL_FOLDER are set, an additional index file will be generated that\n# can be used as input for Qt's qhelpgenerator to generate a Qt Compressed Help\n# (.qch) of the generated HTML documentation.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_QHP           = NO\n\n# If the QHG_LOCATION tag is specified, the QCH_FILE tag can be used to specify\n# the file name of the resulting .qch file. The path specified is relative to\n# the HTML output folder.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQCH_FILE               =\n\n# The QHP_NAMESPACE tag specifies the namespace to use when generating Qt Help\n# Project output. For more information please see Qt Help Project / Namespace\n# (see:\n# https://doc.qt.io/archives/qt-4.8/qthelpproject.html#namespace).\n# The default value is: org.doxygen.Project.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_NAMESPACE          = org.doxygen.Project\n\n# The QHP_VIRTUAL_FOLDER tag specifies the namespace to use when generating Qt\n# Help Project output. For more information please see Qt Help Project / Virtual\n# Folders (see:\n# https://doc.qt.io/archives/qt-4.8/qthelpproject.html#virtual-folders).\n# The default value is: doc.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_VIRTUAL_FOLDER     = doc\n\n# If the QHP_CUST_FILTER_NAME tag is set, it specifies the name of a custom\n# filter to add. For more information please see Qt Help Project / Custom\n# Filters (see:\n# https://doc.qt.io/archives/qt-4.8/qthelpproject.html#custom-filters).\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_CUST_FILTER_NAME   =\n\n# The QHP_CUST_FILTER_ATTRS tag specifies the list of the attributes of the\n# custom filter to add. For more information please see Qt Help Project / Custom\n# Filters (see:\n# https://doc.qt.io/archives/qt-4.8/qthelpproject.html#custom-filters).\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_CUST_FILTER_ATTRS  =\n\n# The QHP_SECT_FILTER_ATTRS tag specifies the list of the attributes this\n# project's filter section matches. Qt Help Project / Filter Attributes (see:\n# https://doc.qt.io/archives/qt-4.8/qthelpproject.html#filter-attributes).\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_SECT_FILTER_ATTRS  =\n\n# The QHG_LOCATION tag can be used to specify the location (absolute path\n# including file name) of Qt's qhelpgenerator. If non-empty doxygen will try to\n# run qhelpgenerator on the generated .qhp file.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHG_LOCATION           =\n\n# If the GENERATE_ECLIPSEHELP tag is set to YES, additional index files will be\n# generated, together with the HTML files, they form an Eclipse help plugin. To\n# install this plugin and make it available under the help contents menu in\n# Eclipse, the contents of the directory containing the HTML and XML files needs\n# to be copied into the plugins directory of eclipse. The name of the directory\n# within the plugins directory should be the same as the ECLIPSE_DOC_ID value.\n# After copying Eclipse needs to be restarted before the help appears.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_ECLIPSEHELP   = NO\n\n# A unique identifier for the Eclipse help plugin. When installing the plugin\n# the directory name containing the HTML and XML files should also have this\n# name. Each documentation set should have its own identifier.\n# The default value is: org.doxygen.Project.\n# This tag requires that the tag GENERATE_ECLIPSEHELP is set to YES.\n\nECLIPSE_DOC_ID         = org.doxygen.Project\n\n# If you want full control over the layout of the generated HTML pages it might\n# be necessary to disable the index and replace it with your own. The\n# DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top\n# of each HTML page. A value of NO enables the index and the value YES disables\n# it. Since the tabs in the index contain the same information as the navigation\n# tree, you can set this option to YES if you also set GENERATE_TREEVIEW to YES.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nDISABLE_INDEX          = NO\n\n# The GENERATE_TREEVIEW tag is used to specify whether a tree-like index\n# structure should be generated to display hierarchical information. If the tag\n# value is set to YES, a side panel will be generated containing a tree-like\n# index structure (just like the one that is generated for HTML Help). For this\n# to work a browser that supports JavaScript, DHTML, CSS and frames is required\n# (i.e. any modern browser). Windows users are probably better off using the\n# HTML help feature. Via custom style sheets (see HTML_EXTRA_STYLESHEET) one can\n# further fine-tune the look of the index. As an example, the default style\n# sheet generated by doxygen has an example that shows how to put an image at\n# the root of the tree instead of the PROJECT_NAME. Since the tree basically has\n# the same information as the tab index, you could consider setting\n# DISABLE_INDEX to YES when enabling this option.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_TREEVIEW      = YES\n\n# The ENUM_VALUES_PER_LINE tag can be used to set the number of enum values that\n# doxygen will group on one line in the generated HTML documentation.\n#\n# Note that a value of 0 will completely suppress the enum values from appearing\n# in the overview section.\n# Minimum value: 0, maximum value: 20, default value: 4.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nENUM_VALUES_PER_LINE   = 4\n\n# If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be used\n# to set the initial width (in pixels) of the frame in which the tree is shown.\n# Minimum value: 0, maximum value: 1500, default value: 250.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nTREEVIEW_WIDTH         = 250\n\n# If the EXT_LINKS_IN_WINDOW option is set to YES, doxygen will open links to\n# external symbols imported via tag files in a separate window.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nEXT_LINKS_IN_WINDOW    = YES\n\n# If the HTML_FORMULA_FORMAT option is set to svg, doxygen will use the pdf2svg\n# tool (see https://github.com/dawbarton/pdf2svg) or inkscape (see\n# https://inkscape.org) to generate formulas as SVG images instead of PNGs for\n# the HTML output. These images will generally look nicer at scaled resolutions.\n# Possible values are: png (the default) and svg (looks nicer but requires the\n# pdf2svg or inkscape tool).\n# The default value is: png.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_FORMULA_FORMAT    = png\n\n# Use this tag to change the font size of LaTeX formulas included as images in\n# the HTML documentation. When you change the font size after a successful\n# doxygen run you need to manually remove any form_*.png images from the HTML\n# output directory to force them to be regenerated.\n# Minimum value: 8, maximum value: 50, default value: 10.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nFORMULA_FONTSIZE       = 10\n\n# Use the FORMULA_TRANSPARENT tag to determine whether or not the images\n# generated for formulas are transparent PNGs. Transparent PNGs are not\n# supported properly for IE 6.0, but are supported on all modern browsers.\n#\n# Note that when changing this option you need to delete any form_*.png files in\n# the HTML output directory before the changes have effect.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nFORMULA_TRANSPARENT    = YES\n\n# The FORMULA_MACROFILE can contain LaTeX \\newcommand and \\renewcommand commands\n# to create new LaTeX commands to be used in formulas as building blocks. See\n# the section \"Including formulas\" for details.\n\nFORMULA_MACROFILE      =\n\n# Enable the USE_MATHJAX option to render LaTeX formulas using MathJax (see\n# https://www.mathjax.org) which uses client side JavaScript for the rendering\n# instead of using pre-rendered bitmaps. Use this if you do not have LaTeX\n# installed or if you want to formulas look prettier in the HTML output. When\n# enabled you may also need to install MathJax separately and configure the path\n# to it using the MATHJAX_RELPATH option.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nUSE_MATHJAX            = NO\n\n# When MathJax is enabled you can set the default output format to be used for\n# the MathJax output. See the MathJax site (see:\n# http://docs.mathjax.org/en/v2.7-latest/output.html) for more details.\n# Possible values are: HTML-CSS (which is slower, but has the best\n# compatibility), NativeMML (i.e. MathML) and SVG.\n# The default value is: HTML-CSS.\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_FORMAT         = HTML-CSS\n\n# When MathJax is enabled you need to specify the location relative to the HTML\n# output directory using the MATHJAX_RELPATH option. The destination directory\n# should contain the MathJax.js script. For instance, if the mathjax directory\n# is located at the same level as the HTML output directory, then\n# MATHJAX_RELPATH should be ../mathjax. The default value points to the MathJax\n# Content Delivery Network so you can quickly see the result without installing\n# MathJax. However, it is strongly recommended to install a local copy of\n# MathJax from https://www.mathjax.org before deployment.\n# The default value is: https://cdn.jsdelivr.net/npm/mathjax@2.\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_RELPATH        = http://cdn.mathjax.org/mathjax/latest\n\n# The MATHJAX_EXTENSIONS tag can be used to specify one or more MathJax\n# extension names that should be enabled during MathJax rendering. For example\n# MATHJAX_EXTENSIONS = TeX/AMSmath TeX/AMSsymbols\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_EXTENSIONS     =\n\n# The MATHJAX_CODEFILE tag can be used to specify a file with javascript pieces\n# of code that will be used on startup of the MathJax code. See the MathJax site\n# (see:\n# http://docs.mathjax.org/en/v2.7-latest/output.html) for more details. For an\n# example see the documentation.\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_CODEFILE       =\n\n# When the SEARCHENGINE tag is enabled doxygen will generate a search box for\n# the HTML output. The underlying search engine uses javascript and DHTML and\n# should work on any modern browser. Note that when using HTML help\n# (GENERATE_HTMLHELP), Qt help (GENERATE_QHP), or docsets (GENERATE_DOCSET)\n# there is already a search function so this one should typically be disabled.\n# For large projects the javascript based search engine can be slow, then\n# enabling SERVER_BASED_SEARCH may provide a better solution. It is possible to\n# search using the keyboard; to jump to the search box use <access key> + S\n# (what the <access key> is depends on the OS and browser, but it is typically\n# <CTRL>, <ALT>/<option>, or both). Inside the search box use the <cursor down\n# key> to jump into the search results window, the results can be navigated\n# using the <cursor keys>. Press <Enter> to select an item or <escape> to cancel\n# the search. The filter options can be selected when the cursor is inside the\n# search box by pressing <Shift>+<cursor down>. Also here use the <cursor keys>\n# to select a filter and <Enter> or <escape> to activate or cancel the filter\n# option.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nSEARCHENGINE           = YES\n\n# When the SERVER_BASED_SEARCH tag is enabled the search engine will be\n# implemented using a web server instead of a web client using JavaScript. There\n# are two flavors of web server based searching depending on the EXTERNAL_SEARCH\n# setting. When disabled, doxygen will generate a PHP script for searching and\n# an index file used by the script. When EXTERNAL_SEARCH is enabled the indexing\n# and searching needs to be provided by external tools. See the section\n# \"External Indexing and Searching\" for details.\n# The default value is: NO.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nSERVER_BASED_SEARCH    = NO\n\n# When EXTERNAL_SEARCH tag is enabled doxygen will no longer generate the PHP\n# script for searching. Instead the search results are written to an XML file\n# which needs to be processed by an external indexer. Doxygen will invoke an\n# external search engine pointed to by the SEARCHENGINE_URL option to obtain the\n# search results.\n#\n# Doxygen ships with an example indexer (doxyindexer) and search engine\n# (doxysearch.cgi) which are based on the open source search engine library\n# Xapian (see:\n# https://xapian.org/).\n#\n# See the section \"External Indexing and Searching\" for details.\n# The default value is: NO.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nEXTERNAL_SEARCH        = NO\n\n# The SEARCHENGINE_URL should point to a search engine hosted by a web server\n# which will return the search results when EXTERNAL_SEARCH is enabled.\n#\n# Doxygen ships with an example indexer (doxyindexer) and search engine\n# (doxysearch.cgi) which are based on the open source search engine library\n# Xapian (see:\n# https://xapian.org/). See the section \"External Indexing and Searching\" for\n# details.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nSEARCHENGINE_URL       =\n\n# When SERVER_BASED_SEARCH and EXTERNAL_SEARCH are both enabled the unindexed\n# search data is written to a file for indexing by an external tool. With the\n# SEARCHDATA_FILE tag the name of this file can be specified.\n# The default file is: searchdata.xml.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nSEARCHDATA_FILE        = searchdata.xml\n\n# When SERVER_BASED_SEARCH and EXTERNAL_SEARCH are both enabled the\n# EXTERNAL_SEARCH_ID tag can be used as an identifier for the project. This is\n# useful in combination with EXTRA_SEARCH_MAPPINGS to search through multiple\n# projects and redirect the results back to the right project.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nEXTERNAL_SEARCH_ID     =\n\n# The EXTRA_SEARCH_MAPPINGS tag can be used to enable searching through doxygen\n# projects other than the one defined by this configuration file, but that are\n# all added to the same external search index. Each project needs to have a\n# unique id set via EXTERNAL_SEARCH_ID. The search mapping then maps the id of\n# to a relative location where the documentation can be found. The format is:\n# EXTRA_SEARCH_MAPPINGS = tagname1=loc1 tagname2=loc2 ...\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nEXTRA_SEARCH_MAPPINGS  =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the LaTeX output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_LATEX tag is set to YES, doxygen will generate LaTeX output.\n# The default value is: YES.\n\nGENERATE_LATEX         = NO\n\n# The LATEX_OUTPUT tag is used to specify where the LaTeX docs will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: latex.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_OUTPUT           = latex\n\n# The LATEX_CMD_NAME tag can be used to specify the LaTeX command name to be\n# invoked.\n#\n# Note that when not enabling USE_PDFLATEX the default is latex when enabling\n# USE_PDFLATEX the default is pdflatex and when in the later case latex is\n# chosen this is overwritten by pdflatex. For specific output languages the\n# default can have been set differently, this depends on the implementation of\n# the output language.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_CMD_NAME         = latex\n\n# The MAKEINDEX_CMD_NAME tag can be used to specify the command name to generate\n# index for LaTeX.\n# Note: This tag is used in the Makefile / make.bat.\n# See also: LATEX_MAKEINDEX_CMD for the part in the generated output file\n# (.tex).\n# The default file is: makeindex.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nMAKEINDEX_CMD_NAME     = makeindex\n\n# The LATEX_MAKEINDEX_CMD tag can be used to specify the command name to\n# generate index for LaTeX. In case there is no backslash (\\) as first character\n# it will be automatically added in the LaTeX code.\n# Note: This tag is used in the generated output file (.tex).\n# See also: MAKEINDEX_CMD_NAME for the part in the Makefile / make.bat.\n# The default value is: makeindex.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_MAKEINDEX_CMD    = makeindex\n\n# If the COMPACT_LATEX tag is set to YES, doxygen generates more compact LaTeX\n# documents. This may be useful for small projects and may help to save some\n# trees in general.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nCOMPACT_LATEX          = NO\n\n# The PAPER_TYPE tag can be used to set the paper type that is used by the\n# printer.\n# Possible values are: a4 (210 x 297 mm), letter (8.5 x 11 inches), legal (8.5 x\n# 14 inches) and executive (7.25 x 10.5 inches).\n# The default value is: a4.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nPAPER_TYPE             = a4\n\n# The EXTRA_PACKAGES tag can be used to specify one or more LaTeX package names\n# that should be included in the LaTeX output. The package can be specified just\n# by its name or with the correct syntax as to be used with the LaTeX\n# \\usepackage command. To get the times font for instance you can specify :\n# EXTRA_PACKAGES=times or EXTRA_PACKAGES={times}\n# To use the option intlimits with the amsmath package you can specify:\n# EXTRA_PACKAGES=[intlimits]{amsmath}\n# If left blank no extra packages will be included.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nEXTRA_PACKAGES         =\n\n# The LATEX_HEADER tag can be used to specify a personal LaTeX header for the\n# generated LaTeX document. The header should contain everything until the first\n# chapter. If it is left blank doxygen will generate a standard header. See\n# section \"Doxygen usage\" for information on how to let doxygen write the\n# default header to a separate file.\n#\n# Note: Only use a user-defined header if you know what you are doing! The\n# following commands have a special meaning inside the header: $title,\n# $datetime, $date, $doxygenversion, $projectname, $projectnumber,\n# $projectbrief, $projectlogo. Doxygen will replace $title with the empty\n# string, for the replacement values of the other commands the user is referred\n# to HTML_HEADER.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_HEADER           =\n\n# The LATEX_FOOTER tag can be used to specify a personal LaTeX footer for the\n# generated LaTeX document. The footer should contain everything after the last\n# chapter. If it is left blank doxygen will generate a standard footer. See\n# LATEX_HEADER for more information on how to generate a default footer and what\n# special commands can be used inside the footer.\n#\n# Note: Only use a user-defined footer if you know what you are doing!\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_FOOTER           =\n\n# The LATEX_EXTRA_STYLESHEET tag can be used to specify additional user-defined\n# LaTeX style sheets that are included after the standard style sheets created\n# by doxygen. Using this option one can overrule certain style aspects. Doxygen\n# will copy the style sheet files to the output directory.\n# Note: The order of the extra style sheet files is of importance (e.g. the last\n# style sheet in the list overrules the setting of the previous ones in the\n# list).\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_EXTRA_STYLESHEET =\n\n# The LATEX_EXTRA_FILES tag can be used to specify one or more extra images or\n# other source files which should be copied to the LATEX_OUTPUT output\n# directory. Note that the files will be copied as-is; there are no commands or\n# markers available.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_EXTRA_FILES      =\n\n# If the PDF_HYPERLINKS tag is set to YES, the LaTeX that is generated is\n# prepared for conversion to PDF (using ps2pdf or pdflatex). The PDF file will\n# contain links (just like the HTML output) instead of page references. This\n# makes the output suitable for online browsing using a PDF viewer.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nPDF_HYPERLINKS         = YES\n\n# If the USE_PDFLATEX tag is set to YES, doxygen will use the engine as\n# specified with LATEX_CMD_NAME to generate the PDF file directly from the LaTeX\n# files. Set this option to YES, to get a higher quality PDF documentation.\n#\n# See also section LATEX_CMD_NAME for selecting the engine.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nUSE_PDFLATEX           = YES\n\n# If the LATEX_BATCHMODE tag is set to YES, doxygen will add the \\batchmode\n# command to the generated LaTeX files. This will instruct LaTeX to keep running\n# if errors occur, instead of asking the user for help. This option is also used\n# when generating formulas in HTML.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_BATCHMODE        = NO\n\n# If the LATEX_HIDE_INDICES tag is set to YES then doxygen will not include the\n# index chapters (such as File Index, Compound Index, etc.) in the output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_HIDE_INDICES     = NO\n\n# If the LATEX_SOURCE_CODE tag is set to YES then doxygen will include source\n# code with syntax highlighting in the LaTeX output.\n#\n# Note that which sources are shown also depends on other settings such as\n# SOURCE_BROWSER.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_SOURCE_CODE      = NO\n\n# The LATEX_BIB_STYLE tag can be used to specify the style to use for the\n# bibliography, e.g. plainnat, or ieeetr. See\n# https://en.wikipedia.org/wiki/BibTeX and \\cite for more info.\n# The default value is: plain.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_BIB_STYLE        = plain\n\n# If the LATEX_TIMESTAMP tag is set to YES then the footer of each generated\n# page will contain the date and time when the page was generated. Setting this\n# to NO can help when comparing the output of multiple runs.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_TIMESTAMP        = NO\n\n# The LATEX_EMOJI_DIRECTORY tag is used to specify the (relative or absolute)\n# path from which the emoji images will be read. If a relative path is entered,\n# it will be relative to the LATEX_OUTPUT directory. If left blank the\n# LATEX_OUTPUT directory will be used.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_EMOJI_DIRECTORY  =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the RTF output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_RTF tag is set to YES, doxygen will generate RTF output. The\n# RTF output is optimized for Word 97 and may not look too pretty with other RTF\n# readers/editors.\n# The default value is: NO.\n\nGENERATE_RTF           = NO\n\n# The RTF_OUTPUT tag is used to specify where the RTF docs will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: rtf.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_OUTPUT             = rtf\n\n# If the COMPACT_RTF tag is set to YES, doxygen generates more compact RTF\n# documents. This may be useful for small projects and may help to save some\n# trees in general.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nCOMPACT_RTF            = NO\n\n# If the RTF_HYPERLINKS tag is set to YES, the RTF that is generated will\n# contain hyperlink fields. The RTF file will contain links (just like the HTML\n# output) instead of page references. This makes the output suitable for online\n# browsing using Word or some other Word compatible readers that support those\n# fields.\n#\n# Note: WordPad (write) and others do not support links.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_HYPERLINKS         = NO\n\n# Load stylesheet definitions from file. Syntax is similar to doxygen's\n# configuration file, i.e. a series of assignments. You only have to provide\n# replacements, missing definitions are set to their default value.\n#\n# See also section \"Doxygen usage\" for information on how to generate the\n# default style sheet that doxygen normally uses.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_STYLESHEET_FILE    =\n\n# Set optional variables used in the generation of an RTF document. Syntax is\n# similar to doxygen's configuration file. A template extensions file can be\n# generated using doxygen -e rtf extensionFile.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_EXTENSIONS_FILE    =\n\n# If the RTF_SOURCE_CODE tag is set to YES then doxygen will include source code\n# with syntax highlighting in the RTF output.\n#\n# Note that which sources are shown also depends on other settings such as\n# SOURCE_BROWSER.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_SOURCE_CODE        = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the man page output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_MAN tag is set to YES, doxygen will generate man pages for\n# classes and files.\n# The default value is: NO.\n\nGENERATE_MAN           = YES\n\n# The MAN_OUTPUT tag is used to specify where the man pages will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it. A directory man3 will be created inside the directory specified by\n# MAN_OUTPUT.\n# The default directory is: man.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_OUTPUT             = man\n\n# The MAN_EXTENSION tag determines the extension that is added to the generated\n# man pages. In case the manual section does not start with a number, the number\n# 3 is prepended. The dot (.) at the beginning of the MAN_EXTENSION tag is\n# optional.\n# The default value is: .3.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_EXTENSION          = .3\n\n# The MAN_SUBDIR tag determines the name of the directory created within\n# MAN_OUTPUT in which the man pages are placed. If defaults to man followed by\n# MAN_EXTENSION with the initial . removed.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_SUBDIR             =\n\n# If the MAN_LINKS tag is set to YES and doxygen generates man output, then it\n# will generate one additional man file for each entity documented in the real\n# man page(s). These additional files only source the real man page, but without\n# them the man command would be unable to find the correct page.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_LINKS              = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to the XML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_XML tag is set to YES, doxygen will generate an XML file that\n# captures the structure of the code including all documentation.\n# The default value is: NO.\n\nGENERATE_XML           = NO\n\n# The XML_OUTPUT tag is used to specify where the XML pages will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: xml.\n# This tag requires that the tag GENERATE_XML is set to YES.\n\nXML_OUTPUT             = xml\n\n# If the XML_PROGRAMLISTING tag is set to YES, doxygen will dump the program\n# listings (including syntax highlighting and cross-referencing information) to\n# the XML output. Note that enabling this will significantly increase the size\n# of the XML output.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_XML is set to YES.\n\nXML_PROGRAMLISTING     = YES\n\n# If the XML_NS_MEMB_FILE_SCOPE tag is set to YES, doxygen will include\n# namespace members in file scope as well, matching the HTML output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_XML is set to YES.\n\nXML_NS_MEMB_FILE_SCOPE = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the DOCBOOK output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_DOCBOOK tag is set to YES, doxygen will generate Docbook files\n# that can be used to generate PDF.\n# The default value is: NO.\n\nGENERATE_DOCBOOK       = NO\n\n# The DOCBOOK_OUTPUT tag is used to specify where the Docbook pages will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be put in\n# front of it.\n# The default directory is: docbook.\n# This tag requires that the tag GENERATE_DOCBOOK is set to YES.\n\nDOCBOOK_OUTPUT         = docbook\n\n# If the DOCBOOK_PROGRAMLISTING tag is set to YES, doxygen will include the\n# program listings (including syntax highlighting and cross-referencing\n# information) to the DOCBOOK output. Note that enabling this will significantly\n# increase the size of the DOCBOOK output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_DOCBOOK is set to YES.\n\nDOCBOOK_PROGRAMLISTING = NO\n\n#---------------------------------------------------------------------------\n# Configuration options for the AutoGen Definitions output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_AUTOGEN_DEF tag is set to YES, doxygen will generate an\n# AutoGen Definitions (see http://autogen.sourceforge.net/) file that captures\n# the structure of the code including all documentation. Note that this feature\n# is still experimental and incomplete at the moment.\n# The default value is: NO.\n\nGENERATE_AUTOGEN_DEF   = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to Sqlite3 output\n#---------------------------------------------------------------------------\n\n#---------------------------------------------------------------------------\n# Configuration options related to the Perl module output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES, doxygen will generate a Perl module\n# file that captures the structure of the code including all documentation.\n#\n# Note that this feature is still experimental and incomplete at the moment.\n# The default value is: NO.\n\nGENERATE_PERLMOD       = NO\n\n# If the PERLMOD_LATEX tag is set to YES, doxygen will generate the necessary\n# Makefile rules, Perl scripts and LaTeX code to be able to generate PDF and DVI\n# output from the Perl module output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\nPERLMOD_LATEX          = NO\n\n# If the PERLMOD_PRETTY tag is set to YES, the Perl module output will be nicely\n# formatted so it can be parsed by a human reader. This is useful if you want to\n# understand what is going on. On the other hand, if this tag is set to NO, the\n# size of the Perl module output will be much smaller and Perl will parse it\n# just the same.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\nPERLMOD_PRETTY         = YES\n\n# The names of the make variables in the generated doxyrules.make file are\n# prefixed with the string contained in PERLMOD_MAKEVAR_PREFIX. This is useful\n# so different doxyrules.make files included by the same Makefile don't\n# overwrite each other's variables.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\nPERLMOD_MAKEVAR_PREFIX =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the preprocessor\n#---------------------------------------------------------------------------\n\n# If the ENABLE_PREPROCESSING tag is set to YES, doxygen will evaluate all\n# C-preprocessor directives found in the sources and include files.\n# The default value is: YES.\n\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES, doxygen will expand all macro names\n# in the source code. If set to NO, only conditional compilation will be\n# performed. Macro expansion can be done in a controlled way by setting\n# EXPAND_ONLY_PREDEF to YES.\n# The default value is: NO.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nMACRO_EXPANSION        = NO\n\n# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES then\n# the macro expansion is limited to the macros specified with the PREDEFINED and\n# EXPAND_AS_DEFINED tags.\n# The default value is: NO.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nEXPAND_ONLY_PREDEF     = NO\n\n# If the SEARCH_INCLUDES tag is set to YES, the include files in the\n# INCLUDE_PATH will be searched if a #include is found.\n# The default value is: YES.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nSEARCH_INCLUDES        = YES\n\n# The INCLUDE_PATH tag can be used to specify one or more directories that\n# contain include files that are not input files but should be processed by the\n# preprocessor.\n# This tag requires that the tag SEARCH_INCLUDES is set to YES.\n\nINCLUDE_PATH           = ./include\n\n# You can use the INCLUDE_FILE_PATTERNS tag to specify one or more wildcard\n# patterns (like *.h and *.hpp) to filter out the header-files in the\n# directories. If left blank, the patterns specified with FILE_PATTERNS will be\n# used.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nINCLUDE_FILE_PATTERNS  =\n\n# The PREDEFINED tag can be used to specify one or more macro names that are\n# defined before the preprocessor is started (similar to the -D option of e.g.\n# gcc). The argument of the tag is a list of macros of the form: name or\n# name=definition (no spaces). If the definition and the \"=\" are omitted, \"=1\"\n# is assumed. To prevent a macro definition from being undefined via #undef or\n# recursively expanded use the := operator instead of the = operator.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nPREDEFINED             = LWS_VISIBLE=\n\n# If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then this\n# tag can be used to specify a list of macro names that should be expanded. The\n# macro definition that is found in the sources will be used. Use the PREDEFINED\n# tag if you want to use a different macro definition that overrules the\n# definition found in the source code.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nEXPAND_AS_DEFINED      =\n\n# If the SKIP_FUNCTION_MACROS tag is set to YES then doxygen's preprocessor will\n# remove all references to function-like macros that are alone on a line, have\n# an all uppercase name, and do not end with a semicolon. Such function macros\n# are typically used for boiler-plate code, and will confuse the parser if not\n# removed.\n# The default value is: YES.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nSKIP_FUNCTION_MACROS   = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to external references\n#---------------------------------------------------------------------------\n\n# The TAGFILES tag can be used to specify one or more tag files. For each tag\n# file the location of the external documentation should be added. The format of\n# a tag file without this location is as follows:\n# TAGFILES = file1 file2 ...\n# Adding location for the tag files is done as follows:\n# TAGFILES = file1=loc1 \"file2 = loc2\" ...\n# where loc1 and loc2 can be relative or absolute paths or URLs. See the\n# section \"Linking to external documentation\" for more information about the use\n# of tag files.\n# Note: Each tag file must have a unique name (where the name does NOT include\n# the path). If a tag file is not located in the directory in which doxygen is\n# run, you must also specify the path to the tagfile here.\n\nTAGFILES               =\n\n# When a file name is specified after GENERATE_TAGFILE, doxygen will create a\n# tag file that is based on the input files it reads. See section \"Linking to\n# external documentation\" for more information about the usage of tag files.\n\nGENERATE_TAGFILE       =\n\n# If the ALLEXTERNALS tag is set to YES, all external class will be listed in\n# the class index. If set to NO, only the inherited external classes will be\n# listed.\n# The default value is: NO.\n\nALLEXTERNALS           = NO\n\n# If the EXTERNAL_GROUPS tag is set to YES, all external groups will be listed\n# in the modules index. If set to NO, only the current project's groups will be\n# listed.\n# The default value is: YES.\n\nEXTERNAL_GROUPS        = YES\n\n# If the EXTERNAL_PAGES tag is set to YES, all external pages will be listed in\n# the related pages index. If set to NO, only the current project's pages will\n# be listed.\n# The default value is: YES.\n\nEXTERNAL_PAGES         = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to the dot tool\n#---------------------------------------------------------------------------\n\n# If the CLASS_DIAGRAMS tag is set to YES, doxygen will generate a class diagram\n# (in HTML and LaTeX) for classes with base or super classes. Setting the tag to\n# NO turns the diagrams off. Note that this option also works with HAVE_DOT\n# disabled, but it is recommended to install and use dot, since it yields more\n# powerful graphs.\n# The default value is: YES.\n\nCLASS_DIAGRAMS         = YES\n\n# You can include diagrams made with dia in doxygen documentation. Doxygen will\n# then run dia to produce the diagram and insert it in the documentation. The\n# DIA_PATH tag allows you to specify the directory where the dia binary resides.\n# If left empty dia is assumed to be found in the default search path.\n\nDIA_PATH               =\n\n# If set to YES the inheritance and collaboration graphs will hide inheritance\n# and usage relations if the target is undocumented or is not a class.\n# The default value is: YES.\n\nHIDE_UNDOC_RELATIONS   = YES\n\n# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is\n# available from the path. This tool is part of Graphviz (see:\n# http://www.graphviz.org/), a graph visualization toolkit from AT&T and Lucent\n# Bell Labs. The other options in this section have no effect if this option is\n# set to NO\n# The default value is: NO.\n\nHAVE_DOT               = YES\n\n# The DOT_NUM_THREADS specifies the number of dot invocations doxygen is allowed\n# to run in parallel. When set to 0 doxygen will base this on the number of\n# processors available in the system. You can set it explicitly to a value\n# larger than 0 to get control over the balance between CPU load and processing\n# speed.\n# Minimum value: 0, maximum value: 32, default value: 0.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_NUM_THREADS        = 0\n\n# When you want a differently looking font in the dot files that doxygen\n# generates you can specify the font name using DOT_FONTNAME. You need to make\n# sure dot is able to find the font, which can be done by putting it in a\n# standard location or by setting the DOTFONTPATH environment variable or by\n# setting DOT_FONTPATH to the directory containing the font.\n# The default value is: Helvetica.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_FONTNAME           = Helvetica\n\n# The DOT_FONTSIZE tag can be used to set the size (in points) of the font of\n# dot graphs.\n# Minimum value: 4, maximum value: 24, default value: 10.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_FONTSIZE           = 10\n\n# By default doxygen will tell dot to use the default font as specified with\n# DOT_FONTNAME. If you specify a different font using DOT_FONTNAME you can set\n# the path where dot can find it using this tag.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_FONTPATH           =\n\n# If the CLASS_GRAPH tag is set to YES then doxygen will generate a graph for\n# each documented class showing the direct and indirect inheritance relations.\n# Setting this tag to YES will force the CLASS_DIAGRAMS tag to NO.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCLASS_GRAPH            = YES\n\n# If the COLLABORATION_GRAPH tag is set to YES then doxygen will generate a\n# graph for each documented class showing the direct and indirect implementation\n# dependencies (inheritance, containment, and class references variables) of the\n# class with other documented classes.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCOLLABORATION_GRAPH    = YES\n\n# If the GROUP_GRAPHS tag is set to YES then doxygen will generate a graph for\n# groups, showing the direct groups dependencies.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nGROUP_GRAPHS           = YES\n\n# If the UML_LOOK tag is set to YES, doxygen will generate inheritance and\n# collaboration diagrams in a style similar to the OMG's Unified Modeling\n# Language.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nUML_LOOK               = YES\n\n# If the UML_LOOK tag is enabled, the fields and methods are shown inside the\n# class node. If there are many fields or methods and many nodes the graph may\n# become too big to be useful. The UML_LIMIT_NUM_FIELDS threshold limits the\n# number of items for each type to make the size more manageable. Set this to 0\n# for no limit. Note that the threshold may be exceeded by 50% before the limit\n# is enforced. So when you set the threshold to 10, up to 15 fields may appear,\n# but if the number exceeds 15, the total amount of fields shown is limited to\n# 10.\n# Minimum value: 0, maximum value: 100, default value: 10.\n# This tag requires that the tag UML_LOOK is set to YES.\n\nUML_LIMIT_NUM_FIELDS   = 10\n\n# If the DOT_UML_DETAILS tag is set to NO, doxygen will show attributes and\n# methods without types and arguments in the UML graphs. If the DOT_UML_DETAILS\n# tag is set to YES, doxygen will add type and arguments for attributes and\n# methods in the UML graphs. If the DOT_UML_DETAILS tag is set to NONE, doxygen\n# will not generate fields with class member information in the UML graphs. The\n# class diagrams will look similar to the default class diagrams but using UML\n# notation for the relationships.\n# Possible values are: NO, YES and NONE.\n# The default value is: NO.\n# This tag requires that the tag UML_LOOK is set to YES.\n\nDOT_UML_DETAILS        = YES\n\n# The DOT_WRAP_THRESHOLD tag can be used to set the maximum number of characters\n# to display on a single line. If the actual line length exceeds this threshold\n# significantly it will wrapped across multiple lines. Some heuristics are apply\n# to avoid ugly line breaks.\n# Minimum value: 0, maximum value: 1000, default value: 17.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_WRAP_THRESHOLD     = 17\n\n# If the TEMPLATE_RELATIONS tag is set to YES then the inheritance and\n# collaboration graphs will show the relations between templates and their\n# instances.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nTEMPLATE_RELATIONS     = NO\n\n# If the INCLUDE_GRAPH, ENABLE_PREPROCESSING and SEARCH_INCLUDES tags are set to\n# YES then doxygen will generate a graph for each documented file showing the\n# direct and indirect include dependencies of the file with other documented\n# files.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nINCLUDE_GRAPH          = YES\n\n# If the INCLUDED_BY_GRAPH, ENABLE_PREPROCESSING and SEARCH_INCLUDES tags are\n# set to YES then doxygen will generate a graph for each documented file showing\n# the direct and indirect include dependencies of the file with other documented\n# files.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nINCLUDED_BY_GRAPH      = YES\n\n# If the CALL_GRAPH tag is set to YES then doxygen will generate a call\n# dependency graph for every global function or class method.\n#\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable call graphs for selected\n# functions only using the \\callgraph command. Disabling a call graph can be\n# accomplished by means of the command \\hidecallgraph.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCALL_GRAPH             = YES\n\n# If the CALLER_GRAPH tag is set to YES then doxygen will generate a caller\n# dependency graph for every global function or class method.\n#\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable caller graphs for selected\n# functions only using the \\callergraph command. Disabling a caller graph can be\n# accomplished by means of the command \\hidecallergraph.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCALLER_GRAPH           = YES\n\n# If the GRAPHICAL_HIERARCHY tag is set to YES then doxygen will graphical\n# hierarchy of all classes instead of a textual one.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nGRAPHICAL_HIERARCHY    = YES\n\n# If the DIRECTORY_GRAPH tag is set to YES then doxygen will show the\n# dependencies a directory has on other directories in a graphical way. The\n# dependency relations are determined by the #include relations between the\n# files in the directories.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDIRECTORY_GRAPH        = YES\n\n# The DOT_IMAGE_FORMAT tag can be used to set the image format of the images\n# generated by dot. For an explanation of the image formats see the section\n# output formats in the documentation of the dot tool (Graphviz (see:\n# http://www.graphviz.org/)).\n# Note: If you choose svg you need to set HTML_FILE_EXTENSION to xhtml in order\n# to make the SVG files visible in IE 9+ (other browsers do not have this\n# requirement).\n# Possible values are: png, jpg, gif, svg, png:gd, png:gd:gd, png:cairo,\n# png:cairo:gd, png:cairo:cairo, png:cairo:gdiplus, png:gdiplus and\n# png:gdiplus:gdiplus.\n# The default value is: png.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_IMAGE_FORMAT       = png\n\n# If DOT_IMAGE_FORMAT is set to svg, then this option can be set to YES to\n# enable generation of interactive SVG images that allow zooming and panning.\n#\n# Note that this requires a modern browser other than Internet Explorer. Tested\n# and working are Firefox, Chrome, Safari, and Opera.\n# Note: For IE 9+ you need to set HTML_FILE_EXTENSION to xhtml in order to make\n# the SVG files visible. Older versions of IE do not have SVG support.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nINTERACTIVE_SVG        = NO\n\n# The DOT_PATH tag can be used to specify the path where the dot tool can be\n# found. If left blank, it is assumed the dot tool can be found in the path.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_PATH               =\n\n# The DOTFILE_DIRS tag can be used to specify one or more directories that\n# contain dot files that are included in the documentation (see the \\dotfile\n# command).\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOTFILE_DIRS           =\n\n# The MSCFILE_DIRS tag can be used to specify one or more directories that\n# contain msc files that are included in the documentation (see the \\mscfile\n# command).\n\nMSCFILE_DIRS           =\n\n# The DIAFILE_DIRS tag can be used to specify one or more directories that\n# contain dia files that are included in the documentation (see the \\diafile\n# command).\n\nDIAFILE_DIRS           =\n\n# When using plantuml, the PLANTUML_JAR_PATH tag should be used to specify the\n# path where java can find the plantuml.jar file. If left blank, it is assumed\n# PlantUML is not used or called during a preprocessing step. Doxygen will\n# generate a warning when it encounters a \\startuml command in this case and\n# will not generate output for the diagram.\n\nPLANTUML_JAR_PATH      =\n\n# When using plantuml, the PLANTUML_CFG_FILE tag can be used to specify a\n# configuration file for plantuml.\n\nPLANTUML_CFG_FILE      =\n\n# When using plantuml, the specified paths are searched for files specified by\n# the !include statement in a plantuml block.\n\nPLANTUML_INCLUDE_PATH  =\n\n# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of nodes\n# that will be shown in the graph. If the number of nodes in a graph becomes\n# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that doxygen if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n# Minimum value: 0, maximum value: 10000, default value: 50.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_GRAPH_MAX_NODES    = 150\n\n# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the graphs\n# generated by dot. A depth value of 3 means that only nodes reachable from the\n# root by following a path via at most 3 edges will be shown. Nodes that lay\n# further from the root node will be omitted. Note that setting this option to 1\n# or 2 may greatly reduce the computation time needed for large code bases. Also\n# note that the size of a graph can be further restricted by\n# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.\n# Minimum value: 0, maximum value: 1000, default value: 0.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nMAX_DOT_GRAPH_DEPTH    = 0\n\n# Set the DOT_TRANSPARENT tag to YES to generate images with a transparent\n# background. This is disabled by default, because dot on Windows does not seem\n# to support this out of the box.\n#\n# Warning: Depending on the platform used, enabling this option may lead to\n# badly anti-aliased labels on the edges of a graph (i.e. they become hard to\n# read).\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_TRANSPARENT        = NO\n\n# Set the DOT_MULTI_TARGETS tag to YES to allow dot to generate multiple output\n# files in one run (i.e. multiple -o and -T options on the command line). This\n# makes dot run faster, but since only newer versions of dot (>1.8.10) support\n# this, this feature is disabled by default.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_MULTI_TARGETS      = NO\n\n# If the GENERATE_LEGEND tag is set to YES doxygen will generate a legend page\n# explaining the meaning of the various boxes and arrows in the dot generated\n# graphs.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nGENERATE_LEGEND        = YES\n\n# If the DOT_CLEANUP tag is set to YES, doxygen will remove the intermediate\n# files that are used to generate the various graphs.\n#\n# Note: This setting is not only used for dot files but also for msc and\n# plantuml temporary files.\n# The default value is: YES.\n\nDOT_CLEANUP            = YES\n"
        },
        {
          "name": "lwsws",
          "type": "tree",
          "content": null
        },
        {
          "name": "minimal-examples-lowlevel",
          "type": "tree",
          "content": null
        },
        {
          "name": "minimal-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "plugin-standalone",
          "type": "tree",
          "content": null
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-apps",
          "type": "tree",
          "content": null
        },
        {
          "name": "win32port",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}