{
  "metadata": {
    "timestamp": 1736709784157,
    "page": 232,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "yandex/odyssey",
      "stars": 3229,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 16.3779296875,
          "content": "#  from https://github.com/torvalds/linux/blob/master/.clang-format\n#  SPDX-License-Identifier: GPL-2.0\n#\n# clang-format configuration file. Intended for clang-format >= 4.\n#\n# For more information, see:\n#\n#   Documentation/process/clang-format.rst\n#   https://clang.llvm.org/docs/ClangFormat.html\n#   https://clang.llvm.org/docs/ClangFormatStyleOptions.html\n#\n---\nAccessModifierOffset: -4\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlines: Left # Unknown to clang-format-4.0\nAlignOperands: true\nAlignConsecutiveMacros: false\nAlignTrailingComments: false\nAllowAllParametersOfDeclarationOnNextLine: false\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: None\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: false\nBinPackArguments: true\nBinPackParameters: true\nBraceWrapping:\n  AfterClass: false\n  AfterControlStatement: false\n  AfterEnum: false\n  AfterFunction: true\n  AfterNamespace: true\n  AfterObjCDeclaration: false\n  AfterStruct: false\n  AfterUnion: false\n  #AfterExternBlock: false # Unknown to clang-format-5.0\n  BeforeCatch: false\n  BeforeElse: false\n  IndentBraces: false\n  #SplitEmptyFunction: true # Unknown to clang-format-4.0\n  #SplitEmptyRecord: true # Unknown to clang-format-4.0\n  #SplitEmptyNamespace: true # Unknown to clang-format-4.0\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Custom\n#BreakBeforeInheritanceComma: false # Unknown to clang-format-4.0\nBreakBeforeTernaryOperators: false\nBreakConstructorInitializersBeforeComma: false\n#BreakConstructorInitializers: BeforeComma # Unknown to clang-format-4.0\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: false\nColumnLimit: 80\nCommentPragmas: '^ IWYU pragma:'\n#CompactNamespaces: false # Unknown to clang-format-4.0\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nConstructorInitializerIndentWidth: 8\nContinuationIndentWidth: 8\nCpp11BracedListStyle: false\nDerivePointerAlignment: false\nDisableFormat: false\nExperimentalAutoDetectBinPacking: false\n#FixNamespaceComments: false # Unknown to clang-format-4.0\n\n# Taken from:\n#   git grep -h '^#define [^[:space:]]*for_each[^[:space:]]*(' include/ \\\n#   | sed \"s,^#define \\([^[:space:]]*for_each[^[:space:]]*\\)(.*$,  - '\\1',\" \\\n#   | sort | uniq\nForEachMacros:\n  - 'apei_estatus_for_each_section'\n  - 'ata_for_each_dev'\n  - 'ata_for_each_link'\n  - '__ata_qc_for_each'\n  - 'ata_qc_for_each'\n  - 'ata_qc_for_each_raw'\n  - 'ata_qc_for_each_with_internal'\n  - 'ax25_for_each'\n  - 'ax25_uid_for_each'\n  - '__bio_for_each_bvec'\n  - 'bio_for_each_bvec'\n  - 'bio_for_each_bvec_all'\n  - 'bio_for_each_integrity_vec'\n  - '__bio_for_each_segment'\n  - 'bio_for_each_segment'\n  - 'bio_for_each_segment_all'\n  - 'bio_list_for_each'\n  - 'bip_for_each_vec'\n  - 'bitmap_for_each_clear_region'\n  - 'bitmap_for_each_set_region'\n  - 'blkg_for_each_descendant_post'\n  - 'blkg_for_each_descendant_pre'\n  - 'blk_queue_for_each_rl'\n  - 'bond_for_each_slave'\n  - 'bond_for_each_slave_rcu'\n  - 'bpf_for_each_spilled_reg'\n  - 'btree_for_each_safe128'\n  - 'btree_for_each_safe32'\n  - 'btree_for_each_safe64'\n  - 'btree_for_each_safel'\n  - 'card_for_each_dev'\n  - 'cgroup_taskset_for_each'\n  - 'cgroup_taskset_for_each_leader'\n  - 'cpufreq_for_each_entry'\n  - 'cpufreq_for_each_entry_idx'\n  - 'cpufreq_for_each_valid_entry'\n  - 'cpufreq_for_each_valid_entry_idx'\n  - 'css_for_each_child'\n  - 'css_for_each_descendant_post'\n  - 'css_for_each_descendant_pre'\n  - 'device_for_each_child_node'\n  - 'dma_fence_chain_for_each'\n  - 'do_for_each_ftrace_op'\n  - 'drm_atomic_crtc_for_each_plane'\n  - 'drm_atomic_crtc_state_for_each_plane'\n  - 'drm_atomic_crtc_state_for_each_plane_state'\n  - 'drm_atomic_for_each_plane_damage'\n  - 'drm_client_for_each_connector_iter'\n  - 'drm_client_for_each_modeset'\n  - 'drm_connector_for_each_possible_encoder'\n  - 'drm_for_each_bridge_in_chain'\n  - 'drm_for_each_connector_iter'\n  - 'drm_for_each_crtc'\n  - 'drm_for_each_encoder'\n  - 'drm_for_each_encoder_mask'\n  - 'drm_for_each_fb'\n  - 'drm_for_each_legacy_plane'\n  - 'drm_for_each_plane'\n  - 'drm_for_each_plane_mask'\n  - 'drm_for_each_privobj'\n  - 'drm_mm_for_each_hole'\n  - 'drm_mm_for_each_node'\n  - 'drm_mm_for_each_node_in_range'\n  - 'drm_mm_for_each_node_safe'\n  - 'flow_action_for_each'\n  - 'for_each_active_dev_scope'\n  - 'for_each_active_drhd_unit'\n  - 'for_each_active_iommu'\n  - 'for_each_aggr_pgid'\n  - 'for_each_available_child_of_node'\n  - 'for_each_bio'\n  - 'for_each_board_func_rsrc'\n  - 'for_each_bvec'\n  - 'for_each_card_auxs'\n  - 'for_each_card_auxs_safe'\n  - 'for_each_card_components'\n  - 'for_each_card_dapms'\n  - 'for_each_card_pre_auxs'\n  - 'for_each_card_prelinks'\n  - 'for_each_card_rtds'\n  - 'for_each_card_rtds_safe'\n  - 'for_each_card_widgets'\n  - 'for_each_card_widgets_safe'\n  - 'for_each_cgroup_storage_type'\n  - 'for_each_child_of_node'\n  - 'for_each_clear_bit'\n  - 'for_each_clear_bit_from'\n  - 'for_each_cmsghdr'\n  - 'for_each_compatible_node'\n  - 'for_each_component_dais'\n  - 'for_each_component_dais_safe'\n  - 'for_each_comp_order'\n  - 'for_each_console'\n  - 'for_each_cpu'\n  - 'for_each_cpu_and'\n  - 'for_each_cpu_not'\n  - 'for_each_cpu_wrap'\n  - 'for_each_dapm_widgets'\n  - 'for_each_dev_addr'\n  - 'for_each_dev_scope'\n  - 'for_each_displayid_db'\n  - 'for_each_dma_cap_mask'\n  - 'for_each_dpcm_be'\n  - 'for_each_dpcm_be_rollback'\n  - 'for_each_dpcm_be_safe'\n  - 'for_each_dpcm_fe'\n  - 'for_each_drhd_unit'\n  - 'for_each_dss_dev'\n  - 'for_each_efi_memory_desc'\n  - 'for_each_efi_memory_desc_in_map'\n  - 'for_each_element'\n  - 'for_each_element_extid'\n  - 'for_each_element_id'\n  - 'for_each_endpoint_of_node'\n  - 'for_each_evictable_lru'\n  - 'for_each_fib6_node_rt_rcu'\n  - 'for_each_fib6_walker_rt'\n  - 'for_each_free_mem_pfn_range_in_zone'\n  - 'for_each_free_mem_pfn_range_in_zone_from'\n  - 'for_each_free_mem_range'\n  - 'for_each_free_mem_range_reverse'\n  - 'for_each_func_rsrc'\n  - 'for_each_hstate'\n  - 'for_each_if'\n  - 'for_each_iommu'\n  - 'for_each_ip_tunnel_rcu'\n  - 'for_each_irq_nr'\n  - 'for_each_link_codecs'\n  - 'for_each_link_cpus'\n  - 'for_each_link_platforms'\n  - 'for_each_lru'\n  - 'for_each_matching_node'\n  - 'for_each_matching_node_and_match'\n  - 'for_each_member'\n  - 'for_each_mem_region'\n  - 'for_each_memblock_type'\n  - 'for_each_memcg_cache_index'\n  - 'for_each_mem_pfn_range'\n  - '__for_each_mem_range'\n  - 'for_each_mem_range'\n  - '__for_each_mem_range_rev'\n  - 'for_each_mem_range_rev'\n  - 'for_each_migratetype_order'\n  - 'for_each_msi_entry'\n  - 'for_each_msi_entry_safe'\n  - 'for_each_net'\n  - 'for_each_net_continue_reverse'\n  - 'for_each_netdev'\n  - 'for_each_netdev_continue'\n  - 'for_each_netdev_continue_rcu'\n  - 'for_each_netdev_continue_reverse'\n  - 'for_each_netdev_feature'\n  - 'for_each_netdev_in_bond_rcu'\n  - 'for_each_netdev_rcu'\n  - 'for_each_netdev_reverse'\n  - 'for_each_netdev_safe'\n  - 'for_each_net_rcu'\n  - 'for_each_new_connector_in_state'\n  - 'for_each_new_crtc_in_state'\n  - 'for_each_new_mst_mgr_in_state'\n  - 'for_each_new_plane_in_state'\n  - 'for_each_new_private_obj_in_state'\n  - 'for_each_node'\n  - 'for_each_node_by_name'\n  - 'for_each_node_by_type'\n  - 'for_each_node_mask'\n  - 'for_each_node_state'\n  - 'for_each_node_with_cpus'\n  - 'for_each_node_with_property'\n  - 'for_each_nonreserved_multicast_dest_pgid'\n  - 'for_each_of_allnodes'\n  - 'for_each_of_allnodes_from'\n  - 'for_each_of_cpu_node'\n  - 'for_each_of_pci_range'\n  - 'for_each_old_connector_in_state'\n  - 'for_each_old_crtc_in_state'\n  - 'for_each_old_mst_mgr_in_state'\n  - 'for_each_oldnew_connector_in_state'\n  - 'for_each_oldnew_crtc_in_state'\n  - 'for_each_oldnew_mst_mgr_in_state'\n  - 'for_each_oldnew_plane_in_state'\n  - 'for_each_oldnew_plane_in_state_reverse'\n  - 'for_each_oldnew_private_obj_in_state'\n  - 'for_each_old_plane_in_state'\n  - 'for_each_old_private_obj_in_state'\n  - 'for_each_online_cpu'\n  - 'for_each_online_node'\n  - 'for_each_online_pgdat'\n  - 'for_each_pci_bridge'\n  - 'for_each_pci_dev'\n  - 'for_each_pci_msi_entry'\n  - 'for_each_pcm_streams'\n  - 'for_each_physmem_range'\n  - 'for_each_populated_zone'\n  - 'for_each_possible_cpu'\n  - 'for_each_present_cpu'\n  - 'for_each_prime_number'\n  - 'for_each_prime_number_from'\n  - 'for_each_process'\n  - 'for_each_process_thread'\n  - 'for_each_property_of_node'\n  - 'for_each_registered_fb'\n  - 'for_each_requested_gpio'\n  - 'for_each_requested_gpio_in_range'\n  - 'for_each_reserved_mem_range'\n  - 'for_each_reserved_mem_region'\n  - 'for_each_rtd_codec_dais'\n  - 'for_each_rtd_codec_dais_rollback'\n  - 'for_each_rtd_components'\n  - 'for_each_rtd_cpu_dais'\n  - 'for_each_rtd_cpu_dais_rollback'\n  - 'for_each_rtd_dais'\n  - 'for_each_set_bit'\n  - 'for_each_set_bit_from'\n  - 'for_each_set_clump8'\n  - 'for_each_sg'\n  - 'for_each_sg_dma_page'\n  - 'for_each_sg_page'\n  - 'for_each_sgtable_dma_page'\n  - 'for_each_sgtable_dma_sg'\n  - 'for_each_sgtable_page'\n  - 'for_each_sgtable_sg'\n  - 'for_each_sibling_event'\n  - 'for_each_subelement'\n  - 'for_each_subelement_extid'\n  - 'for_each_subelement_id'\n  - '__for_each_thread'\n  - 'for_each_thread'\n  - 'for_each_unicast_dest_pgid'\n  - 'for_each_wakeup_source'\n  - 'for_each_zone'\n  - 'for_each_zone_zonelist'\n  - 'for_each_zone_zonelist_nodemask'\n  - 'fwnode_for_each_available_child_node'\n  - 'fwnode_for_each_child_node'\n  - 'fwnode_graph_for_each_endpoint'\n  - 'gadget_for_each_ep'\n  - 'genradix_for_each'\n  - 'genradix_for_each_from'\n  - 'hash_for_each'\n  - 'hash_for_each_possible'\n  - 'hash_for_each_possible_rcu'\n  - 'hash_for_each_possible_rcu_notrace'\n  - 'hash_for_each_possible_safe'\n  - 'hash_for_each_rcu'\n  - 'hash_for_each_safe'\n  - 'hctx_for_each_ctx'\n  - 'hlist_bl_for_each_entry'\n  - 'hlist_bl_for_each_entry_rcu'\n  - 'hlist_bl_for_each_entry_safe'\n  - 'hlist_for_each'\n  - 'hlist_for_each_entry'\n  - 'hlist_for_each_entry_continue'\n  - 'hlist_for_each_entry_continue_rcu'\n  - 'hlist_for_each_entry_continue_rcu_bh'\n  - 'hlist_for_each_entry_from'\n  - 'hlist_for_each_entry_from_rcu'\n  - 'hlist_for_each_entry_rcu'\n  - 'hlist_for_each_entry_rcu_bh'\n  - 'hlist_for_each_entry_rcu_notrace'\n  - 'hlist_for_each_entry_safe'\n  - '__hlist_for_each_rcu'\n  - 'hlist_for_each_safe'\n  - 'hlist_nulls_for_each_entry'\n  - 'hlist_nulls_for_each_entry_from'\n  - 'hlist_nulls_for_each_entry_rcu'\n  - 'hlist_nulls_for_each_entry_safe'\n  - 'i3c_bus_for_each_i2cdev'\n  - 'i3c_bus_for_each_i3cdev'\n  - 'ide_host_for_each_port'\n  - 'ide_port_for_each_dev'\n  - 'ide_port_for_each_present_dev'\n  - 'idr_for_each_entry'\n  - 'idr_for_each_entry_continue'\n  - 'idr_for_each_entry_continue_ul'\n  - 'idr_for_each_entry_ul'\n  - 'in_dev_for_each_ifa_rcu'\n  - 'in_dev_for_each_ifa_rtnl'\n  - 'inet_bind_bucket_for_each'\n  - 'inet_lhash2_for_each_icsk_rcu'\n  - 'key_for_each'\n  - 'key_for_each_safe'\n  - 'klp_for_each_func'\n  - 'klp_for_each_func_safe'\n  - 'klp_for_each_func_static'\n  - 'klp_for_each_object'\n  - 'klp_for_each_object_safe'\n  - 'klp_for_each_object_static'\n  - 'kunit_suite_for_each_test_case'\n  - 'kvm_for_each_memslot'\n  - 'kvm_for_each_vcpu'\n  - 'list_for_each'\n  - 'list_for_each_codec'\n  - 'list_for_each_codec_safe'\n  - 'list_for_each_continue'\n  - 'list_for_each_entry'\n  - 'list_for_each_entry_continue'\n  - 'list_for_each_entry_continue_rcu'\n  - 'list_for_each_entry_continue_reverse'\n  - 'list_for_each_entry_from'\n  - 'list_for_each_entry_from_rcu'\n  - 'list_for_each_entry_from_reverse'\n  - 'list_for_each_entry_lockless'\n  - 'list_for_each_entry_rcu'\n  - 'list_for_each_entry_reverse'\n  - 'list_for_each_entry_safe'\n  - 'list_for_each_entry_safe_continue'\n  - 'list_for_each_entry_safe_from'\n  - 'list_for_each_entry_safe_reverse'\n  - 'list_for_each_prev'\n  - 'list_for_each_prev_safe'\n  - 'list_for_each_safe'\n  - 'llist_for_each'\n  - 'llist_for_each_entry'\n  - 'llist_for_each_entry_safe'\n  - 'llist_for_each_safe'\n  - 'mci_for_each_dimm'\n  - 'media_device_for_each_entity'\n  - 'media_device_for_each_intf'\n  - 'media_device_for_each_link'\n  - 'media_device_for_each_pad'\n  - 'nanddev_io_for_each_page'\n  - 'netdev_for_each_lower_dev'\n  - 'netdev_for_each_lower_private'\n  - 'netdev_for_each_lower_private_rcu'\n  - 'netdev_for_each_mc_addr'\n  - 'netdev_for_each_uc_addr'\n  - 'netdev_for_each_upper_dev_rcu'\n  - 'netdev_hw_addr_list_for_each'\n  - 'nft_rule_for_each_expr'\n  - 'nla_for_each_attr'\n  - 'nla_for_each_nested'\n  - 'nlmsg_for_each_attr'\n  - 'nlmsg_for_each_msg'\n  - 'nr_neigh_for_each'\n  - 'nr_neigh_for_each_safe'\n  - 'nr_node_for_each'\n  - 'nr_node_for_each_safe'\n  - 'of_for_each_phandle'\n  - 'of_property_for_each_string'\n  - 'of_property_for_each_u32'\n  - 'pci_bus_for_each_resource'\n  - 'pcm_for_each_format'\n  - 'ping_portaddr_for_each_entry'\n  - 'plist_for_each'\n  - 'plist_for_each_continue'\n  - 'plist_for_each_entry'\n  - 'plist_for_each_entry_continue'\n  - 'plist_for_each_entry_safe'\n  - 'plist_for_each_safe'\n  - 'pnp_for_each_card'\n  - 'pnp_for_each_dev'\n  - 'protocol_for_each_card'\n  - 'protocol_for_each_dev'\n  - 'queue_for_each_hw_ctx'\n  - 'radix_tree_for_each_slot'\n  - 'radix_tree_for_each_tagged'\n  - 'rbtree_postorder_for_each_entry_safe'\n  - 'rdma_for_each_block'\n  - 'rdma_for_each_port'\n  - 'rdma_umem_for_each_dma_block'\n  - 'resource_list_for_each_entry'\n  - 'resource_list_for_each_entry_safe'\n  - 'rhl_for_each_entry_rcu'\n  - 'rhl_for_each_rcu'\n  - 'rht_for_each'\n  - 'rht_for_each_entry'\n  - 'rht_for_each_entry_from'\n  - 'rht_for_each_entry_rcu'\n  - 'rht_for_each_entry_rcu_from'\n  - 'rht_for_each_entry_safe'\n  - 'rht_for_each_from'\n  - 'rht_for_each_rcu'\n  - 'rht_for_each_rcu_from'\n  - '__rq_for_each_bio'\n  - 'rq_for_each_bvec'\n  - 'rq_for_each_segment'\n  - 'scsi_for_each_prot_sg'\n  - 'scsi_for_each_sg'\n  - 'sctp_for_each_hentry'\n  - 'sctp_skb_for_each'\n  - 'shdma_for_each_chan'\n  - '__shost_for_each_device'\n  - 'shost_for_each_device'\n  - 'sk_for_each'\n  - 'sk_for_each_bound'\n  - 'sk_for_each_entry_offset_rcu'\n  - 'sk_for_each_from'\n  - 'sk_for_each_rcu'\n  - 'sk_for_each_safe'\n  - 'sk_nulls_for_each'\n  - 'sk_nulls_for_each_from'\n  - 'sk_nulls_for_each_rcu'\n  - 'snd_array_for_each'\n  - 'snd_pcm_group_for_each_entry'\n  - 'snd_soc_dapm_widget_for_each_path'\n  - 'snd_soc_dapm_widget_for_each_path_safe'\n  - 'snd_soc_dapm_widget_for_each_sink_path'\n  - 'snd_soc_dapm_widget_for_each_source_path'\n  - 'tb_property_for_each'\n  - 'tcf_exts_for_each_action'\n  - 'udp_portaddr_for_each_entry'\n  - 'udp_portaddr_for_each_entry_rcu'\n  - 'usb_hub_for_each_child'\n  - 'v4l2_device_for_each_subdev'\n  - 'v4l2_m2m_for_each_dst_buf'\n  - 'v4l2_m2m_for_each_dst_buf_safe'\n  - 'v4l2_m2m_for_each_src_buf'\n  - 'v4l2_m2m_for_each_src_buf_safe'\n  - 'virtio_device_for_each_vq'\n  - 'while_for_each_ftrace_op'\n  - 'xa_for_each'\n  - 'xa_for_each_marked'\n  - 'xa_for_each_range'\n  - 'xa_for_each_start'\n  - 'xas_for_each'\n  - 'xas_for_each_conflict'\n  - 'xas_for_each_marked'\n  - 'xbc_array_for_each_value'\n  - 'xbc_for_each_key_value'\n  - 'xbc_node_for_each_array_value'\n  - 'xbc_node_for_each_child'\n  - 'xbc_node_for_each_key_value'\n  - 'zorro_for_each_dev'\n\n#IncludeBlocks: Preserve # Unknown to clang-format-5.0\nIncludeCategories:\n  - Regex: '.*'\n    Priority: 1\nIncludeIsMainRegex: '(Test)?$'\nIndentCaseLabels: false\n#IndentPPDirectives: None # Unknown to clang-format-5.0\nIndentWidth: 8\nIndentWrappedFunctionNames: false\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: false\nMacroBlockBegin: ''\nMacroBlockEnd: ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\n#ObjCBinPackProtocolList: Auto # Unknown to clang-format-5.0\nObjCBlockIndentWidth: 8\nObjCSpaceAfterProperty: true\nObjCSpaceBeforeProtocolList: true\n\n# Taken from git's rules\n#PenaltyBreakAssignment: 10 # Unknown to clang-format-4.0\nPenaltyBreakBeforeFirstCallParameter: 30\nPenaltyBreakComment: 10\nPenaltyBreakFirstLessLess: 0\nPenaltyBreakString: 10\nPenaltyExcessCharacter: 100\nPenaltyReturnTypeOnItsOwnLine: 60\n\nPointerAlignment: Right\nReflowComments: false\nSortIncludes: false\n#SortUsingDeclarations: false # Unknown to clang-format-4.0\nSpaceAfterCStyleCast: false\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\n#SpaceBeforeCtorInitializerColon: true # Unknown to clang-format-5.0\n#SpaceBeforeInheritanceColon: true # Unknown to clang-format-5.0\nSpaceBeforeParens: ControlStatements\n#SpaceBeforeRangeBasedForLoopColon: true # Unknown to clang-format-5.0\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles: false\nSpacesInContainerLiterals: false\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard: Cpp03\nTabWidth: 8\nUseTab: Always\n...\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5927734375,
          "content": "*.o\n*.a\n*.so\n.idea/\n.init\n*.swp\n.conf.example\n.logrotate\n.vscode/\nsources/odyssey\nsources/build.h\nstress/odyssey_stress\ntest/odyssey_test\ntest/odyssey/data\nthird_party/machinarium/sources/build.h\nthird_party/machinarium/benchmark/benchmark_csw\nthird_party/machinarium/benchmark/benchmark_csw2\nthird_party/machinarium/benchmark/benchmark_channel\nthird_party/machinarium/benchmark/benchmark_channel_shared\nbuild/\nbuild-asan/\ncmake-build-debug/\ntest/shell-test/odyssey\ntmp/\ntest/ody_integration_test/main\ndocker/bin/odyssey\ndocker/bin/odyssey-asan\nodyssey.conf.example\nodyssey.init\nodyssey.logrotate\n.DS_Store\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.2783203125,
          "content": "The following authors have created the source code of \"Odyssey\"\npublished and distributed by YANDEX LLC as the owner:\n\nDmitry Simonenko <pmwkaa@yandex-team.ru>\nDmitry Sarafannikov <dsarafan@yandex-team.ru>\nEvgeniy Efimkin <efimkin@yandex-team.ru>\nAndrey Borodin <x4mmm@yandex-team.ru>\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 7.689453125,
          "content": "cmake_minimum_required(VERSION 3.10)\n\nproject(odyssey C)\n\nset(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH}\n    ${CMAKE_CURRENT_SOURCE_DIR}/cmake)\n\nset(CLANGCOMPILERSTANDART gnu11)\n\nset(OD_VERSION_GIT $ENV{VERSION})\nif (\"${OD_VERSION_GIT}\" STREQUAL \"\")\n    execute_process(COMMAND git describe --always\n                    OUTPUT_VARIABLE OD_VERSION_GIT\n                    RESULT_VARIABLE OD_VERSION_GIT_RESULT\n                    OUTPUT_STRIP_TRAILING_WHITESPACE\n                    ERROR_QUIET)\n    \n    if(NOT \"${OD_VERSION_GIT_RESULT}\" STREQUAL \"0\")\n        add_definitions(-DOD_VERSION_GIT=\"unknown\")\n    else()\n        add_definitions(-DOD_VERSION_GIT=\"${OD_VERSION_GIT}\")\n    endif()\nelse()\n    add_definitions(-DOD_VERSION_GIT=\"${OD_VERSION_GIT}\")\nendif()\n\nset(OD_VERSION_NUMBER $ENV{BUILD_NUMBER})\nif (\"${OD_VERSION_NUMBER}\" STREQUAL \"\")\n\n    execute_process(COMMAND git rev-list --count HEAD\n                    OUTPUT_VARIABLE OD_VERSION_NUMBER\n                    RESULT_VARIABLE OD_VERSION_NUMBER_RESULT\n                    OUTPUT_STRIP_TRAILING_WHITESPACE\n                    ERROR_QUIET)\n\n    if(NOT \"${OD_VERSION_NUMBER_RESULT}\" STREQUAL \"0\")\n        add_definitions(-DOD_VERSION_NUMBER=\"unknown\")\n    else()\n        add_definitions(-DOD_VERSION_NUMBER=\"${OD_VERSION_NUMBER}\")\n    endif()\nelse()\n    add_definitions(-DOD_VERSION_NUMBER=\"${OD_VERSION_NUMBER}\")\nendif()\n\nexecute_process(COMMAND ${CMAKE_C_COMPILER} --version\n        OUTPUT_VARIABLE OD_COMPILER_VERSION\n        RESULT_VARIABLE OD_COMPILER_VERSION_RESULT\n        OUTPUT_STRIP_TRAILING_WHITESPACE\n        ERROR_QUIET)\n\n\nset(OD_DEVEL_LVL -1)\n\nif (\"${CMAKE_BUILD_TYPE}\" STREQUAL \"\")\n        set(CMAKE_BUILD_TYPE \"Debug\")\n        set(OD_DEVEL_LVL 1)\nendif()\nif (\"${CMAKE_BUILD_TYPE}\" STREQUAL \"Release\")\n        set(CMAKE_C_FLAGS \"-std=${CLANGCOMPILERSTANDART} -pedantic -Wall -Wextra -Wstrict-aliasing -g -O2 -pthread -D_GNU_SOURCE\")\n        set(OD_DEVEL_LVL -1)\nelseif(\"${CMAKE_BUILD_TYPE}\" STREQUAL \"Debug\")\n        set(CMAKE_C_FLAGS \"-std=${CLANGCOMPILERSTANDART} -pedantic -Wall -Wextra -Wstrict-aliasing -g -O0 -pthread -D_GNU_SOURCE -DLDAP_DBG\")\n        set(OD_DEVEL_LVL 1)\nelseif(\"${CMAKE_BUILD_TYPE}\" STREQUAL \"ASAN\")\n        set(CMAKE_C_FLAGS \"-std=${CLANGCOMPILERSTANDART} -g -fsanitize=address,undefined,leak -fno-sanitize-recover=all -fno-omit-frame-pointer -pedantic -Wall -Wextra -Wstrict-aliasing -g -O0 -pthread -D_GNU_SOURCE\")\nelseif(\"${CMAKE_BUILD_TYPE}\" STREQUAL \"TSAN\")\n        set(CMAKE_C_FLAGS \"-std=${CLANGCOMPILERSTANDART} -g -fsanitize=thread -fno-sanitize-recover=all -fno-omit-frame-pointer -pedantic -Wall -Wextra -Wstrict-aliasing -g -O0 -pthread -D_GNU_SOURCE\")\nendif()\n\nset(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${CC_FLAGS}\")\n\nstring(TOLOWER ${CMAKE_BUILD_TYPE} OD_VERSION_BUILD)\nadd_definitions(-DOD_VERSION_BUILD=\"${OD_VERSION_BUILD}\")\n\nset(CMAKE_THREAD_PREFER_PTHREAD TRUE)\nfind_package(Threads REQUIRED)\n\nadd_custom_target(build_libs)\nset(od_libraries \"rt\")\n\n# debian build\noption(BUILD_DEBIAN \"Enable Debian Build\" OFF)\nif (BUILD_DEBIAN)\n    include(BuildDebian)\nendif()\n\n# postgresql\nfind_package(PostgreSQL REQUIRED)\n\nset(od_libraries ${od_libraries} ${POSTGRESQL_LIBRARY} ${POSTGRESQL_LIBPGPORT} ${PQ_LIBRARY})\ninclude_directories(${POSTGRESQL_INCLUDE_DIR})\n\nset(OPENSSL_INCLUDE_DIR $ENV{OPENSSL_INCLUDE_DIR})\nset(OPENSSL_LIBRARIES $ENV{OPENSSL_LIBRARIES})\nset(OPENSSL_VERSION $ENV{OPENSSL_VERSION})\n\n# use BoringSSL or OpenSSL\noption(USE_BORINGSSL \"Use BoringSSL\" OFF)\nif (USE_BORINGSSL)\n    find_package(BoringSSL REQUIRED)\n    if (BORINGSSL_FOUND)\n        set(od_ssl ${BORINGSSL_LIBRARIES})\n        include_directories(${BORINGSSL_INCLUDE_DIR})\n    endif ()\nelseif (\"${OPENSSL_LIBRARIES}\" STREQUAL \"\")\n    find_package(OpenSSL REQUIRED)\n    set(od_ssl ${OPENSSL_LIBRARIES})\n    include_directories(${OPENSSL_INCLUDE_DIR})\n    add_definitions(-DUSE_SSL)\nelse ()\t\n    set(od_ssl ${OPENSSL_LIBRARIES})\n    include_directories(${OPENSSL_INCLUDE_DIR})\n    add_definitions(-DUSE_SSL)\nendif ()\n\n# use PAM\nfind_package(PAM)\nif (PAM_FOUND)\n    set(od_pam ${PAM_LIBRARY})\n    include_directories(${PAM_INCLUDE_DIR})\nendif()\n\nset(od_libraries ${od_libraries} ${od_pam})\n\n# use LDAP\nfind_package(LDAP)\nif (LDAP_FOUND)\n    set(od_ldap ${LDAP_LIBRARY})\n    include_directories(${LDAP_INCLUDE_DIR})\nendif()\n\nset(od_libraries ${od_libraries} ${od_ldap})\n\n# use Prom\nfind_package(Prom)\n\nif (PROMHTTP_FOUND)\n    set(od_promhttp ${PROMHTTP_LIBRARY})\n    include_directories(${PROMHTTP_INCLUDE_DIR})\nendif()\n\nset(od_libraries ${od_libraries} ${od_promhttp})\n\n\nif (PROM_FOUND)\n    set(od_prom ${PROM_LIBRARY})\n    include_directories(${PROM_INCLUDE_DIR})\nendif()\n\nset(od_libraries ${od_libraries} ${od_prom})\n\n#scram\n\nif (USE_SCRAM)\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -DUSE_SCRAM\")\nendif()\n\n#compression\noption(BUILD_COMPRESSION \"Build with compression support\" OFF)\nif(BUILD_COMPRESSION)\n    set(compression_libraries \"\")\n    add_definitions(-DMM_BUILD_COMPRESSION)\n    # use zstd\n    find_package(Zstd)\n    if(ZSTD_FOUND)\n        include_directories(${ZSTD_INCLUDE_DIR})\n        set(compression_libraries ${compression_libraries} ${ZSTD_LIBRARY})\n        add_definitions(-DMM_HAVE_ZSTD)\n    endif()\n\n    # use zlib\n    find_package(ZLIB)\n    if(ZLIB_FOUND)\n        include_directories(${ZLIB_INCLUDE_DIRS})\n        set(compression_libraries ${compression_libraries} ${ZLIB_LIBRARIES})\n        add_definitions(-DMM_HAVE_ZLIB)\n    endif()\nendif()\n\n# machinarium\ninclude(BuildMachinarium)\nbuild_machinarium()\nset(od_libraries ${od_libraries} ${MACHINARIUM_LIBRARIES} ${od_ssl} \"dl\")\ninclude_directories(${MACHINARIUM_INCLUDE_DIRS})\n\n# kiwi\ninclude(BuildKiwi)\nbuild_kiwi()\nset(od_libraries ${od_libraries} ${KIWI_LIBRARIES})\ninclude_directories(${KIWI_INCLUDE_DIRS})\n\n\nmessage(STATUS \"\")\nmessage(STATUS \"Odyssey (version: ${OD_VERSION_NUMBER}-${OD_VERSION_GIT}-${OD_VERSION_BUILD})\")\nmessage(STATUS \"\")\nmessage(STATUS \"using compiler:         ${CMAKE_C_COMPILER} version \n${OD_COMPILER_VERSION}\")\nmessage(STATUS \"c lang standard:        ${CLANGCOMPILERSTANDARD}\")\nmessage(STATUS \"                                                                          \")\nmessage(STATUS \"CMAKE_BUILD_TYPE:       ${CMAKE_BUILD_TYPE}\")\nmessage(STATUS \"BUILD_DEBIAN:           ${BUILD_DEBIAN}\")\nmessage(STATUS \"POSTGRESQL_INCLUDE_DIR: ${POSTGRESQL_INCLUDE_DIR}\")\nmessage(STATUS \"POSTGRESQL_LIBRARY:     ${POSTGRESQL_LIBRARY}\")\nmessage(STATUS \"POSTGRESQL_LIBPGPORT:   ${POSTGRESQL_LIBPGPORT}\")\nmessage(STATUS \"PG_VERSION_NUM:         ${PG_VERSION_NUM}\")\nmessage(STATUS \"PQ_LIBRARY:             ${PQ_LIBRARY}\")\nmessage(STATUS \"USE_BORINGSSL:          ${USE_BORINGSSL}\")\nmessage(STATUS \"BORINGSSL_ROOT_DIR:     ${BORINGSSL_ROOT_DIR}\")\nmessage(STATUS \"BORINGSSL_INCLUDE_DIR:  ${BORINGSSL_INCLUDE_DIR}\")\nmessage(STATUS \"OPENSSL_VERSION:        ${OPENSSL_VERSION}\")\nmessage(STATUS \"OPENSSL_ROOT_DIR:       ${OPENSSL_ROOT_DIR}\")\nmessage(STATUS \"OPENSSL_INCLUDE_DIR:    ${OPENSSL_INCLUDE_DIR}\")\nmessage(STATUS \"OPENSSL_LIBRARIES:      ${OPENSSL_LIBRARIES}\")\n\nif (PAM_FOUND)\n    message(STATUS \"PAM_LIBRARY:            ${PAM_LIBRARY}\")\n    message(STATUS \"PAM_INCLUDE_DIR:        ${PAM_INCLUDE_DIR}\")\nendif()\n\n\nmessage(STATUS \"USE_SCRAM:              ${USE_SCRAM}\")\n\n    \nmessage(STATUS \"BUILD_COMPRESSION:      ${BUILD_COMPRESSION}\")\nif (BUILD_COMPRESSION)\n    message(STATUS \"ZSTD_INCLUDE_DIR:       ${ZSTD_INCLUDE_DIR}\")\n    message(STATUS \"ZSTD_LIBRARY:           ${ZSTD_LIBRARY}\")\n    message(STATUS \"ZLIB_INCLUDE_DIRS:      ${ZLIB_INCLUDE_DIRS}\")\n    message(STATUS \"ZLIB_LIBRARIES:         ${ZLIB_LIBRARIES}\")\nendif()\n\n    message(STATUS \"LDAP_SUPPORT:           ${LDAP_FOUND}\")\nif (LDAP_FOUND)\n    message(STATUS \"LDAP_LIBRARY:           ${LDAP_LIBRARY}\")\n    message(STATUS \"LDAP_INCLUDE_DIR:       ${LDAP_INCLUDE_DIR}\")\nendif()\n\nadd_subdirectory(sources)\nadd_subdirectory(test)\nadd_subdirectory(stress)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.42578125,
          "content": "\nCopyright (C) 2018 YANDEX LLC\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list\nof conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this\nlist of conditions and the following disclaimer in the documentation and/or other\nmaterials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors may\nbe used to endorse or promote products derived from this software without specific\nprior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY\nEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\nOF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL\nTHE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT\nOF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\nTORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 3.14453125,
          "content": "BUILD_TEST_DIR=build\nBUILD_REL_DIR=build\nBUILD_TEST_ASAN_DIR=build\nODY_DIR=$(PWD)\nTMP_BIN:=$(ODY_DIR)/tmp\n\nFMT_BIN:=clang-format-18\nCMAKE_BIN:=cmake\n\nSKIP_CLEANUP_DOCKER:=\n\nCMAKE_FLAGS:=-DCC_FLAGS=\"-Wextra -Wstrict-aliasing\" -DUSE_SCRAM=YES\nBUILD_TYPE=Release\n\nDEV_CONF=./config-examples/odyssey-dev.conf\n\nCONCURRENCY:=1\nOS:=$(shell uname -s)\nifeq ($(OS), Linux)\n\tCONCURRENCY:=$(shell nproc)\nendif\nifeq ($(OS), Darwin)\n\tCONCURRENCY:=$(shell sysctl -n hw.logicalcpu')\nendif\n\n.PHONY: clean apply_fmt\n\nclean:\n\trm -fr $(TMP_BIN)\n\trm -fr $(BUILD_REL_DIR)\n\trm -fr $(BUILD_TEST_DIR)\n\trm -fr $(BUILD_TEST_ASAN_DIR)\n\nlocal_build: clean\n\t+$(CMAKE_BIN) -S $(ODY_DIR) -B$(BUILD_TEST_DIR) -DCMAKE_BUILD_TYPE=$(BUILD_TYPE) $(CMAKE_FLAGS)\n\t+make -C$(BUILD_TEST_DIR) -j$(CONCURRENCY)\n\nlocal_run: \n\t$(BUILD_TEST_DIR)/sources/odyssey $(DEV_CONF)\n\nconsole_run: \n\t$(BUILD_TEST_DIR)/sources/odyssey $(DEV_CONF) --verbose --console --log_to_stdout\n\nfmt:\n\tdocker build -f docker/format/Dockerfile --tag=odyssey/clang-format-runner .\n\tdocker run -v .:/odyssey:ro odyssey/clang-format-runner modules sources stress test third_party\n\nformat:\n\tdocker build -f docker/format/Dockerfile --tag=odyssey/clang-format-runner .\n\tdocker run --user=`stat -c \"%u:%g\" .` -v .:/odyssey:rw odyssey/clang-format-runner -i modules sources stress test third_party\n\napply_fmt:\n\tfor d in sources test third_party stress modules ; do \\\n\t\tfind $$d -maxdepth 5 -iname '*.h' -o -iname '*.c'  | xargs -n 1 -t -P $(CONCURRENCY) $(FMT_BIN) -i ; \\\n\tdone\n\nbuild_asan:\n\trm -rf $(BUILD_TEST_ASAN_DIR)\n\tmkdir -p $(BUILD_TEST_ASAN_DIR)\n\tcd $(BUILD_TEST_ASAN_DIR) && $(CMAKE_BIN) -DCMAKE_BUILD_TYPE=ASAN $(ODY_DIR) $(CMAKE_FLAGS) && make -j$(CONCURRENCY)\n\nbuild_release:\n\trm -rf $(BUILD_REL_DIR)\n\tmkdir -p $(BUILD_REL_DIR)\n\tcd $(BUILD_REL_DIR) && $(CMAKE_BIN) -DCMAKE_BUILD_TYPE=Release $(ODY_DIR) $(CMAKE_FLAGS) && make -j$(CONCURRENCY)\n\nbuild_dbg:\n\trm -rf $(BUILD_TEST_DIR)\n\tmkdir -p $(BUILD_TEST_DIR)\n\tcd $(BUILD_TEST_DIR) && $(CMAKE_BIN) -DCMAKE_BUILD_TYPE=Debug -DUSE_SCRAM=YES $(ODY_DIR) && make -j$(CONCURRENCY)\n\ngdb: build_dbg\n\tgdb --args ./build/sources/odyssey $(DEV_CONF)  --verbose --console --log_to_stdout\n\nrun_test:\n\t# change dir, test would not work with absolute path\n\t./cleanup-docker.sh\n\tODYSSEY_TEST_BUILD_TYPE=build_release docker compose -f ./docker-compose-test.yml up --exit-code-from odyssey\n\nrun_test_asan:\n\t./cleanup-docker.sh\n\tODYSSEY_TEST_BUILD_TYPE=build_asan docker compose -f ./docker-compose-test.yml up --exit-code-from odyssey\n\nsubmit-cov:\n\tmkdir cov-build && cd cov-build\n\t$(COV-BIN-PATH)/cov-build --dir cov-int make -j 4 && tar czvf odyssey.tgz cov-int && curl --form token=$(COV_TOKEN) --form email=$(COV_ISSUER) --form file=@./odyssey.tgz --form version=\"2\" --form description=\"scalable potgresql connection pooler\"  https://scan.coverity.com/builds\\?project\\=yandex%2Fodyssey\n\n\nBUILD_VERSION:=\nBUILD_NUM:=\n\nbuild-docker-pkg:\n\tdocker build -f ./docker/dpkg/Dockerfile . --tag odybuild:1.0 && docker run -e VERSION=$(BUILD_VERSION) -e BUILD_NUMBER=$(BUILD_NUM) odybuild:1.0\n\nprefix = /usr/local\n\ninstall:\n\tinstall -D build/sources/odyssey  $(DESTDIR)$(prefix)/bin/odyssey\n\nstart-dev-env:\n\tdocker compose build dev\n\tdocker compose up -d dev\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.0703125,
          "content": "<p align=\"center\">\n\t<img src=\"documentation/odyssey.png\" width=\"35%\" height=\"35%\" /><br>\n</p>\n<br>\n\n## Odyssey\n\nAdvanced multi-threaded PostgreSQL connection pooler and request router.\n\n#### Project status\n\nOdyssey is production-ready, it is being used in large production setups. We appreciate any kind of feedback and contribution to the project.\n\n<a href=\"https://scan.coverity.com/projects/yandex-odyssey\">\n  <img alt=\"Coverity Scan Build Status\"\n       src=\"https://scan.coverity.com/projects/20374/badge.svg\"/>\n</a>\n\n### Design goals and main features\n\n#### Multi-threaded processing\n\nOdyssey can significantly scale processing performance by\nspecifying a number of additional worker threads. Each worker thread is\nresponsible for authentication and proxying client-to-server and server-to-client\nrequests. All worker threads are sharing global server connection pools.\nMulti-threaded design plays important role in `SSL/TLS` performance.\n\n#### Advanced transactional pooling\n\nOdyssey tracks current transaction state and in case of unexpected client\ndisconnection can emit automatic `Cancel` connection and do `Rollback` of\nabandoned transaction, before putting server connection back to\nthe server pool for reuse. Additionally, last server connection owner client\nis remembered to reduce a need for setting up client options on each\nclient-to-server assignment.\n\n#### Better pooling control\n\nOdyssey allows to define connection pools as a pair of `Database` and `User`.\nEach defined pool can have separate authentication, pooling mode and limits settings.\n\n#### Authentication\n\nOdyssey has full-featured `SSL/TLS` support and common authentication methods\nlike: `md5` and `clear text` both for client and server authentication. \nOdyssey supports PAM & LDAP authentication, this methods operates similarly to `clear text` auth except that it uses \nPAM/LDAP to validate user name/password pairs. PAM optionally checks the connected remote host name or IP address.\nAdditionally it allows to block each pool user separately.\n\n#### Logging\n\nOdyssey generates universally unique identifiers `uuid` for client and server connections.\nAny log events and client error responses include the id, which then can be used to\nuniquely identify client and track actions. Odyssey can save log events into log file and\nusing system logger.\n\n### CLI\n\nOdyssey supports multiple command line options. Use `/path/to/odyssey --help` to see more\n\n#### Architecture and internals\n\nOdyssey has sophisticated asynchronous multi-threaded architecture which\nis driven by custom made coroutine engine: [machinarium](https://github.com/yandex/odyssey/tree/master/third_party/machinarium).\nMain idea behind coroutine design is to make event-driven asynchronous applications to look and feel\nlike being written in synchronous-procedural manner instead of using traditional\ncallback approach.\n\nOne of the main goal was to make code base understandable for new developers and\nto make an architecture easily extensible for future development.\n\nMore information: [Architecture and internals](documentation/internals.md).\n\n#### Build instructions\n\nCurrently Odyssey runs only on Linux. Supported platforms are x86/x86_64.\n\nTo build you will need:\n\n* cmake >= 3.12.4\n* gcc >= 4.6\n* openssl\n* postgresql-server-dev-13\n* pg_config utility is in the PATH\n\n```sh\ngit clone git://github.com/yandex/odyssey.git\ncd odyssey\nmake local_build\n```\nAdapt odyssey-dev.conf then:\n```sh\nmake local_run\n```\n\nAlternatively:\n```sh\nmake console_run\n```\n\n#### Use docker environment for development (helpful for Mac users)\n```sh\nmake start-dev-env\n```\nSet up your CLion to build project in container, [manual](https://github.com/shuhaoliu/docker-clion-dev/blob/master/README.md).\n\n### Configuration reference\n\n##### Service\n\n* [include](documentation/configuration.md#include-string)\n* [daemonize](documentation/configuration.md#daemonize-yesno)\n* [sequential\\_routing](documentation/configuration.md#sequential_routing-yesno)\n* [priority](documentation/configuration.md#priority-integer)\n* [pid\\_file](documentation/configuration.md#pid_file-string)\n* [unix\\_socket\\_dir](documentation/configuration.md#unix_socket_dir-string)\n* [unix\\_socket\\_mode](documentation/configuration.md#unix_socket_mode-string)\n\n##### Logging\n\n* [log\\_file](documentation/configuration.md#log_file-string)\n* [log\\_format](documentation/configuration.md#log_format-string)\n* [log\\_to\\_stdout](documentation/configuration.md#log_to_stdout-yesno)\n* [log\\_syslog](documentation/configuration.md#log_syslog-yesno)\n* [log\\_syslog\\_ident](documentation/configuration.md#log_syslog_ident-string)\n* [log\\_syslog\\_facility](documentation/configuration.md#log_syslog_facility-string)\n* [log\\_debug](documentation/configuration.md#log_debug-yesno)\n* [log\\_config](documentation/configuration.md#log_config-yesno)\n* [log\\_session](documentation/configuration.md#log_session-yesno)\n* [log\\_query](documentation/configuration.md#log_query-yesno)\n* [log\\_stats](documentation/configuration.md#log_stats-yesno)\n* [stats\\_interval](documentation/configuration.md#stats_interval-integer)\n\n##### Performance\n\n* [workers](documentation/configuration.md#workers-integer)\n* [resolvers](documentation/configuration.md#resolvers-integer)\n* [readahead](documentation/configuration.md#readahead-integer)\n* [cache\\_coroutine](documentation/configuration.md#cache_coroutine-integer)\n* [nodelay](documentation/configuration.md#nodelay-yesno)\n* [keepalive](documentation/configuration.md#keepalive-integer)\n* [group\\_checker\\_interval](documentation/configuration.md#group_checker_interval-integer)\n\n##### System\n\n* [coroutine\\_stack\\_size](documentation/configuration.md#coroutine_stack_size-integer)\n\n##### Global limits\n\n* [client\\_max](documentation/configuration.md#client_max-integer)\n\n##### Listen\n\n* [host](documentation/configuration.md#host-string)\n* [port](documentation/configuration.md#port-integer)\n* [backlog](documentation/configuration.md#backlog-integer)\n* [tls](documentation/configuration.md#tls-string)\n* [tls\\_ca\\_file](documentation/configuration.md#tls-string)\n* [tls\\_key\\_file](documentation/configuration.md#tls-string)\n* [tls\\_cert\\_file](documentation/configuration.md#tls-string)\n* [tls\\_protocols](documentation/configuration.md#tls-string)\n* [example](documentation/configuration.md#example)\n\n##### Routing\n\n* [overview](documentation/configuration.md#routing-rules)\n\n##### Storage\n\n* [overview](documentation/configuration.md#storage)\n* [type](documentation/configuration.md#type-string)\n* [host](documentation/configuration.md#host-string-1)\n* [port](documentation/configuration.md#port-integer-1)\n* [tls](documentation/configuration.md#tls-string-1)\n* [tls\\_ca\\_file](documentation/configuration.md#tls-string-1)\n* [tls\\_key\\_file](documentation/configuration.md#tls-string-1)\n* [tls\\_cert\\_file](documentation/configuration.md#tls-string-1)\n* [tls\\_protocols](documentation/configuration.md#tls-string-1)\n* [example](documentation/configuration.md#example-1)\n\n##### Database and user\n\n* [overview](documentation/configuration.md#database-and-user)\n* [authentication](documentation/configuration.md#authentication-string)\n* [password](documentation/configuration.md#password-string)\n* [auth\\_common\\_name](documentation/configuration.md#auth_common_name-defaultstring)\n* [auth\\_query](documentation/configuration.md#auth_query-string)\n* [auth\\_query\\_db](documentation/configuration.md#auth_query-string)\n* [auth\\_query\\_user](documentation/configuration.md#auth_query-string)\n* [auth\\_pam\\_service](documentation/configuration.md#auth\\_pam\\_service-string)\n* [client\\_max](documentation/configuration.md#client_max-integer-1)\n* [storage](documentation/configuration.md#storage-string)\n* [storage\\_db](documentation/configuration.md#storage-string)\n* [storage\\_user](documentation/configuration.md#storage-string)\n* [storage\\_password](documentation/configuration.md#storage-string)\n* [password\\_passthrough](documentation/configuration.md#storage-string)\n* [ldap\\_storage\\_credentials](documentation/configuration.md#ldap\\_storage\\_credentials)\n* [ldap\\_storage\\_credentials\\_attr](documentation/configuration.md#ldap\\_storage\\_credentials\\_attr-string)\n* [ldap\\_endpoint](documentation/configuration.md#ldap\\_endpoint)\n* [ldap\\_endpoint\\_name](documentation/configuration.md#ldap\\_endpoint\\_name-string)\n* [ldap\\_pool\\_ttl](documentation/configuration.md#ldap\\_pool\\_ttl-integer)\n* [pool](documentation/configuration.md#pool-string)\n* [pool\\_size](documentation/configuration.md#pool_size-integer)\n* [pool\\_timeout](documentation/configuration.md#pool_timeout-integer)\n* [pool\\_ttl](documentation/configuration.md#pool_ttl-integer)\n* [pool\\_discard](documentation/configuration.md#pool_discard-yesno)\n* [pool\\_cancel](documentation/configuration.md#pool_cancel-yesno)\n* [pool\\_rollback](documentation/configuration.md#pool_rollback-yesno)\n* [client\\_fwd\\_error](documentation/configuration.md#client_fwd_error-yesno)\n* [log\\_debug](documentation/configuration.md#log_debug-yesno-1)\n* [example](documentation/configuration.md#example-remote)\n* [example console](documentation/configuration.md#example-admin-console)\n\n##### Architecture and Internals\n\n* [overview](documentation/internals.md)\n* [error codes](documentation/internals.md#client-error-codes)\n"
        },
        {
          "name": "benchmarks",
          "type": "tree",
          "content": null
        },
        {
          "name": "cleanup-docker.sh",
          "type": "blob",
          "size": 0.3291015625,
          "content": "#!/bin/bash\n\nset -ex \n\nwhile getopts \"h:s:\" arg; do\n  case $arg in\n    h)\n      echo \"usage\" \n      ;;\n    s)\n      skip=$OPTARG\n      echo $skip\n      ;;\n  esac\ndone\n\n\nif [ -z $skip ]; then\n    docker image ls | grep odyssey | awk '{print $3}' | xargs docker image rm -f || true\n    docker rm $(docker stop $(docker ps -aq)) || true\nfi\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "config-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "debian",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose-test.yml",
          "type": "blob",
          "size": 0.7958984375,
          "content": "version: '3'\n\nservices:\n  odyssey:\n    extra_hosts:\n      - \"ip4-localhost:127.0.0.1\"\n    ulimits:\n      core:\n        soft: -1\n        hard: -1\n    privileged: true\n    build:\n      dockerfile: ./docker/Dockerfile\n      context: .\n      args:\n        odyssey_build_type: \"${ODYSSEY_TEST_BUILD_TYPE:-build_release}\"\n    environment:\n      CMAKE_BUILD_TYPE: \"${CMAKE_BUILD_TYPE:-Debug}\"\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n    networks:\n      od_net:\n        ipv4_address: 192.168.233.15\n\n  openldapr:\n    image: \"osixia/openldap:1.5.0\"\n    networks:\n      od_net:\n        ipv4_address: 192.168.233.16\n\nnetworks:\n  od_net:\n    name: odyssey_od_net\n    driver: bridge\n    ipam:\n      driver: default\n      config:\n       - subnet: 192.168.233.0/24\n         #       - gateway: 192.168.233.1\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.8447265625,
          "content": "version: '3'\n\nservices:\n  odyssey:\n    build:\n      dockerfile: ./docker/Dockerfile\n      context: .\n    environment:\n      CMAKE_BUILD_TYPE: \"${CMAKE_BUILD_TYPE:-Release}\"\n    ports:\n      - \"6432:6432\"\n    volumes:\n      - ./odyssey.conf:/etc/odyssey.conf\n      - ..:/odyssey\n\n  dev:\n    build:\n      dockerfile: ./docker/dev/Dockerfile\n      context: .\n    security_opt: # options needed for gdb debugging\n      - seccomp:unconfined\n      - apparmor:unconfined\n    container_name: odyssey_dev\n    ports:\n      - \"7776:22\"\n      - \"7777:7777\"\n    volumes:\n      - .:/code\n  \n  dpkg:\n    build:\n      dockerfile: ./docker/dpkg/Dockerfile\n      context: .\n    container_name: odyssey_dpkg\n    ports:\n      - \"7778:22\"\n      - \"7779:7777\"\n    volumes:\n      - .:/dpkg\n\n  openldapr:\n     image: \"osixia/openldap:1.5.0\"\n     ports:\n      - \"389:389\"\n      - \"636:636\"\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "odyssey.conf",
          "type": "blob",
          "size": 14.9892578125,
          "content": "###\n### Odyssey configuration file.\n###\n\n#\n# Include files.\n#\n# Include one or more configuration files. Include files can\n# include other files.\n#\n# include \"path\"\n#\n\n###\n### SERVICE\n###\n\n#\n# Start as a daemon.\n#\n# By default Odyssey does not run as a daemon. Set to 'yes' to enable.\n#\ndaemonize no\n\n#\n# Process priority.\n#\n# Set Odyssey parent process and threads priority.\n#\n# priority -10\n\n#\n# Pid file.\n#\n# If pid_file is specified, Odyssey will write its process id to\n# the specified file at startup.\n#\n# pid_file \"/var/run/odyssey.pid\"\n#\n\n#\n# UNIX socket directory.\n#\n# If unix_socket_dir is specified, Odyssey will enable UNIX socket\n# communications. Specified directory path will be used for\n# searching socket files.\n#\nunix_socket_dir \"/tmp\"\n\n#\n# UNIX socket file mode.\n#\n# Set `unix_socket_mode` file mode to any created unix files.\n#\nunix_socket_mode \"0644\"\n\n#\n# Directory to place odyssey internal-used locks\n# Odyssey will use /tmp by default\n#\n\nlocks_dir \"/tmp/odyssey\"\n\n#\n# In this mode odyssey will perform gracefully shutdown \n# when signalled with SIGUSR2: \n# it will not terminate established connections, but do not accept new ones\n#\ngraceful_die_on_errors no\n\n#\n# Online restart feature. \n# When setting to yes, restart odyssey simply with \n# running new version (old one will automatically perform graceful shutdown)\n#\nenable_online_restart no\n\n#\n# UNIX socker SO_REUSEPORT optional enable\n#\n\nbindwith_reuseport no\n\n###\n### LOGGING\n###\n\n#\n# Log file.\n#\n# If log_file is specified, Odyssey will additionally use it to write\n# log events.\n#\n# log_file \"/var/log/odyssey.log\"\n#\n\n#\n# Log text format.\n#\n# Odyssey allows to configure log text format. This could be useful to\n# support external log parser format. Format string can contain plain\n# text, escape symbols and format flags.\n#\n# Supported flags:\n#\n# %n = unixtime\n# %t = timestamp with date\n# %p = process ID\n# %i = client ID\n# %s = server ID\n# %u = user name\n# %d = database name\n# %c = context\n# %l = level (error, warning, debug)\n# %m = message\n# %M = message tskv\n# %r = client port\n# %h = client host\n#\nlog_format \"%p %t %l [%i %s] (%c) %m\\n\"\n\n#\n# Log to stdout.\n#\n# Set to 'yes' if you need to additionally display log output in stdout.\n# Enabled by default.\n#\nlog_to_stdout yes\n\n#\n# Log to system logger.\n#\n# To enable syslog(3) usage, set log_syslog to 'yes'. Additionally set\n# log_syslog_ident and log_syslog_facility.\n#\nlog_syslog no\nlog_syslog_ident \"odyssey\"\nlog_syslog_facility \"daemon\"\n\n#\n# Verbose logging.\n#\n# Enable verbose logging of all events, which will generate a log of\n# detailed information useful for development or testing.\n#\n# It is also possible to enable verbose logging for specific users\n# (see routes section).\n#\nlog_debug no\n\n#\n# Log configuration.\n#\n# Write configuration to the log during start and config reload.\n#\nlog_config yes\n\n#\n# Log session events.\n#\n# Write client connect and disconnect events to the log.\n#\nlog_session yes\n\n#\n# Log client queries.\n#\n# Write client queries text to the log. Disabled by default.\n#\nlog_query no\n\n#\n# Log client statistics.\n#\n# Periodically display information about active routes.\n#\nlog_stats yes\n\n#\n# Statistics update interval.\n#\n# Set interval in seconds for internal statistics update and log report.\n#\nstats_interval 60\n\n#\n# Log stats in Prometheus format.\n#\n# Write stats in Prometheus format in addition to ordinary logs.\n#\n# Enable log general odyssey's log, not related to concrete routes\n#\nlog_general_stats_prom no\n\n#\n# Enable log route related logs\n# Note, this option also turn on general prometheus logging\nlog_route_stats_prom no\n\n#\n# Port for Prometheus metrics http-server to listen\n# Require Prometheus C library and Promhttp library\n# Once port is set and server is started change require restart\n#\n# promhttp_server_port 7777\n\n\n###\n### PERFORMANCE\n###\n\n#\n# Worker threads.\n#\n# Set size of thread pool used for client processing.\n#\n#  1: By default, Odyssey runs with a single worker. This is a special\n#  mode optimized for general use. This mode also made to reduce multi-thread\n#  communication overhead.\n#\n#  N: Add additional worker threads, if your server experience heavy load,\n#  especially using TLS setup.\n#\nworkers 1\n\n#\n# Resolver threads.\n#\n# Number of threads used for DNS resolving. This value can be increased, if\n# your server experience a big number of connecting clients.\n#\nresolvers 1\n\n#\n# IO Readahead.\n#\n# Set size of per-connection buffer used for io readahead operations.\n#\nreadahead 8192\n\n#\n# Coroutine cache size.\n#\n# Set pool size of free coroutines cache. It is a good idea to set\n# this value to a sum of max clients plus server connections. Please note, that\n# each coroutine consumes around `coroutine_stack_size` of memory.\n#\n# Set to zero, to disable coroutine cache.\n#\ncache_coroutine 0\n\n#\n# Coroutine stack size.\n#\n# Set coroutine stack size in pages. In some rare cases\n# it might be necessary to make stack size bigger. Actual stack will be\n# allocated as (`coroutine_stack_size` + 1_guard_page) * page_size.\n# Guard page is used to track stack overflows.\n#\n# 16KB by default.\n#\ncoroutine_stack_size 8\n\n#\n# TCP nodelay.\n#\n# Set to 'yes', to enable nodelay.\n#\nnodelay yes\n\n#\n# TCP keepalive time.\n#\n# Set to zero, to disable keepalive.\n#\nkeepalive 15\n\n#\n# TCP keepalive interval\n#\n\nkeepalive_keep_interval 75\n\n#\n# TCP keepalive probes\n#\n\nkeepalive_probes 9\n\n#\n# TCP user timeout\n#\nkeepalive_usr_timeout 0\n\n###\n### GLOBAL LIMITS\n###\n\n#\n# Global limit of client connections.\n#\n# Comment 'client_max' to disable the limit. On client limit reach, Odyssey will\n# reply with 'too many connections'.\n#\n# client_max 100\n\n#\n# Global limit of client connections concurrently being routed.\n# Client connection is being routed after it is accepted and until it's startup\n# message is read and connection is assigned route to the database. Most of the\n# routing time is occupied with TLS handshake.\n#\n# Unset or zero 'client_max_routing' will set it's value equal to 64 * workers\n#\n# client_max_routing 32\n\n#\n# If server responds with \"Too many clients\" client will wait for server_login_retry milliseconds.\n#\n# server_login_retry\n#\n# 1 by default.\n\n###\n### LISTEN\n###\n\n#\n# Listen section defines listening servers used for accepting\n# incoming client connections.\n#\n# It is possible to define several Listen sections. Odyssey will listen on\n# every specified address port and can use separate TLS settings.\n#\n# Odyssey will fail in case it could not bind on any resolved address.\n#\n\nlisten {\n#\n# \tBind address.\n#\n#\tIf host is not set, Odyssey will try to listen using UNIX socket if\n#\tunix_socket_dir is set.\n#\n\thost \"*\"\n#\n#\tListen port.\n\tport 6432\n#\n#\tTCP listen backlog.\n\tbacklog 128\n#\n#\tTLS support.\n#\n#\tSupported TLS modes:\n#\n#\t\"disable\"     - disable TLS protocol\n#\t\"allow\"       - switch to TLS protocol on request\n#\t\"require\"     - TLS clients only\n#\t\"verify_ca\"   - require valid client certificate\n#\t\"verify_full\" - require valid client certificate\n#\n#\ttls \"disable\"\n#\ttls_ca_file \"\"\n#\ttls_key_file \"\"\n#\ttls_cert_file \"\"\n#\ttls_protocols \"\"\n\n#\n#   Support of PostgreSQL protocol compression (experimental). Set to 'yes' to enable, disabled by default.\n#\n    compression no\n\n#   client_login_timeout\n#   Prevent client stall during routing for more that client_login_timeout milliseconds.\n#   Defaults to 15000.\n}\n\n###\n### ROUTING\n###\n\n#\n# Odyssey allows to define client routing rules by specifying\n# 'database', 'user' and 'storage' sections.\n#\n# On client accept appropriate route is assigned by matching 'database' and\n# 'user' sections, all requests then forwarded to a 'storage'\n# (which is referenced from the 'user' section).\n#\n# Database <name> | default.\n#\n# Defines database name requested by client. Each 'database' section structure\n# consist of a 'user' subsections.\n#\n# A special 'database default' is used, in case when no database is matched.\n#\n# User <name> | default.\n#\n# Defines authentication, pooling and storage settings for\n# requested route.\n#\n# A special 'user default' is used, in case when no user is matched.\n#\n# Storage <name>.\n#\n# Defines server used as a data storage or admin console operations.\n#\n\nstorage \"postgres_server\" {\n#\n#\tStorage type.\n#\n#\t\"remote\" - PostgreSQL server\n#\t\"local\"  - Odyssey (admin console)\n#\n\ttype \"remote\"\n#\n#\tRemote server address.\n#\n#\tIf host is not set, Odyssey will try to connect using UNIX socket if\n#\tunix_socket_dir is set.\n#   Multiple hosts may be specified, separate with comma. Port should be specified\n# \tusing [] braces\n\n\thost \"[localhost]:5432,host1,[192.168.1.1]:5433\"\n#\n#\tDefault remote server port. Odyssey will use this port for remote host connection\n#\tif port was not specified using [] braces.\n#\n\tport 5432\n\n#\n#\tTarget session attrs feature. Odyssey will lookup for primary/standby, depending on \n#\tvalue set. \n#\tPossible values are:\n#\t * read-write - always select host, available for write\n# \t * read-only - never select host, available for write\n#    * any (the default one) - select host randomly\n#\n#   Odyssey will traverse host and execute pg_is_in_recovery against them, to check if\n#\thost is primary or not.\n#\n#\ttarget_session_attrs \"read-write\"\n#\n\n#\n#\tRemote server TLS settings.\n#\n#\ttls \"disable\"\n#\ttls_ca_file \"\"\n#\ttls_key_file \"\"\n#\ttls_cert_file \"\"\n#\ttls_protocols \"\"\n\n#\n#\tGlobal limit of server connections concurrently being routed.\n#\tWe are opening no more than server_max_routing server connections concurrently.\n#\n#\tUnset or zero 'server_max_routing' will set it's value equal to number of workers\n#\n#\tserver_max_routing 4\n\n\n#   Storage lag-polling watchdog\n#\n#   Defines storage lag-polling watchdog options and actually enables cron-like\n#   watchdog for this storage. This routine will execute `watchdog_lag_query` against\n#   storage server and send return value to all routes, to decide, if connecting is desirable \n#   with particular lag value.\n\n\twatchdog {\n\t\tauthentication \"none\"\n\n\t\tstorage \"postgres_server\"\n\t\tstorage_db \"postgres\"\n\t\tstorage_user \"postgres\"\n\t\t\n\t\tpool_routing \"internal\"\n\t\tpool \"transaction\"\n\t\tpool_size 10\n\n\t\tpool_timeout 0\n\t\tpool_ttl 1201\n\t\t\n\t\tlog_debug no\n\n#       Watchdog will execute this query to get underlying server lag. \n#       Consider something like now() - pg_last_xact_replay_timestamp() or \n#       git@github.com:man-brain/repl_mon.git for production  usages\n\t\twatchdog_lag_query \"SELECT TRUNC(EXTRACT(EPOCH FROM NOW())) - 100\"\n\t\twatchdog_lag_interval 10\n\t}\n}\n\ndatabase default {\n\tuser default {\n#\n#\t\tAuthentication method.\n#\n#\t\t\"none\"       \t- authentication turned off\n#\t\t\"block\"      \t- block this user\n#\t\t\"clear_text\" \t- PostgreSQL clear text authentication\n#\t\t\"md5\"        \t- PostgreSQL md5 authentication\n#\t\t\"scram-sha-256\" - PostgreSQL scram-sha-256 authentication\n#\t\t\"cert\"       \t- Compare client certificate Common Name against auth_common_name's\n#\n\t\tauthentication \"none\"\n\n#\n#\t\tAuthentication certificate CN.\n#\n#\t\tSpecify common names to check for \"cert\" authentication method.\n#\t\tIf there are more then one common name is defined, all of them\n#\t\twill be checked until match.\n#\n#\t\tSet 'default' to check for current user.\n#\n#\t\tauth_common_name default\n#\t\tauth_common_name \"test\"\n\n#\n#\t\tAuthentication method password.\n#\n#\t\tDepending on selected method, password can be in plain text or md5 hash.\n#\n#\t\tpassword \"\"\n\n#\n#\t\tAuthentication query.\n#\n#\t\tUse selected 'auth_query_db' and 'auth_query_user' to match a route.\n#\t\tUse matched route server to send 'auth_query' to get username and password needed\n#\t\tto authenticate a client.\n#\n#\t\tauth_query \"SELECT usename, passwd FROM pg_shadow WHERE usename=$1\"\n#\t\tauth_query_db \"\"\n#\t\tauth_query_user \"\"\n\n#\t\tAuthentication PAM.\n#\n#\t\tauth_pam_service \"passwd\"\n\n#\n#\t\tClient connections limit.\n#\n#\t\tComment 'client_max' to disable the limit. On client limit reach, Odyssey will\n#\t\treply with 'too many connections'.\n#\n#\t\tclient_max 100\n\n#\n#\t\tRemote server to use.\n#\n#\t\tBy default route database and user names are used as connection\n#\t\tparameters to remote server. It is possible to override this values\n#\t\tby specifying 'storage_db' and 'storage_user'. Remote server password\n#\t\tcan be set using 'storage_password' field.\n#\n\t\tstorage \"postgres_server\"\n#\t\tstorage_db \"database\"\n#\t\tstorage_user \"test\"\n#\t\tstorage_password \"test\"\n#\n\n#\t\tRemote server auth\n#\t\tpassword_passthrough \"yes\"\n#\t\tBy default odyssey authenticate users itself, but if side auth application is used,\n#\t\tlike LDAP server, PAM module, or custom auth module, sometimes, \n#\t\tinstead of configuring storage_password, it is more convenient to reuse\n#\t\tclient-provided password to perform backend auth. If you set this option to \"yes\"\n#\t\tOdyssey will store client token and use when new server connection is Opened. Anyway, if\n#\t\tyou configure storage_password for route, password_passthrough is essentially ignored\n#\n\n#\n#\t\tServer pool mode.\n#\n#\t\t\"session\"     - assign server connection to a client until it disconnects\n#\t\t\"transaction\" - assign server connection to a client during a transaction lifetime\n#\n\t\tpool \"transaction\"\n\n#\n#\t\tServer pool size.\n#\n#\t\tKeep the number of servers in the pool as much as 'pool_size'.\n#\t\tClients are put in a wait queue, when all servers are busy.\n#\n#\t\tSet to zero to disable the limit.\n#\n\t\tpool_size 0\n\n#\n#\t\tServer pool wait timeout.\n#\n#\t\tTime to wait in milliseconds for an available server.\n#\t\tDisconnect client on timeout reach.\n#\n#\t\tSet to zero to disable.\n#\n\t\tpool_timeout 0\n\n#\n#\t\tServer pool idle timeout.\n#\n#\t\tClose an server connection when it becomes idle for 'pool_ttl' seconds.\n#\n#\t\tSet to zero to disable.\n#\n\t\tpool_ttl 60\n\n#\n#\t\tServer pool parameters discard.\n#\n#\t\tExecute 'DISCARD ALL' and reset client parameters before using server\n#\t\tfrom the pool.\n#\n\t\tpool_discard no\n\n#\n#\t\tServer pool auto-cancel.\n#\n#\t\tStart additional Cancel connection in case if server left with\n#\t\texecuting query. Close connection otherwise.\n#\n\t\tpool_cancel yes\n\n#\n#\t\tServer pool auto-rollback.\n#\n#\t\tExecute 'ROLLBACK' if server left in active transaction.\n#\t\tClose connection otherwise.\n#\n\t\tpool_rollback yes\n\n#\n#       drop stale client connection after this much seconds of idleness, which is not in transaction. 0 means inf (never drop)\n#\n\t\tpool_client_idle_timeout 0 \n\n#\n#       drop client connection in transaction after this much seconds of idleness. 0 means inf (never drop)\n#\n\t\tpool_idle_in_transaction_timeout 0\n \n#\n#\t\tForward PostgreSQL errors during remote server connection.\n#\n\t\tclient_fwd_error yes\n\n#\n#\t\tAdd client host name to application_name parameter\n#\n\n\t\tapplication_name_add_host yes\n\n#\n#       Connect new client to server immediately or wait for first query\n#\n        reserve_session_server_connection yes\n\n#\n#\t\tServer lifetime - maximum number of seconds for a server connection to live. Prevents cache bloat.\n#\t\tDefaults to 3600 (1 hour)\n#\n\n\t\tserver_lifetime 3600\n\n#\n#\t\tEnable verbose mode for a specific route only.\n#\n\t\tlog_debug no\n\n#\t\tCompute quantiles of query and transaction times\n\t\tquantiles \"0.99,0.95,0.5\"\n\t}\n}\n\n\n\n\n###\n### ODYSSEY MODULES \n###\n\n#\n#    You can create your DIY SO file and put here to load on start\n#    Check list of available callback  in module.h\n#\n#    load_module \"/tmp/od_modules/audit_module.so\"\n\n###\n### ADMIN CONSOLE (example)\n###\n\n\n#storage \"local\" {\n#\ttype \"local\"\n#}\n\n#database \"console\" {\n#\tuser default {\n#\t\tauthentication \"none\"\n#       role \"admin\"\n#\t\tpool \"session\"\n#\t\tstorage \"local\"\n#\t}\n#}\n\n\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "sources",
          "type": "tree",
          "content": null
        },
        {
          "name": "stress",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsan-decoder",
          "type": "blob",
          "size": 0.341796875,
          "content": "#!/usr/bin/env perl\n\nuse warnings;\nuse strict;\n\n# usage:\n# ./<program-name> 2>&1 | tsan-decoder\n\nwhile(<STDIN>) {\n    if (/<null> \\((.+)\\+(0x[0-9a-fA-F]+)\\)$/) {\n        my $lineNum = `addr2line -e $1 $2 2>/dev/null`;\n        chomp $lineNum;\n        if ($? == 0) {\n            s/<null> \\($1\\+0x[0-9a-fA-F]+\\)$/$lineNum/;\n        }\n    }\n    print;\n}\n"
        }
      ]
    }
  ]
}