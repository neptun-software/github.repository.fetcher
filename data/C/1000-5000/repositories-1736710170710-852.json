{
  "metadata": {
    "timestamp": 1736710170710,
    "page": 852,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "micronucleus/micronucleus",
      "stars": 1696,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.478515625,
          "content": "*.o\n*.tmp\n*.raw\n*.json\nfirmware/*.bin\ncommandline/littleWire_util.o\ncommandline/micronucleus\ncommandline/micronucleus_lib.o\ncommandline/micronucleus.dSYM\ncommandline/micronucleus.dSYM\ncommandline/opendevice.o\nfirmware/libs-device/osccal.c.lst\nfirmware/main.bin\nfirmware/main.c.lst\nfirmware/main.map\nfirmware/main.o\nfirmware/crt1.o\nfirmware/main.lss\nfirmware/usbdrv/oddebug.c.lst\nfirmware/main.hex\nfirmware/osccalASM.o\nfirmware/usbdrv/oddebug.o\nfirmware/usbdrv/usbdrvasm.o\nfirmware/.vscode/*"
        },
        {
          "name": "Contributing.txt",
          "type": "blob",
          "size": 1.8798828125,
          "content": "Before contributing, please keep in mind the following:\n\n - The development branch of micronucleus is called \"testing\" and contains all\n   the latest changes. You can check it out with \"git checkout testing\" or using\n   a graphical git tools. \n   https://github.com/micronucleus/micronucleus/tree/testing\n \n - Please commit contributions as a pull request to \"testing\" so there is less\n   trouble with merging. \n   \n - Have a look at License.txt\n\n - If you're going to write or change C or Ruby code, read Style Guide.txt\n \n - When writing commit messages, please prefix your message with one of these:\n\t   firmware:\n\t   upgrade:\n\t   commandline:\n\t   ruby:\n\t   tests:\n\t This will help us all understand what your commit is primarily in relation\n\t to when reading through the commit history hunting for specific changes.\n\n - Please clean up your code-base before commits and make sure that the commit \n   relates to the intended changes only. E.g. remnants of spurious edits like\n   randoms spaces or inserted/deleted lines should be avoided unless they are\n   part of intentional refactoring.\n\n - This repository is for source code only. There are some exceptions, but these\n   are mostly legacy and in some cases relate to constraints that existed in the past. \n   If you can contribute by cleaning up, this is highly appreciated!\n\n   Some notes regarding this:\n   - Documentation that is not directly relevant to the bootloader and compiling it\n     should go into the Wiki or elsewhere\n   - Executables should never be part of the repository. Releases are automatically\n     deployed as archives in the github release section.\n   - Currently the hex files are stored in the repository as a legacy. It would be\n     preferable to also build them using a CDCI process. This is work in progress.\n   - All documentation should use standard ASCII or proper markdown.\n   - Platform dependent build scripts should be avoided. \n\n\n"
        },
        {
          "name": "Devices_with_Micronucleus.md",
          "type": "blob",
          "size": 2.7275390625,
          "content": "\n# List of devices with Micronucleus (incomplete) #\n\nMicronucleus is widely used on thousands of open hardware product by different vendors. Please submit a pull request to add your own devices to this list, in case you design new hardware employing the Micronucleus bootloader.\n\nPlease note that Micronucleus is a completely independent project and is not afilliated in any way with the vendors mentioned below.\n\n## ATtiny85 ##\n\n- [Digispark](http://digistump.com/products/1) by [Digistump](digistump.com) - Widely spread tiny USB Developmentboard with Arduino-Support.\n\n- [Olimexino 85](https://www.olimex.com/Products/Duino/AVR/open-source-hardware) by [Olimex](https://www.olimex.com) - Several different devboards fully assembled or as kits with USB interface\n\n- [Usblinky](https://metalab.at/wiki/Usblinky) by [Metalab](https://metalab.at) - Tiny USB controller for WS2812 RGB LEDs.\n\n- [Nanite 85](https://cpldcpu.wordpress.com/2014/04/25/the-nanite-85/) - Smallest useable ATtiny85 devboard. Approximates DIP ATtiny85 form factor.\n\n- [Wattuino Nanite 85](http://www.watterott.com/en/Wattuino-Nanite85) by [Watterott](http://www.watterott.com) - Manufacturable redesign of the Nanite 85\n\n- [BBtech ATtiny85 board](https://www.tindie.com/products/BBTech/attiny85-usb-development-tool-board/) - Well designed ATtiny85 board in Trinket form factor. Discontinued(?)\n\n- [Iteadduino Tiny](http://imall.iteadstudio.com/im130615003.html) by Itead\n\n- [Pro Nano 85](http://www.jayconsystems.com/pro-nano-50v-attiny85.html) by Jaconsystems\n\n- [LaborTageBadge2013](http://www.das-labor.org/wiki/LaborTageBadge2013) - Badge with ATtiny85\n\n- [Franzininho](https://github.com/Franzininho/franzininho-diy-board) - Franzininho designed by Fábio Souza and Thalis Antunes for Arduino Day 2017 at São Paulo / Brazil.\n\n- [TinyStick](https://gitlab.com/nonchip/tinystick) - A simple open source Attiny85 board in a \"usb stick on PCB\" form factor simply exposes ISP and PortB without any onboard LED/button pin hogging. by Kyra 'nonchip' Zimmer\n\n- [ATtami](https://github.com/telavivmakers/at-tami) - using Micronucleus since 2015, for making the 1EU assmbly party.\n\n## ATtiny 841 ##\n\n- [Wattuino Nanite 841](http://www.watterott.com/de/Wattuino-Nanite841) - Extremely small devboard with ATtiny841. Approximates the form factor of a DIP package.\n\n## ATtiny 167 ##\n\n- [Digispark Pro](http://digistump.com/products/109) by [Digistump](digistump.com) - Digispark successor with more I/O and memory\n\n## ATtiny 84 ##\n- [Shinewave](https://github.com/GGreenwood/Shinewave) by [Electric Exploits](http://electricexploits.net/) - USB mods for GameCube controllers\n\n## ATtiny 88 ##\n- [MH Tiny88](http://mh.nodebb.com/topic/47/mh-et-live-tiny88-16-0mhz) - A tiny breakout board with an ATtiny 88. Arduino compatible.\n"
        },
        {
          "name": "License.txt",
          "type": "blob",
          "size": 18.677734375,
          "content": "OBJECTIVE DEVELOPMENT GmbH's V-USB driver software is distributed under the\nterms and conditions of the GNU GPL version 2 or the GNU GPL version 3. It is\nyour choice whether you apply the terms of version 2 or version 3. The full\ntext of GPLv2 is included below. In addition to the requirements in the GPL,\nwe STRONGLY ENCOURAGE you to do the following:\n\n(1) Publish your entire project on a web site and drop us a note with the URL.\nUse the form at http://www.obdev.at/vusb/feedback.html for your submission.\n\n(2) Adhere to minimum publication standards. Please include AT LEAST:\n    - a circuit diagram in PDF, PNG or GIF format\n    - full source code for the host software\n    - a Readme.txt file in ASCII format which describes the purpose of the\n      project and what can be found in which directories and which files\n    - a reference to http://www.obdev.at/vusb/\n\n(3) If you improve the driver firmware itself, please give us a free license\nto your modifications for our commercial license offerings.\n\n\n\n                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n                       59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Library General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\f\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\f\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\f\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\f\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\f\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Library General\nPublic License instead of this License.\n"
        },
        {
          "name": "Readme.md",
          "type": "blob",
          "size": 11.099609375,
          "content": "# Micronucleus V2.6\n\nMicronucleus is a bootloader designed for AVR ATtiny microcontrollers with a minimal usb interface, cross platform libusb-based program upload tool, and a strong emphasis on bootloader compactness. To the authors knowledge this is, by far, the smallest USB bootloader for AVR ATtiny\n\nThe V2.0 release is a complete rewrite of the firmware and offers significant improvements over V1.x:\n\n* Support for the entire ATtiny family instead of only ATtiny85.\n* Much smaller size. All configurations are below 2kb.\n* Interrupt free V-USB: no patching of the user program INT-vector anymore.\n* Faster uploads due to new protocol.\n* Far jmp also allows using ATtinies with more than 8kb flash.\n* Many robustness improvements, such as compatibility to USB hubs and \n   less erratic time out behavior.\n \nDue to the many changes, also the upload tool had to be updated. The V2.0 upload tool is backwards compatible to the V1.X tool, though.\n\nThe last release of the V1.x can be found here: \n\nhttps://github.com/micronucleus/micronucleus/tree/v1.11\n\n# Usage\n\nThe bootloader allows uploading of new firmware via USB. In its usual configuration it is invoked at device reset and will identify to the host computer. If no communication is initiated by the host machine within a given time, the bootloader will time out and enter the user program, if one is present. \n\nFor proper timing, the command line tool should to be started on the host computer _before_ the bootloader is invoked.\n\nWindows machines will need to install the libusb drivers found in the /windows_drivers folder.  Clean Micronucleus devices without uploaded userprogram will not time out and allow sufficient time for proper driver installation. Linux and OS X do not require custom drivers.\n\nWindows 10: Installing unsigned drivers became more difficult in Windows 10. Please use the Zadig driver installer as provided in the /windows_driver_installer folder.\n\nPlease invoke the command line tool with \"micronucleus --help\" for a list of available options.\n\nThe bootloader resides in the same memory as the user program, since the ATtiny series does not support a protected bootloader section. Therefore, special care has to be taken not to overwrite the bootloader if the user program uses the self programming features. The bootloader will patch itself into the reset vector of the user program. No other interrupt vectors are changed.\n\n# Downloads\n\nThe latest release version can be found here:\nhttps://github.com/micronucleus/micronucleus/releases\n\nArchives with snapshots of the latest binaries of commandline tool and firmware can be accessed here:\nhttps://github.com/micronucleus/micronucleus/releases/tag/master-LATEST\n\n\n# Compiling\n\nMicronucleus can be configured to support all devices of the 'classic' ATtiny series, with the exception of the reduced core ATtiny 4/5/9/10/20/40.\n\nTo allow maximum flexibility, micronucleus supports a configuration system. To compile micronucleus with a specific configuration, please invoke the AVR-GCC tool-chain with:\n\n```\n     make CONFIG=<config_name>\n```\n   \n\nThe makefile makes use of the gnu binutils and some unix commands such as 'mv' and 'rm'. If you are using Windows, make sure you have proper binaries installed. For example by using the 'Atmel Studio command prompt' or msys/mingw32.\n\nCurrently, the following configurations are included and tested. Please check the subfolders /firmware/configurations/ for details. \n\n| Configuration | Specificity | Size |\n| :--- | :--- | :--- |\n| t84_default     |   ATtiny84A default configuration     |   1476 bytes |\n| t841_default    |   ATtiny841 default configuration     |   1522 bytes |\n| t45_default     |   ATtiny45  default configuration     |   1510 bytes |\n| t85_default     |   ATtiny85  default configuration     |   1510 bytes |\n| t85_aggressive  |   ATtiny85  smaller size - critical   |   1358 bytes |\n| t88_default     |   ATtiny88  default configuration     |   1432 bytes |\n| t167_default    |   ATtiny167 default (uses xtal)       |   1338 bytes |\n| Nanite841       |   Nanite841 firmware                  |   1546 bytes |\n| m328p_extclock  |   ATMega328p external clock           |   1490 bytes |\n| t4313_default   |   Attiny 4313 default configuration   |   1456 bytes |\n\nPlease note that the configuration \"t85_aggressive\" may be instable under certain circumstances. Please revert to \"t85_default\" if downloading of user programs fails.\n\nPrecompiled hex files of the bootloader can be found in /firmware/releases. The files can be directly programmed using AVRDUDE or other programmers. The folder /firmware/upgrade contains hex files that can be used to upgrade devices with existing version of micronucleus with a newer version. These can be uploaded using an older version micronucleus. \n\nYou can add your own configuration by adding a new folder to /firmware/configurations/. The folder has to contain a customized \"Makefile.inc\" and \"bootloaderconfig.h\". Feel free to supply a pull request if you added and tested a previously unsupported device.\n\nIf changes to the configuration lead to an increase in bootloader size, it may be necessary to change the bootloader start address. Please consult \"Makefile.inc\" for details.\n\nOther make options:\n\n```\n    make CONFIG=<config_name> fuse   \t# Configure fuses\n    make CONFIG=<config_name> flash  \t# Upload the bootloader using AVRDUDE\n```\n \nThere is also an option to disable the reset line and use it as an I/O. While it may seem tempting to use this feature to make an additional I/O pin available on the ATtiny85, we strongly discourage from doing so, as it led to many issues in the past.\n\nPlease _\"make clean\"_ when switching from one configuration to another.\n\n\n# Devices using Micronucleus\n\n\nMicronucleus is widely installed on thousands of open source hardware devices. Please find an incomplete list here: [https://github.com/micronucleus/micronucleus/blob/master/Devices_with_Micronucleus.md](https://github.com/micronucleus/micronucleus/blob/master/Devices_with_Micronucleus.md)\n \n# License\n\nThis project is released under the GPLv2 license. Code uploaded via the bootloader is not subject to any license.\n\nIn addition, we'd like you to consider these points if you intend to sell products using micronucleus:\n\n* Please make your hardware open source. At least the schematic needs to be \n   published according to the license inherited from V-USB.\n   \n* Your documentation should mention Micronucleus and include a link to the \n   main repository ([https://github.com/micronucleus/](https://github.com/micronucleus/))\n   \n* Please do not \"rebrand\" micronucleus by renaming the USB device.\n \n* Feel welcome to submit a pull request to include your product in the\n   \"Devices using Micronucleus\"-list. \n   \n# Changes \n\n* v2.0b  June 6th, 2015\n    This pull request documents changes leading to V2.0: [https://github.com/micronucleus/micronucleus/pull/43](https://github.com/micronucleus/micronucleus/pull/43)\n \n * v2.01 July 26th, 2015\n    This pull request documents changes leading to V2.1: [https://github.com/micronucleus/micronucleus/pull/66](https://github.com/micronucleus/micronucleus/pull/66)\n    - Fixes \"unknown USB device\" issue when devices with <16MHz CPU clock were \n      connected to a USB3.0 port.\n    - Fixes one bug that could lead to a deadlock if no USB was connected \n      while the bootloader was active and noise was injected into the floating D+ input.\n    - D- line is released before the user program is started, instead of pulling it \n      down. This solves various issues where Micronucleus was not recognized after a \n      reset depending on the duration of the reset button activation. Att: This may \n      lead to a \"Unknown device\" pop-up in Windows, if the user program does not have \n      USB functionality itself. \n      \n* v2.02 August 3rd, 2015\n    - Fixes timing bug with Windows 10 USB drivers. Some Win 10 drivers reduce the\n      delay between reset and the first data packet to 20 ms. This led to an issue \n      with osccalASM.S, which did not terminate correctly.\n\n* v2.03 February 13th, 2016\n    - Added page buffer clearing if a new block transfer is initiated. This fixes a \n      critical, but extremely rare bug that could lead to bricking of the\n      device if micronucleus is restarted after an USB error.       \n    - #74 Fixed LED_INIT macro so it only modifies the DDR register bit of the LED.\n      (Thanks @russdill)\n\n* v2.04 Dec 8th, 2018\n    - Merged changed to support ATMega328p by @AHorneffer (#132)    \n    - Idlepolls is now only reset when traffic to the current endpoint is detected.\n      This will let micronucleus timeout also when traffic from other USB devices\n      is present on the bus.\n\n* v2.5 March 5th, 2021\n    - Removed zero in version numbering as it confused some people. The minor version number of \n      this release is 5.\n    - Huge update by @ArminJo addressing many issues especially for ATTinyCore integration:\n      * Improved exit handling for USB_CFG_PULLUP_IOPORTNAME and LED_MODE != ACTIVE_LOW\n      * Convert ISR into function and optimized CRC handling to save further bytes\n      * added code for FAST_EXIT_NO_USB_MS and START_WITHOUT_PULLUP\n      * different MCUSR handling for SAVE_MCUSR\n      * end with usbDeviceConnect(); or usbDeviceDisconnect(); or USBDDR = 0; instead of initHardware();\n      * Remove redundant code in usbdriver to reduce code size.\n    - Automated build system for the command line tool using Github actions thanks to @quinot\n    - Static binaries for MacOS and linux command line tool. Thanks @stonehippo\n    - Increase available user program size by 64 bytes for most implementations\n    - Cumulative minor fixes contributed throughout 2019-2020. Big thanks to everyone!\n    - \"make release\" will now rebuild all release hexfiles. Thanks to @Ho-Ro.\n    - Added new osccal code by @nerdralph, significantly reducing code size and fixing a bug\n      that led to issues when micronucleus was operated on an USB hub together with other\n      low-speed USB devices.\n    \n* v2.6 November 5th, 2021\n    - Added compile flag `STORE_CONFIGURATION_REPLY_IN_RAM`.\n    - Added 2 bytes USB config data for Bootloader feature flags and application version.\n    - Added `--info` flag for micronucleus executable.\n    - Swapped D+ and D- and set `OSCCAL_HAVE_XTAL`for t88 to support MH-ET LIVE Tiny88 boards.\n    \n# Credits\n\nFirmware:\n * Micronucleus V2.6             (c) 2021 Current maintainers: @ArminJo, @cpldcpu\n * Micronucleus V2.04            (c) 2019 Current maintainers: @cpldcpu, @AHorneffer\n * Micronucleus V2.0x            (c) 2016 Tim Bo\"scke - cpldcpu@gmail.com\n                                 (c) 2014 Shay Green\n * Original Micronucleus         (c) 2012 Jenna Fox\n * Based on USBaspLoader-tiny85  (c) 2012 Louis Beaudoin\n * Based on USBaspLoader         (c) 2007 by OBJECTIVE DEVELOPMENT Software GmbH\n \nCommandline tool:\n * Original commandline tool     (c) 2012 by ihsan Kehribar <ihsan@kehribar.me>\n                                 (c) 2012 Jenna Fox\n * Updates for V2.x              (c) 2014 T. Bo\"scke\n\nSpecial Thanks:\n * Objective Development's great V-USB bitbanging usb driver\n * Embedded Creations' pioneering and inspiring USBaspLoader-tiny85\n * Digistump for motivation and contributing the VID/PID pair\n * Numerous supporters for smaller bug fixes and improvements.\n"
        },
        {
          "name": "Style Guide.txt",
          "type": "blob",
          "size": 1.8935546875,
          "content": "Code under /firmware/, /commandline/, /upgrade/ should be written to conform to:\n\nThe UNSW Computer Science C Styleguide:\n\thttps://wiki.cse.unsw.edu.au/info/CoreCourses/StyleGuide\n\nWith the following additions:\n- Structured Programming rules can (and are frequently) broken because this is\n  often useful in getting code to compile smaller. Returns from inside loops are\n  completely fine.\n- We use spaces for code indentation - two spaces precisely. C Code in these\n  folders should never contain tab characters.\n- Width of lines should be kept under 80 chars where practical. Function calls\n  can be split over multiple lines and have following arguments indented with\n  spaces.\n- Comments on the same line as code are bad.\n- C Preprocessor directives must always be indented with code correctly. Inside\n  a function #if's and #ifdefs are indented along with code, using spaces.\n- Specifically in firmware code, any of the rules can be broken to make code\n  compile smaller, and we don't care about polluting the global namespace with\n  global variables and stuff like that.\n- Anything in a folder called 'usbdrv' is exempt from this style guide\n  -> it follows Objective Development's V-USB style.\n  -> you probably shouldn't be changing stuff in there anyway!\n  -> our usbdrv is hacked with some stuff to handle redirecting PCINT0\n\nOn use of Ruby:\n\nMicronucleus uses ruby code for some little tasks, especially to aid in testing\nand building data for /upgrade/. The stuff in /ruby/ is out of date and doesn't\nwork very well for uploading programs to devices. It isn't as good at recovering\nfrom errors as the commandline tool. It is mainly a legacy thing.\n\nThe Ruby community has a long established style and all Ruby code in this\nrepository should be styled in conformance with that. We use 2-space intents.\n\nWe currently write for and use Ruby 2.0, but all the code should work fine with\nRuby 1.9.2 and above, at the time of writing."
        },
        {
          "name": "commandline",
          "type": "tree",
          "content": null
        },
        {
          "name": "firmware",
          "type": "tree",
          "content": null
        },
        {
          "name": "windows_driver_installer",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}