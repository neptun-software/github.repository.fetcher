{
  "metadata": {
    "timestamp": 1736710153617,
    "page": 820,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "espressif/esp-who",
      "stars": 1741,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 2.986328125,
          "content": "---\nLanguage:        Cpp\nBasedOnStyle:  LLVM\nAccessModifierOffset: -4\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlines: Left\nAlignOperands:   false\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: InlineOnly\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: true\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: true\nBinPackArguments: false\nBinPackParameters: false\nBraceWrapping:\n  AfterCaseLabel:  false\n  AfterClass:      false\n  AfterControlStatement: false\n  AfterEnum:       false\n  AfterFunction:   true\n  AfterNamespace:  false\n  AfterObjCDeclaration: false\n  AfterStruct:     false\n  AfterUnion:      false\n  BeforeCatch:     false\n  BeforeElse:      false\n  IndentBraces:    false\n  SplitEmptyFunction: true\n  SplitEmptyRecord: true\n  SplitEmptyNamespace: true\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Custom\nBreakBeforeInheritanceComma: false\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nBreakConstructorInitializers: AfterColon\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: true\nColumnLimit:     120\nCommentPragmas:  '^ IWYU pragma:'\nCompactNamespaces: false\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: true\nDerivePointerAlignment: false\nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nFixNamespaceComments: true\nForEachMacros:\n  - foreach\n  - Q_FOREACH\n  - BOOST_FOREACH\nIncludeCategories:\n  - Regex:           '^<'\n    Priority:        2\n  - Regex:           '^\".*/'\n    Priority:        5\n  - Regex:           '^\"'\n    Priority:        1\nIncludeIsMainRegex: '(Test)?$'\nIndentCaseLabels: false\nIndentWidth:     4\nIndentWrappedFunctionNames: false\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: false\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBlockIndentWidth: 2\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: true\nPenaltyBreakAssignment: 2\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 1000\nPointerAlignment: Right\nReflowComments:  true\nSortIncludes:    true\nSortUsingDeclarations: true\nSpaceAfterCStyleCast: false\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard:        Cpp11\nTabWidth:        4\nUseTab:          Never"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0791015625,
          "content": "build/\n\nsdkconfig\nsdkconfig.old\n\n.vscode/\n\nmanaged_components/\ndependencies.lock\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.791015625,
          "content": "# See https://pre-commit.com for more information\n# See https://pre-commit.com/hooks.html for more hooks\n\ndefault_stages: [commit]\n\nrepos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.6.0\n    hooks:\n      - id: trailing-whitespace\n        types_or: [c, c++]\n      - id: end-of-file-fixer\n        types_or: [c, c++]\n      - id: check-merge-conflict\n      - id: mixed-line-ending\n        types_or: [c, c++, text]\n        args: ['--fix=lf']\n        description: Forces to replace line ending by the UNIX 'lf' character\n  \n  - repo: https://github.com/psf/black\n    rev: 24.8.0\n    hooks:\n      - id: black\n  \n  - repo: https://github.com/pre-commit/mirrors-clang-format\n    rev: v18.1.8\n    hooks:\n      - id: clang-format\n        types_or: [c++, c, cuda]\n        args: ['--style=file']\n\n\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.958984375,
          "content": "# Change log for esp-who\n\n## 1.0.0\n- Feature of deep learning and image\n    - Basic CNN\n    - PRELU\n    - Softmax\n    - Global pool\n    - Batch normalization\n    - Depthwise convolution\n    - Mobilenet\n    - Quantization\n    - Resize\n    - Crop\n    - NMS\n- Known issues\n    - Recognition the same person while in different background\n    \n\n## 0.9.1\n- Add ip configuration\n- Minor bugfix\n\n## 0.9.0\nRecognition solution for ESP-EYE\n- Support speech wake up\n- Support enrollment face id in flash\n- Bugfix: adjust for AI-Thinker\n\n## 0.6.1\nOpen source face detection and recognition forward process \n- Move forward process in the esp-face repository\n- Update readme\n\n## 0.6.0\nDisplay images via Http\n- Add web server for camera and facial recognition\n- Add some documents for API reference and guide\n\n## 0.5.0\nInitial commit, esp-who appear in the world.\n- Elementry functions such as image processing and matrix computing\n- Face detection\n- Face recognition\n- Components such as camera\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.1591796875,
          "content": " ESPRESSIF MIT License\n \n Copyright (c) 2018 <ESPRESSIF SYSTEMS (SHANGHAI) PTE LTD>\n \n Permission is hereby granted for use on all ESPRESSIF SYSTEMS products, in which case,\n it is free of charge, to any person obtaining a copy of this software and associated\n documentation files (the \"Software\"), to deal in the Software without restriction, including\n without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,\n and/or sell copies of the Software, and to permit persons to whom the Software is furnished\n to do so, subject to the following conditions:\n \n The above copyright notice and this permission notice shall be included in all copies or\n substantial portions of the Software.\n \n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.6123046875,
          "content": "# ESP-WHO [[中文]](./README_CN.md)\n\nESP-WHO is an image processing development platform based on Espressif chips. It contains development examples that may be applied in practical applications.\n\n## Overview\n\nESP-WHO provides examples such as Human Face Detection, Human Face Recognition, Pedestrian Detection etc. You can develop a variety of practical applications based on these examples. ESP-WHO runs on ESP-IDF. [ESP-DL](https://github.com/espressif/esp-dl) provides rich deep learning related interfaces for ESP-WHO, which can be implemented with various peripherals to realize many interesting applications.\n\n## What's new\n1. The repository has been fully refactored. It adapts to the new [ESP-DL](https://github.com/espressif/esp-dl)\n2. New chip [ESP32-P4](https://www.espressif.com/en/products/socs/esp32-p4) is now supported.\n3. Camera and the deep learning model now runs asynchronously, which achieves higher fps.\n4. Add [lvgl](https://lvgl.io/)(Light and Versatile Graphics Library) support, feel free to develop your own graphical applications.\n5. New pedestrian detect model is added.\n\nSome chip such as esp32 and esp32-s2, and examples such as cat face detection, color detection, code recognition is not available in this branch currently, we're still working on them. Old branch can be found here.\n[old ESP-WHO branch](https://github.com/espressif/esp-who/tree/release/v1.1.0)\n\n## What You Need\n\n### Hardware\n\nWe recommend novice developers to use the development boards designed by Espressif. The examples provided by ESP-WHO are developed based on the following Espressif development board, and the corresponding relationships between the development boards and SoC are shown in the table below.\n    \n| Soc               | [ESP32-S3](https://www.espressif.com/en/products/socs/esp32-s3) | [ESP32-P4](https://www.espressif.com/en/products/socs/esp32-p4)             |\n|-------------------|-----------------------------------------------------------------|-----------------------------------------------------------------------------|\n| Development Board | [ESP-S3-EYE](https://www.espressif.com/en/products/devkits)     | [ESP32-P4-Function-EV-Board](https://www.espressif.com/en/products/devkits) |\n\n> Using a development board not mentioned in the table above, configure pins assigned to peripherals manually, such as camera, LCD, and buttons.\n\n### Software\n\n#### Get ESP-IDF\n\n\nESP-WHO runs on [ESP-IDF release/v5.4](https://github.com/espressif/esp-idf/tree/release/v5.4) branch . For details on getting ESP-IDF, please refer to [ESP-IDF Programming Guide](https://idf.espressif.com/).  \n\n#### Get ESP-WHO\n\nRun the following commands in your terminal to download ESP-WHO:\n\n```bash\ngit clone https://github.com/espressif/esp-who.git\n```\n\n## Run Examples\n\nAll examples of ESP-WHO are stored in [examples](./examples) folder. Structure of this folder is shown below:\n\n```bash\n├── examples\n│   ├── human_face_detect       // high fps with esp_lcd only\n│   ├── human_face_detect_lvgl  // slower but with more powerful graphic lib\n│   ├── human_face_recognition  // interact with button(s3) or touch screen(p4)  \n│   │                           // to experience the face recognition demo.\n│   ├── pedestrian_detect\n│   └── pedestrian_detect_lvgl  \n```\n\nFor the development boards mentioned in [Hardware](#Hardware), all examples are available out of the box. To run the examples, you only need to perform [Step 1](#step-1-hardware-connection), [Step 2](#step-2-set-the-target-chip) and [Step 3](#step-4-launch-and-monitor).\n\n\n### Step 1: Hardware connection\n\nIf you are using ESP32-P4-Function-EV-Board, please following the user guide [ESP32-P4 user guide](https://docs.espressif.com/projects/esp-dev-kits/zh_CN/latest/esp32p4/esp32-p4-function-ev-board/user_guide.html) to connect the camera and lcd to the development board.\n\n### Step 2: Set the target chip\n\nOpen the terminal and go to any folder that stores examples (e.g. examples/human_face_detection/lcd). Run the following command to set the target chip: \n\n```bash\nidf.py set-target [SoC]\n```\n\nReplace [SoC] with your target chip, e.g.  esp32s3, esp32p4\n\n\n### Step 3: (Optional) change options in menuconfig\n\nIn addtion to the default configuration, there may be some options in the example that you can modify freely. For more details, read the README.md under the examples.\n\n```bash\nidf.py menuconfig\n```\n\n### Step 4: Launch and monitor\n\nFlash the program and launch IDF Monitor:\n\n```bash\nidf.py flash monitor\n```\n\n## Feedback\n\n\nPlease submit an [issue](https://github.com/espressif/esp-who/issues) if you find any problems using our products, and we will reply as soon as possible.\n"
        },
        {
          "name": "components",
          "type": "tree",
          "content": null
        },
        {
          "name": "default_bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}