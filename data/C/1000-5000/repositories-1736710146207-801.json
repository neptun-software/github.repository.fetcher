{
  "metadata": {
    "timestamp": 1736710146207,
    "page": 801,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "openocd-org/openocd",
      "stars": 1766,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".checkpatch.conf",
          "type": "blob",
          "size": 0.6572265625,
          "content": "# SPDX-License-Identifier: GPL-2.0-or-later\n\n--max-line-length=120\n--tab-size=4\n--show-types\n--strict\n\n--typedefsfile tools/scripts/typedefs.txt\n\n--ignore AVOID_EXTERNS\n--ignore BLOCK_COMMENT_STYLE\n--ignore COMPLEX_MACRO\n--ignore CONST_STRUCT\n--ignore ENOSYS\n--ignore FILE_PATH_CHANGES\n--ignore GERRIT_CHANGE_ID\n--ignore LINE_SPACING\n--ignore LOGICAL_CONTINUATIONS\n--ignore MACRO_WITH_FLOW_CONTROL\n--ignore NEW_TYPEDEFS\n--ignore PARENTHESIS_ALIGNMENT\n--ignore PREFER_DEFINED_ATTRIBUTE_MACRO\n--ignore PREFER_FALLTHROUGH\n--ignore PREFER_KERNEL_TYPES\n--ignore SPLIT_STRING\n--ignore SSCANF_TO_KSTRTO\n--ignore SWITCH_CASE_INDENT_LEVEL\n--ignore TRACING_LOGGING\n--ignore VOLATILE\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.6376953125,
          "content": "# stuff \"git status\" should ignore\n\n# build output\n.libs\n.deps\n.dirstamp\n*.o\n*.o.??????\n*.a\n*.lo\n*.la\n*.in\n\n# coverage files (gcov)\n*.gcda\n*.gcno\n\n# OpenULINK driver files generated by SDCC\nsrc/jtag/drivers/OpenULINK/*.rel\nsrc/jtag/drivers/OpenULINK/*.asm\nsrc/jtag/drivers/OpenULINK/*.lst\nsrc/jtag/drivers/OpenULINK/*.sym\nsrc/jtag/drivers/OpenULINK/*.map\nsrc/jtag/drivers/OpenULINK/*.mem\nsrc/jtag/drivers/OpenULINK/*.lk\nsrc/jtag/drivers/OpenULINK/*.ihx\nsrc/jtag/drivers/OpenULINK/*.rst\n\n# editor files\n*.swp\n\nsrc/startup.tcl\nstartup_tcl.inc\nxscale_debug.inc\n\nbin2char\nbin2char.exe\n\ndoc/openocd.aux\ndoc/openocd.cp\ndoc/openocd.cps\ndoc/openocd.fn\ndoc/openocd.fns\ndoc/openocd.html\ndoc/openocd.info\ndoc/openocd.info-1\ndoc/openocd.info-2\ndoc/openocd.ky\ndoc/openocd.log\ndoc/openocd.pdf\ndoc/openocd.pg\ndoc/openocd.toc\ndoc/openocd.tp\ndoc/openocd.vr\ndoc/version.texi\nsrc/openocd\nsrc/openocd.exe\n\n# configure/autotools output\n/build-aux/\naclocal.m4\nautom4te.cache\nconfig.h\nconfig.log\nconfig.status\nconfigure\ndoxygen\ndoxygen.log\nDoxyfile\nlibtool\nMakefile\n!contrib/loaders/**/Makefile\nstamp-h1\nstamp-vti\nINSTALL\nNOTES\n\n# coexist with quilt\npatches\n*.patch\n\n# Eclipse stuff\n.project\n.cproject\n.settings\n\n# VSCode stuff\n.vscode\n\n# Emacs temp files\n*~\n\n# Emacs TAGS file\nTAGS\n\n# CScope database files\n*cscope.out\n\n# ctags tag files\ntags\n\n# GNU Global tag files\nGPATH\nGRTAGS\nGTAGS\n\n# checkpatch script files\n.checkpatch-camelcase.*\n\n# clangd (e.g. for advanced code completion and linting) generates cache files\n# into .cache\n.cache\n\n# A compile_commands.json can be generated using bear and will help tools such\n# as clangd to locate header files and use correct $CFLAGS\ncompile_commands.json\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.2099609375,
          "content": "[submodule \"jimtcl\"]\n\tpath = jimtcl\n\turl = https://github.com/msteveb/jimtcl.git\n[submodule \"src/jtag/drivers/libjaylink\"]\n\tpath = src/jtag/drivers/libjaylink\n\turl = https://gitlab.zapb.de/libjaylink/libjaylink.git\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 2.43359375,
          "content": "# SPDX-License-Identifier: GPL-2.0-or-later\n# Copyright Marek Vasut <marex@denx.de>\n\n# OpenOCD on Travis CI - https://travis-ci.org/\n\nsudo: required\ndist: bionic\n\narch:\n  - amd64\n  - arm64\n  - ppc64le\n  - s390x\n\naddons:\n  apt:\n    sources:\n      - sourceline: 'ppa:ubuntu-toolchain-r/test'\n      - sourceline: 'deb https://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main'\n        key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'\n    packages:\n      - libftdi-dev\n      - libhidapi-dev\n      - libjaylink-dev\n\nenv:\n  - CC=gcc-9\n  - CC=clang-9\n\nlanguage: c\n\ngit:\n  depth: 1\n  autocrlf: input\n\nscript:\n  - $mingw64 ${CC} --version\n  - $mingw64 env\n  - $mingw64 ./bootstrap\n  - $mingw64 ./configure\n  - $mingw64 make\n\nbefore_install:\n  - |-\n    case $TRAVIS_OS_NAME in\n      linux)\n        sudo apt install ${CC} libusb-1.0-0-dev\n        ;;\n      osx)\n        brew install libtool automake libusb libusb-compat hidapi libftdi\n        ;;\n      windows)\n        [[ ! -f C:/tools/msys64/msys2_shell.cmd ]] && rm -rf C:/tools/msys64\n        choco uninstall -y mingw\n        choco upgrade --no-progress -y msys2\n        export msys2='cmd //C RefreshEnv.cmd '\n        export msys2+='& set MSYS=winsymlinks:nativestrict '\n        export msys2+='& C:\\\\tools\\\\msys64\\\\msys2_shell.cmd -defterm -no-start'\n        export mingw64=\"$msys2 -mingw64 -full-path -here -c \\$\\* --\"\n        export msys2+=\" -msys2 -c \\$\\* --\"\n        $msys2 pacman --sync --noconfirm --needed mingw-w64-x86_64-toolchain autoconf autoconf-archive automake automake-wrapper binutils gcc gettext git libtool m4 make pkg-config tcl texinfo mingw-w64-x86_64-libusb mingw-w64-x86_64-libusb-compat-git mingw-w64-x86_64-libjaylink-git mingw-w64-x86_64-libftdi mingw-w64-x86_64-hidapi mingw-w64-x86_64-clang\n        ## FIXME: Also build for i686?\n        ## Install more MSYS2 packages from https://packages.msys2.org/base here\n        taskkill //IM gpg-agent.exe //F  # https://travis-ci.community/t/4967\n        export PATH=/C/tools/msys64/mingw64/bin:$PATH\n        export MAKE=mingw32-make  # so that Autotools can find it\n        ;;\n    esac\n\nbefore_cache:\n- |-\n    case $TRAVIS_OS_NAME in\n      windows)\n        # https://unix.stackexchange.com/a/137322/107554\n        $msys2 pacman --sync --clean --noconfirm\n        ;;\n    esac\n\ncache:\n    directories:\n    - $HOME/AppData/Local/Temp/chocolatey\n    - /C/tools/msys64\n\nmatrix:\n  include:\n    - os: osx\n      env:\n        - CC=clang\n    - os: windows\n      env:\n        - CC=gcc\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.095703125,
          "content": "Please check the source code files and/or Git history for a list of all authors\nand contributors.\n"
        },
        {
          "name": "AUTHORS.ChangeLog",
          "type": "blob",
          "size": 0.4443359375,
          "content": "drath:Dominic Rath <Dominic.Rath@gmx.de>\nmlu:Magnus Lundin <lundin@mlu.mine.nu>\nmifi:Michael Fischer <fischermi@t-online.de>\nntfreak:Spencer Oliver <spen@spen-soft.co.uk>\nduane:Duane Ellis <openocd@duaneellis.com>\noharboe:Ã˜yvind Harboe <oyvind.harboe@zylin.com>\nkc8apf:Rick Altherr <kc8apf@users.berlios.de>\nzwelch:Zachary T Welch <zw@superlucidity.net>\nvpalatin:Vincent Palatin <vpalatin@users.berlios.de>\nbodylove:Carsten Schlote <schlote@vahanus.net>\n"
        },
        {
          "name": "BUGS",
          "type": "blob",
          "size": 2.4580078125,
          "content": "// This file is part of the Doxygen Developer Manual\n/** @page bugs Bug Reporting\n\nPlease report bugs by subscribing to the OpenOCD mailing list and\nposting a message with your report:\n\n\topenocd-devel@lists.sourceforge.net\n\nAlso, please check the bug database to see if a ticket for\nthe bug has already been opened.  You might be asked to open\nsuch a ticket, or to update an existing ticket with more data.\n\n\thttp://bugs.openocd.org/\n\nTo minimize work for OpenOCD developers, you should try to include\nall of the information listed below.  If you feel that some of the\nitems below are unnecessary for a clear bug report, you may leave\nthem out; likewise, feel free to include additional information\nthat may be important.\n\n- Target PCB/board description\n- Configuration scripts\n- OpenOCD command line\n- List of commands issued or GDB operations performed\n- Expected result\n- Actual result\n- Logs using <code>debug_level 3</code> (or with '-d 3' on the command line)\n- If the report is for a regression:\n  - Include logs for both working and broken versions.\n  - Find the precise version that caused the regression by binary search.\n    You can use \"git bisect\" to expedite this binary search:\n    http://www.kernel.org/pub/software/scm/git/docs/git-bisect.html\n\nIf possible, please develop and attach a patch that helps to expose or\nsolve the reported problem.  See the HACKING file for information\nabout that process.\n\nAttach all files directly to your posting.  The mailing list knows to\ntransform attachments to links, but attachments must be less than 300KB\nin total.\n\n@section bugscrashdump Obtaining Crash Backtraces\n\nIf OpenOCD is crashing, there are two very effective things you can do to\nimprove your chances of getting help on the development mailing list.\n\nTry to reproduce the problem using the dummy JTAG interface to allow other developers to replicate\nyour problem robustly and use GDB to get a trace:@par\n@code\n% OPENOCDSRC/configure --enable-dummy ...\n% openocd -f interface/dummy.cfg -f target/xxx.cfg\n=> SEGFAULT\n% gdb --args openocd ....\n(gdb) run\n(gdb) bt\n=> here a stack trace is dumped.\n@endcode\n\n@section bugsintreedebug Running and Debugging In-Tree\n\nTo run or debug the in-tree executable (not recommended), you must\nuse libtool to set up the correct shared library paths:\n@code\n  libtool gdb --args openocd ....\n@endcode\nor the more pedantic (and forward-compatible):\n@code\n  libtool --mode=execute gdb --args openocd ....\n@endcode\n\n */\n/** @file\nThis file contains the @ref bugs page.\n*/\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 0.353515625,
          "content": "OpenOCD is provided under:\n\n\tSPDX-License-Identifier: GPL-2.0-or-later\n\nBeing under the terms of the GNU General Public License version 2 or\nlater, according with:\n\n\tLICENSES/preferred/GPL-2.0\n\nIn addition, other licenses may also apply. Please see:\n\n\tLICENSES/license-rules.txt\n\nfor more details.\n\nAll contributions to OpenOCD are subject to this COPYING file.\n"
        },
        {
          "name": "ChangeLog",
          "type": "blob",
          "size": 0.0283203125,
          "content": "Retired in favor of git log.\n"
        },
        {
          "name": "Doxyfile.in",
          "type": "blob",
          "size": 61.818359375,
          "content": "# Doxyfile 1.5.8\n\n# This file describes the settings to be used by the documentation system\n# doxygen (www.doxygen.org) for a project\n#\n# All text after a hash (#) is considered a comment and will be ignored\n# The format is:\n#       TAG = value [value, ...]\n# For lists items can also be appended using:\n#       TAG += value [value, ...]\n# Values that contain spaces should be placed between quotes (\" \")\n\n#---------------------------------------------------------------------------\n# Project related configuration options\n#---------------------------------------------------------------------------\n\n# This tag specifies the encoding used for all characters in the config file\n# that follow. The default is UTF-8 which is also the encoding used for all\n# text before the first occurrence of this tag. Doxygen uses libiconv (or the\n# iconv built into libc) for the transcoding. See\n# http://www.gnu.org/software/libiconv for the list of possible encodings.\n\nDOXYFILE_ENCODING      = UTF-8\n\n# The PROJECT_NAME tag is a single word (or a sequence of words surrounded\n# by quotes) that should identify the project.\n\nPROJECT_NAME           = OpenOCD\n\n# The PROJECT_NUMBER tag can be used to enter a project or revision number.\n# This could be handy for archiving the generated documentation or\n# if some version control system is used.\n\nPROJECT_NUMBER         =\n\n# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute)\n# base path where the generated documentation will be put.\n# If a relative path is entered, it will be relative to the location\n# where doxygen was started. If left blank the current directory will be used.\n\nOUTPUT_DIRECTORY       = doxygen\n\n# If the CREATE_SUBDIRS tag is set to YES, then doxygen will create\n# 4096 sub-directories (in 2 levels) under the output directory of each output\n# format and will distribute the generated files over these directories.\n# Enabling this option can be useful when feeding doxygen a huge amount of\n# source files, where putting all generated files in the same directory would\n# otherwise cause performance problems for the file system.\n\nCREATE_SUBDIRS         = NO\n\n# The OUTPUT_LANGUAGE tag is used to specify the language in which all\n# documentation generated by doxygen is written. Doxygen will use this\n# information to generate all constant output in the proper language.\n# The default language is English, other supported languages are:\n# Afrikaans, Arabic, Brazilian, Catalan, Chinese, Chinese-Traditional,\n# Croatian, Czech, Danish, Dutch, Farsi, Finnish, French, German, Greek,\n# Hungarian, Italian, Japanese, Japanese-en (Japanese with English messages),\n# Korean, Korean-en, Lithuanian, Norwegian, Macedonian, Persian, Polish,\n# Portuguese, Romanian, Russian, Serbian, Serbian-Cyrilic, Slovak, Slovene, \n# Spanish, Swedish, and Ukrainian.\n\nOUTPUT_LANGUAGE        = English\n\n# If the BRIEF_MEMBER_DESC tag is set to YES (the default) Doxygen will\n# include brief member descriptions after the members that are listed in\n# the file and class documentation (similar to JavaDoc).\n# Set to NO to disable this.\n\nBRIEF_MEMBER_DESC      = YES\n\n# If the REPEAT_BRIEF tag is set to YES (the default) Doxygen will prepend\n# the brief description of a member or function before the detailed description.\n# Note: if both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the\n# brief descriptions will be completely suppressed.\n\nREPEAT_BRIEF           = YES\n\n# This tag implements a quasi-intelligent brief description abbreviator\n# that is used to form the text in various listings. Each string\n# in this list, if found as the leading text of the brief description, will be\n# stripped from the text and the result after processing the whole list, is\n# used as the annotated text. Otherwise, the brief description is used as-is.\n# If left blank, the following values are used (\"$name\" is automatically\n# replaced with the name of the entity): \"The $name class\" \"The $name widget\"\n# \"The $name file\" \"is\" \"provides\" \"specifies\" \"contains\"\n# \"represents\" \"a\" \"an\" \"the\"\n\nABBREVIATE_BRIEF       =\n\n# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then\n# Doxygen will generate a detailed section even if there is only a brief\n# description.\n\nALWAYS_DETAILED_SEC    = NO\n\n# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all\n# inherited members of a class in the documentation of that class as if those\n# members were ordinary class members. Constructors, destructors and assignment\n# operators of the base classes will not be shown.\n\nINLINE_INHERITED_MEMB  = YES\n\n# If the FULL_PATH_NAMES tag is set to YES then Doxygen will prepend the full\n# path before files name in the file list and in the header files. If set\n# to NO the shortest path that makes the file name unique will be used.\n\nFULL_PATH_NAMES        = NO\n\n# If the FULL_PATH_NAMES tag is set to YES then the STRIP_FROM_PATH tag\n# can be used to strip a user-defined part of the path. Stripping is\n# only done if one of the specified strings matches the left-hand part of\n# the path. The tag can be used to show relative paths in the file list.\n# If left blank the directory from which doxygen is run is used as the\n# path to strip.\n\nSTRIP_FROM_PATH        =\n\n# The STRIP_FROM_INC_PATH tag can be used to strip a user-defined part of\n# the path mentioned in the documentation of a class, which tells\n# the reader which header file to include in order to use a class.\n# If left blank only the name of the header file containing the class\n# definition is used. Otherwise one should specify the include paths that\n# are normally passed to the compiler using the -I flag.\n\nSTRIP_FROM_INC_PATH    =\n\n# If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter\n# (but less readable) file names. This can be useful is your file systems\n# doesn't support long names like on DOS, Mac, or CD-ROM.\n\nSHORT_NAMES            = NO\n\n# If the JAVADOC_AUTOBRIEF tag is set to YES then Doxygen\n# will interpret the first line (until the first dot) of a JavaDoc-style\n# comment as the brief description. If set to NO, the JavaDoc\n# comments will behave just like regular Qt-style comments\n# (thus requiring an explicit @brief command for a brief description.)\n\nJAVADOC_AUTOBRIEF      = YES\n\n# If the QT_AUTOBRIEF tag is set to YES then Doxygen will\n# interpret the first line (until the first dot) of a Qt-style\n# comment as the brief description. If set to NO, the comments\n# will behave just like regular Qt-style comments (thus requiring\n# an explicit \\brief command for a brief description.)\n\nQT_AUTOBRIEF           = NO\n\n# The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make Doxygen\n# treat a multi-line C++ special comment block (i.e. a block of //! or ///\n# comments) as a brief description. This used to be the default behaviour.\n# The new default is to treat a multi-line C++ comment block as a detailed\n# description. Set this tag to YES if you prefer the old behaviour instead.\n\nMULTILINE_CPP_IS_BRIEF = NO\n\n# If the INHERIT_DOCS tag is set to YES (the default) then an undocumented\n# member inherits the documentation from any documented member that it\n# re-implements.\n\nINHERIT_DOCS           = YES\n\n# If the SEPARATE_MEMBER_PAGES tag is set to YES, then doxygen will produce\n# a new page for each member. If set to NO, the documentation of a member will\n# be part of the file/class/namespace that contains it.\n\nSEPARATE_MEMBER_PAGES  = NO\n\n# The TAB_SIZE tag can be used to set the number of spaces in a tab.\n# Doxygen uses this value to replace tabs by spaces in code fragments.\n\nTAB_SIZE               = 4\n\n# This tag can be used to specify a number of aliases that acts\n# as commands in the documentation. An alias has the form \"name=value\".\n# For example adding \"sideeffect=\\par Side Effects:\\n\" will allow you to\n# put the command \\sideeffect (or @sideeffect) in the documentation, which\n# will result in a user-defined paragraph with heading \"Side Effects:\".\n# You can put \\n's in the value part of an alias to insert newlines.\n\nALIASES                =\n\n# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C\n# sources only. Doxygen will then generate output that is more tailored for C.\n# For instance, some of the names that are used will be different. The list\n# of all members will be omitted, etc.\n\nOPTIMIZE_OUTPUT_FOR_C  = YES\n\n# Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java\n# sources only. Doxygen will then generate output that is more tailored for\n# Java. For instance, namespaces will be presented as packages, qualified\n# scopes will look different, etc.\n\nOPTIMIZE_OUTPUT_JAVA   = NO\n\n# Set the OPTIMIZE_FOR_FORTRAN tag to YES if your project consists of Fortran\n# sources only. Doxygen will then generate output that is more tailored for\n# Fortran.\n\nOPTIMIZE_FOR_FORTRAN   = NO\n\n# Set the OPTIMIZE_OUTPUT_VHDL tag to YES if your project consists of VHDL\n# sources. Doxygen will then generate output that is tailored for\n# VHDL.\n\nOPTIMIZE_OUTPUT_VHDL   = NO\n\n# Doxygen selects the parser to use depending on the extension of the files it parses. \n# With this tag you can assign which parser to use for a given extension. \n# Doxygen has a built-in mapping, but you can override or extend it using this tag. \n# The format is ext=language, where ext is a file extension, and language is one of \n# the parsers supported by doxygen: IDL, Java, Javascript, C#, C, C++, D, PHP, \n# Objective-C, Python, Fortran, VHDL, C, C++. For instance to make doxygen treat \n# .inc files as Fortran files (default is PHP), and .f files as C (default is Fortran), \n# use: inc=Fortran f=C\n\nEXTENSION_MAPPING      = no_extension=C\n\n# If you use STL classes (i.e. std::string, std::vector, etc.) but do not want\n# to include (a tag file for) the STL sources as input, then you should\n# set this tag to YES in order to let doxygen match functions declarations and\n# definitions whose arguments contain STL classes (e.g. func(std::string); v.s.\n# func(std::string) {}). This also make the inheritance and collaboration\n# diagrams that involve STL classes more complete and accurate.\n\nBUILTIN_STL_SUPPORT    = NO\n\n# If you use Microsoft's C++/CLI language, you should set this option to YES to\n# enable parsing support.\n\nCPP_CLI_SUPPORT        = NO\n\n# Set the SIP_SUPPORT tag to YES if your project consists of sip sources only.\n# Doxygen will parse them like normal C++ but will assume all classes use public\n# instead of private inheritance when no explicit protection keyword is present.\n\nSIP_SUPPORT            = NO\n\n# For Microsoft's IDL there are propget and propput attributes to indicate getter \n# and setter methods for a property. Setting this option to YES (the default) \n# will make doxygen to replace the get and set methods by a property in the \n# documentation. This will only work if the methods are indeed getting or \n# setting a simple type. If this is not the case, or you want to show the \n# methods anyway, you should set this option to NO.\n\nIDL_PROPERTY_SUPPORT   = NO\n\n# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC\n# tag is set to YES, then doxygen will reuse the documentation of the first\n# member in the group (if any) for the other members of the group. By default\n# all members of a group must be documented explicitly.\n\nDISTRIBUTE_GROUP_DOC   = NO\n\n# Set the SUBGROUPING tag to YES (the default) to allow class member groups of\n# the same type (for instance a group of public functions) to be put as a\n# subgroup of that type (e.g. under the Public Functions section). Set it to\n# NO to prevent subgrouping. Alternatively, this can be done per class using\n# the \\nosubgrouping command.\n\nSUBGROUPING            = YES\n\n# When TYPEDEF_HIDES_STRUCT is enabled, a typedef of a struct, union, or enum\n# is documented as struct, union, or enum with the name of the typedef. So\n# typedef struct TypeS {} TypeT, will appear in the documentation as a struct\n# with name TypeT. When disabled the typedef will appear as a member of a file,\n# namespace, or class. And the struct will be named TypeS. This can typically\n# be useful for C code in case the coding convention dictates that all compound\n# types are typedef'ed and only the typedef is referenced, never the tag name.\n\nTYPEDEF_HIDES_STRUCT   = NO\n\n# The SYMBOL_CACHE_SIZE determines the size of the internal cache use to \n# determine which symbols to keep in memory and which to flush to disk. \n# When the cache is full, less often used symbols will be written to disk. \n# For small to medium size projects (<1000 input files) the default value is \n# probably good enough. For larger projects a too small cache size can cause \n# doxygen to be busy swapping symbols to and from disk most of the time \n# causing a significant performance penality. \n# If the system has enough physical memory increasing the cache will improve the \n# performance by keeping more symbols in memory. Note that the value works on \n# a logarithmic scale so increasing the size by one will rougly double the \n# memory usage. The cache size is given by this formula: \n# 2^(16+SYMBOL_CACHE_SIZE). The valid range is 0..9, the default is 0, \n# corresponding to a cache size of 2^16 = 65536 symbols\n\nSYMBOL_CACHE_SIZE      = 0\n\n#---------------------------------------------------------------------------\n# Build related configuration options\n#---------------------------------------------------------------------------\n\n# If the EXTRACT_ALL tag is set to YES doxygen will assume all entities in\n# documentation are documented, even if no documentation was available.\n# Private class members and static file members will be hidden unless\n# the EXTRACT_PRIVATE and EXTRACT_STATIC tags are set to YES\n\nEXTRACT_ALL            = YES\n\n# If the EXTRACT_PRIVATE tag is set to YES all private members of a class\n# will be included in the documentation.\n\nEXTRACT_PRIVATE        = NO\n\n# If the EXTRACT_STATIC tag is set to YES all static members of a file\n# will be included in the documentation.\n\nEXTRACT_STATIC         = YES\n\n# If the EXTRACT_LOCAL_CLASSES tag is set to YES classes (and structs)\n# defined locally in source files will be included in the documentation.\n# If set to NO only classes defined in header files are included.\n\nEXTRACT_LOCAL_CLASSES  = YES\n\n# This flag is only useful for Objective-C code. When set to YES local\n# methods, which are defined in the implementation section but not in\n# the interface are included in the documentation.\n# If set to NO (the default) only methods in the interface are included.\n\nEXTRACT_LOCAL_METHODS  = NO\n\n# If this flag is set to YES, the members of anonymous namespaces will be\n# extracted and appear in the documentation as a namespace called\n# 'anonymous_namespace{file}', where file will be replaced with the base\n# name of the file that contains the anonymous namespace. By default\n# anonymous namespace are hidden.\n\nEXTRACT_ANON_NSPACES   = NO\n\n# If the HIDE_UNDOC_MEMBERS tag is set to YES, Doxygen will hide all\n# undocumented members of documented classes, files or namespaces.\n# If set to NO (the default) these members will be included in the\n# various overviews, but no documentation section is generated.\n# This option has no effect if EXTRACT_ALL is enabled.\n\nHIDE_UNDOC_MEMBERS     = NO\n\n# If the HIDE_UNDOC_CLASSES tag is set to YES, Doxygen will hide all\n# undocumented classes that are normally visible in the class hierarchy.\n# If set to NO (the default) these classes will be included in the various\n# overviews. This option has no effect if EXTRACT_ALL is enabled.\n\nHIDE_UNDOC_CLASSES     = NO\n\n# If the HIDE_FRIEND_COMPOUNDS tag is set to YES, Doxygen will hide all\n# friend (class|struct|union) declarations.\n# If set to NO (the default) these declarations will be included in the\n# documentation.\n\nHIDE_FRIEND_COMPOUNDS  = NO\n\n# If the HIDE_IN_BODY_DOCS tag is set to YES, Doxygen will hide any\n# documentation blocks found inside the body of a function.\n# If set to NO (the default) these blocks will be appended to the\n# function's detailed documentation block.\n\nHIDE_IN_BODY_DOCS      = NO\n\n# The INTERNAL_DOCS tag determines if documentation\n# that is typed after a \\internal command is included. If the tag is set\n# to NO (the default) then the documentation will be excluded.\n# Set it to YES to include the internal documentation.\n\nINTERNAL_DOCS          = NO\n\n# If the CASE_SENSE_NAMES tag is set to NO then Doxygen will only generate\n# file names in lower-case letters. If set to YES upper-case letters are also\n# allowed. This is useful if you have classes or files whose names only differ\n# in case and if your file system supports case sensitive file names. Windows\n# and Mac users are advised to set this option to NO.\n\nCASE_SENSE_NAMES       = YES\n\n# If the HIDE_SCOPE_NAMES tag is set to NO (the default) then Doxygen\n# will show members with their full class and namespace scopes in the\n# documentation. If set to YES the scope will be hidden.\n\nHIDE_SCOPE_NAMES       = NO\n\n# If the SHOW_INCLUDE_FILES tag is set to YES (the default) then Doxygen\n# will put a list of the files that are included by a file in the documentation\n# of that file.\n\nSHOW_INCLUDE_FILES     = NO\n\n# If the INLINE_INFO tag is set to YES (the default) then a tag [inline]\n# is inserted in the documentation for inline members.\n\nINLINE_INFO            = YES\n\n# If the SORT_MEMBER_DOCS tag is set to YES (the default) then doxygen\n# will sort the (detailed) documentation of file and class members\n# alphabetically by member name. If set to NO the members will appear in\n# declaration order.\n\nSORT_MEMBER_DOCS       = YES\n\n# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the\n# brief documentation of file, namespace and class members alphabetically\n# by member name. If set to NO (the default) the members will appear in\n# declaration order.\n\nSORT_BRIEF_DOCS        = YES\n\n# If the SORT_GROUP_NAMES tag is set to YES then doxygen will sort the\n# hierarchy of group names into alphabetical order. If set to NO (the default)\n# the group names will appear in their defined order.\n\nSORT_GROUP_NAMES       = NO\n\n# If the SORT_BY_SCOPE_NAME tag is set to YES, the class list will be\n# sorted by fully-qualified names, including namespaces. If set to\n# NO (the default), the class list will be sorted only by class name,\n# not including the namespace part.\n# Note: This option is not very useful if HIDE_SCOPE_NAMES is set to YES.\n# Note: This option applies only to the class list, not to the\n# alphabetical list.\n\nSORT_BY_SCOPE_NAME     = NO\n\n# The GENERATE_TODOLIST tag can be used to enable (YES) or\n# disable (NO) the todo list. This list is created by putting \\todo\n# commands in the documentation.\n\nGENERATE_TODOLIST      = YES\n\n# The GENERATE_TESTLIST tag can be used to enable (YES) or\n# disable (NO) the test list. This list is created by putting \\test\n# commands in the documentation.\n\nGENERATE_TESTLIST      = YES\n\n# The GENERATE_BUGLIST tag can be used to enable (YES) or\n# disable (NO) the bug list. This list is created by putting \\bug\n# commands in the documentation.\n\nGENERATE_BUGLIST       = YES\n\n# The GENERATE_DEPRECATEDLIST tag can be used to enable (YES) or\n# disable (NO) the deprecated list. This list is created by putting\n# \\deprecated commands in the documentation.\n\nGENERATE_DEPRECATEDLIST= YES\n\n# The ENABLED_SECTIONS tag can be used to enable conditional\n# documentation sections, marked by \\if sectionname ... \\endif.\n\nENABLED_SECTIONS       =\n\n# The MAX_INITIALIZER_LINES tag determines the maximum number of lines\n# the initial value of a variable or define consists of for it to appear in\n# the documentation. If the initializer consists of more lines than specified\n# here it will be hidden. Use a value of 0 to hide initializers completely.\n# The appearance of the initializer of individual variables and defines in the\n# documentation can be controlled using \\showinitializer or \\hideinitializer\n# command in the documentation regardless of this setting.\n\nMAX_INITIALIZER_LINES  = 30\n\n# Set the SHOW_USED_FILES tag to NO to disable the list of files generated\n# at the bottom of the documentation of classes and structs. If set to YES the\n# list will mention the files that were used to generate the documentation.\n\nSHOW_USED_FILES        = YES\n\n# If the sources in your project are distributed over multiple directories\n# then setting the SHOW_DIRECTORIES tag to YES will show the directory hierarchy\n# in the documentation. The default is NO.\n\nSHOW_DIRECTORIES       = YES\n\n# Set the SHOW_FILES tag to NO to disable the generation of the Files page. \n# This will remove the Files entry from the Quick Index and from the \n# Folder Tree View (if specified). The default is YES.\n\nSHOW_FILES             = YES\n\n# Set the SHOW_NAMESPACES tag to NO to disable the generation of the \n# Namespaces page. \n# This will remove the Namespaces entry from the Quick Index \n# and from the Folder Tree View (if specified). The default is YES.\n\nSHOW_NAMESPACES        = YES\n\n# The FILE_VERSION_FILTER tag can be used to specify a program or script that\n# doxygen should invoke to get the current version for each file (typically from\n# the version control system). Doxygen will invoke the program by executing (via\n# popen()) the command <command> <input-file>, where <command> is the value of\n# the FILE_VERSION_FILTER tag, and <input-file> is the name of an input file\n# provided by doxygen. Whatever the program writes to standard output\n# is used as the file version. See the manual for examples.\n\nFILE_VERSION_FILTER    =\n\n# The LAYOUT_FILE tag can be used to specify a layout file which will be parsed by \n# doxygen. The layout file controls the global structure of the generated output files \n# in an output format independent way. The create the layout file that represents \n# doxygen's defaults, run doxygen with the -l option. You can optionally specify a \n# file name after the option, if omitted DoxygenLayout.xml will be used as the name \n# of the layout file.\n\nLAYOUT_FILE            = \n\n#---------------------------------------------------------------------------\n# configuration options related to warning and progress messages\n#---------------------------------------------------------------------------\n\n# The QUIET tag can be used to turn on/off the messages that are generated\n# by doxygen. Possible values are YES and NO. If left blank NO is used.\n\nQUIET                  = NO\n\n# The WARNINGS tag can be used to turn on/off the warning messages that are\n# generated by doxygen. Possible values are YES and NO. If left blank\n# NO is used.\n\nWARNINGS               = YES\n\n# If WARN_IF_UNDOCUMENTED is set to YES, then doxygen will generate warnings\n# for undocumented members. If EXTRACT_ALL is set to YES then this flag will\n# automatically be disabled.\n\nWARN_IF_UNDOCUMENTED   = YES\n\n# If WARN_IF_DOC_ERROR is set to YES, doxygen will generate warnings for\n# potential errors in the documentation, such as not documenting some\n# parameters in a documented function, or documenting parameters that\n# don't exist or using markup commands wrongly.\n\nWARN_IF_DOC_ERROR      = YES\n\n# This WARN_NO_PARAMDOC option can be abled to get warnings for\n# functions that are documented, but have no documentation for their parameters\n# or return value. If set to NO (the default) doxygen will only warn about\n# wrong or incomplete parameter documentation, but not about the absence of\n# documentation.\n\nWARN_NO_PARAMDOC       = NO\n\n# The WARN_FORMAT tag determines the format of the warning messages that\n# doxygen can produce. The string should contain the $file, $line, and $text\n# tags, which will be replaced by the file and line number from which the\n# warning originated and the warning text. Optionally the format may contain\n# $version, which will be replaced by the version of the file (if it could\n# be obtained via FILE_VERSION_FILTER)\n\nWARN_FORMAT            = \"$file:$line: $text   \"\n\n# The WARN_LOGFILE tag can be used to specify a file to which warning\n# and error messages should be written. If left blank the output is written\n# to stderr.\n\nWARN_LOGFILE           =\n\n#---------------------------------------------------------------------------\n# configuration options related to the input files\n#---------------------------------------------------------------------------\n\n# The INPUT tag can be used to specify the files and/or directories that contain\n# documented source files. You may enter file names like \"myfile.cpp\" or\n# directories like \"/usr/src/myproject\". Separate the files or directories\n# with spaces.\n\nINPUT                  = @srcdir@/doc/manual \\\n                         @srcdir@/TODO \\\n                         @srcdir@/BUGS \\\n                         @srcdir@/HACKING \\\n                         @srcdir@/src \\\n                         @builddir@/config.h\n\n# This tag can be used to specify the character encoding of the source files\n# that doxygen parses. Internally doxygen uses the UTF-8 encoding, which is\n# also the default input encoding. Doxygen uses libiconv (or the iconv built\n# into libc) for the transcoding. See http://www.gnu.org/software/libiconv for\n# the list of possible encodings.\n\nINPUT_ENCODING         = UTF-8\n\n# If the value of the INPUT tag contains directories, you can use the\n# FILE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp\n# and *.h) to filter out the source-files in the directories. If left\n# blank the following patterns are tested:\n# *.c *.cc *.cxx *.cpp *.c++ *.java *.ii *.ixx *.ipp *.i++ *.inl *.h *.hh *.hxx\n# *.hpp *.h++ *.idl *.odl *.cs *.php *.php3 *.inc *.m *.mm *.py *.f90\n\nFILE_PATTERNS          = *.h \\\n                         *.c \\\n\t\t\t *.txt\n\n# The RECURSIVE tag can be used to turn specify whether or not subdirectories\n# should be searched for input files as well. Possible values are YES and NO.\n# If left blank NO is used.\n\nRECURSIVE              = YES\n\n# The EXCLUDE tag can be used to specify files and/or directories that should\n# excluded from the INPUT source files. This way you can easily exclude a\n# subdirectory from a directory tree whose root is specified with the INPUT tag.\n\nEXCLUDE                = @srcdir@/src/jtag/drivers/libjaylink\n\n# The EXCLUDE_SYMLINKS tag can be used select whether or not files or\n# directories that are symbolic links (a Unix filesystem feature) are excluded\n# from the input.\n\nEXCLUDE_SYMLINKS       = NO\n\n# If the value of the INPUT tag contains directories, you can use the\n# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude\n# certain files from those directories. Note that the wildcards are matched\n# against the file with absolute path, so to exclude all test directories\n# for example use the pattern */test/*\n\nEXCLUDE_PATTERNS       =\n\n# The EXCLUDE_SYMBOLS tag can be used to specify one or more symbol names\n# (namespaces, classes, functions, etc.) that should be excluded from the\n# output. The symbol name can be a fully qualified name, a word, or if the\n# wildcard * is used, a substring. Examples: ANamespace, AClass,\n# AClass::ANamespace, ANamespace::*Test\n\nEXCLUDE_SYMBOLS        =\n\n# The EXAMPLE_PATH tag can be used to specify one or more files or\n# directories that contain example code fragments that are included (see\n# the \\include command).\n\nEXAMPLE_PATH           =\n\n# If the value of the EXAMPLE_PATH tag contains directories, you can use the\n# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp\n# and *.h) to filter out the source-files in the directories. If left\n# blank all files are included.\n\nEXAMPLE_PATTERNS       =\n\n# If the EXAMPLE_RECURSIVE tag is set to YES then subdirectories will be\n# searched for input files to be used with the \\include or \\dontinclude\n# commands irrespective of the value of the RECURSIVE tag.\n# Possible values are YES and NO. If left blank NO is used.\n\nEXAMPLE_RECURSIVE      = NO\n\n# The IMAGE_PATH tag can be used to specify one or more files or\n# directories that contain image that are included in the documentation (see\n# the \\image command).\n\nIMAGE_PATH             = @srcdir@/doc/manual/images\n\n# The INPUT_FILTER tag can be used to specify a program that doxygen should\n# invoke to filter for each input file. Doxygen will invoke the filter program\n# by executing (via popen()) the command <filter> <input-file>, where <filter>\n# is the value of the INPUT_FILTER tag, and <input-file> is the name of an\n# input file. Doxygen will then use the output that the filter program writes\n# to standard output. \n# If FILTER_PATTERNS is specified, this tag will be \n# ignored.\n\nINPUT_FILTER           =\n\n# The FILTER_PATTERNS tag can be used to specify filters on a per file pattern\n# basis. \n# Doxygen will compare the file name with each pattern and apply the \n# filter if there is a match. \n# The filters are a list of the form: \n# pattern=filter (like *.cpp=my_cpp_filter). See INPUT_FILTER for further\n# info on how filters are used. If FILTER_PATTERNS is empty, INPUT_FILTER\n# is applied to all files.\n\nFILTER_PATTERNS        =\n\n# If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using\n# INPUT_FILTER) will be used to filter the input files when producing source\n# files to browse (i.e. when SOURCE_BROWSER is set to YES).\n\nFILTER_SOURCE_FILES    = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to source browsing\n#---------------------------------------------------------------------------\n\n# If the SOURCE_BROWSER tag is set to YES then a list of source files will\n# be generated. Documented entities will be cross-referenced with these sources.\n# Note: To get rid of all source code in the generated output, make sure also\n# VERBATIM_HEADERS is set to NO.\n\nSOURCE_BROWSER         = YES\n\n# Setting the INLINE_SOURCES tag to YES will include the body\n# of functions and classes directly in the documentation.\n\nINLINE_SOURCES         = NO\n\n# Setting the STRIP_CODE_COMMENTS tag to YES (the default) will instruct\n# doxygen to hide any special comment blocks from generated source code\n# fragments. Normal C and C++ comments will always remain visible.\n\nSTRIP_CODE_COMMENTS    = YES\n\n# If the REFERENCED_BY_RELATION tag is set to YES \n# then for each documented function all documented\n# functions referencing it will be listed.\n\nREFERENCED_BY_RELATION = YES\n\n# If the REFERENCES_RELATION tag is set to YES \n# then for each documented function all documented entities\n# called/used by that function will be listed.\n\nREFERENCES_RELATION    = YES\n\n# If the REFERENCES_LINK_SOURCE tag is set to YES (the default)\n# and SOURCE_BROWSER tag is set to YES, then the hyperlinks from\n# functions in REFERENCES_RELATION and REFERENCED_BY_RELATION lists will\n# link to the source code. \n# Otherwise they will link to the documentation.\n\nREFERENCES_LINK_SOURCE = YES\n\n# If the USE_HTAGS tag is set to YES then the references to source code\n# will point to the HTML generated by the htags(1) tool instead of doxygen\n# built-in source browser. The htags tool is part of GNU's global source\n# tagging system (see http://www.gnu.org/software/global/global.html). You\n# will need version 4.8.6 or higher.\n\nUSE_HTAGS              = NO\n\n# If the VERBATIM_HEADERS tag is set to YES (the default) then Doxygen\n# will generate a verbatim copy of the header file for each class for\n# which an include is specified. Set to NO to disable this.\n\nVERBATIM_HEADERS       = YES\n\n#---------------------------------------------------------------------------\n# configuration options related to the alphabetical class index\n#---------------------------------------------------------------------------\n\n# If the ALPHABETICAL_INDEX tag is set to YES, an alphabetical index\n# of all compounds will be generated. Enable this if the project\n# contains a lot of classes, structs, unions or interfaces.\n\nALPHABETICAL_INDEX     = YES\n\n# If the alphabetical index is enabled (see ALPHABETICAL_INDEX) then\n# the COLS_IN_ALPHA_INDEX tag can be used to specify the number of columns\n# in which this list will be split (can be a number in the range [1..20])\n\nCOLS_IN_ALPHA_INDEX    = 5\n\n# In case all classes in a project start with a common prefix, all\n# classes will be put under the same header in the alphabetical index.\n# The IGNORE_PREFIX tag can be used to specify one or more prefixes that\n# should be ignored while generating the index headers.\n\nIGNORE_PREFIX          =\n\n#---------------------------------------------------------------------------\n# configuration options related to the HTML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_HTML tag is set to YES (the default) Doxygen will\n# generate HTML output.\n\nGENERATE_HTML          = @doxygen_as_html@\n\n# The HTML_OUTPUT tag is used to specify where the HTML docs will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be\n# put in front of it. If left blank `html' will be used as the default path.\n\nHTML_OUTPUT            = html\n\n# The HTML_FILE_EXTENSION tag can be used to specify the file extension for\n# each generated HTML page (for example: .htm,.php,.asp). If it is left blank\n# doxygen will generate files with .html extension.\n\nHTML_FILE_EXTENSION    = .html\n\n# The HTML_HEADER tag can be used to specify a personal HTML header for\n# each generated HTML page. If it is left blank doxygen will generate a\n# standard header.\n\nHTML_HEADER            =\n\n# The HTML_FOOTER tag can be used to specify a personal HTML footer for\n# each generated HTML page. If it is left blank doxygen will generate a\n# standard footer.\n\nHTML_FOOTER            =\n\n# The HTML_STYLESHEET tag can be used to specify a user-defined cascading\n# style sheet that is used by each HTML page. It can be used to\n# fine-tune the look of the HTML output. If the tag is left blank doxygen\n# will generate a default style sheet. Note that doxygen will try to copy\n# the style sheet file to the HTML output directory, so don't put your own\n# stylesheet in the HTML output directory as well, or it will be erased!\n\nHTML_STYLESHEET        =\n\n# If the HTML_ALIGN_MEMBERS tag is set to YES, the members of classes,\n# files or namespaces will be aligned in HTML using tables. If set to\n# NO a bullet list will be used.\n\nHTML_ALIGN_MEMBERS     = YES\n\n# If the HTML_DYNAMIC_SECTIONS tag is set to YES then the generated HTML \n# documentation will contain sections that can be hidden and shown after the \n# page has loaded. For this to work a browser that supports \n# JavaScript and DHTML is required (for instance Mozilla 1.0+, Firefox \n# Netscape 6.0+, Internet explorer 5.0+, Konqueror, or Safari).\n\nHTML_DYNAMIC_SECTIONS  = NO\n\n# If the GENERATE_DOCSET tag is set to YES, additional index files\n# will be generated that can be used as input for Apple's Xcode 3\n# integrated development environment, introduced with OSX 10.5 (Leopard).\n# To create a documentation set, doxygen will generate a Makefile in the\n# HTML output directory. Running make will produce the docset in that\n# directory and running \"make install\" will install the docset in\n# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find\n# it at startup.\n# See http://developer.apple.com/tools/creatingdocsetswithdoxygen.html for more information.\n\nGENERATE_DOCSET        = NO\n\n# When GENERATE_DOCSET tag is set to YES, this tag determines the name of the\n# feed. A documentation feed provides an umbrella under which multiple\n# documentation sets from a single provider (such as a company or product suite)\n# can be grouped.\n\nDOCSET_FEEDNAME        = \"Doxygen generated docs\"\n\n# When GENERATE_DOCSET tag is set to YES, this tag specifies a string that\n# should uniquely identify the documentation set bundle. This should be a\n# reverse domain-name style string, e.g. com.mycompany.MyDocSet. Doxygen\n# will append .docset to the name.\n\nDOCSET_BUNDLE_ID       = org.doxygen.Project\n\n# If the GENERATE_HTMLHELP tag is set to YES, additional index files \n# will be generated that can be used as input for tools like the \n# Microsoft HTML help workshop to generate a compiled HTML help file (.chm) \n# of the generated HTML documentation.\n\nGENERATE_HTMLHELP      = NO\n\n# If the GENERATE_HTMLHELP tag is set to YES, the CHM_FILE tag can\n# be used to specify the file name of the resulting .chm file. You\n# can add a path in front of the file if the result should not be\n# written to the html output directory.\n\nCHM_FILE               =\n\n# If the GENERATE_HTMLHELP tag is set to YES, the HHC_LOCATION tag can\n# be used to specify the location (absolute path including file name) of\n# the HTML help compiler (hhc.exe). If non-empty doxygen will try to run\n# the HTML help compiler on the generated index.hhp.\n\nHHC_LOCATION           =\n\n# If the GENERATE_HTMLHELP tag is set to YES, the GENERATE_CHI flag\n# controls if a separate .chi index file is generated (YES) or that\n# it should be included in the master .chm file (NO).\n\nGENERATE_CHI           = NO\n\n# If the GENERATE_HTMLHELP tag is set to YES, the CHM_INDEX_ENCODING \n# is used to encode HtmlHelp index (hhk), content (hhc) and project file \n# content.\n\nCHM_INDEX_ENCODING     = \n\n# If the GENERATE_HTMLHELP tag is set to YES, the BINARY_TOC flag\n# controls whether a binary table of contents is generated (YES) or a\n# normal table of contents (NO) in the .chm file.\n\nBINARY_TOC             = NO\n\n# The TOC_EXPAND flag can be set to YES to add extra items for group members\n# to the contents of the HTML help documentation and to the tree view.\n\nTOC_EXPAND             = NO\n\n# If the GENERATE_QHP tag is set to YES and both QHP_NAMESPACE and QHP_VIRTUAL_FOLDER \n# are set, an additional index file will be generated that can be used as input for \n# Qt's qhelpgenerator to generate a Qt Compressed Help (.qch) of the generated \n# HTML documentation.\n\nGENERATE_QHP           = NO\n\n# If the QHG_LOCATION tag is specified, the QCH_FILE tag can \n# be used to specify the file name of the resulting .qch file. \n# The path specified is relative to the HTML output folder.\n\nQCH_FILE               = \n\n# The QHP_NAMESPACE tag specifies the namespace to use when generating \n# Qt Help Project output. For more information please see \n# http://doc.trolltech.com/qthelpproject.html#namespace\n\nQHP_NAMESPACE          = \n\n# The QHP_VIRTUAL_FOLDER tag specifies the namespace to use when generating \n# Qt Help Project output. For more information please see \n# http://doc.trolltech.com/qthelpproject.html#virtual-folders\n\nQHP_VIRTUAL_FOLDER     = doc\n\n# If QHP_CUST_FILTER_NAME is set, it specifies the name of a custom filter to add. \n# For more information please see \n# http://doc.trolltech.com/qthelpproject.html#custom-filters\n\nQHP_CUST_FILTER_NAME   = \n\n# The QHP_CUST_FILT_ATTRS tag specifies the list of the attributes of the custom filter to add.For more information please see \n# <a href=\"http://doc.trolltech.com/qthelpproject.html#custom-filters\">Qt Help Project / Custom Filters</a>.\n\nQHP_CUST_FILTER_ATTRS  = \n\n# The QHP_SECT_FILTER_ATTRS tag specifies the list of the attributes this project's \n# filter section matches. \n# <a href=\"http://doc.trolltech.com/qthelpproject.html#filter-attributes\">Qt Help Project / Filter Attributes</a>.\n\nQHP_SECT_FILTER_ATTRS  = \n\n# If the GENERATE_QHP tag is set to YES, the QHG_LOCATION tag can \n# be used to specify the location of Qt's qhelpgenerator. \n# If non-empty doxygen will try to run qhelpgenerator on the generated \n# .qhp file.\n\nQHG_LOCATION           = \n\n# The DISABLE_INDEX tag can be used to turn on/off the condensed index at\n# top of each HTML page. The value NO (the default) enables the index and\n# the value YES disables it.\n\nDISABLE_INDEX          = NO\n\n# This tag can be used to set the number of enum values (range [1..20])\n# that doxygen will group on one line in the generated HTML documentation.\n\nENUM_VALUES_PER_LINE   = 4\n\n# The GENERATE_TREEVIEW tag is used to specify whether a tree-like index \n# structure should be generated to display hierarchical information. \n# If the tag value is set to FRAME, a side panel will be generated \n# containing a tree-like index structure (just like the one that \n# is generated for HTML Help). For this to work a browser that supports\n# JavaScript, DHTML, CSS and frames is required (for instance Mozilla 1.0+,\n# Netscape 6.0+, Internet explorer 5.0+, or Konqueror). Windows users are\n# probably better off using the HTML help feature. Other possible values \n# for this tag are: HIERARCHIES, which will generate the Groups, Directories, \n# and Class Hierarchy pages using a tree view instead of an ordered list; \n# ALL, which combines the behavior of FRAME and HIERARCHIES; and NONE, which \n# disables this behavior completely. For backwards compatibility with previous \n# releases of Doxygen, the values YES and NO are equivalent to FRAME and NONE \n# respectively.\n\nGENERATE_TREEVIEW      = YES\n\n# If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be\n# used to set the initial width (in pixels) of the frame in which the tree\n# is shown.\n\nTREEVIEW_WIDTH         = 250\n\n# Use this tag to change the font size of Latex formulas included \n# as images in the HTML documentation. The default is 10. Note that \n# when you change the font size after a successful doxygen run you need \n# to manually remove any form_*.png images from the HTML output directory \n# to force them to be regenerated.\n\nFORMULA_FONTSIZE       = 10\n\n#---------------------------------------------------------------------------\n# configuration options related to the LaTeX output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_LATEX tag is set to YES (the default) Doxygen will\n# generate Latex output.\n\nGENERATE_LATEX         = @doxygen_as_pdf@\n\n# The LATEX_OUTPUT tag is used to specify where the LaTeX docs will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be\n# put in front of it. If left blank `latex' will be used as the default path.\n\nLATEX_OUTPUT           = latex\n\n# The LATEX_CMD_NAME tag can be used to specify the LaTeX command name to be\n# invoked. If left blank `latex' will be used as the default command name.\n\nLATEX_CMD_NAME         = pdflatex\n\n# The MAKEINDEX_CMD_NAME tag can be used to specify the command name to\n# generate index for LaTeX. If left blank `makeindex' will be used as the\n# default command name.\n\nMAKEINDEX_CMD_NAME     = makeindex\n\n# If the COMPACT_LATEX tag is set to YES Doxygen generates more compact\n# LaTeX documents. This may be useful for small projects and may help to\n# save some trees in general.\n\nCOMPACT_LATEX          = YES\n\n# The PAPER_TYPE tag can be used to set the paper type that is used\n# by the printer. Possible values are: a4, a4wide, letter, legal and\n# executive. If left blank a4wide will be used.\n\nPAPER_TYPE             = a4wide\n\n# The EXTRA_PACKAGES tag can be to specify one or more names of LaTeX\n# packages that should be included in the LaTeX output.\n\nEXTRA_PACKAGES         =\n\n# The LATEX_HEADER tag can be used to specify a personal LaTeX header for\n# the generated latex document. The header should contain everything until\n# the first chapter. If it is left blank doxygen will generate a\n# standard header. Notice: only use this tag if you know what you are doing!\n\nLATEX_HEADER           =\n\n# If the PDF_HYPERLINKS tag is set to YES, the LaTeX that is generated\n# is prepared for conversion to pdf (using ps2pdf). The pdf file will\n# contain links (just like the HTML output) instead of page references\n# This makes the output suitable for online browsing using a pdf viewer.\n\nPDF_HYPERLINKS         = YES\n\n# If the USE_PDFLATEX tag is set to YES, pdflatex will be used instead of\n# plain latex in the generated Makefile. Set this option to YES to get a\n# higher quality PDF documentation.\n\nUSE_PDFLATEX           = YES\n\n# If the LATEX_BATCHMODE tag is set to YES, doxygen will add the \\\\batchmode.\n# command to the generated LaTeX files. This will instruct LaTeX to keep\n# running if errors occur, instead of asking the user for help.\n# This option is also used when generating formulas in HTML.\n\nLATEX_BATCHMODE        = YES\n\n# If LATEX_HIDE_INDICES is set to YES then doxygen will not\n# include the index chapters (such as File Index, Compound Index, etc.)\n# in the output.\n\nLATEX_HIDE_INDICES     = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to the RTF output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_RTF tag is set to YES Doxygen will generate RTF output\n# The RTF output is optimized for Word 97 and may not look very pretty with\n# other RTF readers or editors.\n\nGENERATE_RTF           = NO\n\n# The RTF_OUTPUT tag is used to specify where the RTF docs will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be\n# put in front of it. If left blank `rtf' will be used as the default path.\n\nRTF_OUTPUT             = rtf\n\n# If the COMPACT_RTF tag is set to YES Doxygen generates more compact\n# RTF documents. This may be useful for small projects and may help to\n# save some trees in general.\n\nCOMPACT_RTF            = NO\n\n# If the RTF_HYPERLINKS tag is set to YES, the RTF that is generated\n# will contain hyperlink fields. The RTF file will\n# contain links (just like the HTML output) instead of page references.\n# This makes the output suitable for online browsing using WORD or other\n# programs which support those fields.\n# Note: wordpad (write) and others do not support links.\n\nRTF_HYPERLINKS         = NO\n\n# Load stylesheet definitions from file. Syntax is similar to doxygen's\n# config file, i.e. a series of assignments. You only have to provide\n# replacements, missing definitions are set to their default value.\n\nRTF_STYLESHEET_FILE    =\n\n# Set optional variables used in the generation of an rtf document.\n# Syntax is similar to doxygen's config file.\n\nRTF_EXTENSIONS_FILE    =\n\n#---------------------------------------------------------------------------\n# configuration options related to the man page output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_MAN tag is set to YES (the default) Doxygen will\n# generate man pages\n\nGENERATE_MAN           = NO\n\n# The MAN_OUTPUT tag is used to specify where the man pages will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be\n# put in front of it. If left blank `man' will be used as the default path.\n\nMAN_OUTPUT             = man\n\n# The MAN_EXTENSION tag determines the extension that is added to\n# the generated man pages (default is the subroutine's section .3)\n\nMAN_EXTENSION          = .3\n\n# If the MAN_LINKS tag is set to YES and Doxygen generates man output,\n# then it will generate one additional man file for each entity\n# documented in the real man page(s). These additional files\n# only source the real man page, but without them the man command\n# would be unable to find the correct page. The default is NO.\n\nMAN_LINKS              = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to the XML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_XML tag is set to YES Doxygen will\n# generate an XML file that captures the structure of\n# the code including all documentation.\n\nGENERATE_XML           = NO\n\n# The XML_OUTPUT tag is used to specify where the XML pages will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be\n# put in front of it. If left blank `xml' will be used as the default path.\n\nXML_OUTPUT             = xml\n\n# The XML_SCHEMA tag can be used to specify an XML schema,\n# which can be used by a validating XML parser to check the\n# syntax of the XML files.\n\nXML_SCHEMA             =\n\n# The XML_DTD tag can be used to specify an XML DTD,\n# which can be used by a validating XML parser to check the\n# syntax of the XML files.\n\nXML_DTD                =\n\n# If the XML_PROGRAMLISTING tag is set to YES Doxygen will\n# dump the program listings (including syntax highlighting\n# and cross-referencing information) to the XML output. Note that\n# enabling this will significantly increase the size of the XML output.\n\nXML_PROGRAMLISTING     = YES\n\n#---------------------------------------------------------------------------\n# configuration options for the AutoGen Definitions output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_AUTOGEN_DEF tag is set to YES Doxygen will\n# generate an AutoGen Definitions (see autogen.sf.net) file\n# that captures the structure of the code including all\n# documentation. Note that this feature is still experimental\n# and incomplete at the moment.\n\nGENERATE_AUTOGEN_DEF   = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to the Perl module output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES Doxygen will\n# generate a Perl module file that captures the structure of\n# the code including all documentation. Note that this\n# feature is still experimental and incomplete at the\n# moment.\n\nGENERATE_PERLMOD       = NO\n\n# If the PERLMOD_LATEX tag is set to YES Doxygen will generate\n# the necessary Makefile rules, Perl scripts and LaTeX code to be able\n# to generate PDF and DVI output from the Perl module output.\n\nPERLMOD_LATEX          = NO\n\n# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be\n# nicely formatted so it can be parsed by a human reader. \n# This is useful \n# if you want to understand what is going on. \n# On the other hand, if this \n# tag is set to NO the size of the Perl module output will be much smaller\n# and Perl will parse it just the same.\n\nPERLMOD_PRETTY         = YES\n\n# The names of the make variables in the generated doxyrules.make file\n# are prefixed with the string contained in PERLMOD_MAKEVAR_PREFIX.\n# This is useful so different doxyrules.make files included by the same\n# Makefile don't overwrite each other's variables.\n\nPERLMOD_MAKEVAR_PREFIX =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the preprocessor\n#---------------------------------------------------------------------------\n\n# If the ENABLE_PREPROCESSING tag is set to YES (the default) Doxygen will\n# evaluate all C-preprocessor directives found in the sources and include\n# files.\n\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro\n# names in the source code. If set to NO (the default) only conditional\n# compilation will be performed. Macro expansion can be done in a controlled\n# way by setting EXPAND_ONLY_PREDEF to YES.\n\nMACRO_EXPANSION        = NO\n\n# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES\n# then the macro expansion is limited to the macros specified with the\n# PREDEFINED and EXPAND_AS_DEFINED tags.\n\nEXPAND_ONLY_PREDEF     = NO\n\n# If the SEARCH_INCLUDES tag is set to YES (the default) the includes files\n# in the INCLUDE_PATH (see below) will be search if a #include is found.\n\nSEARCH_INCLUDES        = YES\n\n# The INCLUDE_PATH tag can be used to specify one or more directories that\n# contain include files that are not input files but should be processed by\n# the preprocessor.\n\nINCLUDE_PATH           = @builddir@/src\n\n# You can use the INCLUDE_FILE_PATTERNS tag to specify one or more wildcard\n# patterns (like *.h and *.hpp) to filter out the header-files in the\n# directories. If left blank, the patterns specified with FILE_PATTERNS will\n# be used.\n\nINCLUDE_FILE_PATTERNS  = *.h\n\n# The PREDEFINED tag can be used to specify one or more macro names that\n# are defined before the preprocessor is started (similar to the -D option of\n# gcc). The argument of the tag is a list of macros of the form: name\n# or name=definition (no spaces). If the definition and the = are\n# omitted =1 is assumed. To prevent a macro definition from being\n# undefined via #undef or recursively expanded use the := operator\n# instead of the = operator.\n\nPREDEFINED             = HAVE_CONFIG_H\n\n# If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then\n# this tag can be used to specify a list of macro names that should be expanded.\n# The macro definition that is found in the sources will be used.\n# Use the PREDEFINED tag if you want to use a different macro definition.\n\nEXPAND_AS_DEFINED      =\n\n# If the SKIP_FUNCTION_MACROS tag is set to YES (the default) then\n# doxygen's preprocessor will remove all function-like macros that are alone\n# on a line, have an all uppercase name, and do not end with a semicolon. Such\n# function macros are typically used for boiler-plate code, and will confuse\n# the parser if not removed.\n\nSKIP_FUNCTION_MACROS   = YES\n\n#---------------------------------------------------------------------------\n# Configuration::additions related to external references\n#---------------------------------------------------------------------------\n\n# The TAGFILES option can be used to specify one or more tagfiles.\n# Optionally an initial location of the external documentation\n# can be added for each tagfile. The format of a tag file without\n# this location is as follows:\n#  \n#   TAGFILES = file1 file2 ...\n# Adding location for the tag files is done as follows:\n#  \n#   TAGFILES = file1=loc1 \"file2 = loc2\" ...\n# where \"loc1\" and \"loc2\" can be relative or absolute paths or\n# URLs. If a location is present for each tag, the installdox tool\n# does not have to be run to correct the links.\n# Note that each tag file must have a unique name\n# (where the name does NOT include the path)\n# If a tag file is not located in the directory in which doxygen\n# is run, you must also specify the path to the tagfile here.\n\nTAGFILES               =\n\n# When a file name is specified after GENERATE_TAGFILE, doxygen will create\n# a tag file that is based on the input files it reads.\n\nGENERATE_TAGFILE       =\n\n# If the ALLEXTERNALS tag is set to YES all external classes will be listed\n# in the class index. If set to NO only the inherited external classes\n# will be listed.\n\nALLEXTERNALS           = NO\n\n# If the EXTERNAL_GROUPS tag is set to YES all external groups will be listed\n# in the modules index. If set to NO, only the current project's groups will\n# be listed.\n\nEXTERNAL_GROUPS        = YES\n\n# The PERL_PATH should be the absolute path and name of the perl script\n# interpreter (i.e. the result of `which perl').\n\nPERL_PATH              = /usr/bin/perl\n\n#---------------------------------------------------------------------------\n# Configuration options related to the dot tool\n#---------------------------------------------------------------------------\n\n# If the CLASS_DIAGRAMS tag is set to YES (the default) Doxygen will\n# generate a inheritance diagram (in HTML, RTF and LaTeX) for classes with base\n# or super classes. Setting the tag to NO turns the diagrams off. Note that\n# this option is superseded by the HAVE_DOT option below. This is only a\n# fallback. It is recommended to install and use dot, since it yields more\n# powerful graphs.\n\nCLASS_DIAGRAMS         = YES\n\n# You can define message sequence charts within doxygen comments using the \\msc\n# command. Doxygen will then run the mscgen tool (see\n# http://www.mcternan.me.uk/mscgen/) to produce the chart and insert it in the\n# documentation. The MSCGEN_PATH tag allows you to specify the directory where\n# the mscgen tool resides. If left empty the tool is assumed to be found in the\n# default search path.\n\nMSCGEN_PATH            =\n\n# If set to YES, the inheritance and collaboration graphs will hide\n# inheritance and usage relations if the target is undocumented\n# or is not a class.\n\nHIDE_UNDOC_RELATIONS   = YES\n\n# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is\n# available from the path. This tool is part of Graphviz, a graph visualization\n# toolkit from AT&T and Lucent Bell Labs. The other options in this section\n# have no effect if this option is set to NO (the default)\n\nHAVE_DOT               = YES\n\n# By default doxygen will write a font called FreeSans.ttf to the output \n# directory and reference it in all dot files that doxygen generates. This \n# font does not include all possible unicode characters however, so when you need \n# these (or just want a differently looking font) you can specify the font name \n# using DOT_FONTNAME. You need need to make sure dot is able to find the font, \n# which can be done by putting it in a standard location or by setting the \n# DOTFONTPATH environment variable or by setting DOT_FONTPATH to the directory \n# containing the font.\n\nDOT_FONTNAME           = FreeSans\n\n# The DOT_FONTSIZE tag can be used to set the size of the font of dot graphs. \n# The default size is 10pt.\n\nDOT_FONTSIZE           = 10\n\n# By default doxygen will tell dot to use the output directory to look for the \n# FreeSans.ttf font (which doxygen will put there itself). If you specify a \n# different font using DOT_FONTNAME you can set the path where dot \n# can find it using this tag.\n\nDOT_FONTPATH           = \n\n# If the CLASS_GRAPH and HAVE_DOT tags are set to YES then doxygen\n# will generate a graph for each documented class showing the direct and\n# indirect inheritance relations. Setting this tag to YES will force the\n# the CLASS_DIAGRAMS tag to NO.\n\nCLASS_GRAPH            = YES\n\n# If the COLLABORATION_GRAPH and HAVE_DOT tags are set to YES then doxygen\n# will generate a graph for each documented class showing the direct and\n# indirect implementation dependencies (inheritance, containment, and\n# class references variables) of the class with other documented classes.\n\nCOLLABORATION_GRAPH    = YES\n\n# If the GROUP_GRAPHS and HAVE_DOT tags are set to YES then doxygen\n# will generate a graph for groups, showing the direct groups dependencies\n\nGROUP_GRAPHS           = YES\n\n# If the UML_LOOK tag is set to YES doxygen will generate inheritance and\n# collaboration diagrams in a style similar to the OMG's Unified Modeling\n# Language.\n\nUML_LOOK               = NO\n\n# If set to YES, the inheritance and collaboration graphs will show the\n# relations between templates and their instances.\n\nTEMPLATE_RELATIONS     = YES\n\n# If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDE_GRAPH, and HAVE_DOT\n# tags are set to YES then doxygen will generate a graph for each documented\n# file showing the direct and indirect include dependencies of the file with\n# other documented files.\n\nINCLUDE_GRAPH          = YES\n\n# If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDED_BY_GRAPH, and\n# HAVE_DOT tags are set to YES then doxygen will generate a graph for each\n# documented header file showing the documented files that directly or\n# indirectly include this file.\n\nINCLUDED_BY_GRAPH      = YES\n\n# If the CALL_GRAPH and HAVE_DOT options are set to YES then\n# doxygen will generate a call dependency graph for every global function\n# or class method. Note that enabling this option will significantly increase\n# the time of a run. So in most cases it will be better to enable call graphs\n# for selected functions only using the \\callgraph command.\n\nCALL_GRAPH             = NO\n\n# If the CALLER_GRAPH and HAVE_DOT tags are set to YES then\n# doxygen will generate a caller dependency graph for every global function\n# or class method. Note that enabling this option will significantly increase\n# the time of a run. So in most cases it will be better to enable caller\n# graphs for selected functions only using the \\callergraph command.\n\nCALLER_GRAPH           = NO\n\n# If the GRAPHICAL_HIERARCHY and HAVE_DOT tags are set to YES then doxygen\n# will graphical hierarchy of all classes instead of a textual one.\n\nGRAPHICAL_HIERARCHY    = YES\n\n# If the DIRECTORY_GRAPH, SHOW_DIRECTORIES and HAVE_DOT tags are set to YES\n# then doxygen will show the dependencies a directory has on other directories\n# in a graphical way. The dependency relations are determined by the #include\n# relations between the files in the directories.\n\nDIRECTORY_GRAPH        = YES\n\n# The DOT_IMAGE_FORMAT tag can be used to set the image format of the images\n# generated by dot. Possible values are png, jpg, or gif\n# If left blank png will be used.\n\nDOT_IMAGE_FORMAT       = png\n\n# The tag DOT_PATH can be used to specify the path where the dot tool can be\n# found. If left blank, it is assumed the dot tool can be found in the path.\n\nDOT_PATH               =\n\n# The DOTFILE_DIRS tag can be used to specify one or more directories that\n# contain dot files that are included in the documentation (see the\n# \\dotfile command).\n\nDOTFILE_DIRS           =\n\n# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of \n# nodes that will be shown in the graph. If the number of nodes in a graph\n# becomes larger than this value, doxygen will truncate the graph, which is\n# visualized by representing a node as a red box. Note that doxygen if the\n# number of direct children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note\n# that the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n\nDOT_GRAPH_MAX_NODES    = 50\n\n# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the\n# graphs generated by dot. A depth value of 3 means that only nodes reachable\n# from the root by following a path via at most 3 edges will be shown. Nodes\n# that lay further from the root node will be omitted. Note that setting this\n# option to 1 or 2 may greatly reduce the computation time needed for large\n# code bases. Also note that the size of a graph can be further restricted by\n# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.\n\nMAX_DOT_GRAPH_DEPTH    = 0\n\n# Set the DOT_TRANSPARENT tag to YES to generate images with a transparent\n# background. This is disabled by default, because dot on Windows does not \n# seem to support this out of the box. Warning: Depending on the platform used, \n# enabling this option may lead to badly anti-aliased labels on the edges of \n# a graph (i.e. they become hard to read).\n\nDOT_TRANSPARENT        = NO\n\n# Set the DOT_MULTI_TARGETS tag to YES allow dot to generate multiple output\n# files in one run (i.e. multiple -o and -T options on the command line). This\n# makes dot run faster, but since only newer versions of dot (>1.8.10)\n# support this, this feature is disabled by default.\n\nDOT_MULTI_TARGETS      = NO\n\n# If the GENERATE_LEGEND tag is set to YES (the default) Doxygen will\n# generate a legend page explaining the meaning of the various boxes and\n# arrows in the dot generated graphs.\n\nGENERATE_LEGEND        = YES\n\n# If the DOT_CLEANUP tag is set to YES (the default) Doxygen will\n# remove the intermediate dot files that are used to generate\n# the various graphs.\n\nDOT_CLEANUP            = YES\n\n#---------------------------------------------------------------------------\n# Options related to the search engine\n#---------------------------------------------------------------------------\n\n# The SEARCHENGINE tag specifies whether or not a search engine should be\n# used. If set to NO the values of all tags below this one will be ignored.\n\nSEARCHENGINE           = NO\n"
        },
        {
          "name": "HACKING",
          "type": "blob",
          "size": 14.1083984375,
          "content": "// This file is part of the Doxygen Developer Manual\n/** @page patchguide Patch Guidelines\n\n\\attention You can't send patches to the mailing list anymore at all. Nowadays\nyou are expected to send patches to the OpenOCD Gerrit GIT server for a\nreview.\n\n\\attention If you already have a Gerrit account and want to try a\ndifferent sign in method, please first sign in as usually, press your\nname in the upper-right corner, go to @a Settings, select @a\nIdentities pane, press <em>Link Another Identity</em> button. In case\nyou already have duplicated accounts, ask administrators for manual\nmerging.\n\n\\attention If you're behind a corporate wall with http only access to the\nworld, you can still use these instructions!\n\n@section gerrit Submitting patches to the OpenOCD Gerrit server\n\nOpenOCD is to some extent a \"self service\" open source project, so to\ncontribute, you must follow the standard procedures to have the best\npossible chance to get your changes accepted.\n\nThe procedure to create a patch is essentially:\n\n- make the changes\n- create a commit\n- send the changes to the Gerrit server for review\n- correct the patch and re-send it according to review feedback\n\nYour patch (or commit) should be a \"good patch\": focus it on a single\nissue, and make it easily reviewable. Don't make\nit so large that it's hard to review; split large\npatches into smaller ones (this will also help\nto track down bugs later). All patches should\nbe \"clean\", which includes preserving the existing\ncoding style and updating documentation as needed. When adding a new\ncommand, the corresponding documentation should be added to\n@c doc/openocd.texi in the same commit. OpenOCD runs on both Little\nEndian and Big Endian hosts so the code can't count on specific byte\nordering (in other words, must be endian-clean).\n\nThere are several additional methods of improving the quality of your\npatch:\n\n- Runtime testing with Valgrind Memcheck\n\n  This helps to spot memory leaks, undefined behaviour due to\n  uninitialized data or wrong indexing, memory corruption, etc.\n\n- Clang Static Analyzer\n\n  Using this tool uncovers many different kinds of bugs in C code,\n  with problematic execution paths fully explained. It is a part of\n  standard Clang installation.\n\n  To generate a report, run this in the OpenOCD source directory:\n  @code\n  mkdir build-scanbuild; cd build-scanbuild\n  scan-build ../configure\n  scan-build make CFLAGS=\"-std=gnu99 -I. -I../../jimtcl\"\n  @endcode\n\n- Runtime testing with sanitizers\n\n  Both GCC and LLVM/Clang include advanced instrumentation options to\n  detect undefined behaviour and many kinds of memory\n  errors. Available with @c -fsanitize=* command arguments.\n\n  Example usage:\n  @code\n  mkdir build-sanitizers; cd build-sanitizers\n  ../configure CC=clang CFLAGS=\"-fno-omit-frame-pointer \\\n               -fsanitize=address -fsanitize=undefined -ggdb3\"\n  make\n  export ASAN_OPTIONS=detect_stack_use_after_return=1\n  src/openocd -s ../tcl -f /path/to/openocd.cfg\n  @endcode\n\n- Sparse Static Analyzer\n\n  Using this tool allows identifying some bug in C code.\n  In the future, OpenOCD would use the sparse attribute 'bitwise' to\n  detect incorrect endianness assignments.\n\n  Example usage:\n  @code\n  mkdir build-sparse; cd build-sparse\n  ../configure CC=cgcc CFLAGS=\"-Wsparse-all -Wno-declaration-after-statement \\\n\t   -Wno-unknown-attribute -Wno-transparent-union -Wno-tautological-compare \\\n       -Wno-vla -Wno-flexible-array-array -D__FLT_EVAL_METHOD__=0\"\n  make\n  @endcode\n\n- Code coverage analysis\n\n  By inspecting the code coverage, you can identify potential gaps in your testing\n  and use that information to improve your test scenarios.\n\n  Example usage:\n  @code\n  mkdir build-gcov; cd build-gcov\n  ../configure --enable-gcov [...]\n  make\n  # ... Now execute your test scenarios to collect OpenOCD code coverage ...\n  lcov --capture --directory ./src --output-file openocd-coverage.info\n  genhtml openocd-coverage.info --output-directory coverage_report\n  # ... Open coverage_report/index.html in a web browser ...\n  @endcode\n\nPlease consider performing these additional checks where appropriate\n(especially Clang Static Analyzer for big portions of new code) and\nmention the results (e.g. \"Valgrind-clean, no new Clang analyzer\nwarnings\") in the commit message.\n\nSay in the commit message if it's a bugfix (describe the bug) or a new\nfeature. Don't expect patches to merge immediately\nfor the next release. Be ready to rework patches\nin response to feedback.\n\nAdd yourself to the GPL copyright for non-trivial changes.\n\n@section stepbystep Step by step procedure\n\n-# Create a Gerrit account at: https://review.openocd.org\n  - On subsequent sign ins, use the full URL prefaced with 'http://'\n    For example: http://user_identifier.open_id_provider.com\n  -# Add a username to your profile.\n     After creating the Gerrit account and signing in, you will need to\n     add a username to your profile. To do this, go to 'Settings', and\n     add a username of your choice.\n     Your username will be required in step 3 and substituted wherever\n     the string 'USERNAME' is found.\n  -# Create an SSH public key following the directions on github:\n     https://help.github.com/articles/generating-ssh-keys . You can skip step 3\n     (adding key to Github account) and 4 (testing) - these are useful only if\n     you actually use Github or want to test whether the new key works fine.\n  -# Add this new SSH key to your Gerrit account:\n     go to 'Settings' > 'SSH Public Keys', paste the contents of\n     ~/.ssh/id_rsa.pub into the text field (if it's not visible click on\n     'Add Key ...' button) and confirm by clicking 'Add' button.\n-# Clone the git repository, rather than just download the source:\n @code\n git clone git://git.code.sf.net/p/openocd/code openocd\n @endcode\n   or if you have problems with the \"git:\" protocol, use\n   the slower http protocol:\n @code\n git clone http://git.code.sf.net/p/openocd/code openocd\n @endcode\n-# Set up Gerrit with your local repository. All this does it\nto instruct git locally how to send off the changes.\n  -# Add a new remote to git using Gerrit username:\n@code\ngit remote add review ssh://USERNAME@review.openocd.org:29418/openocd.git\ngit config remote.review.push HEAD:refs/for/master\n@endcode\n  Or with http only:\n@code\ngit remote add review https://USERNAME@review.openocd.org/p/openocd.git\ngit config remote.review.push HEAD:refs/for/master\n@endcode\n  The http password is configured from your gerrit settings - https://review.openocd.org/#/settings/http-password.\n  \\note If you want to simplify http access you can also add your http password to the url as follows:\n@code\ngit remote add review https://USERNAME:PASSWORD@review.openocd.org/p/openocd.git\n@endcode\n  \\note All contributions should be pushed to @c refs/for/master on the\nGerrit server, even if you plan to use several local branches for different\ntopics. It is possible because @c for/master is not a traditional Git\nbranch.\n  -# You will need to install this hook, we will look into a better solution:\n@code\nwget https://review.openocd.org/tools/hooks/commit-msg\nmv commit-msg .git/hooks\nchmod +x .git/hooks/commit-msg\n@endcode\n  \\note A script exists to simplify the two items above. Execute:\n@code\ntools/initial.sh <username>\n@endcode\nWith @<username@> being your Gerrit username.\n-# Set up git with your name and email:\n@code\ngit config --global user.name \"John Smith\"\ngit config --global user.email \"john@smith.org\"\n@endcode\n-# Work on your patches. Split the work into\n   multiple small patches that can be reviewed and\n   applied separately and safely to the OpenOCD\n   repository.\n@code\nwhile(!done) {\n  work - edit files using your favorite editor.\n  run \"git commit -s -a\" to commit all changes.\n  run tools/checkpatch.sh to verify your patch style is ok.\n}\n@endcode\n   \\note use \"git add .\" before commit to add new files.\n\n   \\note check @ref checkpatch for hint about checkpatch script\n\n   Commit message template, notice the short first line.\n   The field '<c>specify touched area</c>'\n   should identify the main part or subsystem the patch touches.\n@code{.unparsed}\nspecify touched area: short comment\n<blank line>\nLonger comments over several lines, explaining (where applicable) the\nreason for the patch and the general idea the solution is based on,\nany major design decisions, etc. Limit each comment line's length to 75\ncharacters; since 75 it's too short for a URL, you can put the URL in a\nseparate line preceded by 'Link: '.\n<blank line>\nSigned-off-by: ...\n@endcode\n   Examples:\n@code{.unparsed}\nflash/nor/atsame5: add SAME59 support\n\nAdd new device ID\n@endcode\n@code{.unparsed}\nflash/nor: flash driver for XYZ123\n\nAdd new flash driver for internal flash of ...\n@endcode\n@code{.unparsed}\ntarget/cortex_m: fix segmentation fault in cmd 'soft_reset_halt'\n\nsoft_reset_halt command failed reproducibly under following conditions: ...\nTest for NULL pointer and return error ...\n\nReported-by: John Reporter <rep9876@gmail.com>\nFixes: 123456789abc (\"target: the commit where the problem started\")\nBugLink: https://sourceforge.net/p/openocd/tickets/999/\n@endcode\n@code{.unparsed}\ndoc: fix typos\n@endcode\n   See \"git log\" for more examples.\n\n-# Next you need to make sure that your patches\n   are on top of the latest stuff on the server and\n   that there are no conflicts:\n@code\ngit pull --rebase origin master\n@endcode\n-# Send the patches to the Gerrit server for review:\n@code\ngit push review\n@endcode\n-# Forgot something, want to add more? Just make the changes and do:\n@code\ngit commit --amend\ngit push review\n@endcode\n\nFurther reading: http://www.coreboot.org/Git\n\n@section checkpatch About checkpatch script\n\nOpenOCD source code includes the script checkpatch to let developers to\nverify their patches before submitting them for review (see @ref gerrit).\n\nEvery patch for OpenOCD project that is submitted for review on Gerrit\nis tested by Jenkins. Jenkins will run the checkpatch script to analyze\neach patch.\nIf the script highlights either errors or warnings, Gerrit will add the\nscore \"-1\" to the patch and maintainers will probably ignore the patch,\nwaiting for the developer to send a fixed version.\n\nThe script checkpatch verifies the SPDX tag for new files against a very\nshort list of license tags.\nIf the license of your contribution is not listed there, but compatible\nwith OpenOCD license, please alert the maintainers or add the missing\nlicense in the first patch of your patch series.\n\nThe script checkpatch has been originally developed for the Linux kernel\nsource code, thus includes specific tests and checks related to Linux\ncoding style and to Linux code structure. While the script has been\nadapted for OpenOCD specificities, it still includes some Linux related\ntest. It is then possible that it triggers sometimes some <em>false\npositive</em>!\n\nIf you think that the error identified by checkpatch is a false\npositive, please report it to the openocd-devel mailing list or prepare\na patch for fixing checkpatch and send it to Gerrit for review.\n\n\\attention The procedure below is allowed only for <em>exceptional\ncases</em>. Do not use it to submit normal patches.\n\nThere are <em>exceptional cases</em> in which you need to skip some of\nthe tests from checkpatch in order to pass the approval from Gerrit.\n\nFor example, a patch that modify one line inside a big comment block\nwill not show the beginning or the end of the comment block. This can\nprevent checkpatch to detect the comment block. Checkpatch can wrongly\nconsider the modified comment line as a code line, triggering a set of\nfalse errors.\n\nOnly for <em>exceptional cases</em>, it is allowed to submit patches\nto Gerrit with the special field 'Checkpatch-ignore:' in the commit\nmessage. This field will cause checkpatch to ignore the error types\nlisted in the field, only for the patch itself.\nFor errors in the commit message, the special field has to be put in\nthe commit message before the line that produces the error.\nThe special field must be added <em>before</em> the 'Signed-off-by:'\nline, otherwise it is ignored.\nTo ignore multiple errors, either add multiple lines with the special\nfield or add multiple error types, separated by space or commas, in a\nsingle line.\nThe error type is printed by checkpatch on failure.\nFor example the names of Windows APIs mix lower and upper case chars,\nin violation of OpenOCD coding style, triggering a 'CAMELCASE' error:\n@code\nCHECK:CAMELCASE: Avoid CamelCase: <WSAGetLastError>\n#96105: FILE: src/helper/log.c:505:\n+       error_code = WSAGetLastError();\n@endcode\nAdding in the commit message of the patch the line:\n@code\nCheckpatch-ignore: CAMELCASE\n@endcode\nwill force checkpatch to ignore the CAMELCASE error.\n\n@section timeline When can I expect my contribution to be committed?\n\nThe code review is intended to take as long as a week or two to allow\nmaintainers and contributors who work on OpenOCD only in their spare\ntime opportunity to perform a review and raise objections.\n\nWith Gerrit much of the urgency of getting things committed has been\nremoved as the work in progress is safely stored in Gerrit and\navailable if someone needs to build on your work before it is\nsubmitted to the official repository.\n\nAnother factor that contributes to the desire for longer cool-off\ntimes (the time a patch lies around without any further changes or\ncomments), it means that the chances of quality regression on the\nmaster branch will be much reduced.\n\nIf a contributor pushes a patch, it is considered good form if another\ncontributor actually approves and submits that patch.\n\nIt should be noted that a negative review in Gerrit (\"-1\" or \"-2\") may (but does\nnot have to) be disregarded if all conditions listed below are met:\n\n- the concerns raised in the review have been addressed (or explained),\n- reviewer does not re-examine the change in a month,\n- reviewer does not answer e-mails for another month.\n\n@section browsing Browsing Patches\nAll OpenOCD patches can be reviewed <a href=\"https://review.openocd.org/\">here</a>.\n\n@section reviewing Reviewing Patches\nFrom the main <a href=\"https://review.openocd.org/#/q/status:open,n,z\">Review\npage</a> select the patch you want to review and click on that patch. On the\nappearing page select the download method (top right). Apply the\npatch. After building and testing you can leave a note with the \"Reply\"\nbutton and mark the patch with -1, 0 and +1.\n*/\n/** @file\nThis file contains the @ref patchguide page.\n*/\n"
        },
        {
          "name": "LICENSES",
          "type": "tree",
          "content": null
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 4.380859375,
          "content": "# SPDX-License-Identifier: GPL-2.0-or-later\n\n# not a GNU package. You can remove this line, if\n# have all needed files, that a GNU package needs\nAUTOMAKE_OPTIONS = gnu 1.6\n\n.DELETE_ON_ERROR:\n\n# make sure we pass the correct jimtcl flags to distcheck\nDISTCHECK_CONFIGURE_FLAGS = --disable-install-jim\n\n# do not run Jim Tcl tests (esp. during distcheck)\ncheck-recursive: SUBDIRS :=\n\nnobase_dist_pkgdata_DATA = \\\n\tcontrib/libdcc/dcc_stdio.c \\\n\tcontrib/libdcc/dcc_stdio.h \\\n\tcontrib/libdcc/example.c \\\n\tcontrib/libdcc/README \\\n\tcontrib/60-openocd.rules\n\nSUBDIRS =\nDIST_SUBDIRS =\nbin_PROGRAMS =\nnoinst_LTLIBRARIES =\ninfo_TEXINFOS =\ndist_man_MANS =\nEXTRA_DIST =\nDISTCLEANFILES =\n\nif INTERNAL_JIMTCL\nSUBDIRS += jimtcl\nDIST_SUBDIRS += jimtcl\nEXTRA_DIST += jimtcl/configure.gnu\n# jimtcl from 0.79 to 0.82 miss cleaning jsmn.o\nDISTCLEANFILES += jimtcl/jsmn/jsmn.o\nendif\n\n# common flags used in openocd build\nAM_CFLAGS = $(GCC_WARNINGS)\nAM_LDFLAGS =\n\nAM_CPPFLAGS = $(HOST_CPPFLAGS)\\\n\t\t\t  -I$(top_srcdir)/src \\\n\t\t\t  -I$(top_builddir)/src \\\n\t\t\t  -DPKGDATADIR=\\\"$(pkgdatadir)\\\" \\\n\t\t\t  -DBINDIR=\\\"$(bindir)\\\"\n\nif INTERNAL_JIMTCL\nAM_CPPFLAGS += -I$(top_srcdir)/jimtcl \\\n\t\t\t   -I$(top_builddir)/jimtcl\nelse\nAM_CPPFLAGS += $(JIMTCL_CFLAGS)\nendif\n\nif USE_GCOV\nAM_CFLAGS += --coverage\nAM_LDFLAGS += --coverage\nendif\n\nEXTRA_DIST += \\\n\tBUGS \\\n\tHACKING \\\n\tNEWTAPS \\\n\tREADME.Windows \\\n\tREADME.macOS \\\n\t$(EXTRA_DIST_NEWS) \\\n\tDoxyfile.in \\\n\tLICENSES/license-rules.txt \\\n\tLICENSES/exceptions/eCos-exception-2.0 \\\n\tLICENSES/preferred/BSD-1-Clause \\\n\tLICENSES/preferred/BSD-2-Clause \\\n\tLICENSES/preferred/BSD-2-Clause-Views \\\n\tLICENSES/preferred/BSD-3-Clause \\\n\tLICENSES/preferred/BSD-Source-Code \\\n\tLICENSES/preferred/CC0-1.0 \\\n\tLICENSES/preferred/GFDL-1.2 \\\n\tLICENSES/preferred/gfdl-1.2.texi.readme \\\n\tLICENSES/preferred/GPL-2.0 \\\n\tLICENSES/preferred/LGPL-2.1 \\\n\tLICENSES/preferred/MIT \\\n\tLICENSES/stand-alone/Apache-2.0 \\\n\tLICENSES/stand-alone/GPL-3.0 \\\n\ttools/logger.pl \\\n\ttools/rlink_make_speed_table \\\n\ttools/st7_dtc_as \\\n\tcontrib\n\nlibtool: $(LIBTOOL_DEPS)\n\t$(SHELL) ./config.status --recheck\n\ndocs: pdf html doxygen\n\nDoxyfile: $(srcdir)/Doxyfile.in\n\t@echo \"Creating $@ from $<...\"\n\t@( \\\n\t  echo \"### @@@ -= DO NOT EDIT THIS FILE =- @@@ ###\" && \\\n\t  echo \"### @@@ Make changes to Doxyfile.in @@@ ###\" && \\\n\t  sed -e 's,@srcdir\\@,$(srcdir),' \\\n\t    -e 's,@builddir\\@,$(builddir),' \\\n\t    -e 's,@doxygen_as_html\\@,$(doxygen_as_html),' \\\n\t    -e 's,@doxygen_as_pdf\\@,$(doxygen_as_pdf),' $< \\\n\t) > $@\n\nTHE_MANUAL = doxygen/latex/refman.pdf\n\ndoxygen::\n\t$(MAKE) Doxyfile\n\tdoxygen Doxyfile 2>&1 | perl $(srcdir)/tools/logger.pl > doxygen.log\n\t@if [ -f doxygen/latex/refman.tex ]; then \\\n\t\techo \"Creating $(THE_MANUAL)...\"; \\\n\t\t$(MAKE) $(THE_MANUAL); \\\n\telse \\\n\t\techo \"Skipping Doxygen PDF...\"; \\\n\tfi\n\n$(THE_MANUAL): %.pdf: %.tex\n\t-cd $$(dirname $*) && pdflatex $$(basename $*)\n\t-cd $$(dirname $*) && pdflatex $$(basename $*)\n\nTCL_PATH = tcl\n# command to find paths of script files, relative to TCL_PATH\nTCL_FILES = find $(srcdir)/$(TCL_PATH) -name '*.cfg' -o -name '*.tcl' -o -name '*.txt' | \\\n\t\tsed -e 's,^$(srcdir)/$(TCL_PATH),,'\n\n# The git log command below generates many empty text lines with only some space characters\n# for indentation purposes, so use sed to trim all trailing whitespace.\ndist-hook:\n\tif test -d $(srcdir)/.git -a \\( ! -e $(distdir)/ChangeLog -o -w $(distdir)/ChangeLog \\) ; then \\\n\t\tgit --git-dir $(srcdir)/.git log --date=short --pretty=\"format:%ad  %aN <%aE>%n%n%w(0,4,6)* %B\" \\\n\t\t| sed 's/[[:space:]]*$$//' > $(distdir)/ChangeLog.tmp && \\\n\t\tmv $(distdir)/ChangeLog.tmp $(distdir)/ChangeLog; \\\n\tfi\n\tfor i in $$($(TCL_FILES)); do \\\n\t\tj=\"$(distdir)/$(TCL_PATH)/$$i\" && \\\n\t\tmkdir -p \"$$(dirname $$j)\" && \\\n\t\t$(INSTALL_DATA) $(srcdir)/$(TCL_PATH)/$$i $$j; \\\n\tdone\n\ninstall-data-hook:\n\tfor i in $$($(TCL_FILES)); do \\\n\t\tj=\"$(DESTDIR)$(pkgdatadir)/scripts/$$i\" && \\\n\t\tmkdir -p \"$$(dirname $$j)\" && \\\n\t\t$(INSTALL_DATA) $(srcdir)/$(TCL_PATH)/$$i $$j; \\\n\tdone\n\nuninstall-hook:\n\trm -rf $(DESTDIR)$(pkgdatadir)/scripts\n\ndistclean-local:\n\trm -rf Doxyfile doxygen\n\t-rm -f $(srcdir)/jimtcl/configure.gnu\n\nDISTCLEANFILES += doxygen.log\n\nMETASOURCES = AUTO\n\nBUILT_SOURCES =\nCLEANFILES =\n\nMAINTAINERCLEANFILES = \\\n\t%D%/INSTALL \\\n\t%D%/configure \\\n\t%D%/Makefile.in \\\n\t%D%/depcomp \\\n\t%D%/config.guess \\\n\t%D%/config.sub \\\n\t%D%/config.h.in \\\n\t%D%/config.h.in~ \\\n\t%D%/compile \\\n\t%D%/ltmain.sh \\\n\t%D%/missing \\\n\t%D%/aclocal.m4 \\\n\t%D%/install-sh \\\n\t%D%/texinfo.tex\n\ninclude src/Makefile.am\ninclude doc/Makefile.am\n"
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 0.7734375,
          "content": "This file includes highlights of the changes made in the OpenOCD\nsource archive release.\n\nJTAG Layer:\n\nBoundary Scan:\n\nTarget Layer:\n\nFlash Layer:\n\nBoard, Target, and Interface Configuration Scripts:\n\nServer Layer:\n\nRTOS:\n\nDocumentation:\n\nBuild and Release:\n\n\nThis release also contains a number of other important functional and\ncosmetic bugfixes. For more details about what has changed since the\nlast release, see the git repository history:\n\nhttp://sourceforge.net/p/openocd/code/ci/v0.x.0/log/?path=\n\n\nFor older NEWS, see the NEWS files associated with each release\n(i.e. NEWS-<version>).\n\nFor more information about contributing test reports, bug fixes, or new\nfeatures and device support, please read the new Developer Manual (or\nthe BUGS and PATCHES.txt files in the source archive).\n"
        },
        {
          "name": "NEWS-0.10.0",
          "type": "blob",
          "size": 5.9541015625,
          "content": "This file includes highlights of the changes made in the OpenOCD\nsource archive release.\n\nJTAG Layer:\n\t* New driver for J-Link adapters based on libjaylink\n          (including support for FPGA configuration, SWO and EMUCOM)\n\t* FTDI improvements to work at 30MHz clock\n\t* BCM2835 native driver SWD and Raspberry Pi2 support\n\t* BCM2835 is set to 4ma drive, slow slew rate\n\t* ixo-usb-jtag (emulation of an Altera Bus Blaster I on\n          Cypress FX2 IC) support\n\t* JTAG pass-through mode for CMSIS-DAP (including support for\n          FPGA configuration)\n\t* OpenJTAG support for Cypress CY7C65215\n\t* connect_assert_srst support for SWD\n\t* Xilinx Virtex-II Series7 bitstream loading support\n\t* Use JEP106 data to decode IDs\n\t* Deprecated \"ft2232\" driver removed (use \"ftdi\" instead)\n\t* GPL-incompatible FTDI D2XX library support dropped (Presto,\n          OpenJTAG and USB-Blaster I are using libftdi only now)\n\t* ZY1000 support dropped (unmaintained since long)\n\t* oocd_trace support dropped\n\nBoundary Scan:\n\nTarget Layer:\n\t* ARMv7-A, Cortex-M, Cortex-A/R important fixes and\n          improvements (allowing e.g. simultaneous debugging of A8 and\n          M3 cores, JTAG WAIT support etc.)\n\t* ARM Cortex-A,R allow interrupt disable during single-step\n          (maskisr command)\n\t* Semihosting support for ARMv7-A\n\t* ARM Cortex-M7 support\n\t* Intel Quark mcu D2000 support\n\t* Freescale LS102x SAP support\n\t* ThreadX RTOS support on ARM926E-JS\n\t* Cortex-M RTOS stack alignment fixes\n\t* FreeRTOS FPU support\n\t* uC/OS-III RTOS support\n\t* bridging semihosting to GDB's File-I/O support\n\t* -defer-examine option added to target create command\n\t* verify_image_checksum command added\n\nFlash Layer:\n\t* Atmel SAM4S, SAM4N, SAM4C support\n\t* Atmel SAMV, SAMS, SAME (Cortex-M7) support\n\t* Atmel AT91SAMD handle reset run/halt in DSU, other fixes\n\t* Atmel AT91SAML21, SAML22, SAMC20/SAMC21, SAMD09 support\n\t* ST STM32F4x support\n\t* ST STM32F74x/76x/77x, STM32L4 support\n\t* ST STM32L0 categories 1, 2 and 5 support\n\t* Kinetis K02, K21, K22, K24, K26, K63, K64, K66 support\n\t* Kinetis KE, KVx, K8x families support\n\t* Kinetis FlexNVM handling\n\t* Kinetis flash protection, security, mass_erase improvements\n\t* Infineon XMC4xxx family support\n\t* Infineon XMC1000 flash driver\n\t* Energy Micro EFM32 Happy Gecko support\n\t* Energy Micro EFM32 debug interface lock support\n\t* Analog Devices ADuCM360 support\n\t* Unified Nuvoton NuMicro flash driver\n\t* NIIET K1921VK01T (Cortex-M4) support\n\t* Nordic Semiconductor nRF51 improvements\n\t* Spansion FM4 flash (including MB9BFx64/x65, S6E2DH) driver\n\t* Ambiq Micro Apollo flash driver\n\t* PIC32MX new device IDs, 17x/27x flash support\n\t* read_bank() and verify_bank() NOR flash internal API to\n          allow reading (and verifying) non-memory-mapped devices\n\t* JTAGSPI driver to access SPI NOR flashes via a trivial\n          FPGA proxy\n\t* Milandr read/verify for Info memory support\n\t* Various discrete SPI NOR flashes support\n\t* CFI 16-bit flash reversed endianness support\n\nBoard, Target, and Interface Configuration Scripts:\n\t* Digilent JTAG-HS2, JTAG-HS3 interfaces configs\n\t* FTDI UM232H module as JTAG interface config\n\t* 100ask's OpenJTAG interface config\n\t* MBFTDI interface config\n\t* XDS100v3 interface config\n\t* Freescale Vybrid VF6xx target config\n\t* EmCraft VF6 SOM and baseboard configs\n\t* Freescale SabreSD board config\n\t* Freescale VF65GS10 tower board config\n\t* Pipistrello Xilinx Spartan6 LX45 FPGA board config\n\t* miniSpartan6+ board config\n\t* Xilinx Kintex7 Development board config\n\t* Parallella-I board config\n\t* Digilent Atlys and Analog Discovery board configs\n\t* Numato Opsis board config\n\t* Xilinx Spartan 6 FPGA \"Device DNA\" reading support\n\t* Altera 10M50 FPGA (MAX10 family) target config\n\t* Altera EPM240 CPLD (MAXII family) target config\n\t* Marsohod2, Marsohod3 FPGA, Marsohod CPLD boards configs\n\t* Novena's integrated FPGA board config\n\t* XMOS XS1-XAU8A-10's ARM core config\n\t* XMOS xCORE-XA Core Module board config\n\t* Exynos5250 target config\n\t* Arndale board config\n\t* FM4 MB9BFxxx family configs\n\t* Spansion SK-FM4-U120-9B560 board config\n\t* Diolan LPC4357-DB1 board config\n\t* ST STM32F469 discovery board config\n\t* ST STM32F7-DISCO, STM327[4|5]6G-EVAL boards configs\n\t* ST STM32L4 discovery, NUCLEO L476RG, STM32F429I-DISC1 boards\n          configs\n\t* Atheros AR2313, AR2315 targets config\n\t* Netgear WP102 board config\n\t* La Fonera FON2200 board config\n\t* Linksys WAG200G board config\n\t* LPC-Link2 board config\n\t* NXP LPC4370 target config\n\t* Atmel SAMV, SAMS, SAME target configs\n\t* Atmel SAM E70 Xplained, SAM V71 Xplained Ultra boards\n          configs\n\t* Nordic nRF52 target config\n\t* Nordic nRF51-DK, nRF52-DK boards configs\n\t* Infineon XMC4700 Relax Kit, XMC4800 Relax EtherCAT Kit,\n          XMC4300 Relax EtherCAT Kit boards configs\n\t* Renesas S7G2 target config\n\t* Renesas DK-S7G2 board config\n\t* Altera EP3C10 FPGA (Cyclone III family) target config\n\t* TI MSP432P4xx target config\n\t* Cypress PSoC 5LP target config\n\t* Analog Devices ADSP-SC58x target config (Cortex-A5 core only)\n\nServer Layer:\n\t* tcl_trace command for async target trace output via Tcl RPC\n\nDocumentation:\n\nBuild and Release:\n\t* Various fixes thanks to http://coccinellery.org/\n\t* libftdi is now autodetected with pkgconfig\n\t* Releases should now support reproducible builds\n\t* Conversion to non-recursive make, requires automake >= 1.14\n\t* Udev rules modified to add uaccess tag and moved to\n          60-openocd.rules\n\t* Support searching for scripts relative to the openocd binary\n          for all major architectures\n\n\nThis release also contains a number of other important functional and\ncosmetic bugfixes. For more details about what has changed since the\nlast release, see the git repository history:\n\nhttp://sourceforge.net/p/openocd/code/ci/v0.10.0/log/?path=\n\n\nFor older NEWS, see the NEWS files associated with each release\n(i.e. NEWS-<version>).\n\nFor more information about contributing test reports, bug fixes, or new\nfeatures and device support, please read the new Developer Manual (or\nthe BUGS and PATCHES.txt files in the source archive).\n"
        },
        {
          "name": "NEWS-0.11.0",
          "type": "blob",
          "size": 8.623046875,
          "content": "This file includes highlights of the changes made in the OpenOCD\nsource archive release.\n\nJTAG Layer:\n\t* add debug level 4 for verbose I/O debug\n\t* bitbang, add read buffer to improve performance\n\t* Cadence SystemVerilog Direct Programming Interface (DPI) adapter driver\n\t* CMSIS-DAP v2 (USB bulk based) adapter driver\n\t* Cypress KitProg adapter driver\n\t* FTDI FT232R sync bitbang adapter driver\n\t* Linux GPIOD bitbang adapter driver through libgpiod\n\t* Mellanox rshim USB or PCIe adapter driver\n\t* Nuvoton Nu-Link and Nu-Link2 adapter drivers\n\t* NXP IMX GPIO mmap based adapter driver\n\t* ST-Link consolidate all versions in single config\n\t* ST-Link read properly old USB serial numbers\n\t* STLink/V3 support (for ST devices only !)\n\t* STM8 SWIM transport\n\t* TI XDS110 adapter driver\n\t* Xilinx XVC/PCIe adapter driver\n\nBoundary Scan:\n\nTarget Layer:\n\t* 64 bit address support\n\t* ARCv2 target support\n\t* ARM Cortex-A hypervisor mode support\n\t* ARM Cortex-M fast PC sampling support for profiling\n\t* ARM generic CTI support\n\t* ARM generic mem-ap target support\n\t* ARMv7-A MMU tools\n\t* ARMv7m traces add TCP stream server\n\t* ARMv8 AARCH64 target support and semihosting support\n\t* ARMv8 AARCH64 disassembler support through capstone library\n\t* ARMv8-M target support\n\t* EnSilica eSi-RISC target support, including instruction tracing\n          eSi-Trace support\n\t* MIPS64 target support\n\t* Motorola SREC S6 record image file support\n\t* RISC-V target support\n\t* SEGGER Real Time Transfer (RTT) initial support (for single target,\n\t  Cortex-M only)\n\t* ST STM8 target support\n\t* Various MIPS32 target improvements\n\nFlash Layer:\n\t* Atheros (ath79) SPI interface support\n\t* Atmel atmega128rfa1 support\n\t* Atmel SAM D21, D51, DA1, E51, E53, E54, G55, R30 support\n\t* Atmel SAMC2?N* support\n\t* Cypress PSoC5LP, PSoC6 support\n\t* EnSilica eSi-RISC support\n\t* Foshan Synwit Tech SWM050 support\n\t* Maxim Integrated MAX32XXX support\n\t* Nordic Semiconductor nRF51822, nRF52810, nRF52832 support\n\t* NXP Kinetis K27, K28, KE1x, KEAx, KL28, KL8x, KV5x, KWx support\n\t* Renesas RPC HF support\n\t* SH QSPI support\n\t* SiFive Freedom E support\n\t* Silicon Labs EFR-family, EZR32HG support\n\t* ST BlueNRG support\n\t* ST STM32 QUAD/OCTO-SPI interface support for Flash, FRAM and EEPROM\n\t* ST STM32F72x, STM32F4x3, STM32H7xx support\n\t* ST STM32G0xx, STM32G4xx, STM32L4x, STM32WB, STM32WL support\n\t* ST STM32L5x support (non secure mode)\n\t* TI CC13xx, CC26xx, CC32xx support\n\t* TI MSP432 support\n\t* Winner Micro w600 support\n\t* Xilinx XCF platform support\n\t* Various discrete SPI NOR flashes support\n\nBoard, Target, and Interface Configuration Scripts:\n\t* 8devices LIMA board config\n\t* Achilles Instant-Development Kit Arria 10 board config\n\t* Amazon Kindle 2 and DX board config\n\t* Analog Devices ADSP-SC58x, ADSP-SC584-EZBRD board config\n\t* Andes Technology ADP-XC7KFF676 board config\n\t* Andes Technology Corvette-F1 board config\n\t* ARM Musca A board config\n\t* Arty Spartan 7 FPGA board config\n\t* Atmel SAMD10 Xplained mini board config\n\t* Atmel SAMD11 Xplained Pro board config\n\t* Atmel SAM G55 Xplained Pro board config\n\t* AVNET UltraZED EG StarterKit board config\n\t* Blue Pill STM32F103C8 board config\n\t* DP Busblaster v4.1a board config\n\t* DPTechnics DPT-Board-v1 board config\n\t* Emcraft imx8 SOM BSB board config\n\t* Globalscale ESPRESSObin board config\n\t* Kasli board config\n\t* Kintex Ultrascale XCKU040 board config\n\t* Knovative KC-100 board config\n\t* LeMaker HiKey board config\n\t* Microchip (Atmel) SAME54 Xplained Pro board config\n\t* Microchip (Atmel) SAML11 Xplained Pro board config\n\t* Nordic module NRF52 board config\n\t* Numato Lab Mimas A7 board config\n\t* NXP Freedom FRDM-LS1012A board config\n\t* NXP IMX7SABRE board config\n\t* NXP IMX8MP-EVK board config\n\t* NXP MC-IMX8M-EVK board config\n\t* QuickLogic QuickFeather board config\n\t* Renesas R-Car E2, H2, M2 board config\n\t* Renesas R-Car Salvator-X(S) board config\n\t* Renesas RZ/A1H GR-Peach board config\n\t* Rigado BMD-300 board config\n\t* Sayma AMC board config\n\t* Sifive e31arty, e51arty, hifive1 board config\n\t* ST B-L475E-IOT01A board config\n\t* ST BlueNRG idb007v1, idb008v1, idb011v1 board config\n\t* ST STM32F412g discovery board config\n\t* ST STM32F413h discovery board config\n\t* ST STM32F469i discovery board config\n\t* ST STM32F7 Nucleo board config\n\t* ST STM32F723e discovery board config\n\t* ST STM32F746g discovery board config\n\t* ST STM32F769i discovery board config\n\t* ST STM32H735g discovery board config\n\t* ST STM32H743zi Nucleo board config\n\t* ST STM32H745i discovery board config\n\t* ST STM32H747i discovery board config\n\t* ST STM32H750b discovery board config\n\t* ST STM32H7b3i discovery board config\n\t* ST STM32H7x_dual_qspi board config\n\t* ST STM32H7x3i Eval boards config\n\t* ST STM32L073 Nucleo board config\n\t* ST STM32L476g discovery board config\n\t* ST STM32L496g discovery board config\n\t* ST STM32L4p5g discovery board config\n\t* ST STM32L4r9i discovery board config\n\t* ST STM32L5 Nucleo board config\n\t* ST STM32MP15x DK2 board config\n\t* ST STM32WB Nucleo board config\n\t* ST STM8L152R8 Nucleo board config\n\t* Synopsys DesignWare ARC EM board config\n\t* Synopsys DesignWare ARC HSDK board config\n\t* TI BeagleBone family boards config\n\t* TI CC13xx, CC26xx, CC32xx LaunchPad board config\n\t* TI MSP432 LaunchPad board config\n\t* Tocoding Poplar board config\n\t* TP-Link WDR4300 board config\n\t* Allwinner V3s target config\n\t* Andes Technology NDS V5 target config\n\t* Atmel atmega128rfa1 target config\n\t* ARM corelink SSE-200 target config\n\t* Atheros_ar9344 target config\n\t* Cypress PSoC5LP, PSoC6 target config\n\t* EnSilica eSi-RISC target config\n\t* Foshan Synwit Tech SWM050 target config\n\t* GigaDevice GD32VF103 target config\n\t* Hisilicon Hi3798 target config\n\t* Hisilicon Hi6220 target config\n\t* Infineon TLE987x target config\n\t* Marvell Armada 3700 target config\n\t* Maxim Integrated MAX32XXX target config\n\t* Mellanox BlueField target config\n\t* Microchip (Atmel) SAME5x, SAML1x target config\n\t* NXP IMX6SX, IMX6UL, IMX7, IMX7ULP, IMX8 target config\n\t* NXP Kinetis KE1xZ, KE1xF target config\n\t* NXP LPC84x, LPC8Nxx, LS1012A, NHS31xx target config\n\t* Qualcomm QCA4531 target config\n\t* QuickLogic EOS S3 target config\n\t* Renesas R-Car E2, H2, M2 target config\n\t* Renesas R-Car Gen3 target config\n\t* Renesas RZ/A1H target config\n\t* Rockchip RK3308 target config\n\t* ST BlueNRG target config\n\t* ST STM32G0, STM32G4, STM32H7, STM32L0, STM32L5 target config\n\t* ST STM32MP15x target config\n\t* ST STM32WBx, STM32WLEx target config\n\t* ST STM8L152, S003, S103, S105 target config\n\t* Synopsys DesignWare ARC EM target config\n\t* Synopsys DesignWare ARC HS Development Kit SoC target config\n\t* TI CC13xx, CC26xx, CC32xx target config\n\t* TI TNETC4401 target config\n\t* Xilinx UltraScale+ target config\n\t* Altera 5M570Z (MAXV family) CPLD config\n\t* Xilinx Ultrascale, XCF CPLD config\n\t* Intel (Altera) Arria10 FPGA config\n\t* Cadence SystemVerilog Direct Programming Interface (DPI) interface config\n\t* Cypress KitProg interface config\n\t* Digilent SMT2 NC interface config\n\t* DLN-2 example of Linux GPIOD interface config\n\t* FTDI C232HM interface config\n\t* HIE JTAG Debugger interface config\n\t* In-Circuit's ICprog interface config\n\t* isodebug isolated JTAG/SWD+UART interface config\n\t* Mellanox rshim USB or PCIe interface config\n\t* Nuvoton Nu-Link interface config\n\t* NXP IMX GPIO mmap based interface config\n\t* Steppenprobe open hardware interface config\n\t* TI XDS110 interface config\n\nServer Layer:\n\t* 64 bit address support\n\t* default bind to IPv4 localhost\n\t* gdb: allow multiple connections\n\t* gdb: architecture element support\n\t* gdb: vCont, vRun support\n\t* telnet: handle Ctrl+A, Ctrl+E and Ctrl+K\n\nRTOS:\n\t* Chromium-EC rtos support\n\t* hwthread pseudo rtos support\n\t* NuttX rtos support\n\t* RIOT rtos support\n\nDocumentation:\n\t* Improve STM32 flash driver\n\t* Various typo fix and improvements\n\nBuild and Release:\n\t* Add libutil to support jimtcl version 0.80\n\t* Clang warning fixes\n\t* GitHub workflow for Win32 snapshot binaries\n\t* Handle Tcl return values consistently\n\t* Mitigation for CVE-2018-5704: Prevent some forms of Cross\n          Protocol Scripting attacks\n\t* Support for libftdi 1.5\n\t* Travis-CI basic support\n\t* Update libjaylink to version 0.2.0\n\t* Update jimtcl to version 0.79\n\t* Use external (optional) library capstone for ARM and AARCH64 disassembly\n\n\nThis release also contains a number of other important functional and\ncosmetic bugfixes. For more details about what has changed since the\nlast release, see the git repository history:\n\nhttp://sourceforge.net/p/openocd/code/ci/v0.11.0/log/?path=\n\n\nFor older NEWS, see the NEWS files associated with each release\n(i.e. NEWS-<version>).\n\nFor more information about contributing test reports, bug fixes, or new\nfeatures and device support, please read the new Developer Manual (or\nthe BUGS and PATCHES.txt files in the source archive).\n"
        },
        {
          "name": "NEWS-0.12.0",
          "type": "blob",
          "size": 5.0302734375,
          "content": "This file includes highlights of the changes made in the OpenOCD\nsource archive release.\n\nJTAG Layer:\n\t* add default to adapter speed when unspecified (100 kHz)\n\t* AM335X gpio (BeagleBones) adapter driver\n\t* BCM2835 support for SWD\n\t* Cadence Virtual Debug (vdebug) adapter driver\n\t* CMSIS-DAP support for SWO and SWD multidrop\n\t* Espressif USB JTAG Programmer adapter driver\n\t* Remote bitbang support for Windows host\n\t* ST-LINK add TCP server support to adapter driver\n\t* SWD multidrop support\n\nBoundary Scan:\n\nTarget Layer:\n\t* aarch64: support watchpoints\n\t* arm: support independent TPIU and SWO for trace\n\t* arm adi v5: support Large Physical Address Extension\n\t* arm adi v6: support added, for jtag and swd transport\n\t* cortex_a: support watchpoints\n\t* elf 64bit load support\n\t* Espressif: support ESP32, ESP32-S2 and ESP32-S3 cores\n\t* semihosting: support user defined operations\n\t* Xtensa: support Xtensa LX architecture via JTAG and ADIv5 DAP\n\nFlash Layer:\n\t* Atmel/Microchip SAM E51G18A, E51G19A, R35J18B, LAN9255 support\n\t* GigaDevice GD32E23x, GD32F1x0/3x0, GD32VF103 support\n\t* Nuvoton NPCX series support\n\t* onsemi RSL10 support\n\t* Raspberry Pi Pico RP2040 support\n\t* ST BlueNRG-LPS support\n\t* ST STM32 G05x, G06x, G0Bx, G0Cx, U57x, U58x, WB1x, WL5x support\n\t* ST STM32 G0, G4, L4, L4+, L5, WB, WL OTP support\n\nBoard, Target, and Interface Configuration Scripts:\n\t* Ampere Computing eMAG8180, Altra (\"Quicksilver\") and Altra Max (\"Mystique\") board config\n\t* Cadence KC705 FPGA (Xtensa Development Platform) via JTAG and ADIv5 DAP board config\n\t* Digilent Nexys Video board config\n\t* Espressif ESP32 ETHERNET-KIT and WROVER-KIT board config\n\t* Espressif ESP32 via ESP USB Bridge generic board config\n\t* Espressif ESP32-S2 Kaluga 1 board config\n\t* Espressif ESP32-S2 with ESP USB Bridge board config\n\t* Espressif ESP32-S3 example board config\n\t* Kontron SMARC-sAL28 board config\n\t* LambdaConcept ECPIX-5 board config\n\t* Microchip ATSAMA5D27-SOM1-EK1 board config\n\t* Microchip EVB-LAN9255 board config\n\t* Microchip SAME51 Curiosity Nano board config\n\t* NXP FRDM-K64F, LS1046ARDB and LS1088ARDB board config\n\t* NXP RT6XX board config\n\t* Olimex H405 board config\n\t* Radiona ULX3S board config\n\t* Raspberry Pi 3 and Raspberry Pi 4 model B board config\n\t* Raspberry Pi Pico-Debug board config\n\t* Renesas R-Car V3U Falcon board config\n\t* ST BlueNRG-LPS steval-idb012v1 board config\n\t* ST NUCLEO-8S208RB board config\n\t* ST NUCLEO-G031K8, NUCLEO-G070RB, NUCLEO-G071RB board config\n\t* ST NUCLEO-G431KB, NUCLEO-G431RB, NUCLEO-G474RE board config\n\t* ST STM32MP13x-DK board config\n\t* TI AM625 EVM, AM642 EVM and AM654 EVM board config\n\t* TI J721E EVM, J721S2 EVM and J7200 EVM board config\n\t* Ampere Computing eMAG, Altra (\"Quicksilver\") and Altra Max (\"Mystique\") target config\n\t* Cadence Xtensa generic and Xtensa VDebug target config\n\t* Broadcom BCM2711, BCM2835, BCM2836 and BCM2837 target config\n\t* Espressif ESP32, ESP32-S2 and ESP32-S3 target config\n\t* Microchip ATSAMA5D2 series target config\n\t* NanoXplore NG-Ultra SoC target config\n\t* NXP IMX8QM target config\n\t* NXP LS1028A, LS1046A and LS1088A target config\n\t* NXP RT600 (Xtensa HiFi DSP) target config\n\t* onsemi RSL10 target config\n\t* Raspberry Pi Pico RP2040 target config\n\t* Renesas R8A779A0 V3U target config\n\t* Renesas RZ/Five target config\n\t* Renesas RZ/G2 MPU family target config\n\t* Rockchip RK3399 target config\n\t* ST BlueNRG-LPS target config\n\t* ST STM32MP13x target config\n\t* TI AM625, AM654, J721E and J721S2 target config\n\t* Ashling Opella-LD interface config\n\t* Aspeed AST2600 linuxgpiod based interface config\n\t* Blinkinlabs JTAG_Hat interface config\n\t* Cadence Virtual Debug (vdebug) interface config\n\t* Espressif ESP32-S2 Kaluga 1 board's interface config\n\t* Espressif USB Bridge jtag interface config\n\t* Infineon DAP miniWiggler V3 interface config\n\t* PLS SPC5 interface config\n\t* Tigard interface config\n\t* Lattice MachXO3 family FPGA config\n\nServer Layer:\n\t* GDB: add per-target remote protocol extensions\n\t* GDB: more 'Z' packets support\n\t* IPDBG JtagHost server functionality\n\t* semihosting: I/O redirection to TCP server\n\t* telnet: support for command's autocomplete\n\nRTOS:\n\t* 'none' rtos support\n\t* Zephyr rtos support\n\nDocumentation:\n\nBuild and Release:\n\t* Add json extension to jimtcl build\n\t* Drop dependency from libusb0\n\t* Drop repository repo.or.cz for submodules\n\t* Move gerrit to https://review.openocd.org/\n\t* Require autoconf 2.69 or newer\n\t* Update jep106 to revision JEP106BF.01\n\t* Update jimtcl to version 0.81\n\t* Update libjaylink to version 0.3.1\n\t* New configure flag '--enable-jimtcl-maintainer' for jimtcl build\n\n\nThis release also contains a number of other important functional and\ncosmetic bugfixes. For more details about what has changed since the\nlast release, see the git repository history:\n\nhttp://sourceforge.net/p/openocd/code/ci/v0.12.0/log/?path=\n\n\nFor older NEWS, see the NEWS files associated with each release\n(i.e. NEWS-<version>).\n\nFor more information about contributing test reports, bug fixes, or new\nfeatures and device support, please read the new Developer Manual (or\nthe BUGS and PATCHES.txt files in the source archive).\n"
        },
        {
          "name": "NEWS-0.2.0",
          "type": "blob",
          "size": 3.60546875,
          "content": "The OpenOCD 0.2.0 source archive release includes numerous improvements\nthat were made since the initial 0.1.0 source archive release.  Many\ncontributors helped make this release a great success, and the community\nof developers and maintainers look forward to any response.\n\nIn addition to the list of changes below, countless bug fixing and\ncleaning was performed across the tree.  Various TCL command parameters\nmust past stricter value checks, and many more error conditions have\nbeen handled correctly.  These efforts helped to make the 0.2.0 release\nmore stable and robust, though some changes may expose latent bugs in\nyour existing configuration scripts.\n\nThis release does not maintain backward compatibility in all respects,\nso some target or configuration scripts may need to be updated.  In some\ncases, you may also see warnings; resolve those, because they indicate\ncommands that will be removed in the future.\n\nThe following areas of OpenOCD functionality changed in this release:\n\nJTAG Layer:\n- Improves modularity: core, TCL, driver commands, and interface have\n  been separated, encapsulated, and documented for developers.  Mostly.\n- Improves JTAG TAP transition tables:\n   * Makes TAP paths variable length, rather than being fixed at 7 steps.\n   * Fixes problems with some targets that did not like longer paths.\n- Improves JTAG driver/minidriver modularity and encapsulation.\n- New drivers:\n   * Adds stub minidriver for developing new embedded JTAG interfaces.\n- Improves drivers:\n   * ft2232+ftd2xx:\n      + Adds initial high-speed device support: --enable-ftd2xx-highspeed\n      + Supports more types of FTDI-based devices.\n   * jlink:\n      + Works with more versions of the firmware (v3 and newer)\n      + Supports dynamically detects device capabilities and limits\n   * vsllink:\n      + Supports very long scan chains\n   * amtjtagaccel:\n      + Fixes broken ID code detection problems.\n\nTarget Layer:\n- New devices: AVR, FA526\n- Improved support: ARM ADI, ARM11, MIPS\n- Numerous other bug fixes and improvements\n\nFlash Layer:\n- Improved drivers: mflash\n- New drivers: AT91SAM3, AVR, Davinci NAND\n\nBoard, Interface, and Target Configuration Scripts:\n- Many new and improved targets and boards are now available.\n- Better separation of \"board\" and \"target\" configuration\n- Moved all TCL files to top-level \"tcl\" directory in the source tree\n- Installation moved from '$pkglibdir/' to '$pkgdatadir/scripts/'.\n- Site-specific files should be installed under '$pkgdatadir/site/';\n  files that exist this tree will be used in preference to default\n  distribution configurations in '$pkgdatadir/scripts/'.\n\nDocumentation:\n- Updated User Guide:     http://openocd.berlios.de/doc/html/index.html\n   * Partially re-written and re-organized.\n   * Standardized presentation for all commands.\n   * Covers many drivers and commands that were previously omitted.\n   * New index for commands and drivers.\n- Added Developer Manual: http://openocd.berlios.de/doc/doxygen/index.html\n   * Now includes architecture, technical primers, style guides, and more.\n   * Available in-tree and on-line.\n\nBuild and Release:\n- Increased configuration and compilation warning coverage.\n   * Use --disable-werror to work around build errors caused by warnings.\n- Use libtool to produce helper libraries as a step toward \"libopenocd\".\n- New processes and scripting to facilitate future source releases.\n\nFor more details about what has changed since 0.1.0, see the ChangeLog\nassociated with this release.\n\nFor more information about contributing test reports, bug fixes, or new\nfeatures and device support, please read the new Developer Manual (or\nthe BUGS and PATCHES files in the source archive).\n"
        },
        {
          "name": "NEWS-0.3.0",
          "type": "blob",
          "size": 3.1884765625,
          "content": "This file should include highlights of the changes made in the\nOpenOCD openocd-0.3.0 source archive release.  See the repository\nhistory for details about what changed, including bugfixes and\nother issues not mentioned here.\n\nJTAG Layer:\n    FT2232H (high speed USB) support doesn't need separate configuration\n    New FT2232H JTAG adapters:  Amontec, Olimex, Signalyzer\n    New reset_config options for SRST gating the JTAG clock (or not)\n    TAP declaration no longer requires ircapture and mask attributes\n    Scan chain setup should be more robust, with better diagnostics\n    New TAP events:\n\t\"post-reset\" for TAP-invariant setup code (TAPs not usable yet)\n\t\"setup\" for use once TAPs are addressable (e.g. with ICEpick)\n    Overridable Tcl \"init_reset\" and \"jtag_init\" procedures\n    Simple \"autoprobe\" mechanism to help simplify server setup\n\nBoundary Scan:\n    SVF bugfixes ... parsing fixes, better STATE switch conformance\n    XSVF bugfixes ... be more correct, handle Xilinx tool output\n\nTarget Layer:\n    Warn on use of obsolete numeric target IDs\n    New commands for use with Cortex-M3 processors:\n\t\"cortex_m3 disassemble\" ... Thumb2 disassembly (UAL format)\n\t\"cortex_m3 vector_catch\" ... traps certain hardware faults\n\t\twithout tying up breakpoint resources\n    If you're willing to help debug it\n\tVERY EARLY Cortex-A8 and ARMv7A support\n\tUpdated BeagleBoard.org hardware support\n\tyou may need to explicitly \"reset\" after connect-to-Beagle\n    New commands for use with XScale processors: \"xscale vector_table\"\n    ARM\n\tbugfixes to single-stepping Thumb code\n\tETM: unavailable registers are not listed\n\tETB, ETM: report actual hardware status\n    ARM9\n\tname change:  \"arm9 vector_catch\" not \"arm9tdmi vector_catch\"\n    ARM11\n\tsingle stepping support for i.MX31\n\tbugfix for missing \"arm11\" prefix on \"arm11 memwrite ...\"\n    GDB support\n\tgdb_attach command is gone\n\nFlash Layer:\n    The lpc2000 driver handles the new NXP LPC1700 (Cortex-M3) chips\n    New drivers:\n\tlpc2900, for NXP LPC2900 chips (ARM968 based)\n\tmx3_nand, for imx31\n    New \"last\" flag for NOR \"flash erase_sector\" and \"flash protect\"\n    The \"nand erase N\" command now erases all of bank N\n    Speed up davinci_nand by about 3x\n\nBoard, Target, and Interface Configuration Scripts:\n    Amontec JTAGkey2 support\n    Cleanup and additions for the TI/Luminary Stellaris scripts\n    LPC1768 target (and flash) support\n\tKeil MCB1700 eval board\n    Samsung s3c2450\n\tMini2440 board\n    Numeric TAP and Target identifiers now trigger warnings\n    PXA255 partially enumerates\n\nDocumentation:\n    Capture more debugging and setup advice\n    Notes on target source code changes that may help debugging\n\nBuild and Release:\n    Repository moved from SVN at Berlios to GIT at SourceForge\n    Clean builds on (32-bit) Cygwin\n    Clean builds on 64-bit MinGW\n\nFor more details about what has changed since the last release,\nsee the git repository history.  With gitweb, you can browse that\nin various levels of detail.\n\nFor older NEWS, see the NEWS files associated with each release\n(i.e. NEWS-<version>).\n\nFor more information about contributing test reports, bug fixes, or new\nfeatures and device support, please read the new Developer Manual (or\nthe BUGS and PATCHES files in the source archive).\n"
        },
        {
          "name": "NEWS-0.4.0",
          "type": "blob",
          "size": 3.62109375,
          "content": "This file includes highlights of the changes made in the\nOpenOCD 0.4.0 source archive release.  See the repository\nhistory for details about what changed, including bugfixes\nand other issues not mentioned here.\n\nJTAG Layer:\n\tSupport KT-Link JTAG adapter.\n\tSupport USB-JTAG, Altera USB-Blaster and compatibles.\n\nBoundary Scan:\n\nTarget Layer:\n\tGeneral\n\t\t- Removed commands which have been obsolete for at least\n\t\t  a year (from both documentation and, sometimes, code).\n\t\t- new \"reset-assert\" event, for systems without SRST\n\tARM\n\t\t- supports \"reset-assert\" event (except on Cortex-M3)\n\t\t- renamed \"armv4_5\" command prefix as \"arm\"\n\t\t- recognize TrustZone \"Secure Monitor\" mode\n\t\t- \"arm regs\" command output changed\n\t\t- register names use \"sp\" not \"r13\"\n\t\t- add top-level \"mcr\" and \"mrc\" commands, replacing\n\t\t  various core-specific operations\n\t\t- basic semihosting support (ARM7/ARM9 only, for now)\n\tARM11\n\t\t- Should act much more like other ARM cores:\n\t\t   * Preliminary ETM and ETB hookup\n\t\t   * accelerated \"flash erase_check\"\n\t\t   * accelerated GDB memory checksum\n\t\t   * support \"arm regs\" command\n\t\t   * can access all core modes and registers\n\t\t   * watchpoint support\n\t\t- Shares some core debug code with Cortex-A8\n\tCortex-A8\n\t\t- Should act much more like other ARM cores:\n\t\t   * support \"arm regs\" command\n\t\t   * can access all core modes and registers\n\t\t   * watchpoint support\n\t\t- Shares some core debug code with ARM11\n\tCortex-M3\n\t\t- Exposed DWT registers like cycle counter\n\t\t- vector_catch settings not clobbered by resets\n\t\t- no longer interferes with firmware's fault handling\n\tETM, ETB\n\t\t- \"trigger_percent\" command moved ETM --> ETB\n\t\t- \"etm trigger_debug\" command added\n\tMIPS\n\t\t- use fastdata writes\n\tFreescale DSP563xx cores (partial support)\n\nFlash Layer:\n\t'flash bank' and 'nand device' take <bank_name> as first argument.\n\tWith this, flash/NAND commands allow referencing banks by name:\n\t\t- <bank_name>: reference the bank with its defined name\n\t\t- <driver_name>[.N]: reference the driver's Nth bank\n\tNew 'nand verify' command to check bank against an image file.\n\tThe \"flash erase_address\" command now rejects partial sectors;\n\t\tpreviously it would silently erase extra data.  If you\n\t\twant to erase the rest of the first and/or last sectors\n\t\tinstead of failing, you must pass an explicit \"pad\" flag.\n\tNew at91sam9 NAND controller driver.\n\tNew s3c64xx NAND controller driver.\n\nBoard, Target, and Interface Configuration Scripts:\n\tARM9\n\t\t- ETM and ETB hookup for iMX2* targets\n\tAdd $HOME/.openocd to the search path.\n\tHandle Rev C of LM3S811 eval boards.\n\t\t- use \"luminary-lm3s811.cfg\" for older boards\n\t\t- use \"luminary.cfg\" for RevC and newer\n\nCore Jim/TCL Scripting:\n\tNew 'usage' command to provide terse command help.\n\tImproved command 'help' command output (sorted and indented).\n\tImproved command handling:\n\t\t- Most boolean settings now accept any of the following:\n\t\t  on/off, enable/disable, true/false, yes/no, 1/0\n\t\t- More error checking and reporting.\n\nDocumentation:\n\tNew built-in command development documentation and primer.\n\nBuild and Release:\n\tUse --enable-doxygen-pdf to build PDF developer documentation.\n\tConsider upgrading to libftdi 0.17 if you use that library; it\n\t\tincludes bugfixes which improve FT2232H support.\n\nFor more details about what has changed since the last release,\nsee the git repository history.  With gitweb, you can browse that\nin various levels of detail.\n\nFor older NEWS, see the NEWS files associated with each release\n(i.e. NEWS-<version>).\n\nFor more information about contributing test reports, bug fixes, or new\nfeatures and device support, please read the new Developer Manual (or\nthe BUGS and PATCHES.txt files in the source archive).\n"
        },
        {
          "name": "NEWS-0.5.0",
          "type": "blob",
          "size": 2.626953125,
          "content": "This file includes highlights of the changes made in the\nOpenOCD 0.5.0 source archive release.  See the repository\nhistory for details about what changed, including bugfixes\nand other issues not mentioned here.\n\nJTAG Layer:\n\tNew driver for \"Bus Pirate\"\n\tRename various commands so they're not JTAG-specific\n\t   There are migration procedures for most of these, but you should\n\t   convert your scripts to the new names, since those procedures\n\t   will not be around forever.\n\t\tjtag jinterface ... is now adapter_name\n\t   \tjtag_khz\t... is now adapter_khz\n\t\tjtag_nsrst_delay ... is now adapter_nsrst_delay\n\t\tjtag_nsrst_assert_width ... is now adapter_nsrst_assert_width\n\tSupport Voipac VPACLink JTAG Adapter.\n\nBoundary Scan:\n\nTransport framework core ... supporting future work for SWD, SPI, and other\nnon-JTAG ways to debug targets or program flash.\n\nTarget Layer:\n\tARM:\n\t\t- basic semihosting support for ARMv7M.\n\t\t- renamed \"armv7m\" command prefix as \"arm\"\n\tMIPS:\n\t\t- \"ejtag_srst\" variant removed. The same functionality is\n\t\t  obtained by using \"reset_config none\".\n\t\t- added PIC32MX software reset support, this means srst is not\n\t\t  required to be connected anymore.\n\tOTHER:\n\t\t- preliminary AVR32 AP7000 support.\n\nFlash Layer:\n\tNew \"stellaris recover\" command, implements the procedure\n\t\tto recover locked devices (restoring non-volatile\n\t\tstate to the factory defaults, including erasing\n\t\tthe flash and its protection bits, and possibly\n\t\tre-enabling hardware debugging).\n\tPIC32MX now uses algorithm for flash programming, this\n\t\thas increased the performance by approx 96%.\n\tNew 'pic32mx unlock' cmd to remove readout protection.\n\tNew STM32 Value Line Support.\n\tNew 'virtual' flash driver, used to associate other addresses\n\t\twith a flash bank. See pic32mx.cfg for usage.\n\tNew iMX27 NAND flash controller driver.\n\nBoard, Target, and Interface Configuration Scripts:\n\tSupport IAR LPC1768 kickstart board (by Olimex)\n\tSupport Voipac PXA270/PXA270M module.\n\tNew $PARPORTADDR tcl variable used to change default\n\t\tparallel port address used.\n\tRemove lm3s811.cfg; use \"stellaris.cfg\" instead\n\nCore Jim/TCL Scripting:\n\tNew \"add_script_search_dir\" command, behaviour is the same\n\t\tas the \"-s\" cmd line option.\n\nDocumentation:\n\nBuild and Release:\n\nFor more details about what has changed since the last release,\nsee the git repository history.  With gitweb, you can browse that\nin various levels of detail.\n\nFor older NEWS, see the NEWS files associated with each release\n(i.e. NEWS-<version>).\n\nFor more information about contributing test reports, bug fixes, or new\nfeatures and device support, please read the new Developer Manual (or\nthe BUGS and PATCHES.txt files in the source archive).\n"
        },
        {
          "name": "NEWS-0.6.0",
          "type": "blob",
          "size": 1.71484375,
          "content": "This file includes highlights of the changes made in the\nOpenOCD  source archive release.  See the\nrepository history for details about what changed, including\nbugfixes and other issues not mentioned here.\n\nJTAG Layer:\n\tNew STLINK V1/V2 JTAG/SWD adapter support.\n\tNew OSJTAG adapter support.\n\tNew Tincantools Flyswatter2 support.\n\tImproved ULINK driver.\n\tImproved RLINK driver.\n\tSupport for adapters based on FT232H chips.\n\tNew experimental driver for FTDI based adapters, using libusb-1.0 in asynchronous mode.\n\nBoundary Scan:\n\nTarget Layer:\n\tNew Cortex-M0 support.\n\tNew Cortex-M4 support.\n\tImproved Working area algorithm.\n\tNew RTOS support. Currently linux, FreeRTOS, ThreadX and eCos.\n\tConnecting under reset to Cortex-Mx and MIPS chips.\n\nFlash Layer:\n\tNew SST39WF1601 support.\n\tNew EN29LV800BB support.\n\tNew async algorithm support for selected targets, stm32, stellaris and pic32.\n\tNew Atmel SAM3S, SAM3N support.\n\tNew ST STM32L support.\n\tNew Microchip PIC32MX1xx/2xx support.\n\tNew Freescale Kinetis K40 support.\n\nBoard, Target, and Interface Configuration Scripts:\n\tSupport Dangerous Prototypes Bus Blaster.\n\tSupport ST SPEAr Family.\n\tSupport Gumstix Verdex boards.\n\tSupport TI Beaglebone.\n\nDocumentation:\n\tImproved HACKING info for submitting patches.\n\tFixed numerous broken links.\n\nBuild and Release:\n\nFor more details about what has changed since the last release,\nsee the git repository history.  With gitweb, you can browse that\nin various levels of detail.\n\nFor older NEWS, see the NEWS files associated with each release\n(i.e. NEWS-<version>).\n\nFor more information about contributing test reports, bug fixes, or new\nfeatures and device support, please read the new Developer Manual (or\nthe BUGS and PATCHES.txt files in the source archive).\n"
        },
        {
          "name": "NEWS-0.7.0",
          "type": "blob",
          "size": 1.2255859375,
          "content": "This file includes highlights of the changes made in the\nOpenOCD  source archive release.  See the\nrepository history for details about what changed, including\nbugfixes and other issues not mentioned here.\n\nJTAG Layer:\n\tNew TI ICDI adapter support.\n\tSupport Latest OSBDM firmware.\n\tImproved MIPS EJTAG Support.\n\nBoundary Scan:\n\nTarget Layer:\n\tNew ARMv7R and Cortex-R4 support.\n\tAdded ChibiOS/RT support.\n\nFlash Layer:\n\tNew NXP LPC1850 support.\n\tNew NXP LPC4300 support.\n\tNew NXP SPIFI support.\n\tNew Energy Micro EFM32 support.\n\tNew ST STM32W support.\n\tNew ST STM32f2 write protection and lock/unlock support.\n\tAbility to override STM32 flash bank size.\n\nBoard, Target, and Interface Configuration Scripts:\n\tSupport Freescale i.MX6 series targets.\n\nDocumentation:\n\tNew MIPS debugging info.\n\nBuild and Release:\n\nFor more details about what has changed since the last release,\nsee the git repository history.  With gitweb, you can browse that\nin various levels of detail.\n\nFor older NEWS, see the NEWS files associated with each release\n(i.e. NEWS-<version>).\n\nFor more information about contributing test reports, bug fixes, or new\nfeatures and device support, please read the new Developer Manual (or\nthe BUGS and PATCHES.txt files in the source archive).\n"
        },
        {
          "name": "NEWS-0.8.0",
          "type": "blob",
          "size": 3.7294921875,
          "content": "This file includes highlights of the changes made in the OpenOCD\nsource archive release.\n\nJTAG Layer:\n\t* New CMSIS-DAP driver\n\t* Andes AICE debug adapter support\n\t* New OpenJTAG driver\n\t* New BCM2835 (RaspberryPi) driver\n\t* JTAG VPI client driver (for OpenRISC Reference Platform SoC)\n\t* Xilinx BSCAN_* for OpenRISC support\n\t* ST-LINKv2-1 support\n\t* ST-LINKv2 SWO tracing support (UART emulation)\n\t* JLink-OB (onboard) support\n\t* Altera USB Blaster driver rewrite, initial Blaster II\n\t  support\n\t* ULINK driver ported to libusb-1.0, OpenULINK build fixes\n\t* Support up to 64 bit IR lengths\n\t* SVF playback (FPGA programming) fixes\n\t* \"ftdi\" interface driver got extensive testing and is now\n\t  recommended over the old ft2232 implementation\n\nBoundary Scan:\n\nTarget Layer:\n\t* New target: Andes nds32\n\t* New target: OpenRISC OR1K\n\t* New target: Intel Quark X10xx\n\t* MIPS EJTAG 1.5/2.0 support\n\t* MIPS speed improvements\n\t* Cortex-M, Cortex-A (MEM-AP, APB-AP) targets working with BE\n\t  hosts now\n\t* XScale vector_catch support, reset fixes\n\t* dsp563xx ad-hoc breakpoint/watchpoint support\n\t* RTOS support for embKernel\n\t* Target profiling improvements\n\t* Memory access functions testbench\n\nFlash Layer:\n\t* STM32 family sync with reference manuals, other bugfixes\n\t* STM32F401, STM32F07x support\n\t* Atmel SAM4L, SAMG5x support\n\t* at91sam3sd8{a,b}, at91sam3s8{a,b,c}, at91sam4s,\n\t  at91sam3n0{a,b,0a,0b} support, bugfixes\n\t* Atmel SAMD support\n\t* Milandr 1986Ð’Ð•* support\n\t* Kinetis KL, K21 support\n\t* Nuvoton NuMicro MINI5{1,2,4} support\n\t* Nuvoton NUC910 series support\n\t* NXP LPC43xx, LPC2000 fixes\n\t* NXP LPC800, LPC810 support\n\t* More ATmega parts supported\n\t* Fujitsu MB9Ax family support\n\t* EFM32 Wonder Gecko family support\n\t* Nordic nRF51 support\n\nBoard, Target, and Interface Configuration Scripts:\n\t* STM32W108xx generic target config\n\t* STM32F429 discovery board config\n\t* STM32 Nucleo boards configs\n\t* DENX M53EVK board config\n\t* Altera Cyclone V SoC, SoCkit config\n\t* New TI Launchpads board configs\n\t* TI am43xx devices, AM437x GP EVM, AM438x ePOS EVM board\n\t  configs\n\t* Marvell Armada 370 family initial support\n\t* TI TMDX570LS31USB (TMS570, Cortex-R4) support scripts\n\t* Freescale FRDM-KL25Z, KL46Z board configs\n\t* Digilent Zedboard config\n\t* Asus RT-N16, Linksys WRT54GL, BT HomeHub board configs\n\t* Atmel Xplained initial support\n\t* Broadcom bcm28155_ap board config\n\t* TUMPA, TUMPA Lite interface configs\n\t* Digilent JTAG-SMT2 interface config\n\t* New RAM testing functions\n\t* Easy-to-use firmware recovery helpers targetting ordinary\n\t  users with common equipment\n\nServer Layer:\n\t* Auto-generation of GDB target description for ARMv7-M,\n\t  ARM4, nds32, OR1K, Quark\n\t* GDB File-I/O Remote Protocol extension support\n\t* Default GDB flashing events handlers to initialise and reset\n\t  the target automatically when \"load\" is used\n\nDocumentation:\n\t* Extensive README* changes\n\t* The official User's Guide was proofread\n\t* Example cross-build script\n\t* RTOS documentation improvements\n\t* Tcl RPC documentation and examples added\n\nBuild and Release:\n\t* *BSD, OS X, clang, ARM, windows build fixes\n\t* New pkg-config support changes the way libusb (and other\n\t  dependencies) are handled. Many adapter drivers are now\n\t  selected automatically during the configure stage.\n\n\nThis release also contains a number of other important functional and\ncosmetic bugfixes. For more details about what has changed since the\nlast release, see the git repository history:\n\nhttp://sourceforge.net/p/openocd/code/ci/v0.8.0/log/?path=\n\n\nFor older NEWS, see the NEWS files associated with each release\n(i.e. NEWS-<version>).\n\nFor more information about contributing test reports, bug fixes, or new\nfeatures and device support, please read the new Developer Manual (or\nthe BUGS and PATCHES.txt files in the source archive).\n"
        },
        {
          "name": "NEWS-0.9.0",
          "type": "blob",
          "size": 4.1279296875,
          "content": "This file includes highlights of the changes made in the OpenOCD\nsource archive release.\n\nJTAG Layer:\n\t* SWD support with FTDI, Versaloon, J-Link, sysfsgpio\n\t* CMSIS-DAP massive speed and stability improvements\n\t* Versaloon driver ported to libusb-1.0\n\t* STLink can reestablish communication with a target that was\n          disconnected or rebooted\n\t* STLink FAULT and WAIT SWD handling improved\n\t* New hla_serial command to distinguish between several HLA\n          adapters attached to a single machine\n\t* Serial number support for CMSIS-DAP and J-Link adapters\n\t* Support for more J-Link adapters\n\t* TAP autoprobing improvements\n\t* Big speedup for SVF playback with USB Blaster\n\nBoundary Scan:\n\nTarget Layer:\n\t* Stability improvements for targets that get disconnected or\n          rebooted during a debug session\n\t* MIPS speed and reliability improvements\n\t* MIPS 1.5/2.0 fixes\n\t* ARMv7-R improvements\n\t* Cortex-A improvements, A7, A15 MPCores support\n\t* FPU support for ARMv7-M (Cortex-M4F)\n\t* TPIU/ITM support (including SWO/SWV tracing), can be\n          captured with external tools or STLink\n\t* JTAG Serial Port (Advanced Debug System softcore) support\n\t* Profiling support for OpenRISC\n\t* ChibiOS/RT 3.0 support (with and without FPU)\n\t* FreeRTOS current versions support\n\t* Freescale MQX RTOS support\n\t* GDB target description support for MIPS\n\t* The last created target is auto-selected as the current\n\nFlash Layer:\n\t* nRF51 async loader to improve flashing performance and stability\n\t* Cypress PSoC 41xx/42xx and CCG1 families flash driver\n\t* Silabs SiM3 family flash driver\n\t* Marvell Wireless Microcontroller SPI flash driver\n\t* Kinetis mass erase (part unsecuring) implemented\n\t* lpcspifi stability fixes\n\t* STM32 family sync with reference manuals, L0 support, bugfixes\n\t* LPC2000 driver automatically determines part and flash size\n\t* NXP LPC11(x)xx, LPC13xx, LPC15xx, LPC8xx, LPC5410x, LPC407x support\n\t* Atmel SAMD, SAMR, SAML21 devices support\n\t* Atmel SAM4E16 support\n\t* ZeroGecko family support\n\t* TI Tiva C Blizzard and Snowflake families support\n\t* Nuvoton NuMicro M051 support\n\t* EZR32 support in EFM32 driver\n\nBoard, Target, and Interface Configuration Scripts:\n\t* Normal target configs can work with HLA (STLink, ICDI) adapters\n\t* STM32 discovery and Nucleo boards configs\n\t* Gumstix AeroCore board config\n\t* General Plus GP326XXXA target config\n\t* Micrel KS869x target config\n\t* ASUS RT-N66U board config\n\t* Atmel SAM4E-EK board config\n\t* Atmel AT91SAM4L proper reset handling implemented\n\t* TI OMAP/AM 3505, 3517 target configs\n\t* nRF51822-mKIT board config\n\t* RC Module Ðš1879Ð¥Ð‘1Ð¯ target config\n\t* TI TMDX570LS20SUSB board config\n\t* TI TMS570 USB Kit board config\n\t* TI CC2538, CC26xx target configs\n\t* TI AM437x major config improvements, DDR support\n\t* TI AM437X IDK board config\n\t* TI SimpleLink Wi-Fi CC3200 LaunchPad configs\n\t* Silicon Labs EM357, EM358 target configs\n\t* Infineon XMC1000, XMC4000 family targets and boards configs\n\t* Atheros AR9331 target config\n\t* TP-LINK TL-MR3020 board config\n\t* Alphascale asm9260t target and eval kit configs\n\t* Olimex SAM7-LA2 (AT91SAM7A2) board config\n\t* EFM32 Gecko boards configs\n\t* Spansion FM4 target and SK-FM4-176L-S6E2CC board configs\n\t* LPC1xxx target configs were restructured\n\t* IoT-LAB debug adapter config\n\t* DP BusBlaster KT-Link compatible config\n\nServer Layer:\n\t* Polling period can be configured\n\t* \"shutdown\" command has an immediate effect\n\t* The \"program\" command doesn't lead to a shutdown by\n          default, use optional \"exit\" parameter for the old behaviour\n\t* Proper OS signal handling was implemented\n\t* Async target notifications for the Tcl RPC\n\nDocumentation:\n\nBuild and Release:\n\n\nThis release also contains a number of other important functional and\ncosmetic bugfixes. For more details about what has changed since the\nlast release, see the git repository history:\n\nhttp://sourceforge.net/p/openocd/code/ci/v0.9.0/log/?path=\n\n\nFor older NEWS, see the NEWS files associated with each release\n(i.e. NEWS-<version>).\n\nFor more information about contributing test reports, bug fixes, or new\nfeatures and device support, please read the new Developer Manual (or\nthe BUGS and PATCHES.txt files in the source archive).\n"
        },
        {
          "name": "NEWTAPS",
          "type": "blob",
          "size": 3.8720703125,
          "content": "Reporting Unknown JTAG TAP IDS\n------------------------------\n\nIf OpenOCD reports an UNKNOWN or Unexpected Tap ID please report it to\nthe development mailing list - However - keep reading.\n\nopenocd-devel@lists.sourceforge.net.\n\n========================================\n\nAbout \"UNEXPECTED\" tap ids.\n\n  Before reporting an \"UNEXPECTED TAP ID\" - take a closer look.\n  Perhaps you have your OpenOCD configured the wrong way, maybe you\n  have the tap configured the wrong way? Or something else is wrong.\n  (Remember: OpenOCD does not stop if the tap is not present)\n\n  This \"tap id check\" is there for a purpose.\n  The goal is to help get the *right* configuration.\n\nThe idea is this:\n\n  Every JTAG tap is suppose to have \"a unique 32bit tap id\" number.\n  They are suppose to be \"sort of unique\" but they are not.  There are\n  no guarantees.\n\nVersion Number Changes:\n\n  Sometimes, the tap ID only differs by VERSION number. If so - it's\n  not a big deal.  Please do report this information.  We'd like to\n  know about it.\n\n  For example\n\nError:  ERROR: Tap: s3c4510.cpu - Expected id: 0x3f0f0f0f, Got: 0x1f0f0f0f\nError:  ERROR: expected: mfg: 0x787, part: 0xf0f0, ver: 0x3\nError:  ERROR:      got: mfg: 0x787, part: 0xf0f0, ver: 0x1\n\n========================================\n\nUpdating the Tap ID number your self\n\n  Why do this? You just want the warning to go away.  And don't want\n  to update your version/instance of OpenOCD.\n\n  On simple systems, to fix this problem, in your \"openocd.cfg\" file,\n  override the tap id.  Depending on the tap, add one of these 3\n  commands:\n\n\tset CPUTAPID   newvalue\n  or\tset BSTAPID    newvalue\n  or\tset FLASHTAPID newvalue\n  or\tset ETMTAPID   newvalue\n\n  Where \"newvalue\" is the new value you are seeing.\n\n  On complex systems, (with many taps and chips) you probably have a\n  custom configuration file. Its is more complicated, you're going to\n  have to read through the configuration files\n\n========================================\n\nWhat to send:\n\nCut & paste the output of OpenOCD that pointed you at this file.\n\nPlease include the VERSION number of OpenOCD you are using.\n\nAnd please include the information below.\n\n========================================\n\nA) The JTAG TAP ID code.\n\nThis is always a 32bit hex number.\n\nExamples:\n    0x1f0f0f0f - is an old ARM7TDMI\n    0x3f0f0f0f - is a newer ARM7TDMI\n    0x3ba00477 - is an ARM Cortex-M3\n\nSome chips have multiple JTAG taps - be sure to list\neach one individually - ORDER is important!\n\n========================================\nB) The maker of the part\n\nExamples:\n    Xilinx, Atmel, ST Micro Systems, Freescale\n\n========================================\nC) The family of parts it belongs to\n\nExamples:\n   \"NXP LPC Series\"\n   \"Atmel SAM7 Series\"\n\n========================================\n\nD) The actual part number on the package\n\n   For example: \"S3C45101x01\"\n\n========================================\n\nE) What type of board it is.\n\nie: a \"commercial off the self eval board\" that one can purchase (as\nopposed to your private internal custom board)\n\nFor example: ST Micro systems has Eval boards, so does Analog Devices\n\nOr - if it is inside something \"hackers like to hack\" that information\nis helpful too.\n\nFor example: A consumer GPS unit or a cellphone\n\n========================================\n\n(F)   The maker of the board\n        ie: Olimex, LogicPD, Freescale(eval board)\n\n========================================\n\n(G)   Identifying information on the board.\n\n      Not good:   \"iar red ST eval board\"\n\n      Really good: \"IAR STR912-SK evaluation board\"\n\n========================================\n\n(H) Are there other interesting (JTAG) chips on the board?\n\n    ie: An FPGA or CPLD ...\n\n========================================\n\n(I) What target config files need updating?\n\n    In fact it's best if you submit a patch with those\n    updates.  Most of the other information listed here\n    is just to help create a good patch.\n\n========================================\n"
        },
        {
          "name": "README",
          "type": "blob",
          "size": 11.5146484375,
          "content": "# Welcome to OpenOCD!\n\nOpenOCD provides on-chip programming and debugging support with a\nlayered architecture of JTAG interface and TAP support including:\n\n- (X)SVF playback to facilitate automated boundary scan and FPGA/CPLD\n  programming;\n- debug target support (e.g. ARM, MIPS): single-stepping,\n  breakpoints/watchpoints, gprof profiling, etc;\n- flash chip drivers (e.g. CFI, NAND, internal flash);\n- embedded TCL interpreter for easy scripting.\n\nSeveral network interfaces are available for interacting with OpenOCD:\ntelnet, TCL, and GDB. The GDB server enables OpenOCD to function as a\n\"remote target\" for source-level debugging of embedded systems using\nthe GNU GDB program (and the others who talk GDB protocol, e.g. IDA\nPro).\n\nThis README file contains an overview of the following topics:\n\n- quickstart instructions,\n- how to find and build more OpenOCD documentation,\n- list of the supported hardware,\n- the installation and build process,\n- packaging tips.\n\n\n# Quickstart for the impatient\n\nIf you have a popular board then just start OpenOCD with its config,\ne.g.:\n\n    openocd -f board/stm32f4discovery.cfg\n\nIf you are connecting a particular adapter with some specific target,\nyou need to source both the jtag interface and the target configs,\ne.g.:\n\n```\nopenocd -f interface/ftdi/jtagkey2.cfg -c \"transport select jtag\" \\\n        -f target/ti_calypso.cfg\n```\n\n```\nopenocd -f interface/stlink.cfg -c \"transport select hla_swd\" \\\n        -f target/stm32l0.cfg\n```\n\nAfter OpenOCD startup, connect GDB with\n\n    (gdb) target extended-remote localhost:3333\n\n\n# OpenOCD Documentation\n\nIn addition to the in-tree documentation, the latest manuals may be\nviewed online at the following URLs:\n\n  OpenOCD User's Guide:\n    http://openocd.org/doc/html/index.html\n\n  OpenOCD Developer's Manual:\n    http://openocd.org/doc/doxygen/html/index.html\n\nThese reflect the latest development versions, so the following section\nintroduces how to build the complete documentation from the package.\n\nFor more information, refer to these documents or contact the developers\nby subscribing to the OpenOCD developer mailing list:\n\n\topenocd-devel@lists.sourceforge.net\n\n## Building the OpenOCD Documentation\n\nBy default the OpenOCD build process prepares documentation in the\n\"Info format\" and installs it the standard way, so that `info openocd`\ncan access it.\n\nAdditionally, the OpenOCD User's Guide can be produced in the\nfollowing different formats:\n\nIf `PDFVIEWER` is set, this creates and views the PDF User Guide.\n\n    make pdf && ${PDFVIEWER} doc/openocd.pdf\n\nIf `HTMLVIEWER` is set, this creates and views the HTML User Guide.\n\n    make html && ${HTMLVIEWER} doc/openocd.html/index.html\n\nThe OpenOCD Developer Manual contains information about the internal\narchitecture and other details about the code:\n\nNote: make sure doxygen is installed, type doxygen --version\n\n    make doxygen && ${HTMLVIEWER} doxygen/index.html\n\n\n# Supported hardware\n\n## JTAG adapters\n\nAM335x, ARM-JTAG-EW, ARM-USB-OCD, ARM-USB-TINY, AT91RM9200, axm0432, BCM2835,\nBus Blaster, Buspirate, Cadence DPI, Cadence vdebug, Chameleon, CMSIS-DAP,\nCortino, Cypress KitProg, DENX, Digilent JTAG-SMT2, DLC 5, DLP-USB1232H,\nembedded projects, Espressif USB JTAG Programmer,\neStick, FlashLINK, FlossJTAG, Flyswatter, Flyswatter2,\nFTDI FT232R, Gateworks, Hoegl, ICDI, ICEBear, J-Link, JTAG VPI, JTAGkey,\nJTAGkey2, JTAG-lock-pick, KT-Link, Linux GPIOD, Lisa/L, LPC1768-Stick,\nMellanox rshim, MiniModule, NGX, Nuvoton Nu-Link, Nu-Link2, NXHX, NXP IMX GPIO,\nOOCDLink, Opendous, OpenJTAG, Openmoko, OpenRD, OSBDM, Presto, Redbee,\nRemote Bitbang, RLink, SheevaPlug devkit, Stellaris evkits,\nST-LINK (SWO tracing supported), STM32-PerformanceStick, STR9-comStick,\nsysfsgpio, Tigard, TI XDS110, TUMPA, Turtelizer, ULINK, USB-A9260, USB-Blaster,\nUSB-JTAG, USBprog, VPACLink, VSLLink, Wiggler, XDS100v2, Xilinx XVC/PCIe,\nXverve.\n\n## Debug targets\n\nARM: AArch64, ARM11, ARM7, ARM9, Cortex-A/R (v7-A/R), Cortex-M (ARMv{6/7/8}-M),\nFA526, Feroceon/Dragonite, XScale.\nARCv2, AVR32, DSP563xx, DSP5680xx, EnSilica eSi-RISC, EJTAG (MIPS32, MIPS64),\nESP32, ESP32-S2, ESP32-S3, Intel Quark, LS102x-SAP, RISC-V, ST STM8,\nXtensa.\n\n## Flash drivers\n\nADUC702x, AT91SAM, AT91SAM9 (NAND), ATH79, ATmega128RFA1, Atmel SAM, AVR, CFI,\nDSP5680xx, EFM32, EM357, eSi-RISC, eSi-TSMC, EZR32HG, FM3, FM4, Freedom E SPI,\nGD32, i.MX31, Kinetis, LPC8xx/LPC1xxx/LPC2xxx/LPC541xx, LPC2900, LPC3180, LPC32xx,\nLPCSPIFI, Marvell QSPI, MAX32, Milandr, MXC, NIIET, nRF51, nRF52 , NuMicro,\nNUC910, Nuvoton NPCX, onsemi RSL10, Orion/Kirkwood, PIC32mx, PSoC4/5LP/6,\nRaspberry RP2040, Renesas RPC HF and SH QSPI,\nS3C24xx, S3C6400, SiM3x, SiFive Freedom E, Stellaris, ST BlueNRG, STM32,\nSTM32 QUAD/OCTO-SPI for Flash/FRAM/EEPROM, STMSMI, STR7x, STR9x, SWM050,\nTI CC13xx, TI CC26xx, TI CC32xx, TI MSP432, Winner Micro w600, Xilinx XCF,\nXMC1xxx, XMC4xxx.\n\n\n# Installing OpenOCD\n\n## A Note to OpenOCD Users\n\nIf you would rather be working \"with\" OpenOCD rather than \"on\" it, your\noperating system or JTAG interface supplier may provide binaries for\nyou in a convenient-enough package.\n\nSuch packages may be more stable than git mainline, where\nbleeding-edge development takes place. These \"Packagers\" produce\nbinary releases of OpenOCD after the developers produces new \"release\"\nversions of the source code. Previous versions of OpenOCD cannot be\nused to diagnose problems with the current release, so users are\nencouraged to keep in contact with their distribution package\nmaintainers or interface vendors to ensure suitable upgrades appear\nregularly.\n\nUsers of these binary versions of OpenOCD must contact their Packager to\nask for support or newer versions of the binaries; the OpenOCD\ndevelopers do not support packages directly.\n\n## A Note to OpenOCD Packagers\n\nYou are a PACKAGER of OpenOCD if you:\n\n- Sell dongles and include pre-built binaries;\n- Supply tools or IDEs (a development solution integrating OpenOCD);\n- Build packages (e.g. RPM or DEB files for a GNU/Linux distribution).\n\nAs a PACKAGER, you will experience first reports of most issues.\nWhen you fix those problems for your users, your solution may help\nprevent hundreds (if not thousands) of other questions from other users.\n\nIf something does not work for you, please work to inform the OpenOCD\ndevelopers know how to improve the system or documentation to avoid\nfuture problems, and follow-up to help us ensure the issue will be fully\nresolved in our future releases.\n\nThat said, the OpenOCD developers would also like you to follow a few\nsuggestions:\n\n- Send patches, including config files, upstream, participate in the\n  discussions;\n- Enable all the options OpenOCD supports, even those unrelated to your\n  particular hardware;\n- Use \"ftdi\" interface adapter driver for the FTDI-based devices.\n\n\n# Building OpenOCD\n\nThe INSTALL file contains generic instructions for running `configure`\nand compiling the OpenOCD source code. That file is provided by\ndefault for all GNU autotools packages. If you are not familiar with\nthe GNU autotools, then you should read those instructions first.\n\nThe remainder of this document tries to provide some instructions for\nthose looking for a quick-install.\n\n## OpenOCD Dependencies\n\nGCC or Clang is currently required to build OpenOCD. The developers\nhave begun to enforce strict code warnings (-Wall, -Werror, -Wextra,\nand more) and use C99-specific features: inline functions, named\ninitializers, mixing declarations with code, and other tricks. While\nit may be possible to use other compilers, they must be somewhat\nmodern and could require extending support to conditionally remove\nGCC-specific extensions.\n\nYou'll also need:\n\n- make\n- libtool\n- pkg-config >= 0.23 or pkgconf\n\nOpenOCD uses jimtcl library; build from git can retrieve jimtcl as git\nsubmodule.\n\nAdditionally, for building from git:\n\n- autoconf >= 2.69\n- automake >= 1.14\n- texinfo >= 5.0\n\nOptional USB-based adapter drivers need libusb-1.0.\n\nOptional USB-Blaster, ASIX Presto and OpenJTAG interface adapter\ndrivers need:\n  - libftdi: http://www.intra2net.com/en/developer/libftdi/index.php\n\nOptional CMSIS-DAP adapter driver needs HIDAPI library.\n\nOptional linuxgpiod adapter driver needs libgpiod library.\n\nOptional J-Link adapter driver needs libjaylink library.\n\nOptional ARM disassembly needs capstone library.\n\nOptional development script checkpatch needs:\n\n- perl\n- python\n- python-ply\n\n## Permissions delegation\n\nRunning OpenOCD with root/administrative permissions is strongly\ndiscouraged for security reasons.\n\nFor USB devices on GNU/Linux you should use the contrib/60-openocd.rules\nfile. It probably belongs somewhere in /etc/udev/rules.d, but\nconsult your operating system documentation to be sure. Do not forget\nto add yourself to the \"plugdev\" group.\n\nFor parallel port adapters on GNU/Linux and FreeBSD please change your\n\"ppdev\" (parport* or ppi*) device node permissions accordingly.\n\nFor parport adapters on Windows you need to run install_giveio.bat\n(it's also possible to use \"ioperm\" with Cygwin instead) to give\nordinary users permissions for accessing the \"LPT\" registers directly.\n\n## Compiling OpenOCD\n\nTo build OpenOCD, use the following sequence of commands:\n\n    ./bootstrap\n    ./configure [options]\n    make\n    sudo make install\n\nThe `bootstrap` command is only necessary when building from the Git repository. The `configure` step generates the Makefiles required to build\nOpenOCD, usually with one or more options provided to it. The first\n'make' step will build OpenOCD and place the final executable in\n'./src/'. The final (optional) step, `make install`, places all of\nthe files in the required location.\n\nTo see the list of all the supported options, run `./configure --help`\n\n## Cross-compiling Options\n\nCross-compiling is supported the standard autotools way, you just need\nto specify the cross-compiling target triplet in the --host option,\ne.g. for cross-building for Windows 32-bit with MinGW on Debian:\n\n    ./configure --host=i686-w64-mingw32 [options]\n\nTo make pkg-config work nicely for cross-compiling, you might need an\nadditional wrapper script as described at\n\n    https://autotools.io/pkgconfig/cross-compiling.html\n\nThis is needed to tell pkg-config where to look for the target\nlibraries that OpenOCD depends on. Alternatively, you can specify\n`*_CFLAGS` and `*_LIBS` environment variables directly, see `./configure\n--help` for the details.\n\nFor a more or less complete script that does all this for you, see\n\n    contrib/cross-build.sh\n\n## Parallel Port Dongles\n\nIf you want to access the parallel port using the PPDEV interface you\nhave to specify both `--enable-parport` and `--enable-parport-ppdev`, since\nthe later option is an option to the parport driver.\n\nThe same is true for the `--enable-parport-giveio` option, you have to\nuse both the `--enable-parport` and the `--enable-parport-giveio` option\nif you want to use giveio instead of ioperm parallel port access\nmethod.\n\n\n# Obtaining OpenOCD From GIT\n\nYou can download the current GIT version with a GIT client of your\nchoice from the main repository:\n\n    git://git.code.sf.net/p/openocd/code\n\nYou may prefer to use a mirror:\n\n    http://repo.or.cz/r/openocd.git\n    git://repo.or.cz/openocd.git\n\nUsing the GIT command line client, you might use the following command\nto set up a local copy of the current repository (make sure there is no\ndirectory called \"openocd\" in the current directory):\n\n    git clone git://git.code.sf.net/p/openocd/code openocd\n\nThen you can update that at your convenience using `git pull`.\n\nThere is also a gitweb interface, which you can use either to browse\nthe repository or to download arbitrary snapshots using HTTP:\n\n    http://repo.or.cz/w/openocd.git\n\nSnapshots are compressed tarballs of the source tree, about 1.3 MBytes\neach at this writing.\n"
        },
        {
          "name": "README.Windows",
          "type": "blob",
          "size": 2.2080078125,
          "content": "Building OpenOCD for Windows\n----------------------------\n\nYou can build OpenOCD for Windows natively with either MinGW-w64/MSYS\nor Cygwin (plain MinGW might work with --disable-werror but is not\nrecommended as it doesn't provide enough C99 compatibility).\nAlternatively, one can cross-compile it using MinGW-w64 on a *nix\nhost. See README for the generic instructions.\n\nAlso, the MSYS2 project provides both ready-made binaries and an easy\nway to self-compile from their software repository out of the box.\n\nNative MinGW-w64/MSYS compilation\n-----------------------------\n\nAs MSYS doesn't come with pkg-config pre-installed, you need to add it\nmanually. The easiest way to do that is to download pkg-config-lite\nfrom:\n\n  http://sourceforge.net/projects/pkgconfiglite/\n\nThen simply unzip the archive to the root directory of your MinGW-w64\ninstallation.\n\nUSB adapters\n------------\n\nFor the adapters that use a HID-based protocol, e.g. CMSIS-DAP, you do\nnot need to perform any additional configuration.\n\nFor all the others you usually need to have WinUSB.sys (or\nlibusbK.sys) driver installed. Some vendor software (e.g. for\nST-LINKv2) does it on its own. For the other cases the easiest way to\nassign WinUSB to a device is to use the latest Zadig installer:\n\n  http://zadig.akeo.ie\n\nWhen using a composite USB device, it's often necessary to assign\nWinUSB.sys to the composite parent instead of the specific\ninterface. To do that one needs to activate an advanced option in the\nZadig installer.\n\nIf you need to use the same adapter with other applications that may\nrequire another driver, a solution for Windows Vista and above is to\nactivate the IgnoreHWSerNum registry setting for the USB device.\n\nThat setting forces Windows to associate the driver per port instead of\nper serial number, the same behaviour as when the device does not contain\na serial number. So different drivers can be installed for the adapter on\ndifferent ports and you just need to plug the adapter into the correct\nport depending on which application to use.\n\nFor more information, see:\n\n  https://learn.microsoft.com/en-us/windows-hardware/drivers/usbcon/usb-device-specific-registry-settings\n  http://www.ftdichip.com/Support/Knowledgebase/index.html?ignorehardwareserialnumber.htm\n"
        },
        {
          "name": "README.macOS",
          "type": "blob",
          "size": 1.89453125,
          "content": "Building OpenOCD for macOS\n--------------------------\n\nThere are a few prerequisites you will need first:\n\n- Xcode (install from the AppStore)\n- Command Line Tools (install from Xcode -> Preferences -> Downloads)\n- Gentoo Prefix (http://www.gentoo.org/proj/en/gentoo-alt/prefix/bootstrap.xml)\n  or\n- Homebrew (http://mxcl.github.io/homebrew/)\n  or\n- MacPorts (http://www.macports.org/install.php)\n\n\nIf you're building manually you need Texinfo version 5.0 or later. The\nsimplest way to get it is to use Homebrew (brew install texinfo) and\nthen ``export PATH=/usr/local/opt/texinfo/bin:$PATH``.\n\n\nWith Gentoo Prefix you can build the release version or the latest\ndevel version (-9999) the usual way described in the Gentoo\ndocumentation. Alternatively, install the prerequisites and build\nmanually from the sources.\n\n\nWith Homebrew you can either run:\n  brew install [--HEAD] openocd (where optional --HEAD asks brew to\n                                 install the current git version)\n    or\n  brew install libtool automake libusb [hidapi] [libftdi]\n    (to install the needed dependencies and then proceed with the\n     manual building procedure)\n\n\nFor building with MacPorts you need to run:\n  sudo port install libtool automake autoconf pkgconfig \\\n    libusb [libftdi1]\n\nYou should also specify LDFLAGS and CPPFLAGS to allow configure to use\nMacPorts' libraries, so run configure like this:\n  LDFLAGS=-L/opt/local/lib CPPFLAGS=-I/opt/local/include ./configure [options]\n\n\nSee README for the generic building instructions.\n\nIf you're using a USB adapter and have a driver kext matched to it,\nyou will need to unload it prior to running OpenOCD. E.g. with Apple\ndriver (OS X 10.9 or later) for FTDI run:\n  sudo kextunload -b com.apple.driver.AppleUSBFTDI\nfor FTDI vendor driver use:\n  sudo kextunload FTDIUSBSerialDriver.kext\n\nTo learn more on the topic please refer to the official libusb FAQ:\nhttps://github.com/libusb/libusb/wiki/FAQ\n"
        },
        {
          "name": "TODO",
          "type": "blob",
          "size": 16.16015625,
          "content": "// This file is part of the Doxygen Developer Manual\n/** @page tasks Pending and Open Tasks\n\nThis page lists pending and open tasks being considered or worked upon\nby the OpenOCD community.\n\n@section thelist The List\n\nMost items are open for the taking, but please post to the mailing list\nbefore spending much time working on anything lists here.  The community\nmay have evolved an idea since it was added here.\n\nFeel free to send patches to add or clarify items on this list, too.\n\n@section thelisttcl TCL\n\nThis section provides possible things to improve with OpenOCD's TCL support.\n\n- Fix problem with incorrect line numbers reported for a syntax\n  error in a reset init event.\n\n- organize the TCL configurations:\n  - provide more directory structure for boards/targets?\n  - factor configurations into layers (encapsulation and re-use)\n\n- Fix handling of variables between multiple command line \"-c\" and \"-f\"\n  parameters.  Currently variables assigned through one such parameter\n  command/script are unset before the next one is invoked.\n\n- Isolate all TCL command support:\n  - Pure C CLI implementations using --disable-builtin-tcl.\n    - Allow developers to build new dongles using OpenOCD's JTAG core.\n    - At first, provide only low-level JTAG support; target layer and\n      above rely heavily on scripting event mechanisms.\n  - Allow full TCL support? add --with-tcl=/path/to/installed/tcl\n  - Move TCL support out of foo.[ch] and into foo_tcl.[ch] (other ideas?)\n    - See src/jtag/core.c and src/jtag/tcl.c for an example.\n    - allow some of these TCL command modules to be dynamically loadable?\n\n@section thelistadapter Adapter\n\nThis section list issues that need to be resolved in the Adapter layer.\n\n@subsection thelistadapterrework Code restructuring\n\nThis section lists pending reworks to complete the restructure from the\nold JTAG centric implementation to a generic Adapter layer.\nThis restructuring is very invasive and will prevent the merge of several\nchanges pending in gerrit.\n\n- rename folder src/jtag/ to src/adapter/\n- rename var \"jtag\" to \"adapter\" in src/jtag/core.c\n- split content of src/adapter/ in the different protocols jtag.[ch],\n  swd.[ch], ...\n- wrap the calls to adapter->transport_ops->api() with transport_api()\n  and reduce the visibility of global var \"adapter\"\n- complete the migration of JTAG-only drivers to adapter->reset()\n- try to remove JTAG_SLEEP also from JTAG mode?\n- tap_set_state(TAP_RESET) is already done in src/jtag/core.c. No need\n  to replicate it in the drivers, apart in case the driver sets TRST\n  independently\n- add .hla_ops to \"adapter\"\n- HLA is a API level (.hla_ops). Transport should simply be {jtag,swd},\n  not {hla_jtag,hla_swd}.\n\n@subsection thelistadapterjtagcore JTAG Core\n\nThe following tasks have been suggested for cleaning up the JTAG layer:\n\n- use tap_set_state everywhere to allow logging TAP state transitions\n- Encapsulate cmd_queue_cur_state and related variable handling.\n- add slick 32 bit versions of jtag_add_xxx_scan() that avoids\nbuf_set_u32() calls and other evidence of poor impedance match between\nAPI and calling code. New API should cut down # of lines in calling\ncode by 100's and make things clearer. Also potentially be supported\ndirectly in minidriver API for better embedded host performance.\n\nThe following tasks have been suggested for adding new core JTAG support:\n\n- Improve autodetection of TAPs by supporting tcl escape procedures that\n  can configure discovered TAPs based on IDCODE value ... they could:\n    - Remove guessing for irlen\n    - Allow non-default irmask/ircapture values\n- SPI/UART emulation:\n  - (ab)use bit-banging JTAG interfaces to emulate SPI/UART\n  - allow SPI to program flash, MCUs, etc.\n\n@subsection thelistadapterinterfaces Interface drivers\n\nThere are some known bugs to fix in Interface drivers:\n\n- For JTAG_STATEMOVE to TAP_RESET, all drivers must ignore the current\n  recorded state.  The tap_get_state() call won't necessarily return\n  the correct value, especially at server startup.  Fix is easy:  in\n  that case, always issue five clocks with TMS high.\n  - amt_jtagaccel.c\n  - arm-jtag-ew.c\n  - bitbang.c\n  - bitq.c\n  - gw16012.c\n  - jlink.c\n  - usbprog.c\n  - vsllink.c\n  - rlink/rlink.c\n- bug: USBprog is broken with new tms sequence; it needs 7-clock cycles.\n  Fix promised from  Peter Denison openwrt at marshadder.org\n  Workaround: use \"tms_sequence long\" @par\n  https://lists.berlios.de/pipermail/openocd-development/2009-July/009426.html\n\nThe following tasks have been suggested for improving OpenOCD's JTAG\ninterface support:\n\n- rework USB communication to be more robust.  Two possible options are:\n  -# use libusb-1.0.1 with libusb-compat-0.1.1 (non-blocking I/O wrapper)\n  -# rewrite implementation to use non-blocking I/O\n- J-Link driver:\n  - fix to work with long scan chains, such as R.Doss's svf test.\n- Autodetect USB based adapters; this should be easy on Linux.  If there's\n  more than one, list the options; otherwise, just select that one.\n\nThe following tasks have been suggested for adding new JTAG interfaces:\n\n- TCP driver: allow client/server for remote JTAG interface control.\nThis requires a client and a server. The server is built into the\nnormal OpenOCD and takes commands from the client and executes\nthem on the interface returning the result of TCP/IP. The client\nis an OpenOCD which is built with a TCP/IP minidriver. The use\nof a minidriver is required to capture all the jtag_add_xxx()\nfn's at a high enough level and repackage these cmd's as\nTCP/IP packets handled by the server.\n\n@section thelistbs Boundary Scan Support\n\n- add STAPL support?\n- add BSDL support?\n\nA few possible options for the above:\n  -# Fake a TCL equivalent?\n  -# Integrate an existing library?\n  -# Write a new C implementation a la Jim?\n\nOnce the above are completed:\n- add support for programming flash using boundary scan techniques\n- add integration with a modified gerber view program:\n  - provide means to view the PCB and select pins and traces\n  - allow use-cases such as the following:\n    - @b Stimulus\n      -# Double-click on a pin (or trace) with the mouse.\n    - @b Effects\n      -# The trace starts blinking, and\n      -# OpenOCD toggles the pin(s) 0/1.\n\n@section thelisttargets Target Support\n\n- Many common ARM cores could be autodetected using IDCODE\n- general layer cleanup: @par\n  https://lists.berlios.de/pipermail/openocd-development/2009-May/006590.html\n- regression: \"reset halt\" between 729(works) and 788(fails): @par\nhttps://lists.berlios.de/pipermail/openocd-development/2009-July/009206.html\n- registers\n  - add flush-value operation, call them all on resume/reset\n- mcr/mrc target->type support\n  - missing from ARM920t, ARM966e, XScale.\n  It's possible that the current syntax is unable to support read-modify-write\n  operations(see arm966e).\n  - mcr/mrc - retire cp15 commands when there the mrc/mrc commands have been\n  tested from: arm926ejs, arm720t, cortex_a8\n- ARM7/9:\n  - clean up \"arm9tdmi vector_catch\". Available for some arm7 cores? @par\nhttps://lists.berlios.de/pipermail/openocd-development/2009-October/011488.html\nhttps://lists.berlios.de/pipermail/openocd-development/2009-October/011506.html\n  - add reset option to allow programming embedded ice while srst is asserted.\n  Some CPUs will gate the JTAG clock when srst is asserted and in this case,\n  it is necessary to program embedded ice and then assert srst afterwards.\n- ARM926EJS:\n  - reset run/halt/step is not robust; needs testing to map out problems.\n- ARM11 improvements (MB?)\n  - add support for asserting srst to reset the core.\n  - Single stepping works, but should automatically\n  use hardware stepping if available.\n  - mdb can return garbage data if read byte operation fails for\n  a memory region(16 & 32 byte access modes may be supported). Is this\n  a bug in the .MX31 PDK init script? Try on i.MX31 PDK:\n  mdw 0xb80005f0 0x8, mdh 0xb80005f0 0x10, mdb 0xb80005f0 0x20. mdb returns\n  garabage.\n  - implement missing functionality (grep FNC_INFO_NOTIMPLEMENTED ...)\n- Thumb2 single stepping: ARM1156T2 needs simulator support\n- Cortex-A8 support (ML)\n  - add target implementation (ML)\n- Cortex-M3 support\n  - when stepping, only write dirtied registers (be faster)\n  - when connecting to halted core, fetch registers (startup is quirky)\n- Generic ARM run_algorithm() interface\n  - tagged struct wrapping ARM instructions and metadata\n  - not revision-specific (current: ARMv4+ARMv5 -or- ARMv6 -or- ARMv7)\n  - usable with at least arm_nandwrite() and generic CFI drivers\n- ETM\n  - don't show FIFOFULL registers if they're not supported\n  - use comparators to get more breakpoints and watchpoints\n  - add \"etm drivers\" command\n  - trace driver init() via examine() paths only, not setup()/reset\n- MC1322x support (JW/DE?)\n  - integrate and test support from JW (and DE?)\n  - get working with a known good interface (i.e. not today's jlink)\n- STR9x: (ZW)\n  - improvements to str912.cfg to be more general purpose\n- AVR: (SQ)\n  - independently verify implementation\n  - incrementally improve working prototype in trunk. (SQ)\n  - work out how to debug this target\n  - AVR debugging protocol.\n- FPGA:\n  - Altera Nios Soft-CPU support\n- Coldfire (suggested by NC)\n  - can we draw from the BDM project?  @par\n    http://bdm.sourceforge.net/\n\n    or the OSBDM package @par\n    http://forums.freescale.com/freescale/board/message?board.id=OSBDM08&thread.id=422\n\n@section thelistsvf SVF/XSVF\n\n- develop SVF unit tests\n- develop XSVF unit tests\n\n@section thelistflash Flash Support\n\n- finish documentation for the following flash drivers:\n  - avr\n  - pic32mx\n  - ocl\n  - str9xpec\n\n- Don't expect writing all-ones to be a safe way to write without\n  changing bit values.  Minimally it loses on flash modules with\n  internal ECC, where it may change the ECC.\n  - NOR flash_write_unlock() does that between sectors\n  - there may be other cases too\n\n- Make sure all commands accept either a bank name or a bank number,\n  and be sure both identifiers show up in \"flash banks\" and \"nand list\".\n  Right now the user-friendly names are pretty much hidden...\n\n@subsection thelistflashcfi CFI\n\n- finish implementing bus width/chip width handling (suggested by NC)\n- factor vendor-specific code into separate source files\n  - add new callback interface for vendor-specific code\n- investigate/implement \"thin wrapper\" to use eCos CFI drivers (Ã˜H)\n\n@section thelistdebug Debugger Support\n\n- add support for masks in watchpoints? @par\n  https://lists.berlios.de/pipermail/openocd-development/2009-October/011507.html\n- breakpoints can get lost in some circumstances: @par\n  https://lists.berlios.de/pipermail/openocd-development/2009-June/008853.html\n- add support for masks in watchpoints. The trick is that GDB does not\n  support a breakpoint mask in the remote protocol. One way to work around\n  this is to add a separate command \"watchpoint_mask add/rem <addr> <mask>\", that\n  is run to register a list of masks that the gdb_server knows to use with\n  a particular watchpoint address.\n- integrate Keil AGDI interface to OpenOCD? (submitted by Dario Vecchio)\n\n@section thelisttesting Testing Suite\n\nThis section includes several related groups of ideas:\n- @ref thelistunittests\n- @ref thelistsmoketests\n- @ref thelisttestreports\n- @ref thelisttestgenerichw\n\n@subsection thelistunittests Unit Tests\n\n- add testing skeleton to provide frameworks for adding tests\n- implement server unit tests\n- implement JTAG core unit tests\n- implement JTAG interface unit tests\n- implement flash unit tests\n- implement target unit tests\n\n@subsection thelistsmoketests Smoke Test Tools\n\n-# extend 'make check' with a smoketest app\n  - checks for OOCD_TEST_CONFIG, etc. in environment (or config file)\n  - if properly set, runs the smoke test with specified parameters\n    - openocd -f ${OOCD_TEST_CONFIG}\n    - implies a modular test suite (see below)\n  - should be able to run some minimal tests with dummy interface:\n    - compare results of baseline sanity checks with expected results\n\n-# builds a more complete test suite:\n  - existing testing/examples/ look like a great start\n  - all targets should be tested fully and for all capabilities\n    - we do NOT want a \"lowest common denominator\" test suite\n    - ... but can we start with one to get going?\n  - probably requires one test configuration file per board/target\n    - modularization can occur here, just like with targets/boards/chips\n    - coverage can increase over time, building up bundles of tests\n\n-# add new 'smoketest' Makefile target:\n  - calls 'make check' (and the smoketest app)\n  - gather inputs and output into a report file\n\n@subsection thelisttestreports Test Feedback Tools\n\nThese ideas were first introduced here: @par\n  https://lists.berlios.de/pipermail/openocd-development/2009-May/006358.html\n\n- provide report submission scripts for e-mail and web forms\n- add new Makefile targets to post the report:\n  - 'checkreportsend' -- send to list via e-mail (via sendmail)\n  - 'checkreportpost' -- send web form (via curl or other script)\n\n@subsection thelisttestgenerichw Generic Hardware Tester\n\n- implement VHDL to use for FPGA-based JTAG TAP testing device\n- develop test suite that utilizes this testing device\n\n@section thelistautotools Autotools Build System\n\n- make entire configure process require less user consideration:\n  - automatically detect the features that are available, unless\n    options were specifically provided to configure\n  - provide a report of the drivers that will be build at the end of\n    running configure, so the users can verify which drivers will be\n    built during 'make' (and their options) .\n- eliminate sources of confusion in @c bootstrap script:\n  -# Make @c bootstrap call 'configure --enable-maintainer-mode \\<opts\\>'?\n  -# Add @c buildstrap script to assist with bootstrap and configure steps.\n- automatically build tool-chains required for cross-compiling\n  - produce mingw32, arm-elf, others using in-tree scripts\n  - build all required target code from sources\n- make JTAG and USB debug output a run-time configuration option\n\n@section thelistarchitecture Architectural Tasks\n\nThe following architectural tasks need to be accomplished and should be\nfairly easy to complete:\n\n\n- use dynamic allocations for working memory. Scan & fix code\nfor excessive stack allocations. take linux/scripts/checkstack.pl and\nsee what the worst offenders are. Dynamic stack allocations are found\nat the bottom of the list below.  Example, on amd64:\n\n $ objdump -d | checkstack.pl | head -10\n 0x004311e3 image_open [openocd]:                      13464\n 0x00431301 image_open [openocd]:                      13464\n 0x004237a4 target_array2mem [openocd]:                        4376\n 0x0042382b target_array2mem [openocd]:                        4376\n 0x00423e74 target_mem2array [openocd]:                        4360\n 0x00423ef9 target_mem2array [openocd]:                        4360\n 0x00404aed handle_svf_command [openocd]:              2248\n 0x00404b7e handle_svf_command [openocd]:              2248\n 0x00413581 handle_flash_fill_command [openocd]:               2200\n 0x004135fa handle_flash_fill_command [openocd]:               2200\n- clean-up code to match style guides\n- factor code to eliminate duplicated functionality\n- rewrite code that uses casts to access 16-bit and larger types\n  from unaligned memory addresses\n- libopenocd support: @par\n    https://lists.berlios.de/pipermail/openocd-development/2009-May/006405.html\n- review and clean up interface/target/flash APIs\n\nThe following strategic tasks will require ambition, knowledge, and time\nto complete:\n\n- overhaul use of types to improve 32/64-bit portability\n  - types for both host and target word sizes?\n  - can we use GDB's CORE_TYPE support?\n- Allow N:M:P mapping of servers, targets, and interfaces\n- loadable module support for interface/target/flash drivers and commands\n  - support both static and dynamic modules.\n  - should probably use libltdl for dynamic library handing.\n\n@section thelistadmin Documentation Tasks\n\n- Develop milestone and release guidelines, processes, and scripts.\n- Develop \"style\" guidelines (and scripts) for maintainers:\n  - reviewing patches\n  - committing to git\n- Review Users' Guide for documentation errors or omissions\n  - \"capture\" and \"ocd_find\" commands\n- Update Developer's Manual (doxygen output)\n  - Add documentation describing the architecture of each module\n  - Provide more Technical Primers to bootstrap contributor knowledge\n\n*/\n/** @file\nThis file contains the @ref thelist page.\n*/\n"
        },
        {
          "name": "bootstrap",
          "type": "blob",
          "size": 1.3974609375,
          "content": "#!/bin/sh\n# SPDX-License-Identifier: GPL-2.0-or-later\n\n# Run the autotools bootstrap sequence to create the configure script\n\nset -e  # Abort execution on error.\nset -u  # Abort if you reference an undefined variable.\n\nif which libtoolize > /dev/null; then\n    libtoolize=\"libtoolize\"\nelif which glibtoolize >/dev/null; then\n    libtoolize=\"glibtoolize\"\nelse\n    echo \"$0: Error: libtool is required\" >&2\n    exit 1\nfi\n\nSKIP_SUBMODULE=0\n\ncase \"$#\" in\n    0) ;;\n    1) if [ \"$1\" = \"nosubmodule\" ]; then\n           SKIP_SUBMODULE=1\n       else\n           echo \"$0: Illegal argument $1\" >&2\n           echo \"USAGE: $0 [nosubmodule]\" >&2\n           exit 1\n       fi;;\n   *)  echo \"$0: Wrong number of command-line arguments.\" >&2\n       echo \"USAGE: $0 [nosubmodule]\" >&2\n       exit 1;;\nesac\n\n# bootstrap the autotools\n(\nset -x\naclocal --warnings=all\n# Apparently, not all versions of libtoolize support option --warnings=all .\n${libtoolize} --automake --copy\nautoconf --warnings=all\nautoheader --warnings=all\nautomake --warnings=all --gnu --add-missing --copy\n)\n\nif [ \"$SKIP_SUBMODULE\" -ne 0 ]; then\n    echo \"Skipping submodule setup\"\nelse\n    echo \"Setting up submodules\"\n    git submodule sync\n    git submodule update --init\nfi\n\nif [ -x src/jtag/drivers/libjaylink/autogen.sh ]; then\n    (\n    cd src/jtag/drivers/libjaylink\n    ./autogen.sh\n    )\nfi\n\necho \"Bootstrap complete. Quick build instructions:\"\necho \"./configure ....\"\n"
        },
        {
          "name": "config_subdir.m4",
          "type": "blob",
          "size": 0.4375,
          "content": "dnl AC_CONFIG_SUBDIRS does not allow configure options to be passed\ndnl to subdirs, this function allows that by creating a configure.gnu\ndnl script that prepends configure options and then calls the real\ndnl configure script\nAC_DEFUN([AX_CONFIG_SUBDIR_OPTION],\n[\nAC_CONFIG_SUBDIRS([$1])\n\nm4_ifblank([$2], [rm -f $srcdir/$1/configure.gnu],\n[printf '#!/bin/sh\\nexec \"`dirname \"'\\$'0\"`/configure\" '\"$2\"' \"'\\$'@\"\\n' > \"$srcdir/$1/configure.gnu\"\n])\n])\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 30.6005859375,
          "content": "# SPDX-License-Identifier: GPL-2.0-or-later\n\nAC_PREREQ([2.69])\nAC_INIT([openocd], [0.12.0+dev],\n  [OpenOCD Mailing List <openocd-devel@lists.sourceforge.net>])\nAC_CONFIG_SRCDIR([src/openocd.c])\nAC_CONFIG_AUX_DIR([build-aux])\n\nm4_include([config_subdir.m4])dnl\n\n# check for makeinfo before calling AM_INIT_AUTOMAKE\nAC_CHECK_PROG([MAKEINFO], [makeinfo], [makeinfo])\nAS_IF([test \"x$MAKEINFO\" = \"x\"], [\n  MAKEINFO='echo makeinfo missing; true'\n  AC_MSG_WARN([Info documentation will not be built.])\n])\nAC_SUBST([MAKEINFO])\n\nAM_INIT_AUTOMAKE([-Wall -Wno-portability dist-bzip2 dist-zip subdir-objects])\n\nAC_CONFIG_HEADERS([config.h])\n\nAC_LANG([C])\nAC_PROG_CC\n# autoconf 2.70 obsoletes AC_PROG_CC_C99 and includes it in AC_PROG_CC\nm4_version_prereq([2.70],[],[AC_PROG_CC_C99])\nAM_PROG_CC_C_O\nAC_PROG_RANLIB\n\n# If macro PKG_PROG_PKG_CONFIG is not available, Autoconf generates a misleading error message,\n# so check for existence first, and otherwise provide helpful advice.\nm4_ifndef([PKG_PROG_PKG_CONFIG], [m4_fatal(m4_normalize([\n  Macro PKG_PROG_PKG_CONFIG is not available.\n  It is usually defined in file pkg.m4 provided by package pkg-config.]))])\nPKG_PROG_PKG_CONFIG([0.23])\n\ndnl disable checks for C++, Fortran and GNU Java Compiler\nm4_defun([_LT_AC_LANG_CXX_CONFIG], [:])\nm4_defun([_LT_AC_LANG_F77_CONFIG], [:])\nm4_defun([_LT_AC_LANG_GCJ_CONFIG], [:])\nAC_DISABLE_SHARED\nLT_INIT\nAC_SUBST([LIBTOOL_DEPS])\n\ndnl configure checks required for Jim files (these are obsolete w/ C99)\nAC_C_CONST\nAC_TYPE_LONG_LONG_INT\n\nAC_SEARCH_LIBS([ioperm], [ioperm])\nAC_SEARCH_LIBS([dlopen], [dl])\nAC_SEARCH_LIBS([openpty], [util])\n\nAC_CHECK_HEADERS([sys/socket.h])\nAC_CHECK_HEADERS([elf.h])\nAC_EGREP_HEADER(Elf64_Ehdr, [elf.h], [\n  AC_DEFINE([HAVE_ELF64], [1], [Define to 1 if the system has the type `Elf64_Ehdr'.])\n])\nAC_CHECK_HEADERS([fcntl.h])\nAC_CHECK_HEADERS([malloc.h])\nAC_CHECK_HEADERS([netdb.h])\nAC_CHECK_HEADERS([poll.h])\nAC_CHECK_HEADERS([strings.h])\nAC_CHECK_HEADERS([sys/ioctl.h])\nAC_CHECK_HEADERS([sys/param.h])\nAC_CHECK_HEADERS([sys/select.h])\nAC_CHECK_HEADERS([sys/stat.h])\nAC_CHECK_HEADERS([sys/sysctl.h])\nAC_CHECK_HEADERS([sys/time.h])\nAC_CHECK_HEADERS([sys/types.h])\nAC_CHECK_HEADERS([unistd.h])\nAC_CHECK_HEADERS([arpa/inet.h netinet/in.h netinet/tcp.h], [], [], [dnl\n#include <stdio.h>\n#ifdef STDC_HEADERS\n# include <stdlib.h>\n# include <stddef.h>\n#else\n# ifdef HAVE_STDLIB_H\n#  include <stdlib.h>\n# endif\n#endif\n#ifdef HAVE_SYS_SOCKET_H\n# include <sys/socket.h>\n#endif\n])\n\nAC_HEADER_ASSERT\nAC_HEADER_STDBOOL\n\nAC_C_BIGENDIAN\n\nAC_CHECK_FUNCS([strndup])\nAC_CHECK_FUNCS([strnlen])\nAC_CHECK_FUNCS([gettimeofday])\nAC_CHECK_FUNCS([usleep])\nAC_CHECK_FUNCS([realpath])\n\n# guess-rev.sh only exists in the repository, not in the released archives\nAC_MSG_CHECKING([whether to build a release])\nAS_IF([test -x \"$srcdir/guess-rev.sh\"], [\n  build_release=no\n], [\n  build_release=yes\n])\nAC_MSG_RESULT([$build_release])\n\n# Adapter drivers\n# 1st column -- Basename for the configure option generated with AC_ARG_ENABLE.\n#               For example, \"buspirate\" generates options \"--enable-buspirate[=yes/no]\"\n#               and \"--disable-buspirate\".\n# 2nd column -- Description for the configure option. For example, \"Bus Pirate\"\n#               generates \"Enable building support for the Bus Pirate (default is auto)\".\n# 3rd column -- Basename for the config.h and Automake symbols.\n#               For example, basename \"BUS_PIRATE\" generates \"BUILD_BUS_PIRATE\" with AC_DEFINE\n#               for config.h and \"BUS_PIRATE\" with AM_CONDITIONAL for Automake.\nm4_define([ADAPTER_ARG], [m4_argn([1], $1)])\nm4_define([ADAPTER_DESC], [m4_argn([2], $1)])\nm4_define([ADAPTER_SYM], [m4_argn([3], $1)])\n# AC_ARG_ENABLE uses prefix \"enable_\" to name the corresponding option variable.\nm4_define([ADAPTER_VAR], [enable_[]ADAPTER_ARG($1)])\nm4_define([ADAPTER_OPT], [m4_translit(ADAPTER_ARG($1), [_], [-])])\n\nm4_define([USB1_ADAPTERS],\n\t[[[ftdi], [MPSSE mode of FTDI based devices], [FTDI]],\n\t[[stlink], [ST-Link Programmer], [HLADAPTER_STLINK]],\n\t[[ti_icdi], [TI ICDI JTAG Programmer], [HLADAPTER_ICDI]],\n\t[[ulink], [Keil ULINK JTAG Programmer], [ULINK]],\n\t[[angie], [ANGIE Adapter], [ANGIE]],\n\t[[usb_blaster_2], [Altera USB-Blaster II Compatible], [USB_BLASTER_2]],\n\t[[ft232r], [Bitbang mode of FT232R based devices], [FT232R]],\n\t[[vsllink], [Versaloon-Link JTAG Programmer], [VSLLINK]],\n\t[[xds110], [TI XDS110 Debug Probe], [XDS110]],\n\t[[cmsis_dap_v2], [CMSIS-DAP v2 Compliant Debugger], [CMSIS_DAP_USB]],\n\t[[osbdm], [OSBDM (JTAG only) Programmer], [OSBDM]],\n\t[[opendous], [eStick/opendous JTAG Programmer], [OPENDOUS]],\n\t[[armjtagew], [Olimex ARM-JTAG-EW Programmer], [ARMJTAGEW]],\n\t[[rlink], [Raisonance RLink JTAG Programmer], [RLINK]],\n\t[[usbprog], [USBProg JTAG Programmer], [USBPROG]],\n\t[[esp_usb_jtag], [Espressif JTAG Programmer], [ESP_USB_JTAG]]])\n\nm4_define([HIDAPI_ADAPTERS],\n\t[[[cmsis_dap], [CMSIS-DAP Compliant Debugger], [CMSIS_DAP_HID]],\n\t[[nulink], [Nu-Link Programmer], [HLADAPTER_NULINK]]])\n\nm4_define([HIDAPI_USB1_ADAPTERS],\n\t[[[kitprog], [Cypress KitProg Programmer], [KITPROG]]])\n\nm4_define([LIBFTDI_ADAPTERS],\n\t[[[usb_blaster], [Altera USB-Blaster Compatible], [USB_BLASTER]],\n\t[[presto], [ASIX Presto Adapter], [PRESTO]]])\n\nm4_define([LIBFTDI_USB1_ADAPTERS],\n\t[[[openjtag], [OpenJTAG Adapter], [OPENJTAG]]])\n\nm4_define([LIBGPIOD_ADAPTERS],\n\t[[[linuxgpiod], [Linux GPIO bitbang through libgpiod], [LINUXGPIOD]]])\n\nm4_define([LIBJAYLINK_ADAPTERS],\n\t[[[jlink], [SEGGER J-Link Programmer], [JLINK]]])\n\nm4_define([PCIE_ADAPTERS],\n\t[[[xlnx_pcie_xvc], [Xilinx XVC/PCIe], [XLNX_PCIE_XVC]]])\n\nm4_define([SERIAL_PORT_ADAPTERS],\n\t[[[buspirate], [Bus Pirate], [BUS_PIRATE]]])\n\n# The word 'Adapter' in \"Dummy Adapter\" below must begin with a capital letter\n# because there is an M4 macro called 'adapter'.\nm4_define([DUMMY_ADAPTER],\n\t[[[dummy], [Dummy Adapter], [DUMMY]]])\n\nm4_define([OPTIONAL_LIBRARIES],\n\t[[[capstone], [Use Capstone disassembly framework], []]])\n\nm4_define([COVERAGE],\n\t[[[gcov], [Collect coverage using gcov], []]])\n\nAC_ARG_ENABLE([doxygen-html],\n  AS_HELP_STRING([--disable-doxygen-html],\n    [Disable building Doxygen manual as HTML.]),\n  [doxygen_as_html=$enableval], [doxygen_as_html=yes])\nAC_SUBST([doxygen_as_html])\nAC_MSG_CHECKING([whether to build Doxygen as HTML])\nAC_MSG_RESULT([$doxygen_as_html])\n\nAC_ARG_ENABLE([doxygen-pdf],\n  AS_HELP_STRING([--enable-doxygen-pdf],\n    [Enable building Doxygen manual as PDF.]),\n  [doxygen_as_pdf=$enableval], [doxygen_as_pdf=no])\nAC_SUBST([doxygen_as_pdf])\nAC_MSG_CHECKING([whether to build Doxygen as PDF])\nAC_MSG_RESULT([$doxygen_as_pdf])\n\nAC_ARG_ENABLE([gccwarnings],\n  AS_HELP_STRING([--disable-gccwarnings], [Disable compiler warnings]),\n  [gcc_warnings=$enableval], [gcc_warnings=yes])\n\nAC_ARG_ENABLE([wextra],\n  AS_HELP_STRING([--disable-wextra], [Disable extra compiler warnings]),\n  [gcc_wextra=$enableval], [gcc_wextra=$gcc_warnings])\n\nAC_ARG_ENABLE([werror],\n  AS_HELP_STRING([--disable-werror], [Do not treat warnings as errors]),\n  [gcc_werror=$enableval], [gcc_werror=$gcc_warnings])\n\nAC_ARG_ENABLE([gcov],\n  AS_HELP_STRING([--enable-gcov], [Enable runtime coverage collection via gcov]),\n  [enable_gcov=$enableval], [enable_gcov=no])\n\nAS_IF([test \"x$enable_gcov\" = \"xyes\"], [\n  AC_DEFINE([USE_GCOV], [1], [1 to enable coverage collection using gcov.])\n  dnl When collecting coverage, disable optimizations.\n  dnl This overrides the \"-O2\" that autoconf uses by default:\n  CFLAGS+=\" -O0\"\n], [\n  AC_DEFINE([USE_GCOV], [0], [0 to leave coverage collection disabled.])\n])\n\n# set default verbose options, overridden by following options\ndebug_usb_io=no\ndebug_usb_comms=no\n\nAC_ARG_ENABLE([verbose],\n  AS_HELP_STRING([--enable-verbose],\n      [Enable verbose JTAG I/O messages (for debugging).]),\n  [\n  debug_usb_io=$enableval\n  debug_usb_comms=$enableval\n  ], [])\n\nAC_ARG_ENABLE([verbose_usb_io],\n  AS_HELP_STRING([--enable-verbose-usb-io],\n      [Enable verbose USB I/O messages (for debugging)]),\n  [debug_usb_io=$enableval], [])\n\nAC_ARG_ENABLE([verbose_usb_comms],\n  AS_HELP_STRING([--enable-verbose-usb-comms],\n      [Enable verbose USB communication messages (for debugging)]),\n  [debug_usb_comms=$enableval], [])\n\nAC_MSG_CHECKING([whether to enable verbose USB I/O messages]);\nAC_MSG_RESULT([$debug_usb_io])\nAS_IF([test \"x$debug_usb_io\" = \"xyes\"], [\n  AC_DEFINE([_DEBUG_USB_IO_],[1], [Print verbose USB I/O messages])\n])\n\nAC_MSG_CHECKING([whether to enable verbose USB communication messages]);\nAC_MSG_RESULT([$debug_usb_comms])\nAS_IF([test \"x$debug_usb_comms\" = \"xyes\"], [\n  AC_DEFINE([_DEBUG_USB_COMMS_],[1], [Print verbose USB communication messages])\n])\n\ndebug_malloc=no\nAC_ARG_ENABLE([malloc_logging],\n  AS_HELP_STRING([--enable-malloc-logging],\n      [Include free space in logging messages (requires malloc.h).]),\n  [debug_malloc=$enableval], [])\n\nAC_MSG_CHECKING([whether to enable malloc free space logging]);\nAC_MSG_RESULT([$debug_malloc])\nAS_IF([test \"x$debug_malloc\" = \"xyes\"], [\n  AC_DEFINE([_DEBUG_FREE_SPACE_],[1], [Include malloc free space in logging])\n])\n\nAC_ARG_ENABLE([rshim],\n  AS_HELP_STRING([--enable-rshim], [Enable building the rshim driver]),\n  [build_rshim=$enableval], [build_rshim=no])\n\nAC_ARG_ENABLE([dmem],\n  AS_HELP_STRING([--enable-dmem], [Enable building the dmem driver]),\n  [build_dmem=$enableval], [build_dmem=no])\n\nm4_define([AC_ARG_ADAPTERS], [\n  m4_foreach([adapter], [$1],\n\t[AC_ARG_ENABLE(ADAPTER_OPT([adapter]),\n\t\tAS_HELP_STRING([--enable-ADAPTER_OPT([adapter])[[[=yes/no/auto]]]],\n\t\t\t[Enable building support for the ]ADAPTER_DESC([adapter])[ (default is $2)]),\n\t\t[case \"${enableval}\" in\n\t\t\tyes|no|auto) ;;\n\t\t\t*) AC_MSG_ERROR([Option --enable-ADAPTER_OPT([adapter]) has invalid value \"${enableval}\".]) ;;\n\t\t\tesac],\n\t\t[ADAPTER_VAR([adapter])=$2])\n  ])\n])\n\nAC_ARG_ADAPTERS([\n  USB1_ADAPTERS,\n  HIDAPI_ADAPTERS,\n  HIDAPI_USB1_ADAPTERS,\n  LIBFTDI_ADAPTERS,\n  LIBFTDI_USB1_ADAPTERS,\n  LIBGPIOD_ADAPTERS,\n  SERIAL_PORT_ADAPTERS,\n  DUMMY_ADAPTER,\n  PCIE_ADAPTERS,\n  LIBJAYLINK_ADAPTERS\n  ],[auto])\n\nAC_ARG_ENABLE([parport],\n  AS_HELP_STRING([--enable-parport], [Enable building the pc parallel port driver]),\n  [build_parport=$enableval], [build_parport=no])\n\nAC_ARG_ENABLE([parport_ppdev],\n  AS_HELP_STRING([--disable-parport-ppdev],\n      [Disable use of ppdev (/dev/parportN) for parport (for x86 only)]),\n    [parport_use_ppdev=$enableval], [parport_use_ppdev=yes])\n\nAC_ARG_ENABLE([parport_giveio],\n    AS_HELP_STRING([--enable-parport-giveio],\n      [Enable use of giveio for parport (for CygWin only)]),\n    [parport_use_giveio=$enableval], [parport_use_giveio=])\n\nAC_ARG_ENABLE([jtag_vpi],\n  AS_HELP_STRING([--enable-jtag_vpi], [Enable building support for JTAG VPI]),\n  [build_jtag_vpi=$enableval], [build_jtag_vpi=no])\n\nAC_ARG_ENABLE([vdebug],\n  AS_HELP_STRING([--enable-vdebug], [Enable building support for Cadence Virtual Debug Interface]),\n  [build_vdebug=$enableval], [build_vdebug=no])\n\nAC_ARG_ENABLE([jtag_dpi],\n  AS_HELP_STRING([--enable-jtag_dpi], [Enable building support for JTAG DPI]),\n  [build_jtag_dpi=$enableval], [build_jtag_dpi=no])\n\nAC_ARG_ENABLE([amtjtagaccel],\n  AS_HELP_STRING([--enable-amtjtagaccel], [Enable building the Amontec JTAG-Accelerator driver]),\n  [build_amtjtagaccel=$enableval], [build_amtjtagaccel=no])\n\nAS_CASE([\"${host_cpu}\"],\n  [arm*|aarch64], [\n    AC_ARG_ENABLE([bcm2835gpio],\n      AS_HELP_STRING([--enable-bcm2835gpio], [Enable building support for bitbanging on BCM2835 (as found in Raspberry Pi)]),\n      [build_bcm2835gpio=$enableval], [build_bcm2835gpio=no])\n    AC_ARG_ENABLE([imx_gpio],\n      AS_HELP_STRING([--enable-imx_gpio], [Enable building support for bitbanging on NXP IMX processors]),\n      [build_imx_gpio=$enableval], [build_imx_gpio=no])\n    AC_ARG_ENABLE([am335xgpio],\n      AS_HELP_STRING([--enable-am335xgpio], [Enable building support for bitbanging on AM335x (as found in Beaglebones)]),\n      [build_am335xgpio=$enableval], [build_am335xgpio=no])\n  ],\n  [\n    build_bcm2835gpio=no\n    build_imx_gpio=no\n    build_am335xgpio=no\n])\n\nAS_CASE([\"${host_cpu}\"],\n  [arm*], [\n    AC_ARG_ENABLE([ep93xx],\n      AS_HELP_STRING([--enable-ep93xx], [Enable building support for EP93xx based SBCs]),\n      [build_ep93xx=$enableval], [build_ep93xx=no])\n\n    AC_ARG_ENABLE([at91rm9200],\n      AS_HELP_STRING([--enable-at91rm9200], [Enable building support for AT91RM9200 based SBCs]),\n      [build_at91rm9200=$enableval], [build_at91rm9200=no])\n  ],\n  [\n    build_ep93xx=no\n    build_at91rm9200=no\n])\n\nAC_ARG_ENABLE([gw16012],\n  AS_HELP_STRING([--enable-gw16012], [Enable building support for the Gateworks GW16012 JTAG Programmer]),\n  [build_gw16012=$enableval], [build_gw16012=no])\n\nAC_ARG_ENABLE([sysfsgpio],\n  AS_HELP_STRING([--enable-sysfsgpio], [Enable building support for programming driven via sysfs gpios.]),\n  [build_sysfsgpio=$enableval], [build_sysfsgpio=no])\n\nAS_CASE([$host_os],\n  [linux*], [\n    is_linux=yes\n  ],\n  [\n    AS_IF([test \"x$build_sysfsgpio\" = \"xyes\"], [\n      AC_MSG_ERROR([sysfsgpio is only available on linux])\n    ])\n\n    AS_CASE([$host_os], [freebsd*], [],\n    [\n      AS_IF([test \"x$build_rshim\" = \"xyes\"], [\n        AC_MSG_ERROR([build_rshim is only available on linux or freebsd])\n      ])\n    ])\n\n    AS_IF([test \"x$build_dmem\" = \"xyes\"], [\n      AC_MSG_ERROR([dmem is only available on linux])\n    ])\n])\n\nAC_ARG_ENABLE([internal-jimtcl],\n  AS_HELP_STRING([--disable-internal-jimtcl], [Disable building internal jimtcl]),\n  [use_internal_jimtcl=$enableval], [use_internal_jimtcl=yes])\n\nAC_ARG_ENABLE([jimtcl-maintainer],\n  AS_HELP_STRING([--enable-jimtcl-maintainer], [Enable maintainer mode when building internal jimtcl]),\n  [use_internal_jimtcl_maintainer=$enableval], [use_internal_jimtcl_maintainer=no])\n\nAC_ARG_ENABLE([internal-libjaylink],\n  AS_HELP_STRING([--enable-internal-libjaylink],\n  [Enable building internal libjaylink]),\n  [use_internal_libjaylink=$enableval], [use_internal_libjaylink=no])\n\nAC_ARG_ENABLE([remote-bitbang],\n  AS_HELP_STRING([--enable-remote-bitbang], [Enable building support for the Remote Bitbang driver]),\n  [build_remote_bitbang=$enableval], [build_remote_bitbang=no])\n\nAS_CASE([\"${host_cpu}\"],\n  [i?86|x86*], [],\n  [\n    AS_IF([test \"x$parport_use_ppdev\" = \"xno\"], [\n      AC_MSG_WARN([--disable-parport-ppdev is not supported by the host CPU])\n    ])\n    parport_use_ppdev=yes\n])\n\ncan_build_buspirate=yes\n\nAS_CASE([$host_os],\n  [cygwin*], [\n    is_win32=yes\n    parport_use_ppdev=no\n\n    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([], [[return __MINGW32__;]])],\n      [is_mingw=yes],[is_mingw=no])\n    AS_IF([test \"x$is_mingw\" = \"xyes\"], [\n      AS_IF([test \"x$parport_use_giveio\" = \"xno\"], [\n        AC_MSG_WARN([--disable-parport-giveio is not supported by MinGW32 hosts])\n      ])\n      parport_use_giveio=yes\n      is_cygwin=no\n    ], [\n      is_cygwin=yes\n      # sys/io.h needed under cygwin for parport access\n      AS_IF([test \"x$build_parport\" = \"xyes\"], [\n        AC_CHECK_HEADERS([sys/io.h],[],AC_MSG_ERROR([Please install the cygwin ioperm package]))\n      ])\n    ])\n  ],\n  [mingw* | msys*], [\n    is_mingw=yes\n    is_win32=yes\n    parport_use_ppdev=no\n\n    AS_IF([test \"x$parport_use_giveio\" = \"xno\"], [\n      AC_MSG_WARN([--disable-parport-giveio is not supported by MinGW32 hosts])\n    ])\n    parport_use_giveio=yes\n\n    AS_IF([test \"x$ADAPTER_VAR([buspirate])\" = \"xyes\"], [\n      AC_MSG_ERROR([The Bus Pirate adapter is currently not supported by MinGW32 hosts.])\n    ])\n\n    # In case enable_buspirate=auto, make sure it will not be built.\n    can_build_buspirate=no\n\n    AC_SUBST([HOST_CPPFLAGS], [\"-D__USE_MINGW_ANSI_STDIO -DFD_SETSIZE=128\"])\n  ],\n  [darwin*], [\n    is_darwin=yes\n\n    AS_IF([test \"x$parport_use_giveio\" = \"xyes\"], [\n      AC_MSG_WARN([--enable-parport-giveio cannot be used by Darwin hosts])\n    ])\n    parport_use_giveio=no\n  ],\n  [\n    AS_IF([test \"x$parport_use_giveio\" = \"xyes\"], [\n      AC_MSG_WARN([--enable-parport-giveio cannot be used by ]$host[ hosts])\n    ])\n    parport_use_giveio=no\n])\n\nAS_IF([test \"x$is_cygwin\" = \"xyes\"], [\n    AC_DEFINE([IS_CYGWIN], [1], [1 if building for Cygwin.])\n], [\n    AC_DEFINE([IS_CYGWIN], [0], [0 if not building for Cygwin.])\n])\n\nAS_IF([test \"x$is_mingw\" = \"xyes\"], [\n    AC_DEFINE([IS_MINGW], [1], [1 if building for Mingw.])\n], [\n    AC_DEFINE([IS_MINGW], [0], [0 if not building for Mingw.])\n])\n\nAS_IF([test \"x$is_win32\" = \"xyes\"], [\n    AC_DEFINE([IS_WIN32], [1], [1 if building for Win32.])\n], [\n    AC_DEFINE([IS_WIN32], [0], [0 if not building for Win32.])\n])\n\nAS_IF([test \"x$is_darwin\" = \"xyes\"], [\n    AC_DEFINE([IS_DARWIN], [1], [1 if building for Darwin.])\n], [\n    AC_DEFINE([IS_DARWIN], [0], [0 if not building for Darwin.])\n])\n\nAS_IF([test \"x$build_parport\" = \"xyes\"], [\n  build_bitbang=yes\n  AC_DEFINE([BUILD_PARPORT], [1], [1 if you want parport.])\n], [\n  AC_DEFINE([BUILD_PARPORT], [0], [0 if you don't want parport.])\n])\n\nAS_IF([test \"x$build_rshim\" = \"xyes\"], [\n  AC_DEFINE([BUILD_RSHIM], [1], [1 if you want to debug BlueField SoC via rshim.])\n], [\n  AC_DEFINE([BUILD_RSHIM], [0], [0 if you don't want to debug BlueField SoC via rshim.])\n])\n\nAS_IF([test \"x$build_dmem\" = \"xyes\"], [\n  AC_DEFINE([BUILD_DMEM], [1], [1 if you want to debug via Direct Mem.])\n], [\n  AC_DEFINE([BUILD_DMEM], [0], [0 if you don't want to debug via Direct Mem.])\n])\n\nAS_IF([test \"x$ADAPTER_VAR([dummy])\" != \"xno\"], [\n  build_bitbang=yes\n])\n\nAS_IF([test \"x$build_ep93xx\" = \"xyes\"], [\n  build_bitbang=yes\n  AC_DEFINE([BUILD_EP93XX], [1], [1 if you want ep93xx.])\n], [\n  AC_DEFINE([BUILD_EP93XX], [0], [0 if you don't want ep93xx.])\n])\n\nAS_IF([test \"x$build_at91rm9200\" = \"xyes\"], [\n  build_bitbang=yes\n  AC_DEFINE([BUILD_AT91RM9200], [1], [1 if you want at91rm9200.])\n], [\n  AC_DEFINE([BUILD_AT91RM9200], [0], [0 if you don't want at91rm9200.])\n])\n\nAS_IF([test \"x$build_bcm2835gpio\" = \"xyes\"], [\n  build_bitbang=yes\n  AC_DEFINE([BUILD_BCM2835GPIO], [1], [1 if you want bcm2835gpio.])\n], [\n  AC_DEFINE([BUILD_BCM2835GPIO], [0], [0 if you don't want bcm2835gpio.])\n])\n\nAS_IF([test \"x$build_imx_gpio\" = \"xyes\"], [\n  build_bitbang=yes\n  AC_DEFINE([BUILD_IMX_GPIO], [1], [1 if you want imx_gpio.])\n], [\n  AC_DEFINE([BUILD_IMX_GPIO], [0], [0 if you don't want imx_gpio.])\n])\n\nAS_IF([test \"x$build_am335xgpio\" = \"xyes\"], [\n  build_bitbang=yes\n  AC_DEFINE([BUILD_AM335XGPIO], [1], [1 if you want am335xgpio.])\n], [\n  AC_DEFINE([BUILD_AM335XGPIO], [0], [0 if you don't want am335xgpio.])\n])\n\nAS_IF([test \"x$parport_use_ppdev\" = \"xyes\"], [\n  AC_DEFINE([PARPORT_USE_PPDEV], [1], [1 if you want parport to use ppdev.])\n], [\n  AC_DEFINE([PARPORT_USE_PPDEV], [0], [0 if you don't want parport to use ppdev.])\n])\n\nAS_IF([test \"x$parport_use_giveio\" = \"xyes\"], [\n  AC_DEFINE([PARPORT_USE_GIVEIO], [1], [1 if you want parport to use giveio.])\n], [\n  AC_DEFINE([PARPORT_USE_GIVEIO], [0], [0 if you don't want parport to use giveio.])\n])\n\nAS_IF([test \"x$build_jtag_vpi\" = \"xyes\"], [\n  AC_DEFINE([BUILD_JTAG_VPI], [1], [1 if you want JTAG VPI.])\n], [\n  AC_DEFINE([BUILD_JTAG_VPI], [0], [0 if you don't want JTAG VPI.])\n])\n\nAS_IF([test \"x$build_vdebug\" = \"xyes\"], [\n  AC_DEFINE([BUILD_VDEBUG], [1], [1 if you want Cadence vdebug interface.])\n], [\n  AC_DEFINE([BUILD_VDEBUG], [0], [0 if you don't want Cadence vdebug interface.])\n])\n\nAS_IF([test \"x$build_jtag_dpi\" = \"xyes\"], [\n  AC_DEFINE([BUILD_JTAG_DPI], [1], [1 if you want JTAG DPI.])\n], [\n  AC_DEFINE([BUILD_JTAG_DPI], [0], [0 if you don't want JTAG DPI.])\n])\n\n\nAS_IF([test \"x$build_amtjtagaccel\" = \"xyes\"], [\n  AC_DEFINE([BUILD_AMTJTAGACCEL], [1], [1 if you want the Amontec JTAG-Accelerator driver.])\n], [\n  AC_DEFINE([BUILD_AMTJTAGACCEL], [0], [0 if you don't want the Amontec JTAG-Accelerator driver.])\n])\n\nAS_IF([test \"x$build_gw16012\" = \"xyes\"], [\n  AC_DEFINE([BUILD_GW16012], [1], [1 if you want the Gateworks GW16012 driver.])\n], [\n  AC_DEFINE([BUILD_GW16012], [0], [0 if you don't want the Gateworks GW16012 driver.])\n])\n\nAS_IF([test \"x$use_internal_jimtcl\" = \"xyes\"], [\n  AS_IF([test -f \"$srcdir/jimtcl/configure\"], [\n    AS_IF([test \"x$use_internal_jimtcl_maintainer\" = \"xyes\"], [\n      jimtcl_config_options=\"--disable-install-jim --with-ext=json --minimal --disable-ssl --maintainer\"\n    ], [\n      jimtcl_config_options=\"--disable-install-jim --with-ext=json --minimal --disable-ssl\"\n    ])\n    AX_CONFIG_SUBDIR_OPTION([jimtcl], [$jimtcl_config_options])\n  ], [\n    AC_MSG_ERROR([jimtcl not found, run git submodule init and git submodule update.])\n  ])\n], [\n  PKG_CHECK_MODULES([JIMTCL], [jimtcl >= 0.79], [\n      have_jimtcl_pkg_config=yes\n    ], [\n      have_jimtcl_pkg_config=no\n      AC_CHECK_HEADER([jim.h], [], [\n        AC_MSG_ERROR([jimtcl is required but not found via pkg-config and system includes])\n      ])\n  ])\n])\n\nAS_IF([test \"x$build_remote_bitbang\" = \"xyes\"], [\n  build_bitbang=yes\n  AC_DEFINE([BUILD_REMOTE_BITBANG], [1], [1 if you want the Remote Bitbang driver.])\n], [\n  AC_DEFINE([BUILD_REMOTE_BITBANG], [0], [0 if you don't want the Remote Bitbang driver.])\n])\n\nAS_IF([test \"x$build_sysfsgpio\" = \"xyes\"], [\n  build_bitbang=yes\n  AC_DEFINE([BUILD_SYSFSGPIO], [1], [1 if you want the SysfsGPIO driver.])\n], [\n  AC_DEFINE([BUILD_SYSFSGPIO], [0], [0 if you don't want SysfsGPIO driver.])\n])\n\nPKG_CHECK_MODULES([LIBUSB1], [libusb-1.0], [\n\tuse_libusb1=yes\n\tAC_DEFINE([HAVE_LIBUSB1], [1], [Define if you have libusb-1.x])\n\tLIBUSB1_CFLAGS=`echo $LIBUSB1_CFLAGS | sed 's/-I/-isystem /'`\n\tAC_MSG_NOTICE([libusb-1.0 header bug workaround: LIBUSB1_CFLAGS changed to \"$LIBUSB1_CFLAGS\"])\n\tPKG_CHECK_EXISTS([libusb-1.0 >= 1.0.16],\n\t\t[AC_DEFINE([HAVE_LIBUSB_GET_PORT_NUMBERS], [1], [Define if your libusb has libusb_get_port_numbers()])])\n  ], [\n\tuse_libusb1=no\n\tAC_MSG_WARN([libusb-1.x not found, trying legacy libusb-0.1 as a fallback; consider installing libusb-1.x instead])\n])\n\nAC_ARG_WITH([capstone],\n\t\tAS_HELP_STRING([--with-capstone], [Use Capstone disassembly library (default=auto)])\n\t, [\n\t\tenable_capstone=$withval\n\t], [\n\t\tenable_capstone=auto\n])\n\nAS_IF([test \"x$enable_capstone\" != xno], [\n\tPKG_CHECK_MODULES([CAPSTONE], [capstone], [\n\t\tAC_DEFINE([HAVE_CAPSTONE], [1], [1 if you have Capstone disassembly framework.])\n\t], [\n\t\tif test \"x$enable_capstone\" != xauto; then\n\t\t\tAC_MSG_ERROR([--with-capstone was given, but test for Capstone failed])\n\t\tfi\n\t\tenable_capstone=no\n\t])\n])\n\nAS_IF([test \"x$enable_capstone\" == xno], [\n\tAC_DEFINE([HAVE_CAPSTONE], [0], [0 if you don't have Capstone disassembly framework.])\n])\n\nfor hidapi_lib in hidapi hidapi-hidraw hidapi-libusb; do\n\tPKG_CHECK_MODULES([HIDAPI],[$hidapi_lib],[\n\t\tuse_hidapi=yes\n\t\tbreak\n\t],[\n\t\tuse_hidapi=no\n\t])\ndone\n\nPKG_CHECK_MODULES([LIBFTDI], [libftdi1], [\n\tuse_libftdi=yes\n\tPKG_CHECK_EXISTS([libftdi1 >= 1.5],\n\t\t[AC_DEFINE([HAVE_LIBFTDI_TCIOFLUSH], [1], [Define if your libftdi has ftdi_tcioflush()])])\n  ], [\n\tPKG_CHECK_MODULES([LIBFTDI], [libftdi], [use_libftdi=yes], [use_libftdi=no])\n])\n\nPKG_CHECK_MODULES([LIBGPIOD], [libgpiod < 2.0], [\n\tuse_libgpiod=yes\n\tPKG_CHECK_EXISTS([libgpiod >= 1.5],\n\t\t[AC_DEFINE([HAVE_LIBGPIOD1_FLAGS_BIAS], [1], [define if libgpiod v1 has line request flags bias])])\n], [use_libgpiod=no])\n\nPKG_CHECK_MODULES([LIBJAYLINK], [libjaylink >= 0.2],\n\t[use_libjaylink=yes], [use_libjaylink=no])\n\n# Arg $1: An array of adapter triplets, used to derive option and variable names for each adapter.\n# Arg $2: Whether the adapters can be enabled, for example, because\n#         their prerequisites are installed in the system.\n# Arg $3: What prerequisites are missing, to be shown in an error message\n#         if an adapter was requested but cannot be enabled.\nm4_define([PROCESS_ADAPTERS], [\n  m4_foreach([adapter], [$1], [\n\tAS_IF([test $2], [\n\t\tAS_IF([test \"x$ADAPTER_VAR([adapter])\" != \"xno\"], [\n\t\t\tAC_DEFINE([BUILD_]ADAPTER_SYM([adapter]), [1], [1 if you want the ]ADAPTER_DESC([adapter]).)\n\t\t], [\n\t\t\tAC_DEFINE([BUILD_]ADAPTER_SYM([adapter]), [0], [0 if you do not want the ]ADAPTER_DESC([adapter]).)\n\t\t])\n\t], [\n\t\tAS_IF([test \"x$ADAPTER_VAR([adapter])\" = \"xyes\"], [\n\t\t\tAC_MSG_ERROR([$3 is required for [adapter] \"ADAPTER_DESC([adapter])\".])\n\t\t])\n\t\tADAPTER_VAR([adapter])=no\n\t\tAC_DEFINE([BUILD_]ADAPTER_SYM([adapter]), [0], [0 if you do not want the ]ADAPTER_DESC([adapter]).)\n\t])\n\tAM_CONDITIONAL(ADAPTER_SYM([adapter]), [test \"x$ADAPTER_VAR([adapter])\" != \"xno\"])\n  ])\n])\n\nPROCESS_ADAPTERS([USB1_ADAPTERS], [\"x$use_libusb1\" = \"xyes\"], [libusb-1.x])\nPROCESS_ADAPTERS([HIDAPI_ADAPTERS], [\"x$use_hidapi\" = \"xyes\"], [hidapi])\nPROCESS_ADAPTERS([HIDAPI_USB1_ADAPTERS], [\"x$use_hidapi\" = \"xyes\" -a \"x$use_libusb1\" = \"xyes\"], [hidapi and libusb-1.x])\nPROCESS_ADAPTERS([LIBFTDI_ADAPTERS], [\"x$use_libftdi\" = \"xyes\"], [libftdi])\nPROCESS_ADAPTERS([LIBFTDI_USB1_ADAPTERS], [\"x$use_libftdi\" = \"xyes\" -a \"x$use_libusb1\" = \"xyes\"], [libftdi and libusb-1.x])\nPROCESS_ADAPTERS([LIBGPIOD_ADAPTERS], [\"x$use_libgpiod\" = \"xyes\"], [Linux libgpiod])\nPROCESS_ADAPTERS([LIBJAYLINK_ADAPTERS], [\"x$use_internal_libjaylink\" = \"xyes\" -o \"x$use_libjaylink\" = \"xyes\"], [libjaylink-0.2])\nPROCESS_ADAPTERS([PCIE_ADAPTERS], [\"x$is_linux\" = \"xyes\"], [Linux build])\nPROCESS_ADAPTERS([SERIAL_PORT_ADAPTERS], [\"x$can_build_buspirate\" = \"xyes\"],\n                                         [internal error: validation should happen beforehand])\nPROCESS_ADAPTERS([DUMMY_ADAPTER], [true], [unused])\n\nAS_IF([test \"x$enable_linuxgpiod\" != \"xno\"], [\n  build_bitbang=yes\n])\n\nAS_IF([test \"x$enable_stlink\" != \"xno\" -o \"x$enable_ti_icdi\" != \"xno\" -o \"x$enable_nulink\" != \"xno\"], [\n\tAC_DEFINE([BUILD_HLADAPTER], [1], [1 if you want the High Level JTAG driver.])\n\tAM_CONDITIONAL([HLADAPTER], [true])\n], [\n\tAC_DEFINE([BUILD_HLADAPTER], [0], [0 if you want the High Level JTAG driver.])\n\tAM_CONDITIONAL([HLADAPTER], [false])\n])\nAM_CONDITIONAL([HLADAPTER_STLINK], [test \"x$enable_stlink\" != \"xno\"])\nAM_CONDITIONAL([HLADAPTER_ICDI], [test \"x$enable_ti_icdi\" != \"xno\"])\nAM_CONDITIONAL([HLADAPTER_NULINK], [test \"x$enable_nulink\" != \"xno\"])\n\nAS_IF([test \"x$enable_jlink\" != \"xno\"], [\n  AS_IF([test \"x$use_internal_libjaylink\" = \"xyes\"], [\n    AS_IF([test -f \"$srcdir/src/jtag/drivers/libjaylink/configure.ac\"], [\n      AX_CONFIG_SUBDIR_OPTION([src/jtag/drivers/libjaylink],\n\t\t[--enable-subproject-build])\n    ], [\n      AC_MSG_ERROR([Internal libjaylink not found, run 'git submodule init' and 'git submodule update'.])\n    ])\n  ])\n])\n\n# Presto needs the bitq module\nAS_IF([test \"x$enable_presto\" != \"xno\"], [\n  build_bitq=yes\n])\n\n# esp-usb-jtag also needs the bitq module\nAS_IF([test \"x$enable_esp_usb_jtag\" != \"xno\"], [\n  build_bitq=yes\n])\n\nAM_CONDITIONAL([RELEASE], [test \"x$build_release\" = \"xyes\"])\nAM_CONDITIONAL([PARPORT], [test \"x$build_parport\" = \"xyes\"])\nAM_CONDITIONAL([GIVEIO], [test \"x$parport_use_giveio\" = \"xyes\"])\nAM_CONDITIONAL([EP93XX], [test \"x$build_ep93xx\" = \"xyes\"])\nAM_CONDITIONAL([AT91RM9200], [test \"x$build_at91rm9200\" = \"xyes\"])\nAM_CONDITIONAL([BCM2835GPIO], [test \"x$build_bcm2835gpio\" = \"xyes\"])\nAM_CONDITIONAL([IMX_GPIO], [test \"x$build_imx_gpio\" = \"xyes\"])\nAM_CONDITIONAL([AM335XGPIO], [test \"x$build_am335xgpio\" = \"xyes\"])\nAM_CONDITIONAL([BITBANG], [test \"x$build_bitbang\" = \"xyes\"])\nAM_CONDITIONAL([JTAG_VPI], [test \"x$build_jtag_vpi\" = \"xyes\"])\nAM_CONDITIONAL([VDEBUG], [test \"x$build_vdebug\" = \"xyes\"])\nAM_CONDITIONAL([JTAG_DPI], [test \"x$build_jtag_dpi\" = \"xyes\"])\nAM_CONDITIONAL([USB_BLASTER_DRIVER], [test \"x$enable_usb_blaster\" != \"xno\" -o \"x$enable_usb_blaster_2\" != \"xno\"])\nAM_CONDITIONAL([AMTJTAGACCEL], [test \"x$build_amtjtagaccel\" = \"xyes\"])\nAM_CONDITIONAL([GW16012], [test \"x$build_gw16012\" = \"xyes\"])\nAM_CONDITIONAL([REMOTE_BITBANG], [test \"x$build_remote_bitbang\" = \"xyes\"])\nAM_CONDITIONAL([SYSFSGPIO], [test \"x$build_sysfsgpio\" = \"xyes\"])\nAM_CONDITIONAL([USE_LIBUSB1], [test \"x$use_libusb1\" = \"xyes\"])\nAM_CONDITIONAL([IS_CYGWIN], [test \"x$is_cygwin\" = \"xyes\"])\nAM_CONDITIONAL([IS_MINGW], [test \"x$is_mingw\" = \"xyes\"])\nAM_CONDITIONAL([IS_WIN32], [test \"x$is_win32\" = \"xyes\"])\nAM_CONDITIONAL([IS_DARWIN], [test \"x$is_darwin\" = \"xyes\"])\nAM_CONDITIONAL([BITQ], [test \"x$build_bitq\" = \"xyes\"])\nAM_CONDITIONAL([USE_LIBFTDI], [test \"x$use_libftdi\" = \"xyes\"])\nAM_CONDITIONAL([USE_LIBGPIOD], [test \"x$use_libgpiod\" = \"xyes\"])\nAM_CONDITIONAL([USE_HIDAPI], [test \"x$use_hidapi\" = \"xyes\"])\nAM_CONDITIONAL([USE_LIBJAYLINK], [test \"x$use_libjaylink\" = \"xyes\"])\nAM_CONDITIONAL([RSHIM], [test \"x$build_rshim\" = \"xyes\"])\nAM_CONDITIONAL([DMEM], [test \"x$build_dmem\" = \"xyes\"])\nAM_CONDITIONAL([HAVE_CAPSTONE], [test \"x$enable_capstone\" != \"xno\"])\n\nAM_CONDITIONAL([INTERNAL_JIMTCL], [test \"x$use_internal_jimtcl\" = \"xyes\"])\nAM_CONDITIONAL([HAVE_JIMTCL_PKG_CONFIG], [test \"x$have_jimtcl_pkg_config\" = \"xyes\"])\nAM_CONDITIONAL([INTERNAL_LIBJAYLINK], [test \"x$use_internal_libjaylink\" = \"xyes\"])\n\nAM_CONDITIONAL([USE_GCOV], [test \"x$enable_gcov\" = \"xyes\"])\n\n# Look for environ alternatives.  Possibility #1: is environ in unistd.h or stdlib.h?\nAC_MSG_CHECKING([for environ in unistd.h and stdlib.h])\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n#define _GNU_SOURCE\n#include <unistd.h>\n#include <stdlib.h>\n  ]], [[char **ep = environ;]]\n  )], [\n    AC_MSG_RESULT([yes])\n    has_environ=yes\n  ], [\n    AC_MSG_RESULT([no])\n\n    # Possibility #2: can environ be found in an available library?\n    AC_MSG_CHECKING([for extern environ])\n    AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n    extern char **environ;\n    ]], [[char **ep = environ;]]\n      )], [\n        AC_DEFINE(NEED_ENVIRON_EXTERN, [1], [Must declare 'environ' to use it.])\n        has_environ=yes\n      ], [\n        has_environ=no\n      ])\n    AC_MSG_RESULT([${has_environ}])\n  ])\n\nAS_IF([test \"x${has_environ}\" != \"xyes\" ], [\n  AC_MSG_FAILURE([Could not find 'environ' in unistd.h or available libraries.])\n])\n\nAC_DEFINE([_GNU_SOURCE],[1],[Use GNU C library extensions (e.g. stdndup).])\n\n# set default gcc warnings\nGCC_WARNINGS=\"-Wall -Wstrict-prototypes -Wformat-security -Wshadow\"\nAS_IF([test \"x${gcc_wextra}\" = \"xyes\"], [\n  GCC_WARNINGS=\"${GCC_WARNINGS} -Wextra -Wno-unused-parameter\"\n  GCC_WARNINGS=\"${GCC_WARNINGS} -Wbad-function-cast\"\n  GCC_WARNINGS=\"${GCC_WARNINGS} -Wcast-align\"\n  GCC_WARNINGS=\"${GCC_WARNINGS} -Wredundant-decls\"\n  GCC_WARNINGS=\"${GCC_WARNINGS} -Wpointer-arith\"\n  GCC_WARNINGS=\"${GCC_WARNINGS} -Wundef\"\n])\nAS_IF([test \"x${gcc_werror}\" = \"xyes\"], [\n  GCC_WARNINGS=\"${GCC_WARNINGS} -Werror\"\n])\n\n# override default gcc cflags\nAS_IF([test \"x$gcc_warnings\" = \"xyes\"], [\n  AC_SUBST([GCC_WARNINGS], [$GCC_WARNINGS])\n])\n\nAC_SUBST(EXTRA_DIST_NEWS, [\"$(echo $srcdir/NEWS-*)\"])\n\nAC_CONFIG_FILES([\n  Makefile\n])\nAC_OUTPUT\n\nAS_IF([test \"x$enable_jlink\" != \"xno\"], [\n  AS_IF([test \"x$use_internal_libjaylink\" = \"xyes\"], [\n    AC_MSG_WARN([Using the internal libjaylink is deprecated and will not be possible in the future.])\n  ]])\n)\n\necho\necho\necho OpenOCD configuration summary\necho --------------------------------------------------\nm4_foreach([adapter], [USB1_ADAPTERS,\n\tHIDAPI_ADAPTERS, HIDAPI_USB1_ADAPTERS, LIBFTDI_ADAPTERS,\n\tLIBFTDI_USB1_ADAPTERS,\n\tLIBGPIOD_ADAPTERS,\n\tLIBJAYLINK_ADAPTERS, PCIE_ADAPTERS, SERIAL_PORT_ADAPTERS,\n\tDUMMY_ADAPTER,\n\tOPTIONAL_LIBRARIES,\n\tCOVERAGE],\n\t[s=m4_format([\"%-40s\"], ADAPTER_DESC([adapter]))\n\tAS_CASE([$ADAPTER_VAR([adapter])],\n\t\t[auto], [\n\t\t\techo \"$s\"yes '(auto)'\n\t\t],\n\t\t[yes], [\n\t\t\techo \"$s\"yes\n\t\t],\n\t\t[no], [\n\t\t\techo \"$s\"no\n\t\t],\n\t\t[\n\t\t\tAC_MSG_ERROR(m4_normalize([\n\t\t\t\tError in [adapter] \"ADAPTER_ARG([adapter])\": Variable \"ADAPTER_VAR([adapter])\"\n\t\t\t\thas invalid value \"$ADAPTER_VAR([adapter])\".]))\n\t])\n])\necho\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "guess-rev.sh",
          "type": "blob",
          "size": 2.01171875,
          "content": "#!/bin/sh\n#\n# This scripts adds local version information from the version\n# control systems git, mercurial (hg) and subversion (svn).\n#\n# Copied from Linux 2.6.32 scripts/setlocalversion and modified\n# slightly to work better for OpenOCD.\n#\n\nusage() {\n\techo \"Usage: $0 [srctree]\" >&2\n\texit 1\n}\n\ncd \"${1:-.}\" || usage\n\n# Check for git and a git repo.\nif head=`git rev-parse --verify --short HEAD 2>/dev/null`; then\n\n\t# If we are at a tagged commit (like \"v2.6.30-rc6\"), we ignore it,\n\t# because this version is defined in the top level Makefile.\n\tif [ -z \"`git describe --exact-match 2>/dev/null`\" ]; then\n\n\t\t# If we are past a tagged commit (like \"v2.6.30-rc5-302-g72357d5\"),\n\t\t# we pretty print it.\n\t\tif atag=\"`git describe 2>/dev/null`\"; then\n\t\t\techo \"$atag\" | awk -F- '{printf(\"-%05d-%s\", $(NF-1),$(NF))}'\n\n\t\t# If we don't have a tag at all we print -g{commitish}.\n\t\telse\n\t\t\tprintf '%s%s' -g $head\n\t\tfi\n\tfi\n\n\t# Is this git on svn?\n\tif git config --get svn-remote.svn.url >/dev/null; then\n\t        printf -- '-svn%s' \"`git svn find-rev $head`\"\n\tfi\n\n\t# Update index only on r/w media\n\t[ -w . ] && git update-index --refresh --unmerged > /dev/null\n\n\t# Check for uncommitted changes\n\tif git diff-index --name-only HEAD | grep -v \"^scripts/package\" \\\n\t    | read dummy; then\n\t\tprintf '%s' -dirty\n\tfi\n\n\t# All done with git\n\texit\nfi\n\n# Check for mercurial and a mercurial repo.\nif hgid=`hg id 2>/dev/null`; then\n\ttag=`printf '%s' \"$hgid\" | cut -d' ' -f2`\n\n\t# Do we have an untagged version?\n\tif [ -z \"$tag\" -o \"$tag\" = tip ]; then\n\t\tid=`printf '%s' \"$hgid\" | sed 's/[+ ].*//'`\n\t\tprintf '%s%s' -hg \"$id\"\n\tfi\n\n\t# Are there uncommitted changes?\n\t# These are represented by + after the changeset id.\n\tcase \"$hgid\" in\n\t\t*+|*+\\ *) printf '%s' -dirty ;;\n\tesac\n\n\t# All done with mercurial\n\texit\nfi\n\n# Check for svn and a svn repo.\nif rev=`svn info 2>/dev/null | grep '^Last Changed Rev'`; then\n\trev=`echo $rev | awk '{print $NF}'`\n\tprintf -- '-svn%s' \"$rev\"\n\n\t# All done with svn\n\texit\nfi\n\n# There's no recognized repository; we must be a snapshot.\nprintf -- '-snapshot'\n"
        },
        {
          "name": "jimtcl",
          "type": "commit",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tcl",
          "type": "tree",
          "content": null
        },
        {
          "name": "testing",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "uncrustify.cfg",
          "type": "blob",
          "size": 3.509765625,
          "content": "# SPDX-License-Identifier: GPL-2.0-or-later\n\ntok_split_gte=false\nutf8_byte=false\nutf8_force=false\nindent_cmt_with_tabs=true\nindent_align_string=false\nindent_braces=false\nindent_braces_no_func=false\nindent_braces_no_class=false\nindent_braces_no_struct=false\nindent_brace_parent=false\nindent_namespace=false\nindent_extern=false\nindent_class=false\nindent_class_colon=false\nindent_else_if=false\nindent_var_def_cont=false\nindent_func_call_param=true\nindent_func_def_param=true\nindent_func_proto_param=false\nindent_func_class_param=false\nindent_func_ctor_var_param=false\nindent_template_param=false\nindent_func_param_double=true\nindent_relative_single_line_comments=false\nindent_col1_comment=false\nindent_access_spec_body=false\nindent_paren_nl=false\nindent_comma_paren=false\nindent_bool_paren=false\nindent_first_bool_expr=false\nindent_square_nl=false\nindent_preserve_sql=false\nindent_align_assign=false\nsp_balance_nested_parens=false\nalign_keep_tabs=false\nalign_with_tabs=false\nalign_on_tabstop=false\nalign_number_left=false\nalign_func_params=false\nalign_same_func_call_params=false\nalign_var_def_colon=false\nalign_var_def_attribute=false\nalign_var_def_inline=false\nalign_right_cmt_mix=false\nalign_on_operator=false\nalign_mix_var_proto=false\nalign_single_line_func=false\nalign_single_line_brace=false\nalign_nl_cont=false\nalign_left_shift=true\nalign_oc_decl_colon=false\nnl_collapse_empty_body=false\nnl_assign_leave_one_liners=false\nnl_class_leave_one_liners=false\nnl_enum_leave_one_liners=false\nnl_getset_leave_one_liners=false\nnl_func_leave_one_liners=false\nnl_if_leave_one_liners=false\nnl_multi_line_cond=false\nnl_multi_line_define=false\nnl_before_case=false\nnl_after_case=false\nnl_after_return=false\nnl_after_semicolon=false\nnl_after_brace_open=false\nnl_after_brace_open_cmt=false\nnl_after_vbrace_open=true\nnl_after_vbrace_open_empty=false\nnl_after_brace_close=false\nnl_after_vbrace_close=false\nnl_define_macro=false\nnl_squeeze_ifdef=false\nnl_ds_struct_enum_cmt=false\nnl_ds_struct_enum_close_brace=false\nnl_create_if_one_liner=false\nnl_create_for_one_liner=false\nnl_create_while_one_liner=false\nls_for_split_full=false\nls_func_split_full=true\nnl_after_multiline_comment=false\neat_blanks_after_open_brace=false\neat_blanks_before_close_brace=false\nmod_full_brace_if_chain=false\nmod_pawn_semicolon=false\nmod_full_paren_if_bool=false\nmod_remove_extra_semicolon=false\nmod_sort_import=false\nmod_sort_using=false\nmod_sort_include=false\nmod_move_case_break=false\nmod_remove_empty_return=false\ncmt_indent_multi=false\ncmt_c_group=true\ncmt_c_nl_start=false\ncmt_c_nl_end=false\ncmt_cpp_group=false\ncmt_cpp_nl_start=false\ncmt_cpp_nl_end=false\ncmt_cpp_to_c=true\ncmt_star_cont=true\ncmt_multi_check_last=false\ncmt_insert_before_preproc=false\npp_indent_at_level=false\npp_region_indent_code=false\npp_if_indent_code=false\npp_define_at_level=false\nindent_columns=8\nindent_continue=8\nindent_switch_case=8\nnl_end_of_file_min=1\ncode_width=100\nmod_full_brace_nl=2\ncmt_width=100\ncmt_reflow_mode=2\nindent_with_tabs=2\nsp_after_assign=force\nsp_compare=add\nsp_before_ptr_star=force\nsp_between_ptr_star=remove\nsp_after_ptr_star=remove\nsp_before_ptr_star_func=force\nsp_before_sparen=add\nsp_inside_sparen=remove\nsp_inside_fparen=remove\nsp_else_brace=force\nsp_brace_else=force\nnl_end_of_file=force\nnl_assign_brace=remove\nnl_enum_brace=remove\nnl_struct_brace=remove\nnl_union_brace=remove\nnl_if_brace=remove\nnl_brace_else=remove\nnl_elseif_brace=remove\nnl_else_brace=remove\nnl_for_brace=remove\nnl_while_brace=remove\nnl_switch_brace=remove\nnl_func_type_name=remove\nnl_fdef_brace=force\nmod_full_brace_for=remove\nmod_full_brace_if=remove\n"
        }
      ]
    }
  ]
}