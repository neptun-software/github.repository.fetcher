{
  "metadata": {
    "timestamp": 1736710191521,
    "page": 887,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "AcademySoftwareFoundation/openexr",
      "stars": 1651,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".bazelrc",
          "type": "blob",
          "size": 0.3671875,
          "content": "# SPDX-License-Identifier: BSD-3-Clause\n# Copyright (c) Contributors to the OpenEXR Project.\n\ncommon --enable_platform_specific_config\n\n# Enable modern C++ features\nbuild:linux --cxxopt=-std=c++17\nbuild:linux --host_cxxopt=-std=c++17\nbuild:macos --cxxopt=-std=c++17\nbuild:macos --host_cxxopt=-std=c++17\nbuild:windows --cxxopt=/std:c++17\nbuild:windows --host_cxxopt=/std:c++17\n"
        },
        {
          "name": ".bazelversion",
          "type": "blob",
          "size": 0.005859375,
          "content": "7.3.2\n"
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 3.5830078125,
          "content": "# SPDX-License-Identifier: BSD-3-Clause\n# Copyright Contributors to the OpenEXR Project.\n---\nLanguage:        Cpp\n# BasedOnStyle:  LLVM\nAccessModifierOffset: -4\nAlignAfterOpenBracket: AlwaysBreak\nAlignConsecutiveAssignments: true\nAlignConsecutiveDeclarations: true\nAlignEscapedNewlines: Right\nAlignOperands:   true\nAlignTrailingComments: true\n# AllowAllArgumentsOnNextLine: true\nAllowAllParametersOfDeclarationOnNextLine: true\n# AllowAllConstructorInitializersOnNextLine: true\nAllowShortBlocksOnASingleLine: true\nAllowShortCaseLabelsOnASingleLine: true\nAllowShortFunctionsOnASingleLine: InlineOnly\nAllowShortIfStatementsOnASingleLine: true\nAllowShortLoopsOnASingleLine: false\n# AllowShortLambdasOnASingleLine: true\n# ArrayInitializerAlignmentStyle: Left\nAlwaysBreakAfterDefinitionReturnType: TopLevel\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: MultiLine\nBinPackArguments: false\nBinPackParameters: false\nBraceWrapping:   \n  AfterClass:      true\n  AfterControlStatement: true\n  AfterEnum:       true\n  AfterFunction:   true\n  AfterNamespace:  true\n  AfterObjCDeclaration: true\n  AfterStruct:     true\n  AfterUnion:      true\n  AfterExternBlock: false\n  BeforeCatch:     true\n  BeforeElse:      true\n  IndentBraces:    false\n  SplitEmptyFunction: false\n  SplitEmptyRecord: false\n  SplitEmptyNamespace: false\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Custom\nBreakBeforeInheritanceComma: false\nBreakInheritanceList: BeforeColon\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: true\nBreakConstructorInitializers: BeforeComma\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: false\nColumnLimit:     80\nCommentPragmas:  '^ IWYU pragma:'\nCompactNamespaces: false\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: true\nDerivePointerAlignment: false\nDisableFormat:   false\nFixNamespaceComments: true\nForEachMacros:   \n  - foreach\n  - Q_FOREACH\n  - BOOST_FOREACH\nIncludeBlocks:   Preserve\nIncludeCategories: \n  - Regex:           '^\"(llvm|llvm-c|clang|clang-c)/'\n    Priority:        2\n  - Regex:           '^(<|\"(gtest|gmock|isl|json)/)'\n    Priority:        3\n  - Regex:           '.*'\n    Priority:        1\nIncludeIsMainRegex: '(Test|_test)?$'\nIndentCaseLabels: true\nIndentPPDirectives: AfterHash\nIndentWidth:     4\nIndentWrappedFunctionNames: false\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: true\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBinPackProtocolList: Auto\nObjCBlockIndentWidth: 4\nObjCSpaceAfterProperty: true\nObjCSpaceBeforeProtocolList: true\nPenaltyBreakAssignment: 4\nPenaltyBreakBeforeFirstCallParameter: 8\nPenaltyBreakComment: 1000\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyBreakTemplateDeclaration: 10\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 20\nPointerAlignment: Left\nReflowComments:  false\nSortIncludes:    false\nSortUsingDeclarations: true\nSpaceAfterCStyleCast: true\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCpp11BracedList: false\nSpaceBeforeCtorInitializerColon: true\nSpaceBeforeInheritanceColon: true\nSpaceBeforeParens: Always\nSpaceBeforeRangeBasedForLoopColon: false\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard:        Cpp11\nTabWidth:        8\n#UseTab:          ForIndentation\nUseTab:          Never\n...\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.3740234375,
          "content": "# if you have git newer than 2.23, you can either\n# specify this on the command line\n# git blame foo.cpp --ignore-revs-file path/to/this/file\n# or add this file to your config\n# git config --global blame.ignoreRevsFile .git-blame-ignore-revs\n\n# initial clang-format run\n2a24ae77ab94f4c06b102eba73feb52e2f90cb46\n# clang-format run 17-Mar-2024\n84f58b85aef7a7844f0d3bfb1301e778eb22e42c\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.0078125,
          "content": "# SPDX-License-Identifier: BSD-3-Clause\n# Copyright Contributors to the OpenEXR Project.\nMakefile\nMakefile.in\nautom4te.cache\nconfig.guess\nconfig.sub\nconfig.status\nconfigure\ndepcomp\ninstall-sh\nltmain.sh\nmissing\ntest-driver\nlibtool\ncompile\nstamp-h1\nstamp-h2\nIlmBase/config/IlmBaseConfigInternal.h\nIlmBase/HalfTest/HalfTest\nIlmBase/IexTest/IexTest\nIlmBase/ImathTest/ImathTest\nPyIlmBase/config/PyIlmBaseConfigInternal.h\nPyIlmBase/config/PyIlmBaseConfig.h\nPyIlmBase/PyIlmBase.pc\nPyIlmBase/PyIexTest/pyIexTest\nPyIlmBase/PyImathNumpyTest/pyImathNumpyTest\nPyIlmBase/PyImathTest/pyImathTest\nOpenEXR/config/OpenEXRConfigInternal.h\nOpenEXR/IlmImfTest/IlmImfTest\nOpenEXR/IlmImfUtilTest/IlmImfUtilTest\nOpenEXR/IlmImfFuzzTest/IlmImfFuzzTest\nContrib/DtexToExr/DtexToExr\n.deps\n*.o\n*.lo\n*.deps\n*.libs\n*.Plo\n*.Po\n*.la\n*.so\n*.dylib\n*.m4\n*.log\n*.trs\n*.project\n*.cproject\n.DS_Store\nabi_check\nbuild/\nbuild-win/\nbuild-nuget/\n*~\n.vscode\ndocs/_test_images/\ndist/*\n__pycache__/\n*.py[cod]\n*$py.class\n\n# Ignore Bazel generated files\nbazel-* \nMODULE.bazel.lock\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 7.7041015625,
          "content": "# SPDX-License-Identifier: BSD-3-Clause\n# Copyright (c) Contributors to the OpenEXR Project.\n#\n# This file establishes email equivalences so we can resolve what look like\n# multiple authors, but actually are the same author who has used multiple\n# emails over the course of their involvement with the project.\n#\n# The format is any of the following:\n#     <CANONICAL-EMAIL> <alternate-email>\n#     CANONICAL-NAME <CANONICAL-EMAIL> <alternate-email>\n#     CANONICAL-NAME <CANONICAL-EMAIL> alternate-name <alternate-email>\n#\n# You can check for duplicates with this command:\n#     git shortlog -sne --all\n# That command (and others) will use this file to collapse the duplicates.\n#\n# If you see any duplicates we don't account for here, or if you look at your\n# own entry here and want a different name or email to be your canonical one\n# (we may not have guessed correctly and matched your preferences), please\n# file a PR with the edits to this file.\n\nAaron Demolder <aaron.demolder@gmail.com>\nAbe Fettig <abe@fettig.net>\nAloys Baillet <aloys.baillet+github@gmail.com> aloysb <aloysb@al.com.au>\nAndrew Kunz <akunz@ilm.com>\nAnton Dukhovnikov <antond@wetafx.co.nz> Anton Dukhovnikov <131838425+antond-weta@users.noreply.github.com>\nAntonio Rojas <arojas@archlinux.org>\nAras Pranckevičius <nearaz@gmail.com> Aras Pranckevičius <aras@nesnausk.org>\nAras Pranckevičius <nearaz@gmail.com> Aras Pranckevičius <aras@unity3d.com>\nArkady Shapkin <arkady.shapkin@gmail.com>\nArkell Rasiah <arkellrasiah@gmail.com> Arkell Rasiah <arasiah@ilm.com>\nArkell Rasiah <arkellrasiah@gmail.com> Arkell Rasiah <arasiah@pixsystem.com>\nAxel Waggershauser <awagger@gmail.com>\naxxel <awagger@gmail.com>\nBalázs Oroszi <ignus2@users.noreply.github.com>\nBarnaby Robson <brobson@ilm.com> Barnaby Robson <mail@barnaby.org>\nBen Grimes <72311676+MrGlobby@users.noreply.github.com>\nBernd <waebbl-gentoo@posteo.net>\nBrendan Bolles <brendan@fnordware.com>\nCAHEK7 <ghosts.in.a.box@gmail.com>\nCary Phillips <cary@ilm.com> cary-ilm <cary@ilm.com>\nCary Phillips <cary@ilm.com> Cary Phillips <cary@rnd-build7-sf-38.lucasfilm.com>\nCary Phillips <cary@ilm.com> seabeepea <seabeepea@gmail.com>\nCatherine <catyeo18@users.noreply.github.com>\nChris Leu <cdleu430@gmail.com> cdleu430 <cdleu430@gmail.com>\nChristina Tempelaar-Lietz <xlietz@gmail.com> ¨Christina Tempelaar-Lietz¨ <xlietz@gmail.com>\nChristina Tempelaar-Lietz <xlietz@gmail.com> xlietz <31363633+xlietz@users.noreply.github.com>\nChristopher Horvath <blackencino+git@gmail.com>\nChristopher Kulla <fpsunflower@users.noreply.github.com>\nChristoph Gohlke <cgohlke@cgohlke.com>\ncia-rana <kiwamura0314@gmail.com>\nCristian Martínez <cfuga@cfuga.mx>\nDan Horák <dan@danny.cz>\nDaniel Kaneider <danielkaneider@users.sf.net>\nDarby Johnston <darbyjohnston@yahoo.com>\nDave Sawyer <kingsawyer@gmail.com>\nDavid Korczynski <david@adalogics.com>\nDeveloper-Ecosystem-Engineering <65677710+Developer-Ecosystem-Engineering@users.noreply.github.com>\ndgmzc <dorian.gmz@hotmail.com>\nDiogo Teles Sant'Anna <diogoteles@google.com>\nDirk Lemstra <dirk@lemstra.org> dirk <dirk@git.imagemagick.org>\ndracwyrm <j.scruggs@gmail.com>\nDrew Hess <dhess@ilm.com>\nEd Hanway <ehanway@ilm.com> Ed Hanway <ehanway-ilm@users.noreply.github.com>\nEdward Kmett <ekmett@gmail.com>\nEric Sommerlade <es0m@users.noreply.github.com>\nEric Wimmer <ewimmer@ilm.com>\nE Sommerlade <es0m@users.noreply.github.com>\nfgc <fgc>\nFlorian Kainz <kainz@ilm.com>\nGrant Kim <6302240+enpinion@users.noreply.github.com>\nGregorio Litenstein <g.litenstein@gmail.com>\nGyula Gubacsi <gyula.gubacsi@foundry.com>\nHalfdan Ingvarsson <halfdan@sidefx.com>\nHarry Mallon <hjmallon@gmail.com>\nHuibean Luo <huibean.luo@gmail.com>\nianianda <wyking1030@gmail.com>\nIbraheem Alhashim <ibraheem.alhashim@gmail.com>\nJack Kingsman <jack.kingsman@gmail.com>\nJamie Kenyon <jamie.kenyon@thefoundry.co.uk>\nJan Tojnar <jtojnar@gmail.com>\njbradley <jbradley@dreamworks.com>\nJean-Francois Panisset <32653482+jfpanisset@users.noreply.github.com>\nJens Lindgren <lindgren_jens@hotmail.com>\nJi Hun Yu <jihun@ilm.com>\nJohannes Vollmer <32042925+johannesvollmer@users.noreply.github.com>\nJohn Loy <jloy@pixar.com>\nJohn Mertic <jmertic@linuxfoundation.org>\nJonathan Stone <stonej@github.com>\nJose Luis Cercos-Pita <jlcercos@gmail.com> Jose Luis Cercós Pita <lacigarracomunista@gmail.com>\nJoseph Goldstone <joseph.goldstone@mac.com> Joseph Goldstone <jgoldstone@arri.com>\nJuha Reunanen <juha.reunanen@tomaattinen.com>\nJulian Amann <julian.amann@tum.de>\nJuri Abramov <openexr@dr-abramov.de>  Juri Abramov <gabramov@nvidia.com>\nJuri Abramov <openexr@dr-abramov.de> JuriAbramov <openexr@dr-abramov.de>\nKarl Hendrikse <karlhendrikse@gmail.com> karlhendrikse <karlhendrikse@gmail.com>\nKarl Rasche <karl.rasche@dreamworks.com> Karl Rasche <karlrasche@users.noreply.github.com>\nKevin Wheatley <kevin.wheatley@framestore.com>\nKimball Thurston <kdt3rd@gmail.com>\nkwizart <kwizart@gmail.com>\nLarry Gritz <lg@larrygritz.com>\nLaurens Voerman <l.voerman@rug.nl>\nL. E. Segovia <amy@amyspark.me>\nLiam Fernandez <liam@utexas.edu>\nlilinjie <lilinjie@uniontech.com>\nLucy Wilkes <lucywilkes@users.noreply.github.com>\nluzpaz <luzpaz@users.noreply.github.com>\nmancoast <RobertPancoast77@gmail.com>\nmandree <mandree@users.noreply.github.com>\nMark Reid <mindmark@gmail.com>\nMark Sisson <5761292+marksisson@users.noreply.github.com>\nMartin Aumüller <aumuell@reserv.at>\nMartin Husemann <martin@NetBSD.org>\nMatthäus G. Chajdas <Anteru@users.noreply.github.com>\nMatthias C. M. Troffaes <matthias.troffaes@gmail.com>\nMatt Pharr <matt@pharr.org>\nMd Sadman Chowdhury <61442059+SpicyCatGames@users.noreply.github.com>\nMichael Thomas (malinka) <malinka@entropy-development.com>\nNicholas Yue <yue.nicholas@gmail.com>\nNick Porcino <meshula@hotmail.com> meshula <nick.porcino@gmail.com>\nNick Porcino <meshula@hotmail.com> Nick Porcino <nick.porcino@oculus.com>\nNick Porcino <meshula@hotmail.com> Nick Porcino <nporcino@pixar.com>\nNick Porcino <meshula@hotmail.com> nporcino-pixar <78001580+nporcino-pixar@users.noreply.github.com>\nNick Rasmussen <nick@ilm.com> Nick Rasmussen <nick@jive.org>\nNick Rasmussen <nick@ilm.com> Nick Rasmussen <nick.rasmussen@gmail.com>\nNicolas Chauvet <kwizart@gmail.com>\nNiklas Hambüchen <mail@nh2.me>\nOgreTransporter <OgreTransporter@users.noreply.github.com>\noleksii.vorobiov <oleksii.vorobiov@globallogic.com>\nOwen Thompson <oxt3479@rit.edu>\npatlefort <northon_patrick3@yahoo.ca>\nPaul Schneider <pauls@ilm.com>\nPeter Hillman <peterh@wetafx.co.nz> peterhillman <peterh@wetafx.co.nz>\nPeter Hillman <peterh@wetafx.co.nz> peterhillman <peter@peterhillman.org.uk>\nPeter Steneteg <peter@steneteg.se>\nPeter Urbanec <peterurbanec@users.noreply.github.com>\nPhyrexian <jarko.paska@gmail.com>\nPiotr Stanczyk <piotr.stanczyk@gmail.com> Piotr <pstanczyk@ilm.com>\nPiotr Stanczyk <piotr.stanczyk@gmail.com> Piotr Stanczyk <pstanczyk@ilm.com>\nPiotr Stanczyk <piotr.stanczyk@gmail.com> pstanczyk <pstanczyk@ilm.com>\nRalph Potter <r.potter@bath.ac.uk>\nr-a-sattarov <r.a.sattarov@yandex.ru>\nRémi Achard <remiachard@gmail.com>\nReto Kromer <retokromer@users.noreply.github.com>\nRichard Goedeken <Richard@fascinationsoftware.com>\nSergey Fedorov <vital.had@gmail.com>\nShawn Walker-Salas <shawn.walker@oracle.com>\nSimon Boorer <sboorer@ilm.com>\nSimon Otter <skurmedel@gmail.com>\nSrinath Ravichandran <srinath.pop@gmail.com>\nThanh Ha <thanh.ha@linuxfoundation.org>\nThomas Debesse <dev@illwieckz.net>\nThorsten Kaufmann <thorsten.kaufmann@mackevision.de>\nTimothy Lyanguzov <theta682@gmail.com>\nTransporter <ogre.transporter@gmail.com>\nVertexwahn <julian.amann@tum.de>\nWenzel Jakob <wenzel@inf.ethz.ch>\nWojciech Jarosz <wkjarosz@users.noreply.github.com> wjarosz <wjarosz>\nXo Wang <xow@google.com>\nYaakov Selkowitz <yselkowi@redhat.com>\nYining Karl Li <betajippity@gmail.com>\nYujie Shu <yshu@ilm.com> Yujie Shu (Intern) <yshu@ilm.com>\nzengwei2000 <102871671+zengwei2000@users.noreply.github.com>\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.4033203125,
          "content": "# SPDX-License-Identifier: BSD-3-Clause\n# Copyright Contributors to the OpenEXR Project.\n\n# .readthedocs.yml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\nbuild:\n  os: \"ubuntu-22.04\"\n  tools:\n    python: \"3.9\"\n       \nsphinx:\n  configuration: website/conf.py\n\npython:\n  install:\n    - requirements: website/requirements.txt\n"
        },
        {
          "name": "ASWF",
          "type": "tree",
          "content": null
        },
        {
          "name": "BUILD.bazel",
          "type": "blob",
          "size": 21.0537109375,
          "content": "# SPDX-License-Identifier: BSD-3-Clause\n# Copyright (c) Contributors to the OpenEXR Project.\n\nload(\"@bazel_skylib//rules:expand_template.bzl\", \"expand_template\")\n\nconfig_setting(\n    name = \"windows\",\n    constraint_values = [\"@platforms//os:windows\"],\n)\n\nexpand_template(\n    name = \"IexConfig\",\n    out = \"src/lib/Iex/IexConfig.h\",\n    substitutions = {\n        \"@IEX_INTERNAL_NAMESPACE@\": \"Iex_3_3\",\n        \"@IEX_NAMESPACE_CUSTOM@\": \"0\",\n        \"@IEX_NAMESPACE@\": \"Iex\",\n    },\n    template = \"cmake/IexConfig.h.in\",\n)\n\nexpand_template(\n    name = \"IexConfigInternal\",\n    out = \"src/lib/Iex/IexConfigInternal.h\",\n    substitutions = {\n        \"#cmakedefine HAVE_UCONTEXT_H 1\": \"/* #undef HAVE_UCONTEXT_H */\",\n        \"#cmakedefine IEX_HAVE_CONTROL_REGISTER_SUPPORT 1\": \"/* #undef IEX_HAVE_CONTROL_REGISTER_SUPPORT */\",\n        \"#cmakedefine IEX_HAVE_SIGCONTEXT_CONTROL_REGISTER_SUPPORT 1\": \"/* #undef IEX_HAVE_SIGCONTEXT_CONTROL_REGISTER_SUPPORT */\",\n    },\n    template = \"cmake/IexConfigInternal.h.in\",\n)\n\nexpand_template(\n    name = \"IlmThreadConfig\",\n    out = \"src/lib/IlmThread/IlmThreadConfig.h\",\n    substitutions = {\n        \"@ILMTHREAD_INTERNAL_NAMESPACE@\": \"IlmThread_3_3\",\n        \"@ILMTHREAD_NAMESPACE_CUSTOM@\": \"0\",\n        \"@ILMTHREAD_NAMESPACE@\": \"IlmThread\",\n        \"#cmakedefine01 ILMTHREAD_HAVE_POSIX_SEMAPHORES\": \"#define ILMTHREAD_HAVE_POSIX_SEMAPHORES 0\",\n        \"#cmakedefine01 ILMTHREAD_THREADING_ENABLED\": \"#define ILMTHREAD_THREADING_ENABLED 1\",\n        \"#cmakedefine01 ILMTHREAD_USE_TBB\": \"#define ILMTHREAD_USE_TBB 0\",\n    },\n    template = \"cmake/IlmThreadConfig.h.in\",\n)\n\nexpand_template(\n    name = \"OpenEXRConfig\",\n    out = \"src/lib/OpenEXR/OpenEXRConfig.h\",\n    substitutions = {\n        \"@OPENEXR_IMF_NAMESPACE@\": \"Imf\",\n        \"@OPENEXR_INTERNAL_IMF_NAMESPACE@\": \"Imf_3_3\",\n        \"@OPENEXR_LIB_VERSION@\": \"3.3.0\",\n        \"@OPENEXR_NAMESPACE_CUSTOM@\": \"3.3.0\",\n        \"@OPENEXR_PACKAGE_NAME@\": \"OpenEXR 3.3.0\",\n        \"@OPENEXR_VERSION_EXTRA@\": \"\",\n        \"@OPENEXR_VERSION@\": \"3.3.0\",\n        \"@OPENEXR_VERSION_MAJOR@\": \"3\",\n        \"@OPENEXR_VERSION_MINOR@\": \"3\",\n        \"@OPENEXR_VERSION_PATCH@\": \"0\",\n        \"#cmakedefine OPENEXR_ENABLE_API_VISIBILITY\": \"#define OPENEXR_ENABLE_API_VISIBILITY\",\n        \"#cmakedefine OPENEXR_HAVE_LARGE_STACK 1\": \"/* #undef OPENEXR_HAVE_LARGE_STACK */\",\n    },\n    template = \"cmake/OpenEXRConfig.h.in\",\n)\n\nexpand_template(\n    name = \"OpenEXRConfigInternal\",\n    out = \"src/lib/OpenEXR/OpenEXRConfigInternal.h\",\n    substitutions = {\n        \"#cmakedefine OPENEXR_IMF_HAVE_COMPLETE_IOMANIP 1\": \"#define OPENEXR_IMF_HAVE_COMPLETE_IOMANIP 1\",\n        \"#cmakedefine OPENEXR_IMF_HAVE_DARWIN 1\": \"/* #undef OPENEXR_IMF_HAVE_DARWIN */\",\n        \"#cmakedefine OPENEXR_IMF_HAVE_GCC_INLINE_ASM_AVX 1\": \"/* #undef OPENEXR_IMF_HAVE_GCC_INLINE_ASM_AVX */\",\n        \"#cmakedefine OPENEXR_IMF_HAVE_LINUX_PROCFS 1\": \"/* #undef OPENEXR_IMF_HAVE_LINUX_PROCFS */\",\n        \"#cmakedefine OPENEXR_IMF_HAVE_SYSCONF_NPROCESSORS_ONLN 1\": \"/* #undef OPENEXR_IMF_HAVE_SYSCONF_NPROCESSORS_ONLN */\",\n        \"#cmakedefine OPENEXR_MISSING_ARM_VLD1 0\": \"/* #undef OPENEXR_MISSING_ARM_VLD1 */\",\n    },\n    template = \"cmake/OpenEXRConfigInternal.h.in\",\n)\n\ncc_library(\n    name = \"Iex\",\n    srcs = [\n        \"src/lib/Iex/IexBaseExc.cpp\",\n        \"src/lib/Iex/IexMathFloatExc.cpp\",\n        \"src/lib/Iex/IexMathFpu.cpp\",\n        \"src/lib/Iex/IexThrowErrnoExc.cpp\",\n        \"src/lib/OpenEXRCore/openexr_version.h\",\n    ],\n    hdrs = [\n        \"src/lib/Iex/Iex.h\",\n        \"src/lib/Iex/IexBaseExc.h\",\n        \"src/lib/Iex/IexConfig.h\",\n        \"src/lib/Iex/IexConfigInternal.h\",\n        \"src/lib/Iex/IexErrnoExc.h\",\n        \"src/lib/Iex/IexExport.h\",\n        \"src/lib/Iex/IexForward.h\",\n        \"src/lib/Iex/IexMacros.h\",\n        \"src/lib/Iex/IexMathExc.h\",\n        \"src/lib/Iex/IexMathFloatExc.h\",\n        \"src/lib/Iex/IexMathFpu.h\",\n        \"src/lib/Iex/IexMathIeeeExc.h\",\n        \"src/lib/Iex/IexNamespace.h\",\n        \"src/lib/Iex/IexThrowErrnoExc.h\",\n        \"src/lib/OpenEXR/OpenEXRConfig.h\",\n    ],\n    features = select({\n        \":windows\": [\"windows_export_all_symbols\"],\n        \"//conditions:default\": [],\n    }),\n    includes = [\n        \"src/lib\",\n        \"src/lib/Iex\",\n        \"src/lib/OpenEXR\",\n        \"src/lib/OpenEXRCore\",\n    ],\n)\n\ncc_library(\n    name = \"IlmThread\",\n    srcs = [\n        \"src/lib/IlmThread/IlmThread.cpp\",\n        \"src/lib/IlmThread/IlmThreadPool.cpp\",\n        \"src/lib/IlmThread/IlmThreadSemaphore.cpp\",\n        \"src/lib/IlmThread/IlmThreadSemaphoreOSX.cpp\",\n        \"src/lib/IlmThread/IlmThreadSemaphorePosix.cpp\",\n        \"src/lib/IlmThread/IlmThreadSemaphorePosixCompat.cpp\",\n        \"src/lib/IlmThread/IlmThreadSemaphoreWin32.cpp\",\n        \"src/lib/OpenEXRCore/openexr_version.h\",\n    ],\n    hdrs = [\n        \"src/lib/IlmThread/IlmThread.h\",\n        \"src/lib/IlmThread/IlmThreadConfig.h\",\n        \"src/lib/IlmThread/IlmThreadExport.h\",\n        \"src/lib/IlmThread/IlmThreadForward.h\",\n        \"src/lib/IlmThread/IlmThreadMutex.h\",\n        \"src/lib/IlmThread/IlmThreadNamespace.h\",\n        \"src/lib/IlmThread/IlmThreadPool.h\",\n        \"src/lib/IlmThread/IlmThreadProcessGroup.h\",\n        \"src/lib/IlmThread/IlmThreadSemaphore.h\",\n    ],\n    features = select({\n        \":windows\": [\"windows_export_all_symbols\"],\n        \"//conditions:default\": [],\n    }),\n    includes = [\n        \"src/lib\",\n        \"src/lib/IlmThread\",\n        \"src/lib/OpenEXRCore\",\n    ],\n    deps = [\":Iex\"],\n)\n\ncc_library(\n    name = \"OpenEXRCore\",\n    srcs = [\n        \"src/lib/IlmThread/IlmThreadConfig.h\",\n        \"src/lib/OpenEXR/OpenEXRConfig.h\",\n        \"src/lib/OpenEXR/OpenEXRConfigInternal.h\",\n        \"src/lib/OpenEXRCore/attributes.c\",\n        \"src/lib/OpenEXRCore/backward_compatibility.h\",\n        \"src/lib/OpenEXRCore/base.c\",\n        \"src/lib/OpenEXRCore/channel_list.c\",\n        \"src/lib/OpenEXRCore/chunk.c\",\n        \"src/lib/OpenEXRCore/coding.c\",\n        \"src/lib/OpenEXRCore/compression.c\",\n        \"src/lib/OpenEXRCore/context.c\",\n        \"src/lib/OpenEXRCore/debug.c\",\n        \"src/lib/OpenEXRCore/decoding.c\",\n        \"src/lib/OpenEXRCore/dwaLookups.h\",\n        \"src/lib/OpenEXRCore/encoding.c\",\n        \"src/lib/OpenEXRCore/float_vector.c\",\n        \"src/lib/OpenEXRCore/internal_attr.h\",\n        \"src/lib/OpenEXRCore/internal_b44.c\",\n        \"src/lib/OpenEXRCore/internal_b44_table.c\",\n        \"src/lib/OpenEXRCore/internal_channel_list.h\",\n        \"src/lib/OpenEXRCore/internal_coding.h\",\n        \"src/lib/OpenEXRCore/internal_compress.h\",\n        \"src/lib/OpenEXRCore/internal_constants.h\",\n        \"src/lib/OpenEXRCore/internal_cpuid.h\",\n        \"src/lib/OpenEXRCore/internal_decompress.h\",\n        \"src/lib/OpenEXRCore/internal_dwa.c\",\n        \"src/lib/OpenEXRCore/internal_dwa_channeldata.h\",\n        \"src/lib/OpenEXRCore/internal_dwa_classifier.h\",\n        \"src/lib/OpenEXRCore/internal_dwa_compressor.h\",\n        \"src/lib/OpenEXRCore/internal_dwa_decoder.h\",\n        \"src/lib/OpenEXRCore/internal_dwa_encoder.h\",\n        \"src/lib/OpenEXRCore/internal_dwa_helpers.h\",\n        \"src/lib/OpenEXRCore/internal_dwa_simd.h\",\n        \"src/lib/OpenEXRCore/internal_file.h\",\n        \"src/lib/OpenEXRCore/internal_float_vector.h\",\n        \"src/lib/OpenEXRCore/internal_huf.c\",\n        \"src/lib/OpenEXRCore/internal_huf.h\",\n        \"src/lib/OpenEXRCore/internal_memory.h\",\n        \"src/lib/OpenEXRCore/internal_opaque.h\",\n        \"src/lib/OpenEXRCore/internal_piz.c\",\n        \"src/lib/OpenEXRCore/internal_posix_file_impl.h\",\n        \"src/lib/OpenEXRCore/internal_preview.h\",\n        \"src/lib/OpenEXRCore/internal_pxr24.c\",\n        \"src/lib/OpenEXRCore/internal_rle.c\",\n        \"src/lib/OpenEXRCore/internal_string.h\",\n        \"src/lib/OpenEXRCore/internal_string_vector.h\",\n        \"src/lib/OpenEXRCore/internal_structs.c\",\n        \"src/lib/OpenEXRCore/internal_structs.h\",\n        \"src/lib/OpenEXRCore/internal_util.h\",\n        \"src/lib/OpenEXRCore/internal_win32_file_impl.h\",\n        \"src/lib/OpenEXRCore/internal_xdr.h\",\n        \"src/lib/OpenEXRCore/internal_zip.c\",\n        \"src/lib/OpenEXRCore/memory.c\",\n        \"src/lib/OpenEXRCore/opaque.c\",\n        \"src/lib/OpenEXRCore/openexr_version.h\",\n        \"src/lib/OpenEXRCore/pack.c\",\n        \"src/lib/OpenEXRCore/parse_header.c\",\n        \"src/lib/OpenEXRCore/part.c\",\n        \"src/lib/OpenEXRCore/part_attr.c\",\n        \"src/lib/OpenEXRCore/preview.c\",\n        \"src/lib/OpenEXRCore/std_attr.c\",\n        \"src/lib/OpenEXRCore/string.c\",\n        \"src/lib/OpenEXRCore/string_vector.c\",\n        \"src/lib/OpenEXRCore/unpack.c\",\n        \"src/lib/OpenEXRCore/validation.c\",\n        \"src/lib/OpenEXRCore/write_header.c\",\n    ],\n    hdrs = [\n        \"src/lib/OpenEXRCore/openexr.h\",\n        \"src/lib/OpenEXRCore/openexr_attr.h\",\n        \"src/lib/OpenEXRCore/openexr_base.h\",\n        \"src/lib/OpenEXRCore/openexr_chunkio.h\",\n        \"src/lib/OpenEXRCore/openexr_coding.h\",\n        \"src/lib/OpenEXRCore/openexr_compression.h\",\n        \"src/lib/OpenEXRCore/openexr_config.h\",\n        \"src/lib/OpenEXRCore/openexr_context.h\",\n        \"src/lib/OpenEXRCore/openexr_debug.h\",\n        \"src/lib/OpenEXRCore/openexr_decode.h\",\n        \"src/lib/OpenEXRCore/openexr_encode.h\",\n        \"src/lib/OpenEXRCore/openexr_errors.h\",\n        \"src/lib/OpenEXRCore/openexr_part.h\",\n        \"src/lib/OpenEXRCore/openexr_std_attr.h\",\n    ],\n    copts = select({\n        \":windows\": [],\n        \"//conditions:default\": [\n            \"-Wno-error\",\n        ],\n    }),\n    features = select({\n        \":windows\": [\"windows_export_all_symbols\"],\n        \"//conditions:default\": [],\n    }),\n    includes = [\n        \"src/lib/IlmThread\",\n        \"src/lib/OpenEXR\",\n        \"src/lib/OpenEXRCore\",\n    ],\n    linkopts =\n        select({\n            \":windows\": [],\n            \"//conditions:default\": [\n                \"-pthread\",\n            ],\n        }),\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \"@imath\",\n        \"@libdeflate//:deflate\",\n    ],\n)\n\ncc_library(\n    name = \"OpenEXR\",\n    srcs = [\n        \"src/lib/OpenEXR/ImfAcesFile.cpp\",\n        \"src/lib/OpenEXR/ImfAttribute.cpp\",\n        \"src/lib/OpenEXR/ImfB44Compressor.cpp\",\n        \"src/lib/OpenEXR/ImfBoxAttribute.cpp\",\n        \"src/lib/OpenEXR/ImfCRgbaFile.cpp\",\n        \"src/lib/OpenEXR/ImfChannelList.cpp\",\n        \"src/lib/OpenEXR/ImfChannelListAttribute.cpp\",\n        \"src/lib/OpenEXR/ImfChromaticities.cpp\",\n        \"src/lib/OpenEXR/ImfChromaticitiesAttribute.cpp\",\n        \"src/lib/OpenEXR/ImfCompositeDeepScanLine.cpp\",\n        \"src/lib/OpenEXR/ImfCompression.cpp\",\n        \"src/lib/OpenEXR/ImfCompressionAttribute.cpp\",\n        \"src/lib/OpenEXR/ImfCompressor.cpp\",\n        \"src/lib/OpenEXR/ImfContext.cpp\",\n        \"src/lib/OpenEXR/ImfContextInit.cpp\",\n        \"src/lib/OpenEXR/ImfConvert.cpp\",\n        \"src/lib/OpenEXR/ImfDeepCompositing.cpp\",\n        \"src/lib/OpenEXR/ImfDeepFrameBuffer.cpp\",\n        \"src/lib/OpenEXR/ImfDeepImageStateAttribute.cpp\",\n        \"src/lib/OpenEXR/ImfDeepScanLineInputFile.cpp\",\n        \"src/lib/OpenEXR/ImfDeepScanLineInputPart.cpp\",\n        \"src/lib/OpenEXR/ImfDeepScanLineOutputFile.cpp\",\n        \"src/lib/OpenEXR/ImfDeepScanLineOutputPart.cpp\",\n        \"src/lib/OpenEXR/ImfDeepTiledInputFile.cpp\",\n        \"src/lib/OpenEXR/ImfDeepTiledInputPart.cpp\",\n        \"src/lib/OpenEXR/ImfDeepTiledOutputFile.cpp\",\n        \"src/lib/OpenEXR/ImfDeepTiledOutputPart.cpp\",\n        \"src/lib/OpenEXR/ImfDoubleAttribute.cpp\",\n        \"src/lib/OpenEXR/ImfDwaCompressor.cpp\",\n        \"src/lib/OpenEXR/ImfEnvmap.cpp\",\n        \"src/lib/OpenEXR/ImfEnvmapAttribute.cpp\",\n        \"src/lib/OpenEXR/ImfFastHuf.cpp\",\n        \"src/lib/OpenEXR/ImfFloatAttribute.cpp\",\n        \"src/lib/OpenEXR/ImfFloatVectorAttribute.cpp\",\n        \"src/lib/OpenEXR/ImfFrameBuffer.cpp\",\n        \"src/lib/OpenEXR/ImfFramesPerSecond.cpp\",\n        \"src/lib/OpenEXR/ImfGenericInputFile.cpp\",\n        \"src/lib/OpenEXR/ImfGenericOutputFile.cpp\",\n        \"src/lib/OpenEXR/ImfHeader.cpp\",\n        \"src/lib/OpenEXR/ImfHuf.cpp\",\n        \"src/lib/OpenEXR/ImfIDManifest.cpp\",\n        \"src/lib/OpenEXR/ImfIDManifestAttribute.cpp\",\n        \"src/lib/OpenEXR/ImfIO.cpp\",\n        \"src/lib/OpenEXR/ImfInputFile.cpp\",\n        \"src/lib/OpenEXR/ImfInputPart.cpp\",\n        \"src/lib/OpenEXR/ImfInputPartData.cpp\",\n        \"src/lib/OpenEXR/ImfIntAttribute.cpp\",\n        \"src/lib/OpenEXR/ImfKeyCode.cpp\",\n        \"src/lib/OpenEXR/ImfKeyCodeAttribute.cpp\",\n        \"src/lib/OpenEXR/ImfLineOrderAttribute.cpp\",\n        \"src/lib/OpenEXR/ImfLut.cpp\",\n        \"src/lib/OpenEXR/ImfMatrixAttribute.cpp\",\n        \"src/lib/OpenEXR/ImfMisc.cpp\",\n        \"src/lib/OpenEXR/ImfMultiPartInputFile.cpp\",\n        \"src/lib/OpenEXR/ImfMultiPartOutputFile.cpp\",\n        \"src/lib/OpenEXR/ImfMultiView.cpp\",\n        \"src/lib/OpenEXR/ImfOpaqueAttribute.cpp\",\n        \"src/lib/OpenEXR/ImfOutputFile.cpp\",\n        \"src/lib/OpenEXR/ImfOutputPart.cpp\",\n        \"src/lib/OpenEXR/ImfOutputPartData.cpp\",\n        \"src/lib/OpenEXR/ImfPartType.cpp\",\n        \"src/lib/OpenEXR/ImfPizCompressor.cpp\",\n        \"src/lib/OpenEXR/ImfPreviewImage.cpp\",\n        \"src/lib/OpenEXR/ImfPreviewImageAttribute.cpp\",\n        \"src/lib/OpenEXR/ImfPxr24Compressor.cpp\",\n        \"src/lib/OpenEXR/ImfRational.cpp\",\n        \"src/lib/OpenEXR/ImfRationalAttribute.cpp\",\n        \"src/lib/OpenEXR/ImfRgbaFile.cpp\",\n        \"src/lib/OpenEXR/ImfRgbaYca.cpp\",\n        \"src/lib/OpenEXR/ImfRle.cpp\",\n        \"src/lib/OpenEXR/ImfRleCompressor.cpp\",\n        \"src/lib/OpenEXR/ImfScanLineInputFile.cpp\",\n        \"src/lib/OpenEXR/ImfStandardAttributes.cpp\",\n        \"src/lib/OpenEXR/ImfStdIO.cpp\",\n        \"src/lib/OpenEXR/ImfStringAttribute.cpp\",\n        \"src/lib/OpenEXR/ImfStringVectorAttribute.cpp\",\n        \"src/lib/OpenEXR/ImfSystemSpecific.cpp\",\n        \"src/lib/OpenEXR/ImfTestFile.cpp\",\n        \"src/lib/OpenEXR/ImfThreading.cpp\",\n        \"src/lib/OpenEXR/ImfTileDescriptionAttribute.cpp\",\n        \"src/lib/OpenEXR/ImfTileOffsets.cpp\",\n        \"src/lib/OpenEXR/ImfTiledInputFile.cpp\",\n        \"src/lib/OpenEXR/ImfTiledInputPart.cpp\",\n        \"src/lib/OpenEXR/ImfTiledMisc.cpp\",\n        \"src/lib/OpenEXR/ImfTiledOutputFile.cpp\",\n        \"src/lib/OpenEXR/ImfTiledOutputPart.cpp\",\n        \"src/lib/OpenEXR/ImfTiledRgbaFile.cpp\",\n        \"src/lib/OpenEXR/ImfTimeCode.cpp\",\n        \"src/lib/OpenEXR/ImfTimeCodeAttribute.cpp\",\n        \"src/lib/OpenEXR/ImfVecAttribute.cpp\",\n        \"src/lib/OpenEXR/ImfVersion.cpp\",\n        \"src/lib/OpenEXR/ImfWav.cpp\",\n        \"src/lib/OpenEXR/ImfZip.cpp\",\n        \"src/lib/OpenEXR/ImfZipCompressor.cpp\",\n    ],\n    hdrs = [\n        \"src/lib/Iex/IexConfig.h\",\n        \"src/lib/Iex/IexConfigInternal.h\",\n        \"src/lib/IlmThread/IlmThreadConfig.h\",\n        \"src/lib/OpenEXR/ImfAcesFile.h\",\n        \"src/lib/OpenEXR/ImfArray.h\",\n        \"src/lib/OpenEXR/ImfAttribute.h\",\n        \"src/lib/OpenEXR/ImfAutoArray.h\",\n        \"src/lib/OpenEXR/ImfB44Compressor.h\",\n        \"src/lib/OpenEXR/ImfBoxAttribute.h\",\n        \"src/lib/OpenEXR/ImfCRgbaFile.h\",\n        \"src/lib/OpenEXR/ImfChannelList.h\",\n        \"src/lib/OpenEXR/ImfChannelListAttribute.h\",\n        \"src/lib/OpenEXR/ImfCheckedArithmetic.h\",\n        \"src/lib/OpenEXR/ImfChromaticities.h\",\n        \"src/lib/OpenEXR/ImfChromaticitiesAttribute.h\",\n        \"src/lib/OpenEXR/ImfCompositeDeepScanLine.h\",\n        \"src/lib/OpenEXR/ImfCompression.h\",\n        \"src/lib/OpenEXR/ImfCompressionAttribute.h\",\n        \"src/lib/OpenEXR/ImfCompressor.h\",\n        \"src/lib/OpenEXR/ImfContext.h\",\n        \"src/lib/OpenEXR/ImfContextInit.h\",\n        \"src/lib/OpenEXR/ImfConvert.h\",\n        \"src/lib/OpenEXR/ImfDeepCompositing.h\",\n        \"src/lib/OpenEXR/ImfDeepFrameBuffer.h\",\n        \"src/lib/OpenEXR/ImfDeepImageState.h\",\n        \"src/lib/OpenEXR/ImfDeepImageStateAttribute.h\",\n        \"src/lib/OpenEXR/ImfDeepScanLineInputFile.h\",\n        \"src/lib/OpenEXR/ImfDeepScanLineInputPart.h\",\n        \"src/lib/OpenEXR/ImfDeepScanLineOutputFile.h\",\n        \"src/lib/OpenEXR/ImfDeepScanLineOutputPart.h\",\n        \"src/lib/OpenEXR/ImfDeepTiledInputFile.h\",\n        \"src/lib/OpenEXR/ImfDeepTiledInputPart.h\",\n        \"src/lib/OpenEXR/ImfDeepTiledOutputFile.h\",\n        \"src/lib/OpenEXR/ImfDeepTiledOutputPart.h\",\n        \"src/lib/OpenEXR/ImfDoubleAttribute.h\",\n        \"src/lib/OpenEXR/ImfDwaCompressor.h\",\n        \"src/lib/OpenEXR/ImfEnvmap.h\",\n        \"src/lib/OpenEXR/ImfEnvmapAttribute.h\",\n        \"src/lib/OpenEXR/ImfExport.h\",\n        \"src/lib/OpenEXR/ImfFastHuf.h\",\n        \"src/lib/OpenEXR/ImfFloatAttribute.h\",\n        \"src/lib/OpenEXR/ImfFloatVectorAttribute.h\",\n        \"src/lib/OpenEXR/ImfForward.h\",\n        \"src/lib/OpenEXR/ImfFrameBuffer.h\",\n        \"src/lib/OpenEXR/ImfFramesPerSecond.h\",\n        \"src/lib/OpenEXR/ImfGenericInputFile.h\",\n        \"src/lib/OpenEXR/ImfGenericOutputFile.h\",\n        \"src/lib/OpenEXR/ImfHeader.h\",\n        \"src/lib/OpenEXR/ImfHuf.h\",\n        \"src/lib/OpenEXR/ImfIDManifest.h\",\n        \"src/lib/OpenEXR/ImfIDManifestAttribute.h\",\n        \"src/lib/OpenEXR/ImfIO.h\",\n        \"src/lib/OpenEXR/ImfInputFile.h\",\n        \"src/lib/OpenEXR/ImfInputPart.h\",\n        \"src/lib/OpenEXR/ImfInputPartData.h\",\n        \"src/lib/OpenEXR/ImfInputStreamMutex.h\",\n        \"src/lib/OpenEXR/ImfInt64.h\",\n        \"src/lib/OpenEXR/ImfIntAttribute.h\",\n        \"src/lib/OpenEXR/ImfKeyCode.h\",\n        \"src/lib/OpenEXR/ImfKeyCodeAttribute.h\",\n        \"src/lib/OpenEXR/ImfLineOrder.h\",\n        \"src/lib/OpenEXR/ImfLineOrderAttribute.h\",\n        \"src/lib/OpenEXR/ImfLut.h\",\n        \"src/lib/OpenEXR/ImfMatrixAttribute.h\",\n        \"src/lib/OpenEXR/ImfMisc.h\",\n        \"src/lib/OpenEXR/ImfMultiPartInputFile.h\",\n        \"src/lib/OpenEXR/ImfMultiPartOutputFile.h\",\n        \"src/lib/OpenEXR/ImfMultiView.h\",\n        \"src/lib/OpenEXR/ImfName.h\",\n        \"src/lib/OpenEXR/ImfNamespace.h\",\n        \"src/lib/OpenEXR/ImfOpaqueAttribute.h\",\n        \"src/lib/OpenEXR/ImfOptimizedPixelReading.h\",\n        \"src/lib/OpenEXR/ImfOutputFile.h\",\n        \"src/lib/OpenEXR/ImfOutputPart.h\",\n        \"src/lib/OpenEXR/ImfOutputPartData.h\",\n        \"src/lib/OpenEXR/ImfOutputStreamMutex.h\",\n        \"src/lib/OpenEXR/ImfPartHelper.h\",\n        \"src/lib/OpenEXR/ImfPartType.h\",\n        \"src/lib/OpenEXR/ImfPixelType.h\",\n        \"src/lib/OpenEXR/ImfPizCompressor.h\",\n        \"src/lib/OpenEXR/ImfPreviewImage.h\",\n        \"src/lib/OpenEXR/ImfPreviewImageAttribute.h\",\n        \"src/lib/OpenEXR/ImfPxr24Compressor.h\",\n        \"src/lib/OpenEXR/ImfRational.h\",\n        \"src/lib/OpenEXR/ImfRationalAttribute.h\",\n        \"src/lib/OpenEXR/ImfRgba.h\",\n        \"src/lib/OpenEXR/ImfRgbaFile.h\",\n        \"src/lib/OpenEXR/ImfRgbaYca.h\",\n        \"src/lib/OpenEXR/ImfRle.h\",\n        \"src/lib/OpenEXR/ImfRleCompressor.h\",\n        \"src/lib/OpenEXR/ImfScanLineInputFile.h\",\n        \"src/lib/OpenEXR/ImfSimd.h\",\n        \"src/lib/OpenEXR/ImfStandardAttributes.h\",\n        \"src/lib/OpenEXR/ImfStdIO.h\",\n        \"src/lib/OpenEXR/ImfStringAttribute.h\",\n        \"src/lib/OpenEXR/ImfStringVectorAttribute.h\",\n        \"src/lib/OpenEXR/ImfSystemSpecific.h\",\n        \"src/lib/OpenEXR/ImfTestFile.h\",\n        \"src/lib/OpenEXR/ImfThreading.h\",\n        \"src/lib/OpenEXR/ImfTileDescription.h\",\n        \"src/lib/OpenEXR/ImfTileDescriptionAttribute.h\",\n        \"src/lib/OpenEXR/ImfTileOffsets.h\",\n        \"src/lib/OpenEXR/ImfTiledInputFile.h\",\n        \"src/lib/OpenEXR/ImfTiledInputPart.h\",\n        \"src/lib/OpenEXR/ImfTiledMisc.h\",\n        \"src/lib/OpenEXR/ImfTiledOutputFile.h\",\n        \"src/lib/OpenEXR/ImfTiledOutputPart.h\",\n        \"src/lib/OpenEXR/ImfTiledRgbaFile.h\",\n        \"src/lib/OpenEXR/ImfTimeCode.h\",\n        \"src/lib/OpenEXR/ImfTimeCodeAttribute.h\",\n        \"src/lib/OpenEXR/ImfVecAttribute.h\",\n        \"src/lib/OpenEXR/ImfVersion.h\",\n        \"src/lib/OpenEXR/ImfWav.h\",\n        \"src/lib/OpenEXR/ImfXdr.h\",\n        \"src/lib/OpenEXR/ImfZip.h\",\n        \"src/lib/OpenEXR/ImfZipCompressor.h\",\n        \"src/lib/OpenEXR/OpenEXRConfig.h\",\n        \"src/lib/OpenEXR/OpenEXRConfigInternal.h\",\n    ],\n    features = select({\n        \":windows\": [\"windows_export_all_symbols\"],\n        \"//conditions:default\": [],\n    }),\n    includes = [\n        \"src/lib\",\n        \"src/lib/OpenEXR\",\n    ],\n    linkopts =\n        select({\n            \":windows\": [],\n            \"//conditions:default\": [\n                \"-pthread\",\n            ],\n        }),\n    visibility = [\"//visibility:public\"],\n    deps = [\n        \":IlmThread\",\n        \":OpenEXRCore\",\n        \"@imath\",\n    ],\n)\n\ncc_test(\n    name = \"IexTest\",\n    srcs = [\n        \"src/test/IexTest/main.cpp\",\n        \"src/test/IexTest/testBaseExc.cpp\",\n        \"src/test/IexTest/testBaseExc.h\",\n    ],\n    includes = [\"src/test/IexTest\"],\n    tags = [\"manual\"],  # This test is not build and executed in the CI\n    deps = [\n        \":Iex\",\n    ],\n)\n\ncc_binary(\n    name = \"exr2aces\",\n    srcs = [\"src/bin/exr2aces/main.cpp\"],\n    deps = [\n        \":OpenEXR\",\n    ],\n)\n\ncc_binary(\n    name = \"exrheader\",\n    srcs = [\"src/bin/exrheader/main.cpp\"],\n    deps = [\n        \":OpenEXR\",\n    ],\n)\n\ncc_binary(\n    name = \"exrenvmap\",\n    srcs = [\n        \"src/bin/exrenvmap/EnvmapImage.cpp\",\n        \"src/bin/exrenvmap/blurImage.cpp\",\n        \"src/bin/exrenvmap/main.cpp\",\n        \"src/bin/exrenvmap/makeCubeMap.cpp\",\n        \"src/bin/exrenvmap/makeLatLongMap.cpp\",\n        \"src/bin/exrenvmap/readInputImage.cpp\",\n        \"src/bin/exrenvmap/resizeImage.cpp\",\n    ] + glob([\"src/bin/exrenvmap/*.h\"]),\n    includes = [\n        \"src/bin/exrenvmap\",\n    ],\n    deps = [\n        \":OpenEXR\",\n    ],\n)\n\ncc_binary(\n    name = \"exrstdattr\",\n    srcs = [\"src/bin/exrstdattr/main.cpp\"],\n    deps = [\n        \":OpenEXR\",\n    ],\n)\n"
        },
        {
          "name": "CHANGES.md",
          "type": "blob",
          "size": 407.1591796875,
          "content": "<!-- SPDX-License-Identifier: BSD-3-Clause -->\n<!-- Copyright (c) Contributors to the OpenEXR Project -->\n\n# OpenEXR Release Notes\n\n* [Version 3.3.2](#version-332-november-11-2024) November 11, 2024\n* [Version 3.3.1](#version-331-october-8-2024) October 8, 2024\n* [Version 3.3.0](#version-330-september-30-2024) September 30, 2024\n* [Version 3.2.4](#version-324-march-26-2024) March 26, 2024\n* [Version 3.2.3](#version-323-march-6-2024) March 6, 2024\n* [Version 3.2.2](#version-322-february-11-2024) February 11, 2024\n* [Version 3.2.1](#version-321-september-27-2023) September 27, 2023\n* [Version 3.2.0](#version-320-august-30-2023) August 30, 2023\n* [Version 3.1.13](#version-3113-march-26-2023) March 26, 2024\n* [Version 3.1.12](#version-3112-february-11-2023) February 11, 2024\n* [Version 3.1.11](#version-3111-august-13-2023) August 13, 2023\n* [Version 3.1.10](#version-3110-august-2-2023) August 2, 2023\n* [Version 3.1.9](#version-319-june-25-2023) June 25, 2023\n* [Version 3.1.8](#version-318-june-2-2023) June 2, 2023\n* [Version 3.1.7](#version-317-march-28-2023) March 28, 2023\n* [Version 3.1.6](#version-316-march-9-2023) March 9, 2023\n* [Version 3.1.5](#version-315-april-11-2022) April 11, 2022\n* [Version 3.1.4](#version-314-january-26-2022) January 27, 2022\n* [Version 3.1.3](#version-313-october-27-2021) October 27, 2021\n* [Version 3.1.2](#version-312-october-4-2021) October 4, 2021\n* [Version 3.1.1](#version-311-august-2-2021) August 2, 2021\n* [Version 3.1.0](#version-310-july-22-2021) July 22, 2021\n* [Version 3.0.5](#version-305-july-1-2021) July 1, 2021\n* [Version 3.0.4](#version-304-june-3-2021) June 3, 2021\n* [Version 3.0.3](#version-303-may-18-2021) May 18, 2021\n* [Version 3.0.2](#version-302-may-17-2021) May 17, 2021\n* [Version 3.0.1](#version-301-april-1-2021) April 1, 2021\n* [Version 3.0.1-beta](#version-301-beta-march-28-2021) March 28, 2021\n* [Version 3.0.0-beta](#version-300-beta-march-16-2021) March 16, 2021\n* [Version 2.5.10](#version-2510-december-19-2023) December 19, 2023\n* [Version 2.5.9](#version-259-july-31-2023) July 31, 2023\n* [Version 2.5.8](#version-258-march-18-2022) March 18, 2022\n* [Version 2.5.7](#version-257-june-16-2021) June 16, 2021\n* [Version 2.5.6](#version-256-may-17-2021) May 17, 2021\n* [Version 2.5.5](#version-255-february-12-2021) February 12, 2021\n* [Version 2.5.4](#version-254-december-31-2020) December 31, 2020\n* [Version 2.5.3](#version-253-august-12-2020) August 12, 2020\n* [Version 2.5.2](#version-252-june-15-2020) June 15, 2020\n* [Version 2.5.1](#version-251-may-11-2020) May 11, 2020\n* [Version 2.5.0](#version-250-may-6-2020) May 6, 2020\n* [Version 2.4.3](#version-243-may-17-2021) May 17, 2021\n* [Version 2.4.2](#version-242-june-15-2020) June 15, 2020\n* [Version 2.4.1](#version-241-february-11-2020) February 11, 2020\n* [Version 2.4.0](#version-240-september-19-2019) September 19, 2019\n* [Version 2.3.0](#version-230-august-13-2018) August 13, 2018\n* [Version 2.2.2](#version-222-april-30-2020) April 30, 2020\n* [Version 2.2.1](#version-221-november-30-2017) November 30, 2017\n* [Version 2.2.0](#version-220-august-10-2014) August 10, 2014\n* [Version 2.1.0](#version-210-november-25-2013) November 25, 2013\n* [Version 2.0.1](#version-201-july-11-2013) July 11, 2013\n* [Version 2.0.0](#version-200-april-9-2013) April 9, 2013\n* [Version 1.7.1](#version-171-july-31-2012) July 31, 2012\n* [Version 1.7.0](#version-170-july-23-2010) July 23, 2010\n* [Version 1.6.1](#version-161-october-22-2007) October 22, 2007\n* [Version 1.6.0](#version-160-august-3,2007) August 3, 2007\n* [Version 1.5.0](#version-150-december-15-2006) December 15, 2006\n* [Version 1.4.0a](#version-140a-august-9-2006) August 9, 2006\n* [Version 1.4.0](#version-140-august-2,2006) August 2, 2006\n* [Version 1.3.1](#version-131-june-14-2006) June 14, 2006\n* [Version 1.3.0](#version-130-june-8,2006) June 8, 2006\n* [Version 1.2.2](#version-122-march-15-2005) March 15, 2005\n* [Version 1.2.1](#version-121-june-6,2004) June 6, 2004\n* [Version 1.2.0](#version-120-may-11-2004) May 11, 2004\n* [Version 1.1.1](#version-111-march-27-2004) March 27, 2004\n* [Version 1.1.0](#version-110-february-6-2004) February 6, 2004\n* [Version 1.0.7](#version-107-january-7-2004) January 7, 2004\n* [Version 1.0.6](#version-106)\n* [Version 1.0.5](#version-105-april-3-2003) April 3, 2003\n* [Version 1.0.4](#version-104)\n* [Version 1.0.3](#version-103)\n* [Version 1.0.2](#version-102)\n* [Version 1.0.1](#version-101)\n* [Version 1.0](#version-10)\n\n## Version 3.3.2 (November 11, 2024)\n\nPatch release that fixes several bugs and build issues:\n\n* A recent change to CMake had the unintended consequence of\n  installing headers and libraries from `libdeflate` when doing an\n  internal build. This is now fixed.\n* Fix custom namespaces\n* Add thread control to `exrmetrics` tool\n* Reintroduce single cache for successive scanline reads\n* Allow empty filename when providing a custom stream\n* Handle non-seekable stream in python module's `InputFile` object\n\nThis release fixes:\n\n* OSS-fuzz [372524117](https://issues.oss-fuzz.com/issues/372524117)\nNull-dereference WRITE in Imf_3_4::ScanLineProcess::run_fill\n\n### Merged Pull Requests\n\n* [1912](https://github.com/AcademySoftwareFoundation/openexr/pull/1912)\nAdd missing namespace macros\n* [1907](https://github.com/AcademySoftwareFoundation/openexr/pull/1907)\nHandle non-seekable stream\n* [1905](https://github.com/AcademySoftwareFoundation/openexr/pull/1905)\ncheck for invalid uncompressed chunk sample count\n* [1904](https://github.com/AcademySoftwareFoundation/openexr/pull/1904)\nAdd thread control to exrmetrics\n* [1880](https://github.com/AcademySoftwareFoundation/openexr/pull/1880)\nCMake: use EXCLUDE_FROM_ALL when declaring Fetch for deflate library\n* [1899](https://github.com/AcademySoftwareFoundation/openexr/pull/1899)\nReintroduce single cache for successive scanline reads\n* [1890](https://github.com/AcademySoftwareFoundation/openexr/pull/1890)\nAdded tests for ImfCRgbaFile\n* [1903](https://github.com/AcademySoftwareFoundation/openexr/pull/1903)\nBump pypa/gh-action-pypi-publish from 1.10.3 to 1.11.0\n* [1898](https://github.com/AcademySoftwareFoundation/openexr/pull/1898)\nAllow empty file name\n* [1896](https://github.com/AcademySoftwareFoundation/openexr/pull/1896)\nBump actions/setup-python from 5.2.0 to 5.3.0\n* [1892](https://github.com/AcademySoftwareFoundation/openexr/pull/1892)\nBump actions/cache from 4.1.1 to 4.1.2\n* [1891](https://github.com/AcademySoftwareFoundation/openexr/pull/1891)\nBump github/codeql-action from 3.26.13 to 3.27.0\n* [1886](https://github.com/AcademySoftwareFoundation/openexr/pull/1886)\nBump github/codeql-action from 3.26.12 to 3.26.13\n* [1884](https://github.com/AcademySoftwareFoundation/openexr/pull/1884)\nAdd manpage for exrmetrics\n* [1885](https://github.com/AcademySoftwareFoundation/openexr/pull/1885)\nBump jmertic/slack-release-notifier\n* [1876](https://github.com/AcademySoftwareFoundation/openexr/pull/1876)\nnews update for v3.3.1\n* [1878](https://github.com/AcademySoftwareFoundation/openexr/pull/1878)\nBump actions/upload-artifact from 4.4.0 to 4.4.3\n* [1877](https://github.com/AcademySoftwareFoundation/openexr/pull/1877)\nBump pypa/cibuildwheel from 2.21.2 to 2.21.3\n* [1874](https://github.com/AcademySoftwareFoundation/openexr/pull/1874)\nBump actions/cache from 4.0.2 to 4.1.1\n* [1872](https://github.com/AcademySoftwareFoundation/openexr/pull/1872)\nBump github/codeql-action from 3.26.11 to 3.26.12\n\n\n## Version 3.3.1 (October 8, 2024)\n\nPatch release that addresses several build and performance issues:\n\n* Fix a performance regression 3.3.0 in huf/piz compression\n* Replace ``FetchContent_Populate`` with ``FetchContent_MakeAvailable``\n* Build wheels for python 3.12\n* Fix a problem with python wheel sdist that caused local build to fail\n* Compile source files in parallel under MSVC\n\n### Merged Pull Requests\n\n* [1868](https://github.com/AcademySoftwareFoundation/openexr/pull/1868)\nAddress huf / piz performance regressions\n* [1867](https://github.com/AcademySoftwareFoundation/openexr/pull/1867)\nFix Typo SECURITY.md\n* [1866](https://github.com/AcademySoftwareFoundation/openexr/pull/1866)\nBump pypa/gh-action-pypi-publish from 1.10.2 to 1.10.3\n* [1865](https://github.com/AcademySoftwareFoundation/openexr/pull/1865)\nBump github/codeql-action from 3.26.10 to 3.26.11\n* [1864](https://github.com/AcademySoftwareFoundation/openexr/pull/1864)\nBump pypa/cibuildwheel from 2.21.1 to 2.21.2\n* [1863](https://github.com/AcademySoftwareFoundation/openexr/pull/1863)\nUse FetchContent_MakeAvailable instead of FetchContent_Populate\n* [1861](https://github.com/AcademySoftwareFoundation/openexr/pull/1861)\nCI: build wheels for Python 3.12\n* [1858](https://github.com/AcademySoftwareFoundation/openexr/pull/1858)\nBuild: compile source files in parallel under MSVC\n* [1857](https://github.com/AcademySoftwareFoundation/openexr/pull/1857)\nDon't exclude src/test and website from sdist\n* [1856](https://github.com/AcademySoftwareFoundation/openexr/pull/1856)\nBazel support: Switch to Imath 3.1.12\n* [1854](https://github.com/AcademySoftwareFoundation/openexr/pull/1854)\nBump github/codeql-action from 3.26.9 to 3.26.10\n* [1851](https://github.com/AcademySoftwareFoundation/openexr/pull/1851)\nUse 64-bit values for the pointer math\n* [1848](https://github.com/AcademySoftwareFoundation/openexr/pull/1848)\nBump version/soversion on main branch\n* [1780](https://github.com/AcademySoftwareFoundation/openexr/pull/1780)\nFirst draft of website documentation for python bindings\n\n## Version 3.3.0 (September 30, 2024)\n\nMinor release two significant changes:\n\n- The C++ API now uses the OpenEXRCore library underneath.\n\n  - This is a transparent change to the existing API, although the ABI\n    (i.e. structure / class layout) has changed\n  \n  - Existing reading of pixel data should be more efficient due to\n    fewer memory allocations / frees during the process of\n    reading. Additionally, some more specialisation of unpacking\n    routines may result in faster unpack times\n  \n  - All compression routines are implemented by the C Core layer\n    underneath and no longer duplicated\n  \n  - Initial support for \"stateless\" reading of scanlines has been\n    proposed, allowing multiple threads to read scanlines into\n    different frame buffer objects at the same time. While well tested\n    at the Core level, the C++ api should be considered experimental\n    for this release\n  \n  - Thread dispatch for reading different file types has been made\n    more homogeneous, so is simpler and more consistent\n\n- New API for accessing compression types\n\n  In anticipation of future support for new compression types, there\n  is now a convenience API for mapping between compression type names\n  and the associated enum:\n  \n  - ``getCompressionDescriptionFromId(Compression, std::string&)``\n  - ``getCompressionIdFromName(const std::string&, Compression&)``\n  - ``getCompressionNameFromId(Compression, std::string&)``\n  - ``getCompressionNamesString(const std::string&, std::string&)``\n  - ``getCompressionNumScanlines(Compression)``\n  - ``isValidCompression(int)``\n\n- New bin tools:\n\n  - ``exrmetrics`` - Read an OpenEXR image from infile, write an\n    identical copy to outfile reporting time taken to read/write and\n    file sizes. Useful for benchmarking performance in space and time.\n\n  - ``exrmanifest`` - Read exr files and print the contents of the\n    embedded manifest. The manifest provides a mapping between integer\n    object identifiers and human-readible strings. See [OpenEXR Deep\n    IDs\n    Specification](https://openexr.com/en/latest/DeepIDsSpecification.html)\n    for more details.\n\n- New python bindings.\n\n  This version introduces a new python API, the ``File`` object, which\n  provides full support for reading and writing all types of ``.exr``\n  image files, including scanline, tiled, deep, mult-part, multi-view,\n  and multi-resolution images with pixel types of unsigned 32-bit\n  integers and 16- and 32-bit floats. It provides access to pixel data\n  through ``numpy`` arrays, as either one array per channel or with R, G,\n  B, and A interleaved into a single array RGBA array.\n\n  Previous releases of the openexr python module supported only\n  scanline files. The previous API remains in place for now for\n  backwards compatibility.\n  \n  See [src/wrappers/python/README.md](src/wrappers/python/README.md)\n  for a synopsis.\n\n\nThis release fixes:\n\n* OSS-fuzz [42538530](https://issues.oss-fuzz.com/issues/42538530)\nCrash in MemcmpInterceptorCommon\n* OSS-fuzz [42538529](https://issues.oss-fuzz.com/issues/42538529)\nNull-dereference READ in internal_exr_undo_rle\n* OSS-fuzz [42538428](https://issues.oss-fuzz.com/issues/42538428)\nInteger-overflow in internal_exr_parse_header\n* OSS-fuzz [42538425](https://issues.oss-fuzz.com/issues/42538425)\nCrash in internal_exr_validate_shared_attrs\n* OSS-fuzz [42538423](https://issues.oss-fuzz.com/issues/42538423)\nNull-dereference READ in internal_rle_decompress\n* OSS-fuzz [42533565](https://issues.oss-fuzz.com/issues/42533565)\nInvalid-enum-value in Imf_3_3::isValidCompression\n\n### Merged Pull Requests\n\n* [1833](https://github.com/AcademySoftwareFoundation/openexr/pull/1833)\nBump github/codeql-action from 3.26.7 to 3.26.8\n* [1832](https://github.com/AcademySoftwareFoundation/openexr/pull/1832)\nFixed formatting issue in website/OpenEXRFileLayout.rst\n* [1833](https://github.com/AcademySoftwareFoundation/openexr/pull/1833)\nBump github/codeql-action from 3.26.7 to 3.26.8 \n* [1832](https://github.com/AcademySoftwareFoundation/openexr/pull/1832)\nFixed formatting issue in website/OpenEXRFileLayout.rst \n* [1828](https://github.com/AcademySoftwareFoundation/openexr/pull/1828)\nRefined validation checks \n* [1827](https://github.com/AcademySoftwareFoundation/openexr/pull/1827)\nAdd includes for Windows \n* [1825](https://github.com/AcademySoftwareFoundation/openexr/pull/1825)\nAdd duplicate validation \n* [1824](https://github.com/AcademySoftwareFoundation/openexr/pull/1824)\nBump pypa/cibuildwheel from 2.21.0 to 2.21.1 \n* [1822](https://github.com/AcademySoftwareFoundation/openexr/pull/1822)\nUpdate sigstore release signing action \n* [1821](https://github.com/AcademySoftwareFoundation/openexr/pull/1821)\nAddress some initial fuzz reports after core rewrite merge\n* [1820](https://github.com/AcademySoftwareFoundation/openexr/pull/1820)\nBump github/codeql-action from 3.26.6 to 3.26.7\n* [1819](https://github.com/AcademySoftwareFoundation/openexr/pull/1819)\nBump pypa/cibuildwheel from 2.20.0 to 2.21.0\n* [1818](https://github.com/AcademySoftwareFoundation/openexr/pull/1818)\nRebase of staging/cpp_core_rewrite\n* [1814](https://github.com/AcademySoftwareFoundation/openexr/pull/1814)\nBump pypa/gh-action-pypi-publish from 1.10.0 to 1.10.1\n* [1811](https://github.com/AcademySoftwareFoundation/openexr/pull/1811)\nAdd version comment to github/codeql-action/analyze\n* [1810](https://github.com/AcademySoftwareFoundation/openexr/pull/1810)\nPin snyk/actions/setup to v0.4.0\n* [1809](https://github.com/AcademySoftwareFoundation/openexr/pull/1809)\nFix pypa/gh-action-pypi-publish release name comment\n* [1808](https://github.com/AcademySoftwareFoundation/openexr/pull/1808)\nBump pypa/gh-action-pypi-publish from 1.9.0 to 1.10.0\n* [1807](https://github.com/AcademySoftwareFoundation/openexr/pull/1807)\nBump actions/upload-artifact from 4.3.6 to 4.4.0\n* [1806](https://github.com/AcademySoftwareFoundation/openexr/pull/1806)\nBump actions/setup-python from 5.1.1 to 5.2.0\n* [1805](https://github.com/AcademySoftwareFoundation/openexr/pull/1805)\nBump github/codeql-action from 3.24.10 to 3.26.6\n* [1799](https://github.com/AcademySoftwareFoundation/openexr/pull/1799)\nUpdate Joseph Goldstone affiliation\n* [1795](https://github.com/AcademySoftwareFoundation/openexr/pull/1795)\nBazel Build: Bump libdeflate to 1.21\n* [1794](https://github.com/AcademySoftwareFoundation/openexr/pull/1794)\nBump snyk/actions from 6312a53377a551c0258438bf25fb8f378afbc977 to ae9442546152ba9bb0a1c85e2672112c97e7a06d\n* [1793](https://github.com/AcademySoftwareFoundation/openexr/pull/1793)\nBump actions/upload-artifact from 4.3.4 to 4.3.6\n* [1791](https://github.com/AcademySoftwareFoundation/openexr/pull/1791)\nBump pypa/cibuildwheel from 2.19.2 to 2.20.0\n* [1790](https://github.com/AcademySoftwareFoundation/openexr/pull/1790)\nRevert CodeQL to 2.18.0\n* [1788](https://github.com/AcademySoftwareFoundation/openexr/pull/1788)\nBump snyk/actions from 640e31719aac3e44867d239dc86c20c3e34c8e4f to 6312a53377a551c0258438bf25fb8f378afbc977\n* [1787](https://github.com/AcademySoftwareFoundation/openexr/pull/1787)\nBump ossf/scorecard-action from 2.3.3 to 2.4.0\n* [1782](https://github.com/AcademySoftwareFoundation/openexr/pull/1782)\nBump sigstore/gh-action-sigstore-python from 2.1.1 to 3.0.0\n* [1781](https://github.com/AcademySoftwareFoundation/openexr/pull/1781)\nBump actions/setup-python from 5.1.0 to 5.1.1\n* [1779](https://github.com/AcademySoftwareFoundation/openexr/pull/1779)\nFix GHA CI after they upgraded nodejs\n* [1778](https://github.com/AcademySoftwareFoundation/openexr/pull/1778)\nFix documentation typo: screenWindowWidth is float, not V2f\n* [1777](https://github.com/AcademySoftwareFoundation/openexr/pull/1777)\nBump snyk/actions from 8349f9043a8b7f0f3ee8885bf28f0b388d2446e8 to 640e31719aac3e44867d239dc86c20c3e34c8e4f\n* [1775](https://github.com/AcademySoftwareFoundation/openexr/pull/1775)\nBump actions/download-artifact from 4.1.7 to 4.1.8\n* [1774](https://github.com/AcademySoftwareFoundation/openexr/pull/1774)\nBump actions/upload-artifact from 4.3.3 to 4.3.4\n* [1773](https://github.com/AcademySoftwareFoundation/openexr/pull/1773)\nBump pypa/cibuildwheel from 2.18.1 to 2.19.2\n* [1769](https://github.com/AcademySoftwareFoundation/openexr/pull/1769)\nadd exrmetrics tool\n* [1768](https://github.com/AcademySoftwareFoundation/openexr/pull/1768)\nBump pypa/gh-action-pypi-publish from 1.8.14 to 1.9.0\n* [1763](https://github.com/AcademySoftwareFoundation/openexr/pull/1763)\nFix duplicate `uninstall` targets\n* [1757](https://github.com/AcademySoftwareFoundation/openexr/pull/1757)\nBump pypa/cibuildwheel from 2.17.0 to 2.18.1\n* [1756](https://github.com/AcademySoftwareFoundation/openexr/pull/1756)\nRewrite OpenEXR python bindings using pybind11 and numpy\n* [1754](https://github.com/AcademySoftwareFoundation/openexr/pull/1754)\n'Stop' to 'tStop' in website desc of standard attributes\n* [1750](https://github.com/AcademySoftwareFoundation/openexr/pull/1750)\nBump ossf/scorecard-action from 2.3.1 to 2.3.3\n* [1749](https://github.com/AcademySoftwareFoundation/openexr/pull/1749)\nInstall website requirements in venv\n* [1748](https://github.com/AcademySoftwareFoundation/openexr/pull/1748)\nFix setting of part name via \"name\" attribute\n* [1745](https://github.com/AcademySoftwareFoundation/openexr/pull/1745)\nUpdate CI workflow to 2024 images.\n* [1744](https://github.com/AcademySoftwareFoundation/openexr/pull/1744)\nBazel support: Add test output to CI Bazel tests\n* [1742](https://github.com/AcademySoftwareFoundation/openexr/pull/1742)\nRemoved unused sliceOptimizationData::type\n* [1736](https://github.com/AcademySoftwareFoundation/openexr/pull/1736)\nBump actions/download-artifact from 4.1.5 to 4.1.7\n* [1734](https://github.com/AcademySoftwareFoundation/openexr/pull/1734)\nSilence warning C4201: nonstandard extension used: nameless struct/union.\n* [1733](https://github.com/AcademySoftwareFoundation/openexr/pull/1733)\nBump actions/upload-artifact from 4.3.2 to 4.3.3\n* [1727](https://github.com/AcademySoftwareFoundation/openexr/pull/1727)\nFix exact file match\n* [1724](https://github.com/AcademySoftwareFoundation/openexr/pull/1724)\nCore changes for cpp rewrite\n* [1723](https://github.com/AcademySoftwareFoundation/openexr/pull/1723)\nBump actions/upload-artifact from 4.3.1 to 4.3.2\n* [1722](https://github.com/AcademySoftwareFoundation/openexr/pull/1722)\nBump actions/download-artifact from 4.1.4 to 4.1.5\n* [1716](https://github.com/AcademySoftwareFoundation/openexr/pull/1716)\nAdd test for example python code in the pypi README.md\n* [1714](https://github.com/AcademySoftwareFoundation/openexr/pull/1714)\nfix example\n* [1713](https://github.com/AcademySoftwareFoundation/openexr/pull/1713)\nBump actions/upload-artifact from 3.1.0 to 4.3.1\n* [1710](https://github.com/AcademySoftwareFoundation/openexr/pull/1710)\nBump github/codeql-action from 3.24.9 to 3.24.10\n* [1709](https://github.com/AcademySoftwareFoundation/openexr/pull/1709)\nCreate codeql.yml\n* [1707](https://github.com/AcademySoftwareFoundation/openexr/pull/1707)\n[StepSecurity] ci: Harden GitHub Actions\n* [1706](https://github.com/AcademySoftwareFoundation/openexr/pull/1706)\nwebsite: fix whitespace typo\n* [1703](https://github.com/AcademySoftwareFoundation/openexr/pull/1703)\nImprove filters for ossfuzz and bazel\n* [1702](https://github.com/AcademySoftwareFoundation/openexr/pull/1702)\nSet archive prefix for signed releases\n* [1701](https://github.com/AcademySoftwareFoundation/openexr/pull/1701)\nBuild website on windows/macOS, and remote unnecessary installs\n* [1699](https://github.com/AcademySoftwareFoundation/openexr/pull/1699)\n📝 Fix OPENEXR_DEFLATE_REPO option's description\n* [1698](https://github.com/AcademySoftwareFoundation/openexr/pull/1698)\nBump actions/cache from 4.0.0 to 4.0.2\n* [1697](https://github.com/AcademySoftwareFoundation/openexr/pull/1697)\nBump actions/download-artifact from 4.0.0 to 4.1.4\n* [1696](https://github.com/AcademySoftwareFoundation/openexr/pull/1696)\nBump pypa/cibuildwheel from 2.16 to 2.17\n* [1695](https://github.com/AcademySoftwareFoundation/openexr/pull/1695)\nBump github/codeql-action from 2.2.4 to 3.24.9\n* [1694](https://github.com/AcademySoftwareFoundation/openexr/pull/1694)\nBump sphinx from 5.3 to 7.2.6\n* [1693](https://github.com/AcademySoftwareFoundation/openexr/pull/1693)\nImprove workflow files\n* [1691](https://github.com/AcademySoftwareFoundation/openexr/pull/1691)\nAdd website news items for v3.2.4, v3.2.3, and v3.1.13\n* [1688](https://github.com/AcademySoftwareFoundation/openexr/pull/1688)\nExtend exrstdattr to add -erase option\n* [1686](https://github.com/AcademySoftwareFoundation/openexr/pull/1686)\nfix: Update scorecard v2.3.1\n* [1685](https://github.com/AcademySoftwareFoundation/openexr/pull/1685)\nfix rebase commit id\n* [1683](https://github.com/AcademySoftwareFoundation/openexr/pull/1683)\nadd page on scene-linear images to website \n* [1681](https://github.com/AcademySoftwareFoundation/openexr/pull/1681)\nprevent integer overflows in file exrmultipart.cpp\n* [1679](https://github.com/AcademySoftwareFoundation/openexr/pull/1679)\nUpdate docker images to 2024.\n* [1677](https://github.com/AcademySoftwareFoundation/openexr/pull/1677)\nCleanup pass ahead of core expansion\n* [1674](https://github.com/AcademySoftwareFoundation/openexr/pull/1674)\nCMake packaging fix.\n* [1673](https://github.com/AcademySoftwareFoundation/openexr/pull/1673)\nPin RTD to sphinx 5.3\n* [1672](https://github.com/AcademySoftwareFoundation/openexr/pull/1672)\nDocument steps to add a new compression method in ImfCompression.h\n* [1669](https://github.com/AcademySoftwareFoundation/openexr/pull/1669)\nAdd custom website footer with ASWF logo and proper copyright\n* [1667](https://github.com/AcademySoftwareFoundation/openexr/pull/1667)\nReplace auto-generation of website test image with explicit sidecar jpg files\n* [1664](https://github.com/AcademySoftwareFoundation/openexr/pull/1664)\nAdd preview link to readthedocs build to PR description\n* [1663](https://github.com/AcademySoftwareFoundation/openexr/pull/1663)\nwebsite news for v3.2.3\n* [1661](https://github.com/AcademySoftwareFoundation/openexr/pull/1661)\nArgument to isValidCompression should be int rather than Compression\n* [1660](https://github.com/AcademySoftwareFoundation/openexr/pull/1660)\nBazel support: Support only Bzmlod and bump Imath version\n* [1658](https://github.com/AcademySoftwareFoundation/openexr/pull/1658)\nAdd reference to TSC meeting notes to README and website\n* [1657](https://github.com/AcademySoftwareFoundation/openexr/pull/1657)\nAdd test and website reference for exrmanifest\n* [1656](https://github.com/AcademySoftwareFoundation/openexr/pull/1656)\nAdd table of linux distro openexr versions to website install page\n* [1654](https://github.com/AcademySoftwareFoundation/openexr/pull/1654)\nFix Typo RIPMAP_LEVELS table in TechnicalIntroduction.rst\n* [1649](https://github.com/AcademySoftwareFoundation/openexr/pull/1649)\nFix memory leaks in exrstdattr and example code\n* [1645](https://github.com/AcademySoftwareFoundation/openexr/pull/1645)\nUpdate release notes from recent releases\n* [1644](https://github.com/AcademySoftwareFoundation/openexr/pull/1644)\nBump required cmake to 3.14\n* [1617](https://github.com/AcademySoftwareFoundation/openexr/pull/1617)\nRequire sphinx 5.0\n* [1616](https://github.com/AcademySoftwareFoundation/openexr/pull/1616)\nAutomate compression method detection\n* [1601](https://github.com/AcademySoftwareFoundation/openexr/pull/1601)\nGitHub action for release notices on Slack\n* [1599](https://github.com/AcademySoftwareFoundation/openexr/pull/1599)\nBump version on main to 3.3.0\n* [1535](https://github.com/AcademySoftwareFoundation/openexr/pull/1535)\nAdd Scorecard GitHub Action\n* [1515](https://github.com/AcademySoftwareFoundation/openexr/pull/1515)\nRelease notes and news for v3.2.0\n* [1481](https://github.com/AcademySoftwareFoundation/openexr/pull/1481)\nFix dupe word typos\n* [1465](https://github.com/AcademySoftwareFoundation/openexr/pull/1465)\nFix link typos in news.rst\n* [1438](https://github.com/AcademySoftwareFoundation/openexr/pull/1438)\nBazel update\n* [1436](https://github.com/AcademySoftwareFoundation/openexr/pull/1436)\nFix spelling mistakes\n* [1435](https://github.com/AcademySoftwareFoundation/openexr/pull/1435)\nBazel support: Update Imath to 3.1.8\n* [1434](https://github.com/AcademySoftwareFoundation/openexr/pull/1434)\nFix macOS arm64 build\n* [1423](https://github.com/AcademySoftwareFoundation/openexr/pull/1423)\nPropagate dwa core 3 1\n* [1418](https://github.com/AcademySoftwareFoundation/openexr/pull/1418)\n\n## Version 3.2.4 (March 26, 2024)\n\nPatch release that fixes handling of dwa compression in OpenEXRCore library.\n\nThis release also removes the unused CMake option\n``OPENEXR_INSTALL_EXAMPLES``, and fixes some other compiler warnings.\n\n### Merged Pull Requests\n\n* [1684](https://github.com/AcademySoftwareFoundation/openexr/pull/1684)\nFix typo causing prefix len to be wrong\n* [1668](https://github.com/AcademySoftwareFoundation/openexr/pull/1668)\nImprove workflow filters\n* [1666](https://github.com/AcademySoftwareFoundation/openexr/pull/1666)\n🐛 Remove the OPENEXR_INSTALL_EXAMPLES CMake option\n* [1662](https://github.com/AcademySoftwareFoundation/openexr/pull/1662)\nInitialize _ySampling to 0\n* [1659](https://github.com/AcademySoftwareFoundation/openexr/pull/1659)\nUse size_t as iterator instead of int \n\n## Version 3.2.3 (March 6, 2024)\n\nPatch release with various build/bug/documentation fixes:\n\n* Fix `bswap` on NetBSD\n* Fix issue with decompressing fp32 dwa files\n* Support cmake config for `libdeflate`\n* updated security policy\n* miscelleneous website improvements\n\nThis release also addresses:\n\n* OSS-fuzz [66676](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=66676)\nNull-dereference in Imf_3_3::realloc_deepdata\n* OSS-fuzz [66612](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=66612)\nNull-dereference in Imf_3_3::realloc_deepdata\n\n### Merged Pull Requests\n\n* [1653](https://github.com/AcademySoftwareFoundation/openexr/pull/1653)\nAllow partial chunk tables\n* [1652](https://github.com/AcademySoftwareFoundation/openexr/pull/1652)\nFix 0 samples in deep data\n* [1651](https://github.com/AcademySoftwareFoundation/openexr/pull/1651)\nAdd recent releases to website news\n* [1650](https://github.com/AcademySoftwareFoundation/openexr/pull/1650)\nFix memory leaks in exrstdattr and example code (#1649)\n* [1647](https://github.com/AcademySoftwareFoundation/openexr/pull/1647)\nRemove -Dsonar.login from sonar-scanner command line\n* [1643](https://github.com/AcademySoftwareFoundation/openexr/pull/1643)\nUse component for python\n* [1640](https://github.com/AcademySoftwareFoundation/openexr/pull/1640)\nFix version tag for python wheel sdist\n* [1637](https://github.com/AcademySoftwareFoundation/openexr/pull/1637)\nAdd instructions for creating signed releases/tags\n* [1636](https://github.com/AcademySoftwareFoundation/openexr/pull/1636)\nDo synk scans weekly on Sunday mornings \n* [1635](https://github.com/AcademySoftwareFoundation/openexr/pull/1635)\ncheck and control reduceMemory and reduceTime in stream mode\n* [1634](https://github.com/AcademySoftwareFoundation/openexr/pull/1634)\nadds a shortcut to avoid reconstructing every call\n* [1633](https://github.com/AcademySoftwareFoundation/openexr/pull/1633)\nFix install of symlink\n* [1631](https://github.com/AcademySoftwareFoundation/openexr/pull/1631)\nRemove snyk-scan-pr.yml\n* [1629](https://github.com/AcademySoftwareFoundation/openexr/pull/1629)\nBuild python wheels via scikit-build-core \n* [1626](https://github.com/AcademySoftwareFoundation/openexr/pull/1626)\nBazel support: Bump Imath to 3.1.10\n* [1624](https://github.com/AcademySoftwareFoundation/openexr/pull/1624)\nAdd uninstall target\n* [1623](https://github.com/AcademySoftwareFoundation/openexr/pull/1623)\nDocument security expectations\n* [1622](https://github.com/AcademySoftwareFoundation/openexr/pull/1622)\nAdd a reference to building tools from source to the tools webpage.\n* [1621](https://github.com/AcademySoftwareFoundation/openexr/pull/1621)\nAdd explanation of distinction between OpenEXR/OpenEXRCore to API section\n* [1620](https://github.com/AcademySoftwareFoundation/openexr/pull/1620)\nMake 'Hello, World' example reader/writer downloadable\n* [1615](https://github.com/AcademySoftwareFoundation/openexr/pull/1615)\nFix spelling of GitHub\n* [1613](https://github.com/AcademySoftwareFoundation/openexr/pull/1613)\nSupport cmake config for libdeflate\n* [1612](https://github.com/AcademySoftwareFoundation/openexr/pull/1612)\nFix bswap on NetBSD\n* [1611](https://github.com/AcademySoftwareFoundation/openexr/pull/1611)\nUpdate MacPorts install instructions\n* [1608](https://github.com/AcademySoftwareFoundation/openexr/pull/1608)\nCI/CD - Added Snyk C/C++ Scanning Job\n* [1605](https://github.com/AcademySoftwareFoundation/openexr/pull/1605)\nBump skylib in workspace approach\n* [1600](https://github.com/AcademySoftwareFoundation/openexr/pull/1600)\nRelease notes and news for v2.5.10 \n* [1597](https://github.com/AcademySoftwareFoundation/openexr/pull/1597)\nAccount for duplicate emails with .mailmap\n* [1595](https://github.com/AcademySoftwareFoundation/openexr/pull/1595)\nadd deep id/manifest tools and doc\n* [1592](https://github.com/AcademySoftwareFoundation/openexr/pull/1592)\nRemove some dead code when writing\n* [1591](https://github.com/AcademySoftwareFoundation/openexr/pull/1591)\nFix issue with decompressing fp32 dwa files\n* [1587](https://github.com/AcademySoftwareFoundation/openexr/pull/1587)\n#1545 Fix formatting of sample exr file in OpenEXRFileLayout.rst - 3rd attempt\n* [1583](https://github.com/AcademySoftwareFoundation/openexr/pull/1583)\nConverting code-blocks to literalincludes in ReadingAndWritingImageFiles.rst\n* [1579](https://github.com/AcademySoftwareFoundation/openexr/pull/1579)\npython-wheels.yml - add arm64 builds for macOS\n* [1578](https://github.com/AcademySoftwareFoundation/openexr/pull/1578)\nadding better error reporting for bin tests\n* [1577](https://github.com/AcademySoftwareFoundation/openexr/pull/1577)\nAdd tests for the Header class.\n* [1576](https://github.com/AcademySoftwareFoundation/openexr/pull/1576)\npython-wheels.yml - bumps cibuildwheel version\n* [1575](https://github.com/AcademySoftwareFoundation/openexr/pull/1575)\nfix typo in README.md\n* [1570](https://github.com/AcademySoftwareFoundation/openexr/pull/1570)\ninstall.rst - update $ to % in the example shell prompts\n\n## Version 3.2.2 (February 11, 2024)\n\nPatch release that addresses\n[CVE-2023-5841](https://takeonme.org/cves/CVE-2023-5841.html).\n\nNote that this bug is present in the C++ API (since v3.1.0), although\nit is in a routine that is predominantly used for development and\ntesting. It is not likely to appear in production code.\n\nThis release also addresses:\n\n* OSS-fuzz [66491](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=66491)\nOut-of-memory in openexr_exrcorecheck_fuzzer\n* OSS-fuzz [66489](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=66489)\nNull-dereference in `Imf_3_3::realloc_deepdata`\n\n### Merged Pull Requests\n\n* [1632](https://github.com/AcademySoftwareFoundation/openexr/pull/1632)\nadjust checks for core to better match c++ checks\n* [1630](https://github.com/AcademySoftwareFoundation/openexr/pull/1630)\nfix issue with unpacking sample counts \n* [1627](https://github.com/AcademySoftwareFoundation/openexr/pull/1627)\nFix CVE 2023 5841\n\n## Version 3.2.1 (September 27, 2023)\n\nPatch release with miscellaneous build fixes:\n\n* Fix for linking statically against an external ``libdeflate``\n* Fix a compile error with ``OPENEXR_VERSION_HEX``\n* Fix various compiler warnings\n* Pkg-config generation is now on by default for all systems, including Windows\n\n### Merged Pull Requests\n\n* [1568](https://github.com/AcademySoftwareFoundation/openexr/pull/1568)\nFix Imf/Iex/IlmThread namespaces in python bindings and website code\n* [1565](https://github.com/AcademySoftwareFoundation/openexr/pull/1565)\nUpdate openexr_deps.bzl\n* [1562](https://github.com/AcademySoftwareFoundation/openexr/pull/1562)\nBazel: Improve module\n* [1561](https://github.com/AcademySoftwareFoundation/openexr/pull/1561)\nClean up handling of libdeflate when linking static\n* [1560](https://github.com/AcademySoftwareFoundation/openexr/pull/1560)\nOmit OPENEXR_IMAGES_TAG from test image url if empty\n* [1557](https://github.com/AcademySoftwareFoundation/openexr/pull/1557)\nSet build-shared:OFF for Static build\n* [1541](https://github.com/AcademySoftwareFoundation/openexr/pull/1541)\nOPENEXR_INSTALL_PKG_CONFIG is on by default, even on Windows\n* [1540](https://github.com/AcademySoftwareFoundation/openexr/pull/1540)\nDefault value for chromaticities attribute constructor in exrstdattr\n* [1539](https://github.com/AcademySoftwareFoundation/openexr/pull/1539)\nFix OPENEXR_VERSION_HEX\n* [1536](https://github.com/AcademySoftwareFoundation/openexr/pull/1536)\nPython wheel setup gets version from OpenEXR.pc/Imath.pc\n* [1534](https://github.com/AcademySoftwareFoundation/openexr/pull/1534)\nFix warnings from cross-compiling with x86_64-w64-mingw32-gcc-posix\n* [1533](https://github.com/AcademySoftwareFoundation/openexr/pull/1533)\nFix warnings in multipartExamples.cpp\n* [1532](https://github.com/AcademySoftwareFoundation/openexr/pull/1532)\nDon't trigger ci/bazel/ossfuzz builds on pushes/PRs to src/wrappers\n* [1531](https://github.com/AcademySoftwareFoundation/openexr/pull/1531)\nPropagate OPENEXR_INSTALL_PKG_CONFIG to internal Imath\n* [1530](https://github.com/AcademySoftwareFoundation/openexr/pull/1530)\nSet minimal permissions for workflow python-wheels.yml\n* [1528](https://github.com/AcademySoftwareFoundation/openexr/pull/1528)\nRemove check for _MSC_VER in internal_cpuid.h\n\n## Version 3.2.0 (August 30, 2023)\n\nMinor release with several additions, changes and improvements:\n\n* Zip compression via ``libdeflate``\n\n  As of OpenEXR release v3.2, OpenEXR depends on\n  [libdeflate](https://github.com/ebiggers/libdeflate) for\n  DEFLATE-based compression. Previous OpenEXR releases relied on\n  [zlib](https://www.zlib.net). Builds of OpenEXR can choose either an\n  ``libdeflate`` installation, or CMake can auto-fetch the source and\n  build it internally. The internal build is linked statically, so no\n  extra shared object is produced.\n\n  See [website/install.rst](website/install.rst) for more details.\n\n* New camdkit/camdkit-enabled standard attributes\n\n  These changes bring to OpenEXR new standard optional attributes that\n  were discussed in the [SMPTE Rapid Industry Solutions On-Set Virtual\n  Production\n  Initiative)](https://www.smpte.org/blog/update-on-smptes-rapid-industry-solutions-ris-on-set-virtual-production-osvp-initiative). Additionally,\n  some useful attributes from the SMPTE ACES Container File Layout\n  standard, SMPTE ST 2065-4:2023, have been included as well. The new\n  attributes are:\n\n  Support automated editorial workflow:\n\n  - ``reelName``\n  - ``imageCounter``\n  - ``ascFramingDecisionList``\n\n  Support forensics:\n\n  - ``cameraMake``\n  - ``cameraModel``\n  - ``cameraSerialNumber``\n  - ``cameraFirmware``\n  - ``cameraUuid``\n  - ``cameraLabel``\n  - ``lensMake``\n  - ``lensModel``\n  - ``lensSerialNumber``\n  - ``lensFirmware``\n  - ``cameraColorBalance``\n\n  Support pickup shots:\n\n  - ``shutterAngle``\n  - ``cameraCCTSetting``\n  - ``cameraTintSetting``\n\n  Support metadata-driven match move:\n\n  - ``sensorCenterOffset``\n  - ``sensorOverallDimensions``\n  - ``sensorPhotositePitch``\n  - ``sensorAcquisitionRectangle``\n  - ``nominalFocalLength``\n  - ``effectiveFocalLength``\n  - ``pinholeFocalLength``\n  - ``entrancePupilOffset``\n  - ``tStop`` (complementing existing aperture)\n\n  Also, ``renderingTransform`` and ``lookTransform`` have been deprecated.\n\n  See\n  [website/StandardAttributes.rst](website/StandardAttributes.rst)\n  and [PR\n  #1383](https://github.com/AcademySoftwareFoundation/openexr/pull/1383)\n  for more details.\n\n* Updated SO versioning policy \n\n  This change adopts a policy of appending the ``MAJOR.MINOR.PATCH``\n  software release name to the ``SONAME`` to form the real name of the\n  shared library.\n\n  See [website/install.rst](website/install.rst) and [PR\n  #1498](https://github.com/AcademySoftwareFoundation/openexr/pull/1498)\n  for more details.\n\n* Python bindings & PyPI wheel\n\n  Support for the [OpenEXR python\n  bindings](https://pypi.org/project/OpenEXR) have been formally\n  adopted by the OpenEXR project.\n  \n* Miscellaneous improvements:\n\n  - \"docs\" renamed to \"website\" ([PR\n    #1504](https://github.com/AcademySoftwareFoundation/openexr/pull/1504))\n\n  - Additional deep & multipart code examples ([PR\n    #1493](https://github.com/AcademySoftwareFoundation/openexr/pull/1493)\n    and [PR\n    #1502](https://github.com/AcademySoftwareFoundation/openexr/pull/1502))\n\n  - Many small build/test fixes\n  \n  - bin tools man pages\n\n  - Expanded test coverage\n\nSpecific OSS-fuzz issues addressed:\n\n* OSS-fuzz [46459](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=46459)\nOut-of-memory in ``openexr_exrcheck_fuzzer`` \n* OSS-fuzz [46432](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=46432)\nHeap-buffer-overflow in ``generic_unpack`` \n* OSS-fuzz [46413](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=46413)\nInteger-overflow in ``reconstruct_chunk_table`` \n* OSS-fuzz [45718](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=45718)\nHeap-double-free in ``Imf_3_1::RgbaInputFile::~RgbaInputFile`` \n* OSS-fuzz [45716](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=45716)\nAbrt in ``Imf_3_1::RgbaInputFile::~RgbaInputFile`` \n* OSS-fuzz [43771](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=43771)\nDirect-leak in ``Imf_3_1::RgbaInputFile::RgbaInputFile`` \n\n### Merged Pull Requests\n\n* [1527](https://github.com/AcademySoftwareFoundation/openexr/pull/1527)\n`OpenEXRConfig.h.in` uses version extracted from `openexr_version.h`\n* [1525](https://github.com/AcademySoftwareFoundation/openexr/pull/1525)\nAdd bzlmod support\n* [1523](https://github.com/AcademySoftwareFoundation/openexr/pull/1523)\nAdd `DEPENDENCIES Imath::Imath` for OpenEXRCore (#1523)\n* [1522](https://github.com/AcademySoftwareFoundation/openexr/pull/1522)\nRename cifuzz workflow to OSS-Fuzz, and filter out unnecessary triggers\n* [1520](https://github.com/AcademySoftwareFoundation/openexr/pull/1520)\nfix memory leaks in exrmultipart\n* [1519](https://github.com/AcademySoftwareFoundation/openexr/pull/1519)\nRemove .bazelrc file\n* [1518](https://github.com/AcademySoftwareFoundation/openexr/pull/1518)\nBazel support: Simplify use of libdeflate dependency\n* [1517](https://github.com/AcademySoftwareFoundation/openexr/pull/1517)\nStreamline Python wheel workflow, and add tests and a CMake setup for bindings\n* [1516](https://github.com/AcademySoftwareFoundation/openexr/pull/1516)\nBazel support: Remove Bazel specific example and use same examples as CMake build\n* [1513](https://github.com/AcademySoftwareFoundation/openexr/pull/1513)\nSeparate Actions workflow for the website \n* [1511](https://github.com/AcademySoftwareFoundation/openexr/pull/1511)\nWebsite \"Attributes\" page now describes all attributes \n* [1510](https://github.com/AcademySoftwareFoundation/openexr/pull/1510)\nDeprecate renderingTransform and lookModTransform \n* [1509](https://github.com/AcademySoftwareFoundation/openexr/pull/1509)\nInitialize regs[] to 0 in check_for_x86_simd\n* [1507](https://github.com/AcademySoftwareFoundation/openexr/pull/1507)\nFix CPUID detection with ``-march=x86-64-v3``\n* [1505](https://github.com/AcademySoftwareFoundation/openexr/pull/1505)\nAdd missing copyright/license specifiers\n* [1504](https://github.com/AcademySoftwareFoundation/openexr/pull/1504)\nRename \"docs\" to \"website\"\n* [1503](https://github.com/AcademySoftwareFoundation/openexr/pull/1503)\nReorganize ``share/util`` and remove unnecessary files\n* [1502](https://github.com/AcademySoftwareFoundation/openexr/pull/1502)\nmultipart code examples\n* [1501](https://github.com/AcademySoftwareFoundation/openexr/pull/1501)\nAdd website example source files to the CMake build for validation\n* [1500](https://github.com/AcademySoftwareFoundation/openexr/pull/1500)\nAdd 2023 Virtual Town Hall to news\n* [1498](https://github.com/AcademySoftwareFoundation/openexr/pull/1498)\nUpdate and simplify SO versioning policy\n* [1496](https://github.com/AcademySoftwareFoundation/openexr/pull/1496)\nBazel update\n* [1495](https://github.com/AcademySoftwareFoundation/openexr/pull/1495)\nRename ``IMATH_REPO/TAG`` to ``OPENEXR_IMATH_REPO/TAG`` and update install docs\n* [1494](https://github.com/AcademySoftwareFoundation/openexr/pull/1494)\nReorder attributes in doc to match order in header\n* [1493](https://github.com/AcademySoftwareFoundation/openexr/pull/1493)\nadds deep examples, fixes the deep examples in docs\n* [1490](https://github.com/AcademySoftwareFoundation/openexr/pull/1490)\nReaddress #1456: disallow NaNs in ``testOptimizedInterleavePatterns`` \n* [1489](https://github.com/AcademySoftwareFoundation/openexr/pull/1489)\nAdd ``sensorCenterOffset``, ``sensorOverallDimensions``, ``sensorPhotositePitch``\n* [1488](https://github.com/AcademySoftwareFoundation/openexr/pull/1488)\nRevert pre-computed values\n* [1487](https://github.com/AcademySoftwareFoundation/openexr/pull/1487)\nPython wheels\n* [1486](https://github.com/AcademySoftwareFoundation/openexr/pull/1486)\nReplace ``ILMBASE_THREADING_ENABLED`` with ``ILMTHREAD_THREADING_ENABLED``\n* [1484](https://github.com/AcademySoftwareFoundation/openexr/pull/1484)\nFix handling for corrupt number of DC components\n* [1483](https://github.com/AcademySoftwareFoundation/openexr/pull/1483)\nAdd ``ImfMisc.h`` and ``ImfCompressor.h`` as installed headers\n* [1482](https://github.com/AcademySoftwareFoundation/openexr/pull/1482)\nAdd ``OPENEXR_MISSING_ARM_VLD1`` workaround to ``internal_dwa_simd.h`` \n* [1475](https://github.com/AcademySoftwareFoundation/openexr/pull/1475)\nUpdate CI with vfx2023 Linux jobs.\n* [1473](https://github.com/AcademySoftwareFoundation/openexr/pull/1473)\nconsolidate project configurations to one place\n* [1472](https://github.com/AcademySoftwareFoundation/openexr/pull/1472)\nFix range check in dwa compressor\n* [1471](https://github.com/AcademySoftwareFoundation/openexr/pull/1471)\nAdd detailed instructions for making both patch and major/minor release\n* [1468](https://github.com/AcademySoftwareFoundation/openexr/pull/1468)\nRemove old zlib reference\n* [1464](https://github.com/AcademySoftwareFoundation/openexr/pull/1464)\nv3.1.9/v3.1.8 notes and news\n* [1453](https://github.com/AcademySoftwareFoundation/openexr/pull/1453)\nCIFuzz skips PRs that only modify markdown\n* [1428](https://github.com/AcademySoftwareFoundation/openexr/pull/1428)\nAdd simple abi checker util\n* [1427](https://github.com/AcademySoftwareFoundation/openexr/pull/1427)\nFix handling of builddir and cxxwarns in ``clang_coverage.sh`` \n* [1426](https://github.com/AcademySoftwareFoundation/openexr/pull/1426)\nPrevent re-download of images if already in place\n* [1425](https://github.com/AcademySoftwareFoundation/openexr/pull/1425)\nprepare for new version of libdeflate with thread-safe alloc functions\n* [1424](https://github.com/AcademySoftwareFoundation/openexr/pull/1424)\nStart working on improving test coverage\n* [1422](https://github.com/AcademySoftwareFoundation/openexr/pull/1422)\nFix reference to the number of supported compression types\n* [1421](https://github.com/AcademySoftwareFoundation/openexr/pull/1421)\nafter other merges, need to fix include\n* [1420](https://github.com/AcademySoftwareFoundation/openexr/pull/1420)\nDocument DWAA/DWAB compression in Technical Introduction\n* [1417](https://github.com/AcademySoftwareFoundation/openexr/pull/1417)\nci: set minimal permissions on GitHub workflows\n* [1411](https://github.com/AcademySoftwareFoundation/openexr/pull/1411)\nShift MacOS versions in flight\n* [1410](https://github.com/AcademySoftwareFoundation/openexr/pull/1410)\nRevert fix of spelling mistakes in PR messages\n* [1403](https://github.com/AcademySoftwareFoundation/openexr/pull/1403)\nensure we are passing through valid function pointers\n* [1399](https://github.com/AcademySoftwareFoundation/openexr/pull/1399)\nFix version h\n* [1398](https://github.com/AcademySoftwareFoundation/openexr/pull/1398)\nMore robust ``openexr_version.h`` handling\n* [1396](https://github.com/AcademySoftwareFoundation/openexr/pull/1396)\nFix spelling mistakes\n* [1395](https://github.com/AcademySoftwareFoundation/openexr/pull/1395)\nBazel support update\n* [1394](https://github.com/AcademySoftwareFoundation/openexr/pull/1394)\nRemove unused private member ``variable`` _maxScanLineSize (ABI break)\n* [1388](https://github.com/AcademySoftwareFoundation/openexr/pull/1388)\nUpdated Mac and Windows jobs for VFX platform 2023.\n* [1387](https://github.com/AcademySoftwareFoundation/openexr/pull/1387)\nSwitch to embedding libdeflate into EXRCore\n* [1386](https://github.com/AcademySoftwareFoundation/openexr/pull/1386)\nGovern library version by ``OpenEXRVersion.h`` \n* [1383](https://github.com/AcademySoftwareFoundation/openexr/pull/1383)\nAdd selected SMPTE camdkit or camdkit-enabling standard optional attributes\n* [1381](https://github.com/AcademySoftwareFoundation/openexr/pull/1381)\nDeprecate ``exrbuild.cpp`` \n* [1380](https://github.com/AcademySoftwareFoundation/openexr/pull/1380)\nTool manpages, doc page, and standardized ``--help`` messages\n* [1379](https://github.com/AcademySoftwareFoundation/openexr/pull/1379)\nReorder attribute definitions in ``ImfStandardAttributes.h`` by functional group\n* [1375](https://github.com/AcademySoftwareFoundation/openexr/pull/1375)\nnotes and news for v3.1.7\n* [1372](https://github.com/AcademySoftwareFoundation/openexr/pull/1372)\nTest Images page for website\n* [1364](https://github.com/AcademySoftwareFoundation/openexr/pull/1364)\nExtend Iex test coverage\n* [1363](https://github.com/AcademySoftwareFoundation/openexr/pull/1363)\nFix ``run_gcov.sh`` to use proper ``_build/_coverage`` dirs\n* [1357](https://github.com/AcademySoftwareFoundation/openexr/pull/1357)\nFix coverage analysis for .c files\n* [1352](https://github.com/AcademySoftwareFoundation/openexr/pull/1352)\nAdd 3.1.6 to release notes and news\n* [1351](https://github.com/AcademySoftwareFoundation/openexr/pull/1351)\nAdd tests for bin programs\n* [1350](https://github.com/AcademySoftwareFoundation/openexr/pull/1350)\nBazel Support: Switch to Imath 3.1.7\n* [1310](https://github.com/AcademySoftwareFoundation/openexr/pull/1310)\nSwitch to Imath 3.1.6 for Bazel build\n* [1288](https://github.com/AcademySoftwareFoundation/openexr/pull/1288)\nUpdate bazel build\n* [1258](https://github.com/AcademySoftwareFoundation/openexr/pull/1258)\nBazel support: Bump OpenEXR version to 3.2\n* [1257](https://github.com/AcademySoftwareFoundation/openexr/pull/1257)\nRefactor ``ImfCheckFile`` and oss-fuzz tests\n* [1256](https://github.com/AcademySoftwareFoundation/openexr/pull/1256)\nFix Bazel Imath version defines\n* [1243](https://github.com/AcademySoftwareFoundation/openexr/pull/1243)\nUpdate GitHub checkout action from V2 to V3\n* [1241](https://github.com/AcademySoftwareFoundation/openexr/pull/1241)\nBump version to 3.2.0 on the main branch\n* [1240](https://github.com/AcademySoftwareFoundation/openexr/pull/1240)\nprevent double-free of ``RgbaInputFile::_inputPart`` \n* [1228](https://github.com/AcademySoftwareFoundation/openexr/pull/1228)\nFix build script so auto-build of imath uses the new branch name\n* [1226](https://github.com/AcademySoftwareFoundation/openexr/pull/1226)\nMerge release notes and SECURITY.md from RB-3.1\n* [1221](https://github.com/AcademySoftwareFoundation/openexr/pull/1221)\nfix memory leak in ``RgbaInputFile`` constructor\n* [1201](https://github.com/AcademySoftwareFoundation/openexr/pull/1201)\nExtend multipart ``RgbaInputFile`` API\n* [1198](https://github.com/AcademySoftwareFoundation/openexr/pull/1198)\nFix version number of Imath for Bazel build\n* [1194](https://github.com/AcademySoftwareFoundation/openexr/pull/1194)\nRgbaInputFile: Multipart support\n* [1171](https://github.com/AcademySoftwareFoundation/openexr/pull/1171)\nMerge v3.1.2 release notes to master\n* [1139](https://github.com/AcademySoftwareFoundation/openexr/pull/1139)\nBazel update\n* [1127](https://github.com/AcademySoftwareFoundation/openexr/pull/1127)\nBazel build: Update Imath version to 3.1.2\n* [1103](https://github.com/AcademySoftwareFoundation/openexr/pull/1103)\nUpdate Imath to 3.1.1 and bazelisk to 1.10.1\n* [1096](https://github.com/AcademySoftwareFoundation/openexr/pull/1096)\nUpdate Imath to 3.1.0 for Bazel build\n* [1093](https://github.com/AcademySoftwareFoundation/openexr/pull/1093)\nUse Bazel standard convention for repository names\n* [1091](https://github.com/AcademySoftwareFoundation/openexr/pull/1091)\nAnalysis CI updates\n* [1089](https://github.com/AcademySoftwareFoundation/openexr/pull/1089)\nRelease notes for v3.1.0\n* [1085](https://github.com/AcademySoftwareFoundation/openexr/pull/1085)\nCherry-pick v3.0.5 release notes into master\n* [1083](https://github.com/AcademySoftwareFoundation/openexr/pull/1083)\nDo Bazel CI builds also for pull requests\n* [1079](https://github.com/AcademySoftwareFoundation/openexr/pull/1079)\nBazel build: Update Imath to version 3.0.5\n* [1078](https://github.com/AcademySoftwareFoundation/openexr/pull/1078)\nBazel build: Fix download hash for Imath\n* [1071](https://github.com/AcademySoftwareFoundation/openexr/pull/1071)\nDo not do a Bazel Build on old OpenEXR branches\n* [1070](https://github.com/AcademySoftwareFoundation/openexr/pull/1070)\nFix bazel build: Add missing headers to exrenvmap\n* [1068](https://github.com/AcademySoftwareFoundation/openexr/pull/1068)\nBazel build: Add some OpenEXR tools\n* [1067](https://github.com/AcademySoftwareFoundation/openexr/pull/1067)\nSort source files in CMake targets\n* [1060](https://github.com/AcademySoftwareFoundation/openexr/pull/1060)\nImprove Bazel Build\n* [1058](https://github.com/AcademySoftwareFoundation/openexr/pull/1058)\nAdd ``validate_openexr_libs.sh`` to validate .so symlinks\n\n## Version 3.1.13 (March 26, 2024)\n\nPatch release that fixes handling of dwa compression in OpenEXRCore library.\n\n### Merged Pull Requests\n\n* [1684](https://github.com/AcademySoftwareFoundation/openexr/pull/1684)\nFix typo causing prefix len to be wrong\n* [1591](https://github.com/AcademySoftwareFoundation/openexr/pull/1591)\nFix issue with decompressing fp32 dwa files\n\n## Version 3.1.12 (February 11, 2024)\n\nPatch release that addresses\n[CVE-2023-5841](https://takeonme.org/cves/CVE-2023-5841.html).\n\nNote that this bug is present in the C++ API (since v3.1.0), although\nit is in a routine that is predominantly used for development and\ntesting. It is not likely to appear in production code.\nThis release also addresses:\n\n* OSS-fuzz [66491](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=66491)\nOut-of-memory in openexr_exrcorecheck_fuzzer\n* OSS-fuzz [66489](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=66489)\nNull-dereference in `Imf_3_3::realloc_deepdata`\n\n### Merged Pull Requests\n\n* [1632](https://github.com/AcademySoftwareFoundation/openexr/pull/1632)\nadjust checks for core to better match c++ checks\n* [1630](https://github.com/AcademySoftwareFoundation/openexr/pull/1630)\nfix issue with unpacking sample counts \n* [1627](https://github.com/AcademySoftwareFoundation/openexr/pull/1627)\nFix CVE 2023 5841\n\n## Version 3.1.11 (August 13, 2023)\n\nPatch release that fixes a build failure with ``-march=x86-64-v3``\n\n### Merged Pull Requests\n\n* [1509](https://github.com/AcademySoftwareFoundation/openexr/pull/1509)\nInitialize ``regs[]`` to 0 in ``check_for_x86_simd``\n* [1507](https://github.com/AcademySoftwareFoundation/openexr/pull/1507)\nFix CPUID detection with ``-march=x86-64-v3``\n\n## Version 3.1.10 (August 2, 2023)\n\nPatch release that addresses miscellaneous build issues, test\nfailures, and performance regressions, as well as:\n\n* OSS-fuzz [59457](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=59457)\n Heap-buffer-overflow in ``LossyDctDecoder_execute``\n\n### Merged Pull Requests\n\n* [1490](https://github.com/AcademySoftwareFoundation/openexr/pull/1490) Readdress #1456: disallow NaNs in ``testOptimizedInterleavePatterns``\n* [1488](https://github.com/AcademySoftwareFoundation/openexr/pull/1488) Revert pre-computed values\n* [1484](https://github.com/AcademySoftwareFoundation/openexr/pull/1484) Fix handling for corrupt number of DC components\n* [1482](https://github.com/AcademySoftwareFoundation/openexr/pull/1482) Add ``OPENEXR_MISSING_ARM_VLD1`` workaround to ``internal_dwa_simd.h``\n* [1480](https://github.com/AcademySoftwareFoundation/openexr/pull/1480) Fix Huffman performance regression on Linux/clang\n* [1472](https://github.com/AcademySoftwareFoundation/openexr/pull/1472) Fix range check in dwa compressor\n* [1470](https://github.com/AcademySoftwareFoundation/openexr/pull/1470) Fix build with i386 and musl libc\n* [1469](https://github.com/AcademySoftwareFoundation/openexr/pull/1469) Fix the code contains unhandled character\n* [1467](https://github.com/AcademySoftwareFoundation/openexr/pull/1467) Fix cpu detection of sse2 on non-64 x86\n* [1466](https://github.com/AcademySoftwareFoundation/openexr/pull/1466) Fix the code contains unhandled character\n* [1463](https://github.com/AcademySoftwareFoundation/openexr/pull/1463) Fix gcc-11 warnings: signed/unsigned integer comparison, unused variables\n* [1462](https://github.com/AcademySoftwareFoundation/openexr/pull/1462) Fix macOS and Windows build failures when threading is disabled\n* [1447](https://github.com/AcademySoftwareFoundation/openexr/pull/1447) Fix build error on win_arm64\n\n## Version 3.1.9 (June 25, 2023)\n\nPatch release that addresses miscelleneous build, doc, test issues, in\nparticular:\n\n- Build fix for older macOS versions\n\nAlso:\n\n* OSS-fuzz [59382](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=59382)\n  Heap-buffer-overflow in ``internal_huf_decompress``\n\n### Merged Pull Requests\n\n* [1461](https::/github.com/AcademySoftwareFoundation/openexr/pull/1461)\n  don't use NaNs/infs in testOptimizedInterleavePatterns\n* [1457](https::/github.com/AcademySoftwareFoundation/openexr/pull/1457)\n  Bazel support: Switch back to VS2019 due to a toolchain issue in Bazel\n* [1454](https::/github.com/AcademySoftwareFoundation/openexr/pull/1454)\n  Add ``OPENEXR_IMF_INTERNAL_NAMESPACE`` for ``WidenFilename``\n* [1452](https::/github.com/AcademySoftwareFoundation/openexr/pull/1452)\n  Use ``security@openexr.com`` for consistency\n* [1448](https::/github.com/AcademySoftwareFoundation/openexr/pull/1448)\n  compression.cpp: fix isnan\n* [1443](https::/github.com/AcademySoftwareFoundation/openexr/pull/1443)\n  Bazel bump imath\n* [1439](https::/github.com/AcademySoftwareFoundation/openexr/pull/1439)\n  Fix scenario where malformed dwa file could read past end of buffer\n* [1416](https::/github.com/AcademySoftwareFoundation/openexr/pull/1416)\n  IlmThread: fix defines for older macOS: do not prefix with ``__``\n\n## Version 3.1.8 (June 2, 2023)\n\nPatch release that addresses miscellaneous build issues, for macOS in\nparticular, but also includes:\n \n* Support for DWA compression in OpenEXRCore\n* Fix for threadpool deadlocks during shutdown on Windows  \n\nThis release also addresses:\n\n* OSS-fuzz [59070](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=59070) Stack-buffer-overflow in DwaCompressor_readChannelRules\n\n### Merged Pull Requests\n\n* [1429](https::/github.com/AcademySoftwareFoundation/openexr/pull/1429)\nfix out of bounds check with a full channel name vs. byte count\n* [1414](https::/github.com/AcademySoftwareFoundation/openexr/pull/1414)\nAdd #include <cmath> for isnan\n* [1409](https::/github.com/AcademySoftwareFoundation/openexr/pull/1409)\nUse posix compat code for old macOS without libdispatch\n* [1408](https::/github.com/AcademySoftwareFoundation/openexr/pull/1408)\ninternal_xdr.h: fix endian logic for Apple\n* [1406](https::/github.com/AcademySoftwareFoundation/openexr/pull/1406)\ninternal_structs.h: __STDC_FORMAT_MACROS should be defined prior to inttypes.h\n* [1402](https::/github.com/AcademySoftwareFoundation/openexr/pull/1402)\nAdd dwa support to core\n* [1389](https::/github.com/AcademySoftwareFoundation/openexr/pull/1389)\nfix typo\n* [1382](https::/github.com/AcademySoftwareFoundation/openexr/pull/1382)\nUpdate macOS installation instructions\n* [1378](https::/github.com/AcademySoftwareFoundation/openexr/pull/1378)\nFix typo in README.md\n* [1377](https::/github.com/AcademySoftwareFoundation/openexr/pull/1377)\nOnly install exrinfo when OPENEXR_INSTALL_TOOLS is on\n* [1291](https::/github.com/AcademySoftwareFoundation/openexr/pull/1291)\nChange setNumThreads to wait for thread start\n\n## Version 3.1.7 (March 28, 2023)\n\nPatch release that fixes a regression on ARMv7, and fixes a build\nissue with zlib.\n\n### Merged Pull Requests\n\n* [1368](https://github.com/AcademySoftwareFoundation/openexr/pull/1368)\nFix ARMv7 build for DwaCompressor, too. \n* [1366](https://github.com/AcademySoftwareFoundation/openexr/pull/1366) \nFix ARMv7 build by making recent ZIP NEON optimizations be ARMv8 (aarch64) only \n* [1361](https://github.com/AcademySoftwareFoundation/openexr/pull/1361) \nFix the zlib build error that was reported in #1360. \n* [1358](https://github.com/AcademySoftwareFoundation/openexr/pull/1358) \nDetect missing vst1q_f32_x2 and provide replacement if necessary \n* [1355](https://github.com/AcademySoftwareFoundation/openexr/pull/1355) \nFix typo in release notes \n* [1354](https://github.com/AcademySoftwareFoundation/openexr/pull/1354) \nTest for AVX in unpack.c \n\n## Version 3.1.6 (March 9, 2023)\n\nPatch release that address various bug/build issues and optimizations:\n\n* NEON optimizations for ZIP reading\n* Enable fast Huffman & Huffman zig-zag transform for Arm Neon\n* Support relative and absolute libdir/includedir in pkg-config generation\n* Fix for reading memory mapped files with DWA compression\n* Enable SSE4 support on Windows\n* Fast huf decoder\n* CMake config for generating docs is now BUILD_DOC\n\nAlso, this release includes a major update and reorganization of the repo\ndocumentation and website.\n\nIn addition, numerous typos and misspellings in comments and doxygen\ncontent have been fixed via\n[``codespell``](https://github.com/codespell-project/codespell).\n\nSpecific OSS-fuzz issues address:\n\n* OSS-fuzz [52730](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=52730) Heap-buffer-overflow in fasthuf_initialize\n* OSS-fuzz [49698](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=49698) Heap-buffer-overflow in fasthuf_decode\n* OSS-fuzz [47517](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47517) Integer-overflow in reconstruct_chunk_table\n* OSS-fuzz [47503](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47503) Heap-buffer-overflow in uncompress_b44_impl\n* OSS-fuzz [47483](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=47483) Heap-buffer-overflow in generic_unpack\n\n### Merged Pull Requests\n\n* [1348](https://github.com/AcademySoftwareFoundation/openexr/pull/1348)\nNEON optimizations for ZIP reading (reconstruct and interleave) \n* [1347](https://github.com/AcademySoftwareFoundation/openexr/pull/1347)\nReduce memory in ``testDeepScanLineBasic`` \n* [1346](https://github.com/AcademySoftwareFoundation/openexr/pull/1346)\nAdd pointers to installing doxygen/sphinx to the build instructions\n* [1345](https://github.com/AcademySoftwareFoundation/openexr/pull/1345)\nAdd execution of the examples to test suite\n* [1344](https://github.com/AcademySoftwareFoundation/openexr/pull/1344)\nSphinx warnings by default now cause doc build to fail\n* [1343](https://github.com/AcademySoftwareFoundation/openexr/pull/1343)\nRemovew tmpDir.h from OpenEXRUtilTest/OpenEXRFuzzTest CMakeLists.txt\n* [1341](https://github.com/AcademySoftwareFoundation/openexr/pull/1341)\nUpdate PortingGuide.rst\n* [1340](https://github.com/AcademySoftwareFoundation/openexr/pull/1340)\nRemove duplicate ``tmpDir.h`` files\n* [1339](https://github.com/AcademySoftwareFoundation/openexr/pull/1339)\nBuild docs in CI, and rename ``DOCS`` CMake config variable to ``BUILD_DOCS`` \n* [1338](https://github.com/AcademySoftwareFoundation/openexr/pull/1338)\nAdd header files for IDEs\n* [1337](https://github.com/AcademySoftwareFoundation/openexr/pull/1337)\nFix documentation glitches\n* [1336](https://github.com/AcademySoftwareFoundation/openexr/pull/1336)\nFix sphinx extensions in conf.py and requirements.txt\n* [1335](https://github.com/AcademySoftwareFoundation/openexr/pull/1335)\nMore doc reorg\n* [1333](https://github.com/AcademySoftwareFoundation/openexr/pull/1333)\nFix for reading memory mapped files with DWA compression\n* [1332](https://github.com/AcademySoftwareFoundation/openexr/pull/1332)\nReorganize repo/readthedocs documentation\n* [1331](https://github.com/AcademySoftwareFoundation/openexr/pull/1331)\nAdd missing license/copyright\n* [1330](https://github.com/AcademySoftwareFoundation/openexr/pull/1330)\nSupport relative and absolute libdir/incluedir in pkg-config generation\n* [1329](https://github.com/AcademySoftwareFoundation/openexr/pull/1329)\nFix missing guard check\n* [1323](https://github.com/AcademySoftwareFoundation/openexr/pull/1323)\nEnable fast Huffman & Huffman zig-zag transform for Arm Neon\n* [1321](https://github.com/AcademySoftwareFoundation/openexr/pull/1321)\nFix MSVC Debug build with internal zlib\n* [1317](https://github.com/AcademySoftwareFoundation/openexr/pull/1317)\nAdd CIFuzz GitHub action\n* [1316](https://github.com/AcademySoftwareFoundation/openexr/pull/1316)\nFix compiler warnings from gcc-12\n* [1315](https://github.com/AcademySoftwareFoundation/openexr/pull/1315)\nFix Visual Studio on ARM Compilation\n* [1312](https://github.com/AcademySoftwareFoundation/openexr/pull/1312)\nProblem: warning C4244: initializing: conversion from double to unsigned int, possible loss of data\n* [1311](https://github.com/AcademySoftwareFoundation/openexr/pull/1311)\nClean up CONTRIBUTING.md\n* [1296](https://github.com/AcademySoftwareFoundation/openexr/pull/1296)\nCheck for null pointer passed to ``memcpy``\n* [1295](https://github.com/AcademySoftwareFoundation/openexr/pull/1295)\nRemove TSC meeting notes from repo\n* [1294](https://github.com/AcademySoftwareFoundation/openexr/pull/1294)\nChange reference to ``IlmBase`` to ``Imath`` in ``README.md``\n* [1293](https://github.com/AcademySoftwareFoundation/openexr/pull/1293)\nUpdate Christina's affiliation\n* [1292](https://github.com/AcademySoftwareFoundation/openexr/pull/1292)\nFix typo in the documentation's example reading class\n* [1290](https://github.com/AcademySoftwareFoundation/openexr/pull/1290)\nfix huf memory boundary checks\n* [1289](https://github.com/AcademySoftwareFoundation/openexr/pull/1289)\nFix a typo breaking the link to ``Imath`` repository in readme\n* [1287](https://github.com/AcademySoftwareFoundation/openexr/pull/1287)\nUsing ``PRId64`` in place of ``%ld`` in ``chunk.c`` \n* [1286](https://github.com/AcademySoftwareFoundation/openexr/pull/1286)\nFix NDK compile error\n* [1279](https://github.com/AcademySoftwareFoundation/openexr/pull/1279)\nFix for IDE Headers\n* [1276](https://github.com/AcademySoftwareFoundation/openexr/pull/1276)\nadd missed ``#include <cstdint>`` statement\n* [1274](https://github.com/AcademySoftwareFoundation/openexr/pull/1274)\nEnable SSE4 support on Windows #2\n* [1272](https://github.com/AcademySoftwareFoundation/openexr/pull/1272)\nFix remaining typos\n* [1271](https://github.com/AcademySoftwareFoundation/openexr/pull/1271)\nFix typos in ``src/lib/OpenEXR``\n* [1269](https://github.com/AcademySoftwareFoundation/openexr/pull/1269)\nAdd fast huf decoder\n* [1268](https://github.com/AcademySoftwareFoundation/openexr/pull/1268)\nAddress OSS Fuzz Issues\n* [1264](https://github.com/AcademySoftwareFoundation/openexr/pull/1264)\nAdd missing ``#include <cstdint>`` required by gcc-13\n* [1261](https://github.com/AcademySoftwareFoundation/openexr/pull/1261)\nprevent integer overflow in ``DeepScanlineInputFile`` with huge images\n* [1260](https://github.com/AcademySoftwareFoundation/openexr/pull/1260)\nprevent integer overflow of lineOffsetSize\n* [1259](https://github.com/AcademySoftwareFoundation/openexr/pull/1259)\nAdd explicit casts around the usage of zlib datatypes to avoid warnings on Windows\n\n## Version 3.1.5 (April 11, 2022)\n\nPatch release that address various bug/build/doc issues:\n\n* Add backwards-compatibilty flags to the core library to match\n  original behavior of the the c++ library. Fixes reading of certain\n  files by the new core.\n* Fix build failures on MSVC14 and MSVC 2022\n* Fix build failure on latest 64-bit Ubuntu \n* Documentation refers to primary branch as \"main\"\n* Update the CI workflow matrix to VFX-CY2022\n* Update auto-fetch Imath version to v3.1.5\n\nSpecific OSS-fuzz issues:\n\n* OSS-fuzz [46309](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=46309)\nHeap-buffer-overflow in Imf_3_1::memstream_read\n* OSS-fuzz [46083](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=46083)\nOut-of-memory in openexr_exrcheck_fuzzer\n* OSS-fuzz [45899](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=45899)\nInteger-overflow in internal_exr_compute_chunk_offset_size\n* OSS-fuzz [44084](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=44084)\nOut-of-memory in openexr_exrcheck_fuzzer\n\n### Merged Pull Requests\n\n* [1251](https://github.cmo/AcademySoftwareFoundation/openexr/pull/1251)\nAdd disable reconstruct flag\n* [1250](https://github.cmo/AcademySoftwareFoundation/openexr/pull/1250)\nhandle potential overflow in CheckFile core reading\n* [1249](https://github.cmo/AcademySoftwareFoundation/openexr/pull/1249)\nprevent excessive internal memory in CheckFile deep tests\n* [1247](https://github.com/AcademySoftwareFoundation/openexr/pull/1247)\nUpdate to zlib 1.2.12 and Imath 3.1.5 \n* [1246](https://github.com/AcademySoftwareFoundation/openexr/pull/1246)\nmove out of bounds check inside loop \n* [1245](https://github.com/AcademySoftwareFoundation/openexr/pull/1245)\nImplement corrupt chunk table reconstruction for Core \n* [1244](https://github.com/AcademySoftwareFoundation/openexr/pull/1244)\nMatch cpp header checks \n* [1239](https://github.com/AcademySoftwareFoundation/openexr/pull/1239)\nAdd #include <algorithm> for MSVC14\n* [1238](https://github.com/AcademySoftwareFoundation/openexr/pull/1238)\nUpdate release notes for v2.5.8\n* [1237](https://github.com/AcademySoftwareFoundation/openexr/pull/1237)\nFix MSVC 2022 build\n* [1232](https://github.com/AcademySoftwareFoundation/openexr/pull/1232)\nFix logic for detecting _libc_fpstate API\n* [1230](https://github.com/AcademySoftwareFoundation/openexr/pull/1230)\nAdd maximumSampleCount limit to CompositeDeepScanLine\n* [1227](https://github.com/AcademySoftwareFoundation/openexr/pull/1227)\nUpdate CI for VFX reference platform 2022\n* [1219](https://github.com/AcademySoftwareFoundation/openexr/pull/1219)\nMake local build with Imath\n\n## Version 3.1.4 (January 26, 2022)\n\nPatch release that addresses various issues:\n\n* Several bug fixes to properly reject invalid input upon read \n* A check to enable SSE2 when building with Visual Studio\n* A check to fix building with VisualStudio on ARM64\n* Update the automatically-downloaded version of Imath to v3.1.4\n* Miscellaneous documentation improvements\n\nThis addresses one public security vulnerability:\n\n* [CVE-2021-45942](https://nvd.nist.gov/vuln/detail/CVE-2021-45942) Heap-buffer-overflow in Imf_3_1::LineCompositeTask::execute\n\nSpecific OSS-fuzz issues:\n\n* OSS-fuzz [43961](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=43961) Heap-buffer-overflow in generic_unpack\n* OSS-fuzz [43916](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=43916) Heap-buffer-overflow in hufDecode\n* OSS-fuzz [43763](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=43763) Heap-buffer-overflow in internal_huf_decompress\n* OSS-fuzz [43745](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=43745) Floating-point-exception in internal_exr_compute_tile_information\n* OSS-fuzz [43744](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=43744) Divide-by-zero in internal_exr_compute_tile_information\n* OSS-fuzz [42197](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=42197) Out-of-memory in openexr_exrcheck_fuzzer\n* OSS-fuzz [42001](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=42001) Timeout in openexr_exrcheck_fuzzer\n* OSS-fuzz [41999](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=41999) Heap-buffer-overflow in Imf_3_1::LineCompositeTask::execute\n* OSS-fuzz [41669](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=41669) Integer-overflow in Imf_3_1::rleUncompress\n* OSS-fuzz [41625](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=41625) Heap-buffer-overflow in uncompress_b44_impl\n* OSS-fuzz [41416](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=41416) Heap-buffer-overflow in Imf_3_1::LineCompositeTask::execute\n* OSS-fuzz [41075](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=41075) Integer-overflow in Imf_3_1::copyIntoDeepFrameBuffer\n* OSS-fuzz [40704](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=40704) Crash in Imf_3_1::DeepTiledInputFile::readPixelSampleCounts\n* OSS-fuzz [40702](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=40702) Null-dereference in bool Imf_3_1::readDeepTile<Imf_3_1::DeepTiledInputFile>\n* OSS-fuzz [40701](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=40701) Null-dereference in bool Imf_3_1::readDeepTile<Imf_3_1::DeepTiledInputPart>\n* OSS-fuzz [40423](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=40423) Out-of-memory in openexr_exrcheck_fuzzer\n* OSS-fuzz [40234](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=40234) Heap-buffer-overflow in generic_unpack\n* OSS-fuzz [40231](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=40231) Heap-buffer-overflow in hufDecode\n* OSS-fuzz [40091](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=40091) Heap-buffer-overflow in hufDecode\n\n### Merged Pull Requests\n\n* [1225](https://github.com/AcademySoftwareFoundation/openexr/pull/1225)\nBazel build: Update Imath\n* [1224](https://github.com/AcademySoftwareFoundation/openexr/pull/1224)\nAdd error check to prevent corrupt files trying to unpack \n* [1223](https://github.com/AcademySoftwareFoundation/openexr/pull/1223)\nFix issues with a a \"short\" huf table and checking boundary conditions, missing return value\n* [1222](https://github.com/AcademySoftwareFoundation/openexr/pull/1222)\nFix OSS Fuzz 43763, 43745 \n* [1218](https://github.com/AcademySoftwareFoundation/openexr/pull/1218)\nOSS-Fuzz pass 15jan2022\n* [1217](https://github.com/AcademySoftwareFoundation/openexr/pull/1217)\nAdded missing check _M_IX86 or _M_X64 when using __lzcnt.\n* [1216](https://github.com/AcademySoftwareFoundation/openexr/pull/1216)\nCorrected the check to enable SSE2 when building with Visual Studio.\n* [1214](https://github.com/AcademySoftwareFoundation/openexr/pull/1214)\nprevent overflow in allocation of RLE buufer\n* [1213](https://github.com/AcademySoftwareFoundation/openexr/pull/1213)\nadd check for decompressed deepscanline datasize\n* [1209](https://github.com/AcademySoftwareFoundation/openexr/pull/1209)\nenforce xSampling/ySampling==1 in CompositeDeepScanLine\n* [1208](https://github.com/AcademySoftwareFoundation/openexr/pull/1208)\nReduce memory consumption with very large deepscanline images\n* [1206](https://github.com/AcademySoftwareFoundation/openexr/pull/1206)\nUpdate INSTALL.md\n* [1205](https://github.com/AcademySoftwareFoundation/openexr/pull/1205)\nDeepScanlineInputFile now uses chunk size test from DeepTiledInputFile\n* [1200](https://github.com/AcademySoftwareFoundation/openexr/pull/1200)\nCorrected Deep Docs & Example Code\n* [1199](https://github.com/AcademySoftwareFoundation/openexr/pull/1199)\nFix C++ DeepTile reading in Imf::CheckFile\n* [1195](https://github.com/AcademySoftwareFoundation/openexr/pull/1195)\nFix bugs in ImfCheckFile.cpp:readDeepTile()\n* [1193](https://github.com/AcademySoftwareFoundation/openexr/pull/1193)\nmention multipart files in multiview doc\n* [1191](https://github.com/AcademySoftwareFoundation/openexr/pull/1191)\nReplace Doxygen/Sphinx targets with \"docs\"\n* [1190](https://github.com/AcademySoftwareFoundation/openexr/pull/1190)\nAdd Compression section to \"Reading and Writing Image Files\" doc\n* [1189](https://github.com/AcademySoftwareFoundation/openexr/pull/1189)\nFix typo in readthedocs url\n\n\n## Version 3.1.3 (October 27, 2021)\n\nPatch release with a change to default zip compression level:\n\n* Default zip compression level is now 4 (instead of 6), which in our\n  tests improves compression times by 2x with only a tiny drop in\n  compression ratio.\n* ``setDefaultZipCompression()`` and ``setDefaultDwaCompression()``\n  now set default compression levels for writing.\n* The Header how has ``zipCompressionLevel()`` and\n  ``dwaCompressionLevel()`` to return the levels used for writing.\n\nAlso, various bug fixes, build improvements, and documentation\nupdates. In particular:\n\n* Fixes a build failure with Imath prior to v3.1\n* Fixes a bug in detecting invalid chromaticity values\n\nSpecific OSS-fuzz issues:\n\n* OSS-fuzz [40091](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=40091)\n  Heap-buffer-overflow in hufDecode\n* OSS-fuzz [39997](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39997)\n  Null-dereference in Imf_3_1::readCoreScanlinePart\n* OSS-fuzz [39996](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39996)\n  Heap-buffer-overflow in generic_unpack\n* OSS-fuzz [39936](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39936)\n  Heap-buffer-overflow in Imf_3_1::memstream_read\n* OSS-fuzz [39836](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39836)\n  Heap-buffer-overflow in internal_huf_decompress\n* OSS-fuzz [39799](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39799)\n  Heap-buffer-overflow in unpack_32bit\n* OSS-fuzz [39754](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39754)\n  Abrt in internal_decode_alloc_buffer\n* OSS-fuzz [39737](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39737)\n  Heap-buffer-overflow in unpack_16bit\n* OSS-fuzz [39683](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39683)\n  Null-dereference in Imf_3_1::readCoreScanlinePart\n* OSS-fuzz [39630](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39630)\n  Direct-leak in internal_decode_alloc_buffer\n* OSS-fuzz [39623](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39623)\n  Heap-buffer-overflow in unpack_16bit\n* OSS-fuzz [39616](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39616)\n  Heap-buffer-overflow in Imf_3_1::memstream_read\n* OSS-fuzz [39604](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39604)\n  Abrt in internal_decode_free_buffer\n* OSS-fuzz [39601](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39601)\n  Heap-buffer-overflow in internal_huf_decompress\n* OSS-fuzz [39591](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39591)\n  Integer-overflow in Imf_3_1::readCoreTiledPart\n* OSS-fuzz [39579](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39579)\n  Undefined-shift in internal_huf_decompress\n* OSS-fuzz [39571](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39571)\n  Heap-buffer-overflow in generic_unpack\n* OSS-fuzz [39568](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39568)\n  Null-dereference in Imf_3_1::readCoreScanlinePart\n* OSS-fuzz [39542](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39542)\n  Heap-buffer-overflow in Imf_3_1::memstream_read\n* OSS-fuzz [39538](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39538)\n  Heap-buffer-overflow in unpack_16bit_4chan_planar\n* OSS-fuzz [39532](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39532)\n  Heap-buffer-overflow in unpack_16bit_4chan_planar\n* OSS-fuzz [39529](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39529)\n  Null-dereference in Imf_3_1::readCoreTiledPart\n* OSS-fuzz [39526](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39526)\n  Integer-overflow in exr_read_tile_chunk_info\n* OSS-fuzz [39522](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39522)\n  Direct-leak in internal_decode_alloc_buffer\n* OSS-fuzz [39472](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39472)\n  Heap-buffer-overflow in unpack_16bit\n* OSS-fuzz [39421](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39421)\n  Stack-overflow in Imf_3_1::memstream_read\n* OSS-fuzz [39399](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39399)\n  Direct-leak in exr_attr_preview_init\n* OSS-fuzz [39397](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39397)\n  Timeout in openexr_exrcheck_fuzzer\n* OSS-fuzz [39343](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39343)\n  Null-dereference READ in ubsan_GetStackTrace\n* OSS-fuzz [39342](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39342)\n  Direct-leak in Imf_3_1::OpaqueAttribute::copy\n* OSS-fuzz [39340](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39340)\n  Stack-overflow in Imf_3_1::memstream_read\n* OSS-fuzz [39332](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39332)\n  Out-of-memory in openexr_exrcheck_fuzzer\n* OSS-fuzz [39329](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39329)\n  Negative-size-param in Imf_3_1::memstream_read\n* OSS-fuzz [39328](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39328)\n  Undefined-shift in internal_exr_compute_tile_information\n* OSS-fuzz [39323](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39323)\n  Integer-overflow in Imf_3_1::readCoreTiledPart\n\n### Merged Pull Requests\n\n* [1187](https://github.com/AcademySoftwareFoundation/openexr/pull/1187)\n  Add size check to memory stream check program\n* [1186](https://github.com/AcademySoftwareFoundation/openexr/pull/1186)\n  Add extra tile validation\n* [1185](https://github.com/AcademySoftwareFoundation/openexr/pull/1185)\n  Fix test for bad chunk data to allow for 0-sample deep chunks\n* [1184](https://github.com/AcademySoftwareFoundation/openexr/pull/1184)\n  Fixes an issue computing the unpacked size of a chunk\n* [1183](https://github.com/AcademySoftwareFoundation/openexr/pull/1183)\n  Fix decoding of piz when y sampling is not the same for all channels\n* [1182](https://github.com/AcademySoftwareFoundation/openexr/pull/1182)\n  Require at least one channel\n* [1180](https://github.com/AcademySoftwareFoundation/openexr/pull/1180)\n  reduce iterations in testIDManifest to speed up\n* [1178](https://github.com/AcademySoftwareFoundation/openexr/pull/1178)\n  use std::abs in chromaticity sanity tests (fixes #1177)\n* [1176](https://github.com/AcademySoftwareFoundation/openexr/pull/1176)\n  Update CI builds\n* [1174](https://github.com/AcademySoftwareFoundation/openexr/pull/1174)\n  Update docs with link to EasyCLA\n* [1173](https://github.com/AcademySoftwareFoundation/openexr/pull/1173)\n  Fix misc issues due to OSS-fuzz\n* [1172](https://github.com/AcademySoftwareFoundation/openexr/pull/1172)\n  fix casts in readUInt shifts\n* [1169](https://github.com/AcademySoftwareFoundation/openexr/pull/1169)\n  Clean up error messages, check against packed size of 0, integer overflow\n* [1168](https://github.com/AcademySoftwareFoundation/openexr/pull/1168)\n  Refactor attribute size checks\n* [1167](https://github.com/AcademySoftwareFoundation/openexr/pull/1167)\n  Fix loop iterators in ImfCheckFile.cpp\n* [1166](https://github.com/AcademySoftwareFoundation/openexr/pull/1166)\n  fix int overflow in calc_level_size\n* [1165](https://github.com/AcademySoftwareFoundation/openexr/pull/1165)\n  Prevent read when offset past the end of the memstream\n* [1164](https://github.com/AcademySoftwareFoundation/openexr/pull/1164)\n  Also fail when the user provides a preview image that has a zero size coordinate\n* [1163](https://github.com/AcademySoftwareFoundation/openexr/pull/1163)\n  don't validate chunk size when file_size unknown\n* [1161](https://github.com/AcademySoftwareFoundation/openexr/pull/1161)\n  validate filesize before allocating chunk memory\n* [1160](https://github.com/AcademySoftwareFoundation/openexr/pull/1160)\n  validate dwaCompressionLevel attribute type\n* [1150](https://github.com/AcademySoftwareFoundation/openexr/pull/1150)\n  Enable Google OSS Fuzz to also test Core library\n* [1149](https://github.com/AcademySoftwareFoundation/openexr/pull/1145)\n  Enable ephemeral compression levels\n* [1145](https://github.com/AcademySoftwareFoundation/openexr/pull/1145)\n  Fix when compiling against pre-3.1 version of Imath\n* [1125](https://github.com/AcademySoftwareFoundation/openexr/pull/1125)\n  Zip: switch to compression level 4 instead of default 6\n\n## Version 3.1.2 (October 4, 2021)\n\nPatch release with various bug fixes, build improvements, and\ndocumentation updates.\n\nWith this version, the OpenEXR technical documentation formerly\ndistributed exclusively as pdf's is now published online at\nhttps://openexr.readthedocs.io, with the document source now\nmaintained as .rst files in the repo's docs subfolder.\n\nSpecific OSS-fuzz issues:\n\n* OSS-fuzz [39196](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39196)\n  Stack-buffer-overflow in dispatch_print_error\n* OSS-fuzz [39198](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39198)\n  Direct-leak in exr_attr_chlist_add_with_length\n* OSS-fuzz [39206](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39206)\n  Direct-leak in extract_attr_string_vector\n* OSS-fuzz [39212](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39212)\n  Heap-use-after-free in dispatch_print_error\n* OSS-fuzz [39205](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39205)\n  Timeout in openexr_exrcheck_fuzzer\n* OSS-fuzz [38912](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=38912)\n  Integer-overflow in Imf_3_1::bytesPerDeepLineTable\n* OSS-fuzz [39084](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=39084)\n  Divide-by-zero in Imf_3_1::RGBtoXYZ\n\n### Merged Pull Requests\n\n* [1159](https://github.com/AcademySoftwareFoundation/openexr/pull/1159)\n  Fix unterminated string causing issue with print\n* [1158](https://github.com/AcademySoftwareFoundation/openexr/pull/1158)\n  Fix memory leak when unable to parse the channel list \n* [1157](https://github.com/AcademySoftwareFoundation/openexr/pull/1157)\n  Fix leak when parsing header with duplicate attribute names \n* [1156](https://github.com/AcademySoftwareFoundation/openexr/pull/1156)\n  Fixes a use-after-free when an invalid type string is provided\n* [1155](https://github.com/AcademySoftwareFoundation/openexr/pull/1155)\n  Fix hang when there is EOF while extracting string from attr type/name\n* [1153](https://github.com/AcademySoftwareFoundation/openexr/pull/1153)\n  Avoid div by zero with test for bad chromaticities in RGBtoXYZ\n* [1152](https://github.com/AcademySoftwareFoundation/openexr/pull/1152)\n  prevent overflow in bytesPerDeepLineTable \n* [1151](https://github.com/AcademySoftwareFoundation/openexr/pull/1151)\n  Add additional text to ensure correct detection for threads \n* [1147](https://github.com/AcademySoftwareFoundation/openexr/pull/1147)\n  Simplify the definition for bswap_32 for NetBSD \n* [1142](https://github.com/AcademySoftwareFoundation/openexr/pull/1142)\n  Cleanup cmake thread detection \n* [1141](https://github.com/AcademySoftwareFoundation/openexr/pull/1141)\n  Fix issue with unpacked size computation \n* [1138](https://github.com/AcademySoftwareFoundation/openexr/pull/1138)\n  the HufDec struct used during decompression also contains a pointer \n* [1136](https://github.com/AcademySoftwareFoundation/openexr/pull/1136)\n  Fixes #1135, test which assumed 64-bit pointer size \n* [1134](https://github.com/AcademySoftwareFoundation/openexr/pull/1134)\n  Clean up enum declarations in OpenEXRCore \n* [1133](https://github.com/AcademySoftwareFoundation/openexr/pull/1133)\n  Fix copy/paste error in special case unpack routine \n* [1132](https://github.com/AcademySoftwareFoundation/openexr/pull/1132)\n  Build sphinx/doxygen docs with CMake \n* [1131](https://github.com/AcademySoftwareFoundation/openexr/pull/1131)\n  Retire old docs \n* [1130](https://github.com/AcademySoftwareFoundation/openexr/pull/1130)\n  Clean up OpenEXRCore doxygen comments \n* [1129](https://github.com/AcademySoftwareFoundation/openexr/pull/1129)\n  Guard ``__has_attribute`` for compilers that don't support it \n* [1124](https://github.com/AcademySoftwareFoundation/openexr/pull/1124)\n  Remove throw from ~IlmThread \n* [1123](https://github.com/AcademySoftwareFoundation/openexr/pull/1123)\n  Require Imath 3.1 \n* [1122](https://github.com/AcademySoftwareFoundation/openexr/pull/1122)\n  Remove stray and unnecessary Imf:: namespace prefixes \n* [1120](https://github.com/AcademySoftwareFoundation/openexr/pull/1120)\n  Docs: fixed wrong code examples in \"how to read a file\" section \n* [1111](https://github.com/AcademySoftwareFoundation/openexr/pull/1111)\n  Fix document cross-references in .rst files and other gotchas \n* [1108](https://github.com/AcademySoftwareFoundation/openexr/pull/1108)\n  Fix formatting in InterpretingDeepPixels.rst: \n* [1104](https://github.com/AcademySoftwareFoundation/openexr/pull/1104)\n  ``TheoryDeepPixels.rst`` first pass converson from latex \n* [1042](https://github.com/AcademySoftwareFoundation/openexr/pull/1042)\n  Fix broken link for releases \n\n## Version 3.1.1 (August 2, 2021)\n\nPatch release that fixes build failures on various systems, introduces\nCMake ``CMAKE_CROSSCOMPILING_EMULATOR`` support, and fixes a few other\nminor issues.\n\n### Merged Pull Requests\n\n* [1117](https://github.com/AcademySoftwareFoundation/openexr/pull/1117)\n  Improve handling of ``#include <*intrin.h>``\n* [1116](https://github.com/AcademySoftwareFoundation/openexr/pull/1116)\n  Fix up some printf warnings by using appropriate macros\n* [1115](https://github.com/AcademySoftwareFoundation/openexr/pull/1115)\n  Remove an old check for bsd behaviour, all the bsd-ish oses have the\n  leXXtoh functions\n* [1112](https://github.com/AcademySoftwareFoundation/openexr/pull/1112)\n  Include ``<x86intrin.h>`` only if ``defined(__x86_64__)``\n* [1109](https://github.com/AcademySoftwareFoundation/openexr/pull/1109)\n  Remove commented-out code in internal_huf.c\n* [1106](https://github.com/AcademySoftwareFoundation/openexr/pull/1106)\n  ``CMAKE_CROSSCOMPILING_EMULATOR`` and misc. fixes\n\n## Version 3.1.0 (July 22, 2021)\n\nThe 3.1 release of OpenEXR introduces a new library, OpenEXRCore,\nwhich is the result of a significant re-thinking of how OpenEXR\nmanages file I/O and provides access to image data. It begins to\naddress long-standing scalability issues with multithreaded image\nreading and writing.\n\nThe OpenEXRCore library provides thread-safe, non-blocking access to\nfiles, which was not possible with the current API, where the\nframebuffer management is separate from read requests. It is written\nentirely in C and provides a new C-language API alongside the existing\nC++ API. This new low-level API allows applications to do custom\nunpacking of EXR data, such as on the GPU, while still benefiting from\nefficient I/O, file validation, and other semantics. It provides\nefficient direct access to EXR files in texturing applications. This C\nlibrary also introduces an easier path to implementing OpenEXR\nbindings in other languages, such as Rust.\n\nThe 3.1 release represents a technology preview for upcoming\nreleases. The initial release is incremental; the existing API and\nunderlying behavior has not changed. The new API is available now for\nperformance validation testing, and then in future OpenEXR releases,\nthe C++ API will migrate to use the new core in stages.  It is not the\nintention to entirely deprecate the C++ API, nor must all applications\nre-implement EXR I/O in terms of the C library. The C API does not,\nand will not, provide the rich set of utility classes that exist in\nthe C++ layer. The 3.1 release of the OpenEXRCore library simply\noffers new functionality for specialty applications seeking the\nhighest possible performance. In the future, the ABI will evolve, but\nthe API will remain consistent, or only have additions.\n\nTechnical Design\n\nThe OpenEXRCore API introduces a ``context`` object to manage file\nI/O. The context provides customization for I/O, memory allocation,\nand error handling.  This makes it possible to use a decode and/or\nencode pipeline to customize how the chunks are written and read, and\nhow they are packed or unpacked.\n\nThe OpenEXRCore library is built around the concept of “chunks”, or\natomic blocks of data in a file, the smallest unit of data to be read\nor written.  The contents of a chunk vary from file to file based on\ncompression (i.e. zip and zips) and layout (scanline\nvs. tiled). Currently this is either 1, 16, or 32 scanlines, or 1 tile\n(or subset of a tile on edge boundaries / small mip level).\n\nThe OpenEXRCore library is specifically designed for multipart EXR\nfiles. It will continue to produce legacy-compatible single part files\nas needed, but the API assumes you are always dealing with a\nmulti-part file. It also fully supports attributes, although being C,\nit lacks some of the C++ layer’s abstraction.\n\nLimitations:\n\n* No support yet for DWAA and DWAB compression during decode and\n  encode pipelines. The low-level chunk I/O still works with DWAA and\n  DWAB compressed files, but the encoder and decoder are not yet\n  included in this release.\n\n* For deep files, reading of deep data is functional, but the path for\n  encoding deep data into chunk-level data (i.e. packing and\n  compressing) is not yet complete.\n\n* For both of these deficiencies, it is easy to define a custom\n  routine to implement this, should it be needed prior to the library\n  providing full support.\n\n* No attempt to search through the file and find missing chunks is\n  made when a corrupt chunk table is encountered. However, if a\n  particular chunk is corrupt, this is handled such that the other\n  chunks may be read without rendering the context unusable\n\n### Merged Pull Requests\n\n* [1097](https://github.com/AcademySoftwareFoundation/openexr/pull/1097) Include exported OpenEXR headers with \"\" instead of <>\n* [1092](https://github.com/AcademySoftwareFoundation/openexr/pull/1092) Document current standard optional attributes\n* [1088](https://github.com/AcademySoftwareFoundation/openexr/pull/1088) First draft of rst/readthedocs for C API/OpenEXRCore\n* [1087](https://github.com/AcademySoftwareFoundation/openexr/pull/1087) Edit doxygen comments for consistency and style\n* [1086](https://github.com/AcademySoftwareFoundation/openexr/pull/1086) Simplify names, improve error messages, fix imath usage in Core\n* [1077](https://github.com/AcademySoftwareFoundation/openexr/pull/1077) Initial doxygen/sphinx/breathe/readthedocs docs\n* [1076](https://github.com/AcademySoftwareFoundation/openexr/pull/1076) Refactor deep tests to separate file, fix deep chunk reads, ripmap reading\n* [1074](https://github.com/AcademySoftwareFoundation/openexr/pull/1074) Add utility function for ease of use in other libraries\n* [1073](https://github.com/AcademySoftwareFoundation/openexr/pull/1073) Use same struct scheme as box from imath for consistency\n* [1069](https://github.com/AcademySoftwareFoundation/openexr/pull/1069) Clean up library VERSION and SOVERSION\n* [1062](https://github.com/AcademySoftwareFoundation/openexr/pull/1062) Add missing \"throw\" before InputExc in IDManifest::init()\n* [1045](https://github.com/AcademySoftwareFoundation/openexr/pull/1045) Fix #1039 The vtable for TiledRgbaInputFile was not properly tagged\n* [1038](https://github.com/AcademySoftwareFoundation/openexr/pull/1038) fix/extend part number validation in MultiPart methods\n* [1024](https://github.com/AcademySoftwareFoundation/openexr/pull/1024) Remove dead code in ImfB44Compressor.cpp\n* [1020](https://github.com/AcademySoftwareFoundation/openexr/pull/1020) Fix comparison of integer expressions of different signedness warning\n* [870](https://github.com/AcademySoftwareFoundation/openexr/pull/870) WIP: New C core\n\n## Version 3.0.5 (July 1, 2021)\n\nPatch release that fixes problems with library symlinks and\npkg-config, as well as miscellaneous bugs/security issues.\n\n* [1064](https://github.com/AcademySoftwareFoundation/openexr/pull/1064) Use CMAKE_INSTALL_FULL_LIBDIR/INCLUDEDIR in pkgconfig for 3.*\n* [1051](https://github.com/AcademySoftwareFoundation/openexr/pull/1051) Fix non-versioned library symlinks in debug build.\n* [1050](https://github.com/AcademySoftwareFoundation/openexr/pull/1050) Use CMAKE_<CONFIG>_POSTFIX for .pc file lib suffix.\n* [1045](https://github.com/AcademySoftwareFoundation/openexr/pull/1045) Fixes #1039: The vtable for TiledRgbaInputFile was not properly tagged as export \n* [1038](https://github.com/AcademySoftwareFoundation/openexr/pull/1038) fix/extend part number validation in MultiPart methods\n* [1037](https://github.com/AcademySoftwareFoundation/openexr/pull/1037) verify data size in deepscanlines with NO_COMPRESSION\n* [1036](https://github.com/AcademySoftwareFoundation/openexr/pull/1036) detect buffer overflows in RleUncompress\n* The Imath auto-build version defaults to Imath v3.0.5.\n\n## Version 3.0.4 (June 3, 2021)\n\nPatch release that corrects a problem with the release version number\nof v3.0.2/v3.0.3:\n\n* [1025](https://github.com/AcademySoftwareFoundation/openexr/pull/1025) Set OPENEXR_VERSION from OpenEXR_VERSION variables\n* [1028](https://github.com/AcademySoftwareFoundation/openexr/pull/1028) Fix break of OpenEXRConfig.h generation after PR 1025\n\n## Version 3.0.3 (May 18, 2021)\n\nPatch release that fixes a regression in v3.0.2 the prevented headers\nfrom being installed properly.\n\n## Version 3.0.2 (May 17, 2021)\n\nPatch release with miscellaneous bug/build fixes, including:\n\n* Fix TimeCode.frame max value\n* Don't impose C++14 on downstream projects\n* Restore fix to macOS universal 2 build lost from #854\n* Imath auto-build version defaults to v3.0.2\n\nSpecific OSS-fuzz issues:\n\n* OSS-fuzz [33741](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=33741) Integer-overflow in Imf_3_0::getScanlineChunkOffsetTableSize\n* OSS-fuzz [32620](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=32620) Out-of-memory in openexr_exrcheck_fuzzer\n\n### Merged Pull Requests\n\n* [1015](https://github.com/AcademySoftwareFoundation/openexr/pull/1015)  Improvements for Bazel build support                            \n* [1011](https://github.com/AcademySoftwareFoundation/openexr/pull/1011)  Restore fix to macOS universal 2 build lost from #854           \n* [1009](https://github.com/AcademySoftwareFoundation/openexr/pull/1009)  Remove test/warning about CMake version < 3.11                  \n* [1008](https://github.com/AcademySoftwareFoundation/openexr/pull/1008)  Clean up setting of OpenEXR version                             \n* [1007](https://github.com/AcademySoftwareFoundation/openexr/pull/1007)  Fix TimeCode.frame max value to be 29 instead of 59             \n* [1003](https://github.com/AcademySoftwareFoundation/openexr/pull/1003)  Prevent overflow in getScanlineChunkOffsetTableSize             \n* [1001](https://github.com/AcademySoftwareFoundation/openexr/pull/1001)  Update CHANGES and SECURITY with recent CVE's                   \n* [995](https://github.com/AcademySoftwareFoundation/openexr/pull/995)   Don't impose C++14 on downstream projects                       \n* [993](https://github.com/AcademySoftwareFoundation/openexr/pull/993)   Add STATUS message showing Imath_DIR                            \n* [992](https://github.com/AcademySoftwareFoundation/openexr/pull/992)   exrcheck -v prints OpenEXR and Imath versions and lib versions  \n* [991](https://github.com/AcademySoftwareFoundation/openexr/pull/991)   exrcheck: make readDeepTile allocate memory for just one tile   \n\n## Version 3.0.1 (April 1, 2021)\n\nMajor release with major build restructing, security improvements, and\nnew features:\n\n* Restructuring:\n  - The IlmBase/PyIlmBase submodules have been separated into the\n    Imath project, now included by OpenEXR via a CMake submodule\n    dependency, fetched automatically via CMake's FetchContent if\n    necessary.\n  - The library is now called ``libOpenEXR`` (instead of\n    ``libIlmImf``).  No header files have been renamed, they retain\n    the ``Imf`` prefix.\n  - Symbol linkage visibility is limited to specific public symbols.\n\n* Build improvements:\n  - No more simultaneous static/shared build option.\n  - Community-provided support for bazel.\n\n* New Features:\n  - ID Manifest Attributes, as described in [\"A Scheme for Storing\n    Object ID Manifests in OpenEXR\n    Images\"](https://doi.org/10.1145/3233085.3233086), Peter Hillman,\n    DigiPro 18: Proceedings of the 8th Annual Digital Production\n    Symposium, August 2018.\n  - New program: exrcheck validates the contents of an EXR file.\n\n* Changes:\n  - EXR files with no channels are no longer allowed.\n  - Hard limit on the size of deep tile sizes; tiles must be less than\n    2^30 pixels.\n  - Tiled DWAB files used STATIC_HUFFMAN compression.\n  - ``Int64`` and ``SInt64`` types are deprecated in favor of\n    ``uint64_t`` and ``int64_t``.\n  - Header files have been pruned of extraneous ``#include``'s\n    (\"Include What You Use\"), which may generate compiler errors in\n    application source code from undefined symbols or\n    partially-defined types. These can be resolved by identifying and\n    including the appropriate header.\n  - See the [porting\n    guide](https://github.com/AcademySoftwareFoundation/Imath/blob/main/docs/PortingGuide2-3.md)\n    for details about differences from previous releases and how to\n    address them.\n  - Also refer to the porting guide for details about changes to\n    Imath.\n\nContains all changes in [3.0.1-beta](#version-301-beta-march-28-2021) and [3.0.0-beta](#version-300-beta-march-16-2021).\n\n## Version 3.0.1-beta (March 28, 2021)\n\nBeta patch release:\n\n* OSS-fuzz [32370](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=32370) Out-of-memory in openexr_exrcheck_fuzzer\t([987](https://github.com/AcademySoftwareFoundation/openexr/pull/987))\n* OSS-fuzz [32067](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=32067) Out-of-memory in openexr_exrcheck_fuzzer\t([966](https://github.com/AcademySoftwareFoundation/openexr/pull/966))\n* OSS-fuzz [31172](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=31172) Timeout in openexr_exrcheck_fuzzer\t([987](https://github.com/AcademySoftwareFoundation/openexr/pull/987))\n\n### Merged Pull Requests\n\n* [989](https://github.com/AcademySoftwareFoundation/openexr/pull/989) Release notes for 3.0.1-beta\n* [988](https://github.com/AcademySoftwareFoundation/openexr/pull/988) Remove deprecated argument to getChunkOffsetTableSize()\n* [987](https://github.com/AcademySoftwareFoundation/openexr/pull/987) exrcheck: reduceMemory now checks pixel size and scanline compression mode \n* [983](https://github.com/AcademySoftwareFoundation/openexr/pull/983) Reduce warnigns reported in #982\n* [980](https://github.com/AcademySoftwareFoundation/openexr/pull/980) Bazel cherry picks\n* [979](https://github.com/AcademySoftwareFoundation/openexr/pull/979) Pin Imath version to 3.0.0-beta on RB-3.0  \n* [968](https://github.com/AcademySoftwareFoundation/openexr/pull/968) Fix typos in Int64/SInt64 deprecation warnings\n* [966](https://github.com/AcademySoftwareFoundation/openexr/pull/966) exrcheck: account for size of pixels when estimating memory\n\n## Version 3.0.0-beta (March 16, 2021)\n\nMajor release with major build restructing, security improvements, and\nnew features:\n\n* Restructuring:\n  - The IlmBase/PyIlmBase submodules have been separated into the\n    Imath project, now included by OpenEXR via a CMake submodule\n    dependency, fetched automatically via CMake's FetchContent if\n    necessary.\n  - The library is now called ``libOpenEXR`` (instead of\n    ``libIlmImf``).  No header files have been renamed, they retain\n    the ``Imf`` prefix.\n  - Symbol linkage visibility is limited to specific public\n    symbols. See [SymbolVisibility.md](docs/SymbolVisibility.md) for more\n    details.\n\n* Build improvements:\n  - No more simultaneous static/shared build option.\n  - Community-provided support for bazel.\n\n* New Features:\n  - ID Manifest Attributes, as described in [\"A Scheme for Storing\n    Object ID Manifests in OpenEXR\n    Images\"](https://doi.org/10.1145/3233085.3233086), Peter Hillman,\n    DigiPro 18: Proceedings of the 8th Annual Digital Production\n    Symposium, August 2018.\n  - New program: exrcheck validates the contents of an EXR file.\n\n* Changes:\n  - EXR files with no channels are no longer allowed.\n  - Hard limit on the size of deep tile sizes; tiles must be less than\n    2^30 pixels.\n  - Tiled DWAB files used STATIC_HUFFMAN compression.\n  - ``Int64`` and ``SInt64`` types are deprecated in favor of\n    ``uint64_t`` and ``int64_t``.\n  - Header files have been pruned of extraneous ``#include``'s\n    (\"Include What You Use\"), which may generate compiler errors in\n    application source code from undefined symbols or\n    partially-defined types. These can be resolved by identifying and\n    including the appropriate header.\n  - See the [porting\n    guide](https://github.com/AcademySoftwareFoundation/Imath/blob/main/docs/PortingGuide2-3.md)\n    for details about differences from previous releases and how to\n    address them.\n  - Also refer to the porting guide for details about changes to\n    Imath.\n\nSpecific OSS-fuzz issues addressed include:\n\n* OSS-fuzz [31539](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=31539) Out-of-memory in openexr_exrcheck_fuzzer\t([946](https://github.com/AcademySoftwareFoundation/openexr/pull/946))\n* OSS-fuzz [31390](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=31390) Out-of-memory in openexr_exrcheck_fuzzer\t([939](https://github.com/AcademySoftwareFoundation/openexr/pull/939))\n* OSS-fuzz [31293](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=31293) Segv on unknown address in Imf_2_5::copyIntoFrameBuffer\t([932](https://github.com/AcademySoftwareFoundation/openexr/pull/932))\n* OSS-fuzz [31291](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=31291) Sanitizer CHECK failure in \"((0 && \"Address is not in memory and not in shadow?\")) != (0)\" (0x0, 0x0)\t([932](https://github.com/AcademySoftwareFoundation/openexr/pull/932))\n* OSS-fuzz [31228](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=31228) Integer-overflow in bool Imf_2_5::readDeepTile<Imf_2_5::DeepTiledInputFile>\t([930](https://github.com/AcademySoftwareFoundation/openexr/pull/930))\n* OSS-fuzz [31221](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=31221) Integer-overflow in bool Imf_2_5::readDeepTile<Imf_2_5::DeepTiledInputPart>\t([930](https://github.com/AcademySoftwareFoundation/openexr/pull/930))\n* OSS-fuzz [31072](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=31072) Out-of-memory in openexr_exrcheck_fuzzer\t([928](https://github.com/AcademySoftwareFoundation/openexr/pull/928))\n* OSS-fuzz [31044](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=31044) Timeout in openexr_exrcheck_fuzzer\t([926](https://github.com/AcademySoftwareFoundation/openexr/pull/926))\n* OSS-fuzz [31015](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=31015) Direct-leak in Imf_2_5::TypedAttribute<Imf_2_5::CompressedIDManifest>::readValueFrom\t([925](https://github.com/AcademySoftwareFoundation/openexr/pull/925))\n* OSS-fuzz [30969](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=30969) Direct-leak in Imf_2_5::DwaCompressor::LossyDctDecoderBase::execute\t([923](https://github.com/AcademySoftwareFoundation/openexr/pull/923))\n* OSS-fuzz [30616](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=30616) Timeout in openexr_exrcheck_fuzzer\t([919](https://github.com/AcademySoftwareFoundation/openexr/pull/919))\n* OSS-fuzz [30605](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=30605) Out-of-memory in openexr_exrcheck_fuzzer\t([920](https://github.com/AcademySoftwareFoundation/openexr/pull/920))\n* OSS-fuzz [30249](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=30249) Out-of-memory in openexr_exrcheck_fuzzer\t([915](https://github.com/AcademySoftwareFoundation/openexr/pull/915))\n* OSS-fuzz [29682](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=29682) Out-of-memory in openexr_exrcheck_fuzzer\t([902](https://github.com/AcademySoftwareFoundation/openexr/pull/902))\n* OSS-fuzz [29393](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=29393) Timeout in openexr_exrcheck_fuzzer\t([902](https://github.com/AcademySoftwareFoundation/openexr/pull/902))\n* OSS-fuzz [28419](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=28419) Out-of-memory in openexr_exrcheck_fuzzer\t([895](https://github.com/AcademySoftwareFoundation/openexr/pull/895))\n* OSS-fuzz [28155](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=28155) Crash in Imf_2_5::PtrIStream::read\t([872](https://github.com/AcademySoftwareFoundation/openexr/pull/872))\n* OSS-fuzz [28051](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=28051) Heap-buffer-overflow in Imf_2_5::copyIntoFrameBuffer\t([872](https://github.com/AcademySoftwareFoundation/openexr/pull/872))\n* OSS-fuzz [27409](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=27409) Out-of-memory in openexr_exrcheck_fuzzer\t([863](https://github.com/AcademySoftwareFoundation/openexr/pull/863))\n* OSS-fuzz [26641](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=26641) Invalid-enum-value in readSingleImage\t([859](https://github.com/AcademySoftwareFoundation/openexr/pull/859))\n* OSS-fuzz [25648](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=25648) Out-of-memory in openexr_scanlines_fuzzer\t([839](https://github.com/AcademySoftwareFoundation/openexr/pull/839))\n* OSS-fuzz [25156](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=25156) Out-of-memory in openexr_scanlines_fuzzer\t([824](https://github.com/AcademySoftwareFoundation/openexr/pull/824))\n* OSS-fuzz [25002](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=25002) Out-of-memory in openexr_deepscanlines_fuzzer\t([824](https://github.com/AcademySoftwareFoundation/openexr/pull/824))\n* OSS-fuzz [24959](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=24959) Integer-overflow in Imf_2_5::cachePadding\t([824](https://github.com/AcademySoftwareFoundation/openexr/pull/824))\n* OSS-fuzz [24857](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=24857) Out-of-memory in openexr_exrheader_fuzzer\t([824](https://github.com/AcademySoftwareFoundation/openexr/pull/824))\n* OSS-fuzz [24573](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=24573)\tOut-of-memory in openexr_exrenvmap_fuzzer\t([824](https://github.com/AcademySoftwareFoundation/openexr/pull/824))\n\n### Merged Pull Requests\n\n* [971](https://github.com/AcademySoftwareFoundation/openexr/pull/971)  Add missing #includes in OpenEXRFuzzTest\n* [967](https://github.com/AcademySoftwareFoundation/openexr/pull/967)  3.0.0-beta release notes\n* [965](https://github.com/AcademySoftwareFoundation/openexr/pull/965)  Bump version to 3.0.0\n* [964](https://github.com/AcademySoftwareFoundation/openexr/pull/964)  Bazel-Support: Update Bazel build files to reflect CMake state\n* [963](https://github.com/AcademySoftwareFoundation/openexr/pull/963)  Properly expose header files for float exceptions\n* [962](https://github.com/AcademySoftwareFoundation/openexr/pull/962)  Remove IexMath as a library\n* [961](https://github.com/AcademySoftwareFoundation/openexr/pull/961)  Enable policy 77 if possible.\n* [960](https://github.com/AcademySoftwareFoundation/openexr/pull/960)  Still needed to push the OPENEXR_INSTALL definition higher\n* [959](https://github.com/AcademySoftwareFoundation/openexr/pull/959)  The OPENEXR_INSTALL option needs to be defined before it's used\n* [956](https://github.com/AcademySoftwareFoundation/openexr/pull/956)  Replace stray Imath:: with IMATH_NAMESPACE::\n* [955](https://github.com/AcademySoftwareFoundation/openexr/pull/955)  Usability improvements for submodule use.\n* [953](https://github.com/AcademySoftwareFoundation/openexr/pull/953)  Add GLOBAL to add_library(zlib)\n* [952](https://github.com/AcademySoftwareFoundation/openexr/pull/952)  Remove ``long`` overloads for Xdr::read and Xdr::write functions\n* [951](https://github.com/AcademySoftwareFoundation/openexr/pull/951)  Change copyright notices to standard SPDX format\n* [950](https://github.com/AcademySoftwareFoundation/openexr/pull/950)  Don't install ImfB44Compressor.h\n* [949](https://github.com/AcademySoftwareFoundation/openexr/pull/949)  Bazel build: Bump Imath version to current master\n* [948](https://github.com/AcademySoftwareFoundation/openexr/pull/948)  Replace Int64/SInt64 with uint64_t/int64_t\n* [946](https://github.com/AcademySoftwareFoundation/openexr/pull/946)  better flag/type verification in deep input files\n* [945](https://github.com/AcademySoftwareFoundation/openexr/pull/945)  Fix sign-compare warning\n* [944](https://github.com/AcademySoftwareFoundation/openexr/pull/944)  Build-time options for where to get Imath\n* [943](https://github.com/AcademySoftwareFoundation/openexr/pull/943)  Add include/OpenEXR to -I and OpenEXRUtil,Iex,IlmThread to -L\n* [942](https://github.com/AcademySoftwareFoundation/openexr/pull/942)  Resolve #882 static/shared dual build\n* [939](https://github.com/AcademySoftwareFoundation/openexr/pull/939)  enforce limit on area of deep tiles to prevent excessive memory use\n* [938](https://github.com/AcademySoftwareFoundation/openexr/pull/938)  Replace UINT_MAX with explicit cast\n* [937](https://github.com/AcademySoftwareFoundation/openexr/pull/937)  Add #include <limits> to fix Windows compile error\n* [936](https://github.com/AcademySoftwareFoundation/openexr/pull/936)  Incorporate recent config changes into BUILD.bazel\n* [932](https://github.com/AcademySoftwareFoundation/openexr/pull/932)  exrcheck: fix handling xSampling when computating slice base\n* [930](https://github.com/AcademySoftwareFoundation/openexr/pull/930)  exrcheck: use 64 bit integer math to prevent pointer overflows\n* [929](https://github.com/AcademySoftwareFoundation/openexr/pull/929)  Remove all references to \"IlmBase\"\n* [928](https://github.com/AcademySoftwareFoundation/openexr/pull/928)  exrcheck: better tile checks in reduceMemory mode\n* [926](https://github.com/AcademySoftwareFoundation/openexr/pull/926)  exrcheck: Revert to using ``getStep`` for Rgba interfaces\n* [925](https://github.com/AcademySoftwareFoundation/openexr/pull/925)  handle reallocation of idmanifest attributes\n* [923](https://github.com/AcademySoftwareFoundation/openexr/pull/923)  free up memory if DWA unRle throws\n* [921](https://github.com/AcademySoftwareFoundation/openexr/pull/921)  Only wait for and join joinable threads\n* [920](https://github.com/AcademySoftwareFoundation/openexr/pull/920)  exrcheck: check for tilesize in reduceMemory mode\n* [919](https://github.com/AcademySoftwareFoundation/openexr/pull/919)  validate size of DWA RLE buffer in decompress\n* [916](https://github.com/AcademySoftwareFoundation/openexr/pull/916)  use NO_COMPRESSION in OpenEXRTest/testBackwardCompatibility\n* [915](https://github.com/AcademySoftwareFoundation/openexr/pull/915)  exrcheck: assume lots of memory required whenever MultiPart ctor throws\n* [913](https://github.com/AcademySoftwareFoundation/openexr/pull/913)  Fixes for recent Imath deprecations\n* [911](https://github.com/AcademySoftwareFoundation/openexr/pull/911)  Prevent reading or writing OpenEXR images with no channels\n* [909](https://github.com/AcademySoftwareFoundation/openexr/pull/909)  Add idmanifest attribute support\n* [906](https://github.com/AcademySoftwareFoundation/openexr/pull/906)  expand testCompression to better test DWAA, DWAB and tiled images\n* [902](https://github.com/AcademySoftwareFoundation/openexr/pull/902)  exrcheck: rework ``reduceMemory`` and ``reduceTime`` modes\n* [899](https://github.com/AcademySoftwareFoundation/openexr/pull/899)  Change NOTICE to STATUS to address #891\n* [898](https://github.com/AcademySoftwareFoundation/openexr/pull/898)  Add support for Bazel\n* [895](https://github.com/AcademySoftwareFoundation/openexr/pull/895)  exrcheck: make reduced memory/time modes more sensitive\n* [893](https://github.com/AcademySoftwareFoundation/openexr/pull/893)  Include <limits> where required by newer compilers\n* [877](https://github.com/AcademySoftwareFoundation/openexr/pull/877)  ImfCompressor: use STATIC_HUFFMAN for tiled DWAB files (fix #344)\n* [874](https://github.com/AcademySoftwareFoundation/openexr/pull/874)  Fix missing header for Visual Studio\n* [872](https://github.com/AcademySoftwareFoundation/openexr/pull/872)  Handle xsampling and bad seekg() calls in exrcheck\n* [869](https://github.com/AcademySoftwareFoundation/openexr/pull/869)  Enable extra version tag\n* [868](https://github.com/AcademySoftwareFoundation/openexr/pull/868)  Make the default symbol visibility hidden for unixen builds\n* [864](https://github.com/AcademySoftwareFoundation/openexr/pull/864)  Remove legacy throw() specifications, conform to c++11\n* [862](https://github.com/AcademySoftwareFoundation/openexr/pull/862)  E2K: added initial support of MCST Elbrus 2000 CPU architecture\n* [859](https://github.com/AcademySoftwareFoundation/openexr/pull/859)  Invalidenum workaround\n* [858](https://github.com/AcademySoftwareFoundation/openexr/pull/858)  Merge RC-3 to master\n* [848](https://github.com/AcademySoftwareFoundation/openexr/pull/848)  Validate reconstructed chunk sizes\n* [846](https://github.com/AcademySoftwareFoundation/openexr/pull/846)  fix extra byte in DWA compressed data\n* [839](https://github.com/AcademySoftwareFoundation/openexr/pull/839)  Validate tileoffset table size\n* [828](https://github.com/AcademySoftwareFoundation/openexr/pull/828)  Address issues reported by Undefined Behavior Sanitizer running IlmImfTest\n* [824](https://github.com/AcademySoftwareFoundation/openexr/pull/824)  reduce size limit for scanline files; prevent large chunkoffset allocations\n* [819](https://github.com/AcademySoftwareFoundation/openexr/pull/819)  re-order shift/compare in FastHuf to prevent undefined shift overflow\n* [815](https://github.com/AcademySoftwareFoundation/openexr/pull/815)  cmake: Fix paths in .pc files\n* [802](https://github.com/AcademySoftwareFoundation/openexr/pull/802)  Modernize mutex\n* [796](https://github.com/AcademySoftwareFoundation/openexr/pull/796)  Initial rename of OpenEXR and IlmBase directories and seperation of Test\n* [791](https://github.com/AcademySoftwareFoundation/openexr/pull/791)  Initial removal of all Imath source files and minimal cmake adjustments\n* [769](https://github.com/AcademySoftwareFoundation/openexr/pull/769)  Bugfix/arkellr remove cvsignore files\n\n## Version 2.5.10 (December 19, 2023)\n\nPatch release that fixes a build failure on macOS prior to 10.6\n(fallback for missing `libdispatch`).\n\n### Merged Pull Requests\n\n* [1596] (https://github.com/AcademySoftwareFoundation/openexr/pull/1596)\nmacOS: use libdispatch only where available\n\n## Version 2.5.9 (July 31, 2023)\n\nPatch release that fixes a compile failure with gcc-13 gcc 13 and\nproblem with PyIlmBase's pkgconfig.\n\n### Merged Pull Requests\n\n* [1499](https://github.com/AcademySoftwareFoundation/openexr/pull/1499)\nfix build of 2.5 branch with GCC 13\n* [1253](https://github.com/AcademySoftwareFoundation/openexr/pull/1253)\nAdjust exec_prefix path for PyIlmBase's pkgconfig file\n\n## Version 2.5.8 (March 18, 2022)\n\nPatch release that backports two fixes:\n\n* [1235](https://github.com/AcademySoftwareFoundation/openexr/pull/1235) Fix MinGW build by dropping export on defaulted KeyCode::~KeyCode\n* [1061](https://github.com/AcademySoftwareFoundation/openexr/pull/1061) Use CMAKE_INSTALL_FULL_LIBDIR/INCLUDEDIR in pkgconfig\n\n## Version 2.5.7 (June 16, 2021)\n\nPatch release with security and build fixes:\n\n* OSS-fuzz [28051](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=28051) Heap-buffer-overflow in Imf_2_5::copyIntoFrameBuffer\n* OSS-fuzz [28155](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=28155) Crash in Imf_2_5::PtrIStream::read \n* Fix pkg-config lib suffix for cmake debug builds\n\n### Merged Pull Requests\n\n* [#1037](https://github.com/AcademySoftwareFoundation/openexr/pull/1037) verify data size in deepscanlines which are not compressed\n* [#1036](https://github.com/AcademySoftwareFoundation/openexr/pull/1036) detect buffer overflows in RleUncompress\n* [#1032](https://github.com/AcademySoftwareFoundation/openexr/pull/1032) Fix pkg-config lib suffix for cmake debug builds\n* [#872](https://github.com/AcademySoftwareFoundation/openexr/pull/872) Handle xsampling and bad seekg() calls in exrcheck\n\n## Version 2.5.6 (May 17, 2021)\n\nPatch release that fixes a regression in Imath::succf()/Imath::predf():\n\n* [#1013](https://github.com/AcademySoftwareFoundation/openexr/pull/1013)\nFixed regression in Imath::succf() and Imath::predf() when negative values are given\n\n## Version 2.5.5 (February 12, 2021)\n\nPatch release with various bug/sanitizer/security fixes, primarily\nrelated to reading corrupted input files, but also a fix for universal\nbuild support on macOS.\n\nSpecific OSS-fuzz issues include:\n\n* OSS-fuzz [30291](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=30291) Timeout in openexr_exrcheck_fuzzer\n* OSS-fuzz [29106](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=29106) Heap-buffer-overflow in Imf_2_5::FastHufDecoder::decode\n* OSS-fuzz [28971](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=28971) Undefined-shift in Imf_2_5::cachePadding\n* OSS-fuzz [29829](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=29829) Integer-overflow in Imf_2_5::DwaCompressor::initializeBuffers\n* OSS-fuzz [30121](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=30121) Out-of-memory in openexr_exrcheck_fuzzer\n\n### Merged Pull Requests\n\n* [914](https://github.com/AcademySoftwareFoundation/openexr/pull/914) additional verification of DWA data sizes\n* [910](https://github.com/AcademySoftwareFoundation/openexr/pull/910) update tileoffset sanitycheck to handle ripmaps\n* [903](https://github.com/AcademySoftwareFoundation/openexr/pull/903) prevent overflows by using Int64 for all vars in DWA initialize\n* [901](https://github.com/AcademySoftwareFoundation/openexr/pull/901) Use size_t for DWA buffersize calculation\n* [897](https://github.com/AcademySoftwareFoundation/openexr/pull/897) prevent overflow in RgbaFile cachePadding\n* [896](https://github.com/AcademySoftwareFoundation/openexr/pull/896) add buffer size validation to FastHuf decode\n* [893](https://github.com/AcademySoftwareFoundation/openexr/pull/893) Include <limits> where required by newer compilers\n* [889](https://github.com/AcademySoftwareFoundation/openexr/pull/889) Add explicit #include <limits> for numeric_limits\n* [854](https://github.com/AcademySoftwareFoundation/openexr/pull/854) Fix Apple Universal 2 (arm64/x86_64) builds\n \n## Version 2.5.4 (December 31, 2020)\n \nPatch release with various bug/sanitizer/security fixes, primarily\nrelated to reading corrupted input files.\n\nSecurity vulnerabilities fixed:\n\n* [CVE-2021-20296](https://nvd.nist.gov/vuln/detail/CVE-2021-20296) Segv on unknown address in Imf_2_5::hufUncompress - Null Pointer dereference\n* [CVE-2021-3479](https://nvd.nist.gov/vuln/detail/CVE-2021-3479) Out-of-memory in openexr_exrenvmap_fuzzer\n* [CVE-2021-3478](https://nvd.nist.gov/vuln/detail/CVE-2021-3478) Out-of-memory in openexr_exrcheck_fuzzer\n* [CVE-2021-3477](https://nvd.nist.gov/vuln/detail/CVE-2021-3477) Heap-buffer-overflow in Imf_2_5::DeepTiledInputFile::readPixelSampleCounts\n* [CVE-2021-3476](https://nvd.nist.gov/vuln/detail/CVE-2021-3476) Undefined-shift in Imf_2_5::unpack14\n* [CVE-2021-3475](https://nvd.nist.gov/vuln/detail/CVE-2021-3475) Integer-overflow in Imf_2_5::calculateNumTiles\n* [CVE-2021-3474](https://nvd.nist.gov/vuln/detail/CVE-2021-3474) Undefined-shift in Imf_2_5::FastHufDecoder::FastHufDecoder\n\nSpecific OSS-fuzz issues include:\n\n* OSS-fuzz [24854](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=24854) Segv on unknown address in Imf_2_5::hufUncompress\n* OSS-fuzz [24831](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=24831) Undefined-shift in Imf_2_5::FastHufDecoder::FastHufDecoder\n* OSS-fuzz [24969](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=24969) Invalid-enum-value in Imf_2_5::TypedAttribute<Imf_2_5::Envmap>::writeValueTo\n* OSS-fuzz [25297](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=25297) Integer-overflow in Imf_2_5::calculateNumTiles\n* OSS-fuzz [24787](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=24787) Undefined-shift in Imf_2_5::unpack14\n* OSS-fuzz [25326](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=25326) Out-of-memory in openexr_scanlines_fuzzer\n* OSS-fuzz [25399](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=25399) Heap-buffer-overflow in Imf_2_5::FastHufDecoder::FastHufDecoder\n* OSS-fuzz [25415](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=25415) Abrt in __cxxabiv1::failed_throw\n* OSS-fuzz [25370](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=25370) Out-of-memory in openexr_exrenvmap_fuzzer\n* OSS-fuzz [25501](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=25501) Out-of-memory in openexr_scanlines_fuzzer\n* OSS-fuzz [25505](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=25505) Heap-buffer-overflow in Imf_2_5::copyIntoFrameBuffer\n* OSS-fuzz [25562](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=25562) Integer-overflow in Imf_2_5::hufUncompress\n* OSS-fuzz [25740](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=25740) Null-dereference READ in Imf_2_5::Header::operator\n* OSS-fuzz [25743](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=25743) Null-dereference in Imf_2_5::MultiPartInputFile::header\n* OSS-fuzz [25913](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=25913) Out-of-memory in openexr_exrenvmap_fuzzer\n* OSS-fuzz [26229](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=26229) Undefined-shift in Imf_2_5::hufDecode\n* OSS-fuzz [26658](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=26658) Out-of-memory in openexr_scanlines_fuzzer\n* OSS-fuzz [26956](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=26956) Heap-buffer-overflow in Imf_2_5::DeepTiledInputFile::readPixelSampleCounts\n* OSS-fuzz [27409](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=27409) Out-of-memory in openexr_exrcheck_fuzzer\n* OSS-fuzz [25892](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=25892) Divide-by-zero in Imf_2_5::calculateNumTiles\n* OSS-fuzz [25894](https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=25894) Floating-point-exception in Imf_2_5::precalculateTileInfo\n\n### Merged Pull Requests\n\n* [817](https://github.com/AcademySoftwareFoundation/openexr/pull/817) double-check unpackedBuffer created in DWA uncompress (OSS-fuzz 24854)\n* [818](https://github.com/AcademySoftwareFoundation/openexr/pull/818) compute Huf codelengths using 64 bit to prevent shift overrflow (OSS-fuzz 24831)\n* [820](https://github.com/AcademySoftwareFoundation/openexr/pull/820) suppress sanitizer warnings when writing invalid enums (OSS-fuzz 24969)\n* [825](https://github.com/AcademySoftwareFoundation/openexr/pull/825) Avoid overflow in calculateNumTiles when size=MAX_INT (OSS-fuzz 25297)\n* [826](https://github.com/AcademySoftwareFoundation/openexr/pull/826) restrict maximum tile size to INT_MAX byte limit (OSS-fuzz 25297)\n* [832](https://github.com/AcademySoftwareFoundation/openexr/pull/832) ignore unused bits in B44 mode detection (OSS-fuzz 24787)\n* [827](https://github.com/AcademySoftwareFoundation/openexr/pull/827) lighter weight reading of Luma-only images via RgbaInputFile (OSS-fuzz 25326)\n* [829](https://github.com/AcademySoftwareFoundation/openexr/pull/829) fix buffer overflow check in PIZ decompression (OSS-fuzz 25399, OSS-fuzz 25415)\n* [830](https://github.com/AcademySoftwareFoundation/openexr/pull/830) refactor channel filling in InputFile API with tiled source (OSS-fuzz 25370 , OSS-fuzz 25501)\n* [831](https://github.com/AcademySoftwareFoundation/openexr/pull/831) Use Int64 in dataWindowForTile to prevent integer overflow (OSS-fuzz 25505)\n* [836](https://github.com/AcademySoftwareFoundation/openexr/pull/836) prevent overflow in hufUncompress if nBits is large (OSS-fuzz 25562)\n* [840](https://github.com/AcademySoftwareFoundation/openexr/pull/840) add sanity check for reading multipart files with no parts (OSS-fuzz 25740 , OSS-fuzz 25743)\n* [841](https://github.com/AcademySoftwareFoundation/openexr/pull/841) more elegant exception handling in exrmaketiled (ZhiWei Sun from Topsec Alpha Lab)\n* [843](https://github.com/AcademySoftwareFoundation/openexr/pull/843) reduce B44 _tmpBufferSize (was allocating two bytes per byte) (OSS-fuzz 25913)\n* [844](https://github.com/AcademySoftwareFoundation/openexr/pull/844) check EXRAllocAligned succeeded to allocate ScanlineInputFile lineBuffers (ZhiWei Sun from Topsec Alpha Lab)\n* [845](https://github.com/AcademySoftwareFoundation/openexr/pull/845) test channels are DCT compressed before DWA decompression (ZhiWei Sun from Topsec Alpha Lab)\n* [849](https://github.com/AcademySoftwareFoundation/openexr/pull/849) check for valid Huf code lengths (OSS-fuzz 26229)\n* [860](https://github.com/AcademySoftwareFoundation/openexr/pull/860) check 1 part files with ``nonimage`` bit have type attribute (OSS-fuzz 26658)\n* [861](https://github.com/AcademySoftwareFoundation/openexr/pull/861) Fix overflow computing deeptile sample table size (OSS-fuzz 26956)\n* [863](https://github.com/AcademySoftwareFoundation/openexr/pull/863) re-order shift/compare in FastHuf to prevent undefined shift overflow (OSS-fuzz 27409)\n* Also, partial fixes from [842](https://github.com/AcademySoftwareFoundation/openexr/pull/842) which do not change the ABI: (OSS-fuzz 25892 , OSS-fuzz 25894)\n\n### Commits \\[ git log v2.5.3...v2.5.4\\]\n\n* [0c2b46f6](https://github.com/AcademySoftwareFoundation/openexr/commit/0c2b46f630a3b5f2f561c2849d047ee39f899179) Cherry-pick PRs from master branch which fix issues reported by fuzz tests (#875) ([peterhillman](@peterh@wetafx.co.nz) 2020-12-31)\n\n## Version 2.5.3 (August 12, 2020)\n\nPatch release with various bug/security fixes and build/install fixes, plus a performance optimization:\n\n### Summary\n\n* Various sanitizer/fuzz-identified issues related to handling of invalid input\n* Fixes to misc compiler warnings\n* Cmake fix for building on arm64 macOS (#772)\n* Read performance optimization (#782)\n* Fix for building on non-glibc (#798)\n* Fixes to tests\n\n### Merged Pull Requests\n\n* [812](https://github.com/AcademySoftwareFoundation/openexr/pull/812) free memory if precalculateTileInfo throws\n* [809](https://github.com/AcademySoftwareFoundation/openexr/pull/809) Avoid integer overflow in calculateNumTiles()\n* [806](https://github.com/AcademySoftwareFoundation/openexr/pull/806) suppress clang undefined behavior sanitizer in EnvmapAttribute::copyValuesFrom()\n* [805](https://github.com/AcademySoftwareFoundation/openexr/pull/805) remove extraneous vector allocation in getScanlineChunkOffsetTableSize \n* [804](https://github.com/AcademySoftwareFoundation/openexr/pull/804) prevent invalid tile description enums\n* [803](https://github.com/AcademySoftwareFoundation/openexr/pull/803) Fix stack corruption in Matrix tests\n* [801](https://github.com/AcademySoftwareFoundation/openexr/pull/801) prevent invalid Compression enum values being read from file\n* [798](https://github.com/AcademySoftwareFoundation/openexr/pull/798) IexMathFpu.cpp: Fix build on non-glibc (e.g. musl libc)\n* [795](https://github.com/AcademySoftwareFoundation/openexr/pull/795) prevent invalid values in LineOrder enum\n* [794](https://github.com/AcademySoftwareFoundation/openexr/pull/794) suppress clang undefined behavior sanitizer in DeepImageStateAttribute::copyValuesFrom()\n* [793](https://github.com/AcademySoftwareFoundation/openexr/pull/793) sanityCheckDisplayWindow() ensures that width and height don't cause integer overflow\n* [792](https://github.com/AcademySoftwareFoundation/openexr/pull/792) cast signed chars to unsigned longs before left shift in Xdr::read of signed long\n* [788](https://github.com/AcademySoftwareFoundation/openexr/pull/788) use 64 bit computation in chunk offset table reconstruction\n* [787](https://github.com/AcademySoftwareFoundation/openexr/pull/787) change sanity check in stringvectorattribute to prevent overflow\n* [785](https://github.com/AcademySoftwareFoundation/openexr/pull/785) prevent invalid values in Channel's PixelType enum\n* [784](https://github.com/AcademySoftwareFoundation/openexr/pull/784) sanity check preview attribute sizes\n* [783](https://github.com/AcademySoftwareFoundation/openexr/pull/783) explicitly cast signed chars to unsigned before bitwise left shift in Xdr::read()\n* [782](https://github.com/AcademySoftwareFoundation/openexr/pull/782) refactor: use local loop variable in copyFromFrameBuffer\n* [778](https://github.com/AcademySoftwareFoundation/openexr/pull/778) Sanity check stringvector size fields on read\n* [777](https://github.com/AcademySoftwareFoundation/openexr/pull/777) IlmImfFuzzTest reports incorrect test names and missing files as errors\n* [775](https://github.com/AcademySoftwareFoundation/openexr/pull/775) Removes overridden find_package in CMakeLists.txt\n* [772](https://github.com/AcademySoftwareFoundation/openexr/pull/772) Disable OPENEXR_IMF_HAVE_GCC_INLINE_ASM_AVX when building on arm64 macOS\n* [770](https://github.com/AcademySoftwareFoundation/openexr/pull/770) IlmImf: Fix clang compiler warnings\n* [738](https://github.com/AcademySoftwareFoundation/openexr/pull/738) always ignore chunkCount attribute unless it cannot be computed #738\n\n### Commits \\[ git log v2.5.2...v2.5.3\\]\n\n* [``425c104f``](https://github.com/AcademySoftwareFoundation/openexr/commit/425c104f7ae9e8e17cc3d9d120d684b93195c402) free memory if precalculateTileInfo throws ([Peter Hillman](@peterh@wetafx.co.nz) 2020-08-10)\n* [``7212e337``](https://github.com/AcademySoftwareFoundation/openexr/commit/7212e33729e036d16fb5fd3494af815869771963) Set LIBTOOL_VERSION to 25:2:0 for 2.5.3 ([Cary Phillips](@cary@ilm.com) 2020-08-09)\n* [``0b6d5185``](https://github.com/AcademySoftwareFoundation/openexr/commit/0b6d5185d99bff1c4ab7b2fe00d297ef2fcd46e8) Release notes for 2.5.3 ([Cary Phillips](@cary@ilm.com) 2020-08-09)\n* [``6b55722b``](https://github.com/AcademySoftwareFoundation/openexr/commit/6b55722b4477e8d4aed04fbeb6b9f5b4226d2bbd) Bump version to 2.5.3 and LIBTOOL_CURRENT to 26 ([Cary Phillips](@cary@ilm.com) 2020-08-09)\n* [``40a7ed76``](https://github.com/AcademySoftwareFoundation/openexr/commit/40a7ed76cde1427aa6c935565de96f7ee10d9f76) Change >= to > in overflow calculation ([Cary Phillips](@cary@ilm.com) 2020-08-08)\n* [``b10412d5``](https://github.com/AcademySoftwareFoundation/openexr/commit/b10412d55964459e04ff95f982fd8ce2ded4ea43) Avoid integer overflow in calculateNumTiles() ([Cary Phillips](@cary@ilm.com) 2020-08-08)\n* [``ed469311``](https://github.com/AcademySoftwareFoundation/openexr/commit/ed469311ac17a8912e2c4cb14856aa2b7f228fac) reformatted references to CVEs in CHANGES.md ([Cary Phillips](@cary@ilm.com) 2020-07-07)\n* [``f7c8a7a1``](https://github.com/AcademySoftwareFoundation/openexr/commit/f7c8a7a11a69579d8618f31d0e4a1b7bcc20e939) Add references to CVE-2020-15304, CVE-2020-15305, CVE-2020-15306 to SECURITY.md and CHANGES.md ([Cary Phillips](@cary@ilm.com) 2020-07-07)\n* [``0d226001``](https://github.com/AcademySoftwareFoundation/openexr/commit/0d22600163f58c4e3ca20b9f67bd2fe7866e9201) Add #755 to 2.4.2 release notes ([Cary Phillips](@cary@ilm.com) 2020-06-13)\n* [``4a4a4f4a``](https://github.com/AcademySoftwareFoundation/openexr/commit/4a4a4f4a58a5d34a132655cc82116a383d787e5d) Improved formatting of commits in release notes ([Cary Phillips](@cary@ilm.com) 2020-06-11)\n* [``9c42766b``](https://github.com/AcademySoftwareFoundation/openexr/commit/9c42766bd0347dccb84a68977d11fab8cc83ae3c) added merged PR's to v2.4.2 release notes. ([Cary Phillips](@cary@ilm.com) 2020-06-11)\n* [``cc1809ed``](https://github.com/AcademySoftwareFoundation/openexr/commit/cc1809ed27aed48c54cfb730c90bdf570bb18551) Release notes for v2.4.2 ([Cary Phillips](@cary@ilm.com) 2020-06-11)\n* [``7fe8d40d``](https://github.com/AcademySoftwareFoundation/openexr/commit/7fe8d40db0c2c02da5f7d2a602fb87a630c3c70d) Remove non-code-related PR's and commits from v2.5.2 release notes. ([Cary Phillips](@cary@ilm.com) 2020-06-11)\n* [``bc0b229c``](https://github.com/AcademySoftwareFoundation/openexr/commit/bc0b229c5618ffdc6337817898e3d145b6854194) add commit history to release notes for v2.5.1 and v2.5.2 ([Cary Phillips](@cary@ilm.com) 2020-06-11)\n* [``ba76b8ca``](https://github.com/AcademySoftwareFoundation/openexr/commit/ba76b8ca62c2f1d4ccabd2887dc8d09c69102c2f) always ignore chunkCount attribute unless it cannot be computed (#738) ([peterhillman](@peterh@wetafx.co.nz) 2020-05-27)\n* [``81818f2a``](https://github.com/AcademySoftwareFoundation/openexr/commit/81818f2a9c9336d71b65b194aaecdef493e9122b) suppress clang undefined behavior sanitizer in EnvmapAttribute::copyValuesFrom() ([Peter Hillman](@peterh@wetafx.co.nz) 2020-08-07)\n* [``2f83442f``](https://github.com/AcademySoftwareFoundation/openexr/commit/2f83442f067788751ce857effa3472bf4f79f743) allow undefined EnvMap enum values for future proofing ([Peter Hillman](@peterh@wetafx.co.nz) 2020-08-07)\n* [``485b5fe4``](https://github.com/AcademySoftwareFoundation/openexr/commit/485b5fe4d6e575b4af389af98d7a3a2104ce828b) remove extraneous vector allocation in getScanlineChunkOffsetTableSize ([Peter Hillman](@peterh@wetafx.co.nz) 2020-08-06)\n* [``7da32d3c``](https://github.com/AcademySoftwareFoundation/openexr/commit/7da32d3ccf6d4eace88ffad093f692a4287b2fbf) refactor: use local loop variable in copyFromFrameBuffer ([Gyula Gubacsi](@gyula.gubacsi@foundry.com) 2020-07-14)\n* [``1ecaf4bd``](https://github.com/AcademySoftwareFoundation/openexr/commit/1ecaf4bdfa00204e17aa2a0f51d1ca7d672a9303) prevent invalid tile description enums ([Peter Hillman](@peterh@wetafx.co.nz) 2020-08-05)\n* [``88420f93``](https://github.com/AcademySoftwareFoundation/openexr/commit/88420f93857eb2a892683a8a212472883abc8476) prevent invalid Compression enum values being read from file ([Peter Hillman](@peterh@wetafx.co.nz) 2020-07-31)\n* [``90736089``](https://github.com/AcademySoftwareFoundation/openexr/commit/90736089eb2c51cfdc311de9b5acc337e4a4c49a) Fix out of bounds assignments ([Darby Johnston](@darbyjohnston@yahoo.com) 2020-08-01)\n* [``9752e70d``](https://github.com/AcademySoftwareFoundation/openexr/commit/9752e70d31193f649eb5286bb649916ecfcc51ea) IexMathFpu.cpp: Fix build on non-glibc (e.g. musl libc). ([Niklas Hambüchen](@mail@nh2.me) 2020-07-30)\n* [``37e16a88``](https://github.com/AcademySoftwareFoundation/openexr/commit/37e16a88db863da9feeadc721d8df86118c5aab5) cast signed chars to unsigned longs before left shift in read of signed long ([Cary Phillips](@cary@ilm.com) 2020-07-17)\n* [``02e1ac54``](https://github.com/AcademySoftwareFoundation/openexr/commit/02e1ac54368ef40e493a67d6804bc706e1bd52db) suppress clang undefined behavior sanitizer in DeepImageStateAttribute::copyValuesFrom() ([Cary Phillips](@cary@ilm.com) 2020-07-22)\n* [``bf3edf27``](https://github.com/AcademySoftwareFoundation/openexr/commit/bf3edf271a638e95120c83cbd794502b55f1c64e) fixed CI and Analysis badges in README.md ([Cary Phillips](@cary@ilm.com) 2020-07-16)\n* [``93e9f2ac``](https://github.com/AcademySoftwareFoundation/openexr/commit/93e9f2ac3212353414a4e65eb359bcd6dbe7fe6f) prevent invalid values in LineOrder enum ([Cary Phillips](@cary@ilm.com) 2020-07-22)\n* [``6bb6257f``](https://github.com/AcademySoftwareFoundation/openexr/commit/6bb6257ffb24f375dfcc40568bfd6357dd6028f8) fixed comment ([Cary Phillips](@cary@ilm.com) 2020-07-20)\n* [``1a1e13fd``](https://github.com/AcademySoftwareFoundation/openexr/commit/1a1e13fd8579900ee9f05c3c12bdf2b2aa994593) sanityCheckDisplayWindow() ensures that width and height don't cause integer overflow ([Cary Phillips](@cary@ilm.com) 2020-07-20)\n* [``45e14fdf``](https://github.com/AcademySoftwareFoundation/openexr/commit/45e14fdf0700b7afdb94ea7bb788ba9a162d04d7) IlmImfFuzzTest reports incorrect test names and missing files as errors rather than silently succeeding. ([Cary Phillips](@cary@ilm.com) 2020-07-09)\n* [``a6bc10f5``](https://github.com/AcademySoftwareFoundation/openexr/commit/a6bc10f5f28c19b8338eb2c6c7226bb6408554f7) use ll in chunk size computation ([Peter Hillman](@peterh@wetafx.co.nz) 2020-07-17)\n* [``c6058144``](https://github.com/AcademySoftwareFoundation/openexr/commit/c6058144b653c8ded2e8c0cf0709186486b2453d) use 64 bit computation in chunkoffsettable reconstruction ([Peter Hillman](@peterh@wetafx.co.nz) 2020-07-17)\n* [``b33b1187``](https://github.com/AcademySoftwareFoundation/openexr/commit/b33b1187342ff76da08fc7a3ef848b937d7374a3) prevent invalid values in Channel's PixelType enum ([Peter Hillman](@peterh@wetafx.co.nz) 2020-07-16)\n* [``b7b8a568``](https://github.com/AcademySoftwareFoundation/openexr/commit/b7b8a5685c0db270b4671ef78c388e3a89605e85) change sanity check in stringvectorattribute to prevent overflow (#787) ([peterhillman](@peterh@wetafx.co.nz) 2020-07-17)\n* [``09eadd12``](https://github.com/AcademySoftwareFoundation/openexr/commit/09eadd12d86763fda854b36524ae37680d8ff4c5) cast signed chars to unsigned before bitwise left shift in Xdr::read() ([Cary Phillips](@cary@ilm.com) 2020-07-14)\n* [``3cf874cb``](https://github.com/AcademySoftwareFoundation/openexr/commit/3cf874cbbd23d945a0057f10145bd5f3ce2be679) sanity check preview attribute sizes ([Peter Hillman](@peterh@wetafx.co.nz) 2020-07-15)\n* [``849c6776``](https://github.com/AcademySoftwareFoundation/openexr/commit/849c6776f6627a11710227c026dd4aa6de8f7738) Tidy whitespace in ImfStringVectorAttribute.cpp ([peterhillman](@peterh@wetafx.co.nz) 2020-07-10)\n* [``fcaa1691``](https://github.com/AcademySoftwareFoundation/openexr/commit/fcaa1691071f90df9202818315f4f9d1bc13c54e) sanity check string vectors on read ([Peter Hillman](@peterh@wetafx.co.nz) 2020-07-10)\n* [``0d13c74a``](https://github.com/AcademySoftwareFoundation/openexr/commit/0d13c74a3bfa497465c3e42847b9c62089f0454b) Removes overridden find_package in CMakeLists.txt in favor of reusing the generated config files and setting (IlmBase/OpenEXR)_DIR variables Overriding a cmake function is undocumented functionallity and only works one time. Better to avoid if possible. ([Peter Steneteg](@peter@steneteg.se) 2020-06-17)\n* [``1343c08a``](https://github.com/AcademySoftwareFoundation/openexr/commit/1343c08a7eb13764bbb6c21db22e5a78169754db) Cast to uintptr_t instead of size_t for mask ops on ptrs. ([Arkell Rasiah](@arasiah@pixsystem.com) 2020-06-25)\n* [``72de4c9e``](https://github.com/AcademySoftwareFoundation/openexr/commit/72de4c9ef32e2e9eb4e6d9499a0fadb96ae28796) Switching to current c++ casting style. ([Arkell Rasiah](@arasiah@pixsystem.com) 2020-06-24)\n* [``9534e36d``](https://github.com/AcademySoftwareFoundation/openexr/commit/9534e36d1d1993db7a7cc3ba4c58ec4d7a4a8dd5) IlmImf: Fix misc compiler warnings. ([Arkell Rasiah](@arkellrasiah@gmail.com) 2020-06-23)\n* [``8e53ab8d``](https://github.com/AcademySoftwareFoundation/openexr/commit/8e53ab8d13b1b6c14c716573e6f16d079e799ab4) Disable OPENEXR_IMF_HAVE_GCC_INLINE_ASM_AVX when building on arm64 macOS ([Yining Karl Li](@betajippity@gmail.com) 2020-07-03)\n* [``67b1b88d``](https://github.com/AcademySoftwareFoundation/openexr/commit/67b1b88de6ad454a1b267ee9a4e19b4efbdbe19d) Addresses PR#767: Removal of legacy .cvsignore files. ([Arkell Rasiah](@arkellrasiah@gmail.com) 2020-06-19)\n* [``801e5d87``](https://github.com/AcademySoftwareFoundation/openexr/commit/801e5d8750dd8b8a6e25c131899136c575b20d07) Fix typo in README ([cia-rana](@kiwamura0314@gmail.com) 2020-06-15)\n\n## Version 2.5.2 (June 15, 2020)\n\nPatch release with various bug/security fixes and build/install fixes.\n\n### Summary\n\n* [CVE-2020-15305](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15305) Invalid input could cause a heap-use-after-free error in DeepScanLineInputFile::DeepScanLineInputFile() \n* [CVE-2020-15306](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15306) Invalid chunkCount attributes could cause heap buffer overflow in getChunkOffsetTableSize() \n* [CVE-2020-15304](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15304) Invalid tiled input file could cause invalid memory access TiledInputFile::TiledInputFile() \n* OpenEXRConfig.h now correctly sets OPENEXR_PACKAGE_STRING to \"OpenEXR\" (rather than \"IlmBase\") \n* Various Windows build fixes\n\n### Merged Pull Requests\n\n* [755](https://github.com/AcademySoftwareFoundation/openexr/pull/755) Fix OPENEXR_PACKAGE_NAME\n* [747](https://github.com/AcademySoftwareFoundation/openexr/pull/747) Fix the PyIlmBase tests for the autotools build\n* [743](https://github.com/AcademySoftwareFoundation/openexr/pull/743) Applies OPENEXR_DLL only to shared libraries and no longer to static libraries\n* [742](https://github.com/AcademySoftwareFoundation/openexr/pull/742) Removes symlink creation under Windows\n* [738](https://github.com/AcademySoftwareFoundation/openexr/pull/738) always ignore chunkCount attribute unless it cannot be computed\n* [733](https://github.com/AcademySoftwareFoundation/openexr/pull/733) added missing PyImathMatrix22.cpp to Makefile.am, for the autotools build\n* [730](https://github.com/AcademySoftwareFoundation/openexr/pull/730) fix #728 - missing 'throw' in deepscanline error handling\n* [727](https://github.com/AcademySoftwareFoundation/openexr/pull/727) check null pointer in broken tiled file handling\n\n### Commits \\[ git log v2.5.1...v2.5.2\\]\n\n* [``6f0d14d5``](https://github.com/AcademySoftwareFoundation/openexr/commit/6f0d14d576b6c2d3931f2c444b994207bc4bbc44) bump version to 2.5.2 ([Cary Phillips](@cary@ilm.com) 2020-06-11)\n* [``162fe820``](https://github.com/AcademySoftwareFoundation/openexr/commit/162fe82092188fd172cba26af0deec3b0a95a4fa) Fix OPENXR_PACKAGE_NAME ([Cary Phillips](@cary@ilm.com) 2020-06-10)\n* [``58e96f53``](https://github.com/AcademySoftwareFoundation/openexr/commit/58e96f534cd42bf9ee59725aadbf5d3b25d041fe) removed commented out lines in Makefile.am ([Cary Phillips](@cary@ilm.com) 2020-05-28)\n* [``6c82409e``](https://github.com/AcademySoftwareFoundation/openexr/commit/6c82409e14f415d460a3318dc9848f0c266f1215) Fix PyImathTest, PyImathNumpyTest, PyIexTest to work in the autotools build. ([Cary Phillips](@cary@ilm.com) 2020-05-28)\n* [``248abc23``](https://github.com/AcademySoftwareFoundation/openexr/commit/248abc23d134705bc41d167dcc04fafae231409c) Fix OPENEXR_DLL on test applications ([Transporter](@ogre.transporter@gmail.com) 2020-05-29)\n* [``ccf91b95``](https://github.com/AcademySoftwareFoundation/openexr/commit/ccf91b95b662d97b0cd8b9d87fd3eb4f5d70e880) Applies OPENEXR_DLL only to shared libraries and no longer to static libraries ([Transporter](@ogre.transporter@gmail.com) 2020-05-26)\n* [``c8f2463a``](https://github.com/AcademySoftwareFoundation/openexr/commit/c8f2463a910da90640d13d325ef689160d17ffe9) Removes symlink creation under Windows ([Transporter](@ogre.transporter@gmail.com) 2020-05-26)\n* [``78274436``](https://github.com/AcademySoftwareFoundation/openexr/commit/782744364aa92d02add62f38bc29ae2ce2c743e9) added missing PyImathMatrix22.cpp to Makefile.am, for the autotools build. ([Cary Phillips](@cary@ilm.com) 2020-05-19)\n* [``30349291``](https://github.com/AcademySoftwareFoundation/openexr/commit/303492919aa1cc39fb0c3d34d96b9f0090d3bdac) fix memory leak in deep scanline IlmImfFuzzTest ([Peter Hillman](@peterh@wetafx.co.nz) 2020-05-16)\n* [``21014549``](https://github.com/AcademySoftwareFoundation/openexr/commit/21014549c2728049abe273a719c3fca074234799) fix memory leak in deep scanline IlmImfFuzzTest ([Peter Hillman](@peterh@wetafx.co.nz) 2020-05-16)\n* [``07e93a3d``](https://github.com/AcademySoftwareFoundation/openexr/commit/07e93a3de1200355c1c32e2c4cc15ec87e312602) check null pointer in broken tiled file handling ([Peter Hillman](@peterh@wetafx.co.nz) 2020-05-16)\n* [``d8741bcc``](https://github.com/AcademySoftwareFoundation/openexr/commit/d8741bccbcc5e68cc4fac3cb11f08c655e6553fc) fix #728 - missing 'throw' in deepscanline error handling ([Peter Hillman](@peterh@wetafx.co.nz) 2020-05-19)\n\n## Version 2.5.1 (May 11, 2020)\n\nA patch release that corrects the SO version for the v2.5 release,\nwhich missed getting bumped in v2.5.0.\n\nThis release also fixes an improper failure in IlmImfTest when running\non ARMv7 and AAarch64.\n\n### Merged Pull Requests\n\n* [717](https://github.com/AcademySoftwareFoundation/openexr/pull/717) Fix #713: cast to unsigned in testHuf checksum\n* [714](https://github.com/AcademySoftwareFoundation/openexr/pull/714) Bump the SO version to 25 for the 2.5 release\n\n### Commits \\[ git log v2.5.0...v2.5.1\\]\n\n* [``e823bf28``](https://github.com/AcademySoftwareFoundation/openexr/commit/e823bf282882d02e8ad1c7f6ca867807e1fd6044) Fix #713: cast to unsigned in testHuf checksum (#717) ([peterhillman](@peterh@wetafx.co.nz) 2020-05-10)\n* [``5670325e``](https://github.com/AcademySoftwareFoundation/openexr/commit/5670325ea2f44c2b4d4764b151b7570181bd280b) Bump the version to 2.5.1 on the RB-2.5 branch ([Cary Phillips](@cary@ilm.com) 2020-05-09)\n* [``d944ffac``](https://github.com/AcademySoftwareFoundation/openexr/commit/d944fface105c79fc4a34a4aa4bc1be39d5aabbc) set LIBTOOL_REVISION=0 for the 2.5 release. ([Cary Phillips](@cary@ilm.com) 2020-05-09)\n* [``3ec82975``](https://github.com/AcademySoftwareFoundation/openexr/commit/3ec82975243d83e2732da7b7cbdc08f87f30609c) Bump SO version to 25 for the 2.5 release. ([Cary Phillips](@cary@ilm.com) 2020-05-09)\n\n## Version 2.5.0 (May 6, 2020)\n\nMinor release with miscellaneous bug fixes and small features\n\n### Summary\n\n* No more build-time header generation: toFloat.h, eLut.h,\n  b44ExpLogTable.h, and dwaLookups.h are now ordinary header files, no\n  longer generated on the fly.\n* New StdISSTream class, an \"input\" stringstream version of StdOSStream\n* New Matrix22 class in Imath\n* Chromaticity comparison operator now includes white (formerly ignored)\n* Various cmake fixes\n* Bug fixes for various memory leaks\n* Bug fixes for various invalid memory accesses\n* New checks to detect damaged input files\n* OpenEXR_Viewers has been deprecated, removed from the top-level\n  cmake build and documentation.\n\n### Merged Pull Requests\n\n* [712](https://github.com/AcademySoftwareFoundation/openexr/pull/712) Removed #include PyIlmBaseConfigInternal.h from all public .h files.\n* [711](https://github.com/AcademySoftwareFoundation/openexr/pull/711) Rewrote testToFloat(). \n* [709](https://github.com/AcademySoftwareFoundation/openexr/pull/709) Fix clean pthreads strikes back\n* [708](https://github.com/AcademySoftwareFoundation/openexr/pull/708) Fix clean pthreads\n* [707](https://github.com/AcademySoftwareFoundation/openexr/pull/707) A clean version of #673: Allow the use of Pthreads with WIN32/64 \n* [705](https://github.com/AcademySoftwareFoundation/openexr/pull/705) added recent commits and PR's to 2.5.0 release notes \n* [704](https://github.com/AcademySoftwareFoundation/openexr/pull/704) fixed typos in README.md\n* [703](https://github.com/AcademySoftwareFoundation/openexr/pull/703) Release notes for 2.2.2\n* [702](https://github.com/AcademySoftwareFoundation/openexr/pull/702) bump version on the 2.2 branch to 2.2.2\n* [700](https://github.com/AcademySoftwareFoundation/openexr/pull/700) Patch fixes for CVE-2020-* from commit e79d229 into release/2.2\n* [699](https://github.com/AcademySoftwareFoundation/openexr/pull/699) Bump version to 2.5.0\n* [698](https://github.com/AcademySoftwareFoundation/openexr/pull/698) Fix to make Boost_NO_BOOST_CMAKE a cache variable\n* [697](https://github.com/AcademySoftwareFoundation/openexr/pull/697) Fix python module install on macOS\n* [696](https://github.com/AcademySoftwareFoundation/openexr/pull/696) TSC meeting notes 4-23-20\n* [694](https://github.com/AcademySoftwareFoundation/openexr/pull/694) TSC meeting notes 4-16-20\n* [693](https://github.com/AcademySoftwareFoundation/openexr/pull/693) Update the release notes and security notices with 2020 CVE's\n* [692](https://github.com/AcademySoftwareFoundation/openexr/pull/692) Meetings 4.2.20\n* [690](https://github.com/AcademySoftwareFoundation/openexr/pull/690) Implementation of Matrix22\n* [685](https://github.com/AcademySoftwareFoundation/openexr/pull/685) Fix libc++abi.dylib: Pure virtual function called!\n* [683](https://github.com/AcademySoftwareFoundation/openexr/pull/683) Typo in INSTALL.md: cmake now builds three modules, not four.\n* [682](https://github.com/AcademySoftwareFoundation/openexr/pull/682) TSC meeting notes 2020 03 05\n* [680](https://github.com/AcademySoftwareFoundation/openexr/pull/680) fixed a/an use in Matrix33 and Matrix44\n* [676](https://github.com/AcademySoftwareFoundation/openexr/pull/676) Remove OpenEXR_Viewers from the cmake build files and from INSTALL.md\n* [675](https://github.com/AcademySoftwareFoundation/openexr/pull/675) TSC meeting notes for 2/27/2020\n* [672](https://github.com/AcademySoftwareFoundation/openexr/pull/672) Fix cmake install failing when install dir contains spaces, fix symlinks for shared libraries on DLL platforms\n* [669](https://github.com/AcademySoftwareFoundation/openexr/pull/669) CLA docs moved from \"docs\" to \"contributors\"\n* [667](https://github.com/AcademySoftwareFoundation/openexr/pull/667) TSC meeting notes 2/20/2020\n* [666](https://github.com/AcademySoftwareFoundation/openexr/pull/666) ImfChromaticities.cpp: Add back white to equality ops.\n* [662](https://github.com/AcademySoftwareFoundation/openexr/pull/662) support reloading broken files with IlmImfFuzzTest\n* [661](https://github.com/AcademySoftwareFoundation/openexr/pull/661) fix unitialized pointer and double-delete bugs\n* [660](https://github.com/AcademySoftwareFoundation/openexr/pull/660) exrdisplay: limit maximum image size based on available screen res\n* [659](https://github.com/AcademySoftwareFoundation/openexr/pull/659) fix memory leaks and invalid memory accesses\n* [658](https://github.com/AcademySoftwareFoundation/openexr/pull/658) Fix yet more memory leaks from constructor exceptions\n* [657](https://github.com/AcademySoftwareFoundation/openexr/pull/657) Release notes for 2.4.1 patch release.\n* [656](https://github.com/AcademySoftwareFoundation/openexr/pull/656) fix crash with damaged EXR files\n* [655](https://github.com/AcademySoftwareFoundation/openexr/pull/655) Notes 2020 02 06\n* [653](https://github.com/AcademySoftwareFoundation/openexr/pull/653) fix memory leak from constructor exceptions\n* [650](https://github.com/AcademySoftwareFoundation/openexr/pull/650) ImfAcesFile.cpp: Fix primary conversion edge case.\n* [649](https://github.com/AcademySoftwareFoundation/openexr/pull/649) ImfChromaticities.h/cpp: Typo and pass by ref change.\n* [647](https://github.com/AcademySoftwareFoundation/openexr/pull/647) fix typo and ref to theory document in InterpretingDeepPixels\n* [645](https://github.com/AcademySoftwareFoundation/openexr/pull/645) Various CI Updates:\n* [643](https://github.com/AcademySoftwareFoundation/openexr/pull/643) Various checks to improve handling of damaged input files\n* [642](https://github.com/AcademySoftwareFoundation/openexr/pull/642) Fixed security email address to security@openexr.org\n* [641](https://github.com/AcademySoftwareFoundation/openexr/pull/641) Updates to fix broken Windows build.\n* [640](https://github.com/AcademySoftwareFoundation/openexr/pull/640) notes from 1/9/20 and 1/16/20\n* [639](https://github.com/AcademySoftwareFoundation/openexr/pull/639) Split Targets and Config and add find_package\n* [638](https://github.com/AcademySoftwareFoundation/openexr/pull/638) OpenEXR/ImfStdIO.[cpp h]: Added StdISStream.\n* [637](https://github.com/AcademySoftwareFoundation/openexr/pull/637) OpenEXR/IlmImf/ImfHuf.cpp: Fix OS dependent exr binary data for piz.\n* [635](https://github.com/AcademySoftwareFoundation/openexr/pull/635) Make docs install optional in CMake\n* [634](https://github.com/AcademySoftwareFoundation/openexr/pull/634) Add interface includes to IlmBase and OpenEXR\n* [631](https://github.com/AcademySoftwareFoundation/openexr/pull/631) add missing IMF_EXPORT to ImfOpenInputFile for dllexport\n* [629](https://github.com/AcademySoftwareFoundation/openexr/pull/629) Fixed some typos\n* [627](https://github.com/AcademySoftwareFoundation/openexr/pull/627) possible fix for #570: avoid writing NaNs into test images\n* [626](https://github.com/AcademySoftwareFoundation/openexr/pull/626) fix testB44ExpLogTable and testDwaLookups, and Makefile.am\n* [622](https://github.com/AcademySoftwareFoundation/openexr/pull/622) Azure and SonarCloud updates.\n* [620](https://github.com/AcademySoftwareFoundation/openexr/pull/620) Switch from int to size_t to prevent overflow with huge images in exrdisplay (Fix for #610)\n* [619](https://github.com/AcademySoftwareFoundation/openexr/pull/619) TSC meeting notes November 21, 2019\n* [618](https://github.com/AcademySoftwareFoundation/openexr/pull/618) change URL to https://github.com/AcademySoftwareFoundation/openexr\n* [616](https://github.com/AcademySoftwareFoundation/openexr/pull/616) Fix issue 289, C++17 compatibility\n* [615](https://github.com/AcademySoftwareFoundation/openexr/pull/615) Add a missing break statement when determining compression in exr2aces\n* [613](https://github.com/AcademySoftwareFoundation/openexr/pull/613) Notes 2019 11 15\n* [612](https://github.com/AcademySoftwareFoundation/openexr/pull/612) Add a 'clang-format' build target\n* [608](https://github.com/AcademySoftwareFoundation/openexr/pull/608) Fix #595 and others, issue with pkgconfig generation under cmake\n* [606](https://github.com/AcademySoftwareFoundation/openexr/pull/606) Remove all build-time header generation\n* [601](https://github.com/AcademySoftwareFoundation/openexr/pull/601) \"Rule of 5\" copy/assign/move declarations\n* [600](https://github.com/AcademySoftwareFoundation/openexr/pull/600) TSC Meeting Notes 2019/10/24\n* [599](https://github.com/AcademySoftwareFoundation/openexr/pull/599) Prepare 2.4 release branch\n* [598](https://github.com/AcademySoftwareFoundation/openexr/pull/598) Fix for #571: keep all values word-aligned in IlmImfTest testLargeDataWindowOffsets\n* [590](https://github.com/AcademySoftwareFoundation/openexr/pull/590) TSC Meeting notes for 2019-10-17\n* [588](https://github.com/AcademySoftwareFoundation/openexr/pull/588) Gitignore\n* [587](https://github.com/AcademySoftwareFoundation/openexr/pull/587) removed unnecessary .m4 files\n* [586](https://github.com/AcademySoftwareFoundation/openexr/pull/586) TSC Meeting Notes 2019-10-3\n* [585](https://github.com/AcademySoftwareFoundation/openexr/pull/585) Added mission statement to README.md\n* [582](https://github.com/AcademySoftwareFoundation/openexr/pull/582) Azure macOS job fixes\n* [580](https://github.com/AcademySoftwareFoundation/openexr/pull/580) More SonarCloud \"bug\" fixes in Imath\n* [578](https://github.com/AcademySoftwareFoundation/openexr/pull/578) More fixes for SonarCloud bugs\n* [577](https://github.com/AcademySoftwareFoundation/openexr/pull/577) Sonar fixes in IlmImf and IlmImfTest\n* [576](https://github.com/AcademySoftwareFoundation/openexr/pull/576) TSC meeting notes\n* [575](https://github.com/AcademySoftwareFoundation/openexr/pull/575) Sonar fixes for Iex, IexTest, and ImathTest\n* [574](https://github.com/AcademySoftwareFoundation/openexr/pull/574) Change Azure SonarCloud job to run weekly.\n* [569](https://github.com/AcademySoftwareFoundation/openexr/pull/569) TSC meeting notes for the last 3 weeks\n* [562](https://github.com/AcademySoftwareFoundation/openexr/pull/562) CVE listing in SECURITY.md\n* [561](https://github.com/AcademySoftwareFoundation/openexr/pull/561) A few more NOSONAR suppressions in PyImath\n* [560](https://github.com/AcademySoftwareFoundation/openexr/pull/560) Clean up small number of sonarcloud bugs / warnings\n* [559](https://github.com/AcademySoftwareFoundation/openexr/pull/559) Change Azure SonarCloud job to run for every PR, rather than only for…\n* [558](https://github.com/AcademySoftwareFoundation/openexr/pull/558) Add NOSONAR comments to PyImath to suppress \"self==self\" bug reports.\n* [557](https://github.com/AcademySoftwareFoundation/openexr/pull/557) Fix warnings when _FORTIFY_SOURCE set\n* [556](https://github.com/AcademySoftwareFoundation/openexr/pull/556) Fix #555\n* [554](https://github.com/AcademySoftwareFoundation/openexr/pull/554) Replace use of rand()/srand() with the C++11 <random>\n* [553](https://github.com/AcademySoftwareFoundation/openexr/pull/553) Increase Azure timeout for SonarCloud, Linux and MacOS jobs.\n\n### Closed Issues\n\n* [689](https://github.com/AcademySoftwareFoundation/openexr/issues/689) I was able to get OpenEXR to install by adding ``-std=c++11`` to the ``extra_compile_flags`` in setup.py, as lgritz  and peterhillman suggested. Here's the file with it added:\n* [688](https://github.com/AcademySoftwareFoundation/openexr/issues/688) Invalid shift (141647077)\n* [687](https://github.com/AcademySoftwareFoundation/openexr/issues/687) ZLIB not found\n* [686](https://github.com/AcademySoftwareFoundation/openexr/issues/686) Using the example Chromacity files - issue with chromaticities\n* [679](https://github.com/AcademySoftwareFoundation/openexr/issues/679) mipmap / ripmap question\n* [674](https://github.com/AcademySoftwareFoundation/openexr/issues/674) OpenEXR_Viewers  / libCg aliasing error\n* [671](https://github.com/AcademySoftwareFoundation/openexr/issues/671) Tiles/Ocean.exr core dumps on latest code built from git\n* [668](https://github.com/AcademySoftwareFoundation/openexr/issues/668) 2.4.1: test suite build is failing\n* [665](https://github.com/AcademySoftwareFoundation/openexr/issues/665) openexr/OpenEXR_Viewers/config/LocateCg.cmake issue on Linux\n* [663](https://github.com/AcademySoftwareFoundation/openexr/issues/663) 2.4.1: missing dist tar balls\n* [654](https://github.com/AcademySoftwareFoundation/openexr/issues/654) build breaks backwards compatibility\n* [651](https://github.com/AcademySoftwareFoundation/openexr/issues/651) ImfChromaticities.cpp: Revisiting the == and != operators\n* [648](https://github.com/AcademySoftwareFoundation/openexr/issues/648) find_package macro redefinition conflicts with vcpkg macro on Windows.\n* [633](https://github.com/AcademySoftwareFoundation/openexr/issues/633) ImfStdIO.[cpp h]:  Missing StdISStream class\n* [632](https://github.com/AcademySoftwareFoundation/openexr/issues/632) Platform/OS dependent piz compressed binary data\n* [630](https://github.com/AcademySoftwareFoundation/openexr/issues/630) OpenEXR loading not making use of multiple threads\n* [628](https://github.com/AcademySoftwareFoundation/openexr/issues/628) Missing C++11 type traits for half\n* [625](https://github.com/AcademySoftwareFoundation/openexr/issues/625) OPENEXR_DLL issues\n* [623](https://github.com/AcademySoftwareFoundation/openexr/issues/623) Documentation : Typo in \"Interpreting Deep Pixels\"\n* [617](https://github.com/AcademySoftwareFoundation/openexr/issues/617) Move openexr repo to AcademySoftwareFoundation organization\n* [611](https://github.com/AcademySoftwareFoundation/openexr/issues/611) How to force Python3 build on Linux\n* [610](https://github.com/AcademySoftwareFoundation/openexr/issues/610) huge images cause bad_array_new_length exception in exrdisplay\n* [607](https://github.com/AcademySoftwareFoundation/openexr/issues/607) Getting started... build & hello world.\n* [604](https://github.com/AcademySoftwareFoundation/openexr/issues/604) PyIlmBaseConfig not in export set?\n* [595](https://github.com/AcademySoftwareFoundation/openexr/issues/595) Broken pkgconfig files when building with cmake\n* [594](https://github.com/AcademySoftwareFoundation/openexr/issues/594) Python modules are not linked to Boost::python\n* [593](https://github.com/AcademySoftwareFoundation/openexr/issues/593) Python modules are not installed with cmake\n* [584](https://github.com/AcademySoftwareFoundation/openexr/issues/584) OpenEXR CLAs\n* [581](https://github.com/AcademySoftwareFoundation/openexr/issues/581) ImfCompressor.h  is not installed\n* [579](https://github.com/AcademySoftwareFoundation/openexr/issues/579) ImfFrameBuffer.h not compatible with C++98 code\n* [573](https://github.com/AcademySoftwareFoundation/openexr/issues/573) Linker cannot find \"boost_python-vc140-mt-x64-1_66.lib\" on Windows.\n* [572](https://github.com/AcademySoftwareFoundation/openexr/issues/572) \"IlmImf-2_3.dll\" shared library is not built anymore in 2.3.0.\n* [571](https://github.com/AcademySoftwareFoundation/openexr/issues/571) Test failure on ARMv7\n* [570](https://github.com/AcademySoftwareFoundation/openexr/issues/570) Test failure on i686\n* [567](https://github.com/AcademySoftwareFoundation/openexr/issues/567) CMake builds produce invalid pkg-config files\n* [566](https://github.com/AcademySoftwareFoundation/openexr/issues/566) throwErrno symbols missing when Iex is linked before other libraries statically\n* [565](https://github.com/AcademySoftwareFoundation/openexr/issues/565) 2.4.0 tarball signature missing\n* [564](https://github.com/AcademySoftwareFoundation/openexr/issues/564) CVE-2006-2277\n* [563](https://github.com/AcademySoftwareFoundation/openexr/issues/563) CVE-2016-4629 and CVE-2016-4630\n* [555](https://github.com/AcademySoftwareFoundation/openexr/issues/555) cmake errors when used as sub-project via add_subdirectory()\n\n### Commits \\[ git log v2.4.0...v2.5.0\\]\n\n* [``b12ea7f3``](https://github.com/AcademySoftwareFoundation/openexr/commit/b12ea7f30d624d51f1b69a2ffa9159a4f07a7974) Pthreads: Some stuff @meshula overlooked. ([Gregorio Litenstein](@g.litenstein@gmail.com) 2020-05-04)\n* [``af8864d2``](https://github.com/AcademySoftwareFoundation/openexr/commit/af8864d259d3ef523fc75eaab4f9a74b0f3b092c) pthreads: Fix CMake/Autotools to check for them ([Gregorio Litenstein](@g.litenstein@gmail.com) 2020-05-04)\n* [``2ef3d626``](https://github.com/AcademySoftwareFoundation/openexr/commit/2ef3d6265a56cd1ca7c4112a616db6987f134c4a) Pthreads: Some stuff @meshula overlooked. ([Gregorio Litenstein](@g.litenstein@gmail.com) 2020-05-04)\n* [``3ab677bd``](https://github.com/AcademySoftwareFoundation/openexr/commit/3ab677bd375db896215459a49de77ac87fbbb19c) A clean version of #673: Allow the use of Pthreads with WIN32/64 builds under MinGW ([Cary Phillips](@cary@ilm.com) 2020-05-01)\n* [``4bb99704``](https://github.com/AcademySoftwareFoundation/openexr/commit/4bb99704799830f1be1fa8cde559e3f2f63068a1) added recent commits and PR's to 2.5.0 release notes ([Cary Phillips](@cary@ilm.com) 2020-04-30)\n* [``ac4fb158``](https://github.com/AcademySoftwareFoundation/openexr/commit/ac4fb15895447ce042528cc965ce2b242d130311) fixed wording of OpenEXR_Viewers in 2.5.0 release notes. ([Cary Phillips](@cary@ilm.com) 2020-04-29)\n* [``c0542060``](https://github.com/AcademySoftwareFoundation/openexr/commit/c0542060df75e5726e0b51ecc1de01aa29b3b448) fixed spacing in 2.5.0 release notes ([Cary Phillips](@cary@ilm.com) 2020-04-28)\n* [``c65d0d87``](https://github.com/AcademySoftwareFoundation/openexr/commit/c65d0d8708e99758a7f10fb1b4596d53298a52bb) Added summary of changes to 2.5.0 release notes. ([Cary Phillips](@cary@ilm.com) 2020-04-28)\n* [``275ab234``](https://github.com/AcademySoftwareFoundation/openexr/commit/275ab2341081d32160298b01ef903eb4befce8c9) added merged PR's and closed issues to 2.5.0 release notes ([Cary Phillips](@cary@ilm.com) 2020-04-27)\n* [``99bcaf5a``](https://github.com/AcademySoftwareFoundation/openexr/commit/99bcaf5aba87eb0c987f5e43e279d1f72ad8b953) added 2.5.0 commits to release notes ([Cary Phillips](@cary@ilm.com) 2020-04-27)\n* [``70202128``](https://github.com/AcademySoftwareFoundation/openexr/commit/70202128342b5daf0e97b227c923cb573edecff5) Update SECURITY.md to note that CVE-2020-* are not in v2.2.2 ([Cary Phillips](@cary@ilm.com) 2020-04-29)\n* [``8ab7adbc``](https://github.com/AcademySoftwareFoundation/openexr/commit/8ab7adbc2b4c0fca637a7115344f5f34c6f26139) Release notes for 2.2.2 ([Cary Phillips](@cary@ilm.com) 2020-04-29)\n* [``72e9ff25``](https://github.com/AcademySoftwareFoundation/openexr/commit/72e9ff25d8e843f6a475a2e81b8aae0df04d3a25) TSC meeting notes 4-23-20 ([Cary Phillips](@cary@ilm.com) 2020-04-23)\n* [``656a3a5c``](https://github.com/AcademySoftwareFoundation/openexr/commit/656a3a5c60394880b50081c95c4ca0ab2cf4143e) Add cmake option to install PyIlmBase pkg-config file ([Cary Phillips](@cary@ilm.com) 2020-03-05)\n* [``2a82f18c``](https://github.com/AcademySoftwareFoundation/openexr/commit/2a82f18c83a17cf1e98d6d9349779a150f5bdc3c) fixed typos in README.md ([Cary Phillips](@cary@ilm.com) 2020-04-29)\n* [``27f45978``](https://github.com/AcademySoftwareFoundation/openexr/commit/27f459781b6a3cb69727397bb989e8dc2aa8850c) Bump version to 2.5.0 ([Cary Phillips](@cary@ilm.com) 2020-04-28)\n* [``72cc6e02``](https://github.com/AcademySoftwareFoundation/openexr/commit/72cc6e02e991771db075d5c5e6a184325be47b0a) Fix to make Boost_NO_BOOST_CMAKE a cache variable ([Mark Sisson](@5761292+marksisson@users.noreply.github.com) 2020-04-26)\n* [``b9199b51``](https://github.com/AcademySoftwareFoundation/openexr/commit/b9199b5155ab8c1d245ddeb61006b1bf2de66d84) Fix python module install on macos ([Mark Sisson](@5761292+marksisson@users.noreply.github.com) 2020-04-26)\n* [``0b26caf6``](https://github.com/AcademySoftwareFoundation/openexr/commit/0b26caf6c33656d38cf10f7a090d3713ac4ee291) TSC meeting notes 4-16-20 ([Cary Phillips](@cary@ilm.com) 2020-04-16)\n* [``9d8bb109``](https://github.com/AcademySoftwareFoundation/openexr/commit/9d8bb109968cd169765f1da7b2022a6b6b3a93f0) Implemented all tests transferable to the 2x2 matrix case from 3x3. Added needed functionality to ensure boost::python worked for testing. ([Owen Thompson](@oxt3479@rit.edu) 2020-04-09)\n* [``713e6ce5``](https://github.com/AcademySoftwareFoundation/openexr/commit/713e6ce54babdd4181c23d7d0e6c8bb00164a953) Implemented additional C++ functionality needed to pass 2x2 testing parameters: extracting euler angles and overloaded vector multiplication. ([Owen Thompson](@oxt3479@rit.edu) 2020-04-09)\n* [``1b20f7bd``](https://github.com/AcademySoftwareFoundation/openexr/commit/1b20f7bd7dc1a8bf37200d46f84645c613513c4a) Wrote tests transferable to the 2x2 cases in C++ ([Owen Thompson](@oxt3479@rit.edu) 2020-04-09)\n* [``d404df49``](https://github.com/AcademySoftwareFoundation/openexr/commit/d404df499a32b63ab57f48177d275806ea8addd5) Matrix22 template constructor and make identity no longer use memset. ([Owen Thompson](@oxt3479@rit.edu) 2020-03-30)\n* [``f20e1602``](https://github.com/AcademySoftwareFoundation/openexr/commit/f20e1602d64b03397bc54425ff7f5be2e3214aff) Implementation of operator << on Matrix22 for stream output. ([Owen Thompson](@oxt3479@rit.edu) 2020-03-30)\n* [``c5a10a77``](https://github.com/AcademySoftwareFoundation/openexr/commit/c5a10a776c8655dbcbe241a3496952c4c3787071) Implementation of arbitrarily transferable functions from 3x3 to 2x2. Removed gaus-jordan and other problematic operations (doesn't work on 2x2) ([Owen Thompson](@oxt3479@rit.edu) 2020-03-24)\n* [``308f1076``](https://github.com/AcademySoftwareFoundation/openexr/commit/308f1076d001e573a9fbf240bb85995aaea1ce2c) fixed spacing ([Cary Phillips](@cary@ilm.com) 2020-04-16)\n* [``a2392101``](https://github.com/AcademySoftwareFoundation/openexr/commit/a2392101e8101bed90fc3370e8840d208dd88c02) update with new CVE's ([Cary Phillips](@cary@ilm.com) 2020-04-16)\n* [``d7da549e``](https://github.com/AcademySoftwareFoundation/openexr/commit/d7da549e1561002d9d278960fdc537f7c535376c) edited GSoC discussion ([Cary Phillips](@cary@ilm.com) 2020-04-03)\n* [``c4d27400``](https://github.com/AcademySoftwareFoundation/openexr/commit/c4d27400c51db899b35b4fb729815e17054391ea) typo ([Cary Phillips](@cary@ilm.com) 2020-04-02)\n* [``c76f4c8d``](https://github.com/AcademySoftwareFoundation/openexr/commit/c76f4c8d3feb670c14a4320f6c171deea4c750da) added John ([Cary Phillips](@cary@ilm.com) 2020-04-02)\n* [``e9ff88bb``](https://github.com/AcademySoftwareFoundation/openexr/commit/e9ff88bb1d3de0d19029d159ac9d1414b790b88c) typo. ([Cary Phillips](@cary@ilm.com) 2020-04-02)\n* [``b0f4dc48``](https://github.com/AcademySoftwareFoundation/openexr/commit/b0f4dc4849910819b4d54a895823591057e9d2a5) TSC meeting notes 4/2/2020 ([Cary Phillips](@cary@ilm.com) 2020-04-02)\n* [``fa435e2a``](https://github.com/AcademySoftwareFoundation/openexr/commit/fa435e2afe5fce3f5e26220bc46474b8775c6716) Fix libc++abi.dylib: Pure virtual function called! ([dgmzc](@dorian.gmz@hotmail.com) 2020-03-10)\n* [``e23fdf6e``](https://github.com/AcademySoftwareFoundation/openexr/commit/e23fdf6e02dbd8157b1d468143a82f6632781dee) Typo in INSTALL.md: cmake now builds three modules, not four. ([Cary Phillips](@cary@ilm.com) 2020-03-05)\n* [``0132627f``](https://github.com/AcademySoftwareFoundation/openexr/commit/0132627f3e46fd376c785e223abbc3f5e418ae5e) added some details. ([Cary Phillips](@cary@ilm.com) 2020-03-05)\n* [``23c7e72c``](https://github.com/AcademySoftwareFoundation/openexr/commit/23c7e72cb25daa3820d9745d9f49c86320316082) TSC Meeting notes 3/5/2020 ([Cary Phillips](@cary@ilm.com) 2020-03-05)\n* [``6780843d``](https://github.com/AcademySoftwareFoundation/openexr/commit/6780843d9da05e5f7bebab2bda9dd437cc4a1909) fixed a/an use in Matrix33 and Matrix44 ([Phyrexian](@jarko.paska@gmail.com) 2020-03-05)\n* [``560f7c2e``](https://github.com/AcademySoftwareFoundation/openexr/commit/560f7c2e0eb1e4adec40884eb6126585d08e70f5) Remove OpenEXR_Viewers from the cmake build files and from the INSTALL.md instructions. ([Cary Phillips](@cary@ilm.com) 2020-02-27)\n* [``01fa5a20``](https://github.com/AcademySoftwareFoundation/openexr/commit/01fa5a20dde82849203117bfe5de2b2cb21d84a4) TSC meeting notes for 2/27/2020 ([Cary Phillips](@cary@ilm.com) 2020-02-27)\n* [``d2639ab3``](https://github.com/AcademySoftwareFoundation/openexr/commit/d2639ab3bb60b7b316d6f7893446e38591bd9f3e) Add interface includes to IlmBase and OpenEXR ([Harry Mallon](@hjmallon@gmail.com) 2020-01-07)\n* [``6da250f6``](https://github.com/AcademySoftwareFoundation/openexr/commit/6da250f63d8460788a8b6bb2a642d9c981ab2bb8) Fix cmake install failing when install dir contains spaces, fix symlinks for shared libraries on DLL platforms ([Simon Boorer](@sboorer@ilm.com) 2020-02-26)\n* [``6d26cbfc``](https://github.com/AcademySoftwareFoundation/openexr/commit/6d26cbfc1c453c79513b0dad5704fed13e76feda) Split Targets and Config and add find_package ([Harry Mallon](@hjmallon@gmail.com) 2020-01-07)\n* [``2f92fcbb``](https://github.com/AcademySoftwareFoundation/openexr/commit/2f92fcbb4fb25caafe4358d1c4a4c7b940016af4) ImfChromaticities.cpp: Add back white to equality ops. ([Arkell Rasiah](@arasiah@pixsystem.com) 2020-02-20)\n* [``d2deb6d8``](https://github.com/AcademySoftwareFoundation/openexr/commit/d2deb6d8844814615fed247048d36898e7f4c407) IlmImfTest/testExistingStreams.cpp: Test for Imf::StdOSStream/StdISStream. ([Arkell Rasiah](@arasiah@pixsystem.com) 2020-02-26)\n* [``9a172a22``](https://github.com/AcademySoftwareFoundation/openexr/commit/9a172a220d59dd4363f4c07bac59facae9a1ae6f) OpenEXR/ImfStdIO.[cpp h]: Added StdISStream. ([Arkell Rasiah](@arasiah@pixsystem.com) 2020-01-10)\n* [``d9019d81``](https://github.com/AcademySoftwareFoundation/openexr/commit/d9019d81a74ac7cf8710bb72590200369686856d) CLA docs moved from \"docs\" to \"contributors\" ([Cary Phillips](@cary@ilm.com) 2020-02-24)\n* [``48c21063``](https://github.com/AcademySoftwareFoundation/openexr/commit/48c2106310c8edefc7c1387cffc466665e4f38d2) ImfAcesFile.cpp: Remove redundant equality check. ([Arkell Rasiah](@arasiah@pixsystem.com) 2020-02-07)\n* [``adc21e52``](https://github.com/AcademySoftwareFoundation/openexr/commit/adc21e5250cf938ecd6bf6fcbcfb4e7da7382671) ImfAcesFile.cpp: Fix primary conversion edge case. ([Arkell Rasiah](@arasiah@pixsystem.com) 2020-01-31)\n* [``3576a8bd``](https://github.com/AcademySoftwareFoundation/openexr/commit/3576a8bd16ba36ad20832b5727d3fe9ff210dd0d) TSC meeting notes 2/20/2020 ([Cary Phillips](@cary@ilm.com) 2020-02-20)\n* [``817faac5``](https://github.com/AcademySoftwareFoundation/openexr/commit/817faac5c18a7c9e66ae2adb9e3f312ff3e7f631) fix unitialised pointer and double-delete bugs (#661) ([peterhillman](@peterh@wetafx.co.nz) 2020-02-24)\n* [``a0e84f62``](https://github.com/AcademySoftwareFoundation/openexr/commit/a0e84f62def6276f38e518a2724d9f7ac4daa9ad) add help and options information IlmImfTest and IlmImfFuzzTest ([Peter Hillman](@peterh@wetafx.co.nz) 2020-02-13)\n* [``608b4938``](https://github.com/AcademySoftwareFoundation/openexr/commit/608b4938fb23861cf6e6792ecf8373e0c9a8ebb5) support reloading broken files with IlmImfFuzzTest ([Peter Hillman](@peterh@wetafx.co.nz) 2020-02-11)\n* [``d129fae9``](https://github.com/AcademySoftwareFoundation/openexr/commit/d129fae907a2928f675b1c654f9c8a32a84103b2) Added #659 and associated commit to 2.4.1 release notes. ([Cary Phillips](@cary@ilm.com) 2020-02-10)\n* [``b6bef538``](https://github.com/AcademySoftwareFoundation/openexr/commit/b6bef53821384c82ebd0912513be3e4579d1c176) Release notes for 2.4.1 patch release. ([Cary Phillips](@cary@ilm.com) 2020-02-06)\n* [``0ca9b6e8``](https://github.com/AcademySoftwareFoundation/openexr/commit/0ca9b6e855d32a794874b1624581d68fcc3f87c0) Added #659 and associated commit to 2.4.1 release notes. ([Cary Phillips](@cary@ilm.com) 2020-02-10)\n* [``a966db03``](https://github.com/AcademySoftwareFoundation/openexr/commit/a966db0341369108c6f85bdd92b44ef26265f43b) Release notes for 2.4.1 patch release. ([Cary Phillips](@cary@ilm.com) 2020-02-06)\n* [``d06c223f``](https://github.com/AcademySoftwareFoundation/openexr/commit/d06c223f2e9f36766ef7dbec89954393a3b0ba0b) exrdisplay: limit maximum image size based on available screen resolution ([Peter Hillman](@peterh@wetafx.co.nz) 2020-02-10)\n* [``e79d2296``](https://github.com/AcademySoftwareFoundation/openexr/commit/e79d2296496a50826a15c667bf92bdc5a05518b4) fix memory leaks and invalid memory accesses ([Peter Hillman](@peterh@wetafx.co.nz) 2020-02-08)\n* [``2c37c4bd``](https://github.com/AcademySoftwareFoundation/openexr/commit/2c37c4bd39d3b03248cca42c63d0adbc40827c58) Fix yet more memory leaks from constructor exceptions (#658) ([peterhillman](@peterh@wetafx.co.nz) 2020-02-09)\n* [``3422b344``](https://github.com/AcademySoftwareFoundation/openexr/commit/3422b344f6189e499fe4c00f11491843a23d24a4) fix crash with damaged EXR files (#656) ([peterhillman](@peterh@wetafx.co.nz) 2020-02-08)\n* [``5754217f``](https://github.com/AcademySoftwareFoundation/openexr/commit/5754217fc506efad20f0ccb509ac447c7c68b671) typo in date. ([Cary Phillips](@cary@ilm.com) 2020-02-06)\n* [``7f183953``](https://github.com/AcademySoftwareFoundation/openexr/commit/7f18395337d9a439246370245eb585e5c2efaa6c) TSC meeting notes for Feb 6, 2020 ([Cary Phillips](@cary@ilm.com) 2020-02-06)\n* [``cdc70f60``](https://github.com/AcademySoftwareFoundation/openexr/commit/cdc70f60c525c533aefa2b0663b9e0b723cad463) ImfChromaticities.h/cpp: Typo and pass by ref change. ([Arkell Rasiah](@arasiah@pixsystem.com) 2020-01-31)\n* [``51bd0ff5``](https://github.com/AcademySoftwareFoundation/openexr/commit/51bd0ff530fb20586c4bf95241d035f237792989) fix memory leak from constructor exceptions (#653) ([peterhillman](@peterh@wetafx.co.nz) 2020-02-07)\n* [``88246d99``](https://github.com/AcademySoftwareFoundation/openexr/commit/88246d991e0318c043e6f584f7493da08a31f9f8) OpenEXR/IlmImfTest/testHuf.cpp: Do the compressVerify() on deterministic data sets. ([Arkell Rasiah](@arasiah@pixsystem.com) 2020-01-17)\n* [``0042c451``](https://github.com/AcademySoftwareFoundation/openexr/commit/0042c45171aeff6ec2d165c4c2621514f055d380) OpenEXR/IlmImf/ImfHuf.cpp: Fix OS dependent exr binary data for piz. ([Arkell Rasiah](@arasiah@pixsystem.com) 2020-01-10)\n* [``89ce46f3``](https://github.com/AcademySoftwareFoundation/openexr/commit/89ce46f38c5e658d21df9179c1641c496cab7396) force x/y Sampling to 1 for Deep Scanline Images ([Peter Hillman](@peterh@wetafx.co.nz) 2020-01-28)\n* [``0a1aa55e``](https://github.com/AcademySoftwareFoundation/openexr/commit/0a1aa55ef108169c933ddaa631c1f6cb02b69050) minor tweaks and typo fixes ([Peter Hillman](@peterh@wetafx.co.nz) 2020-01-28)\n* [``acad98d6``](https://github.com/AcademySoftwareFoundation/openexr/commit/acad98d6d3e787f36012a3737c23c42c7f43a00f) missing header for ptrdiff_t ([Peter Hillman](@peterh@wetafx.co.nz) 2020-01-24)\n* [``c14af4bb``](https://github.com/AcademySoftwareFoundation/openexr/commit/c14af4bb58c8748cfe2f132147ba38abd0845812) fix test suite memory leak from testDeepTiledBasic ([Peter Hillman](@peterh@wetafx.co.nz) 2020-01-24)\n* [``a8508ab0``](https://github.com/AcademySoftwareFoundation/openexr/commit/a8508ab05ffeedba394e646506030f94769e0f15) test for multipart threading was leaking memory ([Peter Hillman](@peterh@wetafx.co.nz) 2020-01-24)\n* [``b673e6ad``](https://github.com/AcademySoftwareFoundation/openexr/commit/b673e6ad0ec6cef94d86b9586244d26088a3d792) Fix cleanup when DeepScanLineInputFile constructor throws ([Peter Hillman](@peterh@wetafx.co.nz) 2020-01-24)\n* [``53a06468``](https://github.com/AcademySoftwareFoundation/openexr/commit/53a06468ef5a08f4f2beb2d264a20547d7a78753) fixes to memory leak when constructors throw exceptions ([Peter Hillman](@peterh@wetafx.co.nz) 2020-01-23)\n* [``d4fbaad4``](https://github.com/AcademySoftwareFoundation/openexr/commit/d4fbaad4efe5d0ddf325da44ecbab105ebb2954e) fix memory leak in test suite ([Peter Hillman](@peterh@wetafx.co.nz) 2020-01-23)\n* [``dea0ef1e``](https://github.com/AcademySoftwareFoundation/openexr/commit/dea0ef1ee7b2f4d2aa42ffba7b442e5d8051222b) fix memory leak on DeepTiledInput files: compressor for sample count table wasn't deleted ([Peter Hillman](@peterh@wetafx.co.nz) 2020-01-23)\n* [``2ae5f837``](https://github.com/AcademySoftwareFoundation/openexr/commit/2ae5f8376b0a6c3e2bb100042f5de79503ba837a) fix check for valid ruleSize ([Peter Hillman](@peterh@wetafx.co.nz) 2020-01-23)\n* [``a6408c90``](https://github.com/AcademySoftwareFoundation/openexr/commit/a6408c90339bdf19f89476578d7f936b741be9b2) avoid creating compression object just to compute numLinesInBuffer ([Peter Hillman](@peterh@wetafx.co.nz) 2020-01-23)\n* [``e7c26f6e``](https://github.com/AcademySoftwareFoundation/openexr/commit/e7c26f6ef5bf7ae8ea21ecf19963186cd1391720) abort when file claims to have excessive scanline data requirements ([Peter Hillman](@peterh@wetafx.co.nz) 2020-01-22)\n* [``b1c34c49``](https://github.com/AcademySoftwareFoundation/openexr/commit/b1c34c496b62117115b1089b18a44e0031800a09) fix memory leak when reading damaged PIZ files ([Peter Hillman](@peterh@wetafx.co.nz) 2020-01-22)\n* [``ea334989``](https://github.com/AcademySoftwareFoundation/openexr/commit/ea3349896d4a8a3b523e8f3b830334a85240b1e6) sanity check data reads from PIZ data ([Peter Hillman](@peterh@wetafx.co.nz) 2020-01-21)\n* [``43cd3ad4``](https://github.com/AcademySoftwareFoundation/openexr/commit/43cd3ad47d53356da6ae2e983e47c8313aebf72e) improve bad count detection in huf decompress ([Peter Hillman](@peterh@wetafx.co.nz) 2020-01-21)\n* [``801272c9``](https://github.com/AcademySoftwareFoundation/openexr/commit/801272c9bf8b84a66c62f1e8a4490ece81da6a56) check for bad bit counts in Huff encoded data ([Peter Hillman](@peterh@wetafx.co.nz) 2020-01-21)\n* [``7a52d40a``](https://github.com/AcademySoftwareFoundation/openexr/commit/7a52d40ae23c148f27116cb1f6e897b9143b372c) bypass SSE optimization when skipping subsampled channels ([Peter Hillman](@peterh@wetafx.co.nz) 2020-01-21)\n* [``b9997d0c``](https://github.com/AcademySoftwareFoundation/openexr/commit/b9997d0c045fa01af3d2e46e1a74b07cc4519446) prevent int overflow when calculating buffer offsets ([Peter Hillman](@peterh@wetafx.co.nz) 2020-01-20)\n* [``822e218c``](https://github.com/AcademySoftwareFoundation/openexr/commit/822e218c795e989abdf74112b924d0da8acc967b) exrmakepreview: switch preview-to-full scaling vars from floats to doubles to prevent rounding causing overflows ([Peter Hillman](@peterh@wetafx.co.nz) 2020-01-20)\n* [``3eda5d70``](https://github.com/AcademySoftwareFoundation/openexr/commit/3eda5d70aba127bae9bd6bae9956fcf024b64031) fixes for DWA uncompress: sanity check unknown data reading, off-by-one error on max suffix string length ([Peter Hillman](@peterh@wetafx.co.nz) 2020-01-20)\n* [``37750013``](https://github.com/AcademySoftwareFoundation/openexr/commit/37750013830def57f19f3c3b7faaa9fc1dae81b3) Sanity check for input buffer overruns in RLE uncompress ([Peter Hillman](@peterh@wetafx.co.nz) 2020-01-20)\n* [``df987cab``](https://github.com/AcademySoftwareFoundation/openexr/commit/df987cabc20c90803692022fd232def837cb88cc) validate tiles have valid headers when raw reading tiles ([Peter Hillman](@peterh@wetafx.co.nz) 2020-01-20)\n* [``6bad53af``](https://github.com/AcademySoftwareFoundation/openexr/commit/6bad53af7eebed507564dd5fc90320e4c6a6c0bc) Force tile sizes to be less than INT_MAX bytes, in line with the maximum dimensions of data windows ([Peter Hillman](@peterh@wetafx.co.nz) 2020-01-20)\n* [``1cbf6b9a``](https://github.com/AcademySoftwareFoundation/openexr/commit/1cbf6b9a4497f71586ac11dc60ed21cf0cc529bd) fix typo and ref to theory document in InterpretingDeepPixels ([Peter Hillman](@peterh@wetafx.co.nz) 2020-01-28)\n* [``6546ff20``](https://github.com/AcademySoftwareFoundation/openexr/commit/6546ff20961003825f86662efe16842ff6a64f32) Various CI Updates: - fix python warnings. - fix Cmake include(clang_format) error - added Linux VFX 2020 builds - removed MacOS 10.13 due to Azure ending support - temporarily disable gcov in Sonar, due to SC regression CPP-2395 ([Christina Tempelaar-Lietz](@xlietz@gmail.com) 2020-01-25)\n* [``f9229e98``](https://github.com/AcademySoftwareFoundation/openexr/commit/f9229e98c93b4bc0179bb12904d03071cc5a8718) Updates to fix broken Windows build. ([Christina Tempelaar-Lietz](@xlietz@gmail.com) 2020-01-20)\n* [``fce8c17b``](https://github.com/AcademySoftwareFoundation/openexr/commit/fce8c17b3731fd3212c8fba52fecfea597eb98fa) possible fix for #570: avoid writing NaNs into test images ([Peter Hillman](@peterh@wetafx.co.nz) 2019-11-29)\n* [``9750a1db``](https://github.com/AcademySoftwareFoundation/openexr/commit/9750a1db7f92be3def678977eb741b6762316580) fix testB44ExpLogTable and testDwaLookups, and Makefile.am ([Peter Hillman](@peterh@wetafx.co.nz) 2019-11-29)\n* [``bd6ab91f``](https://github.com/AcademySoftwareFoundation/openexr/commit/bd6ab91f6002e90c17c385391e17c06c7ea1dfb8) use Int64 types for width*height calculations in exrdisplay ([Peter Hillman](@peterh@wetafx.co.nz) 2019-11-25)\n* [``5adac705``](https://github.com/AcademySoftwareFoundation/openexr/commit/5adac705e18de43008ec0ecb562969ede2a7a927) Switch from int to size_t to prevent overflow with huge images ([Peter Hillman](@peterh@wetafx.co.nz) 2019-11-25)\n* [``b1477e0e``](https://github.com/AcademySoftwareFoundation/openexr/commit/b1477e0eea3d9e901012795bed2f499c96e028dc) added Rod to TSC notes ([Cary Phillips](@cary@ilm.com) 2019-11-14)\n* [``220f9d4b``](https://github.com/AcademySoftwareFoundation/openexr/commit/220f9d4b2a36c994b9043aa785b1970ad652b8f1) TSC notes 2019-11-15 ([Cary Phillips](@cary@ilm.com) 2019-11-14)\n* [``93a4c794``](https://github.com/AcademySoftwareFoundation/openexr/commit/93a4c794950c042ee025f8c4250e1c5b34c18af8) Don't change CMAKE_MODULE_PATH ([Larry Gritz](@lg@larrygritz.com) 2019-11-24)\n* [``18d7b6a1``](https://github.com/AcademySoftwareFoundation/openexr/commit/18d7b6a184718a6bb7a0583ae072f507b83bab66) typo ([Larry Gritz](@lg@larrygritz.com) 2019-11-14)\n* [``66f48992``](https://github.com/AcademySoftwareFoundation/openexr/commit/66f48992ddd1401f8e9f4f876a737c2c62c209f8) Add a 'clang-format' build target ([Larry Gritz](@lg@larrygritz.com) 2019-11-12)\n* [``63fdd366``](https://github.com/AcademySoftwareFoundation/openexr/commit/63fdd36686baf1fd69990309ae43128fb2ab3f16) notes from 1/9/20 and 1/16/20 ([Cary Phillips](@cary@ilm.com) 2020-01-16)\n* [``56b248ec``](https://github.com/AcademySoftwareFoundation/openexr/commit/56b248ec86499992488b549863d4ef1bc6eb459f) fixed typo in CONTRIBUTING.md ([Cary Phillips](@cary@ilm.com) 2020-01-24)\n* [``7e6e6f0b``](https://github.com/AcademySoftwareFoundation/openexr/commit/7e6e6f0b1244450c5da2a4e8caed8febd19e1d95) Reference SECURITY.md in CONTRIBUTING.md ([John Mertic](@jmertic@linuxfoundation.org) 2020-01-21)\n* [``fbe08034``](https://github.com/AcademySoftwareFoundation/openexr/commit/fbe08034eebf9eff192d4068ffbdb807351a3c46) Fixed security email address to security@openexr.org ([John Mertic](@jmertic@linuxfoundation.org) 2020-01-21)\n* [``8f43dd55``](https://github.com/AcademySoftwareFoundation/openexr/commit/8f43dd559609a2b1f8787b922c1e5a87a8057838) TSC meeting notes November 21, 2019 ([Cary Phillips](@cary@ilm.com) 2019-11-21)\n* [``767d497c``](https://github.com/AcademySoftwareFoundation/openexr/commit/767d497c09d9a20dea4c510fc997b6393d52c33d) add missing IMF_EXPORT to ImfOpenInputFile in order to be able to use it from a windows dll ([Laurens Voerman](@l.voerman@rug.nl) 2019-12-12)\n* [``7bd899ac``](https://github.com/AcademySoftwareFoundation/openexr/commit/7bd899ac6f90efe5348518389d944856b5a73c7e) Make docs install optional in CMake ([Harry Mallon](@hjmallon@gmail.com) 2020-01-08)\n* [``afa84f87``](https://github.com/AcademySoftwareFoundation/openexr/commit/afa84f87ae24546f71a0e9ffac400e92a8da8b99) Fixed typos ([John Mertic](@jmertic@linuxfoundation.org) 2019-12-04)\n* [``b65a275f``](https://github.com/AcademySoftwareFoundation/openexr/commit/b65a275f189ee679c1e252c60085e8ceadce929f) Fixed some typos ([John Mertic](@jmertic@linuxfoundation.org) 2019-12-04)\n* [``824ed557``](https://github.com/AcademySoftwareFoundation/openexr/commit/824ed557b3c59288a685356c708e5806b1122fe1) Updated SonarCloud properties/token and README status widgets. ([Christina Tempelaar-Lietz](@xlietz@gmail.com) 2019-11-26)\n* [``c02742f2``](https://github.com/AcademySoftwareFoundation/openexr/commit/c02742f28c23226352bd5d2050a282fbe9b868e1) change URL to https://github.com/AcademySoftwareFoundation/openexr ([Cary Phillips](@cary@ilm.com) 2019-11-21)\n* [``2ae3d476``](https://github.com/AcademySoftwareFoundation/openexr/commit/2ae3d476ac19f6aa9950bb7beffdb10dbd120308) change URL to https://github.com/AcademySoftwareFoundation/openexr ([Cary Phillips](@cary@ilm.com) 2019-11-21)\n* [``1296f73c``](https://github.com/AcademySoftwareFoundation/openexr/commit/1296f73cac143eaa50ee87ae1947129e4ce740cf) Add a missing break statement when determining compression in exr2aces ([karlhendrikse](@karlhendrikse@gmail.com) 2019-11-20)\n* [``780c2230``](https://github.com/AcademySoftwareFoundation/openexr/commit/780c22304e2b1419d5d5267183e4dfc39dcd7373) Fix issue 289, C++17 compatibility ([Nick Porcino](@nporcino@pixar.com) 2019-11-20)\n* [``d778a0b4``](https://github.com/AcademySoftwareFoundation/openexr/commit/d778a0b47b18fe1ede3824fe013cea9dd7404360) add toFloat.h and eLut.h to SOURCES ([Cary Phillips](@cary@ilm.com) 2019-11-02)\n* [``d80927be``](https://github.com/AcademySoftwareFoundation/openexr/commit/d80927bebec8c38147c3614f1d3c7df898beebbf) move dwaLookups.h declarations to the OPENEXR_IMF_INTERNAL_NAMESPACE ([Cary Phillips](@cary@ilm.com) 2019-11-02)\n* [``36edde92``](https://github.com/AcademySoftwareFoundation/openexr/commit/36edde927a831686040f6c97a8f080ff13aa4759) add b44ExpLogTable.h and dwaLookups.h as official headers ([Cary Phillips](@cary@ilm.com) 2019-11-02)\n* [``00bf05cd``](https://github.com/AcademySoftwareFoundation/openexr/commit/00bf05cd090e4ac4a79877962abf26869c6c1672) add toFloat.h and eLut.h as source files ([Cary Phillips](@cary@ilm.com) 2019-11-01)\n* [``861aad16``](https://github.com/AcademySoftwareFoundation/openexr/commit/861aad165e78c4281dae8306f108ede2ae15322c) typo from previous commit: operator= wasn't returning a value ([Cary Phillips](@cary@ilm.com) 2019-11-03)\n* [``03b464a0``](https://github.com/AcademySoftwareFoundation/openexr/commit/03b464a01aedbc6607f0f3ca0cb5a61cfac78e12) mvoe TestType and TestTypedAttribute to OPENEXR_IMF_INTERNAL_NAMESPACE ([Cary Phillips](@cary@ilm.com) 2019-11-03)\n* [``9a5c8d4f``](https://github.com/AcademySoftwareFoundation/openexr/commit/9a5c8d4f41dd6e972f9a03860b0a42d136609364) remove const from arg declaration in move-constructors/move-assignments ([Cary Phillips](@cary@ilm.com) 2019-11-03)\n* [``b7857b96``](https://github.com/AcademySoftwareFoundation/openexr/commit/b7857b96aed4f29ee1605caf1e56e60fa2dd4389) =default copy/move/assign for TypedAttribute ([Cary Phillips](@cary@ilm.com) 2019-11-03)\n* [``fa2e4585``](https://github.com/AcademySoftwareFoundation/openexr/commit/fa2e4585ea960d77ec220c5f13de00da7edbdcb6) SonarCloud-inspired fixes ([Cary Phillips](@cary@ilm.com) 2019-10-25)\n* [``19cd1014``](https://github.com/AcademySoftwareFoundation/openexr/commit/19cd10142a399fc9ddce863acc3dc46ec2b703b5) SonarCloud-inspired bug fixes: ([Cary Phillips](@cary@ilm.com) 2019-10-24)\n* [``64f145a0``](https://github.com/AcademySoftwareFoundation/openexr/commit/64f145a05135aefaac3e9e467be80869ffa276fe) More SonarCloud-inspired fixes: ([Cary Phillips](@cary@ilm.com) 2019-10-24)\n* [``5c985fcf``](https://github.com/AcademySoftwareFoundation/openexr/commit/5c985fcf79d38188caae4ccb75b2f77718a44298) SonarCloud-inspired fixes ([Cary Phillips](@cary@ilm.com) 2019-10-24)\n* [``8e7ba0fa``](https://github.com/AcademySoftwareFoundation/openexr/commit/8e7ba0fafa53ba91d9aa8382af4652c905d5cea0) sonar fixes ([Cary Phillips](@cary@ilm.com) 2019-10-21)\n* [``ba3d5efb``](https://github.com/AcademySoftwareFoundation/openexr/commit/ba3d5efb6bfdadb4d0c489dac89ef1d0aa3996b8) sonar fixes ([Cary Phillips](@cary@ilm.com) 2019-10-21)\n* [``031199cd``](https://github.com/AcademySoftwareFoundation/openexr/commit/031199cd4fc062dd7bfe902c6552cf22f6bfbbdb) Fix overzealous removal of if statements breaking all builds except win32 ([Kimball Thurston](@kdt3rd@gmail.com) 2019-11-07)\n* [``8228578d``](https://github.com/AcademySoftwareFoundation/openexr/commit/8228578da6f86d17b9a2a3f8c6053f8b4ee3fb71) Handle python2 not being installed, but python3 being present ([Kimball Thurston](@kdt3rd@gmail.com) 2019-11-07)\n* [``d10895ef``](https://github.com/AcademySoftwareFoundation/openexr/commit/d10895ef0ad25dd60e68a2ab00bab7c0592f8c5b) Fix issue with defines not being set correctly for win32 ([Kimball Thurston](@kdt3rd@gmail.com) 2019-11-07)\n* [``b303f678``](https://github.com/AcademySoftwareFoundation/openexr/commit/b303f6788a434fd61e52c1bacb93a96c4c3440ea) Re-enable Boost_NO_BOOST_CMAKE by default, document, clean up status messages ([Kimball Thurston](@kdt3rd@gmail.com) 2019-11-07)\n* [``8ec1440c``](https://github.com/AcademySoftwareFoundation/openexr/commit/8ec1440cbd999f17457be605150bc53395fbb334) Set CMP0074 such that people who set Boost_ROOT won't get warnings ([Kimball Thurston](@kdt3rd@gmail.com) 2019-11-07)\n* [``28d1cb25``](https://github.com/AcademySoftwareFoundation/openexr/commit/28d1cb256f1b46f120adb131e606b2699acc72d7) ensure paths are canonicalized by get_filename_component prior to comparing ([Kimball Thurston](@kdt3rd@gmail.com) 2019-11-07)\n* [``34ce16c2``](https://github.com/AcademySoftwareFoundation/openexr/commit/34ce16c2653d02fcef6a297a2a61112dbf693922) Fix issue with drive letter under windows ([Kimball Thurston](@kdt3rd@gmail.com) 2019-11-06)\n* [``650da0d6``](https://github.com/AcademySoftwareFoundation/openexr/commit/650da0d63410d863c4a0aed15a6bee1b46b559cb) Extract to function, protect against infinite loop ([Kimball Thurston](@kdt3rd@gmail.com) 2019-11-06)\n* [``df768ec8``](https://github.com/AcademySoftwareFoundation/openexr/commit/df768ec8a97adb82947fc4b92a199db9a38c044c) Fixes #593, others - issues with pyilmbase install ([Kimball Thurston](@kdt3rd@gmail.com) 2019-11-05)\n* [``ed4807b9``](https://github.com/AcademySoftwareFoundation/openexr/commit/ed4807b9e4dc8d94ce79d0b2ed36acc548bee57e) Take DESTDIR into account when creating library symlinks ([Antonio Rojas](@arojas@archlinux.org) 2019-10-19)\n* [``f1b017c8``](https://github.com/AcademySoftwareFoundation/openexr/commit/f1b017c8029b529c5c5ed01b6ad1b10a0e48036c) No longer install ImfMisc.h ([Cary Phillips](@cary@ilm.com) 2019-10-31)\n* [``a571bdfe``](https://github.com/AcademySoftwareFoundation/openexr/commit/a571bdfe42866a1f1c579114e2fcae8318172c21) add boost to python module link library ([Jens Lindgren](@lindgren_jens@hotmail.com) 2019-10-22)\n* [``cf8b35c9``](https://github.com/AcademySoftwareFoundation/openexr/commit/cf8b35c9bbde9ea78036af2fda04a7c6e9c9a399) Fix overzealous removal of if statements breaking all builds except win32 ([Kimball Thurston](@kdt3rd@gmail.com) 2019-11-07)\n* [``44266538``](https://github.com/AcademySoftwareFoundation/openexr/commit/442665384d44e464c68381d560f08bea295b9e04) Handle python2 not being installed, but python3 being present ([Kimball Thurston](@kdt3rd@gmail.com) 2019-11-07)\n* [``1eb2df5a``](https://github.com/AcademySoftwareFoundation/openexr/commit/1eb2df5aa219a819153bb891dc4488875259fb28) Fix issue with defines not being set correctly for win32 ([Kimball Thurston](@kdt3rd@gmail.com) 2019-11-07)\n* [``8a05994a``](https://github.com/AcademySoftwareFoundation/openexr/commit/8a05994a86fabf39f18890928ee5cef1913fa85a) Re-enable Boost_NO_BOOST_CMAKE by default, document, clean up status messages ([Kimball Thurston](@kdt3rd@gmail.com) 2019-11-07)\n* [``40e68bb9``](https://github.com/AcademySoftwareFoundation/openexr/commit/40e68bb9f38bf791594ccbaf1320ec520f58180b) Set CMP0074 such that people who set Boost_ROOT won't get warnings ([Kimball Thurston](@kdt3rd@gmail.com) 2019-11-07)\n* [``b021db40``](https://github.com/AcademySoftwareFoundation/openexr/commit/b021db409cfe52a9f28ad432897552bee735aeee) ensure paths are canonicalized by get_filename_component prior to comparing ([Kimball Thurston](@kdt3rd@gmail.com) 2019-11-07)\n* [``7e0714f2``](https://github.com/AcademySoftwareFoundation/openexr/commit/7e0714f279fdb42956235bf4141c59f382b6c3a1) Fix issue with drive letter under windows ([Kimball Thurston](@kdt3rd@gmail.com) 2019-11-06)\n* [``89dceca8``](https://github.com/AcademySoftwareFoundation/openexr/commit/89dceca80dc28fbabf262e38c9e1acf4863d97f6) Extract to function, protect against infinite loop ([Kimball Thurston](@kdt3rd@gmail.com) 2019-11-06)\n* [``599e5211``](https://github.com/AcademySoftwareFoundation/openexr/commit/599e52119d01004d6c5252f1070073fbd1518bfa) Fixes #593, others - issues with pyilmbase install ([Kimball Thurston](@kdt3rd@gmail.com) 2019-11-05)\n* [``0b26a9de``](https://github.com/AcademySoftwareFoundation/openexr/commit/0b26a9dedda4924841323677f1ce0bce37bfbeb4) Fix #595 and others, issue with pkgconfig generation under cmake ([Kimball Thurston](@kdt3rd@gmail.com) 2019-11-05)\n* [``4e54bde7``](https://github.com/AcademySoftwareFoundation/openexr/commit/4e54bde78f65c0fef8a9f794aaacea07813fba09) Take DESTDIR into account when creating library symlinks ([Antonio Rojas](@arojas@archlinux.org) 2019-10-19)\n* [``a2c12ec3``](https://github.com/AcademySoftwareFoundation/openexr/commit/a2c12ec3619de1923de86436c134be458523e5fd) No longer install ImfMisc.h ([Cary Phillips](@cary@ilm.com) 2019-10-31)\n* [``04aa9d33``](https://github.com/AcademySoftwareFoundation/openexr/commit/04aa9d332718748da0afa30dbb66e03b9ea789ab) formatting tweaks ([Cary Phillips](@cary@ilm.com) 2019-10-31)\n* [``29af8e8b``](https://github.com/AcademySoftwareFoundation/openexr/commit/29af8e8b50373d3bb8de38486ac3973f9758575d) formatting tweaks ([Cary Phillips](@cary@ilm.com) 2019-10-31)\n* [``9c876646``](https://github.com/AcademySoftwareFoundation/openexr/commit/9c8766467bb738787dd2bdde527f3391d2da7058) formatting tweaks ([Cary Phillips](@cary@ilm.com) 2019-10-31)\n* [``b79e44c6``](https://github.com/AcademySoftwareFoundation/openexr/commit/b79e44c6e2c41b2e7362f0d7b5517ea1ce4b56e8) formatting tweaks ([Cary Phillips](@cary@ilm.com) 2019-10-31)\n* [``d31c84e3``](https://github.com/AcademySoftwareFoundation/openexr/commit/d31c84e3f2db70dd247578ea2cdbd3d3ae3c4157) formatting tweaks ([Cary Phillips](@cary@ilm.com) 2019-10-31)\n* [``b459acdc``](https://github.com/AcademySoftwareFoundation/openexr/commit/b459acdc485e8f1cc280700157642a607637eb4d) README formatting tweaks ([Cary Phillips](@cary@ilm.com) 2019-10-31)\n* [``c5931e54``](https://github.com/AcademySoftwareFoundation/openexr/commit/c5931e548d354c45a9107f690bc81a9b8400ea76) image tweak ([Cary Phillips](@cary@ilm.com) 2019-10-31)\n* [``c0469c8c``](https://github.com/AcademySoftwareFoundation/openexr/commit/c0469c8c44e59eb33f51db4c1480415b5713fa40) tweak image ([Cary Phillips](@cary@ilm.com) 2019-10-31)\n* [``15d8706b``](https://github.com/AcademySoftwareFoundation/openexr/commit/15d8706bc2692b05a5818de142644dfa3dca26d9) tweak to image in README.md ([Cary Phillips](@cary@ilm.com) 2019-10-31)\n* [``e993b8f4``](https://github.com/AcademySoftwareFoundation/openexr/commit/e993b8f434c8f663a0b095ba819f9f77e9f7e888) tweaks to the mission statement ([Cary Phillips](@cary@ilm.com) 2019-10-31)\n* [``df4315a4``](https://github.com/AcademySoftwareFoundation/openexr/commit/df4315a4ecafd2190387cdcc73e3ba9caaec296f) updated mission statement in README.md ([Cary Phillips](@cary@ilm.com) 2019-10-21)\n* [``5147f255``](https://github.com/AcademySoftwareFoundation/openexr/commit/5147f255c43049e2ff38dba903b8db4c350a6a35) Added mission statement to README.md ([Cary Phillips](@cary@ilm.com) 2019-10-17)\n* [``4527b6f3``](https://github.com/AcademySoftwareFoundation/openexr/commit/4527b6f351bca040a70470b93d67704e5b30d5f3) typo ([Cary Phillips](@cary@ilm.com) 2019-10-24)\n* [``ca31d92e``](https://github.com/AcademySoftwareFoundation/openexr/commit/ca31d92e5a8f0dbd19a1cbf428432adc4a67e63e) TSC Meeting notes 2019-10-24 ([Cary Phillips](@cary@ilm.com) 2019-10-24)\n* [``4273e84f``](https://github.com/AcademySoftwareFoundation/openexr/commit/4273e84f86fe27392dec53a5cef900caf6727154) Update Azure build to work with new branch. ([Christina Tempelaar-Lietz](@xlietz@gmail.com) 2019-10-26)\n* [``e53ebd3e``](https://github.com/AcademySoftwareFoundation/openexr/commit/e53ebd3ef677ab983f83f927f6525efcb5dcb995) Fix int32 overflow bugs with deep images ([Larry Gritz](@lg@larrygritz.com) 2019-10-17)\n* [``486ff105``](https://github.com/AcademySoftwareFoundation/openexr/commit/486ff10547d034530c5190bbef6181324b42c209) Prepare 2.4 release branch ([Larry Gritz](@lg@larrygritz.com) 2019-10-24)\n* [``c1c82f7d``](https://github.com/AcademySoftwareFoundation/openexr/commit/c1c82f7d2582fb74ad53e5cd1b6525e8dcdfa492) add boost to python module link library ([Jens Lindgren](@lindgren_jens@hotmail.com) 2019-10-22)\n* [``a3c246b3``](https://github.com/AcademySoftwareFoundation/openexr/commit/a3c246b335d44fef35a66f6da36444d9f812bbf5) keep all values word-aligned in IlmImfTest testLargeDataWindowOffsets ([Peter Hillman](@peterh@wetafx.co.nz) 2019-10-24)\n* [``5db03642``](https://github.com/AcademySoftwareFoundation/openexr/commit/5db0364244d0e27a44dc245f8a0c686d76471e91) fix Contrib/DtexToExr/DtexToExr in .gitignore ([Cary Phillips](@cary@ilm.com) 2019-10-17)\n* [``a4b69af6``](https://github.com/AcademySoftwareFoundation/openexr/commit/a4b69af6a714f7a267da90d2cd934c2bb89dc56e) add PyIlmBaseConfigInternal.h and Contrib/DtexToExr to .gitignore ([Cary Phillips](@cary@ilm.com) 2019-10-17)\n* [``eadfbf82``](https://github.com/AcademySoftwareFoundation/openexr/commit/eadfbf82875cce8106047c933c0b053809a8ff74) Fix int32 overflow bugs with deep images ([Larry Gritz](@lg@larrygritz.com) 2019-10-17)\n* [``eef4c99d``](https://github.com/AcademySoftwareFoundation/openexr/commit/eef4c99d08f7b31a5d392024031a4e4b447df1b5) TSC Meeting notes for 2019-10-17 ([Cary Phillips](@cary@ilm.com) 2019-10-17)\n* [``046b2f75``](https://github.com/AcademySoftwareFoundation/openexr/commit/046b2f75700044e6b581cba437e0f86a6f9d625c) TSC Meeting Notes 2019-10-3 ([Cary Phillips](@cary@ilm.com) 2019-10-17)\n* [``e65b3890``](https://github.com/AcademySoftwareFoundation/openexr/commit/e65b38903bc4259295f042b4f3f442ba2aca7deb) removed unnecessary .m4 files ([Cary Phillips](@cary@ilm.com) 2019-10-17)\n* [``cb162323``](https://github.com/AcademySoftwareFoundation/openexr/commit/cb16232387a8dabf75797ff8d3015594a7a87abe) Fixed various MacOS Azure pipeline issues, all tests run now. ([Christina Tempelaar-Lietz](@xlietz@gmail.com) 2019-10-09)\n* [``aef48d68``](https://github.com/AcademySoftwareFoundation/openexr/commit/aef48d6811df5d1ba1a446df0c4d039444d18b32) Fix links ([John Mertic](@jmertic@linuxfoundation.org) 2019-10-14)\n* [``7e7e0d47``](https://github.com/AcademySoftwareFoundation/openexr/commit/7e7e0d476e3ab0a38df50c387964ead1f8896433) Explicitly define destructors. Suppress SonarCloud bug reports for array index operators. ([Christina Tempelaar-Lietz](@xlietz@gmail.com) 2019-10-07)\n* [``d8fc18e8``](https://github.com/AcademySoftwareFoundation/openexr/commit/d8fc18e8edd6d7db055975f6ad0a02d185c188eb) Removed unreachable return statement. ([Christina Tempelaar-Lietz](@xlietz@gmail.com) 2019-10-07)\n* [``a2a133ad``](https://github.com/AcademySoftwareFoundation/openexr/commit/a2a133ad266a1d65ad5410f43f2949a43834a8f6) More NOSONAR suppressions in PyImath. ([Christina Tempelaar-Lietz](@xlietz@gmail.com) 2019-10-07)\n* [``2b64316c``](https://github.com/AcademySoftwareFoundation/openexr/commit/2b64316c8272111120b628d1395200b4107c7d64) Change 'a!=a' to std::isnan() to fix Sonar \"bug\", added infinity checks ([Christina Tempelaar-Lietz](@xlietz@gmail.com) 2019-10-07)\n* [``bf1288de``](https://github.com/AcademySoftwareFoundation/openexr/commit/bf1288def9c09176cdf6658a58934ec018e33d24) Fix static analysis warning re: potential null pointer dereference. ([Christina Tempelaar-Lietz](@xlietz@gmail.com) 2019-10-03)\n* [``247dbacd``](https://github.com/AcademySoftwareFoundation/openexr/commit/247dbacd5ddde6766f6362a3109ea721f378fc4a) Edit macro to use only a single instance of '#'. ([Christina Tempelaar-Lietz](@xlietz@gmail.com) 2019-10-03)\n* [``e2860cec``](https://github.com/AcademySoftwareFoundation/openexr/commit/e2860cec59853ba5552f4dc39e55b341f362e54e) Remove unreached 'return'. ([Christina Tempelaar-Lietz](@xlietz@gmail.com) 2019-10-03)\n* [``6337096e``](https://github.com/AcademySoftwareFoundation/openexr/commit/6337096e825036c2da04a3bca76c506610bfb21b) Remove unnecessary break statements. ([Christina Tempelaar-Lietz](@xlietz@gmail.com) 2019-10-03)\n* [``e1ff97f1``](https://github.com/AcademySoftwareFoundation/openexr/commit/e1ff97f15755963b4dd19aba052d4321af0c58f1) TSC meeting notes for the last 3 weeks ([Cary Phillips](@cary@ilm.com) 2019-09-24)\n* [``2f4937ba``](https://github.com/AcademySoftwareFoundation/openexr/commit/2f4937baf455feabe1bb0c837c7aa776aaa60bd3) fixed date of last TSC meeting ([Cary Phillips](@cary@ilm.com) 2019-10-02)\n* [``9a4a0c56``](https://github.com/AcademySoftwareFoundation/openexr/commit/9a4a0c567be8dd9e8d237ea7e8409041070e0e2b) TSC meeting notes from 9/26/2019 ([Cary Phillips](@cary@ilm.com) 2019-10-02)\n* [``4dec0313``](https://github.com/AcademySoftwareFoundation/openexr/commit/4dec0313570f021661302ae776d25edb1950ba97) TSC meeting notes for the last 3 weeks ([Cary Phillips](@cary@ilm.com) 2019-09-24)\n* [``f82e1989``](https://github.com/AcademySoftwareFoundation/openexr/commit/f82e1989f462e535e571aca2bf3f78edf9dde28e) Added tests for all exception types derived from BaseExc. ([Cary Phillips](@cary@ilm.com) 2019-09-22)\n* [``a82c4c23``](https://github.com/AcademySoftwareFoundation/openexr/commit/a82c4c23d4b3db281db3bba109b3ec272dccb109) operator = (const BaseExc& be) throw () = delete; ([Cary Phillips](@cary@ilm.com) 2019-09-22)\n* [``09a14a9e``](https://github.com/AcademySoftwareFoundation/openexr/commit/09a14a9ee3ec9ee2d030e7da3d5b36c01c7cc303) change floating-point loop variables to iterate on a fixed-size array. ([Cary Phillips](@cary@ilm.com) 2019-09-22)\n* [``bd7a04f7``](https://github.com/AcademySoftwareFoundation/openexr/commit/bd7a04f7c75e6392595e00895c720524aae82ec3) Change Azure SonarCloud job to run weekly. ([Christina Tempelaar-Lietz](@xlietz@gmail.com) 2019-09-29)\n* [``8dd91127``](https://github.com/AcademySoftwareFoundation/openexr/commit/8dd9112733ae15f1c108b64124e6c77a11f3eb83) removed references to the CVE's that are not specific to OpenEXR ([Cary Phillips](@cary@ilm.com) 2019-09-20)\n* [``33d1ac61``](https://github.com/AcademySoftwareFoundation/openexr/commit/33d1ac61d46c075171cb37cccc21736ab4cf03d8) CVE listing in SECURITY.md ([Cary Phillips](@cary@ilm.com) 2019-09-19)\n\n## Version 2.4.3 (May 17, 2021)\n\nPatch release that addresses the following security vulnerabilities:\n\n* [CVE-2021-20296](https://nvd.nist.gov/vuln/detail/CVE-2021-20296) Segv on unknown address in Imf_2_5::hufUncompress - Null Pointer dereference ([817](https://github.com/AcademySoftwareFoundation/openexr/pull/817))\n* [CVE-2021-3479](https://nvd.nist.gov/vuln/detail/CVE-2021-3479) Out-of-memory in openexr_exrenvmap_fuzzer ([830](https://github.com/AcademySoftwareFoundation/openexr/pull/830))\n* [CVE-2021-3478](https://nvd.nist.gov/vuln/detail/CVE-2021-3478) Out-of-memory in openexr_exrcheck_fuzzer ([863](https://github.com/AcademySoftwareFoundation/openexr/pull/863))\n* [CVE-2021-3477](https://nvd.nist.gov/vuln/detail/CVE-2021-3477) Heap-buffer-overflow in Imf_2_5::DeepTiledInputFile::readPixelSampleCounts ([861](https://github.com/AcademySoftwareFoundation/openexr/pull/861))\n* [CVE-2021-3476](https://nvd.nist.gov/vuln/detail/CVE-2021-3476) Undefined-shift in Imf_2_5::unpack14 ([832](https://github.com/AcademySoftwareFoundation/openexr/pull/832))\n* [CVE-2021-3475](https://nvd.nist.gov/vuln/detail/CVE-2021-3475) Integer-overflow in Imf_2_5::calculateNumTiles ([825](https://github.com/AcademySoftwareFoundation/openexr/pull/825))\n* [CVE-2021-3474](https://nvd.nist.gov/vuln/detail/CVE-2021-3474) Undefined-shift in Imf_2_5::FastHufDecoder::FastHufDecoder ([818](https://github.com/AcademySoftwareFoundation/openexr/pull/818))\n\nAlso:\n\n* [1013](https://github.com/AcademySoftwareFoundation/openexr/pull/1013) Fixed regression in Imath::succf() and Imath::predf() when negative values are given\n\n## Version 2.4.2 (June 15, 2020)\n\nThis is a patch release that includes fixes for the following security vulnerabilities:\n\n* [CVE-2020-15305](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15305) Invalid input could cause a heap-use-after-free error in DeepScanLineInputFile::DeepScanLineInputFile() \n* [CVE-2020-15306](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15306) Invalid chunkCount attributes could cause heap buffer overflow in getChunkOffsetTableSize() \n* [CVE-2020-15304](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15304) Invalid tiled input file could cause invalid memory access TiledInputFile::TiledInputFile() \n* OpenEXRConfig.h now correctly sets OPENEXR_PACKAGE_STRING to \"OpenEXR\" (rather than \"IlmBase\")\n\n### Merged Pull Requests\n\n* [755](https://github.com/AcademySoftwareFoundation/openexr/pull/755) Fix OPENEXR_PACKAGE_NAME\n* [738](https://github.com/AcademySoftwareFoundation/openexr/pull/738) always ignore chunkCount attribute unless it cannot be computed\n* [730](https://github.com/AcademySoftwareFoundation/openexr/pull/730) fix #728 - missing 'throw' in deepscanline error handling\n* [727](https://github.com/AcademySoftwareFoundation/openexr/pull/727) check null pointer in broken tiled file handling\n\n## Version 2.4.1 (February 11, 2020)\n\nPatch release with minor bug fixes.\n\n### Summary\n\n* Various fixes for memory leaks and invalid memory accesses\n* Various fixes for integer overflow with large images.\n* Various cmake fixes for build/install of python modules.\n* ImfMisc.h is no longer installed, since it's a private header.\n\n### Security Vulnerabilities\n\nThis version fixes the following security vulnerabilities:\n\n* [CVE-2020-11765](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11765) There is an off-by-one error in use of the ImfXdr.h read function by DwaCompressor::Classifier::ClasGsifier, leading to an out-of-bounds read.\n* [CVE-2020-11764](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11764) There is an out-of-bounds write in copyIntoFrameBuffer in ImfMisc.cpp.\n* [CVE-2020-11763](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11763) There is an std::vector out-of-bounds read and write, as demonstrated by ImfTileOffsets.cpp.\n* [CVE-2020-11762](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11762) There is an out-of-bounds read and write in DwaCompressor::uncompress in ImfDwaCompressor.cpp when handling the UNKNOWN compression case.\n* [CVE-2020-11761](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11761) There is an out-of-bounds read during Huffman uncompression, as demonstrated by FastHufDecoder::refill in ImfFastHuf.cpp.\n* [CVE-2020-11760](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11760) There is an out-of-bounds read during RLE uncompression in rleUncompress in ImfRle.cpp.\n* [CVE-2020-11759](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11759) Because of integer overflows in CompositeDeepScanLine::Data::handleDeepFrameBuffer and readSampleCountForLineBlock, an attacker can write to an out-of-bounds pointer.\n* [CVE-2020-11758](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11758) There is an out-of-bounds read in ImfOptimizedPixelReading.h.\n\n\n### Merged Pull Requests\n\n* [659](https://github.com/AcademySoftwareFoundation/openexr/pull/659) fix memory leaks and invalid memory accesses\n* [609](https://github.com/AcademySoftwareFoundation/openexr/pull/609) Fixes #593, others - issues with pyilmbase install \n* [605](https://github.com/AcademySoftwareFoundation/openexr/pull/605) No longer install ImfMisc.h \n* [603](https://github.com/AcademySoftwareFoundation/openexr/pull/603) Update Azure build to work with new RB-2.4 branch. \n* [596](https://github.com/AcademySoftwareFoundation/openexr/pull/596) Add Boost::Python to Python modules link libraries\n* [592](https://github.com/AcademySoftwareFoundation/openexr/pull/592) Take DESTDIR into account when creating library symlinks\n* [589](https://github.com/AcademySoftwareFoundation/openexr/pull/589) Fix int32 overflow bugs with deep images \n\n### Commits \\[ git log v2.4.0...v2.4.1\\]\n\n* [fix memory leaks and invalid memory accesses](https://github.com/AcademySoftwareFoundation/openexr/commit/e79d2296496a50826a15c667bf92bdc5a05518b4) ([Peter Hillman](@peterh@wetafx.co.nz) 2020-02-08)\n\n* [Fix overzealous removal of if statements breaking all builds except win32](https://github.com/AcademySoftwareFoundation/openexr/commit/031199cd4fc062dd7bfe902c6552cf22f6bfbbdb) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-11-07)\n\n* [Handle python2 not being installed, but python3 being present](https://github.com/AcademySoftwareFoundation/openexr/commit/8228578da6f86d17b9a2a3f8c6053f8b4ee3fb71) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-11-07)\n\n* [Fix issue with defines not being set correctly for win32](https://github.com/AcademySoftwareFoundation/openexr/commit/d10895ef0ad25dd60e68a2ab00bab7c0592f8c5b) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-11-07)\n\n* [Re-enable Boost_NO_BOOST_CMAKE by default, document, clean up status messages](https://github.com/AcademySoftwareFoundation/openexr/commit/b303f6788a434fd61e52c1bacb93a96c4c3440ea) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-11-07)\n\n* [Set CMP0074 such that people who set Boost_ROOT won't get warnings](https://github.com/AcademySoftwareFoundation/openexr/commit/8ec1440cbd999f17457be605150bc53395fbb334) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-11-07)\n\n* [ensure paths are canonicalized by get_filename_component prior to comparing](https://github.com/AcademySoftwareFoundation/openexr/commit/28d1cb256f1b46f120adb131e606b2699acc72d7) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-11-07)\n\n* [Fix issue with drive letter under windows](https://github.com/AcademySoftwareFoundation/openexr/commit/34ce16c2653d02fcef6a297a2a61112dbf693922) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-11-06)\n\n* [Extract to function, protect against infinite loop](https://github.com/AcademySoftwareFoundation/openexr/commit/650da0d63410d863c4a0aed15a6bee1b46b559cb) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-11-06)\n\n* [Fixes #593, others - issues with pyilmbase install](https://github.com/AcademySoftwareFoundation/openexr/commit/df768ec8a97adb82947fc4b92a199db9a38c044c) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-11-05)\n\n* [Take DESTDIR into account when creating library symlinks](https://github.com/AcademySoftwareFoundation/openexr/commit/ed4807b9e4dc8d94ce79d0b2ed36acc548bee57e) ([Antonio Rojas](@arojas@archlinux.org) 2019-10-19)\n\n* [No longer install ImfMisc.h](https://github.com/AcademySoftwareFoundation/openexr/commit/f1b017c8029b529c5c5ed01b6ad1b10a0e48036c) ([Cary Phillips](@cary@ilm.com) 2019-10-31)\n\n* [add boost to python module link library](https://github.com/AcademySoftwareFoundation/openexr/commit/a571bdfe42866a1f1c579114e2fcae8318172c21) ([Jens Lindgren](@lindgren_jens@hotmail.com) 2019-10-22)\n\n* [Update Azure build to work with new branch.](https://github.com/AcademySoftwareFoundation/openexr/commit/4273e84f86fe27392dec53a5cef900caf6727154) ([Christina Tempelaar-Lietz](@xlietz@gmail.com) 2019-10-26)\n\n* [Fix int32 overflow bugs with deep images](https://github.com/AcademySoftwareFoundation/openexr/commit/e53ebd3ef677ab983f83f927f6525efcb5dcb995) ([Larry Gritz](@lg@larrygritz.com) 2019-10-17)\n\n* [Prepare 2.4 release branch](https://github.com/AcademySoftwareFoundation/openexr/commit/486ff10547d034530c5190bbef6181324b42c209) ([Larry Gritz](@lg@larrygritz.com) 2019-10-24)\n\n## Version 2.4.0 (September 19, 2019)\n\n### Summary\n\n* Completely re-written CMake configuration files\n* Improved support for building on Windows, via CMake\n* Improved support for building on macOS, via CMake\n* All code compiles without warnings on gcc, clang, msvc\n* Cleanup of license and copyright notices\n* floating-point exception handling is disabled by default\n* New Slice::Make method to reliably compute base pointer for a slice.\n* Miscellaneous bug fixes\n\n### Security Vulnerabilities\n\nThis version fixes the following security vulnerabilities:\n\n* [CVE-2020-16589](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-16589) A head-based buffer overflow exists in Academy Software Foundation OpenEXR 2.3.0 in writeTileData in ImfTiledOutputFile.cpp that can cause a denial of service via a crafted EXR file.\n* [CVE-2020-16588](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-16588) A Null Pointer Deference issue exists in Academy Software Foundation OpenEXR 2.3.0 in generatePreview in makePreview.cpp that can cause a denial of service via a crafted EXR file.\n* [CVE-2020-16587](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-16587) A heap-based buffer overflow vulnerability exists in Academy Software Foundation OpenEXR 2.3.0 in chunkOffsetReconstruction in ImfMultiPartInputFile.cpp that can cause a denial of service via a crafted EXR file.\n* [CVE-2018-18444](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-18444) makeMultiView.cpp in exrmultiview in OpenEXR 2.3.0 has an out-of-bounds write, leading to an assertion failure or possibly unspecified other impact.\n* [CVE-2018-18443](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-18443) OpenEXR 2.3.0 has a memory leak in ThreadPool in IlmBase/IlmThread/IlmThreadPool.cpp, as demonstrated by exrmultiview.\n\n### Closed Issues\n\n* [529](https://github.com/AcademySoftwareFoundation/openexr/issues/529) The OpenEXR_viewer can't be installed successfully due to the Cg support\n* [511](https://github.com/AcademySoftwareFoundation/openexr/issues/511) A confused problem in the EXR to JPEG\n* [494](https://github.com/AcademySoftwareFoundation/openexr/issues/494) SEGV exrmakepreview in ImfTiledOutputFile.cpp:458\n* [493](https://github.com/AcademySoftwareFoundation/openexr/issues/493) SEGV exrmakepreview in makePreview.cpp:132\n* [491](https://github.com/AcademySoftwareFoundation/openexr/issues/491) SEGV exrheader in ImfMultiPartInputFile.cpp:579\n* [488](https://github.com/AcademySoftwareFoundation/openexr/issues/488) Wiki has outdated info\n* [462](https://github.com/AcademySoftwareFoundation/openexr/issues/462) Inconsistent line terminators (CRLF)\n* [461](https://github.com/AcademySoftwareFoundation/openexr/issues/461) Wrong LC_RPATH after make install (cmake setup on macos)\n* [457](https://github.com/AcademySoftwareFoundation/openexr/issues/457) New CMake setup fails on cmake 3.12\n* [455](https://github.com/AcademySoftwareFoundation/openexr/issues/455) Build for mac using cmake to Xcode fails to compile\n* [449](https://github.com/AcademySoftwareFoundation/openexr/issues/449) OpenEXR.cpp:36:10: fatal error: 'ImathBox.h' file not found\n* [424](https://github.com/AcademySoftwareFoundation/openexr/issues/424) Integrating with OSS-Fuzz\n* [421](https://github.com/AcademySoftwareFoundation/openexr/issues/421) How to normalize multi-channel exr image?\n* [400](https://github.com/AcademySoftwareFoundation/openexr/issues/400) Create security@openexr.com and info@openexr.com addresses\n* [398](https://github.com/AcademySoftwareFoundation/openexr/issues/398) Document CVE's in CHANGES.md release notes file\n* [396](https://github.com/AcademySoftwareFoundation/openexr/issues/396) Set up a CREDITS.md file\n* [395](https://github.com/AcademySoftwareFoundation/openexr/issues/395) Migrate CLA's from openexr.com to the GitHub repo\n* [394](https://github.com/AcademySoftwareFoundation/openexr/issues/394) Properly document the OpenEXR coding style\n* [393](https://github.com/AcademySoftwareFoundation/openexr/issues/393) Set up CODEOWNERS file\n* [389](https://github.com/AcademySoftwareFoundation/openexr/issues/389) fix -Wall compiler warnings\n* [388](https://github.com/AcademySoftwareFoundation/openexr/issues/388) OpenEXR build fails with multiple errors\n* [381](https://github.com/AcademySoftwareFoundation/openexr/issues/381) Replace deprecated FindPythonLibs in CMakeLists.txt\n* [380](https://github.com/AcademySoftwareFoundation/openexr/issues/380) undefined symbol: _ZTIN7Iex_2_27BaseExcE\n* [379](https://github.com/AcademySoftwareFoundation/openexr/issues/379) ZLIB_LIBRARY ZLIB_INCLUDE_DIR being ignored (LNK2019 errors) in OpenEXR\\IlmImf\\IlmImf.vcxproj\n* [377](https://github.com/AcademySoftwareFoundation/openexr/issues/377) 2.3.0: test suite is failing\n* [364](https://github.com/AcademySoftwareFoundation/openexr/issues/364) Standalone build of openexr on windows - (with already installed ilmbase)\n* [363](https://github.com/AcademySoftwareFoundation/openexr/issues/363) ``OpenEXRSettings.cmake`` is missing from the release tarball\n* [362](https://github.com/AcademySoftwareFoundation/openexr/issues/362) Cmake macro ``SET_ILMBASE_INCLUDE_DIRS`` assumes\n* [360](https://github.com/AcademySoftwareFoundation/openexr/issues/360) Specified Boost.Python not found on Boost versions < 1.67\n* [359](https://github.com/AcademySoftwareFoundation/openexr/issues/359) [VS2015] Compile error C2782: 'ssize_t' in PyImathFixedMatrix\n* [357](https://github.com/AcademySoftwareFoundation/openexr/issues/357) Move ILMBASE_HAVE_CONTROL_REGISTER_SUPPORT to a private header\n* [353](https://github.com/AcademySoftwareFoundation/openexr/issues/353) Add --with-cg-libdir option to support arch dependant Cg library paths\n* [352](https://github.com/AcademySoftwareFoundation/openexr/issues/352) buffer-overflow\n* [351](https://github.com/AcademySoftwareFoundation/openexr/issues/351) Out of Memory \n* [350](https://github.com/AcademySoftwareFoundation/openexr/issues/350) heap-buffer-overflow\n* [348](https://github.com/AcademySoftwareFoundation/openexr/issues/348) Possible compile/install issues in PyIlmBase with multiple jobs\n* [343](https://github.com/AcademySoftwareFoundation/openexr/issues/343) CMake issues on Windows\n* [342](https://github.com/AcademySoftwareFoundation/openexr/issues/342) IlmImf CMake dependency issue\n* [340](https://github.com/AcademySoftwareFoundation/openexr/issues/340) Cannot figure out how to build OpenEXR under mingw64 with v2.3.0\n* [333](https://github.com/AcademySoftwareFoundation/openexr/issues/333) openexr 2.3.0 static cmake build broken.\n* [302](https://github.com/AcademySoftwareFoundation/openexr/issues/302) Error when linking Half project: unresolved external symbol \"private: static union half::uif const * const half::_toFloat\" (?_toFloat@half@@0QBTuif@1@B)\n* [301](https://github.com/AcademySoftwareFoundation/openexr/issues/301) How to link different IlmBase library names according to Debug/Release configuration, when building OpenEXR with CMake + VS2015?\n* [294](https://github.com/AcademySoftwareFoundation/openexr/issues/294) Problem building OpenEXR-2.2.1 in Visual Studio 2015 x64\n* [290](https://github.com/AcademySoftwareFoundation/openexr/issues/290) Out Of Memory in Pxr24Compressor (79678745)\n* [288](https://github.com/AcademySoftwareFoundation/openexr/issues/288) Out of Memory in B44Compressor (79258415)\n* [282](https://github.com/AcademySoftwareFoundation/openexr/issues/282) IlmBase should link pthread\n* [281](https://github.com/AcademySoftwareFoundation/openexr/issues/281) Error in installing OpenEXR\n* [276](https://github.com/AcademySoftwareFoundation/openexr/issues/276) The savanah.nongnu.org tar.gz hosting\n* [274](https://github.com/AcademySoftwareFoundation/openexr/issues/274) Cmake installation of ilmbase places .dll files under ``/lib`` instead of ``/bin``\n* [271](https://github.com/AcademySoftwareFoundation/openexr/issues/271) heap-buffer-overflow\n* [270](https://github.com/AcademySoftwareFoundation/openexr/issues/270) Out of Memory in TileOffsets (73566621)\n* [268](https://github.com/AcademySoftwareFoundation/openexr/issues/268) Invalid Shift at FastHufDecoder (72367575)\n* [267](https://github.com/AcademySoftwareFoundation/openexr/issues/267) Cast Overflow at FastHufDecoder (72375479)\n* [266](https://github.com/AcademySoftwareFoundation/openexr/issues/266) Divide by Zero at calculateNumTiles (72239767)\n* [265](https://github.com/AcademySoftwareFoundation/openexr/issues/265) Signed Integer Overflow in getTiledChunkOffsetTableSize (72377177)\n* [264](https://github.com/AcademySoftwareFoundation/openexr/issues/264) Signed Integer Overflow in calculateNumTiles (73181093)\n* [263](https://github.com/AcademySoftwareFoundation/openexr/issues/263) Signed Integer Overflow in chunkOffsetReconstruction (72873449, 73090589)\n* [262](https://github.com/AcademySoftwareFoundation/openexr/issues/262) Heap Out-of-Bounds write in Imf_2_2::copyIntoFrameBuffer (72940266)\n* [261](https://github.com/AcademySoftwareFoundation/openexr/issues/261) Heap Out of Bounds Read in TiledInputFile (72228841)\n* [259](https://github.com/AcademySoftwareFoundation/openexr/issues/259) Heap Out of Bounds Access (72839282)\n* [257](https://github.com/AcademySoftwareFoundation/openexr/issues/257) Out of Memory / Invalid allocation in lmfArray resizeErase (72828572, 72837441)\n* [255](https://github.com/AcademySoftwareFoundation/openexr/issues/255) Process for reporting security bugs\n* [254](https://github.com/AcademySoftwareFoundation/openexr/issues/254) [VS 2015] Can't run tests and OpenVDB compile errors\n* [253](https://github.com/AcademySoftwareFoundation/openexr/issues/253) C++11-style compile-time type information for ``half``.\n* [252](https://github.com/AcademySoftwareFoundation/openexr/issues/252) ``std::numeric_limits<half>::digits10` value is wrong.\n* [250](https://github.com/AcademySoftwareFoundation/openexr/issues/250) SO version change in 2.2.1\n* [246](https://github.com/AcademySoftwareFoundation/openexr/issues/246) half.h default user-provided constructor breaks c++ semantics (value/zero initialization vs default initialization)\n* [244](https://github.com/AcademySoftwareFoundation/openexr/issues/244) Cannot write to Z channel\n* [240](https://github.com/AcademySoftwareFoundation/openexr/issues/240) CpuId' was not declared in this scope\n* [239](https://github.com/AcademySoftwareFoundation/openexr/issues/239) pyilmbase error vs2015 with boost1.61 and python27 please help ，alse error\n* [238](https://github.com/AcademySoftwareFoundation/openexr/issues/238)  heap-based buffer overflow in exrmaketiled \n* [237](https://github.com/AcademySoftwareFoundation/openexr/issues/237) Can RgbaOutputFile use 32-bit float?\n* [234](https://github.com/AcademySoftwareFoundation/openexr/issues/234) How to link compress2, uncompress and compress on 64 bit Windows 7 & Visual Studio 2015 when building openexr?\n* [232](https://github.com/AcademySoftwareFoundation/openexr/issues/232) Multiple segmentation faults CVE-2017-9110 to CVE-2017-9116\n* [231](https://github.com/AcademySoftwareFoundation/openexr/issues/231) Half.h stops OpenEXR from compiling\n* [230](https://github.com/AcademySoftwareFoundation/openexr/issues/230) Imf::OutputFile Produce binary different files\n* [226](https://github.com/AcademySoftwareFoundation/openexr/issues/226) IMathExc - multiple definitions on linking.\n* [224](https://github.com/AcademySoftwareFoundation/openexr/issues/224) Make PyIlmBase compatible with Python 3.x\n* [217](https://github.com/AcademySoftwareFoundation/openexr/issues/217) Issue with optimized build compiled with Intel C/C++ compiler (ICC)\n* [213](https://github.com/AcademySoftwareFoundation/openexr/issues/213) AddressSanitizer CHECK failed in ImageMagick fuzz test.  \n* [208](https://github.com/AcademySoftwareFoundation/openexr/issues/208) build issues on OSX: ``ImfDwaCompressorSimd.h:483:no such instruction: vmovaps (%rsi), %ymm0``\n* [205](https://github.com/AcademySoftwareFoundation/openexr/issues/205) Building with VS 2015\n* [202](https://github.com/AcademySoftwareFoundation/openexr/issues/202) Documentation error: File Layout \"Verson Field\" lists wrong bits\n* [199](https://github.com/AcademySoftwareFoundation/openexr/issues/199) Unexpected rpaths on macOS\n* [194](https://github.com/AcademySoftwareFoundation/openexr/issues/194) RLE Broken for 32-bit formats\n* [191](https://github.com/AcademySoftwareFoundation/openexr/issues/191) PyIlmBase Cmake unable to find Boost\n* [189](https://github.com/AcademySoftwareFoundation/openexr/issues/189) store to misaligned address / for type 'int64_t', which requires 8 byte alignment\n* [188](https://github.com/AcademySoftwareFoundation/openexr/issues/188) iex_debugTrap link error\n* [182](https://github.com/AcademySoftwareFoundation/openexr/issues/182) Many C4275 warning compiling on Windows\n* [176](https://github.com/AcademySoftwareFoundation/openexr/issues/176) Implement a canonical FindIlmbase.cmake\n* [166](https://github.com/AcademySoftwareFoundation/openexr/issues/166) CMake static build of OpenEXR 2.2 fails to link dwaLookups on Linux\n* [165](https://github.com/AcademySoftwareFoundation/openexr/issues/165) Clang compilation warnings\n* [164](https://github.com/AcademySoftwareFoundation/openexr/issues/164) OpenEXR.pc is not created during \"configure\" stage.\n* [163](https://github.com/AcademySoftwareFoundation/openexr/issues/163) Problems building the OpenEXR-2.2.0\n* [160](https://github.com/AcademySoftwareFoundation/openexr/issues/160) Visual Studio 2013 not linking properly with IlmThread\n* [158](https://github.com/AcademySoftwareFoundation/openexr/issues/158) Python3 support\n* [150](https://github.com/AcademySoftwareFoundation/openexr/issues/150) build issue, debian 7.0 x64\n* [139](https://github.com/AcademySoftwareFoundation/openexr/issues/139) configure scripts contain bashisms\n* [134](https://github.com/AcademySoftwareFoundation/openexr/issues/134) DWA compressor fails to compile on Win/Mac for some compiler versions\n* [132](https://github.com/AcademySoftwareFoundation/openexr/issues/132) Wrong namespaces used in DWA Compressor.\n* [125](https://github.com/AcademySoftwareFoundation/openexr/issues/125) cmake: cannot link against static ilmbase libraries\n* [123](https://github.com/AcademySoftwareFoundation/openexr/issues/123) cmake: allow building of static and dynamic libs at the same time\n* [105](https://github.com/AcademySoftwareFoundation/openexr/issues/105) Building pyilmbase 1.0.0 issues\n* [098](https://github.com/AcademySoftwareFoundation/openexr/issues/98) Race condition in creation of LockedTypeMap and registerAttributeTypes \n* [095](https://github.com/AcademySoftwareFoundation/openexr/issues/95) Compile fail with MinGW-w64 on Windows\n* [094](https://github.com/AcademySoftwareFoundation/openexr/issues/94) CMake does not generate \"toFloat.h\" with Ninja\n* [092](https://github.com/AcademySoftwareFoundation/openexr/issues/92) MultiPartOutputFile API fails when single part has no type\n* [089](https://github.com/AcademySoftwareFoundation/openexr/issues/89) gcc 4.8 compilation issues\n* [086](https://github.com/AcademySoftwareFoundation/openexr/issues/86) VS 2010 broken: exporting std::string subclass crashes\n* [079](https://github.com/AcademySoftwareFoundation/openexr/issues/79) compile openexr with mingw 64 bit\n* [067](https://github.com/AcademySoftwareFoundation/openexr/issues/67) testBox failure on i386\n* [050](https://github.com/AcademySoftwareFoundation/openexr/issues/50) Recommended way of opening an EXR file in python?\n* [015](https://github.com/AcademySoftwareFoundation/openexr/issues/15) IlmImf Thread should report an 'optimal' number ofthreads to use.\n\n### Merged Pull Requests\n\n* [541](https://github.com/AcademySoftwareFoundation/openexr/pull/541) TSC meeting notes Aug 22, 2019\n* [540](https://github.com/AcademySoftwareFoundation/openexr/pull/540) Fix exports when compiling DLLs enabled with mingw\n* [539](https://github.com/AcademySoftwareFoundation/openexr/pull/539) Force exception handling / unwind disposition under msvc\n* [538](https://github.com/AcademySoftwareFoundation/openexr/pull/538) Add option to control whether pyimath uses the fp exception mechanism\n* [537](https://github.com/AcademySoftwareFoundation/openexr/pull/537) Set default value for buildSharedLibs\n* [536](https://github.com/AcademySoftwareFoundation/openexr/pull/536) Force the python binding libraries to shared\n* [535](https://github.com/AcademySoftwareFoundation/openexr/pull/535) Fix cmake warnings, fix check for numpy\n* [534](https://github.com/AcademySoftwareFoundation/openexr/pull/534) Create a \"holder\" object to fix stale reference to array\n* [533](https://github.com/AcademySoftwareFoundation/openexr/pull/533) Disable the debug postfix for the python modules\n* [532](https://github.com/AcademySoftwareFoundation/openexr/pull/532) explicitly add the boost includes to the target\n* [531](https://github.com/AcademySoftwareFoundation/openexr/pull/531) Update license for DreamWorks Lossy Compression\n* [530](https://github.com/AcademySoftwareFoundation/openexr/pull/530) Azure updates for MacOS/Windows/Linux\n* [528](https://github.com/AcademySoftwareFoundation/openexr/pull/528) brief notes of TSC meeting 2019-08-16\n* [526](https://github.com/AcademySoftwareFoundation/openexr/pull/526) Fix compile warnings from the latest merges\n* [525](https://github.com/AcademySoftwareFoundation/openexr/pull/525) Rework boost python search logic to be simpler and more robust\n* [524](https://github.com/AcademySoftwareFoundation/openexr/pull/524) Fix #268, issue with right shift in fast huf decoder\n* [523](https://github.com/AcademySoftwareFoundation/openexr/pull/523) Address issues with mingw and win32 wide filenames\n* [522](https://github.com/AcademySoftwareFoundation/openexr/pull/522) 2.4.0 release notes\n* [520](https://github.com/AcademySoftwareFoundation/openexr/pull/520) Add missing symbol export to Slice::Make\n* [519](https://github.com/AcademySoftwareFoundation/openexr/pull/519) TSC meeting notes August 8, 2019\n* [518](https://github.com/AcademySoftwareFoundation/openexr/pull/518) Makes building of fuzz test optional\n* [517](https://github.com/AcademySoftwareFoundation/openexr/pull/517) Added defines for DWAA and DWAB compression.\n* [516](https://github.com/AcademySoftwareFoundation/openexr/pull/516) changed AP_CPPFLAGS to AM_CPPFLAGS in PyImathNumpy/Makefile.am.\n* [515](https://github.com/AcademySoftwareFoundation/openexr/pull/515) add the files generated by bootstrap/configure to .gitignore.\n* [514](https://github.com/AcademySoftwareFoundation/openexr/pull/514) suppress SonarCloud warnings about unhandled exceptions\n* [512](https://github.com/AcademySoftwareFoundation/openexr/pull/512) Project documentation edits\n* [510](https://github.com/AcademySoftwareFoundation/openexr/pull/510) Added MacOS jobs to Azure pipeline\n* [509](https://github.com/AcademySoftwareFoundation/openexr/pull/509) Contrib cleanup\n* [503](https://github.com/AcademySoftwareFoundation/openexr/pull/503) TSC meeting notes from 7/25/2019\n* [501](https://github.com/AcademySoftwareFoundation/openexr/pull/501) license and copyright fixes\n* [500](https://github.com/AcademySoftwareFoundation/openexr/pull/500) Fix another set of warnings that crept in during previous fix merges\n* [498](https://github.com/AcademySoftwareFoundation/openexr/pull/498) Fix #491, issue with part number range check reconstructing chunk off…\n* [497](https://github.com/AcademySoftwareFoundation/openexr/pull/497) Fix logic for 1 pixel high/wide preview images (Fixes #493)\n* [495](https://github.com/AcademySoftwareFoundation/openexr/pull/495) Fix for #494: validate tile coordinates when doing copyPixels\n* [490](https://github.com/AcademySoftwareFoundation/openexr/pull/490) Normalize library naming between cmake and autoconf\n* [489](https://github.com/AcademySoftwareFoundation/openexr/pull/489) Refresh of README's\n* [487](https://github.com/AcademySoftwareFoundation/openexr/pull/487) Azure: updated docker containers, added windows install scripts.\n* [486](https://github.com/AcademySoftwareFoundation/openexr/pull/486) Fix #246, add type traits check\n* [483](https://github.com/AcademySoftwareFoundation/openexr/pull/483) Large dataWindow Offset test: for discussion\n* [482](https://github.com/AcademySoftwareFoundation/openexr/pull/482) Update Azure Linux/SonarCloud jobs to work with new build\n* [481](https://github.com/AcademySoftwareFoundation/openexr/pull/481) rewrite of build and installation documentation in INSTALL.md\n* [480](https://github.com/AcademySoftwareFoundation/openexr/pull/480) Put all runtime artefacts in a single folder to help win32 find dlls\n* [479](https://github.com/AcademySoftwareFoundation/openexr/pull/479) Fix compile warnings\n* [478](https://github.com/AcademySoftwareFoundation/openexr/pull/478) Fixes #353, support for overriding Cg libdir\n* [477](https://github.com/AcademySoftwareFoundation/openexr/pull/477) Fix #224, imath python code such that tests pass under python3\n* [476](https://github.com/AcademySoftwareFoundation/openexr/pull/476) Fix dos files to unix, part of #462\n* [475](https://github.com/AcademySoftwareFoundation/openexr/pull/475) Fixes #252, incorrect math computing half digits\n* [474](https://github.com/AcademySoftwareFoundation/openexr/pull/474) Fixes #139\n* [473](https://github.com/AcademySoftwareFoundation/openexr/pull/473) Fix missing #include <cmath> for std::isnormal\n* [472](https://github.com/AcademySoftwareFoundation/openexr/pull/472) Add viewers library to default build\n* [471](https://github.com/AcademySoftwareFoundation/openexr/pull/471) Warn the user, but make PyIlmBase not fail a build by default\n* [470](https://github.com/AcademySoftwareFoundation/openexr/pull/470) Fix #352, issue with aspect ratio\n* [468](https://github.com/AcademySoftwareFoundation/openexr/pull/468) Fix #455 by not using object libraries under apple\n* [467](https://github.com/AcademySoftwareFoundation/openexr/pull/467) NumPy lookup logic is only in newer versions of cmake than our minimum\n* [466](https://github.com/AcademySoftwareFoundation/openexr/pull/466) Remove last vestiges of old ifdef for windows\n* [465](https://github.com/AcademySoftwareFoundation/openexr/pull/465) Fix #461, issue with macos rpath support\n* [463](https://github.com/AcademySoftwareFoundation/openexr/pull/463) Fix #457, (unused) policy tag only in 3.13+ of cmake, no longer needed\n* [460](https://github.com/AcademySoftwareFoundation/openexr/pull/460) TSC meeting notes 7/18/2019\n* [459](https://github.com/AcademySoftwareFoundation/openexr/pull/459) added missing copyright notices\n* [458](https://github.com/AcademySoftwareFoundation/openexr/pull/458) fix for failing PyIlmBase/configure because it can't run the IlmBase test program.\n* [456](https://github.com/AcademySoftwareFoundation/openexr/pull/456) fix incorrect license identifier\n* [450](https://github.com/AcademySoftwareFoundation/openexr/pull/450) change INCLUDES to AM_CPPFLAGS, upon the recommendation of automake warnings\n* [448](https://github.com/AcademySoftwareFoundation/openexr/pull/448) Fixes #95, compilation issue with mingw\n* [447](https://github.com/AcademySoftwareFoundation/openexr/pull/447) Implements #15, request for hardware concurrency utility function\n* [446](https://github.com/AcademySoftwareFoundation/openexr/pull/446) Fixes #282, missing link against pthread\n* [444](https://github.com/AcademySoftwareFoundation/openexr/pull/444) added missing files in autoconf setup\n* [443](https://github.com/AcademySoftwareFoundation/openexr/pull/443) don't index empty array in testMultiPartSharedAttributes\n* [442](https://github.com/AcademySoftwareFoundation/openexr/pull/442) TiledInputFile only supports regular TILEDIMAGE types, not DEEPTILE...\n* [441](https://github.com/AcademySoftwareFoundation/openexr/pull/441) TSC meeting notes, July 7, 2019\n* [440](https://github.com/AcademySoftwareFoundation/openexr/pull/440) security policy\n* [439](https://github.com/AcademySoftwareFoundation/openexr/pull/439) code of conduct\n* [438](https://github.com/AcademySoftwareFoundation/openexr/pull/438) Azure and SonarCloud setup\n* [437](https://github.com/AcademySoftwareFoundation/openexr/pull/437) address #271: catch scanlines with negative sizes\n* [436](https://github.com/AcademySoftwareFoundation/openexr/pull/436) specific check for bad size field in header attributes (related to #248)\n* [435](https://github.com/AcademySoftwareFoundation/openexr/pull/435) Refactor cmake\n* [434](https://github.com/AcademySoftwareFoundation/openexr/pull/434) Issue #262\n* [433](https://github.com/AcademySoftwareFoundation/openexr/pull/433) Fix for #263: prevent overflow in multipart chunk offset reconstruction\n* [432](https://github.com/AcademySoftwareFoundation/openexr/pull/432) Fix for #378, bswap on read on big-endian architectures\n* [431](https://github.com/AcademySoftwareFoundation/openexr/pull/431) Fixed column labels in OpenEXRFileLayout document\n* [429](https://github.com/AcademySoftwareFoundation/openexr/pull/429) change OpaqueAttribute's _typeName field to be std::string\n* [428](https://github.com/AcademySoftwareFoundation/openexr/pull/428) Added Coding Style section on Type Casting.\n* [427](https://github.com/AcademySoftwareFoundation/openexr/pull/427) adding source .odt files for the .pdf's on the documentation page\n* [425](https://github.com/AcademySoftwareFoundation/openexr/pull/425) Handle exceptions, per SonarCloud rules\n* [423](https://github.com/AcademySoftwareFoundation/openexr/pull/423) Address #270: limit Tiled images to INT_MAX total number of tiles\n* [422](https://github.com/AcademySoftwareFoundation/openexr/pull/422) Add exr2aces to autoconf build script\n* [420](https://github.com/AcademySoftwareFoundation/openexr/pull/420) updated references to CVE's in release notes.\n* [417](https://github.com/AcademySoftwareFoundation/openexr/pull/417) TSC meeting notes June 27, 2019\n* [416](https://github.com/AcademySoftwareFoundation/openexr/pull/416) Fix #342, copy paste bug with dependencies\n* [415](https://github.com/AcademySoftwareFoundation/openexr/pull/415) convert_index returns Py_ssize_t\n* [414](https://github.com/AcademySoftwareFoundation/openexr/pull/414) Fix part of #232, issue with pointer overflows\n* [413](https://github.com/AcademySoftwareFoundation/openexr/pull/413) Fix library suffix issue in cmake file for exr2aces\n* [412](https://github.com/AcademySoftwareFoundation/openexr/pull/412) Fix #350 - memory leak on exit\n* [411](https://github.com/AcademySoftwareFoundation/openexr/pull/411) Fixes the rpath setting to have the correct variable name\n* [410](https://github.com/AcademySoftwareFoundation/openexr/pull/410) Fixed the 2.3.0 release notes to mention that CVE-2017-12596 is fixed.\n* [409](https://github.com/AcademySoftwareFoundation/openexr/pull/409) Add initial rules for running clang-format on the code base\n* [408](https://github.com/AcademySoftwareFoundation/openexr/pull/408) Add ImfFloatVectorAttribute.h to the automake install\n* [406](https://github.com/AcademySoftwareFoundation/openexr/pull/406) New CI with aswfstaging/ci-base image\n* [405](https://github.com/AcademySoftwareFoundation/openexr/pull/405) June 20, 2019 TSC meeting notes\n* [404](https://github.com/AcademySoftwareFoundation/openexr/pull/404) Miscellaneous documentation improvements\n* [403](https://github.com/AcademySoftwareFoundation/openexr/pull/403) Added CLA forms\n* [402](https://github.com/AcademySoftwareFoundation/openexr/pull/402) TSC Meeting notes June 13, 2019\n* [397](https://github.com/AcademySoftwareFoundation/openexr/pull/397) Updates to README.md, and initial CONTRIBUTING.md, GOVERNANCE.md, INSTALL.md\n* [383](https://github.com/AcademySoftwareFoundation/openexr/pull/383) Fixed formatting\n* [382](https://github.com/AcademySoftwareFoundation/openexr/pull/382) TSC meeting notes 2019-5-2\n* [339](https://github.com/AcademySoftwareFoundation/openexr/pull/339) fix standalone and combined cmake\n\n### Commits \\[ git log v2.3.0...v2.4.0\\]\n\n* [Add missing include](https://github.com/AcademySoftwareFoundation/openexr/commit/cd1b068ab1d2e2b40cb81c79e997fecfe31dfa11) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-08-24)\n\n* [Add option to control whether pyimath uses the fp exception mechanism](https://github.com/AcademySoftwareFoundation/openexr/commit/be0df7b76106ba4b33efca289641fdeb59adb3a2) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-08-24)\n\n* [Update license for DreamWorks Lossy Compression](https://github.com/AcademySoftwareFoundation/openexr/commit/5b64c63cef71f4542ef4e2452077f62755b66252) ([``jbradley``](@jbradley@dreamworks.com) 2019-08-19)\n\n* [Added defines for DWAA and DWAB compression.](https://github.com/AcademySoftwareFoundation/openexr/commit/1b88251b8d955124d7a5da9716ec287ef78440e5) ([Dirk Lemstra](@dirk@lemstra.org) 2019-08-08)\n\n* [TSC meeting notes Aug 22, 2019](https://github.com/AcademySoftwareFoundation/openexr/commit/9307279963b44d31152441bbe771de044329f356) ([Cary Phillips](@cary@ilm.com) 2019-08-26)\n\n* [2.4.0 release notes * Added commit history * Added table of contents Signed-off-by: Cary Phillips <cary@ilm.com>](https://github.com/AcademySoftwareFoundation/openexr/commit/9fe66510bb5c353bb855b6a5bdbb6be8d3762778) ([Cary Phillips](@cary@ilm.com) 2019-08-10)\n\n* [Fix vtable insertion for win32, use new macro everywhere](https://github.com/AcademySoftwareFoundation/openexr/commit/54d46dacb88fbfa41608c7e347cffa5552742bc4) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-08-25)\n\n* [Use unique id, not typeid reference which may differ](https://github.com/AcademySoftwareFoundation/openexr/commit/728c26ccbd9f0700633c89c94b8328ee78f40cec) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-08-25)\n\n* [Force vtable into a translation unit](https://github.com/AcademySoftwareFoundation/openexr/commit/7678a9d09c45cc9ae2b9f591f3565d10a503aadd) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-08-25)\n\n* [Fix exports when compiling DLLs enabled with mingw](https://github.com/AcademySoftwareFoundation/openexr/commit/3674dd27ce45c1f2cc11993957dccee4bdd840dd) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-08-25)\n\n* [Force exception handling / unwind disposition under msvc](https://github.com/AcademySoftwareFoundation/openexr/commit/b4d5d867a49029e93b4b3aa6708d1fc0093613cc) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-08-25)\n\n* [Force the python binding libraries to shared](https://github.com/AcademySoftwareFoundation/openexr/commit/39c17b9ceef2ec05b1ebd25a9ee3f15e5fe17181) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-08-24)\n\n* [Fix cmake warnings, fix check for numpy](https://github.com/AcademySoftwareFoundation/openexr/commit/85bde2ea9afbddffc6ffbfa597f8bb1d25b42859) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-08-24)\n\n* [Remove unused typedef from previous failed attempt at boost python usage](https://github.com/AcademySoftwareFoundation/openexr/commit/6d5b23a258b562c29012953e13d67012a66322f0) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-08-24)\n\n* [Create a \"holder\" object to fix stale reference to array](https://github.com/AcademySoftwareFoundation/openexr/commit/d2a9dec4d37143feb3b9daeb646b9e93632c5d8a) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-08-24)\n\n* [Disable the debug postfix for the python modules](https://github.com/AcademySoftwareFoundation/openexr/commit/311ebb0485a253445c7324b3d42eaadd01ceb8b4) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-08-24)\n\n* [explicitly add the boost includes to the target as Boost::headers does not seem to](https://github.com/AcademySoftwareFoundation/openexr/commit/bdedcc6361da71e7512f978d4017a1fbb25ace92) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-08-24)\n\n* [Set default value for buildSharedLibs](https://github.com/AcademySoftwareFoundation/openexr/commit/62427d2dc3d3ee147e01e6d0e3b2119f37dfa689) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-08-24)\n\n* [Azure updates for MacOS/Windows/Linux](https://github.com/AcademySoftwareFoundation/openexr/commit/3a49e9fe3f3d586a57d25265335752380cbe1b31) ([Christina Tempelaar-Lietz](@xlietz@gmail.com) 2019-08-18)\n\n* [brief notes of TSC meeting 2019-08-16](https://github.com/AcademySoftwareFoundation/openexr/commit/36fb144da1110232bf416d5e1c4abde263056d17) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-08-16)\n\n* [Fix compile warnings from the latest merges](https://github.com/AcademySoftwareFoundation/openexr/commit/181add33e9391372e76abb6bfc654f37d3788e4a) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-08-14)\n\n* [Fix boost checks when a versioned python is not found](https://github.com/AcademySoftwareFoundation/openexr/commit/d6c176718595415e7b17e7a6c77af0df75cc36de) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-08-14)\n\n* [Rework boost python search logic to be simpler and more robust](https://github.com/AcademySoftwareFoundation/openexr/commit/c21272230b30562d219d41d00cdcbc98be602c37) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-08-14)\n\n* [Fix spacing](https://github.com/AcademySoftwareFoundation/openexr/commit/4f8137070fa257557f7b474c41b9b9c260b7f3cd) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-08-14)\n\n* [Fix #268, issue with right shift in fast huf decoder](https://github.com/AcademySoftwareFoundation/openexr/commit/2f33f0ff08cf66286fda5cf60ee6f995821bde0d) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-08-14)\n\n* [Add mechanism for test programs to use win32 wide filename fix when manually creating std::fstreams](https://github.com/AcademySoftwareFoundation/openexr/commit/e0ac10e045b6d932c221c9223d88940b14e12b8b) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-08-12)\n\n* [Use temp directory for tests under win32, properly cleanup files from util tests](https://github.com/AcademySoftwareFoundation/openexr/commit/1d0b240557a230cf704c8797f97ce373a3ca5474) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-08-12)\n\n* [Fix issue with mingw gcc and wide / utf8 filenames](https://github.com/AcademySoftwareFoundation/openexr/commit/02fbde4e1942e2ffcf652eb99e32fb15530cc93d) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-08-12)\n\n* [Remove unused using statements](https://github.com/AcademySoftwareFoundation/openexr/commit/ce09ee004050ec2c1c0fff72b28d1d69a98dfaea) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-08-12)\n\n* [Add missing exports for ImfAcesFile](https://github.com/AcademySoftwareFoundation/openexr/commit/631d5d49bab5ef0194983a0e15471102b5acacd9) ([Nick Porcino](@meshula@hotmail.com) 2019-08-10)\n\n* [Add missing symbol export to Slice::Make](https://github.com/AcademySoftwareFoundation/openexr/commit/efb5d10f6001e165149bf0dc17f96b4671d213c3) ([Nick Porcino](@meshula@hotmail.com) 2019-08-09)\n\n* [TSC meeting notes August 8, 2019](https://github.com/AcademySoftwareFoundation/openexr/commit/ee8830f108e7a930f6326175f444ed026e504f27) ([Cary Phillips](@cary@ilm.com) 2019-08-08) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [changed AP_CPPFLAGS to AM_CPPFLAGS in PyImathNumpy/Makefile.am.](https://github.com/AcademySoftwareFoundation/openexr/commit/859017261d4401ebdb965f268d88b10455984719) ([Cary Phillips](@cary@ilm.com) 2019-08-07) What this a typo? The automake-generated Makefiles expect 'AM', which\nwas leading to a failure to find PyImath.h. Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [Removed the d_exr Renderman plugin from Contrib. It was hopelessly outdated, not updated since 2003, and no longer of benefit.](https://github.com/AcademySoftwareFoundation/openexr/commit/6999eb39465d99d5fbb01eff9f1acfdb424d9f82) ([Cary Phillips](@cary@ilm.com) 2019-07-27) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [Removed the Photoshop plugin from Contrib. It was hopelessly outdated and no longer of benefit.](https://github.com/AcademySoftwareFoundation/openexr/commit/e84040bde6259777035b3032337aee4a24f34548) ([Cary Phillips](@cary@ilm.com) 2019-07-27) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [added SPDX license identifier.](https://github.com/AcademySoftwareFoundation/openexr/commit/e9e4f34616460b3a3c179a7bcc2be2e8f4e79ae8) ([Cary Phillips](@cary@ilm.com) 2019-07-27) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [Upon the request of the ASWF Governing Board and the advice of Pixar/Lucasfilm attorney Richard Guo, changed the license on the DtexToExr source code to BSD-3-Clause, to bring in line with the standard OpenEXR license. Also, removed COPYING, as it only contained license info; remoted INSTALL because it was only a copy of the boilerplate bootstrap/config documentation; remove NEWS because we're not using that file any more.](https://github.com/AcademySoftwareFoundation/openexr/commit/a73956bfd4809769bcb8fe2229f7d888c7deccff) ([Cary Phillips](@cary@ilm.com) 2019-07-27) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [TSC meeting notes from 7/25/2019](https://github.com/AcademySoftwareFoundation/openexr/commit/2ebd7ade2f392fc3da50c0227e3ff11a7a2f4d8e) ([Cary Phillips](@cary@ilm.com) 2019-07-26) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [Match variable style syntax per Cary](https://github.com/AcademySoftwareFoundation/openexr/commit/f5ab8176637d8ea1decc83929950aa3864c87141) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-08-10) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Add headers to build so programs that can parse and display that will do so](https://github.com/AcademySoftwareFoundation/openexr/commit/19557bfaf1b6b38a2407a6a261ee8f3b376c0bd6) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-25) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [First pass of describing versioning and naming of library names](https://github.com/AcademySoftwareFoundation/openexr/commit/eeae20a72f596589b6429ba43bff69281b801015) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-25) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Normalize library naming between cmake and autoconf](https://github.com/AcademySoftwareFoundation/openexr/commit/c3ebd44bdb64c5bfe0065f3d0ac898387a0fbb63) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-25) installed libraries should follow the following basic pattern: (-> indicates a symlink)\n\n    libFoo.so -> libFoo-LIB_SUFFIX.so\n    libFoo-LIB_SUFFIX.so -> libFoo-LIB_SUFFIX.so.MAJ_SO_VERSION\n    libFoo-LIB_SUFFIX.so.MAJ_SO_VERSION ->\n    libFoo-LIB_SUFFIX.so.FULL_SO_VERSION\n\n    so with a concrete example of 2.3 lib w/ so version of 24\n\n    libFoo.so -> libFoo-2_3.so\n    libFoo-2_3.so -> libFoo-2_3.so.24\n    libFoo-2_3.so.24 -> libFoo-2_3.so.24.0.0\n    libFoo-2_3.so.24.0.0.0 <--- actual file\n\n    (there may be slight variations in the link destinations based on\n    differences in libtool and cmake, but the file names available should\n    all be there) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [only perform check in c++14 to avoid old c++11 standards deficient compilers](https://github.com/AcademySoftwareFoundation/openexr/commit/1aeba79984bef35cead1da540550441f2b8244af) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-25) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Fix #246, add type traits check](https://github.com/AcademySoftwareFoundation/openexr/commit/5323c345361dcf01d012fd8f40e8c6c975b9cb83) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-23) previous cleanup did most of the work, but add an explicit test that\nhalf is now trivial and default constructible.  Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [remove sanityCheck for 32 bit overflow. Add test for large offsets](https://github.com/AcademySoftwareFoundation/openexr/commit/b0acdd7bcbd006ff93972cc3c6d66c617280c557) ([Peter Hillman](@peterh@wetafx.co.nz) 2019-07-23) \n\n* [Makes building of fuzz test optional](https://github.com/AcademySoftwareFoundation/openexr/commit/73d5676079d77b4241719f57d0219a3287503b8b) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-08-09) This further makes the fuzz test compilation dependent on whether you\nwant to include the fuzz test in the ctest \"make test\" rule. This is\nmostly for sonar cloud such that it doesn't complain that the fuzz test\ncode isn't being run as a false positive (because it isn't included in\nthe test) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Added MacOS jobs to Azure pipeline](https://github.com/AcademySoftwareFoundation/openexr/commit/29eab92cdee9130b7d1cc6adb801966d0bc87c94) ([Christina Tempelaar-Lietz](@xlietz@gmail.com) 2019-07-27) \n\n* [initial draft of release notes for 2.3.1](https://github.com/AcademySoftwareFoundation/openexr/commit/4fa4251dc1cce417a7832478f6d05421561e2fd2) ([Cary Phillips](@cary@ilm.com) 2019-08-06) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [Add //NOSONAR to the \"unhandled exception\" catches that SonarCloud identifies as vulnerabilities, to suppress the warning. In each of these cases, a comment explains that no action is called for in the catch, so it should not, in fact, be regarded as a bug or vulnerability.](https://github.com/AcademySoftwareFoundation/openexr/commit/c46428acaca50e824403403ebdaec45b97d92bca) ([Cary Phillips](@cary@ilm.com) 2019-07-28) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [explicitly name the path for the autoconf-generated files in .gitignore.](https://github.com/AcademySoftwareFoundation/openexr/commit/220cfcdd7e08d28098bf13c992d48df4b0ab191d) ([Cary Phillips](@cary@ilm.com) 2019-08-04) \n\n* [add the file generated by bootstrap/configure to .gitignore.](https://github.com/AcademySoftwareFoundation/openexr/commit/81af15fd5ea58c33cfa18c60797daaba55126c1b) ([Cary Phillips](@cary@ilm.com) 2019-08-04) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [Fixes #353, support for overriding Cg libdir](https://github.com/AcademySoftwareFoundation/openexr/commit/63924fd0f47e428b63c82579e8b03a1eeb4e4ca1) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-22) to handle systems where it isn't lib, but lib64, as needed\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [more documentation tweaks](https://github.com/AcademySoftwareFoundation/openexr/commit/b6c006aafc500816e42909491437bf9af79bb03c) ([Cary Phillips](@cary@ilm.com) 2019-07-28) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [Updates to README, CONTRIBUTING, GOVERNANCE: better introduction, removed some of the TSC process descriptions that are redudant in the charter.](https://github.com/AcademySoftwareFoundation/openexr/commit/1cd03756bbf22a65f84eb42c9d83b78be2902c02) ([Cary Phillips](@cary@ilm.com) 2019-07-28) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [update to the template copyright notice.](https://github.com/AcademySoftwareFoundation/openexr/commit/21c307aaf054f304f52bb488258f81d68e38385f) ([Cary Phillips](@cary@ilm.com) 2019-07-25) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [Updates to LICENSE and CONTRIBUTORS.](https://github.com/AcademySoftwareFoundation/openexr/commit/559186e6c638190ec1db122ec5f1a0890c056a16) ([Cary Phillips](@cary@ilm.com) 2019-07-25) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [Fix another set of warnings that crept in during previous fix merges](https://github.com/AcademySoftwareFoundation/openexr/commit/e07ef34af508b7ce9115ebc5454edeaacb35fb8c) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-25) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Fix logic for 1 pixel high/wide preview images (Fixes #493)](https://github.com/AcademySoftwareFoundation/openexr/commit/74504503cff86e986bac441213c403b0ba28d58f) ([Peter Hillman](@peterh@wetafx.co.nz) 2019-07-25) \n\n* [Fix for #494: validate tile coordinates when doing copyPixels](https://github.com/AcademySoftwareFoundation/openexr/commit/6bb36714528a9563dd3b92720c5063a1284b86f8) ([Peter Hillman](@peterh@wetafx.co.nz) 2019-07-25) \n\n* [add test for filled channels in DeepScanlines](https://github.com/AcademySoftwareFoundation/openexr/commit/c04673810a86ba050d809da42339aeb7129fc910) ([Peter Hillman](@peterh@wetafx.co.nz) 2019-07-18) \n\n* [add test for skipped and filled channels in DeepTiles](https://github.com/AcademySoftwareFoundation/openexr/commit/b1a5c8ca1921a3fc573952c8034fddd8fdac214b) ([Peter Hillman](@peterh@wetafx.co.nz) 2019-07-18) \n\n* [slightly rearrange test for filled channels](https://github.com/AcademySoftwareFoundation/openexr/commit/3c9d0b244ec31ab5e5849e1b6020c55096707ab5) ([Peter Hillman](@peterh@wetafx.co.nz) 2019-07-18) \n\n* [Make sure to skip over slices that will only be filled when computing the uncompressed pixel size. Otherwise chunks that compressed to larger sizes than the original will fail to load.](https://github.com/AcademySoftwareFoundation/openexr/commit/14905ee6d802b27752890d39880cd05338337e39) ([Halfdan Ingvarsson](@halfdan@sidefx.com) 2013-04-25) \n\n* [Fix #491, issue with part number range check reconstructing chunk offset table](https://github.com/AcademySoftwareFoundation/openexr/commit/8b5370c688a7362673c3a5256d93695617a4cd9a) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-25) The chunk offset was incorrectly testing for a part number that was the\nsame size (i.e. an invalid index)\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [removed logo, that didn't work.](https://github.com/AcademySoftwareFoundation/openexr/commit/d5800c14296527b3540da7aefd28b5937158d2cc) ([Cary Phillips](@cary@ilm.com) 2019-07-23) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [added logo](https://github.com/AcademySoftwareFoundation/openexr/commit/70435d286a0fe1a022ba26f00a1fd6eb37505a32) ([Cary Phillips](@cary@ilm.com) 2019-07-23) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [OpenEXR logo](https://github.com/AcademySoftwareFoundation/openexr/commit/d6eeb1432bc626709f934da7428561d4aeb8c5a5) ([Cary Phillips](@cary@ilm.com) 2019-07-23) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [smaller window image](https://github.com/AcademySoftwareFoundation/openexr/commit/fcedcad366988a24fb9c756510488f8fb83dc2ac) ([Cary Phillips](@cary@ilm.com) 2019-07-23) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [fixed image references in README.md](https://github.com/AcademySoftwareFoundation/openexr/commit/6def338579442d0fe1e3fbed0d458db3c5cf2a42) ([Cary Phillips](@cary@ilm.com) 2019-07-23) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [Revised the overview information in README.md, and condensed the information in the module README.md's, and removed the local AUTHORS, NEWS, ChangeLog files.](https://github.com/AcademySoftwareFoundation/openexr/commit/0c04c734d1a7ba3f3f85577ec56388238c9202c6) ([Cary Phillips](@cary@ilm.com) 2019-07-23) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [Azure: updated docker containers, added windows install scripts.](https://github.com/AcademySoftwareFoundation/openexr/commit/941082379a49a1aecafe2b9e84f3403314d910a9) ([Christina Tempelaar-Lietz](@xlietz@gmail.com) 2019-07-22) \n\n* [rewrite of build and installation documentation in INSTALL.md](https://github.com/AcademySoftwareFoundation/openexr/commit/591b671ba549bccca1e41ad457f569107242565d) ([Cary Phillips](@cary@ilm.com) 2019-07-22) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [Convert constructor casts to static_cast](https://github.com/AcademySoftwareFoundation/openexr/commit/625b95fa026c3b78e537e9bb6a39fcd51920ad13) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-23) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Convert constructor casts to static_cast, remove dead code](https://github.com/AcademySoftwareFoundation/openexr/commit/5cbf3cb368cd7013a119c3f08555a69fe33a932b) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-23) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Fix issues and warnings compiling in optimized using gcc -Wall](https://github.com/AcademySoftwareFoundation/openexr/commit/6d4e118cebbb7adf8ed29d846bb6f7fb0fb198eb) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-23) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Ensure tests have assert when building in a release mode](https://github.com/AcademySoftwareFoundation/openexr/commit/fe93c2c1ade319a7bc9a733cbeaad3c625a31d0d) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-23) Fixes warnings and makes sure tests are ... testing\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Cleanup warnings for clang -Wall](https://github.com/AcademySoftwareFoundation/openexr/commit/a5fbf7d669ca6b2b402f4fdf9022b43e5eea616f) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-23) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [First pass of warning cleanup](https://github.com/AcademySoftwareFoundation/openexr/commit/c1501ec2b29c95501c8fc324f4ec91bd93f0c1d3) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-23) This fixes g++ -Wall to compile warning free\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Update Azure Linux/SonarCloud jobs to work with new build](https://github.com/AcademySoftwareFoundation/openexr/commit/b19c8d221976bc6c0debc77431b0fe40dfeb8887) ([¨Christina Tempelaar-Lietz¨](@xlietz@gmail.com) 2019-07-21) Signed-off-by: Christina Tempelaar-Lietz <xlietz@gmail.com>\n\n* [Fix dos files to unix, part of #462](https://github.com/AcademySoftwareFoundation/openexr/commit/0f97a86349b377e0f380d2782326844bef652820) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-22) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Put all runtime artefacts in a single folder to help win32 find dlls](https://github.com/AcademySoftwareFoundation/openexr/commit/e2e8b53e267c373971f3e6da700670679a46403d) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-23) This will (hopefully) fix issues with compiling ilmbase as a dll and\nusing that to generate and compile openexr\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Fix #224, imath python code such that tests pass under python3](https://github.com/AcademySoftwareFoundation/openexr/commit/ab50d774e91a6448443e6cdb303bd040105cfaf8) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-22) Previously had fixed print functions, this pass converts the following:\n- integer division changed in python3 3/2 -> 1.5, have to use 3//2 to\nget an int\n- xrange is no more, just use range\n- integer type coersion for division not working, force type constructor\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Fixes #252, incorrect math computing half digits](https://github.com/AcademySoftwareFoundation/openexr/commit/bca0bc002b222d64712b748a733d9c9a0701f834) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-22) Based on float / double math for base 10 digits, with 1 bit of rounding\nerror, the equation should be floor( mantissa_digits - 1 ) * log10(2) ),\nwhich in the case of half becomes floor( 10 * log10(2) ) or 3\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Fixes #139](https://github.com/AcademySoftwareFoundation/openexr/commit/ba329cba788d4f320e6fc455919233222c27a0dd) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-21) Removes bash-isms from the autoconf bootstrap / configure.ac files\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Add viewers library to default build](https://github.com/AcademySoftwareFoundation/openexr/commit/f52164dcc92c98775c3503aa9827fbd5d1e69b63) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-21) If libraries can't be found, will warn and not build\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Warn the user, but make PyIlmBase not fail a build by default](https://github.com/AcademySoftwareFoundation/openexr/commit/a0dcd35c51fc7811bc17b766ded17622f91e3fd0) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-21) By default, many people won't have the dependencies to build PyIlmBase.\nMake it such that the build will warn, but continue to build without the\npython extension\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Fix missing #include <cmath> for std::isnormal](https://github.com/AcademySoftwareFoundation/openexr/commit/9aa10cfac3209ac398b12c14eec2611420f20985) ([Axel Waggershauser](@awagger@gmail.com) 2019-07-21) fixes compile regression on macos + clang-6\n\n* [further cleanup and remove old mworks checks that had been copied around](https://github.com/AcademySoftwareFoundation/openexr/commit/351ad1897e3b84bd5b1e29835c7e68bb09f1f914) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-21) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Remove last vestiges of old ifdef for windows previously removed elsewhere](https://github.com/AcademySoftwareFoundation/openexr/commit/b3651854491afa8b6c98e9078a5f4a33178c1a66) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-21) Previously PLATFORM_WINDOWS was used to conditionally include things,\nbut that had been removed elsewhere, and a few spots missed.\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Fix #352, issue with aspect ratio](https://github.com/AcademySoftwareFoundation/openexr/commit/34e2e78f205c49eafb49b7589701746f748194ad) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-21) If a file is contructed with an abnormal aspect ratio, tools like make\npreview will fail. This adds an extra check to the creation / reading of\nImfHeader to avoid this issue\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Fix #455 by not using object libraries under apple](https://github.com/AcademySoftwareFoundation/openexr/commit/0451df8f7986ff5ab37c26d2aa6a7aeb115c8948) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-21) Per the docs, add_library calls with only object library dependencies\nare not yet handled properly by Xcode and similar. Disable the use of\nobject libraries as a compilation speedup mechanism as a result.\nSimilarly, disable under win32 when building both types of libs to avoid\nexported symbols in the static libs. Finally, use same mechanism to\navoid extra layer of libs in generated exports when only building one\nconfig on all platforms\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [NumPy lookup logic is only in newer versions of cmake than our minimum](https://github.com/AcademySoftwareFoundation/openexr/commit/5b4b23d1cf49ee89132251bc7987d65b7a11efe6) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-21) We are doing the numpy lookup manually for now\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Fix #461, issue with macos rpath support, remove half-baked framework support](https://github.com/AcademySoftwareFoundation/openexr/commit/9aa52c8c0c96b24c8d645d7850dae77f4bf64620) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-21) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Refactor origin function to a Slice factory and Rgba custom utility](https://github.com/AcademySoftwareFoundation/openexr/commit/119eb2d4672e5c77a79929758f7e4c566f47c794) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-21) Instead of a general templated routine, have a Slice factory function\nand then a custom Rgba utility function to clarify and avoid missing\nstrides, etc. when dealing with slices\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [merges common fixes and move bounds check to central location](https://github.com/AcademySoftwareFoundation/openexr/commit/6a41400b47d574a5fc6133b9a7139bcd7b59d585) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-01) PR #401 had conflicts, and some of the checks were not in a central\nlocation. This incorporates those changes, moving the extra range checks\nto the central sanityCheck already in ImfHeader. Then adds a new utility\nfunction for computing the pointer offsets that can prevent simple\noverflow when there are large offsets from origin or widths with\nsubsampling.\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>\nCo-Authored-By: pgajdos <pgajdos@suse.cz>\n\n* [Fix part of #232, issue with pointer overflows](https://github.com/AcademySoftwareFoundation/openexr/commit/4aa6a4e0fcd52b220c71807307b9139966c3644c) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-06-27) This addresses pointer overflow in exr2aces with large datawindow\noffsets. It also fixes similar issues in exrenvmap and exrmakepreview.\nThis addresses the crashes in CVE-2017-9111, CVE-2017-9113,\nCVE-2017-9115\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Fix portion of #462](https://github.com/AcademySoftwareFoundation/openexr/commit/2309b42be084939e8593e036b814049f98eb7888) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-21) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Fix copyright notice, clarify version requirement comment](https://github.com/AcademySoftwareFoundation/openexr/commit/688b50d1982854b1a2be63160eae03472cf4820e) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-20) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Fix copyright notice, clarify version requirement comment](https://github.com/AcademySoftwareFoundation/openexr/commit/bbf1f5ed9814f35f953c5b28349ca8dd59a3ed87) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-20) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Fix #457, (unused) policy tag only in 3.13+ of cmake, no longer needed](https://github.com/AcademySoftwareFoundation/openexr/commit/e69dc2131791a42d5e0618506a4846ec7d53b997) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-20) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [TSC meeting notes 7/18/2019](https://github.com/AcademySoftwareFoundation/openexr/commit/04e21585d01c36790dad186a34c4c64c8e0a1dae) ([Cary Phillips](@cary@ilm.com) 2019-07-18) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [Typo in Makefile.am, AM_CPPFLAGS should append to the previous value.](https://github.com/AcademySoftwareFoundation/openexr/commit/97626390f86007fcff2d33c68919389e211983e1) ([Cary Phillips](@cary@ilm.com) 2019-07-18) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [changed INCLUDE to AM_CPPFLAGS, upon the recommendation of automake warnings.](https://github.com/AcademySoftwareFoundation/openexr/commit/f91edef414e319235959a537e0ef62c49dddcde3) ([Cary Phillips](@cary@ilm.com) 2019-07-17) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [added missing copyright notices](https://github.com/AcademySoftwareFoundation/openexr/commit/76cb1ef869a23ab49f4313fee16a4d5750e91485) ([Cary Phillips](@cary@ilm.com) 2019-07-18) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [in PyIlmBase/configure.ac, set LD_LIBRARY_PATH explicitly for the ilmbase test program,so that it finds the libraries when it executes.](https://github.com/AcademySoftwareFoundation/openexr/commit/0bd322d424781f20750141ddc829fc9e16f7e305) ([Cary Phillips](@cary@ilm.com) 2019-07-18) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [remove the reference to the LICENSE file in the copyright notice template.](https://github.com/AcademySoftwareFoundation/openexr/commit/1aedb3ceec973e9bc0bad88fc151b2504884e84c) ([Cary Phillips](@cary@ilm.com) 2019-07-18) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [fix incorrect license identifier](https://github.com/AcademySoftwareFoundation/openexr/commit/02f1e3d876a784cfd0ab8d0581bafe1fd0d98df2) ([Cary Phillips](@cary@ilm.com) 2019-07-18) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [Rename new function and clarify purpose](https://github.com/AcademySoftwareFoundation/openexr/commit/e8dc4326383540ef4a4e2a388cb176da72c120fb) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-18) After discussion with phillman, renamed to give this routine a purpose\nbeyond some soon to be deleted legacy support, and clarified this in the\ncomment documenting the function.\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Implements #15, request for hardware concurrency utility function](https://github.com/AcademySoftwareFoundation/openexr/commit/23eaf0f45ff531ba0ab3fb1540d5c7d31b4bfe94) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-18) new static member of ThreadPool, call as\nThreadPool::hardwareConcurrency, so no abi breakage or api change\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [use headers.data() instead of &headers[0]](https://github.com/AcademySoftwareFoundation/openexr/commit/42665b55f4062f1492156c7bc9482318c7b49cda) ([Peter Hillman](@peterh@wetafx.co.nz) 2019-07-17) \n\n* [don't index empty array in testMultiPartSharedAttributes](https://github.com/AcademySoftwareFoundation/openexr/commit/bb5aad9b793b1113cae42d80fea8925503607de1) ([Peter Hillman](@peterh@wetafx.co.nz) 2019-07-16) \n\n* [Added IlmThreadSemaphoreOSX to IlmBase/IlmThread/Makefile.am and added PyIlmBase/PyIlmBase.pc.in back in, looks like it got inadvertently removed by a previous commit.](https://github.com/AcademySoftwareFoundation/openexr/commit/c580d3531c36ed1de35fbfe359eed5f74c2de6dc) ([Cary Phillips](@cary@ilm.com) 2019-07-16) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [Azure and SonarCloud setup](https://github.com/AcademySoftwareFoundation/openexr/commit/9d053e4871e721144ad25ac04437646cf4f16d66) ([¨Christina Tempelaar-Lietz¨](@xlietz@gmail.com) 2019-07-12) Signed-off-by: ¨Christina Tempelaar-Lietz¨ <xlietz@gmail.com>\n\n* [Fixes #95, compilation issue with mingw](https://github.com/AcademySoftwareFoundation/openexr/commit/2cf0560dd8eb469680d2281e6d80348dad9ad500) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-18) The tree now compiles using mingw to compile, tested by cross compiling\nfor windows from linux\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Fixes #282, missing link against pthread](https://github.com/AcademySoftwareFoundation/openexr/commit/e90f1b0ed19cb05821c7351ce8d5d9a22fb094eb) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-18) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Remove removed file, add CMakeLists.txt file](https://github.com/AcademySoftwareFoundation/openexr/commit/9683c48479ed2372d26eb51ed91d89b01c495dfd) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-18) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [PyIlmBase finished refactor, misc cleanup](https://github.com/AcademySoftwareFoundation/openexr/commit/4d97270c6ce0916483c1aff5b1f77846cfff11a0) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-18) - add extra dist to automake for make dist\n- finish numpy lookup\n- add sample vfx 15 toolchain file for doc purposes\n- merge cxx standard, pay attention to global setting if set\n- merge clang tidy option\n- add default build type if not set\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Remove un-needed files now that cmake can provide correct values](https://github.com/AcademySoftwareFoundation/openexr/commit/08332041bb46b45e93855c9843a2aa916ec4ebef) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-18) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Fix issues with rpath, message cleanup, checkpoint better python layer](https://github.com/AcademySoftwareFoundation/openexr/commit/0eff97241f495027021b54978028475f0b2459dd) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-17) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Start to integrate python module using FindPython and FindBoost from modern cmake](https://github.com/AcademySoftwareFoundation/openexr/commit/c236ed81b7146947999b75fd93aedc5d54d78f64) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-16) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Attempt to set rpath for more common scenarios when people are building custom versions](https://github.com/AcademySoftwareFoundation/openexr/commit/10adf360120898c6ad3a0be2838056948bf22233) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-16) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Documentation pass](https://github.com/AcademySoftwareFoundation/openexr/commit/ba22a8e0a366c87677c53bab72af72dbc378b0dd) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-16) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Enable custom install subfolder for headers](https://github.com/AcademySoftwareFoundation/openexr/commit/9067b792c6f178bd2ff1d15e7b4d898fc1677495) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-13) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Generate version file to ensure proper version check](https://github.com/AcademySoftwareFoundation/openexr/commit/edb6938738462009990086fb7081a860412ec0d4) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-13) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Properly include additional cmake files in \"make dist\" under autoconf](https://github.com/AcademySoftwareFoundation/openexr/commit/ae54f3d656f8c6336c22385ee5d5ab1f35324c37) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-13) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [First pass updating the documentation for cmake builds](https://github.com/AcademySoftwareFoundation/openexr/commit/120b93ecf33c45284dff68eaf0ee779fa1cb6747) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-12) \n\n* [Switch testing control to use standard ctest setting option](https://github.com/AcademySoftwareFoundation/openexr/commit/fe6bf4c585723ff8851dfe965343a2adb0f1c1f4) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-12) \n\n* [First pass making cross compile work, cross compiling windows using mingw on linux](https://github.com/AcademySoftwareFoundation/openexr/commit/f44721e0c504b0b400a71513600295fc5e00f014) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-12) This currently works for building using static libraries, but not yet\ntested with dlls.\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Fix new (WIP) cmake setup to work on OS/X](https://github.com/AcademySoftwareFoundation/openexr/commit/2fe5a26d7ef36276ba4aa354178b81fc6612868d) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-12) This includes a fix for the semaphore configure check as well as a\ncouple of compile warnings\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Add missing file, remove unused exrbuild tool cmake](https://github.com/AcademySoftwareFoundation/openexr/commit/9a1ca7579b1ac793ae2d7bbee667e498d9bc8322) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-12) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Refactor cmake](https://github.com/AcademySoftwareFoundation/openexr/commit/df41027db50bd52a0b797444f02d5907b756652e) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-07-12) This refactors the cmake setup, modernizing it to a current flavor of\ncmake and cleaning up the definitions. This also makes the top level\nfolder a \"super project\", meaning it is including what should be\ndistinct / standalone sub-projects with their own finds that should\nwork.\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [TiledInputFile only supports regular TILEDIMAGE types, not DEEPTILE or unknown tiled types. Enforce for both InputFile and InputPart API. Fixes #266, Related to #70](https://github.com/AcademySoftwareFoundation/openexr/commit/ece555214a63aaf0917ad9df26be7e17451fefb9) ([Peter Hillman](@peterh@wetafx.co.nz) 2019-07-15) \n\n* [address #271: catch scanlines with negative sizes](https://github.com/AcademySoftwareFoundation/openexr/commit/849c616e0c96665559341451a08fe730534d3cec) ([Peter Hillman](@peterh@wetafx.co.nz) 2019-07-12) \n\n* [TSC meeting notes, July 7, 2019](https://github.com/AcademySoftwareFoundation/openexr/commit/960a56f58da13be6c97c59eae1f57bd8882c4588) ([Cary Phillips](@cary@ilm.com) 2019-07-12) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [securty policy](https://github.com/AcademySoftwareFoundation/openexr/commit/8f483c2552070f3d9dd2df98f6500dfa1c051dcc) ([Cary Phillips](@cary@ilm.com) 2019-07-12) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [code of conduct](https://github.com/AcademySoftwareFoundation/openexr/commit/f31407518aa361263c77eae13f1eef46999ca01f) ([Cary Phillips](@cary@ilm.com) 2019-07-12) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [bswap_32 to correct endianness on read, to address #81.](https://github.com/AcademySoftwareFoundation/openexr/commit/225ddb8777e75978b88c2d6311bb0cf94c0b6f22) ([Cary Phillips](@cary@ilm.com) 2019-07-02) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [fix reading files](https://github.com/AcademySoftwareFoundation/openexr/commit/5350d10ffc03c774e5cd574062297fc91001064d) ([Dan Horák](@dan@danny.cz) 2019-04-15) testFutureProofing and testMultiPartFileMixingBasic both use fread(&length,4,f) to get a 4 byte\ninteger value from input file. The value read is not converted from the little endian format to\nthe machine format causing problems (eg. test didn't finish after 24 hours).\nfixes issue #81\n\n* [SonarCloud considers strcpy() a vulernability. It was used only in OpaqueAttribute, whose type name was stored as Array<char>.  I changed the type to std::string. I suspect this simply dates to a time before std::string was commonly used.](https://github.com/AcademySoftwareFoundation/openexr/commit/29d18b70bf542ef9ec6e8861c015d2e7b3d3ec58) ([Cary Phillips](@cary@ilm.com) 2019-07-09) Also, it appears that nothing in the test suite validated opaque attributes, which hold values read from a file when the attribute type is not known. I added a test to validate the behavior, which also validates that the typeName() works when implemented with std::string instead of Array<char>.\nSigned-off-by: Cary Phillips <cary@ilm.com>\n\n* [Updated pdf with fixes for file version bits on page 7.](https://github.com/AcademySoftwareFoundation/openexr/commit/8da36708caaf0591f72538bfa414d8af20af90e9) ([Cary Phillips](@cary@ilm.com) 2019-07-11) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [Fixed column labels in table on page 7; bit 11 is \"deep\", bit 12 is \"multi-part\". Bit 9 is long names, and is not in the table.](https://github.com/AcademySoftwareFoundation/openexr/commit/a3198419f7593564747337e763083492c0470f45) ([Cary Phillips](@cary@ilm.com) 2019-07-09) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [New CI with aswfstaging/ci-base image](https://github.com/AcademySoftwareFoundation/openexr/commit/5e7cde5c082881009516aa57a711a19e3eb92f64) ([aloysb](@aloysb@al.com.au) 2019-06-17) Signed-off-by: Aloys Baillet <aloys.baillet@gmail.com>\nConflicts:\n\tazure-pipelines.yml\n\n* [use static_cast in error test](https://github.com/AcademySoftwareFoundation/openexr/commit/700e4996ce619743d5bebe07b4158ccc4547e9ad) ([Peter Hillman](@peterh@wetafx.co.nz) 2019-07-11) \n\n* [throw better exceptions in multipart chunk reconstruction](https://github.com/AcademySoftwareFoundation/openexr/commit/001a852cca078c23d98c6a550c65268cc160042a) ([Peter Hillman](@peterh@wetafx.co.nz) 2019-07-11) \n\n* [Fix for #263: prevent overflow in multipart chunk offset table reconstruction](https://github.com/AcademySoftwareFoundation/openexr/commit/6e4b6ac0b5223f6e813e025532b3f0fc4e02f541) ([Peter Hillman](@peterh@wetafx.co.nz) 2019-07-09) \n\n* [protect against negative sized tiles](https://github.com/AcademySoftwareFoundation/openexr/commit/395aa4cbcaf91ce37aeb5e9876c44291bed4d1f9) ([Peter Hillman](@peterh@wetafx.co.nz) 2019-07-11) \n\n* [apply suggested for for #262](https://github.com/AcademySoftwareFoundation/openexr/commit/9e9e4616f60891a8b27ee9cdeac930e5686dca4f) ([Peter Hillman](@peterh@wetafx.co.nz) 2019-07-10) \n\n* [specific check for bad size field in header attributes (related to #248)](https://github.com/AcademySoftwareFoundation/openexr/commit/4c146c50e952655bc193567224c2a081c7da5e98) ([Peter Hillman](@peterh@wetafx.co.nz) 2019-07-12) \n\n* [use static_cast and numeric_limits as suggested](https://github.com/AcademySoftwareFoundation/openexr/commit/eda733c5880e226873116ba66ce9069dbc844bdd) ([Peter Hillman](@peterh@wetafx.co.nz) 2019-07-09) \n\n* [Address #270: limit to INT_MAX tiles total](https://github.com/AcademySoftwareFoundation/openexr/commit/7f438ffac4f6feb46383f66cb7e83ab41074943d) ([Peter Hillman](@peterh@wetafx.co.nz) 2019-07-05) \n\n* [exr2aces wasn't built via the configure script](https://github.com/AcademySoftwareFoundation/openexr/commit/1959f74ee7f47948038a1ecb16c8ba8b84d4eb89) ([Peter Hillman](@peterh@wetafx.co.nz) 2019-07-05) \n\n* [added links for CVE's](https://github.com/AcademySoftwareFoundation/openexr/commit/afd9beac8b7e114def78793b6810cbad8764a477) ([Cary Phillips](@cary@ilm.com) 2019-07-02) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [added \"Test Policy\" section to CONTRIBUTING.](https://github.com/AcademySoftwareFoundation/openexr/commit/695019e4b98b55ed583d1455a9219e55fc777d1a) ([Cary Phillips](@cary@ilm.com) 2019-07-02) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [updated references to CVE's in release notes.](https://github.com/AcademySoftwareFoundation/openexr/commit/2a0226b4c99c057ab7f3b038dafd92543ade3e6f) ([Cary Phillips](@cary@ilm.com) 2019-07-02) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [Fixed the 2.3.0 release notes to mention that CVE-2017-12596 is fixed.](https://github.com/AcademySoftwareFoundation/openexr/commit/9da28302194b413b57da757ab69eb33373407f51) ([Cary Phillips](@cary@ilm.com) 2019-06-26) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [Added Coding Style section on Type Casting.](https://github.com/AcademySoftwareFoundation/openexr/commit/7790ad78bb4e2b6f4bf22a7c1703af1e352004a4) ([Cary Phillips](@cary@ilm.com) 2019-07-08) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [adding source .odt files for the .pdf's on the documention page on openexr.com](https://github.com/AcademySoftwareFoundation/openexr/commit/2f7847e3faf7146f2be8c1c0c3053c50b7ee9d97) ([Cary Phillips](@cary@ilm.com) 2019-07-03) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [fix readme typo](https://github.com/AcademySoftwareFoundation/openexr/commit/67c1d4d2fc62f1bbc94202e49e65bd92de2e580f) ([Nick Porcino](@meshula@hotmail.com) 2019-07-08) \n\n* [Handle exceptions, per SonarCloud rules; all catch blocks must do something to indicate the exception isn't ignored.](https://github.com/AcademySoftwareFoundation/openexr/commit/fbce9002eff631b3feeeb18d45419c1fba4204ea) ([Cary Phillips](@cary@ilm.com) 2019-07-07) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [TSC meeting notes June 27, 2019](https://github.com/AcademySoftwareFoundation/openexr/commit/4093d0fbb16ad687779ec6cc7b44308596d5579f) ([Cary Phillips](@cary@ilm.com) 2019-06-28) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [Implement semaphore for osx](https://github.com/AcademySoftwareFoundation/openexr/commit/fbb912c3c8b13a9581ffde445e390c1603bae35d) ([oleksii.vorobiov](@oleksii.vorobiov@globallogic.com) 2018-11-01) \n\n* [Various fixes to address compiler warnings: - removed unused variables and functions - added default cases to switch statements - member initialization order in class constructors - lots of signed/unsigned comparisons fixed either by changing a loop iterator from int to size_t, or by selective type casting.](https://github.com/AcademySoftwareFoundation/openexr/commit/c8a7f6a5ebce9a6d5bd9a3320bc746221789f407) ([Cary Phillips](@cary@ilm.com) 2019-06-24) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [convert_index returns Py_ssize_t](https://github.com/AcademySoftwareFoundation/openexr/commit/ce886b87336ba04a12eb631ecfcc71da0c9b74bf) ([Cary Phillips](@cary@ilm.com) 2019-06-27) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [Fix #342, copy paste bug with dependencies](https://github.com/AcademySoftwareFoundation/openexr/commit/2b28d90bc5e329c989dc44c1d5fdcdf715d225d7) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-06-28) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Fixes the rpath setting to have the correct variable name](https://github.com/AcademySoftwareFoundation/openexr/commit/5093aaa05278030d07304588fa52466538794fe7) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-06-27) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Add ImfFloatVectorAttribute.h to the automake install](https://github.com/AcademySoftwareFoundation/openexr/commit/d61c0967cb7cd8fa255de64e4e79894d59c0f82d) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-06-26) The CMake file was previously updated to include this file on install,\nbut was missing from the automake side.\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Fix #350 - memory leak on exit](https://github.com/AcademySoftwareFoundation/openexr/commit/adbc1900cb9d25fcc4df008d4008b781cf2fa4f8) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-06-27) This fixes CVE-2018-18443, the last thread pool provider set into the\npool was not being correctly cleaned up at shutdown of the thread pool.\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Fix library suffix issue in cmake file for exr2aces](https://github.com/AcademySoftwareFoundation/openexr/commit/e4099a673e3348d4836c79a760e07b28b1912083) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-06-27) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Iterate on formatting, add script to run the formatting](https://github.com/AcademySoftwareFoundation/openexr/commit/969305c5731aef054e170e776086e3747eb20ee0) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-06-27) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [Add initial rules for running clang-format on the code base](https://github.com/AcademySoftwareFoundation/openexr/commit/6513fcf2e25ebd92c8f80f18e8cd7718ba7c4a41) ([Kimball Thurston](@kdt3rd@gmail.com) 2019-06-27) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [find Boost.Python 3 on older Boost versions](https://github.com/AcademySoftwareFoundation/openexr/commit/9b58cf0fc197947dc5798854de639233bb35c6cb) ([Jens Lindgren](@lindgren_jens@hotmail.com) 2018-11-19) \n\n* [MSYS support](https://github.com/AcademySoftwareFoundation/openexr/commit/a19c806a7b52cdf74bfa6966b720efd8b24a2590) ([Harry Mallon](@hjmallon@gmail.com) 2019-01-30) \n\n* [Only find_package ZLIB when required](https://github.com/AcademySoftwareFoundation/openexr/commit/ab357b0a7a6d7e0ee761bf8ee5846688626d9236) ([Harry Mallon](@hjmallon@gmail.com) 2019-02-06) \n\n* [Remove unused headers](https://github.com/AcademySoftwareFoundation/openexr/commit/db9fcdc9c448a9f0d0da78010492398a394c87e7) ([Grant Kim](@6302240+enpinion@users.noreply.github.com) 2019-06-13) \n\n* [WIN32 to _WIN32 for Compiler portability](https://github.com/AcademySoftwareFoundation/openexr/commit/6e2a73ed8721da899a5bd844397444d5b15a5c71) ([Grant Kim](@6302240+enpinion@users.noreply.github.com) 2019-06-11) https://docs.microsoft.com/en-us/cpp/preprocessor/predefined-macros?view=vs-2019\n_WIN32 is the standard according to the official documentation from Microsoft and also this fixes MinGW compile error.\n\n* [Update README.md](https://github.com/AcademySoftwareFoundation/openexr/commit/45e9910be6009ac4ddf4db51c3c505daafc942a3) ([Huibean Luo](@huibean.luo@gmail.com) 2019-04-08) \n\n* [Added a few people to CREDITS.](https://github.com/AcademySoftwareFoundation/openexr/commit/db512f5de8f4cc0f6ff81a67bf1bb7e8e7f0cc53) ([Cary Phillips](@cary@ilm.com) 2019-06-20) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [added release note summary information for all old releases from the \"Announcements\" section of openexr.com to CHANGES.md, so the repo's release notes are complete.](https://github.com/AcademySoftwareFoundation/openexr/commit/61bbd0df59494cc2fa0e508506f32526acf2bf51) ([Cary Phillips](@cary@ilm.com) 2019-06-20) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [first real draft of coding style, and steps in the release process.](https://github.com/AcademySoftwareFoundation/openexr/commit/1d514e66313cac0440b80c290b35cfa6b8f89b51) ([Cary Phillips](@cary@ilm.com) 2019-06-20) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [- added CREDITS.md (generated from \"git log\") - added CODEOWNERS (mostly a placeholder, everything is currently owned by TSC members) - the Release Process section of CONTRIBUTING gives the git log arguments to generate release notes. - remove stray meeting minutes file at the root level.](https://github.com/AcademySoftwareFoundation/openexr/commit/050048c72ef4c32119d21cdb499e23418429f529) ([Cary Phillips](@cary@ilm.com) 2019-06-19) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [fixed references to renamed ASWF folder](https://github.com/AcademySoftwareFoundation/openexr/commit/bd4c36cf07db310bb8350a4e5f575d86f1c7f8cb) ([Cary Phillips](@cary@ilm.com) 2019-06-19) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [June 20, 2019 TSC meeting notes](https://github.com/AcademySoftwareFoundation/openexr/commit/82134840a001c2692ee762b0a767ab1b43cb64db) ([Cary Phillips](@cary@ilm.com) 2019-06-20) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [CLA's Renamed aswf-tsc to ASWF](https://github.com/AcademySoftwareFoundation/openexr/commit/7ebb766d7540ae9a2caea80b9f1c9799d7c8d8af) ([Cary Phillips](@cary@ilm.com) 2019-06-15) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [2019-06-13.md](https://github.com/AcademySoftwareFoundation/openexr/commit/9b2719c68635879421805ed3b602ea19aae68a77) ([seabeepea](@seabeepea@gmail.com) 2019-06-14) Signed-off-by: seabeepea <seabeepea@gmail.com>\n\n* [Missed John on the attendee list.](https://github.com/AcademySoftwareFoundation/openexr/commit/0035649cc6d7f4d86be8609758b927b01b8c110c) ([Cary Phillips](@cary@ilm.com) 2019-06-13) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [TSC Meeting notes June 13, 2019](https://github.com/AcademySoftwareFoundation/openexr/commit/79857214aec3d81f73f2e9613a4b44caa21751c8) ([Cary Phillips](@cary@ilm.com) 2019-06-13) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [- Formatting section is TBD - fixed references to license - removed references to CI - added section on GitHub labels](https://github.com/AcademySoftwareFoundation/openexr/commit/0045a12d20112b253895d88b4e2bce3ffcff0d90) ([Cary Phillips](@cary@ilm.com) 2019-06-14) Signed-off-by: Cary Phillips <cary@ilm.com>\n\n* [fixing minor typos](https://github.com/AcademySoftwareFoundation/openexr/commit/f62e9c0f9903e03c1d0d80e68e29ffba573c7f8d) ([xlietz](@31363633+xlietz@users.noreply.github.com) 2019-06-12) \n\n* [Edits to README.md and CONTRIBUTING.md](https://github.com/AcademySoftwareFoundation/openexr/commit/55a674bde7ee63c1badacbe061d3cb222927c68e) ([Cary Phillips](@cary@ilm.com) 2019-06-11) \n\n* [Add initial Azure pipeline setup file](https://github.com/AcademySoftwareFoundation/openexr/commit/9ed83bd964008c4ff19958b0e2824e08bdf6e610) ([seabeepea](@seabeepea@gmail.com) 2019-06-12) \n\n* [typos](https://github.com/AcademySoftwareFoundation/openexr/commit/10e33e334df9202cd8c8a940c7cd3ec36548d7d8) ([seabeepea](@seabeepea@gmail.com) 2019-06-09) \n\n* [Contributing and Goverance sections](https://github.com/AcademySoftwareFoundation/openexr/commit/ce9f05fbcc4c47330c43815cc40fc164e2ad53d3) ([seabeepea](@seabeepea@gmail.com) 2019-06-09) \n\n* [meeting notes](https://github.com/AcademySoftwareFoundation/openexr/commit/eed7c0aa972cf8b5f5641ca9946b27a3a054155f) ([Cary Phillips](@cary@ilm.com) 2019-05-09) \n\n* [Fixed formatting](https://github.com/AcademySoftwareFoundation/openexr/commit/b10e1015e349313b589f4c0b5b4bddefd3da64f7) ([John Mertic](@jmertic@linuxfoundation.org) 2019-05-08) Signed-off-by: John Mertic <jmertic@linuxfoundation.org>\n\n* [moved charter to charter subfolder.](https://github.com/AcademySoftwareFoundation/openexr/commit/db49dcfdfcfaca5a60a84f65ced11df97d0df1ec) ([Cary Phillips](@cary@ilm.com) 2019-05-08) \n\n* [OpenEXR-Technical-Charter.md](https://github.com/AcademySoftwareFoundation/openexr/commit/2a33b9a4ca520490c5f368d6028decb9c76f8837) ([Cary Phillips](@cary@ilm.com) 2019-05-08) \n\n* [OpenEXR-Adoption-Proposal.md](https://github.com/AcademySoftwareFoundation/openexr/commit/3e22cab39663b5c97ba3fd20df02ae634e21fc84) ([Cary Phillips](@cary@ilm.com) 2019-05-08) \n\n* [Meeting notes 2019-5-2](https://github.com/AcademySoftwareFoundation/openexr/commit/c33d52f6c5a7d453d4b969224ab33852e47fe084) ([Cary Phillips](@cary@ilm.com) 2019-05-05) \n\n* [Remove unused cmake variable](https://github.com/AcademySoftwareFoundation/openexr/commit/c3a1da6f47279d34c23d29f6e2f264cf2126a4f8) ([Nick Porcino](@nick.porcino@oculus.com) 2019-03-29) \n\n* [add build-win/, build-nuget/, and *~ to .gitignore.](https://github.com/AcademySoftwareFoundation/openexr/commit/94ab55d8d4103881324ec15b8a41b3298ca7e467) ([Cary Phillips](@cary@ilm.com) 2018-09-22) \n\n* [Update the README files with instructions for building on Windows, specifically calling out the proper Visual Studio version.](https://github.com/AcademySoftwareFoundation/openexr/commit/ab742b86a37a7eb93f0312d98fc47f7526ddd65a) ([Cary Phillips](@cary@ilm.com) 2018-09-22) \n\n* [Removed OpenEXRViewers.pc.in and PyIlmBase.pc.in. Since these modules are binaries, not libraries, there is no need to support pkgconfig for them.](https://github.com/AcademySoftwareFoundation/openexr/commit/999a49d721604bb88178b596675deda4dc25cf1b) ([Cary Phillips](@cary@ilm.com) 2018-09-22) \n\n* [Rebuild OpenEXR NuGet with 2.3 source and enable exrviewer for testing purposes](https://github.com/AcademySoftwareFoundation/openexr/commit/c0d0a637a25e1741f528999a2556eda39102ddac) ([mancoast](@RobertPancoast77@gmail.com) 2018-09-15) \n\n* [fix standalone and combined cmake](https://github.com/AcademySoftwareFoundation/openexr/commit/017d027cc27ac0a7b2af90196fe3e49c4afe1aab) ([Kimball Thurston](@kdt3rd@gmail.com) 2018-09-08) This puts the version numbers into one file, and the settings and\nvariables for building into another, that is then replicated and\nconditionally included when building a standalone package.\nSigned-off-by: Kimball Thurston <kdt3rd@gmail.com>\n\n* [CONTRIBUTING.md, INSTALL.md, and changes README.md and INSTALL.md](https://github.com/AcademySoftwareFoundation/openexr/commit/d1d9f19475c858e66c1260fcc2be9e26dcddfc03) ([seabeepea](@seabeepea@gmail.com) 2019-06-09) \n\n* [added GOVERNANCE.md](https://github.com/AcademySoftwareFoundation/openexr/commit/09a11a92b149f0e7d51a62086572050ad4fdc4fe) ([seabeepea](@seabeepea@gmail.com) 2019-06-09) \n\n\n\n## Version 2.3.0 (August 13, 2018)\n\n### Features/Improvements:\n\n* ThreadPool overhead improvements, enable custom thread pool to be registered via ThreadPoolProvider class\n* Fixes to enable custom namespaces for Iex, Imf\n* Improve read performance for deep/zipped data, and SIMD-accelerated uncompress support\n* Added rawPixelDataToBuffer() function for access to compressed scanlines\n* Iex::BaseExc no longer derived from std::string.\n* Imath throw() specifiers removed\n* Initial Support for Python 3\n\n### Bugs:\n\n* 25+ various bug fixes (see detailed Release Notes for the full list)\n\n* This release addresses vulnerability [CVE-2017-12596](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-12596).\n\n### Build Fixes:\n\n* Various fixes to the cmake and autoconf build infrastructures\n* Various changes to support compiling for C++11 / C++14 / C++17 and GCC 6.3.1\n* Various fixes to address Windows build issues\n* 60+ total build-related fixes (see detailed Release Notes for the full list)\n\n### Diff Stats \\[git diff --stat v2.2.1\\]\n\n    CHANGES.md                                         |  1487 +++\n    CMakeLists.txt                                     |   194 +\n    Contrib/DtexToExr/bootstrap                        |     2 +-\n    Contrib/DtexToExr/configure.ac                     |     2 +-\n    IlmBase/CMakeLists.txt                             |   214 +-\n    IlmBase/COPYING                                    |    34 -\n    IlmBase/Half/CMakeLists.txt                        |   107 +-\n    IlmBase/Half/half.cpp                              |     6 +-\n    IlmBase/Half/half.h                                |     8 +-\n    IlmBase/Half/halfExport.h                          |    44 +-\n    IlmBase/Half/halfLimits.h                          |     9 +\n    IlmBase/HalfTest/CMakeLists.txt                    |     4 +-\n    IlmBase/HalfTest/testLimits.cpp                    |    13 +-\n    IlmBase/INSTALL                                    |     2 -\n    IlmBase/Iex/CMakeLists.txt                         |    81 +-\n    IlmBase/Iex/IexBaseExc.cpp                         |    71 +-\n    IlmBase/Iex/IexBaseExc.h                           |    87 +-\n    IlmBase/Iex/IexMacros.h                            |    62 +-\n    IlmBase/IexMath/CMakeLists.txt                     |    76 +-\n    IlmBase/IexMath/IexMathFloatExc.cpp                |    18 +\n    IlmBase/IexMath/IexMathFloatExc.h                  |    36 +-\n    IlmBase/IexTest/CMakeLists.txt                     |     4 +-\n    IlmBase/IexTest/testBaseExc.cpp                    |     2 +-\n    IlmBase/IlmThread/CMakeLists.txt                   |    78 +-\n    IlmBase/IlmThread/IlmThread.cpp                    |    48 +-\n    IlmBase/IlmThread/IlmThread.h                      |    48 +-\n    IlmBase/IlmThread/IlmThreadForward.h               |     8 +\n    IlmBase/IlmThread/IlmThreadMutex.cpp               |     7 +-\n    IlmBase/IlmThread/IlmThreadMutex.h                 |    48 +-\n    IlmBase/IlmThread/IlmThreadMutexPosix.cpp          |    10 +-\n    IlmBase/IlmThread/IlmThreadMutexWin32.cpp          |     9 +-\n    IlmBase/IlmThread/IlmThreadPool.cpp                |   720 +-\n    IlmBase/IlmThread/IlmThreadPool.h                  |    64 +-\n    IlmBase/IlmThread/IlmThreadPosix.cpp               |     2 +\n    IlmBase/IlmThread/IlmThreadSemaphore.h             |    49 +-\n    .../IlmThread/IlmThreadSemaphorePosixCompat.cpp    |    78 +-\n    IlmBase/IlmThread/IlmThreadWin32.cpp               |     6 +\n    IlmBase/Imath/CMakeLists.txt                       |   130 +-\n    IlmBase/Imath/ImathBox.cpp                         |    37 -\n    IlmBase/Imath/ImathEuler.h                         |     7 +-\n    IlmBase/Imath/ImathInt64.h                         |     3 +\n    IlmBase/Imath/ImathMatrix.h                        |    56 +-\n    IlmBase/Imath/ImathShear.cpp                       |    54 -\n    IlmBase/Imath/ImathVec.cpp                         |    24 +-\n    IlmBase/Imath/ImathVec.h                           |    48 +-\n    IlmBase/Imath/Makefile.am                          |     4 +-\n    IlmBase/ImathTest/CMakeLists.txt                   |     6 +-\n    IlmBase/Makefile.am                                |     5 +-\n    IlmBase/README                                     |    70 -\n    IlmBase/README.CVS                                 |    16 -\n    IlmBase/README.OSX                                 |   101 -\n    IlmBase/README.cmake.txt                           |    65 -\n    IlmBase/README.git                                 |    16 -\n    IlmBase/README.md                                  |   277 +\n    IlmBase/README.namespacing                         |    83 -\n    IlmBase/bootstrap                                  |     4 +-\n    IlmBase/config.windows/IlmBaseConfig.h             |     1 +\n    IlmBase/config/IlmBaseConfig.h.in                  |     7 +\n    IlmBase/configure.ac                               |    50 +-\n    IlmBase/m4/ax_cxx_compile_stdcxx.m4                |   982 ++\n    LICENSE                                            |    34 +\n    OpenEXR/AUTHORS                                    |     2 +\n    OpenEXR/CMakeLists.txt                             |   272 +-\n    OpenEXR/COPYING                                    |    34 -\n    OpenEXR/INSTALL                                    |     2 -\n    OpenEXR/IlmImf/CMakeLists.txt                      |   396 +-\n    OpenEXR/IlmImf/ImfAcesFile.h                       |    38 +-\n    OpenEXR/IlmImf/ImfAttribute.cpp                    |     6 +\n    OpenEXR/IlmImf/ImfAttribute.h                      |     8 +-\n    OpenEXR/IlmImf/ImfB44Compressor.h                  |    10 +-\n    OpenEXR/IlmImf/ImfCRgbaFile.h                      |     2 +-\n    OpenEXR/IlmImf/ImfChannelList.h                    |    45 +-\n    OpenEXR/IlmImf/ImfChromaticities.h                 |     5 +-\n    OpenEXR/IlmImf/ImfCompositeDeepScanLine.h          |    14 +-\n    OpenEXR/IlmImf/ImfCompressionAttribute.h           |     6 +-\n    OpenEXR/IlmImf/ImfCompressor.h                     |    14 +-\n    OpenEXR/IlmImf/ImfDeepCompositing.h                |     6 +-\n    OpenEXR/IlmImf/ImfDeepFrameBuffer.h                |    38 +-\n    OpenEXR/IlmImf/ImfDeepScanLineInputFile.cpp        |     6 +-\n    OpenEXR/IlmImf/ImfDeepScanLineInputFile.h          |    20 +-\n    OpenEXR/IlmImf/ImfDeepScanLineInputPart.h          |    18 +-\n    OpenEXR/IlmImf/ImfDeepScanLineOutputFile.cpp       |    14 +-\n    OpenEXR/IlmImf/ImfDeepScanLineOutputFile.h         |    14 +-\n    OpenEXR/IlmImf/ImfDeepScanLineOutputPart.h         |    12 +-\n    OpenEXR/IlmImf/ImfDeepTiledInputFile.cpp           |    16 +-\n    OpenEXR/IlmImf/ImfDeepTiledInputFile.h             |    37 +-\n    OpenEXR/IlmImf/ImfDeepTiledInputPart.cpp           |     2 +-\n    OpenEXR/IlmImf/ImfDeepTiledInputPart.h             |    34 +-\n    OpenEXR/IlmImf/ImfDeepTiledOutputFile.cpp          |    18 +-\n    OpenEXR/IlmImf/ImfDeepTiledOutputFile.h            |    33 +-\n    OpenEXR/IlmImf/ImfDeepTiledOutputPart.h            |    31 +-\n    OpenEXR/IlmImf/ImfDwaCompressor.cpp                |   232 +-\n    OpenEXR/IlmImf/ImfDwaCompressor.h                  |    43 +-\n    OpenEXR/IlmImf/ImfDwaCompressorSimd.h              |    67 +-\n    OpenEXR/IlmImf/ImfFastHuf.cpp                      |    62 +-\n    OpenEXR/IlmImf/ImfFastHuf.h                        |     5 +\n    OpenEXR/IlmImf/ImfFrameBuffer.h                    |    36 +-\n    OpenEXR/IlmImf/ImfGenericInputFile.h               |     5 +-\n    OpenEXR/IlmImf/ImfGenericOutputFile.h              |     6 +-\n    OpenEXR/IlmImf/ImfHeader.h                         |    90 +-\n    OpenEXR/IlmImf/ImfIO.h                             |    13 +-\n    OpenEXR/IlmImf/ImfInputFile.cpp                    |    41 +-\n    OpenEXR/IlmImf/ImfInputFile.h                      |    42 +-\n    OpenEXR/IlmImf/ImfInputPart.cpp                    |     8 +\n    OpenEXR/IlmImf/ImfInputPart.h                      |    22 +-\n    OpenEXR/IlmImf/ImfInputPartData.h                  |     1 +\n    OpenEXR/IlmImf/ImfInt64.h                          |     1 +\n    OpenEXR/IlmImf/ImfKeyCode.h                        |    19 +-\n    OpenEXR/IlmImf/ImfLut.h                            |     8 +-\n    OpenEXR/IlmImf/ImfMisc.cpp                         |    55 +-\n    OpenEXR/IlmImf/ImfMisc.h                           |    20 +-\n    OpenEXR/IlmImf/ImfMultiPartInputFile.cpp           |     4 +-\n    OpenEXR/IlmImf/ImfMultiPartInputFile.h             |    10 +-\n    OpenEXR/IlmImf/ImfMultiPartOutputFile.cpp          |     4 +-\n    OpenEXR/IlmImf/ImfMultiPartOutputFile.h            |    10 +-\n    OpenEXR/IlmImf/ImfName.h                           |     9 +\n    OpenEXR/IlmImf/ImfOpaqueAttribute.h                |    10 +-\n    OpenEXR/IlmImf/ImfOptimizedPixelReading.h          |     4 +-\n    OpenEXR/IlmImf/ImfOutputFile.cpp                   |    95 +-\n    OpenEXR/IlmImf/ImfOutputFile.h                     |    15 +-\n    OpenEXR/IlmImf/ImfOutputPart.h                     |    13 +-\n    OpenEXR/IlmImf/ImfOutputPartData.h                 |    23 +-\n    OpenEXR/IlmImf/ImfPizCompressor.h                  |    10 +-\n    OpenEXR/IlmImf/ImfPreviewImage.h                   |    14 +-\n    OpenEXR/IlmImf/ImfPxr24Compressor.h                |    10 +-\n    OpenEXR/IlmImf/ImfRational.h                       |     3 +-\n    OpenEXR/IlmImf/ImfRgbaFile.h                       |    47 +-\n    OpenEXR/IlmImf/ImfRleCompressor.h                  |     7 +-\n    OpenEXR/IlmImf/ImfScanLineInputFile.cpp            |    42 +-\n    OpenEXR/IlmImf/ImfScanLineInputFile.h              |    37 +-\n    OpenEXR/IlmImf/ImfSimd.h                           |    11 +-\n    OpenEXR/IlmImf/ImfStdIO.cpp                        |    36 +-\n    OpenEXR/IlmImf/ImfStdIO.h                          |    24 +-\n    OpenEXR/IlmImf/ImfSystemSpecific.h                 |    15 +-\n    OpenEXR/IlmImf/ImfTileOffsets.h                    |    16 +-\n    OpenEXR/IlmImf/ImfTiledInputFile.cpp               |    16 +-\n    OpenEXR/IlmImf/ImfTiledInputFile.h                 |    32 +-\n    OpenEXR/IlmImf/ImfTiledInputPart.h                 |    30 +-\n    OpenEXR/IlmImf/ImfTiledOutputFile.cpp              |    66 +-\n    OpenEXR/IlmImf/ImfTiledOutputFile.h                |    39 +-\n    OpenEXR/IlmImf/ImfTiledOutputPart.h                |    33 +-\n    OpenEXR/IlmImf/ImfTiledRgbaFile.h                  |    83 +-\n    OpenEXR/IlmImf/ImfTimeCode.h                       |    35 +-\n    OpenEXR/IlmImf/ImfVersion.h                        |     4 +-\n    OpenEXR/IlmImf/ImfZip.cpp                          |   191 +-\n    OpenEXR/IlmImf/ImfZip.h                            |     8 +\n    OpenEXR/IlmImf/ImfZipCompressor.h                  |     5 +\n    OpenEXR/IlmImf/Makefile.am                         |    12 +-\n    OpenEXR/IlmImf/dwaLookups.cpp                      |    10 +-\n    OpenEXR/IlmImfExamples/CMakeLists.txt              |    18 +-\n    OpenEXR/IlmImfExamples/Makefile.am                 |     8 +-\n    OpenEXR/IlmImfExamples/previewImageExamples.cpp    |     6 +-\n    OpenEXR/IlmImfFuzzTest/CMakeLists.txt              |    27 +-\n    OpenEXR/IlmImfFuzzTest/Makefile.am                 |     6 +-\n    OpenEXR/IlmImfTest/CMakeLists.txt                  |    18 +-\n    OpenEXR/IlmImfTest/Makefile.am                     |     6 +-\n    OpenEXR/IlmImfTest/compareDwa.h                    |     4 +-\n    OpenEXR/IlmImfTest/testDwaCompressorSimd.cpp       |    47 +-\n    OpenEXR/IlmImfUtil/CMakeLists.txt                  |   113 +-\n    OpenEXR/IlmImfUtil/ImfDeepImage.h                  |    33 +-\n    OpenEXR/IlmImfUtil/ImfDeepImageChannel.h           |    35 +-\n    OpenEXR/IlmImfUtil/ImfDeepImageIO.h                |    26 +-\n    OpenEXR/IlmImfUtil/ImfDeepImageLevel.cpp           |     2 +-\n    OpenEXR/IlmImfUtil/ImfDeepImageLevel.h             |    44 +-\n    OpenEXR/IlmImfUtil/ImfFlatImage.h                  |    29 +-\n    OpenEXR/IlmImfUtil/ImfFlatImageChannel.h           |    10 +-\n    OpenEXR/IlmImfUtil/ImfFlatImageIO.h                |    26 +-\n    OpenEXR/IlmImfUtil/ImfFlatImageLevel.cpp           |     2 +-\n    OpenEXR/IlmImfUtil/ImfFlatImageLevel.h             |    31 +-\n    OpenEXR/IlmImfUtil/ImfImage.cpp                    |     4 +-\n    OpenEXR/IlmImfUtil/ImfImage.h                      |    31 +-\n    OpenEXR/IlmImfUtil/ImfImageChannel.h               |    10 +-\n    OpenEXR/IlmImfUtil/ImfImageDataWindow.cpp          |     3 +-\n    OpenEXR/IlmImfUtil/ImfImageDataWindow.h            |     2 +\n    OpenEXR/IlmImfUtil/ImfImageIO.h                    |    10 +-\n    OpenEXR/IlmImfUtil/ImfImageLevel.cpp               |     2 +-\n    OpenEXR/IlmImfUtil/ImfImageLevel.h                 |    20 +-\n    OpenEXR/IlmImfUtil/ImfSampleCountChannel.h         |    23 +-\n    OpenEXR/IlmImfUtil/ImfUtilExport.h                 |    46 +\n    OpenEXR/IlmImfUtil/Makefile.am                     |    16 +-\n    OpenEXR/IlmImfUtilTest/CMakeLists.txt              |    20 +-\n    OpenEXR/IlmImfUtilTest/Makefile.am                 |     6 +-\n    OpenEXR/Makefile.am                                |     5 +-\n    OpenEXR/README                                     |    77 -\n    OpenEXR/README.CVS                                 |    16 -\n    OpenEXR/README.OSX                                 |    57 -\n    OpenEXR/README.cmake.txt                           |    54 -\n    OpenEXR/README.git                                 |    16 -\n    OpenEXR/README.md                                  |   132 +\n    OpenEXR/README.namespacing                         |    83 -\n    OpenEXR/bootstrap                                  |     4 +-\n    OpenEXR/build.log                                  | 11993 -------------------\n    OpenEXR/configure.ac                               |   284 +-\n    OpenEXR/doc/Makefile.am                            |     1 -\n    OpenEXR/doc/TheoryDeepPixels.pdf                   |   Bin 331719 -> 334777 bytes\n    OpenEXR/exr2aces/CMakeLists.txt                    |    10 +-\n    OpenEXR/exrbuild/CMakeLists.txt                    |    13 +-\n    OpenEXR/exrenvmap/CMakeLists.txt                   |    10 +-\n    OpenEXR/exrenvmap/Makefile.am                      |     6 +-\n    OpenEXR/exrheader/CMakeLists.txt                   |    15 +-\n    OpenEXR/exrheader/Makefile.am                      |     6 +-\n    OpenEXR/exrmakepreview/CMakeLists.txt              |    10 +-\n    OpenEXR/exrmakepreview/Makefile.am                 |     6 +-\n    OpenEXR/exrmakepreview/makePreview.cpp             |     6 +-\n    OpenEXR/exrmaketiled/CMakeLists.txt                |     9 +-\n    OpenEXR/exrmaketiled/Makefile.am                   |     6 +-\n    OpenEXR/exrmaketiled/makeTiled.cpp                 |     8 +-\n    OpenEXR/exrmultipart/CMakeLists.txt                |    13 +-\n    OpenEXR/exrmultipart/Makefile.am                   |     8 +-\n    OpenEXR/exrmultiview/CMakeLists.txt                |    12 +-\n    OpenEXR/exrmultiview/Makefile.am                   |     6 +-\n    OpenEXR/exrstdattr/CMakeLists.txt                  |    13 +-\n    OpenEXR/exrstdattr/Makefile.am                     |     6 +-\n    OpenEXR/m4/ax_cxx_compile_stdcxx.m4                |   982 ++\n    OpenEXR/m4/path.pkgconfig.m4                       |    63 +-\n    OpenEXR_Viewers/AUTHORS                            |    12 -\n    OpenEXR_Viewers/CMakeLists.txt                     |    71 +-\n    OpenEXR_Viewers/COPYING                            |    34 -\n    OpenEXR_Viewers/INSTALL                            |     2 -\n    OpenEXR_Viewers/Makefile.am                        |     6 +-\n    OpenEXR_Viewers/NEWS                               |     2 -\n    OpenEXR_Viewers/README                             |    95 -\n    OpenEXR_Viewers/README.CVS                         |    16 -\n    OpenEXR_Viewers/README.OSX                         |    18 -\n    OpenEXR_Viewers/README.md                          |   278 +\n    OpenEXR_Viewers/README.win32                       |   196 -\n    OpenEXR_Viewers/bootstrap                          |     4 +-\n    OpenEXR_Viewers/configure.ac                       |    47 +-\n    OpenEXR_Viewers/exrdisplay/CMakeLists.txt          |    15 +-\n    OpenEXR_Viewers/exrdisplay/GlWindow3d.h            |     5 +\n    OpenEXR_Viewers/m4/ax_cxx_compile_stdcxx.m4        |   982 ++\n    OpenEXR_Viewers/playexr/CMakeLists.txt             |     8 +-\n    PyIlmBase/AUTHORS                                  |    10 -\n    PyIlmBase/CMakeLists.txt                           |   128 +-\n    PyIlmBase/COPYING                                  |    34 -\n    PyIlmBase/INSTALL                                  |     2 -\n    PyIlmBase/Makefile.am                              |     7 +-\n    PyIlmBase/NEWS                                     |     2 -\n    PyIlmBase/PyIex/CMakeLists.txt                     |    52 +-\n    PyIlmBase/PyIex/PyIex.cpp                          |     4 +-\n    PyIlmBase/PyIex/PyIex.h                            |     4 +-\n    PyIlmBase/PyIex/PyIexExport.h                      |    45 +-\n    PyIlmBase/PyIex/iexmodule.cpp                      |     5 +-\n    PyIlmBase/PyIexTest/CMakeLists.txt                 |     4 +-\n    PyIlmBase/PyImath/CMakeLists.txt                   |    53 +-\n    PyIlmBase/PyImath/PyImath.cpp                      |     5 +-\n    PyIlmBase/PyImath/PyImath.h                        |     8 +-\n    PyIlmBase/PyImath/PyImathAutovectorize.cpp         |     2 +-\n    PyIlmBase/PyImath/PyImathAutovectorize.h           |     6 +-\n    PyIlmBase/PyImath/PyImathBasicTypes.cpp            |     9 +-\n    PyIlmBase/PyImath/PyImathBasicTypes.h              |     4 +-\n    PyIlmBase/PyImath/PyImathBox.cpp                   |    18 +-\n    PyIlmBase/PyImath/PyImathBox.h                     |     4 +-\n    PyIlmBase/PyImath/PyImathBox2Array.cpp             |     4 +-\n    PyIlmBase/PyImath/PyImathBox3Array.cpp             |     4 +-\n    PyIlmBase/PyImath/PyImathBoxArrayImpl.h            |    10 +-\n    PyIlmBase/PyImath/PyImathColor.h                   |     3 +-\n    PyIlmBase/PyImath/PyImathColor3.cpp                |     8 +-\n    PyIlmBase/PyImath/PyImathColor3ArrayImpl.h         |     4 +-\n    PyIlmBase/PyImath/PyImathColor4.cpp                |     6 +-\n    PyIlmBase/PyImath/PyImathColor4Array2DImpl.h       |     7 +-\n    PyIlmBase/PyImath/PyImathColor4ArrayImpl.h         |     4 +-\n    PyIlmBase/PyImath/PyImathEuler.cpp                 |     8 +-\n    PyIlmBase/PyImath/PyImathEuler.h                   |     3 +-\n    PyIlmBase/PyImath/PyImathExport.h                  |    52 +-\n    PyIlmBase/PyImath/PyImathFixedArray.cpp            |     2 +-\n    PyIlmBase/PyImath/PyImathFixedArray.h              |    11 +-\n    PyIlmBase/PyImath/PyImathFixedArray2D.h            |     9 +\n    PyIlmBase/PyImath/PyImathFixedMatrix.h             |     9 +\n    PyIlmBase/PyImath/PyImathFixedVArray.cpp           |    14 +-\n    PyIlmBase/PyImath/PyImathFixedVArray.h             |     2 +-\n    PyIlmBase/PyImath/PyImathFrustum.cpp               |     8 +-\n    PyIlmBase/PyImath/PyImathFrustum.h                 |     3 +-\n    PyIlmBase/PyImath/PyImathFun.cpp                   |     8 +-\n    PyIlmBase/PyImath/PyImathFun.h                     |     2 +-\n    PyIlmBase/PyImath/PyImathLine.cpp                  |    16 +-\n    PyIlmBase/PyImath/PyImathLine.h                    |     2 +-\n    PyIlmBase/PyImath/PyImathM44Array.cpp              |     6 +-\n    PyIlmBase/PyImath/PyImathM44Array.h                |     2 +-\n    PyIlmBase/PyImath/PyImathMatrix.h                  |     3 +-\n    PyIlmBase/PyImath/PyImathMatrix33.cpp              |     8 +-\n    PyIlmBase/PyImath/PyImathMatrix44.cpp              |    10 +-\n    PyIlmBase/PyImath/PyImathOperators.h               |     4 +-\n    PyIlmBase/PyImath/PyImathPlane.cpp                 |    20 +-\n    PyIlmBase/PyImath/PyImathPlane.h                   |     2 +-\n    PyIlmBase/PyImath/PyImathQuat.cpp                  |    10 +-\n    PyIlmBase/PyImath/PyImathQuat.h                    |     3 +-\n    PyIlmBase/PyImath/PyImathRandom.cpp                |    10 +-\n    PyIlmBase/PyImath/PyImathShear.cpp                 |     8 +-\n    PyIlmBase/PyImath/PyImathStringArray.cpp           |     6 +-\n    PyIlmBase/PyImath/PyImathStringArray.h             |     4 +-\n    PyIlmBase/PyImath/PyImathStringArrayRegister.h     |     2 +-\n    PyIlmBase/PyImath/PyImathStringTable.cpp           |     4 +-\n    PyIlmBase/PyImath/PyImathTask.cpp                  |    10 +-\n    PyIlmBase/PyImath/PyImathTask.h                    |    34 +-\n    PyIlmBase/PyImath/PyImathUtil.cpp                  |     6 +-\n    PyIlmBase/PyImath/PyImathUtil.h                    |    14 +-\n    PyIlmBase/PyImath/PyImathVec.h                     |     4 +-\n    PyIlmBase/PyImath/PyImathVec2Impl.h                |    12 +-\n    PyIlmBase/PyImath/PyImathVec3ArrayImpl.h           |    12 +-\n    PyIlmBase/PyImath/PyImathVec3Impl.h                |     6 +-\n    PyIlmBase/PyImath/PyImathVec4ArrayImpl.h           |    10 +-\n    PyIlmBase/PyImath/PyImathVec4Impl.h                |     6 +-\n    PyIlmBase/PyImath/imathmodule.cpp                  |    38 +-\n    PyIlmBase/PyImathNumpy/CMakeLists.txt              |    25 +-\n    PyIlmBase/PyImathNumpy/imathnumpymodule.cpp        |    14 +-\n    PyIlmBase/PyImathNumpyTest/CMakeLists.txt          |     6 +-\n    PyIlmBase/PyImathNumpyTest/pyImathNumpyTest.in     |    81 +-\n    PyIlmBase/PyImathTest/CMakeLists.txt               |     2 +\n    PyIlmBase/PyImathTest/pyImathTest.in               |  1090 +-\n    PyIlmBase/README                                   |    51 -\n    PyIlmBase/README.OSX                               |    21 -\n    PyIlmBase/README.md                                |    99 +\n    PyIlmBase/bootstrap                                |     4 +-\n    PyIlmBase/configure.ac                             |    64 +-\n    PyIlmBase/m4/ax_cxx_compile_stdcxx.m4              |   982 ++\n    README                                             |    68 -\n    README.md                                          |   202 +\n    cmake/FindIlmBase.cmake                            |   192 +\n    cmake/FindNumPy.cmake                              |    51 +\n    cmake/FindOpenEXR.cmake                            |   198 +\n    321 files changed, 12796 insertions(+), 16398 deletions(-)\n   \n### Commits \\[ git log v2.2.1...v.2.3.0\\]\n\n*  [Reverted python library -l line logic to go back to the old PYTHON_VERSION based logic.](https://github.com/AcademySoftwareFoundation/openexr/commit/02310c624547fd765cd6e08abe459755d4ecebcc) ([Nick Rasmussen](@nick@ilm.com), 2018-08-09) \n\n*  [Updated build system to use local copies of the ax_cxx_copmile_stdcxx.m4 macro.](https://github.com/AcademySoftwareFoundation/openexr/commit/3d6c9302b3d7f394a90ac3c95d12b1db1c183812) ([Nick Rasmussen](@nick@ilm.com), 2018-08-09) \n\n*  [accidentally commited Makefile instead of Makefile.am](https://github.com/AcademySoftwareFoundation/openexr/commit/46dda162ef2b3defceaa25e6bdd2b71b98844685) ([Cary Phillips](@cary@ilm.com), 2018-08-09) \n\n*  [update CHANGES.md](https://github.com/AcademySoftwareFoundation/openexr/commit/ea46c15be9572f81549eaa76a1bdf8dbe364f780) ([Cary Phillips](@cary@ilm.com), 2018-08-08) \n\n*  [Added FindNumPy.cmake](https://github.com/AcademySoftwareFoundation/openexr/commit/63870bb10415ca7ea76ecfdafdfe70f5894f66f2) ([Nick Porcino](@meshula@hotmail.com), 2018-08-08) \n\n*  [Add PyImathNumpyTest to Makefile and configure.ac](https://github.com/AcademySoftwareFoundation/openexr/commit/36abd2b728e8759b010ceffe94363d5f473fe6dc) ([Cary Phillips](@cary@ilm.com), 2018-08-08) \n\n*  [Add ImfExportUtil.h to Makefile.am](https://github.com/AcademySoftwareFoundation/openexr/commit/82f78f4a895e29b42d2ccc0d66be08948203f507) ([Cary Phillips](@cary@ilm.com), 2018-08-08) \n\n*  [fix pyilmbase tests, static compilation](https://github.com/AcademySoftwareFoundation/openexr/commit/75c918b65c2394c7f7a9f769fee87572d06e81b5) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-08-09) - python extensions must be shared, so can not follow the overall lib type for the library. - the code should be compiled fPIC when building a static library such that it can be linked into a .so - remove the dependency on the particle python extension in the numpy test - add environment variables such that the python tests will work in the build tree without a \"make install\" (win32 doesn't neede ld_library_path, but it doesn't hurt, but may need path?) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com> \n\n*  [fix OPENEXR_VERSION and OPENEXR_SOVERSION](https://github.com/AcademySoftwareFoundation/openexr/commit/4481442b467e492a3a515b0992391dc160282786) ([Cary Phillips](@cary@ilm.com), 2018-08-08) \n\n*  [update readme documentation for new cmake option](https://github.com/AcademySoftwareFoundation/openexr/commit/081c9f9f9f26afc6943f1b2e63d171802895bee5) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-08-08) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com> \n\n*  [fix compile errors under c++17](https://github.com/AcademySoftwareFoundation/openexr/commit/6d9e3f6e2a9545e9d060f599967868d228d9a56a) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-08-08) Fixes errors with collisions due to the addition of clamp to the std namespace Signed-off-by: Kimball Thurston <kdt3rd@gmail.com> \n\n*  [add last ditch effort for numpy](https://github.com/AcademySoftwareFoundation/openexr/commit/af5fa2d84acf74e411d6592201890b1e489978c4) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-08-08) Apparently not all distributions include a FindNumPy.cmake or similar, even if numpy is indeed installed. This makes a second effort to find using python itself Signed-off-by: Kimball Thurston <kdt3rd@gmail.com> \n\n*  [make pyilmbase tests conditional](https://github.com/AcademySoftwareFoundation/openexr/commit/07951c8bdf6164e34f37c3d88799e4e98e46d1ee) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-08-08) This makes the PyIlmBase tests conditional in the same manner as OpenEXR and IlmBase Signed-off-by: Kimball Thurston <kdt3rd@gmail.com> \n\n*  [optimize regeneration of config files](https://github.com/AcademySoftwareFoundation/openexr/commit/b610ff33e827c38ac3693d3e43ad973c891d808c) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-08-08) This makes the config files write to a temporary file, then use cmake's configure_file command with copyonly to compare the contents and not copy if they are the same. Incremental builds are much faster as a result when working on new features and adding files to the cmakelists.txt Signed-off-by: Kimball Thurston <kdt3rd@gmail.com> \n\n*  [make fuzz test optional like autoconf](https://github.com/AcademySoftwareFoundation/openexr/commit/79a50ea7eb869a94bb226841aebad9d46ecc3836) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-08-08) This makes running the fuzz tests as part of the \"make test\" rule optional. Even with this off by default, if building tests is enabled, the fuzz test will still be compiled, and is available to run via \"make fuzz\". This should enable a weekly jenkins build config to run the fuzz tests, given that it takes a long time to run. Signed-off-by: Kimball Thurston <kdt3rd@gmail.com> \n\n*  [Fix SO version](https://github.com/AcademySoftwareFoundation/openexr/commit/f4055c33bb128bd4544d265b167337c584364716) ([Nick Porcino](@meshula@hotmail.com), 2018-08-07) \n\n*  [CHANGES.md formatting](https://github.com/AcademySoftwareFoundation/openexr/commit/8cd1b9210855fa4f6923c1b94df8a86166be19b1) ([Cary Phillips](@cary@ilm.com), 2018-08-07) \n\n*  [format old release notes](https://github.com/AcademySoftwareFoundation/openexr/commit/3c5b5f894def68cf5240e8f427147c867f745912) ([Cary Phillips](@cary@ilm.com), 2018-08-07) \n\n*  [release notes upates](https://github.com/AcademySoftwareFoundation/openexr/commit/534e4bcde71ce34b9f8fa9fc39e9df1a58aa3f80) ([Cary Phillips](@cary@ilm.com), 2018-08-07) \n\n*  [CHANGES.md](https://github.com/AcademySoftwareFoundation/openexr/commit/471d7bd1c558c54ecc3cbbb2a65932f1e448a370) ([Cary Phillips](@cary@ilm.com), 2018-08-07) \n\n*  [OpenEXR_Viewers/README.md formatting](https://github.com/AcademySoftwareFoundation/openexr/commit/806db743cf0bcb7710d08f56ee6f2ece10e31367) ([Cary Phillips](@cary@ilm.com), 2018-08-07)\n\n*  [more README fixes.](https://github.com/AcademySoftwareFoundation/openexr/commit/82bc701e605e092ae5f31d142450d921c293ded1) ([Cary Phillips](@cary@ilm.com), 2018-08-07) \n\n*  [README.md cleanup](https://github.com/AcademySoftwareFoundation/openexr/commit/d1d9760b084f460cf21de2b8e273e8d6adcfb4f6) ([Cary Phillips](@cary@ilm.com), 2018-08-07) \n\n*  [fix dependencies when building static](https://github.com/AcademySoftwareFoundation/openexr/commit/03329c8d34c93ecafb4a35a8cc645cd3bea14217) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-08-08) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com> \n\n*  [fix exrdisplay compile under cmake](https://github.com/AcademySoftwareFoundation/openexr/commit/a617dc1a9cc8c7b85df040f5587f1727dec31caf) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-08-07) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com> \n\n*  [PyIlmBase README.md cleanup](https://github.com/AcademySoftwareFoundation/openexr/commit/a385fd4f09ab5dd1163fab6870393f1b71e163eb) ([Cary Phillips](@cary@ilm.com), 2018-08-07) \n\n*  [Updates to README's](https://github.com/AcademySoftwareFoundation/openexr/commit/0690e762bb45afadd89e94838270080447998a48) ([Cary Phillips](@cary@ilm.com), 2018-08-07) \n\n*  [added --foreign to automake in bootstrap](https://github.com/AcademySoftwareFoundation/openexr/commit/4a74696f2066dd4bb58433bbcb706fdf526a7770) ([Cary Phillips](@cary@ilm.com), 2018-08-06) \n\n*  [Remove obsolete README files from Makefile.am](https://github.com/AcademySoftwareFoundation/openexr/commit/57259b7811f3adce23a1e4c99411d686c55fefed) ([Cary Phillips](@cary@ilm.com), 2018-08-06) \n\n*  [Removed COPYING, INSTALL, README.cmake.txt](https://github.com/AcademySoftwareFoundation/openexr/commit/54d3bbcfef10a367591cced99f759b89e8478b07) ([Cary Phillips](@cary@ilm.com), 2018-08-05) \n\n*  [cleaned up README files for root and IlmBase](https://github.com/AcademySoftwareFoundation/openexr/commit/54e6ae149addd5b9673d1ee0f2954759b5ed073d) ([Cary Phillips](@cary@ilm.com), 2018-08-05) \n\n*  [LIBTOOL_CURRENT=24](https://github.com/AcademySoftwareFoundation/openexr/commit/7b7ea9c86bbf8744cb41df6fa7e5f7dd270294a5) ([Cary Phillips](@cary@ilm.com), 2018-08-06) \n\n*  [bump version to 2.3](https://github.com/AcademySoftwareFoundation/openexr/commit/8a7b4ad263103e725fda4e624962cc0f559c4faa) ([Cary Phillips](@cary@ilm.com), 2018-08-05) \n\n*  [folding in internal ILM changes - conditional delete in exception catch block.](https://github.com/AcademySoftwareFoundation/openexr/commit/656f898dff3ab7d06c4d35219385251f7948437b) ([Cary Phillips](@cary@ilm.com), 2018-08-05) \n\n*  [Removed COPYING, INSTALL, README.cmake.txt](https://github.com/AcademySoftwareFoundation/openexr/commit/94ece7ca86ffccb3ec2bf4138f4ad47e3f496167) ([Cary Phillips](@cary@ilm.com), 2018-08-05) \n\n*  [edits to READMEs](https://github.com/AcademySoftwareFoundation/openexr/commit/405fa911ad974eeaf3c3769820b7c4a0c59f0099) ([Cary Phillips](@cary@ilm.com), 2018-08-05) \n\n*  [README fixes.](https://github.com/AcademySoftwareFoundation/openexr/commit/c612d8276a5d9e28ae6bdc39b770cbc083e21cf4) ([Cary Phillips](@cary@ilm.com), 2018-08-05) \n\n*  [cleaned up README files for root and IlmBase](https://github.com/AcademySoftwareFoundation/openexr/commit/cda04c6451b0b196c887b03e68d8a80863f58832) ([Cary Phillips](@cary@ilm.com), 2018-08-05) \n\n*  [Fallback default system provided Boost Python](https://github.com/AcademySoftwareFoundation/openexr/commit/a174497d1fd84378423f733053f1a058608d81f0) ([Thanh Ha](@thanh.ha@linuxfoundation.org), 2018-08-03) User provided Python version via OPENEXR_PYTHON_MAJOR and OPENEXR_PYTHON_MINOR parameters, failing that fallback onto the system's default \"python\" whichever that may be. Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org> \n\n*  [fix double delete in multipart files, check logic in others](https://github.com/AcademySoftwareFoundation/openexr/commit/da96e3759758c1fcac5963e07eab8e1f58a674e7) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-08-04) Multipart files have a Data object that automatically cleans up it's stream if appropriate, the other file objects have the destructor of the file object perform the delete (instead of Data). This causes a double delete to happen in MultiPart objects when unable to open a stream. Additionally, fix tabs / spaces to just be spaces Signed-off-by: Kimball Thurston <kdt3rd@gmail.com> \n\n*  [fix scenario where ilmimf is being compiled from parent directory](https://github.com/AcademySoftwareFoundation/openexr/commit/c246315fe392815399aee224f38bafd01585594b) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-08-04) need to use current source dir so test images can be found Signed-off-by: Kimball Thurston <kdt3rd@gmail.com> \n\n*  [Fix logic errors with BUILD_DWALOOKUPS](https://github.com/AcademySoftwareFoundation/openexr/commit/dc7cb41c4e8a3abd60dec46d0bcb6a1c9ef31452) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-08-04) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com> \n\n*  [remove debug print](https://github.com/AcademySoftwareFoundation/openexr/commit/8e16aa8930a85f1ef3f1f6ba454af275aabc205d) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-08-04) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com> \n\n*  [fully set variables as pkg config does not seem to by default](https://github.com/AcademySoftwareFoundation/openexr/commit/f478511f796e5d05dada28f9841dcf9ebd9730ac) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-08-04) \n\n*  [add check with error message for zlib, fix defaults, restore old thread check](https://github.com/AcademySoftwareFoundation/openexr/commit/788956537282cfcca712c1e9690d72cd19978ce0) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-08-04) \n\n*  [PR #187 CMake enhancements to speed up dependency builds of OpenEXR.](https://github.com/AcademySoftwareFoundation/openexr/commit/17e10ab10ddf937bc2809bda858bf17af6fb3448) ([Nick Porcino](@meshula@hotmail.com), 2018-08-02) \n\n*  [restore prefix, update to use PKG_CHECK_MODULES](https://github.com/AcademySoftwareFoundation/openexr/commit/fb9d1be5c07779c90e7744ccbf27201fcafcdfdb) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-08-03) previous commit from dracwyrm had made it such that pkg-config must be used and ilmbase must be installed in the default pkg-config path by default. restore the original behaviour by which a prefix could be provided, yet still retain use of PKG_CHECK_MODULES to find IlmBase if the prefix is not specified, and continue to use pkg-config to find zlib instead of assuming -lz Signed-off-by: Kimball Thurston <kdt3rd@gmail.com> \n\n*  [restore original API for Lock since we can't use typedef to unique_lock](https://github.com/AcademySoftwareFoundation/openexr/commit/e7fc2258a16ab7fe17d24855d16d4e56b80c172e) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-08-02) \n\n*  [fixes #292, issue with utf-8 filenames](https://github.com/AcademySoftwareFoundation/openexr/commit/846fe64c584ebb89434aaa02f5d431fbd3ca6165) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-08-01) windows needs to widen the string to properly open files, this implements a solution for compiling with MSVC anyway using the extension for fstream to take a wchar Signed-off-by: Kimball Thurston <kdt3rd@gmail.com> \n\n*  [fix maintainer mode issue, extra line in paste](https://github.com/AcademySoftwareFoundation/openexr/commit/772ff9ad045032fc338af1b684cb50983191bc0d) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-08-02) \n\n*  [Default the python bindings to on](https://github.com/AcademySoftwareFoundation/openexr/commit/dc5e26136b1c5edce911ff0eccc17cda40388b54) ([Nick Porcino](@meshula@hotmail.com), 2018-08-01) \n\n*  [Add Find scripts, and ability to build OpenEXR with pre-existing IlmBase](https://github.com/AcademySoftwareFoundation/openexr/commit/34ee51e9118097f784653f08c9482c886f83d2ef) ([Nick Porcino](@meshula@hotmail.com), 2018-08-01) \n\n*  [fix names, disable rules when not building shared](https://github.com/AcademySoftwareFoundation/openexr/commit/dbd3b34baf4104e844c273b682e7b133304294f2) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-07-31) \n\n*  [add suffix variable for target names to enable static-only build](https://github.com/AcademySoftwareFoundation/openexr/commit/7b1ed10e241e793db9d8933df30dd305a93835dd) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-07-31) \n\n*  [The string field is now called _message.](https://github.com/AcademySoftwareFoundation/openexr/commit/bd32e84632da4754cfe6db47f2e72c29f4d7df27) ([Cary Phillips](@cary@ilm.com), 2018-08-01) \n\n*  [C++11 support for numeric_limits<Half>::max_digits10() and lowest()](https://github.com/AcademySoftwareFoundation/openexr/commit/2d931bab38840ab3cdf9c6322767a862aae4037d) ([Cary Phillips](@cary@ilm.com), 2018-07-31) \n\n*  [fixes for GCC 6.3.1 (courtesy of Will Harrower): - renamed local variables in THROW macros to avoid warnings - cast to bool](https://github.com/AcademySoftwareFoundation/openexr/commit/7fda69a377ee41979284137795cb338bb3c6d147) ([Cary Phillips](@cary@rnd-build7-sf-38.lucasfilm.com), 2018-07-31) \n\n*  [renames name to message and removes implicit cast](https://github.com/AcademySoftwareFoundation/openexr/commit/54105e3c292c6884e7870ecfddb561deda7a3458) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-07-31) This removes the implicit cast, which is arguably more \"standard\", and also less surprising. Further, renames the name function to message to match internal ILM changes, and message makes more sense as a function name than ... name. \n\n*  [Remove IEX_THROW_SPEC](https://github.com/AcademySoftwareFoundation/openexr/commit/02c896501da244ec6345d7ee5ef825d71ba1f0a2) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-07-31) This removes the macro and uses therein. We changed the API with removing the subclass from std::string of Iex::BaseExc, so there is no reason to retain this compatibility as well, especially since it isn't really meaningful anyway in (modern) C++ \n\n*  [CMake3 port. Various Windows fixes](https://github.com/AcademySoftwareFoundation/openexr/commit/b2d37be8b874b300be1907f10339cac47e39170b) ([Nick Porcino](@meshula@hotmail.com), 2018-07-29) \n\n*  [changes to enable custom namespace defines to be used](https://github.com/AcademySoftwareFoundation/openexr/commit/acd76e16276b54186096b04b06bd118eb32a1bcf) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-07-29) \n\n*  [fix extraneous unsigned compare accidentally merged](https://github.com/AcademySoftwareFoundation/openexr/commit/a56773bd7a1f9a8bb10afe5fb36c4e03f622eff6) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-07-29) \n\n*  [Use proper definition of namespaces instead of default values.](https://github.com/AcademySoftwareFoundation/openexr/commit/c6978f9fd998df32b2c56a7b25bbbd52005bbf9e) ([Juri Abramov](@gabramov@nvidia.com), 2014-08-18) \n\n*  [fixes #260, out of bounds vector access](https://github.com/AcademySoftwareFoundation/openexr/commit/efc360fc17935453e95f62939dd5d7caacce4bf7) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-07-29) noticed by Google Autofuzz Signed-off-by: Kimball Thurston <kdt3rd@gmail.com> \n\n*  [fix potential io streams leak in case of exceptions during 'initialize' function](https://github.com/AcademySoftwareFoundation/openexr/commit/19bac86f27bab8649858ef79658224e9a54cb4cf) ([CAHEK7](@ghosts.in.a.box@gmail.com), 2016-02-12) \n\n*  [OpenEXR: Fix build system and change doc install](https://github.com/AcademySoftwareFoundation/openexr/commit/60cc8b711ab402c5526ca1f872de5209ad15ec7d) ([dracwyrm](@j.scruggs@gmail.com), 2017-08-11) The build sysem for the OpenEXR sub-module is has issues. This patch is being used on Gentoo Linux with great success. It also adresses the issue of linking to previously installed versions. Signed-off by: Jonathan Scruggs (j.scruggs@gmail.com) Signed-off by: David Seifert (soap@gentoo.org) \n\n*  [Note that numpy is required to build PyIlmBase](https://github.com/AcademySoftwareFoundation/openexr/commit/76935a912a8e365ed4fe8c7a54b60561790dafd5) ([Thanh Ha](@thanh.ha@linuxfoundation.org), 2018-07-20) Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org> \n\n*  [Fixed exports on DeepImageChannel and FlatImageChannel. If the whole class isn't exported, the typeinfo doesn't get exported, and so dynamic casting into those classes will not work.](https://github.com/AcademySoftwareFoundation/openexr/commit/942ff971d30cba1b237c91e9f448376d279dc5ee) ([Halfdan Ingvarsson](@halfdan@sidefx.com), 2014-10-06) Also fixed angle-bracket include to a quoted include. \n\n*  [Fixed angle bracket vs quote includes.](https://github.com/AcademySoftwareFoundation/openexr/commit/fd8570927a7124ff2990f5f38556b2ec03d77a44) ([Halfdan Ingvarsson](@halfdan@sidefx.com), 2014-03-18) \n\n*  [Change IexBaseExc to no longer derive from std::string, but instead include it as a member variable. This resolves a problem with MSVC 2012 and dllexport-ing template classes.](https://github.com/AcademySoftwareFoundation/openexr/commit/fa59776fd83a8f35ed5418b83bbc9975ba0ef3bc) ([Halfdan Ingvarsson](@halfdan@sidefx.com), 2014-03-03) \n\n*  [make code more amenable to compiling with mingw for cross-compiling](https://github.com/AcademySoftwareFoundation/openexr/commit/dd867668c4c63d23c034cc2ea8f2352451e8554d) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-07-29) Signed-off-by: Kimball Thurston <kdt3rd@gmail.com> \n\n*  [Fix shebang line to bash](https://github.com/AcademySoftwareFoundation/openexr/commit/d3512e07a5af5053397ed62bd0d306b10357358c) ([Thanh Ha](@thanh.ha@linuxfoundation.org), 2018-07-19) Depending on the distro running the script the following error might appear: ./bootstrap: 4: [: Linux: unexpected operator This is because #!/bin/sh is not the same on every distro and this script is actually expecting bash. So update the shebang line to be bash. Signed-off-by: Thanh Ha <thanh.ha@linuxfoundation.org> \n\n*  [Visual Studio and Windows fixes](https://github.com/AcademySoftwareFoundation/openexr/commit/4cfefeab4be94b8c46d604075367b6496d29dcb5) ([Liam Fernandez](@liam@utexas.edu), 2018-06-20) IlmBase: Fix IF/ELSEIF clause (WIN32 only) PyImath: Install *.h in 'include' dir PyImathNumpy: Change python library filename to 'imathnumpy.pyd' (WIN32 only) \n\n*  [Fix probable typo for static builds.](https://github.com/AcademySoftwareFoundation/openexr/commit/31e1ae8acad3126a63044dfb8518d70390131c7b) ([Simon Otter](@skurmedel@gmail.com), 2018-06-18) \n\n*  [Must also export protected methods](https://github.com/AcademySoftwareFoundation/openexr/commit/17384ee01e5fa842f282c833ab2bc2aa33e07125) ([Nick Porcino](@meshula@hotmail.com), 2018-06-10) \n\n*  [IlmImfUtilTest compiles successfully](https://github.com/AcademySoftwareFoundation/openexr/commit/6093789bc7b7c543f128ab2b055987808ec15167) ([Nick Porcino](@meshula@hotmail.com), 2018-06-09) \n\n*  [IlmImfUtil now builds on Windows](https://github.com/AcademySoftwareFoundation/openexr/commit/d7328287d1ea363ab7839201e90d7d7f4deb635f) ([Nick Porcino](@meshula@hotmail.com), 2018-06-09) \n\n*  [Set python module suffix per platform](https://github.com/AcademySoftwareFoundation/openexr/commit/39b9edfdfcad5e77601d4462a6f9ba93bef83835) ([Nick Porcino](@meshula@hotmail.com), 2018-06-05) \n\n*  [fix include ifdef](https://github.com/AcademySoftwareFoundation/openexr/commit/32723d8112d1addf0064e8295b824faab60f0162) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-05-26) \n\n*  [switch from shared pointer to a manually counted object as gcc 4.8 and 4.9 do not provide proper shared_ptr atomic functions](https://github.com/AcademySoftwareFoundation/openexr/commit/3f532a7ab81c33f61dc6786a8c7ce6e0c09acc07) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-05-26) \n\n*  [Fix typos to TheoryDeepPixels document](https://github.com/AcademySoftwareFoundation/openexr/commit/655f96032e0eddd868a122fee80bd558e0cbf17d) ([peterhillman](@peter@peterhillman.org.uk), 2018-05-17) Equations 6 and 7 were incorrect. \n\n*  [initial port of PyIlmBase to python 3](https://github.com/AcademySoftwareFoundation/openexr/commit/84dbf637c5c3ac4296181dd93de4fb5ffdc4b582) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-05-04) \n\n*  [replicate configure / cmake changes from ilmbase](https://github.com/AcademySoftwareFoundation/openexr/commit/00df2c72ca1b7cb148e19a9bdc44651a6c74c9e4) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-05-04) This propagates the same chnages to configure.ac and cmakelists.txt to enable compiling with c++11/14. Additionally, adds some minor changes to configure to enable python 3 to be configured (source code changes tbd) \n\n*  [add move constructor and assignment operator](https://github.com/AcademySoftwareFoundation/openexr/commit/cfebcc24e1a1cc307678ea757ec38bff02a5dc51) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-05-03) \n\n*  [Fix Windows Python binding builds. Does not address PyImath runtime issues, but does allow build to succeed](https://github.com/AcademySoftwareFoundation/openexr/commit/15ce54ca02fdfa16c4a99f45a30c7a54826c6ac3) ([Nick Porcino](@meshula@hotmail.com), 2018-04-30) \n\n*  [Fix c++11 detection issue on windows. Fix ilmbase DLL export warnings](https://github.com/AcademySoftwareFoundation/openexr/commit/7376f9b736f9503a9d34b67c99bc48ce826a6334) ([Nick Porcino](@meshula@hotmail.com), 2018-04-27) \n\n*  [enable different c++ standards to be selected instead of just c++14](https://github.com/AcademySoftwareFoundation/openexr/commit/99ecfcabbc2b95acb40283f04ab358b3db9cc0f9) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-04-15) \n\n*  [Incorporate review feedback](https://github.com/AcademySoftwareFoundation/openexr/commit/99b367d963ba0892e7ab830458b6a990aa3033ce) ([Nick Porcino](@meshula@hotmail.com), 2018-04-04) \n\n*  [add compatibility std::condition_variable semaphore when posix semaphores not available](https://github.com/AcademySoftwareFoundation/openexr/commit/b6dc2a6b71f9373640d988979f9ae1929640397a) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-04-04) \n\n*  [fix error overwriting beginning of config file](https://github.com/AcademySoftwareFoundation/openexr/commit/01680dc4d90c9f7fd64e498e57588f630a52a214) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-04-04) \n\n*  [remove the dynamic exception for all versions of c++ unless FORCE_CXX03 is on](https://github.com/AcademySoftwareFoundation/openexr/commit/45cb2c8fb2418afaa3900c553e26ad3886cd5acf) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-04-04) \n\n*  [ThreadPool improvements](https://github.com/AcademySoftwareFoundation/openexr/commit/bf0cb8cdce32fce36017107c9982e1e5db2fb3fa) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-04-04) - switch to use c++11 features - Add API to enable replacement of the thread pool - Add custom, low-latency handling when threads is 0 - Lower lock boundary when adding tasks (or eliminate in c++11 mode) \n\n*  [switch mutex to be based on std::mutex when available](https://github.com/AcademySoftwareFoundation/openexr/commit/848c8c329b16aeee0d3773e827d506a2a53d4840) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-04-04) \n\n*  [switch IlmThread to use c++11 threads when enabled](https://github.com/AcademySoftwareFoundation/openexr/commit/eea1e607177e339e05daa1a2ec969a9dd12f2497) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-04-04) \n\n*  [use dynamic exception macro to avoid warnings in c++14 mode](https://github.com/AcademySoftwareFoundation/openexr/commit/610179cbe3ffc2db206252343e75a16221d162b4) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-04-04) \n\n*  [add #define to manage dynamic exception deprecation in c++11/14](https://github.com/AcademySoftwareFoundation/openexr/commit/b133b769aaee98566e695191476f59f32eece591) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-04-04) \n\n*  [configuration changes to enable c++14](https://github.com/AcademySoftwareFoundation/openexr/commit/5f58c94aea83d44e27afd1f65e4defc0f523f6be) ([Kimball Thurston](@kdt3rd@gmail.com), 2018-04-04) \n\n*  [Cmake now building OpenEXR successfully for Windows](https://github.com/AcademySoftwareFoundation/openexr/commit/ac055a9e50c974f4cd58c28a5a0bb96011812072) ([Nick Porcino](@meshula@hotmail.com), 2018-03-28) \n\n*  [Missing symbols on Windows due to missing IMF_EXPORT](https://github.com/AcademySoftwareFoundation/openexr/commit/965c1eb6513ad80c71b425c8a1b04a70b3bae291) ([Ibraheem Alhashim](@ibraheem.alhashim@gmail.com), 2018-03-05) \n\n*  [Implement SIMD-accelerated ImfZip::uncompress](https://github.com/AcademySoftwareFoundation/openexr/commit/32f2aa58fe4f6f6691eef322fdfbbc9aa8363f80) ([John Loy](@jloy@pixar.com), 2017-04-12) The main bottleneck in ImfZip::uncompress appears not to be zlib but the predictor & interleaving loops that run after zlib's decompression. Fortunately, throughput in both of these loops can be improved with SIMD operations. Even though each trip of the predictor loop has data dependencies on all previous values, the usual SIMD prefix-sum construction is able to provide a significant speedup. While the uses of SSSE3 and SSE4.1 are minor in this change and could maybe be replaced with some slightly more complicated SSE2, SSE4.1 was released in 2007, so it doesn't seem unreasonable to require it in 2017. \n\n*  [Compute sample locations directly in Imf::readPerDeepLineTable.](https://github.com/AcademySoftwareFoundation/openexr/commit/e64095257a29f9bc423298ee8dbc09a317f22046) ([John Loy](@jloy@pixar.com), 2017-04-06) By changing the function to iterate over sample locations directly instead of discarding unsampled pixel positions, we can avoid computing a lot of modulos (more than one per pixel.) Even on modern x86 processors, idiv is a relatively expensive instruction. Though it may appear like this optimization could be performed by a sufficiently sophisticated compiler, gcc 4.8 does not get there (even at -O3.) \n\n*  [Manually hoist loop invariants in Imf::bytesPerDeepLineTable.](https://github.com/AcademySoftwareFoundation/openexr/commit/71b8109a4ad123ef0d5783f01922463a16d2ca59) ([John Loy](@jloy@pixar.com), 2017-04-05) This is primarily done to avoid a call to pixelTypeSize within the inner loop. In particular, gcc makes the call to pixelTypeSize via PLT indirection so it may have arbitrary side-effects (i.e. ELF symbol interposition strikes again) and may not be moved out of the loop by the compiler. \n\n*  [Inline Imf::sampleCount; this is an ABI-breaking change.](https://github.com/AcademySoftwareFoundation/openexr/commit/5aa0afd5a4f8df9e09d6461f115e6e0cec5cbe46) ([John Loy](@jloy@pixar.com), 2017-03-29) gcc generates calls to sampleCount via PLT indirection even within libIlmImf. As such, they are not inlined and must be treated as having arbitrary side effects (because of ELF symbol interposition.) Making addressing computations visible at call sites allows a much wider range of optimizations by the compiler beyond simply eliminating the function call overhead. \n\n*  [Delete build.log](https://github.com/AcademySoftwareFoundation/openexr/commit/148f1c230b5ecd94d795ca172a8246785c7caca7) ([Arkady Shapkin](@arkady.shapkin@gmail.com), 2017-02-18) \n\n*  [fix defect in semaphore implementation which caused application hang at exit time, because not all worker threads get woken up when task semaphore is repeatedly posted (to wake them up) after setting the stopping flag in the thread pool](https://github.com/AcademySoftwareFoundation/openexr/commit/4706d615e942462a532381a8a86bc5fe820c6816) ([Richard Goedeken](@Richard@fascinationsoftware.com), 2016-11-22) \n\n*  [fix comparison of unsigned expression < 0 (Issue #165)](https://github.com/AcademySoftwareFoundation/openexr/commit/9e3913c94c55549640c732f549d2912fbd85c336) ([CAHEK7](@ghosts.in.a.box@gmail.com), 2016-02-15) \n\n*  [Added Iex library once more for linker dependency](https://github.com/AcademySoftwareFoundation/openexr/commit/b0b50791b5b36fddb010b5ad630dd429f947a080) ([Eric Sommerlade](@es0m@users.noreply.github.com), 2015-02-20) \n\n*  [windows/cmake: Commands depend on Half.dll which needs to be in path. Running commands in Half.dll's directory addresses this and the commands run on first invocation](https://github.com/AcademySoftwareFoundation/openexr/commit/1a23716fd7e9ae167f53c7f2099651ede1279fbb) ([E Sommerlade](@es0m@users.noreply.github.com), 2015-02-10) \n\n*  [Fixed memory corruption / actual crashes on Window](https://github.com/AcademySoftwareFoundation/openexr/commit/c330c40e1962257b0e59328fdceaa9cdcde3041b) ([JuriAbramov](@openexr@dr-abramov.de), 2015-01-19) Fixed memory corruption caused by missing assignment operator with non-trivial copy constructor logic. FIxes crashes on Windows when \"dwaa\" or \"dwab\" codecs are used for saving files. \n\n*  [std namespace should be specified for transform](https://github.com/AcademySoftwareFoundation/openexr/commit/4a00a9bc6c92b20443c61f5e9877123e7fef16e6) ([JuriAbramov](@openexr@dr-abramov.de), 2014-08-20) Fixes build with some VS and clang version. \n\n*  [m4/path.pkgconfig.m4: use PKG_PROG_PKG_CONFIG to find correct pkg-config](https://github.com/AcademySoftwareFoundation/openexr/commit/056cb9f09efa9116c7f5fb8bc0717a260ad23744) ([Michael Thomas (malinka)](@malinka@entropy-development.com), 2016-05-24) pkg-config supplies this macro and prefers it to be used to allow for cross-compilation scenarios where target-prefixed binaries are prefered to pkg-config \n\n*  [Updated list of EXTRA_DIST files to reflect the updated test images and prior removal of README.win32](https://github.com/AcademySoftwareFoundation/openexr/commit/165dceaeee86e0f8ce1ed1db3e3030c609a49f17) ([Nick Rasmussen](@nick@ilm.com), 2017-11-17) \n\n*  [Updated list of EXTRA_DIST files to reflect the updated test images and prior removal of README.win32](https://github.com/AcademySoftwareFoundation/openexr/commit/dcaf5fdb4d1244d8e60a58832cfe9c54734a2257) ([Nick Rasmussen](@nick@ilm.com), 2017-11-17) \n\n*  [Updated openexr version to 2.2.1, resynced the .so version number to 23 across all projects.](https://github.com/AcademySoftwareFoundation/openexr/commit/e69de40ddbb6bd58341618a506b2e913e5ac1797) ([Nick Rasmussen](@nick@ilm.com), 2017-11-17) \n\n*  [Add additional input validation in an attempt to resolve issue #232](https://github.com/AcademySoftwareFoundation/openexr/commit/49db4a4192482eec9c27669f75db144cf5434804) ([Shawn Walker-Salas](@shawn.walker@oracle.com), 2017-05-30) \n\n*  [Add additional input validation in an attempt to resolve issue #232](https://github.com/AcademySoftwareFoundation/openexr/commit/f09f5f26c1924c4f7e183428ca79c9881afaf53c) ([Shawn Walker-Salas](@shawn.walker@oracle.com), 2017-05-30) \n\n*  [root level LICENSE](https://github.com/AcademySoftwareFoundation/openexr/commit/a774d643b566d56314f26695f2bf9b75f88e64f6) ([cary-ilm](@cary@ilm.com), 2017-10-23) \n\n*  [Fix copyright/license notice in halfExport.h](https://github.com/AcademySoftwareFoundation/openexr/commit/20d043d017d4b752356bb76946ffdffaa9c15c72) ([Ed Hanway](@ehanway@ilm.com), 2017-01-09) \n\n*  [Merge branch 'jkingsman-cleanup-readme' into develop](https://github.com/AcademySoftwareFoundation/openexr/commit/6f6d9cea513ea409d4b65da40ac096eab9a549b0) ([Ed Hanway](@ehanway@ilm.com), 2016-10-28) \n\n*  [README edits.](https://github.com/AcademySoftwareFoundation/openexr/commit/098a4893910d522b867082ed38d7388e6265bee0) ([Ed Hanway](@ehanway@ilm.com), 2016-10-28) \n\n*  [Merge branch 'cleanup-readme' of https://github.com/jkingsman/openexr into jkingsman-cleanup-readme](https://github.com/AcademySoftwareFoundation/openexr/commit/43e50ed5dca1ddfb3ca2cb4c38c7752497db6e50) ([Ed Hanway](@ehanway@ilm.com), 2016-10-28) \n\n*  [Install ImfStdIO.h](https://github.com/AcademySoftwareFoundation/openexr/commit/2872d3b230a7920696510f80a50d9ce36b6cc94e) ([Ed Hanway](@ehanway@ilm.com), 2016-10-28) This was originally intended to be an internal class only, but its use has become the de facto way to handle UTF-8 filenames on Windows. \n\n*  [Merge pull request #204 from dlemstra/IMF_HAVE_SSE2](https://github.com/AcademySoftwareFoundation/openexr/commit/cbb01bf286a2e04df95fb51458d1c2cbdc08935b) ([Ed Hanway](@ehanway-ilm@users.noreply.github.com), 2016-10-19) Consistent check for IMF_HAVE_SSE2. \n\n*  [Remove fixed-length line breaks](https://github.com/AcademySoftwareFoundation/openexr/commit/0ea6b8c7d077a18fb849c2b2ff532cd952d06a38) ([Jack Kingsman](@jack.kingsman@gmail.com), 2016-10-19) \n\n*  [Update README to markdown](https://github.com/AcademySoftwareFoundation/openexr/commit/9c6d22e23a25d761f5456e08623b8d77c0f8930a) ([Jack Kingsman](@jack.kingsman@gmail.com), 2016-10-18) \n\n*  [Merge pull request #206 from lgritz/lg-register](https://github.com/AcademySoftwareFoundation/openexr/commit/6788745398594d479e8cf91a6c301fea0537108b) ([Ed Hanway](@ehanway-ilm@users.noreply.github.com), 2016-09-30) Remove 'register' keyword. \n\n*  [Remove 'register' keyword.](https://github.com/AcademySoftwareFoundation/openexr/commit/6d297f35c5dbfacc8a5e94f33b986db7ab468db9) ([Larry Gritz](@lg@larrygritz.com), 2016-09-30) 'register' is a relic of K&R-era C, it's utterly useless in modern compilers. It's been deprecated in C++11, and therefore will generate warnings when encountered -- and many packages that use OpenEXR's public headers use -Werr to turn warnings into errors. Starting in C++17, the keyword is removed entirely, and thus will certainly be a build break for that version of the standard. So it's time for it to go. \n\n*  [Consistent check for IMF_HAVE_SSE2.](https://github.com/AcademySoftwareFoundation/openexr/commit/7403524c8fed971383c724d85913b2d52672caf3) ([dirk](@dirk@git.imagemagick.org), 2016-09-17) \n\n*  [Merge pull request #141 from lucywilkes/develop](https://github.com/AcademySoftwareFoundation/openexr/commit/c23f5345a6cc89627cc416b3e0e6b182cd427479) ([Ed Hanway](@ehanway-ilm@users.noreply.github.com), 2016-09-16) Adding rawPixelDataToBuffer() function for access to compressed scanlines \n\n*  [Merge pull request #198 from ZeroCrunch/develop](https://github.com/AcademySoftwareFoundation/openexr/commit/891437f74805f6c8ebc897932091cbe0bb7e1163) ([Ed Hanway](@ehanway-ilm@users.noreply.github.com), 2016-08-02) Windows compile fix \n\n*  [Windows compile fix](https://github.com/AcademySoftwareFoundation/openexr/commit/77faf005b50e8f77a8080676738ef9b9c807bf53) ([Jamie Kenyon](@jamie.kenyon@thefoundry.co.uk), 2016-07-29) std::min wasn't found due to <algorithm> not being included. \n\n*  [Merge pull request #179 from CAHEK7/NullptrBug](https://github.com/AcademySoftwareFoundation/openexr/commit/a0a68393a4d3b622251fb7c490ee9d59e080b776) ([Ed Hanway](@ehanway-ilm@users.noreply.github.com), 2016-07-26) fix potential memory leak \n\n*  [Merge branch 'develop' of https://github.com/r-potter/openexr into r-potter-develop](https://github.com/AcademySoftwareFoundation/openexr/commit/b206a243a03724650b04efcdf863c7761d5d5d5b) ([Ed Hanway](@ehanway@ilm.com), 2016-07-26) \n\n*  [Merge pull request #154 into develop](https://github.com/AcademySoftwareFoundation/openexr/commit/bc372d47186db31d104e84e4eb9e84850819db8d) ([Ed Hanway](@ehanway@ilm.com), 2016-07-25) \n\n*  [Merge pull request #168 into develop](https://github.com/AcademySoftwareFoundation/openexr/commit/44d077672f558bc63d907891bb88d741b334d807) ([Ed Hanway](@ehanway@ilm.com), 2016-07-25) \n\n*  [Merge pull request #175 into develop](https://github.com/AcademySoftwareFoundation/openexr/commit/7513fd847cf38af89572cc209b03e5b548e6bfc8) ([Ed Hanway](@ehanway@ilm.com), 2016-07-25) \n\n*  [Merge pull request #174 into develop](https://github.com/AcademySoftwareFoundation/openexr/commit/b16664a2ee4627c235b9ce798f4fc911e9c5694f) ([Ed Hanway](@ehanway@ilm.com), 2016-07-25) \n\n*  [Merge branch pull request 172 into develop: fix copy and paste bug in ImfDeepTiledInputPart.cpp](https://github.com/AcademySoftwareFoundation/openexr/commit/ef7b78d5988d37dbbc74c21ad245ed5c80927223) ([Ed Hanway](@ehanway@ilm.com), 2016-07-25) \n\n*  [Merge pull request #195 from openexr/master](https://github.com/AcademySoftwareFoundation/openexr/commit/bc234de193bd9cd32d94648e2936270aa4406e91) ([Ed Hanway](@ehanway-ilm@users.noreply.github.com), 2016-07-25) Catch develop branch up with commits in master. \n\n*  [fix potential memory leak](https://github.com/AcademySoftwareFoundation/openexr/commit/d2f10c784d52f841b85e382620100cdbf0d3b1e5) ([CAHEK7](@ghosts.in.a.box@gmail.com), 2016-02-05) \n\n*  [Fix warnings when compiled with MSVC 2013.](https://github.com/AcademySoftwareFoundation/openexr/commit/3aabef263083024db9e563007d0d76609ac8d585) ([Xo Wang](@xow@google.com), 2016-01-06) Similar fix to that from a27e048451ba3084559634e5e045a92a613b1455. \n\n*  [Fix typo in C bindings (Close #140)](https://github.com/AcademySoftwareFoundation/openexr/commit/c229dfe63380f41dfae1e977b10dfc7c49c7efc7) ([Edward Kmett](@ekmett@gmail.com), 2015-12-09) IMF_RAMDOM_Y should be IMF_RANDOM_Y \n\n*  [Fix copy and paste bug](https://github.com/AcademySoftwareFoundation/openexr/commit/501b654d851e2da1d9e5ca010a1e13fe34ae24ab) ([Christopher Kulla](@fpsunflower@users.noreply.github.com), 2015-11-19) The implementation of DeepTiledInputPart::tileXSize was copy and pasted from the function above but not changed. This causes it tor return incorrect values. \n\n*  [Switch AVX detection asm to not use an empty clobber list for use with older gcc versions](https://github.com/AcademySoftwareFoundation/openexr/commit/51073d1aa8f96963fc6a3ecad8f844ce70c90991) ([Kevin Wheatley](@kevin.wheatley@framestore.com), 2015-10-14) \n\n*  [Merge pull request #145 from karlrasche/DWAx_clamp_float32](https://github.com/AcademySoftwareFoundation/openexr/commit/521b25df787b460e57d5c1e831b232152b93a6ee) ([Ed Hanway](@ehanway-ilm@users.noreply.github.com), 2015-10-23) Clamp, don't cast, float inputs with DWAx compression \n\n*  [Merge pull request #143 from karlrasche/DWAx_bad_zigzag_order](https://github.com/AcademySoftwareFoundation/openexr/commit/9547d38199f5db2712c06ccdda9195badbecccaa) ([Ed Hanway](@ehanway-ilm@users.noreply.github.com), 2015-10-23) Wrong zig-zag ordering used for DWAx decode optimization \n\n*  [Merge pull request #157 from karlrasche/DWAx_compress_bound](https://github.com/AcademySoftwareFoundation/openexr/commit/de27156b77896aeef5b1c99edbca2bc4fa784b51) ([Ed Hanway](@ehanway-ilm@users.noreply.github.com), 2015-10-23) Switch over to use compressBound() instead of manually computing headroom for compress() \n\n*  [Switch over to use compressBound() instead of manually computing headroom for compress()](https://github.com/AcademySoftwareFoundation/openexr/commit/c9a2e193ce243c66177ddec6be43bc6f655ff78a) ([Karl Rasche](@karl.rasche@dreamworks.com), 2015-02-18) \n\n*  [Fix a linker error when compiling OpenEXR statically on Linux](https://github.com/AcademySoftwareFoundation/openexr/commit/caa09c1b361e2b152786d9e8b2b90261c9d9a3aa) ([Wenzel Jakob](@wenzel@inf.ethz.ch), 2015-02-02) Linking OpenEXR and IlmBase statically on Linux failed due to interdependencies between Iex and IlmThread. Simply reversing their order in CMakeLists.txt fixes the issue (which only arises on Linux since the GNU linker is particularly sensitive to the order of static libraries) \n\n*  [Clamp incoming float values to half, instead of simply casting, on encode.](https://github.com/AcademySoftwareFoundation/openexr/commit/cb172eea58b8be078b88eca35f246e12df2de620) ([Karl Rasche](@karl.rasche@dreamworks.com), 2014-11-24) Casting can introduce Infs, which are zero'ed later on, prior to the forward DCT step. This can have the nasty side effect of forcing bright values to zero, instead of clamping them to 65k. \n\n*  [Remove errant whitespace](https://github.com/AcademySoftwareFoundation/openexr/commit/fc67c8245dbff48e546abae027cc9c80c98b3db1) ([Karl Rasche](@karl.rasche@dreamworks.com), 2014-11-20) \n\n*  [Use the correct zig-zag ordering when finding choosing between fast-path inverse DCT versions (computing which rows are all zero)](https://github.com/AcademySoftwareFoundation/openexr/commit/b0d0d47b65c5ebcb8c6493aa2238b9f890c4d7fe) ([Karl Rasche](@karl.rasche@dreamworks.com), 2014-11-19) \n\n*  [Resolve dependency issue building eLut.h/toFloat.h with CMake/Ninja.](https://github.com/AcademySoftwareFoundation/openexr/commit/8eed7012c10f1a835385d750fd55f228d1d35df9) ([Ralph Potter](@r.potter@bath.ac.uk), 2014-11-05) \n\n*  [Adding rawPixelDataToBuffer() function for access to compressed data read from scanline input files.](https://github.com/AcademySoftwareFoundation/openexr/commit/1f6eddeea176ce773dacd5cdee0cbad0ab549bae) ([Lucy Wilkes](@lucywilkes@users.noreply.github.com), 2014-10-22) Changes from The Foundry to add rawPixelDataToBuffer(...) function to the OpenEXR library. This allows you to read raw scan lines into an external buffer. It's similar to the existing function rawPixelData, but unlike this existing function it allows the user to control where the data will be stored instead of reading it into a local buffer. This means you can store multiple raw scan lines at once and enables the decompression of these scan lines to be done in parallel using an application's own threads. (cherry picked from commit ca76ebb40a3c5a5c8e055f0c8d8be03ca52e91c8) \n\n*  [Merge pull request #137 from karlrasche/interleaveByte2_sse_bug](https://github.com/AcademySoftwareFoundation/openexr/commit/f4a6d3b9fabd82a11b63abf938e9e32f42d2d6d7) ([Ed Hanway](@ehanway-ilm@users.noreply.github.com), 2014-10-15) Fixing SSE2 byte interleaving path to work with short runs \n\n*  [Fixing SSE2 byte interleaving path to work with short runs](https://github.com/AcademySoftwareFoundation/openexr/commit/da28ad8cd54dfa3becfdac33872c5b1401a9cc3c) ([Karl Rasche](@karl.rasche@dreamworks.com), 2014-09-08) \n\n*  [Merge pull request #126 from fnordware/LL_literal](https://github.com/AcademySoftwareFoundation/openexr/commit/91015147e5a6a1914bcb16b12886aede9e1ed065) ([Ed Hanway](@ehanway-ilm@users.noreply.github.com), 2014-08-14) Use LL for 64-bit literals \n\n*  [Change suffixes to ULL because Int64 is unsigned](https://github.com/AcademySoftwareFoundation/openexr/commit/353cbc2e89c582e07796f01bce8f203e84c8ae46) ([Brendan Bolles](@brendan@fnordware.com), 2014-08-14) As discusses in pull request #126 \n\n*  [Merge pull request #127 from openexr/tarball_contents_fix](https://github.com/AcademySoftwareFoundation/openexr/commit/699b4a62d5de9592d26f581a9cade89fdada7e6a) ([Ed Hanway](@ehanway-ilm@users.noreply.github.com), 2014-08-14) Tarball contents fix \n\n*  [Add dwa test images to dist (tarball) manifest. Also drop README.win32 from tarball. (Already removed from repo.)](https://github.com/AcademySoftwareFoundation/openexr/commit/cbac202a84b0b0bac0fcd92e5b5c8d634085329e) ([Ed Hanway](@ehanway@ilm.com), 2014-08-14) [New Cmake-centric instructions covering builds for Windows and other platforms to follow.] \n\n*  [Use LL for 64-bit literals](https://github.com/AcademySoftwareFoundation/openexr/commit/57ecf581d053f5cacf2e8fc3c024490e0bbe536f) ([Brendan Bolles](@brendan@fnordware.com), 2014-08-13) On a 32-bit architecture, these literals are too big for just a long, they need to be long long, otherwise I get an error in GCC.\n\n## Version 2.2.2 (April 30, 2020)\n\nThis is a patch release that includes fixes for the following security vulnerabilities:\n\n* [CVE-2020-11765](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11765) There is an off-by-one error in use of the ImfXdr.h read function by DwaCompressor::Classifier::ClasGsifier, leading to an out-of-bounds read.\n* [CVE-2020-11764](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11764) There is an out-of-bounds write in copyIntoFrameBuffer in ImfMisc.cpp.\n* [CVE-2020-11763](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11763) There is an std::vector out-of-bounds read and write, as demonstrated by ImfTileOffsets.cpp.\n* [CVE-2020-11762](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11762) There is an out-of-bounds read and write in DwaCompressor::uncompress in ImfDwaCompressor.cpp when handling the UNKNOWN compression case.\n* [CVE-2020-11761](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11761) There is an out-of-bounds read during Huffman uncompression, as demonstrated by FastHufDecoder::refill in ImfFastHuf.cpp.\n* [CVE-2020-11760](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11760) There is an out-of-bounds read during RLE uncompression in rleUncompress in ImfRle.cpp.\n* [CVE-2020-11759](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11759) Because of integer overflows in CompositeDeepScanLine::Data::handleDeepFrameBuffer and readSampleCountForLineBlock, an attacker can write to an out-of-bounds pointer.\n* [CVE-2020-11758](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11758) There is an out-of-bounds read in ImfOptimizedPixelReading.h.\n\n## Version 2.2.1 (November 30, 2017)\n\nThis maintenance release addresses the reported OpenEXR security\nvulnerabilities, specifically:\n\n* [CVE-2017-9110](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-9110)\n* [CVE-2017-9111](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-9111)\n* [CVE-2017-9112](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-9112)\n* [CVE-2017-9113](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-9113)\n* [CVE-2017-9114](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-9114)\n* [CVE-2017-9115](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-9115)\n* [CVE-2017-9116](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-9116)\n\n## Version 2.2.0 (August 10, 2014)\n\nThis release includes the following components:\n\n* OpenEXR: v2.2.0\n* IlmBase: v2.2.0\n* PyIlmBase: v2.2.0\n* OpenEXR_Viewers: v2.2.0\n\nThis significant new features of this release include:\n\n* **DreamWorks Lossy Compression** A new high quality, high performance\n  lossy compression codec contributed by DreamWorks Animation. This\n  codec allows control over variable lossiness to balance visual\n  quality and file size. This contribution also includes performance\n  improvements that speed up the PIZ codec.\n\n* **IlmImfUtil** A new library intended to aid in development of image\n  file manipulation utilities that support the many types of OpenEXR\n  images.\n\nThis release also includes improvements to cross-platform build\nsupport using CMake.\n\n## Version 2.1.0 (November 25, 2013)\n\nThis release includes the following components (version locked):\n* OpenEXR: v2.1.0\n* IlmBase: v2.1.0\n* PyIlmBase: v2.1.0\n* OpenEXR_Viewers: v2.1.0\n\nThis release includes a refactoring of the optimised read paths for\nRGBA data, optimisations for some of the python bindings to Imath,\nimprovements to the cmake build environment as well as additional\ndocumentation describing deep data in more detail.\n\n## Version 2.0.1 (July 11, 2013)\n\n### Detailed Changes:\n\n* Temporarily turning off optimisation code path (Piotr Stanczyk)\n          \n* Added additional tests for future optimisation refactoring (Piotr\n\t  Stanczyk / Peter Hillman)\n\n* Fixes for StringVectors (Peter Hillman)\n\n* Additional checks for type mismatches (Peter Hillman)\n          \n* Fix for Composite Deep Scanline (Brendan Bolles)\n\n## Version 2.0 (April 9, 2013)\n\nIndustrial Light & Magic (ILM) and Weta Digital announce the release\nof OpenEXR 2.0, the major version update of the open source high\ndynamic range file format first introduced by ILM and maintained and\nexpanded by a number of key industry leaders including Weta Digital,\nPixar Animation Studios, Autodesk and others.\n\nThe release includes a number of new features that align with the\nmajor version number increase. Amongst the major improvements are:\n\n* **Deep Data support** - Pixels can now store a variable-length list of\n  samples. The main rationale behind deep images is to enable the\n  storage of multiple values at different depths for each\n  pixel. OpenEXR 2.0 supports both hard-surface and volumetric\n  representations for Deep Compositing workflows.\n\n* **Multi-part Image Files** - With OpenEXR 2.0, files can now contain\n  a number of separate, but related, data parts in one file. Access to\n  any part is independent of the others, pixels from parts that are\n  not required in the current operation don't need to be accessed,\n  resulting in quicker read times when accessing only a subset of\n  channels. The multipart interface also incorporates support for\n  Stereo images where views are stored in separate parts. This makes\n  stereo OpenEXR 2.0 files significantly faster to work with than the\n  previous multiview support in OpenEXR.\n\n* **Optimized pixel reading** - decoding RGB(A) scanline images has\n  been accelerated on SSE processors providing a significant speedup\n  when reading both old and new format images, including multipart and\n  multiview files.\n\n* **Namespacing** - The library introduces versioned namespaces to\n  avoid conflicts between packages compiled with different versions of\n  the library.\n\nAlthough OpenEXR 2.0 is a major version update, files created by the\nnew library that don't exercise the new feature set are completely\nbackwards compatible with previous versions of the library. By using\nthe OpenEXR 2.0 library, performance improvements, namespace versions\nand basic multi-part/deep reading support should be available to\napplications without code modifications.\n\nThis code is designed to support Deep Compositing - a revolutionary\ncompositing workflow developed at Weta Digital that detached the\nrendering of different elements in scene. In particular, changes in\none layer could be rendered separately without the need to re-render\nother layers that would be required to handle holdouts in a\ntraditional comp workflow or sorting of layers in complex scenes with\nelements moving in depth. Deep Compositing became the primary\ncompositing workflow on Avatar and has seen wide industry\nadoption. The technique allows depth and color value to be stored for\nevery pixel in a scene allowing for much more efficient handling of\nlarge complex scenes and greater freedom for artists to iterate.\n\nTrue to the open source ethos, a number of companies contributed to\nsupport the format and encourage adoption. Amongst others, Pixar\nAnimation Studios has contributed its DtexToExr converter to the\nOpenEXR repository under a Microsoft Public License, which clears any\nconcerns about existing patents in the area, and Autodesk provided\nperformance optimizations geared towards real-time post-production\nworkflows.\n\nExtensive effort has been put in ensuring all requirements were met to\nhelp a wide adoption, staying true to the wide success of\nOpenEXR. Many software companies were involved in the beta cycle to\ninsure support amongst a number of industry leading\napplications. Numerous packages like SideFX's Houdini, Autodesk's\nMaya, Solid Angle's Arnold renderer, Sony Pictures Imageworks' Open\nImage IO have already announced their support of the format.\n\nOpen EXR 2.0 is an important step in the adoption of deep compositing\nas it provides a consistent file format for deep data that is easy to\nread and work with throughout a visual effects pipeline. The Foundry\nhas build OpenEXR 2.0 support into its Nuke Compositing application as\nthe base for the Deep Compositing workflows.\n\nOpenEXR 2.0 is already in use at both Weta Digital and Industrial\nLight & Magic. ILM took advantage of the new format on Marvel's The\nAvengers and two highly anticipated summer 2013 releases, Pacific Rim\nand The Lone Ranger. Recent examples of Weta Digital's use of the\nformat also include Marvel's Avengers as well as Prometheus and The\nHobbit. In addition, a large number of visual effects studios have\nalready integrated a deep workflow into their compositing pipelines or\nare in the process of doing so including:, Sony Pictures Imageworks,\nPixar Animation Studios, Rhythm & Hues, Fuel and MPC.\n\nIn addition to visual effects, the new additions to the format, means\nthat depth data can also be assigned to two-dimensional data for a use\nin many design fields including, architecture, graphic design,\nautomotive and product prototyping.\n\n### Detailed Changes:\n\n* Updated Documentation\n\t   (Peter Hillman)\n* Updated Namespacing mechanism\n\t   (Piotr Stanczyk)\n* Fixes for succd & predd\n\t   (Peter Hillman)\n* Fixes for FPE control registers\n\t   (Piotr Stanczyk)\n* Additional checks and tests on DeepImages, scanlines and tiles\n\t   (Peter Hillman)\n* Folded in Autodesk read optimisations for RGB(A) files\n\t  (Pascal Jette, Peter Hillman)\n* Updated the bootstrap scripts to use libtoolize if glibtoolize isn't available on darwin. \n\t  (Nick Rasmussen)\n* Numerous minor fixes, missing includes etc\n\n## Version 2.0.0.beta.1 (June 15, 2012)\n\nDevelopment of OpenEXR v2 has been undertaken in a collaborative\nenvironment (cf. previous github announcement) comprised of Industrial\nLight & Magic, Weta Digital as well as a number of other contributors.\n\nSome of the new features included in the Beta.1 release of OpenEXR v2\nare:\n\n* **Deep Data** Pixels can now store a variable length list of\n  samples. The main rationale behind deep-images is to have multiple\n  values at different depths for each pixel. OpenEXR v2 supports both\n  hard surface and volumetric representation requirements for deep\n  compositing workflows.\n\n* **Multi-part image files** With OpenEXR v2, files can now contain a\n    number of separate, but related, images in one file. Access to any\n    part is independent of the others; in particular, no access of\n    data need take place for unrequested parts.\n\nIn addition, OpenEXR v2 also contains platform independent mechanisms\nfor handling co-existing library version conflicts in the same process\nspace. (Currently implemented in IlmImf)\n\nFinally, a reminder that this is a Beta release and potentially\nincompatible changes may be introduced in future releases prior to the\nv2.0.0 production version.\n\nPlease read the separate file for v2 additions and changes.\n\n### Detailed Changes:\n\n* Added git specific files \n\t  (Piotr Stanczyk)\n* Updated the so verison to 20\n\t  (Piotr Stanczyk)\n* Initial use of the CMake build system \n\t  (Nicholas Yue)\n\n## Version 1.7.1 (July 31, 2012)\n\nThis release includes the following components:\n\n* OpenEXR: v1.7.1\n* IlmBase: v1.0.3\n* PyIlmBase: v1.0.0 (introduces a Boost dependency)\n* OpenEXR_Viewers: v1.0.2\n\nOf particular note is the introduction of PyIlmBase. This module forms\na comprehensive set of python bindings to the IlmBase module.\n\nIn addition, contained in this release is a number of additions to\nImath as well as a minor tweak to Imath::Frustrum (for better support\nfor Windows platforms) as well as other minor fixes, including\ncorrection for soname version of IlmImf.\n\n## Version 1.7.0 (July 23, 2010)\n\nThis release includes support for stereoscopic images, please see the\nadjoining documentation in the ``MultiViewOpenEXR.pdf``. (Many thanks\nto Weta Digital for their contribution.) In addition, we added support\nfor targeting 64 bit Windows, fixes for buffer overruns and a number\nof other minor fixes, additions and optimisations. Please see the\nChangelog files for more detailed information.\n\n### Bugs\n\nThis release addresses the following security vulnerabilities:\n\n* [CVE-2009-1720](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1720)\n* [CVE-2009-1721](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1721)\n* [CVE-2009-1722](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1722)\n\n### Detailed Changes:\n\n* Added support for targeting builds on 64bit Windows and minimising\n  number of compiler warnings on Windows. Thanks to Ger Hobbelt for\n  his contributions to CreateDLL.  (Ji Hun Yu)\n          \n* Added new attribute types (Florian Kainz):\n  * **M33dAttribute** 3x3 double-precision matrix\n  * **M44dAttribute** 4x4 double-precision matrix\n  * **V2d** 2D double-precision vector\n  * **V3d** 3D double-precision vector  \n\t  \n* Bug fix: crash when reading a damaged image file (found by Apple).\n  An exception thrown inside the PIZ Huffman decoder bypasses\n  initialization of an array of pointers.  The uninitialized pointers\n  are later passed to operator delete.  (Florian Kainz)\n\n* Bug fix: crash when reading a damaged image file (found by Apple).\n  Computing the size of input certain buffers may overflow and wrap\n  around to a small number, later causing writes beyond the end of the\n  buffer.  (Florian Kainz)\n\n* In the \"Technical Introduction\" document, added Premultiplied\n  vs. Un-Premulitiplied Color section: states explicitly that pixels\n  with zero alpha and non-zero RGB are allowed, points out that\n  preserving such a pixel can be a problem in application programs\n  with un-premultiplied internal image representations.  (Florian\n  Kainz)\n\n* exrenvmap improvements:\n\n  - New command line flags set the type of the input image to\n    latitude-longitude map or cube-face map, overriding the envmap\n    attribute in the input file header.\n\n  - Cube-face maps can now be assembled from or split into six\n    square sub-images.\n\n  - Converting a cube-face map into a new cube-face map with the same\n    face size copies the image instead of resampling it.  This avoids\n    blurring when a cube-face map is assembled from or split into\n    sub-images.  (Florian Kainz)\n\n* Updated standard chromaticities in ImfAcesFile.cpp to match final\n  ACES (Academy Color Encoding Specification) document.  (Florian\n  Kainz)\n\n* Added worldToCamera and worldToNDC matrices to\n  ImfStandardAttributes.h (Florian Kainz)\n\n* Increased the maximum length of attribute and channel names from 31\n  to 255 characters.  For files that do contain names longer than 31\n  characters, a new LONG_NAMES_FLAG in the fil version number is set.\n  This flag causes older versions of the IlmImf library (1.6.1 and\n  earlier) to reject files with long names.  Without the flag, older\n  library versions would mis-interpret files with long names as\n  broken.  (Florian Kainz)\n\n* Reading luminance/chroma-encoded files via the RGBA interface is\n  faster: buffer padding avoids cache thrashing for certain image\n  sizes, redundant calls to saturation() have been eliminated.  (Mike\n  Wall)\n\n* Added \"hemispherical blur\" option to exrenvmap.  (Florian Kainz)\n\n* Added experimental version of I/O classes for ACES file format\n  (restricted OpenEXR format with special primaries and white point);\n  added exr2aces file converter.  (Florian Kainz)\n\n* Added new constructors to classes Imf::RgbaInputFile and\n  Imf::TiledRgbaInputFile.  The new constructors have a layerName\n  parameter, which allows the caller to specify which layer of a\n  multi-layer or multi-view image will be read.  (Florian Kainz)\n\n* A number of member functions in classes Imf::Header,\n  Imf::ChannelList and Imf::FrameBuffer have parameters of type \"const\n  char *\".  Added equivalent functions that take \"const std::string &\"\n  parameters.  (Florian Kainz)\n\n* Added library support for Weta Digital multi-view images:\n  StringVector attribute type, multiView standard attribute of type\n  StringVector, utility functions related to grouping channels into\n  separate views.  (Peter Hillman, Florian Kainz)\n\n## Version 1.6.1 (October 22, 2007)\n\nThis release fixes a buffer overrun in OpenEXR and a Windows build\nproblem in CTL, and it removes a few unnecessary files from the\n.tar.gz packages.\n\n### Detailed Changes:\n\n* Removed Windows .suo files from distribution.  (Eric Wimmer)\n\n* Bug fix: crashes, memory leaks and file descriptor leaks when\n  reading damaged image files (some reported by Apple, others found by\n  running IlmImfFuzzTest).  (Florian Kainz)\n          \n* Added new IlmImfFuzzTest program to test how resilient the IlmImf\n  library is with respect broken input files: the program first\n  damages OpenEXR files by partially overwriting them with random\n  data; then it tries to read the damaged files.  If all goes well,\n  the program doesn't crash.  (Florian Kainz)\n\n## Version 1.6.0 (August 3, 2007)\n\nOpenEXR 1.6.0:\n\n* Reduced generational loss in B44- and B44A-compressed images.\n\n* Added B44A compression. This is a variation of B44, but with a\n  better compression ratio for images with large uniform areas, such\n  as in an alpha channel.\n\n* Bug fixes.\n\nCTL 1.4.0:\n\n* Added new functions to the CTL standard library: 3x3 matrix support,\n  1D lookup tables with cubic interpolation.\n\n* Added new \"ctlversion\" statement to the language.\n\n* Bug fixes.\n\nOpenEXR_CTL 1.0.0:\n\n* Applying CTL transforms to a frame buffer is multi-threaded.\nBug fixes.\n\nOpenEXR_Viewers 1.0.0:\n\n* Implemented new naming conventions for CTL parameters.\n\nIlmBase 1.0.0:\n\n* Half now implements \"round to nearest even\" mode.\n\n### Detailed Changes:\n\n* Bumped DSO version number to 6.0 (Florian Kainz)\n\n* Added new standard attributes related to color rendering with CTL\n  (Color Transformation Language): renderingTransform,\n  lookModTransform and adoptedNeutral.  (Florian Kainz)\n\n* Bug fix: for pixels with luminance near HALF_MIN, conversion from\n  RGB to luminance/chroma produces NaNs and infinities (Florian Kainz)\n          \n* Bug fix: excessive desaturation of small details with certain colors\n  after repeatedly loading and saving luminance/chroma encoded images\n  with B44 compression.  (Florian Kainz)\n\n* Added B44A compression, a minor variation of B44: in most cases, the\n  compression ratio is 2.28:1, the same as with B44, but in uniform\n  image areas where all pixels have the same value, the compression\n  ratio increases to 10.66:1.  Uniform areas occur, for example, in an\n  image's alpha channel, which typically contains large patches that\n  are solid black or white, or in computer- generated images with a\n  black background.  (Florian Kainz)\n\n* Added flag to configure.ac to enable or disable use of large auto\n  arrays in the IlmImf library.  Default is \"enable\" for Linux,\n  \"disable\" for everything else.  (Darby Johnston, Florian Kainz)\n\n* corrected version number on dso's (libtool) - now 5.0\n\n* Separated ILMBASE_LDFLAGS and ILMBASE_LIBS so that test programs can\n  link with static libraries properly\n\n* eliminated some warning messages during install (Andrew Kunz)\n\t\n## Version 1.5.0 (December 15, 2006)\n\nThe new version includes several significant changes:\n\n* OpenEXR supports a new image compression method, called B44. It has\n  a fixed compression rate of 2.28:1, or 4.57:1 if used in combination\n  with luminance/chroma encoding. B44-compressed images can be\n  uncompressed fast enough to support real-time playback of image\n  sequences.\n\n* The new playexr program plays back moving image sequences. Playexr\n  is multi-threaded and utilizes the threading capabilities of the\n  IlmImf library that were introduced in OpenEXR 1.3.0. The program\n  plays back B44-compressed images with fairly high-resolution in real\n  time on commodity hardware.\n\n* The playexr program and a new version of the existing exrdisplay\n  image viewer both support color rendering via color transforms\n  written in the new Color Transformation Language or CTL. CTL is not\n  part of OpenEXR; it will be released separately. CTL support in\n  playexr and exrdisplay is optional; the programs can be built and\n  will run without CTL.\n\n* In preparation for the release of CTL, OpenEXR has been split into\n  three separate packages:\n\n  * IlmBase 0.9.0 includes the Half, Iex, Imath and IlmThread libraries\n\n  * OpenEXR 1.5.0 includes the IlmImf library, programming examples and utility programs such as exrheader or exrenvmap\n\n  * OpenEXRViewers 0.9.0 includes the playexr and exrdisplay programs\n\n* The \"Technical Introduction to OpenEXR\" document now includes a\n  recommendation for storing CIE XYZ pixel data in OpenEXR files.\n\n* A new \"OpenEXR Image Viewing Software\" document describes the\n  playexr and exrdisplay programs. It briefly explains real-time\n  playback and color rendering, and includes recommendations for\n  testing if other image viewing software displays OpenEXR images\n  correctly.\n\n* The OpenEXR sample image set now includes B44-compressed files and\n  files with CIE XYZ pixel data.\n\n### Detailed Changes:  \n\n* reorganized packaging of OpenEXR libraries to facilitate integration\n  with CTL.  Now this library depends on the library IlmBase.  Some\n  functionality has been moved into OpenEXR_Viewers, which depends on\n  two other libraries, CTL and OpenEXR_CTL.  Note: previously there\n  were separate releases of OpenEXR-related plugins for Renderman,\n  Shake and Photoshop.  OpenEXR is supported natively by Rendermand\n  and Photoshop, so these plugins will not be supported for this or\n  future versions of OpenEXR.  (Andrew Kunz)\n\n* New build scripts for Linux/Unix (Andrew Kunz)\n\n* New Windows project files and build scripts (Kimball Thurston)\n\n* float-to-half conversion now preserves the sign of float zeroes and\n  of floats that are so small that they become half zeroes.  (Florian\n  Kainz)\n\n* Bug fix: Imath::Frustum<T>::planes() returns incorrect planes if the\n  frustum is orthogonal.  (Philip Hubbard)\n\n* added new framesPerSecond optional standard attribute (Florian\n  Kainz)\n\n* Imath cleanup:\n\n  - Rewrote function Imath::Quat<T>::setRotation() to make it\n    numerically more accurate, added confidence tests\n\n  - Rewrote function Imath::Quat<T>::slerp() using Don Hatch's method,\n    which is numerically more accurate, added confidence tests.\n\n  - Rewrote functions Imath::closestPoints(), Imath::intersect(),\n    added confidence tests.\n\n  - Removed broken function Imath::nearestPointOnTriangle().\n\n  - Rewrote Imath::drand48(), Imath::lrand48(), etc. to make them\n    functionally identical with the Unix/Linux versions of drand48(),\n    lrand48() and friends.\n\n  - Replaced redundant definitions of Int64 in Imath and IlmImf with a\n    single definition in ImathInt64.h.  (Florian Kainz)\n\n* exrdisplay: if the file's and the display's RGB chromaticities\n  differ, the pixels RGB values are transformed from the file's to the\n  display's RGB space.  (Florian Kainz)\n\n* Added new lossy B44 compression method.  HALF channels are\n  compressed with a fixed ratio of 2.28:1.  UINT and FLOAT channels\n  are stored verbatim, without compression.  (Florian Kainz)\n\n## Version 1.4.0a (August 9, 2006)\n\n* Fixed the ReleaseDLL targets for Visual Studio 2003.  (Barnaby Robson)\n\t\n## Version 1.4.0 (August 2, 2006)\t\n\n This is the next major production-ready release of OpenEXR and offers\n full compatibility with our last production release, which was\n 1.2.2. This version obsoletes versions 1.3.x, which were test\n versions for 1.4.0. If you have been using 1.3.x, please upgrade to\n 1.4.0.\n\n* Production release.\n\n* Bug Fix: calling setFrameBuffer() for every scan line while reading\n  a tiled file through the scan line API returns bad pixel data. (Paul\n  Schneider, Florian Kainz)\n\n## Version 1.3.1 (June 14, 2006)\n\n* Fixed the ReleaseDLL targets for Visual Studio 2005.  (Nick Porcino, Drew Hess)\n\n* Fixes/enhancements for createDLL.  (Nick Porcino)\n\t\n## Version 1.3.0 (June 8, 2006)\n\nThis is a test release. The major new feature in this version is\nsupport for multithreaded file I/O. We've been testing the threaded\ncode internally at ILM for a few months, and we have not encountered\nany bugs, but we'd like to get some feedback from others before we\nrelease the production version.\n\nHere's a summary of the changes since version 1.2.2:\n\n* Support for multithreaded file reading and writing.\n\n* Support for Intel-based OS X systems.\n\n* Support for Visual Studio 2005.\n\n* Better handling of **PLATFORM_** and **HAVE_** macros.\n\n* Updated documentation.\n\n* Bug fixes related to handling of incomplete and damaged files.\n\n* Numerous bug fixes and cleanups to the autoconf-based build system.\n\n* Removed support for the following configurations that were\n  previously supported. Some of these configurations may happen to\n  continue to function, but we can't help you if they don't, largely\n  because we don't have any way to test them:\n\n  * IRIX\n  * OSF1\n  * SunOS\n  * OS X versions prior to 10.3.\n  * gcc on any platform prior to version 3.3\n\n### Detailed Changes:\n\n* Removed openexr.spec file, it's out of date and broken to boot.\n (Drew Hess)\n          \n* Support for Visual Studio 2005.  (Drew Hess, Nick Porcino)\n\n* When compiling against OpenEXR headers on Windows, you no longer\n  need to define any **HAVE_** or **PLATFORM_** macros in your\n  projects.  If you are using any OpenEXR DLLs, however, you must\n  define OPENEXR_DLL in your project's preprocessor directives.  (Drew\n  Hess)\n\n* Many fixes to the Windows VC7 build system.  (Drew Hess, Nick\n  Porcino)\n\n* Support for building universal binaries on OS X 10.4.  (Drew Hess,\nPaul Schneider)\n          \n* Minor configure.ac fix to accommodate OS X's automake.  (Drew Hess)\n          \n* Removed CPU-specific optimizations from configure.ac, autoconf's\n\t  guess at the CPU type isn't very useful, anyway.  Closes\n\t  #13429.  (Drew Hess)\n          \n* Fixed quoting for tests in configure.ac.  Closes #13428.  (Drew\n  Hess)\n          \n* Use host specification instead of target in configure.ac.  Closes\n  #13427.  (Drew Hess)\n\n* Fix use of AC_ARG_ENABLE in configure.ac.  Closes #13426.  (Drew\nHess)\n\n* Removed workaround for OS X istream::read bug.  (Drew Hess)\n          \n* Added pthread support to OpenEXR pkg-config file.  (Drew Hess)\n          \n* Added -no-undefined to LDFLAGS and required libs to LIBADD for\n  library projects with other library dependencies, per Rex Dieter's\n  patch.  (Drew Hess)\n          \n* **HAVE_** macros are now defined in the OpenEXRConfig.h header file\n  instead of via compiler flags.  There are a handful of public\n  headers which rely on the value of these macros, and projects\n  including these headers have previously needed to define the same\n  macros and values as used by OpenEXR's 'configure', which is bad\n  form.  Now 'configure' writes these values to the OpenEXRConfig.h\n  header file, which is included by any OpenEXR source files that need\n  these macros.  This method of specifying **HAVE_** macros guarantees\n  that projects will get the proper settings without needing to add\n  compile- time flags to accommodate OpenEXR.  Note that this isn't\n  implemented properly for Windows yet.  (Drew Hess)\n\n* Platform cleanups:\n\n  - No more support for IRIX or OSF1.\n\n  - No more explicit support for SunOS, because we have no way to\n    verify that it's working.  I suspect that newish versions of SunOS\n    will just work out of the box, but let me know if not.\n\n  - No more **PLATFORM_** macros (vestiges of the ILM internal build\n    system).  PLATFORM_DARWIN_PPC is replaced by HAVE_DARWIN.\n    PLATFORM_REDHAT_IA32 (which was only used in IlmImfTest) is\n    replaced by HAVE_LINUX_PROCFS.\n\n  - OS X 10.4, which is the minimum version we're going to support\n    with this version, appears to have support for nrand48 and\n    friends, so no need to use the Imath-supplied version of them\n    anymore.  (Drew Hess)\n\n* No more PLATFORM_WINDOWS or PLATFORM_WIN32, replace with proper\n  standard Windows macros.  (Drew Hess)\n\n* Remove support for gcc 2.95, no longer supported.  (Drew Hess)\n\n* Eliminate HAVE_IOS_BASE macro, OpenEXR now requires support for\n  ios_base.  (Drew Hess)\n\n* Eliminate HAVE_STL_LIMITS macro, OpenEXR now requires the ISO C++\n  <limits> header.  (Drew Hess)\n\n* Use double quote-style include dirctives for OpenEXR\n  includes.  (Drew Hess)\n\n* Added a document that gives an overview of the on-disk\n  layout of OpenEXR files (Florian Kainz)\n\n* Added sections on layers and on memory-mapped file input\n  to the documentation.  (Florian Kainz)\n\n* Bug fix: reading an incomplete file causes a deadlock while\n  waiting on a semaphore.  (Florian Kainz)\n\n* Updated documentation (ReadingAndWritingImageFiles.sxw) and sample\n  code (IlmImfExamples): Added a section about multi-threading,\n  updated section on thread-safety, changed documentation and sample\n  code to use readTiles()/writeTiles() instead of\n  readTile()/writeTile() where possible, mentioned that environment\n  maps contain redundant pixels, updated section on testing if a file\n  is an OpenEXR file.  (Florian Kainz)\n\n* Multi-threading bug fixes (exceptions could be thrown multiple\n  times, some operations were not thread safe), updated some comments,\n  added comments, more multithreaded testing.  (Florian Kainz)\n\n* Added multi-threading support: multiple threads\n  cooperate to read or write a single OpenEXR file.\n  (Wojciech Jarosz)\n\n* Added operator== and operator!= to Imath::Frustum. (Andre Mazzone)\n\n* Bug fix: Reading a PIZ-compressed file with an invalid Huffman code\n  table caused crashes by indexing off the end of an array.  (Florian\n  Kainz)\n\n## Version 1.2.2 (March 15, 2005)\n\nThis is a relatively minor update to the project, with the following changes:\n\n* New build system for Windows; support for DLLs.\n\n* Switched documentation from HTML to PDF format.\n\n* IlmImf: support for image layers in ChannelList.\n\n* IlmImf: added isComplete() method to file classes to check whether a file is complete.\n\n* IlmImf: exposed staticInitialize() in ImfHeader.h in order to allow\n  thread-safe library initialization in multithreaded applications.\n\n* IlmImf: New \"time code\" standard attribute.\n\n* exrdisplay: support for displaying wrap-around texture map images.\n\n* exrmaketiled: can now specify wrap mode.\n\n* IlmImf: New \"wrapmodes\" standard attribute to indicate extrapolation\n  mode for mipmaps and ripmaps.\n\n* IlmImf: New \"key code\" standard attribute to identify motion picture\n  film frames.\n\n* Imath: Removed TMatrix<T> classes; these classes are still under\n  development and are too difficult to keep in sync with OpenEXR CVS.\n\n### Detailed Changes:\n\n\n* Updated README to remove option for building with Visual C++ 6.0.\n\t  (Drew Hess)\n\n* Some older versions of gcc don't support a full iomanip\n\t  implementation; check for this during configuration. \n\t  (Drew Hess)\n\n* Install PDF versions of documentation, remove old/out-of-date\n\t  HTML documentation.  (Florian Kainz)\n\n* Removed vc/vc6 directory; Visual C++ 6.0 is no longer\n\t  supported.  (Drew Hess)\n\n* Updated README.win32 with details of new build system.\n\t  (Florian Kainz, Drew Hess)\n\n* New build system for Windows / Visual C++ 7 builds both\n\t  static libraries and DLLs.\n\t  (Nick Porcino)\n\n* Removed Imath::TMatrix<T> and related classes, which are not\n\t  used anywhere in OpenEXR.\n\t  (Florian Kainz)\n\n* Added minimal support for \"image layers\" to class Imf::ChannelList\n\t  (Florian Kainz)\n\n* Added new isComplete() method to InputFile, TiledInputFile\n\t  etc., that checks if a file is complete or if any pixels\n\t  are missing (for example, because writing the file was\n\t  aborted prematurely).\n\t  (Florian Kainz)\n\n* Exposed staticInitialize() function in ImfHeader.h in order\n\t  to allow thread-safe library initialization in multithreaded\n\t  programs.\n\t  (Florian Kainz)\n\n* Added a new \"time code\" attribute\n\t  (Florian Kainz)\n\n* exrmaketiled: when a MIPMAP_LEVELS or RIPMAP_LEVELS image\n\t  is produced, low-pass filtering takes samples outside the\n\t  image's data window.  This requires extrapolating the image.\n\t  The user can now specify how the image is extrapolated\n\t  horizontally and vertically (image is surrounded by black /\n\t  outermost row of pixels repeats / entire image repeats /\n\t  entire image repeats, every other copy is a mirror image).\n\t  exrdisplay: added option to swap the top and bottom half,\n\t  and the left and right half of an image, so that the image's\n\t  four corners end up in the center.  This is useful for checking\n\t  the seams of wrap-around texture map images.\n\t  IlmImf library: Added new \"wrapmodes\" standard attribute\n\t  to indicate the extrapolation mode for MIPMAP_LEVELS and\n\t  RIPMAP_LEVELS images.\n\t  (Florian Kainz)\n\n* Added a new \"key code\" attribute to identify motion picture\n\t  film frames.\n\t  (Florian Kainz)\n\n* Removed #include <Iex.h> from ImfAttribute.h, ImfHeader.h and\n  ImfXdr.h so that including header files such as ImfInputFile.h no\n  longer defines ASSERT and THROW macros, which may conflict with\n  similar macros defined by application programs.  (Florian Kainz)\n\n* Converted HTML documentation to OpenOffice format to make\n  maintaining the documents easier: api.html ->\n  ReadingAndWritingImageFiles.sxw details.html ->\n  TechnicalIntroduction.sxw (Florian Kainz)\n\n## Version 1.2.1 (June 6, 2004)\n\nThis is a fairly minor release, mostly just a few tweaks, a few bug\nfixes, and some new documentation. Here are the most important\nchanges:\n\n* reduced memory footprint of exrenvmap and exrmaketiled utilities.\n\n* IlmImf: new helper functions to determine whether a file is an\n  OpenEXR file, and whether it's scanline- or tile-based.\n\n* IlmImf: bug fix for PXR24 compression with ySampling != 1.\n\n* Better support for gcc 3.4.\n\n* Warning cleanups in Visual C++.\n\n### Detailed Changes:\n\n* exrenvmap and exrmaketiled use slightly less memory\n\t  (Florian Kainz)\n\n* Added functions to IlmImf for quickly testing if a file\n\t  is an OpenEXR file, and whether the file is scan-line\n\t  based or tiled. (Florian Kainz)\n\n* Added preview image examples to IlmImfExamples.  Added\n\t  description of preview images and environment maps to\n\t  docs/api.html (Florian Kainz)\n\n* Bug fix: PXR24 compression did not work properly for channels with\n  ySampling != 1.  (Florian Kainz)\n\n* Made ``template <class T>`` become ``template <class S, class T>``\n  for the ``transform(ObjectS, ObjectT)`` methods. This was done to\n  allow for differing templated objects to be passed in e.g.  say a\n          ``Box<Vec3<S>>`` and a ``Matrix44<T>``, where S=float and T=double.\n          (Jeff Yost, Arkell Rasiah)\n\n* New method Matrix44::setTheMatrix(). Used for assigning a M44f to a\n  M44d. (Jeff Yost, Arkell Rasiah)\n\n* Added convenience Color typedefs for half versions of Color3 and\n  Color4. Note the Makefile.am for both Imath and ImathTest have been\n  updated with -I and/or -L pathing to Half.  (Max Chen, Arkell\n  Rasiah)\n\n* Methods equalWithAbsError() and equalWithRelError() are now\n          declared as const. (Colette Mullenhoff, Arkell Rasiah)\n\n* Fixes for gcc34. Mainly typename/template/using/this syntax\n          correctness changes. (Nick Ramussen, Arkell Rasiah)\n\n* Added Custom low-level file I/O examples to IlmImfExamples\n\t  and to the docs/api.html document.  (Florian Kainz)\n\n* Eliminated most warnings messages when OpenEXR is compiled with\n  Visual C++.  The OpenEXR code uses lots of (intentional and\n  unintended) implicit type conversions.  By default, Visual C++ warns\n  about almost all of them.  Most implicit conversions have been\n  removed from the .h files, so that including them should not\n  generate warnings even at warning level 3.  Most .cpp files are now\n  compiled with warning level 1.  (Florian Kainz)\n\n## Version 1.2.0 (May 11, 2004)\n\nOpenEXR 1.2.0 is now available. This is the first official,\nproduction-ready release since OpenEXR 1.0.7. If you have been using\nthe development 1.1 series, please switch to 1.2.0 as soon as\npossible. We believe that OpenEXR 1.2.0 is ready for use in shipping\napplications. We have been using it in production at ILM for several\nmonths now with no problems. There are quite a few major new features\nin the 1.2 series as compared to the original 1.0 series:\n\n* Support for tiled images, including mipmaps and ripmaps. Note that\n  software based on the 1.0 series cannot read or write tiled\n  images. However, simply by recompiling your software against the 1.2\n  release, any code that reads scanline images can read tiled images,\n  too.\n\n* A new Pxr24 compressor, contributed by Pixar Animation\n  Studios. Values produced by the Pxr24 compressor provide the same\n  range as 32-bit floating-point numbers with slightly less precision,\n  and compress quite a bit better. The Pxr24 compressor stores UINT\n  and HALF channels losslessly, and for these data types performs\n  similarly to the ZIP compressor.\n\n* OpenEXR now supports high dynamic-range YCA (luminance/chroma/alpha)\n  images with subsampled chroma channels. These files are supported\n  via the RGBA convenience interface, so that data is presented to the\n  application as RGB(A) but stored in the file as YC(A). OpenEXR also\n  supports Y and YA (black-and-white/black-and-white with alpha)\n  images.\n\n* An abstracted file I/O interface, so that you can use OpenEXR with\n  interfaces other than C++'s iostreams.\n\n* Several new utilities for manipulating tiled image files.\n\n### Detailed Changes:\n\n* Production-ready release.\n\n* Disable long double warnings on OS X.  (Drew Hess)\n\n* Add new source files to VC7 IlmImfDll target.  (Drew Hess)\n\n* Iex: change the way that APPEND_EXC and REPLACE_EXC modify\n\t  their what() string to work around an issue with Visual C++\n\t  7.1.  (Florian Kainz, Nick Porcino)\n\n* Bumped OpenEXR version to 1.2 and .so versions to 2.0.0 in\n\t  preparation for the release.  (Drew Hess)\n\n* Imath: fixed ImathTMatrix.h to work with gcc 3.4.  (Drew Hess)\n\n* Another quoting fix in openexr.m4.  (Drew Hess)\n\n* Quoting fix in acinclude.m4 for automake 1.8.  (Brad Hards)\n\n* Imath: put inline at beginning of declaration in ImathMatrix.h\n\t  to fix a warning.  (Ken McGaugh)\n\n* Imath: made Vec equalWithError () methods const.\n\n* Cleaned up compile-time Win32 support.  (Florian Kainz)\n\n* Bug fix: Reading a particular broken PIZ-compressed file\n\t  caused crashes by indexing off the end of an array.\n\t  (Florian Kainz)\n\n## Version 1.1.1 (March 27, 2004)\n\nOpenEXR 1.1.1 is now available. This another development release. We\nexpect to release a stable version, 1.2, around the end of\nApril. Version 1.1.1 includes support for PXR24 compression, and for\nhigh-dynamic-range luminance/chroma images with subsampled chroma\nchannels. Version 1.1.1 also fixes a bug in the 1.1.0 tiled file\nformat.\n\n### Detailed Changes:\n\n* Half: operator= and variants now return by reference rather than by\n  value.  This brings half into conformance with built-in types.\n  (Drew Hess)\n\n* Half: remove copy constructor, let compiler supply its own.  This\n  improves performance up to 25% on some expressions using half.\n  (Drew Hess)\n\n* configure: don't try to be fancy with CXXFLAGS, just use what the\n  user supplies or let configure choose a sensible default if CXXFLAGS\n  is not defined.\n\n* IlmImf: fixed a bug in reading scanline files on big-endian\n          architectures.  (Drew Hess)\n\n* exrmaketiled: Added an option to select compression type.  (Florian\n  Kainz)\n\n* exrenvmap: Added an option to select compression type.  (Florian\n  Kainz)\n\n* exrdisplay: Added some new command-line options.  (Florian Kainz)\n\n* IlmImf: Added Pixar's new \"slightly lossy\" image compression method.\n  The new method, named PXR24, preserves HALF and UINT data without\n  loss, but FLOAT pixels are converted to a 24-bit representation.\n  PXR24 appears to compress FLOAT depth buffers very well without\n  losing much accuracy.  (Loren Carpenter, Florian Kainz)\n\n* Changed top-level LICENSE file to allow for other copyright holders\n  for individual files.\n\n* IlmImf: TILED FILE FORMAT CHANGE.  TiledOutputFile was incorrectly\n  interleaving channels and scanlines before passing pixel data to a\n  compressor.  The lossless compressors still work, but lossy\n  compressors do not.  Fix the bug by interleaving channels and\n  scanlines in tiled files in the same way as ScanLineOutputFile does.\n  Programs compiled with the new version of IlmImf cannot read tiled\n  images produced with version 1.1.0.  (Florian Kainz)\n\n* IlmImf: ImfXdr.h fix for 64-bit architectures.  (Florian Kainz)\n\n* IlmImf: OpenEXR now supports YCA (luminance/chroma/alpha) images\n  with subsampled chroma channels.  When an image is written with the\n  RGBA convenience interface, selecting WRITE_YCA instead of\n  WRITE_RGBA causes the library to convert the pixels to YCA format.\n  If WRITE_Y is selected, only luminance is stored in the file (for\n  black and white images).  When an image file is read with the RGBA\n  convenience interface, YCA data are automatically converted back to\n  RGBA.  (Florian Kainz)\n\n* IlmImf: speed up reading tiled files as scan lines.\n\t  (Florian Kainz)\n\n* Half:  Fixed subtle bug in Half where signaling float NaNs\n\t  were being converted to inf in half.  (Florian Kainz)\n\n* gcc 3.3 compiler warning cleanups.  (various)\n\n* Imath: ImathEuler.h fixes for gcc 3.4.  (Garrick Meeker)\n\t\n## Version 1.1.0 (February 6, 2004)\n\n OpenEXR 1.1.0 is now available. This is a major new release with\n support for tiled images, multi-resolution files (mip/ripmaps),\n environment maps, and abstracted file I/O. We've also released a new\n set of images that demonstrate these features, and updated the\n CodeWarrior project and Photoshop plugins for this release. See the\n downloads section for the source code and the new images.\n\n### Detailed Changes:\n\n* Added new targets to Visual C++ .NET 2003 project\n\t  for exrmaketiled, exrenvmap, exrmakepreview, and exrstdattr.\n\t  (Drew Hess)\n\n* A few assorted Win32 fixes for Imath.  (Drew Hess)\n\n* GNU autoconf builds now produce versioned libraries.\n\t  This release is 1:0:0.  (Drew Hess)\n\n* Fixes for Visual C++ .NET 2003.  (Paul Schneider)\n\n* Updated Visual C++ zlib project file to zlib 1.2.1.\n\t  (Drew Hess)\n\n* exrdisplay: Fixed fragment shader version.  (Drew Hess)\n\n* *Test: Fixed some compiler issues.  (Drew Hess)\n\n* Imath: Handle \"restrict\" keyword properly.  (Drew Hess)\n\n* IlmImfExamples: Updated to latest versions of example\n\t  source code, includes tiling and multi-res images.\n\t  (Florian Kainz)\n\n* exrmakepreview: A new utility to create preview images.\n\t  (Florian Kainz)\n\n* exrenvmap: A new utility to create OpenEXR environment\n\t  maps.  (Florian Kainz)\n\n* exrstdattr: A new utility to modify standard \n\t  attributes.  (Florian Kainz)\n\n* Updated exrheader to print level rounding mode and\n\t  preview image size.  (Florian Kainz)\n\n* Updated exrmaketiled to use level rounding mode.\n\t  (Florian Kainz)\n\n* IlmImf: Changed the orientation of lat-long envmaps to\n\t  match typical panoramic camera setups.  (Florian Kainz)\n\n* IlmImf: Fixed a bug where partially-completed files with\n\t  DECREASING_Y could not be read.  (Florian Kainz)\n\n* IlmImf: Added support for selectable rounding mode (up/down)\n\t  when generating multiresolution files.  (Florian Kainz)\n\n* exrdisplay: Support for tiled images, mip/ripmaps, preview\n\t  images, and display windows.  (Florian Kainz, Drew Hess)\n\n* exrmaketiled: A new utility which generates tiled\n\t  versions of OpenEXR images.  (Florian Kainz)\n\n* IlmImf: Changed Imf::VERSION to Imf::EXR_VERSION to\n\t  work around problems with autoconf VERSION macro\n\t  conflict.  (Drew Hess)\n\n* exrheader: Support for tiles, mipmaps, environment\n\t  maps.  (Florian Kainz)\n\n* IlmImf: Environment map support.  (Florian Kainz)\n\n* IlmImf: Abstracted stream I/O support.  (Florian Kainz)\n\n* IlmImf: Support for tiled and mip/ripmapped files;\n\t  requires new file format.  (Wojciech Jarosz, Florian Kainz)\n\n* Imath: **TMatrix**, generic 2D matricies and algorithms.\n\t  (Francesco Callari)\n\n* Imath: major quaternions cleanup.  (Cary Phillips)\n\n* Imath: added GLBegin, GLPushAttrib, GLPushMatrix objects\n\t  for automatic cleanup on exceptions.  (Cary Phillips)\n\n* Imath: removed implicit scalar->vector promotions and vector\n\t  comparisons.  (Nick Rasmussen)\n\t\n## Version 1.0.7 (January 7, 2004)\n\nOpenEXR 1.0.7 is now available. In addition to some bug fixes, this\nversion adds support for some new standard attributes, such as primary\nand white point chromaticities, lens aperture, film speed, image\nacquisition time and place, and more. If you want to use these new\nattributes in your applications, see the ImfStandardAttributes.h\nheader file for documentation.\n\nOur project hosting site, Savannah, is still recovering from a\ncompromise last month, so in the meantime, we're hosting file\ndownloads here. Some of the files are not currently available, but\nwe're working to restore them.\n\n### Detailed Changes:\n\n* Fixed a typo in one of the IlmImfTest tests. (Paul Schneider)\n\n* Fixed a bug in exrdisplay that causes the image to display\n\t  as all black if there's a NaN or infinity in an OpenEXR\n\t  image. (Florian Kainz)\n\n* Updated exrheader per recent changes to IlmImf library.\n\t  (Florian Kainz)\n\n* Changed an errant float to a T in ImathFrame.h nextFrame().\n\t  (Cary Phillips)\n\n* Support for new \"optional standard\" attributes\n\t  (chromaticities, luminance, comments, etc.).\n\t  (Florian Kainz, Greg Ward, Joseph Goldstone)\n\n* Fixed a buffer overrun in ImfOpaqueAttribute. (Paul Schneider)\n\n* Added new function, isImfMagic (). (Florian Kainz)\n\t\n## Version 1.0.6:\n\n* Added README.win32 to disted files.\n\n* Fixed OpenEXR.pc.in pkg-config file, OpenEXR now works\n\t  with pkg-config.\n\n* Random fixes to readme files for new release.\n\n* Fixed openexr.m4, now looks in /usr by default.\n\n* Added Visual Studio .NET 2003 \"solution.\"\n\n* Fixes for Visual Studio .NET 2003 w/ Microsoft C++ compiler.\n\t  (Various)\n\n* Random Imath fixes and enhancements.  Note that extractSHRT now\n  takes an additional optional argument, see ImathMatrixAlgo.h for\n  details.  (Various)\n\n* Added Wojciech Jarosz to AUTHORS file.\n\n* Added test cases for uncompressed case, preview images,\n\t  frame buffer type conversion.  (Wojciech Jarosz,\n\t  Florian Kainz)\n\n* Fix a bug in IlmImf where uncompressed data doesn't get\n\t  read/written correctly.  (Wojciech Jarosz)\n\n* Added support for preview images and preview image\n\t  attributes (thumbnail images) in IlmImf.  (Florian Kainz)\n\n* Added support for automatic frame buffer type conversion\n\t  in IlmImf.  (Florian Kainz)\n\n* Cleaned up some compile-time checks.\n\n* Added HalfTest unit tests.\n\n* [exrdisplay] Download half framebuffer to texture memory \n\t  instead of converting to float first.  Requires latest\n\t  Nvidia drivers.\n\n## Version 1.0.5 (April 3, 2003)\n\nIndustrial Light & Magic has released the source code for an OpenEXR\ndisplay driver for Pixar's Renderman. This display driver is covered\nunder the OpenEXR free software license. See the downloads section for\nthe source code.\n\n### Detailed Changes:\n\n* Fixed IlmImf.dll to use static runtime libs (Andreas).\n\n* Added exrheader project to Visual Studio 6.0 workspace.\n\n* Added some example code showing how to use the IlmImf library.\n\t  (Florian)\n\n* Use DLL runtime libs for Win32 libraries rather than static\n\t  runtime libs.\n\n* Add an exrdisplay_fragshader project to the Visual Studio 6.0\n\t  workspace to enable fragment shaders in Win32.\n\n* Add an IlmImfDll project to the Visual Studio 6.0 workspace.\n\n* In Win32, export the ImfCRgbaFile C interface via a DLL so that\n  Visual C++ 6.0 users can link against an Intel-compiled IlmImf.\n  (Andreas Kahler)\n\n* Use auto_ptr in ImfAutoArray on Win32, it doesn't like large \n\t  automatic stacks.\n\n* Performance improvements in PIZ decoding, between\n\t  20 and 60% speedup on Athlon and Pentium 4 systems.\n          (Florian)\n\n* Updated the README with various information, made\n\t  some cosmetic changes for readability.\n\n* Added fragment shader support to exrdisplay.\n\n* Bumped the version to 1.0.5 in prep for release.\n\n* Updated README and README.OSX to talk about CodeWarrior \n          project files.\n\n* Incorporated Rodrigo Damazio's patch for an openexr.m4\n\t  macro file and an openexr.spec file for building RPMs.\n\n* Small change in ImfAttribute.h to make IlmImf compile with gcc 2.95.\n\n* Updated ImfDoubleAttribute.h for Codewarrior on MacOS.\n\n* Added exrheader utility.\n\n* Update to AUTHORS file.\n\n* Added a README.win32 file.\n\n* Added project files for Visual Studio 6.0.\n\n* Initial Win32 port.  Requires Visual Studio 6.0 and Intel C++\n\t  compiler version 7.0.\n\n* Added new intersectT method in ImathSphere.h\n\n* Fixed some bugs in ImathQuat.h\n\n* Proper use of fltk-config to get platform-specific FLTK\n\t  compile- and link-time flags.\n\n* exrdisplay uses Imath::Math<T>::pow instead of powf now.\n\t  powf is not available on all platforms.\n\n* Roll OS X \"hack\" into the source until Apple fixes their\n\t  istream implementation.\n\t\n## Version 1.0.4\n\n### Detailed Changes:\n\n* OpenEXR is now covered by a modified BSD license.  See LICENSE\n\t  for the new terms.\n\n## Version 1.0.3:\n\n### Detailed Changes:\n\n* OpenEXR is now in sf.net CVS.\n\n* Imf::Xdr namespace cleanups.\n\n* Some IlmImfTest cleanups for OS X.\n\n* Use .cpp extension in exrdisplay sources.\n\n* Iex cleanups.\n\n* Make IlmImf compile with Metrowerks Codewarrior.\n\n* Change large automatic stacks in ImfHuf.C to auto_ptrs allocated\n\t  off the heap.  MacOS X default stack size isn't large enough.\n\n* std::ios fix for MacOS X in ImfInputFile.C.\n\n* Added new FP predecessor/successor functions to Imath, added\n\t  tests to ImathTest\n\n* Fixed a bug in Imath::extractSHRT for 3x3 matricies when exactly one\n  of the original scaling factors is negative, updated ImathTest to\n  check this case.\n\n* Install include files when 'make install' is run.\n\n* exrdisplay requires fltk 1.1+ now in an effort to support a MacOS X\n  display program (fltk 1.1 runs on OS X), though this is untested.\n\n* renamed configure.in to configure.ac\n\n* Removed some tests from IexTest that are no longer used.\n\n* Removed ImfHalfXdr.h, it's not used anymore.\n\n* Revamped the autoconf system, added some compile-time optimizations,\n  a pkgconfig target, and some maintainer-specific stuff.\n\n## Version 1.0.2\n\n### Detailed Changes:\n\n\n* More OS X fixes in Imath, IlmImf and IlmImfTest.\n\n* Imath updates.\n\n* Fixed a rotation bug in Imath\n\n## Version 1.0.1\n\n### Detailed Changes:\n\n* Used autoconf 2.53 and automake 1.6 to generate build environment.\n\n* Makefile.am cleanups.\n\n* OS X fixes.\n\n* removed images directory (now distributed separately).\n\n## Version 1.0\n\n### Detailed Changes:\n\n* first official release.\n\n* added some high-level documentation, removed the old OpenEXR.html\n          documentation.\n\n* fixed a few nagging build problems.\n\n* bumped IMV_VERSION_NUMBER to 2\n\n## Version 0.9\n\n### Detailed Changes:\n\n* added exrdisplay viewer application.\n\n* cleanup _data in Imf::InputFile and Imf::OutputFile constructors.\n\n* removed old ILM copyright notices.\n\n## Version 0.8\n\n### Detailed Changes:\n\n* Initial release.\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 5.3330078125,
          "content": "# SPDX-License-Identifier: BSD-3-Clause\n# Copyright (c) Contributors to the OpenEXR Project.\n\n# We require this to get object library link library support\ncmake_minimum_required(VERSION 3.14)\n\nif(POLICY CMP0074)\n  # enable find_package(<Package>) to use <Package>_ROOT as a hint\n  cmake_policy(SET CMP0074 NEW)\nendif()\n\nif(POLICY CMP0077)\n  # enable variables set outside to override options\n  cmake_policy(SET CMP0077 NEW)\nendif()\n\n#######################################\n# Create project and include cmake\n# configuration files\n#######################################\n\nfile(READ \"src/lib/OpenEXRCore/openexr_version.h\" VERSION_H)\nstring(REGEX MATCH \"VERSION_MAJOR ([0-9]*)\" _ ${VERSION_H})\nset(OPENEXR_VERSION_MAJOR ${CMAKE_MATCH_1})\nstring(REGEX MATCH \"VERSION_MINOR ([0-9]*)\" _ ${VERSION_H})\nset(OPENEXR_VERSION_MINOR ${CMAKE_MATCH_1})\nstring(REGEX MATCH \"VERSION_PATCH ([0-9]*)\" _ ${VERSION_H})\nset(OPENEXR_VERSION_PATCH ${CMAKE_MATCH_1})\n\nproject(OpenEXR VERSION ${OPENEXR_VERSION_MAJOR}.${OPENEXR_VERSION_MINOR}.${OPENEXR_VERSION_PATCH} LANGUAGES C CXX)\n\nset(OPENEXR_VERSION_RELEASE_TYPE \"-dev\" CACHE STRING \"Extra version tag string for OpenEXR build, such as -dev, -beta1, etc.\")\n\nset(OPENEXR_VERSION ${OpenEXR_VERSION})\nset(OPENEXR_VERSION_API \"${OpenEXR_VERSION_MAJOR}_${OpenEXR_VERSION_MINOR}\")\n\n# The SOVERSION (i.e. numerical component of SONAME) tracks the ABI\n# version. Increment this number whenever, and only when, the ABI changes in\n# non-backwards-compatible ways.\n#\n# The OpenEXR project policy is to append the library version \n# \"major.minor.patch\" to the SONAME to form the real shared library name.  \n# For example, in \"libOpenEXR.so.31.3.2.0\", \"libOpenEXR.so.31\" is the SONAME\n# and \".3.2.0\" identifies the corresponding library release.\n\nset(OPENEXR_LIB_SOVERSION 99)\nset(OPENEXR_LIB_VERSION \"${OPENEXR_LIB_SOVERSION}.${OPENEXR_VERSION}\") # e.g. \"31.3.2.0\"\n\noption(OPENEXR_INSTALL \"Install OpenEXR libraries\" ON)\noption(OPENEXR_INSTALL_TOOLS \"Install OpenEXR tools\" ON)\n\nif(OPENEXR_INSTALL OR OPENEXR_INSTALL_TOOLS)\n  # uninstall target\n  if(NOT TARGET uninstall)\n    configure_file(\n      \"${CMAKE_CURRENT_SOURCE_DIR}/cmake/cmake_uninstall.cmake.in\"\n      \"${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake\"\n      IMMEDIATE @ONLY)\n    add_custom_target(uninstall\n      COMMAND ${CMAKE_COMMAND} -P ${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake)\n  endif()\nendif()\n\ninclude(cmake/LibraryDefine.cmake)\ninclude(cmake/OpenEXRSetup.cmake)\nadd_subdirectory(cmake)\nmessage(STATUS \"Configure ${OPENEXR_PACKAGE_NAME}, library API version: ${OPENEXR_LIB_VERSION}\")\n\n# Hint: This can be set to enable custom find_package\n# search paths, probably best to set it when configuring\n# on the command line to cmake instead of setting it\n# here.\n###set(CMAKE_PREFIX_PATH \"/prefix\")\n\n#######################################\n# Add all source in subdirectories\n#######################################\n\nif(BUILD_TESTING AND NOT OPENEXR_IS_SUBPROJECT)\n  # Enable testing *before* adding any subdirectories that may include tests\n  enable_testing()\nendif()\n\n# Include these two modules without enable/disable options\nif (OPENEXR_BUILD_LIBS)\n  add_subdirectory(src/lib)\nendif()\n\nif(OPENEXR_BUILD_TOOLS AND OPENEXR_BUILD_LIBS)\n  add_subdirectory(src/bin)\nendif()\n\n# Tell CMake where to find the OpenEXRConfig.cmake file. Makes it possible to call \n# find_package(OpenEXR) in downstream projects\nset(OpenEXR_DIR \"${CMAKE_CURRENT_BINARY_DIR}/cmake\" CACHE PATH \"\" FORCE)\n# Add an empty OpenEXRTargets.cmake file for the config to use. \n# Can be empty since we already defined the targets in add_subdirectory\nfile(WRITE \"${CMAKE_CURRENT_BINARY_DIR}/cmake/OpenEXRTargets.cmake\" \"# Dummy file\")\n\nif(OPENEXR_BUILD_EXAMPLES AND OPENEXR_BUILD_LIBS)\n  add_subdirectory( src/examples )\nendif()\n\n# If you want to use ctest to configure, build and\n# upload the results, cmake has builtin support for\n# submitting to CDash, or any server who speaks the\n# same protocol\n# \n# These settings will need to be set for your environment,\n# and then a script such as the example in\n#\n# cmake/SampleCTestScript.cmake\n#\n# edited and placed into the CI system, then run:\n#\n# cmake -S cmake/SampleCTestScript.cmake\n#\n# [or whatever you name the file you edit]\n# \n#set(CTEST_PROJECT_NAME \"OpenEXR\")\n#set(CTEST_NIGHTLY_START_TIME \"01:01:01 UTC\")\n#set(CTEST_DROP_METHOD \"http\") # there are others...\n#set(CTEST_DROP_SITE \"open.cdash.org\")\n#set(CTEST_DROP_LOCATION \"/submit.php?project=MyProject\")\n#set(CTEST_DROP_SITE_CDASH TRUE)\ninclude(CTest)\n\nif(BUILD_TESTING AND OPENEXR_BUILD_LIBS AND NOT OPENEXR_IS_SUBPROJECT)\n  add_subdirectory(src/test)\nendif()\n\n# Including this module will add a `clang-format` target to the build if\n# the clang-format executable can be found. Only do this if we are top level\nif(NOT OPENEXR_IS_SUBPROJECT)\n  include(cmake/clang-format.cmake)\nendif()\n\noption(OPENEXR_INSTALL_DOCS \"Set ON to install tool manpages\")\nif (OPENEXR_INSTALL_DOCS AND NOT OPENEXR_IS_SUBPROJECT)\n  add_subdirectory(docs)\nendif()\n\noption(BUILD_WEBSITE \"Set ON to build website source\")\nif (BUILD_WEBSITE AND NOT OPENEXR_IS_SUBPROJECT)\n  add_subdirectory(website)\nendif()\n\nif (OPENEXR_BUILD_LIBS AND NOT OPENEXR_IS_SUBPROJECT)\n  # Even if not building the website, still make sure the website example code compiles.\n  add_subdirectory(website/src)\nendif()\n\nif (OPENEXR_BUILD_PYTHON AND OPENEXR_BUILD_LIBS AND NOT OPENEXR_IS_SUBPROJECT)\n  add_subdirectory(src/wrappers/python)\nendif()\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 0.3798828125,
          "content": "# See https://help.github.com/articles/about-codeowners/\n# for more info about CODEOWNERS file\n\n# It uses the same pattern rule for gitignore file\n# https://git-scm.com/docs/gitignore#_pattern_format\n\n# Admin\n/openexr/ASWF/                  @cary-ilm @kdt3rd @lgritz @meshula @peterhillman @xlietz\n/openexr/*.md                   @cary-ilm @kdt3rd @lgritz @meshula @peterhillman @xlietz\n\n\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 2.130859375,
          "content": "<!-- SPDX-License-Identifier: BSD-3-Clause -->\n<!-- Copyright (c) Contributors to the OpenEXR Project -->\n\n# Code of Conduct\n\nThe OpenEXR project abides by Linux Foundation's code of conduct,\nwhich you can read in full\n[here](https://lfprojects.org/policies/code-of-conduct).\n\nOur covenant includes:\n\n* Treat each other with respect, professionalism, fairness, and\n  sensitivity to our many differences and strengths, including in\n  situations of high pressure and urgency.\n\n* Never harass or bully anyone verbally, physically or sexually.\n\n* Never discriminate on the basis of personal characteristics or group\n  membership.\n\n* Communicate constructively and avoid demeaning or insulting behavior\n  or language.\n\n* Seek, accept, and offer objective work criticism, and acknowledge\n  properly the contributions of others.\n\n* Be honest about your own qualifications, and about any circumstances\n  that might lead to conflicts of interest.\n\n* Respect the privacy of others and the confidentiality of data you\n  access.\n\n* With respect to cultural differences, be conservative in what you do\n  and liberal in what you accept from others, but not to the point of\n  accepting disrespectful, unprofessional or unfair or unwelcome\n  behavior or advances.\n\n* Promote the rules of this Code and take action (especially if you\n  are in a leadership position) to bring the discussion back to a more\n  civil level whenever inappropriate behaviors are observed.\n\n* Stay on topic: Make sure that you are posting to the correct channel\n  and avoid off-topic discussions. Remember when you update an issue\n  or respond to an email you are potentially sending to a large number\n  of people.\n\n* Step down considerately: participants in every project come and go,\n  and LF Projects is no different. When you leave or disengage from\n  the project, in whole or in part, we ask that you do so in a way\n  that minimizes disruption to the project. This means you should tell\n  people you are leaving and take the proper steps to ensure that\n  others can pick up where you left off.\n\nTo report incidents or to appeal reports of incidents, send email to\nthe Manager of LF Projects at manager@lfprojects.org.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 32.0224609375,
          "content": "<!-- SPDX-License-Identifier: BSD-3-Clause -->\n<!-- Copyright (c) Contributors to the OpenEXR Project -->\n\n# Contributing to OpenEXR\n\nThank you for your interest in contributing to OpenEXR. This document\nexplains our contribution process and procedures:\n\n* [Getting Information](#Getting-Information)\n* [Legal Requirements](#Legal-Requirements)\n* [Development Workflow](#Development-Workflow)\n* [Coding Style](#Coding-Style)\n* [Versioning Policy](#Versioning-Policy)\n* [Contributing to the Website](#Contributing-to-the-Website)\n* [Creating a Patch Release](#Creating-a-Patch-Release)\n* [Creating a Major/Minor Release](#Creating-a-Major/Minor-Release)\n\nFor a description of the roles and responsibilities of the various\nmembers of the OpenEXR community, see [GOVERNANCE](GOVERNANCE.md), and\nfor further details, see the OpenEXR project's [Technical\nCharter](ASWF/charter/OpenEXR-Technical-Charter.md). Briefly,\na \"contributor\" is anyone who submits content to the project, a\n\"committer\" reviews and approves such submissions, and the \"Technical\nSteering Committee\" provides general project oversight and governance.\n\n## Getting Information\n\nThere are two primary ways to connect with the OpenEXR project:\n\n* The [openexr-dev](https://lists.aswf.io/g/openexr-dev) mail list:\n  This is a development focused mail list with a deep history of\n  technical conversations and decisions that have shaped the project.\n\n* [GitHub Issues](https://github.com/AcademySoftwareFoundation/openexr/issues): GitHub\n  Issues are used both to track bugs and to discuss feature requests.\n\n### How to Ask for Help\n\nIf you have trouble installing, building, or using the library, but\nthere's not yet reason to suspect you've encountered a genuine bug,\nstart by posting a question to the\n[openexr-dev](http://lists.aswf.io/openexr-dev) mailing list. This is\nthe place for question such has \"How do I...\".\n\n### How to Report a Bug\n\nOpenEXR use GitHub's issue tracking system for bugs and enhancements:\nhttps://github.com/AcademySoftwareFoundation/openexr/issues\n\nIf you are submitting a bug report, please be sure to note which\nversion of OpenEXR you are using, on what platform (OS/version, which\ncompiler you used, and any special build flags or other unusual\nenvironmental issues). Please give a specific account of\n\n* what you tried\n* what happened\n* what you expected to happen instead\n\nwith enough detail that others can reproduce the problem.\n\n### How to Request a Change\n\nOpen a GitHub issue: https://github.com/AcademySoftwareFoundation/openexr/issues.\n\nDescribe the situation and the objective in as much detail as\npossible. Feature requests will almost certainly spawn a discussion\namong the project community.\n\n### How to Report a Security Vulnerability\n\nIf you think you've found a potential vulnerability in OpenEXR, please\nrefer to [SECURITY.md](SECURITY.md) to responsibly disclose it.\n\n### How to Contribute a Bug Fix or Change\n\nTo contribute code to the project, first read over the [GOVERNANCE](GOVERNANCE.md) page to understand the roles involved. You'll need:\n\n* A good knowledge of git.\n\n* A fork of the GitHub repo.\n\n* An understanding of the project's development workflow.\n\n* Legal authorization, that is, you need to have signed a contributor\n  License Agreement. See below for details.\n\n## Legal Requirements\n\nOpenEXR is a project of the Academy Software Foundation and follows the\nopen source software best practice policies of the Linux Foundation.\n\n### License\n\nOpenEXR is licensed under the [BSD-3-Clause](LICENSE.md)\nlicense. Contributions to the library should abide by that standard\nlicense.\n\n### Contributor License Agreements\n\nDevelopers who wish to contribute code to be considered for inclusion\nin the OpenEXR distribution must first complete a **Contributor\nLicense Agreement**.\n\nTo contribute to OpenEXR, you must sign a CLA through the\n[EasyCLA](https://contributor.easycla.lfx.linuxfoundation.org/#/cla/project/2e8710cb-e379-4116-a9ba-964f83618cc5/user/564e571e-12d7-4857-abd4-898939accdd7?redirect=https:%2F%2Fgithub.com%2FAcademySoftwareFoundation%2Fopenexr%2Fpull%2F1154)\nsystem, which is integrated with GitHub as a pull request check.\n\nSign the form through [this\nlink](https://contributor.easycla.lfx.linuxfoundation.org/#/cla/project/2e8710cb-e379-4116-a9ba-964f83618cc5/user/564e571e-12d7-4857-abd4-898939accdd7?redirect=https:%2F%2Fgithub.com%2FAcademySoftwareFoundation%2Fopenexr%2Fpull%2F1154)\nprior to submitting a pull request. If you submit a pull request\nbefore the form is signed, the \"linux-foundation-easycla\" check will\nfail and a red \"NOT COVERED\" button will appear in the PR\ncomments. Click that link to sign the form.\n\n* If you are an individual writing the code on your own time and\n  you're **sure** you are the sole owner of any intellectual property you\n  contribute, you can sign the CLA as an **Individual Contributor**.\n\n* If you are writing the code as part of your job, or if your employer\n  retains ownership to intellectual property you create, no matter how\n  small, then your company's legal affairs representatives should sign\n  a **Corporate Contributor Licence Agreement**. If your company already\n  has a signed CCLA on file, ask your local CLA manager to add you\n  (via your GitHub account name/email address) to your company's\n  \"approved\" list.\n\nThe downloadable PDF's on the EasyCLA page are provided for reference\nonly. To execute the signature, sign the form online through the\nrelevant links.\n\nThe OpenEXR CLAs are the standard forms used by Linux Foundation\nprojects and [recommended by the ASWF\nTAC](https://github.com/AcademySoftwareFoundation/tac/blob/main/process/contributing.md#contributor-license-agreement-cla).\n\n### Commit Sign-Off\n\nEvery commit must be signed off.  That is, every commit log message\nmust include a “`Signed-off-by`” line (generated, for example, with\n“`git commit --signoff`”), indicating that the committer wrote the\ncode and has the right to release it under the [BSD-3-Clause](LICENSE.md)\nlicense. See https://github.com/AcademySoftwareFoundation/tac/blob/main/process/contributing.md#contribution-sign-off for more information on this requirement.\n\n## Development Workflow\n\n### Git Basics\n\nWorking with OpenEXR requires understanding a significant amount of\nGit and GitHub based terminology. If you’re unfamiliar with these\ntools or their lingo, please look at the [GitHub\nGlossary](https://help.github.com/articles/github-glossary/) or browse\n[GitHub Help](https://help.github.com/).\n\nTo contribute, you need a GitHub account. This is needed in order to\npush changes to the upstream repository, via a pull request.\n\nYou will also need Git installed on your local development machine. If\nyou need setup assistance, please see the official [Git\nDocumentation](https://git-scm.com/doc).\n\n### Repository Structure and Commit Policy\n\nThe OpenEXR repository uses a simple branching and merging strategy.\n\nAll development work is done directly on the ``main`` branch. The ``main``\nbranch represents the bleeding-edge of the project and most\ncontributions should be done on top of it.\n\nAfter sufficient work is done on the ``main`` branch and the OpenEXR\nleadership determines that a release is due, we will bump the relevant\ninternal versioning and tag a commit with the corresponding version\nnumber, e.g. v2.0.1. Each minor version also has its own “Release\nBranch”, e.g. RB-1.1. This marks a branch of code dedicated to that\n``major.minor version``, which allows upstream bug fixes to be\ncherry-picked to a given version while still allowing the ``main``\nbranch to continue forward onto higher versions. This basic repository\nstructure keeps maintenance low, while remaining simple to understand.\n\nTo reiterate, the ``main`` branch represents the latest development\nversion, so beware that it may include untested features and is not\ngenerally stable enough for release.  To retrieve a stable version of\nthe source code, use one of the release branches.\n\n### The Git Workflow\n\nThis development workflow is sometimes referred to as\n[OneFlow](https://www.endoflineblog.com/oneflow-a-git-branching-model-and-workflow). It\nleads to a simple, clean, linear edit history in the repo.\n\nThe OpenEXR GitHub repo allows rebase merging and disallows merge\ncommits and squash merging. This ensures that the repo edit history\nremains linear, avoiding the \"bubbles\" characteristic of the\n[GitFlow](https://www.endoflineblog.com/gitflow-considered-harmful)\nworkflow.\n\n### Use the Fork, Luke.\n\nIn a typical workflow, you should **fork** the OpenEXR repository to\nyour account. This creates a copy of the repository under your user\nnamespace and serves as the “home base” for your development branches,\nfrom which you will submit **pull requests** to the upstream\nrepository to be merged.\n\nOnce your Git environment is operational, the next step is to locally\n**clone** your forked OpenEXR repository, and add a **remote**\npointing to the upstream OpenEXR repository. These topics are\ncovered in the GitHub documentation [Cloning a\nrepository](https://help.github.com/articles/cloning-a-repository/)\nand [Configuring a remote for a\nfork](https://help.github.com/articles/configuring-a-remote-for-a-fork/),\nbut again, if you need assistance feel free to reach out on the\nopenexr-dev@lists.aswf.io mail list.\n\n### Pull Requests\n\nContributions should be submitted as GitHub pull requests. See\n[Creating a pull request](https://help.github.com/articles/creating-a-pull-request/)\nif you're unfamiliar with this concept. \n\nThe development cycle for a code change should follow this protocol:\n\n1. Create a topic branch in your local repository, following the naming format\n\"feature/<your-feature>\" or \"bugfix/<your-fix>\".\n\n2. Make changes, compile, and test thoroughly. Code style should match existing\nstyle and conventions, and changes should be focused on the topic the pull\nrequest will be addressing. Make unrelated changes in a separate topic branch\nwith a separate pull request.\n\n3. Push commits to your fork.\n\n4. Create a GitHub pull request from your topic branch.\n\n5. Pull requests will be reviewed by project committers and contributors,\nwho may discuss, offer constructive feedback, request changes, or approve\nthe work.\n\n6. Upon receiving the required number of committer approvals (as\noutlined in [Required Approvals](#required-approvals)), a committer\nother than the PR contributor may merge changes into the ``main``\nbranch.\n\n### Code Review and Required Approvals\n\nModifications of the contents of the OpenEXR repository are made on a\ncollaborative basis. Anyone with a GitHub account may propose a\nmodification via pull request and it will be considered by the project\ncommitters.\n\nPull requests must meet a minimum number of committer approvals prior\nto being merged. Rather than having a hard rule for all PRs, the\nrequirement is based on the complexity and risk of the proposed\nchanges, factoring in the length of time the PR has been open to\ndiscussion. The following guidelines outline the project's established\napproval rules for merging:\n\n* Core design decisions, large new features, or anything that might be\nperceived as changing the overall direction of the project should be\ndiscussed at length in the mail list or TSC meetings before any PR is\nsubmitted, in order to solicit feedback, try to get as much consensus\nas possible, and alert all the stakeholders to be on the lookout for\nthe eventual PR when it appears.\n\n* Trivial changes that don't affect functionality (typos, tests, website)\ncan be approved by the committer without review, after waiting at\nleast 48 hours.\n\n* Big changes that can alter behavior, add major features, or present\na high degree of risk should be signed off by TWO committers, ideally\none of whom should be the \"owner\" for that section of the codebase (if\na specific owner has been designated). If the person submitting the PR\nis him/herself the \"owner\" of that section of the codebase, then only\none additional committer approval is sufficient. But in either case, a\n48 hour minimum is helpful to give everybody a chance to see it,\nunless it's a critical emergency fix (which would probably put it in\nthe previous \"small fix\" category, rather than a \"big feature\").\n\n* Escape valve: big changes can nonetheless be merged by a single\ncommitter if the PR has been open for over two weeks without any\nunaddressed objections from other committers. At some point, we have\nto assume that the people who know and care are monitoring the PRs and\nthat an extended period without objections is really assent.\n\nApproval must be from committers who are not authors of the change. If\none or more committers oppose a proposed change, then the change\ncannot be accepted unless:\n\n* Discussions and/or additional changes result in no committers\nobjecting to the change. Previously-objecting committers do not\nnecessarily have to sign-off on the change, but they should not be\nopposed to it.\n\n* The change is escalated to the TSC and the TSC votes to approve the\nchange.  This should only happen if disagreements between committers\ncannot be resolved through discussion.\n\nCommitters may opt to elevate significant or controversial\nmodifications to the TSC by assigning the `tsc-review` label to a pull\nrequest or issue. The TSC should serve as the final arbiter where\nrequired.\n\n### Test Policy\n\nAll functionality in the library must be covered by an automated\ntest. Each library has a companion ``Test`` project, e.g. ``OpenEXRTest``,\n``OpenEXRCoreTest``, ``OpenEXRUtilTest``, etc.  This test suite is collectively\nexpected to validate the behavior of very part of the library.\n\n* All new functionality should be accompanied by a test that validates\n  its behavior.\n\n* Any change to existing functionality should have tests added if they\n  don't already exist.\n\nThe test should should be run, via:\n\n    make test\n\nbefore submitting a pull request.\n\nIn addition, the ``OpenEXRFuzzTest`` project validates the library by\nfeeding it corrupted input data. This test is time-consuming (possible\nover 24 hours), so it will only be run occasionally, but it must\nsucceed before a release is made.\n\n## Coding Style\n\n#### Formatting\n\nThe coding style of the library source code is enforced via Clang format, with the configuration defined in [.clang-format](.clang-format).\n\nWhen modifying existing code, follow the surrounding formatting\nconventions so that new or modified code blends in with the current\ncode.\n\n* Indent with spaces, never tabs. Each indent level should be 4 spaces.\n\n* Function return types go on a separate line:\n\n        const float &\t\n        Header::pixelAspectRatio () const\n        {\n            ...\n        }\n\n* Use a space between function names and the following parentheses\n  (although you can eliminate the space for functions with no\n  arguments):\n\n        void\n        Header::insert (const string& name, const Attribute& attribute)\n        {\n            insert (name.c_str(), attribute);\n        }\n\n* Place curly braces on their own lines:\n\n        void\n        RgbaOutputFile::ToYca::padTmpBuf ()\n        {\n            for (int i = 0; i < N2; ++i)\n            {\n                _tmpBuf[i] = _tmpBuf[N2];\n                _tmpBuf[_width + N2 + i] = _tmpBuf[_width + N2 - 2];\n            }\n        }\n\n#### Naming Conventions\n\n* In general, classes and template type names should start with upper\n  case and capitalize new words: `class CustomerList;`\n\n* In general, local variables should use camelCase. Macros and\n  constants should use `ALL_CAPS`.\n\n* Member fields in a class should start with an underscore. No other\n  variables should begin with underscore.\n\n#### File conventions\n\nC++ implementation should be named `*.cpp`. Headers should be named `.h`.\n\nAll headers should contain:\n\n    #pragma once\n\n#### Type Conventions\n\nBecause OpenEXR must deal properly with large images, whose width\nand/or height approach the maximum allowable in 32-bit signed\nintegers, take special care that integer arithmetic doesn't overflow,\nand make it as clear as possible exactly what the code is doing,\nespecially in the edge cases.\n\nTo clarify the intention, prefer to cast between types using\n``static_cast<>()`` rather than the basic C-style ``()`` notation:\n\n    // good:\n    size_t x = static_cast <size_t> (y);\n\n    // bad:\n    x = (size_t) y;\n    x = size_t (y);\n\nPrefer to use ``std::numeric_limits<>`` instead of preprocessor\ndefine's such as ``INT_MAX``:\n\n    // good:\n    if (x > std::numeric_limits<int>::max())\n        std::cout << \"That's too freakin' high.\\n\";\n\n    // bad:\n    if (x > INT_MAX)\n\n#### Copyright Notices\n\nAll new source files should begin with a copyright and license stating:\n\n    //\n    // SPDX-License-Identifier: BSD-3-Clause\n    // Copyright (c) Contributors to the OpenEXR Project. \n    //\n    \n#### Third-party libraries\n\nPrefer C++11 `std` over boost where possible.  Use boost classes you\nalready see in the code base, but check with the project leadership\nbefore adding new boost usage.\n\n#### Comments and Doxygen\n\nComment philosophy: try to be clear, try to help teach the reader\nwhat's going on in your code.\n\nPrefer C++ comments (starting line with `//`) rather than C comments\n(`/* ... */`).\n\nFor public APIs, use Doxygen-style comments (start with `///`), such as:\n\n    /// Explanation of a class.  Note THREE slashes!\n    /// Also, you need at least two lines like this.  If you don't have enough\n    /// for two lines, make one line blank like this:\n    ///\n    class myclass {\n        ....\n        float foo;  ///< Doxygen comments on same line look like this\n    }\n\n## Versioning Policy\n\nOpenEXR uses [semantic versioning](https://semver.org), which labels\neach version with three numbers: ``major.minor.patch``, where:\n\n* ``major`` - indicates incompatible API changes\n* ``minor`` - indicates functionality added in a backwards-compatible manner\n* ``patch`` - indicates backwards-compatible bug fixes \n\n## Contributing to the Website\n\nThe https://openexr.com website is generated via\n[Sphinx](https://www.sphinx-doc.org) with the\n[Breathe](https://breathe.readthedocs.io) extension, using the\n[sphinx-press-theme](https://pypi.org/project/sphinx-press-theme), and\nis hosted by\n[readthedocs](https://readthedocs.org/projects/openexr). The website\nsource is in [restructured\ntext](https://www.sphinx-doc.org/en/master/usage/restructuredtext/basics.html)\nin the ``website`` directory.\n\nTo build the website locally from the source ``.rst`` files, set the\nCMake option ``BUILD_WEBSITE=ON``. This adds the ``website`` CMake\ntarget. Generation is off by default.\n\nBuilding the website requires that ``sphinx``, ``breathe``, and\n``doxygen`` are installed. It further requires the [sphinx-press-theme]\n(https://pypi.org/project/sphinx-press-theme). Complete dependencies\nare described in the [requirements.txt](website/requirements.txtg)\nfile. \n\nOn Debian/Ubuntu Linux:\n\n.. code-block::\n\n    % apt-get install doxygen python3-sphinx\n    % pip3 install breathe\n    % pip3 install sphinx_press_theme\n   \n    % mkdir _build\n    % cd _build\n    % cmake .. -DBUILD_WEBSITE=ON\n    % cmake --build . --target website \n\n### Testing a Website Build\n\nWhen you have configured cmake with ``BUILD_WEBSITE=ON`` and done a\nbuild, you should find a file ``website/sphinx/index.html`` in the\nbuild directory which is the website source. Load this file in a\nbrowser to preview the resulting website, that is, load\n``file://<build-directory>/website/sphinx/index.html`` into your web\nbrowser.\n\nOnce you submit a PR, a check labled ``docs/readthedocs.org:openexr``\nwill validate the build. Click on the ``Details`` link to\npreview. Also, a link to this preview will be added automatically to\nthe PR description.\n### Test Images\n\nTo contribute a new test image, commit it to the\n[openexr-images](https://github.com/AcademySoftwareFoundation/openexr-images)\nrepo, along with an associated ``.jpg`` file for display on the\nwebsite.\n\nThe [website/scripts/test_images.py](website/scripts/test_images.py)\nutility processes images from\n[openexr-images](https://github.com/AcademySoftwareFoundation/openexr-images)\nto produce `.rst` files for input to Sphinx. It runs ``exrheader`` on\nthe ``.exr`` to generate the image description. It also processes\n``README`` files in the image repo for additional website content,\nuseful for describing a collection of images. Once the new image is in\nthe ``openexr-images`` repo, run ``website/scripts/test_images.py``,\nthen commit the new/modified ``.rst`` files to git and submit a PR.\n\n## Creating a Patch Release\n\nMaking a patch release typically involves merging changes from the\nmain branch into the release branch, since all development generally\ntakes place on the main branch. The usual workflow is to group these\nchanges together and merge them all just prior to a release, rather\nthan merging one-by-one as the changes go into main, although merging\nalong the way is acceptable as well. For OpenEXR and Imath, a patch\nrelease typically involves under a dozen commits, so it's not a huge\namount of work to organize them all at once.\n\nA patch release *must* be ABI-compatible with preceding minor releases\nand should be validated with an ABI-checker tool such as\n[``abipkgdiff``](https://manpages.ubuntu.com/manpages/lunar/en/man1/abipkgdiff.1.html).\n\nThese instructions are for project administrators who have \"push\"\naccess on the GitHub repo.\n\nThe preferred workflow is:\n\n1. Make a PR that merges appropriate changes from the main branch to\n   the release branch:\n\n   a. In a forked clone, create a branch to hold the patch commits,\n      e.g. ``v3.1.9-fixes``.\n\n   b. Cherry-pick the appropriate commits from ``main``, resolving any\n      merge conflicts.\n\n   c. Increment ``OPENEXR_VERSION_PATCH`` in\n      [src/lib/OpenEXRCore/openexr_version.h](src/lib/OpenEXRCore/openexr_version.h)\n   \n   d. Update the ``IMATH_TAG`` setting in\n      [cmake/OpenEXRSetup.cmake](cmake/OpenEXRSetup.cmake) to\n      correspond to the proper Imath release.\n   \n   e. Add release notes to [CHANGES.md](CHANGES.md):\n\n      - Generate a list of links to merged pull requests.\n\n        Use ``git log`` to identify the merged commits, and for each\n        commit, and add a link in the notes to the corresponding PR\n        that merged it to ``main``. Citing PR's in the release notes\n        is preferable to citing raw commits because the PR's often\n        have helpful information and discussion missing from the\n        commit descriptions, and the commit history is readily\n        accessible via ``git log`` anyway.\n\n        The typical OpenEXR project workflow uses \"squash and merge\"\n        to merge PR's into ``main``, so the changes involved in each\n        PR end up on ``main`` as a single commit. This is preferable\n        because a raw PR often includes numerous commits that address\n        comments and feedback or fix typos or mistakes, intermediate\n        steps not helpful to the preserved history of the main\n        development thread. Note that GitHub's \"squash and merge\"\n        helpfully appends the PR number to the commit subject line.\n\n        Note that when this PR is merged to the release branch, it\n        should go in via \"rebase and merge\" that the release branch\n        retains the granular changes, described below.\n\n      - Generate a list of OSS-Fuzz issues addressed.\n\n        These are security concerns, so they deserve special\n        attention. Provide a link in the notes to the issue at\n        https://bugs.chromium.org/p/oss-fuzz, including the issue id\n        number and description.\n\n      - If there are any public CVE's, mention them explicitly with a\n        link to the CVE registry item.\n      \n      - Provide an executive summary of the patch changes, in a few\n        sentences as well as bullet points if appropriate.\n\n      - Choose a proposed release date at least several days in\n        advance.\n      \n   f. If there are any public CVE's, reference them in\n      [SECURITY.md](SECURITY.md).\n      \n   g. Submit the PR for others to review. The PR should go *to the\n      release branch, not ``main``*, obviously.\n\n   h. After others have had a chance to sanity-check the changes,\n      merge the PR *with \"rebase and merge\"*.  Unlike with the usual\n      PR's merged to main, it is essential to retain the individual\n      commits on the release branch. That way, the release branch\n      commit history retains the details of the changes.\n\n   i. If further fixes come in that need to go into the release, push\n      them to the PR branch. It's not absolutely essential that all\n      changes to the release branch go in via a PR. The PR is simply a\n      convient forum for publicly discussing and reviewing the\n      composition of the release.\n   \n2. Tag the release with a ``-rc`` \"release candidate\" tag,\n   e.g. ``v3.1.9-rc``.\n\n3. Validate ABI compatibility. Build at the release candidate tag and\n   run\n   [abipkgdiff](https://manpages.ubuntu.com/manpages/lunar/en/man1/abipkgdiff.1.html)\n   against a build of the previous patch release to confirm that no\n   ABI changes have leaked in. Additions to the ABI are acceptable for\n   a patch release, but there should be no symbol changes and no\n   symbols removed. If there are, back up and fix them before proceeding.\n\n4. Send mail to ``openexr-dev@lists.aswf.io`` announcing the staging\n   of the release with link to the release candidate tag. Include the\n   release notes from [CHANGES.md](CHANGES.md) for review.\n\n5. Draft the release on the GitHub\n   [Releases](https://github.com/AcademySoftwareFoundation/openexr/releases)\n   page.  Include the summary from the notes in\n   [CHANGES.md](CHANGES.md), but don't include the list of PR's.\n\n   Create the release from the latest ``--rc`` tag, and give it a name\n   that begins with ``v``, i.e. ``v3.1.9``.\n   \n   Save the release as a \"draft\".\n\n6. Wait at least 48 hours, to give the community time to discover and\n   report any obvious problems. Avoid the temptation to rush changes\n   into a release and publish it immediately, as that is uncomfortably\n   error prone.\n\n   If additional fixes need to go in before release:\n\n   a. Merge commits to the release branch. Push them directly, no need\n      for a pull request.\n\n   b. Update the release notes in a separate commit.\n\n   c. Re-tag with a incremented \"release candidate\" number,\n      e.g. ``v3.1.9-rc2``.  \n\n   d. Send an email update to ``openexr-dev@lists.aswf.io`` notifying\n      the community of the addition and the new tag.\n\n7. Create a signed release tag\n\n   a. Make sure you have a [GPG\n      key](https://docs.github.com/en/authentication/managing-commit-signature-verification/generating-a-new-gpg-key)\n      and it is\n      [registered](https://docs.github.com/en/authentication/managing-commit-signature-verification/telling-git-about-your-signing-key)\n      with your GitHub account and git config.\n\n   b. Create a signed tag with the release name via `git tag -s v3.1.9`.\n   \n   c. Push the tag via `git push --tags`\n   \n8. Publish the release\n\n   a. Click the \"Publish release\" button on the GitHub release draft\n\n   b. Send an email to ``openexr-dev@lists.aswf.io`` officially\n      annoucing the release.\n   \n9. Update the ``release`` branch, which should always point to the\n   most recent patch of the most recent minor release, i.e. the most\n   preferred release.\n\n   From a clone of the main repo:\n\n       % git checkout release\n       % git merge RB-3.1\n       % git push\n         \n10. Submit a PR that adds the release notes to [CHANGES.md](CHANGES.md)\n    on the main branch. Cherry-pick the release notes commit from\n    the release branch.\n\n    - If any changes have gone into [SECURITY.md](SECURITY), cherry-pick\n      the associated commit as well.\n\n    - Also include in this PR edits to [``docs/news.rst``](docs/news.rst)\n      that add an announcment of the release.\n\n11. After review/merge of the updates to ``docs/news.rst``, build the\n    website at https://readthedocs.org/projects/openexr.\n\n12. If the release has resolved any OSS-Fuzz issues, update the\n    associated pages at https://bugs.chromium.org/p/oss-fuzz with a\n    reference to the release.\n\n13. If the release has resolved any public CVE's, request an update\n    from the registry service providing the release and a link to the\n    release notes.\n\n## Creating a Major/Minor Release\n\nA major/minor release is created from the main branch, assuming there\nare no changes on ``main`` that should *not* go into the release. We\ndon't generally allow experimental changes onto ``main``. Anything\naccepted onto ``main`` should be intended for the next release.\n\nThe overall workflow is similar to a patch release, as described\nabove, but it's simpler because there is no cherry-picking and merging\nof commits. The major/minor release is simply a snapshot of ``main``.\n\nTo create a new release from the ``main`` branch:\n\n1. Confirm that the ``OPENEXR_VERSION_MAJOR``,\n   ``OPENEXR_VERSION_MINOR``, and ``OPENEXR_VERSION_PATCH`` value in\n   [src/lib/OpenEXRCore/openexr_version.h](src/lib/OpenEXRCore/openexr_version.h)\n   are correct. The OpenEXR project policy is that the values on the\n   main branch, which is the bleeding edge of development, correspond\n   to the next minor release, with the patch set to 0.\n\n2. Update the release notes in [CHANGES.md](CHANGES.md):\n\n   - Write a high-level summary of the features and improvements.\n\n   - Include the log of all PR's that have *not* been merged into the\n     previous minor release.\n\n   - Mention any OSS-Fuzz issues. Provide a link in the notes to the issue at\n     https://bugs.chromium.org/p/oss-fuzz, including the issue id\n     number and description.\n\n   - If there are any public CVE's, mention them explicitly with a\n     link to the CVE registry item.\n   \n   - Submit this change as a separate PR.\n\n3. Add a mention of the release to [``docs/news.rst``](docs/news.rst)\n\n   - Submit this change as a separate PR.\n\n4. Increment the ``OPENEXR_LIB_SOVERSION`` setting in [CMakeLists.txt](CMakeLists.txt).\n   \n   - The SO version increases whenever, and only when, the ABI changes\n     in non-backwards-compatible ways. Consistent with the semantic\n     versioning policy, this usually happens at major and minor\n     releases, but never on a patch release.\n\n   - Submit this change as a separate PR for review.\n\n5. Once the above PR's are merged, create the release branch with the\n   ``RB`` prefix, e.g. ``RB-3.2``.\n\n6. Update the ``IMATH_TAG`` setting in\n   [cmake/OpenEXRSetup.cmake](cmake/OpenEXRSetup.cmake) to correspond\n   to the proper Imath release.\n\n7. Tag the release with a ``-rc`` \"release candidate\" tag,\n   e.g. ``v3.2.0-rc``.\n\n8. Send mail to ``openexr-dev@lists.aswf.io`` announcing the staging\n   of the release with link to the release candidate tag. Include the\n   release notes from [CHANGES.md](CHANGES.md) for review.\n\n9. If additonal fixes need to go in before release:\n\n   a. Merge commits to the release branch. Push them directly, no need\n      for a pull request.\n\n   b. Update the release notes in a separate commit.\n\n   c. Re-tag with a incremented \"release candidate\" number,\n      e.g. ``v3.2.0-rc2``.  \n\n   d. Send a email update to ``openexr-dev@lists.aswf.io`` notifying\n      the community of the addition.\n\n10. Draft the release on the GitHub\n    [Releases](https://github.com/AcademySoftwareFoundation/openexr/releases)\n    page.  Include the summary from the notes in\n    [CHANGES.md](CHANGES.md), but don't include the list of PR's.\n\n    - Create the release from the latest ``--rc`` tag, and give it a name\n      that begins with ``v`` and ends in ``0``, e.g. ``v3.2.0``.\n   \n    - Save the release as a \"draft\".\n\n11. Wait at least 48 hours after the email announcement.\n\n12. Publish the release\n\n    a. Click the \"Publish release\" button on the GitHub release draft\n\n    b. Send an email to ``openexr-dev@lists.aswf.io`` officially\n       annoucing the release.\n   \n13. Update the ``release`` branch, which should always point to the\n    most recent release.\n\n    From a clone of the main repo:\n\n        % git checkout release\n        % git merge RB-3.1\n        % git push\n         \n14. Increment ``OPENEXR_VERSION_MINOR`` in\n    [src/lib/OpenEXRCore/openexr_version.h](src/lib/OpenEXRCore/openexr_version.h) on the main branch\n\n    - Submit a PR for this. This leaves the release version on the\n      main branch pointing to the next minor release, as described in\n      Step #1.\n\n15. Build the website at https://readthedocs.org/projects/openexr.\n\n16. If the release has resolved any OSS-Fuzz issues, update the\n    associated pages at https://bugs.chromium.org/p/oss-fuzz with a\n    reference to the release.\n\n17. If the release has resolved any public CVE's, request an update\n    from the registry service providing the release and a link to the\n    release notes.\n"
        },
        {
          "name": "CONTRIBUTORS.md",
          "type": "blob",
          "size": 2.0419921875,
          "content": "<!-- SPDX-License-Identifier: BSD-3-Clause -->\n<!-- Copyright (c) Contributors to the OpenEXR Project -->\n\nThis is a list of contributors to the OpenEXR project, sorted\nalphabetically by first name.\n\nIf you know of missing, please email info@openexr.com or submit a PR.\n  \n* Aaron Demolder\n* Abe Fettig\n* Aloys Baillet\n* Andre Mazzone\n* Andrew Kunz\n* Anton Dukhovnikov\n* Antonio Rojas\n* Aras Pranckevičius\n* Arkady Shapkin\n* Arkell Rasiah\n* Axel Waggershauser\n* Balázs Oroszi\n* Barnaby Robson\n* Ben Grimes\n* Brendan Bolles\n* Cary Phillips\n* Chris Leu\n* Christina Tempelaar-Lietz\n* Christopher Horvath\n* Christopher Kulla\n* Christoph Gohlke\n* Cristian Martínez\n* Dan Horák\n* Daniel Kaneider\n* Darby Johnston\n* Dave Sawyer\n* David Korczynski\n* Diogo Teles Sant'Anna\n* Dirk Lemstra\n* Drew Hess\n* Ed Hanway\n* Edward Kmett\n* Eric Sommerlade\n* Eric Wimmer\n* E Sommerlade\n* Florian Kainz\n* Grant Kim\n* Gregorio Litenstein\n* Gyula Gubacsi\n* Halfdan Ingvarsson\n* Harry Mallon\n* Huibean Luo\n* Ibraheem Alhashim\n* Jack Kingsman\n* Jamie Kenyon\n* Jan Tojnar\n* Jean-Francois Panisset\n* Jens Lindgren\n* Ji Hun Yu\n* Johannes Vollmer\n* John Loy\n* John Mertic\n* Jonathan Stone\n* Jose Luis Cercos-Pita\n* Joseph Goldstone\n* Juha Reunanen\n* Julian Amann\n* Juri Abramov\n* Karl Hendrikse\n* Karl Rasche\n* Kevin Wheatley\n* Kimball Thurston\n* Larry Gritz\n* Laurens Voerman\n* L. E. Segovia\n* Liam Fernandez\n* Lucy Wilkes\n* Mark Reid\n* Mark Sisson\n* Martin Aumüller\n* Martin Husemann\n* Matthäus G. Chajdas\n* Matthias C. M. Troffaes\n* Matt Pharr\n* Md Sadman Chowdhury\n* Michael Thomas\n* Nicholas Yue\n* Nick Porcino\n* Nick Rasmussen\n* Nicolas Chauvet\n* Niklas Hambüchen\n* OgreTransporter\n* Owen Thompson\n* Paul Schneider\n* Peter Hillman\n* Peter Steneteg\n* Peter Urbanec\n* Phil Barrett\n* Piotr Stanczyk\n* Ralph Potter\n* Rémi Achard\n* Reto Kromer\n* Richard Goedeken\n* Sergey Fedorov\n* Shawn Walker-Salas\n* Simon Boorer\n* Simon Otter\n* Srinath Ravichandran\n* Thanh Ha\n* Thomas Debesse\n* Thorsten Kaufmann\n* Timothy Lyanguzov\n* Wenzel Jakob\n* Wojciech Jarosz\n* Xo Wang\n* Yaakov Selkowitz\n* Yining Karl Li\n* Yujie Shu\n"
        },
        {
          "name": "Contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "GOVERNANCE.md",
          "type": "blob",
          "size": 5.4873046875,
          "content": "<!-- SPDX-License-Identifier: BSD-3-Clause -->\n<!-- Copyright (c) Contributors to the OpenEXR Project -->\n\n# OpenEXR Project Roles and Responsibilities\n\nOpenEXR is a project of the Academy Software Foundation and relies on\nthe ASWF governance policies, supported by the Linux Foundation.\n\nThere are three primary project roles: a \"contributor\" submits code to the\nproject; a \"committer\" approves code to be included into the project; and\nthe \"Technical Steering Committee\" (TSC) provides overall high-level\nproject guidance.\n\n* [Contributors](#Contributors)\n* [Committers](#Committers)\n* [Technical Steering Committee](#Technical-Steering-Committee)\n\n## Contributors\n\nThe OpenEXR project grows and thrives from assistance from\ncontributors.  A contributor is anyone in the community who submits\ncode, bug fixes, documentation, or other technical artifacts to the\nproject. However, such contributions must be approved by a project\ncommitter before they become a part of the project.\n\nAnyone can be a contributor. You need no formal approval from the\nproject, beyond the legal forms.\n\n### How to Become a Contributor\n\n* Review the coding standards to ensure your contribution is in line\n  with the project's coding and styling guidelines.\n\n* Sign the Individual CLA, or have your organization sign the Corporate CLA.\n\n* Submit your code as a PR with the appropriate DCO sign-off.\n\n## Committers\n\nProject committers have merge access on the OpenEXR GitHub repositories\nand are responsible for approving submissions by contributors.\n\n### Committer Responsibilities\n\nTypical activities of a committer include:\n\n* Helping users and novice contributors.\n\n* Ensuring a response to questions posted to the\n  openexr-dev@lists.aswf.io mailing list.\n\n* Contributing code and documentation changes that improve the\n  project.\n\n* Reviewing and commenting on issues and pull requests.\n\n* Ensuring that changes and new code meet acceptable standards and are\n  in the long-term interest of the project.\n\n* Participating in working groups.\n\n* Merging pull requests.\n\n### How to Become a Committer\n\nAny existing committer can nominate an individual making significant\nand valuable contributions to the OpenEXR project to become a new\ncommitter.  New committers are approved by vote of the TSC.\n\nIf you are interested in becoming a committer, contact the TSC at\ninfo@openexr.com.\n\n## Technical Steering Committee\n\nThe Technical Steering Committee (TSC) oversees the overall technical\ndirection of OpenEXR, as defined in the project\n[charter](ASWF/charter/OpenEXR-Technical-Charter.md).  This\ncharter defines the TSC member terms and succession policies.\n\nThe responsibilities of the TSC include:\n\n* Coordinating technical direction of the project.\n\n* Project governance and contribution policy.\n\n* GitHub repository administration.\n\n* Maintaining the list of additional committers.\n\n* Appointing representatives to work with other open source or open\n  standards communities.\n\n* Discussions, seeking consensus, and where necessary, voting on\n  technical matters relating to the code base that affect multiple\n  projects.\n\n* Coordinating any marketing, events, or communications regarding the\n  project.\n\nThe TSC elects a Chair person, who acts as the project manager,\norganizing meetings and providing oversight to project\nadministration. The Chair is elected by the TSC.  The Chair also\nserves as the OpenEXR representative on the Academy Software\nFoundation (ASWF) Technical Advisory Council (TAC). The chair\nrepresents the project at ASWF TAC meetings.\n\n### Current TSC Members\n\n* Cary Phillips (chair) - Industrial Light & Magic\n* Rod Bogart - Epic Games\n* Larry Gritz - Sony Pictures ImageWorks\n* Peter Hillman - Weta Digital, Ltd.\n* Kimball Thurston - Weta Digital, Ltd.\n* Nick Porcino - Pixar Animation Studios\n* Christina Tempelaar-Lietz - Industrial Light & Magic\n* Joseph Goldstone - Lilliputian Pictures LLC\n* John Mertic - The Linux Foundation\n\n### TSC Meetings\n\nAll meetings of the TSC are open to participation by any member of the\nOpenEXR community. Meeting times are listed in the [ASWF technical\ncommunity calendar](https://lists.aswf.io/g/tac/calendar), currently\neach Thursday at 1:30pm Pacific Time via Zoom video conference.  The\nTSC Chair moderates the meeting, or appoints another TSC member to\nmoderate in his or her absence.\n\nItems are added to the TSC agenda which are considered contentious or\nare modifications of governance, contribution policy, TSC membership,\nor release process, in addition to topics involving the high-level\ntechnical direction of the project.\n\nThe intention of the agenda is not to approve or review all\npatches. That should happen continuously on GitHub and be handled by\nthe larger group of committers.\n\nAny community member or contributor can ask that something be reviewed\nby the TSC at the meeting by logging a GitHub issue. Any committer,\nTSC member, or the meeting chair can bring the issue to the TSC's\nattention by applying the `TSC` label.\n\nPrior to each TSC meeting, the meeting chair will share the agenda with members\nof the TSC. TSC members can also add items to the agenda at the beginning of\neach meeting. The meeting chair and the TSC cannot veto or remove items.\n\nThe TSC may invite additional persons to participate in a non-voting capacity.\n\nThe meeting chair is responsible for archiving the minutes, stored at \nhttps://wiki.aswf.io/display/OEXR/TSC+Meetings.\n\nDue to the challenges of scheduling a global meeting with participants\nin several time zones, the TSC will seek to resolve as many agenda\nitems as possible outside of meetings on the public mailing list.\n\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.4658203125,
          "content": "Copyright (c) Contributors to the OpenEXR Project. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "MODULE.bazel",
          "type": "blob",
          "size": 0.8876953125,
          "content": "# SPDX-License-Identifier: BSD-3-Clause\n# Copyright Contributors to the OpenEXR Project.\n\nmodule(\n    name = \"openexr\",\n    compatibility_level = 1,\n)\n\nbazel_dep(name = \"bazel_skylib\", version = \"1.7.1\")\nbazel_dep(name = \"imath\")\nbazel_dep(name = \"libdeflate\")\nbazel_dep(name = \"platforms\", version = \"0.0.10\")\n\narchive_override(\n    module_name = \"imath\",\n    patches = [\n        \"//bazel:imath_add_build_file.patch\",\n        \"//bazel:imath_module_dot_bazel.patch\",\n    ],\n    strip_prefix = \"Imath-main\",\n    urls = [\"https://github.com/AcademySoftwareFoundation/Imath/archive/refs/heads/main.zip\"],\n)\n\narchive_override(\n    module_name = \"libdeflate\",\n    patches = [\n        \"//bazel:libdeflate_add_build_file.patch\",\n        \"//bazel:libdeflate_module_dot_bazel.patch\",\n    ],\n    strip_prefix = \"libdeflate-master\",\n    urls = [\"https://github.com/ebiggers/libdeflate/archive/refs/heads/master.zip\"],\n)\n"
        },
        {
          "name": "PATENTS",
          "type": "blob",
          "size": 13.3994140625,
          "content": "DreamWorks permits the DreamWorks Lossy Compression files to be used, at the\nlicensee's option, under either:\n\n(1) the BSD-3-Clause license in /LICENSE.md, together with the Additional IP\n    Rights Grant (Patents) specified below; or\n\n(2) the Apache-2.0 license, a copy of which appears below.\n\nThe files to which this choice applies are:\n\n* /src/lib/OpenEXR/ImfDwaCompressor.h\n* /src/lib/OpenEXR/ImfDwaCompressor.cpp\n* /src/lib/OpenEXR/ImfDwaCompressorSimd.h\n* /src/test/OpenEXRTest/compareDwa.h\n* /src/test/OpenEXRTest/compareDwa.cpp\n* /src/test/OpenEXRTest/testDwaCompressorSimd.h\n* /src/test/OpenEXRTest/testDwaCompressorSimd.cpp\n\n= = = = =\n\nAdditional IP Rights Grant (Patents) \"DreamWorks Lossy Compression\" means the\ncopyrightable works distributed by DreamWorks Animation as part of the OpenEXR\nProject. Within the OpenEXR project, DreamWorks Animation hereby grants to you\na perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable \n(except as stated in this section) patent license to make, have made, use, \nimport, sell products which incorporate this IP as part of the OpenEXR \nstandard, transfer, and otherwise run, modify and propagate the contents of \nthis implementation of DreamWorks Lossy Compression within the OpenEXR standard,\nwhere such license applies only to those patent claims, both currently owned by \nDreamWorks Animation and acquired in the future, licensable by DreamWorks\nAnimation that are necessarily infringed by this implementation of DreamWorks \nLossy Compression. This grant does not include use of DreamWorks Lossy \nCompression outside of the OpenEXR standard. This grant does not include claims\nthat would be infringed only as a consequence of further modification of this \nimplementation. If you or your agent or exclusive licensee institute or order \nor agree to the institution of patent litigation against any entity (including\na cross-claim or counterclaim in a lawsuit) alleging that this implementation \nof DreamWorks Lossy Compression or any code incorporated within this \nimplementation of DreamWorks Lossy Compression constitutes direct or \ncontributory patent infringement, or inducement of patent infringement, then \nany patent rights granted to you under this License for this implementation \nof DreamWorks Lossy Compression shall terminate as of the date such litigation\nis filed.\n\n= = = = =\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2014 DreamWorks Animation L.L.C.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.18359375,
          "content": "<!-- SPDX-License-Identifier: BSD-3-Clause -->\n<!-- Copyright (c) Contributors to the OpenEXR Project -->\n\n[![License](https://img.shields.io/github/license/AcademySoftwareFoundation/openexr)](LICENSE.md)\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/2799/badge)](https://bestpractices.coreinfrastructure.org/projects/2799)\n[![OpenSSF Scorecard](https://api.securityscorecards.dev/projects/github.com/AcademySoftwareFoundation/openexr/badge)](https://securityscorecards.dev/viewer/?uri=github.com/AcademySoftwareFoundation/openexr)\n[![Build Status](https://github.com/AcademySoftwareFoundation/openexr/workflows/CI/badge.svg)](https://github.com/AcademySoftwareFoundation/openexr/actions?query=workflow%3ACI)\n[![Analysis Status](https://github.com/AcademySoftwareFoundation/openexr/workflows/Analysis/badge.svg)](https://github.com/AcademySoftwareFoundation/openexr/actions?query=workflow%3AAnalysis)\n[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=AcademySoftwareFoundation_openexr&metric=alert_status)](https://sonarcloud.io/dashboard?id=AcademySoftwareFoundation_openexr)\n\n# OpenEXR\n\n<img align=\"right\" src=\"docs/technical/images/windowExample1.png\">\n\nOpenEXR provides the specification and reference implementation of the\nEXR file format, the professional-grade image storage format of the\nmotion picture industry.\n\nThe purpose of EXR format is to accurately and efficiently represent\nhigh-dynamic-range scene-linear image data and associated metadata,\nwith strong support for multi-part, multi-channel use cases.\n\nOpenEXR is widely used in host application software where accuracy is\ncritical, such as photorealistic rendering, texture access, image\ncompositing, deep compositing, and DI.\n\n## OpenEXR Project Mission\n\nThe goal of the OpenEXR project is to keep the EXR format reliable and\nmodern and to maintain its place as the preferred image format for\nentertainment content creation. \n\nMajor revisions are infrequent, and new features will be carefully\nweighed against increased complexity.  The principal priorities of the\nproject are:\n\n* Robustness, reliability, security\n* Backwards compatibility, data longevity\n* Performance - read/write/compression/decompression time\n* Simplicity, ease of use, maintainability\n* Wide adoption, multi-platform support - Linux, Windows, macOS, and others\n\nOpenEXR is intended solely for 2D data. It is not appropriate for\nstorage of volumetric data, cached or lit 3D scenes, or more complex\n3D data such as light fields.\n\nThe goals of the Imath project are simplicity, ease of use,\ncorrectness and verifiability, and breadth of adoption. Imath is not\nintended to be a comprehensive linear algebra or numerical analysis\npackage.\n\n## Project Governance\n\nOpenEXR is a project of the [Academy Software\nFoundation](https://www.aswf.io). See the project's [governance\npolicies](GOVERNANCE.md), [contribution guidelines](CONTRIBUTING.md), and [code of conduct](CODE_OF_CONDUCT)\nfor more information.\n\n# Quick Start\n\nSee the [technical documentation](https://openexr.readthedocs.io) for\ncomplete details, but to get started, the \"Hello, world\" [`exrwriter.cpp`](https://raw.githubusercontent.com/AcademySoftwareFoundation/openexr/main/website/src/exrwriter/exrwriter.cpp) writer program is:\n\n    #include <ImfRgbaFile.h>\n    #include <ImfArray.h>\n    #include <iostream>\n    \n    int\n    main()\n    {\n        try {\n            int width =  10;\n            int height = 10;\n            \n            Imf::Array2D<Imf::Rgba> pixels(width, height);\n            for (int y=0; y<height; y++)\n                for (int x=0; x<width; x++)\n                    pixels[y][x] = Imf::Rgba(0, x / (width-1.0f), y / (height-1.0f));\n        \n            Imf::RgbaOutputFile file (\"hello.exr\", width, height, Imf::WRITE_RGBA);\n            file.setFrameBuffer (&pixels[0][0], 1, width);\n            file.writePixels (height);\n        } catch (const std::exception &e) {\n            std::cerr << \"Unable to read image file hello.exr:\" << e.what() << std::endl;\n            return 1;\n        }\n        return 0;\n    }\n\nThe [`CMakeLists.txt`](https://raw.githubusercontent.com/AcademySoftwareFoundation/openexr/main/website/src/exrwriter/CMakeLists.txt) to build:\n\n    cmake_minimum_required(VERSION 3.12)\n    project(exrwriter)\n    find_package(OpenEXR REQUIRED)\n    \n    add_executable(${PROJECT_NAME} exrwriter.cpp)\n    target_link_libraries(${PROJECT_NAME} OpenEXR::OpenEXR)\n\nTo build:\n\n    $ cmake -S . -B _build -DCMAKE_PREFIX_PATH=<path to OpenEXR libraries/includes>\n    $ cmake --build _build\n\nFor more details, see [The OpenEXR\nAPI](https://openexr.readthedocs.io/en/latest/API.html#the-openexr-api).\n\n# Community\n\n* **Ask a question:**\n\n  - Email: openexr-dev@lists.aswf.io\n\n  - Slack: [academysoftwarefdn#openexr](https://academysoftwarefdn.slack.com/archives/CMLRW4N73)\n\n* **Attend a meeting:**\n\n  - Technical Steering Committee meetings are open to the\n    public, fortnightly on Thursdays, 1:30pm Pacific Time.\n\n  - Calendar: https://zoom-lfx.platform.linuxfoundation.org/meetings/openexr\n\n  - Meeting Notes: https://wiki.aswf.io/display/OEXR/TSC+Meetings\n\n* **Report a bug:**\n\n  - Submit an Issue: https://github.com/AcademySoftwareFoundation/openexr/issues\n\n* **Report a security vulnerability:**\n\n  - Email to security@openexr.com\n\n* **Contribute a Fix, Feature, or Improvement:**\n\n  - Read the [Contribution Guidelines](CONTRIBUTING.md) and [Code of Conduct](CODE_OF_CONDUCT.md)\n\n  - Sign the [Contributor License\n    Agreement](https://contributor.easycla.lfx.linuxfoundation.org/#/cla/project/2e8710cb-e379-4116-a9ba-964f83618cc5/user/564e571e-12d7-4857-abd4-898939accdd7)\n  \n  - Submit a Pull Request: https://github.com/AcademySoftwareFoundation/openexr/pulls\n\n# Resources\n\n- Website: http://www.openexr.com\n- Technical documentation: https://openexr.readthedocs.io\n- Porting help: [OpenEXR/Imath Version 2.x to 3.x Porting Guide](https://openexr.readthedocs.io/en/latest/PortingGuide.html)\n- Reference images: https://github.com/AcademySoftwareFoundation/openexr-images\n- Security policy: [SECURITY.md](SECURITY.md)\n- Release notes: [CHANGES.md](CHANGES.md)\n- Contributors: [CONTRIBUTORS.md](CONTRIBUTORS.md)  \n\n# License\n\nOpenEXR is licensed under the [BSD-3-Clause license](LICENSE.md).\n\n\n---\n\n![aswf](/ASWF/images/aswf.png)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 9.84765625,
          "content": "<!-- SPDX-License-Identifier: BSD-3-Clause -->\n<!-- Copyright (c) Contributors to the OpenEXR Project -->\n\n# Security Policy\n\n## Reporting a Vulnerability\n\nIf you think you've found a potential vulnerability in OpenEXR, please\nreport it by filing a GitHub [security\nadvisory](https://github.com/AcademySoftwareFoundation/openexr/security/advisories/new). Alternatively,\nemail security@openexr.com and provide your contact info for further\nprivate/secure discussion.  If your email does not receive a prompt\nacknowledgement, your address may be blocked.\n\nOur policy is to acknowledge the receipt of vulnerability reports\nwithin 48 hours. Our policy is to address critical security vulnerabilities\nrapidly and post patches within 14 days if possible.\n\n## Known Vulnerabilities\n\nThese vulnerabilities are present in the given versions:\n\n* [CVE-2023-5841](https://nvd.nist.gov/vuln/detail/CVE-2023-5841) 3.1.0, 3.1.1, 3.1.2, 3.1.3 3.1.4 3.1.5 3.1.6 3.1.7 3.1.8 3.1.9 3.1.10 3.1.11 3.2.0 3.2.1\n* [CVE-2021-45942](https://nvd.nist.gov/vuln/detail/CVE-2021-45942) 3.1.0, 3.1.1, 3.1.2, 3.1.3\n* [CVE-2021-20296](https://nvd.nist.gov/vuln/detail/CVE-2021-20296) 2.4.0, 2.4.1, 2.4.2, 2.5.0, 2.5.1, 2.5.2, 2.5.3 \n* [CVE-2021-3479](https://nvd.nist.gov/vuln/detail/CVE-2021-3479) 2.4.0, 2.4.1, 2.4.2, 2.5.0, 2.5.1, 2.5.2, 2.5.3 \n* [CVE-2021-3478](https://nvd.nist.gov/vuln/detail/CVE-2021-3478) 2.4.0, 2.4.1, 2.4.2, 2.5.0, 2.5.1, 2.5.2, 2.5.3 \n* [CVE-2021-3477](https://nvd.nist.gov/vuln/detail/CVE-2021-3477) 2.4.0, 2.4.1, 2.4.2, 2.5.0, 2.5.1, 2.5.2, 2.5.3 \n* [CVE-2021-3476](https://nvd.nist.gov/vuln/detail/CVE-2021-3476) 2.4.0, 2.4.1, 2.4.2, 2.5.0, 2.5.1, 2.5.2, 2.5.3 \n* [CVE-2021-3475](https://nvd.nist.gov/vuln/detail/CVE-2021-3475) 2.4.0, 2.4.1, 2.4.2, 2.5.0, 2.5.1, 2.5.2, 2.5.3 \n* [CVE-2021-3474](https://nvd.nist.gov/vuln/detail/CVE-2021-3474) 2.4.0, 2.4.1, 2.4.2, 2.5.0, 2.5.1, 2.5.2, 2.5.3 \n* [CVE-2020-16589](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-16589) 2.0.0, 2.0.1, 2.1.0, 2.2.0, 2.2.1, 2.3.0\n* [CVE-2020-16588](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-16588) 2.0.0, 2.0.1, 2.1.0, 2.2.0, 2.2.1, 2.3.0\n* [CVE-2020-16587](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-16587) 2.0.0, 2.0.1, 2.1.0, 2.2.0, 2.2.1, 2.3.0\n* [CVE-2020-15306](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15306) 2.0.0, 2.0.1, 2.1.0, 2.2.0, 2.2.1, 2.3.0, 2.4.0, 2.4.1, 2.5.0, 2.5.1 \n* [CVE-2020-15305](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15305) 2.0.0, 2.0.1, 2.1.0, 2.2.0, 2.2.1, 2.3.0, 2.4.0, 2.4.1, 2.5.0, 2.5.1 \n* [CVE-2020-15304](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-15304) 2.0.0, 2.0.1, 2.1.0, 2.2.0, 2.2.1, 2.3.0, 2.4.0, 2.4.1, 2.5.0, 2.5.1 \n* [CVE-2020-11765](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11765) 2.0.0, 2.0.1, 2.1.0, 2.2.0, 2.2.1, 2.3.0, 2.4.0 \n* [CVE-2020-11764](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11764) 2.0.0, 2.0.1, 2.1.0, 2.2.0, 2.2.1, 2.3.0, 2.4.0 \n* [CVE-2020-11763](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11763) 2.0.0, 2.0.1, 2.1.0, 2.2.0, 2.2.1, 2.3.0, 2.4.0 \n* [CVE-2020-11762](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11762) 2.0.0, 2.0.1, 2.1.0, 2.2.0, 2.2.1, 2.3.0, 2.4.0 \n* [CVE-2020-11761](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11761) 2.0.0, 2.0.1, 2.1.0, 2.2.0, 2.2.1, 2.3.0, 2.4.0 \n* [CVE-2020-11760](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11760) 2.0.0, 2.0.1, 2.1.0, 2.2.0, 2.2.1, 2.3.0, 2.4.0 \n* [CVE-2020-11759](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11759) 2.0.0, 2.0.1, 2.1.0, 2.2.0, 2.2.1, 2.3.0, 2.4.0 \n* [CVE-2020-11758](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-11758) 2.0.0, 2.0.1, 2.1.0, 2.2.0, 2.2.1, 2.3.0, 2.4.0 \n* [CVE-2018-18444](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-18444) 2.0.0, 2.0.1, 2.1.0, 2.2.0, 2.2.1, 2.3.0\n* [CVE-2018-18443](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-18443) 2.0.0, 2.0.1, 2.1.0, 2.2.0, 2.2.1, 2.3.0\n* [CVE-2017-9116](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-9116) 2.0.0, 2.0.1, 2.1.0, 2.2.0\n* [CVE-2017-9115](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-9115) 2.0.0, 2.0.1, 2.1.0, 2.2.0\n* [CVE-2017-9114](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-9114) 2.0.0, 2.0.1, 2.1.0, 2.2.0\n* [CVE-2017-9113](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-9113) 2.0.0, 2.0.1, 2.1.0, 2.2.0\n* [CVE-2017-9112](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-9112) 2.0.0, 2.0.1, 2.1.0, 2.2.0\n* [CVE-2017-9111](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-9111) 2.0.0, 2.0.1, 2.1.0, 2.2.0\n* [CVE-2017-9110](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-9110) 2.0.0, 2.0.1, 2.1.0, 2.2.0\n* [CVE-2017-12596](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-12596) 2.0.0, 2.0.1, 2.1.0, 2.2.0, 2.2.1, 2.3.0\n* [CVE-2009-1722](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1722) 1.0.*, 1.1.*, 1.2.*, 1.3.*, 1.4.*, 1.5.*, 1.6.*\n* [CVE-2009-1721](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1721) 1.0.*, 1.1.*, 1.2.*, 1.3.*, 1.4.*, 1.5.*, 1.6.*\n* [CVE-2009-1720](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-1720) 1.0.*, 1.1.*, 1.2.*, 1.3.*, 1.4.*, 1.5.*, 1.6.*\n\nSee the [release notes](CHANGES.md) for more information.\n\n## Supported Versions\n\nThis gives guidance about which branches are supported with patches to\nsecurity vulnerabilities.\n\n| Version / branch  | Supported                                            |\n| --------- | ---------------------------------------------------- |\n| main      | :white_check_mark: :construction: ALL fixes immediately, but this is a branch under development with a frequently unstable ABI and occasionally unstable API. |\n| 3.2.x    | :white_check_mark: All fixes that can be backported without breaking ABI compatibility. |\n| 3.1.x    | :warning: Only the most critical fixes, only if they can be easily backported. |\n| 3.0.x    | :warning: Only the most critical fixes, only if they can be easily backported. |\n| 2.5.x    | :warning: Only the most critical fixes, only if they can be easily backported. |\n| <= 1.x   | :x: No longer receiving patches of any kind. |\n\n## Signed Releases\n\nReleases artifacts are signed via\n[sigstore](https://www.sigstore.dev). See\n[release-sign.yml](.github/workflows/release-sign.yml) for details.\n\nTo verify a downloaded release at a given tag:\n\n    % pip install sigstore\n    % sigstore verify github --cert-identity https://github.com/AcademySoftwareFoundation/openexr/.github/workflows/release-sign.yml@refs/tags/<tag> openexr-<tag>.tar.gz\n\n## Security Expectations\n\n### Software Features\n\n- The OpenEXR project implements the EXR image file format, used\n  throughout the motion picture industry and beyond, on Linux, macOS,\n  and Windows.\n\n- The project consists of a software run-time library, implemented in\n  C/C++ and built via cmake, that reads and writes image data\n  files. The project also distributes python wrappings for the C/C++\n  I/O API.\n\n- The library reads and writes binary image data and text-based\n  metadata, treated as blind data, none of which is executable code.\n\n- Other than the website and online technical documentation, the\n  project implements no web/online services or network communication\n  protocols.  The library never requests any security or\n  authentication credentials or login information from users.\n\n  The website implements no interactive features and requires no login\n  credentials.\n\n- The library reads and writes only to file paths specificly requested\n  via the C/C++ API. The runtime library uses no system configuration\n  files or sidecar data files. Access to data files uses only standard\n  file I/O system calls.\n\n- The library compresses/decompresses data via standard compression\n  algorithms but uses no cryptographic or confidentiality protocols.\n  \n### Software Dependencies\n\nOpenEXR depends on\n[Imath](https://github.com/AcademySoftwareFoundation/Imath), a library\nof basic math operations also maintained and distributed by the\nOpenEXR project. Imath follows the same security conventions\ndocumented here for OpenEXR itself. The core Imath library has no\nexternal dependencies. The Imath python bindings depend on python and\nboost.\n\nThe only\nexternal library dependency of OpenEXR is\n[libdeflate](https://github.com/ebiggers/libdeflate), which implements\nstandard deflate/zlib/gzip compression and decompression.\n\nThe project uses\n[Snyk](https://github.com/AcademySoftwareFoundation/openexr/blob/main/.github/workflows/snyk-scan-pr.yml)\nto scan for dependency vulnerability.\n\n### Potential Vulnerabilities\n\nPotential entry points are images being loaded using the\nlibrary. Malformed images could caused issues such as heap buffer\noverflows, out-of-memory faults, or segmentation faults that could be\nexploitable as denial-of-service attacks. \n\n### Hardening\n\n#### Testing\n\nThe OpenEXR project implements a comprehensive suite of validation\ntests, including fuzz testing to harden against malicious input\ndata. Note that fuzz testing hardens only against *small* input data\nfiles and is not a comprehensive test against all potential input.\n\nNote that the\n[exrcheck](https://github.com/AcademySoftwareFoundation/openexr/tree/main/src/bin/exrcheck)\nutility is intended to be used by testers to demonstrate a particular\nproof-of-concept input file exposes a vulnerability, and it is very\nhelpful to let us know if a vulnerability can be reproduced using that\ntool.\n\nThe project also uses the [OSS\nFuzz](https://bugs.chromium.org/p/oss-fuzz) service for continuous\nfuzz testing.\n\n#### Development Cycle and Distribution\n\nOpenEXR is downloadable and buildable by C/C++ source via GitHub. Only\nmembers of the project's Technical Steering Committee, all veteran\nsoftware engineers at major motion picture studios or vendors, have\nwrite permissions on the source code repository. All critical software\nchanges are reviewed by multiple TSC members.\n\nThe library is distributed in binary form via many common package\nmanagers across all platforms.\n\n\n\n"
        },
        {
          "name": "WORKSPACE.bazel",
          "type": "blob",
          "size": 0.126953125,
          "content": "# SPDX-License-Identifier: BSD-3-Clause\n# Copyright Contributors to the OpenEXR Project.\n\n# WORKSPACE marker file needed by Bazel\n"
        },
        {
          "name": "bazel",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 2.47265625,
          "content": "# SPDX-License-Identifier: BSD-3-Clause\n# Copyright (c) Contributors to the OpenEXR Project.\n\n[build-system]\nrequires = [\"scikit-build-core==0.10.7\", \"pybind11\"]\nbuild-backend = \"scikit_build_core.build\"\n\n[project]\nname = \"OpenEXR\"\ndynamic = [\"version\"]\n\ndescription=\"Python bindings for the OpenEXR image file format\"\nreadme = \"src/wrappers/python/README.md\"\nauthors = [\n  { name=\"Contributors to the OpenEXR project\", email=\"info@openexr.com\" },\n]\nrequires-python = \">=3.7\"\n\ndependencies = [\n  \"numpy>=1.7.0\"\n]\n\n[project.urls]\n\"Homepage\" = \"https://openexr.com\"\n\"Source\" = \"https://github.com/AcademySoftwareFoundation/OpenEXR\"\n\"Bug Tracker\" = \"https://github.com/AcademySoftwareFoundation/OpenEXR/issues\"\n\n[project.optional-dependencies]\ntest = [\"pytest\"]\n\n[tool.pytest.ini_options]\nminversion = \"6.0\"\naddopts = [\"-ra\", \"--showlocals\", \"--strict-markers\", \"--strict-config\"]\nxfail_strict = true\nlog_cli_level = \"INFO\"\nfilterwarnings = [\n  \"error\",\n]\ntestpaths = [\"tests\"]\n\n[tool.scikit-build]\nwheel.expand-macos-universal-tags = true\nsdist.exclude = [\".github\", \"src/examples\", \"ASWF\", \"bazel\", \"share\"]\n\n# Only build the PyOpenEXR (cmake --build --target PyOpenEXR).\ncmake.targets = [\"PyOpenEXR\"]\n# Only install the \"python\" component (cmake --install --component python).\n# This makes sure that only files marked as \"python\" component are installed.\ninstall.components = [\"python\"]\n# strip debug symbols\ninstall.strip = true\n\n# Enable experimental features if any are available\n# In this case we need custom local plugin to get\n# the project version from cmake.\nexperimental = true\nmetadata.version.provider = \"openexr_skbuild_plugin\"\nmetadata.version.provider-path = \"./src/wrappers/python\"\n\n\n[tool.scikit-build.cmake.define]\nOPENEXR_INSTALL = 'OFF'\nOPENEXR_BUILD_PYTHON = 'ON'\nOPENEXR_BUILD_EXAMPLES = 'OFF'\nOPENEXR_BUILD_TOOLS = 'OFF'\nOPENEXR_INSTALL_TOOLS = 'OFF'\nOPENEXR_INSTALL_PKG_CONFIG = 'OFF'\nOPENEXR_FORCE_INTERNAL_DEFLATE = 'ON'\nOPENEXR_FORCE_INTERNAL_IMATH = 'ON'\nOPENEXR_TEST_LIBRARIES = 'OFF'\nBUILD_SHARED_LIBS = 'OFF'\nCMAKE_OSX_DEPLOYMENT_TARGET = '10.15'\nCMAKE_POSITION_INDEPENDENT_CODE = 'ON'\n\n[tool.cibuildwheel]\ntest-command = \"pytest -s {project}/src/wrappers/python/tests\"\ntest-requires = [\"numpy\"]\ntest-extras = [\"test\"]\ntest-skip = [\"*universal2:arm64\"]\nbuild-verbosity = 1\n\nmanylinux-x86_64-image = \"manylinux2014\"\nmanylinux-i686-image = \"manylinux2014\"\nmanylinux-aarch64-image = \"manylinux2014\"\n\n# Needed for full C++17 support\n[tool.cibuildwheel.macos.environment]\nMACOSX_DEPLOYMENT_TARGET = \"10.15\"\n"
        },
        {
          "name": "share",
          "type": "tree",
          "content": null
        },
        {
          "name": "sonar-project.properties",
          "type": "blob",
          "size": 0.9013671875,
          "content": "# SPDX-License-Identifier: BSD-3-Clause\n# Copyright (c) Contributors to the OpenEXR Project.\n#\n# SonarCloud analysis configuration file\n# https://sonarcloud.io/documentation/analysis/analysis-parameters\n\nsonar.host.url=https://sonarcloud.io\n\n# Required metadata\nsonar.organization=academysoftwarefoundation\nsonar.projectKey=AcademySoftwareFoundation_openexr\nsonar.projectName=OpenEXR\nsonar.projectVersion=2.5\n\n# Project links\nsonar.links.homepage=http://openexr.com\nsonar.links.ci=https://github.com/AcademySoftwareFoundation/openexr/actions\nsonar.links.scm=https://github.com/AcademySoftwareFoundation/openexr\nsonar.links.issue=https://github.com/AcademySoftwareFoundation/openexr/issues\n\n# Source properties\nsonar.sources=src\nsonar.sourceEncoding=UTF-8\nsonar.exclusions=src/bindings/java/**,*.java\n\n# C/C++ analyzer properties\nsonar.cfamily.build-wrapper-output=_build/bw_output\nsonar.cfamily.gcov.reportsPath=_coverage\n\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "website",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}