{
  "metadata": {
    "timestamp": 1736710127607,
    "page": 769,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "lavabit/magma",
      "stars": 1818,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".cproject",
          "type": "blob",
          "size": 78.9267578125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><?fileVersion 4.0.0?><cproject storage_type_id=\"org.eclipse.cdt.core.XmlProjectDescriptionStorage\">\n\t<storageModule moduleId=\"org.eclipse.cdt.core.settings\">\n\t\t<cconfiguration id=\"cdt.managedbuild.toolchain.gnu.base.1042491499\">\n\t\t\t<storageModule buildSystemId=\"org.eclipse.cdt.managedbuilder.core.configurationDataProvider\" id=\"cdt.managedbuild.toolchain.gnu.base.1042491499\" moduleId=\"org.eclipse.cdt.core.settings\" name=\"Magma Daemon\">\n\t\t\t\t<externalSettings/>\n\t\t\t\t<extensions>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.ELF\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GASErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GmakeErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GLDErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.CWDLocator\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GCCErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t</extensions>\n\t\t\t</storageModule>\n\t\t\t<storageModule moduleId=\"cdtBuildSystem\" version=\"4.0.0\">\n\t\t\t\t<configuration artifactName=\"${ProjName}\" buildProperties=\"\" description=\"Compile the magma daemon.\" id=\"cdt.managedbuild.toolchain.gnu.base.1042491499\" name=\"Magma Daemon\" optionalBuildProperties=\"\" parent=\"org.eclipse.cdt.build.core.emptycfg\">\n\t\t\t\t\t<folderInfo id=\"cdt.managedbuild.toolchain.gnu.base.1042491499.748127844\" name=\"/\" resourcePath=\"\">\n\t\t\t\t\t\t<toolChain id=\"cdt.managedbuild.toolchain.gnu.base.1001352989\" name=\"Linux GCC\" resourceTypeBasedDiscovery=\"true\" superClass=\"cdt.managedbuild.toolchain.gnu.base\">\n\t\t\t\t\t\t\t<targetPlatform archList=\"all\" binaryParser=\"org.eclipse.cdt.core.ELF\" id=\"cdt.managedbuild.target.gnu.platform.base.374151761\" name=\"Debug Platform\" osList=\"linux,hpux,aix,qnx\" superClass=\"cdt.managedbuild.target.gnu.platform.base\"/>\n\t\t\t\t\t\t\t<builder arguments=\"VERBOSE=yes\" autoBuildTarget=\"magmad\" command=\"make\" enableAutoBuild=\"true\" enabledIncrementalBuild=\"true\" id=\"cdt.managedbuild.target.gnu.builder.base.22697443\" incrementalBuildTarget=\"magmad\" keepEnvironmentInBuildfile=\"false\" managedBuildOn=\"false\" name=\"Gnu Make Builder\" parallelBuildOn=\"true\" parallelizationNumber=\"optimal\" stopOnErr=\"true\" superClass=\"cdt.managedbuild.target.gnu.builder.base\">\n\t\t\t\t\t\t\t\t<outputEntries>\n\t\t\t\t\t\t\t\t\t<entry flags=\"VALUE_WORKSPACE_PATH|RESOLVED\" kind=\"outputPath\" name=\"\"/>\n\t\t\t\t\t\t\t\t</outputEntries>\n\t\t\t\t\t\t\t</builder>\n\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.archiver.base.1445563090\" name=\"GCC Archiver\" superClass=\"cdt.managedbuild.tool.gnu.archiver.base\"/>\n\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.cpp.compiler.base.1861641414\" name=\"GCC C++ Compiler\" superClass=\"cdt.managedbuild.tool.gnu.cpp.compiler.base\">\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.cpp.compiler.option.include.paths.1273358102\" name=\"Include paths (-I)\" superClass=\"gnu.cpp.compiler.option.include.paths\" useByScannerDiscovery=\"false\" valueType=\"includePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma.so/local/include}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/src}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/usr/include/\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.cpp.compiler.option.preprocessor.def.1653654635\" name=\"Defined symbols (-D)\" superClass=\"gnu.cpp.compiler.option.preprocessor.def\" useByScannerDiscovery=\"false\" valueType=\"definedSymbols\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"HAVE_NS_TYPE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_REENTRANT\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_LARGEFILE64_SOURCE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_GNU_SOURCE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"MAGMA_PEDANTIC\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.cpp.compiler.option.include.files.723178644\" name=\"Include files (-include)\" superClass=\"gnu.cpp.compiler.option.include.files\" useByScannerDiscovery=\"false\" valueType=\"includeFiles\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/src/magma.h}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma/magma_check.h}&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.cpp.compiler.input.980503967\" superClass=\"cdt.managedbuild.tool.gnu.cpp.compiler.input\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.c.compiler.base.404305589\" name=\"GCC C Compiler\" superClass=\"cdt.managedbuild.tool.gnu.c.compiler.base\">\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.c.compiler.option.include.files.205075807\" name=\"Include files (-include)\" superClass=\"gnu.c.compiler.option.include.files\" useByScannerDiscovery=\"false\" valueType=\"includeFiles\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/src/magma.h}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma/magma_check.h}&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.c.compiler.option.include.paths.490644488\" name=\"Include paths (-I)\" superClass=\"gnu.c.compiler.option.include.paths\" useByScannerDiscovery=\"false\" valueType=\"includePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma.so/local/include}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/src}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/usr/include/\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.c.compiler.option.preprocessor.def.symbols.1926738496\" name=\"Defined symbols (-D)\" superClass=\"gnu.c.compiler.option.preprocessor.def.symbols\" useByScannerDiscovery=\"false\" valueType=\"definedSymbols\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"HAVE_NS_TYPE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_REENTRANT\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_LARGEFILE64_SOURCE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_GNU_SOURCE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"MAGMA_PEDANTIC\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.c.compiler.input.102438972\" superClass=\"cdt.managedbuild.tool.gnu.c.compiler.input\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.c.linker.base.292223849\" name=\"GCC C Linker\" superClass=\"cdt.managedbuild.tool.gnu.c.linker.base\">\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.c.link.option.paths.1338986920\" name=\"Library search path (-L)\" superClass=\"gnu.c.link.option.paths\" valueType=\"libPaths\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma.so/sources/lzo/src/.libs}&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.c.linker.input.176773624\" superClass=\"cdt.managedbuild.tool.gnu.c.linker.input\">\n\t\t\t\t\t\t\t\t\t<additionalInput kind=\"additionalinputdependency\" paths=\"$(USER_OBJS)\"/>\n\t\t\t\t\t\t\t\t\t<additionalInput kind=\"additionalinput\" paths=\"$(LIBS)\"/>\n\t\t\t\t\t\t\t\t</inputType>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.cpp.linker.base.845737311\" name=\"GCC C++ Linker\" superClass=\"cdt.managedbuild.tool.gnu.cpp.linker.base\">\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.cpp.link.option.libs.715044842\" name=\"Libraries (-l)\" superClass=\"gnu.cpp.link.option.libs\" valueType=\"libs\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" srcPrefixMapping=\"\" srcRootPath=\"\" value=\"&quot;${workspace_loc:/magma/magmad.so}&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.cpp.linker.input.1469514033\" superClass=\"cdt.managedbuild.tool.gnu.cpp.linker.input\">\n\t\t\t\t\t\t\t\t\t<additionalInput kind=\"additionalinputdependency\" paths=\"$(USER_OBJS)\"/>\n\t\t\t\t\t\t\t\t\t<additionalInput kind=\"additionalinput\" paths=\"$(LIBS)\"/>\n\t\t\t\t\t\t\t\t</inputType>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.assembler.base.999450839\" name=\"GCC Assembler\" superClass=\"cdt.managedbuild.tool.gnu.assembler.base\">\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.both.asm.option.include.paths.2098444350\" name=\"Include paths (-I)\" superClass=\"gnu.both.asm.option.include.paths\" valueType=\"includePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma.so/local/include}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/usr/include/\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.assembler.input.1639098879\" superClass=\"cdt.managedbuild.tool.gnu.assembler.input\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t</toolChain>\n\t\t\t\t\t</folderInfo>\n\t\t\t\t\t<sourceEntries>\n\t\t\t\t\t\t<entry flags=\"VALUE_WORKSPACE_PATH\" kind=\"sourcePath\" name=\"check\"/>\n\t\t\t\t\t\t<entry flags=\"VALUE_WORKSPACE_PATH\" kind=\"sourcePath\" name=\"src\"/>\n\t\t\t\t\t</sourceEntries>\n\t\t\t\t</configuration>\n\t\t\t</storageModule>\n\t\t\t<storageModule moduleId=\"org.eclipse.cdt.core.externalSettings\">\n\t\t\t\t<externalSettings containerId=\"magma.so;cdt.managedbuild.toolchain.gnu.base.501067626\" factoryId=\"org.eclipse.cdt.core.cfg.export.settings.sipplier\">\n\t\t\t\t\t<externalSetting>\n\t\t\t\t\t\t<entry flags=\"VALUE_WORKSPACE_PATH|RESOLVED\" kind=\"includePath\" name=\"/magma.so/local/include\"/>\n\t\t\t\t\t\t<entry flags=\"RESOLVED\" kind=\"macro\" name=\"HAVE_NS_TYPE\" value=\"\"/>\n\t\t\t\t\t\t<entry flags=\"RESOLVED\" kind=\"macro\" name=\"_REENTRANT\" value=\"\"/>\n\t\t\t\t\t\t<entry flags=\"RESOLVED\" kind=\"macro\" name=\"_LARGEFILE64_SOURCE\" value=\"\"/>\n\t\t\t\t\t\t<entry flags=\"RESOLVED\" kind=\"macro\" name=\"_GNU_SOURCE\" value=\"\"/>\n\t\t\t\t\t</externalSetting>\n\t\t\t\t</externalSettings>\n\t\t\t</storageModule>\n\t\t</cconfiguration>\n\t\t<cconfiguration id=\"cdt.managedbuild.toolchain.gnu.base.1042491499.1834931754\">\n\t\t\t<storageModule buildSystemId=\"org.eclipse.cdt.managedbuilder.core.configurationDataProvider\" id=\"cdt.managedbuild.toolchain.gnu.base.1042491499.1834931754\" moduleId=\"org.eclipse.cdt.core.settings\" name=\"Magma Check\">\n\t\t\t\t<externalSettings/>\n\t\t\t\t<extensions>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.ELF\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GASErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GmakeErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GLDErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.CWDLocator\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GCCErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t</extensions>\n\t\t\t</storageModule>\n\t\t\t<storageModule moduleId=\"cdtBuildSystem\" version=\"4.0.0\">\n\t\t\t\t<configuration artifactName=\"${ProjName}\" buildProperties=\"\" description=\"Compile the magma unit tests.\" id=\"cdt.managedbuild.toolchain.gnu.base.1042491499.1834931754\" name=\"Magma Check\" optionalBuildProperties=\"\" parent=\"org.eclipse.cdt.build.core.emptycfg\">\n\t\t\t\t\t<folderInfo id=\"cdt.managedbuild.toolchain.gnu.base.1042491499.1834931754.\" name=\"/\" resourcePath=\"\">\n\t\t\t\t\t\t<toolChain id=\"cdt.managedbuild.toolchain.gnu.base.426512203\" name=\"Linux GCC\" resourceTypeBasedDiscovery=\"true\" superClass=\"cdt.managedbuild.toolchain.gnu.base\">\n\t\t\t\t\t\t\t<targetPlatform archList=\"all\" binaryParser=\"org.eclipse.cdt.core.ELF\" id=\"cdt.managedbuild.target.gnu.platform.base.1652552868\" name=\"Debug Platform\" osList=\"linux,hpux,aix,qnx\" superClass=\"cdt.managedbuild.target.gnu.platform.base\"/>\n\t\t\t\t\t\t\t<builder arguments=\"VERBOSE=yes\" autoBuildTarget=\"magmad.check\" command=\"make\" enableAutoBuild=\"true\" enabledIncrementalBuild=\"true\" id=\"cdt.managedbuild.target.gnu.builder.base.956624493\" incrementalBuildTarget=\"magmad.check\" keepEnvironmentInBuildfile=\"false\" managedBuildOn=\"false\" name=\"Gnu Make Builder\" parallelBuildOn=\"true\" parallelizationNumber=\"optimal\" stopOnErr=\"true\" superClass=\"cdt.managedbuild.target.gnu.builder.base\"/>\n\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.archiver.base.1668166124\" name=\"GCC Archiver\" superClass=\"cdt.managedbuild.tool.gnu.archiver.base\"/>\n\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.cpp.compiler.base.566685175\" name=\"GCC C++ Compiler\" superClass=\"cdt.managedbuild.tool.gnu.cpp.compiler.base\">\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.cpp.compiler.option.include.paths.820696727\" name=\"Include paths (-I)\" superClass=\"gnu.cpp.compiler.option.include.paths\" useByScannerDiscovery=\"false\" valueType=\"includePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma.so/local/include}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/src}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/usr/include/\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.cpp.compiler.option.preprocessor.def.1946707425\" name=\"Defined symbols (-D)\" superClass=\"gnu.cpp.compiler.option.preprocessor.def\" useByScannerDiscovery=\"false\" valueType=\"definedSymbols\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"HAVE_NS_TYPE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_REENTRANT\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_LARGEFILE64_SOURCE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_GNU_SOURCE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"MAGMA_PEDANTIC\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.cpp.compiler.option.include.files.1607387786\" name=\"Include files (-include)\" superClass=\"gnu.cpp.compiler.option.include.files\" useByScannerDiscovery=\"false\" valueType=\"includeFiles\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/src/magma.h}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma/magma_check.h}&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.cpp.compiler.input.998261908\" superClass=\"cdt.managedbuild.tool.gnu.cpp.compiler.input\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.c.compiler.base.450779271\" name=\"GCC C Compiler\" superClass=\"cdt.managedbuild.tool.gnu.c.compiler.base\">\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.c.compiler.option.include.files.903229593\" name=\"Include files (-include)\" superClass=\"gnu.c.compiler.option.include.files\" useByScannerDiscovery=\"false\" valueType=\"includeFiles\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/src/magma.h}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma/magma_check.h}&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.c.compiler.option.include.paths.142183936\" name=\"Include paths (-I)\" superClass=\"gnu.c.compiler.option.include.paths\" useByScannerDiscovery=\"false\" valueType=\"includePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma.so/local/include}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/src}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/usr/include/\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.c.compiler.option.preprocessor.def.symbols.2117180584\" name=\"Defined symbols (-D)\" superClass=\"gnu.c.compiler.option.preprocessor.def.symbols\" useByScannerDiscovery=\"false\" valueType=\"definedSymbols\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"HAVE_NS_TYPE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_REENTRANT\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_LARGEFILE64_SOURCE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_GNU_SOURCE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"MAGMA_PEDANTIC\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.c.compiler.input.208862389\" superClass=\"cdt.managedbuild.tool.gnu.c.compiler.input\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.c.linker.base.483216040\" name=\"GCC C Linker\" superClass=\"cdt.managedbuild.tool.gnu.c.linker.base\">\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.c.link.option.paths.2126104628\" name=\"Library search path (-L)\" superClass=\"gnu.c.link.option.paths\" valueType=\"libPaths\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma.so/sources/lzo/src/.libs}&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.c.linker.input.642217580\" superClass=\"cdt.managedbuild.tool.gnu.c.linker.input\">\n\t\t\t\t\t\t\t\t\t<additionalInput kind=\"additionalinputdependency\" paths=\"$(USER_OBJS)\"/>\n\t\t\t\t\t\t\t\t\t<additionalInput kind=\"additionalinput\" paths=\"$(LIBS)\"/>\n\t\t\t\t\t\t\t\t</inputType>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.cpp.linker.base.888278271\" name=\"GCC C++ Linker\" superClass=\"cdt.managedbuild.tool.gnu.cpp.linker.base\">\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.cpp.link.option.libs.1437995346\" name=\"Libraries (-l)\" superClass=\"gnu.cpp.link.option.libs\" valueType=\"libs\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" srcPrefixMapping=\"\" srcRootPath=\"\" value=\"&quot;${workspace_loc:/magma/magmad.so}&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.cpp.linker.input.801392455\" superClass=\"cdt.managedbuild.tool.gnu.cpp.linker.input\">\n\t\t\t\t\t\t\t\t\t<additionalInput kind=\"additionalinputdependency\" paths=\"$(USER_OBJS)\"/>\n\t\t\t\t\t\t\t\t\t<additionalInput kind=\"additionalinput\" paths=\"$(LIBS)\"/>\n\t\t\t\t\t\t\t\t</inputType>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.assembler.base.399935483\" name=\"GCC Assembler\" superClass=\"cdt.managedbuild.tool.gnu.assembler.base\">\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.both.asm.option.include.paths.1981211645\" name=\"Include paths (-I)\" superClass=\"gnu.both.asm.option.include.paths\" valueType=\"includePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma.so/local/include}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/usr/include/\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.assembler.input.900848572\" superClass=\"cdt.managedbuild.tool.gnu.assembler.input\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t</toolChain>\n\t\t\t\t\t</folderInfo>\n\t\t\t\t\t<sourceEntries>\n\t\t\t\t\t\t<entry flags=\"VALUE_WORKSPACE_PATH\" kind=\"sourcePath\" name=\"check\"/>\n\t\t\t\t\t\t<entry flags=\"VALUE_WORKSPACE_PATH\" kind=\"sourcePath\" name=\"src\"/>\n\t\t\t\t\t</sourceEntries>\n\t\t\t\t</configuration>\n\t\t\t</storageModule>\n\t\t\t<storageModule moduleId=\"org.eclipse.cdt.core.externalSettings\">\n\t\t\t\t<externalSettings containerId=\"magma.so;cdt.managedbuild.toolchain.gnu.base.501067626\" factoryId=\"org.eclipse.cdt.core.cfg.export.settings.sipplier\">\n\t\t\t\t\t<externalSetting>\n\t\t\t\t\t\t<entry flags=\"VALUE_WORKSPACE_PATH|RESOLVED\" kind=\"includePath\" name=\"/magma.so/local/include\"/>\n\t\t\t\t\t\t<entry flags=\"RESOLVED\" kind=\"macro\" name=\"HAVE_NS_TYPE\" value=\"\"/>\n\t\t\t\t\t\t<entry flags=\"RESOLVED\" kind=\"macro\" name=\"_REENTRANT\" value=\"\"/>\n\t\t\t\t\t\t<entry flags=\"RESOLVED\" kind=\"macro\" name=\"_LARGEFILE64_SOURCE\" value=\"\"/>\n\t\t\t\t\t\t<entry flags=\"RESOLVED\" kind=\"macro\" name=\"_GNU_SOURCE\" value=\"\"/>\n\t\t\t\t\t</externalSetting>\n\t\t\t\t</externalSettings>\n\t\t\t</storageModule>\n\t\t</cconfiguration>\n\t\t<cconfiguration id=\"cdt.managedbuild.toolchain.gnu.base.1042491499.540148943\">\n\t\t\t<storageModule buildSystemId=\"org.eclipse.cdt.managedbuilder.core.configurationDataProvider\" id=\"cdt.managedbuild.toolchain.gnu.base.1042491499.540148943\" moduleId=\"org.eclipse.cdt.core.settings\" name=\"Default\">\n\t\t\t\t<externalSettings/>\n\t\t\t\t<extensions>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.ELF\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GNU_ELF\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GASErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GmakeErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GLDErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.CWDLocator\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GCCErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t</extensions>\n\t\t\t</storageModule>\n\t\t\t<storageModule moduleId=\"cdtBuildSystem\" version=\"4.0.0\">\n\t\t\t\t<configuration artifactName=\"${ProjName}\" buildProperties=\"\" description=\"Compile the magma daemon and the unit tests.\" errorParsers=\"org.eclipse.cdt.core.GASErrorParser;org.eclipse.cdt.core.GmakeErrorParser;org.eclipse.cdt.core.GLDErrorParser;org.eclipse.cdt.core.CWDLocator;org.eclipse.cdt.core.GCCErrorParser\" id=\"cdt.managedbuild.toolchain.gnu.base.1042491499.540148943\" name=\"Default\" optionalBuildProperties=\"\" parent=\"org.eclipse.cdt.build.core.emptycfg\">\n\t\t\t\t\t<folderInfo id=\"cdt.managedbuild.toolchain.gnu.base.1042491499.540148943.\" name=\"/\" resourcePath=\"\">\n\t\t\t\t\t\t<toolChain errorParsers=\"\" id=\"cdt.managedbuild.toolchain.gnu.base.193801907\" name=\"Linux GCC\" resourceTypeBasedDiscovery=\"true\" superClass=\"cdt.managedbuild.toolchain.gnu.base\">\n\t\t\t\t\t\t\t<targetPlatform archList=\"all\" binaryParser=\"org.eclipse.cdt.core.GNU_ELF;org.eclipse.cdt.core.ELF\" id=\"cdt.managedbuild.target.gnu.platform.base.982852828\" name=\"Debug Platform\" osList=\"linux,hpux,aix,qnx\" superClass=\"cdt.managedbuild.target.gnu.platform.base\"/>\n\t\t\t\t\t\t\t<builder arguments=\"VERBOSE=yes\" autoBuildTarget=\"all\" cleanBuildTarget=\"clean\" command=\"make\" enableAutoBuild=\"true\" enableCleanBuild=\"true\" enabledIncrementalBuild=\"true\" errorParsers=\"org.eclipse.cdt.core.GmakeErrorParser;org.eclipse.cdt.core.CWDLocator\" id=\"cdt.managedbuild.target.gnu.builder.base.1104755030\" incrementalBuildTarget=\"all\" keepEnvironmentInBuildfile=\"false\" managedBuildOn=\"false\" name=\"Gnu Make Builder\" parallelBuildOn=\"true\" parallelizationNumber=\"optimal\" stopOnErr=\"true\" superClass=\"cdt.managedbuild.target.gnu.builder.base\">\n\t\t\t\t\t\t\t\t<outputEntries>\n\t\t\t\t\t\t\t\t\t<entry flags=\"VALUE_WORKSPACE_PATH|RESOLVED\" kind=\"outputPath\" name=\"\"/>\n\t\t\t\t\t\t\t\t</outputEntries>\n\t\t\t\t\t\t\t</builder>\n\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.archiver.base.998886331\" name=\"GCC Archiver\" superClass=\"cdt.managedbuild.tool.gnu.archiver.base\"/>\n\t\t\t\t\t\t\t<tool errorParsers=\"org.eclipse.cdt.core.GCCErrorParser\" id=\"cdt.managedbuild.tool.gnu.cpp.compiler.base.587691846\" name=\"GCC C++ Compiler\" superClass=\"cdt.managedbuild.tool.gnu.cpp.compiler.base\">\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.cpp.compiler.option.include.paths.2074039768\" name=\"Include paths (-I)\" superClass=\"gnu.cpp.compiler.option.include.paths\" useByScannerDiscovery=\"false\" valueType=\"includePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/src}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma.so/local/include}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/usr/include/\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.cpp.compiler.option.preprocessor.def.639012882\" name=\"Defined symbols (-D)\" superClass=\"gnu.cpp.compiler.option.preprocessor.def\" useByScannerDiscovery=\"false\" valueType=\"definedSymbols\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"HAVE_NS_TYPE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_REENTRANT\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_LARGEFILE64_SOURCE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_GNU_SOURCE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"MAGMA_PEDANTIC\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.cpp.compiler.option.include.files.503727766\" name=\"Include files (-include)\" superClass=\"gnu.cpp.compiler.option.include.files\" useByScannerDiscovery=\"false\" valueType=\"includeFiles\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/src/magma.h}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma/magma_check.h}&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.cpp.compiler.input.2055610407\" superClass=\"cdt.managedbuild.tool.gnu.cpp.compiler.input\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool errorParsers=\"org.eclipse.cdt.core.GCCErrorParser\" id=\"cdt.managedbuild.tool.gnu.c.compiler.base.832138411\" name=\"GCC C Compiler\" superClass=\"cdt.managedbuild.tool.gnu.c.compiler.base\">\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.c.compiler.option.include.files.930683726\" name=\"Include files (-include)\" superClass=\"gnu.c.compiler.option.include.files\" useByScannerDiscovery=\"false\" valueType=\"includeFiles\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/src/magma.h}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma/magma_check.h}&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.c.compiler.option.include.paths.1638267230\" name=\"Include paths (-I)\" superClass=\"gnu.c.compiler.option.include.paths\" useByScannerDiscovery=\"false\" valueType=\"includePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/src}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma.so/local/include}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/usr/include/\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.c.compiler.option.preprocessor.def.symbols.1369843614\" name=\"Defined symbols (-D)\" superClass=\"gnu.c.compiler.option.preprocessor.def.symbols\" useByScannerDiscovery=\"false\" valueType=\"definedSymbols\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"HAVE_NS_TYPE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_REENTRANT\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_LARGEFILE64_SOURCE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_GNU_SOURCE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"MAGMA_PEDANTIC\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.c.compiler.input.1278104211\" superClass=\"cdt.managedbuild.tool.gnu.c.compiler.input\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.c.linker.base.2095182988\" name=\"GCC C Linker\" superClass=\"cdt.managedbuild.tool.gnu.c.linker.base\">\n\t\t\t\t\t\t\t\t<option id=\"gnu.c.link.option.paths.807442027\" name=\"Library search path (-L)\" superClass=\"gnu.c.link.option.paths\"/>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.c.linker.input.1677423579\" superClass=\"cdt.managedbuild.tool.gnu.c.linker.input\">\n\t\t\t\t\t\t\t\t\t<additionalInput kind=\"additionalinputdependency\" paths=\"$(USER_OBJS)\"/>\n\t\t\t\t\t\t\t\t\t<additionalInput kind=\"additionalinput\" paths=\"$(LIBS)\"/>\n\t\t\t\t\t\t\t\t</inputType>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool errorParsers=\"org.eclipse.cdt.core.GLDErrorParser\" id=\"cdt.managedbuild.tool.gnu.cpp.linker.base.562725748\" name=\"GCC C++ Linker\" superClass=\"cdt.managedbuild.tool.gnu.cpp.linker.base\">\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.cpp.link.option.libs.61301978\" name=\"Libraries (-l)\" superClass=\"gnu.cpp.link.option.libs\" valueType=\"libs\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" srcPrefixMapping=\"\" srcRootPath=\"\" value=\"&quot;${workspace_loc:/magma/magmad.so}&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.cpp.linker.input.796249335\" superClass=\"cdt.managedbuild.tool.gnu.cpp.linker.input\">\n\t\t\t\t\t\t\t\t\t<additionalInput kind=\"additionalinputdependency\" paths=\"$(USER_OBJS)\"/>\n\t\t\t\t\t\t\t\t\t<additionalInput kind=\"additionalinput\" paths=\"$(LIBS)\"/>\n\t\t\t\t\t\t\t\t</inputType>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool errorParsers=\"org.eclipse.cdt.core.GASErrorParser\" id=\"cdt.managedbuild.tool.gnu.assembler.base.2125045416\" name=\"GCC Assembler\" superClass=\"cdt.managedbuild.tool.gnu.assembler.base\">\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.both.asm.option.include.paths.1115481090\" name=\"Include paths (-I)\" superClass=\"gnu.both.asm.option.include.paths\" valueType=\"includePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma.so/local/include}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/usr/include/\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.assembler.input.891186153\" superClass=\"cdt.managedbuild.tool.gnu.assembler.input\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t</toolChain>\n\t\t\t\t\t</folderInfo>\n\t\t\t\t\t<fileInfo id=\"cdt.managedbuild.toolchain.gnu.base.1042491499.540148943.565922644\" name=\"stacie.h\" rcbsApplicability=\"disable\" resourcePath=\"src/providers/stacie/stacie.h\" toolsToInvoke=\"\"/>\n\t\t\t\t\t<sourceEntries>\n\t\t\t\t\t\t<entry excluding=\"dev/*|web/|sandbox/*|tools/*|res/*\" flags=\"VALUE_WORKSPACE_PATH\" kind=\"sourcePath\" name=\"\"/>\n\t\t\t\t\t</sourceEntries>\n\t\t\t\t</configuration>\n\t\t\t</storageModule>\n\t\t\t<storageModule moduleId=\"org.eclipse.cdt.core.externalSettings\">\n\t\t\t\t<externalSettings containerId=\"magma.so;cdt.managedbuild.toolchain.gnu.base.501067626\" factoryId=\"org.eclipse.cdt.core.cfg.export.settings.sipplier\">\n\t\t\t\t\t<externalSetting>\n\t\t\t\t\t\t<entry flags=\"VALUE_WORKSPACE_PATH|RESOLVED\" kind=\"includePath\" name=\"/magma.so/local/include\"/>\n\t\t\t\t\t\t<entry flags=\"RESOLVED\" kind=\"macro\" name=\"HAVE_NS_TYPE\" value=\"\"/>\n\t\t\t\t\t\t<entry flags=\"RESOLVED\" kind=\"macro\" name=\"_REENTRANT\" value=\"\"/>\n\t\t\t\t\t\t<entry flags=\"RESOLVED\" kind=\"macro\" name=\"_LARGEFILE64_SOURCE\" value=\"\"/>\n\t\t\t\t\t\t<entry flags=\"RESOLVED\" kind=\"macro\" name=\"_GNU_SOURCE\" value=\"\"/>\n\t\t\t\t\t</externalSetting>\n\t\t\t\t</externalSettings>\n\t\t\t</storageModule>\n\t\t</cconfiguration>\n\t\t<cconfiguration id=\"cdt.managedbuild.toolchain.gnu.base.1042491499.1834931754.853698006\">\n\t\t\t<storageModule buildSystemId=\"org.eclipse.cdt.managedbuilder.core.configurationDataProvider\" id=\"cdt.managedbuild.toolchain.gnu.base.1042491499.1834931754.853698006\" moduleId=\"org.eclipse.cdt.core.settings\" name=\"DIME Check\">\n\t\t\t\t<externalSettings/>\n\t\t\t\t<extensions>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.ELF\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GASErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GmakeErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GLDErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.CWDLocator\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GCCErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t</extensions>\n\t\t\t</storageModule>\n\t\t\t<storageModule moduleId=\"cdtBuildSystem\" version=\"4.0.0\">\n\t\t\t\t<configuration artifactName=\"${ProjName}\" buildProperties=\"\" description=\"Compile the libdime unit tests.\" id=\"cdt.managedbuild.toolchain.gnu.base.1042491499.1834931754.853698006\" name=\"DIME Check\" optionalBuildProperties=\"\" parent=\"org.eclipse.cdt.build.core.emptycfg\">\n\t\t\t\t\t<folderInfo id=\"cdt.managedbuild.toolchain.gnu.base.1042491499.1834931754.853698006.\" name=\"/\" resourcePath=\"\">\n\t\t\t\t\t\t<toolChain id=\"cdt.managedbuild.toolchain.gnu.base.1763378170\" name=\"Linux GCC\" resourceTypeBasedDiscovery=\"true\" superClass=\"cdt.managedbuild.toolchain.gnu.base\">\n\t\t\t\t\t\t\t<targetPlatform archList=\"all\" binaryParser=\"org.eclipse.cdt.core.ELF\" id=\"cdt.managedbuild.target.gnu.platform.base.970900108\" name=\"Debug Platform\" osList=\"linux,hpux,aix,qnx\" superClass=\"cdt.managedbuild.target.gnu.platform.base\"/>\n\t\t\t\t\t\t\t<builder arguments=\"VERBOSE=yes\" autoBuildTarget=\"dime.check\" command=\"make\" enableAutoBuild=\"true\" enabledIncrementalBuild=\"true\" id=\"cdt.managedbuild.target.gnu.builder.base.1117536447\" incrementalBuildTarget=\"dime.check\" keepEnvironmentInBuildfile=\"false\" managedBuildOn=\"false\" name=\"Gnu Make Builder\" parallelBuildOn=\"true\" parallelizationNumber=\"optimal\" stopOnErr=\"true\" superClass=\"cdt.managedbuild.target.gnu.builder.base\"/>\n\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.archiver.base.1239144236\" name=\"GCC Archiver\" superClass=\"cdt.managedbuild.tool.gnu.archiver.base\"/>\n\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.cpp.compiler.base.308986739\" name=\"GCC C++ Compiler\" superClass=\"cdt.managedbuild.tool.gnu.cpp.compiler.base\">\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.cpp.compiler.option.include.paths.1193046984\" name=\"Include paths (-I)\" superClass=\"gnu.cpp.compiler.option.include.paths\" useByScannerDiscovery=\"false\" valueType=\"includePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma.so/local/include}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/src}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/usr/include/\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.cpp.compiler.option.preprocessor.def.1131354851\" name=\"Defined symbols (-D)\" superClass=\"gnu.cpp.compiler.option.preprocessor.def\" useByScannerDiscovery=\"false\" valueType=\"definedSymbols\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"HAVE_NS_TYPE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_REENTRANT\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_LARGEFILE64_SOURCE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_GNU_SOURCE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"MAGMA_PEDANTIC\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.cpp.compiler.option.include.files.297929583\" name=\"Include files (-include)\" superClass=\"gnu.cpp.compiler.option.include.files\" useByScannerDiscovery=\"false\" valueType=\"includeFiles\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/src/magma.h}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma/magma_check.h}&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.cpp.compiler.input.1956353204\" superClass=\"cdt.managedbuild.tool.gnu.cpp.compiler.input\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.c.compiler.base.759786511\" name=\"GCC C Compiler\" superClass=\"cdt.managedbuild.tool.gnu.c.compiler.base\">\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.c.compiler.option.include.files.1183183271\" name=\"Include files (-include)\" superClass=\"gnu.c.compiler.option.include.files\" useByScannerDiscovery=\"false\" valueType=\"includeFiles\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/src/magma.h}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma/magma_check.h}&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.c.compiler.option.include.paths.718257223\" name=\"Include paths (-I)\" superClass=\"gnu.c.compiler.option.include.paths\" useByScannerDiscovery=\"false\" valueType=\"includePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma.so/local/include}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/src}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/usr/include/\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.c.compiler.option.preprocessor.def.symbols.1452029528\" name=\"Defined symbols (-D)\" superClass=\"gnu.c.compiler.option.preprocessor.def.symbols\" useByScannerDiscovery=\"false\" valueType=\"definedSymbols\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"HAVE_NS_TYPE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_REENTRANT\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_LARGEFILE64_SOURCE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_GNU_SOURCE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"MAGMA_PEDANTIC\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.c.compiler.input.1220022755\" superClass=\"cdt.managedbuild.tool.gnu.c.compiler.input\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.c.linker.base.352206976\" name=\"GCC C Linker\" superClass=\"cdt.managedbuild.tool.gnu.c.linker.base\">\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.c.link.option.paths.868165919\" name=\"Library search path (-L)\" superClass=\"gnu.c.link.option.paths\" valueType=\"libPaths\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma.so/sources/lzo/src/.libs}&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.c.linker.input.1000418396\" superClass=\"cdt.managedbuild.tool.gnu.c.linker.input\">\n\t\t\t\t\t\t\t\t\t<additionalInput kind=\"additionalinputdependency\" paths=\"$(USER_OBJS)\"/>\n\t\t\t\t\t\t\t\t\t<additionalInput kind=\"additionalinput\" paths=\"$(LIBS)\"/>\n\t\t\t\t\t\t\t\t</inputType>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.cpp.linker.base.1473998543\" name=\"GCC C++ Linker\" superClass=\"cdt.managedbuild.tool.gnu.cpp.linker.base\">\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.cpp.link.option.libs.1918072614\" name=\"Libraries (-l)\" superClass=\"gnu.cpp.link.option.libs\" valueType=\"libs\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" srcPrefixMapping=\"\" srcRootPath=\"\" value=\"&quot;${workspace_loc:/magma/magmad.so}&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.cpp.linker.input.1785536962\" superClass=\"cdt.managedbuild.tool.gnu.cpp.linker.input\">\n\t\t\t\t\t\t\t\t\t<additionalInput kind=\"additionalinputdependency\" paths=\"$(USER_OBJS)\"/>\n\t\t\t\t\t\t\t\t\t<additionalInput kind=\"additionalinput\" paths=\"$(LIBS)\"/>\n\t\t\t\t\t\t\t\t</inputType>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.assembler.base.1159217529\" name=\"GCC Assembler\" superClass=\"cdt.managedbuild.tool.gnu.assembler.base\">\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.both.asm.option.include.paths.534190619\" name=\"Include paths (-I)\" superClass=\"gnu.both.asm.option.include.paths\" valueType=\"includePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma.so/local/include}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/usr/include/\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.assembler.input.496164738\" superClass=\"cdt.managedbuild.tool.gnu.assembler.input\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t</toolChain>\n\t\t\t\t\t</folderInfo>\n\t\t\t\t\t<sourceEntries>\n\t\t\t\t\t\t<entry flags=\"VALUE_WORKSPACE_PATH\" kind=\"sourcePath\" name=\"check\"/>\n\t\t\t\t\t\t<entry flags=\"VALUE_WORKSPACE_PATH\" kind=\"sourcePath\" name=\"src\"/>\n\t\t\t\t\t</sourceEntries>\n\t\t\t\t</configuration>\n\t\t\t</storageModule>\n\t\t\t<storageModule moduleId=\"org.eclipse.cdt.core.externalSettings\">\n\t\t\t\t<externalSettings containerId=\"magma.so;cdt.managedbuild.toolchain.gnu.base.501067626\" factoryId=\"org.eclipse.cdt.core.cfg.export.settings.sipplier\">\n\t\t\t\t\t<externalSetting>\n\t\t\t\t\t\t<entry flags=\"VALUE_WORKSPACE_PATH|RESOLVED\" kind=\"includePath\" name=\"/magma.so/local/include\"/>\n\t\t\t\t\t\t<entry flags=\"RESOLVED\" kind=\"macro\" name=\"HAVE_NS_TYPE\" value=\"\"/>\n\t\t\t\t\t\t<entry flags=\"RESOLVED\" kind=\"macro\" name=\"_REENTRANT\" value=\"\"/>\n\t\t\t\t\t\t<entry flags=\"RESOLVED\" kind=\"macro\" name=\"_LARGEFILE64_SOURCE\" value=\"\"/>\n\t\t\t\t\t\t<entry flags=\"RESOLVED\" kind=\"macro\" name=\"_GNU_SOURCE\" value=\"\"/>\n\t\t\t\t\t</externalSetting>\n\t\t\t\t</externalSettings>\n\t\t\t</storageModule>\n\t\t</cconfiguration>\n\t\t<cconfiguration id=\"cdt.managedbuild.toolchain.gnu.base.1042491499.540148943.5250294\">\n\t\t\t<storageModule buildSystemId=\"org.eclipse.cdt.managedbuilder.core.configurationDataProvider\" id=\"cdt.managedbuild.toolchain.gnu.base.1042491499.540148943.5250294\" moduleId=\"org.eclipse.cdt.core.settings\" name=\"GProf\">\n\t\t\t\t<externalSettings/>\n\t\t\t\t<extensions>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.ELF\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GNU_ELF\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GASErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GmakeErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GLDErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.CWDLocator\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GCCErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t</extensions>\n\t\t\t</storageModule>\n\t\t\t<storageModule moduleId=\"cdtBuildSystem\" version=\"4.0.0\">\n\t\t\t\t<configuration artifactName=\"${ProjName}\" buildProperties=\"\" description=\"Compile the magma daemon and the unit tests with gprof support.\" errorParsers=\"org.eclipse.cdt.core.GASErrorParser;org.eclipse.cdt.core.GmakeErrorParser;org.eclipse.cdt.core.GLDErrorParser;org.eclipse.cdt.core.CWDLocator;org.eclipse.cdt.core.GCCErrorParser\" id=\"cdt.managedbuild.toolchain.gnu.base.1042491499.540148943.5250294\" name=\"GProf\" optionalBuildProperties=\"\" parent=\"org.eclipse.cdt.build.core.emptycfg\">\n\t\t\t\t\t<folderInfo id=\"cdt.managedbuild.toolchain.gnu.base.1042491499.540148943.5250294.\" name=\"/\" resourcePath=\"\">\n\t\t\t\t\t\t<toolChain errorParsers=\"\" id=\"cdt.managedbuild.toolchain.gnu.base.1436859043\" name=\"Linux GCC\" resourceTypeBasedDiscovery=\"true\" superClass=\"cdt.managedbuild.toolchain.gnu.base\">\n\t\t\t\t\t\t\t<targetPlatform archList=\"all\" binaryParser=\"org.eclipse.cdt.core.GNU_ELF;org.eclipse.cdt.core.ELF\" id=\"cdt.managedbuild.target.gnu.platform.base.540389199\" name=\"Debug Platform\" osList=\"linux,hpux,aix,qnx\" superClass=\"cdt.managedbuild.target.gnu.platform.base\"/>\n\t\t\t\t\t\t\t<builder arguments=\"VERBOSE=yes\" autoBuildTarget=\"gprof\" cleanBuildTarget=\"clean\" command=\"make\" enableAutoBuild=\"true\" enableCleanBuild=\"true\" enabledIncrementalBuild=\"true\" errorParsers=\"org.eclipse.cdt.core.GmakeErrorParser;org.eclipse.cdt.core.CWDLocator\" id=\"cdt.managedbuild.target.gnu.builder.base.1376036137\" incrementalBuildTarget=\"gprof\" keepEnvironmentInBuildfile=\"false\" managedBuildOn=\"false\" name=\"Gnu Make Builder\" parallelBuildOn=\"true\" parallelizationNumber=\"optimal\" stopOnErr=\"true\" superClass=\"cdt.managedbuild.target.gnu.builder.base\">\n\t\t\t\t\t\t\t\t<outputEntries>\n\t\t\t\t\t\t\t\t\t<entry flags=\"VALUE_WORKSPACE_PATH|RESOLVED\" kind=\"outputPath\" name=\"\"/>\n\t\t\t\t\t\t\t\t</outputEntries>\n\t\t\t\t\t\t\t</builder>\n\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.archiver.base.942041419\" name=\"GCC Archiver\" superClass=\"cdt.managedbuild.tool.gnu.archiver.base\"/>\n\t\t\t\t\t\t\t<tool errorParsers=\"org.eclipse.cdt.core.GCCErrorParser\" id=\"cdt.managedbuild.tool.gnu.cpp.compiler.base.468208981\" name=\"GCC C++ Compiler\" superClass=\"cdt.managedbuild.tool.gnu.cpp.compiler.base\">\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.cpp.compiler.option.include.paths.692858703\" name=\"Include paths (-I)\" superClass=\"gnu.cpp.compiler.option.include.paths\" useByScannerDiscovery=\"false\" valueType=\"includePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/src}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma.so/local/include}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/usr/include/\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.cpp.compiler.option.preprocessor.def.753149950\" name=\"Defined symbols (-D)\" superClass=\"gnu.cpp.compiler.option.preprocessor.def\" useByScannerDiscovery=\"false\" valueType=\"definedSymbols\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"HAVE_NS_TYPE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_REENTRANT\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_LARGEFILE64_SOURCE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_GNU_SOURCE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"MAGMA_PEDANTIC\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.cpp.compiler.option.include.files.179838581\" name=\"Include files (-include)\" superClass=\"gnu.cpp.compiler.option.include.files\" useByScannerDiscovery=\"false\" valueType=\"includeFiles\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/src/magma.h}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma/magma_check.h}&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.cpp.compiler.input.966260355\" superClass=\"cdt.managedbuild.tool.gnu.cpp.compiler.input\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool errorParsers=\"org.eclipse.cdt.core.GCCErrorParser\" id=\"cdt.managedbuild.tool.gnu.c.compiler.base.366318603\" name=\"GCC C Compiler\" superClass=\"cdt.managedbuild.tool.gnu.c.compiler.base\">\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.c.compiler.option.include.files.1694903806\" name=\"Include files (-include)\" superClass=\"gnu.c.compiler.option.include.files\" useByScannerDiscovery=\"false\" valueType=\"includeFiles\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/src/magma.h}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma/magma_check.h}&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.c.compiler.option.include.paths.579164592\" name=\"Include paths (-I)\" superClass=\"gnu.c.compiler.option.include.paths\" useByScannerDiscovery=\"false\" valueType=\"includePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/src}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma.so/local/include}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/usr/include/\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.c.compiler.option.preprocessor.def.symbols.407333576\" name=\"Defined symbols (-D)\" superClass=\"gnu.c.compiler.option.preprocessor.def.symbols\" useByScannerDiscovery=\"false\" valueType=\"definedSymbols\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"HAVE_NS_TYPE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_REENTRANT\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_LARGEFILE64_SOURCE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_GNU_SOURCE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"MAGMA_PEDANTIC\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.c.compiler.input.964770294\" superClass=\"cdt.managedbuild.tool.gnu.c.compiler.input\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.c.linker.base.1940793642\" name=\"GCC C Linker\" superClass=\"cdt.managedbuild.tool.gnu.c.linker.base\">\n\t\t\t\t\t\t\t\t<option id=\"gnu.c.link.option.paths.1184181348\" name=\"Library search path (-L)\" superClass=\"gnu.c.link.option.paths\"/>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.c.linker.input.1526382148\" superClass=\"cdt.managedbuild.tool.gnu.c.linker.input\">\n\t\t\t\t\t\t\t\t\t<additionalInput kind=\"additionalinputdependency\" paths=\"$(USER_OBJS)\"/>\n\t\t\t\t\t\t\t\t\t<additionalInput kind=\"additionalinput\" paths=\"$(LIBS)\"/>\n\t\t\t\t\t\t\t\t</inputType>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool errorParsers=\"org.eclipse.cdt.core.GLDErrorParser\" id=\"cdt.managedbuild.tool.gnu.cpp.linker.base.2015008255\" name=\"GCC C++ Linker\" superClass=\"cdt.managedbuild.tool.gnu.cpp.linker.base\">\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.cpp.link.option.libs.2004958422\" name=\"Libraries (-l)\" superClass=\"gnu.cpp.link.option.libs\" valueType=\"libs\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" srcPrefixMapping=\"\" srcRootPath=\"\" value=\"&quot;${workspace_loc:/magma/magmad.so}&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.cpp.linker.input.1282445317\" superClass=\"cdt.managedbuild.tool.gnu.cpp.linker.input\">\n\t\t\t\t\t\t\t\t\t<additionalInput kind=\"additionalinputdependency\" paths=\"$(USER_OBJS)\"/>\n\t\t\t\t\t\t\t\t\t<additionalInput kind=\"additionalinput\" paths=\"$(LIBS)\"/>\n\t\t\t\t\t\t\t\t</inputType>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool errorParsers=\"org.eclipse.cdt.core.GASErrorParser\" id=\"cdt.managedbuild.tool.gnu.assembler.base.652200297\" name=\"GCC Assembler\" superClass=\"cdt.managedbuild.tool.gnu.assembler.base\">\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.both.asm.option.include.paths.519548597\" name=\"Include paths (-I)\" superClass=\"gnu.both.asm.option.include.paths\" valueType=\"includePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma.so/local/include}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/usr/include/\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.assembler.input.1914724590\" superClass=\"cdt.managedbuild.tool.gnu.assembler.input\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t</toolChain>\n\t\t\t\t\t</folderInfo>\n\t\t\t\t\t<sourceEntries>\n\t\t\t\t\t\t<entry excluding=\"dev/*|web/|sandbox/*|tools/*|res/*\" flags=\"VALUE_WORKSPACE_PATH\" kind=\"sourcePath\" name=\"\"/>\n\t\t\t\t\t</sourceEntries>\n\t\t\t\t</configuration>\n\t\t\t</storageModule>\n\t\t\t<storageModule moduleId=\"org.eclipse.cdt.core.externalSettings\">\n\t\t\t\t<externalSettings containerId=\"magma.so;cdt.managedbuild.toolchain.gnu.base.501067626\" factoryId=\"org.eclipse.cdt.core.cfg.export.settings.sipplier\">\n\t\t\t\t\t<externalSetting>\n\t\t\t\t\t\t<entry flags=\"VALUE_WORKSPACE_PATH|RESOLVED\" kind=\"includePath\" name=\"/magma.so/local/include\"/>\n\t\t\t\t\t\t<entry flags=\"RESOLVED\" kind=\"macro\" name=\"HAVE_NS_TYPE\" value=\"\"/>\n\t\t\t\t\t\t<entry flags=\"RESOLVED\" kind=\"macro\" name=\"_REENTRANT\" value=\"\"/>\n\t\t\t\t\t\t<entry flags=\"RESOLVED\" kind=\"macro\" name=\"_LARGEFILE64_SOURCE\" value=\"\"/>\n\t\t\t\t\t\t<entry flags=\"RESOLVED\" kind=\"macro\" name=\"_GNU_SOURCE\" value=\"\"/>\n\t\t\t\t\t</externalSetting>\n\t\t\t\t</externalSettings>\n\t\t\t</storageModule>\n\t\t</cconfiguration>\n\t\t<cconfiguration id=\"cdt.managedbuild.toolchain.gnu.base.1042491499.540148943.5250294.1566775600\">\n\t\t\t<storageModule buildSystemId=\"org.eclipse.cdt.managedbuilder.core.configurationDataProvider\" id=\"cdt.managedbuild.toolchain.gnu.base.1042491499.540148943.5250294.1566775600\" moduleId=\"org.eclipse.cdt.core.settings\" name=\"PProf\">\n\t\t\t\t<externalSettings/>\n\t\t\t\t<extensions>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.ELF\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GNU_ELF\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GASErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GmakeErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GLDErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.CWDLocator\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t\t<extension id=\"org.eclipse.cdt.core.GCCErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n\t\t\t\t</extensions>\n\t\t\t</storageModule>\n\t\t\t<storageModule moduleId=\"cdtBuildSystem\" version=\"4.0.0\">\n\t\t\t\t<configuration artifactName=\"${ProjName}\" buildProperties=\"\" description=\"Compile the magma daemon and the unit tests with pprof support.\" errorParsers=\"org.eclipse.cdt.core.GASErrorParser;org.eclipse.cdt.core.GmakeErrorParser;org.eclipse.cdt.core.GLDErrorParser;org.eclipse.cdt.core.CWDLocator;org.eclipse.cdt.core.GCCErrorParser\" id=\"cdt.managedbuild.toolchain.gnu.base.1042491499.540148943.5250294.1566775600\" name=\"PProf\" optionalBuildProperties=\"\" parent=\"org.eclipse.cdt.build.core.emptycfg\">\n\t\t\t\t\t<folderInfo id=\"cdt.managedbuild.toolchain.gnu.base.1042491499.540148943.5250294.1566775600.\" name=\"/\" resourcePath=\"\">\n\t\t\t\t\t\t<toolChain errorParsers=\"\" id=\"cdt.managedbuild.toolchain.gnu.base.937342472\" name=\"Linux GCC\" resourceTypeBasedDiscovery=\"true\" superClass=\"cdt.managedbuild.toolchain.gnu.base\">\n\t\t\t\t\t\t\t<targetPlatform archList=\"all\" binaryParser=\"org.eclipse.cdt.core.GNU_ELF;org.eclipse.cdt.core.ELF\" id=\"cdt.managedbuild.target.gnu.platform.base.1820591244\" name=\"Debug Platform\" osList=\"linux,hpux,aix,qnx\" superClass=\"cdt.managedbuild.target.gnu.platform.base\"/>\n\t\t\t\t\t\t\t<builder arguments=\"VERBOSE=yes\" autoBuildTarget=\"pprof\" cleanBuildTarget=\"clean\" command=\"make\" enableAutoBuild=\"true\" enableCleanBuild=\"true\" enabledIncrementalBuild=\"true\" errorParsers=\"org.eclipse.cdt.core.GmakeErrorParser;org.eclipse.cdt.core.CWDLocator\" id=\"cdt.managedbuild.target.gnu.builder.base.90132045\" incrementalBuildTarget=\"pprof\" keepEnvironmentInBuildfile=\"false\" managedBuildOn=\"false\" name=\"Gnu Make Builder\" parallelBuildOn=\"true\" parallelizationNumber=\"optimal\" stopOnErr=\"true\" superClass=\"cdt.managedbuild.target.gnu.builder.base\">\n\t\t\t\t\t\t\t\t<outputEntries>\n\t\t\t\t\t\t\t\t\t<entry flags=\"VALUE_WORKSPACE_PATH|RESOLVED\" kind=\"outputPath\" name=\"\"/>\n\t\t\t\t\t\t\t\t</outputEntries>\n\t\t\t\t\t\t\t</builder>\n\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.archiver.base.582222423\" name=\"GCC Archiver\" superClass=\"cdt.managedbuild.tool.gnu.archiver.base\"/>\n\t\t\t\t\t\t\t<tool errorParsers=\"org.eclipse.cdt.core.GCCErrorParser\" id=\"cdt.managedbuild.tool.gnu.cpp.compiler.base.421621381\" name=\"GCC C++ Compiler\" superClass=\"cdt.managedbuild.tool.gnu.cpp.compiler.base\">\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.cpp.compiler.option.include.paths.1227597701\" name=\"Include paths (-I)\" superClass=\"gnu.cpp.compiler.option.include.paths\" useByScannerDiscovery=\"false\" valueType=\"includePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/src}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma.so/local/include}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/usr/include/\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.cpp.compiler.option.preprocessor.def.1411846994\" name=\"Defined symbols (-D)\" superClass=\"gnu.cpp.compiler.option.preprocessor.def\" useByScannerDiscovery=\"false\" valueType=\"definedSymbols\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"HAVE_NS_TYPE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_REENTRANT\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_LARGEFILE64_SOURCE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_GNU_SOURCE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"MAGMA_PEDANTIC\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.cpp.compiler.option.include.files.246925923\" name=\"Include files (-include)\" superClass=\"gnu.cpp.compiler.option.include.files\" useByScannerDiscovery=\"false\" valueType=\"includeFiles\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/src/magma.h}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma/magma_check.h}&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.cpp.compiler.input.114683778\" superClass=\"cdt.managedbuild.tool.gnu.cpp.compiler.input\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool errorParsers=\"org.eclipse.cdt.core.GCCErrorParser\" id=\"cdt.managedbuild.tool.gnu.c.compiler.base.489218098\" name=\"GCC C Compiler\" superClass=\"cdt.managedbuild.tool.gnu.c.compiler.base\">\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.c.compiler.option.include.files.1587690536\" name=\"Include files (-include)\" superClass=\"gnu.c.compiler.option.include.files\" useByScannerDiscovery=\"false\" valueType=\"includeFiles\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/src/magma.h}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma/magma_check.h}&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.c.compiler.option.include.paths.1169866018\" name=\"Include paths (-I)\" superClass=\"gnu.c.compiler.option.include.paths\" useByScannerDiscovery=\"false\" valueType=\"includePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/src}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma.so/local/include}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/usr/include/\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.c.compiler.option.preprocessor.def.symbols.2082883081\" name=\"Defined symbols (-D)\" superClass=\"gnu.c.compiler.option.preprocessor.def.symbols\" useByScannerDiscovery=\"false\" valueType=\"definedSymbols\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"HAVE_NS_TYPE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_REENTRANT\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_LARGEFILE64_SOURCE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"_GNU_SOURCE\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"MAGMA_PEDANTIC\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.c.compiler.input.1165693071\" superClass=\"cdt.managedbuild.tool.gnu.c.compiler.input\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool id=\"cdt.managedbuild.tool.gnu.c.linker.base.627123254\" name=\"GCC C Linker\" superClass=\"cdt.managedbuild.tool.gnu.c.linker.base\">\n\t\t\t\t\t\t\t\t<option id=\"gnu.c.link.option.paths.1807538374\" name=\"Library search path (-L)\" superClass=\"gnu.c.link.option.paths\"/>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.c.linker.input.52470716\" superClass=\"cdt.managedbuild.tool.gnu.c.linker.input\">\n\t\t\t\t\t\t\t\t\t<additionalInput kind=\"additionalinputdependency\" paths=\"$(USER_OBJS)\"/>\n\t\t\t\t\t\t\t\t\t<additionalInput kind=\"additionalinput\" paths=\"$(LIBS)\"/>\n\t\t\t\t\t\t\t\t</inputType>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool errorParsers=\"org.eclipse.cdt.core.GLDErrorParser\" id=\"cdt.managedbuild.tool.gnu.cpp.linker.base.1825218471\" name=\"GCC C++ Linker\" superClass=\"cdt.managedbuild.tool.gnu.cpp.linker.base\">\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.cpp.link.option.libs.79443646\" name=\"Libraries (-l)\" superClass=\"gnu.cpp.link.option.libs\" valueType=\"libs\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" srcPrefixMapping=\"\" srcRootPath=\"\" value=\"&quot;${workspace_loc:/magma/magmad.so}&quot;\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.cpp.linker.input.718032630\" superClass=\"cdt.managedbuild.tool.gnu.cpp.linker.input\">\n\t\t\t\t\t\t\t\t\t<additionalInput kind=\"additionalinputdependency\" paths=\"$(USER_OBJS)\"/>\n\t\t\t\t\t\t\t\t\t<additionalInput kind=\"additionalinput\" paths=\"$(LIBS)\"/>\n\t\t\t\t\t\t\t\t</inputType>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t\t<tool errorParsers=\"org.eclipse.cdt.core.GASErrorParser\" id=\"cdt.managedbuild.tool.gnu.assembler.base.661938392\" name=\"GCC Assembler\" superClass=\"cdt.managedbuild.tool.gnu.assembler.base\">\n\t\t\t\t\t\t\t\t<option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.both.asm.option.include.paths.206817792\" name=\"Include paths (-I)\" superClass=\"gnu.both.asm.option.include.paths\" valueType=\"includePath\">\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma/check/magma}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"&quot;${workspace_loc:/magma.so/local/include}&quot;\"/>\n\t\t\t\t\t\t\t\t\t<listOptionValue builtIn=\"false\" value=\"/usr/include/\"/>\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t<inputType id=\"cdt.managedbuild.tool.gnu.assembler.input.139333568\" superClass=\"cdt.managedbuild.tool.gnu.assembler.input\"/>\n\t\t\t\t\t\t\t</tool>\n\t\t\t\t\t\t</toolChain>\n\t\t\t\t\t</folderInfo>\n\t\t\t\t\t<sourceEntries>\n\t\t\t\t\t\t<entry excluding=\"dev/*|web/|sandbox/*|tools/*|res/*\" flags=\"VALUE_WORKSPACE_PATH\" kind=\"sourcePath\" name=\"\"/>\n\t\t\t\t\t</sourceEntries>\n\t\t\t\t</configuration>\n\t\t\t</storageModule>\n\t\t\t<storageModule moduleId=\"org.eclipse.cdt.core.externalSettings\">\n\t\t\t\t<externalSettings containerId=\"magma.so;cdt.managedbuild.toolchain.gnu.base.501067626\" factoryId=\"org.eclipse.cdt.core.cfg.export.settings.sipplier\">\n\t\t\t\t\t<externalSetting>\n\t\t\t\t\t\t<entry flags=\"VALUE_WORKSPACE_PATH|RESOLVED\" kind=\"includePath\" name=\"/magma.so/local/include\"/>\n\t\t\t\t\t\t<entry flags=\"RESOLVED\" kind=\"macro\" name=\"HAVE_NS_TYPE\" value=\"\"/>\n\t\t\t\t\t\t<entry flags=\"RESOLVED\" kind=\"macro\" name=\"_REENTRANT\" value=\"\"/>\n\t\t\t\t\t\t<entry flags=\"RESOLVED\" kind=\"macro\" name=\"_LARGEFILE64_SOURCE\" value=\"\"/>\n\t\t\t\t\t\t<entry flags=\"RESOLVED\" kind=\"macro\" name=\"_GNU_SOURCE\" value=\"\"/>\n\t\t\t\t\t</externalSetting>\n\t\t\t\t</externalSettings>\n\t\t\t</storageModule>\n\t\t</cconfiguration>\n\t</storageModule>\n\t<storageModule moduleId=\"cdtBuildSystem\" version=\"4.0.0\">\n\t\t<project id=\"magma.null.699600290\" name=\"magma\"/>\n\t</storageModule>\n\t<storageModule moduleId=\"org.eclipse.cdt.core.LanguageSettingsProviders\"/>\n\t<storageModule moduleId=\"refreshScope\" versionNumber=\"2\">\n\t\t<configuration configurationName=\"Dime Check\">\n\t\t\t<resource resourceType=\"PROJECT\" workspacePath=\"/magma\"/>\n\t\t</configuration>\n\t\t<configuration configurationName=\"Magma Check\"/>\n\t\t<configuration configurationName=\"Magma Daemon\"/>\n\t\t<configuration configurationName=\"PProf\"/>\n\t\t<configuration configurationName=\"Daemon\"/>\n\t\t<configuration configurationName=\"Profiled\"/>\n\t\t<configuration configurationName=\"Check\">\n\t\t\t<resource resourceType=\"PROJECT\" workspacePath=\"/magma\"/>\n\t\t</configuration>\n\t\t<configuration configurationName=\".check\">\n\t\t\t<resource resourceType=\"PROJECT\" workspacePath=\"/magma\"/>\n\t\t</configuration>\n\t\t<configuration configurationName=\".debug\">\n\t\t\t<resource resourceType=\"PROJECT\" workspacePath=\"/magma\"/>\n\t\t</configuration>\n\t\t<configuration configurationName=\"Default\">\n\t\t\t<resource resourceType=\"FOLDER\" workspacePath=\"/magma/src\"/>\n\t\t\t<resource resourceType=\"FOLDER\" workspacePath=\"/magma/check\"/>\n\t\t</configuration>\n\t\t<configuration configurationName=\"GProf\"/>\n\t\t<configuration configurationName=\"DIME Check\"/>\n\t</storageModule>\n\t<storageModule moduleId=\"org.eclipse.cdt.internal.ui.text.commentOwnerProjectMappings\"/>\n\t<storageModule moduleId=\"org.eclipse.cdt.make.core.buildtargets\">\n\t\t<buildTargets/>\n\t</storageModule>\n\t<storageModule moduleId=\"scannerConfiguration\">\n\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"/>\n\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.base.1042491499\">\n\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"org.eclipse.cdt.make.core.GCCStandardMakePerFileProfile\"/>\n\t\t\t<profile id=\"org.eclipse.cdt.make.core.GCCStandardMakePerProjectProfile\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/${specs_file}\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfile\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/${specs_file}\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfileCPP\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/specs.cpp\" command=\"g++\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfileC\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"/home/ladar/Lavabit/magma/${workspace_loc}/.metadata/.plugins/org.eclipse.cdt.ui/${project_name}.build.log\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/specs.c\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t</scannerConfigBuildInfo>\n\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.base.1042491499.540148943;cdt.managedbuild.toolchain.gnu.base.1042491499.540148943.;cdt.managedbuild.tool.gnu.cpp.compiler.base.587691846;cdt.managedbuild.tool.gnu.cpp.compiler.input.2055610407\">\n\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"/>\n\t\t</scannerConfigBuildInfo>\n\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.base.1042491499.1834931754.853698006;cdt.managedbuild.toolchain.gnu.base.1042491499.1834931754.853698006.;cdt.managedbuild.tool.gnu.cpp.compiler.base.308986739;cdt.managedbuild.tool.gnu.cpp.compiler.input.1956353204\">\n\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"/>\n\t\t</scannerConfigBuildInfo>\n\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.base.1042491499.540148943.5250294.1566775600\">\n\t\t\t<autodiscovery enabled=\"false\" problemReportingEnabled=\"true\" selectedProfileId=\"org.eclipse.cdt.make.core.GCCStandardMakePerFileProfile\"/>\n\t\t\t<profile id=\"org.eclipse.cdt.make.core.GCCStandardMakePerProjectProfile\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/${specs_file}\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfile\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/${specs_file}\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfileCPP\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/specs.cpp\" command=\"g++\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfileC\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/specs.c\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t</scannerConfigBuildInfo>\n\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.base.1042491499.540148943.5250294\">\n\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"org.eclipse.cdt.make.core.GCCStandardMakePerFileProfile\"/>\n\t\t\t<profile id=\"org.eclipse.cdt.make.core.GCCStandardMakePerProjectProfile\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/${specs_file}\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfile\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/${specs_file}\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfileCPP\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/specs.cpp\" command=\"g++\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfileC\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/specs.c\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t</scannerConfigBuildInfo>\n\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.base.1042491499.1834931754;cdt.managedbuild.toolchain.gnu.base.1042491499.1834931754.;cdt.managedbuild.tool.gnu.c.compiler.base.450779271;cdt.managedbuild.tool.gnu.c.compiler.input.208862389\">\n\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"/>\n\t\t</scannerConfigBuildInfo>\n\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.base.1042491499.540148943.5250294.1566775600;cdt.managedbuild.toolchain.gnu.base.1042491499.540148943.5250294.1566775600.;cdt.managedbuild.tool.gnu.c.compiler.base.489218098;cdt.managedbuild.tool.gnu.c.compiler.input.1165693071\">\n\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"/>\n\t\t</scannerConfigBuildInfo>\n\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.base.1042491499.1834931754.853698006;cdt.managedbuild.toolchain.gnu.base.1042491499.1834931754.853698006.;cdt.managedbuild.tool.gnu.c.compiler.base.759786511;cdt.managedbuild.tool.gnu.c.compiler.input.1220022755\">\n\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"/>\n\t\t</scannerConfigBuildInfo>\n\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.base.1042491499.540148943.5250294;cdt.managedbuild.toolchain.gnu.base.1042491499.540148943.5250294.;cdt.managedbuild.tool.gnu.cpp.compiler.base.468208981;cdt.managedbuild.tool.gnu.cpp.compiler.input.966260355\">\n\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"/>\n\t\t</scannerConfigBuildInfo>\n\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.base.1042491499.540148943\">\n\t\t\t<autodiscovery enabled=\"false\" problemReportingEnabled=\"true\" selectedProfileId=\"org.eclipse.cdt.make.core.GCCStandardMakePerFileProfile\"/>\n\t\t\t<profile id=\"org.eclipse.cdt.make.core.GCCStandardMakePerProjectProfile\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/${specs_file}\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfile\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/${specs_file}\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfileCPP\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/specs.cpp\" command=\"g++\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfileC\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/specs.c\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t</scannerConfigBuildInfo>\n\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.base.1042491499.1834931754.853698006\">\n\t\t\t<autodiscovery enabled=\"false\" problemReportingEnabled=\"true\" selectedProfileId=\"org.eclipse.cdt.make.core.GCCStandardMakePerFileProfile\"/>\n\t\t\t<profile id=\"org.eclipse.cdt.make.core.GCCStandardMakePerProjectProfile\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/${specs_file}\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfile\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/${specs_file}\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfileCPP\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/specs.cpp\" command=\"g++\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfileC\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/specs.c\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t</scannerConfigBuildInfo>\n\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.base.1042491499.540148943;cdt.managedbuild.toolchain.gnu.base.1042491499.540148943.;cdt.managedbuild.tool.gnu.c.compiler.base.832138411;cdt.managedbuild.tool.gnu.c.compiler.input.1278104211\">\n\t\t\t<autodiscovery enabled=\"false\" problemReportingEnabled=\"true\" selectedProfileId=\"org.eclipse.cdt.make.core.GCCStandardMakePerFileProfile\"/>\n\t\t</scannerConfigBuildInfo>\n\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.base.1042491499.1834931754;cdt.managedbuild.toolchain.gnu.base.1042491499.1834931754.;cdt.managedbuild.tool.gnu.cpp.compiler.base.566685175;cdt.managedbuild.tool.gnu.cpp.compiler.input.998261908\">\n\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"/>\n\t\t</scannerConfigBuildInfo>\n\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.base.1042491499;cdt.managedbuild.toolchain.gnu.base.1042491499.748127844;cdt.managedbuild.tool.gnu.c.compiler.base.404305589;cdt.managedbuild.tool.gnu.c.compiler.input.102438972\">\n\t\t\t<autodiscovery enabled=\"false\" problemReportingEnabled=\"true\" selectedProfileId=\"org.eclipse.cdt.make.core.GCCStandardMakePerFileProfile\"/>\n\t\t</scannerConfigBuildInfo>\n\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.base.1042491499;cdt.managedbuild.toolchain.gnu.base.1042491499.748127844;cdt.managedbuild.tool.gnu.cpp.compiler.base.1861641414;cdt.managedbuild.tool.gnu.cpp.compiler.input.980503967\">\n\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"/>\n\t\t</scannerConfigBuildInfo>\n\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.base.1042491499.1834931754\">\n\t\t\t<autodiscovery enabled=\"false\" problemReportingEnabled=\"true\" selectedProfileId=\"org.eclipse.cdt.make.core.GCCStandardMakePerFileProfile\"/>\n\t\t\t<profile id=\"org.eclipse.cdt.make.core.GCCStandardMakePerProjectProfile\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/${specs_file}\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.make.core.GCCStandardMakePerFileProfile\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"/home/ladar/Lavabit/magma/${workspace_loc}/.metadata/.plugins/org.eclipse.cdt.ui/${project_name}.build.log\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"makefileGenerator\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD\" command=\"\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfile\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/${specs_file}\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfileCPP\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/specs.cpp\" command=\"g++\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t\t<profile id=\"org.eclipse.cdt.managedbuilder.core.GCCManagedMakePerProjectProfileC\">\n\t\t\t\t<buildOutputProvider>\n\t\t\t\t\t<openAction enabled=\"true\" filePath=\"/home/ladar/Lavabit/magma/${workspace_loc}/.metadata/.plugins/org.eclipse.cdt.ui/${project_name}.build.log\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</buildOutputProvider>\n\t\t\t\t<scannerInfoProvider id=\"specsFile\">\n\t\t\t\t\t<runAction arguments=\"-E -P -v -dD ${plugin_state_location}/specs.c\" command=\"gcc\" useDefault=\"true\"/>\n\t\t\t\t\t<parser enabled=\"true\"/>\n\t\t\t\t</scannerInfoProvider>\n\t\t\t</profile>\n\t\t</scannerConfigBuildInfo>\n\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.base.1042491499.540148943.5250294;cdt.managedbuild.toolchain.gnu.base.1042491499.540148943.5250294.;cdt.managedbuild.tool.gnu.c.compiler.base.366318603;cdt.managedbuild.tool.gnu.c.compiler.input.964770294\">\n\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"/>\n\t\t</scannerConfigBuildInfo>\n\t\t<scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.base.1042491499.540148943.5250294.1566775600;cdt.managedbuild.toolchain.gnu.base.1042491499.540148943.5250294.1566775600.;cdt.managedbuild.tool.gnu.cpp.compiler.base.421621381;cdt.managedbuild.tool.gnu.cpp.compiler.input.114683778\">\n\t\t\t<autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"/>\n\t\t</scannerConfigBuildInfo>\n\t</storageModule>\n</cproject>"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.08984375,
          "content": "README linguist-language=Markdown\nweb/* linguist-vendored=true\nres/* linguist-vendored=true\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.171875,
          "content": "\n# SQL Files Generated by Schema Installer\nres/sql/Start.sql\nres/sql/Hostname.sql\n\n# Sandbox Data Leftover from Testing\n/sandbox/logs/*\n/sandbox/spool/*\n/sandbox/virus/*\n/sandbox/storage/*\n/sandbox/etc/dkim.localhost.localdomain.pem\n/sandbox/etc/dkim.localhost.localdomain.pub\n/sandbox/etc/localhost.localdomain.pem\n\n# Magma Build Directories\n/.deps/\n/.objs/\n\n# Bundled Dependency Directories\n/lib/logs/\n/lib/local/\n/lib/objects/\n/lib/sources/\n\n# Bundled Dependency Test Tool\n/lib/check/magma.open.check\n\n# Compiled Binaries\n/magmad\n/magmad.a\n/magmad.so\n/magmad.check\n\n# Stripped Binaries\n/magmad.stripped\n/magmad.so.stripped\n/magmad.check.stripped\n\n# Crypto Tools\n/dime\n/signet\n/genrec\n/dime.check\n\n# Tool Compiler Artifacts and Binaries\n/dev/tools/pwtool/pwtool\n/dev/tools/runner/runner\n/dev/tools/testde/testde\n/dev/tools/lockdown/lockdown\n/dev/tools/shabench/shabench\n\n# Doxygen Build Artifacts\n/dev/docs/html/\n/dev/docs/latex/\n\n# Profiler Artifacts and Binaries\n/gmon.out\n/callgrind.out\n/massif.out.*\n/cachegrind.out.*\n/magmad.pprof.out\n/magmad.gprof.out.*\n/magmad.check.pprof.out\n/magmad.check.gprof.out.*\n\n/magmad.gprof\n/magmad.gprof.so\n/magmad.check.gprof\n\n/magmad.pprof\n/magmad.check.pprof\n\n"
        },
        {
          "name": ".project",
          "type": "blob",
          "size": 3.2578125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<projectDescription>\n\t<name>magma</name>\n\t<comment></comment>\n\t<projects>\n\t\t<project>magma.so</project>\n\t</projects>\n\t<buildSpec>\n\t\t<buildCommand>\n\t\t\t<name>org.eclipse.cdt.managedbuilder.core.genmakebuilder</name>\n\t\t\t<arguments>\n\t\t\t\t<dictionary>\n\t\t\t\t\t<key>?name?</key>\n\t\t\t\t\t<value></value>\n\t\t\t\t</dictionary>\n\t\t\t\t<dictionary>\n\t\t\t\t\t<key>org.eclipse.cdt.make.core.append_environment</key>\n\t\t\t\t\t<value>true</value>\n\t\t\t\t</dictionary>\n\t\t\t\t<dictionary>\n\t\t\t\t\t<key>org.eclipse.cdt.make.core.autoBuildTarget</key>\n\t\t\t\t\t<value>magmad.check</value>\n\t\t\t\t</dictionary>\n\t\t\t\t<dictionary>\n\t\t\t\t\t<key>org.eclipse.cdt.make.core.buildArguments</key>\n\t\t\t\t\t<value>VERBOSE=yes -k -j8</value>\n\t\t\t\t</dictionary>\n\t\t\t\t<dictionary>\n\t\t\t\t\t<key>org.eclipse.cdt.make.core.buildCommand</key>\n\t\t\t\t\t<value>make</value>\n\t\t\t\t</dictionary>\n\t\t\t\t<dictionary>\n\t\t\t\t\t<key>org.eclipse.cdt.make.core.cleanBuildTarget</key>\n\t\t\t\t\t<value>clean</value>\n\t\t\t\t</dictionary>\n\t\t\t\t<dictionary>\n\t\t\t\t\t<key>org.eclipse.cdt.make.core.contents</key>\n\t\t\t\t\t<value>org.eclipse.cdt.make.core.activeConfigSettings</value>\n\t\t\t\t</dictionary>\n\t\t\t\t<dictionary>\n\t\t\t\t\t<key>org.eclipse.cdt.make.core.enableAutoBuild</key>\n\t\t\t\t\t<value>true</value>\n\t\t\t\t</dictionary>\n\t\t\t\t<dictionary>\n\t\t\t\t\t<key>org.eclipse.cdt.make.core.enableCleanBuild</key>\n\t\t\t\t\t<value>true</value>\n\t\t\t\t</dictionary>\n\t\t\t\t<dictionary>\n\t\t\t\t\t<key>org.eclipse.cdt.make.core.enableFullBuild</key>\n\t\t\t\t\t<value>true</value>\n\t\t\t\t</dictionary>\n\t\t\t\t<dictionary>\n\t\t\t\t\t<key>org.eclipse.cdt.make.core.fullBuildTarget</key>\n\t\t\t\t\t<value>magmad.check</value>\n\t\t\t\t</dictionary>\n\t\t\t\t<dictionary>\n\t\t\t\t\t<key>org.eclipse.cdt.make.core.stopOnError</key>\n\t\t\t\t\t<value>false</value>\n\t\t\t\t</dictionary>\n\t\t\t\t<dictionary>\n\t\t\t\t\t<key>org.eclipse.cdt.make.core.useDefaultBuildCmd</key>\n\t\t\t\t\t<value>false</value>\n\t\t\t\t</dictionary>\n\t\t\t</arguments>\n\t\t</buildCommand>\n\t\t<buildCommand>\n\t\t\t<name>org.eclipse.cdt.managedbuilder.core.ScannerConfigBuilder</name>\n\t\t\t<arguments>\n\t\t\t</arguments>\n\t\t</buildCommand>\n\t</buildSpec>\n\t<natures>\n\t\t<nature>org.eclipse.cdt.core.cnature</nature>\n\t\t<nature>org.eclipse.cdt.managedbuilder.core.managedBuildNature</nature>\n\t\t<nature>org.eclipse.cdt.managedbuilder.core.ScannerConfigNature</nature>\n\t\t<nature>org.eclipse.cdt.core.ccnature</nature>\n\t</natures>\n\t<filteredResources>\n\t\t<filter>\n\t\t\t<id>1488324625766</id>\n\t\t\t<name></name>\n\t\t\t<type>30</type>\n\t\t\t<matcher>\n\t\t\t\t<id>org.eclipse.ui.ide.multiFilter</id>\n\t\t\t\t<arguments>1.0-projectRelativePath-matches-false-true-lib/local/mysql-test/*</arguments>\n\t\t\t</matcher>\n\t\t</filter>\n\t\t<filter>\n\t\t\t<id>1488324625771</id>\n\t\t\t<name></name>\n\t\t\t<type>30</type>\n\t\t\t<matcher>\n\t\t\t\t<id>org.eclipse.ui.ide.multiFilter</id>\n\t\t\t\t<arguments>1.0-projectRelativePath-matches-false-true-lib/sources/mysql/mysql-test/*</arguments>\n\t\t\t</matcher>\n\t\t</filter>\n\t\t<filter>\n\t\t\t<id>1488324625777</id>\n\t\t\t<name></name>\n\t\t\t<type>30</type>\n\t\t\t<matcher>\n\t\t\t\t<id>org.eclipse.ui.ide.multiFilter</id>\n\t\t\t\t<arguments>1.0-projectRelativePath-matches-false-true-lib/sources/*</arguments>\n\t\t\t</matcher>\n\t\t</filter>\n\t\t<filter>\n\t\t\t<id>1488324625782</id>\n\t\t\t<name></name>\n\t\t\t<type>30</type>\n\t\t\t<matcher>\n\t\t\t\t<id>org.eclipse.ui.ide.multiFilter</id>\n\t\t\t\t<arguments>1.0-projectRelativePath-matches-false-true-dev/tools/*</arguments>\n\t\t\t</matcher>\n\t\t</filter>\n\t</filteredResources>\n</projectDescription>\n"
        },
        {
          "name": ".pydevproject",
          "type": "blob",
          "size": 0.27734375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?><?eclipse-pydev version=\"1.0\"?><pydev_project>\n<pydev_property name=\"org.python.pydev.PYTHON_PROJECT_VERSION\">python 2.7</pydev_property>\n<pydev_property name=\"org.python.pydev.PYTHON_PROJECT_INTERPRETER\">Default</pydev_property>\n</pydev_project>"
        },
        {
          "name": ".settings",
          "type": "tree",
          "content": null
        },
        {
          "name": "COPYRIGHT",
          "type": "blob",
          "size": 1.1123046875,
          "content": "Most of source code contained in this directory was developed by Ladar Levison (with help from\nhis friends) and Lavabit LLC. All rights under the applicable copyright laws are reserved. For\ninformation on obtaining a license other than the one included in the LICENSE file (the AGPL)\nplease contact the Lavabit customer support team.\n\nPlease note that a handful of folders contain a number of dependencies which have been bundled\nfor convenience. These bundled dependencies are owned by their respective copyright holders, and\ntheir usage is governed by the applicable licences. The folders containing such resources include,\nbut may not be limited to, lib/archives, lib/sources, res/fonts, web/js/plugins, and the web/js/test\n(the qunit sub folder, and the jshint.js file). Other third party web dependencies have been\nplaced in the res/webmail folder.\n\nPlease note that by submitting code to the  magma and libdime projects, you are granting Lavabit LLC \nthe use of those contributions, in perpetuity, under the current license, and possibly a different\nlicense in the future.\n\nThank you.\n\nLavabit LLC\n(972) 827-8086\nhttps://lavabit.com\n"
        },
        {
          "name": "INSTALL",
          "type": "blob",
          "size": 3.1982421875,
          "content": "#!/bin/bash\n# This script is targeting CentOS release 6.5\n\nreadonly PROGNAME=$(basename $0)\n\n# Usage\nusage () {\n\tcat <<- EOF\n\tUsage: $PROGNAME -d <install_directory> -u <mysql_user> -p <mysql_password> -s <mysql_schema>\n\t\n\tInstalls Magma Classic to the provided directory\n\n\tOPTIONS:\n\t  -d        directory to install magma to\n\t  -u        mysql user\n\t  -p        mysql password\n\t  -s        mysql schema\n\n\tExample: $PROGNAME -d ~/ -u magma -p volcano -s Lavabit\n\n\tEOF\n}\n\n# Process user input\nwhile getopts \":d:u:p:s:\" opt; do\n    case $opt in\n        d)\n            export BASE_DIR=$(readlink -m \"$OPTARG/magma\")\n            ;;\n        u)\n            export MYSQL_USER=\"$OPTARG\"\n            ;;\n        p)\n            export MYSQL_PASSWORD=\"$OPTARG\"\n            ;;\n        s)\n            export MYSQL_SCHEMA=\"$OPTARG\"\n            ;;\n        \\?)\n            echo \"Invalid option: -$OPTARG\" >&2\n            exit 1\n            ;;\n        :)\n            echo \"Option -$OPTARG requires an argument\" >&2\n            exit 1\n            ;;\n    esac\ndone\n\n\nif [ -z \"$BASE_DIR\" \\\n\t-o -z \"$MYSQL_USER\" \\\n\t-o -z \"$MYSQL_PASSWORD\" \\\n\t-o -z \"$MYSQL_SCHEMA\" ]; then\n\tusage\n\techo \"None of the user input is optional\"\n\texit 1\nfi\n\nexport SALT=`echo \"$(dd if=/dev/urandom bs=33 count=1 | base64 --wrap=300)\"`\nexport SESSION=`echo \"$(dd if=/dev/urandom bs=33 count=1 | base64 --wrap=300)\"`\n\n# Check for prerequisites\nif [ ! -e /etc/init.d/mysqld ]; then\n\techo \"Can't find /etc/init.d/mysqld\"\n\techo \"Is mysql-server installed?\"\n\texit 1\nfi\n\nif [ ! -e /etc/init.d/memcached ]; then\n\techo \"Can't find /etc/init.d/memcached\"\n\techo \"Is memcached installed?\"\n\texit 1\nfi\n\nif [ ! -e /tmp/mysql.sock ]; then\n\tif [ -S /var/lib/mysql/mysql.sock ]; then\n\t\techo \"Creating a link to the local mysql socket\"\n\t\techo \"You may need to enter the root user password\"\n\t\tsu - -c 'ln -s /var/lib/mysql/mysql.sock /tmp/mysql.sock'\n\telse\n\t\techo \"/var/lib/mysql/mysql.sock is not a Socket file\"\n\t\techo \"Is mysql-server installed?\"\n\t\texit 1\n\tfi\nfi\n\n# Check limits.conf for our entry\ngrep \"*                hard    memlock         1024\" /etc/security/limits.conf\n\nif [ $? -ne 0 ]; then\n\techo \"Adding entries to /etc/security/limits.conf\"\n\techo \"You may need to enter the root user password\"\n\tsu - -c 'printf \"*                hard    memlock         1024\\n*                soft    memlock         1024\" >> /etc/security/limits.conf'\nfi\n\n# Check user is running script from inside the tarball\nif [ ! -d scripts/ ]; then\n\techo \"Please run this script from the same directory as magma/\"\n\texit 1\nfi\n\n# Build magma.config\nif [ ! -e res/magma.config.stub ]; then\n\techo \"Can't find magma.config.stub file\"\n\texit 1\nfi\n\n# Substitute the placeholders in magma.config.stub with user input\nenvsubst < res/magma.config.stub > magma.config\n\n# Reset database to factory defaults\nscripts/database/schema.init.sh $MYSQL_USER $MYSQL_PASSWORD $MYSQL_SCHEMA\n\nif [ $? -ne 0 ]; then\n\techo \"Resetting the database failed\"\n\texit 1\nfi\n\n# Generate expected directories\nif [ ! -d \"$BASE_DIR\" ]; then\n\tmkdir -p \"${BASE_DIR}/logs/\"\n\tmkdir -p \"${BASE_DIR}/spool/\"\n\tmkdir -p \"${BASE_DIR}/storage/\"\n\tmkdir -p \"${BASE_DIR}/servers/local/\"\nfi\n\n# Final step is to put everything in place\ncp -rf bin res scripts ${BASE_DIR}/.\nmv -f magma.config ${BASE_DIR}/.\n\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 31.599609375,
          "content": "                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     "
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 28.73046875,
          "content": "#!/usr/bin/make\n#\n# The Magma Makefile\n#\n#########################################################################\n\nTOPDIR                        = $(realpath .)\nMFLAGS                        =\nMAKEFLAGS                     = --output-sync=target\n\n# Identity of this package.\nPACKAGE_NAME                  = Magma Daemon\nPACKAGE_TARNAME               = magma\nPACKAGE_VERSION               = 7.0\nPACKAGE_STRING                = $(PACKAGE_NAME) $(PACKAGE_VERSION)\nPACKAGE_BUGREPORT             = support@lavabit.com\nPACKAGE_URL                   = https://lavabit.com\n\nMAGMA_PROGRAM                 = $(addsuffix $(EXEEXT), magmad)\nMAGMA_CHECK_PROGRAM           = $(addsuffix $(EXEEXT), magmad.check)\nMAGMA_SHARED_LIBRARY          = $(addsuffix $(DYNLIBEXT), magmad)\nMAGMA_STATIC_LIBRARY          = $(addsuffix $(STATLIBEXT), magmad)\n\nMAGMA_PROGRAM_GPROF           = $(addsuffix $(EXEEXT), magmad.gprof)\nMAGMA_CHECK_PROGRAM_GPROF     = $(addsuffix $(EXEEXT), magmad.check.gprof)\n\nMAGMA_PROGRAM_PPROF           = $(addsuffix $(EXEEXT), magmad.pprof)\nMAGMA_CHECK_PROGRAM_PPROF     = $(addsuffix $(EXEEXT), magmad.check.pprof)\n\nMAGMA_PROGRAM_STRIPPED        = $(addsuffix .stripped, $(MAGMA_PROGRAM))\nMAGMA_CHECK_PROGRAM_STRIPPED  = $(addsuffix .stripped, $(MAGMA_CHECK_PROGRAM))\nMAGMA_SHARED_LIBRARY_STRIPPED = $(addsuffix .stripped, $(MAGMA_SHARED_LIBRARY))\nMAGMA_STATIC_LIBRARY_STRIPPED = $(addsuffix .stripped, $(MAGMA_STATIC_LIBRARY))\n\nDIME_PROGRAM                  = $(addsuffix $(EXEEXT), dime)\nSIGNET_PROGRAM                = $(addsuffix $(EXEEXT), signet)\nGENREC_PROGRAM                = $(addsuffix $(EXEEXT), genrec)\nDIME_CHECK_PROGRAM            = $(addsuffix $(EXEEXT), dime.check)\n\n# Source Files\nBUILD_SRCFILES                = src/engine/status/build.c\n\nMAGMA_STATIC                  =\nMAGMA_DYNAMIC                 = -lrt -ldl -lpthread -lresolv\nMAGMA_SRCDIRS                 = $(shell find src -type d -print)\nMAGMA_SRCFILES                = $(filter-out $(FILTERED_SRCFILES), $(foreach dir, $(MAGMA_SRCDIRS), $(wildcard $(dir)/*.c)))\n\nMAGMA_CHECK_STATIC            = $(MAGMA_STATIC) \\\n                                $(TOPDIR)/lib/local/lib/libcheck$(STATLIBEXT)\nMAGMA_CHECK_DYNAMIC           = $(MAGMA_DYNAMIC) -lm\nMAGMA_CHECK_SRCDIRS           = $(shell find check/magma -type d -print)\nMAGMA_CHECK_SRCFILES          = $(foreach dir, $(MAGMA_CHECK_SRCDIRS), $(wildcard $(dir)/*.c))\n\nDIME_SRCDIRS                  = $(shell find src/ tools/dime -type d -print)\nDIME_SRCFILES                 = $(filter-out $(FILTERED_SRCFILES), $(foreach dir, $(DIME_SRCDIRS), $(wildcard $(dir)/*.c)))\nDIME_STATIC                   = $(TOPDIR)/lib/local/lib/libz$(STATLIBEXT) \\\n                                $(TOPDIR)/lib/local/lib/libssl$(STATLIBEXT) \\\n                                $(TOPDIR)/lib/local/lib/libcrypto$(STATLIBEXT) \\\n                                $(TOPDIR)/lib/local/lib/libutf8proc$(STATLIBEXT)\n\nSIGNET_SRCDIRS                = $(shell find src/ tools/signet -type d -print)\nSIGNET_SRCFILES               = $(filter-out $(FILTERED_SRCFILES), $(foreach dir, $(SIGNET_SRCDIRS), $(wildcard $(dir)/*.c)))\nSIGNET_STATIC                 = $(TOPDIR)/lib/local/lib/libz$(STATLIBEXT) \\\n                                $(TOPDIR)/lib/local/lib/libssl$(STATLIBEXT) \\\n                                $(TOPDIR)/lib/local/lib/libcrypto$(STATLIBEXT) \\\n                                $(TOPDIR)/lib/local/lib/libutf8proc$(STATLIBEXT)\n\nGENREC_SRCDIRS                = $(shell find src/ tools/genrec -type d -print)\nGENREC_SRCFILES               = $(filter-out $(FILTERED_SRCFILES), $(foreach dir, $(GENREC_SRCDIRS), $(wildcard $(dir)/*.c)))\nGENREC_STATIC                 = $(TOPDIR)/lib/local/lib/libz$(STATLIBEXT) \\\n                                $(TOPDIR)/lib/local/lib/libssl$(STATLIBEXT) \\\n                                $(TOPDIR)/lib/local/lib/libcrypto$(STATLIBEXT) \\\n                                $(TOPDIR)/lib/local/lib/libutf8proc$(STATLIBEXT)\n\nDIME_CHECK_DYNAMIC            = $(MAGMA_DYNAMIC) -lstdc++\nDIME_CHECK_CPPDIRS            = $(shell find check/dime -type d -print)\nDIME_CHECK_SRCDIRS            = $(shell find src/ check/dime -type d -print)\nDIME_CHECK_CPPFILES           = $(foreach dir, $(DIME_CHECK_CPPDIRS), $(wildcard $(dir)/*.cpp))\nDIME_CHECK_SRCFILES           = $(filter-out $(FILTERED_SRCFILES), $(foreach dir, $(DIME_CHECK_SRCDIRS), $(wildcard $(dir)/*.c)))\nDIME_CHECK_STATIC             = $(MAGMA_STATIC) \\\n                                $(TOPDIR)/lib/local/lib/libz$(STATLIBEXT) \\\n                                $(TOPDIR)/lib/local/lib/libssl$(STATLIBEXT) \\\n                                $(TOPDIR)/lib/local/lib/libcrypto$(STATLIBEXT) \\\n                                $(TOPDIR)/lib/local/lib/libutf8proc$(STATLIBEXT) \\\n                                $(TOPDIR)/lib/sources/googtest/lib/.libs/libgtest$(STATLIBEXT)\n\nFILTERED_SRCFILES             = src/providers/dime/ed25519/test.c \\\n                                src/providers/dime/ed25519/test-internals.c \\\n                                src/providers/dime/ed25519/fuzz/curve25519-ref10.c \\\n                                src/providers/dime/ed25519/fuzz/ed25519-donna-sse2.c \\\n                                src/providers/dime/ed25519/fuzz/fuzz-curve25519.c \\\n                                src/providers/dime/ed25519/fuzz/ed25519-donna.c \\\n                                src/providers/dime/ed25519/fuzz/ed25519-ref10.c \\\n                                src/providers/dime/ed25519/fuzz/fuzz-ed25519.c\n\n#PACKAGE_DEPENDENCIES         = $(MAGMA_SHARED_LIBRARY) $(MAGMA_STATIC) $(filter-out $(MAGMA_STATIC), $(MAGMA_CHECK_STATIC))\n#PACKAGE_DEPENDENCIES          = $(MAGMA_STATIC) $(filter-out $(MAGMA_STATIC), $(MAGMA_CHECK_STATIC))\n\n\n# Bundled Dependency Include Paths\nINCDIR                        = $(TOPDIR)/lib/local/include\nMAGMA_INCDIRS                 = spf2/ mysql/ openssl/ lzo/ libxml2/ libmemcached/ opendkim/ dspam/ freetype2/\nMAGMA_CHECK_INCDIRS           =\n\nMAGMA_CINCLUDES               = -Isrc -Isrc/providers -I$(INCDIR) $(addprefix -I,$(MAGMA_INCLUDE_ABSPATHS))\nDIME_CHECK_CINCLUDES          = $(MAGMA_CINCLUDES)\nMAGMA_CHECK_CINCLUDES         = -Icheck/magma \\\n                                -Ilib/local/include/ \\\n                                $(MAGMA_CINCLUDES) \\\n                                $(addprefix -I,$(MAGMA_CHECK_INCLUDE_ABSPATHS))\nDIME_CHECK_CPPINCLUDES        = -Icheck/dime \\\n                                -Ilib/sources/googtest/include/ \\\n                                -Ilib/sources/googtest/ \\\n                                -Ilib/sources/googtap/src/ \\\n                                $(MAGMA_CINCLUDES)\n\nCDEFINES                      = -D_REENTRANT -D_GNU_SOURCE -D_LARGEFILE64_SOURCE \\\n                                -DHAVE_NS_TYPE -DFORTIFY_SOURCE=2 -DMAGMA_PEDANTIC\nCDEFINES.build.c              = -DMAGMA_VERSION=\\\"$(MAGMA_VERSION)\\\" \\\n                                -DMAGMA_COMMIT=\\\"$(MAGMA_COMMIT)\\\" \\\n                                -DMAGMA_TIMESTAMP=\\\"$(MAGMA_TIMESTAMP)\\\"\n\nCPPDEFINES                    = $(CDEFINES) -DGTEST_TAP_PRINT_TO_STDOUT -DGTEST_HAS_PTHREAD=1\n\n# Hidden Directory for Dependency Files\nDEPDIR                        = .deps\nDIME_DEPFILES                 = $(patsubst %.c,$(DEPDIR)/%.d,$(DIME_SRCFILES))\nMAGMA_DEPFILES                = $(patsubst %.c,$(DEPDIR)/%.d,$(MAGMA_SRCFILES))\nSIGNET_DEPFILES               = $(patsubst %.c,$(DEPDIR)/%.d,$(SIGNET_SRCFILES))\nGENREC_DEPFILES               = $(patsubst %.c,$(DEPDIR)/%.d,$(GENREC_SRCFILES))\nMAGMA_CHECK_DEPFILES          = $(patsubst %.c,$(DEPDIR)/%.d,$(MAGMA_CHECK_SRCFILES))\nDIME_CHECK_DEPFILES           = $(patsubst %.c,$(DEPDIR)/%.d,$(DIME_CHECK_SRCFILES))\nDIME_CHECK_DEPFILES          += $(patsubst %.cc,$(DEPDIR)/%.d,$(DIME_CHECK_CCFILES))\nDIME_CHECK_DEPFILES          += $(patsubst %.cpp,$(DEPDIR)/%.d,$(DIME_CHECK_CPPFILES))\n\n# Hidden Directory for Object Files\nOBJDIR                        = .objs\nMAGMA_OBJFILES                = $(patsubst %.c,$(OBJDIR)/%.o,$(MAGMA_SRCFILES))\nMAGMA_CHECK_OBJFILES          = $(patsubst %.c,$(OBJDIR)/%.o,$(MAGMA_CHECK_SRCFILES))\n\nMAGMA_PROF_OBJFILES           = $(patsubst %.c,$(OBJDIR)/%.pg.o,$(MAGMA_SRCFILES))\nMAGMA_CHECK_PROF_OBJFILES     = $(patsubst %.c,$(OBJDIR)/%.pg.o,$(MAGMA_CHECK_SRCFILES))\n\nDIME_OBJFILES                 = $(filter-out .objs/src//magma.o, $(patsubst %.c,$(OBJDIR)/%.o,$(DIME_SRCFILES)))\nSIGNET_OBJFILES               = $(filter-out .objs/src//magma.o, $(patsubst %.c,$(OBJDIR)/%.o,$(SIGNET_SRCFILES)))\nGENREC_OBJFILES               = $(filter-out .objs/src//magma.o, $(patsubst %.c,$(OBJDIR)/%.o,$(GENREC_SRCFILES)))\nDIME_CHECK_OBJFILES           = $(filter-out .objs/src//magma.o, $(patsubst %.c,$(OBJDIR)/%.o,$(DIME_CHECK_SRCFILES)))\nDIME_CHECK_OBJFILES          += $(patsubst %.cc,$(OBJDIR)/%.o,$(DIME_CHECK_CCFILES))\nDIME_CHECK_OBJFILES          += $(patsubst %.cpp,$(OBJDIR)/%.o,$(DIME_CHECK_CPPFILES))\n\n# Resolve the External Include Directory Paths\nINCLUDE_DIR_VPATH             = $(INCDIR) /usr/include /usr/local/include\nINCLUDE_DIR_SEARCH            = $(firstword $(wildcard $(addsuffix /$(1),$(subst :, ,$(INCLUDE_DIR_VPATH)))))\n\n# Generate the Absolute Directory Paths for Includes\nMAGMA_INCLUDE_ABSPATHS       += $(foreach target,$(MAGMA_INCDIRS), $(call INCLUDE_DIR_SEARCH,$(target)))\nMAGMA_CHECK_INCLUDE_ABSPATHS += $(foreach target,$(MAGMA_CHECK_INCDIRS), $(call INCLUDE_DIR_SEARCH,$(target)))\n\n# C Compiler\nifeq ($(patsubst undefined,default,$(origin CC)),default)\nCC  = gcc\nendif\n\n# C++ Preprocessor\nifeq ($(patsubst undefined,default,$(origin CPP)),default)\nCPP  = gcc\nendif\n\n# C++ Compiler\nifeq ($(patsubst undefined,default,$(origin CXX)),default)\nCXX  = gcc\nendif\n\n# Linker\nifeq ($(patsubst undefined,default,$(origin LD)),default)\nLD  = gcc\nendif\n\n# Archiver\nifeq ($(patsubst undefined,default,$(origin AR)),default)\nAR  = ar\nendif\n\n# Symbol Stripper\nifeq ($(patsubst undefined,default,$(origin STRIP)),default)\nSTRIP  = strip\nendif\n\n# File Installer\nifeq ($(patsubst undefined,default,$(origin INSTALL)),default)\nINSTALL  = install\nendif\n\n# Archive Symbol Updater\nifeq ($(patsubst undefined,default,$(origin RANLIB)),default)\nRANLIB  = ranlib\nendif\n\n# Verbosity Control\nifeq ($(patsubst undefined,default,$(origin VERBOSE)),default)\nVERBOSE  = no\nendif\n\n# Quick Dependency Builds\nifeq ($(patsubst undefined,default,$(origin QUICK)),default)\nQUICK  = yes\nendif\n\n# C Compiler Options\nCFLAGS                       ?=\nCFLAGS_WARNINGS               = -Wall -Werror -Winline -Wformat-security -Warray-bounds\nCFLAGS_PEDANTIC               = -Wextra -Wpacked -Wunreachable-code -Wformat=2\nCFLAGS_COMBINED               = -std=gnu99 -O0 -fPIC -fmessage-length=0 -ggdb3 -c $(CFLAGS_WARNINGS) -MMD $(CFLAGS)\n\n# C++ Compiler Options\nCPPFLAGS                     ?= \nCPPFLAGS_WARNINGS             = -Werror -Wall -Wextra -Wformat=2 -Wwrite-strings -Wno-format-nonliteral\nCPPFLAGS_COMBINED             = -std=c++0x $(CPPFLAGS_WARNINGS) -Wno-unused-parameter -pthread -g3 $(CPPFLAGS)\n\n# Linker Options\nLDFLAGS                      ?=\nLDFLAGS_COMBINED              = -rdynamic $(LDFLAGS)\n\n# Archiver Options\nARFLAGS                       = rcs\n\n# Strip Options\nSTRIPFLAGS                    = --strip-debug\n\n# GProf Options\nGPROF                         = -pg -finstrument-functions -fprofile-arcs -ftest-coverage\n\n# PProf Options\nPPROF                         = -lprofiler\n\n# Miscellaneous External programs\nMV                            = mv --force\nRM                            = rm --force\nRMDIR                         = rmdir --parents --ignore-fail-on-non-empty\nMKDIR                         = mkdir --parents\n\n# Control the Text Color/Weight if the TERM supports it. If no TERM is available, then\n# default to using vt100 as the terminal type.\nifdef TERM\n  RED                           = $$(tput setaf 1 || true)\n  BLUE                          = $$(tput setaf 4 || true)\n  GREEN                         = $$(tput setaf 2 || true)\n  WHITE                         = $$(tput setaf 7 || true)\n  YELLOW                        = $$(tput setaf 3 || true)\n  BOLD                          = $$(tput bold || true)\n  NORMAL                        = $$(tput sgr0 || true)\nelse\n  RED                           = $$(if [ -t 0 ]; then tput -Tvt100 setaf 1 ; else true ; fi)\n  BLUE                          = $$(if [ -t 0 ]; then tput -Tvt100 setaf 4 ; else true ; fi)\n  GREEN                         = $$(if [ -t 0 ]; then tput -Tvt100 setaf 2 ; else true ; fi)\n  WHITE                         = $$(if [ -t 0 ]; then tput -Tvt100 setaf 7 ; else true ; fi)\n  YELLOW                        = $$(if [ -t 0 ]; then tput -Tvt100 setaf 3 ; else true ; fi)\n  BOLD                          = $$(if [ -t 0 ]; then tput -Tvt100 bold ; else true ; fi)\n  NORMAL                        = $$(if [ -t 0 ]; then tput -Tvt100 sgr0 ; else true ; fi)\nendif\n\n# Calculate the version, commit and timestamp strings.\nMAGMA_REPO                    = $(strip $(shell which git 2>&1 > /dev/null && git log 2>&1 > /dev/null && echo '1'))\nifneq ($(strip $(MAGMA_REPO)),1)\nMAGMA_VERSION                := $(PACKAGE_VERSION)\nMAGMA_COMMIT                 := \"NONE\"\nelse\n# Use the number of commits since the v7.0.0 tag as the patch level.\nMAGMA_VERSION                := $(PACKAGE_VERSION).$(shell git log `git log -n 1 v7.0.0 --pretty='%H'`..`git log --pretty='%H'` --format='%H' | wc -l)\nMAGMA_COMMIT                 := $(shell git log --format=\"%H\" -n 1 | cut -c1-7)\nendif\n\nMAGMA_TIMESTAMP               = $(shell date +'%Y%m%d.%H%M')\n\nifeq ($(VERBOSE),yes)\nRUN                           =\nelse\nRUN                           = @\nendif\n\n# So we can tell the user what happened\nifdef MAKECMDGOALS\nTARGETGOAL                   += $(MAKECMDGOALS)\nelse\nTARGETGOAL                   = $(.DEFAULT_GOAL)\nendif\n\nifeq ($(OS),Windows_NT)\n  HOSTTYPE                   := \"Windows\"\n  LIBPREFIX                  :=\n  DYNLIBEXT                  := \".dll\"\n  STATLIBEXT                 := \".lib\"\n  EXEEXT                     := \".exe\"\n\n  # Alias the target names on Windows to the equivalent without the exe extension.\n  $(basename $(DIME_PROGRAM)) := $(DIME_PROGRAM)\n  $(basename $(MAGMA_PROGRAM)) := $(MAGMA_PROGRAM)\n  $(basename $(SIGNET_PROGRAM)) := $(SIGNET_PROGRAM)\n  $(basename $(GENREC_PROGRAM)) := $(GENREC_PROGRAM)\n  $(basename $(DIME_CHECK_PROGRAM)) := $(DIME_CHECK_PROGRAM)\n  $(basename $(MAGMA_CHECK_PROGRAM)) := $(MAGMA_CHECK_PROGRAM)\nelse\n  HOSTTYPE                 := $(shell uname -s)\n  LIBPREFIX                := lib\n  DYNLIBEXT                := .so\n  STATLIBEXT               := .a\n  EXEEXT                   :=\nendif\n\nall: config warning \\\n\t$(MAGMA_PROGRAM) \\\n\t$(DIME_PROGRAM) \\\n\t$(SIGNET_PROGRAM) \\\n\t$(GENREC_PROGRAM) \\\n\t$(DIME_CHECK_PROGRAM) \\\n\t$(MAGMA_CHECK_PROGRAM) \\\n\tfinished\n\nstrip: config warning \\\n\t$(MAGMA_PROGRAM_STRIPPED) \\\n\t$(MAGMA_CHECK_PROGRAM_STRIPPED) \\\n\t$(MAGMA_SHARED_LIBRARY_STRIPPED) \\\n\tfinished\n\nstripped: strip\n\nwarning:\nifeq ($(VERBOSE),no)\n\t@echo\n\t@echo 'For a more verbose output'\n\t@echo '  make '$(GREEN)'VERBOSE=yes' $(NORMAL)$(TARGETGOAL)\n\t@echo\nendif\n\nconfig:\n\t@echo\n\t@echo 'TARGET' $(TARGETGOAL)\n\t@echo 'VERBOSE' $(VERBOSE)\n\t@echo\n\t@echo 'VERSION ' $(MAGMA_VERSION)\n\t@echo 'COMMIT ' $(MAGMA_COMMIT)\n\t@echo 'DATE ' $(MAGMA_TIMESTAMP)\n\t@echo 'HOST ' $(HOSTTYPE)\n\nsetup:\nifeq ($(VERBOSE),no)\n\t@echo 'Running the '$(YELLOW)'setup'$(NORMAL)' scripts.'\n\t@dev/scripts/linkup.sh &> /dev/null\nelse\n\t@dev/scripts/linkup.sh\nendif\n\nkeys: $(MAGMA_SHARED_LIBRARY)\nifeq ($(VERBOSE),no)\n\t@echo 'Generating new '$(YELLOW)'key'$(NORMAL)' files.'\n\t@dev/scripts/builders/build.lib.sh generate &> /dev/null\nelse\n\t@dev/scripts/builders/build.lib.sh generate\nendif\n\ndocs:\nifeq ($(VERBOSE),no)\n\t@echo 'Building the '$(YELLOW)'documentation'$(NORMAL)' files.'\n\t$(RUN)dev/scripts/builders/build.docs.sh &> /dev/null\nelse\n\t@dev/scripts/builders/build.docs.sh\nendif\n\ncheck: config  \\\n\twarning \\\n\t$(MAGMA_CHECK_PROGRAM) \\\n\t$(DIME_CHECK_PROGRAM) \\\n\tfinished\n\t$(RUN)$(TOPDIR)/$(MAGMA_CHECK_PROGRAM) sandbox/etc/magma.sandbox.config\n\t$(RUN)$(TOPDIR)/$(DIME_CHECK_PROGRAM)\n\ngprof: $(MAGMA_PROGRAM_GPROF) $(MAGMA_CHECK_PROGRAM_GPROF)\n\npprof: $(MAGMA_PROGRAM_PPROF) $(MAGMA_CHECK_PROGRAM_PPROF)\n\n# If verbose mode is disabled, we only output this finished message.\nfinished:\nifeq ($(VERBOSE),no)\n\t@echo 'Finished' $(BOLD)$(GREEN)$(TARGETGOAL)$(NORMAL)\nendif\n\n#incremental: $(MAGMA_INCREMENTAL_BUILD)\n\n# Delete the compiled program along with the generated object and dependency files\nclean:\n\t@$(RM) $(MAGMA_PROGRAM) $(DIME_PROGRAM) $(SIGNET_PROGRAM) $(GENREC_PROGRAM) $(MAGMA_CHECK_PROGRAM) $(DIME_CHECK_PROGRAM)\n\t@$(RM) $(MAGMA_PROGRAM_PPROF) $(MAGMA_CHECK_PROGRAM_PPROF) $(MAGMA_PROGRAM_GPROF) $(MAGMA_CHECK_PROGRAM_GPROF)\n\t@$(RM) $(MAGMA_PROGRAM_STRIPPED) $(MAGMA_CHECK_PROGRAM_STRIPPED) $(MAGMA_SHARED_LIBRARY_STRIPPED) c\n\t@$(RM) $(MAGMA_OBJFILES) $(DIME_OBJFILES) $(SIGNET_OBJFILES) $(GENREC_OBJFILES) $(MAGMA_CHECK_OBJFILES) $(DIME_CHECK_OBJFILES) $(MAGMA_PROF_OBJFILES) $(MAGMA_CHECK_PROF_OBJFILES)\n\t@$(RM) $(MAGMA_DEPFILES) $(DIME_DEPFILES) $(SIGNET_DEPFILES) $(GENREC_DEPFILES) $(MAGMA_CHECK_DEPFILES) $(DIME_CHECK_DEPFILES)\n\t@for d in $(sort $(dir $(MAGMA_OBJFILES)) $(dir $(MAGMA_CHECK_OBJFILES)) $(dir $(DIME_OBJFILES)) $(dir $(SIGNET_OBJFILES)) $(dir $(GENREC_OBJFILES))); \\\n\t  do if test -d \"$$d\"; then $(RMDIR) \"$$d\"; fi; done\n\t@for d in $(sort $(dir $(MAGMA_DEPFILES)) $(dir $(MAGMA_CHECK_DEPFILES)) $(dir $(DIME_DEPFILES)) $(dir $(SIGNET_DEPFILES)) $(dir $(GENREC_DEPFILES))); \\\n\t  do if test -d \"$$d\"; then $(RMDIR) \"$$d\"; fi; done\n\t@$(RM) --force gmon.out callgrind.out callgraph.dot callgraph.dot.ps massif.out.* cachegrind.out.* \\\n\t  magmad.pprof.out magmad.check.pprof.out magmad.gprof.* magmad.check.gprof.*\n\t@echo 'Finished' $(BOLD)$(GREEN)$(TARGETGOAL)$(NORMAL)\n\ndistclean:\n\t@$(RM) $(MAGMA_PROGRAM) $(DIME_PROGRAM) $(SIGNET_PROGRAM) $(GENREC_PROGRAM) $(MAGMA_CHECK_PROGRAM) $(DIME_CHECK_PROGRAM)\n\t@$(RM) $(MAGMA_PROGRAM_STRIPPED) $(MAGMA_CHECK_PROGRAM_STRIPPED) $(MAGMA_SHARED_LIBRARY_STRIPPED) $(MAGMA_STATIC_LIBRARY_STRIPPED)\n\t@$(RM) $(MAGMA_PROGRAM_PPROF) $(MAGMA_CHECK_PROGRAM_PPROF) $(MAGMA_PROGRAM_GPROF) $(MAGMA_CHECK_PROGRAM_GPROF)\n\t@$(RM) $(MAGMA_OBJFILES) $(DIME_OBJFILES) $(SIGNET_OBJFILES) $(GENREC_OBJFILES) $(MAGMA_CHECK_OBJFILES) $(DIME_CHECK_OBJFILES) $(MAGMA_PROF_OBJFILES) $(MAGMA_CHECK_PROF_OBJFILES)\n\t@$(RM) $(MAGMA_DEPFILES) $(DIME_DEPFILES) $(SIGNET_DEPFILES) $(GENREC_DEPFILES) $(MAGMA_CHECK_DEPFILES) $(DIME_CHECK_DEPFILES)\n\t@$(RM) --force --recursive lib/local lib/logs lib/objects lib/sources dev/docs/html dev/docs/latex $(DEPDIR) $(OBJDIR)\n\t@$(RM) --force gmon.out callgrind.out callgraph.dot callgraph.dot.ps massif.out.* cachegrind.out.* \\\n\t  magmad.pprof.out magmad.check.pprof.out magmad.gprof.* magmad.check.gprof.*\n\t@$(RM) $(MAGMA_SHARED_LIBRARY) $(MAGMA_STATIC_LIBRARY)\n\t@echo 'Finished' $(BOLD)$(GREEN)$(TARGETGOAL)$(NORMAL)\n\n%.stripped $(addsuffix $(DYNLIBEXT), %.stripped): %\nifeq ($(VERBOSE),no)\n\t@echo 'Creating' $(RED)$@$(NORMAL)\nelse\n\t@echo\nendif\n\t$(RUN)$(STRIP) $(STRIPFLAGS) --output-format=$(shell objdump -p \"$(subst .stripped,,$@)\" | grep \"file format\" | head -1 | \\\n\tawk -F'file format' '{print $$2}' | tr --delete [:space:]) -o \"$@\" \"$(subst .stripped,,$@)\"\n\ninstall: $(MAGMA_PROGRAM) $(MAGMA_SHARED_LIBRARY)\nifeq ($(VERBOSE),no)\n\t@echo 'Installing' $(GREEN)$(MAGMA_PROGRAM)$(NORMAL)\nendif\n\t$(RUN)$(INSTALL) --mode=0755 --owner=root --group=root --context=system_u:object_r:bin_t:s0 --no-target-directory \\\n\t  $(MAGMA_PROGRAM) /usr/libexec/$(MAGMA_PROGRAM)\n\t$(RUN)$(INSTALL) --mode=0755 --owner=root --group=root --context=system_u:object_r:bin_t:s0 --no-target-directory \\\n\t  $(MAGMA_SHARED_LIBRARY) /usr/libexec/$(MAGMA_SHARED_LIBRARY)\n\n# Construct the magma daemon executable.\n$(MAGMA_PROGRAM): $(MAGMA_SHARED_LIBRARY) $(MAGMA_OBJFILES)\nifeq ($(VERBOSE),no)\n\t@echo 'Constructing' $(RED)$@$(NORMAL)\nelse\n\t@echo\nendif\n\t$(RUN)$(LD) $(LDFLAGS_COMBINED) -o '$@' $(MAGMA_OBJFILES) -Wl,--start-group $(MAGMA_DYNAMIC) $(MAGMA_STATIC) -Wl,--end-group\n\n# Construct the magma unit test executable.\n$(MAGMA_CHECK_PROGRAM): $(MAGMA_SHARED_LIBRARY) $(MAGMA_CHECK_OBJFILES) $(filter-out .objs/src/magma.o, $(MAGMA_OBJFILES)) $(MAGMA_CHECK_STATIC)\nifeq ($(VERBOSE),no)\n\t@echo 'Constructing' $(RED)$@$(NORMAL)\nendif\n\t$(RUN)$(LD) $(LDFLAGS_COMBINED) -o '$@' $(MAGMA_CHECK_OBJFILES) $(filter-out .objs/src/magma.o, $(MAGMA_OBJFILES)) -Wl,--start-group,--whole-archive $(MAGMA_CHECK_STATIC) -Wl,--no-whole-archive,--end-group $(MAGMA_CHECK_DYNAMIC)\n\n# Construct the magma daemon executable with pprof support.\n$(MAGMA_PROGRAM_PPROF): $(MAGMA_SHARED_LIBRARY) $(MAGMA_OBJFILES)\nifeq ($(VERBOSE),no)\n\t@echo 'Constructing' $(RED)$@$(NORMAL)\nelse\n\t@echo\nendif\n\t$(RUN)$(LD) $(LDFLAGS_COMBINED) -o '$@' $(MAGMA_OBJFILES) -Wl,--start-group $(MAGMA_DYNAMIC) $(PPROF) $(MAGMA_STATIC) -Wl,--end-group\n\n# Construct the magma unit test executable with pprof support.\n$(MAGMA_CHECK_PROGRAM_PPROF): $(MAGMA_SHARED_LIBRARY) $(MAGMA_CHECK_OBJFILES) $(filter-out .objs/src/magma.o, $(MAGMA_OBJFILES))\nifeq ($(VERBOSE),no)\n\t@echo 'Constructing' $(RED)$@$(NORMAL)\nendif\n\t$(RUN)$(LD) $(LDFLAGS_COMBINED) -o '$@' $(MAGMA_CHECK_OBJFILES) $(filter-out .objs/src/magma.o, $(MAGMA_OBJFILES)) -Wl,--start-group,--whole-archive $(MAGMA_CHECK_STATIC) -Wl,--no-whole-archive,--end-group $(MAGMA_CHECK_DYNAMIC) $(PPROF)\n\n# Construct the magma daemon executable with gprof support.\n$(MAGMA_PROGRAM_GPROF): $(MAGMA_SHARED_LIBRARY) $(MAGMA_PROF_OBJFILES)\nifeq ($(VERBOSE),no)\n\t@echo 'Constructing' $(RED)$@$(NORMAL)\nelse\n\t@echo\nendif\n\t$(RUN)$(LD) $(LDFLAGS_COMBINED) $(GPROF) -o '$@' $(MAGMA_PROF_OBJFILES) -Wl,--start-group $(MAGMA_DYNAMIC) $(MAGMA_STATIC) -Wl,--end-group\n\n# Construct the magma unit test executablew with gprof support.\n$(MAGMA_CHECK_PROGRAM_GPROF): $(MAGMA_SHARED_LIBRARY) $(MAGMA_CHECK_PROF_OBJFILES) $(filter-out .objs/src/magma.pg.o, $(MAGMA_PROF_OBJFILES))\nifeq ($(VERBOSE),no)\n\t@echo 'Constructing' $(RED)$@$(NORMAL)\nendif\n\t$(RUN)$(LD) $(LDFLAGS_COMBINED) $(GPROF) -o '$@' $(MAGMA_CHECK_PROF_OBJFILES) $(filter-out .objs/src/magma.pg.o, $(MAGMA_PROF_OBJFILES)) -Wl,--start-group,--whole-archive $(MAGMA_CHECK_STATIC) -Wl,--no-whole-archive,--end-group $(MAGMA_CHECK_DYNAMIC)\n\n# Construct the dime command line utility.\n$(DIME_PROGRAM): $(MAGMA_STATIC) $(DIME_OBJFILES) $(DIME_STATIC)\nifeq ($(VERBOSE),no)\n\t@echo 'Constructing' $(RED)$@$(NORMAL)\nelse\n\t@echo\nendif\n\t$(RUN)$(LD) $(LDFLAGS_COMBINED) -o '$@' $(DIME_OBJFILES) -Wl,--start-group,--whole-archive $(MAGMA_STATIC) $(DIME_STATIC) -Wl,--no-whole-archive,--end-group $(MAGMA_DYNAMIC)\n\n# Construct the signet command line utility.\n$(SIGNET_PROGRAM): $(MAGMA_STATIC) $(SIGNET_OBJFILES) $(SIGNET_STATIC)\nifeq ($(VERBOSE),no)\n\t@echo 'Constructing' $(RED)$@$(NORMAL)\nelse\n\t@echo\nendif\n\t$(RUN)$(LD) $(LDFLAGS_COMBINED) -o '$@' $(SIGNET_OBJFILES) -Wl,--start-group,--whole-archive $(MAGMA_STATIC) $(SIGNET_STATIC) -Wl,--no-whole-archive,--end-group $(MAGMA_DYNAMIC)\n\n# Construct the dime command line utility.\n$(GENREC_PROGRAM): $(MAGMA_STATIC) $(GENREC_OBJFILES) $(GENREC_STATIC)\nifeq ($(VERBOSE),no)\n\t@echo 'Constructing' $(RED)$@$(NORMAL)\nelse\n\t@echo\nendif\n\t$(RUN)$(LD) $(LDFLAGS_COMBINED) -o '$@' $(GENREC_OBJFILES) -Wl,--start-group,--whole-archive $(MAGMA_STATIC) $(GENREC_STATIC) -Wl,--no-whole-archive,--end-group $(MAGMA_DYNAMIC)\n\n# Construct the dime unit test executable.\n$(DIME_CHECK_PROGRAM): $(DIME_CHECK_OBJFILES) $(DIME_CHECK_STATIC)\nifeq ($(VERBOSE),no)\n\t@echo 'Constructing' $(RED)$@$(NORMAL)\nendif\n\t$(RUN)$(LD) $(LDFLAGS_COMBINED) -o '$@' $(DIME_CHECK_OBJFILES) -Wl,--start-group,--whole-archive $(DIME_CHECK_STATIC) -Wl,--no-whole-archive,--end-group $(DIME_CHECK_DYNAMIC)\n\n$(OBJDIR)/check/dime/%.o: check/dime/%.cpp $(MAGMA_SHARED_LIBRARY) $(DIME_CHECK_STATIC)\nifeq ($(VERBOSE),no)\n\t@echo 'Building' $(YELLOW)$<$(NORMAL)\nendif\n\t@test -d $(DEPDIR)/$(dir $<) || $(MKDIR) $(DEPDIR)/$(dir $<)\n\t@test -d $(OBJDIR)/$(dir $<) || $(MKDIR) $(OBJDIR)/$(dir $<)\n\t$(RUN)$(CPP) -o '$@' $(CPPFLAGS_COMBINED) $(CPPDEFINES) $(CPPFLAGS.$(<F)) $(CPPDEFINES.$(<F)) $(DIME_CHECK_CPPINCLUDES) -MF\"$(<:%.cpp=$(DEPDIR)/%.d)\" -MD -MP -MT\"$@\" -c \"$<\"\n\n# The Magma Unit Test Object Files\n$(OBJDIR)/check/magma/%.o: check/magma/%.c $(MAGMA_SHARED_LIBRARY)\nifeq ($(VERBOSE),no)\n\t@echo 'Building' $(YELLOW)$<$(NORMAL)\nendif\n\t@test -d $(DEPDIR)/$(dir $<) || $(MKDIR) $(DEPDIR)/$(dir $<)\n\t@test -d $(OBJDIR)/$(dir $<) || $(MKDIR) $(OBJDIR)/$(dir $<)\n\t$(RUN)$(CC) -o '$@' $(CDEFINES) $(CFLAGS_COMBINED) $(CFLAGS.$(<F)) $(CDEFINES.$(<F)) $(MAGMA_CHECK_CINCLUDES) -MF\"$(<:%.c=$(DEPDIR)/%.d)\" -MT\"$@\" \"$<\"\n\n# The Magma Daemon Object Files\n$(OBJDIR)/%.o: %.c $(MAGMA_SHARED_LIBRARY)\nifeq ($(VERBOSE),no)\n\t@echo 'Building' $(YELLOW)$<$(NORMAL)\nendif\n\t@test -d $(DEPDIR)/$(dir $<) || $(MKDIR) $(DEPDIR)/$(dir $<)\n\t@test -d $(OBJDIR)/$(dir $<) || $(MKDIR) $(OBJDIR)/$(dir $<)\n\t$(RUN)$(CC) -o '$@' $(CDEFINES) $(CFLAGS_COMBINED) $(CFLAGS.$(<F)) $(CDEFINES.$(<F)) $(MAGMA_CINCLUDES) -MF\"$(<:%.c=$(DEPDIR)/%.d)\" -MT\"$@\" \"$<\"\n\n# The Magma Unit Test Object Files (GProf Version)\n$(OBJDIR)/check/magma/%.pg.o: check/magma/%.c $(MAGMA_SHARED_LIBRARY)\nifeq ($(VERBOSE),no)\n\t@echo 'Building' $(YELLOW)$<$(NORMAL)\nendif\n\t@test -d $(DEPDIR)/$(dir $<) || $(MKDIR) $(DEPDIR)/$(dir $<)\n\t@test -d $(OBJDIR)/$(dir $<) || $(MKDIR) $(OBJDIR)/$(dir $<)\n\t$(RUN)$(CC) -o '$@' $(GPROF) $(CDEFINES) $(CFLAGS_COMBINED) $(CFLAGS.$(<F)) $(CDEFINES.$(<F)) $(MAGMA_CHECK_CINCLUDES) -MF\"$(<:%.c=$(DEPDIR)/%.d)\" -MT\"$@\" \"$<\"\n\n# The Magma Daemon Object Files (GProf Version)\n$(OBJDIR)/%.pg.o: %.c $(MAGMA_SHARED_LIBRARY)\nifeq ($(VERBOSE),no)\n\t@echo 'Building' $(YELLOW)$<$(NORMAL)\nendif\n\t@test -d $(DEPDIR)/$(dir $<) || $(MKDIR) $(DEPDIR)/$(dir $<)\n\t@test -d $(OBJDIR)/$(dir $<) || $(MKDIR) $(OBJDIR)/$(dir $<)\n\t$(RUN)$(CC) -o '$@' $(GPROF) $(CDEFINES) $(CFLAGS_COMBINED) $(CFLAGS.$(<F)) $(CDEFINES.$(<F)) $(MAGMA_CINCLUDES) -MF\"$(<:%.c=$(DEPDIR)/%.d)\" -MT\"$@\" \"$<\"\t\n\t\n## The recipes needed to build the various statically linked dependencies. They do not actually depend on the Magma shared library,\n## but include the dependency here to keep make from trying to build both at the same time.\n#$(TOPDIR)/lib/local/lib/libz$(STATLIBEXT): $(MAGMA_SHARED_LIBRARY)\n#ifeq ($(VERBOSE),no)\n#\t@echo 'Building' $(YELLOW)libz$(STATLIBEXT)$(NORMAL)\n#\t@QUICK=$(QUICK) dev/scripts/builders/build.lib.sh zlib &> /dev/null\n#else\n#\t@echo 'Building' $(YELLOW)libz$(STATLIBEXT)$(NORMAL)\n#\t@QUICK=$(QUICK) dev/scripts/builders/build.lib.sh zlib\n#endif\n#\n##$(TOPDIR)/lib/local/lib/libssl$(STATLIBEXT): $(MAGMA_SHARED_LIBRARY) | $(TOPDIR)/lib/local/lib/libcrypto$(STATLIBEXT) $(TOPDIR)/lib/local/lib/libz$(STATLIBEXT) \n#\n#$(TOPDIR)/lib/local/lib/libcrypto$(STATLIBEXT): $(MAGMA_SHARED_LIBRARY) | $(TOPDIR)/lib/local/lib/libz$(STATLIBEXT)\n#ifeq ($(VERBOSE),no)\n#\t@echo 'Building' $(YELLOW)libssl$(STATLIBEXT) libcrypto$(STATLIBEXT)$(NORMAL)\n#\t@QUICK=$(QUICK) dev/scripts/builders/build.lib.sh openssl &> /dev/null\n#else\n#\t@echo 'Building' $(YELLOW)libssl$(STATLIBEXT) libcrypto$(STATLIBEXT)$(NORMAL)\n#\t@QUICK=$(QUICK) dev/scripts/builders/build.lib.sh openssl\n#endif\n#\n#$(TOPDIR)/lib/local/lib/libutf8proc$(STATLIBEXT): $(MAGMA_SHARED_LIBRARY) | $(TOPDIR)/lib/local/lib/libcrypto$(STATLIBEXT)\n#ifeq ($(VERBOSE),no)\n#\t@echo 'Building' $(YELLOW)libutf8proc$(STATLIBEXT)$(NORMAL)\n#\t$(shell [ \"`which curl &> /dev/null; echo $$?`\" != 0 ] && QUICK=yes dev/scripts/builders/build.lib.sh curl &> /dev/null)\n#\t@QUICK=$(QUICK) dev/scripts/builders/build.lib.sh utf8proc &> /dev/null\n#else\n#\t@echo 'Building' $(YELLOW)libutf8proc$(STATLIBEXT)$(NORMAL)\n#\t$(shell [ \"`which curl &> /dev/null; echo $$?`\" != 0 ] && QUICK=yes dev/scripts/builders/build.lib.sh curl)\n#\t@QUICK=$(QUICK) dev/scripts/builders/build.lib.sh utf8proc\n#endif\n#\n#$(TOPDIR)/lib/sources/googtest/lib/.libs/libgtest$(STATLIBEXT): $(MAGMA_SHARED_LIBRARY)\n#ifeq ($(VERBOSE),no)\n#\t@echo 'Building' $(YELLOW)googtest$(STATLIBEXT)$(NORMAL)\n#\t@QUICK=$(QUICK) dev/scripts/builders/build.lib.sh googtest &> /dev/null\n#else\n#\t@echo 'Building' $(YELLOW)googtest$(STATLIBEXT)$(NORMAL)\n#\t@QUICK=$(QUICK) dev/scripts/builders/build.lib.sh googtest\n#endif\n#\n#$(TOPDIR)/lib/local/lib/libcheck$(STATLIBEXT): $(MAGMA_SHARED_LIBRARY)\n#ifeq ($(VERBOSE),no)\n#\t@echo 'Building' $(YELLOW)libcheck$(STATLIBEXT)$(NORMAL)\n#\t@QUICK=$(QUICK) dev/scripts/builders/build.lib.sh checker &> /dev/null\n#else\n#\t@echo 'Building' $(YELLOW)libcheck$(STATLIBEXT)$(NORMAL)\n#\t@QUICK=$(QUICK) dev/scripts/builders/build.lib.sh checker\n#endif\n\n$(DIME_STATIC): $(MAGMA_SHARED_LIBRARY)\n\n$(SIGNET_STATIC): $(MAGMA_SHARED_LIBRARY)\n\n$(GENREC_STATIC): $(MAGMA_SHARED_LIBRARY)\n\n$(DIME_CHECK_STATIC): $(MAGMA_SHARED_LIBRARY)\n\n$(MAGMA_CHECK_STATIC): $(MAGMA_SHARED_LIBRARY)\n\n# The recipe for creating a dynamically loaded shared library with all external dependencies required by Magma.\n$(MAGMA_SHARED_LIBRARY): dev/scripts/builders/build.lib.params.sh\n\t@echo\n\t@echo 'Building the '$(YELLOW)'bundled'$(NORMAL)' dependencies.'\n\t@QUICK=$(QUICK) dev/scripts/builders/build.lib.sh all\n\n# If we've already generated dependency files, use them to see if a rebuild is required\n-include $(MAGMA_DEPFILES) $(DIME_DEPFILES) $(SIGNET_DEPFILES) $(GENREC_DEPFILES) $(MAGMA_CHECK_DEPFILES) $(DIME_CHECK_DEPFILES)\n\n# Special Make Directives\n.SUFFIXES: .c .cc .cpp .o\n.PHONY: all strip stripped warning config finished check setup docs clean distclean install pprof gprof\n\n# vim:set softtabstop=2 shiftwidth=2 tabstop=2\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.470703125,
          "content": "# Description\n\nMagma was originally designed and developed by Ladar Levison for lavabit.com. The current release is currently under heavy development, and some of the features and functions contained herein are unstable. The SMTP, POP, and IMAP protocol handlers are reasonably mature. The DMTP, DMAP and HTTP implementations (along with the bundled webmail system) are still in development. Happy hacking.\n\n# Downloads\n\n##### Magma\n\nhttps://github.com/lavabit/magma/archive/develop.tar.gz\n\n##### Magma Development Machine, v1.0.0\n\nThe development machine is a pre-built virtual machine with a graphical desktop and various development tools, and dependencies installed.\n\nhttps://darkmail.info/downloads/dark-mail-development-machine-1.0.0.tar.gz    \nhttps://darkmail.info/downloads/dark-mail-development-machine-1.0.0.tar.gz.sha256    \n\n33808e4ed81859cb076ae879fed7ad85164a2561a1b1cd96f66f65f7e3bf7bd7\n\n##### Magma Build Machines\n\nFor those looking for a slim virtual machine pre-configured to build and run magma, consider the following Vagrant boxes which have been created specifically for that purpose. Images have been created to support the VirtualBox, Hyper-V, VMware, and libvirt Vagrant providers. An official Docker image is on the roadmap, but for the time being you might want to consider one of the community supported images. Use the appropriate command below to download and provision a Vagrant instance.\n\n```shell\n# VMware\nvagrant init lavabit/magma; vagrant up --provider vmware_desktop\n\n# VirtualBox\nvagrant init lavabit/magma; vagrant up --provider virtualbox\n\n# libvirt\nvagrant init lavabit/magma; vagrant up --provider libvirt\n\n# Hyper-V\nvagrant init lavabit/magma; vagrant up --provider hyperv\n```\n\nImages are available for alternate platforms [here](https://app.vagrantup.com/lavabit).\n\n# Credits\n\n- Ladar Levison\n- Greg Brown\n- Ivan Tolkachev\n- Princess Levison\n- Ryan Crites\n- Sean Benson\n- Stephen Watt\n- Jacob Adkins\n\nAnd the army of Kickstarter supporters who contributed to this project.\n\n# Tarball Contents\n\n```\nmagma/\n\tcheck/\n\tdev/\n\t\tdocs/\n\t\tscripts/\n\t\ttools/\n\t\t\tcryptex/\n\t\t\tmason/\n\t\t\tpwtool/\n\t\t\trand/\n\t\t\trunner/\n\t\t\tstringer/\n\t\t\ttestde/\n\tlib/\n\tres/\n\tsandbox/\n\tsrc/\n\tweb/\n\tCOPYRIGHT\n\tINSTALL\n\tLICENSE\n\tMakefile\n\tREADME.md\n```\n\n# Installation Instructions\n\nThese instructions are targeted at systems running CentOS 6.\n\n### Prerequisites\n\nInstall the dependencies (make sure that EPEL is enabled):\n\n```shell\nyum -y install gcc make autoconf automake binutils bison flex gcc-c++ gettext libtool make patch pkgconfig mysql-server memcached gettext-devel patch perl perl-Time-HiRes check check-devel ncurses-devel libbsd-devel zlib-devel valgrind valgrind-devel\n```\n\n**MySQL**\n\nTo start MySQL and configure the magma username run the commands below. The supplied password should be replaced with value unique to your environment. You may also want to limit the permissions of the magma database user to the database it will need to access. The global permission is only needed to setup the table schema.\n\n```shell\nchkconfig mysqld on && service mysqld start\n\necho \"CREATE USER 'magma'@'localhost' IDENTIFIED BY 'volcano';\" | mysql -u root\necho \"GRANT ALL PRIVILEGES ON *.* TO 'magma'@'localhost' WITH GRANT OPTION;\" | mysql -u root\n```\n\n**Memcached**\n\nTo start Memcached run the commands below.\n\n```shell\nchkconfig memcached on && service memcached start\n```\n### Compiling (The Short Way)\n\n```shell\nmake all\n```\n\n### Compiling (The Long Way)\n\nTo link up the development and build scripts run the linkup.sh. This will create a bin folder in your home directory, if it doesn't already exist, and create symbolic links to the scripts and tools used to build, run and test magma. The commands below assume the bin directory is in your PATH. If it isn't, or you simply don't want to create the symbolic links, you can also run the shell scripts directly from their location in the dev/scripts folder. To execute the linkup.sh script:\n\n```shell\nmagma/dev/scripts/linkup.sh\n```\n\nTo build the dependencies and create the magmad.so library separately, run the build.lib script. Run the script without any parameters to see the possible command line options. To compile and combine all of dependencies in a single operation:\n\n```shell\nbuild.lib all\n```\n\nThe bundled Makefile can be used to compile magma. It will detect when the dependencies haven't been compiled and run the preceeding step automatically, if necessary, as the Makefile looks for required header files in folders created by the previous step. If the Makefile has trouble finding the necessary include files, odds are its because the previous step didn't run properly. Assuming the dependencies are available, you can compile magmad and magmad.check using:\n\n```shell\nbuild.magma\nbuild.check\n```\n\nTo setup a sandbox database which can be used to run the unit tests, or experiment with magma, run (assuming the development userid is setup with permission to your database):\n\n```shell\nschema.reset\n```\n\nTo launch the magma unit tests, or magma using the sandbox configuration, run:\n\n```shell\ncheck.run\nmagma.run\n```\n\nTo download the ClamAV virus definitions into the sandbox environment, run:\n\n```shell\nfreshen.clamav\n```\n\n### Deploying\n\nTo deploy magma, run the INSTALL script. Note the INSTALL script is out of date, and will need to tweaking to operate perfectly against a copy of the current magma development branch cloned directly via git. Pull requests welcome.\n\n```shell\n./INSTALL -d ~/ -u magma -p volcano -s Lavabit\n```\n\n### Development\n\nThe best way to get an issue fixed is to create a pull request with a unit test added to the check folder which reproduces the issue and checks for the expected output. In general, please be sure to run the check.vg and magma.vg scripts before creating a pull request to make sure the newly submitted code doesn't introduce a memory leak, or invalid memory operation.\n\n\n# Webmail\n\nInside the res/pages/webmail directory is a compiled copy of the webmail code. Locate script.js file and change the magma.portalUrl = true variable to false, and it will use a set of hard coded test requests/responses. These hard coded requests, and responses are useful for checking/developing the webmail code without a running version of the magma server. Currently the files are configured to access the JSON-RPC interface using the hostname \"localhost\" and the HTTP port 10000. This should work using the default magma.config and magma.sandbox.config files.\n\nThe static files inside the res/pages/webmail folder are compiled using the files inside the web directory. See the web/WORKFLOW.md file for details.\n\n\n\n\n"
        },
        {
          "name": "check",
          "type": "tree",
          "content": null
        },
        {
          "name": "dev",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "res",
          "type": "tree",
          "content": null
        },
        {
          "name": "sandbox",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "web",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}