{
  "metadata": {
    "timestamp": 1736710039413,
    "page": 651,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "eclipse-paho/paho.mqtt.c",
      "stars": 2002,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".cproject",
          "type": "blob",
          "size": 26.4716796875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<?fileVersion 4.0.0?><cproject storage_type_id=\"org.eclipse.cdt.core.XmlProjectDescriptionStorage\">\n    \t\n    <storageModule moduleId=\"org.eclipse.cdt.core.settings\">\n        \t\t\n        <cconfiguration id=\"cdt.managedbuild.toolchain.gnu.base.2116872643\">\n            \t\t\t\n            <storageModule buildSystemId=\"org.eclipse.cdt.managedbuilder.core.configurationDataProvider\" id=\"cdt.managedbuild.toolchain.gnu.base.2116872643\" moduleId=\"org.eclipse.cdt.core.settings\" name=\"debug-native\">\n                \t\t\t\t\n                <externalSettings/>\n                \t\t\t\t\n                <extensions>\n                    \t\t\t\t\t\n                    <extension id=\"org.eclipse.cdt.core.ELF\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n                    \t\t\t\t\t\n                    <extension id=\"org.eclipse.cdt.core.GASErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n                    \t\t\t\t\t\n                    <extension id=\"org.eclipse.cdt.core.GCCErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n                    \t\t\t\t\t\n                    <extension id=\"org.eclipse.cdt.core.GmakeErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n                    \t\t\t\t\t\n                    <extension id=\"org.eclipse.cdt.core.CWDLocator\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n                    \t\t\t\t\t\n                    <extension id=\"org.eclipse.cdt.core.GLDErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n                    \t\t\t\t\n                </extensions>\n                \t\t\t\n            </storageModule>\n            \t\t\t\n            <storageModule moduleId=\"cdtBuildSystem\" version=\"4.0.0\">\n                \t\t\t\t\n                <configuration artifactName=\"${ProjName}\" buildProperties=\"\" description=\"\" id=\"cdt.managedbuild.toolchain.gnu.base.2116872643\" name=\"debug-native\" optionalBuildProperties=\"org.eclipse.cdt.docker.launcher.containerbuild.property.selectedvolumes=,org.eclipse.cdt.docker.launcher.containerbuild.property.volumes=\" parent=\"org.eclipse.cdt.build.core.emptycfg\">\n                    \t\t\t\t\t\n                    <folderInfo id=\"cdt.managedbuild.toolchain.gnu.base.2116872643.2105697674\" name=\"/\" resourcePath=\"\">\n                        \t\t\t\t\t\t\n                        <toolChain id=\"cdt.managedbuild.toolchain.gnu.base.1661896025\" name=\"cdt.managedbuild.toolchain.gnu.base\" superClass=\"cdt.managedbuild.toolchain.gnu.base\">\n                            \t\t\t\t\t\t\t\n                            <targetPlatform archList=\"all\" binaryParser=\"org.eclipse.cdt.core.ELF\" id=\"cdt.managedbuild.target.gnu.platform.base.189112861\" name=\"Debug Platform\" osList=\"linux,hpux,aix,qnx\" superClass=\"cdt.managedbuild.target.gnu.platform.base\"/>\n                            \t\t\t\t\t\t\t\n                            <builder arguments=\"cdt-build.sh\" autoBuildTarget=\"\" cleanBuildTarget=\"clean\" command=\"sh\" enableAutoBuild=\"false\" enableCleanBuild=\"true\" enabledIncrementalBuild=\"true\" id=\"cdt.managedbuild.target.gnu.builder.base.1205354372\" incrementalBuildTarget=\"\" keepEnvironmentInBuildfile=\"false\" managedBuildOn=\"false\" name=\"Gnu Make Builder\" parallelBuildOn=\"true\" parallelizationNumber=\"optimal\" superClass=\"cdt.managedbuild.target.gnu.builder.base\"/>\n                            \t\t\t\t\t\t\t\n                            <tool id=\"cdt.managedbuild.tool.gnu.archiver.base.1645786956\" name=\"GCC Archiver\" superClass=\"cdt.managedbuild.tool.gnu.archiver.base\"/>\n                            \t\t\t\t\t\t\t\n                            <tool id=\"cdt.managedbuild.tool.gnu.cpp.compiler.base.2093522624\" name=\"GCC C++ Compiler\" superClass=\"cdt.managedbuild.tool.gnu.cpp.compiler.base\">\n                                \t\t\t\t\t\t\t\t\n                                <inputType id=\"cdt.managedbuild.tool.gnu.cpp.compiler.input.58852055\" superClass=\"cdt.managedbuild.tool.gnu.cpp.compiler.input\"/>\n                                \t\t\t\t\t\t\t\n                            </tool>\n                            \t\t\t\t\t\t\t\n                            <tool id=\"cdt.managedbuild.tool.gnu.c.compiler.base.919295913\" name=\"GCC C Compiler\" superClass=\"cdt.managedbuild.tool.gnu.c.compiler.base\">\n                                \t\t\t\t\t\t\t\t\n                                <inputType id=\"cdt.managedbuild.tool.gnu.c.compiler.input.873628110\" superClass=\"cdt.managedbuild.tool.gnu.c.compiler.input\"/>\n                                \t\t\t\t\t\t\t\n                            </tool>\n                            \t\t\t\t\t\t\t\n                            <tool id=\"cdt.managedbuild.tool.gnu.c.linker.base.134024992\" name=\"GCC C Linker\" superClass=\"cdt.managedbuild.tool.gnu.c.linker.base\"/>\n                            \t\t\t\t\t\t\t\n                            <tool id=\"cdt.managedbuild.tool.gnu.cpp.linker.base.637863378\" name=\"GCC C++ Linker\" superClass=\"cdt.managedbuild.tool.gnu.cpp.linker.base\">\n                                \t\t\t\t\t\t\t\t\n                                <inputType id=\"cdt.managedbuild.tool.gnu.cpp.linker.input.126058850\" superClass=\"cdt.managedbuild.tool.gnu.cpp.linker.input\">\n                                    \t\t\t\t\t\t\t\t\t\n                                    <additionalInput kind=\"additionalinputdependency\" paths=\"$(USER_OBJS)\"/>\n                                    \t\t\t\t\t\t\t\t\t\n                                    <additionalInput kind=\"additionalinput\" paths=\"$(LIBS)\"/>\n                                    \t\t\t\t\t\t\t\t\n                                </inputType>\n                                \t\t\t\t\t\t\t\n                            </tool>\n                            \t\t\t\t\t\t\t\n                            <tool id=\"cdt.managedbuild.tool.gnu.assembler.base.1158334210\" name=\"GCC Assembler\" superClass=\"cdt.managedbuild.tool.gnu.assembler.base\">\n                                \t\t\t\t\t\t\t\t\n                                <inputType id=\"cdt.managedbuild.tool.gnu.assembler.input.1398987161\" superClass=\"cdt.managedbuild.tool.gnu.assembler.input\"/>\n                                \t\t\t\t\t\t\t\n                            </tool>\n                            \t\t\t\t\t\t\n                        </toolChain>\n                        \t\t\t\t\t\n                    </folderInfo>\n                    \t\t\t\t\t\n                    <fileInfo id=\"cdt.managedbuild.toolchain.gnu.base.2116872643.660980254\" name=\"mqttclient_module.c\" rcbsApplicability=\"disable\" resourcePath=\"test/python/mqttclient_module.c\" toolsToInvoke=\"cdt.managedbuild.tool.gnu.c.compiler.base.919295913.892752676\">\n                        \t\t\t\t\t\t\n                        <tool id=\"cdt.managedbuild.tool.gnu.c.compiler.base.919295913.892752676\" name=\"GCC C Compiler\" superClass=\"cdt.managedbuild.tool.gnu.c.compiler.base.919295913\">\n                            \t\t\t\t\t\t\t\n                            <option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.c.compiler.option.include.paths.1043418401\" name=\"Include paths (-I)\" superClass=\"gnu.c.compiler.option.include.paths\" valueType=\"includePath\">\n                                \t\t\t\t\t\t\t\t\n                                <listOptionValue builtIn=\"false\" value=\"/usr/include/python2.6\"/>\n                                \t\t\t\t\t\t\t\n                            </option>\n                            \t\t\t\t\t\t\t\n                            <inputType id=\"cdt.managedbuild.tool.gnu.c.compiler.input.1471037566\" superClass=\"cdt.managedbuild.tool.gnu.c.compiler.input\"/>\n                            \t\t\t\t\t\t\n                        </tool>\n                        \t\t\t\t\t\n                    </fileInfo>\n                    \t\t\t\t\t\n                    <sourceEntries>\n                        \t\t\t\t\t\t\n                        <entry flags=\"VALUE_WORKSPACE_PATH\" kind=\"sourcePath\" name=\"src\"/>\n                        \t\t\t\t\t\n                    </sourceEntries>\n                    \t\t\t\t\n                </configuration>\n                \t\t\t\n            </storageModule>\n            \t\t\t\n            <storageModule moduleId=\"org.eclipse.cdt.core.externalSettings\"/>\n            \t\t\n        </cconfiguration>\n        \t\t\n        <cconfiguration id=\"cdt.managedbuild.toolchain.gnu.base.2116872643.128299804\">\n            \t\t\t\n            <storageModule buildSystemId=\"org.eclipse.cdt.managedbuilder.core.configurationDataProvider\" id=\"cdt.managedbuild.toolchain.gnu.base.2116872643.128299804\" moduleId=\"org.eclipse.cdt.core.settings\" name=\"debug-x86-linux\">\n                \t\t\t\t\n                <externalSettings/>\n                \t\t\t\t\n                <extensions>\n                    \t\t\t\t\t\n                    <extension id=\"org.eclipse.cdt.core.ELF\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n                    \t\t\t\t\t\n                    <extension id=\"org.eclipse.cdt.core.GASErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n                    \t\t\t\t\t\n                    <extension id=\"org.eclipse.cdt.core.GCCErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n                    \t\t\t\t\t\n                    <extension id=\"org.eclipse.cdt.core.GmakeErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n                    \t\t\t\t\t\n                    <extension id=\"org.eclipse.cdt.core.CWDLocator\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n                    \t\t\t\t\t\n                    <extension id=\"org.eclipse.cdt.core.GLDErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n                    \t\t\t\t\n                </extensions>\n                \t\t\t\n            </storageModule>\n            \t\t\t\n            <storageModule moduleId=\"cdtBuildSystem\" version=\"4.0.0\">\n                \t\t\t\t\n                <configuration artifactName=\"${ProjName}\" buildProperties=\"\" description=\"\" id=\"cdt.managedbuild.toolchain.gnu.base.2116872643.128299804\" name=\"debug-x86-linux\" parent=\"org.eclipse.cdt.build.core.emptycfg\">\n                    \t\t\t\t\t\n                    <folderInfo id=\"cdt.managedbuild.toolchain.gnu.base.2116872643.128299804.\" name=\"/\" resourcePath=\"\">\n                        \t\t\t\t\t\t\n                        <toolChain id=\"cdt.managedbuild.toolchain.gnu.base.1794382793\" name=\"cdt.managedbuild.toolchain.gnu.base\" superClass=\"cdt.managedbuild.toolchain.gnu.base\">\n                            \t\t\t\t\t\t\t\n                            <targetPlatform archList=\"all\" binaryParser=\"org.eclipse.cdt.core.ELF\" id=\"cdt.managedbuild.target.gnu.platform.base.1485941262\" name=\"Debug Platform\" osList=\"linux,hpux,aix,qnx\" superClass=\"cdt.managedbuild.target.gnu.platform.base\"/>\n                            \t\t\t\t\t\t\t\n                            <builder id=\"cdt.managedbuild.target.gnu.builder.base.220668335\" keepEnvironmentInBuildfile=\"false\" managedBuildOn=\"false\" name=\"Gnu Make Builder\" parallelBuildOn=\"true\" parallelizationNumber=\"optimal\" superClass=\"cdt.managedbuild.target.gnu.builder.base\"/>\n                            \t\t\t\t\t\t\t\n                            <tool id=\"cdt.managedbuild.tool.gnu.archiver.base.284844463\" name=\"GCC Archiver\" superClass=\"cdt.managedbuild.tool.gnu.archiver.base\"/>\n                            \t\t\t\t\t\t\t\n                            <tool id=\"cdt.managedbuild.tool.gnu.cpp.compiler.base.1478312340\" name=\"GCC C++ Compiler\" superClass=\"cdt.managedbuild.tool.gnu.cpp.compiler.base\">\n                                \t\t\t\t\t\t\t\t\n                                <inputType id=\"cdt.managedbuild.tool.gnu.cpp.compiler.input.1918693642\" superClass=\"cdt.managedbuild.tool.gnu.cpp.compiler.input\"/>\n                                \t\t\t\t\t\t\t\n                            </tool>\n                            \t\t\t\t\t\t\t\n                            <tool id=\"cdt.managedbuild.tool.gnu.c.compiler.base.1542253543\" name=\"GCC C Compiler\" superClass=\"cdt.managedbuild.tool.gnu.c.compiler.base\">\n                                \t\t\t\t\t\t\t\t\n                                <inputType id=\"cdt.managedbuild.tool.gnu.c.compiler.input.273102950\" superClass=\"cdt.managedbuild.tool.gnu.c.compiler.input\"/>\n                                \t\t\t\t\t\t\t\n                            </tool>\n                            \t\t\t\t\t\t\t\n                            <tool id=\"cdt.managedbuild.tool.gnu.c.linker.base.1110240347\" name=\"GCC C Linker\" superClass=\"cdt.managedbuild.tool.gnu.c.linker.base\"/>\n                            \t\t\t\t\t\t\t\n                            <tool id=\"cdt.managedbuild.tool.gnu.cpp.linker.base.1992155787\" name=\"GCC C++ Linker\" superClass=\"cdt.managedbuild.tool.gnu.cpp.linker.base\">\n                                \t\t\t\t\t\t\t\t\n                                <inputType id=\"cdt.managedbuild.tool.gnu.cpp.linker.input.1355647881\" superClass=\"cdt.managedbuild.tool.gnu.cpp.linker.input\">\n                                    \t\t\t\t\t\t\t\t\t\n                                    <additionalInput kind=\"additionalinputdependency\" paths=\"$(USER_OBJS)\"/>\n                                    \t\t\t\t\t\t\t\t\t\n                                    <additionalInput kind=\"additionalinput\" paths=\"$(LIBS)\"/>\n                                    \t\t\t\t\t\t\t\t\n                                </inputType>\n                                \t\t\t\t\t\t\t\n                            </tool>\n                            \t\t\t\t\t\t\t\n                            <tool id=\"cdt.managedbuild.tool.gnu.assembler.base.1049977093\" name=\"GCC Assembler\" superClass=\"cdt.managedbuild.tool.gnu.assembler.base\">\n                                \t\t\t\t\t\t\t\t\n                                <inputType id=\"cdt.managedbuild.tool.gnu.assembler.input.1999881075\" superClass=\"cdt.managedbuild.tool.gnu.assembler.input\"/>\n                                \t\t\t\t\t\t\t\n                            </tool>\n                            \t\t\t\t\t\t\n                        </toolChain>\n                        \t\t\t\t\t\n                    </folderInfo>\n                    \t\t\t\t\t\n                    <fileInfo id=\"cdt.managedbuild.toolchain.gnu.base.2116872643.128299804.44392871\" name=\"mqttclient_module.c\" rcbsApplicability=\"disable\" resourcePath=\"test/python/mqttclient_module.c\" toolsToInvoke=\"cdt.managedbuild.tool.gnu.c.compiler.base.1542253543.1236301446\">\n                        \t\t\t\t\t\t\n                        <tool id=\"cdt.managedbuild.tool.gnu.c.compiler.base.1542253543.1236301446\" name=\"GCC C Compiler\" superClass=\"cdt.managedbuild.tool.gnu.c.compiler.base.1542253543\">\n                            \t\t\t\t\t\t\t\n                            <option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.c.compiler.option.include.paths.387085861\" name=\"Include paths (-I)\" superClass=\"gnu.c.compiler.option.include.paths\" valueType=\"includePath\">\n                                \t\t\t\t\t\t\t\t\n                                <listOptionValue builtIn=\"false\" value=\"/usr/include/python2.6/\"/>\n                                \t\t\t\t\t\t\t\n                            </option>\n                            \t\t\t\t\t\t\t\n                            <inputType id=\"cdt.managedbuild.tool.gnu.c.compiler.input.912266645\" superClass=\"cdt.managedbuild.tool.gnu.c.compiler.input\"/>\n                            \t\t\t\t\t\t\n                        </tool>\n                        \t\t\t\t\t\n                    </fileInfo>\n                    \t\t\t\t\n                </configuration>\n                \t\t\t\n            </storageModule>\n            \t\t\t\n            <storageModule moduleId=\"org.eclipse.cdt.core.externalSettings\"/>\n            \t\t\n        </cconfiguration>\n        \t\t\n        <cconfiguration id=\"cdt.managedbuild.toolchain.gnu.base.2116872643.1588218084\">\n            \t\t\t\n            <storageModule buildSystemId=\"org.eclipse.cdt.managedbuilder.core.configurationDataProvider\" id=\"cdt.managedbuild.toolchain.gnu.base.2116872643.1588218084\" moduleId=\"org.eclipse.cdt.core.settings\" name=\"debug-arm-linux-gnueabihf\">\n                \t\t\t\t\n                <externalSettings/>\n                \t\t\t\t\n                <extensions>\n                    \t\t\t\t\t\n                    <extension id=\"org.eclipse.cdt.core.ELF\" point=\"org.eclipse.cdt.core.BinaryParser\"/>\n                    \t\t\t\t\t\n                    <extension id=\"org.eclipse.cdt.core.GASErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n                    \t\t\t\t\t\n                    <extension id=\"org.eclipse.cdt.core.GCCErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n                    \t\t\t\t\t\n                    <extension id=\"org.eclipse.cdt.core.GmakeErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n                    \t\t\t\t\t\n                    <extension id=\"org.eclipse.cdt.core.CWDLocator\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n                    \t\t\t\t\t\n                    <extension id=\"org.eclipse.cdt.core.GLDErrorParser\" point=\"org.eclipse.cdt.core.ErrorParser\"/>\n                    \t\t\t\t\n                </extensions>\n                \t\t\t\n            </storageModule>\n            \t\t\t\n            <storageModule moduleId=\"cdtBuildSystem\" version=\"4.0.0\">\n                \t\t\t\t\n                <configuration artifactName=\"${ProjName}\" buildProperties=\"\" description=\"\" id=\"cdt.managedbuild.toolchain.gnu.base.2116872643.1588218084\" name=\"debug-arm-linux-gnueabihf\" parent=\"org.eclipse.cdt.build.core.emptycfg\">\n                    \t\t\t\t\t\n                    <folderInfo id=\"cdt.managedbuild.toolchain.gnu.base.2116872643.1588218084.\" name=\"/\" resourcePath=\"\">\n                        \t\t\t\t\t\t\n                        <toolChain id=\"cdt.managedbuild.toolchain.gnu.base.831723006\" name=\"cdt.managedbuild.toolchain.gnu.base\" superClass=\"cdt.managedbuild.toolchain.gnu.base\">\n                            \t\t\t\t\t\t\t\n                            <targetPlatform archList=\"all\" binaryParser=\"org.eclipse.cdt.core.ELF\" id=\"cdt.managedbuild.target.gnu.platform.base.1838207249\" name=\"Debug Platform\" osList=\"linux,hpux,aix,qnx\" superClass=\"cdt.managedbuild.target.gnu.platform.base\"/>\n                            \t\t\t\t\t\t\t\n                            <builder id=\"cdt.managedbuild.target.gnu.builder.base.373473642\" keepEnvironmentInBuildfile=\"false\" managedBuildOn=\"false\" name=\"Gnu Make Builder\" parallelBuildOn=\"true\" parallelizationNumber=\"optimal\" superClass=\"cdt.managedbuild.target.gnu.builder.base\"/>\n                            \t\t\t\t\t\t\t\n                            <tool id=\"cdt.managedbuild.tool.gnu.archiver.base.1386858473\" name=\"GCC Archiver\" superClass=\"cdt.managedbuild.tool.gnu.archiver.base\"/>\n                            \t\t\t\t\t\t\t\n                            <tool id=\"cdt.managedbuild.tool.gnu.cpp.compiler.base.1005171182\" name=\"GCC C++ Compiler\" superClass=\"cdt.managedbuild.tool.gnu.cpp.compiler.base\">\n                                \t\t\t\t\t\t\t\t\n                                <inputType id=\"cdt.managedbuild.tool.gnu.cpp.compiler.input.1367844459\" superClass=\"cdt.managedbuild.tool.gnu.cpp.compiler.input\"/>\n                                \t\t\t\t\t\t\t\n                            </tool>\n                            \t\t\t\t\t\t\t\n                            <tool id=\"cdt.managedbuild.tool.gnu.c.compiler.base.1805700752\" name=\"GCC C Compiler\" superClass=\"cdt.managedbuild.tool.gnu.c.compiler.base\">\n                                \t\t\t\t\t\t\t\t\n                                <inputType id=\"cdt.managedbuild.tool.gnu.c.compiler.input.892553453\" superClass=\"cdt.managedbuild.tool.gnu.c.compiler.input\"/>\n                                \t\t\t\t\t\t\t\n                            </tool>\n                            \t\t\t\t\t\t\t\n                            <tool id=\"cdt.managedbuild.tool.gnu.c.linker.base.1775502227\" name=\"GCC C Linker\" superClass=\"cdt.managedbuild.tool.gnu.c.linker.base\"/>\n                            \t\t\t\t\t\t\t\n                            <tool id=\"cdt.managedbuild.tool.gnu.cpp.linker.base.2000163116\" name=\"GCC C++ Linker\" superClass=\"cdt.managedbuild.tool.gnu.cpp.linker.base\">\n                                \t\t\t\t\t\t\t\t\n                                <inputType id=\"cdt.managedbuild.tool.gnu.cpp.linker.input.1797952705\" superClass=\"cdt.managedbuild.tool.gnu.cpp.linker.input\">\n                                    \t\t\t\t\t\t\t\t\t\n                                    <additionalInput kind=\"additionalinputdependency\" paths=\"$(USER_OBJS)\"/>\n                                    \t\t\t\t\t\t\t\t\t\n                                    <additionalInput kind=\"additionalinput\" paths=\"$(LIBS)\"/>\n                                    \t\t\t\t\t\t\t\t\n                                </inputType>\n                                \t\t\t\t\t\t\t\n                            </tool>\n                            \t\t\t\t\t\t\t\n                            <tool id=\"cdt.managedbuild.tool.gnu.assembler.base.1735139022\" name=\"GCC Assembler\" superClass=\"cdt.managedbuild.tool.gnu.assembler.base\">\n                                \t\t\t\t\t\t\t\t\n                                <inputType id=\"cdt.managedbuild.tool.gnu.assembler.input.1355266401\" superClass=\"cdt.managedbuild.tool.gnu.assembler.input\"/>\n                                \t\t\t\t\t\t\t\n                            </tool>\n                            \t\t\t\t\t\t\n                        </toolChain>\n                        \t\t\t\t\t\n                    </folderInfo>\n                    \t\t\t\t\t\n                    <fileInfo id=\"cdt.managedbuild.toolchain.gnu.base.2116872643.1588218084.1410045178\" name=\"mqttclient_module.c\" rcbsApplicability=\"disable\" resourcePath=\"test/python/mqttclient_module.c\" toolsToInvoke=\"cdt.managedbuild.tool.gnu.c.compiler.base.1805700752.404015131\">\n                        \t\t\t\t\t\t\n                        <tool id=\"cdt.managedbuild.tool.gnu.c.compiler.base.1805700752.404015131\" name=\"GCC C Compiler\" superClass=\"cdt.managedbuild.tool.gnu.c.compiler.base.1805700752\">\n                            \t\t\t\t\t\t\t\n                            <option IS_BUILTIN_EMPTY=\"false\" IS_VALUE_EMPTY=\"false\" id=\"gnu.c.compiler.option.include.paths.253579949\" name=\"Include paths (-I)\" superClass=\"gnu.c.compiler.option.include.paths\" valueType=\"includePath\">\n                                \t\t\t\t\t\t\t\t\n                                <listOptionValue builtIn=\"false\" value=\"/usr/include/python2.6/\"/>\n                                \t\t\t\t\t\t\t\n                            </option>\n                            \t\t\t\t\t\t\t\n                            <inputType id=\"cdt.managedbuild.tool.gnu.c.compiler.input.987997893\" superClass=\"cdt.managedbuild.tool.gnu.c.compiler.input\"/>\n                            \t\t\t\t\t\t\n                        </tool>\n                        \t\t\t\t\t\n                    </fileInfo>\n                    \t\t\t\t\n                </configuration>\n                \t\t\t\n            </storageModule>\n            \t\t\t\n            <storageModule moduleId=\"org.eclipse.cdt.core.externalSettings\"/>\n            \t\t\n        </cconfiguration>\n        \t\n    </storageModule>\n    \t\n    <storageModule moduleId=\"cdtBuildSystem\" version=\"4.0.0\">\n        \t\t\n        <project id=\"org.eclipse.paho.mqtt.c.null.1335713239\" name=\"org.eclipse.paho.mqtt.c\"/>\n        \t\n    </storageModule>\n    \t\n    <storageModule moduleId=\"org.eclipse.cdt.core.LanguageSettingsProviders\"/>\n    \t\n    <storageModule moduleId=\"refreshScope\" versionNumber=\"2\">\n        \t\t\n        <configuration configurationName=\"arm-linux-gnueabihf\">\n            \t\t\t\n            <resource resourceType=\"PROJECT\" workspacePath=\"/org.eclipse.paho.mqtt.c\"/>\n            \t\t\n        </configuration>\n        \t\t\n        <configuration configurationName=\"debug-native\"/>\n        \t\t\n        <configuration configurationName=\"debug-x86-linux\"/>\n        \t\t\n        <configuration configurationName=\"Default\">\n            \t\t\t\n            <resource resourceType=\"PROJECT\" workspacePath=\"/org.eclipse.paho.mqtt.c\"/>\n            \t\t\n        </configuration>\n        \t\t\n        <configuration configurationName=\"debug-arm-linux-gnueabihf\"/>\n        \t\t\n        <configuration configurationName=\"x86-linux\">\n            \t\t\t\n            <resource resourceType=\"PROJECT\" workspacePath=\"/org.eclipse.paho.mqtt.c\"/>\n            \t\t\n        </configuration>\n        \t\n    </storageModule>\n    \t\n    <storageModule moduleId=\"scannerConfiguration\">\n        \t\t\n        <autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"/>\n        \t\t\n        <scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.base.2116872643.128299804;cdt.managedbuild.toolchain.gnu.base.2116872643.128299804.;cdt.managedbuild.tool.gnu.cpp.compiler.base.1478312340;cdt.managedbuild.tool.gnu.cpp.compiler.input.1918693642\">\n            \t\t\t\n            <autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"/>\n            \t\t\n        </scannerConfigBuildInfo>\n        \t\t\n        <scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.base.2116872643.128299804;cdt.managedbuild.toolchain.gnu.base.2116872643.128299804.;cdt.managedbuild.tool.gnu.c.compiler.base.1542253543;cdt.managedbuild.tool.gnu.c.compiler.input.273102950\">\n            \t\t\t\n            <autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"/>\n            \t\t\n        </scannerConfigBuildInfo>\n        \t\t\n        <scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.base.2116872643.1588218084;cdt.managedbuild.toolchain.gnu.base.2116872643.1588218084.;cdt.managedbuild.tool.gnu.c.compiler.base.1805700752;cdt.managedbuild.tool.gnu.c.compiler.input.892553453\">\n            \t\t\t\n            <autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"/>\n            \t\t\n        </scannerConfigBuildInfo>\n        \t\t\n        <scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.base.2116872643;cdt.managedbuild.toolchain.gnu.base.2116872643.2105697674;cdt.managedbuild.tool.gnu.cpp.compiler.base.2093522624;cdt.managedbuild.tool.gnu.cpp.compiler.input.58852055\">\n            \t\t\t\n            <autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"/>\n            \t\t\n        </scannerConfigBuildInfo>\n        \t\t\n        <scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.base.2116872643.1588218084;cdt.managedbuild.toolchain.gnu.base.2116872643.1588218084.;cdt.managedbuild.tool.gnu.cpp.compiler.base.1005171182;cdt.managedbuild.tool.gnu.cpp.compiler.input.1367844459\">\n            \t\t\t\n            <autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"/>\n            \t\t\n        </scannerConfigBuildInfo>\n        \t\t\n        <scannerConfigBuildInfo instanceId=\"cdt.managedbuild.toolchain.gnu.base.2116872643;cdt.managedbuild.toolchain.gnu.base.2116872643.2105697674;cdt.managedbuild.tool.gnu.c.compiler.base.919295913;cdt.managedbuild.tool.gnu.c.compiler.input.873628110\">\n            \t\t\t\n            <autodiscovery enabled=\"true\" problemReportingEnabled=\"true\" selectedProfileId=\"\"/>\n            \t\t\n        </scannerConfigBuildInfo>\n        \t\n    </storageModule>\n    \t\n    <storageModule moduleId=\"org.eclipse.cdt.make.core.buildtargets\">\n        \t\t\n        <buildTargets>\n            \t\t\t\n            <target name=\"paho_c_pub\" path=\"\" targetID=\"org.eclipse.cdt.build.MakeTargetBuilder\">\n                \t\t\t\t\n                <buildCommand>make</buildCommand>\n                \t\t\t\t\n                <buildArguments>-j8</buildArguments>\n                \t\t\t\t\n                <buildTarget>paho_c_pub</buildTarget>\n                \t\t\t\t\n                <stopOnError>true</stopOnError>\n                \t\t\t\t\n                <useDefaultCommand>true</useDefaultCommand>\n                \t\t\t\t\n                <runAllBuilders>true</runAllBuilders>\n                \t\t\t\n            </target>\n            \t\t\n        </buildTargets>\n        \t\n    </storageModule>\n    \n</cproject>\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0576171875,
          "content": "/dep/\n/build/\n/build.paho/\n*.swp\n*.pyc\n/build.paho\n.vscode/"
        },
        {
          "name": ".gitreview",
          "type": "blob",
          "size": 0.09765625,
          "content": "[gerrit]\nhost=git.eclipse.org\nport=29418\nproject=paho/org.eclipse.paho.mqtt.c\ndefaultbranch=develop\n"
        },
        {
          "name": ".project",
          "type": "blob",
          "size": 0.9619140625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<projectDescription>\n\t<name>org.eclipse.paho.mqtt.c</name>\n\t<comment></comment>\n\t<projects>\n\t</projects>\n\t<buildSpec>\n\t\t<buildCommand>\n\t\t\t<name>org.python.pydev.PyDevBuilder</name>\n\t\t\t<arguments>\n\t\t\t</arguments>\n\t\t</buildCommand>\n\t\t<buildCommand>\n\t\t\t<name>org.eclipse.cdt.managedbuilder.core.genmakebuilder</name>\n\t\t\t<triggers>clean,full,incremental,</triggers>\n\t\t\t<arguments>\n\t\t\t</arguments>\n\t\t</buildCommand>\n\t\t<buildCommand>\n\t\t\t<name>org.eclipse.cdt.managedbuilder.core.ScannerConfigBuilder</name>\n\t\t\t<triggers>full,incremental,</triggers>\n\t\t\t<arguments>\n\t\t\t</arguments>\n\t\t</buildCommand>\n\t</buildSpec>\n\t<natures>\n\t\t<nature>org.eclipse.cdt.core.cnature</nature>\n\t\t<nature>org.eclipse.cdt.core.ccnature</nature>\n\t\t<nature>org.eclipse.cdt.managedbuilder.core.managedBuildNature</nature>\n\t\t<nature>org.eclipse.cdt.managedbuilder.core.ScannerConfigNature</nature>\n\t\t<nature>org.python.pydev.pythonNature</nature>\n\t</natures>\n</projectDescription>\n"
        },
        {
          "name": ".pydevproject",
          "type": "blob",
          "size": 0.294921875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<?eclipse-pydev version=\"1.0\"?><pydev_project>\n<pydev_property name=\"org.python.pydev.PYTHON_PROJECT_INTERPRETER\">Default</pydev_property>\n<pydev_property name=\"org.python.pydev.PYTHON_PROJECT_VERSION\">python 2.7</pydev_property>\n</pydev_project>\n"
        },
        {
          "name": ".settings",
          "type": "tree",
          "content": null
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 2.7744140625,
          "content": "language: c\njobs:\n  include:\n    - os: linux\n      compiler: gcc\n      dist: bionic\n      env: OPENSSL_ROOT_DIR= PAHO_BUILD_STATIC=TRUE PAHO_BUILD_SHARED=FALSE PAHO_HIGH_PERFORMANCE=FALSE\n    - os: linux\n      compiler: gcc\n      dist: xenial\n      env: OPENSSL_ROOT_DIR= PAHO_BUILD_STATIC=TRUE PAHO_BUILD_SHARED=TRUE PAHO_HIGH_PERFORMANCE=TRUE\n    - os: osx\n      compiler: clang\n      env: OPENSSL_ROOT_DIR=/usr/local/opt/openssl PAHO_BUILD_STATIC=FALSE PAHO_BUILD_SHARED=TRUE PAHO_HIGH_PERFORMANCE=FALSE\n    - os: linux\n      compiler: gcc\n      dist: trusty\n      env: OPENSSL_ROOT_DIR= PAHO_BUILD_STATIC=FALSE PAHO_BUILD_SHARED=TRUE PAHO_HIGH_PERFORMANCE=FALSE\nbefore_install:\n#- if [ \"$DEPLOY\" = \"true\" ]; then ./travis-setup-deploy.sh; fi\n- \"./travis-install.sh\"\nenv:\n  global:\n  - secure: Ro53zVdGCjCQx9U4wvD9GBwB346tIQ7y1MWOAe1QrFWlmoQLC8KUeddQkc+27pdrOG9Fm9QQcI82EDlh0bfRBy1ITfWSVVZVfbNLv9sBWesND1F9YlnFpn/fag2OE+ULPSEJVJMxZoqiR9yiYWO3pTWue4YjCSuFAjpQNO6VnV3HiQJRG1jeaylx0QVLQWKAL/qkRbuqG9o4xpS1Kebaj86+q9UTHcL1a+Aj53u+Ajqnc9ZbUB/yBrfHyufTKpAD8Ef/FEIWXg2svtiWVEwEsPtdTn5P7AefJ2FNEyT4uMKIEBzWIPeWvUZLFF6U7QA07+uYDE0Ir4voPptBUlIYqQz1CUz9XCOPmM/N+GgqpyNyUjpMb4CM1b+iwBwcsHc0Z1JFcPz65ZMSt1D/WeUfQlaB/KxQBpz4lD2mxEmAuBIoGNrAG+FRULoY+xQSAf7V0W8am6QbHNnXif30mdkF3lgAhaAOwWO03JD7ctEJXqzRbMK8HrBkrgWfHsRRLFT50m8CrNLFz+3lCYuPHge2gHUMDfIHMxd4N9f2dlfV9GJkHQOQYwFfP5L2Y5Xq9KTnZX+bsglDC2WcOJu2F8h1LxTMV5Kku8zl1RZlEAt8Qa9EtCMczA3sL4NfGxazO22WpyOvHdwb26mhdJTgquI5oZsl71zcIf+WLGfgUAEq4/k=\nscript:\n- if [[ \"$COVERITY_SCAN_BRANCH\" != 1 ]]; then ./travis-build.sh; fi\naddons:\n  coverity_scan:\n    project:\n      name: eclipse/paho.mqtt.c\n    notification_email: icraggs@gmail.com\n    build_command_prepend: make clean\n    build_command: make -j 4\n    branch_pattern: coverity-.*\n  apt:\n    packages:\n    - cmake\n    - cmake-data\n    - doxygen\n  ssh_known_hosts: build.eclipse.org\nafter_success:\n- ls -l build.paho/*.tar.gz\n#- if [ \"$DEPLOY\" = \"true\" ]; then ./travis-deploy.sh; fi\ndeploy:\n  provider: releases\n  api_key:\n    secure: L5fp5Q+ZQvLt7jsQ6RUWbK6sm29ZNmfLmEXKZCg4g6+kaqxXmt3ijJT6VgNoZh209bP8TyfxDbbmdvfN542O4rM69WcyrBEIfsvkjs2thnyYpMz7PtDXUfiLdv/Wws4f8QCFOwy4xKmk4VFcrxPRoQRBGcQ23P3l1bcW56m4qB3JzupqHsj7/caMQmyk3gGKx/uSj9Vtvjl7z0pM1NuH2sxkdeUZ1FLDdb6HmY/Wo3v0ldO8gBUfrcjoi9zgjdV5AztxTafVhNu0LIbbAie1y6tMVGUqnXm2W4PqgfhtYAhM8VOfEykzh5sH0+DqA4G82X512aHHegdkK3/wt+DXZX6n/XK4tWBQR87vN8n8Lexj+uKC1Mmh7VTrO6f5QS/eXR1RvG5w+XBKIfHuOC6t6PS3NrRrGxUzY3DzgyBpUSaw+bNbL+auvN0bPz6lBjykiawdCZhjlqytNBOTsgNOyJaWJGE4fMTXQjVDcdZ8Cr/BOXHImXsm5cQ2clBwMg8RGwxBeX4nOcGaCfeYogI84z4uIRwTc5REnW4MCHeZgnZNvf3dG/hUCQpUPB2CIooqj84o36chjTp3at6mZxzKc1aATexmhu9UWRzqT3Ezs8KuaU4LxdlPI0UYO5bWf+BexRCmUwSkHlcqUwoZeRE/Fd4KXkm2r6anisyEJmywfD8=\n  file_glob: true\n  file: build.paho/*.tar.gz\n  on:\n    repo: eclipse/paho.mqtt.c\n    tags: true\n  skip_cleanup: true\n  draft: false\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 5.1083984375,
          "content": "#*******************************************************************************\n#  Copyright (c) 2015, 2025 logi.cals GmbH, Frank Pagliughi <fpagliughi@mindspring.com> and others\n#\n#  All rights reserved. This program and the accompanying materials\n#  are made available under the terms of the Eclipse Public License v2.0\n#  and Eclipse Distribution License v1.0 which accompany this distribution.\n#\n#  The Eclipse Public License is available at\n#     https://www.eclipse.org/legal/epl-2.0/\n#  and the Eclipse Distribution License is available at\n#    http://www.eclipse.org/org/documents/edl-v10.php.\n#\n#  Contributors:\n#     Rainer Poisel - initial version\n#     Genis Riera Perez - Add support for building debian package\n#*******************************************************************************/\n\ncmake_minimum_required(VERSION 3.5)\n\nproject(\"Eclipse Paho C\" \n  VERSION 1.3.14\n  LANGUAGES C\n)\n\nmessage(STATUS \"CMake version: \" ${CMAKE_VERSION})\nmessage(STATUS \"CMake system name: \" ${CMAKE_SYSTEM_NAME})\n\nset(CMAKE_SCRIPTS \"${PROJECT_SOURCE_DIR}/cmake\")\nset(CMAKE_MODULE_PATH \"${PROJECT_SOURCE_DIR}/cmake/modules\")\n\n## Project Version\n## Previously we read in the version from these files, but now we use the \n## CMake project setting. We just make sure the files and CMake match.\nfile(READ version.major PAHO_VERSION_MAJOR)\nfile(READ version.minor PAHO_VERSION_MINOR)\nfile(READ version.patch PAHO_VERSION_PATCH)\nset(CLIENT_VERSION ${PAHO_VERSION_MAJOR}.${PAHO_VERSION_MINOR}.${PAHO_VERSION_PATCH})\n\nif(NOT (CLIENT_VERSION VERSION_EQUAL PROJECT_VERSION))\n  message(FATAL_ERROR \"CMake project version does NOT match. CMake: ${PROJECT_VERSION}, Files: ${CLIENT_VERSION}\")\nendif()\n\ninclude(GNUInstallDirs)\n\nstring(TIMESTAMP BUILD_TIMESTAMP UTC)\nmessage(STATUS \"Timestamp is ${BUILD_TIMESTAMP}\")\n\nif(WIN32)\n  add_definitions(-D_CRT_SECURE_NO_DEPRECATE -DWIN32_LEAN_AND_MEAN)\nelseif(${CMAKE_SYSTEM_NAME} STREQUAL \"Darwin\")\n  add_definitions(-DOSX)\nendif()\n\n## build options\noption(PAHO_WITH_SSL \"Flag that defines whether to build ssl-enabled binaries too. \" FALSE)\noption(PAHO_WITH_LIBRESSL \"Flag that defines whether to build ssl-enabled binaries with LibreSSL instead of OpenSSL. \" FALSE)\noption(PAHO_WITH_LIBUUID \"Flag that defines whether libuuid or a custom uuid implementation should be used\" FALSE)\noption(PAHO_BUILD_SHARED \"Build shared library\" TRUE)\noption(PAHO_BUILD_STATIC \"Build static library\" FALSE)\noption(PAHO_BUILD_DOCUMENTATION \"Create and install the HTML based API documentation (requires Doxygen)\" FALSE)\noption(PAHO_BUILD_SAMPLES \"Build sample programs\" FALSE)\noption(PAHO_BUILD_DEB_PACKAGE \"Build debian package\" FALSE)\noption(PAHO_ENABLE_TESTING \"Build tests and run\" TRUE)\noption(PAHO_ENABLE_CPACK \"Enable CPack\" TRUE)\noption(PAHO_HIGH_PERFORMANCE \"Disable tracing and heap tracking\" FALSE)\noption(PAHO_USE_SELECT \"Revert to select system call instead of poll\" FALSE)\n\nif(NOT WIN32)\n    option(PAHO_WITH_UNIX_SOCKETS \"Flag that defines whether to enable Unix-domain sockets\" FALSE)\n\n    if(PAHO_WITH_UNIX_SOCKETS)\n      add_definitions(-DUNIXSOCK=1)\n    endif()\nendif()\n\nif(PAHO_HIGH_PERFORMANCE)\n  add_definitions(-DHIGH_PERFORMANCE=1)\nendif()\n\nif(PAHO_USE_SELECT)\n  add_definitions(-DUSE_SELECT=1)\nendif()\n\nif(PAHO_WITH_LIBUUID)\n  add_definitions(-DUSE_LIBUUID=1)\nendif()\n\nif(NOT PAHO_BUILD_SHARED AND NOT PAHO_BUILD_STATIC)\n  message(FATAL_ERROR \"You must set either PAHO_BUILD_SHARED, PAHO_BUILD_STATIC, or both\")\nendif()\n\nif(PAHO_BUILD_SAMPLES AND NOT (PAHO_WITH_SSL OR PAHO_WITH_LIBRESSL))\n  message(WARNING \"You must build with SSL to build the full set of samples\")\nendif()\n\nif(PAHO_BUILD_DEB_PACKAGE)\n  set(CMAKE_INSTALL_DOCDIR share/doc/libpaho-mqtt)\n  set(CPACK_DEBIAN_PACKAGE_GENERATE_SHLIBS ON)\n  set(CPACK_DEBIAN_PACKAGE_GENERATE_SHLIBS_POLICY \">=\")\nendif()\n\nadd_subdirectory(src)\n\nif(PAHO_BUILD_SAMPLES)\n  add_subdirectory(src/samples)\nendif()\n\nif(PAHO_BUILD_DOCUMENTATION)\n  add_subdirectory(doc)\nendif()\n\nif(PAHO_ENABLE_CPACK)\n  ### packaging settings\n  file(GLOB samples \"src/samples/*.c\")\n  install(FILES ${samples} DESTINATION ${CMAKE_INSTALL_DOCDIR}/samples)\n\n  set(CPACK_PACKAGE_VENDOR \"Eclipse Paho\")\n  set(CPACK_PACKAGE_NAME \"Eclipse-Paho-MQTT-C\")\n  install(FILES CONTRIBUTING.md epl-v20 edl-v10 README.md notice.html DESTINATION ${CMAKE_INSTALL_DOCDIR})\n\n  if(WIN32)\n    set(CPACK_GENERATOR \"ZIP\")\n  elseif(PAHO_BUILD_DEB_PACKAGE)\n    install(FILES CONTRIBUTING.md epl-v20 edl-v10 README.md notice.html DESTINATION ${CMAKE_INSTALL_DOCDIR})\n\n    set(CPACK_GENERATOR \"DEB\")\n    configure_file(${CMAKE_SCRIPTS}/CPackDebConfig.cmake.in\n      ${CMAKE_BINARY_DIR}/CPackDebConfig.cmake @ONLY\n    )\n    set(CPACK_PROJECT_CONFIG_FILE ${CMAKE_BINARY_DIR}/CPackDebConfig.cmake)\n   else()\n     set(CPACK_GENERATOR \"TGZ\")\n   endif()\nelse()\n  file(GLOB samples \"src/samples/*.c\")\n  install(FILES ${samples} DESTINATION ${CMAKE_INSTALL_DOCDIR})\nendif()\n\nset(CPACK_PACKAGE_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})\nset(CPACK_PACKAGE_VERSION_MINOR ${PROJECT_VERSION_MINOR})\nset(CPACK_PACKAGE_VERSION_PATCH ${PROJECT_VERSION_PATCH})\n\ninclude(CPack)\n\nif(PAHO_ENABLE_TESTING)\n  enable_testing()\n  include_directories(test src)\n  add_subdirectory(test)\nelse()\n  include_directories(src)\nendif()\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.34765625,
          "content": "# Community Code of Conduct\n\n**Version 1.2  \nAugust 19, 2020**\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as community members, contributors, committers, and project leaders pledge to make participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n*   Using welcoming and inclusive language\n*   Being respectful of differing viewpoints and experiences\n*   Gracefully accepting constructive criticism\n*   Focusing on what is best for the community\n*   Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n*   The use of sexualized language or imagery and unwelcome sexual attention or advances\n*   Trolling, insulting/derogatory comments, and personal or political attacks\n*   Public or private harassment\n*   Publishing others' private information, such as a physical or electronic address, without explicit permission\n*   Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nWith the support of the Eclipse Foundation staff (the “Staff”), project committers and leaders are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject committers and leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies within all project spaces, and it also applies when an individual is representing the Eclipse Foundation project or its community in public spaces. Examples of representing a project or community include posting via an official social media account, or acting as a project representative at an online or offline event. Representation of a project may be further defined and clarified by project committers, leaders, or the EMO.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the Staff at codeofconduct@eclipse.org. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The Staff is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject committers or leaders who do not follow the Code of Conduct in good faith may face temporary or permanent repercussions as determined by the Staff.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant](https://www.contributor-covenant.org) , version 1.4, available at [https://www.contributor-covenant.org/version/1/4/code-of-conduct.html](https://www.contributor-covenant.org/version/1/4/code-of-conduct/)\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.6337890625,
          "content": "# Contributing to Paho\r\n\r\nThanks for your interest in this project!\r\n\r\nYou can contribute bugfixes and new features by sending pull requests through GitHub.\r\n\r\n## Legal\r\n\r\nIn order for your contribution to be accepted, it must comply with the Eclipse Foundation IP policy.\r\n\r\nPlease read the [Eclipse Foundation policy on accepting contributions via Git](http://wiki.eclipse.org/Development_Resources/Contributing_via_Git).\r\n\r\n1. Sign the [Eclipse ECA](http://www.eclipse.org/legal/ECA.php)\r\n  1. Register for an Eclipse Foundation User ID. You can register [here](https://dev.eclipse.org/site_login/createaccount.php).\r\n  2. Log into the [Eclipse projects forge](https://www.eclipse.org/contribute/cla), and click on 'Eclipse Contributor Agreement'.\r\n2. Go to your [account settings](https://dev.eclipse.org/site_login/myaccount.php#open_tab_accountsettings) and add your GitHub username to your account.\r\n3. Make sure that you _sign-off_ your Git commits in the following format:\r\n  ``` Signed-off-by: Alex Smith <alexsmith@nowhere.com> ``` This is usually at the bottom of the commit message. You can automate this by adding the '-s' flag when you make the commits. e.g.   ```git commit -s -m \"Adding a cool feature\"```\r\n4. Ensure that the email address that you make your commits with is the same one you used to sign up to the Eclipse Foundation website with.\r\n\r\n## Contributing a change\r\n\r\n1. [Fork the repository on GitHub](https://github.com/eclipse/paho.mqtt.c/fork)\r\n2. Clone the forked repository onto your computer: ``` git clone https://github.com/<your username>/paho.mqtt.c.git ```\r\n3. Create a new branch from the latest ```develop``` branch with ```git checkout -b YOUR_BRANCH_NAME origin/develop```\r\n4. Make your changes\r\n5. If developing a new feature, make sure to include JUnit tests.\r\n6. Ensure that all new and existing tests pass.\r\n7. Commit the changes into the branch: ``` git commit -s ``` Make sure that your commit message is meaningful and describes your changes correctly.\r\n8. If you have a lot of commits for the change, squash them into a single / few commits.\r\n9. Push the changes in your branch to your forked repository.\r\n10. Finally, go to [https://github.com/eclipse/paho.mqtt.c](https://github.com/eclipse/paho.mqtt.c) and create a pull request from your \"YOUR_BRANCH_NAME\" branch to the ```develop``` one to request review and merge of the commits in your pushed branch.\r\n\r\nWhat happens next depends on the content of the patch.\r\nIf it is 100% authored by the contributor with less than 1000 lines of new product code that meets\r\nthe needs of the project (refactored, test code and sample code is excluded from the count), then it\r\ncan be pulled into the main repository. When there are more than 1000 lines of new product code,\r\nmore steps are required. More details are provided in the [handbook](https://www.eclipse.org/projects/handbook/#ip).\r\n\r\n## Developer resources:\r\n\r\n\r\nInformation regarding source code management, builds, coding standards, and more.\r\n\r\n- [https://projects.eclipse.org/projects/iot.paho/developer](https://projects.eclipse.org/projects/iot.paho/developer)\r\n\r\nContact:\r\n--------\r\n\r\nContact the project developers via the project's development\r\n[mailing list](https://dev.eclipse.org/mailman/listinfo/paho-dev).\r\n\r\nSearch for bugs:\r\n----------------\r\n\r\nThis project uses GitHub Issues here: [github.com/eclipse/paho.mqtt.c/issues](https://github.com/eclipse/paho.mqtt.c/issues) to track ongoing development and issues.\r\n\r\nCreate a new bug:\r\n-----------------\r\n\r\nBe sure to search for existing bugs before you create another one. Remember that contributions are always welcome!\r\n\r\n- [Create new Paho bug](https://github.com/eclipse/paho.mqtt.c/issues/new)\r\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.5078125,
          "content": "Eclipse Public License - v 2.0\n\nThis program and the accompanying materials\nare made available under the terms of the Eclipse Public License v2.0\nand Eclipse Distribution License v1.0 which accompany this distribution.\n\nThe Eclipse Public License is available at\n  https://www.eclipse.org/legal/epl-2.0/\nand the Eclipse Distribution License is available at\n  http://www.eclipse.org/org/documents/edl-v10.php.\n\nFor an explanation of what dual-licensing means to you, see:\nhttps://www.eclipse.org/legal/eplfaq.php#DUALLIC\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 15.130859375,
          "content": "#*******************************************************************************\n#  Copyright (c) 2009, 2021 IBM Corp.\n#\n#  All rights reserved. This program and the accompanying materials\n#  are made available under the terms of the Eclipse Public License v2.0\n#  and Eclipse Distribution License v1.0 which accompany this distribution.\n#\n#  The Eclipse Public License is available at\n#     https://www.eclipse.org/legal/epl-2.0/\n#  and the Eclipse Distribution License is available at\n#    http://www.eclipse.org/org/documents/edl-v10.php.\n#\n#  Contributors:\n#     Ian Craggs - initial API and implementation and/or initial documentation\n#     Allan Stockdill-Mander - SSL updates\n#     Andy Piper - various fixes\n#     Ian Craggs - OSX build\n#     Rainer Poisel - support for multi-core builds and cross-compilation\n#*******************************************************************************/\n\n# Note: on OS X you should install XCode and the associated command-line tools\n\nSHELL = /bin/sh\n.PHONY: clean mkdir install install-strip uninstall html strip-options\n\nMAJOR_VERSION := $(shell cat version.major)\nMINOR_VERSION := $(shell cat version.minor)\nPATCH_VERSION := $(shell cat version.patch)\n\nifndef release.version\n  release.version = $(MAJOR_VERSION).$(MINOR_VERSION).$(PATCH_VERSION)\nendif\n\n# determine current platform\nBUILD_TYPE ?= debug\nifeq ($(OS),Windows_NT)\n\tOSTYPE ?= $(OS)\n\tMACHINETYPE ?= $(PROCESSOR_ARCHITECTURE)\nelse\n\tOSTYPE ?= $(shell uname -s)\n\tMACHINETYPE ?= $(shell uname -m)\n\tbuild.level = $(shell date)\nendif # OS\nifeq ($(OSTYPE),linux)\n\tOSTYPE = Linux\nendif\n\n# assume this is normally run in the main Paho directory\nifndef srcdir\n  srcdir = src\nendif\n\nifndef blddir\n  blddir = build/output\nendif\n\nifndef blddir_work\n  blddir_work = build\nendif\n\nifndef docdir\n  docdir = $(blddir)/doc\nendif\n\nifndef docdir_work\n  docdir_work = $(blddir)/../doc\nendif\n\nifndef prefix\n\tprefix = /usr/local\nendif\n\nifndef exec_prefix\n\texec_prefix = ${prefix}\nendif\n\nbindir = $(exec_prefix)/bin\nincludedir = $(prefix)/include\nlibdir = $(exec_prefix)/lib\ndatarootdir = $(prefix)/share\nmandir = $(datarootdir)/man\nman1dir = $(mandir)/man1\nman2dir = $(mandir)/man2\nman3dir = $(mandir)/man3\n\nSOURCE_FILES = $(wildcard $(srcdir)/*.c)\nSOURCE_FILES_C = $(filter-out $(srcdir)/MQTTAsync.c $(srcdir)/MQTTAsyncUtils.c $(srcdir)/MQTTVersion.c $(srcdir)/SSLSocket.c, $(SOURCE_FILES))\nSOURCE_FILES_CS = $(filter-out $(srcdir)/MQTTAsync.c $(srcdir)/MQTTAsyncUtils.c $(srcdir)/MQTTVersion.c, $(SOURCE_FILES))\nSOURCE_FILES_A = $(filter-out $(srcdir)/MQTTClient.c $(srcdir)/MQTTVersion.c $(srcdir)/SSLSocket.c, $(SOURCE_FILES))\nSOURCE_FILES_AS = $(filter-out $(srcdir)/MQTTClient.c $(srcdir)/MQTTVersion.c, $(SOURCE_FILES))\n\nHEADERS = $(srcdir)/*.h\nHEADERS_C = $(filter-out $(srcdir)/MQTTAsync.h, $(HEADERS))\nHEADERS_A = $(HEADERS)\n\nSAMPLE_FILES_C = MQTTClient_publish MQTTClient_publish_async MQTTClient_subscribe\nSYNC_SAMPLES = ${addprefix ${blddir}/samples/,${SAMPLE_FILES_C}}\n\nUTIL_FILES_CS = paho_cs_pub paho_cs_sub \nSYNC_UTILS = ${addprefix ${blddir}/samples/,${UTIL_FILES_CS}}\n\nSAMPLE_FILES_A = MQTTAsync_subscribe MQTTAsync_publish\nASYNC_SAMPLES = ${addprefix ${blddir}/samples/,${SAMPLE_FILES_A}}\n\nUTIL_FILES_AS = paho_c_pub paho_c_sub\nASYNC_UTILS = ${addprefix ${blddir}/samples/,${UTIL_FILES_AS}}\n\nTEST_FILES_C = test1 test15 test2 sync_client_test test_mqtt4sync test10\nSYNC_TESTS = ${addprefix ${blddir}/test/,${TEST_FILES_C}}\n\nTEST_FILES_CS = test3\nSYNC_SSL_TESTS = ${addprefix ${blddir}/test/,${TEST_FILES_CS}}\n\nTEST_FILES_A = test4 test45 test6 test9 test95 test_mqtt4async test11\nASYNC_TESTS = ${addprefix ${blddir}/test/,${TEST_FILES_A}}\n\nTEST_FILES_AS = test5\nASYNC_SSL_TESTS = ${addprefix ${blddir}/test/,${TEST_FILES_AS}}\n\n# The names of the four different libraries to be built\nMQTTLIB_C = paho-mqtt3c\nMQTTLIB_CS = paho-mqtt3cs\nMQTTLIB_A = paho-mqtt3a\nMQTTLIB_AS = paho-mqtt3as\n\nCC ?= gcc\n\nifndef INSTALL\nINSTALL = install\nendif\nINSTALL_PROGRAM = $(INSTALL)\nINSTALL_DATA =  $(INSTALL) -m 644\nDOXYGEN_COMMAND = doxygen\n\nVERSION = ${MAJOR_VERSION}.${MINOR_VERSION}\n\nMQTTLIB_C_NAME = lib${MQTTLIB_C}.so.${VERSION}\nMQTTLIB_CS_NAME = lib${MQTTLIB_CS}.so.${VERSION}\nMQTTLIB_A_NAME = lib${MQTTLIB_A}.so.${VERSION}\nMQTTLIB_AS_NAME = lib${MQTTLIB_AS}.so.${VERSION}\nMQTTVERSION_NAME = paho_c_version\nPAHO_C_PUB_NAME = paho_c_pub\nPAHO_C_SUB_NAME = paho_c_sub\nPAHO_CS_PUB_NAME = paho_cs_pub\nPAHO_CS_SUB_NAME = paho_cs_sub\n\nMQTTLIB_C_TARGET = ${blddir}/${MQTTLIB_C_NAME}\nMQTTLIB_CS_TARGET = ${blddir}/${MQTTLIB_CS_NAME}\nMQTTLIB_A_TARGET = ${blddir}/${MQTTLIB_A_NAME}\nMQTTLIB_AS_TARGET = ${blddir}/${MQTTLIB_AS_NAME}\nMQTTVERSION_TARGET = ${blddir}/${MQTTVERSION_NAME}\nPAHO_C_PUB_TARGET = ${blddir}/samples/${PAHO_C_PUB_NAME}\nPAHO_C_SUB_TARGET = ${blddir}/samples/${PAHO_C_SUB_NAME}\nPAHO_CS_PUB_TARGET = ${blddir}/samples/${PAHO_CS_PUB_NAME}\nPAHO_CS_SUB_TARGET = ${blddir}/samples/${PAHO_CS_SUB_NAME}\n\n#CCFLAGS_SO = -g -fPIC $(CFLAGS) -Os -Wall -fvisibility=hidden -I$(blddir_work) \n#FLAGS_EXE = $(LDFLAGS) -I ${srcdir} -pthread -L ${blddir}\n#FLAGS_EXES = $(LDFLAGS) -I ${srcdir} ${START_GROUP} -pthread -lssl -lcrypto ${END_GROUP} -L ${blddir}\n\nCCFLAGS_SO = -g -fPIC $(CFLAGS) -D_GNU_SOURCE -Os -Wall -fvisibility=hidden -I$(blddir_work) -DPAHO_MQTT_EXPORTS=1\nFLAGS_EXE = $(LDFLAGS) -I ${srcdir} ${START_GROUP} -pthread ${GAI_LIB} ${END_GROUP} -L ${blddir}\nFLAGS_EXES = $(LDFLAGS) -I ${srcdir} ${START_GROUP} -pthread ${GAI_LIB} -lssl -lcrypto ${END_GROUP} -L ${blddir}\n\nLDCONFIG ?= /sbin/ldconfig\nLDFLAGS_C = $(LDFLAGS) -shared -Wl,-init,$(MQTTCLIENT_INIT) $(START_GROUP) -pthread $(GAI_LIB) $(END_GROUP)\nLDFLAGS_CS = $(LDFLAGS) -shared $(START_GROUP) -pthread $(GAI_LIB) $(EXTRA_LIB) -lssl -lcrypto $(END_GROUP) -Wl,-init,$(MQTTCLIENT_INIT)\nLDFLAGS_A = $(LDFLAGS) -shared -Wl,-init,$(MQTTASYNC_INIT) $(START_GROUP) -pthread $(GAI_LIB) $(END_GROUP)\nLDFLAGS_AS = $(LDFLAGS) -shared $(START_GROUP) -pthread $(GAI_LIB) $(EXTRA_LIB) -lssl -lcrypto $(END_GROUP) -Wl,-init,$(MQTTASYNC_INIT)\n\nSED_COMMAND = sed \\\n    -e \"s/@CLIENT_VERSION@/${release.version}/g\" \\\n    -e \"s/@BUILD_TIMESTAMP@/${build.level}/g\"\n\nifeq ($(OSTYPE),Linux)\n\nMQTTCLIENT_INIT = MQTTClient_init\nMQTTASYNC_INIT = MQTTAsync_init\nSTART_GROUP = -Wl,--start-group\nEND_GROUP = -Wl,--end-group\n\nGAI_LIB = -lanl\nEXTRA_LIB = -ldl\n\nLDFLAGS_C += -Wl,-soname,lib$(MQTTLIB_C).so.${MAJOR_VERSION}\nLDFLAGS_CS += -Wl,-soname,lib$(MQTTLIB_CS).so.${MAJOR_VERSION} -Wl,-no-whole-archive\nLDFLAGS_A += -Wl,-soname,lib${MQTTLIB_A}.so.${MAJOR_VERSION}\nLDFLAGS_AS += -Wl,-soname,lib${MQTTLIB_AS}.so.${MAJOR_VERSION} -Wl,-no-whole-archive\n\nelse ifeq ($(OSTYPE),Darwin)\n\nMQTTCLIENT_INIT = _MQTTClient_init\nMQTTASYNC_INIT = _MQTTAsync_init\nSTART_GROUP =\nEND_GROUP =\n\nGAI_LIB = \nEXTRA_LIB = -ldl\n\nCCFLAGS_SO += -Wno-deprecated-declarations -DOSX -I /usr/local/opt/openssl/include\nLDFLAGS_C += -Wl,-install_name,lib$(MQTTLIB_C).so.${MAJOR_VERSION}\nLDFLAGS_CS += -Wl,-install_name,lib$(MQTTLIB_CS).so.${MAJOR_VERSION} -L /usr/local/opt/openssl/lib\nLDFLAGS_A += -Wl,-install_name,lib${MQTTLIB_A}.so.${MAJOR_VERSION}\nLDFLAGS_AS += -Wl,-install_name,lib${MQTTLIB_AS}.so.${MAJOR_VERSION} -L /usr/local/opt/openssl/lib\nFLAGS_EXE += -DOSX\nFLAGS_EXES += -L /usr/local/opt/openssl/lib\n\nLDCONFIG = echo\n\nendif\n\nall: build\n\nbuild: | mkdir ${MQTTLIB_C_TARGET} ${MQTTLIB_CS_TARGET} ${MQTTLIB_A_TARGET} ${MQTTLIB_AS_TARGET} ${MQTTVERSION_TARGET} ${SYNC_SAMPLES} ${SYNC_UTILS} ${ASYNC_SAMPLES} ${ASYNC_UTILS} ${SYNC_TESTS} ${SYNC_SSL_TESTS} ${ASYNC_TESTS} ${ASYNC_SSL_TESTS}\n\nclean:\n\trm -rf ${blddir}/*\n\trm -rf ${blddir_work}/*\n\nmkdir:\n\t-mkdir -p ${blddir}/samples\n\t-mkdir -p ${blddir}/test\n\techo OSTYPE is $(OSTYPE)\n\n${SYNC_TESTS}: ${blddir}/test/%: ${srcdir}/../test/%.c $(MQTTLIB_C_TARGET)\n\t${CC} -DNOSTACKTRACE -DNOLOG_MESSAGES $(srcdir)/Thread.c -g -o $@ $< -l${MQTTLIB_C} ${FLAGS_EXE}\n\n${SYNC_SSL_TESTS}: ${blddir}/test/%: ${srcdir}/../test/%.c $(MQTTLIB_CS_TARGET)\n\t${CC} -g -o $@ $< -l${MQTTLIB_CS} ${FLAGS_EXES}\n\n${ASYNC_TESTS}: ${blddir}/test/%: ${srcdir}/../test/%.c $(MQTTLIB_A_TARGET)\n\t${CC} -g -o $@ $< -l${MQTTLIB_A} ${FLAGS_EXE}\n\n${ASYNC_SSL_TESTS}: ${blddir}/test/%: ${srcdir}/../test/%.c $(MQTTLIB_AS_TARGET)\n\t${CC} -g -o $@ $< -l${MQTTLIB_AS} ${FLAGS_EXES}\n\n${SYNC_SAMPLES}: ${blddir}/samples/%: ${srcdir}/samples/%.c $(MQTTLIB_CS_TARGET)\n\t${CC} -o $@ $< -l${MQTTLIB_CS} ${FLAGS_EXES} \n\t\n${SYNC_UTILS}: ${blddir}/samples/%: ${srcdir}/samples/%.c ${srcdir}/samples/pubsub_opts.c $(MQTTLIB_CS_TARGET)\n\t${CC} -o $@ $< -l${MQTTLIB_CS} ${FLAGS_EXES} ${srcdir}/samples/pubsub_opts.c\n\n${ASYNC_SAMPLES}: ${blddir}/samples/%: ${srcdir}/samples/%.c $(MQTTLIB_AS_TARGET)\n\t${CC} -o $@ $< -l${MQTTLIB_AS} ${FLAGS_EXES}\n\t\n${ASYNC_UTILS}: ${blddir}/samples/%: ${srcdir}/samples/%.c ${srcdir}/samples/pubsub_opts.c $(MQTTLIB_AS_TARGET)\n\t${CC} -o $@ $< -l${MQTTLIB_AS} ${FLAGS_EXES} ${srcdir}/samples/pubsub_opts.c\n\n$(blddir_work)/VersionInfo.h: $(srcdir)/VersionInfo.h.in\n\t-mkdir -p $(blddir_work)\n\t$(SED_COMMAND) $< > $@\n\n${MQTTLIB_C_TARGET}: ${SOURCE_FILES_C} ${HEADERS_C} $(blddir_work)/VersionInfo.h\n\t${CC} ${CCFLAGS_SO} -o $@ ${SOURCE_FILES_C} ${LDFLAGS_C}\n\t-ln -s lib$(MQTTLIB_C).so.${VERSION}  ${blddir}/lib$(MQTTLIB_C).so.${MAJOR_VERSION}\n\t-ln -s lib$(MQTTLIB_C).so.${MAJOR_VERSION} ${blddir}/lib$(MQTTLIB_C).so\n\n${MQTTLIB_CS_TARGET}: ${SOURCE_FILES_CS} ${HEADERS_C} $(blddir_work)/VersionInfo.h\n\t${CC} ${CCFLAGS_SO} -o $@ ${SOURCE_FILES_CS} -DOPENSSL ${LDFLAGS_CS}\n\t-ln -s lib$(MQTTLIB_CS).so.${VERSION}  ${blddir}/lib$(MQTTLIB_CS).so.${MAJOR_VERSION}\n\t-ln -s lib$(MQTTLIB_CS).so.${MAJOR_VERSION} ${blddir}/lib$(MQTTLIB_CS).so\n\n${MQTTLIB_A_TARGET}: ${SOURCE_FILES_A} ${HEADERS_A} $(blddir_work)/VersionInfo.h\n\t${CC} ${CCFLAGS_SO} -o $@ ${SOURCE_FILES_A} ${LDFLAGS_A}\n\t-ln -s lib$(MQTTLIB_A).so.${VERSION}  ${blddir}/lib$(MQTTLIB_A).so.${MAJOR_VERSION}\n\t-ln -s lib$(MQTTLIB_A).so.${MAJOR_VERSION} ${blddir}/lib$(MQTTLIB_A).so\n\n${MQTTLIB_AS_TARGET}: ${SOURCE_FILES_AS} ${HEADERS_A} $(blddir_work)/VersionInfo.h\n\t${CC} ${CCFLAGS_SO} -o $@ ${SOURCE_FILES_AS} -DOPENSSL ${LDFLAGS_AS}\n\t-ln -s lib$(MQTTLIB_AS).so.${VERSION}  ${blddir}/lib$(MQTTLIB_AS).so.${MAJOR_VERSION}\n\t-ln -s lib$(MQTTLIB_AS).so.${MAJOR_VERSION} ${blddir}/lib$(MQTTLIB_AS).so\n\n${MQTTVERSION_TARGET}: $(srcdir)/MQTTVersion.c $(srcdir)/MQTTAsync.h $(MQTTLIB_A_TARGET)\n\t${CC} ${FLAGS_EXE} -o $@ -l${MQTTLIB_A} $(srcdir)/MQTTVersion.c -ldl\n\nstrip_options:\n\t$(eval INSTALL_OPTS := -s)\n\ninstall-strip: build strip_options install\n\ninstall: build\n\tmkdir -p $(DESTDIR)$(PREFIX)${includedir}\n\t$(INSTALL_DATA) ${INSTALL_OPTS} ${MQTTLIB_C_TARGET} $(DESTDIR)${libdir}\n\t$(INSTALL_DATA) ${INSTALL_OPTS} ${MQTTLIB_CS_TARGET} $(DESTDIR)${libdir}\n\t$(INSTALL_DATA) ${INSTALL_OPTS} ${MQTTLIB_A_TARGET} $(DESTDIR)${libdir}\n\t$(INSTALL_DATA) ${INSTALL_OPTS} ${MQTTLIB_AS_TARGET} $(DESTDIR)${libdir}\n\t$(INSTALL_PROGRAM) ${INSTALL_OPTS} ${MQTTVERSION_TARGET} $(DESTDIR)${bindir}\n\t$(INSTALL_PROGRAM) ${INSTALL_OPTS} ${PAHO_C_PUB_TARGET} $(DESTDIR)${bindir}\n\t$(INSTALL_PROGRAM) ${INSTALL_OPTS} ${PAHO_C_SUB_TARGET} $(DESTDIR)${bindir}\n\t$(INSTALL_PROGRAM) ${INSTALL_OPTS} ${PAHO_CS_PUB_TARGET} $(DESTDIR)${bindir}\n\t$(INSTALL_PROGRAM) ${INSTALL_OPTS} ${PAHO_CS_SUB_TARGET} $(DESTDIR)${bindir}\n\t$(LDCONFIG) $(DESTDIR)${libdir}\n\tln -s lib$(MQTTLIB_C).so.${MAJOR_VERSION} $(DESTDIR)${libdir}/lib$(MQTTLIB_C).so\n\tln -s lib$(MQTTLIB_CS).so.${MAJOR_VERSION} $(DESTDIR)${libdir}/lib$(MQTTLIB_CS).so\n\tln -s lib$(MQTTLIB_A).so.${MAJOR_VERSION} $(DESTDIR)${libdir}/lib$(MQTTLIB_A).so\n\tln -s lib$(MQTTLIB_AS).so.${MAJOR_VERSION} $(DESTDIR)${libdir}/lib$(MQTTLIB_AS).so\n\t@if test ! -f $(DESTDIR)${libdir}/lib$(MQTTLIB_C).so.${MAJOR_VERSION}; then ln -s lib$(MQTTLIB_C).so.${VERSION} $(DESTDIR)${libdir}/lib$(MQTTLIB_C).so.${MAJOR_VERSION}; fi\n\t@if test ! -f $(DESTDIR)${libdir}/lib$(MQTTLIB_CS).so.${MAJOR_VERSION}; then ln -s lib$(MQTTLIB_CS).so.${VERSION} $(DESTDIR)${libdir}/lib$(MQTTLIB_CS).so.${MAJOR_VERSION}; fi\n\t@if test ! -f $(DESTDIR)${libdir}/lib$(MQTTLIB_A).so.${MAJOR_VERSION}; then ln -s lib$(MQTTLIB_A).so.${VERSION} $(DESTDIR)${libdir}/lib$(MQTTLIB_A).so.${MAJOR_VERSION}; fi\n\t@if test ! -f $(DESTDIR)${libdir}/lib$(MQTTLIB_AS).so.${MAJOR_VERSION}; then ln -s lib$(MQTTLIB_AS).so.${VERSION} $(DESTDIR)${libdir}/lib$(MQTTLIB_AS).so.${MAJOR_VERSION}; fi\n\t$(INSTALL_DATA) ${srcdir}/MQTTAsync.h $(DESTDIR)${includedir}\n\t$(INSTALL_DATA) ${srcdir}/MQTTClient.h $(DESTDIR)${includedir}\n\t$(INSTALL_DATA) ${srcdir}/MQTTClientPersistence.h $(DESTDIR)${includedir}\n\t$(INSTALL_DATA) ${srcdir}/MQTTProperties.h $(DESTDIR)${includedir}\n\t$(INSTALL_DATA) ${srcdir}/MQTTReasonCodes.h $(DESTDIR)${includedir}\n\t$(INSTALL_DATA) ${srcdir}/MQTTSubscribeOpts.h $(DESTDIR)${includedir}\t\n\t$(INSTALL_DATA) ${srcdir}/MQTTExportDeclarations.h $(DESTDIR)${includedir}\n\t- $(INSTALL_DATA) doc/man/man1/paho_c_pub.1 $(DESTDIR)${man1dir}\n\t- $(INSTALL_DATA) doc/man/man1/paho_c_sub.1 $(DESTDIR)${man1dir}\n\t- $(INSTALL_DATA) doc/man/man1/paho_cs_pub.1 $(DESTDIR)${man1dir}\n\t- $(INSTALL_DATA) doc/man/man1/paho_cs_sub.1 $(DESTDIR)${man1dir}\n\t\nifneq (\"$(wildcard ${blddir}/doc/MQTTClient/man/man3/MQTTClient.h.3)\",\"\")\n\t- $(INSTALL_DATA) ${blddir}/doc/MQTTClient/man/man3/MQTTClient.h.3 $(DESTDIR)${man3dir}\nendif\nifneq (\"$(wildcard ${blddir}/doc/MQTTAsync/man/man3/MQTTAsync.h.3)\",\"\")\n\t- $(INSTALL_DATA) ${blddir}/doc/MQTTAsync/man/man3/MQTTAsync.h.3 $(DESTDIR)${man3dir}\nendif\n\t\nuninstall:\n\t- rm $(DESTDIR)${libdir}/${MQTTLIB_C_NAME} \n\t- rm $(DESTDIR)${libdir}/${MQTTLIB_CS_NAME} \n\t- rm $(DESTDIR)${libdir}/${MQTTLIB_A_NAME} \n\t- rm $(DESTDIR)${libdir}/${MQTTLIB_AS_NAME} \n\t- rm $(DESTDIR)${bindir}/${MQTTVERSION_NAME} \n\t- rm $(DESTDIR)${bindir}/${PAHO_C_PUB_NAME} \n\t- rm $(DESTDIR)${bindir}/${PAHO_C_SUB_NAME} \n\t- rm $(DESTDIR)${bindir}/${PAHO_CS_PUB_NAME} \n\t- rm $(DESTDIR)${bindir}/${PAHO_CS_SUB_NAME} \n\t$(LDCONFIG) $(DESTDIR)${libdir}\n\t- rm $(DESTDIR)${libdir}/lib$(MQTTLIB_C).so\n\t- rm $(DESTDIR)${libdir}/lib$(MQTTLIB_CS).so\n\t- rm $(DESTDIR)${libdir}/lib$(MQTTLIB_A).so\n\t- rm $(DESTDIR)${libdir}/lib$(MQTTLIB_AS).so\n\t- rm $(DESTDIR)${libdir}/lib$(MQTTLIB_C).so.${MAJOR_VERSION}\n\t- rm $(DESTDIR)${libdir}/lib$(MQTTLIB_CS).so.${MAJOR_VERSION}\n\t- rm $(DESTDIR)${libdir}/lib$(MQTTLIB_A).so.${MAJOR_VERSION}\n\t- rm $(DESTDIR)${libdir}/lib$(MQTTLIB_AS).so.${MAJOR_VERSION}\n\t- rm $(DESTDIR)${includedir}/MQTTAsync.h\n\t- rm $(DESTDIR)${includedir}/MQTTClient.h\n\t- rm $(DESTDIR)${includedir}/MQTTClientPersistence.h\n\t- rm $(DESTDIR)${includedir}/MQTTProperties.h\n\t- rm $(DESTDIR)${includedir}/MQTTReasonCodes.h\n\t- rm $(DESTDIR)${includedir}/MQTTSubscribeOpts.h\n\t- rm $(DESTDIR)${includedir}/MQTTExportDeclarations.h\n\t\n\t- rm $(DESTDIR)${man1dir}/paho_c_pub.1\n\t- rm $(DESTDIR)${man1dir}/paho_c_sub.1\n\t- rm $(DESTDIR)${man1dir}/paho_cs_pub.1\n\t- rm $(DESTDIR)${man1dir}/paho_cs_sub.1\n\t\nifneq (\"$(wildcard $(DESTDIR)${man3dir}/MQTTClient.h.3)\",\"\")\n\t- rm $(DESTDIR)${man3dir}/MQTTClient.h.3\nendif\nifneq (\"$(wildcard $(DESTDIR)${man3dir}/MQTTAsync.h.3)\",\"\")\n\t- rm $(DESTDIR)${man3dir}/MQTTAsync.h.3\nendif\n\nREGEX_DOXYGEN := \\\n    's;@PROJECT_SOURCE_DIR@/src/\\?;;' \\\n    's;@PROJECT_SOURCE_DIR@;..;' \\\n    's;@CMAKE_CURRENT_BINARY_DIR@;../build/output;'\nSED_DOXYGEN := $(foreach sed_exp,$(REGEX_DOXYGEN),-e $(sed_exp))\ndefine process_doxygen\n\tcd ${srcdir}; sed $(SED_DOXYGEN) ../doc/${1}.in > ../$(docdir_work)/${1}\n\tcd ${srcdir}; $(DOXYGEN_COMMAND) ../$(docdir_work)/${1}\nendef\nhtml:\n\t-mkdir -p $(docdir_work)\n\t-mkdir -p ${docdir}\n\t$(call process_doxygen,DoxyfileV3ClientAPI)\n\t$(call process_doxygen,DoxyfileV3AsyncAPI)\n\t$(call process_doxygen,DoxyfileV3ClientInternal)\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 2.017578125,
          "content": "# Notices for Eclipse Paho\n\nThis content is produced and maintained by the Eclipse Paho project.\n\n* Project home: https://projects.eclipse.org/projects/iot.paho\n\n## Trademarks\n\nPaho™ is a trademark of the Eclipse Foundation.\n\n## Copyright\n\nAll content is the property of the respective authors or their employers. For\nmore information regarding authorship of content, please consult the listed\nsource code repository logs.\n\n## Declared Project Licenses\n\nThis program and the accompanying materials are made available under the terms\nof the Eclipse Public License v2.0 which is available at\nhttps://www.eclipse.org/legal/epl-2.0, or the Eclipse Distribution License\nv1.0 which is available at https://www.eclipse.org/org/documents/edl-v10.php.\n\nSPDX-License-Identifier: EPL-2.0 OR BSD-3-Clause\n\n## Source Code\n\nThe project maintains the following source code repositories:\n\n* https://github.com/eclipse/paho-website\n* https://github.com/eclipse/paho.golang\n* https://github.com/eclipse/paho.mqtt-sn.embedded-c\n* https://github.com/eclipse/paho.mqtt-spy\n* https://github.com/eclipse/paho.mqtt.android\n* https://github.com/eclipse/paho.mqtt.c\n* https://github.com/eclipse/paho.mqtt.cpp\n* https://github.com/eclipse/paho.mqtt.d\n* https://github.com/eclipse/paho.mqtt.embedded-c\n* https://github.com/eclipse/paho.mqtt.golang\n* https://github.com/eclipse/paho.mqtt.java\n* https://github.com/eclipse/paho.mqtt.javascript\n* https://github.com/eclipse/paho.mqtt.m2mqtt\n* https://github.com/eclipse/paho.mqtt.python\n* https://github.com/eclipse/paho.mqtt.ruby\n* https://github.com/eclipse/paho.mqtt.rust\n* https://github.com/eclipse/paho.mqtt.testing\n\n## Cryptography\n\nContent may contain encryption software. The country in which you are currently\nmay have restrictions on the import, possession, and use, and/or re-export to\nanother country, of encryption software. BEFORE using any encryption software,\nplease check the country's laws, regulations and policies concerning the import,\npossession, or use, and re-export of encryption software, to see if this is\npermitted.\n"
        },
        {
          "name": "PULL_REQUEST_TEMPLATE.md",
          "type": "blob",
          "size": 0.5703125,
          "content": "\nThank you for your interest in this project managed by the Eclipse Foundation.\n\nThe guidelines for contributions can be found in the CONTRIBUTING.md file.\n\nAt a minimum, you must sign the Eclipse ECA, and sign off each commit.  \n\nTo complete and submit a ECA, log into the Eclipse projects forge \nYou will need to create an account with the Eclipse Foundation if you have not already done so.\nBe sure to use the same email address when you register for the account that you intend to use when you commit to Git.\nGo to https://accounts.eclipse.org/user/eca to sign the Eclipse ECA.\n\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 16.837890625,
          "content": "[![Build Status](https://travis-ci.org/eclipse/paho.mqtt.c.svg?branch=master)](https://travis-ci.org/eclipse/paho.mqtt.c)\n[![Total Alerts](https://img.shields.io/lgtm/alerts/g/eclipse/paho.mqtt.c.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/eclipse/paho.mqtt.c/alerts/)\n[![Coverity Scan Build Status](https://scan.coverity.com/projects/2339/badge.svg)](https://scan.coverity.com/projects/paho-c)\n\n# Eclipse Paho C Client Library for the MQTT Protocol\n\nThis repository contains the source code for the [Eclipse Paho](http://eclipse.org/paho) MQTT C client library.\n\nThis code builds libraries which enable applications to connect to an [MQTT](http://mqtt.org) broker to publish messages, and to subscribe to topics and receive published messages.\n\nSynchronous and various asynchronous programming models are supported.\n\n## Information About MQTT\n\n* [MQTT website](http://mqtt.org)\n* [The MQTT 3.1.1 standard](http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html)\n* [The MQTT 5.0 standard](https://docs.oasis-open.org/mqtt/mqtt/v5.0/mqtt-v5.0.html)\n* [HiveMQ introduction to MQTT](https://www.hivemq.com/mqtt/)\n* [OASIS Introduction to MQTT presentation](https://www.oasis-open.org/committees/download.php/49205/MQTT-OASIS-Webinar.pdf)\n\n## Libraries\n\nThe Paho C client comprises four variant libraries, shared or static:\n\n * paho-mqtt3a - asynchronous (MQTTAsync)\n * paho-mqtt3as - asynchronous with SSL/TLS (MQTTAsync)\n * paho-mqtt3c - \"classic\" / synchronous (MQTTClient)\n * paho-mqtt3cs - \"classic\" / synchronous with SSL/TLS (MQTTClient)\n\n[Which Paho C API to use, with some history, for context](https://modelbasedtesting.co.uk/2013/10/13/which-paho-mqtt-c-api-to-use-and-some-history/)\n\n## Usage and API\n\nDetailed API documentation [is available online](https://eclipse-paho.github.io/paho.mqtt.c/MQTTClient/html/).  It is also available by building the Doxygen docs in the  ``doc`` directory.\n\nSamples are available in the Doxygen docs and also in `src/samples` for reference.  These are:\n\n- *paho_c_pub.c* and *paho_c_sub.c:* command line utilities to publish and subscribe, -h will give help\n- *paho_cs_pub.c* and *paho_cs_sub.c:* command line utilities using MQTTClient to publish and subscribe\n- *MQTTClient_publish.c, MQTTClient_subscribe.c* and *MQTTClient_publish_async.c:* MQTTClient simple code examples\n- *MQTTAsync_publish.c* and *MQTTAsync_subscribe.c:* MQTTAsync simple code examples\n\nSome potentially useful blog posts:\n\n- [Paho client MQTT 5.0 support and command line utilities](https://modelbasedtesting.co.uk/2018/08/08/paho-c-client-mqtt-5-0-and-command-line-utilities/)\n- [MQTT, QoS and persistence](https://modelbasedtesting.co.uk/2013/11/24/mqtt-qos-and-persistence/)\n- [A story of MQTT 5.0](https://modelbasedtesting.co.uk/2018/04/09/a-story-of-mqtt-5-0/)\n\n[Various MQTT and MQTT-SN talks I've given.](https://modelbasedtesting.co.uk/talks-ive-given/)\n\n### Supported Network Protocols\n\nThe library supports connecting to an MQTT server using TCP, SSL/TLS, Unix-domain sockets, and websockets (secure and insecure). This is chosen by the client using the URI supplied in the connect options. It can be specified as:\n\n    \"mqtt://<host>:<port>\"         - TCP, unsecure\n     \"tcp://<host>:<port>\"           (same)\n\n    \"mqtts://<host>:<port>\"        - SSL/TLS\n     \"ssl://<host>:<port>\"           (same)\n\n    \"unix:///path/to/socket        - UNIX-domain socket (*nix systems only)\n\n    \"ws://<host>:<port>[/path]\"    - Websockets, unsecure\n    \"wss://<host>:<port>[/path]\"   - Websockets, secure\n\nThe \"mqtt://\" and \"tcp://\" schemas are identical. They indicate an insecure connection over TCP. The \"mqtt://\" variation is new for the library, but becoming more common across different MQTT libraries.\n\nSimilarly, the \"mqtts://\" and \"ssl://\" schemas are identical. They specify a secure connection over SSL/TLS sockets. The use any of the secure connect options requires that you compile the library with the `PAHO_WITH_SSL=TRUE` CMake option to include OpenSSL. In addition, you _must_ specify `ssl_options` when you connect to the broker - i.e. you must add an instance of `ssl_options` to the `connect_options` when calling `connect()`.\n\nThe use of Unix-domain sockets requires the build option of `PAHO_WITH_UNIX_SOCKETS=TRUE` is required. This is only available on *nix-style systems like Linux and macOS. It is not vailable on Windows.\n\n## Runtime tracing\n\nA number of environment variables control runtime tracing of the C library.\n\nTracing is switched on using `MQTT_C_CLIENT_TRACE` (a value of ON traces to stdout, any other value should specify a file to trace to).\n\nThe verbosity of the output is controlled using the  `MQTT_C_CLIENT_TRACE_LEVEL` environment variable - valid values are ERROR, PROTOCOL, MINIMUM, MEDIUM and MAXIMUM (from least to most verbose).\n\nThe variable `MQTT_C_CLIENT_TRACE_MAX_LINES` limits the number of lines of trace that are output.\n\n```\nexport MQTT_C_CLIENT_TRACE=ON\nexport MQTT_C_CLIENT_TRACE_LEVEL=PROTOCOL\n```\n\n## Reporting bugs\n\nPlease open issues in the Github project: https://github.com/eclipse-paho/paho.mqtt.c/issues.\n\n## More information\n\nDiscussion of the Paho clients takes place on the [Eclipse paho-dev mailing list](https://dev.eclipse.org/mailman/listinfo/paho-dev).\n\n## Follow Eclipse Paho on Twitter: [@eclipsepaho](https://twitter.com/eclipsepaho)\n\nGeneral questions about the MQTT protocol are discussed in the [MQTT Google Group](https://groups.google.com/forum/?hl=en-US&fromgroups#!forum/mqtt).\n\nThere is more information available via the [MQTT community site](http://mqtt.org).\n\n\n## Building with CMake\n\nThe build process currently supports a number of Linux \"flavors\" including ARM and s390, OS X, AIX and Solaris as well as the Windows operating system. The build process requires the following tools:\n  * [CMake](http://cmake.org)\n  * [GNU Make](https://www.gnu.org/software/make/) or [Ninja](https://martine.github.io/ninja/)\n  * A conforming C compiler, such as [gcc](https://gcc.gnu.org/), [Clang](https://clang.llvm.org/), etc\n\nOn Debian based systems this would mean that the following packages have to be installed:\n\n```\n$ apt-get install build-essential gcc make cmake cmake-gui cmake-curses-gui\n```\n\nAlso, in order to build a debian package from the source code, the following packages have to be installed\n\n```\n$ apt-get install fakeroot devscripts dh-make lsb-release\n```\n\nNinja can be downloaded from its github project page in the \"releases\" section. Optionally it is possible to build binaries with SSL/TLS support. This requires the OpenSSL libraries and includes to be available. E. g. on Debian:\n\n```\n$ apt-get install libssl-dev\n```\n\nThe documentation requires doxygen and optionally graphviz:\n\n```\n$ apt-get install doxygen graphviz\n```\n\n### Building your application with CMake\n\nIf the Paho C library was built with CMake and is already installed on the system, it is relatively easy to set up a CMake build for your application. (If it's not already built and installed read the next section).\n\nThe library can be built with several options which create variations of the library for asynchronous or synchronous use; encryption (SSL/TLS) support or not; and whether the library is shared or static. CMake exports all of the libraries that were built as targets, and the user can chose which is best suited for an application.\n\nThe package is named: **eclipse-paho-mqtt-c**\n\nThe namespace for all the targets is also: **eclipse-paho-mqtt-c**\n\nThe target names are the same as the library names. The static libraries append *-static* to the target name even for platforms that use the same base name for shared and static libraries. So:\n\nTarget|Description\n------|-----------\npaho-mqtt3a | asynchronous, no encryption\npaho-mqtt3as | asynchronous with SSL/TLS support\npaho-mqtt3c | synchronous, no encryption\npaho-mqtt3cs | synchronous with SSL/TLS support\npaho-mqtt3a-static | asynchronous, no encryption, static linkage\npaho-mqtt3as-static | asynchronous with SSL/TLS support, static linkage\npaho-mqtt3c-static | synchronous, no encryption, static linkage\npaho-mqtt3cs-static | synchronous with SSL/TLS support, static linkage\n\nRemember, though, that not all of these targets may be available. It depends on how the library was built.\n\nA sample *CMakeLists.txt* for an application that uses the asynchronous library with encryption support *(paho-mqtt3as)* might look like this:\n\n```\ncmake_minimum_required(VERSION 3.5)\nproject(MyMQTTApp VERSION 1.0.0 LANGUAGES C)\n\nfind_package(eclipse-paho-mqtt-c REQUIRED)\n\nadd_executable(MyMQTTApp MyMQTTApp.c)\ntarget_link_libraries(MQTTVersion eclipse-paho-mqtt-c::paho-mqtt3as) \n```\n\nIf the library was installed to a non-traditional location, you may need to tell CMake where to find it using `CMAKE_PREFIX_PATH`. For example, if you installed it in */opt/mqtt/paho.mqtt.c*\n\n```\n$ cmake -DCMAKE_PREFIX_PATH=/opt/mqtt/paho.mqtt.c ..\n```\n\n### Building the Paho C library with CMake\n\nBefore compiling, determine the value of some variables in order to configure features, library locations, and other options:\n\nVariable | Default Value | Description\n------------ | ------------- | -------------\nPAHO_BUILD_SHARED | TRUE | Build a shared version of the libraries\nPAHO_BUILD_STATIC | FALSE | Build a static version of the libraries\nPAHO_HIGH_PERFORMANCE | FALSE | When set to true, the debugging aids internal tracing and heap tracking are not included.\nPAHO_WITH_SSL | FALSE | Flag that defines whether to build ssl-enabled binaries too.\nOPENSSL_ROOT_DIR | \"\" (system default) | Directory containing your OpenSSL installation (i.e. `/usr/local` when headers are in `/usr/local/include` and libraries are in `/usr/local/lib`)\nPAHO_WITH_LIBRESSL | FALSE | Flag that defines whether to build ssl-enabled binaries with LibreSSL instead of OpenSSL.  \nLIBRESSL_ROOT_DIR | \"\" (system default) | Directory containing your LibreSSL installation (i.e. `/usr/local` when headers are in `/usr/local/include` and libraries are in `/usr/local/lib`)\nPAHO_WITH_UNIX_SOCKETS | FALSE | (*nix systems only) Flag to enable support for UNIX-domain sockets\nPAHO_BUILD_DOCUMENTATION | FALSE | Create and install the HTML based API documentation (requires Doxygen)\nPAHO_BUILD_SAMPLES | FALSE | Build sample programs\nPAHO_ENABLE_TESTING | TRUE | Build test and run\nMQTT_TEST_BROKER | tcp://localhost:1883 | MQTT connection URL for a broker to use during test execution\nMQTT_TEST_PROXY | tcp://localhost:1883 | Hostname of the test proxy to use\nMQTT_SSL_HOSTNAME | localhost | Hostname of a test SSL MQTT broker to use\nPAHO_BUILD_DEB_PACKAGE | FALSE | Build debian package\n\nUsing these variables CMake can be used to generate your Ninja or Make files. Using CMake, building out-of-source is the default. Therefore it is recommended to invoke all build commands inside your chosen build directory but outside of the source tree.\n\nAn example build session targeting the build platform could look like this:\n\n```\n$ mkdir /tmp/build.paho ; cd /tmp/build.paho\n$ cmake -DPAHO_WITH_SSL=TRUE -DPAHO_BUILD_DOCUMENTATION=TRUE \\\n    -DPAHO_BUILD_SAMPLES=TRUE ~/paho.mqtt.c\n```\n\nInvoking cmake and specifying build options can also be performed using cmake-gui or ccmake (see https://cmake.org/runningcmake/). For example:\n\n```\n$ ccmake ~/paho.mqtt.c\n```\n\nTo compile/link the binaries, to install, or to generate packages, use these commands:\n\n```\n$ cmake --build .\n\n$ cmake --build . --target install\n\n$ cmake --build . --target package\n```\n\nTo build, install, or generate packages, you can also use the generated builder like _ninja_ or _make_ directly after invoking the initial CMake configuration step, such as `ninja package` or `make -j <number-of-jpbs> package`.\n\n### Debug builds\n\nDebug builds can be performed by defining the value of the `CMAKE_BUILD_TYPE` option to `Debug`. For example:\n\n```\n$ cmake -DCMAKE_BUILD_TYPE=Debug ~/paho.mqtt.c\n```\n\n### Running the tests\n\nTest code is available in the `test` directory. The tests can be built and executed with the CMake build system. The test execution requires a MQTT broker running. By default, the build system uses `localhost`, however it is possible to configure the build to use an external broker. These parameters are documented in the Build Requirements section above.\n\nAfter ensuring a MQTT broker is available, it is possible to execute the tests by starting the proxy and running `ctest` as described below:\n\n```\n$ python ../test/mqttsas.py &\n$ ctest -VV\n```\n\n### Cross compilation\n\nCross compilation using CMake is performed by using so called \"toolchain files\" (see: https://cmake.org/cmake/help/latest/manual/cmake-toolchains.7.html).\n\nThe path to the toolchain file can be specified by using CMake's `-DCMAKE_TOOLCHAIN_FILE` option. In case no toolchain file is specified, the build is performed for the native build platform.\n\nFor your convenience toolchain files for the following platforms can be found in the `cmake` directory of Eclipse Paho:\n  * Linux x86\n  * Linux ARM11 (a.k.a. the Raspberry Pi)\n  * Windows x86_64\n  * Windows x86\n\nThe provided toolchain files assume that required compilers/linkers are to be found in the environment, i. e. the PATH-Variable of your user or system. If you prefer, you can also specify the absolute location of your compilers in the toolchain files.\n\nExample invocation for the Raspberry Pi:\n\n```\n$ cmake -GNinja -DPAHO_WITH_SSL=TRUE -DPAHO_BUILD_SAMPLES=TRUE \\\n    -DPAHO_BUILD_DOCUMENTATION=TRUE \\\n    -DOPENSSL_LIB_SEARCH_PATH=/tmp/libssl-dev/usr/lib/arm-linux-gnueabihf \\\n    -DOPENSSL_INC_SEARCH_PATH=\"/tmp/libssl-dev/usr/include/openssl;/tmp/libssl-dev/usr/include/arm-linux-gnueabihf\" \\\n    -DCMAKE_TOOLCHAIN_FILE=~/paho.mqtt.c/cmake/toolchain.linux-arm11.cmake \\\n    ~/paho.mqtt.c\n```\n\nCompilers for the Raspberry Pi and other ARM targets can be obtained from ARM (https://developer.arm.com/tools-and-software/open-source-software/developer-tools/gnu-toolchain/downloads)\n\nThis example assumes that OpenSSL-libraries and includes have been installed in the `/tmp/libssl-dev` directory.\n\nExample invocation for Windows 64 bit:\n\n```\n$ cmake -DPAHO_BUILD_SAMPLES=TRUE \\\n    -DCMAKE_TOOLCHAIN_FILE=~/paho.mqtt.c/cmake/toolchain.win64.cmake \\\n    ~/paho.mqtt.c\n```\n\nIn this case the libraries and executable are not linked against OpenSSL Libraries. Cross compilers for the Windows platform can be installed on Debian like systems like this:\n\n```\n$ apt-get install gcc-mingw-w64-x86-64 gcc-mingw-w64-i686\n```\n\n## Build instructions for GNU Make\n\nEnsure the OpenSSL development package is installed.  Then from the client library base directory run:\n\n```\n$ make\n$ sudo make install\n```\n\nThis will build and install the libraries.  To uninstall:\n\n```\n$ sudo make uninstall\n```\n\nTo build the documentation requires doxygen and optionally graphviz.\n\n```\n$ make html\n```\n\nThe provided GNU Makefile is intended to perform all build steps in the ```build``` directory within the source-tree of Eclipse Paho. Generated binares, libraries, and the documentation can be found in the ```build/output``` directory after completion. \n\nOptions that are passed to the compiler/linker can be specified by typical Unix build variables:\n\nVariable | Description\n------------ | -------------\nCC | Path to the C compiler\nCFLAGS | Flags passed to compiler calls\nLDFLAGS | Flags passed to linker calls\n\n## Building paho-mqtt - Using vcpkg\n\nYou can download and install paho-mqtt using the [vcpkg](https://github.com/Microsoft/vcpkg) dependency manager:\n\n    git clone https://github.com/Microsoft/vcpkg.git\n    cd vcpkg\n    ./bootstrap-vcpkg.sh\n    ./vcpkg integrate install\n    ./vcpkg install paho-mqtt\n\nThe paho-mqtt port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please [create an issue or pull request](https://github.com/Microsoft/vcpkg) on the vcpkg repository.\n\n## Fully static builds with musl libc\n\n(By Frank Pagliughi)\n\n[musl libc](https://musl.libc.org/) is is an implementation of the C standard library built on top of the Linux system call API, including interfaces defined in the base language standard, POSIX, and widely agreed-upon extensions.\n\nUsers of the Rust library, which wraps this one, had been complaining that they could not compile using the musl build tools. Musl is a small std C lib that can be statically linked. With the latest Paho C library (and a very minor tweak to the build), we're now able to build Rust apps using musl and Paho C that are fully static; no runtime dependencies on the platform; not even on the standard C lib.\n\n$ ./async_publish\nPublishing a message on the 'test' topic\n\n$ ldd async_publish\n\tnot a dynamic executable\n\nSo, for example, if maintaining a suite of apps for some newer and older embedded Linux boards, the same executables could be deployed without worry about the C ABI on the particular boards.\n\nCertainly C apps using the Paho library could do this also.\n\n## Microsoft Windows\n\n### Calling convention\n\nAs is normal for C programs on Windows, the calling convention is __cdecl.  See the Microsoft documentation here:\n\nhttps://docs.microsoft.com/en-us/cpp/cpp/cdecl?view=vs-2019\n\nIf you call this library from another language, you may need to take this into account.\n\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.64453125,
          "content": "# Security Policy\n\nThis project follows the [Eclipse Vulnerability Reporting Policy](https://www.eclipse.org/security/policy.php).\nVulnerabilities are tracked by the Eclipse security team, in cooperation with the project lead.\nFixing vulnerabilities is taken care of by the project committers, with assistance and guidance of the security\nteam.\n\n## Supported Versions\n\nEclipse Paho provides security updates for the most recent version only.\n\n## Reporting a Vulnerability\n\nWe recommend that in case of suspected vulnerabilities you do not create a GitHub issue, but instead contact the\nEclipse Security Team directly sending an email to security@eclipse.org.\n\n"
        },
        {
          "name": "about.html",
          "type": "blob",
          "size": 1.55859375,
          "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\"><head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n<title>About</title>\n</head>\n<body lang=\"EN-US\">\n<h2>About This Content</h2>\n \n<p><em>April 6, 2020</em></p>\t\n<h3>License</h3>\n\n<p>The Eclipse Foundation makes available all content in this plug-in (\"Content\").  Unless otherwise \nindicated below, the Content is provided to you under the terms and conditions of the\nEclipse Public License Version 2.0 (\"EPL\") and Eclipse Distribution License Version 1.0 (\"EDL\").\nA copy of the EPL is available at \n<a href=\"https://www.eclipse.org/legal/epl-2.0/\">https://www.eclipse.org/legal/epl-2.0/</a> \nand a copy of the EDL is available at \n<a href=\"http://www.eclipse.org/org/documents/edl-v10.php\">http://www.eclipse.org/org/documents/edl-v10.php</a>. \nFor purposes of the EPL, \"Program\" will mean the Content.</p>\n\n<p>If you did not receive this Content directly from the Eclipse Foundation, the Content is \nbeing redistributed by another party (\"Redistributor\") and different terms and conditions may\napply to your use of any object code in the Content.  Check the Redistributor's license that was \nprovided with the Content.  If no such license exists, contact the Redistributor.  Unless otherwise\nindicated below, the terms and conditions of the EPL still apply to any source code in the Content\nand such source code may be obtained at <a href=\"http://www.eclipse.org/\">http://www.eclipse.org</a>.</p>\n\n</body></html>\n"
        },
        {
          "name": "android",
          "type": "tree",
          "content": null
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 3.6083984375,
          "content": "version: 1.3.{build}\r\n \r\nenvironment:\r\n  matrix:\r\n    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2013\r\n      PAHO_WINDOWS_BUILD_BIT: x64\r\n      OPENSSL_ROOT_DIR: \"C:/OpenSSL-v111-Win64\"\r\n      PAHO_BUILD_STATIC: FALSE\r\n      PAHO_BUILD_SHARED: TRUE\r\n      PAHO_HIGH_PERFORMANCE: FALSE\r\n      PYTHON_VERSION: Python36\r\n    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015\r\n      PAHO_WINDOWS_BUILD_BIT: x64\r\n      OPENSSL_ROOT_DIR: \"C:/OpenSSL-Win64\"\r\n      PAHO_BUILD_STATIC: TRUE\r\n      PAHO_BUILD_SHARED: FALSE\r\n      PAHO_HIGH_PERFORMANCE: TRUE\r\n      PYTHON_VERSION: Python36\r\n    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019\r\n      PAHO_WINDOWS_BUILD_BIT: x86\r\n      OPENSSL_ROOT_DIR: \"C:/OpenSSL-Win32\"\r\n      PAHO_BUILD_STATIC: FALSE\r\n      PAHO_BUILD_SHARED: TRUE\r\n      PAHO_HIGH_PERFORMANCE: TRUE\r\n      PYTHON_VERSION: Python37\r\n    \r\nconfiguration: Debug\r\ninstall:\r\n  - cmd: ver\r\n  - cmd: openssl version\r\n  - cmd: C:\\%PYTHON_VERSION%\\python --version\r\n  - cmd: netsh advfirewall firewall add rule name=\"Python 3\" dir=in action=allow program=\"C:\\%PYTHON_VERSION%\\python.exe\" enable=yes\r\n  - cmd: netsh advfirewall firewall add rule name=\"Open Port 1883\" dir=in action=allow protocol=TCP localport=1883\r\n  - cmd: netsh advfirewall set allprofiles state off\r\n  - ps: Start-Process C:\\$Env:PYTHON_VERSION\\python -ArgumentList 'test\\mqttsas.py'\r\n  - cmd: git clone https://github.com/eclipse/paho.mqtt.testing.git\r\n  - cmd: cd paho.mqtt.testing\\interoperability\r\n  - ps: Start-Process C:\\$Env:PYTHON_VERSION\\python -ArgumentList 'startbroker.py -c localhost_testing.conf'\r\n  - cmd: cd ..\\..\r\n\r\nbuild_script:\r\n- cmd: >-\r\n    mkdir build.paho\r\n\r\n    cd build.paho\r\n\r\n    echo %APPVEYOR_BUILD_WORKER_IMAGE%\r\n\r\n    if \"%APPVEYOR_BUILD_WORKER_IMAGE%\" == \"Visual Studio 2019\" call \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat\" %PAHO_WINDOWS_BUILD_BIT%\r\n\r\n    if \"%APPVEYOR_BUILD_WORKER_IMAGE%\" == \"Visual Studio 2015\" call \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\vcvarsall.bat\" %PAHO_WINDOWS_BUILD_BIT%\r\n\r\n    if \"%APPVEYOR_BUILD_WORKER_IMAGE%\" == \"Visual Studio 2013\" call \"C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\vcvarsall.bat\" %PAHO_WINDOWS_BUILD_BIT%\r\n\r\n    cmake -G \"NMake Makefiles\" -DPAHO_WITH_SSL=TRUE -DOPENSSL_ROOT_DIR=%OPENSSL_ROOT_DIR% -DPAHO_BUILD_DOCUMENTATION=FALSE -DPAHO_BUILD_SAMPLES=TRUE -DCMAKE_BUILD_TYPE=Release -DCMAKE_VERBOSE_MAKEFILE=TRUE -DPAHO_BUILD_STATIC=%PAHO_BUILD_STATIC% -DPAHO_BUILD_SHARED=%PAHO_BUILD_SHARED% -DPAHO_HIGH_PERFORMANCE=%PAHO_HIGH_PERFORMANCE% ..\r\n\r\n    nmake\r\n\r\n    ctest -T test -VV \r\n\r\n    cd ..\r\n\r\nafter_build:\r\n- cmd: >-\r\n    set ZIPNAME=eclipse-paho-mqtt-c-windows.zip \r\n\r\n    7z a %ZIPNAME% %APPVEYOR_BUILD_FOLDER%\\*.html\r\n\r\n    7z a %ZIPNAME% %APPVEYOR_BUILD_FOLDER%\\*.md\r\n\r\n    7z a %ZIPNAME% %APPVEYOR_BUILD_FOLDER%\\*-v10\r\n\r\n    7z a %ZIPNAME% build.paho\\src\\*.dll\r\n\r\n    7z a %ZIPNAME% build.paho\\src\\*.lib\r\n\r\n    7z rn %ZIPNAME% build.paho\\src lib\r\n\r\n    7z a %ZIPNAME% build.paho\\src\\samples\\*.exe\r\n\r\n    7z rn %ZIPNAME% build.paho\\src\\samples bin\r\n\r\n    if \"%PAHO_BUILD_SHARED%\" == \"TRUE\" 7z a %ZIPNAME% \"%APPVEYOR_BUILD_FOLDER%\\build.paho\\src\\MQTTVersion.exe\"\r\n\r\n    7z rn %ZIPNAME% MQTTVersion.exe bin\\MQTTVersion.exe\r\n\r\n    7z a %ZIPNAME% src\\MQTTClient.h src\\MQTTAsync.h src\\MQTTClientPersistence.h src\\MQTTProperties.h src\\MQTTReasonCodes.h src\\MQTTSubscribeOpts.h src\\MQTTExportDeclarations.h\r\n\r\n    7z rn %ZIPNAME% src include\r\n\r\n    7z a %ZIPNAME% src\\samples\\*.c\r\n\r\n    7z rn %ZIPNAME% src\\samples samples\r\n\r\nartifacts:\r\n- path: eclipse-paho-mqtt-c-windows.zip\r\n  name: paho-mqtt-c\r\n\r\ntest:\r\n  assemblies: build/Testing/*/Test.xml\r\n"
        },
        {
          "name": "build.xml",
          "type": "blob",
          "size": 10.4072265625,
          "content": "<!--****************************************************************************\n  Copyright (c) 2012, 2020 IBM Corp.\n\n  All rights reserved. This program and the accompanying materials\n  are made available under the terms of the Eclipse Public License v2.0\n  and Eclipse Distribution License v1.0 which accompany this distribution.\n\n  The Eclipse Public License is available at\n     https://www.eclipse.org/legal/epl-2.0/\n  and the Eclipse Distribution License is available at\n    http://www.eclipse.org/org/documents/edl-v10.php.\n\n  Contributors:\n     Ian Craggs - initial API and implementation and/or initial documentation\n*******************************************************************************-->\n\n<project name=\"MQTT C Client\" default=\"full\">\n\n  <taskdef resource=\"net/sf/antcontrib/antlib.xml\">\n    <classpath>\n      <pathelement location=\"/opt/public/cbi/build/3rdPartyJars/ant-contrib.jar\" />\n      <pathelement location=\"/usr/share/java/ant-contrib.jar\" />\n    </classpath>\n  </taskdef>\n\n  <property name=\"output.folder\" value=\"build/output\" />\n  <loadfile property=\"version.major\" srcFile=\"version.major\"/>\n  <loadfile property=\"version.minor\" srcFile=\"version.minor\"/>\n  <loadfile property=\"version.patch\" srcFile=\"version.patch\"/>\n  <property name=\"release.version\" value=\"${version.major}.${version.minor}.${version.patch}\" />\n\n  <property name=\"libname\" value=\"mqttv3c\" />\n  <property name=\"libname.ssl\" value=\"mqttv3cs\" />\n  <property name=\"libname.async\" value=\"mqttv3a\" />\n  <property name=\"libname.async.ssl\" value=\"mqttv3as\" />\n  <property name=\"ssl\" value=\"yes\" />\n  <property name=\"windows.openssl.folder\" value=\"c:\\openssl\\bin\" />\n  <property name=\"test.hostname\" value=\"iot.eclipse.org\"/>\n  <property name=\"test.port\" value=\"1883\"/>\n  <property name=\"proxy.port\" value=\"18883\"/>\n  <if>\n    <os family=\"windows\"/>\n    <then>\n      <property name=\"os.family\" value=\"windows\" />\n    </then>\n    <else>\n      <if>\n      <os family=\"mac\"/>\n      <then>\n        <property name=\"os.family\" value=\"mac\" />\n      </then>\n      <else>\n        <property name=\"os.family\" value=\"unix\" />\n      </else>\n      </if>\n    </else>\n  </if>\n  <echo message=\"os.family is '${os.family}'\" />\n\n  <target name=\"init\">\n    <tstamp>\n      <format property=\"buildTimestamp\" pattern=\"yyyyMMddHHmm\" />\n    </tstamp>\n\n    <fileset id=\"sync.source.fileset\" dir=\"src\">\n      <include name=\"*.c\"/>\n      <exclude name=\"MQTTAsync.c\"/>\n      <exclude name=\"MQTTVersion.c\"/>\n    </fileset>\n    <pathconvert refid=\"sync.source.fileset\" property=\"sync.source.files\" pathsep=\" \"/>\n\n    <fileset id=\"async.source.fileset\" dir=\"src\">\n      <include name=\"*.c\"/>\n      <exclude name=\"MQTTClient.c\"/>\n      <exclude name=\"MQTTVersion.c\"/>\n    </fileset>\n    <pathconvert refid=\"async.source.fileset\" property=\"async.source.files\" pathsep=\" \"/>\n\n  </target>\n\n  <target name=\"version\" depends=\"init\" description=\"replace tags with the right levels\">\n    <property name=\"build.level\" value=\"${DSTAMP}${TSTAMP}\" />\n    <copy file=\"src/VersionInfo.h.in\" tofile=\"src/VersionInfo.h\" overwrite=\"true\"/>\n    <replace file=\"src/VersionInfo.h\" token=\"@BUILD_TIMESTAMP@\" value=\"${build.level}\" />\n    <replace file=\"src/VersionInfo.h\" token=\"@CLIENT_VERSION@\" value=\"${release.version}\" />\n  </target>\n\n  <target name=\"test\" >\n    <!-- display Python version -->\n    <exec executable=\"python\" failonerror=\"true\">\n      <arg line=\"-V\"/>\n    </exec>\n    <exec executable=\"python\" dir=\"test\" spawn=\"true\">\n        <arg value=\"mqttsas2.py\" />\n        <arg value=\"${test.hostname}\" />\n        <arg value=\"${test.port}\" />\n        <arg value=\"${proxy.port}\" />\n    </exec>\n    <if>\n      <os family=\"windows\"/>\n    <then>\n      <foreach target=\"runAtest\" param=\"aTest\" list=\"test1,test2,test4,test9\"/>\n    </then>\n    <else>\n      <foreach target=\"runAtest\" param=\"aTest\" list=\"test1,test2,test4,test9\"/>\n    </else>\n    </if>\n    <foreach target=\"runSSLtest\" param=\"aTest\" list=\"test3,test5\"/>\n  </target>\n\n  <target name=\"runAtest\">\n    <if>\n      <os family=\"windows\"/>\n    <then>\n      <exec executable=\"cmd.exe\" failonerror=\"true\" dir=\"${output.folder}/test\" >\n        <arg value=\"/c\" />\n        <arg value=\"${aTest}.exe\" />\n        <arg value=\"--connection\" />\n        <arg value=\"tcp://${test.hostname}:${test.port}\" />\n        <arg value=\"--proxy_connection\" />\n        <arg value=\"tcp://localhost:${proxy.port}\" />\n        <env key=\"PATH\" path=\"${output.folder}\" />\n      </exec>\n    </then>\n    <else>\n      <exec executable=\"./${aTest}\" failonerror=\"true\" dir=\"${output.folder}/test\" >\n        <arg value=\"--connection\" />\n        <arg value=\"tcp://${test.hostname}:${test.port}\" />\n        <arg value=\"--proxy_connection\" />\n        <arg value=\"tcp://localhost:${proxy.port}\" />\n        <env key=\"LD_LIBRARY_PATH\" path=\"${output.folder}\" />\n        <env key=\"DYLD_LIBRARY_PATH\" path=\"${output.folder}\" />\n      </exec>\n    </else>\n    </if>\n  </target>\n\n  <target name=\"runSSLtest\">\n    <if>\n      <os family=\"windows\"/>\n    <then>\n      <exec executable=\"cmd.exe\" failonerror=\"true\" dir=\"${output.folder}/test\" >\n        <arg value=\"/c\" />\n        <arg value=\"${aTest}.exe\" />\n        <arg value=\"--hostname\" />\n        <arg value=\"${test.hostname}\" />\n        <env key=\"PATH\" path=\"${output.folder};${windows.openssl.folder}\" />\n      </exec>\n    </then>\n    <else>\n      <exec executable=\"./${aTest}\" failonerror=\"true\" dir=\"${output.folder}/test\" >\n        <arg value=\"--hostname\" />\n        <arg value=\"${test.hostname}\" />\n        <env key=\"LD_LIBRARY_PATH\" path=\"${output.folder}\" />\n        <env key=\"DYLD_LIBRARY_PATH\" path=\"${output.folder}\" />\n      </exec>\n    </else>\n    </if>\n  </target>\n\n  <target name=\"doc\" >\n    <if>\n      <available file=\"/usr/bin/doxygen\"/>\n      <then>\n        <mkdir dir=\"${output.folder}/doc\"/>\n        <exec executable=\"doxygen\" dir=\"src\">\n          <arg value=\"../doc/DoxyfileV3ClientAPI\"/>\n        </exec>\n        <exec executable=\"doxygen\" dir=\"src\">\n          <arg value=\"../doc/DoxyfileV3AsyncAPI\"/>\n        </exec>\n        <zip destfile=\"${output.folder}/MQTTClient_doc.zip\">\n          <zipfileset dir=\"${output.folder}/doc/MQTTClient\" />\n        </zip>\n        <zip destfile=\"${output.folder}/MQTTAsync_doc.zip\">\n\t        <zipfileset dir=\"${output.folder}/doc/MQTTAsync\" prefix=\"MQTTAsync/\"/>\n        </zip>\n        <delete dir=\"${output.folder}/doc\" />\n      </then>\n      <else>\n        <echo message=\"doxygen is not available\" />\n      </else>\n    </if>\n  </target>\n\n  <target name=\"build\" >\n    <if>\n    <os family=\"unix\"/>\n    <then>\n    <delete dir=\"${output.folder}\" />\n    <!-- display gcc version -->\n    <exec executable=\"gcc\" failonerror=\"true\">\n      <arg line=\"-v\"/>\n    </exec>\n    <if>\n      <available file=\"/usr/bin/make\"/>\n      <then>\n        <exec executable=\"make\" dir=\".\"/>\n      </then>\n    </if>\n    </then>\n    </if>\n    <if>\n    <os family=\"windows\"/>\n    <then>\n    <delete dir=\"${output.folder}\" />\n    <!-- display gcc version -->\n    <exec executable=\"cl\" failonerror=\"true\">\n    </exec>\n    <exec executable=\"msbuild\" dir=\".\">\n           <arg line='\"Windows Build\\Paho C MQTT APIs.sln\"'/>\n           <arg line=\"/p:Configuration=Release\"/>\n    </exec>\n     </then>\n    </if>\n  </target>\n\n  <target name=\"package\">\n    <mkdir dir=\"${output.folder}/include\"/>\n    <copy overwrite=\"true\" todir=\"${output.folder}/include\">\n      <fileset dir=\"src\" includes=\"MQTTClient.h,MQTTAsync.h,MQTTClientPersistence.h\"/>\n    </copy>\n    <copy overwrite=\"true\" todir=\"${output.folder}\">\n      <fileset dir=\".\" includes=\"README.md,CONTRIBUTING.md,about.html,notice.html,edl-v10,epl-v20\"/>\n    </copy>\n    <mkdir dir=\"${output.folder}/lib\"/>\n    <move overwrite=\"true\" todir=\"${output.folder}/lib\">\n      <fileset dir=\"${output.folder}\" includes=\"*paho*\"/>\n    </move>\n    <mkdir dir=\"${output.folder}/bin\"/>\n    <move overwrite=\"true\" todir=\"${output.folder}/bin\">\n      <fileset dir=\"${output.folder}/samples\" includes=\"*\"/>\n      <fileset dir=\"${output.folder}\" includes=\"MQTTVersion\"/>\n    </move>\n    <copy overwrite=\"true\" todir=\"${output.folder}/samples\">\n      <fileset dir=\"src/samples\" includes=\"*\"/>\n    </copy>\n    <delete>\n       <fileset dir=\".\" includes=\"eclipse-paho-mqtt-c-windows-${release.version}.zip\"/>\n       <fileset dir=\".\" includes=\"eclipse-paho-mqtt-c-${os.family}-${release.version}.tar.gz\"/>\n    </delete>\n\n   <if>\n    <os family=\"windows\"/>\n    <then>\n    <exec executable=\"c:\\cygwin\\bin\\zip.exe\" failonerror=\"true\" dir=\"${output.folder}\">\n      <arg value=\"-r\"/>\n      <arg value=\"eclipse-paho-mqtt-c-windows-${release.version}.zip\"/>\n      <arg value=\"about.html\"/>\n      <arg value=\"notice.html\"/>\n      <arg value=\"README.md\"/>\n      <arg value=\"CONTRIBUTING.md\"/>\n      <arg value=\"epl-v20\"/>\n      <arg value=\"edl-v10\"/>\n      <arg value=\"include\"/>\n\t  <arg value=\"samples\"/>\n      <arg value=\"lib\"/>\n      <arg value=\"bin\"/>\n    </exec>\n    </then>\n    <else>\n    <exec executable=\"tar\" failonerror=\"true\" dir=\"${output.folder}\">\n      <arg value=\"czf\"/>\n      <arg value=\"eclipse-paho-mqtt-c-${os.family}-${release.version}.tar.gz\"/>\n      <arg value=\"about.html\"/>\n      <arg value=\"notice.html\"/>\n      <arg value=\"README.md\"/>\n      <arg value=\"CONTRIBUTING.md\"/>\n      <arg value=\"epl-v20\"/>\n      <arg value=\"edl-v10\"/>\n      <arg value=\"include\"/>\n\t  <arg value=\"samples\"/>\n      <arg value=\"lib\"/>\n      <arg value=\"bin\"/>\n    </exec>\n    </else>\n    </if>\n\n   <if>\n    <os family=\"unix\"/>\n    <then>\n    <exec executable=\"tar\" failonerror=\"true\" dir=\".\">\n      <arg value=\"czf\"/>\n      <arg value=\"${output.folder}/eclipse-paho-mqtt-c-src-${release.version}.tar.gz\"/>\n      <arg value=\"about.html\"/>\n      <arg value=\"notice.html\"/>\n      <arg value=\"README.md\"/>\n      <arg value=\"CONTRIBUTING.md\"/>\n      <arg value=\"epl-v20\"/>\n      <arg value=\"edl-v10\"/>\n      <arg value=\"Makefile\"/>\n      <arg value=\"build.xml\"/>\n      <arg value=\"src\"/>\n      <arg value=\"test\"/>\n      <arg value=\"Windows Build\"/>\n    </exec>\n    </then>\n   </if>\n  </target>\n\n  <target name=\"copy\">\n    <if>\n      <available file=\"/shared/technology\"/>\n      <then>\n        <mkdir dir=\"/shared/technology/paho/C/${release.version}/${build.level}\"/>\n       \t<echo message=\"Copying the build output to /shared\" />\n      \t<copy overwrite=\"true\" todir=\"/shared/technology/paho/C/${release.version}/${build.level}\">\n          <fileset dir=\"${output.folder}\">\n\t          <include name=\"*.gz\"/>\n\t          <include name=\"*.zip\"/>\n          </fileset>\n        </copy>\n      </then>\n    </if>\n  </target>\n\n  <target name=\"full\" depends=\"init, version, build, test, doc, package, copy\" />\n\n</project>\n"
        },
        {
          "name": "cbuild.bat",
          "type": "blob",
          "size": 0.66796875,
          "content": "REM start broker and proxy\nREM Start-Process C:\\Python36\\python -ArgumentList 'test\\mqttsas.py'\nREM Start-Process C:\\Python36\\python -ArgumentList 'startbroker.py -c localhost_testing.conf'\n\nsetlocal\nset APPVEYOR_BUILD_FOLDER=%cd%\n\nrmdir /s /q build.paho\nmkdir build.paho\n\ncd build.paho\n\nREM call \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\vcvarsall.bat\" x64\ncall \"j:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Auxiliary\\Build\\vcvars64.bat\"\n\ncmake -G \"NMake Makefiles\" -DPAHO_WITH_SSL=TRUE -DPAHO_BUILD_DOCUMENTATION=FALSE -DPAHO_BUILD_SAMPLES=TRUE -DCMAKE_BUILD_TYPE=Release -DCMAKE_VERBOSE_MAKEFILE=TRUE ..\n\nnmake\n\nctest -T test -VV\n\ncd ..\n\nendlocal\n"
        },
        {
          "name": "cmake-build.sh",
          "type": "blob",
          "size": 0.6337890625,
          "content": "#!/bin/bash\n\nset -e\n\nrm -rf build.paho\nmkdir build.paho\ncd build.paho\necho \"travis build dir $TRAVIS_BUILD_DIR pwd $PWD with OpenSSL root $OPENSSL_ROOT_DIR\"\ncmake -DPAHO_BUILD_STATIC=$PAHO_BUILD_STATIC -DPAHO_BUILD_SHARED=$PAHO_BUILD_SHARED -DCMAKE_BUILD_TYPE=Debug -DPAHO_WITH_SSL=TRUE -DOPENSSL_ROOT_DIR=$OPENSSL_ROOT_DIR -DPAHO_BUILD_DOCUMENTATION=FALSE -DPAHO_BUILD_SAMPLES=TRUE -DPAHO_HIGH_PERFORMANCE=$PAHO_HIGH_PERFORMANCE -DPAHO_USE_SELECT=$PAHO_USE_SELECT ..\ncmake --build .\npython3 ../test/mqttsas.py &\nctest -VV --timeout 600\nkillall python3 || true\nsleep 3 # allow broker time to terminate and report\n#killall mosquitto\ncpack --verbose\n\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "deploy_rsa.enc",
          "type": "blob",
          "size": 3.171875,
          "content": null
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "edl-v10",
          "type": "blob",
          "size": 1.52734375,
          "content": "\nEclipse Distribution License - v 1.0\n\nCopyright (c) 2007, Eclipse Foundation, Inc. and its licensors.\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n    Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n    Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n    Neither the name of the Eclipse Foundation, Inc. nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. \n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n"
        },
        {
          "name": "epl-v20",
          "type": "blob",
          "size": 13.865234375,
          "content": "Eclipse Public License - v 2.0\n\n    THE ACCOMPANYING PROGRAM IS PROVIDED UNDER THE TERMS OF THIS ECLIPSE\n    PUBLIC LICENSE (\"AGREEMENT\"). ANY USE, REPRODUCTION OR DISTRIBUTION\n    OF THE PROGRAM CONSTITUTES RECIPIENT'S ACCEPTANCE OF THIS AGREEMENT.\n\n1. DEFINITIONS\n\n\"Contribution\" means:\n\n  a) in the case of the initial Contributor, the initial content\n     Distributed under this Agreement, and\n\n  b) in the case of each subsequent Contributor:\n     i) changes to the Program, and\n     ii) additions to the Program;\n  where such changes and/or additions to the Program originate from\n  and are Distributed by that particular Contributor. A Contribution\n  \"originates\" from a Contributor if it was added to the Program by\n  such Contributor itself or anyone acting on such Contributor's behalf.\n  Contributions do not include changes or additions to the Program that\n  are not Modified Works.\n\n\"Contributor\" means any person or entity that Distributes the Program.\n\n\"Licensed Patents\" mean patent claims licensable by a Contributor which\nare necessarily infringed by the use or sale of its Contribution alone\nor when combined with the Program.\n\n\"Program\" means the Contributions Distributed in accordance with this\nAgreement.\n\n\"Recipient\" means anyone who receives the Program under this Agreement\nor any Secondary License (as applicable), including Contributors.\n\n\"Derivative Works\" shall mean any work, whether in Source Code or other\nform, that is based on (or derived from) the Program and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship.\n\n\"Modified Works\" shall mean any work in Source Code or other form that\nresults from an addition to, deletion from, or modification of the\ncontents of the Program, including, for purposes of clarity any new file\nin Source Code form that contains any contents of the Program. Modified\nWorks shall not include works that contain only declarations,\ninterfaces, types, classes, structures, or files of the Program solely\nin each case in order to link to, bind by name, or subclass the Program\nor Modified Works thereof.\n\n\"Distribute\" means the acts of a) distributing or b) making available\nin any manner that enables the transfer of a copy.\n\n\"Source Code\" means the form of a Program preferred for making\nmodifications, including but not limited to software source code,\ndocumentation source, and configuration files.\n\n\"Secondary License\" means either the GNU General Public License,\nVersion 2.0, or any later versions of that license, including any\nexceptions or additional permissions as identified by the initial\nContributor.\n\n2. GRANT OF RIGHTS\n\n  a) Subject to the terms of this Agreement, each Contributor hereby\n  grants Recipient a non-exclusive, worldwide, royalty-free copyright\n  license to reproduce, prepare Derivative Works of, publicly display,\n  publicly perform, Distribute and sublicense the Contribution of such\n  Contributor, if any, and such Derivative Works.\n\n  b) Subject to the terms of this Agreement, each Contributor hereby\n  grants Recipient a non-exclusive, worldwide, royalty-free patent\n  license under Licensed Patents to make, use, sell, offer to sell,\n  import and otherwise transfer the Contribution of such Contributor,\n  if any, in Source Code or other form. This patent license shall\n  apply to the combination of the Contribution and the Program if, at\n  the time the Contribution is added by the Contributor, such addition\n  of the Contribution causes such combination to be covered by the\n  Licensed Patents. The patent license shall not apply to any other\n  combinations which include the Contribution. No hardware per se is\n  licensed hereunder.\n\n  c) Recipient understands that although each Contributor grants the\n  licenses to its Contributions set forth herein, no assurances are\n  provided by any Contributor that the Program does not infringe the\n  patent or other intellectual property rights of any other entity.\n  Each Contributor disclaims any liability to Recipient for claims\n  brought by any other entity based on infringement of intellectual\n  property rights or otherwise. As a condition to exercising the\n  rights and licenses granted hereunder, each Recipient hereby\n  assumes sole responsibility to secure any other intellectual\n  property rights needed, if any. For example, if a third party\n  patent license is required to allow Recipient to Distribute the\n  Program, it is Recipient's responsibility to acquire that license\n  before distributing the Program.\n\n  d) Each Contributor represents that to its knowledge it has\n  sufficient copyright rights in its Contribution, if any, to grant\n  the copyright license set forth in this Agreement.\n\n  e) Notwithstanding the terms of any Secondary License, no\n  Contributor makes additional grants to any Recipient (other than\n  those set forth in this Agreement) as a result of such Recipient's\n  receipt of the Program under the terms of a Secondary License\n  (if permitted under the terms of Section 3).\n\n3. REQUIREMENTS\n\n3.1 If a Contributor Distributes the Program in any form, then:\n\n  a) the Program must also be made available as Source Code, in\n  accordance with section 3.2, and the Contributor must accompany\n  the Program with a statement that the Source Code for the Program\n  is available under this Agreement, and informs Recipients how to\n  obtain it in a reasonable manner on or through a medium customarily\n  used for software exchange; and\n\n  b) the Contributor may Distribute the Program under a license\n  different than this Agreement, provided that such license:\n     i) effectively disclaims on behalf of all other Contributors all\n     warranties and conditions, express and implied, including\n     warranties or conditions of title and non-infringement, and\n     implied warranties or conditions of merchantability and fitness\n     for a particular purpose;\n\n     ii) effectively excludes on behalf of all other Contributors all\n     liability for damages, including direct, indirect, special,\n     incidental and consequential damages, such as lost profits;\n\n     iii) does not attempt to limit or alter the recipients' rights\n     in the Source Code under section 3.2; and\n\n     iv) requires any subsequent distribution of the Program by any\n     party to be under a license that satisfies the requirements\n     of this section 3.\n\n3.2 When the Program is Distributed as Source Code:\n\n  a) it must be made available under this Agreement, or if the\n  Program (i) is combined with other material in a separate file or\n  files made available under a Secondary License, and (ii) the initial\n  Contributor attached to the Source Code the notice described in\n  Exhibit A of this Agreement, then the Program may be made available\n  under the terms of such Secondary Licenses, and\n\n  b) a copy of this Agreement must be included with each copy of\n  the Program.\n\n3.3 Contributors may not remove or alter any copyright, patent,\ntrademark, attribution notices, disclaimers of warranty, or limitations\nof liability (\"notices\") contained within the Program from any copy of\nthe Program which they Distribute, provided that Contributors may add\ntheir own appropriate notices.\n\n4. COMMERCIAL DISTRIBUTION\n\nCommercial distributors of software may accept certain responsibilities\nwith respect to end users, business partners and the like. While this\nlicense is intended to facilitate the commercial use of the Program,\nthe Contributor who includes the Program in a commercial product\noffering should do so in a manner which does not create potential\nliability for other Contributors. Therefore, if a Contributor includes\nthe Program in a commercial product offering, such Contributor\n(\"Commercial Contributor\") hereby agrees to defend and indemnify every\nother Contributor (\"Indemnified Contributor\") against any losses,\ndamages and costs (collectively \"Losses\") arising from claims, lawsuits\nand other legal actions brought by a third party against the Indemnified\nContributor to the extent caused by the acts or omissions of such\nCommercial Contributor in connection with its distribution of the Program\nin a commercial product offering. The obligations in this section do not\napply to any claims or Losses relating to any actual or alleged\nintellectual property infringement. In order to qualify, an Indemnified\nContributor must: a) promptly notify the Commercial Contributor in\nwriting of such claim, and b) allow the Commercial Contributor to control,\nand cooperate with the Commercial Contributor in, the defense and any\nrelated settlement negotiations. The Indemnified Contributor may\nparticipate in any such claim at its own expense.\n\nFor example, a Contributor might include the Program in a commercial\nproduct offering, Product X. That Contributor is then a Commercial\nContributor. If that Commercial Contributor then makes performance\nclaims, or offers warranties related to Product X, those performance\nclaims and warranties are such Commercial Contributor's responsibility\nalone. Under this section, the Commercial Contributor would have to\ndefend claims against the other Contributors related to those performance\nclaims and warranties, and if a court requires any other Contributor to\npay any damages as a result, the Commercial Contributor must pay\nthose damages.\n\n5. NO WARRANTY\n\nEXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, AND TO THE EXTENT\nPERMITTED BY APPLICABLE LAW, THE PROGRAM IS PROVIDED ON AN \"AS IS\"\nBASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR\nIMPLIED INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDITIONS OF\nTITLE, NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR\nPURPOSE. Each Recipient is solely responsible for determining the\nappropriateness of using and distributing the Program and assumes all\nrisks associated with its exercise of rights under this Agreement,\nincluding but not limited to the risks and costs of program errors,\ncompliance with applicable laws, damage to or loss of data, programs\nor equipment, and unavailability or interruption of operations.\n\n6. DISCLAIMER OF LIABILITY\n\nEXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, AND TO THE EXTENT\nPERMITTED BY APPLICABLE LAW, NEITHER RECIPIENT NOR ANY CONTRIBUTORS\nSHALL HAVE ANY LIABILITY FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING WITHOUT LIMITATION LOST\nPROFITS), HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE\nEXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n7. GENERAL\n\nIf any provision of this Agreement is invalid or unenforceable under\napplicable law, it shall not affect the validity or enforceability of\nthe remainder of the terms of this Agreement, and without further\naction by the parties hereto, such provision shall be reformed to the\nminimum extent necessary to make such provision valid and enforceable.\n\nIf Recipient institutes patent litigation against any entity\n(including a cross-claim or counterclaim in a lawsuit) alleging that the\nProgram itself (excluding combinations of the Program with other software\nor hardware) infringes such Recipient's patent(s), then such Recipient's\nrights granted under Section 2(b) shall terminate as of the date such\nlitigation is filed.\n\nAll Recipient's rights under this Agreement shall terminate if it\nfails to comply with any of the material terms or conditions of this\nAgreement and does not cure such failure in a reasonable period of\ntime after becoming aware of such noncompliance. If all Recipient's\nrights under this Agreement terminate, Recipient agrees to cease use\nand distribution of the Program as soon as reasonably practicable.\nHowever, Recipient's obligations under this Agreement and any licenses\ngranted by Recipient relating to the Program shall continue and survive.\n\nEveryone is permitted to copy and distribute copies of this Agreement,\nbut in order to avoid inconsistency the Agreement is copyrighted and\nmay only be modified in the following manner. The Agreement Steward\nreserves the right to publish new versions (including revisions) of\nthis Agreement from time to time. No one other than the Agreement\nSteward has the right to modify this Agreement. The Eclipse Foundation\nis the initial Agreement Steward. The Eclipse Foundation may assign the\nresponsibility to serve as the Agreement Steward to a suitable separate\nentity. Each new version of the Agreement will be given a distinguishing\nversion number. The Program (including Contributions) may always be\nDistributed subject to the version of the Agreement under which it was\nreceived. In addition, after a new version of the Agreement is published,\nContributor may elect to Distribute the Program (including its\nContributions) under the new version.\n\nExcept as expressly stated in Sections 2(a) and 2(b) above, Recipient\nreceives no rights or licenses to the intellectual property of any\nContributor under this Agreement, whether expressly, by implication,\nestoppel or otherwise. All rights in the Program not expressly granted\nunder this Agreement are reserved. Nothing in this Agreement is intended\nto be enforceable by any entity that is not a Contributor or Recipient.\nNo third-party beneficiary rights are created under this Agreement.\n\nExhibit A - Form of Secondary Licenses Notice\n\n\"This Source Code may also be made available under the following \nSecondary Licenses when the conditions for such availability set forth \nin the Eclipse Public License, v. 2.0 are satisfied: {name license(s),\nversion(s), and exceptions or additional permissions here}.\"\n\n  Simply including a copy of this Agreement, including this Exhibit A\n  is not sufficient to license the Source Code under Secondary Licenses.\n\n  If it is not possible or desirable to put the notice in a particular\n  file, then You may include the notice in a location (such as a LICENSE\n  file in a relevant directory) where a recipient would be likely to\n  look for such a notice.\n\n  You may add additional accurate notices of copyright ownership."
        },
        {
          "name": "notice.html",
          "type": "blob",
          "size": 9.0048828125,
          "content": "<?xml version=\"1.0\" encoding=\"ISO-8859-1\" ?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\" />\n<title>Eclipse Foundation Software User Agreement</title>\n</head>\n\n<body lang=\"EN-US\">\n<h2>Eclipse Foundation Software User Agreement</h2>\n<p>April 6, 2020</p>\n\n<h3>Usage Of Content</h3>\n\n<p>THE ECLIPSE FOUNDATION MAKES AVAILABLE SOFTWARE, DOCUMENTATION, INFORMATION AND/OR OTHER MATERIALS FOR OPEN SOURCE PROJECTS\n   (COLLECTIVELY &quot;CONTENT&quot;).  USE OF THE CONTENT IS GOVERNED BY THE TERMS AND CONDITIONS OF THIS AGREEMENT AND/OR THE TERMS AND\n   CONDITIONS OF LICENSE AGREEMENTS OR NOTICES INDICATED OR REFERENCED BELOW.  BY USING THE CONTENT, YOU AGREE THAT YOUR USE\n   OF THE CONTENT IS GOVERNED BY THIS AGREEMENT AND/OR THE TERMS AND CONDITIONS OF ANY APPLICABLE LICENSE AGREEMENTS OR\n   NOTICES INDICATED OR REFERENCED BELOW.  IF YOU DO NOT AGREE TO THE TERMS AND CONDITIONS OF THIS AGREEMENT AND THE TERMS AND\n   CONDITIONS OF ANY APPLICABLE LICENSE AGREEMENTS OR NOTICES INDICATED OR REFERENCED BELOW, THEN YOU MAY NOT USE THE CONTENT.</p>\n\n<h3>Applicable Licenses</h3>\n\n<p>Unless otherwise indicated, all Content made available by the Eclipse Foundation is provided to you under the terms and conditions of the Eclipse Public License Version 2.0\n   (&quot;EPL&quot;).  A copy of the EPL is provided with this Content and is also available at <a href=\"https://www.eclipse.org/legal/epl-2.0/\">https://www.eclipse.org/legal/epl-2.0/</a>.\n   For purposes of the EPL, &quot;Program&quot; will mean the Content.</p>\n\n<p>Content includes, but is not limited to, source code, object code, documentation and other files maintained in the Eclipse Foundation source code\n   repository (&quot;Repository&quot;) in software modules (&quot;Modules&quot;) and made available as downloadable archives (&quot;Downloads&quot;).</p>\n\n<ul>\n       <li>Content may be structured and packaged into modules to facilitate delivering, extending, and upgrading the Content.  Typical modules may include plug-ins (&quot;Plug-ins&quot;), plug-in fragments (&quot;Fragments&quot;), and features (&quot;Features&quot;).</li>\n       <li>Each Plug-in or Fragment may be packaged as a sub-directory or JAR (Java&trade; ARchive) in a directory named &quot;plugins&quot;.</li>\n       <li>A Feature is a bundle of one or more Plug-ins and/or Fragments and associated material.  Each Feature may be packaged as a sub-directory in a directory named &quot;features&quot;.  Within a Feature, files named &quot;feature.xml&quot; may contain a list of the names and version numbers of the Plug-ins\n      and/or Fragments associated with that Feature.</li>\n       <li>Features may also include other Features (&quot;Included Features&quot;). Within a Feature, files named &quot;feature.xml&quot; may contain a list of the names and version numbers of Included Features.</li>\n</ul>\n\n<p>The terms and conditions governing Plug-ins and Fragments should be contained in files named &quot;about.html&quot; (&quot;Abouts&quot;). The terms and conditions governing Features and\nIncluded Features should be contained in files named &quot;license.html&quot; (&quot;Feature Licenses&quot;).  Abouts and Feature Licenses may be located in any directory of a Download or Module\nincluding, but not limited to the following locations:</p>\n\n<ul>\n       <li>The top-level (root) directory</li>\n       <li>Plug-in and Fragment directories</li>\n       <li>Inside Plug-ins and Fragments packaged as JARs</li>\n       <li>Sub-directories of the directory named &quot;src&quot; of certain Plug-ins</li>\n       <li>Feature directories</li>\n</ul>\n\n<p>Note: if a Feature made available by the Eclipse Foundation is installed using the Provisioning Technology (as defined below), you must agree to a license (&quot;Feature Update License&quot;) during the\ninstallation process.  If the Feature contains Included Features, the Feature Update License should either provide you with the terms and conditions governing the Included Features or\ninform you where you can locate them.  Feature Update Licenses may be found in the &quot;license&quot; property of files named &quot;feature.properties&quot; found within a Feature.\nSuch Abouts, Feature Licenses, and Feature Update Licenses contain the terms and conditions (or references to such terms and conditions) that govern your use of the associated Content in\nthat directory.</p>\n\n<p>THE ABOUTS, FEATURE LICENSES, AND FEATURE UPDATE LICENSES MAY REFER TO THE EPL OR OTHER LICENSE AGREEMENTS, NOTICES OR TERMS AND CONDITIONS.  SOME OF THESE\nOTHER LICENSE AGREEMENTS MAY INCLUDE (BUT ARE NOT LIMITED TO):</p>\n\n<ul>\n       <li>Eclipse Distribution License Version 1.0 (available at <a href=\"http://www.eclipse.org/licenses/edl-v10.html\">http://www.eclipse.org/licenses/edl-v1.0.html</a>)</li>\n       <li>Common Public License Version 1.0 (available at <a href=\"http://www.eclipse.org/legal/cpl-v10.html\">http://www.eclipse.org/legal/cpl-v10.html</a>)</li>\n       <li>Apache Software License 1.1 (available at <a href=\"http://www.apache.org/licenses/LICENSE\">http://www.apache.org/licenses/LICENSE</a>)</li>\n       <li>Apache Software License 2.0 (available at <a href=\"http://www.apache.org/licenses/LICENSE-2.0\">http://www.apache.org/licenses/LICENSE-2.0</a>)</li>\n       <li>Metro Link Public License 1.00 (available at <a href=\"http://www.opengroup.org/openmotif/supporters/metrolink/license.html\">http://www.opengroup.org/openmotif/supporters/metrolink/license.html</a>)</li>\n       <li>Mozilla Public License Version 1.1 (available at <a href=\"http://www.mozilla.org/MPL/MPL-1.1.html\">http://www.mozilla.org/MPL/MPL-1.1.html</a>)</li>\n</ul>\n\n<p>IT IS YOUR OBLIGATION TO READ AND ACCEPT ALL SUCH TERMS AND CONDITIONS PRIOR TO USE OF THE CONTENT.  If no About, Feature License, or Feature Update License is provided, please\ncontact the Eclipse Foundation to determine what terms and conditions govern that particular Content.</p>\n\n\n<h3>Use of Provisioning Technology</h3>\n\n<p>The Eclipse Foundation makes available provisioning software, examples of which include, but are not limited to, p2 and the Eclipse\n   Update Manager (&quot;Provisioning Technology&quot;) for the purpose of allowing users to install software, documentation, information and/or\n   other materials (collectively &quot;Installable Software&quot;). This capability is provided with the intent of allowing such users to\n   install, extend and update Eclipse-based products. Information about packaging Installable Software is available at <a\n       href=\"http://eclipse.org/equinox/p2/repository_packaging.html\">http://eclipse.org/equinox/p2/repository_packaging.html</a>\n   (&quot;Specification&quot;).</p>\n\n<p>You may use Provisioning Technology to allow other parties to install Installable Software. You shall be responsible for enabling the\n   applicable license agreements relating to the Installable Software to be presented to, and accepted by, the users of the Provisioning Technology\n   in accordance with the Specification. By using Provisioning Technology in such a manner and making it available in accordance with the\n   Specification, you further acknowledge your agreement to, and the acquisition of all necessary rights to permit the following:</p>\n\n<ol>\n       <li>A series of actions may occur (&quot;Provisioning Process&quot;) in which a user may execute the Provisioning Technology\n       on a machine (&quot;Target Machine&quot;) with the intent of installing, extending or updating the functionality of an Eclipse-based\n       product.</li>\n       <li>During the Provisioning Process, the Provisioning Technology may cause third party Installable Software or a portion thereof to be\n       accessed and copied to the Target Machine.</li>\n       <li>Pursuant to the Specification, you will provide to the user the terms and conditions that govern the use of the Installable\n       Software (&quot;Installable Software Agreement&quot;) and such Installable Software Agreement shall be accessed from the Target\n       Machine in accordance with the Specification. Such Installable Software Agreement must inform the user of the terms and conditions that govern\n       the Installable Software and must solicit acceptance by the end user in the manner prescribed in such Installable Software Agreement. Upon such\n       indication of agreement by the user, the provisioning Technology will complete installation of the Installable Software.</li>\n</ol>\n\n<h3>Cryptography</h3>\n\n<p>Content may contain encryption software. The country in which you are currently may have restrictions on the import, possession, and use, and/or re-export to\n   another country, of encryption software. BEFORE using any encryption software, please check the country's laws, regulations and policies concerning the import,\n   possession, or use, and re-export of encryption software, to see if this is permitted.</p>\n\n<p><small>Java and all Java-based trademarks are trademarks of Oracle Corporation in the United States, other countries, or both.</small></p>\n</body>\n</html>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "test_package",
          "type": "tree",
          "content": null
        },
        {
          "name": "version.major",
          "type": "blob",
          "size": 0.0009765625,
          "content": "1"
        },
        {
          "name": "version.minor",
          "type": "blob",
          "size": 0.0009765625,
          "content": "3"
        },
        {
          "name": "version.patch",
          "type": "blob",
          "size": 0.0029296875,
          "content": "14\n"
        }
      ]
    }
  ]
}