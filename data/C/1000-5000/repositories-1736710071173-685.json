{
  "metadata": {
    "timestamp": 1736710071173,
    "page": 685,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "FluidSynth/fluidsynth",
      "stars": 1932,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".azure",
          "type": "tree",
          "content": null
        },
        {
          "name": ".cirrus.yml",
          "type": "blob",
          "size": 0.5908203125,
          "content": "\ntask:\n    name: FreeBSD\n    freebsd_instance:\n        matrix:\n            image_family: freebsd-14-1\n            image_family: freebsd-13-3\n\n    install_script: pwd && ls -la && pkg update --force && pkg install -y cmake glib alsa-lib ladspa portaudio pulseaudio pkgconf sdl2\n    \n    compile_script: pwd && ls -la && mkdir $HOME/fluidsynth_install/ && mkdir build && cd build && cmake -Werror=dev -DCMAKE_INSTALL_PREFIX=$HOME/fluidsynth_install -Denable-portaudio=1 -Denable-ladspa=1 -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_VERBOSE_MAKEFILE=0  -DNO_GUI=1 .. && make -j4 && make check && make install\n\n"
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 1.6142578125,
          "content": "AccessModifierOffset: 0\nAlignEscapedNewlinesLeft: true\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: false\nAllowShortFunctionsOnASingleLine: false\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: false\nBinPackArguments: false\nBinPackParameters: false\nBreakBeforeBinaryOperators: false\nBreakBeforeTernaryOperators: false\nBreakConstructorInitializersBeforeComma: false\n\nBreakBeforeBraces: Custom\nBraceWrapping:\n  AfterClass: true\n  AfterControlStatement: true\n  AfterEnum: true\n  AfterFunction: true\n  AfterNamespace: true\n  AfterStruct: true\n  AfterUnion: true\n  BeforeCatch: true\n  BeforeElse: true\n  IndentBraces: false\n\nColumnLimit: 100\nCommentPragmas: ''\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nConstructorInitializerIndentWidth: 0\nContinuationIndentWidth: 0\nCpp11BracedListStyle: false\nDerivePointerAlignment: false\nIndentCaseLabels: true\nIndentWidth: 4\nLanguage: Cpp\nMaxEmptyLinesToKeep: 2\nNamespaceIndentation: All\nPenaltyBreakBeforeFirstCallParameter: 100\nPenaltyBreakComment: 100\nPenaltyBreakFirstLessLess: 0\nPenaltyBreakString: 100\nPenaltyExcessCharacter: 1\nPenaltyReturnTypeOnItsOwnLine: 20\nSpaceAfterCStyleCast: false\nSpaceAfterTemplateKeyword: false\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles: false\nSpacesInCStyleCastParentheses: false\nSpacesInContainerLiterals: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nSortIncludes: false\nStandard: Cpp11\nTabWidth: 4\nUseTab: Never\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 2.66796875,
          "content": "---\nChecks:          '-*,clang-diagnostic-*,clang-analyzer-*,-clang-analyzer-security.insecureAPI.strcpy,performance-*,readability-avoid-const-params-in-decls,readability-braces-around-statements,readability-delete-null-pointer,readability-implicit-bool-conversion,readability-misleading-indentation,readability-misplaced-array-index,readability-non-const-parameter,readability-redundant-control-flow,readability-redundant-declaration,readability-redundant-function-ptr-dereference,readability-simplify-boolean-expr'\nWarningsAsErrors: ''\nHeaderFilterRegex: ''\nAnalyzeTemporaryDtors: false\nFormatStyle: file\nUser:            tom\nCheckOptions:    \n  - key:             cert-dcl59-cpp.HeaderFileExtensions\n    value:           h,hh,hpp,hxx\n  - key:             cert-err09-cpp.CheckThrowTemporaries\n    value:           '1'\n  - key:             cert-err61-cpp.CheckThrowTemporaries\n    value:           '1'\n  - key:             cert-oop11-cpp.IncludeStyle\n    value:           llvm\n  - key:             google-readability-braces-around-statements.ShortStatementLines\n    value:           '1'\n  - key:             google-readability-function-size.StatementThreshold\n    value:           '800'\n  - key:             google-readability-namespace-comments.ShortNamespaceLines\n    value:           '10'\n  - key:             google-readability-namespace-comments.SpacesBeforeComments\n    value:           '2'\n  - key:             modernize-loop-convert.MaxCopySize\n    value:           '16'\n  - key:             modernize-loop-convert.MinConfidence\n    value:           reasonable\n  - key:             modernize-loop-convert.NamingStyle\n    value:           CamelCase\n  - key:             modernize-pass-by-value.IncludeStyle\n    value:           llvm\n  - key:             modernize-replace-auto-ptr.IncludeStyle\n    value:           llvm\n  - key:             modernize-use-nullptr.NullMacros\n    value:           'NULL'\n  - key:             performance-faster-string-find.StringLikeClasses\n    value:           'std::basic_string'\n  - key:             performance-for-range-copy.WarnOnAllAutoCopies\n    value:           '0'\n  - key:             performance-inefficient-string-concatenation.StrictMode\n    value:           '0'\n  - key:             performance-type-promotion-in-math-fn.IncludeStyle\n    value:           llvm\n  - key:             performance-unnecessary-value-param.IncludeStyle\n    value:           llvm\n  - key:             readability-braces-around-statements.ShortStatementLines\n    value:           '0'\n  - key:             readability-simplify-boolean-expr.ChainedConditionalAssignment\n    value:           '0'\n  - key:             readability-simplify-boolean-expr.ChainedConditionalReturn\n    value:           '0'\n...\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3349609375,
          "content": "build/\n\nCMakeCache.txt\nCMakeFiles\nMakefile\ncmake_install.cmake\ninstall_manifest.txt\n\n# Object files\n*.o\n*.ko\n*.obj\n*.elf\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Libraries\n*.lib\n*.a\n*.la\n*.lo\n\n# Shared objects (inc. Windows DLLs)\n*.dll\n*.so\n*.so.*\n*.dylib\n\n# Executables\n*.exe\n*.out\n*.app\n*.i*86\n*.x86_64\n*.hex\n\n# ProjectFiles\n*.pro.user*\n*.user\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.09375,
          "content": "[submodule \"test/manual\"]\n\tpath = test/manual\n\turl = https://github.com/FluidSynth/testdata.git\n"
        },
        {
          "name": ".obs",
          "type": "tree",
          "content": null
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 5.6142578125,
          "content": "[:Team:]\nCurrent development team\n\nTom Moebert\n\n\nFormer development team\n\nJosh Green\nPedro Lopez-Cabanillas\nDavid Henningsson\n\n\n[:Idea:]\n\n* Samuel Bianchini, Peter Hanappe and Johnathan Lee\n\n\n[:Development:]\n\nMany people contributed to FluidSynth, sent suggestions or bug\nfixes. The project was started by Peter Hanappe who is the main\nauthor. Josh Green is the current maintainer. Below you'll find a\nsummary of contributions.\n\n\n* Peter Hanappe. Initiated the project. files: stuck his nose in all\n  files.\n\n* Josh Green is the former maintainer and contributed a lot of code\n  directly or indirectly through the Swami and Smurf code base.\n  The SoundFont loader is completely based on his code. He also wrote\n  the alsa sequencer driver. He made many changes and bug fixes,\n  but above all, he's one of the driving forces behind the synthesizer.\n  He also created the current FluidSynth graphic logo with Blender\n  (the blue waves with FluidSynth letters partially submerged).\n\n* Markus Nentwig (re-)designed the resonant filter, the chorus, the\n  LADSPA subsystem, the MIDI router, optimized for SSE, made many\n  changes and bug fixes and got the synthesizer to actually work. Most\n  importantly, he used it on stage to make music.\n\n* S. Christian Collins provided many tests and fixes on EMU10K1\n  compatibility. He also supplied reference chorus and reverb settings for\n  developing the default ones.\n  \n* Alberto Salvia Novella developed the default chorus and reverb settings.\n\n* Stephane Letz from Grame wrote most of the MidiShare driver, all of\n  the PortAudio driver, ported iiwusynth to MacOS X, and sent in many\n  fixes. files: iiwu_midishare.c, iiwu_portaudio.c\n\n* Antoine Schmitt added the sequencer support, support for sample\n  loading (RAM Sfont), developed the\n  MacroMedia Director Xtra, and send in many many bug reports. Thanks\n  to Antoine, the synthesizer finds its way to multi-media\n  developers. files: in bindings/director/ and iiwu_seq.{c,h},\n  iiwu_event.{c,h}, iiwu_event_priv.h, iiwu_seqbind.{c,h},\n  iiwu_ramsfont.{c,h}\n\n* Bob Ham added the code for \"bank select\" MIDI messages and send code\n  to define the synth's ALSA sequencer client name. files:\n  iiwu_midi.c, iiwu_alsa.c, iiwusynth.c, iiwusynth.h.\n\n* Tim Goetze sent many patches and implemented the all_notes_off. He\n  also sent his code for the new ALSA driver. files: iiwu_synth.c,\n  iiwu_chan.c, iiwu_voice.c, iiwu_alsa.c\n\n* Norbert Schnell from Ircam's jMax Team wrote most of the jMax/FTS\n  interface in a record time. He also pointed me to the technique of\n  using a lookup table for the interpolation coefficients.  file:\n  iiwu_fts.c, iiwu_synth.c\n\n* The initial alsa driver was based on the jMax alsa driver by\n  Francois Dechelle and his Real-time Team at Ircam\n  (https://www.ircam.fr/jmax). The jMax code was based upon Ardour's\n  alsa_device.cc by Paul Barton-Davis.  file: iiwu_alsa.c\n\n* Code was borrowed from the glib library to the smurf files. The goal was\n  to make iiwusynth independent from any library for maximum\n  portability.\n\n* David Henningsson added code for fast rendering of MIDI files,\n  rewrote the thread safety for 1.1.2, and fixed many bugs.\n\n* The midi device uses code from jMax's alsarawmidi.c file and from\n  Smurf's midi_alsaraw.c by Josh Green.  file: iiwu_alsa.c\n\n* The reverb algorithm was written by Jezar\n  (https://www.dreampoint.co.uk). His code is public domain. The code\n  was translated to C by Peter Hanappe.  file: iiwu_synth.c\n\n* The original code for the chorus effect was written by Juergen\n  Mueller and sundry contributors.\n\n* Bob Ham added LADCCA support.\n\n* Ebrahim Mayat made big efforts for compiling and running FluidSynth\n  on MacOS X. He also wrote the README-OSX file.\n\n* Martin Uddén's midi package was used. His files are integrated into\n  the iiwu_midi file. Martin Uddén <nanook@lysator.liu.se> file:\n  iiwu_midi.c\n\n* Ken Ellinwood send in a patch to add bank offsets to SoundFonts. An\n  adapted version was integrated in the source code. files:\n  fluid_cmd.c, fluidsynth/synth.h, fluid_synth.c.\n\n* Some interpolation algorithms were used that were found in\n  the music-dsp archives (http://www.smartelectronix.com/musicdsp).\n  They were written by Joshua Scholar and others.  file: iiwu_synth.c\n\n* Macros to {increment,decrement} the 64-bit fixed point phase were\n  borrowed from Mozilla's macros to handle the Long-long type (64-bit\n  signed integer type). Mozilla NSPR library, www.mozilla.org.  file:\n  iiwu_phase.h\n\n* KO Myung-Hun for OS/2 support with Dart audio driver.\n\n* Pedro Lopez-Cabanillas wrote the CoreMIDI driver for MacOSX, the CMake based \n  build system, revised the doxygen documentation, sequencer examples, fixes.\n\n* Matt Giuca improved the midi player by letting it load midi files from RAM,\n  and by making it handle EOT events.\n\n* Tom Moebert (fluidsynth's maintainer since Jun 2017) cleaned up and refactored\n  fluidsynth's API and revised its documentation, added support for 24 bit sample\n  soundfonts, added support for DLS soundfonts, fixed various bugs, implemented\n  unit tests and CI builds for Windows, Linux, MacOSX and BSD.\n\n* Fabian Greffrath added initial support of vorbis-compressed sf3 sound fonts.\n\n* Growing list of individuals who contributed bug fixes, corrections and minor features:\nNicolas Boulicault for ALSA sequencer midi.portname setting.\nWerner Schweer\nDave Philips\nAnthony Green\nJake Commander\nFernando Pablo Lopez-Lezcano\nRaoul Bonisch\nSergey Pavlishin\nEric Van Buggenhaut\nKen Ellinwood\nTakashi Iwai\nBob Ham\nGerald Pye\nRui Nuno Capela\nFrieder Bürzele\nHenri Manson\nMihail Zenkov\nPaul Millar\nNick Daly\nDavid Hilvert\nBernat Arlandis i Mañó\nSven Meier\nMarcus Weseloh\nJean-jacques Ceresa\nVladimir Davidovich\nTamás Korodi\nEvan Miller\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 35.2431640625,
          "content": "# FluidSynth - A Software Synthesizer\n#\n# Copyright (C) 2003-2024 Peter Hanappe and others.\n#\n# This library is free software; you can redistribute it and/or\n# modify it under the terms of the GNU Lesser General Public License\n# as published by the Free Software Foundation; either version 2.1 of\n# the License, or (at your option) any later version.\n#\n# This library is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# Lesser General Public License for more details.\n#\n# You should have received a copy of the GNU Lesser General Public\n# License along with this library; if not, write to the Free\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n# 02111-1307, USA\n\n# CMake based build system. Pedro Lopez-Cabanillas <plcl@users.sf.net>\n\ncmake_minimum_required ( VERSION 3.13 )\n# 3.1 because of CMAKE_C_STANDARD\n# 3.11 because COMPATIBILITY SameMinorVersion in CMakePackageConfigHelpers\n# 3.13.5 because it is the latest supported in Windows XP\n\nif(POLICY CMP0075) # CMake version 3.13.5 warns when the policy is not set or value is OLD\n  cmake_policy(SET CMP0075 NEW)\nendif()\n\nif(POLICY CMP0091) # new in CMake 3.15, defaults to OLD\n  cmake_policy(SET CMP0091 NEW)\nendif()\n\nif(POLICY CMP0099) # new in CMake 3.17, defaults to OLD\n  cmake_policy(SET CMP0099 NEW)\nelseif(NOT BUILD_SHARED_LIBS)\n  message(WARNING \"Your version of CMake is very old. This may cause linking issues if your dependencies are not in your compiler's default search paths.\")\nendif()\n\nproject ( FluidSynth C CXX )\nlist( APPEND CMAKE_MODULE_PATH ${FluidSynth_SOURCE_DIR}/cmake_admin )\n\n# FluidSynth package name\nset ( PACKAGE \"fluidsynth\" )\n\n# FluidSynth package version\nset ( FLUIDSYNTH_VERSION_MAJOR 2 )\nset ( FLUIDSYNTH_VERSION_MINOR 4 )\nset ( FLUIDSYNTH_VERSION_MICRO 2 )\nset ( VERSION \"${FLUIDSYNTH_VERSION_MAJOR}.${FLUIDSYNTH_VERSION_MINOR}.${FLUIDSYNTH_VERSION_MICRO}\" )\nset ( FLUIDSYNTH_VERSION ${VERSION} )\n\n# libfluidsynth - Library version\n# *** NOTICE ***\n# Update library version upon each release (follow these steps in order)\n# if any source code changes: REVISION++\n# if any interfaces added/removed/changed: REVISION=0\n# if any interfaces removed/changed (compatibility broken): CURRENT++\n# if any interfaces have been added: AGE++\n# if any interfaces have been removed/changed (compatibility broken): AGE=0\n# This is not exactly the same algorithm as the libtool one, but the results are the same.\nset ( LIB_VERSION_CURRENT 3 )\nset ( LIB_VERSION_AGE 3 )\nset ( LIB_VERSION_REVISION 2 )\nset ( LIB_VERSION_INFO\n      \"${LIB_VERSION_CURRENT}.${LIB_VERSION_AGE}.${LIB_VERSION_REVISION}\" )\n\n# Options disabled by default\noption ( enable-coverage \"enable gcov code coverage\" off )\noption ( enable-floats \"enable type float instead of double for DSP samples\" off )\noption ( enable-fpe-check \"enable Floating Point Exception checks and debug messages\" off )\noption ( enable-portaudio \"compile PortAudio support\" off )\noption ( enable-profiling \"profile the dsp code\" off )\noption ( enable-trap-on-fpe \"enable SIGFPE trap on Floating Point Exceptions\" off )\noption ( enable-ubsan \"compile and link against UBSan (for debugging fluidsynth internals)\" off )\n\n# Options enabled by default\noption ( enable-alsa \"compile ALSA support (if it is available)\" on )\noption ( enable-aufile \"compile support for sound file output\" on )\noption ( BUILD_SHARED_LIBS \"Build a shared object or DLL\" on )\noption ( enable-dbus \"compile DBUS support (if it is available)\" on )\noption ( enable-ipv6  \"enable IPv6 support at the cost of disabling IPv4\" on )\noption ( enable-jack \"compile JACK support (if it is available)\" on )\noption ( enable-ladspa \"enable LADSPA effect units\" on )\noption ( enable-libinstpatch \"use libinstpatch (if available) to load DLS and GIG files\" on )\noption ( enable-libsndfile \"compile libsndfile support (if it is available)\" on )\noption ( enable-midishare \"compile MidiShare support (if it is available)\" on )\noption ( enable-opensles \"compile OpenSLES support (if it is available)\" off )\noption ( enable-oboe \"compile Oboe support (requires OpenSLES and/or AAudio)\" off )\noption ( enable-network \"enable network support (requires BSD sockets)\" on )\noption ( enable-oss \"compile OSS support (if it is available)\" on )\noption ( enable-dsound \"compile DirectSound support (if it is available)\" on )\noption ( enable-wasapi \"compile Windows WASAPI support (if it is available)\" on )\noption ( enable-waveout \"compile Windows WaveOut support (if it is available)\" on )\noption ( enable-winmidi \"compile Windows MIDI support (if it is available)\" on )\noption ( enable-sdl2 \"compile SDL2 audio support (if it is available)\" on )\noption ( enable-pulseaudio \"compile PulseAudio support (if it is available)\" on )\noption ( enable-pipewire \"compile PipeWire support (if it is available)\" on )\noption ( enable-readline \"compile readline lib line editing (if it is available)\" on )\noption ( enable-threads \"enable multi-threading support (such as parallel voice synthesis)\" on )\noption ( enable-openmp \"enable OpenMP support (parallelization of soundfont decoding, vectorization of voice mixing, etc.)\" on )\noption ( enable-unicode \"enable UNICODE build for Windows\" on )\n\n# Platform specific options\nif ( CMAKE_SYSTEM MATCHES \"Linux\" )\n    option ( enable-systemd \"compile systemd support (if it is available)\" on )\nendif ( CMAKE_SYSTEM MATCHES \"Linux\" )\n\nif ( CMAKE_SYSTEM MATCHES \"Darwin\" )\n    option ( enable-coreaudio \"compile CoreAudio support (if it is available)\" on )\n    option ( enable-coremidi \"compile CoreMIDI support (if it is available)\" on )\n    option ( enable-framework \"create a Mac OSX style FluidSynth.framework\" on )\nendif ( CMAKE_SYSTEM MATCHES \"Darwin\" )\n\nif ( CMAKE_SYSTEM MATCHES \"OS2\" )\n    option ( enable-dart \"compile DART support (if it is available)\" on )\n    option ( enable-kai \"compile KAI support (if it is available)\" on )\n    set ( enable-ipv6 off )\nendif ( CMAKE_SYSTEM MATCHES \"OS2\" )\n\n# the default C standard to use for all targets\nset(CMAKE_C_STANDARD 90)\n\n# the default C++ standard to use for all targets\nset(CMAKE_CXX_STANDARD 98)\n\n# whether to use gnu extensions\nset(CMAKE_C_EXTENSIONS ON)\nset(CMAKE_CXX_EXTENSIONS OFF)\n\n# Compile with position independent code if the user requested a shared lib, i.e. no PIC if static requested.\n# This is cmakes default behavior, but here it's explicitly required due to the use of libfluidsynth-OBJ as object library,\n# which would otherwise always be compiled without PIC.\nif ( NOT CMAKE_POSITION_INDEPENDENT_CODE )\n    set ( CMAKE_POSITION_INDEPENDENT_CODE ${BUILD_SHARED_LIBS} )\nendif ( NOT CMAKE_POSITION_INDEPENDENT_CODE )\n\n# the default global visibility level for all target\n# no visibility support on OS2\nif ( NOT OS2 )\n    set ( CMAKE_C_VISIBILITY_PRESET hidden )\nendif ( NOT OS2 )\n\n# enforce visibility control for all types of cmake targets\nif ( POLICY CMP0063 ) # since version 3.3, CMake version 3.21.2 warns when the policy is not set and uses OLD behavior.\n  cmake_policy ( SET CMP0063 NEW )\nendif ( POLICY CMP0063 )\n\n# Default install directory names, some provided by GNUInstallDirs\ninclude ( DefaultDirs )\n\n# Basic C library checks\ninclude ( CheckCCompilerFlag )\ninclude ( CheckSTDC )\ninclude ( CheckIncludeFile )\ninclude ( CheckSymbolExists )\ninclude ( CheckTypeSize )\ncheck_include_file ( string.h HAVE_STRING_H )\ncheck_include_file ( strings.h HAVE_STRINGS_H )\ncheck_include_file ( stdlib.h HAVE_STDLIB_H )\ncheck_include_file ( stdio.h HAVE_STDIO_H )\ncheck_include_file ( math.h HAVE_MATH_H )\ncheck_include_file ( errno.h HAVE_ERRNO_H )\ncheck_include_file ( stdarg.h HAVE_STDARG_H )\ncheck_include_file ( unistd.h HAVE_UNISTD_H )\ncheck_include_file ( sys/mman.h HAVE_SYS_MMAN_H )\ncheck_include_file ( sys/types.h HAVE_SYS_TYPES_H )\ncheck_include_file ( sys/time.h HAVE_SYS_TIME_H )\ncheck_include_file ( sys/stat.h HAVE_SYS_STAT_H )\ncheck_include_file ( fcntl.h HAVE_FCNTL_H )\ncheck_include_file ( sys/socket.h HAVE_SYS_SOCKET_H )\ncheck_include_file ( netinet/in.h HAVE_NETINET_IN_H )\ncheck_include_file ( netinet/tcp.h HAVE_NETINET_TCP_H )\ncheck_include_file ( arpa/inet.h HAVE_ARPA_INET_H )\ncheck_include_file ( limits.h  HAVE_LIMITS_H )\ncheck_include_file ( pthread.h HAVE_PTHREAD_H )\ncheck_include_file ( signal.h HAVE_SIGNAL_H )\ncheck_include_file ( getopt.h HAVE_GETOPT_H )\ncheck_include_file ( stdint.h HAVE_STDINT_H )\ncheck_type_size ( \"long long\" LONG_LONG )\nif ( NOT HAVE_LONG_LONG AND NOT MSVC)\n    message ( FATAL_ERROR \"Your compiler does not support intrinsic type 'long long'. Unable to compile fluidsynth.\" )\nendif ()\n\ninclude ( CMakePrintHelpers ) # for cmake_print_properties() and cmake_print_variables()\ninclude ( TestInline )\ninclude ( TestVLA )\ninclude ( TestBigEndian )\ntest_big_endian ( WORDS_BIGENDIAN )\n\nunset ( LIBFLUID_CPPFLAGS CACHE )\nunset ( LIBFLUID_LIBS CACHE )\nunset ( FLUID_CPPFLAGS CACHE )\nunset ( FLUID_LIBS CACHE )\nunset ( ENABLE_UBSAN CACHE )\n\nif ( CMAKE_COMPILER_IS_GNUCC OR CMAKE_C_COMPILER_ID MATCHES \"Clang\" OR CMAKE_C_COMPILER_ID STREQUAL \"Intel\" )\n  if ( NOT APPLE AND NOT OS2 AND NOT EMSCRIPTEN )\n    set ( CMAKE_EXE_LINKER_FLAGS\n          \"${CMAKE_EXE_LINKER_FLAGS} -Wl,--as-needed\" )\n    set ( CMAKE_SHARED_LINKER_FLAGS\n          \"${CMAKE_SHARED_LINKER_FLAGS} -Wl,--no-undefined\" )\n  endif ( NOT APPLE AND NOT OS2 AND NOT EMSCRIPTEN )\n\n  # define some warning flags\n  set ( CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wall -W -Wpointer-arith -Wcast-qual -Wstrict-prototypes -Wno-unused-parameter -Wdeclaration-after-statement -Werror=implicit-function-declaration\" )\n  check_c_compiler_flag ( \"-Werror=incompatible-pointer-types\" HAVE_INCOMPATIBLE_POINTER_TYPES )\n  if ( HAVE_INCOMPATIBLE_POINTER_TYPES )\n    set ( CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Werror=incompatible-pointer-types\" )\n  endif ( HAVE_INCOMPATIBLE_POINTER_TYPES )\n\n  set ( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wall -W -Wpointer-arith -Wcast-qual -Wno-unused-parameter\" )\n\n  # prepend to build type specific flags, to allow users to override\n  set ( CMAKE_C_FLAGS_DEBUG \"-g ${CMAKE_C_FLAGS_DEBUG}\" )\n\n  if ( CMAKE_C_COMPILER_ID STREQUAL \"Intel\" )\n    # icc needs the restrict flag to recognize C99 restrict pointers\n    set ( CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -restrict\" )\n  else () # not intel\n    # gcc and clang support bad function cast and alignment warnings; add them as well.\n    set ( CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wbad-function-cast -Wcast-align\" )\n    set ( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wcast-align\" )\n\n    if ( enable-ubsan )\n      set ( CMAKE_C_FLAGS \"-fsanitize=address,undefined ${CMAKE_C_FLAGS}\" )\n      set ( CMAKE_CXX_FLAGS \"-fsanitize=address,undefined ${CMAKE_CXX_FLAGS}\" )\n      set ( CMAKE_EXE_LINKER_FLAGS \"-fsanitize=address,undefined ${CMAKE_EXE_LINKER_FLAGS}\" )\n      set ( CMAKE_SHARED_LINKER_FLAGS \"-fsanitize=address,undefined ${CMAKE_SHARED_LINKER_FLAGS}\" )\n      set ( ENABLE_UBSAN 1 )\n    endif ( enable-ubsan )\n\n    if ( enable-coverage )\n      if ( CMAKE_COMPILER_IS_GNUCXX )\n        include ( CodeCoverage )\n        set ( CODE_COVERAGE_VERBOSE TRUE )\n\n        append_coverage_compiler_flags()\n        setup_target_for_coverage_gcovr_html (\n            NAME coverage\n            EXECUTABLE ${CMAKE_CTEST_COMMAND} -C $<CONFIG> --output-on-failure\n            DEPENDENCIES check )\n        set ( ENABLE_COVERAGE 1 )\n      else()\n        message ( SEND_ERROR \"Code Coverage is currently only supported for GNU Compiler (GCC)\" )\n      endif()\n    endif ()\n  endif (CMAKE_C_COMPILER_ID STREQUAL \"Intel\" )\nendif ( CMAKE_COMPILER_IS_GNUCC OR CMAKE_C_COMPILER_ID MATCHES \"Clang\" OR CMAKE_C_COMPILER_ID STREQUAL \"Intel\" )\n\n# Windows\nunset ( WINDOWS_LIBS CACHE )\nunset ( DSOUND_SUPPORT CACHE )\nunset ( WASAPI_SUPPORT CACHE )\nunset ( WAVEOUT_SUPPORT CACHE )\nunset ( WINMIDI_SUPPORT CACHE )\nunset ( MINGW32 CACHE )\n\nif ( CYGWIN )\n  find_library(W32API_UUID_LIBRARY uuid\n    NO_DEFAULT_PATH\n    PATHS /lib/w32api\n  )\n  if ( NOT W32API_UUID_LIBRARY )\n    set ( enable-wasapi off )\n  else ()\n    message(STATUS \"Found W32API uuid library for CYGWIN: \" ${W32API_UUID_LIBRARY})\n    set ( WINDOWS_LIBS \"${WINDOWS_LIBS};${W32API_UUID_LIBRARY}\" )\n  endif ()\nendif ( CYGWIN )\n\nif ( WIN32 OR CYGWIN )\n  include ( CheckIncludeFiles )\n\n  # We have to set _WIN32_WINNT to make sure CMake gets correct results when probing for functions.\n  # windows-version is supposed to be non-official variable that can be used to tweak the Windows target version.\n  # Its value defaults to the Windows Version we are compiling for.\n  if ( NOT windows-version )\n    if(CMAKE_SYSTEM_VERSION EQUAL 10) # Windows 10\n        set ( windows-version \"0x0A00\" )\n    elseif(CMAKE_SYSTEM_VERSION EQUAL 6.3) # Windows 8.1\n        set ( windows-version \"0x0603\" )\n    elseif(CMAKE_SYSTEM_VERSION EQUAL 6.2) # Windows 8\n        set ( windows-version \"0x0602\" )\n    elseif(CMAKE_SYSTEM_VERSION EQUAL 6.1) # Windows 7\n        set ( windows-version \"0x0601\" )\n    elseif(CMAKE_SYSTEM_VERSION EQUAL 6.0) # Windows Vista\n        set ( windows-version \"0x0600\" )\n    elseif(CMAKE_SYSTEM_VERSION EQUAL 5.1) # Windows XP\n        set ( windows-version \"0x0501\" )\n    else()\n        set ( windows-version \"0x0400\" )\n    endif()\n  endif ()\n  message ( STATUS \"Targeting Windows Version ${windows-version}\" )\n  if ( enable-unicode )\n    add_definitions ( -D _UNICODE -D UNICODE )\n  endif ()\n  add_definitions ( -D _WIN32_WINNT=${windows-version} )\n  add_definitions ( -D WINVER=${windows-version} )\n  list ( APPEND CMAKE_REQUIRED_DEFINITIONS \"-DWINVER=${windows-version}\" )\n  list ( APPEND CMAKE_REQUIRED_DEFINITIONS \"-D_WIN32_WINNT=${windows-version}\" )\n\n  # Check presence of MS include files\n  check_include_file ( windows.h HAVE_WINDOWS_H )\n  check_include_file ( io.h HAVE_IO_H )\n  check_include_files ( \"windows.h;dsound.h\" HAVE_DSOUND_H )\n  check_include_files ( \"windows.h;mmsystem.h\" HAVE_MMSYSTEM_H )\n  check_include_files ( \"mmdeviceapi.h;audioclient.h\" HAVE_WASAPI_HEADERS )\n  check_include_file ( objbase.h HAVE_OBJBASE_H )\n\n  if ( enable-dsound AND HAVE_DSOUND_H )\n    set ( WINDOWS_LIBS \"${WINDOWS_LIBS};dsound;ksuser\" )\n    set ( DSOUND_SUPPORT 1 )\n  endif ()\n\n  if ( enable-winmidi AND HAVE_MMSYSTEM_H )\n    set ( WINDOWS_LIBS \"${WINDOWS_LIBS};winmm\" )\n    set ( WINMIDI_SUPPORT 1 )\n  endif ()\n\n  if ( enable-waveout AND HAVE_MMSYSTEM_H )\n    set ( WINDOWS_LIBS \"${WINDOWS_LIBS};winmm;ksuser\" )\n    set ( WAVEOUT_SUPPORT 1 )\n  endif ()\n\n  if ( enable-wasapi AND HAVE_WASAPI_HEADERS AND HAVE_OBJBASE_H)\n    set ( WINDOWS_LIBS \"${WINDOWS_LIBS};ole32\" )\n    set ( WASAPI_SUPPORT 1 )\n  endif ()\nendif ( WIN32 OR CYGWIN )\n\nif ( WIN32 )\n  if ( enable-network )\n    set ( WINDOWS_LIBS \"${WINDOWS_LIBS};ws2_32\" )\n  endif ( enable-network )\n\n  set ( LIBFLUID_CPPFLAGS \"-DFLUIDSYNTH_DLL_EXPORTS\" )\n  set ( FLUID_CPPFLAGS \"-DFLUIDSYNTH_NOT_A_DLL\" )\n  if  ( NOT MSVC )\n    # only set debug postfix if not MSVC building\n    set ( CMAKE_DEBUG_POSTFIX \"_debug\" )\n  endif ( NOT MSVC )\n\n  # MinGW compiler (a Windows GCC port)\n  if ( MINGW )\n    set ( MINGW32 1 )\n    add_compile_options ( -mms-bitfields )\n    # mman-win32\n    if ( HAVE_SYS_MMAN_H )\n      set ( WINDOWS_LIBS \"${WINDOWS_LIBS};mman\" )\n    endif ()\n  endif  ( MINGW )\nendif ( WIN32 )\n\n# Check for threads and math\nfind_package ( Threads REQUIRED )\n\nfind_library ( HAS_LIBM NAMES \"m\" )\nif ( HAS_LIBM )\n  set ( MATH_LIBRARY \"m\" )\nendif ( HAS_LIBM )\n\nset ( LIBFLUID_LIBS ${MATH_LIBRARY} Threads::Threads )\n\n# IBM OS/2\nunset ( DART_SUPPORT CACHE )\nunset ( DART_LIBS CACHE )\nunset ( DART_INCLUDE_DIRS CACHE )\nunset ( KAI_SUPPORT CACHE )\nunset ( KAI_LIBS CACHE )\nunset ( KAI_INCLUDE_DIRS CACHE )\nif ( CMAKE_SYSTEM MATCHES \"OS2\" )\n  set ( CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -Zbin-files\" )\n  set ( CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -Zbin-files\" )\n  if ( enable-dart )\n    check_include_files ( \"os2.h;os2me.h\" HAVE_DART_H )\n    set ( DART_SUPPORT ${HAVE_DART_H} )\n    unset ( DART_INCLUDE_DIRS CACHE )\n  endif ( enable-dart )\n  if ( enable-kai )\n    check_include_files ( \"kai.h\" HAVE_KAI_H )\n    if ( HAVE_KAI_H )\n        set ( KAI_SUPPORT ${HAVE_KAI_H} )\n        set ( KAI_LIBS \"-lkai\" )\n    endif ( HAVE_KAI_H )\n    unset ( KAI_INCLUDE_DIRS CACHE )\n  endif ( enable-kai )\nendif ( CMAKE_SYSTEM MATCHES \"OS2\" )\n\n# Solaris / SunOS\nif ( CMAKE_SYSTEM MATCHES \"SunOS\" )\n  set ( FLUID_LIBS \"${FLUID_LIBS};nsl;socket\" )\n  set ( LIBFLUID_LIBS \"${LIBFLUID_LIBS};nsl;socket\" )\nendif ( CMAKE_SYSTEM MATCHES \"SunOS\" )\n\n# Apple Mac OSX\nunset ( COREAUDIO_SUPPORT CACHE )\nunset ( COREAUDIO_LIBS CACHE )\nunset ( COREMIDI_SUPPORT CACHE )\nunset ( COREMIDI_LIBS CACHE )\nunset ( DARWIN CACHE )\nunset ( MACOSX_FRAMEWORK CACHE )\nif ( CMAKE_SYSTEM MATCHES \"Darwin\" )\n  set ( DARWIN 1 )\n  set ( CMAKE_INSTALL_NAME_DIR ${CMAKE_INSTALL_FULL_LIBDIR} )\n  if ( enable-coreaudio )\n    check_include_file ( CoreAudio/AudioHardware.h COREAUDIO_FOUND )\n    if ( COREAUDIO_FOUND )\n      set ( COREAUDIO_SUPPORT ${COREAUDIO_FOUND} )\n      set ( COREAUDIO_LIBS \"-Wl,-framework,CoreAudio,-framework,AudioUnit\" )\n    endif ( COREAUDIO_FOUND )\n  endif ( enable-coreaudio )\n  if ( enable-coremidi )\n    check_include_file ( CoreMIDI/MIDIServices.h COREMIDI_FOUND )\n    if ( COREMIDI_FOUND )\n      set ( COREMIDI_SUPPORT ${COREMIDI_FOUND} )\n      set ( COREMIDI_LIBS \"-Wl,-framework,CoreMIDI,-framework,CoreServices\" )\n    endif ( COREMIDI_FOUND )\n  endif ( enable-coremidi )\n  if ( enable-framework )\n    set ( MACOSX_FRAMEWORK 1 )\n  endif ( enable-framework )\nendif ( CMAKE_SYSTEM MATCHES \"Darwin\" )\n\nunset ( NETWORK_SUPPORT )\nif ( enable-network )\n    set ( NETWORK_SUPPORT 1 )\nendif ( enable-network )\n\nunset ( WITH_FLOAT CACHE )\nif ( enable-floats )\n    set ( WITH_FLOAT 1 )\nendif ( enable-floats )\n\nunset ( WITH_PROFILING CACHE )\nif ( enable-profiling )\n    set ( WITH_PROFILING 1 )\n    if ( CMAKE_C_COMPILER_ID STREQUAL \"Clang\" )\n      set ( OPT_FLAGS \"-Rpass=loop-vectorize\" ) # -Rpass-analysis=loop-vectorize\" )\n    elseif ( CMAKE_C_COMPILER_ID STREQUAL \"Intel\" )\n      set ( OPT_FLAGS \"-qopt-report=3\" )\n    elseif ( CMAKE_C_COMPILER_ID STREQUAL \"GNU\" )\n      set ( OPT_FLAGS \"\" )\n    endif ( )\n\n    set ( CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${OPT_FLAGS}\" )\n\n    find_program( CLANG_TIDY\n                NAMES \"clang-tidy\"\n                DOC \"Path to clang-tidy executable\" )\n\n    if ( CLANG_TIDY )\n        message ( STATUS \"Found clang-tidy at ${CLANG_TIDY}\" )\n        execute_process ( COMMAND ${CLANG_TIDY} \"--version\" )\n        set ( CMAKE_C_CLANG_TIDY ${CLANG_TIDY} )\n    endif ( CLANG_TIDY )\n\nendif ( enable-profiling )\n\nunset ( ENABLE_TRAPONFPE CACHE )\nunset ( TRAP_ON_FPE CACHE )\nif ( enable-trap-on-fpe AND NOT APPLE AND NOT WIN32 )\n    set ( ENABLE_TRAPONFPE 1 )\n    set ( TRAP_ON_FPE 1 )\nendif ( enable-trap-on-fpe AND NOT APPLE AND NOT WIN32 )\n\nunset ( ENABLE_FPECHECK CACHE )\nunset ( FPE_CHECK CACHE )\nif ( enable-fpe-check AND NOT APPLE AND NOT WIN32 )\n    set ( ENABLE_FPECHECK 1 )\n    set ( FPE_CHECK 1 )\nendif ( enable-fpe-check AND NOT APPLE AND NOT WIN32 )\n\nif ( NOT CMAKE_BUILD_TYPE )\n    set ( CMAKE_BUILD_TYPE \"RelWithDebInfo\" CACHE STRING\n          \"Choose the build type, options: Debug Release RelWithDebInfo MinSizeRel\" FORCE )\nendif ( NOT CMAKE_BUILD_TYPE )\n\nunset ( ENABLE_DEBUG CACHE )\nif ( CMAKE_BUILD_TYPE MATCHES \"Debug\" )\n    set ( ENABLE_DEBUG 1 )\n    add_definitions(-DDEBUG) # -D_GLIBCXX_DEBUG) # for additional C++ STL container debugging\nendif ( CMAKE_BUILD_TYPE MATCHES \"Debug\" )\n\n# Additional targets to perform clang-format/clang-tidy\n# Get all project files\nfile(GLOB_RECURSE\n     ALL_SOURCE_FILES\n     LIST_DIRECTORIES false\n     ${FluidSynth_SOURCE_DIR}/*.[chi]\n     ${FluidSynth_SOURCE_DIR}/*.[chi]pp\n     ${FluidSynth_SOURCE_DIR}/*.[chi]xx\n     ${FluidSynth_SOURCE_DIR}/*.cc\n     ${FluidSynth_SOURCE_DIR}/*.hh\n     ${FluidSynth_SOURCE_DIR}/*.ii\n     ${FluidSynth_SOURCE_DIR}/*.[CHI]\n     )\n\nfind_program ( ASTYLE \"astyle\" )\nif ( ASTYLE )\n  add_custom_target(\n    format\n    COMMAND ${ASTYLE}\n    -A1\n    -xb\n    -j\n    -k3\n    -p\n    -f\n    -n\n    -U\n    ${ALL_SOURCE_FILES}\n    )\nendif(ASTYLE)\n\n# Set the minimum version desired for libraries\nset ( ALSA_MINIMUM_VERSION 0.9.1 )\nset ( DBUS_MINIMUM_VERSION 1.11.12 )\nset ( GLIB2_MINUMUM_VERSION 2.6.5 )\nset ( LIBINSTPATCH_MINIMUM_VERSION 1.1.0 )\nset ( LIBSNDFILE_MINIMUM_VERSION 1.0.0 )\nset ( PIPEWIRE_MINIMUM_VERSION 0.3 )\nset ( PORTAUDIO_MINIMUM_VERSION 2.19 )\nset ( PULSEAUDIO_MINIMUM_VERSION 2.0 )\n\ninclude ( PkgConfigHelpers ) # Needed for Find modules using pkg-config\n\n# Make searching for packages easier on VCPKG\nif ( CMAKE_VERSION VERSION_GREATER_EQUAL 3.15 AND VCPKG_TOOLCHAIN )\n  set ( CMAKE_FIND_PACKAGE_PREFER_CONFIG ON )\nendif ()\n\n# Mandatory libraries: glib and gthread\nfind_package ( GLib2 ${GLIB2_MINUMUM_VERSION} REQUIRED )\nlist( APPEND PC_REQUIRES_PRIV \"glib-2.0\" \"gthread-2.0\")\n\nif ( GLib2_VERSION AND GLib2_VERSION VERSION_LESS \"2.26.0\" )\n    message ( WARNING \"Your version of glib is very old. This may cause problems with fluidsynth's sample cache on Windows. Consider updating to glib 2.26 or newer!\" )\nendif ( GLib2_VERSION AND GLib2_VERSION VERSION_LESS \"2.26.0\" )\n\n# Optional features\nunset ( LIBSNDFILE_SUPPORT CACHE )\nunset ( LIBSNDFILE_HASVORBIS CACHE )\nif ( enable-libsndfile )\n    #set(CMAKE_FIND_DEBUG_MODE ON)\n    find_package ( SndFile ${LIBSNDFILE_MINIMUM_VERSION} QUIET )\n    if ( NOT SndFile_FOUND )\n        # Not all distros have switched to libsndfile's cmake based build system, see #1445.\n        # Therefore, discover sndfile via the legacy pkg-config magic.\n        find_package ( SndFileLegacy )\n    endif ()\n    set ( LIBSNDFILE_SUPPORT ${SndFile_FOUND} )\n    if ( LIBSNDFILE_SUPPORT )\n        message ( STATUS \"Found libSndFile: ${SndFile_VERSION}\" )\n        #cmake_print_properties(TARGETS SndFile::sndfile PROPERTIES LOCATION INTERFACE_INCLUDE_DIRECTORIES IMPORTED_CONFIGURATIONS)\n        cmake_print_variables(SndFile_WITH_EXTERNAL_LIBS SndFile_WITH_MPEG)\n        list( APPEND PC_REQUIRES_PRIV \"sndfile\")\n        if ( SndFile_WITH_EXTERNAL_LIBS )\n            set ( LIBSNDFILE_HASVORBIS 1 )\n        else (SndFile_WITH_EXTERNAL_LIBS)\n            message ( NOTICE \"Seems like libsndfile was compiled without OGG/Vorbis support.\" )\n        endif (SndFile_WITH_EXTERNAL_LIBS)\n    else ( LIBSNDFILE_SUPPORT )\n        message( STATUS \"Could NOT find SndFile (Set SndFile_DIR to the directory containing its CMake config) (Required is at least version ${LIBSNDFILE_MINIMUM_VERSION})\" )\n    endif ( LIBSNDFILE_SUPPORT )\n    #set(CMAKE_FIND_DEBUG_MODE OFF)\nendif ( enable-libsndfile )\n\nunset ( PULSE_SUPPORT CACHE )\nif ( enable-pulseaudio )\n    find_package ( PulseAudio ${PULSEAUDIO_MINIMUM_VERSION} QUIET )\n    # Upstream config does not search for pulse-simple\n    find_library ( PULSEAUDIO_SIMPLE_LIBRARY NAMES \"pulse-simple\" QUIET )\n    if ( PULSEAUDIO_FOUND AND PULSEAUDIO_SIMPLE_LIBRARY )\n        set ( PULSE_SUPPORT TRUE )\n        set ( PULSEAUDIO_LIBRARIES ${PULSEAUDIO_SIMPLE_LIBRARY} ${PULSEAUDIO_LIBRARY} )\n        message ( STATUS \"Found PulseAudio: ${PULSEAUDIO_LIBRARIES}\" )\n        list( APPEND PC_REQUIRES_PRIV \"libpulse-simple\")\n    else ( PULSEAUDIO_FOUND AND PULSEAUDIO_SIMPLE_LIBRARY )\n        message( STATUS \"Could NOT find PulseAudio (Set PulseAudio_DIR to the directory containing its CMake config) (Required is at least version ${PULSEAUDIO_MINIMUM_VERSION})\" )\n    endif ( PULSEAUDIO_FOUND AND PULSEAUDIO_SIMPLE_LIBRARY )\nendif ( enable-pulseaudio )\n\nunset ( ALSA_SUPPORT CACHE )\nif ( enable-alsa )\n    find_package ( ALSA ${ALSA_MINIMUM_VERSION} )\n    set ( ALSA_SUPPORT ${ALSA_FOUND} )\n    if ( ALSA_SUPPORT )\n        list( APPEND PC_REQUIRES_PRIV \"alsa\")\n    endif ( ALSA_SUPPORT )\nendif ( enable-alsa )\n\nunset ( PORTAUDIO_SUPPORT CACHE )\nif ( enable-portaudio )\n    find_package( PortAudio ${PORTAUDIO_MINIMUM_VERSION} )\n    set ( PORTAUDIO_SUPPORT ${PortAudio_FOUND} )\n    if ( PORTAUDIO_SUPPORT )\n        list( APPEND PC_REQUIRES_PRIV \"portaudio-2.0\")\n    endif ()\nendif ( enable-portaudio )\n\nunset ( JACK_SUPPORT CACHE )\nif ( enable-jack )\n    find_package ( Jack )\n    set ( JACK_SUPPORT ${Jack_FOUND} )\n    if (JACK_SUPPORT)\n        list( APPEND PC_REQUIRES_PRIV \"jack\")\n    endif()\nendif ( enable-jack )\n\nunset ( PIPEWIRE_SUPPORT CACHE )\nif ( enable-pipewire )\n    find_package ( PipeWire ${PIPEWIRE_MINIMUM_VERSION} )\n    set ( PIPEWIRE_SUPPORT ${PipeWire_FOUND} )\n    if ( PIPEWIRE_SUPPORT )\n        list( APPEND PC_REQUIRES_PRIV \"libpipewire-0.3\")\n    endif()\nendif ( enable-pipewire )\n\nunset ( SYSTEMD_SUPPORT CACHE )\nif ( enable-systemd )\n    find_package ( Systemd )\n    set ( SYSTEMD_SUPPORT ${Systemd_FOUND} )\n    if ( SYSTEMD_SUPPORT )\n        list( APPEND PC_REQUIRES_PRIV \"libsystemd\")\n    endif ( SYSTEMD_SUPPORT )\nendif ( enable-systemd )\n\nunset ( DBUS_SUPPORT CACHE )\nif ( enable-dbus )\n    find_package ( DBus1 ${DBUS_MINIMUM_VERSION} QUIET )\n    set ( DBUS_SUPPORT ${DBus1_FOUND} )\n    if ( DBUS_SUPPORT )\n        message ( STATUS \"Found DBus1: ${DBus1_LIBRARIES}\" )\n        list( APPEND PC_REQUIRES_PRIV \"dbus-1\")\n    else ()\n        message ( STATUS \"Could NOT find DBus1 (Set DBus1_DIR to the directory containing its CMake config)\")\n    endif ()\nendif ( enable-dbus )\n\nunset ( LADSPA_SUPPORT CACHE )\nif ( enable-ladspa )\n    check_include_file ( ladspa.h HAVE_LADSPA_H )\n    if ( HAVE_LADSPA_H )\n        if ( NOT TARGET GLib2::gmodule-2 )\n            message ( STATUS \"LADSPA support was requested but gmodule-2 was not found.\" )\n        else ( NOT TARGET GLib2::gmodule-2 )\n            set ( LADSPA_SUPPORT 1 )\n            set ( LADSPA 1 )\n            list( APPEND PC_REQUIRES_PRIV \"gmodule-2.0\")\n        endif ( NOT TARGET GLib2::gmodule-2 )\n    endif ( HAVE_LADSPA_H )\nendif ( enable-ladspa )\n\nunset ( LIBINSTPATCH_SUPPORT CACHE )\nif ( enable-libinstpatch )\n    find_package ( InstPatch ${LIBINSTPATCH_MINIMUM_VERSION} )\n    set ( LIBINSTPATCH_SUPPORT ${InstPatch_FOUND} )\n    if ( LIBINSTPATCH_SUPPORT )\n        list( APPEND PC_REQUIRES_PRIV \"libinstpatch-1.0\")\n    endif (LIBINSTPATCH_SUPPORT )\nendif ( enable-libinstpatch )\n\nunset ( SDL2_SUPPORT CACHE )\nif ( enable-sdl2 )\n    find_package ( SDL2 QUIET )\n    if ( SDL2_FOUND )\n        if ( NOT DEFINED SDL2_VERSION )\n            include ( GetSDL2VersionFromHeaders )\n            get_sdl2_version_from_headers(\"${SDL2_INCLUDE_DIRS}\" SDL2_VERSION)\n        endif ( NOT DEFINED SDL2_VERSION )\n        if ( SDL2_VERSION VERSION_LESS \"2.0.4\" )\n            message ( STATUS \"Found SDL2 version ${SDL2_VERSION}, but the minimum required is 2.0.4\" )\n        else ( SDL2_VERSION VERSION_LESS \"2.0.4\" )\n            message ( STATUS \"Found SDL2: ${SDL2_LIBRARIES} (version: ${SDL2_VERSION})\" )\n            set ( SDL2_SUPPORT TRUE )\n            list ( APPEND PC_REQUIRES_PRIV \"sdl2\")\n        endif ( SDL2_VERSION VERSION_LESS \"2.0.4\" )\n    else ( SDL2_FOUND )\n        message ( STATUS \"Could NOT find SDL2 (Set SDL2_DIR to the directory containing its CMake config)\" )\n    endif ( SDL2_FOUND )\nendif ( enable-sdl2 )\n\nunset ( OBOE_SUPPORT CACHE )\nif ( enable-oboe )\n  find_package ( oboe )\n  if ( oboe_FOUND )\n    set(CMAKE_CXX_STANDARD 14)\n    set(CMAKE_CXX_STANDARD_REQUIRED ON)\n    set ( OBOE_SUPPORT 1 )\n    list( APPEND PC_REQUIRES_PRIV \"oboe-1.0\")\n  endif ( oboe_FOUND )\nendif ( enable-oboe )\n\nunset ( READLINE_SUPPORT CACHE )\nif ( enable-readline )\n  find_package ( Readline )\n  if ( Readline_FOUND )\n    set ( READLINE_SUPPORT 1 )\n    if ( PC_READLINE_FOUND )\n      list( APPEND PC_REQUIRES_PRIV \"readline\")\n    else ()\n      message ( STATUS \"No pkg-config file for readline found - trying to make it work anyway.\" )\n      list ( APPEND PC_LIBS_PRIV ${Readline_LIBRARY} )\n    endif ()\n  endif ( Readline_FOUND )\nendif ( enable-readline )\n\nunset ( AUFILE_SUPPORT CACHE )\nif ( enable-aufile )\n  set ( AUFILE_SUPPORT 1 )\nendif ( enable-aufile )\n\nunset ( OSS_SUPPORT CACHE )\nif ( enable-oss )\n  check_include_file(\"sys/soundcard.h\" HAVE_SYS_SOUNDCARD_H)\n  check_include_file(\"linux/soundcard.h\" HAVE_LINUX_SOUNDCARD_H)\n  check_include_file(\"machine/soundcard.h\" HAVE_MACHINE_SOUNDCARD_H)\n  if ( HAVE_SYS_SOUNDCARD_H OR HAVE_LINUX_SOUNDCARD_H OR HAVE_MACHINE_SOUNDCARD_H )\n    set ( OSS_SUPPORT TRUE )\n  else ( HAVE_SYS_SOUNDCARD_H OR HAVE_LINUX_SOUNDCARD_H OR HAVE_MACHINE_SOUNDCARD_H )\n    set ( OSS_SUPPORT FALSE )\n  endif ( HAVE_SYS_SOUNDCARD_H OR HAVE_LINUX_SOUNDCARD_H OR HAVE_MACHINE_SOUNDCARD_H )\nendif ( enable-oss )\n\nunset ( MIDISHARE_SUPPORT CACHE )\nif ( enable-midishare )\n  find_package ( MidiShare QUIET )\n  set ( MIDISHARE_SUPPORT ${MidiShare_FOUND} )\nendif ( enable-midishare )\n\nunset ( OPENSLES_SUPPORT CACHE )\nif ( enable-opensles )\n  find_package( OpenSLES )\n  set ( OPENSLES_SUPPORT ${OpenSLES_FOUND} )\nendif ( enable-opensles )\n\nunset ( ENABLE_MIXER_THREADS CACHE )\nif ( enable-threads )\n  set ( ENABLE_MIXER_THREADS 1 )\nendif ( enable-threads )\n\nunset ( HAVE_OPENMP CACHE )\nfind_package ( OpenMP COMPONENTS C )\nif (enable-openmp AND ENABLE_UBSAN)\n    message(WARNING \"OpenMP is not supported when UBSan is enabled. Disabling OpenMP.\")\nelseif (enable-openmp AND OpenMP_C_FOUND )\n    message(STATUS \"Found OpenMP version: ${OpenMP_C_VERSION} date: ${OpenMP_C_SPEC_DATE}\")\n    if ( TARGET OpenMP::OpenMP_C AND (( NOT OpenMP_C_SPEC_DATE LESS \"201307\" ) OR NOT ( OpenMP_C_VERSION VERSION_LESS \"4.0\" )) )\n        set ( HAVE_OPENMP 1 )\n        list ( APPEND PC_LIBS_PRIV ${OpenMP_C_LIBRARIES} )\n    else()\n        message(STATUS \"  OpenMP version is not supported. Feature disabled.\")\n    endif()\nendif()\n\n# manipulate some variables to setup a proper test env\nset(TEST_SOUNDFONT \"${FluidSynth_SOURCE_DIR}/sf2/VintageDreamsWaves-v2.sf2\")\nset(TEST_SOUNDFONT_UTF8_1 \"${FluidSynth_SOURCE_DIR}/sf2/\\\\xE2\\\\x96\\\\xA0VintageDreamsWaves-v2\\\\xE2\\\\x96\\\\xA0.sf2\")\nset(TEST_SOUNDFONT_UTF8_2 \"${FluidSynth_SOURCE_DIR}/sf2/VìntàgèDrèàmsWàvès-v2.sf2\")\nset(TEST_SOUNDFONT_SF3 \"${FluidSynth_SOURCE_DIR}/sf2/VintageDreamsWaves-v2.sf3\")\nset(TEST_MIDI_UTF8 \"${FluidSynth_SOURCE_DIR}/test/ⓉⒺⓈⓉ.mid\")\nset(TEST_WAV_UTF8 \"${FluidSynth_BINARY_DIR}/test/ⓉⒺⓈⓉ.wav\")\n\n# Make sure to link against libm before checking for math functions below\nset ( CMAKE_REQUIRED_LIBRARIES \"${LIBFLUID_LIBS};${WINDOWS_LIBS}\" )\n\n# Check for C99 float math\n\nunset ( HAVE_SINF CACHE )\nCHECK_SYMBOL_EXISTS ( sinf \"math.h\" HAVE_SINF )\nif ( HAVE_SINF )\n  set ( HAVE_SINF 1 )\nendif ( HAVE_SINF )\n\nunset ( HAVE_COSF CACHE )\nCHECK_SYMBOL_EXISTS ( cosf \"math.h\" HAVE_COSF )\nif ( HAVE_COSF )\n  set ( HAVE_COSF 1 )\nendif ( HAVE_COSF )\n\nunset ( HAVE_FABSF CACHE )\nCHECK_SYMBOL_EXISTS ( fabsf \"math.h\" HAVE_FABSF )\nif ( HAVE_FABSF )\n  set ( HAVE_FABSF 1 )\nendif ( HAVE_FABSF )\n\nunset ( HAVE_POWF CACHE )\nCHECK_SYMBOL_EXISTS ( powf \"math.h\" HAVE_POWF )\nif ( HAVE_POWF )\n  set ( HAVE_POWF 1 )\nendif ( HAVE_POWF )\n\nunset ( HAVE_SQRTF CACHE )\nCHECK_SYMBOL_EXISTS ( sqrtf \"math.h\" HAVE_SQRTF )\nif ( HAVE_SQRTF )\n  set ( HAVE_SQRTF 1 )\nendif ( HAVE_SQRTF )\n\nunset ( HAVE_LOGF CACHE )\nCHECK_SYMBOL_EXISTS ( logf \"math.h\" HAVE_LOGF )\nif ( HAVE_LOGF )\n  set ( HAVE_LOGF 1 )\nendif ( HAVE_LOGF )\n\nunset ( HAVE_INETNTOP CACHE )\nunset ( IPV6_SUPPORT CACHE )\nif ( WIN32 )\n  CHECK_SYMBOL_EXISTS ( inet_ntop \"ws2tcpip.h\" HAVE_INETNTOP )\nelse ( WIN32 )\n  CHECK_SYMBOL_EXISTS ( inet_ntop \"arpa/inet.h\" HAVE_INETNTOP )\nendif ( WIN32 )\nif ( enable-ipv6 )\n  if ( HAVE_INETNTOP )\n    set ( IPV6_SUPPORT 1 )\n  endif ( HAVE_INETNTOP )\nendif ( enable-ipv6 )\n\nunset ( HAVE_SOCKLEN_T CACHE )\nset ( CMAKE_EXTRA_INCLUDE_FILES_SAVE ${CMAKE_EXTRA_INCLUDE_FILES} )\nif ( WIN32 )\n  set ( CMAKE_EXTRA_INCLUDE_FILES \"winsock2.h;ws2tcpip.h\" )\nelse ( WIN32 )\n  set ( CMAKE_EXTRA_INCLUDE_FILES sys/socket.h )\nendif ( WIN32 )\ncheck_type_size ( socklen_t SOCKLEN_T )\nset ( CMAKE_EXTRA_INCLUDE_FILES ${CMAKE_EXTRA_INCLUDE_FILES_SAVE} )\nif ( HAVE_SOCKLEN_T )\n  set ( HAVE_SOCKLEN_T 1 )\nendif ( HAVE_SOCKLEN_T )\n\n# General configuration file\nconfigure_file ( ${FluidSynth_SOURCE_DIR}/src/config.cmake\n                 ${FluidSynth_BINARY_DIR}/config.h )\n\n# required to allow ctest to be called from top-level build directory\nENABLE_TESTING()\n\n# Process subdirectories\nadd_subdirectory ( src )\nadd_subdirectory ( test )\nadd_subdirectory ( doc )\n\n# pkg-config support\nset ( prefix \"${CMAKE_INSTALL_PREFIX}\" )\nset ( exec_prefix \"\\${prefix}\" )\nif ( IS_ABSOLUTE \"${CMAKE_INSTALL_LIBDIR}\" )\n  set ( libdir \"${CMAKE_INSTALL_LIBDIR}\" )\nelse ()\n  set ( libdir \"\\${exec_prefix}/${CMAKE_INSTALL_LIBDIR}\" )\nendif ()\nif ( IS_ABSOLUTE \"${CMAKE_INSTALL_INCLUDEDIR}\" )\n  set ( includedir \"${CMAKE_INSTALL_INCLUDEDIR}\" )\nelse ()\n  set ( includedir \"\\${prefix}/${CMAKE_INSTALL_INCLUDEDIR}\" )\nendif ()\n\ngenerate_pkgconfig_spec(fluidsynth.pc.in ${FluidSynth_BINARY_DIR}/fluidsynth.pc libfluidsynth-OBJ)\ninstall ( FILES ${FluidSynth_BINARY_DIR}/fluidsynth.pc\n    DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig )\n\n# Exported targets for cmake: find_package(FluidSynth)\n# when installed, use CMAKE_PREFIX_PATH=fluidsynth-prefix;...\n# to use the build directory directly set the FluidSynth_DIR variable instead.\n\n# targets in the build directory\nexport(EXPORT FluidSynthTargets\n   FILE \"${FluidSynth_BINARY_DIR}/FluidSynthTargets.cmake\"\n   NAMESPACE FluidSynth::\n)\n\ninclude(CMakePackageConfigHelpers) # SameMinorVersion requires CMake 3.11\nwrite_basic_package_version_file(\n    FluidSynthConfigVersion.cmake\n    VERSION ${VERSION}\n    COMPATIBILITY SameMinorVersion\n)\n\n# In static builds, we need the extra modules so the config can\n# find the transitive dependencies.\nunset ( EXTRA_STATIC_MODULES )\nif ( NOT BUILD_SHARED_LIBS )\n  file ( GLOB EXTRA_STATIC_MODULES \"${FluidSynth_SOURCE_DIR}/cmake_admin/Find*.cmake\" )\n  list ( APPEND EXTRA_STATIC_MODULES \"${FluidSynth_SOURCE_DIR}/cmake_admin/PkgConfigHelpers.cmake\" )\n  file ( COPY ${EXTRA_STATIC_MODULES} DESTINATION \"${FluidSynth_BINARY_DIR}\" )\nendif ( NOT BUILD_SHARED_LIBS )\n\n# Here, configure_file() is used instead of the more orthodox macro\n# configure_package_config_file() because the latter does not\n# support generating a config.cmake file for both the installed\n# package and for using the build directory directly.\nconfigure_file(FluidSynthConfig.cmake.in FluidSynthConfig.cmake @ONLY)\ninstall(FILES \"${FluidSynth_BINARY_DIR}/FluidSynthConfig.cmake\"\n              \"${FluidSynth_BINARY_DIR}/FluidSynthConfigVersion.cmake\"\n              ${EXTRA_STATIC_MODULES}\n    DESTINATION \"${CMAKE_INSTALL_LIBDIR}/cmake/fluidsynth\")\n\n# Extra targets for Unix build environments\nif ( UNIX )\n    if ( DEFINED FLUID_DAEMON_ENV_FILE)\n        configure_file ( fluidsynth.service.in\n        ${FluidSynth_BINARY_DIR}/fluidsynth.service @ONLY )\n\n        configure_file ( fluidsynth.conf.in\n        ${FluidSynth_BINARY_DIR}/fluidsynth.conf @ONLY )\n\n    endif ( DEFINED FLUID_DAEMON_ENV_FILE )\n\n    # uninstall custom target\n    configure_file ( \"${FluidSynth_SOURCE_DIR}/cmake_admin/cmake_uninstall.cmake.in\"\n      \"${FluidSynth_BINARY_DIR}/cmake_uninstall.cmake\" IMMEDIATE @ONLY)\n    add_custom_target ( uninstall\n      \"${CMAKE_COMMAND}\" -P \"${FluidSynth_BINARY_DIR}/cmake_uninstall.cmake\")\nendif ( UNIX )\n\ninclude ( report )\n\n# CPack support\nset ( CPACK_PACKAGE_DESCRIPTION_SUMMARY \"FluidSynth real-time synthesizer\" )\nset ( CPACK_PACKAGE_VENDOR \"fluidsynth.org\" )\nset ( CPACK_PACKAGE_DESCRIPTION_FILE \"${FluidSynth_SOURCE_DIR}/README.md\" )\nset ( CPACK_RESOURCE_FILE_LICENSE \"${FluidSynth_SOURCE_DIR}/LICENSE\" )\nset ( CPACK_PACKAGE_VERSION_MAJOR ${FLUIDSYNTH_VERSION_MAJOR} )\nset ( CPACK_PACKAGE_VERSION_MINOR ${FLUIDSYNTH_VERSION_MINOR} )\nset ( CPACK_PACKAGE_VERSION_PATCH ${FLUIDSYNTH_VERSION_MICRO} )\nset ( CPACK_PACKAGE_EXECUTABLES \"fluidsynth\" \"FluidSynth CLI\" )\n\n# source packages\nset ( CPACK_SOURCE_GENERATOR TGZ;TBZ2;ZIP )\nset ( CPACK_SOURCE_IGNORE_FILES \"/.svn/;/build/;~$;.cproject;.project;/.settings/;${CPACK_SOURCE_IGNORE_FILES}\" )\nset ( CPACK_SOURCE_PACKAGE_FILE_NAME \"${PACKAGE}-${VERSION}\" )\nset ( CPACK_SOURCE_STRIP_FILES OFF )\n\n# binary packages\ninclude ( InstallRequiredSystemLibraries )\nset ( CPACK_GENERATOR STGZ;TGZ;TBZ2;ZIP )\nset ( CPACK_PACKAGE_NAME ${PACKAGE} )\nset ( CPACK_STRIP_FILES ON )\n\ninclude ( CPack )\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.1884765625,
          "content": "# Contributing\n\nThanks for considering to contribute to FluidSynth. Before implementing\nany huge new feature, consider bringing up your ideas on our mailing list:\nhttps://lists.nongnu.org/mailman/listinfo/fluid-dev\n\nContributing can be done by\n* [submitting pull requests on Github](\nhttps://help.github.com/articles/proposing-changes-to-your-work-with-pull-requests/) or\n* submitting patches to the mailing list.\n\nPatches should be created with `git format-patch`, so in every case you should be familiar with the basics of git. Make sure you develop against the master branch, i.e. **not** against any FluidSynth release.\n\nSome things that will increase the chance that your pull request or patch is accepted:\n\n* Give a reasoning / motivation for any changes or proposals you make.\n* Follow our style guide.\n* Keep your commits \"atomic\".\n* Write meaningful commit messages.\n\n## Style Guide\n\nFind FluidSynth's style guide below. Syntax related issues, like missing braces, can be taken care of by calling `make format` (provided that cmake has found `astyle` on your system).\n\n#### General\n* Every function should have a short comment explaining it's purpose\n* Every public API function **must** be documented with purpose, params and return value\n* Prefer signed integer types to unsigned ones\n* Use spaces rather than tabs\n* Avoid macros\n\n#### Naming Conventions\n* Words separated by underscores\n* Macros always UPPER_CASE\n* Function and Variable names always lower_case,  (e.g. `fluid_componentname_purpose()`)\n\n#### Bracing\n* Every block after an if, else, while or for should be enclosed in braces\n* **Allman-Style** braces everywhere\n\n### Documentation Style Guide\nWe use Doxygen for public API functions, usage examples and other\ninformation.\n\n#### Order of Elements\nPlease ensure that the order of elements in the documentation block\nis consistent with the existing documentation. Most importantly,\neach function starts with a single sentence brief description,\nfollowed by any `@param` and `@return` tags. `@deprecated` and\n`@since` should always come last.\n\nExample:\n```\n/**\n * Brief description of the function (only a single sentence).\n *\n * @param ...\n * @param ...\n * @return ...\n *\n * Detailed description of the function. This can be multiple paragraphs,\n * include code examples etc. It can also include @note, @warning or\n * other special tags not mentioned below.\n *\n * @deprecated This is deprecated because ...\n *\n * @since 1.2.3\n */\n```\n\n#### Mark Lifecycle Functions\nAll functions are sorted alphabetically in the generated API documentation.\nTo ensure that the `new_*` and `delete_*` functions appear first, please make\nsure to surround those lifecycle functions with `@startlifecycle{}` and\n`@endlifecycle` tags.\n\nExample:\n```\n/** @startlifecycle{Some Name} */\nnew_fluid_some_name(...);\ndelete_fluid_some_name(...);\n/** @endlifecycle */\n```\n\n#### Referencing Setting Items\nIf you want to mention a setting item (for example `audio.periods`),\nplease use the custom `@setting{name}` tag. The argument `name` should be\nthe setting name with all `.` replaced by `_`.\n\nExample:\n```\n/**\n * This is a comment that references \\setting{audio_periods}. You\n * can also link to a group of settings with \\setting{audio} or\n * \\setting{synth}.\n */\n```\n"
        },
        {
          "name": "ChangeLog.old",
          "type": "blob",
          "size": 71.2197265625,
          "content": "This file is no longer used. For detailed Changelog information, please refer to the \nversion control system's commits. For an overview of differences between versions,\nsee:\nhttps://github.com/FluidSynth/fluidsynth/wiki/ChangeLog\n\nFor developer related \"What's new\"-information,\nhttps://www.fluidsynth.org/api/RecentChanges.html\ncontains valuable information.\n\n=== OLD ===\n\n2009-05-01    Pedro Lopez-Cabanillas <plcl@users.sourceforge.net>\n    * configure.ac: fix for win32 build.\n\n2009-05-01    Pedro Lopez-Cabanillas <plcl@users.sourceforge.net>\n    * doc/Doxyfile: added fluid_filerenderer.c to Doxygen documentation.\n    * doc/fluidsynth-v11-devdoc.txt: license changed to CC-BY-SA 3.0\n    * doc/fluidsynth_arpeggio.c: new example added.\n    * doc/fluidsynth_metronome.c: new example added.\n    * include/fluidsynth.h, include/fluidsynth/audio.h, \n      include/fluidsynth/settings.h: Doxygen documentation.\n    * src/fluid_settings.c: Doxygen documentation.\n\n2009-04-27    Josh Green <jgreen@users.sourceforge.net>\n\t* include/fluidsynth/audio.h: Moved new filerenderer documentation to source file.\n\t* src/config_win32.h.in: Added 'typedef int socklen_t;' to the correct place.\n\t* src/fluid_filerenderer.c: Removed 2 extra pasted duplicates of the file, moved\n\t  Doxygen documentation from header file and added \"API 1.1.0\" designators.\n\t* src/config_win32.h: Removed from subversion, since it is generated from\n\t  config_win32.h.in.\n\n2009-04-26    Josh Green <jgreen@users.sourceforge.net>\n    * configure.ac: Added glib 2.10 as a dependency, added notes in output\n      for LASH, LADCCA and READLINE that they are GPL.\n    * src/fluid_io.c: Moved code to fluid_sys.c and removed.\n    * src/config_win32.h: Added \"typedef int socklen_t\" definition.\n    * src/fluid_defsfont.h: Removed glib ripped code.\n    * src/fluid_oss.c: Fixed warnings where return value of write() was\n      being ignored.\n    * src/fluid_sys.c: Re-organized, implemented portable fluid_curtime() and\n      fluid_utime() using glib functions and removed old platform specific\n      code, implemented fluid_thread functionality using glib and removed\n      old platform specific code, fluid_istream_readline(), fluid_istream_gets()\n      and fluid_ostream_printf() should now work on WIN32 also, added code\n      for WIN32 for TCP sockets (not yet tested).\n    * src/fluid_sys.h: Added fluid_gerror_message() macro to extract message\n      safely from GError structures, replaced fluid_mutex macros with\n      portable implementations using glib, removed new_fluid_client_socket()\n      and delete_fluid_client_socket() which were never implemented or used.\n    * src/fluidsynth.c: Added call to g_thread_init().\n    * src/fluidsynth_priv.h: Integer types now use glib integer types.\n\n2009-04-11    Josh Green <jgreen@users.sourceforge.net>\n\t* FluidSynth release 1.0.9 \"A Sound Future\"\n\t* configure.ac: Bumped version, no library interfaces added, removed or changed.\n\t* doc/Makefile.am: Removed html and api folders from EXTRA_DIST.\n\t* src/fluid_synth.c (fluid_synth_program_change): Preset substitute warning\n\t  now outputs MIDI channel.\n\n2009-04-02    Pedro Lopez-Cabanillas <plcl@users.sourceforge.net>\n\t* src/config_win32.h: fix compilation under MSVC 2008 and older\n\n2009-03-15    Josh Green <jgreen@users.sourceforge.net>\n\t* ltconfig: Removed obsolete ltconfig script by suggestion of\n\t  Sven Hoexter.\n\t* doc/fluidsynth.1: Some fixes from Sven Hoexter.\n\t* src/fluid_adriver.c: Re-order of default drivers to jack, alsa, pulse.\n\t* src/fluidsynth.c (fluid_synth_program_change): Added preset selection\n\t  fallback logic: Melodic - Fallback to Bank0:prognum followed by\n\t  Bank0:Program0, Percussion - Fallback to 128:0, code re-organization.\n\n2009-03-08    Josh Green <jgreen@users.sourceforge.net>\n\t* src/fluid_jack.c: Added support for Jack MIDI.\n\t* src/fluid_mdriver.c: Registered Jack MIDI driver.\n\t* README-OSX: Update from Ebrahim Mayat.\n\n2009-02-28    Pedro Lopez-Cabanillas <plcl@users.sourceforge.net>\n    * src/fluid_midi.c: Fix for ticket #22 (Wrong tempo changes)\n    * src/fluid_midi.h: delta-time accumulator moved to fluid_midi_file struct.\n\n2009-02-03    Josh Green <jgreen@users.sourceforge.net>\n    * Applied patch from KO Myung-Hun for OS/2 support including Dart audio\n      driver.\n\n2009-01-29    Josh Green <jgreen@users.sourceforge.net>\n\t* src/Makefile.am: Added PortAudio driver conditional build.\n\t* src/fluid_adriver.c: Registered fluid_portaudio_driver_settings.\n\t* src/fluid_portaudio.c: Completely overhauled for Portaudio 19.\n\t  This driver appears to have been unbuildable before.\n\n2009-01-08    Pedro Lopez-Cabanillas <plcl@users.sourceforge.net>\n\t* configure.ac: detection of CoreMIDI support. Ticket #18.\n\t* src/Makefile.am: conditional build of CoreMIDI driver.\n\t* src/fluid_coremidi.c: Basic CoreMIDI driver.\n\t* src/fluid_mdriver.c: added CoreMIDI driver.\n\n2009-01-08    Josh Green <jgreen@users.sourceforge.net>\n\t* configure.ac: Followed GTK's lead for some unexplained magic for\n\t  stupid libtool version parameters (fixes autogen.sh bomb on\n\t  undefined macro LT_REVISION/LT_CURRENT/LT_AGE).  Added\n\t  AC_CONFIG_MACRO_DIR([m4]) as suggested by libtoolize.\n\t* Makefile.am: Added ACLOCAL_AMFLAGS=-I m4 as suggested by libtoolize.\n\n2008-12-23    Josh Green <jgreen@users.sourceforge.net>\n\t* configure.ac: Added detection of PulseAudio driver.\n\t* src/Makefile.am: Added conditional build of PulseAudio driver.\n\t* src/fluid_adriver.c: Added PulseAudio driver and re-sorted drivers\n\t  by use preference.\n\t* src/fluid_chan.c: Using MIDI enums for initializing channel CC values,\n\t  added supported for RPN GM MIDI messages Bend Range, Fine Tune and\n\t  Coarse Tune, added check for out of range NRPN parameters.\n\t* src/fluid_midi.h: Added RPN enum midi_rpn_event.\n\t* src/fluid_pulse.c: New PulseAudio driver.\n\n2008-09-22     Pedro Lopez-Cabanillas <plcl@users.sourceforge.net>\n\t* src/fluid_dsound.c: Fix for ticket #16 - dsound device can't be selected.\n\n2008-09-07    Josh Green <jgreen@users.sourceforge.net>\n\n\t* src/fluid_alsa.c (new_fluid_alsa_seq_driver): Patch from\n\t  Nicolas Boulicault to add ALSA sequencer midi.portname setting.\n\t* src/fluid_conv.h: S. Christian Collins' patch - changed\n\t  FLUID_ATTEN_POWER_FACTOR from -531.509 to -200.0.\n\t* src/fluid_defsfont.c (fluid_defpreset_noteon): S. Christian Collins'\n\t  patch - crash bug fix related to using certain modulators in a preset.\n\t* src/fluid_mdriver.c: Pedro Lopez-Cabanillas' patch which adds a\n\t  midi.winmidi.device setting.\n\t* src/fluid_mod.c: S. Christian Collins' patch - Stop forcing velocity\n          based filtering and a couple of calculation fixes to transform functions.\n\t* src/fluid_synth.c: Nicolas Boulicault's patch to add midi.portname\n\t  setting.\n\t  (fluid_synth_program_change): added fix to properly search for a\n\t  percussion instrument \n\t* src/fluid_synth.h: Changed FLUID_NUM_PROGRAMS to 128 and set\n\t  DRUM_INST_BANK to 128.\n\t* src/fluid_voice.c (fluid_voice_write): S. Christian Collins' patch -\n\t  force velocity envelope value to be that of the previous stage when\n\t  switching from decay to sustain and filter calculation now uses\n\t  synthesizer baud rate rather than fixed at 44100.\n\t  (fluid_voice_update_param): S. Christian Collins' patch - Use multiplier\n\t  for GEN_ATTENUATION to be compatible with EMU10K1 cards.\n\t* src/fluid_winmidi.c: Pedro Lopez-Cabanillas' patch which adds a\n\t  midi.winmidi.device option.\n\t* src/fluidsynth.c: Nicolas Boulicault's patch which adds midi.portname\n\t  setting.  Pedro Lopez-Cabanillas' patch which breaks out of argument\n\t  processing loop for non getopt option argument handling when a non\n\t  option is encountered and not using Readline.\n\n2007-11-17    Josh Green <jgreen@users.sourceforge.net>\n\n\t* FluidSynth release 1.0.8 \"Its about funky time!\"\n\t* configure.ac: Bumped LT_REVISION and added call to AM_PROG_CC_C_O macro.\n\t* Makefile: Updated fluidsynth.prj to fluidsynth.anjuta\n\t* README-OSX: Update from Ebrahim Mayat for OS X Leopard\n\t* acinclude.m4: Fixed embedded main function in AM_PATH_READLINE macro.\n\n2007-11-11    Josh Green <jgreen@users.sourceforge.net>\n\n\t* configure.ac: Added --enable-trap-on-fpe and --enable-fpe-check to\n\t  assist with Floating Point Exception debugging.\n\t* src/fluid_chorus.c: Reverted the rest of the chorus \"Effect level clip\"\n\t  patch, until something better is devised.\n\t* src/fluid_synth.c: Added support for trapping on Floating Point\n\t  Exceptions on GLIBC systems, to aid developers in tracking down FPEs\n\t  with gdb, removed buffer alignment hacks since they are no longer\n\t  needed (not using SSE currently).\n\t* src/fluid_sys.c (fluid_time_config): Added check for a CPU freq\n\t  calculation of 0.0, since this test is inadequate to begin with and\n\t  was coming up as 0.0 on my laptop, causing a FPE.  Will replace with\n\t  real timer functions, in the future.\n\t* src/fluid_voice.c: Removed zap_almost_zero macro as it was buggy and\n\t  had issues which went away when gcc optimization was turned off and in\n\t  the case of !WITH_FLOAT was using abs() which is integer based and\n\t  would cause FPEs.\n\t  (fluid_voice_write): Removed a memory alignment hack and moved a call\n\t  to fluid_fpe_check() to a better location.\n\t  (fluid_voice_effects): Replaced zap_almost_zero with a call to fabs(),\n\t  added fluid_fpe_check() call.\n\t* src/fluidsynth_priv.h: Removed FLUID_ALIGN16BYTE hack, as it is no\n\t  longer needed.\n\n2007-11-10    Josh Green <jgreen@users.sourceforge.net>\n\n\t* doc/fluidsynth.1: Updated man page with current command line options and other changes (minor).\n\t* include/fluidsynth/synth.h: Reverted \"Effect level clip\" patch as it seems to cause chorus\n\t  count to have a much lessor effect.\n\n2007-09-20    Josh Green <jgreen@users.sourceforge.net>\n\n\t* Doc updates to AUTHORS and latest README-OSX from Ebrahim Mayat.\n\t* src/config_win32.h.in: VERSION is now filled in at configure time.\n\t* src/fluid_alsa.c (fluid_alsa_audio_run_s16): Fixed bug which was\n\t  causing weird crashes with QSynth when new_fluid_audio_driver2() when\n\t  audio meters were enabled (user data parameter was being used as a\n\t  fluid_synth_t instance).  Synth instance is now no longer used in\n\t  this case (it was only used for 16 bit dithering before).\n\t* src/fluid_oss.c: Fixed the same bug that was affecting ALSA driver.\n\t* src/fluid_rev.c: Reverted to old commented out code in regards to\n\t  reverb level.\n\t* src/fluid_synth.c (fluid_synth_dither_s16): Now no longer uses\n\t  fluid_synth_t instance, but accepts a pointer to an integer instead\n\t  for keeping track of dithering buffer index (all that the synth instance\n\t  was being used for).\n\t* src/fluid_synth.c (fluid_synth_one_block): Reverted patch which\n\t  performs assignment of chorus and reverb levels in synthesis loop,\n\t  until a better scheme is devised (unnecessary CPU consumption).\n\t* Added Visual Studio .sln and .vcproj files and some minor source\n\t  changes to get FluidSynth to build with it.\n\t* Back-converted Visual Studio project to VC++ 6 project for users\n\t  using that build platform (not tested).\n\n2007-09-02    Josh Green <jgreen@users.sourceforge.net>\n\n\t* configure.ac: Removed SSE and longlong related switches (SSE support\n\t  removed for now and longlong is now always used).\n\t* : Applied effect level clip patch from David Hilvert\n\t  see http://fluidsynth.resonance.org/trac/ticket/2.\n\t* : Applied reverb damp scaling patch from David Hilvert\n\t  see http://fluidsynth.resonance.org/trac/ticket/3.\n\t* src/fluid_dsp_float.c: No longer being #include'd and all interpolation\n\t  functionality has been re-written as separate functions, interpolating\n\t  around loops is now supported, effect (reverb/chorus/pan/filter) stuff\n\t  moved to fluid_voice.c.\n\t* src/fluid_phase.h: 64 bit unsigned integers are now used for phase\n\t  index/fraction sample pointers, modified macros accordingly.\n\t* src/fluid_voice.c: Removed SSE code, fluid_voice_init() renamed to\n\t  fluid_dsp_float_init() and moved to fluid_dsp_float.c.  Effect related\n\t  functionality (reverb/chorus/pan/filter) moved from fluid_dsp_float.c\n\t  to fluid_voice.c.  Some code re-formatting and comment cleanup.  Loop\n\t  no longer requires padding surrounding it (fixes bug related to loop\n\t  point right on the end of the sample).\n\n2007-08-18    Josh Green <jgreen@users.sourceforge.net>\n\n\t* src/fluid_alsa.c: Added SND_SEQ_PORT_TYPE_MIDI_GENERIC back into the\n\t  ALSA sequencer port registration as it broke the use of playmidi\n\t  (thanks to Dave Serls for providing a patch and pointing this out).\n\n2007-01-14    Josh Green <jgreen@users.sourceforge.net>\n\n\t* src/fluid_alsa.c: Fixed evil bugs in ALSA driver where return value\n\t  of new fluid_alsa_handle_write_error() was not being checked correctly\n\t  causing successfully handled ALSA errors (underruns for example) to\n\t  terminate audio thread.\n\t* src/fluid_synth.c: Using an inline roundi function to replace roundf\n\t  as per suggestion by Mihail Zenkov, 16 bit for dithering.\n\n2006-12-10    Josh Green <jgreen@users.sourceforge.net>\n\n\tLots of documentation updates.\n\t* doc/Doxyfile: No longer including functions by default, only those\n\t  listed in the listed header files.\n\t* src/fluid_strtok.[ch]: Removed, since it was crap.  Replaced with\n\t  fluid_strtok() in fluid_sys.c which doesn't require an allocated\n\t  tokenizing instance.\n\t* src/fluid_alsa.c: Audio processing is more optimized in the case where\n\t  no user defined audio callback is used (removal of unneeded buffer copy),\n\t  fluid_alsa_handle_write_error() added for centralized ALSA audio error\n\t  handling,\n\t* src/fluid_aufile.c: Now also doing 16 bit dithering.\n\t* src/fluid_cmd.c: Removed use of old tokenizer instance.\n\t* src/fluid_coreaudio.c: User defined callback function is now honored.\n\t* src/fluid_defsfont.c: More leaks plugged (thanks to Paul Millar for\n\t  the patch), removed sfont_free_data() since sfont_close() should be\n\t  used instead (don't want to leak a file handle).\n\t* src/fluid_midi_router.c: Took out uses of fflush() since sending a\n\t  line of text (with newline) should display it.\n\t* src/fluid_oss.c: Using fluid_synth_dither_s16() in place of old\n\t  16 bit conversion code.\n\t* src/fluid_settings.c: Replaced strtok stuff with new function, some\n\t  other improvements.\n\t* src/fluid_synth.c (delete_fluid_synth): Turning off all voices so that\n\t  SoundFont data will be freed correctly (thanks to patch from\n\t  Paul Millar).\n\t* src/fluid_sys.c (fluid_strtok): New function to replace old tokenizing\n\t  functions which required a token instance.\n\t* src/fluidsynth.c: Warning message printed if a non option is not a\n\t  valid SoundFont or MIDI file (thanks to Nick Daly for the patch).\n\n2006-11-22    Josh Green <jgreen@users.sourceforge.net>\n\n\t* src/fluid_alsa.c (new_fluid_alsa_audio_driver2): Removed some ALSA\n\t  lib calls to set software parameters, which was likely causing the\n\t  100% CPU usage problem (not actually fixed in last update, not sure\n\t  which one is the culprit).\n\t  (fluid_alsa_seq_run): More changes in ALSA sequencer code, hopefully\n\t  it is right this time!\n\t  (delete_fluid_alsa_seq_driver): Memory leak fixed - wasn't freeing\n\t  array of sequencer file descriptors.\n\t* src/fluid_chan.c: Memory leak fixes: Now deleting preset from channel\n\t  when channel is destroyed.\n\t* src/fluid_cmd.c: Memory leak fix: strtok being deleted from command\n\t  shell when shell is destroyed.\n\t* src/fluid_defsfont.c: Memory leak fixes: Freeing modulator lists in\n\t  preset and instrument zones, freeing zone names, freeing instruments\n\t  linked from preset zones, replaced use of \"safe_malloc\" with FLUID_MALLOC\n\t  macro, deleting instrument list in SFData, deleting samples in SFData,\n\t  freeing SFData structure.\n\t* src/fluid_settings.c: Memory leak fix: freeing options in option\n\t  type settings.\n\t* src/fluid_synth.c: Memory leak fixes: Freeing FX buffers and\n\t  right/left_buf.\n\n2006-11-21    Josh Green <jgreen@users.sourceforge.net>\n\n\t* src/fluid_alsa.c (new_fluid_alsa_audio_driver2): Modified all ALSA\n\t  calls to check return code error as \"< 0\" as per ALSA examples, sample\n\t  rate is now compared with what was expected and warning message displays\n\t  both values, if target sample rate wasn't set update the local\n\t  period_size variable (was causing 100% CPU consumption by ALSA, from\n\t  the resultant erroneous sw_params calls).\n\t  (fluid_alsa_audio_run_float): Using case statement for\n\t  error codes from snd_pcm_writen() for the sake of tidiness.\n\t  (fluid_alsa_audio_run_s16): Using case statement for error codes\n\t  from snd_pcm_writei() for the sake of tidiness, re-instated call\n\t  of device callback function that was broken with the dither patch\n\t  (don't want to break the API), now using new fluid_synth_dither_s16()\n\t  to convert floating point sample data to 16 bit with dithering.\n\t  (fluid_alsa_seq_run): Timeout in poll() call set to 100ms (from 1ms!),\n\t  snd_seq_event_input_pending is used to check if events are available\n\t  before calling snd_seq_event_input to prevent blocking, check of\n\t  snd_seq_event_input error code moved to the right location (bug fix).\n\t* src/fluid_synth.h: Added dither_index parameter to fluid_synth_t\n\t  structure to allow for per synth dithering continuity.\n\t* src/fluid_synth.c: Modified dithering to use new dither_index field\n\t  for per synth dithering continuity, fixed off by 1 error with\n\t  dithering index comparison, removed usage of roundf in dithering (is\n\t  it sufficient to just integer truncate?).\n\t  (fluid_synth_dither_s16): New function to perform dithering on\n\t  buffers of floating point sample data.\n\n2006-11-20    Josh Green <jgreen@users.sourceforge.net>\n\n\t* src/fluid_alsa.c: Applied dithering patch from Mihail Zenkov.\n\t* src/fluid_synth.c: Applied dithering patch from Mihail Zenkov.\n\n2006-03-04    Josh Green <jgreen@users.sourceforge.net>\n\n\t* src/fluid_alsa.c (delete_fluid_alsa_audio_driver): Now calling\n\tsnd_pcm_close() to close the ALSA audio driver handle.\n\t(fluid_alsa_seq_run): Check for -ENOSPC error was logicly inverted.\n\t(new_fluid_alsa_seq_driver): Sequencer is now opened in blocking mode.\n\n2006-02-20    Josh Green <jgreen@users.sourceforge.net>\n\n\t* Fixed build error that occurred when neither LASH or LADCCA are\n\t  present.\n\t* Updated README-OSX from Ebrahim Mayat.\n\n2006-02-18    Josh Green <jgreen@users.sourceforge.net>\n\t* FluidSynth release 1.0.7 \"Increasing Fluidity..\"\n\n\t* Removed spurious newlines from FLUID_LOG statements throughout.\n\t* AUTHORS: Some cleanup and additions.\n\t* src/fluid_lash.[ch]: Moved LADCCA related code from fluidsynth.c here\n\t  and added new LASH support (both old LADCCA and LASH are supported\n\t  exclusively). Used patches sent by Frieder Bürzele as a guide.\n\t* src/fluidsynth.c: Removed LADCCA code (now in fluid_lash.c),\n\t  re-organized command line parsing and removed duplicate WIN32 switch\n\t  statement, re-organized help output and added missing entries, added\n\t  \"-o help\" switch for listing settings, welcome message now printed\n\t  whenever FluidSynth is run and simplified,\n\t  (print_usage): hard coded application name as \"fluidsynth\".\n\t* configure.ac: Changed --enable-SSE option to --enable-broken-SSE\n\t  and --enable-SSE now just displays a fat warning about not using it.\n\t* src/fluid_jack.c: Warning is now displayed if synth sample rate\n\t  doesn't match jackd.\n\t* src/fluid_alsa.c: Added detection for ALSA sequencer buffer overrun\n\t  (-ENOSPC) and interrupted poll() call (-1??).\n\t* src/fluid_voice.c: Applied patch from Henri Manson which adds a\n\t  fluid_ct2hz_real() function which does not have the filter cutoff\n\t  limits that fluid_ct2hz() does, new function being used for\n\t  calculations that may include non-audible frequencies.\n\t* src/fluid_dsound.c: Applied patch from Henri Manson which\n\t  only creates the directsound window once.\n\n2005-09-04    Josh Green <jgreen@users.sourceforge.net>\n\n\t* src/fluid_ramsfont.c (fluid_ramsfont_remove_izone): Applied crash bug\n\tfix from Antoine Schmitt.\n\n2005-07-05    Josh Green <jgreen@users.sourceforge.net>\n\n\t* src/fluidsynth_priv.h: FLUID_ALIGN16BYTE is broken on AMD64 so now\n\tonly enabled if SSE is being used. If SSE code becomes more useful in\n\tthe future this should be fixed.\n\n2005-06-29    Josh Green <jgreen@users.sourceforge.net>\n\n\t* Applied LASH patch that is included with ladcca-0.4.0.\n\n2005-06-11    <jgreen@users.sourceforge.net>\n\n\t* Released FluidSynth 1.0.6 \"Music to my ears\"\n\n\t* README-OSX: Update from Ebrahim Mayat.\n\t* acinclude.m4: Midishare support now defaults to auto.\n\t* configure.ac: Added LT_CURRENT, LT_REVISION and LT_AGE in place of\n\t  LIBFLUIDSYNTH_MAJ and LIBFLUIDSYNTH_MIN to make better use of\n\t  libtool library versioning.  Fixed use of AC_ARG_ENABLE (was setting\n\t  variables to yes even when disable was specified), fixes --disable-SSE\n\t  which was reported by Mikhail Yakshin, added warning when SSE is\n\t  enabled to let users know that this feature isn't really desirable\n\t  currently.\n\t* src/Makefile.am: Now using LT_VERSION_INFO to substitute the libtool\n\t  version.\n\t* src/fluid_cmd.c (fluid_cmd_handler_handle): Modified to avoid GCC\n\t  \"type-punned\" cast warning.\n\t* src/fluid_defsfont.c (fluid_preset_zone_import_sfont): Fixed\n\t  assignment of modulator amtsrc flags (should be assigned to flags2\n\t  not flags1), thanks to Stephan Tassart for reporting this.\n\t  (fluid_inst_zone_import_sfont): Same fixes as for above.\n\t* src/fluid_sys.c (fluid_log): Now using vsnprintf for formatting\n\t  error messages to fix buffer overflow as reported by Axioplase.\n\t  (fluid_debug): Same as above.\n\n2005-06-11    <jgreen@users.sourceforge.net>\n\n\t* fluidsynth.prj: Added Anjuta project file.\n\t* src/fluid_conv.c: fluid_cb2amp conversion set back to real centibels\n\t  and added a new fluid_atten2amp table conversion for non-standard\n\t  EMU 8k/10k attenuation.\n\t* src/fluid_voice.c (fluid_voice_write): Updated volume calculations to\n\t  use fluid_cb2amp for envelope and LFO, but use fluid_atten2amp for\n\t  initial attenuation.\n\t  (fluid_voice_noteoff): Re-coded volenv_val attack conversion and\n\t  verified.\n\n2005-06-10    <jgreen@users.sourceforge.net>\n\n\t* src/fluid_phase.h: Patch from Sean Bolton to fix big endian long long\n\t  phase combined 64 bit value type fluid_phase_t\n        * src/fluid_voice.c (fluid_voice_update_param): case GEN_OVERRIDEROOTKEY\n\t  was incorrectly adding pitchadj fine tune amount instead of subtracting\n\t  it.  Also, fine tuning should be applied to root key override as well.\n\n2005-06-07    <jgreen@users.sourceforge.net>\n\n        * Applied Sean Bolton's DSSI patch (SB patch) which adds the ability to\n\t  change polyphony at runtime and fixes a bug (see below).\n\t* README-OSX: Update from Ebrahim Mayat for OSX Panther.\n\t* include/fluidsynth/synth.h: Sean Bolton's DSSI patch adds two new\n\t  functions fluid_synth_set_polyphony and fluid_synth_get_polyphony.\n\t* src/fluid_conv.c: Centibel to amplitude conversion now follows\n\t  EMU 8k/10k which is contrary to SoundFont specification (TiMidity++\n\t  used as an example).\n\t* src/fluid_conv.h: FLUID_CB_POWER_FACTOR defined for the centibel->amp\n\t  conversion table equation.\n\t* src/fluid_defsfont.c (load_pgen): Fixed 'use of cast expressions as\n\t  lvalues is deprecated' warning by casting the value being assigned\n\t  instead of the variable assigned to and removed code warrior\n\t  specific code to work around this.\n\t  (load_igen): Same as for load_pgen.\n\t* src/fluid_synth.c: SB patch - uses synth->polyphony instead of\n\t  synth->nvoice when iterating over the synth's voices.\n\t  (fluid_synth_update_polyphony): SB patch (new) - runtime update\n\t  (fluid_synth_set_polyphony): SB patch (new)\n\t  (fluid_synth_get_polyphony): SB patch (new)\n\t  (fluid_synth_nwrite_float): SB patch - fixes bug where the use of\n\t  arbitrary values of the 'len' parameter was broken.\n\t* src/fluid_voice.c (fluid_voice_write): modlfo_to_vol (modulation LFO\n\t  to volume) was being calculated inverted (should be negative\n\t  attenuation, gain, for a positive rise in LFO).\n\t  (fluid_voice_noteoff): Updated centibel to amplitude conversion\n\t  used when voice off during attack to use the new\n\t  FLUID_CB_POWER_FACTOR.\n\n2004-11-11    <jgreen@users.sourceforge.net>\n\n\t* README-OSX: Update from Ebrahim Mayat.\n\n2004-08-18    <peter@hanappe.com>\n\n\t* src/fluid_synth.c (fluid_synth_set_bank_offset): \n\t(fluid_synth_get_bank_offset): New API to set\n\ta bank offset in a SoundFont (proposition made by Ken Ellinwood).\n\n2004-08-06    <peter@hanappe.com>\n\n\t* src/fluid_synth.c (fluid_synth_noteon):\n\tfluid_synth_release_voice_on_same_note() is now called in the\n\tnoteon() function instead of in fluid_synth_start(). This fixes\n\tthe silent note problem!\n\n2004-07-29    <peter@hanappe.com>\n\n\t* src/fluid_chan.c (fluid_channel_cc): Applied Ken Ellinwood's\n\tfix for the bank select (MSB) message.\n \n\t* src/fluid_jack.c (fluid_jack_audio_driver_settings): Applied Rui\n\tNuno Capela's patch\n\n2004-05-14    <peter@hanappe.com>\n\n\t* doc/fluidsynth.1 (option): Fixed typo noted by Gerald Pye.\n\n2004-05-14    Peter Hanappe <peter@hanappe.com>\n\n\t* src/fluid_dsound.c (fluid_dsound_enum_callback): Applied Sergey\n\tPavlishin's patch. This path fix stack overflow during DirectSound\n\taudio driver initialization.\n\n2004-05-07    Peter Hanappe <peter@hanappe.com>\n\n\t* src/fluid_synth.c (fluid_synth_remove_sfont): Added new function\n\n2004-05-05    Peter Hanappe <peter@hanappe.com>\n\n\t* src/fluid_alsa.c (new_fluid_alsa_seq_driver): The alsa driver\n\tnow opens several ports if the synthesizer is configured for more\n\tthan 16 MIDI channels.\n\n\t* src/fluid_voice.c (fluid_voice_write): I removed the filter\n\ton/off optimization. The filter is always on and serves as an\n\tanti-aliasing filter.\n\n2004-05-04    Peter Hanappe <peter@hanappe.com>\n\n\t* src/fluid_synth.c (new_fluid_synth): The number of MIDI channels\n\tnow has to be a multiple of 16. The synth checks that this is the\n\tcase and changes the settings accordingly. I removed the sanity\n\tchecks for the min/max value of the number of MIDI channels since\n\tthis is already done by the settings object.\n\n2004-03-30    Josh Green <jgreen@users.sourceforge.net>\n\n\t* src/fluid_voice.c (fluid_voice_write): Altered filter turn-off\n\toptimization to not turn filter off once it has been\n\tenabled. There is still a potential for a click when it gets\n\tturned on though, which needs to be dealt with.\n\n2004-03-30    Peter Hanappe <peter@hanappe.com>\n\n\t* src/fluid_dsp_core.c: I've split up the dsp core file in three\n\tfiles: fluid_dsp_simple.c, fluid_dsp_float.c, and\n\tfluid_dsp_sse.c. This improves the readability.\n\n2004-03-29    Peter Hanappe <peter@hanappe.com>\n\n\t* src/fluid_jack.c (new_fluid_jack_audio_driver2): Testing the\n\tnumber of ports before allocating them.\n\t(fluid_jack_audio_driver_settings): Registering\n\tthe \"audio.jack.autoconnect\" setting.\n\n\t* src/fluid_midi.c (fluid_player_set_midi_tempo): Tempo changes\n\thandled correctly. Was broken after fix on [2004-03-22] (see\n\tbelow).\n\n\t* src/fluid_strtok.c (fluid_strtok_char_index): Removed printf's\n\tfrom fluid_strtok.c\n\n2004-03-26    Peter Hanappe <peter@hanappe.com>\n\n\t* bindings/README: Imported the fluidsynth_jni and fluidmax\n\tprojects.\n\t\n2004-03-25    Peter Hanappe <peter@hanappe.com>\n\n\t* src/fluid_rev.c (new_fluid_revmodel): Added 'gain', similar as\n\tin Freeverb 3. Using same 'wetscale' as Freeverb 3, but fixing\n\t'wet' to 3. fluid_revmodel_setlevel() does not change the value of\n\t'wet': The 'wet' level can be controlled with the 'reverb send'.\n\t(fluid_revmodel_processreplace): The input is multiplied by 2 and\n\tby the gain. This corresponds to the channel mixing and scaling\n\tthat Freeverb 3 does.\n\n2004-03-24    Peter Hanappe <peter@hanappe.com>\n\n\t* src/fluidsynth.c (main): Added the -f switch. Passing \"-f file\"\n\ton the command line tells fluidsynth to read parse the file and\n\texecute and commands.  \n\t(main): User config and system config file are now loaded correctly\n\n\t* src/fluid_cmd.c (fluid_shell_run): the shell doesn't get stuck\n\tand loop on an empty string when the end of the stream is reached.\n\n\t* src/fluid_io.c (fluid_istream_gets): fluid_istream_gets()\n\treturns 0 if the end of the stream was reached and -1 on error.\n\n\t* src/fluid_cmd.c (fluid_source): Fixed bug in \"file =\n\topen(filename, FLAGS);\" (I shouldn't pass O_WRONLY when what I\n\twant is O_RDONLY!)\n\n2004-03-23    Peter Hanappe <peter@hanappe.com>\n\n\t* src/fluid_aufile.c (new_fluid_file_audio_driver): Added\n\tfluid_aufile.c. This file implements a audio driver that writes\n\tthe audio output to a file. This driver is NOT real-time and is\n\tcurrently useful for testing purposes only (not even useful to\n\tplay MIDI files).\n\n2004-03-22  Peter Hanappe <peter@hanappe.com>\n\n\t* src/fluid_synth.c (new_fluid_synth): Removed the synth->busy\n\tmutex. I don't think it is necessary; to be discussed.\n\n\t* src/fluid_midi.c (fluid_player_callback): Fixed the timing in\n\tthe MIDI playback. The current MIDI tick in every timer callback\n\twas calculated as an increment to the previous number of\n\tticks. This introduces a growing error due to rounding errors and\n\ttimer variations. The current tick is now calculated according to\n\tthe absolute time at the beginning of the file. (Beginners error\n\t...)\n\n\t* doc/FluidSynth-LADSPA.pdf: Added Markus' LADSPA design document.\n\n\t* doc/xtrafluid.txt: Added Antoine's Xtra API documentation.\n\n\t* doc/midi_time.txt: Added a memo on midi timing.\n\n2004-03-19  Peter Hanappe <peter@hanappe.com>\n\n\t* src/fluid_midishare.c: Applied Stephane Letz patch: MidiShare is\n\tnow connected to fluidsynth by default so that received MIDI\n\tevents directly trigger the synth\n\t\n2004-02-28  Peter Hanappe <peter@hanappe.com>\n\n\t* src/fluid_synth.c: Added fluid_synth_program_select2() and\n\tfluid_synth_get_sfont_by_name() in fluid_synth.c. These functions\n\tare not in the public API, yet.\n\n2004-02-25  Peter Hanappe <peter@hanappe.com>\n\n\t* src/fluid_voice.c: Fixed bug in volume envelope (in\n\tfluid_voice_update_param(), case GEN_VOLENVDECAY): the minimum\n\tvalue was converted to linear amplitude instead of a normalized\n\tvalue of the cB (1-cB/1000). Because of that, the decay section\n\twent on for too long.\n\n2004-12-xx  Peter Hanappe <peter@hanappe.com>\n\n\t* src/fluid_seq.c: Inserting events in the queueLater list was\n\tincomplete. It didn't check if the event was the last in the list,\n\tand the looping through the list didn't update the prev pointer. I\n\tadded muteces to the sequencer. Events are dynamically allocated\n\tif no free events are available. The sequencer is protected by a\n\tmutex.\n \n2003-11-14  Josh Green  <jgreen@users.sourceforge.net>\n\t* src/fluidsynth.c: Removed CCA_Use_Jack and CCA_Use_Alsa flags\n\tsince LADCCA no longer uses them.\n\n2003-08-31  Josh Green  <jgreen@users.sourceforge.net>\n\n\t* acinclude.m4: Renamed AC_SOUND macro to AC_OSS_AUDIO and removed\n\tthe ALSA check from it since pkg-config is now being used to check\n\tfor ALSA. Also fixed --enable-alsa-support and --enable-oss-support\n\twhich were disabling support instead (reported by Bart Massey).\n\t* configure.ac: pkg-config is now being used to check for ALSA.\n\tALSA and OSS now use automake conditionals to conditionally compile\n\tsource files.\n\t* Makefile.am: Re-arranged SUBDIRS so build output looks nicer.\n\t* src/Makefile.am: ALSA and OSS are now conditionally compiled using\n\tautomake conditionals.\n\n2003-08-29  Josh Green  <jgreen@users.sourceforge.net>\n\n\t* src/fluid_sys.c: Patch from Eric Van Buggenhaut to make i386 asm\n\tcode not compile for all non-i386 archs rather than just DARWIN.\n\t* src/fluidsynth_priv.h: Patch from Sergey Pavlishin to fix\n\tFLUID_REALLOC macro.\n\t* src/fluid_cmd.c: Ken Ellinwood's patch to add -verbose to \"channels\"\n\tcommand, and print settings values with 3 decimal places.\n\t* src/fluid_defsfont.c (fluid_defsfont_sfont_get_preset): Ken\n\tEllinwood's patch to initialize sfont field of preset.\n\t* src/fluid_ramsfont.c (fluid_ramsfont_sfont_get_preset): Ken\n\tEllinwood's patch to initialize sfont field of preset.\n\t* src/fluid_midi.c (fluid_midi_file_read_event): Fixed a crash bug with\n\tzero length MIDI meta events that was pointed out by Sergey Pavlishin.\n\t(delete_fluid_midi_event): Fixed a stack overflow problem pointed out\n\tby Sergey Pavlishin that was caused by recursively deleting MIDI\n\tevent linked list, now just using a while loop.\n\n2003-08-25  Josh Green  <jgreen@users.sourceforge.net>\n\n\t* src/fluidsynth.c: MIDI channels switch should be -K not -L as was\n\tlisted in \"Usage\" output, also -K was setting audio.channels for\n\tnon getopt case statement - changed to midi.channels. Added a new\n\toption \"-l, --disable-ladcca\" to disable LADCCA server connection.\n\n2003-08-25  Josh Green  <jgreen@users.sourceforge.net>\n\n\tRelease version 1.0.3\n\n\t* doc/fluidsynth.1: Applied typo patch from Eric Van Buggenhaut.\n\t* TODO: Restructuring TODO file (removing old stuff).\n\t* doc/Doxyfile: Disabled Tex doxygen generation and changed\n\tOUTPUT_DIRECTORY to api/.\n\t* doc/Makefile.am: Added an update-docs target and related for updating\n\tdeveloper doc and doxygen reference HTML. Also added update-docs to\n\tdist-hook for updating before distribution packaging.\n\t* include/fluidsynth/synth.h: Some fixes to doxygen documentation.\n\t* fluidsynth.spec.in: New RPM spec file which is generated at configure\n\ttime.\n\t* Makefile.am: Added fluidsynth.spec(.in) to EXTRA_DIST.\n\n2003-08-19  Josh Green  <jgreen@users.sourceforge.net>\n\n\t* src/fluid_alsa.c: Added some calls to snd_strerror() to print out\n\tdetails of ALSA routine failures.\n\t* src/fluid_defsfont.c: Put a message about SoundFont loading code\n\tbeing borrowed from Smurf SoundFont Editor.\n\t* src/fluid_rev.c: Valgrind found that some values were being used\n\tuninitialized because fluid_revmodel_update() was being called before\n\tall reverb parameters were set, now setting manually and then calling\n\tupdate routine.\n\t* src/fluid_voice.c: Increased FLUID_MAX_AUDIBLE_FILTER_FC to minimize\n\tclicks from filter toggling. Added a FLUID_MIN_VOLENVRELEASE constant\n\tto set the minimum volume envelope release to minimize clicks.\n\n2003-07-22  Josh Green  <jgreen@users.sourceforge.net>\n\n\t* src/fluid_midishare.c: Added include of header \"config.h\" as\n\tper Albert Graef's request.\n\t* src/fluid_voice.c (fluid_voice_optimize_sample): Moved a\n\tvariable declaration to the beginning of function, it was\n\tcausing problems with at least one user.\n\n2003-06-28  Josh Green  <jgreen@users.sourceforge.net>\n\n\t* src/fluid_defsfont.c: Moved call to fluid_voice_optimize_sample\n\tfrom fluid_inst_zone_import_sfont to fluid_defsfont_load. Also\n\treduced minimum sample size before rejection from 48 to 8 (could\n\tbe lower?).\n\t* src/fluid_voice.c (fluid_voice_optimize_sample): Added a check\n\tfor sample->valid to ignore ROM samples which was causing a crash\n\twith Vintage Dreams and other SoundFont files with ROM samples.\n\n2003-06-17  Josh Green  <jgreen@users.sourceforge.net>\n\n\tRelease version 1.0.2\n\tAdded Makefile.am files where lacking.\n\n\t* Makefile.am: Fixes to \"make dist\" target by adding macbuild, sf2\n\tand winbuild to SUBDIRS also removed acconfig.h from EXTRA_DIST.\n\t* acinclude.m4: Removed AC_JACK, now using pkgconfig.\n\t* configure.ac: Updated to version 1.0.2, Jack test now using\n\tpkgconfig and built by default if found, coreaudio driver now built\n\tby default if found.\n\t* doc/Makefile.am: Added Doxyfile, example.c, example.sf2, fluidsynth.1\n\tand fluidsynth-v10-devdoc.xml to EXTRA_DIST.\n\t* src/Makefile.am: fluid_jack.c now conditionally built, fluid_sse.h\n\tadded to EXTRA_DIST.\n\t* src/fluid_jack.c: #if JACK_SUPPORT removed as its not needed.\n\n2003-06-15  Josh Green  <jgreen@users.sourceforge.net>\n\n\t* configure.ac: Fixed detection of CoreAudio by looking for\n\tCoreAudio/AudioHardware.h.\n\t* src/Makefile.am: Added COREAUDIO_CFLAGS and COREAUDIO_LIBS.\n\t* src/fluid_coreaudio.c: Added CoreAudio prefix to #include headers\n\t(fluid_core_audio_callback): Fixed declarition to match that of the\n\ttypedef in CoreAudio header to stop warnings.\n\t* fluidsynth.c: Now including fluidsynth_priv.h to include the arch\n\tspecific definitions in there (perhaps should be done in configure\n\tscript though).\n\t* fluidsynth_priv.h: Added \"#define WITHOUT_SERVER 1\" to Darwin build.\n\n2003-06-12  Josh Green  <jgreen@users.sourceforge.net>\n\n\t* Makefile.am: Added autogen.sh to EXTRA_DIST\n\t* acinclude.m4: Added AM_PATH_READLINE macro for readline detection\n\tand prefix configuration.\n\t* configure.ac: Support for MinGW32 build, Darwin build fixes,\n\tconfigure CFLAGS input value now honored, fixes to CoreAudio support,\n\tand better readline detection and config.\n\t* src/Makefile.am: Now conditionally compiling CoreAudio and Windows\n\tsources, added config_*.h files to EXTRA_DIST, some stuff for MinGW32\n\tbuild, READLINE_LIBS and READLINE_CFLAGS now used.\n\t* src/fluid_dsound.c: Fixed some warnings by adding \"void\" for\n\tempty parameter procedure declarations.\n\t* src/fluidsynth.c: Don't include config_win32.h if MinGW32.\n\t* src/fluidsynth_priv.h: Stuff for MinGW32 and Darwin builds.\n\t* doc/fluidsynth-v10-devdoc.xml: Applied a diff from\n\tAlexandre Prokoudine.\n\n2003-06-09  Josh Green  <jgreen@users.sourceforge.net>\n\n\t* src/fluid_alsa.c: Added calls to pthread_attr_setschedparam to\n\tproperly create SCHED_FIFO threads.\n\t* src/fluid_oss.c: pthread_attr_setschedparam calls added.\n\t* src/fluid_midishare.c: Patch update from Stephane Letz.\n\n2003-05-29  root  <mn@bongo>\n\n\t* src/fluid_synth.c (fluid_synth_one_block): Added a mutex that\n\tprovides a small degree of protection against noteons / noteoffs,\n\twhen the audio thread is working.\n\n\t* src/fluid_synth.h (struct _fluid_synth_t): \n\n\t* src/fluid_voice.c (fluid_voice_optimize_sample): \n\n2003-05-29  Markus Nentwig  <nentwig@users.sourceforge.net>\n\n\t* include/fluidsynth/voice.h: added fluid_voice_gen_incr to api\n\t* src/fluidsynth.c: Added error message for command line parameter handling\n\t* src/fluid_voice.c (fluid_voice_optimize_sample): Removed loop peak detection \n\tat run time, because it caused dropouts. Now the sound font loader or application \n\tis responsible to call fluid_voice_optimize_sample (if it doesn't, the turnoff optimization is \n\tsimply disabled).\n\t\n1999-11-30  Antoine Schmitt  <as@gratin.org>\n\n\t* src/fluid_defsfont.c: inst_zone lokey is now properly initialized to 0\n\t(it was not, leading to random lost noteons depending on memory\n\tinitialization)\n\n2003-04-03  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/fluid_rev.c: reverb parameters are clipped to their valid\n\trange.\n\n\t* src/fluid_alsa.c: using fluid_alsa_audio_run_s16 as default\n\tfunction. This reduces the high CPU usage.\n\n\t* src/fluid_voice.c (fluid_voice_write): filter interpolation done\n\tover only 1 buffer to avoid filter instability\n\n\t* src/fluid_chan.c (fluid_channel_init): bank number set to 128\n\tfor the drum channel\n\n\t* src/fluid_midi.c (fluid_midi_file_read_event): Correctly reading\n\tpitchbend value\n\n2003-02-27  Josh Green  <jgreen@users.sourceforge.net>\n\n\tUpdated automake files (automake 1.6).\n\n\t* configure.ac: New version autoconf variables which get substituted\n\tinto include/iiwusynth/version.h.in.\n\t* include/iiwusynth/version.h.in: Version defines that are filled in\n\tby autoconf.\n\t* src/Makefile.am: Fixed SOURCES including removing headers that are\n\tnow in include/iiwusynth/, added missing sources (iiwu_ramsfont.[ch],\n\tiiwu_sfont.h) and added iiwu_dsp_core.c to EXTRA_DIST.\n\t* doc/Makefile.am: Added iiwusynth.1 to EXTRA_DIST.\n\t* include/iiwusynth.h: Added version.h.\n\t* iiwusynth/Makefile.am: Added version.h to the installed headers.\n\n2003-02-08  Markus Nentwig <nentwig@users.sourceforge.net>\n\n\t* src/iiwu_ladspa.c: Added a very small signal at Nyquist\n\tfrequency. This fixes denormal number problems in some\n\tplugins.\n\t* src/iiwu_cmd.c (iiwu_shell_run): Now also invalid input lines\n\tare added to the command line history. So the user can just scroll\n\tup and fix them.\n\t* src/iiwu_ladspa.c: Cleaned up error messages\n\t* src/iiwu_dsp_core.c: Disabled SSE interpolation, because it is\n\tslower than the normal code\n\t* autogen.sh: Added a line, that checks for the presence of pkg-config in\n\tautogen.sh.\n\tMotivation: It took me some time to figure out what was wrong...\n\tIt produces some error message instead of an obscure error later\n\tduring ./configure, if pkg-config is not installed.\n\t\t\n2003-02-07  Josh Green <jgreen@users.sourceforge.net>\n\n\tApplied another Bob Ham LADCCA patch.\n\n\t* src/iiwu_alsa.c: LADCCA patch: Now using a ladcca.enable setting.\n\t* src/iiwu_jack.c: LADCCA patch: ladcca.enable setting and jack ports\n\tare no longer auto connected unless audio.jack.autoconnect is set.\n\t* src/iiwusynth.c: LADCCA patch: ladcca.enable and command line options\n\t-j and --connect-jack-outputs to enable Jack autoconnect.\n\n2003-02-05  Josh Green <jgreen@users.sourceforge.net>\n\n\tApplied Bob Ham's LADCCA and pkgconfig patches.\n\n\t* Makefile.am: pkgconfig patch.\n\t* configure.ac: Renamed from configure.in as per new autoconf\n\tstandards. LADCCA configure switch and detection. FluidSynth.pc\n\tpkgconfig file output.\n\t* src/Makefile.am: LADCCA patch.\n\t* src/iiwu_alsa.c [HAVE_LADCCA]: LADCCA patch: reports ALSA\n\tsequencer client ID.\n\t* src/iiwu_jack.c [HAVE_LADCCA]: LADCCA patch: reports JACK\n\tclient name.\n\t* src/iiwusynth.c [HAVE_LADCCA]: LADCCA patch: connects to LADCCA\n\tserver, creates client thread, saves/restores SoundFont file state.\n\tUsed iiwu_sfont_get_name macro to get SoundFont file names contrary\n\tto the patch. Should these macros be public? Included unistd.h\n\tfor usleep call (within HAVE_LADCCA).\n\n2003-01-23  Josh Green <jgreen@users.sourceforge.net>\n\n\t* src/iiwu_jack.c: Fixed a segfault bug caused by freeing jack\n\tport names, when really only the port array should be freed,\n\tjack reference docs are confusing on this matter!\n\t* src/iiwu_voice.c (iiwu_voice_check_sample_sanity): Min loop size\n\tand padding now set via constants IIWU_MIN_LOOP_SIZE and\n\tIIWU_MIN_LOOP_PAD defined at top of iiwu_voice.c, and the values\n\twere lowered to exceed SF spec requirements rather then just meet.\n\t(iiwu_voice_write): Now using a constant IIWU_MAX_AUDIBLE_FILTER_FC\n\tdefined at the top of iiwu_voice.c to control the filter\n\tcutoff optimization. Also added IIWU_MIN_AUDIBLE_FILTER_Q so\n\tfilter will only turn off if both cutoff and q are determined to be\n\tinaudible. Filter optimization is much less noticeable when modulating.\n\n2003-01-14  Markus Nentwig <nentwig@users.sourceforge.net>\n\n\t* src/iiwu_ladspa.c: Adapted new command handler\n\t* src/iiwu_midi_router.c (midi_dump_prerouter): Added forgotten\n\t'flush' for event dump 'fprintf's\n\n2003-01-01  Markus Nentwig <nentwig@users.sourceforge.net>\n\n\t* src/iiwu_oss.c (new_iiwu_oss_audio_driver): Changed to callback function\n\t* src/iiwu_alsa.c (new_iiwu_alsa_midi_driver): Changed to callback function\n\t* src/iiwu_midishare.c (iiwu_midishare_midi_driver_receive): Partly done the same\n\t* src/iiwu_winmidi.c (new_iiwu_winmidi_driver): To be done...\n\t* src/iiwu_midi_router.c: Added\n\t* src/iiwu_ladspa.c: Adapted to new settings system\n\t* src/iiwu_adriver.c (iiwu_audio_driver_settings): Uses getint\n\tinstead of getnum for audio.period-size and audio.periods settings.\n\t* src/iiwu_voice.c (iiwu_voice_write): \n\tIgnore the valid flag for samples. Otherwise no sound is produced.\n\t* src/iiwu_chan.c (iiwu_channel_cc): Fixed bank select (7-bit\n\tinstead of 8 bit) \n\t\n2002-12-23  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_io.c (iiwu_istream_readline): new file (iiwu_io.c and\n\tiiwu_io.c) to handle IO in the shell.\n\t\n\t* src/iiwusynth.c (main): options to start TCP server.\n\n\t* src/iiwu_cmd.c (new_iiwu_server): New structure and functions\n\t(new_iiwu_shell): New structure and functions to improve command\n\tinterface.\n\t(new_iiwu_cmd_handler): New structure and functions to improve command\n\tinterface.\n\n\t* src/iiwu_sys.c (new_iiwu_server_socket): New structure and\n\tfunctions\n\t(new_iiwu_thread): New structure and\n\tfunctions\n\n2002-12-14  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_chan.c (iiwu_channel_cc): Handling NRPN messages (NRPN\n\tsystem).\n\n\t* src/iiwu_voice.c (iiwu_voice_update_param): Does more extensive\n\trange checking because the NPRN system may produce out-of-range\n\tvalues (NRPN system).\n\t(iiwu_voice_set_param): New function to change\n\tgenerator values (NRPN system).\n\n\t* src/iiwusynth_priv.h (iiwu_clip): New macro\n\n\t* src/iiwu_synth.c (iiwu_synth_set_gen): New function to change\n\tgenerator values (NRPN system).\n\n\t* src/iiwu_gen.c (iiwu_gen_map_nrpn): New function to map the NRPN\n\tdata input to the parameter range (NRPN system).\n\n\t* src/iiwu_midi.c (iiwu_midi_file_read_event): Fixed metadata\n\tbuffer bug (alloc size 1 too small).\n\n2002-12-10  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_dsound.c (iiwu_win32_destroy_window): Filled in the\n\tempty lines...\n\n\t* src/iiwusynth.h: Changes in the definition for iiwu_synth_sfload\n\tand iiwu_synth_sfunload, New functions: iiwu_synth_sfreload,\n\tiiwu_synth_get_sfont_by_id, and iiwu_list_insert_at. New 'id'\n\tfield in iiwu_font_t.\n\n2002-12-08  Markus Nentwig  <nentwig@users.sourceforge.net>\n\n\t* src/Makefile.am: added iiwu_hash.c and iiwu_strtok.c to libiiwusynth_la_SOURCES\n\t* src/iiwu_settings.c (iiwu_settings_init): Removed\n\tmulti_channel from the settings (replaced with audio_channels > 1)\n\t* src/iiwu_settings.c (iiwu_settings_init): added audio_groups\n\tsetting. This is the number of individual channels generated from\n\tthe synth, and always equal to audio_channels, as long as the\n\tLADSPA Fx unit is disabled. Otherwise it can be used (for\n\texample) to separate even and odd MIDI channels, apply different Fx\n\tand mix together to one stereo output.  \n\tsrc/iiwu_ladspa.c: Extended Fx unit to multigroup input, fx sends\n\tand multiple audio output channels\n\t\n2002-12-04  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_midi.c (iiwu_midi_file_read_event): the metadata buffer\n\tis now dynamically allocated. What! Dynamic memory management\n\talready existed in the sixties!\n\n\t* src/iiwu_cmd.c (iiwu_handle_reset): New shell command. Sends\n\tsystem reset.\n\n\t* src/iiwu_cmd.c (iiwu_expand_path): New function to handle\n\tfilenames starting with '~'.\n\n\t* src/iiwu_cmd.c: Added commands for working with tunings. Added\n\t'source' command.\n\n\t* src/iiwu_chan.h (struct _iiwu_channel_t): added tuning\n\n\t* src/iiwusynth.h: new tuning functions\n\n\t* src/iiwu_synth.c (iiwu_synth_reset_tuning): new tuning functions\n\n\t* src/iiwu_voice.c: Added tuning\n\n2002-12-03  Peter Hanappe  <peter@hanappe.com>\n\n\t* doc/iiwusynth.1: new man page\n\n\t* src/iiwu_midi.c (iiwu_player_load): the player now handles a\n\tplaylist.\n\n\t* src/iiwusynth.h: 'iiwu_player_add' replaces 'iiwu_player_load'\n\n\t* src/iiwusynth.c (main): iiwusynth can now play midifiles.\n\n2002-12-02  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_sys.c (new_iiwu_timer): New argument 'auto_destroy' to\n\tspecify whether the timer should delete it's structure when the\n\ttimer is finished.\n\n\t* src/iiwu_synth.c (iiwu_synth_sfunload): If the soundfont can not\n\tbe unloaded immediately, a timer thread is spinned of to unload it\n\tlater. On MacOS 9, the unload is tried at a subsequent 'load' or\n\t'unload' request.\n\n\t* src/iiwusynth.h (struct _iiwu_sample_t): Added 'refcount' field\n\tto test when a soundfont can be unloaded.\n\n\t* src/iiwu_synth.c (iiwu_synth_nwrite_float): New function\n\tallowing multi-channel audio output.\n\t(iiwu_synth_init): Fixed 'amount' for pan. Now set to 500.\n\n\t* src/iiwu_cmd.c (iiwu_synth_cmdshell): Added little prompt.\n\n\t* src/iiwusynth.c (print_welcome): iiwusynth prints out a welcome\n\tmessage as an well-behaved, interactive application should.\n\n\t* src/iiwu_synth.c (iiwu_synth_all_sounds_off): New function to\n\timplement the 'All Sound Off' MIDI messages (CC 120).\n\t(iiwu_synth_system_reset): This function now also resets the\n\tdefault controller values on the MIDI channels, and clears the\n\treverb and chorus delay lines.\n\t(iiwu_synth_count_midi_channels): New function to retrieve the\n\tnumber of available midi channels.\n\t(iiwu_synth_count_audio_channels): New function to retrieve the\n\tnumber of available midi channels.\n\t(iiwu_synth_count_effects_channels): New function to retrieve the\n\tnumber of available effects channels.\n\t(iiwu_synth_get_cpu_load): New function to retrieve an estimation\n\tof the CPU load.\n\n\t* src/iiwusynth.h: Added fields to handle multi-channel audio and\n\ta variable number of midi-channels. The 'flags' has been\n\texpanded/replaced with several variables.\n\n\t* src/iiwu_chan.c (iiwu_channel_cc): Implemented the 'All Control\n\tOff' MIDI message (CC 121).\n\n\t* src/iiwu_chorus.c (iiwu_chorus_update): iiwu_chorus_update\n\t(called after the iiwu_chorus_set_xxx function) no longer returns\n\tan error of out-of-range values. It clips the value the the\n\t[min-max] range.\n\n2002-11-22  Markus Nentwig  <nentwig@users.sourceforge.net>\n\t* src/iiwu_voice.c (iiwu_voice_write): Fixed compilation problem \n\twithout --enable-SSE (Pentium II and Mac)\n\n2002-11-17  Markus Nentwig  <nentwig@users.sourceforge.net>\n\t\n\t* src/iiwu_voice.c (iiwu_voice_write): Fixed nonlooped samples-bug.\n\t* TODO (TODO): Updated\n\t* src/iiwu_cmd.c (iiwu_handle_reverbsetlevel): Changed command\n\tline command 'rev_setwet' to 'rev_setlevel'. Replaced the word 'wet' by\n\t'level' in most places.\n\t Added a command line option --dump, which provides\n\t 'machine-readable' output from stdout to hook up a user interface.\n\t* src/iiwusynth.h: Moved the default values for gain, chorus and\n\treverb here. Might be useful as an example...\n\t* src/iiwu_voice.c (iiwu_voice_calculate_runtime_synthesis_parameters): \n\tAdded 'scale tuning' modulator, centered around C3.\n\t* src/iiwusynth.h: Added API functions to read the reverb state\n\tMoved iiwu_synth_system_reset to the API\n\n2002-11-08  Markus Nentwig  <nentwig@users.sourceforge.net>\n\t\n\t* src/iiwu_voice.c (iiwu_voice_write): Fixed Volume envelope delay bug\n\t* src/iiwu_voice.c (FILTER_TRANSITION_SAMPLES): Doubled filter\n\tfading time\n\t* src/iiwu_mod.c (iiwu_mod_get_value): Changed convex unipolar\n\tnegative definition\n\t* src/iiwu_voice.c (iiwu_voice_off): Cleaned up a bit, uses now\n\tcalls to iiwu_voice_off, when a voice is finished.\n\t* src/iiwu_midi.c (iiwu_midi_parser_parse): Reimplemented\n\tNew parser should be able to cope with realtime, system common\n\tand resynchronize.\n\n2002-10-31  Markus Nentwig  <nentwig@users.sourceforge.net>\n\n\t* src/iiwu_alsa.c (iiwu_alsa_midi_run): Increased MIDI timeout\n\tfrom 1 to 100 ms\n\t* src/iiwu_dsp_core.c: Merged identical filter coefficients b0 and\n\tb2 into b02\n\tImplemented smooth filter transitions\n\t* src/iiwu_sys.c (iiwu_check_fpe): Added verbose FPE reporting and\n\tsystematic FPE checks.\t\n\t* src/iiwu_rev.c: Added a constant DC offset to avoid slowdown\n\tcaused by denormal numbers\n\t* src/iiwu_synth.c (delete_iiwu_synth): Fixed segv during shutdown \n\t* src/iiwu_dsp_core.c: Fixed buffer bug (aligned-unaligned)\n\t* src/iiwu_synth.c (iiwu_synth_damp_voices): Commented out unused code\n\t* src/iiwu_dsp_core.c: Optimized, added SSE code, which is\n\tthis time actually faster than the default code. Well. Part of it.\n\t* src/iiwu_voice.c: Minor clean-up\n\t* configure.in: Added switch --enable-longlong\n\t* configure.in: Added switch --enable-SSE\n\t* src/iiwu_phase.h: Added 64 bit operations, documented\n\t* src/iiwu_sse.h: Check to avoid #including the file more than once\n\n2002-10-29  Markus Nentwig <nentwig@users.sourceforge.net>\n\n\t* src/iiwu_voice.c: Added experimental SSE support for Pentium\n\tIII. Comment out #define SSE from iiwu_voice.c to get back to the standard version.\n\n2002-10-26  Markus Nentwig  <nentwig@users.sourceforge.net>\n\n\t* src/iiwu_seq.c: Fixed a couple of warnings\n\t* src/iiwu_voice.c (new_iiwu_voice): Removed iiwu_voice_init.\n\t* src/iiwu_dsp_core.c: New 7th order interpolation.\n\n2002-10-24  Markus Nentwig  <nentwig@users.sourceforge.net>\n\n\t* src/iiwu_voice.c(iiwu_voice_determine_amplitude_that_reaches_noise_floor_for_sample): \n\tAdded checking for invalid sample.\n\t* src/iiwu_voice.c (iiwu_voice_write): \n\tMoved the DSP core functions into iiwu_dsp_core.c.\n\tOptimized, cleaned up, documented.\n\tAmplitude scaling short => floating point is now done as the last\n\toperation in the DSP loop (voice->amp does not include the scaling\n\tfactor anymore).\t\n\t* src/iiwu_synth.c (iiwu_synth_one_block): Saved a couple of\n\tmultiplications per sample by moving the master gain into iiwu_voice_write\n\t* src/iiwu_synth.c (iiwu_synth_free_voice_by_kill): Modified the algorithm\n\t* src/iiwu_synth.c (iiwu_synth_alloc_voice): Noteon algorithm will\n\tnow turn off retriggered running voices ('sustain pedal problem')\n\t\n2002-10-18  Markus Nentwig  <nentwig@users.sourceforge.net>\n\n\t* src/iiwu_alsa.c (new_iiwu_alsa_midi_driver): Disabled\n\thigh-priority scheduling for the MIDI thread to get rid of audio dropouts.\n\t* src/iiwu_synth.c (iiwu_synth_free_voice_by_kill): Modified voice\n\tkilling algorithm, so that recently started voices are not killed\n\t* src/iiwu_voice.c (iiwu_voice_run_dsp): Changed some variable\n\tnames. Extensive loop point checking, when loop points are modulated.\n\t* src/iiwusynth.h: Added functions to read the state of the\n\tchorus. \n\t* src/iiwu_chorus.c: Rewrote chorus setup logic (if a parameter is\n\tout-of-range, all other parameter changes are discarded).\n\t* src/iiwu_voice.c: Added caching for loop peak detection: The\n\tamplitude of the loop is only detected once for each\n\tsample. Exception only, if the resulting loop differs from the\n\toriginal loop settings of the sample (in this case, the peak\n\tdetection is still run for each noteon event).\n\t* src/iiwusynth.h (struct _iiwu_sample_t): Added 'amplitude_that_reaches_noise_floor_is_valid'\n\tand 'amplitude_that_reaches_noise_floor'\n\t* src/iiwu_voice.c(iiwu_voice_calculate_runtime_synthesis_parameters):\n\tRenamed 'iiwu_voice_optimize'\n\t\n2002-07-21  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/Makefile.am (libiiwusynth_la_SOURCES): Followed Bob Ham's\n\tsuggestion for the Makefile.am to fix the problems with automake\n\t1.6\n\n1999-11-30  Tim Goetze <tim@quitte.de>\n\t* src/iiwu_synth.c (iiwu_synth_alloc_voice): New algorithm for\n\tvoice allocation, when all voice processes are in use\n\n1999-11-30  Markus Nentwig <nentwig@users.sourceforge.net>\n\t* src/iiwu_synth.c (iiwu_synth_alloc_voice): Applied above patch,\n\t\n2002-07-08  Markus Nentwig <nentwig@users.sourceforge.net>\n\n\t* src/iiwu_synth.c (iiwu_synth_noteoff): Changed noteoff strategy:\n\tNoteoff now turns off all voice processes with the same channel /\n\tkey, regardless of the voice ID (avoids stuck notes).\n\n2002-07-13  Peter Hanappe  <peter@hanappe.com>\n\t* src/Makefile.am (EXTRA_libiiwusynth_la_SOURCES): Applied Takashi\n\tIwai's patch. The configure stuff in iiwusynth-0.2 cannot be\n\trebuilt with the latest automake 1.6.  You cannot use substitution\n\tfor *_SOURCES in Makefile.am. This fixes this problem.\n\n1999-11-30  Markus Nentwig  <nentwig@users.sourceforge.net> \n\n\t* src/iiwusynth.h: Added documentation, removed GEN_CHANGED (it\n\twas unused).\n\n\t* src/iiwu_mod.c (iiwu_dump_modulator): Cleaned up\n\n\t* src/iiwu_cmd.c (iiwu_handle_help): Restructured command line\n\thelp system\n\n2002-06-14  Markus Nentwig  <nentwig@users.sourceforge.net>\n\n\t* src/iiwu_chorus.c (iiwu_chorus_processmix): Turning off chorus now, when parameters are wrong (avoid FPE)\n\t* src/iiwu_voice.c (iiwu_voice_write): Optimized turnoff condition for voice\n\n2002-06-11  Markus Nentwig  <nentwig@users.sourceforge.net>\n\n\t* src/iiwu_voice.c (iiwu_voice_add_mod): Fixed bug that prevented non-default modulators from being added.\n\t(iiwu_voice_config): Added peak detection for the sample loop, and a condition turning off the voice,\n\tif loop peak volume and amplitude envelope combined fall below the noise floor.\n\n2002-06-06  Peter Hanappe  <peter@hanappe.com>\n\n\t* acinclude.m4: Fixed problems with enable/disable jack and\n\tmidishare\n\n2002-06-06  Tim Goetze  <tim@quitte.de>\n\n\t* src/iiwu_synth.c (iiwu_synth_all_notes_off): Added handling of\n\tall-notes-off midi message\n\n2002-06-03  Markus Nentwig <nentwig@users.sourceforge.net>\n\t*  src/iiwu_chorus.c: Fixed bug in initial phase calculation\n\n2002-06-02  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_jack.c: updated for new JACK types.\n\n2002-06-02  Bob Ham  <node@users.sourceforge.net>\n\n\t* acinclude.m4: Changed acinclude.m4 for configure to ignore jack.\n\n2002-06-02  Markus Nentwig <nentwig@users.sourceforge.net>\n\t* autogen.sh: Added libtoolize -f to prevent error message 'libtool: ltconfig version does not match ltmain.sh version ...'\n        * src/iiwusynth.h: Changed iiwu_voice_add_mod_t to iiwu_voice_add_mod\n\t* src/iiwu_synth.c: Added NULL termination to list returned by iiwu_synth_get_voicelist\n\t* src/iiwusynth.h: Added iiwu_synth_set_chorus (API function)\n\t* src/iiwu_synth.c: Added iiwu_synth_set_(reverb|chorus)_on (API functions)\n\t* src/iiwu_cmd.c: Added control commands for chorus (see help)\n\t\n2002-05-26  Tim Goetze <tim@quitte.de>\n        * src/iiwu_voice.c (iiwu_voice_noteoff): Fixed conversion between\n\tvolenv-values from attack segment to later envelope segments\n\n2002-05-22  Markus Nentwig <nentwig@users.sourceforge.net>\n\n\t* src/iiwu_voice.c (iiwu_voice_query_ID): Added, API function\n\n\t(iiwu_voice_query_playing): Added, API function \n\n\t(iiwu_voice_write): Fixed problem with filter caused 05-18 \n\n\t* src/iiwusynth.h: Moved iiwu_voice_update_param into the API \n\n\n2002-05-19  Markus Nentwig <nentwig@users.sourceforge.net>\n\n\t* src/iiwusynth.h (iiwu_synth_get_voicelist): Added. \n\n\t* src/iiwu_voice.c (iiwu_voice_noteoff): Added a conversion for linear to cB amplitude, when a note is turned off \n\tduring the attack phase of the volume envelope\n\n\t* src/iiwu_gen.h: Moved the generator definition to API. Changed the fields to 'double'.\n\n\t* src/iiwu_mod.c: Moved the modulator definitions to API. Changed the data type of amount to 'double'.\n\n\t* src/iiwu_voice.c (iiwu_voice_write): The condition, that quits a voice, when the amplitude\n\tfalls below a threshold now uses only the volume envelope instead of the voice amplitude.\n\tPreviously, turning a volume pedal briefly to 0 would quit all voices playing.\n\n\t* src/iiwu_rev.c (iiwu_revmodel_processreplace): Removed 'dry' path from reverb unit \n\tMotivation: This saves a couple of multiplications, the dry signal goes through the ordinary output\n\tanyway.\n\n\t* src/iiwusynth.h (iiwu_synth_kill_by_exclusive_class): added to API\n\t* src/iiwu_synth.c (iiwu_synth_kill_by_exclusive_class): Extended the exclusive class function to\n\twork with stereo samples\n\t(iiwu_synth_set_reverb): Renamed iwu_synth_set_reverb to iiwu_synth_set_reverb_preset\n\tiiwu_synth_set_reverb is now an API function, that allows to set all reverb parameters.\n\n2002-05-18  Markus Nentwig  <nentwig@users.sourceforge.net>\n\n\t* src/iiwu_chorus.c: Implemented variable delay line with bandlimited interpolation. Documentation, error handling. \n\tRemoved unneeded and broken features\n\t* src/iiwusynth_priv.h: Moved typedef struct iiwu_mod_t iiwu_mod_t into iiwusynth.h\n\t* src/iiwusynth.h: Moved iiwu_voice_add_mod from iiwu_voice.h into iiwusynth.h (now API function).\n\t* src/iiwu_voice.c (iiwu_voice_update_param): Inserted chorus send into DSP loop\n\t(iiwu_voice_write): Added flag 'voice->update_filter'. Now Q can be modulated.\n\n2002-05-12  Markus Nentwig  <nentwig@users.sourceforge.net>\n\n\t* src/iiwu_synth.c (iiwu_synth_pitch_wheel_sens): added\n\t* src/iiwu_chan.c (iiwu_channel_pitch_wheel_sens): added \n\t* src/iiwu_cmd.c (iiwu_handle_reverbsetwidth): changed 'wet' to\n\t* 'width'\n\n2002-05-11  Markus Nentwig  <nentwig@users.sourceforge.net>\n\n\t* src/iiwu_conv.c (iiwu_tc2sec): \n\tAdded more conversion functions with range check for different ranges:\n\t(iiwu_tc2sec_attack): \n\t(iiwu_tc2sec_hold): \n\t(iiwu_tc2sec_release): \n\t\n\t* src/iiwu_voice.c (iiwu_voice_add_mod):\n\timplemented modulator src 0 (constant mod offset) \n\t* src/iiwu_voice.c (iiwu_voice_update_param):\n\tsample-and envelope related voice parameters \n\tare now handled together with other voice parameters.\n\tImplemented generators:\t \n\tGEN_KEYTOVOLENVDECAY\n\tGEN_KEYTOVOLENVHOLD\n\tGEN_KEYTOMODENVDECAY\n\tGEN_KEYTOMODENVHOLD\n\t\n2002-05-10  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_synth.c (iiwu_synth_start_voice): added\n\tiiwu_synth_start_voice() to handle exclusive classes.\n\n2002-05-09  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_conv.h: removed velocity to cB conversion. No longer\n\tused.\n\n\t* src/iiwu_synth.c (iiwu_synth_write_float): removed limiter\n\n\t* src/iiwu_synth.h (IIWU_NUM_CHANNELS): set the number of channels\n\tto 64.\n\n\t* src/iiwu_synth.c (iiwu_synth_get_internal_bufsize): added\n\n\t* src/iiwu_ladspa.h: lower-cased ladspa files \n\n\t* src/iiwusynth.h: prefixed log levels with IIWU_... Updated all\n\treferences.\n\n\t* src/iiwu_cmd.c (iiwu_handle_reverb): renamed 'rev_enable' to\n\t'reverb' in correspondence with the long command line arguments\n\n\t* src/iiwusynth.c (main): checking if files on command line are valid\n\n\t* src/iiwuplay.c (main): checking if files on command line are valid\n\n\t* src/iiwusynth.h: New log level for verbose messages: IIWU_INFO\n\n2002-04-30  Markus Nentwig  <nentwig@users.sourceforge.net>\n\n\t* src: Added iiwu_LADSPA.c, iiwu_LADSPA.h (support for LADSPA effect plugins).\n\t\n\t* src/iiwusynth.c (main): Changed default gain to 0.2.\n\n\t* src/iiwu_voice.c: Restructured the voice initialization as follows:\n\t(iiwu_voice_init): sample position, IIR filter history, envelopes etc. are reset.\n\t(iiwu_voice_optimize): The generators (nominal value) have been set by the sound font.\n\tNow each modulator is calculated once to obtain the 'final' initial value for each\n\tgenerator, which consists of nominal value and modulator-contributed part.\n\t(iiwu_voice_update_param): Calculates all voice parameters, which depend on one\n\tparticular generator. This is called once for each voice parameter during \n\tvoice_optimize and further each time, when a modulator changes a generator.\n\t(iiwu_voice_update_param): Added a voice parameter filter_gain to avoid\n\trecalculating the filter gain each time the center frequency changes (it depends\n\tonly on Q)\n\t(iiwu_voice_write): Voice is now turned off, when the amplitude falls below -100 dB,\n\teven during the sustain phase (happens, when holding a piano key for a very long time)\n\n\t* src/iiwu_voice.c (iiwu_voice_noteoff): Moved voice->chan = NO_CHANNEL into iiwu_voice_off.\n\tPreviously a released note was not modulated anymore, for example pitch bend stopped working as soon\n\tas the key was released.\n\n\t* src/iiwu_voice.h: Changed _ON macro to figure out the state of a key from the position in\n\tthe envelope, instead of using a cleared channel number as indicator.\n\n\t* src/iiwu_synth.c: Implemented all default modulators\n\tAdded LADSPA support.\n\tAdded digital clipping.\n\tMoved master gain factor ahead of LADSPA Fx.\n\n\t* src/iiwu_mod.c: 'Hardcoded' GM default modulator vel => filter.\n\tReplaced 128 with 127 in (127-x)\n\n\t* src/iiwu_midi.c: Fixed sysex for realtime MIDI. Fixed pitch bend bug.\n\n\t* src/iiwu_gen.c (iiwu_gen_set_default_values): Using float instead of int for default values.\n\tAdded references to specifications (doc). Changed 'init array' function name to 'set_default' .\n\n\t* src/iiwu_defsfont.c (iiwu_preset_zone_import_sfont): Import of modulators\n\t(iiwu_inst_zone_import_sfont): Import of modulators\n\t(iiwu_defpreset_noteon): Added modulators, fixed generator problem (local zone overwrites global zone, previously it added)\n\n\t* src/iiwu_conv.c: Using now oncave / convex equation from SF specs.\n\tRemoved ct2hz functions and tables.\n\t(iiwu_ct2hz): Limit checking\n\t(iiwu_cb2amp): Removed 'magic number'\n\t(iiwu_tc2sec): Avoided == for iiwu_real_t\n\t\n\t* src/iiwu_cmd.c: Increased number of tokens. Using WORKLINELENGTH constant.\n\tChanged max. gain to 5.\n\tAdded LADSPA commands.\n\tRenamed misleading rev_bypass command to rev_enable\n\n\t* src/iiwu_chan.c: Centered pitch wheel. Added 'expression' modulator (CC 11).\n\t* configure.in: Added LADSPA support\n\n2002-04-03  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_voice.c (iiwu_voice_run_dsp): Integrated Markus\n\tNentwig's new filter design\n\n\n2002-03-12  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwusynth.h: the preset iteration in a soundfont now takes a\n\tpointer to a preset structure\n\n\t* src/iiwu_sys.c (iiwu_profile_data): added support for profiling\n\n\t* src/iiwu_voice.c (iiwu_voice_write): turns off voice if\n\tamplitude < -100 dB in release phase. Set filter gain back to old\n\tvalue (0.25f * ...)\n\n\t* src/iiwuplay.c (main): added gain, interactive, and reverb options\n\n\t* src/iiwusynth.c (main): added gain and reverb options\n\n\t* src/iiwu_synth.c (iiwu_synth_write_s16): added brickwall limiter for s16 samples\n\n2002-01-29  Stephane Letz  <letz@grame.fr>\n\n\t* src/iiwu_midishare.c : Compilation on MacOSX, use a task for typeNote management\n\t* src/iiwu_sys.c : Compilation on MacOSX\n\t* src/iiwu_sys.h : Compilation on MacOSX\n\t* src/iiwu_sfont.c : Use the flag MACINTOSH instead of MACOS\n\t* config_macos.h : Cleanup\n\t* config_macosx.h : New file, compilation on MacOSX\n\n\n2002-01-21  Stephane Letz  <letz@grame.fr>\n\n\t* src/iiwu_midi.c (delete_iiwu_midi_handler): Desallocation of heap allocated strings\n\t* src/iiwusynth_priv.h : Definition of strdup if not available (Macintosh)\n\n\n2002-01-16  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_alsa.c (new_iiwu_alsa_seq_driver): Applied and adjusted\n\tBob Ham's patch: support for configurable ALSA sequencer client\n\tname.\n\n\t* src/iiwu_chan.c (iiwu_channel_cc): Applied Bob Ham's patch:\n\tadded bank select midi message.\n\n\t\n2001-12-31  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_synth.c (iiwu_synth_damp_voices): Sustain messages are\n\tnow handled. Updated iiwu_channel and iiwu_voice.\n\t(delete_iiwu_synth): SoundFonts are deleted.\n\n2001-12-21  Stephane Letz  <letz@grame.fr>\n\n\t* src/iiwu_midishare.c (new_iiwu_midishare_midi_driver, \n\t\tdelete_iiwu_midishare_midi_driver):\n\t Updated to be compiled either in driver or application mode\n\t with the flag MIDISHARE_DRIVER.\n\n2001-12-20  Stephane Letz  <letz@grame.fr>\n\n\t* src/iiwu_portaudio.c (iiwu_portaudio_run , new_iiwu_portaudio_driver):\n\t Adaptation for new audio drivers\n\n\t* src/iiwu_synth.c (audio driver definition): \n\tAdaptation for PortAudio driver\n\n\t* src/iiwu_sys.c (header): Adaptation for compilation on MacOS9\n\t\t\n\t* src/iiwu_sys.h (header): Adaptation for compilation on MacOS9\n\n2001-12-16  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwuplay.c (main): The .iiwusynth file is loaded *before*\n\tthe soundfonts on the command lines are loaded\n\n\t* src/iiwusynth.c (main): idem.\n\n2001-12-16  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_midi.c (iiwu_player_callback): Fixed error in midi\n\ttiming after a tempo change\n\n\t* src/iiwu_jack.c (new_iiwu_jack_audio_driver): Added first\n\tversion of JACK driver\n\n2001-12-14  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_synth.c (iiwu_synth_noteoff): noteon/notoff events can\n\tprint a clear message, useful for debugging.\n\n\t* src/iiwu_sys.c (struct _iiwu_timer_t ): timer moved from\n\tiiwu_midi.c to iiwu_sys.c\n\n\t* src/iiwusynth.h: New organization of settings; using bit flags;\n\tadded verbose option\n\n\t* src/iiwusynth.c (main): Added the verbose option\n\n\t* src/iiwuplay.c (main): Added the verbose option\n\n2001-10-05  Stephane Letz  <letz@grame.fr>\n\n\t* src/iiwu_portaudio.c (new_iiwu_portaudio_driver): imported new\n\tdriver for the PortAudio library.\n\n2001-10-04  Stephane Letz  <letz@grame.fr>\n\n\t* src/iiwu_synth.c (new_iiwu_synth):  Fixed bug in synth initialisation\n\n2001-10-02  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_cmd.c (iiwu_get_userconf): returns default user\n\tconfiguration\n\t(iiwu_get_sysconf): returns default system configuration\n\t(iiwu_synth_cmdline): Fixed bug with argument offset. Empty lines\n\tare skipped correctly.\n\t\n\t* src/iiwusynth.c (main): loads the user or system config\n\n\t* src/iiwuplay.c (main): loads the user or system config\n\n\t* src/iiwu_synth.c (iiwu_sp_write): Using new envelope model for\n\tmodulation envelope\n\n2001-09-29  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_synth.c (iiwu_sp_write): redesigned the envelopes.\n\n2001-09-20  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_synth.c (iiwu_sp_write): redesigned the dsp loop. it's\n\tfaster and it sounds better (!)\n\n2001-09-19  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_sfont.c (iiwu_sample_import_sfont): better checking for\n\tminimum sample size, loop start and loop end offsets.\n\n2001-09-17  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_synth.c (iiwu_sp_write): improved calculation of filter\n\tcoefficients\n\t(new_iiwu_synth): using settings structure\n\n2001-09-09  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_synth.h (iiwu_phase_decr): fixed bug \n\n\t* src/iiwu_synth.c (iiwu_synth_noteoff): noteoff now turns off the\n\toldest note only (instead of all notes with the given channel and\n\tkey)\n\n2001-07-10  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_midi.h: removed midi driver join function. updated all\n\tstructures, implementations and callers.\n\n2001-07-04  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwuplay.c (print_help): corrected errors in the help and\n\tusage display.\n\n2001-06-29  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_synth.c (iiwu_synth_one_block): new function. fills the\n\tbuffer with fresh samples.\n\t(iiwu_synth_write_lr): now calls iiwu_synth_one_block. the\n\tsynthesizer uses fixed synthesis buffer size, independent of the\n\trequested buffer length passed to iiwu_synth_write_lr.\n\t(iiwu_revmodel_processreplace): new uses fixed IIWU_BUFSIZE value\n\tfor buffer length.\n\t(iiwu_revmodel_processmix): uses fixed IIWU_BUFSIZE value\n\n2001-06-22  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwusynth.c (iiwu_handle_fonts): new shell command to list\n\tthe loaded fonts.\n\t(iiwu_handle_mstat): new shell command to list the statistics of\n\tthe midi driver.\n\n2001-06-19  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwusynth.c (main): Several command line options are\n\tavailable to select the midi and audio driver and device. Using\n\tthe getopt function on posix machines.\n\n2001-06-16  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_synth.h: new iiwu_revmodel_presets_t structure to store\n\treverb presets (concert hall, room, ...)\n\n\t* src/iiwu_synth.c (iiwu_synth_write_lr): now using 1 reverb for\n\tall synthesis processes. the synthesis processes now receive a\n\tleft and right buffer, a reverb buffer, a chorus buffer, and a\n\tmonobuffer for their temporarry storage. reverb now always on.\n\t\n\t(new_iiwu_sp): no longer allocating a reverb module nor a\n\tmonobuf. only one reverb model and monobuffer allocated by the\n\tsynth object (read: much less memory usage).\n\n\t* src/iiwu_midi.c (iiwu_player_callback): fixed timing\n\terrors. midi should play correctly now.\n\n2001-06-09  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_synth.c (iiwu_sp_write_lr): now using a 64-bits\n\tfixed-point number to calculate the phase of the\n\twavetable. because of rounding errors, the float value I used\n\tbefore gave terrible tuning problems. I updated all the\n\tinterpolation macros.\n\n\t* src/iiwusynth_priv.h: included the iiwu_phase_t data type. This\n\ttype represents a 64-bits fixed-point number. It's used to hold\n\tthe phase in the wavetable.\n\n2001-06-08  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_midi.c (new_iiwu_midi_handler): Better support for\n\truntime selection of the MIDI driver (using the\n\tiiwu_mdriver_definition_t structure)\n\n\t* src/iiwu_auport.c (new_iiwu_auport): Better support for runtime\n\tselection of the audio driver (using the iiwu_adriver_definition_t\n\tstructure)\n\n2001-06-07  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_synth.c (iiwu_sp_write_lr): rewrote the dsp function to\n\taccept a separate left and right channel buffer.\n\t(iiwu_sp_write_lr): using cubic hermite interpolation by default.\n\t(iiwu_synth_write_lr): added a dsp function to accept a separate\n\tleft and right channel buffer.\n\n2001-05-26  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_midi.c (iiwu_midi_parser_parse): Fixed a bug in the\n\tmidi parser (running status should not be split in a status and\n\tchannel part for system messages).\n\t(iiwu_midi_send_event): pitch bend events are now handled\n\n2001-05-25  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_midi.c (iiwu_midi_file_getc): Fixed bug when pushed\n\tback byte equals zero (mf->c >= 0)\n\n\t* src/iiwu_midi.c (iiwu_midi_file_getc): Fixed bug when pushed\n\tback byte equals zero (mf->c >= 0)\n\n2001-05-24  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwusynth.c: added the stupidly simple interpreter\n\n\t* src/iiwu_synth.c: removed all param structures. \n\n\t* src/iiwu_synth.c (iiwu_channel_get_banknum): new function\n\n2001-05-23  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_synth.c (iiwu_sp_write): Fixed divide by zero in filter\n\n\t* src/smurf.c (gerr): applied Josh's patch: using va_list now (as\n\tit should).\n\n2001-05-22  Peter Hanappe  <peter@hanappe.com>\n\n\t* src/iiwu_midi.c: the midi handler is now divided in a dummy\n\tiiwu_midi_handler_t and a \"low level\" driver. This allows for\n\tmultiple midi drivers to be compiled in.\n\n\t* src/iiwusynth.h: renamed iiwu_midi_driver_t to iiwu_midi_handler_t\n\n\t* src/iiwu_auport.c (new_iiwu_auport): new \"driver\" argument to\n\tselect between alsa, oss, midishare, directx, ...\n\n\t* configure.in: preparing for the first pre-release, version 0.0.1\n"
        },
        {
          "name": "FluidSynthConfig.cmake.in",
          "type": "blob",
          "size": 4.892578125,
          "content": "# Audio / MIDI driver support\nset(FLUIDSYNTH_SUPPORT_ALSA @ALSA_SUPPORT@)\nset(FLUIDSYNTH_SUPPORT_COREAUDIO @COREAUDIO_SUPPORT@)\nset(FLUIDSYNTH_SUPPORT_COREMIDI @COREMIDI_SUPPORT@)\nset(FLUIDSYNTH_SUPPORT_DART @DART_SUPPORT@)\nset(FLUIDSYNTH_SUPPORT_DSOUND @DSOUND_SUPPORT@)\nset(FLUIDSYNTH_SUPPORT_JACK @JACK_SUPPORT@)\nset(FLUIDSYNTH_SUPPORT_KAI @KAI_SUPPORT@)\nset(FLUIDSYNTH_SUPPORT_MIDISHARE @MIDISHARE_SUPPORT@)\nset(FLUIDSYNTH_SUPPORT_OBOE @OBOE_SUPPORT@)\nset(FLUIDSYNTH_SUPPORT_OPENSLES @OPENSLES_SUPPORT@)\nset(FLUIDSYNTH_SUPPORT_OSS @OSS_SUPPORT@)\nset(FLUIDSYNTH_SUPPORT_PIPEWIRE @PIPEWIRE_SUPPORT@)\nset(FLUIDSYNTH_SUPPORT_PORTAUDIO @PORTAUDIO_SUPPORT@)\nset(FLUIDSYNTH_SUPPORT_PULSE @PULSE_SUPPORT@)\nset(FLUIDSYNTH_SUPPORT_SDL2 @SDL2_SUPPORT@)\nset(FLUIDSYNTH_SUPPORT_WASAPI @WASAPI_SUPPORT@)\nset(FLUIDSYNTH_SUPPORT_WAVEOUT @WAVEOUT_SUPPORT@)\nset(FLUIDSYNTH_SUPPORT_WINMIDI @WINMIDI_SUPPORT@)\n\n# Files support\nset(FLUIDSYNTH_SUPPORT_DLS @LIBINSTPATCH_SUPPORT@)\nset(FLUIDSYNTH_SUPPORT_LIBINSTPATCH @LIBINSTPATCH_SUPPORT@)\nset(FLUIDSYNTH_SUPPORT_LIBSNDFILE @LIBSNDFILE_SUPPORT@)\nset(FLUIDSYNTH_SUPPORT_LIBSNDFILE_LEGACY @SndFileLegacy_FOUND@)\nset(FLUIDSYNTH_SUPPORT_SF3 @LIBSNDFILE_HASVORBIS@)\n\n# Miscrellaneous support\nset(FLUIDSYNTH_SUPPORT_DBUS @DBUS_SUPPORT@)\nset(FLUIDSYNTH_SUPPORT_GETOPT @HAVE_GETOPT_H@)\nset(FLUIDSYNTH_SUPPORT_IPV6 @IPV6_SUPPORT@)\nset(FLUIDSYNTH_SUPPORT_LADSPA @LADSPA_SUPPORT@)\nset(FLUIDSYNTH_SUPPORT_NETWORK @NETWORK_SUPPORT@)\nset(FLUIDSYNTH_SUPPORT_READLINE @READLINE_SUPPORT@)\nset(FLUIDSYNTH_SUPPORT_SYSTEMD @SYSTEMD_SUPPORT@)\n\n# Extra info\nset(FLUIDSYNTH_IS_SHARED @BUILD_SHARED_LIBS@)\nset(FLUIDSYNTH_SUPPORT_COVERAGE @ENABLE_COVERAGE@)\nset(FLUIDSYNTH_SUPPORT_FLOAT @WITH_FLOAT@)\nset(FLUIDSYNTH_SUPPORT_FPECHECK @ENABLE_FPECHECK@)\nset(FLUIDSYNTH_SUPPORT_FPETRAP @ENABLE_TRAPONFPE@)\nset(FLUIDSYNTH_SUPPORT_OPENMP @HAVE_OPENMP@)\nset(FLUIDSYNTH_SUPPORT_PROFILING @WITH_PROFILING@)\nset(FLUIDSYNTH_SUPPORT_THREADS @ENABLE_MIXER_THREADS@)\nset(FLUIDSYNTH_SUPPORT_UBSAN @ENABLE_UBSAN@)\n\n# Only load dependencies on static builds\nif(NOT FLUIDSYNTH_IS_SHARED)\n  # Allows CMake to use the additional modules\n  list(APPEND CMAKE_MODULE_PATH \"${CMAKE_CURRENT_LIST_DIR}\")\n\n  # Make searching for packages easier on VCPKG\n  if(CMAKE_VERSION VERSION_GREATER_EQUAL 3.15 AND VCPKG_TOOLCHAIN)\n    set(CMAKE_FIND_PACKAGE_PREFER_CONFIG ON)\n  endif()\n\n  # Load the pkg-config helpers\n  include(PkgConfigHelpers)\n\n  # Check the system has a separated math library\n  find_library(HAS_LIBM NAMES \"m\" NO_CACHE)\n  if(HAS_LIBM)\n    set(MATH_LIBRARY \"m\")\n  endif(HAS_LIBM)\n\n  # Load find_dependency macro\n  include(CMakeFindDependencyMacro)\n\n  # Mandatory dependencies\n  if(NOT TARGET Threads::Threads)\n    find_dependency(Threads)\n  endif()\n\n  if(NOT TARGET GLib2::glib-2 OR NOT TARGET GLib2::gthread-2)\n    find_dependency(GLib2 @GLIB2_MINUMUM_VERSION@)\n  endif()\n\n  # Optional dependencies\n  if(FLUIDSYNTH_SUPPORT_ALSA AND NOT TARGET ALSA::ALSA)\n    find_dependency(ALSA @ALSA_MINIMUM_VERSION@)\n  endif()\n\n  if(FLUIDSYNTH_SUPPORT_DBUS AND NOT TARGET dbus-1)\n    find_dependency(DBus1 @DBUS_MINIMUM_VERSION@)\n  endif()\n\n  if(FLUIDSYNTH_SUPPORT_JACK AND NOT TARGET Jack::Jack)\n    find_dependency(Jack)\n  endif()\n\n  if(FLUIDSYNTH_SUPPORT_LADSPA AND NOT TARGET GLib2::gmodule-2)\n    message(WARN \"LADSPA support was built in but gmodule could not be found.\")\n  endif()\n\n  if(FLUIDSYNTH_SUPPORT_LIBINSTPATCH AND NOT TARGET InstPatch::libinstpatch)\n    find_dependency(InstPatch @LIBINSTPATCH_MINIMUM_VERSION@)\n  endif()\n\n  if(FLUIDSYNTH_SUPPORT_LIBSNDFILE_LEGACY AND NOT TARGET SndFile::sndfile)\n    find_dependency(SndFileLegacy @LIBSNDFILE_MINIMUM_VERSION@)\n  elseif(FLUIDSYNTH_SUPPORT_LIBSNDFILE AND NOT TARGET SndFile::sndfile)\n    find_dependency(SndFile @LIBSNDFILE_MINIMUM_VERSION@)\n  endif()\n\n  if(FLUIDSYNTH_SUPPORT_MIDISHARE AND NOT TARGET MidiShare::MidiShare)\n    find_dependency(MidiShare)\n  endif()\n\n  if(FLUIDSYNTH_SUPPORT_OBOE AND NOT TARGET oboe::oboe)\n    find_dependency(oboe)\n  endif()\n\n  if(FLUIDSYNTH_SUPPORT_OPENMP AND NOT TARGET OpenMP::OpenMP_C)\n    find_dependency(OpenMP COMPONENTS C)\n  endif()\n\n  if(FLUIDSYNTH_SUPPORT_OPENSLES AND NOT TARGET OpenSLES::OpenSLES)\n    find_dependency(OpenSLES)\n  endif()\n\n  if(FLUIDSYNTH_SUPPORT_PIPEWIRE AND NOT TARGET PipeWire::PipeWire)\n    find_dependency(PipeWire @PIPEWIRE_MINIMUM_VERSION@)\n  endif()\n\n  if(FLUIDSYNTH_SUPPORT_PORTAUDIO AND NOT TARGET PortAudio::PortAudio)\n    find_dependency(PortAudio @PORTAUDIO_MINIMUM_VERSION@)\n  endif()\n\n  if(FLUIDSYNTH_SUPPORT_READLINE AND NOT TARGET Readline::Readline)\n    find_dependency(Readline)\n  endif()\n\n  if(FLUIDSYNTH_SUPPORT_SDL2 AND NOT TARGET SDL2::SDL2)\n    find_dependency(SDL2)\n  endif()\n\n  if(FLUIDSYNTH_SUPPORT_SYSTEMD AND NOT Systemd::libsystemd)\n    find_dependency(Systemd)\n  endif()\n\n  # Restore the module path\n  list(REMOVE_ITEM CMAKE_MODULE_PATH \"${CMAKE_CURRENT_LIST_DIR}\")\nendif()\n\n# finally, include the targets file\ninclude(\"${CMAKE_CURRENT_LIST_DIR}/FluidSynthTargets.cmake\")\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 25.8408203125,
          "content": "                  GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n(This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.)\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\n                  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n                            NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    {description}\n    Copyright (C) {year} {fullname}\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301\n    USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random\n  Hacker.\n\n  {signature of Ty Coon}, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n"
        },
        {
          "name": "README.cmake.md",
          "type": "blob",
          "size": 12.900390625,
          "content": "## For users - how to compile FluidSynth\n\nThe latest information on how to compile FluidSynth using the cmake build system can be found in our wiki:\n\nhttps://github.com/FluidSynth/fluidsynth/wiki/BuildingWithCMake\n\n## For developers - how to add a new feature to the CMake build system\n\nLet's explain this issue with an example. We are adding InstPatch support to\nFluidSynth as an optional feature, conditionally adding source files that\nrequire this feature. The first step is to add a macro `option()` to the main\nCMakeLists.txt file, the one that is located at the fluidsynth root directory.\n\nfile [CMakeLists.txt](./CMakeLists.txt#L79), line 79:\n\n```cmake\noption ( enable-libinstpatch \"use libinstpatch (if available) to load DLS and GIG files\" on )\n```\n\nIf you require a minimum version of the library, set it as such:\n\nfile [CMakeLists.txt](./CMakeLists.txt#L505), line 505:\n\n```cmake\nset ( LIBINSTPATCH_MINIMUM_VERSION 1.1.0 )\n```\n\nNow, let's check if the InstPatch library and headers are installed, using\nfind_package:\n\nfile [CMakeLists.txt](./CMakeLists.txt#L634), lines 634-641:\n\n```cmake\nunset ( LIBINSTPATCH_SUPPORT CACHE )\nif ( enable-libinstpatch )\n    find_package ( InstPatch ${LIBINSTPATCH_MINIMUM_VERSION} )\n    set ( LIBINSTPATCH_SUPPORT ${InstPatch_FOUND} )\n    if ( LIBINSTPATCH_SUPPORT )\n        list( APPEND PC_REQUIRES_PRIV \"libinstpatch-1.0\")\n    endif (LIBINSTPATCH_SUPPORT )\nendif ( enable-libinstpatch )\n```\n\nThe first line clears the value of the CMake variable LIBINSTPATCH_SUPPORT. If\nthe value of the option `enable-libinstpatch` is true, then the function\n`find_package()` is used to test a package named \"InstPatch\" with version 1.1.0\nor later. Unfortunately, libinstpatch does not provide an official CMake\nconfiguration, so we will need to write it a Find module. Let's start by\ncreating a new file in the cmake_admin directory called\n[FindInstPatch.cmake](./cmake_admin/FindInstPatch.cmake).\n\nThe first thing we should do is to document what this module provides:\n\nfile [cmake_admin/FindInstPatch.cmake](./cmake_admin/FindInstPatch.cmake), lines 1-25:\n\n```cmake\n#[=======================================================================[.rst:\nFindInstPatch\n-------\n\nFinds the InstPatch library.\n\nImported Targets\n^^^^^^^^^^^^^^^^\n\nThis module provides the following imported targets, if found:\n\n``InstPatch::libinstpatch``\n  The InstPatch library\n\nResult Variables\n^^^^^^^^^^^^^^^^\n\nThis will define the following variables:\n\n``InstPatch_FOUND``\n  True if the system has the InstPatch library.\n``InstPatch_VERSION``\n  The version of the InstPatch library which was found.\n\n#]=======================================================================]\n```\n\nIn this case, we provide a CMake target `InstPatch::libinstpatch`, and the two\nvariables `InstPatch_FOUND` and `InstPatch_VERSION`. If upstream provides an\nofficial CMake config, the find module should provide the exact same variables\nand targets, even if they are not used. Moreover, the namespace of the target\n(`InstPatch::`) should match the file name (`FindInstPatch.cmake`).\n\nIf the library provides a pkg-config file, we should use it to get information\nabout location, version, and usage requirements. We can achieve this with the\n`pkg_check_modules` macro:\n\nfile [cmake_admin/FindInstPatch.cmake](./cmake_admin/FindInstPatch.cmake#L27), lines 27-29:\n\n```cmake\n# Use pkg-config if available\nfind_package(PkgConfig QUIET)\npkg_check_modules(PC_INSTPATCH QUIET libinstpatch-1.0)\n```\n\nWe specifically want both calls to have the `QUIET` specifier as the system may\nnot have pkg-config or the pc file for the library, but this should not stop\nsearching for the library.\n\nNext, we need to search for the headers and the library. For the headers,\nlibinstpatch installs them in `libinstpatch-X/libinstpatch/*.h`, with `X` being\n`1` for versions 1.1.0 and below, and `2` for 1.1.1 and above. In our code, we\nuse the headers as such: `#include <libinstpatch/libinstpatch.h>`. With this\nin mind, we use `find_path` to find the include directory:\n\nfile [cmake_admin/FindInstPatch.cmake](./cmake_admin/FindInstPatch.cmake#L32), lines 32-36:\n\n```cmake\nfind_path(\n  InstPatch_INCLUDE_DIR\n  NAMES \"libinstpatch/libinstpatch.h\"\n  PATHS \"${PC_INSTPATCH_INCLUDEDIR}\"\n  PATH_SUFFIXES \"libinstpatch-1\" \"libinstpatch-2\")\n```\n\nHere is a breakdown of the arguments:\n\n- `InstPatch_INCLUDE_DIR` is the variable where the result will be stored;\n- `NAMES` should match what is used in code to include the header;\n- `PATHS` should be set to what pkg-config provided us, if pkg-config is\n  unavailable it will be ignored;\n- `PATH_SUFFIXES` should have the potential intermediate directories between\n  CMake's search paths and what was specified in `NAMES`, it may omitted when\n  not applicable.\n\nTo search for the library, we call `find_library`:\n\nfile [cmake_admin/FindInstPatch.cmake](./cmake_admin/FindInstPatch.cmake#L38), lines 38-41:\n\n```cmake\nfind_library(\n  InstPatch_LIBRARY\n  NAMES \"instpatch-1.0\"\n  PATHS \"${PC_INSTPATCH_LIBDIR}\")\n```\n\nHere is a breakdown of the arguments:\n\n- `InstPatch_LIBRARY` is the variable where the result will be stored;\n- `NAMES` should list every name the library may have, some libraries may have\n  a different prefix or suffix on different configurations (`-static` suffix,\n  `d` suffix for debug builds);\n- `PATHS` should be set to what pkg-config provided us, if pkg-config is\n  unavailable it will be ignored.\n\nGetting the version of the library is trivial with pkg-config, but may not be\npossible to get without. Fortunately, the file `libinstpatch/version.h`\nprovides the version:\n\n```c\n#define IPATCH_VERSION       \"1.2.0\"\n```\n\nWe can extract the version using regex:\n\nfile [cmake_admin/FindInstPatch.cmake](./cmake_admin/FindInstPatch.cmake#L44), lines 44-52:\n\n```cmake\nif(PC_INSTPATCH_VERSION)\n  set(InstPatch_VERSION \"${PC_INSTPATCH_VERSION}\")\nelseif(InstPatch_INCLUDE_DIR)\n  file(READ \"${InstPatch_INCLUDE_DIR}/libinstpatch/version.h\" _version_h)\n  string(REGEX MATCH\n               \"#define[ \\t]+IPATCH_VERSION[ \\t]+\\\"([0-9]+.[0-9]+.[0-9]+)\\\"\"\n               _instpatch_version_re \"${_version_h}\")\n  set(InstPatch_VERSION \"${CMAKE_MATCH_1}\")\nendif()\n```\n\nThe last thing we need to search for is the usage requirements, providing them\nmakes static linking much easier. If pkg-config is available, we use a helper\nfunction to get the correct set of properties, otherwise you need to refer to \nthe upstream documentation. In the case of libinstpatch, we need `glib-2` and\n`libsndfile`, fortunately, we already have Find modules for both libraries:\n\nfile [cmake_admin/FindInstPatch.cmake](./cmake_admin/FindInstPatch.cmake#L55), lines 55-69:\n\n```cmake\nif(PC_INSTPATCH_FOUND)\n  get_target_properties_from_pkg_config(\"${InstPatch_LIBRARY}\" \"PC_INSTPATCH\"\n                                        \"_instpatch\")\nelse()\n  if(NOT TARGET GLib2::gobject-2\n     OR NOT TARGET GLib2::gthread-2\n     OR NOT TARGET GLib2::glib-2)\n    find_package(GLib2 QUIET)\n  endif()\n  if(NOT TARGET SndFile::sndfile)\n    find_package(SndFile QUIET)\n  endif()\n  set(_instpatch_link_libraries \"GLib2::gobject-2\" \"GLib2::gthread-2\"\n                                \"GLib2::glib-2\" \"SndFile::sndfile\")\nendif()\n```\n\nWe then use `find_package_handle_standard_args` to check that all the\nvariables are set and the version matches what was requested:\n\nfile [cmake_admin/FindInstPatch.cmake](./cmake_admin/FindInstPatch.cmake#L72), lines 72-76:\n\n```cmake\ninclude(FindPackageHandleStandardArgs)\nfind_package_handle_standard_args(\n  InstPatch\n  REQUIRED_VARS \"InstPatch_LIBRARY\" \"InstPatch_INCLUDE_DIR\"\n  VERSION_VAR \"InstPatch_VERSION\")\n```\n\nThis will set `InstPatch_FOUND` to true if the checks succeed and false\notherwise.\n\nIf the library is found, we then create the target and set its properties:\n\nfile [cmake_admin/FindInstPatch.cmake](./cmake_admin/FindInstPatch.cmake#L78), lines 78-87:\n\n```cmake\nif(InstPatch_FOUND AND NOT TARGET InstPatch::libinstpatch)\n  add_library(InstPatch::libinstpatch UNKNOWN IMPORTED)\n  set_target_properties(\n    InstPatch::libinstpatch\n    PROPERTIES IMPORTED_LOCATION \"${InstPatch_LIBRARY}\"\n               INTERFACE_COMPILE_OPTIONS \"${_instpatch_compile_options}\"\n               INTERFACE_INCLUDE_DIRECTORIES \"${InstPatch_INCLUDE_DIR}\"\n               INTERFACE_LINK_LIBRARIES \"${_instpatch_link_libraries}\"\n               INTERFACE_LINK_DIRECTORIES \"${_instpatch_link_directories}\")\nendif()\n```\n\nHere is a breakdown of the properties:\n\n- `IMPORTED_LOCATION` should be the result of `find_library`;\n- `INTERFACE_INCLUDE_DIRECTORES` should be the result of `find_path`;\n- `INTERFACE_LINK_LIBRARIES` should be the transitive usage requirements, it\n  may be omitted if there are none;\n- `INTERFACE_COMPILE_OPTIONS` and `INTERFACE_LINK_DIRECTORIES` should be set to\n  what our `get_flags_from_pkg_config` helper provided us, if pkg-config is\n  unavailable they will be ignored.\n\nLastly, we call mark a few cache variables as advanced:\n\nfile [cmake_admin/FindInstPatch.cmake](./cmake_admin/FindInstPatch.cmake#L88), line 88:\n\n```cmake\nmark_as_advanced(InstPatch_INCLUDE_DIR InstPatch_LIBRARY)\n```\n\nNext, we need to inform downstream projects of this so if fluidsynth was built\nas a static library, all the transitive dependencies are properly forwarded. To\nachieve this, we need to edit FluidSynthConfig.cmake.in:\n\nfile [FluidSynthConfig.cmake](./FluidSynthConfig.cmake.in#L22), line 22:\n\n```cmake\nset(FLUIDSYNTH_SUPPORT_LIBINSTPATCH @LIBINSTPATCH_SUPPORT@)\n```\n\nfile [FluidSynthConfig.cmake](./FluidSynthConfig.cmake.in#L91), lines 91-93:\n\n```cmake\n  if(FLUIDSYNTH_SUPPORT_LIBINSTPATCH AND NOT TARGET InstPatch::libinstpatch)\n    find_dependency(InstPatch @LIBINSTPATCH_MINIMUM_VERSION@)\n  endif()\n```\n\nThere is a report to summarize the performed checks and the enabled features\nafter the configuration steps, so let's add a line in this report regarding\nthe InstPatch support.\n\nfile [cmake_admin/report.cmake](./cmake_admin/report.cmake#L119), lines 119-124:\n\n```cmake\nset ( INPUTS_REPORT \"${INPUTS_REPORT}Support for DLS files:   \" )\nif ( LIBINSTPATCH_SUPPORT )\n    set ( INPUTS_REPORT \"${INPUTS_REPORT}yes\\n\" )\nelse ( LIBINSTPATCH_SUPPORT )\n    set ( INPUTS_REPORT \"${INPUTS_REPORT}no (libinstpatch not found)\\n\" )\nendif ( LIBINSTPATCH_SUPPORT )\n```\n\nThe variable `LIBINSTPATCH_SUPPORT` is available for the CMake files, but we\nwant to make it available to the compilers as well, to conditionally build code\nusing `#ifdef LIBINSTPATCH_SUPPORT`. This can be done adding a line to the\nconfig.cmake file:\n\nfile [src/config.cmake](./src/config.cmake#L148), lines 148-149:\n\n```c\n/* libinstpatch for DLS and GIG */\n#cmakedefine LIBINSTPATCH_SUPPORT @LIBINSTPATCH_SUPPORT@\n```\n\nThe file config.cmake will be processed at configure time, producing a header\nfile \"config.h\" in the build directory with this content, if the InstPatch\nsupport has been enabled and found:\n\n```c\n/* libinstpatch for DLS and GIG */\n#define LIBINSTPATCH_SUPPORT 1\n```\n\nFinally, we add the new sources files to the library during the `add_library`\ncall, and link the library using the `target_link_libraries` function. Note\nthat linking to a target will automatically set the necessary include\ndirectories.\n\nfile [src/CMakeLists.txt](./src/CMakeLists.txt#L96), lines 96-98:\n\n```cmake\nif ( LIBINSTPATCH_SUPPORT )\n  set ( fluid_libinstpatch_SOURCES sfloader/fluid_instpatch.c sfloader/fluid_instpatch.h )\nendif ( LIBINSTPATCH_SUPPORT )\n```\n\nfile [src/CMakeLists.txt](./src/CMakeLists.txt#L230), lines 230-257:\n\n```cmake\nadd_library ( libfluidsynth-OBJ OBJECT\n    ...\n    ${fluid_libinstpatch_SOURCES}\n    ...\n)\n```\n\nfile [src/CMakeLists.txt](./src/CMakeLists.txt#L386), lines 386-388:\n\n```cmake\nif ( TARGET InstPatch::libinstpatch AND LIBINSTPATCH_SUPPORT )\n    target_link_libraries ( libfluidsynth-OBJ PUBLIC InstPatch::libinstpatch )\nendif()\n```\n\nIf the library is used in the fluidsynth executable, you also need to link it to its target:\n\nfile [src/CMakeLists.txt](./src/CMakeLists.txt#L484), lines 484-486:\n\n```cmake\nif ( TARGET InstPatch::libinstpatch AND LIBINSTPATCH_SUPPORT )\n    target_link_libraries ( fluidsynth PRIVATE InstPatch::libinstpatch )\nendif()\n```\n\n### Find modules guideline\n\nIt is not always necessary to provide find modules if:\n\n- The upstream library provides its own config\n- Most distribution ship this config\n\nFor example:\n\n- libsndfile provides a CMake config file only when built with CMake but not\n  with autotools. In that case, it may be preferable to provide a Find module\n  that matches what the config would provide. See [cmake_admin/FindSndFile](./cmake_admin/FindSndFile.cmake).\n- SDL2 provides a config file that defines targets starting 2.0.12. Since even\n  Debian stable provides this config, it is safe to assume that a find module\n  will not be needed.\n\nIf upstream has only begun shipping CMake config recently, it is preferable to\nadd a Find module.\n\nIf upstream does not provide a CMake config altogether, you will need to make\nyour own from scratch. There is no defined rule for naming, but the common\npractice is to have the namespace use PascalCase.\n\nYou can have CMake prefer the upstream config file over the find modules by\nsetting `CMAKE_FIND_PACKAGE_PREFER_CONFIG` to `ON`.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.326171875,
          "content": "# FluidSynth\n\n| | Build Status |\n|---|---|\n| <img src=\"https://www.kernel.org/theme/images/logos/tux.png\" height=\"30\" alt=\"\"> **Linux** (CI) | [![FluidSynth Linux](https://github.com/FluidSynth/fluidsynth/workflows/FluidSynth%20Linux/badge.svg)](https://github.com/FluidSynth/fluidsynth/actions?query=workflow%3A%22FluidSynth+Linux%22) |\n| <img src=\"https://upload.wikimedia.org/wikipedia/commons/3/35/Obs-logo.png\" height=30 alt=\"\"> **Linux** (Packaging) | [![build result](https://build.opensuse.org/projects/home:derselbst:anmp/packages/fluidsynth/badge.svg?type=default)](https://build.opensuse.org/package/show/home:derselbst:anmp/fluidsynth)\n| <img src=\"https://raw.githubusercontent.com/docker-library/docs/781049d54b1bd9b26d7e8ad384a92f7e0dcb0894/alpine/logo.png\" height=\"25\" alt=\"\"> **Alpine** (musl) | [![Fluidsynth Alpine](https://dev.azure.com/tommbrt/tommbrt/_apis/build/status%2FFluidSynth.fluidsynth.alpine?branchName=master)](https://dev.azure.com/tommbrt/tommbrt/_build/latest?definitionId=12&branchName=alpine) |\n| <img src=\"https://www.freebsd.org/gifs/daemon_hammer.jpg\" height=\"30\" alt=\"\"> **FreeBSD** | [![Build Status](https://api.cirrus-ci.com/github/FluidSynth/fluidsynth.svg?branch=master)](https://cirrus-ci.com/github/FluidSynth/fluidsynth) |\n| <img src=\"https://www.microsoft.com/windows/favicon.ico\" height=\"25\" alt=\"\"> **Windows** | [![Build Status](https://dev.azure.com/tommbrt/tommbrt/_apis/build/status/FluidSynth.fluidsynth.Win?branchName=master)](https://dev.azure.com/tommbrt/tommbrt/_build/latest?definitionId=3&branchName=master) |\n| <img src=\"https://www.apple.com/favicon.ico\" height=\"30\" alt=\"\"> **MacOSX** | [![Build Status](https://dev.azure.com/tommbrt/tommbrt/_apis/build/status/FluidSynth.fluidsynth.macOS?branchName=master)](https://dev.azure.com/tommbrt/tommbrt/_build/latest?definitionId=5&branchName=master) |\n| <img src=\"https://www.android.com/favicon.ico\" height=\"30\" alt=\"\"> **Android** | [![Build Status](https://dev.azure.com/tommbrt/tommbrt/_apis/build/status/FluidSynth.fluidsynth.Android?branchName=master)](https://dev.azure.com/tommbrt/tommbrt/_build/latest?definitionId=4&branchName=master) |\n\n\n#### FluidSynth is a cross-platform, real-time software synthesizer based on the Soundfont 2 specification.\n\nFluidSynth generates audio by reading and handling MIDI events from MIDI input devices by using a [SoundFont](https://github.com/FluidSynth/fluidsynth/wiki/SoundFont). It is the software analogue of a MIDI synthesizer. FluidSynth can also play MIDI files.\n\n[![SonarQube Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=FluidSynth_fluidsynth&metric=alert_status)](https://sonarcloud.io/dashboard?id=FluidSynth_fluidsynth) [![OHLOH Project Stats](https://www.openhub.net/p/fluidsynth/widgets/project_thin_badge?format=gif)](https://www.openhub.net/p/fluidsynth)\n\n\n## Documentation\n\nThe central place for documentation and further links is our **wiki** here at GitHub:\n\n#### https://github.com/FluidSynth/fluidsynth/wiki\n\nIf you are missing parts of the documentation, let us know by writing to our mailing list.\nOf course, you are welcome to edit and improve the wiki yourself. All you need is an account at GitHub. Alternatively, you may send an EMail to our mailing list along with your suggested changes. Further information about the mailing list is available in the wiki as well.\n\nLatest information about FluidSynth is also available on the web site at https://www.fluidsynth.org/.\n\n## License\n\nThe source code for FluidSynth is distributed under the terms of the [GNU Lesser General Public License](https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html), see the [LICENSE](https://github.com/FluidSynth/fluidsynth/blob/master/LICENSE) file. To better understand the conditions how FluidSynth can be used in e.g. commercial or closed-source projects, please refer to the [LicensingFAQ in our wiki](https://github.com/FluidSynth/fluidsynth/wiki/LicensingFAQ).\n\n## Building from source\n\nFor information on how to build FluidSynth from source, please [refer to our wiki](https://github.com/FluidSynth/fluidsynth/wiki/BuildingWithCMake).\n\n## Links\n\n- FluidSynth's Home Page, https://www.fluidsynth.org\n\n- FluidSynth's wiki, https://github.com/FluidSynth/fluidsynth/wiki\n\n- FluidSynth's API documentation, https://www.fluidsynth.org/api/\n\n---\n\n## Historical background\n\n### Why did we do it\n\nThe synthesizer grew out of a project, started by Samuel Bianchini and\nPeter Hanappe, and later joined by Johnathan Lee, that aimed at\ndeveloping a networked multi-user game.\n\nSound (and music) was considered a very important part of the game. In\naddition, users had to be able to extend the game with their own\nsounds and images. Johnathan Lee proposed to use the Soundfont\nstandard combined with intelligent use of midifiles. The arguments\nwere:\n\n- Wavetable synthesis is low on CPU usage, it is intuitive and it can\n  produce rich sounds\n\n- Hardware acceleration is possible if the user owns a Soundfont\n  compatible soundcard (important for games!)\n\n- MIDI files are small and Soundfont2 files can be made small thru the\n  intelligent use of loops and wavetables. Together, they are easier to\n  downloaded than MP3 or audio files.\n\n- Graphical editors are available for both file format: various\n  Soundfont editors are available on PC and on Linux (Smurf!), and\n  MIDI sequencers are available on all platforms.\n\nIt seemed like a good combination to use for an (online) game. \n\nIn order to make Soundfonts available on all platforms (Linux, Mac,\nand Windows) and for all sound cards, we needed a software Soundfont\nsynthesizer. That is why we developed FluidSynth.\n\n### Design decisions\n\nThe synthesizer was designed to be as self-contained as possible for\nseveral reasons:\n\n- It had to be multi-platform (Linux, macOS, Win32). It was therefore\n  important that the code didn't rely on any platform-specific\n  library.\n\n- It had to be easy to integrate the synthesizer modules in various\n  environments, as a plugin or as a dynamically loadable object. I\n  wanted to make the synthesizer available as a plugin (jMax, LADSPA,\n  Xmms, WinAmp, Director, ...); develop language bindings (Python,\n  Java, Perl, ...); and integrate it into (game) frameworks (Crystal\n  Space, SDL, ...). For these reasons I've decided it would be easiest\n  if the project stayed very focused on its goal (a Soundfont\n  synthesizer), stayed small (ideally one file) and didn't dependent\n  on external code.\n"
        },
        {
          "name": "THANKS",
          "type": "blob",
          "size": 1.5615234375,
          "content": "For the list of authors that contributed to the code, please read the\nfile AUTHORS.\n\n\nWe would like to thank the Fondation Daniel Langlois for their\nfunding. Their help made this project to get of the ground. Without it\nwould simply not exist. Many thanks!\n(https://www.fondation-langlois.org)\n\nIn alphabetic order:\n\nPaul Barton-Davis\nSamuel Bianchini <biank at online dot fr>\nRaoul Bonisch <jkl345 at gmx dot net>\nRui Nuno Capela <rncbc at rncbc dot org>\nJake Commander <jakec at ukfirst dot co dot uk>\nFrancois Dechelle <Francois dot Dechelle at ircam dot fr>\nKen Ellinwood <kellinwood at yahoo dot com>\nTim Goetze <tim at quitte dot de>\nAnthony Green <green at redhat dot com>\nJosh Green <jgreen at users dot sourceforge dot net>\nBob Ham <bob at ham dot org> \nPeter Hanappe <peter at hanappe dot com>\nJezar <jezar at dreampoint dot co dot uk>\nFernando Pablo Lopez-Lezcano <nando at ccrma dot Stanford dot EDU>\nJohnathan Lee <jlee at music dot columbia dot edu>\nStephane Letz <letz at grame dot fr>\nEbrahim Mayat <ebmayat at mac dot com>\nSven Meier <svenmeier at users dot sourceforge dot net> \nJuergen Mueller\nMarkus Nentwig <nentwig at users dot sourceforge dot net>\nDavid Olofson <david at olofson dot net>\nSergey Pavlishin <xlogo at mail dot ru>\nDave Phillips\nDaniel Pressnitzer <pressnit at ircam dot fr>\nGerald Pye <mail at edenyard dot co dot uk>\nNorbert Schnell <Norbert dot Schnell at ircam dot fr>\nJoshua Scholar\nAntoine Schmitt <as at gratin dot org>\nWerner Schweer <ws at seh dot de>\nStephan Tassart <Stephan dot Tassart at st dot com>\nMartin Uddén <nanook at lysator dot liu dot se>\n"
        },
        {
          "name": "TODO",
          "type": "blob",
          "size": 1.2880859375,
          "content": "New features\n------------\n- Audio level metering\n- Active voice count monitoring\n\nSynthesis\n---------\n- Improve voice stealing algorithm\n- Dynamic voice killing (based on CPU usage)\n- Batch voice activation (stereo synch. as per SoundFont spec)\n- Pitch control on stereo samples not managed as should\n\nDrivers\n-------\n- libao audio output driver\n- Windows DirectMusic component\n- ASIO driver\n- DirectSound 3D and EAX\n\nBugs to mash\n------------\n- Investigate why MIDI rendering causes burst of notes at start\n\nDocumentation\n-------------\n- Write documentation on tuning\n- User and system configuration file\n\nMisc\n----\n- Remove dependency of settings on audio driver and other (see\n  fluid_settings_init())\n- set loop on/off on a sample (set_gen GEN_SAMPLEMODE?)\n\n\nFluidSynth Next Generation\n--------------------------------------------\n\nTop of the list\n- 3D audio output\n\nMIDI player\n- Add API to manipulate and query MIDI file list\n- generalize use of fluid_event_t, remove fluid_midi_event_t\n\nShell & command handler\n- Add \"note\" command that plays a note with a duration (sequencer)\n- MIDI file player commands (load/play/stop)\n- Allow settings to be loaded before the synthesizer is created\n\nMIDI Specs\n- sample dump\n- MIDI thru\n- Scalable Polyphony MIDI (SP-MIDI)\n\n\nUnsorted\n- rewrite midi file using new sequencer\n"
        },
        {
          "name": "cmake_admin",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "fluidsynth.conf.in",
          "type": "blob",
          "size": 0.220703125,
          "content": "# Mandatory parameters (uncomment and edit)\n#SOUND_FONT=@DEFAULT_SOUNDFONT@\n\n# Additional optional parameters (may be useful, see 'man fluidsynth' for further info)\n#OTHER_OPTS='-a alsa -m alsa_seq -p FluidSynth\\ GM -r 48000'\n"
        },
        {
          "name": "fluidsynth.pc.in",
          "type": "blob",
          "size": 0.31640625,
          "content": "prefix=@prefix@\nexec_prefix=@exec_prefix@\nlibdir=@libdir@\nincludedir=@includedir@\n\nName: FluidSynth\nDescription: Software SoundFont synth\nVersion: @VERSION@\nRequires.private: @PC_REQUIRES_PRIV_JOINED@\nLibs: -L${libdir} -lfluidsynth\nLibs.private: @LIBS_PRIVATE_JOINED@ @LIBS_PRIVATE_WITH_PATH_JOINED@\nCflags: -I${includedir}\n"
        },
        {
          "name": "fluidsynth.service.in",
          "type": "blob",
          "size": 0.736328125,
          "content": "[Unit]\nDescription=FluidSynth Daemon\nDocumentation=man:fluidsynth(1)\nAfter=sound.target\nAfter=pipewire.service\n\n[Service]\n# added automatically, for details please see\n# https://en.opensuse.org/openSUSE:Security_Features#Systemd_hardening_effort\nProtectSystem=full\nProtectHome=read-only\nProtectHostname=true\nProtectKernelTunables=true\nProtectKernelModules=true\nProtectKernelLogs=true\nProtectControlGroups=true\n# end of automatic additions\n# required in order for the above sandboxing options to work on a user unit\nPrivateUsers=yes\nType=notify\nNotifyAccess=main\nEnvironmentFile=@FLUID_DAEMON_ENV_FILE@\nEnvironmentFile=-%h/.config/fluidsynth\nExecStart=@CMAKE_INSTALL_FULL_BINDIR@/fluidsynth -is $OTHER_OPTS $SOUND_FONT\n\n[Install]\nWantedBy=default.target\n\n"
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "sf2",
          "type": "tree",
          "content": null
        },
        {
          "name": "sonar-project.properties",
          "type": "blob",
          "size": 0.40625,
          "content": "sonar.projectKey=FluidSynth_fluidsynth\nsonar.organization=fluidsynth\n\nsonar.cfamily.threads=2\n\n\n# This is the name and version displayed in the SonarCloud UI.\n#sonar.projectName=fluidsynth\n#sonar.projectVersion=1.0\n\n# Path is relative to the sonar-project.properties file. Replace \"\\\" by \"/\" on Windows.\n#sonar.sources=.\n\n# Encoding of the source code. Default is default system encoding\n#sonar.sourceEncoding=UTF-8\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-android",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}