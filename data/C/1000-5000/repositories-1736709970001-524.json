{
  "metadata": {
    "timestamp": 1736709970001,
    "page": 524,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "HardySimpson/zlog",
      "stars": 2288,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.3203125,
          "content": "# Coding Style Proposal - Verify\n\nLanguage: Cpp\nBasedOnStyle: Microsoft\n\n################################################\nReflowComments: false\nSortIncludes: false # can break build; turning off\nSortUsingDeclarations: false # can break build; turning off\nFixNamespaceComments: false\n\nBreakStringLiterals: false\nColumnLimit: 100\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 4.892578125,
          "content": "# Created by https://www.toptal.com/developers/gitignore/api/c,c++,bazel,cmake,linux,macos,windows,jetbrains+all,visualstudiocode\n# Edit at https://www.toptal.com/developers/gitignore?templates=c,c++,bazel,cmake,linux,macos,windows,jetbrains+all,visualstudiocode\n\n### Bazel ###\n# gitignore template for Bazel build system\n# website: https://bazel.build/\n\n# Ignore all bazel-* symlinks. There is no full list since this can change\n# based on the name of the directory bazel is cloned into.\n/bazel-*\n\n# Directories for the Bazel IntelliJ plugin containing the generated\n# IntelliJ project files and plugin configuration. Seperate directories are\n# for the IntelliJ, Android Studio and CLion versions of the plugin.\n/.ijwb/\n/.aswb/\n/.clwb/\n\n### C ###\n# Prerequisites\n*.d\n\n# Object files\n*.o\n*.ko\n*.obj\n*.elf\n\n# Linker output\n*.ilk\n*.map\n*.exp\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Libraries\n*.lib\n*.a\n*.la\n*.lo\n\n# Shared objects (inc. Windows DLLs)\n*.dll\n*.so\n*.so.*\n*.dylib\n\n# Executables\n*.exe\n*.out\n*.app\n*.i*86\n*.x86_64\n*.hex\n\n# Debug files\n*.dSYM/\n*.su\n*.idb\n*.pdb\n\n# Kernel Module Compile Results\n*.mod*\n*.cmd\n.tmp_versions/\nmodules.order\nModule.symvers\nMkfile.old\ndkms.conf\n\n### C++ ###\n# Prerequisites\n\n# Compiled Object files\n*.slo\n\n# Precompiled Headers\n\n# Compiled Dynamic libraries\n\n# Fortran module files\n*.mod\n*.smod\n\n# Compiled Static libraries\n*.lai\n\n# Executables\n\n### CMake ###\nCMakeLists.txt.user\nCMakeCache.txt\nCMakeFiles\nCMakeScripts\nTesting\nMakefile\ncmake_install.cmake\ninstall_manifest.txt\ncompile_commands.json\nCTestTestfile.cmake\n_deps\n\n### CMake Patch ###\n# External projects\n*-prefix/\n\n### JetBrains+all ###\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\n\n# User-specific stuff\n.idea/**/workspace.xml\n.idea/**/tasks.xml\n.idea/**/usage.statistics.xml\n.idea/**/dictionaries\n.idea/**/shelf\n\n# AWS User-specific\n.idea/**/aws.xml\n\n# Generated files\n.idea/**/contentModel.xml\n\n# Sensitive or high-churn files\n.idea/**/dataSources/\n.idea/**/dataSources.ids\n.idea/**/dataSources.local.xml\n.idea/**/sqlDataSources.xml\n.idea/**/dynamic.xml\n.idea/**/uiDesigner.xml\n.idea/**/dbnavigator.xml\n\n# Gradle\n.idea/**/gradle.xml\n.idea/**/libraries\n\n# Gradle and Maven with auto-import\n# When using Gradle or Maven with auto-import, you should exclude module files,\n# since they will be recreated, and may cause churn.  Uncomment if using\n# auto-import.\n# .idea/artifacts\n# .idea/compiler.xml\n# .idea/jarRepositories.xml\n# .idea/modules.xml\n# .idea/*.iml\n# .idea/modules\n# *.iml\n# *.ipr\n\n# CMake\ncmake-build-*/\n\n# Mongo Explorer plugin\n.idea/**/mongoSettings.xml\n\n# File-based project format\n*.iws\n\n# IntelliJ\nout/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Cursive Clojure plugin\n.idea/replstate.xml\n\n# SonarLint plugin\n.idea/sonarlint/\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\nfabric.properties\n\n# Editor-based Rest Client\n.idea/httpRequests\n\n# Android studio 3.1+ serialized cache file\n.idea/caches/build_file_checksums.ser\n\n### JetBrains+all Patch ###\n# Ignore everything but code style settings and run configurations\n# that are supposed to be shared within teams.\n\n.idea/*\n\n!.idea/codeStyles\n!.idea/runConfigurations\n\n### Linux ###\n*~\n\n# temporary files which can be created if a process still has a handle open of a deleted file\n.fuse_hidden*\n\n# KDE directory preferences\n.directory\n\n# Linux trash folder which might appear on any partition or disk\n.Trash-*\n\n# .nfs files are created when an open file is removed but is still being accessed\n.nfs*\n\n### macOS ###\n# General\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\n\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n### macOS Patch ###\n# iCloud generated files\n*.icloud\n\n### VisualStudioCode ###\n.vscode/*\n!.vscode/settings.json\n!.vscode/tasks.json\n!.vscode/launch.json\n!.vscode/extensions.json\n!.vscode/*.code-snippets\n\n# Local History for Visual Studio Code\n.history/\n\n# Built Visual Studio Code Extensions\n*.vsix\n\n### VisualStudioCode Patch ###\n# Ignore all local history of files\n.history\n.ionide\n\n### Windows ###\n# Windows thumbnail cache files\nThumbs.db\nThumbs.db:encryptable\nehthumbs.db\nehthumbs_vista.db\n\n# Dump file\n*.stackdump\n\n# Folder config file\n[Dd]esktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Windows Installer files\n*.cab\n*.msi\n*.msix\n*.msm\n*.msp\n\n# Windows shortcuts\n*.lnk\n\n# build folder\n/build/\n\n# End of https://www.toptal.com/developers/gitignore/api/c,c++,bazel,cmake,linux,macos,windows,jetbrains+all,visualstudiocode"
        },
        {
          "name": "BUILD.bazel",
          "type": "blob",
          "size": 0.4404296875,
          "content": "load(\"@rules_cc//cc:defs.bzl\", \"cc_library\")\n\ncc_library(\n    name = \"zlog\",\n    srcs = glob(\n        [\n            \"src/*.c\",\n            \"src/*.h\",\n        ],\n        exclude = [\n            \"src/zlog_win.c\",\n            \"src/zlog_win.h\",\n        ],\n    ),\n    hdrs = glob(\n        [\n            \"src/*.h\",\n            \"*.h\",\n        ],\n        exclude = [\n            \"src/zlog_win.h\",\n        ],\n    ),\n    visibility = [\"//visibility:public\"],\n)\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 1.962890625,
          "content": "# LICENSE: Apache License 2.0\n# Copyright (c) Hardy Simpson\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#/\n\ncmake_minimum_required(VERSION 2.8.5)\n\nmessage(STATUS \"path : ${CMAKE_FIND_ROOT_PATH}\")\nproject(zlog)\nmessage(STATUS \"path : ${CMAKE_FIND_ROOT_PATH}\")\n\nset(CMAKE_MODULE_PATH ${zlog_SOURCE_DIR}/cmake)\n\nSET(CPACK_PACKAGE_VERSION_MAJOR \"1\")\nSET(CPACK_PACKAGE_VERSION_MINOR \"2\")\nSET(CPACK_PACKAGE_VERSION_PATCH \"18\")\nSET(CPACK_RPM_PACKAGE_RELEASE 1) # release version.\nSET(CPACK_PACKAGE_VERSION \"${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}\")\nSET(ZLOG_VERSION ${CPACK_PACKAGE_VERSION})\nSET(ZLOG_SO_VERSION ${CPACK_PACKAGE_VERSION_MAJOR})\n\nmessage(STATUS \"platform : ${CMAKE_SYSTEM}\")\n\nadd_definitions(\"-g -Wall -Wstrict-prototypes\")\nset(CMAKE_C_FLAGS \"-std=c99 -pedantic -D_DEFAULT_SOURCE\")\nset(CMAKE_C_FLAGS_DEBUG \"-ggdb3 -DDEBUG\")\nset(CMAKE_C_FLAGS_RELEASE \"-O2\")\n\nif (WIN32)\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -DWINVER=0x0500 -D_WIN32_WINNT=0x0500 \")\nendif ()\n\ncmake_policy(SET CMP0015 NEW)\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY \"${zlog_BINARY_DIR}/lib\")\nset(CMAKE_ARCHIVE_OUTPUT_DIRECTORY \"${zlog_BINARY_DIR}/lib\")\n\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY \"${zlog_BINARY_DIR}/bin\")\n\nlink_directories(${CMAKE_LIBRARY_OUTPUT_DIRECTORY})\n\nset(Need_THREAD 1)\n\nif (WIN32)\n    set(Need_UNIXEM 1)\nendif ()\n\ninclude(cmake/LoadLibraries.cmake)\n\nadd_subdirectory(src)\nadd_subdirectory(cpack)\n\nif (UNIT_TEST)\n    enable_testing()\n    add_subdirectory(test)\nendif ()\n"
        },
        {
          "name": "Changelog",
          "type": "blob",
          "size": 7.517578125,
          "content": "zlog (1.2.17) unstable; urgency=medium\n\n  * Change License to Apache 2.0, for more people.\n\n -- [Hardy Simpson] <hardysimpson1984@gmail.com>\n\nzlog (1.2.16) unstable; urgency=medium\n\n  * Minor bug fixes.\n\n -- [Hardy Simpson] <hardysimpson1984@gmail.com>\n\nzlog (1.2.15) unstable; urgency=medium\n\n  * Added support for %r to insert a carriage return.\n  * Minor bug fixes.\n\n -- [Hardy Simpson] <hardysimpson1984@gmail.com>\n\nzlog (1.2.14) unstable; urgency=medium\n\n  * Added support for all syslog facilities.\n  * Test: Added long log test.\n  * Added '-' to the list of accepted characters in category name.\n  * Added API to get zlog version.\n  * Added %k formatter with leading 0's formatting.\n  * Added API for category log level checking.\n  * Fixed compile errors on some platforms.\n  * Minor bug fixes.\n\n -- [Hardy Simpson] <hardysimpson1984@gmail.com>\n\nzlog (1.2.12) unstable; urgency=medium\n\n  * Bugfix to avoid segmentation fault if zlog_init() is called many times.\n  * Static file rule to emulate Python's WatchedFileHandler mode when used with external log rotation.\n\n -- [Hardy Simpson] <hardysimpson1984@gmail.com>\n\nzlog (1.2.10) unstable; urgency=medium\n\n  * Bugfix: LGPL v3 -> LGPL v2.1.\n\n -- [Hardy Simpson] <hardysimpson1984@gmail.com>\n\nzlog (1.2.8) unstable; urgency=medium\n\n  * Added gcc __attribute__ macro for checking zlog's format output.\n  * Added support for # comments in configuration file.\n\n -- [Hardy Simpson] <hardysimpson1984@gmail.com>\n\nzlog (1.2.5) unstable; urgency=medium\n\n  * Ensured automatic deletion of thread on single-thread exit using atexit.\n  * Cached multiple times to ensure every %d is cached every second during strftime.\n  * Removed usage of %D, although library still supports it, documentation and example code use %d.\n  * Fixed makefile for static linking zlog-chk-conf.\n\n -- [Hardy Simpson] <hardysimpson1984@gmail.com>\n\nzlog (1.2.4) unstable; urgency=medium\n\n  * No longer maintains thread_list; checks configuration for updates during each log write.\n  \n -- [Hardy Simpson] <hardysimpson1984@gmail.com>\n\nzlog (1.2.0) unstable; urgency=medium\n\n  * Introduced rotate and zip scheme.\n  * Globalized some static variables to reduce interface parameters.\n  * Added fstat64.\n  * Implemented pipe, cronolog.\n  * Ignored second parameter in record.\n  * Cross-platform support for __VA_ARGS__.\n  * Added git/version flags in code (redis).\n  * Removed auto tools, using custom makefile (redis).\n  * Lowercased macros.\n  * Used const.\n  * Introduced per-thread rule->file fd write time.\n  * Used time for reload conf period calculation.\n  * Added zlog_set_conf(\"section\", \"command\").\n  * Rewrote format, spec, level using direct arrays for improved performance.\n  * Added manpage, df, examples.\n\n -- [Hardy Simpson] <hardysimpson1984@gmail.com>\n\nzlog (1.1.3) unstable; urgency=medium\n\n  * Dynamically adjusted zlog_record.\n  \n -- [Hardy Simpson] <hardysimpson1984@gmail.com>\n\nzlog (1.1.2) unstable; urgency=medium\n\n  * Corrected rule.c, capped path_buf.\n  \n -- [Hardy Simpson] <hardysimpson1984@gmail.com>\n\nzlog (1.1.1) unstable; urgency=medium\n\n  * Corrected rule.c, avoided using FILE* to prevent interleaved logs.\n\n -- [Hardy Simpson] <hardysimpson1984@gmail.com>\n\nzlog (1.1.0) unstable; urgency=medium\n\n  * Switched spec to switch loop, introduced bit-wise lock-free checks.\n  * Established bit flags for us, srcline.\n  * Added pthread_key_t for thread-private storage.\n  * Added %D, cached strftime results.\n  * Cached pid, tid as strings.\n  * Removed rc usage (redis).\n  * Cleaned up ZLOG_FMT and ZLOG_HEX.\n\n -- [Hardy Simpson] <hardysimpson1984@gmail.com>\n\nzlog (1.0.7) unstable; urgency=medium\n\n  * Partial implementation of custom strftime for efficiency.\n  * %t displayed in hexadecimal.\n  * Various minor performance optimizations.\n\n -- [Hardy Simpson] <hardysimpson1984@gmail.com>\n\nzlog (1.0.6) unstable; urgency=medium\n\n  * Obtained localtime_r every second for over 1x acceleration.\n\n -- [Hardy Simpson] <hardysimpson1984@gmail.com>\n\nzlog (1.0.5) unstable; urgency=medium\n\n  * Fixed issue from 1.0.4; used read-write lock for reopening files.\n\n -- [Hardy Simpson] <hardysimpson1984@gmail.com>\n\nzlog (1.0.4) unstable; urgency=medium\n\n  * Tested multi-threading efficiency.\n  * Cached static file's FILE* and fd for 3x optimization.\n\n -- [Hardy Simpson] <hardysimpson1984@gmail.com>\n\nzlog (1.0.3) unstable; urgency=medium\n\n  * Automatic configuration refresh based on log count.\n  * Automatic sync to disk based on log count.\n\n -- [Hardy Simpson] <hardysimpson1984@gmail.com>\n\nzlog (1.0.2) unstable; urgency=medium\n\n  * Added synchronous write to disk option (time-consuming when open).\n  \n -- [Hardy Simpson] <hardysimpson1984@gmail.com>\n\nzlog (1.0.1) unstable; urgency=medium\n\n  * Used configuration file as lock file.\n\n -- [Hardy Simpson] <hardysimpson1984@gmail.com>\n\nzlog (1.0.0) unstable; urgency=medium\n\n  * Changed configuration file layout.\n  * Made reload atomic, falling back to old on failure.\n  * Optimized spec_gen_msg using custom buf_append alignment.\n  * Introduced __func__.\n  * Set file permissions.\n  * Customizable output function.\n\n -- [Hardy Simpson] <hardysimpson1984@gmail.com>\n\nzlog (0.9) unstable; urgency=medium\n\n  * Shifted towards an object-oriented approach.\n  * Used arraylist instead of linklist as an internal data structure.\n  * Improved configuration file format.\n  * Created a thread-safe logging function library.\n  * Resolved microsecond/millisecond representation in configuration.\n  * Merged event into thread to avoid memory allocation.\n  * Added init API for reading configuration files.\n  * Parsed default format when initialized without configuration, wrote zlog_chk_conf.\n  * Isolated category.\n  * Added update API.\n  * Adjusted buf size dynamically through zlog_init, rebuilt all caches using zlog_update.\n  * Aligned file creation permissions similar to fopen (0666 & (~umask)).\n  * Handled syslog output, though syslog was found slow.\n  * Traditional mode for rotation, polling, etc.\n  * Added zlog_profile API for diagnosing configuration memory.\n  * Added MDC with configurable additional fields.\n  * Tested buffer rewriting to ensure trailing \\0.\n  * Renamed xlog to zlog.\n  * Retrieved ZLOG_ERROR_LOG and ZLOG_DEBUG_LOG once to avoid multiple getenv calls.\n  * Closed zc_assert by default, opened for debugging.\n  * Added match for !.*, matching unmatched categories.\n  * Changed priority to level.\n  * Customizable level.\n  * Syslog open in rule.\n  * Moved default format to global configuration.\n  * Reset level using arraylist.\n  * Introduced ylog, simplified interface, renamed to dzlog.\n  * Added zlog-gen-conf.\n  * Controlled rotate count.\n  * Abandoned ideas:\n    - [x] Used writev to write logs, improve efficiency, achieve one-time formation, multiple outputs -- writev internally also uses buffer memcpy.\n    - [x] Tried semaphore method to make it thread-safe for archiving mutual exclusion problems.\n    - [x] zlog.h variable-length parameter macro problem (refer to glib's log solution).\n    - [x] dynamic] file in rule can be obtained from format.\n    - [x] Modified arraylist read length, loop, etc.\n    - [x] Specified whether to use threads during runtime.\n    - [x] buf_append optimization -- for safety, did not optimize this.\n    - [x] Used some automatic compiler and document generator.\n    - [x] Output to pipes, named pipes same as files.\n    - [x] Print stack... may need language support.\n    - [x] zlog-input -c category -p priority -f conf.\n    - [x] Used fine-grained reo en method to intelligently determine whether to reopen the file with fo en, the operating system itself has done well enough, no need to do.\n\n -- [Hardy Simpson] <hardysimpson1984@gmail.com>\n\n\n"
        },
        {
          "name": "INSTALL",
          "type": "blob",
          "size": 0.0087890625,
          "content": "README.md"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.4111328125,
          "content": "# Top level makefile, the real shit is at src/makefile\n\nTARGETS=noopt 32bit\n\nall:\n\tcd src && $(MAKE) $@\n\ninstall:\n\tcd src && $(MAKE) $@\n\n$(TARGETS):\n\tcd src && $(MAKE) $@\n\ndoc:\n\tcd doc && $(MAKE)\n\ntest:\n\tcd test && $(MAKE)\n\nTAGS:\n\tfind . -type f -name \"*.[ch]\" | xargs etags -\n\nclean:\n\tcd src && $(MAKE) $@\n\tcd test && $(MAKE) $@\n\tcd doc && $(MAKE) $@\n\trm -f TAGS\n\ndistclean: clean\n\ndummy:\n\n.PHONY: doc install test TAGS\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.291015625,
          "content": "# zlog\n\nzlog is a reliable, high-performance, thread safe, flexible, clear-model, pure C logging library.\n\nActually, in the C world there was NO good logging library for applications like logback in java or log4cxx in c++.\nUsing printf can work, but can not be redirected or reformatted easily. syslog is slow and is designed for system use.\nSo I wrote zlog.\nIt is faster, safer and more powerful than log4c. So it can be widely used.\n\n## 1. Install\n\nDownloads: <https://github.com/HardySimpson/zlog/releases>\n\n```bash\ntar -zxvf zlog-latest-stable.tar.gz\ncd zlog-latest-stable/\nmake \nsudo make install\n```\n\nOr\n\n```bash\nmake PREFIX=/usr/local/\nsudo make PREFIX=/usr/local/ install\n```\n\nPREFIX indicates the installation destination for zlog. After installation, refresh your dynamic linker to make sure\nyour program can find zlog library.\n\n```bash\n$ sudo vi /etc/ld.so.conf\n/usr/local/lib\n$ sudo ldconfig\n```\n\nBefore running a real program, make sure libzlog.so is in the directory where the system's dynamic lib loader can find\nit. The command metioned above are for linux. Other systems will need a similar set of actions.\n\n## 2. Configuration file\n\nThere are 3 important concepts in zlog: categories, formats and rules.\n\nCategories specify different kinds of log entries. In the zlog source code, category is a `zlog_category_t *` variable.\nIn your program, different categories for the log entries will distinguish them from each other.\n\nFormats describe log patterns, such as: with or without time stamp, source file, source line.\n\nRules consist of category, level, output file (or other channel) and format. In brief, if the category string in a rule\nin the configuration file equals the name of a category variable in the source, then they match. Still there is complex\nmatch range of category. Rule decouples variable conditions. For example, log4j must specify a level for each logger(or\ninherit from father logger). That's not convenient when each grade of logger has its own level for output(child logger\noutput at the level of debug, when father logger output at the level of error)\n\nNow create a configuration file. The function zlog_init takes the files path as its only argument.\n\n```bash\n$ cat /etc/zlog.conf\n\n[formats]\nsimple = \"%m%n\"\n[rules]\nmy_cat.DEBUG    >stdout; simple\n```\n\nIn the configuration file log messages in the category `my_cat` and a level of DEBUG or higher are output to standard\noutput, with the format of simple `%m - usermessage %n - newline`. If you want to direct out to a file and limit the\nfiles maximum size, use this configuration\n\n```config\nmy_cat.DEBUG            \"/var/log/aa.log\", 1M; simple\n```\n\n## 3. Using zlog API in C source file\n\n### 3.1 Sample code\n\n```bash\n$ vi test_hello.c\n\n#include <stdio.h> \n\n#include \"zlog.h\"\n\nint main(int argc, char** argv)\n{\n    int rc;\n    zlog_category_t *c;\n\n    rc = zlog_init(\"/etc/zlog.conf\");\n    if (rc) {\n    printf(\"init failed\\n\");\n    return -1;\n    }\n\n    c = zlog_get_category(\"my_cat\");\n    if (!c) {\n    printf(\"get cat fail\\n\");\n    zlog_fini();\n    return -2;\n    }\n\n    zlog_info(c, \"hello, zlog\");\n\n    zlog_fini();\n\n    return 0;\n}\n```\n\n### 3.2 Compile, and run it\n\n```bash\n$ cc -c -o test_hello.o test_hello.c -I/usr/local/include\n$ cc -o test_hello test_hello.o -L/usr/local/lib -lzlog -lpthread\n$ ./test_hello\nhello, zlog\n```\n\n## 4. Advanced Usage\n\n* syslog model, better than log4j model\n* log format customization\n* multiple output destinations including static file path, dynamic file path, stdout, stderr, syslog, user-defined\n  output\n* runtime manually or automatically refresh configure(safely)\n* high-performance, 250'000 logs/second on my laptop, about 1000 times faster than syslog(3) with rsyslogd\n* user-defined log level\n* thread-safe and process-safe log file rotation\n* microsecond accuracy\n* dzlog, a default category log API for easy use\n* MDC, a log4j style key-value map\n* self debuggable, can output zlog's self debug&error log at runtime\n* No external dependencies, just based on a POSIX system and a C99 compliant vsnprintf.\n\n## 5. Reference\n\n* Homepage: <http://hardysimpson.github.io/zlog>\n* Downloads: <https://github.com/HardySimpson/zlog/releases>\n* Author's Email: <HardySimpson1984@gmail.com>\n* Auto tools version: <https://github.com/bmanojlovic/zlog>\n* CMake verion: <https://github.com/lisongmin/zlog>\n* Windows version: <https://github.com/lopsd07/WinZlog>\n"
        },
        {
          "name": "TODO",
          "type": "blob",
          "size": 0.5888671875,
          "content": "[p] 使用valgrind测试性能\n[ ] 更好的错误展现,当系统出问题的时候直接报错\n[ ] hzlog的可定制\n[ ] hex那段重写,内置到buf内,参考od的设计\n[ ] 分类匹配的可定制化, rcat\n[ ] 自行管理文件缓存，替代stdio\n[ ] 减少dynamic文件名open的次数，通过日期改变智能推断, file_table?\n[ ] async file输出的增加\n[ ] 兼容性问题 zlog.h内\n[ ] 增加trace级别\n[ ] gettid()\n[ ] 性能对比, log4x, pantheios, glog\n[ ] perl, python, go, c++支持\n[ ] redis对接,协议设计\n[ ] 和rsyslog对接的问题\n[x] linux fsync->fdatasync, open..\n\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "cpack",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "zlog.spec",
          "type": "blob",
          "size": 0.81640625,
          "content": "Name:           zlog\nVersion:        1.2.8\nRelease:        1\nSummary:        zlog logger framework\n\nLicense:        Apache License, Version 2.0\nURL:            http://hardysimpson.github.io/zlog/\n\nBuildRequires:  gcc make\n\n%define _builddir %(echo $PWD)\n\n%description\nAIRTAME Web Service is powering the setup page.\n\n%build\n\nmake clean all \n\n%install\ninstall -d '%{buildroot}/usr/include'\ninstall -d '%{buildroot}/usr/lib'\ncp src/zlog.h '%{buildroot}/usr/include/zlog.h'\ncp src/libzlog.a '%{buildroot}/usr/lib/libzlog.a'\ncp src/libzlog.so.1.2 '%{buildroot}/usr/lib/libzlog.so.1.2'\nln -sf /usr/lib/libzlog.so.1.2 '%{buildroot}/usr/lib/libzlog.so.1'\nln -sf /usr/lib/libzlog.so.1.2 '%{buildroot}/usr/lib/libzlog.so'\n\n%clean\n\n%files\n/usr/include/zlog.h\n/usr/lib/libzlog.a\n/usr/lib/libzlog.so\n/usr/lib/libzlog.so.1\n/usr/lib/libzlog.so.1.2\n\n\n"
        }
      ]
    }
  ]
}