{
  "metadata": {
    "timestamp": 1736709685601,
    "page": 51,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "laruence/yaf",
      "stars": 4520,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".appveyor.yml",
          "type": "blob",
          "size": 7.806640625,
          "content": "image: Visual Studio 2015\nversion: '{branch}.{build}'\n\nclone_folder: c:\\projects\\yaf\n\ninstall:\n    ps: |\n        if (-not (Test-Path c:\\build-cache)) {\n            mkdir c:\\build-cache\n        }\n        $bname = 'php-sdk-' + $env:BIN_SDK_VER + '.zip'\n        if (-not (Test-Path c:\\build-cache\\$bname)) {\n            Invoke-WebRequest \"https://github.com/microsoft/php-sdk-binary-tools/archive/$bname\" -OutFile \"c:\\build-cache\\$bname\"\n        }\n        $dname0 = 'php-sdk-binary-tools-php-sdk-' + $env:BIN_SDK_VER\n        $dname1 = 'php-sdk-' + $env:BIN_SDK_VER\n        if (-not (Test-Path c:\\build-cache\\$dname1)) {\n            7z x c:\\build-cache\\$bname -oc:\\build-cache\n            move c:\\build-cache\\$dname0 c:\\build-cache\\$dname1\n        }\n\ncache:\n  - c:\\build-cache -> .appveyor.yml\n\nenvironment:\n    BIN_SDK_VER: 2.2.0\n    matrix:\n        - PHP_VER: 8.0.0\n          ARCH: x64\n          TS: 1\n          VC: vs16\n          APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019\n        - PHP_VER: 8.0.0\n          ARCH: x64\n          TS: 0\n          VC: vs16\n          APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019\n        - PHP_VER: 8.0.0\n          ARCH: x86\n          TS: 1\n          VC: vs16\n          APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019\n        - PHP_VER: 8.0.0\n          ARCH: x86\n          TS: 0\n          VC: vs16\n          APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019\n        - PHP_VER: 7.4.0\n          ARCH: x64\n          TS: 1\n          VC: vc15\n          APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017\n        - PHP_VER: 7.4.0\n          ARCH: x64\n          TS: 0\n          VC: vc15\n          APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017\n        - PHP_VER: 7.3.13\n          ARCH: x64\n          TS: 1\n          VC: vc15\n          APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017\n        - PHP_VER: 7.3.13\n          ARCH: x64\n          TS: 0\n          VC: vc15\n          APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017\n        - PHP_VER: 7.2.26\n          ARCH: x64\n          TS: 1\n          VC: vc15\n          APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017\n        - PHP_VER: 7.2.26\n          ARCH: x64\n          TS: 0\n          VC: vc15\n          APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017\n        - PHP_VER: 7.1.33\n          ARCH: x64\n          TS: 1\n          VC: vc14\n          APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015\n        - PHP_VER: 7.1.33\n          ARCH: x64\n          TS: 0\n          VC: vc14\n          APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015\n\nbuild_script:\n    ps: |\n        $ts_part = ''\n        if ('0' -eq $env:TS) { $ts_part = '-nts' }\n        $bname = 'php-devel-pack-' + $env:PHP_VER + $ts_part + '-Win32-' + $env:VC.toUpper() + '-' + $env:ARCH + '.zip'\n        if (-not (Test-Path c:\\build-cache\\$bname)) {\n            Invoke-WebRequest \"http://windows.php.net/downloads/releases/archives/$bname\" -OutFile \"c:\\build-cache\\$bname\"\n            if (-not (Test-Path c:\\build-cache\\$bname)) {\n                Invoke-WebRequest \"http://windows.php.net/downloads/releases/$bname\" -OutFile \"c:\\build-cache\\$bname\"\n            }\n        }\n        $dname0 = 'php-' + $env:PHP_VER + '-devel-' + $env:VC.toUpper() + '-' + $env:ARCH\n        $dname1 = 'php-' + $env:PHP_VER + $ts_part + '-devel-' + $env:VC.toUpper() + '-' + $env:ARCH\n        if (-not (Test-Path c:\\build-cache\\$dname1)) {\n            7z x c:\\build-cache\\$bname -oc:\\build-cache\n            if ($dname0 -ne $dname1) {\n                move c:\\build-cache\\$dname0 c:\\build-cache\\$dname1\n            }\n        }\n        cd c:\\projects\\yaf\n        $env:PATH = 'c:\\build-cache\\' + $dname1 + ';' + $env:PATH\n        #echo \"@echo off\" | Out-File -Encoding \"ASCII\" task.bat\n        #echo \"\" | Out-File -Encoding \"ASCII\" -Append task.bat\n        echo \"\" | Out-File -Encoding \"ASCII\" task.bat\n        echo \"call phpize 2>&1\" | Out-File -Encoding \"ASCII\" -Append task.bat\n        echo \"call configure --enable-yaf --enable-debug-pack 2>&1\" | Out-File -Encoding \"ASCII\" -Append task.bat\n        echo \"nmake /nologo 2>&1\" | Out-File -Encoding \"ASCII\" -Append task.bat\n        echo \"exit %errorlevel%\" | Out-File -Encoding \"ASCII\" -Append task.bat\n        $here = (Get-Item -Path \".\" -Verbose).FullName\n        $runner = 'c:\\build-cache\\php-sdk-' + $env:BIN_SDK_VER + '\\phpsdk' + '-' + $env:VC + '-' + $env:ARCH + '.bat'\n        $task = $here + '\\task.bat'\n        & $runner -t $task\n\nafter_build:\n    ps: |\n        $ts_part = ''\n        if ('0' -eq $env:TS) { $ts_part = '-nts' }\n        $arch_part = ''\n        if ('x64' -eq $env:ARCH) { $arch_part = '-x86_64' }\n        if ($env:APPVEYOR_REPO_TAG -eq \"true\") {\n            $bname = 'php_yaf-' + $env:APPVEYOR_REPO_TAG_NAME + '-' + $env:PHP_VER.substring(0, 3) + '-' + $env:VC + $ts_part + $arch_part\n        } else {\n            #$bname = 'php_yaf-' + $env:APPVEYOR_REPO_COMMIT.substring(0, 8) + '-' + $env:PHP_VER.substring(0, 3) + '-' + $env:VC + $ts_part + $arch_part\n            $bname = 'php_yaf-' + $env:PHP_VER.substring(0, 3) + '-' + $env:VC + $ts_part + $arch_part\n        }\n        $zip_bname = $bname + '.zip'\n        $dll_bname = $bname + '.dll'\n\n        $dir = 'c:\\projects\\yaf\\';\n        if ('x64' -eq $env:ARCH) { $dir = $dir + 'x64\\' }\n        $dir = $dir + 'Release'\n        if ('1' -eq $env:TS) { $dir = $dir + '_TS' }\n\n        cp $dir\\php_yaf.dll $dir\\$dll_bname\n        & 7z a c:\\$zip_bname $dir\\$dll_bname $dir\\php_yaf.pdb c:\\projects\\yaf\\LICENSE\n        Push-AppveyorArtifact c:\\$zip_bname\n\ntest_script:\n    ps: |\n        $ts_part = ''\n        if ('0' -eq $env:TS) { $ts_part = '-nts' }\n        $bname = 'php-' + $env:PHP_VER + $ts_part + '-Win32-' + $env:VC.toUpper() + '-' + $env:ARCH + '.zip'\n        if (-not (Test-Path c:\\build-cache\\$bname)) {\n            Invoke-WebRequest \"http://windows.php.net/downloads/releases/archives/$bname\" -OutFile \"c:\\build-cache\\$bname\"\n            if (-not (Test-Path c:\\build-cache\\$bname)) {\n                Invoke-WebRequest \"http://windows.php.net/downloads/releases/$bname\" -OutFile \"c:\\build-cache\\$bname\"\n            }\n        }\n        $dname = 'php-' + $env:PHP_VER + $ts_part + '-' + $env:VC.toUpper() + '-' + $env:ARCH\n        if (-not (Test-Path c:\\build-cache\\$dname)) {\n            7z x c:\\build-cache\\$bname -oc:\\build-cache\\$dname\n        }\n        \n        $dir = 'c:\\projects\\yaf\\';\n        if ('x64' -eq $env:ARCH) { $dir = $dir + 'x64\\' }\n        $dir = $dir + 'Release'\n        if ('1' -eq $env:TS) { $dir = $dir + '_TS' }\n\n        $yaf_dll_opt = '-d extension=' + $dir + '\\php_yaf.dll'\n\n\n        cd c:\\projects\\yaf\n        mkdir c:\\tests_tmp\n        echo \"\" | Out-File -Encoding \"ASCII\" task.bat\n        echo \"set REPORT_EXIT_STATUS=1\" | Out-File -Encoding \"ASCII\" -Append task.bat\n        $cmd = 'call configure --enable-yaf --with-prefix=c:\\build-cache\\' + $dname + \" 2>&1\"\n        echo $cmd | Out-File -Encoding \"ASCII\" -Append task.bat\n\n        $opts = 'set TEST_PHP_ARGS=-n -d foo=yes'\n        if ('yes' -eq $env:OPCACHE) { $opts = $opts + ' -d zend_extension=c:\\build-cache\\' + $dname + '\\ext\\php_opcache.dll -d opcache.enabled=1 -d opcache.enable_cli=1' }\n        $opts = $opts + ' ' + $yaf_dll_opt\n        echo $opts | Out-File -Encoding \"ASCII\" -Append task.bat\n\n        $php = \"c:\\\\build-cache\\\\\" + $dname + '\\php.exe'\n        $test_php_exec = \"set TEST_PHP_EXECUTABLE=\" + $php\n        echo $test_php_exec | Out-File -Encoding \"ASCII\" -Append task.bat\n        $tcmd = $php + ' run-tests.php -q --offline --show-diff --set-timeout 120 -g FAIL,XFAIL,BORK,WARN,LEAK,SKIP --temp-source c:\\tests_tmp --temp-target c:\\tests_tmp -p c:\\build-cache\\' + $dname + '\\php.exe'\n        echo $tcmd | Out-File -Encoding \"ASCII\" -Append task.bat\n        echo \"exit %errorlevel%\" | Out-File -Encoding \"ASCII\" -Append task.bat\n\n        $here = (Get-Item -Path \".\" -Verbose).FullName\n        $runner = 'c:\\build-cache\\php-sdk-' + $env:BIN_SDK_VER + '\\phpsdk' + '-' + $env:VC + '-' + $env:ARCH + '.bat'\n        $task = $here + '\\task.bat'\n        & $runner -t $task\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.013671875,
          "content": "*.phpt eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "CREDITS",
          "type": "blob",
          "size": 0.015625,
          "content": "Yaf\nXinchen Hui\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 3.142578125,
          "content": "-------------------------------------------------------------------- \n                  The PHP License, version 3.01\nCopyright (c) 1999 - 2011 The PHP Group. All rights reserved.\n-------------------------------------------------------------------- \n\nRedistribution and use in source and binary forms, with or without\nmodification, is permitted provided that the following conditions\nare met:\n\n  1. Redistributions of source code must retain the above copyright\n     notice, this list of conditions and the following disclaimer.\n \n  2. Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n     distribution.\n \n  3. The name \"PHP\" must not be used to endorse or promote products\n     derived from this software without prior written permission. For\n     written permission, please contact group@php.net.\n  \n  4. Products derived from this software may not be called \"PHP\", nor\n     may \"PHP\" appear in their name, without prior written permission\n     from group@php.net.  You may indicate that your software works in\n     conjunction with PHP by saying \"Foo for PHP\" instead of calling\n     it \"PHP Foo\" or \"phpfoo\"\n \n  5. The PHP Group may publish revised and/or new versions of the\n     license from time to time. Each version will be given a\n     distinguishing version number.\n     Once covered code has been published under a particular version\n     of the license, you may always continue to use it under the terms\n     of that version. You may also choose to use such covered code\n     under the terms of any subsequent version of the license\n     published by the PHP Group. No one other than the PHP Group has\n     the right to modify the terms applicable to covered code created\n     under this License.\n\n  6. Redistributions of any form whatsoever must retain the following\n     acknowledgment:\n     \"This product includes PHP software, freely available from\n     <http://www.php.net/software/>\".\n\nTHIS SOFTWARE IS PROVIDED BY THE PHP DEVELOPMENT TEAM ``AS IS'' AND \nANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \nPARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE PHP\nDEVELOPMENT TEAM OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, \nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR \nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\nSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\nOF THE POSSIBILITY OF SUCH DAMAGE.\n\n-------------------------------------------------------------------- \n\nThis software consists of voluntary contributions made by many\nindividuals on behalf of the PHP Group.\n\nThe PHP Group can be contacted via Email at group@php.net.\n\nFor more information on the PHP Group and the PHP project, \nplease see <http://www.php.net>.\n\nPHP includes the Zend Engine, freely available at\n<http://www.zend.com>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.75,
          "content": "# Yaf - Yet Another Framework  \n[![Build status](https://ci.appveyor.com/api/projects/status/awii6wf2ocmy202p/branch/master?svg=true)](https://ci.appveyor.com/project/laruence/yaf/branch/master) [![Build Status](https://github.com/laruence/yaf/workflows/integrate/badge.svg)](https://github.com/laruence/yaf/actions?query=workflow%3Aintegrate)\n\nPHP framework written in c and built as a PHP extension.\n\n## Requirement\n- PHP 7.0+  (master branch))\n- PHP 5.2+  ([php5 branch](https://github.com/laruence/yaf/tree/php5))\n\n## Install\n### Install Yaf \nYaf is a PECL extension, thus you can simply install it by:\n\n```\n$pecl install yaf\n```\n### Compile Yaf in Linux\n```\n$/path/to/phpize\n$./configure --with-php-config=/path/to/php-config\n$make && make install\n```\n\n## Document\nYaf manual could be found at: http://www.php.net/manual/en/book.yaf.php\n\n## IRC\nefnet.org #php.yaf\n\n## For IDE\nYou could find a documented prototype script here: https://github.com/elad-yosifon/php-yaf-doc\n\n## Tutorial\n\n### layout\nA classic application directory layout:\n\n```\n- .htaccess // Rewrite rules\n+ public\n  | - index.php // Application entry\n  | + css\n  | + js\n  | + img\n+ conf\n  | - application.ini // Configure \n- application/\n  - Bootstrap.php   // Bootstrap\n  + controllers\n     - Index.php // Default controller\n  + views    \n     |+ index   \n        - index.phtml // View template for default controller\n  + library // libraries\n  + models  // Models\n  + plugins // Plugins\n```\n### DocumentRoot\nYou should set `DocumentRoot` to `application/public`, thus only the public folder can be accessed by user\n\n### index.php\n`index.php` in the public directory is the only way in of the application, you should rewrite all request to it(you can use `.htaccess` in Apache+php mod) \n\n```php\n<?php\ndefine(\"APPLICATION_PATH\",  dirname(dirname(__FILE__)));\n\n$app  = new Yaf_Application(APPLICATION_PATH . \"/conf/application.ini\");\n$app->bootstrap() //call bootstrap methods defined in Bootstrap.php\n    ->run();\n```\n### Rewrite rules\n\n#### Apache\n\n```conf\n#.htaccess\nRewriteEngine On\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteRule .* index.php\n```\n\n#### Nginx\n\n```\nserver {\n  listen ****;\n  server_name  domain.com;\n  root   document_root;\n  index  index.php index.html index.htm;\n \n  if (!-e $request_filename) {\n    rewrite ^/(.*)  /index.php/$1 last;\n  }\n}\n```\n\n#### Lighttpd\n\n```\n$HTTP[\"host\"] =~ \"(www.)?domain.com$\" {\n  url.rewrite = (\n     \"^/(.+)/?$\"  => \"/index.php/$1\",\n  )\n}\n```\n\n### application.ini\n`application.ini` is the application config file\n```ini\n[product]\n;CONSTANTS is supported\napplication.directory = APPLICATION_PATH \"/application/\" \n```\nAlternatively, you can use a PHP array instead: \n```php\n<?php\n$config = array(\n   \"application\" => array(\n       \"directory\" => application_path . \"/application/\",\n    ),\n);\n\n$app  = new yaf_application($config);\n....\n  \n```\n### default controller\nIn Yaf, the default controller is named `IndexController`:\n\n```php\n<?php\nclass IndexController extends Yaf_Controller_Abstract {\n   // default action name\n   public function indexAction() {  \n        $this->getView()->content = \"Hello World\";\n   }\n}\n?>\n```\n\n### view script\nThe view script for default controller and default action is in the application/views/index/index.phtml, Yaf provides a simple view engine called \"Yaf_View_Simple\", which support the view template written in PHP.\n\n```php\n<html>\n <head>\n   <title>Hello World</title>\n </head>\n <body>\n   <?php echo $content; ?>\n </body>\n</html>\n```\n\n## Run the Application\n  http://www.example.com\n\n## Alternative\nYou can generate the example above by using Yaf Code Generator:  https://github.com/laruence/php-yaf/tree/master/tools/cg\n```\n./yaf_cg -d output_directory [-a application_name] [--namespace]\n```\n\n## More\nMore info could be found at Yaf Manual: http://www.php.net/manual/en/book.yaf.php\n"
        },
        {
          "name": "check-package.sh",
          "type": "blob",
          "size": 0.1337890625,
          "content": "#!/bin/bash\n\nfor src in *.c */*.c *.h */*.h tests/*phpt tests/*ini\ndo\n  grep -q $(basename $src) package.xml || echo \"Missing $src\"\ndone\n"
        },
        {
          "name": "config.m4",
          "type": "blob",
          "size": 2.3271484375,
          "content": "PHP_ARG_ENABLE(yaf, whether to enable yaf support,\n[  --enable-yaf           Enable yaf support])\n\nif test \"$PHP_YAF\" != \"no\"; then\n\n  AC_MSG_CHECKING([PHP version])\n\n  tmp_version=$PHP_VERSION\n  if test -z \"$tmp_version\"; then\n    if test -z \"$PHP_CONFIG\"; then\n      AC_MSG_ERROR([php-config not found])\n    fi\n    php_version=`$PHP_CONFIG --version 2>/dev/null|head -n 1|sed -e 's#\\([0-9]\\.[0-9]*\\.[0-9]*\\)\\(.*\\)#\\1#'`\n  else\n    php_version=`echo \"$tmp_version\"|sed -e 's#\\([0-9]\\.[0-9]*\\.[0-9]*\\)\\(.*\\)#\\1#'`\n  fi\n\n  if test -z \"$php_version\"; then\n    AC_MSG_ERROR([failed to detect PHP version, please report])\n  fi\n\n  ac_IFS=$IFS\n  IFS=\".\"\n  set $php_version\n  IFS=$ac_IFS\n  yaf_php_version=`expr [$]1 \\* 1000000 + [$]2 \\* 1000 + [$]3`\n\n  if test \"$yaf_php_version\" -le \"5002000\"; then\n    AC_MSG_ERROR([You need at least PHP 5.2.0 to be able to use this version of Yaf. PHP $php_version found])\n  else\n    AC_MSG_RESULT([$php_version, ok])\n  fi\n  PHP_NEW_EXTENSION(yaf, \n    yaf.c                           \\\n    yaf_application.c               \\\n    yaf_bootstrap.c                 \\\n    yaf_dispatcher.c                \\\n    yaf_exception.c                 \\\n    yaf_config.c                    \\\n    configs/yaf_config_ini.c        \\\n    configs/yaf_config_simple.c     \\\n    yaf_request.c                   \\\n    requests/yaf_request_http.c     \\\n    requests/yaf_request_simple.c   \\\n    yaf_response.c                  \\\n    responses/yaf_response_http.c   \\\n    responses/yaf_response_cli.c    \\\n    yaf_view.c                      \\\n    views/yaf_view_interface.c      \\\n    views/yaf_view_simple.c         \\\n    yaf_controller.c                \\\n    yaf_action.c                    \\\n    yaf_router.c                    \\\n    routes/yaf_route_interface.c    \\\n    routes/yaf_route_static.c       \\\n    routes/yaf_route_simple.c       \\\n    routes/yaf_route_supervar.c     \\\n    routes/yaf_route_regex.c        \\\n    routes/yaf_route_rewrite.c      \\ \n    routes/yaf_route_map.c          \\\n    yaf_loader.c                    \\\n    yaf_registry.c                  \\\n    yaf_plugin.c                    \\\n    yaf_session.c,\n  $ext_shared)\n  PHP_ADD_BUILD_DIR([$ext_builddir/configs])\n  PHP_ADD_BUILD_DIR([$ext_builddir/requests])\n  PHP_ADD_BUILD_DIR([$ext_builddir/responses])\n  PHP_ADD_BUILD_DIR([$ext_builddir/views])\n  PHP_ADD_BUILD_DIR([$ext_builddir/routes])\nfi\n"
        },
        {
          "name": "config.w32",
          "type": "blob",
          "size": 1.0966796875,
          "content": "// $Id: config.w32 765 2010-10-21 13:04:03Z huixinchen $\n// vim:ft=javascript\n\nARG_ENABLE(\"yaf\", \"enable yaf support\", \"no\");\n\nif (PHP_YAF == \"yes\") {\n\n\tEXTENSION(\"yaf\", \"yaf.c yaf_application.c yaf_bootstrap.c yaf_dispatcher.c yaf_exception.c yaf_config.c  yaf_request.c yaf_response.c yaf_view.c yaf_controller.c yaf_action.c yaf_router.c yaf_loader.c yaf_registry.c yaf_plugin.c yaf_session.c\");\n\n\tADD_FLAG(\"CFLAGS_YAF\", \"/I \" + configure_module_dirname);\n\n\tADD_SOURCES(configure_module_dirname + \"\\\\configs\", \"yaf_config_ini.c yaf_config_simple.c\", \"yaf\");\n\tADD_SOURCES(configure_module_dirname + \"\\\\requests\", \"yaf_request_http.c yaf_request_simple.c\", \"yaf\");\n\tADD_SOURCES(configure_module_dirname + \"\\\\responses\", \"yaf_response_http.c yaf_response_cli.c\", \"yaf\");\n\tADD_SOURCES(configure_module_dirname + \"\\\\views\", \"yaf_view_interface.c yaf_view_simple.c\", \"yaf\");\n\tADD_SOURCES(configure_module_dirname + \"\\\\routes\", \"yaf_route_interface.c yaf_route_static.c yaf_route_simple.c yaf_route_supervar.c yaf_route_regex.c yaf_route_rewrite.c yaf_route_map.c\", \"yaf\");\n\n    AC_DEFINE(\"HAVE_YAF\", 1, \"Have Yaf Support\");\n}\n"
        },
        {
          "name": "configs",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.xml",
          "type": "blob",
          "size": 42.37890625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?> \n<package xmlns=\"http://pear.php.net/dtd/package-2.0\" xmlns:tasks=\"http://pear.php.net/dtd/tasks-1.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" packagerversion=\"1.4.7\" version=\"2.0\" xsi:schemaLocation=\"http://pear.php.net/dtd/tasks-1.0 http://pear.php.net/dtd/tasks-1.0.xsd http://pear.php.net/dtd/package-2.0 http://pear.php.net/dtd/package-2.0.xsd\"> \n <name>yaf</name>\n <channel>pecl.php.net</channel>\n <summary>PHP Framework in PHP extension</summary>\n <description>Yaf is a PHP framework similar to zend framework, which is written in c and built as PHP extension</description>\n <lead>\n  <name>Xinchen Hui</name>\n  <user>laruence</user>\n  <email>laruence@php.net</email>\n  <active>yes</active>\n </lead>\n <date>2024-06-25</date>\n <time>11:20:00</time>\n <version>\n  <release>3.3.6</release>\n  <api>3.3.6</api>\n </version>\n <stability>\n  <release>stable</release>\n  <api>stable</api>\n </stability>\n <license uri=\"http://www.php.net/license\">PHP</license>\n <notes>\n  - Fixed build with PHP8.3\n </notes>\n <contents> \n  <dir name=\"/\"> \n   <file name=\"config.m4\"    role=\"src\" />\n   <file name=\"yaf_action.c\" role=\"src\" />\n   <file name=\"yaf_action.h\" role=\"src\" />\n   <file name=\"yaf_application.c\" role=\"src\" />\n   <file name=\"yaf_application.h\" role=\"src\" />\n   <file name=\"yaf_application_arginfo.h\" role=\"src\" />\n   <file name=\"yaf_application_legacy_arginfo.h\" role=\"src\" />\n   <file name=\"yaf_bootstrap.c\" role=\"src\" />\n   <file name=\"yaf_bootstrap.h\" role=\"src\" />\n   <file name=\"yaf.c\" role=\"src\" />\n   <file name=\"yaf_config.c\" role=\"src\" />\n   <file name=\"yaf_config.h\" role=\"src\" />\n   <file name=\"yaf_config_arginfo.h\" role=\"src\" />\n   <file name=\"yaf_config_legacy_arginfo.h\" role=\"src\" />\n   <file name=\"yaf_controller.c\" role=\"src\" />\n   <file name=\"yaf_controller.h\" role=\"src\" />\n   <file name=\"yaf_controller_arginfo.h\" role=\"src\" />\n   <file name=\"yaf_controller_legacy_arginfo.h\" role=\"src\" />\n   <file name=\"yaf_dispatcher.c\" role=\"src\" />\n   <file name=\"yaf_dispatcher.h\" role=\"src\" />\n   <file name=\"yaf_dispatcher_arginfo.h\" role=\"src\" />\n   <file name=\"yaf_dispatcher_legacy_arginfo.h\" role=\"src\" />\n   <file name=\"yaf.dsp\" role=\"src\" />\n   <file name=\"yaf_exception.c\" role=\"src\" />\n   <file name=\"yaf_exception.h\" role=\"src\" />\n   <file name=\"yaf_loader.c\" role=\"src\" />\n   <file name=\"yaf_loader.h\" role=\"src\" />\n   <file name=\"yaf_loader_arginfo.h\" role=\"src\" />\n   <file name=\"yaf_loader_legacy_arginfo.h\" role=\"src\" />\n   <file name=\"yaf_logo.h\" role=\"src\" />\n   <file name=\"yaf_namespace.h\" role=\"src\" />\n   <file name=\"yaf.php\" role=\"src\" />\n   <file name=\"yaf_plugin.c\" role=\"src\" />\n   <file name=\"yaf_plugin.h\" role=\"src\" />\n   <file name=\"yaf_plugin_arginfo.h\" role=\"src\" />\n   <file name=\"yaf_registry.c\" role=\"src\" />\n   <file name=\"yaf_registry.h\" role=\"src\" />\n   <file name=\"yaf_registry_arginfo.h\" role=\"src\" />\n   <file name=\"yaf_registry_legacy_arginfo.h\" role=\"src\" />\n   <file name=\"yaf_request.c\" role=\"src\" />\n   <file name=\"yaf_request.h\" role=\"src\" />\n   <file name=\"yaf_request_arginfo.h\" role=\"src\" />\n   <file name=\"yaf_request_legacy_arginfo.h\" role=\"src\" />\n   <file name=\"yaf_response.c\" role=\"src\" />\n   <file name=\"yaf_response.h\" role=\"src\" />\n   <file name=\"yaf_response_arginfo.h\" role=\"src\" />\n   <file name=\"yaf_response_legacy_arginfo.h\" role=\"src\" />\n   <file name=\"yaf_router.c\" role=\"src\" />\n   <file name=\"yaf_router.h\" role=\"src\" />\n   <file name=\"yaf_router_arginfo.h\" role=\"src\" />\n   <file name=\"yaf_router_legacy_arginfo.h\" role=\"src\" />\n   <file name=\"yaf_session.c\" role=\"src\" />\n   <file name=\"yaf_session.h\" role=\"src\" />\n   <file name=\"yaf_session_arginfo.h\" role=\"src\" />\n   <file name=\"yaf_session_legacy_arginfo.h\" role=\"src\" />\n   <file name=\"yaf_view.c\" role=\"src\" />\n   <file name=\"yaf_view.h\" role=\"src\" />\n   <file name=\"yaf_view_arginfo.h\" role=\"src\" />\n   <file name=\"yaf_view_legacy_arginfo.h\" role=\"src\" />\n   <file name=\"yaf_route_arginfo.h\" role=\"src\" />\n   <file name=\"yaf_route_legacy_arginfo.h\" role=\"src\" />\n   <dir name=\"configs\">\n    <file name=\"yaf_config_ini.c\" role=\"src\" />\n    <file name=\"yaf_config_ini.h\" role=\"src\" />\n    <file name=\"yaf_config_simple.c\" role=\"src\" />\n    <file name=\"yaf_config_simple.h\" role=\"src\" />\n   </dir>\n   <file name=\"config.w32\" role=\"src\" />\n   <file name=\"LICENSE\" role=\"doc\" />\n   <file name=\"CREDITS\" role=\"doc\" />\n   <file name=\"php_yaf.h\" role=\"src\" />\n   <dir name=\"requests\">\n    <file name=\"yaf_request_http.c\" role=\"src\" />\n    <file name=\"yaf_request_http.h\" role=\"src\" />\n    <file name=\"yaf_request_simple.c\" role=\"src\" />\n    <file name=\"yaf_request_simple.h\" role=\"src\" />\n   </dir>\n   <dir name=\"responses\">\n    <file name=\"yaf_response_http.c\" role=\"src\" />\n    <file name=\"yaf_response_http.h\" role=\"src\" />\n    <file name=\"yaf_response_cli.c\" role=\"src\" />\n    <file name=\"yaf_response_cli.h\" role=\"src\" />\n   </dir>\n   <dir name=\"routes\">\n    <file name=\"yaf_route_interface.c\" role=\"src\" />\n    <file name=\"yaf_route_interface.h\" role=\"src\" />\n    <file name=\"yaf_route_rewrite.c\" role=\"src\" />\n    <file name=\"yaf_route_rewrite.h\" role=\"src\" />\n    <file name=\"yaf_route_supervar.c\" role=\"src\" />\n    <file name=\"yaf_route_supervar.h\" role=\"src\" />\n    <file name=\"yaf_route_static.c\" role=\"src\" />\n    <file name=\"yaf_route_static.h\" role=\"src\" />\n    <file name=\"yaf_route_simple.c\" role=\"src\" />\n    <file name=\"yaf_route_simple.h\" role=\"src\" />\n    <file name=\"yaf_route_regex.c\" role=\"src\" />\n    <file name=\"yaf_route_regex.h\" role=\"src\" />\n    <file name=\"yaf_route_map.c\" role=\"src\" />\n    <file name=\"yaf_route_map.h\" role=\"src\" />\n   </dir>\n   <dir name=\"views\">\n    <file name=\"yaf_view_interface.c\" role=\"src\" />\n    <file name=\"yaf_view_interface.h\" role=\"src\" />\n    <file name=\"yaf_view_simple.c\" role=\"src\" />\n    <file name=\"yaf_view_simple.h\" role=\"src\" />\n   </dir>\n   <dir name=\"tests\">\n    <file name=\"001.phpt\" role=\"test\" />\n    <file name=\"002.phpt\" role=\"test\" />\n    <file name=\"003.phpt\" role=\"test\" />\n    <file name=\"004.phpt\" role=\"test\" />\n    <file name=\"005.phpt\" role=\"test\" />\n    <file name=\"006.phpt\" role=\"test\" />\n    <file name=\"007.phpt\" role=\"test\" />\n    <file name=\"008.phpt\" role=\"test\" />\n    <file name=\"009.phpt\" role=\"test\" />\n    <file name=\"010.phpt\" role=\"test\" />\n    <file name=\"011.phpt\" role=\"test\" />\n    <file name=\"012.phpt\" role=\"test\" />\n    <file name=\"013.phpt\" role=\"test\" />\n    <file name=\"014.phpt\" role=\"test\" />\n    <file name=\"015.phpt\" role=\"test\" />\n    <file name=\"016.phpt\" role=\"test\" />\n    <file name=\"017.phpt\" role=\"test\" />\n    <file name=\"018.phpt\" role=\"test\" />\n    <file name=\"019.phpt\" role=\"test\" />\n    <file name=\"020.phpt\" role=\"test\" />\n    <file name=\"021.phpt\" role=\"test\" />\n    <file name=\"022.phpt\" role=\"test\" />\n    <file name=\"023.phpt\" role=\"test\" />\n    <file name=\"024.phpt\" role=\"test\" />\n    <file name=\"025.phpt\" role=\"test\" />\n    <file name=\"026.phpt\" role=\"test\" />\n    <file name=\"027.phpt\" role=\"test\" />\n    <file name=\"028.phpt\" role=\"test\" />\n    <file name=\"029.phpt\" role=\"test\" />\n    <file name=\"030.phpt\" role=\"test\" />\n    <file name=\"031.phpt\" role=\"test\" />\n    <file name=\"032.phpt\" role=\"test\" />\n    <file name=\"033.phpt\" role=\"test\" />\n    <file name=\"034.phpt\" role=\"test\" />\n    <file name=\"035.phpt\" role=\"test\" />\n    <file name=\"036.phpt\" role=\"test\" />\n    <file name=\"037.phpt\" role=\"test\" />\n    <file name=\"038.phpt\" role=\"test\" />\n    <file name=\"039.phpt\" role=\"test\" />\n    <file name=\"040.phpt\" role=\"test\" />\n    <file name=\"041.phpt\" role=\"test\" />\n    <file name=\"042.phpt\" role=\"test\" />\n    <file name=\"043.phpt\" role=\"test\" />\n    <file name=\"044.phpt\" role=\"test\" />\n    <file name=\"045.phpt\" role=\"test\" />\n    <file name=\"046.phpt\" role=\"test\" />\n    <file name=\"047.phpt\" role=\"test\" />\n    <file name=\"048.phpt\" role=\"test\" />\n    <file name=\"049.phpt\" role=\"test\" />\n    <file name=\"050.phpt\" role=\"test\" />\n    <file name=\"051.phpt\" role=\"test\" />\n    <file name=\"052.phpt\" role=\"test\" />\n    <file name=\"053.phpt\" role=\"test\" />\n    <file name=\"054.phpt\" role=\"test\" />\n    <file name=\"055.phpt\" role=\"test\" />\n    <file name=\"056.phpt\" role=\"test\" />\n    <file name=\"057.phpt\" role=\"test\" />\n    <file name=\"058.phpt\" role=\"test\" />\n    <file name=\"059.phpt\" role=\"test\" />\n    <file name=\"060.phpt\" role=\"test\" />\n    <file name=\"061.phpt\" role=\"test\" />\n    <file name=\"062.phpt\" role=\"test\" />\n    <file name=\"063.phpt\" role=\"test\" />\n    <file name=\"064.phpt\" role=\"test\" />\n    <file name=\"065.phpt\" role=\"test\" />\n    <file name=\"066.phpt\" role=\"test\" />\n    <file name=\"067.phpt\" role=\"test\" />\n    <file name=\"068.phpt\" role=\"test\" />\n    <file name=\"069.phpt\" role=\"test\" />\n    <file name=\"070.phpt\" role=\"test\" />\n    <file name=\"071.phpt\" role=\"test\" />\n    <file name=\"072.phpt\" role=\"test\" />\n    <file name=\"073.phpt\" role=\"test\" />\n    <file name=\"074.phpt\" role=\"test\" />\n    <file name=\"075.phpt\" role=\"test\" />\n    <file name=\"076.phpt\" role=\"test\" />\n    <file name=\"077.phpt\" role=\"test\" />\n    <file name=\"078.phpt\" role=\"test\" />\n    <file name=\"079.phpt\" role=\"test\" />\n    <file name=\"080.phpt\" role=\"test\" />\n    <file name=\"081.phpt\" role=\"test\" />\n    <file name=\"082.phpt\" role=\"test\" />\n    <file name=\"083.phpt\" role=\"test\" />\n    <file name=\"084.phpt\" role=\"test\" />\n    <file name=\"085.phpt\" role=\"test\" />\n    <file name=\"086.phpt\" role=\"test\" />\n    <file name=\"087.phpt\" role=\"test\" />\n    <file name=\"088.phpt\" role=\"test\" />\n    <file name=\"089.phpt\" role=\"test\" />\n    <file name=\"090.phpt\" role=\"test\" />\n    <file name=\"091.phpt\" role=\"test\" />\n    <file name=\"092.phpt\" role=\"test\" />\n    <file name=\"093.phpt\" role=\"test\" />\n    <file name=\"094.phpt\" role=\"test\" />\n    <file name=\"095.phpt\" role=\"test\" />\n    <file name=\"096.phpt\" role=\"test\" />\n    <file name=\"097.phpt\" role=\"test\" />\n    <file name=\"098.phpt\" role=\"test\" />\n    <file name=\"099.phpt\" role=\"test\" />\n    <file name=\"100.phpt\" role=\"test\" />\n    <file name=\"101.phpt\" role=\"test\" />\n    <file name=\"102.phpt\" role=\"test\" />\n    <file name=\"103.phpt\" role=\"test\" />\n    <file name=\"104.phpt\" role=\"test\" />\n    <file name=\"105.phpt\" role=\"test\" />\n    <file name=\"106.phpt\" role=\"test\" />\n    <file name=\"107.phpt\" role=\"test\" />\n    <file name=\"108.phpt\" role=\"test\" />\n    <file name=\"109.phpt\" role=\"test\" />\n    <file name=\"110.phpt\" role=\"test\" />\n    <file name=\"build.inc\" role=\"test\" />\n    <file name=\"bug61493.phpt\" role=\"test\" />\n    <file name=\"bug63381.phpt\" role=\"test\" />\n    <file name=\"bug63438.phpt\" role=\"test\" />\n    <file name=\"bug63900.phpt\" role=\"test\" />\n    <file name=\"bug62702.phpt\" role=\"test\" />\n    <file name=\"bug70913.phpt\" role=\"test\" />\n    <file name=\"bug76213.phpt\" role=\"test\" />\n    <file name=\"bug76217.phpt\" role=\"test\" />\n    <file name=\"issue134.phpt\" role=\"test\" />\n    <file name=\"issue163.phpt\" role=\"test\" />\n    <file name=\"issue231.phpt\" role=\"test\" />\n    <file name=\"issue232.phpt\" role=\"test\" />\n    <file name=\"issue297.phpt\" role=\"test\" />\n    <file name=\"issue303.phpt\" role=\"test\" />\n    <file name=\"issue311.phpt\" role=\"test\" />\n    <file name=\"issue415.phpt\" role=\"test\" />\n    <file name=\"issue420.phpt\" role=\"test\" />\n    <file name=\"issue468.phpt\" role=\"test\" />\n    <file name=\"issue469.phpt\" role=\"test\" />\n    <file name=\"issue513.phpt\" role=\"test\" />\n    <file name=\"issue518.phpt\" role=\"test\" />\n    <file name=\"issue530.phpt\" role=\"test\" />\n    <file name=\"issue535.phpt\" role=\"test\" />\n    <file name=\"simple.ini\" role=\"test\" />\n    <file name=\"system.ini\" role=\"test\" />\n    <file name=\"multi-section.ini\" role=\"test\" />\n   </dir>\n  </dir> \n </contents> \n <dependencies> \n  <required> \n   <php> \n    <min>7.0.0</min> \n   </php> \n   <pearinstaller> \n    <min>1.4.0</min> \n   </pearinstaller> \n  </required> \n </dependencies> \n <providesextension>yaf</providesextension>\n <extsrcrelease />\n <changelog> \n  <release> \n   <date>2024-06-25</date> \n   <version> \n    <release>3.3.6</release> \n    <api>3.3.6</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed build with PHP8.3\n   </notes> \n  </release> \n\n  <release> \n   <date>2022-05-20</date> \n   <version> \n    <release>3.3.5</release> \n    <api>3.3.5</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed ISSUE #566 (bootstrap method named \"_init\" is not be called)\n    - Fixed ISSUE #569 (Yaf_Application::getInstance is not static)\n    - Fixed ISSUE #570 (call_args parsing error in static_route)\n    - Fixed ISSUE #571 (Yaf_Request::setController failed if format arg is false)\n   </notes> \n  </release> \n  <release> \n   <date>2021-12-16</date> \n   <version> \n    <release>3.3.4</release> \n    <api>3.3.4</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed build with PHP8.1\n    - change to using stub.php generated arginfos\n   </notes> \n  </release> \n  <release> \n   <date>2021-07-01</date> \n   <version> \n    <release>3.3.3</release> \n    <api>3.3.3</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed issue #546 (Segfault due to get_gc handler changed)\n    - Use interned strings\n    - Fixed Issue #545 segfault in yaf_route_simple::construct\n    - Optimized Yaf_Route_Map::route\n   </notes> \n  </release> \n  <release> \n   <date>2021-03-05</date> \n   <version> \n    <release>3.3.2</release> \n    <api>3.3.2</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed Memory leak in yaf_loader\n    - Fixed issue #537 (segfault in macos with 4 bytes length controller name)\n    - Fixed issue #536 (application.bootstrap not used)\n   </notes> \n  </release> \n  <release> \n   <date>2021-02-20</date> \n   <version> \n    <release>3.3.1</release> \n    <api>3.3.1</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed Issue #535 (segfault due to double free on platform without alloca)\n    - Fixed issue #530 (segfault while exiting in action)\n   </notes> \n  </release> \n  <release> \n   <date>2021-01-06</date> \n   <version> \n    <release>3.3.0</release> \n    <api>3.3.0</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - PHP8 Supported\n    - Fixed issue #508 (Route::addConfig take action as module wrongly)\n    - Fixed issue #509 (getViewpath return NULL)\n    - Fixed issue #513 (supports of custom camel MVC name)\n    - Fixed issue #518 (setRediect not working)\n   </notes> \n  </release> \n  <release> \n   <date>2020-06-11</date> \n   <version> \n    <release>3.2.5</release> \n    <api>3.2.5</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed issue #492 (init method could be protected)\n    - Fixed issue #492 (plugins maybe changed in controller execution)\n    - Fixed issue #492 (empty names shoud not be set to request)\n    - Fixed cow_violation conflicts\n   </notes> \n  </release> \n  <release> \n   <date>2020-06-04</date> \n   <version> \n    <release>3.2.4</release> \n    <api>3.2.4</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed issue #489 (global library is not used if namespace is not set)\n    - Fixed issue #490 (segfault with repeated call arguments)\n   </notes> \n  </release> \n  <release> \n   <date>2020-05-15</date> \n   <version> \n    <release>3.2.3</release> \n    <api>3.2.3</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed issue #482 (segfault if plugin doesn't defines all hooks)\n    - Fixed issue #481 (application.system.yaf.directory has no effect)\n   </notes> \n  </release> \n  <release> \n   <date>2020-05-11</date> \n   <version> \n    <release>3.2.2</release> \n    <api>3.2.2</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Added Yaf_Dispatcher::setResponse\n    - Removed FINAL flags of Yaf_Request_*, Yaf_Response_*\n    - Fixed bug that ErrorController doesn't respect returnResponse\n   </notes> \n  </release> \n  <release> \n   <date>2020-04-20</date> \n   <version> \n    <release>3.2.1</release> \n    <api>3.2.1</api> \n   </version> \n   <stability> \n    <release>beta</release> \n    <api>beta</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed Namespace resgister unexpected overridden\n    - Fixed yaf_slip_equal fails on 4-bytes string\n    - Added Yaf_Dispatcher::getResponse()\n   </notes> \n  </release> \n  <release> \n   <date>2020-04-18</date> \n   <version> \n    <release>3.2.0</release> \n    <api>3.2.0</api> \n   </version> \n   <stability> \n    <release>beta</release> \n    <api>beta</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Refactor core data structs for performance, according to demo created by tool/cg/yaf_cg, 20% performance improved\n    - Implemented PSR-4 autoloading, user now can specific a path for a namespace by Yaf_Loader::registerNamespace(name, path)\n    - Added Yaf_Loader::registerNamespace(), Yaf_Loader::getNamespaces(), Yaf_Loader::getNamespacePath()\n    - Added Yaf_Request::clearParams()\n    - Added Yaf_Controller::getName(), Yaf_Action::getControllerName()\n    - Added Yaf_Dispatcher::getDefaultModule(), Yaf_Dispatcher::getDefaultController() and Yaf_Dispatcher::getDefaultAction()\n    - Added Yaf_Application::getInstance(), which is alias of Yaf_Application:app()\n    - Added optional $format_name argument to Yaf_Request::setModule/Controller/actionName\n      if it set to false, Yaf will set original input as name,\n      default it true, which means Yaf will format the name(camel/lowercase) before set it to Request\n    - Yaf_Controller::__construct now accpet no parameters, it now requires Yaf_Application is initialized.\n    - Rmoved all lead underline for fake protected property name(examing by var_dump)\n    - Fixed bug that protected method of Bootstrap get executed\n    - Yaf_View_Simple is final class now, custom view engin should implements Yaf_View_Interface\n    - Yaf_Route_* now routes valid Module/Controller/action name directly\n    - Yaf_Controller action's arguments will be set even if there are gaps now (see test/issue420.phpt)\n   </notes> \n  </release> \n  <release> \n   <date>2020-04-01</date> \n   <version> \n    <release>3.1.4</release> \n    <api>3.1.4</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed issue #469 (treat autocontroller as Controller mistakenly)\n    - Fixed issue #468 (abort if same key assigned to view)\n    - minor optimization to avoding memory allocations\n   </notes> \n  </release> \n  <release> \n   <date>2020-03-20</date> \n   <version> \n    <release>3.1.3</release> \n    <api>3.1.3</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed issue #466 (segfault if getRequest without name)\n    - Fixed bug (unexpected path too long error)\n    - Fixed valgrind warning about access to uninitilized value while memcmp\n   </notes> \n  </release> \n  <release> \n   <date>2020-03-17</date> \n   <version> \n    <release>3.1.2</release> \n    <api>3.1.2</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed bug (Yaf detecting base_uri failed)\n   </notes> \n  </release> \n  <release> \n   <date>2020-03-16</date> \n   <version> \n    <release>3.1.1</release> \n    <api>3.1.1</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed memrchr missed in windows\n   </notes> \n  </release> \n  <release> \n   <date>2020-03-15</date> \n   <version> \n    <release>3.1.0</release> \n    <api>3.1.0</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Refactor Yaf_Loader for performance\n    - Refactor lots of codes to avoiding memory allocation\n    - Yaf_Loader::getNameSpaces() now return array instead of comma separated string\n    - Yaf_Route_Rewrite now process multiple repeated bach slashes as one\n    - Removed --enable-yaf-debug, now yaf allows user to moditify variables in $_POST etc \n    - Fixed bug while stripping base_uri \n    - Fixed memrchr missed in windows\n   </notes> \n  </release> \n  <release> \n   <date>2019-12-19</date> \n   <version> \n    <release>3.0.9</release> \n    <api>3.0.9</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed build with PHP-7.4\n   </notes> \n  </release> \n  <release> \n   <date>2018-12-10</date> \n   <version> \n    <release>3.0.8</release> \n    <api>3.0.8</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed build with PHP-7.3\n   </notes> \n  </release> \n  <release> \n   <date>2018-03-22</date> \n   <version> \n    <release>3.0.7</release> \n    <api>3.0.7</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed issue #389 (segfault in debug mode while running with phpunit)\n   </notes> \n  </release> \n  <release> \n   <date>2017-12-31</date> \n   <version> \n    <release>3.0.6</release> \n    <api>3.0.6</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - PHP-7.2 Support\n    - Fixed issue #360 (class not found in high traffice server)\n   </notes> \n  </release> \n  <release> \n   <date>2017-06-29</date> \n   <version> \n    <release>3.0.5</release> \n    <api>3.0.5</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - PHP-7.2 Support\n    - Fixed issue #360 (class not found in high traffice server)\n   </notes> \n  </release> \n  <release> \n   <date>2016-08-18</date> \n   <version> \n    <release>3.0.4</release> \n    <api>3.0.4</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed bug wrong variables scope in tpl\n    - Minor optimizations \n   </notes> \n  </release> \n  <release> \n   <date>2016-07-02</date> \n   <version> \n    <release>3.0.3</release> \n    <api>3.0.3</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed issue #273 (segfault if stdclass passed to dispatch)\n    - PHP-7.1 compatible fixes\n   </notes> \n  </release> \n  <release> \n   <date>2015-12-28</date> \n   <version> \n    <release>3.0.2</release> \n    <api>3.0.2</api> \n   </version> \n   <stability> \n    <release>beta</release> \n    <api>beta</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed issue #231 (php-fpm worker core dump BUG)\n    - Attempt to fix issue #226 (Segfault on windows7 64bits)\n    - Fixed issue #232 (segfault with Yaf_Route_Simple)\n   </notes> \n  </release> \n\n  <release> \n   <date>2015-12-12</date> \n   <version> \n    <release>3.0.1</release> \n    <api>3.0.1</api> \n   </version> \n   <stability> \n    <release>beta</release> \n    <api>beta</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed auto_render bug\n    - Fixed issue #220 (segfault on read_property)\n    - Fixed bug of baseuri setting\n    - Fixed issue #163 (forward from init controller)\n    - Fixed Bug #70913 (Segfault while new Yaf_Controller)\n   </notes> \n  </release> \n  <release> \n   <date>2015-10-27</date> \n   <version> \n    <release>3.0.0</release> \n    <api>3.0.0</api> \n   </version> \n   <stability> \n    <release>beta</release> \n    <api>beta</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Release Yaf for PHP7\n   </notes> \n  </release> \n  <release> \n   <date>2014-10-22</date> \n   <version> \n    <release>2.3.3</release> \n    <api>2.3.3</api> \n   </version> \n   <stability> \n    <release>beta</release> \n    <api>beta</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed build with PHP-5.6\n   </notes> \n  </release> \n  <release> \n   <date>2014-01-09</date> \n   <version> \n    <release>2.3.2</release> \n    <api>2.3.2</api> \n   </version> \n   <stability> \n    <release>beta</release> \n    <api>beta</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed windows build\n   </notes> \n  </release> \n  <release> \n   <date>2014-01-08</date> \n   <version> \n    <release>2.3.1</release> \n    <api>2.3.1</api> \n   </version> \n   <stability> \n    <release>beta</release> \n    <api>beta</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fix package\n   </notes> \n  </release> \n  <release> \n   <date>2014-01-08</date> \n   <version> \n    <release>2.3.0</release> \n    <api>2.3.0</api> \n   </version> \n   <stability> \n    <release>beta</release> \n    <api>beta</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Added Yaf_Response::setHeader, getHeahder, setAllHeader, clearHeaders Methods\n    - Added Yaf_Route::assemble \n    - Fixed Segfault if a empty application.directory is set\n   </notes> \n  </release> \n  <release> \n   <date>2013-01-04</date> \n   <version> \n    <release>2.2.9</release> \n    <api>2.2.9</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed bug #63900 (Segfault if separated action executes failed)\n    - Fixed some compiler warnings (Remi)\n   </notes> \n  </release> \n  <release> \n   <date>2012-12-18</date> \n   <version> \n    <release>2.2.8</release> \n    <api>2.2.8</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed bug that partial module name taken\n   </notes> \n  </release> \n  <release> \n   <date>2012-11-19</date> \n   <version> \n    <release>2.2.7</release> \n    <api>2.2.7</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Improve the templates directory handling\n    - Fixed bug #63438 (Strange behavior with nested rendering)\n   </notes> \n  </release> \n  <release> \n   <date>2012-11-01</date> \n   <version> \n    <release>2.2.6</release> \n    <api>2.2.6</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed bug #63381 ($_SERVER['SCRIPT_NAME'] changed by yaf)\n   </notes> \n  </release> \n  <release> \n   <date>2012-10-22</date> \n   <version> \n    <release>2.2.5</release> \n    <api>2.2.5</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Release stable version\n    - Fixed bug empty template file interrupts forwarding chain\n    - Add LICENSE file according to FR #63239\n   </notes> \n  </release> \n  <release> \n   <date>2012-10-08</date> \n   <version> \n    <release>2.2.4</release> \n    <api>2.2.4</api> \n   </version> \n   <stability> \n    <release>beta</release> \n    <api>beta</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Improving warning info while failed opening template script\n    - Fixed bug that $this is not Yaf_View_Simple in render method which was introduced in 2.2.3\n    - Fixed memleak in Yaf_View_Simple::display()\n   </notes> \n  </release> \n  <release> \n   <date>2012-09-26</date> \n   <version> \n    <release>2.2.3</release> \n    <api>2.2.3</api> \n   </version> \n   <stability> \n    <release>beta</release> \n    <api>beta</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Call autoRender, flushInstantly, returnResponse of Yaf_Dispatcher without args return current state now (Demon)\n    - Fixed bug that Yaf_Application::environ is undefined on windows\n    - Improve warning message while script can not be loaded\n   </notes> \n  </release> \n  <release> \n   <date>2012-09-14</date> \n   <version> \n    <release>2.2.2</release> \n    <api>2.2.2</api> \n   </version> \n   <stability> \n    <release>beta</release> \n    <api>beta</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Yaf_Controller's methods are not final anymore\n    - Yaf_View_Simple is not final anymore\n    - Memleaks fixed in various place\n   </notes> \n  </release> \n  <release> \n   <date>2012-09-07</date> \n   <version> \n    <release>2.2.1</release> \n    <api>2.2.1</api> \n   </version> \n   <stability> \n    <release>beta</release> \n    <api>beta</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Repackage, previous one missed one fix\n   </notes> \n  </release> \n  <release> \n   <date>2012-09-07</date> \n   <version> \n    <release>2.2.0</release> \n    <api>2.2.0</api> \n   </version> \n   <stability> \n    <release>beta</release> \n    <api>beta</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Implemented Yaf_Response::setBody with key(which will make the layout easier to implement)\n    - New method Yaf_View_Simple::eval, Yaf_View_Simple::clear\n    - Support short open tag in view templates regardless of php.short_open_tag\n    - Make Yaf_Autoload faster(30%)\n    - Controller of default module can be autoloaded now\n    - Single class can be local class now (previous is a design issue)\n    - Performance improve in various place\n    - Compatible with php5.5, which droped PHP logo guid\n    - Fixed bug that Supervar should not respect the base_uri\n    - Implemented FR #62702 (Make baseuri case-insensitive)\n    - Implemented FR #62638 (Supports set yaf runtime configuration via application.ini)\n   </notes> \n  </release> \n  <release> \n   <date>2012-07-12</date> \n   <version> \n    <release>2.1.18</release> \n    <api>2.1.18</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed bug that Yaf_View_Simple::eval doesn't accept short open tag\n    - Fixed bug that Yaf_View_Simple::eval doesn't allow tpl be wrapped by PHP opening tag\n   </notes> \n  </release> \n  <release> \n   <date>2012-06-23</date> \n   <version> \n    <release>2.1.17</release> \n    <api>2.1.17</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed bug config will not re-loaded even it was modified\n    - Fixed bug segfault occurred if uncaught exception in Yaf_Controller::init\n    - If action return false, dispatch loop will go on with no auto-renderring\n    - Remove inline declarations (-fgnu-c89 on MacOS)\n   </notes> \n  </release> \n  <release> \n   <date>2012-05-21</date> \n   <version> \n    <release>2.1.16</release> \n    <api>2.1.16</api> \n   </version> \n   <stability> \n    <release>beta</release> \n    <api>beta</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed bug that if fatal error occurred in template, Yaf_View_Simple doesn't output the error message\n    - Fixed bug that segv in Yaf_View_Simple::render if the tpl directory parameter is not a string\n    - Fixed one invalid read in Yaf_Route_Static\n    - Fixed bug that segv occurred while using a custom view engine\n    - Fixed one memleak\n   </notes> \n  </release> \n  <release> \n   <date>2012-05-07</date> \n   <version> \n    <release>2.1.15</release> \n    <api>2.1.15</api> \n   </version> \n   <stability> \n    <release>beta</release> \n    <api>beta</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed typo variable name in static route(affect 2.1.14)\n   </notes> \n  </release> \n  <release> \n   <date>2012-05-05</date> \n   <version> \n    <release>2.1.14</release> \n    <api>2.1.14</api> \n   </version> \n   <stability> \n    <release>beta</release> \n    <api>beta</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed Bug that if no routes success router will throw exception(since 2.1.13 Yaf supports configure default route by application.ini)\n    - Fixed Bug that 'foo/index' router result as c => index a => foo\n   </notes> \n  </release> \n  <release> \n   <date>2012-04-24</date> \n   <version> \n    <release>2.1.13</release> \n    <api>2.1.13</api> \n   </version> \n   <stability> \n    <release>beta</release> \n    <api>beta</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Added Yaf_View_Simple::eval\n    - Supported short_open_tag in Yaf_View_Simple\n    - Fixed a potential segfault while alternately access two yaf application host in one machine\n    - Improve the Yaf_Route_Static/Supervar::route logic\n    - Fixed bug that 404 occurred if the request is prefix with more than one slash\n    - Fixed bug that free NULL pointer in Yaf_Loader::registerLocalNameSpace\n   </notes> \n  </release> \n  <release> \n   <date>2012-04-18</date> \n   <version> \n    <release>2.1.12</release> \n    <api>2.1.12</api> \n   </version> \n   <stability> \n    <release>beta</release> \n    <api>beta</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Fixed bug that baseUri set to wrong value (affected version: 2.1.10, 2.1.11)\n    - Fixed bug Yaf_View_Simple crash while calling assign if construct it with no tpl_dir\n    - Fixed bug that Yaf_View_Simple::display doesn't convert controller name\n   </notes> \n  </release> \n  <release> \n   <date>2012-04-11</date> \n   <version> \n    <release>2.1.11</release> \n    <api>2.1.11</api> \n   </version> \n   <stability> \n    <release>beta</release> \n    <api>beta</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes>\n    - Improve Yaf_Config parsing performance,  if the wanted section was parsed, then overpass the rest sections\n    - Now catchException will failover to the default moudle error handler\n    - Added Yaf_View_Simple::clear\n    - Support set default route by config(appliation.dispatcher.defaultRoute)\n    - Support adding Yaf_Route_Map by config\n    - Allow Yaf_View_Simple::get(void)\n    - Fixed Bug that Yaf_Config_Ini will take part of the section\n    - Fixed bug that yaf_config_ini_deep_copy is not much deepy.\n    - Fixed bug Yaf_Route_Simple dont respect application.modules configure\n    - Fixed some memory leaks\n   </notes> \n  </release> \n  <release> \n   <date>2012-04-01</date> \n   <version> \n    <release>2.1.10</release> \n    <api>2.1.10</api> \n   </version> \n   <stability> \n    <release>beta</release> \n    <api>beta</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes> \n    - Fixed bug #61493 (Can't remove item when using unset() with a Yaf_Config_Simple instance)\n    - Support controller autoloading(Only default module)\n    - Fixed bug that the controller name could be lowercase in routeShutdown hook\n    - Fixed bug that segfault while attempt to free owrite_handler\n    - Added Yaf_Controller::$yafAutoRender to controller render\n    - Fixed some memory leaks\n   </notes> \n  </release> \n  <release> \n   <date>2012-03-20</date> \n   <version> \n    <release>2.1.9</release> \n    <api>2.1.9</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes> \n    - Fixed Bug that Yaf_Response::setBody cause invalid read\n   </notes> \n  </release> \n  <release> \n   <date>2012-03-12</date> \n   <version> \n    <release>2.1.8</release> \n    <api>2.1.8</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes> \n    - Fixed bug Yaf_Response::setBody act the same as Yaf_Response::prependBody\n   </notes> \n  </release> \n  <release> \n   <date>2012-02-05</date> \n   <version> \n    <release>2.1.7</release> \n    <api>2.1.7</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes> \n    - Release 2.1.7 stable\n   </notes> \n  </release> \n\n  <release> \n   <date>2012-01-06</date> \n   <version> \n    <release>2.1.6</release> \n    <api>2.1.6</api> \n   </version> \n   <stability> \n    <release>beta</release> \n    <api>beta</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes> \n    - Fix Bug that classname with namespace can not be auto loaded\n   </notes> \n  </release> \n  <release> \n   <date>2011-12-26</date> \n   <version> \n    <release>2.1.5</release> \n    <api>2.1.5</api> \n   </version> \n   <stability> \n    <release>beta</release> \n    <api>beta</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes> \n    - Fix Bug #60608\n   </notes> \n  </release> \n  <release> \n   <date>2011-12-21</date> \n   <version> \n    <release>2.1.4</release> \n    <api>2.1.4</api> \n   </version> \n   <stability> \n    <release>beta</release> \n    <api>beta</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes> \n    - Improve the Yaf_Loader::getInstance, make the Yaf_Loader can be used independently\n    - Implemented Yaf_View::assignRef, which didn't work as expect before.\n   </notes> \n  </release> \n  <release> \n   <date>2011-10-08</date> \n   <version> \n    <release>2.1.3</release> \n    <api>2.1.3</api> \n   </version> \n   <stability> \n    <release>beta</release> \n    <api>beta</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes> \n    - Fixed Bug that Yaf still call to Yaf_View_Simple although a custom view engine was setted\n   </notes> \n  </release> \n  <release> \n   <date>2011-09-01</date> \n   <version> \n    <release>2.1.2</release> \n    <api>2.1.2</api> \n   </version> \n   <stability> \n    <release>beta</release> \n    <api>beta</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes> \n    - Added Yaf_Application::getLastErrorNo\n    - Added Yaf_Application::getLastErrorMsg\n    - Added Yaf_Application::clearLastError\n    - Changed trigger ERROR to E_RECOVERABLE_ERROR, then people can use set_error_handler to catch it\n   </notes> \n  </release> \n  <release> \n   <date>2011-08-31</date> \n   <version> \n    <release>2.1.1</release> \n    <api>2.1.1</api> \n   </version> \n   <stability> \n    <release>beta</release> \n    <api>beta</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes> \n    - Fixed Yaf_View_Simple::render flush output instantly in PHP5.4\n    - Fixed Yaf_Session crash in PHP5.4\n   </notes> \n  </release> \n  <release> \n   <date>2011-08-28</date> \n   <version> \n    <release>2.1.0</release> \n    <api>2.1.0</api> \n   </version> \n   <stability> \n    <release>beta</release> \n    <api>beta</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes> \n    - Avoided calling to get_class_entry for higher performance\n    - Added arginfo for all methods\n    - Remove unnecessary stack variable initialization\n    - Standardize error message\n    - Add Yaf_Request::setRequstUri\n    - Fixed build broken with PHP 5.4\n   </notes> \n  </release> \n  <release> \n   <date>2011-06-28</date> \n   <version> \n    <release>2.0.1</release> \n    <api>2.0.1</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes> \n    - Fixed Bug that when call to Yaf_Config_Ini/Yaf_Config_Simple with freaky paramters then invoke its methods cause crash (thanks to Felipe Pena)\n    - Yaf_Application::execute call Zend_API call_user_func instead of call zif_call_user_func, since zif_call_user_func was not declared with dllexport\n    - Built on windows with PHP-5.3.6 and PHP-5.2.15 (you can download the dll on Yaf Google Code)\n    - Corrected some broken C89 statements\n   </notes> \n  </release> \n  <release> \n   <date>2011-06-24</date> \n   <version> \n    <release>2.0.0</release> \n    <api>2.0.0</api> \n   </version> \n   <stability> \n    <release>stable</release> \n    <api>stable</api> \n   </stability> \n   <license uri=\"http://www.php.net/license\">PHP License</license> \n   <notes> \n    - First release version\n   </notes> \n  </release> \n </changelog> \n</package> \n<!--\nvim:et:ts=1:sw=1\n--> \n"
        },
        {
          "name": "php_yaf.h",
          "type": "blob",
          "size": 9.029296875,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifndef PHP_YAF_H\n#define PHP_YAF_H\n\nextern zend_module_entry yaf_module_entry;\n#define phpext_yaf_ptr &yaf_module_entry\n\n#ifdef PHP_WIN32\n#define PHP_YAF_API __declspec(dllexport)\n#ifndef _MSC_VER\n#define _MSC_VER 1600\n#endif\n#else\n#define PHP_YAF_API\n#endif\n\n#ifdef ZTS\n#include \"TSRM.h\"\n#endif\n\n#ifdef ZTS\n#define YAF_G(v) TSRMG(yaf_globals_id, zend_yaf_globals *, v)\n#else\n#define YAF_G(v) (yaf_globals.v)\n#endif\n\n#ifndef ZEND_ACC_CTOR\n# define ZEND_ACC_CTOR\t0x0\n# define ZEND_ACC_DTOR\t0x0\n#endif\n\n#define PHP_YAF_VERSION \t\t\t\t\t\"3.3.7-dev\"\n\n#define YAF_STARTUP_FUNCTION(module)   \tZEND_MINIT_FUNCTION(yaf_##module)\n#define YAF_RINIT_FUNCTION(module)\t\tZEND_RINIT_FUNCTION(yaf_##module)\n#define YAF_STARTUP(module)\t \t\t  \tZEND_MODULE_STARTUP_N(yaf_##module)(INIT_FUNC_ARGS_PASSTHRU)\n#define YAF_SHUTDOWN_FUNCTION(module)  \tZEND_MSHUTDOWN_FUNCTION(yaf_##module)\n#define YAF_SHUTDOWN(module)\t \t    ZEND_MODULE_SHUTDOWN_N(yaf_##module)(INIT_FUNC_ARGS_PASSTHRU)\n#define YAF_ME(c, m, a, f)              {m, PHP_MN(c), a, (unsigned)(sizeof(a)/sizeof(struct _zend_arg_info)-1), f},\n#define YAF_VAR_FLAGS(v)                ((v).u2.next)\n\n#if PHP_VERSION_ID < 70200\n#define YAF_ALLOW_VIOLATION(ht)\n#else\n#define YAF_ALLOW_VIOLATION(ht) do { \\\n\tzend_hash_real_init(ht, 0);      \\\n\tHT_ALLOW_COW_VIOLATION(ht);      \\\n} while (0)\n#endif\n\n#if PHP_VERSION_ID < 70400\n#define YAF_WRITE_HANDLER       void\n#define YAF_WHANDLER_RET(zv)    return\n# if PHP_VERSION_ID < 70300\n# define GC_ADDREF(gc)           (++GC_REFCOUNT(gc))\n# define GC_DELREF(gc)           (--GC_REFCOUNT(gc))\n# endif\n# define yaf_fake_get_gc        NULL\n#else\n#define YAF_WRITE_HANDLER       zval *\n#define YAF_WHANDLER_RET(zv)    return zv\n#if PHP_VERSION_ID >= 80000\nHashTable *yaf_fake_get_gc(zend_object *zobj, zval **table, int *n);\n#else\nHashTable *yaf_fake_get_gc(zval *zobj, zval **table, int *n);\n#endif\n#endif\n\n#if PHP_VERSION_ID < 80000\n#define yaf_object zval\n#define yaf_strip_obj(o) Z_OBJ_P(o)\n#else\n#define yaf_object zend_object\n#define yaf_strip_obj\n#endif\n\n#define yaf_application_t       zval\n#define yaf_view_t              zval\n#define yaf_controller_t        zval\n#define yaf_request_t           zval\n#define yaf_router_t            zval\n#define yaf_route_t             zval\n#define yaf_dispatcher_t        zval\n#define yaf_action_t            zval\n#define yaf_loader_t            zval\n#define yaf_response_t          zval\n#define yaf_config_t            zval\n#define yaf_registry_t          zval\n#define yaf_plugin_t            zval\n#define yaf_session_t           zval\n#define yaf_exception_t         zval\n\n#define YAF_USE_SPL_AUTOLOAD    (1<<0)\n#define YAF_LOWERCASE_PATH      (1<<1)\n#define YAF_NAME_SUFFIX         (1<<2)\n#define YAF_HAS_NAME_SEPERATOR  (1<<3)\n#define YAF_USE_NAMESPACE       (1<<4)\n#define YAF_ACTION_PREFER       (1<<5)\n#define YAF_THROW_EXCEPTION     (1<<6)\n#define YAF_CATCH_EXCEPTION     (1<<7)\n\n#define YAF_FLAGS()             (YAF_VAR_FLAGS(YAF_G(app)))\n\nZEND_BEGIN_MODULE_GLOBALS(yaf)\n\t/* for instances stash, and flags */\n\tyaf_application_t app;\n    yaf_loader_t      loader;\n\tyaf_registry_t    registry;\n\tyaf_session_t     session;\n\n\t/* ini configurations */\n    char             *name_separator;\n    size_t            name_separator_len;\n    char             *global_library;\n    char             *environ_name;\n\n    /*for ini parsing */\n    zval              active_ini_file_section;\n    zval             *ini_wanted_section;\nZEND_END_MODULE_GLOBALS(yaf)\n\nPHP_MINIT_FUNCTION(yaf);\nPHP_MSHUTDOWN_FUNCTION(yaf);\nPHP_RINIT_FUNCTION(yaf);\nPHP_RSHUTDOWN_FUNCTION(yaf);\nPHP_MINFO_FUNCTION(yaf);\n\ntypedef struct {\n\tzend_object_iterator intern;\n\tzval current;\n\tHashPosition pos;\n} yaf_iterator;\n\nextern ZEND_DECLARE_MODULE_GLOBALS(yaf);\nextern zend_object_iterator_funcs yaf_iterator_funcs;\n\nzend_string *yaf_canonical_name(int type, zend_string *name);\nzend_string *yaf_build_camel_name(const char *str, size_t len);\nzend_string *yaf_build_lower_name(const char *str, size_t len);\nint yaf_call_user_method(zend_object *obj, zend_function *fbc, int num_args, zval *args, zval *ret);\nint yaf_call_user_method_with_0_arguments(zend_object *obj, zend_function *fbc, zval *ret);\nint yaf_call_user_method_with_1_arguments(zend_object *obj, zend_function *fbc, zval *arg, zval *ret);\nint yaf_call_user_method_with_2_arguments(zend_object *obj, zend_function *fbc, zval *arg1, zval *arg2, zval *ret);\nvoid yaf_replace_chr(char *name, uint32_t len, zend_uchar f, zend_uchar t);\n\nextern const char const *yaf_known_chars[];\nextern zend_string **yaf_known_strings;\n#define YAF_KNOWN_STR(id)        (yaf_known_strings[id])\n#define YAF_KNOWN_CHARS(id)      (yaf_known_chars[id])\n#define YAF_KNOWN_NAMES(_) \\\n\t_(YAF,                       \"yaf\") \\\n\t_(YAF_APPLICATION,           \"application\") \\\n\t_(YAF_DIRECTORY,             \"directory\") \\\n\t_(YAF_DISPATCHER,            \"dispatcher\") \\\n\t_(YAF_DEFAULT_MODULE,        \"Index\") \\\n\t_(YAF_DEFAULT_CONTROLLER,    \"Index\") \\\n\t_(YAF_DEFAULT_ACTION,        \"index\") \\\n\t_(YAF_ACTIONS_MAP,           \"actions\") \\\n\t_(YAF_BOOTSTRAP,             \"bootstrap\") \\\n\t_(YAF_CONTENT,               \"content\") \\\n\t_(YAF_VAR_POST,              \"_POST\") \\\n\t_(YAF_VAR_GET,               \"_GET\") \\\n\t_(YAF_VAR_SERVER,            \"_SERVER\") \\\n\t_(YAF_VAR_COOKIE,            \"_COOKIE\") \\\n\t_(YAF_VAR_FILES,             \"_FILES\") \\\n\t_(YAF_VAR_REQUEST,           \"_REQUEST\") \\\n\t_(YAF_VAR_ENV,               \"_ENV\") \\\n\t_(YAF_VAR_SESSION,           \"_SESSION\") \\\n\t_(YAF_HOOK_ROUTESTARTUP,     \"routerstartup\") \\\n\t_(YAF_HOOK_ROUTESHUTDOWN,    \"routershutdown\") \\\n\t_(YAF_HOOK_LOOPSTARTUP,      \"dispatchloopstartup\") \\\n\t_(YAF_HOOK_PREDISPATCH,      \"predispatch\") \\\n\t_(YAF_HOOK_POSTDISPATCH,     \"postdispatch\") \\\n\t_(YAF_HOOK_LOOPSHUTDOWN,     \"dispatchloopshutdown\") \\\n\t_(YAF_AUTORENDER,            \"yafAutoRender\") \\\n\t_(YAF_RENDER,                \"render\") \\\n\t_(YAF_DISPLAY,               \"display\") \\\n\t_(YAF_EXECUTE,               \"execute\") \\\n\t_(YAF_PATH_INFO,             \"PATH_INFO\") \\\n\t_(YAF_REQUEST_URI,           \"REQUEST_URI\") \\\n\nenum _yaf_known_chars_id {\n#define _YAF_CHARS_ID(id, str) id,\nYAF_KNOWN_NAMES(_YAF_CHARS_ID)\n#undef _YAF_CHARS_ID\n\tYAF_LAST_KNOWN_CHARS\n};\n\n#define YSCMP(a, b, l, s)  do { \\\n\tif (l>=sizeof(uint##s##_t)) { \\\n\t\tif (*(uint##s##_t*)a != *(uint##s##_t*)b) return 0; \\\n\t\tl-=sizeof(uint##s##_t),a+=sizeof(uint##s##_t),b+=sizeof(uint##s##_t); \\\n\t}\\\n} while (0)\nstatic zend_always_inline int yaf_slip_equal(const char *s, const char *p, unsigned char l) {\n\tZEND_ASSERT(l < 16);\n#if SIZEOF_ZEND_LONG == 8\n\tYSCMP(s, p, l, 64);\n#else\n\tYSCMP(s, p, l, 32); YSCMP(s, p, l, 32);\n#endif\n\tYSCMP(s, p, l, 32);\n   \tYSCMP(s, p, l, 16);\n\treturn (l == 0 || *s == *p);\n}\n\nstatic zend_always_inline unsigned int yaf_get_forward_limit() {\n\treturn YAF_VAR_FLAGS(YAF_G(loader));\n}\nstatic zend_always_inline zend_bool yaf_is_use_namespace() {\n\treturn YAF_FLAGS() & YAF_USE_NAMESPACE;\n}\nstatic zend_always_inline zend_bool yaf_is_action_prefer() {\n\treturn YAF_FLAGS() & YAF_ACTION_PREFER;\n}\nstatic zend_always_inline zend_bool yaf_is_name_suffix() {\n\treturn YAF_FLAGS() & YAF_NAME_SUFFIX;\n}\nstatic zend_always_inline zend_bool yaf_has_name_separator() {\n\treturn YAF_FLAGS() & YAF_HAS_NAME_SEPERATOR;\n}\nstatic zend_always_inline zend_bool yaf_is_throw_exception() {\n\treturn YAF_FLAGS() & YAF_THROW_EXCEPTION;\n}\nstatic zend_always_inline zend_bool yaf_is_catch_exception() {\n\treturn YAF_FLAGS() & YAF_CATCH_EXCEPTION;\n}\nstatic zend_always_inline void yaf_set_throw_exception(zend_bool flag) {\n\tif (flag) {\n\t\tYAF_FLAGS() |= YAF_THROW_EXCEPTION;\n\t} else {\n\t\tYAF_FLAGS() &= ~YAF_THROW_EXCEPTION;\n\t}\n}\nstatic zend_always_inline void yaf_set_catch_exception(zend_bool flag) {\n\tif (flag) {\n\t\tYAF_FLAGS() |= YAF_CATCH_EXCEPTION;\n\t} else {\n\t\tYAF_FLAGS() &= ~YAF_CATCH_EXCEPTION;\n\t}\n}\nstatic zend_always_inline uint32_t yaf_compose_2_pathes(char *buf, zend_string *c1, const char *c2, uint32_t l2) {\n\tuint32_t len = ZSTR_LEN(c1);\n\tmemcpy(buf, ZSTR_VAL(c1), len);\n\tbuf[len] = DEFAULT_SLASH;\n\tmemcpy(buf + len + 1, c2, l2);\n\tlen = len + l2 + 1;\n\treturn len;\n}\n#endif\n\n/* removed in 8.3 */\n#ifndef ZEND_HOT\n#define ZEND_HOT\n#endif\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "requests",
          "type": "tree",
          "content": null
        },
        {
          "name": "responses",
          "type": "tree",
          "content": null
        },
        {
          "name": "routes",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "travis",
          "type": "tree",
          "content": null
        },
        {
          "name": "views",
          "type": "tree",
          "content": null
        },
        {
          "name": "yaf.c",
          "type": "blob",
          "size": 20.5810546875,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include \"php.h\"\n#include \"php_ini.h\"\n#include \"main/SAPI.h\"\n#include \"Zend/zend_alloc.h\"\n#include \"ext/standard/info.h\"\n#include \"ext/standard/php_string.h\"\n\n#ifdef __SSE2__\n#include <emmintrin.h>\n#endif\n\n#include \"php_yaf.h\"\n#include \"yaf_logo.h\"\n#include \"yaf_loader.h\"\n#include \"yaf_exception.h\"\n#include \"yaf_application.h\"\n#include \"yaf_dispatcher.h\"\n#include \"yaf_config.h\"\n#include \"yaf_view.h\"\n#include \"yaf_controller.h\"\n#include \"yaf_action.h\"\n#include \"yaf_request.h\"\n#include \"yaf_response.h\"\n#include \"yaf_router.h\"\n#include \"yaf_bootstrap.h\"\n#include \"yaf_plugin.h\"\n#include \"yaf_registry.h\"\n#include \"yaf_session.h\"\n\nZEND_DECLARE_MODULE_GLOBALS(yaf);\n\nzend_string **yaf_known_strings = NULL;\nconst char const *yaf_known_chars[] = {\n#define _YAF_CHARS(id, str) str,\nYAF_KNOWN_NAMES(_YAF_CHARS)\n#undef _YAF_CHARS\n\tNULL\n};\n\n/* {{{ yaf_functions[]\n*/\nzend_function_entry yaf_functions[] = {\n\t{NULL, NULL, NULL}\n};\n/* }}} */\n\nvoid yaf_iterator_dtor(zend_object_iterator *iter) /* {{{ */ {\n\tzval_ptr_dtor(&iter->data);\n\tzval_ptr_dtor(&((yaf_iterator*)iter)->current);\n\t/* zend_iterator_dtor(iter); */\n}\n/* }}} */\n\n#if PHP_VERSION_ID >= 70400\n#if PHP_VERSION_ID >= 80000\nHashTable *yaf_fake_get_gc(zend_object *zobj, zval **table, int *n) /* {{{ */ {\n#else\nHashTable *yaf_fake_get_gc(zval *zobj, zval **table, int *n) /* {{{ */ {\n#endif\n\t*n = 0;\n\t*table = NULL;\n\treturn NULL;\n}\n/* }}} */\n#endif\n\nstatic int yaf_iterator_valid(zend_object_iterator *iter) /* {{{ */ {\n\treturn zend_hash_has_more_elements_ex(Z_ARRVAL(iter->data), &(((yaf_iterator*)iter)->pos));\n}\n/* }}} */\n\nstatic void yaf_iterator_rewind(zend_object_iterator *iter) /* {{{ */ {\n\tzend_hash_internal_pointer_reset_ex(Z_ARRVAL(iter->data), &(((yaf_iterator*)iter)->pos));\n}\n/* }}} */\n\nstatic void yaf_iterator_move_forward(zend_object_iterator *iter) /* {{{ */ {\n\tzend_hash_move_forward_ex(Z_ARRVAL(iter->data), &(((yaf_iterator*)iter)->pos));\n}\n/* }}} */\n\nstatic zval *yaf_iterator_get_current_data(zend_object_iterator *iter) /* {{{ */ {\n\treturn zend_hash_get_current_data_ex(Z_ARRVAL(iter->data), &(((yaf_iterator*)iter)->pos));\n}\n/* }}} */\n\nstatic void yaf_iterator_get_current_key(zend_object_iterator *iter, zval *key) /* {{{ */ {\n\tzend_ulong idx;\n\tzend_string *str;\n\n\tswitch (zend_hash_get_current_key_ex(Z_ARRVAL(iter->data), &str, &idx, &(((yaf_iterator*)iter)->pos))) {\n\t\tcase HASH_KEY_IS_STRING:\n\t\t\tZVAL_STR_COPY(key, str);\n\t\t\tbreak;\n\t\tcase HASH_KEY_IS_LONG:\n\t\t\tZVAL_LONG(key, idx);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tZVAL_NULL(key);\n\t\t\tbreak;\n\t}\n}\n/* }}} */\n\nzend_object_iterator_funcs yaf_iterator_funcs = /* {{{ */ { \n\tyaf_iterator_dtor,\n\tyaf_iterator_valid,\n\tyaf_iterator_get_current_data,\n\tyaf_iterator_get_current_key,\n\tyaf_iterator_move_forward,\n\tyaf_iterator_rewind,\n\tNULL\n};\n/* }}} */\n\nstatic zend_bool yaf_ini_entry_is_true(const zend_string *new_value) /* {{{ */ {\n\tif (ZSTR_LEN(new_value) == 2 && strcasecmp(\"on\", ZSTR_VAL(new_value)) == 0) {\n\t\treturn 1;\n\t}\n\telse if (ZSTR_LEN(new_value) == 3 && strcasecmp(\"yes\", ZSTR_VAL(new_value)) == 0) {\n\t\treturn 1;\n\t}\n\telse if (ZSTR_LEN(new_value) == 4 && strcasecmp(\"true\", ZSTR_VAL(new_value)) == 0) {\n\t\treturn 1;\n\t}\n\telse {\n\t\treturn (zend_bool) atoi(ZSTR_VAL(new_value));\n\t}\n}\n/* }}} */\n\nPHP_INI_MH(OnUpdateForwardLimit) /* {{{ */ {\n\tint limit = atoi(ZSTR_VAL(new_value));\n\tif (limit >= 0) {\n\t\tYAF_VAR_FLAGS(YAF_G(loader)) = limit;\n\t}\n\treturn SUCCESS;\n}\n/* }}} */\n\nPHP_INI_MH(OnUpdateUseNamespace) /* {{{ */ {\n\tif (yaf_ini_entry_is_true(new_value)) {\n\t\tYAF_FLAGS() |= YAF_USE_NAMESPACE;\n\t} else {\n\t\tYAF_FLAGS() &= ~YAF_USE_NAMESPACE;\n\t}\n\treturn SUCCESS;\n}\n/* }}} */\n\nPHP_INI_MH(OnUpdateLowerCasePath) /* {{{ */ {\n\tif (yaf_ini_entry_is_true(new_value)) {\n\t\tYAF_FLAGS() |= YAF_LOWERCASE_PATH;\n\t} else {\n\t\tYAF_FLAGS() &= ~YAF_LOWERCASE_PATH;\n\t}\n\treturn SUCCESS;\n}\n/* }}} */\n\nPHP_INI_MH(OnUpdateActionPrefer) /* {{{ */ {\n\tif (yaf_ini_entry_is_true(new_value)) {\n\t\tYAF_FLAGS() |= YAF_ACTION_PREFER;\n\t} else {\n\t\tYAF_FLAGS() &= ~YAF_ACTION_PREFER;\n\t}\n\treturn SUCCESS;\n}\n/* }}} */\n\nPHP_INI_MH(OnUpdateUseSplAutoload) /* {{{ */ {\n\tif (yaf_ini_entry_is_true(new_value)) {\n\t\tYAF_FLAGS() |= YAF_USE_SPL_AUTOLOAD;\n\t} else {\n\t\tYAF_FLAGS() &= ~YAF_USE_SPL_AUTOLOAD;\n\t}\n\treturn SUCCESS;\n}\n/* }}} */\n\nPHP_INI_MH(OnUpdateNameSuffix) /* {{{ */ {\n\tif (yaf_ini_entry_is_true(new_value)) {\n\t\tYAF_FLAGS() |= YAF_NAME_SUFFIX;\n\t} else {\n\t\tYAF_FLAGS() &= ~YAF_NAME_SUFFIX;\n\t}\n\treturn SUCCESS;\n}\n/* }}} */\n\nPHP_INI_MH(OnUpdateSeparator) /* {{{ */ {\n\tYAF_G(name_separator) = ZSTR_VAL(new_value);\n\tYAF_G(name_separator_len) = ZSTR_LEN(new_value);\n\tif (ZSTR_LEN(new_value)) {\n\t\tYAF_FLAGS() |= YAF_HAS_NAME_SEPERATOR;\n\t} else {\n\t\tYAF_FLAGS() &= ~YAF_HAS_NAME_SEPERATOR;\n\t}\n\treturn SUCCESS;\n}\n/* }}} */\n\n/** {{{ PHP_YAF_INI_ENTRY\n */\nPHP_INI_BEGIN()\n\tSTD_PHP_INI_ENTRY(\"yaf.library\",       \"\",  PHP_INI_ALL, OnUpdateString, global_library, zend_yaf_globals, yaf_globals)\n\tSTD_PHP_INI_ENTRY(\"yaf.environ\",       \"product\", PHP_INI_SYSTEM, OnUpdateString, environ_name, zend_yaf_globals, yaf_globals)\n\tPHP_INI_ENTRY(\"yaf.forward_limit\",     \"5\", PHP_INI_ALL, OnUpdateForwardLimit)\n\tPHP_INI_ENTRY(\"yaf.use_namespace\",     \"0\", PHP_INI_ALL, OnUpdateUseNamespace)\n\tPHP_INI_ENTRY(\"yaf.action_prefer\",     \"0\", PHP_INI_ALL, OnUpdateActionPrefer)\n\tPHP_INI_ENTRY(\"yaf.lowcase_path\",      \"0\", PHP_INI_ALL, OnUpdateLowerCasePath)\n\tPHP_INI_ENTRY(\"yaf.use_spl_autoload\",  \"0\", PHP_INI_ALL, OnUpdateUseSplAutoload)\n\tPHP_INI_ENTRY(\"yaf.name_suffix\",       \"1\", PHP_INI_ALL, OnUpdateNameSuffix)\n\tPHP_INI_ENTRY(\"yaf.name_separator\",    \"\",  PHP_INI_ALL, OnUpdateSeparator)\nPHP_INI_END();\n/* }}} */\n\nstatic zend_always_inline int yaf_do_call_user_method(zend_execute_data *call, zend_function *fbc, zval *ret) /* {{{ */ {\n\t/* At least we should in calls of Dispatchers */\n\tZEND_ASSERT(EG(current_execute_data));\n\n\tzend_init_execute_data(call, (zend_op_array*)fbc, ret);\n\t/* const zend_op *current_opline_before_exception = EG(opline_before_exception); */\n\tzend_execute_ex(call);\n\t/* EG(opline_before_exception) = current_opline_before_exception; */\n\n\tzend_vm_stack_free_call_frame(call);\n\tif (UNEXPECTED(EG(exception))) {\n\t\t/* We should return directly to user codes */\n\t\tZVAL_UNDEF(ret);\n\t\treturn 0;\n\t}\n\treturn 1;\n}\n/* }}} */\n\nZEND_HOT int yaf_call_user_method(zend_object *obj, zend_function* fbc, int num_arg, zval *args, zval *ret) /* {{{ */ {\n\tuint32_t i, call_info;\n\tzend_execute_data *call;\n\n\tif (UNEXPECTED(fbc->common.fn_flags & (ZEND_ACC_PROTECTED|ZEND_ACC_PRIVATE))) {\n\t\tphp_error_docref(NULL, E_WARNING, \"cannot call %s method %s::%s()\", \n\t\t\t\t(fbc->common.fn_flags & (ZEND_ACC_PRIVATE|ZEND_ACC_PROTECTED)) == ZEND_ACC_PROTECTED?\n\t\t\t\t\"protected\" : \"private\", ZSTR_VAL(obj->ce->name), ZSTR_VAL(fbc->common.function_name));\n\t\treturn 0;\n\t}\n\n#if PHP_VERSION_ID < 70400\n\tcall_info = ZEND_CALL_TOP_FUNCTION;\n\tcall = zend_vm_stack_push_call_frame(call_info, fbc, num_arg, NULL, obj);\n#else\n\tcall_info = ZEND_CALL_TOP_FUNCTION | ZEND_CALL_HAS_THIS;\n\tcall = zend_vm_stack_push_call_frame(call_info, fbc, num_arg, obj);\n#endif\n\tcall->symbol_table = NULL;\n\n\tfor (i = 0; i < num_arg; i++) {\n\t\tZVAL_COPY(ZEND_CALL_ARG(call, i+1), &args[i]);\n\t}\n\n\t/* At least we should in calls of Dispatchers */\n\tZEND_ASSERT(EG(current_execute_data));\n\n\tif (EXPECTED(fbc->type == ZEND_USER_FUNCTION)) {\n\t\treturn yaf_do_call_user_method(call, fbc, ret);\n\t} else {\n\t\tZEND_ASSERT(fbc->type == ZEND_INTERNAL_FUNCTION);\n\t\tcall->prev_execute_data = EG(current_execute_data);\n\t\tEG(current_execute_data) = call;\n\t\tif (EXPECTED(zend_execute_internal == NULL)) {\n\t\t\tfbc->internal_function.handler(call, ret);\n\t\t} else {\n\t\t\tzend_execute_internal(call, ret);\n\t\t}\n\t\tEG(current_execute_data) = call->prev_execute_data;\n\t\tzend_vm_stack_free_args(call);\n\n\t\tzend_vm_stack_free_call_frame(call);\n\t\tif (UNEXPECTED(EG(exception))) {\n\t\t\t/* We should return directly to user codes */\n\t\t\tZVAL_UNDEF(ret);\n\t\t\treturn 0;\n\t\t}\n\t\treturn 1;\n\t}\n}\n/* }}} */\n\nZEND_HOT int yaf_call_user_method_with_0_arguments(zend_object *obj, zend_function* fbc, zval *ret) /* {{{ */ {\n\tuint32_t call_info;\n\tzend_execute_data *call;\n\n\tif (UNEXPECTED(fbc->common.fn_flags & (ZEND_ACC_PROTECTED|ZEND_ACC_PRIVATE))) {\n\t\tphp_error_docref(NULL, E_WARNING, \"cannot call %s method %s::%s()\", \n\t\t\t\t(fbc->common.fn_flags & (ZEND_ACC_PRIVATE|ZEND_ACC_PROTECTED)) == ZEND_ACC_PROTECTED?\n\t\t\t\t\"protected\" : \"private\", ZSTR_VAL(obj->ce->name), ZSTR_VAL(fbc->common.function_name));\n\t\treturn 0;\n\t}\n\n#if PHP_VERSION_ID < 70400\n\tcall_info = ZEND_CALL_TOP_FUNCTION;\n\tcall = zend_vm_stack_push_call_frame(call_info, fbc, 0, NULL, obj);\n#else\n\tcall_info = ZEND_CALL_TOP_FUNCTION | ZEND_CALL_HAS_THIS;\n\tcall = zend_vm_stack_push_call_frame(call_info, fbc, 0, obj);\n#endif\n\tcall->symbol_table = NULL;\n\n\treturn yaf_do_call_user_method(call, fbc, ret);\n}\n/* }}} */\n\nZEND_HOT int yaf_call_user_method_with_1_arguments(zend_object *obj, zend_function* fbc, zval *arg, zval *ret) /* {{{ */ {\n\tuint32_t call_info;\n\tzend_execute_data *call;\n\n\tif (UNEXPECTED(fbc->common.fn_flags & (ZEND_ACC_PROTECTED|ZEND_ACC_PRIVATE))) {\n\t\tphp_error_docref(NULL, E_WARNING, \"cannot call %s method %s::%s()\", \n\t\t\t\t(fbc->common.fn_flags & (ZEND_ACC_PRIVATE|ZEND_ACC_PROTECTED)) == ZEND_ACC_PROTECTED?\n\t\t\t\t\"protected\" : \"private\", ZSTR_VAL(obj->ce->name), ZSTR_VAL(fbc->common.function_name));\n\t\treturn 0;\n\t}\n\n#if PHP_VERSION_ID < 70400\n\tcall_info = ZEND_CALL_TOP_FUNCTION;\n\tcall = zend_vm_stack_push_call_frame(call_info, fbc, 1, NULL, obj);\n#else\n\tcall_info = ZEND_CALL_TOP_FUNCTION | ZEND_CALL_HAS_THIS;\n\tcall = zend_vm_stack_push_call_frame(call_info, fbc, 1, obj);\n#endif\n\tcall->symbol_table = NULL;\n\n\tZVAL_COPY(ZEND_CALL_ARG(call, 1), arg);\n\n\treturn yaf_do_call_user_method(call, fbc, ret);\n}\n/* }}} */\n\nZEND_HOT int yaf_call_user_method_with_2_arguments(zend_object *obj, zend_function* fbc, zval *arg1, zval *arg2, zval *ret) /* {{{ */ {\n\tuint32_t call_info;\n\tzend_execute_data *call;\n\n\tif (UNEXPECTED(fbc->common.fn_flags & (ZEND_ACC_PROTECTED|ZEND_ACC_PRIVATE))) {\n\t\tphp_error_docref(NULL, E_WARNING, \"cannot call %s method %s::%s()\", \n\t\t\t\t(fbc->common.fn_flags & (ZEND_ACC_PRIVATE|ZEND_ACC_PROTECTED)) == ZEND_ACC_PROTECTED?\n\t\t\t\t\"protected\" : \"private\", ZSTR_VAL(obj->ce->name), ZSTR_VAL(fbc->common.function_name));\n\t\treturn 0;\n\t}\n\n#if PHP_VERSION_ID < 70400\n\tcall_info = ZEND_CALL_TOP_FUNCTION;\n\tcall = zend_vm_stack_push_call_frame(call_info, fbc, 2, NULL, obj);\n#else\n\tcall_info = ZEND_CALL_TOP_FUNCTION | ZEND_CALL_HAS_THIS;\n\tcall = zend_vm_stack_push_call_frame(call_info, fbc, 2, obj);\n#endif\n\tcall->symbol_table = NULL;\n\n\tZVAL_COPY(ZEND_CALL_ARG(call, 1), arg1);\n\tZVAL_COPY(ZEND_CALL_ARG(call, 2), arg2);\n\n\treturn yaf_do_call_user_method(call, fbc, ret);\n}\n/* }}} */\n\nZEND_HOT zend_string *yaf_build_camel_name(const char *str, size_t len) /* {{{ */ {\n\tunsigned int ucfirst = 1;\n\tzend_string *name = zend_string_alloc(len, 0);\n\tunsigned char *p = (unsigned char*)ZSTR_VAL(name);\n\tunsigned char *e = p + ZSTR_LEN(name);\n#ifdef __SSE2__\n\twhile (p + 16 <= e) {\n\t\tuint32_t mask;\n\t\t__m128i rot, lower, upper, delta, line;\n\t\tconst __m128i upper_guard = _mm_set1_epi8('A' + (char)128);\n\t\tconst __m128i lower_guard = _mm_set1_epi8('a' + (char)128);\n\t\t__m128i in = _mm_loadu_si128((__m128i*)str);\n\n\t\trot = _mm_sub_epi8(in, upper_guard);\n\t\tupper = _mm_cmpgt_epi8(rot, _mm_set1_epi8((char)-128 + 'Z' - 'A'));\n\t\tdelta = _mm_andnot_si128(upper, _mm_set1_epi8('a' - 'A'));\n\t    in = _mm_add_epi8(in, delta);\n\n\t\tline = _mm_cmpeq_epi8(in, _mm_set1_epi8('_'));\n\t\tmask = _mm_movemask_epi8(line);\n\t\tdelta = _mm_slli_si128(line, 1);\n\t\tif (ucfirst) {\n\t\t\tdelta = _mm_or_si128(delta, _mm_set_epi8(0, 0, 0, 0,\n\t\t\t\t\t\t\t\t\t\t\t\t     0, 0, 0, 0,\n\t\t\t\t\t\t\t\t\t\t\t\t     0, 0, 0, 0,\n\t\t\t\t\t\t\t\t\t\t\t\t     0, 0, 0, 0xff));\n\t\t}\n\t\tucfirst = mask & (0x1 << 15);\n\n\t\trot = _mm_sub_epi8(in, lower_guard);\n\t\tlower = _mm_cmpgt_epi8(rot, _mm_set1_epi8(-128 + 'z' - 'a'));;\n\t\tdelta = _mm_andnot_si128(lower, delta);\n\t\tdelta = _mm_and_si128(delta, _mm_set1_epi8('a' - 'A'));\n\t\tin = _mm_sub_epi8(in, delta);\n\n\t\t_mm_storeu_si128((__m128i*)p, in);\n\t\tp += 16;\n\t\tstr += 16;\n\t}\n#endif\n\tif (p != e) {\n\t\tif (ucfirst) {\n\t\t\t*p = toupper(*str++);\n\t\t} else {\n\t\t\t*p = tolower(*str++);\n\t\t}\n\t\twhile (++p != e) {\n\t\t\tif (*(str - 1) != '_') {\n\t\t\t\t*p = tolower(*str++);\n\t\t\t} else {\n\t\t\t\t*p = toupper(*str++);\n\t\t\t}\n\t\t}\n\t}\n\t*p = '\\0';\n\n\treturn name;\n}\n/* }}} */\n\nZEND_HOT zend_string *yaf_build_lower_name(const char *str, size_t len) /* {{{ */ {\n\tunsigned int i;\n\tzend_string *name = zend_string_alloc(len, 0);\n\tunsigned char *p = (unsigned char*)ZSTR_VAL(name);\n\n\tfor (i = 0; i < len; i++) {\n\t\t*p++ = tolower(str[i]);\n\t}\n\t*p = '\\0';\n\n\treturn name;\n}\n/* }}} */\n\nZEND_HOT zend_string *yaf_canonical_name(int type, zend_string *name) /* {{{ */ {\n\tif (type) {\n#if 0\n\t\tconst char *p = ZSTR_VAL(name);\n\t\tconst char *e = ZSTR_VAL(name) + ZSTR_LEN(name);\n\t\t/* Module, Controller */\n\t\tif ((*p < 'A' || *p > 'Z') && *p != '_') {\n\t\t\tgoto sanitize;\n\t\t}\n\t\twhile (p++ != e) {\n\t\t\tif (((*p == '_' && (*(p + 1) >= 'a' || *(p + 1) <= 'z'))) || (*p >= 'A' && *p <= 'Z')) {\n\t\t\t\tgoto sanitize;\n\t\t\t}\n\t\t}\n\t\treturn zend_string_copy(name);\nsanitize:\n#endif\n\t\treturn yaf_build_camel_name(ZSTR_VAL(name), ZSTR_LEN(name));\n\t} else {\n\t\treturn zend_string_tolower(name);\n\t}\n}\n/* }}} */\n\nZEND_HOT void yaf_replace_chr(char *name, uint32_t len, zend_uchar f, zend_uchar t) /* {{{ */ {\n\tchar *pos = name;\n#ifdef __SSE2__\n\tdo {\n\t\tconst __m128i from = _mm_set1_epi8(f);\n\t\tconst __m128i delta = _mm_set1_epi8(t - f);\n\t\twhile (len >= 16) {\n\t\t\t__m128i op = _mm_loadu_si128((__m128i *)pos);\n\t\t\t__m128i eq = _mm_cmpeq_epi8(op, from);\n\t\t\tif (_mm_movemask_epi8(eq)) {\n\t\t\t\teq = _mm_and_si128(eq, delta);\n\t\t\t\top = _mm_add_epi8(op, eq);\n\t\t\t\t_mm_storeu_si128((__m128i*)pos, op);\n\t\t\t}\n\t\t\tlen -= 16;\n\t\t\tpos += 16;\n\t\t}\n\t} while (0);\n#endif\n\tif (len) {\n\t\tname = pos; /* reset start */\n\t\twhile ((pos = memchr(pos, f, len - (pos - name)))) {\n\t\t\t*pos++ = t;\n\t\t}\n\t}\n}\n/* }}} */\n\n/** {{{ PHP_GINIT_FUNCTION\n*/\nPHP_GINIT_FUNCTION(yaf)\n{\n\n\tmemset(yaf_globals, 0, sizeof(*yaf_globals));\n}\n/* }}} */\n\n/** {{{ PHP_MINIT_FUNCTION\n*/\nPHP_MINIT_FUNCTION(yaf)\n{\n\tuint32_t idx = 0;\n\n\tREGISTER_INI_ENTRIES();\n\n    yaf_known_strings = malloc(sizeof(yaf_known_chars));\n\twhile (yaf_known_chars[idx]) {\n\t\tyaf_known_strings[idx] = zend_string_init(yaf_known_chars[idx], strlen(yaf_known_chars[idx]), 1);\n#if PHP_VERSION_ID < 70300\n\t\tzend_string_hash_val(yaf_known_strings[idx]);\n\t\tGC_REFCOUNT(yaf_known_strings[idx]) = 1;\n\t\tGC_FLAGS(yaf_known_strings[idx]) |= IS_STR_INTERNED | IS_STR_PERSISTENT;\n#else\n\t\tzend_string_hash_func(yaf_known_strings[idx]);\n\t\tGC_SET_REFCOUNT(yaf_known_strings[idx], 1);\n\t\tGC_ADD_FLAGS(yaf_known_strings[idx], IS_STR_INTERNED | IS_STR_PERSISTENT);\n#endif\n\t\tidx++;\n\t}\n\n\tif (yaf_is_use_namespace()) {\n\n\t\tREGISTER_STRINGL_CONSTANT(\"YAF\\\\VERSION\", PHP_YAF_VERSION, \tsizeof(PHP_YAF_VERSION) - 1, CONST_PERSISTENT | CONST_CS);\n\t\tREGISTER_STRINGL_CONSTANT(\"YAF\\\\ENVIRON\", YAF_G(environ_name), strlen(YAF_G(environ_name)), CONST_PERSISTENT | CONST_CS);\n\n\t\tREGISTER_LONG_CONSTANT(\"YAF\\\\ERR\\\\STARTUP_FAILED\", \t\tYAF_ERR_STARTUP_FAILED, CONST_PERSISTENT | CONST_CS);\n\t\tREGISTER_LONG_CONSTANT(\"YAF\\\\ERR\\\\ROUTE_FAILED\", \t\tYAF_ERR_ROUTE_FAILED, CONST_PERSISTENT | CONST_CS);\n\t\tREGISTER_LONG_CONSTANT(\"YAF\\\\ERR\\\\DISPATCH_FAILED\", \tYAF_ERR_DISPATCH_FAILED, CONST_PERSISTENT | CONST_CS);\n\t\tREGISTER_LONG_CONSTANT(\"YAF\\\\ERR\\\\AUTOLOAD_FAILED\", \tYAF_ERR_AUTOLOAD_FAILED, CONST_PERSISTENT | CONST_CS);\n\t\tREGISTER_LONG_CONSTANT(\"YAF\\\\ERR\\\\NOTFOUND\\\\MODULE\", \tYAF_ERR_NOTFOUND_MODULE, CONST_PERSISTENT | CONST_CS);\n\t\tREGISTER_LONG_CONSTANT(\"YAF\\\\ERR\\\\NOTFOUND\\\\CONTROLLER\",YAF_ERR_NOTFOUND_CONTROLLER, CONST_PERSISTENT | CONST_CS);\n\t\tREGISTER_LONG_CONSTANT(\"YAF\\\\ERR\\\\NOTFOUND\\\\ACTION\", \tYAF_ERR_NOTFOUND_ACTION, CONST_PERSISTENT | CONST_CS);\n\t\tREGISTER_LONG_CONSTANT(\"YAF\\\\ERR\\\\NOTFOUND\\\\VIEW\", \t\tYAF_ERR_NOTFOUND_VIEW, CONST_PERSISTENT | CONST_CS);\n\t\tREGISTER_LONG_CONSTANT(\"YAF\\\\ERR\\\\CALL_FAILED\",\t\t\tYAF_ERR_CALL_FAILED, CONST_PERSISTENT | CONST_CS);\n\t\tREGISTER_LONG_CONSTANT(\"YAF\\\\ERR\\\\TYPE_ERROR\",\t\t\tYAF_ERR_TYPE_ERROR, CONST_PERSISTENT | CONST_CS);\n\t\tREGISTER_LONG_CONSTANT(\"YAF\\\\ERR\\\\ACCESS\",\t\t\t    YAF_ERR_ACCESS_ERROR, CONST_PERSISTENT | CONST_CS);\n\n\t} else {\n\t\tREGISTER_STRINGL_CONSTANT(\"YAF_VERSION\", PHP_YAF_VERSION, \tsizeof(PHP_YAF_VERSION) - 1, \tCONST_PERSISTENT | CONST_CS);\n\t\tREGISTER_STRINGL_CONSTANT(\"YAF_ENVIRON\", YAF_G(environ_name),strlen(YAF_G(environ_name)), \tCONST_PERSISTENT | CONST_CS);\n\n\t\tREGISTER_LONG_CONSTANT(\"YAF_ERR_STARTUP_FAILED\", \t\tYAF_ERR_STARTUP_FAILED, CONST_PERSISTENT | CONST_CS);\n\t\tREGISTER_LONG_CONSTANT(\"YAF_ERR_ROUTE_FAILED\", \t\t\tYAF_ERR_ROUTE_FAILED, CONST_PERSISTENT | CONST_CS);\n\t\tREGISTER_LONG_CONSTANT(\"YAF_ERR_DISPATCH_FAILED\", \t\tYAF_ERR_DISPATCH_FAILED, CONST_PERSISTENT | CONST_CS);\n\t\tREGISTER_LONG_CONSTANT(\"YAF_ERR_AUTOLOAD_FAILED\", \t\tYAF_ERR_AUTOLOAD_FAILED, CONST_PERSISTENT | CONST_CS);\n\t\tREGISTER_LONG_CONSTANT(\"YAF_ERR_NOTFOUND_MODULE\", \t\tYAF_ERR_NOTFOUND_MODULE, CONST_PERSISTENT | CONST_CS);\n\t\tREGISTER_LONG_CONSTANT(\"YAF_ERR_NOTFOUND_CONTROLLER\", \tYAF_ERR_NOTFOUND_CONTROLLER, CONST_PERSISTENT | CONST_CS);\n\t\tREGISTER_LONG_CONSTANT(\"YAF_ERR_NOTFOUND_ACTION\", \t\tYAF_ERR_NOTFOUND_ACTION, CONST_PERSISTENT | CONST_CS);\n\t\tREGISTER_LONG_CONSTANT(\"YAF_ERR_NOTFOUND_VIEW\", \t\tYAF_ERR_NOTFOUND_VIEW, CONST_PERSISTENT | CONST_CS);\n\t\tREGISTER_LONG_CONSTANT(\"YAF_ERR_CALL_FAILED\",\t\t\tYAF_ERR_CALL_FAILED, CONST_PERSISTENT | CONST_CS);\n\t\tREGISTER_LONG_CONSTANT(\"YAF_ERR_TYPE_ERROR\",\t\t\tYAF_ERR_TYPE_ERROR, CONST_PERSISTENT | CONST_CS);\n\t\tREGISTER_LONG_CONSTANT(\"YAF_ERR_ACCESS_ERROR\",\t\t    YAF_ERR_ACCESS_ERROR, CONST_PERSISTENT | CONST_CS);\n\t}\n\n\t/* startup components */\n\tYAF_STARTUP(application);\n\tYAF_STARTUP(bootstrap);\n\tYAF_STARTUP(dispatcher);\n\tYAF_STARTUP(loader);\n\tYAF_STARTUP(request);\n\tYAF_STARTUP(response);\n\tYAF_STARTUP(controller);\n\tYAF_STARTUP(action);\n\tYAF_STARTUP(config);\n\tYAF_STARTUP(view);\n\tYAF_STARTUP(router);\n\tYAF_STARTUP(plugin);\n\tYAF_STARTUP(registry);\n\tYAF_STARTUP(session);\n\tYAF_STARTUP(exception);\n\n\treturn SUCCESS;\n}\n/* }}} */\n\n/** {{{ PHP_MSHUTDOWN_FUNCTION\n*/\nPHP_MSHUTDOWN_FUNCTION(yaf)\n{\n\tuint32_t idx = 0;\n\n\tUNREGISTER_INI_ENTRIES();\n\n\tfor (idx; idx < sizeof(yaf_known_chars)/sizeof(char*) - 1; idx++) {\n\t\tfree(yaf_known_strings[idx]);\n\t}\n\tfree(yaf_known_strings);\n\n\treturn SUCCESS;\n}\n/* }}} */\n\n/** {{{ PHP_RINIT_FUNCTION\n*/\nPHP_RINIT_FUNCTION(yaf)\n{\n\tYAF_FLAGS() |= YAF_THROW_EXCEPTION;\n\tYAF_FLAGS() &= ~YAF_CATCH_EXCEPTION;\n\n\tZVAL_NULL(&YAF_G(app));\n\tZVAL_NULL(&YAF_G(loader));\n\tZVAL_NULL(&YAF_G(registry));\n\tZVAL_NULL(&YAF_G(session));\n\n\treturn SUCCESS;\n}\n/* }}} */\n\n/** {{{ PHP_RSHUTDOWN_FUNCTION\n*/\nPHP_RSHUTDOWN_FUNCTION(yaf)\n{\n\tzval_ptr_dtor(&YAF_G(registry));\n\tzval_ptr_dtor(&YAF_G(session));\n\tzval_ptr_dtor(&YAF_G(loader));\n\tzval_ptr_dtor(&YAF_G(app));\n\n\treturn SUCCESS;\n}\n/* }}} */\n\n/** {{{ PHP_MINFO_FUNCTION\n*/\nPHP_MINFO_FUNCTION(yaf)\n{\n\tphp_info_print_table_start();\n\tif (PG(expose_php) && !sapi_module.phpinfo_as_text) {\n\t\tphp_info_print_table_header(2, \"yaf support\", YAF_LOGO_IMG\"enabled\");\n\t} else {\n\t\tphp_info_print_table_header(2, \"yaf support\", \"enabled\");\n\t}\n\n\tphp_info_print_table_row(2, \"Version\", PHP_YAF_VERSION);\n\tphp_info_print_table_row(2, \"Supports\", YAF_SUPPORT_URL);\n\tphp_info_print_table_end();\n\n\tDISPLAY_INI_ENTRIES();\n}\n/* }}} */\n\n/** {{{ DL support\n */\n#ifdef COMPILE_DL_YAF\nZEND_GET_MODULE(yaf)\n#endif\n/* }}} */\n\n/** {{{ module depends\n */\n#if ZEND_MODULE_API_NO >= 20050922\nzend_module_dep yaf_deps[] = {\n\tZEND_MOD_REQUIRED(\"spl\")\n\tZEND_MOD_REQUIRED(\"pcre\")\n\tZEND_MOD_OPTIONAL(\"session\")\n\t{NULL, NULL, NULL}\n};\n#endif\n/* }}} */\n\n/** {{{ yaf_module_entry\n*/\nzend_module_entry yaf_module_entry = {\n#if ZEND_MODULE_API_NO >= 20050922\n\tSTANDARD_MODULE_HEADER_EX, NULL,\n\tyaf_deps,\n#else\n\tSTANDARD_MODULE_HEADER,\n#endif\n\t\"yaf\",\n\tyaf_functions,\n\tPHP_MINIT(yaf),\n\tPHP_MSHUTDOWN(yaf),\n\tPHP_RINIT(yaf),\n\tPHP_RSHUTDOWN(yaf),\n\tPHP_MINFO(yaf),\n\tPHP_YAF_VERSION,\n\tPHP_MODULE_GLOBALS(yaf),\n\tPHP_GINIT(yaf),\n\tNULL,\n\tNULL,\n\tSTANDARD_MODULE_PROPERTIES_EX\n};\n/* }}} */\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf.dsp",
          "type": "blob",
          "size": 11.0908203125,
          "content": "# Microsoft Developer Studio Project File - Name=\"yaf\" - Package Owner=<4>\r\n# Microsoft Developer Studio Generated Build File, Format Version 6.00\r\n# ** DO NOT EDIT **\r\n\r\n# TARGTYPE \"Win32 (x86) Dynamic-Link Library\" 0x0102\r\n\r\nCFG=yaf - Win32 Release_TS\r\n!MESSAGE This is not a valid makefile. To build this project using NMAKE,\r\n!MESSAGE use the Export Makefile command and run\r\n!MESSAGE \r\n!MESSAGE NMAKE /f \"yaf.mak\".\r\n!MESSAGE \r\n!MESSAGE You can specify a configuration when running NMAKE\r\n!MESSAGE by defining the macro CFG on the command line. For example:\r\n!MESSAGE \r\n!MESSAGE NMAKE /f \"yaf.mak\" CFG=\"yaf - Win32 Release_TS\"\r\n!MESSAGE \r\n!MESSAGE Possible choices for configuration are:\r\n!MESSAGE \r\n!MESSAGE \"yaf - Win32 Release_TS\" (based on \"Win32 (x86) Dynamic-Link Library\")\r\n!MESSAGE \"yaf - Win32 Release_NTS\" (based on \"Win32 (x86) Dynamic-Link Library\")\r\n!MESSAGE \"yaf - Win32 Debug_TS\" (based on \"Win32 (x86) Dynamic-Link Library\")\r\n!MESSAGE \"yaf - Win32 Debug_NTS\" (based on \"Win32 (x86) Dynamic-Link Library\")\r\n!MESSAGE \r\n\r\n# Begin Project\r\n# PROP AllowPerConfigDependencies 0\r\n# PROP Scc_ProjName \"\"\r\n# PROP Scc_LocalPath \"\"\r\nCPP=cl.exe\r\nMTL=midl.exe\r\nRSC=rc.exe\r\n\r\n!IF  \"$(CFG)\" == \"yaf - Win32 Release_TS\"\r\n\r\n# PROP BASE Use_MFC 0\r\n# PROP BASE Use_Debug_Libraries 0\r\n# PROP BASE Output_Dir \"Release_TS\"\r\n# PROP BASE Intermediate_Dir \"Release_TS\"\r\n# PROP BASE Ignore_Export_Lib 0\r\n# PROP BASE Target_Dir \"\"\r\n# PROP Use_MFC 0\r\n# PROP Use_Debug_Libraries 0\r\n# PROP Output_Dir \"Release_TS\"\r\n# PROP Intermediate_Dir \"Release_TS\"\r\n# PROP Ignore_Export_Lib 0\r\n# PROP Target_Dir \"\"\r\n# ADD BASE CPP /nologo /MT /W3 /GX /O2 /I \".\\\" /I \"..\\..\" /I \"..\\..\\..\\Zend\" /I \"..\\..\\..\\bindlib_w32\" /I \"..\\..\\..\\TSRM\" /D \"WIN32\" /D \"NDEBUG\" /D \"_WINDOWS\" /D \"_MBCS\" /D \"_USRDLL\" /D \"COMPILE_DL_YAF\" /D ZTS=1 /YX /FD /c\r\n# ADD CPP /nologo /MD /W3 /GX /O2 /I \"..\\..\" /I \"..\\..\\main\" /I \"..\\..\\Zend\" /I \"..\\..\\..\\bindlib_w32\" /I \"..\\..\\TSRM\" /D ZEND_DEBUG=0 /D \"WIN32\" /D \"NDEBUG\" /D \"_WINDOWS\" /D \"_MBCS\" /D \"_USRDLL\" /D \"YAF_EXPORTS\" /D \"COMPILE_DL_YAF\" /D ZTS=1 /D \"ZEND_WIN32\" /D \"PHP_WIN32\" /D HAVE_YAF=1 /D \"LIBZEND_EXPORTS\" /FR /YX /FD /c\r\n# ADD BASE MTL /nologo /D \"NDEBUG\" /mktyplib203 /win32\r\n# ADD MTL /nologo /D \"NDEBUG\" /mktyplib203 /win32\r\n# ADD BASE RSC /l 0x406 /d \"NDEBUG\"\r\n# ADD RSC /l 0x406 /d \"NDEBUG\"\r\nBSC32=bscmake.exe\r\n# ADD BASE BSC32 /nologo\r\n# ADD BSC32 /nologo\r\nLINK32=link.exe\r\n# ADD BASE LINK32 kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib php5ts.lib /nologo /dll /machine:I386\r\n# ADD LINK32 kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib php5ts.lib /nologo /dll /machine:I386 /out:\"..\\..\\Release_TS/php_yaf.dll\" /libpath:\"..\\..\\Release_TS\" /libpath:\"..\\..\\Release_TS_Inline\"\r\n\r\n!ELSEIF  \"$(CFG)\" == \"yaf - Win32 Debug_TS\"\r\n\r\n# PROP BASE Use_MFC 0\r\n# PROP BASE Use_Debug_Libraries 0\r\n# PROP BASE Output_Dir \"Debug_TS\"\r\n# PROP BASE Intermediate_Dir \"Debug_TS\"\r\n# PROP BASE Ignore_Export_Lib 0\r\n# PROP BASE Target_Dir \"\"\r\n# PROP Use_MFC 0\r\n# PROP Use_Debug_Libraries 0\r\n# PROP Output_Dir \"Debug_TS\"\r\n# PROP Intermediate_Dir \"Debug_TS\"\r\n# PROP Ignore_Export_Lib 0\r\n# PROP Target_Dir \"\"\r\n# ADD BASE CPP /nologo /MT /W3 /GX /O2 /I \".\\\" /I \"..\\..\" /I \"..\\..\\Zend\" /I \"..\\..\\..\\bindlib_w32\" /I \"..\\..\\TSRM\" /D \"WIN32\" /D \"NDEBUG\" /D \"_WINDOWS\" /D \"_MBCS\" /D \"_USRDLL\" /D \"COMPILE_DL_YAF\" /D ZTS=1 /YX /FD /c\r\n# ADD CPP /nologo /MDd /W3 /GX /O2 /I \"..\\..\" /I \"..\\..\\main\" /I \"..\\..\\Zend\" /I \"..\\..\\..\\bindlib_w32\" /I \"..\\..\\TSRM\" /D ZEND_DEBUG=1 /D \"WIN32\" /D \"NDEBUG\" /D \"_WINDOWS\" /D \"_MBCS\" /D \"_USRDLL\" /D \"YAF_EXPORTS\" /D \"COMPILE_DL_YAF\" /D ZTS=1 /D \"ZEND_WIN32\" /D \"PHP_WIN32\" /D HAVE_YAF=1 /D \"LIBZEND_EXPORTS\" /YX /FD /c\r\n# ADD BASE MTL /nologo /D \"NDEBUG\" /mktyplib203 /win32\r\n# ADD MTL /nologo /D \"NDEBUG\" /mktyplib203 /win32\r\n# ADD BASE RSC /l 0x406 /d \"NDEBUG\"\r\n# ADD RSC /l 0x406 /d \"NDEBUG\"\r\nBSC32=bscmake.exe\r\n# ADD BASE BSC32 /nologo\r\n# ADD BSC32 /nologo\r\nLINK32=link.exe\r\n# ADD BASE LINK32 kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib php5ts.lib /nologo /dll /machine:I386\r\n# ADD LINK32 kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib php5ts_debug.lib /nologo /dll /machine:I386 /out:\"..\\..\\Debug_TS/php_yaf.dll\" /libpath:\"..\\..\\Debug_TS\"\r\n\r\n!ELSEIF  \"$(CFG)\" == \"yaf - Win32 Release_NTS\"\r\n\r\n# PROP BASE Use_MFC 0\r\n# PROP BASE Use_Debug_Libraries 0\r\n# PROP BASE Output_Dir \"Release_NTS\"\r\n# PROP BASE Intermediate_Dir \"Release_NTS\"\r\n# PROP BASE Ignore_Export_Lib 0\r\n# PROP BASE Target_Dir \"\"\r\n# PROP Use_MFC 0\r\n# PROP Use_Debug_Libraries 0\r\n# PROP Output_Dir \"Release_NTS\"\r\n# PROP Intermediate_Dir \"Release_NTS\"\r\n# PROP Ignore_Export_Lib 0\r\n# PROP Target_Dir \"\"\r\n# ADD BASE CPP /nologo /MT /W3 /GX /O2 /I \".\\\" /I \"..\\..\" /I \"..\\..\\Zend\" /I \"..\\..\\..\\bindlib_w32\" /I \"..\\..\\TSRM\" /D \"WIN32\" /D \"NDEBUG\" /D \"_WINDOWS\" /D \"_MBCS\" /D \"_USRDLL\" /D \"COMPILE_DL_YAF\" /YX /FD /c\r\n# ADD CPP /nologo /MDd /W3 /GX /O2 /I \"..\\..\" /I \"..\\..\\main\" /I \"..\\..\\Zend\" /I \"..\\..\\..\\bindlib_w32\" /I \"..\\..\\TSRM\" /D ZEND_DEBUG=0 /D \"WIN32\" /D \"NDEBUG\" /D \"_WINDOWS\" /D \"_MBCS\" /D \"_USRDLL\" /D \"YAF_EXPORTS\" /D \"COMPILE_DL_YAF\" /D \"ZEND_WIN32\" /D \"PHP_WIN32\" /D HAVE_YAF=1 /D \"LIBZEND_EXPORTS\" /YX /FD /c\r\n# ADD BASE MTL /nologo /D \"NDEBUG\" /mktyplib203 /win32\r\n# ADD MTL /nologo /D \"NDEBUG\" /mktyplib203 /win32\r\n# ADD BASE RSC /l 0x406 /d \"NDEBUG\"\r\n# ADD RSC /l 0x406 /d \"NDEBUG\"\r\nBSC32=bscmake.exe\r\n# ADD BASE BSC32 /nologo\r\n# ADD BSC32 /nologo\r\nLINK32=link.exe\r\n# ADD BASE LINK32 kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib php5.lib /nologo /dll /machine:I386\r\n# ADD LINK32 kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib php5.lib /nologo /dll /machine:I386 /out:\"..\\..\\Release_NTS/php_yaf.dll\" /libpath:\"..\\..\\Release_NTS\"\r\n\r\n!ELSEIF  \"$(CFG)\" == \"yaf - Win32 Debug_NTS\"\r\n\r\n# PROP BASE Use_MFC 0\r\n# PROP BASE Use_Debug_Libraries 0\r\n# PROP BASE Output_Dir \"Debug_NTS\"\r\n# PROP BASE Intermediate_Dir \"Debug_NTS\"\r\n# PROP BASE Ignore_Export_Lib 0\r\n# PROP BASE Target_Dir \"\"\r\n# PROP Use_MFC 0\r\n# PROP Use_Debug_Libraries 0\r\n# PROP Output_Dir \"Debug_NTS\"\r\n# PROP Intermediate_Dir \"Debug_NTS\"\r\n# PROP Ignore_Export_Lib 0\r\n# PROP Target_Dir \"\"\r\n# ADD BASE CPP /nologo /MT /W3 /GX /O2 /I \".\\\" /I \"..\\..\" /I \"..\\..\\Zend\" /I \"..\\..\\..\\bindlib_w32\" /I \"..\\..\\TSRM\" /D \"WIN32\" /D \"NDEBUG\" /D \"_WINDOWS\" /D \"_MBCS\" /D \"_USRDLL\" /D \"COMPILE_DL_YAF\" /YX /FD /c\r\n# ADD CPP /nologo /MDd /W3 /GX /O2 /I \"..\\..\" /I \"..\\..\\main\" /I \"..\\..\\Zend\" /I \"..\\..\\..\\bindlib_w32\" /I \"..\\..\\TSRM\" /D ZEND_DEBUG=1 /D \"WIN32\" /D \"NDEBUG\" /D \"_WINDOWS\" /D \"_MBCS\" /D \"_USRDLL\" /D \"YAF_EXPORTS\" /D \"COMPILE_DL_YAF\" /D ZTS=1 /D \"ZEND_WIN32\" /D \"PHP_WIN32\" /D HAVE_YAF=1 /D \"LIBZEND_EXPORTS\" /YX /FD /c\r\n# ADD BASE MTL /nologo /D \"NDEBUG\" /mktyplib203 /win32\r\n# ADD MTL /nologo /D \"NDEBUG\" /mktyplib203 /win32\r\n# ADD BASE RSC /l 0x406 /d \"NDEBUG\"\r\n# ADD RSC /l 0x406 /d \"NDEBUG\"\r\nBSC32=bscmake.exe\r\n# ADD BASE BSC32 /nologo\r\n# ADD BSC32 /nologo\r\nLINK32=link.exe\r\n# ADD BASE LINK32 kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib php5ts.lib /nologo /dll /machine:I386\r\n# ADD LINK32 kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib php5_debug.lib /nologo /dll /machine:I386 /out:\"..\\..\\Debug_NTS/php_yaf.dll\" /libpath:\"..\\..\\Debug_NTS\"\r\n\r\n!ENDIF \r\n\r\n# Begin Target\r\n\r\n# Name \"yaf - Win32 Release_TS\"\r\n# Name \"yaf - Win32 Debug_TS\"\r\n# Name \"yaf - Win32 Release_NTS\"\r\n# Name \"yaf - Win32 Debug_NTS\"\r\n# Begin Group \"Yaf Source Files\"\r\n\r\n# PROP Default_Filter \"cpp;c;cxx;rc;def;r;odl;idl;hpj;bat\"\r\n# Begin Source File\r\n\r\nSOURCE=.\\yaf.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\yaf_application.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\yaf_loader.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\yaf_dispatcher.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\yaf_bootstrap.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\yaf_config.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\configs\\yaf_config_ini.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\configs\\yaf_config_simple.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\yaf_registry.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\yaf_controller.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\yaf_action.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\yaf_view.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\views\\yaf_view_interface.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\views\\yaf_view_simple.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\yaf_request.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\requests\\yaf_request_http.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\requests\\yaf_request_simple.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\yaf_response.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\responses\\yaf_response_cli.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\responses\\yaf_response_http.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\yaf_router.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\routes\\yaf_route_interface.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\routes\\yaf_route_static.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\routes\\yaf_route_simple.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\routes\\yaf_route_supervar.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\routes\\yaf_route_regex.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\routes\\yaf_route_rewrite.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\routes\\yaf_route_map.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\yaf_exception.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\yaf_plugin.c\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\yaf_session.c\r\n# End Source File\r\n\r\n# End Group\r\n# Begin Group \"Yaf Header Files\"\r\n\r\n# PROP Default_Filter \"h;hpp;hxx;hm;inl\"\r\n# Begin Source File\r\n\r\nSOURCE=.\\php_yaf.h\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\yaf_application.h\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\yaf_bootstrap.h\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\yaf_loader.h\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\yaf_config.h\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\yaf_registry.h\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\yaf_controller.h\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\yaf_view.h\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\php_request.h\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\yaf_router.h\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\yaf_exception.h\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\yaf_plugin.h\r\n# End Source File\r\n# Begin Source File\r\n\r\nSOURCE=.\\yaf_session.h\r\n# End Source File\r\n# End Group\r\n# End Target\r\n# End Project\r\n"
        },
        {
          "name": "yaf.php",
          "type": "blob",
          "size": 0.478515625,
          "content": "<?php\n$br = (php_sapi_name() == \"cli\")? \"\":\"<br>\";\n\nif(!extension_loaded('ap')) {\n\tdl('ap.' . PHP_SHLIB_SUFFIX);\n}\n$module = 'ap';\n$functions = get_extension_funcs($module);\necho \"Functions available in the test extension:$br\\n\";\nforeach($functions as $func) {\n    echo $func.\"$br\\n\";\n}\necho \"$br\\n\";\n$function = 'confirm_' . $module . '_compiled';\nif (extension_loaded($module)) {\n\t$str = $function($module);\n} else {\n\t$str = \"Module $module is not compiled into PHP\";\n}\necho \"$str\\n\";\n?>\n"
        },
        {
          "name": "yaf_action.c",
          "type": "blob",
          "size": 3.240234375,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include \"php.h\"\n\n#include \"php_yaf.h\"\n#include \"yaf_namespace.h\"\n#include \"yaf_request.h\"\n#include \"yaf_response.h\"\n#include \"yaf_view.h\"\n#include \"yaf_dispatcher.h\"\n#include \"yaf_exception.h\"\n#include \"yaf_controller.h\"\n#include \"yaf_action.h\"\n\n#if PHP_MAJOR_VERSION > 7\n#include \"yaf_controller_arginfo.h\"\n#else\n#include \"yaf_controller_legacy_arginfo.h\"\n#endif\n\nzend_class_entry *yaf_action_ce;\n\nvoid yaf_action_init(yaf_action_object *action, yaf_controller_t *ctl, zend_string *name) /* {{{ */ {\n\tZVAL_COPY(&action->ctl.ctl, ctl);\n\taction->ctl.name = action->name;\n\taction->name = zend_string_copy(name);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Action_Abstract::getController(void)\n*/\nPHP_METHOD(yaf_action, getController) {\n\tyaf_action_object *act = Z_YAFCTLOBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\tif (Z_TYPE(act->ctl.ctl) == IS_OBJECT) {\n\t\tRETURN_ZVAL(&act->ctl.ctl, 1, 0);\n\t}\n\n\tRETURN_NULL();\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Action_Abstract::getControllerName(void)\n*/\nPHP_METHOD(yaf_action, getControllerName) {\n\tyaf_action_object *act = Z_YAFCTLOBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (act->ctl.name) {\n\t\tRETURN_STR_COPY(act->ctl.name);\n\t}\n\n\tRETURN_NULL();\n}\n/* }}} */\n\n/** {{{ yaf_controller_methods\n*/\nzend_function_entry yaf_action_methods[] = {\n    PHP_ABSTRACT_ME(yaf_action_controller, execute, arginfo_class_Yaf_Action_Abstract_execute)\n    PHP_ME(yaf_action, getController, arginfo_class_Yaf_Action_Abstract_getController, ZEND_ACC_PUBLIC)\n    PHP_ME(yaf_action, getControllerName, arginfo_class_Yaf_Action_Abstract_getControllerName, ZEND_ACC_PUBLIC)\n    {NULL, NULL, NULL}\n};\n/* }}} */\n\n/** {{{ YAF_STARTUP_FUNCTION\n*/\nYAF_STARTUP_FUNCTION(action) {\n\tzend_class_entry ce;\n\tYAF_INIT_CLASS_ENTRY(ce, \"Yaf_Action_Abstract\", \"Yaf\\\\Action_Abstract\", yaf_action_methods);\n\tyaf_action_ce = zend_register_internal_class_ex(&ce, yaf_controller_ce);\n\tyaf_action_ce->ce_flags |= ZEND_ACC_IMPLICIT_ABSTRACT_CLASS;\n\n\tzend_declare_property_null(yaf_action_ce, ZEND_STRL(YAF_ACTION_PROPERTY_NAME_CTRL),\tZEND_ACC_PROTECTED);\n\n\treturn SUCCESS;\n}\n/* }}} */\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_action.h",
          "type": "blob",
          "size": 1.40234375,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifndef YAF_ACTION_H\n#define YAF_ACTION_H\n\n#define YAF_ACTION_PROPERTY_NAME_CTRL \t\"_controller\"\n\n#define yaf_action_object yaf_controller_object\n\nextern zend_class_entry * yaf_action_ce;\n\nvoid yaf_action_init(yaf_action_object *action, yaf_controller_t *ctl, zend_string *name);\n\nYAF_STARTUP_FUNCTION(action);\n#endif\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n\n"
        },
        {
          "name": "yaf_application.c",
          "type": "blob",
          "size": 31.8671875,
          "content": "/*\n   +----------------------------------------------------------------------+\n   | Yet Another Framework                                                |\n   +----------------------------------------------------------------------+\n   | This source file is subject to version 3.01 of the PHP license,      |\n   | that is bundled with this package in the file LICENSE, and is        |\n   | available through the world-wide-web at the following url:           |\n   | http://www.php.net/license/3_01.txt                                  |\n   | If you did not receive a copy of the PHP license and are unable to   |\n   | obtain it through the world-wide-web, please send a note to          |\n   | license@php.net so we can mail you a copy immediately.               |\n   +----------------------------------------------------------------------+\n   | Author: Xinchen Hui  <laruence@php.net>                              |\n   +----------------------------------------------------------------------+\n*/\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include \"php.h\"\n#include \"php_ini.h\" /* for zend_alter_ini_entry */\n#include \"Zend/zend_exceptions.h\" /* for zend_throw_exception_ex */\n#include \"Zend/zend_interfaces.h\" /* for zend_call_method_with_* */\n\n#include \"php_yaf.h\"\n#include \"yaf_namespace.h\"\n#include \"yaf_application.h\"\n#include \"yaf_dispatcher.h\"\n#include \"yaf_router.h\"\n#include \"yaf_config.h\"\n#include \"yaf_loader.h\"\n#include \"yaf_request.h\"\n#include \"yaf_bootstrap.h\"\n#include \"yaf_exception.h\"\n\n#if PHP_MAJOR_VERSION > 7\n#include \"yaf_application_arginfo.h\"\n#else\n#include \"yaf_application_legacy_arginfo.h\"\n#endif\n\nzend_class_entry    *yaf_application_ce;\nstatic zend_object_handlers yaf_application_obj_handlers;\n\nstatic void yaf_application_free(zend_object *object) /* {{{ */ {\n\tyaf_application_object *app = yaf_application_instance();\n\n\tif ((app != php_yaf_application_fetch_object(object)) || !app->env) {\n\t\tzend_object_std_dtor(object);\n\t\treturn;\n\t}\n\n\tzend_string_release(app->env);\n\n\tOBJ_RELEASE(Z_OBJ(app->config));\n\tOBJ_RELEASE(Z_OBJ(app->dispatcher));\n\n\tzend_string_release(app->default_module);\n\tzend_string_release(app->default_controller);\n\tzend_string_release(app->default_action);\n\tif (app->library) {\n\t\tzend_string_release(app->library);\n\t}\n\tzend_string_release(app->directory);\n\n\tif (app->ext) {\n\t\tzend_string_release(app->ext);\n\t}\n\tif (app->bootstrap) {\n\t\tzend_string_release(app->bootstrap);\n\t}\n\tif (app->view_ext) {\n\t\tzend_string_release(app->view_ext);\n\t}\n\tif (app->base_uri) {\n\t\tzend_string_release(app->base_uri);\n\t}\n\tif (app->err_msg) {\n\t\tzend_string_release(app->err_msg);\n\t}\n\tif (app->modules) {\n\t\tif (GC_DELREF(app->modules) == 0) {\n\t\t\tGC_REMOVE_FROM_BUFFER(app->modules);\n\t\t\tzend_array_destroy(app->modules);\n\t\t}\n\t}\n\tif (app->properties) {\n\t\tif (GC_DELREF(app->properties) == 0) {\n\t\t\tGC_REMOVE_FROM_BUFFER(app->properties);\n\t\t\tzend_array_destroy(app->properties);\n\t\t}\n\t}\n\n\tzend_object_std_dtor(object);\n}\n/* }}} */\n\nstatic zend_object* yaf_application_new(zend_class_entry *ce) /* {{{ */ {\n\tyaf_application_object *app = emalloc(sizeof(yaf_application_object) + zend_object_properties_size(ce));\n\n\tmemset(app, 0, XtOffsetOf(yaf_application_object, std));\n\tzend_object_std_init(&app->std, ce);\n\tapp->std.handlers = &yaf_application_obj_handlers;\n\n\treturn &app->std;\n}\n/* }}} */\n\nstatic HashTable *yaf_application_get_gc(yaf_object *obj, zval **table, int *n) /* {{{ */ {\n\tyaf_application_object *app = php_yaf_application_fetch_object(yaf_strip_obj(obj));\n\n\t*table = &app->dispatcher;\n\t*n = 2;\n\n\treturn NULL;\n}\n/* }}} */\n\nstatic HashTable *yaf_application_get_properties(yaf_object *obj) /* {{{ */ {\n\tzval rv;\n\tHashTable *ht;\n\tyaf_application_object *app = php_yaf_application_fetch_object(yaf_strip_obj(obj));\n\n    if (!app->properties) {\n\t\tALLOC_HASHTABLE(app->properties);\n\t\tzend_hash_init(app->properties, 16, NULL, ZVAL_PTR_DTOR, 0);\n\t\tYAF_ALLOW_VIOLATION(app->properties);\n\t}\n\n\tht = app->properties;\n\tZVAL_STR_COPY(&rv, app->directory);\n\tzend_hash_str_update(ht, \"directory\", sizeof(\"directory\") - 1, &rv);\n\n\tif (app->library) {\n\t\tZVAL_STR_COPY(&rv, app->library);\n\t} else {\n\t\tZVAL_NULL(&rv);\n\t}\n\tzend_hash_str_update(ht, \"library\", sizeof(\"library\") - 1, &rv);\n\n\tif (app->bootstrap) {\n\t\tZVAL_STR_COPY(&rv, app->bootstrap);\n\t} else {\n\t\tZVAL_NULL(&rv);\n\t}\n\tzend_hash_str_update(ht, \"bootstrap\", sizeof(\"bootstrap\") - 1, &rv);\n\n\tif (app->ext) {\n\t\tZVAL_STR_COPY(&rv, app->ext);\n\t} else {\n\t\tZVAL_STRINGL(&rv, YAF_DEFAULT_EXT, sizeof(YAF_DEFAULT_EXT) - 1);\n\t}\n\tzend_hash_str_update(ht, \"ext\", sizeof(\"ext\") - 1, &rv);\n\n\tif (app->view_ext) {\n\t\tZVAL_STR_COPY(&rv, app->view_ext);\n\t} else {\n\t\tZVAL_STRINGL(&rv, YAF_DEFAULT_VIEW_EXT, sizeof(YAF_DEFAULT_VIEW_EXT) - 1);\n\t}\n\tzend_hash_str_update(ht, \"view_ext\", sizeof(\"view_ext\") - 1, &rv);\n\n\tZVAL_STR_COPY(&rv, app->env);\n\tzend_hash_str_update(ht, \"environ:protected\", sizeof(\"environ:protected\") - 1, &rv);\n\n\tZVAL_BOOL(&rv, YAF_APP_FLAGS(app) & YAF_APP_RUNNING);\n\tzend_hash_str_update(ht, \"running:protected\", sizeof(\"running:protected\") - 1, &rv);\n\n\tif (app->err_msg) {\n\t\tZVAL_STR_COPY(&rv, app->err_msg);\n\t} else {\n\t\tZVAL_NULL(&rv);\n\t}\n\tzend_hash_str_update(ht, \"err_msg:protected\", sizeof(\"err_msg:protected\") - 1, &rv);\n\n\tZVAL_LONG(&rv, app->err_no);\n\tzend_hash_str_update(ht, \"err_no:protected\", sizeof(\"err_no:protected\") - 1, &rv);\n\tif (Z_TYPE(app->config) == IS_OBJECT) {\n\t\tZVAL_OBJ(&rv, Z_OBJ(app->config));\n\t\tZ_ADDREF(rv);\n\t} else {\n\t\tZVAL_NULL(&rv);\n\t}\n\tzend_hash_str_update(ht, \"config:protected\", sizeof(\"config:protected\") - 1, &rv);\n\n\tif (Z_TYPE(app->dispatcher) == IS_OBJECT) {\n\t\tZVAL_OBJ(&rv, Z_OBJ(app->dispatcher));\n\t\tGC_ADDREF(Z_OBJ(app->dispatcher));\n\t} else {\n\t\tZVAL_NULL(&rv);\n\t}\n\tzend_hash_str_update(ht, \"dispatcher:protected\", sizeof(\"dispatcher:protected\") - 1, &rv);\n\n\tif (app->modules) {\n\t\tZVAL_ARR(&rv, app->modules);\n\t\tGC_ADDREF(app->modules);\n\t} else {\n\t\tzval t;\n\t\tarray_init(&rv);\n\t\tif (app->default_module) {\n\t\t\tZVAL_STR_COPY(&t, app->default_module);\n\t\t} else {\n\t\t\tZVAL_STR(&t, YAF_KNOWN_STR(YAF_DEFAULT_MODULE));\n\t\t}\n\t\tzend_hash_index_update(Z_ARRVAL(rv), 0, &t);\n\t}\n\tzend_hash_str_update(ht, \"modules:protected\", sizeof(\"modules:protected\") - 1, &rv);\n\t\n\tif (app->default_route) {\n\t\tZVAL_ARR(&rv, zend_array_dup(app->default_route));\n\t} else {\n\t\tZVAL_NULL(&rv);\n\t}\n\tzend_hash_str_update(ht, \"default_route:protected\", sizeof(\"default_route:protected\") - 1, &rv);\n\n\treturn ht;\n}\n/* }}} */\n\nstatic ZEND_COLD zend_never_inline void yaf_application_errors_hub(int type, ...) /* {{{ */ {\n\tva_list args;\n\n\tva_start(args, type);\n\tif (type == 0) {\n\t\tyaf_application_object *app = va_arg(args, yaf_application_object*);\n\t\tif (Z_TYPE(YAF_G(app)) == IS_OBJECT) {\n\t\t\tzend_throw_exception_ex(NULL, YAF_ERR_STARTUP_FAILED, \"Only one application can be initialized\");\n\t\t} else if (Z_TYPE(app->config) != IS_OBJECT) {\n\t\t\tzend_throw_exception_ex(NULL, YAF_ERR_STARTUP_FAILED, \"Initialization of application config failed\");\n\t\t} else {\n\t\t\tzval *pzval;\n\t\t\tHashTable *conf = Z_YAFCONFIGOBJ(app->config)->config;\n\t\t\tif ((((pzval = zend_hash_find(conf, YAF_KNOWN_STR(YAF_APPLICATION))) == NULL) || Z_TYPE_P(pzval) != IS_ARRAY) &&\n\t\t\t\t\t(((pzval = zend_hash_find(conf, YAF_KNOWN_STR(YAF))) == NULL) || Z_TYPE_P(pzval) != IS_ARRAY)) {\n\t\t\t\tyaf_trigger_error(YAF_ERR_TYPE_ERROR, \"%s\", \"Expected an array of application configuration\");\n\t\t\t} else {\n\t\t\t\tyaf_trigger_error(YAF_ERR_STARTUP_FAILED, \"%s\", \"Expected 'directory' entry in application configuration\");\n\t\t\t}\n\t\t\tzval_ptr_dtor(&app->config);\n\t\t}\n\t} else if (type == 1) {\n\t\tzend_class_entry *ce = va_arg(args, zend_class_entry*);\n\t\tchar *bootstrap_path = va_arg(args, char*);\n\n\t\tif (ce) {\n\t\t\tyaf_trigger_error(YAF_ERR_TYPE_ERROR, \"'%s' is not a subclass of %s\", ZSTR_VAL(ce->name), ZSTR_VAL(yaf_bootstrap_ce->name));\n\t\t} else if (zend_hash_str_exists(&EG(included_files), bootstrap_path, strlen(bootstrap_path))) {\n\t\t\tphp_error_docref(NULL, E_WARNING, \"Couldn't find class %s in %s\", YAF_DEFAULT_BOOTSTRAP, bootstrap_path);\n\t\t} else {\n\t\t\tphp_error_docref(NULL, E_WARNING, \"Couldn't find bootstrap file %s\", bootstrap_path);\n\t\t}\n\t}\n\tva_end(args);\n}\n/* }}} */\n\nstatic inline zend_object *yaf_application_get_dispatcher(yaf_application_object *app) /* {{{ */ {\n\tif (Z_TYPE(app->dispatcher) == IS_OBJECT) {\n\t\tZ_ADDREF(app->dispatcher);\n\t\treturn Z_OBJ(app->dispatcher);\n\t}\n\treturn NULL;\n}\n/* }}} */\n\nstatic inline zend_object *yaf_application_get_config(yaf_application_object *app) /* {{{ */ {\n\tif (Z_TYPE(app->config) == IS_OBJECT) {\n\t\tGC_ADDREF(Z_OBJ(app->config));\n\t\treturn Z_OBJ(app->config);\n\t}\n\treturn NULL;\n}\n/* }}} */\n\nstatic zval *yaf_application_read_property(yaf_object *obj, void *name, int type, void **cache_slot, zval *rv) /* {{{ */ {\n\tzend_string *member;\n\tyaf_application_object *app = php_yaf_application_fetch_object(yaf_strip_obj(obj));\n\n#if PHP_VERSION_ID < 80000\n\tif (UNEXPECTED(Z_TYPE_P((zval*)name) != IS_STRING)) {\n\t\treturn &EG(uninitialized_zval);\n\t}\n    member = Z_STR_P((zval*)name);\n#else\n\tmember = (zend_string*)name;\n#endif\n\n\tif (UNEXPECTED(type == BP_VAR_W || type == BP_VAR_RW)) {\n\t\treturn &EG(error_zval);\n\t}\n\n\tif (zend_string_equals_literal(member, \"directory\")) {\n\t\tif (app->directory) {\n\t\t\tZVAL_STR_COPY(rv, app->directory);\n\t\t\treturn rv;\n\t\t}\n\t\treturn &EG(uninitialized_zval);\n\t}\n\n\tif (zend_string_equals_literal(member, \"library\")) {\n\t\tif (app->library) {\n\t\t\tZVAL_STR_COPY(rv, app->library);\n\t\t\treturn rv;\n\t\t}\n\t\treturn &EG(uninitialized_zval);\n\t}\n\n\tif (zend_string_equals_literal(member, \"bootstrap\")) {\n\t\tif (app->bootstrap) {\n\t\t\tZVAL_STR_COPY(rv, app->bootstrap);\n\t\t\treturn rv;\n\t\t}\n\t\treturn &EG(uninitialized_zval);\n\t}\n\n\tif (zend_string_equals_literal(member, \"ext\")) {\n\t\tif (app->ext) {\n\t\t\tZVAL_STR_COPY(rv, app->ext);\n\t\t\treturn rv;\n\t\t}\n\t\treturn &EG(uninitialized_zval);\n\t}\n\n\tif (zend_string_equals_literal(member, \"view_ext\")) {\n\t\tif (app->view_ext) {\n\t\t\tZVAL_STR_COPY(rv, app->view_ext);\n\t\t\treturn rv;\n\t\t}\n\t\treturn &EG(uninitialized_zval);\n\t}\n\n\t/*\n\tif (zend_string_equals_literal(member, \"environ\")) {\n\t\tif (app->env) {\n\t\t\tZVAL_STR_COPY(rv, app->env);\n\t\t\treturn rv;\n\t\t}\n\t\treturn &EG(uninitialized_zval);\n\t}\n\n\tif (zend_string_equals_literal(member, \"running\")) {\n\t\tZVAL_BOOL(rv, app->running);\n\t\treturn rv;\n\t}\n\n\n\tif (zend_string_equals_literal(member, \"dispatcher\")) {\n\t\tzend_object *dispatcher = yaf_application_get_dispatcher(app);\n\t\tif (dispatcher) {\n\t\t\tZVAL_OBJ(rv, dispatcher);\n\t\t\treturn rv;\n\t\t}\n\t\treturn &EG(uninitialized_zval);\n\t}\n\n\tif (zend_string_equals_literal(member, \"config\")) {\n\t\tzend_object *config = yaf_application_get_config(app);\n\t\tif (config) {\n\t\t\tZVAL_OBJ(rv, config);\n\t\t\treturn rv;\n\t\t}\n\t\treturn &EG(uninitialized_zval);\n\t}\n\n\tif (zend_string_equals_literal(member, \"err_msg\")) {\n\t\tif (app->err_msg) {\n\t\t\tZVAL_STR_COPY(rv, app->err_msg);\n\t\t\treturn rv;\n\t\t}\n\t\treturn &EG(uninitialized_zval);\n\t}\n\n\tif (zend_string_equals_literal(member, \"err_no\")) {\n\t\tZVAL_BOOL(rv, app->err_no);\n\t\treturn rv;\n\t}\n\t*/\n\n\treturn &EG(uninitialized_zval);\n}\n/* }}} */\n\nstatic YAF_WRITE_HANDLER yaf_application_write_property(yaf_object *obj, void *name, zval *value, void **cache_slot) /* {{{ */ {\n\tzend_string *member;\n\tyaf_application_object *app = php_yaf_application_fetch_object(yaf_strip_obj(obj));\n\n#if PHP_VERSION_ID < 80000\n\tif (UNEXPECTED(Z_TYPE_P((zval*)name) != IS_STRING)) {\n\t\tYAF_WHANDLER_RET(value);\n\t}\n    member = Z_STR_P((zval*)name);\n#else\n\tmember = (zend_string*)name;\n#endif\n\n\tif (zend_string_equals_literal(member, \"directory\")) {\n\t\tif (Z_TYPE_P(value) != IS_STRING) {\n\t\t\tYAF_WHANDLER_RET(value);\n\t\t}\n\t\tif (app->directory) {\n\t\t\tzend_string_release(app->directory);\n\t\t}\n\t\tapp->directory = zend_string_copy(Z_STR_P(value));\n\t\tYAF_WHANDLER_RET(value);\n\t}\n\n\tif (zend_string_equals_literal(member, \"bootstrap\")) {\n\t\tif (Z_TYPE_P(value) != IS_STRING) {\n\t\t\tYAF_WHANDLER_RET(value);\n\t\t}\n\t\tif (app->bootstrap) {\n\t\t\tzend_string_release(app->bootstrap);\n\t\t}\n\t\tapp->bootstrap = zend_string_copy(Z_STR_P(value));\n\t\tYAF_WHANDLER_RET(value);\n\t}\n\n\tif (zend_string_equals_literal(member, \"library\")) {\n\t\tif (Z_TYPE_P(value) != IS_STRING) {\n\t\t\tYAF_WHANDLER_RET(value);\n\t\t}\n\t\tif (app->library) {\n\t\t\tzend_string_release(app->library);\n\t\t}\n\t\tapp->library = zend_string_copy(Z_STR_P(value));\n\t\tYAF_WHANDLER_RET(value);\n\t}\n\n\tif (zend_string_equals_literal(member, \"view_ext\")) {\n\t\tif (Z_TYPE_P(value) != IS_STRING) {\n\t\t\tYAF_WHANDLER_RET(value);\n\t\t}\n\t\tif (app->view_ext) {\n\t\t\tzend_string_release(app->view_ext);\n\t\t}\n\t\tapp->view_ext = zend_string_copy(Z_STR_P(value));\n\t\tYAF_WHANDLER_RET(value);\n\t}\n\n\tif (zend_string_equals_literal(member, \"ext\")) {\n\t\tif (Z_TYPE_P(value) != IS_STRING) {\n\t\t\tYAF_WHANDLER_RET(value);\n\t\t}\n\t\tif (app->ext) {\n\t\t\tzend_string_release(app->ext);\n\t\t}\n\t\tapp->ext = zend_string_copy(Z_STR_P(value));\n\t\tYAF_WHANDLER_RET(value);\n\t}\n\n\tYAF_WHANDLER_RET(value);\n}\n/* }}} */\n\nZEND_HOT int yaf_application_is_module_name(zend_string *name) /* {{{ */ {\n\tzval *pzval;\n\tyaf_application_object *app = yaf_application_instance();\n\n\tif (UNEXPECTED(app == NULL)) {\n\t\treturn 0;\n\t}\n\tif (app->modules == NULL) {\n\t\tif (UNEXPECTED(app->default_module)) {\n\t\t\treturn zend_string_equals_ci(app->default_module, name);\n\t\t}\n\t\treturn zend_string_equals_ci(name, YAF_KNOWN_STR(YAF_DEFAULT_MODULE));\n\t}\n\n\tZEND_HASH_FOREACH_VAL(app->modules, pzval) {\n\t\tif (UNEXPECTED(Z_TYPE_P(pzval) != IS_STRING)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (zend_string_equals_ci(Z_STR_P(pzval), name)) {\n\t\t\treturn 1;\n\t\t}\n\t} ZEND_HASH_FOREACH_END();\n\treturn 0;\n}\n/* }}} */\n\nZEND_HOT int yaf_application_is_module_name_str(const char *name, size_t len) /* {{{ */ {\n\tzval *pzval;\n\tyaf_application_object *app = yaf_application_instance();\n\n\tif (UNEXPECTED(app == NULL)) {\n\t\treturn 0;\n\t}\n\tif (app->modules == NULL) {\n\t\tif (UNEXPECTED(app->default_module)) {\n\t\t\treturn len == ZSTR_LEN(app->default_module) && !strncasecmp(name, ZSTR_VAL(app->default_module), len);\n\t\t}\n\t\treturn len == strlen(YAF_KNOWN_CHARS(YAF_DEFAULT_MODULE)) &&\n\t\t\t!strncasecmp(name, YAF_KNOWN_CHARS(YAF_DEFAULT_MODULE), len);\n\t}\n\n\tZEND_HASH_FOREACH_VAL(app->modules, pzval) {\n\t\tif (UNEXPECTED(Z_TYPE_P(pzval) != IS_STRING)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Z_STRLEN_P(pzval) == len && strncasecmp(Z_STRVAL_P(pzval), name, len) == 0) {\n\t\t\treturn 1;\n\t\t}\n\t} ZEND_HASH_FOREACH_END();\n\n\treturn 0;\n}\n/* }}} */\n\nstatic zend_never_inline void yaf_application_parse_optional(yaf_application_object *app, zend_array *conf) /* {{{ */ {\n\tzval *pzval, *psval;\n\n\t/* following options are optional */\n\tif (UNEXPECTED((pzval = zend_hash_find(conf, YAF_KNOWN_STR(YAF_BOOTSTRAP))) != NULL &&\n\t\tZ_TYPE_P(pzval) == IS_STRING)) {\n\t\tapp->bootstrap = zend_string_copy(Z_STR_P(pzval));\n\t}\n\n\tif (UNEXPECTED((pzval = zend_hash_str_find(conf, ZEND_STRL(\"ext\"))) != NULL &&\n\t\tZ_TYPE_P(pzval) == IS_STRING)) {\n\t\tapp->ext = zend_string_copy(Z_STR_P(pzval));\n\t}\n\n\tif (UNEXPECTED((pzval = zend_hash_str_find(conf, ZEND_STRL(\"library\"))) != NULL)) {\n\t\tif (EXPECTED(IS_STRING == Z_TYPE_P(pzval))) {\n\t\t\tapp->library = zend_string_copy(Z_STR_P(pzval));\n\t\t} else if (IS_ARRAY == Z_TYPE_P(pzval)) {\n\t\t\tif ((psval = zend_hash_find(Z_ARRVAL_P(pzval), YAF_KNOWN_STR(YAF_DIRECTORY))) != NULL &&\n\t\t\t\tZ_TYPE_P(psval) == IS_STRING) {\n\t\t\t\tapp->library = zend_string_copy(Z_STR_P(psval));\n\t\t\t}\n\t\t\tif ((psval = zend_hash_str_find(Z_ARRVAL_P(pzval), ZEND_STRL(\"namespace\"))) != NULL) {\n\t\t\t\tyaf_loader_object *loader = Z_YAFLOADEROBJ(YAF_G(loader));\n\t\t\t\tif (Z_TYPE_P(psval) == IS_STRING) {\n\t\t\t\t\tif (Z_STRLEN_P(psval)) {\n\t\t\t\t\t\tzend_string *prefix;\n\t\t\t\t\t\tchar *src = Z_STRVAL_P(psval), *pos;\n\t\t\t\t\t\tsize_t len = Z_STRLEN_P(psval);\n\t\t\t\t\t\twhile ((pos = memchr(src, ',', len))) {\n\t\t\t\t\t\t\tlen -= (pos - src) + 1;\n\t\t\t\t\t\t\twhile (*src == ' ') src++;\n\t\t\t\t\t\t\tprefix = zend_string_init(src, pos - src, 0);\n\t\t\t\t\t\t\tyaf_loader_register_namespace(loader, prefix, NULL);\n\t\t\t\t\t\t\tzend_string_release(prefix);\n\t\t\t\t\t\t\tsrc = pos + 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (len) {\n\t\t\t\t\t\t\twhile (*src == ' ') src++, len--;\n\t\t\t\t\t\t\tprefix = zend_string_init(src, len, 0);\n\t\t\t\t\t\t\tyaf_loader_register_namespace(loader, prefix, NULL);\n\t\t\t\t\t\t\tzend_string_release(prefix);\n\t\t\t\t\t\t}\n\t\t\t\t\t} \n\t\t\t\t} else if (Z_TYPE_P(psval) == IS_ARRAY) {\n\t\t\t\t\tzend_string *name;\n\t\t\t\t\tzval *path;\n\t\t\t\t\tZEND_HASH_FOREACH_STR_KEY_VAL(Z_ARRVAL_P(psval), name, path) {\n\t\t\t\t\t\tif (name == NULL) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (Z_TYPE_P(path) == IS_STRING) {\n\t\t\t\t\t\t\tyaf_loader_register_namespace(Z_YAFLOADEROBJ(YAF_G(loader)), name, Z_STR_P(path));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tyaf_loader_register_namespace(Z_YAFLOADEROBJ(YAF_G(loader)), name, NULL);\n\t\t\t\t\t\t}\n\t\t\t\t\t} ZEND_HASH_FOREACH_END();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (UNEXPECTED((pzval = zend_hash_str_find(conf, ZEND_STRL(\"view\"))) != NULL &&\n\t\tZ_TYPE_P(pzval) == IS_ARRAY &&\n\t\t((psval = zend_hash_str_find(Z_ARRVAL_P(pzval), ZEND_STRL(\"ext\"))) != NULL &&\n\t\t Z_TYPE_P(psval) == IS_STRING))) {\n\t\tapp->view_ext = zend_string_copy(Z_STR_P(psval));\n\t}\n\n\tif (UNEXPECTED((pzval = zend_hash_str_find(conf, ZEND_STRL(\"baseUri\"))) != NULL &&\n\t\tZ_TYPE_P(pzval) == IS_STRING)) {\n\t\tapp->base_uri = zend_string_copy(Z_STR_P(pzval));\n\t}\n\n\tdo {\n\t\tzval rv;\n\t\tif (UNEXPECTED((pzval = zend_hash_str_find(conf, ZEND_STRL(\"modules\"))) != NULL &&\n\t\t\tZ_TYPE_P(pzval) == IS_STRING && Z_STRLEN_P(pzval))) {\n\t\t\tchar *ptrptr = NULL;\n\t\t\tchar *seg, *modules;\n\n\t\t\tALLOC_HASHTABLE(app->modules);\n\t\t\tzend_hash_init(app->modules, 8, NULL, ZVAL_PTR_DTOR, 0);\n\t\t\tYAF_ALLOW_VIOLATION(app->modules);\n\n\t\t\tmodules = estrndup(Z_STRVAL_P(pzval), Z_STRLEN_P(pzval));\n\t\t\tseg = php_strtok_r(modules, \",\", &ptrptr);\n\t\t\twhile (seg) {\n\t\t\t\tif (seg && strlen(seg)) {\n\t\t\t\t\tZVAL_STR(&rv, yaf_build_camel_name(seg, strlen(seg)));\n\t\t\t\t\tzend_hash_next_index_insert(app->modules, &rv);\n\t\t\t\t}\n\t\t\t\tseg = php_strtok_r(NULL, \",\", &ptrptr);\n\t\t\t}\n\t\t\tefree(modules);\n\t\t}\n\t} while (0);\n\n\tif (UNEXPECTED((pzval = zend_hash_str_find(conf, ZEND_STRL(\"system\"))) != NULL &&\n\t\tZ_TYPE_P(pzval) == IS_ARRAY)) {\n\t\tzval *value;\n\t\tchar name[128];\n\t\tzend_string *key;\n\t\tsize_t len;\n\n\t\tZEND_HASH_FOREACH_STR_KEY_VAL(Z_ARRVAL_P(pzval), key, value) {\n\t\t\tzend_string *str, *val;\n\t\t\tlen = snprintf(name, sizeof(name), \"%s.%s\", \"yaf\", ZSTR_VAL(key));\n\t\t\tif (len > sizeof(name) -1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tstr = zend_string_init(name, len, 0);\n\t\t\tval = zval_get_string(value);\n\t\t\tzend_alter_ini_entry(str, val, PHP_INI_USER, PHP_INI_STAGE_RUNTIME);\n\t\t\tzend_string_release(str);\n\t\t\tzend_string_release(val);\n\t\t} ZEND_HASH_FOREACH_END();\n\n\t\t/* We have to reset the loader as the yaf.* inis has beend changed */\n\t\tyaf_loader_reset(Z_YAFLOADEROBJ(YAF_G(loader)));\n\t\tif (*YAF_G(global_library)) {\n\t\t\tzend_string *library = zend_string_init(YAF_G(global_library), strlen(YAF_G(global_library)), 0);\n\t\t\tyaf_loader_set_global_library_path(Z_YAFLOADEROBJ(YAF_G(loader)), library);\n\t\t\tzend_string_release(library);\n\t\t}\n\t}\n}\n/* }}} */\n\nint yaf_application_parse_option(yaf_application_object *app) /* {{{ */ {\n\tzval *pzval;\n\tHashTable *conf;\n\tuint32_t items;\n\n\tconf = Z_YAFCONFIGOBJ(app->config)->config;\n\tif (UNEXPECTED((pzval = zend_hash_find(conf, YAF_KNOWN_STR(YAF_APPLICATION))) == NULL) || Z_TYPE_P(pzval) != IS_ARRAY) {\n\t\t/* For back compatibilty */\n\t\tif (((pzval = zend_hash_find(conf, YAF_KNOWN_STR(YAF))) == NULL) || Z_TYPE_P(pzval) != IS_ARRAY) {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tconf = Z_ARRVAL_P(pzval);\n\tif (UNEXPECTED((pzval = zend_hash_find(conf, YAF_KNOWN_STR(YAF_DIRECTORY))) == NULL ||\n\t\tZ_TYPE_P(pzval) != IS_STRING || Z_STRLEN_P(pzval) == 0)) {\n\t\treturn 0;\n\t}\n\n\tif (UNEXPECTED(*(Z_STRVAL_P(pzval) + Z_STRLEN_P(pzval) - 1) == DEFAULT_SLASH)) {\n\t\tapp->directory = zend_string_init(Z_STRVAL_P(pzval), Z_STRLEN_P(pzval) - 1, 0);\n\t} else {\n\t\tapp->directory = zend_string_copy(Z_STR_P(pzval));\n\t}\n\n\titems = zend_hash_num_elements(conf) - 1;\n\tif (UNEXPECTED((pzval = zend_hash_find(conf, YAF_KNOWN_STR(YAF_DISPATCHER))) != NULL &&\n\t\tZ_TYPE_P(pzval) == IS_ARRAY)) {\n\t\tzval *psval;\n\n\t\titems--;\n\t\tif ((psval = zend_hash_str_find(Z_ARRVAL_P(pzval), ZEND_STRL(\"defaultModule\"))) != NULL &&\n\t\t\tZ_TYPE_P(psval) == IS_STRING) {\n\t\t\tapp->default_module = yaf_canonical_name(1, Z_STR_P(psval));\n\t\t} else {\n\t\t\tapp->default_module = YAF_KNOWN_STR(YAF_DEFAULT_MODULE);\n\t\t}\n\n\t\tif ((psval = zend_hash_str_find(Z_ARRVAL_P(pzval), ZEND_STRL(\"defaultController\"))) != NULL &&\n\t\t\tZ_TYPE_P(psval) == IS_STRING) {\n\t\t\tapp->default_controller = yaf_canonical_name(1, Z_STR_P(psval));\n\t\t} else {\n\t\t\tapp->default_controller = YAF_KNOWN_STR(YAF_DEFAULT_CONTROLLER);\n\t\t}\n\n\t\tif ((psval = zend_hash_str_find(Z_ARRVAL_P(pzval), ZEND_STRL(\"defaultAction\"))) != NULL &&\n\t\t\tZ_TYPE_P(psval) == IS_STRING) {\n\t\t\tapp->default_action = yaf_canonical_name(0, Z_STR_P(psval));\n\t\t} else {\n\t\t\tapp->default_action = YAF_KNOWN_STR(YAF_DEFAULT_ACTION);\n\t\t}\n\n\t\tif ((psval = zend_hash_str_find(Z_ARRVAL_P(pzval), ZEND_STRL(\"throwException\"))) != NULL) {\n\t\t\tyaf_set_throw_exception(zend_is_true(psval));\n\t\t}\n\n\t\tif ((psval = zend_hash_str_find(Z_ARRVAL_P(pzval), ZEND_STRL(\"catchException\"))) != NULL) {\n\t\t\tyaf_set_catch_exception(zend_is_true(psval));\n\t\t}\n\n\t\tif ((psval = zend_hash_str_find(Z_ARRVAL_P(pzval), ZEND_STRL(\"defaultRoute\"))) != NULL &&\n\t\t\tZ_TYPE_P(psval) == IS_ARRAY) {\n\t\t\t/* leave it to configs destructor */\n\t\t\tapp->default_route = Z_ARRVAL_P(psval);\n\t\t}\n\t} else {\n\t\tapp->default_module = YAF_KNOWN_STR(YAF_DEFAULT_MODULE);\n\t\tapp->default_controller = YAF_KNOWN_STR(YAF_DEFAULT_CONTROLLER);\n\t\tapp->default_action = YAF_KNOWN_STR(YAF_DEFAULT_ACTION);\n\t}\n\n\t/* prasing optional configs */\n\tif (items) {\n\t\tyaf_application_parse_optional(app, conf);\n\t}\n\n\treturn 1;\n}\n/* }}} */\n\n/** {{{ proto Yaf_Application::__construct(mixed $config, string $environ = YAF_G(environ_name))\n*/\nPHP_METHOD(yaf_application, __construct) {\n\tzval *config;\n\tzend_string *section = NULL;\n\tyaf_loader_t *loader;\n\tyaf_application_object *app = Z_YAFAPPOBJ_P(getThis());\n\n\tif (zend_parse_parameters_throw(ZEND_NUM_ARGS(), \"z|S\", &config, &section) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (EXPECTED(Z_TYPE(YAF_G(app)) != IS_OBJECT)) {\n\t\tif (!section || !ZSTR_LEN(section)) {\n\t\t\tsection = zend_string_init(YAF_G(environ_name), strlen(YAF_G(environ_name)), 0);\n\t\t} else {\n\t\t\tzend_string_copy(section);\n\t\t}\n\t\tyaf_config_instance(&app->config, config, section);\n\t\tif (EXPECTED(Z_TYPE(app->config) == IS_OBJECT)) {\n\t\t\tloader = yaf_loader_instance(NULL);\n\t\t\tif (EXPECTED(yaf_application_parse_option(app))) {\n\t\t\t\tapp->env = section /* initialized flag */;\n\t\t\t\tif (app->library == NULL) {\n\t\t\t\t\tzend_string *local_library = zend_string_alloc(ZSTR_LEN(app->directory) + sizeof(YAF_LIBRARY_DIRECTORY_NAME), 0);\n\t\t\t\t\tyaf_compose_2_pathes(ZSTR_VAL(local_library), app->directory, ZEND_STRS(YAF_LIBRARY_DIRECTORY_NAME));\n\t\t\t\t\tyaf_loader_set_library_path_ex(Z_YAFLOADEROBJ_P(loader), local_library);\n\t\t\t\t} else {\n\t\t\t\t\tyaf_loader_set_library_path(Z_YAFLOADEROBJ_P(loader), app->library);\n\t\t\t\t}\n\n\t\t\t\tGC_ADDREF(&app->std);\n\t\t\t\tZVAL_OBJ(&YAF_G(app), &app->std);\n\t\t\t\tyaf_dispatcher_instance(&app->dispatcher);\n\t\t\t\tyaf_request_instance(&Z_YAFDISPATCHEROBJ(app->dispatcher)->request, app->base_uri);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tzend_string_release(section);\n\t}\n\n\tyaf_application_errors_hub(0, app);\n\treturn;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Application::run(void)\n*/\nPHP_METHOD(yaf_application, run) {\n\tyaf_application_object *app = Z_YAFAPPOBJ_P(getThis());\n\tyaf_response_t *response;\n\n\tif (UNEXPECTED(YAF_APP_FLAGS(app) & YAF_APP_RUNNING)) {\n\t\tyaf_trigger_error(YAF_ERR_STARTUP_FAILED, \"Application is already started\");\n\t\tRETURN_FALSE;\n\t}\n\n\tYAF_APP_FLAGS(app) |= YAF_APP_RUNNING;\n\tif ((response = yaf_dispatcher_dispatch(Z_YAFDISPATCHEROBJ(app->dispatcher)))) {\n\t\tYAF_APP_FLAGS(app) &= ~YAF_APP_RUNNING;\n\t\tRETURN_ZVAL(response, 1, 0);\n\t}\n\n\tYAF_APP_FLAGS(app) &= ~YAF_APP_RUNNING;\n\tRETURN_FALSE;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Application::bootstrap(void)\n*/\nPHP_METHOD(yaf_application, bootstrap) {\n\tzval bootstrap;\n\tzend_string *func;\n\tchar buf[MAXPATHLEN];\n\tzend_function *fptr;\n\tzend_class_entry  *ce;\n\tconst char *bootstrap_path;\n\tuint32_t bootstrap_path_len;\n\tyaf_application_object *app = Z_YAFAPPOBJ_P(getThis());\n\tyaf_dispatcher_t *dispatcher = &app->dispatcher;\n\n\tif (!(ce = zend_hash_find_ptr(EG(class_table), YAF_KNOWN_STR(YAF_BOOTSTRAP)))) {\n\t\tif (UNEXPECTED(app->bootstrap)) {\n\t\t\tbootstrap_path = ZSTR_VAL(app->bootstrap);\n\t\t\tbootstrap_path_len = ZSTR_LEN(app->bootstrap);\n\t\t} else {\n\t\t\tbootstrap_path_len = yaf_compose_2_pathes(buf, app->directory, ZEND_STRL(YAF_DEFAULT_BOOTSTRAP));\n\t\t\tbuf[bootstrap_path_len++] = '.';\n\t\t\tif (UNEXPECTED(app->ext)) {\n\t\t\t\tmemcpy(buf + bootstrap_path_len, ZSTR_VAL(app->ext), ZSTR_LEN(app->ext));\n\t\t\t\tbootstrap_path_len += ZSTR_LEN(app->ext);\n\t\t\t} else {\n\t\t\t\tmemcpy(buf + bootstrap_path_len, YAF_DEFAULT_EXT, sizeof(YAF_DEFAULT_EXT) - 1);\n\t\t\t\tbootstrap_path_len += sizeof(YAF_DEFAULT_EXT) - 1;\n\t\t\t}\n\t\t\tbuf[bootstrap_path_len] = '\\0';\n\t\t\tbootstrap_path = buf;\n\t\t}\n\t\tif (UNEXPECTED((!yaf_loader_import(bootstrap_path, bootstrap_path_len)) ||\n\t\t\t(!(ce = zend_hash_find_ptr(EG(class_table), YAF_KNOWN_STR(YAF_BOOTSTRAP)))))) {\n\t\t\tgoto error;\n\t\t}\n\t}\n\n\tif (EXPECTED(instanceof_function(ce, yaf_bootstrap_ce))) {\n\t\tzend_object *obj;\n\n\t\tobject_init_ex(&bootstrap, ce);\n\t\tobj = Z_OBJ(bootstrap);\n\t\tZEND_HASH_FOREACH_STR_KEY_PTR(&(ce->function_table), func, fptr) {\n\t\t\tzval ret;\n\t\t\tif (UNEXPECTED(ZSTR_LEN(func) < (sizeof(\"_init\")) - 1) ||\n\t\t\t\t!yaf_slip_equal(ZSTR_VAL(func), ZEND_STRL(YAF_BOOTSTRAP_INITFUNC_PREFIX))) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (UNEXPECTED(!yaf_call_user_method_with_1_arguments(obj, fptr, dispatcher, &ret))) {\n\t\t\t\t/** an uncaught exception threw in function call */\n\t\t\t\tif (UNEXPECTED(EG(exception))) {\n\t\t\t\t\tOBJ_RELEASE(Z_OBJ(bootstrap));\n\t\t\t\t\tRETURN_FALSE;\n\t\t\t\t}\n\t\t\t}\n\t\t\t/* Must always return bool? */\n\t\t\t/* zval_ptr_dtor(&ret); */\n\t\t} ZEND_HASH_FOREACH_END();\n\t\tOBJ_RELEASE(Z_OBJ(bootstrap));\n\n\t\tRETURN_ZVAL(getThis(), 1, 0);\n\t}\n\nerror:\n\tyaf_application_errors_hub(1, ce, bootstrap_path);\n\tRETURN_FALSE;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Application::getDispatcher(void)\n*/\nPHP_METHOD(yaf_application, getDispatcher) {\n\tyaf_application_object *app = Z_YAFAPPOBJ_P(getThis());\n\tzend_object *dispatcher = yaf_application_get_dispatcher(app);\n\n\tif (dispatcher) {\n\t\tRETURN_OBJ(dispatcher);\n\t}\n\n\tRETURN_NULL();\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Application::getConfig(void)\n*/\nPHP_METHOD(yaf_application, getConfig) {\n\tyaf_application_object *app = Z_YAFAPPOBJ_P(getThis());\n\tzend_object *config = yaf_application_get_config(app);\n\n\tif (config) {\n\t\tRETURN_OBJ(config);\n\t}\n\n\tRETURN_NULL();\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Application::app(void)\n*/\nPHP_METHOD(yaf_application, app) {\n\tRETURN_ZVAL(&YAF_G(app), 1, 0);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Application::getModules(void)\n*/\nPHP_METHOD(yaf_application, getModules) {\n\tyaf_application_object *app = Z_YAFAPPOBJ_P(getThis());\n\n\tif (app->modules) {\n\t\tGC_ADDREF(app->modules);\n\t\tRETURN_ARR(app->modules);\n\t} else {\n\t\tRETURN_NULL();\n\t}\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Application::environ(void)\n*/\nPHP_METHOD(yaf_application, environ) {\n\tyaf_application_object *app = Z_YAFAPPOBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\tif (app->env) {\n\t\tRETURN_STR(zend_string_copy(app->env));\n\t}\n\tRETURN_EMPTY_STRING();\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Application::execute(callback $func)\n * We can not call to zif_call_user_func on windows, since it was not declared with dllexport\n */\nPHP_METHOD(yaf_application, execute) {\n\tzval retval;\n\tzend_fcall_info fci;\n\tzend_fcall_info_cache fci_cache;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"f*\", &fci, &fci_cache, &fci.params, &fci.param_count) == FAILURE) {\n\t\treturn;\n\t}\n\n\tfci.retval = &retval;\n\n\tif (zend_call_function(&fci, &fci_cache) == SUCCESS && Z_TYPE(retval) != IS_UNDEF) {\n\t\tZVAL_COPY_VALUE(return_value, &retval);\n\t} else {\n\t\tRETURN_FALSE;\n\t}\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Application::getLastErrorNo(void)\n*/\nPHP_METHOD(yaf_application, getLastErrorNo) {\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\tRETURN_LONG(Z_YAFAPPOBJ_P(getThis())->err_no);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Application::getLastErrorMsg(void)\n*/\nPHP_METHOD(yaf_application, getLastErrorMsg) {\n\tyaf_application_object *app = Z_YAFAPPOBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\tif (app->err_msg) {\n\t\tRETURN_STR_COPY(app->err_msg);\n\t} else {\n\t\tRETURN_EMPTY_STRING();\n\t}\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Application::clearLastError(void)\n*/\nPHP_METHOD(yaf_application, clearLastError) {\n\tyaf_application_object *app = Z_YAFAPPOBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\tif (app->err_msg) {\n\t\tzend_string_release(app->err_msg);\n\t\tapp->err_msg = NULL;\n\t}\n\tapp->err_no = 0;\n\tRETURN_ZVAL(getThis(), 1, 0);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Application::setAppDirectory(string $directory)\n*/\nPHP_METHOD(yaf_application, setAppDirectory) {\n\tzend_string *directory;\n\tyaf_application_object *app = Z_YAFAPPOBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S\", &directory) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (ZSTR_LEN(directory) == 0 || !IS_ABSOLUTE_PATH(ZSTR_VAL(directory), ZSTR_LEN(directory))) {\n\t\tRETURN_FALSE;\n\t}\n\n\tzend_string_release(app->directory);\n\tapp->directory = zend_string_copy(directory);\n\n\tRETURN_ZVAL(getThis(), 1, 0);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Application::getAppDirectory(void)\n*/\nPHP_METHOD(yaf_application, getAppDirectory) {\n\tyaf_application_object *app = Z_YAFAPPOBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (app->directory) {\n\t\tRETURN_STR(zend_string_copy(app->directory));\n\t} else {\n\t\tRETURN_NULL();\n\t}\n}\n/* }}} */\n\n/** {{{ yaf_application_methods\n*/\nzend_function_entry yaf_application_methods[] = {\n\tPHP_ME(yaf_application, __construct, arginfo_class_Yaf_Application___construct, ZEND_ACC_PUBLIC | ZEND_ACC_CTOR)\n\tPHP_ME(yaf_application, run, arginfo_class_Yaf_Application_run, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_application, execute, arginfo_class_Yaf_Application_execute, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_application, app, arginfo_class_Yaf_Application_app, ZEND_ACC_PUBLIC | ZEND_ACC_STATIC)\n\tYAF_ME(yaf_application_environ, \"environ\", arginfo_class_Yaf_Application_environ, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_application, bootstrap, arginfo_class_Yaf_Application_bootstrap, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_application, getConfig, arginfo_class_Yaf_Application_getConfig, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_application, getModules, arginfo_class_Yaf_Application_getModules, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_application, getDispatcher, arginfo_class_Yaf_Application_getDispatcher, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_application, setAppDirectory, arginfo_class_Yaf_Application_setAppDirectory, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_application, getAppDirectory, arginfo_class_Yaf_Application_getAppDirectory, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_application, getLastErrorNo, arginfo_class_Yaf_Application_getLastErrorNo, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_application, getLastErrorMsg, arginfo_class_Yaf_Application_getLastErrorMsg, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_application, clearLastError, arginfo_class_Yaf_Application_clearLastError, ZEND_ACC_PUBLIC)\n\tPHP_MALIAS(yaf_application, getInstance, app, arginfo_class_Yaf_Application_app, ZEND_ACC_PUBLIC|ZEND_ACC_STATIC)\n\t{NULL, NULL, NULL}\n};\n/* }}} */\n\n/** {{{ YAF_STARTUP_FUNCTION\n*/\nYAF_STARTUP_FUNCTION(application) {\n\tzend_class_entry ce;\n\tYAF_INIT_CLASS_ENTRY(ce, \"Yaf_Application\", \"Yaf\\\\Application\", yaf_application_methods);\n\n\tyaf_application_ce = zend_register_internal_class_ex(&ce, NULL);\n\tyaf_application_ce->create_object = yaf_application_new;\n#if PHP_VERSION_ID < 80100\n\tyaf_application_ce->ce_flags |= ZEND_ACC_FINAL;\n\tyaf_application_ce->serialize = zend_class_serialize_deny;\n\tyaf_application_ce->unserialize = zend_class_unserialize_deny;\n#elif PHP_VERSION_ID < 80200\n\tyaf_application_ce->ce_flags |= ZEND_ACC_FINAL | ZEND_ACC_NOT_SERIALIZABLE;\n#else\n\tyaf_application_ce->ce_flags |= ZEND_ACC_FINAL | ZEND_ACC_NOT_SERIALIZABLE | ZEND_ACC_ALLOW_DYNAMIC_PROPERTIES;\n#endif\n\n\tmemcpy(&yaf_application_obj_handlers, zend_get_std_object_handlers(), sizeof(zend_object_handlers));\n\tyaf_application_obj_handlers.offset = XtOffsetOf(yaf_application_object, std);\n\tyaf_application_obj_handlers.clone_obj = NULL;\n\tyaf_application_obj_handlers.get_gc = yaf_application_get_gc;\n\tyaf_application_obj_handlers.free_obj = yaf_application_free;\n\tyaf_application_obj_handlers.get_properties = yaf_application_get_properties;\n\tyaf_application_obj_handlers.read_property = (zend_object_read_property_t)yaf_application_read_property;\n\tyaf_application_obj_handlers.write_property = (zend_object_write_property_t)yaf_application_write_property;\n\n\treturn SUCCESS;\n}\n/* }}} */\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_application.h",
          "type": "blob",
          "size": 2.490234375,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifndef PHP_YAF_APPLICATION_H\n#define PHP_YAF_APPLICATION_H\n\n#define YAF_APP_RUNNING     (1<<0)\n#define YAF_APP_FLAGS(a)    YAF_VAR_FLAGS(a->dispatcher)\n\ntypedef struct {\n\tzend_string     *library;\n\tzend_string     *directory;\n\tzend_string     *bootstrap;\n\tzend_string     *base_uri;\n\tzend_array      *default_route;\n\tzend_string     *default_module;\n\tzend_string     *default_controller;\n\tzend_string     *default_action;\n    yaf_dispatcher_t dispatcher;\n    yaf_config_t     config;\n\tzend_string     *ext;\n\tzend_string     *view_ext;\n\tzend_string     *env;\n\tzend_array      *modules;\n\tunsigned int     err_no;\n\tzend_string     *err_msg;\n\tzend_array      *properties;\n    zend_object      std;\n} yaf_application_object;\n\n#define Z_YAFAPPOBJ(zv)     ((php_yaf_application_fetch_object)(Z_OBJ(zv)))\n#define Z_YAFAPPOBJ_P(zv)   Z_YAFAPPOBJ(*(zv))\n\nstatic zend_always_inline yaf_application_object *php_yaf_application_fetch_object(zend_object *obj) {\n\treturn (yaf_application_object *)((char*)(obj) - XtOffsetOf(yaf_application_object, std));\n}\n\nextern zend_class_entry *yaf_application_ce;\n\nint yaf_application_is_module_name(zend_string *name);\nint yaf_application_is_module_name_str(const char *name, size_t len);\n\nstatic zend_always_inline yaf_application_object *yaf_application_instance() {\n\tif (Z_TYPE(YAF_G(app)) == IS_OBJECT) {\n\t\treturn Z_YAFAPPOBJ(YAF_G(app));\n\t}\n\treturn NULL;\n}\n\nYAF_STARTUP_FUNCTION(application);\n#endif\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_application.stub.php",
          "type": "blob",
          "size": 1.3125,
          "content": "<?php\n\n/** @generate-legacy-arginfo */\n\nfinal class Yaf_Application { \n\t/* constants */\n\n\t/* properties */\n\tstatic protected object $_app = NULL;\n\n\tprotected array $config = NULL;\n\tprotected object $dispatcher = NULL;\n\tprotected array $_modules = NULL;\n\tprotected bool $_running = false;\n\tprotected string $_environ = \"product\";\n\tprotected int $_err_no = 0;\n\tprotected string $_err_msg = \"\";\n\n\t/* methods */\n\tpublic function __construct(string|array $config, string $environ = NULL);\n\n\t/**\n\t * @return Yaf_Response_Abstract|FALSE\n\t */\n\tpublic function run():object|false;\n\n\tpublic function execute(mixed $callback):mixed;\n\n\tpublic function environ():?string;\n\n\t/**\n\t * @return Yaf_Application|false|null\n\t */\n\tpublic function bootstrap():object|false|null;\n\n\tpublic function getConfig():?object;\n\n\tpublic function getModules():?array;\n\n\t/**\n\t * @return Yaf_Dispatcher|NULL\n\t */\n\tpublic function getDispatcher():?object;\n\n\t/**\n\t * @return Yaf_Application|NULL|FALSE\n\t */\n\tpublic function setAppDirectory(string $directory):object|null|false;\n\n\tpublic function getAppDirectory():?string;\n\n\tpublic function getLastErrorNo():?int;\n\n\tpublic function getLastErrorMsg():?string;\n\n\t/**\n\t * @return Yaf_Application|NULL\n\t */\n\tpublic function clearLastError():?object;\n\n\t/**\n\t * @return Yaf_Application|NULL\n\t */\n\tpublic static function app():?object;\n}\n"
        },
        {
          "name": "yaf_application_arginfo.h",
          "type": "blob",
          "size": 1.8984375,
          "content": "/* This is a generated file, edit the .stub.php file instead.\n * Stub hash: c1419f58751475cec2cf84b0bab3d759846eea79 */\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Application___construct, 0, 0, 1)\n\tZEND_ARG_TYPE_MASK(0, config, MAY_BE_STRING|MAY_BE_ARRAY, NULL)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, environ, IS_STRING, 0, \"NULL\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX(arginfo_class_Yaf_Application_run, 0, 0, MAY_BE_OBJECT|MAY_BE_FALSE)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Application_execute, 0, 1, IS_MIXED, 0)\n\tZEND_ARG_TYPE_INFO(0, callback, IS_MIXED, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Application_environ, 0, 0, IS_STRING, 1)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX(arginfo_class_Yaf_Application_bootstrap, 0, 0, MAY_BE_OBJECT|MAY_BE_FALSE|MAY_BE_NULL)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Application_getConfig, 0, 0, IS_OBJECT, 1)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Application_getModules, 0, 0, IS_ARRAY, 1)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Application_getDispatcher arginfo_class_Yaf_Application_getConfig\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX(arginfo_class_Yaf_Application_setAppDirectory, 0, 1, MAY_BE_OBJECT|MAY_BE_NULL|MAY_BE_FALSE)\n\tZEND_ARG_TYPE_INFO(0, directory, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Application_getAppDirectory arginfo_class_Yaf_Application_environ\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Application_getLastErrorNo, 0, 0, IS_LONG, 1)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Application_getLastErrorMsg arginfo_class_Yaf_Application_environ\n\n#define arginfo_class_Yaf_Application_clearLastError arginfo_class_Yaf_Application_getConfig\n\n#define arginfo_class_Yaf_Application_app arginfo_class_Yaf_Application_getConfig\n"
        },
        {
          "name": "yaf_application_legacy_arginfo.h",
          "type": "blob",
          "size": 1.4208984375,
          "content": "/* This is a generated file, edit the .stub.php file instead.\n * Stub hash: c1419f58751475cec2cf84b0bab3d759846eea79 */\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Application___construct, 0, 0, 1)\n\tZEND_ARG_INFO(0, config)\n\tZEND_ARG_INFO(0, environ)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Application_run, 0, 0, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Application_execute, 0, 0, 1)\n\tZEND_ARG_INFO(0, callback)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Application_environ arginfo_class_Yaf_Application_run\n\n#define arginfo_class_Yaf_Application_bootstrap arginfo_class_Yaf_Application_run\n\n#define arginfo_class_Yaf_Application_getConfig arginfo_class_Yaf_Application_run\n\n#define arginfo_class_Yaf_Application_getModules arginfo_class_Yaf_Application_run\n\n#define arginfo_class_Yaf_Application_getDispatcher arginfo_class_Yaf_Application_run\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Application_setAppDirectory, 0, 0, 1)\n\tZEND_ARG_INFO(0, directory)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Application_getAppDirectory arginfo_class_Yaf_Application_run\n\n#define arginfo_class_Yaf_Application_getLastErrorNo arginfo_class_Yaf_Application_run\n\n#define arginfo_class_Yaf_Application_getLastErrorMsg arginfo_class_Yaf_Application_run\n\n#define arginfo_class_Yaf_Application_clearLastError arginfo_class_Yaf_Application_run\n\n#define arginfo_class_Yaf_Application_app arginfo_class_Yaf_Application_run\n"
        },
        {
          "name": "yaf_bootstrap.c",
          "type": "blob",
          "size": 1.724609375,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include \"php.h\"\n\n#include \"php_yaf.h\"\n#include \"yaf_namespace.h\"\n#include \"yaf_bootstrap.h\"\n\nzend_class_entry *yaf_bootstrap_ce;\n\n/** {{{ yaf_bootstrap_methods\n*/\nzend_function_entry yaf_bootstrap_methods[] = {\n\t{NULL, NULL, NULL}\n};\n/* }}} */\n\n/** {{{ YAF_STARTUP_FUNCTION\n*/\nYAF_STARTUP_FUNCTION(bootstrap) {\n\tzend_class_entry ce;\n\n\tYAF_INIT_CLASS_ENTRY(ce, \"Yaf_Bootstrap_Abstract\",  \"Yaf\\\\Bootstrap_Abstract\", yaf_bootstrap_methods);\n\tyaf_bootstrap_ce = zend_register_internal_class_ex(&ce, NULL);\n\tyaf_bootstrap_ce->ce_flags |= ZEND_ACC_EXPLICIT_ABSTRACT_CLASS;\n\n\treturn SUCCESS;\n}\n/* }}} */\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_bootstrap.h",
          "type": "blob",
          "size": 1.314453125,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifndef YAF_BOOTSTRAP_H\n#define YAF_BOOTSTRAP_H\n\n#define YAF_DEFAULT_BOOTSTRAP\t\t  \t\"Bootstrap\"\n#define YAF_BOOTSTRAP_INITFUNC_PREFIX  \t\"_init\"\n\nextern zend_class_entry *yaf_bootstrap_ce;\n\nYAF_STARTUP_FUNCTION(bootstrap);\n#endif\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_config.c",
          "type": "blob",
          "size": 12.0126953125,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include \"php.h\"\n#include \"php_ini.h\"\n#include \"standard/php_filestat.h\" /* for php_stat */\n#include \"Zend/zend_interfaces.h\" /* for zend_class_serialize_deny */\n\n#include \"php_yaf.h\"\n#include \"yaf_namespace.h\"\n#include \"yaf_exception.h\"\n#include \"yaf_config.h\"\n\n#if defined(HAVE_SPL) && PHP_VERSION_ID < 70200\nextern PHPAPI zend_class_entry *spl_ce_Countable;\n#endif\n\n#if PHP_MAJOR_VERSION > 7\n#include \"yaf_config_arginfo.h\"\n#else\n#include \"yaf_config_legacy_arginfo.h\"\n#endif\n\n#include \"configs/yaf_config_ini.h\"\n#include \"configs/yaf_config_simple.h\"\n\nzend_class_entry *yaf_config_ce;\nstatic zend_object_handlers yaf_config_obj_handlers;\n\nstatic HashTable *yaf_config_get_gc(yaf_object *obj, zval **table, int *n) /* {{{ */ {\n\tyaf_config_object *conf = php_yaf_config_fetch_object(yaf_strip_obj(obj));\n\n\t*table = NULL;\n\t*n = 0;\n\n\treturn conf->config;\n}\n/* }}} */\n\nstatic HashTable *yaf_config_get_properties(yaf_object *obj) /* {{{ */ {\n\tzval rv;\n\tHashTable *ht;\n\tyaf_config_object *conf = php_yaf_config_fetch_object(yaf_strip_obj(obj));\n\n\tif (!conf->properties) {\n\t\tALLOC_HASHTABLE(conf->properties);\n\t\tzend_hash_init(conf->properties, 4, NULL, ZVAL_PTR_DTOR, 0);\n\t\tYAF_ALLOW_VIOLATION(conf->properties);\n\t}\n\n\tht = conf->properties;\n\tZVAL_BOOL(&rv, conf->flags & YAF_CONFIG_READONLY);\n\tzend_hash_str_update(ht, \"readonly:protected\", sizeof(\"readonly:protected\") - 1, &rv);\n\n\tif (conf->config) {\n\t\tZVAL_ARR(&rv, zend_array_dup(conf->config));\n\t}\n\tzend_hash_str_update(ht, \"config:protected\", sizeof(\"config:protected\") - 1, &rv);\n\n\tif (conf->filename) {\n\t\tZVAL_STR_COPY(&rv, conf->filename);\n\t\tzend_hash_str_update(ht, \"filename:protected\", sizeof(\"filename:protected\") - 1, &rv);\n\t}\n\n\treturn ht;\n}\n/* }}} */\n\nstatic zend_object *yaf_config_new(zend_class_entry *ce) /* {{{ */ {\n\tyaf_config_object *conf = emalloc(sizeof(yaf_config_object) + zend_object_properties_size(ce));\n\n\tmemset(conf, 0, XtOffsetOf(yaf_config_object, std));\n\tzend_object_std_init(&conf->std, ce);\n\tconf->std.handlers = &yaf_config_obj_handlers;\n\t\n\treturn &conf->std;\n}\n/* }}} */\n\nstatic void yaf_config_object_free(zend_object *object) /* {{{ */ {\n\tyaf_config_object *conf = php_yaf_config_fetch_object(object);\n\tif (conf->config) {\n\t\tif (!(GC_FLAGS(conf->config) & IS_ARRAY_IMMUTABLE) && (GC_DELREF(conf->config) == 0)) {\n\t\t\tGC_REMOVE_FROM_BUFFER(conf->config);\n\t\t\tzend_array_destroy(conf->config);\n\t\t}\n\t}\n\tif (conf->filename) {\n\t\tzend_string_release(conf->filename);\n\t}\n\tif (conf->properties) {\n\t\tif (GC_DELREF(conf->properties) == 0) {\n\t\t\tGC_REMOVE_FROM_BUFFER(conf->properties);\n\t\t\tzend_array_destroy(conf->properties);\n\t\t}\n\t}\n\tzend_object_std_dtor(object);\n}\n/* }}} */\n\nzend_object *yaf_config_format_child(zend_class_entry *ce, zval *child, int readonly) /* {{{ */ {\n\tzend_object *obj = yaf_config_new(ce);\n\tyaf_config_object *conf = php_yaf_config_fetch_object(obj);\n\n\tif (ce == yaf_config_ini_ce) {\n\t\tyaf_config_ini_init(conf, child, NULL);\n\t} else {\n\t\tyaf_config_simple_init(conf, child, readonly);\n\t}\n\n\treturn obj;\n}\n/* }}} */\n\nzval *yaf_config_get(yaf_config_object *conf, zend_string *name) /* {{{ */ {\n\tif (UNEXPECTED(conf->config == NULL)) {\n\t\treturn NULL;\n\t}\n\treturn zend_hash_find(conf->config, name);\n}\n/* }}} */\n\nstatic int yaf_config_count(yaf_config_object *conf) /* {{{ */ {\n\tif (UNEXPECTED(conf->config == NULL)) {\n\t\treturn 0;\n\t}\n\treturn zend_hash_num_elements(conf->config);\n}\n/* }}} */\n\nstatic int yaf_config_has(yaf_config_object *conf, zend_string *name) /* {{{ */ {\n\tif (UNEXPECTED(conf->config == NULL)) {\n\t\treturn 0;\n\t}\n\treturn zend_hash_exists(conf->config, name);\n}\n/* }}} */\n\nvoid yaf_config_instance(yaf_config_t *this_ptr, zval *config, zend_string *section) /* {{{ */ {\n\tzend_object *conf;\n\n\tif (Z_TYPE_P(config) == IS_STRING) {\n\t\tif (strncasecmp(Z_STRVAL_P(config) + Z_STRLEN_P(config) - 4, \".ini\", 4) == 0) {\n\t\t\tconf = yaf_config_new(yaf_config_ini_ce);\n\t\t\tZVAL_OBJ(this_ptr, conf);\n\t\t\tif (UNEXPECTED(!yaf_config_ini_init(php_yaf_config_fetch_object(conf), config, section))) {\n\t\t\t\tzval_ptr_dtor(this_ptr);\n\t\t\t\tZVAL_UNDEF(this_ptr);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tyaf_trigger_error(YAF_ERR_TYPE_ERROR, \"Expects a path to *.ini configuration file as parameter\");\n\t} else if (Z_TYPE_P(config) == IS_ARRAY) {\n\t\tconf = yaf_config_new(yaf_config_simple_ce);\n\t\tZVAL_OBJ(this_ptr, conf);\n\t\tyaf_config_simple_init(php_yaf_config_fetch_object(conf), config, 1);\n\t\treturn;\n\t} else {\n\t\tyaf_trigger_error(YAF_ERR_TYPE_ERROR, \"Expects a string or an array as parameter\");\n\t}\n\tZVAL_NULL(this_ptr);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Config::get(string $name = NULL)\n*/\nPHP_METHOD(yaf_config, get) {\n\tzend_string *name = NULL;\n\tyaf_config_object *conf = Z_YAFCONFIGOBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"|S!\", &name) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (name == NULL) {\n\t\tRETURN_ZVAL(getThis(), 1, 0);\n\t} else {\n\t\tzval *val = yaf_config_get(conf, name);\n\t\tif (val == NULL) {\n\t\t\tRETURN_NULL();\n\t\t}\n\t\tif (Z_TYPE_P(val) == IS_ARRAY) {\n\t\t\tRETURN_OBJ(yaf_config_format_child(Z_OBJCE_P(getThis()), val, conf->flags & YAF_CONFIG_READONLY));\n\t\t} else {\n\t\t\tRETURN_ZVAL(val, 1, 0);\n\t\t}\n\t}\n\n\tRETURN_FALSE;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Config::toArray(void)\n*/\nPHP_METHOD(yaf_config, toArray) {\n\tyaf_config_object *conf = Z_YAFCONFIGOBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (UNEXPECTED(conf->config == NULL)) {\n\t\tRETURN_NULL();\n\t}\n\n\tRETVAL_ARR(conf->config);\n\tZ_ADDREF_P(return_value);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Config::__isset($name)\n*/\nPHP_METHOD(yaf_config, __isset) {\n\tzend_string *name;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S\", &name) == FAILURE) {\n\t\treturn;\n\t}\n\n\tRETURN_BOOL(yaf_config_has(Z_YAFCONFIGOBJ_P(getThis()), name));\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Config::count(void)\n*/\nPHP_METHOD(yaf_config, count) {\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tRETURN_LONG(yaf_config_count(Z_YAFCONFIGOBJ_P(getThis())));\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Config::offsetUnset($offset)\n*/\nPHP_METHOD(yaf_config, offsetUnset) {\n\tzval *offset;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"z\", &offset) == FAILURE) {\n\t\treturn;\n\t}\n\tphp_error_docref(NULL, E_WARNING, \"config is readonly\");\n\n\tRETURN_FALSE;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Config::rewind(void)\n*/\nPHP_METHOD(yaf_config, rewind) {\n\tyaf_config_object *conf = Z_YAFCONFIGOBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (conf->config) {\n\t\tzend_hash_internal_pointer_reset(conf->config);\n\t}\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Config::current(void)\n*/\nPHP_METHOD(yaf_config, current) {\n\tyaf_config_object *conf = Z_YAFCONFIGOBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (conf->config) {\n\t\tzval *val = zend_hash_get_current_data(conf->config);\n\t\tif (val == NULL) {\n\t\t\tRETURN_FALSE;\n\t\t}\n\t\tif (Z_TYPE_P(val) == IS_ARRAY) {\n\t\t\tRETURN_OBJ(yaf_config_format_child(Z_OBJCE_P(getThis()), val, conf->flags & YAF_CONFIG_READONLY));\n\t\t} else {\n\t\t\tRETURN_ZVAL(val, 1, 0);\n\t\t}\n\t}\n\n\tRETURN_FALSE;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Config::key(void)\n*/\nPHP_METHOD(yaf_config, key) {\n\tzend_ulong index;\n\tzend_string *string;\n\tyaf_config_object *conf = Z_YAFCONFIGOBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (conf->config) {\n\t\tswitch (zend_hash_get_current_key(conf->config, &string, &index)) {\n\t\t\tcase HASH_KEY_IS_LONG:\n\t\t\t\tRETURN_LONG(index);\n\t\t\t\tbreak;\n\t\t\tcase HASH_KEY_IS_STRING:\n\t\t\t\tRETURN_STR_COPY(string);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tRETURN_FALSE;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Config::next(void)\n*/\nPHP_METHOD(yaf_config, next) {\n\tyaf_config_object *conf = Z_YAFCONFIGOBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (conf->config) {\n\t\tzend_hash_move_forward(conf->config);\n\t}\n\treturn;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Config::valid(void)\n*/\nPHP_METHOD(yaf_config, valid) {\n\tyaf_config_object *conf = Z_YAFCONFIGOBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (conf->config) {\n\t\tRETURN_BOOL(zend_hash_has_more_elements(conf->config) == SUCCESS);\n\t}\n\n\tRETURN_FALSE;\n}\n/* }}} */\n\n/** {{{ yaf_config_methods\n*/\nzend_function_entry yaf_config_methods[] = {\n\tPHP_ME(yaf_config, get, arginfo_class_Yaf_Config_Abstract_get, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_config, count, arginfo_class_Yaf_Config_Abstract_count, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_config, toArray, arginfo_class_Yaf_Config_Abstract_toArray, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_config, offsetUnset, arginfo_class_Yaf_Config_Abstract_offsetUnSet, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_config, rewind, arginfo_class_Yaf_Config_Abstract_rewind, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_config, current, arginfo_class_Yaf_Config_Abstract_current, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_config, key, arginfo_class_Yaf_Config_Abstract_key, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_config, next, arginfo_class_Yaf_Config_Abstract_next, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_config, valid, arginfo_class_Yaf_Config_Abstract_valid, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_config, __isset, arginfo_class_Yaf_Config_Abstract___isset, ZEND_ACC_PUBLIC)\n\tPHP_MALIAS(yaf_config, __get, get, arginfo_class_Yaf_Config_Abstract___get, ZEND_ACC_PUBLIC)\n\tPHP_MALIAS(yaf_config, offsetGet, get, arginfo_class_Yaf_Config_Abstract_offsetGet, ZEND_ACC_PUBLIC)\n\tPHP_MALIAS(yaf_config, offsetExists, __isset, arginfo_class_Yaf_Config_Abstract_offsetExists, ZEND_ACC_PUBLIC)\n\tPHP_ABSTRACT_ME(yaf_config, offsetSet, arginfo_class_Yaf_Config_Abstract_offsetSet)\n\tPHP_ABSTRACT_ME(yaf_config, set, arginfo_class_Yaf_Config_Abstract_set)\n\tPHP_ABSTRACT_ME(yaf_config, readonly, arginfo_class_Yaf_Config_Abstract_readonly)\n\t{NULL, NULL, NULL}\n};\n/* }}} */\n\n/** {{{ YAF_STARTUP_FUNCTION\n*/\nYAF_STARTUP_FUNCTION(config) {\n\tzend_class_entry ce;\n\n\tYAF_INIT_CLASS_ENTRY(ce, \"Yaf_Config_Abstract\", \"Yaf\\\\Config_Abstract\", yaf_config_methods);\n\tyaf_config_ce = zend_register_internal_class_ex(&ce, NULL);\n\tyaf_config_ce->create_object = yaf_config_new;\n#if PHP_VERSION_ID < 80100\n\tyaf_config_ce->ce_flags |= ZEND_ACC_EXPLICIT_ABSTRACT_CLASS;\n\tyaf_config_ce->serialize = zend_class_serialize_deny;\n\tyaf_config_ce->unserialize = zend_class_unserialize_deny;\n#else\n\tyaf_config_ce->ce_flags |= ZEND_ACC_EXPLICIT_ABSTRACT_CLASS | ZEND_ACC_NOT_SERIALIZABLE;\n#endif\n\t\n\tmemcpy(&yaf_config_obj_handlers, zend_get_std_object_handlers(), sizeof(zend_object_handlers));\n\tyaf_config_obj_handlers.offset = XtOffsetOf(yaf_config_object, std);\n\tyaf_config_obj_handlers.free_obj = yaf_config_object_free;\n\tyaf_config_obj_handlers.clone_obj = NULL;\n\tyaf_config_obj_handlers.get_gc = yaf_config_get_gc;\n\tyaf_config_obj_handlers.get_properties = yaf_config_get_properties;\n\n#if defined(HAVE_SPL) && PHP_VERSION_ID < 70200\n\tzend_class_implements(yaf_config_ce, 3, zend_ce_iterator, zend_ce_arrayaccess, spl_ce_Countable);\n#elif PHP_VERSION_ID >= 70200\n\tzend_class_implements(yaf_config_ce, 3, zend_ce_iterator, zend_ce_arrayaccess, zend_ce_countable);\n#else\n\tzend_class_implements(yaf_config_ce, 2, zend_ce_iterator, zend_ce_arrayaccess);\n#endif\n\n\tYAF_STARTUP(config_ini);\n\tYAF_STARTUP(config_simple);\n\n\treturn SUCCESS;\n}\n/* }}} */\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_config.h",
          "type": "blob",
          "size": 1.9931640625,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifndef YAF_CONFIG_H\n#define YAF_CONFIG_H\n\n#define YAF_EXTRACT_FUNC_NAME            \"extract\"\n#define YAF_CONFIG_PROPERT_NAME          \"_config\"\n#define YAF_CONFIG_PROPERT_NAME_READONLY \"_readonly\"\n\n#define YAF_CONFIG_READONLY  (1<<0)\n\ntypedef struct {\n\tzend_uchar   flags;\n\tzend_array  *config;\n\tzend_string *filename;\n\tzend_array  *properties;\n\tzend_object  std;\n} yaf_config_object;\n\n#define Z_YAFCONFIGOBJ(zv)    (php_yaf_config_fetch_object(Z_OBJ(zv)))\n#define Z_YAFCONFIGOBJ_P(zv)  Z_YAFCONFIGOBJ(*zv)\nstatic zend_always_inline yaf_config_object *php_yaf_config_fetch_object(zend_object *obj) {\n\treturn (yaf_config_object *)((char*)(obj) - XtOffsetOf(yaf_config_object, std));\n}\n\nextern zend_class_entry *yaf_config_ce;\nvoid yaf_config_instance(yaf_config_t *this_ptr, zval*, zend_string*);\nzend_object *yaf_config_format_child(zend_class_entry *ce, zval *child, int readonly);\n\nYAF_STARTUP_FUNCTION(config);\n#endif\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_config.stub.php",
          "type": "blob",
          "size": 2.724609375,
          "content": "<?php\n/** @generate-legacy-arginfo */\n\nabstract class Yaf_Config_Abstract implements \\Iterator, \\Traversable, \\ArrayAccess, \\Countable { \n\t/* constants */\n\n\t/* properties */\n\tprotected ?array $_config = NULL;\n\tprotected bool $_readonly = 0;\n\n\t/* methods */\n\tpublic function count():int { }\n\tpublic function rewind():void { }\n\tpublic function current():mixed { }\n\tpublic function next():void { }\n\tpublic function valid():bool { }\n\tpublic function key():int|string|null|bool { }\n\n\t/* @tentative-return-type */\n\tpublic function __isset(string $name):bool {}\n\n\tpublic function __get(string $name):mixed {}\n\n    /**\n     * @implementation-alias Yaf_Config_Abstract::get\n     */\n\tpublic function offsetGet(mixed $name):mixed {}\n\n    /**\n     * @implementation-alias Yaf_Config_Abstract::set\n     */\n\tpublic function offsetSet(mixed $name, mixed $value):void {}\n\n\tpublic function offsetUnSet(mixed $name):void {}\n\n    /**\n     * @implementation-alias Yaf_Config_Abstract::__isset\n     */\n\tpublic function offsetExists(mixed $name):bool {}\n\n\n\tabstract public function get(?string $name = NULL):mixed;\n\tabstract public function set(string $name, mixed $value):bool;\n\tabstract public function readonly():bool;\n\tabstract public function toArray():array;\n}\n\nfinal class Yaf_Config_Simple extends Yaf_Config_Abstract implements \\Iterator, \\Traversable, \\ArrayAccess, \\Countable { \n\t/* constants */\n\n\t/* properties */\n\n\t/* methods */\n\tpublic function __construct(array|string $config_file, ?string $section = NULL) {}\n\n\tpublic function __isset(string $name):bool {}\n\n\tpublic function __set(string $name, mixed $value):void {}\n\n\tpublic function get(?string $name = NULL):mixed {}\n\n\tpublic function set(string $name, mixed $value):bool {}\n\n\tpublic function readonly():bool {}\n\n\t/** @implementation-alias Yaf_Config_Simple::get */\n\tpublic function offsetGet(mixed $name):mixed {}\n\n\t/** @implementation-alias Yaf_Config_Simple::set */\n\tpublic function offsetSet(mixed $name, mixed $value):void {}\n\n\tpublic function offsetUnSet(mixed $name):void {}\n}\n\nfinal class Yaf_Config_Ini extends Yaf_Config_Abstract implements \\Iterator, \\Traversable, \\ArrayAccess, \\Countable { \n\t/* constants */\n\n\t/* properties */\n\tprotected bool $_readonly = 1;\n\n\t/* methods */\n\tpublic function __construct(array|string $config_file, ?string $section = NULL) {}\n\n\tpublic function __isset(string $name):bool {}\n\n\tpublic function get(?string $name = NULL):mixed {}\n\n\tpublic function set(string $name, mixed $value):bool {}\n\n\tpublic function readonly():bool {}\n\n\t/** @implementation-alias Yaf_Config_Ini::get */\n\tpublic function offsetGet(mixed $name):mixed {}\n\n\t/** @implementation-alias Yaf_Config_Ini::set */\n\tpublic function offsetSet(mixed $name, mixed $value):void {}\n\n\tpublic function __set(mixed $name, mixed $value):void {}\n}\n"
        },
        {
          "name": "yaf_config_arginfo.h",
          "type": "blob",
          "size": 4.185546875,
          "content": "/* This is a generated file, edit the .stub.php file instead.\n * Stub hash: 2a33bede1d9790ff5cb67c0e86f42e688930fa98 */\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Config_Abstract_count, 0, 0, IS_LONG, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Config_Abstract_rewind, 0, 0, IS_VOID, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Config_Abstract_current, 0, 0, IS_MIXED, 0)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Config_Abstract_next arginfo_class_Yaf_Config_Abstract_rewind\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Config_Abstract_valid, 0, 0, _IS_BOOL, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX(arginfo_class_Yaf_Config_Abstract_key, 0, 0, MAY_BE_LONG|MAY_BE_STRING|MAY_BE_NULL|MAY_BE_BOOL)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Config_Abstract___isset, 0, 1, _IS_BOOL, 0)\n\tZEND_ARG_TYPE_INFO(0, name, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Config_Abstract___get, 0, 1, IS_MIXED, 0)\n\tZEND_ARG_TYPE_INFO(0, name, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Config_Abstract_offsetGet, 0, 1, IS_MIXED, 0)\n\tZEND_ARG_TYPE_INFO(0, name, IS_MIXED, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Config_Abstract_offsetSet, 0, 2, IS_VOID, 0)\n\tZEND_ARG_TYPE_INFO(0, name, IS_MIXED, 0)\n\tZEND_ARG_TYPE_INFO(0, value, IS_MIXED, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Config_Abstract_offsetUnSet, 0, 1, IS_VOID, 0)\n\tZEND_ARG_TYPE_INFO(0, name, IS_MIXED, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Config_Abstract_offsetExists, 0, 1, _IS_BOOL, 0)\n\tZEND_ARG_TYPE_INFO(0, name, IS_MIXED, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Config_Abstract_get, 0, 0, IS_MIXED, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, name, IS_STRING, 1, \"NULL\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Config_Abstract_set, 0, 2, _IS_BOOL, 0)\n\tZEND_ARG_TYPE_INFO(0, name, IS_STRING, 0)\n\tZEND_ARG_TYPE_INFO(0, value, IS_MIXED, 0)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Config_Abstract_readonly arginfo_class_Yaf_Config_Abstract_valid\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Config_Abstract_toArray, 0, 0, IS_ARRAY, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Config_Simple___construct, 0, 0, 1)\n\tZEND_ARG_TYPE_MASK(0, config_file, MAY_BE_ARRAY|MAY_BE_STRING, NULL)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, section, IS_STRING, 1, \"NULL\")\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Config_Simple___isset arginfo_class_Yaf_Config_Abstract___isset\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Config_Simple___set, 0, 2, IS_VOID, 0)\n\tZEND_ARG_TYPE_INFO(0, name, IS_STRING, 0)\n\tZEND_ARG_TYPE_INFO(0, value, IS_MIXED, 0)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Config_Simple_get arginfo_class_Yaf_Config_Abstract_get\n\n#define arginfo_class_Yaf_Config_Simple_set arginfo_class_Yaf_Config_Abstract_set\n\n#define arginfo_class_Yaf_Config_Simple_readonly arginfo_class_Yaf_Config_Abstract_valid\n\n#define arginfo_class_Yaf_Config_Simple_offsetGet arginfo_class_Yaf_Config_Abstract_offsetGet\n\n#define arginfo_class_Yaf_Config_Simple_offsetSet arginfo_class_Yaf_Config_Abstract_offsetSet\n\n#define arginfo_class_Yaf_Config_Simple_offsetUnSet arginfo_class_Yaf_Config_Abstract_offsetUnSet\n\n#define arginfo_class_Yaf_Config_Ini___construct arginfo_class_Yaf_Config_Simple___construct\n\n#define arginfo_class_Yaf_Config_Ini___isset arginfo_class_Yaf_Config_Abstract___isset\n\n#define arginfo_class_Yaf_Config_Ini_get arginfo_class_Yaf_Config_Abstract_get\n\n#define arginfo_class_Yaf_Config_Ini_set arginfo_class_Yaf_Config_Abstract_set\n\n#define arginfo_class_Yaf_Config_Ini_readonly arginfo_class_Yaf_Config_Abstract_valid\n\n#define arginfo_class_Yaf_Config_Ini_offsetGet arginfo_class_Yaf_Config_Abstract_offsetGet\n\n#define arginfo_class_Yaf_Config_Ini_offsetSet arginfo_class_Yaf_Config_Abstract_offsetSet\n\n#define arginfo_class_Yaf_Config_Ini___set arginfo_class_Yaf_Config_Abstract_offsetSet\n"
        },
        {
          "name": "yaf_config_legacy_arginfo.h",
          "type": "blob",
          "size": 3.2080078125,
          "content": "/* This is a generated file, edit the .stub.php file instead.\n * Stub hash: 2a33bede1d9790ff5cb67c0e86f42e688930fa98 */\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Config_Abstract_count, 0, 0, 0)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Config_Abstract_rewind arginfo_class_Yaf_Config_Abstract_count\n\n#define arginfo_class_Yaf_Config_Abstract_current arginfo_class_Yaf_Config_Abstract_count\n\n#define arginfo_class_Yaf_Config_Abstract_next arginfo_class_Yaf_Config_Abstract_count\n\n#define arginfo_class_Yaf_Config_Abstract_valid arginfo_class_Yaf_Config_Abstract_count\n\n#define arginfo_class_Yaf_Config_Abstract_key arginfo_class_Yaf_Config_Abstract_count\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Config_Abstract___isset, 0, 0, 1)\n\tZEND_ARG_INFO(0, name)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Config_Abstract___get arginfo_class_Yaf_Config_Abstract___isset\n\n#define arginfo_class_Yaf_Config_Abstract_offsetGet arginfo_class_Yaf_Config_Abstract___isset\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Config_Abstract_offsetSet, 0, 0, 2)\n\tZEND_ARG_INFO(0, name)\n\tZEND_ARG_INFO(0, value)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Config_Abstract_offsetUnSet arginfo_class_Yaf_Config_Abstract___isset\n\n#define arginfo_class_Yaf_Config_Abstract_offsetExists arginfo_class_Yaf_Config_Abstract___isset\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Config_Abstract_get, 0, 0, 0)\n\tZEND_ARG_INFO(0, name)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Config_Abstract_set arginfo_class_Yaf_Config_Abstract_offsetSet\n\n#define arginfo_class_Yaf_Config_Abstract_readonly arginfo_class_Yaf_Config_Abstract_count\n\n#define arginfo_class_Yaf_Config_Abstract_toArray arginfo_class_Yaf_Config_Abstract_count\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Config_Simple___construct, 0, 0, 1)\n\tZEND_ARG_INFO(0, config_file)\n\tZEND_ARG_INFO(0, section)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Config_Simple___isset arginfo_class_Yaf_Config_Abstract___isset\n\n#define arginfo_class_Yaf_Config_Simple___set arginfo_class_Yaf_Config_Abstract_offsetSet\n\n#define arginfo_class_Yaf_Config_Simple_get arginfo_class_Yaf_Config_Abstract_get\n\n#define arginfo_class_Yaf_Config_Simple_set arginfo_class_Yaf_Config_Abstract_offsetSet\n\n#define arginfo_class_Yaf_Config_Simple_readonly arginfo_class_Yaf_Config_Abstract_count\n\n#define arginfo_class_Yaf_Config_Simple_offsetGet arginfo_class_Yaf_Config_Abstract___isset\n\n#define arginfo_class_Yaf_Config_Simple_offsetSet arginfo_class_Yaf_Config_Abstract_offsetSet\n\n#define arginfo_class_Yaf_Config_Simple_offsetUnSet arginfo_class_Yaf_Config_Abstract___isset\n\n#define arginfo_class_Yaf_Config_Ini___construct arginfo_class_Yaf_Config_Simple___construct\n\n#define arginfo_class_Yaf_Config_Ini___isset arginfo_class_Yaf_Config_Abstract___isset\n\n#define arginfo_class_Yaf_Config_Ini_get arginfo_class_Yaf_Config_Abstract_get\n\n#define arginfo_class_Yaf_Config_Ini_set arginfo_class_Yaf_Config_Abstract_offsetSet\n\n#define arginfo_class_Yaf_Config_Ini_readonly arginfo_class_Yaf_Config_Abstract_count\n\n#define arginfo_class_Yaf_Config_Ini_offsetGet arginfo_class_Yaf_Config_Abstract___isset\n\n#define arginfo_class_Yaf_Config_Ini_offsetSet arginfo_class_Yaf_Config_Abstract_offsetSet\n\n#define arginfo_class_Yaf_Config_Ini___set arginfo_class_Yaf_Config_Abstract_offsetSet\n"
        },
        {
          "name": "yaf_controller.c",
          "type": "blob",
          "size": 23.435546875,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include \"php.h\"\n#include \"Zend/zend_exceptions.h\" /* for zend_throw_exception_ex */\n#include \"Zend/zend_interfaces.h\" /* for zend_call_method_with_* */\n\n#include \"php_yaf.h\"\n#include \"yaf_namespace.h\"\n#include \"yaf_application.h\"\n#include \"yaf_loader.h\"\n#include \"yaf_request.h\"\n#include \"yaf_response.h\"\n#include \"yaf_dispatcher.h\"\n#include \"yaf_view.h\"\n#include \"yaf_exception.h\"\n#include \"yaf_controller.h\"\n#include \"yaf_action.h\"\n\n#if PHP_MAJOR_VERSION > 7\n#include \"yaf_controller_arginfo.h\"\n#else\n#include \"yaf_controller_legacy_arginfo.h\"\n#endif\n\nzend_class_entry *yaf_controller_ce;\nstatic zend_object_handlers yaf_controller_obj_handlers;\n\nstatic void yaf_controller_sanitize_view_path(zend_string *path) /* {{{ */ {\n\tyaf_replace_chr(ZSTR_VAL(path), ZSTR_LEN(path), '_', DEFAULT_SLASH);\n}\n/* }}} */\n\nstatic void yaf_controller_object_free(zend_object *object) /* {{{ */ {\n\tyaf_controller_object *ctl = php_yaf_controller_fetch_object(object);\n\n\tif (ctl->module) {\n\t\tzend_string_release(ctl->module);\n\t}\n\n\tif (ctl->name) {\n\t\tzend_string_release(ctl->name);\n\t}\n\n\tif (ctl->invoke_args) {\n\t}\n\n\tif (ctl->script_path) {\n\t\tzend_string_release(ctl->script_path);\n\t}\n\n\t/* leave to dispatcher?\n\tzval_ptr_dtor(&ctl->request);\n\tzval_ptr_dtor(&ctl->response);\n\tzval_ptr_dtor(&ctl->view);\n\t*/\n\n\t/* yaf_action struct */\n\tif (ctl->ctl.name) {\n\t\tzval_ptr_dtor(&ctl->ctl.ctl);\n\t\tzend_string_release(ctl->ctl.name);\n\t}\n\n\tif (ctl->properties) {\n\t\tif (GC_DELREF(ctl->properties)) {\n\t\t\tGC_REMOVE_FROM_BUFFER(ctl->properties);\n\t\t\tzend_array_destroy(ctl->properties);\n\t\t}\n\t}\n\n\tzend_object_std_dtor(object);\n}\n/* }}} */\n\nstatic HashTable *yaf_controller_get_properties(yaf_object *object) /* {{{ */ {\n\tzval rv;\n\tHashTable *ht;\n\tyaf_controller_object *ctl = php_yaf_controller_fetch_object(yaf_strip_obj(object));\n\n\tif (!ctl->properties) {\n\t\tALLOC_HASHTABLE(ctl->properties);\n\t\tzend_hash_init(ctl->properties, 8, NULL, ZVAL_PTR_DTOR, 0);\n\t\tYAF_ALLOW_VIOLATION(ctl->properties);\n\t}\n\n\tht = ctl->properties;\n\tif (ctl->module) {\n\t\tZVAL_STR_COPY(&rv, ctl->module);\n\t} else {\n\t\tZVAL_NULL(&rv);\n\t}\n\tzend_hash_str_add(ht, \"module:protected\", sizeof(\"module:protected\") - 1, &rv);\n\n\tif (ctl->request) {\n\t\tZVAL_COPY(&rv, ctl->request);\n\t} else {\n\t\tZVAL_NULL(&rv);\n\t}\n\tzend_hash_str_add(ht, \"request:protected\", sizeof(\"request:protected\") - 1, &rv);\n\n\tif (ctl->response) {\n\t\tZVAL_COPY(&rv, ctl->response);\n\t} else {\n\t\tZVAL_NULL(&rv);\n\t}\n\tzend_hash_str_add(ht, \"response:protected\", sizeof(\"response:protected\") - 1, &rv);\n\t\n\tif (ctl->view) {\n\t\tZVAL_COPY(&rv, ctl->view);\n\t} else {\n\t\tZVAL_NULL(&rv);\n\t}\n\tzend_hash_str_add(ht, \"view:protected\", sizeof(\"view:protected\") - 1, &rv);\n\n\treturn ht;\n}\n/* }}} */\n\nvoid yaf_controller_set_module_name(yaf_controller_object *ctl, zend_string *module) /* {{{ */ {\n\tif (ctl->module) {\n\t\tzend_string_release(ctl->module);\n\t}\n\tctl->module = zend_string_copy(module);\n}\n/* }}} */\n\nstatic zval *yaf_controller_read_property(yaf_object *obj, void *name, int type, void **cache_slot, zval *rv) /* {{{ */ {\n\tzend_string *member;\n\tconst char* pos;\n    yaf_controller_object *ctl = php_yaf_controller_fetch_object(yaf_strip_obj(obj));\n\n#if PHP_VERSION_ID < 80000\n\tif (UNEXPECTED(Z_TYPE_P((zval*)name) != IS_STRING)) {\n\t\treturn &EG(uninitialized_zval);\n\t}\n\tmember = Z_STR_P((zval*)name);\n#else\n\tmember = (zend_string*)name;\n#endif\n\n    if (UNEXPECTED(type == BP_VAR_W || type == BP_VAR_RW)) {\n        php_error_docref(NULL, E_WARNING,\n                         \"Indirect modification of Yaf_Controller internal property '%s' is not allowed\", ZSTR_VAL(member));\n        return &EG(error_zval);\n    }\n\n\tif (UNEXPECTED(!instanceof_function(ctl->std.ce, yaf_controller_ce))) {\n\t\treturn &EG(uninitialized_zval);\n\t}\n\n\tpos = ZSTR_VAL(member);\n\n\t/* for back compatibility of leading _ access */\n\tif (*pos == '_')\t{\n\t\tpos++;\n\t}\n\n\tif (strncmp(pos, \"request\", sizeof(\"request\")) == 0) {\n\t\tZVAL_COPY(rv, ctl->request);\n\t\treturn rv;\n\t}\n\n\tif (strncmp(pos, \"view\", sizeof(\"view\")) == 0) {\n\t\tZVAL_COPY(rv, ctl->view);\n\t\treturn rv;\n\t}\n\n\tif (strncmp(pos, \"response\", sizeof(\"response\")) == 0) {\n\t\tZVAL_COPY(rv, ctl->response);\n\t\treturn rv;\n\t}\n\n\tif (strncmp(pos, \"module\", sizeof(\"module\")) == 0) {\n\t\tZVAL_STR_COPY(rv, ctl->module);\n\t\treturn rv;\n\t}\n\n\tif (strncmp(pos, YAF_CONTROLLER_PROPERTY_NAME_RENDER, sizeof(YAF_CONTROLLER_PROPERTY_NAME_RENDER)) == 0) {\n\t\tif (!(ctl->flags & YAF_CTL_AUTORENDER_DEPEND)) {\n\t\t\tZVAL_BOOL(rv, (ctl->flags & YAF_CTL_AUTORENDER));\n\t\t} else {\n\t\t\tZVAL_NULL(rv);\n\t\t}\n\t\treturn rv;\n\t}\n\n    return std_object_handlers.read_property(obj, name, type, cache_slot, rv);\n}\n/* }}} */\n\nstatic zval *yaf_controller_get_property(yaf_object *obj, void *name, int type, void **cache_slot) /* {{{ */ {\n\tzend_string *member;\n\tconst char *pos;\n\tyaf_controller_object *ctl = php_yaf_controller_fetch_object(yaf_strip_obj(obj));\n\n#if PHP_VERSION_ID < 80000\n\tif (UNEXPECTED(Z_TYPE_P((zval*)name) != IS_STRING)) {\n\t\treturn &EG(error_zval);\n\t}\n\tmember = Z_STR_P((zval*)name);\n#else\n\tmember = (zend_string*)name;\n#endif\n\n\tif (UNEXPECTED(!instanceof_function(ctl->std.ce, yaf_controller_ce))) {\n\t\treturn &EG(error_zval);\n\t}\n\n\n\tpos = ZSTR_VAL(member);\n\n\t/* for back compatibility of leading _ access */\n\tif (*pos == '_')\t{\n\t\tpos++;\n\t}\n\n\tif (strncmp(pos, \"request\", sizeof(\"request\")) == 0) {\n\t\treturn ctl->request;\n\t}\n\n\tif (strncmp(pos, \"view\", sizeof(\"view\")) == 0) {\n\t\treturn ctl->view;\n\t}\n\n\tif (strncmp(pos, \"response\", sizeof(\"response\")) == 0) {\n\t\treturn ctl->response;\n\t}\n\n\treturn std_object_handlers.get_property_ptr_ptr(obj, name, type, cache_slot);\n}\n/* }}} */\n\nstatic YAF_WRITE_HANDLER yaf_controller_write_property(yaf_object *obj, void *name, zval *value, void **cache_slot) /* {{{ */ {\n\tzend_string *member;\n\tconst char *pos;\n\tyaf_controller_object *ctl = php_yaf_controller_fetch_object(yaf_strip_obj(obj));\n\n#if PHP_VERSION_ID < 80000\n\tif (UNEXPECTED(Z_TYPE_P((zval*)name) != IS_STRING)) {\n\t\tYAF_WHANDLER_RET(value);\n\t}\n\tmember = Z_STR_P((zval*)name);\n#else\n\tmember = (zend_string*)name;\n#endif\n\n\tif (UNEXPECTED(!instanceof_function(ctl->std.ce, yaf_controller_ce))) {\n\t\tYAF_WHANDLER_RET(value);\n\t}\n\n\tpos = ZSTR_VAL(member);\n\n\t/* for back compatibility of leading _ access */\n\tif (*pos == '_')\t{\n\t\tpos++;\n\t}\n\n\tif (strncmp(pos, YAF_CONTROLLER_PROPERTY_NAME_RENDER, sizeof(YAF_CONTROLLER_PROPERTY_NAME_RENDER)) == 0) {\n\t\tctl->flags &= ~YAF_CTL_AUTORENDER_DEPEND;\n\t\tctl->flags |= zend_is_true(value)? YAF_CTL_AUTORENDER : 0;\n\t\tYAF_WHANDLER_RET(value);\n\t}\n\n\tif (strncmp(pos, \"request\", sizeof(\"request\")) == 0 ||\n\t\tstrncmp(pos, \"view\", sizeof(\"view\")) == 0 ||\n\t\tstrncmp(pos, \"response\", sizeof(\"response\")) == 0  ||\n\t\tstrncmp(pos, \"module\", sizeof(\"module\")) == 0) {\n        php_error_docref(NULL, E_WARNING,\n\t\t\t\t\"Modification of Yaf_Controller internal property '%s' is not allowed\", ZSTR_VAL(member));\n\t\tYAF_WHANDLER_RET(value);\n\t}\n\n\treturn std_object_handlers.write_property(obj, name, value, cache_slot);\n}\n/* }}} */\n\nstatic void yaf_controller_determine_auto_render(yaf_controller_object *ctl, zend_class_entry *ce, zend_object *obj) /* {{{ */ {\n\tzval *render;\n\tzval *offset = zend_hash_find(&ce->properties_info, YAF_KNOWN_STR(YAF_AUTORENDER));\n\tif (EXPECTED(offset == NULL)) {\n\t\tctl->flags = (zend_uchar)YAF_CTL_AUTORENDER_DEPEND;\n\t\treturn ;\n\t}\n\n\trender = &obj->properties_table[((zend_property_info*)Z_PTR_P(offset))->offset];\n\tif (Z_TYPE_P(render) == IS_NULL) {\n\t\tctl->flags = (zend_uchar)YAF_CTL_AUTORENDER_DEPEND;\n\t\treturn ;\n\t}\n\n\tctl->flags = (Z_TYPE_P(render) == IS_TRUE || (Z_TYPE_P(render) == IS_LONG && Z_LVAL_P(render)))? YAF_CTL_AUTORENDER : 0;\n}\n/* }}} */\n\nstatic zend_object *yaf_controller_new(zend_class_entry *ce) /* {{{ */ {\n\tyaf_controller_object *ctl = emalloc(sizeof(yaf_controller_object) + zend_object_properties_size(ce));\n\n\tmemset(ctl, 0, XtOffsetOf(yaf_controller_object, std));\n\tzend_object_std_init(&ctl->std, ce);\n\tif (UNEXPECTED(ce->default_properties_count)) {\n\t\tobject_properties_init(&ctl->std, ce);\n\t\tyaf_controller_determine_auto_render(ctl, ce, &ctl->std);\n\t} else {\n\t\tctl->flags = (zend_uchar)YAF_CTL_AUTORENDER_DEPEND;\n\t}\n\tctl->std.handlers = &yaf_controller_obj_handlers;\n\n\treturn &ctl->std;\n}\n/* }}} */\n\nstatic int yaf_controller_render_ex(yaf_controller_object *ctl, zend_string *action, zval *var_array, zval *ret) /* {{{ */ {\n\tzend_string *path;\n\tzend_string *controller;\n\tconst char *view_ext;\n\tuint32_t view_ext_len;\n\tchar *target;\n\tyaf_application_object *app;\n\n\tif (UNEXPECTED(ctl->view == NULL || ctl->module == NULL)) {\n\t\treturn 0;\n\t}\n\n\tif (UNEXPECTED(app = yaf_application_instance()) && app->view_ext) {\n\t\tview_ext = ZSTR_VAL(app->view_ext);\n\t\tview_ext_len = ZSTR_LEN(app->view_ext);\n\t} else {\n\t\tview_ext = YAF_DEFAULT_VIEW_EXT;\n\t\tview_ext_len = sizeof(YAF_DEFAULT_VIEW_EXT) - 1;\n\t}\n\n\tif (EXPECTED(ctl->ctl.name == NULL)) {\n\t\tcontroller = ctl->name;\n\t} else {\n\t\tcontroller = ctl->ctl.name;\n\t}\n\n\tpath = zend_string_alloc(ZSTR_LEN(controller) + ZSTR_LEN(action) + view_ext_len + 2, 0);\n\ttarget = ZSTR_VAL(path);\n\tyaf_compose_2_pathes(target, controller, ZSTR_VAL(action), ZSTR_LEN(action));\n\ttarget += ZSTR_LEN(controller) + ZSTR_LEN(action) + 1;\n\t*target++ = '.';\n\tmemcpy(target, view_ext, view_ext_len + 1);\n\n\tzend_str_tolower(ZSTR_VAL(path), ZSTR_LEN(controller));\n\n\tyaf_controller_sanitize_view_path(path);\n\t\n\tif (UNEXPECTED(!(yaf_view_render(ctl->view, path, var_array, ret)))) {\n\t\tzend_string_release(path);\n\t\treturn 0;\n\t}\n\n\tzend_string_release(path);\n\tif (UNEXPECTED(EG(exception))) {\n\t\treturn 0;\n\t}\n\n\treturn 1;\n}\n/* }}} */\n\nint yaf_controller_render(yaf_controller_t *controller, zend_string *action, zval *var_array, zval *ret) /* {{{ */ {\n\tzend_function *fbc;\n\tzend_class_entry *ce = Z_OBJCE_P(controller);\n\n\tif (ret != NULL) {\n\t\tfbc = (zend_function*)zend_hash_find_ptr(&ce->function_table, YAF_KNOWN_STR(YAF_RENDER));\n\t} else {\n\t\tfbc = (zend_function*)zend_hash_find_ptr(&ce->function_table, YAF_KNOWN_STR(YAF_DISPLAY));\n\t}\n\n\tif (EXPECTED(fbc->type == ZEND_INTERNAL_FUNCTION)) {\n\t\tZEND_ASSERT(fbc->common.scope == yaf_controller_ce);\n\t\treturn yaf_controller_render_ex(Z_YAFCTLOBJ_P(controller), action, var_array, ret);\n\t} else {\n\t\tzval arg;\n\n\t\tZVAL_STR(&arg, action);\n\t\tif (var_array == NULL) {\n\t\t\tif (ret != NULL) {\n#if PHP_VERSION_ID < 80000\n\t\t\t\tzend_call_method_with_1_params(controller, ce, NULL, \"render\", ret, &arg);\n#else\n                zend_call_method_with_1_params(Z_OBJ_P(controller), ce, NULL, \"render\", ret, &arg);\n#endif\n                if (UNEXPECTED(Z_TYPE_P(ret) != IS_STRING || EG(exception))) {\n\t\t\t\t\tzval_ptr_dtor(ret);\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tzval rt;\n#if PHP_VERSION_ID < 80000\n\t\t\t\tzend_call_method_with_1_params(controller, ce, NULL, \"display\", &rt, &arg);\n#else\n                zend_call_method_with_1_params(Z_OBJ_P(controller), ce, NULL, \"display\", &rt, &arg);\n#endif\n                if (UNEXPECTED(Z_TYPE(rt) == IS_FALSE || EG(exception))) {\n\t\t\t\t\tzval_ptr_dtor(&rt);\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tzval_ptr_dtor(&rt);\n\t\t\t\tZVAL_TRUE(ret);\n\t\t\t}\n\t\t} else {\n\t\t\tif (ret != NULL) {\n#if PHP_VERSION_ID < 80000\n\t\t\t\tzend_call_method_with_2_params(controller, ce, NULL, \"render\", ret, &arg, var_array);\n#else\n                zend_call_method_with_2_params(Z_OBJ_P(controller), ce, NULL, \"render\", ret, &arg, var_array);\n#endif\n\t\t\t\tif (UNEXPECTED(Z_TYPE_P(ret) != IS_STRING || EG(exception))) {\n\t\t\t\t\tzval_ptr_dtor(ret);\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tzval rt;\n#if PHP_VERSION_ID < 80000\n\t\t\t\tzend_call_method_with_2_params(controller, ce, NULL, \"display\", &rt, &arg, var_array);\n#else\n                zend_call_method_with_2_params(Z_OBJ_P(controller), ce, NULL, \"display\", &rt, &arg, var_array);\n#endif\n\t\t\t\tif (UNEXPECTED(Z_TYPE(rt) == IS_FALSE || EG(exception))) {\n\t\t\t\t\tzval_ptr_dtor(&rt);\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tzval_ptr_dtor(&rt);\n\t\t\t\tZVAL_TRUE(ret);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn 1;\n}\n/* }}} */\n\nint yaf_controller_init(yaf_controller_object *ctl, yaf_dispatcher_object *dispatcher) /* {{{ */ {\n\tzend_class_entry *ce = ctl->std.ce;\n\n\tctl->request = &dispatcher->request;\n\tctl->response = &dispatcher->response;\n\tctl->view = &dispatcher->view;\n\tctl->name = zend_string_copy(Z_YAFREQUESTOBJ(dispatcher->request)->controller);\n\tctl->module = zend_string_copy(Z_YAFREQUESTOBJ(dispatcher->request)->module);\n\n\tif (!instanceof_function(ce, yaf_action_ce) &&\n\t\tzend_hash_str_exists(&(ce->function_table), ZEND_STRL(\"init\"))) {\n\t\tzval self;\n\t\tZVAL_OBJ(&self, &ctl->std);\n#if PHP_VERSION_ID < 80000\n\t\tzend_call_method_with_0_params(&self, ce, NULL, \"init\", NULL);\n#else\n        zend_call_method_with_0_params(Z_OBJ(self), ce, NULL, \"init\", NULL);\n#endif\n\t\tif (UNEXPECTED(EG(exception))) {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\treturn 1;\n}\n/* }}} */\n\n/** {{{ proto protected Yaf_Controller_Abstract::__construct(void)\n*/\nPHP_METHOD(yaf_controller, __construct) {\n\tzend_class_entry *ce = Z_OBJCE_P(getThis());\n\tyaf_application_object *app = yaf_application_instance();\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (app == NULL) {\n\t\tzend_throw_exception_ex(NULL, 0,\n\t\t\t\"Cannot construct '%s' while no '%s' initialized\", ZSTR_VAL(ce->name), ZSTR_VAL(yaf_application_ce->name));\n\t\treturn;\n\t}\n\tyaf_controller_init(Z_YAFCTLOBJ_P(getThis()), Z_YAFDISPATCHEROBJ(app->dispatcher));\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Controller_Abstract::getView(void)\n*/\nPHP_METHOD(yaf_controller, getView) {\n\tyaf_controller_object *ctl = Z_YAFCTLOBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (ctl->view) {\n\t\tRETURN_ZVAL(ctl->view, 1, 0);\n\t}\n\n\tRETURN_NULL();\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Controller_Abstract::getRequest(void)\n*/\nPHP_METHOD(yaf_controller, getRequest) {\n\tyaf_controller_object *ctl = Z_YAFCTLOBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (ctl->request) {\n\t\tRETURN_ZVAL(ctl->request, 1, 0);\n\t}\n\n\tRETURN_NULL();\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Controller_Abstract::getResponse(void)\n*/\nPHP_METHOD(yaf_controller, getResponse) {\n\tyaf_controller_object *ctl = Z_YAFCTLOBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (ctl->response) {\n\t\tRETURN_ZVAL(ctl->response, 1, 0);\n\t}\n\n\tRETURN_NULL();\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Controller_Abstract::initView(array $options = NULL)\n*/\nPHP_METHOD(yaf_controller, initView) {\n\tzval *args = NULL;\n\tyaf_controller_object *ctl = Z_YAFCTLOBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"|a\", &args) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (ctl->view) {\n\t\tRETURN_ZVAL(ctl->view, 1, 0);\n\t}\n\n\tRETURN_NULL();\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Controller_Abstract::getInvokeArg(string $name)\n */\nPHP_METHOD(yaf_controller, getInvokeArg) {\n\tzend_string *name = NULL;\n\tyaf_controller_object *ctl = Z_YAFCTLOBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S\",  &name) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (EXPECTED(ctl->invoke_args && ZSTR_LEN(name))) {\n\t\tzval *arg = zend_hash_find(ctl->invoke_args, name);\n\t\tif (EXPECTED(arg != NULL)) {\n\t\t\tRETURN_ZVAL(arg, 1, 0);\n\t\t}\n\t}\n\t\n\tRETURN_NULL();\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Controller_Abstract::getInvokeArgs(void)\n */\nPHP_METHOD(yaf_controller, getInvokeArgs) {\n\tyaf_controller_object *ctl = Z_YAFCTLOBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (ctl->invoke_args) {\n\t\tRETURN_ARR(zend_array_dup(ctl->invoke_args));\n\t}\n\n\tRETURN_NULL();\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Controller_Abstract::getModuleName(void)\n */\nPHP_METHOD(yaf_controller, getModuleName) {\n\tyaf_controller_object *ctl = Z_YAFCTLOBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (EXPECTED(ctl->module)) {\n\t\tRETURN_STR_COPY(ctl->module);\n\t}\n\n\tRETURN_NULL();\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Controller_Abstract::getName(void)\n */\nPHP_METHOD(yaf_controller, getName) {\n\tyaf_controller_object *ctl = Z_YAFCTLOBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (EXPECTED(ctl->name)) {\n\t\tRETURN_STR_COPY(ctl->name);\n\t}\n\n\tRETURN_NULL();\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Controller_Abstract::setViewpath(string $view_directory)\n*/\nPHP_METHOD(yaf_controller, setViewpath) {\n\tzend_string *path;\n\tyaf_controller_object *ctl = Z_YAFCTLOBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S\", &path) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (EXPECTED(ctl->view)) {\n\t\tyaf_view_set_tpl_dir(ctl->view, path);\n\t\tRETURN_TRUE;\n\t}\n\n\tRETURN_FALSE;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Controller_Abstract::getViewpath(void)\n*/\nPHP_METHOD(yaf_controller, getViewpath) {\n\tzend_string *tpl_dir;\n\tyaf_controller_object *ctl = Z_YAFCTLOBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (EXPECTED(ctl->view)) {\n\t\ttpl_dir = yaf_view_get_tpl_dir(ctl->view, NULL);\n\t\tif (EXPECTED(tpl_dir)) {\n\t\t\tRETURN_STR_COPY(tpl_dir);\n\t\t}\n\t}\n\n\tRETURN_EMPTY_STRING();\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Controller_Abstract::forward($module, $controller, $action, $args = NULL)\n*/\nPHP_METHOD(yaf_controller, forward) {\n\tzval *controller, *module, *action, *args;\n\tyaf_request_object *request;\n\tyaf_controller_object *ctl = Z_YAFCTLOBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"z|zza\", &module, &controller, &action, &args) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (UNEXPECTED(ctl->request == NULL)) {\n\t\tRETURN_FALSE;\n\t}\n\t\n\trequest = Z_YAFREQUESTOBJ_P(ctl->request);\n\tswitch (ZEND_NUM_ARGS()) {\n\t\tcase 1:\n\t\t\tif (Z_TYPE_P(module) != IS_STRING) {\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"Expect a string action name\");\n\t\t\t\tRETURN_FALSE;\n\t\t\t}\n\t\t\tyaf_request_set_action(request, Z_STR_P(module));\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tif (Z_TYPE_P(controller) ==  IS_STRING) {\n\t\t\t\tyaf_request_set_mvc(request, NULL, Z_STR_P(module), Z_STR_P(controller), NULL);\n\t\t\t} else if (Z_TYPE_P(controller) == IS_ARRAY) {\n\t\t\t\tyaf_request_set_mvc(request, NULL, NULL, Z_STR_P(module), Z_ARRVAL_P(controller));\n\t\t\t} else {\n\t\t\t\tRETURN_FALSE;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tif (Z_TYPE_P(action) == IS_STRING) {\n\t\t\t\tyaf_request_set_mvc(request, Z_STR_P(module), Z_STR_P(controller), Z_STR_P(action), NULL);\n\t\t\t} else if (Z_TYPE_P(action) == IS_ARRAY) {\n\t\t\t\tyaf_request_set_mvc(request, NULL, Z_STR_P(module), Z_STR_P(controller), Z_ARRVAL_P(action));\n\t\t\t} else {\n\t\t\t\tRETURN_FALSE;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\tyaf_request_set_mvc(request, Z_STR_P(module), Z_STR_P(controller), Z_STR_P(action), Z_ARRVAL_P(args));\n\t\t\tbreak;\n\t}\n\n\tyaf_request_set_dispatched(request, 0);\n\n\tRETURN_TRUE;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Controller_Abstract::redirect(string $url)\n*/\nPHP_METHOD(yaf_controller, redirect) {\n\tzend_string *location;\n\tyaf_controller_object *ctl = Z_YAFCTLOBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S\", &location) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (EXPECTED(ctl->response)) {\n\t\tyaf_response_set_redirect(Z_YAFRESPONSEOBJ_P(ctl->response), location);\n\t}\n\n\tRETURN_TRUE;\n}\n/* }}} */\n\n/** {{{ proto protected Yaf_Controller_Abstract::render(string $action, array $var_array = NULL)\n*/\nPHP_METHOD(yaf_controller, render) {\n\tzend_string *action_name;\n\tzval *var_array\t= NULL;\n\tyaf_controller_object *ctl = Z_YAFCTLOBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S|a!\", &action_name, &var_array) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (UNEXPECTED(!yaf_controller_render_ex(ctl, action_name, var_array, return_value))) {\n\t\tRETURN_FALSE;\n\t}\n}\n/* }}} */\n\n/** {{{ proto protected Yaf_Controller_Abstract::display(string $action, array $var_array = NULL)\n*/\nPHP_METHOD(yaf_controller, display) {\n\tzend_string *action_name;\n\tzval *var_array\t= NULL;\n\tyaf_controller_object *ctl = Z_YAFCTLOBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S|a!\", &action_name, &var_array) == FAILURE) {\n\t\treturn;\n\t}\n\n\tRETURN_BOOL(yaf_controller_render_ex(ctl, action_name, var_array, NULL));\n}\n/* }}} */\n\n/** {{{ yaf_controller_methods\n*/\nzend_function_entry yaf_controller_methods[] = {\n    PHP_ME(yaf_controller, __construct, arginfo_class_Yaf_Controller_Abstract___construct, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)\n    PHP_ME(yaf_controller, render, arginfo_class_Yaf_Controller_Abstract_render, ZEND_ACC_PROTECTED)\n    PHP_ME(yaf_controller, display, arginfo_class_Yaf_Controller_Abstract_display, ZEND_ACC_PROTECTED)\n    PHP_ME(yaf_controller, getRequest, arginfo_class_Yaf_Controller_Abstract_getRequest, ZEND_ACC_PUBLIC)\n    PHP_ME(yaf_controller, getResponse, arginfo_class_Yaf_Controller_Abstract_getResponse, ZEND_ACC_PUBLIC)\n    PHP_ME(yaf_controller, getView, arginfo_class_Yaf_Controller_Abstract_getView, ZEND_ACC_PUBLIC)\n    PHP_ME(yaf_controller, getName, arginfo_class_Yaf_Controller_Abstract_getName, ZEND_ACC_PUBLIC)\n    PHP_ME(yaf_controller, getModuleName, arginfo_class_Yaf_Controller_Abstract_getModuleName, ZEND_ACC_PUBLIC)\n    PHP_ME(yaf_controller, initView, arginfo_class_Yaf_Controller_Abstract_initView, ZEND_ACC_PUBLIC)\n    PHP_ME(yaf_controller, setViewpath, arginfo_class_Yaf_Controller_Abstract_setViewpath, ZEND_ACC_PUBLIC)\n    PHP_ME(yaf_controller, getViewpath, arginfo_class_Yaf_Controller_Abstract_getViewpath, ZEND_ACC_PUBLIC)\n    PHP_ME(yaf_controller, forward, arginfo_class_Yaf_Controller_Abstract_forward, ZEND_ACC_PUBLIC)\n    PHP_ME(yaf_controller, redirect, arginfo_class_Yaf_Controller_Abstract_redirect, ZEND_ACC_PUBLIC)\n    PHP_ME(yaf_controller, getInvokeArgs, arginfo_class_Yaf_Controller_Abstract_getInvokeArgs, ZEND_ACC_PUBLIC)\n    PHP_ME(yaf_controller, getInvokeArg, arginfo_class_Yaf_Controller_Abstract_getInvokeArg, ZEND_ACC_PUBLIC)\n    {NULL, NULL, NULL}\n};\n/* }}} */\n\n/** {{{ YAF_STARTUP_FUNCTION\n*/\nYAF_STARTUP_FUNCTION(controller) {\n\tzend_class_entry ce;\n\tYAF_INIT_CLASS_ENTRY(ce, \"Yaf_Controller_Abstract\", \"Yaf\\\\Controller_Abstract\", yaf_controller_methods);\n\tyaf_controller_ce = zend_register_internal_class_ex(&ce, NULL);\n\tyaf_controller_ce->create_object = yaf_controller_new;\n#if PHP_VERSION_ID < 80100\n\tyaf_controller_ce->ce_flags |= ZEND_ACC_EXPLICIT_ABSTRACT_CLASS;\n\tyaf_controller_ce->serialize = zend_class_serialize_deny;\n\tyaf_controller_ce->unserialize = zend_class_unserialize_deny;\n#else\n\tyaf_controller_ce->ce_flags |= ZEND_ACC_EXPLICIT_ABSTRACT_CLASS | ZEND_ACC_NOT_SERIALIZABLE;\n#endif\n\n\tmemcpy(&yaf_controller_obj_handlers, zend_get_std_object_handlers(), sizeof(zend_object_handlers));\n\tyaf_controller_obj_handlers.offset = XtOffsetOf(yaf_controller_object, std);\n\tyaf_controller_obj_handlers.clone_obj = NULL;\n\tyaf_controller_obj_handlers.get_gc = yaf_fake_get_gc;\n\tyaf_controller_obj_handlers.free_obj = yaf_controller_object_free;\n\tyaf_controller_obj_handlers.get_properties = yaf_controller_get_properties;\n\tyaf_controller_obj_handlers.read_property = (zend_object_read_property_t)yaf_controller_read_property;\n\tyaf_controller_obj_handlers.get_property_ptr_ptr = (zend_object_get_property_ptr_ptr_t)yaf_controller_get_property;\n\tyaf_controller_obj_handlers.write_property = (zend_object_write_property_t)yaf_controller_write_property;\n\n\treturn SUCCESS;\n}\n/* }}} */\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_controller.h",
          "type": "blob",
          "size": 3.025390625,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifndef YAF_CONTROLLER_H\n#define YAF_CONTROLLER_H\n\n#define YAF_CONTROLLER_PROPERTY_NAME_RENDER     \"yafAutoRender\"\n\n#define YAF_CTL_AUTORENDER         (1<<0)\n#define YAF_CTL_AUTORENDER_DEPEND  (1<<1)\n\nextern zend_class_entry *yaf_controller_ce;\n\ntypedef struct {\n\tzend_uchar      flags;\n\tzend_string    *module;\n\tzend_string    *name;\n\tyaf_request_t  *request;\n\tyaf_response_t *response;\n\tyaf_view_t     *view;\n\tzend_string    *script_path;\n\tstruct {\n\t\tyaf_controller_t ctl;\n\t\tzend_string     *name;\n\t} ctl;\n\tzend_array     *invoke_args;\n\tzend_array     *properties;\n\tzend_object     std;\n} yaf_controller_object;\n\n#define Z_YAFCTLOBJ(zv)    (php_yaf_controller_fetch_object(Z_OBJ(zv)))\n#define Z_YAFCTLOBJ_P(zv)  Z_YAFCTLOBJ(*zv)\n\nstatic zend_always_inline yaf_controller_object *php_yaf_controller_fetch_object(zend_object *obj) {\n\treturn (yaf_controller_object *)((char*)(obj) - XtOffsetOf(yaf_controller_object, std));\n}\n\nint yaf_controller_render(yaf_controller_t *ctl, zend_string *action, zval *vars, zval *ret);\nint yaf_controller_init(yaf_controller_object *ctl, yaf_dispatcher_object *dispatcher);\nvoid yaf_controller_set_module_name(yaf_controller_object *ctl, zend_string *module);\n\nstatic zend_always_inline zend_bool yaf_controller_auto_render(yaf_controller_object *ctl, zend_bool dispatch_render) {\n\treturn (ctl->flags & YAF_CTL_AUTORENDER_DEPEND)? dispatch_render : (ctl->flags & YAF_CTL_AUTORENDER);\n}\n\nstatic zend_always_inline int yaf_controller_execute(yaf_controller_t *ctl, zend_function* func, int count, zval *args, zval *ret) {\n\tint result;\n#if PHP_VERSION_ID < 70100\n\tzend_class_entry *old_scope = EG(scope);\n\tEG(scope) = Z_OBJCE_P(ctl);\n#endif\n\tif (EXPECTED(count == 0)) {\n\t\tresult = yaf_call_user_method_with_0_arguments(Z_OBJ_P(ctl), func, ret);\n\t} else {\n\t\tresult = yaf_call_user_method(Z_OBJ_P(ctl), func, count, args, ret);\n\t}\n#if PHP_VERSION_ID < 70100\n\tEG(scope) = old_scope;\n#endif\n\n\treturn result;\n}\n\nYAF_STARTUP_FUNCTION(controller);\n#endif\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n\n"
        },
        {
          "name": "yaf_controller.stub.php",
          "type": "blob",
          "size": 2.3115234375,
          "content": "<?php\n\n/** @generate-legacy-arginfo */\n\nabstract class Yaf_Controller_Abstract { \n\t/* constants */\n\n\t/* properties */\n\tprotected ?array $actions = NULL;\n\tprotected ?string $_module = NULL;\n\tprotected ?string $_name = NULL;\n\tprotected ?object $_request = NULL;\n\tprotected ?object $_response = NULL;\n\tprotected ?array $_invoke_args = NULL;\n\tprotected ?object $_view = NULL;\n\n\t/* methods */\n\n\tpublic function __construct();\n\n\t/**\n\t * @return Yaf_Request_Abstract|NULL\n\t */\n\tfinal public function getRequest():?object;\n\n\t/**\n\t * @return Yaf_Response_Abstract|NULL\n\t */\n\tfinal public function getResponse():?object;\n\n\tfinal public function getModuleName():?string;\n\n\t/**\n\t * @return Yaf_View_Interface|NULL\n\t */\n\tfinal public function getView():?object;\n\n\t/**\n\t * @return Yaf_View_Interface|NULL\n\t */\n\tfinal public function initView(?array $options = NULL):?object;\n\n\tfinal public function setViewpath(string $view_directory):?bool;\n\n\tfinal public function getViewpath():?string;\n\n\t/**\n\t *\n\t * @polymorphism\n\t * final public function forward(string $action):?bool\n\t * final public function forward(string $controller, $action):?bool\n\t * final public function forward(string $action, array $invoke_args):?bool\n\t * final public function forward(string $module, string $controller, string $action):?bool\n\t * final public function forward(string $controller, string $action, array $invoke_args):?bool\n\t * final public function forward(string $module, string $controller, string $action, array $invoke_args):?bool\n\t */\n\tfinal public function forward(mixed $args1, mixed $args2 = NULL, mixed $args3 = NULL, mixed $args4 = NULL):?bool {}\n\n\tfinal public function redirect(string $url):?bool;\n\n\tfinal public function getInvokeArgs():?array;\n\n\tfinal public function getInvokeArg(string $name):?string;\n\n\tfinal public function getName():?string;\n\n\tfinal protected function render(string $tpl, ?array $parameters = NULL):string|null|bool;\n\n\tfinal protected function display(string $tpl, ?array $parameters = NULL):?bool;\n}\n\nabstract class Yaf_Action_Abstract extends Yaf_Controller_Abstract { \n\t/* constants */\n\n\t/* properties */\n\n\t/* methods */\n\n\t/* @tentative-return-type */\n\t/**\n\t * @return bool\n\t */\n\tabstract public function execute();\n\n\t/**\n\t * @return Yaf_Controller_Abstract|NULL\n\t */\n\tpublic function getController():?object;\n\n\tpublic function getControllerName():?string;\n}\n"
        },
        {
          "name": "yaf_controller_arginfo.h",
          "type": "blob",
          "size": 2.9267578125,
          "content": "/* This is a generated file, edit the .stub.php file instead.\n * Stub hash: f6b3c770dde0187a7432deb7b9291bec34347c5b */\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Controller_Abstract___construct, 0, 0, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Controller_Abstract_getRequest, 0, 0, IS_OBJECT, 1)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Controller_Abstract_getResponse arginfo_class_Yaf_Controller_Abstract_getRequest\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Controller_Abstract_getModuleName, 0, 0, IS_STRING, 1)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Controller_Abstract_getView arginfo_class_Yaf_Controller_Abstract_getRequest\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Controller_Abstract_initView, 0, 0, IS_OBJECT, 1)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, options, IS_ARRAY, 1, \"NULL\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Controller_Abstract_setViewpath, 0, 1, _IS_BOOL, 1)\n\tZEND_ARG_TYPE_INFO(0, view_directory, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Controller_Abstract_getViewpath arginfo_class_Yaf_Controller_Abstract_getModuleName\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Controller_Abstract_forward, 0, 1, _IS_BOOL, 1)\n\tZEND_ARG_TYPE_INFO(0, args1, IS_MIXED, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, args2, IS_MIXED, 0, \"NULL\")\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, args3, IS_MIXED, 0, \"NULL\")\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, args4, IS_MIXED, 0, \"NULL\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Controller_Abstract_redirect, 0, 1, _IS_BOOL, 1)\n\tZEND_ARG_TYPE_INFO(0, url, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Controller_Abstract_getInvokeArgs, 0, 0, IS_ARRAY, 1)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Controller_Abstract_getInvokeArg, 0, 1, IS_STRING, 1)\n\tZEND_ARG_TYPE_INFO(0, name, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Controller_Abstract_getName arginfo_class_Yaf_Controller_Abstract_getModuleName\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX(arginfo_class_Yaf_Controller_Abstract_render, 0, 1, MAY_BE_STRING|MAY_BE_NULL|MAY_BE_BOOL)\n\tZEND_ARG_TYPE_INFO(0, tpl, IS_STRING, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, parameters, IS_ARRAY, 1, \"NULL\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Controller_Abstract_display, 0, 1, _IS_BOOL, 1)\n\tZEND_ARG_TYPE_INFO(0, tpl, IS_STRING, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, parameters, IS_ARRAY, 1, \"NULL\")\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Action_Abstract_execute arginfo_class_Yaf_Controller_Abstract___construct\n\n#define arginfo_class_Yaf_Action_Abstract_getController arginfo_class_Yaf_Controller_Abstract_getRequest\n\n#define arginfo_class_Yaf_Action_Abstract_getControllerName arginfo_class_Yaf_Controller_Abstract_getModuleName\n\n"
        },
        {
          "name": "yaf_controller_legacy_arginfo.h",
          "type": "blob",
          "size": 2.2197265625,
          "content": "/* This is a generated file, edit the .stub.php file instead.\n * Stub hash: f6b3c770dde0187a7432deb7b9291bec34347c5b */\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Controller_Abstract___construct, 0, 0, 0)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Controller_Abstract_getRequest arginfo_class_Yaf_Controller_Abstract___construct\n\n#define arginfo_class_Yaf_Controller_Abstract_getResponse arginfo_class_Yaf_Controller_Abstract___construct\n\n#define arginfo_class_Yaf_Controller_Abstract_getModuleName arginfo_class_Yaf_Controller_Abstract___construct\n\n#define arginfo_class_Yaf_Controller_Abstract_getView arginfo_class_Yaf_Controller_Abstract___construct\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Controller_Abstract_initView, 0, 0, 0)\n\tZEND_ARG_INFO(0, options)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Controller_Abstract_setViewpath, 0, 0, 1)\n\tZEND_ARG_INFO(0, view_directory)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Controller_Abstract_getViewpath arginfo_class_Yaf_Controller_Abstract___construct\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Controller_Abstract_forward, 0, 0, 1)\n\tZEND_ARG_INFO(0, args1)\n\tZEND_ARG_INFO(0, args2)\n\tZEND_ARG_INFO(0, args3)\n\tZEND_ARG_INFO(0, args4)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Controller_Abstract_redirect, 0, 0, 1)\n\tZEND_ARG_INFO(0, url)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Controller_Abstract_getInvokeArgs arginfo_class_Yaf_Controller_Abstract___construct\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Controller_Abstract_getInvokeArg, 0, 0, 1)\n\tZEND_ARG_INFO(0, name)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Controller_Abstract_getName arginfo_class_Yaf_Controller_Abstract___construct\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Controller_Abstract_render, 0, 0, 1)\n\tZEND_ARG_INFO(0, tpl)\n\tZEND_ARG_INFO(0, parameters)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Controller_Abstract_display arginfo_class_Yaf_Controller_Abstract_render\n\n#define arginfo_class_Yaf_Action_Abstract_execute arginfo_class_Yaf_Controller_Abstract___construct\n\n#define arginfo_class_Yaf_Action_Abstract_getController arginfo_class_Yaf_Controller_Abstract___construct\n\n#define arginfo_class_Yaf_Action_Abstract_getControllerName arginfo_class_Yaf_Controller_Abstract___construct\n\n"
        },
        {
          "name": "yaf_dispatcher.c",
          "type": "blob",
          "size": 41.4765625,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include \"php.h\"\n#include \"main/SAPI.h\" /* for sapi_module */\n#include \"Zend/zend_interfaces.h\" /* for zend_call_method_with_* */\n#include \"Zend/zend_exceptions.h\" /* for zend_exception_get_default */\n\n#include \"php_yaf.h\"\n#include \"yaf_namespace.h\"\n#include \"yaf_dispatcher.h\"\n#include \"yaf_controller.h\"\n#include \"yaf_action.h\"\n#include \"yaf_application.h\"\n#include \"yaf_view.h\"\n#include \"yaf_response.h\"\n#include \"yaf_loader.h\"\n#include \"yaf_router.h\"\n#include \"yaf_request.h\"\n#include \"yaf_config.h\"\n#include \"yaf_plugin.h\"\n#include \"yaf_exception.h\"\n\n#if PHP_MAJOR_VERSION > 7\n#include \"yaf_dispatcher_arginfo.h\"\n#else\n#include \"yaf_dispatcher_legacy_arginfo.h\"\n#endif\n\nzend_class_entry    *yaf_dispatcher_ce;\nstatic zend_object_handlers yaf_dispatcher_obj_handlers;\n\nstatic void yaf_dispatcher_obj_free(zend_object *object) /* {{{ */ {\n\tyaf_dispatcher_object *dispatcher = php_yaf_dispatcher_fetch_object(object);\n\n\tzval_ptr_dtor(&dispatcher->request);\n\tzval_ptr_dtor(&dispatcher->response);\n\tzval_ptr_dtor(&dispatcher->router);\n\tzval_ptr_dtor(&dispatcher->view);\n\n\tif (dispatcher->plugins) {\n\t\tif (GC_DELREF(dispatcher->plugins) == 0) {\n\t\t\tGC_REMOVE_FROM_BUFFER(dispatcher->plugins);\n\t\t\tzend_array_destroy(dispatcher->plugins);\n\t\t}\n\t}\n\n\tif (dispatcher->properties) {\n\t\tif (GC_DELREF(dispatcher->properties) == 0) {\n\t\t\tGC_REMOVE_FROM_BUFFER(dispatcher->properties);\n\t\t\tzend_array_destroy(dispatcher->properties);\n\t\t}\n\t}\n\n\tzend_object_std_dtor(object);\n}\n/* }}} */\n\nstatic HashTable *yaf_dispatcher_get_properties(yaf_object *obj) /* {{{ */ {\n\tzval rv;\n\tHashTable *ht;\n\tyaf_dispatcher_object *dispatcher = php_yaf_dispatcher_fetch_object(yaf_strip_obj(obj));\n\n\tif (!dispatcher->properties) {\n\t\tALLOC_HASHTABLE(dispatcher->properties);\n\t\tzend_hash_init(dispatcher->properties, 16, NULL, ZVAL_PTR_DTOR, 0);\n\t\tYAF_ALLOW_VIOLATION(dispatcher->properties);\n\t}\n\n\tht = dispatcher->properties;\n\n\tZVAL_BOOL(&rv, YAF_DISPATCHER_FLAGS(dispatcher) & YAF_DISPATCHER_AUTO_RENDER);\n\tzend_hash_str_update(ht, \"auto_render:protected\", sizeof(\"auto_render:protected\") - 1, &rv);\n\tZVAL_BOOL(&rv, YAF_DISPATCHER_FLAGS(dispatcher) & YAF_DISPATCHER_INSTANT_FLUSH);\n\tzend_hash_str_update(ht, \"instant_flush:protected\", sizeof(\"instant_flush:protected\") - 1, &rv);\n\tZVAL_BOOL(&rv, YAF_DISPATCHER_FLAGS(dispatcher) & YAF_DISPATCHER_RETURN_RESPONSE);\n\tzend_hash_str_update(ht, \"return_response:protected\", sizeof(\"return_response:protected\") - 1, &rv);\n\n\tZVAL_COPY(&rv, &dispatcher->request);\n\tzend_hash_str_update(ht, \"request:protected\", sizeof(\"request:protected\") - 1, &rv);\n\tZVAL_COPY(&rv, &dispatcher->response);\n\tzend_hash_str_update(ht, \"response:protected\", sizeof(\"response:protected\") - 1, &rv);\n\tZVAL_COPY(&rv, &dispatcher->router);\n\tzend_hash_str_update(ht, \"router:protected\", sizeof(\"router:protected\") - 1, &rv);\n\tZVAL_COPY(&rv, &dispatcher->view);\n\tzend_hash_str_update(ht, \"view:protected\", sizeof(\"view:protected\") - 1, &rv);\n\n\tif (dispatcher->plugins) {\n\t\tZVAL_ARR(&rv, dispatcher->plugins);\n\t\tGC_ADDREF(dispatcher->plugins);\n\t} else {\n#if PHP_VERSION_ID < 70400\n\t\tarray_init(&rv);\n#else\n\t\tZVAL_EMPTY_ARRAY(&rv);\n#endif\n\t}\n\tzend_hash_str_update(ht, \"plugins:protected\", sizeof(\"plugins:protected\") - 1, &rv);\n\n\treturn ht;\n}\n/* }}} */\n\nstatic HashTable *yaf_dispatcher_get_gc(yaf_object *obj, zval **table, int *n) /* {{{ */ {\n\tyaf_dispatcher_object *dispatcher = php_yaf_dispatcher_fetch_object(yaf_strip_obj(obj));\n\n\t*table = &dispatcher->request;\n\t*n = 4;\n\n\treturn dispatcher->plugins;\n}\n/* }}} */\n\nvoid yaf_dispatcher_instance(yaf_dispatcher_t *this_ptr) /* {{{ */ {\n\tyaf_application_object *app = Z_YAFAPPOBJ(YAF_G(app));\n\tyaf_dispatcher_object *dispatcher;\n\n\tif (IS_OBJECT != Z_TYPE(app->dispatcher)) {\n\t\tdispatcher = emalloc(sizeof(yaf_dispatcher_object) + zend_object_properties_size(yaf_dispatcher_ce));\n\t\tzend_object_std_init(&dispatcher->std, yaf_dispatcher_ce);\n\t\tdispatcher->std.handlers = &yaf_dispatcher_obj_handlers;\n\n\t\tyaf_router_instance(&dispatcher->router);\n\n\t\tZVAL_NULL(&dispatcher->request);\n\t\tZVAL_NULL(&dispatcher->response);\n\t\tZVAL_NULL(&dispatcher->view);\n\t\tYAF_DISPATCHER_FLAGS(dispatcher) = YAF_DISPATCHER_AUTO_RENDER;\n\t\tdispatcher->plugins = NULL;\n\t\tdispatcher->properties = NULL;\n\n\t\tZVAL_OBJ(&app->dispatcher, &dispatcher->std);\n\t\treturn;\n\t}\n\n\tZVAL_COPY(this_ptr, &app->dispatcher);\n}\n/* }}} */\n\nstatic ZEND_COLD zend_never_inline zend_class_entry *yaf_dispatcher_get_errors_hub(int type, ...) /* {{{ */ {\n\tva_list args;\n\n\tva_start(args, type);\n\tif (type == 0) {\n\t\tzend_string *app_dir = va_arg(args, zend_string*);\n\t\tzend_string *module = va_arg(args, zend_string*);\n\t\tzend_string *controller = va_arg(args, zend_string*);\n\t\tyaf_trigger_error(YAF_ERR_AUTOLOAD_FAILED, \"path too long %s%c%s%c%s\",\n\t\t\tZSTR_VAL(app_dir), DEFAULT_SLASH, ZSTR_VAL(module), DEFAULT_SLASH, ZSTR_VAL(controller));\n\t} else if (type == 1) {\n\t\tzend_class_entry *ce = va_arg(args, zend_class_entry*);\n\t\tzend_string *controller = va_arg(args, zend_string*);\n\t\tchar *directory = va_arg(args, char*);\n\t\tsize_t directory_len = va_arg(args, size_t);\n\t\tif (ce) {\n\t\t\tyaf_trigger_error(YAF_ERR_TYPE_ERROR,\n\t\t\t\t\t\"Controller '%s' is not a subclass of %s\", ZSTR_VAL(ce->name), ZSTR_VAL(yaf_controller_ce->name));\n\t\t} else if (strlen(directory) == directory_len) { \n\t\t\tyaf_trigger_error(YAF_ERR_AUTOLOAD_FAILED, \"path too long while loading '%s'\", ZSTR_VAL(controller));\n\t\t} else if (!zend_hash_str_exists(&EG(included_files), directory, strlen(directory))) {\n\t\t\tyaf_trigger_error(YAF_ERR_NOTFOUND_CONTROLLER,\n\t\t\t\t\t\"Failed opening controller script %s: %s\", directory, strerror(errno));\n\t\t} else {\n\t\t\tif (EXPECTED(yaf_is_name_suffix())) {\n\t\t\t\tyaf_trigger_error(YAF_ERR_AUTOLOAD_FAILED,\n\t\t\t\t\t\t\"Could not find class %s%s%s in controller script %s\",\n\t\t\t\t\t\tZSTR_VAL(controller), YAF_G(name_separator), \"Controller\", directory);\n\t\t\t} else {\n\t\t\t\tyaf_trigger_error(YAF_ERR_AUTOLOAD_FAILED,\n\t\t\t\t\t\t\"Could not find class %s%s%s in controller script %s\",\n\t\t\t\t\t\t\"Controller\", YAF_G(name_separator), ZSTR_VAL(controller), directory);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tzval *pzval;\n\t\tzend_class_entry *ce = va_arg(args, zend_class_entry*);\n\t\tzval *action_map = va_arg(args, zval*);\n\t\tzend_string *action = va_arg(args, zend_string*);\n\t\tyaf_controller_t *controller = va_arg(args, yaf_controller_t*);\n\t\tchar *path = va_arg(args, char*);\n\t\tif (Z_TYPE_P(action_map) != IS_ARRAY) {\n\t\t\tyaf_trigger_error(YAF_ERR_NOTFOUND_ACTION,\n\t\t\t\t\t\"There is no method %s%s in %s\", ZSTR_VAL(action), \"Action\", ZSTR_VAL(Z_OBJCE_P(controller)->name));\n\t\t} else if ((pzval = zend_hash_find(Z_ARRVAL_P(action_map), action)) == NULL) {\n\t\t\tyaf_trigger_error(YAF_ERR_NOTFOUND_ACTION, \"There is no method %s%s in %s::$%s\", ZSTR_VAL(action),\n\t\t\t\t\t\"Action\", ZSTR_VAL(Z_OBJCE_P(controller)->name), YAF_KNOWN_CHARS(YAF_ACTIONS_MAP));\n\t\t} else if (Z_TYPE_P(pzval) != IS_STRING) {\n\t\t\tyaf_trigger_error(YAF_ERR_NOTFOUND_ACTION, \"Action '%s' in %s::%s does not have a valid path\", ZSTR_VAL(action),\n\t\t\t\t\tZSTR_VAL(Z_OBJCE_P(controller)->name), YAF_KNOWN_CHARS(YAF_ACTIONS_MAP));\n\t\t} else if (ce) {\n\t\t\tyaf_trigger_error(YAF_ERR_TYPE_ERROR,\n\t\t\t\t\t\"Action '%s' is not a subclass of %s\", ZSTR_VAL(ce->name), ZSTR_VAL(yaf_action_ce->name));\n\t\t} else if (!zend_hash_str_exists(&EG(included_files), path, strlen(path))) {\n\t\t\tyaf_trigger_error(YAF_ERR_NOTFOUND_ACTION,\n\t\t\t\t\t\"Failed opening action script %s: %s\", path, strerror(errno));\n\t\t} else {\n\t\t\tyaf_trigger_error(YAF_ERR_NOTFOUND_ACTION,\n\t\t\t\t\t\"Could not find action %s in %s\", ZSTR_VAL(action), path);\n\t\t}\n\t}\n\n\tva_end(args);\n\treturn NULL;\n}\n/* }}} */\n\nstatic void yaf_dispatcher_get_call_parameters(yaf_request_object *request, zend_function *fptr, zval **args, uint32_t *count) /* {{{ */ {\n\tzval *arg;\n\tzval *params;\n\tuint32_t current;\n\tzend_arg_info *arg_info;\n\tHashTable *params_ht;\n\n\tif (request->params == NULL) {\n\t\t*count = 0;\n\t\t*args = NULL;\n\t\treturn;\n\t}\n\n\tparams_ht = request->params;\n\targ_info = fptr->common.arg_info;\n\t*args = params = safe_emalloc(sizeof(zval), fptr->common.num_args, 0);\n\tfor (current = 0; current < fptr->common.num_args; current++, arg_info++) {\n\t\tif ((arg = zend_hash_find(params_ht, arg_info->name)) != NULL) {\n\t\t\tZVAL_COPY_VALUE(&(params[current]), arg);\n\t\t} else if (current >= fptr->common.required_num_args) {\n\t\t\tuint32_t idx = current + 1;\n\t\t\tzend_op *op = ((zend_op_array *)fptr)->opcodes;\n\t\t\tzend_op *end = op + ((zend_op_array *)fptr)->last;\n\t\t\twhile (op < end) {\n\t\t\t\tif (op->op1.num == idx) {\n\t\t\t\t\tif (op->opcode == ZEND_RECV_INIT) {\n#if PHP_VERSION_ID < 70300\n\t\t\t\t\t\targ = RT_CONSTANT(&fptr->op_array, op->op2);\n#else\n\t\t\t\t\t\targ = RT_CONSTANT(op, op->op2);\n#endif\n\t\t\t\t\t\t/* Constant evaluation? */\n\t\t\t\t\t\tif (Z_TYPE_P(arg) < IS_OBJECT) {\n\t\t\t\t\t\t\tZVAL_COPY_VALUE(&(params[current]), arg);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgoto out;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tZVAL_NULL(&(params[current]));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t++op;\n\t\t\t}\n\t\t\tif (UNEXPECTED(op == end)) {\n\t\t\t\tgoto out;\n\t\t\t}\n\t\t}\n\t}\nout:\n\t*count = current;\n\treturn;\n}\n/* }}} */\n\nstatic int yaf_dispatcher_init_view(yaf_dispatcher_object *dispatcher, zend_string *tpl_dir, zval *options) /* {{{ */ {\n\t/*FIXME multiply re-instance?*/\n\tyaf_view_t *view = &dispatcher->view;\n\n\tif (EXPECTED(IS_OBJECT == Z_TYPE_P(view) &&\n\t\tinstanceof_function(Z_OBJCE_P(view), yaf_view_interface_ce))) {\n\t\treturn 1;\n\t}\n\n\tzval_ptr_dtor(&dispatcher->view);\n\tyaf_view_instance(&dispatcher->view, tpl_dir, options);\n\n\treturn Z_TYPE(dispatcher->view) == IS_OBJECT;\n}\n/* }}} */\n\nstatic inline void yaf_dispatcher_fix_default(yaf_dispatcher_object *dispatcher, yaf_request_object *request) /* {{{ */ {\n\tyaf_application_object *app = Z_YAFAPPOBJ(YAF_G(app));\n\n\tif (request->module == NULL) {\n\t\trequest->module = zend_string_copy(app->default_module);\n\t}\n\n\tif (request->controller == NULL) {\n\t\trequest->controller = zend_string_copy(app->default_controller);\n\t}\n\n\tif (request->action == NULL) {\n\t\trequest->action = zend_string_copy(app->default_action);\n\t}\n}\n/* }}} */\n\nstatic void yaf_dispatcher_set_request(yaf_dispatcher_object *dispatcher, yaf_request_t *request) /* {{{ */ {\n\tif (EXPECTED(Z_TYPE(dispatcher->request) == IS_OBJECT)) {\n\t\tOBJ_RELEASE(Z_OBJ(dispatcher->request));\n\t}\n\tZVAL_COPY(&dispatcher->request, request);\n}\n/* }}} */\n\nstatic void yaf_dispatcher_set_response(yaf_dispatcher_object *dispatcher, yaf_response_t *response) /* {{{ */ {\n\tif (EXPECTED(Z_TYPE(dispatcher->response) == IS_OBJECT)) {\n\t\tOBJ_RELEASE(Z_OBJ(dispatcher->response));\n\t} \n\tZVAL_COPY(&dispatcher->response, response);\n}\n/* }}} */\n\nstatic zend_always_inline int yaf_dispatcher_route(yaf_dispatcher_object *dispatcher) /* {{{ */ {\n\tyaf_router_object *router = Z_YAFROUTEROBJ(dispatcher->router);\n\n\treturn yaf_router_route(router, &dispatcher->request);\n}\n/* }}} */\n\nstatic zend_class_entry *yaf_dispatcher_get_controller(zend_string *app_dir, yaf_request_object *request, int def_module) /* {{{ */ {\n\tchar directory[MAXPATHLEN];\n\tsize_t directory_len;\n\tzend_class_entry *ce;\n\tzend_string *lc_name;\n\tzend_string *controller = request->controller;\n\tzend_string *module = request->module;\n\tALLOCA_FLAG(use_heap);\n\n\tif (def_module) {\n\t\tif (UNEXPECTED(ZSTR_LEN(app_dir) + sizeof(YAF_CONTROLLER_DIRECTORY_NAME) > MAXPATHLEN)) {\n\t\t\treturn yaf_dispatcher_get_errors_hub(0, app_dir, module, controller);\n\t\t}\n\t\tdirectory_len = yaf_compose_2_pathes(directory, app_dir, ZEND_STRL(YAF_CONTROLLER_DIRECTORY_NAME));\n\t} else {\n\t\tif (UNEXPECTED(ZSTR_LEN(app_dir) + ZSTR_LEN(module) + sizeof(YAF_MODULE_DIRECTORY_NAME) + sizeof(YAF_CONTROLLER_DIRECTORY_NAME) > MAXPATHLEN)) {\n\t\t\treturn yaf_dispatcher_get_errors_hub(0, app_dir, module, controller);\n\t\t}\n\t\tdirectory_len = yaf_compose_2_pathes(directory, app_dir, ZEND_STRL(YAF_MODULE_DIRECTORY_NAME));\n\t\tdirectory[directory_len++] = DEFAULT_SLASH;\n\t\tdirectory_len += yaf_compose_2_pathes(directory + directory_len, module, ZEND_STRL(YAF_CONTROLLER_DIRECTORY_NAME));\n\t}\n\n\tSTR_ALLOCA_ALLOC(lc_name, ZSTR_LEN(controller) + YAF_G(name_separator_len) + sizeof(\"controller\") - 1, use_heap);\n\tif (EXPECTED(yaf_is_name_suffix())) {\n\t\tchar *p = ZSTR_VAL(lc_name);\n\t\tzend_str_tolower_copy(p, ZSTR_VAL(controller), ZSTR_LEN(controller));\n\t\tp += ZSTR_LEN(controller);\n\t\tif (UNEXPECTED(YAF_G(name_separator_len))) {\n\t\t\tzend_str_tolower_copy(p, YAF_G(name_separator), YAF_G(name_separator_len));\n\t\t\tp += YAF_G(name_separator_len);\n\t\t}\n\t\tmemcpy(p, \"controller\", sizeof(\"controller\"));\n\t} else {\n\t\tchar *p = ZSTR_VAL(lc_name);\n\t\tmemcpy(p, \"controller\", sizeof(\"controller\") - 1);\n\t\tp += sizeof(\"controller\") - 1;\n\t\tif (UNEXPECTED(YAF_G(name_separator_len))) {\n\t\t\tzend_str_tolower_copy(p, YAF_G(name_separator), YAF_G(name_separator_len));\n\t\t\tp += YAF_G(name_separator_len);\n\t\t}\n\t\tzend_str_tolower_copy(p, ZSTR_VAL(controller), ZSTR_LEN(controller));\n\t}\n\n\tif ((ce = zend_hash_find_ptr(EG(class_table), lc_name)) == NULL || !instanceof_function(ce, yaf_controller_ce)) {\n\t\tyaf_loader_object *l = Z_YAFLOADEROBJ(YAF_G(loader));\n\t\tif (yaf_loader_load_internal(l, ZSTR_VAL(controller), ZSTR_LEN(controller), directory, directory_len)) {\n\t\t\tif (EXPECTED((ce = zend_hash_find_ptr(EG(class_table), lc_name)))) {\n\t\t\t\tif (EXPECTED(instanceof_function(ce, yaf_controller_ce))) {\n\t\t\t\t\tSTR_ALLOCA_FREE(lc_name, use_heap);\n\t\t\t\t\treturn ce;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSTR_ALLOCA_FREE(lc_name, use_heap);\n\t\treturn yaf_dispatcher_get_errors_hub(1, ce, controller, directory, directory_len);\n\t}\n\tSTR_ALLOCA_FREE(lc_name, use_heap);\n\treturn ce;\n}\n/* }}} */\n\nstatic zend_class_entry *yaf_dispatcher_get_action(zend_string *app_dir, yaf_controller_t *controller, yaf_request_object *request) /* {{{ */ {\n\tzval *pzval;\n\tzval *actions_map;\n\tchar path[MAXPATHLEN];\n\tzend_class_entry *ce = NULL;\n\tzend_string *action = request->action;\n\n#if PHP_VERSION_ID < 80000\n# if PHP_VERSION_ID < 70100\n\tactions_map = zend_read_property(Z_OBJCE_P(controller), controller, YAF_KNOWN_CHARS(YAF_ACTIONS_MAP), strlen(YAF_KNOWN_CHARS(YAF_ACTIONS_MAP)), 1, NULL);\n# else\n\tactions_map = zend_read_property_ex(Z_OBJCE_P(controller), controller, YAF_KNOWN_STR(YAF_ACTIONS_MAP), 1, NULL);\n# endif\n#else\n    actions_map = zend_read_property_ex(Z_OBJCE_P(controller), Z_OBJ_P(controller), YAF_KNOWN_STR(YAF_ACTIONS_MAP), 1, NULL);\n#endif\n\n\tZVAL_DEREF(actions_map);\n\n\tif (EXPECTED(IS_ARRAY == Z_TYPE_P(actions_map))) {\n\t\tzend_string *lc_name;\n\t\tALLOCA_FLAG(use_heap);\n\n\t\tSTR_ALLOCA_ALLOC(lc_name, ZSTR_LEN(action) + YAF_G(name_separator_len) + sizeof(\"action\") - 1, use_heap);\n\t\tif (EXPECTED(yaf_is_name_suffix())) {\n\t\t\tchar *p = ZSTR_VAL(lc_name);\n\t\t\tmemcpy(p, ZSTR_VAL(action), ZSTR_LEN(action));\n\t\t\tp += ZSTR_LEN(action);\n\t\t\tif (UNEXPECTED(YAF_G(name_separator_len))) {\n\t\t\t\tzend_str_tolower_copy(p, YAF_G(name_separator), YAF_G(name_separator_len));\n\t\t\t\tp += YAF_G(name_separator_len);\n\t\t\t}\n\t\t\tmemcpy(p, \"action\", sizeof(\"action\"));\n\t\t} else {\n\t\t\tchar *p = ZSTR_VAL(lc_name);\n\t\t\tmemcpy(p, \"action\", sizeof(\"action\") - 1);\n\t\t\tp += sizeof(\"action\") - 1;\n\t\t\tif (UNEXPECTED(YAF_G(name_separator_len))) {\n\t\t\t\tzend_str_tolower_copy(p, YAF_G(name_separator), YAF_G(name_separator_len));\n\t\t\t\tp += YAF_G(name_separator_len);\n\t\t\t}\n\t\t\tmemcpy(p, ZSTR_VAL(action), ZSTR_LEN(action) + 1);\n\t\t}\n\n\t\tif ((ce = zend_hash_find_ptr(EG(class_table), lc_name)) != NULL) {\n\t\t\tif (EXPECTED(instanceof_function(ce, yaf_action_ce))) {\n\t\t\t\tSTR_ALLOCA_FREE(lc_name, use_heap);\n\t\t\t\treturn ce;\n\t\t\t}\n\t\t} else if (((pzval = zend_hash_find_ind(Z_ARRVAL_P(actions_map), action)) != NULL) &&\n\t\t\t\t((Z_TYPE_P(pzval) == IS_STRING) ||\n\t\t\t\t(Z_TYPE_P(pzval) == IS_REFERENCE && (pzval = Z_REFVAL_P(pzval), (Z_TYPE_P(pzval) == IS_STRING))))) {\n\t\t\tuint32_t len;\n\n\t\t\tlen = yaf_compose_2_pathes(path, app_dir, Z_STRVAL_P(pzval), Z_STRLEN_P(pzval));\n\t\t\tpath[len] = '\\0';\n\t\t\tif (yaf_loader_import(path, len)) {\n\t\t\t\tif ((ce = zend_hash_find_ptr(EG(class_table), lc_name)) != NULL) {\n\t\t\t\t\tif (EXPECTED(instanceof_function(ce, yaf_action_ce))) {\n\t\t\t\t\t\tSTR_ALLOCA_FREE(lc_name, use_heap);\n\t\t\t\t\t\treturn ce;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tSTR_ALLOCA_FREE(lc_name, use_heap);\n\t}\n\n\treturn yaf_dispatcher_get_errors_hub(2, ce, actions_map, action, controller, path);\n}\n/* }}} */\n\nstatic zend_never_inline zend_function *yaf_dispatcher_handle_action(yaf_application_object *app, yaf_dispatcher_object *dispatcher, yaf_controller_t *controller) /* {{{ */ {\n\tzend_function *fptr;\n\tzend_class_entry *ce;\n\n\tif ((ce = yaf_dispatcher_get_action(app->directory, controller, Z_YAFREQUESTOBJ(dispatcher->request)))) {\n\t\tif ((fptr = zend_hash_find_ptr(&(ce->function_table), YAF_KNOWN_STR(YAF_EXECUTE)))) {\n\t\t\tyaf_action_t action;\n\t\t\tyaf_action_object *act;\n\n\t\t\tobject_init_ex(&action, ce);\n\t\t\tact = Z_YAFCTLOBJ(action);\n\n\t\t\tyaf_controller_init(act, dispatcher);\n\n\t\t\tyaf_action_init(act, controller, Z_YAFREQUESTOBJ(dispatcher->request)->action);\n\n\t\t\tGC_DELREF(Z_OBJ_P(controller));\n\t\t\tZVAL_COPY_VALUE(controller, &action);\n\n\t\t\treturn fptr;\n\t\t}\n\t}\n\treturn NULL;\n}\n/* }}} */\n\nstatic ZEND_HOT int yaf_dispatcher_handle(yaf_dispatcher_object *dispatcher) /* {{{ */ {\n\tyaf_application_object *app = Z_YAFAPPOBJ(YAF_G(app));\n\n\tyaf_request_set_dispatched(Z_YAFREQUESTOBJ(dispatcher->request), 1);\n\tif (EXPECTED(app->directory)) {\n\t\tint is_def_module = 0;\n\t\tzend_class_entry *ce;\n\t\tyaf_request_object *request = Z_YAFREQUESTOBJ(dispatcher->request);\n\n\t\tZEND_ASSERT(request->module);\n\t\tZEND_ASSERT(request->controller);\n\t\tZEND_ASSERT(request->action);\n\n\t\tif (zend_string_equals(app->default_module, request->module)) {\n\t\t\tis_def_module = 1;\n\t\t}\n\n\t\tif ((ce = yaf_dispatcher_get_controller(app->directory, request, is_def_module))) {\n\t\t\tzend_function *fptr;\n\t\t\tyaf_controller_object *ctl;\n\t\t\tyaf_controller_t controller;\n\t\t\tzend_string *current_action;\n\n\t\t\tobject_init_ex(&controller, ce);\n\t\t\tctl = Z_YAFCTLOBJ(controller);\n\t\t\tif (UNEXPECTED(!yaf_controller_init(ctl, dispatcher))) {\n\t\t\t\tOBJ_RELEASE(Z_OBJ(controller));\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (UNEXPECTED(!yaf_request_is_dispatched(request))) {\n\t\t\t\t/* forward is called in init method */\n\t\t\t\tOBJ_RELEASE(Z_OBJ(controller));\n\t\t\t\treturn yaf_dispatcher_handle(dispatcher);\n\t\t\t}\n\n\t\t\tif (EXPECTED(yaf_view_get_tpl_dir(&dispatcher->view, &dispatcher->request) == NULL)) {\n\t\t\t\tzend_string *view_dir;\n\t\t\t\t/* view template directory for application, view engine's directory has high priority */\n\t\t\t\tif (is_def_module) {\n\t\t\t\t\tview_dir = zend_string_alloc(ZSTR_LEN(app->directory) + sizeof(\"views\"), 0);\n\t\t\t\t\tyaf_compose_2_pathes(ZSTR_VAL(view_dir), app->directory, ZEND_STRS(\"views\"));\n\t\t\t\t} else {\n\t\t\t\t\tview_dir = strpprintf(0, \"%s%c%s%c%s%c%s\", ZSTR_VAL(app->directory),\n\t\t\t\t\t\t\tDEFAULT_SLASH, \"modules\", DEFAULT_SLASH, ZSTR_VAL(request->module), DEFAULT_SLASH, \"views\");\n\t\t\t\t}\n\t\t\t\tyaf_view_set_tpl_dir(&dispatcher->view, view_dir);\n\t\t\t\tzend_string_release(view_dir);\n\t\t\t}\n\n\t\t\tdo { /* Fetch the action method, if it doesn't exist , fall to $action_map property */\n\t\t\t\tchar *func_name;\n\t\t\t\tuint32_t func_len;\n\t\t\t\tALLOCA_FLAG(use_heap);\n\n\t\t\t\tfunc_len = ZSTR_LEN(request->action) + sizeof(\"action\") - 1;\n\t\t\t\tfunc_name = do_alloca(func_len, use_heap);\n\t\t\t\tmemcpy(func_name, ZSTR_VAL(request->action), ZSTR_LEN(request->action));\n\t\t\t\tmemcpy(func_name + ZSTR_LEN(request->action), \"action\", sizeof(\"action\") - 1);\n\t\t\t\t/* Magic __call supports? */\n\t\t\t\tif (UNEXPECTED((fptr = zend_hash_str_find_ptr(&((ce)->function_table), func_name, func_len)) == NULL)) {\n\t\t\t\t\t/* Fallback to lowercase searching */\n\t\t\t\t\tzend_str_tolower(func_name, ZSTR_LEN(request->action));\n\t\t\t\t\tif ((fptr = zend_hash_str_find_ptr(&((ce)->function_table), func_name, func_len)) == NULL) {\n\t\t\t\t\t\tif (UNEXPECTED((fptr = yaf_dispatcher_handle_action(app, dispatcher, &controller)) == NULL)) {\n\t\t\t\t\t\t\tfree_alloca(func_name, use_heap);\n\t\t\t\t\t\t\tOBJ_RELEASE(Z_OBJ(controller));\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tctl = Z_YAFCTLOBJ(controller);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfree_alloca(func_name, use_heap);\n\t\t\t} while (0);\n\n\t\t\tdo { /* Execute the method */\n\t\t\t\tzval ret;\n\t\t\t\tzval *args = NULL;\n\t\t\t\tuint32_t count = 0;\n\n\t\t\t\tcurrent_action = zend_string_copy(request->action);\n\t\t\t\tif ((fptr->common.num_args)) {\n\t\t\t\t\tyaf_dispatcher_get_call_parameters(request, fptr, &args, &count);\n\t\t\t\t}\n\t\t\t\tif (UNEXPECTED(!yaf_controller_execute(&controller, fptr, count, args, &ret))) {\n\t\t\t\t\tif ((args)) {\n\t\t\t\t\t\tefree(args);\n\t\t\t\t\t}\n\t\t\t\t\tif (UNEXPECTED(Z_ISUNDEF(ret))) {\n\t\t\t\t\t\tzend_string_release(current_action);\n\t\t\t\t\t\tOBJ_RELEASE(Z_OBJ(controller));\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ((args)) {\n\t\t\t\t\tefree(args);\n\t\t\t\t}\n\t\t\t\tif ((Z_TYPE(ret) == IS_FALSE)) {\n\t\t\t\t\t/* no auto-renderring */\n\t\t\t\t\tzend_string_release(current_action);\n\t\t\t\t\tOBJ_RELEASE(Z_OBJ(controller));\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\tzval_ptr_dtor(&ret);\n\t\t\t} while(0);\n\n\t\t\t/* controller's property yafAutoRender has higher priority */\n\t\t\tif (yaf_controller_auto_render(ctl, YAF_DISPATCHER_FLAGS(dispatcher) & YAF_DISPATCHER_AUTO_RENDER)) {\n\t\t\t\tzval res;\n\t\t\t\tzend_bool flush_instantly = YAF_DISPATCHER_FLAGS(dispatcher) & YAF_DISPATCHER_INSTANT_FLUSH;\n\t\t\t\tif (EXPECTED(yaf_controller_render(&controller, current_action, NULL, flush_instantly? NULL : &res))) {\n\t\t\t\t\tif (UNEXPECTED(!flush_instantly)) {\n\t\t\t\t\t\tZEND_ASSERT(Z_TYPE(res) == IS_STRING);\n\t\t\t\t\t\tyaf_response_append_body(Z_YAFRESPONSEOBJ(dispatcher->response), NULL, Z_STR(res));\n\t\t\t\t\t\tzend_string_release(Z_STR(res));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tzend_string_release(current_action);\n\t\t\t\t\tOBJ_RELEASE(Z_OBJ(controller));\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tzend_string_release(current_action);\n\t\t\tOBJ_RELEASE(Z_OBJ(controller));\n\t\t\treturn 1;\n\t\t}\n\t} else {\n\t\tyaf_trigger_error(YAF_ERR_STARTUP_FAILED,\n\t\t\t\t\"%s requires %s(which set the application.directory) to be initialized first\",\n\t\t\t\tZSTR_VAL(yaf_dispatcher_ce->name), ZSTR_VAL(yaf_application_ce->name));\n\t}\n\treturn 0;\n}\n/* }}} */\n\nstatic ZEND_COLD zend_never_inline void yaf_dispatcher_exception_handler(yaf_dispatcher_object *dispatcher) /* {{{ */ {\n\tzend_string *controller, *action;\n\tzval exception;\n\tconst zend_op *opline;\n\tyaf_request_object *request = Z_YAFREQUESTOBJ(dispatcher->request);\n\n#if PHP_VERSION_ID >= 80000\n\tif (zend_is_unwind_exit(EG(exception))) {\n\t\treturn;\n\t}\n#endif\n\n\tif ((YAF_DISPATCHER_FLAGS(dispatcher) & YAF_DISPATCHER_IN_EXCEPTION)|| !EG(exception)) {\n\t\treturn;\n\t}\n\n\tYAF_DISPATCHER_FLAGS(dispatcher) |= YAF_DISPATCHER_IN_EXCEPTION;\n\n\tZVAL_OBJ(&exception, EG(exception));\n\tEG(exception) = NULL;\n\topline = EG(opline_before_exception);\n#if ZEND_DEBUG\n\tEG(opline_before_exception) = NULL;\n#endif\n\n\tcontroller = zend_string_init(ZEND_STRL(YAF_ERROR_CONTROLLER), 0);\n\taction = zend_string_init(ZEND_STRL(YAF_ERROR_ACTION), 0);\n\n\tyaf_request_set_mvc(request, NULL, controller, action, NULL);\n\tif (UNEXPECTED(request->module == NULL)) {\n\t\t/* must threw in routerStartup hook ?*/\n\t\tyaf_dispatcher_fix_default(dispatcher, request);\n\t}\n\n\tzend_string_release(controller);\n\tzend_string_release(action);\n\n\t/** use $request->getException() instand of */\n\tif (yaf_request_set_str_params_single(request, \"exception\", sizeof(\"exception\") - 1, &exception)) {\n\t\tzval_ptr_dtor(&exception);\n\t} else {\n\t\t/* failover to uncaught exception */\n\t\tEG(exception) = Z_OBJ(exception);\n\t\tYAF_DISPATCHER_FLAGS(dispatcher) = ~YAF_DISPATCHER_IN_EXCEPTION;\n\t\treturn;\n\t}\n\tyaf_request_set_dispatched(request, 0);\n\n\tif (UNEXPECTED(!yaf_dispatcher_init_view(dispatcher, NULL, NULL))) {\n\t\tyaf_request_del_str_param(request, \"exception\", sizeof(\"exception\") - 1);\n\t\tYAF_DISPATCHER_FLAGS(dispatcher) = ~YAF_DISPATCHER_IN_EXCEPTION;\n\t\treturn;\n\t}\n\n\tif (!yaf_dispatcher_handle(dispatcher)) {\n\t\tif (UNEXPECTED(EG(exception)) &&\n\t\t\tinstanceof_function(EG(exception)->ce,\n\t\t\t\tyaf_buildin_exceptions[YAF_EXCEPTION_OFFSET(YAF_ERR_NOTFOUND_CONTROLLER)])) {\n\t\t\tzend_string_release(request->module);\n\t\t\trequest->module = zend_string_copy(Z_YAFAPPOBJ(YAF_G(app))->default_module);\n\t\t\t/* failover to default module error catcher */\n\t\t\tzend_clear_exception();\n\t\t\tyaf_dispatcher_handle(dispatcher);\n\t\t}\n\t}\n\n\tyaf_request_del_str_param(request, \"exception\", sizeof(\"exception\") - 1);\n\n\tif (!(YAF_DISPATCHER_FLAGS(dispatcher) & YAF_DISPATCHER_RETURN_RESPONSE)) {\n\t\tyaf_response_response(Z_YAFRESPONSEOBJ(dispatcher->response));\n\t\tyaf_response_clear_body(Z_YAFRESPONSEOBJ(dispatcher->response), NULL);\n\t}\n\n\tEG(opline_before_exception) = opline;\n\tYAF_DISPATCHER_FLAGS(dispatcher) = ~YAF_DISPATCHER_IN_EXCEPTION;\n\tYAF_EXCEPTION_ERASE_EXCEPTION();\n}\n/* }}} */\n\nZEND_HOT yaf_response_t *yaf_dispatcher_dispatch(yaf_dispatcher_object *dispatcher) /* {{{ */ {\n\tyaf_request_object *request;\n\tzend_bool catch_exception = yaf_is_catch_exception();\n\tuint32_t nesting = yaf_get_forward_limit();\n\n\tif (EXPECTED(Z_TYPE(dispatcher->response) != IS_OBJECT)) {\n\t\tyaf_response_instance(&dispatcher->response, sapi_module.name);\n\t} else {\n\t\tyaf_response_clear_body(Z_YAFRESPONSEOBJ(dispatcher->response), NULL);\n\t}\n\n\trequest = Z_YAFREQUESTOBJ(dispatcher->request);\n\t/* route request */\n\tif (EXPECTED(!yaf_request_is_routed(request))) {\n\t\tYAF_PLUGIN_HANDLE(dispatcher, YAF_HOOK_ROUTESTARTUP);\n\t\tif (UNEXPECTED(!yaf_dispatcher_route(dispatcher))) {\n\t\t\tyaf_trigger_error(YAF_ERR_ROUTE_FAILED, \"Routing request failed\");\n\t\t\tYAF_EXCEPTION_HANDLE(dispatcher);\n\t\t}\n\t\tyaf_dispatcher_fix_default(dispatcher, request);\n\t\tYAF_PLUGIN_HANDLE(dispatcher, YAF_HOOK_ROUTESHUTDOWN);\n\t\tyaf_request_set_routed(request, 1);\n\t} else {\n\t\tyaf_dispatcher_fix_default(dispatcher, request);\n\t}\n\n\tYAF_PLUGIN_HANDLE(dispatcher, YAF_HOOK_LOOPSTARTUP);\n\n\tif (UNEXPECTED(!yaf_dispatcher_init_view(dispatcher, NULL, NULL))) {\n\t\treturn NULL;\n\t}\n\n\tdo {\n\t\tYAF_PLUGIN_HANDLE(dispatcher, YAF_HOOK_PREDISPATCH);\n\t\tif (UNEXPECTED(!yaf_dispatcher_handle(dispatcher))) {\n\t\t\tYAF_EXCEPTION_HANDLE(dispatcher);\n\t\t}\n\t\t/* yaf_dispatcher_fix_default(dispatcher, request); */\n\t\tYAF_PLUGIN_HANDLE(dispatcher, YAF_HOOK_POSTDISPATCH);\n\t} while (!yaf_request_is_dispatched(request) && --nesting > 0);\n\n\tYAF_PLUGIN_HANDLE(dispatcher, YAF_HOOK_LOOPSHUTDOWN);\n\n\tif (EXPECTED(yaf_request_is_dispatched(request))) {\n\t\tif (!(YAF_DISPATCHER_FLAGS(dispatcher) & YAF_DISPATCHER_RETURN_RESPONSE)) {\n\t\t\tyaf_response_response(Z_YAFRESPONSEOBJ(dispatcher->response));\n\t\t\tyaf_response_clear_body(Z_YAFRESPONSEOBJ(dispatcher->response), NULL);\n\t\t}\n\t\treturn &dispatcher->response;\n\t} else {\n\t\tZEND_ASSERT(nesting == 0);\n\t\tyaf_trigger_error(YAF_ERR_DISPATCH_FAILED, \"The maximum dispatching count %ld is reached\", yaf_get_forward_limit());\n\t\tYAF_EXCEPTION_HANDLE(dispatcher);\n\t}\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Dispatcher::dispatch(yaf_request_t $request)\n*/\nPHP_METHOD(yaf_dispatcher, dispatch) {\n\tyaf_request_t \t*request;\n\tyaf_response_t \t*response;\n\tyaf_dispatcher_object *dispatcher = Z_YAFDISPATCHEROBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"O\", &request, yaf_request_ce) == FAILURE) {\n\t\treturn;\n\t}\n\n\tyaf_dispatcher_set_request(dispatcher, request);\n\tif ((response = yaf_dispatcher_dispatch(dispatcher))) {\n\t\tRETURN_ZVAL(response, 1, 0);\n\t}\n\n\tRETURN_FALSE;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Dispatcher::disableView()\n*/\nPHP_METHOD(yaf_dispatcher, disableView) {\n\tyaf_dispatcher_object *dispatcher = Z_YAFDISPATCHEROBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tYAF_DISPATCHER_FLAGS(dispatcher) &= ~YAF_DISPATCHER_AUTO_RENDER;\n\n\tRETURN_ZVAL(getThis(), 1, 0);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Dispatcher::enableView()\n*/\nPHP_METHOD(yaf_dispatcher, enableView) {\n\tyaf_dispatcher_object *dispatcher = Z_YAFDISPATCHEROBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tYAF_DISPATCHER_FLAGS(dispatcher) |= YAF_DISPATCHER_AUTO_RENDER;\n\n\tRETURN_ZVAL(getThis(), 1, 0);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Dispatcher::returnResponse(bool $return_response = 0)\n*/\nPHP_METHOD(yaf_dispatcher, returnResponse) {\n\tzend_bool return_response = 0;\n\tyaf_dispatcher_object *dispatcher = Z_YAFDISPATCHEROBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"|b\", &return_response) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (ZEND_NUM_ARGS()) {\n\t\tif (return_response) {\n\t\t\tYAF_DISPATCHER_FLAGS(dispatcher) |= YAF_DISPATCHER_RETURN_RESPONSE;\n\t\t} else {\n\t\t\tYAF_DISPATCHER_FLAGS(dispatcher) &= ~YAF_DISPATCHER_RETURN_RESPONSE;\n\t\t}\n\t\tRETURN_ZVAL(getThis(), 1, 0);\n\t} else {\n\t\tRETURN_BOOL(YAF_DISPATCHER_FLAGS(dispatcher) & YAF_DISPATCHER_RETURN_RESPONSE);\n\t}\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Dispatcher::flushInstantly(bool $flag = 1)\n*/\nPHP_METHOD(yaf_dispatcher, flushInstantly) {\n\tzend_bool instantly_flush = 1;\n\tyaf_dispatcher_object *dispatcher = Z_YAFDISPATCHEROBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"|b\", &instantly_flush) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (ZEND_NUM_ARGS()) {\n\t\tif (instantly_flush) {\n\t\t\tYAF_DISPATCHER_FLAGS(dispatcher) |= YAF_DISPATCHER_INSTANT_FLUSH;\n\t\t} else {\n\t\t\tYAF_DISPATCHER_FLAGS(dispatcher) &= ~YAF_DISPATCHER_INSTANT_FLUSH;\n\t\t}\n\n\t\tRETURN_ZVAL(getThis(), 1, 0);\n\t} else {\n\t\tRETURN_BOOL(YAF_DISPATCHER_FLAGS(dispatcher) & YAF_DISPATCHER_INSTANT_FLUSH);\n\t}\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Dispatcher::registerPlugin(Yaf_Plugin_Abstract $plugin)\n*/\nPHP_METHOD(yaf_dispatcher, registerPlugin) {\n\tyaf_plugin_t *plugin;\n\tyaf_dispatcher_object *dispatcher = Z_YAFDISPATCHEROBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"O\", &plugin, yaf_plugin_ce) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (!dispatcher->plugins) {\n\t\tALLOC_HASHTABLE(dispatcher->plugins);\n\t\tzend_hash_init(dispatcher->plugins, 8, NULL, ZVAL_PTR_DTOR, 0);\n\t}\n\tZ_ADDREF_P(plugin);\n\tzend_hash_next_index_insert(dispatcher->plugins, plugin);\n\n\tRETURN_ZVAL(getThis(), 1, 0);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Dispatcher::setRequest(Yaf_Request_Abstract $request)\n*/\nPHP_METHOD(yaf_dispatcher, setRequest) {\n\tyaf_request_t *request;\n\tyaf_dispatcher_object *dispatcher = Z_YAFDISPATCHEROBJ_P(getThis());\n\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"O\", &request, yaf_request_ce) == FAILURE) {\n\t\treturn;\n\t}\n\n\tyaf_dispatcher_set_request(dispatcher, request);\n\tRETURN_ZVAL(getThis(), 1, 0);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Dispatcher::setResponse(Yaf_Response_Abstract $response)\n*/\nPHP_METHOD(yaf_dispatcher, setResponse) {\n\tyaf_response_t *response;\n\tyaf_dispatcher_object *dispatcher = Z_YAFDISPATCHEROBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"O\", &response, yaf_response_ce) == FAILURE) {\n\t\treturn;\n\t}\n\n\tyaf_dispatcher_set_response(dispatcher, response);\n\tRETURN_ZVAL(getThis(), 1, 0);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Dispatcher::getInstance(void)\n*/\nPHP_METHOD(yaf_dispatcher, getInstance) {\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tyaf_dispatcher_instance(return_value);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Dispatcher::getRouter(void)\n*/\nPHP_METHOD(yaf_dispatcher, getRouter) {\n\tyaf_dispatcher_object *dispatcher = Z_YAFDISPATCHEROBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tRETURN_ZVAL(&dispatcher->router, 1, 0);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Dispatcher::getRequest(void)\n*/\nPHP_METHOD(yaf_dispatcher, getRequest) {\n\tyaf_dispatcher_object *dispatcher = Z_YAFDISPATCHEROBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tRETURN_ZVAL(&dispatcher->request, 1, 0);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Dispatcher::getResponse(void)\n*/\nPHP_METHOD(yaf_dispatcher, getResponse) {\n\tyaf_dispatcher_object *dispatcher = Z_YAFDISPATCHEROBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tRETURN_ZVAL(&dispatcher->response, 1, 0);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Dispatcher::getApplication(void)\n*/\nPHP_METHOD(yaf_dispatcher, getApplication) {\n\tPHP_MN(yaf_application_app)(INTERNAL_FUNCTION_PARAM_PASSTHRU);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Dispatcher::throwException(bool $flag=0)\n*/\nPHP_METHOD(yaf_dispatcher, throwException) {\n\tzend_bool flag;\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"|b\", &flag) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (ZEND_NUM_ARGS()) {\n\t\tyaf_set_throw_exception(flag);\n\t\tRETURN_ZVAL(getThis(), 1, 0);\n\t} else {\n\t\tRETURN_BOOL(yaf_is_throw_exception());\n\t}\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Dispatcher::catchException(bool $flag=0)\n*/\nPHP_METHOD(yaf_dispatcher, catchException) {\n\tzend_bool flag;\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"|b\", &flag) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (ZEND_NUM_ARGS()) {\n\t\tyaf_set_catch_exception(flag);\n\t\tRETURN_ZVAL(getThis(), 1, 0);\n\t} else {\n\t\tRETURN_BOOL(yaf_is_catch_exception());\n\t}\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Dispatcher::autoRender(int $flag)\n */\nPHP_METHOD(yaf_dispatcher, autoRender) {\n\tzend_bool flag;\n\tyaf_dispatcher_object *dispatcher = Z_YAFDISPATCHEROBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"|b\", &flag) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (ZEND_NUM_ARGS()) {\n\t\tif (flag) {\n\t\t\tYAF_DISPATCHER_FLAGS(dispatcher) |= YAF_DISPATCHER_AUTO_RENDER;\n\t\t} else {\n\t\t\tYAF_DISPATCHER_FLAGS(dispatcher) &= ~YAF_DISPATCHER_AUTO_RENDER;\n\t\t}\n\n\t\tRETURN_ZVAL(getThis(), 1, 0);\n\t} else {\n\t\tRETURN_BOOL(YAF_DISPATCHER_FLAGS(dispatcher) & YAF_DISPATCHER_AUTO_RENDER);\n\t}\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Dispatcher::initView(string $tpl_dir, array $options = NULL)\n*/\nPHP_METHOD(yaf_dispatcher, initView) {\n\tzend_string *tpl_dir;\n\tzval *options = NULL;\n\tyaf_dispatcher_object *dispatcher;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S|z\", &tpl_dir, &options) == FAILURE) {\n\t\treturn;\n\t}\n\t\n\tdispatcher = Z_YAFDISPATCHEROBJ_P(getThis());\n\tif (yaf_dispatcher_init_view(dispatcher, tpl_dir, options)) {\n\t\tRETURN_ZVAL(&dispatcher->view, 1, 0);\n\t} else {\n\t\tRETURN_FALSE;\n\t}\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Dispatcher::setView(Yaf_View_Interface $view)\n*/\nPHP_METHOD(yaf_dispatcher, setView) {\n\tyaf_view_t *view;\n\tyaf_dispatcher_object *dispatcher = Z_YAFDISPATCHEROBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"O\", &view, yaf_view_interface_ce) == FAILURE) {\n\t\treturn;\n\t}\n\n\tzval_ptr_dtor(&dispatcher->view);\n\tZVAL_COPY(&dispatcher->view, view);\n\n\tRETURN_ZVAL(getThis(), 1, 0);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Dispatcher::getDefaultModule(void)\n*/\nPHP_METHOD(yaf_dispatcher, getDefaultModule) {\n\tyaf_application_object *app = yaf_application_instance();\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (app->default_module) {\n\t\tRETURN_STR_COPY(app->default_module);\n\t} else {\n\t\tRETURN_STR(YAF_KNOWN_STR(YAF_DEFAULT_MODULE));\n\t}\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Dispatcher::getDefaultController(void)\n*/\nPHP_METHOD(yaf_dispatcher, getDefaultController) {\n\tyaf_application_object *app = yaf_application_instance();\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (app->default_controller) {\n\t\tRETURN_STR_COPY(app->default_controller);\n\t} else {\n\t\tRETURN_STR(YAF_KNOWN_STR(YAF_DEFAULT_CONTROLLER));\n\t}\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Dispatcher::getDefaultAction(void)\n*/\nPHP_METHOD(yaf_dispatcher, getDefaultAction) {\n\tyaf_application_object *app = yaf_application_instance();\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (app->default_action) {\n\t\tRETURN_STR_COPY(app->default_action);\n\t} else {\n\t\tRETURN_STR(YAF_KNOWN_STR(YAF_DEFAULT_ACTION));\n\t}\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Dispatcher::setDefaultModule(string $name)\n*/\nPHP_METHOD(yaf_dispatcher, setDefaultModule) {\n\tzend_string *value;\n\tyaf_application_object *app = yaf_application_instance();\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S\", &value) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (!app) {\n\t\tRETURN_FALSE;\n\t}\n\n\tif (!yaf_application_is_module_name(value)) {\n\t\tyaf_trigger_error(YAF_ERR_TYPE_ERROR, \"There is no module '%s'\", ZSTR_VAL(value));\n\t\tRETURN_FALSE;\n\t}\n\n\tif (app->default_module) {\n\t\tzend_string_release(app->default_module);\n\t}\n\n\tapp->default_module = yaf_canonical_name(1, value);\n\n\tRETURN_ZVAL(getThis(), 1, 0);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Dispatcher::setDefaultController(string $name)\n*/\nPHP_METHOD(yaf_dispatcher, setDefaultController) {\n\tzend_string *value;\n\tyaf_application_object *app = yaf_application_instance();\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S\", &value) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (app == NULL) {\n\t\tRETURN_FALSE;\n\t}\n\n\tif (app->default_controller) {\n\t\tzend_string_release(app->default_controller);\n\t}\n\n\tapp->default_controller = yaf_canonical_name(1, value);\n\n\tRETURN_ZVAL(getThis(), 1, 0);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Dispatcher::setDefaultAction(string $name)\n*/\nPHP_METHOD(yaf_dispatcher, setDefaultAction) {\n\tzend_string *value;\n\tyaf_application_object *app = yaf_application_instance();\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S\", &value) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (app == NULL) {\n\t\tRETURN_FALSE;\n\t}\n\n\tif (app->default_action) {\n\t\tzend_string_release(app->default_action);\n\t}\n\n\tapp->default_action = yaf_canonical_name(0, value);\n\n\tRETURN_ZVAL(getThis(), 1, 0);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Dispatcher::setErrorHandler(string $callbacak[, int $error_types = E_ALL | E_STRICT ] )\n*/\nPHP_METHOD(yaf_dispatcher, setErrorHandler) {\n\tzval *callback, *error_type = NULL;\n\tzval params[2];\n\tzval function;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"z|z\", &callback, &error_type) == FAILURE) {\n\t\treturn;\n\t}\n\n\tZVAL_COPY(&params[0], callback);\n\tif (error_type) {\n\t\tZVAL_COPY(&params[1], error_type);\n\t}\n\n\tZVAL_STRING(&function, \"set_error_handler\");\n\tif (call_user_function(EG(function_table), NULL, &function, return_value, ZEND_NUM_ARGS(), params) == FAILURE) {\n\t\tzval_ptr_dtor(&params[0]);\n\t\tif (error_type) {\n\t\t\tzval_ptr_dtor(&params[1]);\n\t\t}\n\t\tzval_ptr_dtor(&function);\n\t\tphp_error_docref(NULL, E_WARNING, \"Call to set_error_handler failed\");\n\t\tRETURN_FALSE;\n\t}\n\n\tzval_ptr_dtor(return_value);\n\tzval_ptr_dtor(&function);\n\tzval_ptr_dtor(&params[0]);\n\tif (error_type) {\n\t\tzval_ptr_dtor(&params[1]);\n\t}\n\n\tRETURN_ZVAL(getThis(), 1, 0);\n}\n/* }}} */\n\n/** {{{ proto private Yaf_Dispatcher::__construct(void)\n*/\nPHP_METHOD(yaf_dispatcher, __construct) {\n}\n/* }}} */\n\n/** {{{ yaf_dispatcher_methods\n*/\nzend_function_entry yaf_dispatcher_methods[] = {\n\tPHP_ME(yaf_dispatcher, __construct, arginfo_class_Yaf_Dispatcher___construct,  ZEND_ACC_PRIVATE | ZEND_ACC_CTOR)\n\tPHP_ME(yaf_dispatcher, enableView, arginfo_class_Yaf_Dispatcher_enableView,  ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_dispatcher, disableView, arginfo_class_Yaf_Dispatcher_disableView,  ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_dispatcher, initView, arginfo_class_Yaf_Dispatcher_initView,  ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_dispatcher, setView, arginfo_class_Yaf_Dispatcher_setView,  ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_dispatcher, setRequest, arginfo_class_Yaf_Dispatcher_setRequest,  ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_dispatcher, setResponse, arginfo_class_Yaf_Dispatcher_setResponse,  ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_dispatcher, getApplication, arginfo_class_Yaf_Dispatcher_getApplication,  ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_dispatcher, getRouter, arginfo_class_Yaf_Dispatcher_getRouter,  ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_dispatcher, getResponse, arginfo_class_Yaf_Dispatcher_getResponse,  ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_dispatcher, getRequest, arginfo_class_Yaf_Dispatcher_getRequest,  ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_dispatcher, getDefaultModule, arginfo_class_Yaf_Dispatcher_getDefaultModule,  ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_dispatcher, getDefaultController, arginfo_class_Yaf_Dispatcher_getDefaultController,  ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_dispatcher, getDefaultAction, arginfo_class_Yaf_Dispatcher_getDefaultAction,  ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_dispatcher, setErrorHandler, arginfo_class_Yaf_Dispatcher_setErrorHandler,  ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_dispatcher, setDefaultModule, arginfo_class_Yaf_Dispatcher_setDefaultModule,  ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_dispatcher, setDefaultController, arginfo_class_Yaf_Dispatcher_setDefaultController,  ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_dispatcher, setDefaultAction, arginfo_class_Yaf_Dispatcher_setDefaultAction,  ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_dispatcher, returnResponse, arginfo_class_Yaf_Dispatcher_returnResponse,  ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_dispatcher, autoRender, arginfo_class_Yaf_Dispatcher_autoRender,  ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_dispatcher, flushInstantly, arginfo_class_Yaf_Dispatcher_flushInstantly,  ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_dispatcher, getInstance, arginfo_class_Yaf_Dispatcher_getInstance,  ZEND_ACC_PUBLIC | ZEND_ACC_STATIC)\n\tPHP_ME(yaf_dispatcher, dispatch, arginfo_class_Yaf_Dispatcher_dispatch,  ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_dispatcher, throwException, arginfo_class_Yaf_Dispatcher_throwException,  ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_dispatcher, catchException, arginfo_class_Yaf_Dispatcher_catchException,  ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_dispatcher, registerPlugin, arginfo_class_Yaf_Dispatcher_registerPlugin,  ZEND_ACC_PUBLIC)\n\t{NULL, NULL, NULL}\n};\n/* }}} */\n\n/** {{{ YAF_STARTUP_FUNCTION\n*/\nYAF_STARTUP_FUNCTION(dispatcher) {\n\tzend_class_entry ce;\n\n\tYAF_INIT_CLASS_ENTRY(ce, \"Yaf_Dispatcher\", \"Yaf\\\\Dispatcher\", yaf_dispatcher_methods);\n\n\tyaf_dispatcher_ce = zend_register_internal_class_ex(&ce, NULL);\n#if PHP_VERSION_ID < 80100\n\tyaf_dispatcher_ce->ce_flags |= ZEND_ACC_FINAL;\n\tyaf_dispatcher_ce->serialize = zend_class_serialize_deny;\n\tyaf_dispatcher_ce->unserialize = zend_class_unserialize_deny;\n#else\n\tyaf_dispatcher_ce->ce_flags |= ZEND_ACC_FINAL | ZEND_ACC_NOT_SERIALIZABLE;\n#endif\n\tmemcpy(&yaf_dispatcher_obj_handlers, zend_get_std_object_handlers(), sizeof(zend_object_handlers));\n\tyaf_dispatcher_obj_handlers.offset = XtOffsetOf(yaf_dispatcher_object, std);\n\tyaf_dispatcher_obj_handlers.free_obj = yaf_dispatcher_obj_free;\n\tyaf_dispatcher_obj_handlers.clone_obj = NULL;\n\tyaf_dispatcher_obj_handlers.get_gc = yaf_dispatcher_get_gc;\n\tyaf_dispatcher_obj_handlers.get_properties = yaf_dispatcher_get_properties;\n\n\treturn SUCCESS;\n}\n/* }}} */\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_dispatcher.h",
          "type": "blob",
          "size": 2.9501953125,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n */\n\n#ifndef PHP_YAF_DISPATCHER_H\n#define PHP_YAF_DISPATCHER_H\n\n#define YAF_ERROR_CONTROLLER                    \"Error\"\n#define YAF_ERROR_ACTION                        \"error\"\n\nextern zend_class_entry *yaf_dispatcher_ce;\n\n#define YAF_DISPATCHER_AUTO_RENDER       (1<<0)\n#define YAF_DISPATCHER_INSTANT_FLUSH     (1<<1)\n#define YAF_DISPATCHER_RETURN_RESPONSE   (1<<2)\n#define YAF_DISPATCHER_IN_EXCEPTION      (1<<7)\n\n#define YAF_DISPATCHER_FLAGS(d)   YAF_VAR_FLAGS((d)->request)\n\ntypedef struct {\n\tyaf_request_t      request;\n\tyaf_response_t     response;\n\tyaf_router_t       router;\n\tyaf_view_t         view;\n\tzend_array        *plugins;\n\tzend_array        *properties;\n\tzend_object        std;\n} yaf_dispatcher_object;\n\n#define Z_YAFDISPATCHEROBJ(zv)   (php_yaf_dispatcher_fetch_object(Z_OBJ(zv)))\n#define Z_YAFDISPATCHEROBJ_P(zv) Z_YAFDISPATCHEROBJ(*zv)\n\nstatic zend_always_inline yaf_dispatcher_object *php_yaf_dispatcher_fetch_object(zend_object *obj) {\n\treturn (yaf_dispatcher_object *)((char*)(obj) - XtOffsetOf(yaf_dispatcher_object, std));\n}\n\n#define YAF_PLUGIN_HANDLE(dispatcher, ev) \\\n\tdo { \\\n\t\tif ((dispatcher)->plugins) { \\\n\t\t\tzval _r, *_t;\\\n\t\t\tzend_function *_f; \\\n\t\t\tyaf_dispatcher_object *_d = (dispatcher); \\\n\t\t\tHashTable *_pls = _d->plugins; \\\n\t\t\tZEND_HASH_FOREACH_VAL(_pls, _t) { \\\n\t\t\t\t_f = zend_hash_find_ptr(&(Z_OBJCE_P(_t)->function_table), YAF_KNOWN_STR(ev)); \\\n\t\t\t\tZEND_ASSERT(_f); \\\n\t\t\t\tif (_f->type == ZEND_USER_FUNCTION) {\\\n\t\t\t        if (!yaf_call_user_method_with_2_arguments(Z_OBJ_P(_t), _f, &_d->request, &_d->response, &_r)) { \\\n\t\t\t\t\t\tYAF_EXCEPTION_HANDLE(_d); \\\n\t\t\t\t\t} \\\n\t\t\t\t} \\\n\t\t\t} ZEND_HASH_FOREACH_END(); \\\n\t\t} \\\n\t} while(0)\n\n\nvoid yaf_dispatcher_instance(yaf_dispatcher_t *this_ptr);\nyaf_response_t *yaf_dispatcher_dispatch(yaf_dispatcher_object *dispatcher);\n\nPHP_METHOD(yaf_application, app);\nPHP_FUNCTION(set_error_handler);\nYAF_STARTUP_FUNCTION(dispatcher);\n\n#endif\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_dispatcher.stub.php",
          "type": "blob",
          "size": 3.2119140625,
          "content": "<?php\n\n/** @generate-legacy-arginfo */\n\nfinal class Yaf_Dispatcher { \n\t/* constants */\n\n\t/* properties */\n\tstatic protected object $_instance = NULL;\n\n\tprotected object $_router = NULL;\n\tprotected object $_view = NULL;\n\tprotected object $_request = NULL;\n\tprotected array $_plugins = NULL;\n\tprotected bool $_auto_render = true;\n\tprotected bool $_return_response = false;\n\tprotected bool $_instantly_flush = true;\n\tprotected string $_default_module = NULL;\n\tprotected string $_default_controller = NULL;\n\tprotected string $_default_action = NULL;\n\n\t/* methods */\n\tprivate function __construct();\n\n\t/**\n\t * @return Yaf_Dispatcher|NULL\n\t */\n\tpublic function enableView():?object;\n\n\t/**\n\t * @return Yaf_Dispatcher|NULL\n\t */\n\tpublic function disableView():?object;\n\n\t/**\n\t * @return Yaf_View_Interface|NULL|FALSE\n\t */\n\tpublic function initView(string $templates_dir, array $options = NULL):object|null|false;\n\n\t/**\n\t * @param Yaf_View_Interface $view\n\t * @return Yaf_Dispatcher|NULL\n\t */\n\tpublic function setView(object $view):?object;\n\n\t/**\n\t * @param Yaf_Request_Abstract $request\n\t * @return Yaf_Dispatcher|NULL\n\t */\n\tpublic function setRequest(object $request):?object;\n\n\t/**\n\t * @param Yaf_Response_Abstract $response\n\t * @return Yaf_Dispatcher|NULL\n\t */\n\tpublic function setResponse(object $response):?object;\n\n\t/**\n\t * @return Yaf_Application|NULL\n\t */\n\tpublic function getApplication():?object;\n\n\t/**\n\t * @return Yaf_Router|NULL\n\t */\n\tpublic function getRouter():?object;\n\n\t/**\n\t * @return Yaf_Request_Abstract|NULL\n\t */\n\tpublic function getRequest():?object;\n\n\t/**\n\t * @return Yaf_Response_Abstract|NULL\n\t */\n\tpublic function getResponse():?object;\n\n\t/**\n\t * @return Yaf_Dispatcher|NULL|FALSE\n\t */\n\tpublic function setErrorHandler(mixed $callback, int $error_types = 0):object|null|false;\n\n\t/**\n\t * @return Yaf_Dispatcher|NULL|FALSE\n\t */\n\tpublic function setDefaultModule(string $module):object|null|false;\n\n\t/**\n\t * @return Yaf_Dispatcher|NULL|FALSE\n\t */\n\tpublic function setDefaultController(string $controller):object|null|false;\n\n\t/**\n\t * @return Yaf_Dispatcher|NULL|FALSE\n\t */\n\tpublic function setDefaultAction(string $action):object|null|false;\n\n\t/**\n\t * @return Yaf_Dispatcher|NULL|FALSE\n\t */\n\tpublic function returnResponse(bool $flag = false):object|null|false;\n\n\t/**\n\t * @return Yaf_Dispatcher|NULL|BOOL\n\t */\n\tpublic function autoRender(?bool $flag = NULL):object|null|bool;\n\n\t/**\n\t * @return Yaf_Dispatcher|NULL|BOOL\n\t */\n\tpublic function flushInstantly(?bool $flag = NULL):object|null|bool;\n\n\t/**\n\t * @param Yaf_Request_Abstract $request\n\t * @return Yaf_Response_Abstract|NULL|FALSE\n\t */\n\tpublic function dispatch(object $request):object|null|false;\n\n\t/**\n\t * @return Yaf_Dispatcher|NULL|BOOL\n\t */\n\tpublic function throwException(?bool $flag = NULL):object|null|bool;\n\n\t/**\n\t * @return Yaf_Dispatcher|NULL|BOOL\n\t */\n\tpublic function catchException(?bool $flag = NULL):object|null|bool;\n\n\t/**\n\t * @param Yaf_Plugin_Abstract $plugin\n\t * @return Yaf_Dispatcher|NULL|FALSE\n\t */\n\tpublic function registerPlugin(object $plugin):object|null|false;\n\n\tpublic function getDefaultModule():?string;\n\tpublic function getDefaultController():?string;\n\tpublic function getDefaultAction():?string;\n\n\t/**\n\t * @return Yaf_Dispatcher|NULL\n\t */\n\tpublic static function getInstance():?object;\n}\n"
        },
        {
          "name": "yaf_dispatcher_arginfo.h",
          "type": "blob",
          "size": 3.8701171875,
          "content": "/* This is a generated file, edit the .stub.php file instead.\n * Stub hash: c0fe3d13422654adb5be158a281a4a16d861f00d */\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Dispatcher___construct, 0, 0, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Dispatcher_enableView, 0, 0, IS_OBJECT, 1)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Dispatcher_disableView arginfo_class_Yaf_Dispatcher_enableView\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX(arginfo_class_Yaf_Dispatcher_initView, 0, 1, MAY_BE_OBJECT|MAY_BE_NULL|MAY_BE_FALSE)\n\tZEND_ARG_TYPE_INFO(0, templates_dir, IS_STRING, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, options, IS_ARRAY, 0, \"NULL\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Dispatcher_setView, 0, 1, IS_OBJECT, 1)\n\tZEND_ARG_TYPE_INFO(0, view, IS_OBJECT, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Dispatcher_setRequest, 0, 1, IS_OBJECT, 1)\n\tZEND_ARG_TYPE_INFO(0, request, IS_OBJECT, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Dispatcher_setResponse, 0, 1, IS_OBJECT, 1)\n\tZEND_ARG_TYPE_INFO(0, response, IS_OBJECT, 0)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Dispatcher_getApplication arginfo_class_Yaf_Dispatcher_enableView\n\n#define arginfo_class_Yaf_Dispatcher_getRouter arginfo_class_Yaf_Dispatcher_enableView\n\n#define arginfo_class_Yaf_Dispatcher_getRequest arginfo_class_Yaf_Dispatcher_enableView\n\n#define arginfo_class_Yaf_Dispatcher_getResponse arginfo_class_Yaf_Dispatcher_enableView\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX(arginfo_class_Yaf_Dispatcher_setErrorHandler, 0, 1, MAY_BE_OBJECT|MAY_BE_NULL|MAY_BE_FALSE)\n\tZEND_ARG_TYPE_INFO(0, callback, IS_MIXED, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, error_types, IS_LONG, 0, \"0\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX(arginfo_class_Yaf_Dispatcher_setDefaultModule, 0, 1, MAY_BE_OBJECT|MAY_BE_NULL|MAY_BE_FALSE)\n\tZEND_ARG_TYPE_INFO(0, module, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX(arginfo_class_Yaf_Dispatcher_setDefaultController, 0, 1, MAY_BE_OBJECT|MAY_BE_NULL|MAY_BE_FALSE)\n\tZEND_ARG_TYPE_INFO(0, controller, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX(arginfo_class_Yaf_Dispatcher_setDefaultAction, 0, 1, MAY_BE_OBJECT|MAY_BE_NULL|MAY_BE_FALSE)\n\tZEND_ARG_TYPE_INFO(0, action, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX(arginfo_class_Yaf_Dispatcher_returnResponse, 0, 0, MAY_BE_OBJECT|MAY_BE_NULL|MAY_BE_FALSE)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, flag, _IS_BOOL, 0, \"false\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX(arginfo_class_Yaf_Dispatcher_autoRender, 0, 0, MAY_BE_OBJECT|MAY_BE_NULL|MAY_BE_BOOL)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, flag, _IS_BOOL, 1, \"NULL\")\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Dispatcher_flushInstantly arginfo_class_Yaf_Dispatcher_autoRender\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX(arginfo_class_Yaf_Dispatcher_dispatch, 0, 1, MAY_BE_OBJECT|MAY_BE_NULL|MAY_BE_FALSE)\n\tZEND_ARG_TYPE_INFO(0, request, IS_OBJECT, 0)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Dispatcher_throwException arginfo_class_Yaf_Dispatcher_autoRender\n\n#define arginfo_class_Yaf_Dispatcher_catchException arginfo_class_Yaf_Dispatcher_autoRender\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX(arginfo_class_Yaf_Dispatcher_registerPlugin, 0, 1, MAY_BE_OBJECT|MAY_BE_NULL|MAY_BE_FALSE)\n\tZEND_ARG_TYPE_INFO(0, plugin, IS_OBJECT, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Dispatcher_getDefaultModule, 0, 0, IS_STRING, 1)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Dispatcher_getDefaultController arginfo_class_Yaf_Dispatcher_getDefaultModule\n\n#define arginfo_class_Yaf_Dispatcher_getDefaultAction arginfo_class_Yaf_Dispatcher_getDefaultModule\n\n#define arginfo_class_Yaf_Dispatcher_getInstance arginfo_class_Yaf_Dispatcher_enableView\n"
        },
        {
          "name": "yaf_dispatcher_legacy_arginfo.h",
          "type": "blob",
          "size": 2.8466796875,
          "content": "/* This is a generated file, edit the .stub.php file instead.\n * Stub hash: c0fe3d13422654adb5be158a281a4a16d861f00d */\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Dispatcher___construct, 0, 0, 0)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Dispatcher_enableView arginfo_class_Yaf_Dispatcher___construct\n\n#define arginfo_class_Yaf_Dispatcher_disableView arginfo_class_Yaf_Dispatcher___construct\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Dispatcher_initView, 0, 0, 1)\n\tZEND_ARG_INFO(0, templates_dir)\n\tZEND_ARG_INFO(0, options)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Dispatcher_setView, 0, 0, 1)\n\tZEND_ARG_INFO(0, view)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Dispatcher_setRequest, 0, 0, 1)\n\tZEND_ARG_INFO(0, request)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Dispatcher_setResponse, 0, 0, 1)\n\tZEND_ARG_INFO(0, response)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Dispatcher_getApplication arginfo_class_Yaf_Dispatcher___construct\n\n#define arginfo_class_Yaf_Dispatcher_getRouter arginfo_class_Yaf_Dispatcher___construct\n\n#define arginfo_class_Yaf_Dispatcher_getRequest arginfo_class_Yaf_Dispatcher___construct\n\n#define arginfo_class_Yaf_Dispatcher_getResponse arginfo_class_Yaf_Dispatcher___construct\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Dispatcher_setErrorHandler, 0, 0, 1)\n\tZEND_ARG_INFO(0, callback)\n\tZEND_ARG_INFO(0, error_types)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Dispatcher_setDefaultModule, 0, 0, 1)\n\tZEND_ARG_INFO(0, module)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Dispatcher_setDefaultController, 0, 0, 1)\n\tZEND_ARG_INFO(0, controller)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Dispatcher_setDefaultAction, 0, 0, 1)\n\tZEND_ARG_INFO(0, action)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Dispatcher_returnResponse, 0, 0, 0)\n\tZEND_ARG_INFO(0, flag)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Dispatcher_autoRender arginfo_class_Yaf_Dispatcher_returnResponse\n\n#define arginfo_class_Yaf_Dispatcher_flushInstantly arginfo_class_Yaf_Dispatcher_returnResponse\n\n#define arginfo_class_Yaf_Dispatcher_dispatch arginfo_class_Yaf_Dispatcher_setRequest\n\n#define arginfo_class_Yaf_Dispatcher_throwException arginfo_class_Yaf_Dispatcher_returnResponse\n\n#define arginfo_class_Yaf_Dispatcher_catchException arginfo_class_Yaf_Dispatcher_returnResponse\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Dispatcher_registerPlugin, 0, 0, 1)\n\tZEND_ARG_INFO(0, plugin)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Dispatcher_getDefaultModule arginfo_class_Yaf_Dispatcher___construct\n\n#define arginfo_class_Yaf_Dispatcher_getDefaultController arginfo_class_Yaf_Dispatcher___construct\n\n#define arginfo_class_Yaf_Dispatcher_getDefaultAction arginfo_class_Yaf_Dispatcher___construct\n\n#define arginfo_class_Yaf_Dispatcher_getInstance arginfo_class_Yaf_Dispatcher___construct\n"
        },
        {
          "name": "yaf_exception.c",
          "type": "blob",
          "size": 6.29296875,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include \"php.h\"\n#include \"Zend/zend_exceptions.h\"\n\n#include \"php_yaf.h\"\n#include \"yaf_application.h\"\n#include \"yaf_namespace.h\"\n#include \"yaf_exception.h\"\n\nzend_class_entry *yaf_ce_RuntimeException;\nzend_class_entry *yaf_exception_ce;\n\nzend_class_entry *yaf_buildin_exceptions[YAF_MAX_BUILDIN_EXCEPTION];\n\nZEND_COLD void yaf_trigger_error(int type, char *format, ...) /* {{{ */ {\n\tva_list args;\n\n\tif (yaf_is_throw_exception()) {\n\t\tchar buf[256];\n\t\tva_start(args, format);\n\t\tvsnprintf(buf, sizeof(buf), format, args);\n\t\tva_end(args);\n\t\tyaf_throw_exception(type, buf);\n\t} else {\n\t\tzend_string *msg;\n\t\tyaf_application_object *app = yaf_application_instance();\n\n\t\tva_start(args, format);\n\t\tmsg = vstrpprintf(0, format, args);\n\t\tva_end(args);\n\n\t\tif (app) {\n\t\t\tapp->err_no = type;\n\t\t\tapp->err_msg = msg;\n\t\t}\n\t\tphp_error_docref(NULL, E_RECOVERABLE_ERROR, \"%s\", ZSTR_VAL(msg));\n\t}\n}\n/* }}} */\n\nzend_class_entry * yaf_get_exception_base(int root) /* {{{ */ {\n#if can_handle_soft_dependency_on_SPL && defined(HAVE_SPL) && ((PHP_MAJOR_VERSION > 5) || (PHP_MAJOR_VERSION == 5 && PHP_MINOR_VERSION >= 1))\n\tif (!root) {\n\t\tif (!spl_ce_RuntimeException) {\n\t\t\tzend_class_entry **pce;\n\n\t\t\tif (zend_hash_find(CG(class_table), \"runtimeexception\", sizeof(\"RuntimeException\"), (void **) &pce) == SUCCESS) {\n\t\t\t\tspl_ce_RuntimeException = *pce;\n\t\t\t\treturn *pce;\n\t\t\t}\n\t\t} else {\n\t\t\treturn spl_ce_RuntimeException;\n\t\t}\n\t}\n#endif\n\n\treturn zend_exception_get_default();\n}\n/* }}} */\n\nZEND_COLD void yaf_throw_exception(long code, char *message) /* {{{ */ {\n\tzend_class_entry *base_exception = yaf_exception_ce;\n\n\tif ((code & YAF_ERR_BASE) == YAF_ERR_BASE\n\t\t\t&& yaf_buildin_exceptions[YAF_EXCEPTION_OFFSET(code)]) {\n\t\tbase_exception = yaf_buildin_exceptions[YAF_EXCEPTION_OFFSET(code)];\n\t}\n\n\tzend_throw_exception(base_exception, message, code);\n}\n/* }}} */\n\n/** {{{ yaf_exception_methods\n*/\nzend_function_entry yaf_exception_methods[] = {\n\t{NULL, NULL, NULL}\n};\n/* }}} */\n\n/** {{{ YAF_STARTUP_FUNCTION\n*/\nYAF_STARTUP_FUNCTION(exception) {\n\tzend_class_entry ce;\n\tzend_class_entry startup_ce;\n\tzend_class_entry route_ce;\n\tzend_class_entry dispatch_ce;\n\tzend_class_entry loader_ce;\n\tzend_class_entry module_notfound_ce;\n\tzend_class_entry controller_notfound_ce;\n\tzend_class_entry action_notfound_ce;\n\tzend_class_entry view_notfound_ce;\n\tzend_class_entry type_ce;\n\n\tYAF_INIT_CLASS_ENTRY(ce, \"Yaf_Exception\", \"Yaf\\\\Exception\", yaf_exception_methods);\n\tyaf_exception_ce = zend_register_internal_class_ex(&ce, yaf_get_exception_base(0));\n\tzend_declare_property_null(yaf_exception_ce, ZEND_STRL(\"message\"), \tZEND_ACC_PROTECTED);\n\tzend_declare_property_long(yaf_exception_ce, ZEND_STRL(\"code\"), 0,\tZEND_ACC_PROTECTED);\n\tzend_declare_property_null(yaf_exception_ce, ZEND_STRL(\"previous\"),  ZEND_ACC_PROTECTED);\n\n\tYAF_INIT_CLASS_ENTRY(startup_ce, \"Yaf_Exception_StartupError\", \"Yaf\\\\Exception\\\\StartupError\", NULL);\n\tyaf_buildin_exceptions[YAF_EXCEPTION_OFFSET(YAF_ERR_STARTUP_FAILED)] = zend_register_internal_class_ex(&startup_ce, yaf_exception_ce);\n\n\tYAF_INIT_CLASS_ENTRY(route_ce, \"Yaf_Exception_RouterFailed\", \"Yaf\\\\Exception\\\\RouterFailed\", NULL);\n\tyaf_buildin_exceptions[YAF_EXCEPTION_OFFSET(YAF_ERR_ROUTE_FAILED)] = zend_register_internal_class_ex(&route_ce, yaf_exception_ce);\n\n\tYAF_INIT_CLASS_ENTRY(dispatch_ce, \"Yaf_Exception_DispatchFailed\", \"Yaf\\\\Exception\\\\DispatchFailed\", NULL);\n\tyaf_buildin_exceptions[YAF_EXCEPTION_OFFSET(YAF_ERR_DISPATCH_FAILED)] = zend_register_internal_class_ex(&dispatch_ce, yaf_exception_ce);\n\n\tYAF_INIT_CLASS_ENTRY(loader_ce, \"Yaf_Exception_LoadFailed\", \"Yaf\\\\Exception\\\\LoadFailed\", NULL);\n\tyaf_buildin_exceptions[YAF_EXCEPTION_OFFSET(YAF_ERR_AUTOLOAD_FAILED)] = zend_register_internal_class_ex(&loader_ce, yaf_exception_ce);\n\n\tYAF_INIT_CLASS_ENTRY(module_notfound_ce, \"Yaf_Exception_LoadFailed_Module\", \"Yaf\\\\Exception\\\\LoadFailed\\\\Module\", NULL);\n\tyaf_buildin_exceptions[YAF_EXCEPTION_OFFSET(YAF_ERR_NOTFOUND_MODULE)] = zend_register_internal_class_ex(&module_notfound_ce, yaf_buildin_exceptions[YAF_EXCEPTION_OFFSET(YAF_ERR_AUTOLOAD_FAILED)]);\n\n\tYAF_INIT_CLASS_ENTRY(controller_notfound_ce, \"Yaf_Exception_LoadFailed_Controller\", \"Yaf\\\\Exception\\\\LoadFailed\\\\Controller\", NULL);\n\tyaf_buildin_exceptions[YAF_EXCEPTION_OFFSET(YAF_ERR_NOTFOUND_CONTROLLER)] = zend_register_internal_class_ex(&controller_notfound_ce, yaf_buildin_exceptions[YAF_EXCEPTION_OFFSET(YAF_ERR_AUTOLOAD_FAILED)]);\n\n\tYAF_INIT_CLASS_ENTRY(action_notfound_ce, \"Yaf_Exception_LoadFailed_Action\", \"Yaf\\\\Exception\\\\LoadFailed\\\\Action\", NULL);\n\tyaf_buildin_exceptions[YAF_EXCEPTION_OFFSET(YAF_ERR_NOTFOUND_ACTION)] = zend_register_internal_class_ex(&action_notfound_ce, yaf_buildin_exceptions[YAF_EXCEPTION_OFFSET(YAF_ERR_AUTOLOAD_FAILED)]);\n\n\tYAF_INIT_CLASS_ENTRY(view_notfound_ce, \"Yaf_Exception_LoadFailed_View\", \"Yaf\\\\Exception\\\\LoadFailed\\\\View\", NULL);\n\tyaf_buildin_exceptions[YAF_EXCEPTION_OFFSET(YAF_ERR_NOTFOUND_VIEW)] = zend_register_internal_class_ex(&view_notfound_ce, yaf_buildin_exceptions[YAF_EXCEPTION_OFFSET(YAF_ERR_AUTOLOAD_FAILED)]);\n\n\tYAF_INIT_CLASS_ENTRY(type_ce, \"Yaf_Exception_TypeError\", \"Yaf\\\\Exception\\\\TypeError\", NULL);\n\tyaf_buildin_exceptions[YAF_EXCEPTION_OFFSET(YAF_ERR_TYPE_ERROR)] = zend_register_internal_class_ex(&type_ce, yaf_exception_ce);\n\n\treturn SUCCESS;\n}\n/* }}} */\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_exception.h",
          "type": "blob",
          "size": 2.4541015625,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifndef YAF_EXCEPTION_H\n#define YAF_EXCEPTION_H\n\n#define YAF_MAX_BUILDIN_EXCEPTION\t10\n\n#define YAF_ERR_BASE \t\t\t\t512\n#define YAF_UERR_BASE\t\t\t\t1024\n#define YAF_ERR_MASK\t\t\t\t127\n\n#define YAF_ERR_STARTUP_FAILED \t\t512\n#define YAF_ERR_ROUTE_FAILED \t\t513\n#define YAF_ERR_DISPATCH_FAILED \t514\n#define YAF_ERR_NOTFOUND_MODULE \t515\n#define YAF_ERR_NOTFOUND_CONTROLLER 516\n#define YAF_ERR_NOTFOUND_ACTION \t517\n#define YAF_ERR_NOTFOUND_VIEW \t\t518\n#define YAF_ERR_CALL_FAILED\t\t\t519\n#define YAF_ERR_AUTOLOAD_FAILED \t520\n#define YAF_ERR_TYPE_ERROR\t\t\t521\n#define YAF_ERR_ACCESS_ERROR\t\t522\n\n#define YAF_EXCEPTION_OFFSET(x) (x & YAF_ERR_MASK)\n\n#define YAF_CORRESPOND_ERROR(x) (x>>9L)\n\n#define YAF_EXCEPTION_HANDLE_EX(dispatcher, ret) \\\n\tif (UNEXPECTED(EG(exception))) { \\\n\t\tif (catch_exception) { \\\n\t\t\tyaf_dispatcher_exception_handler(dispatcher); \\\n\t\t} \\\n\t\tret \\\n\t}\n\n#define YAF_EXCEPTION_HANDLE(dispatcher)       YAF_EXCEPTION_HANDLE_EX(dispatcher, return NULL;)\n\n#define YAF_EXCEPTION_ERASE_EXCEPTION() \\\n\tdo { \\\n\t\tEG(current_execute_data)->opline = EG(opline_before_exception); \\\n\t} while(0)\n\nextern zend_class_entry *yaf_ce_RuntimeException;\nextern zend_class_entry *yaf_exception_ce;\nextern zend_class_entry *yaf_buildin_exceptions[YAF_MAX_BUILDIN_EXCEPTION];\nvoid yaf_trigger_error(int type, char *format, ...);\nvoid yaf_throw_exception(long code, char *message);\n\nYAF_STARTUP_FUNCTION(exception);\n\n#endif\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_loader.c",
          "type": "blob",
          "size": 29.533203125,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include \"php.h\"\n#include \"Zend/zend_interfaces.h\" /* for zend_class_serialize_deny */\n#include \"ext/standard/php_string.h\" /* php_trim */\n\n#include \"php_yaf.h\"\n#include \"yaf_application.h\"\n#include \"yaf_namespace.h\"\n#include \"yaf_request.h\"\n#include \"yaf_loader.h\"\n#include \"yaf_exception.h\"\n\n#define YAF_LOADER_CONTROLLER\t\t\"Controller\"\n#define YAF_LOADER_MODEL\t\t\t\"Model\"\n#define YAF_LOADER_PLUGIN\t\t\t\"Plugin\"\n#define YAF_LOADER_RESERVERD\t\t\"Yaf_\"\n\n#define YAF_CLASS_NAME_NORMAL       0\n#define YAF_CLASS_NAME_MODEL        1\n#define YAF_CLASS_NAME_PLUGIN       2\n#define YAF_CLASS_NAME_CONTROLLER   3\n\nzend_class_entry *yaf_loader_ce;\nstatic zend_object_handlers yaf_loader_obj_handlers;\n\n/** {{{ ARG_INFO\n */\nZEND_BEGIN_ARG_INFO_EX(yaf_loader_void_arginfo, 0, 0, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(yaf_loader_getinstance_arginfo, 0, 0, 0)\n    ZEND_ARG_INFO(0, local_library_path)\n    ZEND_ARG_INFO(0, global_library_path)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(yaf_loader_autoloader_arginfo, 0, 0, 1)\n    ZEND_ARG_INFO(0, class_name)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(yaf_loader_regnamespace_arginfo, 0, 0, 1)\n    ZEND_ARG_INFO(0, namespace)\n    ZEND_ARG_INFO(0, path)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(yaf_loader_islocalname_arginfo, 0, 0, 1)\n    ZEND_ARG_INFO(0, class_name)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(yaf_loader_import_arginfo, 0, 0, 1)\n    ZEND_ARG_INFO(0, file)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(yaf_loader_setlib_arginfo, 0, 0, 1)\n    ZEND_ARG_INFO(0, library_path)\n    ZEND_ARG_INFO(0, is_global)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(yaf_loader_getlib_arginfo, 0, 0, 0)\n    ZEND_ARG_INFO(0, is_global)\nZEND_END_ARG_INFO()\n/* }}} */\n\nstatic void yaf_loader_obj_free(zend_object *object) /* {{{ */ {\n\tyaf_loader_object *loader = (yaf_loader_object*)object;\n\n\tif (loader->library) {\n\t\tzend_string_release(loader->library);\n\t}\n\tif (loader->glibrary) {\n\t\tzend_string_release(loader->glibrary);\n\t}\n\tif (GC_DELREF(YAF_LOADER_NAMESPACES(loader)) == 0) {\n\t\tGC_REMOVE_FROM_BUFFER(YAF_LOADER_NAMESPACES(loader));\n\t\tzend_array_destroy(YAF_LOADER_NAMESPACES(loader));\n\t}\n\tif (loader->properties) {\n\t\tif (GC_DELREF(loader->properties) == 0) {\n\t\t\tGC_REMOVE_FROM_BUFFER(loader->properties);\n\t\t\tzend_array_destroy(loader->properties);\n\t\t}\n\t}\n\n\tzend_object_std_dtor(object);\n}\n/* }}} */\n\nint yaf_loader_register(yaf_loader_t *loader) /* {{{ */ {\n\tzval autoload, function, method, ret;\n\n\tarray_init(&autoload);\n\n    ZVAL_STRING(&method, YAF_AUTOLOAD_FUNC_NAME);\n\tZ_ADDREF_P(loader);\n\tzend_hash_next_index_insert(Z_ARRVAL(autoload), loader);\n\tzend_hash_next_index_insert(Z_ARRVAL(autoload), &method);\n\n\tZVAL_STRING(&function, YAF_SPL_AUTOLOAD_REGISTER_NAME);\n\n\tdo {\n\t\tzend_fcall_info fci = {\n\t\t\tsizeof(fci),\n#if PHP_VERSION_ID < 70100\n\t\t\tEG(function_table),\n#endif\n\t\t\tfunction,\n#if PHP_VERSION_ID < 70100\n\t\t\tNULL,\n#endif\n\t\t\t&ret,\n\t\t\t&autoload,\n\t\t\tNULL,\n\t\t\t1,\n#if PHP_VERSION_ID < 80000\n            1\n#else\n           NULL\n#endif\n\t\t};\n\n\t\tif (zend_call_function(&fci, NULL) == FAILURE) {\n\t\t\tzval_ptr_dtor(&function);\n\t\t\tzval_ptr_dtor(&autoload);\n\t\t\tphp_error_docref(NULL,\n\t\t\t\t\tE_WARNING,\n\t\t\t\t\t\"Unable to register autoload function %s\",\n\t\t\t\t\tYAF_AUTOLOAD_FUNC_NAME);\n\t\t\treturn 0;\n\t\t}\n\t\tzval_ptr_dtor(&function);\n\t\tzval_ptr_dtor(&autoload);\n\t} while (0);\n\treturn 1;\n}\n/* }}} */\n\nvoid yaf_loader_set_global_library_path(yaf_loader_object *loader, zend_string *global_library) /* {{{ */ {\n\tif (EXPECTED(loader->glibrary)) {\n\t\tzend_string_release(loader->glibrary);\n\t}\n\tloader->glibrary = zend_string_copy(global_library);\n}\n/* }}} */\n\nstatic zend_array *yaf_loader_get_namespaces(yaf_loader_object *loader) /* {{{ */ {\n\tzval *val, rv;\n\tHashTable *ht;\n\tzend_string *name;\n\n\tALLOC_HASHTABLE(ht);\n\tzend_hash_init(ht, zend_hash_num_elements(YAF_LOADER_NAMESPACES(loader)), NULL, ZVAL_PTR_DTOR, 0);\n\n\tZEND_HASH_FOREACH_STR_KEY_VAL(YAF_LOADER_NAMESPACES(loader), name, val) {\n\t\tZEND_ASSERT(name);\n\t\tif (Z_TYPE_P(val) == IS_NULL) {\n\t\t\tZVAL_STR_COPY(&rv, name);\n\t\t\tzend_hash_next_index_insert(ht, &rv);\n\t\t} else {\n\t\t\tzend_hash_update(ht, name, val);\n\t\t\tZ_TRY_ADDREF_P(val);\n\t\t}\n\t} ZEND_HASH_FOREACH_END();\n\n\treturn ht;\n}\n/* }}} */\n\nstatic HashTable *yaf_loader_get_properties(yaf_object *obj) /* {{{ */ {\n\tzval rv;\n\tHashTable *ht;\n#if PHP_VERSION_ID < 80000\n\tyaf_loader_object *loader = Z_YAFLOADEROBJ_P(obj);\n#else\n\tyaf_loader_object *loader = (yaf_loader_object*)(obj);\n#endif\n\n\tif (!loader->properties) {\n\t\tALLOC_HASHTABLE(loader->properties);\n\t\tzend_hash_init(loader->properties, 4, NULL, ZVAL_PTR_DTOR, 0);\n\t\tYAF_ALLOW_VIOLATION(loader->properties);;\n\t}\n\n\tht = loader->properties;\n\n\tZVAL_STR_COPY(&rv, loader->library);\n\tzend_hash_str_update(ht, \"library:protected\", sizeof(\"library:protected\") - 1, &rv);\n\tif (loader->glibrary) {\n\t\tZVAL_STR_COPY(&rv, loader->glibrary);\n\t} else {\n\t\tZVAL_NULL(&rv);\n\t}\n\tzend_hash_str_update(ht, \"global_library:protected\", sizeof(\"global_library:protected\") - 1, &rv);\n\t\n\tZVAL_ARR(&rv, yaf_loader_get_namespaces(loader));\n\tzend_hash_str_update(ht, \"namespace:protected\", sizeof(\"namespace:protected\") - 1, &rv);\n\n\tZVAL_BOOL(&rv, yaf_loader_use_spl_autoload(loader));\n\tzend_hash_str_update(ht, \"use_spl_autoload:protected\", sizeof(\"use_spl_autoload:protected\") - 1, &rv);\n\n\tZVAL_BOOL(&rv, yaf_loader_is_lowcase_path(loader));\n\tzend_hash_str_update(ht, \"lowercase_path:protected\", sizeof(\"lowercase_path:protected\") - 1, &rv);\n\n\tZVAL_BOOL(&rv, yaf_loader_is_name_suffix(loader));\n\tzend_hash_str_update(ht, \"is_name_suffix:protected\", sizeof(\"is_name_suffix:protected\") - 1, &rv);\n\n\tZVAL_BOOL(&rv, yaf_loader_has_name_separator(loader));\n\tzend_hash_str_update(ht, \"has_name_seperator:protected\", sizeof(\"has_name_seperator:protected\") - 1, &rv);\n\n\treturn ht;\n}\n/* }}} */\n\nvoid yaf_loader_reset(yaf_loader_object *loader) /* {{{ */ {\n\t/* for back-compatibility of change of YAF_G after loader in initialized only */\n\tYAF_LOADER_FLAGS(loader) = (zend_uchar)YAF_FLAGS();\n}\n/* }}} */\n\nyaf_loader_t *yaf_loader_instance(zend_string *library_path) /* {{{ */ {\n\tyaf_loader_object *loader;\n\tyaf_loader_t *instance = &YAF_G(loader);\n\n\tif (EXPECTED(IS_OBJECT == Z_TYPE_P(instance))) {\n\t\treturn instance;\n\t}\n\n\tloader = emalloc(sizeof(yaf_loader_object));\n\tzend_object_std_init(&loader->std, yaf_loader_ce);\n\tloader->std.handlers = &yaf_loader_obj_handlers;\n\n\t/* yaf_loader_reset(loader); */\n\tYAF_LOADER_FLAGS(loader) = (zend_uchar)YAF_FLAGS();\n\tif (library_path) {\n\t\tloader->library = zend_string_copy(library_path);\n\t} else {\n\t\tloader->library = ZSTR_EMPTY_ALLOC();\n\t}\n\n\tif (*YAF_G(global_library)) {\n\t\tloader->glibrary = zend_string_init(YAF_G(global_library), strlen(YAF_G(global_library)), 0);\n\t} else {\n\t\tloader->glibrary = NULL;\n\t}\n\n\tZVAL_OBJ(&YAF_G(loader), &loader->std);\n\tif (UNEXPECTED(!yaf_loader_register(&YAF_G(loader)))) {\n\t\tphp_error_docref(NULL, E_WARNING, \"Failed to register autoload function\");\n\t}\n\t\n\tALLOC_HASHTABLE(YAF_LOADER_NAMESPACES(loader));\n\tzend_hash_init(YAF_LOADER_NAMESPACES(loader), 8, NULL, ZVAL_PTR_DTOR, 0);\n\tYAF_ALLOW_VIOLATION(YAF_LOADER_NAMESPACES(loader));\n\n\tloader->properties = NULL;\n\n\treturn &YAF_G(loader);\n}\n/* }}} */\n\nint yaf_loader_register_namespace(yaf_loader_object *loader, zend_string *class_name, zend_string *path) /* {{{ */ {\n\tzval *entry, rv;\n\tHashTable *target;\n\tchar *delim;\n\tchar *name = ZSTR_VAL(class_name);\n\tuint32_t len = ZSTR_LEN(class_name);\n\n\tZVAL_NULL(&rv);\n\ttarget = YAF_LOADER_NAMESPACES(loader);\n\n\tif (*name == '\\\\') {\n\t\tname++;\n\t\tlen--;\n\t}\n\tif (((delim = memchr(name, '\\\\', len)) || (delim = memchr(name, '_', len)))) {\n\t\tdo {\nloop:\n\t\t\tif ((entry = zend_hash_str_find(target, name, delim - name)) == NULL) {\n\t\t\t\tentry = zend_hash_str_update(target, name, delim - name, &rv);\n\t\t\t\tarray_init(entry);\n\t\t\t} else if (UNEXPECTED(Z_TYPE_P(entry) != IS_ARRAY)) {\n\t\t\t\tzval_ptr_dtor(entry);\n\t\t\t\tarray_init(entry);\n\t\t\t}\n\t\t\tlen -= delim - name + 1;\n\t\t\tname = delim + 1;\n\t\t\ttarget = Z_ARRVAL_P(entry);\n\t\t\tif (((delim = memchr(name, '\\\\', len)) || (delim = memchr(name, '_', len)))) {\n\t\t\t\tgoto loop;\n\t\t\t} else {\n\t\t\t\tentry = zend_hash_str_update(target, name, len, &rv);\n\t\t\t}\n\t\t} while (0);\n\t} else {\n\t\tentry = zend_hash_str_update(YAF_LOADER_NAMESPACES(loader), name, len, &rv);\n\t}\n\n\tif (path) {\n\t\tZVAL_STR_COPY(entry, path);\n\t}\n\n\treturn 1;\n}\n/* }}} */\n\nint yaf_loader_register_namespace_multi(yaf_loader_object *loader, zval *namespaces) /* {{{ */ {\n\tzval *pzval;\n\tHashTable *ht;\n\tzend_string *key;\n\n\tht = Z_ARRVAL_P(namespaces);\n\tZEND_HASH_FOREACH_STR_KEY_VAL(ht, key, pzval) {\n\t\tif (key == NULL) {\n\t\t\tif (IS_STRING == Z_TYPE_P(pzval)) {\n\t\t\t\tyaf_loader_register_namespace(loader, Z_STR_P(pzval), NULL);\n\t\t\t}\n\t\t} else {\n\t\t\tif (IS_STRING == Z_TYPE_P(pzval)) {\n\t\t\t\tyaf_loader_register_namespace(loader, key, Z_STR_P(pzval));\n\t\t\t} else {\n\t\t\t\tyaf_loader_register_namespace(loader, key, NULL);\n\t\t\t}\n\t\t}\n\t} ZEND_HASH_FOREACH_END();\n\n\treturn 1;\n}\n/* }}} */\n\nstatic void yaf_loader_sanitize_path(char *name, uint32_t len) /* {{{ */ {\n\tyaf_replace_chr(name, len, '_', DEFAULT_SLASH);\n}\n/* }}} */\n\nstatic void yaf_loader_sanitize_name(char *name, uint32_t len, char *buf) /* {{{ */ {\n\tmemcpy(buf, name, len);\n\t/* replace all '\\' to '_' */\n\tyaf_replace_chr(buf, len, '\\\\', '_');\n}\n/* }}} */\n\nstatic zend_string *yaf_loader_resolve_namespace(yaf_loader_object *loader, const char *class_name, uint32_t *name_len) /* {{{ */ {\n\tzval *name;\n\tconst char *delim;\n\tuint32_t len = *name_len;\n\tHashTable *target = YAF_LOADER_NAMESPACES(loader);\n\n\tif ((delim = memchr(class_name, '_', len))) {\n\t\tdo {\n\t\t\tif ((name = zend_hash_str_find(target, class_name, delim - class_name))) {\n\t\t\t\tif (Z_TYPE_P(name) == IS_ARRAY) {\n\t\t\t\t\ttarget = Z_ARRVAL_P(name);\n\t\t\t\t\tlen -= delim - class_name + 1;\n\t\t\t\t\tclass_name = delim + 1;\n\t\t\t\t} else if (Z_TYPE_P(name) == IS_STRING) {\n\t\t\t\t\t*name_len = (len - (delim - class_name + 1));\n\t\t\t\t\treturn Z_STR_P(name);\n\t\t\t\t} else {\n\t\t\t\t\treturn (zend_string*)-1; /* use library path */\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn NULL;\n\t\t\t}\n\t\t} while ((delim = memchr(class_name, '_', len)));\n\t} else if ((name = zend_hash_str_find(target, class_name, len))) {\n\t\treturn Z_TYPE_P(name) == IS_STRING? Z_STR_P(name) : (zend_string*)-1;\n\t}\n\treturn NULL;\n}\n/* }}} */\n\nstatic int yaf_loader_identify_category(yaf_loader_object *loader, zend_string *class_name) /* {{{ */ {\n\tchar *name = ZSTR_VAL(class_name);\n\tsize_t len = ZSTR_LEN(class_name);\n\tchar *suspense_name;\n\tint suspense_len;\n\tint suspense_type = YAF_CLASS_NAME_NORMAL;\n\n\tif (EXPECTED(yaf_loader_is_name_suffix(loader))) {\n\t\tswitch (name[len - 1]) {\n\t\t\tcase 'l':\n\t\t\t\tsuspense_name = YAF_LOADER_MODEL;\n\t\t\t\tsuspense_len = sizeof(YAF_LOADER_MODEL) - 1;\n\t\t\t\tsuspense_type = YAF_CLASS_NAME_MODEL;\n\t\t\t\tbreak;\n\t\t\tcase 'n':\n\t\t\t\tsuspense_name = YAF_LOADER_PLUGIN;\n\t\t\t\tsuspense_len = sizeof(YAF_LOADER_PLUGIN) - 1;\n\t\t\t\tsuspense_type = YAF_CLASS_NAME_PLUGIN;\n\t\t\t\tbreak;\n\t\t\tcase 'r':\n\t\t\t\tsuspense_name = YAF_LOADER_CONTROLLER;\n\t\t\t\tsuspense_len = sizeof(YAF_LOADER_CONTROLLER) - 1;\n\t\t\t\tsuspense_type = YAF_CLASS_NAME_CONTROLLER;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn YAF_CLASS_NAME_NORMAL;\n\t\t}\n\t\tif (len <= suspense_len || !yaf_slip_equal(name + len - suspense_len, suspense_name, suspense_len - 1)) {\n\t\t\treturn YAF_CLASS_NAME_NORMAL;\n\t\t}\n\t\tif (UNEXPECTED(yaf_loader_has_name_separator(loader))) {\n\t\t\tname += (len - suspense_len);\n\t\t\tif (len > YAF_G(name_separator_len) &&\n\t\t\t\tmemcmp(name - YAF_G(name_separator_len), YAF_G(name_separator), YAF_G(name_separator_len)) == 0) {\n\t\t\t\treturn suspense_type;\n\t\t\t}\n\t\t\treturn YAF_CLASS_NAME_NORMAL;\n\t\t}\n\t\treturn suspense_type;\n\t} else {\n\t\tswitch (*name) {\n\t\t\tcase 'M':\n\t\t\t\tsuspense_name = YAF_LOADER_MODEL;\n\t\t\t\tsuspense_len = sizeof(YAF_LOADER_MODEL) - 1;\n\t\t\t\tsuspense_type = YAF_CLASS_NAME_MODEL;\n\t\t\t\tbreak;\n\t\t\tcase 'P':\n\t\t\t\tsuspense_name = YAF_LOADER_PLUGIN;\n\t\t\t\tsuspense_len = sizeof(YAF_LOADER_PLUGIN) - 1;\n\t\t\t\tsuspense_type = YAF_CLASS_NAME_PLUGIN;\n\t\t\t\tbreak;\n\t\t\tcase 'C':\n\t\t\t\tsuspense_name = YAF_LOADER_CONTROLLER;\n\t\t\t\tsuspense_len = sizeof(YAF_LOADER_CONTROLLER) - 1;\n\t\t\t\tsuspense_type = YAF_CLASS_NAME_CONTROLLER;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn YAF_CLASS_NAME_NORMAL;\n\t\t}\n\t\tif (len <= suspense_len || !yaf_slip_equal(name + 1, suspense_name + 1, suspense_len - 1)) {\n\t\t\treturn YAF_CLASS_NAME_NORMAL;\n\t\t}\n\t\tif (UNEXPECTED(yaf_loader_has_name_separator(loader))) {\n\t\t\tname += suspense_len;\n\t\t\tif (len > YAF_G(name_separator_len) &&\n\t\t\t\tmemcmp(name, YAF_G(name_separator), YAF_G(name_separator_len)) == 0) {\n\t\t\t\treturn suspense_type;\n\t\t\t}\n\t\t\treturn YAF_CLASS_NAME_NORMAL;\n\t\t}\n\t\treturn suspense_type;\n\t}\n}\n/* }}} */\n\nZEND_HOT int yaf_loader_import(const char *path, uint32_t len) /* {{{ */ {\n\tzend_file_handle file_handle;\n\tzend_op_array *op_array;\n\tzend_stat_t sb;\n\n\tif (UNEXPECTED(VCWD_STAT(path, &sb) == -1)) {\n\t\treturn 0;\n\t}\n\n#if PHP_VERSION_ID < 70400\n\tfile_handle.filename = path;\n\tfile_handle.type = ZEND_HANDLE_FILENAME;\n\tfile_handle.free_filename = 0;\n\tfile_handle.opened_path = NULL;\n\tfile_handle.handle.fp = NULL;\n#else\n\t/* setup file-handle */\n\tzend_stream_init_filename(&file_handle, path);\n#endif\n\n\tif (EXPECTED((op_array = zend_compile_file(&file_handle, ZEND_INCLUDE)))) {\n\t\tzval result;\n\t\tif (EXPECTED(file_handle.handle.stream.handle)) {\n\t\t\tif (UNEXPECTED(!file_handle.opened_path)) {\n\t\t\t\tfile_handle.opened_path = zend_string_init(path, len, 0);\n\t\t\t}\n\t\t\tzend_hash_add_empty_element(&EG(included_files), file_handle.opened_path);\n\t\t}\n\n        ZVAL_UNDEF(&result);\n\t\tzend_execute(op_array, &result);\n\t\tdestroy_op_array(op_array);\n\t\tefree_size(op_array, sizeof(zend_op_array));\n        zval_ptr_dtor(&result);\n\t\tzend_destroy_file_handle(&file_handle);\n\n\t\treturn 1;\n\t}\n\n\tzend_destroy_file_handle(&file_handle);\n\treturn 0;\n}\n/* }}} */\n\nZEND_HOT int yaf_loader_load_internal(yaf_loader_object *loader, char *filename, size_t fname_len, char *directory, uint32_t directory_len) /* {{{ */ {\n   char *ext;\n   uint32_t ext_len;\n   yaf_application_object *app = yaf_application_instance();\n\n   if (UNEXPECTED(app->ext)) {\n\t   ext = ZSTR_VAL(app->ext);\n\t   ext_len = ZSTR_LEN(app->ext);\n   } else {\n\t   ext = YAF_DEFAULT_EXT;\n\t   ext_len = sizeof(YAF_DEFAULT_EXT) - 1;\n   }\n\n   if (UNEXPECTED((directory_len + fname_len + ext_len + 3) > MAXPATHLEN)) {\n\t   directory[directory_len] = '\\0';\n\t   return 0;\n   }\n\n   directory[directory_len] = DEFAULT_SLASH;\n   memcpy(directory + directory_len + 1, filename, fname_len);\n   filename = directory + directory_len + 1;\n   if (UNEXPECTED(yaf_loader_is_lowcase_path(loader))) {\n\t   zend_str_tolower(filename, fname_len);\n   }\n   yaf_loader_sanitize_path(filename, fname_len);\n   directory[directory_len + 1 + fname_len] = '.';\n   memcpy(directory + directory_len + 1 + fname_len + 1, ext, ext_len);\n   /* aussume all the path is not end in slash */\n   directory[directory_len + 1 + fname_len + 1 + ext_len] = '\\0';\n   directory_len = directory_len + 1 + fname_len + 1 + ext_len;\n\n   return yaf_loader_import(directory, directory_len);\n}\n/* }}} */\n\nZEND_HOT static int yaf_loader_load_user(yaf_loader_object *loader, char *buf, uint32_t len) /* {{{ */ {\n\tzend_string *library_dir;\n\tconst char *ext;\n\tchar *name = buf;\n\tuint32_t ext_len;\n\tuint32_t origin_len = len;\n\tyaf_application_object *app = yaf_application_instance();\n\n\tif ((library_dir = yaf_loader_resolve_namespace(loader, buf, &len))) {\n\t\tif (library_dir == ((zend_string*)-1)) {\n\t\t\tlibrary_dir = loader->library;\n\t\t} else {\n\t\t\tname += (origin_len - len);\n\t\t}\n\t} else {\n\t\tif (!loader->glibrary) {\n\t\t\tlibrary_dir = loader->library;\n\t\t} else {\n\t\t\tlibrary_dir = loader->glibrary;\n\t\t}\n\t}\n\n\tif (UNEXPECTED(yaf_loader_is_lowcase_path(loader))) {\n\t\tzend_str_tolower(name, len);\n\t}\n\tyaf_loader_sanitize_path(name, len);\n\n\tif (EXPECTED(app) && UNEXPECTED(app->ext)) {\n\t\text = ZSTR_VAL(app->ext);\n\t\text_len = ZSTR_LEN(app->ext);\n\t} else {\n\t\text = YAF_DEFAULT_EXT;\n\t\text_len = sizeof(YAF_DEFAULT_EXT) - 1;\n\t}\n\n\tZEND_ASSERT(library_dir);\n\tif (UNEXPECTED(ZSTR_LEN(library_dir) + len + ext_len + 2 > MAXPATHLEN)) {\n\t\treturn 0;\n\t}\n\n\tmemmove(buf + ZSTR_LEN(library_dir) + 1, name, len);\n\tmemcpy(buf, ZSTR_VAL(library_dir), ZSTR_LEN(library_dir));\n\tbuf[ZSTR_LEN(library_dir)] = DEFAULT_SLASH;\n\tbuf[ZSTR_LEN(library_dir) + 1 + len] = '.';\n\tmemcpy(buf + ZSTR_LEN(library_dir) + 1 + len + 1, ext, ext_len);\n\tbuf[ZSTR_LEN(library_dir) + 1 + len + 1 + ext_len] = '\\0';\n\tlen = ZSTR_LEN(library_dir) + 1 + len + 1 + ext_len;\n\n\treturn yaf_loader_import(buf, len);\n}\n/* }}} */\n\nstatic zend_never_inline int yaf_loader_load_mvc(yaf_loader_object *loader, char *buf, uint32_t len, int type) /* {{{ */ {\n\tchar *name;\n\tconst char *folder, *ext;\n\tuint32_t folder_len, ext_len;\n\tzend_string *library_dir;\n\tyaf_application_object *app = yaf_application_instance();\n\n\tif (UNEXPECTED(app == NULL)) {\n\t\tphp_error_docref(NULL, E_WARNING, \"Couldn't load a MVC class unless an %s is initialized\", ZSTR_VAL(yaf_application_ce->name));\n\t\t*buf = '\\0';\n\t\treturn 0;\n\t}\n\n\tswitch (type) {\n\t\tcase YAF_CLASS_NAME_MODEL:\n\t\t\tfolder = YAF_MODEL_DIRECTORY_NAME;\n\t\t\tfolder_len = sizeof(YAF_MODEL_DIRECTORY_NAME) - 1;\n\t\t\tbreak;\n\t\tcase YAF_CLASS_NAME_PLUGIN:\n\t\t\tfolder = YAF_PLUGIN_DIRECTORY_NAME;\n\t\t\tfolder_len = sizeof(YAF_PLUGIN_DIRECTORY_NAME) - 1;\n\t\t\tbreak;\n\t\tcase YAF_CLASS_NAME_CONTROLLER:\n\t\t\tfolder = YAF_CONTROLLER_DIRECTORY_NAME;\n\t\t\tfolder_len = sizeof(YAF_CONTROLLER_DIRECTORY_NAME) - 1;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tZEND_ASSERT(0);\n\t\t\tbreak;\n\t}\n\n\tlen -= (folder_len - 1); /* models -> model etc*/\n\tif (EXPECTED(yaf_loader_is_name_suffix(loader))) {\n\t\tname = buf;\n\t\tif (UNEXPECTED(yaf_loader_has_name_separator(loader))) {\n\t\t\tlen -= YAF_G(name_separator_len);\n\t\t}\n\t} else {\n\t\tname = buf + folder_len - 1;\n\t\tif (UNEXPECTED(yaf_loader_has_name_separator(loader))) {\n\t\t\tname += YAF_G(name_separator_len);\n\t\t\tlen -= YAF_G(name_separator_len);\n\t\t}\n\t}\n\tif (UNEXPECTED(yaf_loader_is_lowcase_path(loader))) {\n\t\tzend_str_tolower(name, len);\n\t}\n\tyaf_loader_sanitize_path(name, len);\n\n\tif (UNEXPECTED(app->ext)) {\n\t\text = ZSTR_VAL(app->ext);\n\t\text_len = ZSTR_LEN(app->ext);\n\t} else {\n\t\text = YAF_DEFAULT_EXT;\n\t\text_len = sizeof(YAF_DEFAULT_EXT) - 1;\n\t}\n\n\tif (UNEXPECTED(ZSTR_LEN(app->directory) + 1 + folder_len + 1 + len + 1 + ext_len > MAXPATHLEN)) {\n\t\tphp_error_docref(NULL, E_WARNING, \"Path too long '%s'\", ZSTR_VAL(app->directory));\n\t\t*buf = '\\0';\n\t\treturn 0;\n\t}\n\n\tlibrary_dir = app->directory;\n\tmemmove(buf + ZSTR_LEN(library_dir) + 1 + folder_len + 1, name, len);\n\tmemcpy(buf, ZSTR_VAL(library_dir), ZSTR_LEN(library_dir));\n\tbuf[ZSTR_LEN(library_dir)] = DEFAULT_SLASH;\n\tmemcpy(buf + ZSTR_LEN(library_dir) + 1, folder, folder_len);\n\tbuf[ZSTR_LEN(library_dir) + 1 + folder_len] = DEFAULT_SLASH;\n\tbuf[ZSTR_LEN(library_dir) + 1 + folder_len + 1 + len] = '.';\n\tmemcpy(buf + ZSTR_LEN(library_dir) + 1 + folder_len + 1 + len + 1, ext, ext_len);\n\tbuf[ZSTR_LEN(library_dir) + 1 + folder_len + 1 + len + 1 + ext_len] = '\\0';\n\n\treturn yaf_loader_import(buf, len);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Loader::autoload($class_name)\n*/\nPHP_METHOD(yaf_loader, autoload) {\n\tchar directory[MAXPATHLEN];\n\tuint32_t class_type, status;\n\tzend_string *class_name;\n\tzend_string *unqualified = NULL;\n\tyaf_loader_object *loader = Z_YAFLOADEROBJ_P(getThis());\n\n\tZEND_PARSE_PARAMETERS_START(1, 1)\n\t\tZ_PARAM_STR(class_name)\n\tZEND_PARSE_PARAMETERS_END();\n\n\tif (UNEXPECTED(ZSTR_LEN(class_name) == 0 || ZSTR_LEN(class_name) > MAXPATHLEN)) {\n\t\tRETURN_FALSE;\n\t}\n\n\t/*\n\tif (UNEXPECTED(ZSTR_LEN(class_name) >= sizeof(YAF_LOADER_RESERVERD) - 1 &&\n\t\tyaf_slip_equal(ZSTR_VAL(class_name), YAF_LOADER_RESERVERD, sizeof(YAF_LOADER_RESERVERD) - 1))) {\n\t\tphp_error_docref(NULL, E_WARNING, \"You should not use '%s' as class name prefix\", YAF_LOADER_RESERVERD);\n\t}\n\t*/\n\tif (ZSTR_VAL(class_name)[0] == '\\\\') {\n\t\tunqualified = zend_string_init(ZSTR_VAL(class_name) + 1, ZSTR_LEN(class_name) - 1, 0);\n\t\tclass_name = unqualified;\n\t}\n\tyaf_loader_sanitize_name(ZSTR_VAL(class_name), ZSTR_LEN(class_name), directory);\n\tif ((class_type = yaf_loader_identify_category(loader, class_name)) == YAF_CLASS_NAME_NORMAL) {\n\t\tstatus = yaf_loader_load_user(loader, directory, ZSTR_LEN(class_name));\n\t} else {\n\t\tstatus = yaf_loader_load_mvc(loader, directory, ZSTR_LEN(class_name), class_type);\n\t}\n\n\tif (unqualified) {\n\t\tzend_string_release(unqualified);\n\t}\n\tif (EXPECTED(!yaf_loader_use_spl_autoload(loader))) {\n\t\tif (EXPECTED(status)) {\n\t\t\tzend_string *lc_name = zend_string_tolower(class_name);\n\t\t\tif (UNEXPECTED(!zend_hash_exists(EG(class_table), lc_name))) {\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"Could not find class %s in %s\", ZSTR_VAL(class_name), directory);\n\t\t\t}\n\t\t\tzend_string_release(lc_name);\n\t\t} else if (*directory) {\n\t\t\tphp_error_docref(NULL, E_WARNING, \"Failed opening script %s: %s\", directory, strerror(errno));\n\t\t}\n\t\tRETURN_TRUE;\n\t}\n\tRETURN_BOOL(status);\n}\n/* }}} */\n\n/** {{{ proto public static Yaf_Loader::import($file)\n*/\nPHP_METHOD(yaf_loader, import) {\n\tzend_string *file;\n\tint need_free = 0;\n\n\tZEND_PARSE_PARAMETERS_START(1, 1)\n\t\tZ_PARAM_STR(file)\n\tZEND_PARSE_PARAMETERS_END();\n\n\tif (ZSTR_LEN(file) == 0) {\n\t\tRETURN_FALSE;\n\t} else {\n\t\tint retval;\n\n\t\tif (!IS_ABSOLUTE_PATH(ZSTR_VAL(file), ZSTR_LEN(file))) {\n\t\t\tif (UNEXPECTED(Z_TYPE(YAF_G(loader)) != IS_OBJECT)) {\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"%s need to be initialize first\", ZSTR_VAL(yaf_loader_ce->name));\n\t\t\t\tRETURN_FALSE;\n\t\t\t} else {\n\t\t\t\tyaf_loader_object *loader = Z_YAFLOADEROBJ(YAF_G(loader));\n\t\t\t\tzend_string *library = loader->library;\n\t\t\t\tfile = strpprintf(0, \"%s%c%s\", ZSTR_VAL(library), DEFAULT_SLASH, ZSTR_VAL(file));\n\t\t\t\tneed_free = 1;\n\t\t\t}\n\t\t}\n\n\t\tretval = zend_hash_exists(&EG(included_files), file);\n\t\tif (retval) {\n\t\t\tif (need_free) {\n\t\t\t\tzend_string_release(file);\n\t\t\t}\n\t\t\tRETURN_TRUE;\n\t\t}\n\n\t\tretval = yaf_loader_import(ZSTR_VAL(file), ZSTR_LEN(file));\n\t\tif (need_free) {\n\t\t\tzend_string_release(file);\n\t\t}\n\n\t\tRETURN_BOOL(retval);\n\t}\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Loader::registerLocalNamespace(mixed $namespace, string $path = NULL)\n*/\nPHP_METHOD(yaf_loader, registerLocalNamespace) {\n\tzval *namespaces;\n\tzend_string *path = NULL;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"z|S\", &namespaces, &path) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (IS_STRING == Z_TYPE_P(namespaces)) {\n\t\tif (yaf_loader_register_namespace(Z_YAFLOADEROBJ_P(getThis()), Z_STR_P(namespaces), path)) {\n\t\t\tRETURN_ZVAL(getThis(), 1, 0);\n\t\t}\n\t} else if (IS_ARRAY == Z_TYPE_P(namespaces)) {\n\t\tif (yaf_loader_register_namespace_multi(Z_YAFLOADEROBJ_P(getThis()), namespaces)) {\n\t\t\tRETURN_ZVAL(getThis(), 1, 0);\n\t\t}\n\t} else {\n\t\tphp_error_docref(NULL, E_WARNING, \"Invalid parameters provided, must be a string, or an array\");\n\t}\n\n\tRETURN_FALSE;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Loader::getLocalNamespace(void)\n*/\nPHP_METHOD(yaf_loader, getLocalNamespace) {\n\tyaf_loader_object *loader = Z_YAFLOADEROBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tZVAL_ARR(return_value, yaf_loader_get_namespaces(loader));\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Loader::clearLocalNamespace(void)\n*/\nPHP_METHOD(yaf_loader, clearLocalNamespace) {\n\tyaf_loader_object *loader = Z_YAFLOADEROBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tzend_hash_clean(YAF_LOADER_NAMESPACES(loader));\n\n\tRETURN_TRUE;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Loader::isLocalName(string $class_name)\n*/\nPHP_METHOD(yaf_loader, isLocalName) {\n\tzend_string *name;\n\tint result;\n\tchar *sanitized_name;\n\tuint32_t sanitized_len;\n\tyaf_loader_object *loader = Z_YAFLOADEROBJ_P(getThis());\n\tALLOCA_FLAG(use_heap);\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S\", &name) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (ZSTR_VAL(name)[0] == '\\\\') {\n\t\tsanitized_len = ZSTR_LEN(name) - 1;\n\t\tsanitized_name = do_alloca(sanitized_len, use_heap);\n\t\tyaf_loader_sanitize_name(ZSTR_VAL(name) + 1, sanitized_len, sanitized_name);\n\t} else {\n\t\tsanitized_len = ZSTR_LEN(name);\n\t\tsanitized_name = do_alloca(sanitized_len, use_heap);\n\t\tyaf_loader_sanitize_name(ZSTR_VAL(name), sanitized_len, sanitized_name);\n\t}\n\tresult = YAF_LOADER_NAMESPACES(loader) && yaf_loader_resolve_namespace(loader, sanitized_name, &sanitized_len);\n\tfree_alloca(sanitized_name, use_heap);\n\n\tRETURN_BOOL(result);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Loader::getNamespacePath(string $class_name)\n*/\nPHP_METHOD(yaf_loader, getNamespacePath) {\n\tzend_string *name;\n\tzend_string *path;\n\tchar *sanitized_name;\n\tuint32_t sanitized_len;\n\tyaf_loader_object *loader = Z_YAFLOADEROBJ_P(getThis());\n\tALLOCA_FLAG(use_heap);\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S\", &name) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (ZSTR_VAL(name)[0] == '\\\\') {\n\t\tsanitized_len = ZSTR_LEN(name) - 1;\n\t\tsanitized_name = do_alloca(sanitized_len, use_heap);\n\t\tyaf_loader_sanitize_name(ZSTR_VAL(name) + 1, sanitized_len, sanitized_name);\n\t} else {\n\t\tsanitized_len = ZSTR_LEN(name);\n\t\tsanitized_name = do_alloca(sanitized_len, use_heap);\n\t\tyaf_loader_sanitize_name(ZSTR_VAL(name), sanitized_len, sanitized_name);\n\t}\n\tif ((path = yaf_loader_resolve_namespace(loader, sanitized_name, &sanitized_len))) {\n\t\tif (path == ((zend_string*)-1)) {\n\t\t\tRETVAL_STR_COPY(loader->library);\n\t\t} else {\n\t\t\tRETVAL_STR_COPY(path);\n\t\t}\n\t} else {\n\t\tif (loader->glibrary) {\n\t\t\tRETVAL_STR_COPY(loader->glibrary);\n\t\t} else {\n\t\t\tRETVAL_STR_COPY(loader->library);\n\t\t}\n\t}\n\tfree_alloca(sanitized_name, use_heap);\n\n\treturn;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Loader::setLibraryPath(string $path, $global = FALSE)\n*/\nPHP_METHOD(yaf_loader, setLibraryPath) {\n\tzend_string *library;\n\tzend_bool global = 0;\n\tyaf_loader_object *loader = Z_YAFLOADEROBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S|b\", &library, &global) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (!global) {\n\t\tyaf_loader_set_library_path(loader, library);\n\t} else {\n\t\tyaf_loader_set_global_library_path(loader, library);\n\t}\n\n\tRETURN_ZVAL(getThis(), 1, 0);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Loader::getLibraryPath($global = FALSE)\n*/\nPHP_METHOD(yaf_loader, getLibraryPath) {\n\tzend_bool global = 0;\n\tyaf_loader_object *loader = Z_YAFLOADEROBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"|b\", &global) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (!global) {\n\t\tRETURN_STR_COPY(loader->library);\n\t} else if (loader->glibrary) {\n\t\tRETURN_STR_COPY(loader->glibrary);\n\t} else {\n\t\tRETURN_EMPTY_STRING();\n\t}\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Loader::getInstance($library = NULL, $global_library = NULL)\n*/\nPHP_METHOD(yaf_loader, getInstance) {\n\tzend_string *library = NULL;\n\tzend_string *global = NULL;\n\tyaf_loader_t *loader;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"|S!S!\", &library, &global) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif ((loader = yaf_loader_instance(NULL))) {\n\t\tif (library) {\n\t\t\tyaf_loader_set_library_path(Z_YAFLOADEROBJ_P(loader), library);\n\t\t}\n\t\tif (global) {\n\t\t\tyaf_loader_set_global_library_path(Z_YAFLOADEROBJ_P(loader), global);\n\t\t}\n\t\t/* for back-compatible with changing of YAF_G(lowcase_path) ini_set */\n\t\tyaf_loader_reset(Z_YAFLOADEROBJ_P(loader));\n\t\tRETURN_ZVAL(loader, 1, 0);\n\t}\n\n\tRETURN_FALSE;\n}\n/* }}} */\n\n/** {{{ proto private Yaf_Loader::__construct(void)\n*/\nPHP_METHOD(yaf_loader, __construct) {\n}\n/* }}} */\n\n/** {{{ yaf_loader_methods\n*/\nzend_function_entry yaf_loader_methods[] = {\n\tPHP_ME(yaf_loader, __construct, yaf_loader_void_arginfo, ZEND_ACC_PRIVATE|ZEND_ACC_CTOR)\n\tPHP_ME(yaf_loader, autoload, yaf_loader_autoloader_arginfo, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_loader, getInstance, yaf_loader_getinstance_arginfo, ZEND_ACC_PUBLIC|ZEND_ACC_STATIC)\n\tPHP_ME(yaf_loader, registerLocalNamespace, yaf_loader_regnamespace_arginfo, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_loader, getLocalNamespace, yaf_loader_void_arginfo, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_loader, clearLocalNamespace, yaf_loader_void_arginfo, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_loader, isLocalName, yaf_loader_islocalname_arginfo, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_loader, getNamespacePath, yaf_loader_islocalname_arginfo, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_loader, import, yaf_loader_import_arginfo, ZEND_ACC_PUBLIC|ZEND_ACC_STATIC)\n\tPHP_ME(yaf_loader, setLibraryPath, yaf_loader_setlib_arginfo, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_loader, getLibraryPath, yaf_loader_getlib_arginfo, ZEND_ACC_PUBLIC)\n\tPHP_MALIAS(yaf_loader, registerNamespace, registerLocalNamespace, yaf_loader_regnamespace_arginfo, ZEND_ACC_PUBLIC)\n\tPHP_MALIAS(yaf_loader, getNamespaces, getLocalNamespace, yaf_loader_void_arginfo, ZEND_ACC_PUBLIC)\n\t{NULL, NULL, NULL}\n};\n/* }}} */\n\n/** {{{ YAF_STARTUP_FUNCTION\n*/\nYAF_STARTUP_FUNCTION(loader) {\n\tzend_class_entry ce;\n\n\tYAF_INIT_CLASS_ENTRY(ce, \"Yaf_Loader\",  \"Yaf\\\\Loader\", yaf_loader_methods);\n\tyaf_loader_ce = zend_register_internal_class_ex(&ce, NULL);\n#if PHP_VERSION_ID < 80100\n\tyaf_loader_ce->ce_flags |= ZEND_ACC_FINAL;\n\tyaf_loader_ce->serialize = zend_class_serialize_deny;\n\tyaf_loader_ce->unserialize = zend_class_unserialize_deny;\n#else\n\tyaf_loader_ce->ce_flags |= ZEND_ACC_FINAL | ZEND_ACC_NOT_SERIALIZABLE;\n#endif\n\n\tmemcpy(&yaf_loader_obj_handlers, zend_get_std_object_handlers(), sizeof(zend_object_handlers));\n\tyaf_loader_obj_handlers.clone_obj = NULL;\n\tyaf_loader_obj_handlers.get_gc = yaf_fake_get_gc;\n\tyaf_loader_obj_handlers.free_obj = yaf_loader_obj_free;\n\tyaf_loader_obj_handlers.get_properties = yaf_loader_get_properties;\n\n\treturn SUCCESS;\n}\n/* }}} */\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_loader.h",
          "type": "blob",
          "size": 4.0498046875,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifndef YAF_LOADER_H\n#define YAF_LOADER_H\n\n#define YAF_DEFAULT_VIEW_EXT               \"phtml\"\n#define YAF_DEFAULT_EXT                    \"php\"\n#define YAF_DEFAULT_LIBRARY_EXT             YAF_DEFAULT_CONTROLLER_EXT\n\n#define YAF_LIBRARY_DIRECTORY_NAME         \"library\"\n#define YAF_CONTROLLER_DIRECTORY_NAME      \"controllers\"\n#define YAF_PLUGIN_DIRECTORY_NAME          \"plugins\"\n#define YAF_MODULE_DIRECTORY_NAME          \"modules\"\n#define YAF_VIEW_DIRECTORY_NAME            \"views\"\n#define YAF_MODEL_DIRECTORY_NAME           \"models\"\n\n#define YAF_SPL_AUTOLOAD_REGISTER_NAME     \"spl_autoload_register\"\n#define YAF_AUTOLOAD_FUNC_NAME             \"autoload\"\n\n#define YAF_LOADER_USE_SPL                 YAF_USE_SPL_AUTOLOAD\n#define YAF_LOADER_LOWERCASE               YAF_LOWERCASE_PATH\n#define YAF_LOADER_NAMESUFFIX              YAF_NAME_SUFFIX\n#define YAF_LOADER_NAMESEPARATOR           YAF_HAS_NAME_SEPERATOR\n\n#define YAF_LOADER_FLAGS(loader)           YAF_VAR_FLAGS(loader->std.properties_table[0])\n#define YAF_LOADER_NAMESPACES(loader)      (Z_ARR(loader->std.properties_table[0]))\n\ntypedef struct {\n\tzend_object std;\n\tzend_string *library;\n\tzend_string *glibrary;\n\tzend_array  *properties;\n} yaf_loader_object;\n\n#define Z_YAFLOADEROBJ(zv)    ((yaf_loader_object*)(Z_OBJ(zv)))\n#define Z_YAFLOADEROBJ_P(zv)  Z_YAFLOADEROBJ(*zv)\n\nextern zend_class_entry *yaf_loader_ce;\n\nyaf_loader_t *yaf_loader_instance(zend_string *library_path);\nvoid yaf_loader_reset(yaf_loader_object *loader);\nint yaf_loader_load_internal(yaf_loader_object *loader, char *file_name, size_t name_len, char *directory, uint32_t directory_len);\nint yaf_register_autoloader(yaf_loader_t *loader);\nint yaf_loader_import(const char* path, uint32_t path_len);\nint yaf_loader_register_namespace(yaf_loader_object *loader, zend_string *prefix, zend_string *path);\nvoid yaf_loader_set_global_library_path(yaf_loader_object *loader, zend_string *library_path);\n\n#define yaf_loader_set_library_path(loader, path)   yaf_loader_set_library_path_ex(loader, zend_string_copy(path))\nstatic zend_always_inline void yaf_loader_set_library_path_ex(yaf_loader_object *loader, zend_string *library_path) {\n\tif (UNEXPECTED(loader->library)) {\n\t\tzend_string_release(loader->library);\n\t}\n\tloader->library = library_path;\n}\n\nstatic zend_always_inline zend_bool yaf_loader_use_spl_autoload(yaf_loader_object *loader) {\n\treturn YAF_LOADER_FLAGS(loader) & YAF_LOADER_USE_SPL;\n}\n\nstatic zend_always_inline zend_bool yaf_loader_is_lowcase_path(yaf_loader_object *loader) {\n\treturn YAF_LOADER_FLAGS(loader) & YAF_LOADER_LOWERCASE;\n}\n\nstatic zend_always_inline zend_bool yaf_loader_is_name_suffix(yaf_loader_object *loader) {\n\treturn YAF_LOADER_FLAGS(loader) & YAF_LOADER_NAMESUFFIX;\n}\n\nstatic zend_always_inline zend_bool yaf_loader_has_name_separator(yaf_loader_object *loader) {\n\treturn YAF_LOADER_FLAGS(loader) & YAF_LOADER_NAMESEPARATOR;\n}\n\nextern PHPAPI int php_stream_open_for_zend_ex(const char *filename, zend_file_handle *handle, int mode);\n\nYAF_STARTUP_FUNCTION(loader);\n\n#endif\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_loader.stub.php",
          "type": "blob",
          "size": 1.0302734375,
          "content": "<?php\n\n/** @generate-legacy-arginfo */\n\nfinal class Yaf_Loader { \n\t/* constants */\n\n\t/* properties */\n\tprotected string $_local_ns = NULL;\n\tprotected string $_library = NULL;\n\tprotected string $_global_library = NULL;\n\tstatic protected Yaf_Loader $_instance = NULL;\n\n\t/* methods */\n\tprivate function __construct();\n\n\t/**\n\t * @return Yaf_Loader\n\t */\n\tpublic static function getInstance(string $local_path = NULL, string $global_path = NULL):object;\n\n\tpublic static function import(string $file):?bool;\n\n\tpublic function autoload(string $class_name):bool;\n\n\t/**\n\t * @return Yaf_Loader|NULL|FALSE\n\t */\n\tpublic function registerLocalNamespace(string|array $name_prefix, string $path = NULL):object|null|false;\n\n\tpublic function getLocalNamespace():?array;\n\n\tpublic function clearLocalNamespace():?bool;\n\n\tpublic function isLocalName(string $class_name):?bool;\n\n\t/**\n\t * @return Yaf_Loader|NULL\n\t */\n\tpublic function setLibraryPath(string $library_path, bool $is_global = false):object|null;\n\n\tpublic function getLibraryPath(bool $is_global = false):string;\n}\n"
        },
        {
          "name": "yaf_loader_arginfo.h",
          "type": "blob",
          "size": 1.9169921875,
          "content": "/* This is a generated file, edit the .stub.php file instead.\n * Stub hash: 3280e5bbb814089b48961f0bcc08eeaf16ed5319 */\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Loader___construct, 0, 0, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_OBJ_INFO_EX(arginfo_class_Yaf_Loader_getInstance, 0, 0, Yaf_Loader, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, local_path, IS_STRING, 0, \"NULL\")\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, global_path, IS_STRING, 0, \"NULL\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Loader_import, 0, 1, _IS_BOOL, 1)\n\tZEND_ARG_TYPE_INFO(0, file, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Loader_autoload, 0, 1, _IS_BOOL, 0)\n\tZEND_ARG_TYPE_INFO(0, class_name, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_OBJ_TYPE_MASK_EX(arginfo_class_Yaf_Loader_registerLocalNamespace, 0, 1, Yaf_Loader, MAY_BE_NULL|MAY_BE_FALSE)\n\tZEND_ARG_TYPE_MASK(0, name_prefix, MAY_BE_STRING|MAY_BE_ARRAY, NULL)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, path, IS_STRING, 0, \"NULL\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Loader_getLocalNamespace, 0, 0, IS_ARRAY, 1)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Loader_clearLocalNamespace, 0, 0, _IS_BOOL, 1)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Loader_isLocalName, 0, 1, _IS_BOOL, 1)\n\tZEND_ARG_TYPE_INFO(0, class_name, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_OBJ_INFO_EX(arginfo_class_Yaf_Loader_setLibraryPath, 0, 1, Yaf_Loader, 1)\n\tZEND_ARG_TYPE_INFO(0, library_path, IS_STRING, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, is_global, _IS_BOOL, 0, \"false\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Loader_getLibraryPath, 0, 0, IS_STRING, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, is_global, _IS_BOOL, 0, \"false\")\nZEND_END_ARG_INFO()\n"
        },
        {
          "name": "yaf_loader_legacy_arginfo.h",
          "type": "blob",
          "size": 1.255859375,
          "content": "/* This is a generated file, edit the .stub.php file instead.\n * Stub hash: 3280e5bbb814089b48961f0bcc08eeaf16ed5319 */\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Loader___construct, 0, 0, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Loader_getInstance, 0, 0, 0)\n\tZEND_ARG_INFO(0, local_path)\n\tZEND_ARG_INFO(0, global_path)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Loader_import, 0, 0, 1)\n\tZEND_ARG_INFO(0, file)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Loader_autoload, 0, 0, 1)\n\tZEND_ARG_INFO(0, class_name)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Loader_registerLocalNamespace, 0, 0, 1)\n\tZEND_ARG_INFO(0, name_prefix)\n\tZEND_ARG_INFO(0, path)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Loader_getLocalNamespace arginfo_class_Yaf_Loader___construct\n\n#define arginfo_class_Yaf_Loader_clearLocalNamespace arginfo_class_Yaf_Loader___construct\n\n#define arginfo_class_Yaf_Loader_isLocalName arginfo_class_Yaf_Loader_autoload\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Loader_setLibraryPath, 0, 0, 1)\n\tZEND_ARG_INFO(0, library_path)\n\tZEND_ARG_INFO(0, is_global)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Loader_getLibraryPath, 0, 0, 0)\n\tZEND_ARG_INFO(0, is_global)\nZEND_END_ARG_INFO()\n"
        },
        {
          "name": "yaf_logo.h",
          "type": "blob",
          "size": 3.7744140625,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifndef YAF_LOGO_H\n#define YAF_LOGO_H\n\n#define YAF_LOGO_BASE64  \\\n\"iVBORw0KGgoAAAANSUhEUgAAAB8AAAAVCAYAAAC+NTVfAAAABGdBTUEAALGPC/xhBQAAAAlwSFlz\" \\\n\"AAALEAAACxABrSO9dQAAAB90RVh0U29mdHdhcmUATWFjcm9tZWRpYSBGaXJld29ya3MgOLVo0ngA\" \\\n\"AAYaSURBVEhLlVUJTJRHFEYEhXIoQm0EQyKklkMOOSxqI1awUDUchogGEDEgoMJ6IaigIMgtDZcY\" \\\n\"VhCxQBEs5VixiNoCCgQTuZSG1sa2EUlLi0K9XV6/N4mEFbS6yWZ/+Gfmfdd7o6T0jh8iUu7r69O6\" \\\n\"evWq2lRb+H13d3dpV1fXo+rqanMzM7MZ73j01MvOnTs3/ciRIyoHDhwwCQ0NdUThkvb29vALFy7M\" \\\n\"fH3HyMjIhzKZLPDkyZN9MTEx/zg4OPjwXoCa9t4g2tra5ufk5Lj6+Ph4bdmy5S9vb286fvw4oUBP\" \\\n\"XV2d9ZsOLCwstMjLy3vq5ub2y549ezwA3Oy9it+5c2dWU1NTUnh4+PDKlSvJ1NSUDh48SElJSc/B\" \\\n\"rKG2ttbq1YHMrLOz87OioqJN165d29TT0+NXX18/vHHjRvL19X0O0DLss3pnBW7cuOGRkZHxk5WV\" \\\n\"Fenq6hL8IwsLixcbNmyoOHPmjPNEJux1R0dH6KlTp77Bu9GamhqqqKigffv2ERQjyC/fvn379wBt\" \\\n\"878KwOdZ2Jzr7u4+pqWlRWpqaqSnp8cHPSgtLf10qgM4hPBXf/fu3cXBwcEvXFxcKCQkhLKysmj5\" \\\n\"8uXk6OgoDwgIiG9padF6K4CoqCjnzZs33zQ2NiZlZWVSVVUlPz8/KigoCOC0X7p0ybCkpCQZUuZV\" \\\n\"Vlbmwf88BDC/oaHhYw7mjh07Up2dnYm//v7+BO/J3NycVqxY0R4YGOjwxuK9vb2akCcmIiLiGUut\" \\\n\"rq5O+vr6MsgZ0d/fPxPI3SHrj1DgsVQqlfMXSsmh1Bg8b8FzFM7wOXHiRKGlpWX3vHnzyM7OjkxM\" \\\n\"TMjGxubp1q1bw2DpB1MCACMdMErjVK9bt47gFUVGRroz48HBwWYwvNvY2EgXL14kFGA1CEBEGBMT\" \\\n\"Ewns/z579mzVwMCAKTLz1bJly8jIyIhghVBgzZo10XivrVAcfikj2bZBQUHhhw8fDoV0//LisLAw\" \\\n\"AqMBqPErBsfY9evX6fLly8QAuPDRo0cJNtGxY8eoubmZYAmhRZ9cuXKlv6ysrA3KELym9evXk62t\" \\\n\"Le3atasdKsZkZ2frjgPgYbJ///4vwfKPtLS02L179+Z4enqSgYEBoxXIq6qqCK1E2MyACDOAAFq8\" \\\n\"A2jREcyS36G/KT8/Xw6JRV40NTVp1apVtG3btqcAUAlb9RXYo2Wm37p1yxsDYgCMH8Hbl3wQQiQU\" \\\n\"ABMCI4LvBOQEddhHgrcCJAeTi2AoiRbjwLm6utKCBQto8eLFLz08PP5MSEiIg4IfwVZ1EJ6hxKwh\" \\\n\"p8ErJJjNNmCXEhcXVw/fhlne1NRU0bfl5eWCGRdesmQJzZkzR8wBbW1t0tDQEACsra2JVUNBMjQ0\" \\\n\"pNWrVxPG7RAUjUY27MD6c+QqLD4+3k8JUtp/jQ8kdIOHbjjY7dUzpO5gmZk9e5uZmUkAJSTkJM+d\" \\\n\"O5dmz54tZoGKigrp6OiId6yGvb09cb+jbVm5YdwNvbD2pkQi6QAYGaz5Tqm1tdX70KFD0tjYWCmC\" \\\n\"I925c6cUqCpR6B4Wi8CgRcQvpx+zW/QvJhctXLhQSM3DiEFwUZYbQ4UlH0MW5ADO33sIcg06Ihwd\" \\\n\"4YRxrDGp3ZKTk+fDM39sSsd0qk5PT5cBWB3QPl66dKk4nIFwoHiCYXYLdl5eXqI1165dK3yG1M8g\" \\\n\"/Q9YF49zEsA+H89d6KhinPcF7FMfL87zOTc31xKMyjFW72JRBQq6QIlF6OdFKDgARi9RbBDeNyLh\" \\\n\"ElgkSUlJEb8AKQE7CS4RCQ5/gsCNRkdHx3ABvlBQWA973GHdt/h/MzrFfPyi4aQjVJ6QvAMoA1Dw\" \\\n\"kwm3ljIs+Q29OoLfIAyY8RttqkmFcfsAqR5FWEXxiR8MqzDU6VS45RgFUmgDthF4Vn3t1pqG//c5\" \\\n\"OTm9gGetANaINkzEEFK4JLBPBcyM0A0jSPbo6dOnJxUfGhqaj4AnYiAZKqBCImcikTpTsUHqszk8\" \\\n\"7C+uVR4qP2PUek1ci/lQAEb9kF2OC2T09u3bk4rz+ocPH+pi+CgQfOtNhytTE2zLkPbfEbTC4uLi\" \\\n\"SIXQYDf+bjp//jzPATneF92/f39yol+r8h/ztexGHYdU2gAAAABJRU5ErkJggg==\"\n\n#define YAF_LOGO_DATA      \"data:image/png;base64,\" YAF_LOGO_BASE64\n#define YAF_SUPPORT_URL\t   \"http://pecl.php.net/package/yaf\"\n#define YAF_LOGO_IMG       \"<a href=\" YAF_SUPPORT_URL \"> \\\n\t\t\t\t\t\t   <img src=\\\"\" YAF_LOGO_DATA \"\\\" alt=\\\"Yaf logo\\\" /></a>\\n\"\n\n#endif\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_namespace.h",
          "type": "blob",
          "size": 1.4208984375,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifndef YAF_NAMESPACE_H\n#define YAF_NAMESPACE_H\n\n#define namespace_switch(n) \\\n\t((yaf_is_use_namespace())? n##_ns : n)\n\n#define YAF_INIT_CLASS_ENTRY(ce, name, name_ns, methods) \\\n\tif (yaf_is_use_namespace()) { \\\n\t\tINIT_CLASS_ENTRY(ce, name_ns, methods); \\\n\t} else { \\\n\t\tINIT_CLASS_ENTRY(ce, name, methods); \\\n\t}\n\n#endif\t/* PHP_YAF_H */\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_plugin.c",
          "type": "blob",
          "size": 4.505859375,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include \"php.h\"\n\n#include \"php_yaf.h\"\n#include \"yaf_namespace.h\"\n#include \"yaf_plugin.h\"\n\n#include \"yaf_plugin_arginfo.h\"\n\nzend_class_entry * yaf_plugin_ce;\n\n/** {{{ proto public Yaf_Plugin::routerStartup(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response)\n*/\nPHP_METHOD(yaf_plugin, routerStartup) {\n\tRETURN_TRUE;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Plugin::routerShutdown(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response)\n*/\nPHP_METHOD(yaf_plugin, routerShutdown) {\n\tRETURN_TRUE;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Plugin::dispatchLoopStartup(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response)\n*/\nPHP_METHOD(yaf_plugin, dispatchLoopStartup) {\n\tRETURN_TRUE;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Plugin::preDispatch(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response)\n*/\nPHP_METHOD(yaf_plugin, preDispatch) {\n\tRETURN_TRUE;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Plugin::postDispatch(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response)\n*/\nPHP_METHOD(yaf_plugin, postDispatch) {\n\tRETURN_TRUE;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Plugin::dispatchLoopShutdown(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response)\n*/\nPHP_METHOD(yaf_plugin, dispatchLoopShutdown) {\n\tRETURN_TRUE;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Plugin::preResponse(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response)\n*/\nPHP_METHOD(yaf_plugin, preResponse) {\n\tRETURN_TRUE;\n}\n/* }}} */\n\n/** {{{ yaf_plugin_methods\n*/\nzend_function_entry yaf_plugin_methods[] = {\n\tPHP_ME(yaf_plugin, routerStartup, arginfo_class_Yaf_Plugin_Abstract_routerStartup, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_plugin, routerShutdown, arginfo_class_Yaf_Plugin_Abstract_routerShutdown, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_plugin, dispatchLoopStartup, arginfo_class_Yaf_Plugin_Abstract_dispatchLoopStartup, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_plugin, dispatchLoopShutdown, arginfo_class_Yaf_Plugin_Abstract_dispatchLoopShutdown, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_plugin, preDispatch, arginfo_class_Yaf_Plugin_Abstract_preDispatch, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_plugin, postDispatch, arginfo_class_Yaf_Plugin_Abstract_postDispatch, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_plugin, preResponse, arginfo_class_Yaf_Plugin_Abstract_preResponse, ZEND_ACC_PUBLIC)\n\t{NULL, NULL, NULL}\n};\n\nzend_function_entry yaf_plugin_methods_ns[] = {\n\tPHP_ME(yaf_plugin, routerStartup, arginfo_class_NS_Yaf_Plugin_Abstract_routerStartup, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_plugin, routerShutdown, arginfo_class_NS_Yaf_Plugin_Abstract_routerShutdown, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_plugin, dispatchLoopStartup, arginfo_class_NS_Yaf_Plugin_Abstract_dispatchLoopStartup, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_plugin, dispatchLoopShutdown, arginfo_class_NS_Yaf_Plugin_Abstract_dispatchLoopShutdown, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_plugin, preDispatch, arginfo_class_NS_Yaf_Plugin_Abstract_preDispatch, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_plugin, postDispatch, arginfo_class_NS_Yaf_Plugin_Abstract_postDispatch, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_plugin, preResponse, arginfo_class_NS_Yaf_Plugin_Abstract_preResponse, ZEND_ACC_PUBLIC)\n\t{NULL, NULL, NULL}\n};\n/* }}} */\n\n/** {{{ YAF_STARTUP_FUNCTION\n*/\nYAF_STARTUP_FUNCTION(plugin) {\n\tzend_class_entry ce;\n\tYAF_INIT_CLASS_ENTRY(ce, \"Yaf_Plugin_Abstract\", \"Yaf\\\\Plugin_Abstract\", namespace_switch(yaf_plugin_methods));\n\tyaf_plugin_ce = zend_register_internal_class_ex(&ce, NULL);\n\tyaf_plugin_ce->ce_flags |= ZEND_ACC_EXPLICIT_ABSTRACT_CLASS;\n\n\treturn SUCCESS;\n}\n/* }}} */\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_plugin.h",
          "type": "blob",
          "size": 1.2109375,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifndef YAF_PLUGIN_H\n#define YAF_PLUGIN_H\n\nextern zend_class_entry *yaf_plugin_ce;\n\nYAF_STARTUP_FUNCTION(plugin);\n#endif\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_plugin.stub.php",
          "type": "blob",
          "size": 1.9052734375,
          "content": "<?php\n\nabstract class Yaf_Plugin_Abstract {\n\n\t/** methods */\n\n\t/**\n\t * @return bool\n\t */\n\tpublic function routerStartup(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response) {}\n\n\t/**\n\t * @return bool\n\t */\n\tpublic function routerShutdown(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response) {}\n\n\t/**\n\t * @return bool\n\t */\n\tpublic function dispatchLoopStartup(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response) {}\n\n\t/**\n\t * @return bool\n\t */\n\tpublic function dispatchLoopShutdown(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response) {}\n\n\t/**\n\t * @return bool\n\t */\n\tpublic function preDispatch(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response) {}\n\n\t/**\n\t * @return bool\n\t */\n\tpublic function postDispatch(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response) {}\n\n\t/**\n\t * @return bool\n\t */\n\tpublic function preResponse(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response) {}\n}\n\n/**\n * for yaf.use_namespace\n */\nabstract class NS_Yaf_Plugin_Abstract {\n\n\t/** methods */\n\t/**\n\t * @return bool\n\t */\n\tpublic function routerStartup(\\Yaf\\Request_Abstract $request, \\Yaf\\Response_Abstract $response) {}\n\n\t/**\n\t * @return bool\n\t */\n\tpublic function routerShutdown(\\Yaf\\Request_Abstract $request, \\Yaf\\Response_Abstract $response) {}\n\n\t/**\n\t * @return bool\n\t */\n\tpublic function dispatchLoopStartup(\\Yaf\\Request_Abstract $request, \\Yaf\\Response_Abstract $response) {}\n\n\t/**\n\t * @return bool\n\t */\n\tpublic function dispatchLoopShutdown(\\Yaf\\Request_Abstract $request, \\Yaf\\Response_Abstract $response) {}\n\n\t/**\n\t * @return bool\n\t */\n\tpublic function preDispatch(\\Yaf\\Request_Abstract $request, \\Yaf\\Response_Abstract $response) {}\n\n\t/**\n\t * @return bool\n\t */\n\tpublic function postDispatch(\\Yaf\\Request_Abstract $request, \\Yaf\\Response_Abstract $response) {}\n\n\t/**\n\t * @return bool\n\t */\n\tpublic function preResponse(\\Yaf\\Request_Abstract $request, \\Yaf\\Response_Abstract $response) {}\n}\n"
        },
        {
          "name": "yaf_plugin_arginfo.h",
          "type": "blob",
          "size": 1.8271484375,
          "content": "/* This is a generated file, edit the .stub.php file instead.\n * Stub hash: f66e1addbc0bacfe1709bf3bde6b79445e0b4ace */\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Plugin_Abstract_routerStartup, 0, 0, 2)\n\tZEND_ARG_OBJ_INFO(0, request, Yaf_Request_Abstract, 0)\n\tZEND_ARG_OBJ_INFO(0, response, Yaf_Response_Abstract, 0)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Plugin_Abstract_routerShutdown arginfo_class_Yaf_Plugin_Abstract_routerStartup\n\n#define arginfo_class_Yaf_Plugin_Abstract_dispatchLoopStartup arginfo_class_Yaf_Plugin_Abstract_routerStartup\n\n#define arginfo_class_Yaf_Plugin_Abstract_dispatchLoopShutdown arginfo_class_Yaf_Plugin_Abstract_routerStartup\n\n#define arginfo_class_Yaf_Plugin_Abstract_preDispatch arginfo_class_Yaf_Plugin_Abstract_routerStartup\n\n#define arginfo_class_Yaf_Plugin_Abstract_postDispatch arginfo_class_Yaf_Plugin_Abstract_routerStartup\n\n#define arginfo_class_Yaf_Plugin_Abstract_preResponse arginfo_class_Yaf_Plugin_Abstract_routerStartup\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_NS_Yaf_Plugin_Abstract_routerStartup, 0, 0, 2)\n\tZEND_ARG_OBJ_INFO(0, request, Yaf\\\\Request_Abstract, 0)\n\tZEND_ARG_OBJ_INFO(0, response, Yaf\\\\Response_Abstract, 0)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_NS_Yaf_Plugin_Abstract_routerShutdown arginfo_class_NS_Yaf_Plugin_Abstract_routerStartup\n\n#define arginfo_class_NS_Yaf_Plugin_Abstract_dispatchLoopStartup arginfo_class_NS_Yaf_Plugin_Abstract_routerStartup\n\n#define arginfo_class_NS_Yaf_Plugin_Abstract_dispatchLoopShutdown arginfo_class_NS_Yaf_Plugin_Abstract_routerStartup\n\n#define arginfo_class_NS_Yaf_Plugin_Abstract_preDispatch arginfo_class_NS_Yaf_Plugin_Abstract_routerStartup\n\n#define arginfo_class_NS_Yaf_Plugin_Abstract_postDispatch arginfo_class_NS_Yaf_Plugin_Abstract_routerStartup\n\n#define arginfo_class_NS_Yaf_Plugin_Abstract_preResponse arginfo_class_NS_Yaf_Plugin_Abstract_routerStartup\n"
        },
        {
          "name": "yaf_registry.c",
          "type": "blob",
          "size": 6.904296875,
          "content": "/*\n   +----------------------------------------------------------------------+\n   | Yet Another Framework                                                |\n   +----------------------------------------------------------------------+\n   | This source file is subject to version 3.01 of the PHP license,      |\n   | that is bundled with this package in the file LICENSE, and is        |\n   | available through the world-wide-web at the following url:           |\n   | http://www.php.net/license/3_01.txt                                  |\n   | If you did not receive a copy of the PHP license and are unable to   |\n   | obtain it through the world-wide-web, please send a note to          |\n   | license@php.net so we can mail you a copy immediately.               |\n   +----------------------------------------------------------------------+\n   | Author: Xinchen Hui  <laruence@php.net>                              |\n   +----------------------------------------------------------------------+\n*/\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include \"php.h\"\n\n#include \"php_yaf.h\"\n#include \"Zend/zend_interfaces.h\" /* for zend_class_serialize_deny */\n#include \"yaf_namespace.h\"\n\n#if PHP_MAJOR_VERSION > 7\n#include \"yaf_registry_arginfo.h\"\n#else\n#include \"yaf_registry_legacy_arginfo.h\"\n#endif\n\n#include \"yaf_registry.h\"\n\nzend_class_entry    *yaf_registry_ce;\nstatic zend_object_handlers yaf_registry_obj_handlers;\n\nstatic HashTable *yaf_registry_get_properties(yaf_object *obj) /* {{{ */ {\n    zval rv;\n    HashTable *ht;\n    yaf_registry_object *registry = php_yaf_registry_fetch_object(yaf_strip_obj(obj));\n\n\tif (!registry->properties) {\n\t\tALLOC_HASHTABLE(registry->properties);\n\t\tzend_hash_init(registry->properties, 8, NULL, ZVAL_PTR_DTOR, 0);\n\t\tYAF_ALLOW_VIOLATION(registry->properties);\n\t}\n\n\tht = registry->properties;\n\n\tZVAL_ARR(&rv, zend_array_dup(&registry->entries));\n\tzend_hash_str_update(ht, \"entries:protected\", sizeof(\"entries:protected\") - 1, &rv);\n\n\treturn ht;\n}\n/* }}} */\n\nstatic void yaf_registry_object_free(zend_object *object) /* {{{ */ {\n\tyaf_registry_object *registry = php_yaf_registry_fetch_object(object);\n\n\tZEND_ASSERT(Z_OBJ(YAF_G(registry)) == object);\n\n\tzend_hash_destroy(&registry->entries);\n\tif (registry->properties) {\n\t\tif (GC_DELREF(registry->properties) == 0) {\n\t\t\tGC_REMOVE_FROM_BUFFER(registry->properties);\n\t\t\tzend_array_destroy(registry->properties);\n\t\t}\n\t}\n\n\tzend_object_std_dtor(object);\n}\n/* }}} */\n\nyaf_registry_object *yaf_registry_instance() /* {{{ */ {\n\tyaf_registry_object *registry;\n\n\tif (EXPECTED(Z_TYPE(YAF_G(registry)) == IS_OBJECT)) {\n\t\treturn Z_YAFREGISTRYOBJ(YAF_G(registry));\n\t}\n\n\tregistry = emalloc(sizeof(yaf_registry_object) + zend_object_properties_size(yaf_registry_ce));\n\n\tzend_object_std_init(&registry->std, yaf_registry_ce);\n\tregistry->std.handlers = &yaf_registry_obj_handlers;\n\n\tzend_hash_init(&registry->entries, 8, NULL, ZVAL_PTR_DTOR, 0);\n\tregistry->properties = NULL;\n\n\tZVAL_OBJ(&YAF_G(registry), &registry->std);\n\treturn Z_YAFREGISTRYOBJ(YAF_G(registry));\n}\n/* }}} */\n\nstatic zval *yaf_registry_find(yaf_registry_object *registry, zend_string *name) /* {{{ */ {\n\treturn zend_hash_find(&registry->entries, name);\n}\n/* }}} */\n\nstatic int yaf_registry_has(yaf_registry_object *registry, zend_string *name) /* {{{ */ {\n\treturn zend_hash_exists(&registry->entries, name);\n}\n/* }}} */\n\nstatic zval *yaf_registry_update(yaf_registry_object *registry, zend_string *name, zval *value) /* {{{ */ {\n\tZ_TRY_ADDREF_P(value);\n\treturn zend_hash_update(&registry->entries, name, value);\n}\n/* }}} */\n\nstatic void yaf_registry_del(yaf_registry_object *registry, zend_string *name) /* {{{ */ {\n\tzend_hash_del(&registry->entries, name);\n}\n/* }}} */\n\n/** {{{ proto private Yaf_Registry::__construct(void)\n*/\nPHP_METHOD(yaf_registry, __construct) {\n}\n/* }}} */\n\n/** {{{ proto public static Yaf_Registry::get($name)\n*/\nPHP_METHOD(yaf_registry, get) {\n\tzval *value;\n\tzend_string *name;\n\tyaf_registry_object *registry = yaf_registry_instance();\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S\", &name) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif ((value = yaf_registry_find(registry, name))) {\n\t\tRETURN_ZVAL(value, 1, 0);\n\t}\n\t\n\tRETURN_NULL();\n}\n/* }}} */\n\n/** {{{ proto public static Yaf_Registry::set($name, $value)\n*/\nPHP_METHOD(yaf_registry, set) {\n\tzval *value;\n\tzend_string *name;\n\tyaf_registry_object *registry = yaf_registry_instance();\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"Sz\", &name, &value) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (yaf_registry_update(registry, name, value)) {\n\t\tRETURN_TRUE;\n\t}\n\n\tRETURN_FALSE;\n}\n/* }}} */\n\n/** {{{ proto public static Yaf_Registry::del($name)\n*/\nPHP_METHOD(yaf_registry, del) {\n\tzend_string *name;\n\tyaf_registry_object *registry = yaf_registry_instance();\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S\", &name) == FAILURE) {\n\t\treturn;\n\t}\n\n\tyaf_registry_del(registry, name);\n\n\tRETURN_TRUE;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Registry::has($name)\n*/\nPHP_METHOD(yaf_registry, has) {\n\tzend_string *name;\n\tyaf_registry_object *registry = yaf_registry_instance();\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S\", &name) == FAILURE) {\n\t\treturn;\n\t}\n\n\tRETURN_BOOL(yaf_registry_has(registry, name));\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Registry::getInstance(void)\n*/\nPHP_METHOD(yaf_registry, getInstance) {\n\tZVAL_OBJ(return_value, &(yaf_registry_instance())->std);\n\tZ_ADDREF_P(return_value);\n\treturn;\n}\n/* }}} */\n\n/** {{{ yaf_registry_methods\n*/\nzend_function_entry yaf_registry_methods[] = {\n\tPHP_ME(yaf_registry, __construct, arginfo_class_Yaf_Registry___construct, ZEND_ACC_CTOR|ZEND_ACC_PRIVATE)\n\tPHP_ME(yaf_registry, get, arginfo_class_Yaf_Registry_get, ZEND_ACC_PUBLIC|ZEND_ACC_STATIC)\n\tPHP_ME(yaf_registry, has, arginfo_class_Yaf_Registry_has, ZEND_ACC_PUBLIC|ZEND_ACC_STATIC)\n\tPHP_ME(yaf_registry, set, arginfo_class_Yaf_Registry_set, ZEND_ACC_PUBLIC|ZEND_ACC_STATIC)\n\tPHP_ME(yaf_registry, del, arginfo_class_Yaf_Registry_del, ZEND_ACC_PUBLIC|ZEND_ACC_STATIC)\n\t{NULL, NULL, NULL}\n};\n/* }}} */\n\n/** {{{ YAF_STARTUP_FUNCTION\n*/\nYAF_STARTUP_FUNCTION(registry) {\n\tzend_class_entry ce;\n\n\tYAF_INIT_CLASS_ENTRY(ce, \"Yaf_Registry\", \"Yaf\\\\Registry\", yaf_registry_methods);\n\n\tyaf_registry_ce = zend_register_internal_class_ex(&ce, NULL);\n#if PHP_VERSION_ID < 80100\n\tyaf_registry_ce->ce_flags |= ZEND_ACC_FINAL;\n\tyaf_registry_ce->serialize = zend_class_serialize_deny;\n\tyaf_registry_ce->unserialize = zend_class_unserialize_deny;\n#else\n\tyaf_registry_ce->ce_flags |= ZEND_ACC_FINAL | ZEND_ACC_NOT_SERIALIZABLE;\n#endif\n\n\tmemcpy(&yaf_registry_obj_handlers, zend_get_std_object_handlers(), sizeof(zend_object_handlers));\n\tyaf_registry_obj_handlers.offset = XtOffsetOf(yaf_registry_object, std);\n\tyaf_registry_obj_handlers.clone_obj = NULL;\n\tyaf_registry_obj_handlers.get_gc = yaf_fake_get_gc;\n\tyaf_registry_obj_handlers.free_obj = yaf_registry_object_free;\n\tyaf_registry_obj_handlers.get_properties = yaf_registry_get_properties;\n\n\treturn SUCCESS;\n}\n/* }}} */\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_registry.h",
          "type": "blob",
          "size": 1.6298828125,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifndef YAF_REGISTRY_H\n#define YAF_REGISTRY_H\n\ntypedef struct {\n\tzend_array  entries;\n\tzend_array *properties;\n\tzend_object std;\n} yaf_registry_object;\n\n#define Z_YAFREGISTRYOBJ(zv)    (php_yaf_registry_fetch_object(Z_OBJ(zv)))\n#define Z_YAFREGISTRYOBJ_P(zv)  Z_YAFREGISTRYOBJ(*zv)\nstatic zend_always_inline yaf_registry_object *php_yaf_registry_fetch_object(zend_object *obj) {\n\treturn (yaf_registry_object *)((char*)(obj) - XtOffsetOf(yaf_registry_object, std));\n}\n\nextern zend_class_entry *yaf_registry_ce;\n\nYAF_STARTUP_FUNCTION(registry);\n#endif\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_registry.stub.php",
          "type": "blob",
          "size": 0.453125,
          "content": "<?php\n/** @generate-legacy-arginfo */\n\nfinal class Yaf_Registry { \n\t/* constants */\n\n\t/* properties */\n\tstatic protected Yaf_Registry $_instance = NULL;\n\tprotected array $_entries = NULL;\n\n\t/* methods */\n\tprivate function __construct() {}\n\n\tpublic static function get(string $name):mixed {}\n\t\n\tpublic static function has(string $name):?bool {}\n\n\tpublic static function set(string $name, mixed $value):?bool {}\n\n\tpublic static function del(string $name):?bool {}\n}\n"
        },
        {
          "name": "yaf_registry_arginfo.h",
          "type": "blob",
          "size": 0.7734375,
          "content": "/* This is a generated file, edit the .stub.php file instead.\n * Stub hash: ead31c0ce44b07f287533a18ab963e9a64b12bab */\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Registry___construct, 0, 0, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Registry_get, 0, 1, IS_MIXED, 0)\n\tZEND_ARG_TYPE_INFO(0, name, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Registry_has, 0, 1, _IS_BOOL, 1)\n\tZEND_ARG_TYPE_INFO(0, name, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Registry_set, 0, 2, _IS_BOOL, 1)\n\tZEND_ARG_TYPE_INFO(0, name, IS_STRING, 0)\n\tZEND_ARG_TYPE_INFO(0, value, IS_MIXED, 0)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Registry_del arginfo_class_Yaf_Registry_has\n"
        },
        {
          "name": "yaf_registry_legacy_arginfo.h",
          "type": "blob",
          "size": 0.583984375,
          "content": "/* This is a generated file, edit the .stub.php file instead.\n * Stub hash: ead31c0ce44b07f287533a18ab963e9a64b12bab */\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Registry___construct, 0, 0, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Registry_get, 0, 0, 1)\n\tZEND_ARG_INFO(0, name)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Registry_has arginfo_class_Yaf_Registry_get\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Registry_set, 0, 0, 2)\n\tZEND_ARG_INFO(0, name)\n\tZEND_ARG_INFO(0, value)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Registry_del arginfo_class_Yaf_Registry_get\n"
        },
        {
          "name": "yaf_request.c",
          "type": "blob",
          "size": 40.03515625,
          "content": "/*\n   +----------------------------------------------------------------------+\n   | Yet Another Framework                                                |\n   +----------------------------------------------------------------------+\n   | This source file is subject to version 3.01 of the PHP license,      |\n   | that is bundled with this package in the file LICENSE, and is        |\n   | available through the world-wide-web at the following url:           |\n   | http://www.php.net/license/3_01.txt                                  |\n   | If you did not receive a copy of the PHP license and are unable to   |\n   | obtain it through the world-wide-web, please send a note to          |\n   | license@php.net so we can mail you a copy immediately.               |\n   +----------------------------------------------------------------------+\n   | Author: Xinchen Hui  <laruence@php.net>                              |\n   +----------------------------------------------------------------------+\n   */\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include \"php.h\"\n#include \"main/SAPI.h\"\n#include \"standard/php_string.h\" /* for php_basename */\n#include \"Zend/zend_exceptions.h\" /* for zend_exception_get_default */\n#include \"Zend/zend_interfaces.h\" /* for zend_class_serialize_deny */\n#include \"Zend/zend_smart_str.h\"\n\n#include \"php_yaf.h\"\n#include \"yaf_application.h\"\n#include \"yaf_request.h\"\n#include \"yaf_namespace.h\"\n#include \"yaf_exception.h\"\n#include \"yaf_loader.h\"\n#include \"yaf_router.h\"\n\n#if PHP_MAJOR_VERSION > 7\n#include \"yaf_request_arginfo.h\"\n#else\n#include \"yaf_request_legacy_arginfo.h\"\n#endif\n\n#include \"requests/yaf_request_simple.h\"\n#include \"requests/yaf_request_http.h\"\n\nzend_class_entry *yaf_request_ce;\nstatic zend_object_handlers yaf_request_obj_handlers;\n\nstatic zend_object *yaf_request_new(zend_class_entry *ce) /* {{{ */ {\n\tyaf_request_object *req = emalloc(sizeof(yaf_request_object) + zend_object_properties_size(ce));\n\n\tmemset(req, 0, XtOffsetOf(yaf_request_object, std));\n\tzend_object_std_init(&req->std, ce);\n\tif (ce->default_properties_count) {\n\t\tobject_properties_init(&req->std, ce);\n\t}\n\treq->std.handlers = &yaf_request_obj_handlers;\n\treq->uri = ZSTR_EMPTY_ALLOC();\n\n\treturn &req->std;\n}\n/* }}} */\n\nstatic void yaf_request_object_free(zend_object *object) /* {{{ */ {\n\tyaf_request_object *req = php_yaf_request_fetch_object(object);\n\n\tif (req->method) {\n\t\tzend_string_release(req->method);\n\t}\n\tif (req->module) {\n\t\tzend_string_release(req->module);\n\t}\n\tif (req->controller) {\n\t\tzend_string_release(req->controller);\n\t}\n\tif (req->action) {\n\t\tzend_string_release(req->action);\n\t}\n\tif (req->uri) {\n\t\tzend_string_release(req->uri);\n\t}\n\tif (req->base_uri) {\n\t\tzend_string_release(req->base_uri);\n\t}\n\tif (req->language) {\n\t\tzend_string_release(req->language);\n\t}\n\n\tif (req->params) {\n\t\tif (GC_DELREF(req->params) == 0) {\n\t\t\tGC_REMOVE_FROM_BUFFER(req->params);\n\t\t\tzend_array_destroy(req->params);\n\t\t}\n\t}\n\n\tif (req->properties) {\n\t\tif (GC_DELREF(req->properties) == 0) {\n\t\t\tGC_REMOVE_FROM_BUFFER(req->properties);\n\t\t\tzend_array_destroy(req->properties);\n\t\t}\n\t}\n\n\tzend_object_std_dtor(object);\n}\n/* }}} */\n\nstatic HashTable *yaf_request_get_gc(yaf_object *object, zval **table, int *n) /* {{{ */\n{\n\tyaf_request_object *request = php_yaf_request_fetch_object(yaf_strip_obj(object));\n\n\t*table = NULL;\n\t*n = 0;\n\n\treturn request->params;\n}\n/* }}} */\n\nstatic HashTable *yaf_request_get_properties(yaf_object *object) /* {{{ */ {\n\tzval rv;\n\tHashTable *ht;\n\tyaf_request_object *request = php_yaf_request_fetch_object(yaf_strip_obj(object));\n\n\tif (!request->properties) {\n\t\tALLOC_HASHTABLE(request->properties);\n\t\tzend_hash_init(request->properties, 16, NULL, ZVAL_PTR_DTOR, 0);\n\t\tYAF_ALLOW_VIOLATION(request->properties);\n\t}\n\n\tht = request->properties;\n\tZVAL_STR_COPY(&rv, request->method);\n\tzend_hash_str_update(ht, \"method\", sizeof(\"method\") - 1, &rv);\n\tif (request->module) {\n\t\tZVAL_STR_COPY(&rv, request->module);\n\t} else {\n\t\tZVAL_NULL(&rv);\n\t}\n\tzend_hash_str_update(ht, \"module\", sizeof(\"module\") - 1, &rv);\n\tif (request->controller) {\n\t\tZVAL_STR_COPY(&rv, request->controller);\n\t} else {\n\t\tZVAL_NULL(&rv);\n\t}\n\tzend_hash_str_update(ht, \"controller\", sizeof(\"controller\") - 1, &rv);\n\tif (request->action) {\n\t\tZVAL_STR_COPY(&rv, request->action);\n\t} else {\n\t\tZVAL_NULL(&rv);\n\t}\n\tzend_hash_str_update(ht, \"action\", sizeof(\"action\") - 1, &rv);\n\n\tif (request->uri) {\n\t\tZVAL_STR_COPY(&rv, request->uri);\n\t} else {\n\t\tZVAL_NULL(&rv);\n\t}\n\tzend_hash_str_update(ht, \"uri:protected\", sizeof(\"uri:protected\") - 1, &rv);\n\n\tif (request->base_uri) {\n\t\tZVAL_STR_COPY(&rv, request->base_uri);\n\t} else {\n\t\tZVAL_NULL(&rv);\n\t}\n\tzend_hash_str_update(ht, \"base_uri:protected\", sizeof(\"base_uri:protected\") - 1, &rv);\n\n\tZVAL_BOOL(&rv, yaf_request_is_dispatched(request));\n\tzend_hash_str_update(ht, \"dispatched:protected\", sizeof(\"dispatched:protected\") - 1, &rv);\n\n\tZVAL_BOOL(&rv, yaf_request_is_routed(request));\n\tzend_hash_str_update(ht, \"routed:protected\", sizeof(\"routed:protected\") - 1, &rv);\n\n\tif (request->language) {\n\t\tZVAL_STR_COPY(&rv, request->language);\n\t} else {\n\t\tZVAL_EMPTY_STRING(&rv);\n\t}\n\tzend_hash_str_update(ht, \"language:protected\", sizeof(\"language:protected\") - 1, &rv);\n\n\tif (request->params) {\n\t\tZVAL_ARR(&rv, request->params);\n\t\tGC_ADDREF(request->params);\n\t} else {\n#if PHP_VERSION_ID < 70400\n\t\tarray_init(&rv);\n#else\n\t\tZVAL_EMPTY_ARRAY(&rv);\n#endif\n\t}\n\tzend_hash_str_update(ht, \"params:protected\", sizeof(\"params:protected\") - 1, &rv);\n\n\treturn ht;\n}\n/* }}} */\n\nstatic zend_always_inline zend_string *yaf_request_get_method(yaf_request_object *request) /* {{{ */ {\n\treturn zend_string_copy(request->method);\n}\n/* }}} */\n\nstatic zend_always_inline zend_string *yaf_request_get_module(yaf_request_object *request) /* {{{ */ {\n\tif (request->module) {\n\t\treturn zend_string_copy(request->module);\n\t}\n\treturn NULL;\n}\n/* }}} */\n\nstatic zend_always_inline zend_string *yaf_request_get_controller(yaf_request_object *request) /* {{{ */ {\n\tif (request->controller) {\n\t\treturn zend_string_copy(request->controller);\n\t}\n\treturn NULL;\n}\n/* }}} */\n\nstatic zend_always_inline zend_string *yaf_request_get_action(yaf_request_object *request) /* {{{ */ {\n\tif (request->action) {\n\t\treturn zend_string_copy(request->action);\n\t}\n\treturn NULL;\n}\n/* }}} */\n\nstatic zend_always_inline zend_string *yaf_request_get_uri(yaf_request_object *request) /* {{{ */ {\n\tif (request->uri) {\n\t\treturn zend_string_copy(request->uri);\n\t}\n\treturn NULL;\n}\n/* }}} */\n\nstatic zend_always_inline zend_string *yaf_request_get_base_uri(yaf_request_object *request) /* {{{ */ {\n\tif (request->base_uri) {\n\t\treturn zend_string_copy(request->base_uri);\n\t}\n\treturn NULL;\n}\n/* }}} */\n\nzend_string *yaf_request_get_language(yaf_request_object *request) /* {{{ */ {\n\tif (!request->language) {\n\t\tzval *accept_langs = yaf_request_query_str(YAF_GLOBAL_VARS_SERVER, ZEND_STRL(\"HTTP_ACCEPT_LANGUAGE\"));\n\t\tif (!accept_langs) {\n\t\t\treturn NULL;\n\t\t} else if (UNEXPECTED(IS_STRING != Z_TYPE_P(accept_langs) || !Z_STRLEN_P(accept_langs))) {\n\t\t\treturn NULL;\n\t\t} else {\n\t\t\tchar *seg;\n\t\t\tchar *ptrptr = NULL;\n\t\t\tunsigned prefer_len = 0;\n\t\t\tdouble\tmax_qvlaue = 0;\n\t\t\tchar *prefer = NULL;\n\t\t\tchar *langs = estrndup(Z_STRVAL_P(accept_langs), Z_STRLEN_P(accept_langs));\n\n\t\t\tseg = php_strtok_r(langs, \",\", &ptrptr);\n\t\t\twhile (seg) {\n\t\t\t\tchar *qvalue;\n\t\t\t\twhile (*(seg) == ' ') {\n\t\t\t\t\tseg++;\n\t\t\t\t}\n\t\t\t\t/* Accept-Language: da, en-gb;q=0.8, en;q=0.7 */\n\t\t\t\tif ((qvalue = strstr(seg, \"q=\"))) {\n\t\t\t\t\tfloat qval = strtod(qvalue + 2, NULL);\n\t\t\t\t\tif (qval > max_qvlaue) {\n\t\t\t\t\t\tmax_qvlaue = qval;\n\t\t\t\t\t\tprefer_len = qvalue - seg - 1;\n\t\t\t\t\t\tprefer \t   = seg;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (max_qvlaue < 1) {\n\t\t\t\t\t\tmax_qvlaue = 1;\n\t\t\t\t\t\tprefer_len = strlen(seg);\n\t\t\t\t\t\tprefer \t   = seg;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tseg = php_strtok_r(NULL, \",\", &ptrptr);\n\t\t\t}\n\n\t\t\tif (prefer) {\n\t\t\t\trequest->language = zend_string_init(prefer, prefer_len, 0);\n\t\t\t}\n\t\t\tefree(langs);\n\t\t}\n\t}\n\n\treturn zend_string_copy(request->language);\n}\n/* }}} */\n\nstatic zval* yaf_request_read_property(yaf_object *obj, void/*for php8 portability*/ *name, int type, void **cache_slot, zval *rv) /* {{{ */ {\n\tzend_string *member;\n\tyaf_request_object *request = php_yaf_request_fetch_object(yaf_strip_obj(obj));\n\n#if PHP_VERSION_ID < 80000\n\tif (UNEXPECTED(Z_TYPE_P((zval*)name) != IS_STRING)) {\n\t\treturn &EG(uninitialized_zval);\n\t}\n#endif\n\n#if PHP_VERSION_ID < 80000\n\tmember = Z_STR_P((zval*)name);\n#else\n\tmember = (zend_string*)name;\n#endif\n\n\tif (UNEXPECTED(type == BP_VAR_W || type == BP_VAR_RW)) {\n\t\tphp_error_docref(NULL, E_WARNING,\n\t\t\t\t\"Indirect modification of Yaf_Reqeust internal property '%s' is not allowed\", ZSTR_VAL(member));\n\t\treturn &EG(error_zval);\n\t}\n\n\tswitch (ZSTR_LEN(member)) {\n\t\tcase 3:\n\t\t\tif (yaf_slip_equal(ZSTR_VAL(member), ZEND_STRS(\"uri\"))) {\n\t\t\t\tzend_string *val = yaf_request_get_uri(request);\n\t\t\t\tif (val) {\n\t\t\t\t\tZVAL_STR(rv, val);\n\t\t\t\t\treturn rv;\n\t\t\t\t}\n\t\t\t\treturn &EG(uninitialized_zval);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\tif (yaf_slip_equal(ZSTR_VAL(member), ZEND_STRL(\"method\"))) {\n\t\t\t\tzend_string *val = yaf_request_get_method(request);\n\t\t\t\tif (val) {\n\t\t\t\t\tZVAL_STR(rv, val);\n\t\t\t\t\treturn rv;\n\t\t\t\t}\n\t\t\t\treturn &EG(uninitialized_zval);\n\t\t\t}\n\t\t\tif (yaf_slip_equal(ZSTR_VAL(member), ZEND_STRL(\"module\"))) {\n\t\t\t\tzend_string *val = yaf_request_get_module(request);\n\t\t\t\tif (val) {\n\t\t\t\t\tZVAL_STR(rv, val);\n\t\t\t\t\treturn rv;\n\t\t\t\t}\n\t\t\t\treturn &EG(uninitialized_zval);\n\t\t\t}\n\t\t\tif (yaf_slip_equal(ZSTR_VAL(member), ZEND_STRL(\"action\"))) {\n\t\t\t\tzend_string *val = yaf_request_get_action(request);\n\t\t\t\tif (val) {\n\t\t\t\t\tZVAL_STR(rv, val);\n\t\t\t\t\treturn rv;\n\t\t\t\t}\n\t\t\t\treturn &EG(uninitialized_zval);\n\t\t\t}\n\t\t\tif (yaf_slip_equal(ZSTR_VAL(member), ZEND_STRL(\"routed\"))) {\n\t\t\t\tZVAL_BOOL(rv, yaf_request_is_routed(request));\n\t\t\t\treturn rv;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 8:\n\t\t\tif (yaf_slip_equal(ZSTR_VAL(member), ZEND_STRL(\"base_uri\"))) {\n\t\t\t\tzend_string *val = yaf_request_get_base_uri(request);\n\t\t\t\tif (val) {\n\t\t\t\t\tZVAL_STR(rv, val);\n\t\t\t\t\treturn rv;\n\t\t\t\t}\n\t\t\t\treturn &EG(uninitialized_zval);\n\t\t\t}\n\t\t\tif (yaf_slip_equal(ZSTR_VAL(member), ZEND_STRL(\"language\"))) {\n\t\t\t\tzend_string *val = yaf_request_get_language(request);\n\t\t\t\tif (val) {\n\t\t\t\t\tZVAL_STR(rv, val);\n\t\t\t\t\treturn rv;\n\t\t\t\t}\n\t\t\t\treturn &EG(uninitialized_zval);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 10:\n\t\t\tif (yaf_slip_equal(ZSTR_VAL(member), ZEND_STRL(\"controller\"))) {\n\t\t\t\tzend_string *val = yaf_request_get_controller(request);\n\t\t\t\tif (val) {\n\t\t\t\t\tZVAL_STR(rv, val);\n\t\t\t\t\treturn rv;\n\t\t\t\t}\n\t\t\t\treturn &EG(uninitialized_zval);\n\t\t\t}\n\t\t\tif (yaf_slip_equal(ZSTR_VAL(member), ZEND_STRL(\"dispatched\"))) {\n\t\t\t\tZVAL_BOOL(rv, yaf_request_is_dispatched(request));\n\t\t\t\treturn rv;\n\t\t\t}\n\t\t\tdefault:\n\t\t\tbreak;\n\t}\n\treturn std_object_handlers.read_property(obj, name, type, cache_slot, rv);\n}\n/* }}} */\n\nstatic inline void yaf_request_set_uri(yaf_request_object *request, zend_string *uri) /* {{{ */ {\n\tif (request->uri) {\n\t\tzend_string_release(request->uri);\n\t}\n\trequest->uri = zend_string_copy(uri);\n}\n/* }}} */\n\nconst char *yaf_request_strip_base_uri(zend_string *uri, zend_string *base_uri, size_t *len) /* {{{ */ {\n\tregister const char *p = ZSTR_VAL(uri);\n\tif (strncasecmp(p, ZSTR_VAL(base_uri), ZSTR_LEN(base_uri)) == 0) {\n\t\tp += ZSTR_LEN(base_uri);\n\t\tif (*p == '\\0' || *p == YAF_ROUTER_URL_DELIMIETER || *(--p) == YAF_ROUTER_URL_DELIMIETER) {\n\t\t\t*len = ZSTR_LEN(uri) - (p - ZSTR_VAL(uri));\n\t\t\treturn p;\n\t\t}\n\t}\n\t*len = ZSTR_LEN(uri);\n\treturn ZSTR_VAL(uri);\n}\n/* }}} */\n\nint yaf_request_set_base_uri(yaf_request_object *request, zend_string *base_uri, zend_string *request_uri) /* {{{ */ {\n\n\tif (UNEXPECTED(request->base_uri)) {\n\t\tzend_string_release(request->base_uri);\n\t}\n\n\tif (base_uri == NULL) {\n\t\tzend_string *basename = NULL;\n\t\tzval *script_filename = yaf_request_query_str(YAF_GLOBAL_VARS_SERVER, ZEND_STRL(\"SCRIPT_FILENAME\"));\n\t\tdo {\n\t\t\tif (script_filename && IS_STRING == Z_TYPE_P(script_filename)) {\n\t\t\t\tzend_string *file_name;\n\t\t\t\tchar *ext;\n\t\t\t\tsize_t ext_len;\n\t\t\t\tzval *script_name, *phpself_name, *orig_name;\n\t\t\t\tyaf_application_object *app;\n\n\t\t\t\tif (UNEXPECTED((app = yaf_application_instance()) && app->ext)) {\n\t\t\t\t\text = ZSTR_VAL(app->ext);\n\t\t\t\t\text_len = ZSTR_LEN(app->ext);\n\t\t\t\t} else {\n\t\t\t\t\text = YAF_DEFAULT_EXT;\n\t\t\t\t\text_len = sizeof(YAF_DEFAULT_EXT) - 1;\n\t\t\t\t}\n\n\t\t\t\tscript_name = yaf_request_query_str(YAF_GLOBAL_VARS_SERVER, ZEND_STRL(\"SCRIPT_NAME\"));\n\t\t\t\tfile_name = php_basename(Z_STRVAL_P(script_filename), Z_STRLEN_P(script_filename), ext, ext_len);\n\t\t\t\tif (script_name && EXPECTED(IS_STRING == Z_TYPE_P(script_name))) {\n\t\t\t\t\tzend_string\t*script = php_basename(Z_STRVAL_P(script_name), Z_STRLEN_P(script_name), NULL, 0);\n\n\t\t\t\t\tif (memcmp(ZSTR_VAL(file_name), ZSTR_VAL(script), MIN(ZSTR_LEN(file_name), ZSTR_LEN(script))) == 0) {\n\t\t\t\t\t\tbasename = zend_string_copy(Z_STR_P(script_name));\n\t\t\t\t\t\tzend_string_release(file_name);\n\t\t\t\t\t\tzend_string_release(script);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tzend_string_release(script);\n\t\t\t\t}\n\n\t\t\t\tphpself_name = yaf_request_query_str(YAF_GLOBAL_VARS_SERVER, ZEND_STRL(\"PHP_SELF\"));\n\t\t\t\tif (phpself_name && EXPECTED(IS_STRING == Z_TYPE_P(phpself_name))) {\n\t\t\t\t\tzend_string *phpself = php_basename(Z_STRVAL_P(phpself_name), Z_STRLEN_P(phpself_name), NULL, 0);\n\t\t\t\t\tif (memcmp(ZSTR_VAL(file_name), ZSTR_VAL(phpself), MIN(ZSTR_LEN(file_name), ZSTR_LEN(file_name))) == 0) {\n\t\t\t\t\t\tbasename = zend_string_copy(Z_STR_P(phpself_name));\n\t\t\t\t\t\tzend_string_release(file_name);\n\t\t\t\t\t\tzend_string_release(phpself);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tzend_string_release(phpself);\n\t\t\t\t}\n\n\t\t\t\torig_name = yaf_request_query_str(YAF_GLOBAL_VARS_SERVER, ZEND_STRL(\"ORIG_SCRIPT_NAME\"));\n\t\t\t\tif (orig_name && IS_STRING == Z_TYPE_P(orig_name)) {\n\t\t\t\t\tzend_string *orig = php_basename(Z_STRVAL_P(orig_name), Z_STRLEN_P(orig_name), NULL, 0);\n\t\t\t\t\tif (memcmp(ZSTR_VAL(file_name), ZSTR_VAL(orig), MIN(ZSTR_LEN(file_name), ZSTR_LEN(file_name))) == 0) {\n\t\t\t\t\t\tbasename = zend_string_copy(Z_STR_P(orig_name));\n\t\t\t\t\t\tzend_string_release(file_name);\n\t\t\t\t\t\tzend_string_release(orig);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tzend_string_release(orig);\n\t\t\t\t}\n\t\t\t\tzend_string_release(file_name);\n\t\t\t}\n\t\t} while (0);\n\n\t\tif (basename) {\n\t\t\tif (memcmp(ZSTR_VAL(request_uri), ZSTR_VAL(basename), MIN(ZSTR_LEN(basename), ZSTR_LEN(request_uri))) == 0) {\n\t\t\t\tif (ZSTR_VAL(basename)[ZSTR_LEN(basename) - 1] == '/') {\n\t\t\t\t\tzend_string *sanitized_uri = zend_string_init(ZSTR_VAL(basename), ZSTR_LEN(basename) - 1, 0);\n\t\t\t\t\tzend_string_release(basename);\n\t\t\t\t\tbasename = sanitized_uri;\n\t\t\t\t}\n\t\t\t\trequest->base_uri = basename;\n\t\t\t\treturn 1;\n\t\t\t} else {\n\t\t\t\tzend_string *dir = zend_string_init(ZSTR_VAL(basename), ZSTR_LEN(basename), 0); /* php_dirname might alter the string */\n\n\t\t\t\tzend_string_release(basename);\n\t\t\t\tZSTR_LEN(dir) = php_dirname(ZSTR_VAL(dir), ZSTR_LEN(dir));\n\t\t\t\tif (*(ZSTR_VAL(dir) + ZSTR_LEN(dir) - 1) == '/') {\n\t\t\t\t\tZSTR_VAL(dir)[ZSTR_LEN(dir) - 1] = '\\0';\n\t\t\t\t\tZSTR_LEN(dir)--;\n\t\t\t\t}\n\t\t\t\tif (ZSTR_LEN(dir)) {\n\t\t\t\t\tif (memcmp(ZSTR_VAL(request_uri), ZSTR_VAL(dir), MIN(ZSTR_LEN(dir), ZSTR_LEN(request_uri))) == 0) {\n\t\t\t\t\t\trequest->base_uri = dir;\n\t\t\t\t\t\treturn 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tzend_string_release(dir);\n\t\t\t}\n\t\t}\n\t\trequest->base_uri = NULL;\n\t} else {\n\t\tzend_string *sanitized_uri = NULL;\n\t\tif (UNEXPECTED(ZSTR_VAL(base_uri)[ZSTR_LEN(base_uri) - 1] == '/')) {\n\t\t\tsanitized_uri = zend_string_init(ZSTR_VAL(base_uri), ZSTR_LEN(base_uri) - 1, 0);\n\t\t\tbase_uri = sanitized_uri;\n\t\t} else {\n\t\t\tzend_string_copy(base_uri);\n\t\t}\n\t\trequest->base_uri = base_uri;\n\t}\n\treturn 1;\n}\n/* }}} */\n\nstatic YAF_WRITE_HANDLER yaf_request_write_property(yaf_object *obj, void *name, zval *value, void **cache_slot) /* {{{ */ {\n\tzend_string *member;\n\tyaf_request_object *request = php_yaf_request_fetch_object(yaf_strip_obj(obj));\n\n#if PHP_VERSION_ID < 80000\n\tif (UNEXPECTED(Z_TYPE_P((zval*)name) != IS_STRING)) {\n\t\tYAF_WHANDLER_RET(value);\n\t}\n\n\tmember = Z_STR_P((zval*)name);\n#else\n\tmember = (zend_string*)name;\n#endif\n\n\tif (zend_string_equals_literal(member, \"method\")) {\n\t\tif (UNEXPECTED(Z_TYPE_P(value) != IS_STRING || Z_STRLEN_P(value) == 0)) {\n\t\t\tYAF_WHANDLER_RET(value);\n\t\t}\n\t\tzend_string_release(request->method);\n\t\trequest->method = zend_string_copy(Z_STR_P(value));\n\t\tYAF_WHANDLER_RET(value);\n\t}\n\n\tif (zend_string_equals_literal(member, \"module\")) {\n\t\tif (UNEXPECTED(Z_TYPE_P(value) != IS_STRING || Z_STRLEN_P(value) == 0)) {\n\t\t\tYAF_WHANDLER_RET(value);\n\t\t}\n\t\tyaf_request_set_module(request, Z_STR_P(value));\n\t\tYAF_WHANDLER_RET(value);\n\t}\n\n\tif (zend_string_equals_literal(member, \"controller\")) {\n\t\tif (UNEXPECTED(Z_TYPE_P(value) != IS_STRING || Z_STRLEN_P(value) == 0)) {\n\t\t\tYAF_WHANDLER_RET(value);\n\t\t}\n\t\tyaf_request_set_controller(request, Z_STR_P(value));\n\t\tYAF_WHANDLER_RET(value);\n\t}\n\n\tif (zend_string_equals_literal(member, \"action\")) {\n\t\tif (UNEXPECTED(Z_TYPE_P(value) != IS_STRING || Z_STRLEN_P(value) == 0)) {\n\t\t\tYAF_WHANDLER_RET(value);\n\t\t}\n\t\tyaf_request_set_action(request, Z_STR_P(value));\n\t\tYAF_WHANDLER_RET(value);\n\t}\n\n\tif (zend_string_equals_literal(member, \"uri\") ||\n\t\tzend_string_equals_literal(member, \"base_uri\") ||\n\t\tzend_string_equals_literal(member, \"dispatched\") ||\n\t\tzend_string_equals_literal(member, \"language\") ||\n\t\tzend_string_equals_literal(member, \"routed\") ||\n\t\tzend_string_equals_literal(member, \"params\")) {\n\n\t\tphp_error_docref(NULL, E_WARNING,\n\t\t\t\t\"Modification of Yaf_Request internal property '%s' is not allowed\", ZSTR_VAL(member));\n\t\tYAF_WHANDLER_RET(value);\n\t}\n\n    return std_object_handlers.write_property(obj, name, value, cache_slot);\n}\n/* }}} */\n\nvoid yaf_request_instance(yaf_request_t *this_ptr, zend_string *request_uri) /* {{{ */ {\n\tzend_object *req = yaf_request_new(yaf_request_http_ce);\n\n\tyaf_request_http_init(php_yaf_request_fetch_object(req), NULL, request_uri);\n\n\tZVAL_OBJ(this_ptr, req);\n}\n/* }}} */\n\nvoid yaf_request_set_mvc(yaf_request_object *request, zend_string *module, zend_string *controller, zend_string *action, zend_array *params) /* {{{ */ {\n\tif (module) {\n\t\tyaf_request_set_module(request, module);\n\t}\n\tif (controller) {\n\t\tyaf_request_set_controller(request, controller);\n\t}\n\tif (action) {\n\t\tyaf_request_set_action(request, action);\n\t}\n\tif (params) {\n\t\tif (!request->params) {\n\t\t\tALLOC_HASHTABLE(request->params);\n\t\t\tzend_hash_init(request->params, zend_hash_num_elements(params), NULL, ZVAL_PTR_DTOR, 0);\n\t\t\tYAF_ALLOW_VIOLATION(request->params);\n\t\t}\n\t\tzend_hash_copy(request->params, params, (copy_ctor_func_t) zval_add_ref);\n\t}\n}\n/* }}} */\n\nvoid yaf_request_clean_params(yaf_request_object *request) /* {{{ */ {\n\tif (request->params) {\n\t\tzend_hash_clean(request->params);\n\t}\n}\n/* }}} */\n\nstatic inline zval* yaf_request_fetch_container(unsigned type) /* {{{ */ {\n\tzval *container;\n\tzend_bool jit_initialization = PG(auto_globals_jit);\n\n\tswitch (type) {\n\t\tcase YAF_GLOBAL_VARS_POST:\n\t\t\tcontainer = zend_hash_find(&EG(symbol_table), YAF_KNOWN_STR(YAF_VAR_POST));\n\t\t\tbreak;\n\t\tcase YAF_GLOBAL_VARS_GET:\n\t\t\tcontainer = zend_hash_find(&EG(symbol_table), YAF_KNOWN_STR(YAF_VAR_GET));\n\t\t\tbreak;\n\t\tcase YAF_GLOBAL_VARS_COOKIE:\n\t\t\tcontainer = zend_hash_find(&EG(symbol_table), YAF_KNOWN_STR(YAF_VAR_COOKIE));\n\t\t\tbreak;\n\t\tcase YAF_GLOBAL_VARS_FILES:\n\t\t\tcontainer = zend_hash_find(&EG(symbol_table), YAF_KNOWN_STR(YAF_VAR_FILES));\n\t\t\tbreak;\n\t\tcase YAF_GLOBAL_VARS_SERVER:\n\t\t\tif (jit_initialization) {\n\t\t\t\tzend_is_auto_global(YAF_KNOWN_STR(YAF_VAR_SERVER));\n\t\t\t}\n\t\t\tcontainer = zend_hash_find(&EG(symbol_table), YAF_KNOWN_STR(YAF_VAR_SERVER));\n\t\t\tbreak;\n\t\tcase YAF_GLOBAL_VARS_REQUEST:\n\t\t\tif (jit_initialization) {\n\t\t\t\tzend_is_auto_global(YAF_KNOWN_STR(YAF_VAR_REQUEST));\n\t\t\t}\n\t\t\tcontainer = zend_hash_find(&EG(symbol_table), YAF_KNOWN_STR(YAF_VAR_REQUEST));\n\t\t\tbreak;\n\t\tcase YAF_GLOBAL_VARS_ENV:\n\t\t\tif (jit_initialization) {\n\t\t\t\tzend_is_auto_global(YAF_KNOWN_STR(YAF_VAR_ENV));\n\t\t\t}\n\t\t\tcontainer = zend_hash_find(&EG(symbol_table), YAF_KNOWN_STR(YAF_VAR_ENV));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\treturn NULL;\n\t}\n\n\tif (UNEXPECTED(Z_TYPE_P(container) != IS_ARRAY)) {\n\t\tif (Z_TYPE_P(container) != IS_REFERENCE || Z_TYPE_P(Z_REFVAL_P(container)) != IS_ARRAY) {\n\t\t\treturn NULL;\n\t\t}\n\t\treturn Z_REFVAL_P(container);\n\t}\n\treturn container;\n}\n/* }}} */\n\nZEND_HOT zval *yaf_request_query_str(unsigned type, const char *name, size_t len) /* {{{ */ {\n\tzval *container = yaf_request_fetch_container(type);\n\n\tif (UNEXPECTED(!container)) {\n\t\treturn NULL;\n\t}\n\n\tif (UNEXPECTED(name == NULL)) {\n\t\treturn container;\n\t}\n\n\treturn zend_hash_str_find(Z_ARRVAL_P(container), name, len);\n}\n/* }}} */\n\nZEND_HOT zval *yaf_request_query(unsigned type, zend_string *name) /* {{{ */ {\n\tzval *container = yaf_request_fetch_container(type);\n\n\tif (UNEXPECTED(!container)) {\n\t\treturn NULL;\n\t}\n\n\tif (UNEXPECTED(name == NULL)) {\n\t\treturn container;\n\t}\n\n\treturn zend_hash_find(Z_ARRVAL_P(container), name);\n}\n/* }}} */\n\nint yaf_request_del_str_param(yaf_request_object *request, const char *key, size_t len) /* {{{ */ {\n\tif (request->params) {\n\t\treturn zend_hash_str_del(request->params, key, len);\n\t}\n\treturn 0;\n}\n/* }}} */\n\nint yaf_request_del_param(yaf_request_object *request, zend_string *key) /* {{{ */ {\n\tif (request->params) {\n\t\treturn zend_hash_del(request->params, key);\n\t}\n\treturn 0;\n}\n/* }}} */\n\nint yaf_request_set_str_params_single(yaf_request_object *request, const char *key, size_t len, zval *value) /* {{{ */ {\n\tif (!request->params) {\n\t\tALLOC_HASHTABLE(request->params);\n\t\tzend_hash_init(request->params, 8, NULL, ZVAL_PTR_DTOR, 0);\n\t\tYAF_ALLOW_VIOLATION(request->params);\n\t}\n\tif ((zend_hash_str_update(request->params, key, len, value)) != NULL) {\n\t\tZ_TRY_ADDREF_P(value);\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n/* }}} */\n\nint yaf_request_set_params_single(yaf_request_object *request, zend_string *key, zval *value) /* {{{ */ {\n\tif (!request->params) {\n\t\tALLOC_HASHTABLE(request->params);\n\t\tzend_hash_init(request->params, 8, NULL, ZVAL_PTR_DTOR, 0);\n\t\tYAF_ALLOW_VIOLATION(request->params);\n\t}\n\tif ((zend_hash_update(request->params, key, value)) != NULL) {\n\t\tZ_TRY_ADDREF_P(value);\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n/* }}} */\n\nint yaf_request_set_params_multi(yaf_request_object *request, zval *values) /* {{{ */ {\n\tzval *entry;\n\tzend_string *key;\n\tZEND_HASH_FOREACH_STR_KEY_VAL(Z_ARRVAL_P(values), key, entry) {\n\t\tif (UNEXPECTED(key == NULL)) {\n\t\t\tcontinue;\n\t\t}\n\t\tyaf_request_set_params_single(request, key, entry);\n\t} ZEND_HASH_FOREACH_END();\n\treturn 0;\n}\n/* }}} */\n\nzval *yaf_request_get_param(yaf_request_object *request, zend_string *key) /* {{{ */ {\n\tif (request->params) {\n\t\treturn zend_hash_find(request->params, key);\n\t}\n\treturn NULL;\n}\n/* }}} */\n\nzval *yaf_request_get_param_str(yaf_request_object *request, const char *key, size_t len) /* {{{ */ {\n\tif (request->params) {\n\t\treturn zend_hash_str_find(request->params, key, len);\n\t}\n\treturn NULL;\n}\n/* }}} */\n\nconst char *yaf_request_get_request_method(void) /* {{{ */ {\n\tif (SG(request_info).request_method) {\n\t\treturn SG(request_info).request_method;\n\t}\n#if 0\n\telse if (yaf_slip_equal(sapi_module.name, \"cli\", 4)) {\n\t\treturn \"CLI\";\n\t} else {\n\t\treturn \"UNKNOWN\";\n\t}\n#endif\n\treturn \"CLI\";\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::isGet(void)\n*/\nYAF_REQUEST_IS_METHOD(Get);\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::isPost(void)\n*/\nYAF_REQUEST_IS_METHOD(Post);\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::isPut(void)\n*/\nYAF_REQUEST_IS_METHOD(Put);\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::isDelete(void)\n*/\nYAF_REQUEST_IS_METHOD(Delete);\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::isPatch(void)\n*/\nYAF_REQUEST_IS_METHOD(Patch);\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::isHead(void)\n*/\nYAF_REQUEST_IS_METHOD(Head);\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::isOptions(void)\n*/\nYAF_REQUEST_IS_METHOD(Options);\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::isCli(void)\n*/\nYAF_REQUEST_IS_METHOD(Cli);\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::isXmlHttpRequest()\n*/\nPHP_METHOD(yaf_request, isXmlHttpRequest) {\n\tzend_string *name;\n\tzval * header;\n\tname = zend_string_init(\"HTTP_X_REQUESTED_WITH\", sizeof(\"HTTP_X_REQUESTED_WITH\") - 1, 0);\n\theader = yaf_request_query(YAF_GLOBAL_VARS_SERVER, name);\n\tzend_string_release(name);\n\tif (header && Z_TYPE_P(header) == IS_STRING\n\t\t\t&& strncasecmp(\"XMLHttpRequest\", Z_STRVAL_P(header), Z_STRLEN_P(header)) == 0) {\n\t\tRETURN_TRUE;\n\t}\n\tRETURN_FALSE;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::getQuery(mixed $name, mixed $default = NULL)\n*/\nYAF_REQUEST_METHOD(yaf_request, Query, \tYAF_GLOBAL_VARS_GET);\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::getPost(mixed $name, mixed $default = NULL)\n*/\nYAF_REQUEST_METHOD(yaf_request, Post,  \tYAF_GLOBAL_VARS_POST);\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::getRequet(mixed $name, mixed $default = NULL)\n*/\nYAF_REQUEST_METHOD(yaf_request, Request, YAF_GLOBAL_VARS_REQUEST);\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::getFiles(mixed $name, mixed $default = NULL)\n*/\nYAF_REQUEST_METHOD(yaf_request, Files, \tYAF_GLOBAL_VARS_FILES);\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::getCookie(mixed $name, mixed $default = NULL)\n*/\nYAF_REQUEST_METHOD(yaf_request, Cookie, \tYAF_GLOBAL_VARS_COOKIE);\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::getRaw()\n*/\nPHP_METHOD(yaf_request, getRaw) {\n\tphp_stream *s;\n\tsmart_str raw_data = {0};\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\ts = SG(request_info).request_body;\n\tif (!s || FAILURE == php_stream_rewind(s)) {\n\t\tRETURN_FALSE;\n\t}\n\n\twhile (!php_stream_eof(s)) {\n\t\tchar buf[512];\n\t\tsize_t len = php_stream_read(s, buf, sizeof(buf));\n\n\t\tif (len && len != (size_t) -1) {\n\t\t\tsmart_str_appendl(&raw_data, buf, len);\n\t\t}\n\t}\n\n\tif (raw_data.s) {\n\t\tsmart_str_0(&raw_data);\n\t\tRETURN_STR(raw_data.s);\n\t} else {\n\t\tRETURN_FALSE;\n\t}\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::get(mixed $name, mixed $default)\n * params -> post -> get -> cookie -> server\n */\nPHP_METHOD(yaf_request, get) {\n\tzend_string\t*name;\n\tzval *def = NULL;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S|z\", &name, &def) == FAILURE) {\n\t\treturn;\n\t} else {\n\t\tzval *value = yaf_request_get_param(Z_YAFREQUESTOBJ_P(getThis()), name);\n\t\tif (value) {\n\t\t\tRETURN_ZVAL(value, 1, 0);\n\t\t} else {\n\t\t\tzval *params = NULL;\n\t\t\tzval *pzval\t= NULL;\n\n\t\t\tYAF_GLOBAL_VARS_TYPE methods[4] = {\n\t\t\t\tYAF_GLOBAL_VARS_POST,\n\t\t\t\tYAF_GLOBAL_VARS_GET,\n\t\t\t\tYAF_GLOBAL_VARS_COOKIE,\n\t\t\t\tYAF_GLOBAL_VARS_SERVER\n\t\t\t};\n\n\t\t\t{\n\t\t\t\tint i = 0;\n\t\t\t\tfor (;i < 4; i++) {\n\t\t\t\t\tparams = &PG(http_globals)[methods[i]];\n\t\t\t\t\tif (params && Z_TYPE_P(params) == IS_ARRAY) {\n\t\t\t\t\t\tif ((pzval = zend_hash_find(Z_ARRVAL_P(params), name)) != NULL ){\n\t\t\t\t\t\t\tRETURN_ZVAL(pzval, 1, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tif (def) {\n\t\t\t\tRETURN_ZVAL(def, 1, 0);\n\t\t\t}\n\t\t}\n\t}\n\tRETURN_NULL();\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::getEnv(mixed $name, mixed $default = NULL)\n*/\nYAF_REQUEST_METHOD(yaf_request, Env, \tYAF_GLOBAL_VARS_ENV);\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::getServer(mixed $name, mixed $default = NULL)\n*/\nYAF_REQUEST_METHOD(yaf_request, Server, YAF_GLOBAL_VARS_SERVER);\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::getModuleName(void)\n*/\nPHP_METHOD(yaf_request, getModuleName) {\n\tyaf_request_object *request = Z_YAFREQUESTOBJ_P(getThis());\n\tzend_string *module = yaf_request_get_module(request);\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (UNEXPECTED(module == NULL)) {\n\t\tRETURN_NULL();\n\t}\n\n\tRETURN_STR(module);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::getControllerName(void)\n*/\nPHP_METHOD(yaf_request, getControllerName) {\n\tyaf_request_object *request = Z_YAFREQUESTOBJ_P(getThis());\n\tzend_string *controller = yaf_request_get_controller(request);\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (UNEXPECTED(controller == NULL)) {\n\t\tRETURN_NULL();\n\t}\n\n\tRETURN_STR(controller);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::getActionName(void)\n*/\nPHP_METHOD(yaf_request, getActionName) {\n\tyaf_request_object *request = Z_YAFREQUESTOBJ_P(getThis());\n\tzend_string *action = yaf_request_get_action(request);\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (UNEXPECTED(action == NULL)) {\n\t\tRETURN_NULL();\n\t}\n\n\tRETURN_STR(action);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::setModuleName(string $module, bool $format_name = true)\n*/\nPHP_METHOD(yaf_request, setModuleName) {\n\tzend_string *module;\n\tzend_bool format_name = 1;\n\tyaf_request_object *request = Z_YAFREQUESTOBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S|b\", &module, &format_name) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (EXPECTED(ZSTR_LEN(module))) {\n\t\tif (format_name) {\n\t\t\tyaf_request_set_module(request, module);\n\t\t} else {\n\t\t\tif (request->module) {\n\t\t\t\tzend_string_release(request->module);\n\t\t\t}\n\t\t\trequest->module = zend_string_copy(module);\n\t\t}\n\t}\n\n\tRETURN_ZVAL(getThis(), 1, 0);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::setControllerName(string $controller, bool $format_name = true)\n*/\nPHP_METHOD(yaf_request, setControllerName) {\n\tzend_string *controller;\n\tzend_bool format_name = 1;\n\tyaf_request_object *request = Z_YAFREQUESTOBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S|b\", &controller, &format_name) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (EXPECTED(ZSTR_LEN(controller))) {\n\t\tif (format_name) {\n\t\t\tyaf_request_set_controller(request, controller);\n\t\t} else {\n\t\t\tif (request->controller) {\n\t\t\t\tzend_string_release(request->controller);\n\t\t\t}\n\t\t\trequest->controller = zend_string_copy(controller);\n\t\t}\n\t}\n\n\tRETURN_ZVAL(getThis(), 1, 0);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::setActionName(string $action, bool $format_name = true)\n*/\nPHP_METHOD(yaf_request, setActionName) {\n\tzend_string *action;\n\tzend_bool format_name = 1;\n\tyaf_request_object *request = Z_YAFREQUESTOBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S|b\", &action, &format_name) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (EXPECTED(ZSTR_LEN(action))) {\n\t\tif (format_name) {\n\t\t\tyaf_request_set_action(request, action);\n\t\t} else {\n\t\t\tif (request->action) {\n\t\t\t\tzend_string_release(request->action);\n\t\t\t}\n\t\t\trequest->action = zend_string_copy(action);\n\t\t}\n\t}\n\n\tRETURN_ZVAL(getThis(), 1, 0);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::setParam(mixed $value)\n*/\nPHP_METHOD(yaf_request, setParam) {\n\tunsigned argc;\n\n\targc = ZEND_NUM_ARGS();\n\n\tif (1 == argc) {\n\t\tzval *value ;\n\t\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"a\", &value) == FAILURE) {\n\t\t\treturn;\n\t\t}\n\t\tif (yaf_request_set_params_multi(Z_YAFREQUESTOBJ_P(getThis()), value)) {\n\t\t\tRETURN_ZVAL(getThis(), 1, 0);\n\t\t}\n\t} else if (2 == argc) {\n\t\tzval *value;\n\t\tzend_string *name;\n\t\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"Sz\", &name, &value) == FAILURE) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (yaf_request_set_params_single(Z_YAFREQUESTOBJ_P(getThis()), name, value)) {\n\t\t\tRETURN_ZVAL(getThis(), 1, 0);\n\t\t}\n\t} else {\n\t\tWRONG_PARAM_COUNT;\n\t}\n\n\tRETURN_FALSE;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::getParam(string $name, $mixed $default = NULL)\n*/\nPHP_METHOD(yaf_request, getParam) {\n\tzend_string *name;\n\tzval *def = NULL;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S|z\", &name, &def) == FAILURE) {\n\t\treturn;\n\t} else {\n\t\tzval *value = yaf_request_get_param(Z_YAFREQUESTOBJ_P(getThis()), name);\n\t\tif (value) {\n\t\t\tRETURN_ZVAL(value, 1, 0);\n\t\t}\n\t\tif (def) {\n\t\t\tRETURN_ZVAL(def, 1, 0);\n\t\t}\n\t}\n\n\tRETURN_NULL();\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::getException(void)\n*/\nPHP_METHOD(yaf_request, getException) {\n\tzval *exception;\n\tyaf_request_object *request = Z_YAFREQUESTOBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif ((exception = yaf_request_get_param_str(request, ZEND_STRL(\"exception\")))) {\n\t\tRETURN_ZVAL(exception, 1, 0);\n\t}\n\n\tRETURN_NULL();\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::getParams(void)\n*/\nPHP_METHOD(yaf_request, getParams) {\n\tyaf_request_object *request = Z_YAFREQUESTOBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (request->params) {\n\t\tGC_ADDREF(request->params);\n\t\tRETURN_ARR(request->params);\n\t}\n#if PHP_VERSION_ID < 70400\n\tarray_init(return_value);\n#else\n\tRETURN_EMPTY_ARRAY();\n#endif\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::clearParams(void)\n*/\nPHP_METHOD(yaf_request, clearParams) {\n\tyaf_request_object *request = Z_YAFREQUESTOBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tyaf_request_clean_params(request);\n\tRETURN_ZVAL(getThis(), 1, 0);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::getLanguage(void)\n*/\nPHP_METHOD(yaf_request, getLanguage) {\n\tyaf_request_object *request = Z_YAFREQUESTOBJ_P(getThis());\n\tzend_string *language = yaf_request_get_language(request);\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (UNEXPECTED(language == NULL)) {\n\t\tRETURN_NULL();\n\t}\n\n\tRETURN_STR(language);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::getMethod(void)\n*/\nPHP_METHOD(yaf_request, getMethod) {\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\tRETURN_STR(yaf_request_get_method(Z_YAFREQUESTOBJ_P(getThis())));\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::isDispatched(void)\n*/\nPHP_METHOD(yaf_request, isDispatched) {\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\tRETURN_BOOL(yaf_request_is_dispatched(Z_YAFREQUESTOBJ_P(getThis())));\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::setDispatched(bool $dispatched = true)\n*/\nPHP_METHOD(yaf_request, setDispatched) {\n\tzend_bool state = 1;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"|b\", &state) == FAILURE){\n\t\treturn;\n\t}\n\n\tyaf_request_set_dispatched(Z_YAFREQUESTOBJ_P(getThis()), state);\n\n\tRETURN_ZVAL(getThis(), 1, 0);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::setBaseUri(string $name)\n*/\nPHP_METHOD(yaf_request, setBaseUri) {\n\tzend_string *uri;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S\", &uri) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (ZSTR_LEN(uri) == 0) {\n\t\tRETURN_FALSE;\n\t}\n\n\tif (yaf_request_set_base_uri(Z_YAFREQUESTOBJ_P(getThis()), uri, NULL)) {\n\t\tRETURN_ZVAL(getThis(), 1, 0);\n\t}\n\n\tRETURN_FALSE;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::getBaseUri(void)\n*/\nPHP_METHOD(yaf_request, getBaseUri) {\n\tyaf_request_object *request = Z_YAFREQUESTOBJ_P(getThis());\n\tzend_string *base_uri = yaf_request_get_base_uri(request);\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (UNEXPECTED(base_uri == NULL)) {\n\t\tRETURN_EMPTY_STRING();\n\t}\n\n\tRETURN_STR(base_uri);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::getRequestUri(void)\n*/\nPHP_METHOD(yaf_request, getRequestUri) {\n\tyaf_request_object *request = Z_YAFREQUESTOBJ_P(getThis());\n\tzend_string *uri = yaf_request_get_uri(request);\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (UNEXPECTED(uri == NULL)) {\n\t\tRETURN_EMPTY_STRING();\n\t}\n\n\tRETURN_STR(uri);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::setRequestUri(string $name)\n*/\nPHP_METHOD(yaf_request, setRequestUri) {\n\tzend_string *uri;\n\tyaf_request_object *req = Z_YAFREQUESTOBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S\", &uri) == FAILURE) {\n\t\treturn;\n\t}\n\n\tyaf_request_set_uri(req, uri);\n\n\tRETURN_ZVAL(getThis(), 1, 0);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::isRouted(void)\n*/\nPHP_METHOD(yaf_request, isRouted) {\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\tRETURN_BOOL(yaf_request_is_routed(Z_YAFREQUESTOBJ_P(getThis())));\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Request_Abstract::setRouted(bool $routed = true)\n*/\nPHP_METHOD(yaf_request, setRouted) {\n\tzend_bool state = 1;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"|b\", &state) == FAILURE){\n\t\treturn;\n\t}\n\n\tyaf_request_set_routed(Z_YAFREQUESTOBJ_P(getThis()), state);\n\tRETURN_ZVAL(getThis(), 1, 0);\n}\n/* }}} */\n\n/** {{{ yaf_request_methods\n*/\nzend_function_entry yaf_request_methods[] = {\n\tPHP_ME(yaf_request, isGet, arginfo_class_Yaf_Request_Abstract_isGet, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, isPost, arginfo_class_Yaf_Request_Abstract_isPost, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, isDelete, arginfo_class_Yaf_Request_Abstract_isDelete, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, isPatch, arginfo_class_Yaf_Request_Abstract_isPatch, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, isPut, arginfo_class_Yaf_Request_Abstract_isPut, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, isHead, arginfo_class_Yaf_Request_Abstract_isHead, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, isOptions, arginfo_class_Yaf_Request_Abstract_isOptions, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, isCli, arginfo_class_Yaf_Request_Abstract_isCli, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, isXmlHttpRequest, arginfo_class_Yaf_Request_Abstract_isXmlHttpRequest, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, getQuery, arginfo_class_Yaf_Request_Abstract_getQuery, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, getRequest, arginfo_class_Yaf_Request_Abstract_getRequest, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, getPost, arginfo_class_Yaf_Request_Abstract_getPost, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, getCookie, arginfo_class_Yaf_Request_Abstract_getCookie, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, getRaw, arginfo_class_Yaf_Request_Abstract_getRaw, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, getFiles, arginfo_class_Yaf_Request_Abstract_getFiles, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, get, arginfo_class_Yaf_Request_Abstract_get, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, getServer, arginfo_class_Yaf_Request_Abstract_getServer, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, getEnv, arginfo_class_Yaf_Request_Abstract_getEnv, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, setParam, arginfo_class_Yaf_Request_Abstract_setParam, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, getParam, arginfo_class_Yaf_Request_Abstract_getParam, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, getParams, arginfo_class_Yaf_Request_Abstract_getParams, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, clearParams, arginfo_class_Yaf_Request_Abstract_clearParams, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, getException, arginfo_class_Yaf_Request_Abstract_getException, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, getModuleName, arginfo_class_Yaf_Request_Abstract_getModuleName, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, getControllerName, arginfo_class_Yaf_Request_Abstract_getControllerName, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, getActionName, arginfo_class_Yaf_Request_Abstract_getActionName, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, setModuleName, arginfo_class_Yaf_Request_Abstract_setModuleName, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, setControllerName, arginfo_class_Yaf_Request_Abstract_setControllerName, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, setActionName, arginfo_class_Yaf_Request_Abstract_setActionName, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, getMethod, arginfo_class_Yaf_Request_Abstract_getMethod, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, getLanguage, arginfo_class_Yaf_Request_Abstract_getLanguage, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, setBaseUri, arginfo_class_Yaf_Request_Abstract_setBaseUri, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, getBaseUri, arginfo_class_Yaf_Request_Abstract_getBaseUri, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, getRequestUri, arginfo_class_Yaf_Request_Abstract_getRequestUri, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, setRequestUri, arginfo_class_Yaf_Request_Abstract_setRequestUri, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_request, isDispatched, arginfo_class_Yaf_Request_Abstract_isDispatched, ZEND_ACC_PUBLIC|ZEND_ACC_FINAL)\n\tPHP_ME(yaf_request, setDispatched, arginfo_class_Yaf_Request_Abstract_setDispatched, ZEND_ACC_PUBLIC|ZEND_ACC_FINAL)\n\tPHP_ME(yaf_request, isRouted, arginfo_class_Yaf_Request_Abstract_isRouted, ZEND_ACC_PUBLIC|ZEND_ACC_FINAL)\n\tPHP_ME(yaf_request, setRouted, arginfo_class_Yaf_Request_Abstract_setRouted, ZEND_ACC_PUBLIC|ZEND_ACC_FINAL)\n\t{NULL, NULL, NULL}\n};\n/* }}} */\n\n/** {{{ YAF_STARTUP_FUNCTION\n*/\nYAF_STARTUP_FUNCTION(request){\n\tzend_class_entry ce;\n\n\tYAF_INIT_CLASS_ENTRY(ce, \"Yaf_Request_Abstract\", \"Yaf\\\\Request_Abstract\", yaf_request_methods);\n\tyaf_request_ce\t= zend_register_internal_class_ex(&ce, NULL);\n\tyaf_request_ce->create_object = yaf_request_new;\n#if PHP_VERSION_ID < 80100\n\tyaf_request_ce->ce_flags |= ZEND_ACC_EXPLICIT_ABSTRACT_CLASS;\n\tyaf_request_ce->serialize = zend_class_serialize_deny;\n\tyaf_request_ce->unserialize = zend_class_unserialize_deny;\n#else\n\tyaf_request_ce->ce_flags |= ZEND_ACC_EXPLICIT_ABSTRACT_CLASS | ZEND_ACC_NOT_SERIALIZABLE;\n#endif\n\n\tmemcpy(&yaf_request_obj_handlers, zend_get_std_object_handlers(), sizeof(zend_object_handlers));\n\tyaf_request_obj_handlers.offset = XtOffsetOf(yaf_request_object, std);\n\tyaf_request_obj_handlers.free_obj = yaf_request_object_free;\n\tyaf_request_obj_handlers.get_properties = yaf_request_get_properties;;\n\tyaf_request_obj_handlers.read_property = (zend_object_read_property_t)yaf_request_read_property;\n\tyaf_request_obj_handlers.write_property = (zend_object_write_property_t)yaf_request_write_property;\n\tyaf_request_obj_handlers.get_gc = yaf_request_get_gc;\n\tyaf_request_obj_handlers.clone_obj = NULL;\n\n\tYAF_STARTUP(request_http);\n\tYAF_STARTUP(request_simple);\n\n\treturn SUCCESS;\n}\n/* }}} */\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_request.h",
          "type": "blob",
          "size": 5.857421875,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifndef YAF_REQUEST_H\n#define YAF_REQUEST_H\n\n#define YAF_REQUEST_SERVER_URI               \"request_uri=\"\n\n#define YAF_GLOBAL_VARS_TYPE                 unsigned int\n#define YAF_GLOBAL_VARS_POST                 TRACK_VARS_POST\n#define YAF_GLOBAL_VARS_GET                  TRACK_VARS_GET\n#define YAF_GLOBAL_VARS_ENV                  TRACK_VARS_ENV\n#define YAF_GLOBAL_VARS_FILES                TRACK_VARS_FILES\n#define YAF_GLOBAL_VARS_SERVER               TRACK_VARS_SERVER\n#define YAF_GLOBAL_VARS_REQUEST              TRACK_VARS_REQUEST\n#define YAF_GLOBAL_VARS_COOKIE               TRACK_VARS_COOKIE\n\nextern zend_class_entry *yaf_request_ce;\n\ntypedef struct {\n\tzend_uchar  flags;\n\tzend_string *method;\n\tzend_string *module;\n\tzend_string *controller;\n\tzend_string *action;\n\tzend_string *base_uri;\n\tzend_string *uri;\n\tzend_string *language;\n\tzend_array  *params;\n\tzend_array  *properties;\n\tzend_object std;\n} yaf_request_object;\n\n#define YAF_REQUEST_ROUTED     (1<<0)\n#define YAF_REQUEST_DISPATCHED (1<<1)\n\n#define Z_YAFREQUESTOBJ(zv)    (php_yaf_request_fetch_object(Z_OBJ(zv)))\n#define Z_YAFREQUESTOBJ_P(zv)  Z_YAFREQUESTOBJ(*zv)\n\nstatic zend_always_inline yaf_request_object *php_yaf_request_fetch_object(zend_object *obj) {\n\treturn (yaf_request_object *)((char*)(obj) - XtOffsetOf(yaf_request_object, std));\n}\n\nvoid yaf_request_instance(yaf_request_t *this_ptr, zend_string *info);\nint yaf_request_set_base_uri(yaf_request_object *request, zend_string *base_uri, zend_string *request_uri);\n\nzval *yaf_request_query(unsigned type, zend_string *name);\nzval *yaf_request_query_str(unsigned type, const char *name, size_t len);\n\nzval *yaf_request_get_param(yaf_request_object *request, zend_string *key);\nvoid yaf_request_clean_params(yaf_request_object *request);\nzend_string *yaf_request_get_language(yaf_request_object *request);\n\nvoid yaf_request_set_mvc(yaf_request_object *request, zend_string *module, zend_string *controller, zend_string *action, zend_array *params);\nint yaf_request_set_params_single(yaf_request_object *instance, zend_string *key, zval *value);\nint yaf_request_set_str_params_single(yaf_request_object *instance, const char *key, size_t len, zval *value);\nint yaf_request_set_params_multi(yaf_request_object *instance, zval *values);\nint yaf_request_del_str_param(yaf_request_object *request, const char *key, size_t len);\nint yaf_request_del_param(yaf_request_object *request, zend_string *key);\nconst char *yaf_request_strip_base_uri(zend_string *uri, zend_string *base_uri, size_t *len);\nconst char *yaf_request_get_request_method(void);\n\nstatic zend_always_inline int yaf_request_is_routed(yaf_request_object *request) {\n\treturn request->flags & YAF_REQUEST_ROUTED;\n}\n\nstatic zend_always_inline int yaf_request_is_dispatched(yaf_request_object *request) {\n\treturn request->flags & YAF_REQUEST_DISPATCHED;\n}\n\nstatic zend_always_inline void yaf_request_set_routed(yaf_request_object *request, int flag) {\n\tif (flag) {\n\t\trequest->flags |= YAF_REQUEST_ROUTED;\n\t} else {\n\t\trequest->flags &= ~YAF_REQUEST_ROUTED;\n\t}\n}\n\nstatic zend_always_inline void yaf_request_set_dispatched(yaf_request_object *request, int flag) {\n\tif (flag) {\n\t\trequest->flags |= YAF_REQUEST_DISPATCHED;\n\t} else {\n\t\trequest->flags &= ~YAF_REQUEST_DISPATCHED;\n\t}\n}\n\nstatic zend_always_inline void yaf_request_set_module(yaf_request_object *request, zend_string *module) {\n\tif (request->module) {\n\t\tzend_string_release(request->module);\n\t}\n\trequest->module = yaf_build_camel_name(ZSTR_VAL(module), ZSTR_LEN(module));\n}\n\nstatic zend_always_inline void yaf_request_set_controller(yaf_request_object *request, zend_string *controller) {\n\tif (request->controller) {\n\t\tzend_string_release(request->controller);\n\t}\n\trequest->controller = yaf_build_camel_name(ZSTR_VAL(controller), ZSTR_LEN(controller));\n}\n\nstatic zend_always_inline void yaf_request_set_action(yaf_request_object *request, zend_string *action) {\n\tif (request->action) {\n\t\tzend_string_release(request->action);\n\t}\n\trequest->action = zend_string_tolower(action);\n}\n\n#define YAF_REQUEST_IS_METHOD(x) \\\nPHP_METHOD(yaf_request, is##x) {\\\n\tzend_string *method = Z_YAFREQUESTOBJ_P(getThis())->method; \\\n\tif (zend_parse_parameters_none() == FAILURE) { \\\n\t\treturn; \\\n\t} \\\n\tif (zend_string_equals_literal_ci(method, #x)) { \\\n\t\tRETURN_TRUE; \\\n\t} \\\n\tRETURN_FALSE; \\\n}\n\n#define YAF_REQUEST_METHOD(ce, x, type) \\\nPHP_METHOD(ce, get##x) { \\\n\tzend_string *name; \\\n\tzval *ret; \\\n\tzval *def = NULL; \\\n\tif (UNEXPECTED(ZEND_NUM_ARGS() == 0)) { \\\n\t\tret = yaf_request_query(type, NULL); \\\n\t} else if (zend_parse_parameters(ZEND_NUM_ARGS(), \"S|z\", &name, &def) == FAILURE) { \\\n\t\treturn; \\\n\t} else { \\\n\t\tret = yaf_request_query(type, name); \\\n\t\tif (!ret) { \\\n\t\t\tif (def != NULL) { \\\n\t\t\t\tRETURN_ZVAL(def, 1, 0); \\\n\t\t\t} \\\n\t\t} \\\n\t} \\\n\tif (ret) { \\\n\t    RETURN_ZVAL(ret, 1, 0); \\\n\t} else { \\\n\t\tRETURN_NULL(); \\\n\t} \\\n}\n\nYAF_STARTUP_FUNCTION(request);\n\n#endif\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_request.stub.php",
          "type": "blob",
          "size": 3.6240234375,
          "content": "<?php\n\n/** @generate-legacy-arginfo */\n\nabstract class Yaf_Request_Abstract { \n\t/* constants */\n\t/* const SCHEME_HTTP = \"http\";\n\tconst SCHEME_HTTPS = \"https\"; */\n\n\t/* properties */\n\tpublic ?string    $module = NULL;\n\tpublic ?string    $controller = NULL;\n\tpublic ?string    $action = NULL;\n\tpublic ?string    $method = NULL;\n\tprotected ?array  $params = NULL;\n\tprotected ?string $language = NULL;\n\tprotected object  $_exception = NULL;\n\tprotected string  $_base_uri = \"\";\n\tprotected string  $uri = \"\";\n\tprotected bool  $dispatched = false;\n\tprotected bool  $routed = false;\n\n\t/* methods */\n\tpublic function isGet():bool {}\n\n\tpublic function isPost():bool {}\n\n\tpublic function isPut():bool {}\n\n\tpublic function isHead():bool {}\n\n\tpublic function isOptions():bool {}\n\n\tpublic function isDelete():bool {}\n\n\tpublic function isPatch():bool {}\n\n\tpublic function isCli():bool {}\n\n\tpublic function isXmlHttpRequest():bool {}\n\n\tpublic function getServer(string $name = NULL, mixed $default = NULL):mixed {}\n\n\tpublic function getEnv(string $name = NULL, mixed $default = NULL):mixed {}\n\n\tpublic function getQuery(string $name = NULL, mixed $default = NULL):mixed {}\n\n\tpublic function getRequest(string $name = NULL, mixed $default = NULL):mixed {}\n\n\tpublic function getPost(string $name = NULL, mixed $default = NULL):mixed {}\n\n\tpublic function getCookie(string $name = NULL, mixed $default = NULL):mixed {}\n\n\tpublic function getFiles(string $name = NULL, mixed $default = NULL):mixed {}\n\n\tpublic function getRaw():string|null {}\n\n\tpublic function get(string $name, mixed $default = NULL):mixed {}\n\n\t/**\n\t * @return Yaf_Request_Abstract|NULL\n\t */\n\tpublic function clearParams():?object {}\n\n\t/**\n\t * @return Yaf_Request_Abstract|bool|NULL\n\t */\n\tpublic function setParam(mixed $name, ?mixed $value = NULL):object|bool|null {}\n\n\tpublic function getParam(string $name, mixed $default = NULL):mixed {}\n\n\tpublic function getParams():?array {}\n\n\tpublic function getException():?Exception {}\n\n\tpublic function getModuleName():?string {}\n\n\tpublic function getControllerName():?string {}\n\n\tpublic function getActionName():?string {}\n\n\t/**\n\t * @return Yaf_Request_Abstract|NULL\n\t */\n\tpublic function setModuleName(string $module,  bool $format_name = true):?object {}\n\n\t/**\n\t * @return Yaf_Request_Abstract|NULL\n\t */\n\tpublic function setControllerName(string $controller, bool $format_name = true):?object {}\n\n\t/**\n\t * @return Yaf_Request_Abstract|NULL\n\t */\n\tpublic function setActionName(string $action, bool $format_name = true):?object {}\n\n\tpublic function getMethod():?string {}\n\n\tpublic function getLanguage():?string {}\n\n\t/**\n\t * @return Yaf_Request_Abstract|FALSE\n\t */\n\tpublic function setBaseUri(string $uir):object|false {}\n\n\tpublic function getBaseUri():?string {}\n\n\tpublic function getRequestUri():?string {}\n\n\t/**\n\t * @return Yaf_Request_Abstract|NULL\n\t */\n\tpublic function setRequestUri(string $uir):?object {}\n\n\tpublic function isDispatched():bool {}\n\n\t/**\n\t * @return Yaf_Request_Abstract|NULL\n\t */\n\tpublic function setDispatched(bool $flag = true):?object {}\n\n\tpublic function isRouted():bool {}\n\n\t/**\n\t * @return Yaf_Request_Abstract|NULL\n\t */\n\tpublic function setRouted(bool $flag = true):?object {}\n}\n\nclass Yaf_Request_Http extends Yaf_Request_Abstract { \n\t/* constants */\n\n\t/* properties */\n\n\t/* methods */\n\tpublic function __construct(?string $requestUri = NULL, ?string $baseUri = NULL) {}\n}\n\nfinal class Yaf_Request_Simple extends Yaf_Request_Abstract { \n\t/* constants */\n\n\t/* properties */\n\n\t/* methods */\n\tpublic function __construct(?string $method = NULL, ?string $module = NULL, ?string $controller = NULL, ?string $action = NULL, ?array $params = NULL) {}\n\n\tpublic function isXmlHttpRequest():bool{}\n}\n"
        },
        {
          "name": "yaf_request_arginfo.h",
          "type": "blob",
          "size": 5.9228515625,
          "content": "/* This is a generated file, edit the .stub.php file instead.\n * Stub hash: ef6113aea8b100c9a211a3b81733b4fc4daaced0 */\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Request_Abstract_isGet, 0, 0, _IS_BOOL, 0)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Request_Abstract_isPost arginfo_class_Yaf_Request_Abstract_isGet\n\n#define arginfo_class_Yaf_Request_Abstract_isPut arginfo_class_Yaf_Request_Abstract_isGet\n\n#define arginfo_class_Yaf_Request_Abstract_isHead arginfo_class_Yaf_Request_Abstract_isGet\n\n#define arginfo_class_Yaf_Request_Abstract_isOptions arginfo_class_Yaf_Request_Abstract_isGet\n\n#define arginfo_class_Yaf_Request_Abstract_isDelete arginfo_class_Yaf_Request_Abstract_isGet\n\n#define arginfo_class_Yaf_Request_Abstract_isPatch arginfo_class_Yaf_Request_Abstract_isGet\n\n#define arginfo_class_Yaf_Request_Abstract_isCli arginfo_class_Yaf_Request_Abstract_isGet\n\n#define arginfo_class_Yaf_Request_Abstract_isXmlHttpRequest arginfo_class_Yaf_Request_Abstract_isGet\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Request_Abstract_getServer, 0, 0, IS_MIXED, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, name, IS_STRING, 0, \"NULL\")\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, default, IS_MIXED, 0, \"NULL\")\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Request_Abstract_getEnv arginfo_class_Yaf_Request_Abstract_getServer\n\n#define arginfo_class_Yaf_Request_Abstract_getQuery arginfo_class_Yaf_Request_Abstract_getServer\n\n#define arginfo_class_Yaf_Request_Abstract_getRequest arginfo_class_Yaf_Request_Abstract_getServer\n\n#define arginfo_class_Yaf_Request_Abstract_getPost arginfo_class_Yaf_Request_Abstract_getServer\n\n#define arginfo_class_Yaf_Request_Abstract_getCookie arginfo_class_Yaf_Request_Abstract_getServer\n\n#define arginfo_class_Yaf_Request_Abstract_getFiles arginfo_class_Yaf_Request_Abstract_getServer\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Request_Abstract_getRaw, 0, 0, IS_STRING, 1)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Request_Abstract_get, 0, 1, IS_MIXED, 0)\n\tZEND_ARG_TYPE_INFO(0, name, IS_STRING, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, default, IS_MIXED, 0, \"NULL\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Request_Abstract_clearParams, 0, 0, IS_OBJECT, 1)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX(arginfo_class_Yaf_Request_Abstract_setParam, 0, 1, MAY_BE_OBJECT|MAY_BE_BOOL|MAY_BE_NULL)\n\tZEND_ARG_TYPE_INFO(0, name, IS_MIXED, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, value, IS_MIXED, 1, \"NULL\")\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Request_Abstract_getParam arginfo_class_Yaf_Request_Abstract_get\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Request_Abstract_getParams, 0, 0, IS_ARRAY, 1)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_OBJ_INFO_EX(arginfo_class_Yaf_Request_Abstract_getException, 0, 0, Exception, 1)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Request_Abstract_getModuleName arginfo_class_Yaf_Request_Abstract_getRaw\n\n#define arginfo_class_Yaf_Request_Abstract_getControllerName arginfo_class_Yaf_Request_Abstract_getRaw\n\n#define arginfo_class_Yaf_Request_Abstract_getActionName arginfo_class_Yaf_Request_Abstract_getRaw\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Request_Abstract_setModuleName, 0, 1, IS_OBJECT, 1)\n\tZEND_ARG_TYPE_INFO(0, module, IS_STRING, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, format_name, _IS_BOOL, 0, \"true\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Request_Abstract_setControllerName, 0, 1, IS_OBJECT, 1)\n\tZEND_ARG_TYPE_INFO(0, controller, IS_STRING, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, format_name, _IS_BOOL, 0, \"true\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Request_Abstract_setActionName, 0, 1, IS_OBJECT, 1)\n\tZEND_ARG_TYPE_INFO(0, action, IS_STRING, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, format_name, _IS_BOOL, 0, \"true\")\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Request_Abstract_getMethod arginfo_class_Yaf_Request_Abstract_getRaw\n\n#define arginfo_class_Yaf_Request_Abstract_getLanguage arginfo_class_Yaf_Request_Abstract_getRaw\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX(arginfo_class_Yaf_Request_Abstract_setBaseUri, 0, 1, MAY_BE_OBJECT|MAY_BE_FALSE)\n\tZEND_ARG_TYPE_INFO(0, uir, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Request_Abstract_getBaseUri arginfo_class_Yaf_Request_Abstract_getRaw\n\n#define arginfo_class_Yaf_Request_Abstract_getRequestUri arginfo_class_Yaf_Request_Abstract_getRaw\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Request_Abstract_setRequestUri, 0, 1, IS_OBJECT, 1)\n\tZEND_ARG_TYPE_INFO(0, uir, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Request_Abstract_isDispatched arginfo_class_Yaf_Request_Abstract_isGet\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Request_Abstract_setDispatched, 0, 0, IS_OBJECT, 1)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, flag, _IS_BOOL, 0, \"true\")\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Request_Abstract_isRouted arginfo_class_Yaf_Request_Abstract_isGet\n\n#define arginfo_class_Yaf_Request_Abstract_setRouted arginfo_class_Yaf_Request_Abstract_setDispatched\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Request_Http___construct, 0, 0, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, requestUri, IS_STRING, 1, \"NULL\")\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, baseUri, IS_STRING, 1, \"NULL\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Request_Simple___construct, 0, 0, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, method, IS_STRING, 1, \"NULL\")\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, module, IS_STRING, 1, \"NULL\")\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, controller, IS_STRING, 1, \"NULL\")\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, action, IS_STRING, 1, \"NULL\")\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, params, IS_ARRAY, 1, \"NULL\")\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Request_Simple_isXmlHttpRequest arginfo_class_Yaf_Request_Abstract_isGet\n"
        },
        {
          "name": "yaf_request_legacy_arginfo.h",
          "type": "blob",
          "size": 4.66796875,
          "content": "/* This is a generated file, edit the .stub.php file instead.\n * Stub hash: ef6113aea8b100c9a211a3b81733b4fc4daaced0 */\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Request_Abstract_isGet, 0, 0, 0)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Request_Abstract_isPost arginfo_class_Yaf_Request_Abstract_isGet\n\n#define arginfo_class_Yaf_Request_Abstract_isPut arginfo_class_Yaf_Request_Abstract_isGet\n\n#define arginfo_class_Yaf_Request_Abstract_isHead arginfo_class_Yaf_Request_Abstract_isGet\n\n#define arginfo_class_Yaf_Request_Abstract_isOptions arginfo_class_Yaf_Request_Abstract_isGet\n\n#define arginfo_class_Yaf_Request_Abstract_isDelete arginfo_class_Yaf_Request_Abstract_isGet\n\n#define arginfo_class_Yaf_Request_Abstract_isPatch arginfo_class_Yaf_Request_Abstract_isGet\n\n#define arginfo_class_Yaf_Request_Abstract_isCli arginfo_class_Yaf_Request_Abstract_isGet\n\n#define arginfo_class_Yaf_Request_Abstract_isXmlHttpRequest arginfo_class_Yaf_Request_Abstract_isGet\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Request_Abstract_getServer, 0, 0, 0)\n\tZEND_ARG_INFO(0, name)\n\tZEND_ARG_INFO(0, default)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Request_Abstract_getEnv arginfo_class_Yaf_Request_Abstract_getServer\n\n#define arginfo_class_Yaf_Request_Abstract_getQuery arginfo_class_Yaf_Request_Abstract_getServer\n\n#define arginfo_class_Yaf_Request_Abstract_getRequest arginfo_class_Yaf_Request_Abstract_getServer\n\n#define arginfo_class_Yaf_Request_Abstract_getPost arginfo_class_Yaf_Request_Abstract_getServer\n\n#define arginfo_class_Yaf_Request_Abstract_getCookie arginfo_class_Yaf_Request_Abstract_getServer\n\n#define arginfo_class_Yaf_Request_Abstract_getFiles arginfo_class_Yaf_Request_Abstract_getServer\n\n#define arginfo_class_Yaf_Request_Abstract_getRaw arginfo_class_Yaf_Request_Abstract_isGet\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Request_Abstract_get, 0, 0, 1)\n\tZEND_ARG_INFO(0, name)\n\tZEND_ARG_INFO(0, default)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Request_Abstract_clearParams arginfo_class_Yaf_Request_Abstract_isGet\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Request_Abstract_setParam, 0, 0, 1)\n\tZEND_ARG_INFO(0, name)\n\tZEND_ARG_INFO(0, value)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Request_Abstract_getParam arginfo_class_Yaf_Request_Abstract_get\n\n#define arginfo_class_Yaf_Request_Abstract_getParams arginfo_class_Yaf_Request_Abstract_isGet\n\n#define arginfo_class_Yaf_Request_Abstract_getException arginfo_class_Yaf_Request_Abstract_isGet\n\n#define arginfo_class_Yaf_Request_Abstract_getModuleName arginfo_class_Yaf_Request_Abstract_isGet\n\n#define arginfo_class_Yaf_Request_Abstract_getControllerName arginfo_class_Yaf_Request_Abstract_isGet\n\n#define arginfo_class_Yaf_Request_Abstract_getActionName arginfo_class_Yaf_Request_Abstract_isGet\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Request_Abstract_setModuleName, 0, 0, 1)\n\tZEND_ARG_INFO(0, module)\n\tZEND_ARG_INFO(0, format_name)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Request_Abstract_setControllerName, 0, 0, 1)\n\tZEND_ARG_INFO(0, controller)\n\tZEND_ARG_INFO(0, format_name)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Request_Abstract_setActionName, 0, 0, 1)\n\tZEND_ARG_INFO(0, action)\n\tZEND_ARG_INFO(0, format_name)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Request_Abstract_getMethod arginfo_class_Yaf_Request_Abstract_isGet\n\n#define arginfo_class_Yaf_Request_Abstract_getLanguage arginfo_class_Yaf_Request_Abstract_isGet\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Request_Abstract_setBaseUri, 0, 0, 1)\n\tZEND_ARG_INFO(0, uir)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Request_Abstract_getBaseUri arginfo_class_Yaf_Request_Abstract_isGet\n\n#define arginfo_class_Yaf_Request_Abstract_getRequestUri arginfo_class_Yaf_Request_Abstract_isGet\n\n#define arginfo_class_Yaf_Request_Abstract_setRequestUri arginfo_class_Yaf_Request_Abstract_setBaseUri\n\n#define arginfo_class_Yaf_Request_Abstract_isDispatched arginfo_class_Yaf_Request_Abstract_isGet\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Request_Abstract_setDispatched, 0, 0, 0)\n\tZEND_ARG_INFO(0, flag)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Request_Abstract_isRouted arginfo_class_Yaf_Request_Abstract_isGet\n\n#define arginfo_class_Yaf_Request_Abstract_setRouted arginfo_class_Yaf_Request_Abstract_setDispatched\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Request_Http___construct, 0, 0, 0)\n\tZEND_ARG_INFO(0, requestUri)\n\tZEND_ARG_INFO(0, baseUri)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Request_Simple___construct, 0, 0, 0)\n\tZEND_ARG_INFO(0, method)\n\tZEND_ARG_INFO(0, module)\n\tZEND_ARG_INFO(0, controller)\n\tZEND_ARG_INFO(0, action)\n\tZEND_ARG_INFO(0, params)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Request_Simple_isXmlHttpRequest arginfo_class_Yaf_Request_Abstract_isGet\n"
        },
        {
          "name": "yaf_response.c",
          "type": "blob",
          "size": 16.7529296875,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include \"php.h\"\n#include \"main/SAPI.h\" /* for sapi_header_line */\n#include \"ext/standard/php_string.h\" /* for php_implode */\n#include \"Zend/zend_interfaces.h\"\n\n#include \"php_yaf.h\"\n#include \"yaf_namespace.h\"\n#include \"yaf_response.h\"\n#include \"yaf_exception.h\"\n\n#if PHP_MAJOR_VERSION > 7\n#include \"yaf_response_arginfo.h\"\n#else\n#include \"yaf_response_legacy_arginfo.h\"\n#endif\n\n#include \"responses/yaf_response_http.h\"\n#include \"responses/yaf_response_cli.h\"\n\nzend_class_entry *yaf_response_ce;\nstatic zend_object_handlers yaf_response_obj_handlers;\n\nstatic HashTable *yaf_response_get_properties(yaf_object *obj) /* {{{ */ {\n\tzval rv;\n\tHashTable *ht;\n\tyaf_response_object *response = php_yaf_response_fetch_object(yaf_strip_obj(obj));\n\n\tif (!response->properties) {\n\t\tALLOC_HASHTABLE(response->properties);\n\t\tzend_hash_init(response->properties, 4, NULL, ZVAL_PTR_DTOR, 0);\n\t\tYAF_ALLOW_VIOLATION(response->properties);\n\t}\n\n\tht = response->properties;\n\tZVAL_LONG(&rv, response->code);\n\tzend_hash_str_update(ht, \"response_code:protected\", sizeof(\"response_code:protected\") - 1, &rv);\n\n\tZVAL_BOOL(&rv, response->flags & YAF_RESPONSE_HEADER_SENT);\n\tzend_hash_str_update(ht, \"header_sent:protected\", sizeof(\"header_sent:protected\") - 1, &rv);\n\n\tif (response->std.ce == yaf_response_http_ce) {\n\t\tif (response->header) {\n\t\t\tZVAL_ARR(&rv, response->header);\n\t\t\tGC_ADDREF(response->header);\n\t\t} else {\n\t\t\tarray_init(&rv);\n\t\t}\n\t\tzend_hash_str_update(ht, \"header:protected\", sizeof(\"header:protected\") - 1, &rv);\n\n\t\tif (response->body) {\n\t\t\tZVAL_ARR(&rv, response->body);\n\t\t\tGC_ADDREF(response->body);\n\t\t} else {\n\t\t\tarray_init(&rv);\n\t\t}\n\t\tzend_hash_str_update(ht, \"body:protected\", sizeof(\"body:protected\") - 1, &rv);\n\t}\n\n\treturn ht;\n}\n/* }}} */\n\nstatic zval *yaf_response_read_property(yaf_object *obj, void *name, int type, void **cache_slot, zval *rv) /* {{{ */ {\n\tzend_string *member;\n\tyaf_response_object *response = php_yaf_response_fetch_object(yaf_strip_obj(obj));\n\n#if PHP_VERSION_ID < 80000\n\tif (UNEXPECTED(Z_TYPE_P((zval*)name) != IS_STRING)) {\n\t\treturn &EG(uninitialized_zval);\n\t}\n\tmember = Z_STR_P((zval*)name);\n#else\n\tmember = (zend_string*)name;\n#endif\n\n\tif (UNEXPECTED(type == BP_VAR_W || type == BP_VAR_RW)) {\n\t\tphp_error_docref(NULL, E_WARNING,\n\t\t\t\t\"Indirect modification of Yaf_Response internal property '%s' is not allowed\", ZSTR_VAL(member));\n\t\treturn &EG(error_zval);\n\t}\n\t\n\tif (zend_string_equals_literal(member, \"response_code\")) {\n\t\tZVAL_LONG(rv, response->code);\n\t\treturn rv;\n\t}\n\n\treturn std_object_handlers.read_property(obj, name, type, cache_slot, rv);\n}\n/* }}} */\n\nstatic YAF_WRITE_HANDLER yaf_response_write_property(yaf_object *obj, void *name, zval *value, void **cache_slot) /* {{{ */ {\n\tzend_string *member;\n\tyaf_response_object *response = php_yaf_response_fetch_object(yaf_strip_obj(obj));\n\n#if PHP_VERSION_ID < 80000\n\tif (UNEXPECTED(Z_TYPE_P((zval*)name) != IS_STRING)) {\n\t\tYAF_WHANDLER_RET(value);\n\t}\n\tmember = Z_STR_P((zval*)name);\n#else\n\tmember = (zend_string*)name;\n#endif\n\t\n\tif (zend_string_equals_literal(member, \"response_code\")) {\n\t\tif (Z_TYPE_P(value) != IS_LONG) {\n\t\t\tYAF_WHANDLER_RET(value);\n\t\t}\n\t\tresponse->code = Z_LVAL_P(value);\n\t\tYAF_WHANDLER_RET(value);\n\t}\n\n\tif (zend_string_equals_literal(member, \"body\") ||\n\t\tzend_string_equals_literal(member, \"header\") ||\n\t\tzend_string_equals_literal(member, \"header_sent\")) {\n\t\tphp_error_docref(NULL, E_WARNING,\n\t\t\t\t\"Modification of Yaf_Reponse internal property '%s' is not allowed\", ZSTR_VAL(member));\n\t\tYAF_WHANDLER_RET(value);\n\t}\n\n\treturn std_object_handlers.write_property(obj, name, value, cache_slot);\n}\n/* }}} */\n\nstatic zend_object *yaf_response_new(zend_class_entry *ce) /* {{{ */ {\n\tyaf_response_object *response = emalloc(sizeof(yaf_response_object) + zend_object_properties_size(ce));\n\t\n\tmemset(response, 0, XtOffsetOf(yaf_response_object, std));\n\tzend_object_std_init(&response->std, ce);\n\tresponse->std.handlers = &yaf_response_obj_handlers;\n\tif (UNEXPECTED(ce->default_properties_count)) {\n\t\tobject_properties_init(&response->std, ce);\n\t}\n\n\treturn &response->std;\n}\n/* }}} */\n\nstatic void yaf_response_object_free(zend_object *object) /* {{{ */ {\n\tyaf_response_object *response = php_yaf_response_fetch_object(object);\n\n\tif (response->header) {\n\t\tif (GC_DELREF(response->header) == 0) {\n\t\t\tGC_REMOVE_FROM_BUFFER(response->header);\n\t\t\tzend_array_destroy(response->header);\n\t\t}\n\t}\n\tif (response->body) {\n\t\tif (GC_DELREF(response->body) == 0) {\n\t\t\tGC_REMOVE_FROM_BUFFER(response->body);\n\t\t\tzend_array_destroy(response->body);\n\t\t}\n\t}\n\tif (response->properties) {\n\t\tif (GC_DELREF(response->properties) == 0) {\n\t\t\tGC_REMOVE_FROM_BUFFER(response->properties);\n\t\t\tzend_array_destroy(response->properties);\n\t\t}\n\t}\n\tzend_object_std_dtor(object);\n}\n/* }}} */\n\nvoid yaf_response_instance(yaf_response_t *this_ptr, char *sapi_name) /* {{{ */ {\n\tzend_class_entry *ce;\n\n\tif (!yaf_slip_equal(sapi_name, \"cli\", 4)) {\n\t\tce = yaf_response_http_ce;\n\t} else {\n\t\tce = yaf_response_cli_ce;\n\t}\n\t\n\tZVAL_OBJ(this_ptr, yaf_response_new(ce));\n}\n/* }}} */\n\nstatic int yaf_response_alter_body_ex(yaf_response_object *response, zend_string *name, zend_string *body, int flag) /* {{{ */ {\n\tzval rv;\n\n\tif (!response->body) {\n\t\tALLOC_HASHTABLE(response->body);\n\t\tzend_hash_init(response->body, 8, NULL, ZVAL_PTR_DTOR, 0);\n\t\tYAF_ALLOW_VIOLATION(response->body);\nupdate:\n\t\tZVAL_STR_COPY(&rv, body);\n\t\tif (EXPECTED(name == NULL)) {\n\t\t\treturn zend_hash_update(response->body, YAF_KNOWN_STR(YAF_CONTENT), &rv) != NULL;\n\t\t} else {\n\t\t\treturn zend_hash_update(response->body, name, &rv) != NULL;\n\t\t}\n\t} else {\n\t\tzval *pzval;\n\t\tzend_string *obody;\n\n\t\tif (EXPECTED(name == NULL)) {\n\t\t\tpzval = zend_hash_find(response->body, YAF_KNOWN_STR(YAF_CONTENT));\n\t\t} else {\n\t\t\tpzval = zend_hash_find(response->body, name);\n\t\t}\n\t\tif (EXPECTED(pzval == NULL) || flag == YAF_RESPONSE_REPLACE) {\n\t\t\tgoto update;\n\t\t} else if (Z_TYPE_P(pzval) == IS_STRING) {\n\t\t\tzend_string *result;\n\t\t\tobody = Z_STR_P(pzval);\n\t\t\tresult = zend_string_alloc(ZSTR_LEN(obody) + ZSTR_LEN(body), 0);\n\t\t\tif (flag == YAF_RESPONSE_APPEND) {\n\t\t\t\tmemcpy(ZSTR_VAL(result), ZSTR_VAL(obody), ZSTR_LEN(obody));\n\t\t\t\tmemcpy(ZSTR_VAL(result) + ZSTR_LEN(obody), ZSTR_VAL(body), ZSTR_LEN(body) + 1);\n\t\t\t} else {\n\t\t\t\tmemcpy(ZSTR_VAL(result), ZSTR_VAL(body), ZSTR_LEN(body));\n\t\t\t\tmemcpy(ZSTR_VAL(result) + ZSTR_LEN(body), ZSTR_VAL(obody), ZSTR_LEN(obody) + 1);\n\t\t\t}\n\t\t\tzend_string_release(obody);\n\t\t\tZVAL_STR(pzval, result);\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\n/* }}} */\n\nint yaf_response_alter_body(yaf_response_object *response, zend_string *name, zend_string *body, int flag) /* {{{ */ {\n\tzend_class_entry *ce = response->std.ce;\n\tif (EXPECTED(ce == yaf_response_http_ce || ce == yaf_response_cli_ce)) {\n\t\treturn yaf_response_alter_body_ex(response, name, body, flag);\n\t} else {\n\t\tzval obj, arg, ret;\n\n\t\tZVAL_OBJ(&obj, &response->std);\n\t\tZVAL_STR(&arg, body);\n#if PHP_VERSION_ID < 80000\n\t\tzend_call_method_with_1_params(&obj, ce, NULL, \"appendbody\", &ret, &arg);\n#else\n        zend_call_method_with_1_params(Z_OBJ(obj), ce, NULL, \"appendbody\", &ret, &arg);\n#endif\n\t\tif (UNEXPECTED(EG(exception))) {\n\t\t\treturn 0;\n\t\t}\n\t\tzval_ptr_dtor(&ret);\n\t\treturn 1;\n\t}\n}\n/* }}} */\n\nstatic void yaf_response_clear_body_ex(yaf_response_object *response, zend_string *name) /* {{{ */ {\n\tif (response->body) {\n\t\tif (name) {\n\t\t\tzend_hash_del(response->body, name);\n\t\t} else {\n\t\t\tzend_hash_clean(response->body);\n\t\t}\n\t}\n}\n/* }}} */\n\nint yaf_response_clear_body(yaf_response_object *response, zend_string *name) /* {{{ */ {\n\tzend_class_entry *ce = response->std.ce;\n\tif (EXPECTED(ce == yaf_response_http_ce || ce == yaf_response_cli_ce)) {\n\t\tyaf_response_clear_body_ex(response, name);\n\t\treturn 1;\n\t} else {\n\t\tzval obj, arg, ret;\n\n\t\tZVAL_OBJ(&obj, &response->std);\n\t\tif (name) {\n\t\t\tZVAL_STR(&arg, name);\n#if PHP_VERSION_ID < 80000\n            zend_call_method_with_1_params(&obj, ce, NULL, \"clearbody\", &ret, &arg);\n#else\n            zend_call_method_with_1_params(Z_OBJ(obj), ce, NULL, \"clearbody\", &ret, &arg);\n#endif\n\t\t} else {\n#if PHP_VERSION_ID < 80000\n\t\t\tzend_call_method_with_0_params(&obj, ce, NULL, \"clearbody\", &ret);\n#else\n            zend_call_method_with_0_params(Z_OBJ(obj), ce, NULL, \"clearbody\", &ret);\n#endif\n\t\t}\n\t\tif (UNEXPECTED(EG(exception))) {\n\t\t\treturn 0;\n\t\t}\n\t\tzval_ptr_dtor(&ret);\n\t\treturn 1;\n\t}\n}\n/* }}} */\n\nzval *yaf_response_get_body(yaf_response_object *response, zend_string *name) /* {{{ */{\n\tif (response->body) {\n\t\treturn zend_hash_find(response->body, name);\n\t}\n\treturn NULL;\n}\n/* }}} */\n\nstatic int yaf_response_send(yaf_response_object *response) /* {{{ */ {\n\tzval *val;\n\n\tif (response->body) {\n\t\tZEND_HASH_FOREACH_VAL(response->body, val) {\n\t\t\tif (UNEXPECTED(Z_TYPE_P(val) != IS_STRING)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tphp_write(Z_STRVAL_P(val), Z_STRLEN_P(val));\n\t\t} ZEND_HASH_FOREACH_END();\n\t}\n\n\treturn 1;\n}\n/* }}} */\n\nint yaf_response_response(yaf_response_object *response) /* {{{ */ {\n\tzend_class_entry *ce = response->std.ce;\n\tif (EXPECTED(ce == yaf_response_http_ce)) {\n\t\treturn yaf_response_http_send(response);\n\t} else if (ce == yaf_response_cli_ce) {\n\t\treturn yaf_response_send(response);\n\t} else {\n\t\tzval obj, ret;\n\n\t\tZVAL_OBJ(&obj, &response->std);\n#if PHP_VERSION_ID < 80000\n\t\tzend_call_method_with_0_params(&obj, ce, NULL, \"response\", &ret);\n#else\n        zend_call_method_with_0_params(Z_OBJ(obj), ce, NULL, \"response\", &ret);\n#endif\n\t\tif (UNEXPECTED(EG(exception))) {\n\t\t\treturn 0;\n\t\t}\n\t\tzval_ptr_dtor(&ret);\n\t\treturn 1;\n\t}\n}\n/* }}} */\n\n/** {{{ proto private Yaf_Response_Abstract::__construct()\n*/\nPHP_METHOD(yaf_response, __construct) {\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Response_Abstract::appendBody($body, $name = NULL)\n*/\nPHP_METHOD(yaf_response, appendBody) {\n\tzend_string *name = NULL;\n\tzend_string *body;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S|S\", &body, &name) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (yaf_response_alter_body_ex(Z_YAFRESPONSEOBJ_P(getThis()), name, body, YAF_RESPONSE_APPEND)) {\n\t\tRETURN_ZVAL(getThis(), 1, 0);\n\t}\n\n\tRETURN_FALSE;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Response_Abstract::prependBody($body, $name = NULL)\n*/\nPHP_METHOD(yaf_response, prependBody) {\n\tzend_string\t*name = NULL;\n\tzend_string *body;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S|S\", &body, &name) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (yaf_response_alter_body(Z_YAFRESPONSEOBJ_P(getThis()), name, body, YAF_RESPONSE_PREPEND)) {\n\t\tRETURN_ZVAL(getThis(), 1, 0);\n\t}\n\n\tRETURN_FALSE;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Response_Abstract::setHeader($name, $value, $replace = 0)\n*/\nPHP_METHOD(yaf_response, setHeader) {\n\tRETURN_FALSE;\n}\n/* }}} */\n\n/** {{{ proto protected Yaf_Response_Abstract::setAllHeaders(void)\n*/\nPHP_METHOD(yaf_response, setAllHeaders) {\n\tRETURN_FALSE;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Response_Abstract::getHeader(void)\n*/\nPHP_METHOD(yaf_response, getHeader) {\n\tRETURN_NULL();\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Response_Abstract::clearHeaders(void)\n*/\nPHP_METHOD(yaf_response, clearHeaders) {\n\tRETURN_FALSE;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Response_Abstract::setRedirect(string $url)\n*/\nPHP_METHOD(yaf_response, setRedirect) {\n\tzend_string *url;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S\", &url) == FAILURE) {\n\t\treturn;\n\t}\n\n\tRETURN_BOOL(yaf_response_set_redirect(Z_YAFRESPONSEOBJ_P(getThis()), url));\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Response_Abstract::setBody($body, $name = NULL)\n*/\nPHP_METHOD(yaf_response, setBody) {\n\tzend_string\t*name = NULL;\n\tzend_string *body;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S|S\", &body, &name) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (yaf_response_alter_body(Z_YAFRESPONSEOBJ_P(getThis()), name, body, YAF_RESPONSE_REPLACE)) {\n\t\tRETURN_ZVAL(getThis(), 1, 0);\n\t}\n\n\tRETURN_FALSE;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Response_Abstract::clearBody(string $name = NULL)\n*/\nPHP_METHOD(yaf_response, clearBody) {\n\tzend_string *name = NULL;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"|S!\", &name) == FAILURE) {\n\t\treturn;\n\t}\n\tyaf_response_clear_body_ex(Z_YAFRESPONSEOBJ_P(getThis()), name);\n\n\tRETURN_ZVAL(getThis(), 1, 0);\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Response_Abstract::getBody(string $name = NULL)\n */\nPHP_METHOD(yaf_response, getBody) {\n\tzval *body;\n\tzval *name = NULL;\n\tyaf_response_object *response = Z_YAFRESPONSEOBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"|z\", &name) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (!name) {\n\t\tbody = yaf_response_get_body(response, YAF_KNOWN_STR(YAF_CONTENT));\n\t} else {\n\t\tif (ZVAL_IS_NULL(name)) {\n\t\t\tif (response->body) {\n\t\t\t\tRETVAL_ARR(response->body);\n\t\t\t\tGC_ADDREF(response->body);\n\t\t\t\treturn;\n\t\t\t}\n#if PHP_VERSION_ID < 70400\n\t\t\tarray_init(return_value);\n\t\t\treturn;\n#else\n\t\t\tRETURN_EMPTY_ARRAY();\n#endif\n\t\t} else {\n\t\t\tzend_string *t = zval_get_string(name);\n\t\t\tbody = yaf_response_get_body(response, t);\n\t\t\tzend_string_release(t);\n\t\t}\n\t}\n\n\tif (body) {\n\t\tRETURN_ZVAL(body, 1, 0);\n\t}\n\n\tRETURN_EMPTY_STRING();\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Response_Abstract::response(void)\n */\nPHP_METHOD(yaf_response, response) {\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\tRETURN_BOOL(yaf_response_send(Z_YAFRESPONSEOBJ_P(getThis())));\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Response_Abstract::__toString(void)\n */\nPHP_METHOD(yaf_response, __toString) {\n\tzval rv;\n\tyaf_response_object *response = Z_YAFRESPONSEOBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (response->body) {\n\t\tZVAL_ARR(&rv, response->body);\n#if PHP_VERSION_ID < 80000\n\t\tphp_implode(ZSTR_EMPTY_ALLOC(), &rv, return_value);\n#else\n        php_implode(ZSTR_EMPTY_ALLOC(), Z_ARR(rv), return_value);\n#endif\n\t} else {\n\t\tRETURN_EMPTY_STRING();\n\t}\n}\n/* }}} */\n\n/** {{{ yaf_response_methods\n*/\nzend_function_entry yaf_response_methods[] = {\n\tPHP_ME(yaf_response, __construct, arginfo_class_Yaf_Response_Abstract___construct, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)\n\tPHP_ME(yaf_response, __toString, arginfo_class_Yaf_Response_Abstract___toString, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_response, setBody, arginfo_class_Yaf_Response_Abstract_setBody, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_response, appendBody, arginfo_class_Yaf_Response_Abstract_appendBody, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_response, prependBody, arginfo_class_Yaf_Response_Abstract_prependBody, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_response, clearBody, arginfo_class_Yaf_Response_Abstract_clearBody, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_response, getBody, arginfo_class_Yaf_Response_Abstract_getBody, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_response, response, arginfo_class_Yaf_Response_Abstract_response, ZEND_ACC_PUBLIC)\n\t{NULL, NULL, NULL}\n};\n/* }}} */\n\n/** {{{ YAF_STARTUP_FUNCTION\n*/\nYAF_STARTUP_FUNCTION(response) {\n\tzend_class_entry ce;\n\n\tYAF_INIT_CLASS_ENTRY(ce, \"Yaf_Response_Abstract\", \"Yaf\\\\Response_Abstract\", yaf_response_methods);\n\n\tyaf_response_ce = zend_register_internal_class_ex(&ce, NULL);\n\tyaf_response_ce->create_object = yaf_response_new;\n#if PHP_VERSION_ID < 80100\n\tyaf_response_ce->ce_flags |= ZEND_ACC_EXPLICIT_ABSTRACT_CLASS;\n\tyaf_response_ce->serialize = zend_class_serialize_deny;\n\tyaf_response_ce->unserialize = zend_class_unserialize_deny;\n#else\n\tyaf_response_ce->ce_flags |= ZEND_ACC_EXPLICIT_ABSTRACT_CLASS | ZEND_ACC_NOT_SERIALIZABLE;\n#endif\n\n\tmemcpy(&yaf_response_obj_handlers, zend_get_std_object_handlers(), sizeof(zend_object_handlers));\n\tyaf_response_obj_handlers.offset = XtOffsetOf(yaf_response_object, std);\n\tyaf_response_obj_handlers.free_obj = yaf_response_object_free;\n\tyaf_response_obj_handlers.clone_obj = NULL;\n\tyaf_response_obj_handlers.get_gc = yaf_fake_get_gc;\n\tyaf_response_obj_handlers.get_properties = yaf_response_get_properties;\n\tyaf_response_obj_handlers.read_property = (zend_object_read_property_t)yaf_response_read_property;\n\tyaf_response_obj_handlers.write_property = (zend_object_write_property_t)yaf_response_write_property;\n\n\tzend_declare_class_constant_string(yaf_response_ce, ZEND_STRL(YAF_RESPONSE_PROPERTY_NAME_DEFAULTBODYNAME), YAF_KNOWN_CHARS(YAF_CONTENT));\n\n\tYAF_STARTUP(response_http);\n\tYAF_STARTUP(response_cli);\n\n\treturn SUCCESS;\n}\n/* }}} */\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_response.h",
          "type": "blob",
          "size": 2.474609375,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifndef PHP_YAF_RESPONSE_H\n#define PHP_YAF_RESPONSE_H\n\n#define YAF_RESPONSE_PROPERTY_NAME_DEFAULTBODYNAME  \"DEFAULT_BODY\"\n\n#define YAF_RESPONSE_REPLACE 0\n#define YAF_RESPONSE_PREPEND 1\n#define YAF_RESPONSE_APPEND  2\n\n#define YAF_RESPONSE_HEADER_SENT  (1<<0)\n\nextern zend_class_entry *yaf_response_ce;\nextern zend_class_entry *yaf_response_http_ce;\nextern zend_class_entry *yaf_response_cli_ce;\n\ntypedef struct {\n\tzend_uchar   flags;\n\tunsigned int code;\n\tzend_array  *header;\n\tzend_array  *body;\n\tzend_array  *properties;\n\tzend_object  std;\n} yaf_response_object;\n\n#define Z_YAFRESPONSEOBJ(zv)    (php_yaf_response_fetch_object(Z_OBJ(zv)))\n#define Z_YAFRESPONSEOBJ_P(zv)  Z_YAFRESPONSEOBJ(*zv)\n\nstatic zend_always_inline yaf_response_object *php_yaf_response_fetch_object(zend_object *obj) {\n\treturn (yaf_response_object *)((char*)(obj) - XtOffsetOf(yaf_response_object, std));\n}\n\nvoid yaf_response_instance(yaf_response_t *this_ptr, char *sapi_name);\nint yaf_response_alter_body(yaf_response_object *response, zend_string *name, zend_string *body, int flag);\nint yaf_response_response(yaf_response_object *response);\nint yaf_response_clear_body(yaf_response_object *response, zend_string *name);\nint yaf_response_set_redirect(yaf_response_object *response, zend_string *url);\n\n#define yaf_response_append_body(r, n, v)  yaf_response_alter_body(r, n, v, YAF_RESPONSE_APPEND)\n\nYAF_STARTUP_FUNCTION(response);\n\n#endif\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_response.stub.php",
          "type": "blob",
          "size": 1.7412109375,
          "content": "<?php\n/** @generate-legacy-arginfo */\n\nabstract class Yaf_Response_Abstract { \n\t/* constants */\n\n\t/* properties */\n\tprotected array $_header = NULL;\n\tprotected array $_body = NULL;\n\tprotected bool $_sendheader = false;\n\n\t/* methods */\n\tpublic function __construct() {}\n\n\t/**\n\t * @param string $body\n\t * @param string $name\n\t * @return Yaf_Response_Abstract|NULL|FALSE\n\t */\n\tpublic function setBody($body, $name = NULL) {}\n\n\t/**\n\t * @param string $body\n\t * @param string $name\n\t * @return Yaf_Response_Abstract|NULL|FALSE\n\t */\n\tpublic function appendBody($body, $name = NULL) {}\n\n\t/**\n\t * @param string $body\n\t * @param string $name\n\t * @return Yaf_Response_Abstract|NULL|FALSE\n\t */\n\tpublic function prependBody($body, $name = NULL) {}\n\n\t/**\n\t * @param string $name\n\t * @return Yaf_Response_Abstract|NULL\n\t */\n\tpublic function clearBody($name = NULL) {}\n\n\tpublic function getBody(string $name = NULL):mixed {}\n\n\tpublic function setRedirect(string $url):?bool {}\n\n\t/**\n\t * @return bool\n\t */\n\tpublic function response() {}\n\n\tpublic function __toString():string {}\n}\n\nclass Yaf_Response_Http extends Yaf_Response_Abstract { \n\t/* constants */\n\n\t/* properties */\n\tprotected bool $_sendheader = true;\n\tprotected int $_response_code = 200;\n\n\t/* methods */\n\tpublic function setHeader(string $name, string $value, bool $replace = 0, int $response_code = 0):?bool {}\n\t\n\tprotected function setAllHeaders(array $headers):?bool {}\n\n\tpublic function getHeader(string $name = NULL):mixed {}\n\n\t/**\n\t * @return Yaf_Response_Http|NULL|FALSE\n\t */\n\tpublic function clearHeaders():object|null|false {}\n\n\tpublic function setRedirect(string $url):?bool {}\n\n\tpublic function response():?bool {}\n}\n\nclass Yaf_Response_Cli extends Yaf_Response_Abstract { \n\t/* constants */\n\n\t/* properties */\n\n\t/* methods */\n}\n"
        },
        {
          "name": "yaf_response_arginfo.h",
          "type": "blob",
          "size": 2.28515625,
          "content": "/* This is a generated file, edit the .stub.php file instead.\n * Stub hash: 6d9544072e642f53747bc52f01c4a4a52aa0e3e5 */\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Response_Abstract___construct, 0, 0, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Response_Abstract_setBody, 0, 0, 1)\n\tZEND_ARG_INFO(0, body)\n\tZEND_ARG_INFO_WITH_DEFAULT_VALUE(0, name, \"NULL\")\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Response_Abstract_appendBody arginfo_class_Yaf_Response_Abstract_setBody\n\n#define arginfo_class_Yaf_Response_Abstract_prependBody arginfo_class_Yaf_Response_Abstract_setBody\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Response_Abstract_clearBody, 0, 0, 0)\n\tZEND_ARG_INFO_WITH_DEFAULT_VALUE(0, name, \"NULL\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Response_Abstract_getBody, 0, 0, IS_MIXED, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, name, IS_STRING, 0, \"NULL\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Response_Abstract_setRedirect, 0, 1, _IS_BOOL, 1)\n\tZEND_ARG_TYPE_INFO(0, url, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Response_Abstract_response arginfo_class_Yaf_Response_Abstract___construct\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Response_Abstract___toString, 0, 0, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Response_Http_setHeader, 0, 2, _IS_BOOL, 1)\n\tZEND_ARG_TYPE_INFO(0, name, IS_STRING, 0)\n\tZEND_ARG_TYPE_INFO(0, value, IS_STRING, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, replace, _IS_BOOL, 0, \"0\")\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, response_code, IS_LONG, 0, \"0\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Response_Http_setAllHeaders, 0, 1, _IS_BOOL, 1)\n\tZEND_ARG_TYPE_INFO(0, headers, IS_ARRAY, 0)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Response_Http_getHeader arginfo_class_Yaf_Response_Abstract_getBody\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX(arginfo_class_Yaf_Response_Http_clearHeaders, 0, 0, MAY_BE_OBJECT|MAY_BE_NULL|MAY_BE_FALSE)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Response_Http_setRedirect arginfo_class_Yaf_Response_Abstract_setRedirect\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Response_Http_response, 0, 0, _IS_BOOL, 1)\nZEND_END_ARG_INFO()\n"
        },
        {
          "name": "yaf_response_legacy_arginfo.h",
          "type": "blob",
          "size": 1.8095703125,
          "content": "/* This is a generated file, edit the .stub.php file instead.\n * Stub hash: 6d9544072e642f53747bc52f01c4a4a52aa0e3e5 */\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Response_Abstract___construct, 0, 0, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Response_Abstract_setBody, 0, 0, 1)\n\tZEND_ARG_INFO(0, body)\n\tZEND_ARG_INFO(0, name)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Response_Abstract_appendBody arginfo_class_Yaf_Response_Abstract_setBody\n\n#define arginfo_class_Yaf_Response_Abstract_prependBody arginfo_class_Yaf_Response_Abstract_setBody\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Response_Abstract_clearBody, 0, 0, 0)\n\tZEND_ARG_INFO(0, name)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Response_Abstract_getBody arginfo_class_Yaf_Response_Abstract_clearBody\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Response_Abstract_setRedirect, 0, 0, 1)\n\tZEND_ARG_INFO(0, url)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Response_Abstract_response arginfo_class_Yaf_Response_Abstract___construct\n\n#define arginfo_class_Yaf_Response_Abstract___toString arginfo_class_Yaf_Response_Abstract___construct\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Response_Http_setHeader, 0, 0, 2)\n\tZEND_ARG_INFO(0, name)\n\tZEND_ARG_INFO(0, value)\n\tZEND_ARG_INFO(0, replace)\n\tZEND_ARG_INFO(0, response_code)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Response_Http_setAllHeaders, 0, 0, 1)\n\tZEND_ARG_INFO(0, headers)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Response_Http_getHeader arginfo_class_Yaf_Response_Abstract_clearBody\n\n#define arginfo_class_Yaf_Response_Http_clearHeaders arginfo_class_Yaf_Response_Abstract___construct\n\n#define arginfo_class_Yaf_Response_Http_setRedirect arginfo_class_Yaf_Response_Abstract_setRedirect\n\n#define arginfo_class_Yaf_Response_Http_response arginfo_class_Yaf_Response_Abstract___construct\n"
        },
        {
          "name": "yaf_route.stub.php",
          "type": "blob",
          "size": 2.94921875,
          "content": "<?php\n\n/** @generate-legacy-arginfo */\n\nInterface Yaf_Route_Interface {\n\t/**\n\t * @param Yaf_Request_Abstract $request\n\t * @return bool\n\t */\n\tabstract public function route($request);\n\n\t/**\n\t * @return string|bool\n\t */\n\tabstract public function assemble(array $info, array $query = NULL);\n}\n\nfinal class Yaf_Route_Static implements Yaf_Route_Interface {\n\tpublic function match(string $uri):bool {}\n\n\t/**\n\t * @param Yaf_Request_Abstract $request\n\t * @return bool\n\t */\n\tpublic function route($request) {}\n\n\tpublic function assemble(array $info, array $query = NULL):string|null|false;\n}\n\nfinal class Yaf_Route_Supervar implements Yaf_Route_Interface { \n\t/* constants */\n\n\t/* properties */\n\tprotected string $_var_name = NULL;\n\n\t/* methods */\n\tpublic function __construct(string $supervar_name) {}\n\n\t/**\n\t * @param Yaf_Request_Abstract $request\n\t * @return bool\n\t */\n    public function route($request);\n\n\tpublic function assemble(array $info, array $query = NULL):string|null|false;\n}\n\nfinal class Yaf_Route_Simple implements Yaf_Route_Interface { \n\t/* constants */\n\n\t/* properties */\n\tprotected string $controller = NULL;\n\tprotected string $module = NULL;\n\tprotected string $action = NULL;\n\n\t/* methods */\n\tpublic function __construct(string $module_name, string $controller_name, string $action_name) {}\n\n\t/**\n\t * @param Yaf_Request_Abstract $request\n\t * @return bool\n\t */\n\tpublic function route($request);\n\n\tpublic function assemble(array $info, array $query = NULL):string|null|false;\n}\n\n\nfinal class Yaf_Route_Rewrite implements Yaf_Route_Interface { \n\t/* constants */\n\n\t/* properties */\n\tprotected array $_route = NULL;\n\tprotected array $_verify = NULL;\n\n\t/* methods */\n\tpublic function __construct(string $match, array $route, array $verify = NULL) { }\n\n\tpublic function match(string $uri):?bool {}\n\n\t/**\n\t * @param Yaf_Request_Abstract $request\n\t * @return bool\n\t */\n\tpublic function route($request) {}\n\n\tpublic function assemble(array $info, array $query = NULL):string|null|false;\n}\n\nfinal class Yaf_Route_Regex implements Yaf_Route_Interface { \n\t/* constants */\n\n\t/* properties */\n\tprotected array $_route = NULL;\n\tprotected array $_maps = NULL;\n\tprotected array $_verify = NULL;\n\n\t/* methods */\n\tpublic function __construct(string $match, array $route, array $map = NULL, array $verify = NULL, string $reverse = NULL) {}\n\n\tpublic function match(string $uri):?bool {}\n\n\t/**\n\t * @param Yaf_Request_Abstract $request\n\t * @return bool\n\t */\n\tpublic function route($request) {}\n\n\tpublic function assemble(array $info, array $query = NULL):string|null|false;\n}\n\nfinal class Yaf_Route_Map implements Yaf_Route_Interface { \n\t/* constants */\n\n\t/* properties */\n\tprotected bool $_ctl_router = 1;\n\tprotected string $_delimiter = NULL;\n\n\t/* methods */\n\tpublic function __construct(bool $controller_prefer = 1, string $delimiter = \"\") {}\n\n\t/**\n\t * @param Yaf_Request_Abstract $request\n\t * @return bool\n\t */\n\tpublic function route($request) {}\n\n\tpublic function assemble(array $info, array $query = NULL):string|null|false;\n}\n"
        },
        {
          "name": "yaf_route_arginfo.h",
          "type": "blob",
          "size": 3.294921875,
          "content": "/* This is a generated file, edit the .stub.php file instead.\n * Stub hash: edc476409aa71476eecd8cef4235a0a8d64f47b3 */\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Route_Interface_route, 0, 0, 1)\n\tZEND_ARG_INFO(0, request)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Route_Interface_assemble, 0, 0, 1)\n\tZEND_ARG_TYPE_INFO(0, info, IS_ARRAY, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, query, IS_ARRAY, 0, \"NULL\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Route_Static_match, 0, 1, _IS_BOOL, 0)\n\tZEND_ARG_TYPE_INFO(0, uri, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Route_Static_route arginfo_class_Yaf_Route_Interface_route\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX(arginfo_class_Yaf_Route_Static_assemble, 0, 1, MAY_BE_STRING|MAY_BE_NULL|MAY_BE_FALSE)\n\tZEND_ARG_TYPE_INFO(0, info, IS_ARRAY, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, query, IS_ARRAY, 0, \"NULL\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Route_Supervar___construct, 0, 0, 1)\n\tZEND_ARG_TYPE_INFO(0, supervar_name, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Route_Supervar_route arginfo_class_Yaf_Route_Interface_route\n\n#define arginfo_class_Yaf_Route_Supervar_assemble arginfo_class_Yaf_Route_Static_assemble\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Route_Simple___construct, 0, 0, 3)\n\tZEND_ARG_TYPE_INFO(0, module_name, IS_STRING, 0)\n\tZEND_ARG_TYPE_INFO(0, controller_name, IS_STRING, 0)\n\tZEND_ARG_TYPE_INFO(0, action_name, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Route_Simple_route arginfo_class_Yaf_Route_Interface_route\n\n#define arginfo_class_Yaf_Route_Simple_assemble arginfo_class_Yaf_Route_Static_assemble\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Route_Rewrite___construct, 0, 0, 2)\n\tZEND_ARG_TYPE_INFO(0, match, IS_STRING, 0)\n\tZEND_ARG_TYPE_INFO(0, route, IS_ARRAY, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, verify, IS_ARRAY, 0, \"NULL\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Route_Rewrite_match, 0, 1, _IS_BOOL, 1)\n\tZEND_ARG_TYPE_INFO(0, uri, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Route_Rewrite_route arginfo_class_Yaf_Route_Interface_route\n\n#define arginfo_class_Yaf_Route_Rewrite_assemble arginfo_class_Yaf_Route_Static_assemble\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Route_Regex___construct, 0, 0, 2)\n\tZEND_ARG_TYPE_INFO(0, match, IS_STRING, 0)\n\tZEND_ARG_TYPE_INFO(0, route, IS_ARRAY, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, map, IS_ARRAY, 0, \"NULL\")\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, verify, IS_ARRAY, 0, \"NULL\")\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, reverse, IS_STRING, 0, \"NULL\")\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Route_Regex_match arginfo_class_Yaf_Route_Rewrite_match\n\n#define arginfo_class_Yaf_Route_Regex_route arginfo_class_Yaf_Route_Interface_route\n\n#define arginfo_class_Yaf_Route_Regex_assemble arginfo_class_Yaf_Route_Static_assemble\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Route_Map___construct, 0, 0, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, controller_prefer, _IS_BOOL, 0, \"1\")\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, delimiter, IS_STRING, 0, \"\\\"\\\"\")\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Route_Map_route arginfo_class_Yaf_Route_Interface_route\n\n#define arginfo_class_Yaf_Route_Map_assemble arginfo_class_Yaf_Route_Static_assemble\n"
        },
        {
          "name": "yaf_route_legacy_arginfo.h",
          "type": "blob",
          "size": 2.5537109375,
          "content": "/* This is a generated file, edit the .stub.php file instead.\n * Stub hash: edc476409aa71476eecd8cef4235a0a8d64f47b3 */\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Route_Interface_route, 0, 0, 1)\n\tZEND_ARG_INFO(0, request)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Route_Interface_assemble, 0, 0, 1)\n\tZEND_ARG_INFO(0, info)\n\tZEND_ARG_INFO(0, query)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Route_Static_match, 0, 0, 1)\n\tZEND_ARG_INFO(0, uri)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Route_Static_route arginfo_class_Yaf_Route_Interface_route\n\n#define arginfo_class_Yaf_Route_Static_assemble arginfo_class_Yaf_Route_Interface_assemble\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Route_Supervar___construct, 0, 0, 1)\n\tZEND_ARG_INFO(0, supervar_name)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Route_Supervar_route arginfo_class_Yaf_Route_Interface_route\n\n#define arginfo_class_Yaf_Route_Supervar_assemble arginfo_class_Yaf_Route_Interface_assemble\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Route_Simple___construct, 0, 0, 3)\n\tZEND_ARG_INFO(0, module_name)\n\tZEND_ARG_INFO(0, controller_name)\n\tZEND_ARG_INFO(0, action_name)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Route_Simple_route arginfo_class_Yaf_Route_Interface_route\n\n#define arginfo_class_Yaf_Route_Simple_assemble arginfo_class_Yaf_Route_Interface_assemble\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Route_Rewrite___construct, 0, 0, 2)\n\tZEND_ARG_INFO(0, match)\n\tZEND_ARG_INFO(0, route)\n\tZEND_ARG_INFO(0, verify)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Route_Rewrite_match arginfo_class_Yaf_Route_Static_match\n\n#define arginfo_class_Yaf_Route_Rewrite_route arginfo_class_Yaf_Route_Interface_route\n\n#define arginfo_class_Yaf_Route_Rewrite_assemble arginfo_class_Yaf_Route_Interface_assemble\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Route_Regex___construct, 0, 0, 2)\n\tZEND_ARG_INFO(0, match)\n\tZEND_ARG_INFO(0, route)\n\tZEND_ARG_INFO(0, map)\n\tZEND_ARG_INFO(0, verify)\n\tZEND_ARG_INFO(0, reverse)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Route_Regex_match arginfo_class_Yaf_Route_Static_match\n\n#define arginfo_class_Yaf_Route_Regex_route arginfo_class_Yaf_Route_Interface_route\n\n#define arginfo_class_Yaf_Route_Regex_assemble arginfo_class_Yaf_Route_Interface_assemble\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Route_Map___construct, 0, 0, 0)\n\tZEND_ARG_INFO(0, controller_prefer)\n\tZEND_ARG_INFO(0, delimiter)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Route_Map_route arginfo_class_Yaf_Route_Interface_route\n\n#define arginfo_class_Yaf_Route_Map_assemble arginfo_class_Yaf_Route_Interface_assemble\n"
        },
        {
          "name": "yaf_router.c",
          "type": "blob",
          "size": 12.1376953125,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include \"php.h\"\n#include \"Zend/zend_interfaces.h\"\n\n#include \"php_yaf.h\"\n#include \"yaf_namespace.h\"\n#include \"yaf_exception.h\"\n#include \"yaf_application.h\" /* for yaf_application_is_module_name */\n#include \"yaf_request.h\" /* for yaf_request_set_routed */ \n#include \"yaf_router.h\"\n#include \"yaf_config.h\"\n\n#if PHP_MAJOR_VERSION > 7\n#include \"yaf_router_arginfo.h\"\n#else\n#include \"yaf_router_legacy_arginfo.h\"\n#endif\n\n#include \"routes/yaf_route_interface.h\"\n#include \"routes/yaf_route_static.h\"\n#include \"routes/yaf_route_map.h\"\n#include \"routes/yaf_route_rewrite.h\"\n#include \"routes/yaf_route_regex.h\"\n#include \"routes/yaf_route_supervar.h\"\n#include \"routes/yaf_route_simple.h\"\n\nzend_class_entry *yaf_router_ce;\nstatic zend_object_handlers yaf_router_obj_handlers;\n\nstatic zend_object *yaf_router_new(zend_class_entry *ce) /* {{{ */ {\n\tyaf_router_object *router = emalloc(sizeof(yaf_router_object) + zend_object_properties_size(yaf_router_ce));\n\n\tzend_object_std_init(&router->std, ce);\n\trouter->std.handlers = &yaf_router_obj_handlers;\n\n\tzend_hash_init(&router->routes, 8, NULL, ZVAL_PTR_DTOR, 0);\n\tZVAL_NULL(&router->current);\n\trouter->properties = NULL;\n\n\treturn &router->std;\n}\n/* }}} */\n\nstatic void yaf_router_object_free(zend_object *object) /* {{{ */ {\n\tyaf_router_object *router = php_yaf_router_fetch_object(object);\n\n\tzend_hash_destroy(&router->routes);\n\tif (router->properties) {\n\t\tif (GC_DELREF(router->properties) == 0) {\n\t\t\tGC_REMOVE_FROM_BUFFER(router->properties);\n\t\t\tzend_array_destroy(router->properties);\n\t\t}\n\t}\n\tzend_object_std_dtor(object);\n}\n/* }}} */\n\nstatic HashTable *yaf_router_get_properties(yaf_object *obj) /* {{{ */ {\n\tzval rv;\n\tHashTable *ht;\n\tyaf_router_object *router = php_yaf_router_fetch_object(yaf_strip_obj(obj));\n\n\tif (!router->properties) {\n\t\tALLOC_HASHTABLE(router->properties);\n\t\tzend_hash_init(router->properties, 2, NULL, ZVAL_PTR_DTOR, 0);\n\t\tYAF_ALLOW_VIOLATION(router->properties);\n\t}\n\n\tht = router->properties;\n\tZVAL_ARR(&rv, zend_array_dup(&router->routes));\n\tzend_hash_str_update(ht, \"routes:protected\", sizeof(\"routes:protected\") - 1, &rv);\n\n\tZVAL_COPY(&rv, &router->current);\n\tzend_hash_str_update(ht, \"current:protected\", sizeof(\"current:protected\") - 1, &rv);\n\n\treturn ht;\n}\n/* }}} */\n\nvoid yaf_router_init(yaf_router_object *router) /* {{{ */ {\n\tzval route;\n\tyaf_application_object *app = yaf_application_instance();\n\n\tif (app == NULL || app->default_route == NULL) {\nstatic_route:\n\t\tobject_init_ex(&route, yaf_route_static_ce);\n\t} else {\n\t\tif (UNEXPECTED(!yaf_route_instance(&route, app->default_route))) {\n\t\t\tOBJ_RELEASE(Z_OBJ(route));\n\t\t\tphp_error_docref(NULL, E_WARNING,\n\t\t\t\t\t\"Unable to initialize default route, use %s instead\", ZSTR_VAL(yaf_route_static_ce->name));\n\t\t\tgoto static_route;\n\t\t}\n\t}\n\tzend_hash_str_update(&router->routes, \"_default\", sizeof(\"_default\") - 1, &route);\n}\n/* }}} */\n\nvoid yaf_router_instance(yaf_router_t *this_ptr) /* {{{ */ {\n\tZVAL_OBJ(this_ptr, yaf_router_new(yaf_router_ce));\n\tyaf_router_init(Z_YAFROUTEROBJ_P(this_ptr));\n}\n/** }}} */\n\nZEND_HOT int yaf_router_route(yaf_router_object *router, yaf_request_t *request) /* {{{ */ {\n\tzend_string *key;\n\tzend_ulong  idx;\n\tyaf_route_t *route;\n\tHashTable *routes = &router->routes;\n\n\tZEND_HASH_REVERSE_FOREACH_KEY_VAL(routes, idx, key, route) {\n\t\tif (Z_OBJCE_P(route) == yaf_route_static_ce) {\n\t\t\tyaf_route_static_route(route, request);\n\t\t} else if (Z_OBJCE_P(route) == yaf_route_map_ce) {\n\t\t\tif (!yaf_route_map_route(route, request)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t} else if (Z_OBJCE_P(route) == yaf_route_rewrite_ce) {\n\t\t\tif (!yaf_route_rewrite_route(route, request)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t} else if (UNEXPECTED(Z_OBJCE_P(route) == yaf_route_regex_ce)) {\n\t\t\tif (!yaf_route_regex_route(route, request)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t} else if (UNEXPECTED(Z_OBJCE_P(route) == yaf_route_supervar_ce)) {\n\t\t\tif (!yaf_route_supervar_route(route, request)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t} else if (UNEXPECTED(Z_OBJCE_P(route) == yaf_route_simple_ce)) {\n\t\t\tif (!yaf_route_simple_route(route, request)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t} else {\n\t\t\tzval ret;\n#if PHP_VERSION_ID < 80000\n\t\t\tzend_call_method_with_1_params(route, Z_OBJCE_P(route), NULL, \"route\", &ret, request);\n#else\n            zend_call_method_with_1_params(Z_OBJ_P(route), Z_OBJCE_P(route), NULL, \"route\", &ret, request);\n#endif\n\t\t\tif (Z_TYPE(ret) != IS_TRUE && (Z_TYPE(ret) != IS_LONG || !Z_LVAL(ret))) {\n\t\t\t\tzval_ptr_dtor(&ret);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tif (key) {\n\t\t\tZVAL_STR(&router->current, key);\n\t\t} else {\n\t\t\tZVAL_LONG(&router->current, idx);\n\t\t}\n\n\t\tyaf_request_set_routed(Z_YAFREQUESTOBJ_P(request), 1);\n\t\treturn 1;\n\t} ZEND_HASH_FOREACH_END();\n\n\treturn 0;\n}\n/* }}} */\n\nvoid yaf_router_parse_parameters(const char *str, size_t len, zval *params) /* {{{ */ {\n\tchar *k, *v;\n\tuint32_t l;\n\tzval *zv, rv;\n\n\tarray_init(params);\n\n\tif (UNEXPECTED(len == 0)) {\n\t\treturn;\n\t}\n\n\tZVAL_NULL(&rv);\n\twhile (1) {\n\t\tif ((k = memchr(str, YAF_ROUTER_URL_DELIMIETER, len))) {\n\t\t\tl = k++ - str;\n\t\t\tif (l) {\n\t\t\t\tzv = zend_hash_str_update(Z_ARRVAL_P(params), str, l, &rv);\n\t\t\t\tlen -= k - str;\n\t\t\t\tif ((v = memchr(k, YAF_ROUTER_URL_DELIMIETER, len))) {\n\t\t\t\t\tif (v - k) {\n\t\t\t\t\t\tZVAL_STRINGL(zv, k, v - k);\n\t\t\t\t\t}\n\t\t\t\t\tstr = v + 1;\n\t\t\t\t\tlen -= str - k;\n\t\t\t\t\tif (len) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else if (len) {\n\t\t\t\t\tZVAL_STRINGL(zv, k, len);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstr = k;\n\t\t\t\tlen--;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t} else if (len) {\n\t\t\tzend_hash_str_update(Z_ARRVAL_P(params), str, len, &rv);\n\t\t}\n\t\treturn;\n\t}\n}\n/* }}} */\n\nint yaf_router_add_config(yaf_router_object *router, zend_array *configs) /* {{{ */ {\n\tzval rv;\n\tzend_ulong idx;\n\tzend_string *key;\n\tzval *entry;\n\n\tif (UNEXPECTED(configs == NULL)) {\n\t\treturn 0;\n\t}\n\n\tZEND_HASH_FOREACH_KEY_VAL(configs, idx, key, entry) {\n\t\tif (Z_TYPE_P(entry) != IS_ARRAY) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (UNEXPECTED(!yaf_route_instance(&rv, Z_ARRVAL_P(entry)))) {\n\t\t\tif (key) {\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"Unable to initialize route named '%s'\", ZSTR_VAL(key));\n\t\t\t} else {\n\t\t\t\tphp_error_docref(NULL, E_WARNING, \"Unable to initialize route at index '\"ZEND_ULONG_FMT\"'\", idx);\n\t\t\t}\n\t\t\tcontinue;\n\t\t} else if (key) {\n\t\t\tzend_hash_update(&router->routes, key, &rv);\n\t\t} else {\n\t\t\tzend_hash_index_update(&router->routes, idx, &rv);\n\t\t}\n\t} ZEND_HASH_FOREACH_END();\n\n\treturn 1;\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Router::__construct(void)\n */\nPHP_METHOD(yaf_router, __construct) {\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\tyaf_router_init(Z_YAFROUTEROBJ_P(getThis()));\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Router::route(Yaf_Request $req)\n*/\nPHP_METHOD(yaf_router, route) {\n\tyaf_request_t *request;\n\tyaf_router_object *router = Z_YAFROUTEROBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"O\", &request, yaf_request_ce) == FAILURE) {\n\t\treturn;\n\t}\n\n\tRETURN_BOOL(yaf_router_route(router, request));\n}\n/* }}} */\n\n/** {{{  proto public Yaf_Router::addRoute(string $name, Yaf_Route_Interface $route)\n */\nPHP_METHOD(yaf_router, addRoute) {\n\tzend_string *name = NULL;\n\tyaf_route_t *route;\n\tyaf_router_object *router = Z_YAFROUTEROBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"SO\", &name, &route, yaf_route_ce) == FAILURE) {\n\t\treturn;\n\t}\n\n\tZ_TRY_ADDREF_P(route);\n\tzend_hash_update(&router->routes, name, route);\n\n\tRETURN_ZVAL(getThis(), 1, 0);\n}\n/* }}} */\n\n/** {{{  proto public Yaf_Router::addConfig(Yaf_Config_Abstract $config)\n */\nPHP_METHOD(yaf_router, addConfig) {\n\tzend_array *routes;\n\tyaf_config_t *config;\n\tyaf_router_object *router = Z_YAFROUTEROBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"z\", &config) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (IS_OBJECT == Z_TYPE_P(config) && instanceof_function(Z_OBJCE_P(config), yaf_config_ce)){\n\t\tyaf_config_object *conf = Z_YAFCONFIGOBJ_P(config);\n\t\troutes = conf->config;\n\t} else if (IS_ARRAY == Z_TYPE_P(config)) {\n\t\troutes = Z_ARRVAL_P(config);\n\t} else {\n\t\tphp_error_docref(NULL, E_WARNING,\n\t\t\t\t\"Expect a %s instance or an array, %s given\",\n\t\t\t\tZSTR_VAL(yaf_config_ce->name), zend_zval_type_name(config));\n\t\tRETURN_FALSE;\n\t}\n\n\tif (yaf_router_add_config(router, routes)) {\n\t\tRETURN_ZVAL(getThis(), 1, 0);\n\t} else {\n\t\tRETURN_FALSE;\n\t}\n}\n/* }}} */\n\n/** {{{  proto public Yaf_Router::getRoute(string $name)\n */\nPHP_METHOD(yaf_router, getRoute) {\n\tzend_string *name;\n\tyaf_route_t *route;\n\tyaf_router_object *router = Z_YAFROUTEROBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S\", &name) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (ZSTR_LEN(name) == 0) {\n\t\tRETURN_FALSE;\n\t}\n\n\tif ((route = zend_hash_find(&router->routes, name)) != NULL) {\n\t\tRETURN_ZVAL(route, 1, 0);\n\t}\n\n\tRETURN_NULL();\n}\n/* }}} */\n\n/** {{{  proto public Yaf_Router::getRoutes(void)\n */\nPHP_METHOD(yaf_router, getRoutes) {\n\tyaf_router_object *router = Z_YAFROUTEROBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\tRETURN_ARR(zend_array_dup(&router->routes));\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Router::isModuleName(string $name)\n */\nPHP_METHOD(yaf_router, isModuleName) {\n\tzend_string *name;\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S\", &name) == FAILURE) {\n\t\treturn;\n\t}\n\n\tRETURN_BOOL(yaf_application_is_module_name(name));\n}\n/* }}} */\n\n/** {{{  proto public Yaf_Router::getCurrentRoute(void)\n */\nPHP_METHOD(yaf_router, getCurrentRoute) {\n\tyaf_router_object *router = Z_YAFROUTEROBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tRETURN_ZVAL(&router->current, 1, 0);\n}\n/* }}} */\n\n/** {{{ yaf_router_methods\n */\nzend_function_entry yaf_router_methods[] = {\n\tPHP_ME(yaf_router, __construct, arginfo_class_Yaf_Router___construct, ZEND_ACC_PUBLIC|ZEND_ACC_CTOR)\n\tPHP_ME(yaf_router, addRoute, arginfo_class_Yaf_Router_addRoute, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_router, addConfig, arginfo_class_Yaf_Router_addConfig, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_router, route, arginfo_class_Yaf_Router_route, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_router, getRoute, arginfo_class_Yaf_Router_getRoute, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_router, getRoutes, arginfo_class_Yaf_Router_getRoutes, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_router, getCurrentRoute, arginfo_class_Yaf_Router_getCurrentRoute, ZEND_ACC_PUBLIC)\n\t{NULL, NULL, NULL}\n};\n/* }}} */\n\n/** {{{ YAF_STARTUP_FUNCTION\n */\nYAF_STARTUP_FUNCTION(router) {\n\tzend_class_entry ce;\n\n\tYAF_INIT_CLASS_ENTRY(ce, \"Yaf_Router\", \"Yaf\\\\Router\", yaf_router_methods);\n\tyaf_router_ce = zend_register_internal_class_ex(&ce, NULL);\n\tyaf_router_ce->create_object = yaf_router_new;\n#if PHP_VERSION_ID < 80100\n\tyaf_router_ce->ce_flags |= ZEND_ACC_FINAL;\n\tyaf_router_ce->serialize = zend_class_serialize_deny;\n\tyaf_router_ce->unserialize = zend_class_unserialize_deny;\n#else\n\tyaf_router_ce->ce_flags |= ZEND_ACC_FINAL | ZEND_ACC_NOT_SERIALIZABLE;\n#endif\n\n\tmemcpy(&yaf_router_obj_handlers, zend_get_std_object_handlers(), sizeof(zend_object_handlers));\n\tyaf_router_obj_handlers.offset = XtOffsetOf(yaf_router_object, std);\n\tyaf_router_obj_handlers.clone_obj = NULL;\n\tyaf_router_obj_handlers.get_gc = yaf_fake_get_gc;\n\tyaf_router_obj_handlers.free_obj = yaf_router_object_free;\n\tyaf_router_obj_handlers.get_properties = yaf_router_get_properties;\n\n\tYAF_STARTUP(route);\n\tYAF_STARTUP(route_static);\n\tYAF_STARTUP(route_simple);\n\tYAF_STARTUP(route_supervar);\n\tYAF_STARTUP(route_rewrite);\n\tYAF_STARTUP(route_regex);\n\tYAF_STARTUP(route_map);\n\n\treturn SUCCESS;\n}\n/* }}} */\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_router.h",
          "type": "blob",
          "size": 1.9072265625,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifndef YAF_ROUTER_H\n#define YAF_ROUTER_H\n\n#define YAF_ROUTER_URL_DELIMIETER \t '/'\n#define YAF_ROUTE_REGEX_DILIMITER  \t '#'\n\ntypedef struct {\n\tzend_array   routes;\n\tzval         current;\n\tzend_array  *properties;\n\tzend_object  std;\n} yaf_router_object;\n\n#define Z_YAFROUTEROBJ(zv)    (php_yaf_router_fetch_object(Z_OBJ(zv)))\n#define Z_YAFROUTEROBJ_P(zv)  Z_YAFROUTEROBJ(*zv)\n\nstatic zend_always_inline yaf_router_object *php_yaf_router_fetch_object(zend_object *obj) {\n\treturn (yaf_router_object *)((char*)(obj) - XtOffsetOf(yaf_router_object, std));\n}\n\nextern zend_class_entry *yaf_router_ce;\n\nvoid yaf_router_instance(yaf_router_t *this_ptr);\nvoid yaf_router_parse_parameters(const char *str, size_t len, zval *params);\nint yaf_router_route(yaf_router_object *router, yaf_request_t *request);\n\nYAF_STARTUP_FUNCTION(router);\n\n#endif\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_router.stub.php",
          "type": "blob",
          "size": 0.8046875,
          "content": "<?php\n\n/** @generate-legacy-arginfo */\n\nfinal class Yaf_Router { \n\t/* constants */\n\n\t/* properties */\n\tprotected array $_routes = NULL;\n\tprotected string $_current = NULL;\n\n\t/* methods */\n\tpublic function __construct();\n\n\t/**\n\t * @param Yaf_Route_Interface $route\n\t * @return Yaf_Router|NULL\n\t */\n\tpublic function addRoute(string $name, object $route):?object;\n\n\t/**\n\t * @param Yaf_Config_Abstract|array $config\n\t * @return Yaf_Router|NULL|FALSE\n\t */\n\tpublic function addConfig(object|array $config):object|null|false;\n\n\t/**\n\t * @param Yaf_Request_Abstract $request\n\t */\n\tpublic function route(object $request):?bool;\n\n\t/**\n\t * @return Yaf_Route_Interface|NULL|FALSE\n\t */\n\tpublic function getRoute(string $name):object|null|false;\n\n\tpublic function getRoutes():?array;\n\n\tpublic function getCurrentRoute():int|string|null;\n}\n"
        },
        {
          "name": "yaf_router_arginfo.h",
          "type": "blob",
          "size": 1.2001953125,
          "content": "/* This is a generated file, edit the .stub.php file instead.\n * Stub hash: 68d96eda78f44c62790e782902e75f0254491527 */\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Router___construct, 0, 0, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Router_addRoute, 0, 2, IS_OBJECT, 1)\n\tZEND_ARG_TYPE_INFO(0, name, IS_STRING, 0)\n\tZEND_ARG_TYPE_INFO(0, route, IS_OBJECT, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX(arginfo_class_Yaf_Router_addConfig, 0, 1, MAY_BE_OBJECT|MAY_BE_NULL|MAY_BE_FALSE)\n\tZEND_ARG_TYPE_MASK(0, config, MAY_BE_OBJECT|MAY_BE_ARRAY, NULL)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Router_route, 0, 1, _IS_BOOL, 1)\n\tZEND_ARG_TYPE_INFO(0, request, IS_OBJECT, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX(arginfo_class_Yaf_Router_getRoute, 0, 1, MAY_BE_OBJECT|MAY_BE_NULL|MAY_BE_FALSE)\n\tZEND_ARG_TYPE_INFO(0, name, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Router_getRoutes, 0, 0, IS_ARRAY, 1)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX(arginfo_class_Yaf_Router_getCurrentRoute, 0, 0, MAY_BE_LONG|MAY_BE_STRING|MAY_BE_NULL)\nZEND_END_ARG_INFO()\n"
        },
        {
          "name": "yaf_router_legacy_arginfo.h",
          "type": "blob",
          "size": 0.8349609375,
          "content": "/* This is a generated file, edit the .stub.php file instead.\n * Stub hash: 68d96eda78f44c62790e782902e75f0254491527 */\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Router___construct, 0, 0, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Router_addRoute, 0, 0, 2)\n\tZEND_ARG_INFO(0, name)\n\tZEND_ARG_INFO(0, route)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Router_addConfig, 0, 0, 1)\n\tZEND_ARG_INFO(0, config)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Router_route, 0, 0, 1)\n\tZEND_ARG_INFO(0, request)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Router_getRoute, 0, 0, 1)\n\tZEND_ARG_INFO(0, name)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Router_getRoutes arginfo_class_Yaf_Router___construct\n\n#define arginfo_class_Yaf_Router_getCurrentRoute arginfo_class_Yaf_Router___construct\n"
        },
        {
          "name": "yaf_session.c",
          "type": "blob",
          "size": 10.05078125,
          "content": "/*\n   +----------------------------------------------------------------------+\n   | Yet Another Framework                                                |\n   +----------------------------------------------------------------------+\n   | This source file is subject to version 3.01 of the PHP license,      |\n   | that is bundled with this package in the file LICENSE, and is        |\n   | available through the world-wide-web at the following url:           |\n   | http://www.php.net/license/3_01.txt                                  |\n   | If you did not receive a copy of the PHP license and are unable to   |\n   | obtain it through the world-wide-web, please send a note to          |\n   | license@php.net so we can mail you a copy immediately.               |\n   +----------------------------------------------------------------------+\n   | Author: Xinchen Hui  <laruence@php.net>                              |\n   +----------------------------------------------------------------------+\n*/\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include \"php.h\"\n#include \"Zend/zend_interfaces.h\"  /* for zend_ce_iterator, zend_ce_countable*/\n\n#include \"php_yaf.h\"\n#include \"yaf_namespace.h\"\n#include \"yaf_session.h\"\n#include \"yaf_exception.h\"\n\n#if PHP_MAJOR_VERSION > 7\n#include \"yaf_session_arginfo.h\"\n#else\n#include \"yaf_session_legacy_arginfo.h\"\n#endif\n\nzend_class_entry *yaf_session_ce;\nstatic zend_object_handlers yaf_session_obj_handlers;\n\n#if defined(HAVE_SPL) && PHP_VERSION_ID < 70200\nextern PHPAPI zend_class_entry *spl_ce_Countable;\n#endif\n\nstatic inline void yaf_session_start(yaf_session_object *session) /* {{{ */ {\n\tif (session->flags & YAF_SESSION_STARTED) {\n\t\treturn;\n\t}\n\tphp_session_start();\n\tsession->flags |= YAF_SESSION_STARTED;\n}\n/* }}} */\n\nstatic HashTable *yaf_session_get_properties(yaf_object *obj) /* {{{ */ {\n\tzval rv;\n\tHashTable *ht;\n\tyaf_session_object *sess = php_yaf_session_fetch_object(yaf_strip_obj(obj));\n\n\tif (!sess->properties) {\n\t\tALLOC_HASHTABLE(sess->properties);\n\t\tzend_hash_init(sess->properties, 2, NULL, ZVAL_PTR_DTOR, 0);\n\t\tYAF_ALLOW_VIOLATION(sess->properties);\n\t}\n\n\tht = sess->properties;\n\tZVAL_BOOL(&rv, sess->flags & YAF_SESSION_STARTED);\n\tzend_hash_str_update(ht, \"started:protected\", sizeof(\"started:protected\") - 1, &rv);\n\n\tif (sess->session) {\n\t\tZVAL_ARR(&rv, sess->session);\n\t\tZ_ADDREF(rv);\n\t} else {\n\t\tZVAL_NULL(&rv);\n\t}\n\tzend_hash_str_update(ht, \"session:protected\", sizeof(\"session:protected\") - 1, &rv);\n\n\treturn ht;\n}\n/* }}} */\n\nstatic void yaf_session_object_free(zend_object *object) /* {{{ */ {\n\tyaf_session_object *sess = php_yaf_session_fetch_object(object);\n\n\tif (sess->properties) {\n\t\tif (GC_DELREF(sess->properties)) {\n\t\t\tGC_REMOVE_FROM_BUFFER(sess->properties);\n\t\t\tzend_array_destroy(sess->properties);\n\t\t}\n\t}\n\n\tzend_object_std_dtor(object);\n}\n/* }}} */\n\nzend_object_iterator *yaf_session_get_iterator(zend_class_entry *ce, zval *object, int by_ref) /* {{{ */ {\n\tyaf_iterator *iterator;\n\tyaf_session_object *sess = Z_YAFSESSIONOBJ_P(object);\n\n\tif (by_ref) {\n\t\tzend_error(E_ERROR, \"An iterator cannot be used with foreach by reference\");\n\t}\n\n\tif (!sess->session) {\n\t\treturn NULL;\n\t}\n\n\titerator = emalloc(sizeof(yaf_iterator));\n\tzend_iterator_init(&iterator->intern);\n\titerator->intern.funcs = &yaf_iterator_funcs;\n\n\tZVAL_ARR(&iterator->intern.data, sess->session);\n\tZ_ADDREF(iterator->intern.data);\n\n\tZVAL_UNDEF(&iterator->current);\n\n\treturn &iterator->intern;\n}\n/* }}} */\n\nstatic yaf_session_t *yaf_session_instance() /* {{{ */ {\n\tzval *pzval;\n\tyaf_session_object *sess;\n\tyaf_session_t *instance = &YAF_G(session);\n\n\tif (IS_OBJECT == Z_TYPE_P(instance)) {\n\t\treturn instance;\n\t}\n\n\tsess = emalloc(sizeof(yaf_session_object) + zend_object_properties_size(yaf_session_ce));\n\tzend_object_std_init(&sess->std, yaf_session_ce);\n\tsess->std.handlers = &yaf_session_obj_handlers;\n\n\tZVAL_OBJ(&YAF_G(session), &sess->std);\n\n\tsess->flags = 0;\n\tyaf_session_start(sess);\n\n\tif ((pzval = zend_hash_find(&EG(symbol_table), YAF_KNOWN_STR(YAF_VAR_SESSION))) == NULL ||\n\t\tZ_TYPE_P(pzval) != IS_REFERENCE || Z_TYPE_P(Z_REFVAL_P(pzval)) != IS_ARRAY) {\n\t\tphp_error_docref(NULL, E_WARNING, \"Attempt to start session failed\");\n\t\tsess->session = NULL;\n\t\treturn &YAF_G(session);\n\t}\n\t\n\tsess->session = Z_ARRVAL_P(Z_REFVAL_P(pzval));\n\tsess->properties = NULL;\n\n\treturn &YAF_G(session);\n}\n/* }}} */\n\n/** {{{ proto private Yaf_Session::__construct(void)\n*/\nPHP_METHOD(yaf_session, __construct) {\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Session::getInstance(void)\n*/\nPHP_METHOD(yaf_session, getInstance) {\n\tyaf_session_t *instance;\n\n\tif ((instance = yaf_session_instance())) {\n\t\tRETURN_ZVAL(instance, 1, 0);\n\t} else {\n\t\tRETURN_NULL();\n\t}\n}\n/* }}} */\n\n/** {{{ proto public Yaf_Session::count(void)\n*/\nPHP_METHOD(yaf_session, count) {\n\tyaf_session_object *sess = Z_YAFSESSIONOBJ_P(getThis());\n\n\tif (sess->session) {\n\t\tRETURN_LONG(zend_hash_num_elements(sess->session));\n\t}\n}\n/* }}} */\n\n/** {{{ proto public static Yaf_Session::start()\n*/\nPHP_METHOD(yaf_session, start) {\n\tyaf_session_object *sess = Z_YAFSESSIONOBJ_P(getThis());\n\n\tyaf_session_start(sess);\n\n\tRETURN_ZVAL(getThis(), 1, 0);\n}\n/* }}} */\n\n/** {{{ proto public static Yaf_Session::get($name)\n*/\nPHP_METHOD(yaf_session, get) {\n\tzend_string *name = NULL;\n\tyaf_session_object *sess = Z_YAFSESSIONOBJ_P(getThis());\n\t\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"|S!\", &name) == FAILURE) {\n\t\treturn;\n\t} \n\n\tif (EXPECTED(sess->session)) {\n\t\tif (name == NULL) {\n\t\t\tRETVAL_ARR(sess->session);\n\t\t\tZ_ADDREF_P(return_value);\n\t\t\treturn;\n\t\t} else {\n\t\t\tzval *val;\n\t\t\tif ((val = zend_hash_find(sess->session, name))) {\n\t\t\t\tRETURN_ZVAL(val, 1, 0);\n\t\t\t}\n\t\t}\n\t}\n\tRETURN_NULL();\n}\n/* }}} */\n\n/** {{{ proto public static Yaf_Session::has($name)\n*/\nPHP_METHOD(yaf_session, has) {\n\tzend_string *name;\n\tyaf_session_object *sess = Z_YAFSESSIONOBJ_P(getThis());\n\t\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S!\", &name) == FAILURE) {\n\t\treturn;\n\t} \n\n\tif (EXPECTED(sess->session)) {\n\t\tRETURN_BOOL(zend_hash_exists(sess->session, name));\n\t}\n\n\tRETURN_FALSE;\n}\n/* }}} */\n\n/** {{{ proto public static Yaf_Session::set($name, $value)\n*/\nPHP_METHOD(yaf_session, set) {\n\tzval *value;\n\tzend_string *name;\n\tyaf_session_object *sess = Z_YAFSESSIONOBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"Sz\", &name, &value) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (EXPECTED(sess->session)) {\n\t\tif (zend_hash_update(sess->session, name, value)) {\n\t\t\tZ_TRY_ADDREF_P(value);\n\t\t\tRETURN_TRUE;\n\t\t}\n\t}\n\n\tRETURN_FALSE;\n}\n/* }}} */\n\n/** {{{ proto public static Yaf_Session::del($name)\n*/\nPHP_METHOD(yaf_session, del) {\n\tzend_string *name;\n\tyaf_session_object *sess = Z_YAFSESSIONOBJ_P(getThis());\n\n\tif (zend_parse_parameters(ZEND_NUM_ARGS(), \"S\", &name) == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (EXPECTED(sess->session)) {\n\t\tif (zend_hash_del(sess->session, name)) {\n\t\t\tRETURN_TRUE;\n\t\t}\n\t}\n\n\tRETURN_FALSE;\n}\n/* }}} */\n\n/** {{{ proto public static Yaf_Session::clear()\n*/\nPHP_METHOD(yaf_session, clear) {\n\tyaf_session_object *sess = Z_YAFSESSIONOBJ_P(getThis());\n\n\tif (zend_parse_parameters_none() == FAILURE) {\n\t\treturn;\n\t}\n\n\tif (EXPECTED(sess->session)) {\n\t\tzend_hash_clean(sess->session);\n\t\tRETURN_ZVAL(getThis(), 1, 0);\n\t}\n\n\tRETURN_FALSE;\n}\n/* }}} */\n\n/** {{{ yaf_session_methods\n*/\nzend_function_entry yaf_session_methods[] = {\n\tPHP_ME(yaf_session, __construct, arginfo_class_Yaf_Session___construct, ZEND_ACC_CTOR|ZEND_ACC_PRIVATE)\n\tPHP_ME(yaf_session, getInstance, arginfo_class_Yaf_Session_getInstance, ZEND_ACC_PUBLIC|ZEND_ACC_STATIC)\n\tPHP_ME(yaf_session, start, arginfo_class_Yaf_Session_start, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_session, get, arginfo_class_Yaf_Session_get, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_session, has, arginfo_class_Yaf_Session_has, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_session, set, arginfo_class_Yaf_Session_set, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_session, del, arginfo_class_Yaf_Session_del, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_session, count, arginfo_class_Yaf_Session_count, ZEND_ACC_PUBLIC)\n\tPHP_ME(yaf_session, clear, arginfo_class_Yaf_Session_clear, ZEND_ACC_PUBLIC)\n\tPHP_MALIAS(yaf_session, offsetGet, get, arginfo_class_Yaf_Session_offsetGet, ZEND_ACC_PUBLIC)\n\tPHP_MALIAS(yaf_session, offsetSet, set, arginfo_class_Yaf_Session_offsetSet, ZEND_ACC_PUBLIC)\n\tPHP_MALIAS(yaf_session, offsetExists, has, arginfo_class_Yaf_Session_offsetExists, ZEND_ACC_PUBLIC)\n\tPHP_MALIAS(yaf_session, offsetUnSet, del, arginfo_class_Yaf_Session_offsetUnSet, ZEND_ACC_PUBLIC)\n\tPHP_MALIAS(yaf_session, __get, get, arginfo_class_Yaf_Session___get, ZEND_ACC_PUBLIC)\n\tPHP_MALIAS(yaf_session, __isset, has, arginfo_class_Yaf_Session___isset, ZEND_ACC_PUBLIC)\n\tPHP_MALIAS(yaf_session, __set, set, arginfo_class_Yaf_Session___set, ZEND_ACC_PUBLIC)\n\tPHP_MALIAS(yaf_session, __unset, del, arginfo_class_Yaf_Session___unset, ZEND_ACC_PUBLIC)\n\t{NULL, NULL, NULL}\n};\n/* }}} */\n\n/** {{{ YAF_STARTUP_FUNCTION\n*/\nYAF_STARTUP_FUNCTION(session) {\n\tzend_class_entry ce;\n\n\tYAF_INIT_CLASS_ENTRY(ce, \"Yaf_Session\", \"Yaf\\\\Session\", yaf_session_methods);\n\n\tyaf_session_ce = zend_register_internal_class_ex(&ce, NULL);\n\tyaf_session_ce->get_iterator = yaf_session_get_iterator;\n#if PHP_VERSION_ID < 80100\n\tyaf_session_ce->ce_flags |= ZEND_ACC_FINAL;\n\tyaf_session_ce->serialize = zend_class_serialize_deny;\n\tyaf_session_ce->unserialize = zend_class_unserialize_deny;\n#else\n\tyaf_session_ce->ce_flags |= ZEND_ACC_FINAL | ZEND_ACC_NOT_SERIALIZABLE;\n#endif\n\n\tmemcpy(&yaf_session_obj_handlers, zend_get_std_object_handlers(), sizeof(zend_object_handlers));\n\tyaf_session_obj_handlers.offset = XtOffsetOf(yaf_session_object, std);\n\tyaf_session_obj_handlers.free_obj = yaf_session_object_free;\n\tyaf_session_obj_handlers.clone_obj = NULL;\n\tyaf_session_obj_handlers.get_gc = yaf_fake_get_gc;\n\tyaf_session_obj_handlers.get_properties = yaf_session_get_properties;\n\n#if defined(HAVE_SPL) && PHP_VERSION_ID < 70200\n\tzend_class_implements(yaf_session_ce, 3, zend_ce_iterator, zend_ce_arrayaccess, spl_ce_Countable);\n#elif PHP_VERSION_ID >= 70200\n\tzend_class_implements(yaf_session_ce, 3, zend_ce_iterator, zend_ce_arrayaccess, zend_ce_countable);\n#else\n\tzend_class_implements(yaf_session_ce, 2, zend_ce_iterator, zend_ce_arrayaccess);\n#endif\n\n\treturn SUCCESS;\n}\n/* }}} */\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_session.h",
          "type": "blob",
          "size": 1.7744140625,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifndef YAF_SESSION_H\n#define YAF_SESSION_H\n\n#define YAF_SESSION_STARTED  (1<<0)\n\ntypedef struct {\n\tzend_uchar  flags;\n\tzend_array *session;\n\tzend_array *properties;\n\tzend_object std;\n} yaf_session_object;\n\n#define Z_YAFSESSIONOBJ(zv)   (php_yaf_session_fetch_object(Z_OBJ(zv)))\n#define Z_YAFSESSIONOBJ_P(zv) Z_YAFSESSIONOBJ(*zv)\n\nstatic zend_always_inline yaf_session_object *php_yaf_session_fetch_object(zend_object *obj) {\n\treturn (yaf_session_object *)((char*)(obj) - XtOffsetOf(yaf_session_object, std));\n}\n\nextern zend_class_entry *yaf_session_ce;\n\n#if PHP_VERSION_ID < 70200\nPHPAPI void php_session_start();\n#else\nPHPAPI int php_session_start();\n#endif\nYAF_STARTUP_FUNCTION(session);\n#endif\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_session.stub.php",
          "type": "blob",
          "size": 1.8857421875,
          "content": "<?php\n/** @generate-legacy-arginfo */\n\nfinal class Yaf_Session implements \\Iterator, \\Traversable, \\ArrayAccess, \\Countable { \n\t/* constants */\n\n\t/* properties */\n\tstatic protected ?object $_instance = NULL;\n\tprotected ?array $_session = NULL;\n\tprotected bool $_started = false;\n\n\t/* methods */\n\tprivate function __construct();\n\n\t/**\n\t * @return Yaf_Session|NULL\n\t */\n\tpublic static function getInstance():?object;\n\n\t/**\n\t * @return Yaf_Session\n\t */\n\tpublic function start():object;\n\n\tpublic function get(?string $name = NULL):mixed;\n\n\tpublic function has(string $name):?bool;\n\n\tpublic function set(string $name, mixed $value):?bool;\n\n\tpublic function del(string $name):?bool;\n\n\t/**\n\t * @return Yaf_Session|NULL|FALSE\n\t */\n\tpublic function clear():object|null|false;\n\n\t/** Countable */\n\tpublic function count():int { }\n\n\t/** Iterator */\n\tpublic function rewind():void { }\n\tpublic function current():mixed { }\n\tpublic function next():void { }\n\tpublic function valid():bool { }\n\tpublic function key():int|string|null|bool { }\n\n\t/** ArrayAccess */\n    /**\n     * @implementation-alias Yaf_Session::get\n     */\n\tpublic function offsetGet(mixed $name):mixed;\n\n    /**\n     * @implementation-alias Yaf_Session::set\n     */\n\tpublic function offsetSet(mixed $name, mixed $value):void;\n\n    /**\n     * @implementation-alias Yaf_Session::del\n     */\n\tpublic function offsetUnSet(mixed $name):void;\n\n    /**\n     * @implementation-alias Yaf_Session::has\n     */\n\tpublic function offsetExists(mixed $name):bool;\n\n\n\t/** @implementation-alias Yaf_Session::get */\n\tpublic function __get(string $name):mixed;\n\n    /**\n     * @implementation-alias Yaf_Session::has\n     */\n\tpublic function __isset(string $name):bool;\n\n    /**\n     * @implementation-alias Yaf_Session::set\n     */\n\tpublic function __set(string $name, mixed $value):void;\n\n    /**\n     * @implementation-alias Yaf_Session::del\n     */\n\tpublic function __unset(string $name):void;\n}\n"
        },
        {
          "name": "yaf_session_arginfo.h",
          "type": "blob",
          "size": 3.138671875,
          "content": "/* This is a generated file, edit the .stub.php file instead.\n * Stub hash: f10baf628eb99eafbf7d0d0baef833070aa0d3ba */\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Session___construct, 0, 0, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Session_getInstance, 0, 0, IS_OBJECT, 1)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Session_start, 0, 0, IS_OBJECT, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Session_get, 0, 0, IS_MIXED, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, name, IS_STRING, 1, \"NULL\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Session_has, 0, 1, _IS_BOOL, 1)\n\tZEND_ARG_TYPE_INFO(0, name, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Session_set, 0, 2, _IS_BOOL, 1)\n\tZEND_ARG_TYPE_INFO(0, name, IS_STRING, 0)\n\tZEND_ARG_TYPE_INFO(0, value, IS_MIXED, 0)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Session_del arginfo_class_Yaf_Session_has\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX(arginfo_class_Yaf_Session_clear, 0, 0, MAY_BE_OBJECT|MAY_BE_NULL|MAY_BE_FALSE)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Session_count, 0, 0, IS_LONG, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Session_rewind, 0, 0, IS_VOID, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Session_current, 0, 0, IS_MIXED, 0)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Session_next arginfo_class_Yaf_Session_rewind\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Session_valid, 0, 0, _IS_BOOL, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX(arginfo_class_Yaf_Session_key, 0, 0, MAY_BE_LONG|MAY_BE_STRING|MAY_BE_NULL|MAY_BE_BOOL)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Session_offsetGet, 0, 1, IS_MIXED, 0)\n\tZEND_ARG_TYPE_INFO(0, name, IS_MIXED, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Session_offsetSet, 0, 2, IS_VOID, 0)\n\tZEND_ARG_TYPE_INFO(0, name, IS_MIXED, 0)\n\tZEND_ARG_TYPE_INFO(0, value, IS_MIXED, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Session_offsetUnSet, 0, 1, IS_VOID, 0)\n\tZEND_ARG_TYPE_INFO(0, name, IS_MIXED, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Session_offsetExists, 0, 1, _IS_BOOL, 0)\n\tZEND_ARG_TYPE_INFO(0, name, IS_MIXED, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Session___get, 0, 1, IS_MIXED, 0)\n\tZEND_ARG_TYPE_INFO(0, name, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Session___isset, 0, 1, _IS_BOOL, 0)\n\tZEND_ARG_TYPE_INFO(0, name, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Session___set, 0, 2, IS_VOID, 0)\n\tZEND_ARG_TYPE_INFO(0, name, IS_STRING, 0)\n\tZEND_ARG_TYPE_INFO(0, value, IS_MIXED, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_Session___unset, 0, 1, IS_VOID, 0)\n\tZEND_ARG_TYPE_INFO(0, name, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\n"
        },
        {
          "name": "yaf_session_legacy_arginfo.h",
          "type": "blob",
          "size": 1.8955078125,
          "content": "/* This is a generated file, edit the .stub.php file instead.\n * Stub hash: f10baf628eb99eafbf7d0d0baef833070aa0d3ba */\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Session___construct, 0, 0, 0)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Session_getInstance arginfo_class_Yaf_Session___construct\n\n#define arginfo_class_Yaf_Session_start arginfo_class_Yaf_Session___construct\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Session_get, 0, 0, 0)\n\tZEND_ARG_INFO(0, name)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Session_has, 0, 0, 1)\n\tZEND_ARG_INFO(0, name)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_Session_set, 0, 0, 2)\n\tZEND_ARG_INFO(0, name)\n\tZEND_ARG_INFO(0, value)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_Session_del arginfo_class_Yaf_Session_has\n\n#define arginfo_class_Yaf_Session_clear arginfo_class_Yaf_Session___construct\n\n#define arginfo_class_Yaf_Session_count arginfo_class_Yaf_Session___construct\n\n#define arginfo_class_Yaf_Session_rewind arginfo_class_Yaf_Session___construct\n\n#define arginfo_class_Yaf_Session_current arginfo_class_Yaf_Session___construct\n\n#define arginfo_class_Yaf_Session_next arginfo_class_Yaf_Session___construct\n\n#define arginfo_class_Yaf_Session_valid arginfo_class_Yaf_Session___construct\n\n#define arginfo_class_Yaf_Session_key arginfo_class_Yaf_Session___construct\n\n#define arginfo_class_Yaf_Session_offsetGet arginfo_class_Yaf_Session_has\n\n#define arginfo_class_Yaf_Session_offsetSet arginfo_class_Yaf_Session_set\n\n#define arginfo_class_Yaf_Session_offsetUnSet arginfo_class_Yaf_Session_has\n\n#define arginfo_class_Yaf_Session_offsetExists arginfo_class_Yaf_Session_has\n\n#define arginfo_class_Yaf_Session___get arginfo_class_Yaf_Session_has\n\n#define arginfo_class_Yaf_Session___isset arginfo_class_Yaf_Session_has\n\n#define arginfo_class_Yaf_Session___set arginfo_class_Yaf_Session_set\n\n#define arginfo_class_Yaf_Session___unset arginfo_class_Yaf_Session_has\n\n"
        },
        {
          "name": "yaf_view.c",
          "type": "blob",
          "size": 4.28515625,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifdef HAVE_CONFIG_H\n#include \"config.h\"\n#endif\n\n#include \"php.h\"\n#include \"Zend/zend_interfaces.h\" /* for zend_call_method_with_1_params */\n\n#include \"php_yaf.h\"\n#include \"yaf_namespace.h\"\n#include \"yaf_exception.h\"\n#include \"yaf_loader.h\"\n#include \"yaf_view.h\"\n\n#include \"views/yaf_view_interface.h\"\n#include \"views/yaf_view_simple.h\"\n\nvoid yaf_view_instance(yaf_view_t *view, zend_string *tpl_dir, zval *options) /* {{{ */ {\n\tyaf_view_simple_instance(view, tpl_dir);\n}\n/* }}} */\n\nzend_string *yaf_view_get_tpl_dir_ex(yaf_view_t *view, yaf_request_t *request) /* {{{ */ {\n\tzval ret;\n#if PHP_VERSION_ID < 80000\n\tzend_call_method_with_1_params(view, Z_OBJCE_P(view), NULL, \"getscriptpath\", &ret, request);\n#else\n    zend_call_method_with_1_params(Z_OBJ_P(view), Z_OBJCE_P(view), NULL, \"getscriptpath\", &ret, request);\n#endif\n\tif (Z_TYPE(ret) != IS_STRING) {\n\t\tzval_ptr_dtor(&ret);\n\t\treturn NULL;\n\t}\n\treturn Z_STR(ret);\n}\n/* }}} */\n\nvoid yaf_view_set_tpl_dir_ex(yaf_view_t *view, zend_string *tpl) /* {{{ */ {\n\tzval arg, ret;\n\n\tZVAL_STR_COPY(&arg, tpl);\n#if PHP_VERSION_ID < 80000\n\tzend_call_method_with_1_params(view, Z_OBJCE_P(view), NULL, \"setscriptpath\", &ret, &arg);\n#else\n    zend_call_method_with_1_params(Z_OBJ_P(view), Z_OBJCE_P(view), NULL, \"setscriptpath\", &ret, &arg);\n#endif\n\tif (Z_TYPE(ret) != IS_TRUE && (Z_TYPE(ret) != IS_LONG || !Z_LVAL(ret))) {\n\t\t/* error handle? */\n\t}\n\tzval_dtor(&arg);\n}\n/* }}} */\n\nint yaf_view_render(yaf_view_t *view, zend_string *script, zval *var_array, zval *ret) /* {{{ */ {\n\tif (EXPECTED(Z_OBJCE_P(view) == yaf_view_simple_ce)) {\n\t\tyaf_view_simple_render(view, script, var_array, ret);\n\t\treturn 1;\n\t} else {\n\t\tzval arg;\n\t\t\n\t\tZVAL_STR_COPY(&arg, script);\n\t\tif (ret) {\n\t\t\tif (var_array == NULL) {\n#if PHP_VERSION_ID < 80000\n\t\t\t\tzend_call_method_with_1_params(view, Z_OBJCE_P(view), NULL, \"render\", ret, &arg);\n#else\n                zend_call_method_with_1_params(Z_OBJ_P(view), Z_OBJCE_P(view), NULL, \"render\", ret, &arg);\n#endif\n\t\t\t} else {\n#if PHP_VERSION_ID < 80000\n\t\t\t\tzend_call_method_with_2_params(view, Z_OBJCE_P(view), NULL, \"render\", ret, &arg, var_array);\n#else\n                zend_call_method_with_2_params(Z_OBJ_P(view), Z_OBJCE_P(view), NULL, \"render\", ret, &arg, var_array);\n#endif\n\t\t\t}\n\t\t\tzval_ptr_dtor(&arg);\n\t\t\tif (UNEXPECTED(Z_TYPE_P(ret) != IS_STRING || EG(exception))) {\n\t\t\t\tzval_ptr_dtor(ret);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t} else {\n\t\t\tzval rt;\n\t\t\tif (var_array == NULL) {\n#if PHP_VERSION_ID < 80000\n\t\t\t\tzend_call_method_with_1_params(view, Z_OBJCE_P(view), NULL, \"display\", &rt, &arg);\n#else\n                zend_call_method_with_1_params(Z_OBJ_P(view), Z_OBJCE_P(view), NULL, \"display\", &rt, &arg);\n#endif\n\t\t\t} else {\n#if PHP_VERSION_ID < 80000\n\t\t\t\tzend_call_method_with_2_params(view, Z_OBJCE_P(view), NULL, \"display\", &rt, &arg, var_array);\n#else\n                zend_call_method_with_2_params(Z_OBJ_P(view), Z_OBJCE_P(view), NULL, \"display\", &rt, &arg, var_array);\n#endif\n\t\t\t}\n\t\t\tzval_ptr_dtor(&arg);\n\t\t\tif (UNEXPECTED(Z_TYPE(rt) == IS_FALSE || EG(exception))) {\n\t\t\t\tzval_ptr_dtor(&rt);\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tzval_ptr_dtor(&rt);\n\t\t}\n\t}\n\n\treturn 1;\n}\n/* }}} */\n\n/** {{{ YAF_STARTUP_FUNCTION\n*/\nYAF_STARTUP_FUNCTION(view) {\n\n\tYAF_STARTUP(view_interface);\n\tYAF_STARTUP(view_simple);\n\n\treturn SUCCESS;\n}\n/* }}} */\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_view.h",
          "type": "blob",
          "size": 2.41796875,
          "content": "/*\n  +----------------------------------------------------------------------+\n  | Yet Another Framework                                                |\n  +----------------------------------------------------------------------+\n  | This source file is subject to version 3.01 of the PHP license,      |\n  | that is bundled with this package in the file LICENSE, and is        |\n  | available through the world-wide-web at the following url:           |\n  | http://www.php.net/license/3_01.txt                                  |\n  | If you did not receive a copy of the PHP license and are unable to   |\n  | obtain it through the world-wide-web, please send a note to          |\n  | license@php.net so we can mail you a copy immediately.               |\n  +----------------------------------------------------------------------+\n  | Author: Xinchen Hui  <laruence@php.net>                              |\n  +----------------------------------------------------------------------+\n*/\n\n#ifndef YAF_VIEW_H\n#define YAF_VIEW_H\n\nextern zend_class_entry *yaf_view_interface_ce;\nextern zend_class_entry *yaf_view_simple_ce;\n\ntypedef struct {\n\tzend_string *tpl_dir;\n\tzend_array   tpl_vars;\n\tzend_array  *properties;\n\tzend_object  std;\n} yaf_view_object;\n\n#define Z_YAFVIEWOBJ(zv)    (php_yaf_view_fetch_object(Z_OBJ(zv)))\n#define Z_YAFVIEWOBJ_P(zv)  Z_YAFVIEWOBJ(*zv)\n\nstatic zend_always_inline yaf_view_object *php_yaf_view_fetch_object(zend_object *obj) {\n\treturn (yaf_view_object *)((char*)(obj) - XtOffsetOf(yaf_view_object, std));\n}\n\nvoid yaf_view_instance(yaf_view_t *view, zend_string *tpl_dir, zval *options);\nint yaf_view_render(yaf_view_t *view, zend_string *script, zval *var_array, zval *ret);\nvoid yaf_view_set_tpl_dir_ex(yaf_view_t *view, zend_string *tpl_dir);\nzend_string *yaf_view_get_tpl_dir_ex(yaf_view_t *view, yaf_request_t *request);\n\n#define yaf_view_set_tpl_dir(v, d) do { \\\n\tif (EXPECTED(Z_OBJCE_P(v) == yaf_view_simple_ce)) { \\\n\t\tif (UNEXPECTED(Z_YAFVIEWOBJ_P(v)->tpl_dir)) { \\\n\t\t\tzend_string_release(Z_YAFVIEWOBJ_P(v)->tpl_dir); \\\n\t\t} \\\n\t\tZ_YAFVIEWOBJ_P(v)->tpl_dir = zend_string_copy(d); \\\n\t} else { \\\n\t\tyaf_view_set_tpl_dir_ex(v, d); \\\n\t} \\\n} while (0)\n\n#define yaf_view_get_tpl_dir(v, q)  ((Z_OBJCE_P(v)==yaf_view_simple_ce)?Z_YAFVIEWOBJ_P(v)->tpl_dir:yaf_view_get_tpl_dir_ex(v, q))\n\nYAF_STARTUP_FUNCTION(view);\n\n#endif\n\n/*\n * Local variables:\n * tab-width: 4\n * c-basic-offset: 4\n * End:\n * vim600: noet sw=4 ts=4 fdm=marker\n * vim<600: noet sw=4 ts=4\n */\n"
        },
        {
          "name": "yaf_view.stub.php",
          "type": "blob",
          "size": 1.875,
          "content": "<?php\n\n/** @generate-legacy-arginfo */\n\nInterface Yaf_View_Interface {\n\n\t/**\n\t * @return Yaf_View_Interface|bool\n\t */\n\tpublic function assign(string $name, mixed $value = NULL);\n\n\t/**\n\t * @return string|bool\n\t */\n\tpublic function render(string $tpl, ?array $tpl_vars = NULL);\n\n\t/**\n\t * @return Yaf_View_Interface|bool\n\t */\n\tpublic function display(string $tpl, ?array $tpl_vars = NULL);\n\n\t/**\n\t * @return bool\n\t */\n\tpublic function setScriptPath(string $template_dir);\n\n\t/**\n\t * @return string\n\t */\n\tpublic function getScriptPath();\n}\n\nfinal class Yaf_View_Simple implements Yaf_View_Interface { \n\t/* constants */\n\n\t/* properties */\n\tprotected ?array $_tpl_vars = NULL;\n\tprotected ?string $_tpl_dir = NULL;\n\tprotected ?array $_options = NULL;\n\n\t/* methods */\n\tpublic function __construct(string $tempalte_dir, ?array $options = NULL) {}\n\n\tpublic function __isset(string $name):bool {}\n\t\n\tpublic function get(?string $name = NULL):mixed {}\n\n\t/**\n\t * @return Yaf_View_Simple|NULL|FALSE\n\t */\n\tpublic function assign(mixed $name = NULL, mixed $default = NULL):object|null|false {}\n\n\tpublic function render(string $tpl, ?array $tpl_vars = NULL):null|string|false {}\n\n\tpublic function eval(string $tpl_str, ?array $vars = NULL):null|string|false {}\n\n\tpublic function display(string $tpl, ?array $tpl_vars = NULL):?bool {}\n\n\t/**\n\t * @return Yaf_View_Simple|NULL\n\t */\n\tpublic function assignRef(?string $name = NULL, mixed &$value):?object {}\n\n\t/**\n\t * @return Yaf_View_Simple|NULL\n\t */\n\tpublic function clear(?string $name = NULL):?object {}\n\n\t/**\n\t * @return Yaf_View_Simple|NULL|FALSE\n\t */\n\tpublic function setScriptPath(string $template_dir):object|null|bool {}\n\n\tpublic function getScriptPath():?string {}\n\n\t/** @implementation-alias Yaf_View_Simple::get */\n\tpublic function __get(string $name):mixed {} \n\t\n\t/** @implementation-alias Yaf_View_Simple::assign */\n\tpublic function __set(string $name, mixed $value):void {}\n\n}\n"
        },
        {
          "name": "yaf_view_arginfo.h",
          "type": "blob",
          "size": 3.5126953125,
          "content": "/* This is a generated file, edit the .stub.php file instead.\n * Stub hash: 241571a08dce1a4f00fe4e4ae5874c211fc0918d */\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_View_Interface_assign, 0, 0, 1)\n\tZEND_ARG_TYPE_INFO(0, name, IS_STRING, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, value, IS_MIXED, 0, \"NULL\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_View_Interface_render, 0, 0, 1)\n\tZEND_ARG_TYPE_INFO(0, tpl, IS_STRING, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, tpl_vars, IS_ARRAY, 1, \"NULL\")\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_View_Interface_display arginfo_class_Yaf_View_Interface_render\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_View_Interface_setScriptPath, 0, 0, 1)\n\tZEND_ARG_TYPE_INFO(0, template_dir, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_View_Interface_getScriptPath, 0, 0, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_View_Simple___construct, 0, 0, 1)\n\tZEND_ARG_TYPE_INFO(0, tempalte_dir, IS_STRING, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, options, IS_ARRAY, 1, \"NULL\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_View_Simple___isset, 0, 1, _IS_BOOL, 0)\n\tZEND_ARG_TYPE_INFO(0, name, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_View_Simple_get, 0, 0, IS_MIXED, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, name, IS_STRING, 1, \"NULL\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX(arginfo_class_Yaf_View_Simple_assign, 0, 0, MAY_BE_OBJECT|MAY_BE_NULL|MAY_BE_FALSE)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, name, IS_MIXED, 0, \"NULL\")\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, default, IS_MIXED, 0, \"NULL\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX(arginfo_class_Yaf_View_Simple_render, 0, 1, MAY_BE_NULL|MAY_BE_STRING|MAY_BE_FALSE)\n\tZEND_ARG_TYPE_INFO(0, tpl, IS_STRING, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, tpl_vars, IS_ARRAY, 1, \"NULL\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX(arginfo_class_Yaf_View_Simple_eval, 0, 1, MAY_BE_NULL|MAY_BE_STRING|MAY_BE_FALSE)\n\tZEND_ARG_TYPE_INFO(0, tpl_str, IS_STRING, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, vars, IS_ARRAY, 1, \"NULL\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_View_Simple_display, 0, 1, _IS_BOOL, 1)\n\tZEND_ARG_TYPE_INFO(0, tpl, IS_STRING, 0)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, tpl_vars, IS_ARRAY, 1, \"NULL\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_View_Simple_assignRef, 0, 2, IS_OBJECT, 1)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, name, IS_STRING, 1, \"NULL\")\n\tZEND_ARG_TYPE_INFO(1, value, IS_MIXED, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_View_Simple_clear, 0, 0, IS_OBJECT, 1)\n\tZEND_ARG_TYPE_INFO_WITH_DEFAULT_VALUE(0, name, IS_STRING, 1, \"NULL\")\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_MASK_EX(arginfo_class_Yaf_View_Simple_setScriptPath, 0, 1, MAY_BE_OBJECT|MAY_BE_NULL|MAY_BE_BOOL)\n\tZEND_ARG_TYPE_INFO(0, template_dir, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_View_Simple_getScriptPath, 0, 0, IS_STRING, 1)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_View_Simple___get, 0, 1, IS_MIXED, 0)\n\tZEND_ARG_TYPE_INFO(0, name, IS_STRING, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_class_Yaf_View_Simple___set, 0, 2, IS_VOID, 0)\n\tZEND_ARG_TYPE_INFO(0, name, IS_STRING, 0)\n\tZEND_ARG_TYPE_INFO(0, value, IS_MIXED, 0)\nZEND_END_ARG_INFO()\n\n"
        },
        {
          "name": "yaf_view_legacy_arginfo.h",
          "type": "blob",
          "size": 2.1630859375,
          "content": "/* This is a generated file, edit the .stub.php file instead.\n * Stub hash: 241571a08dce1a4f00fe4e4ae5874c211fc0918d */\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_View_Interface_assign, 0, 0, 1)\n\tZEND_ARG_INFO(0, name)\n\tZEND_ARG_INFO(0, value)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_View_Interface_render, 0, 0, 1)\n\tZEND_ARG_INFO(0, tpl)\n\tZEND_ARG_INFO(0, tpl_vars)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_View_Interface_display arginfo_class_Yaf_View_Interface_render\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_View_Interface_setScriptPath, 0, 0, 1)\n\tZEND_ARG_INFO(0, template_dir)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_View_Interface_getScriptPath, 0, 0, 0)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_View_Simple___construct, 0, 0, 1)\n\tZEND_ARG_INFO(0, tempalte_dir)\n\tZEND_ARG_INFO(0, options)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_View_Simple___isset, 0, 0, 1)\n\tZEND_ARG_INFO(0, name)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_View_Simple_get, 0, 0, 0)\n\tZEND_ARG_INFO(0, name)\nZEND_END_ARG_INFO()\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_View_Simple_assign, 0, 0, 0)\n\tZEND_ARG_INFO(0, name)\n\tZEND_ARG_INFO(0, default)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_View_Simple_render arginfo_class_Yaf_View_Interface_render\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_View_Simple_eval, 0, 0, 1)\n\tZEND_ARG_INFO(0, tpl_str)\n\tZEND_ARG_INFO(0, vars)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_View_Simple_display arginfo_class_Yaf_View_Interface_render\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_View_Simple_assignRef, 0, 0, 2)\n\tZEND_ARG_INFO(0, name)\n\tZEND_ARG_INFO(1, value)\nZEND_END_ARG_INFO()\n\n#define arginfo_class_Yaf_View_Simple_clear arginfo_class_Yaf_View_Simple_get\n\n#define arginfo_class_Yaf_View_Simple_setScriptPath arginfo_class_Yaf_View_Interface_setScriptPath\n\n#define arginfo_class_Yaf_View_Simple_getScriptPath arginfo_class_Yaf_View_Interface_getScriptPath\n\n#define arginfo_class_Yaf_View_Simple___get arginfo_class_Yaf_View_Simple___isset\n\nZEND_BEGIN_ARG_INFO_EX(arginfo_class_Yaf_View_Simple___set, 0, 0, 2)\n\tZEND_ARG_INFO(0, name)\n\tZEND_ARG_INFO(0, value)\nZEND_END_ARG_INFO()\n\n"
        }
      ]
    }
  ]
}