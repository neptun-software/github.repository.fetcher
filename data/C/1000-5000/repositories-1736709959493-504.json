{
  "metadata": {
    "timestamp": 1736709959493,
    "page": 504,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "asterisk/asterisk",
      "stars": 2344,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".cleancount",
          "type": "blob",
          "size": 0.0029296875,
          "content": "40\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.576171875,
          "content": "# git ls-files --others --exclude-from=.git/info/exclude\n# Lines that start with '#' are comments.\n# For a project mostly in C, the following would be a good set of\n# exclude patterns (uncomment them if you want to use them):\n# *.[oa]\n# *~\n\n# See .gitignore in subdirectories for more ignored files\n\n*~\n*.[oadi]\n*.gz\n*.ii\n*.oo\n*.eo\n*.so\n*.exports\n*.moduleinfo\n*.makeopts\n*.makedeps\n.lastclean\n/.pc\naclocal.m4\nautom4te.cache\nconfig.log\nconfig.status\ndefaults.h\nmakeopts\nmakeopts.embed_rules\nmenuselect-tree\n*.sha1\n*.pyc\n*.gcno\n*.gcda\nlatex\ndoxygen.log\nout/\n*.orig\ntests/CI/output\n.develvars\n"
        },
        {
          "name": "BSDmakefile",
          "type": "blob",
          "size": 0.287109375,
          "content": "# This is a convenience script for systems on which BSD make is the default,\n# such that typing 'make' will do what people expect, instead of producing an\n# error (due to incompatibilities between BSD make and GNU make).\n\n.include \"makeopts\"\n\nall::\n\t$(MAKE)\n\n$(.TARGETS)::\n\t$(MAKE) $(.TARGETS)\n"
        },
        {
          "name": "BUGS",
          "type": "blob",
          "size": 0.615234375,
          "content": "Asterisk Bug Tracking Information\n=================================\n\nTo learn about and report Asterisk bugs, please visit\nthe official Asterisk Bug Tracker at:\n\n\thttps://github.com/asterisk/asterisk/issues/\n\nFor more information on using the bug tracker, or to\nlearn how you can contribute by acting as a bug marshal\nplease see:\n\n\thttps://docs.asterisk.org/Asterisk-Community/Asterisk-Issue-Guidelines/\n\nIf you would like to submit a feature request, please\nresist the temptation to post it to the bug tracker.\nFeature requests should be posted to the asterisk-dev\nmailing list, located at:\n\n\thttp://lists.digium.com\n\nThank you!\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 17.564453125,
          "content": "\n\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Library General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\f\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\f\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\f\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\f\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\f\n\t    How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) 19yy  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) 19yy name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Library General\nPublic License instead of this License.\n"
        },
        {
          "name": "CREDITS",
          "type": "blob",
          "size": 12.6103515625,
          "content": "\n=== DEVELOPMENT SUPPORT ===\n\n We'd like to thank the following companies for helping fund development of\n Asterisk.\n\n\t* Pilosoft, Inc. - for supporting ADSI development in Asterisk\n\n\t* Asterlink, Inc. - for supporting broad Asterisk development\n\n\t* GFS - for supporting ALSA development\n\n\t* Telesthetic - for supporting SIP development\n\n\t* Christos Ricudis - for substantial code contributions\n\n\t* nic.at - ENUM support in Asterisk\n\n\t* Paul Bagyenda, Digital Solutions - for initial Voicetronix driver\n\t\tdevelopment.\n\n\t* John Todd, TalkPlus, Inc.  and JR Richardson, Ntegrated Solutions. \n\t\tfor funding the development of SIP Session Timers support.\n\n\t* Omnitor AB, Gunnar Hellström, for funding work with videocaps, \n\t\tT.140 RED, originate with video/text and many more \n\t\tcontributions.\n\n\t* ClearIT AB for work with meetme, res_mutestream, RTCP, manager and \n\t\ttonezones.\n\n\t* NetNation Communications (www.netnation.com)\n\t\tKevin Lindsay <kevinl@netnation.com>\n\t\tPersistent Dynamic Queue Members\n\n\t* inAccess Networks (work funded by Hellas On Line (HOL) www.hol.gr)\n\t\tPriorities in queues\n\n\t* Voop AS, Nuvio Inc, Inotel S.A and Foniris Telecom A/S - funding for\n\t\trewrite of SIP transfers\n\n\n=== WISHLIST CONTRIBUTORS ===\n\n We'd like to thank the following for contributing to our wishlist\n\n\t* Jeremy McNamara - SpeeX support\n\n\t* Nick Seraphin - RDNIS support\n\n\t* Gary - Phonejack ADSI (in progress)\n\n\t* Wasim - Hangup detect\n\n=== HARDWARE DONORS === \n\n We'd like to thank the following for granting access to hardware for testing.\n\n\t* Thanks to QuickNet Technologies for their donation of an Internet\n\t\tPhoneJack and Linejack card to the project.  \n\t\t(http://www.quicknet.net)\n\n\t* Thanks to VoipSupply for their donation of Sipura ATAs to the project\n\t\tfor T.38 testing. (http://www.voipsupply.com)\n\n\t* Thanks to Grandstream for their donation of ATAs to the project for\n\t\tT.38 testing. (http://www.grandstream.com)\n\n=== MISCELLANEOUS PATCHES ===\n\n We'd like to thank the following for their patches\n\n\t* Jim Dixon - Zapata Telephony and app_rpt\n\t\thttp://www.zapatatelephony.org/app_rpt.html\n\n\t* Russell Bryant - Asterisk release manager and countless enhancements\n\t\tand bug fixes. russell(AT)digium.com\n\n\t* Anthony Minessale II - Countless big and small fixes, and relentless\n\t\tforward\tpush. ChanSpy, ForkCDR, ControlPlayback, While/EndWhile,\n\t\tDumpChan, Dictate, MacroIf, ExecIf, ExecIfTime, RetryDial, \n\t\tMixMonitor applications; many realtime concepts and \n\t\timplementation pieces, including res_config_odbc; format_slin; \n\t\tcdr_custom; several features in Dial including L(), G() and \n\t\tenhancements to M() and D(); several CDR enhancements including\n\t\tCDR variables; attended transfer; one touch record; native MOH;\n\t\tmanager eventmask; command line '-t' flag to allow \n\t\trecording/voicemail on nfs shares; #exec command and multiline \n\t\tcomments in config files; setvar in iax and sip configs.\n\t\tanthmct(AT)yahoo.com http://www.asterlink.com\n\n\t* James Golovich - Innumerable contributions, including SIP TCP and TLS\n\t\tsupport. You can find him and asterisk-perl at \n\t\thttp://asterisk.gnuinter.net\n\n\t* Andre Bierwirth - Extension hints and status\n\n\t* Jean-Denis Girard - Various contributions from the South Pacific\n\t\tIslands jd-girard(AT)sysnux.pf http://www.sysnux.pf\n\n\t* William Jordan / Vonage - MySQL enhancements to Voicemail\n\t\twjordan(AT)vonage.com\n\n\t* Jac Kersing - Various fixes\n\n\t* Steven Critchfield - Seek and Trunc functions for playback and \n\t\trecording critch(AT)basesys.com\n\n\t* Jefferson Noxon - app_lookupcidname, app_db, and various other\n\t\tcontributions\n\n\t* Klaus-Peter Junghanns - in-band DTMF on SIP and MGCP\n\n\t* Ross Finlayson - Dynamic RTP payload support\n\n\t* Mahmut Fettahlioglu - Audio recording, music-on-hold changes, alaw\n\t\tfile format, and various fixes. Can be contacted at \n\t\tmahmut(AT)oa.com.au\n\n\t* James Dennis - Cisco SIP compatibility patches to work with SIP\n\t\tservice providers. Can be contacted at asterisk(AT)jdennis.net\n\n\t* Tilghman Lesher - ast_localtime(); ast_say_date_with_format(); \n\t\tGotoIfTime, SayUnixTime, HasNewVoicemail applications;\n\t\tCUT, SORT, EVAL, CURL, FIELDQTY, STRFTIME, some QUEUE* \n\t\tfunctions; func_odbc, cdr_adaptive_odbc, and other innumerable\n\t\tbug fixes. tilghman(AT)digium.com \n\t\thttp://asterisk.drunkcoder.com\n\n\t* Jayson Vantuyl - Manager protocol changes, various other bugs.\n\t\tjvantuyl(AT)computingedge.net\n\n\t* Thorsten Lockert - OpenBSD, FreeBSD ports, making MacOS X port run on\n\t\t10.3, dialplan include verification, route lookup on OpenBSD,\n\t\tSNMP agent support (res_snmp), various other bugs. \n\t\ttholo(AT)sigmasoft.com\n\n\t* Josh Roberson - chan_zap reload support, Advanced Voicemail Features,\n\t\t& other misc. patches. josh(AT)asteriasgi.com \n\t\thttp://www.asteriasgi.com\n\n\t* William Waites - syslog support, SIP NAT traversal for SIP-UA. \n\t\tww(AT)styx.org\n\n\t* Rich Murphey - Porting to FreeBSD, NetBSD, OpenBSD, and Darwin.\n\t\trich(AT)whiteoaklabs.com  http://whiteoaklabs.com\n\n\t* Simon Lockhart - Porting to Solaris (based on work of Logan ???)\t\n\t\tsimon(AT)slimey.org\n\n\t* Olle E. Johansson - SIP RFC compliance, documentation and testing,\n\t\ttesting, SIP outbound proxy support, Manager 1.1 update, SIP \n\t\ttransfer support, SIP presence support, SIP call state updates\n\t\t(dialog-info), QUEUE_EXISTS function, device state provider\n\t\tarchitecture, multiparking (together with mvanbaak), meetme and\n\t\tparking device states, MiniVM - the small voicemail system,\n\t\tRTP improvements, RTCP enhancements, DTMF timing fixes,\n\t\tmany documentation updates/corrections, and many bug fixes.\n\t\toej(AT)edvina.net, http://edvina.net\n\n\t* Steve Kann - new jitter buffer for IAX2\n\t\tstevek(AT)stevek.com\n\n\t* Constantine Filin - major contributions to the Asterisk Realtime\n\t\tArchitecture\n\n\t* Steve Murphy - privacy support, $[ ] parser upgrade, AEL2 parser\n\t\tupgrade. murf(AT)digium.com\n\n\t* Claude Patry - bug fixes, feature enhancements, and bug marshalling\n\t\tcpatry(AT)gmail.com\n\n\t* Miroslav Nachev, miro(AT)space-comm.com \n\t\tCOSMOS Software Enterprises, Ltd.\n\t\tVariable for No Answer Timeout for Attended Transfer\n\n\t* Slav Klenov & Vanheuverzwijn Joachim - development of the generic\n\t\tjitterbuffer Securax Ltd. info(AT)securax.be\n\n\t* Roy Sigurd Karlsbakk - providing funding for generic jitterbuffer\n\t\tdevelopment roy(AT)karlsbakk.net, Briiz Telecom AS\n\n\t* Voop AS, Nuvio Inc, Inotel S.A and Foniris Telecom A/S - rewrite\n\t\tof SIP transfers\n\n\t* Philippe Sultan - RADIUS CDR module, many fixes to res_jabber and \n\t\tgtalk/jingle channel drivers. INRIA, http://www.inria.fr/\n\n\t* John Martin, Aupix - Improved video support in the SIP channel\n\t\tT.140 text support in RTP/SIP\n\n\t* Steve Underwood - Provided T.38 pass through support.\n\n\t* George Konstantoulakis - Support for Greek in voicemail added by \n\t\tInAccess Networks (work funded by HOL, www.hol.gr) \n\t\tgkon(AT)inaccessnetworks.com\n\n\t* Daniel Nylander - Support for Swedish and Norwegian languages in\n\t\tvoicemail. http://www.danielnylander.se/\n\n\t* Stojan Sljivic - An option for maximum number of messsages per\n\t\tmailbox in voicemail.  Also an issue with voicemail \n\t\tsynchronization has been fixed. GDS Partners \n\t\twww.gdspartners.com stojan.sljivic(AT)gdspartners.com\n\n\t* Bartosz Supczinski - Support for Polish added by DIR (www.dir.pl)\n\t\tBartosz.Supczinski(AT)dir.pl\n\n\t* James Rothenberger - Support for IMAP storage integration added by\n\t\tOneBizTone LLC Work funded by University of Pennsylvania \n\t\tjar(AT)onebiztone.com\n\n\t* Paul Cadach - Bringing chan_h323 up to date, bug fixes, and more!\n\n\t* Voop AS - Financial support for a lot of work with the SIP driver \n\t\tand the IAX trunk MTU patch\n\n\t* Cedric Hans - Development of chan_unistim cedric.hans(AT)mlkj.net\n\n\t* Takao Takahashi & Mina Naguib - chan_unistim improvements for \n\t\tsmaller devices\n\n\t* Sergio Fadda - console_video: video support for chan_oss and \n\t\tchan_alsa\n\n\t* Marta Carbone - console_video and the astobj2 framework\n\n\t* Luigi Rizzo - astobj2, console_video, windows build, chan_oss cleanup,\n\t\tand a bunch of infrastructure work (loader, new_cli, ...)\n\n\t* Brett Bryant - digit option for musiconhold selection, ENUMQUERY and \n\t\tENUMRESULT functions, feature group configuration for \n\t\tfeatures.conf, per-file CLI debug and verbose settings, TCP and\n\t\tTLS support for SIP, and various bug fixes.\n\t\tbrettbryant(AT)gmail.com\n\n\t* Sergey Tamkovich - Realtime support for MusicOnHold, store and destroy\n\t\trealtime methods and implementations for odbc, sqlite, and pgsql\n\t\trealtime drivers, attended transfer updates, multiple speeds for\n\t\tControlPlayback, and multiple bug fixes See \n\t\thttp://voip-info.org/users/view/sergee serg(AT)voipsolutions.ru\n\n\t* Klaus Darillon - the SIPremoveHeader function in chan_sip and SIP Path\n\t\tSupport.\n\n\t* Moises Silva (moy) - for writing LibOpenR2, and providing support for\n\t\tit in chan_dahdi moises.silva(AT)gmail.com\n\n\t* Eliel C. Sardanons - XML documentation implementation, and various\n\t\tother contributions eliels(AT)gmail.com\n\n\t* Sean Bright - Snom call pickup, newt interface for menuselect,\n\t\tcdr_tds rewrite, countless other improvements, fixes, and good\n\t\tideas. sean(AT)malleable.com\n\n\t* Jan Kaláb - Calendaring support for Exchange Server 2007+ via \n\t\tExchange Web Services.\n\n\t* University of Oslo (uio.no), Norway - SIP Max-Forwards setting \n\t\tsupport (developed by oej)\n\n\t* FCCN, Lissabon, Portugal - SIP show channels CLI command \n\t\t(developed by oej)\n\n\t* Viagenie, Canada - IPv6 support in socket layers and SIP \n\t\timplementation Developers: Marc Blanchet, Simon Perreault and \n\t\tJean-Philippe Dionne\n\n\t* ClearIT AB, Sweden - res_mutestream, queue_exists and various other\n\t\tpatches (developed by oej)\n\n\t* Despegar.com, Argentina - AstData API implementation, also sponsored\n\t\tby Google as part of the gsoc/2009 program (developed by Eliel)\n\n\t* Philippe Lindheimer - DEV_STATE additions to CCSS\n\n\t* Andrew \"lathama\" Latham <lathama at gmail dot com>\n\t\tDoxygen, HTTP-Static, Phoneprov, make update\n\n\t* George Joseph - PJSIP CLI commands, PJSIP_HEADER dialplan function\n\n=== OTHER CONTRIBUTIONS ===\n\n We'd like to thank the following for their listed contributions.\n\n\t* John Todd - Monkey sounds and associated teletorture prompt\n\n\t* Michael Jerris - bug marshaling\n\t\n\t* Leif Madsen, Jared Smith and Jim van Meggelen - the Asterisk book\n\t\tavailable under a Creative Commons License at\n\t\thttp://www.asteriskdocs.org\n\n\t* Brian M. Clapper - poll.c emulation \n\t\tThis product includes software developed by \n\t\tBrian M. Clapper <bmc(AT)clapper.org>\n\n=== HOLD MUSIC ===\n\n We'd like to thank the following for hold music\n\n\t* Music provided by www.opsound.org\n\n=== OTHER SOURCE CODE IN ASTERISK ===\n\n We'd like to thank the following for their code use\n\n\t* Asterisk uses libedit, the lightweight readline replacement from\n\t\tNetBSD.\n\t* The cdr_radius module uses libradiusclient-ng, which is also from\n\t\tNetBSD.\n\t* They are BSD-licensed and require the following statement:\n\t\tThis product includes software developed by the NetBSD\n\t\tFoundation, Inc. and its contributors.\n\n\t* Digium did not implement the codecs in Asterisk.\n\t\tHere is the copyright on the GSM source:\n\t\tCopyright 1992, 1993, 1994 by Jutta Degener and Carsten Bormann,\n\t\tTechnische Universitaet Berlin\n\nAny use of this software is permitted provided that this notice is not\nremoved and that neither the authors nor the Technische Universitaet Berlin\nare deemed to have made any representations as to the suitability of this\nsoftware for any purpose nor are held responsible for any defects of\nthis software.  THERE IS ABSOLUTELY NO WARRANTY FOR THIS SOFTWARE.\n\nAs a matter of courtesy, the authors request to be informed about uses\nthis software has found, about bugs in this software, and about any\nimprovements that may be of general interest.\n\nBerlin, 28.11.1994\nJutta Degener\nCarsten Bormann\n\nAnd the copyright on the ADPCM source:\n\nCopyright 1992 by Stichting Mathematisch Centrum, Amsterdam, The\nNetherlands.\n\n\t                 All Rights Reserved\n\nPermission to use, copy, modify, and distribute this software and its\ndocumentation for any purpose and without fee is hereby granted,\nprovided that the above copyright notice appear in all copies and that\nboth that copyright notice and this permission notice appear in\nsupporting documentation, and that the names of Stichting Mathematisch\nCentrum or CWI not be used in advertising or publicity pertaining to\ndistribution of the software without specific, written prior permission.\n\nSTICHTING MATHEMATISCH CENTRUM DISCLAIMS ALL WARRANTIES WITH REGARD TO\nTHIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS, IN NO EVENT SHALL STICHTING MATHEMATISCH CENTRUM BE LIABLE\nFOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT\nOF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 2.9580078125,
          "content": "Asterisk is distributed under the GNU General Public License version 2\nand is also available under alternative licenses negotiated directly\nwith Digium, Inc. If you obtained Asterisk under the GPL, then the GPL\napplies to all loadable Asterisk modules used on your system as well,\nexcept as defined below. The GPL (version 2) is included in this\nsource tree in the file COPYING.\n\nThis package also includes various components that are not part of\nAsterisk itself; these components are in the 'contrib' directory\nand its subdirectories. These components are also distributed under the\nGPL version 2 as well.\n\nDigium, Inc. (formerly Linux Support Services) holds copyright\nand/or sufficient licenses to all components of the Asterisk\npackage, and therefore can grant, at its sole discretion, the ability\nfor companies, individuals, or organizations to create proprietary or\nOpen Source (even if not GPL) modules which may be dynamically linked at\nruntime with the portions of Asterisk which fall under our\ncopyright/license umbrella, or are distributed under more flexible\nlicenses than GPL.\n\nIf you wish to use our code in other GPL programs, don't worry --\nthere is no requirement that you provide the same exception in your\nGPL'd products (although if you've written a module for Asterisk we\nwould strongly encourage you to make the same exception that we do).\n\nSpecific permission is also granted to link Asterisk with OpenSSL, OpenH323\nUniMRCP, and/or the UW IMAP Toolkit and distribute the resulting binary files.\n\nIn addition, Asterisk implements several management/control protocols.\nThis includes the Asterisk Manager Interface (AMI), the Asterisk Gateway\nInterface (AGI), and the Asterisk REST Interface (ARI). It is our belief\nthat applications using these protocols to manage or control an Asterisk\ninstance do not have to be licensed under the GPL or a compatible license,\nas we believe these protocols do not create a 'derivative work' as referred\nto in the GPL. However, should any court or other judiciary body find that\nthese protocols do fall under the terms of the GPL, then we hereby grant you a\nlicense to use these protocols in combination with Asterisk in external\napplications licensed under any license you wish.\n\nThe 'Asterisk' name and logos are trademarks owned by Digium, Inc.,\nand use of them is subject to our trademark licensing policies. If you\nwish to use these trademarks for purposes other than simple\nredistribution of Asterisk source code obtained from Digium, you\nshould contact our licensing department to determine the necessary\nsteps you must take. For more information on this policy, please read:\n\nhttps://www.sangoma.com/wp-content/uploads/Sangoma-Trademark-Policy-1.pdf\n\nIf you have any questions regarding our licensing policy, please\ncontact us:\n\n+1.877.344.4861 (via telephone in the USA)\n+1.256.428.6000 (via telephone outside the USA)\n+1.256.864.0464 (via FAX inside or outside the USA)\nlicensing@digium.com (via email)\n\nDigium, Inc.\n445 Jan Davis Drive\nHuntsville, AL  35806\nUSA\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 42.404296875,
          "content": "#\n# Asterisk -- An open source telephony toolkit.\n#\n# Top level Makefile\n#\n# Copyright (C) 1999-2010, Digium, Inc.\n#\n# Mark Spencer <markster@digium.com>\n#\n# This program is free software, distributed under the terms of\n# the GNU General Public License\n#\n\n# All Makefiles use the following variables:\n#\n# ASTCFLAGS - compiler options provided by the user (if any)\n# _ASTCFLAGS - compiler options provided by the build system\n# ASTLDFLAGS - linker flags (not libraries) provided by the user (if any)\n# _ASTLDFLAGS - linker flags (not libraries) provided by the build system\n# LIBS - additional libraries, at top-level for all links,\n#      on a single object just for that object\n# SOLINK - linker flags used only for creating dynamically loadable modules\n#          as .so files\n# DYLINK - linker flags used only for creating shared libraries\n#          (.so files on Unix-type platforms, .dylib on Darwin)\n#\n# Values for ASTCFLAGS and ASTLDFLAGS can be specified in the\n# environment when running make, as follows:\n#\n#\t$ ASTCFLAGS=\"-Werror\" make ...\n#\n# or as a variable value on the make command line itself:\n#\n#\t$ make ASTCFLAGS=\"-Werror\" ...\n\nexport ASTTOPDIR\t\t# Top level dir, used in subdirs' Makefiles\nexport ASTERISKVERSION\nexport ASTERISKVERSIONNUM\n\n#--- values used for default paths\n\n# DESTDIR is the staging (or final) directory where files are copied\n# during the install process. Define it before 'export', otherwise\n# export will set it to the empty string making ?= fail.\n# Trying to run asterisk from the DESTDIR is completely unsupported\n# behavior.\n# WARNING: do not put spaces or comments after the value.\nDESTDIR?=$(INSTALL_PATH)\nexport DESTDIR\n\nexport INSTALL_PATH       # Additional prefix for the following paths\nexport ASTCACHEDIR\nexport ASTETCDIR          # Path for config files\nexport ASTVARRUNDIR\nexport ASTSPOOLDIR\nexport ASTVARLIBDIR\nexport ASTDATADIR\nexport ASTDBDIR\nexport ASTLOGDIR\nexport ASTLIBDIR\nexport ASTMODDIR\nexport ASTMANDIR\nexport ASTHEADERDIR\nexport ASTSBINDIR\nexport AGI_DIR\nexport ASTCONFPATH\nexport ASTKEYDIR\n\nexport OSARCH             # Operating system\n\nexport NOISY_BUILD        # Used in Makefile.rules\nexport MENUSELECT_CFLAGS  # Options selected in menuselect.\nexport AST_DEVMODE        # Set to \"yes\" for additional compiler\n                          # and runtime checks\nexport AST_DEVMODE_STRICT # Enables shadow warnings (-Wshadow)\n\nexport _SOLINK            # linker flags for all shared objects\nexport SOLINK             # linker flags for loadable modules\nexport DYLINK             # linker flags for shared libraries\n\n#--- paths to various commands\n# The makeopts include below tries to set these if they're found during\n# configure.\nexport CC\nexport CXX\nexport AR\nexport RANLIB\nexport HOST_CC\nexport BUILD_CC\nexport INSTALL\nexport STRIP\nexport DOWNLOAD\nexport AWK\nexport GREP\nexport MD5\nexport WGET_EXTRA_ARGS\nexport LDCONFIG\nexport LDCONFIG_FLAGS\nexport PYTHON\nexport TAR\nexport PATCH\nexport SED\nexport NM\nexport FIND\nexport BASENAME\nexport DIRNAME\nexport XMLLINT\nexport XMLSTARLET\n\n# makeopts is required unless the goal is just {dist{-}}clean\nifeq ($(MAKECMDGOALS),clean)\nelse ifeq ($(MAKECMDGOALS),distclean)\nelse ifeq ($(MAKECMDGOALS),dist-clean)\nelse\ninclude makeopts\nendif\n\n# start the primary CFLAGS and LDFLAGS with any that were provided\n# to the configure script\n_ASTCFLAGS:=$(CONFIG_CFLAGS) $(CONFIG_SIGNED_CHAR)\n_ASTLDFLAGS:=$(CONFIG_LDFLAGS)\n\n# Some build systems, such as the one in openwrt, like to pass custom target\n# CFLAGS and LDFLAGS in the COPTS and LDOPTS variables; these should also\n# go before any build-system computed flags, since they are defaults, not\n# overrides\n_ASTCFLAGS+=$(COPTS)\n_ASTLDFLAGS+=$(LDOPTS)\n\n# libxml2 cflags\n_ASTCFLAGS+=$(LIBXML2_INCLUDE)\n\n# BIND_8_COMPAT\n_ASTCFLAGS+=$(BIND8_CFLAGS)\n\n#Uncomment this to see all build commands instead of 'quiet' output\n#NOISY_BUILD=yes\n\nempty:=\nspace:=$(empty) $(empty)\nASTTOPDIR:=$(subst $(space),\\$(space),$(CURDIR))\n\n# Overwrite config files on \"make samples\" or other config installation targets\nOVERWRITE=y\n\n# Include debug and macro symbols in the executables (-g) and profiling info (-pg)\nDEBUG=-g3\n\n# Asterisk.conf is located in ASTETCDIR or by using the -C flag\n# when starting Asterisk\nASTCONFPATH=$(ASTETCDIR)/asterisk.conf\nAGI_DIR=$(ASTDATADIR)/agi-bin\n\n# If you use Apache, you may determine by a grep 'DocumentRoot' of your httpd.conf file\nHTTP_DOCSDIR=/var/www/html\n# Determine by a grep 'ScriptAlias' of your Apache httpd.conf file\nHTTP_CGIDIR=/var/www/cgi-bin\n\n# If your platform's linker expects a prefix on symbols generated from compiling C\n# source files, set LINKER_SYMBOL_PREFIX to that value. On some systems, exported symbols\n# from C source files are prefixed with '_', for example. If this value is not set\n# properly, the linker scripts that live in the '*.exports' files in various places\n# in this tree will unintentionally suppress symbols that should be visible\n# in the final binary objects.\nLINKER_SYMBOL_PREFIX=\n\n# Uncomment this to use the older DSP routines\n#_ASTCFLAGS+=-DOLD_DSP_ROUTINES\n\n# Default install directory for DAHDI hooks.\nDAHDI_UDEV_HOOK_DIR = /usr/share/dahdi/span_config.d\n\n# If the file .asterisk.makeopts is present in your home directory, you can\n# include all of your favorite menuselect options so that every time you download\n# a new version of Asterisk, you don't have to run menuselect to set them.\n# The file /etc/asterisk.makeopts will also be included but can be overridden\n# by the file in your home directory.\n\nifeq ($(wildcard menuselect.makeopts),)\n\tUSER_MAKEOPTS=$(wildcard ~/.asterisk.makeopts)\n\tGLOBAL_MAKEOPTS=$(wildcard /etc/asterisk.makeopts)\nelse\n\tUSER_MAKEOPTS=\n\tGLOBAL_MAKEOPTS=\nendif\n\n\nMOD_SUBDIR_CFLAGS=\"-I$(ASTTOPDIR)/include\"\nOTHER_SUBDIR_CFLAGS=\"-I$(ASTTOPDIR)/include\"\n\n# Create OPTIONS variable, but probably we can assign directly to ASTCFLAGS\nOPTIONS=\n\nifeq ($(findstring -save-temps,$(_ASTCFLAGS) $(ASTCFLAGS)),)\n  ifeq ($(findstring -pipe,$(_ASTCFLAGS) $(ASTCFLAGS)),)\n    _ASTCFLAGS+=-pipe\n  endif\nendif\n\nifeq ($(findstring -Wall,$(_ASTCFLAGS) $(ASTCFLAGS)),)\n  _ASTCFLAGS+=-Wall\nendif\n\n_ASTCFLAGS+=-Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations $(AST_NESTED_FUNCTIONS) $(AST_CLANG_BLOCKS) $(DEBUG)\nADDL_TARGETS=\n\nifeq ($(AST_DEVMODE),yes)\n  _ASTCFLAGS+=-Werror\n  _ASTCFLAGS+=-Wunused\n  _ASTCFLAGS+=$(AST_DECLARATION_AFTER_STATEMENT)\n  _ASTCFLAGS+=$(AST_TRAMPOLINES)\n  _ASTCFLAGS+=-Wundef\n  _ASTCFLAGS+=-Wmissing-format-attribute\n  _ASTCFLAGS+=-Wformat=2\n  ifeq ($(AST_DEVMODE_STRICT),yes)\n    _ASTCFLAGS+=-Wshadow\n  endif\n  ifneq ($(DISABLE_XMLDOC),yes)\n    ADDL_TARGETS+=validate-docs\n  endif\nendif\n\nifeq ($(OSARCH),NetBSD)\n  _ASTCFLAGS+=-isystem /usr/pkg/include\nelse ifneq ($(findstring BSD,$(OSARCH)),)\n  _ASTCFLAGS+=-isystem /usr/local/include\nendif\n\nifeq ($(OSARCH),FreeBSD)\n  # -V is understood by BSD Make, not by GNU make.\n  BSDVERSION=$(shell make -V OSVERSION -f /usr/share/mk/bsd.port.subdir.mk)\n  _ASTCFLAGS+=$(shell if test $(BSDVERSION) -lt 500016 ; then echo \"-D_THREAD_SAFE\"; fi)\nendif\n\nifeq ($(OSARCH),NetBSD)\n  _ASTCFLAGS+=-pthread -D__LIBPTHREAD_SOURCE__ -I/usr/pkg/include\nendif\n\nifeq ($(OSARCH),OpenBSD)\n  _ASTCFLAGS+=-pthread -ftrampolines\nendif\n\nifeq ($(OSARCH),linux-uclibc)\n  AST_LIBS+=-lpthread -ldl\nendif\n\nifeq ($(OSARCH),SunOS)\n  _ASTCFLAGS+=-Wcast-align -DSOLARIS -I../include/solaris-compat -I/opt/ssl/include -I/usr/local/ssl/include -D_XPG4_2 -D__EXTENSIONS__\nendif\n\nifeq ($(GREP),)\nelse ifeq ($(GREP),:)\nelse\n  ASTERISKVERSION:=$(shell GREP=$(GREP) AWK=$(AWK) GIT=$(GIT) build_tools/make_version .)\nendif\nifneq ($(AWK),)\n  ifneq ($(wildcard .version),)\n    ASTERISKVERSIONNUM:=$(shell $(SED) -e 's/^certified\\///' -e 's/-cert/./' .version | $(AWK) -F. '{printf \"%01d%02d%02d\", $$1, $$2, $$3}')\n  endif\nendif\n\nifneq ($(wildcard .svn),)\n  ASTERISKVERSIONNUM:=999999\nendif\n\nifneq ($(DISABLE_XMLDOC),yes)\n  CORE_XMLDOC=doc/core-en_US.xml\n  FULL_XMLDOC=doc/full-en_US.xml\nelse\n  CORE_XMLDOC=\n  FULL_XMLDOC=\nendif\n\n_ASTCFLAGS+=$(OPTIONS)\n\nMOD_SUBDIRS:=third-party channels pbx apps codecs formats cdr cel bridges funcs tests main res addons $(LOCAL_MOD_SUBDIRS)\nOTHER_SUBDIRS:=utils agi contrib\nSUBDIRS:=$(OTHER_SUBDIRS) $(MOD_SUBDIRS)\nSUBDIRS_INSTALL:=$(SUBDIRS:%=%-install)\nSUBDIRS_CLEAN:=$(SUBDIRS:%=%-clean)\nSUBDIRS_DIST_CLEAN:=$(SUBDIRS:%=%-dist-clean)\nSUBDIRS_UNINSTALL:=$(SUBDIRS:%=%-uninstall)\nMOD_SUBDIRS_MENUSELECT_TREE:=$(MOD_SUBDIRS:%=%-menuselect-tree)\n\nifneq ($(findstring darwin,$(OSARCH)),)\n  _ASTCFLAGS+=-D__Darwin__ -mmacosx-version-min=10.6\n  _SOLINK=-mmacosx-version-min=10.6 -Wl,-undefined,dynamic_lookup\n  _SOLINK+=/usr/lib/bundle1.o\n  SOLINK=-bundle $(_SOLINK)\n  DYLINK=-Wl,-dylib $(_SOLINK)\n  _ASTLDFLAGS+=-L/usr/local/lib\nelse\n# These are used for all but Darwin\n  SOLINK=-shared\n  DYLINK=$(SOLINK)\n  ifeq ($(OSARCH),NetBSD)\n    _ASTLDFLAGS+=-L/usr/pkg/lib\n  else ifneq ($(findstring BSD,$(OSARCH)),)\n    _ASTLDFLAGS+=-L/usr/local/lib\n  endif\nendif\n\n# Include rpath settings\n_ASTLDFLAGS+=$(AST_RPATH)\n\nifeq ($(OSARCH),SunOS)\n  SOLINK=-shared -fpic -L/usr/local/ssl/lib -lrt\n  DYLINK=$(SOLINK)\nendif\n\nifeq ($(OSARCH),OpenBSD)\n  SOLINK=-shared -fpic\n  DYLINK=$(SOLINK)\nendif\n\n# comment to print directories during submakes\n#PRINT_DIR=yes\n\nifneq ($(INSIDE_EMACS),)\nPRINT_DIR=yes\nendif\n\nSILENTMAKE:=$(MAKE) --quiet --no-print-directory\nifneq ($(PRINT_DIR)$(NOISY_BUILD),)\nSUBMAKE:=$(MAKE)\nelse\nSUBMAKE:=$(MAKE) --quiet --no-print-directory\nendif\n\nmkfile_path := $(abspath $(lastword $(MAKEFILE_LIST)))\nmkfile_dir := $(dir $(mkfile_path))\n\n# $(MAKE) is printed in several places, and we want it to be a\n# fixed size string. Define a variable whose name has also the\n# same size, so we can easily align text.\nifeq ($(MAKE), gmake)\n\tmK=\"gmake\"\nelse\n\tmK=\" make\"\nendif\n\nall: _all\n\t@echo \" +--------- Asterisk Build Complete ---------+\"\n\t@echo \" + Asterisk has successfully been built, and +\"\n\t@echo \" + can be installed by running:              +\"\n\t@echo \" +                                           +\"\n\t@echo \" +               $(mK) install               +\"\n\t@echo \" +-------------------------------------------+\"\n\nfull: _full\n\t@echo \" +--------- Asterisk Build Complete ---------+\"\n\t@echo \" + Asterisk has successfully been built, and +\"\n\t@echo \" + can be installed by running:              +\"\n\t@echo \" +                                           +\"\n\t@echo \" +               $(mK) install               +\"\n\t@echo \" +-------------------------------------------+\"\n\n\n_all: makeopts $(SUBDIRS) $(CORE_XMLDOC) $(ADDL_TARGETS)\n\n_full: makeopts $(SUBDIRS) $(FULL_XMLDOC) $(ADDL_TARGETS)\n\nmakeopts: configure\n\t@echo \"****\"\n\t@echo \"**** The configure script must be executed before running '$(MAKE)'.\"\n\t@echo \"****               Please run \\\"./configure\\\".\"\n\t@echo \"****\"\n\t@exit 1\n\nmenuselect.makeopts: menuselect/menuselect menuselect-tree makeopts build_tools/menuselect-deps $(GLOBAL_MAKEOPTS) $(USER_MAKEOPTS)\nifeq ($(filter %.menuselect,$(MAKECMDGOALS)),)\n\tmenuselect/menuselect --check-deps $@\n\tmenuselect/menuselect --check-deps $@ $(GLOBAL_MAKEOPTS) $(USER_MAKEOPTS)\nendif\n\n$(MOD_SUBDIRS_MENUSELECT_TREE):\n\t+@$(SUBMAKE) -C $(@:-menuselect-tree=) SUBDIR=$(@:-menuselect-tree=) moduleinfo\n\t+@$(SUBMAKE) -C $(@:-menuselect-tree=) SUBDIR=$(@:-menuselect-tree=) makeopts\n\n$(SUBDIRS): makeopts .lastclean main/version.c include/asterisk/build.h defaults.h\n\nifeq ($(findstring $(OSARCH), mingw32 cygwin ),)\nmain: third-party\nelse\n    # Windows: we need to build main (i.e. the asterisk dll) first,\n    # followed by res, followed by the other directories, because\n    # dll symbols must be resolved during linking and not at runtime.\nD1:= $(filter-out main,$(MOD_SUBDIRS))\nD1:= $(filter-out res,$(D1))\n\n$(D1): res\nres:\tmain\nendif\n\n$(MOD_SUBDIRS): makeopts\n\t+@_ASTCFLAGS=\"$(MOD_SUBDIR_CFLAGS) $(_ASTCFLAGS)\" ASTCFLAGS=\"$(ASTCFLAGS)\" _ASTLDFLAGS=\"$(_ASTLDFLAGS)\" ASTLDFLAGS=\"$(ASTLDFLAGS)\" $(SUBMAKE) --no-builtin-rules -C $@ SUBDIR=$@ all\n\n$(OTHER_SUBDIRS): makeopts\n\t+@_ASTCFLAGS=\"$(OTHER_SUBDIR_CFLAGS) $(_ASTCFLAGS)\" ASTCFLAGS=\"$(ASTCFLAGS)\" _ASTLDFLAGS=\"$(_ASTLDFLAGS)\" ASTLDFLAGS=\"$(ASTLDFLAGS)\" $(SUBMAKE) --no-builtin-rules -C $@ SUBDIR=$@ all\n\ndefaults.h: makeopts .lastclean build_tools/make_defaults_h\n\t@build_tools/make_defaults_h > $@.tmp\n\t@cmp -s $@.tmp $@ || mv $@.tmp $@\n\t@rm -f $@.tmp\n\nmain/version.c: FORCE include/asterisk/buildopts.h menuselect.makeopts .lastclean\n\t@build_tools/make_version_c > $@.tmp\n\t@cmp -s $@.tmp $@ || mv $@.tmp $@\n\t@rm -f $@.tmp\n\ninclude/asterisk/buildopts.h: menuselect.makeopts .lastclean\n\t@build_tools/make_buildopts_h > $@.tmp\n\t@cmp -s $@.tmp $@ || mv $@.tmp $@\n\t@rm -f $@.tmp\n\n# build.h must depend on .lastclean, or parallel make may wipe it out after it's\n# been created.\ninclude/asterisk/build.h: .lastclean\n\t@build_tools/make_build_h > $@\n\n$(SUBDIRS_CLEAN):\n\t+@$(SUBMAKE) -C $(@:-clean=) clean\n\n$(SUBDIRS_DIST_CLEAN):\n\t+@$(SUBMAKE) -C $(@:-dist-clean=) dist-clean\n\nclean: $(SUBDIRS_CLEAN) _clean\n\n_clean:\n\trm -f defaults.h\n\trm -f include/asterisk/build.h\n\trm -f main/version.c\n\trm -f doc/core-en_US.xml\n\trm -f doc/full-en_US.xml\n\trm -f doc/rest-api/*.wiki\n\trm -f doxygen.log\n\trm -rf latex\n\trm -f rest-api-templates/*.pyc\n\t@$(MAKE) -C menuselect clean\n\tcp -f .cleancount .lastclean\n\ndist-clean: distclean\n\ndistclean: $(SUBDIRS_DIST_CLEAN) _clean\n\t@$(MAKE) -C menuselect dist-clean\n\t@$(MAKE) -C sounds dist-clean\n\trm -f menuselect.makeopts makeopts menuselect-tree menuselect.makedeps\n\trm -f config.log config.status config.cache\n\trm -rf autom4te.cache\n\trm -f include/asterisk/autoconfig.h\n\trm -f include/asterisk/buildopts.h\n\trm -rf doc/api\n\trm -f doc/Doxyfile\n\trm -f build_tools/menuselect-deps\n\ndatafiles: _all $(CORE_XMLDOC)\n\tCFLAGS=\"$(_ASTCFLAGS) $(ASTCFLAGS)\" build_tools/mkpkgconfig \"$(DESTDIR)$(libdir)/pkgconfig\";\n\n#\t# Recursively install contents of the static-http directory, in case\n#\t# extra content is provided there. See contrib/scripts/get_swagger_ui.sh\n\tfind static-http | while read x; do \\\n\t\tif test -d $$x; then \\\n\t\t\t$(INSTALL) -m 755 -d \"$(DESTDIR)$(ASTDATADIR)/$$x\"; \\\n\t\telse \\\n\t\t\t$(INSTALL) -m 644 $$x \"$(DESTDIR)$(ASTDATADIR)/$$x\" ; \\\n\t\tfi \\\n\tdone\nifneq ($(DISABLE_XMLDOC),yes)\n\t$(INSTALL) -m 644 doc/core-en_US.xml \"$(DESTDIR)$(ASTDATADIR)/static-http\";\n\t$(INSTALL) -m 644 doc/appdocsxml.xslt \"$(DESTDIR)$(ASTDATADIR)/static-http\";\nendif\n\tif [ -d doc/tex/asterisk ] ; then \\\n\t\t$(INSTALL) -d \"$(DESTDIR)$(ASTDATADIR)/static-http/docs\" ; \\\n\t\tfor n in doc/tex/asterisk/* ; do \\\n\t\t\t$(INSTALL) -m 644 $$n \"$(DESTDIR)$(ASTDATADIR)/static-http/docs\" ; \\\n\t\tdone \\\n\tfi\n\tfor x in images/*.jpg; do \\\n\t\t$(INSTALL) -m 644 $$x \"$(DESTDIR)$(ASTDATADIR)/images\" ; \\\n\tdone\n\t$(MAKE) -C sounds install\n\tfind rest-api -name \"*.json\" | while read x; do \\\n\t\t$(INSTALL) -m 644 $$x \"$(DESTDIR)$(ASTDATADIR)/rest-api\" ; \\\n\tdone\n\nDOC_MOD_SUBDIRS := $(filter-out third-party,$(MOD_SUBDIRS))\nXML_core_en_US := $(shell build_tools/make_xml_documentation --command=print_dependencies --source-tree=. --mod-subdirs=\"$(DOC_MOD_SUBDIRS)\")\n# core-en_US.xml is the normal documentation created with asterisk builds.\ndoc/core-en_US.xml: makeopts .lastclean $(XML_core_en_US)\n\t@build_tools/make_xml_documentation --command=create_xml --source-tree=. --mod-subdirs=\"$(DOC_MOD_SUBDIRS)\" \\\n\t\t--with-moduleinfo --output-file=$@\n\n# The full-en_US.xml target is only called by the wiki documentation generation process\n# and does special post-processing in preparation for uploading to the wiki.\n# It creates full-en_US.xml but then re-creates core-en_US.xml as well.\ndoc/full-en_US.xml: makeopts .lastclean $(XML_core_en_US)\nifeq ($(PYTHON),:)\n\t@echo \"--------------------------------------------------------------------------\"\n\t@echo \"---        Please install python to build full documentation           ---\"\n\t@echo \"--------------------------------------------------------------------------\"\nelse\n\t@build_tools/make_xml_documentation --command=create_xml --source-tree=. --mod-subdirs=\"$(DOC_MOD_SUBDIRS)\" \\\n\t\t--for-wiki --output-file=$@ --core-output-file=./doc/core-en_US.xml\nendif\n\nvalidate-docs: doc/core-en_US.xml\nifeq ($(XMLSTARLET)$(XMLLINT),::)\n\t@echo \"--------------------------------------------------------------------------\"\n\t@echo \"--- Please install xmllint or xmlstarlet to validate the documentation ---\"\n\t@echo \"--------------------------------------------------------------------------\"\nelse\n  ifneq ($(XMLLINT),:)\n\t$(XMLLINT) --dtdvalid doc/appdocsxml.dtd --noout $<\n  else\n\t$(XMLSTARLET) val -d doc/appdocsxml.dtd $<\n  endif\nendif\n\nupdate:\n\t@if [ -d .svn ]; then \\\n\t\techo \"Updating from Subversion...\" ; \\\n\t\tfromrev=\"`svn info | $(AWK) '/Revision: / {print $$2}'`\"; \\\n\t\tsvn update | tee update.out; \\\n\t\ttorev=\"`svn info | $(AWK) '/Revision: / {print $$2}'`\"; \\\n\t\techo \"`date`  Updated from revision $${fromrev} to $${torev}.\" >> update.log; \\\n\t\trm -f .version; \\\n\t\tif [ `grep -c ^C update.out` -gt 0 ]; then \\\n\t\t\techo ; echo \"The following files have conflicts:\" ; \\\n\t\t\tgrep ^C update.out | cut -b4- ; \\\n\t\tfi ; \\\n\t\trm -f update.out; \\\n\telse \\\n\t\techo \"Not under version control\";  \\\n\tfi\n\nNEWHEADERS=$(notdir $(wildcard include/asterisk/*.h))\nOLDHEADERS=$(filter-out $(NEWHEADERS) $(notdir $(DESTDIR)$(ASTHEADERDIR)),$(notdir $(wildcard $(DESTDIR)$(ASTHEADERDIR)/*.h)))\nINSTALLDIRS=\"$(ASTLIBDIR)\" \"$(ASTMODDIR)\" \"$(ASTSBINDIR)\" \"$(ASTCACHEDIR)\" \"$(ASTETCDIR)\" \"$(ASTVARRUNDIR)\" \\\n\t\"$(ASTSPOOLDIR)\" \"$(ASTSPOOLDIR)/dictate\" \"$(ASTSPOOLDIR)/meetme\" \\\n\t\"$(ASTSPOOLDIR)/monitor\" \"$(ASTSPOOLDIR)/system\" \"$(ASTSPOOLDIR)/tmp\" \\\n\t\"$(ASTSPOOLDIR)/voicemail\" \"$(ASTSPOOLDIR)/recording\" \\\n\t\"$(ASTLOGDIR)\" \"$(ASTLOGDIR)/cdr-csv\" \"$(ASTLOGDIR)/cdr-custom\" \\\n\t\"$(ASTLOGDIR)/cel-custom\" \"$(ASTDATADIR)\" \"$(ASTDATADIR)/documentation\" \\\n\t\"$(ASTDATADIR)/documentation/thirdparty\" \"$(ASTDATADIR)/firmware\" \\\n\t\"$(ASTDATADIR)/firmware/iax\" \"$(ASTDATADIR)/images\" \"$(ASTDATADIR)/keys\" \\\n\t\"$(ASTDATADIR)/phoneprov\" \"$(ASTDATADIR)/rest-api\" \"$(ASTDATADIR)/static-http\" \\\n\t\"$(ASTDATADIR)/sounds\" \"$(ASTDATADIR)/moh\" \"$(ASTMANDIR)/man8\" \"$(AGI_DIR)\" \"$(ASTDBDIR)\" \\\n\t\"$(ASTDATADIR)/third-party\" \"${ASTDATADIR}/keys/stir_shaken\" \"${ASTDATADIR}/keys/stir_shaken/cache\"\n\ninstalldirs:\n\t@for i in $(INSTALLDIRS); do \\\n\t\tif [ ! -z \"$${i}\" -a ! -d \"$(DESTDIR)$${i}\" ]; then \\\n\t\t\t$(INSTALL) -d \"$(DESTDIR)$${i}\"; \\\n\t\tfi; \\\n\tdone\n\nmain-bininstall:\n\t+@DESTDIR=\"$(DESTDIR)\" ASTSBINDIR=\"$(ASTSBINDIR)\" ASTLIBDIR=\"$(ASTLIBDIR)\" $(SUBMAKE) -C main bininstall\n\nbininstall: _all installdirs $(SUBDIRS_INSTALL) main-bininstall\n\t$(INSTALL) -m 755 contrib/scripts/astversion \"$(DESTDIR)$(ASTSBINDIR)/\"\n\t$(INSTALL) -m 755 contrib/scripts/astgenkey \"$(DESTDIR)$(ASTSBINDIR)/\"\n\t$(INSTALL) -m 755 contrib/scripts/autosupport \"$(DESTDIR)$(ASTSBINDIR)/\"\nifneq ($(HAVE_SBIN_LAUNCHD),1)\n\t./build_tools/install_subst contrib/scripts/safe_asterisk \"$(DESTDIR)$(ASTSBINDIR)/safe_asterisk\";\nendif\n\nifneq ($(DISABLE_XMLDOC),yes)\n\t$(INSTALL) -m 644 doc/core-*.xml \"$(DESTDIR)$(ASTDATADIR)/documentation\"\n\t$(INSTALL) -m 644 doc/appdocsxml.xslt \"$(DESTDIR)$(ASTDATADIR)/documentation\"\n\t$(INSTALL) -m 644 doc/appdocsxml.dtd \"$(DESTDIR)$(ASTDATADIR)/documentation\"\nendif\n\t$(INSTALL) -m 644 doc/asterisk.8 \"$(DESTDIR)$(ASTMANDIR)/man8\"\n\t$(INSTALL) -m 644 doc/astdb*.8 \"$(DESTDIR)$(ASTMANDIR)/man8\"\n\t$(INSTALL) -m 644 contrib/scripts/astgenkey.8 \"$(DESTDIR)$(ASTMANDIR)/man8\"\n\t$(INSTALL) -m 644 contrib/scripts/autosupport.8 \"$(DESTDIR)$(ASTMANDIR)/man8\"\n\t$(INSTALL) -m 644 contrib/scripts/safe_asterisk.8 \"$(DESTDIR)$(ASTMANDIR)/man8\"\n\tif [ -f contrib/firmware/iax/iaxy.bin ] ; then \\\n\t\t$(INSTALL) -m 644 contrib/firmware/iax/iaxy.bin \"$(DESTDIR)$(ASTDATADIR)/firmware/iax/iaxy.bin\"; \\\n\tfi\nifeq ($(HAVE_DAHDI),1)\n\t$(INSTALL) -d $(DESTDIR)/$(DAHDI_UDEV_HOOK_DIR)\n\t$(INSTALL) -m 644 contrib/scripts/dahdi_span_config_hook $(DESTDIR)$(DAHDI_UDEV_HOOK_DIR)/40-asterisk\nendif\n\n$(SUBDIRS_INSTALL):\n\t+@DESTDIR=\"$(DESTDIR)\" ASTSBINDIR=\"$(ASTSBINDIR)\" ASTDATADIR=\"$(ASTDATADIR)\" $(SUBMAKE) -C $(@:-install=) install\n\nNEWMODS:=$(foreach d,$(MOD_SUBDIRS),$(notdir $(wildcard $(d)/*.so)))\nOLDMODS=$(filter-out $(NEWMODS) $(notdir $(DESTDIR)$(ASTMODDIR)),$(notdir $(wildcard $(DESTDIR)$(ASTMODDIR)/*.so)))\nifneq ($(BASH),:)\n\tFILMODS=$(filter-out $(shell ./build_tools/list_valid_installed_externals),$(OLDMODS))\nelse\n\tFILMODS=$(OLDMODS)\nendif\nBADMODS=$(strip $(FILMODS))\n\noldmodcheck:\n\t@if [ -n \"$(BADMODS)\" ]; then \\\n\t\techo \" WARNING WARNING WARNING\" ;\\\n\t\techo \"\" ;\\\n\t\techo \" Your Asterisk modules directory, located at\" ;\\\n\t\techo \" $(DESTDIR)$(ASTMODDIR)\" ;\\\n\t\techo \" contains modules that were not installed by this \" ;\\\n\t\techo \" version of Asterisk. Please ensure that these\" ;\\\n\t\techo \" modules are compatible with this version before\" ;\\\n\t\techo \" attempting to run Asterisk.\" ;\\\n\t\techo \"\" ;\\\n\t\tfor f in $(BADMODS); do \\\n\t\t\techo \"    $$f\" ;\\\n\t\tdone ;\\\n\t\techo \"\" ;\\\n\t\techo \" WARNING WARNING WARNING\" ;\\\n\tfi\n\nld-cache-update:\nifeq ($(LDCONFIG),)\nelse ifeq ($(LDCONFIG),:)\nelse\nifeq ($(DESTDIR),)  # DESTDIR means binary archive creation; ldconfig should be run on postinst\n\t@if [ $$(id -u) -eq 0 ] ; then \\\n\t\t$(LDCONFIG) \"$(ASTLIBDIR)/\" ; \\\n\telse \\\n\t\techo \" WARNING WARNING WARNING\" ;\\\n\t\techo \"\" ;\\\n\t\techo \" You cannot rebuild the system linker cache unless you are root. \" ;\\\n\t\techo \" You MUST do one of the following...\" ;\\\n\t\techo \"  * Re-run 'make install' as root. \" ;\\\n\t\techo \"  * Run 'ldconfig $(ASTLIBDIR)' as root. \" ;\\\n\t\techo \"  * Run asterisk with 'LD_LIBRARY_PATH=$(ASTLIBDIR) asterisk' \" ;\\\n\t\techo \"\" ;\\\n\t\techo \" WARNING WARNING WARNING\" ;\\\n\tfi\nendif\nendif\n\nexport _oldlibdir =\nexport _oldmoddir =\nifeq ($(findstring 64,$(HOST_CPU)),64)\n    # Strip any trailing '/' so the dir and notdir functions work correctly\n    _current_libdir = $(patsubst %/,%,$(DESTDIR)$(ASTLIBDIR))\n\n    # Only process if the paths end in lib64 or lib.\n    # If we're installing to lib64, check lib for orphans.\n    # If we're installing to lib, check lib64 for orphans.\n    # Otherwise, leave _oldlibdir empty.\n    ifeq ($(notdir $(_current_libdir)),lib64)\n        _oldlibdir = $(dir $(_current_libdir))lib\n    else ifeq ($(notdir $(_current_libdir)),lib)\n        _oldlibdir = $(dir $(_current_libdir))lib64\n    endif\n\n    # Strip any trailing '/' so the dir and notdir functions work correctly\n    _current_moddir = $(patsubst %/,%,$(DESTDIR)$(ASTMODDIR))\n\n    # Only process if the paths contain /lib64/ or /lib/.\n    # If we're installing to lib64, check lib for orphans.\n    # If we're installing to lib, check lib64 for orphans.\n    # Otherwise, leave _oldmoddir empty.\n    ifeq ($(findstring /lib64/,$(_current_moddir)),/lib64/)\n        _oldmoddir = $(subst /lib64/,/lib/,$(_current_moddir))\n    else ifeq ($(findstring /lib/,$(_current_moddir)),/lib/)\n        _oldmoddir = $(subst /lib/,/lib64/,$(_current_moddir))\n    endif\nendif\n\ncheck-old-libdir:\n\t@test -n \"$(_oldlibdir)\" -a -d \"$(_oldlibdir)\" || exit 0 ;\\\n\toldfiles=`find \"$(_oldlibdir)\" -name libasterisk* -print -quit -o \\( -path *asterisk/modules/* -a -name *.so \\) -print -quit 2>/dev/null` ;\\\n\tif [ \"x$$oldfiles\" != \"x\" ] ; then \\\n\t\techo \" WARNING WARNING WARNING\" ;\\\n\t\techo \"\" ;\\\n\t\techo \" Installation is to: \" ;\\\n\t\techo \"   $(DESTDIR)$(ASTLIBDIR)\" ;\\\n\t\techo \" but there are asterisk shared libraries in: \" ;\\\n\t\techo \"   $(_oldlibdir)\" ;\\\n\t\techo \" or\" ;\\\n\t\techo \"   $(_oldlibdir)/asterisk/modules\" ;\\\n\t\techo \"\" ;\\\n\t\techo \" It is unlikely that asterisk will start.\" ;\\\n\t\techo \"\" ;\\\n\t\techo \" You should do one of the following...\" ;\\\n\t\techo \"  * Run 'make uninstall' to remove the incorrect libraries\" ;\\\n\t\techo \"    then run 'make install' again.\" ;\\\n\t\techo \"  * Manually remove the libraries from\" ;\\\n\t\techo \"   $(_oldlibdir)\" ;\\\n\t\techo \"   and run 'ldconfig' to rebuild the linker cache.\" ;\\\n\t\techo \"\" ;\\\n\t\techo \" WARNING WARNING WARNING\" ;\\\n\tfi\n\nbadshell:\nifneq ($(filter ~%,$(DESTDIR)),)\n\t@echo \"Your shell doesn't do ~ expansion when expected (specifically, when doing \\\"make install DESTDIR=~/path\\\").\"\n\t@echo \"Try replacing ~ with \\$$HOME, as in \\\"make install DESTDIR=\\$$HOME/path\\\".\"\n\t@exit 1\nendif\n\nversioncheck:\nifeq ($(ASTERISKVERSION),UNKNOWN__git_check_fail)\n\t@echo \"Asterisk Version is unknown due to a git error. If you are running make\"\n\t@echo \"as a different user than the project owner, this can be resolved by\"\n\t@echo \"running the following command as the user currently executing make: \"$$USER\n\t@echo \"git config --global --add safe.directory \"$(mkfile_dir:/=)\n\t@exit 1\nendif\n\n\ninstall: badshell versioncheck bininstall datafiles\n\t@if [ -x /usr/sbin/asterisk-post-install ]; then \\\n\t\t/usr/sbin/asterisk-post-install \"$(DESTDIR)\" . ; \\\n\tfi\n\t@echo \" +---- Asterisk Installation Complete -------+\"\n\t@echo \" +                                           +\"\n\t@echo \" +    YOU MUST READ THE SECURITY DOCUMENT    +\"\n\t@echo \" +                                           +\"\n\t@echo \" + Asterisk has successfully been installed. +\"\n\t@echo \" + If you would like to install the sample   +\"\n\t@echo \" + configuration files (overwriting any      +\"\n\t@echo \" + existing config files), run:              +\"\n\t@echo \" +                                           +\"\n\t@echo \" + For generic reference documentation:      +\"\n\t@echo \" +   $(mK) samples                           +\"\n\t@echo \" +                                           +\"\n\t@echo \" + For a sample basic PBX:                   +\"\n\t@echo \" +   $(mK) basic-pbx                         +\"\n\t@echo \" +                                           +\"\n\t@echo \" +                                           +\"\n\t@echo \" +-----------------  or ---------------------+\"\n\t@echo \" +                                           +\"\n\t@echo \" + You can go ahead and install the asterisk +\"\n\t@echo \" + program documentation now or later run:   +\"\n\t@echo \" +                                           +\"\n\t@echo \" +              $(mK) progdocs               +\"\n\t@echo \" +                                           +\"\n\t@echo \" + **Note** This requires that you have      +\"\n\t@echo \" + doxygen installed on your local system    +\"\n\t@echo \" +-------------------------------------------+\"\n\t@$(MAKE) -s oldmodcheck\n\t@$(MAKE) -s ld-cache-update\n\t@$(MAKE) -s check-old-libdir\n\nisntall: install\n\nupgrade: bininstall\n\n\n# Install configuration files from the specified directory\n# Parameters:\n#  (1) the configuration directory to install from\n#  (2) the extension to strip off\ndefine INSTALL_CONFIGS\n\t@for x in $(1)/*$(2); do \\\n\t\tdst=\"$(DESTDIR)$(ASTETCDIR)/`$(BASENAME) $$x $(2)`\"; \\\n\t\tif [ -f \"$${dst}\" ]; then \\\n\t\t\tif [ \"$(OVERWRITE)\" = \"y\" ]; then \\\n\t\t\t\tif cmp -s \"$${dst}\" \"$$x\" ; then \\\n\t\t\t\t\techo \"Config file $$x is unchanged\"; \\\n\t\t\t\t\tcontinue; \\\n\t\t\t\tfi ; \\\n\t\t\t\tmv -f \"$${dst}\" \"$${dst}.old\" ; \\\n\t\t\telse \\\n\t\t\t\techo \"Skipping config file $$x\"; \\\n\t\t\t\tcontinue; \\\n\t\t\tfi ;\\\n\t\tfi ; \\\n\t\techo \"Installing file $$x\"; \\\n\t\t$(INSTALL) -m 644 \"$$x\" \"$${dst}\" ;\\\n\tdone ; \\\n\tif [ \"$(OVERWRITE)\" = \"y\" ]; then \\\n\t\techo \"Updating asterisk.conf\" ; \\\n\t\tsed -e 's|^astcachedir.*$$|astcachedir => $(ASTCACHEDIR)|' \\\n\t\t\t-e 's|^astetcdir.*$$|astetcdir => $(ASTETCDIR)|' \\\n\t\t\t-e 's|^astmoddir.*$$|astmoddir => $(ASTMODDIR)|' \\\n\t\t\t-e 's|^astvarlibdir.*$$|astvarlibdir => $(ASTVARLIBDIR)|' \\\n\t\t\t-e 's|^astdbdir.*$$|astdbdir => $(ASTDBDIR)|' \\\n\t\t\t-e 's|^astkeydir.*$$|astkeydir => $(ASTKEYDIR)|' \\\n\t\t\t-e 's|^astdatadir.*$$|astdatadir => $(ASTDATADIR)|' \\\n\t\t\t-e 's|^astagidir.*$$|astagidir => $(AGI_DIR)|' \\\n\t\t\t-e 's|^astspooldir.*$$|astspooldir => $(ASTSPOOLDIR)|' \\\n\t\t\t-e 's|^astrundir.*$$|astrundir => $(ASTVARRUNDIR)|' \\\n\t\t\t-e 's|^astlogdir.*$$|astlogdir => $(ASTLOGDIR)|' \\\n\t\t\t-e 's|^astsbindir.*$$|astsbindir => $(ASTSBINDIR)|' \\\n\t\t\t\"$(DESTDIR)$(ASTCONFPATH)\" > \"$(DESTDIR)$(ASTCONFPATH).tmp\" ; \\\n\t\t$(INSTALL) -m 644 \"$(DESTDIR)$(ASTCONFPATH).tmp\" \"$(DESTDIR)$(ASTCONFPATH)\" ; \\\n\t\trm -f \"$(DESTDIR)$(ASTCONFPATH).tmp\" ; \\\n\tfi\nendef\n\ninstall-headers:\n# Will create all components of \"$(DESTDIR)$(ASTHEADERDIR)/doxygen\" including \"$(DESTDIR)$(includedir)\"\n\t$(INSTALL) -d \"$(DESTDIR)$(ASTHEADERDIR)/doxygen\"\n\t$(INSTALL) -m 644 include/asterisk.h \"$(DESTDIR)$(includedir)\"\n\t$(INSTALL) -m 644 include/asterisk/*.h \"$(DESTDIR)$(ASTHEADERDIR)\"\n\t$(INSTALL) -m 644 include/asterisk/doxygen/*.h \"$(DESTDIR)$(ASTHEADERDIR)/doxygen\"\n\tif [ -n \"$(OLDHEADERS)\" ]; then \\\n\t\tfor h in $(OLDHEADERS); do rm -f \"$(DESTDIR)$(ASTHEADERDIR)/$$h\"; done \\\n\tfi\n\ninstall-configs:\n\t@if test -z \"$(CONFIG_SRC)\" -o ! -d \"$(CONFIG_SRC)\"; then \\\n\t\t>&2 echo \"CONFIG_SRC must be set to a directory.\"; \\\n\t\texit 1; \\\n\tfi\n\t@echo \"Installing config files from $(CONFIG_SRC)/*$(CONFIG_EXTEN)\"\n\t$(call INSTALL_CONFIGS,$(CONFIG_SRC),$(CONFIG_EXTEN))\n\n# XXX why *.adsi is installed first ?\nadsi:\n\t@echo Installing adsi config files...\n\t$(INSTALL) -d \"$(DESTDIR)$(ASTETCDIR)\"\n\t@for x in configs/samples/*.adsi; do \\\n\t\tdst=\"$(DESTDIR)$(ASTETCDIR)/`$(BASENAME) $$x`\" ; \\\n\t\tif [ -f \"$${dst}\" ] ; then \\\n\t\t\techo \"Overwriting $$x\" ; \\\n\t\telse \\\n\t\t\techo \"Installing $$x\" ; \\\n\t\tfi ; \\\n\t\t$(INSTALL) -m 644 \"$$x\" \"$(DESTDIR)$(ASTETCDIR)/`$(BASENAME) $$x`\" ; \\\n\tdone\n\nsamples: adsi\n\t@echo Installing other config files...\n\t$(call INSTALL_CONFIGS,configs/samples,.sample)\n\t$(INSTALL) -d \"$(DESTDIR)$(ASTSPOOLDIR)/voicemail/default/1234/INBOX\"\n\tbuild_tools/make_sample_voicemail \"$(DESTDIR)/$(ASTDATADIR)\" \"$(DESTDIR)/$(ASTSPOOLDIR)\"\n\t@for x in phoneprov/*; do \\\n\t\tdst=\"$(DESTDIR)$(ASTDATADIR)/$$x\" ;\t\\\n\t\tif [ -f \"$${dst}\" ]; then \\\n\t\t\tif [ \"$(OVERWRITE)\" = \"y\" ]; then \\\n\t\t\t\tif cmp -s \"$${dst}\" \"$$x\" ; then \\\n\t\t\t\t\techo \"Config file $$x is unchanged\"; \\\n\t\t\t\t\tcontinue; \\\n\t\t\t\tfi ; \\\n\t\t\t\tmv -f \"$${dst}\" \"$${dst}.old\" ; \\\n\t\t\telse \\\n\t\t\t\techo \"Skipping config file $$x\"; \\\n\t\t\t\tcontinue; \\\n\t\t\tfi ;\\\n\t\tfi ; \\\n\t\techo \"Installing file $$x\"; \\\n\t\t$(INSTALL) -m 644 \"$$x\" \"$${dst}\" ;\\\n\tdone\n\nbasic-pbx:\n\t@echo Installing basic-pbx config files...\n\t$(call INSTALL_CONFIGS,configs/basic-pbx)\n\nwebvmail:\n\t@[ -d \"$(DESTDIR)$(HTTP_DOCSDIR)/\" ] || ( printf \"http docs directory not found.\\nUpdate assignment of variable HTTP_DOCSDIR in Makefile!\\n\" && exit 1 )\n\t@[ -d \"$(DESTDIR)$(HTTP_CGIDIR)\" ] || ( printf \"cgi-bin directory not found.\\nUpdate assignment of variable HTTP_CGIDIR in Makefile!\\n\" && exit 1 )\n\t$(INSTALL) -m 4755 contrib/scripts/vmail.cgi \"$(DESTDIR)$(HTTP_CGIDIR)/vmail.cgi\"\n\t$(INSTALL) -d \"$(DESTDIR)$(HTTP_DOCSDIR)/_asterisk\"\n\tfor x in images/*.gif; do \\\n\t\t$(INSTALL) -m 644 $$x \"$(DESTDIR)$(HTTP_DOCSDIR)/_asterisk/\"; \\\n\tdone\n\t@echo \" +--------- Asterisk Web Voicemail ----------+\"\n\t@echo \" +                                           +\"\n\t@echo \" + Asterisk Web Voicemail is installed in    +\"\n\t@echo \" + your cgi-bin directory:                   +\"\n\t@echo \" + $(DESTDIR)$(HTTP_CGIDIR)\"\n\t@echo \" + IT USES A SETUID ROOT PERL SCRIPT, SO     +\"\n\t@echo \" + IF YOU DON'T LIKE THAT, UNINSTALL IT!     +\"\n\t@echo \" +                                           +\"\n\t@echo \" + Other static items have been stored in:   +\"\n\t@echo \" + $(DESTDIR)$(HTTP_DOCSDIR)\"\n\t@echo \" +                                           +\"\n\t@echo \" + If these paths do not match your httpd    +\"\n\t@echo \" + installation, correct the definitions     +\"\n\t@echo \" + in your Makefile of HTTP_CGIDIR and       +\"\n\t@echo \" + HTTP_DOCSDIR                              +\"\n\t@echo \" +                                           +\"\n\t@echo \" +-------------------------------------------+\"\n\nprogdocs:\nifeq ($(DOXYGEN),:)\n\t@echo \"Doxygen is not installed.  Please install and re-run the configuration script.\"\nelse\n\t@cp doc/Doxyfile.in doc/Doxyfile\nifeq ($(DOT),:)\n\t@echo \"DOT is not installed. Doxygen will not produce any diagrams. Please install and re-run the configuration script.\"\nelse\n\t@echo \"HAVE_DOT = YES\" >> doc/Doxyfile\nendif\nifneq ($(NOISY_BUILD),yes)\n\t@echo \"EXTRACT_ALL = YES\" >> doc/Doxyfile\nendif\nifeq ($(AST_DEVMODE),yes)\n\t@echo \"INTERNAL_DOCS = YES\" >> doc/Doxyfile\n\t@echo \"WARN_NO_PARAMDOC = YES\" >> doc/Doxyfile\nendif\nifeq ($(ASTERISKVERSION),UNKNOWN__and_probably_unsupported)\n\t@echo \"Asterisk Version is unknown, not configuring Doxygen PROJECT_NUMBER.\"\nelse ifeq ($(ASTERISKVERSION),UNKNOWN__git_check_fail)\n\t@echo \"Asterisk Version is unknown due to a git error. If you are running make\"\n\t@echo \"as a different user than the project owner, this can be resolved by\"\n\t@echo \"running the following command as the user currently executing make: \"$$USER\n\t@echo \"git config --global --add safe.directory \"$(mkfile_dir:/=)\n\t@echo \"not configuring Doxygen PROJECT_NUMBER.\"\nelse\n\t@echo \"PROJECT_NUMBER = $(ASTERISKVERSION)\" >> doc/Doxyfile\nendif\n\t@echo \"Generating C-API documentation. This will take a while.\"\n\t@doxygen doc/Doxyfile\n\t@echo \"Generation complete. Any warnings are in ./doxygen.log.\"\nendif\n\ninstall-logrotate:\n\tif [ ! -d \"$(DESTDIR)$(ASTETCDIR)/../logrotate.d\" ]; then \\\n\t\t$(INSTALL) -d \"$(DESTDIR)$(ASTETCDIR)/../logrotate.d\" ; \\\n\tfi\n\tsed 's#__LOGDIR__#$(ASTLOGDIR)#g' < contrib/scripts/asterisk.logrotate | sed 's#__SBINDIR__#$(ASTSBINDIR)#g' > contrib/scripts/asterisk.logrotate.tmp\n\t$(INSTALL) -m 0644 contrib/scripts/asterisk.logrotate.tmp \"$(DESTDIR)$(ASTETCDIR)/../logrotate.d/asterisk\"\n\trm -f contrib/scripts/asterisk.logrotate.tmp\n\nconfig:\n\t@if [ -f /etc/redhat-release -o -f /etc/fedora-release ]; then \\\n\t\t./build_tools/install_subst contrib/init.d/rc.redhat.asterisk  \"$(DESTDIR)/etc/rc.d/init.d/asterisk\"; \\\n\t\tif [ ! -f \"$(DESTDIR)/etc/sysconfig/asterisk\" ] ; then \\\n\t\t\t$(INSTALL) -m 644 contrib/init.d/etc_default_asterisk \"$(DESTDIR)/etc/sysconfig/asterisk\" ; \\\n\t\tfi ; \\\n\t\tif [ -z \"$(DESTDIR)\" ] ; then \\\n\t\t\t/sbin/chkconfig --add asterisk ; \\\n\t\tfi ; \\\n\telif [ -f /etc/debian_version ] ; then \\\n\t\t./build_tools/install_subst contrib/init.d/rc.debian.asterisk  \"$(DESTDIR)/etc/init.d/asterisk\"; \\\n\t\tif [ ! -f \"$(DESTDIR)/etc/default/asterisk\" ] ; then \\\n\t\t\t$(INSTALL) -m 644 contrib/init.d/etc_default_asterisk \"$(DESTDIR)/etc/default/asterisk\" ; \\\n\t\tfi ; \\\n\t\tif [ -z \"$(DESTDIR)\" ] ; then \\\n\t\t\t/usr/sbin/update-rc.d asterisk defaults 50 91 ; \\\n\t\tfi ; \\\n\telif [ -f /etc/gentoo-release ] ; then \\\n\t\t./build_tools/install_subst contrib/init.d/rc.gentoo.asterisk  \"$(DESTDIR)/etc/init.d/asterisk\"; \\\n\t\tif [ -z \"$(DESTDIR)\" ] ; then \\\n\t\t\t/sbin/rc-update add asterisk default ; \\\n\t\tfi ; \\\n\telif [ -f /etc/mandrake-release -o -f /etc/mandriva-release ] ; then \\\n\t\t./build_tools/install_subst contrib/init.d/rc.mandriva.asterisk  \"$(DESTDIR)/etc/rc.d/init.d/asterisk\"; \\\n\t\tif [ ! -f /etc/sysconfig/asterisk ] ; then \\\n\t\t\t$(INSTALL) -m 644 contrib/init.d/etc_default_asterisk \"$(DESTDIR)/etc/sysconfig/asterisk\" ; \\\n\t\tfi ; \\\n\t\tif [ -z \"$(DESTDIR)\" ] ; then \\\n\t\t\t/sbin/chkconfig --add asterisk ; \\\n\t\tfi ; \\\n\telif [ -f /etc/SuSE-release -o -f /etc/novell-release ] ; then \\\n\t\t./build_tools/install_subst contrib/init.d/rc.suse.asterisk  \"$(DESTDIR)/etc/init.d/asterisk\"; \\\n\t\tif [ ! -f /etc/sysconfig/asterisk ] ; then \\\n\t\t\t$(INSTALL) -m 644 contrib/init.d/etc_default_asterisk \"$(DESTDIR)/etc/sysconfig/asterisk\" ; \\\n\t\tfi ; \\\n\t\tif [ -z \"$(DESTDIR)\" ] ; then \\\n\t\t\t/sbin/chkconfig --add asterisk ; \\\n\t\tfi ; \\\n\telif [ -f /etc/os-release ] && [ \"opensuse\" = \"$(shell . /etc/os-release 2>/dev/null && echo $$ID)\" ] ; then \\\n\t\t./build_tools/install_subst contrib/init.d/rc.suse.asterisk  \"$(DESTDIR)/etc/init.d/asterisk\"; \\\n\t\tif [ ! -f /etc/sysconfig/asterisk ] ; then \\\n\t\t\t$(INSTALL) -m 644 contrib/init.d/etc_default_asterisk \"$(DESTDIR)/etc/sysconfig/asterisk\" ; \\\n\t\tfi ; \\\n\t\tif [ -z \"$(DESTDIR)\" ] ; then \\\n\t\t\t/sbin/chkconfig --add asterisk ; \\\n\t\tfi ; \\\n\telif [ -f /etc/arch-release -o -f /etc/arch-release ] ; then \\\n\t\t./build_tools/install_subst contrib/init.d/rc.archlinux.asterisk  \"$(DESTDIR)/etc/init.d/asterisk\"; \\\n\telif [ -f /etc/slackware-version ]; then \\\n\t\t./build_tools/install_subst contrib/init.d/rc.slackware.asterisk  \"$(DESTDIR)/etc/rc.d/rc.asterisk\"; \\\n\telif [ -f /etc/os-release ] && [ \"slackware\" = \"$(shell . /etc/os-release 2>/dev/null && echo $$ID)\" ] ; then \\\n\t\t./build_tools/install_subst contrib/init.d/rc.slackware.asterisk  \"$(DESTDIR)/etc/rc.d/rc.asterisk\"; \\\n\telif [ -d \"$(DESTDIR)/Library/LaunchDaemons\" ]; then \\\n\t\tif [ ! -f \"$(DESTDIR)/Library/LaunchDaemons/org.asterisk.asterisk.plist\" ]; then \\\n\t\t\t./build_tools/install_subst contrib/init.d/org.asterisk.asterisk.plist \"$(DESTDIR)/Library/LaunchDaemons/org.asterisk.asterisk.plist\"; \\\n\t\tfi; \\\n\t\tif [ ! -f \"$(DESTDIR)/Library/LaunchDaemons/org.asterisk.muted.plist\" ]; then \\\n\t\t\t./build_tools/install_subst contrib/init.d/org.asterisk.muted.plist \"$(DESTDIR)/Library/LaunchDaemons/org.asterisk.muted.plist\"; \\\n\t\tfi; \\\n\telse \\\n\t\techo \"We could not install init scripts for your distribution.\" ; \\\n\tfi\n\nsounds:\n\t$(MAKE) -C sounds all\n\n# If the cleancount has been changed, force a make clean.\n# .cleancount is the global clean count, and .lastclean is the\n# last clean count we had\n\n.lastclean: .cleancount\n\t@$(MAKE) clean\n\t@[ -f \"$(DESTDIR)$(ASTDBDIR)/astdb.sqlite3\" ] || [ ! -f \"$(DESTDIR)$(ASTDBDIR)/astdb\" ] || [ ! -f menuselect.makeopts ] || grep -q MENUSELECT_UTILS=.*astdb2sqlite3 menuselect.makeopts || (sed -i.orig -e's/MENUSELECT_UTILS=\\(.*\\)/MENUSELECT_UTILS=\\1 astdb2sqlite3/' menuselect.makeopts && echo \"Updating menuselect.makeopts to include astdb2sqlite3\" && echo \"Original version backed up to menuselect.makeopts.orig\")\n\n\n$(SUBDIRS_UNINSTALL):\n\t+@DESTDIR=\"$(DESTDIR)\" ASTSBINDIR=\"$(ASTSBINDIR)\" ASTDATADIR=\"$(ASTDATADIR)\" $(SUBMAKE) -C $(@:-uninstall=) uninstall\n\nmain-binuninstall:\n\t+@DESTDIR=\"$(DESTDIR)\" ASTSBINDIR=\"$(ASTSBINDIR)\" ASTLIBDIR=\"$(ASTLIBDIR)\" $(SUBMAKE) -C main binuninstall\n\nuninstall-headers:\n\trm -rf \"$(DESTDIR)$(ASTHEADERDIR)\"\n\trm -f \"$(DESTDIR)$(includedir)/asterisk.h\"\n\n_uninstall: $(SUBDIRS_UNINSTALL) main-binuninstall\n\trm -f \"$(DESTDIR)$(ASTMODDIR)/\"*\n\ttest -n \"$(_oldmoddir)\" -a -d \"$(_oldmoddir)\" && rm -f \"$(_oldmoddir)/\"* || :\n\trm -f \"$(DESTDIR)$(ASTSBINDIR)/astgenkey\"\n\trm -f \"$(DESTDIR)$(ASTSBINDIR)/autosupport\"\n\trm -rf \"$(DESTDIR)$(ASTDATADIR)/firmware\"\n\trm -f \"$(DESTDIR)$(ASTMANDIR)/man8/asterisk.8\"\n\trm -f \"$(DESTDIR)$(ASTMANDIR)/man8/astgenkey.8\"\n\trm -f \"$(DESTDIR)$(ASTMANDIR)/man8/autosupport.8\"\n\trm -f \"$(DESTDIR)$(ASTMANDIR)/man8/safe_asterisk.8\"\nifeq ($(HAVE_DAHDI),1)\n\trm -f $(DESTDIR)$(DAHDI_UDEV_HOOK_DIR)/40-asterisk\nendif\n\t$(MAKE) -C sounds uninstall\nifeq ($(LDCONFIG),)\nelse ifeq ($(LDCONFIG),:)\nelse\n\t$(LDCONFIG) \"$(ASTLIBDIR)/\" || :\nendif\n\nuninstall: _uninstall\n\t@echo \" +--------- Asterisk Uninstall Complete -----+\"\n\t@echo \" + Asterisk binaries, sounds, man pages,     +\"\n\t@echo \" + headers, modules, and firmware builds,    +\"\n\t@echo \" + have all been uninstalled.                +\"\n\t@echo \" +                                           +\"\n\t@echo \" + To remove ALL traces of Asterisk,         +\"\n\t@echo \" + including configuration, spool            +\"\n\t@echo \" + directories, and logs, run the following  +\"\n\t@echo \" + command:                                  +\"\n\t@echo \" +                                           +\"\n\t@echo \" +            $(mK) uninstall-all            +\"\n\t@echo \" +-------------------------------------------+\"\n\nuninstall-all: _uninstall uninstall-headers\n\trm -rf \"$(DESTDIR)$(ASTMODDIR)\"\n\ttest -n \"$(_oldmoddir)\" -a -d \"$(_oldmoddir)\" && rm -rf \"$(_oldmoddir)\" || :\n\trm -rf \"$(DESTDIR)$(ASTVARLIBDIR)\"\n\trm -rf \"$(DESTDIR)$(ASTDATADIR)\"\n\trm -rf \"$(DESTDIR)$(ASTSPOOLDIR)\"\n\trm -rf \"$(DESTDIR)$(ASTETCDIR)\"\n\trm -rf \"$(DESTDIR)$(ASTLOGDIR)\"\n\trm -rf \"$(DESTDIR)$(ASTCACHEDIR)\"\n\nmenuconfig: menuselect\n\ncmenuconfig: cmenuselect\n\ngmenuconfig: gmenuselect\n\nnmenuconfig: nmenuselect\n\nmenuselect: menuselect/cmenuselect menuselect/nmenuselect menuselect/gmenuselect\n\t@if [ -x menuselect/nmenuselect ]; then \\\n\t\t$(MAKE) nmenuselect; \\\n\telif [ -x menuselect/cmenuselect ]; then \\\n\t\t$(MAKE) cmenuselect; \\\n\telif [ -x menuselect/gmenuselect ]; then \\\n\t\t$(MAKE) gmenuselect; \\\n\telse \\\n\t\techo \"No menuselect user interface found. Install ncurses,\"; \\\n\t\techo \"newt or GTK libraries to build one and re-rerun\"; \\\n\t\techo \"'./configure' and 'make menuselect'.\"; \\\n\tfi\n\ncmenuselect: menuselect/cmenuselect menuselect-tree menuselect.makeopts\n\t-@menuselect/cmenuselect menuselect.makeopts && (echo \"menuselect changes saved!\"; rm -f channels/h323/Makefile.ast main/asterisk) || echo \"menuselect changes NOT saved!\"\n\ngmenuselect: menuselect/gmenuselect menuselect-tree menuselect.makeopts\n\t-@menuselect/gmenuselect menuselect.makeopts && (echo \"menuselect changes saved!\"; rm -f channels/h323/Makefile.ast main/asterisk) || echo \"menuselect changes NOT saved!\"\n\nnmenuselect: menuselect/nmenuselect menuselect-tree menuselect.makeopts\n\t-@menuselect/nmenuselect menuselect.makeopts && (echo \"menuselect changes saved!\"; rm -f channels/h323/Makefile.ast main/asterisk) || echo \"menuselect changes NOT saved!\"\n\n# options for make in menuselect/\nMAKE_MENUSELECT=CC=\"$(BUILD_CC)\" CXX=\"$(CXX)\" LD=\"\" AR=\"\" RANLIB=\"\" \\\n\t\tCFLAGS=\"$(BUILD_CFLAGS)\" LDFLAGS=\"$(BUILD_LDFLAGS)\" \\\n\t\t$(MAKE) -C menuselect CONFIGURE_SILENT=\"--silent\"\n\nmenuselect/menuselect: menuselect/makeopts .lastclean\n\t+$(MAKE_MENUSELECT) menuselect\n\nmenuselect/cmenuselect: menuselect/makeopts .lastclean\n\t+$(MAKE_MENUSELECT) cmenuselect\n\nmenuselect/gmenuselect: menuselect/makeopts .lastclean\n\t+$(MAKE_MENUSELECT) gmenuselect\n\nmenuselect/nmenuselect: menuselect/makeopts .lastclean\n\t+$(MAKE_MENUSELECT) nmenuselect\n\nmenuselect/makeopts: makeopts .lastclean\n\t+$(MAKE_MENUSELECT) makeopts\n\nmenuselect-tree: $(foreach dir,$(filter-out main,$(MOD_SUBDIRS)),$(wildcard $(dir)/*.c) $(wildcard $(dir)/*.cc) $(wildcard $(dir)/*.xml)) build_tools/cflags.xml build_tools/cflags-devmode.xml sounds/sounds.xml utils/utils.xml agi/agi.xml configure makeopts\n\t@echo \"Generating input for menuselect ...\"\n\t@echo \"<?xml version=\\\"1.0\\\"?>\" > $@\n\t@echo >> $@\n\t@echo \"<menu name=\\\"Asterisk Module and Build Option Selection\\\">\" >> $@\n\t+@for dir in $(sort $(filter-out main,$(MOD_SUBDIRS))); do $(SILENTMAKE) -C $${dir} SUBDIR=$${dir} moduleinfo >> $@; done\n\t@cat build_tools/cflags.xml >> $@\n\t+@for dir in $(sort $(filter-out main,$(MOD_SUBDIRS))); do $(SILENTMAKE) -C $${dir} SUBDIR=$${dir} makeopts >> $@; done\n\t@if [ \"${AST_DEVMODE}\" = \"yes\" ]; then \\\n\t\tcat build_tools/cflags-devmode.xml >> $@; \\\n\tfi\n\t@cat utils/utils.xml >> $@\n\t@cat agi/agi.xml >> $@\n\t@cat sounds/sounds.xml >> $@\n\t@echo \"</menu>\" >> $@\n\n# We don't want to require Python or Pystache for every build, so this is its\n# own target.\nari-stubs:\nifeq ($(PYTHON),:)\n\t@echo \"--------------------------------------------------------------------------\"\n\t@echo \"---        Please install python to build ARI stubs            ---\"\n\t@echo \"--------------------------------------------------------------------------\"\n\t@false\nelse\n\t@$(INSTALL) -d doc/rest-api\n\t$(PYTHON) rest-api-templates/make_ari_stubs.py \\\n\t\t--resources rest-api/resources.json --source-dir $(ASTTOPDIR) \\\n\t\t--dest-dir $(ASTTOPDIR)/doc/rest-api --docs-prefix ../\nendif\n\ncheck-alembic: makeopts\n\t@find contrib/ast-db-manage/ -name '*.pyc' -delete\n\t@ALEMBIC=$(ALEMBIC) build_tools/make_check_alembic config cdr voicemail >&2\n\n.PHONY: install-configs\n.PHONY: install-headers\n.PHONY: menuselect\n.PHONY: main\n.PHONY: sounds\n.PHONY: clean\n.PHONY: dist-clean\n.PHONY: distclean\n.PHONY: all\n.PHONY: _all\n.PHONY: full\n.PHONY: _full\n.PHONY: uninstall\n.PHONY: _uninstall\n.PHONY: uninstall-all\n.PHONY: uninstall-headers\n.PHONY: badshell\n.PHONY: installdirs\n.PHONY: progdocs\n.PHONY: validate-docs\n.PHONY: _clean\n.PHONY: ari-stubs\n.PHONY: basic-pbx\n.PHONY: check-alembic\n.PHONY: ld-cache-update\n.PHONY: check-old-libdir\n.PHONY: $(SUBDIRS_INSTALL)\n.PHONY: $(SUBDIRS_DIST_CLEAN)\n.PHONY: $(SUBDIRS_CLEAN)\n.PHONY: $(SUBDIRS_UNINSTALL)\n.PHONY: $(SUBDIRS)\n\nFORCE:\n\n# This only stops targets within the root Makefile from building in parallel.\n.NOTPARALLEL:\n"
        },
        {
          "name": "Makefile.moddir_rules",
          "type": "blob",
          "size": 5.7998046875,
          "content": "#\n# Asterisk -- An open source telephony toolkit.\n#\n# Makefile rules for subdirectories containing modules\n#\n# Copyright (C) 2006, Digium, Inc.\n#\n# Kevin P. Fleming <kpfleming@digium.com>\n#\n# This program is free software, distributed under the terms of\n# the GNU General Public License\n#\n\n# Makefile rules for building modules.\n\n# In most cases, we set target-specific variables for certain targets\n# (remember that they apply recursively to prerequisites).\n# Also note that we can only set one variable per rule, so we have to\n# repeat the left hand side to set multiple variables.\n\ninclude $(ASTTOPDIR)/Makefile.rules\n\n# If MODULE_PREFIX is defined, use it to run the standard functions to set\n# C_MODS, CC_MODS and LOADABLE_MODS\n# Each word of MODULE_PREFIX is a prefix for filenames that we consider\n# valid C or CC modules (eg. app, func ...). Note that the underscore\n# is added here, and does not need to be in MODULE_PREFIX\n#\n# Use MODULE_EXCLUDE to specify additional modules to exclude.\n\nifneq ($(MODULE_PREFIX),)\n    ALL_C_MODS:=\n    ALL_CC_MODS:=\n    ALL_C_MODS+=$(foreach p,$(MODULE_PREFIX),$(patsubst %.c,%,$(wildcard $(p)_*.c)))\n    ALL_CC_MODS+=$(foreach p,$(MODULE_PREFIX),$(patsubst %.cc,%,$(wildcard $(p)_*.cc)))\nendif\n\nC_MODS:=$(filter-out $(MENUSELECT_$(MENUSELECT_CATEGORY)),$(ALL_C_MODS))\nCC_MODS:=$(filter-out $(MENUSELECT_$(MENUSELECT_CATEGORY)),$(ALL_CC_MODS))\n\nLOADABLE_MODS:=$(C_MODS) $(CC_MODS)\n\n# Both C++ and C++ sources need their module name in AST_MODULE\n# We also pass whatever _INCLUDE list is generated by menuselect\n# (they are stored in file 'makeopts'). This is also necessary\n# for components used to build modules, which can't be determined\n# by the rules in this file, so the MOD_ASTCFLAGS definition\n# is used to collect the required flags for a module... which can\n# then be used any place they are required.\n\nMOD_ASTCFLAGS=\\\n\t-DAST_MODULE=\\\"$(1)\\\" \\\n\t-DAST_MODULE_SELF_SYM=__internal_$(1)_self \\\n\t$(MENUSELECT_OPTS_$(1):%=-D%) \\\n\t$(foreach dep,$(MENUSELECT_DEPENDS_$(1)),$(value $(dep)_INCLUDE))\n\ndefine MOD_ADD_SOURCE\n$(1).so: $$(subst $(3),$(5),$(2))\n$$(subst $(3),$(5),$(2)): _ASTCFLAGS+=$$(call MOD_ASTCFLAGS,$(1))\n.$(1).moduleinfo: MODULEINFO_EXTRA_OUTPUT=\" $$(addprefix $$(SUBDIR)/,$$(subst $(3),$(5),$(2)) $$(subst $(3),$(4),$(2)))\"\n# The use of wildcard ensures that 'make menuselect' will not fail for modules that\n# require additional source downloads.\n.$(1).moduleinfo: $(wildcard $(2))\n\nclean:: clean-$(1)$(3)\n\nclean-$(1)$(3):\n\trm -f $$(subst $(3),$(4),$(2)) $$(subst $(3),$(5),$(2)) $$(subst $(3),$(6),$(2)) $$(subst $(3),$(7),$(2))\n\nendef\n\nMOD_ADD_C=$(eval $(call MOD_ADD_SOURCE,$(1),$(2),.c,.i,.o,.gcda,.gcno))\nMOD_ADD_CC=$(eval $(call MOD_ADD_SOURCE,$(1),$(2),.cc,.ii,.oo,.gcda,.gcno))\n\n$(addsuffix .oo,$(CC_MODS)) $(addsuffix .o,$(C_MODS)):\t\\\n\t_ASTCFLAGS+=$(call MOD_ASTCFLAGS,$*)\n\nifeq ($(findstring $(OSARCH), mingw32 cygwin ),)\n   # don't define -fPIC on mingw32 and cygwin, it is the default\n   $(LOADABLE_MODS:%=%.so): _ASTCFLAGS+=-fPIC\nendif\n\n# For loadable modules, pass _LIB and _LDFLAGS from menuselect.\n$(LOADABLE_MODS:%=%.so): LIBS+=$(foreach dep,$(MENUSELECT_DEPENDS_$*),$(value $(dep)_LIB))\n$(LOADABLE_MODS:%=%.so): _ASTLDFLAGS+=$(foreach dep,$(MENUSELECT_DEPENDS_$*),$(value $(dep)_LDFLAGS))\n\n$(addsuffix .so,$(filter $(LOADABLE_MODS),$(C_MODS))): %.so: %.o\n$(addsuffix .so,$(filter $(LOADABLE_MODS),$(CC_MODS))): %.so: %.oo\n\n.PHONY: clean uninstall _all moduleinfo makeopts\n\n_all: $(LOADABLE_MODS:%=%.so)\nifneq ($(findstring $(OSARCH), mingw32 cygwin ),)\n  # linker options and extra libraries for cygwin\n  SOLINK=-Wl,--out-implib=lib$@.a -shared\n  LIBS+=-L$(ASTTOPDIR)/main -lasterisk -L$(ASTTOPDIR)/res $($@_LIBS)\n  # additional libraries in res/\nendif\n\nclean::\n\trm -f *.so *.o *.oo *.eo *.i *.ii\n\trm -f .*.d\n\trm -f *.s *.i\n\trm -f *.gcda *.gcno\n\trm -f modules.link\n\ninstall:: all\n\t@echo \"Installing modules from `basename $(CURDIR)`...\"\n\t@for x in $(LOADABLE_MODS:%=%.so); do $(INSTALL) -m 755 $$x \"$(DESTDIR)$(ASTMODDIR)\" ; done\nifneq ($(findstring :,$(XMLSTARLET)$(BASH)),:)\n\t@if [ -f .moduleinfo ] ; then \\\n\t\tdeclare -A DISABLED_MODS ;\\\n\t\tfor x in $(MENUSELECT_$(MENUSELECT_CATEGORY)) ; do DISABLED_MODS[$${x}]=1 ; done ;\\\n\t\tEXTERNAL_MODS=$$($(XMLSTARLET) sel -t -m \"/category/member[support_level = 'external']\" -v \"@name\" -n .moduleinfo) ;\\\n\t\tfor x in $${EXTERNAL_MODS} ; do \\\n\t\t\tif [ -z \"$${DISABLED_MODS[$${x}]}\" ] ; then \\\n\t\t\t\tPJPROJECT_BUNDLED=${PJPROJECT_BUNDLED} $(ASTTOPDIR)/build_tools/download_externals $${x} ;\\\n\t\t\tfi ;\\\n\t\tdone ;\\\n\tfi\nendif\n\nuninstall::\n\ndist-clean::\n\trm -f .*.moduleinfo .moduleinfo\n\trm -f .*.makeopts .makeopts\n\trm -f *.exports\n\n.%.moduleinfo: %.c\n\t@echo \"<member name=\\\"$*\\\" displayname=\\\"$(shell $(GREP) -e AST_MODULE_INFO $< | head -n 1 | cut -d '\"' -f 2)\\\" remove_on_change=\\\"$(SUBDIR)/$*.o $(SUBDIR)/$*.i $(SUBDIR)/$*.so$(MODULEINFO_EXTRA_OUTPUT)\\\">\" > $@\n\t$(AWK) -f $(ASTTOPDIR)/build_tools/get_moduleinfo $^ >> $@\n\techo \"</member>\" >> $@\n\n.%.moduleinfo: %.cc\n\t@echo \"<member name=\\\"$*\\\" displayname=\\\"$(shell $(GREP) -e AST_MODULE_INFO $< | head -n 1 | cut -d '\"' -f 2)\\\" remove_on_change=\\\"$(SUBDIR)/$*.oo $(SUBDIR)/$*.ii $(SUBDIR)/$*.so$(MODULEINFO_EXTRA_OUTPUT)\\\">\" > $@\n\t$(AWK) -f $(ASTTOPDIR)/build_tools/get_moduleinfo $^ >> $@\n\techo \"</member>\" >> $@\n\n.moduleinfo:: $(addsuffix .moduleinfo,$(addprefix .,$(sort $(ALL_C_MODS) $(ALL_CC_MODS)))) $(wildcard $(call tolower,$(MENUSELECT_CATEGORY)).xml)\n\t@echo \"<category name=\\\"MENUSELECT_$(MENUSELECT_CATEGORY)\\\" displayname=\\\"$(MENUSELECT_DESCRIPTION)\\\">\" > $@\n\t@cat $^ >> $@\n\t@echo \"</category>\" >> $@\n\nmoduleinfo: .moduleinfo\n\t@cat $<\n\n.%.makeopts: %.c\n\t@$(AWK) -f $(ASTTOPDIR)/build_tools/get_makeopts $< > $@\n\n.%.makeopts: %.cc\n\t@$(AWK) -f $(ASTTOPDIR)/build_tools/get_makeopts $< > $@\n\n.makeopts:: $(addsuffix .makeopts,$(addprefix .,$(ALL_C_MODS) $(ALL_CC_MODS)))\n\t@cat $^ > $@\n\nmakeopts: .makeopts\n\t@cat $<\n\nifneq ($(wildcard .*.d),)\n   include .*.d\nendif\n"
        },
        {
          "name": "Makefile.rules",
          "type": "blob",
          "size": 7.4169921875,
          "content": "#\n# Asterisk -- An open source telephony toolkit.\n#\n# Makefile rules\n#\n# Copyright (C) 2006-2010, Digium, Inc.\n#\n# Kevin P. Fleming <kpfleming@digium.com>\n#\n# This program is free software, distributed under the terms of\n# the GNU General Public License\n#\n\n# Each command is preceded by a short comment on what to do.\n# Prefixing one or the other with @\\# or @ or nothing makes the desired\n# behaviour. ECHO_PREFIX prefixes the comment, CMD_PREFIX prefixes the command.\n\n-include $(ASTTOPDIR)/makeopts\n\n# Helpful functions\n# call with $(call function,...)\ntolower = $(shell echo $(1) | tr '[:upper:]' '[:lower:]')\n# Takes a list of MENUSELECT_CFLAG Id and returns CFLAGS to declare\n# the ones which are enabled.\nget_menuselect_cflags=$(patsubst %,-D%,$(filter $1,$(MENUSELECT_CFLAGS)))\n\n.PHONY: dist-clean\n\n# If 'make' decides to create intermediate files to satisfy a build requirement\n# (like producing a .i from a .c), we want to keep them, so tell make to keep\n# all intermediate files\n.SECONDARY:\n\n# extra cflags to build dependencies. Recursively expanded.\nMAKE_DEPS=-MD -MT $@ -MF .$(subst /,_,$@).d -MP\n\nifeq ($(findstring ADDRESS_SANITIZER,$(MENUSELECT_CFLAGS)),ADDRESS_SANITIZER)\n    _ASTLDFLAGS+=-fsanitize=address\n    _ASTCFLAGS+=-fno-omit-frame-pointer -fsanitize=address\nendif\n\nifeq ($(findstring THREAD_SANITIZER,$(MENUSELECT_CFLAGS)),THREAD_SANITIZER)\n    _ASTLDFLAGS+=-fsanitize=thread -pie -fPIE\n    _ASTCFLAGS+=-fno-omit-frame-pointer -pie -fPIE -fsanitize=thread\nendif\n\nifeq ($(findstring LEAK_SANITIZER,$(MENUSELECT_CFLAGS)),LEAK_SANITIZER)\n    _ASTLDFLAGS+=-fsanitize=leak\n    _ASTCFLAGS+=-fno-omit-frame-pointer -fsanitize=leak\nendif\n\nifeq ($(findstring UNDEFINED_SANITIZER,$(MENUSELECT_CFLAGS)),UNDEFINED_SANITIZER)\n    _ASTLDFLAGS+=-fsanitize=undefined\n    _ASTCFLAGS+=-fno-omit-frame-pointer -fsanitize=undefined\nendif\n\nifeq ($(NOISY_BUILD),)\n    ECHO_PREFIX=@\n    CMD_PREFIX=@\nelse\n    ECHO_PREFIX=@\\#\n    CMD_PREFIX=\nendif\n\nOPTIMIZE?=-O3\n\nifneq ($(findstring darwin,$(OSARCH)),)\n  ifeq ($(shell if test `/usr/bin/sw_vers -productVersion | cut -c4` -gt 5; then echo 6; else echo 0; fi),6)\n    # Snow Leopard/Lion has an issue with this optimization flag on large files\n    OPTIMIZE+=-fno-inline-functions\n  endif\nendif\n\nifeq ($(CC),gcc)\n    # gcc version 8.2.1 and above must have partial-inlining disabled in order\n    # to avoid a documented bug. Sort to make the lowest version number come\n    # first. If it's the specified version then the current gcc version is equal\n    # to or greater, so add the custom optimization rule.\n    gcc_versions=$(shell printf \"%s\\n\" $$(gcc -dumpversion) 8.2.1 | sort -n)\n    ifeq ($(firstword $(gcc_versions)),8.2.1)\n        OPTIMIZE+=-fno-partial-inlining\n\tendif\nendif\n\nifeq ($(findstring DONT_OPTIMIZE,$(MENUSELECT_CFLAGS))$(AST_CODE_COVERAGE),no)\n    _ASTCFLAGS+=$(OPTIMIZE)\nelse\n    _ASTCFLAGS+=-O0\nendif\n\nifeq ($(AST_CODE_COVERAGE),yes)\n    _ASTCFLAGS_COVERAGE=-ftest-coverage -fprofile-arcs\n    _ASTLDFLAGS+=-ftest-coverage -fprofile-arcs\nelse\n    _ASTCFLAGS_COVERAGE=\nendif\n\nifeq ($(findstring $(CONFIG_CFLAGS),$(_ASTCFLAGS)),)\n    _ASTCFLAGS+=$(CONFIG_CFLAGS)\nendif\n\n# shortcuts for common combinations of flags; these must be recursively expanded so that\n# per-target settings will be applied\nCC_CFLAGS=$(PTHREAD_CFLAGS) $(_ASTCFLAGS) $(ASTCFLAGS)\nCXX_CFLAGS=$(PTHREAD_CFLAGS) $(filter-out -Wstrict-prototypes -Wmissing-prototypes -Wmissing-declarations $(AST_DECLARATION_AFTER_STATEMENT),$(_ASTCFLAGS) $(ASTCFLAGS))\n\n# Clang -Werror warning suppressions\nifeq ($(C_COMPILER_FAMILY),clang)\n\tCC_CFLAGS+=-Wno-unused-value -Wno-parentheses-equality\nendif\n\nifeq ($(GNU_LD),1)\nSO_SUPPRESS_SYMBOLS=-Wl,--version-script,$(subst .so,.exports,$@),--warn-common\nifneq ($(wildcard $(subst .so,.dynamics,$@)),)\nSO_SUPPRESS_SYMBOLS+=-Wl,--dynamic-list,$(subst .so,.dynamics,$@)\nendif\nendif\n\nCC_LDFLAGS_SO=$(PTHREAD_CFLAGS) $(_ASTLDFLAGS) $(SOLINK) $(SO_SUPPRESS_SYMBOLS) $(ASTLDFLAGS)\nCXX_LDFLAGS_SO=$(PTHREAD_CFLAGS) $(_ASTLDFLAGS) $(SOLINK) $(SO_SUPPRESS_SYMBOLS) $(ASTLDFLAGS)\nCC_LIBS=$(PTHREAD_LIBS) $(LIBS)\nCXX_LIBS=$(PTHREAD_LIBS) $(LIBS)\n\n# determine whether to double-compile so that the optimizer can report code path problems\n# In this case, we run the preprocessor to produce a .i or .ii file from the source\n# code, then compile once with optimizer enabled (and the output to /dev/null),\n# and if that doesn't fail then compile again with optimizer disabled\n\nifeq ($(findstring COMPILE_DOUBLE,$(MENUSELECT_CFLAGS)),COMPILE_DOUBLE)\nCOMPILE_DOUBLE=yes\nendif\n\nifeq ($(findstring DONT_OPTIMIZE,$(MENUSELECT_CFLAGS))$(AST_DEVMODE),)\n_ASTCFLAGS+=$(AST_FORTIFY_SOURCE)\nendif\n\nifeq ($(findstring BUILD_NATIVE,$(MENUSELECT_CFLAGS)),BUILD_NATIVE)\n    _ASTCFLAGS+=-march=native\nendif\n\n%.o: %.s\n\t$(ECHO_PREFIX) echo \"   [AS] $< -> $@\"\nifeq ($(COMPILE_DOUBLE),yes)\n\t$(CMD_PREFIX) $(CC) -o /dev/null -c $< $(CC_CFLAGS) $(OPTIMIZE)\nendif\n\t$(CMD_PREFIX) $(CC) -o $@ -c $< $(CC_CFLAGS) $(_ASTCFLAGS_COVERAGE)\n\n%.o: %.i\n\t$(ECHO_PREFIX) echo \"   [CCi] $< -> $@\"\nifneq ($(AST_CLANG_BLOCKS),)\nifeq ($(COMPILE_DOUBLE),yes)\n\t$(CMD_PREFIX) $(CC) -o /dev/null -c $< $(CC_CFLAGS) $(OPTIMIZE) -Wno-unused-command-line-argument\nendif\n\t$(CMD_PREFIX) $(CC) -o $@ -c $< $(CC_CFLAGS) $(_ASTCFLAGS_COVERAGE) -Wno-unused-command-line-argument\nelse\nifeq ($(COMPILE_DOUBLE),yes)\n\t$(CMD_PREFIX) $(CC) -o /dev/null -c $< $(CC_CFLAGS) $(OPTIMIZE)\nendif\n\t$(CMD_PREFIX) $(CC) -o $@ -c $< $(CC_CFLAGS) $(_ASTCFLAGS_COVERAGE)\nendif\n\nifneq ($(COMPILE_DOUBLE),yes)\n%.o: %.c\n\t$(ECHO_PREFIX) echo \"   [CC] $< -> $@\"\n\t$(CMD_PREFIX) $(CC) -o $@ -c $< $(MAKE_DEPS) $(CC_CFLAGS) $(_ASTCFLAGS_COVERAGE)\nendif\n\n%.i: %.c\n\t$(ECHO_PREFIX) echo \"   [CPP] $< -> $@\"\n\t$(CMD_PREFIX) $(CC) -o $@ -E $< $(MAKE_DEPS) $(CC_CFLAGS) $(_ASTCFLAGS_COVERAGE)\n\n%.oo: %.ii\n\t$(ECHO_PREFIX) echo \"   [CXXi] $< -> $@\"\nifeq ($(COMPILE_DOUBLE),yes)\n\t$(CMD_PREFIX) $(CXX) -o /dev/null -c $< $(CXX_CFLAGS) $(OPTIMIZE)\nendif\n\t$(CMD_PREFIX) $(CXX) -o $@ -c $< $(CXX_CFLAGS) $(_ASTCFLAGS_COVERAGE)\n\nifneq ($(COMPILE_DOUBLE),yes)\n%.oo: %.cc\n\t$(ECHO_PREFIX) echo \"   [CXX] $< -> $@\"\n\t$(CMD_PREFIX) $(CXX) -o $@ -c $< $(MAKE_DEPS) $(CXX_CFLAGS) $(_ASTCFLAGS_COVERAGE)\nendif\n\n%.ii: %.cc\n\t$(ECHO_PREFIX) echo \"   [CPP] $< -> $@\"\n\t$(CMD_PREFIX) $(CXX) -o $@ -E $< $(MAKE_DEPS) $(CXX_CFLAGS) $(_ASTCFLAGS_COVERAGE)\n\n%.so: %.o\nifeq ($(GNU_LD),1)\n\t$(CMD_PREFIX) $(ASTTOPDIR)/build_tools/make_linker_version_script $* \"$(LINKER_SYMBOL_PREFIX)\" \"$(ASTTOPDIR)\"\nendif\n\t$(ECHO_PREFIX) echo \"   [LD] $^ -> $@\"\n\t$(CMD_PREFIX) $(CC) -o $@ $(CC_LDFLAGS_SO) $^ $(CC_LIBS)\n\n%.so: %.oo\nifeq ($(GNU_LD),1)\n\t$(CMD_PREFIX) $(ASTTOPDIR)/build_tools/make_linker_version_script $* \"$(LINKER_SYMBOL_PREFIX)\" \"$(ASTTOPDIR)\"\nendif\n\t$(ECHO_PREFIX) echo \"   [LDXX] $^ -> $@\"\n\t$(CMD_PREFIX) $(CXX) -o $@ $(CXX_LDFLAGS_SO) $^ $(CXX_LIBS)\n\n%: %.o\n\t$(ECHO_PREFIX) echo \"   [LD] $^ -> $@\"\n\t$(CMD_PREFIX) $(CXX) -o $@ $(PTHREAD_CFLAGS) $(_ASTLDFLAGS) $^ $(CXX_LIBS) $(ASTLDFLAGS)\n\n# These CC commands just create an object file with the input file embedded in it.\n# It can be access from code as follows:\n# If your input file is named abc_def.xml...\n#\n# extern const uint8_t _binary_abc_def_xml_start[];\n# extern const uint8_t _binary_abc_def_xml_end[];\n# extern const size_t _binary_abc_def_xml_size;\n%.o: %.xml\n\t$(ECHO_PREFIX) echo \"   [LD] $^ -> $@\"\n\t$(CMD_PREFIX) $(CC) -g -Wl,-znoexecstack -nostartfiles  -nodefaultlibs -nostdlib -r -Wl,-b,binary -o $@ $^\n\n%.o: %.xslt\n\t$(ECHO_PREFIX) echo \"   [LD] $^ -> $@\"\n\t$(CMD_PREFIX) $(CC) -g -Wl,-znoexecstack -nostartfiles  -nodefaultlibs -nostdlib -r -Wl,-b,binary -o $@ $^\n\ndist-clean:: clean\n"
        },
        {
          "name": "README-SERIOUSLY.bestpractices.md",
          "type": "blob",
          "size": 16.3583984375,
          "content": "# Best Practices\n\nThe purpose of this document is to define best practices when working with\nAsterisk in order to minimize possible security breaches and to provide tried\nexamples in field deployments. This is a living document and is subject to\nchange over time as best practices are defined.\n\n* [Filtering Data]:\n        How to protect yourself from redial attacks\n* [Proper Device Naming]:\n        Why to not use numbered extensions for devices\n* [Secure Passwords]:\n        Secure passwords limit your risk to brute force attacks\n* [Reducing Pattern Match Typos]:\n        Using the 'same' prefix, or using Goto()\n* [Manager Class Authorizations]:\n        Recognizing potential issues with certain classes of authorization\n* [Avoid Privilege Escalations]:\n        Disable the ability to execute functions that may escalate privileges\n* [Important Security Considerations]:\n        More information on the Asterisk Wiki\n\n## Additional Links\n\nAdditional links that contain useful information about best practices or\nsecurity are listed below.\n\n* [Seven Steps to Better SIP Security][blog-sip-security]\n* [Asterisk VoIP Security (webinar)][voip-security-webinar]\n\n\n## Filtering Data\n\nIn the Asterisk dialplan, several channel variables contain data potentially\nsupplied by outside sources. This could lead to a potential security concern\nwhere those outside sources may send cleverly crafted strings of data which\ncould be utilized, e.g. to place calls to unexpected locations.\n\nAn example of this can be found in the use of pattern matching and the ${EXTEN}\nchannel variable. Note that ${EXTEN} is not the only system created channel\nvariable, so it is important to be aware of where the data you're using is\ncoming from.\n\nFor example, this common dialplan takes 2 or more characters of data, starting\nwith a number 0-9, and then accepts any additional information supplied by the\nrequest.\n\n**NOTE**:\n> We use SIP in this example, but is not limited to SIP only; protocols such as\n> Jabber/XMPP or IAX2 are also susceptible to the same sort of injection problem.\n\n```INI\n[incoming]\nexten => _X.,1,Verbose(2,Incoming call to extension ${EXTEN})\nexten => _X.,n,Dial(PJSIP/${EXTEN})\nexten => _X.,n,Hangup()\n```\n\nThis dialplan may be utilized to accept calls to extensions, which then dial a\nnumbered device name configured in one of the channel configuration files (such\nas pjsip.conf, iax.conf, etc...) (see [Proper Device Naming] for more information\non why this approach is flawed).\n\nThe example we've given above looks harmless enough until you take into\nconsideration that several channel technologies accept characters that could\nbe utilized in a clever attack. For example, instead of just sending a request\nto dial extension 500 (which in our example above would create the string\nPJSIP/500 and is then used by the Dial() application to place a call), someone\ncould potentially send a string like \"500&PJSIP/itsp/14165551212\".\n\nThe string \"500&PJSIP/itsp/14165551212\" would then be contained within the\n${EXTEN} channel variable, which is then utilized by the Dial() application in\nour example, thereby giving you the dialplan line of:\n\n```INI\nexten => _X.,n,Dial(PJSIP/500&PJSIP/itsp/14165551212)\n```\n\nOur example above has now provided someone with a method to place calls out of\nyour ITSP in a place where you didn't expect to allow it. There are a couple of\nways in which you can mitigate this impact: stricter pattern matching, or using\nthe FILTER() dialplan function.\n\nThe CALLERID(num) and CALLERID(name) values are other commonly used values that\nare sources of data potentially supplied by outside sources.  If you use these\nvalues as parameters to the System() or MixMonitor() applications or the SHELL()\ndialplan function, you can allow injection of arbitrary operating system command\nexecution.  The FILTER() dialplan function is available to remove dangerous\ncharacters from untrusted strings to block the command injection.\n\n\n### Strict Pattern Matching\n\nThe simple way to mitigate this problem is with a strict pattern match that does\nnot utilize the period (.) or bang (!) characters to match on one-or-more\ncharacters or zero-or-more characters (respectively). To fine tune our example\nto only accept three digit extensions, we could change our pattern match to\nbe:\n\n```INI\nexten => _XXX,n,Dial(PJSIP/${EXTEN})\n```\n\nIn this way, we have minimized our impact because we're not allowing anything\nother than the numbers zero through nine. But in some cases we really do need to\nhandle variable pattern matches, such as when dialing international numbers\nor when we want to handle something like a SIP URI. In this case, we'll need to\nutilize the FILTER() dialplan function.\n\n\n### Using FILTER()\n\nThe FILTER() dialplan function is used to filter strings by only allowing\ncharacters that you have specified. This is a perfect candidate for controlling\nwhich characters you want to pass to the Dial() application, or any other\napplication which will contain dynamic information passed to Asterisk from an\nexternal source. Lets take a look at how we can use FILTER() to control what\ndata we allow.\n\nUsing our previous example to accept any string length of 2 or more characters,\nstarting with a number of zero through nine, we can use FILTER() to limit what\nwe will accept to just numbers. Our example would then change to something like:\n\n```INI\n[incoming]\nexten => _X.,1,Verbose(2,Incoming call to extension ${EXTEN})\nexten => _X.,n,Dial(PJSIP/${FILTER(0-9,${EXTEN})})\nexten => _X.,n,Hangup()\n```\n\nNote how we've wrapped the ${EXTEN} channel variable with the FILTER() function\nwhich will then only pass back characters that fit into the numerical range that\nwe've defined.\n\nAlternatively, if we didn't want to utilize the FILTER() function within the\nDial() application directly, we could save the value to a channel variable,\nwhich has a side effect of being usable in other locations of your dialplan if\nnecessary, and to handle error checking in a separate location.\n\n```INI\n[incoming]\nexten => _X.,1,Verbose(2,Incoming call to extension ${EXTEN})\nexten => _X.,n,Set(SAFE_EXTEN=${FILTER(0-9,${EXTEN})})\nexten => _X.,n,Dial(PJSIP/${SAFE_EXTEN})\nexten => _X.,n,Hangup()\n```\n\nNow we can use the ${SAFE_EXTEN} channel variable anywhere throughout the rest\nof our dialplan, knowing we've already filtered it. We could also perform an\nerror check to verify that what we've received in ${EXTEN} also matches the data\npassed back by FILTER(), and to fail the call if things do not match.\n\n```INI\n[incoming]\nexten => _X.,1,Verbose(2,Incoming call to extension ${EXTEN})\nexten => _X.,n,Set(SAFE_EXTEN=${FILTER(0-9,${EXTEN})})\nexten => _X.,n,GotoIf($[${EXTEN} != ${SAFE_EXTEN}]?error,1)\nexten => _X.,n,Dial(PJSIP/${SAFE_EXTEN})\nexten => _X.,n,Hangup()\n\nexten => error,1,Verbose(2,Values of EXTEN and SAFE_EXTEN did not match.)\nexten => error,n,Verbose(2,EXTEN: \"${EXTEN}\" -- SAFE_EXTEN: \"${SAFE_EXTEN}\")\nexten => error,n,Playback(silence/1&invalid)\nexten => error,n,Hangup()\n```\n\nAnother example would be using FILTER() to control the characters we accept when\nwe're expecting to get a SIP URI for dialing.\n\n```INI\n[incoming]\nexten => _[0-9a-zA-Z].,1,Verbose(2,Incoming call to extension ${EXTEN})\nexten => _[0-9a-zA-Z].,n,Dial(PJSIP/${FILTER(.@0-9a-zA-Z,${EXTEN})\nexten => _[0-9a-zA-Z].,n,Hangup()\n```\n\nOf course the FILTER() function doesn't check the formatting of the incoming\nrequest. There is also the REGEX() dialplan function which can be used to\ndetermine if the string passed to it matches the regular expression you've\ncreated, and to take proper action on whether it matches or not. The creation of\nregular expressions is left as an exercise for the reader.\n\nMore information about the FILTER() and REGEX() dialplan functions can be found\nby typing \"core show function FILTER\" and \"core show function REGEX\" from your\nAsterisk console.\n\n\n## Proper Device Naming\n\nIn Asterisk, the concept of an extension number being tied to a specific device\ndoes not exist. Asterisk is aware of devices it can call or receive calls from,\nand how you define in your dialplan how to reach those devices is up to you.\n\nBecause it has become common practice to think of a specific device as having an\nextension number associated with it, it only becomes natural to think about\nnaming your devices the same as the extension number you're providing it. But\nby doing this, you're limiting the powerful concept of separating user from\nextensions, and extensions from devices.\n\nIt can also be a security hazard to name your devices with a number, as this can\nopen you up to brute force attacks. Many of the current exploits deal with\ndevice configurations which utilize a number, and even worse, a password that\nmatches the devices name. For example, take a look at this poorly created device\nin pjsip.conf:\n\n```INI\n[1000]\ntype=auth\nauth_type=userpass\npassword=1000\nusername=1000\n```\n\nAs implied by the context, we've permitted a device named 1000 with a password\nof 1000 to place calls internationally. If your PBX system is accessible via\nthe internet, then your system will be vulnerable to expensive international\ncalls. Even if your system is not accessible via the internet, people within\nyour organization could get access to dialing rules you'd prefer to reserve only\nfor certain people.\n\nA more secure example for the device would be to use something like the MAC\naddress of the device, along with a strong password (see the section Secure\nPasswords). The following example would be more secure:\n\n```INI\n[0004f2040001]\ntype=auth\nauth_type=userpass\npassword=aE3%B8*$jk^G\nusername=0004f2040001\n```\n\nThen in your dialplan, you would reference the device via the MAC address of the\ndevice (or if using the softphone, a MAC address of a network interface on the\ncomputer).\n\nAlso note that you should NOT use this password, as it will likely be one of the\nfirst ones added to the dictionary for brute force attacks.\n\n\n## Secure Passwords\n\nSecure passwords are necessary in many (if not all) environments, and Asterisk\nis certainly no exception, especially when it comes to expensive long distance\ncalls that could potentially cost your company hundreds or thousands of dollars\non an expensive monthly phone bill, with little to no recourse to fight the\ncharges.\n\nWhenever you are positioned to add a password to your system, whether that is\nfor a device configuration, a database connection, or any other secure\nconnection, be sure to use a secure password. A good example of a secure\npassword would be something like:\n\n```\naE3%B8*$jk^G\n```\n\nOur password also contains 12 characters with a mixture of upper and\nlower case characters, numbers, and symbols. Because these passwords are likely\nto only be entered once, or loaded via a configuration file, there is\nno need to create simple passwords, even in testing. Some of the holes found in\nproduction systems used for exploitations involve finding the one test extension\nthat contains a weak password that was forgotten prior to putting a system into\nproduction.\n\nUsing a web search you can find several online password generators such as\n[Strong Password Generator] or there are several scripts that can be\nused to generate a strong password.\n\n\n## Reducing Pattern Match Typos\n\nAs of Asterisk 1.6.2, a new method for reducing the number of complex pattern\nmatches you need to enter, which can reduce typos in your dialplan, has been\nimplemented. Traditionally, a dialplan with a complex pattern match would look\nsomething like:\n\n```INI\nexten => _[3-5]XXX,1,Verbose(Incoming call to ${EXTEN})\nexten => _[3-5]XXX,n,Set(DEVICE=${DB(device/mac_address/${EXTEN})})\nexten => _[3-5]XXX,n,Set(TECHNOLOGY=${DB(device/technology/${EXTEN})})\nexten => _[3-5]XXX,n,GotoIf($[${ISNULL(${TECHNOLOGY})} | ${ISNULL(${DEVICE})}]?error,1)\nexten => _[3-5]XXX,n,Dial(${TECHNOLOGY}/${DEVICE},${GLOBAL(TIMEOUT)})\nexten => _[3-5]XXX,n,Set(vmFlag=${IF($[${DIALSTATUS} = BUSY]?b:u)})\nexten => _[3-5]XXX,n,Voicemail(${EXTEN}@${GLOBAL(VOICEMAIL_CONTEXT)},${vmFlag})\nexten => _[3-5]XXX,n,Hangup()\n\nexten => error,1,Verbose(2,Unable to lookup technology or device for extension)\nexten => error,n,Playback(silence/1&num-not-in-db)\nexten => error,n,Hangup()\n```\n\nOf course there exists the possibility for a typo when retyping the pattern\nmatch _\\[3-5\\]XXX which will match on extensions 3000 through 5999. We can\nminimize this error by utilizing the same => prefix on all lines beyond the\nfirst one. Our same dialplan with using same => would look like the following:\n\n```INI\nexten => _[3-5]XXX,1,Verbose(Incoming call to ${EXTEN})\nsame => n,Set(DEVICE=${DB(device/mac_address/${EXTEN})})\nsame => n,Set(TECHNOLOGY=${DB(device/technology/${EXTEN})})\nsame => n,GotoIf($[${ISNULL(${TECHNOLOGY})} | ${ISNULL(${DEVICE})}]?error,1)\nsame => n,Dial(${TECHNOLOGY}/${DEVICE},${GLOBAL(TIMEOUT)})\nsame => n,Set(vmFlag=${IF($[${DIALSTATUS} = BUSY]?b:u)})\nsame => n,Voicemail(${EXTEN}@${GLOBAL(VOICEMAIL_CONTEXT)},${vmFlag})\nsame => n,Hangup()\n\nexten => error,1,Verbose(2,Unable to lookup technology or device for extension)\nsame => n,Playback(silence/1&num-not-in-db)\nsame => n,Hangup()\n```\n\n\n## Manager Class Authorizations\n\nManager accounts have associated class authorizations that define what actions\nand events that account can execute/receive.  In order to run Asterisk commands\nor dialplan applications that affect the system Asterisk executes on, the\n\"system\" class authorization should be set on the account.\n\nHowever, Manager commands that originate new calls into the Asterisk dialplan\nhave the potential to alter or affect the system as well, even though the\nclass authorization for origination commands is \"originate\".  Take, for example,\nthe Originate manager command:\n\n```\nAction: Originate\nChannel: PJSIP/foo\nExten: s\nContext: default\nPriority: 1\nApplication: System\nData: echo hello world!\n```\n\nThis manager command will attempt to execute an Asterisk application, System,\nwhich is normally associated with the \"system\" class authorization.  While some\nchecks have been put into Asterisk to take this into account, certain dialplan\nconfigurations and/or clever manipulation of the Originate manager action can\ncircumvent these checks.  For example, take the following dialplan:\n\n```INI\nexten => s,1,Verbose(Incoming call)\nsame => n,MixMonitor(foo.wav,,${EXEC_COMMAND})\nsame => n,Dial(PJSIP/bar)\nsame => n,Hangup()\n```\n\nWhatever has been defined in the variable EXEC_COMMAND will be executed after\nMixMonitor has finished recording the call.  The dialplan writer may have\nintended that this variable to be set by some other location in the dialplan;\nhowever, the Manager action Originate allows for channel variables to be set by\nthe account initiating the new call.  This could allow the Originate action to\nexecute some command on the system by setting the EXEC_COMMAND dialplan variable\nin the Variable: header.\n\nIn general, you should treat the Manager class authorization \"originate\" the\nsame as the class authorization \"system\".  Good system configuration, such as\nnot running Asterisk as root, can prevent serious problems from arising when\nallowing external connections to originate calls into Asterisk.\n\n\n## Avoid Privilege Escalations\n\nExternal control protocols, such as Manager, often have the ability to get and\nset channel variables; which allows the execution of dialplan functions.\n\nDialplan functions within Asterisk are incredibly powerful, which is wonderful\nfor building applications using Asterisk. But during the read or write\nexecution, certain dialplan functions do much more. For example, reading the\nSHELL() function can execute arbitrary commands on the system Asterisk is\nrunning on. Writing to the FILE() function can change any file that Asterisk has\nwrite access to.\n\nWhen these functions are executed from an external protocol, that execution\ncould result in a privilege escalation. Asterisk can inhibit the execution of\nthese functions, if live_dangerously in the \\[options\\] section of asterisk.conf\nis set to no.\n\nIn Asterisk 12 and later, live_dangerously defaults to no.\n\n[voip-security-webinar]: https://docs.asterisk.org/Deployment/Important-Security-Considerations/Asterisk-Security-Webinars/\n[blog-sip-security]: https://web.archive.org/web/20171030134647/http://blogs.digium.com/2009/03/28/sip-security/\n[Strong Password Generator]: https://www.strongpasswordgenerator.com\n[Filtering Data]: #filtering-data\n[Proper Device Naming]: #proper-device-naming\n[Secure Passwords]: #secure-passwords\n[Reducing Pattern Match Typos]: #reducing-pattern-match-typos\n[Manager Class Authorizations]: #manager-class-authorizations\n[Avoid Privilege Escalations]: #avoid-privilege-escalations\n[Important Security Considerations]: https://docs.asterisk.org/Deployment/Important-Security-Considerations/\n"
        },
        {
          "name": "README-addons.txt",
          "type": "blob",
          "size": 1.5380859375,
          "content": "===============================================================================\n===                       Asterisk Add-on Modules                           ===\n===============================================================================\n\n    This document pertains to the modules that reside in the addons/\nsubdirectory of the source tree.  By default, these modules are not compiled\nand installed.  If you choose to enable them, you must be aware of what\npotential licensing and/or patent implications that has on your usage and\ndistribution of Asterisk.\n\n    Even though Asterisk is released as open source under the terms of the\nGPLv2 (see LICENSE for details), no core functionality in Asterisk has any\ndependencies on libraries that are licensed under the GPL.  One reason a module\nmay be in the add-ons category is that it may have a GPL dependency.  Since\nthese dependencies are not compatible with dual licensing of Asterisk, the\ndependant modules are set aside to make it clear that they may not be used\nwith commercial versions of Asterisk, unless other licensing arrangements are\nmade with the copyright holders of those dependencies.\n\n    Another reason that modules may be set aside is that there may be\nadditional restrictions on the usage of the code imposed by the license or\nrelated patents.  The MySQL and MP3 modules are examples of this.\n\n    If you have any questions, contact your lawyer.\n\n===============================================================================\n===============================================================================\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.955078125,
          "content": "# The Asterisk(R) Open Source PBX\n```text\n        By Mark Spencer <markster@digium.com> and the Asterisk.org developer community.\n        Copyright (C) 2001-2021 Sangoma Technologies Corporation and other copyright holders.\n```\n## SECURITY\n\n  It is imperative that you read and fully understand the contents of\nthe security information document before you attempt to configure and run\nan Asterisk server.\n\nSee [Important Security Considerations] for more information.\n\n## WHAT IS ASTERISK ?\n\n  Asterisk is an Open Source PBX and telephony toolkit.  It is, in a\nsense, middleware between Internet and telephony channels on the bottom,\nand Internet and telephony applications at the top.  However, Asterisk supports\nmore telephony interfaces than just Internet telephony.  Asterisk also has a\nvast amount of support for traditional PSTN telephony, as well.\n\n  For more information on the project itself, please visit the Asterisk\n[home page] and the official [documentation].  In addition you'll find lots\nof information compiled by the Asterisk community at [voip-info.org].\n\n  There is a book on Asterisk published by O'Reilly under the Creative Commons\nLicense. It is available in book stores as well as in a downloadable version on\nthe [asteriskdocs.org] web site.\n\n## SUPPORTED OPERATING SYSTEMS\n\n### Linux\n\n  The Asterisk Open Source PBX is developed and tested primarily on the\nGNU/Linux operating system, and is supported on every major GNU/Linux\ndistribution.\n\n### Others\n\n  Asterisk has also been 'ported' and reportedly runs properly on other\noperating systems as well, including Sun Solaris, Apple's Mac OS X, Cygwin,\nand the BSD variants.\n\n## GETTING STARTED\n\n  First, be sure you've got supported hardware (but note that you don't need\nANY special hardware, not even a sound card) to install and run Asterisk.\n\nSupported telephony hardware includes:\n* All Analog and Digital Interface cards from [Sangoma]\n* QuickNet Internet PhoneJack and LineJack\n* any full duplex sound card supported by ALSA, OSS, or PortAudio\n* any ISDN card supported by mISDN on Linux\n* The Xorcom Astribank channel bank\n* VoiceTronix OpenLine products\n\n### UPGRADING FROM AN EARLIER VERSION\n\n  If you are updating from a previous version of Asterisk, make sure you\nread the [UPGRADE.txt] file in the source directory. There are some files\nand configuration options that you will have to change, even though we\nmade every effort possible to maintain backwards compatibility.\n\n  In order to discover new features to use, please check the configuration\nexamples in the [configs] directory of the source code distribution.  For a\nlist of new features in this version of Asterisk, see the [CHANGES] file.\n\n### NEW INSTALLATIONS\n\n  Ensure that your system contains a compatible compiler and development\nlibraries.  Asterisk requires either the GNU Compiler Collection (GCC) version\n4.1 or higher, or a compiler that supports the C99 specification and some of\nthe gcc language extensions.  In addition, your system needs to have the C\nlibrary headers available, and the headers and libraries for ncurses.\n\n  There are many modules that have additional dependencies.  To see what\nlibraries are being looked for, see `./configure --help`, or run\n`make menuselect` to view the dependencies for specific modules.\n\n  On many distributions, these dependencies are installed by packages with names\nlike 'glibc-devel', 'ncurses-devel', 'openssl-devel' and 'zlib-devel'\nor similar.\n\nSo, let's proceed:\n1. Read this file.\n\n  There are more documents than this one in the [doc] directory.  You may also\nwant to check the configuration files that contain examples and reference\nguides in the [configs] directory.\n\n2. Run `./configure`\n\n  Execute the configure script to guess values for system-dependent\nvariables used during compilation. If the script indicates that some required \ncomponents are missing, you can run `./contrib/scripts/install_prereq install`\nto install the necessary components. Note that this will install all dependencies for every functionality of Asterisk. After running the script, you will need\nto rerun `./configure`.\n\n3. Run `make menuselect` _\\[optional]_\n\n  This is needed if you want to select the modules that will be compiled and to\ncheck dependencies for various optional modules.\n\n4. Run `make`\n\nAssuming the build completes successfully:\n\n5. Run `make install`\n\n  If this is your first time working with Asterisk, you may wish to install\nthe sample PBX, with demonstration extensions, etc.  If so, run:\n\n6. Run `make samples`\n\n  Doing so will overwrite any existing configuration files you have installed.\n\n7. Finally, you can launch Asterisk in the foreground mode (not a daemon) with:\n```\n        # asterisk -vvvc\n```\n  You'll see a bunch of verbose messages fly by your screen as Asterisk\ninitializes (that's the \"very very verbose\" mode).  When it's ready, if\nyou specified the \"c\" then you'll get a command line console, that looks\nlike this:\n```\n        *CLI>\n```\n  You can type \"core show help\" at any time to get help with the system.  For help\nwith a specific command, type \"core show help <command>\".  To start the PBX using\nyour sound card, you can type \"console dial\" to dial the PBX.  Then you can use\n\"console answer\", \"console hangup\", and \"console dial\" to simulate the actions\nof a telephone.  Remember that if you don't have a full duplex sound card\n(and Asterisk will tell you somewhere in its verbose messages if you do/don't)\nthen it won't work right (not yet).\n\n  \"man asterisk\" at the Unix/Linux command prompt will give you detailed\ninformation on how to start and stop Asterisk, as well as all the command\nline options for starting Asterisk.\n\n  Feel free to look over the configuration files in `/etc/asterisk`, where you\nwill find a lot of information about what you can do with Asterisk.\n\n### ABOUT CONFIGURATION FILES\n\n  All Asterisk configuration files share a common format.  Comments are\ndelimited by ';' (since '#' of course, being a DTMF digit, may occur in\nmany places).  A configuration file is divided into sections whose names\nappear in []'s.  Each section typically contains two types of statements,\nthose of the form 'variable = value', and those of the form 'object =>\nparameters'.  Internally the use of '=' and '=>' is exactly the same, so\nthey're used only to help make the configuration file easier to\nunderstand, and do not affect how it is actually parsed.\n\n  Entries of the form 'variable=value' set the value of some parameter in\nasterisk.  For example, in [chan_dahdi.conf], one might specify:\n```\n\tswitchtype=national\n```\n  In order to indicate to Asterisk that the switch they are connecting to is\nof the type \"national\".  In general, the parameter will apply to\ninstantiations which occur below its specification.  For example, if the\nconfiguration file read:\n```\n\tswitchtype = national\n\tchannel => 1-4\n\tchannel => 10-12\n\tswitchtype = dms100\n\tchannel => 25-47\n```\n\n  The \"national\" switchtype would be applied to channels one through\nfour and channels 10 through 12, whereas the \"dms100\" switchtype would\napply to channels 25 through 47.\n\n  The \"object => parameters\" instantiates an object with the given\nparameters.  For example, the line \"channel => 25-47\" creates objects for\nthe channels 25 through 47 of the card, obtaining the settings\nfrom the variables specified above.\n\n### SPECIAL NOTE ON TIME\n\n  Those using SIP phones should be aware that Asterisk is sensitive to\nlarge jumps in time.  Manually changing the system time using date(1)\n(or other similar commands) may cause SIP registrations and other\ninternal processes to fail.  If your system cannot keep accurate time\nby itself use [NTP] to keep the system clock\nsynchronized to \"real time\".  NTP is designed to keep the system clock\nsynchronized by speeding up or slowing down the system clock until it\nis synchronized to \"real time\" rather than by jumping the time and\ncausing discontinuities. Most Linux distributions include precompiled\nversions of NTP.  Beware of some time synchronization methods that get\nthe correct real time periodically and then manually set the system\nclock.\n\n  Apparent time changes due to daylight savings time are just that,\napparent.  The use of daylight savings time in a Linux system is\npurely a user interface issue and does not affect the operation of the\nLinux kernel or Asterisk.  The system clock on Linux kernels operates\non UTC.  UTC does not use daylight savings time.\n\n  Also note that this issue is separate from the clocking of TDM\nchannels, and is known to at least affect SIP registrations.\n\n### FILE DESCRIPTORS\n\n  Depending on the size of your system and your configuration,\nAsterisk can consume a large number of file descriptors.  In UNIX,\nfile descriptors are used for more than just files on disk.  File\ndescriptors are also used for handling network communication\n(e.g. SIP, IAX2, or H.323 calls) and hardware access (e.g. analog and\ndigital trunk hardware).  Asterisk accesses many on-disk files for\neverything from configuration information to voicemail storage.\n\n  Most systems limit the number of file descriptors that Asterisk can\nhave open at one time.  This can limit the number of simultaneous\ncalls that your system can handle.  For example, if the limit is set\nat 1024 (a common default value) Asterisk can handle approximately 150\nSIP calls simultaneously.  To change the number of file descriptors\nfollow the instructions for your system below:\n\n#### PAM-BASED LINUX SYSTEM\n\n  If your system uses PAM (Pluggable Authentication Modules) edit\n`/etc/security/limits.conf`.  Add these lines to the bottom of the file:\n```text\nroot            soft    nofile          4096\nroot            hard    nofile          8196\nasterisk        soft    nofile          4096\nasterisk        hard    nofile          8196\n```\n\n(adjust the numbers to taste).  You may need to reboot the system for\nthese changes to take effect.\n\n#### GENERIC UNIX SYSTEM\n\n  If there are no instructions specifically adapted to your system\nabove you can try adding the command `ulimit -n 8192` to the script\nthat starts Asterisk.\n\n## MORE INFORMATION\n\n  See the [doc] directory for more documentation on various features.\nAgain, please read all the configuration samples that include documentation\non the configuration options.\n\n  Finally, you may wish to visit the [support] site and join the [mailing\nlist] if you're interested in getting more information.\n\nWelcome to the growing worldwide community of Asterisk users!\n```\n        Mark Spencer, and the Asterisk.org development community\n```\n\n---\n\nAsterisk is a trademark of Sangoma Technologies Corporation\n\n[home page]: https://www.asterisk.org\n[support]: https://www.asterisk.org/support\n[documentation]: https://docs.asterisk.org/\n[mailing list]: http://lists.digium.com/mailman/listinfo/asterisk-users\n[chan_dahdi.conf]: configs/samples/chan_dahdi.conf.sample\n[voip-info.org]: http://www.voip-info.org/wiki-Asterisk\n[asteriskdocs.org]: http://www.asteriskdocs.org\n[NTP]: http://www.ntp.org/\n[Sangoma]: https://www.sangoma.com/\n[UPGRADE.txt]: UPGRADE.txt\n[CHANGES]: CHANGES\n[configs]: configs\n[doc]: doc\n[Important Security Considerations]: https://docs.asterisk.org/Deployment/Important-Security-Considerations/\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.51953125,
          "content": "# Security Policy\n\n## Supported Versions\n\nThe Asterisk project maintains a [documentation page](https://docs.asterisk.org/About-the-Project/Asterisk-Versions/) of releases. Each version is listed with its release date, security fix only date, and end of life date. Consult this wiki page to see if the version of Asterisk you are reporting a security vulnerability against is still supported.\n\n## Reporting a Vulnerability\n\nTo report a vulnerability use the \"Report a vulnerability\" button under the \"Security\" tab of this project.\n"
        },
        {
          "name": "Zaptel-to-DAHDI.txt",
          "type": "blob",
          "size": 1.7607421875,
          "content": "=========================================================\n=== Information for upgrading from Zaptel to DAHDI    ===\n=========================================================\n\nAs announced in early 2008, Digium is renaming the Zaptel telephony\ninterface project to DAHDI (Digium Asterisk Hardware Device Interface)\nto accommodate the desires of the owner of the Zaptel trademark for\ntelephony purposes.\n\nThis version of Asterisk can only be built using DAHDI, and as a\nresult there are number of changes that will be visible to previous\nusers of Asterisk with Zaptel.\n\nFirst, the modules that directly use services from DAHDI have been\nrenamed; the new names are:\n\n  chan_zap.so -> chan_dahdi.so\n  app_zapbarge.so -> app_dahdibarge.so\n  app_zapscan.so -> app_dahdiscan.so\n  codec_zap.so -> codec_dahdi.so\n\nThe following modules have been removed:\n  app_zapras.so -> app_dahdiras.so\n\nSecond, the behavior of many modules has changed due to the switch to\nDAHDI; the changes are listed below.\n\nchan_dahdi.so:\n\n  Incoming and outgoing channels managed by this module will be\n  'DAHDI' channels instead of 'Zap' channels.\n\n  All CLI commands that began with 'zap' have been renamed to 'dahdi'\n  commands.\n\n  All Asterisk Manager Interface (AMI) actions that began with 'Zap'\n  have changed to 'DAHDI' prefixes.\n\n  The ZapSendKeypadFacility dialplan application has been renamed to\n  DAHDISendKeypadFacility.\n\n  The configuration for the channel driver will be read from\n  /etc/asterisk/chan_dahdi.conf instead of /etc/asterisk/zapata.conf.\n\napp_dahdibarge.so:\n\n  The ZapBarge application has been renamed to DAHDIBarge.\n\napp_dahdiras.so:\n\n  The ZapRAS application was renamed to DAHDIRAS. This application has\n  since been removed.\n\napp_dahdiscan.so:\n\n  The ZapScan application has been renamed to DAHDIScan.\n"
        },
        {
          "name": "addons",
          "type": "tree",
          "content": null
        },
        {
          "name": "agi",
          "type": "tree",
          "content": null
        },
        {
          "name": "apps",
          "type": "tree",
          "content": null
        },
        {
          "name": "autoconf",
          "type": "tree",
          "content": null
        },
        {
          "name": "bootstrap.sh",
          "type": "blob",
          "size": 0.7451171875,
          "content": "#!/bin/sh\n\ncheck_for_app() {\n\t$1 --version 2>&1 >/dev/null\n\tif [ $? != 0 ]\n\tthen\n\t\techo \"Please install $1 and run bootstrap.sh again!\"\n\t\texit 1\n\tfi\n}\n\n# OpenBSD: pkg_add autoconf%2.69 automake%1.16 metaauto\ntest -n \"$AUTOCONF_VERSION\" || export AUTOCONF_VERSION=2.69\ntest -n \"$AUTOMAKE_VERSION\" || export AUTOMAKE_VERSION=1.16\n\ncheck_for_app autoconf\ncheck_for_app autoheader\ncheck_for_app automake\ncheck_for_app aclocal\n\ngen_configure() {\n\techo \"Generating the configure script for $1 ...\"\n\tshift\n\n\taclocal -I \"$@\"\n\tautoconf\n\tautoheader\n\tautomake --add-missing --copy 2>/dev/null\n}\n\ngen_configure \"Asterisk\" autoconf `find third-party -path '*/*/*' -prune -o -type d -print | xargs -I {} echo -I {}`\ncd menuselect\ngen_configure \"menuselect\" ../autoconf\n\nexit 0\n"
        },
        {
          "name": "bridges",
          "type": "tree",
          "content": null
        },
        {
          "name": "build_tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "cdr",
          "type": "tree",
          "content": null
        },
        {
          "name": "cel",
          "type": "tree",
          "content": null
        },
        {
          "name": "channels",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecs",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.guess",
          "type": "blob",
          "size": 43.1337890625,
          "content": "#! /bin/sh\n# Attempt to guess a canonical system name.\n#   Copyright 1992-2018 Free Software Foundation, Inc.\n\ntimestamp='2018-12-07'\n\n# This file is free software; you can redistribute it and/or modify it\n# under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, see <https://www.gnu.org/licenses/>.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that\n# program.  This Exception is an additional permission under section 7\n# of the GNU General Public License, version 3 (\"GPLv3\").\n#\n# Originally written by Per Bothner; maintained since 2000 by Ben Elliston.\n#\n# You can get the latest version of this script from:\n# https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess\n#\n# Please send patches to <config-patches@gnu.org>.\n\n\nme=`echo \"$0\" | sed -e 's,.*/,,'`\n\nusage=\"\\\nUsage: $0 [OPTION]\n\nOutput the configuration name of the system \\`$me' is run on.\n\nOptions:\n  -h, --help         print this help, then exit\n  -t, --time-stamp   print date of last modification, then exit\n  -v, --version      print version number, then exit\n\nReport bugs and patches to <config-patches@gnu.org>.\"\n\nversion=\"\\\nGNU config.guess ($timestamp)\n\nOriginally written by Per Bothner.\nCopyright 1992-2018 Free Software Foundation, Inc.\n\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n\nhelp=\"\nTry \\`$me --help' for more information.\"\n\n# Parse command line\nwhile test $# -gt 0 ; do\n  case $1 in\n    --time-stamp | --time* | -t )\n       echo \"$timestamp\" ; exit ;;\n    --version | -v )\n       echo \"$version\" ; exit ;;\n    --help | --h* | -h )\n       echo \"$usage\"; exit ;;\n    -- )     # Stop option processing\n       shift; break ;;\n    - )\t# Use stdin as input.\n       break ;;\n    -* )\n       echo \"$me: invalid option $1$help\" >&2\n       exit 1 ;;\n    * )\n       break ;;\n  esac\ndone\n\nif test $# != 0; then\n  echo \"$me: too many arguments$help\" >&2\n  exit 1\nfi\n\n# CC_FOR_BUILD -- compiler used by this script. Note that the use of a\n# compiler to aid in system detection is discouraged as it requires\n# temporary files to be created and, as you can see below, it is a\n# headache to deal with in a portable fashion.\n\n# Historically, `CC_FOR_BUILD' used to be named `HOST_CC'. We still\n# use `HOST_CC' if defined, but it is deprecated.\n\n# Portable tmp directory creation inspired by the Autoconf team.\n\ntmp=\n# shellcheck disable=SC2172\ntrap 'test -z \"$tmp\" || rm -fr \"$tmp\"' 0 1 2 13 15\n\nset_cc_for_build() {\n    : \"${TMPDIR=/tmp}\"\n    # shellcheck disable=SC2039\n    { tmp=`(umask 077 && mktemp -d \"$TMPDIR/cgXXXXXX\") 2>/dev/null` && test -n \"$tmp\" && test -d \"$tmp\" ; } ||\n\t{ test -n \"$RANDOM\" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir \"$tmp\" 2>/dev/null) ; } ||\n\t{ tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir \"$tmp\" 2>/dev/null) && echo \"Warning: creating insecure temp directory\" >&2 ; } ||\n\t{ echo \"$me: cannot create a temporary directory in $TMPDIR\" >&2 ; exit 1 ; }\n    dummy=$tmp/dummy\n    case ${CC_FOR_BUILD-},${HOST_CC-},${CC-} in\n\t,,)    echo \"int x;\" > \"$dummy.c\"\n\t       for driver in cc gcc c89 c99 ; do\n\t\t   if ($driver -c -o \"$dummy.o\" \"$dummy.c\") >/dev/null 2>&1 ; then\n\t\t       CC_FOR_BUILD=\"$driver\"\n\t\t       break\n\t\t   fi\n\t       done\n\t       if test x\"$CC_FOR_BUILD\" = x ; then\n\t\t   CC_FOR_BUILD=no_compiler_found\n\t       fi\n\t       ;;\n\t,,*)   CC_FOR_BUILD=$CC ;;\n\t,*,*)  CC_FOR_BUILD=$HOST_CC ;;\n    esac\n}\n\n# This is needed to find uname on a Pyramid OSx when run in the BSD universe.\n# (ghazi@noc.rutgers.edu 1994-08-24)\nif test -f /.attbin/uname ; then\n\tPATH=$PATH:/.attbin ; export PATH\nfi\n\nUNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown\nUNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown\nUNAME_SYSTEM=`(uname -s) 2>/dev/null`  || UNAME_SYSTEM=unknown\nUNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown\n\ncase \"$UNAME_SYSTEM\" in\nLinux|GNU|GNU/*)\n\t# If the system lacks a compiler, then just pick glibc.\n\t# We could probably try harder.\n\tLIBC=gnu\n\n\tset_cc_for_build\n\tcat <<-EOF > \"$dummy.c\"\n\t#include <features.h>\n\t#if defined(__UCLIBC__)\n\tLIBC=uclibc\n\t#elif defined(__dietlibc__)\n\tLIBC=dietlibc\n\t#else\n\tLIBC=gnu\n\t#endif\n\tEOF\n\teval \"`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^LIBC' | sed 's, ,,g'`\"\n\n\t# If ldd exists, use it to detect musl libc.\n\tif command -v ldd >/dev/null && \\\n\t\tldd --version 2>&1 | grep -q ^musl\n\tthen\n\t    LIBC=musl\n\tfi\n\t;;\nesac\n\n# Note: order is significant - the case branches are not exclusive.\n\ncase \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n    *:NetBSD:*:*)\n\t# NetBSD (nbsd) targets should (where applicable) match one or\n\t# more of the tuples: *-*-netbsdelf*, *-*-netbsdaout*,\n\t# *-*-netbsdecoff* and *-*-netbsd*.  For targets that recently\n\t# switched to ELF, *-*-netbsd* would select the old\n\t# object file format.  This provides both forward\n\t# compatibility and a consistent mechanism for selecting the\n\t# object file format.\n\t#\n\t# Note: NetBSD doesn't particularly care about the vendor\n\t# portion of the name.  We always set it to \"unknown\".\n\tsysctl=\"sysctl -n hw.machine_arch\"\n\tUNAME_MACHINE_ARCH=`(uname -p 2>/dev/null || \\\n\t    \"/sbin/$sysctl\" 2>/dev/null || \\\n\t    \"/usr/sbin/$sysctl\" 2>/dev/null || \\\n\t    echo unknown)`\n\tcase \"$UNAME_MACHINE_ARCH\" in\n\t    armeb) machine=armeb-unknown ;;\n\t    arm*) machine=arm-unknown ;;\n\t    sh3el) machine=shl-unknown ;;\n\t    sh3eb) machine=sh-unknown ;;\n\t    sh5el) machine=sh5le-unknown ;;\n\t    earmv*)\n\t\tarch=`echo \"$UNAME_MACHINE_ARCH\" | sed -e 's,^e\\(armv[0-9]\\).*$,\\1,'`\n\t\tendian=`echo \"$UNAME_MACHINE_ARCH\" | sed -ne 's,^.*\\(eb\\)$,\\1,p'`\n\t\tmachine=\"${arch}${endian}\"-unknown\n\t\t;;\n\t    *) machine=\"$UNAME_MACHINE_ARCH\"-unknown ;;\n\tesac\n\t# The Operating System including object format, if it has switched\n\t# to ELF recently (or will in the future) and ABI.\n\tcase \"$UNAME_MACHINE_ARCH\" in\n\t    earm*)\n\t\tos=netbsdelf\n\t\t;;\n\t    arm*|i386|m68k|ns32k|sh3*|sparc|vax)\n\t\tset_cc_for_build\n\t\tif echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t\t\t| grep -q __ELF__\n\t\tthen\n\t\t    # Once all utilities can be ECOFF (netbsdecoff) or a.out (netbsdaout).\n\t\t    # Return netbsd for either.  FIX?\n\t\t    os=netbsd\n\t\telse\n\t\t    os=netbsdelf\n\t\tfi\n\t\t;;\n\t    *)\n\t\tos=netbsd\n\t\t;;\n\tesac\n\t# Determine ABI tags.\n\tcase \"$UNAME_MACHINE_ARCH\" in\n\t    earm*)\n\t\texpr='s/^earmv[0-9]/-eabi/;s/eb$//'\n\t\tabi=`echo \"$UNAME_MACHINE_ARCH\" | sed -e \"$expr\"`\n\t\t;;\n\tesac\n\t# The OS release\n\t# Debian GNU/NetBSD machines have a different userland, and\n\t# thus, need a distinct triplet. However, they do not need\n\t# kernel version information, so it can be replaced with a\n\t# suitable tag, in the style of linux-gnu.\n\tcase \"$UNAME_VERSION\" in\n\t    Debian*)\n\t\trelease='-gnu'\n\t\t;;\n\t    *)\n\t\trelease=`echo \"$UNAME_RELEASE\" | sed -e 's/[-_].*//' | cut -d. -f1,2`\n\t\t;;\n\tesac\n\t# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:\n\t# contains redundant information, the shorter form:\n\t# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.\n\techo \"$machine-${os}${release}${abi-}\"\n\texit ;;\n    *:Bitrig:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/Bitrig.//'`\n\techo \"$UNAME_MACHINE_ARCH\"-unknown-bitrig\"$UNAME_RELEASE\"\n\texit ;;\n    *:OpenBSD:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/OpenBSD.//'`\n\techo \"$UNAME_MACHINE_ARCH\"-unknown-openbsd\"$UNAME_RELEASE\"\n\texit ;;\n    *:LibertyBSD:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/^.*BSD\\.//'`\n\techo \"$UNAME_MACHINE_ARCH\"-unknown-libertybsd\"$UNAME_RELEASE\"\n\texit ;;\n    *:MidnightBSD:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-midnightbsd\"$UNAME_RELEASE\"\n\texit ;;\n    *:ekkoBSD:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-ekkobsd\"$UNAME_RELEASE\"\n\texit ;;\n    *:SolidBSD:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-solidbsd\"$UNAME_RELEASE\"\n\texit ;;\n    macppc:MirBSD:*:*)\n\techo powerpc-unknown-mirbsd\"$UNAME_RELEASE\"\n\texit ;;\n    *:MirBSD:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-mirbsd\"$UNAME_RELEASE\"\n\texit ;;\n    *:Sortix:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-sortix\n\texit ;;\n    *:Redox:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-redox\n\texit ;;\n    mips:OSF1:*.*)\n        echo mips-dec-osf1\n        exit ;;\n    alpha:OSF1:*:*)\n\tcase $UNAME_RELEASE in\n\t*4.0)\n\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`\n\t\t;;\n\t*5.*)\n\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $4}'`\n\t\t;;\n\tesac\n\t# According to Compaq, /usr/sbin/psrinfo has been available on\n\t# OSF/1 and Tru64 systems produced since 1995.  I hope that\n\t# covers most systems running today.  This code pipes the CPU\n\t# types through head -n 1, so we only detect the type of CPU 0.\n\tALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \\(.*\\) processor.*$/\\1/p' | head -n 1`\n\tcase \"$ALPHA_CPU_TYPE\" in\n\t    \"EV4 (21064)\")\n\t\tUNAME_MACHINE=alpha ;;\n\t    \"EV4.5 (21064)\")\n\t\tUNAME_MACHINE=alpha ;;\n\t    \"LCA4 (21066/21068)\")\n\t\tUNAME_MACHINE=alpha ;;\n\t    \"EV5 (21164)\")\n\t\tUNAME_MACHINE=alphaev5 ;;\n\t    \"EV5.6 (21164A)\")\n\t\tUNAME_MACHINE=alphaev56 ;;\n\t    \"EV5.6 (21164PC)\")\n\t\tUNAME_MACHINE=alphapca56 ;;\n\t    \"EV5.7 (21164PC)\")\n\t\tUNAME_MACHINE=alphapca57 ;;\n\t    \"EV6 (21264)\")\n\t\tUNAME_MACHINE=alphaev6 ;;\n\t    \"EV6.7 (21264A)\")\n\t\tUNAME_MACHINE=alphaev67 ;;\n\t    \"EV6.8CB (21264C)\")\n\t\tUNAME_MACHINE=alphaev68 ;;\n\t    \"EV6.8AL (21264B)\")\n\t\tUNAME_MACHINE=alphaev68 ;;\n\t    \"EV6.8CX (21264D)\")\n\t\tUNAME_MACHINE=alphaev68 ;;\n\t    \"EV6.9A (21264/EV69A)\")\n\t\tUNAME_MACHINE=alphaev69 ;;\n\t    \"EV7 (21364)\")\n\t\tUNAME_MACHINE=alphaev7 ;;\n\t    \"EV7.9 (21364A)\")\n\t\tUNAME_MACHINE=alphaev79 ;;\n\tesac\n\t# A Pn.n version is a patched version.\n\t# A Vn.n version is a released version.\n\t# A Tn.n version is a released field test version.\n\t# A Xn.n version is an unreleased experimental baselevel.\n\t# 1.2 uses \"1.2\" for uname -r.\n\techo \"$UNAME_MACHINE\"-dec-osf\"`echo \"$UNAME_RELEASE\" | sed -e 's/^[PVTX]//' | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\"\n\t# Reset EXIT trap before exiting to avoid spurious non-zero exit code.\n\texitcode=$?\n\ttrap '' 0\n\texit $exitcode ;;\n    Amiga*:UNIX_System_V:4.0:*)\n\techo m68k-unknown-sysv4\n\texit ;;\n    *:[Aa]miga[Oo][Ss]:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-amigaos\n\texit ;;\n    *:[Mm]orph[Oo][Ss]:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-morphos\n\texit ;;\n    *:OS/390:*:*)\n\techo i370-ibm-openedition\n\texit ;;\n    *:z/VM:*:*)\n\techo s390-ibm-zvmoe\n\texit ;;\n    *:OS400:*:*)\n\techo powerpc-ibm-os400\n\texit ;;\n    arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)\n\techo arm-acorn-riscix\"$UNAME_RELEASE\"\n\texit ;;\n    arm*:riscos:*:*|arm*:RISCOS:*:*)\n\techo arm-unknown-riscos\n\texit ;;\n    SR2?01:HI-UX/MPP:*:* | SR8000:HI-UX/MPP:*:*)\n\techo hppa1.1-hitachi-hiuxmpp\n\texit ;;\n    Pyramid*:OSx*:*:* | MIS*:OSx*:*:* | MIS*:SMP_DC-OSx*:*:*)\n\t# akee@wpdis03.wpafb.af.mil (Earle F. Ake) contributed MIS and NILE.\n\tif test \"`(/bin/universe) 2>/dev/null`\" = att ; then\n\t\techo pyramid-pyramid-sysv3\n\telse\n\t\techo pyramid-pyramid-bsd\n\tfi\n\texit ;;\n    NILE*:*:*:dcosx)\n\techo pyramid-pyramid-svr4\n\texit ;;\n    DRS?6000:unix:4.0:6*)\n\techo sparc-icl-nx6\n\texit ;;\n    DRS?6000:UNIX_SV:4.2*:7* | DRS?6000:isis:4.2*:7*)\n\tcase `/usr/bin/uname -p` in\n\t    sparc) echo sparc-icl-nx7; exit ;;\n\tesac ;;\n    s390x:SunOS:*:*)\n\techo \"$UNAME_MACHINE\"-ibm-solaris2\"`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\"\n\texit ;;\n    sun4H:SunOS:5.*:*)\n\techo sparc-hal-solaris2\"`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//'`\"\n\texit ;;\n    sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)\n\techo sparc-sun-solaris2\"`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\"\n\texit ;;\n    i86pc:AuroraUX:5.*:* | i86xen:AuroraUX:5.*:*)\n\techo i386-pc-auroraux\"$UNAME_RELEASE\"\n\texit ;;\n    i86pc:SunOS:5.*:* | i86xen:SunOS:5.*:*)\n\tUNAME_REL=\"`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\"\n\tcase `isainfo -b` in\n\t    32)\n\t\techo i386-pc-solaris2\"$UNAME_REL\"\n\t\t;;\n\t    64)\n\t\techo x86_64-pc-solaris2\"$UNAME_REL\"\n\t\t;;\n\tesac\n\texit ;;\n    sun4*:SunOS:6*:*)\n\t# According to config.sub, this is the proper way to canonicalize\n\t# SunOS6.  Hard to guess exactly what SunOS6 will be like, but\n\t# it's likely to be more like Solaris than SunOS4.\n\techo sparc-sun-solaris3\"`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//'`\"\n\texit ;;\n    sun4*:SunOS:*:*)\n\tcase \"`/usr/bin/arch -k`\" in\n\t    Series*|S4*)\n\t\tUNAME_RELEASE=`uname -v`\n\t\t;;\n\tesac\n\t# Japanese Language versions have a version number like `4.1.3-JL'.\n\techo sparc-sun-sunos\"`echo \"$UNAME_RELEASE\"|sed -e 's/-/_/'`\"\n\texit ;;\n    sun3*:SunOS:*:*)\n\techo m68k-sun-sunos\"$UNAME_RELEASE\"\n\texit ;;\n    sun*:*:4.2BSD:*)\n\tUNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`\n\ttest \"x$UNAME_RELEASE\" = x && UNAME_RELEASE=3\n\tcase \"`/bin/arch`\" in\n\t    sun3)\n\t\techo m68k-sun-sunos\"$UNAME_RELEASE\"\n\t\t;;\n\t    sun4)\n\t\techo sparc-sun-sunos\"$UNAME_RELEASE\"\n\t\t;;\n\tesac\n\texit ;;\n    aushp:SunOS:*:*)\n\techo sparc-auspex-sunos\"$UNAME_RELEASE\"\n\texit ;;\n    # The situation for MiNT is a little confusing.  The machine name\n    # can be virtually everything (everything which is not\n    # \"atarist\" or \"atariste\" at least should have a processor\n    # > m68000).  The system name ranges from \"MiNT\" over \"FreeMiNT\"\n    # to the lowercase version \"mint\" (or \"freemint\").  Finally\n    # the system name \"TOS\" denotes a system which is actually not\n    # MiNT.  But MiNT is downward compatible to TOS, so this should\n    # be no problem.\n    atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)\n\techo m68k-atari-mint\"$UNAME_RELEASE\"\n\texit ;;\n    atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)\n\techo m68k-atari-mint\"$UNAME_RELEASE\"\n\texit ;;\n    *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)\n\techo m68k-atari-mint\"$UNAME_RELEASE\"\n\texit ;;\n    milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)\n\techo m68k-milan-mint\"$UNAME_RELEASE\"\n\texit ;;\n    hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)\n\techo m68k-hades-mint\"$UNAME_RELEASE\"\n\texit ;;\n    *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)\n\techo m68k-unknown-mint\"$UNAME_RELEASE\"\n\texit ;;\n    m68k:machten:*:*)\n\techo m68k-apple-machten\"$UNAME_RELEASE\"\n\texit ;;\n    powerpc:machten:*:*)\n\techo powerpc-apple-machten\"$UNAME_RELEASE\"\n\texit ;;\n    RISC*:Mach:*:*)\n\techo mips-dec-mach_bsd4.3\n\texit ;;\n    RISC*:ULTRIX:*:*)\n\techo mips-dec-ultrix\"$UNAME_RELEASE\"\n\texit ;;\n    VAX*:ULTRIX*:*:*)\n\techo vax-dec-ultrix\"$UNAME_RELEASE\"\n\texit ;;\n    2020:CLIX:*:* | 2430:CLIX:*:*)\n\techo clipper-intergraph-clix\"$UNAME_RELEASE\"\n\texit ;;\n    mips:*:*:UMIPS | mips:*:*:RISCos)\n\tset_cc_for_build\n\tsed 's/^\t//' << EOF > \"$dummy.c\"\n#ifdef __cplusplus\n#include <stdio.h>  /* for printf() prototype */\n\tint main (int argc, char *argv[]) {\n#else\n\tint main (argc, argv) int argc; char *argv[]; {\n#endif\n\t#if defined (host_mips) && defined (MIPSEB)\n\t#if defined (SYSTYPE_SYSV)\n\t  printf (\"mips-mips-riscos%ssysv\\\\n\", argv[1]); exit (0);\n\t#endif\n\t#if defined (SYSTYPE_SVR4)\n\t  printf (\"mips-mips-riscos%ssvr4\\\\n\", argv[1]); exit (0);\n\t#endif\n\t#if defined (SYSTYPE_BSD43) || defined(SYSTYPE_BSD)\n\t  printf (\"mips-mips-riscos%sbsd\\\\n\", argv[1]); exit (0);\n\t#endif\n\t#endif\n\t  exit (-1);\n\t}\nEOF\n\t$CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" &&\n\t  dummyarg=`echo \"$UNAME_RELEASE\" | sed -n 's/\\([0-9]*\\).*/\\1/p'` &&\n\t  SYSTEM_NAME=`\"$dummy\" \"$dummyarg\"` &&\n\t    { echo \"$SYSTEM_NAME\"; exit; }\n\techo mips-mips-riscos\"$UNAME_RELEASE\"\n\texit ;;\n    Motorola:PowerMAX_OS:*:*)\n\techo powerpc-motorola-powermax\n\texit ;;\n    Motorola:*:4.3:PL8-*)\n\techo powerpc-harris-powermax\n\texit ;;\n    Night_Hawk:*:*:PowerMAX_OS | Synergy:PowerMAX_OS:*:*)\n\techo powerpc-harris-powermax\n\texit ;;\n    Night_Hawk:Power_UNIX:*:*)\n\techo powerpc-harris-powerunix\n\texit ;;\n    m88k:CX/UX:7*:*)\n\techo m88k-harris-cxux7\n\texit ;;\n    m88k:*:4*:R4*)\n\techo m88k-motorola-sysv4\n\texit ;;\n    m88k:*:3*:R3*)\n\techo m88k-motorola-sysv3\n\texit ;;\n    AViiON:dgux:*:*)\n\t# DG/UX returns AViiON for all architectures\n\tUNAME_PROCESSOR=`/usr/bin/uname -p`\n\tif [ \"$UNAME_PROCESSOR\" = mc88100 ] || [ \"$UNAME_PROCESSOR\" = mc88110 ]\n\tthen\n\t    if [ \"$TARGET_BINARY_INTERFACE\"x = m88kdguxelfx ] || \\\n\t       [ \"$TARGET_BINARY_INTERFACE\"x = x ]\n\t    then\n\t\techo m88k-dg-dgux\"$UNAME_RELEASE\"\n\t    else\n\t\techo m88k-dg-dguxbcs\"$UNAME_RELEASE\"\n\t    fi\n\telse\n\t    echo i586-dg-dgux\"$UNAME_RELEASE\"\n\tfi\n\texit ;;\n    M88*:DolphinOS:*:*)\t# DolphinOS (SVR3)\n\techo m88k-dolphin-sysv3\n\texit ;;\n    M88*:*:R3*:*)\n\t# Delta 88k system running SVR3\n\techo m88k-motorola-sysv3\n\texit ;;\n    XD88*:*:*:*) # Tektronix XD88 system running UTekV (SVR3)\n\techo m88k-tektronix-sysv3\n\texit ;;\n    Tek43[0-9][0-9]:UTek:*:*) # Tektronix 4300 system running UTek (BSD)\n\techo m68k-tektronix-bsd\n\texit ;;\n    *:IRIX*:*:*)\n\techo mips-sgi-irix\"`echo \"$UNAME_RELEASE\"|sed -e 's/-/_/g'`\"\n\texit ;;\n    ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.\n\techo romp-ibm-aix     # uname -m gives an 8 hex-code CPU id\n\texit ;;               # Note that: echo \"'`uname -s`'\" gives 'AIX '\n    i*86:AIX:*:*)\n\techo i386-ibm-aix\n\texit ;;\n    ia64:AIX:*:*)\n\tif [ -x /usr/bin/oslevel ] ; then\n\t\tIBM_REV=`/usr/bin/oslevel`\n\telse\n\t\tIBM_REV=\"$UNAME_VERSION.$UNAME_RELEASE\"\n\tfi\n\techo \"$UNAME_MACHINE\"-ibm-aix\"$IBM_REV\"\n\texit ;;\n    *:AIX:2:3)\n\tif grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then\n\t\tset_cc_for_build\n\t\tsed 's/^\t\t//' << EOF > \"$dummy.c\"\n\t\t#include <sys/systemcfg.h>\n\n\t\tmain()\n\t\t\t{\n\t\t\tif (!__power_pc())\n\t\t\t\texit(1);\n\t\t\tputs(\"powerpc-ibm-aix3.2.5\");\n\t\t\texit(0);\n\t\t\t}\nEOF\n\t\tif $CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" && SYSTEM_NAME=`\"$dummy\"`\n\t\tthen\n\t\t\techo \"$SYSTEM_NAME\"\n\t\telse\n\t\t\techo rs6000-ibm-aix3.2.5\n\t\tfi\n\telif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then\n\t\techo rs6000-ibm-aix3.2.4\n\telse\n\t\techo rs6000-ibm-aix3.2\n\tfi\n\texit ;;\n    *:AIX:*:[4567])\n\tIBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`\n\tif /usr/sbin/lsattr -El \"$IBM_CPU_ID\" | grep ' POWER' >/dev/null 2>&1; then\n\t\tIBM_ARCH=rs6000\n\telse\n\t\tIBM_ARCH=powerpc\n\tfi\n\tif [ -x /usr/bin/lslpp ] ; then\n\t\tIBM_REV=`/usr/bin/lslpp -Lqc bos.rte.libc |\n\t\t\t   awk -F: '{ print $3 }' | sed s/[0-9]*$/0/`\n\telse\n\t\tIBM_REV=\"$UNAME_VERSION.$UNAME_RELEASE\"\n\tfi\n\techo \"$IBM_ARCH\"-ibm-aix\"$IBM_REV\"\n\texit ;;\n    *:AIX:*:*)\n\techo rs6000-ibm-aix\n\texit ;;\n    ibmrt:4.4BSD:*|romp-ibm:4.4BSD:*)\n\techo romp-ibm-bsd4.4\n\texit ;;\n    ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC BSD and\n\techo romp-ibm-bsd\"$UNAME_RELEASE\"   # 4.3 with uname added to\n\texit ;;                             # report: romp-ibm BSD 4.3\n    *:BOSX:*:*)\n\techo rs6000-bull-bosx\n\texit ;;\n    DPX/2?00:B.O.S.:*:*)\n\techo m68k-bull-sysv3\n\texit ;;\n    9000/[34]??:4.3bsd:1.*:*)\n\techo m68k-hp-bsd\n\texit ;;\n    hp300:4.4BSD:*:* | 9000/[34]??:4.3bsd:2.*:*)\n\techo m68k-hp-bsd4.4\n\texit ;;\n    9000/[34678]??:HP-UX:*:*)\n\tHPUX_REV=`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*.[0B]*//'`\n\tcase \"$UNAME_MACHINE\" in\n\t    9000/31?)            HP_ARCH=m68000 ;;\n\t    9000/[34]??)         HP_ARCH=m68k ;;\n\t    9000/[678][0-9][0-9])\n\t\tif [ -x /usr/bin/getconf ]; then\n\t\t    sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`\n\t\t    sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`\n\t\t    case \"$sc_cpu_version\" in\n\t\t      523) HP_ARCH=hppa1.0 ;; # CPU_PA_RISC1_0\n\t\t      528) HP_ARCH=hppa1.1 ;; # CPU_PA_RISC1_1\n\t\t      532)                      # CPU_PA_RISC2_0\n\t\t\tcase \"$sc_kernel_bits\" in\n\t\t\t  32) HP_ARCH=hppa2.0n ;;\n\t\t\t  64) HP_ARCH=hppa2.0w ;;\n\t\t\t  '') HP_ARCH=hppa2.0 ;;   # HP-UX 10.20\n\t\t\tesac ;;\n\t\t    esac\n\t\tfi\n\t\tif [ \"$HP_ARCH\" = \"\" ]; then\n\t\t    set_cc_for_build\n\t\t    sed 's/^\t\t//' << EOF > \"$dummy.c\"\n\n\t\t#define _HPUX_SOURCE\n\t\t#include <stdlib.h>\n\t\t#include <unistd.h>\n\n\t\tint main ()\n\t\t{\n\t\t#if defined(_SC_KERNEL_BITS)\n\t\t    long bits = sysconf(_SC_KERNEL_BITS);\n\t\t#endif\n\t\t    long cpu  = sysconf (_SC_CPU_VERSION);\n\n\t\t    switch (cpu)\n\t\t\t{\n\t\t\tcase CPU_PA_RISC1_0: puts (\"hppa1.0\"); break;\n\t\t\tcase CPU_PA_RISC1_1: puts (\"hppa1.1\"); break;\n\t\t\tcase CPU_PA_RISC2_0:\n\t\t#if defined(_SC_KERNEL_BITS)\n\t\t\t    switch (bits)\n\t\t\t\t{\n\t\t\t\tcase 64: puts (\"hppa2.0w\"); break;\n\t\t\t\tcase 32: puts (\"hppa2.0n\"); break;\n\t\t\t\tdefault: puts (\"hppa2.0\"); break;\n\t\t\t\t} break;\n\t\t#else  /* !defined(_SC_KERNEL_BITS) */\n\t\t\t    puts (\"hppa2.0\"); break;\n\t\t#endif\n\t\t\tdefault: puts (\"hppa1.0\"); break;\n\t\t\t}\n\t\t    exit (0);\n\t\t}\nEOF\n\t\t    (CCOPTS=\"\" $CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" 2>/dev/null) && HP_ARCH=`\"$dummy\"`\n\t\t    test -z \"$HP_ARCH\" && HP_ARCH=hppa\n\t\tfi ;;\n\tesac\n\tif [ \"$HP_ARCH\" = hppa2.0w ]\n\tthen\n\t    set_cc_for_build\n\n\t    # hppa2.0w-hp-hpux* has a 64-bit kernel and a compiler generating\n\t    # 32-bit code.  hppa64-hp-hpux* has the same kernel and a compiler\n\t    # generating 64-bit code.  GNU and HP use different nomenclature:\n\t    #\n\t    # $ CC_FOR_BUILD=cc ./config.guess\n\t    # => hppa2.0w-hp-hpux11.23\n\t    # $ CC_FOR_BUILD=\"cc +DA2.0w\" ./config.guess\n\t    # => hppa64-hp-hpux11.23\n\n\t    if echo __LP64__ | (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) |\n\t\tgrep -q __LP64__\n\t    then\n\t\tHP_ARCH=hppa2.0w\n\t    else\n\t\tHP_ARCH=hppa64\n\t    fi\n\tfi\n\techo \"$HP_ARCH\"-hp-hpux\"$HPUX_REV\"\n\texit ;;\n    ia64:HP-UX:*:*)\n\tHPUX_REV=`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*.[0B]*//'`\n\techo ia64-hp-hpux\"$HPUX_REV\"\n\texit ;;\n    3050*:HI-UX:*:*)\n\tset_cc_for_build\n\tsed 's/^\t//' << EOF > \"$dummy.c\"\n\t#include <unistd.h>\n\tint\n\tmain ()\n\t{\n\t  long cpu = sysconf (_SC_CPU_VERSION);\n\t  /* The order matters, because CPU_IS_HP_MC68K erroneously returns\n\t     true for CPU_PA_RISC1_0.  CPU_IS_PA_RISC returns correct\n\t     results, however.  */\n\t  if (CPU_IS_PA_RISC (cpu))\n\t    {\n\t      switch (cpu)\n\t\t{\n\t\t  case CPU_PA_RISC1_0: puts (\"hppa1.0-hitachi-hiuxwe2\"); break;\n\t\t  case CPU_PA_RISC1_1: puts (\"hppa1.1-hitachi-hiuxwe2\"); break;\n\t\t  case CPU_PA_RISC2_0: puts (\"hppa2.0-hitachi-hiuxwe2\"); break;\n\t\t  default: puts (\"hppa-hitachi-hiuxwe2\"); break;\n\t\t}\n\t    }\n\t  else if (CPU_IS_HP_MC68K (cpu))\n\t    puts (\"m68k-hitachi-hiuxwe2\");\n\t  else puts (\"unknown-hitachi-hiuxwe2\");\n\t  exit (0);\n\t}\nEOF\n\t$CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" && SYSTEM_NAME=`\"$dummy\"` &&\n\t\t{ echo \"$SYSTEM_NAME\"; exit; }\n\techo unknown-hitachi-hiuxwe2\n\texit ;;\n    9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:*)\n\techo hppa1.1-hp-bsd\n\texit ;;\n    9000/8??:4.3bsd:*:*)\n\techo hppa1.0-hp-bsd\n\texit ;;\n    *9??*:MPE/iX:*:* | *3000*:MPE/iX:*:*)\n\techo hppa1.0-hp-mpeix\n\texit ;;\n    hp7??:OSF1:*:* | hp8?[79]:OSF1:*:*)\n\techo hppa1.1-hp-osf\n\texit ;;\n    hp8??:OSF1:*:*)\n\techo hppa1.0-hp-osf\n\texit ;;\n    i*86:OSF1:*:*)\n\tif [ -x /usr/sbin/sysversion ] ; then\n\t    echo \"$UNAME_MACHINE\"-unknown-osf1mk\n\telse\n\t    echo \"$UNAME_MACHINE\"-unknown-osf1\n\tfi\n\texit ;;\n    parisc*:Lites*:*:*)\n\techo hppa1.1-hp-lites\n\texit ;;\n    C1*:ConvexOS:*:* | convex:ConvexOS:C1*:*)\n\techo c1-convex-bsd\n\texit ;;\n    C2*:ConvexOS:*:* | convex:ConvexOS:C2*:*)\n\tif getsysinfo -f scalar_acc\n\tthen echo c32-convex-bsd\n\telse echo c2-convex-bsd\n\tfi\n\texit ;;\n    C34*:ConvexOS:*:* | convex:ConvexOS:C34*:*)\n\techo c34-convex-bsd\n\texit ;;\n    C38*:ConvexOS:*:* | convex:ConvexOS:C38*:*)\n\techo c38-convex-bsd\n\texit ;;\n    C4*:ConvexOS:*:* | convex:ConvexOS:C4*:*)\n\techo c4-convex-bsd\n\texit ;;\n    CRAY*Y-MP:*:*:*)\n\techo ymp-cray-unicos\"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    CRAY*[A-Z]90:*:*:*)\n\techo \"$UNAME_MACHINE\"-cray-unicos\"$UNAME_RELEASE\" \\\n\t| sed -e 's/CRAY.*\\([A-Z]90\\)/\\1/' \\\n\t      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/ \\\n\t      -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    CRAY*TS:*:*:*)\n\techo t90-cray-unicos\"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    CRAY*T3E:*:*:*)\n\techo alphaev5-cray-unicosmk\"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    CRAY*SV1:*:*:*)\n\techo sv1-cray-unicos\"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    *:UNICOS/mp:*:*)\n\techo craynv-cray-unicosmp\"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)\n\tFUJITSU_PROC=`uname -m | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\n\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n\tFUJITSU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/ /_/'`\n\techo \"${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n\texit ;;\n    5000:UNIX_System_V:4.*:*)\n\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n\tFUJITSU_REL=`echo \"$UNAME_RELEASE\" | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/ /_/'`\n\techo \"sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n\texit ;;\n    i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\\ Embedded/OS:*:*)\n\techo \"$UNAME_MACHINE\"-pc-bsdi\"$UNAME_RELEASE\"\n\texit ;;\n    sparc*:BSD/OS:*:*)\n\techo sparc-unknown-bsdi\"$UNAME_RELEASE\"\n\texit ;;\n    *:BSD/OS:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-bsdi\"$UNAME_RELEASE\"\n\texit ;;\n    arm:FreeBSD:*:*)\n\tUNAME_PROCESSOR=`uname -p`\n\tset_cc_for_build\n\tif echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t    | grep -q __ARM_PCS_VFP\n\tthen\n\t    echo \"${UNAME_PROCESSOR}\"-unknown-freebsd\"`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\"-gnueabi\n\telse\n\t    echo \"${UNAME_PROCESSOR}\"-unknown-freebsd\"`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\"-gnueabihf\n\tfi\n\texit ;;\n    *:FreeBSD:*:*)\n\tUNAME_PROCESSOR=`/usr/bin/uname -p`\n\tcase \"$UNAME_PROCESSOR\" in\n\t    amd64)\n\t\tUNAME_PROCESSOR=x86_64 ;;\n\t    i386)\n\t\tUNAME_PROCESSOR=i586 ;;\n\tesac\n\techo \"$UNAME_PROCESSOR\"-unknown-freebsd\"`echo \"$UNAME_RELEASE\"|sed -e 's/[-(].*//'`\"\n\texit ;;\n    i*:CYGWIN*:*)\n\techo \"$UNAME_MACHINE\"-pc-cygwin\n\texit ;;\n    *:MINGW64*:*)\n\techo \"$UNAME_MACHINE\"-pc-mingw64\n\texit ;;\n    *:MINGW*:*)\n\techo \"$UNAME_MACHINE\"-pc-mingw32\n\texit ;;\n    *:MSYS*:*)\n\techo \"$UNAME_MACHINE\"-pc-msys\n\texit ;;\n    i*:PW*:*)\n\techo \"$UNAME_MACHINE\"-pc-pw32\n\texit ;;\n    *:Interix*:*)\n\tcase \"$UNAME_MACHINE\" in\n\t    x86)\n\t\techo i586-pc-interix\"$UNAME_RELEASE\"\n\t\texit ;;\n\t    authenticamd | genuineintel | EM64T)\n\t\techo x86_64-unknown-interix\"$UNAME_RELEASE\"\n\t\texit ;;\n\t    IA64)\n\t\techo ia64-unknown-interix\"$UNAME_RELEASE\"\n\t\texit ;;\n\tesac ;;\n    i*:UWIN*:*)\n\techo \"$UNAME_MACHINE\"-pc-uwin\n\texit ;;\n    amd64:CYGWIN*:*:* | x86_64:CYGWIN*:*:*)\n\techo x86_64-pc-cygwin\n\texit ;;\n    prep*:SunOS:5.*:*)\n\techo powerpcle-unknown-solaris2\"`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//'`\"\n\texit ;;\n    *:GNU:*:*)\n\t# the GNU system\n\techo \"`echo \"$UNAME_MACHINE\"|sed -e 's,[-/].*$,,'`-unknown-$LIBC`echo \"$UNAME_RELEASE\"|sed -e 's,/.*$,,'`\"\n\texit ;;\n    *:GNU/*:*:*)\n\t# other systems with GNU libc and userland\n\techo \"$UNAME_MACHINE-unknown-`echo \"$UNAME_SYSTEM\" | sed 's,^[^/]*/,,' | tr \"[:upper:]\" \"[:lower:]\"``echo \"$UNAME_RELEASE\"|sed -e 's/[-(].*//'`-$LIBC\"\n\texit ;;\n    *:Minix:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-minix\n\texit ;;\n    aarch64:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    aarch64_be:Linux:*:*)\n\tUNAME_MACHINE=aarch64_be\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    alpha:Linux:*:*)\n\tcase `sed -n '/^cpu model/s/^.*: \\(.*\\)/\\1/p' < /proc/cpuinfo` in\n\t  EV5)   UNAME_MACHINE=alphaev5 ;;\n\t  EV56)  UNAME_MACHINE=alphaev56 ;;\n\t  PCA56) UNAME_MACHINE=alphapca56 ;;\n\t  PCA57) UNAME_MACHINE=alphapca56 ;;\n\t  EV6)   UNAME_MACHINE=alphaev6 ;;\n\t  EV67)  UNAME_MACHINE=alphaev67 ;;\n\t  EV68*) UNAME_MACHINE=alphaev68 ;;\n\tesac\n\tobjdump --private-headers /bin/sh | grep -q ld.so.1\n\tif test \"$?\" = 0 ; then LIBC=gnulibc1 ; fi\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    arc:Linux:*:* | arceb:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    arm*:Linux:*:*)\n\tset_cc_for_build\n\tif echo __ARM_EABI__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t    | grep -q __ARM_EABI__\n\tthen\n\t    echo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\telse\n\t    if echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t\t| grep -q __ARM_PCS_VFP\n\t    then\n\t\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"eabi\n\t    else\n\t\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"eabihf\n\t    fi\n\tfi\n\texit ;;\n    avr32*:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    cris:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-axis-linux-\"$LIBC\"\n\texit ;;\n    crisv32:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-axis-linux-\"$LIBC\"\n\texit ;;\n    e2k:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    frv:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    hexagon:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    i*86:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-pc-linux-\"$LIBC\"\n\texit ;;\n    ia64:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    k1om:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    m32r*:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    m68*:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    mips:Linux:*:* | mips64:Linux:*:*)\n\tset_cc_for_build\n\tsed 's/^\t//' << EOF > \"$dummy.c\"\n\t#undef CPU\n\t#undef ${UNAME_MACHINE}\n\t#undef ${UNAME_MACHINE}el\n\t#if defined(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL) || defined(MIPSEL)\n\tCPU=${UNAME_MACHINE}el\n\t#else\n\t#if defined(__MIPSEB__) || defined(__MIPSEB) || defined(_MIPSEB) || defined(MIPSEB)\n\tCPU=${UNAME_MACHINE}\n\t#else\n\tCPU=\n\t#endif\n\t#endif\nEOF\n\teval \"`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^CPU'`\"\n\ttest \"x$CPU\" != x && { echo \"$CPU-unknown-linux-$LIBC\"; exit; }\n\t;;\n    mips64el:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    openrisc*:Linux:*:*)\n\techo or1k-unknown-linux-\"$LIBC\"\n\texit ;;\n    or32:Linux:*:* | or1k*:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    padre:Linux:*:*)\n\techo sparc-unknown-linux-\"$LIBC\"\n\texit ;;\n    parisc64:Linux:*:* | hppa64:Linux:*:*)\n\techo hppa64-unknown-linux-\"$LIBC\"\n\texit ;;\n    parisc:Linux:*:* | hppa:Linux:*:*)\n\t# Look for CPU level\n\tcase `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in\n\t  PA7*) echo hppa1.1-unknown-linux-\"$LIBC\" ;;\n\t  PA8*) echo hppa2.0-unknown-linux-\"$LIBC\" ;;\n\t  *)    echo hppa-unknown-linux-\"$LIBC\" ;;\n\tesac\n\texit ;;\n    ppc64:Linux:*:*)\n\techo powerpc64-unknown-linux-\"$LIBC\"\n\texit ;;\n    ppc:Linux:*:*)\n\techo powerpc-unknown-linux-\"$LIBC\"\n\texit ;;\n    ppc64le:Linux:*:*)\n\techo powerpc64le-unknown-linux-\"$LIBC\"\n\texit ;;\n    ppcle:Linux:*:*)\n\techo powerpcle-unknown-linux-\"$LIBC\"\n\texit ;;\n    riscv32:Linux:*:* | riscv64:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    s390:Linux:*:* | s390x:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-ibm-linux-\"$LIBC\"\n\texit ;;\n    sh64*:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    sh*:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    sparc:Linux:*:* | sparc64:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    tile*:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    vax:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-dec-linux-\"$LIBC\"\n\texit ;;\n    x86_64:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-pc-linux-\"$LIBC\"\n\texit ;;\n    xtensa*:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    i*86:DYNIX/ptx:4*:*)\n\t# ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.\n\t# earlier versions are messed up and put the nodename in both\n\t# sysname and nodename.\n\techo i386-sequent-sysv4\n\texit ;;\n    i*86:UNIX_SV:4.2MP:2.*)\n\t# Unixware is an offshoot of SVR4, but it has its own version\n\t# number series starting with 2...\n\t# I am not positive that other SVR4 systems won't match this,\n\t# I just have to hope.  -- rms.\n\t# Use sysv4.2uw... so that sysv4* matches it.\n\techo \"$UNAME_MACHINE\"-pc-sysv4.2uw\"$UNAME_VERSION\"\n\texit ;;\n    i*86:OS/2:*:*)\n\t# If we were able to find `uname', then EMX Unix compatibility\n\t# is probably installed.\n\techo \"$UNAME_MACHINE\"-pc-os2-emx\n\texit ;;\n    i*86:XTS-300:*:STOP)\n\techo \"$UNAME_MACHINE\"-unknown-stop\n\texit ;;\n    i*86:atheos:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-atheos\n\texit ;;\n    i*86:syllable:*:*)\n\techo \"$UNAME_MACHINE\"-pc-syllable\n\texit ;;\n    i*86:LynxOS:2.*:* | i*86:LynxOS:3.[01]*:* | i*86:LynxOS:4.[02]*:*)\n\techo i386-unknown-lynxos\"$UNAME_RELEASE\"\n\texit ;;\n    i*86:*DOS:*:*)\n\techo \"$UNAME_MACHINE\"-pc-msdosdjgpp\n\texit ;;\n    i*86:*:4.*:*)\n\tUNAME_REL=`echo \"$UNAME_RELEASE\" | sed 's/\\/MP$//'`\n\tif grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then\n\t\techo \"$UNAME_MACHINE\"-univel-sysv\"$UNAME_REL\"\n\telse\n\t\techo \"$UNAME_MACHINE\"-pc-sysv\"$UNAME_REL\"\n\tfi\n\texit ;;\n    i*86:*:5:[678]*)\n\t# UnixWare 7.x, OpenUNIX and OpenServer 6.\n\tcase `/bin/uname -X | grep \"^Machine\"` in\n\t    *486*)\t     UNAME_MACHINE=i486 ;;\n\t    *Pentium)\t     UNAME_MACHINE=i586 ;;\n\t    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;\n\tesac\n\techo \"$UNAME_MACHINE-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}{$UNAME_VERSION}\"\n\texit ;;\n    i*86:*:3.2:*)\n\tif test -f /usr/options/cb.name; then\n\t\tUNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`\n\t\techo \"$UNAME_MACHINE\"-pc-isc\"$UNAME_REL\"\n\telif /bin/uname -X 2>/dev/null >/dev/null ; then\n\t\tUNAME_REL=`(/bin/uname -X|grep Release|sed -e 's/.*= //')`\n\t\t(/bin/uname -X|grep i80486 >/dev/null) && UNAME_MACHINE=i486\n\t\t(/bin/uname -X|grep '^Machine.*Pentium' >/dev/null) \\\n\t\t\t&& UNAME_MACHINE=i586\n\t\t(/bin/uname -X|grep '^Machine.*Pent *II' >/dev/null) \\\n\t\t\t&& UNAME_MACHINE=i686\n\t\t(/bin/uname -X|grep '^Machine.*Pentium Pro' >/dev/null) \\\n\t\t\t&& UNAME_MACHINE=i686\n\t\techo \"$UNAME_MACHINE\"-pc-sco\"$UNAME_REL\"\n\telse\n\t\techo \"$UNAME_MACHINE\"-pc-sysv32\n\tfi\n\texit ;;\n    pc:*:*:*)\n\t# Left here for compatibility:\n\t# uname -m prints for DJGPP always 'pc', but it prints nothing about\n\t# the processor, so we play safe by assuming i586.\n\t# Note: whatever this is, it MUST be the same as what config.sub\n\t# prints for the \"djgpp\" host, or else GDB configure will decide that\n\t# this is a cross-build.\n\techo i586-pc-msdosdjgpp\n\texit ;;\n    Intel:Mach:3*:*)\n\techo i386-pc-mach3\n\texit ;;\n    paragon:*:*:*)\n\techo i860-intel-osf1\n\texit ;;\n    i860:*:4.*:*) # i860-SVR4\n\tif grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then\n\t  echo i860-stardent-sysv\"$UNAME_RELEASE\" # Stardent Vistra i860-SVR4\n\telse # Add other i860-SVR4 vendors below as they are discovered.\n\t  echo i860-unknown-sysv\"$UNAME_RELEASE\"  # Unknown i860-SVR4\n\tfi\n\texit ;;\n    mini*:CTIX:SYS*5:*)\n\t# \"miniframe\"\n\techo m68010-convergent-sysv\n\texit ;;\n    mc68k:UNIX:SYSTEM5:3.51m)\n\techo m68k-convergent-sysv\n\texit ;;\n    M680?0:D-NIX:5.3:*)\n\techo m68k-diab-dnix\n\texit ;;\n    M68*:*:R3V[5678]*:*)\n\ttest -r /sysV68 && { echo 'm68k-motorola-sysv'; exit; } ;;\n    3[345]??:*:4.0:3.0 | 3[34]??A:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 3[34]??/*:*:4.0:3.0 | 4400:*:4.0:3.0 | 4850:*:4.0:3.0 | SKA40:*:4.0:3.0 | SDS2:*:4.0:3.0 | SHG2:*:4.0:3.0 | S7501*:*:4.0:3.0)\n\tOS_REL=''\n\ttest -r /etc/.relid \\\n\t&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n\t  && { echo i486-ncr-sysv4.3\"$OS_REL\"; exit; }\n\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n\t  && { echo i586-ncr-sysv4.3\"$OS_REL\"; exit; } ;;\n    3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)\n\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n\t  && { echo i486-ncr-sysv4; exit; } ;;\n    NCR*:*:4.2:* | MPRAS*:*:4.2:*)\n\tOS_REL='.3'\n\ttest -r /etc/.relid \\\n\t    && OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n\t    && { echo i486-ncr-sysv4.3\"$OS_REL\"; exit; }\n\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n\t    && { echo i586-ncr-sysv4.3\"$OS_REL\"; exit; }\n\t/bin/uname -p 2>/dev/null | /bin/grep pteron >/dev/null \\\n\t    && { echo i586-ncr-sysv4.3\"$OS_REL\"; exit; } ;;\n    m68*:LynxOS:2.*:* | m68*:LynxOS:3.0*:*)\n\techo m68k-unknown-lynxos\"$UNAME_RELEASE\"\n\texit ;;\n    mc68030:UNIX_System_V:4.*:*)\n\techo m68k-atari-sysv4\n\texit ;;\n    TSUNAMI:LynxOS:2.*:*)\n\techo sparc-unknown-lynxos\"$UNAME_RELEASE\"\n\texit ;;\n    rs6000:LynxOS:2.*:*)\n\techo rs6000-unknown-lynxos\"$UNAME_RELEASE\"\n\texit ;;\n    PowerPC:LynxOS:2.*:* | PowerPC:LynxOS:3.[01]*:* | PowerPC:LynxOS:4.[02]*:*)\n\techo powerpc-unknown-lynxos\"$UNAME_RELEASE\"\n\texit ;;\n    SM[BE]S:UNIX_SV:*:*)\n\techo mips-dde-sysv\"$UNAME_RELEASE\"\n\texit ;;\n    RM*:ReliantUNIX-*:*:*)\n\techo mips-sni-sysv4\n\texit ;;\n    RM*:SINIX-*:*:*)\n\techo mips-sni-sysv4\n\texit ;;\n    *:SINIX-*:*:*)\n\tif uname -p 2>/dev/null >/dev/null ; then\n\t\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n\t\techo \"$UNAME_MACHINE\"-sni-sysv4\n\telse\n\t\techo ns32k-sni-sysv\n\tfi\n\texit ;;\n    PENTIUM:*:4.0*:*)\t# Unisys `ClearPath HMP IX 4000' SVR4/MP effort\n\t\t\t# says <Richard.M.Bartel@ccMail.Census.GOV>\n\techo i586-unisys-sysv4\n\texit ;;\n    *:UNIX_System_V:4*:FTX*)\n\t# From Gerald Hewes <hewes@openmarket.com>.\n\t# How about differentiating between stratus architectures? -djm\n\techo hppa1.1-stratus-sysv4\n\texit ;;\n    *:*:*:FTX*)\n\t# From seanf@swdc.stratus.com.\n\techo i860-stratus-sysv4\n\texit ;;\n    i*86:VOS:*:*)\n\t# From Paul.Green@stratus.com.\n\techo \"$UNAME_MACHINE\"-stratus-vos\n\texit ;;\n    *:VOS:*:*)\n\t# From Paul.Green@stratus.com.\n\techo hppa1.1-stratus-vos\n\texit ;;\n    mc68*:A/UX:*:*)\n\techo m68k-apple-aux\"$UNAME_RELEASE\"\n\texit ;;\n    news*:NEWS-OS:6*:*)\n\techo mips-sony-newsos6\n\texit ;;\n    R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R*000:UNIX_SV:*:*)\n\tif [ -d /usr/nec ]; then\n\t\techo mips-nec-sysv\"$UNAME_RELEASE\"\n\telse\n\t\techo mips-unknown-sysv\"$UNAME_RELEASE\"\n\tfi\n\texit ;;\n    BeBox:BeOS:*:*)\t# BeOS running on hardware made by Be, PPC only.\n\techo powerpc-be-beos\n\texit ;;\n    BeMac:BeOS:*:*)\t# BeOS running on Mac or Mac clone, PPC only.\n\techo powerpc-apple-beos\n\texit ;;\n    BePC:BeOS:*:*)\t# BeOS running on Intel PC compatible.\n\techo i586-pc-beos\n\texit ;;\n    BePC:Haiku:*:*)\t# Haiku running on Intel PC compatible.\n\techo i586-pc-haiku\n\texit ;;\n    x86_64:Haiku:*:*)\n\techo x86_64-unknown-haiku\n\texit ;;\n    SX-4:SUPER-UX:*:*)\n\techo sx4-nec-superux\"$UNAME_RELEASE\"\n\texit ;;\n    SX-5:SUPER-UX:*:*)\n\techo sx5-nec-superux\"$UNAME_RELEASE\"\n\texit ;;\n    SX-6:SUPER-UX:*:*)\n\techo sx6-nec-superux\"$UNAME_RELEASE\"\n\texit ;;\n    SX-7:SUPER-UX:*:*)\n\techo sx7-nec-superux\"$UNAME_RELEASE\"\n\texit ;;\n    SX-8:SUPER-UX:*:*)\n\techo sx8-nec-superux\"$UNAME_RELEASE\"\n\texit ;;\n    SX-8R:SUPER-UX:*:*)\n\techo sx8r-nec-superux\"$UNAME_RELEASE\"\n\texit ;;\n    SX-ACE:SUPER-UX:*:*)\n\techo sxace-nec-superux\"$UNAME_RELEASE\"\n\texit ;;\n    Power*:Rhapsody:*:*)\n\techo powerpc-apple-rhapsody\"$UNAME_RELEASE\"\n\texit ;;\n    *:Rhapsody:*:*)\n\techo \"$UNAME_MACHINE\"-apple-rhapsody\"$UNAME_RELEASE\"\n\texit ;;\n    *:Darwin:*:*)\n\tUNAME_PROCESSOR=`uname -p` || UNAME_PROCESSOR=unknown\n\tset_cc_for_build\n\tif test \"$UNAME_PROCESSOR\" = unknown ; then\n\t    UNAME_PROCESSOR=powerpc\n\tfi\n\tif test \"`echo \"$UNAME_RELEASE\" | sed -e 's/\\..*//'`\" -le 10 ; then\n\t    if [ \"$CC_FOR_BUILD\" != no_compiler_found ]; then\n\t\tif (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \\\n\t\t       (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n\t\t       grep IS_64BIT_ARCH >/dev/null\n\t\tthen\n\t\t    case $UNAME_PROCESSOR in\n\t\t\ti386) UNAME_PROCESSOR=x86_64 ;;\n\t\t\tpowerpc) UNAME_PROCESSOR=powerpc64 ;;\n\t\t    esac\n\t\tfi\n\t\t# On 10.4-10.6 one might compile for PowerPC via gcc -arch ppc\n\t\tif (echo '#ifdef __POWERPC__'; echo IS_PPC; echo '#endif') | \\\n\t\t       (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n\t\t       grep IS_PPC >/dev/null\n\t\tthen\n\t\t    UNAME_PROCESSOR=powerpc\n\t\tfi\n\t    fi\n\telif test \"$UNAME_PROCESSOR\" = i386 ; then\n\t    # Avoid executing cc on OS X 10.9, as it ships with a stub\n\t    # that puts up a graphical alert prompting to install\n\t    # developer tools.  Any system running Mac OS X 10.7 or\n\t    # later (Darwin 11 and later) is required to have a 64-bit\n\t    # processor. This is not true of the ARM version of Darwin\n\t    # that Apple uses in portable devices.\n\t    UNAME_PROCESSOR=x86_64\n\tfi\n\techo \"$UNAME_PROCESSOR\"-apple-darwin\"$UNAME_RELEASE\"\n\texit ;;\n    *:procnto*:*:* | *:QNX:[0123456789]*:*)\n\tUNAME_PROCESSOR=`uname -p`\n\tif test \"$UNAME_PROCESSOR\" = x86; then\n\t\tUNAME_PROCESSOR=i386\n\t\tUNAME_MACHINE=pc\n\tfi\n\techo \"$UNAME_PROCESSOR\"-\"$UNAME_MACHINE\"-nto-qnx\"$UNAME_RELEASE\"\n\texit ;;\n    *:QNX:*:4*)\n\techo i386-pc-qnx\n\texit ;;\n    NEO-*:NONSTOP_KERNEL:*:*)\n\techo neo-tandem-nsk\"$UNAME_RELEASE\"\n\texit ;;\n    NSE-*:NONSTOP_KERNEL:*:*)\n\techo nse-tandem-nsk\"$UNAME_RELEASE\"\n\texit ;;\n    NSR-*:NONSTOP_KERNEL:*:*)\n\techo nsr-tandem-nsk\"$UNAME_RELEASE\"\n\texit ;;\n    NSV-*:NONSTOP_KERNEL:*:*)\n\techo nsv-tandem-nsk\"$UNAME_RELEASE\"\n\texit ;;\n    NSX-*:NONSTOP_KERNEL:*:*)\n\techo nsx-tandem-nsk\"$UNAME_RELEASE\"\n\texit ;;\n    *:NonStop-UX:*:*)\n\techo mips-compaq-nonstopux\n\texit ;;\n    BS2000:POSIX*:*:*)\n\techo bs2000-siemens-sysv\n\texit ;;\n    DS/*:UNIX_System_V:*:*)\n\techo \"$UNAME_MACHINE\"-\"$UNAME_SYSTEM\"-\"$UNAME_RELEASE\"\n\texit ;;\n    *:Plan9:*:*)\n\t# \"uname -m\" is not consistent, so use $cputype instead. 386\n\t# is converted to i386 for consistency with other x86\n\t# operating systems.\n\t# shellcheck disable=SC2154\n\tif test \"$cputype\" = 386; then\n\t    UNAME_MACHINE=i386\n\telse\n\t    UNAME_MACHINE=\"$cputype\"\n\tfi\n\techo \"$UNAME_MACHINE\"-unknown-plan9\n\texit ;;\n    *:TOPS-10:*:*)\n\techo pdp10-unknown-tops10\n\texit ;;\n    *:TENEX:*:*)\n\techo pdp10-unknown-tenex\n\texit ;;\n    KS10:TOPS-20:*:* | KL10:TOPS-20:*:* | TYPE4:TOPS-20:*:*)\n\techo pdp10-dec-tops20\n\texit ;;\n    XKL-1:TOPS-20:*:* | TYPE5:TOPS-20:*:*)\n\techo pdp10-xkl-tops20\n\texit ;;\n    *:TOPS-20:*:*)\n\techo pdp10-unknown-tops20\n\texit ;;\n    *:ITS:*:*)\n\techo pdp10-unknown-its\n\texit ;;\n    SEI:*:*:SEIUX)\n\techo mips-sei-seiux\"$UNAME_RELEASE\"\n\texit ;;\n    *:DragonFly:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-dragonfly\"`echo \"$UNAME_RELEASE\"|sed -e 's/[-(].*//'`\"\n\texit ;;\n    *:*VMS:*:*)\n\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n\tcase \"$UNAME_MACHINE\" in\n\t    A*) echo alpha-dec-vms ; exit ;;\n\t    I*) echo ia64-dec-vms ; exit ;;\n\t    V*) echo vax-dec-vms ; exit ;;\n\tesac ;;\n    *:XENIX:*:SysV)\n\techo i386-pc-xenix\n\texit ;;\n    i*86:skyos:*:*)\n\techo \"$UNAME_MACHINE\"-pc-skyos\"`echo \"$UNAME_RELEASE\" | sed -e 's/ .*$//'`\"\n\texit ;;\n    i*86:rdos:*:*)\n\techo \"$UNAME_MACHINE\"-pc-rdos\n\texit ;;\n    i*86:AROS:*:*)\n\techo \"$UNAME_MACHINE\"-pc-aros\n\texit ;;\n    x86_64:VMkernel:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-esx\n\texit ;;\n    amd64:Isilon\\ OneFS:*:*)\n\techo x86_64-unknown-onefs\n\texit ;;\n    *:Unleashed:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-unleashed\"$UNAME_RELEASE\"\n\texit ;;\nesac\n\necho \"$0: unable to guess system type\" >&2\n\ncase \"$UNAME_MACHINE:$UNAME_SYSTEM\" in\n    mips:Linux | mips64:Linux)\n\t# If we got here on MIPS GNU/Linux, output extra information.\n\tcat >&2 <<EOF\n\nNOTE: MIPS GNU/Linux systems require a C compiler to fully recognize\nthe system type. Please install a C compiler and try again.\nEOF\n\t;;\nesac\n\ncat >&2 <<EOF\n\nThis script (version $timestamp), has failed to recognize the\noperating system you are using. If your script is old, overwrite *all*\ncopies of config.guess and config.sub with the latest versions from:\n\n  https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess\nand\n  https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub\n\nIf $0 has already been updated, send the following data and any\ninformation you think might be pertinent to config-patches@gnu.org to\nprovide the necessary information to handle your system.\n\nconfig.guess timestamp = $timestamp\n\nuname -m = `(uname -m) 2>/dev/null || echo unknown`\nuname -r = `(uname -r) 2>/dev/null || echo unknown`\nuname -s = `(uname -s) 2>/dev/null || echo unknown`\nuname -v = `(uname -v) 2>/dev/null || echo unknown`\n\n/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null`\n/bin/uname -X     = `(/bin/uname -X) 2>/dev/null`\n\nhostinfo               = `(hostinfo) 2>/dev/null`\n/bin/universe          = `(/bin/universe) 2>/dev/null`\n/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null`\n/bin/arch              = `(/bin/arch) 2>/dev/null`\n/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null`\n/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null`\n\nUNAME_MACHINE = \"$UNAME_MACHINE\"\nUNAME_RELEASE = \"$UNAME_RELEASE\"\nUNAME_SYSTEM  = \"$UNAME_SYSTEM\"\nUNAME_VERSION = \"$UNAME_VERSION\"\nEOF\n\nexit 1\n\n# Local variables:\n# eval: (add-hook 'before-save-hook 'time-stamp)\n# time-stamp-start: \"timestamp='\"\n# time-stamp-format: \"%:y-%02m-%02d\"\n# time-stamp-end: \"'\"\n# End:\n"
        },
        {
          "name": "config.sub",
          "type": "blob",
          "size": 30.7294921875,
          "content": "#! /bin/sh\n# Configuration validation subroutine script.\n#   Copyright 1992-2018 Free Software Foundation, Inc.\n\ntimestamp='2018-11-28'\n\n# This file is free software; you can redistribute it and/or modify it\n# under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, see <https://www.gnu.org/licenses/>.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that\n# program.  This Exception is an additional permission under section 7\n# of the GNU General Public License, version 3 (\"GPLv3\").\n\n\n# Please send patches to <config-patches@gnu.org>.\n#\n# Configuration subroutine to validate and canonicalize a configuration type.\n# Supply the specified configuration type as an argument.\n# If it is invalid, we print an error message on stderr and exit with code 1.\n# Otherwise, we print the canonical config type on stdout and succeed.\n\n# You can get the latest version of this script from:\n# https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub\n\n# This file is supposed to be the same for all GNU packages\n# and recognize all the CPU types, system types and aliases\n# that are meaningful with *any* GNU software.\n# Each package is responsible for reporting which valid configurations\n# it does not support.  The user should be able to distinguish\n# a failure to support a valid configuration from a meaningless\n# configuration.\n\n# The goal of this file is to map all the various variations of a given\n# machine specification into a single specification in the form:\n#\tCPU_TYPE-MANUFACTURER-OPERATING_SYSTEM\n# or in some cases, the newer four-part form:\n#\tCPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM\n# It is wrong to echo any other type of specification.\n\nme=`echo \"$0\" | sed -e 's,.*/,,'`\n\nusage=\"\\\nUsage: $0 [OPTION] CPU-MFR-OPSYS or ALIAS\n\nCanonicalize a configuration name.\n\nOptions:\n  -h, --help         print this help, then exit\n  -t, --time-stamp   print date of last modification, then exit\n  -v, --version      print version number, then exit\n\nReport bugs and patches to <config-patches@gnu.org>.\"\n\nversion=\"\\\nGNU config.sub ($timestamp)\n\nCopyright 1992-2018 Free Software Foundation, Inc.\n\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n\nhelp=\"\nTry \\`$me --help' for more information.\"\n\n# Parse command line\nwhile test $# -gt 0 ; do\n  case $1 in\n    --time-stamp | --time* | -t )\n       echo \"$timestamp\" ; exit ;;\n    --version | -v )\n       echo \"$version\" ; exit ;;\n    --help | --h* | -h )\n       echo \"$usage\"; exit ;;\n    -- )     # Stop option processing\n       shift; break ;;\n    - )\t# Use stdin as input.\n       break ;;\n    -* )\n       echo \"$me: invalid option $1$help\" >&2\n       exit 1 ;;\n\n    *local*)\n       # First pass through any local machine types.\n       echo \"$1\"\n       exit ;;\n\n    * )\n       break ;;\n  esac\ndone\n\ncase $# in\n 0) echo \"$me: missing argument$help\" >&2\n    exit 1;;\n 1) ;;\n *) echo \"$me: too many arguments$help\" >&2\n    exit 1;;\nesac\n\n# Split fields of configuration type\nIFS=\"-\" read -r field1 field2 field3 field4 <<EOF\n$1\nEOF\n\n# Separate into logical components for further validation\ncase $1 in\n\t*-*-*-*-*)\n\t\techo Invalid configuration \\`\"$1\"\\': more than four components >&2\n\t\texit 1\n\t\t;;\n\t*-*-*-*)\n\t\tbasic_machine=$field1-$field2\n\t\tos=$field3-$field4\n\t\t;;\n\t*-*-*)\n\t\t# Ambiguous whether COMPANY is present, or skipped and KERNEL-OS is two\n\t\t# parts\n\t\tmaybe_os=$field2-$field3\n\t\tcase $maybe_os in\n\t\t\tnto-qnx* | linux-gnu* | linux-android* | linux-dietlibc \\\n\t\t\t| linux-newlib* | linux-musl* | linux-uclibc* | uclinux-uclibc* \\\n\t\t\t| uclinux-gnu* | kfreebsd*-gnu* | knetbsd*-gnu* | netbsd*-gnu* \\\n\t\t\t| netbsd*-eabi* | kopensolaris*-gnu* | cloudabi*-eabi* \\\n\t\t\t| storm-chaos* | os2-emx* | rtmk-nova*)\n\t\t\t\tbasic_machine=$field1\n\t\t\t\tos=$maybe_os\n\t\t\t\t;;\n\t\t\tandroid-linux)\n\t\t\t\tbasic_machine=$field1-unknown\n\t\t\t\tos=linux-android\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tbasic_machine=$field1-$field2\n\t\t\t\tos=$field3\n\t\t\t\t;;\n\t\tesac\n\t\t;;\n\t*-*)\n\t\t# A lone config we happen to match not fitting any pattern\n\t\tcase $field1-$field2 in\n\t\t\tdecstation-3100)\n\t\t\t\tbasic_machine=mips-dec\n\t\t\t\tos=\n\t\t\t\t;;\n\t\t\t*-*)\n\t\t\t\t# Second component is usually, but not always the OS\n\t\t\t\tcase $field2 in\n\t\t\t\t\t# Prevent following clause from handling this valid os\n\t\t\t\t\tsun*os*)\n\t\t\t\t\t\tbasic_machine=$field1\n\t\t\t\t\t\tos=$field2\n\t\t\t\t\t\t;;\n\t\t\t\t\t# Manufacturers\n\t\t\t\t\tdec* | mips* | sequent* | encore* | pc533* | sgi* | sony* \\\n\t\t\t\t\t| att* | 7300* | 3300* | delta* | motorola* | sun[234]* \\\n\t\t\t\t\t| unicom* | ibm* | next | hp | isi* | apollo | altos* \\\n\t\t\t\t\t| convergent* | ncr* | news | 32* | 3600* | 3100* \\\n\t\t\t\t\t| hitachi* | c[123]* | convex* | sun | crds | omron* | dg \\\n\t\t\t\t\t| ultra | tti* | harris | dolphin | highlevel | gould \\\n\t\t\t\t\t| cbm | ns | masscomp | apple | axis | knuth | cray \\\n\t\t\t\t\t| microblaze* | sim | cisco \\\n\t\t\t\t\t| oki | wec | wrs | winbond)\n\t\t\t\t\t\tbasic_machine=$field1-$field2\n\t\t\t\t\t\tos=\n\t\t\t\t\t\t;;\n\t\t\t\t\t*)\n\t\t\t\t\t\tbasic_machine=$field1\n\t\t\t\t\t\tos=$field2\n\t\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\t;;\n\t\tesac\n\t\t;;\n\t*)\n\t\t# Convert single-component short-hands not valid as part of\n\t\t# multi-component configurations.\n\t\tcase $field1 in\n\t\t\t386bsd)\n\t\t\t\tbasic_machine=i386-pc\n\t\t\t\tos=bsd\n\t\t\t\t;;\n\t\t\ta29khif)\n\t\t\t\tbasic_machine=a29k-amd\n\t\t\t\tos=udi\n\t\t\t\t;;\n\t\t\tadobe68k)\n\t\t\t\tbasic_machine=m68010-adobe\n\t\t\t\tos=scout\n\t\t\t\t;;\n\t\t\talliant)\n\t\t\t\tbasic_machine=fx80-alliant\n\t\t\t\tos=\n\t\t\t\t;;\n\t\t\taltos | altos3068)\n\t\t\t\tbasic_machine=m68k-altos\n\t\t\t\tos=\n\t\t\t\t;;\n\t\t\tam29k)\n\t\t\t\tbasic_machine=a29k-none\n\t\t\t\tos=bsd\n\t\t\t\t;;\n\t\t\tamdahl)\n\t\t\t\tbasic_machine=580-amdahl\n\t\t\t\tos=sysv\n\t\t\t\t;;\n\t\t\tamiga)\n\t\t\t\tbasic_machine=m68k-unknown\n\t\t\t\tos=\n\t\t\t\t;;\n\t\t\tamigaos | amigados)\n\t\t\t\tbasic_machine=m68k-unknown\n\t\t\t\tos=amigaos\n\t\t\t\t;;\n\t\t\tamigaunix | amix)\n\t\t\t\tbasic_machine=m68k-unknown\n\t\t\t\tos=sysv4\n\t\t\t\t;;\n\t\t\tapollo68)\n\t\t\t\tbasic_machine=m68k-apollo\n\t\t\t\tos=sysv\n\t\t\t\t;;\n\t\t\tapollo68bsd)\n\t\t\t\tbasic_machine=m68k-apollo\n\t\t\t\tos=bsd\n\t\t\t\t;;\n\t\t\taros)\n\t\t\t\tbasic_machine=i386-pc\n\t\t\t\tos=aros\n\t\t\t\t;;\n\t\t\taux)\n\t\t\t\tbasic_machine=m68k-apple\n\t\t\t\tos=aux\n\t\t\t\t;;\n\t\t\tbalance)\n\t\t\t\tbasic_machine=ns32k-sequent\n\t\t\t\tos=dynix\n\t\t\t\t;;\n\t\t\tblackfin)\n\t\t\t\tbasic_machine=bfin-unknown\n\t\t\t\tos=linux\n\t\t\t\t;;\n\t\t\tcegcc)\n\t\t\t\tbasic_machine=arm-unknown\n\t\t\t\tos=cegcc\n\t\t\t\t;;\n\t\t\tconvex-c1)\n\t\t\t\tbasic_machine=c1-convex\n\t\t\t\tos=bsd\n\t\t\t\t;;\n\t\t\tconvex-c2)\n\t\t\t\tbasic_machine=c2-convex\n\t\t\t\tos=bsd\n\t\t\t\t;;\n\t\t\tconvex-c32)\n\t\t\t\tbasic_machine=c32-convex\n\t\t\t\tos=bsd\n\t\t\t\t;;\n\t\t\tconvex-c34)\n\t\t\t\tbasic_machine=c34-convex\n\t\t\t\tos=bsd\n\t\t\t\t;;\n\t\t\tconvex-c38)\n\t\t\t\tbasic_machine=c38-convex\n\t\t\t\tos=bsd\n\t\t\t\t;;\n\t\t\tcray)\n\t\t\t\tbasic_machine=j90-cray\n\t\t\t\tos=unicos\n\t\t\t\t;;\n\t\t\tcrds | unos)\n\t\t\t\tbasic_machine=m68k-crds\n\t\t\t\tos=\n\t\t\t\t;;\n\t\t\tda30)\n\t\t\t\tbasic_machine=m68k-da30\n\t\t\t\tos=\n\t\t\t\t;;\n\t\t\tdecstation | pmax | pmin | dec3100 | decstatn)\n\t\t\t\tbasic_machine=mips-dec\n\t\t\t\tos=\n\t\t\t\t;;\n\t\t\tdelta88)\n\t\t\t\tbasic_machine=m88k-motorola\n\t\t\t\tos=sysv3\n\t\t\t\t;;\n\t\t\tdicos)\n\t\t\t\tbasic_machine=i686-pc\n\t\t\t\tos=dicos\n\t\t\t\t;;\n\t\t\tdjgpp)\n\t\t\t\tbasic_machine=i586-pc\n\t\t\t\tos=msdosdjgpp\n\t\t\t\t;;\n\t\t\tebmon29k)\n\t\t\t\tbasic_machine=a29k-amd\n\t\t\t\tos=ebmon\n\t\t\t\t;;\n\t\t\tes1800 | OSE68k | ose68k | ose | OSE)\n\t\t\t\tbasic_machine=m68k-ericsson\n\t\t\t\tos=ose\n\t\t\t\t;;\n\t\t\tgmicro)\n\t\t\t\tbasic_machine=tron-gmicro\n\t\t\t\tos=sysv\n\t\t\t\t;;\n\t\t\tgo32)\n\t\t\t\tbasic_machine=i386-pc\n\t\t\t\tos=go32\n\t\t\t\t;;\n\t\t\th8300hms)\n\t\t\t\tbasic_machine=h8300-hitachi\n\t\t\t\tos=hms\n\t\t\t\t;;\n\t\t\th8300xray)\n\t\t\t\tbasic_machine=h8300-hitachi\n\t\t\t\tos=xray\n\t\t\t\t;;\n\t\t\th8500hms)\n\t\t\t\tbasic_machine=h8500-hitachi\n\t\t\t\tos=hms\n\t\t\t\t;;\n\t\t\tharris)\n\t\t\t\tbasic_machine=m88k-harris\n\t\t\t\tos=sysv3\n\t\t\t\t;;\n\t\t\thp300)\n\t\t\t\tbasic_machine=m68k-hp\n\t\t\t\t;;\n\t\t\thp300bsd)\n\t\t\t\tbasic_machine=m68k-hp\n\t\t\t\tos=bsd\n\t\t\t\t;;\n\t\t\thp300hpux)\n\t\t\t\tbasic_machine=m68k-hp\n\t\t\t\tos=hpux\n\t\t\t\t;;\n\t\t\thppaosf)\n\t\t\t\tbasic_machine=hppa1.1-hp\n\t\t\t\tos=osf\n\t\t\t\t;;\n\t\t\thppro)\n\t\t\t\tbasic_machine=hppa1.1-hp\n\t\t\t\tos=proelf\n\t\t\t\t;;\n\t\t\ti386mach)\n\t\t\t\tbasic_machine=i386-mach\n\t\t\t\tos=mach\n\t\t\t\t;;\n\t\t\tvsta)\n\t\t\t\tbasic_machine=i386-pc\n\t\t\t\tos=vsta\n\t\t\t\t;;\n\t\t\tisi68 | isi)\n\t\t\t\tbasic_machine=m68k-isi\n\t\t\t\tos=sysv\n\t\t\t\t;;\n\t\t\tm68knommu)\n\t\t\t\tbasic_machine=m68k-unknown\n\t\t\t\tos=linux\n\t\t\t\t;;\n\t\t\tmagnum | m3230)\n\t\t\t\tbasic_machine=mips-mips\n\t\t\t\tos=sysv\n\t\t\t\t;;\n\t\t\tmerlin)\n\t\t\t\tbasic_machine=ns32k-utek\n\t\t\t\tos=sysv\n\t\t\t\t;;\n\t\t\tmingw64)\n\t\t\t\tbasic_machine=x86_64-pc\n\t\t\t\tos=mingw64\n\t\t\t\t;;\n\t\t\tmingw32)\n\t\t\t\tbasic_machine=i686-pc\n\t\t\t\tos=mingw32\n\t\t\t\t;;\n\t\t\tmingw32ce)\n\t\t\t\tbasic_machine=arm-unknown\n\t\t\t\tos=mingw32ce\n\t\t\t\t;;\n\t\t\tmonitor)\n\t\t\t\tbasic_machine=m68k-rom68k\n\t\t\t\tos=coff\n\t\t\t\t;;\n\t\t\tmorphos)\n\t\t\t\tbasic_machine=powerpc-unknown\n\t\t\t\tos=morphos\n\t\t\t\t;;\n\t\t\tmoxiebox)\n\t\t\t\tbasic_machine=moxie-unknown\n\t\t\t\tos=moxiebox\n\t\t\t\t;;\n\t\t\tmsdos)\n\t\t\t\tbasic_machine=i386-pc\n\t\t\t\tos=msdos\n\t\t\t\t;;\n\t\t\tmsys)\n\t\t\t\tbasic_machine=i686-pc\n\t\t\t\tos=msys\n\t\t\t\t;;\n\t\t\tmvs)\n\t\t\t\tbasic_machine=i370-ibm\n\t\t\t\tos=mvs\n\t\t\t\t;;\n\t\t\tnacl)\n\t\t\t\tbasic_machine=le32-unknown\n\t\t\t\tos=nacl\n\t\t\t\t;;\n\t\t\tncr3000)\n\t\t\t\tbasic_machine=i486-ncr\n\t\t\t\tos=sysv4\n\t\t\t\t;;\n\t\t\tnetbsd386)\n\t\t\t\tbasic_machine=i386-pc\n\t\t\t\tos=netbsd\n\t\t\t\t;;\n\t\t\tnetwinder)\n\t\t\t\tbasic_machine=armv4l-rebel\n\t\t\t\tos=linux\n\t\t\t\t;;\n\t\t\tnews | news700 | news800 | news900)\n\t\t\t\tbasic_machine=m68k-sony\n\t\t\t\tos=newsos\n\t\t\t\t;;\n\t\t\tnews1000)\n\t\t\t\tbasic_machine=m68030-sony\n\t\t\t\tos=newsos\n\t\t\t\t;;\n\t\t\tnecv70)\n\t\t\t\tbasic_machine=v70-nec\n\t\t\t\tos=sysv\n\t\t\t\t;;\n\t\t\tnh3000)\n\t\t\t\tbasic_machine=m68k-harris\n\t\t\t\tos=cxux\n\t\t\t\t;;\n\t\t\tnh[45]000)\n\t\t\t\tbasic_machine=m88k-harris\n\t\t\t\tos=cxux\n\t\t\t\t;;\n\t\t\tnindy960)\n\t\t\t\tbasic_machine=i960-intel\n\t\t\t\tos=nindy\n\t\t\t\t;;\n\t\t\tmon960)\n\t\t\t\tbasic_machine=i960-intel\n\t\t\t\tos=mon960\n\t\t\t\t;;\n\t\t\tnonstopux)\n\t\t\t\tbasic_machine=mips-compaq\n\t\t\t\tos=nonstopux\n\t\t\t\t;;\n\t\t\tos400)\n\t\t\t\tbasic_machine=powerpc-ibm\n\t\t\t\tos=os400\n\t\t\t\t;;\n\t\t\tOSE68000 | ose68000)\n\t\t\t\tbasic_machine=m68000-ericsson\n\t\t\t\tos=ose\n\t\t\t\t;;\n\t\t\tos68k)\n\t\t\t\tbasic_machine=m68k-none\n\t\t\t\tos=os68k\n\t\t\t\t;;\n\t\t\tparagon)\n\t\t\t\tbasic_machine=i860-intel\n\t\t\t\tos=osf\n\t\t\t\t;;\n\t\t\tparisc)\n\t\t\t\tbasic_machine=hppa-unknown\n\t\t\t\tos=linux\n\t\t\t\t;;\n\t\t\tpw32)\n\t\t\t\tbasic_machine=i586-unknown\n\t\t\t\tos=pw32\n\t\t\t\t;;\n\t\t\trdos | rdos64)\n\t\t\t\tbasic_machine=x86_64-pc\n\t\t\t\tos=rdos\n\t\t\t\t;;\n\t\t\trdos32)\n\t\t\t\tbasic_machine=i386-pc\n\t\t\t\tos=rdos\n\t\t\t\t;;\n\t\t\trom68k)\n\t\t\t\tbasic_machine=m68k-rom68k\n\t\t\t\tos=coff\n\t\t\t\t;;\n\t\t\tsa29200)\n\t\t\t\tbasic_machine=a29k-amd\n\t\t\t\tos=udi\n\t\t\t\t;;\n\t\t\tsei)\n\t\t\t\tbasic_machine=mips-sei\n\t\t\t\tos=seiux\n\t\t\t\t;;\n\t\t\tsequent)\n\t\t\t\tbasic_machine=i386-sequent\n\t\t\t\tos=\n\t\t\t\t;;\n\t\t\tsps7)\n\t\t\t\tbasic_machine=m68k-bull\n\t\t\t\tos=sysv2\n\t\t\t\t;;\n\t\t\tst2000)\n\t\t\t\tbasic_machine=m68k-tandem\n\t\t\t\tos=\n\t\t\t\t;;\n\t\t\tstratus)\n\t\t\t\tbasic_machine=i860-stratus\n\t\t\t\tos=sysv4\n\t\t\t\t;;\n\t\t\tsun2)\n\t\t\t\tbasic_machine=m68000-sun\n\t\t\t\tos=\n\t\t\t\t;;\n\t\t\tsun2os3)\n\t\t\t\tbasic_machine=m68000-sun\n\t\t\t\tos=sunos3\n\t\t\t\t;;\n\t\t\tsun2os4)\n\t\t\t\tbasic_machine=m68000-sun\n\t\t\t\tos=sunos4\n\t\t\t\t;;\n\t\t\tsun3)\n\t\t\t\tbasic_machine=m68k-sun\n\t\t\t\tos=\n\t\t\t\t;;\n\t\t\tsun3os3)\n\t\t\t\tbasic_machine=m68k-sun\n\t\t\t\tos=sunos3\n\t\t\t\t;;\n\t\t\tsun3os4)\n\t\t\t\tbasic_machine=m68k-sun\n\t\t\t\tos=sunos4\n\t\t\t\t;;\n\t\t\tsun4)\n\t\t\t\tbasic_machine=sparc-sun\n\t\t\t\tos=\n\t\t\t\t;;\n\t\t\tsun4os3)\n\t\t\t\tbasic_machine=sparc-sun\n\t\t\t\tos=sunos3\n\t\t\t\t;;\n\t\t\tsun4os4)\n\t\t\t\tbasic_machine=sparc-sun\n\t\t\t\tos=sunos4\n\t\t\t\t;;\n\t\t\tsun4sol2)\n\t\t\t\tbasic_machine=sparc-sun\n\t\t\t\tos=solaris2\n\t\t\t\t;;\n\t\t\tsun386 | sun386i | roadrunner)\n\t\t\t\tbasic_machine=i386-sun\n\t\t\t\tos=\n\t\t\t\t;;\n\t\t\tsv1)\n\t\t\t\tbasic_machine=sv1-cray\n\t\t\t\tos=unicos\n\t\t\t\t;;\n\t\t\tsymmetry)\n\t\t\t\tbasic_machine=i386-sequent\n\t\t\t\tos=dynix\n\t\t\t\t;;\n\t\t\tt3e)\n\t\t\t\tbasic_machine=alphaev5-cray\n\t\t\t\tos=unicos\n\t\t\t\t;;\n\t\t\tt90)\n\t\t\t\tbasic_machine=t90-cray\n\t\t\t\tos=unicos\n\t\t\t\t;;\n\t\t\ttoad1)\n\t\t\t\tbasic_machine=pdp10-xkl\n\t\t\t\tos=tops20\n\t\t\t\t;;\n\t\t\ttpf)\n\t\t\t\tbasic_machine=s390x-ibm\n\t\t\t\tos=tpf\n\t\t\t\t;;\n\t\t\tudi29k)\n\t\t\t\tbasic_machine=a29k-amd\n\t\t\t\tos=udi\n\t\t\t\t;;\n\t\t\tultra3)\n\t\t\t\tbasic_machine=a29k-nyu\n\t\t\t\tos=sym1\n\t\t\t\t;;\n\t\t\tv810 | necv810)\n\t\t\t\tbasic_machine=v810-nec\n\t\t\t\tos=none\n\t\t\t\t;;\n\t\t\tvaxv)\n\t\t\t\tbasic_machine=vax-dec\n\t\t\t\tos=sysv\n\t\t\t\t;;\n\t\t\tvms)\n\t\t\t\tbasic_machine=vax-dec\n\t\t\t\tos=vms\n\t\t\t\t;;\n\t\t\tvxworks960)\n\t\t\t\tbasic_machine=i960-wrs\n\t\t\t\tos=vxworks\n\t\t\t\t;;\n\t\t\tvxworks68)\n\t\t\t\tbasic_machine=m68k-wrs\n\t\t\t\tos=vxworks\n\t\t\t\t;;\n\t\t\tvxworks29k)\n\t\t\t\tbasic_machine=a29k-wrs\n\t\t\t\tos=vxworks\n\t\t\t\t;;\n\t\t\txbox)\n\t\t\t\tbasic_machine=i686-pc\n\t\t\t\tos=mingw32\n\t\t\t\t;;\n\t\t\tymp)\n\t\t\t\tbasic_machine=ymp-cray\n\t\t\t\tos=unicos\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tbasic_machine=$1\n\t\t\t\tos=\n\t\t\t\t;;\n\t\tesac\n\t\t;;\nesac\n\n# Decode 1-component or ad-hoc basic machines\ncase $basic_machine in\n\t# Here we handle the default manufacturer of certain CPU types.  It is in\n\t# some cases the only manufacturer, in others, it is the most popular.\n\tw89k)\n\t\tcpu=hppa1.1\n\t\tvendor=winbond\n\t\t;;\n\top50n)\n\t\tcpu=hppa1.1\n\t\tvendor=oki\n\t\t;;\n\top60c)\n\t\tcpu=hppa1.1\n\t\tvendor=oki\n\t\t;;\n\tibm*)\n\t\tcpu=i370\n\t\tvendor=ibm\n\t\t;;\n\torion105)\n\t\tcpu=clipper\n\t\tvendor=highlevel\n\t\t;;\n\tmac | mpw | mac-mpw)\n\t\tcpu=m68k\n\t\tvendor=apple\n\t\t;;\n\tpmac | pmac-mpw)\n\t\tcpu=powerpc\n\t\tvendor=apple\n\t\t;;\n\n\t# Recognize the various machine names and aliases which stand\n\t# for a CPU type and a company and sometimes even an OS.\n\t3b1 | 7300 | 7300-att | att-7300 | pc7300 | safari | unixpc)\n\t\tcpu=m68000\n\t\tvendor=att\n\t\t;;\n\t3b*)\n\t\tcpu=we32k\n\t\tvendor=att\n\t\t;;\n\tbluegene*)\n\t\tcpu=powerpc\n\t\tvendor=ibm\n\t\tos=cnk\n\t\t;;\n\tdecsystem10* | dec10*)\n\t\tcpu=pdp10\n\t\tvendor=dec\n\t\tos=tops10\n\t\t;;\n\tdecsystem20* | dec20*)\n\t\tcpu=pdp10\n\t\tvendor=dec\n\t\tos=tops20\n\t\t;;\n\tdelta | 3300 | motorola-3300 | motorola-delta \\\n\t      | 3300-motorola | delta-motorola)\n\t\tcpu=m68k\n\t\tvendor=motorola\n\t\t;;\n\tdpx2*)\n\t\tcpu=m68k\n\t\tvendor=bull\n\t\tos=sysv3\n\t\t;;\n\tencore | umax | mmax)\n\t\tcpu=ns32k\n\t\tvendor=encore\n\t\t;;\n\telxsi)\n\t\tcpu=elxsi\n\t\tvendor=elxsi\n\t\tos=${os:-bsd}\n\t\t;;\n\tfx2800)\n\t\tcpu=i860\n\t\tvendor=alliant\n\t\t;;\n\tgenix)\n\t\tcpu=ns32k\n\t\tvendor=ns\n\t\t;;\n\th3050r* | hiux*)\n\t\tcpu=hppa1.1\n\t\tvendor=hitachi\n\t\tos=hiuxwe2\n\t\t;;\n\thp3k9[0-9][0-9] | hp9[0-9][0-9])\n\t\tcpu=hppa1.0\n\t\tvendor=hp\n\t\t;;\n\thp9k2[0-9][0-9] | hp9k31[0-9])\n\t\tcpu=m68000\n\t\tvendor=hp\n\t\t;;\n\thp9k3[2-9][0-9])\n\t\tcpu=m68k\n\t\tvendor=hp\n\t\t;;\n\thp9k6[0-9][0-9] | hp6[0-9][0-9])\n\t\tcpu=hppa1.0\n\t\tvendor=hp\n\t\t;;\n\thp9k7[0-79][0-9] | hp7[0-79][0-9])\n\t\tcpu=hppa1.1\n\t\tvendor=hp\n\t\t;;\n\thp9k78[0-9] | hp78[0-9])\n\t\t# FIXME: really hppa2.0-hp\n\t\tcpu=hppa1.1\n\t\tvendor=hp\n\t\t;;\n\thp9k8[67]1 | hp8[67]1 | hp9k80[24] | hp80[24] | hp9k8[78]9 | hp8[78]9 | hp9k893 | hp893)\n\t\t# FIXME: really hppa2.0-hp\n\t\tcpu=hppa1.1\n\t\tvendor=hp\n\t\t;;\n\thp9k8[0-9][13679] | hp8[0-9][13679])\n\t\tcpu=hppa1.1\n\t\tvendor=hp\n\t\t;;\n\thp9k8[0-9][0-9] | hp8[0-9][0-9])\n\t\tcpu=hppa1.0\n\t\tvendor=hp\n\t\t;;\n\ti*86v32)\n\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n\t\tvendor=pc\n\t\tos=sysv32\n\t\t;;\n\ti*86v4*)\n\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n\t\tvendor=pc\n\t\tos=sysv4\n\t\t;;\n\ti*86v)\n\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n\t\tvendor=pc\n\t\tos=sysv\n\t\t;;\n\ti*86sol2)\n\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n\t\tvendor=pc\n\t\tos=solaris2\n\t\t;;\n\tj90 | j90-cray)\n\t\tcpu=j90\n\t\tvendor=cray\n\t\tos=${os:-unicos}\n\t\t;;\n\tiris | iris4d)\n\t\tcpu=mips\n\t\tvendor=sgi\n\t\tcase $os in\n\t\t    irix*)\n\t\t\t;;\n\t\t    *)\n\t\t\tos=irix4\n\t\t\t;;\n\t\tesac\n\t\t;;\n\tminiframe)\n\t\tcpu=m68000\n\t\tvendor=convergent\n\t\t;;\n\t*mint | mint[0-9]* | *MiNT | *MiNT[0-9]*)\n\t\tcpu=m68k\n\t\tvendor=atari\n\t\tos=mint\n\t\t;;\n\tnews-3600 | risc-news)\n\t\tcpu=mips\n\t\tvendor=sony\n\t\tos=newsos\n\t\t;;\n\tnext | m*-next)\n\t\tcpu=m68k\n\t\tvendor=next\n\t\tcase $os in\n\t\t    nextstep* )\n\t\t\t;;\n\t\t    ns2*)\n\t\t      os=nextstep2\n\t\t\t;;\n\t\t    *)\n\t\t      os=nextstep3\n\t\t\t;;\n\t\tesac\n\t\t;;\n\tnp1)\n\t\tcpu=np1\n\t\tvendor=gould\n\t\t;;\n\top50n-* | op60c-*)\n\t\tcpu=hppa1.1\n\t\tvendor=oki\n\t\tos=proelf\n\t\t;;\n\tpa-hitachi)\n\t\tcpu=hppa1.1\n\t\tvendor=hitachi\n\t\tos=hiuxwe2\n\t\t;;\n\tpbd)\n\t\tcpu=sparc\n\t\tvendor=tti\n\t\t;;\n\tpbb)\n\t\tcpu=m68k\n\t\tvendor=tti\n\t\t;;\n\tpc532)\n\t\tcpu=ns32k\n\t\tvendor=pc532\n\t\t;;\n\tpn)\n\t\tcpu=pn\n\t\tvendor=gould\n\t\t;;\n\tpower)\n\t\tcpu=power\n\t\tvendor=ibm\n\t\t;;\n\tps2)\n\t\tcpu=i386\n\t\tvendor=ibm\n\t\t;;\n\trm[46]00)\n\t\tcpu=mips\n\t\tvendor=siemens\n\t\t;;\n\trtpc | rtpc-*)\n\t\tcpu=romp\n\t\tvendor=ibm\n\t\t;;\n\tsde)\n\t\tcpu=mipsisa32\n\t\tvendor=sde\n\t\tos=${os:-elf}\n\t\t;;\n\tsimso-wrs)\n\t\tcpu=sparclite\n\t\tvendor=wrs\n\t\tos=vxworks\n\t\t;;\n\ttower | tower-32)\n\t\tcpu=m68k\n\t\tvendor=ncr\n\t\t;;\n\tvpp*|vx|vx-*)\n\t\tcpu=f301\n\t\tvendor=fujitsu\n\t\t;;\n\tw65)\n\t\tcpu=w65\n\t\tvendor=wdc\n\t\t;;\n\tw89k-*)\n\t\tcpu=hppa1.1\n\t\tvendor=winbond\n\t\tos=proelf\n\t\t;;\n\tnone)\n\t\tcpu=none\n\t\tvendor=none\n\t\t;;\n\tleon|leon[3-9])\n\t\tcpu=sparc\n\t\tvendor=$basic_machine\n\t\t;;\n\tleon-*|leon[3-9]-*)\n\t\tcpu=sparc\n\t\tvendor=`echo \"$basic_machine\" | sed 's/-.*//'`\n\t\t;;\n\n\t*-*)\n\t\tIFS=\"-\" read -r cpu vendor <<EOF\n$basic_machine\nEOF\n\t\t;;\n\t# We use `pc' rather than `unknown'\n\t# because (1) that's what they normally are, and\n\t# (2) the word \"unknown\" tends to confuse beginning users.\n\ti*86 | x86_64)\n\t\tcpu=$basic_machine\n\t\tvendor=pc\n\t\t;;\n\t# These rules are duplicated from below for sake of the special case above;\n\t# i.e. things that normalized to x86 arches should also default to \"pc\"\n\tpc98)\n\t\tcpu=i386\n\t\tvendor=pc\n\t\t;;\n\tx64 | amd64)\n\t\tcpu=x86_64\n\t\tvendor=pc\n\t\t;;\n\t# Recognize the basic CPU types without company name.\n\t*)\n\t\tcpu=$basic_machine\n\t\tvendor=unknown\n\t\t;;\nesac\n\nunset -v basic_machine\n\n# Decode basic machines in the full and proper CPU-Company form.\ncase $cpu-$vendor in\n\t# Here we handle the default manufacturer of certain CPU types in canonical form. It is in\n\t# some cases the only manufacturer, in others, it is the most popular.\n\tcraynv-unknown)\n\t\tvendor=cray\n\t\tos=${os:-unicosmp}\n\t\t;;\n\tc90-unknown | c90-cray)\n\t\tvendor=cray\n\t\tos=${os:-unicos}\n\t\t;;\n\tfx80-unknown)\n\t\tvendor=alliant\n\t\t;;\n\tromp-unknown)\n\t\tvendor=ibm\n\t\t;;\n\tmmix-unknown)\n\t\tvendor=knuth\n\t\t;;\n\tmicroblaze-unknown | microblazeel-unknown)\n\t\tvendor=xilinx\n\t\t;;\n\trs6000-unknown)\n\t\tvendor=ibm\n\t\t;;\n\tvax-unknown)\n\t\tvendor=dec\n\t\t;;\n\tpdp11-unknown)\n\t\tvendor=dec\n\t\t;;\n\twe32k-unknown)\n\t\tvendor=att\n\t\t;;\n\tcydra-unknown)\n\t\tvendor=cydrome\n\t\t;;\n\ti370-ibm*)\n\t\tvendor=ibm\n\t\t;;\n\torion-unknown)\n\t\tvendor=highlevel\n\t\t;;\n\txps-unknown | xps100-unknown)\n\t\tcpu=xps100\n\t\tvendor=honeywell\n\t\t;;\n\n\t# Here we normalize CPU types with a missing or matching vendor\n\tdpx20-unknown | dpx20-bull)\n\t\tcpu=rs6000\n\t\tvendor=bull\n\t\tos=${os:-bosx}\n\t\t;;\n\n\t# Here we normalize CPU types irrespective of the vendor\n\tamd64-*)\n\t\tcpu=x86_64\n\t\t;;\n\tblackfin-*)\n\t\tcpu=bfin\n\t\tos=linux\n\t\t;;\n\tc54x-*)\n\t\tcpu=tic54x\n\t\t;;\n\tc55x-*)\n\t\tcpu=tic55x\n\t\t;;\n\tc6x-*)\n\t\tcpu=tic6x\n\t\t;;\n\te500v[12]-*)\n\t\tcpu=powerpc\n\t\tos=$os\"spe\"\n\t\t;;\n\tmips3*-*)\n\t\tcpu=mips64\n\t\t;;\n\tms1-*)\n\t\tcpu=mt\n\t\t;;\n\tm68knommu-*)\n\t\tcpu=m68k\n\t\tos=linux\n\t\t;;\n\tm9s12z-* | m68hcs12z-* | hcs12z-* | s12z-*)\n\t\tcpu=s12z\n\t\t;;\n\topenrisc-*)\n\t\tcpu=or32\n\t\t;;\n\tparisc-*)\n\t\tcpu=hppa\n\t\tos=linux\n\t\t;;\n\tpentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)\n\t\tcpu=i586\n\t\t;;\n\tpentiumpro-* | p6-* | 6x86-* | athlon-* | athalon_*-*)\n\t\tcpu=i686\n\t\t;;\n\tpentiumii-* | pentium2-* | pentiumiii-* | pentium3-*)\n\t\tcpu=i686\n\t\t;;\n\tpentium4-*)\n\t\tcpu=i786\n\t\t;;\n\tpc98-*)\n\t\tcpu=i386\n\t\t;;\n\tppc-* | ppcbe-*)\n\t\tcpu=powerpc\n\t\t;;\n\tppcle-* | powerpclittle-*)\n\t\tcpu=powerpcle\n\t\t;;\n\tppc64-*)\n\t\tcpu=powerpc64\n\t\t;;\n\tppc64le-* | powerpc64little-*)\n\t\tcpu=powerpc64le\n\t\t;;\n\tsb1-*)\n\t\tcpu=mipsisa64sb1\n\t\t;;\n\tsb1el-*)\n\t\tcpu=mipsisa64sb1el\n\t\t;;\n\tsh5e[lb]-*)\n\t\tcpu=`echo \"$cpu\" | sed 's/^\\(sh.\\)e\\(.\\)$/\\1\\2e/'`\n\t\t;;\n\tspur-*)\n\t\tcpu=spur\n\t\t;;\n\tstrongarm-* | thumb-*)\n\t\tcpu=arm\n\t\t;;\n\ttx39-*)\n\t\tcpu=mipstx39\n\t\t;;\n\ttx39el-*)\n\t\tcpu=mipstx39el\n\t\t;;\n\tx64-*)\n\t\tcpu=x86_64\n\t\t;;\n\txscale-* | xscalee[bl]-*)\n\t\tcpu=`echo \"$cpu\" | sed 's/^xscale/arm/'`\n\t\t;;\n\n\t# Recognize the canonical CPU Types that limit and/or modify the\n\t# company names they are paired with.\n\tcr16-*)\n\t\tos=${os:-elf}\n\t\t;;\n\tcrisv32-* | etraxfs*-*)\n\t\tcpu=crisv32\n\t\tvendor=axis\n\t\t;;\n\tcris-* | etrax*-*)\n\t\tcpu=cris\n\t\tvendor=axis\n\t\t;;\n\tcrx-*)\n\t\tos=${os:-elf}\n\t\t;;\n\tneo-tandem)\n\t\tcpu=neo\n\t\tvendor=tandem\n\t\t;;\n\tnse-tandem)\n\t\tcpu=nse\n\t\tvendor=tandem\n\t\t;;\n\tnsr-tandem)\n\t\tcpu=nsr\n\t\tvendor=tandem\n\t\t;;\n\tnsv-tandem)\n\t\tcpu=nsv\n\t\tvendor=tandem\n\t\t;;\n\tnsx-tandem)\n\t\tcpu=nsx\n\t\tvendor=tandem\n\t\t;;\n\ts390-*)\n\t\tcpu=s390\n\t\tvendor=ibm\n\t\t;;\n\ts390x-*)\n\t\tcpu=s390x\n\t\tvendor=ibm\n\t\t;;\n\ttile*-*)\n\t\tos=${os:-linux-gnu}\n\t\t;;\n\n\t*)\n\t\t# Recognize the canonical CPU types that are allowed with any\n\t\t# company name.\n\t\tcase $cpu in\n\t\t\t1750a | 580 \\\n\t\t\t| a29k \\\n\t\t\t| aarch64 | aarch64_be \\\n\t\t\t| abacus \\\n\t\t\t| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] \\\n\t\t\t| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] \\\n\t\t\t| alphapca5[67] | alpha64pca5[67] \\\n\t\t\t| am33_2.0 \\\n\t\t\t| amdgcn \\\n\t\t\t| arc | arceb \\\n\t\t\t| arm  | arm[lb]e | arme[lb] | armv* \\\n\t\t\t| avr | avr32 \\\n\t\t\t| asmjs \\\n\t\t\t| ba \\\n\t\t\t| be32 | be64 \\\n\t\t\t| bfin | bs2000 \\\n\t\t\t| c[123]* | c30 | [cjt]90 | c4x \\\n\t\t\t| c8051 | clipper | craynv | csky | cydra \\\n\t\t\t| d10v | d30v | dlx | dsp16xx \\\n\t\t\t| e2k | elxsi | epiphany \\\n\t\t\t| f30[01] | f700 | fido | fr30 | frv | ft32 | fx80 \\\n\t\t\t| h8300 | h8500 \\\n\t\t\t| hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \\\n\t\t\t| hexagon \\\n\t\t\t| i370 | i*86 | i860 | i960 | ia16 | ia64 \\\n\t\t\t| ip2k | iq2000 \\\n\t\t\t| k1om \\\n\t\t\t| le32 | le64 \\\n\t\t\t| lm32 \\\n\t\t\t| m32c | m32r | m32rle \\\n\t\t\t| m5200 | m68000 | m680[012346]0 | m68360 | m683?2 | m68k | v70 | w65 \\\n\t\t\t| m6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x | nvptx | picochip \\\n\t\t\t| m88110 | m88k | maxq | mb | mcore | mep | metag \\\n\t\t\t| microblaze | microblazeel \\\n\t\t\t| mips | mipsbe | mipseb | mipsel | mipsle \\\n\t\t\t| mips16 \\\n\t\t\t| mips64 | mips64el \\\n\t\t\t| mips64octeon | mips64octeonel \\\n\t\t\t| mips64orion | mips64orionel \\\n\t\t\t| mips64r5900 | mips64r5900el \\\n\t\t\t| mips64vr | mips64vrel \\\n\t\t\t| mips64vr4100 | mips64vr4100el \\\n\t\t\t| mips64vr4300 | mips64vr4300el \\\n\t\t\t| mips64vr5000 | mips64vr5000el \\\n\t\t\t| mips64vr5900 | mips64vr5900el \\\n\t\t\t| mipsisa32 | mipsisa32el \\\n\t\t\t| mipsisa32r2 | mipsisa32r2el \\\n\t\t\t| mipsisa32r6 | mipsisa32r6el \\\n\t\t\t| mipsisa64 | mipsisa64el \\\n\t\t\t| mipsisa64r2 | mipsisa64r2el \\\n\t\t\t| mipsisa64r6 | mipsisa64r6el \\\n\t\t\t| mipsisa64sb1 | mipsisa64sb1el \\\n\t\t\t| mipsisa64sr71k | mipsisa64sr71kel \\\n\t\t\t| mipsr5900 | mipsr5900el \\\n\t\t\t| mipstx39 | mipstx39el \\\n\t\t\t| mmix \\\n\t\t\t| mn10200 | mn10300 \\\n\t\t\t| moxie \\\n\t\t\t| mt \\\n\t\t\t| msp430 \\\n\t\t\t| nds32 | nds32le | nds32be \\\n\t\t\t| nfp \\\n\t\t\t| nios | nios2 | nios2eb | nios2el \\\n\t\t\t| none | np1 | ns16k | ns32k \\\n\t\t\t| open8 \\\n\t\t\t| or1k* \\\n\t\t\t| or32 \\\n\t\t\t| orion \\\n\t\t\t| pdp10 | pdp11 | pj | pjl | pn | power \\\n\t\t\t| powerpc | powerpc64 | powerpc64le | powerpcle | powerpcspe \\\n\t\t\t| pru \\\n\t\t\t| pyramid \\\n\t\t\t| riscv | riscv32 | riscv64 \\\n\t\t\t| rl78 | romp | rs6000 | rx \\\n\t\t\t| score \\\n\t\t\t| sh | sh[1234] | sh[24]a | sh[24]ae[lb] | sh[23]e | she[lb] | sh[lb]e \\\n\t\t\t| sh[1234]e[lb] |  sh[12345][lb]e | sh[23]ele | sh64 | sh64le \\\n\t\t\t| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet \\\n\t\t\t| sparclite \\\n\t\t\t| sparcv8 | sparcv9 | sparcv9b | sparcv9v | sv1 | sx* \\\n\t\t\t| spu \\\n\t\t\t| tahoe \\\n\t\t\t| tic30 | tic4x | tic54x | tic55x | tic6x | tic80 \\\n\t\t\t| tron \\\n\t\t\t| ubicom32 \\\n\t\t\t| v850 | v850e | v850e1 | v850es | v850e2 | v850e2v3 \\\n\t\t\t| vax \\\n\t\t\t| visium \\\n\t\t\t| wasm32 \\\n\t\t\t| we32k \\\n\t\t\t| x86 | x86_64 | xc16x | xgate | xps100 \\\n\t\t\t| xstormy16 | xtensa* \\\n\t\t\t| ymp \\\n\t\t\t| z8k | z80)\n\t\t\t\t;;\n\n\t\t\t*)\n\t\t\t\techo Invalid configuration \\`\"$1\"\\': machine \\`\"$cpu-$vendor\"\\' not recognized 1>&2\n\t\t\t\texit 1\n\t\t\t\t;;\n\t\tesac\n\t\t;;\nesac\n\n# Here we canonicalize certain aliases for manufacturers.\ncase $vendor in\n\tdigital*)\n\t\tvendor=dec\n\t\t;;\n\tcommodore*)\n\t\tvendor=cbm\n\t\t;;\n\t*)\n\t\t;;\nesac\n\n# Decode manufacturer-specific aliases for certain operating systems.\n\nif [ x$os != x ]\nthen\ncase $os in\n\t# First match some system type aliases that might get confused\n\t# with valid system types.\n\t# solaris* is a basic system type, with this one exception.\n\tauroraux)\n\t\tos=auroraux\n\t\t;;\n\tbluegene*)\n\t\tos=cnk\n\t\t;;\n\tsolaris1 | solaris1.*)\n\t\tos=`echo $os | sed -e 's|solaris1|sunos4|'`\n\t\t;;\n\tsolaris)\n\t\tos=solaris2\n\t\t;;\n\tunixware*)\n\t\tos=sysv4.2uw\n\t\t;;\n\tgnu/linux*)\n\t\tos=`echo $os | sed -e 's|gnu/linux|linux-gnu|'`\n\t\t;;\n\t# es1800 is here to avoid being matched by es* (a different OS)\n\tes1800*)\n\t\tos=ose\n\t\t;;\n\t# Some version numbers need modification\n\tchorusos*)\n\t\tos=chorusos\n\t\t;;\n\tisc)\n\t\tos=isc2.2\n\t\t;;\n\tsco6)\n\t\tos=sco5v6\n\t\t;;\n\tsco5)\n\t\tos=sco3.2v5\n\t\t;;\n\tsco4)\n\t\tos=sco3.2v4\n\t\t;;\n\tsco3.2.[4-9]*)\n\t\tos=`echo $os | sed -e 's/sco3.2./sco3.2v/'`\n\t\t;;\n\tsco3.2v[4-9]* | sco5v6*)\n\t\t# Don't forget version if it is 3.2v4 or newer.\n\t\t;;\n\tscout)\n\t\t# Don't match below\n\t\t;;\n\tsco*)\n\t\tos=sco3.2v2\n\t\t;;\n\tpsos*)\n\t\tos=psos\n\t\t;;\n\t# Now accept the basic system types.\n\t# The portable systems comes first.\n\t# Each alternative MUST end in a * to match a version number.\n\t# sysv* is not here because it comes later, after sysvr4.\n\tgnu* | bsd* | mach* | minix* | genix* | ultrix* | irix* \\\n\t     | *vms* | esix* | aix* | cnk* | sunos | sunos[34]*\\\n\t     | hpux* | unos* | osf* | luna* | dgux* | auroraux* | solaris* \\\n\t     | sym* | kopensolaris* | plan9* \\\n\t     | amigaos* | amigados* | msdos* | newsos* | unicos* | aof* \\\n\t     | aos* | aros* | cloudabi* | sortix* \\\n\t     | nindy* | vxsim* | vxworks* | ebmon* | hms* | mvs* \\\n\t     | clix* | riscos* | uniplus* | iris* | isc* | rtu* | xenix* \\\n\t     | knetbsd* | mirbsd* | netbsd* \\\n\t     | bitrig* | openbsd* | solidbsd* | libertybsd* \\\n\t     | ekkobsd* | kfreebsd* | freebsd* | riscix* | lynxos* \\\n\t     | bosx* | nextstep* | cxux* | aout* | elf* | oabi* \\\n\t     | ptx* | coff* | ecoff* | winnt* | domain* | vsta* \\\n\t     | udi* | eabi* | lites* | ieee* | go32* | aux* | hcos* \\\n\t     | chorusrdb* | cegcc* | glidix* \\\n\t     | cygwin* | msys* | pe* | moss* | proelf* | rtems* \\\n\t     | midipix* | mingw32* | mingw64* | linux-gnu* | linux-android* \\\n\t     | linux-newlib* | linux-musl* | linux-uclibc* \\\n\t     | uxpv* | beos* | mpeix* | udk* | moxiebox* \\\n\t     | interix* | uwin* | mks* | rhapsody* | darwin* \\\n\t     | openstep* | oskit* | conix* | pw32* | nonstopux* \\\n\t     | storm-chaos* | tops10* | tenex* | tops20* | its* \\\n\t     | os2* | vos* | palmos* | uclinux* | nucleus* \\\n\t     | morphos* | superux* | rtmk* | windiss* \\\n\t     | powermax* | dnix* | nx6 | nx7 | sei* | dragonfly* \\\n\t     | skyos* | haiku* | rdos* | toppers* | drops* | es* \\\n\t     | onefs* | tirtos* | phoenix* | fuchsia* | redox* | bme* \\\n\t     | midnightbsd* | amdhsa* | unleashed*)\n\t# Remember, each alternative MUST END IN *, to match a version number.\n\t\t;;\n\tqnx*)\n\t\tcase $cpu in\n\t\t    x86 | i*86)\n\t\t\t;;\n\t\t    *)\n\t\t\tos=nto-$os\n\t\t\t;;\n\t\tesac\n\t\t;;\n\thiux*)\n\t\tos=hiuxwe2\n\t\t;;\n\tnto-qnx*)\n\t\t;;\n\tnto*)\n\t\tos=`echo $os | sed -e 's|nto|nto-qnx|'`\n\t\t;;\n\tsim | xray | os68k* | v88r* \\\n\t    | windows* | osx | abug | netware* | os9* \\\n\t    | macos* | mpw* | magic* | mmixware* | mon960* | lnews*)\n\t\t;;\n\tlinux-dietlibc)\n\t\tos=linux-dietlibc\n\t\t;;\n\tlinux*)\n\t\tos=`echo $os | sed -e 's|linux|linux-gnu|'`\n\t\t;;\n\tlynx*178)\n\t\tos=lynxos178\n\t\t;;\n\tlynx*5)\n\t\tos=lynxos5\n\t\t;;\n\tlynx*)\n\t\tos=lynxos\n\t\t;;\n\tmac*)\n\t\tos=`echo \"$os\" | sed -e 's|mac|macos|'`\n\t\t;;\n\topened*)\n\t\tos=openedition\n\t\t;;\n\tos400*)\n\t\tos=os400\n\t\t;;\n\tsunos5*)\n\t\tos=`echo \"$os\" | sed -e 's|sunos5|solaris2|'`\n\t\t;;\n\tsunos6*)\n\t\tos=`echo \"$os\" | sed -e 's|sunos6|solaris3|'`\n\t\t;;\n\twince*)\n\t\tos=wince\n\t\t;;\n\tutek*)\n\t\tos=bsd\n\t\t;;\n\tdynix*)\n\t\tos=bsd\n\t\t;;\n\tacis*)\n\t\tos=aos\n\t\t;;\n\tatheos*)\n\t\tos=atheos\n\t\t;;\n\tsyllable*)\n\t\tos=syllable\n\t\t;;\n\t386bsd)\n\t\tos=bsd\n\t\t;;\n\tctix* | uts*)\n\t\tos=sysv\n\t\t;;\n\tnova*)\n\t\tos=rtmk-nova\n\t\t;;\n\tns2)\n\t\tos=nextstep2\n\t\t;;\n\tnsk*)\n\t\tos=nsk\n\t\t;;\n\t# Preserve the version number of sinix5.\n\tsinix5.*)\n\t\tos=`echo $os | sed -e 's|sinix|sysv|'`\n\t\t;;\n\tsinix*)\n\t\tos=sysv4\n\t\t;;\n\ttpf*)\n\t\tos=tpf\n\t\t;;\n\ttriton*)\n\t\tos=sysv3\n\t\t;;\n\toss*)\n\t\tos=sysv3\n\t\t;;\n\tsvr4*)\n\t\tos=sysv4\n\t\t;;\n\tsvr3)\n\t\tos=sysv3\n\t\t;;\n\tsysvr4)\n\t\tos=sysv4\n\t\t;;\n\t# This must come after sysvr4.\n\tsysv*)\n\t\t;;\n\tose*)\n\t\tos=ose\n\t\t;;\n\t*mint | mint[0-9]* | *MiNT | MiNT[0-9]*)\n\t\tos=mint\n\t\t;;\n\tzvmoe)\n\t\tos=zvmoe\n\t\t;;\n\tdicos*)\n\t\tos=dicos\n\t\t;;\n\tpikeos*)\n\t\t# Until real need of OS specific support for\n\t\t# particular features comes up, bare metal\n\t\t# configurations are quite functional.\n\t\tcase $cpu in\n\t\t    arm*)\n\t\t\tos=eabi\n\t\t\t;;\n\t\t    *)\n\t\t\tos=elf\n\t\t\t;;\n\t\tesac\n\t\t;;\n\tnacl*)\n\t\t;;\n\tios)\n\t\t;;\n\tnone)\n\t\t;;\n\t*-eabi)\n\t\t;;\n\t*)\n\t\techo Invalid configuration \\`\"$1\"\\': system \\`\"$os\"\\' not recognized 1>&2\n\t\texit 1\n\t\t;;\nesac\nelse\n\n# Here we handle the default operating systems that come with various machines.\n# The value should be what the vendor currently ships out the door with their\n# machine or put another way, the most popular os provided with the machine.\n\n# Note that if you're going to try to match \"-MANUFACTURER\" here (say,\n# \"-sun\"), then you have to tell the case statement up towards the top\n# that MANUFACTURER isn't an operating system.  Otherwise, code above\n# will signal an error saying that MANUFACTURER isn't an operating\n# system, and we'll never get to this point.\n\ncase $cpu-$vendor in\n\tscore-*)\n\t\tos=elf\n\t\t;;\n\tspu-*)\n\t\tos=elf\n\t\t;;\n\t*-acorn)\n\t\tos=riscix1.2\n\t\t;;\n\tarm*-rebel)\n\t\tos=linux\n\t\t;;\n\tarm*-semi)\n\t\tos=aout\n\t\t;;\n\tc4x-* | tic4x-*)\n\t\tos=coff\n\t\t;;\n\tc8051-*)\n\t\tos=elf\n\t\t;;\n\tclipper-intergraph)\n\t\tos=clix\n\t\t;;\n\thexagon-*)\n\t\tos=elf\n\t\t;;\n\ttic54x-*)\n\t\tos=coff\n\t\t;;\n\ttic55x-*)\n\t\tos=coff\n\t\t;;\n\ttic6x-*)\n\t\tos=coff\n\t\t;;\n\t# This must come before the *-dec entry.\n\tpdp10-*)\n\t\tos=tops20\n\t\t;;\n\tpdp11-*)\n\t\tos=none\n\t\t;;\n\t*-dec | vax-*)\n\t\tos=ultrix4.2\n\t\t;;\n\tm68*-apollo)\n\t\tos=domain\n\t\t;;\n\ti386-sun)\n\t\tos=sunos4.0.2\n\t\t;;\n\tm68000-sun)\n\t\tos=sunos3\n\t\t;;\n\tm68*-cisco)\n\t\tos=aout\n\t\t;;\n\tmep-*)\n\t\tos=elf\n\t\t;;\n\tmips*-cisco)\n\t\tos=elf\n\t\t;;\n\tmips*-*)\n\t\tos=elf\n\t\t;;\n\tor32-*)\n\t\tos=coff\n\t\t;;\n\t*-tti)\t# must be before sparc entry or we get the wrong os.\n\t\tos=sysv3\n\t\t;;\n\tsparc-* | *-sun)\n\t\tos=sunos4.1.1\n\t\t;;\n\tpru-*)\n\t\tos=elf\n\t\t;;\n\t*-be)\n\t\tos=beos\n\t\t;;\n\t*-ibm)\n\t\tos=aix\n\t\t;;\n\t*-knuth)\n\t\tos=mmixware\n\t\t;;\n\t*-wec)\n\t\tos=proelf\n\t\t;;\n\t*-winbond)\n\t\tos=proelf\n\t\t;;\n\t*-oki)\n\t\tos=proelf\n\t\t;;\n\t*-hp)\n\t\tos=hpux\n\t\t;;\n\t*-hitachi)\n\t\tos=hiux\n\t\t;;\n\ti860-* | *-att | *-ncr | *-altos | *-motorola | *-convergent)\n\t\tos=sysv\n\t\t;;\n\t*-cbm)\n\t\tos=amigaos\n\t\t;;\n\t*-dg)\n\t\tos=dgux\n\t\t;;\n\t*-dolphin)\n\t\tos=sysv3\n\t\t;;\n\tm68k-ccur)\n\t\tos=rtu\n\t\t;;\n\tm88k-omron*)\n\t\tos=luna\n\t\t;;\n\t*-next)\n\t\tos=nextstep\n\t\t;;\n\t*-sequent)\n\t\tos=ptx\n\t\t;;\n\t*-crds)\n\t\tos=unos\n\t\t;;\n\t*-ns)\n\t\tos=genix\n\t\t;;\n\ti370-*)\n\t\tos=mvs\n\t\t;;\n\t*-gould)\n\t\tos=sysv\n\t\t;;\n\t*-highlevel)\n\t\tos=bsd\n\t\t;;\n\t*-encore)\n\t\tos=bsd\n\t\t;;\n\t*-sgi)\n\t\tos=irix\n\t\t;;\n\t*-siemens)\n\t\tos=sysv4\n\t\t;;\n\t*-masscomp)\n\t\tos=rtu\n\t\t;;\n\tf30[01]-fujitsu | f700-fujitsu)\n\t\tos=uxpv\n\t\t;;\n\t*-rom68k)\n\t\tos=coff\n\t\t;;\n\t*-*bug)\n\t\tos=coff\n\t\t;;\n\t*-apple)\n\t\tos=macos\n\t\t;;\n\t*-atari*)\n\t\tos=mint\n\t\t;;\n\t*-wrs)\n\t\tos=vxworks\n\t\t;;\n\t*)\n\t\tos=none\n\t\t;;\nesac\nfi\n\n# Here we handle the case where we know the os, and the CPU type, but not the\n# manufacturer.  We pick the logical manufacturer.\ncase $vendor in\n\tunknown)\n\t\tcase $os in\n\t\t\triscix*)\n\t\t\t\tvendor=acorn\n\t\t\t\t;;\n\t\t\tsunos*)\n\t\t\t\tvendor=sun\n\t\t\t\t;;\n\t\t\tcnk*|-aix*)\n\t\t\t\tvendor=ibm\n\t\t\t\t;;\n\t\t\tbeos*)\n\t\t\t\tvendor=be\n\t\t\t\t;;\n\t\t\thpux*)\n\t\t\t\tvendor=hp\n\t\t\t\t;;\n\t\t\tmpeix*)\n\t\t\t\tvendor=hp\n\t\t\t\t;;\n\t\t\thiux*)\n\t\t\t\tvendor=hitachi\n\t\t\t\t;;\n\t\t\tunos*)\n\t\t\t\tvendor=crds\n\t\t\t\t;;\n\t\t\tdgux*)\n\t\t\t\tvendor=dg\n\t\t\t\t;;\n\t\t\tluna*)\n\t\t\t\tvendor=omron\n\t\t\t\t;;\n\t\t\tgenix*)\n\t\t\t\tvendor=ns\n\t\t\t\t;;\n\t\t\tclix*)\n\t\t\t\tvendor=intergraph\n\t\t\t\t;;\n\t\t\tmvs* | opened*)\n\t\t\t\tvendor=ibm\n\t\t\t\t;;\n\t\t\tos400*)\n\t\t\t\tvendor=ibm\n\t\t\t\t;;\n\t\t\tptx*)\n\t\t\t\tvendor=sequent\n\t\t\t\t;;\n\t\t\ttpf*)\n\t\t\t\tvendor=ibm\n\t\t\t\t;;\n\t\t\tvxsim* | vxworks* | windiss*)\n\t\t\t\tvendor=wrs\n\t\t\t\t;;\n\t\t\taux*)\n\t\t\t\tvendor=apple\n\t\t\t\t;;\n\t\t\thms*)\n\t\t\t\tvendor=hitachi\n\t\t\t\t;;\n\t\t\tmpw* | macos*)\n\t\t\t\tvendor=apple\n\t\t\t\t;;\n\t\t\t*mint | mint[0-9]* | *MiNT | MiNT[0-9]*)\n\t\t\t\tvendor=atari\n\t\t\t\t;;\n\t\t\tvos*)\n\t\t\t\tvendor=stratus\n\t\t\t\t;;\n\t\tesac\n\t\t;;\nesac\n\necho \"$cpu-$vendor-$os\"\nexit\n\n# Local variables:\n# eval: (add-hook 'before-save-hook 'time-stamp)\n# time-stamp-start: \"timestamp='\"\n# time-stamp-format: \"%:y-%02m-%02d\"\n# time-stamp-end: \"'\"\n# End:\n"
        },
        {
          "name": "configs",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure",
          "type": "blob",
          "size": 1238.1279296875,
          "content": "#! /bin/sh\n# Guess values for system-dependent variables and create Makefiles.\n# Generated by GNU Autoconf 2.72 for asterisk master.\n#\n# Report bugs to <https://github.com/asterisk/asterisk/issues>.\n#\n#\n# Copyright (C) 1992-1996, 1998-2017, 2020-2023 Free Software Foundation,\n# Inc.\n#\n#\n# This configure script is free software; the Free Software Foundation\n# gives unlimited permission to copy, distribute and modify it.\n#\n# \"Asterisk\"\n## -------------------- ##\n## M4sh Initialization. ##\n## -------------------- ##\n\n# Be more Bourne compatible\nDUALCASE=1; export DUALCASE # for MKS sh\nif test ${ZSH_VERSION+y} && (emulate sh) >/dev/null 2>&1\nthen :\n  emulate sh\n  NULLCMD=:\n  # Pre-4.2 versions of Zsh do word splitting on ${1+\"$@\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '${1+\"$@\"}'='\"$@\"'\n  setopt NO_GLOB_SUBST\nelse case e in #(\n  e) case `(set -o) 2>/dev/null` in #(\n  *posix*) :\n    set -o posix ;; #(\n  *) :\n     ;;\nesac ;;\nesac\nfi\n\n\n\n# Reset variables that may have inherited troublesome values from\n# the environment.\n\n# IFS needs to be set, to space, tab, and newline, in precisely that order.\n# (If _AS_PATH_WALK were called with IFS unset, it would have the\n# side effect of setting IFS to empty, thus disabling word splitting.)\n# Quoting is to prevent editors from complaining about space-tab.\nas_nl='\n'\nexport as_nl\nIFS=\" \"\"\t$as_nl\"\n\nPS1='$ '\nPS2='> '\nPS4='+ '\n\n# Ensure predictable behavior from utilities with locale-dependent output.\nLC_ALL=C\nexport LC_ALL\nLANGUAGE=C\nexport LANGUAGE\n\n# We cannot yet rely on \"unset\" to work, but we need these variables\n# to be unset--not just set to an empty or harmless value--now, to\n# avoid bugs in old shells (e.g. pre-3.0 UWIN ksh).  This construct\n# also avoids known problems related to \"unset\" and subshell syntax\n# in other old shells (e.g. bash 2.01 and pdksh 5.2.14).\nfor as_var in BASH_ENV ENV MAIL MAILPATH CDPATH\ndo eval test \\${$as_var+y} \\\n  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :\ndone\n\n# Ensure that fds 0, 1, and 2 are open.\nif (exec 3>&0) 2>/dev/null; then :; else exec 0</dev/null; fi\nif (exec 3>&1) 2>/dev/null; then :; else exec 1>/dev/null; fi\nif (exec 3>&2)            ; then :; else exec 2>/dev/null; fi\n\n# The user is always right.\nif ${PATH_SEPARATOR+false} :; then\n  PATH_SEPARATOR=:\n  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {\n    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||\n      PATH_SEPARATOR=';'\n  }\nfi\n\n\n# Find who we are.  Look in the path if we contain no directory separator.\nas_myself=\ncase $0 in #((\n  *[\\\\/]* ) as_myself=$0 ;;\n  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    test -r \"$as_dir$0\" && as_myself=$as_dir$0 && break\n  done\nIFS=$as_save_IFS\n\n     ;;\nesac\n# We did not find ourselves, most probably we were run as 'sh COMMAND'\n# in which case we are not to be found in the path.\nif test \"x$as_myself\" = x; then\n  as_myself=$0\nfi\nif test ! -f \"$as_myself\"; then\n  printf \"%s\\n\" \"$as_myself: error: cannot find myself; rerun with an absolute file name\" >&2\n  exit 1\nfi\n\n\n# Use a proper internal environment variable to ensure we don't fall\n  # into an infinite loop, continuously re-executing ourselves.\n  if test x\"${_as_can_reexec}\" != xno && test \"x$CONFIG_SHELL\" != x; then\n    _as_can_reexec=no; export _as_can_reexec;\n    # We cannot yet assume a decent shell, so we have to provide a\n# neutralization value for shells without unset; and this also\n# works around shells that cannot unset nonexistent variables.\n# Preserve -v and -x to the replacement shell.\nBASH_ENV=/dev/null\nENV=/dev/null\n(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV\ncase $- in # ((((\n  *v*x* | *x*v* ) as_opts=-vx ;;\n  *v* ) as_opts=-v ;;\n  *x* ) as_opts=-x ;;\n  * ) as_opts= ;;\nesac\nexec $CONFIG_SHELL $as_opts \"$as_myself\" ${1+\"$@\"}\n# Admittedly, this is quite paranoid, since all the known shells bail\n# out after a failed 'exec'.\nprintf \"%s\\n\" \"$0: could not re-execute with $CONFIG_SHELL\" >&2\nexit 255\n  fi\n  # We don't want this to propagate to other subprocesses.\n          { _as_can_reexec=; unset _as_can_reexec;}\nif test \"x$CONFIG_SHELL\" = x; then\n  as_bourne_compatible=\"if test \\${ZSH_VERSION+y} && (emulate sh) >/dev/null 2>&1\nthen :\n  emulate sh\n  NULLCMD=:\n  # Pre-4.2 versions of Zsh do word splitting on \\${1+\\\"\\$@\\\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '\\${1+\\\"\\$@\\\"}'='\\\"\\$@\\\"'\n  setopt NO_GLOB_SUBST\nelse case e in #(\n  e) case \\`(set -o) 2>/dev/null\\` in #(\n  *posix*) :\n    set -o posix ;; #(\n  *) :\n     ;;\nesac ;;\nesac\nfi\n\"\n  as_required=\"as_fn_return () { (exit \\$1); }\nas_fn_success () { as_fn_return 0; }\nas_fn_failure () { as_fn_return 1; }\nas_fn_ret_success () { return 0; }\nas_fn_ret_failure () { return 1; }\n\nexitcode=0\nas_fn_success || { exitcode=1; echo as_fn_success failed.; }\nas_fn_failure && { exitcode=1; echo as_fn_failure succeeded.; }\nas_fn_ret_success || { exitcode=1; echo as_fn_ret_success failed.; }\nas_fn_ret_failure && { exitcode=1; echo as_fn_ret_failure succeeded.; }\nif ( set x; as_fn_ret_success y && test x = \\\"\\$1\\\" )\nthen :\n\nelse case e in #(\n  e) exitcode=1; echo positional parameters were not saved. ;;\nesac\nfi\ntest x\\$exitcode = x0 || exit 1\nblah=\\$(echo \\$(echo blah))\ntest x\\\"\\$blah\\\" = xblah || exit 1\ntest -x / || exit 1\"\n  as_suggested=\"  as_lineno_1=\";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested\" as_lineno_1a=\\$LINENO\n  as_lineno_2=\";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested\" as_lineno_2a=\\$LINENO\n  eval 'test \\\"x\\$as_lineno_1'\\$as_run'\\\" != \\\"x\\$as_lineno_2'\\$as_run'\\\" &&\n  test \\\"x\\`expr \\$as_lineno_1'\\$as_run' + 1\\`\\\" = \\\"x\\$as_lineno_2'\\$as_run'\\\"' || exit 1\ntest \\$(( 1 + 1 )) = 2 || exit 1\"\n  if (eval \"$as_required\") 2>/dev/null\nthen :\n  as_have_required=yes\nelse case e in #(\n  e) as_have_required=no ;;\nesac\nfi\n  if test x$as_have_required = xyes && (eval \"$as_suggested\") 2>/dev/null\nthen :\n\nelse case e in #(\n  e) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nas_found=false\nfor as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n  as_found=:\n  case $as_dir in #(\n\t /*)\n\t   for as_base in sh bash ksh sh5; do\n\t     # Try only shells that exist, to save several forks.\n\t     as_shell=$as_dir$as_base\n\t     if { test -f \"$as_shell\" || test -f \"$as_shell.exe\"; } &&\n\t\t    as_run=a \"$as_shell\" -c \"$as_bourne_compatible\"\"$as_required\" 2>/dev/null\nthen :\n  CONFIG_SHELL=$as_shell as_have_required=yes\n\t\t   if as_run=a \"$as_shell\" -c \"$as_bourne_compatible\"\"$as_suggested\" 2>/dev/null\nthen :\n  break 2\nfi\nfi\n\t   done;;\n       esac\n  as_found=false\ndone\nIFS=$as_save_IFS\nif $as_found\nthen :\n\nelse case e in #(\n  e) if { test -f \"$SHELL\" || test -f \"$SHELL.exe\"; } &&\n\t      as_run=a \"$SHELL\" -c \"$as_bourne_compatible\"\"$as_required\" 2>/dev/null\nthen :\n  CONFIG_SHELL=$SHELL as_have_required=yes\nfi ;;\nesac\nfi\n\n\n      if test \"x$CONFIG_SHELL\" != x\nthen :\n  export CONFIG_SHELL\n             # We cannot yet assume a decent shell, so we have to provide a\n# neutralization value for shells without unset; and this also\n# works around shells that cannot unset nonexistent variables.\n# Preserve -v and -x to the replacement shell.\nBASH_ENV=/dev/null\nENV=/dev/null\n(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV\ncase $- in # ((((\n  *v*x* | *x*v* ) as_opts=-vx ;;\n  *v* ) as_opts=-v ;;\n  *x* ) as_opts=-x ;;\n  * ) as_opts= ;;\nesac\nexec $CONFIG_SHELL $as_opts \"$as_myself\" ${1+\"$@\"}\n# Admittedly, this is quite paranoid, since all the known shells bail\n# out after a failed 'exec'.\nprintf \"%s\\n\" \"$0: could not re-execute with $CONFIG_SHELL\" >&2\nexit 255\nfi\n\n    if test x$as_have_required = xno\nthen :\n  printf \"%s\\n\" \"$0: This script requires a shell more modern than all\"\n  printf \"%s\\n\" \"$0: the shells that I found on your system.\"\n  if test ${ZSH_VERSION+y} ; then\n    printf \"%s\\n\" \"$0: In particular, zsh $ZSH_VERSION has bugs and should\"\n    printf \"%s\\n\" \"$0: be upgraded to zsh 4.3.4 or later.\"\n  else\n    printf \"%s\\n\" \"$0: Please tell bug-autoconf@gnu.org and\n$0: https://github.com/asterisk/asterisk/issues about your\n$0: system, including any error possibly output before this\n$0: message. Then install a modern shell, or manually run\n$0: the script under such a shell if you do have one.\"\n  fi\n  exit 1\nfi ;;\nesac\nfi\nfi\nSHELL=${CONFIG_SHELL-/bin/sh}\nexport SHELL\n# Unset more variables known to interfere with behavior of common tools.\nCLICOLOR_FORCE= GREP_OPTIONS=\nunset CLICOLOR_FORCE GREP_OPTIONS\n\n## --------------------- ##\n## M4sh Shell Functions. ##\n## --------------------- ##\n# as_fn_unset VAR\n# ---------------\n# Portably unset VAR.\nas_fn_unset ()\n{\n  { eval $1=; unset $1;}\n}\nas_unset=as_fn_unset\n\n\n# as_fn_set_status STATUS\n# -----------------------\n# Set $? to STATUS, without forking.\nas_fn_set_status ()\n{\n  return $1\n} # as_fn_set_status\n\n# as_fn_exit STATUS\n# -----------------\n# Exit the shell with STATUS, even in a \"trap 0\" or \"set -e\" context.\nas_fn_exit ()\n{\n  set +e\n  as_fn_set_status $1\n  exit $1\n} # as_fn_exit\n\n# as_fn_mkdir_p\n# -------------\n# Create \"$as_dir\" as a directory, including parents if necessary.\nas_fn_mkdir_p ()\n{\n\n  case $as_dir in #(\n  -*) as_dir=./$as_dir;;\n  esac\n  test -d \"$as_dir\" || eval $as_mkdir_p || {\n    as_dirs=\n    while :; do\n      case $as_dir in #(\n      *\\'*) as_qdir=`printf \"%s\\n\" \"$as_dir\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"`;; #'(\n      *) as_qdir=$as_dir;;\n      esac\n      as_dirs=\"'$as_qdir' $as_dirs\"\n      as_dir=`$as_dirname -- \"$as_dir\" ||\n$as_expr X\"$as_dir\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t X\"$as_dir\" : 'X\\(//\\)[^/]' \\| \\\n\t X\"$as_dir\" : 'X\\(//\\)$' \\| \\\n\t X\"$as_dir\" : 'X\\(/\\)' \\| . 2>/dev/null ||\nprintf \"%s\\n\" X\"$as_dir\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)[^/].*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n      test -d \"$as_dir\" && break\n    done\n    test -z \"$as_dirs\" || eval \"mkdir $as_dirs\"\n  } || test -d \"$as_dir\" || as_fn_error $? \"cannot create directory $as_dir\"\n\n\n} # as_fn_mkdir_p\n\n# as_fn_executable_p FILE\n# -----------------------\n# Test if FILE is an executable regular file.\nas_fn_executable_p ()\n{\n  test -f \"$1\" && test -x \"$1\"\n} # as_fn_executable_p\n# as_fn_append VAR VALUE\n# ----------------------\n# Append the text in VALUE to the end of the definition contained in VAR. Take\n# advantage of any shell optimizations that allow amortized linear growth over\n# repeated appends, instead of the typical quadratic growth present in naive\n# implementations.\nif (eval \"as_var=1; as_var+=2; test x\\$as_var = x12\") 2>/dev/null\nthen :\n  eval 'as_fn_append ()\n  {\n    eval $1+=\\$2\n  }'\nelse case e in #(\n  e) as_fn_append ()\n  {\n    eval $1=\\$$1\\$2\n  } ;;\nesac\nfi # as_fn_append\n\n# as_fn_arith ARG...\n# ------------------\n# Perform arithmetic evaluation on the ARGs, and store the result in the\n# global $as_val. Take advantage of shells that can avoid forks. The arguments\n# must be portable across $(()) and expr.\nif (eval \"test \\$(( 1 + 1 )) = 2\") 2>/dev/null\nthen :\n  eval 'as_fn_arith ()\n  {\n    as_val=$(( $* ))\n  }'\nelse case e in #(\n  e) as_fn_arith ()\n  {\n    as_val=`expr \"$@\" || test $? -eq 1`\n  } ;;\nesac\nfi # as_fn_arith\n\n\n# as_fn_error STATUS ERROR [LINENO LOG_FD]\n# ----------------------------------------\n# Output \"`basename $0`: error: ERROR\" to stderr. If LINENO and LOG_FD are\n# provided, also output the error to LOG_FD, referencing LINENO. Then exit the\n# script with STATUS, using 1 if that was 0.\nas_fn_error ()\n{\n  as_status=$1; test $as_status -eq 0 && as_status=1\n  if test \"$4\"; then\n    as_lineno=${as_lineno-\"$3\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: $2\" >&$4\n  fi\n  printf \"%s\\n\" \"$as_me: error: $2\" >&2\n  as_fn_exit $as_status\n} # as_fn_error\n\nif expr a : '\\(a\\)' >/dev/null 2>&1 &&\n   test \"X`expr 00001 : '.*\\(...\\)'`\" = X001; then\n  as_expr=expr\nelse\n  as_expr=false\nfi\n\nif (basename -- /) >/dev/null 2>&1 && test \"X`basename -- / 2>&1`\" = \"X/\"; then\n  as_basename=basename\nelse\n  as_basename=false\nfi\n\nif (as_dir=`dirname -- /` && test \"X$as_dir\" = X/) >/dev/null 2>&1; then\n  as_dirname=dirname\nelse\n  as_dirname=false\nfi\n\nas_me=`$as_basename -- \"$0\" ||\n$as_expr X/\"$0\" : '.*/\\([^/][^/]*\\)/*$' \\| \\\n\t X\"$0\" : 'X\\(//\\)$' \\| \\\n\t X\"$0\" : 'X\\(/\\)' \\| . 2>/dev/null ||\nprintf \"%s\\n\" X/\"$0\" |\n    sed '/^.*\\/\\([^/][^/]*\\)\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\/\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\/\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n\n# Avoid depending upon Character Ranges.\nas_cr_letters='abcdefghijklmnopqrstuvwxyz'\nas_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nas_cr_Letters=$as_cr_letters$as_cr_LETTERS\nas_cr_digits='0123456789'\nas_cr_alnum=$as_cr_Letters$as_cr_digits\n\n\n  as_lineno_1=$LINENO as_lineno_1a=$LINENO\n  as_lineno_2=$LINENO as_lineno_2a=$LINENO\n  eval 'test \"x$as_lineno_1'$as_run'\" != \"x$as_lineno_2'$as_run'\" &&\n  test \"x`expr $as_lineno_1'$as_run' + 1`\" = \"x$as_lineno_2'$as_run'\"' || {\n  # Blame Lee E. McMahon (1931-1989) for sed's syntax.  :-)\n  sed -n '\n    p\n    /[$]LINENO/=\n  ' <$as_myself |\n    sed '\n      t clear\n      :clear\n      s/[$]LINENO.*/&-/\n      t lineno\n      b\n      :lineno\n      N\n      :loop\n      s/[$]LINENO\\([^'$as_cr_alnum'_].*\\n\\)\\(.*\\)/\\2\\1\\2/\n      t loop\n      s/-\\n.*//\n    ' >$as_me.lineno &&\n  chmod +x \"$as_me.lineno\" ||\n    { printf \"%s\\n\" \"$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell\" >&2; as_fn_exit 1; }\n\n  # If we had to re-execute with $CONFIG_SHELL, we're ensured to have\n  # already done that, so ensure we don't try to do so again and fall\n  # in an infinite loop.  This has already happened in practice.\n  _as_can_reexec=no; export _as_can_reexec\n  # Don't try to exec as it changes $[0], causing all sort of problems\n  # (the dirname of $[0] is not the place where we might find the\n  # original and so on.  Autoconf is especially sensitive to this).\n  . \"./$as_me.lineno\"\n  # Exit status is that of the last command.\n  exit\n}\n\n\n# Determine whether it's possible to make 'echo' print without a newline.\n# These variables are no longer used directly by Autoconf, but are AC_SUBSTed\n# for compatibility with existing Makefiles.\nECHO_C= ECHO_N= ECHO_T=\ncase `echo -n x` in #(((((\n-n*)\n  case `echo 'xy\\c'` in\n  *c*) ECHO_T='\t';;\t# ECHO_T is single tab character.\n  xy)  ECHO_C='\\c';;\n  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null\n       ECHO_T='\t';;\n  esac;;\n*)\n  ECHO_N='-n';;\nesac\n\n# For backward compatibility with old third-party macros, we provide\n# the shell variables $as_echo and $as_echo_n.  New code should use\n# AS_ECHO([\"message\"]) and AS_ECHO_N([\"message\"]), respectively.\nas_echo='printf %s\\n'\nas_echo_n='printf %s'\n\nrm -f conf$$ conf$$.exe conf$$.file\nif test -d conf$$.dir; then\n  rm -f conf$$.dir/conf$$.file\nelse\n  rm -f conf$$.dir\n  mkdir conf$$.dir 2>/dev/null\nfi\nif (echo >conf$$.file) 2>/dev/null; then\n  if ln -s conf$$.file conf$$ 2>/dev/null; then\n    as_ln_s='ln -s'\n    # ... but there are two gotchas:\n    # 1) On MSYS, both 'ln -s file dir' and 'ln file dir' fail.\n    # 2) DJGPP < 2.04 has no symlinks; 'ln -s' creates a wrapper executable.\n    # In both cases, we have to default to 'cp -pR'.\n    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||\n      as_ln_s='cp -pR'\n  elif ln conf$$.file conf$$ 2>/dev/null; then\n    as_ln_s=ln\n  else\n    as_ln_s='cp -pR'\n  fi\nelse\n  as_ln_s='cp -pR'\nfi\nrm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file\nrmdir conf$$.dir 2>/dev/null\n\nif mkdir -p . 2>/dev/null; then\n  as_mkdir_p='mkdir -p \"$as_dir\"'\nelse\n  test -d ./-p && rmdir ./-p\n  as_mkdir_p=false\nfi\n\nas_test_x='test -x'\nas_executable_p=as_fn_executable_p\n\n# Sed expression to map a string onto a valid CPP name.\nas_sed_cpp=\"y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g\"\nas_tr_cpp=\"eval sed '$as_sed_cpp'\" # deprecated\n\n# Sed expression to map a string onto a valid variable name.\nas_sed_sh=\"y%*+%pp%;s%[^_$as_cr_alnum]%_%g\"\nas_tr_sh=\"eval sed '$as_sed_sh'\" # deprecated\n\n\ntest -n \"$DJDIR\" || exec 7<&0 </dev/null\nexec 6>&1\n\n# Name of the host.\n# hostname on some systems (SVR3.2, old GNU/Linux) returns a bogus exit status,\n# so uname gets run too.\nac_hostname=`(hostname || uname -n) 2>/dev/null | sed 1q`\n\n#\n# Initializations.\n#\nac_default_prefix=/usr/local\nac_clean_files=\nac_config_libobj_dir=.\nLIBOBJS=\ncross_compiling=no\nsubdirs=\nMFLAGS=\nMAKEFLAGS=\n\n# Identity of this package.\nPACKAGE_NAME='asterisk'\nPACKAGE_TARNAME='asterisk'\nPACKAGE_VERSION='master'\nPACKAGE_STRING='asterisk master'\nPACKAGE_BUGREPORT='https://github.com/asterisk/asterisk/issues'\nPACKAGE_URL=''\n\nac_unique_file=\"main/asterisk.c\"\n# Factoring default headers for most tests.\nac_includes_default=\"\\\n#include <stddef.h>\n#ifdef HAVE_STDIO_H\n# include <stdio.h>\n#endif\n#ifdef HAVE_STDLIB_H\n# include <stdlib.h>\n#endif\n#ifdef HAVE_STRING_H\n# include <string.h>\n#endif\n#ifdef HAVE_INTTYPES_H\n# include <inttypes.h>\n#endif\n#ifdef HAVE_STDINT_H\n# include <stdint.h>\n#endif\n#ifdef HAVE_STRINGS_H\n# include <strings.h>\n#endif\n#ifdef HAVE_SYS_TYPES_H\n# include <sys/types.h>\n#endif\n#ifdef HAVE_SYS_STAT_H\n# include <sys/stat.h>\n#endif\n#ifdef HAVE_UNISTD_H\n# include <unistd.h>\n#endif\"\n\nac_header_c_list=\nac_func_c_list=\nenable_year2038=no\nac_subst_vars='LTLIBOBJS\nPBX_SYSLOG\nPBX_SYSLOG_FACILITY_LOG_UUCP\nPBX_SYSLOG_FACILITY_LOG_SYSLOG\nPBX_SYSLOG_FACILITY_LOG_NEWS\nPBX_SYSLOG_FACILITY_LOG_MAIL\nPBX_SYSLOG_FACILITY_LOG_LPR\nPBX_SYSLOG_FACILITY_LOG_KERN\nPBX_SYSLOG_FACILITY_LOG_FTP\nPBX_SYSLOG_FACILITY_LOG_DAEMON\nPBX_SYSLOG_FACILITY_LOG_CRON\nPBX_SYSLOG_FACILITY_LOG_AUTHPRIV\nPBX_SYSLOG_FACILITY_LOG_AUTH\nSYSTEMD_LIBS\nSYSTEMD_CFLAGS\nSYSTEMD_INCLUDE\nSYSTEMD_LIB\nPBX_SYSTEMD\nPBX_GENERIC_ODBC\nGENERIC_ODBC_INCLUDE\nGENERIC_ODBC_LIB\nGTK2_LIBS\nGTK2_CFLAGS\nPBX_LAUNCHD\nCONFIG_SDL\nGMIME_LIBS\nGMIME_CFLAGS\nPORTAUDIO_LIBS\nPORTAUDIO_CFLAGS\nPYTHONDEV_LIBS\nPYTHONDEV_CFLAGS\nPYTHONDEV_INCLUDE\nPYTHONDEV_LIB\nPJPROJECT_LIBS\nPJPROJECT_CFLAGS\nPG_CONFIG\nCONFIG_NETSNMP\nNETSNMP_LIBS\nNETSNMP_CFLAGS\nCONFIG_NEON29\nCONFIG_NEON\nCONFIG_MYSQLCLIENT\nILBC_LIBS\nILBC_CFLAGS\nILBC_INTERNAL\nGSM_INTERNAL\nPBX_DAHDI_HALF_FULL\nPBX_DLADDR\nPBX_IP_MTU_DISCOVER\nPBX_RTLD_NOLOAD\nPBX_GLOB_BRACE\nPBX_GLOB_NOMAGIC\nBIND8_CFLAGS\nAST_RPATH\nAST_NATIVE_ARCH\nAST_SHADOW_WARNINGS\nAST_NO_STRINGOP_TRUNCATION\nAST_NO_FORMAT_Y2K\nAST_NO_FORMAT_TRUNCATION\nAST_NO_STRICT_OVERFLOW\nAST_FORTIFY_SOURCE\nAST_TRAMPOLINES\nAST_DECLARATION_AFTER_STATEMENT\nAST_UNDEFINED_SANITIZER\nAST_LEAK_SANITIZER\nAST_THREAD_SANITIZER\nAST_ADDRESS_SANITIZER\nPBX_PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP\nPBX_PTHREAD_RWLOCK_INITIALIZER\nAST_ASTERISKSSL\nHAS_POLL\nPBX_DYNAMIC_LIST\nPOW_LIB\nPBX_WORKING_FORK\nLIBOBJS\nPERMANENT_DLOPEN\nDISABLE_XMLDOC\nCONFIG_LIBXML2\nLIBXML2_LIBS\nLIBXML2_CFLAGS\nLIBJWT_LIBS\nLIBJWT_CFLAGS\nJANSSON_LIBS\nJANSSON_CFLAGS\nUUID_LIB\nUUID_INCLUDE\nLIBEDIT_LIBS\nLIBEDIT_CFLAGS\nALLOCA\nPBX_ZLIB\nZLIB_DIR\nZLIB_INCLUDE\nZLIB_LIB\nPBX_X11\nX11_DIR\nX11_INCLUDE\nX11_LIB\nPBX_VORBIS\nVORBIS_DIR\nVORBIS_INCLUDE\nVORBIS_LIB\nPBX_UNIXODBC\nUNIXODBC_DIR\nUNIXODBC_INCLUDE\nUNIXODBC_LIB\nPBX_UNBOUND\nUNBOUND_DIR\nUNBOUND_INCLUDE\nUNBOUND_LIB\nPBX_TONEZONE\nTONEZONE_DIR\nTONEZONE_INCLUDE\nTONEZONE_LIB\nPBX_TIMERFD\nTIMERFD_DIR\nTIMERFD_INCLUDE\nTIMERFD_LIB\nPBX_FREETDS\nFREETDS_DIR\nFREETDS_INCLUDE\nFREETDS_LIB\nPBX_RT\nRT_DIR\nRT_INCLUDE\nRT_LIB\nPBX_SRTP_GET_VERSION\nSRTP_GET_VERSION_DIR\nSRTP_GET_VERSION_INCLUDE\nSRTP_GET_VERSION_LIB\nPBX_SRTP_SHUTDOWN\nSRTP_SHUTDOWN_DIR\nSRTP_SHUTDOWN_INCLUDE\nSRTP_SHUTDOWN_LIB\nPBX_SRTP_GCM\nSRTP_GCM_DIR\nSRTP_GCM_INCLUDE\nSRTP_GCM_LIB\nPBX_SRTP_192\nSRTP_192_DIR\nSRTP_192_INCLUDE\nSRTP_192_LIB\nPBX_SRTP_256\nSRTP_256_DIR\nSRTP_256_INCLUDE\nSRTP_256_LIB\nPBX_SRTP\nSRTP_DIR\nSRTP_INCLUDE\nSRTP_LIB\nPBX_SQLITE3\nSQLITE3_DIR\nSQLITE3_INCLUDE\nSQLITE3_LIB\nPBX_SPEEXDSP\nSPEEXDSP_DIR\nSPEEXDSP_INCLUDE\nSPEEXDSP_LIB\nPBX_SPEEX_PREPROCESS\nSPEEX_PREPROCESS_DIR\nSPEEX_PREPROCESS_INCLUDE\nSPEEX_PREPROCESS_LIB\nPBX_SPEEX\nSPEEX_DIR\nSPEEX_INCLUDE\nSPEEX_LIB\nPBX_SS7\nSS7_DIR\nSS7_INCLUDE\nSS7_LIB\nPBX_SPANDSP\nSPANDSP_DIR\nSPANDSP_INCLUDE\nSPANDSP_LIB\nPBX_SDL_IMAGE\nSDL_IMAGE_DIR\nSDL_IMAGE_INCLUDE\nSDL_IMAGE_LIB\nPBX_SDL\nSDL_DIR\nSDL_INCLUDE\nSDL_LIB\nPBX_SNDFILE\nSNDFILE_DIR\nSNDFILE_INCLUDE\nSNDFILE_LIB\nPBX_RESAMPLE\nRESAMPLE_DIR\nRESAMPLE_INCLUDE\nRESAMPLE_LIB\nPBX_FFTW3\nFFTW3_DIR\nFFTW3_INCLUDE\nFFTW3_LIB\nPBX_RADIUS\nRADIUS_DIR\nRADIUS_INCLUDE\nRADIUS_LIB\nPBX_PRI_REVERSE_CHARGE\nPRI_REVERSE_CHARGE_DIR\nPRI_REVERSE_CHARGE_INCLUDE\nPRI_REVERSE_CHARGE_LIB\nPBX_PRI_SERVICE_MESSAGES\nPRI_SERVICE_MESSAGES_DIR\nPRI_SERVICE_MESSAGES_INCLUDE\nPRI_SERVICE_MESSAGES_LIB\nPBX_PRI_PROG_W_CAUSE\nPRI_PROG_W_CAUSE_DIR\nPRI_PROG_W_CAUSE_INCLUDE\nPRI_PROG_W_CAUSE_LIB\nPBX_PRI_INBANDDISCONNECT\nPRI_INBANDDISCONNECT_DIR\nPRI_INBANDDISCONNECT_INCLUDE\nPRI_INBANDDISCONNECT_LIB\nPBX_PRI_SETUP_KEYPAD\nPRI_SETUP_KEYPAD_DIR\nPRI_SETUP_KEYPAD_INCLUDE\nPRI_SETUP_KEYPAD_LIB\nPBX_PRI_CALL_REROUTING\nPRI_CALL_REROUTING_DIR\nPRI_CALL_REROUTING_INCLUDE\nPRI_CALL_REROUTING_LIB\nPBX_PRI_CALL_HOLD\nPRI_CALL_HOLD_DIR\nPRI_CALL_HOLD_INCLUDE\nPRI_CALL_HOLD_LIB\nPBX_PRI_SUBADDR\nPRI_SUBADDR_DIR\nPRI_SUBADDR_INCLUDE\nPRI_SUBADDR_LIB\nPBX_PRI_HANGUP_FIX\nPRI_HANGUP_FIX_DIR\nPRI_HANGUP_FIX_INCLUDE\nPRI_HANGUP_FIX_LIB\nPBX_PRI_CCSS\nPRI_CCSS_DIR\nPRI_CCSS_INCLUDE\nPRI_CCSS_LIB\nPBX_PRI_TRANSFER\nPRI_TRANSFER_DIR\nPRI_TRANSFER_INCLUDE\nPRI_TRANSFER_LIB\nPBX_PRI_AOC_EVENTS\nPRI_AOC_EVENTS_DIR\nPRI_AOC_EVENTS_INCLUDE\nPRI_AOC_EVENTS_LIB\nPBX_PRI_CALL_WAITING\nPRI_CALL_WAITING_DIR\nPRI_CALL_WAITING_INCLUDE\nPRI_CALL_WAITING_LIB\nPBX_PRI_MCID\nPRI_MCID_DIR\nPRI_MCID_INCLUDE\nPRI_MCID_LIB\nPBX_PRI_MWI\nPRI_MWI_DIR\nPRI_MWI_INCLUDE\nPRI_MWI_LIB\nPBX_PRI_DISPLAY_TEXT\nPRI_DISPLAY_TEXT_DIR\nPRI_DISPLAY_TEXT_INCLUDE\nPRI_DISPLAY_TEXT_LIB\nPBX_PRI_MWI_V2\nPRI_MWI_V2_DIR\nPRI_MWI_V2_INCLUDE\nPRI_MWI_V2_LIB\nPBX_PRI_DATETIME_SEND\nPRI_DATETIME_SEND_DIR\nPRI_DATETIME_SEND_INCLUDE\nPRI_DATETIME_SEND_LIB\nPBX_PRI_L2_PERSISTENCE\nPRI_L2_PERSISTENCE_DIR\nPRI_L2_PERSISTENCE_INCLUDE\nPRI_L2_PERSISTENCE_LIB\nPBX_PRI_SETUP_ACK_INBAND\nPRI_SETUP_ACK_INBAND_DIR\nPRI_SETUP_ACK_INBAND_INCLUDE\nPRI_SETUP_ACK_INBAND_LIB\nPBX_PRI\nPRI_DIR\nPRI_INCLUDE\nPRI_LIB\nPBX_PORTAUDIO\nPORTAUDIO_DIR\nPORTAUDIO_INCLUDE\nPORTAUDIO_LIB\nPBX_POPT\nPOPT_DIR\nPOPT_INCLUDE\nPOPT_LIB\nPBX_PJSIP_AUTH_NEW_DIGESTS\nPJSIP_AUTH_NEW_DIGESTS_DIR\nPJSIP_AUTH_NEW_DIGESTS_INCLUDE\nPJSIP_AUTH_NEW_DIGESTS_LIB\nPBX_PJSIP_TLS_TRANSPORT_RESTART\nPJSIP_TLS_TRANSPORT_RESTART_DIR\nPJSIP_TLS_TRANSPORT_RESTART_INCLUDE\nPJSIP_TLS_TRANSPORT_RESTART_LIB\nPBX_PJSIP_OAUTH_AUTHENTICATION\nPJSIP_OAUTH_AUTHENTICATION_DIR\nPJSIP_OAUTH_AUTHENTICATION_INCLUDE\nPJSIP_OAUTH_AUTHENTICATION_LIB\nPBX_PJSIP_TRANSPORT_DISABLE_CONNECTION_REUSE\nPJSIP_TRANSPORT_DISABLE_CONNECTION_REUSE_DIR\nPJSIP_TRANSPORT_DISABLE_CONNECTION_REUSE_INCLUDE\nPJSIP_TRANSPORT_DISABLE_CONNECTION_REUSE_LIB\nPBX_PJSIP_ENDPOINT_COMPACT_FORM\nPJSIP_ENDPOINT_COMPACT_FORM_DIR\nPJSIP_ENDPOINT_COMPACT_FORM_INCLUDE\nPJSIP_ENDPOINT_COMPACT_FORM_LIB\nPBX_PJSIP_INV_ACCEPT_MULTIPLE_SDP_ANSWERS\nPJSIP_INV_ACCEPT_MULTIPLE_SDP_ANSWERS_DIR\nPJSIP_INV_ACCEPT_MULTIPLE_SDP_ANSWERS_INCLUDE\nPJSIP_INV_ACCEPT_MULTIPLE_SDP_ANSWERS_LIB\nPBX_PJSIP_TSX_LAYER_FIND_TSX2\nPJSIP_TSX_LAYER_FIND_TSX2_DIR\nPJSIP_TSX_LAYER_FIND_TSX2_INCLUDE\nPJSIP_TSX_LAYER_FIND_TSX2_LIB\nPBX_PJSIP_AUTH_CLT_DEINIT\nPJSIP_AUTH_CLT_DEINIT_DIR\nPJSIP_AUTH_CLT_DEINIT_INCLUDE\nPJSIP_AUTH_CLT_DEINIT_LIB\nPBX_PJSIP_INV_SESSION_REF\nPJSIP_INV_SESSION_REF_DIR\nPJSIP_INV_SESSION_REF_INCLUDE\nPJSIP_INV_SESSION_REF_LIB\nPBX_PJSIP_EVSUB_GRP_LOCK\nPJSIP_EVSUB_GRP_LOCK_DIR\nPJSIP_EVSUB_GRP_LOCK_INCLUDE\nPJSIP_EVSUB_GRP_LOCK_LIB\nPBX_PJSIP_TLS_1_3\nPJSIP_TLS_1_3_DIR\nPJSIP_TLS_1_3_INCLUDE\nPJSIP_TLS_1_3_LIB\nPBX_PJSIP_TLS_1_2\nPJSIP_TLS_1_2_DIR\nPJSIP_TLS_1_2_INCLUDE\nPJSIP_TLS_1_2_LIB\nPBX_PJSIP_TLS_1_1\nPJSIP_TLS_1_1_DIR\nPJSIP_TLS_1_1_INCLUDE\nPJSIP_TLS_1_1_LIB\nPBX_PJSIP_TLS_TRANSPORT_PROTO\nPJSIP_TLS_TRANSPORT_PROTO_DIR\nPJSIP_TLS_TRANSPORT_PROTO_INCLUDE\nPJSIP_TLS_TRANSPORT_PROTO_LIB\nPBX_PJSIP_EXTERNAL_RESOLVER\nPJSIP_EXTERNAL_RESOLVER_DIR\nPJSIP_EXTERNAL_RESOLVER_INCLUDE\nPJSIP_EXTERNAL_RESOLVER_LIB\nPBX_PJ_SSL_CERT_LOAD_FROM_FILES2\nPJ_SSL_CERT_LOAD_FROM_FILES2_DIR\nPJ_SSL_CERT_LOAD_FROM_FILES2_INCLUDE\nPJ_SSL_CERT_LOAD_FROM_FILES2_LIB\nPBX_PJSIP_GET_DEST_INFO\nPJSIP_GET_DEST_INFO_DIR\nPJSIP_GET_DEST_INFO_INCLUDE\nPJSIP_GET_DEST_INFO_LIB\nPBX_PJSIP_REPLACE_MEDIA_STREAM\nPJSIP_REPLACE_MEDIA_STREAM_DIR\nPJSIP_REPLACE_MEDIA_STREAM_INCLUDE\nPJSIP_REPLACE_MEDIA_STREAM_LIB\nPBX_PJ_TRANSACTION_GRP_LOCK\nPJ_TRANSACTION_GRP_LOCK_DIR\nPJ_TRANSACTION_GRP_LOCK_INCLUDE\nPJ_TRANSACTION_GRP_LOCK_LIB\nPBX_PJSIP_DLG_CREATE_UAS_AND_INC_LOCK\nPJSIP_DLG_CREATE_UAS_AND_INC_LOCK_DIR\nPJSIP_DLG_CREATE_UAS_AND_INC_LOCK_INCLUDE\nPJSIP_DLG_CREATE_UAS_AND_INC_LOCK_LIB\nPBX_BEANSTALK\nBEANSTALK_DIR\nBEANSTALK_INCLUDE\nBEANSTALK_LIB\nPBX_PGSQL\nPGSQL_DIR\nPGSQL_INCLUDE\nPGSQL_LIB\nPBX_OPUSFILE\nOPUSFILE_DIR\nOPUSFILE_INCLUDE\nOPUSFILE_LIB\nPBX_OPUS\nOPUS_DIR\nOPUS_INCLUDE\nOPUS_LIB\nPBX_OPENR2\nOPENR2_DIR\nOPENR2_INCLUDE\nOPENR2_LIB\nPBX_OGG\nOGG_DIR\nOGG_INCLUDE\nOGG_LIB\nPBX_NEWT\nNEWT_DIR\nNEWT_INCLUDE\nNEWT_LIB\nPBX_NETSNMP\nNETSNMP_DIR\nNETSNMP_INCLUDE\nNETSNMP_LIB\nPBX_NEON29\nNEON29_DIR\nNEON29_INCLUDE\nNEON29_LIB\nPBX_NEON\nNEON_DIR\nNEON_INCLUDE\nNEON_LIB\nPBX_MYSQLCLIENT\nMYSQLCLIENT_DIR\nMYSQLCLIENT_INCLUDE\nMYSQLCLIENT_LIB\nLUA_VERSIONS\nPBX_LUA\nLUA_DIR\nLUA_INCLUDE\nLUA_LIB\nPBX_LIBXSLT_CLEANUP\nLIBXSLT_CLEANUP_DIR\nLIBXSLT_CLEANUP_INCLUDE\nLIBXSLT_CLEANUP_LIB\nPBX_LIBXSLT\nLIBXSLT_DIR\nLIBXSLT_INCLUDE\nLIBXSLT_LIB\nPBX_LIBXML2\nLIBXML2_DIR\nLIBXML2_INCLUDE\nLIBXML2_LIB\nLIBJWT_DIR\nPBX_LIBEDIT_IS_UNICODE\nLIBEDIT_IS_UNICODE_DIR\nLIBEDIT_IS_UNICODE_INCLUDE\nLIBEDIT_IS_UNICODE_LIB\nPBX_LIBEDIT\nLIBEDIT_DIR\nLIBEDIT_INCLUDE\nLIBEDIT_LIB\nCURL_LIB\nCURL_INCLUDE\n_libcurl_config\nPBX_CURL\nPBX_LDAP\nLDAP_DIR\nLDAP_INCLUDE\nLDAP_LIB\nPBX_KQUEUE\nKQUEUE_DIR\nKQUEUE_INCLUDE\nKQUEUE_LIB\nPBX_URIPARSER\nURIPARSER_DIR\nURIPARSER_INCLUDE\nURIPARSER_LIB\nJANSSON_DIR\nPBX_JACK\nJACK_DIR\nJACK_INCLUDE\nJACK_LIB\nPBX_IODBC\nIODBC_DIR\nIODBC_INCLUDE\nIODBC_LIB\nPBX_INOTIFY\nINOTIFY_DIR\nINOTIFY_INCLUDE\nINOTIFY_LIB\nPBX_IMAP_TK\nIMAP_TK_DIR\nIMAP_TK_INCLUDE\nIMAP_TK_LIB\nPBX_IKSEMEL\nIKSEMEL_DIR\nIKSEMEL_INCLUDE\nIKSEMEL_LIB\nPBX_ICONV\nICONV_DIR\nICONV_INCLUDE\nICONV_LIB\nPBX_ICAL\nICAL_DIR\nICAL_INCLUDE\nICAL_LIB\nPBX_HOARD\nHOARD_DIR\nHOARD_INCLUDE\nHOARD_LIB\nPBX_GMIME\nGMIME_DIR\nGMIME_INCLUDE\nGMIME_LIB\nPBX_GTK2\nGTK2_DIR\nGTK2_INCLUDE\nGTK2_LIB\nPBX_ILBC\nILBC_DIR\nILBC_INCLUDE\nILBC_LIB\nPBX_GSM\nGSM_DIR\nGSM_INCLUDE\nGSM_LIB\nPBX_FFMPEG\nFFMPEG_DIR\nFFMPEG_INCLUDE\nFFMPEG_LIB\nPBX_DAHDI\nDAHDI_DIR\nDAHDI_INCLUDE\nDAHDI_LIB\nPBX_CRYPT\nCRYPT_DIR\nCRYPT_INCLUDE\nCRYPT_LIB\nPBX_COROSYNC_CFG_STATE_TRACK\nCOROSYNC_CFG_STATE_TRACK_DIR\nCOROSYNC_CFG_STATE_TRACK_INCLUDE\nCOROSYNC_CFG_STATE_TRACK_LIB\nPBX_COROSYNC\nCOROSYNC_DIR\nCOROSYNC_INCLUDE\nCOROSYNC_LIB\nPBX_CODEC2\nCODEC2_DIR\nCODEC2_INCLUDE\nCODEC2_LIB\nPBX_CAP\nCAP_DIR\nCAP_INCLUDE\nCAP_LIB\nPBX_BLUETOOTH\nBLUETOOTH_DIR\nBLUETOOTH_INCLUDE\nBLUETOOTH_LIB\nPBX_BKTR\nBKTR_DIR\nBKTR_INCLUDE\nBKTR_LIB\nPBX_BFD\nBFD_DIR\nBFD_INCLUDE\nBFD_LIB\nLIBJWT_INCLUDE\nLIBJWT_LIB\nPBX_LIBJWT\nLIBJWT_BUNDLED\nLIBJWT_CONFIGURE_OPTS\nPJPROJECT_INCLUDE\nPJPROJECT_LIB\nPBX_PJPROJECT\nPJPROJECT_DIR\nPJPROJECT_BUNDLED_OOT\nPJPROJECT_BUNDLED\nPJPROJECT_CONFIGURE_OPTS\nJANSSON_INCLUDE\nJANSSON_LIB\nPBX_JANSSON\nJANSSON_BUNDLED\nJANSSON_CONFIGURE_OPTS\nOPENSSL_LIBS\nOPENSSL_CFLAGS\nPBX_OPENSSL_BIO_METHOD\nOPENSSL_BIO_METHOD_DIR\nOPENSSL_BIO_METHOD_INCLUDE\nOPENSSL_BIO_METHOD_LIB\nPBX_OPENSSL\nOPENSSL_DIR\nOPENSSL_INCLUDE\nOPENSSL_LIB\nPBX_CRYPTO\nCRYPTO_DIR\nCRYPTO_INCLUDE\nCRYPTO_LIB\nAST_C_COMPILER_FAMILY\nAST_CLANG_BLOCKS\nAST_CLANG_BLOCKS_LIBS\nAST_NESTED_FUNCTIONS\nAST_CODE_COVERAGE\nEXTERNALS_CACHE_DIR\nSOUNDS_CACHE_DIR\nAST_DOWNLOAD_CACHE\nAST_DEVMODE_STRICT\nAST_DEVMODE\nNOISY_BUILD\nPBX_NO_BINARY_MODULES\nPTHREAD_CFLAGS\nPTHREAD_LIBS\nPTHREAD_CXX\nPTHREAD_CC\nax_pthread_config\nMD5\nSOXMIX\nPBX_BASH\nPBX_XMLSTARLET\nPBX_FLEX\nPBX_BISON\nPKG_CONFIG_LIBDIR\nPKG_CONFIG_PATH\nPKG_CONFIG\nOPENSSL\nSHA1SUM\nLDCONFIG\nDOWNLOAD_TIMEOUT\nDOWNLOAD_TO_STDOUT\nDOWNLOAD\nFETCH\nREALPATH\nNM\nPATCH\nTAR\nBZIP2\nALEMBIC\nGIT\nBASH\nXMLSTARLET\nXMLLINT\nCURL\nWGET\nDOT\nDOXYGEN\nLN\nDIRNAME\nBASENAME\nFIND\nPYTHON\nFLEX\nCUT\nCAT\nCMP\nBISON\nGNU_LD\nac_ct_AR\nAR\nac_ct_STRIP\nSTRIP\nGREP\nGNU_MAKE\nLN_S\nINSTALL_DATA\nINSTALL_SCRIPT\nINSTALL_PROGRAM\nAWK\nEGREP\nSED\nPBX_CXX23\nHAVE_CXX23\nPBX_CXX20\nHAVE_CXX20\nPBX_CXX17\nHAVE_CXX17\nPBX_CXX14\nHAVE_CXX14\nPBX_CXX11\nHAVE_CXX11\nCXXCPP\nCPP\nac_ct_CXX\nCXXFLAGS\nCROSS_COMPILING\nRANLIB\nLD\nCXX\nPBX_OSREV\nUNAME\nCONFIG_SIGNED_CHAR\nPBX_WINARCH\nOSARCH\nHOST_OS\nHOST_VENDOR\nHOST_CPU\nHOST_PLATFORM\nBUILD_OS\nBUILD_VENDOR\nBUILD_CPU\nBUILD_PLATFORM\nastvarrundir\nastlogdir\nastspooldir\nastkeydir\nastdbdir\nastdatadir\nastvarlibdir\nastmandir\nastmoddir\nastlibdir\nastheaderdir\nastetcdir\nastcachedir\nastsbindir\nOBJEXT\nEXEEXT\nac_ct_CC\nCPPFLAGS\nLDFLAGS\nCFLAGS\nCC\nCONFIG_LDFLAGS\nCONFIG_CFLAGS\nhost_os\nhost_vendor\nhost_cpu\nhost\nbuild_os\nbuild_vendor\nbuild_cpu\nbuild\ntarget_alias\nhost_alias\nbuild_alias\nLIBS\nECHO_T\nECHO_N\nECHO_C\nDEFS\nmandir\nlocaledir\nlibdir\npsdir\npdfdir\ndvidir\nhtmldir\ninfodir\ndocdir\noldincludedir\nincludedir\nrunstatedir\nlocalstatedir\nsharedstatedir\nsysconfdir\ndatadir\ndatarootdir\nlibexecdir\nsbindir\nbindir\nprogram_transform_name\nprefix\nexec_prefix\nPACKAGE_URL\nPACKAGE_BUGREPORT\nPACKAGE_STRING\nPACKAGE_VERSION\nPACKAGE_TARNAME\nPACKAGE_NAME\nPATH_SEPARATOR\nSHELL'\nac_subst_files=''\nac_user_opts='\nenable_option_checking\nenable_latest_cxx_std\nwith_gnu_ld\nenable_binary_modules\nenable_dev_mode\nwith_download_cache\nwith_sounds_cache\nwith_externals_cache\nenable_coverage\nwith_jansson_bundled\nwith_pjproject_bundled\nwith_libjwt_bundled\nwith_crypto\nwith_ssl\nwith_bfd\nwith_execinfo\nwith_bluetooth\nwith_cap\nwith_codec2\nwith_cpg\nwith_crypt\nwith_dahdi\nwith_avcodec\nwith_gsm\nwith_ilbc\nwith_gtk2\nwith_gmime\nwith_hoard\nwith_ical\nwith_iconv\nwith_iksemel\nwith_imap\nwith_inotify\nwith_iodbc\nwith_jack\nwith_jansson\nwith_uriparser\nwith_kqueue\nwith_ldap\nwith_libcurl\nwith_libedit\nwith_libjwt\nwith_libxml2\nwith_libxslt\nwith_lua\nwith_mysqlclient\nwith_neon\nwith_neon29\nwith_netsnmp\nwith_newt\nwith_ogg\nwith_openr2\nwith_opus\nwith_opusfile\nwith_postgres\nwith_beanstalk\nwith_pjproject\nwith_popt\nwith_portaudio\nwith_pri\nwith_radius\nwith_fftw3\nwith_resample\nwith_sndfile\nwith_sdl\nwith_SDL_image\nwith_spandsp\nwith_ss7\nwith_speex\nwith_speexdsp\nwith_sqlite3\nwith_srtp\nwith_tds\nwith_timerfd\nwith_tonezone\nwith_unbound\nwith_unixodbc\nwith_vorbis\nwith_x11\nwith_z\nenable_xmldoc\nenable_permanent_dlopen\nenable_largefile\nenable_internal_poll\nenable_asteriskssl\nenable_rpath\nenable_year2038\n'\n      ac_precious_vars='build_alias\nhost_alias\ntarget_alias\nCC\nCFLAGS\nLDFLAGS\nLIBS\nCPPFLAGS\nCXX\nCXXFLAGS\nCCC\nCPP\nCXXCPP\nPKG_CONFIG\nPKG_CONFIG_PATH\nPKG_CONFIG_LIBDIR\nOPENSSL_CFLAGS\nOPENSSL_LIBS\nJANSSON_CONFIGURE_OPTS\nPJPROJECT_CONFIGURE_OPTS\nLIBJWT_CONFIGURE_OPTS\nLUA_VERSIONS\nLIBEDIT_CFLAGS\nLIBEDIT_LIBS\nJANSSON_CFLAGS\nJANSSON_LIBS\nLIBJWT_CFLAGS\nLIBJWT_LIBS\nLIBXML2_CFLAGS\nLIBXML2_LIBS\nILBC_CFLAGS\nILBC_LIBS\nNETSNMP_CFLAGS\nNETSNMP_LIBS\nPJPROJECT_CFLAGS\nPJPROJECT_LIBS\nPYTHONDEV_CFLAGS\nPYTHONDEV_LIBS\nPORTAUDIO_CFLAGS\nPORTAUDIO_LIBS\nGMIME_CFLAGS\nGMIME_LIBS\nGTK2_CFLAGS\nGTK2_LIBS\nSYSTEMD_CFLAGS\nSYSTEMD_LIBS'\n\n\n# Initialize some variables set by options.\nac_init_help=\nac_init_version=false\nac_unrecognized_opts=\nac_unrecognized_sep=\n# The variables have the same names as the options, with\n# dashes changed to underlines.\ncache_file=/dev/null\nexec_prefix=NONE\nno_create=\nno_recursion=\nprefix=NONE\nprogram_prefix=NONE\nprogram_suffix=NONE\nprogram_transform_name=s,x,x,\nsilent=\nsite=\nsrcdir=\nverbose=\nx_includes=NONE\nx_libraries=NONE\n\n# Installation directory options.\n# These are left unexpanded so users can \"make install exec_prefix=/foo\"\n# and all the variables that are supposed to be based on exec_prefix\n# by default will actually change.\n# Use braces instead of parens because sh, perl, etc. also accept them.\n# (The list follows the same order as the GNU Coding Standards.)\nbindir='${exec_prefix}/bin'\nsbindir='${exec_prefix}/sbin'\nlibexecdir='${exec_prefix}/libexec'\ndatarootdir='${prefix}/share'\ndatadir='${datarootdir}'\nsysconfdir='${prefix}/etc'\nsharedstatedir='${prefix}/com'\nlocalstatedir='${prefix}/var'\nrunstatedir='${localstatedir}/run'\nincludedir='${prefix}/include'\noldincludedir='/usr/include'\ndocdir='${datarootdir}/doc/${PACKAGE_TARNAME}'\ninfodir='${datarootdir}/info'\nhtmldir='${docdir}'\ndvidir='${docdir}'\npdfdir='${docdir}'\npsdir='${docdir}'\nlibdir='${exec_prefix}/lib'\nlocaledir='${datarootdir}/locale'\nmandir='${datarootdir}/man'\n\nac_prev=\nac_dashdash=\nfor ac_option\ndo\n  # If the previous option needs an argument, assign it.\n  if test -n \"$ac_prev\"; then\n    eval $ac_prev=\\$ac_option\n    ac_prev=\n    continue\n  fi\n\n  case $ac_option in\n  *=?*) ac_optarg=`expr \"X$ac_option\" : '[^=]*=\\(.*\\)'` ;;\n  *=)   ac_optarg= ;;\n  *)    ac_optarg=yes ;;\n  esac\n\n  case $ac_dashdash$ac_option in\n  --)\n    ac_dashdash=yes ;;\n\n  -bindir | --bindir | --bindi | --bind | --bin | --bi)\n    ac_prev=bindir ;;\n  -bindir=* | --bindir=* | --bindi=* | --bind=* | --bin=* | --bi=*)\n    bindir=$ac_optarg ;;\n\n  -build | --build | --buil | --bui | --bu)\n    ac_prev=build_alias ;;\n  -build=* | --build=* | --buil=* | --bui=* | --bu=*)\n    build_alias=$ac_optarg ;;\n\n  -cache-file | --cache-file | --cache-fil | --cache-fi \\\n  | --cache-f | --cache- | --cache | --cach | --cac | --ca | --c)\n    ac_prev=cache_file ;;\n  -cache-file=* | --cache-file=* | --cache-fil=* | --cache-fi=* \\\n  | --cache-f=* | --cache-=* | --cache=* | --cach=* | --cac=* | --ca=* | --c=*)\n    cache_file=$ac_optarg ;;\n\n  --config-cache | -C)\n    cache_file=config.cache ;;\n\n  -datadir | --datadir | --datadi | --datad)\n    ac_prev=datadir ;;\n  -datadir=* | --datadir=* | --datadi=* | --datad=*)\n    datadir=$ac_optarg ;;\n\n  -datarootdir | --datarootdir | --datarootdi | --datarootd | --dataroot \\\n  | --dataroo | --dataro | --datar)\n    ac_prev=datarootdir ;;\n  -datarootdir=* | --datarootdir=* | --datarootdi=* | --datarootd=* \\\n  | --dataroot=* | --dataroo=* | --dataro=* | --datar=*)\n    datarootdir=$ac_optarg ;;\n\n  -disable-* | --disable-*)\n    ac_useropt=`expr \"x$ac_option\" : 'x-*disable-\\(.*\\)'`\n    # Reject names that are not valid shell variable names.\n    expr \"x$ac_useropt\" : \".*[^-+._$as_cr_alnum]\" >/dev/null &&\n      as_fn_error $? \"invalid feature name: '$ac_useropt'\"\n    ac_useropt_orig=$ac_useropt\n    ac_useropt=`printf \"%s\\n\" \"$ac_useropt\" | sed 's/[-+.]/_/g'`\n    case $ac_user_opts in\n      *\"\n\"enable_$ac_useropt\"\n\"*) ;;\n      *) ac_unrecognized_opts=\"$ac_unrecognized_opts$ac_unrecognized_sep--disable-$ac_useropt_orig\"\n\t ac_unrecognized_sep=', ';;\n    esac\n    eval enable_$ac_useropt=no ;;\n\n  -docdir | --docdir | --docdi | --doc | --do)\n    ac_prev=docdir ;;\n  -docdir=* | --docdir=* | --docdi=* | --doc=* | --do=*)\n    docdir=$ac_optarg ;;\n\n  -dvidir | --dvidir | --dvidi | --dvid | --dvi | --dv)\n    ac_prev=dvidir ;;\n  -dvidir=* | --dvidir=* | --dvidi=* | --dvid=* | --dvi=* | --dv=*)\n    dvidir=$ac_optarg ;;\n\n  -enable-* | --enable-*)\n    ac_useropt=`expr \"x$ac_option\" : 'x-*enable-\\([^=]*\\)'`\n    # Reject names that are not valid shell variable names.\n    expr \"x$ac_useropt\" : \".*[^-+._$as_cr_alnum]\" >/dev/null &&\n      as_fn_error $? \"invalid feature name: '$ac_useropt'\"\n    ac_useropt_orig=$ac_useropt\n    ac_useropt=`printf \"%s\\n\" \"$ac_useropt\" | sed 's/[-+.]/_/g'`\n    case $ac_user_opts in\n      *\"\n\"enable_$ac_useropt\"\n\"*) ;;\n      *) ac_unrecognized_opts=\"$ac_unrecognized_opts$ac_unrecognized_sep--enable-$ac_useropt_orig\"\n\t ac_unrecognized_sep=', ';;\n    esac\n    eval enable_$ac_useropt=\\$ac_optarg ;;\n\n  -exec-prefix | --exec_prefix | --exec-prefix | --exec-prefi \\\n  | --exec-pref | --exec-pre | --exec-pr | --exec-p | --exec- \\\n  | --exec | --exe | --ex)\n    ac_prev=exec_prefix ;;\n  -exec-prefix=* | --exec_prefix=* | --exec-prefix=* | --exec-prefi=* \\\n  | --exec-pref=* | --exec-pre=* | --exec-pr=* | --exec-p=* | --exec-=* \\\n  | --exec=* | --exe=* | --ex=*)\n    exec_prefix=$ac_optarg ;;\n\n  -gas | --gas | --ga | --g)\n    # Obsolete; use --with-gas.\n    with_gas=yes ;;\n\n  -help | --help | --hel | --he | -h)\n    ac_init_help=long ;;\n  -help=r* | --help=r* | --hel=r* | --he=r* | -hr*)\n    ac_init_help=recursive ;;\n  -help=s* | --help=s* | --hel=s* | --he=s* | -hs*)\n    ac_init_help=short ;;\n\n  -host | --host | --hos | --ho)\n    ac_prev=host_alias ;;\n  -host=* | --host=* | --hos=* | --ho=*)\n    host_alias=$ac_optarg ;;\n\n  -htmldir | --htmldir | --htmldi | --htmld | --html | --htm | --ht)\n    ac_prev=htmldir ;;\n  -htmldir=* | --htmldir=* | --htmldi=* | --htmld=* | --html=* | --htm=* \\\n  | --ht=*)\n    htmldir=$ac_optarg ;;\n\n  -includedir | --includedir | --includedi | --included | --include \\\n  | --includ | --inclu | --incl | --inc)\n    ac_prev=includedir ;;\n  -includedir=* | --includedir=* | --includedi=* | --included=* | --include=* \\\n  | --includ=* | --inclu=* | --incl=* | --inc=*)\n    includedir=$ac_optarg ;;\n\n  -infodir | --infodir | --infodi | --infod | --info | --inf)\n    ac_prev=infodir ;;\n  -infodir=* | --infodir=* | --infodi=* | --infod=* | --info=* | --inf=*)\n    infodir=$ac_optarg ;;\n\n  -libdir | --libdir | --libdi | --libd)\n    ac_prev=libdir ;;\n  -libdir=* | --libdir=* | --libdi=* | --libd=*)\n    libdir=$ac_optarg ;;\n\n  -libexecdir | --libexecdir | --libexecdi | --libexecd | --libexec \\\n  | --libexe | --libex | --libe)\n    ac_prev=libexecdir ;;\n  -libexecdir=* | --libexecdir=* | --libexecdi=* | --libexecd=* | --libexec=* \\\n  | --libexe=* | --libex=* | --libe=*)\n    libexecdir=$ac_optarg ;;\n\n  -localedir | --localedir | --localedi | --localed | --locale)\n    ac_prev=localedir ;;\n  -localedir=* | --localedir=* | --localedi=* | --localed=* | --locale=*)\n    localedir=$ac_optarg ;;\n\n  -localstatedir | --localstatedir | --localstatedi | --localstated \\\n  | --localstate | --localstat | --localsta | --localst | --locals)\n    ac_prev=localstatedir ;;\n  -localstatedir=* | --localstatedir=* | --localstatedi=* | --localstated=* \\\n  | --localstate=* | --localstat=* | --localsta=* | --localst=* | --locals=*)\n    localstatedir=$ac_optarg ;;\n\n  -mandir | --mandir | --mandi | --mand | --man | --ma | --m)\n    ac_prev=mandir ;;\n  -mandir=* | --mandir=* | --mandi=* | --mand=* | --man=* | --ma=* | --m=*)\n    mandir=$ac_optarg ;;\n\n  -nfp | --nfp | --nf)\n    # Obsolete; use --without-fp.\n    with_fp=no ;;\n\n  -no-create | --no-create | --no-creat | --no-crea | --no-cre \\\n  | --no-cr | --no-c | -n)\n    no_create=yes ;;\n\n  -no-recursion | --no-recursion | --no-recursio | --no-recursi \\\n  | --no-recurs | --no-recur | --no-recu | --no-rec | --no-re | --no-r)\n    no_recursion=yes ;;\n\n  -oldincludedir | --oldincludedir | --oldincludedi | --oldincluded \\\n  | --oldinclude | --oldinclud | --oldinclu | --oldincl | --oldinc \\\n  | --oldin | --oldi | --old | --ol | --o)\n    ac_prev=oldincludedir ;;\n  -oldincludedir=* | --oldincludedir=* | --oldincludedi=* | --oldincluded=* \\\n  | --oldinclude=* | --oldinclud=* | --oldinclu=* | --oldincl=* | --oldinc=* \\\n  | --oldin=* | --oldi=* | --old=* | --ol=* | --o=*)\n    oldincludedir=$ac_optarg ;;\n\n  -prefix | --prefix | --prefi | --pref | --pre | --pr | --p)\n    ac_prev=prefix ;;\n  -prefix=* | --prefix=* | --prefi=* | --pref=* | --pre=* | --pr=* | --p=*)\n    prefix=$ac_optarg ;;\n\n  -program-prefix | --program-prefix | --program-prefi | --program-pref \\\n  | --program-pre | --program-pr | --program-p)\n    ac_prev=program_prefix ;;\n  -program-prefix=* | --program-prefix=* | --program-prefi=* \\\n  | --program-pref=* | --program-pre=* | --program-pr=* | --program-p=*)\n    program_prefix=$ac_optarg ;;\n\n  -program-suffix | --program-suffix | --program-suffi | --program-suff \\\n  | --program-suf | --program-su | --program-s)\n    ac_prev=program_suffix ;;\n  -program-suffix=* | --program-suffix=* | --program-suffi=* \\\n  | --program-suff=* | --program-suf=* | --program-su=* | --program-s=*)\n    program_suffix=$ac_optarg ;;\n\n  -program-transform-name | --program-transform-name \\\n  | --program-transform-nam | --program-transform-na \\\n  | --program-transform-n | --program-transform- \\\n  | --program-transform | --program-transfor \\\n  | --program-transfo | --program-transf \\\n  | --program-trans | --program-tran \\\n  | --progr-tra | --program-tr | --program-t)\n    ac_prev=program_transform_name ;;\n  -program-transform-name=* | --program-transform-name=* \\\n  | --program-transform-nam=* | --program-transform-na=* \\\n  | --program-transform-n=* | --program-transform-=* \\\n  | --program-transform=* | --program-transfor=* \\\n  | --program-transfo=* | --program-transf=* \\\n  | --program-trans=* | --program-tran=* \\\n  | --progr-tra=* | --program-tr=* | --program-t=*)\n    program_transform_name=$ac_optarg ;;\n\n  -pdfdir | --pdfdir | --pdfdi | --pdfd | --pdf | --pd)\n    ac_prev=pdfdir ;;\n  -pdfdir=* | --pdfdir=* | --pdfdi=* | --pdfd=* | --pdf=* | --pd=*)\n    pdfdir=$ac_optarg ;;\n\n  -psdir | --psdir | --psdi | --psd | --ps)\n    ac_prev=psdir ;;\n  -psdir=* | --psdir=* | --psdi=* | --psd=* | --ps=*)\n    psdir=$ac_optarg ;;\n\n  -q | -quiet | --quiet | --quie | --qui | --qu | --q \\\n  | -silent | --silent | --silen | --sile | --sil)\n    silent=yes ;;\n\n  -runstatedir | --runstatedir | --runstatedi | --runstated \\\n  | --runstate | --runstat | --runsta | --runst | --runs \\\n  | --run | --ru | --r)\n    ac_prev=runstatedir ;;\n  -runstatedir=* | --runstatedir=* | --runstatedi=* | --runstated=* \\\n  | --runstate=* | --runstat=* | --runsta=* | --runst=* | --runs=* \\\n  | --run=* | --ru=* | --r=*)\n    runstatedir=$ac_optarg ;;\n\n  -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)\n    ac_prev=sbindir ;;\n  -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \\\n  | --sbi=* | --sb=*)\n    sbindir=$ac_optarg ;;\n\n  -sharedstatedir | --sharedstatedir | --sharedstatedi \\\n  | --sharedstated | --sharedstate | --sharedstat | --sharedsta \\\n  | --sharedst | --shareds | --shared | --share | --shar \\\n  | --sha | --sh)\n    ac_prev=sharedstatedir ;;\n  -sharedstatedir=* | --sharedstatedir=* | --sharedstatedi=* \\\n  | --sharedstated=* | --sharedstate=* | --sharedstat=* | --sharedsta=* \\\n  | --sharedst=* | --shareds=* | --shared=* | --share=* | --shar=* \\\n  | --sha=* | --sh=*)\n    sharedstatedir=$ac_optarg ;;\n\n  -site | --site | --sit)\n    ac_prev=site ;;\n  -site=* | --site=* | --sit=*)\n    site=$ac_optarg ;;\n\n  -srcdir | --srcdir | --srcdi | --srcd | --src | --sr)\n    ac_prev=srcdir ;;\n  -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=*)\n    srcdir=$ac_optarg ;;\n\n  -sysconfdir | --sysconfdir | --sysconfdi | --sysconfd | --sysconf \\\n  | --syscon | --sysco | --sysc | --sys | --sy)\n    ac_prev=sysconfdir ;;\n  -sysconfdir=* | --sysconfdir=* | --sysconfdi=* | --sysconfd=* | --sysconf=* \\\n  | --syscon=* | --sysco=* | --sysc=* | --sys=* | --sy=*)\n    sysconfdir=$ac_optarg ;;\n\n  -target | --target | --targe | --targ | --tar | --ta | --t)\n    ac_prev=target_alias ;;\n  -target=* | --target=* | --targe=* | --targ=* | --tar=* | --ta=* | --t=*)\n    target_alias=$ac_optarg ;;\n\n  -v | -verbose | --verbose | --verbos | --verbo | --verb)\n    verbose=yes ;;\n\n  -version | --version | --versio | --versi | --vers | -V)\n    ac_init_version=: ;;\n\n  -with-* | --with-*)\n    ac_useropt=`expr \"x$ac_option\" : 'x-*with-\\([^=]*\\)'`\n    # Reject names that are not valid shell variable names.\n    expr \"x$ac_useropt\" : \".*[^-+._$as_cr_alnum]\" >/dev/null &&\n      as_fn_error $? \"invalid package name: '$ac_useropt'\"\n    ac_useropt_orig=$ac_useropt\n    ac_useropt=`printf \"%s\\n\" \"$ac_useropt\" | sed 's/[-+.]/_/g'`\n    case $ac_user_opts in\n      *\"\n\"with_$ac_useropt\"\n\"*) ;;\n      *) ac_unrecognized_opts=\"$ac_unrecognized_opts$ac_unrecognized_sep--with-$ac_useropt_orig\"\n\t ac_unrecognized_sep=', ';;\n    esac\n    eval with_$ac_useropt=\\$ac_optarg ;;\n\n  -without-* | --without-*)\n    ac_useropt=`expr \"x$ac_option\" : 'x-*without-\\(.*\\)'`\n    # Reject names that are not valid shell variable names.\n    expr \"x$ac_useropt\" : \".*[^-+._$as_cr_alnum]\" >/dev/null &&\n      as_fn_error $? \"invalid package name: '$ac_useropt'\"\n    ac_useropt_orig=$ac_useropt\n    ac_useropt=`printf \"%s\\n\" \"$ac_useropt\" | sed 's/[-+.]/_/g'`\n    case $ac_user_opts in\n      *\"\n\"with_$ac_useropt\"\n\"*) ;;\n      *) ac_unrecognized_opts=\"$ac_unrecognized_opts$ac_unrecognized_sep--without-$ac_useropt_orig\"\n\t ac_unrecognized_sep=', ';;\n    esac\n    eval with_$ac_useropt=no ;;\n\n  --x)\n    # Obsolete; use --with-x.\n    with_x=yes ;;\n\n  -x-includes | --x-includes | --x-include | --x-includ | --x-inclu \\\n  | --x-incl | --x-inc | --x-in | --x-i)\n    ac_prev=x_includes ;;\n  -x-includes=* | --x-includes=* | --x-include=* | --x-includ=* | --x-inclu=* \\\n  | --x-incl=* | --x-inc=* | --x-in=* | --x-i=*)\n    x_includes=$ac_optarg ;;\n\n  -x-libraries | --x-libraries | --x-librarie | --x-librari \\\n  | --x-librar | --x-libra | --x-libr | --x-lib | --x-li | --x-l)\n    ac_prev=x_libraries ;;\n  -x-libraries=* | --x-libraries=* | --x-librarie=* | --x-librari=* \\\n  | --x-librar=* | --x-libra=* | --x-libr=* | --x-lib=* | --x-li=* | --x-l=*)\n    x_libraries=$ac_optarg ;;\n\n  -*) as_fn_error $? \"unrecognized option: '$ac_option'\nTry '$0 --help' for more information\"\n    ;;\n\n  *=*)\n    ac_envvar=`expr \"x$ac_option\" : 'x\\([^=]*\\)='`\n    # Reject names that are not valid shell variable names.\n    case $ac_envvar in #(\n      '' | [0-9]* | *[!_$as_cr_alnum]* )\n      as_fn_error $? \"invalid variable name: '$ac_envvar'\" ;;\n    esac\n    eval $ac_envvar=\\$ac_optarg\n    export $ac_envvar ;;\n\n  *)\n    # FIXME: should be removed in autoconf 3.0.\n    printf \"%s\\n\" \"$as_me: WARNING: you should use --build, --host, --target\" >&2\n    expr \"x$ac_option\" : \".*[^-._$as_cr_alnum]\" >/dev/null &&\n      printf \"%s\\n\" \"$as_me: WARNING: invalid host type: $ac_option\" >&2\n    : \"${build_alias=$ac_option} ${host_alias=$ac_option} ${target_alias=$ac_option}\"\n    ;;\n\n  esac\ndone\n\nif test -n \"$ac_prev\"; then\n  ac_option=--`echo $ac_prev | sed 's/_/-/g'`\n  as_fn_error $? \"missing argument to $ac_option\"\nfi\n\nif test -n \"$ac_unrecognized_opts\"; then\n  case $enable_option_checking in\n    no) ;;\n    fatal) as_fn_error $? \"unrecognized options: $ac_unrecognized_opts\" ;;\n    *)     printf \"%s\\n\" \"$as_me: WARNING: unrecognized options: $ac_unrecognized_opts\" >&2 ;;\n  esac\nfi\n\n# Check all directory arguments for consistency.\nfor ac_var in\texec_prefix prefix bindir sbindir libexecdir datarootdir \\\n\t\tdatadir sysconfdir sharedstatedir localstatedir includedir \\\n\t\toldincludedir docdir infodir htmldir dvidir pdfdir psdir \\\n\t\tlibdir localedir mandir runstatedir\ndo\n  eval ac_val=\\$$ac_var\n  # Remove trailing slashes.\n  case $ac_val in\n    */ )\n      ac_val=`expr \"X$ac_val\" : 'X\\(.*[^/]\\)' \\| \"X$ac_val\" : 'X\\(.*\\)'`\n      eval $ac_var=\\$ac_val;;\n  esac\n  # Be sure to have absolute directory names.\n  case $ac_val in\n    [\\\\/$]* | ?:[\\\\/]* )  continue;;\n    NONE | '' ) case $ac_var in *prefix ) continue;; esac;;\n  esac\n  as_fn_error $? \"expected an absolute directory name for --$ac_var: $ac_val\"\ndone\n\n# There might be people who depend on the old broken behavior: '$host'\n# used to hold the argument of --host etc.\n# FIXME: To remove some day.\nbuild=$build_alias\nhost=$host_alias\ntarget=$target_alias\n\n# FIXME: To remove some day.\nif test \"x$host_alias\" != x; then\n  if test \"x$build_alias\" = x; then\n    cross_compiling=maybe\n  elif test \"x$build_alias\" != \"x$host_alias\"; then\n    cross_compiling=yes\n  fi\nfi\n\nac_tool_prefix=\ntest -n \"$host_alias\" && ac_tool_prefix=$host_alias-\n\ntest \"$silent\" = yes && exec 6>/dev/null\n\n\nac_pwd=`pwd` && test -n \"$ac_pwd\" &&\nac_ls_di=`ls -di .` &&\nac_pwd_ls_di=`cd \"$ac_pwd\" && ls -di .` ||\n  as_fn_error $? \"working directory cannot be determined\"\ntest \"X$ac_ls_di\" = \"X$ac_pwd_ls_di\" ||\n  as_fn_error $? \"pwd does not report name of working directory\"\n\n\n# Find the source files, if location was not specified.\nif test -z \"$srcdir\"; then\n  ac_srcdir_defaulted=yes\n  # Try the directory containing this script, then the parent directory.\n  ac_confdir=`$as_dirname -- \"$as_myself\" ||\n$as_expr X\"$as_myself\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t X\"$as_myself\" : 'X\\(//\\)[^/]' \\| \\\n\t X\"$as_myself\" : 'X\\(//\\)$' \\| \\\n\t X\"$as_myself\" : 'X\\(/\\)' \\| . 2>/dev/null ||\nprintf \"%s\\n\" X\"$as_myself\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)[^/].*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n  srcdir=$ac_confdir\n  if test ! -r \"$srcdir/$ac_unique_file\"; then\n    srcdir=..\n  fi\nelse\n  ac_srcdir_defaulted=no\nfi\nif test ! -r \"$srcdir/$ac_unique_file\"; then\n  test \"$ac_srcdir_defaulted\" = yes && srcdir=\"$ac_confdir or ..\"\n  as_fn_error $? \"cannot find sources ($ac_unique_file) in $srcdir\"\nfi\nac_msg=\"sources are in $srcdir, but 'cd $srcdir' does not work\"\nac_abs_confdir=`(\n\tcd \"$srcdir\" && test -r \"./$ac_unique_file\" || as_fn_error $? \"$ac_msg\"\n\tpwd)`\n# When building in place, set srcdir=.\nif test \"$ac_abs_confdir\" = \"$ac_pwd\"; then\n  srcdir=.\nfi\n# Remove unnecessary trailing slashes from srcdir.\n# Double slashes in file names in object file debugging info\n# mess up M-x gdb in Emacs.\ncase $srcdir in\n*/) srcdir=`expr \"X$srcdir\" : 'X\\(.*[^/]\\)' \\| \"X$srcdir\" : 'X\\(.*\\)'`;;\nesac\nfor ac_var in $ac_precious_vars; do\n  eval ac_env_${ac_var}_set=\\${${ac_var}+set}\n  eval ac_env_${ac_var}_value=\\$${ac_var}\n  eval ac_cv_env_${ac_var}_set=\\${${ac_var}+set}\n  eval ac_cv_env_${ac_var}_value=\\$${ac_var}\ndone\n\n#\n# Report the --help message.\n#\nif test \"$ac_init_help\" = \"long\"; then\n  # Omit some internal or obsolete options to make the list less imposing.\n  # This message is too long to be a string in the A/UX 3.1 sh.\n  cat <<_ACEOF\n'configure' configures asterisk master to adapt to many kinds of systems.\n\nUsage: $0 [OPTION]... [VAR=VALUE]...\n\nTo assign environment variables (e.g., CC, CFLAGS...), specify them as\nVAR=VALUE.  See below for descriptions of some of the useful variables.\n\nDefaults for the options are specified in brackets.\n\nConfiguration:\n  -h, --help              display this help and exit\n      --help=short        display options specific to this package\n      --help=recursive    display the short help of all the included packages\n  -V, --version           display version information and exit\n  -q, --quiet, --silent   do not print 'checking ...' messages\n      --cache-file=FILE   cache test results in FILE [disabled]\n  -C, --config-cache      alias for '--cache-file=config.cache'\n  -n, --no-create         do not create output files\n      --srcdir=DIR        find the sources in DIR [configure dir or '..']\n\nInstallation directories:\n  --prefix=PREFIX         install architecture-independent files in PREFIX\n                          [$ac_default_prefix]\n  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX\n                          [PREFIX]\n\nBy default, 'make install' will install all the files in\n'$ac_default_prefix/bin', '$ac_default_prefix/lib' etc.  You can specify\nan installation prefix other than '$ac_default_prefix' using '--prefix',\nfor instance '--prefix=\\$HOME'.\n\nFor better control, use the options below.\n\nFine tuning of the installation directories:\n  --bindir=DIR            user executables [EPREFIX/bin]\n  --sbindir=DIR           system admin executables [EPREFIX/sbin]\n  --libexecdir=DIR        program executables [EPREFIX/libexec]\n  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]\n  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]\n  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]\n  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]\n  --libdir=DIR            object code libraries [EPREFIX/lib]\n  --includedir=DIR        C header files [PREFIX/include]\n  --oldincludedir=DIR     C header files for non-gcc [/usr/include]\n  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]\n  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]\n  --infodir=DIR           info documentation [DATAROOTDIR/info]\n  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]\n  --mandir=DIR            man documentation [DATAROOTDIR/man]\n  --docdir=DIR            documentation root [DATAROOTDIR/doc/asterisk]\n  --htmldir=DIR           html documentation [DOCDIR]\n  --dvidir=DIR            dvi documentation [DOCDIR]\n  --pdfdir=DIR            pdf documentation [DOCDIR]\n  --psdir=DIR             ps documentation [DOCDIR]\n_ACEOF\n\n  cat <<\\_ACEOF\n\nSystem types:\n  --build=BUILD     configure for building on BUILD [guessed]\n  --host=HOST       cross-compile to build programs to run on HOST [BUILD]\n_ACEOF\nfi\n\nif test -n \"$ac_init_help\"; then\n  case $ac_init_help in\n     short | recursive ) echo \"Configuration of asterisk master:\";;\n   esac\n  cat <<\\_ACEOF\n\nOptional Features:\n  --disable-option-checking  ignore unrecognized --enable/--with options\n  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n  --enable-latest-cxx-std Force C++ compiler to use the latest standard it\n                          supports\n  --disable-binary-modules\n                          Block installation of binary modules.\n  --enable-dev-mode       Turn on developer mode\n  --enable-coverage       Turn on code coverage tracking (for gcov)\n  --disable-xmldoc        Explicitly disable XML documentation\n  --enable-permanent-dlopen\n                          Enable when your libc has a permanent dlopen like\n                          musl\n  --disable-largefile     omit support for large files\n  --enable-internal-poll  Use Asterisk's poll implementation\n  --disable-asteriskssl   Disable Asterisk's SSL wrapper library\n  --disable-rpath         Disables rpath linker option checking\n  --enable-year2038       support timestamps after 2038\n\nOptional Packages:\n  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)\n  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n  --with-download-cache=PATH\n                          use cached sound AND external module tarfiles in\n                          PATH\n  --with-sounds-cache=PATH\n                          use cached sound tarfiles in PATH\n  --with-externals-cache=PATH\n                          use cached external module tarfiles in PATH\n  --with-jansson-bundled  Use bundled jansson library\n  --with-pjproject-bundled\n                          Use bundled pjproject libraries (default)\n  --with-libjwt-bundled   Use bundled libjwt library\n  --with-crypto=PATH      use OpenSSL Cryptography files in PATH\n  --with-ssl=PATH         use OpenSSL Secure Sockets Layer files in PATH\n  --with-bfd=PATH         use Debug symbol decoding files in PATH\n  --with-execinfo=PATH    use Stack Backtrace files in PATH\n  --with-bluetooth=PATH   use Bluetooth files in PATH\n  --with-cap=PATH         use POSIX 1.e capabilities files in PATH\n  --with-codec2=PATH      use Codec 2 Audio Decoder/Encoder files in PATH\n  --with-cpg=PATH         use Corosync files in PATH\n  --with-crypt=PATH       use password and data encryption files in PATH\n  --with-dahdi=PATH       use DAHDI files in PATH\n  --with-avcodec=PATH     use Ffmpeg and avcodec files in PATH\n  --with-gsm=PATH         use External GSM files in PATH, use 'internal' GSM\n                          otherwise\n  --with-ilbc=PATH        use System iLBC files in PATH, use 'internal' iLBC\n                          otherwise\n  --with-gtk2=PATH        use gtk2 files in PATH\n  --with-gmime=PATH       use GMime files in PATH\n  --with-hoard=PATH       use Hoard Memory Allocator files in PATH\n  --with-ical=PATH        use iCal files in PATH\n  --with-iconv=PATH       use Iconv files in PATH\n  --with-iksemel=PATH     use Iksemel Jabber files in PATH\n  --with-imap=PATH        use UW IMAP Toolkit files in PATH\n  --with-inotify=PATH     use inotify support files in PATH\n  --with-iodbc=PATH       use iODBC files in PATH\n  --with-jack=PATH        use Jack Audio Connection Kit files in PATH\n  --with-jansson=PATH     use Jansson JSON library files in PATH\n  --with-uriparser=PATH   use uriparser library files in PATH\n  --with-kqueue=PATH      use kqueue support files in PATH\n  --with-ldap=PATH        use OpenLDAP files in PATH\n  --with-libcurl=PREFIX   look for the curl library in PREFIX/lib and headers\n                          in PREFIX/include\n  --with-libedit=PATH     use NetBSD Editline library files in PATH\n  --with-libjwt=PATH      use LIBJWT files in PATH\n  --with-libxml2=PATH     use LibXML2 files in PATH\n  --with-libxslt=PATH     use LibXSLT files in PATH\n  --with-lua=PATH         use Lua files in PATH\n  --with-mysqlclient=PATH use MySQL client files in PATH\n  --with-neon=PATH        use neon files in PATH\n  --with-neon29=PATH      use neon29 files in PATH\n  --with-netsnmp=PATH     use Net-SNMP files in PATH\n  --with-newt=PATH        use newt files in PATH\n  --with-ogg=PATH         use OGG files in PATH\n  --with-openr2=PATH      use MFR2 files in PATH\n  --with-opus=PATH        use Opus files in PATH\n  --with-opusfile=PATH    use Opusfile files in PATH\n  --with-postgres=PATH    use PostgreSQL files in PATH\n  --with-beanstalk=PATH   use Beanstalk Job Queue files in PATH\n  --with-pjproject=PATH   use PJPROJECT files in PATH\n  --with-popt=PATH        use popt files in PATH\n  --with-portaudio=PATH   use PortAudio files in PATH\n  --with-pri=PATH         use ISDN PRI files in PATH\n  --with-radius=PATH      use Radius Client files in PATH\n  --with-fftw3=PATH       use LIBFFTW3 files in PATH\n  --with-resample=PATH    use LIBRESAMPLE files in PATH\n  --with-sndfile=PATH     use libsndfile files in PATH\n  --with-sdl=PATH         use Sdl files in PATH\n  --with-SDL_image=PATH   use Sdl Image files in PATH\n  --with-spandsp=PATH     use SPANDSP files in PATH\n  --with-ss7=PATH         use ISDN SS7 files in PATH\n  --with-speex=PATH       use Speex files in PATH\n  --with-speex=PATH       use Speex preprocess routines files in PATH\n  --with-speexdsp=PATH    use SpeexDSP files in PATH\n  --with-sqlite3=PATH     use SQLite files in PATH\n  --with-srtp=PATH        use Secure RTP files in PATH\n  --with-tds=PATH         use FreeTDS files in PATH\n  --with-timerfd=PATH     use timerfd files in PATH\n  --with-tonezone=PATH    use tonezone files in PATH\n  --with-unbound=PATH     use unbound files in PATH\n  --with-unixodbc=PATH    use unixODBC files in PATH\n  --with-vorbis=PATH      use Vorbis files in PATH\n  --with-x11=PATH         use X11 files in PATH\n  --with-z=PATH           use zlib compression files in PATH\n\nSome influential environment variables:\n  CC          C compiler command\n  CFLAGS      C compiler flags\n  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a\n              nonstandard directory <lib dir>\n  LIBS        libraries to pass to the linker, e.g. -l<library>\n  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if\n              you have headers in a nonstandard directory <include dir>\n  CXX         C++ compiler command\n  CXXFLAGS    C++ compiler flags\n  CPP         C preprocessor\n  CXXCPP      C++ preprocessor\n  PKG_CONFIG  path to pkg-config utility\n  PKG_CONFIG_PATH\n              directories to add to pkg-config's search path\n  PKG_CONFIG_LIBDIR\n              path overriding pkg-config's built-in search path\n  OPENSSL_CFLAGS\n              C compiler flags for OPENSSL, overriding pkg-config\n  OPENSSL_LIBS\n              linker flags for OPENSSL, overriding pkg-config\n  JANSSON_CONFIGURE_OPTS\n              Additional configure options to pass to bundled jansson\n  PJPROJECT_CONFIGURE_OPTS\n              Additional configure options to pass to bundled pjproject\n  LIBJWT_CONFIGURE_OPTS\n              Additional configure options to pass to bundled libjwt\n  LUA_VERSIONS\n              A space separated list of target lua versions to test.\n  LIBEDIT_CFLAGS\n              C compiler flags for LIBEDIT, overriding pkg-config\n  LIBEDIT_LIBS\n              linker flags for LIBEDIT, overriding pkg-config\n  JANSSON_CFLAGS\n              C compiler flags for JANSSON, overriding pkg-config\n  JANSSON_LIBS\n              linker flags for JANSSON, overriding pkg-config\n  LIBJWT_CFLAGS\n              C compiler flags for LIBJWT, overriding pkg-config\n  LIBJWT_LIBS linker flags for LIBJWT, overriding pkg-config\n  LIBXML2_CFLAGS\n              C compiler flags for LIBXML2, overriding pkg-config\n  LIBXML2_LIBS\n              linker flags for LIBXML2, overriding pkg-config\n  ILBC_CFLAGS C compiler flags for ILBC, overriding pkg-config\n  ILBC_LIBS   linker flags for ILBC, overriding pkg-config\n  NETSNMP_CFLAGS\n              C compiler flags for NETSNMP, overriding pkg-config\n  NETSNMP_LIBS\n              linker flags for NETSNMP, overriding pkg-config\n  PJPROJECT_CFLAGS\n              C compiler flags for PJPROJECT, overriding pkg-config\n  PJPROJECT_LIBS\n              linker flags for PJPROJECT, overriding pkg-config\n  PYTHONDEV_CFLAGS\n              C compiler flags for PYTHONDEV, overriding pkg-config\n  PYTHONDEV_LIBS\n              linker flags for PYTHONDEV, overriding pkg-config\n  PORTAUDIO_CFLAGS\n              C compiler flags for PORTAUDIO, overriding pkg-config\n  PORTAUDIO_LIBS\n              linker flags for PORTAUDIO, overriding pkg-config\n  GMIME_CFLAGS\n              C compiler flags for GMIME, overriding pkg-config\n  GMIME_LIBS  linker flags for GMIME, overriding pkg-config\n  GTK2_CFLAGS C compiler flags for GTK2, overriding pkg-config\n  GTK2_LIBS   linker flags for GTK2, overriding pkg-config\n  SYSTEMD_CFLAGS\n              C compiler flags for SYSTEMD, overriding pkg-config\n  SYSTEMD_LIBS\n              linker flags for SYSTEMD, overriding pkg-config\n\nUse these variables to override the choices made by 'configure' or to help\nit to find libraries and programs with nonstandard names/locations.\n\nReport bugs to <https://github.com/asterisk/asterisk/issues>.\n_ACEOF\nac_status=$?\nfi\n\nif test \"$ac_init_help\" = \"recursive\"; then\n  # If there are subdirs, report their specific --help.\n  for ac_dir in : $ac_subdirs_all; do test \"x$ac_dir\" = x: && continue\n    test -d \"$ac_dir\" ||\n      { cd \"$srcdir\" && ac_pwd=`pwd` && srcdir=. && test -d \"$ac_dir\"; } ||\n      continue\n    ac_builddir=.\n\ncase \"$ac_dir\" in\n.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;\n*)\n  ac_dir_suffix=/`printf \"%s\\n\" \"$ac_dir\" | sed 's|^\\.[\\\\/]||'`\n  # A \"..\" for each directory in $ac_dir_suffix.\n  ac_top_builddir_sub=`printf \"%s\\n\" \"$ac_dir_suffix\" | sed 's|/[^\\\\/]*|/..|g;s|/||'`\n  case $ac_top_builddir_sub in\n  \"\") ac_top_builddir_sub=. ac_top_build_prefix= ;;\n  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;\n  esac ;;\nesac\nac_abs_top_builddir=$ac_pwd\nac_abs_builddir=$ac_pwd$ac_dir_suffix\n# for backward compatibility:\nac_top_builddir=$ac_top_build_prefix\n\ncase $srcdir in\n  .)  # We are building in place.\n    ac_srcdir=.\n    ac_top_srcdir=$ac_top_builddir_sub\n    ac_abs_top_srcdir=$ac_pwd ;;\n  [\\\\/]* | ?:[\\\\/]* )  # Absolute name.\n    ac_srcdir=$srcdir$ac_dir_suffix;\n    ac_top_srcdir=$srcdir\n    ac_abs_top_srcdir=$srcdir ;;\n  *) # Relative name.\n    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix\n    ac_top_srcdir=$ac_top_build_prefix$srcdir\n    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;\nesac\nac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix\n\n    cd \"$ac_dir\" || { ac_status=$?; continue; }\n    # Check for configure.gnu first; this name is used for a wrapper for\n    # Metaconfig's \"Configure\" on case-insensitive file systems.\n    if test -f \"$ac_srcdir/configure.gnu\"; then\n      echo &&\n      $SHELL \"$ac_srcdir/configure.gnu\" --help=recursive\n    elif test -f \"$ac_srcdir/configure\"; then\n      echo &&\n      $SHELL \"$ac_srcdir/configure\" --help=recursive\n    else\n      printf \"%s\\n\" \"$as_me: WARNING: no configuration information is in $ac_dir\" >&2\n    fi || ac_status=$?\n    cd \"$ac_pwd\" || { ac_status=$?; break; }\n  done\nfi\n\ntest -n \"$ac_init_help\" && exit $ac_status\nif $ac_init_version; then\n  cat <<\\_ACEOF\nasterisk configure master\ngenerated by GNU Autoconf 2.72\n\nCopyright (C) 2023 Free Software Foundation, Inc.\nThis configure script is free software; the Free Software Foundation\ngives unlimited permission to copy, distribute and modify it.\n\n\"Asterisk\"\n_ACEOF\n  exit\nfi\n\n## ------------------------ ##\n## Autoconf initialization. ##\n## ------------------------ ##\n\n# ac_fn_c_try_compile LINENO\n# --------------------------\n# Try to compile conftest.$ac_ext, and return whether this succeeded.\nac_fn_c_try_compile ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  rm -f conftest.$ac_objext conftest.beam\n  if { { ac_try=\"$ac_compile\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\nprintf \"%s\\n\" \"$ac_try_echo\"; } >&5\n  (eval \"$ac_compile\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    grep -v '^ *+' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n    mv -f conftest.er1 conftest.err\n  fi\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } && {\n\t test -z \"$ac_c_werror_flag\" ||\n\t test ! -s conftest.err\n       } && test -s conftest.$ac_objext\nthen :\n  ac_retval=0\nelse case e in #(\n  e) printf \"%s\\n\" \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n\tac_retval=1 ;;\nesac\nfi\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_c_try_compile\n\n# ac_fn_c_check_header_compile LINENO HEADER VAR INCLUDES\n# -------------------------------------------------------\n# Tests whether HEADER exists and can be compiled using the include files in\n# INCLUDES, setting the cache variable VAR accordingly.\nac_fn_c_check_header_compile ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $2\" >&5\nprintf %s \"checking for $2... \" >&6; }\nif eval test \\${$3+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\n#include <$2>\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  eval \"$3=yes\"\nelse case e in #(\n  e) eval \"$3=no\" ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\neval ac_res=\\$$3\n\t       { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\nprintf \"%s\\n\" \"$ac_res\" >&6; }\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n\n} # ac_fn_c_check_header_compile\n\n# ac_fn_cxx_try_compile LINENO\n# ----------------------------\n# Try to compile conftest.$ac_ext, and return whether this succeeded.\nac_fn_cxx_try_compile ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  rm -f conftest.$ac_objext conftest.beam\n  if { { ac_try=\"$ac_compile\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\nprintf \"%s\\n\" \"$ac_try_echo\"; } >&5\n  (eval \"$ac_compile\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    grep -v '^ *+' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n    mv -f conftest.er1 conftest.err\n  fi\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } && {\n\t test -z \"$ac_cxx_werror_flag\" ||\n\t test ! -s conftest.err\n       } && test -s conftest.$ac_objext\nthen :\n  ac_retval=0\nelse case e in #(\n  e) printf \"%s\\n\" \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n\tac_retval=1 ;;\nesac\nfi\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_cxx_try_compile\n\n# ac_fn_c_try_cpp LINENO\n# ----------------------\n# Try to preprocess conftest.$ac_ext, and return whether this succeeded.\nac_fn_c_try_cpp ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  if { { ac_try=\"$ac_cpp conftest.$ac_ext\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\nprintf \"%s\\n\" \"$ac_try_echo\"; } >&5\n  (eval \"$ac_cpp conftest.$ac_ext\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    grep -v '^ *+' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n    mv -f conftest.er1 conftest.err\n  fi\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } > conftest.i && {\n\t test -z \"$ac_c_preproc_warn_flag$ac_c_werror_flag\" ||\n\t test ! -s conftest.err\n       }\nthen :\n  ac_retval=0\nelse case e in #(\n  e) printf \"%s\\n\" \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n    ac_retval=1 ;;\nesac\nfi\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_c_try_cpp\n\n# ac_fn_cxx_try_cpp LINENO\n# ------------------------\n# Try to preprocess conftest.$ac_ext, and return whether this succeeded.\nac_fn_cxx_try_cpp ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  if { { ac_try=\"$ac_cpp conftest.$ac_ext\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\nprintf \"%s\\n\" \"$ac_try_echo\"; } >&5\n  (eval \"$ac_cpp conftest.$ac_ext\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    grep -v '^ *+' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n    mv -f conftest.er1 conftest.err\n  fi\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } > conftest.i && {\n\t test -z \"$ac_cxx_preproc_warn_flag$ac_cxx_werror_flag\" ||\n\t test ! -s conftest.err\n       }\nthen :\n  ac_retval=0\nelse case e in #(\n  e) printf \"%s\\n\" \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n    ac_retval=1 ;;\nesac\nfi\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_cxx_try_cpp\n\n# ac_fn_c_try_link LINENO\n# -----------------------\n# Try to link conftest.$ac_ext, and return whether this succeeded.\nac_fn_c_try_link ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  rm -f conftest.$ac_objext conftest.beam conftest$ac_exeext\n  if { { ac_try=\"$ac_link\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\nprintf \"%s\\n\" \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    grep -v '^ *+' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n    mv -f conftest.er1 conftest.err\n  fi\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } && {\n\t test -z \"$ac_c_werror_flag\" ||\n\t test ! -s conftest.err\n       } && test -s conftest$ac_exeext && {\n\t test \"$cross_compiling\" = yes ||\n\t test -x conftest$ac_exeext\n       }\nthen :\n  ac_retval=0\nelse case e in #(\n  e) printf \"%s\\n\" \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n\tac_retval=1 ;;\nesac\nfi\n  # Delete the IPA/IPO (Inter Procedural Analysis/Optimization) information\n  # created by the PGI compiler (conftest_ipa8_conftest.oo), as it would\n  # interfere with the next link command; also delete a directory that is\n  # left behind by Apple's compiler.  We do this before executing the actions.\n  rm -rf conftest.dSYM conftest_ipa8_conftest.oo\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_c_try_link\n\n# ac_fn_c_check_func LINENO FUNC VAR\n# ----------------------------------\n# Tests whether FUNC exists, setting the cache variable VAR accordingly\nac_fn_c_check_func ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $2\" >&5\nprintf %s \"checking for $2... \" >&6; }\nif eval test \\${$3+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n/* Define $2 to an innocuous variant, in case <limits.h> declares $2.\n   For example, HP-UX 11i <limits.h> declares gettimeofday.  */\n#define $2 innocuous_$2\n\n/* System header to define __stub macros and hopefully few prototypes,\n   which can conflict with char $2 (void); below.  */\n\n#include <limits.h>\n#undef $2\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar $2 (void);\n/* The GNU C library defines this for functions which it implements\n    to always fail with ENOSYS.  Some functions are actually named\n    something starting with __ and the normal name is an alias.  */\n#if defined __stub_$2 || defined __stub___$2\nchoke me\n#endif\n\nint\nmain (void)\n{\nreturn $2 ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"\nthen :\n  eval \"$3=yes\"\nelse case e in #(\n  e) eval \"$3=no\" ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam \\\n    conftest$ac_exeext conftest.$ac_ext ;;\nesac\nfi\neval ac_res=\\$$3\n\t       { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\nprintf \"%s\\n\" \"$ac_res\" >&6; }\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n\n} # ac_fn_c_check_func\n\n# ac_fn_c_check_type LINENO TYPE VAR INCLUDES\n# -------------------------------------------\n# Tests whether TYPE exists after having included INCLUDES, setting cache\n# variable VAR accordingly.\nac_fn_c_check_type ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $2\" >&5\nprintf %s \"checking for $2... \" >&6; }\nif eval test \\${$3+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) eval \"$3=no\"\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\nint\nmain (void)\n{\nif (sizeof ($2))\n\t return 0;\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\nint\nmain (void)\n{\nif (sizeof (($2)))\n\t    return 0;\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n\nelse case e in #(\n  e) eval \"$3=yes\" ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\neval ac_res=\\$$3\n\t       { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\nprintf \"%s\\n\" \"$ac_res\" >&6; }\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n\n} # ac_fn_c_check_type\n\n# ac_fn_c_try_run LINENO\n# ----------------------\n# Try to run conftest.$ac_ext, and return whether this succeeded. Assumes that\n# executables *can* be run.\nac_fn_c_try_run ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  if { { ac_try=\"$ac_link\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\nprintf \"%s\\n\" \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link\") 2>&5\n  ac_status=$?\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } && { ac_try='./conftest$ac_exeext'\n  { { case \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\nprintf \"%s\\n\" \"$ac_try_echo\"; } >&5\n  (eval \"$ac_try\") 2>&5\n  ac_status=$?\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; }\nthen :\n  ac_retval=0\nelse case e in #(\n  e) printf \"%s\\n\" \"$as_me: program exited with status $ac_status\" >&5\n       printf \"%s\\n\" \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n       ac_retval=$ac_status ;;\nesac\nfi\n  rm -rf conftest.dSYM conftest_ipa8_conftest.oo\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_c_try_run\n\n# ac_fn_c_check_member LINENO AGGR MEMBER VAR INCLUDES\n# ----------------------------------------------------\n# Tries to find if the field MEMBER exists in type AGGR, after including\n# INCLUDES, setting cache variable VAR accordingly.\nac_fn_c_check_member ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $2.$3\" >&5\nprintf %s \"checking for $2.$3... \" >&6; }\nif eval test \\${$4+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$5\nint\nmain (void)\n{\nstatic $2 ac_aggr;\nif (ac_aggr.$3)\nreturn 0;\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  eval \"$4=yes\"\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$5\nint\nmain (void)\n{\nstatic $2 ac_aggr;\nif (sizeof ac_aggr.$3)\nreturn 0;\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  eval \"$4=yes\"\nelse case e in #(\n  e) eval \"$4=no\" ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\neval ac_res=\\$$4\n\t       { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\nprintf \"%s\\n\" \"$ac_res\" >&6; }\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n\n} # ac_fn_c_check_member\n\n# ac_fn_check_decl LINENO SYMBOL VAR INCLUDES EXTRA-OPTIONS FLAG-VAR\n# ------------------------------------------------------------------\n# Tests whether SYMBOL is declared in INCLUDES, setting cache variable VAR\n# accordingly. Pass EXTRA-OPTIONS to the compiler, using FLAG-VAR.\nac_fn_check_decl ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  as_decl_name=`echo $2|sed 's/ *(.*//'`\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether $as_decl_name is declared\" >&5\nprintf %s \"checking whether $as_decl_name is declared... \" >&6; }\nif eval test \\${$3+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) as_decl_use=`echo $2|sed -e 's/(/((/' -e 's/)/) 0&/' -e 's/,/) 0& (/g'`\n  eval ac_save_FLAGS=\\$$6\n  as_fn_append $6 \" $5\"\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\nint\nmain (void)\n{\n#ifndef $as_decl_name\n#ifdef __cplusplus\n  (void) $as_decl_use;\n#else\n  (void) $as_decl_name;\n#endif\n#endif\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  eval \"$3=yes\"\nelse case e in #(\n  e) eval \"$3=no\" ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\n  eval $6=\\$ac_save_FLAGS\n ;;\nesac\nfi\neval ac_res=\\$$3\n\t       { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\nprintf \"%s\\n\" \"$ac_res\" >&6; }\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n\n} # ac_fn_check_decl\n\n# ac_fn_c_compute_int LINENO EXPR VAR INCLUDES\n# --------------------------------------------\n# Tries to find the compile-time value of EXPR in a program that includes\n# INCLUDES, setting VAR accordingly. Returns whether the value could be\n# computed\nac_fn_c_compute_int ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  if test \"$cross_compiling\" = yes; then\n    # Depending upon the size, compute the lo and hi bounds.\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\nint\nmain (void)\n{\nstatic int test_array [1 - 2 * !(($2) >= 0)];\ntest_array [0] = 0;\nreturn test_array [0];\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_lo=0 ac_mid=0\n  while :; do\n    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\nint\nmain (void)\n{\nstatic int test_array [1 - 2 * !(($2) <= $ac_mid)];\ntest_array [0] = 0;\nreturn test_array [0];\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_hi=$ac_mid; break\nelse case e in #(\n  e) as_fn_arith $ac_mid + 1 && ac_lo=$as_val\n\t\t\tif test $ac_lo -le $ac_mid; then\n\t\t\t  ac_lo= ac_hi=\n\t\t\t  break\n\t\t\tfi\n\t\t\tas_fn_arith 2 '*' $ac_mid + 1 && ac_mid=$as_val ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\n  done\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\nint\nmain (void)\n{\nstatic int test_array [1 - 2 * !(($2) < 0)];\ntest_array [0] = 0;\nreturn test_array [0];\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_hi=-1 ac_mid=-1\n  while :; do\n    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\nint\nmain (void)\n{\nstatic int test_array [1 - 2 * !(($2) >= $ac_mid)];\ntest_array [0] = 0;\nreturn test_array [0];\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_lo=$ac_mid; break\nelse case e in #(\n  e) as_fn_arith '(' $ac_mid ')' - 1 && ac_hi=$as_val\n\t\t\tif test $ac_mid -le $ac_hi; then\n\t\t\t  ac_lo= ac_hi=\n\t\t\t  break\n\t\t\tfi\n\t\t\tas_fn_arith 2 '*' $ac_mid && ac_mid=$as_val ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\n  done\nelse case e in #(\n  e) ac_lo= ac_hi= ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\n# Binary search between lo and hi bounds.\nwhile test \"x$ac_lo\" != \"x$ac_hi\"; do\n  as_fn_arith '(' $ac_hi - $ac_lo ')' / 2 + $ac_lo && ac_mid=$as_val\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\nint\nmain (void)\n{\nstatic int test_array [1 - 2 * !(($2) <= $ac_mid)];\ntest_array [0] = 0;\nreturn test_array [0];\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_hi=$ac_mid\nelse case e in #(\n  e) as_fn_arith '(' $ac_mid ')' + 1 && ac_lo=$as_val ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\ndone\ncase $ac_lo in #((\n?*) eval \"$3=\\$ac_lo\"; ac_retval=0 ;;\n'') ac_retval=1 ;;\nesac\n  else\n    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\nstatic long int longval (void) { return $2; }\nstatic unsigned long int ulongval (void) { return $2; }\n#include <stdio.h>\n#include <stdlib.h>\nint\nmain (void)\n{\n\n  FILE *f = fopen (\"conftest.val\", \"w\");\n  if (! f)\n    return 1;\n  if (($2) < 0)\n    {\n      long int i = longval ();\n      if (i != ($2))\n\treturn 1;\n      fprintf (f, \"%ld\", i);\n    }\n  else\n    {\n      unsigned long int i = ulongval ();\n      if (i != ($2))\n\treturn 1;\n      fprintf (f, \"%lu\", i);\n    }\n  /* Do not output a trailing newline, as this causes \\r\\n confusion\n     on some platforms.  */\n  return ferror (f) || fclose (f) != 0;\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_run \"$LINENO\"\nthen :\n  echo >>conftest.val; read $3 <conftest.val; ac_retval=0\nelse case e in #(\n  e) ac_retval=1 ;;\nesac\nfi\nrm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \\\n  conftest.$ac_objext conftest.beam conftest.$ac_ext\nrm -f conftest.val\n\n  fi\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_c_compute_int\nac_configure_args_raw=\nfor ac_arg\ndo\n  case $ac_arg in\n  *\\'*)\n    ac_arg=`printf \"%s\\n\" \"$ac_arg\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n  esac\n  as_fn_append ac_configure_args_raw \" '$ac_arg'\"\ndone\n\ncase $ac_configure_args_raw in\n  *$as_nl*)\n    ac_safe_unquote= ;;\n  *)\n    ac_unsafe_z='|&;<>()$`\\\\\"*?[ ''\t' # This string ends in space, tab.\n    ac_unsafe_a=\"$ac_unsafe_z#~\"\n    ac_safe_unquote=\"s/ '\\\\([^$ac_unsafe_a][^$ac_unsafe_z]*\\\\)'/ \\\\1/g\"\n    ac_configure_args_raw=`      printf \"%s\\n\" \"$ac_configure_args_raw\" | sed \"$ac_safe_unquote\"`;;\nesac\n\ncat >config.log <<_ACEOF\nThis file contains any messages produced by compilers while\nrunning configure, to aid debugging if configure makes a mistake.\n\nIt was created by asterisk $as_me master, which was\ngenerated by GNU Autoconf 2.72.  Invocation command line was\n\n  $ $0$ac_configure_args_raw\n\n_ACEOF\nexec 5>>config.log\n{\ncat <<_ASUNAME\n## --------- ##\n## Platform. ##\n## --------- ##\n\nhostname = `(hostname || uname -n) 2>/dev/null | sed 1q`\nuname -m = `(uname -m) 2>/dev/null || echo unknown`\nuname -r = `(uname -r) 2>/dev/null || echo unknown`\nuname -s = `(uname -s) 2>/dev/null || echo unknown`\nuname -v = `(uname -v) 2>/dev/null || echo unknown`\n\n/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`\n/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`\n\n/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`\n/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`\n/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`\n/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`\n/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`\n/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`\n/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`\n\n_ASUNAME\n\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    printf \"%s\\n\" \"PATH: $as_dir\"\n  done\nIFS=$as_save_IFS\n\n} >&5\n\ncat >&5 <<_ACEOF\n\n\n## ----------- ##\n## Core tests. ##\n## ----------- ##\n\n_ACEOF\n\n\n# Keep a trace of the command line.\n# Strip out --no-create and --no-recursion so they do not pile up.\n# Strip out --silent because we don't want to record it for future runs.\n# Also quote any args containing shell meta-characters.\n# Make two passes to allow for proper duplicate-argument suppression.\nac_configure_args=\nac_configure_args0=\nac_configure_args1=\nac_must_keep_next=false\nfor ac_pass in 1 2\ndo\n  for ac_arg\n  do\n    case $ac_arg in\n    -no-create | --no-c* | -n | -no-recursion | --no-r*) continue ;;\n    -q | -quiet | --quiet | --quie | --qui | --qu | --q \\\n    | -silent | --silent | --silen | --sile | --sil)\n      continue ;;\n    *\\'*)\n      ac_arg=`printf \"%s\\n\" \"$ac_arg\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n    esac\n    case $ac_pass in\n    1) as_fn_append ac_configure_args0 \" '$ac_arg'\" ;;\n    2)\n      as_fn_append ac_configure_args1 \" '$ac_arg'\"\n      if test $ac_must_keep_next = true; then\n\tac_must_keep_next=false # Got value, back to normal.\n      else\n\tcase $ac_arg in\n\t  *=* | --config-cache | -C | -disable-* | --disable-* \\\n\t  | -enable-* | --enable-* | -gas | --g* | -nfp | --nf* \\\n\t  | -q | -quiet | --q* | -silent | --sil* | -v | -verb* \\\n\t  | -with-* | --with-* | -without-* | --without-* | --x)\n\t    case \"$ac_configure_args0 \" in\n\t      \"$ac_configure_args1\"*\" '$ac_arg' \"* ) continue ;;\n\t    esac\n\t    ;;\n\t  -* ) ac_must_keep_next=true ;;\n\tesac\n      fi\n      as_fn_append ac_configure_args \" '$ac_arg'\"\n      ;;\n    esac\n  done\ndone\n{ ac_configure_args0=; unset ac_configure_args0;}\n{ ac_configure_args1=; unset ac_configure_args1;}\n\n# When interrupted or exit'd, cleanup temporary files, and complete\n# config.log.  We remove comments because anyway the quotes in there\n# would cause problems or look ugly.\n# WARNING: Use '\\'' to represent an apostrophe within the trap.\n# WARNING: Do not start the trap code with a newline, due to a FreeBSD 4.0 bug.\ntrap 'exit_status=$?\n  # Sanitize IFS.\n  IFS=\" \"\"\t$as_nl\"\n  # Save into config.log some information that might help in debugging.\n  {\n    echo\n\n    printf \"%s\\n\" \"## ---------------- ##\n## Cache variables. ##\n## ---------------- ##\"\n    echo\n    # The following way of writing the cache mishandles newlines in values,\n(\n  for ac_var in `(set) 2>&1 | sed -n '\\''s/^\\([a-zA-Z_][a-zA-Z0-9_]*\\)=.*/\\1/p'\\''`; do\n    eval ac_val=\\$$ac_var\n    case $ac_val in #(\n    *${as_nl}*)\n      case $ac_var in #(\n      *_cv_*) { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: cache variable $ac_var contains a newline\" >&2;} ;;\n      esac\n      case $ac_var in #(\n      _ | IFS | as_nl) ;; #(\n      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(\n      *) { eval $ac_var=; unset $ac_var;} ;;\n      esac ;;\n    esac\n  done\n  (set) 2>&1 |\n    case $as_nl`(ac_space='\\'' '\\''; set) 2>&1` in #(\n    *${as_nl}ac_space=\\ *)\n      sed -n \\\n\t\"s/'\\''/'\\''\\\\\\\\'\\'''\\''/g;\n\t  s/^\\\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\\\)=\\\\(.*\\\\)/\\\\1='\\''\\\\2'\\''/p\"\n      ;; #(\n    *)\n      sed -n \"/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p\"\n      ;;\n    esac |\n    sort\n)\n    echo\n\n    printf \"%s\\n\" \"## ----------------- ##\n## Output variables. ##\n## ----------------- ##\"\n    echo\n    for ac_var in $ac_subst_vars\n    do\n      eval ac_val=\\$$ac_var\n      case $ac_val in\n      *\\'\\''*) ac_val=`printf \"%s\\n\" \"$ac_val\" | sed \"s/'\\''/'\\''\\\\\\\\\\\\\\\\'\\'''\\''/g\"`;;\n      esac\n      printf \"%s\\n\" \"$ac_var='\\''$ac_val'\\''\"\n    done | sort\n    echo\n\n    if test -n \"$ac_subst_files\"; then\n      printf \"%s\\n\" \"## ------------------- ##\n## File substitutions. ##\n## ------------------- ##\"\n      echo\n      for ac_var in $ac_subst_files\n      do\n\teval ac_val=\\$$ac_var\n\tcase $ac_val in\n\t*\\'\\''*) ac_val=`printf \"%s\\n\" \"$ac_val\" | sed \"s/'\\''/'\\''\\\\\\\\\\\\\\\\'\\'''\\''/g\"`;;\n\tesac\n\tprintf \"%s\\n\" \"$ac_var='\\''$ac_val'\\''\"\n      done | sort\n      echo\n    fi\n\n    if test -s confdefs.h; then\n      printf \"%s\\n\" \"## ----------- ##\n## confdefs.h. ##\n## ----------- ##\"\n      echo\n      cat confdefs.h\n      echo\n    fi\n    test \"$ac_signal\" != 0 &&\n      printf \"%s\\n\" \"$as_me: caught signal $ac_signal\"\n    printf \"%s\\n\" \"$as_me: exit $exit_status\"\n  } >&5\n  rm -f core *.core core.conftest.* &&\n    rm -f -r conftest* confdefs* conf$$* $ac_clean_files &&\n    exit $exit_status\n' 0\nfor ac_signal in 1 2 13 15; do\n  trap 'ac_signal='$ac_signal'; as_fn_exit 1' $ac_signal\ndone\nac_signal=0\n\n# confdefs.h avoids OS command line length limits that DEFS can exceed.\nrm -f -r conftest* confdefs.h\n\nprintf \"%s\\n\" \"/* confdefs.h */\" > confdefs.h\n\n# Predefined preprocessor variables.\n\nprintf \"%s\\n\" \"#define PACKAGE_NAME \\\"$PACKAGE_NAME\\\"\" >>confdefs.h\n\nprintf \"%s\\n\" \"#define PACKAGE_TARNAME \\\"$PACKAGE_TARNAME\\\"\" >>confdefs.h\n\nprintf \"%s\\n\" \"#define PACKAGE_VERSION \\\"$PACKAGE_VERSION\\\"\" >>confdefs.h\n\nprintf \"%s\\n\" \"#define PACKAGE_STRING \\\"$PACKAGE_STRING\\\"\" >>confdefs.h\n\nprintf \"%s\\n\" \"#define PACKAGE_BUGREPORT \\\"$PACKAGE_BUGREPORT\\\"\" >>confdefs.h\n\nprintf \"%s\\n\" \"#define PACKAGE_URL \\\"$PACKAGE_URL\\\"\" >>confdefs.h\n\n\n# Let the site file select an alternate cache file if it wants to.\n# Prefer an explicitly selected file to automatically selected ones.\nif test -n \"$CONFIG_SITE\"; then\n  ac_site_files=\"$CONFIG_SITE\"\nelif test \"x$prefix\" != xNONE; then\n  ac_site_files=\"$prefix/share/config.site $prefix/etc/config.site\"\nelse\n  ac_site_files=\"$ac_default_prefix/share/config.site $ac_default_prefix/etc/config.site\"\nfi\n\nfor ac_site_file in $ac_site_files\ndo\n  case $ac_site_file in #(\n  */*) :\n     ;; #(\n  *) :\n    ac_site_file=./$ac_site_file ;;\nesac\n  if test -f \"$ac_site_file\" && test -r \"$ac_site_file\"; then\n    { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: loading site script $ac_site_file\" >&5\nprintf \"%s\\n\" \"$as_me: loading site script $ac_site_file\" >&6;}\n    sed 's/^/| /' \"$ac_site_file\" >&5\n    . \"$ac_site_file\" \\\n      || { { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':\" >&5\nprintf \"%s\\n\" \"$as_me: error: in '$ac_pwd':\" >&2;}\nas_fn_error $? \"failed to load site script $ac_site_file\nSee 'config.log' for more details\" \"$LINENO\" 5; }\n  fi\ndone\n\nif test -r \"$cache_file\"; then\n  # Some versions of bash will fail to source /dev/null (special files\n  # actually), so we avoid doing that.  DJGPP emulates it as a regular file.\n  if test /dev/null != \"$cache_file\" && test -f \"$cache_file\"; then\n    { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: loading cache $cache_file\" >&5\nprintf \"%s\\n\" \"$as_me: loading cache $cache_file\" >&6;}\n    case $cache_file in\n      [\\\\/]* | ?:[\\\\/]* ) . \"$cache_file\";;\n      *)                      . \"./$cache_file\";;\n    esac\n  fi\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: creating cache $cache_file\" >&5\nprintf \"%s\\n\" \"$as_me: creating cache $cache_file\" >&6;}\n  >$cache_file\nfi\n\n# Test code for whether the C compiler supports C89 (global declarations)\nac_c_conftest_c89_globals='\n/* Does the compiler advertise C89 conformance?\n   Do not test the value of __STDC__, because some compilers set it to 0\n   while being otherwise adequately conformant. */\n#if !defined __STDC__\n# error \"Compiler does not advertise C89 conformance\"\n#endif\n\n#include <stddef.h>\n#include <stdarg.h>\nstruct stat;\n/* Most of the following tests are stolen from RCS 5.7 src/conf.sh.  */\nstruct buf { int x; };\nstruct buf * (*rcsopen) (struct buf *, struct stat *, int);\nstatic char *e (char **p, int i)\n{\n  return p[i];\n}\nstatic char *f (char * (*g) (char **, int), char **p, ...)\n{\n  char *s;\n  va_list v;\n  va_start (v,p);\n  s = g (p, va_arg (v,int));\n  va_end (v);\n  return s;\n}\n\n/* C89 style stringification. */\n#define noexpand_stringify(a) #a\nconst char *stringified = noexpand_stringify(arbitrary+token=sequence);\n\n/* C89 style token pasting.  Exercises some of the corner cases that\n   e.g. old MSVC gets wrong, but not very hard. */\n#define noexpand_concat(a,b) a##b\n#define expand_concat(a,b) noexpand_concat(a,b)\nextern int vA;\nextern int vbee;\n#define aye A\n#define bee B\nint *pvA = &expand_concat(v,aye);\nint *pvbee = &noexpand_concat(v,bee);\n\n/* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has\n   function prototypes and stuff, but not \\xHH hex character constants.\n   These do not provoke an error unfortunately, instead are silently treated\n   as an \"x\".  The following induces an error, until -std is added to get\n   proper ANSI mode.  Curiously \\x00 != x always comes out true, for an\n   array size at least.  It is necessary to write \\x00 == 0 to get something\n   that is true only with -std.  */\nint osf4_cc_array ['\\''\\x00'\\'' == 0 ? 1 : -1];\n\n/* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters\n   inside strings and character constants.  */\n#define FOO(x) '\\''x'\\''\nint xlc6_cc_array[FOO(a) == '\\''x'\\'' ? 1 : -1];\n\nint test (int i, double x);\nstruct s1 {int (*f) (int a);};\nstruct s2 {int (*f) (double a);};\nint pairnames (int, char **, int *(*)(struct buf *, struct stat *, int),\n               int, int);'\n\n# Test code for whether the C compiler supports C89 (body of main).\nac_c_conftest_c89_main='\nok |= (argc == 0 || f (e, argv, 0) != argv[0] || f (e, argv, 1) != argv[1]);\n'\n\n# Test code for whether the C compiler supports C99 (global declarations)\nac_c_conftest_c99_globals='\n/* Does the compiler advertise C99 conformance? */\n#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 199901L\n# error \"Compiler does not advertise C99 conformance\"\n#endif\n\n// See if C++-style comments work.\n\n#include <stdbool.h>\nextern int puts (const char *);\nextern int printf (const char *, ...);\nextern int dprintf (int, const char *, ...);\nextern void *malloc (size_t);\nextern void free (void *);\n\n// Check varargs macros.  These examples are taken from C99 6.10.3.5.\n// dprintf is used instead of fprintf to avoid needing to declare\n// FILE and stderr.\n#define debug(...) dprintf (2, __VA_ARGS__)\n#define showlist(...) puts (#__VA_ARGS__)\n#define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))\nstatic void\ntest_varargs_macros (void)\n{\n  int x = 1234;\n  int y = 5678;\n  debug (\"Flag\");\n  debug (\"X = %d\\n\", x);\n  showlist (The first, second, and third items.);\n  report (x>y, \"x is %d but y is %d\", x, y);\n}\n\n// Check long long types.\n#define BIG64 18446744073709551615ull\n#define BIG32 4294967295ul\n#define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)\n#if !BIG_OK\n  #error \"your preprocessor is broken\"\n#endif\n#if BIG_OK\n#else\n  #error \"your preprocessor is broken\"\n#endif\nstatic long long int bignum = -9223372036854775807LL;\nstatic unsigned long long int ubignum = BIG64;\n\nstruct incomplete_array\n{\n  int datasize;\n  double data[];\n};\n\nstruct named_init {\n  int number;\n  const wchar_t *name;\n  double average;\n};\n\ntypedef const char *ccp;\n\nstatic inline int\ntest_restrict (ccp restrict text)\n{\n  // Iterate through items via the restricted pointer.\n  // Also check for declarations in for loops.\n  for (unsigned int i = 0; *(text+i) != '\\''\\0'\\''; ++i)\n    continue;\n  return 0;\n}\n\n// Check varargs and va_copy.\nstatic bool\ntest_varargs (const char *format, ...)\n{\n  va_list args;\n  va_start (args, format);\n  va_list args_copy;\n  va_copy (args_copy, args);\n\n  const char *str = \"\";\n  int number = 0;\n  float fnumber = 0;\n\n  while (*format)\n    {\n      switch (*format++)\n\t{\n\tcase '\\''s'\\'': // string\n\t  str = va_arg (args_copy, const char *);\n\t  break;\n\tcase '\\''d'\\'': // int\n\t  number = va_arg (args_copy, int);\n\t  break;\n\tcase '\\''f'\\'': // float\n\t  fnumber = va_arg (args_copy, double);\n\t  break;\n\tdefault:\n\t  break;\n\t}\n    }\n  va_end (args_copy);\n  va_end (args);\n\n  return *str && number && fnumber;\n}\n'\n\n# Test code for whether the C compiler supports C99 (body of main).\nac_c_conftest_c99_main='\n  // Check bool.\n  _Bool success = false;\n  success |= (argc != 0);\n\n  // Check restrict.\n  if (test_restrict (\"String literal\") == 0)\n    success = true;\n  char *restrict newvar = \"Another string\";\n\n  // Check varargs.\n  success &= test_varargs (\"s, d'\\'' f .\", \"string\", 65, 34.234);\n  test_varargs_macros ();\n\n  // Check flexible array members.\n  struct incomplete_array *ia =\n    malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));\n  ia->datasize = 10;\n  for (int i = 0; i < ia->datasize; ++i)\n    ia->data[i] = i * 1.234;\n  // Work around memory leak warnings.\n  free (ia);\n\n  // Check named initializers.\n  struct named_init ni = {\n    .number = 34,\n    .name = L\"Test wide string\",\n    .average = 543.34343,\n  };\n\n  ni.number = 58;\n\n  int dynamic_array[ni.number];\n  dynamic_array[0] = argv[0][0];\n  dynamic_array[ni.number - 1] = 543;\n\n  // work around unused variable warnings\n  ok |= (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == '\\''x'\\''\n\t || dynamic_array[ni.number - 1] != 543);\n'\n\n# Test code for whether the C compiler supports C11 (global declarations)\nac_c_conftest_c11_globals='\n/* Does the compiler advertise C11 conformance? */\n#if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L\n# error \"Compiler does not advertise C11 conformance\"\n#endif\n\n// Check _Alignas.\nchar _Alignas (double) aligned_as_double;\nchar _Alignas (0) no_special_alignment;\nextern char aligned_as_int;\nchar _Alignas (0) _Alignas (int) aligned_as_int;\n\n// Check _Alignof.\nenum\n{\n  int_alignment = _Alignof (int),\n  int_array_alignment = _Alignof (int[100]),\n  char_alignment = _Alignof (char)\n};\n_Static_assert (0 < -_Alignof (int), \"_Alignof is signed\");\n\n// Check _Noreturn.\nint _Noreturn does_not_return (void) { for (;;) continue; }\n\n// Check _Static_assert.\nstruct test_static_assert\n{\n  int x;\n  _Static_assert (sizeof (int) <= sizeof (long int),\n                  \"_Static_assert does not work in struct\");\n  long int y;\n};\n\n// Check UTF-8 literals.\n#define u8 syntax error!\nchar const utf8_literal[] = u8\"happens to be ASCII\" \"another string\";\n\n// Check duplicate typedefs.\ntypedef long *long_ptr;\ntypedef long int *long_ptr;\ntypedef long_ptr long_ptr;\n\n// Anonymous structures and unions -- taken from C11 6.7.2.1 Example 1.\nstruct anonymous\n{\n  union {\n    struct { int i; int j; };\n    struct { int k; long int l; } w;\n  };\n  int m;\n} v1;\n'\n\n# Test code for whether the C compiler supports C11 (body of main).\nac_c_conftest_c11_main='\n  _Static_assert ((offsetof (struct anonymous, i)\n\t\t   == offsetof (struct anonymous, w.k)),\n\t\t  \"Anonymous union alignment botch\");\n  v1.i = 2;\n  v1.w.k = 5;\n  ok |= v1.i != 5;\n'\n\n# Test code for whether the C compiler supports C11 (complete).\nac_c_conftest_c11_program=\"${ac_c_conftest_c89_globals}\n${ac_c_conftest_c99_globals}\n${ac_c_conftest_c11_globals}\n\nint\nmain (int argc, char **argv)\n{\n  int ok = 0;\n  ${ac_c_conftest_c89_main}\n  ${ac_c_conftest_c99_main}\n  ${ac_c_conftest_c11_main}\n  return ok;\n}\n\"\n\n# Test code for whether the C compiler supports C99 (complete).\nac_c_conftest_c99_program=\"${ac_c_conftest_c89_globals}\n${ac_c_conftest_c99_globals}\n\nint\nmain (int argc, char **argv)\n{\n  int ok = 0;\n  ${ac_c_conftest_c89_main}\n  ${ac_c_conftest_c99_main}\n  return ok;\n}\n\"\n\n# Test code for whether the C compiler supports C89 (complete).\nac_c_conftest_c89_program=\"${ac_c_conftest_c89_globals}\n\nint\nmain (int argc, char **argv)\n{\n  int ok = 0;\n  ${ac_c_conftest_c89_main}\n  return ok;\n}\n\"\n\nas_fn_append ac_header_c_list \" stdio.h stdio_h HAVE_STDIO_H\"\nas_fn_append ac_header_c_list \" stdlib.h stdlib_h HAVE_STDLIB_H\"\nas_fn_append ac_header_c_list \" string.h string_h HAVE_STRING_H\"\nas_fn_append ac_header_c_list \" inttypes.h inttypes_h HAVE_INTTYPES_H\"\nas_fn_append ac_header_c_list \" stdint.h stdint_h HAVE_STDINT_H\"\nas_fn_append ac_header_c_list \" strings.h strings_h HAVE_STRINGS_H\"\nas_fn_append ac_header_c_list \" sys/stat.h sys_stat_h HAVE_SYS_STAT_H\"\nas_fn_append ac_header_c_list \" sys/types.h sys_types_h HAVE_SYS_TYPES_H\"\nas_fn_append ac_header_c_list \" unistd.h unistd_h HAVE_UNISTD_H\"\nas_fn_append ac_header_c_list \" wchar.h wchar_h HAVE_WCHAR_H\"\nas_fn_append ac_header_c_list \" minix/config.h minix_config_h HAVE_MINIX_CONFIG_H\"\n# Test code for whether the C++ compiler supports C++98 (global declarations)\nac_cxx_conftest_cxx98_globals='\n// Does the compiler advertise C++98 conformance?\n#if !defined __cplusplus || __cplusplus < 199711L\n# error \"Compiler does not advertise C++98 conformance\"\n#endif\n\n// These inclusions are to reject old compilers that\n// lack the unsuffixed header files.\n#include <cstdlib>\n#include <exception>\n\n// <cassert> and <cstring> are *not* freestanding headers in C++98.\nextern void assert (int);\nnamespace std {\n  extern int strcmp (const char *, const char *);\n}\n\n// Namespaces, exceptions, and templates were all added after \"C++ 2.0\".\nusing std::exception;\nusing std::strcmp;\n\nnamespace {\n\nvoid test_exception_syntax()\n{\n  try {\n    throw \"test\";\n  } catch (const char *s) {\n    // Extra parentheses suppress a warning when building autoconf itself,\n    // due to lint rules shared with more typical C programs.\n    assert (!(strcmp) (s, \"test\"));\n  }\n}\n\ntemplate <typename T> struct test_template\n{\n  T const val;\n  explicit test_template(T t) : val(t) {}\n  template <typename U> T add(U u) { return static_cast<T>(u) + val; }\n};\n\n} // anonymous namespace\n'\n\n# Test code for whether the C++ compiler supports C++98 (body of main)\nac_cxx_conftest_cxx98_main='\n  assert (argc);\n  assert (! argv[0]);\n{\n  test_exception_syntax ();\n  test_template<double> tt (2.0);\n  assert (tt.add (4) == 6.0);\n  assert (true && !false);\n}\n'\n\n# Test code for whether the C++ compiler supports C++11 (global declarations)\nac_cxx_conftest_cxx11_globals='\n// Does the compiler advertise C++ 2011 conformance?\n#if !defined __cplusplus || __cplusplus < 201103L\n# error \"Compiler does not advertise C++11 conformance\"\n#endif\n\nnamespace cxx11test\n{\n  constexpr int get_val() { return 20; }\n\n  struct testinit\n  {\n    int i;\n    double d;\n  };\n\n  class delegate\n  {\n  public:\n    delegate(int n) : n(n) {}\n    delegate(): delegate(2354) {}\n\n    virtual int getval() { return this->n; };\n  protected:\n    int n;\n  };\n\n  class overridden : public delegate\n  {\n  public:\n    overridden(int n): delegate(n) {}\n    virtual int getval() override final { return this->n * 2; }\n  };\n\n  class nocopy\n  {\n  public:\n    nocopy(int i): i(i) {}\n    nocopy() = default;\n    nocopy(const nocopy&) = delete;\n    nocopy & operator=(const nocopy&) = delete;\n  private:\n    int i;\n  };\n\n  // for testing lambda expressions\n  template <typename Ret, typename Fn> Ret eval(Fn f, Ret v)\n  {\n    return f(v);\n  }\n\n  // for testing variadic templates and trailing return types\n  template <typename V> auto sum(V first) -> V\n  {\n    return first;\n  }\n  template <typename V, typename... Args> auto sum(V first, Args... rest) -> V\n  {\n    return first + sum(rest...);\n  }\n}\n'\n\n# Test code for whether the C++ compiler supports C++11 (body of main)\nac_cxx_conftest_cxx11_main='\n{\n  // Test auto and decltype\n  auto a1 = 6538;\n  auto a2 = 48573953.4;\n  auto a3 = \"String literal\";\n\n  int total = 0;\n  for (auto i = a3; *i; ++i) { total += *i; }\n\n  decltype(a2) a4 = 34895.034;\n}\n{\n  // Test constexpr\n  short sa[cxx11test::get_val()] = { 0 };\n}\n{\n  // Test initializer lists\n  cxx11test::testinit il = { 4323, 435234.23544 };\n}\n{\n  // Test range-based for\n  int array[] = {9, 7, 13, 15, 4, 18, 12, 10, 5, 3,\n                 14, 19, 17, 8, 6, 20, 16, 2, 11, 1};\n  for (auto &x : array) { x += 23; }\n}\n{\n  // Test lambda expressions\n  using cxx11test::eval;\n  assert (eval ([](int x) { return x*2; }, 21) == 42);\n  double d = 2.0;\n  assert (eval ([&](double x) { return d += x; }, 3.0) == 5.0);\n  assert (d == 5.0);\n  assert (eval ([=](double x) mutable { return d += x; }, 4.0) == 9.0);\n  assert (d == 5.0);\n}\n{\n  // Test use of variadic templates\n  using cxx11test::sum;\n  auto a = sum(1);\n  auto b = sum(1, 2);\n  auto c = sum(1.0, 2.0, 3.0);\n}\n{\n  // Test constructor delegation\n  cxx11test::delegate d1;\n  cxx11test::delegate d2();\n  cxx11test::delegate d3(45);\n}\n{\n  // Test override and final\n  cxx11test::overridden o1(55464);\n}\n{\n  // Test nullptr\n  char *c = nullptr;\n}\n{\n  // Test template brackets\n  test_template<::test_template<int>> v(test_template<int>(12));\n}\n{\n  // Unicode literals\n  char const *utf8 = u8\"UTF-8 string \\u2500\";\n  char16_t const *utf16 = u\"UTF-8 string \\u2500\";\n  char32_t const *utf32 = U\"UTF-32 string \\u2500\";\n}\n'\n\n# Test code for whether the C compiler supports C++11 (complete).\nac_cxx_conftest_cxx11_program=\"${ac_cxx_conftest_cxx98_globals}\n${ac_cxx_conftest_cxx11_globals}\n\nint\nmain (int argc, char **argv)\n{\n  int ok = 0;\n  ${ac_cxx_conftest_cxx98_main}\n  ${ac_cxx_conftest_cxx11_main}\n  return ok;\n}\n\"\n\n# Test code for whether the C compiler supports C++98 (complete).\nac_cxx_conftest_cxx98_program=\"${ac_cxx_conftest_cxx98_globals}\nint\nmain (int argc, char **argv)\n{\n  int ok = 0;\n  ${ac_cxx_conftest_cxx98_main}\n  return ok;\n}\n\"\n\nas_fn_append ac_header_c_list \" sys/param.h sys_param_h HAVE_SYS_PARAM_H\"\nas_fn_append ac_func_c_list \" getpagesize HAVE_GETPAGESIZE\"\nas_fn_append ac_header_c_list \" sys/select.h sys_select_h HAVE_SYS_SELECT_H\"\nas_fn_append ac_header_c_list \" sys/socket.h sys_socket_h HAVE_SYS_SOCKET_H\"\nas_fn_append ac_header_c_list \" utime.h utime_h HAVE_UTIME_H\"\nas_fn_append ac_func_c_list \" vprintf HAVE_VPRINTF\"\n\n# Auxiliary files required by this configure script.\nac_aux_files=\"install-sh config.guess config.sub\"\n\n# Locations in which to look for auxiliary files.\nac_aux_dir_candidates=\"${srcdir}${PATH_SEPARATOR}${srcdir}/..${PATH_SEPARATOR}${srcdir}/../..\"\n\n# Search for a directory containing all of the required auxiliary files,\n# $ac_aux_files, from the $PATH-style list $ac_aux_dir_candidates.\n# If we don't find one directory that contains all the files we need,\n# we report the set of missing files from the *first* directory in\n# $ac_aux_dir_candidates and give up.\nac_missing_aux_files=\"\"\nac_first_candidate=:\nprintf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: looking for aux files: $ac_aux_files\" >&5\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nas_found=false\nfor as_dir in $ac_aux_dir_candidates\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n  as_found=:\n\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}:  trying $as_dir\" >&5\n  ac_aux_dir_found=yes\n  ac_install_sh=\n  for ac_aux in $ac_aux_files\n  do\n    # As a special case, if \"install-sh\" is required, that requirement\n    # can be satisfied by any of \"install-sh\", \"install.sh\", or \"shtool\",\n    # and $ac_install_sh is set appropriately for whichever one is found.\n    if test x\"$ac_aux\" = x\"install-sh\"\n    then\n      if test -f \"${as_dir}install-sh\"; then\n        printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}:   ${as_dir}install-sh found\" >&5\n        ac_install_sh=\"${as_dir}install-sh -c\"\n      elif test -f \"${as_dir}install.sh\"; then\n        printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}:   ${as_dir}install.sh found\" >&5\n        ac_install_sh=\"${as_dir}install.sh -c\"\n      elif test -f \"${as_dir}shtool\"; then\n        printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}:   ${as_dir}shtool found\" >&5\n        ac_install_sh=\"${as_dir}shtool install -c\"\n      else\n        ac_aux_dir_found=no\n        if $ac_first_candidate; then\n          ac_missing_aux_files=\"${ac_missing_aux_files} install-sh\"\n        else\n          break\n        fi\n      fi\n    else\n      if test -f \"${as_dir}${ac_aux}\"; then\n        printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}:   ${as_dir}${ac_aux} found\" >&5\n      else\n        ac_aux_dir_found=no\n        if $ac_first_candidate; then\n          ac_missing_aux_files=\"${ac_missing_aux_files} ${ac_aux}\"\n        else\n          break\n        fi\n      fi\n    fi\n  done\n  if test \"$ac_aux_dir_found\" = yes; then\n    ac_aux_dir=\"$as_dir\"\n    break\n  fi\n  ac_first_candidate=false\n\n  as_found=false\ndone\nIFS=$as_save_IFS\nif $as_found\nthen :\n\nelse case e in #(\n  e) as_fn_error $? \"cannot find required auxiliary files:$ac_missing_aux_files\" \"$LINENO\" 5 ;;\nesac\nfi\n\n\n# These three variables are undocumented and unsupported,\n# and are intended to be withdrawn in a future Autoconf release.\n# They can cause serious problems if a builder's source tree is in a directory\n# whose full name contains unusual characters.\nif test -f \"${ac_aux_dir}config.guess\"; then\n  ac_config_guess=\"$SHELL ${ac_aux_dir}config.guess\"\nfi\nif test -f \"${ac_aux_dir}config.sub\"; then\n  ac_config_sub=\"$SHELL ${ac_aux_dir}config.sub\"\nfi\nif test -f \"$ac_aux_dir/configure\"; then\n  ac_configure=\"$SHELL ${ac_aux_dir}configure\"\nfi\n\n# Check that the precious variables saved in the cache have kept the same\n# value.\nac_cache_corrupted=false\nfor ac_var in $ac_precious_vars; do\n  eval ac_old_set=\\$ac_cv_env_${ac_var}_set\n  eval ac_new_set=\\$ac_env_${ac_var}_set\n  eval ac_old_val=\\$ac_cv_env_${ac_var}_value\n  eval ac_new_val=\\$ac_env_${ac_var}_value\n  case $ac_old_set,$ac_new_set in\n    set,)\n      { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: '$ac_var' was set to '$ac_old_val' in the previous run\" >&5\nprintf \"%s\\n\" \"$as_me: error: '$ac_var' was set to '$ac_old_val' in the previous run\" >&2;}\n      ac_cache_corrupted=: ;;\n    ,set)\n      { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: '$ac_var' was not set in the previous run\" >&5\nprintf \"%s\\n\" \"$as_me: error: '$ac_var' was not set in the previous run\" >&2;}\n      ac_cache_corrupted=: ;;\n    ,);;\n    *)\n      if test \"x$ac_old_val\" != \"x$ac_new_val\"; then\n\t# differences in whitespace do not lead to failure.\n\tac_old_val_w=`echo x $ac_old_val`\n\tac_new_val_w=`echo x $ac_new_val`\n\tif test \"$ac_old_val_w\" != \"$ac_new_val_w\"; then\n\t  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: '$ac_var' has changed since the previous run:\" >&5\nprintf \"%s\\n\" \"$as_me: error: '$ac_var' has changed since the previous run:\" >&2;}\n\t  ac_cache_corrupted=:\n\telse\n\t  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: warning: ignoring whitespace changes in '$ac_var' since the previous run:\" >&5\nprintf \"%s\\n\" \"$as_me: warning: ignoring whitespace changes in '$ac_var' since the previous run:\" >&2;}\n\t  eval $ac_var=\\$ac_old_val\n\tfi\n\t{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}:   former value:  '$ac_old_val'\" >&5\nprintf \"%s\\n\" \"$as_me:   former value:  '$ac_old_val'\" >&2;}\n\t{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}:   current value: '$ac_new_val'\" >&5\nprintf \"%s\\n\" \"$as_me:   current value: '$ac_new_val'\" >&2;}\n      fi;;\n  esac\n  # Pass precious variables to config.status.\n  if test \"$ac_new_set\" = set; then\n    case $ac_new_val in\n    *\\'*) ac_arg=$ac_var=`printf \"%s\\n\" \"$ac_new_val\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n    *) ac_arg=$ac_var=$ac_new_val ;;\n    esac\n    case \" $ac_configure_args \" in\n      *\" '$ac_arg' \"*) ;; # Avoid dups.  Use of quotes ensures accuracy.\n      *) as_fn_append ac_configure_args \" '$ac_arg'\" ;;\n    esac\n  fi\ndone\nif $ac_cache_corrupted; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':\" >&5\nprintf \"%s\\n\" \"$as_me: error: in '$ac_pwd':\" >&2;}\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: changes in the environment can compromise the build\" >&5\nprintf \"%s\\n\" \"$as_me: error: changes in the environment can compromise the build\" >&2;}\n  as_fn_error $? \"run '${MAKE-make} distclean' and/or 'rm $cache_file'\n\t    and start over\" \"$LINENO\" 5\nfi\n## -------------------- ##\n## Main body of script. ##\n## -------------------- ##\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\n\n# cross-compile macros\n\n\n\n  # Make sure we can run config.sub.\n$SHELL \"${ac_aux_dir}config.sub\" sun4 >/dev/null 2>&1 ||\n  as_fn_error $? \"cannot run $SHELL ${ac_aux_dir}config.sub\" \"$LINENO\" 5\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking build system type\" >&5\nprintf %s \"checking build system type... \" >&6; }\nif test ${ac_cv_build+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_build_alias=$build_alias\ntest \"x$ac_build_alias\" = x &&\n  ac_build_alias=`$SHELL \"${ac_aux_dir}config.guess\"`\ntest \"x$ac_build_alias\" = x &&\n  as_fn_error $? \"cannot guess build type; you must specify one\" \"$LINENO\" 5\nac_cv_build=`$SHELL \"${ac_aux_dir}config.sub\" $ac_build_alias` ||\n  as_fn_error $? \"$SHELL ${ac_aux_dir}config.sub $ac_build_alias failed\" \"$LINENO\" 5\n ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_build\" >&5\nprintf \"%s\\n\" \"$ac_cv_build\" >&6; }\ncase $ac_cv_build in\n*-*-*) ;;\n*) as_fn_error $? \"invalid value of canonical build\" \"$LINENO\" 5;;\nesac\nbuild=$ac_cv_build\nac_save_IFS=$IFS; IFS='-'\nset x $ac_cv_build\nshift\nbuild_cpu=$1\nbuild_vendor=$2\nshift; shift\n# Remember, the first character of IFS is used to create $*,\n# except with old shells:\nbuild_os=$*\nIFS=$ac_save_IFS\ncase $build_os in *\\ *) build_os=`echo \"$build_os\" | sed 's/ /-/g'`;; esac\n\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking host system type\" >&5\nprintf %s \"checking host system type... \" >&6; }\nif test ${ac_cv_host+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test \"x$host_alias\" = x; then\n  ac_cv_host=$ac_cv_build\nelse\n  ac_cv_host=`$SHELL \"${ac_aux_dir}config.sub\" $host_alias` ||\n    as_fn_error $? \"$SHELL ${ac_aux_dir}config.sub $host_alias failed\" \"$LINENO\" 5\nfi\n ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_host\" >&5\nprintf \"%s\\n\" \"$ac_cv_host\" >&6; }\ncase $ac_cv_host in\n*-*-*) ;;\n*) as_fn_error $? \"invalid value of canonical host\" \"$LINENO\" 5;;\nesac\nhost=$ac_cv_host\nac_save_IFS=$IFS; IFS='-'\nset x $ac_cv_host\nshift\nhost_cpu=$1\nhost_vendor=$2\nshift; shift\n# Remember, the first character of IFS is used to create $*,\n# except with old shells:\nhost_os=$*\nIFS=$ac_save_IFS\ncase $host_os in *\\ *) host_os=`echo \"$host_os\" | sed 's/ /-/g'`;; esac\n\n\n\n# check existence of the package\n\n\n\n\n# preserve any CFLAGS or LDFLAGS that may be set\n# NOTE: This must be done before calling any macros that end up\n# calling AC_PROG_CC or the like, since they will set a default\n# set of CFLAGS (\"-g -O2\") if the user did not supply any, and\n# we don't want those default flags to be carried over into the\n# rest of the build system since we have other means of controlling\n# debugging symbol generation and optimization.\nCONFIG_CFLAGS=\"${CFLAGS}\"\nCONFIG_LDFLAGS=\"${LDFLAGS}\"\n\n\n\n# specify output header file\nac_config_headers=\"$ac_config_headers include/asterisk/autoconfig.h\"\n\n\n# Note: AC_PROG_CC *must* be specified before AC_USE_SYSTEM_EXTENSIONS or any\n# other macro that uses the C compiler, or the default order will be used.\n\n\n\n\n\n\n\n\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\nif test -n \"$ac_tool_prefix\"; then\n  for ac_prog in gcc cc\n  do\n    # Extract the first word of \"$ac_tool_prefix$ac_prog\", so it can be a program name with args.\nset dummy $ac_tool_prefix$ac_prog; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_CC+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CC=\"$ac_tool_prefix$ac_prog\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\nprintf \"%s\\n\" \"$CC\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n    test -n \"$CC\" && break\n  done\nfi\nif test -z \"$CC\"; then\n  ac_ct_CC=$CC\n  for ac_prog in gcc cc\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_ac_ct_CC+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$ac_ct_CC\"; then\n  ac_cv_prog_ac_ct_CC=\"$ac_ct_CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_CC=\"$ac_prog\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nac_ct_CC=$ac_cv_prog_ac_ct_CC\nif test -n \"$ac_ct_CC\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC\" >&5\nprintf \"%s\\n\" \"$ac_ct_CC\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n  test -n \"$ac_ct_CC\" && break\ndone\n\n  if test \"x$ac_ct_CC\" = x; then\n    CC=\"\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    CC=$ac_ct_CC\n  fi\nfi\n\n\ntest -z \"$CC\" && { { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':\" >&5\nprintf \"%s\\n\" \"$as_me: error: in '$ac_pwd':\" >&2;}\nas_fn_error $? \"no acceptable C compiler found in \\$PATH\nSee 'config.log' for more details\" \"$LINENO\" 5; }\n\n# Provide some information about the compiler.\nprintf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for C compiler version\" >&5\nset X $ac_compile\nac_compiler=$2\nfor ac_option in --version -v -V -qversion -version; do\n  { { ac_try=\"$ac_compiler $ac_option >&5\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\nprintf \"%s\\n\" \"$ac_try_echo\"; } >&5\n  (eval \"$ac_compiler $ac_option >&5\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    sed '10a\\\n... rest of stderr output deleted ...\n         10q' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n  fi\n  rm -f conftest.er1 conftest.err\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\ndone\n\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain (void)\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nac_clean_files_save=$ac_clean_files\nac_clean_files=\"$ac_clean_files a.out a.out.dSYM a.exe b.out\"\n# Try to create an executable without -o first, disregard a.out.\n# It will help us diagnose broken compilers, and finding out an intuition\n# of exeext.\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether the C compiler works\" >&5\nprintf %s \"checking whether the C compiler works... \" >&6; }\nac_link_default=`printf \"%s\\n\" \"$ac_link\" | sed 's/ -o *conftest[^ ]*//'`\n\n# The possible output files:\nac_files=\"a.out conftest.exe conftest a.exe a_out.exe b.out conftest.*\"\n\nac_rmfiles=\nfor ac_file in $ac_files\ndo\n  case $ac_file in\n    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj ) ;;\n    * ) ac_rmfiles=\"$ac_rmfiles $ac_file\";;\n  esac\ndone\nrm -f $ac_rmfiles\n\nif { { ac_try=\"$ac_link_default\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\nprintf \"%s\\n\" \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link_default\") 2>&5\n  ac_status=$?\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\nthen :\n  # Autoconf-2.13 could set the ac_cv_exeext variable to 'no'.\n# So ignore a value of 'no', otherwise this would lead to 'EXEEXT = no'\n# in a Makefile.  We should not override ac_cv_exeext if it was cached,\n# so that the user can short-circuit this test for compilers unknown to\n# Autoconf.\nfor ac_file in $ac_files ''\ndo\n  test -f \"$ac_file\" || continue\n  case $ac_file in\n    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj )\n\t;;\n    [ab].out )\n\t# We found the default executable, but exeext='' is most\n\t# certainly right.\n\tbreak;;\n    *.* )\n\tif test ${ac_cv_exeext+y} && test \"$ac_cv_exeext\" != no;\n\tthen :; else\n\t   ac_cv_exeext=`expr \"$ac_file\" : '[^.]*\\(\\..*\\)'`\n\tfi\n\t# We set ac_cv_exeext here because the later test for it is not\n\t# safe: cross compilers may not add the suffix if given an '-o'\n\t# argument, so we may need to know it at that point already.\n\t# Even if this section looks crufty: it has the advantage of\n\t# actually working.\n\tbreak;;\n    * )\n\tbreak;;\n  esac\ndone\ntest \"$ac_cv_exeext\" = no && ac_cv_exeext=\n\nelse case e in #(\n  e) ac_file='' ;;\nesac\nfi\nif test -z \"$ac_file\"\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nprintf \"%s\\n\" \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n{ { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':\" >&5\nprintf \"%s\\n\" \"$as_me: error: in '$ac_pwd':\" >&2;}\nas_fn_error 77 \"C compiler cannot create executables\nSee 'config.log' for more details\" \"$LINENO\" 5; }\nelse case e in #(\n  e) { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\nprintf \"%s\\n\" \"yes\" >&6; } ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for C compiler default output file name\" >&5\nprintf %s \"checking for C compiler default output file name... \" >&6; }\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_file\" >&5\nprintf \"%s\\n\" \"$ac_file\" >&6; }\nac_exeext=$ac_cv_exeext\n\nrm -f -r a.out a.out.dSYM a.exe conftest$ac_cv_exeext b.out\nac_clean_files=$ac_clean_files_save\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for suffix of executables\" >&5\nprintf %s \"checking for suffix of executables... \" >&6; }\nif { { ac_try=\"$ac_link\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\nprintf \"%s\\n\" \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link\") 2>&5\n  ac_status=$?\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\nthen :\n  # If both 'conftest.exe' and 'conftest' are 'present' (well, observable)\n# catch 'conftest.exe'.  For instance with Cygwin, 'ls conftest' will\n# work properly (i.e., refer to 'conftest.exe'), while it won't with\n# 'rm'.\nfor ac_file in conftest.exe conftest conftest.*; do\n  test -f \"$ac_file\" || continue\n  case $ac_file in\n    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj ) ;;\n    *.* ) ac_cv_exeext=`expr \"$ac_file\" : '[^.]*\\(\\..*\\)'`\n\t  break;;\n    * ) break;;\n  esac\ndone\nelse case e in #(\n  e) { { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':\" >&5\nprintf \"%s\\n\" \"$as_me: error: in '$ac_pwd':\" >&2;}\nas_fn_error $? \"cannot compute suffix of executables: cannot compile and link\nSee 'config.log' for more details\" \"$LINENO\" 5; } ;;\nesac\nfi\nrm -f conftest conftest$ac_cv_exeext\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_exeext\" >&5\nprintf \"%s\\n\" \"$ac_cv_exeext\" >&6; }\n\nrm -f conftest.$ac_ext\nEXEEXT=$ac_cv_exeext\nac_exeext=$EXEEXT\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <stdio.h>\nint\nmain (void)\n{\nFILE *f = fopen (\"conftest.out\", \"w\");\n if (!f)\n  return 1;\n return ferror (f) || fclose (f) != 0;\n\n  ;\n  return 0;\n}\n_ACEOF\nac_clean_files=\"$ac_clean_files conftest.out\"\n# Check that the compiler produces executables we can run.  If not, either\n# the compiler is broken, or we cross compile.\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether we are cross compiling\" >&5\nprintf %s \"checking whether we are cross compiling... \" >&6; }\nif test \"$cross_compiling\" != yes; then\n  { { ac_try=\"$ac_link\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\nprintf \"%s\\n\" \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link\") 2>&5\n  ac_status=$?\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\n  if { ac_try='./conftest$ac_cv_exeext'\n  { { case \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\nprintf \"%s\\n\" \"$ac_try_echo\"; } >&5\n  (eval \"$ac_try\") 2>&5\n  ac_status=$?\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; }; then\n    cross_compiling=no\n  else\n    if test \"$cross_compiling\" = maybe; then\n\tcross_compiling=yes\n    else\n\t{ { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':\" >&5\nprintf \"%s\\n\" \"$as_me: error: in '$ac_pwd':\" >&2;}\nas_fn_error 77 \"cannot run C compiled programs.\nIf you meant to cross compile, use '--host'.\nSee 'config.log' for more details\" \"$LINENO\" 5; }\n    fi\n  fi\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $cross_compiling\" >&5\nprintf \"%s\\n\" \"$cross_compiling\" >&6; }\n\nrm -f conftest.$ac_ext conftest$ac_cv_exeext \\\n  conftest.o conftest.obj conftest.out\nac_clean_files=$ac_clean_files_save\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for suffix of object files\" >&5\nprintf %s \"checking for suffix of object files... \" >&6; }\nif test ${ac_cv_objext+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain (void)\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nrm -f conftest.o conftest.obj\nif { { ac_try=\"$ac_compile\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\nprintf \"%s\\n\" \"$ac_try_echo\"; } >&5\n  (eval \"$ac_compile\") 2>&5\n  ac_status=$?\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\nthen :\n  for ac_file in conftest.o conftest.obj conftest.*; do\n  test -f \"$ac_file\" || continue;\n  case $ac_file in\n    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM ) ;;\n    *) ac_cv_objext=`expr \"$ac_file\" : '.*\\.\\(.*\\)'`\n       break;;\n  esac\ndone\nelse case e in #(\n  e) printf \"%s\\n\" \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n{ { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':\" >&5\nprintf \"%s\\n\" \"$as_me: error: in '$ac_pwd':\" >&2;}\nas_fn_error $? \"cannot compute suffix of object files: cannot compile\nSee 'config.log' for more details\" \"$LINENO\" 5; } ;;\nesac\nfi\nrm -f conftest.$ac_cv_objext conftest.$ac_ext ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_objext\" >&5\nprintf \"%s\\n\" \"$ac_cv_objext\" >&6; }\nOBJEXT=$ac_cv_objext\nac_objext=$OBJEXT\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether the compiler supports GNU C\" >&5\nprintf %s \"checking whether the compiler supports GNU C... \" >&6; }\nif test ${ac_cv_c_compiler_gnu+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain (void)\n{\n#ifndef __GNUC__\n       choke me\n#endif\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_compiler_gnu=yes\nelse case e in #(\n  e) ac_compiler_gnu=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\nac_cv_c_compiler_gnu=$ac_compiler_gnu\n ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_compiler_gnu\" >&5\nprintf \"%s\\n\" \"$ac_cv_c_compiler_gnu\" >&6; }\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nif test $ac_compiler_gnu = yes; then\n  GCC=yes\nelse\n  GCC=\nfi\nac_test_CFLAGS=${CFLAGS+y}\nac_save_CFLAGS=$CFLAGS\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether $CC accepts -g\" >&5\nprintf %s \"checking whether $CC accepts -g... \" >&6; }\nif test ${ac_cv_prog_cc_g+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_save_c_werror_flag=$ac_c_werror_flag\n   ac_c_werror_flag=yes\n   ac_cv_prog_cc_g=no\n   CFLAGS=\"-g\"\n   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain (void)\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_cv_prog_cc_g=yes\nelse case e in #(\n  e) CFLAGS=\"\"\n      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain (void)\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n\nelse case e in #(\n  e) ac_c_werror_flag=$ac_save_c_werror_flag\n\t CFLAGS=\"-g\"\n\t cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain (void)\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_cv_prog_cc_g=yes\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\n   ac_c_werror_flag=$ac_save_c_werror_flag ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_g\" >&5\nprintf \"%s\\n\" \"$ac_cv_prog_cc_g\" >&6; }\nif test $ac_test_CFLAGS; then\n  CFLAGS=$ac_save_CFLAGS\nelif test $ac_cv_prog_cc_g = yes; then\n  if test \"$GCC\" = yes; then\n    CFLAGS=\"-g -O2\"\n  else\n    CFLAGS=\"-g\"\n  fi\nelse\n  if test \"$GCC\" = yes; then\n    CFLAGS=\"-O2\"\n  else\n    CFLAGS=\n  fi\nfi\nac_prog_cc_stdc=no\nif test x$ac_prog_cc_stdc = xno\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $CC option to enable C11 features\" >&5\nprintf %s \"checking for $CC option to enable C11 features... \" >&6; }\nif test ${ac_cv_prog_cc_c11+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_cv_prog_cc_c11=no\nac_save_CC=$CC\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$ac_c_conftest_c11_program\n_ACEOF\nfor ac_arg in '' -std=gnu11\ndo\n  CC=\"$ac_save_CC $ac_arg\"\n  if ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_cv_prog_cc_c11=$ac_arg\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam\n  test \"x$ac_cv_prog_cc_c11\" != \"xno\" && break\ndone\nrm -f conftest.$ac_ext\nCC=$ac_save_CC ;;\nesac\nfi\n\nif test \"x$ac_cv_prog_cc_c11\" = xno\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: unsupported\" >&5\nprintf \"%s\\n\" \"unsupported\" >&6; }\nelse case e in #(\n  e) if test \"x$ac_cv_prog_cc_c11\" = x\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: none needed\" >&5\nprintf \"%s\\n\" \"none needed\" >&6; }\nelse case e in #(\n  e) { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c11\" >&5\nprintf \"%s\\n\" \"$ac_cv_prog_cc_c11\" >&6; }\n     CC=\"$CC $ac_cv_prog_cc_c11\" ;;\nesac\nfi\n  ac_cv_prog_cc_stdc=$ac_cv_prog_cc_c11\n  ac_prog_cc_stdc=c11 ;;\nesac\nfi\nfi\nif test x$ac_prog_cc_stdc = xno\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $CC option to enable C99 features\" >&5\nprintf %s \"checking for $CC option to enable C99 features... \" >&6; }\nif test ${ac_cv_prog_cc_c99+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_cv_prog_cc_c99=no\nac_save_CC=$CC\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$ac_c_conftest_c99_program\n_ACEOF\nfor ac_arg in '' -std=gnu99 -std=c99 -c99 -qlanglvl=extc1x -qlanglvl=extc99 -AC99 -D_STDC_C99=\ndo\n  CC=\"$ac_save_CC $ac_arg\"\n  if ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_cv_prog_cc_c99=$ac_arg\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam\n  test \"x$ac_cv_prog_cc_c99\" != \"xno\" && break\ndone\nrm -f conftest.$ac_ext\nCC=$ac_save_CC ;;\nesac\nfi\n\nif test \"x$ac_cv_prog_cc_c99\" = xno\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: unsupported\" >&5\nprintf \"%s\\n\" \"unsupported\" >&6; }\nelse case e in #(\n  e) if test \"x$ac_cv_prog_cc_c99\" = x\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: none needed\" >&5\nprintf \"%s\\n\" \"none needed\" >&6; }\nelse case e in #(\n  e) { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c99\" >&5\nprintf \"%s\\n\" \"$ac_cv_prog_cc_c99\" >&6; }\n     CC=\"$CC $ac_cv_prog_cc_c99\" ;;\nesac\nfi\n  ac_cv_prog_cc_stdc=$ac_cv_prog_cc_c99\n  ac_prog_cc_stdc=c99 ;;\nesac\nfi\nfi\nif test x$ac_prog_cc_stdc = xno\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $CC option to enable C89 features\" >&5\nprintf %s \"checking for $CC option to enable C89 features... \" >&6; }\nif test ${ac_cv_prog_cc_c89+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_cv_prog_cc_c89=no\nac_save_CC=$CC\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$ac_c_conftest_c89_program\n_ACEOF\nfor ac_arg in '' -qlanglvl=extc89 -qlanglvl=ansi -std -Ae \"-Aa -D_HPUX_SOURCE\" \"-Xc -D__EXTENSIONS__\"\ndo\n  CC=\"$ac_save_CC $ac_arg\"\n  if ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_cv_prog_cc_c89=$ac_arg\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam\n  test \"x$ac_cv_prog_cc_c89\" != \"xno\" && break\ndone\nrm -f conftest.$ac_ext\nCC=$ac_save_CC ;;\nesac\nfi\n\nif test \"x$ac_cv_prog_cc_c89\" = xno\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: unsupported\" >&5\nprintf \"%s\\n\" \"unsupported\" >&6; }\nelse case e in #(\n  e) if test \"x$ac_cv_prog_cc_c89\" = x\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: none needed\" >&5\nprintf \"%s\\n\" \"none needed\" >&6; }\nelse case e in #(\n  e) { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c89\" >&5\nprintf \"%s\\n\" \"$ac_cv_prog_cc_c89\" >&6; }\n     CC=\"$CC $ac_cv_prog_cc_c89\" ;;\nesac\nfi\n  ac_cv_prog_cc_stdc=$ac_cv_prog_cc_c89\n  ac_prog_cc_stdc=c89 ;;\nesac\nfi\nfi\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\n\nac_header= ac_cache=\nfor ac_item in $ac_header_c_list\ndo\n  if test $ac_cache; then\n    ac_fn_c_check_header_compile \"$LINENO\" $ac_header ac_cv_header_$ac_cache \"$ac_includes_default\"\n    if eval test \\\"x\\$ac_cv_header_$ac_cache\\\" = xyes; then\n      printf \"%s\\n\" \"#define $ac_item 1\" >> confdefs.h\n    fi\n    ac_header= ac_cache=\n  elif test $ac_header; then\n    ac_cache=$ac_item\n  else\n    ac_header=$ac_item\n  fi\ndone\n\n\n\n\n\n\n\n\nif test $ac_cv_header_stdlib_h = yes && test $ac_cv_header_string_h = yes\nthen :\n\nprintf \"%s\\n\" \"#define STDC_HEADERS 1\" >>confdefs.h\n\nfi\n\n\n\n\n\n\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether it is safe to define __EXTENSIONS__\" >&5\nprintf %s \"checking whether it is safe to define __EXTENSIONS__... \" >&6; }\nif test ${ac_cv_safe_to_define___extensions__+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n#         define __EXTENSIONS__ 1\n          $ac_includes_default\nint\nmain (void)\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_cv_safe_to_define___extensions__=yes\nelse case e in #(\n  e) ac_cv_safe_to_define___extensions__=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_safe_to_define___extensions__\" >&5\nprintf \"%s\\n\" \"$ac_cv_safe_to_define___extensions__\" >&6; }\n\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether _XOPEN_SOURCE should be defined\" >&5\nprintf %s \"checking whether _XOPEN_SOURCE should be defined... \" >&6; }\nif test ${ac_cv_should_define__xopen_source+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_cv_should_define__xopen_source=no\n    if test $ac_cv_header_wchar_h = yes\nthen :\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n          #include <wchar.h>\n          mbstate_t x;\nint\nmain (void)\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n            #define _XOPEN_SOURCE 500\n            #include <wchar.h>\n            mbstate_t x;\nint\nmain (void)\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n  ac_cv_should_define__xopen_source=yes\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\nfi ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_should_define__xopen_source\" >&5\nprintf \"%s\\n\" \"$ac_cv_should_define__xopen_source\" >&6; }\n\n  printf \"%s\\n\" \"#define _ALL_SOURCE 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define _DARWIN_C_SOURCE 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define _GNU_SOURCE 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define _HPUX_ALT_XOPEN_SOCKET_API 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define _NETBSD_SOURCE 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define _OPENBSD_SOURCE 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define _POSIX_PTHREAD_SEMANTICS 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define __STDC_WANT_IEC_60559_ATTRIBS_EXT__ 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define __STDC_WANT_IEC_60559_BFP_EXT__ 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define __STDC_WANT_IEC_60559_DFP_EXT__ 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define __STDC_WANT_IEC_60559_EXT__ 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define __STDC_WANT_IEC_60559_FUNCS_EXT__ 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define __STDC_WANT_IEC_60559_TYPES_EXT__ 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define __STDC_WANT_LIB_EXT2__ 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define __STDC_WANT_MATH_SPEC_FUNCS__ 1\" >>confdefs.h\n\n  printf \"%s\\n\" \"#define _TANDEM_SOURCE 1\" >>confdefs.h\n\n  if test $ac_cv_header_minix_config_h = yes\nthen :\n  MINIX=yes\n    printf \"%s\\n\" \"#define _MINIX 1\" >>confdefs.h\n\n    printf \"%s\\n\" \"#define _POSIX_SOURCE 1\" >>confdefs.h\n\n    printf \"%s\\n\" \"#define _POSIX_1_SOURCE 2\" >>confdefs.h\n\nelse case e in #(\n  e) MINIX= ;;\nesac\nfi\n  if test $ac_cv_safe_to_define___extensions__ = yes\nthen :\n  printf \"%s\\n\" \"#define __EXTENSIONS__ 1\" >>confdefs.h\n\nfi\n  if test $ac_cv_should_define__xopen_source = yes\nthen :\n  printf \"%s\\n\" \"#define _XOPEN_SOURCE 500\" >>confdefs.h\n\nfi\n\n# System default paths\nastsbindir='${sbindir}'\nastcachedir='${localstatedir}/cache/asterisk'\nastetcdir='${sysconfdir}/asterisk'\nastheaderdir='${includedir}/asterisk'\nastlibdir='${libdir}'\nastmoddir='${libdir}/asterisk/modules'\nastmandir='${mandir}'\nastvarlibdir='${localstatedir}/lib/asterisk'\nastdatadir='${astvarlibdir}'\nastdbdir='${astvarlibdir}'\nastkeydir='${astvarlibdir}'\nastspooldir='${localstatedir}/spool/asterisk'\nastlogdir='${localstatedir}/log/asterisk'\nastvarrundir='${localstatedir}/run/asterisk'\n\ncase \"${host_os}\" in\n     *bsd*)\n     if test ${prefix} != 'NONE'; then\n        astvarlibdir='${prefix}/share/asterisk'\n        astdbdir='${localstatedir}/db/asterisk'\n     fi\n     ;;\n     darwin*)\n     if test ${prefix} = 'NONE'; then\n        astvarrundir='/Library/Application Support/Asterisk/Run'\n     fi\n     ;;\nesac\n\ncase \"${host_os}\" in\n     netbsd*)\n     ac_default_prefix=/usr/pkg\n     CPPFLAGS=-I/usr/pkg/include\n     LDFLAGS=-L/usr/pkg/lib\n     ;;\n     dragonfly*|freebsd*)\n     ac_default_prefix=/usr/local\n     CPPFLAGS=-I/usr/local/include\n     LDFLAGS=-L/usr/local/lib\n     ;;\n     openbsd*)\n     ac_default_prefix=/usr/local\n     if test ${prefix} = '/usr/local' || test ${prefix} = 'NONE'; then\n        if test ${sysconfdir} = '${prefix}/etc'; then\n           astetcdir=/etc/asterisk\n        fi\n        if test ${mandir} = '${prefix}/man'; then\n           astmandir=/usr/share/man\n        fi\n     fi\n     CPPFLAGS=-I/usr/local/include\n     LDFLAGS=-L/usr/local/lib\n     ;;\n     darwin*)\n     ac_default_prefix=/usr/local\n     if test ${prefix} = 'NONE'; then\n        astmoddir='/Library/Application Support/Asterisk/Modules'\n        astvarlibdir='/Library/Application Support/Asterisk'\n        astlogdir=/Library/Logs/Asterisk\n        astvarrundir='/Library/Application Support/Asterisk/Run'\n     fi\n\nprintf \"%s\\n\" \"#define AST_POLL_COMPAT 1\" >>confdefs.h\n\n\nprintf \"%s\\n\" \"#define _DARWIN_UNLIMITED_SELECT 1\" >>confdefs.h\n\n     ;;\n     solaris*)\n     if test ${prefix} = 'NONE'; then\n        astcachedir=/var/cache/asterisk\n        astetcdir=/var/etc/asterisk\n        astsbindir=/opt/asterisk/sbin\n        astlibdir=/opt/asterisk/lib\n        astmoddir=/opt/asterisk/lib/modules\n        astheaderdir=/opt/asterisk/include\n        astmandir=/opt/asterisk/man\n        astvarlibdir=/var/opt/asterisk\n        astspooldir=/var/spool/asterisk\n        astlogdir=/var/log/asterisk\n        astvarrundir=/var/run/asterisk\n     fi\n     ;;\n     *)\n     ac_default_prefix=/usr\n     if test ${prefix} = '/usr' || test ${prefix} = 'NONE'; then\n        if test ${sysconfdir} = '${prefix}/etc'; then\n           sysconfdir=/etc\n        fi\n        if test ${mandir} = '${prefix}/man'; then\n           mandir=/usr/share/man\n        fi\n     fi\n     ;;\nesac\n\nif test ${prefix} = ${ac_default_prefix} || test ${prefix} = 'NONE'; then\n     if test ${localstatedir} = '${prefix}/var'; then\n        localstatedir=/var\n     fi\nfi\n\nBUILD_PLATFORM=${build}\nBUILD_CPU=${build_cpu}\nBUILD_VENDOR=${build_vendor}\nBUILD_OS=${build_os}\n\n\n\n\n\n\nHOST_PLATFORM=${host}\nHOST_CPU=${host_cpu}\nHOST_VENDOR=${host_vendor}\nHOST_OS=${host_os}\n\n\n\n\n\n\nPBX_WINARCH=0\n\ncase \"${host_os}\" in\n     dragonfly*|freebsd*)\n     OSARCH=FreeBSD\n     ;;\n     netbsd*)\n     OSARCH=NetBSD\n     ;;\n     openbsd*)\n     OSARCH=OpenBSD\n     ;;\n     solaris*)\n     OSARCH=SunOS\n     ;;\n     mingw32)\n     OSARCH=mingw32\n     PBX_WINARCH=1\n     ;;\n     cygwin)\n     OSARCH=cygwin\n     PBX_WINARCH=1\n     ;;\n     linux-gnu*)\n     OSARCH=linux-gnu\n     ;;\n     linux-musl*)\n     OSARCH=linux-musl\n     ;;\n     kfreebsd*-gnu)\n     OSARCH=kfreebsd-gnu\n     ;;\n     *)\n     OSARCH=${host_os}\n     ;;\nesac\n\n\n\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether char is unsigned\" >&5\nprintf %s \"checking whether char is unsigned... \" >&6; }\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n\t\t#include <limits.h>\n#if CHAR_MIN == 0\n#error\n#endif\n\n\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n\n\t\t{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\n\t\tCONFIG_SIGNED_CHAR=\"\"\n\nelse case e in #(\n  e)\n\t\t{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\nprintf \"%s\\n\" \"yes\" >&6; }\n\t\tCONFIG_SIGNED_CHAR=\"-fsigned-char\"\n\n ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\n\n\n#  check for uname\nif test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}uname\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}uname; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_UNAME+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $UNAME in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_UNAME=\"$UNAME\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_UNAME=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  ;;\nesac ;;\nesac\nfi\nUNAME=$ac_cv_path_UNAME\nif test -n \"$UNAME\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $UNAME\" >&5\nprintf \"%s\\n\" \"$UNAME\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_path_UNAME\"; then\n  ac_pt_UNAME=$UNAME\n  # Extract the first word of \"uname\", so it can be a program name with args.\nset dummy uname; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_ac_pt_UNAME+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $ac_pt_UNAME in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_ac_pt_UNAME=\"$ac_pt_UNAME\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_ac_pt_UNAME=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  ;;\nesac ;;\nesac\nfi\nac_pt_UNAME=$ac_cv_path_ac_pt_UNAME\nif test -n \"$ac_pt_UNAME\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_pt_UNAME\" >&5\nprintf \"%s\\n\" \"$ac_pt_UNAME\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n  if test \"x$ac_pt_UNAME\" = x; then\n    UNAME=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    UNAME=$ac_pt_UNAME\n  fi\nelse\n  UNAME=\"$ac_cv_path_UNAME\"\nfi\n\nif test \"x${UNAME}\" != \"x:\"; then\n   PBX_OSREV=$(${UNAME} -r)\nfi\n\n\n\n\n\n\n# cross-compile checks\nif test \"${cross_compiling}\" = \"yes\";\nthen\n   if test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}gcc\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}gcc; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_CC+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CC=\"${ac_tool_prefix}gcc\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\nprintf \"%s\\n\" \"$CC\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_CC\"; then\n  ac_ct_CC=$CC\n  # Extract the first word of \"gcc\", so it can be a program name with args.\nset dummy gcc; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_ac_ct_CC+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$ac_ct_CC\"; then\n  ac_cv_prog_ac_ct_CC=\"$ac_ct_CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_CC=\"gcc\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nac_ct_CC=$ac_cv_prog_ac_ct_CC\nif test -n \"$ac_ct_CC\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC\" >&5\nprintf \"%s\\n\" \"$ac_ct_CC\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_CC\" = x; then\n    CC=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    CC=$ac_ct_CC\n  fi\nelse\n  CC=\"$ac_cv_prog_CC\"\nfi\n\n   if test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}g++\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}g++; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_CXX+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$CXX\"; then\n  ac_cv_prog_CXX=\"$CXX\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CXX=\"${ac_tool_prefix}g++\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nCXX=$ac_cv_prog_CXX\nif test -n \"$CXX\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $CXX\" >&5\nprintf \"%s\\n\" \"$CXX\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_CXX\"; then\n  ac_ct_CXX=$CXX\n  # Extract the first word of \"g++\", so it can be a program name with args.\nset dummy g++; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_ac_ct_CXX+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$ac_ct_CXX\"; then\n  ac_cv_prog_ac_ct_CXX=\"$ac_ct_CXX\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_CXX=\"g++\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nac_ct_CXX=$ac_cv_prog_ac_ct_CXX\nif test -n \"$ac_ct_CXX\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_CXX\" >&5\nprintf \"%s\\n\" \"$ac_ct_CXX\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_CXX\" = x; then\n    CXX=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    CXX=$ac_ct_CXX\n  fi\nelse\n  CXX=\"$ac_cv_prog_CXX\"\nfi\n\n   if test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}ld\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}ld; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_LD+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$LD\"; then\n  ac_cv_prog_LD=\"$LD\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_LD=\"${ac_tool_prefix}ld\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nLD=$ac_cv_prog_LD\nif test -n \"$LD\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $LD\" >&5\nprintf \"%s\\n\" \"$LD\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_LD\"; then\n  ac_ct_LD=$LD\n  # Extract the first word of \"ld\", so it can be a program name with args.\nset dummy ld; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_ac_ct_LD+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$ac_ct_LD\"; then\n  ac_cv_prog_ac_ct_LD=\"$ac_ct_LD\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_LD=\"ld\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nac_ct_LD=$ac_cv_prog_ac_ct_LD\nif test -n \"$ac_ct_LD\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_LD\" >&5\nprintf \"%s\\n\" \"$ac_ct_LD\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_LD\" = x; then\n    LD=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    LD=$ac_ct_LD\n  fi\nelse\n  LD=\"$ac_cv_prog_LD\"\nfi\n\n   if test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}ranlib\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}ranlib; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_RANLIB+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$RANLIB\"; then\n  ac_cv_prog_RANLIB=\"$RANLIB\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_RANLIB=\"${ac_tool_prefix}ranlib\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nRANLIB=$ac_cv_prog_RANLIB\nif test -n \"$RANLIB\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $RANLIB\" >&5\nprintf \"%s\\n\" \"$RANLIB\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_RANLIB\"; then\n  ac_ct_RANLIB=$RANLIB\n  # Extract the first word of \"ranlib\", so it can be a program name with args.\nset dummy ranlib; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_ac_ct_RANLIB+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$ac_ct_RANLIB\"; then\n  ac_cv_prog_ac_ct_RANLIB=\"$ac_ct_RANLIB\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_RANLIB=\"ranlib\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nac_ct_RANLIB=$ac_cv_prog_ac_ct_RANLIB\nif test -n \"$ac_ct_RANLIB\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_RANLIB\" >&5\nprintf \"%s\\n\" \"$ac_ct_RANLIB\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_RANLIB\" = x; then\n    RANLIB=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    RANLIB=$ac_ct_RANLIB\n  fi\nelse\n  RANLIB=\"$ac_cv_prog_RANLIB\"\nfi\n\n   CROSS_COMPILING=1\n\nfi\n\n# Checks for programs.\n\n\n\n\n\n\nac_ext=cpp\nac_cpp='$CXXCPP $CPPFLAGS'\nac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_cxx_compiler_gnu\nif test -z \"$CXX\"; then\n  if test -n \"$CCC\"; then\n    CXX=$CCC\n  else\n    if test -n \"$ac_tool_prefix\"; then\n  for ac_prog in g++ c++ gpp aCC CC cxx cc++ cl.exe FCC KCC RCC xlC_r xlC clang++\n  do\n    # Extract the first word of \"$ac_tool_prefix$ac_prog\", so it can be a program name with args.\nset dummy $ac_tool_prefix$ac_prog; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_CXX+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$CXX\"; then\n  ac_cv_prog_CXX=\"$CXX\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CXX=\"$ac_tool_prefix$ac_prog\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nCXX=$ac_cv_prog_CXX\nif test -n \"$CXX\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $CXX\" >&5\nprintf \"%s\\n\" \"$CXX\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n    test -n \"$CXX\" && break\n  done\nfi\nif test -z \"$CXX\"; then\n  ac_ct_CXX=$CXX\n  for ac_prog in g++ c++ gpp aCC CC cxx cc++ cl.exe FCC KCC RCC xlC_r xlC clang++\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_ac_ct_CXX+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$ac_ct_CXX\"; then\n  ac_cv_prog_ac_ct_CXX=\"$ac_ct_CXX\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_CXX=\"$ac_prog\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nac_ct_CXX=$ac_cv_prog_ac_ct_CXX\nif test -n \"$ac_ct_CXX\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_CXX\" >&5\nprintf \"%s\\n\" \"$ac_ct_CXX\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n  test -n \"$ac_ct_CXX\" && break\ndone\n\n  if test \"x$ac_ct_CXX\" = x; then\n    CXX=\"g++\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    CXX=$ac_ct_CXX\n  fi\nfi\n\n  fi\nfi\n# Provide some information about the compiler.\nprintf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for C++ compiler version\" >&5\nset X $ac_compile\nac_compiler=$2\nfor ac_option in --version -v -V -qversion; do\n  { { ac_try=\"$ac_compiler $ac_option >&5\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\nprintf \"%s\\n\" \"$ac_try_echo\"; } >&5\n  (eval \"$ac_compiler $ac_option >&5\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    sed '10a\\\n... rest of stderr output deleted ...\n         10q' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n  fi\n  rm -f conftest.er1 conftest.err\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\ndone\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether the compiler supports GNU C++\" >&5\nprintf %s \"checking whether the compiler supports GNU C++... \" >&6; }\nif test ${ac_cv_cxx_compiler_gnu+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain (void)\n{\n#ifndef __GNUC__\n       choke me\n#endif\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"\nthen :\n  ac_compiler_gnu=yes\nelse case e in #(\n  e) ac_compiler_gnu=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\nac_cv_cxx_compiler_gnu=$ac_compiler_gnu\n ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_cxx_compiler_gnu\" >&5\nprintf \"%s\\n\" \"$ac_cv_cxx_compiler_gnu\" >&6; }\nac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n\nif test $ac_compiler_gnu = yes; then\n  GXX=yes\nelse\n  GXX=\nfi\nac_test_CXXFLAGS=${CXXFLAGS+y}\nac_save_CXXFLAGS=$CXXFLAGS\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether $CXX accepts -g\" >&5\nprintf %s \"checking whether $CXX accepts -g... \" >&6; }\nif test ${ac_cv_prog_cxx_g+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_save_cxx_werror_flag=$ac_cxx_werror_flag\n   ac_cxx_werror_flag=yes\n   ac_cv_prog_cxx_g=no\n   CXXFLAGS=\"-g\"\n   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain (void)\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"\nthen :\n  ac_cv_prog_cxx_g=yes\nelse case e in #(\n  e) CXXFLAGS=\"\"\n      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain (void)\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"\nthen :\n\nelse case e in #(\n  e) ac_cxx_werror_flag=$ac_save_cxx_werror_flag\n\t CXXFLAGS=\"-g\"\n\t cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain (void)\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"\nthen :\n  ac_cv_prog_cxx_g=yes\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\n   ac_cxx_werror_flag=$ac_save_cxx_werror_flag ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cxx_g\" >&5\nprintf \"%s\\n\" \"$ac_cv_prog_cxx_g\" >&6; }\nif test $ac_test_CXXFLAGS; then\n  CXXFLAGS=$ac_save_CXXFLAGS\nelif test $ac_cv_prog_cxx_g = yes; then\n  if test \"$GXX\" = yes; then\n    CXXFLAGS=\"-g -O2\"\n  else\n    CXXFLAGS=\"-g\"\n  fi\nelse\n  if test \"$GXX\" = yes; then\n    CXXFLAGS=\"-O2\"\n  else\n    CXXFLAGS=\n  fi\nfi\nac_prog_cxx_stdcxx=no\nif test x$ac_prog_cxx_stdcxx = xno\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $CXX option to enable C++11 features\" >&5\nprintf %s \"checking for $CXX option to enable C++11 features... \" >&6; }\nif test ${ac_cv_prog_cxx_cxx11+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_cv_prog_cxx_cxx11=no\nac_save_CXX=$CXX\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$ac_cxx_conftest_cxx11_program\n_ACEOF\nfor ac_arg in '' -std=gnu++11 -std=gnu++0x -std=c++11 -std=c++0x -qlanglvl=extended0x -AA\ndo\n  CXX=\"$ac_save_CXX $ac_arg\"\n  if ac_fn_cxx_try_compile \"$LINENO\"\nthen :\n  ac_cv_prog_cxx_cxx11=$ac_arg\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam\n  test \"x$ac_cv_prog_cxx_cxx11\" != \"xno\" && break\ndone\nrm -f conftest.$ac_ext\nCXX=$ac_save_CXX ;;\nesac\nfi\n\nif test \"x$ac_cv_prog_cxx_cxx11\" = xno\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: unsupported\" >&5\nprintf \"%s\\n\" \"unsupported\" >&6; }\nelse case e in #(\n  e) if test \"x$ac_cv_prog_cxx_cxx11\" = x\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: none needed\" >&5\nprintf \"%s\\n\" \"none needed\" >&6; }\nelse case e in #(\n  e) { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cxx_cxx11\" >&5\nprintf \"%s\\n\" \"$ac_cv_prog_cxx_cxx11\" >&6; }\n     CXX=\"$CXX $ac_cv_prog_cxx_cxx11\" ;;\nesac\nfi\n  ac_cv_prog_cxx_stdcxx=$ac_cv_prog_cxx_cxx11\n  ac_prog_cxx_stdcxx=cxx11 ;;\nesac\nfi\nfi\nif test x$ac_prog_cxx_stdcxx = xno\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $CXX option to enable C++98 features\" >&5\nprintf %s \"checking for $CXX option to enable C++98 features... \" >&6; }\nif test ${ac_cv_prog_cxx_cxx98+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_cv_prog_cxx_cxx98=no\nac_save_CXX=$CXX\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$ac_cxx_conftest_cxx98_program\n_ACEOF\nfor ac_arg in '' -std=gnu++98 -std=c++98 -qlanglvl=extended -AA\ndo\n  CXX=\"$ac_save_CXX $ac_arg\"\n  if ac_fn_cxx_try_compile \"$LINENO\"\nthen :\n  ac_cv_prog_cxx_cxx98=$ac_arg\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam\n  test \"x$ac_cv_prog_cxx_cxx98\" != \"xno\" && break\ndone\nrm -f conftest.$ac_ext\nCXX=$ac_save_CXX ;;\nesac\nfi\n\nif test \"x$ac_cv_prog_cxx_cxx98\" = xno\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: unsupported\" >&5\nprintf \"%s\\n\" \"unsupported\" >&6; }\nelse case e in #(\n  e) if test \"x$ac_cv_prog_cxx_cxx98\" = x\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: none needed\" >&5\nprintf \"%s\\n\" \"none needed\" >&6; }\nelse case e in #(\n  e) { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cxx_cxx98\" >&5\nprintf \"%s\\n\" \"$ac_cv_prog_cxx_cxx98\" >&6; }\n     CXX=\"$CXX $ac_cv_prog_cxx_cxx98\" ;;\nesac\nfi\n  ac_cv_prog_cxx_stdcxx=$ac_cv_prog_cxx_cxx98\n  ac_prog_cxx_stdcxx=cxx98 ;;\nesac\nfi\nfi\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking how to run the C preprocessor\" >&5\nprintf %s \"checking how to run the C preprocessor... \" >&6; }\n# On Suns, sometimes $CPP names a directory.\nif test -n \"$CPP\" && test -d \"$CPP\"; then\n  CPP=\nfi\nif test -z \"$CPP\"; then\n  if test ${ac_cv_prog_CPP+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e)     # Double quotes because $CC needs to be expanded\n    for CPP in \"$CC -E\" \"$CC -E -traditional-cpp\" cpp /lib/cpp\n    do\n      ac_preproc_ok=false\nfor ac_c_preproc_warn_flag in '' yes\ndo\n  # Use a header file that comes with gcc, so configuring glibc\n  # with a fresh cross-compiler works.\n  # On the NeXT, cc -E runs the code through the compiler's parser,\n  # not just through cpp. \"Syntax error\" is here to catch this case.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <limits.h>\n\t\t     Syntax error\n_ACEOF\nif ac_fn_c_try_cpp \"$LINENO\"\nthen :\n\nelse case e in #(\n  e) # Broken: fails on valid input.\ncontinue ;;\nesac\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\n  # OK, works on sane cases.  Now check whether nonexistent headers\n  # can be detected and how.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <ac_nonexistent.h>\n_ACEOF\nif ac_fn_c_try_cpp \"$LINENO\"\nthen :\n  # Broken: success on invalid input.\ncontinue\nelse case e in #(\n  e) # Passes both tests.\nac_preproc_ok=:\nbreak ;;\nesac\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\ndone\n# Because of 'break', _AC_PREPROC_IFELSE's cleaning code was skipped.\nrm -f conftest.i conftest.err conftest.$ac_ext\nif $ac_preproc_ok\nthen :\n  break\nfi\n\n    done\n    ac_cv_prog_CPP=$CPP\n   ;;\nesac\nfi\n  CPP=$ac_cv_prog_CPP\nelse\n  ac_cv_prog_CPP=$CPP\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $CPP\" >&5\nprintf \"%s\\n\" \"$CPP\" >&6; }\nac_preproc_ok=false\nfor ac_c_preproc_warn_flag in '' yes\ndo\n  # Use a header file that comes with gcc, so configuring glibc\n  # with a fresh cross-compiler works.\n  # On the NeXT, cc -E runs the code through the compiler's parser,\n  # not just through cpp. \"Syntax error\" is here to catch this case.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <limits.h>\n\t\t     Syntax error\n_ACEOF\nif ac_fn_c_try_cpp \"$LINENO\"\nthen :\n\nelse case e in #(\n  e) # Broken: fails on valid input.\ncontinue ;;\nesac\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\n  # OK, works on sane cases.  Now check whether nonexistent headers\n  # can be detected and how.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <ac_nonexistent.h>\n_ACEOF\nif ac_fn_c_try_cpp \"$LINENO\"\nthen :\n  # Broken: success on invalid input.\ncontinue\nelse case e in #(\n  e) # Passes both tests.\nac_preproc_ok=:\nbreak ;;\nesac\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\ndone\n# Because of 'break', _AC_PREPROC_IFELSE's cleaning code was skipped.\nrm -f conftest.i conftest.err conftest.$ac_ext\nif $ac_preproc_ok\nthen :\n\nelse case e in #(\n  e) { { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':\" >&5\nprintf \"%s\\n\" \"$as_me: error: in '$ac_pwd':\" >&2;}\nas_fn_error $? \"C preprocessor \\\"$CPP\\\" fails sanity check\nSee 'config.log' for more details\" \"$LINENO\" 5; } ;;\nesac\nfi\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nac_ext=cpp\nac_cpp='$CXXCPP $CPPFLAGS'\nac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking how to run the C++ preprocessor\" >&5\nprintf %s \"checking how to run the C++ preprocessor... \" >&6; }\nif test -z \"$CXXCPP\"; then\n  if test ${ac_cv_prog_CXXCPP+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e)     # Double quotes because $CXX needs to be expanded\n    for CXXCPP in \"$CXX -E\" cpp /lib/cpp\n    do\n      ac_preproc_ok=false\nfor ac_cxx_preproc_warn_flag in '' yes\ndo\n  # Use a header file that comes with gcc, so configuring glibc\n  # with a fresh cross-compiler works.\n  # On the NeXT, cc -E runs the code through the compiler's parser,\n  # not just through cpp. \"Syntax error\" is here to catch this case.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <limits.h>\n\t\t     Syntax error\n_ACEOF\nif ac_fn_cxx_try_cpp \"$LINENO\"\nthen :\n\nelse case e in #(\n  e) # Broken: fails on valid input.\ncontinue ;;\nesac\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\n  # OK, works on sane cases.  Now check whether nonexistent headers\n  # can be detected and how.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <ac_nonexistent.h>\n_ACEOF\nif ac_fn_cxx_try_cpp \"$LINENO\"\nthen :\n  # Broken: success on invalid input.\ncontinue\nelse case e in #(\n  e) # Passes both tests.\nac_preproc_ok=:\nbreak ;;\nesac\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\ndone\n# Because of 'break', _AC_PREPROC_IFELSE's cleaning code was skipped.\nrm -f conftest.i conftest.err conftest.$ac_ext\nif $ac_preproc_ok\nthen :\n  break\nfi\n\n    done\n    ac_cv_prog_CXXCPP=$CXXCPP\n   ;;\nesac\nfi\n  CXXCPP=$ac_cv_prog_CXXCPP\nelse\n  ac_cv_prog_CXXCPP=$CXXCPP\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $CXXCPP\" >&5\nprintf \"%s\\n\" \"$CXXCPP\" >&6; }\nac_preproc_ok=false\nfor ac_cxx_preproc_warn_flag in '' yes\ndo\n  # Use a header file that comes with gcc, so configuring glibc\n  # with a fresh cross-compiler works.\n  # On the NeXT, cc -E runs the code through the compiler's parser,\n  # not just through cpp. \"Syntax error\" is here to catch this case.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <limits.h>\n\t\t     Syntax error\n_ACEOF\nif ac_fn_cxx_try_cpp \"$LINENO\"\nthen :\n\nelse case e in #(\n  e) # Broken: fails on valid input.\ncontinue ;;\nesac\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\n  # OK, works on sane cases.  Now check whether nonexistent headers\n  # can be detected and how.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <ac_nonexistent.h>\n_ACEOF\nif ac_fn_cxx_try_cpp \"$LINENO\"\nthen :\n  # Broken: success on invalid input.\ncontinue\nelse case e in #(\n  e) # Passes both tests.\nac_preproc_ok=:\nbreak ;;\nesac\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\ndone\n# Because of 'break', _AC_PREPROC_IFELSE's cleaning code was skipped.\nrm -f conftest.i conftest.err conftest.$ac_ext\nif $ac_preproc_ok\nthen :\n\nelse case e in #(\n  e) { { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: error: in '$ac_pwd':\" >&5\nprintf \"%s\\n\" \"$as_me: error: in '$ac_pwd':\" >&2;}\nas_fn_error $? \"C++ preprocessor \\\"$CXXCPP\\\" fails sanity check\nSee 'config.log' for more details\" \"$LINENO\" 5; } ;;\nesac\nfi\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\n# Do we want to force the C++ compiler to use the latest standard it supports?\n# Check whether --enable-latest-cxx-std was given.\nif test ${enable_latest_cxx_std+y}\nthen :\n  enableval=$enable_latest_cxx_std; case \"${enableval}\" in\n\t\ty|ye|yes) ENABLE_LATEST_CXX_STD=yes ;;\n\t\tn|no)  ENABLE_LATEST_CXX_STD=no ;;\n\t\t*) as_fn_error $? \"bad value ${enableval} for --enable-latest-cxx-std\" \"$LINENO\" 5  ;;\n\tesac\nelse case e in #(\n  e) ENABLE_LATEST_CXX_STD=no ;;\nesac\nfi\n\n\n# Check to see if the C++ compiler supports STDC++11,14,17,20,23\n# These MUST be in ascending order.\n\n\n    PBX_CXX11=0\n    if test \"${ENABLE_LATEST_CXX_STD}\" != \"yes\" ; then\n        ast_cxx_check_std_save_CXX=\"${CXX}\"\n        ast_cxx_check_std_save_CXXCPP=\"${CXXCPP}\"\n    fi\n      ax_cxx_compile_alternatives=\"11 0x\"    ax_cxx_compile_cxx11_required=false\n  ac_ext=cpp\nac_cpp='$CXXCPP $CPPFLAGS'\nac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n  ac_success=no\n\n      { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether $CXX supports C++11 features by default\" >&5\nprintf %s \"checking whether $CXX supports C++11 features by default... \" >&6; }\nif test ${ax_cv_cxx_compile_cxx11+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n\n// If the compiler admits that it is not ready for C++11, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n// MSVC always sets __cplusplus to 199711L in older versions; newer versions\n// only set it correctly if /Zc:__cplusplus is specified as well as a\n// /std:c++NN switch:\n//\n// https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-__cplusplus/\n//\n// The value __cplusplus ought to have is available in _MSVC_LANG since\n// Visual Studio 2015 Update 3:\n//\n// https://learn.microsoft.com/en-us/cpp/preprocessor/predefined-macros\n//\n// This was also the first MSVC version to support C++14 so we can't use the\n// value of either __cplusplus or _MSVC_LANG to quickly rule out MSVC having\n// C++11 or C++14 support, but we can check _MSVC_LANG for C++17 and later.\n#elif __cplusplus < 201103L && !defined _MSC_VER\n\n#error \"This is not a C++11 compiler\"\n\n#else\n\nnamespace cxx11\n{\n\n  namespace test_static_assert\n  {\n\n    template <typename T>\n    struct check\n    {\n      static_assert(sizeof(int) <= sizeof(T), \"not big enough\");\n    };\n\n  }\n\n  namespace test_final_override\n  {\n\n    struct Base\n    {\n      virtual ~Base() {}\n      virtual void f() {}\n    };\n\n    struct Derived : public Base\n    {\n      virtual ~Derived() override {}\n      virtual void f() override {}\n    };\n\n  }\n\n  namespace test_double_right_angle_brackets\n  {\n\n    template < typename T >\n    struct check {};\n\n    typedef check<void> single_type;\n    typedef check<check<void>> double_type;\n    typedef check<check<check<void>>> triple_type;\n    typedef check<check<check<check<void>>>> quadruple_type;\n\n  }\n\n  namespace test_decltype\n  {\n\n    int\n    f()\n    {\n      int a = 1;\n      decltype(a) b = 2;\n      return a + b;\n    }\n\n  }\n\n  namespace test_type_deduction\n  {\n\n    template < typename T1, typename T2 >\n    struct is_same\n    {\n      static const bool value = false;\n    };\n\n    template < typename T >\n    struct is_same<T, T>\n    {\n      static const bool value = true;\n    };\n\n    template < typename T1, typename T2 >\n    auto\n    add(T1 a1, T2 a2) -> decltype(a1 + a2)\n    {\n      return a1 + a2;\n    }\n\n    int\n    test(const int c, volatile int v)\n    {\n      static_assert(is_same<int, decltype(0)>::value == true, \"\");\n      static_assert(is_same<int, decltype(c)>::value == false, \"\");\n      static_assert(is_same<int, decltype(v)>::value == false, \"\");\n      auto ac = c;\n      auto av = v;\n      auto sumi = ac + av + 'x';\n      auto sumf = ac + av + 1.0;\n      static_assert(is_same<int, decltype(ac)>::value == true, \"\");\n      static_assert(is_same<int, decltype(av)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumi)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumf)>::value == false, \"\");\n      static_assert(is_same<int, decltype(add(c, v))>::value == true, \"\");\n      return (sumf > 0.0) ? sumi : add(c, v);\n    }\n\n  }\n\n  namespace test_noexcept\n  {\n\n    int f() { return 0; }\n    int g() noexcept { return 0; }\n\n    static_assert(noexcept(f()) == false, \"\");\n    static_assert(noexcept(g()) == true, \"\");\n\n  }\n\n  namespace test_constexpr\n  {\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c_r(const CharT *const s, const unsigned long acc) noexcept\n    {\n      return *s ? strlen_c_r(s + 1, acc + 1) : acc;\n    }\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c(const CharT *const s) noexcept\n    {\n      return strlen_c_r(s, 0UL);\n    }\n\n    static_assert(strlen_c(\"\") == 0UL, \"\");\n    static_assert(strlen_c(\"1\") == 1UL, \"\");\n    static_assert(strlen_c(\"example\") == 7UL, \"\");\n    static_assert(strlen_c(\"another\\0example\") == 7UL, \"\");\n\n  }\n\n  namespace test_rvalue_references\n  {\n\n    template < int N >\n    struct answer\n    {\n      static constexpr int value = N;\n    };\n\n    answer<1> f(int&)       { return answer<1>(); }\n    answer<2> f(const int&) { return answer<2>(); }\n    answer<3> f(int&&)      { return answer<3>(); }\n\n    void\n    test()\n    {\n      int i = 0;\n      const int c = 0;\n      static_assert(decltype(f(i))::value == 1, \"\");\n      static_assert(decltype(f(c))::value == 2, \"\");\n      static_assert(decltype(f(0))::value == 3, \"\");\n    }\n\n  }\n\n  namespace test_uniform_initialization\n  {\n\n    struct test\n    {\n      static const int zero {};\n      static const int one {1};\n    };\n\n    static_assert(test::zero == 0, \"\");\n    static_assert(test::one == 1, \"\");\n\n  }\n\n  namespace test_lambdas\n  {\n\n    void\n    test1()\n    {\n      auto lambda1 = [](){};\n      auto lambda2 = lambda1;\n      lambda1();\n      lambda2();\n    }\n\n    int\n    test2()\n    {\n      auto a = [](int i, int j){ return i + j; }(1, 2);\n      auto b = []() -> int { return '0'; }();\n      auto c = [=](){ return a + b; }();\n      auto d = [&](){ return c; }();\n      auto e = [a, &b](int x) mutable {\n        const auto identity = [](int y){ return y; };\n        for (auto i = 0; i < a; ++i)\n          a += b--;\n        return x + identity(a + b);\n      }(0);\n      return a + b + c + d + e;\n    }\n\n    int\n    test3()\n    {\n      const auto nullary = [](){ return 0; };\n      const auto unary = [](int x){ return x; };\n      using nullary_t = decltype(nullary);\n      using unary_t = decltype(unary);\n      const auto higher1st = [](nullary_t f){ return f(); };\n      const auto higher2nd = [unary](nullary_t f1){\n        return [unary, f1](unary_t f2){ return f2(unary(f1())); };\n      };\n      return higher1st(nullary) + higher2nd(nullary)(unary);\n    }\n\n  }\n\n  namespace test_variadic_templates\n  {\n\n    template <int...>\n    struct sum;\n\n    template <int N0, int... N1toN>\n    struct sum<N0, N1toN...>\n    {\n      static constexpr auto value = N0 + sum<N1toN...>::value;\n    };\n\n    template <>\n    struct sum<>\n    {\n      static constexpr auto value = 0;\n    };\n\n    static_assert(sum<>::value == 0, \"\");\n    static_assert(sum<1>::value == 1, \"\");\n    static_assert(sum<23>::value == 23, \"\");\n    static_assert(sum<1, 2>::value == 3, \"\");\n    static_assert(sum<5, 5, 11>::value == 21, \"\");\n    static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, \"\");\n\n  }\n\n  // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae\n  // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function\n  // because of this.\n  namespace test_template_alias_sfinae\n  {\n\n    struct foo {};\n\n    template<typename T>\n    using member = typename T::member_type;\n\n    template<typename T>\n    void func(...) {}\n\n    template<typename T>\n    void func(member<T>*) {}\n\n    void test();\n\n    void test() { func<foo>(0); }\n\n  }\n\n}  // namespace cxx11\n\n#endif  // __cplusplus >= 201103L\n\n\n\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"\nthen :\n  ax_cv_cxx_compile_cxx11=yes\nelse case e in #(\n  e) ax_cv_cxx_compile_cxx11=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ax_cv_cxx_compile_cxx11\" >&5\nprintf \"%s\\n\" \"$ax_cv_cxx_compile_cxx11\" >&6; }\n    if test x$ax_cv_cxx_compile_cxx11 = xyes; then\n      ac_success=yes\n    fi\n\n    if test x$ac_success = xno; then\n    for alternative in ${ax_cxx_compile_alternatives}; do\n      switch=\"-std=gnu++${alternative}\"\n      cachevar=`printf \"%s\\n\" \"ax_cv_cxx_compile_cxx11_$switch\" | sed \"$as_sed_sh\"`\n      { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether $CXX supports C++11 features with $switch\" >&5\nprintf %s \"checking whether $CXX supports C++11 features with $switch... \" >&6; }\nif eval test \\${$cachevar+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_save_CXX=\"$CXX\"\n         CXX=\"$CXX $switch\"\n         cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n\n// If the compiler admits that it is not ready for C++11, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n// MSVC always sets __cplusplus to 199711L in older versions; newer versions\n// only set it correctly if /Zc:__cplusplus is specified as well as a\n// /std:c++NN switch:\n//\n// https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-__cplusplus/\n//\n// The value __cplusplus ought to have is available in _MSVC_LANG since\n// Visual Studio 2015 Update 3:\n//\n// https://learn.microsoft.com/en-us/cpp/preprocessor/predefined-macros\n//\n// This was also the first MSVC version to support C++14 so we can't use the\n// value of either __cplusplus or _MSVC_LANG to quickly rule out MSVC having\n// C++11 or C++14 support, but we can check _MSVC_LANG for C++17 and later.\n#elif __cplusplus < 201103L && !defined _MSC_VER\n\n#error \"This is not a C++11 compiler\"\n\n#else\n\nnamespace cxx11\n{\n\n  namespace test_static_assert\n  {\n\n    template <typename T>\n    struct check\n    {\n      static_assert(sizeof(int) <= sizeof(T), \"not big enough\");\n    };\n\n  }\n\n  namespace test_final_override\n  {\n\n    struct Base\n    {\n      virtual ~Base() {}\n      virtual void f() {}\n    };\n\n    struct Derived : public Base\n    {\n      virtual ~Derived() override {}\n      virtual void f() override {}\n    };\n\n  }\n\n  namespace test_double_right_angle_brackets\n  {\n\n    template < typename T >\n    struct check {};\n\n    typedef check<void> single_type;\n    typedef check<check<void>> double_type;\n    typedef check<check<check<void>>> triple_type;\n    typedef check<check<check<check<void>>>> quadruple_type;\n\n  }\n\n  namespace test_decltype\n  {\n\n    int\n    f()\n    {\n      int a = 1;\n      decltype(a) b = 2;\n      return a + b;\n    }\n\n  }\n\n  namespace test_type_deduction\n  {\n\n    template < typename T1, typename T2 >\n    struct is_same\n    {\n      static const bool value = false;\n    };\n\n    template < typename T >\n    struct is_same<T, T>\n    {\n      static const bool value = true;\n    };\n\n    template < typename T1, typename T2 >\n    auto\n    add(T1 a1, T2 a2) -> decltype(a1 + a2)\n    {\n      return a1 + a2;\n    }\n\n    int\n    test(const int c, volatile int v)\n    {\n      static_assert(is_same<int, decltype(0)>::value == true, \"\");\n      static_assert(is_same<int, decltype(c)>::value == false, \"\");\n      static_assert(is_same<int, decltype(v)>::value == false, \"\");\n      auto ac = c;\n      auto av = v;\n      auto sumi = ac + av + 'x';\n      auto sumf = ac + av + 1.0;\n      static_assert(is_same<int, decltype(ac)>::value == true, \"\");\n      static_assert(is_same<int, decltype(av)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumi)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumf)>::value == false, \"\");\n      static_assert(is_same<int, decltype(add(c, v))>::value == true, \"\");\n      return (sumf > 0.0) ? sumi : add(c, v);\n    }\n\n  }\n\n  namespace test_noexcept\n  {\n\n    int f() { return 0; }\n    int g() noexcept { return 0; }\n\n    static_assert(noexcept(f()) == false, \"\");\n    static_assert(noexcept(g()) == true, \"\");\n\n  }\n\n  namespace test_constexpr\n  {\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c_r(const CharT *const s, const unsigned long acc) noexcept\n    {\n      return *s ? strlen_c_r(s + 1, acc + 1) : acc;\n    }\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c(const CharT *const s) noexcept\n    {\n      return strlen_c_r(s, 0UL);\n    }\n\n    static_assert(strlen_c(\"\") == 0UL, \"\");\n    static_assert(strlen_c(\"1\") == 1UL, \"\");\n    static_assert(strlen_c(\"example\") == 7UL, \"\");\n    static_assert(strlen_c(\"another\\0example\") == 7UL, \"\");\n\n  }\n\n  namespace test_rvalue_references\n  {\n\n    template < int N >\n    struct answer\n    {\n      static constexpr int value = N;\n    };\n\n    answer<1> f(int&)       { return answer<1>(); }\n    answer<2> f(const int&) { return answer<2>(); }\n    answer<3> f(int&&)      { return answer<3>(); }\n\n    void\n    test()\n    {\n      int i = 0;\n      const int c = 0;\n      static_assert(decltype(f(i))::value == 1, \"\");\n      static_assert(decltype(f(c))::value == 2, \"\");\n      static_assert(decltype(f(0))::value == 3, \"\");\n    }\n\n  }\n\n  namespace test_uniform_initialization\n  {\n\n    struct test\n    {\n      static const int zero {};\n      static const int one {1};\n    };\n\n    static_assert(test::zero == 0, \"\");\n    static_assert(test::one == 1, \"\");\n\n  }\n\n  namespace test_lambdas\n  {\n\n    void\n    test1()\n    {\n      auto lambda1 = [](){};\n      auto lambda2 = lambda1;\n      lambda1();\n      lambda2();\n    }\n\n    int\n    test2()\n    {\n      auto a = [](int i, int j){ return i + j; }(1, 2);\n      auto b = []() -> int { return '0'; }();\n      auto c = [=](){ return a + b; }();\n      auto d = [&](){ return c; }();\n      auto e = [a, &b](int x) mutable {\n        const auto identity = [](int y){ return y; };\n        for (auto i = 0; i < a; ++i)\n          a += b--;\n        return x + identity(a + b);\n      }(0);\n      return a + b + c + d + e;\n    }\n\n    int\n    test3()\n    {\n      const auto nullary = [](){ return 0; };\n      const auto unary = [](int x){ return x; };\n      using nullary_t = decltype(nullary);\n      using unary_t = decltype(unary);\n      const auto higher1st = [](nullary_t f){ return f(); };\n      const auto higher2nd = [unary](nullary_t f1){\n        return [unary, f1](unary_t f2){ return f2(unary(f1())); };\n      };\n      return higher1st(nullary) + higher2nd(nullary)(unary);\n    }\n\n  }\n\n  namespace test_variadic_templates\n  {\n\n    template <int...>\n    struct sum;\n\n    template <int N0, int... N1toN>\n    struct sum<N0, N1toN...>\n    {\n      static constexpr auto value = N0 + sum<N1toN...>::value;\n    };\n\n    template <>\n    struct sum<>\n    {\n      static constexpr auto value = 0;\n    };\n\n    static_assert(sum<>::value == 0, \"\");\n    static_assert(sum<1>::value == 1, \"\");\n    static_assert(sum<23>::value == 23, \"\");\n    static_assert(sum<1, 2>::value == 3, \"\");\n    static_assert(sum<5, 5, 11>::value == 21, \"\");\n    static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, \"\");\n\n  }\n\n  // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae\n  // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function\n  // because of this.\n  namespace test_template_alias_sfinae\n  {\n\n    struct foo {};\n\n    template<typename T>\n    using member = typename T::member_type;\n\n    template<typename T>\n    void func(...) {}\n\n    template<typename T>\n    void func(member<T>*) {}\n\n    void test();\n\n    void test() { func<foo>(0); }\n\n  }\n\n}  // namespace cxx11\n\n#endif  // __cplusplus >= 201103L\n\n\n\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"\nthen :\n  eval $cachevar=yes\nelse case e in #(\n  e) eval $cachevar=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\n         CXX=\"$ac_save_CXX\" ;;\nesac\nfi\neval ac_res=\\$$cachevar\n\t       { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\nprintf \"%s\\n\" \"$ac_res\" >&6; }\n      if eval test x\\$$cachevar = xyes; then\n        CXX=\"$CXX $switch\"\n        if test -n \"$CXXCPP\" ; then\n          CXXCPP=\"$CXXCPP $switch\"\n        fi\n        ac_success=yes\n        break\n      fi\n    done\n  fi\n\n    if test x$ac_success = xno; then\n                    for alternative in ${ax_cxx_compile_alternatives}; do\n      for switch in -std=c++${alternative} +std=c++${alternative} \"-h std=c++${alternative}\" MSVC; do\n        if test x\"$switch\" = xMSVC; then\n                                        switch=-std:c++${alternative}\n          cachevar=`printf \"%s\\n\" \"ax_cv_cxx_compile_cxx11_${switch}_MSVC\" | sed \"$as_sed_sh\"`\n        else\n          cachevar=`printf \"%s\\n\" \"ax_cv_cxx_compile_cxx11_$switch\" | sed \"$as_sed_sh\"`\n        fi\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether $CXX supports C++11 features with $switch\" >&5\nprintf %s \"checking whether $CXX supports C++11 features with $switch... \" >&6; }\nif eval test \\${$cachevar+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_save_CXX=\"$CXX\"\n           CXX=\"$CXX $switch\"\n           cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n\n// If the compiler admits that it is not ready for C++11, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n// MSVC always sets __cplusplus to 199711L in older versions; newer versions\n// only set it correctly if /Zc:__cplusplus is specified as well as a\n// /std:c++NN switch:\n//\n// https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-__cplusplus/\n//\n// The value __cplusplus ought to have is available in _MSVC_LANG since\n// Visual Studio 2015 Update 3:\n//\n// https://learn.microsoft.com/en-us/cpp/preprocessor/predefined-macros\n//\n// This was also the first MSVC version to support C++14 so we can't use the\n// value of either __cplusplus or _MSVC_LANG to quickly rule out MSVC having\n// C++11 or C++14 support, but we can check _MSVC_LANG for C++17 and later.\n#elif __cplusplus < 201103L && !defined _MSC_VER\n\n#error \"This is not a C++11 compiler\"\n\n#else\n\nnamespace cxx11\n{\n\n  namespace test_static_assert\n  {\n\n    template <typename T>\n    struct check\n    {\n      static_assert(sizeof(int) <= sizeof(T), \"not big enough\");\n    };\n\n  }\n\n  namespace test_final_override\n  {\n\n    struct Base\n    {\n      virtual ~Base() {}\n      virtual void f() {}\n    };\n\n    struct Derived : public Base\n    {\n      virtual ~Derived() override {}\n      virtual void f() override {}\n    };\n\n  }\n\n  namespace test_double_right_angle_brackets\n  {\n\n    template < typename T >\n    struct check {};\n\n    typedef check<void> single_type;\n    typedef check<check<void>> double_type;\n    typedef check<check<check<void>>> triple_type;\n    typedef check<check<check<check<void>>>> quadruple_type;\n\n  }\n\n  namespace test_decltype\n  {\n\n    int\n    f()\n    {\n      int a = 1;\n      decltype(a) b = 2;\n      return a + b;\n    }\n\n  }\n\n  namespace test_type_deduction\n  {\n\n    template < typename T1, typename T2 >\n    struct is_same\n    {\n      static const bool value = false;\n    };\n\n    template < typename T >\n    struct is_same<T, T>\n    {\n      static const bool value = true;\n    };\n\n    template < typename T1, typename T2 >\n    auto\n    add(T1 a1, T2 a2) -> decltype(a1 + a2)\n    {\n      return a1 + a2;\n    }\n\n    int\n    test(const int c, volatile int v)\n    {\n      static_assert(is_same<int, decltype(0)>::value == true, \"\");\n      static_assert(is_same<int, decltype(c)>::value == false, \"\");\n      static_assert(is_same<int, decltype(v)>::value == false, \"\");\n      auto ac = c;\n      auto av = v;\n      auto sumi = ac + av + 'x';\n      auto sumf = ac + av + 1.0;\n      static_assert(is_same<int, decltype(ac)>::value == true, \"\");\n      static_assert(is_same<int, decltype(av)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumi)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumf)>::value == false, \"\");\n      static_assert(is_same<int, decltype(add(c, v))>::value == true, \"\");\n      return (sumf > 0.0) ? sumi : add(c, v);\n    }\n\n  }\n\n  namespace test_noexcept\n  {\n\n    int f() { return 0; }\n    int g() noexcept { return 0; }\n\n    static_assert(noexcept(f()) == false, \"\");\n    static_assert(noexcept(g()) == true, \"\");\n\n  }\n\n  namespace test_constexpr\n  {\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c_r(const CharT *const s, const unsigned long acc) noexcept\n    {\n      return *s ? strlen_c_r(s + 1, acc + 1) : acc;\n    }\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c(const CharT *const s) noexcept\n    {\n      return strlen_c_r(s, 0UL);\n    }\n\n    static_assert(strlen_c(\"\") == 0UL, \"\");\n    static_assert(strlen_c(\"1\") == 1UL, \"\");\n    static_assert(strlen_c(\"example\") == 7UL, \"\");\n    static_assert(strlen_c(\"another\\0example\") == 7UL, \"\");\n\n  }\n\n  namespace test_rvalue_references\n  {\n\n    template < int N >\n    struct answer\n    {\n      static constexpr int value = N;\n    };\n\n    answer<1> f(int&)       { return answer<1>(); }\n    answer<2> f(const int&) { return answer<2>(); }\n    answer<3> f(int&&)      { return answer<3>(); }\n\n    void\n    test()\n    {\n      int i = 0;\n      const int c = 0;\n      static_assert(decltype(f(i))::value == 1, \"\");\n      static_assert(decltype(f(c))::value == 2, \"\");\n      static_assert(decltype(f(0))::value == 3, \"\");\n    }\n\n  }\n\n  namespace test_uniform_initialization\n  {\n\n    struct test\n    {\n      static const int zero {};\n      static const int one {1};\n    };\n\n    static_assert(test::zero == 0, \"\");\n    static_assert(test::one == 1, \"\");\n\n  }\n\n  namespace test_lambdas\n  {\n\n    void\n    test1()\n    {\n      auto lambda1 = [](){};\n      auto lambda2 = lambda1;\n      lambda1();\n      lambda2();\n    }\n\n    int\n    test2()\n    {\n      auto a = [](int i, int j){ return i + j; }(1, 2);\n      auto b = []() -> int { return '0'; }();\n      auto c = [=](){ return a + b; }();\n      auto d = [&](){ return c; }();\n      auto e = [a, &b](int x) mutable {\n        const auto identity = [](int y){ return y; };\n        for (auto i = 0; i < a; ++i)\n          a += b--;\n        return x + identity(a + b);\n      }(0);\n      return a + b + c + d + e;\n    }\n\n    int\n    test3()\n    {\n      const auto nullary = [](){ return 0; };\n      const auto unary = [](int x){ return x; };\n      using nullary_t = decltype(nullary);\n      using unary_t = decltype(unary);\n      const auto higher1st = [](nullary_t f){ return f(); };\n      const auto higher2nd = [unary](nullary_t f1){\n        return [unary, f1](unary_t f2){ return f2(unary(f1())); };\n      };\n      return higher1st(nullary) + higher2nd(nullary)(unary);\n    }\n\n  }\n\n  namespace test_variadic_templates\n  {\n\n    template <int...>\n    struct sum;\n\n    template <int N0, int... N1toN>\n    struct sum<N0, N1toN...>\n    {\n      static constexpr auto value = N0 + sum<N1toN...>::value;\n    };\n\n    template <>\n    struct sum<>\n    {\n      static constexpr auto value = 0;\n    };\n\n    static_assert(sum<>::value == 0, \"\");\n    static_assert(sum<1>::value == 1, \"\");\n    static_assert(sum<23>::value == 23, \"\");\n    static_assert(sum<1, 2>::value == 3, \"\");\n    static_assert(sum<5, 5, 11>::value == 21, \"\");\n    static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, \"\");\n\n  }\n\n  // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae\n  // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function\n  // because of this.\n  namespace test_template_alias_sfinae\n  {\n\n    struct foo {};\n\n    template<typename T>\n    using member = typename T::member_type;\n\n    template<typename T>\n    void func(...) {}\n\n    template<typename T>\n    void func(member<T>*) {}\n\n    void test();\n\n    void test() { func<foo>(0); }\n\n  }\n\n}  // namespace cxx11\n\n#endif  // __cplusplus >= 201103L\n\n\n\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"\nthen :\n  eval $cachevar=yes\nelse case e in #(\n  e) eval $cachevar=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\n           CXX=\"$ac_save_CXX\" ;;\nesac\nfi\neval ac_res=\\$$cachevar\n\t       { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\nprintf \"%s\\n\" \"$ac_res\" >&6; }\n        if eval test x\\$$cachevar = xyes; then\n          CXX=\"$CXX $switch\"\n          if test -n \"$CXXCPP\" ; then\n            CXXCPP=\"$CXXCPP $switch\"\n          fi\n          ac_success=yes\n          break\n        fi\n      done\n      if test x$ac_success = xyes; then\n        break\n      fi\n    done\n  fi\n  ac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n  if test x$ax_cxx_compile_cxx11_required = xtrue; then\n    if test x$ac_success = xno; then\n      as_fn_error $? \"*** A compiler with support for C++11 language features is required.\" \"$LINENO\" 5\n    fi\n  fi\n  if test x$ac_success = xno; then\n    HAVE_CXX11=0\n    { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: No compiler with C++11 support was found\" >&5\nprintf \"%s\\n\" \"$as_me: No compiler with C++11 support was found\" >&6;}\n  else\n    HAVE_CXX11=1\n\nprintf \"%s\\n\" \"#define HAVE_CXX11 1\" >>confdefs.h\n\n  fi\n\n\n    if test \"$HAVE_CXX11\" = \"1\";\n    then\n       PBX_CXX11=1\n    fi\n\n    if test \"${ENABLE_LATEST_CXX_STD}\" != \"yes\" ; then\n        CXX=\"${ast_cxx_check_std_save_CXX}\"\n        CXXCPP=\"${ast_cxx_check_std_save_CXXCPP}\"\n    fi\n\n\n    PBX_CXX14=0\n    if test \"${ENABLE_LATEST_CXX_STD}\" != \"yes\" ; then\n        ast_cxx_check_std_save_CXX=\"${CXX}\"\n        ast_cxx_check_std_save_CXXCPP=\"${CXXCPP}\"\n    fi\n      ax_cxx_compile_alternatives=\"14 1y\"    ax_cxx_compile_cxx14_required=false\n  ac_ext=cpp\nac_cpp='$CXXCPP $CPPFLAGS'\nac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n  ac_success=no\n\n      { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether $CXX supports C++14 features by default\" >&5\nprintf %s \"checking whether $CXX supports C++14 features by default... \" >&6; }\nif test ${ax_cv_cxx_compile_cxx14+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n\n// If the compiler admits that it is not ready for C++11, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n// MSVC always sets __cplusplus to 199711L in older versions; newer versions\n// only set it correctly if /Zc:__cplusplus is specified as well as a\n// /std:c++NN switch:\n//\n// https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-__cplusplus/\n//\n// The value __cplusplus ought to have is available in _MSVC_LANG since\n// Visual Studio 2015 Update 3:\n//\n// https://learn.microsoft.com/en-us/cpp/preprocessor/predefined-macros\n//\n// This was also the first MSVC version to support C++14 so we can't use the\n// value of either __cplusplus or _MSVC_LANG to quickly rule out MSVC having\n// C++11 or C++14 support, but we can check _MSVC_LANG for C++17 and later.\n#elif __cplusplus < 201103L && !defined _MSC_VER\n\n#error \"This is not a C++11 compiler\"\n\n#else\n\nnamespace cxx11\n{\n\n  namespace test_static_assert\n  {\n\n    template <typename T>\n    struct check\n    {\n      static_assert(sizeof(int) <= sizeof(T), \"not big enough\");\n    };\n\n  }\n\n  namespace test_final_override\n  {\n\n    struct Base\n    {\n      virtual ~Base() {}\n      virtual void f() {}\n    };\n\n    struct Derived : public Base\n    {\n      virtual ~Derived() override {}\n      virtual void f() override {}\n    };\n\n  }\n\n  namespace test_double_right_angle_brackets\n  {\n\n    template < typename T >\n    struct check {};\n\n    typedef check<void> single_type;\n    typedef check<check<void>> double_type;\n    typedef check<check<check<void>>> triple_type;\n    typedef check<check<check<check<void>>>> quadruple_type;\n\n  }\n\n  namespace test_decltype\n  {\n\n    int\n    f()\n    {\n      int a = 1;\n      decltype(a) b = 2;\n      return a + b;\n    }\n\n  }\n\n  namespace test_type_deduction\n  {\n\n    template < typename T1, typename T2 >\n    struct is_same\n    {\n      static const bool value = false;\n    };\n\n    template < typename T >\n    struct is_same<T, T>\n    {\n      static const bool value = true;\n    };\n\n    template < typename T1, typename T2 >\n    auto\n    add(T1 a1, T2 a2) -> decltype(a1 + a2)\n    {\n      return a1 + a2;\n    }\n\n    int\n    test(const int c, volatile int v)\n    {\n      static_assert(is_same<int, decltype(0)>::value == true, \"\");\n      static_assert(is_same<int, decltype(c)>::value == false, \"\");\n      static_assert(is_same<int, decltype(v)>::value == false, \"\");\n      auto ac = c;\n      auto av = v;\n      auto sumi = ac + av + 'x';\n      auto sumf = ac + av + 1.0;\n      static_assert(is_same<int, decltype(ac)>::value == true, \"\");\n      static_assert(is_same<int, decltype(av)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumi)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumf)>::value == false, \"\");\n      static_assert(is_same<int, decltype(add(c, v))>::value == true, \"\");\n      return (sumf > 0.0) ? sumi : add(c, v);\n    }\n\n  }\n\n  namespace test_noexcept\n  {\n\n    int f() { return 0; }\n    int g() noexcept { return 0; }\n\n    static_assert(noexcept(f()) == false, \"\");\n    static_assert(noexcept(g()) == true, \"\");\n\n  }\n\n  namespace test_constexpr\n  {\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c_r(const CharT *const s, const unsigned long acc) noexcept\n    {\n      return *s ? strlen_c_r(s + 1, acc + 1) : acc;\n    }\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c(const CharT *const s) noexcept\n    {\n      return strlen_c_r(s, 0UL);\n    }\n\n    static_assert(strlen_c(\"\") == 0UL, \"\");\n    static_assert(strlen_c(\"1\") == 1UL, \"\");\n    static_assert(strlen_c(\"example\") == 7UL, \"\");\n    static_assert(strlen_c(\"another\\0example\") == 7UL, \"\");\n\n  }\n\n  namespace test_rvalue_references\n  {\n\n    template < int N >\n    struct answer\n    {\n      static constexpr int value = N;\n    };\n\n    answer<1> f(int&)       { return answer<1>(); }\n    answer<2> f(const int&) { return answer<2>(); }\n    answer<3> f(int&&)      { return answer<3>(); }\n\n    void\n    test()\n    {\n      int i = 0;\n      const int c = 0;\n      static_assert(decltype(f(i))::value == 1, \"\");\n      static_assert(decltype(f(c))::value == 2, \"\");\n      static_assert(decltype(f(0))::value == 3, \"\");\n    }\n\n  }\n\n  namespace test_uniform_initialization\n  {\n\n    struct test\n    {\n      static const int zero {};\n      static const int one {1};\n    };\n\n    static_assert(test::zero == 0, \"\");\n    static_assert(test::one == 1, \"\");\n\n  }\n\n  namespace test_lambdas\n  {\n\n    void\n    test1()\n    {\n      auto lambda1 = [](){};\n      auto lambda2 = lambda1;\n      lambda1();\n      lambda2();\n    }\n\n    int\n    test2()\n    {\n      auto a = [](int i, int j){ return i + j; }(1, 2);\n      auto b = []() -> int { return '0'; }();\n      auto c = [=](){ return a + b; }();\n      auto d = [&](){ return c; }();\n      auto e = [a, &b](int x) mutable {\n        const auto identity = [](int y){ return y; };\n        for (auto i = 0; i < a; ++i)\n          a += b--;\n        return x + identity(a + b);\n      }(0);\n      return a + b + c + d + e;\n    }\n\n    int\n    test3()\n    {\n      const auto nullary = [](){ return 0; };\n      const auto unary = [](int x){ return x; };\n      using nullary_t = decltype(nullary);\n      using unary_t = decltype(unary);\n      const auto higher1st = [](nullary_t f){ return f(); };\n      const auto higher2nd = [unary](nullary_t f1){\n        return [unary, f1](unary_t f2){ return f2(unary(f1())); };\n      };\n      return higher1st(nullary) + higher2nd(nullary)(unary);\n    }\n\n  }\n\n  namespace test_variadic_templates\n  {\n\n    template <int...>\n    struct sum;\n\n    template <int N0, int... N1toN>\n    struct sum<N0, N1toN...>\n    {\n      static constexpr auto value = N0 + sum<N1toN...>::value;\n    };\n\n    template <>\n    struct sum<>\n    {\n      static constexpr auto value = 0;\n    };\n\n    static_assert(sum<>::value == 0, \"\");\n    static_assert(sum<1>::value == 1, \"\");\n    static_assert(sum<23>::value == 23, \"\");\n    static_assert(sum<1, 2>::value == 3, \"\");\n    static_assert(sum<5, 5, 11>::value == 21, \"\");\n    static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, \"\");\n\n  }\n\n  // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae\n  // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function\n  // because of this.\n  namespace test_template_alias_sfinae\n  {\n\n    struct foo {};\n\n    template<typename T>\n    using member = typename T::member_type;\n\n    template<typename T>\n    void func(...) {}\n\n    template<typename T>\n    void func(member<T>*) {}\n\n    void test();\n\n    void test() { func<foo>(0); }\n\n  }\n\n}  // namespace cxx11\n\n#endif  // __cplusplus >= 201103L\n\n\n\n\n// If the compiler admits that it is not ready for C++14, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif __cplusplus < 201402L && !defined _MSC_VER\n\n#error \"This is not a C++14 compiler\"\n\n#else\n\nnamespace cxx14\n{\n\n  namespace test_polymorphic_lambdas\n  {\n\n    int\n    test()\n    {\n      const auto lambda = [](auto&&... args){\n        const auto istiny = [](auto x){\n          return (sizeof(x) == 1UL) ? 1 : 0;\n        };\n        const int aretiny[] = { istiny(args)... };\n        return aretiny[0];\n      };\n      return lambda(1, 1L, 1.0f, '1');\n    }\n\n  }\n\n  namespace test_binary_literals\n  {\n\n    constexpr auto ivii = 0b0000000000101010;\n    static_assert(ivii == 42, \"wrong value\");\n\n  }\n\n  namespace test_generalized_constexpr\n  {\n\n    template < typename CharT >\n    constexpr unsigned long\n    strlen_c(const CharT *const s) noexcept\n    {\n      auto length = 0UL;\n      for (auto p = s; *p; ++p)\n        ++length;\n      return length;\n    }\n\n    static_assert(strlen_c(\"\") == 0UL, \"\");\n    static_assert(strlen_c(\"x\") == 1UL, \"\");\n    static_assert(strlen_c(\"test\") == 4UL, \"\");\n    static_assert(strlen_c(\"another\\0test\") == 7UL, \"\");\n\n  }\n\n  namespace test_lambda_init_capture\n  {\n\n    int\n    test()\n    {\n      auto x = 0;\n      const auto lambda1 = [a = x](int b){ return a + b; };\n      const auto lambda2 = [a = lambda1(x)](){ return a; };\n      return lambda2();\n    }\n\n  }\n\n  namespace test_digit_separators\n  {\n\n    constexpr auto ten_million = 100'000'000;\n    static_assert(ten_million == 100000000, \"\");\n\n  }\n\n  namespace test_return_type_deduction\n  {\n\n    auto f(int& x) { return x; }\n    decltype(auto) g(int& x) { return x; }\n\n    template < typename T1, typename T2 >\n    struct is_same\n    {\n      static constexpr auto value = false;\n    };\n\n    template < typename T >\n    struct is_same<T, T>\n    {\n      static constexpr auto value = true;\n    };\n\n    int\n    test()\n    {\n      auto x = 0;\n      static_assert(is_same<int, decltype(f(x))>::value, \"\");\n      static_assert(is_same<int&, decltype(g(x))>::value, \"\");\n      return x;\n    }\n\n  }\n\n}  // namespace cxx14\n\n#endif  // __cplusplus >= 201402L\n\n\n\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"\nthen :\n  ax_cv_cxx_compile_cxx14=yes\nelse case e in #(\n  e) ax_cv_cxx_compile_cxx14=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ax_cv_cxx_compile_cxx14\" >&5\nprintf \"%s\\n\" \"$ax_cv_cxx_compile_cxx14\" >&6; }\n    if test x$ax_cv_cxx_compile_cxx14 = xyes; then\n      ac_success=yes\n    fi\n\n    if test x$ac_success = xno; then\n    for alternative in ${ax_cxx_compile_alternatives}; do\n      switch=\"-std=gnu++${alternative}\"\n      cachevar=`printf \"%s\\n\" \"ax_cv_cxx_compile_cxx14_$switch\" | sed \"$as_sed_sh\"`\n      { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether $CXX supports C++14 features with $switch\" >&5\nprintf %s \"checking whether $CXX supports C++14 features with $switch... \" >&6; }\nif eval test \\${$cachevar+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_save_CXX=\"$CXX\"\n         CXX=\"$CXX $switch\"\n         cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n\n// If the compiler admits that it is not ready for C++11, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n// MSVC always sets __cplusplus to 199711L in older versions; newer versions\n// only set it correctly if /Zc:__cplusplus is specified as well as a\n// /std:c++NN switch:\n//\n// https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-__cplusplus/\n//\n// The value __cplusplus ought to have is available in _MSVC_LANG since\n// Visual Studio 2015 Update 3:\n//\n// https://learn.microsoft.com/en-us/cpp/preprocessor/predefined-macros\n//\n// This was also the first MSVC version to support C++14 so we can't use the\n// value of either __cplusplus or _MSVC_LANG to quickly rule out MSVC having\n// C++11 or C++14 support, but we can check _MSVC_LANG for C++17 and later.\n#elif __cplusplus < 201103L && !defined _MSC_VER\n\n#error \"This is not a C++11 compiler\"\n\n#else\n\nnamespace cxx11\n{\n\n  namespace test_static_assert\n  {\n\n    template <typename T>\n    struct check\n    {\n      static_assert(sizeof(int) <= sizeof(T), \"not big enough\");\n    };\n\n  }\n\n  namespace test_final_override\n  {\n\n    struct Base\n    {\n      virtual ~Base() {}\n      virtual void f() {}\n    };\n\n    struct Derived : public Base\n    {\n      virtual ~Derived() override {}\n      virtual void f() override {}\n    };\n\n  }\n\n  namespace test_double_right_angle_brackets\n  {\n\n    template < typename T >\n    struct check {};\n\n    typedef check<void> single_type;\n    typedef check<check<void>> double_type;\n    typedef check<check<check<void>>> triple_type;\n    typedef check<check<check<check<void>>>> quadruple_type;\n\n  }\n\n  namespace test_decltype\n  {\n\n    int\n    f()\n    {\n      int a = 1;\n      decltype(a) b = 2;\n      return a + b;\n    }\n\n  }\n\n  namespace test_type_deduction\n  {\n\n    template < typename T1, typename T2 >\n    struct is_same\n    {\n      static const bool value = false;\n    };\n\n    template < typename T >\n    struct is_same<T, T>\n    {\n      static const bool value = true;\n    };\n\n    template < typename T1, typename T2 >\n    auto\n    add(T1 a1, T2 a2) -> decltype(a1 + a2)\n    {\n      return a1 + a2;\n    }\n\n    int\n    test(const int c, volatile int v)\n    {\n      static_assert(is_same<int, decltype(0)>::value == true, \"\");\n      static_assert(is_same<int, decltype(c)>::value == false, \"\");\n      static_assert(is_same<int, decltype(v)>::value == false, \"\");\n      auto ac = c;\n      auto av = v;\n      auto sumi = ac + av + 'x';\n      auto sumf = ac + av + 1.0;\n      static_assert(is_same<int, decltype(ac)>::value == true, \"\");\n      static_assert(is_same<int, decltype(av)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumi)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumf)>::value == false, \"\");\n      static_assert(is_same<int, decltype(add(c, v))>::value == true, \"\");\n      return (sumf > 0.0) ? sumi : add(c, v);\n    }\n\n  }\n\n  namespace test_noexcept\n  {\n\n    int f() { return 0; }\n    int g() noexcept { return 0; }\n\n    static_assert(noexcept(f()) == false, \"\");\n    static_assert(noexcept(g()) == true, \"\");\n\n  }\n\n  namespace test_constexpr\n  {\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c_r(const CharT *const s, const unsigned long acc) noexcept\n    {\n      return *s ? strlen_c_r(s + 1, acc + 1) : acc;\n    }\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c(const CharT *const s) noexcept\n    {\n      return strlen_c_r(s, 0UL);\n    }\n\n    static_assert(strlen_c(\"\") == 0UL, \"\");\n    static_assert(strlen_c(\"1\") == 1UL, \"\");\n    static_assert(strlen_c(\"example\") == 7UL, \"\");\n    static_assert(strlen_c(\"another\\0example\") == 7UL, \"\");\n\n  }\n\n  namespace test_rvalue_references\n  {\n\n    template < int N >\n    struct answer\n    {\n      static constexpr int value = N;\n    };\n\n    answer<1> f(int&)       { return answer<1>(); }\n    answer<2> f(const int&) { return answer<2>(); }\n    answer<3> f(int&&)      { return answer<3>(); }\n\n    void\n    test()\n    {\n      int i = 0;\n      const int c = 0;\n      static_assert(decltype(f(i))::value == 1, \"\");\n      static_assert(decltype(f(c))::value == 2, \"\");\n      static_assert(decltype(f(0))::value == 3, \"\");\n    }\n\n  }\n\n  namespace test_uniform_initialization\n  {\n\n    struct test\n    {\n      static const int zero {};\n      static const int one {1};\n    };\n\n    static_assert(test::zero == 0, \"\");\n    static_assert(test::one == 1, \"\");\n\n  }\n\n  namespace test_lambdas\n  {\n\n    void\n    test1()\n    {\n      auto lambda1 = [](){};\n      auto lambda2 = lambda1;\n      lambda1();\n      lambda2();\n    }\n\n    int\n    test2()\n    {\n      auto a = [](int i, int j){ return i + j; }(1, 2);\n      auto b = []() -> int { return '0'; }();\n      auto c = [=](){ return a + b; }();\n      auto d = [&](){ return c; }();\n      auto e = [a, &b](int x) mutable {\n        const auto identity = [](int y){ return y; };\n        for (auto i = 0; i < a; ++i)\n          a += b--;\n        return x + identity(a + b);\n      }(0);\n      return a + b + c + d + e;\n    }\n\n    int\n    test3()\n    {\n      const auto nullary = [](){ return 0; };\n      const auto unary = [](int x){ return x; };\n      using nullary_t = decltype(nullary);\n      using unary_t = decltype(unary);\n      const auto higher1st = [](nullary_t f){ return f(); };\n      const auto higher2nd = [unary](nullary_t f1){\n        return [unary, f1](unary_t f2){ return f2(unary(f1())); };\n      };\n      return higher1st(nullary) + higher2nd(nullary)(unary);\n    }\n\n  }\n\n  namespace test_variadic_templates\n  {\n\n    template <int...>\n    struct sum;\n\n    template <int N0, int... N1toN>\n    struct sum<N0, N1toN...>\n    {\n      static constexpr auto value = N0 + sum<N1toN...>::value;\n    };\n\n    template <>\n    struct sum<>\n    {\n      static constexpr auto value = 0;\n    };\n\n    static_assert(sum<>::value == 0, \"\");\n    static_assert(sum<1>::value == 1, \"\");\n    static_assert(sum<23>::value == 23, \"\");\n    static_assert(sum<1, 2>::value == 3, \"\");\n    static_assert(sum<5, 5, 11>::value == 21, \"\");\n    static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, \"\");\n\n  }\n\n  // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae\n  // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function\n  // because of this.\n  namespace test_template_alias_sfinae\n  {\n\n    struct foo {};\n\n    template<typename T>\n    using member = typename T::member_type;\n\n    template<typename T>\n    void func(...) {}\n\n    template<typename T>\n    void func(member<T>*) {}\n\n    void test();\n\n    void test() { func<foo>(0); }\n\n  }\n\n}  // namespace cxx11\n\n#endif  // __cplusplus >= 201103L\n\n\n\n\n// If the compiler admits that it is not ready for C++14, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif __cplusplus < 201402L && !defined _MSC_VER\n\n#error \"This is not a C++14 compiler\"\n\n#else\n\nnamespace cxx14\n{\n\n  namespace test_polymorphic_lambdas\n  {\n\n    int\n    test()\n    {\n      const auto lambda = [](auto&&... args){\n        const auto istiny = [](auto x){\n          return (sizeof(x) == 1UL) ? 1 : 0;\n        };\n        const int aretiny[] = { istiny(args)... };\n        return aretiny[0];\n      };\n      return lambda(1, 1L, 1.0f, '1');\n    }\n\n  }\n\n  namespace test_binary_literals\n  {\n\n    constexpr auto ivii = 0b0000000000101010;\n    static_assert(ivii == 42, \"wrong value\");\n\n  }\n\n  namespace test_generalized_constexpr\n  {\n\n    template < typename CharT >\n    constexpr unsigned long\n    strlen_c(const CharT *const s) noexcept\n    {\n      auto length = 0UL;\n      for (auto p = s; *p; ++p)\n        ++length;\n      return length;\n    }\n\n    static_assert(strlen_c(\"\") == 0UL, \"\");\n    static_assert(strlen_c(\"x\") == 1UL, \"\");\n    static_assert(strlen_c(\"test\") == 4UL, \"\");\n    static_assert(strlen_c(\"another\\0test\") == 7UL, \"\");\n\n  }\n\n  namespace test_lambda_init_capture\n  {\n\n    int\n    test()\n    {\n      auto x = 0;\n      const auto lambda1 = [a = x](int b){ return a + b; };\n      const auto lambda2 = [a = lambda1(x)](){ return a; };\n      return lambda2();\n    }\n\n  }\n\n  namespace test_digit_separators\n  {\n\n    constexpr auto ten_million = 100'000'000;\n    static_assert(ten_million == 100000000, \"\");\n\n  }\n\n  namespace test_return_type_deduction\n  {\n\n    auto f(int& x) { return x; }\n    decltype(auto) g(int& x) { return x; }\n\n    template < typename T1, typename T2 >\n    struct is_same\n    {\n      static constexpr auto value = false;\n    };\n\n    template < typename T >\n    struct is_same<T, T>\n    {\n      static constexpr auto value = true;\n    };\n\n    int\n    test()\n    {\n      auto x = 0;\n      static_assert(is_same<int, decltype(f(x))>::value, \"\");\n      static_assert(is_same<int&, decltype(g(x))>::value, \"\");\n      return x;\n    }\n\n  }\n\n}  // namespace cxx14\n\n#endif  // __cplusplus >= 201402L\n\n\n\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"\nthen :\n  eval $cachevar=yes\nelse case e in #(\n  e) eval $cachevar=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\n         CXX=\"$ac_save_CXX\" ;;\nesac\nfi\neval ac_res=\\$$cachevar\n\t       { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\nprintf \"%s\\n\" \"$ac_res\" >&6; }\n      if eval test x\\$$cachevar = xyes; then\n        CXX=\"$CXX $switch\"\n        if test -n \"$CXXCPP\" ; then\n          CXXCPP=\"$CXXCPP $switch\"\n        fi\n        ac_success=yes\n        break\n      fi\n    done\n  fi\n\n    if test x$ac_success = xno; then\n                    for alternative in ${ax_cxx_compile_alternatives}; do\n      for switch in -std=c++${alternative} +std=c++${alternative} \"-h std=c++${alternative}\" MSVC; do\n        if test x\"$switch\" = xMSVC; then\n                                        switch=-std:c++${alternative}\n          cachevar=`printf \"%s\\n\" \"ax_cv_cxx_compile_cxx14_${switch}_MSVC\" | sed \"$as_sed_sh\"`\n        else\n          cachevar=`printf \"%s\\n\" \"ax_cv_cxx_compile_cxx14_$switch\" | sed \"$as_sed_sh\"`\n        fi\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether $CXX supports C++14 features with $switch\" >&5\nprintf %s \"checking whether $CXX supports C++14 features with $switch... \" >&6; }\nif eval test \\${$cachevar+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_save_CXX=\"$CXX\"\n           CXX=\"$CXX $switch\"\n           cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n\n// If the compiler admits that it is not ready for C++11, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n// MSVC always sets __cplusplus to 199711L in older versions; newer versions\n// only set it correctly if /Zc:__cplusplus is specified as well as a\n// /std:c++NN switch:\n//\n// https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-__cplusplus/\n//\n// The value __cplusplus ought to have is available in _MSVC_LANG since\n// Visual Studio 2015 Update 3:\n//\n// https://learn.microsoft.com/en-us/cpp/preprocessor/predefined-macros\n//\n// This was also the first MSVC version to support C++14 so we can't use the\n// value of either __cplusplus or _MSVC_LANG to quickly rule out MSVC having\n// C++11 or C++14 support, but we can check _MSVC_LANG for C++17 and later.\n#elif __cplusplus < 201103L && !defined _MSC_VER\n\n#error \"This is not a C++11 compiler\"\n\n#else\n\nnamespace cxx11\n{\n\n  namespace test_static_assert\n  {\n\n    template <typename T>\n    struct check\n    {\n      static_assert(sizeof(int) <= sizeof(T), \"not big enough\");\n    };\n\n  }\n\n  namespace test_final_override\n  {\n\n    struct Base\n    {\n      virtual ~Base() {}\n      virtual void f() {}\n    };\n\n    struct Derived : public Base\n    {\n      virtual ~Derived() override {}\n      virtual void f() override {}\n    };\n\n  }\n\n  namespace test_double_right_angle_brackets\n  {\n\n    template < typename T >\n    struct check {};\n\n    typedef check<void> single_type;\n    typedef check<check<void>> double_type;\n    typedef check<check<check<void>>> triple_type;\n    typedef check<check<check<check<void>>>> quadruple_type;\n\n  }\n\n  namespace test_decltype\n  {\n\n    int\n    f()\n    {\n      int a = 1;\n      decltype(a) b = 2;\n      return a + b;\n    }\n\n  }\n\n  namespace test_type_deduction\n  {\n\n    template < typename T1, typename T2 >\n    struct is_same\n    {\n      static const bool value = false;\n    };\n\n    template < typename T >\n    struct is_same<T, T>\n    {\n      static const bool value = true;\n    };\n\n    template < typename T1, typename T2 >\n    auto\n    add(T1 a1, T2 a2) -> decltype(a1 + a2)\n    {\n      return a1 + a2;\n    }\n\n    int\n    test(const int c, volatile int v)\n    {\n      static_assert(is_same<int, decltype(0)>::value == true, \"\");\n      static_assert(is_same<int, decltype(c)>::value == false, \"\");\n      static_assert(is_same<int, decltype(v)>::value == false, \"\");\n      auto ac = c;\n      auto av = v;\n      auto sumi = ac + av + 'x';\n      auto sumf = ac + av + 1.0;\n      static_assert(is_same<int, decltype(ac)>::value == true, \"\");\n      static_assert(is_same<int, decltype(av)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumi)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumf)>::value == false, \"\");\n      static_assert(is_same<int, decltype(add(c, v))>::value == true, \"\");\n      return (sumf > 0.0) ? sumi : add(c, v);\n    }\n\n  }\n\n  namespace test_noexcept\n  {\n\n    int f() { return 0; }\n    int g() noexcept { return 0; }\n\n    static_assert(noexcept(f()) == false, \"\");\n    static_assert(noexcept(g()) == true, \"\");\n\n  }\n\n  namespace test_constexpr\n  {\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c_r(const CharT *const s, const unsigned long acc) noexcept\n    {\n      return *s ? strlen_c_r(s + 1, acc + 1) : acc;\n    }\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c(const CharT *const s) noexcept\n    {\n      return strlen_c_r(s, 0UL);\n    }\n\n    static_assert(strlen_c(\"\") == 0UL, \"\");\n    static_assert(strlen_c(\"1\") == 1UL, \"\");\n    static_assert(strlen_c(\"example\") == 7UL, \"\");\n    static_assert(strlen_c(\"another\\0example\") == 7UL, \"\");\n\n  }\n\n  namespace test_rvalue_references\n  {\n\n    template < int N >\n    struct answer\n    {\n      static constexpr int value = N;\n    };\n\n    answer<1> f(int&)       { return answer<1>(); }\n    answer<2> f(const int&) { return answer<2>(); }\n    answer<3> f(int&&)      { return answer<3>(); }\n\n    void\n    test()\n    {\n      int i = 0;\n      const int c = 0;\n      static_assert(decltype(f(i))::value == 1, \"\");\n      static_assert(decltype(f(c))::value == 2, \"\");\n      static_assert(decltype(f(0))::value == 3, \"\");\n    }\n\n  }\n\n  namespace test_uniform_initialization\n  {\n\n    struct test\n    {\n      static const int zero {};\n      static const int one {1};\n    };\n\n    static_assert(test::zero == 0, \"\");\n    static_assert(test::one == 1, \"\");\n\n  }\n\n  namespace test_lambdas\n  {\n\n    void\n    test1()\n    {\n      auto lambda1 = [](){};\n      auto lambda2 = lambda1;\n      lambda1();\n      lambda2();\n    }\n\n    int\n    test2()\n    {\n      auto a = [](int i, int j){ return i + j; }(1, 2);\n      auto b = []() -> int { return '0'; }();\n      auto c = [=](){ return a + b; }();\n      auto d = [&](){ return c; }();\n      auto e = [a, &b](int x) mutable {\n        const auto identity = [](int y){ return y; };\n        for (auto i = 0; i < a; ++i)\n          a += b--;\n        return x + identity(a + b);\n      }(0);\n      return a + b + c + d + e;\n    }\n\n    int\n    test3()\n    {\n      const auto nullary = [](){ return 0; };\n      const auto unary = [](int x){ return x; };\n      using nullary_t = decltype(nullary);\n      using unary_t = decltype(unary);\n      const auto higher1st = [](nullary_t f){ return f(); };\n      const auto higher2nd = [unary](nullary_t f1){\n        return [unary, f1](unary_t f2){ return f2(unary(f1())); };\n      };\n      return higher1st(nullary) + higher2nd(nullary)(unary);\n    }\n\n  }\n\n  namespace test_variadic_templates\n  {\n\n    template <int...>\n    struct sum;\n\n    template <int N0, int... N1toN>\n    struct sum<N0, N1toN...>\n    {\n      static constexpr auto value = N0 + sum<N1toN...>::value;\n    };\n\n    template <>\n    struct sum<>\n    {\n      static constexpr auto value = 0;\n    };\n\n    static_assert(sum<>::value == 0, \"\");\n    static_assert(sum<1>::value == 1, \"\");\n    static_assert(sum<23>::value == 23, \"\");\n    static_assert(sum<1, 2>::value == 3, \"\");\n    static_assert(sum<5, 5, 11>::value == 21, \"\");\n    static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, \"\");\n\n  }\n\n  // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae\n  // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function\n  // because of this.\n  namespace test_template_alias_sfinae\n  {\n\n    struct foo {};\n\n    template<typename T>\n    using member = typename T::member_type;\n\n    template<typename T>\n    void func(...) {}\n\n    template<typename T>\n    void func(member<T>*) {}\n\n    void test();\n\n    void test() { func<foo>(0); }\n\n  }\n\n}  // namespace cxx11\n\n#endif  // __cplusplus >= 201103L\n\n\n\n\n// If the compiler admits that it is not ready for C++14, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif __cplusplus < 201402L && !defined _MSC_VER\n\n#error \"This is not a C++14 compiler\"\n\n#else\n\nnamespace cxx14\n{\n\n  namespace test_polymorphic_lambdas\n  {\n\n    int\n    test()\n    {\n      const auto lambda = [](auto&&... args){\n        const auto istiny = [](auto x){\n          return (sizeof(x) == 1UL) ? 1 : 0;\n        };\n        const int aretiny[] = { istiny(args)... };\n        return aretiny[0];\n      };\n      return lambda(1, 1L, 1.0f, '1');\n    }\n\n  }\n\n  namespace test_binary_literals\n  {\n\n    constexpr auto ivii = 0b0000000000101010;\n    static_assert(ivii == 42, \"wrong value\");\n\n  }\n\n  namespace test_generalized_constexpr\n  {\n\n    template < typename CharT >\n    constexpr unsigned long\n    strlen_c(const CharT *const s) noexcept\n    {\n      auto length = 0UL;\n      for (auto p = s; *p; ++p)\n        ++length;\n      return length;\n    }\n\n    static_assert(strlen_c(\"\") == 0UL, \"\");\n    static_assert(strlen_c(\"x\") == 1UL, \"\");\n    static_assert(strlen_c(\"test\") == 4UL, \"\");\n    static_assert(strlen_c(\"another\\0test\") == 7UL, \"\");\n\n  }\n\n  namespace test_lambda_init_capture\n  {\n\n    int\n    test()\n    {\n      auto x = 0;\n      const auto lambda1 = [a = x](int b){ return a + b; };\n      const auto lambda2 = [a = lambda1(x)](){ return a; };\n      return lambda2();\n    }\n\n  }\n\n  namespace test_digit_separators\n  {\n\n    constexpr auto ten_million = 100'000'000;\n    static_assert(ten_million == 100000000, \"\");\n\n  }\n\n  namespace test_return_type_deduction\n  {\n\n    auto f(int& x) { return x; }\n    decltype(auto) g(int& x) { return x; }\n\n    template < typename T1, typename T2 >\n    struct is_same\n    {\n      static constexpr auto value = false;\n    };\n\n    template < typename T >\n    struct is_same<T, T>\n    {\n      static constexpr auto value = true;\n    };\n\n    int\n    test()\n    {\n      auto x = 0;\n      static_assert(is_same<int, decltype(f(x))>::value, \"\");\n      static_assert(is_same<int&, decltype(g(x))>::value, \"\");\n      return x;\n    }\n\n  }\n\n}  // namespace cxx14\n\n#endif  // __cplusplus >= 201402L\n\n\n\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"\nthen :\n  eval $cachevar=yes\nelse case e in #(\n  e) eval $cachevar=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\n           CXX=\"$ac_save_CXX\" ;;\nesac\nfi\neval ac_res=\\$$cachevar\n\t       { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\nprintf \"%s\\n\" \"$ac_res\" >&6; }\n        if eval test x\\$$cachevar = xyes; then\n          CXX=\"$CXX $switch\"\n          if test -n \"$CXXCPP\" ; then\n            CXXCPP=\"$CXXCPP $switch\"\n          fi\n          ac_success=yes\n          break\n        fi\n      done\n      if test x$ac_success = xyes; then\n        break\n      fi\n    done\n  fi\n  ac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n  if test x$ax_cxx_compile_cxx14_required = xtrue; then\n    if test x$ac_success = xno; then\n      as_fn_error $? \"*** A compiler with support for C++14 language features is required.\" \"$LINENO\" 5\n    fi\n  fi\n  if test x$ac_success = xno; then\n    HAVE_CXX14=0\n    { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: No compiler with C++14 support was found\" >&5\nprintf \"%s\\n\" \"$as_me: No compiler with C++14 support was found\" >&6;}\n  else\n    HAVE_CXX14=1\n\nprintf \"%s\\n\" \"#define HAVE_CXX14 1\" >>confdefs.h\n\n  fi\n\n\n    if test \"$HAVE_CXX14\" = \"1\";\n    then\n       PBX_CXX14=1\n    fi\n\n    if test \"${ENABLE_LATEST_CXX_STD}\" != \"yes\" ; then\n        CXX=\"${ast_cxx_check_std_save_CXX}\"\n        CXXCPP=\"${ast_cxx_check_std_save_CXXCPP}\"\n    fi\n\n\n    PBX_CXX17=0\n    if test \"${ENABLE_LATEST_CXX_STD}\" != \"yes\" ; then\n        ast_cxx_check_std_save_CXX=\"${CXX}\"\n        ast_cxx_check_std_save_CXXCPP=\"${CXXCPP}\"\n    fi\n      ax_cxx_compile_alternatives=\"17 1z\"    ax_cxx_compile_cxx17_required=false\n  ac_ext=cpp\nac_cpp='$CXXCPP $CPPFLAGS'\nac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n  ac_success=no\n\n      { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether $CXX supports C++17 features by default\" >&5\nprintf %s \"checking whether $CXX supports C++17 features by default... \" >&6; }\nif test ${ax_cv_cxx_compile_cxx17+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n\n// If the compiler admits that it is not ready for C++11, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n// MSVC always sets __cplusplus to 199711L in older versions; newer versions\n// only set it correctly if /Zc:__cplusplus is specified as well as a\n// /std:c++NN switch:\n//\n// https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-__cplusplus/\n//\n// The value __cplusplus ought to have is available in _MSVC_LANG since\n// Visual Studio 2015 Update 3:\n//\n// https://learn.microsoft.com/en-us/cpp/preprocessor/predefined-macros\n//\n// This was also the first MSVC version to support C++14 so we can't use the\n// value of either __cplusplus or _MSVC_LANG to quickly rule out MSVC having\n// C++11 or C++14 support, but we can check _MSVC_LANG for C++17 and later.\n#elif __cplusplus < 201103L && !defined _MSC_VER\n\n#error \"This is not a C++11 compiler\"\n\n#else\n\nnamespace cxx11\n{\n\n  namespace test_static_assert\n  {\n\n    template <typename T>\n    struct check\n    {\n      static_assert(sizeof(int) <= sizeof(T), \"not big enough\");\n    };\n\n  }\n\n  namespace test_final_override\n  {\n\n    struct Base\n    {\n      virtual ~Base() {}\n      virtual void f() {}\n    };\n\n    struct Derived : public Base\n    {\n      virtual ~Derived() override {}\n      virtual void f() override {}\n    };\n\n  }\n\n  namespace test_double_right_angle_brackets\n  {\n\n    template < typename T >\n    struct check {};\n\n    typedef check<void> single_type;\n    typedef check<check<void>> double_type;\n    typedef check<check<check<void>>> triple_type;\n    typedef check<check<check<check<void>>>> quadruple_type;\n\n  }\n\n  namespace test_decltype\n  {\n\n    int\n    f()\n    {\n      int a = 1;\n      decltype(a) b = 2;\n      return a + b;\n    }\n\n  }\n\n  namespace test_type_deduction\n  {\n\n    template < typename T1, typename T2 >\n    struct is_same\n    {\n      static const bool value = false;\n    };\n\n    template < typename T >\n    struct is_same<T, T>\n    {\n      static const bool value = true;\n    };\n\n    template < typename T1, typename T2 >\n    auto\n    add(T1 a1, T2 a2) -> decltype(a1 + a2)\n    {\n      return a1 + a2;\n    }\n\n    int\n    test(const int c, volatile int v)\n    {\n      static_assert(is_same<int, decltype(0)>::value == true, \"\");\n      static_assert(is_same<int, decltype(c)>::value == false, \"\");\n      static_assert(is_same<int, decltype(v)>::value == false, \"\");\n      auto ac = c;\n      auto av = v;\n      auto sumi = ac + av + 'x';\n      auto sumf = ac + av + 1.0;\n      static_assert(is_same<int, decltype(ac)>::value == true, \"\");\n      static_assert(is_same<int, decltype(av)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumi)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumf)>::value == false, \"\");\n      static_assert(is_same<int, decltype(add(c, v))>::value == true, \"\");\n      return (sumf > 0.0) ? sumi : add(c, v);\n    }\n\n  }\n\n  namespace test_noexcept\n  {\n\n    int f() { return 0; }\n    int g() noexcept { return 0; }\n\n    static_assert(noexcept(f()) == false, \"\");\n    static_assert(noexcept(g()) == true, \"\");\n\n  }\n\n  namespace test_constexpr\n  {\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c_r(const CharT *const s, const unsigned long acc) noexcept\n    {\n      return *s ? strlen_c_r(s + 1, acc + 1) : acc;\n    }\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c(const CharT *const s) noexcept\n    {\n      return strlen_c_r(s, 0UL);\n    }\n\n    static_assert(strlen_c(\"\") == 0UL, \"\");\n    static_assert(strlen_c(\"1\") == 1UL, \"\");\n    static_assert(strlen_c(\"example\") == 7UL, \"\");\n    static_assert(strlen_c(\"another\\0example\") == 7UL, \"\");\n\n  }\n\n  namespace test_rvalue_references\n  {\n\n    template < int N >\n    struct answer\n    {\n      static constexpr int value = N;\n    };\n\n    answer<1> f(int&)       { return answer<1>(); }\n    answer<2> f(const int&) { return answer<2>(); }\n    answer<3> f(int&&)      { return answer<3>(); }\n\n    void\n    test()\n    {\n      int i = 0;\n      const int c = 0;\n      static_assert(decltype(f(i))::value == 1, \"\");\n      static_assert(decltype(f(c))::value == 2, \"\");\n      static_assert(decltype(f(0))::value == 3, \"\");\n    }\n\n  }\n\n  namespace test_uniform_initialization\n  {\n\n    struct test\n    {\n      static const int zero {};\n      static const int one {1};\n    };\n\n    static_assert(test::zero == 0, \"\");\n    static_assert(test::one == 1, \"\");\n\n  }\n\n  namespace test_lambdas\n  {\n\n    void\n    test1()\n    {\n      auto lambda1 = [](){};\n      auto lambda2 = lambda1;\n      lambda1();\n      lambda2();\n    }\n\n    int\n    test2()\n    {\n      auto a = [](int i, int j){ return i + j; }(1, 2);\n      auto b = []() -> int { return '0'; }();\n      auto c = [=](){ return a + b; }();\n      auto d = [&](){ return c; }();\n      auto e = [a, &b](int x) mutable {\n        const auto identity = [](int y){ return y; };\n        for (auto i = 0; i < a; ++i)\n          a += b--;\n        return x + identity(a + b);\n      }(0);\n      return a + b + c + d + e;\n    }\n\n    int\n    test3()\n    {\n      const auto nullary = [](){ return 0; };\n      const auto unary = [](int x){ return x; };\n      using nullary_t = decltype(nullary);\n      using unary_t = decltype(unary);\n      const auto higher1st = [](nullary_t f){ return f(); };\n      const auto higher2nd = [unary](nullary_t f1){\n        return [unary, f1](unary_t f2){ return f2(unary(f1())); };\n      };\n      return higher1st(nullary) + higher2nd(nullary)(unary);\n    }\n\n  }\n\n  namespace test_variadic_templates\n  {\n\n    template <int...>\n    struct sum;\n\n    template <int N0, int... N1toN>\n    struct sum<N0, N1toN...>\n    {\n      static constexpr auto value = N0 + sum<N1toN...>::value;\n    };\n\n    template <>\n    struct sum<>\n    {\n      static constexpr auto value = 0;\n    };\n\n    static_assert(sum<>::value == 0, \"\");\n    static_assert(sum<1>::value == 1, \"\");\n    static_assert(sum<23>::value == 23, \"\");\n    static_assert(sum<1, 2>::value == 3, \"\");\n    static_assert(sum<5, 5, 11>::value == 21, \"\");\n    static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, \"\");\n\n  }\n\n  // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae\n  // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function\n  // because of this.\n  namespace test_template_alias_sfinae\n  {\n\n    struct foo {};\n\n    template<typename T>\n    using member = typename T::member_type;\n\n    template<typename T>\n    void func(...) {}\n\n    template<typename T>\n    void func(member<T>*) {}\n\n    void test();\n\n    void test() { func<foo>(0); }\n\n  }\n\n}  // namespace cxx11\n\n#endif  // __cplusplus >= 201103L\n\n\n\n\n// If the compiler admits that it is not ready for C++14, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif __cplusplus < 201402L && !defined _MSC_VER\n\n#error \"This is not a C++14 compiler\"\n\n#else\n\nnamespace cxx14\n{\n\n  namespace test_polymorphic_lambdas\n  {\n\n    int\n    test()\n    {\n      const auto lambda = [](auto&&... args){\n        const auto istiny = [](auto x){\n          return (sizeof(x) == 1UL) ? 1 : 0;\n        };\n        const int aretiny[] = { istiny(args)... };\n        return aretiny[0];\n      };\n      return lambda(1, 1L, 1.0f, '1');\n    }\n\n  }\n\n  namespace test_binary_literals\n  {\n\n    constexpr auto ivii = 0b0000000000101010;\n    static_assert(ivii == 42, \"wrong value\");\n\n  }\n\n  namespace test_generalized_constexpr\n  {\n\n    template < typename CharT >\n    constexpr unsigned long\n    strlen_c(const CharT *const s) noexcept\n    {\n      auto length = 0UL;\n      for (auto p = s; *p; ++p)\n        ++length;\n      return length;\n    }\n\n    static_assert(strlen_c(\"\") == 0UL, \"\");\n    static_assert(strlen_c(\"x\") == 1UL, \"\");\n    static_assert(strlen_c(\"test\") == 4UL, \"\");\n    static_assert(strlen_c(\"another\\0test\") == 7UL, \"\");\n\n  }\n\n  namespace test_lambda_init_capture\n  {\n\n    int\n    test()\n    {\n      auto x = 0;\n      const auto lambda1 = [a = x](int b){ return a + b; };\n      const auto lambda2 = [a = lambda1(x)](){ return a; };\n      return lambda2();\n    }\n\n  }\n\n  namespace test_digit_separators\n  {\n\n    constexpr auto ten_million = 100'000'000;\n    static_assert(ten_million == 100000000, \"\");\n\n  }\n\n  namespace test_return_type_deduction\n  {\n\n    auto f(int& x) { return x; }\n    decltype(auto) g(int& x) { return x; }\n\n    template < typename T1, typename T2 >\n    struct is_same\n    {\n      static constexpr auto value = false;\n    };\n\n    template < typename T >\n    struct is_same<T, T>\n    {\n      static constexpr auto value = true;\n    };\n\n    int\n    test()\n    {\n      auto x = 0;\n      static_assert(is_same<int, decltype(f(x))>::value, \"\");\n      static_assert(is_same<int&, decltype(g(x))>::value, \"\");\n      return x;\n    }\n\n  }\n\n}  // namespace cxx14\n\n#endif  // __cplusplus >= 201402L\n\n\n\n\n// If the compiler admits that it is not ready for C++17, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 201703L\n\n#error \"This is not a C++17 compiler\"\n\n#else\n\n#include <initializer_list>\n#include <utility>\n#include <type_traits>\n\nnamespace cxx17\n{\n\n  namespace test_constexpr_lambdas\n  {\n\n    constexpr int foo = [](){return 42;}();\n\n  }\n\n  namespace test::nested_namespace::definitions\n  {\n\n  }\n\n  namespace test_fold_expression\n  {\n\n    template<typename... Args>\n    int multiply(Args... args)\n    {\n      return (args * ... * 1);\n    }\n\n    template<typename... Args>\n    bool all(Args... args)\n    {\n      return (args && ...);\n    }\n\n  }\n\n  namespace test_extended_static_assert\n  {\n\n    static_assert (true);\n\n  }\n\n  namespace test_auto_brace_init_list\n  {\n\n    auto foo = {5};\n    auto bar {5};\n\n    static_assert(std::is_same<std::initializer_list<int>, decltype(foo)>::value);\n    static_assert(std::is_same<int, decltype(bar)>::value);\n  }\n\n  namespace test_typename_in_template_template_parameter\n  {\n\n    template<template<typename> typename X> struct D;\n\n  }\n\n  namespace test_fallthrough_nodiscard_maybe_unused_attributes\n  {\n\n    int f1()\n    {\n      return 42;\n    }\n\n    [[nodiscard]] int f2()\n    {\n      [[maybe_unused]] auto unused = f1();\n\n      switch (f1())\n      {\n      case 17:\n        f1();\n        [[fallthrough]];\n      case 42:\n        f1();\n      }\n      return f1();\n    }\n\n  }\n\n  namespace test_extended_aggregate_initialization\n  {\n\n    struct base1\n    {\n      int b1, b2 = 42;\n    };\n\n    struct base2\n    {\n      base2() {\n        b3 = 42;\n      }\n      int b3;\n    };\n\n    struct derived : base1, base2\n    {\n        int d;\n    };\n\n    derived d1 {{1, 2}, {}, 4};  // full initialization\n    derived d2 {{}, {}, 4};      // value-initialized bases\n\n  }\n\n  namespace test_general_range_based_for_loop\n  {\n\n    struct iter\n    {\n      int i;\n\n      int& operator* ()\n      {\n        return i;\n      }\n\n      const int& operator* () const\n      {\n        return i;\n      }\n\n      iter& operator++()\n      {\n        ++i;\n        return *this;\n      }\n    };\n\n    struct sentinel\n    {\n      int i;\n    };\n\n    bool operator== (const iter& i, const sentinel& s)\n    {\n      return i.i == s.i;\n    }\n\n    bool operator!= (const iter& i, const sentinel& s)\n    {\n      return !(i == s);\n    }\n\n    struct range\n    {\n      iter begin() const\n      {\n        return {0};\n      }\n\n      sentinel end() const\n      {\n        return {5};\n      }\n    };\n\n    void f()\n    {\n      range r {};\n\n      for (auto i : r)\n      {\n        [[maybe_unused]] auto v = i;\n      }\n    }\n\n  }\n\n  namespace test_lambda_capture_asterisk_this_by_value\n  {\n\n    struct t\n    {\n      int i;\n      int foo()\n      {\n        return [*this]()\n        {\n          return i;\n        }();\n      }\n    };\n\n  }\n\n  namespace test_enum_class_construction\n  {\n\n    enum class byte : unsigned char\n    {};\n\n    byte foo {42};\n\n  }\n\n  namespace test_constexpr_if\n  {\n\n    template <bool cond>\n    int f ()\n    {\n      if constexpr(cond)\n      {\n        return 13;\n      }\n      else\n      {\n        return 42;\n      }\n    }\n\n  }\n\n  namespace test_selection_statement_with_initializer\n  {\n\n    int f()\n    {\n      return 13;\n    }\n\n    int f2()\n    {\n      if (auto i = f(); i > 0)\n      {\n        return 3;\n      }\n\n      switch (auto i = f(); i + 4)\n      {\n      case 17:\n        return 2;\n\n      default:\n        return 1;\n      }\n    }\n\n  }\n\n  namespace test_template_argument_deduction_for_class_templates\n  {\n\n    template <typename T1, typename T2>\n    struct pair\n    {\n      pair (T1 p1, T2 p2)\n        : m1 {p1},\n          m2 {p2}\n      {}\n\n      T1 m1;\n      T2 m2;\n    };\n\n    void f()\n    {\n      [[maybe_unused]] auto p = pair{13, 42u};\n    }\n\n  }\n\n  namespace test_non_type_auto_template_parameters\n  {\n\n    template <auto n>\n    struct B\n    {};\n\n    B<5> b1;\n    B<'a'> b2;\n\n  }\n\n  namespace test_structured_bindings\n  {\n\n    int arr[2] = { 1, 2 };\n    std::pair<int, int> pr = { 1, 2 };\n\n    auto f1() -> int(&)[2]\n    {\n      return arr;\n    }\n\n    auto f2() -> std::pair<int, int>&\n    {\n      return pr;\n    }\n\n    struct S\n    {\n      int x1 : 2;\n      volatile double y1;\n    };\n\n    S f3()\n    {\n      return {};\n    }\n\n    auto [ x1, y1 ] = f1();\n    auto& [ xr1, yr1 ] = f1();\n    auto [ x2, y2 ] = f2();\n    auto& [ xr2, yr2 ] = f2();\n    const auto [ x3, y3 ] = f3();\n\n  }\n\n  namespace test_exception_spec_type_system\n  {\n\n    struct Good {};\n    struct Bad {};\n\n    void g1() noexcept;\n    void g2();\n\n    template<typename T>\n    Bad\n    f(T*, T*);\n\n    template<typename T1, typename T2>\n    Good\n    f(T1*, T2*);\n\n    static_assert (std::is_same_v<Good, decltype(f(g1, g2))>);\n\n  }\n\n  namespace test_inline_variables\n  {\n\n    template<class T> void f(T)\n    {}\n\n    template<class T> inline T g(T)\n    {\n      return T{};\n    }\n\n    template<> inline void f<>(int)\n    {}\n\n    template<> int g<>(int)\n    {\n      return 5;\n    }\n\n  }\n\n}  // namespace cxx17\n\n#endif  // (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 201703L\n\n\n\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"\nthen :\n  ax_cv_cxx_compile_cxx17=yes\nelse case e in #(\n  e) ax_cv_cxx_compile_cxx17=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ax_cv_cxx_compile_cxx17\" >&5\nprintf \"%s\\n\" \"$ax_cv_cxx_compile_cxx17\" >&6; }\n    if test x$ax_cv_cxx_compile_cxx17 = xyes; then\n      ac_success=yes\n    fi\n\n    if test x$ac_success = xno; then\n    for alternative in ${ax_cxx_compile_alternatives}; do\n      switch=\"-std=gnu++${alternative}\"\n      cachevar=`printf \"%s\\n\" \"ax_cv_cxx_compile_cxx17_$switch\" | sed \"$as_sed_sh\"`\n      { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether $CXX supports C++17 features with $switch\" >&5\nprintf %s \"checking whether $CXX supports C++17 features with $switch... \" >&6; }\nif eval test \\${$cachevar+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_save_CXX=\"$CXX\"\n         CXX=\"$CXX $switch\"\n         cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n\n// If the compiler admits that it is not ready for C++11, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n// MSVC always sets __cplusplus to 199711L in older versions; newer versions\n// only set it correctly if /Zc:__cplusplus is specified as well as a\n// /std:c++NN switch:\n//\n// https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-__cplusplus/\n//\n// The value __cplusplus ought to have is available in _MSVC_LANG since\n// Visual Studio 2015 Update 3:\n//\n// https://learn.microsoft.com/en-us/cpp/preprocessor/predefined-macros\n//\n// This was also the first MSVC version to support C++14 so we can't use the\n// value of either __cplusplus or _MSVC_LANG to quickly rule out MSVC having\n// C++11 or C++14 support, but we can check _MSVC_LANG for C++17 and later.\n#elif __cplusplus < 201103L && !defined _MSC_VER\n\n#error \"This is not a C++11 compiler\"\n\n#else\n\nnamespace cxx11\n{\n\n  namespace test_static_assert\n  {\n\n    template <typename T>\n    struct check\n    {\n      static_assert(sizeof(int) <= sizeof(T), \"not big enough\");\n    };\n\n  }\n\n  namespace test_final_override\n  {\n\n    struct Base\n    {\n      virtual ~Base() {}\n      virtual void f() {}\n    };\n\n    struct Derived : public Base\n    {\n      virtual ~Derived() override {}\n      virtual void f() override {}\n    };\n\n  }\n\n  namespace test_double_right_angle_brackets\n  {\n\n    template < typename T >\n    struct check {};\n\n    typedef check<void> single_type;\n    typedef check<check<void>> double_type;\n    typedef check<check<check<void>>> triple_type;\n    typedef check<check<check<check<void>>>> quadruple_type;\n\n  }\n\n  namespace test_decltype\n  {\n\n    int\n    f()\n    {\n      int a = 1;\n      decltype(a) b = 2;\n      return a + b;\n    }\n\n  }\n\n  namespace test_type_deduction\n  {\n\n    template < typename T1, typename T2 >\n    struct is_same\n    {\n      static const bool value = false;\n    };\n\n    template < typename T >\n    struct is_same<T, T>\n    {\n      static const bool value = true;\n    };\n\n    template < typename T1, typename T2 >\n    auto\n    add(T1 a1, T2 a2) -> decltype(a1 + a2)\n    {\n      return a1 + a2;\n    }\n\n    int\n    test(const int c, volatile int v)\n    {\n      static_assert(is_same<int, decltype(0)>::value == true, \"\");\n      static_assert(is_same<int, decltype(c)>::value == false, \"\");\n      static_assert(is_same<int, decltype(v)>::value == false, \"\");\n      auto ac = c;\n      auto av = v;\n      auto sumi = ac + av + 'x';\n      auto sumf = ac + av + 1.0;\n      static_assert(is_same<int, decltype(ac)>::value == true, \"\");\n      static_assert(is_same<int, decltype(av)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumi)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumf)>::value == false, \"\");\n      static_assert(is_same<int, decltype(add(c, v))>::value == true, \"\");\n      return (sumf > 0.0) ? sumi : add(c, v);\n    }\n\n  }\n\n  namespace test_noexcept\n  {\n\n    int f() { return 0; }\n    int g() noexcept { return 0; }\n\n    static_assert(noexcept(f()) == false, \"\");\n    static_assert(noexcept(g()) == true, \"\");\n\n  }\n\n  namespace test_constexpr\n  {\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c_r(const CharT *const s, const unsigned long acc) noexcept\n    {\n      return *s ? strlen_c_r(s + 1, acc + 1) : acc;\n    }\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c(const CharT *const s) noexcept\n    {\n      return strlen_c_r(s, 0UL);\n    }\n\n    static_assert(strlen_c(\"\") == 0UL, \"\");\n    static_assert(strlen_c(\"1\") == 1UL, \"\");\n    static_assert(strlen_c(\"example\") == 7UL, \"\");\n    static_assert(strlen_c(\"another\\0example\") == 7UL, \"\");\n\n  }\n\n  namespace test_rvalue_references\n  {\n\n    template < int N >\n    struct answer\n    {\n      static constexpr int value = N;\n    };\n\n    answer<1> f(int&)       { return answer<1>(); }\n    answer<2> f(const int&) { return answer<2>(); }\n    answer<3> f(int&&)      { return answer<3>(); }\n\n    void\n    test()\n    {\n      int i = 0;\n      const int c = 0;\n      static_assert(decltype(f(i))::value == 1, \"\");\n      static_assert(decltype(f(c))::value == 2, \"\");\n      static_assert(decltype(f(0))::value == 3, \"\");\n    }\n\n  }\n\n  namespace test_uniform_initialization\n  {\n\n    struct test\n    {\n      static const int zero {};\n      static const int one {1};\n    };\n\n    static_assert(test::zero == 0, \"\");\n    static_assert(test::one == 1, \"\");\n\n  }\n\n  namespace test_lambdas\n  {\n\n    void\n    test1()\n    {\n      auto lambda1 = [](){};\n      auto lambda2 = lambda1;\n      lambda1();\n      lambda2();\n    }\n\n    int\n    test2()\n    {\n      auto a = [](int i, int j){ return i + j; }(1, 2);\n      auto b = []() -> int { return '0'; }();\n      auto c = [=](){ return a + b; }();\n      auto d = [&](){ return c; }();\n      auto e = [a, &b](int x) mutable {\n        const auto identity = [](int y){ return y; };\n        for (auto i = 0; i < a; ++i)\n          a += b--;\n        return x + identity(a + b);\n      }(0);\n      return a + b + c + d + e;\n    }\n\n    int\n    test3()\n    {\n      const auto nullary = [](){ return 0; };\n      const auto unary = [](int x){ return x; };\n      using nullary_t = decltype(nullary);\n      using unary_t = decltype(unary);\n      const auto higher1st = [](nullary_t f){ return f(); };\n      const auto higher2nd = [unary](nullary_t f1){\n        return [unary, f1](unary_t f2){ return f2(unary(f1())); };\n      };\n      return higher1st(nullary) + higher2nd(nullary)(unary);\n    }\n\n  }\n\n  namespace test_variadic_templates\n  {\n\n    template <int...>\n    struct sum;\n\n    template <int N0, int... N1toN>\n    struct sum<N0, N1toN...>\n    {\n      static constexpr auto value = N0 + sum<N1toN...>::value;\n    };\n\n    template <>\n    struct sum<>\n    {\n      static constexpr auto value = 0;\n    };\n\n    static_assert(sum<>::value == 0, \"\");\n    static_assert(sum<1>::value == 1, \"\");\n    static_assert(sum<23>::value == 23, \"\");\n    static_assert(sum<1, 2>::value == 3, \"\");\n    static_assert(sum<5, 5, 11>::value == 21, \"\");\n    static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, \"\");\n\n  }\n\n  // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae\n  // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function\n  // because of this.\n  namespace test_template_alias_sfinae\n  {\n\n    struct foo {};\n\n    template<typename T>\n    using member = typename T::member_type;\n\n    template<typename T>\n    void func(...) {}\n\n    template<typename T>\n    void func(member<T>*) {}\n\n    void test();\n\n    void test() { func<foo>(0); }\n\n  }\n\n}  // namespace cxx11\n\n#endif  // __cplusplus >= 201103L\n\n\n\n\n// If the compiler admits that it is not ready for C++14, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif __cplusplus < 201402L && !defined _MSC_VER\n\n#error \"This is not a C++14 compiler\"\n\n#else\n\nnamespace cxx14\n{\n\n  namespace test_polymorphic_lambdas\n  {\n\n    int\n    test()\n    {\n      const auto lambda = [](auto&&... args){\n        const auto istiny = [](auto x){\n          return (sizeof(x) == 1UL) ? 1 : 0;\n        };\n        const int aretiny[] = { istiny(args)... };\n        return aretiny[0];\n      };\n      return lambda(1, 1L, 1.0f, '1');\n    }\n\n  }\n\n  namespace test_binary_literals\n  {\n\n    constexpr auto ivii = 0b0000000000101010;\n    static_assert(ivii == 42, \"wrong value\");\n\n  }\n\n  namespace test_generalized_constexpr\n  {\n\n    template < typename CharT >\n    constexpr unsigned long\n    strlen_c(const CharT *const s) noexcept\n    {\n      auto length = 0UL;\n      for (auto p = s; *p; ++p)\n        ++length;\n      return length;\n    }\n\n    static_assert(strlen_c(\"\") == 0UL, \"\");\n    static_assert(strlen_c(\"x\") == 1UL, \"\");\n    static_assert(strlen_c(\"test\") == 4UL, \"\");\n    static_assert(strlen_c(\"another\\0test\") == 7UL, \"\");\n\n  }\n\n  namespace test_lambda_init_capture\n  {\n\n    int\n    test()\n    {\n      auto x = 0;\n      const auto lambda1 = [a = x](int b){ return a + b; };\n      const auto lambda2 = [a = lambda1(x)](){ return a; };\n      return lambda2();\n    }\n\n  }\n\n  namespace test_digit_separators\n  {\n\n    constexpr auto ten_million = 100'000'000;\n    static_assert(ten_million == 100000000, \"\");\n\n  }\n\n  namespace test_return_type_deduction\n  {\n\n    auto f(int& x) { return x; }\n    decltype(auto) g(int& x) { return x; }\n\n    template < typename T1, typename T2 >\n    struct is_same\n    {\n      static constexpr auto value = false;\n    };\n\n    template < typename T >\n    struct is_same<T, T>\n    {\n      static constexpr auto value = true;\n    };\n\n    int\n    test()\n    {\n      auto x = 0;\n      static_assert(is_same<int, decltype(f(x))>::value, \"\");\n      static_assert(is_same<int&, decltype(g(x))>::value, \"\");\n      return x;\n    }\n\n  }\n\n}  // namespace cxx14\n\n#endif  // __cplusplus >= 201402L\n\n\n\n\n// If the compiler admits that it is not ready for C++17, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 201703L\n\n#error \"This is not a C++17 compiler\"\n\n#else\n\n#include <initializer_list>\n#include <utility>\n#include <type_traits>\n\nnamespace cxx17\n{\n\n  namespace test_constexpr_lambdas\n  {\n\n    constexpr int foo = [](){return 42;}();\n\n  }\n\n  namespace test::nested_namespace::definitions\n  {\n\n  }\n\n  namespace test_fold_expression\n  {\n\n    template<typename... Args>\n    int multiply(Args... args)\n    {\n      return (args * ... * 1);\n    }\n\n    template<typename... Args>\n    bool all(Args... args)\n    {\n      return (args && ...);\n    }\n\n  }\n\n  namespace test_extended_static_assert\n  {\n\n    static_assert (true);\n\n  }\n\n  namespace test_auto_brace_init_list\n  {\n\n    auto foo = {5};\n    auto bar {5};\n\n    static_assert(std::is_same<std::initializer_list<int>, decltype(foo)>::value);\n    static_assert(std::is_same<int, decltype(bar)>::value);\n  }\n\n  namespace test_typename_in_template_template_parameter\n  {\n\n    template<template<typename> typename X> struct D;\n\n  }\n\n  namespace test_fallthrough_nodiscard_maybe_unused_attributes\n  {\n\n    int f1()\n    {\n      return 42;\n    }\n\n    [[nodiscard]] int f2()\n    {\n      [[maybe_unused]] auto unused = f1();\n\n      switch (f1())\n      {\n      case 17:\n        f1();\n        [[fallthrough]];\n      case 42:\n        f1();\n      }\n      return f1();\n    }\n\n  }\n\n  namespace test_extended_aggregate_initialization\n  {\n\n    struct base1\n    {\n      int b1, b2 = 42;\n    };\n\n    struct base2\n    {\n      base2() {\n        b3 = 42;\n      }\n      int b3;\n    };\n\n    struct derived : base1, base2\n    {\n        int d;\n    };\n\n    derived d1 {{1, 2}, {}, 4};  // full initialization\n    derived d2 {{}, {}, 4};      // value-initialized bases\n\n  }\n\n  namespace test_general_range_based_for_loop\n  {\n\n    struct iter\n    {\n      int i;\n\n      int& operator* ()\n      {\n        return i;\n      }\n\n      const int& operator* () const\n      {\n        return i;\n      }\n\n      iter& operator++()\n      {\n        ++i;\n        return *this;\n      }\n    };\n\n    struct sentinel\n    {\n      int i;\n    };\n\n    bool operator== (const iter& i, const sentinel& s)\n    {\n      return i.i == s.i;\n    }\n\n    bool operator!= (const iter& i, const sentinel& s)\n    {\n      return !(i == s);\n    }\n\n    struct range\n    {\n      iter begin() const\n      {\n        return {0};\n      }\n\n      sentinel end() const\n      {\n        return {5};\n      }\n    };\n\n    void f()\n    {\n      range r {};\n\n      for (auto i : r)\n      {\n        [[maybe_unused]] auto v = i;\n      }\n    }\n\n  }\n\n  namespace test_lambda_capture_asterisk_this_by_value\n  {\n\n    struct t\n    {\n      int i;\n      int foo()\n      {\n        return [*this]()\n        {\n          return i;\n        }();\n      }\n    };\n\n  }\n\n  namespace test_enum_class_construction\n  {\n\n    enum class byte : unsigned char\n    {};\n\n    byte foo {42};\n\n  }\n\n  namespace test_constexpr_if\n  {\n\n    template <bool cond>\n    int f ()\n    {\n      if constexpr(cond)\n      {\n        return 13;\n      }\n      else\n      {\n        return 42;\n      }\n    }\n\n  }\n\n  namespace test_selection_statement_with_initializer\n  {\n\n    int f()\n    {\n      return 13;\n    }\n\n    int f2()\n    {\n      if (auto i = f(); i > 0)\n      {\n        return 3;\n      }\n\n      switch (auto i = f(); i + 4)\n      {\n      case 17:\n        return 2;\n\n      default:\n        return 1;\n      }\n    }\n\n  }\n\n  namespace test_template_argument_deduction_for_class_templates\n  {\n\n    template <typename T1, typename T2>\n    struct pair\n    {\n      pair (T1 p1, T2 p2)\n        : m1 {p1},\n          m2 {p2}\n      {}\n\n      T1 m1;\n      T2 m2;\n    };\n\n    void f()\n    {\n      [[maybe_unused]] auto p = pair{13, 42u};\n    }\n\n  }\n\n  namespace test_non_type_auto_template_parameters\n  {\n\n    template <auto n>\n    struct B\n    {};\n\n    B<5> b1;\n    B<'a'> b2;\n\n  }\n\n  namespace test_structured_bindings\n  {\n\n    int arr[2] = { 1, 2 };\n    std::pair<int, int> pr = { 1, 2 };\n\n    auto f1() -> int(&)[2]\n    {\n      return arr;\n    }\n\n    auto f2() -> std::pair<int, int>&\n    {\n      return pr;\n    }\n\n    struct S\n    {\n      int x1 : 2;\n      volatile double y1;\n    };\n\n    S f3()\n    {\n      return {};\n    }\n\n    auto [ x1, y1 ] = f1();\n    auto& [ xr1, yr1 ] = f1();\n    auto [ x2, y2 ] = f2();\n    auto& [ xr2, yr2 ] = f2();\n    const auto [ x3, y3 ] = f3();\n\n  }\n\n  namespace test_exception_spec_type_system\n  {\n\n    struct Good {};\n    struct Bad {};\n\n    void g1() noexcept;\n    void g2();\n\n    template<typename T>\n    Bad\n    f(T*, T*);\n\n    template<typename T1, typename T2>\n    Good\n    f(T1*, T2*);\n\n    static_assert (std::is_same_v<Good, decltype(f(g1, g2))>);\n\n  }\n\n  namespace test_inline_variables\n  {\n\n    template<class T> void f(T)\n    {}\n\n    template<class T> inline T g(T)\n    {\n      return T{};\n    }\n\n    template<> inline void f<>(int)\n    {}\n\n    template<> int g<>(int)\n    {\n      return 5;\n    }\n\n  }\n\n}  // namespace cxx17\n\n#endif  // (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 201703L\n\n\n\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"\nthen :\n  eval $cachevar=yes\nelse case e in #(\n  e) eval $cachevar=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\n         CXX=\"$ac_save_CXX\" ;;\nesac\nfi\neval ac_res=\\$$cachevar\n\t       { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\nprintf \"%s\\n\" \"$ac_res\" >&6; }\n      if eval test x\\$$cachevar = xyes; then\n        CXX=\"$CXX $switch\"\n        if test -n \"$CXXCPP\" ; then\n          CXXCPP=\"$CXXCPP $switch\"\n        fi\n        ac_success=yes\n        break\n      fi\n    done\n  fi\n\n    if test x$ac_success = xno; then\n                    for alternative in ${ax_cxx_compile_alternatives}; do\n      for switch in -std=c++${alternative} +std=c++${alternative} \"-h std=c++${alternative}\" MSVC; do\n        if test x\"$switch\" = xMSVC; then\n                                        switch=-std:c++${alternative}\n          cachevar=`printf \"%s\\n\" \"ax_cv_cxx_compile_cxx17_${switch}_MSVC\" | sed \"$as_sed_sh\"`\n        else\n          cachevar=`printf \"%s\\n\" \"ax_cv_cxx_compile_cxx17_$switch\" | sed \"$as_sed_sh\"`\n        fi\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether $CXX supports C++17 features with $switch\" >&5\nprintf %s \"checking whether $CXX supports C++17 features with $switch... \" >&6; }\nif eval test \\${$cachevar+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_save_CXX=\"$CXX\"\n           CXX=\"$CXX $switch\"\n           cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n\n// If the compiler admits that it is not ready for C++11, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n// MSVC always sets __cplusplus to 199711L in older versions; newer versions\n// only set it correctly if /Zc:__cplusplus is specified as well as a\n// /std:c++NN switch:\n//\n// https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-__cplusplus/\n//\n// The value __cplusplus ought to have is available in _MSVC_LANG since\n// Visual Studio 2015 Update 3:\n//\n// https://learn.microsoft.com/en-us/cpp/preprocessor/predefined-macros\n//\n// This was also the first MSVC version to support C++14 so we can't use the\n// value of either __cplusplus or _MSVC_LANG to quickly rule out MSVC having\n// C++11 or C++14 support, but we can check _MSVC_LANG for C++17 and later.\n#elif __cplusplus < 201103L && !defined _MSC_VER\n\n#error \"This is not a C++11 compiler\"\n\n#else\n\nnamespace cxx11\n{\n\n  namespace test_static_assert\n  {\n\n    template <typename T>\n    struct check\n    {\n      static_assert(sizeof(int) <= sizeof(T), \"not big enough\");\n    };\n\n  }\n\n  namespace test_final_override\n  {\n\n    struct Base\n    {\n      virtual ~Base() {}\n      virtual void f() {}\n    };\n\n    struct Derived : public Base\n    {\n      virtual ~Derived() override {}\n      virtual void f() override {}\n    };\n\n  }\n\n  namespace test_double_right_angle_brackets\n  {\n\n    template < typename T >\n    struct check {};\n\n    typedef check<void> single_type;\n    typedef check<check<void>> double_type;\n    typedef check<check<check<void>>> triple_type;\n    typedef check<check<check<check<void>>>> quadruple_type;\n\n  }\n\n  namespace test_decltype\n  {\n\n    int\n    f()\n    {\n      int a = 1;\n      decltype(a) b = 2;\n      return a + b;\n    }\n\n  }\n\n  namespace test_type_deduction\n  {\n\n    template < typename T1, typename T2 >\n    struct is_same\n    {\n      static const bool value = false;\n    };\n\n    template < typename T >\n    struct is_same<T, T>\n    {\n      static const bool value = true;\n    };\n\n    template < typename T1, typename T2 >\n    auto\n    add(T1 a1, T2 a2) -> decltype(a1 + a2)\n    {\n      return a1 + a2;\n    }\n\n    int\n    test(const int c, volatile int v)\n    {\n      static_assert(is_same<int, decltype(0)>::value == true, \"\");\n      static_assert(is_same<int, decltype(c)>::value == false, \"\");\n      static_assert(is_same<int, decltype(v)>::value == false, \"\");\n      auto ac = c;\n      auto av = v;\n      auto sumi = ac + av + 'x';\n      auto sumf = ac + av + 1.0;\n      static_assert(is_same<int, decltype(ac)>::value == true, \"\");\n      static_assert(is_same<int, decltype(av)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumi)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumf)>::value == false, \"\");\n      static_assert(is_same<int, decltype(add(c, v))>::value == true, \"\");\n      return (sumf > 0.0) ? sumi : add(c, v);\n    }\n\n  }\n\n  namespace test_noexcept\n  {\n\n    int f() { return 0; }\n    int g() noexcept { return 0; }\n\n    static_assert(noexcept(f()) == false, \"\");\n    static_assert(noexcept(g()) == true, \"\");\n\n  }\n\n  namespace test_constexpr\n  {\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c_r(const CharT *const s, const unsigned long acc) noexcept\n    {\n      return *s ? strlen_c_r(s + 1, acc + 1) : acc;\n    }\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c(const CharT *const s) noexcept\n    {\n      return strlen_c_r(s, 0UL);\n    }\n\n    static_assert(strlen_c(\"\") == 0UL, \"\");\n    static_assert(strlen_c(\"1\") == 1UL, \"\");\n    static_assert(strlen_c(\"example\") == 7UL, \"\");\n    static_assert(strlen_c(\"another\\0example\") == 7UL, \"\");\n\n  }\n\n  namespace test_rvalue_references\n  {\n\n    template < int N >\n    struct answer\n    {\n      static constexpr int value = N;\n    };\n\n    answer<1> f(int&)       { return answer<1>(); }\n    answer<2> f(const int&) { return answer<2>(); }\n    answer<3> f(int&&)      { return answer<3>(); }\n\n    void\n    test()\n    {\n      int i = 0;\n      const int c = 0;\n      static_assert(decltype(f(i))::value == 1, \"\");\n      static_assert(decltype(f(c))::value == 2, \"\");\n      static_assert(decltype(f(0))::value == 3, \"\");\n    }\n\n  }\n\n  namespace test_uniform_initialization\n  {\n\n    struct test\n    {\n      static const int zero {};\n      static const int one {1};\n    };\n\n    static_assert(test::zero == 0, \"\");\n    static_assert(test::one == 1, \"\");\n\n  }\n\n  namespace test_lambdas\n  {\n\n    void\n    test1()\n    {\n      auto lambda1 = [](){};\n      auto lambda2 = lambda1;\n      lambda1();\n      lambda2();\n    }\n\n    int\n    test2()\n    {\n      auto a = [](int i, int j){ return i + j; }(1, 2);\n      auto b = []() -> int { return '0'; }();\n      auto c = [=](){ return a + b; }();\n      auto d = [&](){ return c; }();\n      auto e = [a, &b](int x) mutable {\n        const auto identity = [](int y){ return y; };\n        for (auto i = 0; i < a; ++i)\n          a += b--;\n        return x + identity(a + b);\n      }(0);\n      return a + b + c + d + e;\n    }\n\n    int\n    test3()\n    {\n      const auto nullary = [](){ return 0; };\n      const auto unary = [](int x){ return x; };\n      using nullary_t = decltype(nullary);\n      using unary_t = decltype(unary);\n      const auto higher1st = [](nullary_t f){ return f(); };\n      const auto higher2nd = [unary](nullary_t f1){\n        return [unary, f1](unary_t f2){ return f2(unary(f1())); };\n      };\n      return higher1st(nullary) + higher2nd(nullary)(unary);\n    }\n\n  }\n\n  namespace test_variadic_templates\n  {\n\n    template <int...>\n    struct sum;\n\n    template <int N0, int... N1toN>\n    struct sum<N0, N1toN...>\n    {\n      static constexpr auto value = N0 + sum<N1toN...>::value;\n    };\n\n    template <>\n    struct sum<>\n    {\n      static constexpr auto value = 0;\n    };\n\n    static_assert(sum<>::value == 0, \"\");\n    static_assert(sum<1>::value == 1, \"\");\n    static_assert(sum<23>::value == 23, \"\");\n    static_assert(sum<1, 2>::value == 3, \"\");\n    static_assert(sum<5, 5, 11>::value == 21, \"\");\n    static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, \"\");\n\n  }\n\n  // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae\n  // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function\n  // because of this.\n  namespace test_template_alias_sfinae\n  {\n\n    struct foo {};\n\n    template<typename T>\n    using member = typename T::member_type;\n\n    template<typename T>\n    void func(...) {}\n\n    template<typename T>\n    void func(member<T>*) {}\n\n    void test();\n\n    void test() { func<foo>(0); }\n\n  }\n\n}  // namespace cxx11\n\n#endif  // __cplusplus >= 201103L\n\n\n\n\n// If the compiler admits that it is not ready for C++14, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif __cplusplus < 201402L && !defined _MSC_VER\n\n#error \"This is not a C++14 compiler\"\n\n#else\n\nnamespace cxx14\n{\n\n  namespace test_polymorphic_lambdas\n  {\n\n    int\n    test()\n    {\n      const auto lambda = [](auto&&... args){\n        const auto istiny = [](auto x){\n          return (sizeof(x) == 1UL) ? 1 : 0;\n        };\n        const int aretiny[] = { istiny(args)... };\n        return aretiny[0];\n      };\n      return lambda(1, 1L, 1.0f, '1');\n    }\n\n  }\n\n  namespace test_binary_literals\n  {\n\n    constexpr auto ivii = 0b0000000000101010;\n    static_assert(ivii == 42, \"wrong value\");\n\n  }\n\n  namespace test_generalized_constexpr\n  {\n\n    template < typename CharT >\n    constexpr unsigned long\n    strlen_c(const CharT *const s) noexcept\n    {\n      auto length = 0UL;\n      for (auto p = s; *p; ++p)\n        ++length;\n      return length;\n    }\n\n    static_assert(strlen_c(\"\") == 0UL, \"\");\n    static_assert(strlen_c(\"x\") == 1UL, \"\");\n    static_assert(strlen_c(\"test\") == 4UL, \"\");\n    static_assert(strlen_c(\"another\\0test\") == 7UL, \"\");\n\n  }\n\n  namespace test_lambda_init_capture\n  {\n\n    int\n    test()\n    {\n      auto x = 0;\n      const auto lambda1 = [a = x](int b){ return a + b; };\n      const auto lambda2 = [a = lambda1(x)](){ return a; };\n      return lambda2();\n    }\n\n  }\n\n  namespace test_digit_separators\n  {\n\n    constexpr auto ten_million = 100'000'000;\n    static_assert(ten_million == 100000000, \"\");\n\n  }\n\n  namespace test_return_type_deduction\n  {\n\n    auto f(int& x) { return x; }\n    decltype(auto) g(int& x) { return x; }\n\n    template < typename T1, typename T2 >\n    struct is_same\n    {\n      static constexpr auto value = false;\n    };\n\n    template < typename T >\n    struct is_same<T, T>\n    {\n      static constexpr auto value = true;\n    };\n\n    int\n    test()\n    {\n      auto x = 0;\n      static_assert(is_same<int, decltype(f(x))>::value, \"\");\n      static_assert(is_same<int&, decltype(g(x))>::value, \"\");\n      return x;\n    }\n\n  }\n\n}  // namespace cxx14\n\n#endif  // __cplusplus >= 201402L\n\n\n\n\n// If the compiler admits that it is not ready for C++17, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 201703L\n\n#error \"This is not a C++17 compiler\"\n\n#else\n\n#include <initializer_list>\n#include <utility>\n#include <type_traits>\n\nnamespace cxx17\n{\n\n  namespace test_constexpr_lambdas\n  {\n\n    constexpr int foo = [](){return 42;}();\n\n  }\n\n  namespace test::nested_namespace::definitions\n  {\n\n  }\n\n  namespace test_fold_expression\n  {\n\n    template<typename... Args>\n    int multiply(Args... args)\n    {\n      return (args * ... * 1);\n    }\n\n    template<typename... Args>\n    bool all(Args... args)\n    {\n      return (args && ...);\n    }\n\n  }\n\n  namespace test_extended_static_assert\n  {\n\n    static_assert (true);\n\n  }\n\n  namespace test_auto_brace_init_list\n  {\n\n    auto foo = {5};\n    auto bar {5};\n\n    static_assert(std::is_same<std::initializer_list<int>, decltype(foo)>::value);\n    static_assert(std::is_same<int, decltype(bar)>::value);\n  }\n\n  namespace test_typename_in_template_template_parameter\n  {\n\n    template<template<typename> typename X> struct D;\n\n  }\n\n  namespace test_fallthrough_nodiscard_maybe_unused_attributes\n  {\n\n    int f1()\n    {\n      return 42;\n    }\n\n    [[nodiscard]] int f2()\n    {\n      [[maybe_unused]] auto unused = f1();\n\n      switch (f1())\n      {\n      case 17:\n        f1();\n        [[fallthrough]];\n      case 42:\n        f1();\n      }\n      return f1();\n    }\n\n  }\n\n  namespace test_extended_aggregate_initialization\n  {\n\n    struct base1\n    {\n      int b1, b2 = 42;\n    };\n\n    struct base2\n    {\n      base2() {\n        b3 = 42;\n      }\n      int b3;\n    };\n\n    struct derived : base1, base2\n    {\n        int d;\n    };\n\n    derived d1 {{1, 2}, {}, 4};  // full initialization\n    derived d2 {{}, {}, 4};      // value-initialized bases\n\n  }\n\n  namespace test_general_range_based_for_loop\n  {\n\n    struct iter\n    {\n      int i;\n\n      int& operator* ()\n      {\n        return i;\n      }\n\n      const int& operator* () const\n      {\n        return i;\n      }\n\n      iter& operator++()\n      {\n        ++i;\n        return *this;\n      }\n    };\n\n    struct sentinel\n    {\n      int i;\n    };\n\n    bool operator== (const iter& i, const sentinel& s)\n    {\n      return i.i == s.i;\n    }\n\n    bool operator!= (const iter& i, const sentinel& s)\n    {\n      return !(i == s);\n    }\n\n    struct range\n    {\n      iter begin() const\n      {\n        return {0};\n      }\n\n      sentinel end() const\n      {\n        return {5};\n      }\n    };\n\n    void f()\n    {\n      range r {};\n\n      for (auto i : r)\n      {\n        [[maybe_unused]] auto v = i;\n      }\n    }\n\n  }\n\n  namespace test_lambda_capture_asterisk_this_by_value\n  {\n\n    struct t\n    {\n      int i;\n      int foo()\n      {\n        return [*this]()\n        {\n          return i;\n        }();\n      }\n    };\n\n  }\n\n  namespace test_enum_class_construction\n  {\n\n    enum class byte : unsigned char\n    {};\n\n    byte foo {42};\n\n  }\n\n  namespace test_constexpr_if\n  {\n\n    template <bool cond>\n    int f ()\n    {\n      if constexpr(cond)\n      {\n        return 13;\n      }\n      else\n      {\n        return 42;\n      }\n    }\n\n  }\n\n  namespace test_selection_statement_with_initializer\n  {\n\n    int f()\n    {\n      return 13;\n    }\n\n    int f2()\n    {\n      if (auto i = f(); i > 0)\n      {\n        return 3;\n      }\n\n      switch (auto i = f(); i + 4)\n      {\n      case 17:\n        return 2;\n\n      default:\n        return 1;\n      }\n    }\n\n  }\n\n  namespace test_template_argument_deduction_for_class_templates\n  {\n\n    template <typename T1, typename T2>\n    struct pair\n    {\n      pair (T1 p1, T2 p2)\n        : m1 {p1},\n          m2 {p2}\n      {}\n\n      T1 m1;\n      T2 m2;\n    };\n\n    void f()\n    {\n      [[maybe_unused]] auto p = pair{13, 42u};\n    }\n\n  }\n\n  namespace test_non_type_auto_template_parameters\n  {\n\n    template <auto n>\n    struct B\n    {};\n\n    B<5> b1;\n    B<'a'> b2;\n\n  }\n\n  namespace test_structured_bindings\n  {\n\n    int arr[2] = { 1, 2 };\n    std::pair<int, int> pr = { 1, 2 };\n\n    auto f1() -> int(&)[2]\n    {\n      return arr;\n    }\n\n    auto f2() -> std::pair<int, int>&\n    {\n      return pr;\n    }\n\n    struct S\n    {\n      int x1 : 2;\n      volatile double y1;\n    };\n\n    S f3()\n    {\n      return {};\n    }\n\n    auto [ x1, y1 ] = f1();\n    auto& [ xr1, yr1 ] = f1();\n    auto [ x2, y2 ] = f2();\n    auto& [ xr2, yr2 ] = f2();\n    const auto [ x3, y3 ] = f3();\n\n  }\n\n  namespace test_exception_spec_type_system\n  {\n\n    struct Good {};\n    struct Bad {};\n\n    void g1() noexcept;\n    void g2();\n\n    template<typename T>\n    Bad\n    f(T*, T*);\n\n    template<typename T1, typename T2>\n    Good\n    f(T1*, T2*);\n\n    static_assert (std::is_same_v<Good, decltype(f(g1, g2))>);\n\n  }\n\n  namespace test_inline_variables\n  {\n\n    template<class T> void f(T)\n    {}\n\n    template<class T> inline T g(T)\n    {\n      return T{};\n    }\n\n    template<> inline void f<>(int)\n    {}\n\n    template<> int g<>(int)\n    {\n      return 5;\n    }\n\n  }\n\n}  // namespace cxx17\n\n#endif  // (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 201703L\n\n\n\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"\nthen :\n  eval $cachevar=yes\nelse case e in #(\n  e) eval $cachevar=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\n           CXX=\"$ac_save_CXX\" ;;\nesac\nfi\neval ac_res=\\$$cachevar\n\t       { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\nprintf \"%s\\n\" \"$ac_res\" >&6; }\n        if eval test x\\$$cachevar = xyes; then\n          CXX=\"$CXX $switch\"\n          if test -n \"$CXXCPP\" ; then\n            CXXCPP=\"$CXXCPP $switch\"\n          fi\n          ac_success=yes\n          break\n        fi\n      done\n      if test x$ac_success = xyes; then\n        break\n      fi\n    done\n  fi\n  ac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n  if test x$ax_cxx_compile_cxx17_required = xtrue; then\n    if test x$ac_success = xno; then\n      as_fn_error $? \"*** A compiler with support for C++17 language features is required.\" \"$LINENO\" 5\n    fi\n  fi\n  if test x$ac_success = xno; then\n    HAVE_CXX17=0\n    { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: No compiler with C++17 support was found\" >&5\nprintf \"%s\\n\" \"$as_me: No compiler with C++17 support was found\" >&6;}\n  else\n    HAVE_CXX17=1\n\nprintf \"%s\\n\" \"#define HAVE_CXX17 1\" >>confdefs.h\n\n  fi\n\n\n    if test \"$HAVE_CXX17\" = \"1\";\n    then\n       PBX_CXX17=1\n    fi\n\n    if test \"${ENABLE_LATEST_CXX_STD}\" != \"yes\" ; then\n        CXX=\"${ast_cxx_check_std_save_CXX}\"\n        CXXCPP=\"${ast_cxx_check_std_save_CXXCPP}\"\n    fi\n\n\n    PBX_CXX20=0\n    if test \"${ENABLE_LATEST_CXX_STD}\" != \"yes\" ; then\n        ast_cxx_check_std_save_CXX=\"${CXX}\"\n        ast_cxx_check_std_save_CXXCPP=\"${CXXCPP}\"\n    fi\n      ax_cxx_compile_alternatives=\"20\"    ax_cxx_compile_cxx20_required=false\n  ac_ext=cpp\nac_cpp='$CXXCPP $CPPFLAGS'\nac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n  ac_success=no\n\n      { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether $CXX supports C++20 features by default\" >&5\nprintf %s \"checking whether $CXX supports C++20 features by default... \" >&6; }\nif test ${ax_cv_cxx_compile_cxx20+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n\n// If the compiler admits that it is not ready for C++11, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n// MSVC always sets __cplusplus to 199711L in older versions; newer versions\n// only set it correctly if /Zc:__cplusplus is specified as well as a\n// /std:c++NN switch:\n//\n// https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-__cplusplus/\n//\n// The value __cplusplus ought to have is available in _MSVC_LANG since\n// Visual Studio 2015 Update 3:\n//\n// https://learn.microsoft.com/en-us/cpp/preprocessor/predefined-macros\n//\n// This was also the first MSVC version to support C++14 so we can't use the\n// value of either __cplusplus or _MSVC_LANG to quickly rule out MSVC having\n// C++11 or C++14 support, but we can check _MSVC_LANG for C++17 and later.\n#elif __cplusplus < 201103L && !defined _MSC_VER\n\n#error \"This is not a C++11 compiler\"\n\n#else\n\nnamespace cxx11\n{\n\n  namespace test_static_assert\n  {\n\n    template <typename T>\n    struct check\n    {\n      static_assert(sizeof(int) <= sizeof(T), \"not big enough\");\n    };\n\n  }\n\n  namespace test_final_override\n  {\n\n    struct Base\n    {\n      virtual ~Base() {}\n      virtual void f() {}\n    };\n\n    struct Derived : public Base\n    {\n      virtual ~Derived() override {}\n      virtual void f() override {}\n    };\n\n  }\n\n  namespace test_double_right_angle_brackets\n  {\n\n    template < typename T >\n    struct check {};\n\n    typedef check<void> single_type;\n    typedef check<check<void>> double_type;\n    typedef check<check<check<void>>> triple_type;\n    typedef check<check<check<check<void>>>> quadruple_type;\n\n  }\n\n  namespace test_decltype\n  {\n\n    int\n    f()\n    {\n      int a = 1;\n      decltype(a) b = 2;\n      return a + b;\n    }\n\n  }\n\n  namespace test_type_deduction\n  {\n\n    template < typename T1, typename T2 >\n    struct is_same\n    {\n      static const bool value = false;\n    };\n\n    template < typename T >\n    struct is_same<T, T>\n    {\n      static const bool value = true;\n    };\n\n    template < typename T1, typename T2 >\n    auto\n    add(T1 a1, T2 a2) -> decltype(a1 + a2)\n    {\n      return a1 + a2;\n    }\n\n    int\n    test(const int c, volatile int v)\n    {\n      static_assert(is_same<int, decltype(0)>::value == true, \"\");\n      static_assert(is_same<int, decltype(c)>::value == false, \"\");\n      static_assert(is_same<int, decltype(v)>::value == false, \"\");\n      auto ac = c;\n      auto av = v;\n      auto sumi = ac + av + 'x';\n      auto sumf = ac + av + 1.0;\n      static_assert(is_same<int, decltype(ac)>::value == true, \"\");\n      static_assert(is_same<int, decltype(av)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumi)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumf)>::value == false, \"\");\n      static_assert(is_same<int, decltype(add(c, v))>::value == true, \"\");\n      return (sumf > 0.0) ? sumi : add(c, v);\n    }\n\n  }\n\n  namespace test_noexcept\n  {\n\n    int f() { return 0; }\n    int g() noexcept { return 0; }\n\n    static_assert(noexcept(f()) == false, \"\");\n    static_assert(noexcept(g()) == true, \"\");\n\n  }\n\n  namespace test_constexpr\n  {\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c_r(const CharT *const s, const unsigned long acc) noexcept\n    {\n      return *s ? strlen_c_r(s + 1, acc + 1) : acc;\n    }\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c(const CharT *const s) noexcept\n    {\n      return strlen_c_r(s, 0UL);\n    }\n\n    static_assert(strlen_c(\"\") == 0UL, \"\");\n    static_assert(strlen_c(\"1\") == 1UL, \"\");\n    static_assert(strlen_c(\"example\") == 7UL, \"\");\n    static_assert(strlen_c(\"another\\0example\") == 7UL, \"\");\n\n  }\n\n  namespace test_rvalue_references\n  {\n\n    template < int N >\n    struct answer\n    {\n      static constexpr int value = N;\n    };\n\n    answer<1> f(int&)       { return answer<1>(); }\n    answer<2> f(const int&) { return answer<2>(); }\n    answer<3> f(int&&)      { return answer<3>(); }\n\n    void\n    test()\n    {\n      int i = 0;\n      const int c = 0;\n      static_assert(decltype(f(i))::value == 1, \"\");\n      static_assert(decltype(f(c))::value == 2, \"\");\n      static_assert(decltype(f(0))::value == 3, \"\");\n    }\n\n  }\n\n  namespace test_uniform_initialization\n  {\n\n    struct test\n    {\n      static const int zero {};\n      static const int one {1};\n    };\n\n    static_assert(test::zero == 0, \"\");\n    static_assert(test::one == 1, \"\");\n\n  }\n\n  namespace test_lambdas\n  {\n\n    void\n    test1()\n    {\n      auto lambda1 = [](){};\n      auto lambda2 = lambda1;\n      lambda1();\n      lambda2();\n    }\n\n    int\n    test2()\n    {\n      auto a = [](int i, int j){ return i + j; }(1, 2);\n      auto b = []() -> int { return '0'; }();\n      auto c = [=](){ return a + b; }();\n      auto d = [&](){ return c; }();\n      auto e = [a, &b](int x) mutable {\n        const auto identity = [](int y){ return y; };\n        for (auto i = 0; i < a; ++i)\n          a += b--;\n        return x + identity(a + b);\n      }(0);\n      return a + b + c + d + e;\n    }\n\n    int\n    test3()\n    {\n      const auto nullary = [](){ return 0; };\n      const auto unary = [](int x){ return x; };\n      using nullary_t = decltype(nullary);\n      using unary_t = decltype(unary);\n      const auto higher1st = [](nullary_t f){ return f(); };\n      const auto higher2nd = [unary](nullary_t f1){\n        return [unary, f1](unary_t f2){ return f2(unary(f1())); };\n      };\n      return higher1st(nullary) + higher2nd(nullary)(unary);\n    }\n\n  }\n\n  namespace test_variadic_templates\n  {\n\n    template <int...>\n    struct sum;\n\n    template <int N0, int... N1toN>\n    struct sum<N0, N1toN...>\n    {\n      static constexpr auto value = N0 + sum<N1toN...>::value;\n    };\n\n    template <>\n    struct sum<>\n    {\n      static constexpr auto value = 0;\n    };\n\n    static_assert(sum<>::value == 0, \"\");\n    static_assert(sum<1>::value == 1, \"\");\n    static_assert(sum<23>::value == 23, \"\");\n    static_assert(sum<1, 2>::value == 3, \"\");\n    static_assert(sum<5, 5, 11>::value == 21, \"\");\n    static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, \"\");\n\n  }\n\n  // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae\n  // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function\n  // because of this.\n  namespace test_template_alias_sfinae\n  {\n\n    struct foo {};\n\n    template<typename T>\n    using member = typename T::member_type;\n\n    template<typename T>\n    void func(...) {}\n\n    template<typename T>\n    void func(member<T>*) {}\n\n    void test();\n\n    void test() { func<foo>(0); }\n\n  }\n\n}  // namespace cxx11\n\n#endif  // __cplusplus >= 201103L\n\n\n\n\n// If the compiler admits that it is not ready for C++14, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif __cplusplus < 201402L && !defined _MSC_VER\n\n#error \"This is not a C++14 compiler\"\n\n#else\n\nnamespace cxx14\n{\n\n  namespace test_polymorphic_lambdas\n  {\n\n    int\n    test()\n    {\n      const auto lambda = [](auto&&... args){\n        const auto istiny = [](auto x){\n          return (sizeof(x) == 1UL) ? 1 : 0;\n        };\n        const int aretiny[] = { istiny(args)... };\n        return aretiny[0];\n      };\n      return lambda(1, 1L, 1.0f, '1');\n    }\n\n  }\n\n  namespace test_binary_literals\n  {\n\n    constexpr auto ivii = 0b0000000000101010;\n    static_assert(ivii == 42, \"wrong value\");\n\n  }\n\n  namespace test_generalized_constexpr\n  {\n\n    template < typename CharT >\n    constexpr unsigned long\n    strlen_c(const CharT *const s) noexcept\n    {\n      auto length = 0UL;\n      for (auto p = s; *p; ++p)\n        ++length;\n      return length;\n    }\n\n    static_assert(strlen_c(\"\") == 0UL, \"\");\n    static_assert(strlen_c(\"x\") == 1UL, \"\");\n    static_assert(strlen_c(\"test\") == 4UL, \"\");\n    static_assert(strlen_c(\"another\\0test\") == 7UL, \"\");\n\n  }\n\n  namespace test_lambda_init_capture\n  {\n\n    int\n    test()\n    {\n      auto x = 0;\n      const auto lambda1 = [a = x](int b){ return a + b; };\n      const auto lambda2 = [a = lambda1(x)](){ return a; };\n      return lambda2();\n    }\n\n  }\n\n  namespace test_digit_separators\n  {\n\n    constexpr auto ten_million = 100'000'000;\n    static_assert(ten_million == 100000000, \"\");\n\n  }\n\n  namespace test_return_type_deduction\n  {\n\n    auto f(int& x) { return x; }\n    decltype(auto) g(int& x) { return x; }\n\n    template < typename T1, typename T2 >\n    struct is_same\n    {\n      static constexpr auto value = false;\n    };\n\n    template < typename T >\n    struct is_same<T, T>\n    {\n      static constexpr auto value = true;\n    };\n\n    int\n    test()\n    {\n      auto x = 0;\n      static_assert(is_same<int, decltype(f(x))>::value, \"\");\n      static_assert(is_same<int&, decltype(g(x))>::value, \"\");\n      return x;\n    }\n\n  }\n\n}  // namespace cxx14\n\n#endif  // __cplusplus >= 201402L\n\n\n\n\n// If the compiler admits that it is not ready for C++17, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 201703L\n\n#error \"This is not a C++17 compiler\"\n\n#else\n\n#include <initializer_list>\n#include <utility>\n#include <type_traits>\n\nnamespace cxx17\n{\n\n  namespace test_constexpr_lambdas\n  {\n\n    constexpr int foo = [](){return 42;}();\n\n  }\n\n  namespace test::nested_namespace::definitions\n  {\n\n  }\n\n  namespace test_fold_expression\n  {\n\n    template<typename... Args>\n    int multiply(Args... args)\n    {\n      return (args * ... * 1);\n    }\n\n    template<typename... Args>\n    bool all(Args... args)\n    {\n      return (args && ...);\n    }\n\n  }\n\n  namespace test_extended_static_assert\n  {\n\n    static_assert (true);\n\n  }\n\n  namespace test_auto_brace_init_list\n  {\n\n    auto foo = {5};\n    auto bar {5};\n\n    static_assert(std::is_same<std::initializer_list<int>, decltype(foo)>::value);\n    static_assert(std::is_same<int, decltype(bar)>::value);\n  }\n\n  namespace test_typename_in_template_template_parameter\n  {\n\n    template<template<typename> typename X> struct D;\n\n  }\n\n  namespace test_fallthrough_nodiscard_maybe_unused_attributes\n  {\n\n    int f1()\n    {\n      return 42;\n    }\n\n    [[nodiscard]] int f2()\n    {\n      [[maybe_unused]] auto unused = f1();\n\n      switch (f1())\n      {\n      case 17:\n        f1();\n        [[fallthrough]];\n      case 42:\n        f1();\n      }\n      return f1();\n    }\n\n  }\n\n  namespace test_extended_aggregate_initialization\n  {\n\n    struct base1\n    {\n      int b1, b2 = 42;\n    };\n\n    struct base2\n    {\n      base2() {\n        b3 = 42;\n      }\n      int b3;\n    };\n\n    struct derived : base1, base2\n    {\n        int d;\n    };\n\n    derived d1 {{1, 2}, {}, 4};  // full initialization\n    derived d2 {{}, {}, 4};      // value-initialized bases\n\n  }\n\n  namespace test_general_range_based_for_loop\n  {\n\n    struct iter\n    {\n      int i;\n\n      int& operator* ()\n      {\n        return i;\n      }\n\n      const int& operator* () const\n      {\n        return i;\n      }\n\n      iter& operator++()\n      {\n        ++i;\n        return *this;\n      }\n    };\n\n    struct sentinel\n    {\n      int i;\n    };\n\n    bool operator== (const iter& i, const sentinel& s)\n    {\n      return i.i == s.i;\n    }\n\n    bool operator!= (const iter& i, const sentinel& s)\n    {\n      return !(i == s);\n    }\n\n    struct range\n    {\n      iter begin() const\n      {\n        return {0};\n      }\n\n      sentinel end() const\n      {\n        return {5};\n      }\n    };\n\n    void f()\n    {\n      range r {};\n\n      for (auto i : r)\n      {\n        [[maybe_unused]] auto v = i;\n      }\n    }\n\n  }\n\n  namespace test_lambda_capture_asterisk_this_by_value\n  {\n\n    struct t\n    {\n      int i;\n      int foo()\n      {\n        return [*this]()\n        {\n          return i;\n        }();\n      }\n    };\n\n  }\n\n  namespace test_enum_class_construction\n  {\n\n    enum class byte : unsigned char\n    {};\n\n    byte foo {42};\n\n  }\n\n  namespace test_constexpr_if\n  {\n\n    template <bool cond>\n    int f ()\n    {\n      if constexpr(cond)\n      {\n        return 13;\n      }\n      else\n      {\n        return 42;\n      }\n    }\n\n  }\n\n  namespace test_selection_statement_with_initializer\n  {\n\n    int f()\n    {\n      return 13;\n    }\n\n    int f2()\n    {\n      if (auto i = f(); i > 0)\n      {\n        return 3;\n      }\n\n      switch (auto i = f(); i + 4)\n      {\n      case 17:\n        return 2;\n\n      default:\n        return 1;\n      }\n    }\n\n  }\n\n  namespace test_template_argument_deduction_for_class_templates\n  {\n\n    template <typename T1, typename T2>\n    struct pair\n    {\n      pair (T1 p1, T2 p2)\n        : m1 {p1},\n          m2 {p2}\n      {}\n\n      T1 m1;\n      T2 m2;\n    };\n\n    void f()\n    {\n      [[maybe_unused]] auto p = pair{13, 42u};\n    }\n\n  }\n\n  namespace test_non_type_auto_template_parameters\n  {\n\n    template <auto n>\n    struct B\n    {};\n\n    B<5> b1;\n    B<'a'> b2;\n\n  }\n\n  namespace test_structured_bindings\n  {\n\n    int arr[2] = { 1, 2 };\n    std::pair<int, int> pr = { 1, 2 };\n\n    auto f1() -> int(&)[2]\n    {\n      return arr;\n    }\n\n    auto f2() -> std::pair<int, int>&\n    {\n      return pr;\n    }\n\n    struct S\n    {\n      int x1 : 2;\n      volatile double y1;\n    };\n\n    S f3()\n    {\n      return {};\n    }\n\n    auto [ x1, y1 ] = f1();\n    auto& [ xr1, yr1 ] = f1();\n    auto [ x2, y2 ] = f2();\n    auto& [ xr2, yr2 ] = f2();\n    const auto [ x3, y3 ] = f3();\n\n  }\n\n  namespace test_exception_spec_type_system\n  {\n\n    struct Good {};\n    struct Bad {};\n\n    void g1() noexcept;\n    void g2();\n\n    template<typename T>\n    Bad\n    f(T*, T*);\n\n    template<typename T1, typename T2>\n    Good\n    f(T1*, T2*);\n\n    static_assert (std::is_same_v<Good, decltype(f(g1, g2))>);\n\n  }\n\n  namespace test_inline_variables\n  {\n\n    template<class T> void f(T)\n    {}\n\n    template<class T> inline T g(T)\n    {\n      return T{};\n    }\n\n    template<> inline void f<>(int)\n    {}\n\n    template<> int g<>(int)\n    {\n      return 5;\n    }\n\n  }\n\n}  // namespace cxx17\n\n#endif  // (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 201703L\n\n\n\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 202002L\n\n#error \"This is not a C++20 compiler\"\n\n#else\n\n#include <version>\n\nnamespace cxx20\n{\n\n// As C++20 supports feature test macros in the standard, there is no\n// immediate need to actually test for feature availability on the\n// Autoconf side.\n\n}  // namespace cxx20\n\n#endif  // (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 202002L\n\n\n\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"\nthen :\n  ax_cv_cxx_compile_cxx20=yes\nelse case e in #(\n  e) ax_cv_cxx_compile_cxx20=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ax_cv_cxx_compile_cxx20\" >&5\nprintf \"%s\\n\" \"$ax_cv_cxx_compile_cxx20\" >&6; }\n    if test x$ax_cv_cxx_compile_cxx20 = xyes; then\n      ac_success=yes\n    fi\n\n    if test x$ac_success = xno; then\n    for alternative in ${ax_cxx_compile_alternatives}; do\n      switch=\"-std=gnu++${alternative}\"\n      cachevar=`printf \"%s\\n\" \"ax_cv_cxx_compile_cxx20_$switch\" | sed \"$as_sed_sh\"`\n      { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether $CXX supports C++20 features with $switch\" >&5\nprintf %s \"checking whether $CXX supports C++20 features with $switch... \" >&6; }\nif eval test \\${$cachevar+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_save_CXX=\"$CXX\"\n         CXX=\"$CXX $switch\"\n         cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n\n// If the compiler admits that it is not ready for C++11, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n// MSVC always sets __cplusplus to 199711L in older versions; newer versions\n// only set it correctly if /Zc:__cplusplus is specified as well as a\n// /std:c++NN switch:\n//\n// https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-__cplusplus/\n//\n// The value __cplusplus ought to have is available in _MSVC_LANG since\n// Visual Studio 2015 Update 3:\n//\n// https://learn.microsoft.com/en-us/cpp/preprocessor/predefined-macros\n//\n// This was also the first MSVC version to support C++14 so we can't use the\n// value of either __cplusplus or _MSVC_LANG to quickly rule out MSVC having\n// C++11 or C++14 support, but we can check _MSVC_LANG for C++17 and later.\n#elif __cplusplus < 201103L && !defined _MSC_VER\n\n#error \"This is not a C++11 compiler\"\n\n#else\n\nnamespace cxx11\n{\n\n  namespace test_static_assert\n  {\n\n    template <typename T>\n    struct check\n    {\n      static_assert(sizeof(int) <= sizeof(T), \"not big enough\");\n    };\n\n  }\n\n  namespace test_final_override\n  {\n\n    struct Base\n    {\n      virtual ~Base() {}\n      virtual void f() {}\n    };\n\n    struct Derived : public Base\n    {\n      virtual ~Derived() override {}\n      virtual void f() override {}\n    };\n\n  }\n\n  namespace test_double_right_angle_brackets\n  {\n\n    template < typename T >\n    struct check {};\n\n    typedef check<void> single_type;\n    typedef check<check<void>> double_type;\n    typedef check<check<check<void>>> triple_type;\n    typedef check<check<check<check<void>>>> quadruple_type;\n\n  }\n\n  namespace test_decltype\n  {\n\n    int\n    f()\n    {\n      int a = 1;\n      decltype(a) b = 2;\n      return a + b;\n    }\n\n  }\n\n  namespace test_type_deduction\n  {\n\n    template < typename T1, typename T2 >\n    struct is_same\n    {\n      static const bool value = false;\n    };\n\n    template < typename T >\n    struct is_same<T, T>\n    {\n      static const bool value = true;\n    };\n\n    template < typename T1, typename T2 >\n    auto\n    add(T1 a1, T2 a2) -> decltype(a1 + a2)\n    {\n      return a1 + a2;\n    }\n\n    int\n    test(const int c, volatile int v)\n    {\n      static_assert(is_same<int, decltype(0)>::value == true, \"\");\n      static_assert(is_same<int, decltype(c)>::value == false, \"\");\n      static_assert(is_same<int, decltype(v)>::value == false, \"\");\n      auto ac = c;\n      auto av = v;\n      auto sumi = ac + av + 'x';\n      auto sumf = ac + av + 1.0;\n      static_assert(is_same<int, decltype(ac)>::value == true, \"\");\n      static_assert(is_same<int, decltype(av)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumi)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumf)>::value == false, \"\");\n      static_assert(is_same<int, decltype(add(c, v))>::value == true, \"\");\n      return (sumf > 0.0) ? sumi : add(c, v);\n    }\n\n  }\n\n  namespace test_noexcept\n  {\n\n    int f() { return 0; }\n    int g() noexcept { return 0; }\n\n    static_assert(noexcept(f()) == false, \"\");\n    static_assert(noexcept(g()) == true, \"\");\n\n  }\n\n  namespace test_constexpr\n  {\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c_r(const CharT *const s, const unsigned long acc) noexcept\n    {\n      return *s ? strlen_c_r(s + 1, acc + 1) : acc;\n    }\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c(const CharT *const s) noexcept\n    {\n      return strlen_c_r(s, 0UL);\n    }\n\n    static_assert(strlen_c(\"\") == 0UL, \"\");\n    static_assert(strlen_c(\"1\") == 1UL, \"\");\n    static_assert(strlen_c(\"example\") == 7UL, \"\");\n    static_assert(strlen_c(\"another\\0example\") == 7UL, \"\");\n\n  }\n\n  namespace test_rvalue_references\n  {\n\n    template < int N >\n    struct answer\n    {\n      static constexpr int value = N;\n    };\n\n    answer<1> f(int&)       { return answer<1>(); }\n    answer<2> f(const int&) { return answer<2>(); }\n    answer<3> f(int&&)      { return answer<3>(); }\n\n    void\n    test()\n    {\n      int i = 0;\n      const int c = 0;\n      static_assert(decltype(f(i))::value == 1, \"\");\n      static_assert(decltype(f(c))::value == 2, \"\");\n      static_assert(decltype(f(0))::value == 3, \"\");\n    }\n\n  }\n\n  namespace test_uniform_initialization\n  {\n\n    struct test\n    {\n      static const int zero {};\n      static const int one {1};\n    };\n\n    static_assert(test::zero == 0, \"\");\n    static_assert(test::one == 1, \"\");\n\n  }\n\n  namespace test_lambdas\n  {\n\n    void\n    test1()\n    {\n      auto lambda1 = [](){};\n      auto lambda2 = lambda1;\n      lambda1();\n      lambda2();\n    }\n\n    int\n    test2()\n    {\n      auto a = [](int i, int j){ return i + j; }(1, 2);\n      auto b = []() -> int { return '0'; }();\n      auto c = [=](){ return a + b; }();\n      auto d = [&](){ return c; }();\n      auto e = [a, &b](int x) mutable {\n        const auto identity = [](int y){ return y; };\n        for (auto i = 0; i < a; ++i)\n          a += b--;\n        return x + identity(a + b);\n      }(0);\n      return a + b + c + d + e;\n    }\n\n    int\n    test3()\n    {\n      const auto nullary = [](){ return 0; };\n      const auto unary = [](int x){ return x; };\n      using nullary_t = decltype(nullary);\n      using unary_t = decltype(unary);\n      const auto higher1st = [](nullary_t f){ return f(); };\n      const auto higher2nd = [unary](nullary_t f1){\n        return [unary, f1](unary_t f2){ return f2(unary(f1())); };\n      };\n      return higher1st(nullary) + higher2nd(nullary)(unary);\n    }\n\n  }\n\n  namespace test_variadic_templates\n  {\n\n    template <int...>\n    struct sum;\n\n    template <int N0, int... N1toN>\n    struct sum<N0, N1toN...>\n    {\n      static constexpr auto value = N0 + sum<N1toN...>::value;\n    };\n\n    template <>\n    struct sum<>\n    {\n      static constexpr auto value = 0;\n    };\n\n    static_assert(sum<>::value == 0, \"\");\n    static_assert(sum<1>::value == 1, \"\");\n    static_assert(sum<23>::value == 23, \"\");\n    static_assert(sum<1, 2>::value == 3, \"\");\n    static_assert(sum<5, 5, 11>::value == 21, \"\");\n    static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, \"\");\n\n  }\n\n  // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae\n  // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function\n  // because of this.\n  namespace test_template_alias_sfinae\n  {\n\n    struct foo {};\n\n    template<typename T>\n    using member = typename T::member_type;\n\n    template<typename T>\n    void func(...) {}\n\n    template<typename T>\n    void func(member<T>*) {}\n\n    void test();\n\n    void test() { func<foo>(0); }\n\n  }\n\n}  // namespace cxx11\n\n#endif  // __cplusplus >= 201103L\n\n\n\n\n// If the compiler admits that it is not ready for C++14, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif __cplusplus < 201402L && !defined _MSC_VER\n\n#error \"This is not a C++14 compiler\"\n\n#else\n\nnamespace cxx14\n{\n\n  namespace test_polymorphic_lambdas\n  {\n\n    int\n    test()\n    {\n      const auto lambda = [](auto&&... args){\n        const auto istiny = [](auto x){\n          return (sizeof(x) == 1UL) ? 1 : 0;\n        };\n        const int aretiny[] = { istiny(args)... };\n        return aretiny[0];\n      };\n      return lambda(1, 1L, 1.0f, '1');\n    }\n\n  }\n\n  namespace test_binary_literals\n  {\n\n    constexpr auto ivii = 0b0000000000101010;\n    static_assert(ivii == 42, \"wrong value\");\n\n  }\n\n  namespace test_generalized_constexpr\n  {\n\n    template < typename CharT >\n    constexpr unsigned long\n    strlen_c(const CharT *const s) noexcept\n    {\n      auto length = 0UL;\n      for (auto p = s; *p; ++p)\n        ++length;\n      return length;\n    }\n\n    static_assert(strlen_c(\"\") == 0UL, \"\");\n    static_assert(strlen_c(\"x\") == 1UL, \"\");\n    static_assert(strlen_c(\"test\") == 4UL, \"\");\n    static_assert(strlen_c(\"another\\0test\") == 7UL, \"\");\n\n  }\n\n  namespace test_lambda_init_capture\n  {\n\n    int\n    test()\n    {\n      auto x = 0;\n      const auto lambda1 = [a = x](int b){ return a + b; };\n      const auto lambda2 = [a = lambda1(x)](){ return a; };\n      return lambda2();\n    }\n\n  }\n\n  namespace test_digit_separators\n  {\n\n    constexpr auto ten_million = 100'000'000;\n    static_assert(ten_million == 100000000, \"\");\n\n  }\n\n  namespace test_return_type_deduction\n  {\n\n    auto f(int& x) { return x; }\n    decltype(auto) g(int& x) { return x; }\n\n    template < typename T1, typename T2 >\n    struct is_same\n    {\n      static constexpr auto value = false;\n    };\n\n    template < typename T >\n    struct is_same<T, T>\n    {\n      static constexpr auto value = true;\n    };\n\n    int\n    test()\n    {\n      auto x = 0;\n      static_assert(is_same<int, decltype(f(x))>::value, \"\");\n      static_assert(is_same<int&, decltype(g(x))>::value, \"\");\n      return x;\n    }\n\n  }\n\n}  // namespace cxx14\n\n#endif  // __cplusplus >= 201402L\n\n\n\n\n// If the compiler admits that it is not ready for C++17, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 201703L\n\n#error \"This is not a C++17 compiler\"\n\n#else\n\n#include <initializer_list>\n#include <utility>\n#include <type_traits>\n\nnamespace cxx17\n{\n\n  namespace test_constexpr_lambdas\n  {\n\n    constexpr int foo = [](){return 42;}();\n\n  }\n\n  namespace test::nested_namespace::definitions\n  {\n\n  }\n\n  namespace test_fold_expression\n  {\n\n    template<typename... Args>\n    int multiply(Args... args)\n    {\n      return (args * ... * 1);\n    }\n\n    template<typename... Args>\n    bool all(Args... args)\n    {\n      return (args && ...);\n    }\n\n  }\n\n  namespace test_extended_static_assert\n  {\n\n    static_assert (true);\n\n  }\n\n  namespace test_auto_brace_init_list\n  {\n\n    auto foo = {5};\n    auto bar {5};\n\n    static_assert(std::is_same<std::initializer_list<int>, decltype(foo)>::value);\n    static_assert(std::is_same<int, decltype(bar)>::value);\n  }\n\n  namespace test_typename_in_template_template_parameter\n  {\n\n    template<template<typename> typename X> struct D;\n\n  }\n\n  namespace test_fallthrough_nodiscard_maybe_unused_attributes\n  {\n\n    int f1()\n    {\n      return 42;\n    }\n\n    [[nodiscard]] int f2()\n    {\n      [[maybe_unused]] auto unused = f1();\n\n      switch (f1())\n      {\n      case 17:\n        f1();\n        [[fallthrough]];\n      case 42:\n        f1();\n      }\n      return f1();\n    }\n\n  }\n\n  namespace test_extended_aggregate_initialization\n  {\n\n    struct base1\n    {\n      int b1, b2 = 42;\n    };\n\n    struct base2\n    {\n      base2() {\n        b3 = 42;\n      }\n      int b3;\n    };\n\n    struct derived : base1, base2\n    {\n        int d;\n    };\n\n    derived d1 {{1, 2}, {}, 4};  // full initialization\n    derived d2 {{}, {}, 4};      // value-initialized bases\n\n  }\n\n  namespace test_general_range_based_for_loop\n  {\n\n    struct iter\n    {\n      int i;\n\n      int& operator* ()\n      {\n        return i;\n      }\n\n      const int& operator* () const\n      {\n        return i;\n      }\n\n      iter& operator++()\n      {\n        ++i;\n        return *this;\n      }\n    };\n\n    struct sentinel\n    {\n      int i;\n    };\n\n    bool operator== (const iter& i, const sentinel& s)\n    {\n      return i.i == s.i;\n    }\n\n    bool operator!= (const iter& i, const sentinel& s)\n    {\n      return !(i == s);\n    }\n\n    struct range\n    {\n      iter begin() const\n      {\n        return {0};\n      }\n\n      sentinel end() const\n      {\n        return {5};\n      }\n    };\n\n    void f()\n    {\n      range r {};\n\n      for (auto i : r)\n      {\n        [[maybe_unused]] auto v = i;\n      }\n    }\n\n  }\n\n  namespace test_lambda_capture_asterisk_this_by_value\n  {\n\n    struct t\n    {\n      int i;\n      int foo()\n      {\n        return [*this]()\n        {\n          return i;\n        }();\n      }\n    };\n\n  }\n\n  namespace test_enum_class_construction\n  {\n\n    enum class byte : unsigned char\n    {};\n\n    byte foo {42};\n\n  }\n\n  namespace test_constexpr_if\n  {\n\n    template <bool cond>\n    int f ()\n    {\n      if constexpr(cond)\n      {\n        return 13;\n      }\n      else\n      {\n        return 42;\n      }\n    }\n\n  }\n\n  namespace test_selection_statement_with_initializer\n  {\n\n    int f()\n    {\n      return 13;\n    }\n\n    int f2()\n    {\n      if (auto i = f(); i > 0)\n      {\n        return 3;\n      }\n\n      switch (auto i = f(); i + 4)\n      {\n      case 17:\n        return 2;\n\n      default:\n        return 1;\n      }\n    }\n\n  }\n\n  namespace test_template_argument_deduction_for_class_templates\n  {\n\n    template <typename T1, typename T2>\n    struct pair\n    {\n      pair (T1 p1, T2 p2)\n        : m1 {p1},\n          m2 {p2}\n      {}\n\n      T1 m1;\n      T2 m2;\n    };\n\n    void f()\n    {\n      [[maybe_unused]] auto p = pair{13, 42u};\n    }\n\n  }\n\n  namespace test_non_type_auto_template_parameters\n  {\n\n    template <auto n>\n    struct B\n    {};\n\n    B<5> b1;\n    B<'a'> b2;\n\n  }\n\n  namespace test_structured_bindings\n  {\n\n    int arr[2] = { 1, 2 };\n    std::pair<int, int> pr = { 1, 2 };\n\n    auto f1() -> int(&)[2]\n    {\n      return arr;\n    }\n\n    auto f2() -> std::pair<int, int>&\n    {\n      return pr;\n    }\n\n    struct S\n    {\n      int x1 : 2;\n      volatile double y1;\n    };\n\n    S f3()\n    {\n      return {};\n    }\n\n    auto [ x1, y1 ] = f1();\n    auto& [ xr1, yr1 ] = f1();\n    auto [ x2, y2 ] = f2();\n    auto& [ xr2, yr2 ] = f2();\n    const auto [ x3, y3 ] = f3();\n\n  }\n\n  namespace test_exception_spec_type_system\n  {\n\n    struct Good {};\n    struct Bad {};\n\n    void g1() noexcept;\n    void g2();\n\n    template<typename T>\n    Bad\n    f(T*, T*);\n\n    template<typename T1, typename T2>\n    Good\n    f(T1*, T2*);\n\n    static_assert (std::is_same_v<Good, decltype(f(g1, g2))>);\n\n  }\n\n  namespace test_inline_variables\n  {\n\n    template<class T> void f(T)\n    {}\n\n    template<class T> inline T g(T)\n    {\n      return T{};\n    }\n\n    template<> inline void f<>(int)\n    {}\n\n    template<> int g<>(int)\n    {\n      return 5;\n    }\n\n  }\n\n}  // namespace cxx17\n\n#endif  // (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 201703L\n\n\n\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 202002L\n\n#error \"This is not a C++20 compiler\"\n\n#else\n\n#include <version>\n\nnamespace cxx20\n{\n\n// As C++20 supports feature test macros in the standard, there is no\n// immediate need to actually test for feature availability on the\n// Autoconf side.\n\n}  // namespace cxx20\n\n#endif  // (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 202002L\n\n\n\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"\nthen :\n  eval $cachevar=yes\nelse case e in #(\n  e) eval $cachevar=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\n         CXX=\"$ac_save_CXX\" ;;\nesac\nfi\neval ac_res=\\$$cachevar\n\t       { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\nprintf \"%s\\n\" \"$ac_res\" >&6; }\n      if eval test x\\$$cachevar = xyes; then\n        CXX=\"$CXX $switch\"\n        if test -n \"$CXXCPP\" ; then\n          CXXCPP=\"$CXXCPP $switch\"\n        fi\n        ac_success=yes\n        break\n      fi\n    done\n  fi\n\n    if test x$ac_success = xno; then\n                    for alternative in ${ax_cxx_compile_alternatives}; do\n      for switch in -std=c++${alternative} +std=c++${alternative} \"-h std=c++${alternative}\" MSVC; do\n        if test x\"$switch\" = xMSVC; then\n                                        switch=-std:c++${alternative}\n          cachevar=`printf \"%s\\n\" \"ax_cv_cxx_compile_cxx20_${switch}_MSVC\" | sed \"$as_sed_sh\"`\n        else\n          cachevar=`printf \"%s\\n\" \"ax_cv_cxx_compile_cxx20_$switch\" | sed \"$as_sed_sh\"`\n        fi\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether $CXX supports C++20 features with $switch\" >&5\nprintf %s \"checking whether $CXX supports C++20 features with $switch... \" >&6; }\nif eval test \\${$cachevar+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_save_CXX=\"$CXX\"\n           CXX=\"$CXX $switch\"\n           cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n\n// If the compiler admits that it is not ready for C++11, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n// MSVC always sets __cplusplus to 199711L in older versions; newer versions\n// only set it correctly if /Zc:__cplusplus is specified as well as a\n// /std:c++NN switch:\n//\n// https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-__cplusplus/\n//\n// The value __cplusplus ought to have is available in _MSVC_LANG since\n// Visual Studio 2015 Update 3:\n//\n// https://learn.microsoft.com/en-us/cpp/preprocessor/predefined-macros\n//\n// This was also the first MSVC version to support C++14 so we can't use the\n// value of either __cplusplus or _MSVC_LANG to quickly rule out MSVC having\n// C++11 or C++14 support, but we can check _MSVC_LANG for C++17 and later.\n#elif __cplusplus < 201103L && !defined _MSC_VER\n\n#error \"This is not a C++11 compiler\"\n\n#else\n\nnamespace cxx11\n{\n\n  namespace test_static_assert\n  {\n\n    template <typename T>\n    struct check\n    {\n      static_assert(sizeof(int) <= sizeof(T), \"not big enough\");\n    };\n\n  }\n\n  namespace test_final_override\n  {\n\n    struct Base\n    {\n      virtual ~Base() {}\n      virtual void f() {}\n    };\n\n    struct Derived : public Base\n    {\n      virtual ~Derived() override {}\n      virtual void f() override {}\n    };\n\n  }\n\n  namespace test_double_right_angle_brackets\n  {\n\n    template < typename T >\n    struct check {};\n\n    typedef check<void> single_type;\n    typedef check<check<void>> double_type;\n    typedef check<check<check<void>>> triple_type;\n    typedef check<check<check<check<void>>>> quadruple_type;\n\n  }\n\n  namespace test_decltype\n  {\n\n    int\n    f()\n    {\n      int a = 1;\n      decltype(a) b = 2;\n      return a + b;\n    }\n\n  }\n\n  namespace test_type_deduction\n  {\n\n    template < typename T1, typename T2 >\n    struct is_same\n    {\n      static const bool value = false;\n    };\n\n    template < typename T >\n    struct is_same<T, T>\n    {\n      static const bool value = true;\n    };\n\n    template < typename T1, typename T2 >\n    auto\n    add(T1 a1, T2 a2) -> decltype(a1 + a2)\n    {\n      return a1 + a2;\n    }\n\n    int\n    test(const int c, volatile int v)\n    {\n      static_assert(is_same<int, decltype(0)>::value == true, \"\");\n      static_assert(is_same<int, decltype(c)>::value == false, \"\");\n      static_assert(is_same<int, decltype(v)>::value == false, \"\");\n      auto ac = c;\n      auto av = v;\n      auto sumi = ac + av + 'x';\n      auto sumf = ac + av + 1.0;\n      static_assert(is_same<int, decltype(ac)>::value == true, \"\");\n      static_assert(is_same<int, decltype(av)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumi)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumf)>::value == false, \"\");\n      static_assert(is_same<int, decltype(add(c, v))>::value == true, \"\");\n      return (sumf > 0.0) ? sumi : add(c, v);\n    }\n\n  }\n\n  namespace test_noexcept\n  {\n\n    int f() { return 0; }\n    int g() noexcept { return 0; }\n\n    static_assert(noexcept(f()) == false, \"\");\n    static_assert(noexcept(g()) == true, \"\");\n\n  }\n\n  namespace test_constexpr\n  {\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c_r(const CharT *const s, const unsigned long acc) noexcept\n    {\n      return *s ? strlen_c_r(s + 1, acc + 1) : acc;\n    }\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c(const CharT *const s) noexcept\n    {\n      return strlen_c_r(s, 0UL);\n    }\n\n    static_assert(strlen_c(\"\") == 0UL, \"\");\n    static_assert(strlen_c(\"1\") == 1UL, \"\");\n    static_assert(strlen_c(\"example\") == 7UL, \"\");\n    static_assert(strlen_c(\"another\\0example\") == 7UL, \"\");\n\n  }\n\n  namespace test_rvalue_references\n  {\n\n    template < int N >\n    struct answer\n    {\n      static constexpr int value = N;\n    };\n\n    answer<1> f(int&)       { return answer<1>(); }\n    answer<2> f(const int&) { return answer<2>(); }\n    answer<3> f(int&&)      { return answer<3>(); }\n\n    void\n    test()\n    {\n      int i = 0;\n      const int c = 0;\n      static_assert(decltype(f(i))::value == 1, \"\");\n      static_assert(decltype(f(c))::value == 2, \"\");\n      static_assert(decltype(f(0))::value == 3, \"\");\n    }\n\n  }\n\n  namespace test_uniform_initialization\n  {\n\n    struct test\n    {\n      static const int zero {};\n      static const int one {1};\n    };\n\n    static_assert(test::zero == 0, \"\");\n    static_assert(test::one == 1, \"\");\n\n  }\n\n  namespace test_lambdas\n  {\n\n    void\n    test1()\n    {\n      auto lambda1 = [](){};\n      auto lambda2 = lambda1;\n      lambda1();\n      lambda2();\n    }\n\n    int\n    test2()\n    {\n      auto a = [](int i, int j){ return i + j; }(1, 2);\n      auto b = []() -> int { return '0'; }();\n      auto c = [=](){ return a + b; }();\n      auto d = [&](){ return c; }();\n      auto e = [a, &b](int x) mutable {\n        const auto identity = [](int y){ return y; };\n        for (auto i = 0; i < a; ++i)\n          a += b--;\n        return x + identity(a + b);\n      }(0);\n      return a + b + c + d + e;\n    }\n\n    int\n    test3()\n    {\n      const auto nullary = [](){ return 0; };\n      const auto unary = [](int x){ return x; };\n      using nullary_t = decltype(nullary);\n      using unary_t = decltype(unary);\n      const auto higher1st = [](nullary_t f){ return f(); };\n      const auto higher2nd = [unary](nullary_t f1){\n        return [unary, f1](unary_t f2){ return f2(unary(f1())); };\n      };\n      return higher1st(nullary) + higher2nd(nullary)(unary);\n    }\n\n  }\n\n  namespace test_variadic_templates\n  {\n\n    template <int...>\n    struct sum;\n\n    template <int N0, int... N1toN>\n    struct sum<N0, N1toN...>\n    {\n      static constexpr auto value = N0 + sum<N1toN...>::value;\n    };\n\n    template <>\n    struct sum<>\n    {\n      static constexpr auto value = 0;\n    };\n\n    static_assert(sum<>::value == 0, \"\");\n    static_assert(sum<1>::value == 1, \"\");\n    static_assert(sum<23>::value == 23, \"\");\n    static_assert(sum<1, 2>::value == 3, \"\");\n    static_assert(sum<5, 5, 11>::value == 21, \"\");\n    static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, \"\");\n\n  }\n\n  // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae\n  // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function\n  // because of this.\n  namespace test_template_alias_sfinae\n  {\n\n    struct foo {};\n\n    template<typename T>\n    using member = typename T::member_type;\n\n    template<typename T>\n    void func(...) {}\n\n    template<typename T>\n    void func(member<T>*) {}\n\n    void test();\n\n    void test() { func<foo>(0); }\n\n  }\n\n}  // namespace cxx11\n\n#endif  // __cplusplus >= 201103L\n\n\n\n\n// If the compiler admits that it is not ready for C++14, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif __cplusplus < 201402L && !defined _MSC_VER\n\n#error \"This is not a C++14 compiler\"\n\n#else\n\nnamespace cxx14\n{\n\n  namespace test_polymorphic_lambdas\n  {\n\n    int\n    test()\n    {\n      const auto lambda = [](auto&&... args){\n        const auto istiny = [](auto x){\n          return (sizeof(x) == 1UL) ? 1 : 0;\n        };\n        const int aretiny[] = { istiny(args)... };\n        return aretiny[0];\n      };\n      return lambda(1, 1L, 1.0f, '1');\n    }\n\n  }\n\n  namespace test_binary_literals\n  {\n\n    constexpr auto ivii = 0b0000000000101010;\n    static_assert(ivii == 42, \"wrong value\");\n\n  }\n\n  namespace test_generalized_constexpr\n  {\n\n    template < typename CharT >\n    constexpr unsigned long\n    strlen_c(const CharT *const s) noexcept\n    {\n      auto length = 0UL;\n      for (auto p = s; *p; ++p)\n        ++length;\n      return length;\n    }\n\n    static_assert(strlen_c(\"\") == 0UL, \"\");\n    static_assert(strlen_c(\"x\") == 1UL, \"\");\n    static_assert(strlen_c(\"test\") == 4UL, \"\");\n    static_assert(strlen_c(\"another\\0test\") == 7UL, \"\");\n\n  }\n\n  namespace test_lambda_init_capture\n  {\n\n    int\n    test()\n    {\n      auto x = 0;\n      const auto lambda1 = [a = x](int b){ return a + b; };\n      const auto lambda2 = [a = lambda1(x)](){ return a; };\n      return lambda2();\n    }\n\n  }\n\n  namespace test_digit_separators\n  {\n\n    constexpr auto ten_million = 100'000'000;\n    static_assert(ten_million == 100000000, \"\");\n\n  }\n\n  namespace test_return_type_deduction\n  {\n\n    auto f(int& x) { return x; }\n    decltype(auto) g(int& x) { return x; }\n\n    template < typename T1, typename T2 >\n    struct is_same\n    {\n      static constexpr auto value = false;\n    };\n\n    template < typename T >\n    struct is_same<T, T>\n    {\n      static constexpr auto value = true;\n    };\n\n    int\n    test()\n    {\n      auto x = 0;\n      static_assert(is_same<int, decltype(f(x))>::value, \"\");\n      static_assert(is_same<int&, decltype(g(x))>::value, \"\");\n      return x;\n    }\n\n  }\n\n}  // namespace cxx14\n\n#endif  // __cplusplus >= 201402L\n\n\n\n\n// If the compiler admits that it is not ready for C++17, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 201703L\n\n#error \"This is not a C++17 compiler\"\n\n#else\n\n#include <initializer_list>\n#include <utility>\n#include <type_traits>\n\nnamespace cxx17\n{\n\n  namespace test_constexpr_lambdas\n  {\n\n    constexpr int foo = [](){return 42;}();\n\n  }\n\n  namespace test::nested_namespace::definitions\n  {\n\n  }\n\n  namespace test_fold_expression\n  {\n\n    template<typename... Args>\n    int multiply(Args... args)\n    {\n      return (args * ... * 1);\n    }\n\n    template<typename... Args>\n    bool all(Args... args)\n    {\n      return (args && ...);\n    }\n\n  }\n\n  namespace test_extended_static_assert\n  {\n\n    static_assert (true);\n\n  }\n\n  namespace test_auto_brace_init_list\n  {\n\n    auto foo = {5};\n    auto bar {5};\n\n    static_assert(std::is_same<std::initializer_list<int>, decltype(foo)>::value);\n    static_assert(std::is_same<int, decltype(bar)>::value);\n  }\n\n  namespace test_typename_in_template_template_parameter\n  {\n\n    template<template<typename> typename X> struct D;\n\n  }\n\n  namespace test_fallthrough_nodiscard_maybe_unused_attributes\n  {\n\n    int f1()\n    {\n      return 42;\n    }\n\n    [[nodiscard]] int f2()\n    {\n      [[maybe_unused]] auto unused = f1();\n\n      switch (f1())\n      {\n      case 17:\n        f1();\n        [[fallthrough]];\n      case 42:\n        f1();\n      }\n      return f1();\n    }\n\n  }\n\n  namespace test_extended_aggregate_initialization\n  {\n\n    struct base1\n    {\n      int b1, b2 = 42;\n    };\n\n    struct base2\n    {\n      base2() {\n        b3 = 42;\n      }\n      int b3;\n    };\n\n    struct derived : base1, base2\n    {\n        int d;\n    };\n\n    derived d1 {{1, 2}, {}, 4};  // full initialization\n    derived d2 {{}, {}, 4};      // value-initialized bases\n\n  }\n\n  namespace test_general_range_based_for_loop\n  {\n\n    struct iter\n    {\n      int i;\n\n      int& operator* ()\n      {\n        return i;\n      }\n\n      const int& operator* () const\n      {\n        return i;\n      }\n\n      iter& operator++()\n      {\n        ++i;\n        return *this;\n      }\n    };\n\n    struct sentinel\n    {\n      int i;\n    };\n\n    bool operator== (const iter& i, const sentinel& s)\n    {\n      return i.i == s.i;\n    }\n\n    bool operator!= (const iter& i, const sentinel& s)\n    {\n      return !(i == s);\n    }\n\n    struct range\n    {\n      iter begin() const\n      {\n        return {0};\n      }\n\n      sentinel end() const\n      {\n        return {5};\n      }\n    };\n\n    void f()\n    {\n      range r {};\n\n      for (auto i : r)\n      {\n        [[maybe_unused]] auto v = i;\n      }\n    }\n\n  }\n\n  namespace test_lambda_capture_asterisk_this_by_value\n  {\n\n    struct t\n    {\n      int i;\n      int foo()\n      {\n        return [*this]()\n        {\n          return i;\n        }();\n      }\n    };\n\n  }\n\n  namespace test_enum_class_construction\n  {\n\n    enum class byte : unsigned char\n    {};\n\n    byte foo {42};\n\n  }\n\n  namespace test_constexpr_if\n  {\n\n    template <bool cond>\n    int f ()\n    {\n      if constexpr(cond)\n      {\n        return 13;\n      }\n      else\n      {\n        return 42;\n      }\n    }\n\n  }\n\n  namespace test_selection_statement_with_initializer\n  {\n\n    int f()\n    {\n      return 13;\n    }\n\n    int f2()\n    {\n      if (auto i = f(); i > 0)\n      {\n        return 3;\n      }\n\n      switch (auto i = f(); i + 4)\n      {\n      case 17:\n        return 2;\n\n      default:\n        return 1;\n      }\n    }\n\n  }\n\n  namespace test_template_argument_deduction_for_class_templates\n  {\n\n    template <typename T1, typename T2>\n    struct pair\n    {\n      pair (T1 p1, T2 p2)\n        : m1 {p1},\n          m2 {p2}\n      {}\n\n      T1 m1;\n      T2 m2;\n    };\n\n    void f()\n    {\n      [[maybe_unused]] auto p = pair{13, 42u};\n    }\n\n  }\n\n  namespace test_non_type_auto_template_parameters\n  {\n\n    template <auto n>\n    struct B\n    {};\n\n    B<5> b1;\n    B<'a'> b2;\n\n  }\n\n  namespace test_structured_bindings\n  {\n\n    int arr[2] = { 1, 2 };\n    std::pair<int, int> pr = { 1, 2 };\n\n    auto f1() -> int(&)[2]\n    {\n      return arr;\n    }\n\n    auto f2() -> std::pair<int, int>&\n    {\n      return pr;\n    }\n\n    struct S\n    {\n      int x1 : 2;\n      volatile double y1;\n    };\n\n    S f3()\n    {\n      return {};\n    }\n\n    auto [ x1, y1 ] = f1();\n    auto& [ xr1, yr1 ] = f1();\n    auto [ x2, y2 ] = f2();\n    auto& [ xr2, yr2 ] = f2();\n    const auto [ x3, y3 ] = f3();\n\n  }\n\n  namespace test_exception_spec_type_system\n  {\n\n    struct Good {};\n    struct Bad {};\n\n    void g1() noexcept;\n    void g2();\n\n    template<typename T>\n    Bad\n    f(T*, T*);\n\n    template<typename T1, typename T2>\n    Good\n    f(T1*, T2*);\n\n    static_assert (std::is_same_v<Good, decltype(f(g1, g2))>);\n\n  }\n\n  namespace test_inline_variables\n  {\n\n    template<class T> void f(T)\n    {}\n\n    template<class T> inline T g(T)\n    {\n      return T{};\n    }\n\n    template<> inline void f<>(int)\n    {}\n\n    template<> int g<>(int)\n    {\n      return 5;\n    }\n\n  }\n\n}  // namespace cxx17\n\n#endif  // (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 201703L\n\n\n\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 202002L\n\n#error \"This is not a C++20 compiler\"\n\n#else\n\n#include <version>\n\nnamespace cxx20\n{\n\n// As C++20 supports feature test macros in the standard, there is no\n// immediate need to actually test for feature availability on the\n// Autoconf side.\n\n}  // namespace cxx20\n\n#endif  // (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 202002L\n\n\n\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"\nthen :\n  eval $cachevar=yes\nelse case e in #(\n  e) eval $cachevar=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\n           CXX=\"$ac_save_CXX\" ;;\nesac\nfi\neval ac_res=\\$$cachevar\n\t       { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\nprintf \"%s\\n\" \"$ac_res\" >&6; }\n        if eval test x\\$$cachevar = xyes; then\n          CXX=\"$CXX $switch\"\n          if test -n \"$CXXCPP\" ; then\n            CXXCPP=\"$CXXCPP $switch\"\n          fi\n          ac_success=yes\n          break\n        fi\n      done\n      if test x$ac_success = xyes; then\n        break\n      fi\n    done\n  fi\n  ac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n  if test x$ax_cxx_compile_cxx20_required = xtrue; then\n    if test x$ac_success = xno; then\n      as_fn_error $? \"*** A compiler with support for C++20 language features is required.\" \"$LINENO\" 5\n    fi\n  fi\n  if test x$ac_success = xno; then\n    HAVE_CXX20=0\n    { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: No compiler with C++20 support was found\" >&5\nprintf \"%s\\n\" \"$as_me: No compiler with C++20 support was found\" >&6;}\n  else\n    HAVE_CXX20=1\n\nprintf \"%s\\n\" \"#define HAVE_CXX20 1\" >>confdefs.h\n\n  fi\n\n\n    if test \"$HAVE_CXX20\" = \"1\";\n    then\n       PBX_CXX20=1\n    fi\n\n    if test \"${ENABLE_LATEST_CXX_STD}\" != \"yes\" ; then\n        CXX=\"${ast_cxx_check_std_save_CXX}\"\n        CXXCPP=\"${ast_cxx_check_std_save_CXXCPP}\"\n    fi\n\n\n    PBX_CXX23=0\n    if test \"${ENABLE_LATEST_CXX_STD}\" != \"yes\" ; then\n        ast_cxx_check_std_save_CXX=\"${CXX}\"\n        ast_cxx_check_std_save_CXXCPP=\"${CXXCPP}\"\n    fi\n      ax_cxx_compile_alternatives=\"23\"    ax_cxx_compile_cxx23_required=false\n  ac_ext=cpp\nac_cpp='$CXXCPP $CPPFLAGS'\nac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n  ac_success=no\n\n      { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether $CXX supports C++23 features by default\" >&5\nprintf %s \"checking whether $CXX supports C++23 features by default... \" >&6; }\nif test ${ax_cv_cxx_compile_cxx23+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n\n// If the compiler admits that it is not ready for C++11, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n// MSVC always sets __cplusplus to 199711L in older versions; newer versions\n// only set it correctly if /Zc:__cplusplus is specified as well as a\n// /std:c++NN switch:\n//\n// https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-__cplusplus/\n//\n// The value __cplusplus ought to have is available in _MSVC_LANG since\n// Visual Studio 2015 Update 3:\n//\n// https://learn.microsoft.com/en-us/cpp/preprocessor/predefined-macros\n//\n// This was also the first MSVC version to support C++14 so we can't use the\n// value of either __cplusplus or _MSVC_LANG to quickly rule out MSVC having\n// C++11 or C++14 support, but we can check _MSVC_LANG for C++17 and later.\n#elif __cplusplus < 201103L && !defined _MSC_VER\n\n#error \"This is not a C++11 compiler\"\n\n#else\n\nnamespace cxx11\n{\n\n  namespace test_static_assert\n  {\n\n    template <typename T>\n    struct check\n    {\n      static_assert(sizeof(int) <= sizeof(T), \"not big enough\");\n    };\n\n  }\n\n  namespace test_final_override\n  {\n\n    struct Base\n    {\n      virtual ~Base() {}\n      virtual void f() {}\n    };\n\n    struct Derived : public Base\n    {\n      virtual ~Derived() override {}\n      virtual void f() override {}\n    };\n\n  }\n\n  namespace test_double_right_angle_brackets\n  {\n\n    template < typename T >\n    struct check {};\n\n    typedef check<void> single_type;\n    typedef check<check<void>> double_type;\n    typedef check<check<check<void>>> triple_type;\n    typedef check<check<check<check<void>>>> quadruple_type;\n\n  }\n\n  namespace test_decltype\n  {\n\n    int\n    f()\n    {\n      int a = 1;\n      decltype(a) b = 2;\n      return a + b;\n    }\n\n  }\n\n  namespace test_type_deduction\n  {\n\n    template < typename T1, typename T2 >\n    struct is_same\n    {\n      static const bool value = false;\n    };\n\n    template < typename T >\n    struct is_same<T, T>\n    {\n      static const bool value = true;\n    };\n\n    template < typename T1, typename T2 >\n    auto\n    add(T1 a1, T2 a2) -> decltype(a1 + a2)\n    {\n      return a1 + a2;\n    }\n\n    int\n    test(const int c, volatile int v)\n    {\n      static_assert(is_same<int, decltype(0)>::value == true, \"\");\n      static_assert(is_same<int, decltype(c)>::value == false, \"\");\n      static_assert(is_same<int, decltype(v)>::value == false, \"\");\n      auto ac = c;\n      auto av = v;\n      auto sumi = ac + av + 'x';\n      auto sumf = ac + av + 1.0;\n      static_assert(is_same<int, decltype(ac)>::value == true, \"\");\n      static_assert(is_same<int, decltype(av)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumi)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumf)>::value == false, \"\");\n      static_assert(is_same<int, decltype(add(c, v))>::value == true, \"\");\n      return (sumf > 0.0) ? sumi : add(c, v);\n    }\n\n  }\n\n  namespace test_noexcept\n  {\n\n    int f() { return 0; }\n    int g() noexcept { return 0; }\n\n    static_assert(noexcept(f()) == false, \"\");\n    static_assert(noexcept(g()) == true, \"\");\n\n  }\n\n  namespace test_constexpr\n  {\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c_r(const CharT *const s, const unsigned long acc) noexcept\n    {\n      return *s ? strlen_c_r(s + 1, acc + 1) : acc;\n    }\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c(const CharT *const s) noexcept\n    {\n      return strlen_c_r(s, 0UL);\n    }\n\n    static_assert(strlen_c(\"\") == 0UL, \"\");\n    static_assert(strlen_c(\"1\") == 1UL, \"\");\n    static_assert(strlen_c(\"example\") == 7UL, \"\");\n    static_assert(strlen_c(\"another\\0example\") == 7UL, \"\");\n\n  }\n\n  namespace test_rvalue_references\n  {\n\n    template < int N >\n    struct answer\n    {\n      static constexpr int value = N;\n    };\n\n    answer<1> f(int&)       { return answer<1>(); }\n    answer<2> f(const int&) { return answer<2>(); }\n    answer<3> f(int&&)      { return answer<3>(); }\n\n    void\n    test()\n    {\n      int i = 0;\n      const int c = 0;\n      static_assert(decltype(f(i))::value == 1, \"\");\n      static_assert(decltype(f(c))::value == 2, \"\");\n      static_assert(decltype(f(0))::value == 3, \"\");\n    }\n\n  }\n\n  namespace test_uniform_initialization\n  {\n\n    struct test\n    {\n      static const int zero {};\n      static const int one {1};\n    };\n\n    static_assert(test::zero == 0, \"\");\n    static_assert(test::one == 1, \"\");\n\n  }\n\n  namespace test_lambdas\n  {\n\n    void\n    test1()\n    {\n      auto lambda1 = [](){};\n      auto lambda2 = lambda1;\n      lambda1();\n      lambda2();\n    }\n\n    int\n    test2()\n    {\n      auto a = [](int i, int j){ return i + j; }(1, 2);\n      auto b = []() -> int { return '0'; }();\n      auto c = [=](){ return a + b; }();\n      auto d = [&](){ return c; }();\n      auto e = [a, &b](int x) mutable {\n        const auto identity = [](int y){ return y; };\n        for (auto i = 0; i < a; ++i)\n          a += b--;\n        return x + identity(a + b);\n      }(0);\n      return a + b + c + d + e;\n    }\n\n    int\n    test3()\n    {\n      const auto nullary = [](){ return 0; };\n      const auto unary = [](int x){ return x; };\n      using nullary_t = decltype(nullary);\n      using unary_t = decltype(unary);\n      const auto higher1st = [](nullary_t f){ return f(); };\n      const auto higher2nd = [unary](nullary_t f1){\n        return [unary, f1](unary_t f2){ return f2(unary(f1())); };\n      };\n      return higher1st(nullary) + higher2nd(nullary)(unary);\n    }\n\n  }\n\n  namespace test_variadic_templates\n  {\n\n    template <int...>\n    struct sum;\n\n    template <int N0, int... N1toN>\n    struct sum<N0, N1toN...>\n    {\n      static constexpr auto value = N0 + sum<N1toN...>::value;\n    };\n\n    template <>\n    struct sum<>\n    {\n      static constexpr auto value = 0;\n    };\n\n    static_assert(sum<>::value == 0, \"\");\n    static_assert(sum<1>::value == 1, \"\");\n    static_assert(sum<23>::value == 23, \"\");\n    static_assert(sum<1, 2>::value == 3, \"\");\n    static_assert(sum<5, 5, 11>::value == 21, \"\");\n    static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, \"\");\n\n  }\n\n  // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae\n  // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function\n  // because of this.\n  namespace test_template_alias_sfinae\n  {\n\n    struct foo {};\n\n    template<typename T>\n    using member = typename T::member_type;\n\n    template<typename T>\n    void func(...) {}\n\n    template<typename T>\n    void func(member<T>*) {}\n\n    void test();\n\n    void test() { func<foo>(0); }\n\n  }\n\n}  // namespace cxx11\n\n#endif  // __cplusplus >= 201103L\n\n\n\n\n// If the compiler admits that it is not ready for C++14, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif __cplusplus < 201402L && !defined _MSC_VER\n\n#error \"This is not a C++14 compiler\"\n\n#else\n\nnamespace cxx14\n{\n\n  namespace test_polymorphic_lambdas\n  {\n\n    int\n    test()\n    {\n      const auto lambda = [](auto&&... args){\n        const auto istiny = [](auto x){\n          return (sizeof(x) == 1UL) ? 1 : 0;\n        };\n        const int aretiny[] = { istiny(args)... };\n        return aretiny[0];\n      };\n      return lambda(1, 1L, 1.0f, '1');\n    }\n\n  }\n\n  namespace test_binary_literals\n  {\n\n    constexpr auto ivii = 0b0000000000101010;\n    static_assert(ivii == 42, \"wrong value\");\n\n  }\n\n  namespace test_generalized_constexpr\n  {\n\n    template < typename CharT >\n    constexpr unsigned long\n    strlen_c(const CharT *const s) noexcept\n    {\n      auto length = 0UL;\n      for (auto p = s; *p; ++p)\n        ++length;\n      return length;\n    }\n\n    static_assert(strlen_c(\"\") == 0UL, \"\");\n    static_assert(strlen_c(\"x\") == 1UL, \"\");\n    static_assert(strlen_c(\"test\") == 4UL, \"\");\n    static_assert(strlen_c(\"another\\0test\") == 7UL, \"\");\n\n  }\n\n  namespace test_lambda_init_capture\n  {\n\n    int\n    test()\n    {\n      auto x = 0;\n      const auto lambda1 = [a = x](int b){ return a + b; };\n      const auto lambda2 = [a = lambda1(x)](){ return a; };\n      return lambda2();\n    }\n\n  }\n\n  namespace test_digit_separators\n  {\n\n    constexpr auto ten_million = 100'000'000;\n    static_assert(ten_million == 100000000, \"\");\n\n  }\n\n  namespace test_return_type_deduction\n  {\n\n    auto f(int& x) { return x; }\n    decltype(auto) g(int& x) { return x; }\n\n    template < typename T1, typename T2 >\n    struct is_same\n    {\n      static constexpr auto value = false;\n    };\n\n    template < typename T >\n    struct is_same<T, T>\n    {\n      static constexpr auto value = true;\n    };\n\n    int\n    test()\n    {\n      auto x = 0;\n      static_assert(is_same<int, decltype(f(x))>::value, \"\");\n      static_assert(is_same<int&, decltype(g(x))>::value, \"\");\n      return x;\n    }\n\n  }\n\n}  // namespace cxx14\n\n#endif  // __cplusplus >= 201402L\n\n\n\n\n// If the compiler admits that it is not ready for C++17, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 201703L\n\n#error \"This is not a C++17 compiler\"\n\n#else\n\n#include <initializer_list>\n#include <utility>\n#include <type_traits>\n\nnamespace cxx17\n{\n\n  namespace test_constexpr_lambdas\n  {\n\n    constexpr int foo = [](){return 42;}();\n\n  }\n\n  namespace test::nested_namespace::definitions\n  {\n\n  }\n\n  namespace test_fold_expression\n  {\n\n    template<typename... Args>\n    int multiply(Args... args)\n    {\n      return (args * ... * 1);\n    }\n\n    template<typename... Args>\n    bool all(Args... args)\n    {\n      return (args && ...);\n    }\n\n  }\n\n  namespace test_extended_static_assert\n  {\n\n    static_assert (true);\n\n  }\n\n  namespace test_auto_brace_init_list\n  {\n\n    auto foo = {5};\n    auto bar {5};\n\n    static_assert(std::is_same<std::initializer_list<int>, decltype(foo)>::value);\n    static_assert(std::is_same<int, decltype(bar)>::value);\n  }\n\n  namespace test_typename_in_template_template_parameter\n  {\n\n    template<template<typename> typename X> struct D;\n\n  }\n\n  namespace test_fallthrough_nodiscard_maybe_unused_attributes\n  {\n\n    int f1()\n    {\n      return 42;\n    }\n\n    [[nodiscard]] int f2()\n    {\n      [[maybe_unused]] auto unused = f1();\n\n      switch (f1())\n      {\n      case 17:\n        f1();\n        [[fallthrough]];\n      case 42:\n        f1();\n      }\n      return f1();\n    }\n\n  }\n\n  namespace test_extended_aggregate_initialization\n  {\n\n    struct base1\n    {\n      int b1, b2 = 42;\n    };\n\n    struct base2\n    {\n      base2() {\n        b3 = 42;\n      }\n      int b3;\n    };\n\n    struct derived : base1, base2\n    {\n        int d;\n    };\n\n    derived d1 {{1, 2}, {}, 4};  // full initialization\n    derived d2 {{}, {}, 4};      // value-initialized bases\n\n  }\n\n  namespace test_general_range_based_for_loop\n  {\n\n    struct iter\n    {\n      int i;\n\n      int& operator* ()\n      {\n        return i;\n      }\n\n      const int& operator* () const\n      {\n        return i;\n      }\n\n      iter& operator++()\n      {\n        ++i;\n        return *this;\n      }\n    };\n\n    struct sentinel\n    {\n      int i;\n    };\n\n    bool operator== (const iter& i, const sentinel& s)\n    {\n      return i.i == s.i;\n    }\n\n    bool operator!= (const iter& i, const sentinel& s)\n    {\n      return !(i == s);\n    }\n\n    struct range\n    {\n      iter begin() const\n      {\n        return {0};\n      }\n\n      sentinel end() const\n      {\n        return {5};\n      }\n    };\n\n    void f()\n    {\n      range r {};\n\n      for (auto i : r)\n      {\n        [[maybe_unused]] auto v = i;\n      }\n    }\n\n  }\n\n  namespace test_lambda_capture_asterisk_this_by_value\n  {\n\n    struct t\n    {\n      int i;\n      int foo()\n      {\n        return [*this]()\n        {\n          return i;\n        }();\n      }\n    };\n\n  }\n\n  namespace test_enum_class_construction\n  {\n\n    enum class byte : unsigned char\n    {};\n\n    byte foo {42};\n\n  }\n\n  namespace test_constexpr_if\n  {\n\n    template <bool cond>\n    int f ()\n    {\n      if constexpr(cond)\n      {\n        return 13;\n      }\n      else\n      {\n        return 42;\n      }\n    }\n\n  }\n\n  namespace test_selection_statement_with_initializer\n  {\n\n    int f()\n    {\n      return 13;\n    }\n\n    int f2()\n    {\n      if (auto i = f(); i > 0)\n      {\n        return 3;\n      }\n\n      switch (auto i = f(); i + 4)\n      {\n      case 17:\n        return 2;\n\n      default:\n        return 1;\n      }\n    }\n\n  }\n\n  namespace test_template_argument_deduction_for_class_templates\n  {\n\n    template <typename T1, typename T2>\n    struct pair\n    {\n      pair (T1 p1, T2 p2)\n        : m1 {p1},\n          m2 {p2}\n      {}\n\n      T1 m1;\n      T2 m2;\n    };\n\n    void f()\n    {\n      [[maybe_unused]] auto p = pair{13, 42u};\n    }\n\n  }\n\n  namespace test_non_type_auto_template_parameters\n  {\n\n    template <auto n>\n    struct B\n    {};\n\n    B<5> b1;\n    B<'a'> b2;\n\n  }\n\n  namespace test_structured_bindings\n  {\n\n    int arr[2] = { 1, 2 };\n    std::pair<int, int> pr = { 1, 2 };\n\n    auto f1() -> int(&)[2]\n    {\n      return arr;\n    }\n\n    auto f2() -> std::pair<int, int>&\n    {\n      return pr;\n    }\n\n    struct S\n    {\n      int x1 : 2;\n      volatile double y1;\n    };\n\n    S f3()\n    {\n      return {};\n    }\n\n    auto [ x1, y1 ] = f1();\n    auto& [ xr1, yr1 ] = f1();\n    auto [ x2, y2 ] = f2();\n    auto& [ xr2, yr2 ] = f2();\n    const auto [ x3, y3 ] = f3();\n\n  }\n\n  namespace test_exception_spec_type_system\n  {\n\n    struct Good {};\n    struct Bad {};\n\n    void g1() noexcept;\n    void g2();\n\n    template<typename T>\n    Bad\n    f(T*, T*);\n\n    template<typename T1, typename T2>\n    Good\n    f(T1*, T2*);\n\n    static_assert (std::is_same_v<Good, decltype(f(g1, g2))>);\n\n  }\n\n  namespace test_inline_variables\n  {\n\n    template<class T> void f(T)\n    {}\n\n    template<class T> inline T g(T)\n    {\n      return T{};\n    }\n\n    template<> inline void f<>(int)\n    {}\n\n    template<> int g<>(int)\n    {\n      return 5;\n    }\n\n  }\n\n}  // namespace cxx17\n\n#endif  // (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 201703L\n\n\n\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 202002L\n\n#error \"This is not a C++20 compiler\"\n\n#else\n\n#include <version>\n\nnamespace cxx20\n{\n\n// As C++20 supports feature test macros in the standard, there is no\n// immediate need to actually test for feature availability on the\n// Autoconf side.\n\n}  // namespace cxx20\n\n#endif  // (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 202002L\n\n\n\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 202302L\n\n#error \"This is not a C++23 compiler\"\n\n#else\n\n#include <version>\n\nnamespace cxx23\n{\n\n// As C++23 supports feature test macros in the standard, there is no\n// immediate need to actually test for feature availability on the\n// Autoconf side.\n\n}  // namespace cxx23\n\n#endif  // (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 202302L\n\n\n\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"\nthen :\n  ax_cv_cxx_compile_cxx23=yes\nelse case e in #(\n  e) ax_cv_cxx_compile_cxx23=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ax_cv_cxx_compile_cxx23\" >&5\nprintf \"%s\\n\" \"$ax_cv_cxx_compile_cxx23\" >&6; }\n    if test x$ax_cv_cxx_compile_cxx23 = xyes; then\n      ac_success=yes\n    fi\n\n    if test x$ac_success = xno; then\n    for alternative in ${ax_cxx_compile_alternatives}; do\n      switch=\"-std=gnu++${alternative}\"\n      cachevar=`printf \"%s\\n\" \"ax_cv_cxx_compile_cxx23_$switch\" | sed \"$as_sed_sh\"`\n      { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether $CXX supports C++23 features with $switch\" >&5\nprintf %s \"checking whether $CXX supports C++23 features with $switch... \" >&6; }\nif eval test \\${$cachevar+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_save_CXX=\"$CXX\"\n         CXX=\"$CXX $switch\"\n         cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n\n// If the compiler admits that it is not ready for C++11, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n// MSVC always sets __cplusplus to 199711L in older versions; newer versions\n// only set it correctly if /Zc:__cplusplus is specified as well as a\n// /std:c++NN switch:\n//\n// https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-__cplusplus/\n//\n// The value __cplusplus ought to have is available in _MSVC_LANG since\n// Visual Studio 2015 Update 3:\n//\n// https://learn.microsoft.com/en-us/cpp/preprocessor/predefined-macros\n//\n// This was also the first MSVC version to support C++14 so we can't use the\n// value of either __cplusplus or _MSVC_LANG to quickly rule out MSVC having\n// C++11 or C++14 support, but we can check _MSVC_LANG for C++17 and later.\n#elif __cplusplus < 201103L && !defined _MSC_VER\n\n#error \"This is not a C++11 compiler\"\n\n#else\n\nnamespace cxx11\n{\n\n  namespace test_static_assert\n  {\n\n    template <typename T>\n    struct check\n    {\n      static_assert(sizeof(int) <= sizeof(T), \"not big enough\");\n    };\n\n  }\n\n  namespace test_final_override\n  {\n\n    struct Base\n    {\n      virtual ~Base() {}\n      virtual void f() {}\n    };\n\n    struct Derived : public Base\n    {\n      virtual ~Derived() override {}\n      virtual void f() override {}\n    };\n\n  }\n\n  namespace test_double_right_angle_brackets\n  {\n\n    template < typename T >\n    struct check {};\n\n    typedef check<void> single_type;\n    typedef check<check<void>> double_type;\n    typedef check<check<check<void>>> triple_type;\n    typedef check<check<check<check<void>>>> quadruple_type;\n\n  }\n\n  namespace test_decltype\n  {\n\n    int\n    f()\n    {\n      int a = 1;\n      decltype(a) b = 2;\n      return a + b;\n    }\n\n  }\n\n  namespace test_type_deduction\n  {\n\n    template < typename T1, typename T2 >\n    struct is_same\n    {\n      static const bool value = false;\n    };\n\n    template < typename T >\n    struct is_same<T, T>\n    {\n      static const bool value = true;\n    };\n\n    template < typename T1, typename T2 >\n    auto\n    add(T1 a1, T2 a2) -> decltype(a1 + a2)\n    {\n      return a1 + a2;\n    }\n\n    int\n    test(const int c, volatile int v)\n    {\n      static_assert(is_same<int, decltype(0)>::value == true, \"\");\n      static_assert(is_same<int, decltype(c)>::value == false, \"\");\n      static_assert(is_same<int, decltype(v)>::value == false, \"\");\n      auto ac = c;\n      auto av = v;\n      auto sumi = ac + av + 'x';\n      auto sumf = ac + av + 1.0;\n      static_assert(is_same<int, decltype(ac)>::value == true, \"\");\n      static_assert(is_same<int, decltype(av)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumi)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumf)>::value == false, \"\");\n      static_assert(is_same<int, decltype(add(c, v))>::value == true, \"\");\n      return (sumf > 0.0) ? sumi : add(c, v);\n    }\n\n  }\n\n  namespace test_noexcept\n  {\n\n    int f() { return 0; }\n    int g() noexcept { return 0; }\n\n    static_assert(noexcept(f()) == false, \"\");\n    static_assert(noexcept(g()) == true, \"\");\n\n  }\n\n  namespace test_constexpr\n  {\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c_r(const CharT *const s, const unsigned long acc) noexcept\n    {\n      return *s ? strlen_c_r(s + 1, acc + 1) : acc;\n    }\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c(const CharT *const s) noexcept\n    {\n      return strlen_c_r(s, 0UL);\n    }\n\n    static_assert(strlen_c(\"\") == 0UL, \"\");\n    static_assert(strlen_c(\"1\") == 1UL, \"\");\n    static_assert(strlen_c(\"example\") == 7UL, \"\");\n    static_assert(strlen_c(\"another\\0example\") == 7UL, \"\");\n\n  }\n\n  namespace test_rvalue_references\n  {\n\n    template < int N >\n    struct answer\n    {\n      static constexpr int value = N;\n    };\n\n    answer<1> f(int&)       { return answer<1>(); }\n    answer<2> f(const int&) { return answer<2>(); }\n    answer<3> f(int&&)      { return answer<3>(); }\n\n    void\n    test()\n    {\n      int i = 0;\n      const int c = 0;\n      static_assert(decltype(f(i))::value == 1, \"\");\n      static_assert(decltype(f(c))::value == 2, \"\");\n      static_assert(decltype(f(0))::value == 3, \"\");\n    }\n\n  }\n\n  namespace test_uniform_initialization\n  {\n\n    struct test\n    {\n      static const int zero {};\n      static const int one {1};\n    };\n\n    static_assert(test::zero == 0, \"\");\n    static_assert(test::one == 1, \"\");\n\n  }\n\n  namespace test_lambdas\n  {\n\n    void\n    test1()\n    {\n      auto lambda1 = [](){};\n      auto lambda2 = lambda1;\n      lambda1();\n      lambda2();\n    }\n\n    int\n    test2()\n    {\n      auto a = [](int i, int j){ return i + j; }(1, 2);\n      auto b = []() -> int { return '0'; }();\n      auto c = [=](){ return a + b; }();\n      auto d = [&](){ return c; }();\n      auto e = [a, &b](int x) mutable {\n        const auto identity = [](int y){ return y; };\n        for (auto i = 0; i < a; ++i)\n          a += b--;\n        return x + identity(a + b);\n      }(0);\n      return a + b + c + d + e;\n    }\n\n    int\n    test3()\n    {\n      const auto nullary = [](){ return 0; };\n      const auto unary = [](int x){ return x; };\n      using nullary_t = decltype(nullary);\n      using unary_t = decltype(unary);\n      const auto higher1st = [](nullary_t f){ return f(); };\n      const auto higher2nd = [unary](nullary_t f1){\n        return [unary, f1](unary_t f2){ return f2(unary(f1())); };\n      };\n      return higher1st(nullary) + higher2nd(nullary)(unary);\n    }\n\n  }\n\n  namespace test_variadic_templates\n  {\n\n    template <int...>\n    struct sum;\n\n    template <int N0, int... N1toN>\n    struct sum<N0, N1toN...>\n    {\n      static constexpr auto value = N0 + sum<N1toN...>::value;\n    };\n\n    template <>\n    struct sum<>\n    {\n      static constexpr auto value = 0;\n    };\n\n    static_assert(sum<>::value == 0, \"\");\n    static_assert(sum<1>::value == 1, \"\");\n    static_assert(sum<23>::value == 23, \"\");\n    static_assert(sum<1, 2>::value == 3, \"\");\n    static_assert(sum<5, 5, 11>::value == 21, \"\");\n    static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, \"\");\n\n  }\n\n  // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae\n  // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function\n  // because of this.\n  namespace test_template_alias_sfinae\n  {\n\n    struct foo {};\n\n    template<typename T>\n    using member = typename T::member_type;\n\n    template<typename T>\n    void func(...) {}\n\n    template<typename T>\n    void func(member<T>*) {}\n\n    void test();\n\n    void test() { func<foo>(0); }\n\n  }\n\n}  // namespace cxx11\n\n#endif  // __cplusplus >= 201103L\n\n\n\n\n// If the compiler admits that it is not ready for C++14, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif __cplusplus < 201402L && !defined _MSC_VER\n\n#error \"This is not a C++14 compiler\"\n\n#else\n\nnamespace cxx14\n{\n\n  namespace test_polymorphic_lambdas\n  {\n\n    int\n    test()\n    {\n      const auto lambda = [](auto&&... args){\n        const auto istiny = [](auto x){\n          return (sizeof(x) == 1UL) ? 1 : 0;\n        };\n        const int aretiny[] = { istiny(args)... };\n        return aretiny[0];\n      };\n      return lambda(1, 1L, 1.0f, '1');\n    }\n\n  }\n\n  namespace test_binary_literals\n  {\n\n    constexpr auto ivii = 0b0000000000101010;\n    static_assert(ivii == 42, \"wrong value\");\n\n  }\n\n  namespace test_generalized_constexpr\n  {\n\n    template < typename CharT >\n    constexpr unsigned long\n    strlen_c(const CharT *const s) noexcept\n    {\n      auto length = 0UL;\n      for (auto p = s; *p; ++p)\n        ++length;\n      return length;\n    }\n\n    static_assert(strlen_c(\"\") == 0UL, \"\");\n    static_assert(strlen_c(\"x\") == 1UL, \"\");\n    static_assert(strlen_c(\"test\") == 4UL, \"\");\n    static_assert(strlen_c(\"another\\0test\") == 7UL, \"\");\n\n  }\n\n  namespace test_lambda_init_capture\n  {\n\n    int\n    test()\n    {\n      auto x = 0;\n      const auto lambda1 = [a = x](int b){ return a + b; };\n      const auto lambda2 = [a = lambda1(x)](){ return a; };\n      return lambda2();\n    }\n\n  }\n\n  namespace test_digit_separators\n  {\n\n    constexpr auto ten_million = 100'000'000;\n    static_assert(ten_million == 100000000, \"\");\n\n  }\n\n  namespace test_return_type_deduction\n  {\n\n    auto f(int& x) { return x; }\n    decltype(auto) g(int& x) { return x; }\n\n    template < typename T1, typename T2 >\n    struct is_same\n    {\n      static constexpr auto value = false;\n    };\n\n    template < typename T >\n    struct is_same<T, T>\n    {\n      static constexpr auto value = true;\n    };\n\n    int\n    test()\n    {\n      auto x = 0;\n      static_assert(is_same<int, decltype(f(x))>::value, \"\");\n      static_assert(is_same<int&, decltype(g(x))>::value, \"\");\n      return x;\n    }\n\n  }\n\n}  // namespace cxx14\n\n#endif  // __cplusplus >= 201402L\n\n\n\n\n// If the compiler admits that it is not ready for C++17, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 201703L\n\n#error \"This is not a C++17 compiler\"\n\n#else\n\n#include <initializer_list>\n#include <utility>\n#include <type_traits>\n\nnamespace cxx17\n{\n\n  namespace test_constexpr_lambdas\n  {\n\n    constexpr int foo = [](){return 42;}();\n\n  }\n\n  namespace test::nested_namespace::definitions\n  {\n\n  }\n\n  namespace test_fold_expression\n  {\n\n    template<typename... Args>\n    int multiply(Args... args)\n    {\n      return (args * ... * 1);\n    }\n\n    template<typename... Args>\n    bool all(Args... args)\n    {\n      return (args && ...);\n    }\n\n  }\n\n  namespace test_extended_static_assert\n  {\n\n    static_assert (true);\n\n  }\n\n  namespace test_auto_brace_init_list\n  {\n\n    auto foo = {5};\n    auto bar {5};\n\n    static_assert(std::is_same<std::initializer_list<int>, decltype(foo)>::value);\n    static_assert(std::is_same<int, decltype(bar)>::value);\n  }\n\n  namespace test_typename_in_template_template_parameter\n  {\n\n    template<template<typename> typename X> struct D;\n\n  }\n\n  namespace test_fallthrough_nodiscard_maybe_unused_attributes\n  {\n\n    int f1()\n    {\n      return 42;\n    }\n\n    [[nodiscard]] int f2()\n    {\n      [[maybe_unused]] auto unused = f1();\n\n      switch (f1())\n      {\n      case 17:\n        f1();\n        [[fallthrough]];\n      case 42:\n        f1();\n      }\n      return f1();\n    }\n\n  }\n\n  namespace test_extended_aggregate_initialization\n  {\n\n    struct base1\n    {\n      int b1, b2 = 42;\n    };\n\n    struct base2\n    {\n      base2() {\n        b3 = 42;\n      }\n      int b3;\n    };\n\n    struct derived : base1, base2\n    {\n        int d;\n    };\n\n    derived d1 {{1, 2}, {}, 4};  // full initialization\n    derived d2 {{}, {}, 4};      // value-initialized bases\n\n  }\n\n  namespace test_general_range_based_for_loop\n  {\n\n    struct iter\n    {\n      int i;\n\n      int& operator* ()\n      {\n        return i;\n      }\n\n      const int& operator* () const\n      {\n        return i;\n      }\n\n      iter& operator++()\n      {\n        ++i;\n        return *this;\n      }\n    };\n\n    struct sentinel\n    {\n      int i;\n    };\n\n    bool operator== (const iter& i, const sentinel& s)\n    {\n      return i.i == s.i;\n    }\n\n    bool operator!= (const iter& i, const sentinel& s)\n    {\n      return !(i == s);\n    }\n\n    struct range\n    {\n      iter begin() const\n      {\n        return {0};\n      }\n\n      sentinel end() const\n      {\n        return {5};\n      }\n    };\n\n    void f()\n    {\n      range r {};\n\n      for (auto i : r)\n      {\n        [[maybe_unused]] auto v = i;\n      }\n    }\n\n  }\n\n  namespace test_lambda_capture_asterisk_this_by_value\n  {\n\n    struct t\n    {\n      int i;\n      int foo()\n      {\n        return [*this]()\n        {\n          return i;\n        }();\n      }\n    };\n\n  }\n\n  namespace test_enum_class_construction\n  {\n\n    enum class byte : unsigned char\n    {};\n\n    byte foo {42};\n\n  }\n\n  namespace test_constexpr_if\n  {\n\n    template <bool cond>\n    int f ()\n    {\n      if constexpr(cond)\n      {\n        return 13;\n      }\n      else\n      {\n        return 42;\n      }\n    }\n\n  }\n\n  namespace test_selection_statement_with_initializer\n  {\n\n    int f()\n    {\n      return 13;\n    }\n\n    int f2()\n    {\n      if (auto i = f(); i > 0)\n      {\n        return 3;\n      }\n\n      switch (auto i = f(); i + 4)\n      {\n      case 17:\n        return 2;\n\n      default:\n        return 1;\n      }\n    }\n\n  }\n\n  namespace test_template_argument_deduction_for_class_templates\n  {\n\n    template <typename T1, typename T2>\n    struct pair\n    {\n      pair (T1 p1, T2 p2)\n        : m1 {p1},\n          m2 {p2}\n      {}\n\n      T1 m1;\n      T2 m2;\n    };\n\n    void f()\n    {\n      [[maybe_unused]] auto p = pair{13, 42u};\n    }\n\n  }\n\n  namespace test_non_type_auto_template_parameters\n  {\n\n    template <auto n>\n    struct B\n    {};\n\n    B<5> b1;\n    B<'a'> b2;\n\n  }\n\n  namespace test_structured_bindings\n  {\n\n    int arr[2] = { 1, 2 };\n    std::pair<int, int> pr = { 1, 2 };\n\n    auto f1() -> int(&)[2]\n    {\n      return arr;\n    }\n\n    auto f2() -> std::pair<int, int>&\n    {\n      return pr;\n    }\n\n    struct S\n    {\n      int x1 : 2;\n      volatile double y1;\n    };\n\n    S f3()\n    {\n      return {};\n    }\n\n    auto [ x1, y1 ] = f1();\n    auto& [ xr1, yr1 ] = f1();\n    auto [ x2, y2 ] = f2();\n    auto& [ xr2, yr2 ] = f2();\n    const auto [ x3, y3 ] = f3();\n\n  }\n\n  namespace test_exception_spec_type_system\n  {\n\n    struct Good {};\n    struct Bad {};\n\n    void g1() noexcept;\n    void g2();\n\n    template<typename T>\n    Bad\n    f(T*, T*);\n\n    template<typename T1, typename T2>\n    Good\n    f(T1*, T2*);\n\n    static_assert (std::is_same_v<Good, decltype(f(g1, g2))>);\n\n  }\n\n  namespace test_inline_variables\n  {\n\n    template<class T> void f(T)\n    {}\n\n    template<class T> inline T g(T)\n    {\n      return T{};\n    }\n\n    template<> inline void f<>(int)\n    {}\n\n    template<> int g<>(int)\n    {\n      return 5;\n    }\n\n  }\n\n}  // namespace cxx17\n\n#endif  // (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 201703L\n\n\n\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 202002L\n\n#error \"This is not a C++20 compiler\"\n\n#else\n\n#include <version>\n\nnamespace cxx20\n{\n\n// As C++20 supports feature test macros in the standard, there is no\n// immediate need to actually test for feature availability on the\n// Autoconf side.\n\n}  // namespace cxx20\n\n#endif  // (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 202002L\n\n\n\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 202302L\n\n#error \"This is not a C++23 compiler\"\n\n#else\n\n#include <version>\n\nnamespace cxx23\n{\n\n// As C++23 supports feature test macros in the standard, there is no\n// immediate need to actually test for feature availability on the\n// Autoconf side.\n\n}  // namespace cxx23\n\n#endif  // (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 202302L\n\n\n\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"\nthen :\n  eval $cachevar=yes\nelse case e in #(\n  e) eval $cachevar=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\n         CXX=\"$ac_save_CXX\" ;;\nesac\nfi\neval ac_res=\\$$cachevar\n\t       { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\nprintf \"%s\\n\" \"$ac_res\" >&6; }\n      if eval test x\\$$cachevar = xyes; then\n        CXX=\"$CXX $switch\"\n        if test -n \"$CXXCPP\" ; then\n          CXXCPP=\"$CXXCPP $switch\"\n        fi\n        ac_success=yes\n        break\n      fi\n    done\n  fi\n\n    if test x$ac_success = xno; then\n                    for alternative in ${ax_cxx_compile_alternatives}; do\n      for switch in -std=c++${alternative} +std=c++${alternative} \"-h std=c++${alternative}\" MSVC; do\n        if test x\"$switch\" = xMSVC; then\n                                        switch=-std:c++${alternative}\n          cachevar=`printf \"%s\\n\" \"ax_cv_cxx_compile_cxx23_${switch}_MSVC\" | sed \"$as_sed_sh\"`\n        else\n          cachevar=`printf \"%s\\n\" \"ax_cv_cxx_compile_cxx23_$switch\" | sed \"$as_sed_sh\"`\n        fi\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether $CXX supports C++23 features with $switch\" >&5\nprintf %s \"checking whether $CXX supports C++23 features with $switch... \" >&6; }\nif eval test \\${$cachevar+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_save_CXX=\"$CXX\"\n           CXX=\"$CXX $switch\"\n           cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n\n// If the compiler admits that it is not ready for C++11, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n// MSVC always sets __cplusplus to 199711L in older versions; newer versions\n// only set it correctly if /Zc:__cplusplus is specified as well as a\n// /std:c++NN switch:\n//\n// https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-__cplusplus/\n//\n// The value __cplusplus ought to have is available in _MSVC_LANG since\n// Visual Studio 2015 Update 3:\n//\n// https://learn.microsoft.com/en-us/cpp/preprocessor/predefined-macros\n//\n// This was also the first MSVC version to support C++14 so we can't use the\n// value of either __cplusplus or _MSVC_LANG to quickly rule out MSVC having\n// C++11 or C++14 support, but we can check _MSVC_LANG for C++17 and later.\n#elif __cplusplus < 201103L && !defined _MSC_VER\n\n#error \"This is not a C++11 compiler\"\n\n#else\n\nnamespace cxx11\n{\n\n  namespace test_static_assert\n  {\n\n    template <typename T>\n    struct check\n    {\n      static_assert(sizeof(int) <= sizeof(T), \"not big enough\");\n    };\n\n  }\n\n  namespace test_final_override\n  {\n\n    struct Base\n    {\n      virtual ~Base() {}\n      virtual void f() {}\n    };\n\n    struct Derived : public Base\n    {\n      virtual ~Derived() override {}\n      virtual void f() override {}\n    };\n\n  }\n\n  namespace test_double_right_angle_brackets\n  {\n\n    template < typename T >\n    struct check {};\n\n    typedef check<void> single_type;\n    typedef check<check<void>> double_type;\n    typedef check<check<check<void>>> triple_type;\n    typedef check<check<check<check<void>>>> quadruple_type;\n\n  }\n\n  namespace test_decltype\n  {\n\n    int\n    f()\n    {\n      int a = 1;\n      decltype(a) b = 2;\n      return a + b;\n    }\n\n  }\n\n  namespace test_type_deduction\n  {\n\n    template < typename T1, typename T2 >\n    struct is_same\n    {\n      static const bool value = false;\n    };\n\n    template < typename T >\n    struct is_same<T, T>\n    {\n      static const bool value = true;\n    };\n\n    template < typename T1, typename T2 >\n    auto\n    add(T1 a1, T2 a2) -> decltype(a1 + a2)\n    {\n      return a1 + a2;\n    }\n\n    int\n    test(const int c, volatile int v)\n    {\n      static_assert(is_same<int, decltype(0)>::value == true, \"\");\n      static_assert(is_same<int, decltype(c)>::value == false, \"\");\n      static_assert(is_same<int, decltype(v)>::value == false, \"\");\n      auto ac = c;\n      auto av = v;\n      auto sumi = ac + av + 'x';\n      auto sumf = ac + av + 1.0;\n      static_assert(is_same<int, decltype(ac)>::value == true, \"\");\n      static_assert(is_same<int, decltype(av)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumi)>::value == true, \"\");\n      static_assert(is_same<int, decltype(sumf)>::value == false, \"\");\n      static_assert(is_same<int, decltype(add(c, v))>::value == true, \"\");\n      return (sumf > 0.0) ? sumi : add(c, v);\n    }\n\n  }\n\n  namespace test_noexcept\n  {\n\n    int f() { return 0; }\n    int g() noexcept { return 0; }\n\n    static_assert(noexcept(f()) == false, \"\");\n    static_assert(noexcept(g()) == true, \"\");\n\n  }\n\n  namespace test_constexpr\n  {\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c_r(const CharT *const s, const unsigned long acc) noexcept\n    {\n      return *s ? strlen_c_r(s + 1, acc + 1) : acc;\n    }\n\n    template < typename CharT >\n    unsigned long constexpr\n    strlen_c(const CharT *const s) noexcept\n    {\n      return strlen_c_r(s, 0UL);\n    }\n\n    static_assert(strlen_c(\"\") == 0UL, \"\");\n    static_assert(strlen_c(\"1\") == 1UL, \"\");\n    static_assert(strlen_c(\"example\") == 7UL, \"\");\n    static_assert(strlen_c(\"another\\0example\") == 7UL, \"\");\n\n  }\n\n  namespace test_rvalue_references\n  {\n\n    template < int N >\n    struct answer\n    {\n      static constexpr int value = N;\n    };\n\n    answer<1> f(int&)       { return answer<1>(); }\n    answer<2> f(const int&) { return answer<2>(); }\n    answer<3> f(int&&)      { return answer<3>(); }\n\n    void\n    test()\n    {\n      int i = 0;\n      const int c = 0;\n      static_assert(decltype(f(i))::value == 1, \"\");\n      static_assert(decltype(f(c))::value == 2, \"\");\n      static_assert(decltype(f(0))::value == 3, \"\");\n    }\n\n  }\n\n  namespace test_uniform_initialization\n  {\n\n    struct test\n    {\n      static const int zero {};\n      static const int one {1};\n    };\n\n    static_assert(test::zero == 0, \"\");\n    static_assert(test::one == 1, \"\");\n\n  }\n\n  namespace test_lambdas\n  {\n\n    void\n    test1()\n    {\n      auto lambda1 = [](){};\n      auto lambda2 = lambda1;\n      lambda1();\n      lambda2();\n    }\n\n    int\n    test2()\n    {\n      auto a = [](int i, int j){ return i + j; }(1, 2);\n      auto b = []() -> int { return '0'; }();\n      auto c = [=](){ return a + b; }();\n      auto d = [&](){ return c; }();\n      auto e = [a, &b](int x) mutable {\n        const auto identity = [](int y){ return y; };\n        for (auto i = 0; i < a; ++i)\n          a += b--;\n        return x + identity(a + b);\n      }(0);\n      return a + b + c + d + e;\n    }\n\n    int\n    test3()\n    {\n      const auto nullary = [](){ return 0; };\n      const auto unary = [](int x){ return x; };\n      using nullary_t = decltype(nullary);\n      using unary_t = decltype(unary);\n      const auto higher1st = [](nullary_t f){ return f(); };\n      const auto higher2nd = [unary](nullary_t f1){\n        return [unary, f1](unary_t f2){ return f2(unary(f1())); };\n      };\n      return higher1st(nullary) + higher2nd(nullary)(unary);\n    }\n\n  }\n\n  namespace test_variadic_templates\n  {\n\n    template <int...>\n    struct sum;\n\n    template <int N0, int... N1toN>\n    struct sum<N0, N1toN...>\n    {\n      static constexpr auto value = N0 + sum<N1toN...>::value;\n    };\n\n    template <>\n    struct sum<>\n    {\n      static constexpr auto value = 0;\n    };\n\n    static_assert(sum<>::value == 0, \"\");\n    static_assert(sum<1>::value == 1, \"\");\n    static_assert(sum<23>::value == 23, \"\");\n    static_assert(sum<1, 2>::value == 3, \"\");\n    static_assert(sum<5, 5, 11>::value == 21, \"\");\n    static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, \"\");\n\n  }\n\n  // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae\n  // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function\n  // because of this.\n  namespace test_template_alias_sfinae\n  {\n\n    struct foo {};\n\n    template<typename T>\n    using member = typename T::member_type;\n\n    template<typename T>\n    void func(...) {}\n\n    template<typename T>\n    void func(member<T>*) {}\n\n    void test();\n\n    void test() { func<foo>(0); }\n\n  }\n\n}  // namespace cxx11\n\n#endif  // __cplusplus >= 201103L\n\n\n\n\n// If the compiler admits that it is not ready for C++14, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif __cplusplus < 201402L && !defined _MSC_VER\n\n#error \"This is not a C++14 compiler\"\n\n#else\n\nnamespace cxx14\n{\n\n  namespace test_polymorphic_lambdas\n  {\n\n    int\n    test()\n    {\n      const auto lambda = [](auto&&... args){\n        const auto istiny = [](auto x){\n          return (sizeof(x) == 1UL) ? 1 : 0;\n        };\n        const int aretiny[] = { istiny(args)... };\n        return aretiny[0];\n      };\n      return lambda(1, 1L, 1.0f, '1');\n    }\n\n  }\n\n  namespace test_binary_literals\n  {\n\n    constexpr auto ivii = 0b0000000000101010;\n    static_assert(ivii == 42, \"wrong value\");\n\n  }\n\n  namespace test_generalized_constexpr\n  {\n\n    template < typename CharT >\n    constexpr unsigned long\n    strlen_c(const CharT *const s) noexcept\n    {\n      auto length = 0UL;\n      for (auto p = s; *p; ++p)\n        ++length;\n      return length;\n    }\n\n    static_assert(strlen_c(\"\") == 0UL, \"\");\n    static_assert(strlen_c(\"x\") == 1UL, \"\");\n    static_assert(strlen_c(\"test\") == 4UL, \"\");\n    static_assert(strlen_c(\"another\\0test\") == 7UL, \"\");\n\n  }\n\n  namespace test_lambda_init_capture\n  {\n\n    int\n    test()\n    {\n      auto x = 0;\n      const auto lambda1 = [a = x](int b){ return a + b; };\n      const auto lambda2 = [a = lambda1(x)](){ return a; };\n      return lambda2();\n    }\n\n  }\n\n  namespace test_digit_separators\n  {\n\n    constexpr auto ten_million = 100'000'000;\n    static_assert(ten_million == 100000000, \"\");\n\n  }\n\n  namespace test_return_type_deduction\n  {\n\n    auto f(int& x) { return x; }\n    decltype(auto) g(int& x) { return x; }\n\n    template < typename T1, typename T2 >\n    struct is_same\n    {\n      static constexpr auto value = false;\n    };\n\n    template < typename T >\n    struct is_same<T, T>\n    {\n      static constexpr auto value = true;\n    };\n\n    int\n    test()\n    {\n      auto x = 0;\n      static_assert(is_same<int, decltype(f(x))>::value, \"\");\n      static_assert(is_same<int&, decltype(g(x))>::value, \"\");\n      return x;\n    }\n\n  }\n\n}  // namespace cxx14\n\n#endif  // __cplusplus >= 201402L\n\n\n\n\n// If the compiler admits that it is not ready for C++17, why torture it?\n// Hopefully, this will speed up the test.\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 201703L\n\n#error \"This is not a C++17 compiler\"\n\n#else\n\n#include <initializer_list>\n#include <utility>\n#include <type_traits>\n\nnamespace cxx17\n{\n\n  namespace test_constexpr_lambdas\n  {\n\n    constexpr int foo = [](){return 42;}();\n\n  }\n\n  namespace test::nested_namespace::definitions\n  {\n\n  }\n\n  namespace test_fold_expression\n  {\n\n    template<typename... Args>\n    int multiply(Args... args)\n    {\n      return (args * ... * 1);\n    }\n\n    template<typename... Args>\n    bool all(Args... args)\n    {\n      return (args && ...);\n    }\n\n  }\n\n  namespace test_extended_static_assert\n  {\n\n    static_assert (true);\n\n  }\n\n  namespace test_auto_brace_init_list\n  {\n\n    auto foo = {5};\n    auto bar {5};\n\n    static_assert(std::is_same<std::initializer_list<int>, decltype(foo)>::value);\n    static_assert(std::is_same<int, decltype(bar)>::value);\n  }\n\n  namespace test_typename_in_template_template_parameter\n  {\n\n    template<template<typename> typename X> struct D;\n\n  }\n\n  namespace test_fallthrough_nodiscard_maybe_unused_attributes\n  {\n\n    int f1()\n    {\n      return 42;\n    }\n\n    [[nodiscard]] int f2()\n    {\n      [[maybe_unused]] auto unused = f1();\n\n      switch (f1())\n      {\n      case 17:\n        f1();\n        [[fallthrough]];\n      case 42:\n        f1();\n      }\n      return f1();\n    }\n\n  }\n\n  namespace test_extended_aggregate_initialization\n  {\n\n    struct base1\n    {\n      int b1, b2 = 42;\n    };\n\n    struct base2\n    {\n      base2() {\n        b3 = 42;\n      }\n      int b3;\n    };\n\n    struct derived : base1, base2\n    {\n        int d;\n    };\n\n    derived d1 {{1, 2}, {}, 4};  // full initialization\n    derived d2 {{}, {}, 4};      // value-initialized bases\n\n  }\n\n  namespace test_general_range_based_for_loop\n  {\n\n    struct iter\n    {\n      int i;\n\n      int& operator* ()\n      {\n        return i;\n      }\n\n      const int& operator* () const\n      {\n        return i;\n      }\n\n      iter& operator++()\n      {\n        ++i;\n        return *this;\n      }\n    };\n\n    struct sentinel\n    {\n      int i;\n    };\n\n    bool operator== (const iter& i, const sentinel& s)\n    {\n      return i.i == s.i;\n    }\n\n    bool operator!= (const iter& i, const sentinel& s)\n    {\n      return !(i == s);\n    }\n\n    struct range\n    {\n      iter begin() const\n      {\n        return {0};\n      }\n\n      sentinel end() const\n      {\n        return {5};\n      }\n    };\n\n    void f()\n    {\n      range r {};\n\n      for (auto i : r)\n      {\n        [[maybe_unused]] auto v = i;\n      }\n    }\n\n  }\n\n  namespace test_lambda_capture_asterisk_this_by_value\n  {\n\n    struct t\n    {\n      int i;\n      int foo()\n      {\n        return [*this]()\n        {\n          return i;\n        }();\n      }\n    };\n\n  }\n\n  namespace test_enum_class_construction\n  {\n\n    enum class byte : unsigned char\n    {};\n\n    byte foo {42};\n\n  }\n\n  namespace test_constexpr_if\n  {\n\n    template <bool cond>\n    int f ()\n    {\n      if constexpr(cond)\n      {\n        return 13;\n      }\n      else\n      {\n        return 42;\n      }\n    }\n\n  }\n\n  namespace test_selection_statement_with_initializer\n  {\n\n    int f()\n    {\n      return 13;\n    }\n\n    int f2()\n    {\n      if (auto i = f(); i > 0)\n      {\n        return 3;\n      }\n\n      switch (auto i = f(); i + 4)\n      {\n      case 17:\n        return 2;\n\n      default:\n        return 1;\n      }\n    }\n\n  }\n\n  namespace test_template_argument_deduction_for_class_templates\n  {\n\n    template <typename T1, typename T2>\n    struct pair\n    {\n      pair (T1 p1, T2 p2)\n        : m1 {p1},\n          m2 {p2}\n      {}\n\n      T1 m1;\n      T2 m2;\n    };\n\n    void f()\n    {\n      [[maybe_unused]] auto p = pair{13, 42u};\n    }\n\n  }\n\n  namespace test_non_type_auto_template_parameters\n  {\n\n    template <auto n>\n    struct B\n    {};\n\n    B<5> b1;\n    B<'a'> b2;\n\n  }\n\n  namespace test_structured_bindings\n  {\n\n    int arr[2] = { 1, 2 };\n    std::pair<int, int> pr = { 1, 2 };\n\n    auto f1() -> int(&)[2]\n    {\n      return arr;\n    }\n\n    auto f2() -> std::pair<int, int>&\n    {\n      return pr;\n    }\n\n    struct S\n    {\n      int x1 : 2;\n      volatile double y1;\n    };\n\n    S f3()\n    {\n      return {};\n    }\n\n    auto [ x1, y1 ] = f1();\n    auto& [ xr1, yr1 ] = f1();\n    auto [ x2, y2 ] = f2();\n    auto& [ xr2, yr2 ] = f2();\n    const auto [ x3, y3 ] = f3();\n\n  }\n\n  namespace test_exception_spec_type_system\n  {\n\n    struct Good {};\n    struct Bad {};\n\n    void g1() noexcept;\n    void g2();\n\n    template<typename T>\n    Bad\n    f(T*, T*);\n\n    template<typename T1, typename T2>\n    Good\n    f(T1*, T2*);\n\n    static_assert (std::is_same_v<Good, decltype(f(g1, g2))>);\n\n  }\n\n  namespace test_inline_variables\n  {\n\n    template<class T> void f(T)\n    {}\n\n    template<class T> inline T g(T)\n    {\n      return T{};\n    }\n\n    template<> inline void f<>(int)\n    {}\n\n    template<> int g<>(int)\n    {\n      return 5;\n    }\n\n  }\n\n}  // namespace cxx17\n\n#endif  // (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 201703L\n\n\n\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 202002L\n\n#error \"This is not a C++20 compiler\"\n\n#else\n\n#include <version>\n\nnamespace cxx20\n{\n\n// As C++20 supports feature test macros in the standard, there is no\n// immediate need to actually test for feature availability on the\n// Autoconf side.\n\n}  // namespace cxx20\n\n#endif  // (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 202002L\n\n\n\n\n#ifndef __cplusplus\n\n#error \"This is not a C++ compiler\"\n\n#elif (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 202302L\n\n#error \"This is not a C++23 compiler\"\n\n#else\n\n#include <version>\n\nnamespace cxx23\n{\n\n// As C++23 supports feature test macros in the standard, there is no\n// immediate need to actually test for feature availability on the\n// Autoconf side.\n\n}  // namespace cxx23\n\n#endif  // (defined _MSVC_LANG ? _MSVC_LANG : __cplusplus) < 202302L\n\n\n\n_ACEOF\nif ac_fn_cxx_try_compile \"$LINENO\"\nthen :\n  eval $cachevar=yes\nelse case e in #(\n  e) eval $cachevar=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\n           CXX=\"$ac_save_CXX\" ;;\nesac\nfi\neval ac_res=\\$$cachevar\n\t       { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\nprintf \"%s\\n\" \"$ac_res\" >&6; }\n        if eval test x\\$$cachevar = xyes; then\n          CXX=\"$CXX $switch\"\n          if test -n \"$CXXCPP\" ; then\n            CXXCPP=\"$CXXCPP $switch\"\n          fi\n          ac_success=yes\n          break\n        fi\n      done\n      if test x$ac_success = xyes; then\n        break\n      fi\n    done\n  fi\n  ac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n  if test x$ax_cxx_compile_cxx23_required = xtrue; then\n    if test x$ac_success = xno; then\n      as_fn_error $? \"*** A compiler with support for C++23 language features is required.\" \"$LINENO\" 5\n    fi\n  fi\n  if test x$ac_success = xno; then\n    HAVE_CXX23=0\n    { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: No compiler with C++23 support was found\" >&5\nprintf \"%s\\n\" \"$as_me: No compiler with C++23 support was found\" >&6;}\n  else\n    HAVE_CXX23=1\n\nprintf \"%s\\n\" \"#define HAVE_CXX23 1\" >>confdefs.h\n\n  fi\n\n\n    if test \"$HAVE_CXX23\" = \"1\";\n    then\n       PBX_CXX23=1\n    fi\n\n    if test \"${ENABLE_LATEST_CXX_STD}\" != \"yes\" ; then\n        CXX=\"${ast_cxx_check_std_save_CXX}\"\n        CXXCPP=\"${ast_cxx_check_std_save_CXXCPP}\"\n    fi\n\n\n# This macro is just copied into our local acinclude.m4 from libtool.m4 so that\n# the developers regenerating the configure script don't have to install libtool.\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for a sed that does not truncate output\" >&5\nprintf %s \"checking for a sed that does not truncate output... \" >&6; }\nif test ${ac_cv_path_SED+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e)           ac_script=s/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb/\n     for ac_i in 1 2 3 4 5 6 7; do\n       ac_script=\"$ac_script$as_nl$ac_script\"\n     done\n     echo \"$ac_script\" | sed 99q >conftest.sed\n     $as_unset ac_script || ac_script=\n     if test -z \"$SED\"; then\n  ac_path_SED_found=false\n  # Loop through the user's path and test for each of PROGNAME-LIST\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_prog in sed gsed\n   do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      ac_path_SED=\"$as_dir$ac_prog$ac_exec_ext\"\n      as_fn_executable_p \"$ac_path_SED\" || continue\n# Check for GNU ac_path_SED and select it if it is found.\n  # Check for GNU $ac_path_SED\ncase `\"$ac_path_SED\" --version 2>&1` in #(\n*GNU*)\n  ac_cv_path_SED=\"$ac_path_SED\" ac_path_SED_found=:;;\n#(\n*)\n  ac_count=0\n  printf %s 0123456789 >\"conftest.in\"\n  while :\n  do\n    cat \"conftest.in\" \"conftest.in\" >\"conftest.tmp\"\n    mv \"conftest.tmp\" \"conftest.in\"\n    cp \"conftest.in\" \"conftest.nl\"\n    printf \"%s\\n\" '' >> \"conftest.nl\"\n    \"$ac_path_SED\" -f conftest.sed < \"conftest.nl\" >\"conftest.out\" 2>/dev/null || break\n    diff \"conftest.out\" \"conftest.nl\" >/dev/null 2>&1 || break\n    as_fn_arith $ac_count + 1 && ac_count=$as_val\n    if test $ac_count -gt ${ac_path_SED_max-0}; then\n      # Best one so far, save it but keep looking for a better one\n      ac_cv_path_SED=\"$ac_path_SED\"\n      ac_path_SED_max=$ac_count\n    fi\n    # 10*(2^10) chars as input seems more than enough\n    test $ac_count -gt 10 && break\n  done\n  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;\nesac\n\n      $ac_path_SED_found && break 3\n    done\n  done\n  done\nIFS=$as_save_IFS\n  if test -z \"$ac_cv_path_SED\"; then\n    as_fn_error $? \"no acceptable sed could be found in \\$PATH\" \"$LINENO\" 5\n  fi\nelse\n  ac_cv_path_SED=$SED\nfi\n ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_SED\" >&5\nprintf \"%s\\n\" \"$ac_cv_path_SED\" >&6; }\n SED=\"$ac_cv_path_SED\"\n  rm -f conftest.sed\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for egrep\" >&5\nprintf %s \"checking for egrep... \" >&6; }\nif test ${ac_cv_prog_egrep+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if echo a | (grep -E '(a|b)') >/dev/null 2>&1\n    then ac_cv_prog_egrep='grep -E'\n    else ac_cv_prog_egrep='egrep'\n    fi ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_egrep\" >&5\nprintf \"%s\\n\" \"$ac_cv_prog_egrep\" >&6; }\n EGREP=$ac_cv_prog_egrep\n\n\n\n# Check whether --with-gnu-ld was given.\nif test ${with_gnu_ld+y}\nthen :\n  withval=$with_gnu_ld; test \"$withval\" = no || with_gnu_ld=yes\nelse case e in #(\n  e) with_gnu_ld=no ;;\nesac\nfi\n\nac_prog=ld\nif test \"$GCC\" = yes; then\n  # Check if gcc -print-prog-name=ld gives a path.\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for ld used by $CC\" >&5\nprintf %s \"checking for ld used by $CC... \" >&6; }\n  case $host in\n  *-*-mingw*)\n    # gcc leaves a trailing carriage return which upsets mingw\n    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\\015'` ;;\n  *)\n    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;\n  esac\n  case $ac_prog in\n    # Accept absolute paths.\n    [\\\\/]* | ?:[\\\\/]*)\n      re_direlt='/[^/][^/]*/\\.\\./'\n      # Canonicalize the pathname of ld\n      ac_prog=`echo $ac_prog| $SED 's%\\\\\\\\%/%g'`\n      while echo $ac_prog | grep \"$re_direlt\" > /dev/null 2>&1; do\n\tac_prog=`echo $ac_prog| $SED \"s%$re_direlt%/%\"`\n      done\n      test -z \"$LD\" && LD=\"$ac_prog\"\n      ;;\n  \"\")\n    # If it fails, then pretend we aren't using GCC.\n    ac_prog=ld\n    ;;\n  *)\n    # If it is relative, then search for the first ld in PATH.\n    with_gnu_ld=unknown\n    ;;\n  esac\nelif test \"$with_gnu_ld\" = yes; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for GNU ld\" >&5\nprintf %s \"checking for GNU ld... \" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for non-GNU ld\" >&5\nprintf %s \"checking for non-GNU ld... \" >&6; }\nfi\nif test ${lt_cv_path_LD+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -z \"$LD\"; then\n  lt_save_ifs=\"$IFS\"; IFS=$PATH_SEPARATOR\n  for ac_dir in $PATH; do\n    IFS=\"$lt_save_ifs\"\n    test -z \"$ac_dir\" && ac_dir=.\n    if test -f \"$ac_dir/$ac_prog\" || test -f \"$ac_dir/$ac_prog$ac_exeext\"; then\n      lt_cv_path_LD=\"$ac_dir/$ac_prog\"\n      # Check to see if the program is GNU ld.  I'd rather use --version,\n      # but apparently some variants of GNU ld only accept -v.\n      # Break only if it was the GNU/non-GNU ld that we prefer.\n      case `\"$lt_cv_path_LD\" -v 2>&1 </dev/null` in\n      *GNU* | *'with BFD'*)\n\ttest \"$with_gnu_ld\" != no && break\n\t;;\n      *)\n\ttest \"$with_gnu_ld\" != yes && break\n\t;;\n      esac\n    fi\n  done\n  IFS=\"$lt_save_ifs\"\nelse\n  lt_cv_path_LD=\"$LD\" # Let the user override the test with a path.\nfi ;;\nesac\nfi\n\nLD=\"$lt_cv_path_LD\"\nif test -n \"$LD\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $LD\" >&5\nprintf \"%s\\n\" \"$LD\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\ntest -z \"$LD\" && as_fn_error $? \"no acceptable ld found in \\$PATH\" \"$LINENO\" 5\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking if the linker ($LD) is GNU ld\" >&5\nprintf %s \"checking if the linker ($LD) is GNU ld... \" >&6; }\nif test ${lt_cv_prog_gnu_ld+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) # I'd rather use --version here, but apparently some GNU lds only accept -v.\ncase `$LD -v 2>&1 </dev/null` in\n*GNU* | *'with BFD'*)\n  lt_cv_prog_gnu_ld=yes\n  ;;\n*)\n  lt_cv_prog_gnu_ld=no\n  ;;\nesac ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_gnu_ld\" >&5\nprintf \"%s\\n\" \"$lt_cv_prog_gnu_ld\" >&6; }\nwith_gnu_ld=$lt_cv_prog_gnu_ld\n\n\t# note, does not work on FreeBSD\nfor ac_prog in gawk mawk nawk awk\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_AWK+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$AWK\"; then\n  ac_cv_prog_AWK=\"$AWK\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_AWK=\"$ac_prog\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nAWK=$ac_cv_prog_AWK\nif test -n \"$AWK\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $AWK\" >&5\nprintf \"%s\\n\" \"$AWK\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n  test -n \"$AWK\" && break\ndone\n\n\n  # Find a good install program.  We prefer a C program (faster),\n# so one script is as good as another.  But avoid the broken or\n# incompatible versions:\n# SysV /etc/install, /usr/sbin/install\n# SunOS /usr/etc/install\n# IRIX /sbin/install\n# AIX /bin/install\n# AmigaOS /C/install, which installs bootblocks on floppy discs\n# AIX 4 /usr/bin/installbsd, which doesn't work without a -g flag\n# AFS /usr/afsws/bin/install, which mishandles nonexistent args\n# SVR4 /usr/ucb/install, which tries to use the nonexistent group \"staff\"\n# OS/2's system install, which has a completely different semantic\n# ./install, which can be erroneously created by make from ./install.sh.\n# Reject install programs that cannot install multiple files.\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for a BSD-compatible install\" >&5\nprintf %s \"checking for a BSD-compatible install... \" >&6; }\nif test -z \"$INSTALL\"; then\nif test ${ac_cv_path_install+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    # Account for fact that we put trailing slashes in our PATH walk.\ncase $as_dir in #((\n  ./ | /[cC]/* | \\\n  /etc/* | /usr/sbin/* | /usr/etc/* | /sbin/* | /usr/afsws/bin/* | \\\n  ?:[\\\\/]os2[\\\\/]install[\\\\/]* | ?:[\\\\/]OS2[\\\\/]INSTALL[\\\\/]* | \\\n  /usr/ucb/* ) ;;\n  *)\n    # OSF1 and SCO ODT 3.0 have their own names for install.\n    # Don't use installbsd from OSF since it installs stuff as root\n    # by default.\n    for ac_prog in ginstall scoinst install; do\n      for ac_exec_ext in '' $ac_executable_extensions; do\n\tif as_fn_executable_p \"$as_dir$ac_prog$ac_exec_ext\"; then\n\t  if test $ac_prog = install &&\n\t    grep dspmsg \"$as_dir$ac_prog$ac_exec_ext\" >/dev/null 2>&1; then\n\t    # AIX install.  It has an incompatible calling convention.\n\t    :\n\t  elif test $ac_prog = install &&\n\t    grep pwplus \"$as_dir$ac_prog$ac_exec_ext\" >/dev/null 2>&1; then\n\t    # program-specific install script used by HP pwplus--don't use.\n\t    :\n\t  else\n\t    rm -rf conftest.one conftest.two conftest.dir\n\t    echo one > conftest.one\n\t    echo two > conftest.two\n\t    mkdir conftest.dir\n\t    if \"$as_dir$ac_prog$ac_exec_ext\" -c conftest.one conftest.two \"`pwd`/conftest.dir/\" &&\n\t      test -s conftest.one && test -s conftest.two &&\n\t      test -s conftest.dir/conftest.one &&\n\t      test -s conftest.dir/conftest.two\n\t    then\n\t      ac_cv_path_install=\"$as_dir$ac_prog$ac_exec_ext -c\"\n\t      break 3\n\t    fi\n\t  fi\n\tfi\n      done\n    done\n    ;;\nesac\n\n  done\nIFS=$as_save_IFS\n\nrm -rf conftest.one conftest.two conftest.dir\n ;;\nesac\nfi\n  if test ${ac_cv_path_install+y}; then\n    INSTALL=$ac_cv_path_install\n  else\n    # As a last resort, use the slow shell script.  Don't cache a\n    # value for INSTALL within a source directory, because that will\n    # break other packages using the cache if that directory is\n    # removed, or if the value is a relative name.\n    INSTALL=$ac_install_sh\n  fi\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $INSTALL\" >&5\nprintf \"%s\\n\" \"$INSTALL\" >&6; }\n\n# Use test -z because SunOS4 sh mishandles braces in ${var-val}.\n# It thinks the first close brace ends the variable substitution.\ntest -z \"$INSTALL_PROGRAM\" && INSTALL_PROGRAM='${INSTALL}'\n\ntest -z \"$INSTALL_SCRIPT\" && INSTALL_SCRIPT='${INSTALL}'\n\ntest -z \"$INSTALL_DATA\" && INSTALL_DATA='${INSTALL} -m 644'\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether ln -s works\" >&5\nprintf %s \"checking whether ln -s works... \" >&6; }\nLN_S=$as_ln_s\nif test \"$LN_S\" = \"ln -s\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\nprintf \"%s\\n\" \"yes\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no, using $LN_S\" >&5\nprintf \"%s\\n\" \"no, using $LN_S\" >&6; }\nfi\n\nif test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}ranlib\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}ranlib; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_RANLIB+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$RANLIB\"; then\n  ac_cv_prog_RANLIB=\"$RANLIB\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_RANLIB=\"${ac_tool_prefix}ranlib\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nRANLIB=$ac_cv_prog_RANLIB\nif test -n \"$RANLIB\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $RANLIB\" >&5\nprintf \"%s\\n\" \"$RANLIB\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_RANLIB\"; then\n  ac_ct_RANLIB=$RANLIB\n  # Extract the first word of \"ranlib\", so it can be a program name with args.\nset dummy ranlib; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_ac_ct_RANLIB+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$ac_ct_RANLIB\"; then\n  ac_cv_prog_ac_ct_RANLIB=\"$ac_ct_RANLIB\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_RANLIB=\"ranlib\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nac_ct_RANLIB=$ac_cv_prog_ac_ct_RANLIB\nif test -n \"$ac_ct_RANLIB\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_RANLIB\" >&5\nprintf \"%s\\n\" \"$ac_ct_RANLIB\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_RANLIB\" = x; then\n    RANLIB=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    RANLIB=$ac_ct_RANLIB\n  fi\nelse\n  RANLIB=\"$ac_cv_prog_RANLIB\"\nfi\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for GNU make\" >&5\nprintf %s \"checking for GNU make... \" >&6; }\nif test ${ac_cv_GNU_MAKE+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_cv_GNU_MAKE='Not Found' ;\n   ac_cv_GNU_MAKE_VERSION_MAJOR=0 ;\n   ac_cv_GNU_MAKE_VERSION_MINOR=0 ;\n   for a in make gmake gnumake ; do\n      if test -z \"$a\" ; then continue ; fi ;\n      if ( sh -c \"$a --version\" 2> /dev/null | grep GNU  2>&1 > /dev/null ) ;  then\n         ac_cv_GNU_MAKE=$a ;\n         ac_cv_GNU_MAKE_VERSION_MAJOR=`$ac_cv_GNU_MAKE --version | grep \"GNU Make\" | cut -f3 -d' ' | cut -f1 -d'.'`\n         ac_cv_GNU_MAKE_VERSION_MINOR=`$ac_cv_GNU_MAKE --version | grep \"GNU Make\" | cut -f2 -d'.' | cut -c1-2`\n         break;\n      fi\n   done ;\n ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_GNU_MAKE\" >&5\nprintf \"%s\\n\" \"$ac_cv_GNU_MAKE\" >&6; } ;\nif test  \"x$ac_cv_GNU_MAKE\" = \"xNot Found\"  ; then\n   as_fn_error $? \"*** Please install GNU make.  It is required to build Asterisk!\" \"$LINENO\" 5\n   exit 1\nfi\nGNU_MAKE=$ac_cv_GNU_MAKE\n\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for grep that handles long lines and -e\" >&5\nprintf %s \"checking for grep that handles long lines and -e... \" >&6; }\nif test ${ac_cv_path_GREP+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -z \"$GREP\"; then\n  ac_path_GREP_found=false\n  # Loop through the user's path and test for each of PROGNAME-LIST\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_prog in grep ggrep\n   do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      ac_path_GREP=\"$as_dir$ac_prog$ac_exec_ext\"\n      as_fn_executable_p \"$ac_path_GREP\" || continue\n# Check for GNU ac_path_GREP and select it if it is found.\n  # Check for GNU $ac_path_GREP\ncase `\"$ac_path_GREP\" --version 2>&1` in #(\n*GNU*)\n  ac_cv_path_GREP=\"$ac_path_GREP\" ac_path_GREP_found=:;;\n#(\n*)\n  ac_count=0\n  printf %s 0123456789 >\"conftest.in\"\n  while :\n  do\n    cat \"conftest.in\" \"conftest.in\" >\"conftest.tmp\"\n    mv \"conftest.tmp\" \"conftest.in\"\n    cp \"conftest.in\" \"conftest.nl\"\n    printf \"%s\\n\" 'GREP' >> \"conftest.nl\"\n    \"$ac_path_GREP\" -e 'GREP$' -e '-(cannot match)-' < \"conftest.nl\" >\"conftest.out\" 2>/dev/null || break\n    diff \"conftest.out\" \"conftest.nl\" >/dev/null 2>&1 || break\n    as_fn_arith $ac_count + 1 && ac_count=$as_val\n    if test $ac_count -gt ${ac_path_GREP_max-0}; then\n      # Best one so far, save it but keep looking for a better one\n      ac_cv_path_GREP=\"$ac_path_GREP\"\n      ac_path_GREP_max=$ac_count\n    fi\n    # 10*(2^10) chars as input seems more than enough\n    test $ac_count -gt 10 && break\n  done\n  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;\nesac\n\n      $ac_path_GREP_found && break 3\n    done\n  done\n  done\nIFS=$as_save_IFS\n  if test -z \"$ac_cv_path_GREP\"; then\n    as_fn_error $? \"no acceptable grep could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin\" \"$LINENO\" 5\n  fi\nelse\n  ac_cv_path_GREP=$GREP\nfi\n ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_GREP\" >&5\nprintf \"%s\\n\" \"$ac_cv_path_GREP\" >&6; }\n GREP=\"$ac_cv_path_GREP\"\n\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for egrep\" >&5\nprintf %s \"checking for egrep... \" >&6; }\nif test ${ac_cv_path_EGREP+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if echo a | $GREP -E '(a|b)' >/dev/null 2>&1\n   then ac_cv_path_EGREP=\"$GREP -E\"\n   else\n     if test -z \"$EGREP\"; then\n  ac_path_EGREP_found=false\n  # Loop through the user's path and test for each of PROGNAME-LIST\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_prog in egrep\n   do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      ac_path_EGREP=\"$as_dir$ac_prog$ac_exec_ext\"\n      as_fn_executable_p \"$ac_path_EGREP\" || continue\n# Check for GNU ac_path_EGREP and select it if it is found.\n  # Check for GNU $ac_path_EGREP\ncase `\"$ac_path_EGREP\" --version 2>&1` in #(\n*GNU*)\n  ac_cv_path_EGREP=\"$ac_path_EGREP\" ac_path_EGREP_found=:;;\n#(\n*)\n  ac_count=0\n  printf %s 0123456789 >\"conftest.in\"\n  while :\n  do\n    cat \"conftest.in\" \"conftest.in\" >\"conftest.tmp\"\n    mv \"conftest.tmp\" \"conftest.in\"\n    cp \"conftest.in\" \"conftest.nl\"\n    printf \"%s\\n\" 'EGREP' >> \"conftest.nl\"\n    \"$ac_path_EGREP\" 'EGREP$' < \"conftest.nl\" >\"conftest.out\" 2>/dev/null || break\n    diff \"conftest.out\" \"conftest.nl\" >/dev/null 2>&1 || break\n    as_fn_arith $ac_count + 1 && ac_count=$as_val\n    if test $ac_count -gt ${ac_path_EGREP_max-0}; then\n      # Best one so far, save it but keep looking for a better one\n      ac_cv_path_EGREP=\"$ac_path_EGREP\"\n      ac_path_EGREP_max=$ac_count\n    fi\n    # 10*(2^10) chars as input seems more than enough\n    test $ac_count -gt 10 && break\n  done\n  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;\nesac\n\n      $ac_path_EGREP_found && break 3\n    done\n  done\n  done\nIFS=$as_save_IFS\n  if test -z \"$ac_cv_path_EGREP\"; then\n    as_fn_error $? \"no acceptable egrep could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin\" \"$LINENO\" 5\n  fi\nelse\n  ac_cv_path_EGREP=$EGREP\nfi\n\n   fi ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_EGREP\" >&5\nprintf \"%s\\n\" \"$ac_cv_path_EGREP\" >&6; }\n EGREP=\"$ac_cv_path_EGREP\"\n\n         EGREP_TRADITIONAL=$EGREP\n ac_cv_path_EGREP_TRADITIONAL=$EGREP\n\n\nif test -n \"$ac_tool_prefix\"; then\n  for ac_prog in strip gstrip\n  do\n    # Extract the first word of \"$ac_tool_prefix$ac_prog\", so it can be a program name with args.\nset dummy $ac_tool_prefix$ac_prog; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_STRIP+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$STRIP\"; then\n  ac_cv_prog_STRIP=\"$STRIP\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_STRIP=\"$ac_tool_prefix$ac_prog\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nSTRIP=$ac_cv_prog_STRIP\nif test -n \"$STRIP\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $STRIP\" >&5\nprintf \"%s\\n\" \"$STRIP\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n    test -n \"$STRIP\" && break\n  done\nfi\nif test -z \"$STRIP\"; then\n  ac_ct_STRIP=$STRIP\n  for ac_prog in strip gstrip\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_ac_ct_STRIP+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$ac_ct_STRIP\"; then\n  ac_cv_prog_ac_ct_STRIP=\"$ac_ct_STRIP\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_STRIP=\"$ac_prog\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nac_ct_STRIP=$ac_cv_prog_ac_ct_STRIP\nif test -n \"$ac_ct_STRIP\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_STRIP\" >&5\nprintf \"%s\\n\" \"$ac_ct_STRIP\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n  test -n \"$ac_ct_STRIP\" && break\ndone\n\n  if test \"x$ac_ct_STRIP\" = x; then\n    STRIP=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    STRIP=$ac_ct_STRIP\n  fi\nfi\n\nif test -n \"$ac_tool_prefix\"; then\n  for ac_prog in ar gar\n  do\n    # Extract the first word of \"$ac_tool_prefix$ac_prog\", so it can be a program name with args.\nset dummy $ac_tool_prefix$ac_prog; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_AR+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$AR\"; then\n  ac_cv_prog_AR=\"$AR\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_AR=\"$ac_tool_prefix$ac_prog\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nAR=$ac_cv_prog_AR\nif test -n \"$AR\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $AR\" >&5\nprintf \"%s\\n\" \"$AR\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n    test -n \"$AR\" && break\n  done\nfi\nif test -z \"$AR\"; then\n  ac_ct_AR=$AR\n  for ac_prog in ar gar\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_ac_ct_AR+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$ac_ct_AR\"; then\n  ac_cv_prog_ac_ct_AR=\"$ac_ct_AR\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_AR=\"$ac_prog\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nac_ct_AR=$ac_cv_prog_ac_ct_AR\nif test -n \"$ac_ct_AR\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_AR\" >&5\nprintf \"%s\\n\" \"$ac_ct_AR\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n  test -n \"$ac_ct_AR\" && break\ndone\n\n  if test \"x$ac_ct_AR\" = x; then\n    AR=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    AR=$ac_ct_AR\n  fi\nfi\n\n\nGNU_LD=0\nif test \"x$with_gnu_ld\" = \"xyes\" ; then\n   GNU_LD=1\nfi\n\n\n# Extract the first word of \"bison\", so it can be a program name with args.\nset dummy bison; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_BISON+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $BISON in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_BISON=\"$BISON\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_BISON=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_BISON\" && ac_cv_path_BISON=\":\"\n  ;;\nesac ;;\nesac\nfi\nBISON=$ac_cv_path_BISON\nif test -n \"$BISON\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $BISON\" >&5\nprintf \"%s\\n\" \"$BISON\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n# Extract the first word of \"cmp\", so it can be a program name with args.\nset dummy cmp; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_CMP+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $CMP in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_CMP=\"$CMP\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_CMP=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_CMP\" && ac_cv_path_CMP=\":\"\n  ;;\nesac ;;\nesac\nfi\nCMP=$ac_cv_path_CMP\nif test -n \"$CMP\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $CMP\" >&5\nprintf \"%s\\n\" \"$CMP\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n# Extract the first word of \"cat\", so it can be a program name with args.\nset dummy cat; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_CAT+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $CAT in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_CAT=\"$CAT\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_CAT=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_CAT\" && ac_cv_path_CAT=\":\"\n  ;;\nesac ;;\nesac\nfi\nCAT=$ac_cv_path_CAT\nif test -n \"$CAT\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $CAT\" >&5\nprintf \"%s\\n\" \"$CAT\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n# Extract the first word of \"cut\", so it can be a program name with args.\nset dummy cut; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_CUT+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $CUT in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_CUT=\"$CUT\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_CUT=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_CUT\" && ac_cv_path_CUT=\":\"\n  ;;\nesac ;;\nesac\nfi\nCUT=$ac_cv_path_CUT\nif test -n \"$CUT\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $CUT\" >&5\nprintf \"%s\\n\" \"$CUT\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n# Extract the first word of \"flex\", so it can be a program name with args.\nset dummy flex; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_FLEX+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $FLEX in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_FLEX=\"$FLEX\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_FLEX=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_FLEX\" && ac_cv_path_FLEX=\":\"\n  ;;\nesac ;;\nesac\nfi\nFLEX=$ac_cv_path_FLEX\nif test -n \"$FLEX\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $FLEX\" >&5\nprintf \"%s\\n\" \"$FLEX\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n# Extract the first word of \"grep\", so it can be a program name with args.\nset dummy grep; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_GREP+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $GREP in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_GREP=\"$GREP\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_GREP=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_GREP\" && ac_cv_path_GREP=\":\"\n  ;;\nesac ;;\nesac\nfi\nGREP=$ac_cv_path_GREP\nif test -n \"$GREP\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $GREP\" >&5\nprintf \"%s\\n\" \"$GREP\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\nfor ac_prog in python2.7 python2 python python3\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_PYTHON+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $PYTHON in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_PYTHON=\"$PYTHON\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_PYTHON=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  ;;\nesac ;;\nesac\nfi\nPYTHON=$ac_cv_path_PYTHON\nif test -n \"$PYTHON\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $PYTHON\" >&5\nprintf \"%s\\n\" \"$PYTHON\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n  test -n \"$PYTHON\" && break\ndone\ntest -n \"$PYTHON\" || PYTHON=\":\"\n\n# Extract the first word of \"find\", so it can be a program name with args.\nset dummy find; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_FIND+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $FIND in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_FIND=\"$FIND\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_FIND=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_FIND\" && ac_cv_path_FIND=\":\"\n  ;;\nesac ;;\nesac\nfi\nFIND=$ac_cv_path_FIND\nif test -n \"$FIND\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $FIND\" >&5\nprintf \"%s\\n\" \"$FIND\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n# Extract the first word of \"basename\", so it can be a program name with args.\nset dummy basename; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_BASENAME+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $BASENAME in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_BASENAME=\"$BASENAME\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_BASENAME=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_BASENAME\" && ac_cv_path_BASENAME=\":\"\n  ;;\nesac ;;\nesac\nfi\nBASENAME=$ac_cv_path_BASENAME\nif test -n \"$BASENAME\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $BASENAME\" >&5\nprintf \"%s\\n\" \"$BASENAME\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n# Extract the first word of \"dirname\", so it can be a program name with args.\nset dummy dirname; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_DIRNAME+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $DIRNAME in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_DIRNAME=\"$DIRNAME\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_DIRNAME=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_DIRNAME\" && ac_cv_path_DIRNAME=\":\"\n  ;;\nesac ;;\nesac\nfi\nDIRNAME=$ac_cv_path_DIRNAME\nif test -n \"$DIRNAME\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $DIRNAME\" >&5\nprintf \"%s\\n\" \"$DIRNAME\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n# Extract the first word of \"sh\", so it can be a program name with args.\nset dummy sh; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_SHELL+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $SHELL in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_SHELL=\"$SHELL\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_SHELL=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_SHELL\" && ac_cv_path_SHELL=\":\"\n  ;;\nesac ;;\nesac\nfi\nSHELL=$ac_cv_path_SHELL\nif test -n \"$SHELL\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $SHELL\" >&5\nprintf \"%s\\n\" \"$SHELL\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n# Extract the first word of \"ln\", so it can be a program name with args.\nset dummy ln; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_LN+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $LN in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_LN=\"$LN\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_LN=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_LN\" && ac_cv_path_LN=\":\"\n  ;;\nesac ;;\nesac\nfi\nLN=$ac_cv_path_LN\nif test -n \"$LN\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $LN\" >&5\nprintf \"%s\\n\" \"$LN\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n# Extract the first word of \"doxygen\", so it can be a program name with args.\nset dummy doxygen; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_DOXYGEN+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $DOXYGEN in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_DOXYGEN=\"$DOXYGEN\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_DOXYGEN=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_DOXYGEN\" && ac_cv_path_DOXYGEN=\":\"\n  ;;\nesac ;;\nesac\nfi\nDOXYGEN=$ac_cv_path_DOXYGEN\nif test -n \"$DOXYGEN\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $DOXYGEN\" >&5\nprintf \"%s\\n\" \"$DOXYGEN\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n# Extract the first word of \"dot\", so it can be a program name with args.\nset dummy dot; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_DOT+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $DOT in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_DOT=\"$DOT\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_DOT=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_DOT\" && ac_cv_path_DOT=\":\"\n  ;;\nesac ;;\nesac\nfi\nDOT=$ac_cv_path_DOT\nif test -n \"$DOT\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $DOT\" >&5\nprintf \"%s\\n\" \"$DOT\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n# Extract the first word of \"wget\", so it can be a program name with args.\nset dummy wget; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_WGET+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $WGET in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_WGET=\"$WGET\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_WGET=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_WGET\" && ac_cv_path_WGET=\":\"\n  ;;\nesac ;;\nesac\nfi\nWGET=$ac_cv_path_WGET\nif test -n \"$WGET\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $WGET\" >&5\nprintf \"%s\\n\" \"$WGET\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n# Extract the first word of \"curl\", so it can be a program name with args.\nset dummy curl; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_CURL+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $CURL in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_CURL=\"$CURL\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_CURL=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_CURL\" && ac_cv_path_CURL=\":\"\n  ;;\nesac ;;\nesac\nfi\nCURL=$ac_cv_path_CURL\nif test -n \"$CURL\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $CURL\" >&5\nprintf \"%s\\n\" \"$CURL\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n# Extract the first word of \"xmllint\", so it can be a program name with args.\nset dummy xmllint; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_XMLLINT+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $XMLLINT in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_XMLLINT=\"$XMLLINT\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_XMLLINT=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_XMLLINT\" && ac_cv_path_XMLLINT=\":\"\n  ;;\nesac ;;\nesac\nfi\nXMLLINT=$ac_cv_path_XMLLINT\nif test -n \"$XMLLINT\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $XMLLINT\" >&5\nprintf \"%s\\n\" \"$XMLLINT\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\nfor ac_prog in xmlstarlet xml\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_XMLSTARLET+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $XMLSTARLET in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_XMLSTARLET=\"$XMLSTARLET\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_XMLSTARLET=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  ;;\nesac ;;\nesac\nfi\nXMLSTARLET=$ac_cv_path_XMLSTARLET\nif test -n \"$XMLSTARLET\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $XMLSTARLET\" >&5\nprintf \"%s\\n\" \"$XMLSTARLET\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n  test -n \"$XMLSTARLET\" && break\ndone\ntest -n \"$XMLSTARLET\" || XMLSTARLET=\":\"\n\n# Extract the first word of \"bash\", so it can be a program name with args.\nset dummy bash; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_BASH+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $BASH in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_BASH=\"$BASH\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_BASH=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_BASH\" && ac_cv_path_BASH=\":\"\n  ;;\nesac ;;\nesac\nfi\nBASH=$ac_cv_path_BASH\nif test -n \"$BASH\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $BASH\" >&5\nprintf \"%s\\n\" \"$BASH\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n# Extract the first word of \"git\", so it can be a program name with args.\nset dummy git; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_GIT+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $GIT in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_GIT=\"$GIT\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_GIT=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_GIT\" && ac_cv_path_GIT=\":\"\n  ;;\nesac ;;\nesac\nfi\nGIT=$ac_cv_path_GIT\nif test -n \"$GIT\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $GIT\" >&5\nprintf \"%s\\n\" \"$GIT\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n# Extract the first word of \"alembic\", so it can be a program name with args.\nset dummy alembic; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_ALEMBIC+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $ALEMBIC in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_ALEMBIC=\"$ALEMBIC\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_ALEMBIC=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_ALEMBIC\" && ac_cv_path_ALEMBIC=\":\"\n  ;;\nesac ;;\nesac\nfi\nALEMBIC=$ac_cv_path_ALEMBIC\nif test -n \"$ALEMBIC\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ALEMBIC\" >&5\nprintf \"%s\\n\" \"$ALEMBIC\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n# Extract the first word of \"bzip2\", so it can be a program name with args.\nset dummy bzip2; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_BZIP2+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $BZIP2 in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_BZIP2=\"$BZIP2\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_BZIP2=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_BZIP2\" && ac_cv_path_BZIP2=\":\"\n  ;;\nesac ;;\nesac\nfi\nBZIP2=$ac_cv_path_BZIP2\nif test -n \"$BZIP2\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $BZIP2\" >&5\nprintf \"%s\\n\" \"$BZIP2\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n# Extract the first word of \"tar\", so it can be a program name with args.\nset dummy tar; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_TAR+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $TAR in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_TAR=\"$TAR\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_TAR=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_TAR\" && ac_cv_path_TAR=\":\"\n  ;;\nesac ;;\nesac\nfi\nTAR=$ac_cv_path_TAR\nif test -n \"$TAR\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $TAR\" >&5\nprintf \"%s\\n\" \"$TAR\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n# Extract the first word of \"patch\", so it can be a program name with args.\nset dummy patch; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_PATCH+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $PATCH in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_PATCH=\"$PATCH\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_PATCH=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_PATCH\" && ac_cv_path_PATCH=\":\"\n  ;;\nesac ;;\nesac\nfi\nPATCH=$ac_cv_path_PATCH\nif test -n \"$PATCH\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $PATCH\" >&5\nprintf \"%s\\n\" \"$PATCH\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n# Extract the first word of \"sed\", so it can be a program name with args.\nset dummy sed; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_SED+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $SED in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_SED=\"$SED\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_SED=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_SED\" && ac_cv_path_SED=\":\"\n  ;;\nesac ;;\nesac\nfi\nSED=$ac_cv_path_SED\nif test -n \"$SED\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $SED\" >&5\nprintf \"%s\\n\" \"$SED\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n# Extract the first word of \"nm\", so it can be a program name with args.\nset dummy nm; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_NM+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $NM in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_NM=\"$NM\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_NM=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_NM\" && ac_cv_path_NM=\":\"\n  ;;\nesac ;;\nesac\nfi\nNM=$ac_cv_path_NM\nif test -n \"$NM\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $NM\" >&5\nprintf \"%s\\n\" \"$NM\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n# Extract the first word of \"realpath\", so it can be a program name with args.\nset dummy realpath; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_REALPATH+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $REALPATH in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_REALPATH=\"$REALPATH\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_REALPATH=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_REALPATH\" && ac_cv_path_REALPATH=\":\"\n  ;;\nesac ;;\nesac\nfi\nREALPATH=$ac_cv_path_REALPATH\nif test -n \"$REALPATH\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $REALPATH\" >&5\nprintf \"%s\\n\" \"$REALPATH\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n\n\nDOWNLOAD=\":\"\nDOWNLOAD_TO_STDOUT=\nDOWNLOAD_TIMEOUT=\nif test \"x${WGET}\" != \"x:\"; then\n  DOWNLOAD=${WGET}\n  DOWNLOAD_TO_STDOUT=\"${WGET} -q -O-\"\n  DOWNLOAD_TIMEOUT='--timeout=$1'\nelif test \"x${CURL}\" != \"x:\"; then\n  DOWNLOAD=\"${CURL} -L -O --progress-bar -w \\\"%{url_effective}\\n\\\"\"\n  DOWNLOAD_TO_STDOUT=\"${CURL} -Ls\"\n  DOWNLOAD_TIMEOUT='--max-time $(or $2,$1)'\nelse\n  # Extract the first word of \"fetch\", so it can be a program name with args.\nset dummy fetch; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_FETCH+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $FETCH in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_FETCH=\"$FETCH\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_FETCH=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_FETCH\" && ac_cv_path_FETCH=\":\"\n  ;;\nesac ;;\nesac\nfi\nFETCH=$ac_cv_path_FETCH\nif test -n \"$FETCH\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $FETCH\" >&5\nprintf \"%s\\n\" \"$FETCH\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n  if test \"x${FETCH}\" != \"x:\"; then\n    DOWNLOAD=${FETCH}\n    DOWNLOAD_TO_STDOUT=\"${FETCH} -o-\"\n    DOWNLOAD_TIMEOUT='--timeout=$(or $2,$1)'\n  fi\nfi\n\n\n\n\n# Extract the first word of \"ldconfig\", so it can be a program name with args.\nset dummy ldconfig; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_LDCONFIG+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $LDCONFIG in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_LDCONFIG=\"$LDCONFIG\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_LDCONFIG=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_LDCONFIG\" && ac_cv_path_LDCONFIG=\":\"\n  ;;\nesac ;;\nesac\nfi\nLDCONFIG=$ac_cv_path_LDCONFIG\nif test -n \"$LDCONFIG\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $LDCONFIG\" >&5\nprintf \"%s\\n\" \"$LDCONFIG\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n# Extract the first word of \"sha1sum\", so it can be a program name with args.\nset dummy sha1sum; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_SHA1SUM+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $SHA1SUM in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_SHA1SUM=\"$SHA1SUM\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_SHA1SUM=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_SHA1SUM\" && ac_cv_path_SHA1SUM=\"$ac_aux_dir/build_tools/sha1sum-sh\"\n  ;;\nesac ;;\nesac\nfi\nSHA1SUM=$ac_cv_path_SHA1SUM\nif test -n \"$SHA1SUM\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $SHA1SUM\" >&5\nprintf \"%s\\n\" \"$SHA1SUM\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n# Extract the first word of \"openssl\", so it can be a program name with args.\nset dummy openssl; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_OPENSSL+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $OPENSSL in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_OPENSSL=\"$OPENSSL\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_OPENSSL=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_path_OPENSSL\" && ac_cv_path_OPENSSL=\":\"\n  ;;\nesac ;;\nesac\nfi\nOPENSSL=$ac_cv_path_OPENSSL\nif test -n \"$OPENSSL\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $OPENSSL\" >&5\nprintf \"%s\\n\" \"$OPENSSL\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n\n\n\n\n\n\n\n\nif test \"x$ac_cv_env_PKG_CONFIG_set\" != \"xset\"; then\n\tif test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}pkg-config\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}pkg-config; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_PKG_CONFIG+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $PKG_CONFIG in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_PKG_CONFIG=\"$PKG_CONFIG\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_PKG_CONFIG=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  ;;\nesac ;;\nesac\nfi\nPKG_CONFIG=$ac_cv_path_PKG_CONFIG\nif test -n \"$PKG_CONFIG\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $PKG_CONFIG\" >&5\nprintf \"%s\\n\" \"$PKG_CONFIG\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_path_PKG_CONFIG\"; then\n  ac_pt_PKG_CONFIG=$PKG_CONFIG\n  # Extract the first word of \"pkg-config\", so it can be a program name with args.\nset dummy pkg-config; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_path_ac_pt_PKG_CONFIG+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) case $ac_pt_PKG_CONFIG in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_ac_pt_PKG_CONFIG=\"$ac_pt_PKG_CONFIG\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_path_ac_pt_PKG_CONFIG=\"$as_dir$ac_word$ac_exec_ext\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  ;;\nesac ;;\nesac\nfi\nac_pt_PKG_CONFIG=$ac_cv_path_ac_pt_PKG_CONFIG\nif test -n \"$ac_pt_PKG_CONFIG\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_pt_PKG_CONFIG\" >&5\nprintf \"%s\\n\" \"$ac_pt_PKG_CONFIG\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n  if test \"x$ac_pt_PKG_CONFIG\" = x; then\n    PKG_CONFIG=\"\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    PKG_CONFIG=$ac_pt_PKG_CONFIG\n  fi\nelse\n  PKG_CONFIG=\"$ac_cv_path_PKG_CONFIG\"\nfi\n\nfi\nif test -n \"$PKG_CONFIG\"; then\n\t_pkg_min_version=0.9.0\n\t{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking pkg-config is at least version $_pkg_min_version\" >&5\nprintf %s \"checking pkg-config is at least version $_pkg_min_version... \" >&6; }\n\tif $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then\n\t\t{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\nprintf \"%s\\n\" \"yes\" >&6; }\n\telse\n\t\t{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\n\t\tPKG_CONFIG=\"\"\n\tfi\nfi\nif test -z \"$PKG_CONFIG\"; then\n\tas_fn_error $? \"pkg-config not found\" \"$LINENO\" 5\nfi\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for bison that supports parse-param\" >&5\nprintf %s \"checking for bison that supports parse-param... \" >&6; }\nif test ${ac_cv_path_BISON2+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e)\n\tif test \"x$BISON\" != \"x:\" ; then\n\t\t# Create a temporary directory $tmp in $TMPDIR (default /tmp).\n\t\t# Use mktemp if possible; otherwise fall back on mkdir,\n\t\t# with $RANDOM to make collisions less likely.\n\t\t: ${TMPDIR=/tmp}\n\t\t{\n\t\t  tmp=`\n\t\t    (umask 077 && mktemp -d \"$TMPDIR/fooXXXXXX\") 2>/dev/null\n\t\t  ` &&\n\t\t  test -n \"$tmp\" && test -d \"$tmp\"\n\t\t} || {\n\t\t  tmp=$TMPDIR/foo$$-$RANDOM\n\t\t  (umask 077 && mkdir \"$tmp\")\n\t\t} || exit $?\n\t\tcat >$tmp/test.y <<__EOL__\n%parse-param {struct parse_io *parseio}\n%%\nfile : { \\$\\$ = parseio->pval = 1; }\n\t;\n%%\n__EOL__\n\t\t${BISON} -o ${tmp}/test.tab.c ${tmp}/test.y >/dev/null 2>&1\n\t\tif test -e \"${tmp}/test.tab.c\"; then\n\t\t\tac_cv_path_BISON2=${BISON}\n\t\tfi\n\t\trm -rf ${tmp}\n\tfi\n\t ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_BISON2\" >&5\nprintf \"%s\\n\" \"$ac_cv_path_BISON2\" >&6; }\nif test \"x${ac_cv_path_BISON2}\" = \"x\" ; then\n\tBISON=:\n\tPBX_BISON=0\nelse\n\tPBX_BISON=1\nfi\n\n\nif test \"${FLEX}\" = \":\"; then\n\tPBX_FLEX=0\nelse\n\tPBX_FLEX=1\nfi\n\n\nif test \"${XMLSTARLET}\" = \":\"; then\n\tPBX_XMLSTARLET=0\nelse\n\tPBX_XMLSTARLET=1\nfi\n\n\nif test \"${BASH}\" = \":\"; then\n\tPBX_BASH=0\nelse\n\tPBX_BASH=1\nfi\n\n\nif test -n \"$ac_tool_prefix\"; then\n  # Extract the first word of \"${ac_tool_prefix}soxmix\", so it can be a program name with args.\nset dummy ${ac_tool_prefix}soxmix; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_SOXMIX+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$SOXMIX\"; then\n  ac_cv_prog_SOXMIX=\"$SOXMIX\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_SOXMIX=\"${ac_tool_prefix}soxmix\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nSOXMIX=$ac_cv_prog_SOXMIX\nif test -n \"$SOXMIX\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $SOXMIX\" >&5\nprintf \"%s\\n\" \"$SOXMIX\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\nfi\nif test -z \"$ac_cv_prog_SOXMIX\"; then\n  ac_ct_SOXMIX=$SOXMIX\n  # Extract the first word of \"soxmix\", so it can be a program name with args.\nset dummy soxmix; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_ac_ct_SOXMIX+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$ac_ct_SOXMIX\"; then\n  ac_cv_prog_ac_ct_SOXMIX=\"$ac_ct_SOXMIX\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_SOXMIX=\"soxmix\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nac_ct_SOXMIX=$ac_cv_prog_ac_ct_SOXMIX\nif test -n \"$ac_ct_SOXMIX\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_SOXMIX\" >&5\nprintf \"%s\\n\" \"$ac_ct_SOXMIX\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n  if test \"x$ac_ct_SOXMIX\" = x; then\n    SOXMIX=\":\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    SOXMIX=$ac_ct_SOXMIX\n  fi\nelse\n  SOXMIX=\"$ac_cv_prog_SOXMIX\"\nfi\n\nif test \"x${SOXMIX}\" != \"x:\"; then\n\nprintf \"%s\\n\" \"#define HAVE_SOXMIX 1\" >>confdefs.h\n\nfi\n\nfor ac_prog in md5 md5sum gmd5sum digest\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_MD5+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$MD5\"; then\n  ac_cv_prog_MD5=\"$MD5\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_MD5=\"$ac_prog\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nMD5=$ac_cv_prog_MD5\nif test -n \"$MD5\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $MD5\" >&5\nprintf \"%s\\n\" \"$MD5\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n  test -n \"$MD5\" && break\ndone\n\n\nif test \"${MD5}\" = \"digest\" ; then\n   MD5=\"${MD5} -a md5\"\nfi\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for a sed that does not truncate output\" >&5\nprintf %s \"checking for a sed that does not truncate output... \" >&6; }\nif test ${ac_cv_path_SED+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e)           ac_script=s/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb/\n     for ac_i in 1 2 3 4 5 6 7; do\n       ac_script=\"$ac_script$as_nl$ac_script\"\n     done\n     echo \"$ac_script\" 2>/dev/null | sed 99q >conftest.sed\n     { ac_script=; unset ac_script;}\n     if test -z \"$SED\"; then\n  ac_path_SED_found=false\n  # Loop through the user's path and test for each of PROGNAME-LIST\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_prog in sed gsed\n   do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      ac_path_SED=\"$as_dir$ac_prog$ac_exec_ext\"\n      as_fn_executable_p \"$ac_path_SED\" || continue\n# Check for GNU ac_path_SED and select it if it is found.\n  # Check for GNU $ac_path_SED\ncase `\"$ac_path_SED\" --version 2>&1` in #(\n*GNU*)\n  ac_cv_path_SED=\"$ac_path_SED\" ac_path_SED_found=:;;\n#(\n*)\n  ac_count=0\n  printf %s 0123456789 >\"conftest.in\"\n  while :\n  do\n    cat \"conftest.in\" \"conftest.in\" >\"conftest.tmp\"\n    mv \"conftest.tmp\" \"conftest.in\"\n    cp \"conftest.in\" \"conftest.nl\"\n    printf \"%s\\n\" '' >> \"conftest.nl\"\n    \"$ac_path_SED\" -f conftest.sed < \"conftest.nl\" >\"conftest.out\" 2>/dev/null || break\n    diff \"conftest.out\" \"conftest.nl\" >/dev/null 2>&1 || break\n    as_fn_arith $ac_count + 1 && ac_count=$as_val\n    if test $ac_count -gt ${ac_path_SED_max-0}; then\n      # Best one so far, save it but keep looking for a better one\n      ac_cv_path_SED=\"$ac_path_SED\"\n      ac_path_SED_max=$ac_count\n    fi\n    # 10*(2^10) chars as input seems more than enough\n    test $ac_count -gt 10 && break\n  done\n  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;\nesac\n\n      $ac_path_SED_found && break 3\n    done\n  done\n  done\nIFS=$as_save_IFS\n  if test -z \"$ac_cv_path_SED\"; then\n    as_fn_error $? \"no acceptable sed could be found in \\$PATH\" \"$LINENO\" 5\n  fi\nelse\n  ac_cv_path_SED=$SED\nfi\n ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_SED\" >&5\nprintf \"%s\\n\" \"$ac_cv_path_SED\" >&6; }\n SED=\"$ac_cv_path_SED\"\n  rm -f conftest.sed\n\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for egrep -e\" >&5\nprintf %s \"checking for egrep -e... \" >&6; }\nif test ${ac_cv_path_EGREP_TRADITIONAL+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -z \"$EGREP_TRADITIONAL\"; then\n  ac_path_EGREP_TRADITIONAL_found=false\n  # Loop through the user's path and test for each of PROGNAME-LIST\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_prog in grep ggrep\n   do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      ac_path_EGREP_TRADITIONAL=\"$as_dir$ac_prog$ac_exec_ext\"\n      as_fn_executable_p \"$ac_path_EGREP_TRADITIONAL\" || continue\n# Check for GNU ac_path_EGREP_TRADITIONAL and select it if it is found.\n  # Check for GNU $ac_path_EGREP_TRADITIONAL\ncase `\"$ac_path_EGREP_TRADITIONAL\" --version 2>&1` in #(\n*GNU*)\n  ac_cv_path_EGREP_TRADITIONAL=\"$ac_path_EGREP_TRADITIONAL\" ac_path_EGREP_TRADITIONAL_found=:;;\n#(\n*)\n  ac_count=0\n  printf %s 0123456789 >\"conftest.in\"\n  while :\n  do\n    cat \"conftest.in\" \"conftest.in\" >\"conftest.tmp\"\n    mv \"conftest.tmp\" \"conftest.in\"\n    cp \"conftest.in\" \"conftest.nl\"\n    printf \"%s\\n\" 'EGREP_TRADITIONAL' >> \"conftest.nl\"\n    \"$ac_path_EGREP_TRADITIONAL\" -E 'EGR(EP|AC)_TRADITIONAL$' < \"conftest.nl\" >\"conftest.out\" 2>/dev/null || break\n    diff \"conftest.out\" \"conftest.nl\" >/dev/null 2>&1 || break\n    as_fn_arith $ac_count + 1 && ac_count=$as_val\n    if test $ac_count -gt ${ac_path_EGREP_TRADITIONAL_max-0}; then\n      # Best one so far, save it but keep looking for a better one\n      ac_cv_path_EGREP_TRADITIONAL=\"$ac_path_EGREP_TRADITIONAL\"\n      ac_path_EGREP_TRADITIONAL_max=$ac_count\n    fi\n    # 10*(2^10) chars as input seems more than enough\n    test $ac_count -gt 10 && break\n  done\n  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;\nesac\n\n      $ac_path_EGREP_TRADITIONAL_found && break 3\n    done\n  done\n  done\nIFS=$as_save_IFS\n  if test -z \"$ac_cv_path_EGREP_TRADITIONAL\"; then\n    :\n  fi\nelse\n  ac_cv_path_EGREP_TRADITIONAL=$EGREP_TRADITIONAL\nfi\n\n    if test \"$ac_cv_path_EGREP_TRADITIONAL\"\nthen :\n  ac_cv_path_EGREP_TRADITIONAL=\"$ac_cv_path_EGREP_TRADITIONAL -E\"\nelse case e in #(\n  e) if test -z \"$EGREP_TRADITIONAL\"; then\n  ac_path_EGREP_TRADITIONAL_found=false\n  # Loop through the user's path and test for each of PROGNAME-LIST\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_prog in egrep\n   do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      ac_path_EGREP_TRADITIONAL=\"$as_dir$ac_prog$ac_exec_ext\"\n      as_fn_executable_p \"$ac_path_EGREP_TRADITIONAL\" || continue\n# Check for GNU ac_path_EGREP_TRADITIONAL and select it if it is found.\n  # Check for GNU $ac_path_EGREP_TRADITIONAL\ncase `\"$ac_path_EGREP_TRADITIONAL\" --version 2>&1` in #(\n*GNU*)\n  ac_cv_path_EGREP_TRADITIONAL=\"$ac_path_EGREP_TRADITIONAL\" ac_path_EGREP_TRADITIONAL_found=:;;\n#(\n*)\n  ac_count=0\n  printf %s 0123456789 >\"conftest.in\"\n  while :\n  do\n    cat \"conftest.in\" \"conftest.in\" >\"conftest.tmp\"\n    mv \"conftest.tmp\" \"conftest.in\"\n    cp \"conftest.in\" \"conftest.nl\"\n    printf \"%s\\n\" 'EGREP_TRADITIONAL' >> \"conftest.nl\"\n    \"$ac_path_EGREP_TRADITIONAL\" 'EGR(EP|AC)_TRADITIONAL$' < \"conftest.nl\" >\"conftest.out\" 2>/dev/null || break\n    diff \"conftest.out\" \"conftest.nl\" >/dev/null 2>&1 || break\n    as_fn_arith $ac_count + 1 && ac_count=$as_val\n    if test $ac_count -gt ${ac_path_EGREP_TRADITIONAL_max-0}; then\n      # Best one so far, save it but keep looking for a better one\n      ac_cv_path_EGREP_TRADITIONAL=\"$ac_path_EGREP_TRADITIONAL\"\n      ac_path_EGREP_TRADITIONAL_max=$ac_count\n    fi\n    # 10*(2^10) chars as input seems more than enough\n    test $ac_count -gt 10 && break\n  done\n  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;\nesac\n\n      $ac_path_EGREP_TRADITIONAL_found && break 3\n    done\n  done\n  done\nIFS=$as_save_IFS\n  if test -z \"$ac_cv_path_EGREP_TRADITIONAL\"; then\n    as_fn_error $? \"no acceptable egrep could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin\" \"$LINENO\" 5\n  fi\nelse\n  ac_cv_path_EGREP_TRADITIONAL=$EGREP_TRADITIONAL\nfi\n ;;\nesac\nfi ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_EGREP_TRADITIONAL\" >&5\nprintf \"%s\\n\" \"$ac_cv_path_EGREP_TRADITIONAL\" >&6; }\n EGREP_TRADITIONAL=$ac_cv_path_EGREP_TRADITIONAL\n\n\n\n\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nax_pthread_ok=no\n\n# We used to check for pthread.h first, but this fails if pthread.h\n# requires special compiler flags (e.g. on Tru64 or Sequent).\n# It gets checked for in the link test anyway.\n\n# First of all, check if the user has set any of the PTHREAD_LIBS,\n# etcetera environment variables, and if threads linking works using\n# them:\nif test \"x$PTHREAD_CFLAGS$PTHREAD_LIBS\" != \"x\"; then\n        ax_pthread_save_CC=\"$CC\"\n        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n        ax_pthread_save_LIBS=\"$LIBS\"\n        if test \"x$PTHREAD_CC\" != \"x\"\nthen :\n  CC=\"$PTHREAD_CC\"\nfi\n        if test \"x$PTHREAD_CXX\" != \"x\"\nthen :\n  CXX=\"$PTHREAD_CXX\"\nfi\n        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n        LIBS=\"$PTHREAD_LIBS $LIBS\"\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for pthread_join using $CC $PTHREAD_CFLAGS $PTHREAD_LIBS\" >&5\nprintf %s \"checking for pthread_join using $CC $PTHREAD_CFLAGS $PTHREAD_LIBS... \" >&6; }\n        cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.\n   The 'extern \"C\"' is for builds by C++ compilers;\n   although this is not generally supported in C code supporting it here\n   has little cost and some practical benefit (sr 110532).  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar pthread_join (void);\nint\nmain (void)\n{\nreturn pthread_join ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"\nthen :\n  ax_pthread_ok=yes\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam \\\n    conftest$ac_exeext conftest.$ac_ext\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ax_pthread_ok\" >&5\nprintf \"%s\\n\" \"$ax_pthread_ok\" >&6; }\n        if test \"x$ax_pthread_ok\" = \"xno\"; then\n                PTHREAD_LIBS=\"\"\n                PTHREAD_CFLAGS=\"\"\n        fi\n        CC=\"$ax_pthread_save_CC\"\n        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n        LIBS=\"$ax_pthread_save_LIBS\"\nfi\n\n# We must check for the threads library under a number of different\n# names; the ordering is very important because some systems\n# (e.g. DEC) have both -lpthread and -lpthreads, where one of the\n# libraries is broken (non-POSIX).\n\n# Create a list of thread flags to try. Items with a \",\" contain both\n# C compiler flags (before \",\") and linker flags (after \",\"). Other items\n# starting with a \"-\" are C compiler flags, and remaining items are\n# library names, except for \"none\" which indicates that we try without\n# any flags at all, and \"pthread-config\" which is a program returning\n# the flags for the Pth emulation library.\n\nax_pthread_flags=\"pthreads none -Kthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n\n# The ordering *is* (sometimes) important.  Some notes on the\n# individual items follow:\n\n# pthreads: AIX (must check this before -lpthread)\n# none: in case threads are in libc; should be tried before -Kthread and\n#       other compiler flags to prevent continual compiler warnings\n# -Kthread: Sequent (threads in libc, but -Kthread needed for pthread.h)\n# -pthread: Linux/gcc (kernel threads), BSD/gcc (userland threads), Tru64\n#           (Note: HP C rejects this with \"bad form for `-t' option\")\n# -pthreads: Solaris/gcc (Note: HP C also rejects)\n# -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it\n#      doesn't hurt to check since this sometimes defines pthreads and\n#      -D_REENTRANT too), HP C (must be checked before -lpthread, which\n#      is present but should not be used directly; and before -mthreads,\n#      because the compiler interprets this as \"-mt\" + \"-hreads\")\n# -mthreads: Mingw32/gcc, Lynx/gcc\n# pthread: Linux, etcetera\n# --thread-safe: KAI C++\n# pthread-config: use pthread-config program (for GNU Pth library)\n\ncase $host_os in\n\n        freebsd*)\n\n        # -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)\n        # lthread: LinuxThreads port on FreeBSD (also preferred to -pthread)\n\n        ax_pthread_flags=\"-kthread lthread $ax_pthread_flags\"\n        ;;\n\n        hpux*)\n\n        # From the cc(1) man page: \"[-mt] Sets various -D flags to enable\n        # multi-threading and also sets -lpthread.\"\n\n        ax_pthread_flags=\"-mt -pthread pthread $ax_pthread_flags\"\n        ;;\n\n        openedition*)\n\n        # IBM z/OS requires a feature-test macro to be defined in order to\n        # enable POSIX threads at all, so give the user a hint if this is\n        # not set. (We don't define these ourselves, as they can affect\n        # other portions of the system API in unpredictable ways.)\n\n        cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n#            if !defined(_OPEN_THREADS) && !defined(_UNIX03_THREADS)\n             AX_PTHREAD_ZOS_MISSING\n#            endif\n\n_ACEOF\nif (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n  $EGREP_TRADITIONAL \"AX_PTHREAD_ZOS_MISSING\" >/dev/null 2>&1\nthen :\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: IBM z/OS requires -D_OPEN_THREADS or -D_UNIX03_THREADS to enable pthreads support.\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: IBM z/OS requires -D_OPEN_THREADS or -D_UNIX03_THREADS to enable pthreads support.\" >&2;}\nfi\nrm -rf conftest*\n\n        ;;\n\n        solaris*)\n\n        # On Solaris (at least, for some versions), libc contains stubbed\n        # (non-functional) versions of the pthreads routines, so link-based\n        # tests will erroneously succeed. (N.B.: The stubs are missing\n        # pthread_cleanup_push, or rather a function called by this macro,\n        # so we could check for that, but who knows whether they'll stub\n        # that too in a future libc.)  So we'll check first for the\n        # standard Solaris way of linking pthreads (-mt -lpthread).\n\n        ax_pthread_flags=\"-mt,-lpthread pthread $ax_pthread_flags\"\n        ;;\nesac\n\n# Are we compiling with Clang?\n\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether $CC is Clang\" >&5\nprintf %s \"checking whether $CC is Clang... \" >&6; }\nif test ${ax_cv_PTHREAD_CLANG+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ax_cv_PTHREAD_CLANG=no\n     # Note that Autoconf sets GCC=yes for Clang as well as GCC\n     if test \"x$GCC\" = \"xyes\"; then\n        cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n/* Note: Clang 2.7 lacks __clang_[a-z]+__ */\n#            if defined(__clang__) && defined(__llvm__)\n             AX_PTHREAD_CC_IS_CLANG\n#            endif\n\n_ACEOF\nif (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n  $EGREP_TRADITIONAL \"AX_PTHREAD_CC_IS_CLANG\" >/dev/null 2>&1\nthen :\n  ax_cv_PTHREAD_CLANG=yes\nfi\nrm -rf conftest*\n\n     fi\n     ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ax_cv_PTHREAD_CLANG\" >&5\nprintf \"%s\\n\" \"$ax_cv_PTHREAD_CLANG\" >&6; }\nax_pthread_clang=\"$ax_cv_PTHREAD_CLANG\"\n\n\n# GCC generally uses -pthread, or -pthreads on some platforms (e.g. SPARC)\n\n# Note that for GCC and Clang -pthread generally implies -lpthread,\n# except when -nostdlib is passed.\n# This is problematic using libtool to build C++ shared libraries with pthread:\n# [1] https://gcc.gnu.org/bugzilla/show_bug.cgi?id=25460\n# [2] https://bugzilla.redhat.com/show_bug.cgi?id=661333\n# [3] https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=468555\n# To solve this, first try -pthread together with -lpthread for GCC\n\nif test \"x$GCC\" = \"xyes\"\nthen :\n  ax_pthread_flags=\"-pthread,-lpthread -pthread -pthreads $ax_pthread_flags\"\nfi\n\n# Clang takes -pthread (never supported any other flag), but we'll try with -lpthread first\n\nif test \"x$ax_pthread_clang\" = \"xyes\"\nthen :\n  ax_pthread_flags=\"-pthread,-lpthread -pthread\"\nfi\n\n\n# The presence of a feature test macro requesting re-entrant function\n# definitions is, on some systems, a strong hint that pthreads support is\n# correctly enabled\n\ncase $host_os in\n        darwin* | hpux* | linux* | osf* | solaris*)\n        ax_pthread_check_macro=\"_REENTRANT\"\n        ;;\n\n        aix*)\n        ax_pthread_check_macro=\"_THREAD_SAFE\"\n        ;;\n\n        *)\n        ax_pthread_check_macro=\"--\"\n        ;;\nesac\nif test \"x$ax_pthread_check_macro\" = \"x--\"\nthen :\n  ax_pthread_check_cond=0\nelse case e in #(\n  e) ax_pthread_check_cond=\"!defined($ax_pthread_check_macro)\" ;;\nesac\nfi\n\n\nif test \"x$ax_pthread_ok\" = \"xno\"; then\nfor ax_pthread_try_flag in $ax_pthread_flags; do\n\n        case $ax_pthread_try_flag in\n                none)\n                { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether pthreads work without any flags\" >&5\nprintf %s \"checking whether pthreads work without any flags... \" >&6; }\n                ;;\n\n                *,*)\n                PTHREAD_CFLAGS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\1/\"`\n                PTHREAD_LIBS=`echo $ax_pthread_try_flag | sed \"s/^\\(.*\\),\\(.*\\)$/\\2/\"`\n                { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether pthreads work with \\\"$PTHREAD_CFLAGS\\\" and \\\"$PTHREAD_LIBS\\\"\" >&5\nprintf %s \"checking whether pthreads work with \\\"$PTHREAD_CFLAGS\\\" and \\\"$PTHREAD_LIBS\\\"... \" >&6; }\n                ;;\n\n                -*)\n                { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether pthreads work with $ax_pthread_try_flag\" >&5\nprintf %s \"checking whether pthreads work with $ax_pthread_try_flag... \" >&6; }\n                PTHREAD_CFLAGS=\"$ax_pthread_try_flag\"\n                ;;\n\n                pthread-config)\n                # Extract the first word of \"pthread-config\", so it can be a program name with args.\nset dummy pthread-config; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_ax_pthread_config+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$ax_pthread_config\"; then\n  ac_cv_prog_ax_pthread_config=\"$ax_pthread_config\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ax_pthread_config=\"yes\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  test -z \"$ac_cv_prog_ax_pthread_config\" && ac_cv_prog_ax_pthread_config=\"no\"\nfi ;;\nesac\nfi\nax_pthread_config=$ac_cv_prog_ax_pthread_config\nif test -n \"$ax_pthread_config\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ax_pthread_config\" >&5\nprintf \"%s\\n\" \"$ax_pthread_config\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n                if test \"x$ax_pthread_config\" = \"xno\"\nthen :\n  continue\nfi\n                PTHREAD_CFLAGS=\"`pthread-config --cflags`\"\n                PTHREAD_LIBS=\"`pthread-config --ldflags` `pthread-config --libs`\"\n                ;;\n\n                *)\n                { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for the pthreads library -l$ax_pthread_try_flag\" >&5\nprintf %s \"checking for the pthreads library -l$ax_pthread_try_flag... \" >&6; }\n                PTHREAD_LIBS=\"-l$ax_pthread_try_flag\"\n                ;;\n        esac\n\n        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n        ax_pthread_save_LIBS=\"$LIBS\"\n        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n        LIBS=\"$PTHREAD_LIBS $LIBS\"\n\n        # Check for various functions.  We must include pthread.h,\n        # since some functions may be macros.  (On the Sequent, we\n        # need a special flag -Kthread to make this header compile.)\n        # We check for pthread_join because it is in -lpthread on IRIX\n        # while pthread_create is in libc.  We check for pthread_attr_init\n        # due to DEC craziness with -lpthreads.  We check for\n        # pthread_cleanup_push because it is one of the few pthread\n        # functions on Solaris that doesn't have a non-functional libc stub.\n        # We try pthread_create on general principles.\n\n        cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <pthread.h>\n#                       if $ax_pthread_check_cond\n#                        error \"$ax_pthread_check_macro must be defined\"\n#                       endif\n                        static void *some_global = NULL;\n                        static void routine(void *a)\n                          {\n                             /* To avoid any unused-parameter or\n                                unused-but-set-parameter warning.  */\n                             some_global = a;\n                          }\n                        static void *start_routine(void *a) { return a; }\nint\nmain (void)\n{\npthread_t th; pthread_attr_t attr;\n                        pthread_create(&th, 0, start_routine, 0);\n                        pthread_join(th, 0);\n                        pthread_attr_init(&attr);\n                        pthread_cleanup_push(routine, 0);\n                        pthread_cleanup_pop(0) /* ; */\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"\nthen :\n  ax_pthread_ok=yes\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam \\\n    conftest$ac_exeext conftest.$ac_ext\n\n        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n        LIBS=\"$ax_pthread_save_LIBS\"\n\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ax_pthread_ok\" >&5\nprintf \"%s\\n\" \"$ax_pthread_ok\" >&6; }\n        if test \"x$ax_pthread_ok\" = \"xyes\"\nthen :\n  break\nfi\n\n        PTHREAD_LIBS=\"\"\n        PTHREAD_CFLAGS=\"\"\ndone\nfi\n\n\n# Clang needs special handling, because older versions handle the -pthread\n# option in a rather... idiosyncratic way\n\nif test \"x$ax_pthread_clang\" = \"xyes\"; then\n\n        # Clang takes -pthread; it has never supported any other flag\n\n        # (Note 1: This will need to be revisited if a system that Clang\n        # supports has POSIX threads in a separate library.  This tends not\n        # to be the way of modern systems, but it's conceivable.)\n\n        # (Note 2: On some systems, notably Darwin, -pthread is not needed\n        # to get POSIX threads support; the API is always present and\n        # active.  We could reasonably leave PTHREAD_CFLAGS empty.  But\n        # -pthread does define _REENTRANT, and while the Darwin headers\n        # ignore this macro, third-party headers might not.)\n\n        # However, older versions of Clang make a point of warning the user\n        # that, in an invocation where only linking and no compilation is\n        # taking place, the -pthread option has no effect (\"argument unused\n        # during compilation\").  They expect -pthread to be passed in only\n        # when source code is being compiled.\n        #\n        # Problem is, this is at odds with the way Automake and most other\n        # C build frameworks function, which is that the same flags used in\n        # compilation (CFLAGS) are also used in linking.  Many systems\n        # supported by AX_PTHREAD require exactly this for POSIX threads\n        # support, and in fact it is often not straightforward to specify a\n        # flag that is used only in the compilation phase and not in\n        # linking.  Such a scenario is extremely rare in practice.\n        #\n        # Even though use of the -pthread flag in linking would only print\n        # a warning, this can be a nuisance for well-run software projects\n        # that build with -Werror.  So if the active version of Clang has\n        # this misfeature, we search for an option to squash it.\n\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether Clang needs flag to prevent \\\"argument unused\\\" warning when linking with -pthread\" >&5\nprintf %s \"checking whether Clang needs flag to prevent \\\"argument unused\\\" warning when linking with -pthread... \" >&6; }\nif test ${ax_cv_PTHREAD_CLANG_NO_WARN_FLAG+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=unknown\n             # Create an alternate version of $ac_link that compiles and\n             # links in two steps (.c -> .o, .o -> exe) instead of one\n             # (.c -> exe), because the warning occurs only in the second\n             # step\n             ax_pthread_save_ac_link=\"$ac_link\"\n             ax_pthread_sed='s/conftest\\.\\$ac_ext/conftest.$ac_objext/g'\n             ax_pthread_link_step=`printf \"%s\\n\" \"$ac_link\" | sed \"$ax_pthread_sed\"`\n             ax_pthread_2step_ac_link=\"($ac_compile) && (echo ==== >&5) && ($ax_pthread_link_step)\"\n             ax_pthread_save_CFLAGS=\"$CFLAGS\"\n             for ax_pthread_try in '' -Qunused-arguments -Wno-unused-command-line-argument unknown; do\n                if test \"x$ax_pthread_try\" = \"xunknown\"\nthen :\n  break\nfi\n                CFLAGS=\"-Werror -Wunknown-warning-option $ax_pthread_try -pthread $ax_pthread_save_CFLAGS\"\n                ac_link=\"$ax_pthread_save_ac_link\"\n                cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\nint main(void){return 0;}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"\nthen :\n  ac_link=\"$ax_pthread_2step_ac_link\"\n                     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\nint main(void){return 0;}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"\nthen :\n  break\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam \\\n    conftest$ac_exeext conftest.$ac_ext\n\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam \\\n    conftest$ac_exeext conftest.$ac_ext\n             done\n             ac_link=\"$ax_pthread_save_ac_link\"\n             CFLAGS=\"$ax_pthread_save_CFLAGS\"\n             if test \"x$ax_pthread_try\" = \"x\"\nthen :\n  ax_pthread_try=no\nfi\n             ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=\"$ax_pthread_try\"\n             ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ax_cv_PTHREAD_CLANG_NO_WARN_FLAG\" >&5\nprintf \"%s\\n\" \"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG\" >&6; }\n\n        case \"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG\" in\n                no | unknown) ;;\n                *) PTHREAD_CFLAGS=\"$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG $PTHREAD_CFLAGS\" ;;\n        esac\n\nfi # $ax_pthread_clang = yes\n\n\n\n# Various other checks:\nif test \"x$ax_pthread_ok\" = \"xyes\"; then\n        ax_pthread_save_CFLAGS=\"$CFLAGS\"\n        ax_pthread_save_LIBS=\"$LIBS\"\n        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n        LIBS=\"$PTHREAD_LIBS $LIBS\"\n\n        # Detect AIX lossage: JOINABLE attribute is called UNDETACHED.\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for joinable pthread attribute\" >&5\nprintf %s \"checking for joinable pthread attribute... \" >&6; }\nif test ${ax_cv_PTHREAD_JOINABLE_ATTR+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ax_cv_PTHREAD_JOINABLE_ATTR=unknown\n             for ax_pthread_attr in PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_UNDETACHED; do\n                 cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <pthread.h>\nint\nmain (void)\n{\nint attr = $ax_pthread_attr; return attr /* ; */\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"\nthen :\n  ax_cv_PTHREAD_JOINABLE_ATTR=$ax_pthread_attr; break\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam \\\n    conftest$ac_exeext conftest.$ac_ext\n             done\n             ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ax_cv_PTHREAD_JOINABLE_ATTR\" >&5\nprintf \"%s\\n\" \"$ax_cv_PTHREAD_JOINABLE_ATTR\" >&6; }\n        if test \"x$ax_cv_PTHREAD_JOINABLE_ATTR\" != \"xunknown\" && \\\n               test \"x$ax_cv_PTHREAD_JOINABLE_ATTR\" != \"xPTHREAD_CREATE_JOINABLE\" && \\\n               test \"x$ax_pthread_joinable_attr_defined\" != \"xyes\"\nthen :\n\nprintf \"%s\\n\" \"#define PTHREAD_CREATE_JOINABLE $ax_cv_PTHREAD_JOINABLE_ATTR\" >>confdefs.h\n\n               ax_pthread_joinable_attr_defined=yes\n\nfi\n\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether more special flags are required for pthreads\" >&5\nprintf %s \"checking whether more special flags are required for pthreads... \" >&6; }\nif test ${ax_cv_PTHREAD_SPECIAL_FLAGS+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ax_cv_PTHREAD_SPECIAL_FLAGS=no\n             case $host_os in\n             solaris*)\n             ax_cv_PTHREAD_SPECIAL_FLAGS=\"-D_POSIX_PTHREAD_SEMANTICS\"\n             ;;\n             esac\n             ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ax_cv_PTHREAD_SPECIAL_FLAGS\" >&5\nprintf \"%s\\n\" \"$ax_cv_PTHREAD_SPECIAL_FLAGS\" >&6; }\n        if test \"x$ax_cv_PTHREAD_SPECIAL_FLAGS\" != \"xno\" && \\\n               test \"x$ax_pthread_special_flags_added\" != \"xyes\"\nthen :\n  PTHREAD_CFLAGS=\"$ax_cv_PTHREAD_SPECIAL_FLAGS $PTHREAD_CFLAGS\"\n               ax_pthread_special_flags_added=yes\nfi\n\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for PTHREAD_PRIO_INHERIT\" >&5\nprintf %s \"checking for PTHREAD_PRIO_INHERIT... \" >&6; }\nif test ${ax_cv_PTHREAD_PRIO_INHERIT+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <pthread.h>\nint\nmain (void)\n{\nint i = PTHREAD_PRIO_INHERIT;\n                                               return i;\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"\nthen :\n  ax_cv_PTHREAD_PRIO_INHERIT=yes\nelse case e in #(\n  e) ax_cv_PTHREAD_PRIO_INHERIT=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam \\\n    conftest$ac_exeext conftest.$ac_ext\n             ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ax_cv_PTHREAD_PRIO_INHERIT\" >&5\nprintf \"%s\\n\" \"$ax_cv_PTHREAD_PRIO_INHERIT\" >&6; }\n        if test \"x$ax_cv_PTHREAD_PRIO_INHERIT\" = \"xyes\" && \\\n               test \"x$ax_pthread_prio_inherit_defined\" != \"xyes\"\nthen :\n\nprintf \"%s\\n\" \"#define HAVE_PTHREAD_PRIO_INHERIT 1\" >>confdefs.h\n\n               ax_pthread_prio_inherit_defined=yes\n\nfi\n\n        CFLAGS=\"$ax_pthread_save_CFLAGS\"\n        LIBS=\"$ax_pthread_save_LIBS\"\n\n        # More AIX lossage: compile with *_r variant\n        if test \"x$GCC\" != \"xyes\"; then\n            case $host_os in\n                aix*)\n                case \"x/$CC\" in #(\n  x*/c89|x*/c89_128|x*/c99|x*/c99_128|x*/cc|x*/cc128|x*/xlc|x*/xlc_v6|x*/xlc128|x*/xlc128_v6) :\n    #handle absolute path differently from PATH based program lookup\n                     case \"x$CC\" in #(\n  x/*) :\n\n\t\t\t   if as_fn_executable_p ${CC}_r\nthen :\n  PTHREAD_CC=\"${CC}_r\"\nfi\n\t\t\t   if test \"x${CXX}\" != \"x\"\nthen :\n  if as_fn_executable_p ${CXX}_r\nthen :\n  PTHREAD_CXX=\"${CXX}_r\"\nfi\nfi\n\t\t\t  ;; #(\n  *) :\n\n\t\t\t   for ac_prog in ${CC}_r\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_PTHREAD_CC+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$PTHREAD_CC\"; then\n  ac_cv_prog_PTHREAD_CC=\"$PTHREAD_CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_PTHREAD_CC=\"$ac_prog\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nPTHREAD_CC=$ac_cv_prog_PTHREAD_CC\nif test -n \"$PTHREAD_CC\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $PTHREAD_CC\" >&5\nprintf \"%s\\n\" \"$PTHREAD_CC\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n  test -n \"$PTHREAD_CC\" && break\ndone\ntest -n \"$PTHREAD_CC\" || PTHREAD_CC=\"$CC\"\n\n\t\t\t   if test \"x${CXX}\" != \"x\"\nthen :\n  for ac_prog in ${CXX}_r\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\nprintf %s \"checking for $ac_word... \" >&6; }\nif test ${ac_cv_prog_PTHREAD_CXX+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) if test -n \"$PTHREAD_CXX\"; then\n  ac_cv_prog_PTHREAD_CXX=\"$PTHREAD_CXX\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  case $as_dir in #(((\n    '') as_dir=./ ;;\n    */) ;;\n    *) as_dir=$as_dir/ ;;\n  esac\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_PTHREAD_CXX=\"$ac_prog\"\n    printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: found $as_dir$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi ;;\nesac\nfi\nPTHREAD_CXX=$ac_cv_prog_PTHREAD_CXX\nif test -n \"$PTHREAD_CXX\"; then\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $PTHREAD_CXX\" >&5\nprintf \"%s\\n\" \"$PTHREAD_CXX\" >&6; }\nelse\n  { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\nfi\n\n\n  test -n \"$PTHREAD_CXX\" && break\ndone\ntest -n \"$PTHREAD_CXX\" || PTHREAD_CXX=\"$CXX\"\n\nfi\n\n                      ;;\nesac\n                     ;; #(\n  *) :\n     ;;\nesac\n                ;;\n            esac\n        fi\nfi\n\ntest -n \"$PTHREAD_CC\" || PTHREAD_CC=\"$CC\"\ntest -n \"$PTHREAD_CXX\" || PTHREAD_CXX=\"$CXX\"\n\n\n\n\n\n\n# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:\nif test \"x$ax_pthread_ok\" = \"xyes\"; then\n\nprintf \"%s\\n\" \"#define HAVE_PTHREAD 1\" >>confdefs.h\n\n        :\nelse\n        ax_pthread_ok=no\n\nfi\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\nPBX_NO_BINARY_MODULES=0\n# Check whether --enable-binary-modules was given.\nif test ${enable_binary_modules+y}\nthen :\n  enableval=$enable_binary_modules; case \"${enableval}\" in\n\t      y|ye|yes) PBX_NO_BINARY_MODULES=0 ;;\n\t      n|no)  PBX_NO_BINARY_MODULES=1 ;;\n\t      *) as_fn_error $? \"bad value ${enableval} for --disable-binary-modules\" \"$LINENO\" 5  ;;\n\tesac\nfi\n\n\n\n# Check whether --enable-dev-mode was given.\nif test ${enable_dev_mode+y}\nthen :\n  enableval=$enable_dev_mode; case \"${enableval}\" in\n\t      y|ye|yes) AST_DEVMODE=yes ;;\n\t      n|no)  AST_DEVMODE=no ;;\n\t      noisy)\n\t      AST_DEVMODE=yes\n\t      NOISY_BUILD=yes\n\t      ;;\n\t      strict)\n\t      AST_DEVMODE=yes\n\t      AST_DEVMODE_STRICT=yes\n\t      ;;\n\t      *) as_fn_error $? \"bad value ${enableval} for --enable-dev-mode\" \"$LINENO\" 5  ;;\n\tesac\nfi\n\n\n\n\n\n\n\n# Check whether --with-download-cache was given.\nif test ${with_download_cache+y}\nthen :\n  withval=$with_download_cache;\n\tcase ${withval} in\n\tn|no)\n\t\tunset AST_DOWNLOAD_CACHE\n\t\t;;\n\t*)\n\t\tif test \"x${withval}\" = \"x\"; then\n\t\t\t:\n\t\telse\n\t\t\tAST_DOWNLOAD_CACHE=\"${withval}\"\n\t\tfi\n\t\t;;\n\tesac\n\nelse case e in #(\n  e) : ;;\nesac\nfi\n\n\n\n\n\n# Check whether --with-sounds-cache was given.\nif test ${with_sounds_cache+y}\nthen :\n  withval=$with_sounds_cache;\n\tcase ${withval} in\n\tn|no)\n\t\tunset SOUNDS_CACHE_DIR\n\t\t;;\n\t*)\n\t\tif test \"x${withval}\" = \"x\"; then\n\t\t\t:\n\t\telse\n\t\t\tSOUNDS_CACHE_DIR=\"${withval}\"\n\t\tfi\n\t\t;;\n\tesac\n\nelse case e in #(\n  e) : ;;\nesac\nfi\n\n\n\n\n\n# Check whether --with-externals-cache was given.\nif test ${with_externals_cache+y}\nthen :\n  withval=$with_externals_cache;\n\tcase ${withval} in\n\tn|no)\n\t\tunset EXTERNALS_CACHE_DIR\n\t\t;;\n\t*)\n\t\tif test \"x${withval}\" = \"x\"; then\n\t\t\t:\n\t\telse\n\t\t\tEXTERNALS_CACHE_DIR=\"${withval}\"\n\t\tfi\n\t\t;;\n\tesac\n\nelse case e in #(\n  e) : ;;\nesac\nfi\n\n\n\n\nAST_CODE_COVERAGE=no\n# Check whether --enable-coverage was given.\nif test ${enable_coverage+y}\nthen :\n  enableval=$enable_coverage; case \"${enableval}\" in\n\t      y|ye|yes) AST_CODE_COVERAGE=yes ;;\n\t      n|no) AST_CODE_COVERAGE=no ;;\n\t      *) as_fn_error $? \"bad value ${enableval} for --enable-coverage\" \"$LINENO\" 5  ;;\n\tesac\nfi\n\n\n\n\n\t{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for RAII support\" >&5\nprintf %s \"checking for RAII support... \" >&6; }\n\tAST_C_COMPILER_FAMILY=\"\"\n\tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain (void)\n{\n\n\t\t\tint main() {\n\t\t\t\t#if defined(__clang__)\n\t\t\t\tchoke\n\t\t\t\t#endif\n\t\t\t\treturn 0;\n\t\t\t}\n\n  ;\n  return 0;\n}\n\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"\nthen :\n\n\t\t\t\t\t\t{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for gcc -fnested-functions\" >&5\nprintf %s \"checking for gcc -fnested-functions... \" >&6; }\n\t\t\tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n\nint\nmain (void)\n{\nauto void foo(void); void foo(void) {}\n  ;\n  return 0;\n}\n\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n\n\t\t\t\t\tAST_NESTED_FUNCTIONS=\"\"\n\t\t\t\t\t{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\n\nelse case e in #(\n  e)\n\t\t\t\t\tAST_NESTED_FUNCTIONS=\"-fnested-functions\"\n\t\t\t\t\t{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\nprintf \"%s\\n\" \"yes\" >&6; }\n\n\t\t\t ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\n\n\t\t\tAST_C_COMPILER_FAMILY=\"gcc\"\n\nelse case e in #(\n  e)\n\t\t\t{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for clang -fblocks\" >&5\nprintf %s \"checking for clang -fblocks... \" >&6; }\n\t\t\tif test \"`echo 'int main(){return ^{return 42;}();}' | ${CC} -o /dev/null -fblocks -x c - 2>&1`\" = \"\"; then\n\t\t\t\tAST_CLANG_BLOCKS_LIBS=\"\"\n\t\t\t\tAST_CLANG_BLOCKS=\"-Wno-unknown-warning-option -fblocks\"\n\t\t\t\t{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\nprintf \"%s\\n\" \"yes\" >&6; }\n\t\t\telif test \"`echo 'int main(){return ^{return 42;}();}' | ${CC} -o /dev/null -fblocks -x c -lBlocksRuntime - 2>&1`\" = \"\"; then\n\t\t\t\tAST_CLANG_BLOCKS_LIBS=\"-lBlocksRuntime\"\n\t\t\t\tAST_CLANG_BLOCKS=\"-fblocks\"\n\t\t\t\t{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\nprintf \"%s\\n\" \"yes\" >&6; }\n\t\t\telse\n\t\t\t\tas_fn_error $? \"BlocksRuntime is required for clang, please install libblocksruntime\" \"$LINENO\" 5\n\t\t\tfi\n\n\n\t\t\tAST_C_COMPILER_FAMILY=\"clang\"\n\n\t ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam \\\n    conftest$ac_exeext conftest.$ac_ext\n\tif test -z \"${AST_C_COMPILER_FAMILY}\"; then\n\t\tas_fn_error $? \"Compiler ${CC} not supported. Mminimum required gcc-4.3 / llvm-gcc-4.3 / clang-3.3 + libblocksruntime-dev\" \"$LINENO\" 5\n\tfi\n\n\n\n\t{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for clang strsep/strcmp optimization\" >&5\nprintf %s \"checking for clang strsep/strcmp optimization... \" >&6; }\n\tsave_CFLAGS=\"$CFLAGS\"\n\tCFLAGS=\"$CFLAGS -O1 -Werror=array-bounds\"\n\tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n\n\t\t\t\t#include <stdio.h>\n\t\t\t\t#include <string.h>\n\n\t\t\t\t/* fails with clang and -O1 */\n\t\t\t\tvoid test_strsep_strcmp (void) {\n\t\t\t\t\tchar *haystackstr = \"test1,test2\";\n\t\t\t\t\tchar *outstr;\n\t\t\t\t\tif (!strcmp(haystackstr, \",\")) {\n\t\t\t\t\t\tprintf(\"fail\\n\");\n\t\t\t\t\t}\n\t\t\t\t\tif ((outstr = strsep(&haystackstr, \",\"))) {\n\t\t\t\t\t\tprintf(\"fail:%s\\n\", outstr);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tint main(int argc, char *argv) {\n\t\t\t\t\ttest_strsep_strcmp();\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"\nthen :\n\n\t\t\t{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\n\nelse case e in #(\n  e)\n\nprintf \"%s\\n\" \"#define _HAVE_STRING_ARCH_strcmp 1\" >>confdefs.h\n\n\nprintf \"%s\\n\" \"#define _HAVE_STRING_ARCH_strsep 1\" >>confdefs.h\n\n\t\t\t{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: prevent use of __string2_1bptr_p / strsep / strcmp from bits/string2.h\" >&5\nprintf \"%s\\n\" \"prevent use of __string2_1bptr_p / strsep / strcmp from bits/string2.h\" >&6; }\n\n\t ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext\n\tCFLAGS=\"$save_CFLAGS\"\n\n\nJANSSON_BUNDLED=no\n\n# Check whether --with-jansson-bundled was given.\nif test ${with_jansson_bundled+y}\nthen :\n  withval=$with_jansson_bundled; case \"${withval}\" in\n\t\ty|ye|yes) JANSSON_BUNDLED=yes ;;\n\t\t*) JANSSON_BUNDLED=no ;;\n\tesac\nfi\n\n\nPJPROJECT_BUNDLED=yes\n\n\n\n# Check whether --with-pjproject-bundled was given.\nif test ${with_pjproject_bundled+y}\nthen :\n  withval=$with_pjproject_bundled; case \"${withval}\" in\n\t      n|no) PJPROJECT_BUNDLED=no ;;\n\t      *) PJPROJECT_BUNDLED=yes ;;\n\tesac\nfi\n\n\nif test \"${with_pjproject}\" = \"no\" || test \"${with_pjproject}\" = \"n\" ; then\n\tPJPROJECT_BUNDLED=no\nfi\n\nLIBJWT_BUNDLED=no\n\n# Check whether --with-libjwt-bundled was given.\nif test ${with_libjwt_bundled+y}\nthen :\n  withval=$with_libjwt_bundled; case \"${withval}\" in\n\t\ty|ye|yes) LIBJWT_BUNDLED=yes ;;\n\t\t*) LIBJWT_BUNDLED=no ;;\n\tesac\nfi\n\n\n#\n# OpenSSL stuff has to be done here because we want to pass\n# any resulting CFLAGS and LDFLAGS to the bundled pjproject\n# configure done in THIRD_PARTY_CONFIGURE()\n#\n\n    CRYPTO_DESCRIP=\"OpenSSL Cryptography\"\n    CRYPTO_OPTION=\"crypto\"\n    PBX_CRYPTO=0\n\n# Check whether --with-crypto was given.\nif test ${with_crypto+y}\nthen :\n  withval=$with_crypto;\n\tcase ${withval} in\n\tn|no)\n\tUSE_CRYPTO=no\n\t# -1 is a magic value used by menuselect to know that the package\n\t# was disabled, other than 'not found'\n\tPBX_CRYPTO=-1\n\t;;\n\ty|ye|yes)\n\tac_mandatory_list=\"${ac_mandatory_list} CRYPTO\"\n\t;;\n\t*)\n\tCRYPTO_DIR=\"${withval}\"\n\tac_mandatory_list=\"${ac_mandatory_list} CRYPTO\"\n\t;;\n\tesac\n\nfi\n\n\n\n\n\n\n\n\n    OPENSSL_DESCRIP=\"OpenSSL Secure Sockets Layer\"\n    OPENSSL_OPTION=\"ssl\"\n    PBX_OPENSSL=0\n\n# Check whether --with-ssl was given.\nif test ${with_ssl+y}\nthen :\n  withval=$with_ssl;\n\tcase ${withval} in\n\tn|no)\n\tUSE_OPENSSL=no\n\t# -1 is a magic value used by menuselect to know that the package\n\t# was disabled, other than 'not found'\n\tPBX_OPENSSL=-1\n\t;;\n\ty|ye|yes)\n\tac_mandatory_list=\"${ac_mandatory_list} OPENSSL\"\n\t;;\n\t*)\n\tOPENSSL_DIR=\"${withval}\"\n\tac_mandatory_list=\"${ac_mandatory_list} OPENSSL\"\n\t;;\n\tesac\n\nfi\n\n\n\n\n\n\n\n\nOPENSSL_BIO_METHOD_DESCRIP=\"OpenSSL BIO Method Support\"\nOPENSSL_BIO_METHOD_OPTION=crypto\nOPENSSL_BIO_METHOD_DIR=${CRYPTO_DIR}\n\nPBX_OPENSSL_BIO_METHOD=0\n\n\n\n\n\n\n\n# If neither --without-ssl (PBX_OPENSSL=-1) nor --without-crypto (PBX_CRYPTO=-1)\n# and there were no directories atdded to --with-ssl and --with-crypto, and\n# pkg-config is installed (which is should be by install_prereq).\nif test \"x$PKG_CONFIG\" != \"x\" -a $PBX_OPENSSL -ge 0 -a $PBX_CRYPTO -ge 0 -a \"x$OPENSSL_DIR\" = \"x\" ; then\n\t{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking OPENSSL with pkg-config\" >&5\nprintf \"%s\\n\" \"$as_me: checking OPENSSL with pkg-config\" >&6;}\n\t{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether system openssl > 1.1.0\" >&5\nprintf \"%s\\n\" \"$as_me: checking whether system openssl > 1.1.0\" >&6;}\n\n      if test \"x${PBX_OPENSSL}\" != \"x1\" -a \"${USE_OPENSSL}\" != \"no\"; then\n\npkg_failed=no\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for openssl >= 1.1.0\" >&5\nprintf %s \"checking for openssl >= 1.1.0... \" >&6; }\n\nif test -n \"$OPENSSL_CFLAGS\"; then\n    pkg_cv_OPENSSL_CFLAGS=\"$OPENSSL_CFLAGS\"\n elif test -n \"$PKG_CONFIG\"; then\n    if test -n \"$PKG_CONFIG\" && \\\n    { { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$PKG_CONFIG --exists --print-errors \\\"openssl >= 1.1.0\\\"\"; } >&5\n  ($PKG_CONFIG --exists --print-errors \"openssl >= 1.1.0\") 2>&5\n  ac_status=$?\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then\n  pkg_cv_OPENSSL_CFLAGS=`$PKG_CONFIG --cflags \"openssl >= 1.1.0\" 2>/dev/null`\n\t\t      test \"x$?\" != \"x0\" && pkg_failed=yes\nelse\n  pkg_failed=yes\nfi\n else\n    pkg_failed=untried\nfi\nif test -n \"$OPENSSL_LIBS\"; then\n    pkg_cv_OPENSSL_LIBS=\"$OPENSSL_LIBS\"\n elif test -n \"$PKG_CONFIG\"; then\n    if test -n \"$PKG_CONFIG\" && \\\n    { { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$PKG_CONFIG --exists --print-errors \\\"openssl >= 1.1.0\\\"\"; } >&5\n  ($PKG_CONFIG --exists --print-errors \"openssl >= 1.1.0\") 2>&5\n  ac_status=$?\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then\n  pkg_cv_OPENSSL_LIBS=`$PKG_CONFIG --libs \"openssl >= 1.1.0\" 2>/dev/null`\n\t\t      test \"x$?\" != \"x0\" && pkg_failed=yes\nelse\n  pkg_failed=yes\nfi\n else\n    pkg_failed=untried\nfi\n\n\n\nif test $pkg_failed = yes; then\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\n\nif $PKG_CONFIG --atleast-pkgconfig-version 0.20; then\n        _pkg_short_errors_supported=yes\nelse\n        _pkg_short_errors_supported=no\nfi\n        if test $_pkg_short_errors_supported = yes; then\n                OPENSSL_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs \"openssl >= 1.1.0\" 2>&1`\n        else\n                OPENSSL_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs \"openssl >= 1.1.0\" 2>&1`\n        fi\n        # Put the nasty error message in config.log where it belongs\n        echo \"$OPENSSL_PKG_ERRORS\" >&5\n\n\n            PBX_OPENSSL=0\n\n\nelif test $pkg_failed = untried; then\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\n\n            PBX_OPENSSL=0\n\n\nelse\n        OPENSSL_CFLAGS=$pkg_cv_OPENSSL_CFLAGS\n        OPENSSL_LIBS=$pkg_cv_OPENSSL_LIBS\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\nprintf \"%s\\n\" \"yes\" >&6; }\n\n            PBX_OPENSSL=1\n            OPENSSL_INCLUDE=$(echo ${OPENSSL_CFLAGS} | $SED -e \"s|-std=c99||g\")\n            OPENSSL_LIB=\"$OPENSSL_LIBS\"\n\nprintf \"%s\\n\" \"#define HAVE_OPENSSL 1\" >>confdefs.h\n\n\nfi\n   fi\n\n\tif test $PBX_OPENSSL -eq 0 ; then\n\t\t{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking whether alternate openssl11 is installed\" >&5\nprintf \"%s\\n\" \"$as_me: checking whether alternate openssl11 is installed\" >&6;}\n\n      if test \"x${PBX_OPENSSL}\" != \"x1\" -a \"${USE_OPENSSL}\" != \"no\"; then\n\npkg_failed=no\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for openssl11\" >&5\nprintf %s \"checking for openssl11... \" >&6; }\n\nif test -n \"$OPENSSL_CFLAGS\"; then\n    pkg_cv_OPENSSL_CFLAGS=\"$OPENSSL_CFLAGS\"\n elif test -n \"$PKG_CONFIG\"; then\n    if test -n \"$PKG_CONFIG\" && \\\n    { { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$PKG_CONFIG --exists --print-errors \\\"openssl11\\\"\"; } >&5\n  ($PKG_CONFIG --exists --print-errors \"openssl11\") 2>&5\n  ac_status=$?\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then\n  pkg_cv_OPENSSL_CFLAGS=`$PKG_CONFIG --cflags \"openssl11\" 2>/dev/null`\n\t\t      test \"x$?\" != \"x0\" && pkg_failed=yes\nelse\n  pkg_failed=yes\nfi\n else\n    pkg_failed=untried\nfi\nif test -n \"$OPENSSL_LIBS\"; then\n    pkg_cv_OPENSSL_LIBS=\"$OPENSSL_LIBS\"\n elif test -n \"$PKG_CONFIG\"; then\n    if test -n \"$PKG_CONFIG\" && \\\n    { { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$PKG_CONFIG --exists --print-errors \\\"openssl11\\\"\"; } >&5\n  ($PKG_CONFIG --exists --print-errors \"openssl11\") 2>&5\n  ac_status=$?\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then\n  pkg_cv_OPENSSL_LIBS=`$PKG_CONFIG --libs \"openssl11\" 2>/dev/null`\n\t\t      test \"x$?\" != \"x0\" && pkg_failed=yes\nelse\n  pkg_failed=yes\nfi\n else\n    pkg_failed=untried\nfi\n\n\n\nif test $pkg_failed = yes; then\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\n\nif $PKG_CONFIG --atleast-pkgconfig-version 0.20; then\n        _pkg_short_errors_supported=yes\nelse\n        _pkg_short_errors_supported=no\nfi\n        if test $_pkg_short_errors_supported = yes; then\n                OPENSSL_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs \"openssl11\" 2>&1`\n        else\n                OPENSSL_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs \"openssl11\" 2>&1`\n        fi\n        # Put the nasty error message in config.log where it belongs\n        echo \"$OPENSSL_PKG_ERRORS\" >&5\n\n\n            PBX_OPENSSL=0\n\n\nelif test $pkg_failed = untried; then\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\n\n            PBX_OPENSSL=0\n\n\nelse\n        OPENSSL_CFLAGS=$pkg_cv_OPENSSL_CFLAGS\n        OPENSSL_LIBS=$pkg_cv_OPENSSL_LIBS\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\nprintf \"%s\\n\" \"yes\" >&6; }\n\n            PBX_OPENSSL=1\n            OPENSSL_INCLUDE=$(echo ${OPENSSL_CFLAGS} | $SED -e \"s|-std=c99||g\")\n            OPENSSL_LIB=\"$OPENSSL_LIBS\"\n\nprintf \"%s\\n\" \"#define HAVE_OPENSSL 1\" >>confdefs.h\n\n\nfi\n   fi\n\n\tfi\n\tif test $PBX_OPENSSL -eq 1 ; then\n\t\tprintf \"%s\\n\" \"#define HAVE_OPENSSL_BIO_METHOD 1\" >>confdefs.h\n\n\t\tPBX_OPENSSL_BIO_METHOD=1\n\telse\n\t\t{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking fallback system openssl\" >&5\nprintf \"%s\\n\" \"$as_me: checking fallback system openssl\" >&6;}\n\n      if test \"x${PBX_OPENSSL}\" != \"x1\" -a \"${USE_OPENSSL}\" != \"no\"; then\n\npkg_failed=no\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for openssl\" >&5\nprintf %s \"checking for openssl... \" >&6; }\n\nif test -n \"$OPENSSL_CFLAGS\"; then\n    pkg_cv_OPENSSL_CFLAGS=\"$OPENSSL_CFLAGS\"\n elif test -n \"$PKG_CONFIG\"; then\n    if test -n \"$PKG_CONFIG\" && \\\n    { { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$PKG_CONFIG --exists --print-errors \\\"openssl\\\"\"; } >&5\n  ($PKG_CONFIG --exists --print-errors \"openssl\") 2>&5\n  ac_status=$?\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then\n  pkg_cv_OPENSSL_CFLAGS=`$PKG_CONFIG --cflags \"openssl\" 2>/dev/null`\n\t\t      test \"x$?\" != \"x0\" && pkg_failed=yes\nelse\n  pkg_failed=yes\nfi\n else\n    pkg_failed=untried\nfi\nif test -n \"$OPENSSL_LIBS\"; then\n    pkg_cv_OPENSSL_LIBS=\"$OPENSSL_LIBS\"\n elif test -n \"$PKG_CONFIG\"; then\n    if test -n \"$PKG_CONFIG\" && \\\n    { { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$PKG_CONFIG --exists --print-errors \\\"openssl\\\"\"; } >&5\n  ($PKG_CONFIG --exists --print-errors \"openssl\") 2>&5\n  ac_status=$?\n  printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then\n  pkg_cv_OPENSSL_LIBS=`$PKG_CONFIG --libs \"openssl\" 2>/dev/null`\n\t\t      test \"x$?\" != \"x0\" && pkg_failed=yes\nelse\n  pkg_failed=yes\nfi\n else\n    pkg_failed=untried\nfi\n\n\n\nif test $pkg_failed = yes; then\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\n\nif $PKG_CONFIG --atleast-pkgconfig-version 0.20; then\n        _pkg_short_errors_supported=yes\nelse\n        _pkg_short_errors_supported=no\nfi\n        if test $_pkg_short_errors_supported = yes; then\n                OPENSSL_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs \"openssl\" 2>&1`\n        else\n                OPENSSL_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs \"openssl\" 2>&1`\n        fi\n        # Put the nasty error message in config.log where it belongs\n        echo \"$OPENSSL_PKG_ERRORS\" >&5\n\n\n            PBX_OPENSSL=0\n\n\nelif test $pkg_failed = untried; then\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\nprintf \"%s\\n\" \"no\" >&6; }\n\n            PBX_OPENSSL=0\n\n\nelse\n        OPENSSL_CFLAGS=$pkg_cv_OPENSSL_CFLAGS\n        OPENSSL_LIBS=$pkg_cv_OPENSSL_LIBS\n        { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\nprintf \"%s\\n\" \"yes\" >&6; }\n\n            PBX_OPENSSL=1\n            OPENSSL_INCLUDE=$(echo ${OPENSSL_CFLAGS} | $SED -e \"s|-std=c99||g\")\n            OPENSSL_LIB=\"$OPENSSL_LIBS\"\n\nprintf \"%s\\n\" \"#define HAVE_OPENSSL 1\" >>confdefs.h\n\n\nfi\n   fi\n\n\tfi\n\n\tif test $PBX_OPENSSL -eq 1; then\n\t\tprintf \"%s\\n\" \"#define HAVE_CRYPTO 1\" >>confdefs.h\n\n\t\tPBX_CRYPTO=1\n\tfi\nelse\n\t{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: Checking OPENSSL without pkg-config\" >&5\nprintf \"%s\\n\" \"$as_me: Checking OPENSSL without pkg-config\" >&6;}\n\nif test \"x${PBX_CRYPTO}\" != \"x1\" -a \"${USE_CRYPTO}\" != \"no\"; then\n   pbxlibdir=\"\"\n   # if --with-CRYPTO=DIR has been specified, use it.\n   if test \"x${CRYPTO_DIR}\" != \"x\"; then\n      if test -d ${CRYPTO_DIR}/lib; then\n         pbxlibdir=\"-L${CRYPTO_DIR}/lib\"\n      else\n         pbxlibdir=\"-L${CRYPTO_DIR}\"\n      fi\n   fi\n\n      ast_ext_lib_check_save_CFLAGS=\"${CFLAGS}\"\n      CFLAGS=\"${CFLAGS} \"\n      { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for AES_encrypt in -lcrypto\" >&5\nprintf %s \"checking for AES_encrypt in -lcrypto... \" >&6; }\nif test ${ac_cv_lib_crypto_AES_encrypt+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_check_lib_save_LIBS=$LIBS\nLIBS=\"-lcrypto ${pbxlibdir}  $LIBS\"\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.\n   The 'extern \"C\"' is for builds by C++ compilers;\n   although this is not generally supported in C code supporting it here\n   has little cost and some practical benefit (sr 110532).  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar AES_encrypt (void);\nint\nmain (void)\n{\nreturn AES_encrypt ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"\nthen :\n  ac_cv_lib_crypto_AES_encrypt=yes\nelse case e in #(\n  e) ac_cv_lib_crypto_AES_encrypt=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam \\\n    conftest$ac_exeext conftest.$ac_ext\nLIBS=$ac_check_lib_save_LIBS ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_crypto_AES_encrypt\" >&5\nprintf \"%s\\n\" \"$ac_cv_lib_crypto_AES_encrypt\" >&6; }\nif test \"x$ac_cv_lib_crypto_AES_encrypt\" = xyes\nthen :\n  AST_CRYPTO_FOUND=yes\nelse case e in #(\n  e) AST_CRYPTO_FOUND=no ;;\nesac\nfi\n\n      CFLAGS=\"${ast_ext_lib_check_save_CFLAGS}\"\n\n\n   # now check for the header.\n   if test \"${AST_CRYPTO_FOUND}\" = \"yes\"; then\n      CRYPTO_LIB=\"${pbxlibdir} -lcrypto \"\n      # if --with-CRYPTO=DIR has been specified, use it.\n      if test \"x${CRYPTO_DIR}\" != \"x\"; then\n         CRYPTO_INCLUDE=\"-I${CRYPTO_DIR}/include\"\n      fi\n      CRYPTO_INCLUDE=\"${CRYPTO_INCLUDE} \"\n\n         # check for the header\n         ast_ext_lib_check_saved_CPPFLAGS=\"${CPPFLAGS}\"\n         CPPFLAGS=\"${CPPFLAGS} ${CRYPTO_INCLUDE}\"\n         ac_fn_c_check_header_compile \"$LINENO\" \"openssl/aes.h\" \"ac_cv_header_openssl_aes_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_openssl_aes_h\" = xyes\nthen :\n  CRYPTO_HEADER_FOUND=1\nelse case e in #(\n  e) CRYPTO_HEADER_FOUND=0 ;;\nesac\nfi\n\n         CPPFLAGS=\"${ast_ext_lib_check_saved_CPPFLAGS}\"\n\n      if test \"x${CRYPTO_HEADER_FOUND}\" = \"x0\" ; then\n         CRYPTO_LIB=\"\"\n         CRYPTO_INCLUDE=\"\"\n      else\n\n         PBX_CRYPTO=1\n         cat >>confdefs.h <<_ACEOF\n#define HAVE_CRYPTO 1\n_ACEOF\n\n      fi\n   fi\nfi\n\n\n\tif test \"$PBX_CRYPTO\" = \"1\";\n\tthen\n\nif test \"x${PBX_OPENSSL}\" != \"x1\" -a \"${USE_OPENSSL}\" != \"no\"; then\n   pbxlibdir=\"\"\n   # if --with-OPENSSL=DIR has been specified, use it.\n   if test \"x${OPENSSL_DIR}\" != \"x\"; then\n      if test -d ${OPENSSL_DIR}/lib; then\n         pbxlibdir=\"-L${OPENSSL_DIR}/lib\"\n      else\n         pbxlibdir=\"-L${OPENSSL_DIR}\"\n      fi\n   fi\n\n      ast_ext_lib_check_save_CFLAGS=\"${CFLAGS}\"\n      CFLAGS=\"${CFLAGS} \"\n      { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for SSL_connect in -lssl\" >&5\nprintf %s \"checking for SSL_connect in -lssl... \" >&6; }\nif test ${ac_cv_lib_ssl_SSL_connect+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_check_lib_save_LIBS=$LIBS\nLIBS=\"-lssl ${pbxlibdir} -lcrypto $LIBS\"\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.\n   The 'extern \"C\"' is for builds by C++ compilers;\n   although this is not generally supported in C code supporting it here\n   has little cost and some practical benefit (sr 110532).  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar SSL_connect (void);\nint\nmain (void)\n{\nreturn SSL_connect ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"\nthen :\n  ac_cv_lib_ssl_SSL_connect=yes\nelse case e in #(\n  e) ac_cv_lib_ssl_SSL_connect=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam \\\n    conftest$ac_exeext conftest.$ac_ext\nLIBS=$ac_check_lib_save_LIBS ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_ssl_SSL_connect\" >&5\nprintf \"%s\\n\" \"$ac_cv_lib_ssl_SSL_connect\" >&6; }\nif test \"x$ac_cv_lib_ssl_SSL_connect\" = xyes\nthen :\n  AST_OPENSSL_FOUND=yes\nelse case e in #(\n  e) AST_OPENSSL_FOUND=no ;;\nesac\nfi\n\n      CFLAGS=\"${ast_ext_lib_check_save_CFLAGS}\"\n\n\n   # now check for the header.\n   if test \"${AST_OPENSSL_FOUND}\" = \"yes\"; then\n      OPENSSL_LIB=\"${pbxlibdir} -lssl -lcrypto\"\n      # if --with-OPENSSL=DIR has been specified, use it.\n      if test \"x${OPENSSL_DIR}\" != \"x\"; then\n         OPENSSL_INCLUDE=\"-I${OPENSSL_DIR}/include\"\n      fi\n      OPENSSL_INCLUDE=\"${OPENSSL_INCLUDE} \"\n\n         # check for the header\n         ast_ext_lib_check_saved_CPPFLAGS=\"${CPPFLAGS}\"\n         CPPFLAGS=\"${CPPFLAGS} ${OPENSSL_INCLUDE}\"\n         ac_fn_c_check_header_compile \"$LINENO\" \"openssl/ssl.h\" \"ac_cv_header_openssl_ssl_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_openssl_ssl_h\" = xyes\nthen :\n  OPENSSL_HEADER_FOUND=1\nelse case e in #(\n  e) OPENSSL_HEADER_FOUND=0 ;;\nesac\nfi\n\n         CPPFLAGS=\"${ast_ext_lib_check_saved_CPPFLAGS}\"\n\n      if test \"x${OPENSSL_HEADER_FOUND}\" = \"x0\" ; then\n         OPENSSL_LIB=\"\"\n         OPENSSL_INCLUDE=\"\"\n      else\n\n         PBX_OPENSSL=1\n         cat >>confdefs.h <<_ACEOF\n#define HAVE_OPENSSL 1\n_ACEOF\n\n      fi\n   fi\nfi\n\n\n\nif test \"x${PBX_OPENSSL_BIO_METHOD}\" != \"x1\" -a \"${USE_OPENSSL_BIO_METHOD}\" != \"no\"; then\n   pbxlibdir=\"\"\n   # if --with-OPENSSL_BIO_METHOD=DIR has been specified, use it.\n   if test \"x${OPENSSL_BIO_METHOD_DIR}\" != \"x\"; then\n      if test -d ${OPENSSL_BIO_METHOD_DIR}/lib; then\n         pbxlibdir=\"-L${OPENSSL_BIO_METHOD_DIR}/lib\"\n      else\n         pbxlibdir=\"-L${OPENSSL_BIO_METHOD_DIR}\"\n      fi\n   fi\n\n      ast_ext_lib_check_save_CFLAGS=\"${CFLAGS}\"\n      CFLAGS=\"${CFLAGS} \"\n      { printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: checking for BIO_meth_new in -lssl\" >&5\nprintf %s \"checking for BIO_meth_new in -lssl... \" >&6; }\nif test ${ac_cv_lib_ssl_BIO_meth_new+y}\nthen :\n  printf %s \"(cached) \" >&6\nelse case e in #(\n  e) ac_check_lib_save_LIBS=$LIBS\nLIBS=\"-lssl ${pbxlibdir} -lcrypto $LIBS\"\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.\n   The 'extern \"C\"' is for builds by C++ compilers;\n   although this is not generally supported in C code supporting it here\n   has little cost and some practical benefit (sr 110532).  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar BIO_meth_new (void);\nint\nmain (void)\n{\nreturn BIO_meth_new ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"\nthen :\n  ac_cv_lib_ssl_BIO_meth_new=yes\nelse case e in #(\n  e) ac_cv_lib_ssl_BIO_meth_new=no ;;\nesac\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.beam \\\n    conftest$ac_exeext conftest.$ac_ext\nLIBS=$ac_check_lib_save_LIBS ;;\nesac\nfi\n{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_ssl_BIO_meth_new\" >&5\nprintf \"%s\\n\" \"$ac_cv_lib_ssl_BIO_meth_new\" >&6; }\nif test \"x$ac_cv_lib_ssl_BIO_meth_new\" = xyes\nthen :\n  AST_OPENSSL_BIO_METHOD_FOUND=yes\nelse case e in #(\n  e) AST_OPENSSL_BIO_METHOD_FOUND=no ;;\nesac\nfi\n\n      CFLAGS=\"${ast_ext_lib_check_save_CFLAGS}\"\n\n\n   # now check for the header.\n   if test \"${AST_OPENSSL_BIO_METHOD_FOUND}\" = \"yes\"; then\n      OPENSSL_BIO_METHOD_LIB=\"${pbxlibdir} -lssl -lcrypto\"\n      # if --with-OPENSSL_BIO_METHOD=DIR has been specified, use it.\n      if test \"x${OPENSSL_BIO_METHOD_DIR}\" != \"x\"; then\n         OPENSSL_BIO_METHOD_INCLUDE=\"-I${OPENSSL_BIO_METHOD_DIR}/include\"\n      fi\n      OPENSSL_BIO_METHOD_INCLUDE=\"${OPENSSL_BIO_METHOD_INCLUDE} \"\n\n         # check for the header\n         ast_ext_lib_check_saved_CPPFLAGS=\"${CPPFLAGS}\"\n         CPPFLAGS=\"${CPPFLAGS} ${OPENSSL_BIO_METHOD_INCLUDE}\"\n         ac_fn_c_check_header_compile \"$LINENO\" \"openssl/ssl.h\" \"ac_cv_header_openssl_ssl_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_openssl_ssl_h\" = xyes\nthen :\n  OPENSSL_BIO_METHOD_HEADER_FOUND=1\nelse case e in #(\n  e) OPENSSL_BIO_METHOD_HEADER_FOUND=0 ;;\nesac\nfi\n\n         CPPFLAGS=\"${ast_ext_lib_check_saved_CPPFLAGS}\"\n\n      if test \"x${OPENSSL_BIO_METHOD_HEADER_FOUND}\" = \"x0\" ; then\n         OPENSSL_BIO_METHOD_LIB=\"\"\n         OPENSSL_BIO_METHOD_INCLUDE=\"\"\n      else\n\n         PBX_OPENSSL_BIO_METHOD=1\n         cat >>confdefs.h <<_ACEOF\n#define HAVE_OPENSSL_BIO_METHOD 1\n_ACEOF\n\n      fi\n   fi\nfi\n\n\n\tfi\nfi\nif test $PBX_OPENSSL -eq 0 ; then\n\t{ printf \"%s\\n\" \"$as_me:${as_lineno-$LINENO}: WARNING: OpenSSL does not seem to be installed\" >&5\nprintf \"%s\\n\" \"$as_me: WARNING: OpenSSL does not seem to be installed\" >&2;}\nfi\n\n\n\n\n\tif test \"$JANSSON_BUNDLED\" = \"yes\" ; then\n\n\tif test \"${ac_mandatory_list#*JANSSON*}\" != \"$ac_mandatory_list\" ; then\n\t\tas_fn_error $? \"--with-jansson and --with-jansson-bundled can't both be specified\" \"$LINENO\" 5\n\tfi\n\n\tac_m"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 101.439453125,
          "content": "AC_PREREQ(2.60a)\n\nAC_INIT([asterisk], [master], [https://github.com/asterisk/asterisk/issues])\n\n# cross-compile macros\nAC_CANONICAL_BUILD\nAC_CANONICAL_HOST\n\n# check existence of the package\nAC_CONFIG_SRCDIR([main/asterisk.c])\n\nAC_COPYRIGHT(\"Asterisk\")\n\n# preserve any CFLAGS or LDFLAGS that may be set\n# NOTE: This must be done before calling any macros that end up\n# calling AC_PROG_CC or the like, since they will set a default\n# set of CFLAGS (\"-g -O2\") if the user did not supply any, and\n# we don't want those default flags to be carried over into the\n# rest of the build system since we have other means of controlling\n# debugging symbol generation and optimization.\nCONFIG_CFLAGS=\"${CFLAGS}\"\nCONFIG_LDFLAGS=\"${LDFLAGS}\"\nAC_SUBST(CONFIG_CFLAGS)\nAC_SUBST(CONFIG_LDFLAGS)\n\n# specify output header file\nAC_CONFIG_HEADERS([include/asterisk/autoconfig.h])\n\n# Note: AC_PROG_CC *must* be specified before AC_USE_SYSTEM_EXTENSIONS or any\n# other macro that uses the C compiler, or the default order will be used.\nAC_PROG_CC([gcc cc])\n\nAC_USE_SYSTEM_EXTENSIONS\tdnl note- does not work on FreeBSD\n\n# System default paths\nAC_SUBST([astsbindir],        ['${sbindir}'])dnl\nAC_SUBST([astcachedir],       ['${localstatedir}/cache/asterisk'])dnl\nAC_SUBST([astetcdir],         ['${sysconfdir}/asterisk'])dnl\nAC_SUBST([astheaderdir],      ['${includedir}/asterisk'])dnl\nAC_SUBST([astlibdir],         ['${libdir}'])dnl\nAC_SUBST([astmoddir],         ['${libdir}/asterisk/modules'])dnl\nAC_SUBST([astmandir],         ['${mandir}'])dnl\nAC_SUBST([astvarlibdir],      ['${localstatedir}/lib/asterisk'])dnl\nAC_SUBST([astdatadir],        ['${astvarlibdir}'])dnl\nAC_SUBST([astdbdir],          ['${astvarlibdir}'])dnl\nAC_SUBST([astkeydir],         ['${astvarlibdir}'])dnl\nAC_SUBST([astspooldir],       ['${localstatedir}/spool/asterisk'])dnl\nAC_SUBST([astlogdir],         ['${localstatedir}/log/asterisk'])dnl\nAC_SUBST([astvarrundir],      ['${localstatedir}/run/asterisk'])dnl\n\ncase \"${host_os}\" in\n     *bsd*)\n     if test ${prefix} != 'NONE'; then\n        astvarlibdir='${prefix}/share/asterisk'\n        astdbdir='${localstatedir}/db/asterisk'\n     fi\n     ;;\n     darwin*)\n     if test ${prefix} = 'NONE'; then\n        astvarrundir='/Library/Application Support/Asterisk/Run'\n     fi\n     ;;\nesac\n\ncase \"${host_os}\" in\n     netbsd*)\n     ac_default_prefix=/usr/pkg\n     CPPFLAGS=-I/usr/pkg/include\n     LDFLAGS=-L/usr/pkg/lib\n     ;;\n     dragonfly*|freebsd*)\n     ac_default_prefix=/usr/local\n     CPPFLAGS=-I/usr/local/include\n     LDFLAGS=-L/usr/local/lib\n     ;;\n     openbsd*)\n     ac_default_prefix=/usr/local\n     if test ${prefix} = '/usr/local' || test ${prefix} = 'NONE'; then\n        if test ${sysconfdir} = '${prefix}/etc'; then\n           astetcdir=/etc/asterisk\n        fi\n        if test ${mandir} = '${prefix}/man'; then\n           astmandir=/usr/share/man\n        fi\n     fi\n     CPPFLAGS=-I/usr/local/include\n     LDFLAGS=-L/usr/local/lib\n     ;;\n     darwin*)\n     ac_default_prefix=/usr/local\n     if test ${prefix} = 'NONE'; then\n        astmoddir='/Library/Application Support/Asterisk/Modules'\n        astvarlibdir='/Library/Application Support/Asterisk'\n        astlogdir=/Library/Logs/Asterisk\n        astvarrundir='/Library/Application Support/Asterisk/Run'\n     fi\n     AC_DEFINE([AST_POLL_COMPAT], 1, [Define to 1 if internal poll should be used.])\n     AC_DEFINE([_DARWIN_UNLIMITED_SELECT], 1, [Define to 1 if running on Darwin.])\n     ;;\n     solaris*)\n     if test ${prefix} = 'NONE'; then\n        astcachedir=/var/cache/asterisk\n        astetcdir=/var/etc/asterisk\n        astsbindir=/opt/asterisk/sbin\n        astlibdir=/opt/asterisk/lib\n        astmoddir=/opt/asterisk/lib/modules\n        astheaderdir=/opt/asterisk/include\n        astmandir=/opt/asterisk/man\n        astvarlibdir=/var/opt/asterisk\n        astspooldir=/var/spool/asterisk\n        astlogdir=/var/log/asterisk\n        astvarrundir=/var/run/asterisk\n     fi\n     ;;\n     *)\n     ac_default_prefix=/usr\n     if test ${prefix} = '/usr' || test ${prefix} = 'NONE'; then\n        if test ${sysconfdir} = '${prefix}/etc'; then\n           sysconfdir=/etc\n        fi\n        if test ${mandir} = '${prefix}/man'; then\n           mandir=/usr/share/man\n        fi\n     fi\n     ;;\nesac\n\nif test ${prefix} = ${ac_default_prefix} || test ${prefix} = 'NONE'; then\n     if test ${localstatedir} = '${prefix}/var'; then\n        localstatedir=/var\n     fi\nfi\n\nBUILD_PLATFORM=${build}\nBUILD_CPU=${build_cpu}\nBUILD_VENDOR=${build_vendor}\nBUILD_OS=${build_os}\n\nAC_SUBST(BUILD_PLATFORM)\nAC_SUBST(BUILD_CPU)\nAC_SUBST(BUILD_VENDOR)\nAC_SUBST(BUILD_OS)\n\nHOST_PLATFORM=${host}\nHOST_CPU=${host_cpu}\nHOST_VENDOR=${host_vendor}\nHOST_OS=${host_os}\n\nAC_SUBST(HOST_PLATFORM)\nAC_SUBST(HOST_CPU)\nAC_SUBST(HOST_VENDOR)\nAC_SUBST(HOST_OS)\n\nPBX_WINARCH=0\n\ncase \"${host_os}\" in\n     dragonfly*|freebsd*)\n     OSARCH=FreeBSD\n     ;;\n     netbsd*)\n     OSARCH=NetBSD\n     ;;\n     openbsd*)\n     OSARCH=OpenBSD\n     ;;\n     solaris*)\n     OSARCH=SunOS\n     ;;\n     mingw32)\n     OSARCH=mingw32\n     PBX_WINARCH=1\n     ;;\n     cygwin)\n     OSARCH=cygwin\n     PBX_WINARCH=1\n     ;;\n     linux-gnu*)\n     OSARCH=linux-gnu\n     ;;\n     linux-musl*)\n     OSARCH=linux-musl\n     ;;\n     kfreebsd*-gnu)\n     OSARCH=kfreebsd-gnu\n     ;;\n     *)\n     OSARCH=${host_os}\n     ;;\nesac\n\nAC_SUBST(OSARCH)\nAC_SUBST(PBX_WINARCH)\n\nAC_MSG_CHECKING(whether char is unsigned)\nAC_COMPILE_IFELSE(\n\t[\n\t\tAC_LANG_SOURCE(\n#include <limits.h>\n#if CHAR_MIN == 0\n#error\n#endif\n\t\t)\n\t],[\n\t\tAC_MSG_RESULT(no)\n\t\tCONFIG_SIGNED_CHAR=\"\"\n\t],[\n\t\tAC_MSG_RESULT(yes)\n\t\tCONFIG_SIGNED_CHAR=\"-fsigned-char\"\n\t]\n)\nAC_SUBST(CONFIG_SIGNED_CHAR)\n\n#  check for uname\nAC_PATH_TOOL([UNAME], [uname], :)\nif test \"x${UNAME}\" != \"x:\"; then\n   PBX_OSREV=$(${UNAME} -r)\nfi\nAC_SUBST(PBX_OSREV)\n\nAH_TOP([#ifndef ASTERISK_AUTOCONFIG_H\n#define ASTERISK_AUTOCONFIG_H\n/* IWYU pragma: private, include \"asterisk.h\" */\n\n#include \"asterisk/buildopts.h\" /* IWYU pragma: export */])\n\nAH_BOTTOM([#endif\t/* ASTERISK_AUTOCONFIG_H */])\n\n# cross-compile checks\nif test \"${cross_compiling}\" = \"yes\";\nthen\n   AC_CHECK_TOOL(CC, gcc, :)\n   AC_CHECK_TOOL(CXX, g++, :)\n   AC_CHECK_TOOL(LD, ld, :)\n   AC_CHECK_TOOL(RANLIB, ranlib, :)\n   CROSS_COMPILING=1\n   AC_SUBST(CROSS_COMPILING)\nfi\n\n# Checks for programs.\nAC_PROG_CXX\nAC_PROG_CPP\nAC_PROG_CXXCPP\n\n# Do we want to force the C++ compiler to use the latest standard it supports?\nAC_ARG_ENABLE([latest-cxx-std],\n\t[AS_HELP_STRING([--enable-latest-cxx-std],\n\t\t[Force C++ compiler to use the latest standard it supports])],\n\t[case \"${enableval}\" in\n\t\ty|ye|yes) ENABLE_LATEST_CXX_STD=yes ;;\n\t\tn|no)  ENABLE_LATEST_CXX_STD=no ;;\n\t\t*) AC_MSG_ERROR(bad value ${enableval} for --enable-latest-cxx-std)  ;;\n\tesac], [ENABLE_LATEST_CXX_STD=no])\n\n# Check to see if the C++ compiler supports STDC++11,14,17,20,23\n# These MUST be in ascending order.\nAST_CXX_CHECK_STD([11], [${ENABLE_LATEST_CXX_STD}])\nAST_CXX_CHECK_STD([14], [${ENABLE_LATEST_CXX_STD}])\nAST_CXX_CHECK_STD([17], [${ENABLE_LATEST_CXX_STD}])\nAST_CXX_CHECK_STD([20], [${ENABLE_LATEST_CXX_STD}])\nAST_CXX_CHECK_STD([23], [${ENABLE_LATEST_CXX_STD}])\n\n# This macro is just copied into our local acinclude.m4 from libtool.m4 so that\n# the developers regenerating the configure script don't have to install libtool.\nAST_PROG_LD\t# note, does not work on FreeBSD\nAC_PROG_AWK\nAC_PROG_INSTALL\nAC_PROG_LN_S\nAC_PROG_RANLIB\nAST_CHECK_GNU_MAKE\nAC_PROG_EGREP\n\nAC_CHECK_TOOLS([STRIP], [strip gstrip], :)\nAC_CHECK_TOOLS([AR], [ar gar], :)\n\nGNU_LD=0\nif test \"x$with_gnu_ld\" = \"xyes\" ; then\n   GNU_LD=1\nfi\nAC_SUBST(GNU_LD)\n\nAC_PATH_PROG([BISON], [bison], :)\nAC_PATH_PROG([CMP], [cmp], :)\nAC_PATH_PROG([CAT], [cat], :)\nAC_PATH_PROG([CUT], [cut], :)\nAC_PATH_PROG([FLEX], [flex], :)\nAC_PATH_PROG([GREP], [grep], :)\nAC_PATH_PROGS([PYTHON], [python2.7 python2 python python3], :)\nAC_PATH_PROG([FIND], [find], :)\nAC_PATH_PROG([BASENAME], [basename], :)\nAC_PATH_PROG([DIRNAME], [dirname], :)\nAC_PATH_PROG([SHELL], [sh], :)\nAC_PATH_PROG([LN], [ln], :)\nAC_PATH_PROG([DOXYGEN], [doxygen], :)\nAC_PATH_PROG([DOT], [dot], :)\nAC_PATH_PROG([WGET], [wget], :)\nAC_PATH_PROG([CURL], [curl], :)\nAC_PATH_PROG([XMLLINT], [xmllint], :)\nAC_PATH_PROGS([XMLSTARLET], [xmlstarlet xml], :)\nAC_PATH_PROG([BASH], [bash], :)\nAC_PATH_PROG([GIT], [git], :)\nAC_PATH_PROG([ALEMBIC], [alembic], :)\nAC_PATH_PROG([BZIP2], [bzip2], :)\nAC_PATH_PROG([TAR], [tar], :)\nAC_PATH_PROG([PATCH], [patch], :)\nAC_PATH_PROG([SED], [sed], :)\nAC_PATH_PROG([NM], [nm], :)\nAC_PATH_PROG([REALPATH], [realpath], :)\n\n\nDOWNLOAD=\":\"\nDOWNLOAD_TO_STDOUT=\nDOWNLOAD_TIMEOUT=\nif test \"x${WGET}\" != \"x:\"; then\n  DOWNLOAD=${WGET}\n  DOWNLOAD_TO_STDOUT=\"${WGET} -q -O-\"\n  DOWNLOAD_TIMEOUT='--timeout=$1'\nelif test \"x${CURL}\" != \"x:\"; then\n  DOWNLOAD=\"${CURL} -L -O --progress-bar -w \\\"%{url_effective}\\n\\\"\"\n  DOWNLOAD_TO_STDOUT=\"${CURL} -Ls\"\n  DOWNLOAD_TIMEOUT='--max-time $(or $2,$1)'\nelse\n  AC_PATH_PROG([FETCH], [fetch], :)\n  if test \"x${FETCH}\" != \"x:\"; then\n    DOWNLOAD=${FETCH}\n    DOWNLOAD_TO_STDOUT=\"${FETCH} -o-\"\n    DOWNLOAD_TIMEOUT='--timeout=$(or $2,$1)'\n  fi\nfi\nAC_SUBST(DOWNLOAD)\nAC_SUBST(DOWNLOAD_TO_STDOUT)\nAC_SUBST(DOWNLOAD_TIMEOUT)\n\nAC_PATH_PROG([LDCONFIG], [ldconfig], :)\nAC_PATH_PROG([SHA1SUM], [sha1sum], $ac_aux_dir/build_tools/sha1sum-sh)\nAC_PATH_PROG([OPENSSL], [openssl], :)\n\nPKG_PROG_PKG_CONFIG()\n\nAC_CACHE_CHECK([for bison that supports parse-param], [ac_cv_path_BISON2], [\n\tif test \"x$BISON\" != \"x:\" ; then\n\t\t# Create a temporary directory $tmp in $TMPDIR (default /tmp).\n\t\t# Use mktemp if possible; otherwise fall back on mkdir,\n\t\t# with $RANDOM to make collisions less likely.\n\t\t: ${TMPDIR=/tmp}\n\t\t{\n\t\t  tmp=`\n\t\t    (umask 077 && mktemp -d \"$TMPDIR/fooXXXXXX\") 2>/dev/null\n\t\t  ` &&\n\t\t  test -n \"$tmp\" && test -d \"$tmp\"\n\t\t} || {\n\t\t  tmp=$TMPDIR/foo$$-$RANDOM\n\t\t  (umask 077 && mkdir \"$tmp\")\n\t\t} || exit $?\n\t\tcat >$tmp/test.y <<__EOL__\n%parse-param {struct parse_io *parseio}\n%%\nfile : { \\$\\$ = parseio->pval = 1; }\n\t;\n%%\n__EOL__\n\t\t${BISON} -o ${tmp}/test.tab.c ${tmp}/test.y >/dev/null 2>&1\n\t\tif test -e \"${tmp}/test.tab.c\"; then\n\t\t\tac_cv_path_BISON2=${BISON}\n\t\tfi\n\t\trm -rf ${tmp}\n\tfi\n\t])\nif test \"x${ac_cv_path_BISON2}\" = \"x\" ; then\n\tBISON=:\n\tPBX_BISON=0\nelse\n\tPBX_BISON=1\nfi\nAC_SUBST(PBX_BISON)\n\nif test \"${FLEX}\" = \":\"; then\n\tPBX_FLEX=0\nelse\n\tPBX_FLEX=1\nfi\nAC_SUBST(PBX_FLEX)\n\nif test \"${XMLSTARLET}\" = \":\"; then\n\tPBX_XMLSTARLET=0\nelse\n\tPBX_XMLSTARLET=1\nfi\nAC_SUBST(PBX_XMLSTARLET)\n\nif test \"${BASH}\" = \":\"; then\n\tPBX_BASH=0\nelse\n\tPBX_BASH=1\nfi\nAC_SUBST(PBX_BASH)\n\nAC_CHECK_TOOL([SOXMIX], [soxmix], :)\nif test \"x${SOXMIX}\" != \"x:\"; then\n\tAC_DEFINE([HAVE_SOXMIX], 1, [Define to 1 if your system has soxmix application.])\nfi\n\nAC_CHECK_PROGS([MD5], [md5 md5sum gmd5sum digest])\n\nif test \"${MD5}\" = \"digest\" ; then\n   MD5=\"${MD5} -a md5\"\nfi\n\nAX_PTHREAD\n\nAC_LANG(C)\n\nPBX_NO_BINARY_MODULES=0\nAC_ARG_ENABLE([binary-modules],\n\t[AS_HELP_STRING([--disable-binary-modules],\n\t\t[Block installation of binary modules.])],\n\t[case \"${enableval}\" in\n\t      y|ye|yes) PBX_NO_BINARY_MODULES=0 ;;\n\t      n|no)  PBX_NO_BINARY_MODULES=1 ;;\n\t      *) AC_MSG_ERROR(bad value ${enableval} for --disable-binary-modules)  ;;\n\tesac])\nAC_SUBST(PBX_NO_BINARY_MODULES)\n\nAC_ARG_ENABLE([dev-mode],\n\t[AS_HELP_STRING([--enable-dev-mode],\n\t\t[Turn on developer mode])],\n\t[case \"${enableval}\" in\n\t      y|ye|yes) AST_DEVMODE=yes ;;\n\t      n|no)  AST_DEVMODE=no ;;\n\t      noisy)\n\t      AST_DEVMODE=yes\n\t      NOISY_BUILD=yes\n\t      ;;\n\t      strict)\n\t      AST_DEVMODE=yes\n\t      AST_DEVMODE_STRICT=yes\n\t      ;;\n\t      *) AC_MSG_ERROR(bad value ${enableval} for --enable-dev-mode)  ;;\n\tesac])\nAC_SUBST(NOISY_BUILD)\nAC_SUBST(AST_DEVMODE)\nAC_SUBST(AST_DEVMODE_STRICT)\n\nAST_OPTION_ONLY([download-cache], [AST_DOWNLOAD_CACHE], [cached sound AND external module tarfiles], [])\nAST_OPTION_ONLY([sounds-cache], [SOUNDS_CACHE_DIR], [cached sound tarfiles], [])\nAST_OPTION_ONLY([externals-cache], [EXTERNALS_CACHE_DIR], [cached external module tarfiles], [])\n\nAST_CODE_COVERAGE=no\nAC_ARG_ENABLE([coverage],\n\t[AS_HELP_STRING([--enable-coverage],\n\t\t[Turn on code coverage tracking (for gcov)])],\n\t[case \"${enableval}\" in\n\t      y|ye|yes) AST_CODE_COVERAGE=yes ;;\n\t      n|no) AST_CODE_COVERAGE=no ;;\n\t      *) AC_MSG_ERROR(bad value ${enableval} for --enable-coverage)  ;;\n\tesac])\nAC_SUBST(AST_CODE_COVERAGE)\n\nAST_CHECK_RAII()\nAST_CHECK_STRSEP_ARRAY_BOUNDS()\n\nJANSSON_BUNDLED=no\nAC_ARG_WITH([jansson-bundled],\n\t[AS_HELP_STRING([--with-jansson-bundled],\n\t\t[Use bundled jansson library])],\n\t[case \"${withval}\" in\n\t\ty|ye|yes) JANSSON_BUNDLED=yes ;;\n\t\t*) JANSSON_BUNDLED=no ;;\n\tesac])\n\nPJPROJECT_BUNDLED=yes\nAH_TEMPLATE(m4_bpatsubst([[HAVE_PJPROJECT_BUNDLED]], [(.*)]), [Define to 1 when using the bundled pjproject.])\n\nAC_ARG_WITH([pjproject-bundled],\n\t[AS_HELP_STRING([--with-pjproject-bundled],\n\t\t[Use bundled pjproject libraries (default)])],\n\t[case \"${withval}\" in\n\t      n|no) PJPROJECT_BUNDLED=no ;;\n\t      *) PJPROJECT_BUNDLED=yes ;;\n\tesac])\n\nif test \"${with_pjproject}\" = \"no\" || test \"${with_pjproject}\" = \"n\" ; then\n\tPJPROJECT_BUNDLED=no\nfi\n\nLIBJWT_BUNDLED=no\nAC_ARG_WITH([libjwt-bundled],\n\t[AS_HELP_STRING([--with-libjwt-bundled],\n\t\t[Use bundled libjwt library])],\n\t[case \"${withval}\" in\n\t\ty|ye|yes) LIBJWT_BUNDLED=yes ;;\n\t\t*) LIBJWT_BUNDLED=no ;;\n\tesac])\n\n#\n# OpenSSL stuff has to be done here because we want to pass\n# any resulting CFLAGS and LDFLAGS to the bundled pjproject\n# configure done in THIRD_PARTY_CONFIGURE()\n#\nAST_EXT_LIB_SETUP([CRYPTO], [OpenSSL Cryptography], [crypto])\nAST_EXT_LIB_SETUP([OPENSSL], [OpenSSL Secure Sockets Layer], [ssl])\nAST_EXT_LIB_SETUP_OPTIONAL([OPENSSL_BIO_METHOD], [OpenSSL BIO Method Support], [CRYPTO], [crypto])\n\n# If neither --without-ssl (PBX_OPENSSL=-1) nor --without-crypto (PBX_CRYPTO=-1)\n# and there were no directories atdded to --with-ssl and --with-crypto, and\n# pkg-config is installed (which is should be by install_prereq).\nif test \"x$PKG_CONFIG\" != \"x\" -a $PBX_OPENSSL -ge 0 -a $PBX_CRYPTO -ge 0 -a \"x$OPENSSL_DIR\" = \"x\" ; then\n\tAC_MSG_NOTICE(checking OPENSSL with pkg-config)\n\tAC_MSG_NOTICE(checking whether system openssl > 1.1.0)\n\tAST_PKG_CONFIG_CHECK([OPENSSL], [openssl >= 1.1.0])\n\tif test $PBX_OPENSSL -eq 0 ; then\n\t\tAC_MSG_NOTICE(checking whether alternate openssl11 is installed)\n\t\tAST_PKG_CONFIG_CHECK([OPENSSL], [openssl11])\n\tfi\n\tif test $PBX_OPENSSL -eq 1 ; then\n\t\tAC_DEFINE([HAVE_OPENSSL_BIO_METHOD], 1)\n\t\tPBX_OPENSSL_BIO_METHOD=1\n\telse\n\t\tAC_MSG_NOTICE(checking fallback system openssl)\n\t\tAST_PKG_CONFIG_CHECK([OPENSSL], [openssl])\n\tfi\n\n\tif test $PBX_OPENSSL -eq 1; then\n\t\tAC_DEFINE([HAVE_CRYPTO], 1)\n\t\tPBX_CRYPTO=1\n\tfi\nelse\n\tAC_MSG_NOTICE(Checking OPENSSL without pkg-config)\n\tAST_EXT_LIB_CHECK([CRYPTO], [crypto], [AES_encrypt], [openssl/aes.h])\n\tif test \"$PBX_CRYPTO\" = \"1\";\n\tthen\n\t\tAST_EXT_LIB_CHECK([OPENSSL], [ssl], [SSL_connect], [openssl/ssl.h], [-lcrypto])\n\t\tAST_EXT_LIB_CHECK([OPENSSL_BIO_METHOD], [ssl], [BIO_meth_new], [openssl/ssl.h], [-lcrypto])\n\tfi\nfi\nif test $PBX_OPENSSL -eq 0 ; then\n\tAC_MSG_WARN(OpenSSL does not seem to be installed)\nfi\n\n\nTHIRD_PARTY_CONFIGURE()\n\n# AST_EXT_LIB_SETUP is used to tell configure to handle variables for\n# various packages.\n# $1 is the prefix for the variables in makeopts and autoconfig.h\n# $2 is the short comment, $4 is the long comment\n# $3 is the name used in --with- or --without- flags for configure.\n#\n# Package option names should be in alphabetical order\n# by the --with option name (the third field),\n# to make things easier for the users.\n\nAST_EXT_LIB_SETUP([BFD], [Debug symbol decoding], [bfd])\n\n# BKTR is used for backtrace support on platforms that do not\n# have it natively.\nAST_EXT_LIB_SETUP([BKTR], [Stack Backtrace], [execinfo])\nAST_EXT_LIB_SETUP([BLUETOOTH], [Bluetooth], [bluetooth])\nAST_EXT_LIB_SETUP([CAP], [POSIX 1.e capabilities], [cap])\nAST_EXT_LIB_SETUP([CODEC2], [Codec 2 Audio Decoder/Encoder], [codec2])\nAST_EXT_LIB_SETUP([COROSYNC], [Corosync], [cpg])\nAST_EXT_LIB_SETUP_OPTIONAL([COROSYNC_CFG_STATE_TRACK], [A callback only in corosync 1.x], [COROSYNC], [cfg])\nAST_EXT_LIB_SETUP([CRYPT], [password and data encryption], [crypt])\nAST_EXT_LIB_SETUP([DAHDI], [DAHDI], [dahdi])\nAST_EXT_LIB_SETUP([FFMPEG], [Ffmpeg and avcodec], [avcodec])\nAST_EXT_LIB_SETUP([GSM], [External GSM], [gsm], [, use 'internal' GSM otherwise])\nAST_EXT_LIB_SETUP([ILBC], [System iLBC], [ilbc], [, use 'internal' iLBC otherwise])\nAST_EXT_LIB_SETUP([GTK2], [gtk2], [gtk2])\nAST_EXT_LIB_SETUP([GMIME], [GMime], [gmime])\nAST_EXT_LIB_SETUP([HOARD], [Hoard Memory Allocator], [hoard])\nAST_EXT_LIB_SETUP([ICAL], [iCal], [ical])\nAST_EXT_LIB_SETUP([ICONV], [Iconv], [iconv])\nAST_EXT_LIB_SETUP([IKSEMEL], [Iksemel Jabber], [iksemel])\nAST_EXT_LIB_SETUP([IMAP_TK], [UW IMAP Toolkit], [imap])\nAST_EXT_LIB_SETUP([INOTIFY], [inotify support], [inotify])\nAST_EXT_LIB_SETUP([IODBC], [iODBC], [iodbc])\nAST_EXT_LIB_SETUP([JACK], [Jack Audio Connection Kit], [jack])\nAST_EXT_LIB_SETUP([JANSSON], [Jansson JSON library], [jansson])\nAST_EXT_LIB_SETUP([URIPARSER], [uriparser library], [uriparser])\nAST_EXT_LIB_SETUP([KQUEUE], [kqueue support], [kqueue])\nAST_EXT_LIB_SETUP([LDAP], [OpenLDAP], [ldap])\nAST_LIBCURL_CHECK_CONFIG([], [7.10.1])\nAST_EXT_LIB_SETUP([LIBEDIT], [NetBSD Editline library], [libedit])\nAST_EXT_LIB_SETUP_OPTIONAL([LIBEDIT_IS_UNICODE], [Libedit compiled for unicode], [LIBEDIT], [libedit])\nAST_EXT_LIB_SETUP([LIBJWT], [LIBJWT], [libjwt])\nAST_EXT_LIB_SETUP([LIBXML2], [LibXML2], [libxml2])\nAST_EXT_LIB_SETUP([LIBXSLT], [LibXSLT], [libxslt])\nAST_EXT_LIB_SETUP_OPTIONAL([LIBXSLT_CLEANUP], [LibXSLT Library Cleanup Function], [LIBXSLT], [libxslt])\nAST_EXT_LIB_SETUP([LUA], [Lua], [lua])\nAC_ARG_VAR([LUA_VERSIONS],[A space separated list of target lua versions to test.])\nAST_EXT_LIB_SETUP([MYSQLCLIENT], [MySQL client], [mysqlclient])\nAST_EXT_LIB_SETUP([NEON], [neon], [neon])\nAST_EXT_LIB_SETUP([NEON29], [neon29], [neon29])\nAST_EXT_LIB_SETUP([NETSNMP], [Net-SNMP], [netsnmp])\nAST_EXT_LIB_SETUP([NEWT], [newt], [newt])\nAST_EXT_LIB_SETUP([OGG], [OGG], [ogg])\nAST_EXT_LIB_SETUP([OPENR2], [MFR2], [openr2])\nAST_EXT_LIB_SETUP([OPUS], [Opus], [opus])\nAST_EXT_LIB_SETUP([OPUSFILE], [Opusfile], [opusfile])\nAST_EXT_LIB_SETUP([PGSQL], [PostgreSQL], [postgres])\nAST_EXT_LIB_SETUP([BEANSTALK], [Beanstalk Job Queue], [beanstalk])\n\nif test \"x${PBX_PJPROJECT}\" != \"x1\" ; then\nAST_EXT_LIB_SETUP([PJPROJECT], [PJPROJECT], [pjproject])\nAST_EXT_LIB_SETUP_OPTIONAL([PJSIP_DLG_CREATE_UAS_AND_INC_LOCK], [PJSIP Dialog Create UAS with Incremented Lock], [PJPROJECT], [pjsip])\nAST_EXT_LIB_SETUP_OPTIONAL([PJ_TRANSACTION_GRP_LOCK], [PJSIP Transaction Group Lock Support], [PJPROJECT], [pjsip])\nAST_EXT_LIB_SETUP_OPTIONAL([PJSIP_REPLACE_MEDIA_STREAM], [PJSIP Media Stream Replacement Support], [PJPROJECT], [pjsip])\nAST_EXT_LIB_SETUP_OPTIONAL([PJSIP_GET_DEST_INFO], [pjsip_get_dest_info support], [PJPROJECT], [pjsip])\nAST_EXT_LIB_SETUP_OPTIONAL([PJ_SSL_CERT_LOAD_FROM_FILES2], [pj_ssl_cert_load_from_files2 support], [PJPROJECT], [pjsip])\nAST_EXT_LIB_SETUP_OPTIONAL([PJSIP_EXTERNAL_RESOLVER], [PJSIP External Resolver Support], [PJPROJECT], [pjsip])\nAST_EXT_LIB_SETUP_OPTIONAL([PJSIP_TLS_TRANSPORT_PROTO], [PJSIP TLS Transport proto field support], [PJPROJECT], [pjsip])\nAST_EXT_LIB_SETUP_OPTIONAL([PJSIP_TLS_1_1], [PJSIP TLS 1.1 Support], [PJPROJECT], [pjsip])\nAST_EXT_LIB_SETUP_OPTIONAL([PJSIP_TLS_1_2], [PJSIP TLS 1.2 Support], [PJPROJECT], [pjsip])\nAST_EXT_LIB_SETUP_OPTIONAL([PJSIP_TLS_1_3], [PJSIP TLS 1.3 Support], [PJPROJECT], [pjsip])\nAST_EXT_LIB_SETUP_OPTIONAL([PJSIP_EVSUB_GRP_LOCK], [PJSIP EVSUB Group Lock support], [PJPROJECT], [pjsip])\nAST_EXT_LIB_SETUP_OPTIONAL([PJSIP_INV_SESSION_REF], [PJSIP INVITE Session Reference Count support], [PJPROJECT], [pjsip])\nAST_EXT_LIB_SETUP_OPTIONAL([PJSIP_AUTH_CLT_DEINIT], [pjsip_auth_clt_deinit support], [PJPROJECT], [pjsip])\nAST_EXT_LIB_SETUP_OPTIONAL([PJSIP_TSX_LAYER_FIND_TSX2], [pjsip_tsx_layer_find_tsx2 support], [PJPROJECT], [pjsip])\nAST_EXT_LIB_SETUP_OPTIONAL([PJSIP_INV_ACCEPT_MULTIPLE_SDP_ANSWERS], [PJSIP INVITE Accept Multiple SDP Answers], [PJPROJECT], [pjsip])\nAST_EXT_LIB_SETUP_OPTIONAL([PJSIP_ENDPOINT_COMPACT_FORM], [PJSIP Compact Form Support on Endpoint], [PJPROJECT], [pjsip])\nAST_EXT_LIB_SETUP_OPTIONAL([PJSIP_TRANSPORT_DISABLE_CONNECTION_REUSE], [PJSIP Transport Connection Reuse Disabling], [PJPROJECT], [pjsip])\nAST_EXT_LIB_SETUP_OPTIONAL([PJSIP_OAUTH_AUTHENTICATION], [PJSIP OAuth Authentication Support], [PJPROJECT], [pjsip])\nAST_EXT_LIB_SETUP_OPTIONAL([PJSIP_TLS_TRANSPORT_RESTART], [PJSIP TLS Transport Restart Support], [PJPROJECT], [pjsip])\nAST_EXT_LIB_SETUP_OPTIONAL([PJSIP_AUTH_NEW_DIGESTS], [PJSIP Auth new digests like SHA-256 and SHA-512-256], [PJPROJECT], [pjsip])\nfi\n\nAST_EXT_LIB_SETUP([POPT], [popt], [popt])\nAST_EXT_LIB_SETUP([PORTAUDIO], [PortAudio], [portaudio])\nAST_EXT_LIB_SETUP([PRI], [ISDN PRI], [pri])\nAST_EXT_LIB_SETUP_OPTIONAL([PRI_SETUP_ACK_INBAND], [ISDN PRI progress inband ie in SETUP ACK], [PRI], [pri])\nAST_EXT_LIB_SETUP_OPTIONAL([PRI_L2_PERSISTENCE], [ISDN Layer 2 persistence option], [PRI], [pri])\nAST_EXT_LIB_SETUP_OPTIONAL([PRI_DATETIME_SEND], [ISDN PRI Date/time ie send policy], [PRI], [pri])\nAST_EXT_LIB_SETUP_OPTIONAL([PRI_MWI_V2], [ISDN PRI Message Waiting Indication (Fixed)], [PRI], [pri])\nAST_EXT_LIB_SETUP_OPTIONAL([PRI_DISPLAY_TEXT], [ISDN PRI user display text IE contents during call], [PRI], [pri])\nAST_EXT_LIB_SETUP_OPTIONAL([PRI_MWI], [ISDN PRI Message Waiting Indication], [PRI], [pri])\nAST_EXT_LIB_SETUP_OPTIONAL([PRI_MCID], [ISDN PRI Malicious Call ID], [PRI], [pri])\nAST_EXT_LIB_SETUP_OPTIONAL([PRI_CALL_WAITING], [ISDN PRI call waiting supplementary service], [PRI], [pri])\nAST_EXT_LIB_SETUP_OPTIONAL([PRI_AOC_EVENTS], [ISDN PRI advice of charge supplementary service events], [PRI], [pri])\nAST_EXT_LIB_SETUP_OPTIONAL([PRI_TRANSFER], [ISDN PRI call transfer supplementary service], [PRI], [pri])\nAST_EXT_LIB_SETUP_OPTIONAL([PRI_CCSS], [ISDN PRI call completion supplementary service], [PRI], [pri])\nAST_EXT_LIB_SETUP_OPTIONAL([PRI_HANGUP_FIX], [ISDN PRI hangup fix], [PRI], [pri])\nAST_EXT_LIB_SETUP_OPTIONAL([PRI_SUBADDR], [ISDN PRI subaddressing], [PRI], [pri])\nAST_EXT_LIB_SETUP_OPTIONAL([PRI_CALL_HOLD], [ISDN PRI call hold], [PRI], [pri])\nAST_EXT_LIB_SETUP_OPTIONAL([PRI_CALL_REROUTING], [ISDN PRI call rerouting and call deflection], [PRI], [pri])\nAST_EXT_LIB_SETUP_OPTIONAL([PRI_SETUP_KEYPAD], [ISDN PRI keypad facility in SETUP], [PRI], [pri])\n# ------------------------------------v\n# TODO: The code can be changed to always include these features now.\n# These features will always be present if pri_connected_line_update is available.\nAST_EXT_LIB_SETUP_OPTIONAL([PRI_INBANDDISCONNECT], [ISDN PRI set_inbanddisconnect], [PRI], [pri])\nAST_EXT_LIB_SETUP_OPTIONAL([PRI_PROG_W_CAUSE], [ISDN progress with cause], [PRI], [pri])\nAST_EXT_LIB_SETUP_OPTIONAL([PRI_SERVICE_MESSAGES], [ISDN service messages], [PRI], [pri])\nAST_EXT_LIB_SETUP_OPTIONAL([PRI_REVERSE_CHARGE], [ISDN reverse charge], [PRI], [pri])\n# ------------------------------------^\nAST_EXT_LIB_SETUP([RADIUS], [Radius Client], [radius])\nAST_EXT_LIB_SETUP([FFTW3], [LIBFFTW3], [fftw3])\nAST_EXT_LIB_SETUP([RESAMPLE], [LIBRESAMPLE], [resample])\nAST_EXT_LIB_SETUP([SNDFILE], [libsndfile], [sndfile])\nAST_EXT_LIB_SETUP([SDL], [Sdl], [sdl])\nAST_EXT_LIB_SETUP([SDL_IMAGE], [Sdl Image], [SDL_image])\nAST_EXT_LIB_SETUP([SPANDSP], [SPANDSP], [spandsp])\nAST_EXT_LIB_SETUP([SS7], [ISDN SS7], [ss7])\nAST_EXT_LIB_SETUP([SPEEX], [Speex], [speex])\nAST_EXT_LIB_SETUP([SPEEX_PREPROCESS], [Speex preprocess routines], [speex])\nAST_EXT_LIB_SETUP([SPEEXDSP], [SpeexDSP], [speexdsp])\nAST_EXT_LIB_SETUP_DEPENDENT([SPEEX_PREPROCESS], [speex_preprocess_ctl], [], [speex])\nAST_EXT_LIB_SETUP([SQLITE3], [SQLite], [sqlite3])\nAST_EXT_LIB_SETUP([SRTP], [Secure RTP], [srtp])\nAST_EXT_LIB_SETUP_OPTIONAL([SRTP_256], [SRTP Library AES-256 (ICM)], [SRTP], [srtp])\nAST_EXT_LIB_SETUP_OPTIONAL([SRTP_192], [SRTP Library AES-192 (ICM)], [SRTP], [srtp])\nAST_EXT_LIB_SETUP_OPTIONAL([SRTP_GCM], [SRTP Library AES-128 (GCM) and AES-256 (GCM)], [SRTP], [srtp])\nAST_EXT_LIB_SETUP_OPTIONAL([SRTP_SHUTDOWN], [SRTP Library Shutdown Function], [SRTP], [srtp])\nAST_EXT_LIB_SETUP_OPTIONAL([SRTP_GET_VERSION], [SRTP Library Version Function], [SRTP], [srtp])\nAST_EXT_LIB_SETUP_OPTIONAL([RT], [Realtime functions], [rt])\nAST_EXT_LIB_SETUP([FREETDS], [FreeTDS], [tds])\nAST_EXT_LIB_SETUP([TIMERFD], [timerfd], [timerfd])\nAST_EXT_LIB_SETUP([TONEZONE], [tonezone], [tonezone])\nAST_EXT_LIB_SETUP([UNBOUND], [unbound], [unbound])\nAST_EXT_LIB_SETUP([UNIXODBC], [unixODBC], [unixodbc])\nAST_EXT_LIB_SETUP([VORBIS], [Vorbis], [vorbis])\nAST_EXT_LIB_SETUP([X11], [X11], [x11])\nAST_EXT_LIB_SETUP([ZLIB], [zlib compression], [z])\n\n# check for basic system features and functionality before\n# checking for package libraries\n\nAC_FUNC_ALLOCA\nAC_HEADER_DIRENT\nif test -z $ac_header_dirent -o \"$ac_header_dirent\" = \"no\"; then\n  AC_MSG_ERROR([*** Could not find dirent header that defines 'DIR'.])\nfi\n\nAC_HEADER_SYS_WAIT\nif test \"$ac_cv_header_sys_wait_h\" != \"yes\"; then\n  AC_MSG_ERROR([*** POSIX.1 compatible sys/wait.h is required.])\nfi\n\nAC_HEADER_RESOLV\nif test \"$ac_cv_header_resolv_h\" != \"yes\"; then\n  AC_MSG_ERROR([*** resolv.h is required.])\nfi\n\n# Check for headers that are unconditionally required on all platforms.  Do not use\n# this to check for headers that are only needed by modules.\nAC_CHECK_HEADERS([ \\\n  arpa/nameser.h assert.h ctype.h dlfcn.h errno.h fcntl.h float.h grp.h \\\n  inttypes.h limits.h locale.h math.h pwd.h netinet/in.h regex.h \\\n  sched.h stdarg.h stdint.h stdio.h stdlib.h string.h syslog.h \\\n  sys/file.h sys/ioctl.h sys/param.h sys/resource.h sys/socket.h sys/stat.h \\\n  sys/time.h sys/types.h sys/un.h \\\n  termios.h time.h unistd.h \\\n], [], [\n  AC_MSG_ERROR([*** A required header was not found.])\n])\n\nAC_CHECK_HEADERS([arpa/inet.h libintl.h malloc.h netdb.h stddef.h strings.h sys/event.h utime.h])\n\n# Find required NetBSD Editline library (libedit).\nAST_PKG_CONFIG_CHECK(LIBEDIT, libedit)\n# some platforms do not list libedit via pkg-config, for example OpenBSD 6.2\nAST_EXT_LIB_CHECK([LIBEDIT], [edit], [history_init], [histedit.h], [-ltermcap])\nif test \"${PBX_LIBEDIT}\" != 1; then\n\tAC_MSG_ERROR(*** Please install the 'libedit' development package.)\n\texit 1\nfi\nAST_C_COMPILE_CHECK([LIBEDIT_IS_UNICODE], [el_rfunc_t *callback;], [histedit.h], [], [Testing for libedit unicode support])\n\n# Find required UUID support.\n#  * -luuid on Linux\n#  * -le2fs-uuid on OpenBSD\n#  * in libsystem on OS X\nAST_EXT_LIB_CHECK([LIBUUID], [uuid], [uuid_generate_random], [uuid/uuid.h])\nif test \"x$LIBUUID_LIB\" != \"x\" ; then\n  UUID_INCLUDE=\"$LIBUUID_INCLUDE\"\n  UUID_LIB=\"$LIBUUID_LIB\"\nelse\n  AST_EXT_LIB_CHECK([E2FSUUID], [e2fs-uuid], [uuid_generate_random], [uuid/uuid.h])\n  if test \"x$E2FSUUID_LIB\" != \"x\" ; then\n    UUID_INCLUDE=\"$E2FSUUID_INCLUDE\"\n    UUID_LIB=\"$E2FSUUID_LIB\"\n  else\n    AC_CHECK_FUNCS([uuid_generate_random], [SYSUUID=true], [SYSUUID=\"\"])\n    if test \"x$SYSUUID\" != \"x\" ; then\n      UUID_INCLUDE=\"\"\n      UUID_LIB=\"\"\n    else\n      AC_MSG_ERROR([*** uuid support not found (this typically means the uuid development package is missing)])\n    fi\n  fi\nfi\nAC_SUBST(UUID_INCLUDE)\nAC_SUBST(UUID_LIB)\n\n# Find required JSON support if bundled is not enabled.\nif test \"$JANSSON_BUNDLED\" = \"no\" ; then\n\tAST_PKG_CONFIG_CHECK([JANSSON], [jansson >= 2.11])\n\t# json_sprintf is available in 2.11+\n\tAST_EXT_LIB_CHECK([JANSSON], [jansson], [json_sprintf], [jansson.h])\n\n\tif test \"${PBX_JANSSON}\" != 1; then\n\t\tAC_MSG_NOTICE(*** Asterisk requires libjansson >= 2.11 and no system copy was found.)\n\t\tAC_MSG_NOTICE(*** Please install the 'libjansson' development package or)\n\t\tAC_MSG_NOTICE(*** use './configure --with-jansson-bundled')\n\t\texit 1\n\tfi\n\tJANSSON_DEFINE_JSON_INT()\nelse\n\tPBX_JANSSON=1\nfi\n\n. ./third-party/versions.mak\n# Find required JWT support if bundled is not enabled.\nif test \"$LIBJWT_BUNDLED\" = \"no\" ; then\n\tAST_PKG_CONFIG_CHECK([LIBJWT], [libjwt >= $LIBJWT_VERSION])\nelse\n\tPBX_LIBJWT=1\nfi\n\n# See if clock_gettime is in librt\nAST_EXT_LIB_CHECK([RT], [rt], [clock_gettime], [])\n\nAST_PKG_CONFIG_CHECK([LIBXML2], [libxml-2.0])\nAST_EXT_TOOL_CHECK([LIBXML2], [xml2-config], , ,\n        [#include <libxml/tree.h>\n        #include <libxml/parser.h>],\n        [LIBXML_TEST_VERSION])\n\nif test \"${PBX_LIBXML2}\" != 1; then\n\tAC_MSG_NOTICE(*** The Asterisk menuselect tool requires the 'libxml2' development package.)\n\tAC_MSG_NOTICE(*** Please install the 'libxml2' development package.)\n\texit 1\nfi\n\nAST_EXT_LIB_CHECK([URIPARSER], [uriparser], [uriParseUriA], [uriparser/Uri.h])\n\n# Another mandatory item (unless it's explicitly disabled)\nAC_ARG_ENABLE([xmldoc],\n\t[AS_HELP_STRING([--disable-xmldoc],\n\t\t[Explicitly disable XML documentation])],\n\t[case \"${enableval}\" in\n\t\ty|ye|yes) DISABLE_XMLDOC=no ;;\n\t\tn|no)  DISABLE_XMLDOC=yes ;;\n\t\t*) AC_MSG_ERROR(bad value ${enableval} for --disable-xmldoc)  ;;\n\tesac], [DISABLE_XMLDOC=no])\n\nAC_SUBST([DISABLE_XMLDOC])\nif test \"${DISABLE_XMLDOC}\" != \"yes\"; then\n        AC_DEFINE([AST_XML_DOCS], 1, [Define to enable XML documentation.])\nfi\n\nAST_EXT_LIB_CHECK([LIBXSLT], [xslt], [xsltLoadStylesheetPI], [libxslt/xsltInternals.h], [${LIBXML2_LIB}], [${LIBXML2_INCLUDE}])\nAST_EXT_LIB_CHECK([LIBXSLT_CLEANUP], [xslt], [xsltCleanupGlobals], [libxslt/xsltInternals.h], [${LIBXML2_LIB}], [${LIBXML2_INCLUDE}])\n\nAC_ARG_ENABLE([permanent-dlopen],\n\t[AS_HELP_STRING([--enable-permanent-dlopen],\n\t\t[Enable when your libc has a permanent dlopen like musl])],\n\t[case \"${enableval}\" in\n\t\ty|ye|yes) PERMANENT_DLOPEN=yes ;;\n\t\tn|no)  PERMANENT_DLOPEN=no ;;\n\t\t*) AC_MSG_ERROR(bad value ${enableval} for --enable-permanent-dlopen)  ;;\n\tesac], [PERMANENT_DLOPEN=no])\n\nAC_SUBST([PERMANENT_DLOPEN])\nif test \"${PERMANENT_DLOPEN}\" = \"yes\"; then\n\tAC_DEFINE([HAVE_PERMANENT_DLOPEN], 1, [Define to support libc with permanent dlopen.])\nfi\n\n# some embedded systems omit internationalization (locale) support\nAC_CHECK_HEADERS([xlocale.h])\n\nAC_CHECK_HEADERS([winsock.h winsock2.h])\n\nAC_CHECK_HEADER([sys/poll.h],\n\t [],\n     AC_DEFINE([AST_POLL_COMPAT], 1, [Define to 1 if internal poll should be used.]))\n\nAC_SYS_LARGEFILE\n\n# Checks for typedefs, structures, and compiler characteristics.\nAC_HEADER_STDBOOL\nAC_C_CONST\nAC_TYPE_UID_T\nAC_C_INLINE\nAC_TYPE_LONG_DOUBLE_WIDER\nAC_TYPE_MODE_T\nAC_TYPE_OFF_T\nAC_TYPE_PID_T\nAC_TYPE_SIZE_T\nAC_CHECK_MEMBERS([struct stat.st_blksize])\nAC_CHECK_MEMBERS([struct ucred.uid, struct ucred.cr_uid, struct sockpeercred.uid], [], [], [#include <sys/types.h>\n#include <sys/socket.h> ])\nAC_CHECK_MEMBERS([struct ifreq.ifr_ifru.ifru_hwaddr], [], [], [#include <net/if.h>])\nAC_STRUCT_TM\nAC_C_VOLATILE\nAC_CHECK_TYPES([ptrdiff_t])\nstat_nsec_found=no\nAC_CHECK_MEMBERS([struct stat.st_mtim, struct stat.st_mtimensec, struct stat.st_mtimespec], [stat_nsec_found=yes], [], [[#include <sys/stat.h>]])\n\nif test \"${stat_nsec_found}\" != yes; then\n\tAC_MSG_WARN(Cannot determine nanosecond field of struct stat)\nfi\n\n# Checks for library functions.\nAC_FUNC_CHOWN\nAC_FUNC_CLOSEDIR_VOID\nAC_FUNC_ERROR_AT_LINE\nAST_FUNC_FORK\nAC_FUNC_FSEEKO\n# AC_PROG_GCC_TRADITIONAL Obsolete\n# XXX: these are commented out until we determine whether it matters if our malloc()\n# acts exactly like glibc's or not\n# AC_FUNC_MALLOC\n# AC_FUNC_REALLOC\nAC_FUNC_MEMCMP\nAC_FUNC_MMAP\nAC_FUNC_SELECT_ARGTYPES\nAC_FUNC_STAT\nAC_FUNC_STRCOLL\nAC_FUNC_STRFTIME\nAC_FUNC_STRNLEN\nAC_FUNC_STRTOD\nAC_FUNC_UTIME_NULL\nAC_FUNC_VPRINTF\nAC_CHECK_FUNCS([asprintf atexit closefrom dup2 eaccess endpwent euidaccess ffsll ftruncate getcwd gethostbyname gethostname getloadavg gettimeofday glob ioperm inet_ntoa isascii memchr memmove memset mkdir mkdtemp munmap newlocale pipe2 ppoll putenv re_comp regcomp select setenv socket strcasecmp strcasestr strchr strcspn strdup strerror strlcat strlcpy strncasecmp strndup strnlen strrchr strsep strspn strstr strtod strtol strtold strtoq unsetenv uselocale utime vasprintf getpeereid sysctl swapctl malloc_trim])\n\nAC_MSG_CHECKING(for htonll)\nAC_LINK_IFELSE(\n\t[AC_LANG_PROGRAM([#include <arpa/inet.h>],\n\t\t[return htonll(0);])],\n\tAC_MSG_RESULT(yes)\n\tAC_DEFINE(HAVE_HTONLL, 1, [Define to 1 if arpa/inet.h includes a htonll definition.]),\n\tAC_MSG_RESULT(no)\n)\n\nAC_MSG_CHECKING(for ntohll)\nAC_LINK_IFELSE(\n\t[AC_LANG_PROGRAM([#include <arpa/inet.h>],\n\t\t[return ntohll(0);])],\n\tAC_MSG_RESULT(yes)\n\tAC_DEFINE(HAVE_NTOHLL, 1, [Define to 1 if arpa/inet.h includes a ntohll definition.]),\n\tAC_MSG_RESULT(no)\n)\n\n# NOTE: we use AC_CHECK_LIB to get -lm into the arguments for later checks,\n# so that AC_CHECK_FUNCS can detect functions in that library.\nAC_CHECK_LIB([m], [sqrt])\n# BSD might not have exp2, and/or log2\nAC_CHECK_FUNCS([exp2 log2 exp10 log10 sin cos tan asin acos atan atan2 pow rint exp log remainder fmod round roundf trunc floor ceil])\n\n# Certain architectures don't really have long double, even though\n# AC_CHECK_FUNCS would otherwise find the following functions.\nif test \"x${ac_cv_type_long_double_wider}\" = \"xyes\" ; then\n\tAC_CHECK_FUNCS([exp2l log2l exp10l log10l sinl cosl tanl asinl acosl atanl atan2l powl sqrtl rintl expl logl remainderl fmodl roundl truncl floorl ceill])\nfi\n\nAC_MSG_CHECKING(for LLONG_MAX in limits.h)\nAC_LINK_IFELSE(\n\t[AC_LANG_PROGRAM([#include <limits.h>],\n\t\t[long long foo = LLONG_MAX])],\n\tAC_MSG_RESULT(yes)\n\tAC_DEFINE([HAVE_LLONG_MAX], 1, [Define to 1 if limits.h includes a LLONG_MAX definition.]),\n\tAC_MSG_RESULT(no)\n)\n\nAC_MSG_CHECKING(for timersub in time.h)\nAC_LINK_IFELSE(\n\t[AC_LANG_PROGRAM([#include <sys/time.h>],\n\t\t[struct timeval *a; timersub(a, a, a);])],\n\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE([HAVE_TIMERSUB], 1, [Define to 1 if your system defines timersub.]),\n\tAC_MSG_RESULT(no)\n)\n\nAC_MSG_CHECKING(for a version of GNU ld that supports the --dynamic-list flag)\nold_LDFLAGS=${LDFLAGS}\ncat >conftest.dynamics <<_ACEOF\n{\n\t*ast_*;\n};\n_ACEOF\nLDFLAGS=\"${LDFLAGS} -Wl,--dynamic-list,conftest.dynamics\"\nPBX_DYNAMIC_LIST=0\nAC_LINK_IFELSE(\n\t[AC_LANG_PROGRAM([], [])],\n\tPBX_DYNAMIC_LIST=1\n\tAC_MSG_RESULT(yes),\n\tAC_MSG_RESULT(no)\n)\nAC_SUBST(PBX_DYNAMIC_LIST)\nLDFLAGS=${old_LDFLAGS}\nrm -f conftest.dynamics\n\nAC_CHECK_HEADER([sys/poll.h],\n   [HAS_POLL=1]\n   AC_DEFINE([HAVE_SYS_POLL_H], 1, [Define to 1 if your system has working sys/poll.h]),\n   )\n\nAC_ARG_ENABLE([internal-poll],\n\t[AS_HELP_STRING([--enable-internal-poll],\n\t\t[Use Asterisk's poll implementation])],\n\t[case \"${enableval}\" in\n\t\ty|ye|yes) HAS_POLL=\"\";;\n\t\tn|no) HAS_POLL=\"${HAS_POLL}\" ;;\n\t\t*) AC_MSG_ERROR(bad value ${enableval} for --enable-internal-poll) ;;\n\tesac])\nAC_SUBST(HAS_POLL)\n\nAC_ARG_ENABLE([asteriskssl],\n\t[AS_HELP_STRING([--disable-asteriskssl],\n\t\t[Disable Asterisk's SSL wrapper library])],\n\t[case \"${enableval}\" in\n\t\ty|ye|yes) AST_ASTERISKSSL=yes ;;\n\t\tn|no)  AST_ASTERISKSSL=no ;;\n\t\t*) AC_MSG_ERROR(bad value ${enableval} for --disable-asteriskssl)  ;;\n\tesac], [AST_ASTERISKSSL=yes])\nAC_SUBST(AST_ASTERISKSSL)\n\nAC_CHECK_FUNCS([inet_aton])\n\n# check if we have IP_PKTINFO constant defined\nAC_MSG_CHECKING(for IP_PKTINFO)\nAC_LINK_IFELSE(\n\t\t[AC_LANG_PROGRAM([#include <netinet/in.h>],\n\t\t\t\t\t\t[int pi = IP_PKTINFO;])],\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE([HAVE_PKTINFO], 1, [Define to 1 if your system defines IP_PKTINFO.]),\n\t\tAC_MSG_RESULT(no)\n)\n\n# NetBSD libc ships with an internal-only incompatible symbol gethostbyname_r\nAC_CHECK_DECLS([gethostbyname_r],\n        [have_gethostbyname_r_public_declaration=yes],\n        [have_gethostbyname_r_public_declaration=no],\n        [#include <stdlib.h>\n         #include <netdb.h>]\n)\n\nif test \"x$have_gethostbyname_r_public_declaration\" = \"xyes\"; then\n        # some systems already have gethostbyname_r so we don't need to build ours in main/utils.c\n        AC_SEARCH_LIBS(gethostbyname_r, [socket nsl])\n\n        AC_MSG_CHECKING(for gethostbyname_r with 6 arguments)\n        AC_LINK_IFELSE(\n                [AC_LANG_PROGRAM([#include <stdlib.h>\n                                 #include <netdb.h>],\n                                [int r = gethostbyname_r((const char *)NULL, (struct hostent *)NULL, (char *)NULL, (int)0, (struct hostent **)NULL, (int *)NULL);])],\n                AC_MSG_RESULT(yes)\n                AC_DEFINE([HAVE_GETHOSTBYNAME_R_6], 1, [Define to 1 if your system has gethostbyname_r with 6 arguments.]),\n                AC_MSG_RESULT(no)\n        )\n\n        AC_MSG_CHECKING(for gethostbyname_r with 5 arguments)\n        AC_LINK_IFELSE(\n                [AC_LANG_PROGRAM([#include <stdlib.h>\n\t                         #include <netdb.h>],\n                                [int r = gethostbyname_r((const char *)NULL, (struct hostent *)NULL, (char *)NULL, (int)0, (int *)NULL);])],\n                AC_MSG_RESULT(yes)\n                AC_DEFINE([HAVE_GETHOSTBYNAME_R_5], 1, [Define to 1 if your system has gethostbyname_r with 5 arguments.]),\n                AC_MSG_RESULT(no)\n        )\nfi\n\nAC_CHECK_HEADER([byteswap.h], [AC_DEFINE_UNQUOTED([HAVE_BYTESWAP_H], 1, [Define to 1 if byteswap.h macros are available.])])\n\nAC_MSG_CHECKING(for __swap16 variant of <sys/endian.h> byteswapping macros)\nAC_LINK_IFELSE(\n[AC_LANG_PROGRAM([#include <sys/endian.h>], [int a = 1; int b = __swap16(a);])],\nAC_MSG_RESULT(yes)\nAC_DEFINE([HAVE_SYS_ENDIAN_SWAP16], 1, [Define to 1 if your sys/endian.h header file provides the __swap16 macro.]),\nAC_MSG_RESULT(no)\n)\n\nAC_MSG_CHECKING(for bswap16 variant of <sys/endian.h> byteswapping macros)\nAC_LINK_IFELSE(\n[AC_LANG_PROGRAM([#include <sys/endian.h>], [int a = 1; int b = bswap16(a);])],\nAC_MSG_RESULT(yes)\nAC_DEFINE([HAVE_SYS_ENDIAN_BSWAP16], 1, [Define to 1 if your sys/endian.h header file provides the bswap16 macro.]),\nAC_MSG_RESULT(no)\n)\n\nAC_MSG_CHECKING(for locale_t in locale.h)\nAC_LINK_IFELSE(\n[AC_LANG_PROGRAM([#include <locale.h>], [locale_t lt = NULL])],\nAC_MSG_RESULT(yes)\nAC_DEFINE([HAVE_LOCALE_T_IN_LOCALE_H], 1, [Define to 1 if your system defines the locale_t type in locale.h]),\nAC_MSG_RESULT(no)\n  AC_MSG_CHECKING(for locale_t in xlocale.h)\n  AC_LINK_IFELSE(\n  [AC_LANG_PROGRAM([#include <xlocale.h>], [locale_t lt = NULL])],\n  AC_MSG_RESULT(yes)\n  AC_DEFINE([HAVE_LOCALE_T_IN_XLOCALE_H], 1, [Define to 1 if your system defines the locale_t type in xlocale.h]),\n  AC_MSG_RESULT(no)\n  )\n)\n\nAC_MSG_CHECKING(for O_EVTONLY in fcntl.h)\nAC_LINK_IFELSE(\n[AC_LANG_PROGRAM([#include <fcntl.h>], [int a = O_EVTONLY;])],\nAC_MSG_RESULT(yes)\nAC_DEFINE([HAVE_O_EVTONLY], 1, [Define to 1 if your system defines the file flag O_EVTONLY in fcntl.h]),\nAC_MSG_RESULT(no)\n)\n\nAC_MSG_CHECKING(for O_SYMLINK in fcntl.h)\nAC_LINK_IFELSE(\n[AC_LANG_PROGRAM([#include <fcntl.h>], [int a = O_SYMLINK;])],\nAC_MSG_RESULT(yes)\nAC_DEFINE([HAVE_O_SYMLINK], 1, [Define to 1 if your system defines the file flag O_SYMLINK in fcntl.h]),\nAC_MSG_RESULT(no)\n)\n\nAST_C_DEFINE_CHECK([PTHREAD_RWLOCK_INITIALIZER], [PTHREAD_RWLOCK_INITIALIZER], [pthread.h])\n\nAC_MSG_CHECKING(for PTHREAD_RWLOCK_PREFER_WRITER_NP in pthread.h)\nAC_LINK_IFELSE(\n[AC_LANG_PROGRAM([#include <pthread.h>], [int a = PTHREAD_RWLOCK_PREFER_WRITER_NP;])],\nAC_MSG_RESULT(yes)\nAC_DEFINE([HAVE_PTHREAD_RWLOCK_PREFER_WRITER_NP], 1, [Define to 1 if your system defines PTHREAD_RWLOCK_PREFER_WRITER_NP in pthread.h]),\nAC_MSG_RESULT(no)\n)\n\nAC_MSG_CHECKING(for PTHREAD_MUTEX_RECURSIVE_NP in pthread.h)\nAC_LINK_IFELSE(\n[AC_LANG_PROGRAM([#include <pthread.h>], [int a = PTHREAD_MUTEX_RECURSIVE_NP;])],\nAC_MSG_RESULT(yes)\nAC_DEFINE([HAVE_PTHREAD_MUTEX_RECURSIVE_NP], 1, [Define to 1 if your system defines PTHREAD_MUTEX_RECURSIVE_NP in pthread.h]),\nAC_MSG_RESULT(no)\n)\n\nAC_MSG_CHECKING(for PTHREAD_MUTEX_ADAPTIVE_NP in pthread.h)\nAC_LINK_IFELSE(\n[AC_LANG_PROGRAM([#include <pthread.h>], [int a = PTHREAD_MUTEX_ADAPTIVE_NP;])],\nAC_MSG_RESULT(yes)\nAC_DEFINE([HAVE_PTHREAD_MUTEX_ADAPTIVE_NP], 1, [Define to 1 if your system defines PTHREAD_MUTEX_ADAPTIVE_NP in pthread.h]),\nAC_MSG_RESULT(no)\n)\n\nAC_MSG_CHECKING(for pthread_spinlock_t in pthread.h)\nAC_LINK_IFELSE(\n[AC_LANG_PROGRAM([#include <pthread.h>], [pthread_spinlock_t spin;])],\nAC_MSG_RESULT(yes)\nAC_DEFINE([HAVE_PTHREAD_SPINLOCK], 1, [Define to 1 if your system has pthread_spinlock_t in pthread.h]),\nAC_MSG_RESULT(no)\n)\n\nsave_LIBS=\"$LIBS\"\nsave_CFLAGS=\"$CFLAGS\"\nLIBS=\"$PTHREAD_LIBS $LIBS\"\nCFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n\nAC_MSG_CHECKING(for pthread_rwlock_timedwrlock() in pthread.h)\nAC_LINK_IFELSE(\n  [AC_LANG_PROGRAM(\n    [#include <pthread.h>\n     #include <time.h>],\n    [pthread_rwlock_t foo; struct timespec bar; pthread_rwlock_timedwrlock(&foo, &bar)])\n  ],[\n    AC_MSG_RESULT(yes)\n    ac_cv_pthread_rwlock_timedwrlock=\"yes\"\n  ],[\n    AC_MSG_RESULT(no)\n    ac_cv_pthread_rwlock_timedwrlock=\"no\"\n  ]\n)\n\n# Some platforms define sem_init(), but only support sem_open(). joyous.\nAC_MSG_CHECKING(for working unnamed semaphores)\nAC_RUN_IFELSE(\n\t[AC_LANG_PROGRAM([#include <semaphore.h>],\n\t\t[sem_t sem; return sem_init(&sem, 0, 0);])],\n\tAC_MSG_RESULT(yes)\n\tAC_DEFINE([HAS_WORKING_SEMAPHORE], 1, [Define to 1 if anonymous semaphores work.]),\n\tAC_MSG_RESULT(no),\n\tAC_MSG_RESULT(cross-compile)\n\tAC_MSG_NOTICE([WARNING: result yes guessed because of cross compilation])\n\tAC_DEFINE([HAS_WORKING_SEMAPHORE], 1, [Define to 1 if anonymous semaphores work.])\n)\n\nLIBS=\"$save_LIBS\"\nCFLAGS=\"$save_CFLAGS\"\nif test \"${ac_cv_pthread_rwlock_timedwrlock}\" = \"yes\"; then\n  AC_DEFINE([HAVE_PTHREAD_RWLOCK_TIMEDWRLOCK], 1, [Define if your system has pthread_rwlock_timedwrlock()])\nfi\n\nAC_MSG_CHECKING(if PTHREAD_ONCE_INIT needs braces)\nsaved_CFLAGS=\"${CFLAGS}\"\nCFLAGS=\"${CFLAGS} -Werror -Wmissing-braces\"\nAC_COMPILE_IFELSE(\n  [AC_LANG_PROGRAM(\n    [#include <pthread.h>\n     void empty(){}],\n\t[pthread_once_t once = PTHREAD_ONCE_INIT; pthread_once(&once, empty);])\n  ],[\n    AC_MSG_RESULT(no)\n    ac_cv_pthread_once_needsbraces=\"no\"\n  ],[\n    AC_MSG_RESULT(yes)\n    ac_cv_pthread_once_needsbraces=\"yes\"\n  ]\n)\nCFLAGS=\"${saved_CFLAGS}\"\nif test \"${ac_cv_pthread_once_needsbraces}\" = \"yes\"; then\n  AC_DEFINE([PTHREAD_ONCE_INIT_NEEDS_BRACES], 1, [Define if your system needs braces around PTHREAD_ONCE_INIT])\nfi\n\nAST_C_DEFINE_CHECK([PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP], [PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP], [pthread.h])\n\n# Can we compare a mutex to its initial value?\n# Generally yes on OpenBSD/FreeBSD and no on Mac OS X.\nAC_MSG_CHECKING(whether we can compare a mutex to its initial value)\nAC_LINK_IFELSE(\n\t[AC_LANG_PROGRAM([#include <pthread.h>], [pthread_mutex_t lock;\n\tif ((lock) != ((pthread_mutex_t) PTHREAD_MUTEX_INITIALIZER)) {\n\t\treturn 0;\n\t}\n\treturn 0])],\n\tAC_MSG_RESULT(yes)\n\tAC_DEFINE([CAN_COMPARE_MUTEX_TO_INIT_VALUE], 1, [Define to 1 if your system's implementation of mutexes supports comparison of a mutex to its initializer.]),\n\tAC_MSG_RESULT(no)\n)\n\n#if test \"${cross_compiling}\" = \"no\";\n#then\n#AC_MSG_CHECKING(for working epoll support)\n#AC_LINK_IFELSE(\n#AC_LANG_PROGRAM([#include <sys/epoll.h>], [int res = epoll_create(10);\n#\t\t\t\t\t  if (res < 0)\n#\t\t\t\t\t     return 1;\n#\t\t\t\t\t  close (res);\n#\t\t\t\t\t  return 0;]),\n#AC_MSG_RESULT(yes)\n#AC_DEFINE([HAVE_EPOLL], 1, [Define to 1 if your system has working epoll support.]),\n#AC_MSG_RESULT(no)\n#)\n#fi\n\nAC_MSG_CHECKING(for compiler sync operations)\nAC_LINK_IFELSE(\n[AC_LANG_PROGRAM([], [int foo1; int foo2 = __sync_fetch_and_add(&foo1, 1);])],\nAC_MSG_RESULT(yes)\nax_cv_have_gcc_atomics=1\nAC_DEFINE([HAVE_GCC_ATOMICS], 1, [Define to 1 if your GCC C compiler provides __sync atomic operations.]),\nAC_MSG_RESULT(no)\n)\n\nAC_MSG_CHECKING(for compiler atomic operations)\nAC_LINK_IFELSE(\n[AC_LANG_PROGRAM([], [int foo1; int foo2 = __atomic_fetch_add(&foo1, 1, __ATOMIC_RELAXED);])],\nAC_MSG_RESULT(yes)\nax_cv_have_c_atomics=1\nAC_DEFINE([HAVE_C_ATOMICS], 1, [Define to 1 if your C compiler provides __atomic operations.]),\nAC_MSG_RESULT(no)\n)\n\nif test -z $ax_cv_have_c_atomics$ax_cv_have_gcc_atomics; then\n\tAC_MSG_ERROR([*** Atomic operations are not supported by your compiler.])\nfi\n\n# glibc, AFAIK, is the only C library that makes printing a NULL to a string safe.\nAC_MSG_CHECKING([if your system printf is NULL-safe.])\nAC_RUN_IFELSE(\n\t[AC_LANG_PROGRAM([#include <stdio.h>],\n\t\t[printf(\"%s\", NULL)])],\n\tAC_DEFINE([HAVE_NULLSAFE_PRINTF], 1, [Define to 1 if your C library can safely print NULL to string formats.])\n\tAC_MSG_RESULT(yes),\n\tAC_MSG_RESULT(no),\n\t# It's unlikely an embedded system will have this.\n\tAC_MSG_RESULT(unknown)\n)\n\nAC_MSG_CHECKING([if socket() accepts SOCK_NONBLOCK])\nAC_RUN_IFELSE(\n[AC_LANG_PROGRAM([\n\t#ifdef HAVE_SYS_TYPES_H\n\t# include <sys/types.h>\n\t#endif\n\t#ifdef HAVE_SYS_SOCKET_H\n\t# include <sys/socket.h>\n\t#endif\n\t], [\n\t   if (socket(AF_INET, SOCK_STREAM | SOCK_NONBLOCK, 0) < 0) {\n\t      return 1;\n\t   }\n\t   return 0;\n\t])],\n\tAC_MSG_RESULT(yes)\n\tAC_DEFINE([HAVE_SOCK_NONBLOCK], 1, [Define to 1 if your socket() implementation can accept SOCK_NONBLOCK.]),\n\tAC_MSG_RESULT(no),\n\tAC_MSG_RESULT(cross-compile)\n)\n\nAC_MSG_CHECKING(if we can increase the maximum select-able file descriptor)\nAC_RUN_IFELSE(\n[AC_LANG_PROGRAM([\n#include <stdio.h>\n#include <sys/select.h>\n#include <sys/time.h>\n#include <sys/resource.h>\n#include <string.h>\n#include <errno.h>\n#include <stdlib.h>\n#include <sys/types.h>\n#include <sys/stat.h>\n#include <fcntl.h>\n#include <unistd.h>\n], [[\n\tstruct rlimit rlim = { FD_SETSIZE * 2, FD_SETSIZE * 2 };\n\tint fd0, fd1;\n\tstruct timeval tv = { 0, };\n\tstruct ast_fdset { long fds_bits[[1024]]; } fds = { { 0, } };\n\tif (setrlimit(RLIMIT_NOFILE, &rlim)) { exit(1); }\n\tif ((fd0 = open(\"/dev/null\", O_RDONLY)) < 0) { exit(1); }\n\tif (dup2(fd0, (fd1 = FD_SETSIZE + 1)) < 0) { exit(1); }\n\tFD_SET(fd0, (fd_set *) &fds);\n\tFD_SET(fd1, (fd_set *) &fds);\n\tif (select(FD_SETSIZE + 2, (fd_set *) &fds, NULL, NULL, &tv) < 0) { exit(1); }\n\texit(0)]])],\n\tAC_MSG_RESULT(yes)\n\tAC_DEFINE([HAVE_VARIABLE_FDSET], 1, [Define to 1 if your system can support larger than default select bitmasks.]),\n\tAC_MSG_RESULT(no),\n\tAC_MSG_RESULT(cross-compile)\n)\n\nif test \"${ac_cv_have_variable_fdset}x\" = \"0x\"; then\n\tAC_RUN_IFELSE(\n\t\t[AC_LANG_PROGRAM([\n#include <unistd.h>\n#include <sys/types.h>\n#include <stdlib.h>\n], [if (getuid() != 0) { exit(1); }])],\n\t\tAC_DEFINE([CONFIGURE_RAN_AS_ROOT], 1, [Some configure tests will unexpectedly fail if configure is run by a non-root user.  These may be able to be tested at runtime.]))\nfi\n\nAC_MSG_CHECKING([if we have usable eventfd support])\nAC_RUN_IFELSE(\n  [AC_LANG_PROGRAM([#include <sys/eventfd.h>],\n      [return eventfd(0, EFD_NONBLOCK | EFD_SEMAPHORE) == -1;])],\n  AC_MSG_RESULT(yes)\n  AC_DEFINE([HAVE_EVENTFD], 1, [Define to 1 if your system supports eventfd and the EFD_NONBLOCK and EFD_SEMAPHORE flags.]),\n  AC_MSG_RESULT(no),\n  AC_MSG_RESULT(cross-compile)\n)\n\nAST_GCC_ATTRIBUTE(pure)\nAST_GCC_ATTRIBUTE(malloc)\nAST_GCC_ATTRIBUTE(const)\nAST_GCC_ATTRIBUTE(unused)\nAST_GCC_ATTRIBUTE(always_inline)\nAST_GCC_ATTRIBUTE(deprecated)\nAST_GCC_ATTRIBUTE(sentinel)\nAST_GCC_ATTRIBUTE(warn_unused_result)\nAST_GCC_ATTRIBUTE(may_alias)\nAST_GCC_ATTRIBUTE(constructor)\nif test \"$ax_cv_have_func_attribute_constructor\" != \"1\"; then\n\tAC_MSG_ERROR([*** Function constructor attribute is not supported by your compiler.])\nfi\n\nAST_GCC_ATTRIBUTE(destructor)\nif test \"$ax_cv_have_func_attribute_destructor\" != \"1\"; then\n\tAC_MSG_ERROR([*** Function destructor attribute is not supported by your compiler.])\nfi\nAST_GCC_ATTRIBUTE(noreturn,noreturn)\n\nAC_MSG_CHECKING(for -fsanitize=address support)\nsaved_sanitize_CFLAGS=\"${CFLAGS}\"\nsaved_sanitize_LDFLAGS=\"${LDFLAGS}\"\nCFLAGS=\"-fsanitize=address -fno-omit-frame-pointer\"\nLDFLAGS=\"-fsanitize=address\"\nAC_COMPILE_IFELSE(\n\t[AC_LANG_PROGRAM([], [int x = 1;])],\n\tAC_MSG_RESULT(yes)\n\t[AST_ADDRESS_SANITIZER=1],\n\t[AST_ADDRESS_SANITIZER=0]\n\tAC_MSG_RESULT(no)\n)\nCFLAGS=\"${saved_sanitize_CFLAGS}\"\nLDFLAGS=\"${saved_sanitize_LDFLAGS}\"\nAC_SUBST(AST_ADDRESS_SANITIZER)\n\nAC_MSG_CHECKING(for -fsanitize=thread support)\nsaved_sanitize_CFLAGS=\"${CFLAGS}\"\nsaved_sanitize_LDFLAGS=\"${LDFLAGS}\"\nCFLAGS=\"-fno-omit-frame-pointer -pie -fPIE -fsanitize=thread\"\nLDFLAGS=\"-fsanitize=thread -pie -fPIE\"\nAC_COMPILE_IFELSE(\n\t[AC_LANG_PROGRAM([], [int x = 1;])],\n\tAC_MSG_RESULT(yes)\n\t[AST_THREAD_SANITIZER=1],\n\t[AST_THREAD_SANITIZER=0]\n\tAC_MSG_RESULT(no)\n)\nCFLAGS=\"${saved_sanitize_CFLAGS}\"\nLDFLAGS=\"${saved_sanitize_LDFLAGS}\"\nAC_SUBST(AST_THREAD_SANITIZER)\n\nAC_MSG_CHECKING(for -fsanitize=leak support)\nsaved_sanitize_CFLAGS=\"${CFLAGS}\"\nsaved_sanitize_LDFLAGS=\"${LDFLAGS}\"\nCFLAGS=\"-fno-omit-frame-pointer -fsanitize=leak\"\nLDFLAGS=\"-fsanitize=leak\"\nAC_COMPILE_IFELSE(\n\t[AC_LANG_PROGRAM([], [int x = 1;])],\n\tAC_MSG_RESULT(yes)\n\t[AST_LEAK_SANITIZER=1],\n\t[AST_LEAK_SANITIZER=0]\n\tAC_MSG_RESULT(no)\n)\nCFLAGS=\"${saved_sanitize_CFLAGS}\"\nLDFLAGS=\"${saved_sanitize_LDFLAGS}\"\nAC_SUBST(AST_LEAK_SANITIZER)\n\nAC_MSG_CHECKING(for -fsanitize=undefined support)\nsaved_sanitize_CFLAGS=\"${CFLAGS}\"\nsaved_sanitize_LDFLAGS=\"${LDFLAGS}\"\nCFLAGS=\"-fno-omit-frame-pointer -fsanitize=undefined\"\nLDFLAGS=\"-fsanitize=undefined\"\nAC_COMPILE_IFELSE(\n\t[AC_LANG_PROGRAM([], [int x = 1;])],\n\tAC_MSG_RESULT(yes)\n\t[AST_UNDEFINED_SANITIZER=1],\n\t[AST_UNDEFINED_SANITIZER=0]\n\tAC_MSG_RESULT(no)\n)\nCFLAGS=\"${saved_sanitize_CFLAGS}\"\nLDFLAGS=\"${saved_sanitize_LDFLAGS}\"\nAC_SUBST(AST_UNDEFINED_SANITIZER)\n\nAC_MSG_CHECKING(for -Wdeclaration-after-statement support)\nif $(${CC} -Wdeclaration-after-statement -Werror -S -o /dev/null -xc /dev/null > /dev/null 2>&1); then\n\tAC_MSG_RESULT(yes)\n\tAST_DECLARATION_AFTER_STATEMENT=-Wdeclaration-after-statement\nelse\n\tAC_MSG_RESULT(no)\n\tAST_DECLARATION_AFTER_STATEMENT=\nfi\nAC_SUBST(AST_DECLARATION_AFTER_STATEMENT)\n\nAC_MSG_CHECKING(for -Wtrampolines support)\nif $(${CC} -Wtrampolines -Werror -S -o /dev/null -xc /dev/null > /dev/null 2>&1); then\n\tAC_MSG_RESULT(yes)\n\tAST_TRAMPOLINES=-Wtrampolines\nelse\n\tAC_MSG_RESULT(no)\n\tAST_TRAMPOLINES=\nfi\nAC_SUBST(AST_TRAMPOLINES)\n\nAC_MSG_CHECKING(for _FORTIFY_SOURCE support)\nif $(${CC} -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2 -S -o /dev/null -xc /dev/null > /dev/null 2>&1); then\n\tAC_MSG_RESULT(yes)\n\tAST_FORTIFY_SOURCE=\"-U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2\"\nelse\n\tAC_MSG_RESULT(no)\n\tAST_FORTIFY_SOURCE=\nfi\nAC_SUBST(AST_FORTIFY_SOURCE)\n\nAC_MSG_CHECKING(for -fno-strict-overflow)\nif $(${CC} -O2 -fno-strict-overflow -S -o /dev/null -xc /dev/null > /dev/null 2>&1); then\n\tAC_MSG_RESULT(yes)\n\tAST_NO_STRICT_OVERFLOW=-fno-strict-overflow\nelse\n\tAC_MSG_RESULT(no)\n\tAST_NO_STRICT_OVERFLOW=\nfi\nAC_SUBST(AST_NO_STRICT_OVERFLOW)\n\nAC_MSG_CHECKING(for -Wno-format-truncation)\nif $(${CC} -Wno-format-truncation -Werror -S -o /dev/null -xc /dev/null > /dev/null 2>&1); then\n\tAC_MSG_RESULT(yes)\n\tAST_NO_FORMAT_TRUNCATION=-Wno-format-truncation\nelse\n\tAC_MSG_RESULT(no)\n\tAST_NO_FORMAT_TRUNCATION=\nfi\nAC_SUBST(AST_NO_FORMAT_TRUNCATION)\n\nAC_MSG_CHECKING(for -Wno-format-y2k)\nif $(${CC} -Wno-format-y2k -Werror -S -o /dev/null -xc /dev/null > /dev/null 2>&1); then\n\tAC_MSG_RESULT(yes)\n\tAST_NO_FORMAT_Y2K=-Wno-format-y2k\nelse\n\tAC_MSG_RESULT(no)\n\tAST_NO_FORMAT_Y2K=\nfi\nAC_SUBST(AST_NO_FORMAT_Y2K)\n\nAC_MSG_CHECKING(for -Wno-stringop-truncation)\nif $(${CC} -Wno-stringop-truncation -Werror -S -o /dev/null -xc /dev/null > /dev/null 2>&1); then\n\tAC_MSG_RESULT(yes)\n\tAST_NO_STRINGOP_TRUNCATION=-Wno-stringop-truncation\nelse\n\tAC_MSG_RESULT(no)\n\tAST_NO_STRINGOP_TRUNCATION=\nfi\nAC_SUBST(AST_NO_STRINGOP_TRUNCATION)\n\nAC_MSG_CHECKING(for -Wshadow)\nif $(${CC} -Wshadow -Werror -S -o /dev/null -xc /dev/null > /dev/null 2>&1); then\n\tAC_MSG_RESULT(yes)\n\tAST_SHADOW_WARNINGS=-Wshadow\nelse\n\tAC_MSG_RESULT(no)\n\tAST_SHADOW_WARNINGS=\nfi\nAC_SUBST(AST_SHADOW_WARNINGS)\n\nAC_MSG_CHECKING(for -march=native support)\nif $(${CC} -march=native -S -o /dev/null -xc /dev/null > /dev/null 2>&1); then\n\tAC_MSG_RESULT(yes)\n\tAST_NATIVE_ARCH=1\nelse\n\tAC_MSG_RESULT(no)\n\tAST_NATIVE_ARCH=0\nfi\nAC_SUBST(AST_NATIVE_ARCH)\n\n\ndnl Check to see if rpath should be set in LDFLAGS\nAC_ARG_ENABLE(rpath,\n\t[AS_HELP_STRING([--disable-rpath],\n\t\t\t[Disables rpath linker option checking])],\n\t[case \"${enableval}\" in\n\t\ty|ye|yes) check_rpath=yes ;;\n\t\tn|no) check_rpath=no ;;\n                *) AC_MSG_ERROR(bad value ${enableval} for --disable-rpath) ;;\n\tesac], [check_rpath=yes])\n\nAC_MSG_CHECKING(whether to use rpath)\nAST_RPATH=\nif test \"${OSARCH}\" = \"NetBSD\"; then\n\tAST_RPATH=\"-Wl,-rpath,/usr/pkg/lib\"\nfi\nif test \"${check_rpath}\" != yes; then\n\tAC_MSG_RESULT(skipped)\nelif test \"${prefix}\" = /usr || test \"${prefix}\" = NONE; then\n\tAC_MSG_RESULT(not needed)\nelse\n\tAST_RPATH=\"-Wl,-rpath,${libdir}\"\nfi\nAC_SUBST(AST_RPATH)\n\nAC_MSG_CHECKING(for sysinfo)\nAC_LINK_IFELSE(\n        [AC_LANG_PROGRAM([#include <sys/sysinfo.h>],\n                        [struct sysinfo sys_info; int uptime = sys_info.uptime])],\n        AC_MSG_RESULT(yes)\n        AC_DEFINE([HAVE_SYSINFO], 1, [Define to 1 if your system has sysinfo support]),\n        AC_MSG_RESULT(no)\n)\n\nAC_SEARCH_LIBS(res_9_ninit, resolv)\nAC_MSG_CHECKING(for res_ninit)\nAC_LINK_IFELSE(\n\t[AC_LANG_PROGRAM([\n\t\t\t#ifdef HAVE_SYS_SOCKET_H\n\t\t\t#include <sys/socket.h>\n\t\t\t#endif\n\t\t\t#ifdef HAVE_NETINET_IN_H\n\t\t\t#include <netinet/in.h>\n\t\t\t#endif\n\t\t\t#ifdef HAVE_ARPA_NAMESER_H\n\t\t\t#include <arpa/nameser.h>\n\t\t\t#endif\n\t\t\t#include <resolv.h>],\n\t\t\t[\n\t\t\t\tint foo;\n\t\t\t\tfoo = res_ninit(NULL);\n\t\t\t\tfoo = res_nsearch(NULL, NULL, 0, 0, NULL, 0);\n\t\t\t])],\n\tAC_MSG_RESULT(yes)\n\tAC_DEFINE([HAVE_RES_NINIT], 1, [Define to 1 if your system has the re-entrant resolver functions.])\n\tAC_SEARCH_LIBS(res_9_ndestroy, resolv)\n\tAC_MSG_CHECKING(for res_ndestroy)\n\tAC_LINK_IFELSE(\n\t\t[AC_LANG_PROGRAM([\n\t\t\t\t#ifdef HAVE_SYS_SOCKET_H\n\t\t\t\t#include <sys/socket.h>\n\t\t\t\t#endif\n\t\t\t\t#ifdef HAVE_NETINET_IN_H\n\t\t\t\t#include <netinet/in.h>\n\t\t\t\t#endif\n\t\t\t\t#ifdef HAVE_ARPA_NAMESER_H\n\t\t\t\t#include <arpa/nameser.h>\n\t\t\t\t#endif\n\t\t\t\t#include <resolv.h>],\n\t\t\t\t[res_ndestroy(NULL);])],\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE([HAVE_RES_NDESTROY], 1, [Define to 1 if your system has the ndestroy resolver function.]),\n\t\tAC_MSG_RESULT(no)\n\t)\n\tAC_SEARCH_LIBS(res_9_close, resolv)\n\tAC_MSG_CHECKING(for res_close)\n\tAC_LINK_IFELSE(\n\t\t[AC_LANG_PROGRAM([\n\t\t\t\t#ifdef HAVE_SYS_SOCKET_H\n\t\t\t\t#include <sys/socket.h>\n\t\t\t\t#endif\n\t\t\t\t#ifdef HAVE_NETINET_IN_H\n\t\t\t\t#include <netinet/in.h>\n\t\t\t\t#endif\n\t\t\t\t#ifdef HAVE_ARPA_NAMESER_H\n\t\t\t\t#include <arpa/nameser.h>\n\t\t\t\t#endif\n\t\t\t\t#include <resolv.h>],\n\t\t\t\t[res_close();])],\n\t\tAC_MSG_RESULT(yes)\n\t\tAC_DEFINE([HAVE_RES_CLOSE], 1, [Define to 1 if your system has the close resolver function.]),\n\t\tAC_MSG_RESULT(no)\n\t)\n\tAC_CHECK_MEMBERS([struct __res_state._u._ext.nsaddrs], [], [], [[#include <resolv.h>]]),\n\tAC_MSG_RESULT(no)\n)\n\nAC_MSG_CHECKING(for BIND_8_COMPAT required)\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n[[\n#undef BIND_8_COMPAT\n#include <arpa/nameser.h>\n]],\n[[int x = NXDOMAIN]])],\nAC_MSG_RESULT(no),\nAC_MSG_RESULT(yes)\n[BIND8_CFLAGS=-DBIND_8_COMPAT])\nAC_SUBST(BIND8_CFLAGS)\n\nAST_C_DEFINE_CHECK([GLOB_NOMAGIC], [GLOB_NOMAGIC], [glob.h])\n\nAST_C_DEFINE_CHECK([GLOB_BRACE], [GLOB_BRACE], [glob.h])\n\nAST_C_DEFINE_CHECK([RTLD_NOLOAD], [RTLD_NOLOAD], [dlfcn.h])\n\nAST_C_DEFINE_CHECK([IP_MTU_DISCOVER], [IP_MTU_DISCOVER], [netinet/in.h])\n\nAC_CHECK_SIZEOF([int])\nAC_CHECK_SIZEOF([long])\nAC_CHECK_SIZEOF([long long])\nAC_CHECK_SIZEOF([char *])\nAC_CHECK_SIZEOF(long)\nAC_CHECK_SIZEOF(long long)\nAC_COMPUTE_INT([ac_cv_sizeof_fd_set_fds_bits], [sizeof(foo.fds_bits[[0]])], [$ac_includes_default\nfd_set foo;])\n# This doesn't actually work; what it does is to use the variable set in the\n# previous test as a cached value to set the right output variables.\nAC_CHECK_SIZEOF(fd_set.fds_bits)\n\n# Set a type compatible with the previous.  We cannot just use a generic type\n# for these bits, because on big-endian systems, the bits won't match up\n# correctly if the size is wrong.\nif test $ac_cv_sizeof_int = $ac_cv_sizeof_fd_set_fds_bits; then\n  AC_DEFINE([TYPEOF_FD_SET_FDS_BITS], [int], [Define to a type of the same size as fd_set.fds_bits[[0]]])\nelif test $ac_cv_sizeof_long = $ac_cv_sizeof_fd_set_fds_bits; then\n  AC_DEFINE([TYPEOF_FD_SET_FDS_BITS], [long], [Define to a type of the same size as fd_set.fds_bits[[0]]])\nelif test $ac_cv_sizeof_long_long = $ac_cv_sizeof_fd_set_fds_bits; then\n  AC_DEFINE([TYPEOF_FD_SET_FDS_BITS], [long long], [Define to a type of the same size as fd_set.fds_bits[[0]]])\nfi\n\nAC_MSG_CHECKING(for dladdr in dlfcn.h)\nPBX_DLADDR=0\nold_LIBS=${LIBS}\nLIBS=\"${LIBS} -ldl\"\nAC_LINK_IFELSE(\n\t[AC_LANG_PROGRAM([#define _GNU_SOURCE 1\n#include <dlfcn.h>],\n\t\t[dladdr((void *)0, (void *)0)]\n\t)],\n\tAC_MSG_RESULT(yes)\n\tPBX_DLADDR=1\n\tAC_SUBST([PBX_DLADDR])\n\tAC_DEFINE([HAVE_DLADDR], 1, [Define to 1 if your system has the dladdr() GNU extension]),\n\tAC_MSG_RESULT(no)\n)\nLIBS=${old_LIBS}\n\n# re-check without -ldl\n# Non-Linux platforms like FreeBSD and NetBSD do not need a library libdl.so.\nif test \"${PBX_DLADDR}\" = \"0\"; then\n\tAC_MSG_CHECKING(for dladdr in dlfcn.h without -ldl)\n\tAC_LINK_IFELSE(\n\t\t[AC_LANG_PROGRAM([#define _GNU_SOURCE 1\n#include <dlfcn.h>],\n\t\t\t[dladdr((void *)0, (void *)0)]\n\t\t)],\n\t\tAC_MSG_RESULT(yes)\n\t\tPBX_DLADDR=1\n\t\tAC_SUBST([PBX_DLADDR])\n\t\tAC_DEFINE([HAVE_DLADDR], 1, [Define to 1 if your system has the dladdr() GNU extension]),\n\t\tAC_MSG_RESULT(no)\n\t)\nfi\n\n\n# do the package library checks now\n\nAST_EXT_LIB_CHECK([BFD], [bfd], [bfd_openr], [bfd.h])\n# Fedora/RedHat/CentOS require extra libraries\nAST_EXT_LIB_CHECK([BFD], [bfd], [bfd_openr], [bfd.h], [-ldl -liberty])\n# openSUSE requires -lz\nAST_EXT_LIB_CHECK([BFD], [bfd], [bfd_openr], [bfd.h], [-ldl -liberty -lz])\n\ncase \"${OSARCH}\" in\nlinux*)\n  AST_EXT_LIB_CHECK([CAP], [cap], [cap_from_text], [sys/capability.h])\n  ;;\nesac\n\nAST_C_DEFINE_CHECK([DAHDI], [DAHDI_RESET_COUNTERS], [dahdi/user.h], [230])\nAST_C_DEFINE_CHECK([DAHDI], [DAHDI_DEFAULT_MTU_MRU], [dahdi/user.h], [220])\nAST_C_DEFINE_CHECK([DAHDI], [DAHDI_CODE], [dahdi/user.h], [200])\n\nAST_C_DEFINE_CHECK([DAHDI_HALF_FULL], [DAHDI_POLICY_HALF_FULL], [dahdi/user.h])\n\nAST_C_COMPILE_CHECK([DAHDI_LINEREVERSE_VMWI], [struct dahdi_vmwi_info booger], [dahdi/user.h], , [enhanced dahdi vmwi support])\n\nAST_C_COMPILE_CHECK([DAHDI_ECHOCANCEL_FAX_MODE], [int foo = DAHDI_ECHOCANCEL_FAX_MODE], [dahdi/user.h])\n\nAST_C_COMPILE_CHECK([GETIFADDRS], [struct ifaddrs *p; getifaddrs(&p)], [ifaddrs.h], , [getifaddrs() support])\nAST_C_COMPILE_CHECK([TIMERFD], [timerfd_create(0,0); timerfd_settime(0,0,NULL,NULL);], [sys/timerfd.h], , [timerfd support])\n\nGSM_INTERNAL=\"yes\"\nAC_SUBST(GSM_INTERNAL)\nGSM_SYSTEM=\"yes\"\nif test \"${USE_GSM}\" != \"no\"; then\n   if test \"${GSM_DIR}\" = \"internal\"; then\n      GSM_SYSTEM=\"no\"\n   elif test \"${GSM_DIR}\" != \"\"; then\n      GSM_INTERNAL=\"no\"\n   fi\n   if test \"${GSM_SYSTEM}\" = \"yes\"; then\n      gsmlibdir=\"\"\n      if test \"x${GSM_DIR}\" != \"x\"; then\n         if test -d ${GSM_DIR}/lib; then\n            gsmlibdir=\"-L${GSM_DIR}/lib\"\n         else\n            gsmlibdir=\"-L${GSM_DIR}\"\n         fi\n      fi\n      AC_CHECK_LIB([gsm], [gsm_create], AC_DEFINE_UNQUOTED([HAVE_GSM], 1,\n      [Define to indicate the GSM library]), [], ${gsmlibdir})\n      if test \"${ac_cv_lib_gsm_gsm_create}\" = \"yes\"; then\n         if test \"x${GSM_DIR}\" != \"x\" ; then\n            AC_CHECK_HEADER([${GSM_DIR}/include/gsm.h], [GSM_HEADER_FOUND=1], [GSM_HEADER_FOUND=0])\n            AC_CHECK_HEADER([${GSM_DIR}/include/gsm/gsm.h], [GSM_GSM_HEADER_FOUND=1], [GSM_GSM_HEADER_FOUND=0])\n         else\n            AC_CHECK_HEADER([gsm.h], [GSM_HEADER_FOUND=1], [GSM_HEADER_FOUND=0])\n            AC_CHECK_HEADER([gsm/gsm.h], [GSM_GSM_HEADER_FOUND=1], [GSM_GSM_HEADER_FOUND=0])\n         fi\n         if test \"${GSM_HEADER_FOUND}\" = \"0\" ; then\n            if test \"{GSM_GSM_HEADER_FOUND}\" = \"0\" ; then\n               if test \"x${GSM_MANDATORY}\" = \"xyes\" ; then\n                  AC_MSG_NOTICE([***])\n                  AC_MSG_NOTICE([*** It appears that you do not have the gsm development package installed.])\n                  AC_MSG_NOTICE([*** Please install it to include ${GSM_DESCRIP} support, or re-run configure])\n                  AC_MSG_NOTICE([*** without explicitly specifying --with-${GSM_OPTION}])\n                  exit 1\n               fi\n            fi\n         fi\n         GSM_OK=0\n         if test \"${GSM_HEADER_FOUND}\" = \"1\" ; then\n            AC_DEFINE_UNQUOTED([HAVE_GSM_HEADER], 1, [Define to indicate that gsm.h has no prefix for its location])\n            GSM_OK=1\n         elif test \"${GSM_GSM_HEADER_FOUND}\" = \"1\" ; then\n            AC_DEFINE_UNQUOTED([HAVE_GSM_GSM_HEADER], 1, [Define to indicate that gsm.h is in gsm/gsm.h])\n            GSM_OK=1\n         fi\n         if test \"${GSM_OK}\" = \"1\" ; then\n            GSM_LIB=\"-lgsm\"\n            if test \"x${GSM_DIR}\" != \"x\"; then\n               GSM_LIB=\"${gsmlibdir} ${GSM_LIB}\"\n               GSM_INCLUDE=\"-I${GSM_DIR}/include\"\n            fi\n            PBX_GSM=1\n            GSM_INTERNAL=\"no\"\n         fi\n      fi\n   fi\n   if test \"${GSM_INTERNAL}\" = \"yes\"; then\n      PBX_GSM=1\n      AC_DEFINE_UNQUOTED([HAVE_GSM_HEADER], 1, [Define to indicate that gsm.h has no prefix for its location])\n   fi\nfi\n\nILBC_INTERNAL=\"yes\"\nAC_SUBST(ILBC_INTERNAL)\nILBC_SYSTEM=\"yes\"\nif test \"${USE_ILBC}\" != \"no\"; then\n   if test \"${ILBC_DIR}\" = \"internal\"; then\n      ILBC_SYSTEM=\"no\"\n   elif test \"${ILBC_DIR}\" != \"\"; then\n      ILBC_INTERNAL=\"no\"\n   fi\n   if test \"${ILBC_SYSTEM}\" = \"yes\"; then\n      AST_PKG_CONFIG_CHECK(ILBC, libilbc < 3)\n      if test \"$PBX_ILBC\" = \"1\"; then\n\t ILBC_INTERNAL=\"no\"\n      fi\n   fi\n   if test \"${ILBC_INTERNAL}\" = \"yes\"; then\n      PBX_ILBC=1\n   fi\nfi\n\nAST_EXT_LIB_CHECK([ICONV], [iconv], [iconv_open], [iconv.h])\n# GNU libiconv #define's iconv_open to libiconv_open, so we need to search for that symbol\nAST_EXT_LIB_CHECK([ICONV], [iconv], [libiconv_open], [iconv.h])\n# Some versions of Linux package iconv in glibc\nAST_EXT_LIB_CHECK([ICONV], [c], [iconv_close], [iconv.h])\n\n# If ical.h is NOT in the libical directory, then it is of a version insufficient for us.\nAST_EXT_LIB_CHECK([ICAL], [ical], [icaltimezone_get_utc_timezone], [libical/ical.h], [${PTHREAD_LIBS}], [${PTHREAD_CFLAGS}])\n\nAST_EXT_LIB_CHECK([IKSEMEL], [iksemel], [iks_start_sasl], [iksemel.h])\n\nif test \"${USE_IMAP_TK}\" != \"no\"; then\n\tsaved_cppflags=\"${CPPFLAGS}\"\n\tsaved_libs=\"${LIBS}\"\n\tswitch_to_system_on_failure=\"no\"\n\tif test \"${IMAP_TK_DIR}\" = \"\"; then\n\t\tIMAP_TK_DIR=\"`pwd`/../imap-2004g\"\n\t\tswitch_to_system_on_failure=\"yes\"\n\tfi\n\tif test \"${IMAP_TK_DIR}\" != \"system\"; then\n\t\tAC_MSG_CHECKING(for UW IMAP Toolkit c-client library)\n\t\tif test -f \"${IMAP_TK_DIR}/c-client/LDFLAGS\"; then\n      \t\timap_ldflags=`cat ${IMAP_TK_DIR}/c-client/LDFLAGS`\n\t\tfi\n\t\timap_libs=\"${IMAP_TK_DIR}/c-client/c-client.a\"\n\t  \timap_include=\"-I${IMAP_TK_DIR}/c-client\"\n      \tCPPFLAGS=\"${CPPFLAGS} ${imap_include}\"\n\t  \tLIBS=\"${LIBS} ${imap_libs} \"`echo ${imap_ldflags}`\n\t  \tAC_LINK_IFELSE(\n\t    \t[AC_LANG_PROGRAM(\n\t\t\t\t[#include \"c-client.h\"\n\t\t\t\tvoid mm_searched (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tvoid mm_exists (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tvoid mm_expunged (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tvoid mm_flags (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tvoid mm_notify (MAILSTREAM *stream,char *string,long errflg)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tvoid mm_list (MAILSTREAM *stream,int delimiter,char *mailbox,long attributes)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tvoid mm_lsub (MAILSTREAM *stream,int delimiter,char *mailbox,long attributes)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tvoid mm_status (MAILSTREAM *stream,char *mailbox,MAILSTATUS *status)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tvoid mm_log (char *string,long errflg)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tvoid mm_dlog (char *string)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tvoid mm_login (NETMBX *mb,char *user,char *pwd,long trial)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tvoid mm_critical (MAILSTREAM *stream)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tvoid mm_nocritical (MAILSTREAM *stream)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tlong mm_diskerror (MAILSTREAM *stream,long errcode,long serious)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tvoid mm_fatal (char *string)\n\t\t\t\t{\n\t\t\t\t}],\n\t\t\t\t[\n\t\t\t\tMAILSTREAM *foo = mail_open(NULL, \"\", 0);\n\t\t\t\t]\n\t\t\t)],\n\t\t\t[ac_cv_imap_tk=\"yes\"],\n\t\t\t[ac_cv_imap_tk=\"no\"]\n\t   \t)\n\t\tif test \"${ac_cv_imap_tk}\" = \"yes\"; then\n\t\t\tAC_LINK_IFELSE(\n\t\t\t\t[AC_LANG_PROGRAM(\n\t\t\t\t\t[#include \"c-client.h\"\n\t\t\t\t\tvoid mm_searched (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_exists (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_expunged (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_flags (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_notify (MAILSTREAM *stream,char *string,long errflg)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_list (MAILSTREAM *stream,int delimiter,char *mailbox,long attributes)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_lsub (MAILSTREAM *stream,int delimiter,char *mailbox,long attributes)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_status (MAILSTREAM *stream,char *mailbox,MAILSTATUS *status)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_log (char *string,long errflg)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_dlog (char *string)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_login (NETMBX *mb,char *user,char *pwd,long trial)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_critical (MAILSTREAM *stream)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_nocritical (MAILSTREAM *stream)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tlong mm_diskerror (MAILSTREAM *stream,long errcode,long serious)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_fatal (char *string)\n\t\t\t\t\t{\n\t\t\t\t\t}],\n\t\t\t\t\t[\n\t\t\t\t\tlong check = mail_expunge_full(NULL, \"\", 0);\n\t\t\t\t\t]\n\t\t\t\t)],\n\t\t\t\t[ac_cv_imap_tk2006=\"yes\"],\n\t\t\t\t[ac_cv_imap_tk2006=\"no\"]\n\t\t\t)\n\t\tfi\n\t\tCPPFLAGS=\"${saved_cppflags}\"\n\t\tLIBS=\"${saved_libs}\"\n\t\tif test \"${ac_cv_imap_tk}\" = \"no\"; then\n\t\t\tAC_MSG_RESULT(no)\n\t\t\tif test \"${switch_to_system_on_failure}\" = \"yes\"; then\n\t\t\t\tIMAP_TK_DIR=\"system\"\n\t\t\telse #This means they specified a directory. Search for a package installation there too\n\t\t\t\tAC_MSG_CHECKING([for system c-client library...])\n\t\t\t\tCPPFLAGS=\"${saved_cppflags}\"\n\t\t\t\tLIBS=\"${saved_libs}\"\n\t\t\t\timap_include=\"-I${IMAP_TK_DIR}/include\"\n\t\t\t\timap_ldflags=\"-L${IMAP_TK_DIR}/lib\"\n\t\t\t\timap_libs=\"-lc-client\"\n\t\t\t\tCPPFLAGS=\"${CPPFLAGS} ${imap_include}\"\n\t\t\t\tLIBS=\"${LIBS} ${imap_libs} ${imap_ldflags}\"\n\t\t\t\tAC_LINK_IFELSE(\n\t    \t\t\t[AC_LANG_PROGRAM(\n\t\t\t\t\t\t[#include \"c-client.h\"\n\t\t\t\t\t\tvoid mm_searched (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_exists (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_expunged (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_flags (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_notify (MAILSTREAM *stream,char *string,long errflg)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_list (MAILSTREAM *stream,int delimiter,char *mailbox,long attributes)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_lsub (MAILSTREAM *stream,int delimiter,char *mailbox,long attributes)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_status (MAILSTREAM *stream,char *mailbox,MAILSTATUS *status)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_log (char *string,long errflg)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_dlog (char *string)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_login (NETMBX *mb,char *user,char *pwd,long trial)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_critical (MAILSTREAM *stream)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_nocritical (MAILSTREAM *stream)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlong mm_diskerror (MAILSTREAM *stream,long errcode,long serious)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_fatal (char *string)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}],\n\t\t\t\t\t\t[\n\t\t\t\t\t\tMAILSTREAM *foo = mail_open(NULL, \"\", 0);\n\t\t\t\t\t\t]\n\t\t\t\t\t)],\n\t\t\t\t\t[ac_cv_imap_tk=\"yes\"],\n\t\t\t\t\t[ac_cv_imap_tk=\"no\"]\n\t   \t\t\t)\n\t\t\t\tif test \"${ac_cv_imap_tk}\" = \"yes\"; then\n\t\t\t\t\tAC_LINK_IFELSE(\n\t\t\t\t\t\t[AC_LANG_PROGRAM(\n\t\t\t\t\t\t\t[#include \"c-client.h\"\n\t\t\t\t\t\t\tvoid mm_searched (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvoid mm_exists (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvoid mm_expunged (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvoid mm_flags (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvoid mm_notify (MAILSTREAM *stream,char *string,long errflg)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvoid mm_list (MAILSTREAM *stream,int delimiter,char *mailbox,long attributes)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvoid mm_lsub (MAILSTREAM *stream,int delimiter,char *mailbox,long attributes)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvoid mm_status (MAILSTREAM *stream,char *mailbox,MAILSTATUS *status)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvoid mm_log (char *string,long errflg)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvoid mm_dlog (char *string)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvoid mm_login (NETMBX *mb,char *user,char *pwd,long trial)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvoid mm_critical (MAILSTREAM *stream)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvoid mm_nocritical (MAILSTREAM *stream)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlong mm_diskerror (MAILSTREAM *stream,long errcode,long serious)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvoid mm_fatal (char *string)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t}],\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\tlong check = mail_expunge_full(NULL, \"\", 0);\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t)],\n\t\t\t\t\t\t[ac_cv_imap_tk2006=\"yes\"],\n\t\t\t\t\t\t[ac_cv_imap_tk2006=\"no\"]\n\t\t\t\t\t)\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\tfi\n\tif test \"${IMAP_TK_DIR}\" = \"system\"; then\n\t\t#We will enter here if user specified \"system\" or if any of above checks failed\n\t\tAC_MSG_CHECKING([for system c-client library...])\n\t\tCPPFLAGS=\"${saved_cppflags}\"\n\t\tLIBS=\"${saved_libs}\"\n\t\timap_ldflags=\"\"\n\t\timap_libs=\"-lcrypto -lssl -lc-client\"\n\t\timap_include=\"-DUSE_SYSTEM_IMAP\" #Try the imap directory first\n\t\tCPPFLAGS=\"${CPPFLAGS} ${imap_include}\"\n\t\tLIBS=\"${LIBS} ${imap_libs} \"`echo ${imap_ldflags}`\n\t\tAC_LINK_IFELSE(\n\t    \t[AC_LANG_PROGRAM(\n\t\t\t\t[#include <stdio.h>\n\t\t\t\t#include <imap/c-client.h>\n\t\t\t\tvoid mm_searched (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tvoid mm_exists (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tvoid mm_expunged (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tvoid mm_flags (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tvoid mm_notify (MAILSTREAM *stream,char *string,long errflg)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tvoid mm_list (MAILSTREAM *stream,int delimiter,char *mailbox,long attributes)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tvoid mm_lsub (MAILSTREAM *stream,int delimiter,char *mailbox,long attributes)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tvoid mm_status (MAILSTREAM *stream,char *mailbox,MAILSTATUS *status)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tvoid mm_log (char *string,long errflg)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tvoid mm_dlog (char *string)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tvoid mm_login (NETMBX *mb,char *user,char *pwd,long trial)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tvoid mm_critical (MAILSTREAM *stream)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tvoid mm_nocritical (MAILSTREAM *stream)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tlong mm_diskerror (MAILSTREAM *stream,long errcode,long serious)\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t\tvoid mm_fatal (char *string)\n\t\t\t\t{\n\t\t\t\t}],\n\t\t\t\t[\n\t\t\t\tMAILSTREAM *foo = mail_open(NULL, \"\", 0);\n\t\t\t\t]\n\t\t\t)],\n\t\t\t[ac_cv_imap_tk=\"yes\"],\n\t\t\t[ac_cv_imap_tk=\"no\"]\n\t   \t)\n\t\tif test \"${ac_cv_imap_tk}\" = \"yes\"; then\n\t\t\tAC_LINK_IFELSE(\n\t\t\t\t[AC_LANG_PROGRAM(\n\t\t\t\t\t[#include <stdio.h>\n\t\t\t\t\t#include <imap/c-client.h>\n\t\t\t\t\tvoid mm_searched (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_exists (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_expunged (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_flags (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_notify (MAILSTREAM *stream,char *string,long errflg)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_list (MAILSTREAM *stream,int delimiter,char *mailbox,long attributes)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_lsub (MAILSTREAM *stream,int delimiter,char *mailbox,long attributes)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_status (MAILSTREAM *stream,char *mailbox,MAILSTATUS *status)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_log (char *string,long errflg)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_dlog (char *string)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_login (NETMBX *mb,char *user,char *pwd,long trial)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_critical (MAILSTREAM *stream)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_nocritical (MAILSTREAM *stream)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tlong mm_diskerror (MAILSTREAM *stream,long errcode,long serious)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_fatal (char *string)\n\t\t\t\t\t{\n\t\t\t\t\t}],\n\t\t\t\t\t[\n\t\t\t\t\tlong check = mail_expunge_full(NULL, \"\", 0);\n\t\t\t\t\t]\n\t\t\t\t)],\n\t\t\t\t[ac_cv_imap_tk2006=\"yes\"],\n\t\t\t\t[ac_cv_imap_tk2006=\"no\"]\n\t\t\t)\n\t\telse #looking in imap directory didn't work, try c-client\n\t\t\timap_ldflags=\"\"\n\t\t\timap_libs=\"-lcrypto -lssl -lc-client\"\n\t\t\timap_include=\"-DUSE_SYSTEM_CCLIENT\"\n\t\t\tCPPFLAGS=\"${saved_cppflags}\"\n\t\t\tLIBS=\"${saved_libs}\"\n\t\t\tCPPFLAGS=\"${CPPFLAGS} ${imap_include}\"\n\t\t\tLIBS=\"${LIBS} ${imap_libs} \"`echo ${imap_ldflags}`\n\t\t\tAC_LINK_IFELSE(\n\t    \t\t[AC_LANG_PROGRAM(\n\t\t\t\t\t[#include <stdio.h>\n\t\t\t\t\t#include <c-client/c-client.h>\n\t\t\t\t\tvoid mm_searched (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_exists (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_expunged (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_flags (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_notify (MAILSTREAM *stream,char *string,long errflg)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_list (MAILSTREAM *stream,int delimiter,char *mailbox,long attributes)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_lsub (MAILSTREAM *stream,int delimiter,char *mailbox,long attributes)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_status (MAILSTREAM *stream,char *mailbox,MAILSTATUS *status)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_log (char *string,long errflg)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_dlog (char *string)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_login (NETMBX *mb,char *user,char *pwd,long trial)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_critical (MAILSTREAM *stream)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_nocritical (MAILSTREAM *stream)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tlong mm_diskerror (MAILSTREAM *stream,long errcode,long serious)\n\t\t\t\t\t{\n\t\t\t\t\t}\n\t\t\t\t\tvoid mm_fatal (char *string)\n\t\t\t\t\t{\n\t\t\t\t\t}],\n\t\t\t\t\t[\n\t\t\t\t\tMAILSTREAM *foo = mail_open(NULL, \"\", 0);\n\t\t\t\t\t]\n\t\t\t\t)],\n\t\t\t\t[ac_cv_imap_tk=\"yes\"],\n\t\t\t\t[ac_cv_imap_tk=\"no\"]\n\t   \t\t)\n\t\t\tif test \"${ac_cv_imap_tk}\" = \"no\"; then\n\t\t\t\timap_libs=\"-lcrypto -lssl -lc-client4\"\n\t\t\t\tLIBS=\"${saved_libs} ${imap_libs} \"`echo ${imap_ldflags}`\n\t\t\t\tAC_LINK_IFELSE(\n\t\t\t\t\t[AC_LANG_PROGRAM(\n\t\t\t\t\t\t[#include <stdio.h>\n\t\t\t\t\t\t#include <c-client/c-client.h>\n\t\t\t\t\t\tvoid mm_searched (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_exists (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_expunged (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_flags (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_notify (MAILSTREAM *stream,char *string,long errflg)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_list (MAILSTREAM *stream,int delimiter,char *mailbox,long attributes)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_lsub (MAILSTREAM *stream,int delimiter,char *mailbox,long attributes)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_status (MAILSTREAM *stream,char *mailbox,MAILSTATUS *status)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_log (char *string,long errflg)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_dlog (char *string)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_login (NETMBX *mb,char *user,char *pwd,long trial)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_critical (MAILSTREAM *stream)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_nocritical (MAILSTREAM *stream)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlong mm_diskerror (MAILSTREAM *stream,long errcode,long serious)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_fatal (char *string)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}],\n\t\t\t\t\t\t[\n\t\t\t\t\t\tMAILSTREAM *foo = mail_open(NULL, \"\", 0);\n\t\t\t\t\t\t]\n\t\t\t\t\t)],\n\t\t\t\t\t[ac_cv_imap_tk=\"yes\"],\n\t\t\t\t\t[ac_cv_imap_tk=\"no\"]\n\t\t\t\t)\n\t\t\tfi\n\t\t\tif test \"${ac_cv_imap_tk}\" = \"yes\"; then\n\t\t\t\tAC_LINK_IFELSE(\n\t\t\t\t\t[AC_LANG_PROGRAM(\n\t\t\t\t\t\t[#include <stdio.h>\n\t\t\t\t\t\t#include <c-client/c-client.h>\n\t\t\t\t\t\tvoid mm_searched (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_exists (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_expunged (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_flags (MAILSTREAM *stream,unsigned long number)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_notify (MAILSTREAM *stream,char *string,long errflg)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_list (MAILSTREAM *stream,int delimiter,char *mailbox,long attributes)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_lsub (MAILSTREAM *stream,int delimiter,char *mailbox,long attributes)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_status (MAILSTREAM *stream,char *mailbox,MAILSTATUS *status)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_log (char *string,long errflg)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_dlog (char *string)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_login (NETMBX *mb,char *user,char *pwd,long trial)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_critical (MAILSTREAM *stream)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_nocritical (MAILSTREAM *stream)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlong mm_diskerror (MAILSTREAM *stream,long errcode,long serious)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvoid mm_fatal (char *string)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t}],\n\t\t\t\t\t\t[\n\t\t\t\t\t\tlong check = mail_expunge_full(NULL, \"\", 0);\n\t\t\t\t\t\t]\n\t\t\t\t\t)],\n\t\t\t\t\t[ac_cv_imap_tk2006=\"yes\"],\n\t\t\t\t\t[ac_cv_imap_tk2006=\"no\"]\n\t\t\t\t)\n\t\t\tfi\n\t\tfi\n\tfi\n\tif test \"${ac_cv_imap_tk}\" = \"yes\"; then\n\t\tAC_MSG_RESULT(yes)\n\t\tIMAP_TK_LIB=\"${imap_libs} \"`echo ${imap_ldflags}`\n\t\tIMAP_TK_INCLUDE=\"${imap_include}\"\n\t\tPBX_IMAP_TK=1\n\t\tAC_DEFINE([HAVE_IMAP_TK], 1, [Define if your system has the UW IMAP Toolkit c-client library.])\n\t\tif test \"${ac_cv_imap_tk2006}\" = \"yes\"; then\n\t\t\tAC_DEFINE([HAVE_IMAP_TK2006], 1, [Define if your system has the UW IMAP Toolkit c-client library version 2006 or greater.])\n\t\tfi\n\telse\n\t\tAC_MSG_RESULT(no)\n\tfi\n\tCPPFLAGS=\"${saved_cppflags}\"\n\tLIBS=\"${saved_libs}\"\nfi\n\nAST_EXT_LIB_CHECK([IODBC], [iodbc], [SQLConnect], [sql.h], [${PTHREAD_LIBS}], [${PTHREAD_CFLAGS}])\n\nAST_EXT_LIB_CHECK([INOTIFY], [c], [inotify_init], [sys/inotify.h])\n\nAST_EXT_LIB_CHECK([JACK], [jack], [jack_activate], [jack/jack.h])\n\n# BSD (and OS X) equivalent of inotify\nAST_EXT_LIB_CHECK([KQUEUE], [c], [kqueue], [sys/event.h])\n\n# 64-bit version of kevent (from kqueue) on OS X\nAC_CHECK_FUNCS([kevent64])\n\nAST_EXT_LIB_CHECK([LDAP], [ldap], [ldap_initialize], [ldap.h])\n\nAST_EXT_TOOL_CHECK([MYSQLCLIENT], [mysql_config])\n\nif test \"${PBX_MYSQLCLIENT}\" = 1; then\n   AC_MSG_CHECKING(for MySQL client bool support)\n   AC_LINK_IFELSE(\n           [AC_LANG_PROGRAM([#include <mysql/mysql.h>],\n                   [bool test = 1;])],\n           AC_MSG_RESULT(yes)\n           AC_DEFINE(HAVE_MYSQLCLIENT_BOOL, 1, [Define to 1 if mysql/mysql.h has bool defined.]),\n           AC_MSG_RESULT(no)\n   )\n   AC_MSG_CHECKING(for MySQL client my_bool support)\n   AC_LINK_IFELSE(\n           [AC_LANG_PROGRAM([#include <mysql/mysql.h>],\n                   [my_bool test = 1;])],\n           AC_MSG_RESULT(yes)\n           AC_DEFINE(HAVE_MYSQLCLIENT_MY_BOOL, 1, [Define to 1 if mysql/mysql.h has my_bool defined.]),\n           AC_MSG_RESULT(no)\n   )\nfi\n\nAST_EXT_TOOL_CHECK([NEON], [neon-config])\n\nAST_EXT_TOOL_CHECK([NEON29], [neon-config], , [--libs],\n[#include <ne_auth.h>],\n[#ifndef NE_AUTH_NTLM\n#error Need libneon >= 0.29.0\n#endif])\n\nAST_PKG_CONFIG_CHECK(NETSNMP, netsnmp-agent)\nAST_EXT_TOOL_CHECK([NETSNMP], [net-snmp-config], , [--agent-libs],\n[#include <net-snmp/net-snmp-config.h>\n#include <net-snmp/net-snmp-includes.h>\n#include <net-snmp/agent/net-snmp-agent-includes.h>],\n[int callback = snmp_register_callback(0, 0, NULL, NULL)])\n\nAST_EXT_LIB_CHECK([NEWT], [newt], [newtBell], [newt.h])\n\n# Check that unbound is installed and the version code fragment compiles\nAST_EXT_LIB_EXTRA_CHECK([UNBOUND], [unbound], [ub_ctx_delete], [unbound.h],\n   [], [], [\n      AC_LANG_PROGRAM( [#include <unbound.h>],\n         [\n            #if (UNBOUND_VERSION_MAJOR < 1 || (UNBOUND_VERSION_MAJOR == 1 && UNBOUND_VERSION_MINOR < 5 ))\n            #error \"Unbound version must be >= 1.5\"\n            #endif\n         ]\n      )\n   ], [unbound version >= 1.5])\n\nAST_EXT_LIB_CHECK([UNIXODBC], [odbc], [SQLConnect], [sql.h])\n\nAST_EXT_LIB_CHECK([OGG], [ogg], [ogg_stream_init], [ogg/ogg.h])\n\n# Non-glibc platforms require libexecinfo for backtrace support\nAST_EXT_LIB_CHECK([BKTR], [execinfo], [backtrace], [execinfo.h])\n# Linux, however, has backtrace directly in glibc\nAST_EXT_LIB_CHECK([BKTR], [c], [backtrace], [execinfo.h])\n\nAST_EXT_LIB_CHECK([BLUETOOTH], [bluetooth], [ba2str], [bluetooth/bluetooth.h])\n\nAST_EXT_LIB_CHECK([BEANSTALK], [beanstalk], [bs_version], [beanstalk.h])\n\nPG_CONFIG=\":\"\nif test \"${USE_PGSQL}\" != \"no\"; then\n   if test \"x${PGSQL_DIR}\" != \"x\"; then\n      AC_PATH_TOOL([PG_CONFIG], [pg_config], :, [${PGSQL_DIR}/bin])\n      if test \"${PG_CONFIG}\" = \":\"; then\n         AC_MSG_NOTICE([***])\n         AC_MSG_NOTICE([*** pg_config was not found in the path you specified:])\n         AC_MSG_NOTICE([*** ${PGSQL_DIR}/bin])\n         AC_MSG_NOTICE([*** Either correct the installation, or run configure])\n         AC_MSG_NOTICE([*** including --without-postgres])\n         exit 1\n      fi\n   else\n      AC_PATH_TOOL([PG_CONFIG], [pg_config], :)\n   fi\nfi\nif test \"x${PG_CONFIG}\" != \"x:\"; then\n   PGSQL_libdir=`${PG_CONFIG} --libdir`\n   PGSQL_includedir=`${PG_CONFIG} --includedir`\n   if test \"x$?\" != \"x0\" ; then\n      if test -n \"${PGSQL_MANDATORY}\" ; then\n         AC_MSG_NOTICE([***])\n         AC_MSG_NOTICE([*** The PostgreSQL installation on this system appears to be broken.])\n         AC_MSG_NOTICE([*** Either correct the installation, or run configure])\n         AC_MSG_NOTICE([*** including --without-postgres])\n         exit 1\n\t  fi\n   else\n      AC_CHECK_LIB([pq], [PQescapeStringConn], AC_DEFINE_UNQUOTED([HAVE_PGSQL], 1,\n      [Define to indicate the PostgreSQL library]), [], -L${PGSQL_libdir} -lz)\n\n      AC_MSG_CHECKING(for pg_encoding_to_char within Postgres headers)\n      old_CFLAGS=${CFLAGS}\n      CFLAGS=\"${CFLAGS} -I${PGSQL_includedir} -Werror\"\n      old_LDFLAGS=${LDFLAGS}\n      LDFLAGS=\"${LDFLAGS} -L${PGSQL_libdir} -lpq -lz\"\n      AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <libpq-fe.h>],\n          [const char *foo = pg_encoding_to_char(1)])],\n        [AC_MSG_RESULT(yes)\n         AC_DEFINE_UNQUOTED([HAVE_PGSQL_pg_encoding_to_char], 1, [Define to indicate presence of the pg_encoding_to_char API.])],\n        [AC_MSG_RESULT(no)])\n      CFLAGS=${old_CFLAGS}\n      LDFLAGS=${old_LDFLAGS}\n\n      if test \"${ac_cv_lib_pq_PQescapeStringConn}\" = \"yes\"; then\n         PGSQL_LIB=\"-L${PGSQL_libdir} -lpq -lz\"\n         PGSQL_INCLUDE=\"-I${PGSQL_includedir}\"\n         PBX_PGSQL=1\n      elif test -n \"${PGSQL_MANDATORY}\";\n      then\n         AC_MSG_NOTICE([***])\n         AC_MSG_NOTICE([*** The PostgreSQL installation on this system appears to be broken.])\n         AC_MSG_NOTICE([*** Either correct the installation, or run configure])\n         AC_MSG_NOTICE([*** including --without-postgres])\n         exit 1\n      fi\n   fi\nfi\n\nif test \"$USE_PJPROJECT\" != \"no\" ; then\n   if test \"$PJPROJECT_BUNDLED\" = \"no\" ; then\n      AST_PKG_CONFIG_CHECK([PJPROJECT], [libpjproject])\n      if test \"x$PBX_PJPROJECT\" = \"x1\" ; then\n         AST_EXT_LIB_CHECK([PJSIP_DLG_CREATE_UAS_AND_INC_LOCK], [pjsip], [pjsip_dlg_create_uas_and_inc_lock], [pjsip.h], [$PJPROJECT_LIB], [$PJPROJECT_CFLAGS])\n         AST_EXT_LIB_CHECK([PJ_TRANSACTION_GRP_LOCK], [pjsip], [pjsip_tsx_create_uac2], [pjsip.h], [$PJPROJECT_LIB], [$PJPROJECT_CFLAGS])\n\n         saved_cppflags=\"${CPPFLAGS}\"\n         saved_libs=\"${LIBS}\"\n         CPPFLAGS=\"${CPPFLAGS} ${PJPROJECT_CFLAGS}\"\n         LIBS=\"${LIBS} ${PJPROJECT_LIB}\"\n         AST_C_COMPILE_CHECK([PJSIP_REPLACE_MEDIA_STREAM], [pjmedia_mod_offer_flag flag = PJMEDIA_SDP_NEG_ALLOW_MEDIA_CHANGE], [pjmedia.h])\n         LIBS=\"${saved_libs}\"\n         CPPFLAGS=\"${saved_cppflags}\"\n\n         AST_EXT_LIB_CHECK([PJSIP_GET_DEST_INFO], [pjsip], [pjsip_get_dest_info], [pjsip.h], [$PJPROJECT_LIB], [$PJPROJECT_CFLAGS])\n         AST_EXT_LIB_CHECK([PJ_SSL_CERT_LOAD_FROM_FILES2], [pj], [pj_ssl_cert_load_from_files2], [pjlib.h], [$PJPROJECT_LIB], [$PJPROJECT_CFLAGS])\n         AST_EXT_LIB_CHECK([PJSIP_EXTERNAL_RESOLVER], [pjsip], [pjsip_endpt_set_ext_resolver], [pjsip.h], [$PJPROJECT_LIB], [$PJPROJECT_CFLAGS])\n\n         saved_cppflags=\"${CPPFLAGS}\"\n         saved_libs=\"${LIBS}\"\n         CPPFLAGS=\"${CPPFLAGS} ${PJPROJECT_CFLAGS}\"\n         LIBS=\"${LIBS} ${PJPROJECT_LIB}\"\n         AST_C_COMPILE_CHECK([PJSIP_TLS_TRANSPORT_PROTO], [struct pjsip_tls_setting setting; int proto; proto = setting.proto;], [pjsip.h])\n         AST_C_COMPILE_CHECK([PJSIP_TLS_1_1], [enum pjsip_ssl_method method = PJSIP_TLSV1_1_METHOD;], [pjsip.h])\n         AST_C_COMPILE_CHECK([PJSIP_TLS_1_2], [enum pjsip_ssl_method method = PJSIP_TLSV1_2_METHOD;], [pjsip.h])\n         AST_C_COMPILE_CHECK([PJSIP_TLS_1_3], [enum pjsip_ssl_method method = PJSIP_TLSV1_3_METHOD;], [pjsip.h])\n         AST_C_COMPILE_CHECK([PJSIP_INV_ACCEPT_MULTIPLE_SDP_ANSWERS], [pjsip_cfg()->endpt.accept_multiple_sdp_answers = 0;], [pjsip.h])\n         AST_C_COMPILE_CHECK([PJSIP_ENDPOINT_COMPACT_FORM], [pjsip_cfg()->endpt.use_compact_form = PJ_TRUE;], [pjsip.h])\n         AST_C_COMPILE_CHECK([PJSIP_TRANSPORT_DISABLE_CONNECTION_REUSE], [struct pjsip_tpselector sel; sel.disable_connection_reuse = PJ_TRUE;], [pjsip.h])\n         AST_C_COMPILE_CHECK([PJSIP_OAUTH_AUTHENTICATION], [struct pjsip_oauth_credential credential;], [pjsip.h])\n         AC_MSG_CHECKING(for pjproject on_valid_pair callback)\n         AC_LINK_IFELSE(\n            [AC_LANG_PROGRAM(\n               [#include <pjsip.h>\n               #include <pjsip_ua.h>\n               #include <pjnath.h>\n               void on_valid_pair(pj_ice_sess *ice) {}\n               void on_ice_complete(pj_ice_sess *ice, pj_status_t status) {}\n               void on_rx_data(pj_ice_sess *ice, unsigned comp_id, unsigned transport_id, void *pkt, pj_size_t size, const pj_sockaddr_t *src_addr, unsigned src_addr_len) {}\n               pj_status_t on_tx_pkt(pj_ice_sess *ice, unsigned comp_id, unsigned transport_id, const void *pkt, pj_size_t size, const pj_sockaddr_t *dst_addr, unsigned dst_addr_len) {}],\n               [pj_ice_sess_cb ice_sess_cb = {\n                  .on_valid_pair = on_valid_pair,\n                  .on_ice_complete = on_ice_complete,\n                  .on_rx_data = on_rx_data,\n                  .on_tx_pkt = on_tx_pkt,\n               };])],\n            AC_MSG_RESULT(yes)\n            AC_DEFINE(HAVE_PJPROJECT_ON_VALID_ICE_PAIR_CALLBACK, 1, [Define to 1 if on_valid_pair callback is present.]),\n            AC_MSG_RESULT(no)\n         )\n         LIBS=\"${saved_libs}\"\n         CPPFLAGS=\"${saved_cppflags}\"\n\n         AST_EXT_LIB_CHECK([PJSIP_EVSUB_GRP_LOCK], [pjsip], [pjsip_evsub_add_ref], [pjsip.h], [$PJPROJECT_LIB], [$PJPROJECT_CFLAGS])\n         AST_EXT_LIB_CHECK([PJSIP_INV_SESSION_REF], [pjsip], [pjsip_inv_add_ref], [pjsip.h], [$PJPROJECT_LIB], [$PJPROJECT_CFLAGS])\n         AST_EXT_LIB_CHECK([PJSIP_AUTH_CLT_DEINIT], [pjsip], [pjsip_auth_clt_deinit], [pjsip.h], [$PJPROJECT_LIB], [$PJPROJECT_CFLAGS])\n         AST_EXT_LIB_CHECK([PJSIP_TSX_LAYER_FIND_TSX2], [pjsip], [pjsip_tsx_layer_find_tsx2], [pjsip.h], [$PJPROJECT_LIB], [$PJPROJECT_CFLAGS])\n         AST_EXT_LIB_CHECK([PJSIP_TLS_TRANSPORT_RESTART], [pjsip], [pjsip_tls_transport_restart], [pjsip.h], [$PJPROJECT_LIB], [$PJPROJECT_CFLAGS])\n         AST_EXT_LIB_CHECK([PJSIP_AUTH_NEW_DIGESTS], [pjsip], [pjsip_auth_get_algorithm_by_type], [pjsip.h], [$PJPROJECT_LIB], [$PJPROJECT_CFLAGS])\n      fi\n   fi\n\n   if test \"x$PBX_PJPROJECT\" = \"x1\" ; then\n      if test \"x${AST_DEVMODE}\" = \"xyes\" ; then\n         AC_SUBST([PYTHONDEV_LIB])\n         AC_SUBST([PYTHONDEV_INCLUDE])\n         AST_PKG_CONFIG_CHECK([PYTHONDEV], [python-2.7])\n         AST_PKG_CONFIG_CHECK([PYTHONDEV], [python2])\n         AST_PKG_CONFIG_CHECK([PYTHONDEV], [python])\n         # The PJProject offers a C extension to Python. That wrapper is used by the\n         # Asterisk Test Framework, which requires Asterisk to be in Developer Mode.\n         # However, the used wrapper (called 'PJSUA Python') is deprecated and was not\n         # ported from Python 2.7 to Python 3.x. This is confirmed; it simply does not\n         # build. For more see <http://www.pjsip.org/trac/wiki/Python_SIP_Tutorial>.\n         # Therefore, the C libraries for Python 3 are of no help in Asterisk:\n         #AST_PKG_CONFIG_CHECK([PYTHONDEV], [python3])\n      fi\n   fi\nfi\n\nAST_EXT_LIB_CHECK([POPT], [popt], [poptStrerror], [popt.h])\n\nAST_PKG_CONFIG_CHECK([PORTAUDIO], [portaudio-2.0])\nAST_EXT_LIB_CHECK([PORTAUDIO], [portaudio], [Pa_GetDeviceCount], [portaudio.h])\n\nAST_EXT_LIB_CHECK([PRI], [pri], [pri_connected_line_update], [libpri.h])\nif test \"x$PBX_PRI\" = \"x1\" ; then\n   AST_EXT_LIB_CHECK([PRI_SETUP_ACK_INBAND], [pri], [pri_setup_ack], [libpri.h])\n   AST_EXT_LIB_CHECK([PRI_L2_PERSISTENCE], [pri], [pri_persistent_layer2_option], [libpri.h])\n   AST_EXT_LIB_CHECK([PRI_DATETIME_SEND], [pri], [pri_date_time_send_option], [libpri.h])\n   AST_EXT_LIB_CHECK([PRI_MWI_V2], [pri], [pri_mwi_indicate_v2], [libpri.h])\n   AST_EXT_LIB_CHECK([PRI_DISPLAY_TEXT], [pri], [pri_display_text], [libpri.h])\n   AST_EXT_LIB_CHECK([PRI_MWI], [pri], [pri_mwi_indicate], [libpri.h])\n   AST_EXT_LIB_CHECK([PRI_MCID], [pri], [pri_mcid_enable], [libpri.h])\n   AST_EXT_LIB_CHECK([PRI_CALL_WAITING], [pri], [pri_connect_ack_enable], [libpri.h])\n   AST_EXT_LIB_CHECK([PRI_AOC_EVENTS], [pri], [pri_aoc_events_enable], [libpri.h])\n   AST_EXT_LIB_CHECK([PRI_TRANSFER], [pri], [pri_transfer_enable], [libpri.h])\n   AST_EXT_LIB_CHECK([PRI_CCSS], [pri], [pri_cc_enable], [libpri.h])\n   AST_EXT_LIB_CHECK([PRI_HANGUP_FIX], [pri], [pri_hangup_fix_enable], [libpri.h])\n   AST_EXT_LIB_CHECK([PRI_SUBADDR], [pri], [pri_sr_set_called_subaddress], [libpri.h])\n   AST_EXT_LIB_CHECK([PRI_CALL_HOLD], [pri], [pri_hold_enable], [libpri.h])\n   AST_EXT_LIB_CHECK([PRI_CALL_REROUTING], [pri], [pri_reroute_enable], [libpri.h])\n   AST_EXT_LIB_CHECK([PRI_SETUP_KEYPAD], [pri], [pri_sr_set_keypad_digits], [libpri.h])\n\n   # ------------------------------------v\n   # TODO: The code can be changed to always include these features now.\n   # These features will always be present if pri_connected_line_update is available.\n   AST_EXT_LIB_CHECK([PRI_PROG_W_CAUSE], [pri], [pri_progress_with_cause], [libpri.h])\n   AST_EXT_LIB_CHECK([PRI_INBANDDISCONNECT], [pri], [pri_set_inbanddisconnect], [libpri.h])\n   AST_EXT_LIB_CHECK([PRI_SERVICE_MESSAGES], [pri], [pri_maintenance_service], [libpri.h])\n   AST_EXT_LIB_CHECK([PRI_REVERSE_CHARGE], [pri], [pri_sr_set_reversecharge], [libpri.h])\n   # ------------------------------------^\nfi\n\nAST_EXT_LIB_CHECK([RESAMPLE], [resample], [resample_open], [libresample.h], [-lm])\nAST_EXT_LIB_CHECK([FFTW3], [fftw3], [fftw_malloc], [fftw3.h])\nAST_EXT_LIB_CHECK([SNDFILE], [sndfile], [sf_open], [sndfile.h])\n\nAST_C_COMPILE_CHECK([SPANDSP], [\n\t\t#if SPANDSP_RELEASE_DATE < 20080516\n\t\t#error \"spandsp 0.0.5 or greater is required\"\n\t\t#endif\n\t], [spandsp/version.h], , [minimum version of SpanDSP])\n\nif test \"x${PBX_SPANDSP}\" = \"x1\" ; then\n\t# We found the correct version in the header, now let's make sure it links\n\t# properly, and that libtiff is available\n\tPBX_SPANDSP=0\n\tAST_EXT_LIB_CHECK([SPANDSP], [spandsp], [span_set_message_handler], [spandsp.h], [-ltiff])\nfi\n\nif test \"x${PBX_SPANDSP}\" = \"x1\" ; then\n\t# We also need t38_terminal_init()\n\tPBX_SPANDSP=0\n\tAST_EXT_LIB_CHECK([SPANDSP], [spandsp], [t38_terminal_init], [spandsp.h], [-ltiff])\nfi\n\n# Check for libss7 v2.0 branch compatible version.\nAST_EXT_LIB_CHECK([SS7], [ss7], [ss7_set_isup_timer], [libss7.h])\n\nAST_EXT_LIB_CHECK([OPENR2], [openr2], [openr2_chan_new], [openr2.h])\n\nAST_EXT_LIB_CHECK([OPUS], [opus], [opus_encoder_create], [opus/opus.h])\n# opusfile.h includes <opus_multistream.h> so we need to make sure that\n# either $OPUS_INCLUDE or /usr/include/opus is added to the search path.\n__opus_include=${OPUS_INCLUDE}\nif test -z \"$__opus_include\" -o x\"$__opus_include\" = x\" \" ; then\n\t__opus_include=-I/usr/include/opus\nfi\nAST_EXT_LIB_CHECK([OPUSFILE], [opusfile], [op_open_callbacks], [opus/opusfile.h], [], [$__opus_include])\n\nfor ver in ${LUA_VERSIONS:-5.4 5.3 5.2 5.1}; do\n\tAST_EXT_LIB_CHECK([LUA], lua${ver}, [luaL_newstate], lua${ver}/lua.h, [-lm])\n\tif test \"x${PBX_LUA}\" = \"x1\" ; then\n\t\tif test x\"${LUA_DIR}\" = x; then\n\t\t\tLUA_INCLUDE=\"${LUA_INCLUDE} -I/usr/include/lua${ver}\"\n\t\telse\n\t\t\tLUA_INCLUDE=\"${LUA_INCLUDE} -I${LUA_DIR}/lua${ver}\"\n\t\tfi\n\t\tbreak;\n\tfi\ndone\n\n# Some distributions (like openSUSE and NetBSD) remove the 5.x suffix.\nif test \"x${LUA_VERSIONS}\" = \"x\"; then\n\tAST_EXT_LIB_CHECK([LUA], [lua], [luaL_newstate], [lua.h], [-lm])\nfi\n\n# Accept either RADIUS client library, their APIs are fully compatible,\n# just different header filenames and different SONAMEs\nAST_EXT_LIB_CHECK([RADIUS], [freeradius-client], [rc_read_config], [freeradius-client.h])\nif test \"x${PBX_RADIUS}\" = \"x1\"; then\n\tAC_DEFINE(RADIUS_HEADER_STR, [<freeradius-client.h>], [Name of RADIUS library include header])\nelse\n\tAST_EXT_LIB_CHECK([RADIUS], [radiusclient-ng], [rc_read_config], [radiusclient-ng.h])\n\tif test \"x${PBX_RADIUS}\" = \"x1\"; then\n\t\tAC_DEFINE(RADIUS_HEADER_STR, [<radiusclient-ng.h>], [Name of RADIUS library include header])\n\telse\n\t\tAST_EXT_LIB_CHECK([RADIUS], [radcli], [rc_read_config], [radcli/radcli.h])\n\t\tif test \"x${PBX_RADIUS}\" = \"x1\"; then\n\t\t\tAC_DEFINE(RADIUS_HEADER_STR, [<radcli/radcli.h>], [Name of RADIUS library include header])\n\t\tfi\n\tfi\nfi\n\nAST_EXT_LIB_CHECK([CODEC2], [codec2], [codec2_create], [codec2/codec2.h])\n\nAST_EXT_LIB_CHECK([COROSYNC], [cpg], [cpg_join], [corosync/cpg.h], [-lcpg -lcfg])\nAST_EXT_LIB_CHECK([COROSYNC_CFG_STATE_TRACK], [cfg], [corosync_cfg_state_track], [corosync/cfg.h], [-lcfg])\n\nAST_EXT_LIB_CHECK([SPEEX], [speex], [speex_encode], [speex/speex.h], [-lm])\n\n# See if the main speex library contains the preprocess functions\nAST_EXT_LIB_CHECK([SPEEX_PREPROCESS], [speex], [speex_preprocess_ctl], [speex/speex.h], [-lm])\nif test \"${PBX_SPEEX_PREPROCESS}\" = 1; then\n   PBX_SPEEX_PREPROCESS=1\nfi\n\nAST_EXT_LIB_CHECK([SPEEXDSP], [speexdsp], [speex_preprocess_ctl], [speex/speex.h], [-lm])\nif test \"${PBX_SPEEXDSP}\" = 1; then\n   PBX_SPEEX_PREPROCESS=1\nfi\n\nAC_SUBST(PBX_SPEEX_PREPROCESS)\n\nAST_EXT_LIB_CHECK([SQLITE3], [sqlite3], [sqlite3_open], [sqlite3.h], [${PTHREAD_LIBS}], [${PTHREAD_CFLAGS}])\n\nif test \"${PBX_SQLITE3}\" != 1; then\n\tAC_MSG_ERROR(*** Asterisk now uses SQLite3 for the internal Asterisk database.)\n\tAC_MSG_ERROR(*** Please install the SQLite3 development package.)\n\texit 1\nfi\n\n# Find crypt support\n# * -lcrypt on *NIX\n# * in libsystem on OS X\nAST_EXT_LIB_CHECK([LIBCRYPT], [crypt], [crypt], [crypt.h])\nAC_CHECK_FUNC([crypt], [SYSCRYPT=true], [SYSCRYPT=\"\"])\n\nif test \"x$LIBCRYPT_LIB\" != \"x\" ; then\n    CRYPT_LIB=\"$LIBCRYPT_LIB\"\n    CRYPT_INCLUDE=\"$LIBCRYPT_INCLUDE\"\n    AC_DEFINE([HAVE_CRYPT], [1], [Define to 1 if you have the 'crypt' function.])\nelif test \"x$SYSCRYPT\" != \"x\" ; then\n    CRYPT_LIB=\"\"\n    CRYPT_INCLUDE=\"\"\n    AC_DEFINE([HAVE_CRYPT], [1], [Define to 1 if you have the 'crypt' function.])\nfi\n\nAC_SUBST(CRYPT_LIB)\nAC_SUBST(CRYPT_INCLUDE)\n\n# Find crypt_r support\nAC_CHECK_LIB([crypt], [crypt_r],\n    [AC_DEFINE([HAVE_CRYPT_R], [1], [Define to 1 if you have the 'crypt_r' function.])])\n\nAST_EXT_LIB_CHECK([SRTP], [srtp2], [srtp_init], [srtp2/srtp.h], [], [], [2])\nAST_EXT_LIB_CHECK_SHARED([SRTP], [srtp2], [srtp_init], [srtp2/srtp.h], [], [], [], [\n    AC_MSG_WARN([***])\n    AC_MSG_WARN([*** libsrtp2 could not be linked as a shared object.])\n    AC_MSG_WARN([*** Try compiling libsrtp2 manually. Configure libsrtp2])\n    AC_MSG_WARN([*** with ./configure --prefix=/usr replacing /usr with])\n    AC_MSG_WARN([*** the prefix of your choice, and then make with])\n    AC_MSG_WARN([*** 'make libsrtp2.so'])\n    AC_MSG_WARN([***])\n    AC_MSG_WARN([*** After re-installing libsrtp2, re-run the Asterisk])\n    AC_MSG_WARN([*** configure script.])\n    AC_MSG_WARN([***])\n    AC_MSG_WARN([*** If you do not need SRTP support re-run configure])\n    AC_MSG_WARN([*** with the --without-srtp option.])\n    exit 1\n])\n\nif test \"x$PBX_SRTP\" = x1;\nthen\n    AST_EXT_LIB_CHECK([SRTP_256], [srtp2], [srtp_crypto_policy_set_aes_cm_256_hmac_sha1_80])\n    AST_EXT_LIB_CHECK([SRTP_192], [srtp2], [srtp_crypto_policy_set_aes_cm_192_hmac_sha1_80])\n    AST_EXT_LIB_CHECK([SRTP_GCM], [srtp2], [srtp_crypto_policy_set_aes_gcm_128_8_auth])\n    AST_EXT_LIB_CHECK([SRTP_SHUTDOWN], [srtp2], [srtp_shutdown], [srtp2/srtp.h])\n    AST_EXT_LIB_CHECK([SRTP_GET_VERSION], [srtp2], [srtp_get_version_string], [srtp2/srtp.h])\n\n    # libsrtp2 removed support for PRNG, so we require OpenSSL\n    if test \"x$PBX_OPENSSL\" != x1;\n    then\n        AC_MSG_WARN([***])\n        AC_MSG_WARN([*** OpenSSL required when using libsrtp2, checking for libsrtp instead.])\n        AC_MSG_WARN([***])\n\tPBX_SRTP=0\n    fi\nfi\n\nif test \"x$PBX_SRTP\" != x1;\nthen\n    AST_EXT_LIB_CHECK([SRTP], [srtp], [srtp_init], [srtp/srtp.h], [], [], [1])\n    AST_EXT_LIB_CHECK_SHARED([SRTP], [srtp], [srtp_init], [srtp/srtp.h], [], [], [], [\n        AC_MSG_WARN([***])\n        AC_MSG_WARN([*** libsrtp could not be linked as a shared object.])\n        AC_MSG_WARN([*** Try compiling libsrtp manually. Configure libsrtp])\n        AC_MSG_WARN([*** with ./configure CFLAGS=-fPIC --prefix=/usr])\n        AC_MSG_WARN([*** replacing /usr with the prefix of your choice.])\n        AC_MSG_WARN([*** After re-installing libsrtp, re-run the Asterisk])\n        AC_MSG_WARN([*** configure script.])\n        AC_MSG_WARN([***])\n        AC_MSG_WARN([*** If you do not need SRTP support re-run configure])\n        AC_MSG_WARN([*** with the --without-srtp option.])\n        exit 1\n    ])\n\n    if test \"x$PBX_SRTP\" = x1;\n    then\n        AST_EXT_LIB_CHECK([SRTP_256], [srtp], [crypto_policy_set_aes_cm_256_hmac_sha1_80])\n        AST_EXT_LIB_CHECK([SRTP_192], [srtp], [crypto_policy_set_aes_cm_192_hmac_sha1_80])\n        AST_EXT_LIB_CHECK([SRTP_GCM], [srtp], [crypto_policy_set_aes_gcm_128_8_auth])\n        AST_EXT_LIB_CHECK([SRTP_SHUTDOWN], [srtp], [srtp_shutdown], [srtp/srtp.h])\n        AST_EXT_LIB_CHECK([SRTP_GET_VERSION], [srtp], [srtp_get_version_string], [srtp/srtp.h])\n    fi\nfi\n\nfor ver in 3.0 2.6 2.4 2.2 2.0; do\n\tAST_PKG_CONFIG_CHECK([GMIME], gmime-$ver)\n\tif test \"$PBX_GMIME\" = 1; then\n\t\tbreak;\n\tfi\ndone\n\nAST_EXT_LIB_CHECK([HOARD], [hoard], [malloc], [])\n\nAST_EXT_LIB_CHECK([FREETDS], [sybdb], [dbinit], [sybdb.h])\n\nAC_CHECK_LIB([tonezone], [tone_zone_find_by_num], tonezone_does_not_need_lm=yes, tonezone_does_not_need_lm=no)\n\nif test \"${tonezone_does_not_need_lm}\" = \"no\" ; then\n  tonezone_extra=\"-lm\"\nfi\n\nAST_EXT_LIB_CHECK([TONEZONE], [tonezone], [tone_zone_find], [dahdi/tonezone.h], [${tonezone_extra} ${DAHDI_INCLUDE}])\n\nAST_EXT_LIB_CHECK([VORBIS], [vorbis], [vorbis_info_init], [vorbis/codec.h], [-lm -lvorbisenc -lvorbisfile])\nAST_C_DECLARE_CHECK([VORBIS_OPEN_CALLBACKS], [OV_CALLBACKS_NOCLOSE], [vorbis/vorbisfile.h])\n\nAST_EXT_LIB_CHECK([ZLIB], [z], [compress], [zlib.h])\n\nif test \"x${PBX_UNIXODBC}\" = \"x1\" -o \"x${PBX_IODBC}\" = \"x1\"; then\n\t# Does ODBC support wide characters?\n\tAC_MSG_CHECKING(whether ODBC has support for Unicode types)\n\tAC_LINK_IFELSE(\n\t\t[AC_LANG_PROGRAM(\n\t\t\t[#include <sql.h>\n#include <sqlext.h>],\n\t\t\t[int foo = SQL_WCHAR])],\n\t\tAC_MSG_RESULT(yes)\n\t\t\tAC_DEFINE([HAVE_ODBC_WCHAR], [1], [Define to 1 if your ODBC library has wide (Unicode) types.]),\n\t\tAC_MSG_RESULT(no)\n\t)\nfi\n\nAC_CHECK_HEADER([linux/compiler.h],\n                [AC_DEFINE_UNQUOTED([HAVE_LINUX_COMPILER_H], 1, [Define to 1 if your system has linux/compiler.h.])])\n\n\nAST_EXT_TOOL_CHECK([SDL], [sdl-config])\nAST_EXT_LIB_CHECK([SDL_IMAGE], [SDL_image], [IMG_Load], [SDL_image.h], [${SDL_LIB}], [${SDL_INCLUDE}])\nAST_EXT_LIB_CHECK([FFMPEG], [avcodec], [sws_getContext], [ffmpeg/avcodec.h], [${PTHREAD_LIBS} -lz -lm], [${PTHREAD_CFLAGS}])\n\n# possible places for video4linux version 1\nAC_CHECK_HEADER([linux/videodev.h],\n\t[AC_DEFINE_UNQUOTED([HAVE_VIDEODEV_H], 1, [Define to 1 if your system has linux/videodev.h.])])\n\n# possible places for X11\nAST_EXT_LIB_CHECK([X11], [X11], [XOpenDisplay], [X11/Xlib.h],,, [standard_path])\nAST_EXT_LIB_CHECK([X11], [X11], [XOpenDisplay], [X11/Xlib.h],, [-I/usr/X11R6/include], [X11R6])\n\nPBX_LAUNCHD=0\nif test \"${cross_compiling}\" = \"no\";\nthen\n  AC_CHECK_FILE(/sbin/launchd,\n    [PBX_LAUNCHD=1]\n    AC_DEFINE([HAVE_SBIN_LAUNCHD], 1, [Define to 1 if your system has /sbin/launchd.]))\nfi\nAC_SUBST(PBX_LAUNCHD)\n\nAST_PKG_CONFIG_CHECK([GTK2], [gtk+-2.0])\n\n# build a GENERIC_ODBC result based on the presence of either UnixODBC (preferred)\n# or iODBC\n\nPBX_GENERIC_ODBC=0\n\nif test \"${PBX_UNIXODBC}\" = 1; then\n   PBX_GENERIC_ODBC=1\n   GENERIC_ODBC_LIB=\"${UNIXODBC_LIB}\"\n   GENERIC_ODBC_INCLUDE=\"${UNIXODBC_INCLUDE}\"\nelif test \"${PBX_IODBC}\" = 1; then\n   PBX_GENERIC_ODBC=1\n   GENERIC_ODBC_LIB=\"${IODBC_LIB}\"\n   GENERIC_ODBC_INCLUDE=\"${IODBC_INCLUDE}\"\nfi\n\nAC_SUBST([GENERIC_ODBC_LIB])\nAC_SUBST([GENERIC_ODBC_INCLUDE])\nAC_SUBST([PBX_GENERIC_ODBC])\n\nAC_SUBST([PBX_SYSTEMD])\nAC_SUBST([SYSTEMD_LIB])\nAC_SUBST([SYSTEMD_INCLUDE])\nAST_PKG_CONFIG_CHECK([SYSTEMD], [libsystemd])\n\nPBX_SYSLOG=0\n\nif test \"${ac_cv_header_syslog_h}\" = \"yes\"; then\n   # syslog facilities\n   AST_C_DEFINE_CHECK([SYSLOG_FACILITY_LOG_AUTH],     [LOG_AUTH],     [syslog.h])\n   AST_C_DEFINE_CHECK([SYSLOG_FACILITY_LOG_AUTHPRIV], [LOG_AUTHPRIV], [syslog.h])\n   AST_C_DEFINE_CHECK([SYSLOG_FACILITY_LOG_CRON],     [LOG_CRON],     [syslog.h])\n   AST_C_DEFINE_CHECK([SYSLOG_FACILITY_LOG_DAEMON],   [LOG_DAEMON],   [syslog.h])\n   AST_C_DEFINE_CHECK([SYSLOG_FACILITY_LOG_FTP],      [LOG_FTP],      [syslog.h])\n   AST_C_DEFINE_CHECK([SYSLOG_FACILITY_LOG_KERN],     [LOG_KERN],     [syslog.h])\n   AST_C_DEFINE_CHECK([SYSLOG_FACILITY_LOG_LPR],      [LOG_LPR],      [syslog.h])\n   AST_C_DEFINE_CHECK([SYSLOG_FACILITY_LOG_MAIL],     [LOG_MAIL],     [syslog.h])\n   AST_C_DEFINE_CHECK([SYSLOG_FACILITY_LOG_NEWS],     [LOG_NEWS],     [syslog.h])\n   AST_C_DEFINE_CHECK([SYSLOG_FACILITY_LOG_SYSLOG],   [LOG_SYSLOG],   [syslog.h])\n   AST_C_DEFINE_CHECK([SYSLOG_FACILITY_LOG_UUCP],     [LOG_UUCP],     [syslog.h])\n   PBX_SYSLOG=1\nfi\n\nAC_SUBST([PBX_SYSLOG])\n\nif test -f makeopts; then\n\t${ac_cv_path_EGREP} 'CURSES|GTK2|OSARCH|NEWT' makeopts > makeopts.acbak\nelse\n\ttouch makeopts.acbak\nfi\n\n# conf_bridge (binaural rendering): check if HRIRs are available\n# this check does not work when cross-compiling\nif test \"${cross_compiling}\" = \"no\"; then\n    AC_CHECK_FILES([bridges/bridge_softmix/include/hrirs.h])\nfi\n\nAC_CONFIG_FILES([build_tools/menuselect-deps makeopts])\nAST_CHECK_MANDATORY\n\nif test -f build_tools/menuselect-deps; then\n    # extract old values of all PBX_ variables from menuselect-deps\n    # and preserve them so that menuselect can determine whether\n    # any previously-met dependencies are no longer met and warn\n    # the user appropriately\n    while IFS=\"=:\" read var val old_val; do\n        eval \"PBX_${var}=\\${PBX_${var}}:${val}\"\n    done < build_tools/menuselect-deps\nfi\n\nAC_OUTPUT\n\n${ac_cv_path_EGREP} 'CURSES|GTK2|OSARCH|NEWT' makeopts > makeopts.acbak2\nif test \"${ac_cv_path_CMP}\" = \":\"; then\n\t( cd \"`pwd`/menuselect\" && ./configure )\nelif ${ac_cv_path_CMP} -s makeopts.acbak makeopts.acbak2; then : ; else\n\t( cd \"`pwd`/menuselect\" && ./configure )\nfi\n\nrm makeopts.acbak makeopts.acbak2\n\n\nif test \"x${silent}\" != \"xyes\" ; then\necho\necho \"               .\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$=..      \"\necho \"            .\\$7\\$7..          .7\\$\\$7:.    \"\necho \"          .\\$\\$:.                 ,\\$7.7   \"\necho \"        .\\$7.     7\\$\\$\\$\\$           .\\$\\$77  \"\necho \"     ..\\$\\$.       \\$\\$\\$\\$\\$            .\\$\\$\\$7 \"\necho \"    ..7\\$   .?.   \\$\\$\\$\\$\\$   .?.       7\\$\\$\\$.\"\necho \"   \\$.\\$.   .\\$\\$\\$7. \\$\\$\\$\\$7 .7\\$\\$\\$.      .\\$\\$\\$.\"\necho \" .777.   .\\$\\$\\$\\$\\$\\$77\\$\\$\\$77\\$\\$\\$\\$\\$7.      \\$\\$\\$,\"\necho \" \\$\\$\\$~      .7\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$7.       .\\$\\$\\$.\"\necho \".\\$\\$7          .7\\$\\$\\$\\$\\$\\$\\$7:          ?\\$\\$\\$.\"\necho \"\\$\\$\\$          ?7\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$I        .\\$\\$\\$7 \"\necho \"\\$\\$\\$       .7\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$      :\\$\\$\\$. \"\necho \"\\$\\$\\$       \\$\\$\\$\\$\\$\\$7\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$    .\\$\\$\\$.  \"\necho \"\\$\\$\\$        \\$\\$\\$   7\\$\\$\\$7  .\\$\\$\\$    .\\$\\$\\$.   \"\necho \"\\$\\$\\$\\$             \\$\\$\\$\\$7         .\\$\\$\\$.    \"\necho \"7\\$\\$\\$7            7\\$\\$\\$\\$        7\\$\\$\\$      \"\necho \" \\$\\$\\$\\$\\$                        \\$\\$\\$       \"\necho \"  \\$\\$\\$\\$7.                       \\$\\$  (TM)     \"\necho \"   \\$\\$\\$\\$\\$\\$\\$.           .7\\$\\$\\$\\$\\$\\$  \\$\\$      \"\necho \"     \\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$7\\$\\$\\$\\$\\$\\$\\$\\$\\$.\\$\\$\\$\\$\\$\\$      \"\necho \"       \\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$\\$.                \"\necho\nfi\n\nif test \"x${AST_IODBC_FOUND}\" = \"xyes\"; then\n\techo \"WARNING: iodbc libs/headers found!\"\n\techo\n\techo \"  If you plan to use ODBC functionality, you should consider\"\n\techo \"  switching to unixodbc instead.\"\n\techo \"  See: https://issues.asterisk.org/jira/browse/ASTERISK-22459\"\n\techo\nfi\n\nAC_MSG_NOTICE(Package configured for: )\nAC_MSG_NOTICE( OS type  : $host_os)\nAC_MSG_NOTICE( Host CPU : $host_cpu)\nAC_MSG_NOTICE( build-cpu:vendor:os: $build_cpu : $build_vendor : $build_os :)\nAC_MSG_NOTICE( host-cpu:vendor:os: $host_cpu : $host_vendor : $host_os :)\nif test \"${cross_compiling}\" = \"yes\"; then\n   AC_MSG_NOTICE( Cross Compilation = YES)\nfi\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "default.exports",
          "type": "blob",
          "size": 0.123046875,
          "content": "{\n\tglobal:\n\t\t/* See main/asterisk.exports.in for an explanation why this is\n\t\t * needed. */\n\t\t_IO_stdin_used;\n\tlocal:\n\t\t*;\n};\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "formats",
          "type": "tree",
          "content": null
        },
        {
          "name": "funcs",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "install-sh",
          "type": "blob",
          "size": 6.2470703125,
          "content": "#!/bin/sh\n#\n# install - install a program, script, or datafile\n#\n# This originates from X11R5 (mit/util/scripts/install.sh), which was\n# later released in X11R6 (xc/config/util/install.sh) with the\n# following copyright and license.\n#\n# Copyright (C) 1994 X Consortium\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to\n# deal in the Software without restriction, including without limitation the\n# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n# sell copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in\n# all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n# X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN\n# AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNEC-\n# TION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n#\n# Except as contained in this notice, the name of the X Consortium shall not\n# be used in advertising or otherwise to promote the sale, use or other deal-\n# ings in this Software without prior written authorization from the X Consor-\n# tium.\n#\n#\n# FSF changes to this file are in the public domain.\n#\n# Calling this script install-sh is preferred over install.sh, to prevent\n# `make' implicit rules from creating a file called install from it\n# when there is no Makefile.\n#\n# This script is compatible with the BSD install script, but was written\n# from scratch.  It can only install one file at a time, a restriction\n# shared with many OS's install programs.\n\n\n# set DOITPROG to echo to test this script\n\n# Don't use :- since 4.3BSD and earlier shells don't like it.\ndoit=\"${DOITPROG-}\"\n\n\n# put in absolute paths if you don't have them in your path; or use env. vars.\n\nmvprog=\"${MVPROG-mv}\"\ncpprog=\"${CPPROG-cp}\"\nchmodprog=\"${CHMODPROG-chmod}\"\nchownprog=\"${CHOWNPROG-chown}\"\nchgrpprog=\"${CHGRPPROG-chgrp}\"\nstripprog=\"${STRIPPROG-strip}\"\nrmprog=\"${RMPROG-rm}\"\nmkdirprog=\"${MKDIRPROG-mkdir}\"\n\ntransformbasename=\"\"\ntransform_arg=\"\"\ninstcmd=\"$mvprog\"\nchmodcmd=\"$chmodprog 0755\"\nchowncmd=\"\"\nchgrpcmd=\"\"\nstripcmd=\"\"\nrmcmd=\"$rmprog -f\"\nmvcmd=\"$mvprog\"\nsrc=\"\"\ndst=\"\"\ndir_arg=\"\"\n\nwhile [ x\"$1\" != x ]; do\n    case $1 in\n\t-c) instcmd=\"$cpprog\"\n\t    shift\n\t    continue;;\n\n\t-d) dir_arg=true\n\t    shift\n\t    continue;;\n\n\t-m) chmodcmd=\"$chmodprog $2\"\n\t    shift\n\t    shift\n\t    continue;;\n\n\t-o) chowncmd=\"$chownprog $2\"\n\t    shift\n\t    shift\n\t    continue;;\n\n\t-g) chgrpcmd=\"$chgrpprog $2\"\n\t    shift\n\t    shift\n\t    continue;;\n\n\t-s) stripcmd=\"$stripprog\"\n\t    shift\n\t    continue;;\n\n\t-t=*) transformarg=`echo $1 | sed 's/-t=//'`\n\t    shift\n\t    continue;;\n\n\t-b=*) transformbasename=`echo $1 | sed 's/-b=//'`\n\t    shift\n\t    continue;;\n\n\t*)  if [ x\"$src\" = x ]\n\t    then\n\t\tsrc=$1\n\t    else\n\t\t# this colon is to work around a 386BSD /bin/sh bug\n\t\t:\n\t\tdst=$1\n\t    fi\n\t    shift\n\t    continue;;\n    esac\ndone\n\nif [ x\"$src\" = x ]\nthen\n\techo \"install:\tno input file specified\"\n\texit 1\nelse\n\ttrue\nfi\n\nif [ x\"$dir_arg\" != x ]; then\n\tdst=$src\n\tsrc=\"\"\n\n\tif [ -d $dst ]; then\n\t\tinstcmd=:\n\t\tchmodcmd=\"\"\n\telse\n\t\tinstcmd=mkdir\n\tfi\nelse\n\n# Waiting for this to be detected by the \"$instcmd $src $dsttmp\" command\n# might cause directories to be created, which would be especially bad\n# if $src (and thus $dsttmp) contains '*'.\n\n\tif [ -f $src -o -d $src ]\n\tthen\n\t\ttrue\n\telse\n\t\techo \"install:  $src does not exist\"\n\t\texit 1\n\tfi\n\n\tif [ x\"$dst\" = x ]\n\tthen\n\t\techo \"install:\tno destination specified\"\n\t\texit 1\n\telse\n\t\ttrue\n\tfi\n\n# If destination is a directory, append the input filename; if your system\n# does not like double slashes in filenames, you may need to add some logic\n\n\tif [ -d $dst ]\n\tthen\n\t\tdst=\"$dst\"/`basename $src`\n\telse\n\t\ttrue\n\tfi\nfi\n\n## this sed command emulates the dirname command\ndstdir=`echo $dst | sed -e 's,[^/]*$,,;s,/$,,;s,^$,.,'`\n\n# Make sure that the destination directory exists.\n#  this part is taken from Noah Friedman's mkinstalldirs script\n\n# Skip lots of stat calls in the usual case.\nif [ ! -d \"$dstdir\" ]; then\ndefaultIFS='\n'\nIFS=\"${IFS-${defaultIFS}}\"\n\noIFS=\"${IFS}\"\n# Some sh's can't handle IFS=/ for some reason.\nIFS='%'\nset - `echo ${dstdir} | sed -e 's@/@%@g' -e 's@^%@/@'`\nIFS=\"${oIFS}\"\n\npathcomp=''\n\nwhile [ $# -ne 0 ] ; do\n\tpathcomp=\"${pathcomp}${1}\"\n\tshift\n\n\tif [ ! -d \"${pathcomp}\" ] ;\n        then\n\t\t$mkdirprog \"${pathcomp}\"\n\telse\n\t\ttrue\n\tfi\n\n\tpathcomp=\"${pathcomp}/\"\ndone\nfi\n\nif [ x\"$dir_arg\" != x ]\nthen\n\t$doit $instcmd $dst &&\n\n\tif [ x\"$chowncmd\" != x ]; then $doit $chowncmd $dst; else true ; fi &&\n\tif [ x\"$chgrpcmd\" != x ]; then $doit $chgrpcmd $dst; else true ; fi &&\n\tif [ x\"$stripcmd\" != x ]; then $doit $stripcmd $dst; else true ; fi &&\n\tif [ x\"$chmodcmd\" != x ]; then $doit $chmodcmd $dst; else true ; fi\nelse\n\n# If we're going to rename the final executable, determine the name now.\n\n\tif [ x\"$transformarg\" = x ]\n\tthen\n\t\tdstfile=`basename $dst`\n\telse\n\t\tdstfile=`basename $dst $transformbasename |\n\t\t\tsed $transformarg`$transformbasename\n\tfi\n\n# don't allow the sed command to completely eliminate the filename\n\n\tif [ x\"$dstfile\" = x ]\n\tthen\n\t\tdstfile=`basename $dst`\n\telse\n\t\ttrue\n\tfi\n\n# Make a temp file name in the proper directory.\n\n\tdsttmp=$dstdir/#inst.$$#\n\n# Move or copy the file name to the temp name\n\n\t$doit $instcmd $src $dsttmp &&\n\n\ttrap \"rm -f ${dsttmp}\" 0 &&\n\n# and set any options; do chmod last to preserve setuid bits\n\n# If any of these fail, we abort the whole thing.  If we want to\n# ignore errors from any of these, just make sure not to ignore\n# errors from the above \"$doit $instcmd $src $dsttmp\" command.\n\n\tif [ x\"$chowncmd\" != x ]; then $doit $chowncmd $dsttmp; else true;fi &&\n\tif [ x\"$chgrpcmd\" != x ]; then $doit $chgrpcmd $dsttmp; else true;fi &&\n\tif [ x\"$stripcmd\" != x ]; then $doit $stripcmd $dsttmp; else true;fi &&\n\tif [ x\"$chmodcmd\" != x ]; then $doit $chmodcmd $dsttmp; else true;fi &&\n\n# Now rename the file to the real destination.\n\n\t$doit $rmcmd -f $dstdir/$dstfile &&\n\t$doit $mvcmd $dsttmp $dstdir/$dstfile\n\nfi &&\n\n\nexit 0\n"
        },
        {
          "name": "main",
          "type": "tree",
          "content": null
        },
        {
          "name": "makeopts.in",
          "type": "blob",
          "size": 7.212890625,
          "content": "# NOTE: Names of _INCLUDE and _LIB entries in this file must be\n#       the exact uppercase equivalents of the names used for\n#       dependencies in menuselect for the same package.\n\nCC=@PTHREAD_CC@\nHOST_CC=cc\nBUILD_CC=cc\nCXX=@CXX@\n\nINSTALL=@INSTALL@\nAWK=@AWK@\nBISON=@BISON@\nFLEX=@FLEX@\nGREP=@GREP@\nPYTHON=@PYTHON@\nMAKE=@GNU_MAKE@\nAR=@AR@\nRANLIB=@RANLIB@\nFIND=@FIND@\nBASENAME=@BASENAME@\nSHELL=@SHELL@\nLN=@LN@\nDOXYGEN=@DOXYGEN@\nDOT=@DOT@\nSTRIP=@STRIP@\nWGET=@WGET@\nFETCH=@FETCH@\nDOWNLOAD=@DOWNLOAD@\nDOWNLOAD_TO_STDOUT=@DOWNLOAD_TO_STDOUT@\nDOWNLOAD_TIMEOUT=@DOWNLOAD_TIMEOUT@\nAST_DOWNLOAD_CACHE=@AST_DOWNLOAD_CACHE@\nSOUNDS_CACHE_DIR=$(or @SOUNDS_CACHE_DIR@,${AST_DOWNLOAD_CACHE})\nEXTERNALS_CACHE_DIR=$(or @EXTERNALS_CACHE_DIR@,${AST_DOWNLOAD_CACHE})\nXMLLINT=@XMLLINT@\nXMLSTARLET=@XMLSTARLET@\nBASH=@BASH@\nMD5=@MD5@\nSHA1SUM=@SHA1SUM@\nOPENSSL=@OPENSSL@\nLDCONFIG=@LDCONFIG@\nGIT=@GIT@\nALEMBIC=@ALEMBIC@\nTAR=@TAR@\nPATCH=@PATCH@\nSED=@SED@\nNM=@NM@\nCAT=@CAT@\nCUT=@CUT@\nREALPATH=@REALPATH@\nDIRNAME=@DIRNAME@\n\nBUILD_PLATFORM=@BUILD_PLATFORM@\nBUILD_CPU=@BUILD_CPU@\nBUILD_VENDOR=@BUILD_VENDOR@\nBUILD_OS=@BUILD_OS@\n\nHOST_PLATFORM=@HOST_PLATFORM@\nHOST_CPU=@HOST_CPU@\nHOST_VENDOR=@HOST_VENDOR@\nHOST_OS=@HOST_OS@\n\nOSARCH=@OSARCH@\nOSREV=@PBX_OSREV@\n\nBIND8_CFLAGS=@BIND8_CFLAGS@\n\nCROSS_COMPILING=@CROSS_COMPILING@\n\nPTHREAD_CFLAGS=@PTHREAD_CFLAGS@\nPTHREAD_LIBS=@PTHREAD_LIBS@\n\nCONFIG_CFLAGS=@CONFIG_CFLAGS@\nCONFIG_LDFLAGS=@CONFIG_LDFLAGS@\nCONFIG_SIGNED_CHAR=@CONFIG_SIGNED_CHAR@\n\nGNU_LD=@GNU_LD@\nHAVE_DYNAMIC_LIST=@PBX_DYNAMIC_LIST@\n\nprefix = @prefix@\nexec_prefix = @exec_prefix@\n\ndatarootdir = @datarootdir@\ndatadir = @datadir@\nincludedir = @includedir@\ninfodir = @infodir@\nlibdir = @libdir@\nlibexecdir = @libexecdir@\nlocalstatedir = @localstatedir@\nmandir = @mandir@\nsbindir = @sbindir@\nsharedstatedir = @sharedstatedir@\nsysconfdir = @sysconfdir@\n\nASTSBINDIR = @astsbindir@\nASTETCDIR = @astetcdir@\nASTHEADERDIR = @astheaderdir@\nASTLIBDIR = @astlibdir@\nASTMODDIR = @astmoddir@\nASTMANDIR = @astmandir@\nastvarlibdir = @astvarlibdir@\nASTVARLIBDIR = @astvarlibdir@\nASTCACHEDIR = @astcachedir@\nASTDATADIR = @astdatadir@\nASTDBDIR = @astdbdir@\nASTKEYDIR = @astkeydir@\nASTSPOOLDIR = @astspooldir@\nASTLOGDIR = @astlogdir@\nASTVARRUNDIR = @astvarrundir@\n\nAST_DEVMODE=@AST_DEVMODE@\nAST_DEVMODE_STRICT=@AST_DEVMODE_STRICT@\nDISABLE_XMLDOC=@DISABLE_XMLDOC@\nNOISY_BUILD=@NOISY_BUILD@\n\nAST_CODE_COVERAGE=@AST_CODE_COVERAGE@\n\nAST_ASTERISKSSL=@AST_ASTERISKSSL@\n\nAST_DECLARATION_AFTER_STATEMENT=@AST_DECLARATION_AFTER_STATEMENT@\nAST_TRAMPOLINES=@AST_TRAMPOLINES@\nAST_NO_STRICT_OVERFLOW=@AST_NO_STRICT_OVERFLOW@\nAST_NO_FORMAT_TRUNCATION=@AST_NO_FORMAT_TRUNCATION@\nAST_NO_FORMAT_Y2K=@AST_NO_FORMAT_Y2K@\nAST_NO_STRINGOP_TRUNCATION=@AST_NO_STRINGOP_TRUNCATION@\nAST_SHADOW_WARNINGS=@AST_SHADOW_WARNINGS@\nAST_NESTED_FUNCTIONS=@AST_NESTED_FUNCTIONS@\nAST_CLANG_BLOCKS=@AST_CLANG_BLOCKS@\nAST_CLANG_BLOCKS_LIBS=@AST_CLANG_BLOCKS_LIBS@\nC_COMPILER_FAMILY=@AST_C_COMPILER_FAMILY@\nAST_RPATH=@AST_RPATH@\nAST_FORTIFY_SOURCE=@AST_FORTIFY_SOURCE@\n\nBFD_INCLUDE=@BFD_INCLUDE@\nBFD_LIB=@BFD_LIB@\n\nBLUETOOTH_INCLUDE=@BLUETOOTH_INCLUDE@\nBLUETOOTH_LIB=@BLUETOOTH_LIB@\n\nCODEC2_INCLUDE=@CODEC2_INCLUDE@\nCODEC2_LIB=@CODEC2_LIB@\n\nCURL_INCLUDE=@CURL_INCLUDE@\nCURL_LIB=@CURL_LIB@\n\nFREETDS_INCLUDE=@FREETDS_INCLUDE@\nFREETDS_LIB=@FREETDS_LIB@\n\nGENERIC_ODBC_INCLUDE=@GENERIC_ODBC_INCLUDE@\nGENERIC_ODBC_LIB=@GENERIC_ODBC_LIB@\n\nGMIME_INCLUDE=@GMIME_INCLUDE@\nGMIME_LIB=@GMIME_LIB@\n\nHOARD_LIB=@HOARD_LIB@\n\nGSM_INTERNAL=@GSM_INTERNAL@\nGSM_INCLUDE=@GSM_INCLUDE@\nGSM_LIB=@GSM_LIB@\n\nILBC_INTERNAL=@ILBC_INTERNAL@\nILBC_INCLUDE=@ILBC_INCLUDE@\nILBC_LIB=@ILBC_LIB@\n\nGTK2_INCLUDE=@GTK2_INCLUDE@\nGTK2_LIB=@GTK2_LIB@\n\nICAL_INCLUDE=@ICAL_INCLUDE@\nICAL_LIB=@ICAL_LIB@\n\nICONV_INCLUDE=@ICONV_INCLUDE@\nICONV_LIB=@ICONV_LIB@\n\nIKSEMEL_INCLUDE=@IKSEMEL_INCLUDE@\nIKSEMEL_LIB=@IKSEMEL_LIB@\n\nIMAP_TK_INCLUDE=@IMAP_TK_INCLUDE@\nIMAP_TK_LIB=@IMAP_TK_LIB@\n\nIODBC_INCLUDE=@IODBC_INCLUDE@\nIODBC_LIB=@IODBC_LIB@\n\nJACK_INCLUDE=@JACK_INCLUDE@\nJACK_LIB=@JACK_LIB@\n\nJANSSON_BUNDLED=@JANSSON_BUNDLED@\nJANSSON_INCLUDE=@JANSSON_INCLUDE@\nJANSSON_LIB=@JANSSON_LIB@\n\nLIBJWT_BUNDLED=@LIBJWT_BUNDLED@\nLIBJWT_INCLUDE=@LIBJWT_INCLUDE@\nLIBJWT_LIB=@LIBJWT_LIB@\nLIBJWT_CONFIGURE_OPTS=@LIBJWT_CONFIGURE_OPTS@\n\nURIPARSER_INCLUDE=@URIPARSER_INCLUDE@\nURIPARSER_LIB=@URIPARSER_LIB@\n\nLDAP_INCLUDE=@LDAP_INCLUDE@\nLDAP_LIB=@LDAP_LIB@\n\nLIBEDIT_INCLUDE=@LIBEDIT_INCLUDE@\nLIBEDIT_LIB=@LIBEDIT_LIB@\n\nLUA_INCLUDE=@LUA_INCLUDE@\nLUA_LIB=@LUA_LIB@\n\nMYSQLCLIENT_INCLUDE=@MYSQLCLIENT_INCLUDE@\nMYSQLCLIENT_LIB=@MYSQLCLIENT_LIB@\n\nNEON_INCLUDE=@NEON_INCLUDE@\nNEON_LIB=@NEON_LIB@\nNEON29_INCLUDE=@NEON_INCLUDE@\nNEON29_LIB=@NEON_LIB@\n\nNETSNMP_INCLUDE=@NETSNMP_INCLUDE@\nNETSNMP_LIB=@NETSNMP_LIB@\n\nNEWT_INCLUDE=@NEWT_INCLUDE@\nNEWT_LIB=@NEWT_LIB@\n\nOGG_INCLUDE=@OGG_INCLUDE@\nOGG_LIB=@OGG_LIB@\n\nOPUS_INCLUDE=@OPUS_INCLUDE@\nOPUS_LIB=@OPUS_LIB@\n\nOPUSFILE_INCLUDE=@OPUSFILE_INCLUDE@\nOPUSFILE_LIB=@OPUSFILE_LIB@\n\nPGSQL_INCLUDE=@PGSQL_INCLUDE@\nPGSQL_LIB=@PGSQL_LIB@\n\nPJPROJECT_BUNDLED=@PJPROJECT_BUNDLED@\nPJPROJECT_BUNDLED_OOT=@PJPROJECT_BUNDLED_OOT@\nPJPROJECT_INCLUDE=@PJPROJECT_INCLUDE@\nPJPROJECT_LIB=@PJPROJECT_LIB@\nPJPROJECT_DIR=@PJPROJECT_DIR@\nPJPROJECT_CONFIGURE_OPTS=@PJPROJECT_CONFIGURE_OPTS@\n\nPOPT_INCLUDE=@POPT_INCLUDE@\nPOPT_LIB=@POPT_LIB@\n\nPORTAUDIO_INCLUDE=@PORTAUDIO_INCLUDE@\nPORTAUDIO_LIB=@PORTAUDIO_LIB@\n\nPRI_INCLUDE=@PRI_INCLUDE@\nPRI_LIB=@PRI_LIB@\n\nPYTHONDEV_INCLUDE=@PYTHONDEV_INCLUDE@\nPYTHONDEV_LIB=@PYTHONDEV_LIB@\n\nRESAMPLE_INCLUDE=@RESAMPLE_INCLUDE@\nRESAMPLE_LIB=@RESAMPLE_LIB@\n\nFFTW3_INCLUDE=@FFTW3_INCLUDE@\nFFTW3_LIB=@FFTW3_LIB@\n\nRT_LIB=@RT_LIB@\n\nSS7_INCLUDE=@SS7_INCLUDE@\nSS7_LIB=@SS7_LIB@\n\nHAVE_SYSTEMD=@PBX_SYSTEMD@\nSYSTEMD_INCLUDE=@SYSTEMD_INCLUDE@\nSYSTEMD_LIB=@SYSTEMD_LIB@\n\nOPENR2_INCLUDE=@OPENR2_INCLUDE@\nOPENR2_LIB=@OPENR2_LIB@\n\nCOROSYNC_INCLUDE=@COROSYNC_INCLUDE@\nCOROSYNC_LIB=@COROSYNC_LIB@\n\nRADIUS_INCLUDE=@RADIUS_INCLUDE@\nRADIUS_LIB=@RADIUS_LIB@\n\nFFMPEG_INCLUDE=@FFMPEG_INCLUDE@\nFFMPEG_LIB=@FFMPEG_LIB@\n\nX11_INCLUDE=@X11_INCLUDE@\nX11_LIB=@X11_LIB@\n\nSDL_INCLUDE=@SDL_INCLUDE@\nSDL_LIB=@SDL_LIB@\n\nSDL_IMAGE_INCLUDE=@SDL_IMAGE_INCLUDE@\nSDL_IMAGE_LIB=@SDL_IMAGE_LIB@\n\nSPANDSP_INCLUDE=@SPANDSP_INCLUDE@\nSPANDSP_LIB=@SPANDSP_LIB@\n\nSPEEX_INCLUDE=@SPEEX_INCLUDE@\nSPEEX_LIB=@SPEEX_LIB@\n\nSPEEXDSP_INCLUDE=@SPEEXDSP_INCLUDE@\nSPEEXDSP_LIB=@SPEEXDSP_LIB@\n\nSQLITE3_INCLUDE=@SQLITE3_INCLUDE@\nSQLITE3_LIB=@SQLITE3_LIB@\n\nSRTP_LIB=@SRTP_LIB@\nSRTP_INCLUDE=@SRTP_INCLUDE@\n\nOPENSSL_INCLUDE=@OPENSSL_INCLUDE@\nOPENSSL_LIB=@OPENSSL_LIB@\n\nCRYPT_INCLUDE=@CRYPT_INCLUDE@\nCRYPT_LIB=@CRYPT_LIB@\n\nCRYPTO_INCLUDE=@CRYPTO_INCLUDE@\nCRYPTO_LIB=@CRYPTO_LIB@\n\nTONEZONE_INCLUDE=@TONEZONE_INCLUDE@\nTONEZONE_LIB=@TONEZONE_LIB@\n\nUNBOUND_INCLUDE=@UNBOUND_INCLUDE@\nUNBOUND_LIB=@UNBOUND_LIB@\n\nUNIXODBC_INCLUDE=@UNIXODBC_INCLUDE@\nUNIXODBC_LIB=@UNIXODBC_LIB@\n\nUUID_INCLUDE=@UUID_INCLUDE@\nUUID_LIB=@UUID_LIB@\n\nVORBIS_INCLUDE=@VORBIS_INCLUDE@\nVORBIS_LIB=@VORBIS_LIB@\n\nHAVE_DAHDI=@PBX_DAHDI@\nDAHDI_INCLUDE=@DAHDI_INCLUDE@\n\nZLIB_INCLUDE=@ZLIB_INCLUDE@\nZLIB_LIB=@ZLIB_LIB@\n\nCAP_LIB=@CAP_LIB@\nCAP_INCLUDE=@CAP_INCLUDE@\n\nBKTR_INCLUDE=@BKTR_INCLUDE@\nBKTR_LIB=@BKTR_LIB@\n\nLIBXML2_INCLUDE=@LIBXML2_INCLUDE@\nLIBXML2_LIB=@LIBXML2_LIB@\n\nLIBXSLT_INCLUDE=@LIBXSLT_INCLUDE@\nLIBXSLT_LIB=@LIBXSLT_LIB@\n\n# if poll is not present, let the makefile know.\nPOLL_AVAILABLE=@HAS_POLL@\nTIMERFD_INCLUDE=@TIMERFD_INCLUDE@\n\nSNDFILE_INCLUDE=@SNDFILE_INCLUDE@\nSNDFILE_LIB=@SNDFILE_LIB@\n\nBEANSTALK_INCLUDE=@BEANSTALK_INCLUDE@\nBEANSTALK_LIB=@BEANSTALK_LIB@\n\nHAVE_SBIN_LAUNCHD=@PBX_LAUNCHD@\n"
        },
        {
          "name": "menuselect",
          "type": "tree",
          "content": null
        },
        {
          "name": "missing",
          "type": "blob",
          "size": 6.328125,
          "content": "#! /bin/sh\n# Common stub for a few missing GNU programs while installing.\n# Copyright (C) 1996, 1997, 2001, 2002 Free Software Foundation, Inc.\n# Franc,ois Pinard <pinard@iro.umontreal.ca>, 1996.\n\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2, or (at your option)\n# any later version.\n\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA\n# 02111-1307, USA.\n\nif test $# -eq 0; then\n  echo 1>&2 \"Try \\`$0 --help' for more information\"\n  exit 1\nfi\n\n# In the cases where this matters, `missing' is being run in the\n# srcdir already.\nif test -f configure.in; then\n  configure_ac=configure.ac\nelse\n  configure_ac=configure.in\nfi\n\ncase \"$1\" in\n\n  -h|--h|--he|--hel|--help)\n    echo \"\\\n$0 [OPTION]... PROGRAM [ARGUMENT]...\n\nHandle \\`PROGRAM [ARGUMENT]...' for when PROGRAM is missing, or return an\nerror status if there is no known handling for PROGRAM.\n\nOptions:\n  -h, --help      display this help and exit\n  -v, --version   output version information and exit\n\nSupported PROGRAM values:\n  aclocal      touch file \\`aclocal.m4'\n  autoconf     touch file \\`configure'\n  autoheader   touch file \\`config.h.in'\n  automake     touch all \\`Makefile.in' files\n  bison        create \\`y.tab.[ch]', if possible, from existing .[ch]\n  flex         create \\`lex.yy.c', if possible, from existing .c\n  lex          create \\`lex.yy.c', if possible, from existing .c\n  makeinfo     touch the output file\n  yacc         create \\`y.tab.[ch]', if possible, from existing .[ch]\"\n    ;;\n\n  -v|--v|--ve|--ver|--vers|--versi|--versio|--version)\n    echo \"missing - GNU libit 0.0\"\n    ;;\n\n  -*)\n    echo 1>&2 \"$0: Unknown \\`$1' option\"\n    echo 1>&2 \"Try \\`$0 --help' for more information\"\n    exit 1\n    ;;\n\n  aclocal*)\n    echo 1>&2 \"\\\nWARNING: \\`$1' is missing on your system.  You should only need it if\n         you modified \\`acinclude.m4' or \\`$configure_ac'.  You might want\n         to install the \\`Automake' and \\`Perl' packages.  Grab them from\n         any GNU archive site.\"\n    touch aclocal.m4\n    ;;\n\n  autoconf)\n    echo 1>&2 \"\\\nWARNING: \\`$1' is missing on your system.  You should only need it if\n         you modified \\`$configure_ac'.  You might want to install the\n         \\`Autoconf' and \\`GNU m4' packages.  Grab them from any GNU\n         archive site.\"\n    touch configure\n    ;;\n\n  autoheader)\n    echo 1>&2 \"\\\nWARNING: \\`$1' is missing on your system.  You should only need it if\n         you modified \\`acconfig.h' or \\`$configure_ac'.  You might want\n         to install the \\`Autoconf' and \\`GNU m4' packages.  Grab them\n         from any GNU archive site.\"\n    files=`sed -n 's/^[ ]*A[CM]_CONFIG_HEADER(\\([^)]*\\)).*/\\1/p' $configure_ac`\n    test -z \"$files\" && files=\"config.h\"\n    touch_files=\n    for f in $files; do\n      case \"$f\" in\n      *:*) touch_files=\"$touch_files \"`echo \"$f\" |\n\t\t\t\t       sed -e 's/^[^:]*://' -e 's/:.*//'`;;\n      *) touch_files=\"$touch_files $f.in\";;\n      esac\n    done\n    touch $touch_files\n    ;;\n\n  automake*)\n    echo 1>&2 \"\\\nWARNING: \\`$1' is missing on your system.  You should only need it if\n         you modified \\`Makefile.am', \\`acinclude.m4' or \\`$configure_ac'.\n         You might want to install the \\`Automake' and \\`Perl' packages.\n         Grab them from any GNU archive site.\"\n    find . -type f -name Makefile.am -print |\n\t   sed 's/\\.am$/.in/' |\n\t   while read f; do touch \"$f\"; done\n    ;;\n\n  bison|yacc)\n    echo 1>&2 \"\\\nWARNING: \\`$1' is missing on your system.  You should only need it if\n         you modified a \\`.y' file.  You may need the \\`Bison' package\n         in order for those modifications to take effect.  You can get\n         \\`Bison' from any GNU archive site.\"\n    rm -f y.tab.c y.tab.h\n    if [ $# -ne 1 ]; then\n        eval LASTARG=\"\\${$#}\"\n\tcase \"$LASTARG\" in\n\t*.y)\n\t    SRCFILE=`echo \"$LASTARG\" | sed 's/y$/c/'`\n\t    if [ -f \"$SRCFILE\" ]; then\n\t         cp \"$SRCFILE\" y.tab.c\n\t    fi\n\t    SRCFILE=`echo \"$LASTARG\" | sed 's/y$/h/'`\n\t    if [ -f \"$SRCFILE\" ]; then\n\t         cp \"$SRCFILE\" y.tab.h\n\t    fi\n\t  ;;\n\tesac\n    fi\n    if [ ! -f y.tab.h ]; then\n\techo >y.tab.h\n    fi\n    if [ ! -f y.tab.c ]; then\n\techo 'main() { return 0; }' >y.tab.c\n    fi\n    ;;\n\n  lex|flex)\n    echo 1>&2 \"\\\nWARNING: \\`$1' is missing on your system.  You should only need it if\n         you modified a \\`.l' file.  You may need the \\`Flex' package\n         in order for those modifications to take effect.  You can get\n         \\`Flex' from any GNU archive site.\"\n    rm -f lex.yy.c\n    if [ $# -ne 1 ]; then\n        eval LASTARG=\"\\${$#}\"\n\tcase \"$LASTARG\" in\n\t*.l)\n\t    SRCFILE=`echo \"$LASTARG\" | sed 's/l$/c/'`\n\t    if [ -f \"$SRCFILE\" ]; then\n\t         cp \"$SRCFILE\" lex.yy.c\n\t    fi\n\t  ;;\n\tesac\n    fi\n    if [ ! -f lex.yy.c ]; then\n\techo 'main() { return 0; }' >lex.yy.c\n    fi\n    ;;\n\n  makeinfo)\n    echo 1>&2 \"\\\nWARNING: \\`$1' is missing on your system.  You should only need it if\n         you modified a \\`.texi' or \\`.texinfo' file, or any other file\n         indirectly affecting the aspect of the manual.  The spurious\n         call might also be the consequence of using a buggy \\`make' (AIX,\n         DU, IRIX).  You might want to install the \\`Texinfo' package or\n         the \\`GNU make' package.  Grab either from any GNU archive site.\"\n    file=`echo \"$*\" | sed -n 's/.*-o \\([^ ]*\\).*/\\1/p'`\n    if test -z \"$file\"; then\n      file=`echo \"$*\" | sed 's/.* \\([^ ]*\\) *$/\\1/'`\n      file=`sed -n '/^@setfilename/ { s/.* \\([^ ]*\\) *$/\\1/; p; q; }' $file`\n    fi\n    touch $file\n    ;;\n\n  *)\n    echo 1>&2 \"\\\nWARNING: \\`$1' is needed, and you do not seem to have it handy on your\n         system.  You might have modified some files without having the\n         proper tools for further handling them.  Check the \\`README' file,\n         it often tells you about the needed prerequirements for installing\n         this package.  You may also peek at any GNU archive site, in case\n         some other package would contain this missing \\`$1' program.\"\n    exit 1\n    ;;\nesac\n\nexit 0\n"
        },
        {
          "name": "mkinstalldirs",
          "type": "blob",
          "size": 0.6552734375,
          "content": "#! /bin/sh\n# mkinstalldirs --- make directory hierarchy\n# Author: Noah Friedman <friedman@prep.ai.mit.edu>\n# Created: 1993-05-16\n# Public domain\n\n# $Id$\n\nerrstatus=0\n\nfor file\ndo\n   set fnord `echo \":$file\" | sed -ne 's/^:\\//#/;s/^://;s/\\// /g;s/^#/\\//;p'`\n   shift\n\n   pathcomp=\n   for d\n   do\n     pathcomp=\"$pathcomp$d\"\n     case \"$pathcomp\" in\n       -* ) pathcomp=./$pathcomp ;;\n     esac\n\n     if test ! -d \"$pathcomp\"; then\n        echo \"mkdir $pathcomp\"\n\n        mkdir \"$pathcomp\" || lasterr=$?\n\n        if test ! -d \"$pathcomp\"; then\n  \t  errstatus=$lasterr\n        fi\n     fi\n\n     pathcomp=\"$pathcomp/\"\n   done\ndone\n\nexit $errstatus\n\n# mkinstalldirs ends here\n"
        },
        {
          "name": "pbx",
          "type": "tree",
          "content": null
        },
        {
          "name": "phoneprov",
          "type": "tree",
          "content": null
        },
        {
          "name": "res",
          "type": "tree",
          "content": null
        },
        {
          "name": "rest-api-templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "rest-api",
          "type": "tree",
          "content": null
        },
        {
          "name": "sample.call",
          "type": "blob",
          "size": 2.65625,
          "content": "#\n# This is a sample file that can be dumped in /var/spool/asterisk/outgoing\n# to generate a call.  For Asterisk to read call files, you must have the\n# pbx_spool.so module loaded.\n#\n# Comments are indicated by a '#' character that begins a line, or follows\n# a space or tab character.  To be consistent with the configuration files\n# in Asterisk, comments can also be indicated by a semicolon.  However, the\n# multiline comments (;-- --;) used in Asterisk configuration files are not\n# supported.  Semicolons can be escaped by a backslash.\n#\n\n# Obviously, you MUST specify at least a channel in the same format as you\n# would for the \"Dial\" application.  Only one channel name is permitted.\n#\nChannel: DAHDI/1\n#\n# You can specify codecs for the call\nCodecs: alaw, speex, h264\n#\n# You may also specify a wait time (default is 45 seconds) for how long to\n# wait for the channel to be answered, a retry time (default is 5 mins)\n# for how soon to retry this call, and a maximum number of retries (default\n# is 0) for how many times to retry this call.\n#\nMaxRetries: 2\nRetryTime: 60\nWaitTime: 30\n\n#\n# Once the call is answered, you must provide either an application/data\n# combination, or a context/extension/priority in which to start the PBX.\n#\nContext: default\nExtension: s\nPriority: 1\n\n#\n# Alternatively you can specify just an application\n# and its arguments to be run, instead of a context\n# extension and priority\n#\n#Application: VoiceMailMain\n#Data: 1234\n\n#\n# You can set the callerid that will be used for the outgoing call\n#\n#Callerid: Wakeup Call Service <(555) 555-5555>\n\n#\n# An account code can be specified the following way:\n#\n#Account: mysuperfunaccountcode\n\n#\n# Normally, a call file is always deleted after the call is successful\n# or the maximum number of tries is reached even if the modification\n# time of the call file was changed during the call to be in the\n# future.  By Setting AlwaysDelete to No the modification time of the\n# call file will be checked after the call is completed or the maximum\n# number of retries is reached.  If the modification time is in the\n# future, the call file will not be deleted.\n#\n#AlwaysDelete: Yes\n\n#\n# You can set channel variables that will be passed to the channel.\n# This includes writable dialplan functions. To set a writable dialplan\n# function, the module containing this function *must* be loaded.\n#\n#Set: file1=/tmp/to\n#Set: file2=/tmp/msg\n#Set: timestamp=20021023104500\n#Set: CDR(userfield,r)=42\n\n#\n# Setting Archive to yes the call file is never deleted, but is moved\n# in the subdir \"outgoing_done\" of the spool directory. In this case\n# will be appended a line with \"Status: value\", where value can be\n# Completed, Expired or Failed.\n#\n#Archive: yes\n"
        },
        {
          "name": "sounds",
          "type": "tree",
          "content": null
        },
        {
          "name": "static-http",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "third-party",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}