{
  "metadata": {
    "timestamp": 1736710113509,
    "page": 743,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "PipeWire/pipewire",
      "stars": 1857,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".codespell-ignore",
          "type": "blob",
          "size": 0.1015625,
          "content": "ba\ncapela\ncas\ncrasher\ndatas\nendcode\nfiles'\ngoin\nhda\nhist\nhve\ninport\nnd\nmmaped\nod\not\nparm\nsinc\nstdio\nuint"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.3984375,
          "content": "# http://editorconfig.org\nroot = true\n\n[*]\nindent_style = tab\nindent_size = 8\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n# Use 2 spaces for meson files\n[*.build]\nindent_style = space\nindent_size = 2\n\n[*.yml]\nindent_style = space\nindent_size = 2\n\n[*.{conf,conf.in}]\nindent_style = space\nindent_size = 4\n\n[*.{xml,xml.in}]\nindent_style = space\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.021484375,
          "content": "test/data/*.txt\t\tdiff\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.62109375,
          "content": ".*\n!.gitlab\nABOUT-NLS\n*~\n*.tar.gz\n*.tar.xz\n*.o\ncscope.out\ncscope.in.out\ncscope.po.out\nMakefile\nsubprojects/lua*\nsubprojects/wireplumber\nsubprojects/media-session\nsubprojects/packagecache\nsubprojects/googletest*\nsubprojects/gtest.wrap\nsubprojects/libyaml.wrap\nsubprojects/libyaml\nsubprojects/libcamera\nsubprojects/webrtc-audio-processing\n\n# Created by https://www.gitignore.io/api/vim\n\n### Vim ###\n# Swap\n[._]*.s[a-v][a-z]\n[._]*.sw[a-p]\n[._]s[a-rt-v][a-z]\n[._]ss[a-gi-z]\n[._]sw[a-p]\n\n# Session\nSession.vim\n\n# Temporary\n.netrwhist\n*~\n# Auto-generated tag files\ntags\n# Persistent undo\n[._]*.un~\n\n\n# End of https://www.gitignore.io/api/vim\n"
        },
        {
          "name": ".gitlab-ci.yml",
          "type": "blob",
          "size": 16.86328125,
          "content": "# Create merge request pipelines for open merge requests, branch pipelines\n# otherwise. This allows MRs for new users to run CI, and prevents duplicate\n# pipelines for branches with open MRs.\nworkflow:\n  rules:\n    - if: $CI_PIPELINE_SOURCE == \"merge_request_event\"\n    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS\n      when: never\n    - if: $CI_COMMIT_BRANCH\n\nstages:\n  - container\n  - container_coverity\n  - build\n  - analysis\n  - pages\n\nvariables:\n  FDO_UPSTREAM_REPO: 'pipewire/pipewire'\n\n# ci-templates as of Jan 27th 2022\n.templates_sha: &templates_sha 0c312d9c7255f46e741d43bcd1930f09cd12efe7\n\ninclude:\n  - project: 'freedesktop/ci-templates'\n    ref: *templates_sha\n    file: '/templates/fedora.yml'\n  - project: 'freedesktop/ci-templates'\n    ref: *templates_sha\n    file: '/templates/ubuntu.yml'\n  - project: 'freedesktop/ci-templates'\n    ref: *templates_sha\n    file: '/templates/alpine.yml'\n\n.fedora:\n  variables:\n    # Update this tag when you want to trigger a rebuild\n    FDO_DISTRIBUTION_TAG: '2024-12-10.0'\n    FDO_DISTRIBUTION_VERSION: '40'\n    FDO_DISTRIBUTION_PACKAGES: >-\n      alsa-lib-devel\n      avahi-devel\n      bluez-libs-devel\n      clang\n      dbus-devel\n      doxygen\n      fdk-aac-free-devel\n      findutils\n      gcc\n      gcc-c++\n      git\n      glib-devel\n      graphviz\n      gstreamer1-devel\n      gstreamer1-plugins-base-devel\n      jack-audio-connection-kit-devel\n      libasan\n      libcanberra-devel\n      libebur128-devel\n      libffado-devel\n      libldac-devel\n      libmysofa-devel\n      libsndfile-devel\n      libubsan\n      libusb1-devel\n      lilv-devel\n      libv4l-devel\n      libva-devel\n      libX11-devel\n      ModemManager-devel\n      meson\n      openssl-devel\n      pulseaudio-libs-devel\n      python3-docutils\n      python3-pip\n      sbc-devel\n      ShellCheck\n      SDL2-devel\n      systemd-devel\n      vulkan-loader-devel\n      webrtc-audio-processing-devel\n      which\n      valgrind\n      ninja-build\n      pkgconf\n      pulseaudio-utils\n      openal-soft\n      readline-devel\n      pandoc\n# Uncommenting the following two lines and disabling the meson entry above\n# will re-enable use of Meson via pip but please consider using a newer distro\n# image first or making the build system compatible instead! This is because\n# using pip or another 3rd party repo defeats the point testing the particular\n# distro for regressions.\n# NOTE: If you do end up using pip3 for meson, be sure to also update the\n# build_meson_prerelease and build_meson_exact_release build instructions\n# to uninstall the pip3 version again and probably to not call dnf remove\n#    FDO_DISTRIBUTION_EXEC: >-\n#      pip3 install meson\n\n.ubuntu:\n  variables:\n    # Update this tag when you want to trigger a rebuild\n    FDO_DISTRIBUTION_TAG: '2024-01-12.0'\n    FDO_DISTRIBUTION_VERSION: '22.04'\n    FDO_DISTRIBUTION_PACKAGES: >-\n      debhelper-compat\n      findutils\n      git\n      libapparmor-dev\n      libasound2-dev\n      libavcodec-dev\n      libavfilter-dev\n      libavformat-dev\n      libdbus-1-dev\n      libbluetooth-dev\n      libglib2.0-dev\n      libgstreamer1.0-dev\n      libgstreamer-plugins-base1.0-dev\n      libsbc-dev\n      libsdl2-dev\n      libsnapd-glib-dev\n      libudev-dev\n      libva-dev\n      libv4l-dev\n      libx11-dev\n      meson\n      ninja-build\n      pkg-config\n      python3-docutils\n      systemd\n# Uncommenting the following three lines and disabling the meson entry above\n# will re-enable use of Meson via pip but please consider using a newer distro\n# image first or making the build system compatible instead! This is because\n# using pip or another 3rd party repo defeats the point testing the particular\n# distro for regressions.\n#      python3-pip\n#    FDO_DISTRIBUTION_EXEC: >-\n#      pip3 install meson\n\n.alpine:\n  variables:\n    # Update this tag when you want to trigger a rebuild\n    FDO_DISTRIBUTION_TAG: '2024-09-20.0'\n    FDO_DISTRIBUTION_VERSION: '3.20'\n    FDO_DISTRIBUTION_PACKAGES: >-\n      alsa-lib-dev\n      avahi-dev\n      bash\n      bluez-dev\n      gcc\n      g++\n      dbus-dev\n      doxygen\n      elogind-dev\n      eudev-dev\n      fdk-aac-dev\n      git\n      glib-dev\n      graphviz\n      gst-plugins-base-dev\n      gstreamer-dev\n      jack-dev\n      libfreeaptx-dev\n      libusb-dev\n      libx11-dev\n      meson\n      modemmanager-dev\n      ncurses-dev\n      pulseaudio-dev\n      readline-dev\n      sbc-dev\n      vulkan-loader-dev\n      xmltoman\n\n.coverity:\n  variables:\n    FDO_REPO_SUFFIX: 'coverity'\n    FDO_BASE_IMAGE: registry.freedesktop.org/$FDO_UPSTREAM_REPO/fedora/$FDO_DISTRIBUTION_VERSION:$FDO_DISTRIBUTION_TAG\n    FDO_DISTRIBUTION_PACKAGES: >-\n      curl\n    FDO_DISTRIBUTION_EXEC: >-\n      mkdir -p /opt ;\n      cd /opt ;\n      curl -o /tmp/cov-analysis-linux64.tgz https://scan.coverity.com/download/cxx/linux64\n      --form project=$COVERITY_SCAN_PROJECT_NAME --form token=$COVERITY_SCAN_TOKEN ;\n      tar xf /tmp/cov-analysis-linux64.tgz ;\n      mv cov-analysis-linux64-* coverity ;\n      rm /tmp/cov-analysis-linux64.tgz\n  rules:\n    - if: $COVERITY != null\n\n.not_coverity:\n  rules:\n    - if: $COVERITY == null\n\n.build:\n  before_script:\n    # setup the environment\n    - export BUILD_ID=\"$CI_JOB_ID\"\n    - export PREFIX=\"$PWD/prefix-$BUILD_ID\"\n    - export BUILD_DIR=\"$PWD/build-$BUILD_ID\"\n    - export XDG_RUNTIME_DIR=\"$(mktemp -p $PWD -d xdg-runtime-XXXXXX)\"\n    - |\n      if [ -n \"$FDO_CI_CONCURRENT\" ]; then\n         COMPILE_ARGS=\"-j$FDO_CI_CONCURRENT\"\n         export COMPILE_ARGS\n      fi\n  script:\n    - echo \"Building with meson options $MESON_OPTIONS\"\n    - meson setup \"$BUILD_DIR\" --prefix=\"$PREFIX\" $MESON_OPTIONS\n    - meson compile -C \"$BUILD_DIR\" $COMPILE_ARGS\n    - meson test -C \"$BUILD_DIR\" --no-rebuild\n    - meson install -C \"$BUILD_DIR\" --no-rebuild\n  artifacts:\n    name: pipewire-$CI_COMMIT_SHA\n    when: always\n    paths:\n      - build-*/meson-logs\n\ncontainer_ubuntu:\n  extends:\n    - .ubuntu\n    - .fdo.container-build@ubuntu\n  stage: container\n  variables:\n    GIT_STRATEGY: none # no need to pull the whole tree for rebuilding the image\n\ncontainer_fedora:\n  extends:\n    - .fedora\n    - .fdo.container-build@fedora\n  stage: container\n  variables:\n    GIT_STRATEGY: none # no need to pull the whole tree for rebuilding the image\n\ncontainer_alpine:\n  extends:\n    - .alpine\n    - .fdo.container-build@alpine\n  stage: container\n  variables:\n    GIT_STRATEGY: none # no need to pull the whole tree for rebuilding the image\n\ncontainer_coverity:\n  extends:\n    - .fedora\n    - .coverity\n    - .fdo.container-build@fedora\n  stage: container_coverity\n  variables:\n    GIT_STRATEGY: none\n\nbuild_on_ubuntu:\n  extends:\n    - .ubuntu\n    - .not_coverity\n    - .fdo.distribution-image@ubuntu\n    - .build\n  stage: build\n  variables:\n    MESON_OPTIONS: \"-Dsession-managers=[] -Dsnap=enabled\"\n\n.build_on_fedora:\n  extends:\n    - .fedora\n    - .not_coverity\n    - .fdo.distribution-image@fedora\n    - .build\n  stage: build\n\nbuild_on_fedora:\n  extends:\n    - .build_on_fedora\n  variables:\n    MESON_OPTIONS: >-\n        -Ddocs=enabled\n        -Dman=enabled\n        -Ddoc-prefix-value=/usr\n        -Ddoc-sysconfdir-value=/etc\n        -Dinstalled_tests=enabled\n        -Dsystemd-system-service=enabled\n        -Dbluez5-backend-hsphfpd=enabled\n        -Daudiotestsrc=enabled\n        -Dtest=enabled\n        -Dvideotestsrc=enabled\n        -Dvolume=enabled\n        -Dvulkan=enabled\n        -Dsdl2=enabled\n        -Dsndfile=enabled\n        -Dsession-managers=[]\n        -Dsnap=disabled\n  artifacts:\n    name: pipewire-$CI_COMMIT_SHA\n    when: always\n    paths:\n      - build-*/meson-logs\n      - prefix-*\n\nbuild_on_fedora_html_docs:\n  extends:\n    - .build_on_fedora\n  variables:\n    MESON_OPTIONS: >-\n        -Ddocs=enabled\n        -Dman=enabled\n        -Ddoc-prefix-value=/usr\n        -Ddoc-sysconfdir-value=/etc\n        -Dinstalled_tests=enabled\n        -Dsystemd-system-service=enabled\n        -Dbluez5-backend-hsphfpd=enabled\n        -Daudiotestsrc=enabled\n        -Dtest=enabled\n        -Dvideotestsrc=enabled\n        -Dvolume=enabled\n        -Dvulkan=enabled\n        -Dsdl2=enabled\n        -Dsndfile=enabled\n        -Dsession-managers=[]\n  before_script:\n    - git fetch origin 1.0 1.2 master\n    - git branch -f 1.0 origin/1.0\n    - git clone -b 1.0 . branch-1.0\n    - git branch -f 1.2 origin/1.2\n    - git clone -b 1.2 . branch-1.2\n    - git branch -f master origin/master\n    - git clone -b master . branch-master\n    - !reference [.build, before_script]\n  script:\n    - cd branch-1.0\n    - meson setup builddir $MESON_OPTIONS\n    - meson compile -C builddir doc/pipewire-docs\n    - cd ..\n    - cd branch-1.2\n    - meson setup builddir $MESON_OPTIONS\n    - meson compile -C builddir doc/pipewire-docs\n    - cd ..\n    - cd branch-master\n    - meson setup builddir $MESON_OPTIONS\n    - meson compile -C builddir doc/pipewire-docs\n  artifacts:\n    name: pipewire-$CI_COMMIT_SHA\n    when: always\n    paths:\n      - branch-*/builddir/meson-logs\n      - branch-*/builddir/doc/html\n  rules:\n    - !reference [pages, rules]\n\nbuild_on_alpine:\n  extends:\n    - .alpine\n    - .not_coverity\n    - .fdo.distribution-image@alpine\n    - .build\n  stage: build\n  variables:\n    MESON_OPTIONS: \"-Dsession-managers=[] -Dsnap=disabled -Dlogind=enabled -Dlogind-provider=libelogind\"\n\n# build with all auto() options enabled\nbuild_all:\n  extends:\n    - .build_on_fedora\n  variables:\n    # Fedora doesn't have libfreeaptx, lc3plus, lc3, or roc\n    # libcamera has no stable API, so let's not chase that target\n    MESON_OPTIONS: >-\n        -Dauto_features=enabled\n        -Dbluez5-codec-aptx=disabled\n        -Dbluez5-codec-lc3plus=disabled\n        -Dbluez5-codec-lc3=disabled\n        -Droc=disabled\n        -Dlibcamera=disabled\n        -Dsession-managers=[]\n        -Dc_args=['-UFASTPATH']\n        -Dcpp_args=['-UFASTPATH']\n        -Dsnap=disabled\n  parallel:\n    matrix:\n      - CC: [gcc, clang]\n\n# build with all options on auto() or their default values\nbuild_with_no_commandline_options:\n  extends:\n    - .build_on_fedora\n  variables:\n    MESON_OPTIONS: \"-Dsession-managers=[] -Dsnap=disabled\"\n  parallel:\n    matrix:\n      - CC: [gcc, clang]\n\n# build with a set of options enabled or disabled\nbuild_with_custom_options:\n  extends:\n    - .build_on_fedora\n  parallel:\n    matrix:\n      - MESON_OPTION: [docs, installed_tests, systemd-system-service, bluez5-backend-hsphfpd,\n                       audiotestsrc, test, videotestsrc, volume, vulkan, sdl2, sndfile]\n        MESON_OPTION_VALUE: [enabled, disabled]\n  script:\n    - echo \"Building with -D$MESON_OPTION=$MESON_OPTION_VALUE\"\n    - meson setup \"$BUILD_DIR\" --prefix=\"$PREFIX\" \"-D$MESON_OPTION=$MESON_OPTION_VALUE\" -Dsession-managers=[]\n    - meson compile -C \"$BUILD_DIR\" $COMPILE_ARGS\n    - meson test -C \"$BUILD_DIR\" --no-rebuild\n\nbuild_with_asan_ubsan:\n  extends:\n    - .build_on_fedora\n  script:\n    - echo \"Building with ASan and UBSan\"\n    - meson setup \"$BUILD_DIR\" --prefix=\"$PREFIX\" -D debug=true -D optimization=g -D b_sanitize=address,undefined -D session-managers=[]\n    - meson compile -C \"$BUILD_DIR\" $COMPILE_ARGS\n    - env UBSAN_OPTIONS=halt_on_error=1:abort_on_error=1:print_summary=1:print_stacktrace=1 ASAN_OPTIONS=halt_on_error=1:abort_on_error=1:print_summary=1 meson test -C \"$BUILD_DIR\" --no-rebuild\n\n# A release build with NDEBUG, all options on auto() but tests explicitly\n# enabled. This should show issues with tests failing due to different\n# optimization or relying on assert.\nbuild_release:\n  extends:\n    - .build_on_fedora\n  variables:\n    MESON_OPTIONS: \"-Dtest=enabled -Dbuildtype=release -Db_ndebug=true -Dsession-managers=[] -Dsnap=disabled\"\n  parallel:\n    matrix:\n      - CC: [gcc, clang]\n\nbuild_session_managers:\n  extends:\n    - .build_on_fedora\n  script:\n    - echo \"Building with meson options $MESON_OPTIONS\"\n    - meson setup \"$BUILD_DIR\" --prefix=\"$PREFIX\" $MESON_OPTIONS\n    - meson compile -C \"$BUILD_DIR\" $COMPILE_ARGS\n    - meson install -C \"$BUILD_DIR\" --no-rebuild\n  variables:\n    MESON_OPTIONS: \"-Dsession-managers=$SESSION_MANAGERS -Dsnap=disabled\"\n  parallel:\n    matrix:\n      - SESSION_MANAGERS: [\"[]\", \"wireplumber\", \"media-session\", \"media-session,wireplumber\", \"wireplumber,media-session\" ]\n  allow_failure: true\n\nbuild_meson_prerelease:\n  extends:\n    - .build_on_fedora\n  script:\n    - dnf remove --assumeyes meson\n    - pip3 install --upgrade --pre meson\n    - echo \"Building with meson options $MESON_OPTIONS\"\n    - meson setup \"$BUILD_DIR\" --prefix=\"$PREFIX\" $MESON_OPTIONS\n    - meson compile -C \"$BUILD_DIR\" $COMPILE_ARGS\n    - meson install -C \"$BUILD_DIR\" --no-rebuild\n  variables:\n    MESON_OPTIONS: \"-Dsession-managers=wireplumber,media-session -Dsnap=disabled\"\n  allow_failure: true\n\nbuild_meson_exact_release:\n  extends:\n    - .build_on_fedora\n  script:\n    - meson_version=$(head -n 5 meson.build | grep 'meson_version' | sed -e 's/.*\\([0-9]\\+\\.[0-9]\\+\\.[0-9]\\+\\).*/\\1/')\n    - echo \"Requiring meson version $meson_version\"\n    - test -n \"$meson_version\" || (echo \"Meson version parser failed\" && exit 1)\n    - dnf remove --assumeyes meson\n#    - pip3 uninstall --yes meson\n    - pip3 install \"meson==$meson_version\"\n    - echo \"Building with meson options $MESON_OPTIONS\"\n    - meson setup \"$BUILD_DIR\" --prefix=\"$PREFIX\" $MESON_OPTIONS\n    - meson compile -C \"$BUILD_DIR\" $COMPILE_ARGS\n    - meson install -C \"$BUILD_DIR\" --no-rebuild\n  variables:\n    MESON_OPTIONS: \"-Dsession-managers=[] -Dsnap=disabled\"\n\nvalgrind:\n  extends:\n    - .build_on_fedora\n  script:\n    - echo \"Building with meson options $MESON_OPTIONS\"\n    - meson setup \"$BUILD_DIR\" --prefix=\"$PREFIX\" $MESON_OPTIONS\n    - meson test -C \"$BUILD_DIR\" --setup=valgrind\n  variables:\n    MESON_OPTIONS: \"-Dsession-managers=[]\"\n\nbuild_with_coverity:\n  extends:\n    - .fedora\n    - .coverity\n    - .fdo.suffixed-image@fedora\n    - .build\n  stage: analysis\n  script:\n    - export PATH=/opt/coverity/bin:$PATH\n    - meson setup \"$BUILD_DIR\" --prefix=\"$PREFIX\"\n        -Ddocs=disabled\n        -Dbluez5-backend-hsphfpd=enabled\n        -Daudiotestsrc=enabled\n        -Dtest=enabled\n        -Dvideotestsrc=enabled\n        -Dvolume=enabled\n        -Dvulkan=enabled\n        -Dsdl2=enabled\n        -Dsndfile=enabled\n        -Dsession-managers=[]\n    - cov-configure --config coverity_conf.xml\n        --comptype gcc --compiler cc --template\n        --xml-option=append_arg@C:--ppp_translator\n        --xml-option=append_arg@C:\"replace/_sd_deprecated_\\s+=/ =\"\n        --xml-option=append_arg@C:--ppp_translator\n        --xml-option=append_arg@C:\"replace/GLIB_(DEPRECATED|AVAILABLE)_ENUMERATOR_IN_\\d_\\d\\d(_FOR\\(\\w+\\)|)\\s+=/ =\"\n        --xml-option=append_arg@C:--ppp_translator\n        --xml-option=append_arg@C:\"replace/(__has_builtin|_GLIBCXX_HAS_BUILTIN)\\(\\w+\\)/1\"\n    - cov-build --dir cov-int --config coverity_conf.xml meson compile -C \"$BUILD_DIR\" $COMPILE_ARGS\n    - tar czf cov-int.tar.gz cov-int\n    - curl https://scan.coverity.com/builds?project=$COVERITY_SCAN_PROJECT_NAME\n        --form token=$COVERITY_SCAN_TOKEN --form email=$GITLAB_USER_EMAIL\n        --form file=@cov-int.tar.gz --form version=\"`git describe --tags`\"\n        --form description=\"`git describe --tags` / $CI_COMMIT_TITLE / $CI_COMMIT_REF_NAME:$CI_PIPELINE_ID \"\n  artifacts:\n    name: pipewire-coverity-$CI_COMMIT_SHA\n    when: always\n    paths:\n      - build-*/meson-logs\n      - cov-int/build-log.txt\n\nshellcheck:\n  extends:\n    - .build_on_fedora\n  stage: analysis\n  variables:\n    MESON_OPTIONS: >-\n        -Dpipewire-v4l2=enabled\n        -Dpipewire-jack=enabled\n  script:\n    - echo \"Configuring with meson options $MESON_OPTIONS\"\n    - meson setup \"$BUILD_DIR\" --prefix=\"$PREFIX\" $MESON_OPTIONS\n    - shellcheck $(git ls-files '*.sh')\n    - shellcheck $(grep -rl \"#\\!/.*bin/.*sh\" \"$BUILD_DIR\")\n\nspellcheck:\n  extends:\n    - .build_on_fedora\n  stage: analysis\n  script:\n    - git ls-files | grep -v .gitlab-ci.yml | xargs -d '\\n' sed -i 's/Pipewire/PipeWire/g'\n    - git diff --exit-code || (echo \"Please fix the above spelling mistakes\" && exit 1)\n\ndoccheck:\n  extends:\n    - .build_on_fedora\n  stage: analysis\n  script:\n    # Check that each pipewire module has a \\subpage entry\n    - git grep -h -o -e \"\\\\\\page page_module_\\w\\+\" | cut -f2 -d ' ' > pipewire_module_pages\n    - cat pipewire_module_pages\n    - |\n      for page in $(cat pipewire_module_pages); do\n          git grep -q -e \"\\\\\\subpage $page\" || (echo \"\\\\page $page is missing \\\\subpage entry in doc/pipewire-modules.dox\" && false)\n      done\n\ncheck_missing_headers:\n  extends:\n    - .fedora\n    - .not_coverity\n    - .fdo.distribution-image@fedora\n  stage: analysis\n  dependencies:\n    - build_on_fedora\n  script:\n    - export PREFIX=`find -name prefix-*`\n    - ./.gitlab/ci/check_missing_headers.sh\n\npages:\n  extends:\n    - .not_coverity\n  stage: pages\n  dependencies:\n    - build_on_fedora_html_docs\n  script:\n    - mkdir public public/1.0 public/1.2 public/devel\n    - cp -R branch-1.0/builddir/doc/html/* public/1.0/\n    - cp -R branch-1.2/builddir/doc/html/* public/1.2/\n    - cp -R branch-master/builddir/doc/html/* public/devel/\n    - (cd public && ln -s 1.2/* .)\n  artifacts:\n    paths:\n      - public\n  rules:\n    - if: $CI_COMMIT_BRANCH == 'master'\n    - if: $CI_COMMIT_BRANCH == '1.0'\n    - if: $CI_COMMIT_BRANCH == '1.2'\n"
        },
        {
          "name": ".gitlab",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.3125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to make participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies within all project spaces, and it also applies when\nan individual is representing the project or its community in public spaces.\nExamples of representing a project or community include using an official\nproject e-mail address, posting via an official social media account, or acting\nas an appointed representative at an online or offline event. Representation of\na project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at pipewire-maintainers@lists.freedesktop.org. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 1.189453125,
          "content": "Copyright © 2018 Wim Taymans\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the \"Software\"),\nto deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense,\nand/or sell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice (including the next\nparagraph) shall be included in all copies or substantial portions of the\nSoftware.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\nTHE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\nDEALINGS IN THE SOFTWARE.\n\n---\n\nThe above is the version of the MIT \"Expat\" License used by X.org:\n\n    http://cgit.freedesktop.org/xorg/xserver/tree/COPYING\n"
        },
        {
          "name": "INSTALL.md",
          "type": "blob",
          "size": 6.8818359375,
          "content": "## Building\n\nPipeWire uses a build tool called [*Meson*](https://mesonbuild.com) as a basis for its build\nprocess.  It's a tool with some resemblance to Autotools and CMake. Meson\nagain generates build files for a lower level build tool called [*Ninja*](https://ninja-build.org/),\nworking in about the same level of abstraction as more familiar GNU Make\ndoes.\n\nMeson uses a user-specified build directory and all files produced by Meson\nare in that build directory. This build directory will be called `builddir`\nin this document.\n\nGenerate the build files for Ninja:\n\n```\n$ meson setup builddir\n```\n\nFor distribution-specific build dependencies, please check our\n[CI pipeline](https://gitlab.freedesktop.org/pipewire/pipewire/-/blob/master/.gitlab-ci.yml)\n(search for `FDO_DISTRIBUTION_PACKAGES`). Note that some dependencies are\noptional and depend on options passed to meson.\n\nOnce this is done, the next step is to review the build options:\n\n```\n$ meson configure builddir\n```\n\nDefine the installation prefix:\n\n```\n$ meson configure builddir -Dprefix=/usr # Default: /usr/local\n```\n\nPipeWire specific build options are listed in the \"Project options\"\nsection. They are defined in `meson_options.txt`.\n\nFinally, invoke the build:\n\n```\n$ meson compile -C builddir\n```\n\nJust to avoid any confusion: `autogen.sh` is a script invoked by *Jhbuild*,\nwhich orchestrates multi-component builds.\n\n## Running\n\nIf you want to run PipeWire without installing it on your system, there is a\nscript that you can run. This puts you in an environment in which PipeWire can\nbe run from the build directory, and ALSA, PulseAudio and JACK applications\nwill use the PipeWire emulation libraries automatically\nin this environment. You can get into this environment with:\n\n```\n$ ./pw-uninstalled.sh -b builddir\n```\n\nIn most cases you would want to run the default pipewire daemon. Look\nbelow for how to make this daemon start automatically using systemd.\nIf you want to run pipewire from the build directory, you can do this\nby doing:\n\n```\ncd builddir/\nmake run\n```\n\nThis will use the default config file to configure and start the daemon.\nThe default config will also start `pipewire-media-session`, a default\nexample media session and `pipewire-pulse`, a PulseAudio compatible server.\n\nYou can also enable more debugging with the `PIPEWIRE_DEBUG` and\n`WIREPLUMBER_DEBUG` environment variables like so:\n\n```\ncd builddir/\nPIPEWIRE_DEBUG=\"D\" WIREPLUMBER_DEBUG=\"D\" make run\n```\n\nYou might have to stop the pipewire service/socket that might have been\nstarted already, with:\n\n```\nsystemctl --user stop pipewire.service \\\n                      pipewire.socket \\\n                      pipewire-media-session.service \\\n                      pipewire-pulse.service \\\n                      pipewire-pulse.socket\n```\n\n## Installing\n\nPipeWire comes with quite a bit of libraries and tools, run:\n\n```\nmeson install -C builddir\n```\n\nto install everything onto the system into the specified prefix.\nDepending on the configured installation prefix, the above command\nmay need to be run with elevated privileges (e.g. with `sudo`).\nSome additional steps will have to be performed to integrate\nwith the distribution as shown below.\n\n### PipeWire daemon\n\nA correctly installed PipeWire system should have a pipewire\nprocess, a pipewire-media-session (or alternative) and an (optional)\npipewire-pulse process running. PipeWire is usually started as a\nsystemd unit using socket activation or as a service.\n\nConfiguration of the PipeWire daemon can be found in\n`/usr/share/pipewire/pipewire.conf`. Please refer to the comments in the\nconfig file for more information about the configuration options.\n\nThe daemon is started with:\n```\nsystemctl --user start pipewire.service pipewire.socket\n```\n\nIf you did not start the media-session in pipewire.conf, you will\nalso need to start it like this:\n```\nsystemctl --user start pipewire-media-session.service\n```\nTo make it start on system startup:\n```\nsystemctl --user enable pipewire-media-session.service\n```\nyou can write ```enable --now``` to start service immediately.\n\n### ALSA plugin\n\nThe ALSA plugin is usually installed in:\n\nOn Fedora:\n```\n/usr/lib64/alsa-lib/libasound_module_pcm_pipewire.so\n```\nOn Ubuntu:\n```\n/usr/lib/x86_64-linux-gnu/alsa-lib/libasound_module_pcm_pipewire.so\n```\n\nThere is also a config file installed in:\n\n```\n/usr/share/alsa/alsa.conf.d/50-pipewire.conf\n```\n\nThe plugin will be picked up by alsa when the following files\nare in `/etc/alsa/conf.d/`:\n\n```\n/etc/alsa/conf.d/50-pipewire.conf -> /usr/share/alsa/alsa.conf.d/50-pipewire.conf\n/etc/alsa/conf.d/99-pipewire-default.conf\n```\n\nWith this setup, `aplay -l` should list a pipewire device that can be used as\na regular alsa device for playback and record.\n\n### JACK emulation\n\nPipeWire reimplements the 3 libraries that JACK applications use to make\nthem run on top of PipeWire.\n\nThese libraries are found here:\n\n```\n/usr/lib64/pipewire-0.3/jack/libjacknet.so -> libjacknet.so.0\n/usr/lib64/pipewire-0.3/jack/libjacknet.so.0 -> libjacknet.so.0.304.0\n/usr/lib64/pipewire-0.3/jack/libjacknet.so.0.304.0\n/usr/lib64/pipewire-0.3/jack/libjackserver.so -> libjackserver.so.0\n/usr/lib64/pipewire-0.3/jack/libjackserver.so.0 -> libjackserver.so.0.304.0\n/usr/lib64/pipewire-0.3/jack/libjackserver.so.0.304.0\n/usr/lib64/pipewire-0.3/jack/libjack.so -> libjack.so.0\n/usr/lib64/pipewire-0.3/jack/libjack.so.0 -> libjack.so.0.304.0\n/usr/lib64/pipewire-0.3/jack/libjack.so.0.304.0\n\n```\n\nThe provided `pw-jack` script uses `LD_LIBRARY_PATH` to set the library\nsearch path to these replacement libraries. This allows you to run\njack apps on both the real JACK server or on PipeWire with the script.\n\nIt is also possible to completely replace the JACK libraries by adding\na file `pipewire-jack-x86_64.conf` to `/etc/ld.so.conf.d/` with\ncontents like:\n\n```\n/usr/lib64/pipewire-0.3/jack/\n```\n\nNote that when JACK is replaced by PipeWire, the SPA JACK plugin (installed\nin `/usr/lib64/spa-0.2/jack/libspa-jack.so`) is not useful anymore and\ndistributions should make them conflict.\n\n\n### PulseAudio replacement\n\nPipeWire reimplements the PulseAudio server protocol as a small service\nthat runs on top of PipeWire.\n\nThe binary is normally placed here:\n\n```\n/usr/bin/pipewire-pulse\n```\n\nThe server can be started with provided systemd activation files or\nfrom PipeWire itself. (See `/usr/share/pipewire/pipewire.conf`)\n\n```\nsystemctl --user start pipewire-pulse.service pipewire-pulse.socket\n```\n\nYou can also start additional PulseAudio servers listening on other\nsockets with the `-a` option. See `pipewire-pulse -h` for more info.\n\n\n## Uninstalling\n\nTo uninstall, run:\n\n```\nninja -C builddir uninstall\n```\n\nDepending on the configured installation prefix, the above command\nmay need to be run with elevated privileges (e.g. with `sudo`).\n\nNote that at the time of writing uninstallation only works with the\nsame build directory that was used for installation. Meson stores the\nlist of installed files in the build directory, and this list is\nnecessary for uninstallation to work.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.3408203125,
          "content": "All PipeWire source files are licensed under the MIT License.\n(see file COPYING for details)\n\nWith the exception of:\n\n  libspa-alsa.so in spa/plugins/alsa, which contains LGPL code from\n                  Pulseaudio and is thus licensed as LGPL.\n\n  libjackserver.so which links against the GPL2 jack/control.h, which\n                  makes it GPL2\n\n"
        },
        {
          "name": "Makefile.in",
          "type": "blob",
          "size": 2.150390625,
          "content": "VERSION = @VERSION@\nTAG = @TAG@\nSOURCE_ROOT = @SOURCE_ROOT@\nBUILD_ROOT = @BUILD_ROOT@\n\nall:\n\tninja -C $(BUILD_ROOT)\n\ninstall:\n\tninja -C $(BUILD_ROOT) install\n\nuninstall:\n\tninja -C $(BUILD_ROOT) uninstall\n\nclean:\n\tninja -C $(BUILD_ROOT) clean\n\nrun: all\n\tSPA_PLUGIN_DIR=$(BUILD_ROOT)/spa/plugins \\\n\tSPA_DATA_DIR=$(SOURCE_ROOT)/spa/plugins \\\n\tPIPEWIRE_MODULE_DIR=$(BUILD_ROOT)/src/modules \\\n\tPATH=$(BUILD_ROOT)/src/examples:$(PATH) \\\n\tPIPEWIRE_CONFIG_DIR=$(BUILD_ROOT)/src/daemon \\\n\tACP_PATHS_DIR=$(SOURCE_ROOT)/spa/plugins/alsa/mixer/paths \\\n\tACP_PROFILES_DIR=$(SOURCE_ROOT)/spa/plugins/alsa/mixer/profile-sets \\\n\t$(DBG) $(BUILD_ROOT)/src/daemon/pipewire-uninstalled\n\nrun-pulse: all\n\tSPA_PLUGIN_DIR=$(BUILD_ROOT)/spa/plugins \\\n\tSPA_DATA_DIR=$(SOURCE_ROOT)/spa/plugins \\\n\tPIPEWIRE_MODULE_DIR=$(BUILD_ROOT)/src/modules \\\n\tPIPEWIRE_CONFIG_DIR=$(BUILD_ROOT)/src/daemon \\\n\tACP_PATHS_DIR=$(SOURCE_ROOT)/spa/plugins/alsa/mixer/paths \\\n\tACP_PROFILES_DIR=$(SOURCE_ROOT)/spa/plugins/alsa/mixer/profile-sets \\\n\t$(DBG) $(BUILD_ROOT)/src/daemon/pipewire-pulse\n\ngdb:\n\t$(MAKE) run DBG=gdb\n\nvalgrind:\n\t$(MAKE) run DBG=\"DISABLE_RTKIT=1 PIPEWIRE_DLCLOSE=false valgrind --trace-children=yes --leak-check=full\"\n\ntest: all\n\tninja -C $(BUILD_ROOT) test\n\nbenchmark: all\n\tninja -C $(BUILD_ROOT) benchmark\n\nmonitor: all\n\tSPA_PLUGIN_DIR=$(BUILD_ROOT)/spa/plugins \\\n\tSPA_DATA_DIR=$(SOURCE_ROOT)/spa/plugins \\\n\tPIPEWIRE_MODULE_DIR=$(BUILD_ROOT)/src/modules/ \\\n\t$(BUILD_ROOT)/src/tools/pw-mon\n\ncli: all\n\tSPA_PLUGIN_DIR=$(BUILD_ROOT)/spa/plugins \\\n\tSPA_DATA_DIR=$(SOURCE_ROOT)/spa/plugins \\\n\tPIPEWIRE_MODULE_DIR=$(BUILD_ROOT)/src/modules/ \\\n\t$(BUILD_ROOT)/src/tools/pw-cli\n\nshell: all\n\tninja -C $(BUILD_ROOT) pw-uninstalled\n\ndist: all\n\tgit archive --prefix=pipewire-$(VERSION)/ -o pipewire-$(VERSION).tar.gz $(TAG)\n\nrpm: dist\n\trpmbuild -ta pipewire-$(VERSION).tar.gz\n\npublish: all\n\tgit branch -D gh-pages 2>/dev/null || true && \\\n\tgit branch -D draft 2>/dev/null || true && \\\n\tgit checkout -b draft && \\\n\tgit add -f $(BUILD_ROOT)/doc/html && \\\n\tgit commit -anm \"Deploy on gh-pages\" && \\\n\tgit subtree split --prefix $(BUILD_ROOT)/doc/html -b gh-pages && \\\n\tgit push --force origin gh-pages:gh-pages && \\\n\tgit checkout work 2>/dev/null\n"
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 293.591796875,
          "content": "# PipeWire 1.2.7 (2024-11-26)\n\nThis is a bugfix release that is API and ABI compatible with the previous\n1.2.x and 1.0.x releases.\n\n## Highlights\n  - Backport support for lazy scheduling.\n  - Handle the case where processing would stop when an ALSA driver is\n    destroyed.\n  - Add support for v4l2loopback in the v4l2 plugin.\n  - Small bug fixes and improvements.\n\n## PipeWire\n  - Invalidate the proxy ID when removed.\n  - Backport support for lazy scheduling.\n  - Fix profiler stats for async nodes.\n  - Fix EARLY_PROCESS again in pw-stream. (#3480)\n\n## Modules\n  - Fix a crasher issue when nodes are created in the wrong order in\n    module-filter-chain.\n  - Fix unmap bug in lv2 uri tables.\n  - Add ratelimit to jack-tunnel xruns.\n  - Remove hardcoded limit in filter-chain sofa plugin.\n  - Handle the MTU size correctly in module-rtp and handle large MTUs.\n    (#4396)\n  - Fix JSON float parsing errors in equalizer module. (#4418)\n\n## SPA\n  - Fix crash in audiotestsrc when using spa-inspect (#4365).\n  - Improve JSON float infinity checks.\n  - Improve resampler performace a little.\n  - Make audioconvert only output when there is something to output.\n  - Fix regression in v4l2 port flags which would disable support for\n    EXPBUF.\n  - Handle the case where an ALSA driver is destroyed and the follower\n    becomes a driver. Processing would stop. (#4401)\n  - Add support for v4l2loopback in the v4l2 plugin.\n\n## Pulse-server\n  - Give a better error message when running out of fds.\n  - Ensure positive latency reporting.\n\n## GStreamer\n  - Fix memory leak in deviceprovider.\n  - Fix locking when emitting an error.\n\n## Tools\n  - Fix pw-dot link labels.\n\nOlder versions:\n\n\n# PipeWire 1.2.6 (2024-10-23)\n\nThis is a bugfix release that is API and ABI compatible with the previous\n1.2.x and 1.0.x releases.\n\n## Highlights\n  - The filter-chain param changes were not aggregated correctly, causing some\n    param changes to be ignored. (#4331)\n  - Clear the JACK io ports correctly when stopping to avoid crashes. (#4337)\n  - Some more small fixes and improvements.\n\n\n## PipeWire\n  - Stream states are now updated based on the underlying node state.\n  - Exported nodes now have their state change done synchronously so that the\n    server can immediately start the driver and avoid some initial xruns.\n  - Improve stream flush handling and improve the docs.\n  - Don't send mix_info to destroyed ports to avoid some errors in the\n    JACK clients.\n\n## Modules\n  - The filter-chain param changes were not aggregated correctly, causing some\n    param changes to be ignored. (#4331)\n  - The filter-chain now correctly optimizes unlinked nodes in all cases.\n\n## SPA\n  - ALSA PCM node properties are now no longer overwritten with card properties.\n    (#4135)\n  - Increase the adapter retry count to avoid xruns in some cases. (#4334)\n  - Fix potential crash in cleanup of ALSA nodes.\n\n## Bluetooth\n  - Fix a crash with broadcast sinks.\n  - Improve compatibility with Phonak hearing aids.\n  - Don't exit when DBus goes down.\n\n## JACK\n  - Clear the io ports correctly when stopping to avoid crashes. (#4337)\n\n## Docs\n  - Backport docs from master.\n\n# PipeWire 1.0.9 (2024-10-22)\n\nThis is a bugfix release that is API and ABI compatible with previous\n1.0.x releases.\n\n## Highlights\n  - Fix an fd leak and confusion in the protocol that would cause leaks and\n    wrong memory to be used.\n  - Fix bug where the mixer would not be synced correctly after selecting\n    a port, leaving the audio muted. (#4084)\n  - Backport v4l2 systemd-logind support to avoid races when starting.\n    (#3539 and #3960).\n  - Other small fixed and improvements.\n\n\n## PipeWire\n  - Fix a bug where renegotiation would sometimes fail to deactivate a link.\n  - Fix an fd leaks and confusion in the protocol.\n\n## modules\n  - Fix a use-after-free in the rt module when stopping a thread.\n\n## SPA\n  - Fix bug where the mixer would not be synced correctly after selecting\n    a port, leaving the audio muted. (#4084)\n  - Fix a compilation issue with empty initializers. (#4317)\n  - Backport v4l2 systemd-logind support to avoid races when starting.\n    (#3539 and #3960).\n  - Fix a potential crash when cleaning ALSA nodes.\n\n## JACK\n  - align buffers to the max cpu alignment in order to allow more\n    optimizations.\n\n# PipeWire 1.2.5 (2024-09-27)\n\nThis is an important bugfix release that is API and ABI compatible with the\nprevious 1.2.x and 1.0.x releases.\n\n## Highlights\n  - Fix an fd mismatch in the protocol in some cases that could lead to\n    fd leaks and crashes.\n  - Fix a bug where the mixer was not updated after setting the port, which would\n    cause muted audio at boot or resume from suspend.\n  - Fix a potential use-after-free in module-rt when stopping a thread.\n  - Cached objects are now freed in the JACK API to avoid memory leaks.\n  - Some more fixes and improvements.\n\n\n## PipeWire\n  - RequestProcess commands are now only sent after the node completes\n    the state change to RUNNING.\n  - More FreeBSD fixes.\n  - Handle ACTIVE links going to < PAUSED as well. This improves\n    renegotiation in some cases.\n  - Fix an fd mismatch in the protocol in some cases that could lead to\n    fd leaks and crashes.\n\n## Modules\n  - Many of the network modules can now also accept hostnames instead of\n    IP addresses.\n  - Fix a potential use-after-free in module-rt when stopping the thread.\n\n## SPA\n  - Support for elogind was added.\n  - Some more errors are checked when converting JSON to POD. (#4313)\n  - Fix a bug where the mixer was not updated after setting the port, which would\n    cause muted audio at boot or resume from suspend. (#4084)\n\n## JACK\n  - The BBT transport handling was improved. Some fields were added to be able\n    to handle the JACK semantics correctly. (#4314)\n  - Buffers are now aligned according to the maximum CPU alignment instead of\n    the hardcoded 16 bytes alignment.\n  - Cached objects are now freed correctly.\n\n## Doc\n  - Some small doc updates. (#4272)\n\n# PipeWire 1.2.4 (2024-09-19)\n\nThis is a bugfix release that is API and ABI compatible with the\nprevious 1.2.x and 1.0.x releases.\n\n## Highlights\n  - Avoid a crash in cleanup of globals. (#4250)\n  - Use systemd-logind to scan for new devices in v4l2.\n  - Some more bugfixes and improvements.\n\n\n## PipeWire\n  - Avoid a crash in cleanup of globals. (#4250)\n  - Improve RequestProcess dispatch.\n\n## Tools\n  - Improve float parsing. (#4234)\n\n## SPA\n  - Clear the ringbuffer when stopping in libcamera.\n  - Use systemd-logind to scan for new devices in v4l2. (#3539, #3960)\n  - Queue dropped first buffer in v4l2.\n  - Unlink pcm devices when moving drivers to avoid broken pipe.\n\n## JACK\n  - Emit buffer_size callback in jack_activate() to improve\n    compatibility with GStreamer. (#4260)\n\n# PipeWire 1.0.8 (2024-09-19)\n\nThis is a small bugfix release that is API and ABI compatible with previous\n1.0.x releases.\n\n## Highlights\n  - Backport support for explicit sync.\n  - FFADO backport fixes.\n  - Fix some races in JACK.\n  - More small fixes and improvements.\n\n\n## PipeWire\n  - Add support for mandatory metadata and explicit sync metadata.\n  - Fix RequestProcess again.\n  - Include config.h to use malloc_trim() when cleaning nodes.\n  - Avoid crash when destroying a global. (#4250)\n\n## Modules\n  - FFADO fixes: improve timing reporting, avoid some xruns, improve\n    samplerate and period size handling, implement freewheeling.\n  - Decrease memory usage of the profiler.\n\n## Tools\n  - Fix pw-dump metadata changes fix. (#4053)\n  - Support large params in pw-cli. (#4166)\n\n## SPA\n  - Improve libcamera devices reporting to properly filter out duplicates in\n    all cases.\n  - Improve property reporting in v4l2.\n  - Fix lost buffer in v4l2.\n\n## Bluetooth\n  - Improve compatibility with some devices.\n\n## JACK\n  - Fix some races when shutting down.\n  - Fix rt-priority on the main thread when using custom thread create\n    function. (#4099)\n\n## ALSA\n  - Handle format renegotiation. (#3856)\n\n# PipeWire 1.2.3 (2024-08-22)\n\nThis is a bugfix release that is API and ABI compatible with the\nprevious 1.2.x and 1.0.x releases.\n\n## Highlights\n  - Implement freewheeling support in the FFADO driver. Also improve\n    buffersize and samplerate handling.\n  - Improve some locking on spa_loop. Remove a possible deadlock when\n    the queue was full.\n  - Allocate more space for the libcamera devices string to properly\n    deduplicate libcamera and v4l2 devices.\n  - Some more bugfixes and improvements.\n\n\n## PipeWire\n  - Improve activation state changes and xrun detection some more.\n    (#4182)\n  - Avoid a memory leak when a link in error is destroyed.\n\n## Modules\n  - Improve samplerate and buffersize handling in FFADO driver so that\n    it is possible to force a rate and buffer size.\n  - Implement freewheeling support in the ffado driver.\n  - Always set the server side clock.quantum-limit on nodes. This fixes\n    a buffer size problem in Midi-bridge. (#4005)\n\n## SPA\n  - Improve some locking on spa_loop. Remove a possible deadlock when\n    the queue was full. (#4114)\n  - Allocate more space for the libcamera devices string to properly\n    deduplicate libcamera and v4l2 devices.\n  - Fix a potential race when enumerating v4l2 udev devices. (#3960)\n\n## Bluetooth\n  - Improve compatibility with some devices (Soundcore Motion 300).\n\n## Tools\n  - pw-cli can now handle arbitrarily large input and params. (#4166)\n  - Avoid some compiler warnings in pw-top.\n\n# PipeWire 1.2.2 (2024-07-31)\n\nThis is a bugfix release that is API and ABI compatible with the\nprevious 1.2.x and 1.0.x releases.\n\n## Highlights\n  - Fix some more fallout of the async nodes rewrite. Fixes some\n    crackling, xruns and possibly also some crashes in some cases.\n  - Fix freewheeling timeouts in case of xruns. This fixes ardour export.\n  - Fix event mixdown in JACK. Fixes qsynth and possibly other apps.\n  - Some more small fixes and improvements.\n\n\n## PipeWire\n  - Add a new SPA_IO_CLOCK_FLAG_XRUN_RECOVER flag when the process function\n    is called because of xrun recovery.\n  - Properly stop nodes in all cases, this avoids spurious xruns and\n    scheduling errors. (#4122)\n  - Make sure async nodes receive an async link in all cases. Do the\n    processing of source output ports slightly differently to make sure we\n    don't cause latency for sources. (#4138) (#4133)\n  - Fix some races when negotiating and starting nodes. (#4094)\n  - Actually include the config.h header to use malloc_trim() to reduce\n    memory usage in pulse-server.\n\n## Modules\n  - Avoid unloading some modules on stream errors because it is possible to\n    recover from the error. (#4121)\n  - Fix a (harmless) warning in module-rtp because of comparing samples and\n    time. (#4095)\n\n## SPA\n  - Let the freewheel driver detect xrun recovery and handle the timeouts\n    correctly. This fixes an issue with ardour export.\n  - Remove the HDMI/AC3 profiles. they turn out to fail on some hardware\n    with no way to detect this.\n  - Signal the eventfd when the loop is full to make sure the other thread\n    is woken up to process the queue.\n\n## JACK\n  - Don't check timestamps when mixing down events. The timestamps are only\n    checked when writing new events with the public API. This fixes an\n    issue where qsynth would not receive midi events anymore.\n  - Fix the jack_get_time() function, it was returning nano instead of micro\n    seconds.\n\n# PipeWire 1.2.1 (2024-07-12)\n\nThis is a bugfix release that is API and ABI compatible with previous\nthe previous 1.2.0 release and the 1.0.x releases.\n\n## Highlights\n  - Fix a regression in the node activation counters that would break audio\n    when using KODI.\n  - Fix a regression in ardour export because of mishandling of sync groups.\n  - Fix a regression in KDE screen preview because of the new async\n    scheduling.\n  - Fix a regression in context.exec argument parsing that would break some\n    existing scripts.\n  - More small bug fixes and improvements.\n\n\n## PipeWire\n  - Fix a regression in the node activation counters that would break audio\n    when using KODI. (#4087)\n  - Fix a regression in ardour export because of mishandling of sync groups.\n    (#4083)\n  - Fix a regression in KDE screen preview because of the new async\n    scheduling. Disable async for driver nodes. (#4092)\n  - Slightly improve node shutdown to cause less xruns.\n  - Fix a regression in context.exec argument parsing that would break some\n    existing scripts.\n  - Support custom thread create functions.\n\n## Modules\n  - Improve snapcast address parsing. (#4093)\n\n## SPA\n  - Fix multiple %f parsing in ACP for the new plug+a52 profiles.\n  - Improve v4l2 param generation. Improve recovery when framesize or rates\n    are unknown, support vivid. (#4063)\n\n## JACK\n  - Use the custom thread create function to correctly let module-rt kit\n    manage threads so that we don't end up with priorities on the wrong\n    threads. (#4099)\n\n## GStreamer\n  - Fix a crash when destroying a stream.\n\n# PipeWire 1.2.0 (2024-06-27)\n\nThis is the 1.2 release that is API and ABI compatible with previous\n1.1.x and 1.0.x releases.\n\nThis release contains some of the bigger changes that happened since\nthe 1.0 release last year, including:\n\n  * Support for asynchronous processing has been implemented. Nodes can choose\n    (or be forced) to be scheduled asynchronously. The graph will not wait for\n    the output of the node to continue processing but it will use the output\n    of the previous cycle (or silence) instead. This adds one cycle of latency\n    but it can avoid having some nodes blocking the processing graph. Non realtime\n    streams and filters now also use this asynchronous processing instead of\n    their own slightly broken version.\n  * The concept of node.sync-group was added. This groups nodes with overlapping\n    sync-group together when one of them sets the node.sync = true. This is now\n    used to make sure all nodes are scheduled together when JACK transport is\n    started so that they all see the same transport time.\n  * Config parsing errors are reported earlier and much better with line and\n    column numbers where the parsing started to fail.\n  * Add support for mandatory metadata when negotiating buffer parameters. This\n    can be used to only negotiate extra buffer planes when certain metadata is\n    negotiated. One use case is the explicit sync support that requires 2\n    extra fds for the timelines.\n  * Explicit sync metadata and support was added.\n  * Support was added for making and using multiple data-loops in the server\n    and clients. Support for CPU affinity and priorities was added to the\n    data-loops as well.\n  * The log topic debug levels can now be changed at runtime with metadata.\n    The log levels in the pulse server can be dynamically changed with a\n    /core message.\n  * The UCM conflicting devices patches were merged.\n  * Add snapcast-discover module to stream to snapcast servers.\n  * Rework how peers are linked and the counters are updated. Resume the\n    peers when a node is unlinked and not yet processed. This should cause\n    less occasional dropouts in the graph when reconnecting things.\n  * Many GStreamer element updates.\n  * Many more fixes and improvements.\n\nEnjoy the summer vacation!\n\n\n## Highlights (since the previous 1.1.83 release)\n  - Small fixes here and there.\n\n## PipeWire\n  - Compilation fixes after enabling -Werror=float-conversion\n\n## Modules\n  - The module-rtp-sap now propagates the cleanup.sec property to the\n    rtp-source and the rtp-source now sets a property with the receiving\n    status.\n  - Fix for ROC 0.3, explicitly specify sender encoding. (#4070)\n  - Some fixes to the RAOP sink module, including a format fix for 32 bit\n    machines.\n\n## Tools\n  - Fix pw-cli monitoring code.\n\n## SPA\n  - Revert peer_enum_params again because it was not used and flawed.\n  - Fix multichannel processing in webrtc AEC.\n\n## GStreamer\n  - Logging improvements.\n  - Fix a race in the bufferpool activation.\n\n## Bluetooth\n  - Improvements to BAP broadcast code parsing.\n\nOlder versions:\n\n\n# PipeWire 1.1.83 (2024-06-17)\n\nThis is the third and hopefully the last 1.2 release candidate that is\nAPI and ABI compatible with previous 1.0.x releases.\n\nSome last minute changes went in to clean up the node activation and\nscheduling that justify another pre-release.\n\n## Highlights\n  - Rework how peers are linked and the counters are updated. Resume the\n    peers when a node is unlinked and not yet processed. This should cause\n    less occasional dropouts in the graph when reconnecting things.\n  - Improve xruns in module-ffado.\n  - Many GStreamer element updates.\n  - More fixes and improvements.\n\n\n## PipeWire\n  - Rework how peers are linked and the counters are updated. Resume the\n    peers when a node is unlinked and not yet processed. This should cause\n    less dropouts in the graph when reconnecting. (#4026)\n  - Improve debug of xruns.\n  - Evaluate node.rules and device.rules before loading the plugin so that\n    extra properties can be passed to the plugin init function.\n\n## Modules\n  - Improve timing reporting in module-ffado some more.\n  - Prealloc less memory in the profiler by default.\n  - Improve xrun handling in module-ffado.\n\n## Tools\n  - Fix a crash in pw-link when a link fails.\n  - Fix pw-dump update for metadata. (#4053)\n\n## SPA\n  - Improve handling of controls. (#4028)\n  - Fix the string size in v4l2 to hold the device and vendor id.\n  - Support meta_videotransform on buffers in v4l2. This can be used to\n    signal that the buffer was rotated for example.\n  - Add HDMI/AC3 profile to ALSA when supported.\n  - Make it possible to disable the webrtc dependency\n\n## GStreamer\n  - Improve caps handling in the elements.\n  - Set buffer duration when we can.\n  - Post an element error when all the elements buffers are removed.\n    (#1980)\n  - Improve DMA_DRM caps selection.\n  - Some refactoring work.\n  - Improve state handling in the elements.\n\n## JACK\n  - Improve how links are activated.\n  - Fix some races when freeing memory.\n\n## Bluetooth\n  - Support multiple BIS in the broadcast source.\n\n# PipeWire 1.1.82 (2024-05-24)\n\nThis is the second 1.2 release candidate that is API and ABI\ncompatible with previous 1.0.x releases.\n\nNot so many things needed to be fixed so this might already be the\nlast prerelease if everything goes well...\n\n## Highlights\n  - Fix problem when moving nodes that could cause nodes to be scheduled\n    wrongly and cause errors. (#4017)\n  - Add snapcast-discover module to stream to snapcast servers.\n  - Work around wrong kernel provided MTU for USB controllers.\n  - Fix some spelling mistakes all over the codebase.\n  - More small fixes and improvements.\n\n\n## PipeWire\n  - Remove the private cleanup.h header and use the public SPA version.\n  - Fix problem when moving nodes that could cause nodes to be scheduled\n    wrongly and cause errors. (#4017)\n\n## Modules\n  - Handle IPv6 in module-protocol-simple and support port allocation.\n  - Add snapcast-discover module to stream to snapcast servers.\n\n## Bluetooth\n  - Work around wrong kernel provided MTU for USB controllers.\n\n# PipeWire 1.0.7 (2024-05-24)\n\nThis is a small bugfix release that is API and ABI compatible with previous\n1.0.x releases.\n\n## Highlights\n  - Fix a potential race/crash.\n  - Fix some problems with negotiation of large integers and floats.\n  - Fix JACK sysex MIDI event handling.\n  - Some more smaller fixes and improvements.\n\n## PipeWire\n  - Fix a potential race when adding/removing a port to be scheduled.\n\n## Modules\n  - Fix FFADO default device handling. (#4023)\n\n## SPA\n  - Fix in integer overflow and float/double compare in POD.\n\n## JACK\n  - Copy larger MIDI events correctly.\n\n# PipeWire 1.1.81 (2024-05-16)\n\nThis is the first 1.2 release candidate that is API and ABI\ncompatible with previous 1.0.x releases.\n\nIn addition to all the changes backported to 1.0.x, this release\nalso contains some new features:\n\n## Highlights\n  - Support for asynchronous processing has been implemented. Nodes can choose\n    (or be forced) to be scheduled asynchronously. The graph will not wait for\n    the output of the node to continue processing but it will use the output\n    of the previous cycle (or silence) instead. This adds one cycle of latency\n    but it can avoid having some nodes blocking the processing graph. Non realtime\n    streams and filters now also use this asynchronous processing instead of\n    their own slightly broken version.\n  - The concept of node.sync-group was added. This groups nodes with overlapping\n    sync-group together when one of them sets the node.sync = true. This is now\n    used to make sure all nodes are scheduled together when JACK transport is\n    started so that they all see the same time.\n  - Config parsing errors are reported earlier and much better with line and\n    column numbers where the parsing started to fail.\n  - Add support for mandatory metadata when negotiation buffer parameters. This\n    can be used to only negotiate extra buffer planes when certain metadata is\n    negotiated. One use case is the explicit sync support that requires 2\n    extra fds for the timelines.\n  - Support was added for making and using multiple data-loops in the server\n    and clients. Support for CPU affinity and priorities was added to the\n    data-loops as well.\n  - The log topic debug levels can now be changed at runtime with metadata.\n    The log levels in the pulse server can be dynamically changed with a\n    /core message.\n  - The UCM conflicting devices patches were merged.\n\n\n## PipeWire\n  - snap support has been added.\n  - Implement async processing. (#3509)\n  - Support for explicit sync was added.\n  - Config parsing errors are reported earlier and much better.\n  - A -P option was added to provide extra properties to the context. This can be\n    used to enable some features that use rules.\n  - properties.rules was added to enhance properties based on some rules.\n    This deprecates the vm.overrides.\n  - Support was added for security-context. This makes it possible for a flatpak\n    to request a socket with specific properties from pipewire to mount in the\n    flatpak. The session manager can then assign permissions based on the connection\n    properties.\n  - Support for fixed arrays in pw_array was improved.\n  - PipeWire server and clients can now use multiple threads to process the nodes\n    in parallel.\n  - device.rules and node.rules were added to update device and node properties\n    based on rules.\n  - device.param and node.param can now be used to configure params when devices\n    and nodes are created.\n  - Memory will now try to use MFD_NOEXEC_SEAL.\n  - The driver id of a node is now placed in the properties.\n  - A potential race was fixed when adding and removing ports to the scheduling\n    lists.\n\n## Modules\n  - Priorities for the FFADO threads can be configured now.\n  - The loopback module now has support for up and downmixing.\n  - Extra properties can now be configured per native-connection socket.\n  - The pulse-tunnel can now automatically reconnect when the connection is\n    broken.\n  - The RTP module now supports the PTP management protocol.\n  - The RTP sender can now use a timer to send out multiple packets per\n    quantum.\n  - A new module was added for loading Parametric EQ.\n  - The simple-protocol module now has per stream configurable properties\n    and can also be used to interface with a snapcast server.\n  - Support for local services was added to raop, rtp and pulse avahi\n    discoverers. Support for IPv6 on local services was added to RAOP.\n\n## SPA\n  - Support for reporting JSON parsing errors has been added.\n  - Some extra checks are added when iterating POD structures.\n  - Port and profiles can now be hidden from ALSA nodes with\n    api.acp.hidden-ports and api.acp.hidden-profiles properties.\n  - The UCM conflicting devices patches were merged.\n  - Profiles and Routes can now also be set by name.\n  - Hires timestamps are now used when possible in IRQ based scheduling to\n    get more accurate wakeup times.\n  - udev can now be an optional dependency.\n  - audioadapter now has an option to automatically configure its ports.\n  - Camera rotation was added to the libcamera node.\n  - invoke on loops can now be done from multiple threads at the same time.\n  - Make sure we use CLOCK_MONOTONIC everywhere in the io_clock.\n  - Vulkan bit and convert filters were added.\n  - ALSA will now always read the HW ringbuffer pointer when followers are\n    not on the same card.\n  - Support for larger MIDI sysex messages was improved. Configuration of\n    the client input and output pool was added. (#4005)\n\n## Bluetooth\n  - Support Google OPUS codec.\n  - Support the LC3-SWB codec.\n  - Support the AAC-ELD codec.\n  - Broadcast source configuration support was added.\n\n## pulseaudio-server\n  - The GSettings schemas are now optionally installed.\n  - Extensions were moved to the modules.\n  - The log level of the pulse server can dynamically be changed with\n    a core object message.\n  - snap access control was added to pulse-server.\n  - The old pacmd describe-module functionality is now implemented with\n    a core message pipewire-pulse:describe-module.\n  - An option was added to disable module loading and unloading.\n\n## JACK\n  - OSC messages can now also be placed in JACK MIDI and the translation\n    layer will detect and tag the right PipeWire control message types.\n  - A jack.other-connect-mode was added to limit the connections that an\n    app can do to ports it doesn't own.\n  - The way the transport is started and how the nodes are grouped together\n    in the transport was improved using the new sync groups. (#3850)\n  - Fix large MIDI messages handling. (#4005)\n\n## ALSA\n  - Fix format renegotiation. (#3858)\n  - Handle period events better. (#3676)\n  - Improve handling of the eventfd wakeups.\n\n## GStreamer\n  - The GStreamer elements can now negotiate and use DMABUF.\n\n## Tools\n  - The T flag is used in pw-top when the transport is running.\n  - A new pw-container tool was added to start a new security context and\n    run an application in it.\n  - pw-dot handles properties with quotes better. Nodes are grouped with the\n    node.link-group.\n  - pw-link has a --wait option to wait for all links to be created.\n\n# PipeWire 1.0.6 (2024-05-09)\n\nThis is a bugfix release that is API and ABI compatible with previous\n1.0.x releases.\n\n## Highlights\n  - A bitfield race was fixed that could cause some crashes or undefined\n    behaviour when moving nodes between drivers.\n  - Fix to some invalid memory access in the pw-mon and pw-dump.\n  - A regression in kodi with IEC958 formats playback was fixed.\n  - A race in the ALSA plugin was fixed when updating the eventfd.\n  - Improvements and fixes to module-combine-stream.\n  - Negotiation was improved in pipewiresrc.\n  - Some more small fixes and improvements.\n\n## PipeWire\n  - Context properties are now set early so that client properties can be\n    matched with rules.\n  - A bitfield race was fixed that could cause some crashes or undefined\n    behaviour when moving nodes between drivers.\n\n## Tools\n  - Fix failure to hide properties in pw-mon. (#3997)\n  - Fix some memleaks and a crash in pw-dump. (#4001)\n\n## Modules\n  - The combine-stream module now prevents resampling to avoid broken\n    audio because of different samplerates.\n  - Fix a potential double free in module-loopback when calculating the\n    delay. (#3748)\n  - The FFADO module now only starts when ports are negotiated to avoid\n    startup races. (#3968)\n  - The combine-stream module will now forward tags.\n\n## SPA\n  - Monitor volumes are now also clamped to the min/max volumes. (#3962)\n  - V4l2 and libcamera now encodes the device ids into a JSON array. This\n    is part of the deduplication code of devices.\n  - A regression in kodi with IEC958 formats playback was fixed.\n\n## Bluetooth\n  - Improved buffer handling and queued data when stopping.\n\n## ALSA\n  - A race was fixed when updating the eventfd. (#3711)\n\n## GStreamer\n  - Handle some errors better instead of crashing. (#3994)\n  - Fix a memleak in the stream params handling.\n  - Negotiation was improved in pipewiresrc.\n\n# PipeWire 1.0.5 (2024-04-15)\n\nThis is a bugfix release that is API and ABI compatible with previous\n1.0.x releases.\n\n## Highlights\n  - pw_stream can now report timestamps on buffers and the expected\n    amount of samples for the resampler.\n  - The GStreamer element now has more correct timestamps using the new\n    pw_stream timestamps as a fallback.\n  - The FFADO module now handles suspend and resume better.\n  - A regression in v4l2 was fixed when parsing malformed filters.\n  - A potential memory/fd leak was fixed in client-node.\n  - Many more small bugfixes and improvements.\n\n\n## PipeWire\n  - pw_stream now reports the expected resampler input or output size in\n    the pw_time structure. (#3750)\n  - pw_stream now also adds a time field to the buffer, which contains the\n    time of the graph when the buffer was received in the stream.\n  - Fix a compiler error when compiling with -Werror=shadow. (#3915)\n  - The config parser will warn when invalid config is detected.\n\n## Modules\n  - The FFADO module now opens and closes when suspending. This fixes some\n    problems when FFADO properties are changed while suspended. (#3558)\n  - Filter-chain will now warn when invalid config is detected.\n  - Echo-cancel will now handle manage the state of the echo-cancel plugin\n    better, making sure run() is not called after deactivate().\n  - Fix some potential memory/fd leaks in client-node.\n\n## SPA\n  - Improve reading the bound ALSA controls.\n  - The resampler can now also report the number of expected output samples.\n  - The ALSA ACP device objects have some more properties like the card.id\n    and alsa.components. (#3912)\n  - Fix a potential string corruption when parsing JSON strings.\n  - V4l2 now sets the latency on the port. (#3910)\n  - alsa-udev now has an option to expose the device even if busy. (#3914)\n  - Improve null-audio-sink channel handling. (#3931)\n  - v4l2 will now drop the first frame because it often contains wrong\n    timestamps or garbage. (#3910)\n  - A regression in v4l2 was fixed where invalid/empty properties in the\n    filter would make it error early. (#3959)\n\n## GStreamer\n  - The source now falls back to the new pw_buffer time for the timestamps.\n\n## Docs\n  - Sync with the master branch.\n\n# PipeWire 1.0.4 (2024-03-13)\n\nThis is a bugfix release that is API and ABI compatible with previous\n1.0.x releases.\n\n## Highlights\n\n  - Track memfd better to avoid inconsistent memory. Also make sure the\n    mixer info is removed correctly in all cases on destroyed ports.\n  - Correctly handle removed objects in the metadata.\n  - Add an option to set the server and client priorities instead of using\n    a hardcoded value of 88.\n  - The FFADO module has been fixed. Audio and MIDI now works with\n    the same latency as the JACK driver. This has now also been\n    tested with a Focusrite Saffire Pro 14.\n  - The JACK library has seen some important fixes. Some ardour crackling\n    has been fixed when looping and multiple MIDI ports on a client should\n    now work.\n  - Small bugfixes and improvements.\n\n\n## PipeWire\n  - Track memfd better to avoid inconsistent memory. Also make sure the\n    mixer info is removed correctly in all cases on destroyed ports.\n  - Fix Props param emission again in pw_stream. (#3833)\n  - Add MAPPABLE flag to buffer data to indicate that the fd can be\n    mmapped directly. Use this on DMABUF from v4l2. (#3840)\n  - Correctly handle removed object in the metadata.\n  - FreeBSD build and compatibility fixes.\n  - Add an option to set the server and client priorities instead of using\n    a hardcoded value of 88.\n  - Read config overrides in the right order.\n  - Fix PIPEWIRE_QUANTUM rate handling in pw_stream and pw_filter.\n  - Fix pw_context_parse_conf_section(), actually use the conf argument.\n  - A new pw_stream_get_nsec() and pw_filter_get_nsec() function was added\n    to get the current time of the stream/filter without having to assume a\n    particular clock.\n  - A new default.clock.quantum-floor property was added to configure the\n    absolute lowest buffer-size. (#3908)\n\n## docs\n  - Many doc updates.\n\n## tools\n  - Make sure we always quit pw-cli when the server stops. (#3837)\n  - pw-top now prints all drivers in batch mode. (#3899)\n\n## modules\n  - Don't destroy the client in protocol-simple on EAGAIN.\n  - Handle IPv6 better in the RTP modules. Fix IPv6 SAP header\n    parsing. (#3851)\n  - The FFADO module has been fixed. Audio and MIDI now works with\n    the same latency as the JACK driver. This has now also been\n    tested with a Focusrite Saffire Pro 14. (#3558)\n\n## pulse-server\n  - Make sure the peer_name is filled to avoid protocol errors.\n\n## SPA\n  - Small resampler tweaks to improve stability of adaptive resampler.\n  - Add ALSA option to control htimestamp autodisable.\n  - Avoid some potential crashes in audioconvert when ports are removed.\n  - Improve HDMI jack detection on some SOCs.\n  - The audioconvert now has a monitor.passthrough option to pass the\n    latency information on the monitor ports. (#3888)\n\n## GStreamer\n  - Don't use timeouts when autoconnect=false in pipewiresrc. (#3884)\n  - pipewiresrc and pipewiresink can now be automatically selected as\n    audio source and sink.\n  - An invalid memory access was fixed when destroying the device\n    provider.\n\n## JACK\n  - Remove properties correctly with the object id, not serial.\n  - Improve sync with the data thread by pausing the core. Also improve\n    handling of port io to avoid invalid buffer access.\n  - Fix PIPEWIRE_QUANTUM rate handling.\n  - Support multiple MIDI input ports per client. (#3901)\n  - The output buffer size is now always correctly set. (#3892)\n\n## ALSA\n  - Handle errors from eventfd_create correctly.\n\n# PipeWire 1.0.3 (2024-02-02)\n\nThis is a quick bugfix release that is API and ABI compatible with previous\n1.0.x releases.\n\n## Highlights\n  - Fix ALSA version check. This should allow the alsa plugin to work again.\n  - Some small fixes and improvements.\n\n## PipeWire\n  - Escape @DEFAULT_SINK@ in the conf files.\n\n## Modules\n  - Improve logging in module-pipe-tunnel.\n\n## SPA\n  - Always recheck rate matching in ALSA when moving drivers. This fixes a\n    potential issue where the adaptive resampler would not be activated in\n    some cases.\n\n## ALSA\n  - Fix version check. This should allow the alsa plugin to work again\n    with version 1.0.2.\n\n# PipeWire 1.0.2 (2024-01-31)\n\nThis is a bugfix release that is API and ABI compatible with previous\n1.0.x releases.\n\n## Highlights\n  - Fix v4l2 enumeration with filter. This should fix negotiation in some\n    GStreamer pipelines with capsfilter. Also probe for EXPBUF support\n    before using it.\n  - Fix max-latency property and Buffer param when dealing with small\n    ALSA device buffers. This should fix stuttering with some AMD\n    based soundcards.\n  - More small cleanups an improvements.\n\n## Modules\n  - Improve netjack2 channel positions.\n  - Improve RAOP module state after suspend/resume. (#3778)\n  - Avoid crash in some LV2 plugins by configuring the Atom ports. (#3815)\n\n## SPA\n  - Bump libcamera requirements to 0.2.0.\n  - Try to avoid unaligned load exceptions. (#3790)\n  - Fix v4l2 enumeration with filter. (#1793)\n  - Fix max-latency property and Buffer param when dealing with small\n    ALSA device buffers. This should fix stuttering with some AMD\n    based soundcards. (#3744,#3622)\n  - Add a resync.ms option to node.driver to make it possible to resync\n    fast to clock jumps.\n  - Probe for EXPBUF support in v4l2 before using it. (#3821)\n\n## pulse-server\n  - Also emit change events when the port list change.\n\n## Bluetooth\n  - Log a more verbose explanation when other soundservers seem to be\n    interfering with bluetooth.\n  - Add quirks for Rockbox Brick. (#3786)\n  - Add quirks for SoundCore mini2. (#2927)\n\n## JACK\n  - Improve check for the running state of clients. (#3794)\n\n# PipeWire 1.0.1 (2024-01-11)\n\nThis is a bugfix release that is API and ABI compatible with previous\n1.0.x releases.\n\n## Highlights\n  - Work around the buggy ALSA backend in libcanberra by forcing the pulse\n    backend in module-x11-bell.\n  - Fix a race in the device info updates in pulse-server.\n  - Fix timing and rate matching in ALSA sequencer.\n  - Improve timing information in JACK and from the ALSA driver.\n  - More small fixes and improvements.\n\n\n## PipeWire\n  - Fix a build issue when examples where disabled.\n  - Avoid some compiler warnings.\n  - Avoid some bitfield data races. (#3706)\n\n## Modules\n  - Bump the PTP driver priority. (#3217)\n  - Support the previous \"allowed\" permission in the access module.\n  - Fix filename leak in module-filter-chain.\n  - Work around the buggy ALSA backend in libcanberra by forcing the pulse\n    backend in module-x11-bell. (#3688)\n  - Fix a race in the device info updates in pulse-server.\n  - Fix compatibility in RAOP. (#3698)\n\n## SPA\n  - Handle ALSA picth control errors correctly\n  - Clamp buffer-frames correctly. (#3000)\n  - Fix timing and rate matching in ALSA sequencer. (#3657)\n  - Revert a commit that could result in current time in the future in the\n    timing updates.\n  - Improve adapter state checks.\n  - Remove the timer from the ALSA pcm.\n  - Fix timeout in freewheel driver.\n\n## Pulse-server\n  - Also handle active ports for monitor sources.\n  - Fix zeroconf-publish format properties.\n\n## JACK\n  - Improve timing and transport calculations.\n  - Handle -ENOENT from the core and don't error out.\n\n## GStreamer\n  - Handle node port removal in the device provider. (#3708)\n  - Improve error handling while connecting.\n  - Fix dts_offset.\n\n# PipeWire 1.0.0 (2023-11-26)\n\nThe PipeWire project is immensely proud to announce the 1.0 release\nof PipeWire.\n\nIt is API and ABI compatible with previous 0.3.x releases.\n\n \"PipeWire represents the next evolution of audio handling for Linux, taking\n the best of both pro-audio (JACK) and desktop audio servers (PulseAudio) and\n linking them into a single, seamless, powerful new system.\"\n    - Paul Davis, JACK and Ardour author\n\n \"What exciting times! PipeWire 1.0 is the culmination of 15 years of\n Linux audio expertise, blending lessons from PulseAudio into a high-performance,\n flexible, and user-friendly foundation for audio and multimedia on Linux.\n I'm looking forward to the next decade of progress in the free software\n consumer and professional audio space!.\"\n    - Arun Raghavan, PulseAudio developer/maintainer.\n\n \"I'm thrilled to witness the first stable release of PipeWire after five years\n of collaboration with its remarkable community, pushing the boundaries of\n multimedia integration in the Linux ecosystem one step further.”\n    - George Kiagiadakis, WirePlumber author\n\n \"From the beginning of the libcamera project, we have always seen\n PipeWire as the solution to handle desktop and mobile integration and\n give a seamless multimedia integration to users while providing security\n features and resource sharing between applications.\"\n    - Kieran Bingham, libcamera author\n\nHappy Holidays!\n\n\n## Highlights\n  - Fix a memfd/dmabuf leak when uploading buffers while shutting down.\n  - Handle concurrent jack_port_get_buffer() calls because ardour seems to\n    be doing this.\n  - Improve time reporting (less jitter) in ALSA when using IRQ.\n  - Many doc improvements.\n\n## PipeWire\n  - Respect PIPEWIRE_DLCLOSE everywhere, remove pw_in_valgrind().\n  - Remove a warning when a client tries to change ignored properties.\n\n## Modules\n  - Fix a memfd/dmabuf leak when uploading buffers while shutting down.\n  - Fix a potential segfault when copying mix structures. (#3658)\n  - Avoid races in setrlimit in module-rt.\n  - Fix a memory leak in filter-chain.\n  - Set rtp.ptime on senders, not receivers.\n  - The ROC modules were ported to ROC 0.3\n\n## SPA\n  - Improve time reporting (less jitter) in ALSA when using IRQ. (#3657)\n  - Add latency param query in libcamera.\n  - Fix some compiler warnings.\n  - The EVL plugin was updated.\n\n## Bluetooth\n  - LC3 codec and compatibility improvements.\n\n## Pulse server\n  - Fix emission of events when a sink/source state changes. (#3660)\n\n## JACK\n  - Improve transport and time handling. Use unique ids to make consistent\n    snapshots of the current time and transport.\n  - Avoid enumerating port params that we are not going to use.\n  - Optimize buffer reuse.\n  - Handle concurrent jack_port_get_buffer() calls because ardour seems to\n    be doing this. (#3632)\n\n## Docs\n  - Many doc improvements.\n  - Add man pages for pw-dump, pw-loopback, modules, pipewire-pulse.\n  - Manpages are now made with Doxygen.\n  - Add docs for pulse-modules\n\n# PipeWire 0.3.85 (2023-11-16)\n\nThis is the fifth (and last) 1.0 release candidate that is API and ABI\ncompatible with previous 0.3.x releases.\n\n## Highlights\n  - Fix an issue where a link could end up paused while not negotiated.\n  - Fix an infinite recursion issue when finding runnable nodes.\n  - Support XDG base directories when loading ACP config.\n  - Fix MIDI event recording preview in Ardour.\n  - Many more small fixes, cleanups and improvements.\n\n\n## PipeWire\n  - Fix an issue where a link could end up paused while not negotiated.\n    (#3619)\n  - Fix an infinite recursion issue when finding runnable nodes by stopping\n    the scan on feedback links around the driver. (#3621)\n  - The system service now has better socket permissions.\n\n## Modules\n  - Add support for uclamp. This allows the scheduler to make better informed\n    decisions about where tasks should be placed, and what pstate to set\n    for the CPU it is running on.\n  - Emit warnings when applications are not doing the right locking instead\n    of crashing.\n  - Improve media.name for RAOP sinks. (#3801)\n  - Support pause/resume in pipe-tunnel. (#3197)\n  - Remove time rlimit when probing for realtime to avoid SIGXCPU.\n\n## SPA\n  - Fix a bug where the resampler would be activated even when there is an\n    ALSA pitch element. (#3628)\n  - Improve resume from suspend in ALSA. (#3646)\n  - Add option to expose ALSA controls as prop params.\n  - Support XDG base directories when loading ACP config. This makes it possible\n    to override the ACP config files.\n\n## Bluetooth\n  - Schedule nodes in the same ISO group together.\n  - More BAP fixes and cleanups.\n\n## JACK\n  - Fix MIDI events from peer ports. This makes the MIDI event recording preview\n    of Ardour work correctly.\n\n## GStreamer\n  - Fix some error handling in the source and sink.\n\n## ALSA plugin\n  - Improve poll descriptor handling. (#3648)\n\n## Docs\n  - Many improvements to the layout and organization.\n\n# PipeWire 0.3.84 (2023-11-02)\n\nThis is the fourth 1.0 release candidate that is API and ABI compatible\nwith previous 0.3.x releases.\n\n## Highlights\n  - Fix a regression with openal because the queued buffers in the stream\n    were not reported correctly.\n  - Fix a bug in port busy counters that could cause random silent links.\n  - Fix a regression in echo-cancel because it was not reporting its\n    streams as ASYNC.\n  - Fix a JACK regression where not all ports were enumerated in all cases.\n  - Many more fixes and improvements.\n\n\n## PipeWire\n  - pw_stream now reports the queued buffers more accurately. This fixes\n    a regression when using openal. (#3592)\n  - The port busy counters were not updated correctly in some cases. This\n    could lead to negotiation errors and silent links. (#3547)\n  - Ignore latency maximum when forcing rate/quantum. (#3613)\n  - Nodes can now be added to multiple groups and link-groups. (#3612)\n\n## Modules\n  - The filter-chain now also handles notify port dependencies\n    correctly. (#3596)\n  - Filter-chain has support for new linear, clamp, recip, exp, log, mult,\n    sine builtin plugins.\n  - The echo-cancel module now correctly reports its playback and capture\n    streams as ASYNC to avoid running out of buffers. (#3593)\n  - It is now possible to specify an array of remote names to connect to\n    with the native protocol.\n  - module-rtp-sap and module-rtp-sink now try to bind to the specified\n    interface.\n\n## SPA\n  - The alsa plugin now removes the runtime properties such as period-num,\n    period-size and max-latency when suspended. (#3613)\n\n## Bluetooth\n  - BAP Locations/Context is now set on endpoints as required by new bluez.\n  - Improve selection of BAP leader.\n\n## JACK\n  - Add a jack_set_sample_rate() extension function.\n  - Make sure we get the info of all nodes/ports before completing the\n    jack_client_open() operation so that we can enumerate the ports\n    correctly in all cases. (#3618)\n\n## GStreamer\n  - Fix types of metadata in pipewiresink.\n  - Also copy metadata in buffers in all cases.\n  - Fix size allocation in bufferpool for compressed formats.\n  - Don't stop streaming thread when unlinked. (#3620)\n\n## ALSA\n  - The ALSA plugin now handles NULL values from mmap_areas. (#3600)\n\n# PipeWire 0.3.83 (2023-10-19)\n\nThis is the third 1.0 release candidate that is API and ABI compatible\nwith previous 0.3.x releases.\n\n## Highlights\n  - A quantum change regression was fixed.\n  - Use a 2 socket server now for the manager and the applications\n    with (when wireplumber is updated) different permissions.\n  - Reduce memory usage a little in audioconvert and use fewer buffers.\n  - Some JACK deadlocks were fixed.\n  - More bugfixes and improvements.\n\n\n## PipeWire\n  - Fix quantum change regression. (#3574)\n  - Use a 2 socket server by default. One for the session-manager and one\n    for applications.\n  - Fix a potential use-after-free in node and device cleanup. (#3588)\n\n## modules\n  - Some hardcoded buffer size limits were removed.\n  - Fix ASYNC flag on combined-streams.\n  - Add support for on-demand combined-streams using metadata.\n\n## SPA\n  - alsa-udev will now ignore PCMs with the ACP_IGNORE udev environment\n    variable. (#3570)\n  - The audioadapter now uses at least 2 buffers when the follower is\n    async.\n  - The number of buffers used by plugins was tweaked a little. Most\n    plugins now only ask 1 buffer.\n  - Memory usage in audioconvert was reduced.\n  - Fix some unaligned reads and writes and undefined left shifts reported\n    by ASAN. (#3572)\n  - Rework vulkan dependency checking.\n  - Don't try to link ALSA devices when prepare fails. This fixes some\n    crashes.\n  - Fix a stall when the allowed codecs are changed in ALSA.\n  - Improve ALSA rate control for sources to avoid xruns. (#3584)\n  - Try to fix IEC958 TrueHD and DTS playback. (#2284)\n\n## Bluetooth\n  - Improve fallback SCO mtu when the kernel doesn't tell us.\n\n## JACK\n  - The fixed buffer size limit was removed.\n  - Add an option to make input buffers writable (default true).\n  - A potential deadlock was fixed when applications lock the process\n    function. (#3585)\n  - Use a separate thread to dispatch notifications to avoid deadlocks.\n    (#3585)\n  - Potentially fix silent export in ardour in some cases. (#3514)\n\n# PipeWire 0.3.82 (2023-10-13)\n\nThis is the second 1.0 release candidate that is API and ABI compatible\nwith previous 0.3.x releases.\n\n## Highlights\n  - Fix a regression in some devices when the Pro-Audio profile was selected.\n    Only enable the IRQ based scheduling and device linking in specific\n    safe cases. (#3556)\n  - Improve rate switching. In some cases the graph rate would not switch\n    correctly. (#2929)\n  - Fix regression in alsa wakeups that would cause silence in VMs.\n  - Fix a leak in the SBC codecs for SCO.\n  - More improvements to the RAOP module.\n  - Other small improvements and fixes.\n\n\n## PipeWire\n  - Improve client property checks.\n  - Allow non-power-of-2 quantums when forced.\n  - Improve rate switching. In some cases the graph rate would not switch\n    correctly. (#2929)\n  - The PIPEWIRE_QUANTUM env variable now forces the size and rate in the\n    graph for the duration of the application. The softer PIPEWIRE_LATENCY\n    and PIPEWIRE_RATE can still be used to merely suggest a maximum latency\n    and a rate.\n\n## modules\n  - Remove the RTSP FLUSH request in RAOP because it does not seem necessary.\n  - The RAOP module now uses the common RTP stream functions.\n  - Add sockets option to protocol-native to make pipewire listen on multiple\n    sockets.\n\n## SPA\n  - Clean up some of the log functions.\n  - Add an option in ALSA to disable linking devices together.\n  - Only link pcms together when 1 capture and 1 playback pcm. For more complex\n    devices we can't be sure which ones can be linked. (#3556)\n  - disable tsched only when using linked devices.\n  - Add some extra checks in ALSA to avoid segfaults. (#3554)\n  - Add Tag support to alsa-sink and alsa-source.\n  - Use dynamic pod builder when we can.\n  - Set priority.driver on midi-bridge to allow it as a fallback driver. (#3562)\n  - Fix regression in alsa wakeups. (#3565)\n  - The PTP clock can now be found from the interface in node-driver.\n\n## pulse-server\n  - Some small cleanups and internal improvements.\n  - Add some memory debugging messages.\n  - Add Tag messages to streams.\n\n## Bluetooth\n  - Fix a leak in the SBC codecs for SCO.\n\n## JACK\n  - Patch up midi events in the destination buffer instead of writing to the\n    source buffer. (#3580)\n  - Group all jack clients together to avoid transport issues. (#3562)\n\n## ALSA-plugins\n  - Add also.deny option to block alsa clients from opening the PCM.\n\n# PipeWire 0.3.81 (2023-10-06)\n\nThis is the first 1.0 release candidate that is API and ABI compatible\nwith previous 0.3.x releases.\n\n## Highlights\n  - jackdbus support is now enabled by default.\n  - IRQ based scheduling in ALSA was improved and enabled by default for\n    Pro-Audio profile. It will also link the pcms together to get lower\n    latency. This now matches what JACK does and gives equal latency to\n    PipeWire for Pro-Audio profiles.\n  - Support both old and new versions of webrtc-audio-processing to make\n    the transition easier.\n  - Forced quantum changes by nodes or metadata will now also force a\n    suspend and resume of the graph, like the rate changes to make sure all\n    nodes adapt to the new quantum. This is important for Pro-Audio nodes\n    that need to reconfigure the hardware to a new period in IRQ based\n    scheduling.\n  - Fix a regression in regex parsing.\n  - Many bugfixes and improvements.\n\n\n## PipeWire\n  - jackdbus is by default enabled now. The idea is that when jackdbus is\n    installed, the real libjack.so is in the path and we can become a\n    real JACK client.\n  - Forces quantum changes by nodes or metadata will now also force a\n    suspend and resume in the graph, like the rate changes to make sure all\n    nodes adapt to the new quantum. This is important for Pro-Audio nodes\n    that need to reconfigure the hardware to a new period.\n  - The stream now has an EARLY_PROCESS option that can be used to implement\n    custom buffer fill levels. (#3480)\n  - Fix a regression in regex parsing. (#3528)\n  - Fix a bug in position reporting in the driver node. (#3189) (#3544)\n  - Destroying a link will now recalculate the graph correctly.\n  - Fix the rate comparison for finding the best rate in the graph.\n  - Use malloc_trim() when available to release memory. (#1840)\n\n## Tools\n  - pw-cat now supports DFF DSD files.\n  - pw-cli avoid some NULL derefs in some cases.\n\n## Modules\n  - The RAOP sink has seen some cleanups and improvements. It will now ask\n    for feedback every 2 seconds to keep some devices alive.\n  - A bug in filter-chain was fixed where it would fail to apply the gain\n    when mixing just one source.\n  - The filter-chain can now pass the stream volume to a control in the\n    filter-chain graph. (#3434)\n  - Improve volume handling in RAOP sink.\n\n## Pulse-server\n  - Some cleanup in the pending_stream handling.\n  - Fix a regression in the event emission code where it failed to emit\n    a changed event when a node was linked. (#3522)\n  - Lower the realtime priority of pulseaudio clients.\n  - Set pulse.module.id on the echo-cancel streams. (#3541)\n\n## SPA\n  - Support both old and new versions of webrtc-audio-processing to make\n    the transition easier.\n  - The ALSA driver now does the sync of all followers directly from the\n    wakeup event. This results in more stable rate matching.\n  - IRQ based scheduling in ALSA was improved and enabled by default for\n    Pro-Audio profile. It will also link the pcms together to get lower\n    latency. This now matches what JACK does and gives equal latency to\n    PipeWire for Pro-Audio profiles.\n  - GNU/Hurd support was added.\n  - Some improvements to passthrough handling.\n\n## Bluetooth\n  - Improvements to the codec handling when PipeWire is used as Audio\n    Gateway.\n  - Adapt to new Bluez API for BAP devices.\n\n## JACK\n  - When the jack library is set in the default library path, avoid using\n    LD_LIBRARY_PATH because this can cause confusion.\n  - Handle clearing the latency on a port.\n  - jack_property now always manages to actually change the metadata because\n    it waits for a roundtrip before exiting.\n\n# PipeWire 0.3.80 (2023-09-14)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - A new Tag param was added that allows arbitrary metadata to be transported\n    out-of-band in the graph.\n  - Vulkan DMA buf support was merged.\n  - The echo-canceller was ported to webrtc-audio-processing-1.\n  - Fix a regression in locating monitor sources by id in pulse-server.\n  - Mixer io areas updates are now synchronized correctly with the data\n    thread to avoid potential crashes.\n  - Many more bugfixes and improvements.\n\n\n## PipeWire\n  - Handle driver nodes that refuse to change the quantum or rate.\n  - A new Tag param was added that allows arbitrary metadata to be transported\n    out-of-band in the graph.\n\n## Modules\n  - The pipe-tunnel source has been reworked to use a ringbuffer and rate\n    adaption to keep the latency constant. It can now also function as a\n    driver to reduce resampling. (#3478)\n\n## Tools\n  - pw-cat will now place media properties in Tag params.\n  - pw-mon can now filter props and params.\n\n## SPA\n  - ALSA refuses to change quantum and rate when in IRQ mode.\n  - ALSA will now be smarter in selecting the period size for batch devices\n    and will make it depend on the samplerate. (#3444)\n  - Vulkan DMA buf support was merged.\n  - ALSA latency will now be reported in the time domain of the graph.\n  - Add udev based autodetection for compress-offload devices.\n  - The echo-canceller was ported to webrtc-audio-processing-1.\n  - The v4l2 inotify code was rewritten to avoid a use-after-free and by\n    using a separate watch (but same fd) for each device. (#3439)\n  - The tag and latency handling was improved in audioadpter.\n  - Don't use -Ofast on alpha because it can crash on denormalized\n    values. (#3489)\n  - The mixers now synchronize spa_io_buffers updates with the data\n    thread to avoid crashes.\n  - Handle NULL param updates. (#3504)\n\n## Pulse-server\n  - Fix a regression in locating monitor sources by id. (#3476)\n  - Add support for use_system_clock_for_timing in module-pipe-sink.\n  - Add support for checking module arguments.\n  - Avoid some useless change events.\n\n## Bluetooth\n  - Ports are now marked as physical, which makes the bluetooth devices show\n    up as hardware devices in Ardour and other JACK apps. (#3418)\n  - Some fixes for LE audio support (#3479)\n\n## JACK\n  - Also emit unregister notify even when suppressed when creating the\n    client.\n  - The notify callbacks now match JACK2 behaviour more.\n  - The mixer io areas are updated and handled safely now to avoid\n    crashes. (#3506)\n\n# PipeWire 0.3.79 (2023-08-29)\n\nThis is a quick bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - Fix a regression in suspend that could cause silence.\n  - Fix a regression in JACK port registration that could cause all kinds of\n    JACK problems. (#3485)\n  - Fix a typo in the neon sample conversion functions that could cause\n    distortion.\n  - Add BAP broadcast source and sink support.\n  - pw-top now has a batch mode to dump the output to stdout.\n  - Many more bugfixes and improvements.\n\n\n## PipeWire\n  - Fix a regression in shutdown where a node might not first suspend\n    properly. This cause loss of sound in some cases. (#3378)\n  - Failure to compile a regular expression in the config file will now\n    be reported and ! can be used to negate the match. (#3460)\n  - Fix a regression where some nodes might not set running in some\n    cases.\n  - Nodes are now suspended before the format is cleared, which might\n    fix some crashes.\n\n## Tools\n  - pw-top now has a batch mode to dump the output to stdout.\n\n## SPA\n  - The queued samples in audioconvert are now correctly reported in the\n    delay. (#3454)\n  - Make it easier to add a custom profile in ACP.\n  - Fix a typo in the neon sample conversion functions that could cause\n    distortion. (#3463)\n  - device.profile.pro=true is added for pro audio nodes.\n  - An xrun counter was added to spa_io_clock to detect and track skipped\n    data because of xruns.\n\n## Pulse-server\n  - Add alsa-sink and alsa-source modules. (#3456)\n\n## Bluetooth\n  - Fix a regression where only the BAP off profile is shown.\n  - Add BAP broadcast source and sink support.\n\n## JACK\n  - Also emit a latency notify when the buffer size changes.\n  - Fix a regression in JACK port registration. (#3485)\n  - jack_port_tie() is now supported.\n\n## ALSA\n  - Improve property handling, support lists and ranges in addition to\n    fixed values. (#3451)\n\n# PipeWire 0.3.78 (2023-08-22)\n\nThis is a small bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - An old regression was fixed with where some nodes would not run.\n  - A regression was fixed where removed events would not be shown in some\n    cases. This would result in duplicate entries in audio clients.\n  - Fix an off-by-one in the vban audio receiver. Tweak the rate adaption\n    a little.\n  - ACP will now set a UCM verb before probing the pro-audio devices.\n  - More bugfixes and improvements.\n\n\n## PipeWire\n  - An old regression was fixed with where some nodes would not run. (#3405)\n  - Suspend was improved a little to avoid races when the session manager would\n    suspend right when a driver was starting.\n\n## Modules\n  - module-rtp-sap does not use the deprecated inet_aton anymore.\n  - Fix an off-by-one in the vban audio receiver. Tweak the rate adaption\n    a little. (#3380)\n\n## SPA\n  - ACP will now set a UCM verb before probing the pro-audio devices. (#3407)\n  - The mandatory flag will be set now on the video modifiers.\n  - EVL was updated to Xenomai4 r46 and xbuf creation was improved.\n  - An option was added to force colors in the log even when logging to !tty.\n  - The return type of spa_pod_builder_control() was fixed.\n  - inotify errors are handled better now. (#3439)\n\n## pulse-server\n  - A regression was fixed where removed events would not be shown in some\n    cases. (#3414)\n\n## Bluetooth\n  - Improve compatibility with more devices, avoid reusing the same transport\n    for different media-sink instances to avoid encoder resets.\n  - Improve enumeration of codec profiles for BAP and A2DP.\n\n## JACK\n  - Ensure we can't iterate ports from a deactivated client. Also make sure\n    the JACK clients with the node.always-process=false always show their\n    ports. (#3416)\n\n## GStreamer\n  - A potential crash was fixed in the device provider when stopping.\n\n# PipeWire 0.3.77 (2023-08-04)\n\nThis is a quick bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - Fix a bug in ALSA source where the available number of samples was miscaluclated\n    and resulted in xruns in some cases.\n  - A new L permission was added to make it possible to force a link between\n    nodes even when the nodes can't see each other.\n  - The VBAN module now supports midi send and receive as well.\n  - Many cleanups and small fixes.\n\n\n## PipeWire\n  - Global objects now only show permissions that apply to them. The permissions\n    required to perform various API calls are documented.\n  - A new L permission was added to make it possible to force a link between\n    nodes even when the nodes can't see each other.\n  - Config files need to end with .conf.\n  - The client.api is added the to global properties of a node.\n\n## modules\n  - The VBAN module now supports midi send and receive as well.\n  - Fix module-profiler alignment and make sure we don't overrun our buffers with\n    many nodes.\n  - Protect libcanberra calls with a mutex because it is not thread safe. (#2834)\n\n## SPA\n  - Support older compilers for spa_clear_ptr().\n  - Fix a bug in ALSA source where the available number of samples was miscaluclated\n    and resulted in xruns. (#3395)\n  - Don't set inotify on /dev but on the videoX devices directly. Setting inotify\n    on /dev would cause a lot of spurious wakeups and lock contention in the\n    fsnotify subsystem on some benchmarks.\n  - Audioconvert now rate limits the warnings when it runs out of buffers. (#3384)\n\n## pulse-server\n  - Some bugs and inconsistencies were fixed in device lookup.\n  - Improve subscribe event emission, detect changes to the sink or the monitor\n    and send the right sink/source event. (#3388)\n\n## JACK\n  - The libjack.so now has a minor version of 3 and a micro version of the pipewire\n    version.\n  - JACK clients will now see portregistration from other jack clients when they\n    activate/deactivate like real JACK. (#3260)\n\n## bluetooth\n  - Use some more autoptr cleanups, fix some leaks.\n\n# PipeWire 0.3.76 (2023-07-28)\n\nThis is a quick bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - Fix a regression that would cause the MPV pipewire backend to fail because\n    of a spurious thread-loop signal.\n  - Fix a crash when DBus is not found.\n  - ALSA hires timestamps are now disabled by default.\n  - Some more fixes and improvements.\n\n## PipeWire\n  - A new option was added to pw-thread-loop to signal when the thread starts.\n    This is only used in module-rt to avoid regressions in mpv. (#3374)\n  - Fix a compilation problem.\n  - Stream flags now only set the properties when not already set. This fixes\n    a regression with node autoconnect. (#3382)\n\n## Tools\n  - pw-cat will now stop when the stream is disconnected. (#2731)\n  - Improve the pw-cat man page, mention that stdin/stdout handling is only\n    on raw data.\n\n## modules\n  - module-rt will now not crash when dbus is not available but error out as\n    before.\n  - A new VBAN (vb-audio.com) sender and receiver was added. (#3380)\n\n## SPA\n  - Add an option in audioconvert to disable volume updates. (#3361)\n  - ALSA hires timestamps are disabled by default because many drivers seem to\n    give wrong timestamps and cause extra delay.\n\n## bluetooth\n  - LE Audio support is now enabled by default when liblc3 is available now that\n    bluez has support for detecting the hardware features.\n\n# PipeWire 0.3.75 (2023-07-21)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - Link permissions between nodes are now enforced. This avoids potential portal\n    managed screencast nodes to link to the camera even though it was not assigned\n    permissions to do so by the session manager.\n  - Libcamera and v4l2 devices now have properties so that duplicates can be\n    filtered out by the session manager.\n  - A bug with draining was fixed where a buffer would be marked EMPTY and would not\n    play when it contained drained samples. (#3365)\n  - Many fixes and improvements.\n\n\n## PipeWire\n  - Permissions for links between nodes are now enforced. The link will now check\n    that the owner clients of the nodes can see each other before allowing the link.\n    This avoids screensharing clients to accidentally being linked to the camera\n    nodes by the session manager. A side effect is that patchbay tools will no longer\n    be able to link portal managed screencast nodes to the camera, for this we need\n    a new permission for those patchbay clients. (wireplumber#218)\n  - The stream.rules/filter.rules are now evaluated when connecting the stream/filter\n    so that more properties can be matched. (#3355)\n  - Move some internal events from the context to the nodes to better handle per-node\n    threads in the future.\n  - The thread-loop will now signal when the thread is started.\n\n## modules\n  - A timestamp workaround in module-raop was reverted because it does not work\n    in all cases. Instead latency was increased to 1.5 seconds, which also makes\n    the problematic device in question work. (#3247)\n  - The profiler module was reworked a bit to use the new node realtime events. It\n    should now also handle dynamically added and removed drivers.\n  - The module-rt now does the rtkit calls from a separate thread so that it does\n    not block the main thread. This could cause deadlocks during startup in some\n    cases. (#3357)\n\n## SPA\n  - Atomic operation macros were move from internal pipewire API to public API.\n  - The video-info structure now has a new SPA_VIDEO_FLAG_MODIFIER_FIXATION_REQUIRED\n    flag to instruct the application to fixate the modifiers. This simplifies some\n    logic in applications a lot.\n  - The libcamera and v4l2 nodes now have properties to enumerate the device id\n    they are using. This can be used to match v4l2 devices and libcamera devices\n    and filter out duplicates.\n  - A bug with draining was fixed where a buffer would be marked EMPTY and would not\n    play when it contained drained samples. (#3365)\n\n# PipeWire 0.3.74 (2023-07-12)\n\nThis is a quick bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - Fix a critical bug where audio to bluetooth devices would cut out\n    randomly. (#3316)\n  - Improve RAOP compatibility.\n  - Avoid crashes after an update.\n  - Small fixes and improvements.\n\n\n## PipeWire\n  - Mix info on port is now created explicitly.\n  - Remove the node as a driver peer when stopping. This caused some problem\n    with playback on and other remote bluetooth devices. (#3316)\n  - Work on avoiding crashes when loading new modules that use internal API\n    with old libpipewire. This is typical after an update where the old library is\n    still loaded by an application but when a new stream is created, updated\n    modules are loaded. (#3243)\n\n## Modules\n  - The RTP source module now has an option to ignore the SSRC, which is\n    useful to continue to receive the stream when the sender is restarted.\n  - The native protocol will refuse to load twice now instead of silently\n    ignoring the error.\n  - module-raop is compatible with more devices. (#3247)\n\n## SPA\n  - plugins will now warn when running out of buffers. This is always a bad\n    thing.\n  - Merge scope based cleanup macros.\n  - Add ratelimit function.\n\n# PipeWire 0.3.73 (2023-07-06)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - Fixes an ALSA resume after suspend error.\n  - Handle and disable seemingly wrong hires timestamps from ALSA.\n  - Filter-chain now has loadable plugin modules. The LV2 and sofa plugins are\n    moved to a separate .so file to make things more modular.\n  - Rate changes in the graph should now be handled more gracefully by loopback\n    and filter-chain.\n  - A regression in the rtp-sap module was fixed where it would in some cases\n    fail to start.\n  - A potential crash in the peaks resampler was fixed.\n  - Many cleanups and other small bug fixes.\n\n\n## PipeWire\n  - Fix a potential segfault when no fallback driver was set in the config.\n  - Improve OPUS detection.\n  - Add ASYNC flag to pw-filter and pw-stream when queue/dequeue is not called\n    from the process function. This ensure we allocate an extra buffer.\n  - Discard pending process callbacks when disconnecting. (#3314)\n  - Cleanups and improvements to the debug environment variable parsing.\n  - The graph rate was tweaked to better handle very low rates such as those\n    requested by pavucontrol when it does the signal monitoring.\n\n## Modules\n  - An example filter module was added.\n  - Filter-chain and loopback now disable the resamplers if no rate is specified\n    and will always follow the graph rate.\n  - Improve setup of filter-chain. The graph is now created when starting\n    because this ensure the target graph rate is known.\n  - Filter-chain can now link notify ports to control ports in the graph.\n  - Filter-chain now has loadable plugin modules. The LV2 and sofa plugins are\n    moved to a separate .so file.\n  - A regression in the rtp-sap module was fixed where it would in some cases\n    fail to start.\n  - Module-rt now has options to disable rlimits, portal and rtkit.\n  - module-raop-discover now has an options to set the latency. (#3247)\n\n## Tools\n  - pw-cat now supports overriding all stream properties.\n\n## SPA\n  - Disable rate negotiation when the resampler is disabled. We will always\n    follow the graph rate. \n  - Set device.icon property for UCM ports as well.\n  - Improve ALSA recover when using hires timestamps. This fixes some problems\n    after resume from suspend. (#3315)\n  - ALSA will now warn and disable hires timestamp when they seem wrong.\n    They can also be disabled manually with a property.\n  - V4l2 will now gracefully handle ENOTTY when enumerating frame sizes and\n    frame rates. (#3325)\n  - A potential crash in the peaks resampler was fixed. (#3320)\n\n## pulse-server\n  - A client crash in pavucontrol is avoided by always setting a card name.\n  - The graph rate is now taken correctly when using the FIX flags. (#3317)\n  - An option was added to ignore the FIX flags of a stream. Also the\n    documentation for those options was updated. (#3317)\n  - module-raop-discover now support latency_msec. (#3247)\n\n## Bluetooth\n  - Remove an assert and issue a warning/recover instead when a buffer is too\n    small.\n\n## GStreamer\n  - The device provider does locking when destroying the registry.\n\n# PipeWire 0.3.72 (2023-06-26)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - Fix a critical bug that would refuse to update the samplerate or\n    buffersize in JACK clients. (#3226)\n  - A new module-netjack2-driver and module-netjack2-manager were added\n    that are compatible with NETJACK2. This allows PipeWire to become\n    a NETJACK2 manager or a driver between JACK2 or PipeWire servers.\n  - Support was added for firewire devices with FFADO. This is untested\n    for now and MIDI is not implemented yet.\n  - The node scheduling was optimized some more. External drivers are now\n    as efficient as in-server ones. This should improve performance of\n    various drivers such as bluetooth and JACK based drivers.\n  - Many, many bug fixes and a ton of improvements.\n\n\n## PipeWire\n  - pw-filter can now be used to write sinks and sources.\n  - The node activation for drivers was changed. The driver now does not\n    need to go to the server to start the processing cycle. This makes\n    out-of-server drivers as efficient as in-server drivers.\n  - Don't try to use drivers with 0 priority as fallback drivers. This\n    avoids making the screencast driver a driver for audio. (#3219)\n  - Improve xrun count reporting in pw-top and the profiler. Now each\n    node has their own xrun counter updated when it fails to complete\n    processing during the cycle.\n  - pw-filter now also has support for TRIGGER.\n  - A potential fd leak was found when fds were send to a zombie client.\n    (#1840)\n  - Fix a bug where monitor or capture streams were logged twice in the\n    profiler. (#3278)\n  - Remove stream hooks safely. (#3251)\n  - A bug in serialization of container properties was fixed. This could\n    result in truncated property values. (#3290)\n  - The PIPEWIRE_AUTOCONNECT environment variable now always overrides the\n    autoconnect settings of streams. (#3299)\n  - Node, port and link destroy now avoids some useless work.\n  - Port will now try to renegotiate a new format when idle. (#3266)\n\n## Modules\n  - The module-sap now is more compatible with AES67.\n  - A new FFADO driver module was added. This is completely untested because\n    of lack of hardware. Please test and report issues.\n  - A new NETJACK2 driver and a NETJACK2 manager module were added. These\n    should be drop in replacements for the JACK2 parts.\n  - The RAOP discover module now tries harder to only list devices once.\n  - The zeroconf discover module now tries harder to only list devices once.\n  - The RAOP sink module now handles latency better and is compatible with\n    some more devices. (#3247, #3282)\n  - The loopback and filter-chain modules now always dequeue the last input\n    buffer to avoid stuttering in some cases. (#3276)\n  - The SPA node factory module can now also export nodes. This is used to\n    export the PTP clock from the AES67 config file.\n  - A bug in module-jack-tunnel was fixed that would cause stuttering and\n    corrupted output in some cases. (#3255)\n  - The resampler is now disabled in module-loopback and filter-chain when\n    the samplerate is set to follow the graph rate. (#2969)\n  - The way the mixer peer is sent to clients was improved. It is now also\n    possible to let a remote node know about mixer port removes, which\n    can avoid memory leaks and some code simplifications.\n\n## SPA\n  - Monitor ports now report latency correctly.\n  - The ALSA plugin now uses htimestamp to get a more accurate ringbuffer\n    position to estimate the clock skew.\n  - The channelmixer now has min/max-volume settings to limit or fix the\n    volume.\n  - The ALSA plugin can now control the playback and capture rate of USB\n    gadgets. This can avoid resampling and instead use the USB feedback\n    to control the rate.\n  - The ALSA output to multiple devices has been improved, some lockups\n    are avoided when the device ringbuffer is full.\n  - The compress-offload sink has improved negotiation.\n\n## pulse-server\n  - Only try to use GSettings when the schema exists.\n  - @DEFAULT_SOURCE@, @DEFAULT_SINK@ and @DEFAULT_MONITOR@ are now correctly\n    handled as targets in playback and capture streams. (#3284)\n  - 2 new quirks are added to disable volume updates on sinks/sources.\n    (#1517)\n  - The virtual-sink and virtual-source modules were added. These are really\n    example modules but actually also work and are useful on PulseAudio so\n    implement them as well.\n  - Fix initial stream volumes. (#3306)\n\n## Bluetooth\n  - Only register A2DP or BAP when we have codecs.\n  - Include codec into the media.name\n\n## JACK\n  - Fix a critical bug that would refuse to update the samplerate or\n    buffersize. (#3226)\n  - Improve updates of samplerate/buffersize, delay the updates until the\n    client is activated. (#3297)\n  - Use the new mix-info updates to simplify the mixer setup and peer\n    detection.\n\n## GStreamer\n  - Fill default strides instead of 0 on pipewire video buffers. (#3236)\n\n# PipeWire 0.3.71 (2023-05-17)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - A new zero-latency jackdbus bridge was added. This works similar to what\n    PulseAudio has to offer and creates a sink/source when jackdbus is\n    started. It is however much more efficient and runs the complete PipeWire\n    graph as a synchronous JACK client with no added latency.\n  - Many performance improvements. Activation of remote nodes is more\n    efficient, fewer eventfds are required on the clients, less callback\n    overhead in performance critical paths and an optimized poll function\n    was added. This was mainly driven by the jackdbus module to get the lowest\n    possible overhead when running the graph.\n  - The JACK notify callback implementation was reworked to emulate better what\n    JACK does, improving compatibility with ardour7 and the JACK stress test.\n  - More work on BAP devices. Device latency is now passed on to\n    applications also for multi-device headsets, and channel allocation\n    is handled better.\n  - Many more improvements and bugfixes.\n\n\n## PipeWire\n  - Remove the hardcoded limit on io_areas. This is used to link nodes together\n    and exchange buffers, it was limited to 2048 but now dynamically scales\n    based on requirements.\n  - Rate and quantum changes are now applied correctly in more cases. (#3159)\n  - Updates to client-node to more efficiently process the driver.\n  - The profiler information was improved to be more accurate. It should\n    now work better for remote drivers.\n  - Some potential memory map errors were fixed in the protocol because in some\n    case with large messages, some fds were closed too soon.\n  - pw-filter now implements the pw_filter_set_active() method.\n  - A potential out-of-buffers case was fixed in capture pw-streams where buffers\n    were not moved to the recycle queue when the node suspended.\n  - Nodes are now always woken up with the eventfd. Previously there were\n    some optimizations in the server to directly call into the node process\n    function but that optimization is not necessary. Without this optimization\n    it is now possible to run nodes in different threads.\n  - pw-stream trigger is now implemented correctly in all cases.\n  - Remote nodes now use one eventfd less because they get triggered with the\n    node eventfd directly.\n  - Monitor ports are now ignored in latency updates.\n  - A potential race when reporting an error to a client was fixed. (#3192)\n  - Fix a bug where always_process nodes would sometimes IDLE. (#3189)\n  - Optimize peer activation. Nodes are now activated more efficiently and\n    independent of the number of links. It also reduces the number of eventfds\n    and memory in remote clients.\n  - A bug in property serialization was fixed. Values with spaces would only\n    serialize the first part of the value.\n\n## Modules\n  - Correctly handle the echo-canceler plugin init method fallback. The\n    samplerate was not correctly configured. This is only a regression for people\n    that have external echo-canceler plugins.\n  - RAOP sink now only sets the volume on the remote end when the stream is\n    recording. (#3175)\n  - RAOP discover now tries to deduplicate entries from the same host.\n  - A new zero-latency jackdbus bridge was added. This works similar to what\n    pulseaudio has to offer and creates a sink/source when jackdbus is\n    started. It is however much more efficient and runs the complete PipeWire\n    graph as a synchronous JACK client.\n  - The access module uses a more secure way to check the application\n    executable.\n  - module-combine-stream now has configurable delay and latency for each\n    stream. This can be used to align sinks/sources with different latencies.\n  - A potential crash in module-pulse-tunnel was fixed when shutting down.\n    (#3199)\n  - Module-rt will now clamp the nice value to the min allowed value to avoid\n    errors from rtkit. (#3186)\n  - Fix a bug with the session counters in module-rtp-sap. Also use the right\n    format for L24. Improve the AES67 example config.\n  - Improve some warning and info messages in module-rt. (#3194)\n  - module-rtp-session should now do something when started without arguments.\n  - A potential crash in module-rtp-session was fixed. (#3217)\n  - module-filter-chain has better error reporting when a convolver fails to\n    load. (#3223)\n\n## SPA\n  - Move some things around to avoid compiler warnings. (#3171)\n  - Increase mixer ports. Reorganize some things and bump mixer input ports\n    from 128 to 512.\n  - Fix a potential crash when a node is scheduled before it completes\n    the setup.\n  - The JACK sink and source SPA plugins have seen some improvements.\n  - Allow the peaks resampler still if we disabled resampling.\n  - Perform more cleanup in audioadapter when in error.\n  - An optimized non-cancellable loop implementation was added.\n  - Callbacks were optimized with a _fast() varsion that doesn't check the\n    version and method. When this check is performed earlier, it can\n    be skipped in performance critical places.\n  - Some of the callbacks and system methods are now using the fast function\n    calls in critical paths.\n  - A potential division by zero was fixed in the ALSA plugins.\n  - Improve rate and quantum when starting audioconvert.\n  - Make it possible to override node.driver in the SPA null-audio-driver.\n    (#3220)\n\n## pulse-server\n  - The audio info parameter parsing was refactored and improved.\n  - Fix some races with clients exiting when playing samples.\n  - An option was added to change or disable the dbus name registration.\n    (#2987)\n\n## Bluetooth\n  - Implement battery reporting using AT+XEVENT.\n  - Disable hardware volume for 3M WorkTunes.\n  - Implement BAP audio locations (channel positions) by using the new\n    bluez properties.\n\n## JACK\n  - Fix some errors reported by JACK test.cpp. (#2638)\n  - Add jack.show-midi option to show/hide midi ports.\n  - Add jack.max-client-ports option. JACK also has a port limit and so\n    PipeWire needs it as well to make the tests happy.\n  - Call the shutdown callback only when the server stopped, not when there\n    is a random error. (#3070)\n  - Avoid registering the same port name twice.\n  - Call port registration callbacks in activate/deactivate.\n  - Improve jack_port_connected().\n  - Improve some error reporting.\n  - The JACK headers were updated to a newer version.\n  - JACK callbacks are now managed with an event queue to simulate\n    more what JACK does. This avoids emitting callbacks when a method is blocking\n    for a reply and causing deadlocks. (#3183)\n  - Assign unique names to JACK clients. (#2833)\n  - Fix a potential crash when the thread_utils was used after free.\n  - Aliases are now not filled in by default to improve JACK compatibility.\n    (#3154)\n\n# ALSA\n  - The ALSA plugin will now wait for negotiation to complete or an error\n    before _prepare() completes. This makes more applications deal correctly\n    with the potential errors.\n\n# Docs\n  - A new document about how scheduling is implemented was added.\n  - Update the pw-cli man page. (#2988)\n  - Document the SPA Pod serialization.\n  - Document the PipeWire native protocol.\n\n# PipeWire 0.3.70 (2023-04-20)\n\nThis is a quick bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - Fix a regression in the scheduler that could keep some nodes IDLE.\n  - Fix a regression in the biquad filters in filter-chain.\n  - Fix a regression and potential crash in the ALSA mixer probing.\n  - Fix a regression in pipewiresrc with timestamps that could cause cheese\n    to record video with wrong timestamps.\n  - Beamforming support was enabled in the echo-canceler.\n  - pulse-tunnel and raop-sink will now proxy local volume changes to the\n    remote end.\n  - More bugfixes and improvements.\n\n\n## PipeWire\n  - Fix a bug in the graph scheduler where some nodes might stay IDLE in\n    some cases (like when connecting the source of the echo-canceler to the\n    sink).\n  - pw-metadata can now be created from the factory with initial values for\n    the metadata. (#3076)\n  - Conditions were added to the pipewire config file to make it possible to\n    configure the access module and the exec sections.\n  - Support was added in pw-stream to intercept and override properties for\n    the adapter. This can be used to implement custom volume control, for\n    example.\n\n## Tools\n  - pw-metadata can now list all available metadata objects with the -l\n    option.\n  - A new pw-config tool was added to debug configuration file loading and\n    parsing.\n\n## Modules\n  - The webrtc echo canceler now supports beamforming. You can provide the\n    coordinates of the microphones and let webrtc perform beamforming on\n    the captured samples to improve quality and remove noise.\n  - Fix a regression in the filter-chain with biquad filters. (#3161) and\n    improve error reporting.\n  - The pulse-tunnel will now proxy the volume changes to the remote end.\n  - The RAOP sink will now send volume parameters to control the volume\n    remotely. (#2061)\n\n## SPA\n  - One ALSA commit was not correctly reverted and might cause crashes.\n  - The ALSA sink and source now calculate the ALSA ringbuffer memory\n    location more correctly which might improve compatibility with some\n    hardware.\n  - v4l2 now sets the values of the controls in the Props param.\n\n## Pulse-server\n  - The echo-canceler aec_args are now parsed like they would be under\n    pulseaudio.\n\n## Bluetooth\n  - More work on synchronizing BAP devices.\n\n## GStreamer\n  - The GStreamer source can now renegotiate the format when it changes.\n  - The GStreamer source now uses the BaseSrc clocking code to implement\n    the clock and timing code.\n\n# PipeWire 0.3.69 (2023-04-13)\n\nThis is a quick bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - Reverted the UCM changes, they seem to cause regressions causing audio\n    to be muted in some cases.\n  - Fix a regression in the scheduler where a driver node might not be marked\n    runnable in some cases, like when echo-cancel is used. (#3145)\n  - Handle links from the driver to itself. This makes the midi bridge work\n    again. (#3153)\n  - ALSA rate matching for sources was fixed. It would previously wait too\n    long for rate matching and then cause drift. This should reduce\n    crackling and stuttering when capturing in low latency.\n  - Fix the GStreamer clock to make cheese video recording work again. (#3149)\n  - More fixes and improvements.\n\n## PipeWire\n  - Fix a regression in the scheduler where a driver node might not be marked\n    runnable in some cases, like when echo-cancel is used. (#3145)\n  - Handle links from the driver to itself. This makes the midi bridge work\n    again. (#3153)\n  - Some man pages were improved.\n  - Fix a potential crash when thread-loop is destroyed before the loop.\n    (#3150)\n\n## Modules\n  - A new raw biquad filter was added to filter-chain. You can manually set the\n    6 parameters and you can use this to create custom filters per sample rate.\n    (#3139)\n  - The echo-canceler now supports different channels for the capture and playback\n    streams.\n\n## SPA\n  - A SB Audigy specific profile set was added to make better use of the\n    controls. (#2934)\n  - More ALSA IRQ based scheduling improvements.\n  - ALSA rate matching for sources was fixed. It would previously wait too\n    long for rate matching and then cause drift. This should reduce\n    crackling and stuttering when capturing in low latency.\n  - The echo-cancel plugin API has a new method to make it possible to have\n    different channels for capture, source and playback.\n  - Reverted the UCM changes, they seem to cause regressions causing audio\n    to be muted in some cases.\n\n## Bluetooth\n  - Many more BAP fixes and improvements. Devices are now created as a set\n    and can be combined into one device by the session manager.\n\n## GStreamer\n  - Fix the GStreamer clock to make cheese video recording work again. (#3149)\n\n# PipeWire 0.3.68 (2023-04-06)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\nThis release contains a huge number of changes, some of which might cause\nregressions. Please report anything that seems to fail after the upgrade.\nUCM devices in particular might have changed names, profiles and ports that\nmight require changes in custom scripts.\n\n## Highlights\n  - Symbolic links to the pipewire binary are now used instead of recompiling\n    the same binary multiple times.\n  - Changes to the graph scheduler related to quantum/rate updates and\n    calculation of the node states. Things should start and switch between\n    quantums and rates more smoothly now and especially virtual devices should\n    now only run when required.\n  - A new RTP session module was added. This uses the Apple MIDI protocol\n    to configure low-latency bidirectional MIDI (and with a PipeWire specific\n    extension, also audio) between machines. OPUS encoding was added to the\n    RTP formats. The SAP module was separated from the rtp-sink/source module\n    to make it more usable.\n  - A new runtime debug property was added to all streams and nodes to trigger\n    a save of the raw samples to a wav file. Support for this has also been\n    added to the echo-canceler to debug potential issues.\n  - Module pulse-tunnel has improved rate matching and synchronization\n    support. It should also not drift anymore for capture devices.\n  - The link-factory now ignores by default the link.passive property. This means\n    that tools like pw-link or jack clients and wireplumber can't make passive\n    links anymore. The reason is that there is now much more advanced logic in\n    PipeWire itself to handle passive links based on node and port properties.\n  - The RAOP sink was ported to new OpenSSL functions. Digest passwords are\n    handled correctly now and support for more devices was added.\n  - The ACP code was updated with new PulseAudio UCM code: \"Create multiple\n    profiles per verb for conflicting devices\". This might change the names\n    of devices, profiles and ports so scripts might need to be updated.\n  - Upmixing is disabled again by default. We now ship config files that\n    distros can install to enable upmixing again. The reason being that PipeWire\n    should not apply fancy DSP processing to audio by default.\n  - Many cleanups and bugfixes, including some crashes and memory corruption\n    bugs.\n\n## PipeWire\n  - Various FreeBSD compilation fixes.\n  - Don't crash when calling _connect twice in stream/filter. (#3091)\n  - Links are now installed instead of compiling the pipewire binary\n    multiple times.\n  - There is now a new core event bound_props that augments the bound_id event\n    with the global properties. This can be used to get the global.serial among\n    other global properties. It also makes it possible in the future to let the\n    server allocate unique names or uuids.\n  - Fix a bug where the server could go into an infinite reconfigure loop when\n    the samplerate of a driver would change.\n  - When a samplerate was forced, restore the previous best samplerate when the\n    samplerate is no longer forced. (#2133)\n  - Rework how the states of the nodes in the graph are calculated. A more\n    refined algorithm is now used that only runs nodes that need to run.\n  - Rework how the quantum change is applied to the graph. Drivers are now\n    responsible for using the new updated rate/quantum before starting a new\n    cycle. This avoids starting a cycle with an old quantum first.\n  - pw-stream and pw-filter will now ensure that the Trigger event is called\n    from the main thread.\n  - node.force-rate=0 will now force the node.rate on the graph, forcefully\n    switching the hardware into the new rate if possible. (#3026)\n  - Additional checks were added to the thread-loop to check locking order.\n  - Additional checks were added to pw-stream and pw-filter to check if methods\n    are called from the right thread context.\n\n## modules\n  - A new RTP session module was added. This uses the Apple MIDI protocol\n    to configure bidirectional MIDI (or audio) between machines.\n  - SAP support was removed from module-rtp-source and module-rtp-sink and\n    moved to a separate module. This makes it possible to use the RTP modules\n    without SAP support as well.\n  - The echo-cancel module now has support to save the signals to a wav\n    file for debugging purposes.\n  - The RTP modules now have support for the OPUS codec.\n  - The RAOP module was ported to new openssl encryption functions and handles\n    digest passwords correctly now.\n  - module-raop-discover now has match rules to be able to select the streams\n    and set properties.\n  - Module pulse-tunnel has improved rate matching and synchronization\n    support. (#3093)\n  - Fix potential memory corruption and infinite loops because\n    module-pulse-tunnel was unloaded from the wrong thread. \n  - The link-factory now ignores by default the link.passive property. This means\n    that tools like pw-link or jack clients and wireplumber can't make passive\n    links anymore. The reason is that there is now much more advanced logic in\n    PipeWire itself to handle passive links based on node and port properties.\n  - module-echo-cancel will now clear its buffers after a suspend to avoid\n    playing stray samples.\n  - module-raop-sink will now handle 0 timing_port replies. (#3133)\n\n## SPA\n  - The adapter module now has support for saving the raw audio to a wav\n    file for debugging purposes.\n  - The ACP code was updated with new PulseAudio UCM code: \"Create multiple\n    profiles per verb for conflicting devices\". This might change the names\n    of devices, profiles and ports so scripts might need to be updated.\n  - Upmixing was disabled again by default. We now ship config files that\n    distros can install to enable upmixing again. (#3081)\n  - audioadapter and audioconvert have seen improvements in the experimental\n    non-DSP/passthrough mode.\n  - Fix a potential race where the dummy drivers could fail to stop a timer\n    and cause endless warnings in the logs.\n  - The ALSA plugin has experimental support for IRQ based scheduling. This\n    should decrease latency for some (mostly USB) drivers. This should bring\n    latency within JACK latency. More work on this will be done before the\n    1.0 release later this year.\n  - Audioconvert now has support for volume ramping. (#3046)\n  - A new loop method was added the check if a thread is currently running the\n    loop.\n  - channelmix.disable and resample.disable now generate an error when true\n    and channelmixing or resampling is required in the converter.\n\n## Bluetooth\n  - Fix a crash in some cases when a device was disconnected.\n  - Support async transport state changes. This avoids some lockups when the\n    bluetooth backend is having issues. (#3023)\n  - Align BAP sinks. This improves synchronization between earpieces.\n\n## ALSA\n  - Improve properties in pw-top and pavucontrol.\n\n## pulse-server\n  - Improve error handling from pulse-tunnel.\n  - Generate silence correctly for unsigned formats as well.\n  - Review buffer params. The streams should now just work with 1 or 2\n    buffers.\n  - module-rtp-send and module-rtp-recv now have support for the OPUS codec.\n\n# JACK\n  - Make sure we don't call any callbacks anymore when deactivating. (#2781)\n\n## GStreamer\n  - Sort the device by priority in deviceprovider. (#3072)\n\n# PipeWire 0.3.67 (2023-03-09)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - The loopback module and other couples streams will now not randomly\n    fail in some cases. (#3028)\n  - The RTP module now has support for sending and receiving MIDI as\n    well.\n  - The compress offload sink has seen many improvements. It now uses\n    ioctls directly to bypass limitations of tinycompress (to be able\n    to detect the available codecs, for example).\n  - Pulse server compatibility was improved for some apps by improving\n    the format parsing and FIX_ stream flag handling.\n  - The min quantum in the pulse server was changed from 256/48000 to\n    128/48000 to fix some issues with games that expect 5ms or less of\n    latency.\n  - The Bluetooth plugin has seen many improvements in packet scheduling\n    to attempt to reduce stuttering on some devices.\n  - The ALSA plugin now handles some impossible cases better. This fixes\n    recording in QEMU again. (#2971)\n\n## PipeWire\n  - SPDX tags were added to the code for copyright information.\n  - The random number functions were made more usable.\n  - The port property code was moved from the adapter to the port\n    implementation itself to make it more useful and unified for the\n    cases where no adapter is used (midi and video).\n  - Fix a potential overflow in mixer areas.\n  - Improve runnable state calculations of nodes. This is part of\n    ongoing work to avoid running nodes that should not need to run.\n  - The stream will now always call the process function when using\n    trigger, even if there are no buffers. This avoids stalls of the\n    processing graph in some cases. (#3028)\n  - Links are now marked as passive by PipeWire itself so that\n    the right thing happens in all cases.\n  - Implement the in/out/true values for the node.passive property.\n    Place a passive state on ports to make passive links on a port\n    by port basis.\n\n## Tools\n  - pw-cat has seen improvements in the encoded file playback case.\n\n## Modules\n  - The rtp module has support for MIDI now.\n  - DSCP is now configurable in the RTP module.\n  - The loopback module doesn't randomly fail to work anymore. (#3028)\n\n## SPA\n  - The null-audio sink can now be given a format and it will return this\n    instead of the default float ones. This makes it possible to make a\n    null-sink that has a given format.\n  - The compress offload sink has seen many improvements. It now no longer\n    uses tinycompress to be able to detect the available codecs.\n  - The ALSA plugin now handles some impossible cases better. (#2971)\n  - Fix compilation on older compilers. (#3050)\n\n## Pulse-server\n  - The FIX_ flags are now implemented more correctly by fixating the\n    stream to the format of the sink/source they ask to be connected to.\n    There is now also an option to override the fixation based on rules.\n  - Format parsing was improved and should now support all format strings\n    supported by pulseaudio including upper and lower case variants\n    and shortcuts.\n  - Channelmap parsing was improved and should now reject invalid\n    channelmaps as well as support the shortcuts supported by pulseaudio.\n  - Escape codes in module arguments now work as it does in pulseaudio. (#3071)\n  - The min quantum was changed from 256/48000 to 128/48000 to fix some\n    issues with games that expect 5ms or less of latency.\n\n## JACK\n  - jack.passive-links can now be used to have a JACK client make passive\n    links and the node.passive property is no longer used for this because\n    it has a different function.\n  - The qsynth rule was updated to the new node.passive features. It is now\n    only passive on the output side.\n\n## Bluetooth\n  - BAP delay and transport latency are handled now.\n  - A2DP and SCO can now use bigger buffers to improve quality when the\n    reception is jittery.\n  - The AT+BCC command is now implemented.\n  - Packet encoding now happens ahead of time when possible to avoid delays\n    before sending it.\n  - Source should now always produce complete (padded) buffers to avoid sync\n    problems.\n  - Don't set unnecessary socket options.\n\n## GStreamer\n  - The pipewiresrc now has an autoconnect argument.\n  - The metadata plane count is now handled correctly in more cases.\n  - Stream errors are now handled correctly to stop the GStreamer elements.\n\n# PipeWire 0.3.66 (2023-02-16)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - Fix a regression in the pulseaudio module-combine-stream because the new\n    module-combine-stream was not installed.\n  - PipeWire can now generate a limits.d config file with our recommended\n    settings for priorities and memlock.\n  - Modules, exec and objects can now be loaded depending on conditions. One\n    example is the X11-bell module that can now be disabled with a custom\n    property override.\n  - Filter-chain has a new mysofa based spacializer plugin.\n  - Support was added for different clocks that allow the RTP modules to work\n    with a PTP clock, for example.\n  - Many bugfixes and improvements.\n\n\n## PipeWire\n  - Avoid rate switches when the graph is idle.\n  - The rate selection algorithm was improved. This ensures minimal performance\n    and quality loss when resampling.\n  - The default min.quantum was set to 32 again after it got erroneously changed\n    to (the too low) 16 in version 0.3.45.\n  - Fix compilation issues with rust bindings because of macros in defines.\n    Work around it for now. (#2952)\n  - Invalid file mappings are now refused (#2617 #2914 #3007)\n  - Modules, exec and objects can now be loaded depending on conditions. One\n    example is the X11-bell module that can now be disabled with a custom\n    property override.\n  - Filter now also supports _trigger_process() to drive the graph.\n  - TID is now added to the journald log.\n  - PipeWire generates and installs */etc/security/limits.d/25-pw-rlimits.conf*\n    that by default contains project's recommended settings. Creation of the\n    pipewire group is left to the distro or user ( `groupadd -r pipewire` ).\n    See the rlimits-* Meson options for controlling this behavior.\n  - Additionally there is now by default disabled Meson option that will\n    install */etc/security/limits.d/20-pw-defaults.conf* with the current Linux\n    default memlock value. Distros with only kernels >=5.16 or always using\n    systemd v251 or newer do not need this. But all other builds should set the\n    `-Dpam-defaults-install=true` Meson option to ensure that the memlock value\n    is always large enough. Thanks to Rickie Schroeder for pointing out that\n    the default Linux memlock value has been somewhat recently increased.\n\n## modules\n  - Install module-combine-stream.\n  - RTP source now has support for custom channel names.\n  - RTP source will now stop when inactive.\n  - Filter-chain has a new mysofa based spacializer plugin.\n  - The RTP modules can now use direct clock timestamps to send and receive\n    packets. This makes it possible to synchronize sender and receiver with\n    a PTP clock, for example.\n  - Filter-chain now has an invert plugin to invert the polarity of a\n    signal. (#3008)\n\n## SPA\n  - There is now an option to set the channels used for probing Pro Audio\n    devices. This could unlock more samplerates for some devices when they are\n    probed with fewer channels. (#2990)\n  - Support was added for other clocks than the MONOTONIC clock in the\n    driver nodes. This can be used to synchronize the graph to a PTP clock,\n    for example.\n  - The ALSA source has some more headroom when rate matching to avoid\n    stuttering when following another driver.\n  - libcamera controls are now mapped to standard PipeWire property values.\n  - The channelmixer has seen some improvements. MONO and undefined channel\n    layouts are now upmixed and downmixed more correctly. (#3010)\n\n## Bluetooth\n  - Many BAP support fixes.\n\n## GStreamer\n  - The gstreamer elements now support buffer video metadata so that strides\n    are correctly handled.\n  - pipewiresrc will now error out correctly in more cases. (#2935)\n\n## JACK\n  - The frame to/from time functions are improved to also work with negative\n    time and frame offsets.\n\n# PipeWire 0.3.65 (2023-01-26)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - Add back the deprecated symbols but make sure a deprecated warning is\n    emitted for them. This fixes compilation issues in bindings.\n  - Fix an error in the AVX code that could cause crackling in filter-chain\n    when using the mixer.\n  - The convolver in filter-chain can now select an IR from a list of IRs\n    that best matches the current samplerate. Also resampling of the IR\n    has been improved.\n  - A new native module-combine-stream was added. You can use this to create\n    a 5.1 device from 3 stereo soundcards, for example, or direct the output\n    to multiple sinks at once.\n  - Support for Bluetooth MIDI was added. This requires a wireplumber\n    addition as well.\n  - An ALSA plugin rule was added to tweak the buffer settings in Davinci\n    Resolve so that it now runs with acceptable latency. (#1697)\n  - Support for compress offload was added using tinycompress. This allows\n    compressed formats to be decoded in hardware using ALSA on some devices.\n  - Many more buffixes and improvements.\n\n\n## PipeWire\n  - Add back the deprecated symbols but make sure a deprecated warning is\n    emitted for them. (#2952)\n  - Fix a regression when running older servers and newer clients (such as\n    flatpaks on older server) where the server would run clients too soon,\n    causing crashes. (#2964)\n  - Ensure that environment variables override any config values.\n\n## Tools\n  - pw-cli has received some improvements in the output.\n  - pw-cat can now use ffmpeg to demux streams for compress offload.\n\n## modules\n  - The convolver IR volume is now preserved after resampling.\n  - Adapter ports can now have a custom prefix.\n  - module-rt now clamps the realtime priority to the user allowed one if\n    it is within an acceptable range. Before it would fall back to RTKit\n    immediately.\n  - The module-echo-cancel can now have per stream channel layouts which\n    makes it possible to link to specific audio ports on a device. (#2939)\n  - Fix an error in the AVX code that could cause crackling in filter-chain\n    when using the mixer. (#2965)\n  - The convolver in filter-chain can now select an IR from a list of IRs\n    that best matches the current sample-rate.\n  - module-pipe-* now better matches the pulseaudio properties. (#2973)\n  - A new combine-stream module was added to combine multiple sinks into\n    one sink. It is also possible to merge multiple sources into one.\n  - module-rtp-source now has match rules to select what SAP sessions\n    to stream from. There were also improvements to the buffering and\n    latency handling.\n  - module-rtp-sink now handles multicast loopback correctly.\n  - module-rtp-sink implements min-ptime and max-ptime to control the\n    send packet latency.\n\n## SPA\n  - A new modifier flag was added to the video format parser helper to\n    allow 0 (linear) as a valid modifier. (#2943)\n  - Params includes were reorganized to make it more scalable. Many compressed\n    audio formats were added.\n  - The alsa pcm plugin now handles invalid values from the driver\n    gracefully. (#2953)\n  - Fix some potential stuttering cause by wrong scaling and overflow\n    of the output buffers in audioconvert. (#2680)\n  - Debug output is now also sent to the log instead of stdout. (#2923)\n  - A debug context was added to debug macros to implement custom debug\n    handling. This is used to redirect the debug of pods to the debug log\n    instead of using some custom duplicated code.\n  - Fix some warnings for potentially undefined shifts in format\n    conversion.\n  - Support for compress offload was added using tinycompress. This is mostly\n    used on some embedded hardware where decoding of audio formats can be\n    done in hardware.\n\n## Bluetooth\n  - Some fixes for LE audio were added.\n  - Support for Bluetooth MIDI was added. This requires a wireplumber\n    addition as well.\n  - Reply OK to empty commands.\n  - Improve compatibility with some devices that send stray \\n such as\n    the Sennheiser HD 350BT. (#2991)\n\n## pulse-server\n  - Devices with unsupported formats (by the pulseaudio API) are now also\n    listed in the pulseaudio API (with invalid formats).\n  - The native module-combine-stream is used for module-combine-sink.\n\n## JACK\n  - Make jack.merge-monitor default to true to better match the jack1/2\n    behaviour. Add an exception for mixxx, which is more usable with\n    unmerged monitors. (#1760)\n\n## ALSA\n  - The property handling in the ALSA plugin was improved. alsa.properties\n    and alsa.rules can now be added to the config file.\n  - A rule was added to tweak the buffer settings in Davinci Resolve so that\n    it can run with acceptable latency. (#1697)\n  - ALSA volume will now also use cubic volumes, like pulseaudio.\n  - The ALSA ctl plugin now also uses the client-rt.conf file.\n  - A new alsa.volume-method was added to configure cubic or linear volume.\n    This can be set per application using the rules.\n\n## GStreamer\n  - pipewiresrc will now advertise DMABUF support if the pipeline supports\n    this.\n  - pipewiresrc will now always be a live source unless told otherwise.\n\n# PipeWire 0.3.64 (2023-01-12)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - Clear old buffer memory on ports to fix some SIGBUS errors.\n  - It is now possible to assign custom port names to the ports from an\n    adapter. This feature is helpful to those who use a multichannel\n    interface with long-term connections. This way they can label each\n    port with its designation, such as an instrument name or anything else\n    to be displayed in a patchbay or DAW.\n  - Fix some issues with node suspend and quantum and rate calculations.\n  - Fix some regressions in pulse-tunnel and RTP-source adaptive resampling\n    that could cause synchronization problems.\n  - UCM devices now also have a Pro Audio profile.\n  - NODE_TARGET (with the object.id) is now deprecated, use TARGET_OBJECT\n    (with the object.serial, which is not reused and can avoid races).\n\n\n## PipeWire\n  - Clear all peer input port buffers when suspending. This fixes some\n    SIGBUS errors when some plugins were using old memory. (#2914)\n  - Fix a case where nodes that were not supposed to be suspended, were\n    kept suspended on a rate change. (#2929)\n  - Fix an error in the quantum and rate calculations that could cause\n    nodes to run with wrong quantum and rates when multiple rates were\n    allowed. (#2925)\n\n## Tools\n  - pw-dump will now sort dictionaries to make it easier to compare\n    different outputs.\n  - Improve output of pw-reserve.\n  - pw-loopback uses TARGET_OBJECT so you will need to use the serial\n    id (or better the name) as the target instead of the object id.\n\n## modules\n  - The filter-chain modules has seen some cleanups, refactoring and\n    optimizations in the various DSP functions.\n  - The ROC module now supports setting a custom samplerate.\n  - ROC 0.2.X is now required.\n  - The pulse tunnel and RTP source were not updating the rate field\n    correctly which could cause synchronization problems. (#2891)\n  - The filter-chain now supports an arbitrary number of control\n    properties. (#2933)\n  - It is now possible to assign custom port names to the ports from an\n    adapter with the PW_KEY_NODE_CHANNELNAMES.\n  - Support was added for capture and playback props in echo-cancel.\n    (#2939)\n\n## SPA\n  - The ACP code now has an option to set the probe samplerate. (#1599)\n  - UCM devices now also have a Pro Audio profile.\n  - Filtering of Step ranges is now implemented.\n\n## Pulse-Server\n  - The channel-map is now set correctly on the echo-cancel module.\n  - source_master and sink_master are now correctly handled in module\n    echo-cancel.\n  - Fix a regression in DRAIN where resuming after a DRAIN would fail.\n    This caused problems for espeak. (#2928)\n  - TARGET_OBJECT is now used to make it possible to use the indexes\n    as a target.\n  - ladspa-source and remap-source can now also link to monitors.\n\n## ALSA\n  - The ALSA plugin now handles the target.object correctly when set to\n    -1. (#2893)\n\n## V4L2\n  - The v4l2 replacement library now also follows symlinks.\n  - Support for getting and setting controls was added.\n  - Support for G_PARM was added.\n  - The environment variable PIPEWIRE_V4L2_TARGET can be used to force\n    an application onto a specific camera.\n\n## Bluetooth\n  - Fix compilation without ldac_abr.\n  - Fix a missing brace in CIND reply. This could cause some devices to\n    fail.\n  - Fix configuration of the initial latency.\n\n## GStreamer\n  - The device provider now supports setting an fd so that it can connect\n    to PipeWire sessions from the portal.\n  - DMABuf support was re-enabled in gstpipewiresrc.\n\n# PipeWire 0.3.63 (2022-12-15)\n\nThis is a quick bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - Fix a critical bug that causes audio distortion in some cases when using\n    AVX2.\n  - Fix a crash in mpv caused by deinit of PipeWire.\n  - Resample the convolver IR to match the graph samplerate for better\n    results.\n  - Many more small bugfixes and improvements.\n\n\n## PipeWire\n  - Fix a segfault in the PipeWire deinit code triggered by mpv in some\n    cases. (#2881)\n  - Fix docs about SPA_PLUGIN_DIR.\n  - Always dlclose by default (even under valgrind). Add an option with\n    PIPEWIRE_DLCLOSE to select alternative behaviour.\n  - Improve PIPEWIRE_DEBUG category handling.\n\n## modules\n  - Resample the IR for the convolver when the IR samplerate and graph rate\n    don't match.\n\n## SPA\n  - Handle spurious reads from timerfd gracefully.\n  - Fix potential stack-use-after-scope when starting Audacity.\n  - Fix distorted audio when using AVX2. (#2885)\n  - Remove fallback to default channel map in channelmix.\n  - Improve sorting of MIDI events, use the same order as Ardour. (#1816)\n  - Enable LFE downmixing by default. (#2425)\n  - Make IEC958/AC3 and IEC958/DTS work better by enforcing a fixed minimal\n    buffering for the encoder to avoid stuttering. (#2650)\n\n## Pulse-Server\n  - Add a new pulse.cmd config section to execute pulse commands, currently\n    only for loading modules. This removes the dependency on pactl.\n  - Improve debug of messages.\n\n# PipeWire 0.3.62 (2022-12-09)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - A regression in screensharing was fixed. It was caused by a race when\n    activating links and driver nodes.\n  - Video transform metadata was added so that cameras and screen sharing\n    can report the video orientation and transformations.\n  - Support for the PulseAudio module-gsettings was added to make paprefs\n    work.\n  - Support for bluetooth offloading was added. This allows for the bluetooth\n    reception, decoding and playback to happen completely in hardware.\n    This also requires some support in WirePlumber.\n  - Many bugfixes and improvements.\n\n\n## PipeWire\n  - More work on stopping nodes in a more controlled way.\n  - Fix a race in starting nodes and drivers. In some cases the driver\n    node would already be started while the link to the peer node was not\n    ready yet. This caused regressions in screen sharing. The driver is\n    now only started after all the followers and links completed.\n  - Fix a case where a slow capture stream would not recycle buffers\n    anymore and stall. (#2874)\n  - Fix a subtle bug in pw_loop_invoke that could cause callbacks to be\n    delayed and cause crashes in some cases.\n  - Fix a case where IPC was done from the data-thread and could cause\n    crashes.\n\n## Tools\n  - Silence some expected errors in the pw-top output.\n\n## modules\n  - The filter-chain has seen some optimizations in the copy plugin and\n    the convolver.\n  - The zeroconf plugin will now only unpublish services from the server\n    that was removed.\n  - Fix a potential crash when stopping pw-loopback.\n  - Some harmless errors were turned into info messages.\n  - Fix some cases where pw_stream methods were called from the data-thread\n    that could cause segfaults. (#2633)\n\n## SPA\n  - There is now a video transform metadata that indicates how a video\n    frame was transformed (rotated/flipped). libcamera and the GStreamer\n    elements now have support for this metadata.\n  - The SPA volume plugin is now disabled from the default build.\n  - Handle missing control info in libcamera.\n  - Handle errors from loop better, don't call the callbacks on errors.\n  - Somewhat improve performance in some audioconvert AVX2 code for format\n    conversion.\n  - Fix PortConfig and EnumPortConfig params in audioconvert and\n    audioadapter to reflect what is actually going on instead of using\n    hardcoded values.\n  - Pass ignore-dB property correctly in all cases.\n  - Probing is now done in 48KHz again. (#2857)\n\n## Pulse-server\n  - IPv4 addresses are now added first to the list and exposed first with\n    zeroconf discover.\n  - module-gsettings was added to make paprefs work.\n  - The pulse.idle.timeout option was disabled by default and only enabled\n    for selected apps (speech-dispatcher) because it caused some problems\n    for other apps. (#2880)\n\n## JACK\n  - Only process valid ports. Could fix some crashes. (#2863)\n\n## Bluetooth\n  - Support was added for offloading bluetooth handling. Some hardware can\n    receive, decode and play the bluetooth audio directly in hardware.\n\n# PipeWire 0.3.61 (2022-11-24)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - Fix a bug in audioadapter that could cause crashes when switching\n    bluetooth profiles.\n  - Fix sound in QEMU, deadbeef and openal again.\n  - libcamera plugin fixes, dynamic add and remove should now work with\n    the next wireplumber version.\n  - Fix a regression in pw-midiplay where the first buffer would not\n    play and some events would be missing.\n  - The network module now doesn't export other network sources\n    anymore.\n  - pulse-server now detects clients that keep underrunning for a long time\n    and will pause them to save power.\n  - Many more bugfixes and improvements.\n\n\n## PipeWire\n  - Optimize away some useless graph recalculations.\n  - Increase alternative sample rates from 16 to 32.\n  - FreeBSD and musl build fixes.\n  - Silence some module loading errors when the error can be ignored.\n  - Fix initial buffer requested size for pw-stream when operating in\n    async mode. This also indirectly fixes the first buffer in\n    pw-midiplay. (#2843)\n\n## Modules\n  - Set the network property on pulse-tunnel streams so that they are\n    not exported anymore. (#2384)\n  - Filter-chain has optimized mix functions now.\n\n## SPA\n  - Handle some errors in libcamera better.\n  - Fix libcamera remove events. Fix the id allocation for devices.\n  - Fix a bug in audioadapter where it would not renegotiate after\n    a port reconfiguration, leading to crashes, especially when\n    automatically switching profiles in bluetooth. (#2764)\n  - Do ALSA probing in 44100Hz again. Some devices seem to fail\n    otherwise for some unknown reason. (#2718)\n  - Force playback start when the ALSA buffer is full. This fixes sound\n    in QEMU. (#2830)\n  - Support Digital 5.1 AC3 for Asus Xonar SE.\n  - Improve format renegotiation in audioadapter. This makes the ALSA\n    plugin work again for deadbeef. (#2832)\n  - Fix latency reporting on adapter DSP ports.\n\n## pulse-server\n  - Fix a bug where openal based applications would hang. (#2821)\n  - Improve zeroconf publish. Only publish on the address of the first\n    running server. This avoids duplicate entries for IPv4 and IPv6.\n    Add support for republish entries when new servers are started.\n  - Add a pulse.idle.timeout option (default to 5 seconds) to pause\n    streams that have been underrunning for this amount of time. Badly\n    behaving clients will then not keep the graph and device busy so\n    that devices can be suspended to save battery. This should give\n    better default behaviour with speech-dispatcher. (#2839)\n\n## JACK\n  - Add an option to configure the filter character.\n  - Fix connect_callbacks. It was only called once for output ports.\n    (#2841)\n  - Add option to set node.passive on jack clients. Make some quirks\n    for qsynth to make it suspend and fade out better.\n\n# PipeWire 0.3.60 (2022-11-10)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - The filter-chain now handles errors better and has fixes for many\n    crasher bugs.\n  - A new RTP module was added with a sender and receiver. It uses SAP\n    to announce and consume RTP streams and is compatible with the\n    PulseAudio RTP modules.\n  - Many small bluetooth improvements and fixes.\n  - The alsa plugin will now only start playback when there is data. This\n    results in better sync and lower latency between capture and playback.\n  - The v4l2 and libcamera plugins have seen a lot of improvements. They\n    support control properties now. Also pw-v4l2 has seen many improvements\n    and mostly passes the v4l2-compliance test now.\n  - Many more bugfixes and improvements.\n\n\n## PipeWire\n  - Code cleanups, compiler warning fixes.\n  - Add some extra checks to avoid scheduling an inactive node.\n  - Rework the sequence of events to start and stop nodes.\n  - Improve param enumeration.\n  - An option was added to give priority to the Buffer params of the\n    consumer. This makes it possible to use the default values of the\n    consumer (instead of the producer) when capturing from a source.\n  - The graph rate selection was improved to pick a rate closest to the\n    requested one (instead of picking the default).\n\n## Modules\n  - Fix some crashes in filter-chain. (#2737)\n  - X11 Bell module will now be loaded by default when available.\n  - A new RTP module was added with a sender and receiver. It uses SAP\n    to announce and consume RTP streams and is compatible with the\n    PulseAudio RTP modules.\n  - Improve RAOP compatibility.\n  - The echo-cancel module now uses the resampler prefill option to align\n    input and output samples without buffering. Better latency control\n    when starting and stopping has been implemented.\n  - The pulse tunnel will now write aligned samples to pulseaudio even\n    when the ringbuffer wraps around. This fixes playback issues with\n    multichannel sinks.\n  - Add a delay option to module-loopback using a ringbuffer.\n  - Implement echo-cancel params.\n  - The filter-chain module has better error reporting.\n  - The LADSPA search path was extended with some more common paths.\n  - The echo-canceler input can now also be a monitor of a sink. This\n    improves compatibility with some proton games that expect a real\n    sink instead of a virtual one.\n\n## Tools\n  - Better error reporting in pw-link.\n  - pw-top now also shows IEC958 passthrough formats and JPEG/H264 video\n    formats.\n  - pw-top refreshes the screen faster.\n  - pw-top now prints the state of the node and shows less info for\n    inactive nodes.\n  - pw-dump now uses the new seq field in the spa_param_info to discard\n    old param updates and avoid duplicate params in the output.\n\n## Bluetooth\n  - Add ModemManager support in the native backend.\n  - Clean up GetManagedObjects handling.\n  - Handle QoS from the endpoints in the codec.\n  - Increase the socket buffer to have more control over the rate and QoS.\n  - Simplify the packet flushing code.\n  - Stop processing nodes before destroying them.\n  - Fix timers when a source switches drivers.\n  - Codecs can now share endpoints. This reduces the amount of endpoints and\n    avoids problems with devices that can't handle a large amount of\n    codec endpoints.\n  - Report battery status to UPower for HFP AG.\n  - Fix bitpool increase.\n\n## SPA\n  - The audioresampler now avoids clicks and pops between activating and\n    deactivating the adaptive resampler when used by the stream API.\n  - Use default locale to parse float parameters.\n  - The upmix functions now have SSE optimizations.\n  - Avoid recalculating the complete channelmix setup when only the\n    volume changes.\n  - The alsa plugin will now only start playback when there is data. This\n    results in better sync and lower latency between capture and playback.\n  - The ALSA MIDI sequencer will now pull data from the graph even when it\n    did not output anything. Fixes some graph stalls with the sequencer in\n    some cases. (#2775)\n  - v4l2 and libcamera sources now recycle buffers when nothing is consuming\n    them. This avoids stalling the graph.\n  - libcamera now suggests a more appropriate frame size than the smallest\n    poster frame.\n  - Improve state changes in audioconvert. (#2764)\n  - A new seq field was added to spa_param_info to keep track of pending\n    param updates.\n  - Support speaker output only on RealTek ALC4080. (#2744)\n  - The v4l2 source now supports setting controls.\n  - The libcamera plugin now supports enumerating and setting controls.\n  - A new unit test for 6.1 channel mapping was added. (#2809) More debug\n    info was added to audioconvert for the channel matrix.\n  - Audioconvert will now also upmix a rear-center channel when needed.\n\n## pulse-server\n  - Add support for the RTP send and recv modules with the new native\n    RTP module.\n  - Add option to set latency for pulse-tunnel streams and\n    module-zeroconf-discover.\n  - The socket will now be given the same permissions as what pulseaudio\n    did (0777).\n  - Implement module-loopback latency_msec correctly with the new delay\n    parameter.\n  - sysfs.path is now filled with the same data as pulseaudio.\n  - The manager now uses the new seq field in the spa_param_info.\n  - Fix a bug where in some cases the read pointer would get out of sync\n    and cause too large requests. (#2799)\n\n## ALSA\n  - The alsa plugin now reuses the stream in prepare which results in\n    better performance.\n  - Some deadlocks have been fixed in the ALSA plugin.\n  - The ALSA plugin reports more accurate timing information in some cases.\n\n## V4l2\n  - The v4l2 compatibility layer has received a lot of updates.\n  - Improved node names and format enumeration.\n  - Support for multiple /dev/videoX devices, each mapped to a unique\n    PipeWire node.\n  - Passes the v4l2-compliance test now with both the v4l2 and libcamera\n    backend in PipeWire.\n  - Improved mmap support for inline buffer memory. This makes it possible to\n    consume PipeWire streams.\n  - Negotiation works more reliably now.\n\n## JACK\n  - Implement jack_acquire_real_time_scheduling() and\n    jack_drop_real_time_scheduling() by keeping the thread utils in a global\n    state.\n  - Fix jack_client_thread_id() to return NULL when the client is not active,\n    just like jack1 and jack2.\n  - An option was added to let the jack_set_buffer_size() function update the\n    global metadata. A quirk was added so that jack_bufsize uses this new feature\n    to make the buffer size settings persistent and global, just like jack.\n  - jack_port_register() and jack_port_unregister() can be called on an\n    active client so make this thread safe. (#2652)\n\n# PipeWire 0.3.59 (2022-09-30)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - Fix possible wrong samplerate in loopback streams after suspend and\n    rate switch.\n  - module-filter-chain can now adapt to the graph samplerate.\n  - Fix some potential stuttering and crackling in pulse-server.\n  - Add Bluetooth LE support. This requires experimental kernel and bluez\n    support.\n  - The ALSA plugin has more options to control the buffer size. This can\n    be used to work around high latency in davinci resolve.\n  - Many bugfixes and improvements.\n\n\n## PipeWire\n  - Add audio capture example with volume meter.\n  - Fix a case where a rate switch would not suspend all the nodes of the\n    driver first. This could cause wrong samplerates in streams.\n  - Fix a case where a node would be Paused while still added to the\n    graph, causing potential crashes. (#2701)\n\n## Modules\n  - module-filter-chain and module-loopback now use the resample.prefill\n    option to avoid buffering extra samples and causing unwanted latency\n    when resampling is activated.\n  - module-filter-chain can now adapt to the graph samplerate.\n  - Improve module-raop to support the ALAC codec as raw PCM.\n  - Improve RTSP parsing to improve compatibility.\n\n## Tools\n  - Fix 100% CPU in pw-cli monitor mode. (#2709)\n  - spa-acp-tool can now be exited with ctrl-D.\n\n## SPA\n  - Various libcamera fixes and improvements.\n  - Set stride on audioconvert output buffers.\n  - Make sure we always place the last requested size from the resampler\n    on the buffers in pw-stream.\n  - Add resample.prefill option in the resampler to fill the history with\n    0 so that we don't have smaller buffers at the start.\n  - Make sure that when an overflow corrupts a POD, that it will always\n    stay corrupted.\n  - Rate limit some ALSA warnings and reduce some unwanted warnings.\n  - Don't recalculate the audioconverter state for each pause/play. (#2701)\n  - Fix some POD parsing inconsistencies and potential overflows.\n  - Add support for Asus Xonar SE.\n  - Fix Flush command handling. It should not stop playback. (#2726)\n  - Refactor the peaks function and add some unit tests and optimizations.\n  - The channelmix has an optimized nXm converter and new unit tests.\n  - Normalization in the channelmixer was fixed.\n\n## pulse-server\n  - The requested latency of record streams was reduced to fix some\n    stuttering in Teamspeak. (#2702)\n  - Tweak the max amount of bytes sent to a client. (#2711) (#2715)\n  - Improve maxlength calculations, this fixes some crackling noise with\n    high samplerate and channel counts in some players (audacious).\n\n## Bluetooth\n  - Merge Bluetooth LE support.\n  - Make sure we are backward compatible with WirePlumber.\n  - Fix some HFP and HSP AT command parsing. (#2463)\n  - Use HFP by default over HSP.\n\n## ALSA\n  - Increase max number of periods.\n  - The parameters handling was improved. There is now an option to set the\n    buffer-bytes of the ALSA plugin.\n  - PIPEWIRE_ALSA can now be used as an environment variable to restrict the\n    plugin formats and buffer size.\n\n# PipeWire 0.3.58 (2022-09-15)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - Fix a regression that could cause audio crackling.\n  - Fix a regression in RTKit because rlimit was not set correctly.\n  - JAVA sound applications will now alsa work with the pulseaudio-alsa plugin.\n  - pw-top will now show the negotiated formats of devices and streams.\n  - Fix some potential crashes when starting streams.\n  - The ALSA plugin has had improved timing reporting and poll descriptor\n    handling that should improve compatibility.\n  - Many more improvements and bugfixes.\n\n\n## PipeWire\n  - Avoid scheduling nodes before they are added to the graph. This could\n    avoid some crashes when scheduling nodes that were not completely\n    started yet. (#2677)\n\n## Tools\n  - pw-top now also shows the negotiated formats of streams and devices.\n    (#2566)\n  - pw-top prints microseconds as \"us\" now to avoid unicode problems.\n\n## Modules\n  - Fix compilation with newer lv2.\n  - Fix setting realtime priority with RTKit, it was not setting rlimit\n    correctly and RTKit would refuse to change the priority.\n  - Fix some playback problems with RAOP sink. (#2673)\n  - Filter chain will now warn when a non-existing control property is\n    used in the config file. (#2685)\n  - Filter chain can now handle control port names with \":\" in the name.\n    (#2685)\n  - The echo-cancel module and interface now has activate/deactivate\n    functions to make it possible for plugins to reset their state.\n\n## SPA\n  - Make sure audioconvert uses the given channelmap and channels for the\n    volumes, even when not negotiated yet. This makes it possible to change\n    the volume before the node has been negotiated.\n  - Refactor the peaks resampler. Fix an error in the SSE code.\n  - Fix DSD min/max rates, avoid exposing impossible rates.\n  - Set monitor port buffer size correctly. This could cause some crackling\n    and hickups. (#2677)\n  - Make ALSA sequencer port names unique.\n\n## Pulse-server\n  - Rework the capture buffer attributes to better match pulseaudio. This\n    fixes a regression where opening pavucontrol could cause crackling.\n    (#2671)\n  - Implement TRIGGER and PREBUF methods.\n  - Handle clients that send more than the requested amount of data.\n    PipeWire will now also keep this as extra buffered data like PulseAudio.\n    This fixes JAVA sound applications when they are running on top of the\n    PulseAudio ALSA plugin. (#2626,#2674)\n  - Update the requested amount of bytes more like PulseAudio. Fixes\n    stuttering after resume with the GStreamer pulseaudio sink. (#2680)\n\n## ALSA Plugin\n  - More debug info was added. The time reporting was improved.\n  - The poll descriptor handling was improved, avoiding some spurious\n    wakeups. (#1697)\n\n\n# PipeWire 0.3.57 (2022-09-02)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - Support masking of conf.d/ files. (#2629)\n  - Use org.freedesktop.portal.Realtime when available. This does the\n    correct PID/TID mappings to make realtime also work from flatpaks.\n  - Fix rate adjustment logic in pulse-tunnel. This would cause\n    increasing delays and hickups when using tunnels. (#2548)\n  - Add OPUS as a new vendor codec. Add OPUS-A2DP spec. PipeWire can now\n    send and receive OPUS data over bluetooth.\n  - An AAC decoder was added so that PipeWire can now also function as\n    an A2DP AAC receiver.\n  - Fix some issues where the wrong samplerate was used. (#2614)\n  - Fix rate match for sources. This fixes an error where follower sources\n    would generate many resync warnings.\n  - Many more bugfixes and improvements.\n\n\n## PipeWire\n  - Support masking of conf.d/ files. (#2629)\n  - Add some more debug info to memfd.\n  - Improve data-loop invoke method. Also flush pending items. (#2631)\n  - Add a filter-chain systemd service file than can be used to start\n    custom filters placed in ~/.conf/pipewire/filter-chain.d/ (#2553)\n  - Improve triggered timestamps for remote nodes.\n  - Fix some potential cross compilation problems due to wrong\n    host_machine.\n  - Check return values of pw_getrandom().\n\n## Tools\n  - Updates to pw-cli manpages. (#2552)\n  - Remove the pw-cli dump command. It is mostly implemented as part of\n    wpctl status, pw-dump, pw-link, pw-top and others.\n  - Clean up resource in pw-cat correctly on errors. (#2651)\n\n## Modules\n  - Fix compilation of AVB on big-endian. Enable AVB only on Linux.\n  - Use org.freedesktop.portal.Realtime when available. This does the\n    correct PID/TID mappings to make realtime also work from flatpaks.\n  - Fix compilation of ROC module when headers are missing. (#2513)\n  - Improve some error cleanup paths in protocol-native. Improve connect\n    and disconnect.\n  - Fix a potential crash in FFT unload in filter-chain.\n  - Implement PIPEWIRE_NOTIFICATION_FD for notification when the socket\n    is ready.\n  - Try to use rtkit if set_nice() fails.\n  - Fix rate adjustment logic in pulse-tunnel. This would cause\n    increasing delays and hickups when using tunnels. (#2548)\n  - Handle disconnect in pulse-tunnel.\n\n## Bluetooth\n  - Add OPUS as a new vendor codec. Add OPUS-A2DP spec. PipeWire can now\n    send and receive OPUS data over bluetooth.\n  - An AAC decoder was added so that PipeWire can now also function as\n    an A2DP AAC receiver.\n\n## SPA\n  - Tweak the resampler window function some more. (#2574)\n  - Improve format convert performance in some fallback cases.\n  - Fix rounding in format conversion on ARM NEON.\n  - Fix libcamera build error. (#2575)\n  - Fix some issues where the wrong samplerate was used. (#2614)\n  - Don't wait for more samples that can fit in the ringbuffer in ALSA.\n  - Improve buffer size handling in audioconvert, scale the buffers based\n    on the rate conversion and make things work with really large rate\n    conversions as well.\n  - Add more and better debug for ALSA devices.\n  - Improve channel mix: Filter FC and LFE when copying from a different\n    layout. Implement STEREO from FC. Avoid generating REAR from FC in PSD\n    mode.\n  - Fix rate match for sources. This fixes an error where follower sources\n    would generate many resync warnings.\n  - Improve ALSA format negotiation. If the ALSA node is not running and\n    there was a previously configured format, close and reopen the device\n    to enumerate and accept all possible formats again. (#2625).\n\n## ALSA\n  - The alsa plugin will now also save the volumes set with the control\n    API. This saves the volumes set with alsa-mixer, for example.\n\n## Pulse-server\n  - Flatpak apps with devices=all (Zoom) will now be granted Manager\n    permissions.\n  - Small tweaks to the amount of data sent to clients to work around an\n    issue in freerdp.\n\n## JACK\n  - Clean up the transport correctly when closing a client. (#2569)\n  - Match context properties in addition to node properties for the jack\n    client rules. (#2580)\n  - Make sure to return an error when disconnected from the server. (#2606)\n  - Fix thread cast problem in jack_client_thread_id().\n  - Increase jack_client_name_size() length and make sure we have space for\n    the \\0 byte.\n  - JACK clients from the same application will be added to the same group\n    so that they share the quantum and rate.\n\n# PipeWire 0.3.56 (2022-07-19)\n\nThis is a quick bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - A critical bug that could crash JACK apps was fixed.\n  - Some more regressions in audiomixer were fixed. This should fix crackling\n    and stuttering in some cases as well as some channel mapping regressions.\n  - A bug in the alsa plugin was fixed that could cause stuttering in VMs.\n  - Bluetooth sources should have improved latency and rate control.\n  - Many more bugfixes and improvements.\n\n\n## Modules\n  - An experimental AVB module was added. It can expose PipeWire as an AVB\n    entity and initiate (broken) streaming between entities.\n  - module-loopback now handles the cases where the input and output channels\n    are different without crashing or producing silence.\n  - The filter-chain module now correctly calculates the output size without\n    crashing in some cases. It also skips invalid ports instead of crashing.\n  - Handle and report pthread errors better.\n\n## SPA\n  - The resampler qualities were tweaked a little.\n  - A bug that would sometimes cut off the last part of a buffer was fixed in\n    the alsa plugin. This could cause broken audio in VMs. (#2536)\n  - Access to the alsa mixer and devices is now checked more thoroughly.\n    (#2534)\n  - The spa-resample tool can now also handle large downsampling rates without\n    crashing.\n  - Audioconverter now uses rounding for float to int conversions, which\n    reduces distortions. Compilation of the c functions was separated and uses\n    its own optimization flags now. Unit tests were added. (#2543)\n  - Noise shaping was improved in audioconvert. A new Wannamaker 3 tap shaper\n    was added.\n  - Audioconvert now uses a pattern for generating keep alive noise. This\n    should have much less energy and be even more inaudible. (#2540)\n  - A channel mapping bug was fixed in audioconvert. Unit tests were added.\n  - The dsp audio mixer would sometimes not mix enough and cause dropouts.\n    (#2525)\n\n## JACK\n  - A critical bug in the mixer was fixed. It would cause most JACK apps to\n    segfault at startup.\n\n## Bluetooth\n  - A new rate control algorithm was implemented for the sources.\n  - The media role on HSP/HFP streams is now fixed.\n\n## Pulse Server\n  - Add the resampler delay to delay reporting as well.\n\n\n# PipeWire 0.3.55 (2022-07-12)\n\nThis is a quick bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - Fix some more critical bugs in the new audioconvert and the queueing\n    in pw-stream that causes stuttering and hickups.\n  - HFP hardware volumes are now saved and restored.\n  - Format conversions and mixing was improved.\n  - Small bug fixes and improvements.\n\n## PipeWire\n  - The queueing in pw-stream was improved with support for buffer prefetch\n    in async mode.\n  - Add a pw-filter unit test.\n\n## tools\n  - pw-midiplay should now work again after improvements in pw-stream.\n\n## modules\n  - The RAOP module was improved to support auth_setup.\n  - The RAOP module should now handle timing packets better.\n  - Add some more filter-chain examples.\n  - The filter-chain now has a separate config file with the boilerplate\n    settings. The examples are now just config snippets that can be dropped\n    in .conf.d/ directories, such as the filter-chain.conf.d/ one.\n  - Start suggesting to use target.object instead of node.target in docs\n    and examples.\n\n## SPA\n  - Use the cosh window again for the resampler. It should now\n    give better resampler quality. (#2483)\n  - Rework the mixer functions. They were rewritten for higher precision and\n    better performance. Add unit tests and benchmarks.\n  - Improve format conversion for 32bits for avoid errors in clang because\n    of undefined behaviour at extreme ranges.\n  - Fix a bug in audioconvert where it would not consume the right\n    amount of samples when the resampler was disabled. This could cause\n    skipping and hickups. (#2519)\n  - Fix bug in audioconvert where it would try to convert the input samples\n    multiple times, causing strange artifacts when upmixing.\n  - Be more strict about valid JSON floats.\n  - device.vendor.id and device.product.id should now always show up in\n    0xXXXX format and should not be converted to floats in pw-dump anymore.\n  - Add triangular dither, add unit tests for noise generation, add some\n    more optimizations.\n\n## Bluetooth\n  - HFP and A2DP now expose different routes and thus can have different\n    volumes.\n  - HW Volumes for HFP are now synced better. Volume changes from HW buttons\n    are now also saved.\n\n# PipeWire 0.3.54 (2022-07-07)\n\nThis is a quick bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - Some critical bugs in the new audioconvert were fixed. The old\n    adapter had internal buffering that was abused in some places.\n  - The bluetooth sources were rewritten using a ringbuffer to make them\n    more reliable to jitter and remove old audioconvert behaviour.\n  - Many improvements to the audio converter.\n  - Native DSD128 and up is now supported by pw-dsdplay.\n\n\n## tools\n  - Support DSD128 to DSD512 as well by scaling the amount of samples\n    to read per time slice.\n\n## SPA\n  - Format conversion is now generated with macros to remove duplication\n    of code.\n  - 24bits conversions were rewritten to use the generic conversion\n    functions.\n  - Temporary buffers in audioconvert are now made large enough in all\n    cases.\n  - Fix draining in audioconvert. This fixes speaker-test.\n  - Fix the channel remapping. (#2502, #2490)\n  - Audio conversion constants were tweaked to handle the maximum ranges\n    and provide lossless conversion between 24bits and floats.\n  - Vector code and C code are aligned and the unit tests are activated\n    again. A new lossless conversion test was added.\n  - Fix an underrun case where the adapter would not ask for more data.\n  - Fix PROP_INFO for audioconvert. (#2488)\n  - Use the blackman window again for the resampler, the cosh window has\n    some bugs that can cause distortion in some cases. (#2483)\n  - Add more unit tests for audioconvert. Add end-to-end conversion tests.\n  - Don't leak memory in format converter.\n\n## pulse-server\n  - Card properties are now also added to sinks and sources, just like\n    in pulseaudio.\n  - Increase the maxlength size to at least 4 times the fragsize to avoid\n    xruns.\n  - Fix a race when setting default devices.\n\n## Bluetooth\n  - The source was rewritten to use a ringbuffer. This avoids regressions\n    caused by audioconvert. \n\n# PipeWire 0.3.53 (2022-06-30)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - The 44.1KHz samplerate was removed again from the defaults, it caused\n    all kinds of problems with various hardware.\n  - The ALSA plugin should now be able to deal with unsupported samplerates\n    and fall back to the nearest supported one.\n  - The rlimits performance tuning wiki page was updated. Please check\n    you limits.conf file, the version on the wiki used to give all\n    processes a -19 nice level instead of just the pipewire daemon.\n  - The audioconvert plugin was rewritten to be more maintainable and\n    faster. It also gained support for control ports and dithering with\n    optional noise shaping.\n  - An impossible buffering situation is avoided in pulse-server that would\n    cause some applications (sunshine, ...) to stutter.\n\n\n## PipeWire\n  - 44.1KHz was removed from the allowed rates again. It caused all kinds\n    of regressions due to driver bugs and timing issues on HDMI.\n\n## modules\n  - filter-chain now does some more error checking and reporting to\n    avoid some crashes.\n  - filter-chain now supports more channel layouts for input and output\n    that does not need to match the plugin layout.\n  - Format parsing is now more consistent in the modules.\n\n## Tools\n  - pw-cli can now also work without readline support.\n  - pw-cat can now also read multichannel ulaw/alaw/u8/s8.\n\n## SPA\n  - The audioconvert plugin was rewritten. This should make it more\n    maintainable. It also fixed some issues such as CPU spikes in some\n    cases and crashes in others. The old plugins were removed, for a\n    code reduction of some 6000 lines.\n  - The audioconvert plugin now supports control ports, which can be\n    enabled on nodes in the session manager. This makes it possible to\n    control audioconvert properties using timed events or midi.\n  - NoteOn 0-velocity MIDI events are no longer filtered out. This is\n    a valid event, nodes that can't deal with it should fix it up\n    themselves. The JACK layer still filters out these events by default\n    but this can now be configured with a per-client property.\n  - The running status on midi events is now disabled to match what\n    JACK does.\n  - The ALSA plugin will now deal with driver bugs when a driver announces\n    support for a samplerate but then refuses to use it later.\n  - The ALSA plugin has been optimized a little for sample IO.\n  - V4L2 now doesn't error when there are no controls.\n  - Error handling was improved in the audio converter.\n  - The audioconvert plugin now supports rectangular dithering and\n    noise shaping.\n  - The audioconvert plugin can now insert additional inaudible noise\n    that can be used to keep some amplifiers alive. (#705)\n  - The audioconvert format conversion was changed so that it now produces\n    the full 32 bits range in the C fallback conversion code as well.\n  - The resampler window function was changed to a cosh() window\n    function. (#2483)\n  - Vendor and device id are now in hex.\n\n## pulse-server\n  - Tweak the record buffer attributes some more and make sure we don't\n    end up in impossible buffering situations. Fixes an issue with\n    distorted sound in sunshine. (#2447)\n  - Fix a potential crash when updating the client property list.\n  - Some properties on cards were aligned with pulseaudio.\n\n## Wiki\n  - Change \"priority\" to \"nice\" in the example limits.conf file. It was\n    giving a -19 nice level to all processes, not just the pipewire\n    daemon.\n\n# PipeWire 0.3.52 (2022-06-09)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - Add 44.1KHz to allowed samplerates. The server can now switch by\n    default between 48KHz and 44.1KHz.\n  - Streams now allocate less resources.\n  - Fix some bugs that could make the server crash.\n  - Bluetooth now supports the LC3plus vendor codec.\n  - Many bugfixes and improvements.\n\n\n## PipeWire\n  - Add 44.1KHz to allowed samplerates.\n  - Avoid setting the locale.\n  - Avoid use-after-free when destroying a node from spa-node-factory.\n  - Avoid using reallocarray when not available.\n  - Set port alias is not otherwise set.\n\n## Modules\n  - Improve filter-chain parsing and error reporting. Handle empty\n    nodes. (#1950)\n  - Handle destroy of globals and factory in most modules. (#565)\n  - Add refcounts to client and resources to handle destroy of the\n    protocol. (#565)\n  - Handle global node.name in filter-chain and loopback again, use\n    it to construct unique stream names.\n  - Avoid a wrapped pw-node in the adapter. This reduces resources\n    allocated for streams.\n  - Fix a crash when module-x11-bell was unloaded. (#2392)\n  - Add a new module-pipe-tunnel that can write/read data from a\n    UNIX pipe.\n\n## Tools\n  - Fix DSD playback again in pw-cat.\n  - Add -n option to pw-loopback to set node names.\n  - Add -P option to pw-cat to pass properties to the stream.\n  - Support stdin/stdout in pw-cat. (#2387)\n  - pw-dump now also dumps object removal when monitoring. (#2426)\n\n## SPA\n  - Avoid duplicate param results in pw-dump for ports.\n  - Avoid endless loops in audioconvert for badly behaving client.\n    (#2359)\n  - Scale max-error in alsa based on quantum and avoid logging a warning\n    when starting.\n  - Improve debug of failed format conversion. (#2383)\n  - Handle offset in the audio dsp mixer inputs and clamp to the max\n    buffer size.\n  - Add option to disable locale support for JSON number conversion.\n  - Add support for Astro A20 Gen2.\n  - Fix some of the test sources, the flags were not set correctly.\n  - Add camera location as property in libcamera and let the session manager\n    Generate a localized description.\n  - Fix some crashes due to wrong vargar types in v4l2 controls. (#2400)\n  - Improve ALSA resync behaviour. (#2257)\n  - Add support for Komplete Audio 6 MK2.\n  - Improve loop cancel while iterating.\n  - Try not to mix surround channels and AUX channels. Make card with many\n    ports look better when not using the Pro Audio profile.\n  - Vulkan filters were added.\n\n## Bluetooth\n  - Add LC3plus vendor codec.\n  - Handle unsupported indicators better.\n  - Ensure multiple devices on an adapter use different codecs because one\n    endpoint can only be used by one device at a time.\n  - Fix bitpool control as a follower.\n  - Handle bluetooth errors better.\n  - Speed up bluetooth connection by only waiting for the profiles\n    supported by the adapter.\n  - The dummy AVRCP player is disabled by default because it seems to break\n    more devices than it fixes.\n\n## pulse-server\n  - Add initial stream latency property so that devices can be started\n    with a reasonably accurate latency.\n  - Fix ringbuffer underrun case. (#2366)\n  - module-native-protocol-tcp now has a auth-anonymous option to give\n    full access to the clients.\n  - Report a node as being moved when it is still moving. This improves\n    compatibility with pasystray.\n  - Avoid overallocating message memory.\n  - Don't export NETWORK nodes in zeroconf. (#2384)\n  - Fix stride for TrueHD and DTSHD passthrough. (#2284)\n  - Make sure we don't send too small audio fragments. Fixes capture\n    from multiple tabs in Chrome. (#2418)\n  - Rework module handling some more.\n  - Use the new native module-pipe-tunnel for pipe-sink and pipe-source.\n  - Implement the STREAM_MOVED message when a stream got moved. (#2407)\n  - Fix a potential segfault when stopping the server and a TCP module\n    as still loaded.\n\n## ALSA\n  - Add support for updating sw_params at runtime, mostly the min-avail\n    param.\n  - Capture and playback nodes are now assumed to use a different clock and\n    will activate the adaptive resampler when linked. This assumption is\n    removed in Pro Audio mode. This provide a better experience out of the\n    box with most devices.\n\n## JACK\n  - Fix setting properties with PIPEWIRE_PROPS again.\n  - Don't use 64 bits atomic operations for sync_timeout. (#1867)\n  - Cleanup in error cases was improved, avoiding some crashes. (#2394)\n\n## GStreamer\n  - Fix pipewiresink in mode=provide. (#1980)\n  - Share memory into a new buffer in pipewiresrc to avoid buffer corruption.\n  - Fixes to the source and fd use.\n  - It is now possible to set client properties as well. (#1573)\n\n# PipeWire 0.3.51 (2022-04-28)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - Improved graph reconfiguration.\n  - Extra configuration options for streams and filters with config\n    rules and environment variable.\n  - Improve module-pulse-tunnel latency, stability and error recovery.\n  - pw-top, pw-cli and pw-link improvements.\n  - Fix a channelmixer upmixing clipping issue.\n  - The ROC module has seen many improvements.\n  - Many more bugfixes and improvements.\n\n\n## PipeWire\n  - The graph reconfiguration code was reworked:\n    * Moved nodes will update the new driver quantum correctly. (#2293)\n    * Inactive nodes are ignored more.\n    * Nodes that require a driver are now not scheduled anymore when\n      they are passive (unused). (#2309)\n    * Improved performance, the graph is reconfigured with a minimal\n      amount of changes.\n  - Method and event argument names were improved.\n  - A linker garbage collection problem was fixed. (#2292)\n  - Properties on threads are now implemented. Use common code to\n    set thread name and add an option to set stack-size.\n  - Streams and filters always want a driver now. This makes it possible\n    to just link a playback stream to a capture stream without a driver\n    and have it work. (#1761).\n  - Streams and filters can now also have rules in the config file.\n  - Streams, filters, JACK, ALSA and v4l2 now support PIPEWIRE_PROPS\n    environment variable to override node properties.\n  - Add config section extensions. This provides a way for modules to\n    have specific config to override the default config.\n  - Handle realloc errors better.\n  - Improve stream and filter property updates.\n\n## Modules\n  - The pulse-tunnel modules has improved latency management and should\n    now work a lot better. (#2230)\n  - Module-loopback, module-echo-cancel, module-filter-chain unload the\n    module when a stream is destroyed. (#1754)\n  - Biquads in filter-chain now can have more gain (5->20 dB).\n  - Documentation updates. Most Wiki content was moved to the source code\n    inline comments.\n  - Filter-chain now has a builtin delay line filter. (#2320)\n  - Filter-chain can now parse the config key correctly in all cases.\n  - The ROC sink and source saw many improvements. roc-source is now a stream\n    by default that connects to the default sink. Both modules will try to set\n    a graph rate. Both modules have an option to select the FEC mode.\n    The ROC source has lower latency now. (#2331)\n  - Handle realloc errors better.\n\n## tools\n  - pw-cat does not have --list-targets anymore, use one of the more\n    advanced and less buggy tools such as wpctl or pw-cli to list\n    sinks and sources.\n  - pw-top has seen many improvements.\n    * It now has some timeouts to reset the node values to their default\n      state when unused.\n    * The man page was improved.\n    * Invalid timings and errors are displayed in a better way.\n  - pw-cli and pw-link can now create links between all ports of given nodes.\n  - pw-cat can now save to other file formats than wav, based on the extension\n    of the filename.\n\n## SPA\n  - The resampler now uses a different internal method for draining. It can\n    now also handle 0 size buffers as input without draining.\n  - The channelmixer now uses the front channel averages for FC and LFE.\n    This avoids clipping and results in much better upmixing.\n  - ALSA should now work again on 32 bits. (#2271)\n  - The JSON parser now converts escaped unicode correctly to UTF8.\n\n## bluetooth\n  - Codec switch improvements when the device is disconnected. (#2334)\n\n## pulse-server\n  - There is a new module-roc-sink-input module, the the PulseAudio equivalent.\n  - The ROC source and sink-input module now have a much lower latency.\n  - The ROC module now has an option to select FEC mode.\n  - Playback and record rate adjustments should work now. (#1159)\n\n## JACK\n  - Remove some useless pthread attributes. This makes JACK work in QEMU with\n    sandboxing enabled. (#2297)\n  - The buffer_size callback is now only called when something has changed\n    since the last process() callback or get_buffer_size() method. This\n    fixes a GStreamer issue and is more in line with what JACK does. (#2324)\n  - Fix a potential deadlock when the process thread is doing IPC and the\n    IPC thread is blocking on the data thread.\n  - Allocation errors in metadata are handled better.\n\n# PipeWire 0.3.50 (2022-04-13)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - pw-stream can now report more timing information and can suggest\n    the optimal number of samples to queue for playback.\n  - pw-dot now works again..\n  - module-pulse-tunnel latency was improved.\n  - WINE applications using the JACK backend should no longer crash.\n  - The channelmixer defaults are improved and the muffled sound when\n    playing back 5.1 and 7.1 material has been fixed.\n  - Many fixes and improvements.\n\n\n## PipeWire\n  - pw-stream now places a suggested amount of samples in the pw-buffer\n    for playback. This allows you to remove some places where\n    spa_io_rate_match was needed to get this information.\n  - pw-stream has new API to request a timing update. New fields are\n    added in the timing info, such as number of buffered samples in\n    the resampler and the number of queued and dequeued buffers.\n  - pw-stream has support for double controls now. More controls are\n    exposed such as the Rate control to do adaptive resampling.\n  - The thread-utils object was moved to the context to avoid some\n    concurrent use cases that caused crashes. (#2252)\n  - Deactivating an exported node/stream will now remove the node from\n    the data-thread immediately so that the process function will not\n    be called anymore and resources can be safely freed. This could\n    fix some of the last remaining crashes when streams are stopped.\n  - PipeWire will now fail to load a module that tries to register\n    the same export type twice instead of silently doing the wrong\n    thing. (#2281)\n\n## Modules\n  - Many modules now use the NODE_WANT_DRIVER instead of the\n    pipewire.dummy NODE_GROUP property. This makes it possible to use\n    them with any other driver and can avoid resampling in some\n    cases.\n  - module-pulse-tunnel now uses an adaptive resampler to keep the\n    latency under control. Latency should be much better than before\n    and stay constant even when there are network delays.\n  - There is now an option for packages to disable building the RTKit\n    module, which is still built by default for backwards compatibility\n    reasons.\n  - A leak was fixed in filter-chain. (#2220)\n  - Module node names are now made more unique with the pid.\n\n## tools\n  - pw-cat verbose output has been improved.\n  - pw-link now has a man page. (#2263)\n  - pw-reserve now has an -r option to make it issue a RequestRelease\n    command on the owner of the device. This makes it possible to ask\n    WirePlumber to close and release a device.\n  - Fix pw-dot again. It didn't work anymore because of stray done\n    events that were emitted to notify the client of object serials.\n    (#2253)\n\n## SPA\n  - The channelmixer now has PSD upmixing enabled again. We used the\n    simple upmixing in the previous release but that just sounds too\n    awful to be a good default. (#861) and (#2219)\n  - The channelmixer will not upmix FC and LFE anymore when upmixing is\n    explicitly disabled. (#2266)\n  - The channelmixer will only lowpass filter FC and LFE channels when\n    they were upmixed. (#2280)\n  - The defaults of the channelmixer were tweaked a little. There is now\n    a little bit more bass in the LFE channel and more high frequencies\n    in the FC channel when upmixing. Also the channel widening has been\n    disabled by default.\n  - Locale independent float parsing now uses a more portable solution\n    with uselocale.\n  - ALSA will now only allocate a buffer size big enough to hold 4\n    times the quantum limit instead of as large as possible.\n\n## pulse-server\n  - Internal cleanups in handling of modules.\n  - A quirk to force s16 sample formats for teams-insider has been added.\n\n## JACK\n  - The data-loop is now started in activate and stopped in deactivate.\n    This makes the data-loop respect any custom thread functions you\n    configure. This also makes WINE apps using the JACK backend work.\n    (#1495).\n  - Port sorting was improved/fixed. (#2260)\n\n# PipeWire 0.3.49 (2022-03-29)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - Sample rate switching should work again.\n  - pw-dot can now use the output of pw-dump to render a graph.\n  - Bluetooth A2DP streaming was improved that would reduce stuttering on\n    some devices.\n  - A JACK bug was fixed that would sometimes make it impossible to add more\n    tracks in Ardour. (#1714)\n  - Many bugfixes and improvements.\n\n## PipeWire\n  - Fix a potential crash when NULL params were configured.\n  - Add some simple functional tests to avoid some recent regressions. Improve\n    the test framework for this as well.\n  - Improvements to the poll loop to avoid some use-after-free scenarios.\n  - Fix samplerate switching again.\n  - setlocale is not called anymore from the pipewire library. This should be\n    called by the application. (#2223)\n  - pw_init() and pw_deinit() can now be nested and called multiple times.\n  - pw_stream will now report the resampler delay in the pw_time.queued field.\n\n## modules\n  - module-filter-chain now supports arbitrary many properties and will use\n    property hints to assign them the right type.\n  - The ROC modules now accept a sink/source_properties parameter.\n  - The module-rt can now also be built without RT-Kit support.\n  - module-echo-cancel can now use a fraction to specify the delay for more\n    precise control.\n\n## SPA\n  - The channelmixer will now do upmixing by default and will not use\n    normalization. It will also use a simple upmixing algorithm that duplicates\n    channels by default. A more interesting upmix method is also available (PSD)\n    but needs to be enabled manually. (#861)\n  - Add SSE optimized (de)interleave functions for 32 bits samples with and\n    without byteswap.\n  - JSON parsing of empty strings will now give an invalid number instead of\n    0.\n  - JSON numbers are now parsed and serialized in a locale independent way so\n    that , and . are not mixed up.\n  - The resampler will now report the resample delay and queued samples as the\n    extra delay.\n\n## tools\n  - pw-cat will read more dsf files correctly and will not crash at the end.\n  - pw-top now has a man page.\n  - pw-dot can now use the output of pw-dump to render a graph.\n\n## bluetooth\n  - Improve interactions with oFono.\n  - Fix recovery with slow connections.\n  - Improve frame size of AptX-ll.\n  - A2DP can now use any quantum and will flush packets in smaller chunks\n    when needed to adapt. This improves stuttering in some cases.\n\n## pulse-server\n  - The server configuration can now be placed in pulse.properties section,\n    which also makes it possible to have custom overrides.\n  - Implement FIX_ flags for capture as well.\n  - Small fixes and improvements in module loading.\n\n## JACK\n  - Clear the last error before executing a new action or else we could end up\n    with error from a previous action. This causes some problems in Ardour where\n    adding a track would fail after some time. (#1714)\n\n\n# PipeWire 0.3.48 (2022-03-03)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - Fix IEC958 passthrough again.\n  - Fix pulse-server crashes when playing a sample.\n  - Support for more a more advanced upmixing algorithm.\n  - filter-chain now supports arbitrary many ports.\n  - Fix multichannel support in WINE. (with new WirePlumber).\n  - Many bugfixes and improvements.\n\n\n## PipeWire\n  - The work queue is now created in the context so we can fail early and\n    avoid further error checking in various places.\n  - Fix a potential use after free with threaded loops.\n  - The protocol now has a message footer. This is used to pass around\n    global state such as the last registered object serial number. This can\n    be used to detect when a client tries to bind to old (but reused)\n    object ids. This avoids some races in the session manager but also\n    when binding objects.\n  - The zero-denormals CPU flag is now not touched anymore unless explicitly\n    selected by the user. Denormals are avoided in filter-chain now in\n    software. If the zero-denormals are now only configured in the data\n    thread. This should fix issues with luajit. (#2160)\n  - Configuration parsing will not actually fail on errors.\n  - pw-top now correctly clips unicode characters.\n  - Many places now use a dynamic POD builder to support arbitrary large\n    property sets.\n  - pw-stream now support PropInfo parameters so that they can announce\n    custom properties.\n  - Serial number are now also set on metadata and session-manager objects.\n\n## SPA\n  - audioadapter is now smarter when trying to fixate the format. It will\n    use the PortConfig format to fill in any wildcards. This results in\n    the least amount of conversions when the stream can handle it. It also\n    is part of a fix (also requires a session manager fix) for WINE\n    multichannel support. (#876).\n  - Fix 5.1 to 2 channels mixing. It was using the volume of the stereo\n    pair on all channels.\n  - Fix some weird volume issues when a source is capturing and\n    channelmixing.\n  - Add stereo to 7.1 upmixing.\n  - The channelmix parameters can be changed at runtime now.\n  - Many improvements to the upmixing algorithms. Rear channels are now\n    constructed from the ambient sound and can have delay and phase shift\n    applied to them to improve specialization. The stereo channels can\n    be filtered so that the dialog is more concentrated in the center\n    channel. (#861)\n\n## modules\n  - Module X11 bell received cleanups and improvements.\n  - The module now has a private method to schedule unload later. This\n    simplifies cleanup in many modules.\n  - module-filter-chain now handles arbitrary many ports and control\n    ports. (#2179)\n  - Fix a bug in RAOP where it was reading from the wrong port. (#2183)\n\n## pulse-server\n  - Nodes with the DONT_MOVE property should fail with -EINVAL when\n    they are moved.\n  - Fix a segfault when playing a sample. (#2151)\n  - The _FIX flags in pulse-server also now ignore the configured\n    sample format, just like pulseaudio does. (#876)\n  - Fix IEC958 passthrough again. It got accidentally broken since\n    0.3.45 with a fix for another issue. (#1442)\n  - Fix module-null-sink device.description. (#2166)\n\n## Bluetooth\n  - Don't try to connect HSP/HFP when no backend is available.\n\n\n# PipeWire 0.3.47 (2022-02-18)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\nThis is a quick emergency release to fix some severe\nproblems with the previous release.\n\n## Highlights\n  - Fixes a bug in pulse-server that caused cached notifications\n    to play multiple times. (#2142)\n  - Removed check and warnings to catch leaked listeners on the\n    proxy. This might access invalid memory and cause infinite\n    loops in older wireplumber.\n\n# PipeWire 0.3.46 (2022-02-17)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - Fix a critical bug in pipewire-pulse buffer size handling that made some\n    apps (MuseScore, ... ) stutter.\n  - Fix a critical bug where devices would not show when the kernel was\n    compiled without VERBOSE_PROCSFS.\n  - JACK clients will now use lock-quantum by default. This makes sure that\n    all dynamic quantum changes are disabled while a JACK app is running.\n    The only way to force a quantum chance is through a JACK app or with\n    the metadata.\n  - Almost all limits on number of ports, clients and nodes are removed.\n  - A Dummy fallback sink is now automatically created when there are no\n    other sinks. This avoids stalling browsers.\n  - Sound sharing with Zoom should work better. A new WirePlumber release\n    might be required.\n  - Many more fixes and improvements.\n\n\n## PipeWire\n  - Update docs with new config overrides.\n  - The rule matching logic was moved to config and code is now shared with\n    pulse-server and JACK.\n  - Add new Romanian translation.\n  - When a quantum is forced with metadata, any node that asked to lock-quantum\n    is ignored so that the quantum change can happen.\n  - Fix a bug where a mixer was removed twice, leading to potential memory\n    corruption.\n  - The port limits on nodes and filters are now removed. Some code was\n    simplified.\n  - Fix a potential leak because listeners where removed while they could be\n    emitted.\n  - Improve context.exec and avoid zombie processes.\n\n## Modules\n  - The RAOP module now has a default latency of 2 seconds, like PulseAudio.\n  - The echo-cancel module now uses the plugin loader to load the backends.\n    This makes it possible to add custom, out of tree, echo cancel plugins.\n\n## Tools\n  - Improve help of pw-link.\n  - Output to stdout and error to stderr. Use setlinebuf for stdout to improve\n    piping between apps. (#2110)\n\n## SPA\n  - Improve removing sources when dispatching. Also improve performance now\n    that a destroy loop can be removed. (#2114)\n  - Fix an fd leak in the logger when logging to a file.\n  - Improve loop enter/leave checks and support recursive loops.\n\n## pulse-server\n  - Clamp various buffer attributes to the max length. Fixes some issues\n    with various applications. (#2100)\n  - Module properties are now remapped correctly from their pulseaudio variant\n    to the PipeWire ones.\n  - Fix module index in introspect. Use the right index when loaded from our\n    internal modules. (#2101)\n  - Improve argument parsing and node.description. (#2086)\n  - The sink-index should now be filled in correctly when playing a sample.\n    (#2129)\n  - module-always-sink is now implemented and loaded by default. (#1838)\n  - Add support for loading some modules only once.\n  - Module load and unload now does extra sync to make it appear synchronous,\n    like in PulseAudio. This improves sounds sharing in Zoom.\n\n## ALSA\n  - Fix critial bug where alsa devices would not show when the kernel was\n    compiled without VERBOSE_PROCFS.\n  - Some corner cases were fixed in the ALSA timing code. When the capture node\n    is follower, it will now not try to read too much data and xrun but it will\n    instead produce a cycle of silence.\n  - Various fixes and improvements to make ALSA devices resync to the driver\n    more quickly and accurately.\n\n## JACK\n  - Add an option to name the default device as `system` to improve\n    compatibility with some applications,\n  - Use lock-quantum by default. This makes sure that all dynamic quantum\n    changes are disabled while a JACK app is running. The only way to force\n    a quantum chance is through a JACK app or with the metadata.\n  - It is now possible to do IPC calls from the data thread. Note that this\n    is a very bad idea but required for compatibility with JACK2.\n\n## GStreamer\n  - GStreamer sink will now set a default channelmap to make it possible to \n    remap to the channel layout of the device.\n\n# PipeWire 0.3.45 (2022-02-03)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - Zoom, telegram and other apps should be able to play sound again.\n  - Implement a better way to force and lock JACK buffersize.\n  - Default sink and source names and properties are improved.\n  - The config loader can now load and merge fragments in conf.d directories\n    for easier user configuration of config files.\n  - Many small bug fixes and improvements.\n\n## PipeWire\n  - pw-cli can now also send Commands to nodes. This can be used to Suspend\n    a device, for example.\n  - The eventfd was removed from loops and invoke is now used to stop the loop,\n    this saves an fd.\n  - New Alpine CI target to test musl builds, various build fixes.\n  - Add force-quantum and force-rate properties.\n  - The config loader can now load and merge fragments in conf.d directories.\n    (#207)\n  - resource error methods can be called without a resource and then just\n    log an error message.\n  - link-factory can now also work from the config. (#2095)\n\n## modules\n  - module-simple-protocol has better argument parsing and can handle\n    channelmap now. (#2068) It's also possible to configure latency and\n    rate.\n  - The native protocol now does extra checks for invalid data. (#2070)\n\n## ALSA\n  - TI2902 chips as found in various Behringer cards should have inputs\n    again.\n  - Better handling of busy devices in udev, retry when the inotify close\n    event is emitted.\n\n## SPA\n  - plugins now handle alignment properly and only expect the max alignment\n    required for the CPU. (#2074)\n\n## Bluetooth\n  - SBC-XQ is now enabled for the JBL Endurance RUN BT headset.\n  - Support for non-hexadecimal XAPL version strings to improve compatibility.\n  - Use HCI commands again to probe the adapter msbc capability. This improves\n    compatibility with some adapters. (#2030)\n  - Set the right startup volume.\n  - Better A2DP source idle handling.\n  - Fix a timer bug in SCO sink that could cause busy looping.\n\n## pulse-server\n  - A playback issue when the tlength > maxlength was fixed. (#2069) This\n    affected Zoom and other applications.\n  - The STREAM_BUFFER_ATTR command is now implemented.\n  - Module names are improved. (#2076)\n  - Many small fixes and improvements.\n  - Fix a pavucontrol crash with invalid channels. (#1442)\n\n## JACK\n  - Use the new force-quantum and force-rate properties in the JACK API to\n    switch quantum and ensure it can't change for the lifetime of the JACK\n    app. (#2079)\n\n# PipeWire 0.3.44 (2022-01-27)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - It is now possible to run a minimal PipeWire server without a session\n    manager, enough to run JACK clients.\n  - The maximum buffer size is now configurable and can be larger than\n    the previously hardcoded limit of 8192 samples. When using high sample\n    rates, the larger buffer size can avoid xruns.\n  - The default maximum latency was reduced from 170ms to 42ms. This should\n    improve overall latency for application that ask for a large latency,\n    such as notifications.\n  - Better JACK compatibility. Patchbays should now get less confused about\n    ports appearing and disappearing.\n  - Fix some bluetooth crashes.\n  - Fix some races in ALSA device detection.\n  - Many bug fixes and improvements all over the place.\n\n## PipeWire\n  - Bump the meson requirement to 0.59.0.\n  - pw-top now reports correct times for filter-chain and loopback.\n  - max-quantum is now also scaled with the rate. A new quantum-limit\n    property was added as a hard limit for the quantum. This makes it\n    possible to configure for larger than 8192 buffer sizes. Note\n    than many JACK applications have a hardcoded 8192 limit. (#1931)\n  - The max-quantum was reduced to 2048, This gives a 42ms default\n    latency. (#1908)\n  - pw-filter can now return a NULL buffer from _get_dsp_buffer().\n  - Add a PIPEWIRE_RATE and PIPEWIRE_QUANTUM env variable to set the\n    graph rate and the graph quantum and rate respectively.\n  - Fix a potential file descriptor leak in the connection.\n  - A new minimal.conf file was added to demonstrate a static setup\n    of a daemon that doesn't require a session manager and is able to\n    run JACK applications.\n  - Nice levels are now only changed on the servers, not the clients.\n  - Add an option to suspend nodes when idle.\n  - Make it possible to avoid quantum and rate changes with\n    pw-metadata. This is essential in a locked down system.\n  - Handle mixer port errors better and fail to create the link instead\n    of silently not working.\n  - Nodes that are moved to a driver now have all the linked nodes moved\n    as well. This makes it possible to run some graphs without a\n    driver, such as paplay -> zita-j2n.\n  - pw-cli and pw-dump can now also list objects by name, serial and\n    object.path using glob style pattern matching.\n\n\n## modules\n  - filter-chain can now also configure parameters by index.\n  - Fix the client name of module-protocol-simple. (#2017)\n  - module-rtkit was merged into module-rt. This makes it easier to\n    ship a default config that works on more systems by default.\n  - module-adapter can now configure the adapter node from the config.\n    Previously, this was a task only performed by the session manager.\n  - module-metadata can now also create metadata object from the\n    config file.\n  - The ROC module should now work again. (#2045)\n  - An X11-bell module was added to handle X11 bell events. (#1668)\n  - filter-chain and loopback modules now have better unique default\n    names for the streams, which makes it possible to save and restore\n    their volumes independently. (#1983)\n  - module-echo-cancel now has properties to control the delay and\n    buffer size.\n\n## ALSA\n  - The monitor names are now correctly parsed.\n  - The default period size for batch devices is limited now to avoid\n    large latency.\n  - The unused min/max-latency properties were removed.\n  - Internal latency is now also configurable with params at runtime.\n  - The udev rule for TI2902 was removed because it causes problems.\n  - Fix a race where some devices would sometimes be missing. (#2046)\n  - Add some more timeouts to work around a race in udev device\n    permission changes when switching VTs.\n\n## SPA\n  - Fix potential infinite loop in audioconvert.\n  - The spa-resample tools can now also use optimized implementations.\n  - Fix a potential crash in resampler. (#1994)\n  - audioconvert can now also handle F64 formats. (#1990)\n  - The channelmixer now does normalization by default to avoid clipping\n    when downmixing is active.\n  - The channelmixer will now generate LFE channels when the lfe_cutoff\n    frequency is set, even when upmix is disabled.\n  - The channelmixer will now always generate FC when the target has it.\n  - Adapter now reports latency correctly, even after linking the monitor\n    ports.\n  - Reduce memory usage and preallocated memory in some of the\n    audioconvert nodes.\n  - Many properties are now exposed in adapter, such as the resample\n    quality.\n  - The resampler and channelmixer can now be disabled.\n\n## V4L2\n  - pw-v4l2 now also works for ffplay. (#2029)\n  - Take product names from udev now that the kernel returns a generic\n    name.\n\n## JACK\n  - The jack pkgconfig file now has the `jack_implementation=pipewire`\n    variable to be able to distinguish jack implementations. (#1666)\n  - jconvolver now starts correctly again. (#1989)\n  - The object.serial is now used for the port_id. This makes it easier\n    to track old objects in the cache.\n  - Add a dummy jacknet implementation. (#2043)\n  - A bug in the port allocation was fixed that would make it impossible\n    to allocate ports at some point. (#1714)\n\n## Bluetooth\n  - Bluetooth profiles are now saved properly by the session manager.\n  - Improved profile detections, increased timeouts for slow devices.\n  - Implement HFP call indicator for improved compatibility.\n  - Handle the case where bluez does not set the adapter or address\n    properties on the device instead of crashing.\n  - Improved support for setting the profile from the session manager.\n\n## pulse-server\n  - Monitor sources now have the device.class=monitor for better\n    compatibility.\n  - Behaviour after seeking is improved. The algorithm for requesting\n    bytes from the client was simplified and improved. (#1981)\n  - module-ladspa-sink implements the control argument now. (#1987)\n  - A potential memory leak in the message queue was fixed. (#1840)\n  - Use the object.serial for the pulseaudio object index. The index is\n    not supposed to be reused and this would cause problems with some\n    clients.\n  - Servers should now again be able to listen in IPv4. (#2047)\n  - module-x11-bell was added. (#1668)\n  - There is now support for per-application quirks and properties in\n    the pipewire-pulse.conf file. Per-application latency and buffering\n    properties can also be configured.\n  - Fix a regression in telegram sounds not playing.\n\n# PipeWire 0.3.43 (2022-01-05)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - Flatpak apps such as Ardour can now remove links again.\n  - Many fixes to pulse-server. Memory usage should be improved. Some\n    crashes are fixed. Underrun handling should work better. Better\n    compatibility with GStreamer based applications after seeking.\n  - Many of the samplerate and quantum changes bugs in previous releases\n    were fixed. This fixes some issues where the microphone would fail\n    to work.\n  - Many more small fixes and improvements all over the place.\n\n## PipeWire\n  - Quantum and rate changes are now applied immediately when the driver\n    is idle. This avoids setting the driver in the previous samplerate.\n    (#1913)\n  - Object destruction now does not need write permissions anymore. This\n    restriction needs some more work. (#1920)\n  - When we reposition, start a sync operation. This fixes a problem\n    in Ardour when seeking. (#1907)\n  - Require meson 0.56.0\n  - Make the align property in BUFFER_PARAM optional. We now only set this\n    if the plugin has specific requirements and we default to the CPU\n    largest alignment requirement.\n  - pw-record will now also list monitors and streams as possible targets.\n\n## modules\n  - Improve LV2 plugin support in filter-chain. Add support for Worker and\n    Options.\n  - The loopback module now has a unique media.name to make it possible\n    for the session manager to restore unique volume settings.\n\n## SPA\n  - Improve sample rate for EAC3 streams, some clients scale it while\n    others don't so use some heuristics to make things work better.\n    (#1902)\n  - Allocate ports dynamically in audioconvert. This avoids using larger\n    memory blocks of preallocated memory that confuses the allocator.\n    (#1840)\n\n## ALSA\n  - Merge the latest pulseaudio UCM improvements. (#1849)\n  - Fixes for selecting the sample rate. (#1892)\n  - Improve latency on USB devices by scaling the period size based on\n    the desired quantum when the device is opened.\n  - Add api.alsa.period-num to configure the amount of periods to use\n    in the device. Some devices have lower latency when a small value\n    is forced. (#1473)\n  - Allow multi-rate by default. In previous versions cards could only\n    be opened in one samplerate to avoid bugs in pre 5.16 kernels. This\n    however caused other problems so the default was removed.\n  - Fix a bug where a card was not freed correctly.\n  - Fix a bug in the alsa boundary check that could hang the alsa-plugin\n    for a long time.\n  - The ALSA plugin now has a parameter to configure the allowed\n    samplerates.\n\n## JACK\n  - Improve handling of monitor nodes.\n\n## Bluetooth\n  - Codecs now have a priority. This should improve codec selection.\n\n## pulse-server\n  - The stream FIX_ flags are now implemented. (#1912)\n  - Improve flushing and draining behaviour. Short samples will now\n    play correctly. (#1549)\n  - Fix a crash when enumerating the formats. (#1928)\n  - Track quantum changes and update the amount of required buffering\n    accordingly. This improves forced quantum handling. (#1930)\n  - Improve handling of channels > 32.\n  - Handle the case where a module is destroyed before it could be\n    completely loaded.\n  - Fixes some issues when samples were removed while they were playing.\n    (#1953)\n  - Fix some issues in module-zeroconf-publish.\n  - Fix some memory leaks in module-roc.\n  - Add command access control. This avoids execution of commands without\n    proper authentication.\n\n# PipeWire 0.3.42 (2021-12-16)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\nThis is a quick emergency release to fix some severe\nproblems with the previous release.\n\n## Highlights\n  - Fixes a bug in pulse-server underrun handling that broke qemu\n    and orca.\n  - A fix was added to pulse-server to handle quantum changes\n    gracefully.\n  - Fix module-echo-cancel again.\n  - Fix a bug where the bluetooth headset capture was producing\n    noise.\n\n\n# PipeWire 0.3.41 (2021-12-13)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - Improved compatibility for flatpaks. Flatpaks with newer PipeWire\n    version can connect to an older server in all cases.\n  - A new RAOP module was added to stream to Apple Airplay devices.\n  - OBS can now capture from the monitor devices again when using\n    WirePlumber.\n  - Improved JACK compatibility. Improved stability in Carla and Ardour\n    when changing buffer size. Improved latency calculations and\n    playback latency in Ardour.\n  - Improved pulse-server handling of underruns and buffer size changes.\n  - Many bugfixes and improvements.\n\n\n## PipeWire\n  - The systemd service files now have better names.\n  - client.access permission checks are improved.\n  - Fix some memory leaks in error paths.\n  - Objects now have a global serial number that is unique for the\n    lifetime of the server.\n  - Make clock.rate, clock.allowed-rates and clock.quantum\n    runtime tunable parameters with the settings metadata.\n  - Add some additional memory checks in client-node to avoid\n    sending invalid memory to clients. (#1859)\n  - Improve buffer memory allocation. If one of the nodes is a\n    remote node, ensure we only use memory that can be shared.\n  - Version checks when binding to objects is removed. This means\n    that newer clients can now bind to older servers, which is\n    a typical case for a flatpak.\n  - A bug in the latency calculations was fixed where it would in\n    some cases report the wrong minimum latency.\n\n## modules\n  - module-echo-cancel has voice-detection enabled now.\n  - module-raop-sink and module-raop-discover to stream audio to\n    an Apple Airplay device.\n  - module-filter-chain now has preliminary support for LV2\n    plugins.\n\n## SPA\n  - The audio resampler now has improved buffer size calculations.\n    In some cases it was too small and would cause distortions.\n  - More checks are done when doing volume changes so that the\n    channelmap is correct.\n  - Audioadapter now exposes most config options with params so that\n    they can be adjusted at runtime.\n  - The resampler can now calculate the expected input buffer size\n    before receiving the first buffer, which avoids some confusion\n    when starting streams.\n  - Support was added for some 10bit video formats.\n  - MONO channel handling was improved.\n  - Most plugins now set a clock name and this is configurable where\n    it makes sense. The clock.system.monotonic clock name is used\n    for most plugins that use the system clock for timing.\n\n## pulse-server\n  - implement module-raop-discover\n  - Use STREAM_CAPTURE_SINK property when capturing from a monitor\n    source to better inform the session manager. This fixes some\n    issues where OBS would capture from the microphone instead of\n    the output monitor.\n  - Limit the amount of cache messages to 16MB and don't add large\n    memory blocks to the cache. This should fix some excessive\n    memory usage that people reported.\n  - Fix a potential memory leak when cleaning up a client.\n  - Do some additional checks to avoid buffer overruns.\n  - Improve recovery from underruns better. (#1857) This improves\n    seeking in gnome-music.\n  - Improve recovery when the quantum is forced larger that the\n    stream configured latency.\n  - The prebuf state is now handled correctly.\n\n## JACK\n  - A per type object cache is now implemented. This ensures that\n    port objects remain valid for a longer time because many\n    JACK applications inspect objects after they are destroyed.\n    This improves catia/carla compatibility.\n  - Recompute the latencies when the buffer-size changes. Fix some\n    cases where we would end up with negative latencies.\n  - Handle regcomp errors to avoid some crashes later.\n  - Latency calculations are improved a lot.\n  - More care is taken to not call a process callback while a buffer\n    size change is pending. This fixes some crashes in Carla, which\n    expect that all clients are paused when one handles the buffersize\n    callback.\n  - Loopback links to a client are now handled correctly and without\n    latency. This fixes playback latency in ardour6 (#1839)\n\n## ALSA\n  - ALSA devices now keep track of the samplerate of the card and\n    ensure that all PCM use the same rate. This is a workaround for\n    a kernel bug that is fixed in 5.16.\n  - Refactor the ALSA plugin a little.\n  - The ALSA plugin now reports correct delay for a capture PCM. (#1697)\n  - The ALSA nodes now expose all config options with params that can be\n    changed at runtime.\n  - The ALSA node has a configurable clock name. Adaptive resampling to\n    match clock rates is avoided when the driver has the same clock\n    name as the ALSA node. This can be used to link alsa devices together\n    with a word clock.\n\n# PipeWire 0.3.40 (2021-11-11)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - Producers and consumers can now incrementally negotiate a format\n    by narrowing down the options. This can be used to select an optimal\n    combination of format and modifiers.\n  - Driver nodes such as the consumer of a headless compositor can now\n    throttle the speed based on a new trigger_done event.\n  - Headless compositors can now signal a damage event to consumers\n    to start the processing of the graph.\n  - Compatibility improvements in JACK.\n  - Draining and resuming is now working correctly in pulse and alsa.\n  - Many bugfixes and improvements.\n\n\n## PipeWire\n  - Many BSD fixes.\n  - clang compilation fixes.\n  - Fix map implementation on big-endian machines.\n  - Improve tracking of param changes in pw-stream.\n  - Add support for renegotiation. With this change, producer and\n    consumer can incrementally renegotiate a format until it is fixed.\n    This will be used to do complex negotiation of DRM modifiers.\n    (#1732).\n  - Add a trigger-done event in the stream. This can be used to know\n    when processing of the complete graph has finished after issuing\n    a trigger_process() and it can be used to throttle processing.\n  - Add a RequestProcess node event and command. This can be used by\n    non-driver nodes to suggest to a driver to start processing. One\n    case is where a compositor can emit this event as a result of a\n    screen update to let the headless compositor start an update.\n  - Fix zeroconf sample format.\n  - pw-mon outputs to stderr now and has colors.\n\n## SPA\n  - Fix compilation on ppc and armv7.\n  - Fix port type check for ALSA seq midi ports so that they are not\n    falsely listed as hardware.\n  - Fix crash when running SSE code on unsupported HW. (#1775)\n  - The libcamera plugin was rewritten. It now supports hotplug,\n    format enumeration and an easier to read codebase.\n  - Fix compatibility some more for cards with 64 channels.\n\n## pulse-server\n  - Flush data in pause in combine-sink to avoid stray audio fragments.\n  - Fix a race where not all objects were removed correctly.\n  - The latency calculations and setup was improved to more closely\n    match pulseaudio behaviour. PULSE_LATENCY_MSEC should now resemble\n    pulseaudio more closely. (#1769)\n  - The drained reply is now sent only once and new data will be\n    accepted once the drain completes.\n  - Fix a potential crasher bug where the stream started processing\n    before the setup was completed.\n  - The server will now drop the client connections when the pipewire\n    connection is lost.\n\n## JACK\n  - Rework the jack_port_get_buffer() method to return the same memory\n    when called multiple times during the process() callback. This makes\n    things work on a new Hydrogen. (#1748)\n  - Add an option to disable showing the monitor ports.\n  - JACK ports are now sorted per node/client and port_id. This should\n    more closely match JACK behaviour and avoid random port order.\n    (#1780)\n\n## v4l2\n  - Fix v4l2 LD_PRELOAD script.\n  - Make sure we destroy the proxy when the global is destroyed.\n\n## ALSA\n  - _prepare should exit the draining state. (#1467)\n  - Fix the precision of the _delay function by taking into account\n    the amount of queued samples are the correct samplerate.\n\n\n# PipeWire 0.3.39 (2021-10-21)\n\nThis is a bugfix release that is API and ABI compatible with previous\n0.3.x releases.\n\n## Highlights\n  - media-session is now moved into a separate module to speed up its\n    deprecation in favour of WirePlumber.\n  - There is now an LD_PRELOAD v4l2 emulation library to run some existing\n    v4l2 applications on top of PipeWire.\n  - Filter-chains should now flush out remaining samples when paused. There\n    is now also the option to let a filter-chain drain so that long filters\n    such as reverbs can fade out properly.\n  - Stability and compatibility improvements in JACK apps.\n  - Better Bluetooth compatibility with more devices.\n  - libcamera plugin improvements.\n  - Many bugfixes and improvements all over the map.\n\n\n## PipeWire\n  - Fix compilation on ARM.\n  - Log topics are added to most modules.\n  - Documentation updates. Many improvements to the layout. Reorganisation\n    of the modules and groups.\n  - Share a work queue for all links and nodes. This removes the need for\n    a separate eventfd per link and per node.\n  - Catch errors in the map implementation.\n  - Add option to compile without dbus support.\n  - Fix biquad frequency. It was using the wrong sample rate.\n  - Fix a potential crash when destroying nodes, in some cases the node\n    would not be deactivated properly.\n  - Add some more helpers for dealing with properties and their values.\n  - Implement flush and reset on virtual sinks/sources.\n  - Make it possible to let virtual sinks/filter-chains run and drain\n    after being idle.\n  - Fix a bug where the quantum could exceed the maximum because it was\n    scaled with the sample rate.\n  - Fix channel_map parsing in module-zeroconf-discover so that the remote\n    channel map is used.\n  - pw-stream errors emitted on the proxy are reported but not fatal\n    any more. They are usually used by the session manager to signal status\n    to the client but otherwise does not really cause an error on the\n    client.\n  - Links now also store the output and input node id in the global\n    properties so that applications can parse and use them regardless of\n    how the link was made. (#1723)\n  - pw-stream and pw-filter now have an event to notify commands.\n  - The echo-cancel module can now operate on larger quantums.\n  - pw-cat now uses the right metadata to find the default devices in\n    --list-targets.\n\n## media-session\n  - Don't try to remix unpositioned streams when linking. This ensures\n    that linking to Pro-Audio nodes does not remix the stream channels\n    but links them as they are, one by one.\n  - media-session is now moved to a separate module to accelerate its\n    deprecation in favour of WirePlumber.\n\n## SPA\n  - Many libcamera improvements, handle MemFd buffers, handle errors\n    gracefully.\n  - Small improvements to make interface fall-backs easier to implement.\n  - Add support to enable flush-to-zero and denormals-are-zero to avoid\n    high CPU usage when dealing with denormals.\n  - AUX13 channels are no longer reported as AUX12. (#1727)\n  - Devices with more than 32 channels in Pro-Audio mode now only\n    uses AUX channels.\n  - Improve windowing function of the resampler to reduce aliasing and\n    improve the quality.\n\n## JACK\n  - Port connect callbacks will not only be emitted after the port\n    has negotiated buffers, which improves compatibility with\n    applications that try to use the port right after the callback\n    (jack_midi_latency_test).\n  - Fix crash when midi ports were removed and being monitored, like\n    in Ardour.\n\n## pulse-server\n  - The pulse tunnel will now use the specified format/rate/channels.\n  - Improve lookup of default source and fall back to the monitors when\n    no sources are available.\n  - Mark some nodes as network nodes so that we can set the NETWORK flag\n    correctly.\n\n## GStreamer\n  - The GStreamer element not releases the buffers in the stream again in\n    all cases so that they can be reused by other streams.\n\n## v4l2\n  - Add a v4l2 LD_PRELOAD library to emulate v4l2 system calls on top of\n    PipeWire. This is tested with firefox and GStreamer and is known to\n    not work with Chrome.\n\n## Bluetooth\n  - AAC compatibility improvements.\n  - Disable hardware volume for \"Tribit MAXSound Plus\" and\n    \"SoundCore mini\".\n  - Add quirk to disable faststream. Disable faststream on \"FiiO BTR3\".\n  - Add a dummy AVRCP player to improve compatibility with some devices.\n\n\n# PipeWire 0.3.38 (2021-09-30)\n\nThis is a quick bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n## Highlights\n  - Topic based logging was added to improve debugging.\n  - An off-by-one error was fixed in the audio resampler that could\n    cause distortion when downsampling.\n  - Various bluetooth compatibility improvements.\n  - More fixes and improvements.\n\n## PipeWire\n  - module-pulse-tunnel now has better default latency to make it work\n    better in more cases. There is also an option to configure the\n    desired latency.\n  - pw-cli now has readline support.\n  - Topic based logging was added. Log lines can now be filtered by\n    topic using wildcards. This should improve debugging.\n  - The systemd service files should now have better descriptions.\n  - Fix a crash in module-zeroconf-discover when unloading.\n  - Fix a crash in filter-chain when using unaligned memory.\n\n## ALSA\n  - Sync the udev rules and profiles with pulseaudio.\n  - Fix a memory leak.\n\n## SPA plugins\n  - An off-by-one error was fixed in the resampler that could cause\n    distortion when downsampling. (#1646)\n\n## Bluetooth\n  - Avoid probing the native backend because it might block for DBus\n    activation. This fixes some long startup times.\n  - Fix the kernel version check, 5.14.x kernels should also support\n    mSBC.\n  - Fix FastStream microphone support in more cases.\n  - Add workaround for Intel AX200.\n  - SCO sink should now also work in follower mode.\n\n## PulseAudio server\n  - Make the service file require a session manager.\n\n\n# PipeWire 0.3.37 (2021-09-23)\n\nThis is a quick bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n## Highlights\n  - Capture and playback is now avoided even more on unavailable\n    devices. This should fix some issues where an unusable microphone\n    was selected by default. It should now also again be possible\n    to select an unavailable device as the default.\n  - Native DSD audio playback is now supported. pw-cat can now also\n    play DSF files with the -d option.\n  - JACK stability improvements with buffer-size and samplerate\n    changes in some apps.\n  - Many cleanups and bugfixes all over the place.\n\n## PipeWire\n  - pw-metadata -d does not cause an infinite loop anymore. (#1622)\n  - Increase some plugin buffer sizes to fix some issues with many\n    channels. (#1620)\n  - Protect the global plugin list with a lock. Make sure pw_init()\n    is locked. Fixes some issues with concurrent ALSA plugin usage.\n\n## media-session\n  - Unavailable devices can be set as the default again. (#1624)\n  - Do a better check if a device has available routes and avoid\n    selecting devices with unavailable routes as default.\n  - Media-session was moved to its own directory. It used to live\n    in examples but it is past the example stage and it interferes\n    with the build options for the real examples.\n\n## Bluetooth\n  - The hardware quirk database is now loaded by the plugin instead of\n    the session manager. This makes it also work with wireplumber.\n\n## ALSA\n  - The ALSA mixer now handles device removal much better. (#1627)\n\n## libcamera\n  - Many fixes and improvement to the libcamera plugin. (#1513)\n\n## pulse-server\n  - Improve compatibility with pulseaudio module arguments.\n  - Parse channel_map arguments in module-loopback. (#1486)\n\n## JACK\n  - Delay emitting the samplerate and buffersize callbacks until the\n    client is active. This fixes some crashes with Carla and other\n    JACK apps.\n\n# PipeWire 0.3.36 (2021-09-16)\n\nThis is a quick bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n## Highlights\n  - A quick update with mostly only bugfixes and small improvements.\n  - Capture and playback is now avoided on unavailable devices. This\n    should fix some issues where an unusable microphone was selected\n    by default.\n  - MIDI output should not stop randomly now.\n  - The GStreamer elements are much improved, cheese should work\n    a lot better now.\n  - Virtual sinks and sources should now always show up immediately.\n  - JACK processing is now delayed until buffersize and samplerate\n    are emitted. This should improve stability of many JACK apps.\n  - JACK transport sync is now implemented correctly so that preroll\n    in bitwig works.\n\n## PipeWire\n  - The module dir environment variable can now contain multiple paths.\n  - Documentation now contains dot graphs of dependencies. (#1585)\n  - config min/max/default quantum values are now scaled with the\n    samplerate.\n  - A potential crash was fixed where destroyed memory was still used\n    by a node. This could cause crashes in cheese.\n\n## pipewire-media-session\n  - Only allow passthrough for passthrough formats (S/PDIF) for\n    now. (#1587)\n  - Improve bluetooth profile autoswitch.\n  - Don't try to route audio to nodes with unavailable routes.\n\n## ALSA\n  - Pass the right AES bits to the alsa device when opening an\n    S/PDIF stream.\n  - Fix a bug in the MIDI bridge port management logic. When a port\n    was added and immediately removed, output would stop.\n\n## GStreamer\n  - The GStreamer source now handles the flushing state correctly.\n  - All blocking operations now have a 30 seconds timeout, to avoid\n    infinite locks.\n\n## Plugins\n  - V4l2 Device formats and controls are now passed on the node, just\n    like with audio devices.\n  - audioconvert now also exposes the softMute property.\n\n## JACK\n  - Improve stability when changing buffer size and sample rate\n    dynamically by pausing the processing until the application has\n    handled the callback.\n  - Improve handling of timebase master. When the master was moved to\n    another driver, it did not attempt to become a new timebase\n    master on the new driver. (#1589)\n  - Implement transport sync to make preroll in bitwig work. (#1589)\n\n## pulse-server\n  - Fix an issue where virtual sinks/sources would not show up\n    immediately. (#1588)\n\n\n# PipeWire 0.3.35 (2021-09-09)\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n## Highlights\n  - S/PDIF passthrough over optical or HDMI is now implemented.\n  - Some critical fixes to MIDI, draining of streams and various\n    modules.\n  - skypeforlinux should work better now after adding it to the\n    quirks database.\n  - Bluetooth codecs are now in separate plugins to make it easier\n    to ship them.\n\n## PipeWire\n  - Drain was fixed in pw-stream. In some cases it would not clear\n    the drain state correctly. Fixes the issue where speaker-test would\n    only play one channel.\n  - Loopback connections to a driver will now activate the driver. This\n    fixes an issue where MIDI connections between devices or some\n    applications (puredata) would not get any MIDI messages. (#1559)\n  - The audiomixer can now mix more formats. Together with the passthrough\n    improvements this can be used to avoid conversions to/from the DSP\n    format in some cases.\n  - Make sure we idle drivers when removing a node from it in all cases.\n    JACK clients could keep a driver node busy.\n  - Add new methods to accumulate object info. The old one was difficult\n    to use when applications need to accumulate multiple changes.\n  - A new interface to load modules has been added. Plugins can use this\n    to ask the host (PipeWire) to load spa plugins.\n  - Increase param buffer size to handle larger params. Nodes with a large\n    number of channels would sometimes not have properties. (#1574)\n  - Concurrent link negotiation that caused some links to not work,\n    is now avoided. This fixes monitor ports in Ardour6.\n  - Small tweaks to how the quantum and rate are handled when nodes move\n    between drivers. Make node.lock-quantum work with node.latency\n\n## PipeWire modules\n  - The convolver plugin in filter-chain has been optimized some more.\n  - The echo-cancel stream properties were improved so that it actually\n    can remember the streams it links to. (#1557)\n  - module-pulse-tunnel had the buffer attributes wrong and would cause\n    high latency with older pulseaudio servers. (#1434)\n  - module-roc had the properties configured wrongly, which would cause\n    it to not work at all in most cases. (#1538)\n  - There is now an example of a 7.1 virtual surround sink using the\n    hesuvi impulse responses.\n  - The convolver now supports dirac pulses as the IR.\n\n## ALSA\n  - UCM config is now cached per device, using up less memory. It also\n    temporarily works around a problem in alsa-lib that is now being\n    patched and rolled out. Should stop devices from disappearing when\n    logging out and back in. (#1553)\n  - Fix the MIDI clock rate matching. It was too sensitive to small\n    changes and would spiral out of control and break MIDI rather\n    quickly.\n\n## pipewire-media-session\n  - The media session can now save and restore IEC958 (S/PDIF) codecs\n    for the sinks.\n  - Passthrough of IEC958 (S/PDIF) content is now possible. If the client\n    and the sink contain a compatible set of codecs, an exclusive\n    connection can be made between client and sink to pass the encoded\n    S/PDIF content directly to the device.\n  - Use new introspection info update methods to suspend nodes in all\n    cases. Sometimes, nodes would fail to suspend because the state info\n    was not evaluated.\n  - The media session can now work in non-DSP mode, which will try to\n    avoid any audio conversions between client and device when possible.\n    But, this will also disable compatibility with JACK applications.\n\n## Bluetooth\n  - Bluetooth codecs are now compiled into separate plugins which are\n    dynamically loaded. This makes it possible to change the plugin\n    implementation or ship plugins separately without having to recompile\n    the bluetooth module.\n\n## PulseAudio server\n  - Delay stream create reply until the stream is linked to a sink/source.\n  - The device-restore extension is now implemented. This makes it possible\n    to configure the IEC958 (S/PDIF) codecs supported by the sink with\n    pavucontrol.\n  - skypeforlinux now uses the same quirks as teams to make the sinks\n    show up in all cases. This fixes the issue of not being able to hear\n    the remote end in skypeforlinux.\n\n## JACK\n  - Improve catia and carla compatibility by caching objects a little longer\n    after being removed. (#1531)\n  - JACK ports now notify the negotiated format correctly.\n  - A potential deadlock was fixed when multiple threads would perform a\n    call that would require a roundtrip.\n  - Improve bufsize callback, it should not be called right after doing\n    activate() but only when the buffersize changes later.\n  - Add tweak to disable the process lock. Some older apps might not\n    expect it. (#1576)\n\n## Docs\n  - man pages are now generated with rst2man.\n  - DMA-BUF docs were updated.\n  - Documentation updates.\n\n\n# PipeWire 0.3.34 (2021-08-26)\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n\n## Highlights\n  - Fixes some critical issues with previous release. Such as\n    devices not showing up and default devices being lost.\n  - Support for consumer driver streams to make the producer v-sync\n    to the consumer monitor in a headless compositor setup.\n  - Improvements to routing of streams.\n  - Bluetooth battery status support for head-set profile and\n    using Apple extensions. aptX-LL and FastStream codec support\n    was added.\n  - Internal latency of ALSA devices can now be configured.\n  - A fast convolver was added to the filter-chain to implement\n    virtual surround sinks or reverbs.\n\n## PipeWire\n  - Add support for streams that are driver nodes for the graph.\n    This was already possible for source streams but it is now\n    also possible for playback streams. This can be used to let\n    a producer v-sync to the consumer monitor in a headless\n    compositor setup. (#1484)\n  - State files are now stored in XDG_STATE_HOME instead of\n    XDG_CONFIG_HOME. They will still be loaded from the config home\n    if they are not in the new state home, to ease migration.\n  - Set a driver on inactive nodes to make transport work in xjadeo.\n    (#1491)\n  - Fix parsing of filter-chain controls.\n  - A new FFT based convolver was added to module-filter-chain. It\n    uses a 0-latency 2 stage convolver with small FFT for the head\n    and a large FFT for the tail of the convolution. A convolution\n    can be used to implement IR based reverbs, HRIR surround sound\n    or other convolution based operations. An example HRIR\n    virtual surround sound sink has been added as well.\n  - module-filter-chain was reworked a bit to support more config\n    options for the plugins.\n  - Endian conversion and alaw/ulaw formats are now supported for\n    streams.\n  - pw-cat will now suggest a samplerate for the graph.\n  - SPA_PLUGIN_DIR can now search in multiple paths separated with\n    a ':'.\n  - Passthrough mode has been worked on and has been partially\n    merged. S/PDIF definitions have been added and ALSA devices\n    updated to report and configure S/PDIF formats. The session\n    manager changes to fully configure and enable passthrough mode\n    will hopefully be merged next time.\n  - Fix a race in pw-stream where it would not always emit the\n    right events.\n\n## ALSA\n  - Fix volume changed check. It was checking against the wrong\n    value and this could cause rounding errors.\n  - The ALSA plugin now also uses RT scheduling.\n  - Fix the behringer UMC202 usb device id, it was using a generic\n    TI chip ID that caused problems.\n  - Fix USB devices that don't show up anymore. Use an ALSA\n    workaround to fix this. (#1478)\n  - Add a rule for the new firmware of Sennheiser GSX 1200.\n  - ALSA sink and source can now use ProcessLatency param to configure\n    the internal latency. The latencyOffsetNsec property is also\n    exposed so that the latency can be adjusted in pavucontrol as\n    well.\n\n## media-session\n  - Fix a critical issue where the default device was not remembered\n    anymore when it was removed.\n  - Fix the issue where some apps need to be restarted when nodes go\n    away and reappear.\n  - Improve routing of streams. Streams that have a specific target\n    set will now be moved to the target when it appears instead of\n    staying on the fallback.\n  - Small memory leak fixes.\n  - Try to switch back to the user selected profile after finishing a\n    Bluetooth recording.\n\n## Bluetooth\n  - Add support for HF indicator 2 battery status.\n  - Add support for XAPL battery status.\n  - Set the Communication intended role for HFP profile.\n  - Enable SBC-XQ by default if not disabled by quirks.\n  - Fix some potential crashes due to excessive polling.\n  - Add aptx-LL codec and enable duplex for aptx-LL devices.\n  - Add FastStream codec. This is a codec that can use a\n    duplex SBC channel.\n\n## PulseAudio server\n  - Suggests a samplerate for the graph.\n  - Support for handling S/PDIF (IEC958) formats was added. This will\n    start working when the session manager supports configuring streams\n    and nodes in passthrough mode.\n  - Be smarter when handling devices without a negotiated format\n    yet so that they are visible as well. This makes virtual\n    devices show up immediately.\n\n## ALSA plugin\n  - Now suggests a samplerate for the graph.\n\n## JACK\n  - The jack.pc file can only be generated with meson >= 0.59.0. When\n    the jack-devel option is enabled, it will generate an error with\n    older meson.\n  - Small stability improvements when connecting/disconnecting in\n    Ardour.\n\n\n# PipeWire 0.3.33 (2021-08-05)\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n## Highlights\n  - Better support for virtual sinks/sources for Pro Audio\n    profile.\n  - Better DMA-BUF format modifier negotiation.\n  - Support multiple sample rates in the graph. Not enabled\n    by default yet.\n  - Bluetooth can now automatically switch between headset\n    and audio profile.\n  - Documentation updates.\n  - Many improvements and crasher fixes.\n\n## PipeWire\n  - Make AUX channels an official channel map, use this for the\n    PRO audio profile so that we can name the channels. This\n    make it possible to define virtual sources and sinks for\n    Pro Audio devices in a more reliable way.\n  - Fix scheduling of some virtual sinks/sources. (#1407)\n  - Fix potential corruption of ringbuffer because of multiple\n    concurrent writers. This might be the cause for many reported\n    crashes. (#1451)\n  - Don't place sockets in $HOME. (#1443)\n  - Improve DMA-BUF negotiation. Add a flag to avoid fixation\n    of a property so that producers can negotiate more\n    efficiently. This is used to negotiate DMA-BUF modifiers,\n    which should make more efficient use of the GPU. (#1084)\n  - Add support for multiple sample rates. The graph can switch\n    when IDLE to one of the supported rates. Add an option to\n    lock the rate as well. This is not enabled by default yet\n    because of driver bugs that need to be worked around first.\n  - Add node.lock-quantum property that can be used to lock the\n    quantum in place.\n  - Improve latency reporting in the loopback module.\n  - Make new client-node method to send the peer port id to the\n    mixer. This can be used to know where the buffers entering the\n    mixer are coming from. (#1471)\n\n## Tools\n  - pw-top should now also correctly show bluetooth devices. (#1540)\n\n## media-session\n  - Handle unset of the default node.\n  - Added a module that can switch the bluetooth profile to headset\n    profile when a stream wants to record from it.\n\n## JACK\n  - Only call the jack callbacks when the client is active. Some\n    JACK applications don't expect callbacks before the client is\n    active and crash (x42-dpl). (#1461)\n  - Emit client unregister event.\n  - Add per-client match rules in the config file to set app\n    specific configuration and tweaks. (#1456)\n  - Use peer_id to implement jack_port_get_buffer() from one of\n    our peer ports to get the data before it enters the mixer.\n    Makes the capture monitors work in Ardour6.8. (#1471)\n\n## Bluetooth\n  - Add some broken kernel versions to the mSBC blocklist\n  - Avoid looping and consuming CPU when we can't write to the\n    BT socket.\n  - Use libfreeaptx instead of libopenaptx.\n  - Fix rounding errors in HW volume conversion.\n\n## PulseAudio server\n  - implement module-switch-on-connect to emulate pulseaudio\n    behaviour of new devices. Some desktop environments expect\n    this behaviour and break otherwise.\n  - Fix stream cleanup, make sure the stream is stopped before\n    destroying it. Might be cause for some of the reported\n    crashes.\n  - Update message API to use the JSON format.\n\n## Other\n  - Many documentation updates.\n  - Many cleanups and small improvements.\n  - Support the latest libcamera version. (#1435)\n\n\n# PipeWire 0.3.32 (2021-07-20)\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n## Highlights\n  - Real-time priority handling for threads was reworked. Freewheeling\n    will now drop RT priorities to avoid being killed.\n  - Problems with filter chains and echo-cancel being linked in a loop\n    was fixed.\n  - alsamixer should now be able to see the mixer controls again.\n  - JACK has seen some latency reporting improvements that make Ardour\n    report latencies correctly.\n  - Many bugfixes and improvements.\n\n\n## PipeWire\n  - Fix a bug in the neon audio resampler code.\n  - There is now a node.link-group property to relate linked streams.\n    this can be used to track the dataflow with coupled streams.\n  - Fix a crash when recalculating latency on a destroyed port. (#1371)\n  - Filter chains and other modules that create streams can now also\n    be added to the daemon config itself. (#1309)\n  - Fix some potential deadlocks in timerfd. (#1377)\n  - Feedback links are skipped when recalculating latency to avoid\n    loops.\n  - The dummy driver and null-sink now stop the timerfd when following\n    another driver instead of generating useless graph wakeups.\n  - rt.limit was increased to 2 seconds. Some applications got killed\n    because they run lengthy code in the Real-Time thread. (#1344)\n  - Fix s24_32 to float, it was not sign extending properly. (#1393)\n  - The performance of the feedback loop check algorithm was improved\n    a lot, making complex graphs start much much faster.\n  - The zeroconf publish module now doesn't republish nodes every time\n    the volume changes. (#1406)\n  - A potential memory corruption error has been fixed in the loop\n    that could cause random crashes.\n  - Mempools can now be created from multiple threads at the same\n    time.\n\n## media-session\n  - Loops in coupled streams are now avoided. (#1394)\n  - Port changes for inactive profiles are ignored now by the\n    default-route module. (#1403)\n\n## ALSA\n  - Make sure that alibpref is not part of the device node name because\n    it is random. (#1362)\n  - Fixed an off-by-one that could cause midi events to end up with a\n    wrong timestamp and thus being discarded by some apps. (#1395)\n  - Fix some memory leaks when destroying a card object.\n\n## JACK\n  - Fix some invalid cycle wakeups that could cause JACK application to\n    run with a 0 buffer size. (#1386)\n  - JACK can now use rtkit to manage realtime priorities on threads.\n  - The Real-time priority is dropped when entering freewheel mode to\n    make sure we don't get killed when using too much CPU.\n  - jack_recompute_total_latencies() is now implemented, fixing the\n    latency reporting in Ardour. (#1388)\n  - Fix some overflows in time calculations.\n  - Ensure frame_rate in position is never 0.\n  - Graph callbacks are now emitted as well.\n\n## Bluetooth\n  - RTP payload type is now set correctly for aptX, LDAC and SBC, which\n    should improve compatibility with devices that care about this.\n\n## PulseAudio server\n  - There is now a quirks database to deal with bad clients. The database\n    is builtin but can be made external later.\n    - Teams is now lied to and told all sink/sources use s16 samples to make\n      it show all sinks/sources.\n    - Firefox is forced to remove the DONT_MOVE flag on capture streams so\n      that you can move firefox streams with other tools.\n  - The UNDERFLOW warnings are now made into info log messages to not\n    spam the log too much. Many application just let things underrun\n    and PulseAudio did not warn about this either. (#910)\n\n## ALSA plugin\n  - The alsa plugin now uses the right metadata for finding the default\n    source and sink, which makes the volume controls reappear. (#1384)\n\n## Other\n  - Cleanups in pulse-server and pipewire.\n  - Documentation additions.\n\n# PipeWire 0.3.31 (2021-06-28)\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n## Highlights\n  - Fixes for alsa-lib 1.2.5\n  - New pulseaudio modules: module-avahi-zeroconf,\n    module-pipe-source, module-roc-sink, module-roc-source.\n  - JACK has seen massive stability improvements. Locking\n    and correctness wrt to callbacks has been reworked. Also\n    thread priorities have improved.\n  - Handle various crashes and lockups when running out of file\n    descriptors.\n  - Bluetooth now uses a hardware database to disable\n    non-working features on listed devices.\n  - Scheduling quantum and rate can now be changed dynamically\n    with pw-metadata.\n  - Many bugfixes and improvements.\n\n\n## PipeWire\n  - Improve cleanup of context in error cases.\n  - There is now a pw-test framework for improved unit tests.\n  - Improve property serialization to valid JSON.\n  - Fix some macros to work with better with coverity.\n  - Metadata permissions are checked now. Clients need the\n    M permission on an object to be able to set metadata for\n    it.\n  - The core metadata object will now remove metadata for\n    removed objects, the implementor does not need to worry\n    about that anymore.\n  - Audioadapter will now follow the rate of the graph with\n    the resampler adjusting itself dynamically.\n  - Core now has a metadata implementation helper. A context\n    will expose a metadata with settings that can be changed\n    at runtime. This can be used to change the loglevel or\n    graph quantum and samplerate on the fly.\n  - An infinite loop was fixed in the audio converter.\n  - Handle out-of-fds more gracefully. Handle truncated\n    control data by dropping the client connection.\n  - Fix profiler crash with many streams.\n  - Improve latency handling in pw-filter. There is now a\n    default handler and a ProcessLatency parameter to simplify\n    latency reporting.\n  - Latency reporting was improved in devices and streams.\n  - And example sink/source was added.\n\n## ALSA\n  - hardware mute and volume are now properties on the\n    Route param to make things easier.\n  - More fixes for alsa-ucm 1.2.5.\n\n## Tools\n  - spa-json-dump now properly encodes string and keys.\n  - pw-dump now shows the correct subject of the metadata.\n\n\n## PulseAudio server\n  - Ensure the node.description is set, some applications\n    crash otherwise (TeamSpeak).\n  - Module loading and unloading was improved.\n  - module-avahi-zeroconf was implemented.\n  - module-pipe-source was implemented\n  - module-roc-sink and module-roc-source was implemented.\n  - The maximum amount of connections has been limited to 64,\n    like pulseaudio.\n  - Handle out-of-fds more gracefully.\n  - Fix overflow of read/write pointers.\n  - Source and sink state are now decoupled from the monitor\n    state and will report IDLE when not playing anything.\n\n## media-session\n  - Port switching should now happen to/from the port that\n    actually changed.\n\n## JACK\n  - The locking was reviewed. All callbacks are now emitted\n    from the PipeWire thread with the lock released and\n    the process function will be disabled for the duration\n    of the callback. This ensures that no two callbacks are\n    called at the same time.\n  - Improve internal consistency and try to never call callbacks\n    with invalid objects.\n  - Monitor port can now be accessed with system:monitor_%d\n  - client threads are now created with SCHED_FIFO and module-rt\n    is used to create the other RT threads. This should avoid\n    SIGKILL from RTKit in some cases.\n\n## Bluetooth\n  - Various bugfixes to improve connections to devices.\n  - Handle delayed UUID connection.\n  - There is now a hardware database that can disable features\n    in listed devices.\n  - Use libusb to detect availability of mSBC.\n\n## ALSA\n  - The virtual device name can now also contain a media role.\n\n\n# PipeWire 0.3.30\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\nThis is a quick emergency release to fix some severe\nproblems with the previous release.\n\n## Highlights\n  - Recording from a monitor port should work again.\n  - JACK applications should now be more stable again.\n  - Freewheeling should not lock up anymore.\n  - Fix lockups in many pulseaudio apps.\n  - module-echo-cancel was implemented in pipewire-pulse\n  - Many other stability fixes.\n\n## PipeWire\n  - Improve module path logic.\n  - Improve logger formatting\n\n## PulseAudio server\n  - Make sure to pass 64 bits values for time on ARM 32 bits to\n    avoid protocol errors.\n  - Avoid a crash when unloading module-combine-sink.\n  - Avoid overflow in requested bytes, resulting in stalled\n    audio.\n  - Implement module-echo-cancel.\n\n## Bluetooth\n  - Handle latency parameters instead of failing.\n\n## JACK\n  - Fix locking in many places to avoid deadlocks and crashes.\n  - Fix port rename.\n  - Stop freewheeling correctly instead of deadlocking.\n\n# PipeWire 0.3.29\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n## Highlights\n  - Latency reporting is now implemented.\n  - Many documentation updates and cleanups.\n  - module-combine-sink was added to PulseAudio server.\n  - Better handling of multichannel input profiles.\n  - Fix 100% volume issue when monitor suspends or profile\n    changes in some cases.\n  - Bugfixes and crashes\n\n\n## PipeWire\n  - A new module-rt was added to acquire real-time scheduling\n    privileges without using RTKit.\n  - Documentation fixes and updates. Docs are now using a\n    custom theme.\n  - There is now a MANDATORY flag on properties that influence\n    how properties are filtered.\n  - Filter-chain now parses the LADSPA_PATH correctly when it\n    contains a colon separated list.\n  - Move `#pipewire` IRC channel to oftc.net.\n  - Fix an error where param changes were not emitted in all\n    cases.\n  - Implement Latency reporting. Latency values are propagated\n    through the graph so that each node knows the latency to\n    the output/input device. Synchronization in pw-stream has\n    been updated to use this.\n  - Some more upmix cases are added so that LFE, SIDE and REAR\n    can be generated from a mono channel as well.\n  - pw-stream and pw-filter will now emit the process event from\n    the real-time thread in a safe way, potentially avoiding some\n    of the harder to debug crashes.\n  - Fix potential stack overflow with serialize_dict.\n  - Add PIPEWIRE_NO_CONFIG to run without custom config files.\n  - The WebRTC echo canceler was added. Next versions will\n    integrate this better.\n\n## PulseAudio server\n  - module-combine-sink was implemented.\n  - Fix some segfaults when DBus connections fail.\n  - Support for listening on IPv6 was added.\n  - Fix a bug where many flushes could result in requests for too\n    much data from the client, causing sync, latency and garbled\n    sound problems after many seeks.\n\n## ALSA\n  - Also probe input paths for multichannel mappings. This makes\n    multichannel input ports show up in more cases.\n  - Fix headphones/front volume issue on some cards.\n  - Fix max volume issue when profile changes.\n  - Fix issue with UCM local config that was not available when the\n    device was opened in the server but the UCM was opened by the\n    session manager. Fixes alsa 1.2.5 compatibility.\n\n## JACK\n  - Implement latency reporting with the new Latency params.\n\n# PipeWire 0.3.28\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n## Highlights\n  - Freewheeling was implemented. This makes it possible to\n    export projects in ardour.\n  - A new powerful filter-chain module was added that can\n    be used to created all kinds of filter-chains from ladspa\n    and builtin plugins.\n  - Many more pulseaudio modules are now implemented:\n    module-ladspa-sink, module-ladspa-source, module-pipe-sink,\n    module-tunnel-sink, module-tunnel-source,\n    module-zeroconf-discover\n  - Fix a bug where devices would not appear after logout/login.\n  - Fix a bug where the volume was reset to 0 and devices would\n    have no audio.\n  - Config files are now installed in the data dir, system\n    overrides in /etc/pipewire and $HOME are checked first.\n\n\n## PipeWire\n  - Implement freewheeling for JACK clients\n  - Add filter-chain module that can be used to construct\n    arbitrary graphs from ladspa and builtin plugins.\n  - Add new property to easily set algorithm params\n  - Add module-pulse-tunnel to tunnel audio to and from\n    a PulseAudio compatible server.\n  - Add a avahi zeroconf discover module, create pulse-tunnel\n    when PulseAudio devices are announced.\n  - Config files are now installed in the data dir, system\n    overrides in /etc/pipewire and $HOME are checked first.\n  - Applications now have their monitor ports named with the\n    \"monitor\" prefix to avoid confusion with the output ports.\n  - LICENSE clarifications.\n\n## GStreamer\n  - fixes to the pipewiresink plugin.\n\n## SPA plugins\n  - Fix a bug where the volume was reset to 0\n  - Add events to dbus plugin. This can be used to detect dbus\n    disconnects.\n\n## Media-session\n  - Handle dbus disconnect.\n  - Handle device reservation errors.\n\n## PulseAudio server\n  - Implement module-ladspa-sink and a new PipeWire-only\n    module-ladspa-source\n  - Implement module-pipe-sink\n  - Implement module-tunnel-sink and module-tunnel-source\n  - Fix a bug with module argument parsing\n  - Implement module-zeroconf-discover\n\n## ALSA plugin\n  - improve error handling\n\nPipeWire 0.3.27\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n- Highlights\n  - Fix bug that caused bluetooth devices to stop working.\n  - Fix session-manager crash when switching users caused by\n    the DBus plugin cleanup errors.\n  - Improve volume handling of monitor ports.\n  - Fix GStreamer v4l2 support.\n  - Implement module-remap-sink and module-remap-source in\n    pipewire-pulse.\n  - More fixes and improvements.\n\n\n- PipeWire\n  - Move the loopback code into a module. Use this in pw-loopback\n    and pipewire-pulse. Fix some cleanup crashes.\n  - A dummy echo-cancel module was added. Later versions will\n    include the webrtc echo-canceler.\n  - State files don't have the X permission anymore.\n  - Move i18n core into a private header file.\n  - Stream can now advertise properties and receive property\n    updates.\n  - Fix an issue where the wrong index was used to address a port.\n    It caused Bluetooth devices to stop working.\n\n- SPA plugins\n  - Only do LFE filtering on channels we created.\n  - Improve name and description of devices.\n  - Improve cleanup in DBus connections and sources to avoid crash\n    when destroying.\n  - Improved volume handling. Hardware, Software and Monitor\n    volumes are now properly separated and handled.\n  - Support for S8 and S8P formats was added.\n\n- Tools\n  - pw-cli can now also create Struct from JSON arrays.\n\n- Session-manager\n  - The session manager can now also create passive links. This\n    makes is possible to suspend effect chains together with the\n    sinks when not in use.\n  - Match rules now check the complete property value instead of\n    only the start.\n  - Handle multiple pending param enumerations, take only last\n    result. This fixes some volume update issues.\n\n- GStreamer plugins\n  - GStreamer plugins now advertise handling DMABUF explicitly. This\n    is currently the only way to avoid a memcpy for v4l2 devices.\n\n- Device support\n  - sync ACP with pulseaudio, merge upstream patch instead of our\n    hack to workaround missing duplex devices.\n  - V4l2 devices don't expose their fd anymore. Previously the fd\n    and mmap offsets were passed to the client to access the buffer\n    memory but that could create security issues.\n\n- Bluetooth\n  - Don't unregister the profiles on shutdown because this can cause\n    delay, just close the dbus connection.\n  - Bluetooth devices now try to use the global samplerate from the\n    graph.\n\n- PulseAudio server\n  - Implement remap-sink and remap-source modules using the\n    new loopback module.\n\nPipeWire 0.3.26\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n- Highlights\n  - I18n support, with translations merged from PulseAudio.\n  - New pw-link tool.\n  - Many Bluetooth improvements, support for hardware volumes.\n  - Support for 64 channel devices.\n  - Stability fixes and improvements.\n\n\n- PipeWire improvements\n  - The link factory can now also make links between nodes and\n    ports by name so that it can be used in scripts.\n  - Add module-protocol-simple that can stream raw audio on a\n    socket.\n  - Added i18n support. Merge PulseAudio translations for the ACP\n    library so that we don't cause regressions.\n  - Support more than 19 channels in the channel mixer.\n    This makes all channels usable on 32 and 64 channel cards.\n  - Detect if we're running in a VM and allow for tweaking some\n    settings such as the max-quantum to make things work better in\n    VMs.\n  - Fix a potential crash when connecting a client and updating\n    permissions.\n  - Fix a potential crash when trying to link incompatible ports.\n  - Lingering links in error will now be destroyed automatically.\n\n- Tools\n  - Added new pw-link tool to list and monitor ports and to\n    list, monitor, create and destroy links between them.\n  - pw-cli can now also list params by name.\n  - pw-dump now outputs Spa:String:JSON types in metadata as properly\n    parsed and formatted JSON so that tools can parse the\n    metadata values using a JSON parser.\n\n- Session-manager\n  - Add logind support. The bluetooth monitor can only be started\n    for one user at the time, so use logind detect active seats.\n  - ALSA icon names were improved to match what PulseAudio does.\n  - Improve the bluetooth icon name. Also use the device alias\n    as the device description, like PulseAudio.\n\n- Device support\n  - When devices become inaccessible, they are now removed from\n    the PipeWire graph.\n  - Fix datatype selection for buffers in v4l2 and libcamera.\n\n- Bluetooth\n  - Various memory leaks and crashes are fixed.\n  - Added support for AVRCP hardware volume.\n  - Added support for HSP/HFP hardware volume.\n\n- PulseAudio server\n  - Fix module-loopback connections to monitor ports.\n  - Implement module-native-protocol-tcp.\n  - Handle nodes and streams with > 32 channels. The PulseAudio\n    API only supports up to 32 channels so only make those 32\n    first channels available with the PA API.\n  - Implement module-simple-protocol-tcp.\n  - Improve events emitted by the server.\n  - Improvements to channels and channel_map properties on\n    modules. one can imply the other and they should match when\n    both given.\n  - null-sink will now have their volume work correctly by\n    default.\n\n- JACK\n  - JACK development files can now optionally be installed.\n\nPipeWire 0.3.25\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n- Highlights\n  - Many stability improvements.\n  - Plug fd leak in flatpak detection\n  - add pw-loopback tool and support module-loopback\n  - volume restore for virtual sinks/sources or other sink/sources\n    without hardware volume.\n  - Fix cracks and pops in audio capture.\n  - Many bluetooth improvements and compatibility fixes.\n\n\n- PipeWire improvements\n  - Hex encode invalid SEC_LABEL properties to avoid generating\n    invalid json.\n  - Small fixes to how nodes are started to avoid crashes.\n  - Make sure ports are only scheduled after being fully\n    negotiated to avoid crashes.\n  - Implement coverity into CI, fix some bugs detected by\n    coverity.\n  - Plug leak in flatpak detection.\n  - Fix crash when removing globals in some cases.\n  - Fix crash because the mixer info was not removed from a\n    port in all cases.\n  - Add PIPEWIRE_AUTOCONNECT environment variable to disable\n    stream autoconnect. Also add a config option to disable\n    autoconnect.\n  - Improve wildcard in format helpers.\n  - Add env variable to disable journald logging.\n\n- Tools\n  - Add a new pw-loopback tool to loop a capture device to a\n    playback device.\n  - Display localized strings correctly in pw-top\n  - Add some more options to pw-dot\n\n- Session-manager\n  - When a new node is configured and some stream have this\n    as the default target, move them to it.\n  - Fix some crashes.\n  - Implement volume restore on nodes without routes. This makes\n    it possible to restore volume on purely software nodes like\n    null-sinks.\n  - Also try to suspend errored nodes so that they may leave the\n    error state and be reused again.\n  - Break endless link loops when something went wrong.\n\n- Device support\n  - Fix monitor volumes, they are now separate from the hardware\n    volume.\n  - Fix cracks and pops in alsa capture caused by mismatch between\n    resampler and capture source.\n  - Add start-delay config option to alsa sink.\n  - Ensure the PipeWire midi ports start from a higher number so\n    that the lower port numbers are available to apps as before.\n\n- Bluetooth\n  - source devices are now removed when idle\n  - Support using pipewire as Audio Gateway.\n  - LDAC encoding quality can be configured now\n  - Implement codec switching for HFP\n  - Implement codec switching with new device property.\n  - Improved stability and compatibility\n  - Autoconnect device profiles at startup\n  - Add AAC bitrate mode configuration\n  - Make it possible to use an A2DP source as an input device. You\n    can then use your phone as an A2DP microphone, for example.\n  - Remove battery reporting when RFCOMM connections is closed.\n\n- PulseAudio server\n  - Add some workarounds for Blueman\n  - Set correct errno values, fixes a hang in load-module of a\n    non-existing module\n  - Try to not send inconsistent information to clients.\n  - Fix some crashes.\n  - Add support for the new send-message API, use this to\n    switch bluetooth codecs.\n  - Fix draining by making sure we are started.\n  - Handle 0 sink and source as the default sink/source.\n  - Implement module-loopback\n\n- JACK\n  - Fix some memory leaks when closing a client\n  - Add self-connect config option to limit where clients\n    can connect themselves.\n  - Don't crash when apps call _port_get_buffer() on a\n    port that is not their own but simply return NULL.\n    This fixes a crash in Ardour6.\n  - Improve client added/removed callbacks. Sometimes it would\n    emit a client remove when there were still ports for the\n    client.\n  - make sure midi port names are stable across reboots.\n\nPipeWire 0.3.24\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n- Highlights\n  - Many JACK midi improvements and device support.\n  - Fixes in gnome-control-center default sink/source handling.\n  - Many small performance improvements in alsa device handling\n    and latency. There should also be less cracks/pops and xruns\n    now.\n  - Fixes for gnome-control-center default sink/source handling.\n  - More bluetooth compatibility improvements.\n\n\n- PipeWire improvements\n  - Implement simple upmixing.\n  - Disable the resampler when not used. This improves latency\n    and CPU usage.\n  - Handle max-quantum on devices and try to not make the quantum\n    larger than the device buffer size.\n  - Improvements to how nodes and links are activated. It should\n    now result in less xruns and cracks/pops.\n  - meson uses the feature options everywhere now.\n  - Handle volume remap in the channelmixer. This fixes the channels\n    on multichannel devices.\n  - Try to escape invalid JSON string characters.\n  - Keep better track of changed parameters in audioconvert.\n  - Improve config files, make arrays where needed.\n  - Respect NO_COLOR where possible\n  - Support in-place config file parsing to avoid allocations and\n    improve startup performance.\n  - There is now a config option to enable non-power-of-two quantums.\n  - Preliminary support for upmixing and generating LFE channels.\n\n- Session-manager\n  - Default nodes are not stored as JSON in the metadata. This\n    is more readable and introspectable.\n  - More default-nodes and default-routes improvements. Port\n    switching should work better now.\n  - Wait until all devices are scanned before linking clients.\n  - Fixes some crashes.\n  - Sinks (monitors) can now be set as default sources.\n\n- Device support\n  - Fix startup timers for alsa devices.\n  - Improve timers in alsa when quantum changes. It should cause\n    less xruns and cracks.\n  - Fix UCM setup of capture devices.\n  - Only disable IRQ in alsa when not batch. For batch devices the\n    hw pointers are updated each IRQ so we need to keep them enabled.\n    This massively improves latency on USB batch devices to the same\n    level as JACK (with small enough period size).\n\n- Bluetooth\n  - Improvements to profile switches.\n  - Improvements to volume handling.\n  - Fixes for A2DP sources\n  - Add support for battery status when available.\n  - Many other small improvements.\n\n- PulseAudio server\n  - Handle NULL in set_default_sink/source to clear the default.\n  - Implement a workaround for gnome-control-center when setting\n    the default sink/source. It also sets the target in\n    stream-restore to the new default. This fixes moving streams\n    in gnome-control-center.\n  - Fix some races by replying to some requests after the operation\n    completed.\n  - Prefer formats of the extended format API.\n  - Create a pid file on startup to improve compatibility with apps\n    that look for it.\n  - Capture streams can now be moved to monitors with pavucontrol.\n  - Fixes for crashes.\n\n- JACK\n  - jack clients can now connect to the 'default' server.\n  - Move midi ports back to the midi client.\n  - Only mark midi hardware ports as terminal/physical.\n  - Use the same midi names as a2jmidid.\n  - match system ports in get_ports.\n  - Improve compatibility with some apps that require a\n    fixed latency.\n  - Beginnings of the libjackserver implementation.\n\n\nPipeWire 0.3.23\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n- Highlights\n  - Fixes for some critical bugs in last release.\n  - Fix bug where audio was not drained properly at the end of\n    playback, causing repeating sound.\n  - Profile and route switching was improved and should mimic\n    more what pulseaudio did.\n  - Various fixes for xruns in capture and playback.\n  - Bluetooth now supports delay adjustment and various other\n    improvements.\n  - The pulseaudio server now correctly identifies AC3 and DTS\n    streams and returns a not supported error instead of playing\n    static.\n  - Multichannel support was improved in the alsa plugin and\n    the channel mixer. Channels should now play on the right\n    speakers in all cases.\n\n- PipeWire improvements\n  - Small fixes and improvements in JSON parsing and encoding.\n  - Improvements to param handling in audioconverter. It would\n    previously not always notify of changes.\n  - Avoid updating some properties that we use internally such\n    as the object id and the node.id.\n  - log.level in the config files is now actually used.\n  - the PIPEWIRE_LATENCY env variable should always override\n    any application settings in filter/stream/jack.\n  - The config file can now contain filer and stream properties\n    to, for example, control the resampler, mixer and latency.\n  - Add sandboxing to the systemd services\n  - Various FreeBSD fixes.\n  - Improve draining and a way to exit the drain state as well.\n  - Many multichannel fixes. Channel remapping should now be\n    correct.\n  - Fix bug with repeating audio at the end of playback because\n    the drain in the resampler was not draining all channels.\n  - RTKit default rt.prio has been increased to 88. This will\n    likely still be clamped to 20 until distros increase the\n    max priority.\n\n- Session-manager\n  - Don't try to switch to Pro Audio profile, this should be\n    a user choice only.\n  - Don't crash when metadata was disabled such as when not\n    using the audio features of pipewire.\n  - Rework the profile and route handling.\n  - Add systemd unit files for the media-session\n  - Device names should now also have sane names so that tab\n    pactl completion works on them.\n\n- Device support\n  - Fix ALSA format enumeration in more cases. Use the channels\n    and rate as a filter.\n  - Make sure the graph doesn't ever use buffers larger than\n    the alsa device buffer size or we get xruns.\n  - Tuning of the alsa device timeout handling and dynamic\n    resampler. There should now not be any xruns when streams\n    appear and disappear or when the quantum changes.\n  - Fix bug in alsa device when reassigning to a new driver,\n    in some cases the dynamic resampler was not activated and\n    things would drift out of sync and fail.\n  - Fixes in quantum changes for ALSA capture and how the\n    resampler is drained and fed with the new samples.\n\n- Bluetooth\n  - Delay adjustment has been implemented now. Bluetooth\n    devices should now be more synchronized with video due\n    to proper delay reporting. Because BT delays can be\n    large, it can cause hickups in some players.\n  - Fix volume in bluetooth devices.\n  - Codec switch improvements.\n\n- PulseAudio server\n  - Latency offset adjustment is now implemented and functional\n    for bluetooth devices. It is not working for alsa devices\n    yet.\n  - Handle unsupported formats. Previously we would accept encoded\n    formats and play noise. This fixes AC3 playback in vlc.\n  - Move some of the configurable parameters to the config file.\n  - Fix a fatal use after free when playing samples\n  - Improve module handling. loaded modules now show up in the\n    list of modules and can be unloaded. This also prepares the\n    core for more module implementations later.\n\n- ALSA plugin\n  - Fix drain with very large buffers, we need to manually start\n    the stream before draining.\n  - Fix the channel layout handling.\n  - Improve compatibility with apps that expect the poll to only\n    return when there is activity.\n  - Fix drain for capture\n\n- JACK\n  - Add a config option to shorten and filter client names\n  - Increase the length of the client name size and make sure\n    we don't exceed the allocated size.\n  - We now include our own jack header files so we can build\n    without depending on another jack-devel package. We don't\n    yet install the headers or provide pkgconfig files.\n\n\nPipeWire 0.3.22\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n- Highlights\n  - Per client config files replace the module-profiles. It's\n    now possible to tweak settings and load custom modules.\n  - Pro Audio card profile support. You can now select the\n    Pro Audio profile and have raw device access with the\n    maximum number of channels and no mixer controls. This is\n    the usual setup for managing high end Pro Audio cards.\n  - Many fixes and improvements in the JACK library to make\n    devices look and integrate better.\n  - Many bluetooth improvements. Playback should be more\n    reliable and better synchronized. Support for the HFP HF\n    profile.\n  - Small fixes and improvements all over the map.\n\n- PipeWire improvements\n  - Add support for restrictions requested by a client. This\n    makes it possible to implement Flatpak policy for emulated\n    PulseAudio clients as well.\n  - Fix removal of params in objects. Previously they would not\n    be removed from the cache.\n  - Remove mlock warnings by default. There is an option to enable\n    them again if you want to check if your system is optimized.\n  - Remove LimitMEMLOCK lines from the service files. They can\n    only lower the system settings and are thus not useful.\n  - Implement per-client config files. Each pipewire client will\n    now read a config file that you can use to configure the\n    context of the client.\n  - Implement state and config load/save in pipewire. This is used\n    by the session manager or other apps.\n  - Make an option to disable dbus support.\n  - Add tool to convert pipewire config to JSON.\n\n- Session-manager\n  - Give all permissions to Manager flatpak apps. In the future\n    we will use the Permission store to remember user settings.\n  - Improvements to default audio/sink handling.\n  - Add option to configure device suspend time.\n  - Small fixes in route handling.\n\n- Device support\n  - Complain when ACP profile files are not found and use\n    a fallback in order to get something working.\n  - Add volume support to monitor ports.\n  - Fix resume from suspend for ALSA in more cases.\n  - ALSA ACP cards now have a Pro Audio profile that exposes\n    the raw card devices.\n\n- Bluetooth\n  - Enable A2DP delay reporting. This improves audio/video sync\n    when playing audio over bluetooth.\n  - Fix stuttering in A2DP source\n  - Tweak buffer size and latency settings to avoid stuttering\n  - More work on HSP and HFP support\n  - Fix initial profile configuration\n  - Add HFP HF support\n\n- PulseAudio server\n  - Small tweaks in capture packet size to avoid crashes in some\n    apps.\n  - Detect Flatpak apps and requests the flatpak permissions from\n    the session manager. This means that Flatpak pulseaudio apps\n    will now run with reduced permissions.\n\n- ALSA plugin\n  - Reduce min buffer size in the plugin for lower possible\n    latency.\n\n- JACK\n  - implement some missing methods to make qjackctl work again.\n  - Use the context data thread instead of making our own. This\n    fixes the issue where the data thread was not given RT\n    priority correctly.\n  - Pass extra jack flags around in port properties. This makes\n    CV ports in carla work.\n  - Many tweaks to the port names and aliases. Unwanted characters\n    are filtered out, giving better names to jack apps. Default\n    device names are now equal to those seen in pulseaudio apps.\n  - Add an option to make a separate client for the monitor ports\n    of a device. This makes it more usable in apps.\n  - add support for system:playback_N and system:capture_N port\n    names for apps that hardcode these port names.\n\n\nPipeWire 0.3.21\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n- Highlights\n  - Many PulseAudio compatibility fixes. Handling of corked\n    streams, the prebuf setting, seek modes and stream flags\n    are now implemented correctly.\n  - Ports and Profiles are now managed by the session manager\n    and can save and restore previous settings.\n  - ALSA device handling has been tweaked for maximum\n    compatibility at the expense of latency. There are tuning\n    options in the config file.\n  - Improved Bluetooth support. HSP is disabled by default\n    because it is old and deprecated and in some cases causes\n    conflicts with the newer HFP profile. Codec switching is\n    now implemented as well.\n  - PipeWire accepts donations with liberapay now.\n\n- PipeWire improvements\n  - Improve draining in pw-stream.\n  - pw-stream now uses busy metadata by default. This makes sure\n    that no writer can write to buffers when readers are still\n    busy.\n  - Fix handling of empty array/choice instead of failing.\n  - Fix crashes when creating properties from empty strings.\n  - Make it possible to pass an array to module-access\n    access.allowed variables\n  - Fix small bug in argument parsing in pw-cat\n\n- Session-manager\n  - Restore route volumes in all cases, also when switching\n    routes.\n  - Use a default route volume for unknown routes instead of\n    letting the system decide on a default.\n  - Improve profile handling. Don't try to restore unavailable\n    profiles. Implement the profile switching in the session\n    manager now.\n  - Fix handling of Virtual sources as defaults.\n  - Handle port switching in the session manager. Implement\n    save and restore of default ports per profile.\n\n- GStreamer\n  - Fix a crash with zero SPA_PARAM_BUFFERS_size\n\n- Device support\n  - v4l2-source will now respect the requested memory types.\n  - ALSA buffering has been tweaked. USB devices should have\n    less XRuns by default. Parameters can be tweaked to\n    decrease the latency on capable devices. Also fix a case\n    where a quantum change would cause an xrun.\n  - Fix mute in bluetooth devices\n  - bluetooth devices are not paused in idle anymore for\n    improved compatibility.\n  - Codec switching for bluetooth is implemented along with\n    config options to select the codecs manually.\n  - HSP for bluetooth is now disabled by default. Most devices\n    support the newer HFP profile and some devices fail when\n    both are available.\n  - Reduce the amount of events the ALSA plugins emit by bundling\n    them.\n\n- PulseAudio server\n  - Implement the suspend command\n  - Fixes volume in sample info\n  - Fix playback of samples, sometimes samples would be clipped\n    short. Also implement the target sink for the sample.\n  - Use rate match to feed samples. This way the latency can\n    be kept to a minimum.\n  - Latency has been tuned some more, more closely emulating\n    pulseaudio behaviour.\n  - Improve default sink/source handling. Make sure all events\n    are sent correctly when defaults change.\n  - Handle underrun better without causing sync issues. Make sure\n    to pause in corked state.\n  - Implement rewind due to seeks, fixes GStreamer seeking.\n\n\nPipeWire 0.3.20\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n- Highlights\n  - Latency was reduced in ALSA and PulseAudio and time\n    reporting has improved a lot.\n  - Bluetooth now has a native HFP backed, SBC XQ and\n    mSBC support.\n  - Many bugfixes and improvements, improved device\n    support.\n\n- PipeWire improvements\n  - pw-dump can now dump all objects such as Endpoints\n  - pw-dump has a -m option to monitor changes\n  - pw-dump can now dump metadata\n  - pw-stream can now use the rate-match io to exactly\n    produce the required number of samples for the\n    current cycle. When using this feature, a stream can\n    achieve the same low-latency as pw-filter.\n  - spa-acp-tool can now load a custom profile-set and\n    correctly parses the volume updates\n  - There is now a nofail option when loading modules\n  - The connection has been made reentrant to fix some\n    strange random problems with metadata.\n  - Turn some errors into warnings or simply info.\n  - Executables are now built with PIE\n  - S24OE formats should work now (MAudio FastTrack Pro)\n  - Remove mlock warnings. Add support for mlockall with\n    a config option.\n\n- Session-manager\n  - There are now config files for bluez and v4l2 modules\n  - Improve ALSA device and node properties\n  - Bluetooth devices have better properties now.\n  - The default device routing has been improved.\n\n- Device support\n  - Port priorities are updated for UCM devices\n  - ACP devices notify change in routes in all cases\n  - There is now RW support in ALSA devices to increase\n    compatibility.\n  - Many improvements to Bluetooth. SBC XQ support can now\n    be enabled with a config option. mSBC can be enabled\n    with an option.\n  - Bluetooth devices not expose Routes so that they look\n    more like how PulseAudio handles them\n  - Gracefully handle missing profile-sets\n  - There is now a native HFP backend\n  - Improve card names in some cases.\n  - pause-on-idle is now disabled for ALSA devices. This can\n    reduce pops and clicks when the device is stopped.\n\n- ALSA plugin\n  - Use rate-match to reduce the latency\n  - Implement a _delay() function to get smoother timestamps.\n  - Fix property parsing. Fixes volume changes in alsamixer.\n\n- PulseAudio server\n  - Use rate-match to reduce the latency. This also reduces\n    the buffering in audioconvert and improves timestamp\n    reporting.\n  - Implement rate changes now that we have rate-match\n    support.\n  - pactl stats will now work\n  - Fix excessive memory usage when a capture client doesn't\n    read fast enough.\n\nPipeWire 0.3.19\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n- Highlights\n  - Startup after login should be fixed now with inotify\n    used to wait for permissions.\n  - Channels should be mapped correctly now.\n  - Many bluetooth improvements in LDAC, AptX-HD. AAC was\n    also added. Headsets should work better now.\n  - pipewire-libpulse was removed. It is now completely\n    replaced by pipewire-pulse.\n  - Fix a crasher bug in pipewire-pulse and some memory leaks.\n  - Fix a bug with feedback loop that would cause 100% CPU.\n  - A new pw-top tool to display real-time graph performance.\n  - The example session manager now has config files.\n  - The config file format was changed to use the SPA JSON\n    tokenizer. This makes it more flexible and extensible.\n\n- PipeWire improvements\n  - Fix debug of id in format channels\n  - Audioconvert should now remap channels correctly in all\n    cases.\n  - Feedback loops were not scheduled correctly and would\n    cause 100% CPU usage.\n  - Small improvements to the profiler to also log incomplete\n    graph status.\n  - a new tool pw-top was added that prints real-time performance\n    stats of the graph.\n  - the rtkit module now sets the nice level to -11\n\n- Session-manager\n  - The session manager would sometimes link dont-reconnect\n    nodes to another node, which would leak monitor streams in\n    pipewire-pulse.\n  - The session manager now has configuration files. Config files\n    can also be placed in the user home directory to make custom\n    configurations.\n  - The session managers now creates unique device and node\n    names for alsa and v4l2 devices.\n\n- Device support\n  - Many improvements in Bluetooth codecs, LDAC stuttering,\n    AptX-HD negotiation, LDAC ABR support\n  - Bluetooth supports AAC audio now.\n  - Many fixes to Bluetooth SCO transport used in headsets.\n  - inotify support in device monitors\n  - ACP was synced with the latest pulseaudio code\n  - Fix a bug in enumeration of device ports.\n\n- PulseAudio server\n  - seek flags and offset are now supported, making gstreamer\n    pulse elements work better.\n  - Fix a crasher bug in pipewire-pulse, we sometimes would\n    write too much to the ringbuffer\n  - Fix some memory leaks in error cases.\n  - Fix handling of NULL string to locate default sink/source\n\n- JACK layer\n  - Ports can also be found with the aliases now, making\n    qjackctl work in more cases.\n\n\nPipeWire 0.3.18\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n- Highlights\n  - More work in the PulseAudio server. It should be compatible\n    with more applications.\n  - Bluetooth now support extra codecs such as AptX/HD and LDAC.\n  - Support for virtual sources and sink was improved a lot.\n  - Added a new pw-dump tool to dump the objects in JSON formats\n    and for filtering them with tools like jq.\n  - Many more stability fixes and improvements.\n\n- PipeWire improvements\n  - Silence some harmless warnings\n  - pw-cli can now be used to set parameters.\n  - Streams now perform the correct channel mapping when linked\n    to non-standard multichannel devices. Previously channels\n    would get swapped.\n  - port, node and device params are now cached in the server.\n    This avoids opening and closing devices whenever some client\n    enumerates formats, which improves performance a lot,\n    especially in cases where opening a device is slow.\n  - Add a command to keep a device open during negotiation. This\n    is used to enumerate and set a format while opening the\n    device just once, improving performance.\n  - The null-sink scheduling was fixed.\n  - A memory corruption bug was fixed in format conversion, this\n    could cause crashes, silent channels or other undefined\n    behaviour.\n  - There is now a simple JSON parser.\n\n- Session-manager\n  - Settings files are now stored in JSON. With the json parser\n    this is easier to parse and extend\n\n- Device support\n  - Bluetooth now supports additional codecs: LDAC, AptX and\n    AptX HD. LDAC is known to not work very well yet.\n  - ALSA devices will now default to the max supported channels\n    if nothing else is specified. This makes it possible to use\n    8+ channel cards with the alsa-pcm module, which is not\n    supported with the default alsa-acp module.\n  - Enable mSBC support in oFono.\n  - Add an option to disable hardware mixers\n  - ALSA now improves support for batch devices.\n  - The udev rules had references to Pulseaudio removed in order\n    to not create conflicts.\n  - Fix a potential crash in bluetooth devices when\n    disconnecting.\n  - UCM cards now use HW volume when possible.\n\n- PulseAudio server\n  - The id can now be used as the name to locate cards and\n    devices\n  - Report streams with planar formats as well\n  - Better error reporting when stream create fails\n  - module-null-sink can now handle channels, rate and\n    channel_map properties\n  - Add support for 3 types of virtual devices: source,\n    sink and duplex.\n  - set-port was fixed\n  - Some buffer parameters were tweaked to improve\n    performance, compatibility and stuttering with lower\n    latency.\n  - NULL can be used as a name for the device sink/source\n  - Support lookup of monitor names\n  - Set properties more like pulseaudio so that some\n    clients (Teamspeak) don't crash anymore\n\nPipeWire 0.3.17\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n- Highlights\n  - Fix crasher bug for kwin when screensharing stopped.\n  - Massive improvements and compatibility fixes in the\n    PulseAudio server.\n  - The session manager now has a config directory in\n    /etc/pipewire/media-session.d/ It will look for files there\n    to activate session manager modules. Packagers can use\n    this to only activate the audio modules when the PulseAudio\n    server, libjack.so or the alsa modules are installed.\n\n- PipeWire improvements\n  - We now clear hooks before adding them. Some application\n    did not clear them and had random data for the destroy\n    callback.\n  - Return -ENOENT from unknown resources so apps can handle\n    this better. It's a common problem when an app tries to\n    introspect and object but it disappeared before the message\n    reached the server. Apps should ignore this.\n  - channelmap information is now passed with the volume\n    settings.\n  - DMABuf is not mmapp()ed anymore with the FLAG_MAP_BUFFERS in\n    the stream or filter. This is because DMABuf usually\n    requires more that just a simple mmap and is better left\n    for the application.\n  - increase the maximum number of ports for a client-node.\n  - adapter and node-factory now support the linger option to\n    keep the objects alive after the creating client disconnected.\n\n- Device support\n  - ALSA now handles error in close(), like when unplugging a\n    USB device.\n\n- Session-manager\n  - The session manager is now handling DONT_RECONNECT streams\n    without a target node. They get connected to a default node\n    once and then fail to reconnect.\n  - The session manager now exposes the stream setting as\n    metadata. This makes it possible for other components, such\n    as pulse-server to use this information. Information is stored\n    as a json object for easier consumption.\n  - The session manager now has a config directory in\n    /etc/pipewire/media-session.d/ packagers can use this\n\n- PulseAudio server\n  - Pulse server now acquire the dbus name.\n  - Improvements in timing and compatibility with many apps.\n  - The stream-restore extension is now implemented so that\n    the event volume can be configured.\n  - Many stability fixes and improvements.\n  - Fix some issues with module-load/unload\n\n\nPipeWire 0.3.16\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n- Highlights\n  - Fix screensharing for old 0.2 clients\n  - Many pulse-server improvements. There is now a\n    pipewire-pulse binary that is the preferred solution for\n    PulseAudio compatibility. The replacement libpulse\n    libraries are now deprecated. This also makes audio in\n    Flatpak work.\n\n- PipeWire improvements\n  - Fix cleanup of listeners everywhere. Force remove of\n    listeners in _destroy to avoid crashes.\n  - Add support for a journald logger module.\n  - Various memory leak fixes\n  - Silence some warnings that spammed the logs.\n  - Fix flush in pw_stream. This fixes small glitches when\n    switching streams in music players.\n  - Various FreeBSD fixes and improvements.\n  - Fix some crashes when destroying objects.\n\n- Device support\n  - Reload the ALSA configuration when creating a node so that\n    hotplugged devices work in all cases.\n  - Fix memory leaks in ACP library. This also fixes issues\n    where the mixer device was not closed.\n  - Bluetooth now has support for the mSBC codec for SCO\n    source and sink.\n\n- pulse-server\n  - Many introspection and compatibility improvements. It should\n    now be as good or better than the replacement library.\n  - Implement sample cache to make notification events work.\n\n- JACK layer\n  - handle errors when linking, fixes jack_connect hang when\n    the ports were already linked.\n\n\nPipeWire 0.3.15\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n- Highlights\n  - This is a quick update to fix critical issues with the\n    0.3.14 update, which broke screen sharing and accidentally\n    enabled the experimental pulse-server.\n  - Fix some compatibility issues in pulse-server with\n    pavucontrol and fix an issue that would block the complete\n    server.\n\n- PipeWire improvements\n  - Permission checks for new clients are now done from a\n    global context, which makes it possible to assign initial\n    permissions to objects.\n  - Handle EINTR everywhere\n  - Fix an issue with the node state changes where a quick\n    pause/play would hang a client.\n\n- Session manager improvements\n  - Disable the bluez5 and pulse-bridge modules by default because\n    they interfere with pulseaudio. These options should only be\n    enabled if pulseaudio is removed or disabled in the system.\n  - Fix an issue where the session manager could end up in\n    infinite recursion while scanning for things to do.\n  - The session manager will now always configure nodes to remix\n    to the channel configuration of the device. This fixes the case\n    where mono streams would only end up on one channel of a stereo\n    device.\n\n- Device support\n  - Initial merge of A2DP extra codec support using the new bluez5\n    API.\n\n- pulse-server\n  - Create the runtime directory when it doesn't exist.\n  - Don't ever block the server, use non-blocking IO everywhere.\n  - Fill description of profiles with the name if not otherwise set,\n    this fixes a crash in pavucontrol.\n  - the connection debug category will now also debug pulse\n    messages.\n  - Respect the no_remix flag to make the control panel channel\n    check work.\n\n- ALSA plugin\n  - implement pause\n\n\nPipeWire 0.3.14\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n- Highlights\n  - This release focuses on bugfixes and stability\n    improvements.\n  - A new experimental pulse-server module was added. This\n    module implements the pulseaudio protocol on top of\n    PipeWire and can be used to make flatpaks work with\n    PipeWire. It looks like this might be a better way\n    forward compared to the libpulse.so replacement library.\n  - A2DP bluetooth was reworked. Playback should work a lot\n    better now. Support was also added to automatically link\n    an A2DP source to a playback device, which makes it possible\n    to use PipeWire as a bluetooth receiver as well.\n  - Improvements to the routing and volume restore features\n    of the session manager.\n\n\n- PipeWire improvements\n  - The channelmixer does not normalize volumes anymore. Volumes\n    are only normalized for monitoring streams now.\n  - Streams can actually start in the inactive state now.\n  - The channelmixer can now also convert volume updates from one\n    channel layout to another. This makes saved volumes work\n    even when streams have different channel layouts.\n  - Clients are only registered after the properties have been\n    updated.\n  - Links now have a new active state.\n  - Drivers can now also specify a minimum quantum. This makes it\n    possible for bluetooth devices to specify an optimum quantum\n    for the given codec settings and MTU.\n  - The amount of data sent over the socket was reduced by only\n    sending the data that changed.\n  - Client objects are now exposed after they uploaded their\n    properties, which makes the new object more useful.\n\n- Tools improvements\n  - pw-cat will now add metadata to the PipeWire streams.\n\n- Session manager improvements\n  - Fix crashes when reading bad data in stored settings.\n  - volume and routing is improved. Settings are now remembered\n    per application or media-role.\n  - The session manager remembers the last device used per stream\n  - Fix a bug when moving streams where it could sometimes end\n    up with linking a stream to multiple devices.\n  - Use RTKit to set realtime priority on the data thread in the\n    session manager. This improves performance of the pulse-server\n    and bluetooth devices.\n  - Add a new property to mark streams that want to capture from\n    the monitor of the default sink.\n  - NODE_TARGET can now also contain the node name. This avoids\n    some lookups in the pulseaudio layer when selecting target\n    nodes by name.\n  - the -e and -d options are more usable now and can be used to\n    add and remove modules from the default list of modules.\n\n- Device support\n  - v4l2: add some workarounds for buggy drivers. Add Limited\n    support for droidcam.\n  - ACP: improve selection of default port and profiles.\n  - ACP: add support for using the hardware mixer for more than\n    8 channel streams.\n  - ACP: support the new port type and availability group found\n    in PulseAudio.\n  - A2DP bluetooth timings were reworked. Automatic linking of\n    A2DP sources was added to make it possible for PipeWire to\n    act as a bluetooth receiver. The code was reworked to allow\n    other codecs such as APTX and LDAC in the future.\n  - Try harder to recover from ALSA errors.\n\n- GStreamer improvements\n  - Fix some crashes in the monitor that cause\n    gnome-initial-setup to crash.\n\n- PulseAudio layer improvements\n  - Many compatibility improvements. Improved playback in\n    chrome. Fix a crash in firefox when the daemon is stopped.\n  - Fix a leak in the formats.\n  - Fix !ADJUST_LATENCY streams like paplay.\n  - Make the device option in paplay work.\n  - Fix volume/mute notifications, this makes plasma volume updates\n    work again.\n  - Do the conversion between PulseAudio cubic volumes and PipeWire\n    linear volumes. Volume levels should behave now like they did\n    with PulseAudio.\n\n- JACK layer improvements\n  - Return an error when we run out of midi events. Some application\n    rely on this behaviour.\n\n- ALSA plugin improvements\n  - The ALSA plugin now also supports the node name in the\n    playback_node and capture_node properties.\n\n\nPipeWire 0.3.13\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n- PipeWire improvements\n  - Add pw-reserve tool to reserve or monitor a device on DBus.\n  - Install spa-resample, a tool to resample a file.\n  - Install spa-acp-tool, a tool to inspect the card profile.\n  - Various fixes and improvements\n  - Fix a bug in pw-stream where a capture stream could run out\n    of buffers and become silent.\n  - Rework the processing loops in the adapter and stream. There\n    is now less latency in PulseAudio and ALSA layers.\n\n- Session manager improvements\n  - Improve the device reservation code. We now try to acquire\n    the device using the dbus device reservation API before we\n    probe the device. This avoids conflicts with a running\n    PulseAudio where devices would disappear (because they were\n    locked by the other process).\n  - Don't fail on invalid input from the config files.\n  - Audio devices now have the same name as what PulseAudio\n    would assign.\n\n- Device support\n  - v4l2: try to use the format before enumerating the size and\n    framerate. Some drivers don't check the format and might now\n    work better.\n  - v4l2: Fall back to MMAP when EXPBUF fails. Fix MMAP access,\n    just export the fd and the mapoffset. This should make more\n    devices work.\n  - Fix crash in ALSA Card Profile (ACP) code.\n  - ACP: fix selection of default profile. Prefer any possibly\n    available profile over 'Off'. This makes some card at least\n    start with something.\n  - Fix soft volume. After setting the volume to 0, it would stay\n    at 0 until pushed over the max volume. This should fix\n    various volume related issues.\n\n- PulseAudio layer improvements\n  - Rework the buffering and latency measurements and tweak the\n    buffer attributes. This should make browsers and media\n    players work better. This should also improve speechd\n    performance.\n\n- JACK layer improvements\n  - Fix compilation against newer JACK.\n\n\nPipeWire 0.3.12\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n- PipeWire improvements\n  * the channelmap converter now handles unknown and strange\n    channellayouts much better.\n  * the resampler is now cleared correctly, avoiding clicks and\n    pops at the start of sound.\n  * Fixes for various crasher bugs. (paplay drain, vlc shutdown,\n    pactl info, ...)\n  * Fix a race condition in the node state changes that caused\n    all kinds of sync and other issues (vlc, mpv, ...)\n  * Improve the binary name property of applications\n  * Fix the scheduling again of nodes that always need a driver\n    such as the jack clients.\n\n- Session manager improvements\n  * fix routing to default nodes. Sometimes nodes were not routed to\n    the default node (bluetooth)\n\n- Device support\n  * disable channelmap from ALSA by default. This is what PulseAudio\n    does and thus provides better compatibility.\n  * fix a bug in how the resampler was used in the ALSA source,\n    causing distortion and errors when using low latency capture\n    clients. (Discord, webrtc, ...)\n  * Small bluetooth improvements. More work is needed for reliable\n    bluetooth playback.\n\n- GStreamer plugins\n  * the device provider now stops the processing loop before shutting\n    down, which avoids crashes (gnome-initial-setup).\n\n- PulseAudio layer improvements\n  * the buffer attributes were reworked to ensure compatibility with\n    many more applications such as mpv and audacious.\n  * the pulseaudio layer will now try hard to not hand out invalid\n    channel maps to the application. (avoids crashes in\n    gnome-volume-control). The channel map will now also look more\n    like what PulseAudio does.\n  * the @DEFAULT_SINK/SOURCE/MONITOR@ wildcards now work. This\n    fixes the problem with volume keys when they are bound to\n    scripts using pactl and the default sink/source wildcards.\n  * the PIPEWIRE_LATENCY environment variable now works again\n  * Fix some leaks of ports and port info. Also fix the leak of the\n    context when the mainloop is stopped.\n  * The sink/source format_info array is now filled up completely,\n    this is actually not implemented yet in the real PulseAudio.\n\n- JACK layer improvements\n  * jack now returns version 3.0.0 and has PipeWire in the version\n    string so that apps can report this.\n\n\nPipeWire 0.3.11\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n- PipeWire improvements\n  * Properly cleanup the mixer structures when a port is removed,\n    this should fix client crashes related to port config changes\n    and other random crashes.\n  * Optimize the preferred formats in the audio converter. Higher\n    quality formats with higher performance are chosen first.\n  * Make sure the time reported by pw_stream is always increasing,\n    even when the driver and clock changes.\n  * There is now also a system service and socket that can be used\n    to enable PipeWire systemwide. This is however not recommended\n    and disabled by default.\n  * Fix channelmixer 5.1 to stereo mix matrix. It was not reading\n    the conversion matrix correctly and cause channels to be\n    dropped. The channelmixer will now also normalize the volume,\n    like what pulseaudio does.\n  * The channelmixer will now just copy channels when no layout\n    has been given. It has also optimized paths for this. This\n    makes it possible for apps to request > 8 channels from the\n    alsa plugin (ardour).\n  * Port, Node and Link will now also emit an error on the\n    resources in addition to updating the error in the info. This\n    would make it easier to track negotiation errors in the session\n    manager later.\n  * many small fixes and cleanups.\n  * Fix compatibility:\n\t+ DOSBox: fix crash because of double free in pw_stream\n\n- Session manager improvements\n  * The session manager will now try to configure the client to\n    the channel configuration of the sink/source. It will only\n    do this for downmixing, never for upmixing and also never\n    when the client has the dont-remix property set. It will\n    also renegotiate the channel layout when moving a stream to\n    a new sink/source.\n  * Configuration state is now saved in XDG_CONFIG_HOME.\n    Previously it was saved in $HOME/.pipewire-media-session/\n    You can migrate the state by moving the files to\n    $XDG_CONFIG_HOME/pipewire-media-session (or\n    $HOME/.config/pipewire-media-session as a fallback when\n    XDG_CONFIG_HOME is not set).\n\n- Device support\n  * Bluetooth sources and sinks should work better now.\n  * There is now also a new bluetooth backend using hsphfpd.\n  * fix the ALSA UCM Off profile for alsa pcm devices\n  * improve ALSA port and profile switching. The ACP device will\n    now switch to the best port and profile when availability\n    changes.\n\n- PulseAudio layer improvements\n  * Implement some more callbacks. The pulse layer will now also\n    notify applications of stream moved, started and latency\n    changes.\n  * Fix error code when an object was not found. We now return\n    PA_ERR_NOENTITY instead of PA_ERR_INVALID.\n  * Add some support for loading new null sinks. Applications such\n    as pulseeffects use this. Note that pulseeffects does not yet\n    work reliably but can start now.\n  * Improve handling of profile and port updates, it should work\n    much more reliable now. Apps should now also again receive\n    volume updates from sinks/sources.\n  * Fix compatibility:\n\t+ openal-soft 1.20\n\t+ pavucontrol (checks PA_ERR_NOENTITY)\n\n- JACK layer improvements\n  * improve default source and sink handling. It was not updated\n    correctly in all cases.\n  * add samplerate and period to the pw-jack wrapper to easily\n    configure the desired samplerate and period for the app.\n\n- ALSA plugin improvements\n  * Add a mixer entry in the alsa config file.\n  * Implement support for planar types, rework the processing\n    function to make it more robust.\n  * refuse to load the alsa plugin when linked against 0.2. This\n    catches some old apps linked against 0.2 that want to use the\n    alsa plugin.\n  * Fix compatibility:\n\t+ linphone (ALSA SIGFPE when _status() is called\n\t  before _prepare()).\n\nPipeWire 0.3.10\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n- Many improvements to the pulse layer.\n  * GStreamer pulsesink element now works.\n  * Fixes some segfaults.\n  * Enable rtkit for client threads.\n  * fixes capture of monitor stream by name\n  * implement some more extensions, this makes paman\n    work and removes some warnings.\n\n- Many improvements to the GStreamer elements\n  * negotiation rework, avoid calling GStreamer methods from\n    the PipeWire callbacks because they might block and cause\n    deadlocks.\n  * Add support for non-string property values.\n  * improve stability after buffer and format\n    renegotiation.\n  * Rework the device provider.\n  * pipewiresink can now provide a stream that can\n    be consumed by apps like cheese.\n\n- Many improvements to the JACK layer:\n  * Rework the buffer_size callbacks. Make sure we call\n    the callback from a 'safe' thread and that we don't\n    call the process callback while the application is\n    handling the callback. This improves stability in\n    apps like Carla when PipeWire dynamically changes\n    the buffer size.\n  * Improve compatibility with apps that call\n    get_buffer_frames() with a 0 size (calfjackrack)\n  * JACK can now create nodes that can be set as a\n    sink/source in PulseAudio/ALSA apps (you can make an\n    effects rack and set that as default sink for\n    apps).\n\n- Added a group id property for nodes. This makes it\n  possible to schedule nodes with the same driver even\n  when they are otherwise not linked together. To make\n  this work well a new flag needed to be added to nodes\n  to signal when they are ready for processing.\n\n  Together with the GStreamer fixes, this makes things\n  like:\n\n   gst-launch-1.0 -v pipewiresrc path=51 stream-properties=\"props,node.group=1\" !\n         audio/x-raw ! pipewiresink stream-properties=\"props,node.group=1\"\n\n  work as expected with PipeWire managing the resampling\n  to keep the clocks of the devices in sync.\n\n  This can later also be used to force devices to be grouped\n  together to create a JACK-like scheduling group.\n\n- Streams and filter now use PIPEWIRE_NODE and\n  PIPEWIRE_LATENCY env variables as fallback.\n\n- ACP add per device port list. This makes UCM devices\n  expose the right ports.\n\n- Fix some segfaults in ACP and UCM.\n\n- make pw-cat use the metadata to find default devices.\n\n- The media session can now save and load audio device\n  Profiles and Routes (volumes), stream volumes and\n  the default sink and sources.\n\nPipeWire 0.3.9\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n- Fix bad audio in chrome\n\n- Remove some errors that are not real errors.\n\n- Fix 100% cpu when disconnecting devices.\n\n- Improve pulseaudio introspection of formats\n\n- Fix JACK metadata handling, carla can now monitor the\n  port it creates and insert midi.\n\n- Add a new permission bit (M) that is needed to be able\n  to configure metadata on an object. Improve security of\n  metadata some more, only allow metadata on objects that\n  are visible to the client setting the metadata.\n\n- Add support for videocrop in the GStreamer elements.\n\n- Improve handling of the runtime directory for the\n  server sockets. Add some reasonable fallback when\n  XDG_RUNTIME_DIR is not set, as suggested in the spec.\n\n- Improve ALSA device names from ACP.\n\n- Fix various crasher bugs. One in the pulse layer, one in\n  the session manager.\n\n- Make alsa plugin respect the PIPEWIRE_REMOTE env variable.\n\n- Various compile fixes.\n\n\nPipeWire 0.3.8\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n- Fix an embarrassing crasher in the JACK layer when\n  metadata keys were removed.\n\n- Make it possible to add properties to jack clients with\n  a PIPEWIRE_PROPS env variable. This can be used to make\n  JACK nodes look like a device (like an effects rack).\n\n- Improvements in the session manager in how it links\n  ports. Now it will try to link matching channels first\n  and be more intelligent otherwise. The session manager\n  will also configure the stream to the device port\n  configuration when needed.\n\n- Add ofono backend for Bluetooth HeadSet support.\n\n- Improve default source and sink handling. They are now\n  stored with their id, instead of name, in the metadata.\n  This makes it work better with JACK because of JACK's\n  limited name length.\n\n- Improve environment variables to make it possible to\n  create and connect to servers other than \"pipewire-0\".\n  Implement this in pulseaudio, JACK and alsa layers.\n\n- Add an alsa mixer plugin so that alsamixer works with\n  PipeWire. It will configure the default source/sink\n  volumes.\n\n- Fix capture devices. There was something wrong with how\n  the resampler was used that caused corruption in the\n  signal when the resampler was active.\n\n- We now ship alsa card paths, profile-sets configuration\n  files and udev rules so that we don't have to rely on\n  the pulseaudio ones.\n\n- Many build and stability fixes.\n\n\nPipeWire 0.3.7\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n- Improved PulseAudio compatibility. The alsa card profile\n  code was reused from PulseAudio. Devices now support\n  all profiles, ports, jack detection, UCM and hardware\n  mixers that PulseAudio implements. There should not\n  be (almost) any difference between PipeWire and PulseAudio\n  in how it presents and manages devices.\n  Other missing API pieces such as the default sink/source\n  and move_stream are implemented now.  At this point\n  it should be possible to replace PulseAudio with the\n  compatibility layer for those who want to try.\n\n- Many fixes and improvements to the GStreamer elements.\n  pipewiresrc now has the ability to periodically resend\n  the last frame. This makes it possible for use-cases like\n  screensharing to only update the screen on changes while\n  still keeping the client side encoder busy. PipeWire\n  elements can now also share a connection between them.\n\n- Improvements to the bluetooth nodes. Dynamically adding\n  and removing devices should work much smoother now. Many\n  fixes and improvements to a2dp and sco nodes.\n\n- Reduced memory usage by using less pre-allocated memory\n  where possible. JACK clients are especially using less\n  memory.\n\n- Support for passive links is added again. These are links\n  that don't cause the associated driver to become active.\n  This makes it possible to have blocks of effects+sinks go\n  to suspend as a group when not in use.\n\n- Both consumers and producers can now ask to renegotiate\n  the format. This required some cleanups and improvements\n  to how links and node states were handled. More work is\n  needed to implement more use cases.\n\n- Important fixes to how memory is shared with clients. Memory\n  was not correctly freed in all cases, which would result\n  in reuse of the wrong memory.\n\n- Support for planar formats for audio and video was added.\n\n- Improved error handling in the session manager.\n\n- Metadata is now used to manage default audio source and\n  sink devices. The session manager will try to link streams\n  to the default device. Changing the default device will\n  move streams to the new device. PulseAudio and JACK layers\n  respect the default source/sinks.\n\n- Metadata is used to tag the desired output device for\n  a stream and the session manager will move streams when\n  the metadata changes. The PulseAudio layer uses this to\n  implement the move_stream feature.\n\n- Many fixes to the security modules. The session manager now\n  has a flatpak module that grants permissions to flatpak\n  apps. The PulseAudio layer now respects the permissions of\n  objects. Security related properties are made read-only\n  now. Different access modules can now coexist.\n\n- The portal module has been split up in 2 parts:\n   1) a part living in the daemon that monitors the portal\n      dbus owner and tags all clients from this PID. This\n      part has to run in the daemon in order to securely\n      tag the clients.\n   2) a part in the session manager that uses the permission\n      store to manage the permissions of portal managed\n      clients.\n\n\nPipeWire 0.3.6\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n- Extensive memory leak fixing and stress testing was done.\n  A big leak in screen sharing with DMA-BUF was fixed.\n- Compile fixes\n- Stability improvements in jack and pulseaudio layers.\n- Added the old portal module to make the Camera portal\n  work again. This will be moved to the session manager in\n  future versions.\n- Improvements to the GStreamer source and sink shutdown.\n- Fix compatibility with v2 clients again when negotiating\n  buffers.\n\n\nPipeWire 0.3.5\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n- Compiler fixes\n- Add pw-midiplay and pw-midirecord aliases\n- Add pw-mididump tool\n- Add pw-metadata tool to inspect, add and remove metadata\n  for objects.\n- Docs updates, man pages\n- install alsa config files\n- Fix linked sink/source in pulseaudio\n- ratelimit graph processing warnings\n- improve buffer handling in GStreamer elements\n- Fix power usage by removing the queue for the alsa\n  sequencer system announce messages.\n- Fix metadata clear() method dispatch.\n- Improve parameter enumeration, make it possible to detect\n  missing parameters vs no-compatible parameters so that we\n  can use defaults in the first case and error in the second\n  case.\n- Fix cleanup of proxy objects. Stability improvements on\n  plug/unplug in session manager.\n- Make it possible to set log level from config file\n- improve debug of param negotiation errors. Log the\n  parameters to stderr/journal.\n- Make it possible to configure global logger\n  implementation.\n- Fix NEON detection\n- JACK and PulseAudio compatibility improvements\n\n\nPipeWire 0.3.4\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n- A quick update with some important stability fixes.\n\n\nPipeWire 0.3.3\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n- NEON optimizations for audio conversion (32 and 64 bits)\n- rework of session manager implementation\n- Add option to disable modules in the session manager\n- Release midi hardware devices when suspended\n- various build fixes\n- Clean up options of various utils\n- Stability improvements\n- Mayor improvements in pulseaudio emulation. Improved\n  timings and compatibility.\n- Implementation of drain and flush in pulse and alsa\n  emulation.\n- Implement poll on file descriptors.\n- Improvement of metadata for jack emulation.\n- Fix memory and thread problems in jack emulation.\n- Simplification of state changes. Should make more use\n  cases work in the jack emulation.\n- Improvements in the gstreamer elements. Removal of\n  extra internal queue. pipewiresink can now be used to\n  play audio.\n- Add pw-jack and pw-pulse scripts to run pulseaudio and\n  jack applications with the right library path.\n\n\nPipeWire 0.3.2\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n- build fixes\n- Added support for data type negotiation. This makes it\n  possible for a client to say that it can handle DMABuf\n  and MemFd and then let the server select a compatible\n  format.\n- Handle errors when enumerating parameters better.\n- Add support for rate, format, channels and period_bytes\n  to the alsa config file to restrict what alsa apps can\n  negotiate.\n- Fix JACK midi output.\n- Optimizations in common audio format conversions using\n  AVX2. Small optimizations to plugins.\n- Change the vulkan compute example to an MIT licensed\n  shader.\n- Remove some hardcoded defaults in the audio and video\n  processing and use the values from the processing\n  context. This also fixes the vulkan example.\n- Correct the documentation and defaults in the daemon\n  config file.\n- Fix alsa and v4l2 buffer recycle. A paused client could\n  cause the server to leak all buffers.\n- Remove some warnings that should be ignored.\n- Fix a crash in the bluez5 plugins.\n- Try to select higher quality formats first when\n  negotiating a format with an audio device.\n- Fix an infinite loop in udev detection in some cases.\n- Add non-interactive mode to pw-cli. You can now just\n  do \"pw-cli ls Port\" to get a listing of all ports.\n  pw-cli will now also connect to the default server by\n  default and has options to select a different server.\n- Allow the server to go up to the maximum quantum (8192\n  samples or ~=180ms) if a client explicitly wants this.\n\n\nPipeWire 0.3.1\n\nThis is a bugfix release that is API and ABI compatible\nwith previous 0.3.x releases.\n\n- Don't load the rtkit module by default. It can cause a\n  sigkill, which is not desirable for mutter, for example.\n  Only enable this for the jack library for now.\n- Don't use pthread cancel by default because it uses a\n  signal that might crash some apps. Only use it for\n  the jack library because jack clients really expect this.\n- Build fixes for -Werror=suggest-attribute=format\n- improve error messages, don't report harmless errors and\n  warnings. Try to send error messages to the proxy that\n  started the operation or is the owner of the object.\n- pw-cat: midi improvement, add midi recording and dump\n  in verbose mode\n- fix properties when loading spa-nodes from the config\n- Fix and update some examples\n- jack: check arguments and don't crash when invalid\n- Fix buffer memory upload.\n- jack: fix compatibility with zrythm. Fix timemaster\n  install, improve sample_rate callback. Fix reposition\n  handling.\n- fix crash in port after buffer negotiation error.\n- add support for control ports in pw_filter\n- fix cleanup of the metadata module\n- improve param enumeration.\n- Clear stream buffers when the format is cleared.\n- Add create-object command in the config file to create\n  object from a factory.\n- Fix crash after the driver was not removed from unassigned\n  nodes. Also properly pause inactive nodes.\n- Use \"true\" and \"false\" in properties when we are talking\n  about a boolean.\n- pulseaudio: improve compatibility\n\n\nPipeWire 0.3.0\n\nThe 0.3 release is a major milestone in the development of\nPipeWire. It features a complete redesign of the scheduling\nmechanisms that make it possible to run a JACK compatibility\nlayer with comparable performance to JACK2.\n\nThe API has been reworked and is declared stable now. All\ndevelopment files and runtime paths are versioned so that\nfuture incompatible changes can be done without breaking\nexisting applications.\n\nPipeWire 0.3 also includes a (now mandatory) session manager\nthat populates and controls the PipeWire graph. This example\nsession manager is very simple and not configurable. It is\nexpected that future version will either switch to a more\nflexible session manager (like WirePlumber) or improve the\nconfiguration options of the example session manager.\n\nPipeWire 0.3 includes both PulseAudio, JACK and ALSA\ncompatibility libraries that are known to support a wide range\nof applications. The ALSA library is pretty complete at this\npoint. The JACK and mostly the PulseAudio compatibility\nlibraries need more work. See the Wiki pages for the current\ncompatibility problems. We do not yet encourage people to\nswitch away from their existing audio solutions (PulseAudio\nor JACK) but we would love to hear from people who try it\nanyways. Future versions will mostly focus on improving\ncompatibility further to make PipeWire a drop-in replacement.\n\nPipeWire comes with some GStreamer plugins to consume and\nproduce data for PipeWire. The consumer (pipewiresrc) is\nworking well in most cases. The sink (pipewiresink) is known\nto be somewhat problematic for now.\n\nPipeWire 0.2.97\n\nEighth pre-release for upcoming 0.3:\n\n- Build fixes\n- pw-cat improvement: Fix remote name, add midi support\n- add device subscribe params for completeness\n- jack and pulseaudio compatibility fixes\n- Fix a bug in resampler, add quality option, tweaked quality\n  settings, tested now against https://src.infinitewave.ca/\n  testsignals and submitted results for publication.\n- Fix awkwardness in buffer negotiations, the default number of\n  buffers was 4 and jack could only handle 2, causing\n  corruption. Also implement negotiation of Step ranges.\n- Fix device reservation to work together with pulseaudio,\n  previously we would block pulseaudio.\n\nPipeWire 0.2.96\n\nSeventh pre-release for upcoming 0.3:\n\n- jack: improve compatibility\n- Fix unit test\n- Fix license of jack and alsa libs\n- Make start/stop more threadsafe\n- Fix rt-kit again, add params to configure things, increase default\n  soft/hard limits to avoid being killed.\n- version 0 compatibility improvements, tested with firefox, cheese,\n  GStreamer and chrome using compat layers.\n- Fix timing for gstreamer source\n- Require libspa in pkg-config file\n- Limit buffers to 16 to support old clients\n\nPipeWire 0.2.95\n\nSixth pre-release for upcoming 0.3:\n\n- Fix tests for big endian some more\n- Improve v2 compatibility mode: improve type negotiation and\n  update_permissions\n- Workaround for firefox screen sharing\n\n\nPipeWire 0.2.94\n\nFifth pre-release for upcoming 0.3:\n\n- Fix man page names\n- Fix jack set_sync_timeout\n- Improve JACK compatibility with apps that cache buffer pointers.\n- Improve mlock failure warning message, add property to configure\n  if mlock should be used.\n- Improve OBJECT_PATH in alsa objects\n- Install in versioned directory\n- Add pw-profiler tool\n- Improve pulseaudio compatibility wrt pa_operations\n- Thread safety fixes in remote nodes when activating/deactivating\n- Improve JACK names on duplicates\n- Add option to ignore failure when loading modules\n\nPipeWire 0.2.93\n\nFourth pre-release for upcoming 0.3:\n\n- Fix unit tests on 32 bits\n- Append -pw version to pulse and jack libs. This way we can install\n  it next to the real libraries and use a symlink to enable it.\n- Improve jack support by killing threads with pthread_cancel. This\n  then also remove the eventfd from the data-loop, making it\n  maybe a little faster.\n- Fix jack_client_close() compatibility\n- Fix some segfaults in the session manager\n- Improve debug of protocol messages\n- Add examples options\n- Don't fail when alsa is not found\n- Fix some compiler warnings with a new spa_aprintf() helper.\n- Add pw-cat, the simple audio playback/record tool\n- Rename pipewire tools to pw- prefix\n- Add improve pw-cli object dump feature\n\n\nPipeWire 0.2.92\n\nThird pre-release for upcoming 0.3:\n\n- Improve old version check some more\n- Fix unit tests on little/big endian\n- Fix compilation when CPU has no optimisations\n- Install jack and pulse libraries\n- Handle -EACCESS in flatpack access module\n\n\nPipeWire 0.2.91\n\nIt is mostly a bugfix release to make the new version install and\nrun correctly in distros.\n\n- Install session manager, fix path to find the session manager\n- Fix alsa buffer reuse\n- Small fixes for crasher bugs\n- Implement pw_core_set_paused() to suspend/resume even\n  processing. This can be used when using multiple connections\n  to a daemon and one needs to pause one connection until the\n  other one completes an action. Used by session managers.\n- Improve old version check\n\n\nPipeWire 0.2.90\n\nThis is the first pre-release of the 0.3 version. It consists of a\nmajor rewrite and is not API or ABI compatible with the 0.2\nbranch.\n\n\nPipeWire 0.2.7\n\nThis is mostly a bugfix release and is API/ABI compatible with\nprevious 0.2 versions.\n\nWork is ongoing in the work branch that features a completely new\nscheduling method that will enable audio support. Some of these\nAPI changes are backported in this branch.\n\n- Add support for alsa-lib 1.1.9 which changed the include path\n- Improve error checking and reporting in the protocol\n- deviceprovider: fix probing without starting\n- add sentinel to some functions\n- compiler fixes for musl\n- Revert object tree permission checks that broke things, this is\n  probably not a good idea (and the tree of objects is going to\n  be removed later)\n\n\nPipeWire 0.2.6\n\n- Improve error checking for threads\n- Fix some memory and fd leaks\n- Fix compilation with C++ compilers and clang\n- DISABLE_RTKIT should now not try to use dbus at all\n- Camera Portal fixes:\n\t- add Camera media.role\n\t- Rename module-flatpak to module-portal\n\t- Use the portal permissions store for camera checks\n- Actually use the passed fd in pipewiresrc\n- Make properties with \"pipewire.\" prefix read-only\n- Add security label to client object\n- Enforce link permissions\n- Permissions of objects are now combined with parent permissions\n- Remove libv4l2 dependency, it is not used\n- Improve format negotiation in autolink #146\n- Try to avoid list corruption with event emission #143\n- Fix destroy of client-node memory corruption\n- Various small improvements\n\nPipeWire 0.2.5\n\n- build fixes for systemd\n- Add cursor and bitmap metadata. This can be used to send a cursor\n  sprite with the video stream.\n- permissions were set too strict for non-flatpak clients\n- Fix crash in loop caused by thread unsafe hook emission\n- Add more error checking for thread-loop\n- Small cleanups and bugfixes\n\nPipeWire 0.2.4\n\n- Install man pages in right directory\n- Add systemd socket activation\n- Various memory leak and corruption fixes in properties, dbus and\n  buffer mmapped memory.\n- Fix v4l2 crash on unplug\n- improve stream cleanup\n\nPipeWire 0.2.3\n\n- Fix deviceprovider caps introspection\n- Refcounting fixes in pipewiresrc\n- Remove clock interpolation from stream\n- Improve clock in gstreamer elements\n- Remove spalib\n- Fix crash with pw_map\n- Add version number to hook list\n- Improve driver mode in gstreamer elements\n- add daemon options\n- add man pages\n\nPipeWire 0.2.2\n\n- Increment API version and .so version\n\nPipeWire 0.2.1\n\n- Various fixes to memory handling\n- Fixes for shutdown\n- v4l2 fix enumeration of frame intervals\n- Make the daemon stop when the setup commands fail\n- Improve safety of hooks\n- Update stream API to more future proof version\n- Add more options to stream API such as scheduling in the\n  main thread and automatic mapping of buffers\n- Add version file and macros to check compile time and\n  runtime versions of pipewire\n- Future proof some structs\n\n\nPipeWire 0.1.9\n\n- Various build fixes\n- Do more permission checks\n- Add support for doing async connections. This can be used to\n  make connections through the portal later.\n- Fix device creation from the GStreamer device monitor\n- v4l2 experiment with controls\n- move rtkit to a module to avoid dbus dependency\n- use dmabuf allocator in gstreamer elements\n- Add DSP module for pro audio cases, remove jack module. The\n  idea is to make a replacement jack client library that talks\n  pipewire directly instead of trying to emulate a jack server.\n- Various memory handling improvements\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.916015625,
          "content": "# PipeWire\n\n[PipeWire](https://pipewire.org) is a server and user space API to\ndeal with multimedia pipelines. This includes:\n\n  - Making available sources of video (such as from a capture devices or\n    application provided streams) and multiplexing this with\n    clients.\n  - Accessing sources of video for consumption.\n  - Generating graphs for audio and video processing.\n\nNodes in the graph can be implemented as separate processes,\ncommunicating with sockets and exchanging multimedia content using fd\npassing.\n\n## Building and installation\n\nThe preferred way to install PipeWire is to install it with your\ndistribution package system. This ensures PipeWire is integrated\ninto the rest of your system for the best experience.\n\nIf you want to build and install PipeWire yourself, refer to\n[install](INSTALL.md) for instructions.\n\n## Usage\n\nThe most important purpose of PipeWire is to run your favorite apps.\n\nSome applications use the native PipeWire API, such as most compositors\n(gnome-shell, wayland, ...) to implement screen sharing. These apps will\njust work automatically.\n\nMost audio applications can use either ALSA, JACK or PulseAudio as a\nbackend. PipeWire provides support for all 3 backends. Depending on how\nyour distribution has configured things this should just work automatically\nor with the provided scripts shown below.\n\nPipeWire can use environment variables to control the behaviour of\napplications:\n\n* `PIPEWIRE_DEBUG=<level>`         to increase the debug level (or use one of\n                                   `XEWIDT` for none, error, warnings, info,\n                                   debug, or trace, respectively).\n* `PIPEWIRE_LOG=<filename>`        to redirect log to filename\n* `PIPEWIRE_LOG_SYSTEMD=false`     to disable logging to systemd journal\n* `PIPEWIRE_LATENCY=<num/denom>`   to configure latency as a fraction. 10/1000\n                                   configures a 10ms latency. Usually this is\n\t\t\t\t   expressed as a fraction of the samplerate,\n\t\t\t\t   like 256/48000, which uses 256 samples at a\n\t\t\t\t   samplerate of 48KHz for a latency of 5.33ms.\n\t\t\t\t   This function does not attempt to configure\n\t\t\t\t   the samplerate.\n* `PIPEWIRE_RATE=<num/denom>`      to configure a rate for the graph.\n* `PIPEWIRE_QUANTUM=<num/denom>`   to configure latency as a fraction and a\n                   samplerate. This function will force the graph samplerate to\n                   `denom` and force the specified `num` as the buffer size.\n* `PIPEWIRE_NODE=<id>`             to request a link to the specified node. The\n                    id can be a node.name or object.serial of the target node.\n\n### Using tools\n\n`pw-cat` can be used to play and record audio and midi. Use `pw-cat -h` to get\nsome more help. There are some aliases like `pw-play` and `pw-record` to make\nthings easier:\n\n```\n$ pw-play /home/wim/data/01.\\ Firepower.wav\n```\n\n### Running JACK applications\n\nDepending on how the system was configured, you can either run PipeWire and\nJACK side-by-side or have PipeWire take over the functionality of JACK\ncompletely.\n\nIn dual mode, JACK apps will by default use the JACK server. To direct a JACK\napp to PipeWire, you can use the `pw-jack` script like this:\n\n```\n$ pw-jack <appname>\n```\n\nIf you replaced JACK with PipeWire completely, `pw-jack` does not have any\neffect and can be omitted.\n\nJACK applications will automatically use the buffer-size chosen by the\nserver. You can force a maximum buffer size (latency) by setting the\n`PIPEWIRE_LATENCY` environment variable like so:\n\n```\nPIPEWIRE_LATENCY=128/48000 jack_simple_client\n```\nRequests the `jack_simple_client` to run with a buffer of 128 or\nless samples.\n\n\n### Running PulseAudio applications\n\nPipeWire can run a PulseAudio compatible replacement server. You can't\nuse both servers at the same time. Usually your package manager will\nmake the server conflict so that you can only install one or the\nother.\n\nPulseAudio applications still use the regular PulseAudio client\nlibraries and you don't need to do anything else than change the\nserver implementation.\n\nA successful swap of the server can be verified by checking the\noutput of\n\n```\npactl info\n```\nIt should include the string:\n```\n...\nServer Name: PulseAudio (on PipeWire 0.3.x)\n...\n```\n\nYou can use pavucontrol to change profiles and ports, change volumes\nor redirect streams, just like with PulseAudio.\n\n\n### Running ALSA applications\n\nIf the PipeWire alsa module is installed, it can be seen with\n\n```\n$ aplay -L\n```\n\nALSA applications can then use the `pipewire:` device to use PipeWire\nas the audio system.\n\n### Running GStreamer applications\n\nPipeWire includes 2 GStreamer elements called `pipewiresrc` and\n`pipewiresink`. They can be used in pipelines such as this:\n\n```\n$ gst-launch-1.0 pipewiresrc ! videoconvert ! autovideosink\n```\n\nOr to play a beeping sound:\n\n```\n$ gst-launch-1.0 audiotestsrc ! pipewiresink\n```\n\nPipeWire provides a device monitor as well so that\n\n```\n$ gst-device-monitor-1.0\n```\n\nshows the PipeWire devices and applications like cheese will\nautomatically use the PipeWire video source when possible.\n\n### Inspecting the PipeWire state\n\nTo inspect and manipulate the PipeWire graph via GUI, you can use [Helvum](https://gitlab.freedesktop.org/ryuukyu/helvum).\n\nAlternatively, you can use use one of the excellent JACK tools, such as `Carla`,\n`catia`, `qjackctl`, ...\nHowever, you will not be able to see all features like the video\nports.\n\n`pw-mon` dumps and monitors the state of the PipeWire daemon.\n\n`pw-dot` can dump a graph of the pipeline, check out the help for\nhow to do this.\n\n`pw-top` monitors the real-time status of the graph. This is handy to\nfind out what clients are running and how much DSP resources they\nuse.\n\n`pw-dump` dumps the state of the PipeWire daemon in JSON format. This\ncan be used to find out the properties and parameters of the objects\nin the PipeWire daemon.\n\nThere is a more complicated tool to inspect the state of the server\nwith `pw-cli`. This tool can be used interactively or it can execute\nsingle commands like this to get the server information:\n\n```\n$ pw-cli info 0\n```\n\n## Documentation\n\nFind tutorials and design documentation [here](doc/index.dox).\n\nThe (incomplete) autogenerated API docs are [here](https://docs.pipewire.org).\n\nThe Wiki can be found [here](https://gitlab.freedesktop.org/pipewire/pipewire/-/wikis/home)\n\n## Contributing\n\nPipeWire is Free Software and is developed in the open. It is mostly\nlicensed under the [MIT license](COPYING). Check [LICENSE](LICENSE) for\nmore details about the exceptions.\n\nContributors are encouraged to submit merge requests or file bugs on\n[gitlab](https://gitlab.freedesktop.org/pipewire).\n\nJoin us on IRC at #pipewire on [OFTC](https://www.oftc.net/).\n\nWe adhere to the Contributor Covenant for our [code of conduct](CODE_OF_CONDUCT.md).\n\n[Donate using Liberapay](https://liberapay.com/PipeWire/donate).\n\n## Getting help\n\nYou can ask for help on the IRC channel (see above).  You can also ask\nquestions by [raising](https://gitlab.freedesktop.org/pipewire/pipewire/-/issues/new)\na gitlab issue.\n"
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 0.4443359375,
          "content": "#!/bin/sh\n\n# Only there to make jhbuild happy\n\nif [ -z \"$MESON\" ]; then\n    MESON=$(which meson)\nfi\nif [ -z \"$MESON\" ]; then\n\techo \"error: Meson not found.\"\n\techo \"Install meson to configure and build PipeWire. If meson\" \\\n\t     \"is already installed, set the environment variable MESON\" \\\n\t     \"to the binary's path.\"\n\texit 1;\nfi\n\nmkdir -p builddir\n$MESON setup \"$@\" builddir # use 'autogen.sh --reconfigure' to update\nln -sf builddir/Makefile Makefile\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "meson.build",
          "type": "blob",
          "size": 22.970703125,
          "content": "project('pipewire', ['c' ],\n  version : '1.3.0',\n  license : [ 'MIT', 'LGPL-2.1-or-later', 'GPL-2.0-only' ],\n  meson_version : '>= 0.61.1',\n  default_options : [ 'warning_level=3',\n                      'c_std=gnu11',\n                      'cpp_std=c++17',\n                      'b_pie=true',\n                      #'b_sanitize=address,undefined',\n                      'buildtype=debugoptimized' ])\n\npipewire_version = meson.project_version()\nversion_arr = pipewire_version.split('.')\npipewire_version_major = version_arr[0]\npipewire_version_minor = version_arr[1]\npipewire_version_micro = version_arr[2]\nif version_arr.length() == 4\n  pipewire_version_nano = version_arr[3]\nelse\n  pipewire_version_nano = 0\nendif\n\nspaversion = '0.2'\napiversion = '0.3'\nsoversion = 0\nlibversion_minor = pipewire_version_major.to_int() * 1000 + pipewire_version_minor.to_int() * 100 + pipewire_version_micro.to_int()\nlibversion = '@0@.@1@.0'.format(soversion, libversion_minor)\n\n# LADI/jack\n# 3, for PipeWire being the third JACK implementation, after JACK1 and jackdmp/JACK2)\njack_version_major = 3\njack_version_minor = libversion_minor\n# libjack[server] version has 0 for major (for compatibility with other implementations),\n# 3 for minor, and \"1000*major + 100*minor + micro\" as micro version (the minor libpipewire soversion number)\nlibjackversion = '@0@.@1@.@2@'.format(soversion, jack_version_major, jack_version_minor)\n# jack[server] version has 3 for major\n# and pipewire's \"1000*major + 100*minor + micro\" as minor version\njackversion = '@0@.@1@.@2@'.format(jack_version_major, jack_version_minor, 0)\n\npipewire_name = 'pipewire-@0@'.format(apiversion)\nspa_name = 'spa-@0@'.format(spaversion)\n\nprefix = get_option('prefix')\npipewire_bindir = prefix / get_option('bindir')\npipewire_datadir = prefix / get_option('datadir')\npipewire_libdir = prefix / get_option('libdir')\npipewire_libexecdir = prefix / get_option('libexecdir')\npipewire_localedir = prefix / get_option('localedir')\npipewire_sysconfdir = prefix / get_option('sysconfdir')\n\npipewire_configdir = pipewire_sysconfdir / 'pipewire'\npipewire_confdatadir = pipewire_datadir / 'pipewire'\nmodules_install_dir = pipewire_libdir / pipewire_name\n\ncc = meson.get_compiler('c')\ncc_native = meson.get_compiler('c', native: true)\n\nif cc.has_header('features.h') and cc.get_define('__GLIBC__', prefix: '#include <features.h>') != ''\n  # glibc ld.so interprets ${LIB} in a library loading path with an\n  # appropriate value for the current architecture, typically something\n  # like lib, lib64 or lib/x86_64-linux-gnu.\n  # This allows the same pw-jack script to work for both 32- and 64-bit\n  # applications on biarch/multiarch distributions, by setting something\n  # like LD_LIBRARY_PATH='/usr/${LIB}/pipewire-0.3/jack'.\n  # Note that ${LIB} is a special token expanded by the runtime linker,\n  # not an environment variable, and must be passed through literally.\n  modules_install_dir_dlopen = prefix / '${LIB}' / pipewire_name\nelse\n  modules_install_dir_dlopen = modules_install_dir\nendif\n\nspa_plugindir = pipewire_libdir / spa_name\nspa_datadir = pipewire_datadir / spa_name\n\nalsadatadir = pipewire_datadir / 'alsa-card-profile' / 'mixer'\n\npipewire_headers_dir = pipewire_name / 'pipewire'\n\npkgconfig = import('pkgconfig')\n\ncommon_flags = [\n  '-fvisibility=hidden',\n  '-fno-strict-aliasing',\n  '-Wno-error=strict-aliasing',\n  '-Werror=suggest-attribute=format',\n  '-Wsign-compare',\n  '-Wpointer-arith',\n  '-Wpointer-sign',\n  '-Werror=format',\n  '-Wno-error=format-overflow', # avoid some \"‘%s’ directive argument is null\"\n  '-Wformat-security',\n  '-Wimplicit-fallthrough',\n  '-Wmissing-braces',\n  '-Wtype-limits',\n  '-Wvariadic-macros',\n  '-Wmaybe-uninitialized',\n  '-Wno-missing-field-initializers',\n  '-Wno-unused-parameter',\n  '-Wno-pedantic',\n  '-Wdeprecated-declarations',\n  '-Wunused-result',\n  '-Werror=return-type',\n  '-Werror=float-conversion',\n  '-Werror=constant-conversion',\n]\n\ncc_flags = common_flags + [\n  '-D_GNU_SOURCE',\n  '-DFASTPATH',\n# '-DSPA_DEBUG_MEMCPY',\n  '-Werror=implicit-function-declaration',\n  '-Werror=incompatible-pointer-types',\n  '-Werror=int-conversion',\n  '-Werror=old-style-declaration',\n  '-Werror=old-style-definition',\n  '-Werror=missing-parameter-type',\n  '-Werror=strict-prototypes',\n]\nadd_project_arguments(cc.get_supported_arguments(cc_flags), language: 'c')\n\ncc_flags_native = cc_native.get_supported_arguments(cc_flags)\n\nhave_cpp = add_languages('cpp', native: false, required : false)\n\nif have_cpp\n  cxx = meson.get_compiler('cpp')\n  cxx_flags = common_flags + [ '-Wno-c99-designator' ]\n  add_project_arguments(cxx.get_supported_arguments(cxx_flags), language: 'cpp')\nendif\n\nsse_args = '-msse'\nsse2_args = '-msse2'\nssse3_args = '-mssse3'\nsse41_args = '-msse4.1'\nfma_args = '-mfma'\navx_args = '-mavx'\navx2_args = '-mavx2'\n\nhave_sse = cc.has_argument(sse_args)\nhave_sse2 = cc.has_argument(sse2_args)\nhave_ssse3 = cc.has_argument(ssse3_args)\nhave_sse41 = cc.has_argument(sse41_args)\nhave_fma = cc.has_argument(fma_args)\nhave_avx = cc.has_argument(avx_args)\nhave_avx2 = cc.has_argument(avx2_args)\n\nhave_neon = false\nif host_machine.cpu_family() == 'aarch64'\n  if cc.compiles('''\n    #include <arm_neon.h>\n    int main () {\n      float *s;\n      asm volatile(\n        \"      ld1 { v0.4s }, [%[s]], #16\\n\"\n        \"      fcvtzs v0.4s, v0.4s, #31\\n\"\n        : [s] \"+r\" (s) : :);\n    }\n    ''',\n    name : 'aarch64 Neon Support')\n      neon_args = []\n      have_neon = true\n\n  endif\nelif cc.has_argument('-mfpu=neon')\n  if cc.compiles('''\n    #include <arm_neon.h>\n    int main () {\n      float *s;\n      asm volatile(\n        \"      vld1.32 { q0 }, [%[s]]!\\n\"\n        \"      vcvt.s32.f32 q0, q0, #31\\n\"\n        : [s] \"+r\" (s) : :);\n    }\n    ''',\n    args: '-mfpu=neon',\n    name : 'arm Neon Support')\n      neon_args = ['-mfpu=neon']\n      have_neon = true\n  endif\nendif\n\nhave_rvv = false\nif host_machine.cpu_family() == 'riscv64'\n  if cc.compiles('''\n      int main() {\n          __asm__ __volatile__ (\n            \".option arch, +v\\nvsetivli zero, 0, e8, m1, ta, ma\"\n          );\n      }\n    ''',\n    name : 'riscv64 V Support')\n      have_rvv = true\n  endif\nendif\n\nlibatomic = cc.find_library('atomic', required : false)\n\ntest_8_byte_atomic = '''\n#include <stdint.h>\n\nint main(void)\n{\n  int64_t eight;\n  __atomic_fetch_add(&eight, 123, __ATOMIC_SEQ_CST);\n  return 0;\n}\n'''\n\n# We currently assume that libatomic is unnecessary for 4-byte atomic\n# operations on any reasonable architecture.\nif cc.links(\n  test_8_byte_atomic,\n  name : '8-byte __atomic_fetch_add without libatomic')\n  atomic_dep = dependency('', required: false)\nelif cc.links(\n  test_8_byte_atomic,\n  dependencies : libatomic,\n  name : '8-byte __atomic_fetch_add with libatomic')\n  atomic_dep = libatomic\nelse\n  error('8-byte atomic operations are required')\nendif\n\nversiondata = configuration_data()\nversiondata.set('PIPEWIRE_VERSION_MAJOR', pipewire_version_major)\nversiondata.set('PIPEWIRE_VERSION_MINOR', pipewire_version_minor)\nversiondata.set('PIPEWIRE_VERSION_MICRO', pipewire_version_micro)\nversiondata.set('PIPEWIRE_VERSION_NANO', pipewire_version_nano)\nversiondata.set_quoted('PIPEWIRE_API_VERSION', apiversion)\n\ncdata = configuration_data()\ncdata.set_quoted('PREFIX', prefix)\ncdata.set_quoted('PIPEWIRE_CONFDATADIR', pipewire_confdatadir)\ncdata.set_quoted('LOCALEDIR', pipewire_localedir)\ncdata.set_quoted('LIBDIR', pipewire_libdir)\ncdata.set_quoted('GETTEXT_PACKAGE', meson.project_name())\ncdata.set_quoted('PACKAGE', 'pipewire')\ncdata.set_quoted('PACKAGE_NAME', 'PipeWire')\ncdata.set_quoted('PACKAGE_STRING', 'PipeWire @0@'.format(pipewire_version))\ncdata.set_quoted('PACKAGE_TARNAME', 'pipewire')\ncdata.set_quoted('PACKAGE_URL', 'https://pipewire.org')\ncdata.set_quoted('PACKAGE_VERSION', pipewire_version)\ncdata.set_quoted('MODULEDIR', modules_install_dir)\ncdata.set_quoted('PIPEWIRE_CONFIG_DIR', pipewire_configdir)\ncdata.set_quoted('PLUGINDIR', spa_plugindir)\ncdata.set_quoted('SPADATADIR', spa_datadir)\ncdata.set_quoted('PA_ALSA_DATA_DIR', alsadatadir)\ncdata.set('RTPRIO_SERVER', get_option('rtprio-server'))\ncdata.set('RTPRIO_CLIENT', get_option('rtprio-client'))\n\nif host_machine.endian() == 'big'\n  cdata.set('WORDS_BIGENDIAN', 1)\nendif\n\ncheck_headers = [\n  ['sys/auxv.h', 'HAVE_SYS_AUXV_H'],\n  ['sys/mount.h', 'HAVE_SYS_MOUNT_H'],\n  ['sys/param.h', 'HAVE_SYS_PARAM_H'],\n  ['sys/random.h', 'HAVE_SYS_RANDOM_H'],\n  ['sys/vfs.h', 'HAVE_SYS_VFS_H'],\n  ['pwd.h', 'HAVE_PWD_H'],\n  ['grp.h', 'HAVE_GRP_H'],\n]\n\nforeach h : check_headers\n  cdata.set(h.get(1), cc.has_header(h.get(0)))\nendforeach\n\ncdata.set('HAVE_PIDFD_OPEN',\n          cc.get_define('SYS_pidfd_open', prefix: '#include <sys/syscall.h>') != '')\n\nsystemd = dependency('systemd', required: get_option('systemd'))\nsystemd_dep = dependency('libsystemd',required: get_option('systemd'))\nsummary({'systemd conf data': systemd.found()}, bool_yn: true)\nsummary({'libsystemd': systemd_dep.found()}, bool_yn: true)\ncdata.set('HAVE_SYSTEMD', systemd.found() and systemd_dep.found())\n\nlogind_dep = dependency(get_option('logind-provider'), required: get_option('logind'))\nsummary({'logind': logind_dep.found()}, bool_yn: true)\ncdata.set('HAVE_LOGIND', logind_dep.found())\n\nselinux_dep = dependency('libselinux', required: get_option('selinux'))\nsummary({'libselinux': selinux_dep.found()}, bool_yn: true)\ncdata.set('HAVE_SELINUX', selinux_dep.found())\n\nconfiginc = include_directories('.')\nincludes_inc = include_directories('include')\npipewire_inc = include_directories('src')\n\nmakedata = configuration_data()\nmakedata.set('BUILD_ROOT', meson.project_build_root())\nmakedata.set('SOURCE_ROOT', meson.project_source_root())\nmakedata.set('VERSION', pipewire_version)\nif version_arr.length() == 4\n  makedata.set('TAG', 'HEAD')\nelse\n  makedata.set('TAG', pipewire_version)\nendif\n\nconfigure_file(input : 'Makefile.in',\n  output : 'Makefile',\n  configuration : makedata)\n\n# Find dependencies\nmathlib = cc.find_library('m', required : false)\nmathlib_native = cc_native.find_library('m', required : false)\nrt_lib = cc.find_library('rt', required : false) # clock_gettime\ndl_lib = cc.find_library('dl', required : false)\npthread_lib = dependency('threads')\ndbus_dep = dependency('dbus-1', required : get_option('dbus'))\nsummary({'dbus (Bluetooth, rt, portal, pw-reserve)': dbus_dep.found()}, bool_yn: true, section: 'Misc dependencies')\ncdata.set('HAVE_DBUS', dbus_dep.found())\nsdl_dep = dependency('sdl2', required : get_option('sdl2'))\nsummary({'SDL2 (video examples)': sdl_dep.found()}, bool_yn: true, section: 'Misc dependencies')\ndrm_dep = dependency('libdrm', required : false)\nfftw_dep = dependency('fftw3f', required : false)\nsummary({'fftw3f (filter-chain convolver)': fftw_dep.found()}, bool_yn: true, section: 'Misc dependencies')\ncdata.set('HAVE_FFTW', fftw_dep.found())\n\nif get_option('readline').disabled()\n  readline_dep = dependency('', required: false)\nelse\n  readline_dep = dependency('readline', required : false)\n  if not readline_dep.found()\n    readline_dep = cc.find_library('readline', required : get_option('readline'))\n  endif\nendif\n\n# Both the FFmpeg SPA plugin and the pw-cat FFmpeg integration use libavcodec.\n# But only the latter also needs libavformat and libavutil.\n# Search for these libraries here, globally, so both of these subprojects can reuse the results.\npw_cat_ffmpeg = get_option('pw-cat-ffmpeg')\nffmpeg = get_option('ffmpeg')\nif pw_cat_ffmpeg.allowed() or ffmpeg.allowed()\n  avcodec_dep = dependency('libavcodec', required: pw_cat_ffmpeg.enabled() or ffmpeg.enabled())\n  avformat_dep = dependency('libavformat', required: pw_cat_ffmpeg.enabled())\n  avutil_dep = dependency('libavutil', required: pw_cat_ffmpeg.enabled() or ffmpeg.enabled())\n  swscale_dep = dependency('libswscale', required: pw_cat_ffmpeg.enabled() or ffmpeg.enabled())\nelse\n  avcodec_dep = dependency('', required: false)\nendif\ncdata.set('HAVE_PW_CAT_FFMPEG_INTEGRATION', pw_cat_ffmpeg.allowed())\n\nopus_dep = dependency('opus', required : get_option('opus'))\nsummary({'opus (Bluetooth, RTP)': opus_dep.found()}, bool_yn: true, section: 'Misc dependencies')\ncdata.set('HAVE_OPUS', opus_dep.found())\n\nsummary({'readline (for pw-cli)': readline_dep.found()}, bool_yn: true, section: 'Misc dependencies')\ncdata.set('HAVE_READLINE', readline_dep.found())\nncurses_dep = dependency('ncursesw', required : false)\nsndfile_dep = dependency('sndfile', version : '>= 1.0.20', required : get_option('sndfile'))\nsummary({'sndfile': sndfile_dep.found()}, bool_yn: true, section: 'pw-cat/pw-play/pw-dump/filter-chain')\ncdata.set('HAVE_SNDFILE', sndfile_dep.found())\npulseaudio_dep = dependency('libpulse', required : get_option('libpulse'))\nsummary({'libpulse': pulseaudio_dep.found()}, bool_yn: true, section: 'Streaming between daemons')\navahi_dep = dependency('avahi-client', required : get_option('avahi'))\nsummary({'Avahi DNS-SD (Zeroconf)': avahi_dep.found()}, bool_yn: true,\n  section: 'Streaming between daemons')\n\nx11_dep = dependency('x11-xcb', required : get_option('x11'))\nsummary({'X11 (x11-bell)': x11_dep.found()}, bool_yn: true,\n  section: 'Misc dependencies')\n\nxfixes_dep = dependency('xfixes', required : get_option('x11-xfixes'), version: '>= 6')\ncdata.set('HAVE_XFIXES_6', xfixes_dep.found())\n\ncanberra_dep = dependency('libcanberra', required : get_option('libcanberra'))\nsummary({'libcanberra (x11-bell)': canberra_dep.found()}, bool_yn: true,\n  section: 'Misc dependencies')\n\nlibusb_dep = dependency('libusb-1.0', required : get_option('libusb'))\nsummary({'libusb (Bluetooth quirks)': libusb_dep.found()}, bool_yn: true, section: 'Backend')\ncdata.set('HAVE_LIBUSB', libusb_dep.found())\n\ncap_lib = dependency('libcap', required : false)\ncdata.set('HAVE_LIBCAP', cap_lib.found())\n\nglib2_dep = dependency('glib-2.0', required : get_option('flatpak'))\nsummary({'GLib-2.0 (Flatpak support)': glib2_dep.found()}, bool_yn: true, section: 'Misc dependencies')\nflatpak_support = glib2_dep.found()\ncdata.set('HAVE_GLIB2', flatpak_support)\n\ngsettings_gio_dep = dependency('gio-2.0', version : '>= 2.26.0', required : get_option('gsettings'))\nsummary({'GIO (GSettings)': gsettings_gio_dep.found()}, bool_yn: true, section: 'Misc dependencies')\nif not gsettings_gio_dep.found() and get_option('gsettings-pulse-schema').enabled()\n  error('`gsettings-pulse-schema` is enabled but `gio` was not found.')\nendif\n\ngst_option = get_option('gstreamer')\ngst_deps_def = {\n  'glib-2.0': {'version': '>=2.32.0'},\n  'gobject-2.0': {},\n  'gmodule-2.0': {},\n  'gio-2.0': {},\n  'gio-unix-2.0': {},\n  'gstreamer-1.0': {'version': '>= 1.10.0'},\n  'gstreamer-base-1.0': {},\n  'gstreamer-video-1.0': {},\n  'gstreamer-audio-1.0': {},\n  'gstreamer-allocators-1.0': {},\n}\n\ngst_dep = []\ngst_dma_drm_found = false\nforeach depname, kwargs: gst_deps_def\n  dep = dependency(depname, required: gst_option, kwargs: kwargs)\n  summary({depname: dep.found()}, bool_yn: true, section: 'GStreamer modules')\n  if not dep.found()\n    # Beware, there's logic below depending on the array clear here!\n    gst_dep = []\n    if get_option('gstreamer-device-provider').enabled()\n      error('`gstreamer-device-provider` is enabled but `@0@` was not found.'.format(depname))\n    endif\n    break\n  endif\n  gst_dep += [dep]\n\n  if depname == 'gstreamer-allocators-1.0' and dep.version().version_compare('>= 1.23.1')\n    gst_dma_drm_found = true\n  endif\nendforeach\n\n# This code relies on the array being empty if any dependency was not found\ngst_dp_found = gst_dep.length() > 0\nsummary({'gstreamer-device-provider': gst_dp_found}, bool_yn: true, section: 'Backend')\n\ncdata.set('HAVE_GSTREAMER_DEVICE_PROVIDER', get_option('gstreamer-device-provider').allowed())\n\nsummary({'gstreamer DMA_DRM support': gst_dma_drm_found}, bool_yn: true, section: 'Backend')\ncdata.set('HAVE_GSTREAMER_DMA_DRM', gst_dma_drm_found)\n\nif get_option('echo-cancel-webrtc').disabled()\n  webrtc_dep = dependency('', required: false)\n  summary({'WebRTC Echo Canceling': webrtc_dep.found()}, bool_yn: false, section: 'Misc dependencies')\nelse\n  webrtc_dep = dependency('webrtc-audio-processing-2',\n    version : ['>= 2.0' ],\n    required : false)\n  cdata.set('HAVE_WEBRTC2', webrtc_dep.found())\n  if webrtc_dep.found()\n    summary({'WebRTC Echo Canceling >= 2.0': webrtc_dep.found()}, bool_yn: true, section: 'Misc dependencies')\n  else\n    webrtc_dep = dependency('webrtc-audio-processing-1',\n      version : ['>= 1.2' ],\n      required : false)\n    cdata.set('HAVE_WEBRTC1', webrtc_dep.found())\n    if webrtc_dep.found()\n      summary({'WebRTC Echo Canceling >= 1.2': webrtc_dep.found()}, bool_yn: true, section: 'Misc dependencies')\n    else\n      webrtc_dep = dependency('webrtc-audio-processing',\n        version : ['>= 0.2', '< 1.0'],\n        required : false)\n      cdata.set('HAVE_WEBRTC', webrtc_dep.found())\n      if webrtc_dep.found()\n        summary({'WebRTC Echo Canceling < 1.0': webrtc_dep.found()}, bool_yn: true, section: 'Misc dependencies')\n      else\n        # If deps are not found on the system but it's enabled, try to fallback to the subproject\n        webrtc_dep = dependency('webrtc-audio-processing-2',\n          version : ['>= 2.0' ],\n          required : get_option('echo-cancel-webrtc'))\n        cdata.set('HAVE_WEBRTC2', webrtc_dep.found())\n        summary({'WebRTC Echo Canceling > 2.0': webrtc_dep.found()}, bool_yn: true, section: 'Misc dependencies')\n      endif\n    endif\n  endif\nendif\n\n# On FreeBSD and MidnightBSD, epoll-shim library is required for eventfd() and timerfd()\nepoll_shim_dep = (host_machine.system() == 'freebsd' or host_machine.system() == 'midnightbsd'\n    ? dependency('epoll-shim', required: true)\n    : dependency('', required: false))\n\nlibinotify_dep = (host_machine.system() == 'freebsd' or host_machine.system() == 'midnightbsd'\n    ? dependency('libinotify', required: true)\n    : dependency('', required: false))\n\n# On FreeBSD and MidnightBSD, libintl library is required for gettext\nlibintl_dep = cc.find_library('intl', required: false)\nif not libintl_dep.found()\n    libintl_dep = dependency('intl', required: false)\nendif\nsummary({'intl support': libintl_dep.found()}, bool_yn: true)\n\nneed_alsa = get_option('pipewire-alsa').enabled() or 'media-session' in get_option('session-managers')\nalsa_dep = dependency('alsa', version : '>=1.2.10', required: need_alsa)\nsummary({'pipewire-alsa': alsa_dep.found()}, bool_yn: true)\n\nif host_machine.system() == 'freebsd' or host_machine.system() == 'midnightbsd'\n# On FreeBSD and MidnightBSD the OpenSSL library may come from base or a package.\n# Check for a package first and fallback to the base library if we can't find it via pkgconfig\n    openssl_lib = dependency('openssl', required: false)\n    if not openssl_lib.found()\n        openssl_lib = declare_dependency(link_args : [ '-lssl', '-lcrypto'])\n    endif\nelse\n    openssl_lib = dependency('openssl', required: get_option('raop'))\nendif\nsummary({'OpenSSL (for raop-sink)': openssl_lib.found()}, bool_yn: true)\n\nlibffado_dep = dependency('libffado', required: get_option('libffado'))\nsummary({'ffado': libffado_dep.found()}, bool_yn: true)\nglib2_snap_dep = dependency('glib-2.0', required : get_option('snap'))\ngio2_snap_dep = dependency('gio-2.0', required : get_option('snap'))\napparmor_snap_dep = dependency('libapparmor', required : get_option('snap'))\nif dependency('snapd-glib-2', required: false).found()\n  snap_dep = dependency('snapd-glib-2', required : get_option('snap'))\nelse\n  snap_dep = dependency('snapd-glib', required : get_option('snap'))\nendif\nif snap_dep.found() and glib2_snap_dep.found() and gio2_snap_dep.found() and apparmor_snap_dep.found()\n  cdata.set('HAVE_SNAP', true)\n  snap_deps = [glib2_snap_dep, gio2_snap_dep, snap_dep, apparmor_snap_dep]\nendif\nsummary({'GLib-2.0 (Snap support)': glib2_snap_dep.found()}, bool_yn: true, section: 'Misc dependencies')\nsummary({'Gio-2.0 (Snap support)': gio2_snap_dep.found()}, bool_yn: true, section: 'Misc dependencies')\nsummary({'Apparmor (Snap support)': apparmor_snap_dep.found()}, bool_yn: true, section: 'Misc dependencies')\nsummary({'Snapd-glib (Snap support)': snap_dep.found()}, bool_yn: true, section: 'Misc dependencies')\n\ncheck_functions = [\n  ['gettid', '#include <unistd.h>', ['-D_GNU_SOURCE'], []],\n  ['memfd_create', '#include <sys/mman.h>', ['-D_GNU_SOURCE'], []],\n  ['getrandom', '#include <stddef.h>\\n#include <sys/random.h>', ['-D_GNU_SOURCE'], []],\n  ['random_r', '#include <stdlib.h>', ['-D_GNU_SOURCE'], []],\n  ['reallocarray', '#include <stdlib.h>', ['-D_GNU_SOURCE'], []],\n  ['sigabbrev_np', '#include <string.h>', ['-D_GNU_SOURCE'], []],\n  ['XSetIOErrorExitHandler', '#include <X11/Xlib.h>', [], [x11_dep]],\n  ['malloc_trim', '#include <malloc.h>', [], []],\n  ['malloc_info', '#include <malloc.h>', [], []],\n]\n\nforeach f : check_functions\n  cdata.set('HAVE_' + f.get(0).to_upper(),\n            cc.has_function(f.get(0),\n                            prefix: f.get(1),\n                            args: f.get(2),\n                            dependencies: f.get(3)))\nendforeach\n\ninstalled_tests_metadir = pipewire_datadir / 'installed-tests' / pipewire_name\ninstalled_tests_execdir = pipewire_libexecdir / 'installed-tests' / pipewire_name\ninstalled_tests_enabled = get_option('installed_tests').allowed()\ninstalled_tests_template = files('template.test.in')\n\nif get_option('tests').allowed()\n  gstack = find_program('gstack', required : false)\n  cdata.set('HAVE_GSTACK', gstack.found())\nendif\n\nsubdir('po')\nsubdir('spa')\nsubdir('src')\n\nif get_option('tests').allowed()\n  subdir('test')\nendif\n\nconfigure_file(output : 'config.h',\n               configuration : cdata)\n\nif get_option('pipewire-jack').allowed()\n  subdir('pipewire-jack')\nendif\nif get_option('pipewire-v4l2').allowed()\n  subdir('pipewire-v4l2')\nendif\n\nif alsa_dep.found()\n  subdir('pipewire-alsa/alsa-plugins')\n  subdir('pipewire-alsa/conf')\n  subdir('pipewire-alsa/tests')\nendif\n\ngenerate_docs = get_option('man').enabled() or get_option('docs').enabled()\nif get_option('man').allowed() or get_option('docs').allowed()\n  doxygen = find_program('doxygen', required : generate_docs, version : '>=1.9')\n  pymod = import('python')\n  python = pymod.find_installation('python3', required: generate_docs)\n  generate_docs = doxygen.found() and python.found()\nendif\n\ninstall_docs = get_option('docs').require(generate_docs).allowed()\ninstall_man = get_option('man').require(generate_docs).allowed()\n\nsummary({'Documentation ': install_docs}, bool_yn: true)\nsummary({'Man pages ': install_man}, bool_yn: true)\n\nif generate_docs\n  subdir('doc')\nendif\n\nsetenv = find_program('pw-uninstalled.sh')\nrun_target('pw-uninstalled',\n  command : [setenv,\n             '-b@0@'.format(meson.project_build_root()),\n             '-v@0@'.format(pipewire_version)]\n)\n\ndevenv = environment()\n\nbuilddir = meson.project_build_root()\nsrcdir = meson.project_source_root()\n\ndevenv.set('PIPEWIRE_CONFIG_DIR', pipewire_dep.get_variable('confdatadir'))\ndevenv.set('PIPEWIRE_MODULE_DIR', pipewire_dep.get_variable('moduledir'))\n\ndevenv.set('SPA_PLUGIN_DIR', spa_dep.get_variable('plugindir'))\ndevenv.set('SPA_DATA_DIR', spa_dep.get_variable('datadir'))\n\ndevenv.set('ACP_PATHS_DIR', srcdir / 'spa' / 'plugins' / 'alsa' / 'mixer' / 'paths')\ndevenv.set('ACP_PROFILES_DIR', srcdir / 'spa' / 'plugins' / 'alsa' / 'mixer' / 'profile-sets')\n\ndevenv.prepend('GST_PLUGIN_PATH', builddir / 'src'/ 'gst')\ndevenv.prepend('ALSA_PLUGIN_DIR', builddir / 'pipewire-alsa' / 'alsa-plugins')\ndevenv.prepend('LD_LIBRARY_PATH', builddir / 'pipewire-jack' / 'src')\n\ndevenv.set('PW_UNINSTALLED', '1')\n\nmeson.add_devenv(devenv)\n"
        },
        {
          "name": "meson_options.txt",
          "type": "blob",
          "size": 12.69140625,
          "content": "option('docdir',\n       type : 'string',\n       description : 'Directory for installing documentation to (defaults to pipewire_datadir/doc/meson.project_name() )')\noption('docs',\n       description: 'Documentation',\n       type: 'feature',\n       value: 'disabled')\noption('man',\n       description: 'Manual pages',\n       type: 'feature',\n       value: 'disabled')\noption('examples',\n       description: 'Build examples',\n       type: 'feature',\n       value: 'enabled')\noption('tests',\n       description: 'Build tests',\n       type: 'feature',\n       value: 'enabled',\n       yield : true)\noption('installed_tests',\n       description: 'Install manual and automated test executables',\n       type: 'feature',\n       value: 'disabled')\noption('gstreamer',\n       description: 'Build GStreamer plugins',\n       type: 'feature',\n       value: 'auto')\noption('gstreamer-device-provider',\n       description: 'Build GStreamer device provider plugin',\n       type: 'feature',\n       value: 'auto')\noption('systemd',\n       description: 'Enable systemd integration',\n       type: 'feature',\n       value: 'auto')\noption('logind',\n       description: 'Enable logind integration',\n       type: 'feature',\n       value: 'auto')\noption('logind-provider',\n       description: 'Provider for logind integration',\n       type: 'combo',\n       choices: ['libelogind', 'libsystemd'],\n       value: 'libsystemd')\noption('systemd-system-service',\n       description: 'Install systemd system service file',\n       type: 'feature',\n       value: 'disabled')\noption('systemd-user-service',\n       description: 'Install systemd user service file (ignored without systemd)',\n       type: 'feature',\n       value: 'enabled')\noption('selinux',\n       description: 'Enable SELinux integration',\n       type: 'feature',\n       value: 'auto')\noption('pipewire-alsa',\n       description: 'Enable pipewire-alsa integration',\n       type: 'feature',\n       value: 'auto')\noption('pipewire-jack',\n       description: 'Enable pipewire-jack integration',\n       type: 'feature',\n       value: 'enabled')\noption('pipewire-v4l2',\n       description: 'Enable pipewire-v4l2 integration',\n       type: 'feature',\n       value: 'enabled')\noption('jack-devel',\n       description: 'Install jack development files',\n       type: 'boolean',\n       value: false)\noption('libjack-path',\n       description: 'Where to install the libjack.so library',\n       type: 'string')\noption('libv4l2-path',\n       description: 'Where to install the libpw-v4l2.so library',\n       type: 'string')\noption('spa-plugins',\n       description: 'Enable spa plugins integration',\n       type: 'feature',\n       value: 'enabled')\noption('alsa',\n       description: 'Enable alsa spa plugin integration',\n       type: 'feature',\n       value: 'auto')\noption('audiomixer',\n       description: 'Enable audiomixer spa plugin integration',\n       type: 'feature',\n       value: 'enabled')\noption('audioconvert',\n       description: 'Enable audioconvert spa plugin integration',\n       type: 'feature',\n       value: 'enabled')\noption('resampler-precomp-tuples',\n\tdescription: 'Array of \"inrate,outrate[,quality]\" tuples to precompute resampler coefficients for',\n\ttype: 'array',\n\tvalue: [ '32000,44100', '32000,48000', '48000,44100', '44100,48000' ])\noption('bluez5',\n       description: 'Enable bluez5 spa plugin integration',\n       type: 'feature',\n       value: 'auto')\noption('bluez5-backend-hsp-native',\n       description: 'Enable HSP in native backend in bluez5 spa plugin',\n       type: 'feature',\n       value: 'enabled')\noption('bluez5-backend-hfp-native',\n       description: 'Enable HFP in native backend in bluez5 spa plugin',\n       type: 'feature',\n       value: 'enabled')\noption('bluez5-backend-native-mm',\n       description: 'Enable ModemManager in native backend in bluez5 spa plugin',\n       type: 'feature',\n       value: 'disabled')\noption('bluez5-backend-ofono',\n       description: 'Enable oFono HFP backend in bluez5 spa plugin (no dependency on oFono)',\n       type: 'feature',\n       value: 'enabled')\noption('bluez5-backend-hsphfpd',\n       description: 'Enable hsphfpd backend in bluez5 spa plugin (no dependency on hsphfpd)',\n       type: 'feature',\n       value: 'enabled')\noption('bluez5-codec-aptx',\n        description: 'Enable AptX Qualcomm open source codec implementation',\n        type: 'feature',\n        value: 'auto')\noption('bluez5-codec-ldac',\n        description: 'Enable LDAC Sony open source codec implementation',\n        type: 'feature',\n        value: 'auto')\noption('bluez5-codec-aac',\n        description: 'Enable Fraunhofer FDK AAC open source codec implementation',\n        type: 'feature',\n        value: 'auto')\noption('bluez5-codec-lc3plus',\n        description: 'Enable LC3plus open source codec implementation',\n        type: 'feature',\n        value: 'auto')\noption('bluez5-codec-opus',\n        description: 'Enable Opus open source codec implementation',\n        type: 'feature',\n        value: 'auto')\noption('bluez5-codec-lc3',\n        description: 'Enable LC3 open source codec implementation',\n        type: 'feature',\n        value: 'auto')\noption('bluez5-codec-g722',\n        description: 'Enable G722 open source codec implementation',\n        type: 'feature',\n        value: 'auto')\noption('control',\n       description: 'Enable control spa plugin integration',\n       type: 'feature',\n       value: 'enabled')\noption('audiotestsrc',\n       description: 'Enable audiotestsrc spa plugin integration',\n       type: 'feature',\n       value: 'enabled')\noption('ffmpeg',\n       description: 'Enable ffmpeg spa plugin integration',\n       type: 'feature',\n       value: 'disabled')\noption('jack',\n       description: 'Enable jack spa plugin integration',\n       type: 'feature',\n       value: 'auto')\noption('support',\n       description: 'Enable support spa plugin integration',\n       type: 'feature',\n       value: 'enabled')\noption('evl',\n       description: 'Enable EVL support spa plugin integration',\n       type: 'feature',\n       value: 'disabled')\noption('test',\n       description: 'Enable test spa plugin integration',\n       type: 'feature',\n       value: 'disabled')\noption('v4l2',\n       description: 'Enable v4l2 spa plugin integration',\n       type: 'feature',\n       value: 'auto')\noption('dbus',\n       description: 'Enable code that depends on dbus',\n       type: 'feature',\n       value: 'enabled')\noption('libcamera',\n       description: 'Enable libcamera spa plugin integration',\n       type: 'feature',\n       value: 'auto')\noption('videoconvert',\n       description: 'Enable videoconvert spa plugin integration',\n       type: 'feature',\n       value: 'enabled')\noption('videotestsrc',\n       description: 'Enable videotestsrc spa plugin integration',\n       type: 'feature',\n       value: 'enabled')\noption('volume',\n       description: 'Build the legacy volume spa plugin',\n       type: 'feature',\n       value: 'disabled')\noption('vulkan',\n       description: 'Enable vulkan spa plugin integration',\n       type: 'feature',\n       value: 'disabled')\noption('pw-cat',\n       description: 'Build pw-cat/pw-play/pw-record',\n       type: 'feature',\n       value: 'auto')\noption('pw-cat-ffmpeg',\n       description: 'Enable FFmpeg integration in pw-cat/pw-play/pw-record',\n       type: 'feature',\n       value: 'disabled')\noption('udev',\n       description: 'Enable Udev integration',\n       type: 'feature',\n       value: 'auto')\noption('udevrulesdir',\n       type : 'string',\n       description : 'Directory for udev rules (defaults to /lib/udev/rules.d)')\noption('systemd-system-unit-dir',\n       type : 'string',\n       description : 'Directory for system systemd units (defaults to /usr/lib/systemd/system)')\noption('systemd-user-unit-dir',\n       type : 'string',\n       description : 'Directory for user systemd units (defaults to /usr/lib/systemd/user)')\noption('sdl2',\n       description: 'Enable code that depends on SDL 2',\n       type: 'feature',\n       value: 'auto')\noption('sndfile',\n       description: 'Enable code that depends on libsndfile',\n       type: 'feature',\n       value: 'auto')\noption('libmysofa',\n       description: 'Enable code that depends on libmysofa',\n       type: 'feature',\n       value: 'auto')\noption('libpulse',\n       description: 'Enable code that depends on libpulse',\n       type: 'feature',\n       value: 'auto')\noption('roc',\n       description: 'Enable code that depends on roc toolkit',\n       type: 'feature',\n       value: 'auto')\noption('avahi',\n       description: 'Enable code that depends on avahi',\n       type: 'feature',\n       value: 'auto')\noption('echo-cancel-webrtc',\n       description : 'Enable WebRTC-based echo canceller',\n       type : 'feature',\n       value : 'auto')\noption('libusb',\n       description: 'Enable code that depends on libusb',\n       type: 'feature',\n       value: 'auto')\noption('session-managers',\n       description : 'Session managers to build (can be [] for none or an absolute path)',\n       type : 'array',\n       value : ['wireplumber'])\noption('raop',\n       description: 'Enable module for Remote Audio Output Protocol',\n       type: 'feature',\n       value: 'auto')\noption('lv2',\n       description: 'Enable loading of LV2 plugins',\n       type: 'feature',\n       value: 'auto')\noption('x11',\n       description: 'Enable code that depends on X11',\n       type: 'feature',\n       value: 'auto')\noption('x11-xfixes',\n       description: 'Enable code that depends on XFixes',\n       type: 'feature',\n       value: 'auto')\noption('libcanberra',\n       description: 'Enable code that depends on libcanberra',\n       type: 'feature',\n       value: 'auto')\noption('legacy-rtkit',\n       description: 'Build legacy rtkit module',\n       type: 'boolean',\n       value: true)\noption('avb',\n       description: 'Enable AVB code',\n       type: 'feature',\n       value: 'auto')\noption('flatpak',\n       description: 'Enable Flatpak support',\n       type: 'feature',\n       value: 'enabled')\noption('readline',\n       description: 'Enable code that depends on libreadline',\n       type: 'feature',\n       value: 'auto')\noption('gsettings',\n       description: 'Enable code that depends on gsettings',\n       type: 'feature',\n       value: 'auto')\noption('compress-offload',\n       description: 'Enable ALSA Compress-Offload support',\n       type: 'feature',\n       value: 'auto')\noption('pam-defaults-install',\n       description: 'Install limits.d file modifying defaults for all PAM users. Only for old kernels/systemd!',\n       type: 'boolean',\n       value: false)\noption('pam-memlock-default',\n       description : 'The default memlock value for any PAM user in kilobytes. Multiples of 64 recommended.',\n       type : 'integer',\n       min: 640,\n       value: 8192)\noption('rlimits-install',\n       description: 'Install PAM limits.d file. Voids all following rlimits-* options, if false',\n       type: 'boolean',\n       value: true)\noption('rlimits-match',\n       description : 'PAM match rule for the generated limits.d file. @<name> denotes matching a group.',\n       type : 'string',\n       value: '@pipewire')\noption('rtprio-server',\n       description : 'PipeWire server realtime priority',\n       type : 'integer',\n       min: 11,\n       max: 99,\n       value: 88)\noption('rtprio-client',\n       description : 'PipeWire clients realtime priority',\n       type : 'integer',\n       min: 11,\n       max: 99,\n       value: 83)\noption('rlimits-rtprio',\n       description : 'RR and FIFO scheduler priority permitted for realtime threads of the matching user(s)',\n       type : 'integer',\n       min: 11,\n       max: 99,\n       value: 95)\noption('rlimits-memlock',\n       description : 'kB of memory each process of the user matched by the rule can lock. Can be unlimited .',\n       type : 'string',\n       value: '4194304')\noption('rlimits-nice',\n       description : 'Not niceness permitted for non-realtime threads of the matching user(s)',\n       type : 'integer',\n       min: -20,\n       max: -1,\n       value: -19)\noption('opus',\n       description: 'Enable code that depends on opus',\n       type: 'feature',\n       value: 'auto')\noption('libffado',\n       description: 'Enable code that depends on libffado',\n       type: 'feature',\n       value: 'auto')\noption('gsettings-pulse-schema',\n       description: 'Install gsettings schema for pulseaudio',\n       type: 'feature',\n       value: 'auto')\noption('snap',\n       description : 'Enable Snap permissions support.',\n       type : 'feature',\n       value : 'auto')\noption('doc-prefix-value',\n       description : 'Installation prefix to show in documentation instead of the actual value.',\n       type : 'string',\n       value : '')\noption('doc-sysconfdir-value',\n       description : 'Sysconf data directory to show in documentation instead of the actual value.',\n       type : 'string',\n       value : '')\noption('ebur128',\n       description: 'Enable code that depends on ebur128',\n       type: 'feature',\n       value: 'auto')\n"
        },
        {
          "name": "pipewire-alsa",
          "type": "tree",
          "content": null
        },
        {
          "name": "pipewire-jack",
          "type": "tree",
          "content": null
        },
        {
          "name": "pipewire-v4l2",
          "type": "tree",
          "content": null
        },
        {
          "name": "po",
          "type": "tree",
          "content": null
        },
        {
          "name": "pw-uninstalled.sh",
          "type": "blob",
          "size": 2.166015625,
          "content": "#!/usr/bin/env bash\n\nset -e\n\nSCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\n\nwhile getopts \":b:v:\" opt; do\n\tcase ${opt} in\n\t\tb)\n\t\t\tBUILDDIR=${OPTARG}\n\t\t\t;;\n\t\tv)\n\t\t\tVERSION=${OPTARG}\n\t\t\techo \"Version: ${VERSION}\"\n\t\t\t;;\n\t\t\\?)\n\t\t\techo \"Invalid option: -${OPTARG}\"\n\t\t\texit 1\n\t\t\t;;\n\t\t:)\n\t\t\techo \"Option -${OPTARG} requires an argument\"\n\t\t\texit 1\n\t\t\t;;\n\tesac\ndone\n\nif [ -z \"${BUILDDIR}\" ]; then\n\tBUILDDIR=${SCRIPT_DIR}/builddir\n\techo \"Using default build directory: ${BUILDDIR}\"\nfi\n\nif [ ! -d \"${BUILDDIR}\" ]; then\n\techo \"Invalid build directory: ${BUILDDIR}\"\n\texit 1\nfi\n\n# the config file read by the daemon\nexport PIPEWIRE_CONFIG_DIR=\"${BUILDDIR}/src/daemon\"\n# the directory with SPA plugins\nexport SPA_PLUGIN_DIR=\"${BUILDDIR}/spa/plugins\"\nexport SPA_DATA_DIR=\"${SCRIPT_DIR}/spa/plugins\"\n# the directory with pipewire modules\nexport PIPEWIRE_MODULE_DIR=\"${BUILDDIR}/src/modules\"\nexport PATH=\"${BUILDDIR}/src/daemon:${BUILDDIR}/src/tools:${BUILDDIR}/src/media-session:${BUILDDIR}/src/examples:${BUILDDIR}/pipewire-v4l2/src:${PATH}\"\nexport LD_LIBRARY_PATH=\"${BUILDDIR}/src/pipewire/:${BUILDDIR}/pipewire-jack/src/${LD_LIBRARY_PATH+\":$LD_LIBRARY_PATH\"}\"\nexport GST_PLUGIN_PATH=\"${BUILDDIR}/src/gst/${GST_PLUGIN_PATH+\":${GST_PLUGIN_PATH}\"}\"\n# the directory with card profiles and paths\nexport ACP_PATHS_DIR=\"${SCRIPT_DIR}/spa/plugins/alsa/mixer/paths\"\nexport ACP_PROFILES_DIR=\"${SCRIPT_DIR}/spa/plugins/alsa/mixer/profile-sets\"\n# ALSA plugin directory\nexport ALSA_PLUGIN_DIR=\"${BUILDDIR}/pipewire-alsa/alsa-plugins\"\n\nexport PW_BUILDDIR=$BUILDDIR\nexport PW_UNINSTALLED=1\nexport PKG_CONFIG_PATH=\"${BUILDDIR}/meson-uninstalled/:${PKG_CONFIG_PATH}\"\n\nif [ -d \"${BUILDDIR}/subprojects/wireplumber\" ]; then\n\t# FIXME: find a nice, shell-neutral way to specify a prompt\n\t\"${SCRIPT_DIR}\"/subprojects/wireplumber/wp-uninstalled.sh -b\"${BUILDDIR}\"/subprojects/wireplumber \"${SHELL}\"\nelif [ -d \"${BUILDDIR}/subprojects/media-session\" ]; then\n\t# FIXME: find a nice, shell-neutral way to specify a prompt\n\t\"${SCRIPT_DIR}\"/subprojects/media-session/media-session-uninstalled.sh -b\"${BUILDDIR}\"/subprojects/media-session \"${SHELL}\"\nelse\n\t# FIXME: find a nice, shell-neutral way to specify a prompt\n\t${SHELL}\nfi\n"
        },
        {
          "name": "spa",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "subprojects",
          "type": "tree",
          "content": null
        },
        {
          "name": "template.test.in",
          "type": "blob",
          "size": 0.03125,
          "content": "[Test]\nType=session\nExec=@exec@\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}