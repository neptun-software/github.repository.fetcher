{
  "metadata": {
    "timestamp": 1736710047184,
    "page": 662,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "sahib/rmlint",
      "stars": 1983,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 1.67578125,
          "content": "---\nLanguage:        Cpp\nBasedOnStyle:  Google\nAccessModifierOffset: -1\nConstructorInitializerIndentWidth: 4\nAlignEscapedNewlinesLeft: true\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: false\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: false\nAlwaysBreakTemplateDeclarations: true\nAlwaysBreakBeforeMultilineStrings: true\nBreakBeforeBinaryOperators: false\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nBinPackParameters: true\nColumnLimit: 90\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nDerivePointerAlignment: true\nExperimentalAutoDetectBinPacking: true\nIndentCaseLabels: false\nIndentWrappedFunctionNames: false\nIndentFunctionDeclarationAfterType: false\nMaxEmptyLinesToKeep: 1\nKeepEmptyLinesAtTheStartOfBlocks: false\nNamespaceIndentation: None\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: false\nPenaltyBreakBeforeFirstCallParameter: 1\nPenaltyBreakComment: 300\nPenaltyBreakString: 1000\nPenaltyBreakFirstLessLess: 120\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 200\nPointerAlignment: Left\nSpacesBeforeTrailingComments: 2\nCpp11BracedListStyle: true\nStandard:        Auto\nIndentWidth:     4\nTabWidth:        8\nUseTab:          Never\nBreakBeforeBraces: Attach\nSpacesInParentheses: false\nSpacesInAngles:  false\nSpaceInEmptyParentheses: false\nSpacesInCStyleCastParentheses: false\nSpacesInContainerLiterals: true\nSpaceBeforeAssignmentOperators: true\nContinuationIndentWidth: 4\nCommentPragmas:  '^ IWYU pragma:'\nForEachMacros:   [ foreach, Q_FOREACH, BOOST_FOREACH ]\nSpaceBeforeParens: Never\nDisableFormat:   false\n...\n\n"
        },
        {
          "name": ".clang_complete",
          "type": "blob",
          "size": 0.70703125,
          "content": "-pthread\n-std=c99\n-Wall\n-Wextra\n-W \n-Winit-self \n-Wstrict-aliasing \n-Wmissing-include-dirs\n-Wuninitialized\n-Wstrict-prototypes\n-std=c99\n-pipe\n-fPIC\n-g\n-D_GNU_SOURCE \n-DHAVE_STAT64=0\n-I/usr/include/gtk-3.0\n-I/usr/include/at-spi2-atk/2.0\n-I/usr/include/gtk-3.0\n-I/usr/include/gio-unix-2.0/\n-I/usr/include/cairo\n-I/usr/include/pango-1.0\n-I/usr/include/atk-1.0\n-I/usr/include/cairo\n-I/usr/include/pixman-1 \n-I/usr/include/freetype2\n-I/usr/include/libpng16 \n-I/usr/include/harfbuzz \n-I/usr/include/freetype2 \n-I/usr/include/harfbuzz \n-I/usr/include/libdrm\n-I/usr/include/libpng16 \n-I/usr/include/gdk-pixbuf-2.0\n-I/usr/include/libpng16\n-I/usr/include/glib-2.0\n-I/usr/lib/glib-2.0/include \n-I/usr/include/blkid -I/usr/include/uuid\n"
        },
        {
          "name": ".format.sh",
          "type": "blob",
          "size": 0.7392578125,
          "content": "#!/bin/sh\n\nFILES=$(find src lib -iname '*.[ch]')\n\n# Format the files according to the style defined in .clang-format\nclang-format -i -style=file ${FILES} || (echo 'clang-format failed'; exit 1);\n\n# clang-format sometimes adds windows like line-endins (\\r\\n).\n# Fix this by issueing dos2unix on every file.\ndos2unix --quiet ${FILES} || (echo 'dos2unix failed'; exit 2);\n\n# Some bad editors might save files with a bad encoding.\n# Since a few source code files contain unicode, we fix this with iconv.\nfor path in ${FILES}; do\n    tmpfile=$(mktemp 'rmlint.XXXXXXXX.utf8')\n    if iconv -t \"utf-8\" -o \"$tmpfile\" < \"${path}\" ; then\n      mv \"$tmpfile\" \"${path}\"\n    else\n      echo \"iconv failed on ${path}\" 1>&2\n      rm -f \"$tmpfile\"\n      exit 3\n    fi\ndone;\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.318359375,
          "content": "*.o\n*.gcda\n*.gcno\n*.swp\n*.log\n*.status\n*.mo\nrmlint\nrmlint.sh\nrmlint.json\nsrc/config.h\ndocs/rmlint.1.gz\ndocs/rmlint.1\n\n# Scons\n.scons*\n.sconf*\n.rope*\n*.pyc\n\ndocs/_build\n__pycache__\n\nlib/config.h\nlib/formats/py.c\nlib/formats/sh.c\nuninstall-\ngui/app/resources/app.gresource\n*.a\n\nrmlint.*.sh\nrmlint.*.json\n\n# JetBrains' IDE\n.idea\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 0.3740234375,
          "content": "Christopher Pahl <sahib@online.de>\nChristopher Pahl <sahib@online.de> <sahib@peeel.(none)>\nChristopher Pahl <sahib@online.de> <chris@peeel.(none)>\nChristopher Pahl <sahib@online.de> <chris@modi.localdomain>\nChristopher Pahl <sahib@online.de> <b@mmel.localdomain>\nChristopher Pahl <sahib@online.de> <sahib@localhost.localdomain>\nChristopher Pahl <sahib@online.de> <chris@vbox.(none)>\n"
        },
        {
          "name": ".version",
          "type": "blob",
          "size": 0.0224609375,
          "content": "2.10.2 Ludicrous Lemur\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 22.7841796875,
          "content": "# Change Log\n\nAll notable changes to this project will be documented in this file.\n\nThe format follows [keepachangelog.com]. Please stick to it.\n\n## [2.10.2 Ludicrous Lemur] -- 2023-08-08\n\n### Changed\n\n* preserve coredump and exit status for fatal signals\n* --equal no longer writes rmlint.sh and rmlint.json by default\n* issue #458: --is-reflink no longer accepts the '-o' option or writes rmlint.sh/rmlint.json\n* issue #434: downgraded 'Added big file \"\\<filename ...\\>' from warning to info\n\n### Fixed\n\n* PR #443: scons: make fiemap feature depend on --with-fiemap, not --with-gettext\n* PR #470: scons: read environment variables before conftests\n* PR #474: scons: when printing parameters such as DEBUG, interpret '0' as 'no'\n* PR #485, issue #484: fix sorting of regex options (-S x and -S r) when multiple paths match\n* issue #496: fix 'free(): invalid pointer' crash with `-c csv:unique`\n* issue #438: fix 'Can't open directory or file \"...\": Invalid argument' on some platforms\n* issue #621: fix GUI freeze with glib 2.75.3 and above\n* issue #608: fix setuptools InvalidVersion error when installing GUI with packaging 22.0 and above\n* issue #613: actually remove the GUI's Polkit requrement ('Namespace Polkit not available')\n* issue #522: fix --size overflow detection on some platforms\n* issue #549: fix 'assertion failed: (node-\\>inode != RM\\_NO\\_INODE)' on 32-bit platforms\n* issue #555: fix deadlock when `-T nonstripped` encountered an executable FIFO\n* issues #527, #528, #529, #530, #611: fix --is-reflink false-positives and false-negatives\n* fix --merge-directories false-negatives with `--algorithm sha1`\n* issue #577: fix GUI error 'Unknown option --match-with-extension'\n* issue #552: prevent generated script's -p option from overwriting itself with --merge-directories\n* issue #475: fix 'assertion failed: (self-\\>num\\_pending == 0)' with --merge-directories\n* issue #562: fix 'double free or corruption (out)' with --merge-directories --write-unfinished\n* issue #545: fix skip\\_hardlink false-negatives with --merge-directories\n* do not write checksums to xattrs when --clamp-low/--clamp-top are in use\n* issue #431: suppress 'failed to getxattr for ...: Attribute not found' on macOS\n* fix progress text not displaying final results before continuing to next stage\n* fix regular files and symlinks potentially matching with --see-symlinks\n* fix assertion failure with --merge-directories and zero paths from stdin\n* issue #519: suppress 'Permission denied' errors from xfs\\_info\n* fix --hash for large files on 32-bit platforms\n* issue #628: fix 'SyntaxError: source code cannot contain null bytes' with --gui and Python 3.12\n\n## [2.10.1 Ludicrous Lemur] -- 2020-06-13\n\n### Added\n\n* implement -i option for rmlint.sh to ask before removal of each file (thanks JLuszawski)\n\n### Fixed\n\n* Fix version display in Shredder UI (thanks JLuszawski)\n* Broken JSON output in case of paths with double quotes (thanks EvilMcJerkface)\n\n## [2.10.0 Ludicrous Lemur] -- 2020-05-31\n\n### Added\n\n* ``--replay`` works now with ``-D``: ``.json`` created without ``-D`` can now\n  be packed into duplicate directories during replay. Vice versa, duplicate\n  directories can be unpacked if no ``-D`` switch was given. This feature is\n  still considered to be experimental. There might be still a few rough edges.\n  The output will warn you when the feature is in-use and offers instructions\n  on how to disable it.\n\n### Changed\n\n* Related to the ``--replay`` feature: The ``.json`` output now contains\n  ``part_of_directory`` entries if generated with ``-D``. Those are basically\n  duplicates the duplicate directories are composed out of.\n* The ``sh`` output now visually denotes groups of duplicates with a newline.\n\n### Deprecated\n\nNothing.\n\n### Removed\n\nNothing.\n\n### Fixed\n\n* The ``mtime`` comparison was broken when using ``--xattr``.\n* Timestamps for ``xattr`` were locale-sensitive. This has been fixed.\n* Intermediate checksums where written to extended attributes.\n* Several Python related deprecation warnings.\n* ui: Changing the size factor did not let you apply the settings.\n* ``--size`` can now correctly handle very large sizes.\n* \"Evil\" (think procfs) filesystem detection triggered wrongly sometimes.\n\n## [2.9.0 Odd Olm] -- 2019-08-20\n\n### Added\n\n* An up-to-date COPR package for Fedora (thanks eclipseo).\n* Add --xattr as --xattr-write, --xattr-read & --write-unfinished to enable easy\n  checksum caching for the next run.\n* Unique option for json and csv formatters (-c json:unique)\n* New -k option for rmlint.sh to keep directory timestamps like before deletion.\n\n### Changed\n\n* Warn when using -j without -D.\n* The exist status is now EXIT_FAILURE when rmlint was interrupted.\n* Slightly changed progressbar ETA algorithm to deliver more stable results.\n* docs: added a few scripting examples to underline the possibility to use 3rd-party tools.\n* --dedupe options now checks if the files are already reflinks to reduce disk thrashing.\n* Made sure that -T dd is the same as specifying -D.\n\n### Deprecated\n\nNothing was deprecated.\n\n### Removed\n\nNothing was removed.\n\n### Fixed\n\n* Dry-run was not honoured when a user-defined command was used.\n* Fix crash when compiled with -msse4.2\n* Relative symbolic links were compared wrong when using -f (See issue #333)\n* gui: The size options wer enot correctly passed to rmlint (only Megabytes)\n* xattr: timestamps where often compared wrongly.\n* Fiemap (and thus reflink detection) code was improved.\n* --replay did not replay duplicate directories correctly.\n* --replay did not honour --hidden and --size correctly.\n* Various build issues.\n* gui: fix \"render from selected\" feature.\n* gui: generated script now correctly removes itself.\n* gui: fix display of paths with ampersands in them.\n\n## [2.8.0 Maidenly Moose] -- 2018-10-30\n\nMostly a bugfix release with smaller functional changes.\n\n### Added\n\n- Support for reflinks on XFS (48c2e5b1)\n- Option \"--no-backup\" to overwrite output files as before (see \"Changed\")\n- New build system option called \"gettext\" that eases the maintenance of translations.\n  (thanks Michael Witten)\n- gui: Add config option to choose how to handle the found duplicates\n\n### Changed\n\n- -pp is now silently permitted, but is the same as -p\n- Old output files get backed up now to a new timestamped name.\n  This was done to not to overwrite the results of long runs.\n  You can use --no-backup to disable this behaviour.\n- Several internal cleanups and potential bug fixes (thanks to Michael Witten)\n- Change the default optimization level for a build to -O2.\n\n### Deprecated\n\nNothing was deprecated.\n\n### Removed\n\nNothing was removed.\n\n### Fixed\n\n- Several small fixes in the documentation.\n- Compiler warnings that may happen with clang and on 32 bit.\n- \"-g\" now does not overwrite other formatters anymore.\n- Make the progressbar less flickering.\n- Startup error when the permissions to a location where bad.\n- Endless loop that happens on btrfs due to the fiemap optimization.\n- Fix a bug when doing \"rmlint --replay x.json\" without an explicit path.\n- Fix -f that did not really follow symbolic links.\n- gui: locations are now stored persistently and survive restarts.\n- scons should work now with both python2 and python3.\n- extensive memory allocation with slow CPUs.\n- Do not use --remove-destination of cp, but use \"rm + ln\" to support non-GNU systems.\n\n## [2.7.0 Toothless Taipan] -- 2017-04-25\n\n### Added\n\n* New checksum types metro and highway\n* New option --keep-hardlinked\n* --dedupe option can deduplicate twins on any reflick-capable filesystems\n* --dedupe-readonly option can dedupe files on read-only btrfs snapshots\n\n### Changed\n\n* Checksum types for -P... options (see https://github.com/sahib/rmlint/issues/261)\n\n### Deprecated\n\n* Option --btrfs-clone (use --dedupe)\n* Paranoia option -pp (use -p)\n\n### Removed\n\n* Checksum types bastard, spooky, city & farmhash\n* Multihash output option\n\n### Fixed\n\n* Fix scons 3 compatibility issue (https://github.com/sahib/rmlint/issues/258)\n* Fix compile error on systems with no FIEMAP (https://github.com/sahib/rmlint/issues/252)\n* Fix handling of bad uids/gids in python output formatter (https://github.com/sahib/rmlint/issues/239)\n* Fix escaping of dirnames in rmlint.sh test for new emptydirs (https://github.com/sahib/rmlint/issues/241)\n* Fix another quoting issue (https://github.com/sahib/rmlint/issues/272)\n\n## [2.6.1 Penetrating Pineapple] -- 2017-06-13\n\n### Fixed\n\n* Fix build-error on macOS due to wrong usage of #ifdef.\n* Fix a bug in treemerge that sometimes counted hardlinks more than once.\n* Fix copyright year notice all over the source code.\n* Fix --equal to allow hidden files, files counting as other lint and empty files.\n* Fix --equal to allow path doubles so passing symlinks to the same file still yields a 0.\n  Due to those fixes the paranoia mode of ``rmlint.sh`` should run smoother (again) now.\n* Use a more sophisticated strategy to find the path to the own binary and fallback to ``$(which rmlint)``.\n* Workaround the bash bug that did not allow huge functions by bringing back the old approach without a function.\n\n### Changed\n\n* It is now possible to treat empty files as duplicates when specifying \"--size 0\".\n* Use the `cmp` builtin to compare regular in the shell script files again, since it's faster.\n* Abort early in ``--equal`` if an mismatch has been encountered.\n* Test the shell script more thoroughly to avoid release troubles.\n\n### Added\n\n* Add a new ``-c`` switch to ``rmlint.sh`` that cleans up empty directories while running the script.\n\n## [2.6.0 Penetrating Pineapple] -- 2017-06-03\n\n### Fixed\n\n* Do not chmod +x files that exist already (previous versions tried to +x e.g. /dev/null)\n* Support anonymous pipes in the sh formatter (Supported now: rmlint -o sh:>(cat))\n* Documentation should look a bit cleaner now.\n* Fixed a crash when a file was clamped to a size of 0.\n* Fixed a rounding error bug that can happen while sorting mtimes.\n* Fixed the slightly broken --mtime-window option (was too permissive in rare cases)\n* Force permissions (0755 for binary, 0644 for manpage) when installing files in the filesystem.\n* Fix wrong ordering when using -D without -k or -K.\n* Fix a space wasting bug that happened with -D and -c sh:link.\n* Fix a bug in treemerge that sometimes lead to directories not being detected (should be also slightly faster now)\n* Fix inconsistent handling of duplicate directories when using hardlinks, symlinks and reflinks.\n* Abort early if an invalid path has been given via commandline or stdin.\n* Do not silence errors while commandline parsing when using ``-g``.\n\n### Added\n\n* Added new checksums: blake2{s,sp,b,bp} and sha3{-256,-384,-512}. sha3 is an alias to sha3-256.\n* Support for GNU Hurd (well, at least it compiles :)\n* New \"-o stats\" formatter that prints some statistics about the run.\n* Progressbar now additionally shows an ETA time (how long rmlint will probably run)\n* New option ``--honour-dir-layout (-j)`` that makes ``--merge-directories (-D)``\n  also check if the directory layout is the same.\n* A new ``--equal`` option that works like the ``cmp`` utility, but supports directories.\n* Add a progress percentage to ``rmlint.sh`` for big runs.\n\n### Changed\n\n* Changed the default hash function to blake2b.\n* The default formatter (pretty) now also outputs the time used for the run.\n* Updated existing translations.\n\n## [2.4.6 Myopic Micrathene Bugfixes] -- 2017-01-16\n\n### Fixed\n\n* Update translation template.\n* Various fix to make rmlint ready to be packaged in debian.\n\n### Added\n\n* Output of rmlint.sh uses a colored prefix now.\n\n## [2.4.5 Myopic Micrathene Bugfixes] -- 2016-12-12\n\n### Fixed\n\n* Make ``--replay`` truly merge different sets of duplicates.\n* Call ``exit(1)`` when getting a fatal signal (somehow was missing)\n* ``scons test`` now executes only the sane part of the testsuite.\n* Be more friendly when no manpage was found (and show --help)\n* Handle readonly btrfs subvolumes well.\n  See also: https://github.com/sahib/rmlint/issues/195\n* Various build errors fixed for old/rare systems.\n* Various fixes in the gui, mostly related to old GTK versions.\n\n### Added\n\n* New option ``--mtime-window``: Only consider files as duplicates that\n  share a mtime in a certain time-window.\n  See also: https://github.com/sahib/rmlint/issues/197\n* New sortcriteria ``O`` (maximize outside hardlinks) and ``H`` (maximize total hardlinks)\n  See also: https://github.com/sahib/rmlint/issues/196\n* Proper installation instructions for macOS.\n\n### Changed\n\n* Re-Design ``--replay`` to accept ``//`` like the normal commandline does.\n* New default sortcriteria is ``pOMa`` to maximize the chance of deleting\n  the most bytes from the storage.\n\n## [2.4.4 Myopic Micrathene Bugfixes] -- 2016-04-01\n\n### Fixed\n\n* Makefile related compile troubles on BSD for the GUI>\n* Check for accessat and ATR_FDCWD explicitly and try to work around them when missing.\n* Clearup installation instructions\n\n## [2.4.3 Myopic Micrathene Bugfixes] -- 2016-03-11\n\n### Fixed\n\n- Fix symbolic link emitting in sh script (sometimes files were omitted from rmlint.sh)\n- Fix compile stop on BSD systems in utilities.c (thanks f99aq8ove)\n- Fix some compiler warnings and typos.\n\n### Added\n\n- Add basic spanish translation.\n- Add basic compile support on cygwin.\n\n## [2.4.2 Myopic Micrathene Bugfixes] -- 2015-12-14\n\n### Fixed\n\n- Fix bad size stats using ``--replay`` with hardlinks.\n- Fix unicode emission of ``json`` formatter.\n- Fix broken ``gui/SConscript`` (was looking for python4...)\n\n### Added\n\n- Add ``unique`` formatter to print unique files. (See https://github.com/sahib/rmlint/issues/161)\n\n### Changed\n\n- Removed ``--with-metadata-cache`` and ``--cache`` since both introduced lots\n  of code without giving many benefits. In total about 1000 lines of code were\n  removed in this process.\n- For limiting memory usage there is just ``--limit-mem`` now.\n\n\n## [2.4.1 Myopic Micrathene Bugfixes] -- 2015-11-01\n\n### Fixed\n\n- ``btrfs``:  Do not try to clone files on different subvolumes.\n- ``gui``: Tie down version for gobject-introspection.\n- ``freebsd``: Fix very bad performance due to mounttable and some compile\n  issues.\n\n### Added\n\n- ``-S`` now understands two new letters to match via regular expressions:\n\n    - ``r``: Select the path as original that matches the pattern given in ``<PATTERN>`` after this letter.\n    - ``x``: Same as ``r`` but match only basename.\n\n\n## [2.4.0 Myopic Micrathene] -- 2015-10-25\n\n### Fixed\n\n- ``rmlint`` should compile on Mac OSX now.\n- Bugfix: Broken ``chown`` calls in sh script (thanks Shukrat Mukimov)\n- Bugfix: memory corruption when specifying ``-T dd`` alone.\n- Bugfix: Make ``-D`` and ``-k / -K`` play together nicely (thanks phiresky).\n- Smaller compile time troubles fixed.\n- Progressbar uses timeout-based redraws which leads to much smoother drawing\n  and less cpu footprint.\n- ``pretty`` formatter (default) produces now valid escaped commands.\n  It is still intended for visual output only. That's why a note for this was\n  added.\n\n### Added\n\n- A fully working graphical user interface which is installed as a python module\n  by default (can be disabled via compile option ie ``scons --without-gui``).\n  It can be started via  ``rmlint --gui``.\n- Support for automatic deduplication on btrfs using  ``BTRFS_IOC_FILE_EXTENT_SAME``.\n  The Shellscript now will contain calls to  ``rmlint  --btrfs $source $dest``\n  for duplicates on ``btrfs`` filesystems if  the user specified ``-c sh:clone``.\n- Benchmark suite that will track the performance of rmlint from release to release.\n  This helps developers detect any speed regressions or improvements and is a tool\n  to help develop and validate optimization strategies.\n- Shell/Python-script now does more sanity checks before removing and can be told to\n  re-compare files byte-by-byte before removing them (``-p`` option when running\n  the ``.sh`` file).\n- Add a new ``--hash`` option so rmlint can be used as a very fast file hashing\n  utility, eg ``rmlint --hash`` works like ``sha1sum``, or ``rmlint --hash -d md5``\n  works like ``md5sum``.  Also does sha256, sha512, murmur{128}, spooky{32,64,128},\n  city{128}.\n- ``--sort-by`` learned new keys: ``l`` (path length) and ``d`` (path depth).\n- New ``--unmatched-basename`` option only finds twins with differing basenames.\n- Smaller performance and memory optimisations in shredder.\n\n### Changed\n\n- ``-g`` now checks if there is already a ``sh`` and ``json`` formatter before\n  it adds one.\n- ``-PP`` now defaults to ``xxhash`` as hashing algorithm.\n- ``-o / --output`` learned to guess the formatter you want to use from the file ending.\n  For example ``-o /tmp/test.json`` will work like ``-o json:/tmp/test.json``.\n- JSON output contains ``rmlint`` version and revision now.\n- ``--replay`` learned to merge several json files.\n- Internal refactoring (credits go to Daniel) of the scheduler and hashing\n  library. The duplicate finding process has be split in separate modules.\n\n## [2.3.0 Ominous Oscar] -- 2015-06-15\n\n### Fixed\n\n- Compiles on Mac OSX now. See also: https://github.com/sahib/rmlint/issues/139\n- Fix a crash that happened with ``-e``.\n- Protect other lint than duplicates by ``-k`` or ``-K``.\n- ``chown`` in sh script fixed (was ``chmod`` by accident).\n\n### Added\n\n- ``--replay``: Re-output a previously written json file. Allow filtering\n  by using all other standard options (like size or directory filtering).\n- ``--sort-by``: Similar to ``-S``, but sorts groups of files. So showing\n  the group with the biggest size sucker is as easy as ``-y s``.\n\n### Changed\n\n- ``-S``'s long options is ``--rank-by`` now (prior ``--sortcriteria``).\n- ``-o`` can guess the formatter from the filename if given.\n- Remove some optimisations that gave no visible effect.\n- Simplified FIEMAP optimisation to reduce initial delay and reduce memory overhead\n- Improved hashing strategy for large disks (do repeated smaller sweeps across\n  the disk instead of incrementally hashing every file on the disk)\n\n## [2.2.1 Dreary Dropbear Bugfixes]\n\n### Fixed\n\n- Incorrect handling of -W, --no-with-color option\n- Handling of $PKG_CONFIG in SConstruct\n- Failure to build manpage\n- Various BSD compatibility issues\n- Nonstandard header sequence in modules using fts\n- Removed some unnecessary warnings\n\n\n## [2.2.0 Dreary Dropbear] -- 2015-05-09\n\n### Fixed\n\n- Issue with excessive memory usage and processing delays with\n  very large file counts (>5M files)\n- Problems and crashes on 32bit with large files and normal files.\n- Bug in memory manager for \"paranoid\" file comparison method which\n  could lead to OOM error in some cases and infinite looping in others.\n- Fixed bug which prevented option --max-paranoid-mem working.\n- Note: much kudos to our user \"vvs-\" who provided many useful testcases\n  and was prepared to re-run a 10-hour duplicate search after each effort\n  to fix the underlying issues.\n- Handling of json formatter on invalid utf8, which fixed ``--cache`` in return.\n- Bug during file traversal when encountering symlinks to empty folders\n\n### Added\n\n- More aggressive test suite, leading to higher coverage rates (90% of lines,\n  almost 100% functions at least). Let's not speak of branch coverage for now. 😄\n- A primitive benchmark suite.\n- A GUI sketch that can be shipped along rmlint.\n\n### Changed\n\n- Most internal filesystems like `proc` are ignored now.\n- Improved progressbar\n- Memory footprint reduced to enable larger filesets to be processed. See\n  discussion at https://github.com/sahib/rmlint/issues/109.  Improvements\n  include a Pat(h)ricia-Trie used as data structure to efficiently map\n  file paths with much less memory consumption.  Also the file preprocessing\n  strategy (eg to find path doubles) has been improved to avoid having\n  several large hashtables active at the same time.\n- Improved threading strategy which increases speed of duplicate\n  matching.  As before, the threading strategy uses just one thread per\n  physical disk to enable fast reading without disk thrash.  The improved\n  algorithm now increases the number of cpu threads used to hash the data\n  as it is read in.  Also an improved mutex strategy reduces the wait time\n  before the hash results can be processed.\n  Note the new threading strategy is particularly effective on the\n  \"paranoid\" (byte-by-byte) file comparison method (option -pp), which is\n  now almost as fast as the default (SHA1 hash) method.\n- The optimisation in 2.1.0 which detects existing reflinks has been\n  reverted for now due to conflicts between shredder and treemerge.\n\n\n## [2.1.0 Malnourished Molly] -- beta-release 2015-04-13\n\n### Fixed\n\n- performance regression: When having many pairs of duplicates,\n  the core got slower very fast due to linear lookups. Fixed.\n- performance regression: No SSDs were detected due to two bugs.\n- commandline aborts also on non-fatal option misuses.\n- Some statistic counts were updated wrong sometimes.\n- Fixes in treemerge to respect directories tagges as originals.\n- Ignore \"evil\" fs types like bindfs, nullfs completely.\n- Fix race in file tree traversal.\n- Various smaller bugfixes.\n\n### Added\n\n- ``--with-metadata-cache`` makes ``rmlint`` less memory hungry by storing\n  its paths in a sqlite3 database and selecting them when needed.\n- ``--without-fiemap`` disables the ``fiemap`` optimization when focus is on\n  memory footprint.\n- ``--perms`` can check if a file should be readable/writable or executable.\n- Json output is enabled by default and is written to ``rmlint.json``.\n- ``--partial-hidden`` does only see hidden files in duplicate directories.\n- ``--cache/--write-unfinished`` can be used to speedup re-runs drastically.\n- Checksums can be stored in the xattr of files with ``--xattr-read/write/clear``.\n- New progressbar output inspired by ``journalctl --verfiy``.\n- Better support for reflink-capable filesystems (e.g. *btrfs*):\n  - detect existing reflinks using ``fiemap`` data (significant speedup)\n  - support replacing files by a reflink if the filesystem supports it.\n\n### Changed\n\n- Optional dependency for *sqlite3* for ``--with-metadata-cache``.\n- ``--hardlinked`` is enabled by default.\n- Support -n (dry-run) for rmlint.sh; require user input on ask.\n- Default digest is now *sha1* instead of *spooky*.\n- updated ``.pot`` template with help strings.\n- updated german translation accordingly.\n- -T supports arguments like df,dd properly now.\n- New --help text that shows a short reference only.\n- sahib made his 1000th commit on rmlint with this text\n  and wonders where all the time has gone and why he isn't rich yet.\n\n## [2.0.0 Personable Pidgeon] -- 2014-01-23\n\nInitial release of the rewrite.\n\n[unreleased]: https://github.com/sahib/rmlint/compare/master...develop\n[2.2.1 Dreary Dropbear Bugfixes]: https://github.com/sahib/rmlint/compare/v2.2.0..v2.2.1\n[2.2.0 Dreary Dropbear]: https://github.com/sahib/rmlint/releases/tag/v2.2.0\n[2.1.0 Malnourished Molly]: https://github.com/sahib/rmlint/releases/tag/v2.1.0\n[2.0.0 Personable Pidgeon]: https://github.com/sahib/rmlint/releases/tag/v2.0.0\n[2.3.0 Ominous Oscar]: https://github.com/sahib/rmlint/compare/v2.2.2..v2.4.0\n[2.4.0 Myopic Micrathene]: https://github.com/sahib/rmlint/releases/tag/v2.4.0\n[2.4.1 Myopic Micrathene Bugfixes]: https://github.com/sahib/rmlint/releases/tag/v2.4.1\n[keepachangelog.com]: http://keepachangelog.com/\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 34.3232421875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 3.818359375,
          "content": "      \n======\n\n\n.. image:: https://raw.githubusercontent.com/sahib/rmlint/develop/docs/_static/logo.png\n   :align: center\n\n`rmlint` finds space waste and other broken things on your filesystem and offers\nto remove it. \n\n.. image:: https://readthedocs.org/projects/rmlint/badge/?version=latest\n   :target: http://rmlint.rtfd.org\n\n.. image:: https://img.shields.io/travis/sahib/rmlint/develop.svg?style=flat\n   :target: https://travis-ci.org/sahib/rmlint\n\n.. image:: https://img.shields.io/github/issues/sahib/rmlint.svg?style=flat\n   :target: https://github.com/sahib/rmlint/issues\n\n.. image:: https://img.shields.io/github/release/sahib/rmlint.svg?style=flat\n   :target: https://github.com/sahib/rmlint/releases\n\n.. image:: https://img.shields.io/github/downloads/sahib/rmlint/latest/total.svg\n   :target: https://github.com/sahib/rmlint/releases/latest\n\n.. image:: http://img.shields.io/badge/license-GPLv3-4AC51C.svg?style=flat\n   :target: https://www.gnu.org/licenses/quick-guide-gplv3.html.en\n\n.. image:: https://badges.gitter.im/rmlint/community.svg\n   :target: https://gitter.im/rmlint/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge\n\n**Features:**\n\nFinds…\n\n- …Duplicate Files and duplicate directories.\n- …Nonstripped binaries (i.e. binaries with debug symbols)\n- …Broken symbolic links.\n- …Empty files and directories.\n- …Files with broken user or/and group ID.\n\n**Differences to other duplicate finders:**\n\n- Extremely fast (no exaggeration, we promise!)\n- Paranoia mode for those who do not trust hashsums.\n- Many output formats.\n- No interactivity.\n- Search for files only newer than a certain ``mtime``.\n- Many ways to handle duplicates.\n- Caching and replaying.\n- ``btrfs`` support.\n- ...\n\nIt runs and compiles under most Unices, including Linux, FreeBSD and Darwin.\nThe main target is Linux though, some optimisations might not be available\nelsewhere.\n\n.. image:: https://raw.githubusercontent.com/sahib/rmlint/develop/docs/_static/screenshot.png\n   :align: center\n\n\nINSTALLATION\n------------\n\nChances are that you might have `rmlint` already as readily made package in your\nfavourite distribution. If not, you might consider \n`compiling it from source <http://rmlint.readthedocs.org/en/latest/install.html>`_.\n\nDOCUMENTATION\n-------------\n\nDetailed documentation is available on: \n\n    http://rmlint.rtfd.org\n\nMost features you'll ever need are covered in the tutorial:\n\n    http://rmlint.rtfd.org/en/latest/tutorial.html\n\nAn online version of the manpage is available at:\n\n    http://rmlint.rtfd.org/en/latest/rmlint.1.html\n\nSometimes we can be reached via IRC: ``#rmlint`` on ``irc.freenode.net``.\n\nBUGS\n----\n\nIf you found bugs, having trouble running `rmlint` or want to suggest new\nfeatures please `read this <http://rmlint.readthedocs.org/en/latest/developers.html>`_.\n\nAlso read the `BUGS <http://rmlint.readthedocs.org/en/latest/rmlint.1.html#bugs>`_ section of the `manpage <http://rmlint.rtfd.org/en/latest/rmlint.1.html>`_\nto find out how to provide good debug information.\n\nAUTHORS\n-------\n\nHere's a list of developers to blame:\n\n===================================  ============================= ===========================================\n*Christopher Pahl*                   https://github.com/sahib      2010-2017\n*Daniel Thomas*                      https://github.com/SeeSpotRun 2014-2017\n*Cebtenzzre*                         https://github.com/Cebtenzzre 2021-2023\n===================================  ============================= ===========================================\n\nThere are some other people that helped us of course.\nPlease see the AUTHORS distributed along `rmlint`.\n\nLICENSE\n-------\n\n`rmlint` is licensed under the conditions of the\n`GPLv3 <https://www.gnu.org/licenses/quick-guide-gplv3.html.en>`_.\nSee the\n`COPYING <https://raw.githubusercontent.com/sahib/rmlint/master/COPYING>`_ \nfile distributed along the source for details.\n"
        },
        {
          "name": "SConstruct",
          "type": "blob",
          "size": 26.087890625,
          "content": "#!/usr/bin/env python\n# encoding: utf-8\n\nimport os\nimport sys\nimport glob\nimport subprocess\nimport platform\n\nimport SCons\nimport SCons.Conftest as tests\nfrom SCons.Script.SConscript import SConsEnvironment\n\npkg_config = os.getenv('PKG_CONFIG', 'pkg-config')\n\ndef read_version():\n    with open('.version', 'r') as handle:\n        version_string = handle.read()\n\n    static_git_rev = None\n    version_numbers, release_name = version_string.split(' ', 1)\n    if '@' in release_name:\n        release_name, static_git_rev = release_name.split('@', 1)\n        static_git_rev.strip()\n\n    major, minor, patch = [int(v) for v in version_numbers.split('.')]\n    return major, minor, patch, release_name.strip(), static_git_rev\n\n\nVERSION_MAJOR, VERSION_MINOR, VERSION_PATCH, VERSION_NAME, STATIC_GIT_REV = read_version()\nExport('VERSION_MAJOR VERSION_MINOR VERSION_PATCH VERSION_NAME')\n\n###########################################################################\n#                                Utilities                                #\n###########################################################################\n\ndef check_gcc_version(context):\n    context.Message('Checking for GCC version... ')\n\n    try:\n        v = subprocess.check_output(\n            '{cc} -E -P -'.format(cc=conf.env['CC']),\n            shell=True, input=b'__GNUC__\\n',\n        )\n        try:\n            v = int(v)\n            context.Result(str(v))\n        except ValueError:\n            print('Expected a number, but got: ' + v)\n            v = 0\n    except subprocess.CalledProcessError:\n        print('Unable to find GCC version.')\n        v = 0\n    except AttributeError:\n        print('Not allowed.')\n        v = 0\n\n    conf.env['__GNUC__'] = v\n    return v\n\n\ndef check_pkgconfig(context, version):\n    context.Message('Checking for pkg-config... ')\n    command = pkg_config + ' --atleast-pkgconfig-version=' + version\n    ret = context.TryAction(command)[0]\n    context.Result(ret)\n    return ret\n\n\ndef check_pkg(context, name, varname, required=True):\n    rc, text = 1, ''\n\n    try:\n        if GetOption('with_' + name.split()[0]) is False:\n            context.Message('Explicitly disabling %s...' % name)\n            rc = 0\n    except AttributeError:\n        pass\n\n    if rc != 0:\n        context.Message('Checking for %s... ' % name)\n        rc, text = context.TryAction('%s --exists \\'%s\\'' % (pkg_config, name))\n\n    # 0 is defined as error by TryAction\n    if rc == 0 and required:\n        print('Error: ' + name + ' not found.')\n        Exit(1)\n\n    # Remember we have it:\n    conf.env[varname] = rc\n    context.Result(rc)\n    return rc, text\n\n\ndef check_git_rev(context):\n    context.Message('Checking for git revision... ')\n    rev = STATIC_GIT_REV\n\n    try:\n        rev = subprocess.check_output('git log --pretty=format:\"%h\" -n 1', shell=True)\n    except subprocess.CalledProcessError:\n        print('Unable to find git revision.')\n    except AttributeError:\n        # Patch for some special sandbox permission problems.\n        # See https://github.com/sahib/rmlint/issues/143#issuecomment-139929733\n        print('Not allowed.')\n\n    if hasattr(rev, 'decode'):\n       rev = rev.decode('ascii')\n\n    rev = rev or 'unknown'\n    conf.env['gitrev'] = rev\n    context.Result(rev)\n    return rev\n\n\ndef check_sysmacro_h(context):\n    rc = 1\n    if rc and tests.CheckHeader(context, 'sys/sysmacros.h'):\n        rc = 0\n\n    conf.env['HAVE_SYSMACROS_H'] = rc\n    context.did_show_result = True\n    context.Result(rc)\n    return rc\n\n\ndef check_libelf(context):\n    rc = 1\n\n    if GetOption('with_libelf') is False:\n        rc = 0\n\n    if rc and tests.CheckHeader(context, 'libelf.h', header=\"#include <stdlib.h>\"):\n        rc = 0\n\n    if rc and tests.CheckLib(context, ['libelf']):\n        rc = 0\n\n    conf.env['HAVE_LIBELF'] = rc\n\n    context.did_show_result = True\n    context.Result(rc)\n    return rc\n\n\ndef check_uname(context):\n    rc = 1\n\n    if rc and tests.CheckHeader(context, 'sys/utsname.h', header=\"\"):\n        rc = 0\n\n    conf.env['HAVE_UNAME'] = rc\n\n    context.did_show_result = True\n    context.Result(rc)\n    return rc\n\n\ndef check_gettext(context):\n    rc = 1\n\n    if GetOption('with_gettext') is False:\n        rc = 0\n\n    if rc and tests.CheckHeader(context, 'locale.h'):\n        rc = 0\n\n    conf.env['HAVE_LIBINTL'] = rc\n    conf.env['HAVE_MSGFMT'] = int(WhereIs('msgfmt') is not None)\n    conf.env['HAVE_GETTEXT'] = conf.env['HAVE_MSGFMT'] and conf.env['HAVE_LIBINTL']\n\n    context.did_show_result = True\n    context.Result(rc)\n    return rc\n\n\ndef check_fiemap(context):\n    rc = 1\n\n    if GetOption('with_fiemap') is False:\n        rc = 0\n\n    if rc and tests.CheckType(context, 'struct fiemap', header='#include <linux/fiemap.h>\\n'):\n        rc = 0\n\n    conf.env['HAVE_FIEMAP'] = rc\n\n    context.did_show_result = True\n    context.Result(rc)\n    return rc\n\n\ndef check_bigfiles(context):\n    off_t_is_big_enough = True\n\n    if tests.CheckTypeSize(context, 'off_t', header='#include <sys/types.h>\\n') < 8:\n        off_t_is_big_enough = False\n\n    have_stat64 = True\n    if tests.CheckFunc(\n        context, 'stat64'\n    ):\n        have_stat64 = False\n\n    rc = int(off_t_is_big_enough or have_stat64)\n    conf.env['HAVE_BIG_OFF_T'] = int(off_t_is_big_enough)\n    conf.env['HAVE_BIG_STAT'] = int(have_stat64)\n    conf.env['HAVE_BIGFILES'] = rc\n\n    context.did_show_result = True\n    context.Result(rc)\n    return rc\n\n\ndef check_blkid(context):\n    rc = 1\n\n    if GetOption('with_blkid') is False:\n        rc = 0\n\n    if rc == 1 and tests.CheckDeclaration(\n        context,\n        symbol='blkid_devno_to_wholedisk',\n        includes='#include <blkid.h>\\n'\n    ):\n        rc = 0\n\n    conf.env['HAVE_BLKID'] = rc\n\n    context.did_show_result = True\n    context.Result(rc)\n    return rc\n\n\ndef check_sys_block(context):\n    rc = 1\n\n    context.Message('Checking for existence of /sys/block... ')\n    if not os.access('/sys/block', os.R_OK):\n        rc = 0\n\n    conf.env['HAVE_SYSBLOCK'] = rc\n\n    context.Result(rc)\n    return rc\n\n\ndef check_posix_fadvise(context):\n    rc = 1\n\n    if tests.CheckDeclaration(\n        context, 'posix_fadvise',\n        includes='#include <fcntl.h>'\n    ):\n        rc = 0\n\n    conf.env['HAVE_POSIX_FADVISE'] = rc\n\n    context.did_show_result = True\n    context.Result(rc)\n    return rc\n\n\ndef check_xattr(context):\n    rc = 1\n\n    for func in ['getxattr', 'setxattr', 'removexattr', 'listxattr']:\n        if tests.CheckFunc(\n            context, func\n        ):\n            rc = 0\n            break\n\n    conf.env['HAVE_XATTR'] = rc\n\n    context.did_show_result = True\n    context.Result(rc)\n    return rc\n\n\n\ndef check_lxattr(context):\n    rc = 1\n\n    for func in ['lgetxattr', 'lsetxattr', 'lremovexattr', 'llistxattr']:\n        if tests.CheckFunc(\n            context, func\n        ):\n            rc = 0\n            break\n\n    conf.env['HAVE_LXATTR'] = rc\n\n    context.did_show_result = True\n    context.Result(rc)\n    return rc\n\n\ndef check_sha512(context):\n    rc = 1\n    if tests.CheckDeclaration(context, 'G_CHECKSUM_SHA512', includes='#include <glib.h>\\n'):\n        rc = 0\n\n    conf.env['HAVE_SHA512'] = rc\n\n    context.did_show_result = True\n    context.Result(rc)\n    return rc\n\n\ndef check_c11(context):\n    rc = 1\n\n    context.Message('Checking for -std=c11 support...')\n    try:\n        cmd = 'echo \"#if __STDC_VERSION__ < 201112L\\n#error \\\"No C11 support!\\\"\\n#endif\" | {cc} -xc - -std=c11 -c'\n        subprocess.check_call(\n            cmd.format(cc=conf.env['CC']),\n            shell=True\n        )\n    except subprocess.CalledProcessError:\n        rc = 0  # Oops.\n\n    conf.env['HAVE_C11'] = rc\n    context.Result(rc)\n    return rc\n\n\ndef check_btrfs_h(context):\n    rc = 1\n    if tests.CheckHeader(\n        context, 'linux/btrfs.h',\n        header='#include <stdlib.h>\\n#include <sys/ioctl.h>'\n    ):\n        rc = 0\n\n    conf.env['HAVE_BTRFS_H'] = rc\n    context.did_show_result = True\n    context.Result(rc)\n    return rc\n\ndef check_linux_fs_h(context):\n    rc = 1\n    if tests.CheckHeader(context, 'linux/fs.h'):\n        rc = 0\n\n    conf.env['HAVE_LINUX_FS_H'] = rc\n    context.did_show_result = True\n    context.Result(rc)\n    return rc\n\ndef check_linux_limits(context):\n    rc = 1\n    if tests.CheckHeader(context, 'linux/limits.h'):\n        rc = 0\n\n    conf.env['HAVE_LINUX_LIMITS'] = rc\n    context.did_show_result = True\n    context.Result(rc)\n    return rc\n\ndef check_cygwin(context):\n    rc = 0\n\n    context.Message('Checking for cygwin environment...')\n    try:\n        uname = platform.uname()\n        context.Message('/'.join(uname))\n        rc = (uname[0].upper().startswith(\"CYGWIN\"))\n    except subprocess.CalledProcessError:\n        rc = 0  # Oops.\n        context.Message(\"platform.uname() failed\")\n\n    conf.env['IS_CYGWIN'] = rc\n    context.Result(rc)\n    return rc\n\ndef check_mm_crc32_u64(context):\n\n    rc = 0 if tests.CheckDeclaration(\n            context,\n            symbol='_mm_crc32_u64',\n            includes='#include <nmmintrin.h>\\n'\n            ) else 1\n\n    conf.env['HAVE_MM_CRC32_U64'] = rc\n    context.did_show_result = True\n    context.Result(rc)\n    return rc\n\ndef check_builtin_cpu_supports(context):\n    rc = 0 if tests.CheckDeclaration(\n            context,\n            symbol='__builtin_cpu_supports'\n            ) else 1\n\n    conf.env['HAVE_BUILTIN_CPU_SUPPORTS'] = rc\n    context.did_show_result = True\n    context.Result(rc)\n    return rc\n\n\ndef create_uninstall_target(env, path):\n    env.Command(\"uninstall-\" + path, path, [\n        Delete(\"$SOURCE\"),\n    ])\n    env.Alias(\"uninstall\", \"uninstall-\" + path)\n\n\nExport('create_uninstall_target')\n\n\ndef find_sphinx_binary():\n    PATH = os.getenv('PATH')\n    binaries = []\n    for path in PATH.split(os.pathsep):\n        binaries.extend(glob.glob(os.path.join(path, 'sphinx-build*')))\n\n    def version_key(binary):\n        splitted = binary.rsplit('-', 1)\n        if len(splitted) < 3:\n            return 0\n        return float(splitted[-1])\n\n    binaries = sorted(binaries, key=version_key, reverse=True)\n    if binaries:\n        print('Using sphinx-build binary: {}'.format(binaries[0]))\n        return binaries[0]\n    else:\n        print('Unable to find sphinx binary in PATH')\n        print('Will be unable to build manpage or html docs')\n\n\nExport('find_sphinx_binary')\n\n###########################################################################\n#                                 Colors!                                 #\n###########################################################################\n\nif sys.stdout.isatty():\n    COLORS = {\n        'cyan': '\\033[96m',\n        'purple': '\\033[95m',\n        'blue': '\\033[94m',\n        'green': '\\033[92m',\n        'yellow': '\\033[93m',\n        'red': '\\033[91m',\n        'grey': '\\x1b[30;1m',\n        'end': '\\033[0m'\n    }\nelse:\n    COLORS = {\n        'cyan': '',\n        'purple': '',\n        'blue': '',\n        'green': '',\n        'yellow': '',\n        'red': '',\n        'grey': '',\n        'end': ''\n    }\n\n# If the output is not a terminal, remove the COLORS\nif not sys.stdout.isatty():\n    for key, value in COLORS.items():\n        COLORS[key] = ''\n\n# Configure the actual colors to our liking:\ncompile_source_message = '%sCompiling %s==> %s$SOURCE%s' % \\\n    (COLORS['blue'], COLORS['purple'], COLORS['yellow'], COLORS['end'])\n\ncompile_shared_source_message = '%sCompiling shared %s==> %s$SOURCE%s' % \\\n    (COLORS['blue'], COLORS['purple'], COLORS['yellow'], COLORS['end'])\n\nlink_program_message = '%sLinking Program %s==> %s$TARGET%s' % \\\n    (COLORS['red'], COLORS['purple'], COLORS['yellow'], COLORS['end'])\n\nlink_library_message = '%sLinking Static Library %s==> %s$TARGET%s' % \\\n    (COLORS['red'], COLORS['purple'], COLORS['yellow'], COLORS['end'])\n\nranlib_library_message = '%sRanlib Library %s==> %s$TARGET%s' % \\\n    (COLORS['red'], COLORS['purple'], COLORS['yellow'], COLORS['end'])\n\nlink_shared_library_message = '%sLinking Shared Library %s==> %s$TARGET%s' % \\\n    (COLORS['red'], COLORS['purple'], COLORS['yellow'], COLORS['end'])\n\n###########################################################################\n#                            Option Parsing                               #\n###########################################################################\n\nAddOption(\n    '--prefix', default='/usr/local',\n    dest='prefix', type='string', nargs=1,\n    action='store', metavar='DIR', help='installation prefix'\n)\n\nAddOption(\n    '--actual-prefix', default=None,\n    dest='actual_prefix', type='string', nargs=1,\n    action='store', metavar='DIR', help='where files will eventually land'\n)\n\nAddOption(\n    '--libdir', default='lib',\n    dest='libdir', type='string', nargs=1,\n    action='store', metavar='DIR', help='libdir name (lib or lib64)'\n)\n\nfor suffix in ['libelf', 'gettext', 'fiemap', 'blkid', 'json-glib', 'gui']:\n    AddOption(\n        '--without-' + suffix, action='store_const', default=False, const=False,\n        dest='with_' + suffix\n    )\n    AddOption(\n        '--with-' + suffix, action='store_const', default=True, const=True,\n        dest='with_' + suffix\n    )\n\n# General Environment\noptions = dict(\n    CXXCOMSTR=compile_source_message,\n    CCCOMSTR=compile_source_message,\n    SHCCCOMSTR=compile_shared_source_message,\n    SHCXXCOMSTR=compile_shared_source_message,\n    ARCOMSTR=link_library_message,\n    RANLIBCOMSTR=ranlib_library_message,\n    SHLINKCOMSTR=link_shared_library_message,\n    LINKCOMSTR=link_program_message,\n    PREFIX=GetOption('prefix'),\n    ENV = dict([ (key, os.environ[key])\n                 for key in os.environ\n                 if key in ['PATH', 'TERM', 'HOME', 'PKG_CONFIG_PATH']\n              ])\n)\n\nif ARGUMENTS.get('VERBOSE') == \"1\":\n    del options['CCCOMSTR']\n    del options['LINKCOMSTR']\n\n# Actually instance the Environment with all collected information:\nenv = Environment(**options)\nExport('env')\n\n###########################################################################\n#                           Dependency Checks                             #\n###########################################################################\n\n# Configuration:\nconf = Configure(env, custom_tests={\n    'check_gcc_version': check_gcc_version,\n    'check_pkgconfig': check_pkgconfig,\n    'check_pkg': check_pkg,\n    'check_git_rev': check_git_rev,\n    'check_libelf': check_libelf,\n    'check_fiemap': check_fiemap,\n    'check_xattr': check_xattr,\n    'check_lxattr': check_lxattr,\n    'check_sha512': check_sha512,\n    'check_blkid': check_blkid,\n    'check_posix_fadvise': check_posix_fadvise,\n    'check_sys_block': check_sys_block,\n    'check_bigfiles': check_bigfiles,\n    'check_c11': check_c11,\n    'check_gettext': check_gettext,\n    'check_linux_limits': check_linux_limits,\n    'check_btrfs_h': check_btrfs_h,\n    'check_linux_fs_h': check_linux_fs_h,\n    'check_uname': check_uname,\n    'check_cygwin': check_cygwin,\n    'check_mm_crc32_u64': check_mm_crc32_u64,\n    'check_builtin_cpu_supports': check_builtin_cpu_supports,\n    'check_sysmacro_h': check_sysmacro_h\n})\n\n#######################################################################\n#                      Compiler Checks and Flags                      #\n#######################################################################\n\nif 'CC' in os.environ:\n    conf.env.Replace(CC=os.environ['CC'])\n    print(\">> Using compiler: \" + os.environ['CC'])\n\nif 'CFLAGS' in os.environ:\n    conf.env.Append(CCFLAGS=os.environ['CFLAGS'])\n    print(\">> Appending custom build flags : \" + os.environ['CFLAGS'])\n\nif 'LDFLAGS' in os.environ:\n    conf.env.Append(LINKFLAGS=os.environ['LDFLAGS'])\n    print(\">> Appending custom link flags : \" + os.environ['LDFLAGS'])\n\nif 'AR' in os.environ:\n    conf.env.Replace(AR=os.environ['AR'])\n    print(\">> Using ar: \" + os.environ['AR'])\n\nif 'NM' in os.environ:\n    conf.env.Replace(NM=os.environ['NM'])\n    print(\">> Using nm: \" + os.environ['NM'])\n\nif 'RANLIB' in os.environ:\n    conf.env.Replace(RANLIB=os.environ['RANLIB'])\n    print(\">> Using ranlib: \" + os.environ['RANLIB'])\n\nif not conf.CheckCC():\n    print('Error: Your compiler and/or environment is not correctly configured.')\n    Exit(1)\n\nconf.check_git_rev()\nconf.check_pkgconfig('0.15.0')\n\n# Pkg-config to internal name\nconf.env['HAVE_GLIB'] = 0\nconf.check_pkg('glib-2.0 >= 2.32', 'HAVE_GLIB', required=True)\n\nconf.env['HAVE_GIO_UNIX'] = 0\nconf.check_pkg('gio-unix-2.0', 'HAVE_GIO_UNIX', required=False)\n\nconf.env['HAVE_BLKID'] = 0\nconf.check_pkg('blkid', 'HAVE_BLKID', required=False)\n\nconf.env['HAVE_JSON_GLIB'] = 0\nconf.check_pkg('json-glib-1.0', 'HAVE_JSON_GLIB', required=False)\n\nif GetOption('with_json-glib') is False:\n    conf.env['HAVE_JSON_GLIB'] = 0\n\npackages = ['glib-2.0']\nif conf.env['HAVE_BLKID']:\n    packages.append('blkid')\n\nif conf.env['HAVE_JSON_GLIB']:\n    packages.append('json-glib-1.0')\n\nif conf.env['HAVE_GIO_UNIX']:\n    packages.append('gio-unix-2.0')\n\n# Support museums or other debian flavours:\nconf.check_c11()\nif conf.env['HAVE_C11']:\n    c_standard = ['-std=c11']\nelse:\n    c_standard = ['-std=c99', '-fms-extensions']\n\nconf.env.Append(CCFLAGS=c_standard)\n\nconf.env.Append(CCFLAGS=[\n    '-pipe', '-D_GNU_SOURCE'\n])\n\n# Support cygwin:\nconf.check_cygwin()\nif conf.env['IS_CYGWIN']:\n    conf.env.Append(CCFLAGS=['-U__STRICT_ANSI__'])\nelse:\n    conf.env.Append(CCFLAGS=['-fPIC'])\n\n# check _mm_crc32_u64 (SSE4.2) support:\nconf.check_mm_crc32_u64()\n\nif 'clang' in os.path.basename(conf.env['CC']):\n    conf.env.Append(CCFLAGS=['-fcolor-diagnostics'])  # Colored warnings\n    conf.env.Append(CCFLAGS=['-Qunused-arguments'])   # Hide wrong messages\n    conf.env.Append(CCFLAGS=['-Wno-bad-function-cast'])\nelse:\n    gcc_version = conf.check_gcc_version()\n    if gcc_version >= 8:\n        conf.env.Append(CCFLAGS=['-Wno-cast-function-type'])\n\n# Optional flags:\nconf.env.Append(CCFLAGS=[\n    '-Wall', '-W', '-Wextra',\n    '-Winit-self',\n    '-Wstrict-aliasing',\n    '-Wmissing-include-dirs',\n    '-Wuninitialized',\n    '-Wstrict-prototypes',\n    '-Wno-implicit-fallthrough',\n])\n\nenv.ParseConfig(pkg_config + ' --cflags --libs ' + ' '.join(packages))\n\n\nconf.env.Append(_LIBFLAGS=['-lm'])\n\nconf.check_builtin_cpu_supports()\nconf.check_blkid()\nconf.check_sys_block()\nconf.check_libelf()\nconf.check_fiemap()\nconf.check_xattr()\nconf.check_lxattr()\nconf.check_bigfiles()\nconf.check_sha512()\nconf.check_gettext()\nconf.check_linux_limits()\nconf.check_posix_fadvise()\nconf.check_btrfs_h()\nconf.check_linux_fs_h()\nconf.check_uname()\nconf.check_sysmacro_h()\n\nif conf.env['HAVE_LIBELF']:\n    conf.env.Append(_LIBFLAGS=['-lelf'])\n\n# NB: After checks so they don't fail\nconf.env.Append(CCFLAGS=['-Werror=undef'])\n\n\nif ARGUMENTS.get('GDB') == '1':\n    ARGUMENTS['DEBUG'] = '1'\n    ARGUMENTS['SYMBOLS'] = '1'\n\nO_DEBUG   = 'g' # The optimisation level for a debug   build\nO_RELEASE = '2' # The optimisation level for a release build\n\n# build modes\nif ARGUMENTS.get('DEBUG') == \"1\":\n    print(\"Compiling in debug mode\")\n    conf.env.Append(CCFLAGS=['-DRM_DEBUG', '-fno-inline'])\n    O_value = ARGUMENTS.get('O', O_DEBUG)\nelse:\n    conf.env.Append(CCFLAGS=['-DG_DISABLE_ASSERT', '-DNDEBUG'])\n    conf.env.Append(LINKFLAGS=['-s'])\n    O_value = ARGUMENTS.get('O', O_RELEASE)\n\nif O_value == 'debug':\n    O_value = O_DEBUG\nelif O_value == 'release':\n    O_value = O_RELEASE\n\ncc_O_option = '-O' + O_value\n\nprint(\"Using compiler optimisation {} (to change, run scons with O=[0|1|2|3|s|fast])\".format(cc_O_option))\nconf.env.Append(CCFLAGS=[cc_O_option])\n\nif ARGUMENTS.get('SYMBOLS') == '1':\n    print(\"Compiling with debugging symbols\")\n    conf.env.Append(CCFLAGS='-g3')\n\nvalue = ARGUMENTS.get('CCFLAGS')\nif value:\n    import shlex\n    print(\"Appending custom build flags provided on command line: \" + value)\n    conf.env.Append(CCFLAGS=shlex.split(value))\n\nSConsEnvironment.Chmod = SCons.Action.ActionFactory(\n    os.chmod,\n    lambda dest, mode: 'Chmod(\"%s\", 0%o)' % (dest, mode)\n)\n\n\ndef InstallPerm(env, dest, files, perm):\n    obj = env.Install(dest, files)\n    for i in obj:\n        env.AddPostAction(i, env.Chmod(str(i), perm))\n    return dest\n\n# put this function \"in\" scons\nSConsEnvironment.InstallPerm = InstallPerm\n\n# Your extra checks here\nenv = conf.Finish()\n\ndef get_cpu_count():\n    # priority: environ('NUM_CPU'), else try to read actual cpu count, else fallback\n    fallback = 4\n\n    if 'NUM_CPU' in os.environ:\n        return int(os.environ.get('NUM_CPU'))\n\n    # try multiprocessing.cpu_count() (Python 2.6+)\n    try:\n        import multiprocessing\n        return multiprocessing.cpu_count()\n    except (ImportError, NotImplementedError):\n        pass\n\n   # try psutil.cpu_count()\n    try:\n        import psutil\n        return psutil.cpu_count()\n    except (ImportError, AttributeError):\n        pass\n\n    # default value\n    return fallback\n\n\n# set number of parallel jobs during build\n# note: while not particularly intuitive or obvious from the documentation,\n# SetOption() will *not* over-ride commandline option passed by `scons -j<n>`\n# or `scons --jobs=<n>`\nSetOption('num_jobs', get_cpu_count())\n\nprint (\"Running with --jobs=\" + repr(GetOption('num_jobs')))\n\nlibrary = SConscript('lib/SConscript')\nprograms = SConscript('src/SConscript', exports='library')\nenv.Default(library)\n\nSConscript('tests/SConscript', exports='programs')\nSConscript('po/SConscript')\nSConscript('docs/SConscript')\nSConscript('gui/SConscript')\n\n\ndef build_tar_gz(target=None, source=None, env=None):\n    tarball = 'rmlint-{a}.{b}.{c}.tar.gz'.format(\n        a=VERSION_MAJOR, b=VERSION_MINOR, c=VERSION_PATCH\n    )\n\n    subprocess.call(\n        'git archive HEAD -9 --format tar.gz -o ' + tarball,\n        shell=True\n    )\n\n    print('Wrote tarball to ./' + tarball)\n\n\nif 'dist' in COMMAND_LINE_TARGETS:\n    env.Command('dist', None, Action(build_tar_gz, \"Building release tarball...\"))\n\n\nif 'release' in COMMAND_LINE_TARGETS:\n    def replace_version_strings(target=None, source=None, env=None):\n        new_version = '{a}.{b}.{c}'.format(\n            a=VERSION_MAJOR, b=VERSION_MINOR, c=VERSION_PATCH\n        )\n\n        cmds = [\n            'sed -i \"s/2\\.0\\.0/{v}/g\" po/rmlint.pot',\n            'sed -i \"s/^Version:\\(\\s*\\)2\\.0\\.0/Version:\\\\1{v}/g\" pkg/fedora/rmlint.spec'\n        ]\n\n        for cmd in cmds:\n            print('Running: ' + cmd)\n            subprocess.check_call(cmd.format(v=new_version), shell=True)\n\n        if conf.env['gitrev'] is not None:\n            print('Patching .version file...')\n            with open('.version', 'r') as handle:\n                text = handle.read().strip()\n\n            if '@' not in text:\n                with open('.version', 'w') as handle:\n                    handle.write(text + '@' + conf.env['gitrev'] + '\\n')\n\n                # Commit the .version change, so git archive can see it.\n                subprocess.check_call(\n                    'git add .version && git commit -m \\\".version bump; you should not see this commit.\\\"',\n                    shell=True\n                )\n\n            # Build the .tgz on the current state\n            build_tar_gz()\n\n            # We do not want lots of temp commits, so revert the latest one.\n            if '@' not in text:\n                subprocess.check_call('git reset --hard HEAD^', shell=True)\n                with open('.version', 'w') as handle:\n                    handle.write(text + '\\n')\n\n            return\n\n        build_tar_gz()\n\n    env.Command('release', None, Action(replace_version_strings, \"Bumping version...\"))\n\n\nif 'config' in COMMAND_LINE_TARGETS:\n    def print_config(target=None, source=None, env=None):\n        yesno = lambda boolean: COLORS['green'] + 'yes' + COLORS['end'] if boolean else COLORS['red'] + 'no' + COLORS['end']\n\n        sphinx_bin = find_sphinx_binary()\n\n        print('''\n{grey}rmlint will be compiled with the following features:{end}\n\n    Find non-stripped binaries (needs libelf)             : {libelf}\n    Optimize using ioctl(FS_IOC_FIEMAP) (needs linux)     : {fiemap}\n    Support for SHA512 (needs glib >= 2.31)               : {sha512}\n    Build manpage from docs/rmlint.1.rst                  : {sphinx}\n    Support for caching checksums in file's xattr         : {xattr}\n    Support for reading json caches (needs json-glib)     : {json_glib}\n    Checking for proper support of big files >= 4GB       : {bigfiles}\n        (needs either sizeof(off_t) >= 8 ...)             : {bigofft}\n        (... or presence of stat64)                       : {bigstat}\n\n    Optimize non-rotational disks                         : {nonrotational}\n        (needs libblkid for resolving dev_t to path)      : {blkid}\n        (needs gio-unix-2.0)                              : {gio_unix}\n\n    Enable gettext localization                           : {gettext}\n        (needs <locale.h> for compile side support)       : {locale}\n        (needs msgfmt to compile .po files)               : {msgfmt}\n\n{grey}The following constants will be used during the build:{end}\n\n    Version information  : {version}\n    Compiler             : {compiler}\n    Install prefix       : {prefix}\n    Actual prefix        : {actual_prefix}\n    Verbose building     : {verbose}\n    Adding debug checks  : {debug}\n    Adding debug symbols : {symbols}\n\nType 'scons' to actually compile rmlint now. Good luck.\n    '''.format(\n            grey=COLORS['grey'], end=COLORS['end'],\n            libelf=yesno(env['HAVE_LIBELF']),\n            gettext=yesno(env['HAVE_GETTEXT']),\n            locale=yesno(env['HAVE_LIBINTL']),\n            msgfmt=yesno(env['HAVE_MSGFMT']),\n            xattr=yesno(env['HAVE_XATTR']),\n            json_glib=yesno(env['HAVE_JSON_GLIB']),\n            nonrotational=yesno(env['HAVE_GIO_UNIX'] & env['HAVE_BLKID']),\n            gio_unix=yesno(env['HAVE_GIO_UNIX']),\n            blkid=yesno(env['HAVE_BLKID']),\n            fiemap=yesno(env['HAVE_FIEMAP']),\n            sha512=yesno(env['HAVE_SHA512']),\n            bigfiles=yesno(env['HAVE_BIGFILES']),\n            bigofft=yesno(env['HAVE_BIG_OFF_T']),\n            bigstat=yesno(env['HAVE_BIG_STAT']),\n            sphinx=COLORS['green'] + 'yes, using ' + COLORS['end'] + sphinx_bin if sphinx_bin else yesno(sphinx_bin),\n            compiler=env['CC'],\n            prefix=GetOption('prefix'),\n            actual_prefix=GetOption('actual_prefix') or GetOption('prefix'),\n            verbose=yesno(ARGUMENTS.get('VERBOSE') == '1'),\n            debug=yesno(ARGUMENTS.get('DEBUG') == '1'),\n            symbols=yesno(ARGUMENTS.get('SYMBOLS') == '1'),\n            version='{a}.{b}.{c} \"{n}\" (rev {r})'.format(\n                a=VERSION_MAJOR, b=VERSION_MINOR, c=VERSION_PATCH,\n                n=VERSION_NAME, r=env.get('gitrev', 'unknown')\n            )\n        ))\n\n    env.Command('config', None, Action(print_config, \"Printing configuration...\"))\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "gui",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "po",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}