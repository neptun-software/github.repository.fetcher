{
  "metadata": {
    "timestamp": 1736710219967,
    "page": 938,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "OpenDUNE/OpenDUNE",
      "stars": 1602,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.6259765625,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n# Custom for Visual Studio\n*.cs     diff=csharp\n*.sln    merge=union\n*.csproj merge=union\n*.vbproj merge=union\n*.fsproj merge=union\n*.dbproj merge=union\n\n# Standard to msysgit\n*.doc    diff=astextplain\n*.DOC    diff=astextplain\n*.docx   diff=astextplain\n*.DOCX   diff=astextplain\n*.dot    diff=astextplain\n*.DOT    diff=astextplain\n*.pdf    diff=astextplain\n*.PDF    diff=astextplain\n*.rtf    diff=astextplain\n*.RTF    diff=astextplain\n\n# Linux scripts\nconfigure  eol=lf\nconfig.lib eol=lf\nMakefile*  eol=lf\n*.sh       eol=lf\n\n# DOS\nMakefile.wc eol=crlf\n*.bat       eol=crlf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.498046875,
          "content": "config.cache.pwd\nobjs\nconfig.cache.source.list\nconfig.cache.version\nconfig.log\nconfig.cache\nconfig.pwd\nMakefile\nMakefile.am\nMakefile.bundle\n!tools/Makefile\nbin\nbundle\nbundles\n!bin/data/put_dune2_here.txt\n!bin/data/dune.cfg\n!bin/opendune.ini.sample\nprojects/*\n!projects/generate\n!projects/determineversion.vbs\n!projects/*.in\n!projects/*.filters\n!projects/*.sln\n!projects/*.vcproj\n!projects/*.vcproj.user\n!projects/*.vcxproj\nsrc/rev.c\n.DS_Store\ntools/*.o\ntools/*.pyc\ntools/amigaMXextract\ntools/extractpak\n.*.swp\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.1259765625,
          "content": "Please follow the OpenDUNE Coding style : https://github.com/OpenDUNE/OpenDUNE/wiki/Coding-Style\n\nuse github for reporting bugs.\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 17.66796875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "Doxyfile",
          "type": "blob",
          "size": 6.91015625,
          "content": "#---------------------------------------------------------------------------\n# Project related configuration options\n#---------------------------------------------------------------------------\nPROJECT_NAME           = Opendune\n\nPROJECT_BRIEF          =\nPROJECT_LOGO           =\nOUTPUT_DIRECTORY       = docs/source/\nBRIEF_MEMBER_DESC      = YES\nREPEAT_BRIEF           = YES\nABBREVIATE_BRIEF       =\nALWAYS_DETAILED_SEC    = NO\nINLINE_INHERITED_MEMB  = NO\nFULL_PATH_NAMES        = YES\nSTRIP_FROM_PATH        = ./\nSTRIP_FROM_INC_PATH    =\nSHORT_NAMES            = NO\nJAVADOC_AUTOBRIEF      = YES\nQT_AUTOBRIEF           = NO\nMULTILINE_CPP_IS_BRIEF = NO\nINHERIT_DOCS           = YES\nSEPARATE_MEMBER_PAGES  = NO\nTAB_SIZE               = 4\n\nOPTIMIZE_OUTPUT_FOR_C  = YES\n\nBUILTIN_STL_SUPPORT    = NO\nCPP_CLI_SUPPORT        = NO\n\nIDL_PROPERTY_SUPPORT   = YES\n\nDISTRIBUTE_GROUP_DOC   = NO\nSUBGROUPING            = YES\nINLINE_GROUPED_CLASSES = NO\nTYPEDEF_HIDES_STRUCT   = NO\n\nSYMBOL_CACHE_SIZE      = 0\n\n#---------------------------------------------------------------------------\n# Build related configuration options\n#---------------------------------------------------------------------------\nEXTRACT_ALL            = NO\nEXTRACT_PRIVATE        = YES\nEXTRACT_STATIC         = YES\nEXTRACT_LOCAL_CLASSES  = YES\nEXTRACT_LOCAL_METHODS  = YES\nEXTRACT_ANON_NSPACES   = NO\nHIDE_UNDOC_MEMBERS     = NO\nHIDE_UNDOC_CLASSES     = NO\nHIDE_FRIEND_COMPOUNDS  = NO\nHIDE_IN_BODY_DOCS      = NO\nINTERNAL_DOCS          = NO\nCASE_SENSE_NAMES       = YES\nHIDE_SCOPE_NAMES       = NO\nSHOW_INCLUDE_FILES     = YES\nFORCE_LOCAL_INCLUDES   = NO\n\nINLINE_INFO            = YES\nSORT_MEMBER_DOCS       = YES\nSORT_BRIEF_DOCS        = NO\nSORT_MEMBERS_CTORS_1ST = NO\n\nSORT_GROUP_NAMES       = NO\n\nSORT_BY_SCOPE_NAME     = NO\nSTRICT_PROTO_MATCHING  = NO\n\nGENERATE_TODOLIST      = YES\nGENERATE_TESTLIST      = YES\nGENERATE_BUGLIST       = YES\nGENERATE_DEPRECATEDLIST= YES\nENABLED_SECTIONS       =\nMAX_INITIALIZER_LINES  = 30\nSHOW_USED_FILES        = YES\nSHOW_DIRECTORIES       = YES\n\nSHOW_FILES             = YES\nSHOW_NAMESPACES        = YES\n\nFILE_VERSION_FILTER    =\nLAYOUT_FILE            =\n\n#---------------------------------------------------------------------------\n# configuration options related to warning and progress messages\n#---------------------------------------------------------------------------\nQUIET                  = NO\nWARNINGS               = YES\nWARN_IF_UNDOCUMENTED   = YES\nWARN_IF_DOC_ERROR      = YES\nWARN_NO_PARAMDOC       = NO\nWARN_FORMAT            = \"$file:$line: $text\"\nWARN_LOGFILE           =\n\n#---------------------------------------------------------------------------\n# configuration options related to the input files\n#---------------------------------------------------------------------------\nINPUT                  = ./src/ \\\n                         ./decompiled/\n\nINPUT_ENCODING         = UTF-8\n\nFILE_PATTERNS          = *.c \\\n                         *.h\n\nRECURSIVE              = YES\nEXCLUDE                =\nEXCLUDE_SYMLINKS       = NO\nEXCLUDE_PATTERNS       = */.svn\nEXCLUDE_SYMBOLS        =\n\nEXAMPLE_PATH           =\nEXAMPLE_PATTERNS       =\nEXAMPLE_RECURSIVE      = NO\nIMAGE_PATH             =\nINPUT_FILTER           =\nFILTER_PATTERNS        =\nFILTER_SOURCE_FILES    = NO\nFILTER_SOURCE_PATTERNS =\n\n#---------------------------------------------------------------------------\n# configuration options related to source browsing\n#---------------------------------------------------------------------------\nSOURCE_BROWSER         = YES\nINLINE_SOURCES         = NO\nSTRIP_CODE_COMMENTS    = YES\nREFERENCED_BY_RELATION = YES\nREFERENCES_RELATION    = YES\nREFERENCES_LINK_SOURCE = YES\nUSE_HTAGS              = NO\nVERBATIM_HEADERS       = YES\n\n#---------------------------------------------------------------------------\n# configuration options related to the alphabetical class index\n#---------------------------------------------------------------------------\nALPHABETICAL_INDEX     = YES\nCOLS_IN_ALPHA_INDEX    = 5\nIGNORE_PREFIX          =\n\n#---------------------------------------------------------------------------\n# configuration options related to the HTML output\n#---------------------------------------------------------------------------\nGENERATE_HTML          = YES\n\nHTML_OUTPUT            = html\nHTML_FILE_EXTENSION    = .html\n\nGENERATE_HTMLHELP      = NO\n\nTOC_EXPAND             = YES\n\n\nGENERATE_TREEVIEW      = YES\nUSE_INLINE_TREES       = NO\nTREEVIEW_WIDTH         = 250\n\nEXT_LINKS_IN_WINDOW    = NO\n\nSEARCHENGINE           = YES\nSERVER_BASED_SEARCH    = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to the LaTeX output\n#---------------------------------------------------------------------------\nGENERATE_LATEX         = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to the RTF output\n#---------------------------------------------------------------------------\nGENERATE_RTF           = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to the man page output\n#---------------------------------------------------------------------------\nGENERATE_MAN           = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to the XML output\n#---------------------------------------------------------------------------\nGENERATE_XML           = NO\n\n#---------------------------------------------------------------------------\n# configuration options for the AutoGen Definitions output\n#---------------------------------------------------------------------------\nGENERATE_AUTOGEN_DEF   = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to the Perl module output\n#---------------------------------------------------------------------------\nGENERATE_PERLMOD       = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the preprocessor\n#---------------------------------------------------------------------------\nENABLE_PREPROCESSING   = YES\nMACRO_EXPANSION        = YES\nEXPAND_ONLY_PREDEF     = YES\nSEARCH_INCLUDES        = YES\nINCLUDE_PATH           =\nINCLUDE_FILE_PATTERNS  =\nPREDEFINED             =\nEXPAND_AS_DEFINED      =\nSKIP_FUNCTION_MACROS   = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to the dot tool\n#---------------------------------------------------------------------------\nCLASS_DIAGRAMS         = YES\nMSCGEN_PATH            =\nHIDE_UNDOC_RELATIONS   = YES\nHAVE_DOT               = NO\nCLASS_GRAPH            = YES\nCOLLABORATION_GRAPH    = YES\nGROUP_GRAPHS           = YES\nUML_LOOK               = NO\nTEMPLATE_RELATIONS     = NO\nINCLUDE_GRAPH          = YES\nINCLUDED_BY_GRAPH      = YES\nCALL_GRAPH             = NO\nCALLER_GRAPH           = NO\nGRAPHICAL_HIERARCHY    = YES\nDIRECTORY_GRAPH        = YES\n\n"
        },
        {
          "name": "INTERNALS.txt",
          "type": "blob",
          "size": 2.8662109375,
          "content": "* Dune II palette\n-----------------\n\n\nThe 256 color in game palette IBM.PAL is organized in 16 sub-palettes of\n16 colors.\n\nfirst sub-palette (colors 0-15) is nearly the \"CGA\" palette :\n  0 : #000000 black\n  1 : #aa00aa magenta\n  2 : #00aaaa cyan\n  3 : #00aa00 green\n  4 : #55ff55 bright green\n  5 : #ffff55 bright yellow\n  6 : #ff5555 bright red\n  7 : #aa5500 Brown\n  8 : #aa0000 Red\n  9 : #55ffff bright cyan\n 10 : #5151ff bright blue (close to CGA bright blue #5555ff)\n 11 : #0000aa blue\n 12 : #000000 black (duplicate)\n 13 : #555555 dark gray\n 14 : #aaaaaa bright gray / white\n 15 : #ffffff bright white\n  the only missing CGA color is bright magenta #ff55ff\n\n16 *9 = 144 :\ncurrent house colors ?\n\nthe 6 first colors of sub-palettes 8 to 14 are a shade of the house colors :\n\n 8 (128-133) : ??? grey blue shade\n 9 (144-149) : Current house / Harkonnen colors\n10 (160-165) : Atreides\n11 (176-181) : Ordos\n12 (192-197) : Fremen\n13 (208-213) : Sardaukar\n14 (224-229) : merecenary (also used by interface)\n\nFull palette description :\n\n 1 ( 16- 31) : shade of cream/grey\n 2 ( 32- 47) : \"skin\" to brown shade\n 3 ( 48- 59) : purple to dark red\n   ( 60- 63) : brown shade\n 4 ( 64- 79) : yellow-ish to light blue shade\n 5 ( 80- 84) : various colors...\n   ( 85- 95) : skin colors shade ?\n 6 ( 96-100) : dark brown shade\n   (101-104) : another brown shade ?\n   (105-111) : light sand color shade ?\n 7 (112-116) : dark sand color shade\n   (117-121) : ?\n   (122-127) : various colors : dark grey, yellow, orange, dark blue, light blue\n 8 (128-134) : grey(blue-ish) shade\n   (135-143) : pink-ish to grey shade\n 9 (144-150) : Harkonnen colors\n   (151-159) : cyan to white shade\n10 (160-166) : Atreides colors\n   (167-175) : Blues and greys\n11 (176-182) : Ordos colors\n   (183-187) : Greens\n   (188-190) : blues\n    191      : White\n12 (192-198) : Fremen colors\n   (199-203) : Browns\n   (204-207) : Blue-ish greys\n13 (208-214) : Sardaukar colors\n   (215-220) : brown shade\n    221,222  : White\n    223      : Windtrap cycling color\n14 (224-230) : Mercenaries colors\n   (231-238) : Menu colors (Also Mouse pointer)\n    239      : alternating white Red (REPAIR / etc.)\n15 (240-250) : pink/skinish shade\n   (251-254) : cycling arrows in mission selection screen\n    255      : unit selection (color cycling)\n\n\nInterface (SCREEN.CPS, CHOAM, hall of fame, etc.) :\n32-43\n59-63\n81\n97\n105-111\n112-116 127\n224-229\n244\n\nMap (campain selection screen) :\n23-28\n84\n88-92\n104\n\n\ncolors 215 to 220 are used for text in intro (red gradient)\n\ncolor 223 = Windtrap cycling color\n\ncolors 231 to 238 are used by the option menu (and other Widgets)\n\ncolor 239 : highlighted text in structure menu : PLACE IT / REPAIR etc.\n          is alterning white / red\n\ncolors 251,252,253,254 are cycling in arrows in the mission selection\n          screen.\n\ncolor 255 = unit/structure selection (palette cycling) on the map\n            and also in factories/construction yard menu\n"
        },
        {
          "name": "Makefile.bundle.in",
          "type": "blob",
          "size": 6.9619140625,
          "content": "#\n# Creation of bundles\n#\n\n# The revision is needed for the bundle name and creating an OSX application bundle.\n# Detect the revision\nVERSIONS := $(shell AWK=\"$(AWK)\" \"$(ROOT_DIR)/findversion.sh\")\nREV      := $(shell echo \"$(VERSIONS)\" | cut -f 1 -d'\t')\n\nSETFILE := $(shell for f in /usr/bin/SetFile /Developer/Tools/SetFile /Developer/usr/bin/SetFile ` which SetFile ` ; do if [ -x \"$$f\" ] ; then echo \"$$f\" ; break ; fi ; done )\n\n# Make sure we have something in REV\nifeq ($(REV),)\nREV := norev000\nendif\n\nifndef BUNDLE_NAME\nBUNDLE_NAME = opendune-custom-$(REV)-$(OS)\nendif\n\nifndef VOLUME_NAME\nVOLUME_NAME = \"OpenDUNE $(REV)\"\nMOUNT_DIR = /Volumes/$(VOLUME_NAME)\nendif\n\n# An OSX application bundle needs the data files, lang files and OpenDUNE executable in a different location.\nifdef OSXAPP\nOPENDUNE_DIR= $(BUNDLE_DIR)/$(OSXAPP)/Contents/MacOS\nelse\nOPENDUNE_DIR= $(BUNDLE_DIR)\nendif\n\nbundle: all\n\t@echo '[BUNDLE] Constructing bundle'\n\t$(Q)rm -rf   \"$(BUNDLE_DIR)\"\n\t$(Q)mkdir -p \"$(BUNDLE_DIR)\"\n\t$(Q)mkdir -p \"$(OPENDUNE_DIR)\"\nifdef OSXAPP\n\t$(Q)mkdir -p \"$(BUNDLE_DIR)/$(OSXAPP)/Contents/Resources\"\n\t$(Q)echo \"APPL????\" >                                          \"$(BUNDLE_DIR)/$(OSXAPP)/Contents/PkgInfo\"\n\t$(Q)$(ROOT_DIR)/os/macosx/plistgen.sh                          \"$(BUNDLE_DIR)/$(OSXAPP)\" \"$(REV)\"\n\t$(Q)cp \"$(ROOT_DIR)/os/macosx/opendune.icns\"                   \"$(BUNDLE_DIR)/$(OSXAPP)/Contents/Resources\"\nendif\n\t$(Q)cp \"$(BIN_DIR)/$(OPENDUNE)\"           \"$(OPENDUNE_DIR)/\"\n\t$(Q)cp \"$(ROOT_DIR)/README.txt\"           \"$(BUNDLE_DIR)/\"\n\t$(Q)cp \"$(ROOT_DIR)/COPYING\"              \"$(BUNDLE_DIR)/\"\n\t$(Q)cp \"$(ROOT_DIR)/enhancement.txt\"      \"$(BUNDLE_DIR)/\"\n\t$(Q)cp \"$(BIN_DIR)/opendune.ini.sample\"  \"$(BUNDLE_DIR)/\"\nifeq ($(OS), UNIX)\n\t$(Q)cp \"$(ROOT_DIR)/os/png_icon/opendune_32x32.png\" \"$(BUNDLE_DIR)/$(BINARY_NAME).png\"\nendif\nifeq ($(OPENDUNE), opendune.exe)\n\t$(Q)unix2dos \"$(BUNDLE_DIR)/README.txt\" \"$(BUNDLE_DIR)/COPYING\" \"$(BUNDLE_DIR)/enhancement.txt\"\n\t$(Q)unix2dos \"$(BUNDLE_DIR)/opendune.ini.sample\"\nendif\nifeq ($(OS), TOS)\n\t$(Q)cp \"$(ROOT_DIR)/README.atari\"         \"$(BUNDLE_DIR)/\"\n\t$(Q)unix2dos \"$(BUNDLE_DIR)/README.txt\" \"$(BUNDLE_DIR)/README.atari\" \"$(BUNDLE_DIR)/COPYING\" \"$(BUNDLE_DIR)/enhancement.txt\"\n\t$(Q)unix2dos \"$(BUNDLE_DIR)/opendune.ini.sample\"\nendif\n\n### Packing the current bundle into several compressed file formats ###\n#\n# Zips & dmgs do not contain a root folder, i.e. they have files in the root of the zip/dmg.\n# gzip, bzip2 and lha archives have a root folder, with the same name as the bundle.\n#\n# One can supply a custom name by adding BUNDLE_NAME:=<name> to the make command.\n#\nbundle_zip: bundle\n\t@echo '[BUNDLE] Creating $(BUNDLE_NAME).zip'\n\t$(Q)mkdir -p \"$(BUNDLES_DIR)\"\n\t$(Q)cd \"$(BUNDLE_DIR)\" && zip -r $(shell if test -z \"$(VERBOSE)\"; then echo '-q'; fi) \"$(BUNDLES_DIR)/$(BUNDLE_NAME).zip\" .\n\nbundle_7z: bundle\n\t@echo '[BUNDLE] Creating $(BUNDLE_NAME).7z'\n\t$(Q)mkdir -p \"$(BUNDLES_DIR)\"\n\t$(Q)cd \"$(BUNDLE_DIR)\" && 7z a \"$(BUNDLES_DIR)/$(BUNDLE_NAME).7z\" .\n\nbundle_gzip: bundle\n\t@echo '[BUNDLE] Creating $(BUNDLE_NAME).tar.gz'\n\t$(Q)mkdir -p \"$(BUNDLES_DIR)/.gzip/$(BUNDLE_NAME)\"\n\t$(Q)cp -R    \"$(BUNDLE_DIR)/\"* \"$(BUNDLES_DIR)/.gzip/$(BUNDLE_NAME)/\"\n\t$(Q)cd \"$(BUNDLES_DIR)/.gzip\" && tar -zc$(shell if test -n \"$(VERBOSE)\"; then echo 'v'; fi)f \"$(BUNDLES_DIR)/$(BUNDLE_NAME).tar.gz\" \"$(BUNDLE_NAME)\"\n\t$(Q)rm -rf   \"$(BUNDLES_DIR)/.gzip\"\n\nbundle_bzip2: bundle\n\t@echo '[BUNDLE] Creating $(BUNDLE_NAME).tar.bz2'\n\t$(Q)mkdir -p \"$(BUNDLES_DIR)/.bzip2/$(BUNDLE_NAME)\"\n\t$(Q)cp -R    \"$(BUNDLE_DIR)/\"* \"$(BUNDLES_DIR)/.bzip2/$(BUNDLE_NAME)/\"\n\t$(Q)cd \"$(BUNDLES_DIR)/.bzip2\" && tar -jc$(shell if test -n \"$(VERBOSE)\"; then echo 'v'; fi)f \"$(BUNDLES_DIR)/$(BUNDLE_NAME).tar.bz2\" \"$(BUNDLE_NAME)\"\n\t$(Q)rm -rf   \"$(BUNDLES_DIR)/.bzip2\"\n\nbundle_lzma: bundle\n\t@echo '[BUNDLE] Creating $(BUNDLE_NAME).tar.lzma'\n\t$(Q)mkdir -p \"$(BUNDLES_DIR)/.lzma/$(BUNDLE_NAME)\"\n\t$(Q)cp -R    \"$(BUNDLE_DIR)/\"* \"$(BUNDLES_DIR)/.lzma/$(BUNDLE_NAME)/\"\n\t$(Q)cd \"$(BUNDLES_DIR)/.lzma\" && tar --lzma -c$(shell if test -n \"$(VERBOSE)\"; then echo 'v'; fi)f \"$(BUNDLES_DIR)/$(BUNDLE_NAME).tar.lzma\" \"$(BUNDLE_NAME)\"\n\t$(Q)rm -rf   \"$(BUNDLES_DIR)/.lzma\"\n\nbundle_xz: bundle\n\t@echo '[BUNDLE] Creating $(BUNDLE_NAME).tar.xz'\n\t$(Q)mkdir -p \"$(BUNDLES_DIR)/.xz/$(BUNDLE_NAME)\"\n\t$(Q)cp -R    \"$(BUNDLE_DIR)/\"* \"$(BUNDLES_DIR)/.xz/$(BUNDLE_NAME)/\"\n\t$(Q)cd \"$(BUNDLES_DIR)/.xz\" && tar --xz -c$(shell if test -n \"$(VERBOSE)\"; then echo 'v'; fi)f \"$(BUNDLES_DIR)/$(BUNDLE_NAME).tar.xz\" \"$(BUNDLE_NAME)\"\n\t$(Q)rm -rf   \"$(BUNDLES_DIR)/.xz\"\n\nbundle_lha: bundle\n\t@echo '[BUNDLE] Creating $(BUNDLE_NAME).lha'\n\t$(Q)mkdir -p \"$(BUNDLES_DIR)/.lha/$(BUNDLE_NAME)\"\n\t$(Q)cp -R    \"$(BUNDLE_DIR)/\"* \"$(BUNDLES_DIR)/.lha/$(BUNDLE_NAME)/\"\n\t$(Q)cd \"$(BUNDLES_DIR)/.lha\" && lha ao6 \"$(BUNDLES_DIR)/$(BUNDLE_NAME).lha\" \"$(BUNDLE_NAME)\"\n\t$(Q)rm -rf   \"$(BUNDLES_DIR)/.lha\"\n\nbundle_dmg: bundle\n\t@echo '[BUNDLE] Creating $(BUNDLE_NAME).dmg'\n\t$(eval TMP_DMG := $(shell mktemp -u -t opendunedmg).dmg)\n\t$(Q)hdiutil create -srcfolder $(BUNDLE_DIR) -size 4m -ov -format UDRW -fs HFS+ -volname $(VOLUME_NAME) $(TMP_DMG)\n\t$(Q)DEV_NAME=$$(hdiutil attach -readwrite -noverify -noautoopen \"$(TMP_DMG)\" | grep '/Volumes/' | egrep '^/dev/' | sed 1q | awk '{print $$1}') && \\\n\techo \"$(TMP_DMG) mounted as $${DEV_NAME}\" && \\\n\tcp \"$(ROOT_DIR)/os/macosx/opendune.icns\" $(MOUNT_DIR)/.VolumeIcon.icns && \\\n\t$(SETFILE) -c icnC $(MOUNT_DIR)/.VolumeIcon.icns && \\\n\t$(SETFILE) -a C $(MOUNT_DIR) && \\\n\tbless --folder $(MOUNT_DIR) --openfolder $(MOUNT_DIR) && \\\n\thdiutil detach $$DEV_NAME\n\t$(Q)$(RM) $(BUNDLES_DIR)/$(BUNDLE_NAME).dmg\n\t$(Q)mkdir -p $(BUNDLES_DIR)\n\t$(Q)hdiutil convert $(TMP_DMG) -format UDZO -imagekey zlib-level=9 -o $(BUNDLES_DIR)/$(BUNDLE_NAME).dmg\n\t$(Q)$(RM) \"$(TMP_DMG)\"\n\nbundle_exe: all\n\t@echo '[BUNDLE] Creating $(BUNDLE_NAME).exe'\n\t$(Q)mkdir -p \"$(BUNDLES_DIR)\"\n\t$(Q)unix2dos \"$(ROOT_DIR)/docs/\"*.txt \"$(ROOT_DIR)/readme.txt\" \"$(ROOT_DIR)/COPYING\" \"$(ROOT_DIR)/changelog.txt\" \"$(ROOT_DIR)/known-bugs.txt\"\n\t$(Q)cd $(ROOT_DIR)/os/windows/installer && makensis.exe //DVERSION_INCLUDE=version_$(PLATFORM).txt install.nsi\n\t$(Q)mv $(ROOT_DIR)/os/windows/installer/*$(PLATFORM).exe \"$(BUNDLES_DIR)/$(BUNDLE_NAME).exe\"\n\nifdef OSXAPP\ninstall:\n\t@echo '[INSTALL] Cannot install the OSX Application Bundle'\nelse\ninstall: bundle\n\t@echo '[INSTALL] Installing OpenDUNE'\n\t$(Q)install -d \"$(INSTALL_BINARY_DIR)\"\n\t$(Q)install -d \"$(INSTALL_DATA_DIR)\"\nifeq ($(OPENDUNE), opendune.exe)\n\t$(Q)install -m 755 \"$(BUNDLE_DIR)/$(OPENDUNE)\" \"$(INSTALL_BINARY_DIR)/${BINARY_NAME}.exe\"\nelse\n\t$(Q)install -m 755 \"$(BUNDLE_DIR)/$(OPENDUNE)\" \"$(INSTALL_BINARY_DIR)/${BINARY_NAME}\"\nendif\nifndef DO_NOT_INSTALL_DOCS\n\t$(Q)install -d \"$(INSTALL_DOC_DIR)\"\n\t$(Q)install -m 644 \"$(BUNDLE_DIR)/README.txt\" \"$(BUNDLE_DIR)/enhancement.txt\" \"$(INSTALL_DOC_DIR)\"\nendif\nifndef DO_NOT_INSTALL_LICENSE\n\t$(Q)install -d \"$(INSTALL_DOC_DIR)\"\n\t$(Q)install -m 644 \"$(BUNDLE_DIR)/COPYING\" \"$(INSTALL_DOC_DIR)\"\nendif\nifndef DO_NOT_INSTALL_ICON\nifeq ($(OS), UNIX)\n\t$(Q)install -d \"$(INSTALL_ICON_DIR)\"\n\t$(Q)install -m 644 \"$(BUNDLE_DIR)/$(BINARY_NAME).png\" \"$(INSTALL_ICON_DIR)\"\nendif\nendif\nendif # OSXAPP\n"
        },
        {
          "name": "Makefile.in",
          "type": "blob",
          "size": 5.455078125,
          "content": "# Check if we want to show what we are doing\nifdef VERBOSE\n\tQ =\nelse\n\tQ = @\nendif\n\ninclude Makefile.am\n\nCONFIG_CACHE_PWD         = !!CONFIG_CACHE_PWD!!\nCONFIG_CACHE_SOURCE_LIST = !!CONFIG_CACHE_SOURCE_LIST!!\nBIN_DIR        = !!BIN_DIR!!\nSRC_DIR        = !!SRC_DIR!!\nROOT_DIR       = !!ROOT_DIR!!\nBUNDLE_DIR     = \"$(ROOT_DIR)/bundle\"\nBUNDLES_DIR    = \"$(ROOT_DIR)/bundles\"\nINSTALL_DIR    = !!INSTALL_DIR!!\nINSTALL_BINARY_DIR     = \"$(INSTALL_DIR)/\"!!BINARY_DIR!!\nINSTALL_DOC_DIR        = \"$(INSTALL_DIR)/\"!!DOC_DIR!!\nINSTALL_DATA_DIR       = \"$(INSTALL_DIR)/\"!!DATA_DIR!!\nINSTALL_ICON_DIR       = \"$(INSTALL_DIR)/\"!!ICON_DIR!!\nSOURCE_LIST     = !!SOURCE_LIST!!\nCONFIGURE_FILES = !!CONFIGURE_FILES!!\nBINARY_NAME = !!BINARY_NAME!!\nSTRIP       = !!STRIP!!\nOPENDUNE    = !!OPENDUNE!!\nOPENDUNES   = $(SRC_DIRS:%=%/$(OPENDUNE))\nOS          = !!OS!!\nOSXAPP      = !!OSXAPP!!\nLIPO        = !!LIPO!!\nAWK         = !!AWK!!\nSORT        = !!SORT!!\nDISTCC      = !!DISTCC!!\n\nRES := $(shell if [ ! -f $(CONFIG_CACHE_PWD) ] || [ \"`pwd`\" != \"`cat $(CONFIG_CACHE_PWD)`\" ]; then echo \"`pwd`\" > $(CONFIG_CACHE_PWD); fi )\nRES := $(shell if [ ! -f $(CONFIG_CACHE_SOURCE_LIST) ] || [ -n \"`cmp $(CONFIG_CACHE_SOURCE_LIST) $(SOURCE_LIST) 2>/dev/null`\" ]; then cp $(SOURCE_LIST) $(CONFIG_CACHE_SOURCE_LIST); fi )\n\nall: config.pwd config.cache\nifdef DISTCC\n\t@if [ -z \"`echo '$(MFLAGS)' | grep '\\-j'`\" ]; then echo; echo \"WARNING: you enabled distcc support, but you don't seem to be using the -jN paramter\"; echo; fi\nendif\n\t@for dir in $(DIRS); do \\\n\t\t$(MAKE) -C $$dir all || exit 1; \\\n\tdone\nifdef LIPO\n# Lipo is an OSX thing. If it is defined, it means we are building for universal,\n# and so we have have to combine the binaries into one big binary\n\n# Remove the last binary made by the last compiled target\n\t$(Q)rm -f $(BIN_DIR)/$(OPENDUNE)\n# Make all the binaries into one\n\t$(Q)$(LIPO) -create -output $(BIN_DIR)/$(OPENDUNE) $(OPENDUNES)\nendif\n\nhelp:\n\t@echo \"Available make commands:\"\n\t@echo \"\"\n\t@echo \"Compilation:\"\n\t@echo \"  all           compile the executable and the lang files\"\n\t@echo \"  lang          compile the lang files only\"\n\t@echo \"Clean up:\"\n\t@echo \"  clean         remove the files generated during compilation\"\n\t@echo \"  mrproper      remove the files generated during configuration and compilation\"\n\t@echo \"Run after compilation:\"\n\t@echo \"  run           execute OpenDUNE after the compilation\"\n\t@echo \"  run-gdb       execute OpenDUNE in debug mode after the compilation\"\n\t@echo \"  run-prof      execute OpenDUNE in profiling mode after the compilation\"\n\t@echo \"  run-valgrind  execute OpenDUNE in valgrind after the compilation\"\n\t@echo \"Installation:\"\n\t@echo \"  install       install the compiled files and the data-files after the compilation\"\n\t@echo \"  bundle        create the base for an installation bundle\"\n\t@echo \"  bundle_zip    create the zip installation bundle\"\n\t@echo \"  bundle_gzip   create the gzip installation bundle\"\n\t@echo \"  bundle_bzip2  create the bzip2 installation bundle\"\n\t@echo \"  bundle_lha    create the lha installation bundle\"\n\t@echo \"  bundle_dmg    create the dmg installation bundle\"\n\nconfig.pwd: $(CONFIG_CACHE_PWD)\n\t$(MAKE) reconfigure\n\nconfig.cache: $(CONFIG_CACHE_SOURCE_LIST) $(CONFIGURE_FILES)\n\t$(MAKE) reconfigure\n\nreconfigure:\nifeq ($(shell if test -f config.cache; then echo 1; fi), 1)\n\t@echo \"----------------\"\n\t@echo \"The system detected that source.list or any configure file is altered.\"\n\t@echo \" Going to reconfigure with last known settings...\"\n\t@echo \"----------------\"\n# Make sure we don't lock config.cache\n\t@$(shell cat config.cache | sed 's@\\\\ @\\\\\\\\ @g') || exit 1\n\t@echo \"----------------\"\n\t@echo \"Reconfig done. Please re-execute make.\"\n\t@echo \"----------------\"\nelse\n\t@echo \"----------------\"\n\t@echo \"Have not found a configuration, please run configure first.\"\n\t@echo \"----------------\"\n\t@exit 1\nendif\n\nclean:\n\t@for dir in $(DIRS); do \\\n\t\t$(MAKE) -C $$dir clean; \\\n\tdone\n\t$(Q)rm -rf $(BUNDLE_TARGET)\n\nlang:\n\t@for dir in $(LANG_DIRS); do \\\n\t\t$(MAKE) -C $$dir all; \\\n\tdone\n\nmrproper:\n\t@for dir in $(DIRS); do \\\n\t\t$(MAKE) -C $$dir mrproper; \\\n\tdone\n# Don't be tempted to merge these two for loops. Doing that breaks make\n# --dry-run, since make has this \"feature\" that it always runs commands\n# containing $(MAKE), even when --dry-run is passed. The objective is of\n# course to also get a dry-run of submakes, but make is not smart enough\n# to see that a for loop runs both a submake and an actual command.\n\t@for dir in $(DIRS); do \\\n\t\trm -f $$dir/Makefile; \\\n\tdone\n\t$(Q)rm -rf objs\n\t$(Q)rm -f Makefile Makefile.am Makefile.bundle\n\t$(Q)rm -f $(CONFIG_CACHE_SOURCE_LIST) config.cache config.pwd config.log $(CONFIG_CACHE_PWD)\n# directories for bundle generation\n\t$(Q)rm -rf $(BUNDLE_DIR)\n\t$(Q)rm -rf $(BUNDLES_DIR)\n# output of profiling\n\t$(Q)rm -f $(BIN_DIR)/gmon.out\ndistclean: mrproper\n\ndepend:\n\t@for dir in $(SRC_DIRS); do \\\n\t\t$(MAKE) -C $$dir depend; \\\n\tdone\n\nrun: all\n\t$(Q)cd !!BIN_DIR!! && ./!!OPENDUNE!! $(OPENDUNE_ARGS)\n\nrun-gdb: all\n\t$(Q)cd !!BIN_DIR!! && gdb --ex run --args ./!!OPENDUNE!! $(OPENDUNE_ARGS)\n\nrun-prof: all\n\t$(Q)cd !!BIN_DIR!! && ./!!OPENDUNE!! $(OPENDUNE_ARGS) && gprof !!OPENDUNE!! | less\n\nrun-valgrind: all\n\t$(Q)cd !!BIN_DIR!! && valgrind --track-origins=yes --leak-check=full --show-reachable=yes --suppressions=$(ROOT_DIR)/valgrind.suppression --num-callers=50 ./!!OPENDUNE!! $(OPENDUNE_ARGS)\n\n\n%.o:\n\t@for dir in $(SRC_DIRS); do \\\n\t\t$(MAKE) -C $$dir $(@:src/%=%); \\\n\tdone\n\n%.lng:\n\t@for dir in $(LANG_DIRS); do \\\n\t\t$(MAKE) -C $$dir $@; \\\n\tdone\n\n.PHONY: test distclean mrproper clean\n\ninclude Makefile.bundle\n"
        },
        {
          "name": "Makefile.src.in",
          "type": "blob",
          "size": 7.1767578125,
          "content": "CC_HOST        = !!CC_HOST!!\nCC_BUILD       = !!CC_BUILD!!\nAS_HOST        = !!AS_HOST!!\nSTRIP          = !!STRIP!!\nCFLAGS         = !!CFLAGS!!\nCFLAGS_BUILD   = !!CFLAGS_BUILD!!\nASFLAGS        = !!ASFLAGS!!\nLIBS           = !!LIBS!!\nLDFLAGS        = !!LDFLAGS!!\nLDFLAGS_BUILD  = !!LDFLAGS_BUILD!!\nROOT_DIR       = !!ROOT_DIR!!\nBIN_DIR        = !!BIN_DIR!!\nSRC_OBJS_DIR   = !!SRC_OBJS_DIR!!\nSRC_DIR        = !!SRC_DIR!!\nOPENDUNE       = !!OPENDUNE!!\nDEPEND         = !!DEPEND!!\nOS             = !!OS!!\nSTAGE          = !!STAGE!!\nMAKEDEPEND     = !!MAKEDEPEND!!\nCFLAGS_MAKEDEP = !!CFLAGS_MAKEDEP!!\nSORT           = !!SORT!!\nAWK            = !!AWK!!\nCONFIG_CACHE_COMPILER = $(SRC_OBJS_DIR)/!!CONFIG_CACHE_COMPILER!!\nCONFIG_CACHE_LINKER   = $(SRC_OBJS_DIR)/!!CONFIG_CACHE_LINKER!!\nCONFIG_CACHE_SOURCE   = $(SRC_OBJS_DIR)/!!CONFIG_CACHE_SOURCE!!\nCONFIG_CACHE_VERSION  = $(SRC_OBJS_DIR)/!!CONFIG_CACHE_VERSION!!\n\nOBJS_C   := !!OBJS_C!!\nOBJS_CXX := !!OBJS_CXX!!\nOBJS_S   := !!OBJS_S!!\nOBJS     := $(OBJS_C) $(OBJS_CXX) $(OBJS_S)\nSRCS     := !!SRCS!!\n\n# All C-files depend on those 3 files\nFILE_DEP := $(CONFIG_CACHE_COMPILER)\n# Create all dirs and subdirs\nRES      := $(shell mkdir -p $(BIN_DIR) $(sort $(dir $(OBJS))))\n\nCFLAGS += -I $(SRC_OBJS_DIR)\nCFLAGS_MAKEDEP += -I $(SRC_OBJS_DIR)\n\n# Check if we want to show what we are doing\nifdef VERBOSE\n\tQ =\n\tE = @true\nelse\n\tQ = @\n\tE = @echo\nendif\n\n# Our default target\nall: $(BIN_DIR)/$(OPENDUNE)\n\n# Always run version detection, so we always have an accurate modified\n# flag\nVERSIONS := $(shell AWK=\"$(AWK)\" \"$(ROOT_DIR)/findversion.sh\")\nMODIFIED := $(shell echo \"$(VERSIONS)\" | cut -f 3 -d'\t')\n\n# Use autodetected revisions\nREV      := $(shell echo \"$(VERSIONS)\" | cut -f 1 -d'\t')\nREV_NR   := $(shell echo \"$(VERSIONS)\" | cut -f 2 -d'\t')\n\n# Make sure we have something in REV and REV_NR\nifeq ($(REV),)\nREV := norev000\nendif\nifeq ($(REV_NR),)\nREV_NR := 0\nendif\n\n# This helps to recompile if flags change\nRES := $(shell if [ \"`cat $(CONFIG_CACHE_COMPILER) 2>/dev/null`\" != \"$(CFLAGS)\" ]; then echo \"$(CFLAGS)\" > $(CONFIG_CACHE_COMPILER); fi )\nRES := $(shell if [ \"`cat $(CONFIG_CACHE_LINKER) 2>/dev/null`\" != \"$(LDFLAGS) $(LIBS)\" ]; then echo \"$(LDFLAGS) $(LIBS)\" > $(CONFIG_CACHE_LINKER); fi )\n\n# If there is a change in the source-file-list, make sure we recheck the deps\nRES := $(shell if [ \"`cat $(CONFIG_CACHE_SOURCE) 2>/dev/null`\" != \"$(SRCS)\" ]; then echo \"$(SRCS)\" > $(CONFIG_CACHE_SOURCE); fi )\n# If there is a change in the revision, make sure we recompile rev.cpp\nRES := $(shell if [ \"`cat $(CONFIG_CACHE_VERSION) 2>/dev/null`\" != \"$(REV) $(MODIFIED)\" ]; then echo \"$(REV) $(MODIFIED)\" > $(CONFIG_CACHE_VERSION); fi )\n\nifndef MAKEDEPEND\n# The slow, but always correct, dep-check\nDEP_MASK := %.d\nDEPS     := $(OBJS_C:%.o=%.d) $(OBJS_CXX:%.o=%.d)\n\n# Only include the deps if we are compiling everything\nifeq ($(filter %.o clean mrproper, $(MAKECMDGOALS)),)\n-include $(DEPS)\nelse\n# In case we want to compile a single target, include the .d file for it\nifneq ($(filter %.o, $(MAKECMDGOALS)),)\nSINGLE_DEP := $(filter %.o, $(MAKECMDGOALS))\n-include $(SINGLE_DEP:%.o=%.d)\nendif\nendif\n\n# Find the deps via GCC. Rarely wrong, but a bit slow\n\n$(OBJS_C:%.o=%.d): %.d: $(SRC_DIR)/%.c $(FILE_DEP)\n\t$(E) '$(STAGE) DEP $(<:$(SRC_DIR)/%.c=%.c)'\n\t$(Q)$(CC_HOST) $(CFLAGS) -MM $< | sed 's@^$(@F:%.d=%.o):@$@ $(@:%.d=%.o):@' > $@\n\n$(OBJS_CXX:%.o=%.d): %.d: $(SRC_DIR)/%.cpp $(FILE_DEP)\n\t$(E) '$(STAGE) DEP $(<:$(SRC_DIR)/%.cpp=%.cpp)'\n\t$(Q)$(CC_HOST) $(CFLAGS) -MM $< | sed 's@^$(@F:%.d=%.o):@$@ $(@:%.d=%.o):@' > $@\n\nelse\n# The much faster, but can be wrong, dep-check\nDEP_MASK :=\nDEPS     := Makefile.dep\n\n# Only include the deps if we are not cleaning\nifeq ($(filter depend clean mrproper, $(MAKECMDGOALS)),)\n-include Makefile.dep\nendif\n\nifeq (\"$(SRC_OBJS_DIR)/$(DEPEND)\",\"$(MAKEDEPEND)\")\nDEP := $(MAKEDEPEND)\n$(SRC_OBJS_DIR)/$(DEPEND): $(SRC_DIR)/depend/depend.cpp\n\t$(E) '$(STAGE) Compiling and linking $(DEPEND)'\n\t$(Q)$(CXX) $(LDFLAGS_BUILD) -o $@ $<\nendif\n\n# Make sure that only 'make depend' ALWAYS triggers a recheck\nifeq ($(filter depend, $(MAKECMDGOALS)),)\nMakefile.dep: $(FILE_DEP) $(SRCS:%=$(SRC_DIR)/%) $(CONFIG_CACHE_SOURCE) $(DEP)\nelse\nMakefile.dep: $(FILE_DEP) $(SRCS:%=$(SRC_DIR)/%) $(DEP) FORCE\nendif\n\t$(E) '$(STAGE) DEP CHECK (all files)'\n\t$(Q)rm -f Makefile.dep.tmp\n\t$(Q)touch Makefile.dep.tmp\n\n# Calculate the deps via makedepend\n\t$(Q)$(MAKEDEPEND) -f$(SRC_OBJS_DIR)/Makefile.dep.tmp -o.o -Y -v -- $(CFLAGS_MAKEDEP) -- $(SRCS:%=$(SRC_DIR)/%) 2>/dev/null\n\n# Convert x:/... paths to /x/... for mingw\nifeq ($(OS), MINGW)\n\t@cat Makefile.dep.tmp | sed 's@/\\([a-zA-Z]\\):\\/@\\/\\1\\/@g' > Makefile.dep.tmp.mingw\n\t@cp Makefile.dep.tmp.mingw Makefile.dep.tmp\n\t@rm -f Makefile.dep.tmp.mingw\nendif\n\n# Remove all comments and includes that don't start with $(SRC_DIR)\n# Remove $(SRC_DIR) from object-file-name\n\t@$(AWK) '                           \\\n\t/^# DO NOT/ { print $$0 ; next}     \\\n\t/^#/ {next}                         \\\n\t/: / {                               \\\n\t\tleft = NF - 1;                    \\\n\t\tfor (n = 2; n <= NF; n++) {       \\\n\t\t\tif (match($$n, \"^$(ROOT_DIR)\") == 0) { \\\n\t\t\t\t$$n = \"\";                     \\\n\t\t\t\tleft--;                       \\\n\t\t\t}                               \\\n\t\t}                                 \\\n\t\tgsub(\"$(SRC_DIR)/\", \"\", $$1);     \\\n\t\tif (left > 0) {                   \\\n\t\t\tprint $$0;                      \\\n\t\t\t$$1 = \"Makefile.dep:\";          \\\n\t\t\tprint $$0;                      \\\n\t\t}                                 \\\n\t\tnext                              \\\n\t}                                   \\\n\t{                                   \\\n\t\tprint $$0                         \\\n\t}                                   \\\n\t' < Makefile.dep.tmp | sed 's@  *@ @g;s@ $$@@' | $(SORT) > Makefile.dep\n\n\t$(Q)rm -f Makefile.dep.tmp Makefile.dep.tmp.bak\n\nendif\n\n# Avoid problems with deps if a .h/.hpp/.hpp.sq file is deleted without the deps\n#  being updated. Now the Makefile continues, the deps are recreated\n#  and all will be fine.\n%.h %.hpp %.hpp.sq:\n\t@true\n\n\n# Compile all the files according to the targets\n\n$(OBJS_C): %.o: $(SRC_DIR)/%.c $(DEP_MASK) $(FILE_DEP)\n\t$(E) '$(STAGE) Compiling $(<:$(SRC_DIR)/%.c=%.c)'\n\t$(Q)$(CC_HOST) $(CFLAGS) -c -o $@ $<\n\n$(OBJS_CXX): %.o: $(SRC_DIR)/%.cpp $(DEP_MASK) $(FILE_DEP)\n\t$(E) '$(STAGE) Compiling $(<:$(SRC_DIR)/%.cpp=%.cpp)'\n\t$(Q)$(CC_HOST) $(CFLAGS) -c -o $@ $<\n\n$(OBJS_S): %.o: $(SRC_DIR)/%.s\n\t$(E) '$(STAGE) Assembling $(<:$(SRC_DIR)/%.s=%.s)'\n\t$(Q)$(AS_HOST) $(ASFLAGS) -o $@ $<\n\n$(BIN_DIR)/$(OPENDUNE): $(OPENDUNE)\n\t$(Q)cp $(OPENDUNE) $(BIN_DIR)/$(OPENDUNE)\n\n$(OPENDUNE): $(OBJS) $(CONFIG_CACHE_LINKER)\n\t$(E) '$(STAGE) Linking $@'\n\t$(Q)+$(CC_HOST) $(LDFLAGS) $(OBJS) $(LIBS) -o $@\nifdef STRIP\n\t$(Q)$(STRIP) $@\nendif\n\n# Revision files\n\n$(SRC_DIR)/rev.c: $(CONFIG_CACHE_VERSION) $(SRC_DIR)/rev.c.in\n\t$(Q)cat $(SRC_DIR)/rev.c.in      | sed \"s@\\!\\!REVISION\\!\\!@$(REV_NR)@g;s@!!VERSION!!@$(REV)@g;s@!!MODIFIED!!@$(MODIFIED)@g;s@!!DATE!!@`date +%d.%m.%y`@g\" > $(SRC_DIR)/rev.c\n\nFORCE:\n\ndepend: $(DEPS)\n\nclean:\n\t$(E) '$(STAGE) Cleaning up object files'\n\t$(Q)rm -f $(DEPS) $(OBJS) $(OPENDUNE) $(DEPEND) $(OPENDUNE:%=$(BIN_DIR)/%) $(CONFIG_CACHE_COMPILER) $(CONFIG_CACHE_LINKER) $(CONFIG_CACHE_SOURCE)\n\nmrproper: clean\n\t$(Q)rm -f $(SRC_DIR)/rev.c\n\n%.o:\n\t@echo '$(STAGE) No such source-file: $(@:%.o=%).c'\n\n.PHONY: all mrproper depend clean FORCE\n"
        },
        {
          "name": "Makefile.tcc",
          "type": "blob",
          "size": 2.88671875,
          "content": "# Settings via env variables\n#  CC          - Your C compiler\n#  CFLAGS      - Your CFLAGS (we add a few we find essential)\n#  LDFLAGS     - Your LDFLAGS\n#  LIBS        - Which libs to include (we add a few we find essential)\n#\n#  Settings via parameters\n#   OSX:=1     - To compile on/for OSX\n#   WIN32:=1   - To compile on/for Windows\n#   STATIC:=1  - If you want to compile static (default yes for WIN32)\n\nCFLAGS := $(CFLAGS)\nifdef WIN32\nCFLAGS := $(CFLAGS) -DWIN32\nifndef STATIC\nSTATIC := 1\nendif\nEXTENSION := .exe\nLIB_EXTENSION := .dll\nelse\nEXTENSION :=\nifdef OSX\nLIB_EXTENSION := .dylib\nelse\nLIB_EXTENSION := .so\nendif\nendif\n\nifndef SDL_INCLUDE\nifdef OSX\nSDL_INCLUDE := /opt/local/include/SDL\nelse\nSDL_INCLUDE := /usr/include/SDL\nendif\nendif\n\nifdef STATIC\nLIBS := $(LIBS)\nelse\nLIBS := $(LIBS)\nendif\n\nifdef OSX\nifdef STATIC\nLDFLAGS := $(LDFLAGS) `sdl-config --static-libs`\nelse\nLDFLAGS := $(LDFLAGS) `sdl-config --libs`\nendif\nelse\nLIBS := $(LIBS) -lSDL\nifdef WIN32\nLIBS := $(LIBS) -lwinmm\nendif\nendif\n\nifdef WIN32\nLIBS := $(LIBS) -lSDL -lwinmm\nendif\n\nifdef OSX\nLIBS := $(LIBS) -lSDL -L/opt/local/lib\nendif\n\nifdef ALSA\nLIBS := $(LIBS) -lasound\nCFLAGS := $(CFLAGS) -DALSA\nendif\n\nCFLAGS := $(CFLAGS) -g -Wall\nLDFLAGS := $(LDFLAGS) -g\n\nHEADER := $(shell ls decompiled/*.h src/*.h src/*/*.h include/*.h 2>/dev/null)\nDECOMPILED := $(shell ls decompiled/*.c 2>/dev/null)\nDECOMPILED_OBJS := $(DECOMPILED:%.c=objs/%.o)\nSOURCE := $(shell ls src/*.c src/*/*.c 2>/dev/null)\nSOURCE_OBJS := $(SOURCE:%.c=objs/%.o)\nRES := $(shell mkdir -p objs/decompiled objs/src)\n\nifdef VERBOSE\n\tQ =\nelse\n\tQ = @\nendif\n\nall: opendune$(EXTENSION)\n\nobjs/depend: tools/depend/depend.cpp\n\t@echo \"[Compiling / Linking] depend\"\n\t$(Q)$(CXX) $(LDFLAGS) -o $@ $^\n\nifeq ($(filter depend clean, $(MAKECMDGOALS)),)\n-include Makefile.dep\nendif\n\nifeq ($(filter depend, $(MAKECMDGOALS)),)\nMakefile.dep: objs/depend $(SOURCE) $(DECOMPILED) $(HEADER)\nelse\nMakefile.dep: objs/depend FORCE\nendif\n\t@echo \"[Dependency Check] All files\"\n\t$(Q)objs/depend -fMakefile.dep.tmp -o.o -Y -v -- $(CFLAGS) -I include -- $(DECOMPILED) $(SOURCE) 2>/dev/null\n\t$(Q)cat Makefile.dep.tmp | sed 's@^src@objs/src@g;s@^decompiled@objs/decompiled@g' > Makefile.dep\n\t$(Q) rm -f Makefile.dep.tmp Makefile.dep.tmp.bak\n\ndepend: Makefile.dep\n\nobjs/%.o: %.c\n\t$(shell mkdir -p `dirname $@`)\n\t@echo \"[Compiling] $<\"\n\t$(Q)cat $< | perl -p -e \"s/'([A-Z\\s]{4})'/'0x' . unpack('H*', \\$$1)/ge\" > $<.tmp.c\n\t$(Q)$(CC) $(CFLAGS) -c $<.tmp.c -o $@ -I include/ -I $(SDL_INCLUDE)\n\t$(Q)rm -f $<.tmp.c\n\nopendune$(EXTENSION): $(DECOMPILED_OBJS) $(SOURCE_OBJS)\n\t@echo \"[Linking] $@\"\n\t$(Q)$(CC) $(LDFLAGS) -o $@ $(DECOMPILED_OBJS) $(SOURCE_OBJS) $(LIBS)\n\nclean:\n\t@echo \"[Cleaning] opendune\"\n\t$(Q)rm -f Makefile.dep opendune$(EXTENSION) $(DECOMPILED_OBJS) $(SOURCE_OBJS)\n\nrun: all\n\t$(Q)./opendune$(EXTENSION)\n\nrun-gdb: all\n\t$(Q)gdb --ex run --args ./opendune$(EXTENSION)\n\nrun-prof: all\n\t$(Q)./opendune$(EXTENSION) && gprof opendune | less\n\nFORCE:\n\n"
        },
        {
          "name": "Makefile.wc",
          "type": "blob",
          "size": 2.7509765625,
          "content": "# /mf : Flat memory model\n# /5r : pentium register calling convention\n# /s  : remove stack overflow checks\n# /ox : optimize\n# /wx : warnings maximums\n# /q  : quiet\ncoptions   = /5r /s /ox /wx /q /bt=DOS4G /dDOS /i=..\\include\nlink_options\t=\n\nobjs = animation.obj config.obj cutscene.obj explosion.obj file.obj gfx.obj house.obj ini.obj inifile.obj load.obj map.obj object.obj opendune.obj rev.obj save.obj scenario.obj sprites.obj string.obj structure.obj team.obj tile.obj timer.obj tools.obj unit.obj wsa.obj\naudio_objs = driver.obj dsp_none.obj midi_none.obj mt32mpu.obj sound.obj crashlog_none.obj\nmisc_objs = format40.obj format80.obj input.obj mouse.obj\ngui_objs = editbox.obj font.obj gui.obj mentat.obj security.obj viewport.obj widget.obj widget_click.obj widget_draw.obj\nos_objs = video_dos.obj endian.obj error.obj readdir.obj\n# readdir.obj\npool_src = $(p)house.c $(p)structure.c $(p)team.c $(p)unit.c\nsave_src = $(p)house.c $(p)info.c $(p)map.c $(p)object.c $(p)scenario.c $(p)structure.c $(p)team.c $(p)unit.c\nscript_src = $(p)structure.c $(p)team.c $(p)unit.c\ntable_src = $(p)animation.c $(p)explosion.c $(p)sound.c $(p)widget.c\np = p\npool_objs = $+ $(pool_src:.c=.obj) $-\np = sl\nsave_objs = $+ $(save_src:.c=.obj) $- saveload.obj scriptengine.obj\np = s\nscript_objs = $+ $(script_src:.c=.obj) $- general.obj script.obj\np = t\ntable_objs = $+ $(table_src:.c=.obj) $- actioninfo.obj houseanimation.obj houseinfo.obj landscapeinfo.obj movementtype.obj selectiontype.obj structureinfo.obj teamaction.obj tilediff.obj unitinfo.obj widgetinfo.obj windowdesc.obj\np =\n\nall_objs = $(objs) $(audio_objs) $(misc_objs) $(gui_objs) $(os_objs) $(pool_objs) $(save_objs) $(script_objs) $(table_objs)\n\n\nall:\tprecopy ..\\bin\\opendune.exe\n\nprecopy:\t.symbolic\n\tCD ..\\src\\pool\n\t@FOR %F IN ($(pool_src)) DO COPY /Y %F p%F\n\tCD ..\\saveload\n\t@FOR %F IN ($(save_src)) DO COPY /Y %F sl%F\n\tCD ..\\script\n\t@FOR %F IN ($(script_src)) DO COPY /Y %F s%F\n\tCD ..\\table\n\t@FOR %F IN ($(table_src)) DO COPY /Y %F t%F\n\tCD ..\\..\\objs\n\n.c:\t..\\src\\;..\\src\\audio\\;..\\src\\crashlog\\;..\\src\\codec\\;..\\src\\gui\\;..\\src\\input\\;..\\src\\os\\;..\\src\\pool\\;..\\src\\saveload\\;..\\src\\script\\;..\\src\\table\\;..\\src\\video\\\n\n# $<  : prerequesites\n# $[* : without file extension\n\n.c.obj:\n\twcc386 $(coptions) $<\n\n..\\bin\\opendune.exe:\topendune.exe\n\tcopy $< $@\n\nopendune.exe:\t$(all_objs)\n\t%write opendune.lnk NAME   $@\n\t%write opendune.lnk SYSTEM DOS4G\n\t%write opendune.lnk OPTION MAP\n\t#%write opendune.lnk FILE   {$<}\n\tFOR %F IN ($<) DO %write opendune.lnk FILE   %F\n\t%write opendune.lnk LIBRARY clib3r.lib\n\twlink $(link_options) @opendune.lnk\n\tCD ..\\src\\pool\n\t@FOR %F IN ($(pool_src)) DO DEL p%F\n\tCD ..\\saveload\n\t@FOR %F IN ($(save_src)) DO DEL sl%F\n\tCD ..\\script\n\t@FOR %F IN ($(script_src)) DO DEL s%F\n\tCD ..\\table\n\t@FOR %F IN ($(table_src)) DO DEL t%F\n\tCD ..\\..\\objs\n"
        },
        {
          "name": "README",
          "type": "blob",
          "size": 0.009765625,
          "content": "README.txt"
        },
        {
          "name": "README.atari",
          "type": "blob",
          "size": 1.26953125,
          "content": "To get OpenDUNE running on Atari Falcon, TT and accelerated ST/STE:\n\n\n* building\n\ncross compile using cross mint :\nhttp://vincent.riviere.free.fr/soft/m68k-atari-mint/\n\nuse :\n./configure --host=m68k-atari-mint --os=TOS\n\nyou'll also need vasm (vasmm68k_mot)\nhttp://sun.hasenbraten.de/vasm/\n\n\n* Precompiled versions\n\nhttp://nanard.free.fr/opendune/\n\nDiscussion about the port on atari-forum.com :\nhttp://www.atari-forum.com/viewtopic.php?f=26&t=29873\n\n\n* running\n\n- MIDI music is sent to the ATARI MIDI Out port : use a Gerneral Midi\nor MT32 compatible expander to hear music. Set mt32midi=1 in OPENDUNE.INI\nto enable the MT32 songs.\n\n- 320x200 (RGB) or 320x240 (VGA) 8bpp modes are used on Falcon.\nTT Low (320x480 8bpp) is used on TT.\nST Low (320x200 4bpp) is used on ST/STE.\n\n- ST/STE requires 68030 accelerator or better\n\n- Keyboard and mouse input is managed with a custom IKBD interrupt\nhandler.\n\n- Digitized Sound and Voices are played using STE DMA Sound.\nDepending on your Falcon configuration, you may need to run\nFPATCH.PRG / FPATCH2.PRG before launching the game\n\n- OPENDUNE.INI file should be located in the same directory as\nOPENDUNE.TOS.\n\n- DOS Dune II  v1.07 original files should be in a DATA subdirectory,\nsavegames and options will be stored in a SAVES subdirectory.\n\n\nThomas Bernard\n"
        },
        {
          "name": "README.os2",
          "type": "blob",
          "size": 0.974609375,
          "content": "OpenDUNE for OS/2\n-----------------\n\n1. How to run OpenDUNE\n----------------------\n\n1) Copy Dune v1.07 files to `data' directory1\n2) Copy CM32L_CONTROL.ROM and CM32L_PCM.ROM to `roms' directory\n3) Copy opendune.ini.sample to opendune.ini to modify default settings\n\n* You SHOULD GET Dune2 v1.07 files and MIDI ROM files by yourself.\n\n2. Tips\n-------\n\n* If CPU load is high, set mt32midi of opendune.ini to 0.\n* If CPU load is still high, rename `roms' directory to something like\n`roms.sav'. This disables MIDI sounds at all.\n\n3. How to build OpenDUNE\n------------------------\n\n3.1. Requirements\n-----------------\n\n  * libkai v2.2.1\n  * munt-libmt32emu v2.4.1\n  * libfluidsynth v1.0.9-r2\n  * SDL2 v2.0.4\n  * gcc v12.4.0\n\n3.2. Configure\n--------------\n\nJust run configure like:\n\n  sh ./configure\n\nIf you want to enable FluidSynth midi support, then:\n\n  sh ./configure --without-munt --with-fluid\n\n3.3. Build\n----------\n\nJust run make like:\n\n  make\n\nThen, you'll get opendune.exe in `bin' directory.\n"
        },
        {
          "name": "README.txt",
          "type": "blob",
          "size": 6.2861328125,
          "content": "About\n-----\nOpenDUNE is an open source re-creation of the popular game \"Dune II\",\n originally made by Westwood Studios, and released by Virgin Entertainment.\nIt attempts to re-create the original game and apply modern technology to it\n to allow it to be run natively on most operating systems.\n\nOpenDUNE is licensed under the GNU General Public License version 2.0. For\n more information, see the COPYING file included with every release and source\n download of the game.\n\n\nContact\n-------\nThe latest version of OpenDUNE is always available at:\n  http://www.opendune.org/\nThe latest development version is at:\n  https://github.com/OpenDUNE/OpenDUNE\nOur IRC (chat) is at:\n  irc://irc.oftc.net/OpenDUNE\nYou can report bugs at:\n  https://github.com/OpenDUNE/OpenDUNE/issues\nOur wiki is at:\n  https://github.com/OpenDUNE/OpenDUNE/wiki\n\n\nSupported Platforms\n-------------------\nOpenDUNE is written in ANSI C (C89), and only requires SDL/SDL2 to run. In result,\n OpenDUNE should run on all platforms supported by SDL or SDL2.\nCurrently we officially support the following platforms:\n\n  - Linux\n  - FreeBSD\n  - Mac OS X (PowerPC or Intel i686 / x86_64, 10.4+)\n  - Windows (i686 / x86_64)\n  - Atari TOS (68030+ CPU, TT, Falcon and accelerated ST/STE supported)\n  - OS/2\n  - Haiku\n\n\nRequirements\n------------\nOpenDUNE doesn't require any library to run on Windows. For Mac OS X we make\n so-called static-compiled binaries, which means all libraries it depends on\n (mostly LibSDL) are already included in the binary, and no action is\n required on your part\nFor Linux/FreeBSD, you need to install LibSDL yourself. It is available in every\n package manager, and the chances are high it is already installed on your\n system.\nIn order to use sounds and music on Linux, you need a working ALSA driver.\nOpenDUNE also supports OSS and PulseAudio for digitized sound output.\nMusic is sent to MIDI Out port of Atari machines.\nIt is also possible to build with Munt MT32 emulator http://munt.sourceforge.net/\nto have MT32 music : Windows users should just install the mt32emu_win32drv and\nthe right MIDI device will be selected when mt32midi option in opendune.ini\nis on. Linux/FreeBSD users should install munt on their system and rebuild.\nFluidSynth is also supported.\n\n\nInstallation & Running\n----------------------\nExtract OpenDUNE.\nCopy the original Dune2 1.07 data files (including dune2.exe) to data/.\n All three existing versions of the Dune 1.07 data files (eu, hs and us) will\n  work, but only with the eu/hs data files the French language will work, and\n  only with the eu data files the German language will work.\nStart 'opendune'.\n\nOS X/macOS : data files are searched additionaly in the Contents/Resources/data\nsubdirectory of the application bundle, and in\n~/Library/Application Support/OpenDUNE/data\n\nAdditional options may be specified using an opendune.ini file located\nin the data/ directory, in the current directory or in %APPDATA%\\OpenDUNE\n(on Windows) or ~/Library/Application Support/OpenDUNE (on Mac OS X) or\n~/.config/opendune (on Linux/FreeBSD) or B_USER_SETTINGS_DIRECTORY/opendune\n(on Haiku). All options must be in an [opendune] section.\n\nAvailable options are :\n- language : english / french / german\n- datadir : directory where Dune data files are\n- savedir : directory for Dune personal data files (savegames)\n- scalefactor : 1 (no upscaling), 2 (default), 3, 4\n- scalefilter : nearest (default), scale2x, hqx\n- framerate : maximum frame rate (60 FPS default)\n- fullscreen : 0(default)/1 starts the game in full screen mode if possible\n- mt32midi : 0(default)/1 send MT32 init, use .XMI files\n- mt32rompath : directory containing CM32L_CONTROL.ROM/CM32L_PCM.ROM files\n                for Munt MT32 emulator.\n- fs_soundfont : SoundFont2 file for FluidSynth\n- fs_audiodriver : FluidSynth audio driver name (alsa, jack, oss, etc.)\n- midideviceid : Windows MIDI Device ID to use (default is 0)\n\ndebug options (for developpers) :\n- dune2_enhanced : 0 = game acts like the original Dune II, including bugs\n                   1(default) = enable OpenDUNE enhancements\n- debug_game : 0(default) = normal game behavior\n               1 = The player can control the AI\n- debug_scenario : 0(defaut) = normal game behavior\n                   1 = The player can review the scenario. There is no fog.\n                       The game is not running. The player can click on tiles.\n- debug_skip_dialogs : 0(default) = normal game behavior\n                       1 = skip all intros and go immediately to house select.\n- debug_log_game : game record / replay\n                   0(default) = off\n                   1 = record game to 'dune.log'\n                   2 = playback game stored in 'dune.log'\n- starport_unit_cap : 0 = Allows to overflow unit limit using starport (default)\n                       1 = unit limit is enforced in starport\n\n\nIngame\n------\nThe Game controls are the same as DUNE II. Usually, the first letter is a\nkeybard shortcut, for example B for build, Q for quit, etc.\nF1 - open Mentat Screen\nF2 - open the option menu\nF3 - open the menu of the selected structure (construction yard/factory/etc.)\n\nA few key controls are added in OpenDUNE, available depending on the\nplatform :\nF8 - Toggle FPS display\nCTRL-ENTER or F11 - Toggle full screen\n\n\nEnhancement over Dune2\n-----------------------\nSee enhancement.txt.\n\n\nKnown Bugs\n----------\nIf the digitized sound output does not work for some reason, you will very likely\nbe stuck in the house selection screen. Because when you click on the house button,\na voice is played, and the game waits for the voice to finish.\nPlease check your sound output options.\n\n\nChangelog\n---------\nSee changelog.txt.\n\n\nCredits\n-------\nThe OpenDUNE team (in alphabetical order):\n  Albert Hofkamp (Alberth)             - Refactoring Dude\n  Loic Guilloux (glx)                  - Windows Guru\n  Patric Stout (TrueBrain)             - Lead Developer\n  Steven Noorbergen (Xaroth)           - Lead Manager\n  Thomas Bernard                       - Developer\n\nThanks To (in alphabetical order):\n  Szabolcs Nagy (nsz)                  - ANSI C Guru\n  Ingo von Borstel (planetmaker)       - For his many bug-reports\n  tneo                                 - For his many bug-reports\n  David Wang (wangds)                  - For his many patches and bug-reports\n\n  Bug Reporters                        - Thank you all for all bug reports\n  Westwood                             - For an amazing game\n"
        },
        {
          "name": "SDL_Win32.txt",
          "type": "blob",
          "size": 1.765625,
          "content": "Using SDL on Windows Systems\n============================\nBy default OpenDUNE on Windows uses WinAPI, so it doesn't require any\n other library to run on Windows.\nHowever, it is possible using SDL libraries to improve the experience\n of gameplaying, being able to toggle fullscreen or zooming in/out the\n window size.\n\n\nSettings for Compiling\n----------------------\nYou can edit generate.vbs script to preconfigure Visual Studio\n project files (re)creation. Set at line 33:\ngraph_config = \"SDL\"\n or\ngraph_config = \"SDL2\"\nSaving and launching vbscript you will obtain new VS project files\n with correct included to solution files list.\nThen follow the steps below.\n\n\nCompiling SDL 1.2\n-----------------\nAfter setting up SDL 1.2 libraries, to successfully compile on MSVC,\n going to Project Properties (All Configurations):\n- on C/C++=>Preprocessor, set WITH_SDL into Preprocessor Definitions\n- if you did not put \"#undef main\" directive on opendune.c source, go\n   on Linker=>System and set /SUBSYSTEM:WINDOWS or /SUBSYSTEM:CONSOLE\n   (to define entry point on main for SDL)\n- on Linker=>Command Line, set /FORCE:MULTIPLE on Additional Options\n   (to avoid 'multiple definitions' problems)\n\n\nCompiling SDL 2.0\n-----------------\nAfter setting up SDL 2.0 libraries, to successfully compile on MSVC,\n going to Project Properties (All Configurations):\n- on C/C++=>Preprocessor, set WITH_SDL2 into Preprocessor Definitions\n- if you did not put \"#undef main\" directive on opendune.c source, go\n   on Linker=>System and set /SUBSYSTEM:WINDOWS or /SUBSYSTEM:CONSOLE\n   (to define entry point on main for SDL)\n\n\nAdditional Features\n-------------------\nWhile playing OpenDUNE, you can press F11 (or Alt+Enter) to toggle\n fullscreen, or press +/- keys to zoom in/out window size, maintaining\n original ratio resolution.\n\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.lib",
          "type": "blob",
          "size": 64.1015625,
          "content": "log() {\n\tif [ $1 = \"1\" ]; then\n\t\tshift\n\t\techo \"$@\"\n\telse\n\t\tshift\n\tfi\n\techo \"$@\" >> $config_log\n}\n\nset_default() {\n\tignore_extra_parameters=\"0\"\n\t# We set all kinds of defaults for params. Later on the user can override\n\t# most of them; but if they don't, this default is used.\n\tbuild=\"\"\n\thost=\"\"\n\tcc_build=\"\"\n\tcc_host=\"\"\n\tas_host=\"\"\n\tstrip=\"\"\n\tlipo=\"\"\n\tawk=\"awk\"\n\tos=\"DETECT\"\n\tcpu_type=\"DETECT\"\n\tconfig_log=\"config.log\"\n\tprefix_dir=\"/usr/local\"\n\tbinary_dir=\"games\"\n\tdoc_dir=\"share/doc/opendune\"\n\tdata_dir=\"share/games/opendune\"\n\ticon_dir=\"share/icons/hicolor/32x32/apps\"\n\tinstall_dir=\"/\"\n\tbinary_name=\"opendune\"\n\tenable_debug=\"0\"\n\tenable_profiling=\"0\"\n\tenable_lto=\"0\"\n\tenable_static=\"1\"\n\tenable_assert=\"1\"\n\tenable_strip=\"0\"\n\tenable_universal=\"0\"\n\twith_osx_sysroot=\"1\"\n\twith_sdl=\"1\"\n\twith_sdlimage=\"1\"\n\twith_sdl2=\"1\"\n\twith_sdl2image=\"1\"\n\twith_asound=\"1\"\n\twith_oss=\"1\"\n\twith_pulse=\"1\"\n\twith_kai=\"1\"\n\twith_munt=\"1\"\n\twith_fluid=\"0\"\n\tenable_builtin_depend=\"1\"\n\twith_makedepend=\"0\"\n\twith_sort=\"1\"\n\twith_distcc=\"1\"\n\twith_ccache=\"1\"\n\n\tsave_params_array=\"\n\t\tbuild\n\t\thost\n\t\tcc_build\n\t\tcc_host\n\t\tstrip\n\t\tlipo\n\t\tawk\n\t\tos\n\t\tcpu_type\n\t\tconfig_log\n\t\tprefix_dir\n\t\tbinary_dir\n\t\tdata_dir\n\t\ticon_dir\n\t\tinstall_dir\n\t\tbinary_name\n\t\tenable_debug\n\t\tenable_profiling\n\t\tenable_lto\n\t\tenable_static\n\t\tenable_assert\n\t\tenable_strip\n\t\tenable_universal\n\t\twith_osx_sysroot\n\t\twith_sdl\n\t\twith_sdlimage\n\t\twith_sdl2\n\t\twith_sdl2image\n\t\twith_asound\n\t\twith_oss\n\t\twith_pulse\n\t\twith_munt\n\t\tenable_builtin_depend\n\t\twith_makedepend\n\t\twith_sort\n\t\twith_distcc\n\t\twith_ccache\n\tCC CFLAGS LDFLAGS CFLAGS_BUILD LDFLAGS_BUILD\"\n}\n\ndetect_params() {\n\t# Walk over all params from the user and override any default settings if\n\t#  needed. This also handles any invalid option.\n\tfor p in \"$@\"; do\n\t\tif [ -n \"$prev_p\" ]; then\n\t\t\teval \"$prev_p=\\$p\"\n\t\t\tprev_p=\n\t\t\tcontinue\n\t\tfi\n\n\t\toptarg=`expr \"x$p\" : 'x[^=]*=\\(.*\\)'`\n\n\t\tcase \"$p\" in\n\t\t\t--help | -h | -\\?)            showhelp; exit 0;;\n\n\t\t\t--config-log)                 prev_p=\"config_log\";;\n\t\t\t--config-log=*)               config_log=\"$optarg\";;\n\n\t\t\t--build)                      prev_p=\"build\";;\n\t\t\t--build=*)                    build=\"$optarg\";;\n\n\t\t\t--host)                       prev_p=\"host\";;\n\t\t\t--host=*)                     host=\"$optarg\";;\n\n\t\t\t--os)                         prev_p=\"os\";;\n\t\t\t--os=*)                       os=\"$optarg\";;\n\n\t\t\t--cpu-type)                   prev_p=\"cpu_type\";;\n\t\t\t--cpu-type=*)                 cpu_type=\"$optarg\";;\n\n\t\t\t--cc-build)                   prev_p=\"cc_build\";;\n\t\t\t--cc-build=*)                 cc_build=\"$optarg\";;\n\t\t\t--cc-host)                    prev_p=\"cc_host\";;\n\t\t\t--cc-host=*)                  cc_host=\"$optarg\";;\n\t\t\t--awk)                        prev_p=\"awk\";;\n\t\t\t--awk=*)                      awk=\"$optarg\";;\n\t\t\t--strip)                      prev_p=\"strip\";;\n\t\t\t--strip=*)                    strip=\"$optarg\";;\n\t\t\t--lipo)                       prev_p=\"lipo\";;\n\t\t\t--lipo=*)                     lipo=\"$optarg\";;\n\n\n\t\t\t# Alias --prefix with --prefix-dir, for compatibility with GNU autotools\n\t\t\t--prefix-dir | --prefix)      prev_p=\"prefix_dir\";;\n\t\t\t--prefix-dir=* | --prefix=*)  prefix_dir=\"$optarg\";;\n\n\t\t\t--binary-dir)                 prev_p=\"binary_dir\";;\n\t\t\t--binary-dir=*)               binary_dir=\"$optarg\";;\n\n\t\t\t--data-dir)                   prev_p=\"data_dir\";;\n\t\t\t--data-dir=*)                 data_dir=\"$optarg\";;\n\n\t\t\t--icon-dir)                   prev_p=\"icon_dir\";;\n\t\t\t--icon-dir=*)                 icon_dir=\"$optarg\";;\n\n\t\t\t--binary-name)                prev_p=\"binary_name\";;\n\t\t\t--binary-name=*)              binary_name=\"$optarg\";;\n\n\t\t\t--install-dir)                prev_p=\"install_dir\";;\n\t\t\t--install-dir=*)              install_dir=\"$optarg\";;\n\n\n\n\t\t\t--enable-debug)               enable_debug=\"1\";;\n\t\t\t--enable-debug=*)             enable_debug=\"$optarg\";;\n\t\t\t--enable-profiling)           enable_profiling=\"1\";;\n\t\t\t--enable-profiling=*)         enable_profiling=\"$optarg\";;\n\t\t\t--enable-lto)                 enable_lto=\"1\";;\n\t\t\t--enable-lto=*)               enable_lto=\"$optarg\";;\n\t\t\t--enable-ipo)                 enable_lto=\"1\";;\n\t\t\t--enable-ipo=*)               enable_lto=\"$optarg\";;\n\t\t\t--disable-static)             enable_static=\"0\";;\n\t\t\t--enable-static)              enable_static=\"2\";;\n\t\t\t--enable-static=*)            enable_static=\"$optarg\";;\n\t\t\t--disable-assert)             enable_assert=\"0\";;\n\t\t\t--enable-assert)              enable_assert=\"2\";;\n\t\t\t--enable-assert=*)            enable_assert=\"$optarg\";;\n\t\t\t--disable-strip)              enable_strip=\"0\";;\n\t\t\t--enable-strip)               enable_strip=\"2\";;\n\t\t\t--enable-strip=*)             enable_strip=\"$optarg\";;\n\t\t\t--disable-universal)          enable_universal=\"0\";;\n\t\t\t--enable-universal)           enable_universal=\"i386 ppc x86_64\";;\n\t\t\t--enable-universal=*)         enable_universal=\"$optarg\";;\n\n\t\t\t--with-sdl)                   with_sdl=\"2\";;\n\t\t\t--without-sdl)                with_sdl=\"0\";;\n\t\t\t--with-sdl=*)                 with_sdl=\"$optarg\";;\n\n\t\t\t--with-sdl2)                  with_sdl2=\"2\";;\n\t\t\t--without-sdl2)               with_sdl2=\"0\";;\n\t\t\t--with-sdl2=*)                with_sdl2=\"$optarg\";;\n\n\t\t\t--with-asound)                with_asound=\"2\";;\n\t\t\t--without-asound)             with_asound=\"0\";;\n\t\t\t--with-asound=*)              with_asound=\"$optarg\";;\n\t\t\t--with-alsa)                  with_asound=\"2\";;\n\t\t\t--without-alsa)               with_asound=\"0\";;\n\t\t\t--with-alsa=*)                with_asound=\"$optarg\";;\n\n\t\t\t--with-oss)                   with_oss=\"2\";;\n\t\t\t--without-oss)                with_oss=\"0\";;\n\n\t\t\t--with-pulse)                 with_pulse=\"2\";;\n\t\t\t--without-pulse)              with_pulse=\"0\";;\n\t\t\t--with-pulse=*)               with_pulse=\"$optarg\";;\n\n\t\t\t--with-kai)                   with_kai=\"2\";;\n\t\t\t--without-kai)                with_kai=\"0\";;\n\t\t\t--with-kai=*)                 with_kai=\"$optarg\";;\n\n\t\t\t--with-munt)                  with_munt=\"2\";;\n\t\t\t--without-munt)               with_munt=\"0\";;\n\t\t\t--with-munt=*)                with_munt=\"$optarg\";;\n\n\t\t\t--with-fluid)                 with_fluid=\"2\";;\n\t\t\t--without-fluid)              with_fluid=\"0\";;\n\t\t\t--with-fluid=*)               with_fluid=\"$optarg\";;\n\n\t\t\t--disable-builtin-depend)     enable_builtin_depend=\"0\";;\n\t\t\t--enable-builtin-depend)      enable_builtin_depend=\"2\";;\n\t\t\t--enable-builtin-depend=*)    enable_builtin_depend=\"$optarg\";;\n\n\t\t\t--with-makedepend)            with_makedepend=\"2\";;\n\t\t\t--without-makedepend)         with_makedepend=\"0\";;\n\t\t\t--with-makedepend=*)          with_makedepend=\"$optarg\";;\n\n\t\t\t--with-sort)                  with_sort=\"2\";;\n\t\t\t--without-sort)               with_sort=\"0\";;\n\t\t\t--with-sort=*)                with_sort=\"$optarg\";;\n\n\t\t\t--without-distcc)             with_distcc=\"0\";;\n\t\t\t--with-distcc)                with_distcc=\"2\";;\n\t\t\t--with-distcc=*)              with_distcc=\"$optarg\";;\n\n\t\t\t--without-ccache)             with_ccache=\"0\";;\n\t\t\t--with-ccache)                with_ccache=\"2\";;\n\t\t\t--with-ccache=*)              with_ccache=\"$optarg\";;\n\n\t\t\t--without-osx-sysroot)        with_osx_sysroot=\"0\";;\n\t\t\t--with-osx-sysroot)           with_osx_sysroot=\"2\";;\n\t\t\t--with-osx-sysroot=*)         with_osx_sysroot=\"$optarg\";;\n\n\t\t\tCC=* | --CC=*)                CC=\"$optarg\";;\n\t\t\tCFLAGS=* | --CFLAGS=*)        CFLAGS=\"$optarg\";;\n\t\t\tLDFLAGS=* | --LDFLAGS=*)      LDFLAGS=\"$optarg\";;\n\t\t\tCFLAGS_BUILD=* | --CFLAGS_BUILD=* | --CFLAGS-BUILD=*)     CFLAGS_BUILD=\"$optarg\";;\n\t\t\tLDFLAGS_BUILD=* | --LDFLAGS_BUILD=* | --LDFLAGS-BUILD=*)   LDFLAGS_BUILD=\"$optarg\";;\n\n\t\t\t--ignore-extra-parameters)    ignore_extra_parameters=\"1\";;\n\n\t\t\t--* | -*)\n\t\t\t\tif [ \"$ignore_extra_parameters\" = \"0\" ]; then\n\t\t\t\t\tlog 1 \"Unknown option $p\"\n\t\t\t\t\texit 1\n\t\t\t\telse\n\t\t\t\t\tlog 1 \"Unknown option $p ignored\"\n\t\t\t\tfi\n\t\t\t\t;;\n\t\tesac\n\tdone\n\n\tif [ -n \"$prev_p\" ]; then\n\t\tlog 1 \"configure: error: missing argument to --$prev_p\"\n\t\texit 1\n\tfi\n\n\t# Clean the logfile\n\techo \"\" > $config_log\n\tlog 2 \"Invocation: $0 $*\"\n}\n\nsave_params() {\n\t# Here we save all params, so we can later on do an exact redo of this\n\t#  configuration, without having the user to re-input stuff\n\n\techo \"Running configure with following options:\" >> $config_log\n\techo \"\" >> $config_log\n\n\tconfigure=\"$CONFIGURE_EXECUTABLE --ignore-extra-parameters\"\n\tfor p in $save_params_array; do\n\t\teval \"v=\\\"\\$$p\\\"\"\n\t\tp=`echo \"$p\" | sed 's@_@-@g;s@\\n@@g;s@ @\\\\ @g'`\n\t\t# Only save those params that aren't empty\n\t\tconfigure=\"$configure --$p=\\\"$v\\\"\"\n\tdone\n\n\techo \"$configure\" >> $config_log\n\techo \"$configure\" > config.cache\n\techo \"\" >> $config_log\n}\n\ncheck_params() {\n\t# Some params want to be in full uppercase, else they might not work as\n\t# expected.. fix that here\n\n\tos=`echo $os | tr '[a-z]' '[A-Z]'`\n\tcpu_type=`echo $cpu_type | tr '[a-z]' '[A-Z]'`\n\n\t# Check if all params have valid values\n\n\t# OS only allows DETECT, UNIX, OSX, FREEBSD, OPENBSD, MORPHOS, BEOS, HAIKU, SUNOS, CYGWIN, MINGW, OS2, DOS, and WINCE, TOS\n\tif [ -z \"`echo $os | egrep '^(DETECT|UNIX|OSX|FREEBSD|OPENBSD|NETBSD|HPUX|MORPHOS|BEOS|HAIKU|SUNOS|CYGWIN|MINGW|OS2|DOS|WINCE|TOS)$'`\" ]; then\n\t\tlog 1 \"configure: error: invalid option --os=$os\"\n\t\tlog 1 \" Available options are: --os=[DETECT|UNIX|OSX|FREEBSD|OPENBSD|NETBSD|HPUX|MORPHOS|BEOS|HAIKU|SUNOS|CYGWIN|MINGW|OS2|DOS|WINCE|TOS]\"\n\t\texit 1\n\tfi\n\t# cpu_type can be either 32 or 64\n\tif [ -z \"`echo $cpu_type | egrep '^(32|64|DETECT)$'`\" ]; then\n\t\tlog 1 \"configure: error: invalid option --cpu-type=$cpu_type\"\n\t\tlog 1 \" Available options are: --cpu-type[=DETECT|32|64]\"\n\t\texit 1\n\tfi\n\t# enable_debug should be between 0 and 4\n\tif [ -z \"`echo $enable_debug | egrep '^[0123]$'`\" ]; then\n\t\tlog 1 \"configure: error: invalid option --enable-debug=$enable_debug\"\n\t\tlog 1 \" Available options are: --enable-debug[=0123]\"\n\t\texit 1\n\tfi\n\n\tdetect_awk\n\n\tdetect_os\n\n\tcheck_build\n\tcheck_host\n\n\t# Check for universal builds; they only make sense for OSX, so fail if enabled for another OS\n\tif [ \"$enable_universal\" = \"0\" ]; then\n\t\tlog 1 \"checking universal build... no\"\n\telse\n\t\tif [ \"$os\" != \"OSX\" ]; then\n\t\t\tlog 1 \"configure: error: --enable-universal only works on OSX\"\n\t\t\texit 1\n\t\tfi\n\t\tlog 1 \"checking universal build... yes, for: $enable_universal\"\n\tfi\n\n\t# Already detected by check_build\n\tlog 1 \"checking build cc... $cc_build\"\n\tlog 1 \"checking host cc... $cc_host\"\n\n\tif [ \"$enable_strip\" != \"0\" ]; then\n\t\tcheck_strip\n\telse\n\t\tlog 1 \"checking strip... disabled\"\n\tfi\n\tcheck_lipo\n\n\tif [ \"$enable_builtin_depend\" != \"0\" ]; then\n\t\tlog 1 \"checking builtin depend... yes\"\n\t\tmakedepend=\"\\$(SRC_OBJS_DIR)/\\$(DEPEND)\"\n\telse\n\t\tlog 1 \"checking builtin depend... no\"\n\tfi\n\n\tcheck_makedepend\n\tdetect_cputype\n\n\tif [ \"$enable_static\" = \"1\" ]; then\n\t\tif [ \"$os\" = \"MINGW\" ] || [ \"$os\" = \"CYGWIN\" ] || [ \"$os\" = \"MORPHOS\" ] || [ \"$os\" = \"DOS\" ]; then\n\t\t\tenable_static=\"2\"\n\t\telse\n\t\t\tenable_static=\"0\"\n\t\tfi\n\tfi\n\n\tif [ \"$enable_static\" != \"0\" ]; then\n\t\tlog 1 \"checking static... yes\"\n\n\t\tif [ \"$os\" != \"MINGW\" ] && [ \"$os\" != \"CYGWIN\" ] && [ \"$os\" != \"OSX\" ] && [ \"$os\" != \"MORPHOS\" ] && [ \"$os\" != \"DOS\" ]; then\n\t\t\tlog 1 \"WARNING: static is only known to work on Windows, DOS, MacOSX and MorphOS\"\n\t\t\tlog 1 \"WARNING: use static at your own risk on this platform\"\n\n\t\t\tsleep 5\n\t\tfi\n\telse\n\t\tlog 1 \"checking static... no\"\n\tfi\n\n\t# Show what we configured\n\tif [ \"$enable_debug\" = \"0\" ]; then\n\t\tlog 1 \"using debug level... no\"\n\t\tif [ $enable_assert -eq 1 ]; then\n\t\t\tenable_assert=0\n\t\t\tlog 1 \"disabling asserts\"\n\t\tfi\n\telif [ \"$enable_profiling\" != \"0\" ]; then\n\t\tlog 1 \"using debug level... profiling (debug level $enable_debug)\"\n\telse\n\t\tlog 1 \"using debug level... level $enable_debug\"\n\tfi\n\n\tif [ \"$enable_lto\" != \"0\" ]; then\n\t\t# GCC 4.5 outputs '%{flto}', GCC 4.6 outputs '%{flto*}'\n\t\thas_lto=`($cc_build -dumpspecs 2>&1 | grep '\\%{flto') || ($cc_build -help ipo 2>&1 | grep '\\-ipo')`\n\t\tif [ -n \"$has_lto\" ]; then\n\t\t\tlog 1 \"using link time optimization... yes\"\n\t\telse\n\t\t\tenable_lto=\"0\"\n\t\t\tlog 1 \"using link time optimization... no\"\n\t\t\tlog 1 \"WARNING: you selected link time optimization but it is not found.\"\n\t\tfi\n\telse\n\t\tlog 1 \"using link time optimization... no\"\n\tfi\n\n\n\tif [ \"$os\" != \"OSX\" ] && [ \"$with_osx_sysroot\" != \"0\" ]; then\n\t\tif [ \"$with_osx_sysroot\" = \"1\" ]; then\n\t\t\twith_osx_sysroot=\"0\"\n\n\t\t\tlog 1 \"checking OSX sysroot... not OSX, skipping\"\n\t\telse\n\t\t\tlog 1 \"configure: error: --with-osx-sysroot only works if OSX is the target\"\n\t\t\texit 1\n\t\tfi\n\tfi\n\n\tif [ \"$with_osx_sysroot\" != \"0\" ]; then\n\t\tif [ \"$enable_universal\" = \"0\" ] && [ \"$with_osx_sysroot\" != \"1\" ] && [ \"$with_osx_sysroot\" != \"2\" ]; then\n\t\t\t# Sysroot manually specified? Check for usability\n\t\t\tlog 1 \"checking OSX sysroot... $with_osx_sysroot\"\n\t\t\tif ! check_osx_sdk \"$with_osx_sysroot\"; then\n\t\t\t\tlog 1 \"Passed sysroot not found/not functional\"\n\t\t\t\texit 1\n\t\t\tfi\n\t\telse\n\t\t\t# If autodetect and no universal, use system default\n\t\t\tif [ \"$with_osx_sysroot\" = \"1\" ] && [ \"$enable_universal\" = \"0\" ]; then\n\t\t\t\tlog 1 \"checking OSX sysroot... no (use system default)\"\n\t\t\telse\n\t\t\t\tlog 1 \"checking OSX sysroot... automatically\"\n\t\t\t\tdetect_osx_sdk\n\t\t\tfi\n\t\tfi\n\n\t\tif [ -n \"$osx_sdk_path\" ]; then\n\t\t\tif [ \"$enable_universal\" != \"0\" ]; then\n\t\t\t\tif [ -z \"$osx_sdk_104_path\" ]; then\n\t\t\t\t\tlog 1 \"WARNING: Could not find a usable 10.4u SDK, the resulting\"\n\t\t\t\t\tlog 1 \"WARNING: binary will only run on OSX 10.5 or later\"\n\t\t\t\t\tosx_sdk_104_path=\"$osx_sdk_path\"\n\t\t\t\tfi\n\t\t\t\tOSX_SYSROOT=\"-isysroot $osx_sdk_104_path\"\n\t\t\t\tOSX_LD_SYSROOT=\"-Wl,-syslibroot,$osx_sdk_104_path\"\n\t\t\telse\n\t\t\t\tOSX_SYSROOT=\"-isysroot $osx_sdk_path\"\n\t\t\t\tOSX_LD_SYSROOT=\"-Wl,-syslibroot,$osx_sdk_path\"\n\t\t\tfi\n\t\tfi\n\telse\n\t\tif [ \"$os\" = \"OSX\" ]; then\n\t\t\tlog 1 \"checking OSX sysroot... no (use system default)\"\n\t\tfi\n\tfi\n\n\tif [ \"$os\" = \"TOS\" ]; then\n\t\twith_sdl2=\"0\"\n\t\twith_sdl=\"0\"\n\t\twith_asound=\"0\"\n\t\twith_oss=\"0\"\n\t\twith_pulse=\"0\"\n\t\twith_munt=\"0\"\n\t\twith_fluid=\"0\"\n\tfi\n\tif [ \"$os\" = \"FREEBSD\" ] && [ \"$with_oss\" != \"0\" ] && [ \"$with_asound\" = \"1\" ] ; then\n\t\t# prefers OSS to ALSA under FreeBSD\n\t\twith_asound=\"0\"\n\tfi\n\tdetect_sdl2\n\tdetect_sdl\n\tdetect_asound\n\tdetect_oss\n\tdetect_pulseaudio\n\tdetect_kai\n\tdetect_munt\n\n\tif [ \"$os\" = \"MINGW\" ] || [ \"$os\" = \"CYGWIN\" ] || [ \"$os\" = \"WINCE\" ]; then\n\t\tlog 1 \"checking GDI video driver... found\"\n\telse\n\t\tlog 1 \"checking GDI video driver... not Windows, skipping\"\n\tfi\n\n\tif [ \"$enable_assert\" != \"0\" ]; then\n\t\tlog 1 \"checking assert... enabled\"\n\telse\n\t\tlog 1 \"checking assert... disabled\"\n\tfi\n\n\tdetect_sort\n\n\tif [ \"$enable_debug\" = \"0\" ] && [ \"$enable_profiling\" = \"0\" ] && [ \"$enable_strip\" != \"0\" ]; then\n\t\tif [ \"$os\" = \"MORPHOS\" ]; then\n\t\t\tstrip_arg=\"--strip-all --strip-unneeded --remove-section .comment\"\n\t\telif [ \"$os\" = \"OSX\" ]; then\n\t\t\tstrip_arg=\"\"\n\t\telif [ \"$os\" = \"OS2\" ]; then\n\t\t\tstrip_arg=\"\"\n\t\t\t# OS2 uses strip via gcc, because it needs to be feed to emxbind\n\t\t\tLDFLAGS=\"$LDFLAGS -s\"\n\t\telif [ \"$os\" = \"SUNOS\" ]; then\n\t\t\t# The GNU strip does know -s, the non-GNU doesn't\n\t\t\t#  So try to detect it (in a bit of an ugly way)\n\t\t\tstrip_arg=\"`$strip -s strip.test 2>/dev/null && echo \\\"-s\\\"`\"\n\t\telse\n\t\t\tstrip_arg=\"-s\"\n\t\tfi\n\n\t\tlog 1 \"checking stripping... $strip $strip_arg\"\n\telse\n\t\tstrip=\"\"\n\t\tlog 1 \"checking stripping... skipped\"\n\tfi\n\n\tif [ \"$with_distcc\" = \"0\" ]; then\n\t\tlog 1 \"checking distcc... no\"\n\telif [ \"$with_distcc\" = \"1\" ]; then\n\t\twith_distcc=\"0\"\n\n\t\tlog 1 \"checking distcc... no (only used when forced)\"\n\telif [ \"$with_distcc\" = \"2\" ]; then\n\t\tdistcc=\"distcc\"\n\telse\n\t\tdistcc=\"$with_distcc\"\n\tfi\n\tif [ \"$with_distcc\" != \"0\" ]; then\n\t\tres=\"`$distcc --version 2>/dev/null | head -n 1 | cut -b 1-6`\"\n\t\tif [ \"$res\" != \"distcc\" ]; then\n\t\t\tdistcc=\"\"\n\t\t\tlog 1 \"checking distcc... no\"\n\t\t\tif [ \"$with_distcc\" = \"2\" ]; then\n\t\t\t\tlog 1 \"configure: error: no distcc detected, but was forced to be used\"\n\t\t\t\texit 1\n\t\t\tfi\n\t\t\tif [ \"$with_distcc\" != \"1\" ]; then\n\t\t\t\tlog 1 \"configure: error: '$with_distcc' doesn't seem a distcc to me\"\n\t\t\t\texit 1\n\t\t\tfi\n\t\tfi\n\n\t\tlog 1 \"checking distcc... $distcc\"\n\tfi\n\n\tif [ \"$with_ccache\" = \"0\" ]; then\n\t\tlog 1 \"checking ccache... no\"\n\telif [ \"$with_ccache\" = \"1\" ]; then\n\t\twith_ccache=\"0\"\n\n\t\tlog 1 \"checking ccache... no (only used when forced)\"\n\telif [ \"$with_ccache\" = \"2\" ]; then\n\t\tccache=\"ccache\"\n\telse\n\t\tccache=\"$with_ccache\"\n\tfi\n\tif [ \"$with_ccache\" != \"0\" ]; then\n\t\tres=\"`$ccache --version 2>/dev/null | head -n 1 | cut -b 1-6`\"\n\t\tif [ \"$res\" != \"ccache\" ]; then\n\t\t\tccache=\"\"\n\t\t\tlog 1 \"checking ccache... no\"\n\t\t\tif [ \"$with_ccache\" = \"2\" ]; then\n\t\t\t\tlog 1 \"configure: error: no ccache detected, but was forced to be used\"\n\t\t\t\texit 1\n\t\t\tfi\n\t\t\tif [ \"$with_ccache\" != \"1\" ]; then\n\t\t\t\tlog 1 \"configure: error: '$with_ccache' doesn't seem a ccache to me\"\n\t\t\t\texit 1\n\t\t\tfi\n\t\tfi\n\n\t\tlog 1 \"checking ccache... $ccache\"\n\tfi\n\n\tif [ \"$os\" = \"OSX\" ] ; then\n\t\tOSXAPP=\"OpenDUNE.app\"\n\telse\n\t\tOSXAPP=\"\"\n\tfi\n\n\tif [ -d \"$ROOT_DIR/.svn\" ] && [ -n \"`svn help 2>/dev/null`\" ]; then\n\t\tlog 1 \"checking revision... svn detection\"\n\telif [ -d \"$ROOT_DIR/.git\" ] && [ -n \"`git help 2>/dev/null`\" ]; then\n\t\tlog 1 \"checking revision... git detection\"\n\telif [ -d \"$ROOT_DIR/.hg\" ] && [ -n \"`hg help 2>/dev/null`\" ]; then\n\t\tlog 1 \"checking revision... hg detection\"\n\telif [ -f \"$ROOT_DIR/.ottdrev\" ]; then\n\t\tlog 1 \"checking revision... source tarball\"\n\telse\n\t\tlog 1 \"checking revision... no detection\"\n\t\tlog 1 \"WARNING: there is no means to determine the version.\"\n\t\tlog 1 \"WARNING: please use a subversion, mercurial, or git checkout of OpenDUNE.\"\n\t\tlog 1 \"WARNING: USE WITH CAUTION!\"\n\n\t\tsleep 5\n\tfi\n\n\tif [ -n \"$install_dir\" ]\n\tthen\n\t\tlog 1 \"installation directory... $install_dir\"\n\telse\n\t\tlog 1 \"installation directory... none\"\n\tfi\n}\n\nmake_compiler_cflags() {\n\t# Params:\n\t# $1 - compiler\n\t# $2 - name of the cflags variable\n\t# $4 - name of the ldflags variable\n\t# $5 - name of the features variable\n\n\teval eval \"flags=\\\\\\$$2\"\n\teval eval \"ldflags=\\\\\\$$3\"\n\teval eval \"features=\\\\\\$$4\"\n\n\tif [ `basename $1 | cut -c 1-3` = \"icc\" ]; then\n\t\t# Enable some things only for certain ICC versions\n\t\tcc_version=`$1 -dumpversion | cut -d. -f 1-2 | sed s@\\\\\\.@@g`\n\n\t\tflags=\"$flags -rdynamic\"\n\t\tldflags=\"$ldflags -rdynamic\"\n\n\t\tif [ -z \"$first_time_icc_check\" ]; then\n\t\t\tfirst_time_icc_check=no\n\t\t\tif [ $cc_version -lt 90 ]; then\n\t\t\t\tlog 1 \"WARNING: you seem to be using a very old version of ICC\"\n\t\t\t\tlog 1 \"WARNING: OpenDUNE hasn't been tested with this version\"\n\t\t\t\tsleep 5\n\t\t\telif [ $cc_version -lt 120 ]; then\n\t\t\t\tlog 1 \"WARNING: you seem to be using an unsupported ICC version\"\n\t\t\t\tlog 1 \"WARNING: ICC older than 12.0 is known to fail to compile OpenDUNE\"\n\t\t\t\tsleep 5\n\t\t\tfi\n\t\tfi\n\n\t\tflags=\"$flags -Wall\"\n\t\t# remark #111: statement is unreachable\n\t\tflags=\"$flags -wd111\"\n\t\t# remark #181: argument is incompatible with corresponding format string conversion\n\t\t# ICC is very picky about signedness of operands, warnings provided by GCC are enough\n\t\tflags=\"$flags -wd181\"\n\t\t# remark #271: trailing comma is nonstandard\n\t\tflags=\"$flags -wd271\"\n\t\t# remark #280: selector expression is constant\n\t\tflags=\"$flags -wd280\"\n\t\t# remark #304: access control not specified (\"public\" by default)\n\t\tflags=\"$flags -wd304\"\n\t\t# remark #383: value copied to temporary, reference to temporary used\n\t\tflags=\"$flags -wd383\"\n\t\t# remark #444: destructor for base class ... is not virtual\n\t\tflags=\"$flags -wd444\"\n\t\t# remark #593: variable ... was set but never used\n\t\tflags=\"$flags -wd593\"\n\t\t# warning #654: overloaded virtual function ... is only partially overridden in class ...\n\t\tflags=\"$flags -wd654\"\n\t\t# remark #810: conversion from ... to ... may lose significant bits\n\t\tflags=\"$flags -wd810\"\n\t\t# remark #869: parameter ... was never referenced\n\t\tflags=\"$flags -wd869\"\n\t\t# warning #873: function ... ::operator new ... has no corresponding operator delete ...\n\t\tflags=\"$flags -wd873\"\n\t\t# remark #981: operands are evaluated in unspecified order\n\t\tflags=\"$flags -wd981\"\n\t\t# remark #1418: external function definition with no prior declaration\n\t\tflags=\"$flags -wd1418\"\n\t\t# remark #1419: external declaration in primary source file\n\t\tflags=\"$flags -wd1419\"\n\t\t# remark #1572: floating-point equality and inequality\n\t\tflags=\"$flags -wd1572\"\n\t\t# remark #1599: declaration hides variable/parameter ...\n\t\tflags=\"$flags -wd1599\"\n\t\t# remark #1720: function ... ::operator new ... has no corresponding member operator delete ...\n\t\tflags=\"$flags -wd1720\"\n\n\t\tif [ $cc_version -lt 110 ]; then\n\t\t\t# warns about system headers with recent glibc:\n\t\t\t# warning #1292: attribute \"__nonnull__\" ignored\n\t\t\tflags=\"$flags -wd1292\"\n\t\tfi\n\n\t\tif [ $cc_version -ge 100 ]; then\n\t\t\t# warning #1899: multicharacter character literal (potential portability problem)\n\t\t\tflags=\"$flags -wd1899\"\n\t\t\t# vec report defaults to telling where it did loop vectorisation, which is not very important\n\t\t\tflags=\"$flags -vec-report=0 \"\n\t\tfi\n\n\t\tif [ $cc_version -ge 110 ]; then\n\t\t\t# remark #2259: non-pointer conversion from ... to ... may lose significant bits\n\t\t\tflags=\"$flags -wd2259\"\n\t\tfi\n\n\t\tif [ \"$enable_lto\" != \"0\" ]; then\n\t\t\thas_ipo=`$1 -help ipo | grep '\\-ipo'`\n\t\t\tif [ -n \"$has_ipo\" ]; then\n\t\t\t\t# Use IPO (only if we see IPO exists and is requested)\n\t\t\t\tflags=\"$flags -ipo\"\n\t\t\t\tfeatures=\"$features lto\"\n\t\t\tfi\n\t\tfi\n\telif [ `basename $1 | grep 'clang'` ]; then\n\t\t# Enable some things only for certain clang versions\n\t\tcc_version=\"`$1 -v 2>&1 | head -n 1 | sed s@[^0-9]@@g | cut -c 1-2`\"\n\n\t\t# aliasing rules are not held in OpenDUNE code\n\t\tflags=\"$flags -fno-strict-aliasing\"\n\n\t\t# -W alone doesn't enable all warnings enabled by -Wall; on the other hand,\n\t\t# -Weverything enables too many useless warnings that can't be disabled (as of 3.0)\n\t\tflags=\"$flags -Wall -W\"\n\n\t\t# warning: expression result unused\n\t\tflags=\"$flags -Wno-unused-value\"\n\n\t\t# warning: explicitly assigning a variable of type '...' to itself\n\t\t# it happens when using the FOR_ALL_WINDOWS_FROM_BACK_FROM macro\n\t\tflags=\"$flags -Wno-self-assign\"\n\n\t\tif [ \"$cc_version\" -lt \"30\" ]; then\n\t\t\t# warning: equality comparison with extraneous parentheses\n\t\t\tflags=\"$flags -Wno-parentheses\"\n\t\t\t# warning: operands of ? are integers of different signs: 'unsigned int' and 'int'\n\t\t\tflags=\"$flags -Wno-sign-compare\"\n\t\tfi\n\n\t\tif [ \"$cc_version\" -ge \"30\" ]; then\n\t\t\t# warning: equality comparison with extraneous parentheses\n\t\t\t# this warning could be useful, but it warns about code in squirrel\n\t\t\tflags=\"$flags -Wno-parentheses-equality\"\n\t\tfi\n\n\t\tif [ \"$with_ccache\" != \"0\" -o \"$with_distcc\" != \"0\" ]; then\n\t\t\t# ccache and distcc run separate preprocess and compile passes,\n\t\t\t# both are fed with the same CFLAGS. Unfortunately, clang\n\t\t\t# complains about -I when compiling preprocessed files:\n\t\t\t# \"clang: warning: argument unused during compilation: '-I /usr/include'\"\n\t\t\tflags=\"$flags -Qunused-arguments\"\n\t\tfi\n\n\t\tif [ \"$enable_assert\" -eq \"0\" ]; then\n\t\t\t# do not warn about unused variables when building without asserts\n\t\t\tflags=\"$flags -Wno-unused-variable\"\n\t\tfi\n\n\t\t# rdynamic is used to get useful stack traces from crash reports.\n\t\tldflags=\"$ldflags -rdynamic\"\n\telse\n\t\t# Enable some things only for certain GCC versions\n\t\tcc_version=`$1 -dumpversion | cut -d. -f 1-2`\n\t\tif echo \"$cc_version\" | grep -q '\\.' ; then\n\t\t    # remove the dot\n\t\t    cc_version=`echo \"$cc_version\" | sed s@\\\\\\.@@g`\n\t\telse\n\t\t\t# add a 0 if the version had only one digit\n\t\t\tcc_version=\"${cc_version}0\"\n\t\tfi\n\n\t\tif [ \"$os\" != \"TOS\" ] && [ \"$os\" != \"DOS\" ] && [ $cc_version -lt 70 ] ; then\n\t\t\tif [ \"$with_asound\" = \"0\" ] ; then\n\t\t\t\tflags=\"$flags -ansi\"\n\t\t\tfi\n\t\t\tflags=\"$flags -pedantic\"\n\t\tfi\n\t\tflags=\"$flags -fno-common\"\n\t\tflags=\"$flags -Wall -Wsign-compare -Wundef\"\n\t\tflags=\"$flags -Wwrite-strings -Wpointer-arith\"\n\t\tflags=\"$flags -W -Wredundant-decls\"\n\t\tflags=\"$flags -Wformat=2 -Wformat-security\"\n\t\tflags=\"$flags -Wno-format-nonliteral\"\n\n\t\tif [ $enable_assert -eq 0 ]; then\n\t\t\t# Do not warn about unused variables when building without asserts\n\t\t\tif [ $cc_version -ge 30 ]; then\n\t\t\t\tflags=\"$flags -Wno-unused-variable\"\n\t\t\tfi\n\t\t\tif [ $cc_version -ge 46 ]; then\n\t\t\t\t# GCC 4.6 gives more warnings, disable them too\n\t\t\t\tflags=\"$flags -Wno-unused-but-set-variable\"\n\t\t\t\tflags=\"$flags -Wno-unused-but-set-parameter\"\n\t\t\tfi\n\t\tfi\n\n\t\tif [ $cc_version -ge 34 ]; then\n\t\t\t# Warn when a variable is used to initialise itself:\n\t\t\t# int a = a;\n\t\t\tflags=\"$flags -Winit-self\"\n\t\tfi\n\n\t\tif [ $cc_version -ge 40 ]; then\n\t\t\t# GCC 4.0+ complains about that we break strict-aliasing.\n\t\t\t#  On most places we don't see how to fix it, and it doesn't\n\t\t\t#  break anything. So disable strict-aliasing to make the\n\t\t\t#  compiler all happy.\n\t\t\tflags=\"$flags -fno-strict-aliasing\"\n\t\t\t# Warn about casting-out 'const' with regular C-style cast.\n\t\t\t#  The preferred way is const_cast<>() which doesn't warn.\n\t\t\tflags=\"$flags -Wcast-qual\"\n\t\tfi\n\n\t\tif [ $cc_version -ge 42 ]; then\n\t\t\t# GCC 4.2+ automatically assumes that signed overflows do\n\t\t\t# not occur in signed arithmetics, whereas we are not\n\t\t\t# sure that they will not happen. It furthermore complains\n\t\t\t# about its own optimized code in some places.\n\t\t\tflags=\"$flags -fno-strict-overflow\"\n\t\tfi\n\n\t\tif [ $cc_version -eq 45 ]; then\n\t\t\t# Prevent optimisation supposing enums are in a range specified by the standard\n\t\t\t# For details, see http://gcc.gnu.org/PR43680\n\t\t\tflags=\"$flags -fno-tree-vrp\"\n\t\tfi\n\n\t\tif [ $cc_version -ge 47 ]; then\n\t\t\t# Disable bogus 'attempt to free a non-heap object' warning\n\t\t\tflags=\"$flags -Wno-free-nonheap-object\"\n\t\tfi\n\n\t\tif [ \"$enable_lto\" != \"0\" ]; then\n\t\t\t# GCC 4.5 outputs '%{flto}', GCC 4.6 outputs '%{flto*}'\n\t\t\thas_lto=`$1 -dumpspecs | grep '\\%{flto'`\n\t\t\tif [ -n \"$has_lto\" ]; then\n\t\t\t\t# Use LTO only if we see LTO exists and is requested\n\t\t\t\tif [ $cc_version -lt 46 ]; then\n\t\t\t\t\tflags=\"$flags -flto\"\n\t\t\t\telse\n\t\t\t\t\tflags=\"$flags -flto=jobserver\"\n\t\t\t\tfi\n\t\t\t\tldflags=\"$ldflags -fwhole-program\"\n\t\t\t\tfeatures=\"$features lto\"\n\t\t\tfi\n\t\tfi\n\n\t\thas_rdynamic=`$1 -dumpspecs | grep rdynamic`\n\t\tif [ -n \"$has_rdynamic\" ]; then\n\t\t\t# rdynamic is used to get useful stack traces from crash reports.\n\t\t\tflags=\"$flags -rdynamic\"\n\t\t\tldflags=\"$ldflags -rdynamic\"\n\t\tfi\n\tfi\n\n\teval \"$2=\\\"$flags\\\"\"\n\teval \"$3=\\\"$ldflags\\\"\"\n\teval \"$4=\\\"$features\\\"\"\n}\n\nmake_cflags_and_ldflags() {\n\t# General CFlags for BUILD\n\tCFLAGS_BUILD=\"$CFLAGS_BUILD\"\n\t# LDFLAGS for BUILD\n\tLDFLAGS_BUILD=\"$LDFLAGS_BUILD\"\n\t# FEATURES for BUILD (lto)\n\tFEATURES_BUILD=\"\"\n\t# General CFlags for HOST\n\tCFLAGS=\"$CFLAGS\"\n\t# Libs to compile. In fact this is just LDFLAGS\n\tLIBS=\"\"\n\t# LDFLAGS used for HOST\n\tLDFLAGS=\"$LDFLAGS\"\n\t# FEATURES for HOST (lto)\n\tFEATURES=\"\"\n\n\tmake_compiler_cflags \"$cc_build\" \"CFLAGS_BUILD\" \"LDFLAGS_BUILD\" \"FEATURES_BUILD\"\n\tmake_compiler_cflags \"$cc_host\" \"CFLAGS\" \"LDFLAGS\" \"FEATURES\"\n\n\tCFLAGS=\"$CFLAGS -D$os -I$ROOT_DIR/include\"\n\n\tif [ \"$enable_debug\" = \"0\" ]; then\n\t\t# No debug, add default stuff\n\t\tOBJS_SUBDIR=\"release\"\n\t\tif [ \"$os\" = \"MORPHOS\" ]; then\n\t\t\tCFLAGS=\"-I/gg/os-include -noixemul -fstrict-aliasing -fexpensive-optimizations -mcpu=604 -fno-inline -mstring -mmultiple $CFLAGS\"\n\t\t\tLDFLAGS=\"$LDFLAGS -noixemul\"\n\t\tfi\n\n\t\tif [ \"$os\" = \"TOS\" ] ; then\n\t\t\tCFLAGS=\"-Ofast -fomit-frame-pointer $CFLAGS\"\n\t\telif [ \"$os\" = \"HAIKU\" -a $cc_version -lt 40 ] ; then\n\t\t\tCFLAGS=\"-O2 -fomit-frame-pointer $CFLAGS\"\n\t\telse\n\t\t\tCFLAGS=\"-O2 -fomit-frame-pointer -Wno-variadic-macros $CFLAGS\"\n\t\tfi\n\telse\n\t\tOBJS_SUBDIR=\"debug\"\n\n\t\t# Each debug level reduces the optimization by a bit\n\t\tif [ $enable_debug -ge 1 ]; then\n\t\t\tCFLAGS=\"$CFLAGS -g -D_DEBUG\"\n\t\tfi\n\t\tif [ $enable_debug -ge 2 ]; then\n\t\t\tCFLAGS=\"$CFLAGS -fno-inline\"\n\t\tfi\n\t\tif [ $enable_debug -ge 3 ]; then\n\t\t\tCFLAGS=\"$CFLAGS -O0\"\n\t\telse\n\t\t\tCFLAGS=\"$CFLAGS -O2\"\n\t\tfi\n\tfi\n\n\tif [ $enable_debug -le 2 ]; then\n\t\tif basename \"$cc_host\" | grep \"gcc\" &>/dev/null; then\n\t\t\t# Define only when compiling with GCC. Some GLIBC versions use GNU\n\t\t\t# extensions in a way that breaks build with at least ICC.\n\t\t\t# This requires -O1 or more, so debug level 3 (-O0) is excluded.\n\t\t\tosversion=`uname -r | cut -f 1 -d'.'`\n\t\t\tif [ \"$os\" != \"OSX\" ] || [ \"$os\" = \"OSX\" -a \"$osversion\" -ne 9 ] ; then\n\t\t\t\t# FORTIFY_SOURCE causes problem with OS X 10.5 / Xcode 3.1.4\n\t\t\t\t# OS X 10.5.xx is Darwin 9.xx\n\t\t\t\tCFLAGS=\"$CFLAGS\"\n\t\t\tfi\n\n\t\t\t# Just add -O1 to the tools needed for building.\n\t\t\tCFLAGS_BUILD=\"$CFLAGS_BUILD -O1\"\n\t\tfi\n\tfi\n\n\tif [ \"$os\" = \"OSX\" ] && [ $cc_version -eq 40 ]; then\n\t\t# Apple's GCC 4.0 has a compiler bug for x86_64 with (higher) optimization,\n\t\t# wrongly optimizing ^= in loops. This disables the failing optimisation.\n\t\tCFLAGS=\"$CFLAGS -fno-expensive-optimizations\"\n\tfi\n\n\tif [ \"$enable_profiling\" != \"0\" ]; then\n\t\tCFLAGS=\"$CFLAGS -p\"\n\t\tLDFLAGS=\"$LDFLAGS -pg\"\n\tfi\n\n\tif [ \"`echo $1 | cut -c 1-3`\" != \"icc\" ]; then\n\t\tif [ \"$os\" = \"CYGWIN\" ]; then\n\t\t\tflags=\"$flags -mwin32\"\n\t\t\tLDFLAGS=\"$LDFLAGS -mwin32\"\n\t\tfi\n\t\tif [ \"$os\" = \"MINGW\" ] || [ \"$os\" = \"CYGWIN\" ]; then\n\t\t\tif [ $cc_version -lt 46 ]; then\n\t\t\t\tflags=\"$flags -mno-cygwin\"\n\t\t\t\tLDFLAGS=\"$LDFLAGS -mno-cygwin\"\n\t\t\tfi\n\n\t\t\tLDFLAGS=\"$LDFLAGS -Wl,--subsystem,windows\"\n\n\t\t\tLIBS=\"$LIBS -lwinmm -lcomctl32 -lgdi32\"\n\n\t\t\tif [ $cc_version -ge 44 ]; then\n\t\t\t\tLDFLAGS_BUILD=\"$LDFLAGS_BUILD -static-libgcc\"\n\t\t\tfi\n\t\t\tif [ $cc_version -ge 47 ]; then\n\t\t\t\tCFLAGS=\"$CFLAGS -mno-ms-bitfields\"\n\t\t\tfi\n\t\tfi\n\tfi\n\n\tif [ \"$os\" = \"WINCE\" ]; then\n\t\tLIBS=\"$LIBS -lcoredll -lcorelibc -laygshell -lws2 -e WinMainCRTStartup\"\n\tfi\n\n\tif [ \"$os\" = \"MORPHOS\" ]; then\n\t\t# -Wstrict-prototypes generates much noise because of system headers\n\t\tCFLAGS=\"$CFLAGS -Wno-strict-prototypes\"\n\tfi\n\n\tif [ \"$os\" = \"OSX\" ]; then\n\t\t# Add macports include dir which is not always set a default system dir. This avoids zillions of bogus warnings.\n\t\tCFLAGS=\"$CFLAGS -isystem/opt/local/include\"\n\n\t\t# Add OS X SDK audio frameworks\n\t\tLDFLAGS=\"-Wl,-framework,AudioToolbox -Wl,-framework,AudioUnit $LDFLAGS\"\n\t\tLDFLAGS=\"-Wl,-framework,CoreFoundation $LDFLAGS\"\n\n\t\tif [ -z \"$sdl2_config\" ] && [ -z \"$sdl_config\" ] ; then\n\t\t\tLDFLAGS=\"$LDFLAGS -Wl,-framework,ApplicationServices\"\n\t\t\tLDFLAGS=\"$LDFLAGS -Wl,-framework,Carbon\"\n\t\t\tLDFLAGS=\"$LDFLAGS -Wl,-framework,CoreAudio\"\n\t\tfi\n\n\t\tif [ \"$enable_universal\" = \"0\" ]; then\n\t\t\t# Universal builds set this elsewhere\n\t\t\tCFLAGS=\"$OSX_SYSROOT $CFLAGS\"\n\t\t\tLDFLAGS=\"$OSX_LD_SYSROOT $LDFLAGS\"\n\t\tfi\n\n\t\tif [ \"$enable_universal\" = \"0\" ] && [ $cc_version -ge 40 ]; then\n\t\t\t# Only set the min version when not doing an universal build.\n\t\t\t# Universal builds set the version elsewhere.\n\t\t\tif [ \"$cpu_type\" = \"64\" ]; then\n\t\t\t\tif [ -n \"$sdl2_config\" ]; then\n\t\t\t\t\tCFLAGS=\"$CFLAGS -mmacosx-version-min=10.7\"\n\t\t\t\telse\n\t\t\t\t\tCFLAGS=\"$CFLAGS -mmacosx-version-min=10.5\"\n\t\t\t\tfi\n\t\t\telse\n\t\t\t\tgcc_cpu=`$cc_host -dumpmachine`\n\t\t\t\tif [ \"`echo $gcc_cpu | cut -c 1-3`\" = \"ppc\" -o \"`echo $gcc_cpu | cut -c 1-7`\" = \"powerpc\" ]; then\n\t\t\t\t\t# PowerPC build can run on 10.3\n\t\t\t\t\tCFLAGS=\"$CFLAGS -mmacosx-version-min=10.3\"\n\t\t\t\telse\n\t\t\t\t\t# Intel is only available starting from 10.4\n\t\t\t\t\tCFLAGS=\"$CFLAGS -mmacosx-version-min=10.4\"\n\t\t\t\tfi\n\t\t\t\tmachine=$(machine)\n\t\t\t\tcase $machine in\n\t\t\t\t\tppc7400 | ppc7450 | ppc970)\n\t\t\t\t\tCFLAGS=\"$CFLAGS -maltivec\" ;;\n\t\t\t\tesac\n\t\t\tfi\n\t\tfi\n\tfi\n\n\tif [ \"$os\" = \"OS2\" ]; then\n\t\tLDFLAGS_BUILD=\"$LDFLAGS_BUILD -lstdc++\"\n\tfi\n\n\tif [ \"$os\" = \"BEOS\" ] || [ \"$os\" = \"HAIKU\" ]; then\n\t\tLIBS=\"$LIBS -lmidi -lbe\"\n\t\tif [ $cc_version -lt 30 ]; then\n\t\t\tLIBS=\"$LIBS -lstdc++.r4\"\n\t\telse\n\t\t\tLIBS=\"$LIBS -lstdc++\"\n\t\tfi\n\tfi\n\n\t# Most targets act like UNIX, just with some additions\n\tif [ \"$os\" = \"BEOS\" ] || [ \"$os\" = \"HAIKU\" ] || [ \"$os\" = \"OSX\" ] || [ \"$os\" = \"MORPHOS\" ] || [ \"$os\" = \"FREEBSD\" ] || [ \"$os\" = \"OPENBSD\" ] || [ \"$os\" = \"NETBSD\" ] || [ \"$os\" = \"HPUX\" ] || [ \"$os\" = \"SUNOS\" ] || [ \"$os\" = \"OS2\" ]; then\n\t\tCFLAGS=\"$CFLAGS -DUNIX\"\n\tfi\n\t# And others like Windows\n\tif [ \"$os\" = \"MINGW\" ] || [ \"$os\" = \"CYGWIN\" ] || [ \"$os\" = \"WINCE\" ]; then\n\t\tCFLAGS=\"$CFLAGS -DWIN\"\n\t\tLIBS=\"$LIBS -lshlwapi\"\n\tfi\n\n\tif [ \"$os\" = \"TOS\" ]; then\n\t\tCFLAGS=\"-m68030 -msoft-float $CFLAGS\"\n\t\tLDFLAGS=\"$LDFLAGS -Wl,--traditional-format\"\n\t\tas_host=\"vasmm68k_mot\"\n\t\tasflags=\"-m68030 -Faout -quiet\"\n\tfi\n\n\tif [ -n \"$sdl_config\" ]; then\n\t\tCFLAGS=\"$CFLAGS -DWITH_SDL\"\n\t\t# SDL must not add _GNU_SOURCE as it breaks many platforms\n\t\tCFLAGS=\"$CFLAGS `$sdl_config --cflags | sed 's@-D_GNU_SOURCE[^ ]*@@'`\"\n\t\tif [ \"$enable_static\" != \"0\" ]; then\n\t\t\tif [ \"$os\" = \"OSX\" ] ; then\n\t\t\t\tlibpath=`$sdl_config --static-libs | cut -d ' ' -f 1 | cut -c 3- `\n\t\t\t\tLIBS=\"$LIBS `$sdl_config --static-libs | sed 's@ -l\\([^ ]*\\)@ '${libpath}'/lib\\1.a@g' `\"\n\t\t\telse\n\t\t\t\tLIBS=\"$LIBS `$sdl_config --static-libs`\"\n\t\t\tfi\n\t\t\tif [ $with_sdlimage -gt 0 ]; then\n\t\t\t\tif [ \"$os\" = \"OSX\" ] ; then\n\t\t\t\t\tLIBS=\"$LIBS $(pkg-config SDL_image --libs-only-L | cut -c 3- | tr -d ' ')/libSDL_image.a\"\n\t\t\t\telse\n\t\t\t\t\tLIBS=\"$LIBS -lSDL_image\"\n\t\t\t\tfi\n\t\t\tfi\n\t\telse\n\t\t\tLIBS=\"$LIBS `$sdl_config --libs`\"\n\t\t\tif [ $with_sdlimage -gt 0 ]; then\n\t\t\t\tLIBS=\"$LIBS -lSDL_image\"\n\t\t\tfi\n\t\tfi\n\t\tif [ $with_sdlimage -eq 0 ]; then\n\t\t\tCFLAGS=\"$CFLAGS -DWITHOUT_SDLIMAGE\"\n\t\tfi\n\tfi\n\n\tif [ -n \"$sdl2_config\" ]; then\n\t\tCFLAGS=\"$CFLAGS -DWITH_SDL2\"\n\t\t# SDL2 must not add _GNU_SOURCE as it breaks many platforms\n\t\tCFLAGS=\"$CFLAGS `$sdl2_config --cflags | sed 's@-D_GNU_SOURCE[^ ]*@@'` -DSDL_FORCE_INLINE='static __inline'\"\n\t\tif [ \"$enable_static\" != \"0\" ]; then\n\t\t\tif [ \"$os\" = \"OSX\" ] ; then\n\t\t\t\tlibpath=`$sdl2_config --static-libs | cut -d ' ' -f 1 | cut -b 3- `\n\t\t\t\tLIBS=\"$LIBS `$sdl2_config --static-libs | cut -d ' ' -f 2- | sed 's@-l\\([^ ]*\\)@'${libpath}'/lib\\1.a@' `\"\n\t\t\telse\n\t\t\t\tLIBS=\"$LIBS `$sdl2_config --static-libs`\"\n\t\t\tfi\n\t\t\tif [ $with_sdl2image -gt 0 ]; then\n\t\t\t\tif [ \"$os\" = \"OSX\" ] ; then\n\t\t\t\t\tLIBS=\"$LIBS $(pkg-config SDL2_image --libs-only-L | cut -c 3- | tr -d ' ')/libSDL2_image.a\"\n\t\t\t\telse\n\t\t\t\t\tLIBS=\"$LIBS -lSDL2_image\"\n\t\t\t\tfi\n\t\t\tfi\n\t\telse\n\t\t\tLIBS=\"$LIBS `$sdl2_config --libs`\"\n\t\t\tif [ $with_sdl2image -gt 0 ]; then\n\t\t\t\tLIBS=\"$LIBS -lSDL2_image\"\n\t\t\tfi\n\t\tfi\n\t\tif [ $with_sdl2image -eq 0 ]; then\n\t\t\tCFLAGS=\"$CFLAGS -DWITHOUT_SDLIMAGE\"\n\t\tfi\n\tfi\n\n\tif [ \"$enable_static\" != \"0\" ]; then\n\t\t# OSX can't handle -static in LDFLAGS\n\t\tif [ \"$os\" != \"OSX\" ]; then\n\t\t\tLDFLAGS=\"$LDFLAGS -static\"\n\t\tfi\n\tfi\n\n\tif [ \"$with_asound\" != \"0\" ]; then\n\t\tif [ \"$enable_static\" != \"0\" ] && [ \"$os\" != \"OSX\" ]; then\n\t\t\tLIBS=\"$LIBS $asound\"\n\t\telse\n\t\t\tLIBS=\"$LIBS -lasound\"\n\t\tfi\n\t\tCFLAGS=\"$CFLAGS -DALSA\"\n                if [ \"$os\" = \"FREEBSD\" ]; then\n                        CFLAGS=\"$CFLAGS -Dinline=__inline__\"\n                fi\n\tfi\n\n\tif [ \"$with_pulse\" != \"0\" ]; then\n\t\tLIBS=\"$LIBS $(pkg-config --libs-only-l libpulse)\"\n\t\tCFLAGS=\"$CFLAGS $(pkg-config --cflags libpulse) -DPULSEAUDIO\"\n\t\tif [ \"$os\" = \"FREEBSD\" ] || [ \"$os\" = \"OPENBSD\" ] || [ \"$os\" = \"NETBSD\" ]; then\n\t\t\tLIBS=\"$LIBS -lintl\"\n\t\tfi\n\tfi\n\n\tif [ \"$with_kai\" != \"0\" ]; then\n\t\tLIBS=\"$LIBS -lkai\"\n\t\tCFLAGS=\"$CFLAGS -DKAI\"\n\tfi\n\n\tif [ \"$with_munt\" != \"0\" ]; then\n\t\tLIBS=\"$LIBS -lmt32emu -lm -lstdc++\"\n\t\tCFLAGS=\"$CFLAGS -DMUNT\"\n\tfi\n\n\tif [ \"$with_fluid\" != \"0\" ]; then\n\t\tLIBS=\"$LIBS -lfluidsynth\"\n\t\tCFLAGS=\"$CFLAGS -DFLUID\"\n\t\tif [ \"$os\" = \"OS2\" ]; then\n\t\t\tLIBS=\"$LIBS -lkai\"\n\t\tfi\n\tfi\n\n\tif [ \"$enable_assert\" = \"0\" ]; then\n\t\tCFLAGS=\"$CFLAGS -DNDEBUG\"\n\t\tCFLAGS_BUILD=\"$CFLAGS_BUILD -DNDEBUG\"\n\tfi\n\n\tif [ \"$enable_lto\" != \"0\" ]; then\n\t\tlto_build=`echo \"$FEATURES_BUILD\" | grep \"lto\"`\n\t\tlto_host=`echo \"$FEATURES\" | grep \"lto\"`\n\t\tif [ -z \"$lto_build$lto_host\" ]; then\n\t\t\tlog 1 \"WARNING: you enabled LTO/IPO, but neither build nor host compiler supports it\"\n\t\t\tlog 1 \"WARNING: LTO/IPO has been disabled\"\n\t\tfi\n\t\tif [ -n \"$lto_build\" ]; then\n\t\t\tLDFLAGS_BUILD=\"$LDFLAGS_BUILD $CFLAGS_BUILD\"\n\t\tfi\n\t\tif [ -n \"$lto_host\" ]; then\n\t\t\tLDFLAGS=\"$LDFLAGS $CFLAGS\"\n\t\tfi\n\tfi\n\n\tlog 1 \"using CFLAGS_BUILD... $CFLAGS_BUILD\"\n\tlog 1 \"using LDFLAGS_BUILD... $LDFLAGS_BUILD\"\n\tlog 1 \"using CFLAGS... $CFLAGS\"\n\tlog 1 \"using LDFLAGS... $LIBS $LDFLAGS\"\n\n\t# Makedepend doesn't like something like: -isysroot /OSX/blabla\n\t#  so convert it to: -isysroot -OSX/blabla. makedepend just ignores\n\t#  any - command it doesn't know, so we are pretty save.\n\t# Lovely hackish, not?\n\t# Btw, this almost always comes from outside the configure, so it is\n\t#  not something we can control.\n\t# Also make makedepend aware of compiler's built-in defines.\n\tif [ \"$with_makedepend\" != \"0\" ] || [ \"$enable_builtin_depend\" != \"0\" ]; then\n\t\t# Please escape ALL \" within ` because e.g. \"\" terminates the string in some sh implementations\n\t\tcflags_makedep=\"$cflags_makedep `echo \\\"$CFLAGS\\\" | sed 's@ /@ -@g;s@-I[ ]*[^ ]*@@g'`\"\n\telse\n\t\tmakedepend=\"\"\n\tfi\n\n\tif [ \"$with_distcc\" != \"0\" ]; then\n\t\tcc_host=\"$distcc $cc_host\"\n\t\tlog 1 \"\"\n\t\tlog 1 \" NOTICE: remind yourself to use 'make -jN' to make use of distcc\"\n\t\tlog 1 \"\"\n\tfi\n\n\tif [ \"$with_ccache\" != \"0\" ]; then\n\t\tcc_host=\"$ccache $cc_host\"\n\tfi\n}\n\ncheck_compiler() {\n\t# Params:\n\t# $1 - Type for message (build / host)\n\t# $2 - What to fill with the found compiler\n\t# $3 - System to try\n\t# $4 - Compiler to try\n\t# $5 - Env-setting to try\n\t# $6 - GCC alike to try\n\t# $7 - CC alike to try\n\t# $8 - \"0\" gcc, \"1\" g++, \"2\" windres, \"3\" strip, \"4\" lipo\n\t# $9 - What the command is to check for\n\n\tif [ -n \"$3\" ]; then\n\t\t# Check for system\n\t\tif [ -z \"$6\" ]; then\n\t\t\tcompiler=\"$3\"\n\t\telse\n\t\t\tcompiler=\"$3-$6\"\n\t\tfi\n\t\tmachine=`eval $compiler $9 2>/dev/null`\n\t\tret=$?\n\t\teval \"$2=\\\"$compiler\\\"\"\n\n\t\tlog 2 \"executing $compiler $9\"\n\t\tlog 2 \"  returned $machine\"\n\t\tlog 2 \"  exit code $ret\"\n\n\t\tif ( [ -z \"$machine\" ] && [ \"$8\" != \"3\" ] ) || [ \"$ret\" != \"0\" ]; then\n\t\t\tlog 1 \"checking $1... $compiler not found\"\n\t\t\tlog 1 \"I couldn't detect any $6 binary for $3\"\n\t\t\texit 1\n\t\tfi\n\n\t\tif [ \"$machine\" != \"$3\" ] && ( [ \"$8\" = \"0\" ] || [ \"$8\" = \"1\" ] ); then\n\t\t\tlog 1 \"checking $1... expected $3, found $machine\"\n\t\t\tlog 1 \"the compiler suggests it doesn't build code for the machine you specified\"\n\t\t\texit 1\n\t\tfi\n\telif [ -n \"$4\" ]; then\n\t\t# Check for manual compiler\n\t\tmachine=`$4 $9 2>/dev/null`\n\t\tret=$?\n\t\teval \"$2=\\\"$4\\\"\"\n\n\t\tlog 2 \"executing $4 $9\"\n\t\tlog 2 \"  returned $machine\"\n\t\tlog 2 \"  exit code $ret\"\n\n\t\tif ( [ -z \"$machine\" ] && [ \"$8\" != \"3\" ] ) || [ \"$ret\" != \"0\" ]; then\n\t\t\tlog 1 \"checking $1... $4 not found\"\n\t\t\tlog 1 \"the selected binary doesn't seem to be a $6 binary\"\n\t\t\texit 1\n\t\tfi\n\telse\n\t\t# Nothing given, autodetect\n\n\t\tif [ -n \"$5\" ]; then\n\t\t\tmachine=`$5 $9 2>/dev/null`\n\t\t\tret=$?\n\t\t\teval \"$2=\\\"$5\\\"\"\n\n\t\t\tlog 2 \"executing $5 $9\"\n\t\t\tlog 2 \"  returned $machine\"\n\t\t\tlog 2 \"  exit code $ret\"\n\n\t\t\t# The user defined a GCC that doesn't reply to $9.. abort\n\t\t\tif ( [ -z \"$machine\" ] && [ \"$8\" != \"3\" ] ) || [ \"$ret\" != \"0\" ]; then\n\t\t\t\tlog 1 \"checking $1... $5 unusable\"\n\t\t\t\tlog 1 \"the CC environment variable is set, but it doesn't seem to be a $6 binary\"\n\t\t\t\tlog 1 \"please redefine the CC environment to a $6 binary\"\n\t\t\t\texit 1\n\t\t\tfi\n\t\telse\n\t\t\tlog 2 \"checking $1... CC not set (skipping)\"\n\n\t\t\t# No $5, so try '$6'\n\t\t\tmachine=`$6 $9 2>/dev/null`\n\t\t\tret=$?\n\t\t\teval \"$2=\\\"$6\\\"\"\n\n\t\t\tlog 2 \"executing $6 $9\"\n\t\t\tlog 2 \"  returned $machine\"\n\t\t\tlog 2 \"  exit code $ret\"\n\n\t\t\tif ( [ -z \"$machine\" ] && [ \"$8\" != \"3\" ] ) || [ \"$ret\" != \"0\" ]; then\n\t\t\t\t# Maybe '$7'?\n\t\t\t\tmachine=`$7 $9 2>/dev/null`\n\t\t\t\tret=$?\n\t\t\t\teval \"$2=\\\"$7\\\"\"\n\n\t\t\t\tlog 2 \"executing $7 $9\"\n\t\t\t\tlog 2 \"  returned $machine\"\n\t\t\t\tlog 2 \"  exit code $ret\"\n\n\t\t\t\t# All failed, abort\n\t\t\t\tif [ -z \"$machine\" ]; then\n\t\t\t\t\tlog 1 \"checking $1... $6 not found\"\n\t\t\t\t\tlog 1 \"I couldn't detect any $6 binary on your system\"\n\t\t\t\t\tlog 1 \"please define the CC environment to where it is located\"\n\n\t\t\t\t\texit 1\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\tfi\n\n\tif [ \"$8\" != \"0\" ]; then\n\t\teval \"res=\\$$2\"\n\t\tlog 1 \"checking $1... $res\"\n\telse\n\t\tlog 1 \"checking $1... $machine\"\n\tfi\n}\n\ncheck_build() {\n           #\tif [ \"$os\" = \"FREEBSD\" ]; then\n           #\t# FreeBSD's C compiler does not support dump machine.\n           #\tcheck_compiler \"build system type\" \"cc_build\" \"$build\" \"$cc_build\" \"$CXX\" \"g++\" \"c++\" \"0\" \"-dumpmachine\"\n\tif [ \"$os\" = \"HAIKU\" ]; then\n\t\tcheck_compiler \"build system type\" \"cc_build\" \"$build\" \"$cc_build\" \"$CXX\" \"g++\" \"c++\" \"0\" \"-dumpmachine\"\n\telse\n\t\tcheck_compiler \"build system type\" \"cc_build\" \"$build\" \"$cc_build\" \"$CC\" \"gcc\" \"cc\" \"0\" \"-dumpmachine\"\n\tfi\n}\n\ncheck_host() {\n\t# By default the host is the build\n\tif [ -z \"$host\" ]; then host=\"$build\"; fi\n\n           #\tif [ \"$os\" = \"FREEBSD\" ]; then\n           #\t\t# FreeBSD's C compiler does not support dump machine.\n           #\t\tcheck_compiler \"host system type\" \"cc_host\" \"$host\" \"$cc_host\" \"$CXX\" \"g++\" \"c++\" \"0\" \"-dumpmachine\"\n           #\telse\n\t\tcheck_compiler \"host system type\" \"cc_host\" \"$host\" \"$cc_host\" \"$CC\" \"gcc\" \"cc\" \"0\" \"-dumpmachine\"\n                #\tfi\n}\n\ncheck_strip() {\n\tif [ \"$os\" = \"OS2\" ]; then\n\t\t# OS2 via gcc is a bit weird.. stripping HAS to be done via emxbind, which is via gcc directly\n\t\tlog 1 \"checking host strip... using gcc -s option\"\n\telif [ \"$os\" = \"OSX\" ]; then\n\t\t# Most targets have -V in strip, to see if they exists... OSX doesn't.. so execute something\n\t\techo \"int main(int argc, char *argv[]) { }\" > strip.test.c\n\t\t$cc_host strip.test.c -o strip.test\n\t\tcheck_compiler \"host strip\" \"strip\" \"$host\" \"$strip\" \"$STRIP\" \"strip\" \"strip\" \"3\" \"strip.test\"\n\t\trm -f strip.test.c strip.test\n\telse\n\t\tcheck_compiler \"host strip\" \"strip\" \"$host\" \"$strip\" \"$STRIP\" \"strip\" \"strip\" \"3\" \"-V\"\n\tfi\n}\n\ncheck_lipo() {\n\tif [ \"$os\" = \"OSX\" ] && [ \"$enable_universal\" != \"0\" ]; then\n\t\techo \"int main(int argc, char *argv[]) { }\" > lipo.test.c\n\t\t$cc_host lipo.test.c -o lipo.test\n\t\tcheck_compiler \"host lipo\" \"lipo\" \"$host\" \"$lipo\" \"$LIPO\" \"lipo\" \"lipo\" \"4\" \"-info lipo.test\"\n\t\trm -f lipo.test.c lipo.test\n\tfi\n}\n\ncheck_osx_sdk() {\n\tlocal sysroot=\"\"\n\tif [ -n \"$1\" ]; then\n\t\tif echo \"$1\" | grep -q / ; then\n\t\t\t# Seems to be a file system path\n\t\t\tosx_sdk_path=\"$1\"\n\t\telse\n\t\t\tosx_sdk_path=\"/Developer/SDKs/MacOSX$1.sdk\"\n\t\tfi\n\t\tif [ ! -d \"$osx_sdk_path\" ]; then\n\t\t\t# No directory, not present or garbage\n\t\t\treturn 1\n\t\tfi\n\n\t\t# Set minimum version to 10.4 as that's when kCGBitmapByteOrder32Host was introduced\n\t\tsysroot=\"-isysroot $osx_sdk_path -Wl,-syslibroot,$osx_sdk_path -mmacosx-version-min=10.4\"\n\tfi\n\ncat > tmp.osx.c << EOF\nint main() {\n\treturn 0;\n}\nEOF\n\texecute=\"$cc_host $sysroot $CFLAGS tmp.osx.c -framework Cocoa -o tmp.osx 2>&1\"\n\teval $execute > /dev/null\n\tret=$?\n\tlog 2 \"executing $execute\"\n\tlog 2 \"  exit code $ret\"\n\trm -f tmp.osx.c tmp.osx\n\treturn $ret\n}\n\ncheck_makedepend() {\n\tif [ \"$enable_builtin_depend\" != \"0\" ]; then\n\t\twith_makedepend=\"0\"\n\tfi\n\n\tif [ \"$with_makedepend\" = \"0\" ]; then\n\t\tlog 1 \"checking makedepend... disabled\"\n\t\treturn\n\tfi\n\n\tif [ \"$with_makedepend\" = \"1\" ] || [ \"$with_makedepend\" = \"2\" ]; then\n\t\tmakedepend=\"makedepend\"\n\telse\n\t\tmakedepend=\"$with_makedepend\"\n\tfi\n\n\trm -f makedepend.tmp\n\ttouch makedepend.tmp\n\tres=`$makedepend -fmakedepend.tmp 2>/dev/null`\n\tres=$?\n\tlog 2 \"executing $makedepend -f makedepend.tmp\"\n\tlog 2 \"  returned `cat makedepend.tmp`\"\n\tlog 2 \"  exit code $ret\"\n\n\tif [ ! -s makedepend.tmp ]; then\n\t\trm -f makedepend.tmp makedepend.tmp.bak\n\n\t\tif [ \"$with_makedepend\" = \"2\" ]; then\n\t\t\tlog 1 \"checking makedepend... not found\"\n\n\t\t\tlog 1 \"I couldn't detect any makedepend on your system\"\n\t\t\tlog 1 \"please locate it via --makedepend=[binary]\"\n\n\t\t\texit 1\n\t\telif [ \"$with_makedepend\" != \"1\" ]; then\n\t\t\tlog 1 \"checking makedepend... $makedepend not found\"\n\n\t\t\tlog 1 \"the selected file doesn't seem to be a valid makedepend binary\"\n\n\t\t\texit 1\n\t\telse\n\t\t\tlog 1 \"checking makedepend... not found\"\n\n\t\t\twith_makedepend=\"0\"\n\t\t\treturn\n\t\tfi\n\tfi\n\n\trm -f makedepend.tmp makedepend.tmp.bak\n\n\tlog 1 \"checking makedepend... $makedepend\"\n}\n\ncheck_version() {\n\t# $1 - requested version (major.minor)\n\t# $2 - version we got (major.minor)\n\n\tif [ -z \"$2\" ]; then\n\t\treturn 0\n\tfi\n\n\treq_major=`echo $1 | cut -d. -f1`\n\tgot_major=`echo $2 | cut -d. -f1`\n\tif [ $got_major -lt $req_major ]; then\n\t\treturn 0\n\telif [ $got_major -gt $req_major ]; then\n\t\treturn 1\n\tfi\n\n\treq_minor=`echo $1 | cut -d. -f2`\n\tgot_minor=`echo $2 | cut -d. -f2`\n\tif [ $got_minor -lt $req_minor ]; then\n\t\treturn 0\n\tfi\n\treturn 1\n}\n\ndetect_awk() {\n\t# Not all awks allow gsub(), so we test for that here! It is in fact all we need...\n\n\t# These awks are known to work. Test for them explicit\n\tawks=\"gawk mawk nawk\"\n\n\tawk_prefix=\"echo \\\"a.c b.c c.c\\\" | tr ' ' \\\\\\\\n | \"\n\tawk_param=\"' { ORS = \\\" \\\" } /\\.c$/   { gsub(\\\".c$\\\",   \\\".o\\\", \\$0); print \\$0; }' 2>/dev/null\"\n\tawk_result=\"a.o b.o c.o \"\n\tlog 2 \"Detecing awk...\"\n\n\tlog 2 \"Trying: $awk_prefix $awk $awk_param\"\n\tres=`eval $awk_prefix $awk $awk_param`\n\tlog 2 \"Result: '$res'\"\n\tif [ \"$res\" != \"$awk_result\" ] && [ \"$awk\" = \"awk\" ]; then\n\t\t# User didn't supply his own awk, so try to detect some other known working names for an awk\n\t\tfor awk in $awks; do\n\t\t\tlog 2 \"Trying: $awk_prefix $awk $awk_param\"\n\t\t\tres=`eval $awk_prefix $awk $awk_param`\n\t\t\tlog 2 \"Result: '$res'\"\n\t\t\tif [ \"$res\" = \"$awk_result\" ]; then break; fi\n\t\tdone\n\n\t\tif [ \"$res\" != \"$awk_result\" ]; then\n\t\t\tlog 1 \"checking awk... not found\"\n\t\t\tlog 1 \"configure: error: no awk found\"\n\t\t\tlog 1 \"configure: error: please install one of the following: $awks\"\n\t\t\texit 1\n\t\tfi\n\tfi\n\tif [ \"$res\" != \"$awk_result\" ]; then\n\t\tlog 1 \"checking awk... not found\"\n\t\tlog 1 \"configure: error: you supplied '$awk' but it doesn't seem a valid gawk or mawk\"\n\t\texit 1\n\tfi\n\n\tlog 1 \"checking awk... $awk\"\n}\n\ndetect_os() {\n\tif [ \"$os\" = \"DETECT\" ]; then\n\t\t# Detect UNIX, OSX, FREEBSD, OPENBSD, NETBSD, HPUX, MORPHOS, BEOS, SUNOS, CYGWIN, MINGW, OS2, DOS, and WINCE\n\n\t\t# Try first via dumpmachine, then via uname\n\t\tos=`echo \"$host\" | tr '[A-Z]' '[a-z]' | $awk '\n\t\t\t\t\t/linux/        { print \"UNIX\";    exit}\n\t\t\t\t\t/darwin/       { print \"OSX\";     exit}\n\t\t\t\t\t/freebsd/      { print \"FREEBSD\"; exit}\n\t\t\t\t\t/openbsd/      { print \"OPENBSD\"; exit}\n\t\t\t\t\t/netbsd/       { print \"NETBSD\";  exit}\n\t\t\t\t\t/hp-ux/        { print \"HPUX\";    exit}\n\t\t\t\t\t/morphos/      { print \"MORPHOS\"; exit}\n\t\t\t\t\t/beos/         { print \"BEOS\";    exit}\n\t\t\t\t\t/haiku/        { print \"HAIKU\";   exit}\n\t\t\t\t\t/sunos/        { print \"SUNOS\";   exit}\n\t\t\t\t\t/solaris/      { print \"SUNOS\";   exit}\n\t\t\t\t\t/cygwin/       { print \"CYGWIN\";  exit}\n\t\t\t\t\t/mingw/        { print \"MINGW\";   exit}\n\t\t\t\t\t/os2/          { print \"OS2\";     exit}\n\t\t\t\t\t/dos/          { print \"DOS\";     exit}\n\t\t\t\t\t/wince/        { print \"WINCE\";   exit}\n\t\t'`\n\n\t\tif [ -z \"$os\" ]; then\n\t\t\tos=`LC_ALL=C uname | tr '[A-Z]' '[a-z]' | $awk '\n\t\t\t\t\t/linux/        { print \"UNIX\";    exit}\n\t\t\t\t\t/darwin/       { print \"OSX\";     exit}\n\t\t\t\t\t/freebsd/      { print \"FREEBSD\"; exit}\n\t\t\t\t\t/openbsd/      { print \"OPENBSD\"; exit}\n\t\t\t\t\t/netbsd/       { print \"NETBSD\";  exit}\n\t\t\t\t\t/hp-ux/        { print \"HPUX\";    exit}\n\t\t\t\t\t/morphos/      { print \"MORPHOS\"; exit}\n\t\t\t\t\t/beos/         { print \"BEOS\";    exit}\n\t\t\t\t\t/haiku/        { print \"HAIKU\";   exit}\n\t\t\t\t\t/sunos/        { print \"SUNOS\";   exit}\n\t\t\t\t\t/cygwin/       { print \"CYGWIN\";  exit}\n\t\t\t\t\t/mingw/        { print \"MINGW\";   exit}\n\t\t\t\t\t/os\\/2/        { print \"OS2\";     exit}\n\t\t\t\t\t/gnu/          { print \"UNIX\";    exit}\n\t\t\t'`\n\t\tfi\n\n\t\tif [ -z \"$os\" ]; then\n\t\t\tlog 1 \"detecting OS... none detected\"\n\t\t\tlog 1 \"I couldn't detect your OS. Please use --os=OS to force one\"\n\t\t\tlog 1 \"Allowed values are: UNIX, OSX, FREEBSD, OPENBSD, NETBSD, MORPHOS, HPUX, BEOS, HAIKU, SUNOS, CYGWIN, MINGW, OS2, DOS, and WINCE\"\n\t\t\texit 1\n\t\tfi\n\n\t\tlog 1 \"detecting OS... $os\"\n\telse\n\t\tlog 1 \"forcing OS... $os\"\n\tfi\n}\n\ndetect_sdl() {\n\t# 0 means no, 1 is auto-detect, 2 is force\n\tif [ \"$with_sdl\" = \"0\" ]; then\n\t\tlog 1 \"checking SDL... disabled\"\n\n\t\tsdl_config=\"\"\n\t\treturn 0\n\tfi\n\n\tif [ \"$with_sdl\" = \"1\" ] || [ \"$with_sdl\" = \"\" ] || [ \"$with_sdl\" = \"2\" ]; then\n\t\tsdl_config=\"sdl-config\"\n\telse\n\t\tsdl_config=\"$with_sdl\"\n\tfi\n\n\tversion=`$sdl_config --version 2>/dev/null`\n\tret=$?\n\tlog 2 \"executing $sdl_config --version\"\n\tlog 2 \"  returned $version\"\n\tlog 2 \"  exit code $ret\"\n\n\tif [ -z \"$version\" ] || [ \"$ret\" != \"0\" ]; then\n\t\tlog 1 \"checking SDL... not found\"\n\n\t\t# It was forced, so it should be found.\n\t\tif [ \"$with_sdl\" != \"1\" ]; then\n\t\t\tlog 1 \"configure: error: sdl-config couldn't be found\"\n\t\t\tlog 1 \"configure: error: you supplied '$with_sdl', but it seems invalid\"\n\t\t\texit 1\n\t\tfi\n\n\t\tsdl_config=\"\"\n\t\treturn 0\n\tfi\n\n\tlog 1 \"checking SDL... found version $version\"\n\n\tif version=`pkg-config SDL_image --modversion 2>/dev/null`; then\n\t\tlog 1 \"checking SDL_image... found version $version\"\n\t\twith_sdlimage=\"1\"\n\telse\n\t\tlog 1 \"checking SDL_image... not found\"\n\t\twith_sdlimage=\"0\"\n\tfi\n}\n\ndetect_sdl2() {\n\t# 0 means no, 1 is auto-detect, 2 is force\n\tif [ \"$with_sdl2\" = \"0\" ]; then\n\t\tlog 1 \"checking SDL2... disabled\"\n\n\t\tsdl2_config=\"\"\n\t\treturn 0\n\tfi\n\n\tif [ \"$with_sdl2\" = \"1\" ] || [ \"$with_sdl2\" = \"\" ] || [ \"$with_sdl2\" = \"2\" ]; then\n\t\tsdl2_config=\"sdl2-config\"\n\telse\n\t\tsdl2_config=\"$with_sdl2\"\n\tfi\n\n\tversion=`$sdl2_config --version 2>/dev/null`\n\tret=$?\n\tlog 2 \"executing $sdl2_config --version\"\n\tlog 2 \"  returned $version\"\n\tlog 2 \"  exit code $ret\"\n\n\tif [ -z \"$version\" ] || [ \"$ret\" != \"0\" ]; then\n\t\tlog 1 \"checking SDL2... not found\"\n\n\t\t# It was forced, so it should be found.\n\t\tif [ \"$with_sdl2\" != \"1\" ]; then\n\t\t\tlog 1 \"configure: error: sdl2-config couldn't be found\"\n\t\t\tlog 1 \"configure: error: you supplied '$with_sdl2', but it seems invalid\"\n\t\t\texit 1\n\t\tfi\n\n\t\tsdl2_config=\"\"\n\t\treturn 0\n\tfi\n\n\tlog 1 \"checking SDL2... found version $version\"\n\t# SDL2 found, disabling SDL\n\tif [ \"$with_sdl\" = \"1\" ] ; then\n\t\twith_sdl=\"0\"\n\tfi\n\n\tif version=`pkg-config SDL2_image --modversion 2>/dev/null`; then\n\t\tlog 1 \"checking SDL2_image... found version $version\"\n\t\twith_sdl2image=\"1\"\n\telse\n\t\tlog 1 \"checking SDL2_image... not found\"\n\t\twith_sdl2image=\"0\"\n\tfi\n}\n\ndetect_osx_sdk() {\n\t# Try to find the best SDK available. For a normal build this\n\t# is currently the 10.5 SDK as this is needed to compile all\n\t# optional code. Because such an executable won't run on 10.4\n\t# or lower, also check for the 10.4u SDK when doing an universal\n\t# build.\n\n\t# Check for the 10.5 SDK, but try 10.6 if that fails\n\tcheck_osx_sdk \"10.5\" ||\tcheck_osx_sdk \"10.6\" || osx_sdk_path=\"\"\n\n\tif [ -z \"$osx_sdk_path\" ] || [ \"$enable_universal\" != \"0\" ]; then\n\t\t# No better SDK or universal build enabled? Check 10.4u SDK as well\n\t\tlocal old_sdk=\"$osx_sdk_path\"\n\t\tif check_osx_sdk \"10.4u\"; then\n\t\t\tosx_sdk_104_path=\"$osx_sdk_path\"\n\t\telse\n\t\t\tosx_sdk_104_path=\"\"\n\t\tfi\n\t\tif [ -z \"$old_sdk\" ]; then\n\t\t\tosx_sdk_path=\"$osx_sdk_104_path\"\n\t\telse\n\t\t\tosx_sdk_path=\"$old_sdk\"\n\t\tfi\n\tfi\n\n\tif [ -z \"$osx_sdk_path\" ]; then\n\t\tlog 1 \"Your system SDK is probably too old\"\n\t\tlog 1 \"Please install/upgrade your Xcode to >= 2.5\"\n\n\t\texit 1\n\tfi\n}\n\ndetect_library() {\n\t# $1 - config-param ($with_zlib value)\n\t# $2 - library name ('zlib', sets $zlib)\n\t# $3 - static library name (libz.a)\n\t# $4 - header directory ()\n\t# $5 - header name (zlib.h)\n\t# $6 - force static (if non-empty)\n\n\tif [ -n \"$6\" ]; then force_static=\"1\"; fi\n\n\t# 0 means no, 1 is auto-detect, 2 is force\n\tif [ \"$1\" = \"0\" ]; then\n\t\tlog 1 \"checking $2... disabled\"\n\n\t\teval \"$2=\\\"\\\"\"\n\t\treturn 0\n\tfi\n\n\tlog 2 \"detecting $2\"\n\n\tif [ \"$1\" = \"1\" ] || [ \"$1\" = \"\" ] || [ \"$1\" = \"2\" ]; then\n\t\teval \"$2=`ls -1 /usr/include/$4*.h 2>/dev/null | egrep \\\"\\/$5\\$\\\"`\"\n\t\teval \"res=\\$$2\"\n\t\tif [ -z \"$res\" ]; then\n\t\t\tlog 2 \"  trying /usr/include/$4$5... no\"\n\t\t\teval \"$2=`ls -1 /usr/local/include/$4*.h 2>/dev/null | egrep \\\"\\/$5\\$\\\"`\"\n\t\tfi\n\t\teval \"res=\\$$2\"\n\t\tif [ -z \"$res\" ]; then\n\t\t\tlog 2 \"  trying /usr/local/include/$4$5... no\"\n\t\t\teval \"$2=`ls -1 /mingw/include/$4*.h 2>/dev/null | egrep \\\"\\/$5\\$\\\"`\"\n\t\tfi\n\t\teval \"res=\\$$2\"\n\t\tif [ -z \"$res\" ]; then\n\t\t\tlog 2 \"  trying /mingw/include/$4$5... no\"\n\t\t\teval \"$2=`ls -1 /opt/local/include/$4*.h 2>/dev/null | egrep \\\"\\/$5\\$\\\"`\"\n\t\tfi\n\t\teval \"res=\\$$2\"\n\t\tif [ -z \"$res\" ]; then\n\t\t\tlog 2 \"  trying /opt/local/include/$4$5... no\"\n\t\tfi\n\t\tif [ -z \"$res\" ] && [ \"$os\" = \"NETBSD\" ]; then\n\t\t\teval \"$2=`ls -1 /usr/pkg/include/$4*.h 2>/dev/null | egrep \\\"\\/$5\\$\\\"`\"\n\t\t\teval \"res=\\$$2\"\n\t\t\tif [ -z \"$res\" ]; then\n\t\t\t\tlog 2 \"  trying /usr/pkg/include/$4$5... no\"\n\t\t\tfi\n\t\tfi\n\t\tif [ -z \"$res\" ] && [ \"$os\" = \"HAIKU\" ]; then\n\t\t\teval \"$2=`ls -1 /boot/common/include/$4*.h 2>/dev/null | egrep \\\"\\/$5\\$\\\"`\"\n\t\t\teval \"res=\\$$2\"\n\t\t\tif [ -z \"$res\" ]; then\n\t\t\t\tlog 2 \"  trying /boot/common/include/$4$5... no\"\n\t\t\tfi\n\t\tfi\n\n\t\teval \"res=\\$$2\"\n\t\tif [ -n \"$res\" ] && ( [ -n \"$force_static\" ] || ( [ \"$enable_static\" != \"0\" ] && [ \"$os\" != \"OSX\" ] ) ); then\n\t\t\teval \"res=\\$$2\"\n\t\t\tlog 2 \"  trying $res... found\"\n\t\t\t# Now find the static lib, if needed\n\t\t\teval \"$2=`ls /lib/*.a 2>/dev/null | egrep \\\"\\/$3\\$\\\"`\"\n\t\t\teval \"res=\\$$2\"\n\t\t\tif [ -z \"$res\" ]; then\n\t\t\t\tlog 2 \"  trying /lib/$3... no\"\n\t\t\t\teval \"$2=`ls /usr/lib/*.a 2>/dev/null | egrep \\\"\\/$3\\$\\\"`\"\n\t\t\tfi\n\t\t\teval \"res=\\$$2\"\n\t\t\tif [ -z \"$res\" ]; then\n\t\t\t\tlog 2 \"  trying /usr/lib/$3... no\"\n\t\t\t\teval \"$2=`ls /usr/local/lib/*.a 2>/dev/null | egrep \\\"\\/$3\\$\\\"`\"\n\t\t\tfi\n\t\t\teval \"res=\\$$2\"\n\t\t\tif [ -z \"$res\" ]; then\n\t\t\t\tlog 2 \"  trying /usr/local/lib/$3... no\"\n\t\t\t\teval \"$2=`ls /mingw/lib/*.a 2>/dev/null | egrep \\\"\\/$3\\$\\\"`\"\n\t\t\tfi\n\t\t\teval \"res=\\$$2\"\n\t\t\tif [ -z \"$res\" ]; then\n\t\t\t\tlog 2 \"  trying /mingw/lib/$3... no\"\n\t\t\t\tlog 1 \"configure: error: $2 couldn't be found\"\n\t\t\t\tlog 1 \"configure: error: you requested a static link, but I can't find $3\"\n\n\t\t\t\texit 1\n\t\t\tfi\n\t\tfi\n\telse\n\t\t# Make sure it exists\n\t\tif [ -f \"$1\" ]; then\n\t\t\teval \"$2=`ls $1 2>/dev/null`\"\n\t\telse\n\t\t\teval \"$2=`ls $1/$3 2>/dev/null`\"\n\t\tfi\n\tfi\n\n\teval \"res=\\$$2\"\n\tif [ -z \"$res\" ]; then\n\t\tlog 1 \"checking $2... not found\"\n\t\tif [ \"$1\" = \"2\" ]; then\n\t\t\tlog 1 \"configure: error: $2 couldn't be found\"\n\n\t\t\texit 1\n\t\telif [ \"$1\" != \"1\" ]; then\n\t\t\tlog 1 \"configure: error: $2 couldn't be found\"\n\t\t\tlog 1 \"configure: error: you supplied '$1', but it seems invalid\"\n\n\t\t\texit 1\n\t\tfi\n\n\t\teval \"with_$2=0\"\n\n\t\treturn 0\n\tfi\n\n\teval \"res=\\$$2\"\n\tlog 2 \"  trying $res... found\"\n\n\tlog 1 \"checking $2... found\"\n}\n\ndetect_asound() {\n\tdetect_library \"$with_asound\" \"asound\" \"libasound.a\" \"alsa/\" \"asoundlib.h\"\n}\n\ndetect_oss() {\n\tdetect_library \"$with_oss\" \"oss\" \"\" \"sys/\" \"soundcard.h\"\n}\n\ndetect_pulseaudio() {\n\tdetect_library \"$with_pulse\" \"pulse\" \"libpulse.a\" \"pulse/\" \"pulseaudio.h\"\n}\n\ndetect_kai() {\n\tdetect_library \"$with_kai\" \"kai\" \"\" \"\" \"kai.h\"\n}\n\ndetect_munt() {\n\tif [ \"$os\" = \"OS2\" ]; then\n\t\tMT32EMU_LIB=mt32emu.a\n\telse\n\t\tMT32EMU_LIB=libmt32emu.a\n\tfi\n\tdetect_library \"$with_munt\" \"munt\" \"$MT32EMU_LIB\" \"mt32emu/\" \"mt32emu.h\"\n}\n\n_detect_sort() {\n\tsort_test_in=\"d\na\nc\nb\"\n\n\tsort_test_out=\"a\nb\nc\nd\"\n\n\tlog 2 \"running echo <array> | $1\"\n\n\tif [ \"`echo \\\"$sort_test_in\\\" | $1 2>/dev/null`\" = \"$sort_test_out\" ]; then\n\t\tsort=\"$1\"\n\t\tlog 2 \"  result was valid\"\n\telse\n\t\tlog 2 \"  result was invalid\"\n\tfi\n}\n\ndetect_sort() {\n\tif [ \"$with_sort\" = \"0\" ]; then\n\t\tlog 1 \"checking sort... disabled\"\n\n\t\treturn\n\tfi\n\n\tif [ \"$with_sort\" = \"1\" ] || [ \"$with_sort\" = \"2\" ]; then\n\t\t_detect_sort \"sort\"\n\t\tif [ -z \"$sort\" ]; then _detect_sort \"/sbin/sort\"; fi\n\t\tif [ -z \"$sort\" ]; then _detect_sort \"/usr/sbin/sort\"; fi\n\t\tif [ -z \"$sort\" ]; then _detect_sort \"/usr/local/sbin/sort\"; fi\n\t\tif [ -z \"$sort\" ]; then _detect_sort \"/bin/sort\"; fi\n\t\tif [ -z \"$sort\" ]; then _detect_sort \"/usr/bin/sort\"; fi\n\t\tif [ -z \"$sort\" ]; then _detect_sort \"/usr/local/bin/sort\"; fi\n\telse\n\t\t_detect_sort \"$with_sort\"\n\tfi\n\n\tif [ -z \"$sort\" ]; then\n\t\tif [ \"$with_sort\" = \"2\" ]; then\n\t\t\tlog 1 \"checking sort... not found\"\n\n\t\t\tlog 1 \"configure: error: couldn't detect sort on your system\"\n\t\t\texit 1\n\t\telif [ \"$with_sort\" != \"1\" ]; then\n\t\t\tlog 1 \"checking sort... $with_sort not found\"\n\n\t\t\tlog 1 \"configure: error: '$with_sort' doesn't look like a sort to me\"\n\t\t\tlog 1 \"configure: error: please verify its location and function and try again\"\n\n\t\t\texit 1\n\t\telse\n\t\t\tlog 1 \"checking sort... not found\"\n\t\tfi\n\telse\n\t\tlog 1 \"checking sort... $sort\"\n\tfi\n}\n\ndetect_cputype() {\n\tif [ -n \"$cpu_type\" ] && [ \"$cpu_type\" != \"DETECT\" ]; then\n\t\tlog 1 \"forcing cpu-type... $cpu_type bits\"\n\t\treturn;\n\tfi\n\techo \"#include <stdio.h>\" >> tmp.64bit.c\n\techo \"#include \\\"types.h\\\"\" >> tmp.64bit.c\n\techo \"assert_compile(sizeof(size_t) == 8);\" >> tmp.64bit.c\n\techo \"int main() { return 0; }\" >> tmp.64bit.c\n\texecute=\"$cc_host -Iinclude/ $CFLAGS tmp.64bit.c -o tmp.64bit -DTESTING 2>&1\"\n\tcpu_type=\"`eval $execute 2>/dev/null`\"\n\tret=$?\n\tlog 2 \"executing $execute\"\n\tlog 2 \"  returned $cpu_type\"\n\tlog 2 \"  exit code $ret\"\n\tif [ \"$ret\" = \"0\" ]; then cpu_type=\"64\"; else cpu_type=\"32\"; fi\n\tlog 1 \"detecting cpu-type... $cpu_type bits\"\n\trm -f tmp.64bit tmp.64bit.c\n}\n\nmake_sed() {\n\tT_CFLAGS=\"$CFLAGS\"\n\tT_LDFLAGS=\"$LDFLAGS\"\n\n\tSRC_OBJS_DIR=\"$BASE_SRC_OBJS_DIR/$OBJS_SUBDIR\"\n\n\t# All the data needed to compile a single target\n\t#  Make sure if you compile multiple targets to\n\t#  use multiple OBJS_DIR, because all in-between\n\t#  binaries are stored in there, and nowhere else.\n\tSRC_REPLACE=\"\n\t\ts@!!CC_HOST!!@$cc_host@g;\n\t\ts@!!CC_BUILD!!@$cc_build@g;\n\t\ts@!!AS_HOST!!@$as_host@g;\n\t\ts@!!STRIP!!@$strip $strip_arg@g;\n\t\ts@!!LIPO!!@$lipo@g;\n\t\ts@!!CFLAGS!!@$T_CFLAGS@g;\n\t\ts@!!CFLAGS_BUILD!!@$CFLAGS_BUILD@g;\n\t\ts@!!ASFLAGS!!@$asflags@g;\n\t\ts@!!LIBS!!@$LIBS@g;\n\t\ts@!!LDFLAGS!!@$T_LDFLAGS@g;\n\t\ts@!!LDFLAGS_BUILD!!@$LDFLAGS_BUILD@g;\n\t\ts@!!BIN_DIR!!@$BIN_DIR@g;\n\t\ts@!!ROOT_DIR!!@$ROOT_DIR@g;\n\t\ts@!!SOURCE_LIST!!@$SOURCE_LIST@g;\n\t\ts@!!SRC_OBJS_DIR!!@$SRC_OBJS_DIR@g;\n\t\ts@!!SRC_DIR!!@$SRC_DIR@g;\n\t\ts@!!OSXAPP!!@$OSXAPP@g;\n\t\ts@!!OPENDUNE!!@$OPENDUNE@g;\n\t\ts@!!BINARY_DIR!!@$prefix_dir/$binary_dir@g;\n\t\ts@!!DOC_DIR!!@$prefix_dir/$doc_dir@g;\n\t\ts@!!DATA_DIR!!@$prefix_dir/$data_dir@g;\n\t\ts@!!ICON_DIR!!@$prefix_dir/$icon_dir@g;\n\t\ts@!!INSTALL_DIR!!@$install_dir@g;\n\t\ts@!!BINARY_NAME!!@$binary_name@g;\n\t\ts@!!DEPEND!!@$DEPEND@g;\n\t\ts@!!STAGE!!@$STAGE@g;\n\t\ts@!!MAKEDEPEND!!@$makedepend@g;\n\t\ts@!!CFLAGS_MAKEDEP!!@$cflags_makedep@g;\n\t\ts@!!SORT!!@$sort@g;\n\t\ts@!!CONFIG_CACHE_COMPILER!!@config.cache.compiler@g;\n\t\ts@!!CONFIG_CACHE_LINKER!!@config.cache.linker@g;\n\t\ts@!!CONFIG_CACHE_SOURCE!!@config.cache.source@g;\n\t\ts@!!CONFIG_CACHE_VERSION!!@config.cache.version@g;\n\t\ts@!!CONFIG_CACHE_SOURCE_LIST!!@config.cache.source.list@g;\n\t\ts@!!CONFIG_CACHE_PWD!!@config.cache.pwd@g;\n\t\ts@!!OBJS_CXX!!@$OBJS_CXX@g;\n\t\ts@!!OBJS_C!!@$OBJS_C@g;\n\t\ts@!!OBJS_S!!@$OBJS_S@g;\n\t\ts@!!SRCS!!@$SRCS@g;\n\t\ts@!!OS!!@$os@g;\n\t\ts@!!CONFIGURE_FILES!!@$CONFIGURE_FILES@g;\n\t\ts@!!AWK!!@$awk@g;\n\t\ts@!!DISTCC!!@$distcc@g;\n\t\"\n\n\tif [ \"$icon_theme_dir\" != \"\" ]; then\n\t\tSRC_REPLACE=\"$SRC_REPLACE\n\t\t\ts@!!ICON_THEME_DIR!!@$prefix_dir/$icon_theme_dir@g;\n\t\t\"\n\telse\n\t\tSRC_REPLACE=\"$SRC_REPLACE\n\t\t\ts@!!ICON_THEME_DIR!!@@g;\n\t\t\"\n\tfi\n\n\tif [ \"$man_dir\" != \"\" ]; then\n\t\tSRC_REPLACE=\"$SRC_REPLACE\n\t\t\ts@!!MAN_DIR!!@$prefix_dir/$man_dir@g;\n\t\t\"\n\telse\n\t\tSRC_REPLACE=\"$SRC_REPLACE\n\t\t\ts@!!MAN_DIR!!@@g;\n\t\t\"\n\tfi\n\n\tif [ \"$menu_dir\" != \"\" ]; then\n\t\tSRC_REPLACE=\"$SRC_REPLACE\n\t\t\ts@!!MENU_DIR!!@$prefix_dir/$menu_dir@g;\n\t\t\"\n\telse\n\t\tSRC_REPLACE=\"$SRC_REPLACE\n\t\t\ts@!!MENU_DIR!!@@g;\n\t\t\"\n\tfi\n}\n\ngenerate_main() {\n\tSTAGE=\"[MAIN]\"\n\n\tmake_sed\n\n\t# Create the main Makefile\n\tlog 1 \"Generating Makefile...\"\n\techo \"# Auto-generated file from 'Makefile.in' -- DO NOT EDIT\" > Makefile\n\t< $ROOT_DIR/Makefile.in sed \"$SRC_REPLACE\" >> Makefile\n\tcp $ROOT_DIR/Makefile.bundle.in Makefile.bundle\n\techo \"# Auto-generated file -- DO NOT EDIT\" > Makefile.am\n\techo >> Makefile.am\n\t# Make the copy of the source-list, so we don't trigger an unwanted recompile\n\tcp $SOURCE_LIST config.cache.source.list\n\t# Add the current directory, so we don't trigger an unwanted recompile\n\techo \"`pwd`\" > config.cache.pwd\n\t# Make sure config.cache is OLDER then config.cache.source.list\n\ttouch config.cache\n\ttouch config.pwd\n}\n\ngenerate_src_normal() {\n\tSTAGE=$1\n\n\tmake_sed\n\n\t# Create the source file\n\tmkdir -p $SRC_OBJS_DIR\n\n\tlog 1 \"Generating $2/Makefile...\"\n\techo \"# Auto-generated file from 'Makefile.src.in' -- DO NOT EDIT\" > $SRC_OBJS_DIR/Makefile\n\t< $ROOT_DIR/Makefile.src.in sed \"$SRC_REPLACE\" >> $SRC_OBJS_DIR/Makefile\n\techo \"DIRS += $SRC_OBJS_DIR\" >> Makefile.am\n\techo \"SRC_DIRS += $SRC_OBJS_DIR\" >> Makefile.am\n}\n\ngenerate_src_osx() {\n\tcc_host_orig=\"$cc_host\"\n\tCFLAGS_orig=\"$CFLAGS\"\n\tLDFLAGS_orig=\"$LDFLAGS\"\n\n\tfor type in $enable_universal; do\n\n\t\tif [ -n \"$osx_sdk_104_path\" ]; then\n\t\t\t# Use 10.4 SDK for 32-bit targets\n\t\t\tCFLAGS=\"-isysroot $osx_sdk_104_path $CFLAGS_orig\"\n\t\t\tLDFLAGS=\"-Wl,-syslibroot,$osx_sdk_104_path $LDFLAGS_orig\"\n\t\tfi\n\n\t\t# We don't want to duplicate the x86_64 stuff for each target, so do it once here\n\t\tif [ \"$type\" = \"ppc64\" ] || [ \"$type\" = \"x86_64\" ]; then\n\t\t\t# 64 bits is always 10.5 or higher. Furthermore it has a non const ICONV\n\t\t\t# and they also removed support for QuickTime/QuickDraw\n\t\t\tif [ -n \"$osx_sdk_path\" ]; then\n\t\t\t\tCFLAGS=\"-isysroot $osx_sdk_path $CFLAGS_orig\"\n\t\t\t\tLDFLAGS=\"-Wl,-syslibroot,$osx_sdk_path $LDFLAGS_orig\"\n\t\t\tfi\n\t\tfi\n\n\t\tcase $type in\n\t\t\tppc)\n\t\t\t\tBASE_SRC_OBJS_DIR=\"$OBJS_DIR/ppc\"\n\t\t\t\tcc_host=\"$cc_host_orig -arch ppc -mmacosx-version-min=10.3\"\n\t\t\t\tgenerate_src_normal \"[ppc]\" \"objs/ppc\";;\n\t\t\tppc970)\n\t\t\t\tBASE_SRC_OBJS_DIR=\"$OBJS_DIR/ppc970\"\n\t\t\t\tcc_host=\"$cc_host_orig -arch ppc970 -mmacosx-version-min=10.3 -mcpu=G5 -mpowerpc64 -mtune=970 -mcpu=970 -mpowerpc-gpopt\"\n\t\t\t\tgenerate_src_normal \"[ppc970]\" \"objs/ppc970\";;\n\t\t\ti386)\n\t\t\t\tBASE_SRC_OBJS_DIR=\"$OBJS_DIR/i386\"\n\t\t\t\tcc_host=\"$cc_host_orig -arch i386 -mmacosx-version-min=10.4\"\n\t\t\t\tgenerate_src_normal \"[i386]\" \"objs/i386\";;\n\t\t\tppc64)\n\t\t\t\tBASE_SRC_OBJS_DIR=\"$OBJS_DIR/ppc64\"\n\t\t\t\tcc_host=\"$cc_host_orig -arch ppc64 -mmacosx-version-min=10.5\"\n\t\t\t\tgenerate_src_normal \"[ppc64]\" \"objs/ppc64\";;\n\t\t\tx86_64)\n\t\t\t\tBASE_SRC_OBJS_DIR=\"$OBJS_DIR/x86_64\"\n\t\t\t\tcc_host=\"$cc_host_orig -arch x86_64 -mmacosx-version-min=10.5\"\n\t\t\t\tgenerate_src_normal \"[x86_64]\" \"objs/x86_64\";;\n\t\t\t*) log 1 \"Unknown architecture requested for universal build: $type\";;\n\t\tesac\n\tdone\n}\n\ngenerate_src() {\n\tif [ \"$os\" = \"OSX\" ] && [ \"$enable_universal\" != \"0\" ]; then\n\t\tgenerate_src_osx\n\telse\n\t\tgenerate_src_normal \"[SRC]\" \"objs\"\n\tfi\n}\n\nshowhelp() {\n\techo \"'configure' configures OpenDUNE.\"\n\techo \"\"\n\techo \"Usage: $0 [OPTION]... [VAR=VALUE]...\"\n\techo \"\"\n\techo \"To assign environment variables (e.g., CC, CFLAGS...), specify them as\"\n\techo \"VAR=VALUE.  See below for descriptions of some of the useful variables.\"\n\techo \"\"\n\techo \"Defaults for the options are specified in brackets.\"\n\techo \"\"\n\techo \"Configuration:\"\n\techo \"  -h, --help                     display this help and exit\"\n\techo \"\"\n\techo \"System types:\"\n\techo \"  --build=BUILD                  configure for building on BUILD [guessed]\"\n\techo \"  --host=HOST                    cross-compile to build programs to run\"\n\techo \"                                 on HOST [BUILD]\"\n\techo \"  --strip=STRIP                  the strip to use [HOST-strip]\"\n\techo \"  --awk=AWK                      the awk to use in configure [awk]\"\n\techo \"  --lipo=LIPO                    the lipo to use (OSX ONLY) [HOST-lipo]\"\n\techo \"  --os=OS                        the OS we are compiling for [DETECT]\"\n\techo \"                                 DETECT/UNIX/OSX/FREEBSD/OPENBSD/NETBSD/\"\n\techo \"                                 MORPHOS/HPUX/BEOS/SUNOS/CYGWIN/MINGW/OS2/\"\n\techo \"                                 DOS/WINCE/HAIKU\"\n\techo \"\"\n\techo \"Paths:\"\n\techo \"  --prefix-dir=dir               specifies the prefix for all installed\"\n\techo \"                                 files [/usr/local]\"\n\techo \"  --binary-dir=dir               location of the binary. Will be prefixed\"\n\techo \"                                 with the prefix-dir [games]\"\n\techo \"  --data-dir=dir                 location of data files (.PAK files).\"\n\techo \"                                 Will be prefixed with the prefix-dir\"\n\techo \"                                 [share/games/opendune]\"\n\techo \"  --icon-dir=dir                 location of icon files.\"\n\techo \"                                 Will be prefixed with the prefix-dir\"\n\techo \"  --install-dir=dir              specifies the root to install to.\"\n\techo \"                                 Useful to install into jails [/]\"\n\techo \"  --binary-name                  the name used for the binary, icons,\"\n\techo \"                                 desktop file, etc. when installing [opendune]\"\n\techo \"\"\n\techo \"Features and packages:\"\n\techo \"  --enable-debug[=LVL]           enable debug-mode (LVL=[0123], 0 is release)\"\n\techo \"  --enable-profiling             enables profiling\"\n\techo \"  --enable-lto                   enables GCC's Link Time Optimization (LTO)/ICC's\"\n\techo \"                                 Interprocedural Optimization if available\"\n\techo \"  --enable-static                enable static compile (doesn't work for\"\n\techo \"                                 all HOSTs)\"\n\techo \"  --enable-universal[=ARCH]      enable universal builds (OSX ONLY). Allowed is any combination\"\n\techo \"                                 of architectures: i386 ppc ppc970 ppc64 x86_64\"\n\techo \"                                 Default architectures are: i386 ppc\"\n\techo \"  --disable-assert               disable asserts (continue on errors)\"\n\techo \"  --enable-strip                 enable any possible stripping\"\n\techo \"  --without-osx-sysroot          disable the automatic adding of sysroot \"\n\techo \"                                 (OSX ONLY)\"\n\techo \"  --with-sort=sort               define a non-default location for sort\"\n\techo \"  --with-sdl[=sdl-config]        enables SDL video driver support\"\n\techo \"  --with-sdl2[=sdl2-config]      enables SDL2 video driver support\"\n\techo \"  --with-asound[=libasound.a]    enables ALSA support\"\n\techo \"  --with-oss                     enables Open Sound System\"\n\techo \"  --with-munt                    enables MUNT support\"\n\techo \"  --with-pulse[=libpulse.a]      enables PulseAudio support\"\n\techo \"  --with-kai                     enables KAI support\"\n\techo \"  --with-fluid                   enables FluidSynth support\"\n\techo \"  --disable-builtin-depend       disable use of builtin deps finder\"\n\techo \"  --with-makedepend[=makedepend] enables makedepend support\"\n\techo \"  --with-ccache                  enables ccache support\"\n\techo \"  --with-distcc                  enables distcc support\"\n\techo \"\"\n\techo \"Some influential environment variables:\"\n\techo \"  CC                             C compiler command\"\n\techo \"  CFLAGS                         C compiler flags\"\n\techo \"  LDFLAGS                        linker flags, e.g. -L<lib dir> if you\"\n\techo \"                                 have libraries in a nonstandard\"\n\techo \"                                 directory <lib dir>\"\n\techo \"\"\n\techo \"Use these variables to override the choices made by 'configure' or to help\"\n\techo \"it to find libraries and programs with nonstandard names/locations.\"\n}\n"
        },
        {
          "name": "configure",
          "type": "blob",
          "size": 4.4423828125,
          "content": "#!/bin/sh\n\ncheck_path_characters() {\n\tif [ -n \"`echo $ROOT_DIR | grep '[^-_A-Za-z0-9\\/\\\\\\.:]'`\" ]; then\n\t\techo \"WARNING: The path contains a non-alphanumeric character that might cause\"\n\t\techo \"         failures in subsequent build stages. Any failures with the build\"\n\t\techo \"         will most likely be caused by this.\"\n\tfi\n}\n\nCONFIGURE_EXECUTABLE=\"$_\"\n# On *nix systems those two are equal when ./configure is done\nif [ \"$0\" != \"$CONFIGURE_EXECUTABLE\" ]; then\n\t# On some systems, when ./configure is triggered from 'make'\n\t#  the $_ is filled with 'make'. So if that is true, skip 'make'\n\t#  and use $0 (and hope that is correct ;))\n\tif [ -n \"`echo $CONFIGURE_EXECUTABLE | grep make`\" ]; then\n\t\tCONFIGURE_EXECUTABLE=\"$0\"\n\telse\n\t\tCONFIGURE_EXECUTABLE=\"$CONFIGURE_EXECUTABLE $0\"\n\tfi\nfi\n# Find out where configure is (in what dir)\nROOT_DIR=\"`dirname $0`\"\n# For MSYS/MinGW we want to know the FULL path. This as that path is generated\n# once you call an outside binary. Having the same path for the rest is needed\n# for dependency checking.\n# pwd -W returns said FULL path, but doesn't exist on others so fall back.\nROOT_DIR=\"`cd $ROOT_DIR && (pwd -W 2>/dev/null || pwd 2>/dev/null)`\"\n\ncheck_path_characters\n\n# Same here as for the ROOT_DIR above\nPWD=\"`pwd -W 2>/dev/null || pwd 2>/dev/null`\"\nPREFIX=\"$PWD/bin\"\n\n. $ROOT_DIR/config.lib\n\n# Set default dirs\nOBJS_DIR=\"$PWD/objs\"\nBASE_SRC_OBJS_DIR=\"$OBJS_DIR\"\nBIN_DIR=\"$PREFIX\"\nSRC_DIR=\"$ROOT_DIR/src\"\nTOOLS_DIR=\"$ROOT_DIR/tools\"\nSOURCE_LIST=\"$ROOT_DIR/source.list\"\n\nif [ \"$1\" = \"--reconfig\" ] || [ \"$1\" = \"--reconfigure\" ]; then\n\tif [ ! -f \"config.cache\" ]; then\n\t\techo \"can't reconfigure, because never configured before\"\n\t\texit 1\n\tfi\n\t# Make sure we don't lock config.cache\n\tcat config.cache | sed 's@\\\\ @\\\\\\\\ @g' > cache.tmp\n\tsh cache.tmp\n\tRET=$?\n\trm -f cache.tmp\n\texit $RET\nfi\n\nset_default\ndetect_params \"$@\"\ncheck_params\nsave_params\nmake_cflags_and_ldflags\n\nEXE=\"\"\nif [ \"$os\" = \"MINGW\" ] || [ \"$os\" = \"CYGWIN\" ] || [ \"$os\" = \"OS2\" ] || [ \"$os\" = \"DOS\" ] || [ \"$os\" = \"WINCE\" ]; then\n\tEXE=\".exe\"\nelif [ \"$os\" = \"TOS\" ]; then\n\tEXE=\".tos\"\nfi\n\nOPENDUNE=\"opendune$EXE\"\nDEPEND=\"depend$EXE\"\n\nif [ -z \"$sort\" ]; then\n\tPIPE_SORT=\"sed s@a@a@\"\nelse\n\tPIPE_SORT=\"$sort\"\nfi\n\n# Read the source.list and process it\nAWKCOMMAND='\n\t{  }\n\t/^(\t*)#end/  { if (deep == skip) { skip -= 1; } deep -= 1; next; }\n\t/^(\t*)#else/ { if (deep == skip) { skip -= 1; } else if (deep - 1 == skip) { skip += 1; } next; }\n\t/^(\t*)#if/   {\n\t\tgsub(\"\t\", \"\", $0);\n\t\tgsub(\"^#if \", \"\", $0);\n\n\t\tif (deep != skip) { deep += 1; next; }\n\n\t\tdeep += 1;\n\n\t\tif ($0 == \"SDL2\"        && \"'$sdl2_config'\" == \"\")         { next; }\n\t\tif ($0 == \"SDL\"         && \"'$sdl_config'\" == \"\")          { next; }\n\t\tif ($0 == \"ALSA\"        && \"'$with_asound'\" == \"0\")        { next; }\n\t\tif ($0 == \"OSS\"         && \"'$with_oss'\" == \"0\")           { next; }\n\t\tif ($0 == \"MUNT\"        && \"'$with_munt'\" == \"0\")          { next; }\n\t\tif ($0 == \"PULSE\"       && \"'$with_pulse'\" == \"0\")         { next; }\n\t\tif ($0 == \"KAI\"         && \"'$with_kai'\" == \"0\")           { next; }\n\t\tif ($0 == \"FLUID\"       && \"'$with_fluid'\" == \"0\")         { next; }\n\t\tif ($0 == \"OSX\"         && \"'$os'\" != \"OSX\")               { next; }\n\t\tif ($0 == \"TOS\"         && \"'$os'\" != \"TOS\")               { next; }\n\t\tif ($0 == \"DOS\"         && \"'$os'\" != \"DOS\")               { next; }\n\t\tif ($0 == \"HAIKU\"       && \"'$os'\" != \"HAIKU\")             { next; }\n\t\tif ($0 == \"WIN32\"       && \"'$os'\" != \"MINGW\" &&\n\t\t                 \"'$os'\" != \"CYGWIN\" && \"'$os'\" != \"MSVC\") { next; }\n\n\t\tskip += 1;\n\n\t\tnext;\n\t}\n\t/^(\t*)#/ { next }\n\t/^$/ { next }\n\t/\\.h$/ { next }\n\t/\\.hpp$/ { next }\n\t{\n\t\tif (deep == skip) {\n\t\t\tgsub(\"\t\", \"\", $0);\n\t\t\tprint $0;\n\t\t}\n\t}\n'\n\n# Read the source.list and process it\n# Please escape ALL \" within ` because e.g. \"\" terminates the string in some sh implementations\nSRCS=\"`< $ROOT_DIR/source.list tr '\\r' '\\n' | $awk \\\"$AWKCOMMAND\\\" | $PIPE_SORT`\"\n\nOBJS_C=\"`  echo \\\"$SRCS\\\" | $awk ' { ORS = \\\" \\\" } /\\.c$/   { gsub(\\\".c$\\\",   \\\".o\\\", $0); print $0; }'`\"\nOBJS_CXX=\"`  echo \\\"$SRCS\\\" | $awk ' { ORS = \\\" \\\" } /\\.cpp$/   { gsub(\\\".cpp$\\\",   \\\".o\\\", $0); print $0; }'`\"\nOBJS_S=\"`  echo \\\"$SRCS\\\" | $awk ' { ORS = \\\" \\\" } /\\.s$/   { gsub(\\\".s$\\\",   \\\".o\\\", $0); print $0; }'`\"\nSRCS=\"`    echo \\\"$SRCS\\\" | $awk ' { ORS = \\\" \\\" } { print $0; }'`\"\n\n# In makefiles, we always use -u for sort\nif [ -z \"$sort\" ]; then\n\tsort=\"sed s@a@a@\"\nelse\n\tsort=\"$sort -u\"\nfi\n\nCONFIGURE_FILES=\"$ROOT_DIR/configure $ROOT_DIR/config.lib $ROOT_DIR/Makefile.in\"\n\ngenerate_main\ngenerate_src\n\ncheck_path_characters\n"
        },
        {
          "name": "enhancement.txt",
          "type": "blob",
          "size": 5.1728515625,
          "content": "Enhancement over Dune2\n======================\nWhen OpenDUNE is started in enhanced mode (default), a lot of bugs and\n problems which are in the original Dune2 version, are fixed.\n\nBelow is the complete listing of all those bugs and problems, per category.\n Every entry describes the problem, where the solution is in all cases\n obvious by the way the problem is described and therefore the solution is\n not mentioned as such.\n\n\nStructure\n---------\n- When building a Wall, the owner-bits are not cleared correctly, which in\n    theory could mean a Wall build by you could show up as owned by Sardaukar.\n- When building a structure completely on slabs, it still degrades. This seems\n    in contrast with the idea of slabs.\n- When building a structure, only the fog is removed (with a radius of 2) from\n    the first tile defined in the layout of the structure. This is mostly\n    noticable with Palace and Oil Refinery, leaving parts of them in the fog.\n- Windtraps that have less than 50% hp still produce 50% of the power, even so\n    the GUI tells you differently. Of course the GUI makes more sense in this\n    case.\n- Repair cost calculation is unfair. Dune2 uses a 256 float-resolution,\n    meaning that you get rounding errors very fast. In result, Palace costs\n    nothing to repair, and a windtrap costs 2 credits instead of 3 credits per\n    repair tick. In detail: ((2 * 256 / hitpoints) * credits + 128) / 256. The\n    first part causes rounding errors.\n- If one structure gives a script error, all structures after it in the linked\n    list are not handled. This doesn't really seem correct.\n- In Script function which finds the closest unit to target, it doesn't pick\n    the closest unit within range, but the one with the highest index within\n    range.\n- Too many tile colours are remapped with house colours, causing graphical\n    issues with the IX building. It maps 0x90 .. 0xA0 instead of 0x90 .. 0x96.\n- When taking over a building (by having an infantry walk in it while the\n    structure is on low hitpoints), your own units keep firing at it, and will\n    most likely destroy it.\n- When you attack the structure of the AI, the idea is that they massively\n    start to attack you (payback and stuff). To do this, Dune2 searches all\n    Units with type 0 (Carry-alls), instead of type 0xFFFF (all units).\n    WARNING: this glitch makes the game much easier in its original form.\n- A structure in production also counts towards your storable spice,\n    producing power, and/or requiring power. It does not check if the structure\n    is in fact placed on the map.\n- If a structure gets damaged during upgrading, pressing the \"Upgrading\" button\n    silently starts the repair of the structure, and doesn't cancel upgrading.\n- Fog is removed around the top left corner instead of the center of a\n    structure.\n- The range of a turret was calculated from the top left corner instead of the\n    center of the structure.\n- Fog was not removed from around captured structures.\n\n\nUnit\n----\n- Once a Unit enters a tile on which it starts to wobble, it will never stop\n    wobbling, even if it enters a tile where it shouldn't wobble.\n- When a Unit enters a Structure, the last tile the Unit was on becomes\n    selected rather than the entire Structure.\n- Deviated units always belong to Ordos, no matter who did the deviating.\n- Saboteurs tend to forget their goal, depending on terrain and game speed:\n    to blow up on reaching their destination.\n\n\nScenario\n--------\n- A mistake in reading the '+' causes repeat for reinforcements to be always\n    false. In result reinforcement is only send once.\n- The structure '% hitpoints' is ignored. In result all structures always\n    have 100% hitpoints.\n\n\nHouse\n-----\n- When you have a refinery and lost all your harvesters, you get a new one even\n    if you are currently building one in heavy vehicle factory.\n- Silo credit capping is done outside the main house loop, causing it to only\n    update the house which owns the latest structure. This allows you to go\n    over your silo capacity most of the time, and then losing it all of a\n    sudden (when you start building a structure).\n\n\nTeams\n-----\n- If a team gives a script error, all other teams are aborted.\n\n\nSaveLoad\n--------\n- The save routine allowed a NAME chunk up to 65536 bytes, where 255 bytes\n    should be sufficient for any sane name (both excluding the \\0).\n\n\nGeneral\n-------\n- The screen telling if you have the security question wrong/right is there\n    for such short time, you never really see it.\n- When loading a game, the fadein is barely visible because it is against the\n    screen how it will turn out, minus the selection of an active building.\n- After visiting Mentat (the help) window, auto-repeat of keys gets disabled.\n- Dune2 depends on slow CPUs to limit the rate mouse clicks are handled.\n\n\nMap\n---\n- When a unit moves over the top of a mound, you never get abandoned vehicles\n    nor hiding enemy units\n- When getting free Trikes on the map, you never got ownership of them. The\n    parameter order is switched, where the type of the unit becomes the number\n    of the house, and the house becomes the value of Trike (13). This also\n    means that these vehicles read/write outside the house struct, which in\n    terms results in random artifacts.\n\n"
        },
        {
          "name": "findversion.sh",
          "type": "blob",
          "size": 4.5595703125,
          "content": "#!/bin/sh\n\n# Arguments given? Show help text.\nif [ \"$#\" != \"0\" ]; then\n\tcat <<EOF\nUsage: ./findversion.sh\nFinds the current revision and if the code is modified.\n\nOutput: <REV>\\t<REV_NR>\\t<MODIFIED>\\t<CLEAN_REV>\nREV\n    a string describing what version of the code the current checkout is\n    based on. The exact format of this string depends on the version\n    control system in use, but it tries to identify the revision used as\n    close as possible (using the svn revision number or hg/git hash).\n    This also includes an indication of whether the checkout was\n    modified and which branch was checked out. This value is not\n    guaranteed to be sortable, but is mainly meant for identifying the\n    revision and user display.\n\n    If no revision identifier could be found, this is left empty.\nREV_NR\n    the revision number of the svn revision this checkout is based on.\n    This can be used to determine which functionality is present in this\n    checkout. For trunk svn checkouts and hg/git branches based upon it,\n    this number should be accurate. For svn branch checkouts, this\n    number is mostly meaningless, at least when comparing with the\n    REV_NR from other branches or trunk.\n\n    This number should be sortable. Within a given branch or trunk, a\n    higher number means a newer version. However, when using git or hg,\n    this number will not increase on new commits.\n\n    If no revision number could be found, this is left empty.\nMODIFIED\n    Whether (the src directory of) this checkout is modified or not. A\n    value of 0 means not modified, a value of 2 means it was modified.\n    Modification is determined in relation to the commit identified by\n    REV, so not in relation to the svn revision identified by REV_NR.\n\n    A value of 1 means that the modified status is unknown, because this\n    is not an svn/git/hg checkout for example.\n\nCLEAN_REV\n    the same as REV but without branch name\n\nBy setting the AWK environment variable, a caller can determine which\nversion of \"awk\" is used. If nothing is set, this script defaults to\n\"awk\".\nEOF\nexit 1;\nfi\n\n# Allow awk to be provided by the caller.\nif [ -z \"$AWK\" ]; then\n\tAWK=awk\nfi\n\n# Find out some dirs\ncd `dirname \"$0\"`\nROOT_DIR=`pwd`\n\n# Determine if we are using a modified version\n# Assume the dir is not modified\nMODIFIED=\"0\"\nif [ -d \"$ROOT_DIR/.svn\" ]; then\n\t# We are an svn checkout\n\tif [ -n \"`svnversion | grep 'M'`\" ]; then\n\t\tMODIFIED=\"2\"\n\tfi\n\t# Find the revision like: rXXXXM-branch\n\tBRANCH=`LC_ALL=C svn info | \"$AWK\" '/^URL:.*branches/ { split($2, a, \"/\"); for(i in a) if (a[i]==\"branches\") { print a[i+1]; break } }'`\n\tTAG=`LC_ALL=C svn info | \"$AWK\" '/^URL:.*tags/ { split($2, a, \"/\"); for(i in a) if (a[i]==\"tags\") { print a[i+1]; break } }'`\n\tREV_NR=`LC_ALL=C svn info | \"$AWK\" '/^Last Changed Rev:/ { print $4 }'`\n\tif [ -n \"$TAG\" ]; then\n\t\tREV=$TAG\n\telse\n\t\tREV=\"r$REV_NR\"\n\tfi\nelif [ -d \"$ROOT_DIR/.git\" ]; then\n\t# We are a git checkout\n\t# Refresh the index to make sure file stat info is in sync, then look for modifications\n\tgit update-index --refresh >/dev/null\n\tif [ -n \"`git diff-index HEAD`\" ]; then\n\t\tMODIFIED=\"2\"\n\tfi\n\tHASH=`LC_ALL=C git rev-parse --verify HEAD 2>/dev/null`\n\tREV=\"g`echo $HASH | cut -c1-8`\"\n\tBRANCH=\"`git symbolic-ref -q HEAD 2>/dev/null | sed 's@.*/@@;s@^master$@@'`\"\n\tREV_NR=`LC_ALL=C git log --pretty=format:%s --grep=\"^(svn r[0-9]*)\" -1 | sed \"s@.*(svn r\\([0-9]*\\)).*@\\1@\"`\n\tif [ -z \"$REV_NR\" ]; then\n\t\t# No rev? Maybe it is a custom git-svn clone\n\t\tREV_NR=`LC_ALL=C git log --pretty=format:%b --grep=\"git-svn-id:.*@[0-9]*\" -1 | sed \"s@.*\\@\\([0-9]*\\).*@\\1@\"`\n\tfi\n\tTAG=\"`git name-rev --name-only --tags --no-undefined HEAD 2>/dev/null | sed 's@\\^0$@@'`\"\n\tif [ -n \"$TAG\" ]; then\n\t\tBRANCH=\"\"\n\t\tREV=\"$TAG\"\n\tfi\nelif [ -d \"$ROOT_DIR/.hg\" ]; then\n\t# We are a hg checkout\n\tif [ -n \"`hg status | grep -v '^?'`\" ]; then\n\t\tMODIFIED=\"2\"\n\tfi\n\tHASH=`LC_ALL=C hg id -i | cut -c1-12`\n\tREV=\"h`echo $HASH | cut -c1-8`\"\n\tBRANCH=\"`hg branch | sed 's@^default$@@'`\"\n\tTAG=\"`hg id -t | grep -v 'tip$'`\"\n\tif [ -n \"$TAG\" ]; then\n\t\tBRANCH=\"\"\n\t\tREV=\"$TAG\"\n\tfi\n\tREV_NR=`LC_ALL=C hg log -f -k \"(svn r\" -l 1 --template \"{desc|firstline}\\n\" | grep \"^(svn r[0-9]*)\" | sed \"s@.*(svn r\\([0-9]*\\)).*@\\1@\"`\n\tif [ -z \"$REV_NR\" ]; then\n\t\t# No rev? Maybe it is a custom hgsubversion clone\n\t\tREV_NR=`LC_ALL=C hg parent --template=\"{svnrev}\"`\n\tfi\nelif [ -f \"$ROOT_DIR/.ottdrev\" ]; then\n\t# We are an exported source bundle\n\tcat $ROOT_DIR/.ottdrev\n\texit\nelse\n\t# We don't know\n\tMODIFIED=\"1\"\n\tBRANCH=\"\"\n\tREV=\"\"\n\tREV_NR=\"\"\nfi\n\nif [ \"$MODIFIED\" -eq \"2\" ]; then\n\tREV=\"${REV}M\"\nfi\n\nCLEAN_REV=${REV}\n\nif [ -n \"$BRANCH\" ]; then\n\tREV=\"${REV}-$BRANCH\"\nfi\n\necho \"$REV\t$REV_NR\t$MODIFIED\t$CLEAN_REV\"\n"
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "os",
          "type": "tree",
          "content": null
        },
        {
          "name": "projects",
          "type": "tree",
          "content": null
        },
        {
          "name": "source.list",
          "type": "blob",
          "size": 3.4990234375,
          "content": "# Source Files\nanimation.c\naudio/driver.c\n#if WIN32\naudio/dsp_win32.c\naudio/midi_win32.c\n#else\n#if TOS\naudio/dsp_atari.c\naudio/atari_dma_sound.s\naudio/midi_atari.c\n#else\n# DSP\n\t#if PULSE\n\t\taudio/dsp_pulse.c\n\t#else\n\t\t#if ALSA\n\t\t\taudio/dsp_alsa.c\n\t\t#else\n\t\t#if OSS\n\t\t\taudio/dsp_oss.c\n\t\t#else\n\t\t#if KAI\n\t\t\taudio/dsp_kai.c\n\t\t#else\n\t\t\t#if SDL\n\t\t\t\taudio/dsp_sdl.c\n\t\t\t#else\n\t\t\t\t#if SDL2\n\t\t\t\t\taudio/dsp_sdl.c\n\t\t\t\t#else\n\t\t\t\t\t#if OSX\n\t\t\t\t\taudio/dsp_osx.c\n\t\t\t\t\t#else\n\t\t\t\t\taudio/dsp_none.c\n\t\t\t\t\t#endif\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t#endif\n\t\t#endif\n\t\t#endif\n\t#endif\n# MIDI\n\t#if MUNT\n\t\taudio/midi_munt.c\n\t#else\n\t#if ALSA\n\t\taudio/midi_alsa.c\n\t#else\n\t\t#if OSX\n\t\t\taudio/midi_osx.c\n\t\t#else\n\t\t\t#if HAIKU\n\t\t\t\taudio/midi_haiku.cpp\n\t\t\t#else\n\t\t\t\t#if FLUID\n\t\t\t\t\taudio/midi_fluid.c\n\t\t\t\t#else\n\t\t\t\t\taudio/midi_none.c\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t#endif\n\t#endif\n\t#endif\n#endif\n#endif\naudio/mt32mpu.c\naudio/sound.c\ncodec/format40.c\ncodec/format80.c\nconfig.c\ncrashlog/crashlog.c\n#if WIN32\ncrashlog/crashlog_win32.c\n#else\ncrashlog/crashlog_none.c\n#endif\ncutscene.c\nexplosion.c\nfile.c\ngfx.c\ngui/editbox.c\ngui/font.c\ngui/gui.c\ngui/mentat.c\ngui/security.c\ngui/viewport.c\ngui/widget.c\ngui/widget_click.c\ngui/widget_draw.c\nhouse.c\nini.c\ninifile.c\ninput/input.c\ninput/mouse.c\n#if TOS\ninput/atari_ikbd.s\n#endif\nload.c\nmap.c\nobject.c\nopendune.c\nos/endian.c\n#if WIN32\n\tos/error_win32.c\n\tos/thread_win32.c\n\tos/readdir_win32.c\n#else\n\t#if OSX\n\t\tos/error_osx.c\n\t#else\n\t\t#if HAIKU\n\t\t\tos/error_haiku.cpp\n\t\t#else\n\t\t\tos/error.c\n\t\t#endif\n\t#endif\n\t#if TOS\n\t\tos/readdir_atari.c\n\t#else\n\t\tos/readdir.c\n\t#endif\n#endif\npool/house.c\npool/structure.c\npool/team.c\npool/unit.c\nrev.c\nsave.c\nsaveload/house.c\nsaveload/info.c\nsaveload/map.c\nsaveload/object.c\nsaveload/saveload.c\nsaveload/scenario.c\nsaveload/scriptengine.c\nsaveload/structure.c\nsaveload/team.c\nsaveload/unit.c\nscenario.c\nscript/general.c\nscript/script.c\nscript/structure.c\nscript/team.c\nscript/unit.c\nsprites.c\nstring.c\nstructure.c\ntable/actioninfo.c\ntable/animation.c\ntable/explosion.c\ntable/houseanimation.c\ntable/houseinfo.c\ntable/landscapeinfo.c\ntable/movementtype.c\ntable/selectiontype.c\ntable/sound.c\ntable/structureinfo.c\ntable/teamaction.c\ntable/tilediff.c\ntable/unitinfo.c\ntable/widget.c\ntable/widgetinfo.c\ntable/windowdesc.c\nteam.c\ntile.c\ntimer.c\ntools.c\nunit.c\n#if WIN32\n\t#if SDL\n\t\tvideo/video_sdl.c\n\t#else\n\t\t#if SDL2\n\t\t\tvideo/video_sdl2.c\n\t\t#else\n\t\t\tvideo/video_win32.c\n\t\t#endif\n\t#endif\n#else\n\t#if SDL2\n\t\tvideo/video_sdl2.c\n\t#else\n\t\t#if SDL\n\t\t\tvideo/video_sdl.c\n\t\t#else\n\t\t\t#if TOS\n\t\t\t\tvideo/video_atari.c\n\t\t\t#endif\n\t\t\t#if DOS\n\t\t\t\tvideo/video_dos.c\n\t\t\t#endif\n\t\t\t#if OSX\n\t\t\t\tvideo/video_osxppc.c\n\t\t\t#endif\n\t\t#endif\n\t#endif\n#endif\nvideo/video_fps.c\n#if TOS\nvideo/c2p1x1_8.s\n#else\nvideo/hqx_init.c\nvideo/hq2x_8b.c\nvideo/hq3x_8b.c\nvideo/hq4x_8b.c\nvideo/scalebit.c\nvideo/scale2x.c\nvideo/scale3x.c\n#endif\nwsa.c\n\n# Header files\nanimation.h\naudio/driver.h\naudio/dsp.h\naudio/midi.h\naudio/mt32mpu.h\naudio/sound.h\ncodec/format40.h\ncodec/format80.h\nconfig.h\ncrashlog/crashlog.h\ncutscene.h\nexplosion.h\nfile.h\ngfx.h\ngui/font.h\ngui/gui.h\ngui/mentat.h\ngui/security.h\ngui/widget.h\nhouse.h\nini.h\ninifile.h\ninput/input.h\ninput/mouse.h\nload.h\nmap.h\nobject.h\nopendune.h\nos/common.h\nos/endian.h\nos/error.h\nos/file.h\nos/math.h\nos/sleep.h\nos/strings.h\nos/thread.h\nos/readdir.h\npool/house.h\npool/pool.h\npool/structure.h\npool/team.h\npool/unit.h\nrev.h\nsave.h\nsaveload/saveload.h\nscenario.h\nscript/script.h\nsprites.h\nstring.h\nstructure.h\ntable/strings.h\nteam.h\ntile.h\ntimer.h\ntools.h\nunit.h\nvideo/video.h\nvideo/video_fps.h\nvideo/hqx_common.h\nvideo/hqx.h\nvideo/scale2x.h\nvideo/scale3x.h\nvideo/scalebit.h\nwsa.h\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "valgrind.suppression",
          "type": "blob",
          "size": 0.9638671875,
          "content": "{\n   SDL Video Globals\n   Memcheck:Leak\n   ...\n   fun:SDL_VideoInit\n   fun:SDL_InitSubSystem\n   fun:SDL_Init\n   fun:Video_Init\n   ...\n}\n{\n   SDL Audio Globals\n   Memcheck:Leak\n   ...\n   fun:SDL_AudioInit\n   fun:SDL_InitSubSystem\n   fun:DSP_Init\n   ...\n}\n{\n   MIDI Audio globals\n   Memcheck:Leak\n   ...\n   fun:snd_seq_open\n   fun:midi_init\n   ...\n}\n{\n   DSP Audio\n   Memcheck:Overlap\n   fun:memcpy\n   fun:snd_pcm_area_copy\n   fun:snd_pcm_areas_copy\n   ...\n   fun:snd_pcm_mmap_writei\n   ...\n}\n{\n   DSP Audio globals\n   Memcheck:Leak\n   fun:malloc\n   ...\n   fun:DSP_Play\n   ...\n}\n{\n   DSP Audio gobals\n   Memcheck:Leak\n   fun:calloc\n   ...\n   fun:DSP_Play\n   ...\n}\n{\n   libdl\n   Memcheck:Leak\n   ...\n   fun:dlclose\n   ...\n}\n{\n   libdl\n   Memcheck:Cond\n   ...\n   fun:dl_main\n   ...\n}\n{\n   libdl\n   Memcheck:Leak\n   ...\n   fun:_dl_open\n   ...\n}\n{\n   libdl\n   Memcheck:Leak\n   ...\n   fun:__nss_database_lookup\n   ...\n}\n{\n   libdl\n   Memcheck:Leak\n   ...\n   fun:__nss_lookup_function\n   ...\n}\n\n"
        },
        {
          "name": "wccbuild.bat",
          "type": "blob",
          "size": 0.1064453125,
          "content": "@REM Build OpenDUNE for DOS using WATCOM C\n@MKDIR OBJS\n@COPY Makefile.wc OBJS\\MAKEFILE\n@CD OBJS\n@WMAKE\n@CD .."
        }
      ]
    }
  ]
}