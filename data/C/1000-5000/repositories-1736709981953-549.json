{
  "metadata": {
    "timestamp": 1736709981953,
    "page": 549,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "open-mpi/ompi",
      "stars": 2226,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".ci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 4.9638671875,
          "content": "# This file represents the coding style enforced by Open MPI. This file\n# is based on the long-held, but not enforced, guidelines from the\n# beginning of the project. We will be requiring that all code going\n# forward uses this style. To check your code before attempting to open\n# a PR install clang-format and run your commits through clang-format.\n#\n# To install clang-format:\n#\n# macOS:\n#   Homebrew: brew install clang-format\n#   Mac Ports: port install clang\n#\n# Linux:\n#   debian/ubuntu/rasbian: apt-get install clang-format\n#   redhat/fedora: yum install clang-format\n#\n# To run against your code changes:\n#\n#   unstaged changes: git clang-format --style file -f\n#   staged changes: git clang-format --style file\n#\n#   For interactive add the -p option.\n#\n# To run against all of Open MPI:\n#\n#   ./contrib/clang-format-ompi.sh\n#\n#   This command is intended to be run only once.\n---\nLanguage:        Cpp\n# BasedOnStyle:  LLVM\nAccessModifierOffset: -2\nAlignAfterOpenBracket: Align\nAlignConsecutiveMacros: true\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlines: Left\nAlignOperands: true\nAlignTrailingComments: true\nAllowAllArgumentsOnNextLine: false\nAllowAllConstructorInitializersOnNextLine: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: Never\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: None\nAllowShortLambdasOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: Never\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: MultiLine\nBinPackArguments: true\nBinPackParameters: true\nBraceWrapping:\n  AfterCaseLabel:  false\n  AfterClass:      false\n  AfterControlStatement: Never\n  AfterEnum:       false\n  AfterFunction:   true\n  AfterNamespace:  false\n  AfterObjCDeclaration: false\n  AfterStruct:     false\n  AfterUnion:      false\n  AfterExternBlock: false\n  BeforeCatch:     false\n  BeforeElse:      false\n  IndentBraces:    false\n  SplitEmptyFunction: true\n  SplitEmptyRecord: true\n  SplitEmptyNamespace: true\nBreakBeforeBinaryOperators: true\nBreakBeforeBraces: Custom\nBreakBeforeInheritanceComma: false\nBreakInheritanceList: BeforeColon\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nBreakConstructorInitializers: BeforeColon\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: true\nColumnLimit:     100\nCommentPragmas:  '^ IWYU pragma:'\nCompactNamespaces: false\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: true\nDeriveLineEnding: true\nDerivePointerAlignment: false\nDisableFormat:   false\nFixNamespaceComments: true\nForEachMacros:\n  - foreach\n  - Q_FOREACH\n  - BOOST_FOREACH\n  - BOOST_FOREACH\n  - OPAL_LIST_FOREACH\n  - OPAL_LIST_FOREACH_DECL\n  - OPAL_LIST_FOREACH_SAFE\n  - OPAL_LIST_FOREACH_REV\n  - OPAL_LIST_FOREACH_SAFE_REV\n  - OPAL_HASH_TABLE_FOREACH\n  - OPAL_HASH_TABLE_FOREACH_PTR\nIncludeBlocks:   Preserve\nIncludeCategories:\n  # Ensure config includes always come first (opal_config.h, ompi_config.h, etc)\n  - Regex:           '^\".*_config\\.h\"'\n    Priority:        -1\n  # In-tree includes come next (after main include)\n  - Regex:           '^\".*\"'\n    Priority:        2\n  # System includes come last\n  - Regex:           '^<.*>'\n    Priority:        3\nIncludeIsMainRegex: '(Test)?$'\nIncludeIsMainSourceRegex: ''\nIndentCaseLabels: false\nIndentGotoLabels: true\nIndentPPDirectives: AfterHash\nIndentWidth:     4\nIndentWrappedFunctionNames: false\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: true\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBinPackProtocolList: Auto\nObjCBlockIndentWidth: 4\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: true\nPenaltyBreakAssignment: 250\nPenaltyBreakBeforeFirstCallParameter: 301\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyBreakTemplateDeclaration: 10\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 60\nPointerAlignment: Right\nReflowComments:  true\nSortIncludes:    true\nSortUsingDeclarations: true\nSpaceAfterCStyleCast: true\nSpaceAfterLogicalNot: false\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCpp11BracedList: false\nSpaceBeforeCtorInitializerColon: true\nSpaceBeforeInheritanceColon: true\nSpaceBeforeParens: ControlStatements\nSpaceBeforeRangeBasedForLoopColon: true\nSpaceInEmptyBlock: false\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles:  false\nSpacesInConditionalStatement: false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nSpaceBeforeSquareBrackets: false\nStandard:        Latest\nStatementMacros:\n  - Q_UNUSED\n  - QT_REQUIRE_VERSION\n  - BEGIN_C_DECLS\n  - END_C_DECLS\nTabWidth:        8\nUseCRLF:         false\nUseTab:          Never\n...\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 13.3330078125,
          "content": ".libs\n.deps\n.libs\n.dirstamp\n.DS_Store\n.cdt*\n.project\n.gdb*\n.idea\n\n*.la\n*.lo\n*.o\n*.so\n*.a\n*.dwarf\n*.dSYM\n*.S\n*.loT\n*.orig\n*.rej\n*.bak\n*.class\n*.xcscheme\n*.out\n*.plist\n*.orig\n*.obj\n*.mod\n*.i90\n*.ii\n*.ti\n*.exe\n*.log\n*.trs\n*.sapp\n*~\n*\\\\#\n\nMakefile\nMakefile.in\n\n# hwloc and pmix have been de-modularized, but still uses parts of the\n# MCA system due to the amount of glue code that ended up in the\n# framework base.  Until that is cleaned up, do not ignore the\n# hard-coded static-components.h file.\nstatic-components.h\n!opal/mca/hwloc/base/static-components.h\n!opal/mca/pmix/base/static-components.h\n\n*\\\\#\nconfig.cache\naclocal.m4\nautom4te.cache\nconfig.log\nconfig.status\nconfigure\nlibtool\ndoxygen\nbin\nlib\ncscope.*\netags\nGRTAGS\nGSYMS\nGTAGS\nGPATH\nvc70.pdb\n.hgrc\n.hgignore\n.hg\n.hgignore_local\nstamp-h?\nAUTHORS\n\nar-lib\nylwrap\nconfig.lt\nconfig.guess\nconfig.sub\ndepcomp\ncompile\ninstall-sh\nltmain.sh\nmissing\nmkinstalldirs\nlibtool.m4\nlt~obsolete.m4\nltdl.m4\nargz.m4\nltargz.m4\nltsugar.m4\nltversion.m4\nltoptions.m4\n\n# Libevent and hwloc are included as a tarball.  Ignore any expanded\n# tarballs, since they are not included in git.  Do not ignore the\n# tarballs themselves, and those are artifacts we will store in git.\n3rd-party/libevent-*\n!3rd-party/libevent-*.tar.*\n3rd-party/hwloc-*\n!3rd-party/hwloc-*.tar.*\n3rd-party/treematch/config.h\n\n3rd-party/romio341/adio/include/romioconf.h\n3rd-party/romio341/adio/include/romioconf.h.in\n3rd-party/romio341/include/mpio.h\n3rd-party/romio341/localdefs\n3rd-party/romio341/mpl/confdb/test-driver\n3rd-party/romio341/mpl/include/config.h\n3rd-party/romio341/mpl/include/config.h.in\n3rd-party/romio341/mpl/include/mplconfig.h\n3rd-party/romio341/mpl/include/mpl_timer.h\n3rd-party/romio341/mpl/localdefs\n3rd-party/romio341/test/runtests\n3rd-party/romio341/test/fcoll_test.f\n3rd-party/romio341/test/fmisc.f\n3rd-party/romio341/test/fperf.f\n3rd-party/romio341/test/large_file.c\n3rd-party/romio341/test/misc.c\n3rd-party/romio341/test/pfcoll_test.f\n3rd-party/romio341/util/romioinstall\n\nconfig/project_list.m4\nconfig/autogen_found_items.m4\nconfig/opal_get_version.sh\nconfig/test-driver\nconfig/mca_no_configure_components.m4\nconfig/mca_m4_config_include.m4\nconfig/ext_no_configure_components.m4\nconfig/ext_m4_config_include.m4\nconfig/auto-extracted-pmix-configure-args.m4\nconfig/auto-extracted-prrte-configure-args.m4\nconfig/auto-generated-ompi-exclude.ini\n\ncontrib/build-mca-comps-outside-of-tree/btl_tcp2_config.h\ncontrib/build-mca-comps-outside-of-tree/btl_tcp2_config.h.in\ncontrib/build-mca-comps-outside-of-tree/config\ncontrib/build-mca-comps-outside-of-tree/aclocal.m4\ncontrib/dist/linux/compile_debian_mlnx_example\ncontrib/dist/mofed/compile_debian_mlnx_example\ncontrib/dist/mofed/debian/changelog\ncontrib/dist/mofed/debian/control\ncontrib/dist/mofed/debian/copyright\ncontrib/dist/mofed/debian/rules\ncontrib/platform/intel/bend/*orcm*\ncontrib/scaling/orte_no_op\ncontrib/scaling/mpi_no_op\ncontrib/scaling/mpi_barrier\ncontrib/scaling/mpi_memprobe\n\nexamples/hello_c\nexamples/hello_cxx\nexamples/hello_mpifh\nexamples/hello_usempi\nexamples/hello_usempif08\nexamples/ring_c\nexamples/ring_cxx\nexamples/ring_mpifh\nexamples/ring_usempi\nexamples/ring_usempif08\nexamples/connectivity_c\nexamples/ring_oshmem\nexamples/hello_oshmem\nexamples/ring_oshmemfh\nexamples/hello_oshmemfh\nexamples/hello_oshmemcxx\nexamples/oshmem_circular_shift\nexamples/oshmem_max_reduction\nexamples/oshmem_shmalloc\nexamples/oshmem_strided_puts\nexamples/oshmem_symmetric_data\nexamples/spc_example\n\nompi/debuggers/*.in\nompi/debuggers/dlopen_test\nompi/debuggers/predefined_gap_test\nompi/debuggers/predefined_pad_test\n\nompi/include/mpi.h\nompi/include/mpif-config.h\nompi/include/mpif.h\nompi/include/mpif-c-constants-decl.h\nompi/include/mpif-c-constants.h\nompi/include/mpif-common.h\nompi/include/mpi-ext.h\nompi/include/mpif-ext.h\nompi/include/mpif-f08-types.h\nompi/include/mpif-handles.h\nompi/include/mpif-io-constants.h\nompi/include/mpif-constants.h\nompi/include/mpif-io-handles.h\nompi/include/mpif-sizeof.h\nompi/include/mpi_portable_platform.h\nompi/include/ompi/version.h\nompi/include/ompi/frameworks.h\n\nompi/mca/coll/basic/coll-basic-version.h*\nompi/mca/coll/demo/config\nompi/mca/coll/demo/coll_demo_config.h*\nompi/mca/coll/demo/coll-demo-version.h*\nompi/mca/coll/ml/coll_ml_lex.c\nompi/mca/coll/self/coll-self-version.h*\nompi/mca/coll/sm/coll-sm-version.h*\n\nompi/mca/osc/monitoring/osc_monitoring_template_gen.h\n\nompi/mca/pml/v/autogen.vprotocols\nompi/mca/pml/v/mca_vprotocol_config_output\n\nompi/mca/sharedfp/addproc/mca_sharedfp_addproc_control\n\nompi/mca/topo/treematch/config.h\n\nompi/mpi/c/profile/p*.c\n\nompi/mpi/fortran/configure-fortran-output.h\nompi/mpi/fortran/mpiext/mpi-ext-module.F90\nompi/mpi/fortran/mpiext/mpi-f08-ext-module.F90\nompi/mpi/fortran/mpiext-use-mpi/mpi-ext-module.F90\nompi/mpi/fortran/mpiext-use-mpi-f08/mpi-f08-ext-module.F90\n\nompi/mpi/fortran/mpif-h/sizeof_f.f90\nompi/mpi/fortran/mpif-h/profile/p*.c\nompi/mpi/fortran/mpif-h/profile/psizeof_f.f90\n\nompi/mpi/fortran/use-mpi/mpi-types.F90\n\nompi/mpi/fortran/use-mpi-f08/mod/mpi-f08-constants.h\nompi/mpi/fortran/use-mpi-f08/mod/mpi-f08-interfaces.h\nompi/mpi/fortran/use-mpi-f08/sizeof_f08.f90\nompi/mpi/fortran/use-mpi-f08/sizeof_f08.h\nompi/mpi/fortran/use-mpi-f08/profile/psizeof_f08.f90\nompi/mpi/fortran/use-mpi-f08/profile/*.F90\n\nompi/mpi/fortran/use-mpi-ignore-tkr/mpi-ignore-tkr-interfaces.h\nompi/mpi/fortran/use-mpi-ignore-tkr/mpi-ignore-tkr-file-interfaces.h\nompi/mpi/fortran/use-mpi-ignore-tkr/mpi-ignore-tkr-sizeof.f90\nompi/mpi/fortran/use-mpi-ignore-tkr/mpi-ignore-tkr-sizeof.h\nompi/mpi/fortran/use-mpi-ignore-tkr/mpi-ignore-tkr-removed-interfaces.h\n\nompi/mpi/fortran/use-mpi-tkr/fortran_kinds.sh\nompi/mpi/fortran/use-mpi-tkr/fortran_sizes.h\nompi/mpi/fortran/use-mpi-tkr/mpi_kinds.ompi_module\nompi/mpi/fortran/use-mpi-tkr/mpi-tkr-sizeof.f90\nompi/mpi/fortran/use-mpi-tkr/mpi-tkr-sizeof.h\n\nompi/mpi/java/java/mpi\nompi/mpi/java/java/*.jar\nompi/mpi/java/java/*.h\nompi/mpi/java/java/doc\n\nompi/mpi/tool/profile/*.c\n\nompi/mpiext/affinity/c/example\n\nompi/mpiext/ftmpi/c/profile/pcomm_agree.c\nompi/mpiext/ftmpi/c/profile/pcomm_failure_ack.c\nompi/mpiext/ftmpi/c/profile/pcomm_failure_get_acked.c\nompi/mpiext/ftmpi/c/profile/pcomm_iagree.c\nompi/mpiext/ftmpi/c/profile/pcomm_is_revoked.c\nompi/mpiext/ftmpi/c/profile/pcomm_revoke.c\nompi/mpiext/ftmpi/c/profile/pcomm_shrink.c\nompi/mpiext/ftmpi/c/profile/pcomm_ack_failed.c\nompi/mpiext/ftmpi/c/profile/pcomm_get_failed.c\nompi/mpiext/ftmpi/c/profile/pcomm_ishrink.c\n\nompi/mpiext/example/tests/progress_c\nompi/mpiext/example/tests/progress_mpifh\nompi/mpiext/example/tests/progress_usempi\nompi/mpiext/example/tests/progress_usempif08\n\nompi/mpiext/cuda/c/mpiext_cuda_c.h\nompi/mpiext/cuda/c/cuda_c.h\n\nompi/mpiext/rocm/c/mpiext_rocm_c.h\n\nompi/mpiext/shortfloat/c/mpiext_shortfloat_c.h\nompi/mpiext/shortfloat/mpif-h/mpiext_shortfloat_mpifh.h\nompi/mpiext/shortfloat/use-mpi-f08/mpiext_shortfloat_usempif08.h\n\nompi/tools/mpisync/mpisync\nompi/tools/mpisync/mpirun_prof\nompi/tools/mpisync/ompi_timing_post\nompi/tools/mpirun/mpirun\n\nompi/tools/ompi_info/ompi_info\n\nompi/tools/wrappers/mpic++-wrapper-data.txt\nompi/tools/wrappers/mpicc-wrapper-data.txt\nompi/tools/wrappers/mpifort-wrapper-data.txt\nompi/tools/wrappers/ompi_wrapper_script\nompi/tools/wrappers/ompi.pc\nompi/tools/wrappers/ompi-c.pc\nompi/tools/wrappers/ompi-cxx.pc\nompi/tools/wrappers/ompi-fort.pc\nompi/tools/wrappers/mpijavac.pl\nompi/tools/wrappers/mpicxx-wrapper-data.txt\nompi/tools/wrappers/mpif77-wrapper-data.txt\nompi/tools/wrappers/mpif90-wrapper-data.txt\n\nopal/asm/atomic-asm.S\nopal/asm/atomic-test\nopal/asm/generated/atomic-*.s\n\nopal/include/opal_config.h\nopal/include/opal_config.h.in\nopal/include/opal/install_dirs.h\nopal/include/opal/version.h\nopal/include/opal/frameworks.h\nopal/include/opal/sys/powerpc/atomic-32.s\nopal/include/opal/sys/powerpc/atomic-64.s\nopal/include/opal/sys/powerpc/atomic-32-64.s\n\nopal/mca/base/mca_base_parse_paramfile_lex.c\n\nopal/mca/btl/usnic/usnic_btl_run_tests\n\nopal/mca/event/libevent*/libevent/config.h.in\nopal/mca/event/libevent*/libevent/config.h\nopal/mca/event/libevent*/libevent/libevent.pc\nopal/mca/event/libevent*/libevent/libevent_openssl.pc\nopal/mca/event/libevent*/libevent/libevent_pthreads.pc\nopal/mca/event/libevent*/libevent/include/event2/event-config.h\n\nopal/mca/installdirs/config/install_dirs.h\n\nopal/tools/wrappers/opalcc-wrapper-data.txt\nopal/tools/wrappers/opalc++-wrapper-data.txt\nopal/tools/wrappers/opalCC-wrapper-data.txt\nopal/tools/wrappers/opal_wrapper\nopal/tools/wrappers/opal.pc\n\nopal/util/show_help_lex.c\nopal/util/keyval/keyval_lex.c\n\ntest/monitoring/aggregate_profile.pl\ntest/monitoring/profile2mat.pl\n\ntest/simple/abort\ntest/simple/accept\ntest/simple/attach\ntest/simple/bad_exit\ntest/simple/bcast_loop\ntest/simple/binding\ntest/simple/concurrent_spawn\ntest/simple/connect\ntest/simple/crisscross\ntest/simple/delayed_abort\ntest/simple/hello_barrier\ntest/simple/hello_nodename\ntest/simple/hello_output\ntest/simple/hello_show_help\ntest/simple/hello\ntest/simple/hello++\ntest/simple/intercomm1\ntest/simple/interlib\ntest/simple/loop_child\ntest/simple/loop_spawn\ntest/simple/mpi_barrier\ntest/simple/mpi_no_op\ntest/simple/mpi_spin\ntest/simple/multi_abort\ntest/simple/parallel_r8\ntest/simple/parallel_r64\ntest/simple/parallel_w8\ntest/simple/parallel_w64\ntest/simple/pinterlib\ntest/simple/pmix\ntest/simple/pubsub\ntest/simple/read_write\ntest/simple/reduce-hang\ntest/simple/ring\ntest/simple/segv\ntest/simple/simple_spawn\ntest/simple/slave\ntest/simple/spawn_multiple\ntest/simple/xlib\ntest/simple/ziaprobe\ntest/simple/ziatest\ntest/simple/*.dwarf\ntest/simple/junk*\ntest/simple/sio\ntest/simple/sendrecv_blaster\ntest/simple/early_abort\ntest/simple/spawn_problem/ch_rec\ntest/simple/spawn_problem/output\ntest/simple/spawn_problem/start\ntest/simple/debugger\ntest/simple/server_port_name.txt\ntest/simple/singleton_client_server\ntest/simple/intercomm_create\ntest/simple/spawn_tree\ntest/simple/init-exit77\ntest/simple/mpi_info\ntest/simple/info_spawn\ntest/simple/client\ntest/simple/server\ntest/simple/paccept\ntest/simple/pconnect\ntest/simple/thread_init\ntest/simple/memcached-dummy\ntest/simple/coll_test\ntest/simple/badcoll\ntest/simple/iof\ntest/simple/no-disconnect\ntest/simple/nonzero\ntest/simple/add_host\n\noshmem/include/shmem.h\noshmem/include/shmem_portable_platform.h\noshmem/include/oshmem/frameworks.h\noshmem/include/oshmem/version.h\n\noshmem/mca/sshmem/base/static-components.h\n\noshmem/shmem/c/profile/p*.c\noshmem/shmem/c/profile/*.c\n\noshmem/shmem/fortran/libshmem_fortran.la\noshmem/shmem/fortran/profile/pshmem_*_f.c\noshmem/shmem/fortran/profile/pshpdeallc_f.c\noshmem/shmem/fortran/profile/pshpclmove_f.c\noshmem/shmem/fortran/profile/pmy_pe_f.c\noshmem/shmem/fortran/profile/pshpalloc_f.c\noshmem/shmem/fortran/profile/pnum_pes_f.c\noshmem/shmem/fortran/profile/pstart_pes_f.c\n\noshmem/tools/oshmem_info/oshmem_info\n\noshmem/tools/wrappers/oshmem-c.pc\noshmem/tools/wrappers/oshmem-cxx.pc\noshmem/tools/wrappers/oshmem-fort.pc\noshmem/tools/wrappers/oshmem.pc\noshmem/tools/wrappers/shmemcc-wrapper-data.txt\noshmem/tools/wrappers/shmemfort-wrapper-data.txt\noshmem/tools/wrappers/shmemc++-wrapper-data.txt\n\ntest/asm/atomic_math_noinline\ntest/asm/atomic_barrier\ntest/asm/atomic_cmpset_noinline\ntest/asm/atomic_math\ntest/asm/atomic_cmpset\ntest/asm/atomic_spinlock_noinline.c\ntest/asm/atomic_barrier_noinline.c\ntest/asm/atomic_math_noinline.c\ntest/asm/atomic_cmpset_noinline.c\ntest/asm/atomic_spinlock_noinline\ntest/asm/atomic_barrier_noinline\ntest/asm/atomic_spinlock\n\ntest/class/*.txt\ntest/class/ompi_bitmap_test_out.txt\ntest/class/ompi_circular_buffer_fifo\ntest/class/ompi_fifo\ntest/class/ompi_rb_tree\ntest/class/ompi_bitmap\ntest/class/opal_bitmap\ntest/class/opal_fifo\ntest/class/opal_cstring\ntest/class/opal_hash_table\ntest/class/opal_lifo\ntest/class/opal_list\ntest/class/opal_pointer_array\ntest/class/opal_proc_table\ntest/class/opal_tree\ntest/class/opal_value_array\n\ntest/datatype/ddt_test\ntest/datatype/ddt_pack\ntest/datatype/external32\ntest/datatype/to_self\ntest/datatype/checksum\ntest/datatype/position\ntest/datatype/ddt_raw\ntest/datatype/opal_datatype_test\ntest/datatype/position_noncontig\ntest/datatype/unpack_ooo\ntest/datatype/unpack_hetero\n\ntest/event/signal-test\ntest/event/event-test\ntest/event/time-test\n\ntest/monitoring/monitoring_test\ntest/monitoring/check_monitoring\ntest/monitoring/example_reduce_count\ntest/monitoring/test_overhead\ntest/monitoring/test_pvar_access\n\ntest/mpi/environment/chello\n\ntest/runtime/parse_context\ntest/runtime/sigchld\ntest/runtime/start_shut\ntest/runtime/opal_init_finalize\ntest/runtime/orte_init_finalize\n\ntest/spc/spc_test\n\ntest/threads/opal_condition\ntest/threads/opal_thread\n\ntest/util/aaa\ntest/util/test_session_dir_out\ntest/util/opal_os_path\ntest/util/opal_argv\ntest/util/opal_os_create_dirpath\ntest/util/opal_if\ntest/util/opal_error\ntest/util/opal_timer\ntest/util/orte_sys_info\ntest/util/orte_session_dir\ntest/util/orte_sys_info\ntest/util/orte_universe_setup_file_io\ntest/util/opal_basename\ntest/util/ompi_numtostr\ntest/util/ompi_pack\ntest/util/test-file\ntest/util/opal_sos\ntest/util/opal_path_nfs\ntest/util/opal_path_nfs.out\ntest/util/opal_bit_ops\ntest/util/bipartite_graph\ntest/util/opal_sha256\n\nopal/test/reachable/reachable_netlink\nopal/test/reachable/reachable_weighted\nopal/mca/threads/argobots/threads_argobots.h\nopal/mca/threads/qthreads/threads_qthreads.h\n\ndocs/_build\ndocs/_static\ndocs/_static/css/custom.css\ndocs/_templates\n\n# Common Python virtual environment directory names\nvenv\npy??\n\n# Copies of PRRTE RST files (i.e., not source controlled in this tree)\ndocs/prrte-rst-content\ndocs/schizo-ompi-rst-content\n\n# Copies of the built HTML docs and man pages (for distribution\n# tarballs)\ndocs/html\ndocs/man\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.248046875,
          "content": "[submodule \"prrte\"]\n\tpath = 3rd-party/prrte\n\turl = ../../open-mpi/prrte\n\tbranch = master\n[submodule \"openpmix\"]\n\tpath = 3rd-party/openpmix\n\turl = ../../openpmix/openpmix.git\n\tbranch = master\n[submodule \"oac\"]\n\tpath = config/oac\n\turl = ../../open-mpi/oac\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 5.224609375,
          "content": "# This file exists to help consolidate names and email addresses\n# (e.g., when people accidentally commit with an incorrect or local\n# email address).  Two common use cases:\n#\n# 1. Consolidate multiple email addresses from a single person.\n#    Example: one commit from John Smith is from\n#    <john.smith@his.work.com> and another is from\n#    <jsmith@workstation.his.work.com>, and a third is from\n#    <rocketman9982@users.noreply.github.com>.  But they're all from\n#    the same John Smith person.\n#\n# 2. Consolidate misspellings / altername names from a single person.\n#    Example: one commit is from \"John Smith\" and another is from\n#    \"John Smith, CONTRACTOR\", and third is from \"RocketMan 9982\".  But\n#    these are all really the same person, who can be listed once in\n#    AUTHORS as \"John Smith\".\n#\n# The format of this file is documented in git-shortlog(1).  Specifically,\n# a line like this:\n#\n#   Proper Name <proper@email.xx> <commit@email.xx>\n#\n# means that when git sees \"commit@email.xx\" it will display\n# \"Proper Name <proper@email.xx>\" instead in certain circumstances.  Those\n# circumstances include:\n#\n#   - git shortlog\n#   - git blame\n#   - git log --format=tformat:\"%aN <%aE>\"   (and similar)\n#\n\nJeff Squyres <jsquyres@cisco.com> <jsquyres@users.noreply.github.com>\nJeff Squyres <jsquyres@cisco.com> --quiet <--quiet>\nJeff Squyres <no-author@open-mpi.org>\nJeff Squyres <jeff@squyres.com>\n\nGeorge Bosilca <bosilca@icl.utk.edu> <bosilca@users.noreply.github.com>\n\nHoward Pritchard <howardp@lanl.gov> <hppritcha@users.noreply.github.com>\nHoward Pritchard <howardp@lanl.gov> <howardp@lanl.gov>\n\nAndrew Friedley <andrew.friedley@intel.com> <afriedle-intel@users.noreply.github.com>\n\nDevendar Bureddy <devendar@mellanox.com> <bureddy@users.noreply.github.com>\n\nEdgar Gabriel <egabriel@central.uh.edu> <edgargabriel@users.noreply.github.com>\nEdgar Gabriel <gabriel@cs.uh.edu> <gabriel@Peggys-MacBook-Air.local>\nEdgar Gabriel <edgar.gabriel1@outlook.com> <edgar.gabriel1@outlook.com>\nEdgar Gabriel <edgar.gabriel@amd.com> <edgar.gabriel@amd.com>\n\nGilles Gouaillardet <gilles@rist.or.jp> <ggouaillardet@users.noreply.github.com>\n\nMatias A Cabral <matias.a.cabral@intel.com> <matcabral@users.noreply.github.com>\nMatias A Cabral <matias.a.cabral@intel.com> <matias.a.cabral@intel.com>\n\nPavel Shamis <shamisp@ornl.gov> <shamisp@ornl.gov>\nPavel Shamis <shamisp@ornl.gov> <shamisp@users.noreply.github.com>\nPavel Shamis <pasharesearch@gmail.com> <pasharesearch@gmail.com>\n\nTodd Kordenbrock <thkgcode@gmail.com> <tkordenbrock@users.noreply.github.com>\n\nYohann Burette <yohann.burette@intel.com> <yburette@users.noreply.github.com>\nYohann Burette <yohann.burette@intel.com> <yohann.burette@intel.com>\n\nMPI Team (bot) <mpiteam@open-mpi.org> <mpiteam@open-mpi.org>\nMPI Team (bot) <mpiteam@open-mpi.org> <ompiteam@open-mpi.org>\nMPI Team (bot) <mpiteam@open-mpi.org> <mpiteam@build.open-mpi.org>\n\nYossi Itigin <yosefe@mellanox.com> <yosefe@mellanox.com>\n\nJosh Hursey <jjhursey@open-mpi.org> <jjhursey@open-mpi.org>\nJosh Hursey <jhursey@us.ibm.com> <jhursey@us.ibm.com>\n\nAdrian Reber <adrian@lisas.de> <adrian@lisas.de>\n\nElena Elkina <elena.elkina@itseez.com> <elena.elkina@itseez.com>\nElena Elkina <elena.elkina@itseez.com> <elena.elkina89@gmail.com>\n\nIgor Ivanov <igor.ivanov.va@gmail.com> <igor.ivanov.va@gmail.com>\nIgor Ivanov <Igor.Ivanov@itseez.com> <Igor.Ivanov@itseez.com>\n\nMangala Jyothi Bhaskar <mjbhaskar@uh.edu> <mjbhaskar@uh.edu>\nMangala Jyothi Bhaskar <mjbhaskar@uh.edu> <mjbhaskar@crill.cs.uh.edu>\n\nRalph Castain <rhc@open-mpi.org> <rhc@open-mpi.org>\nRalph Castain <rhc@open-mpi.org> <rhc@odin.cs.indiana.edu>\n\nRolf vandeVaart <rvandevaart@nvidia.com> <rvandevaart@nvidia.com>\n\nKarol Mroz <mroz.karol@gmail.com> <mroz.karol@gmail.com>\n\nNadezhda Kogteva <nadezhda.kogteva@itseez.com> <nadezhda@mngx-orion-01.dmz.e2e.mlnx>\n\nThananon Patinyasakdikul <apatinya@cisco.com> <apatinya@savbu-usnic-a.cisco.com>\n\nNysal Jan K A <jnysal@in.ibm.com> <jnysal@in.ibm.com>\nNysal Jan K A <jnysal@in.ibm.com> <jnysal@gmail.com>\n\nZhi Ming Wang <wangzm@cn.ibm.com> <wangzm@cn.ibm.com>\n\nAnnapurna Dasari <annapurna.dasari@intel.com> <annapurna.dasari@intel.com>\n\nL. R. Rajeshnarayanan <l.r.rajeshnarayanan@intel.com> <l.r.rajeshnarayanan@intel.com>\n\nAurelien Bouteiller <bouteill@icl.utk.edu> <bouteill@icl.utk.edu>\nAurelien Bouteiller <bouteill@icl.utk.edu> <darter4.nics.utk.edu>\n\nAlex Mikheev <alexm@mellanox.com> <alexm@mellanox.com>\n\nThomas Naughton <naughtont@ornl.gov> <naughtont@ornl.gov>\n\nGeoffrey Paulsen <gpaulsen@us.ibm.com> <gpaulsen@users.noreply.github.com>\n\nAnandhi S Jayakumar <anandhi.s.jayakumar@intel.com>\n\nMohan Gandhi <mohgan@amazon.com>\n\nHarumi Kuno <harumi.kuno@hpe.com>\n\nNick Papior <nickpapior@gmail.com>\nNick Papior <nickpapior@gmail.com> <nicpa@dtu.dk>\nNick Papior <nickpapior@gmail.com> <zerothi@users.noreply.github.com>\n\nMatthew G. F. Dosanjh <mdosanj@sandia.gov>\n\nWei-keng Liao <wkliao@users.noreply.github.com>\n\nSamuel K. Gutierrez <samuel@lanl.gov> <samuelkgutierrez@users.noreply.github.com>\nSamuel K. Gutierrez <samuel@lanl.gov> <samuel@lanl.gov>\n\nTomislav Janjusic <tomislavj@nvidia.com> Tomislavj Janjusic <tomislavj@nvidia.com>\n\nWilliam P. LePera <lepera@us.ibm.com>\n\nGeorge Katevenis <gkatev@ics.forth.gr>\n\nBrian Barrett <brian@bbarrett.org>\n\nAndrii Bilokur <abilokur@nvidia.com> B-a-S <abilokur@nvidia.com>\n"
        },
        {
          "name": ".readthedocs-pre-create-environment.sh",
          "type": "blob",
          "size": 0.8505859375,
          "content": "#!/bin/bash\n\nset -euxo pipefail\n\n# The ReadTheDocs build process does not run autogen/configure/make.\n# Hence, we have to copy the PRRTE RST files (from the 3rd-party/prrte\n# tree) to our docs/ tree manually.\n\n# Ensure that we're in the RTD CI environment\n\nif [[ \"${READTHEDOCS:-no}\" == \"no\" ]]; then\n    echo \"This script is only intended to be run in the ReadTheDocs CI environment\"\n    exit 1\nfi\n\nSCHIZO_SRC_DIR=3rd-party/prrte/src/mca/schizo/ompi\nSCHIZO_TARGET_DIR=docs/schizo-ompi-rst-content\n\nPRRTE_RST_SRC_DIR=3rd-party/prrte/src/docs/prrte-rst-content\nPRRTE_RST_TARGET_DIR=docs/prrte-rst-content\n\n# Copy the OMPI schizo file from PRRTE\n#\n# See lengthy comment in docs/Makefile.am about copying in RST files\n# from PRRTE for a longer explanation of what is happening here.\n\ncp -rp $SCHIZO_SRC_DIR $SCHIZO_TARGET_DIR\ncp -rp $PRRTE_RST_SRC_DIR $PRRTE_RST_TARGET_DIR\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.79296875,
          "content": "# .readthedocs.yaml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\n# Currently, RTD needs to select an OS with OpenSSL>=1.1.1 because of\n# urllib3's dependence on that system library.  (alternately, pin urllib3<2\n# See https://github.com/urllib3/urllib3/issues/2168\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.10\"\n  jobs:\n    # RTD doesn't run configure or make.  So we have to manually copy\n    # in the PRRTE RST files to docs/.\n    pre_create_environment:\n      - ./.readthedocs-pre-create-environment.sh\n\npython:\n  install:\n    - requirements: docs/requirements.txt\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n  configuration: docs/conf.py\n  fail_on_warning: true\n\nsubmodules:\n  include: all\n"
        },
        {
          "name": "3rd-party",
          "type": "tree",
          "content": null
        },
        {
          "name": "Doxyfile",
          "type": "blob",
          "size": 43.0166015625,
          "content": "# Doxyfile 1.3.4\n#\n# Copyright (c) 2004-2005 The Trustees of Indiana University and Indiana\n#                         University Research and Technology\n#                         Corporation.  All rights reserved.\n# Copyright (c) 2004-2005 The University of Tennessee and The University\n#                         of Tennessee Research Foundation.  All rights\n#                         reserved.\n# Copyright (c) 2004-2005 High Performance Computing Center Stuttgart,\n#                         University of Stuttgart.  All rights reserved.\n# Copyright (c) 2004-2005 The Regents of the University of California.\n#                         All rights reserved.\n# $COPYRIGHT$\n#\n# Additional copyrights may follow\n#\n# $HEADER$\n#\n\n# This file describes the settings to be used by the documentation system\n# doxygen (www.doxygen.org) for a project\n#\n# All text after a hash (#) is considered a comment and will be ignored\n# The format is:\n#       TAG = value [value, ...]\n# For lists items can also be appended using:\n#       TAG += value [value, ...]\n# Values that contain spaces should be placed between quotes (\" \")\n\n#---------------------------------------------------------------------------\n# Project related configuration options\n#---------------------------------------------------------------------------\n\n# The PROJECT_NAME tag is a single word (or a sequence of words surrounded\n# by quotes) that should identify the project.\n\nPROJECT_NAME           = Open MPI\n\n# The PROJECT_NUMBER tag can be used to enter a project or revision number.\n# This could be handy for archiving the generated documentation or\n# if some version control system is used.\n\nPROJECT_NUMBER         = 0.1.1\n\n# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute)\n# base path where the generated documentation will be put.\n# If a relative path is entered, it will be relative to the location\n# where doxygen was started. If left blank the current directory will be used.\n\nOUTPUT_DIRECTORY       = doxygen\n\n# The OUTPUT_LANGUAGE tag is used to specify the language in which all\n# documentation generated by doxygen is written. Doxygen will use this\n# information to generate all constant output in the proper language.\n# The default language is English, other supported languages are:\n# Brazilian, Catalan, Chinese, Chinese-Traditional, Croatian, Czech, Danish, Dutch,\n# Finnish, French, German, Greek, Hungarian, Italian, Japanese, Japanese-en\n# (Japanese with English messages), Korean, Norwegian, Polish, Portuguese,\n# Romanian, Russian, Serbian, Slovak, Slovene, Spanish, Swedish, and Ukrainian.\n\nOUTPUT_LANGUAGE        = English\n\n# This tag can be used to specify the encoding used in the generated output.\n# The encoding is not always determined by the language that is chosen,\n# but also whether or not the output is meant for Windows or non-Windows users.\n# In case there is a difference, setting the USE_WINDOWS_ENCODING tag to YES\n# forces the Windows encoding (this is the default for the Windows binary),\n# whereas setting the tag to NO uses a Unix-style encoding (the default for\n# all platforms other than Windows).\n\nUSE_WINDOWS_ENCODING   = NO\n\n# If the BRIEF_MEMBER_DESC tag is set to YES (the default) Doxygen will\n# include brief member descriptions after the members that are listed in\n# the file and class documentation (similar to JavaDoc).\n# Set to NO to disable this.\n\nBRIEF_MEMBER_DESC      = YES\n\n# If the REPEAT_BRIEF tag is set to YES (the default) Doxygen will\n# prepend the brief description of a member or function before the\n# detailed description.  Note: if both HIDE_UNDOC_MEMBERS and\n# BRIEF_MEMBER_DESC are set to NO, the brief descriptions will be\n# completely suppressed.\n\nREPEAT_BRIEF           = YES\n\n# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then\n# Doxygen will generate a detailed section even if there is only a brief\n# description.\n\nALWAYS_DETAILED_SEC    = NO\n\n# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show\n# all inherited members of a class in the documentation of that class\n# as if those members were ordinary class members. Constructors,\n# destructors and assignment operators of the base classes will not be\n# shown.\n\nINLINE_INHERITED_MEMB  = NO\n\n# If the FULL_PATH_NAMES tag is set to YES then Doxygen will prepend the full\n# path before files name in the file list and in the header files. If set\n# to NO the shortest path that makes the file name unique will be used.\n\nFULL_PATH_NAMES        = YES\n\n# If the FULL_PATH_NAMES tag is set to YES then the STRIP_FROM_PATH tag\n# can be used to strip a user-defined part of the path. Stripping is\n# only done if one of the specified strings matches the left-hand part of\n# the path. It is allowed to use relative paths in the argument list.\n\nSTRIP_FROM_PATH        =\n\n# If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter\n# (but less readable) file names. This can be useful is your file systems\n# doesn't support long names like on DOS, Mac, or CD-ROM.\n\nSHORT_NAMES            = NO\n\n# If the JAVADOC_AUTOBRIEF tag is set to YES then Doxygen\n# will interpret the first line (until the first dot) of a JavaDoc-style\n# comment as the brief description. If set to NO, the JavaDoc\n# comments will behave just like the Qt-style comments (thus requiring an\n# explict @brief command for a brief description.\n\nJAVADOC_AUTOBRIEF      = YES\n\n# The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make Doxygen\n# treat a multi-line C++ special comment block (i.e. a block of //! or ///\n# comments) as a brief description. This used to be the default behaviour.\n# The new default is to treat a multi-line C++ comment block as a detailed\n# description. Set this tag to YES if you prefer the old behaviour instead.\n\nMULTILINE_CPP_IS_BRIEF = NO\n\n# If the DETAILS_AT_TOP tag is set to YES then Doxygen\n# will output the detailed description near the top, like JavaDoc.\n# If set to NO, the detailed description appears after the member\n# documentation.\n\nDETAILS_AT_TOP         = NO\n\n# If the INHERIT_DOCS tag is set to YES (the default) then an undocumented\n# member inherits the documentation from any documented member that it\n# reimplements.\n\nINHERIT_DOCS           = YES\n\n# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC\n# tag is set to YES, then doxygen will reuse the documentation of the first\n# member in the group (if any) for the other members of the group. By default\n# all members of a group must be documented explicitly.\n\nDISTRIBUTE_GROUP_DOC   = NO\n\n# The TAB_SIZE tag can be used to set the number of spaces in a tab.\n# Doxygen uses this value to replace tabs by spaces in code fragments.\n\nTAB_SIZE               = 8\n\n# This tag can be used to specify a number of aliases that acts\n# as commands in the documentation. An alias has the form \"name=value\".\n# For example adding \"sideeffect=\\par Side Effects:\\n\" will allow you to\n# put the command \\sideeffect (or @sideeffect) in the documentation, which\n# will result in a user-defined paragraph with heading \"Side Effects:\".\n# You can put \\n's in the value part of an alias to insert newlines.\n\nALIASES                =\n\n# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of\n# C sources only. Doxygen will then generate output that is more\n# tailored for C.  For instance, some of the names that are used will\n# be different. The list of all members will be omitted, etc.\n\nOPTIMIZE_OUTPUT_FOR_C  = YES\n\n# Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of\n# Java sources only. Doxygen will then generate output that is more\n# tailored for Java.  For instance, namespaces will be presented as\n# packages, qualified scopes will look different, etc.\n\nOPTIMIZE_OUTPUT_JAVA   = NO\n\n# Set the SUBGROUPING tag to YES (the default) to allow class member groups of\n# the same type (for instance a group of public functions) to be put as a\n# subgroup of that type (e.g. under the Public Functions section). Set it to\n# NO to prevent subgrouping. Alternatively, this can be done per class using\n# the \\nosubgrouping command.\n\nSUBGROUPING            = YES\n\n#---------------------------------------------------------------------------\n# Build related configuration options\n#---------------------------------------------------------------------------\n\n# If the EXTRACT_ALL tag is set to YES doxygen will assume all entities in\n# documentation are documented, even if no documentation was available.\n# Private class members and static file members will be hidden unless\n# the EXTRACT_PRIVATE and EXTRACT_STATIC tags are set to YES\n\nEXTRACT_ALL            = NO\n\n# If the EXTRACT_PRIVATE tag is set to YES all private members of a\n# class will be included in the documentation.\n\nEXTRACT_PRIVATE        = NO\n\n# If the EXTRACT_STATIC tag is set to YES all static members of a file\n# will be included in the documentation.\n\nEXTRACT_STATIC         = YES\n\n# If the EXTRACT_LOCAL_CLASSES tag is set to YES classes (and structs)\n# defined locally in source files will be included in the documentation.\n# If set to NO only classes defined in header files are included.\n\nEXTRACT_LOCAL_CLASSES  = YES\n\n# If the HIDE_UNDOC_MEMBERS tag is set to YES, Doxygen will hide all\n# undocumented members of documented classes, files or namespaces.\n# If set to NO (the default) these members will be included in the\n# various overviews, but no documentation section is generated.\n# This option has no effect if EXTRACT_ALL is enabled.\n\nHIDE_UNDOC_MEMBERS     = NO\n\n# If the HIDE_UNDOC_CLASSES tag is set to YES, Doxygen will hide all\n# undocumented classes that are normally visible in the class hierarchy.\n# If set to NO (the default) these classes will be included in the various\n# overviews. This option has no effect if EXTRACT_ALL is enabled.\n\nHIDE_UNDOC_CLASSES     = NO\n\n# If the HIDE_FRIEND_COMPOUNDS tag is set to YES, Doxygen will hide all\n# friend (class|struct|union) declarations.\n# If set to NO (the default) these declarations will be included in the\n# documentation.\n\nHIDE_FRIEND_COMPOUNDS  = NO\n\n# If the HIDE_IN_BODY_DOCS tag is set to YES, Doxygen will hide any\n# documentation blocks found inside the body of a function.\n# If set to NO (the default) these blocks will be appended to the\n# function's detailed documentation block.\n\nHIDE_IN_BODY_DOCS      = NO\n\n# The INTERNAL_DOCS tag determines if documentation\n# that is typed after a \\internal command is included. If the tag is set\n# to NO (the default) then the documentation will be excluded.\n# Set it to YES to include the internal documentation.\n\nINTERNAL_DOCS          = NO\n\n# If the CASE_SENSE_NAMES tag is set to NO then Doxygen will only generate\n# file names in lower-case letters. If set to YES upper-case letters are also\n# allowed. This is useful if you have classes or files whose names only differ\n# in case and if your file system supports case sensitive file names. Windows\n# users are advised to set this option to NO.\n\nCASE_SENSE_NAMES       = YES\n\n# If the HIDE_SCOPE_NAMES tag is set to NO (the default) then Doxygen\n# will show members with their full class and namespace scopes in the\n# documentation. If set to YES the scope will be hidden.\n\nHIDE_SCOPE_NAMES       = NO\n\n# If the SHOW_INCLUDE_FILES tag is set to YES (the default) then Doxygen\n# will put a list of the files that are included by a file in the documentation\n# of that file.\n\nSHOW_INCLUDE_FILES     = YES\n\n# If the INLINE_INFO tag is set to YES (the default) then a tag [inline]\n# is inserted in the documentation for inline members.\n\nINLINE_INFO            = YES\n\n# If the SORT_MEMBER_DOCS tag is set to YES (the default) then doxygen\n# will sort the (detailed) documentation of file and class members\n# alphabetically by member name. If set to NO the members will appear in\n# declaration order.\n\nSORT_MEMBER_DOCS       = YES\n\n# The GENERATE_TODOLIST tag can be used to enable (YES) or\n# disable (NO) the todo list. This list is created by putting \\todo\n# commands in the documentation.\n\nGENERATE_TODOLIST      = YES\n\n# The GENERATE_TESTLIST tag can be used to enable (YES) or\n# disable (NO) the test list. This list is created by putting \\test\n# commands in the documentation.\n\nGENERATE_TESTLIST      = YES\n\n# The GENERATE_BUGLIST tag can be used to enable (YES) or\n# disable (NO) the bug list. This list is created by putting \\bug\n# commands in the documentation.\n\nGENERATE_BUGLIST       = YES\n\n# The GENERATE_DEPRECATEDLIST tag can be used to enable (YES) or\n# disable (NO) the deprecated list. This list is created by putting\n# \\deprecated commands in the documentation.\n\nGENERATE_DEPRECATEDLIST= YES\n\n# The ENABLED_SECTIONS tag can be used to enable conditional\n# documentation sections, marked by \\if sectionname ... \\endif.\n\nENABLED_SECTIONS       =\n\n# The MAX_INITIALIZER_LINES tag determines the maximum number of lines\n# the initial value of a variable or define consists of for it to appear in\n# the documentation. If the initializer consists of more lines than specified\n# here it will be hidden. Use a value of 0 to hide initializers completely.\n# The appearance of the initializer of individual variables and defines in the\n# documentation can be controlled using \\showinitializer or \\hideinitializer\n# command in the documentation regardless of this setting.\n\nMAX_INITIALIZER_LINES  = 30\n\n# Set the SHOW_USED_FILES tag to NO to disable the list of files generated\n# at the bottom of the documentation of classes and structs. If set to YES the\n# list will mention the files that were used to generate the documentation.\n\nSHOW_USED_FILES        = YES\n\n#---------------------------------------------------------------------------\n# configuration options related to warning and progress messages\n#---------------------------------------------------------------------------\n\n# The QUIET tag can be used to turn on/off the messages that are generated\n# by doxygen. Possible values are YES and NO. If left blank NO is used.\n\nQUIET                  = NO\n\n# The WARNINGS tag can be used to turn on/off the warning messages that are\n# generated by doxygen. Possible values are YES and NO. If left blank\n# NO is used.\n\nWARNINGS               = YES\n\n# If WARN_IF_UNDOCUMENTED is set to YES, then doxygen will generate warnings\n# for undocumented members. If EXTRACT_ALL is set to YES then this flag will\n# automatically be disabled.\n\nWARN_IF_UNDOCUMENTED   = YES\n\n# If WARN_IF_DOC_ERROR is set to YES, doxygen will generate warnings for\n# potential errors in the documentation, such as not documenting some\n# parameters in a documented function, or documenting parameters that\n# don't exist or using markup commands wrongly.\n\nWARN_IF_DOC_ERROR      = YES\n\n# The WARN_FORMAT tag determines the format of the warning messages that\n# doxygen can produce. The string should contain the $file, $line, and $text\n# tags, which will be replaced by the file and line number from which the\n# warning originated and the warning text.\n\nWARN_FORMAT            = \"$file:$line: $text\"\n\n# The WARN_LOGFILE tag can be used to specify a file to which warning\n# and error messages should be written. If left blank the output is written\n# to stderr.\n\nWARN_LOGFILE           =\n\n#---------------------------------------------------------------------------\n# configuration options related to the input files\n#---------------------------------------------------------------------------\n\n# The INPUT tag can be used to specify the files and/or directories that contain\n# documented source files. You may enter file names like \"myfile.cpp\" or\n# directories like \"/usr/src/myproject\". Separate the files or directories\n# with spaces.\n\nINPUT                  = opal orte ompi\n\n# If the value of the INPUT tag contains directories, you can use the\n# FILE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp\n# and *.h) to filter out the source-files in the directories. If left\n# blank the following patterns are tested:\n# *.c *.cc *.cxx *.cpp *.c++ *.java *.ii *.ixx *.ipp *.i++ *.inl *.h *.hh *.hxx *.hpp\n# *.h++ *.idl *.odl *.cs *.php *.php3 *.inc\n\nFILE_PATTERNS          = *.c *.h *.cc *.dox\n\n# The RECURSIVE tag can be used to turn specify whether or not subdirectories\n# should be searched for input files as well. Possible values are YES and NO.\n# If left blank NO is used.\n\nRECURSIVE              = YES\n\n# The EXCLUDE tag can be used to specify files and/or directories that should\n# excluded from the INPUT source files. This way you can easily exclude a\n# subdirectory from a directory tree whose root is specified with the INPUT tag.\n\nEXCLUDE                = opal/event ompi/mca/io/romio\n\n# The EXCLUDE_SYMLINKS tag can be used select whether or not files or\n# directories that are symbolic links (a Unix filesystem feature) are\n# excluded from the input.\n\nEXCLUDE_SYMLINKS       = YES\n\n# If the value of the INPUT tag contains directories, you can use the\n# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude\n# certain files from those directories.\n\nEXCLUDE_PATTERNS       = static-modules.h *config*.h ompi_stdint.h ltdl.h\n\n# The EXAMPLE_PATH tag can be used to specify one or more files or\n# directories that contain example code fragments that are included (see\n# the \\include command).\n\nEXAMPLE_PATH           =\n\n# If the value of the EXAMPLE_PATH tag contains directories, you can use the\n# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp\n# and *.h) to filter out the source-files in the directories. If left\n# blank all files are included.\n\nEXAMPLE_PATTERNS       =\n\n# If the EXAMPLE_RECURSIVE tag is set to YES then subdirectories will be\n# searched for input files to be used with the \\include or \\dontinclude\n# commands irrespective of the value of the RECURSIVE tag.\n# Possible values are YES and NO. If left blank NO is used.\n\nEXAMPLE_RECURSIVE      = NO\n\n# The IMAGE_PATH tag can be used to specify one or more files or\n# directories that contain image that are included in the documentation (see\n# the \\image command).\n\nIMAGE_PATH             =\n\n# The INPUT_FILTER tag can be used to specify a program that doxygen should\n# invoke to filter for each input file. Doxygen will invoke the filter program\n# by executing (via popen()) the command <filter> <input-file>, where <filter>\n# is the value of the INPUT_FILTER tag, and <input-file> is the name of an\n# input file. Doxygen will then use the output that the filter program writes\n# to standard output.\n\nINPUT_FILTER           =\n\n# If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using\n# INPUT_FILTER) will be used to filter the input files when producing source\n# files to browse (i.e. when SOURCE_BROWSER is set to YES).\n\nFILTER_SOURCE_FILES    = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to source browsing\n#---------------------------------------------------------------------------\n\n# If the SOURCE_BROWSER tag is set to YES then a list of source files will\n# be generated. Documented entities will be cross-referenced with these sources.\n\nSOURCE_BROWSER         = NO\n\n# Setting the INLINE_SOURCES tag to YES will include the body\n# of functions and classes directly in the documentation.\n\nINLINE_SOURCES         = NO\n\n# Setting the STRIP_CODE_COMMENTS tag to YES (the default) will instruct\n# doxygen to hide any special comment blocks from generated source code\n# fragments. Normal C and C++ comments will always remain visible.\n\nSTRIP_CODE_COMMENTS    = NO\n\n# If the REFERENCED_BY_RELATION tag is set to YES (the default)\n# then for each documented function all documented\n# functions referencing it will be listed.\n\nREFERENCED_BY_RELATION = YES\n\n# If the REFERENCES_RELATION tag is set to YES (the default)\n# then for each documented function all documented entities\n# called/used by that function will be listed.\n\nREFERENCES_RELATION    = YES\n\n# If the VERBATIM_HEADERS tag is set to YES (the default) then Doxygen\n# will generate a verbatim copy of the header file for each class for\n# which an include is specified. Set to NO to disable this.\n\nVERBATIM_HEADERS       = YES\n\n#---------------------------------------------------------------------------\n# configuration options related to the alphabetical class index\n#---------------------------------------------------------------------------\n\n# If the ALPHABETICAL_INDEX tag is set to YES, an alphabetical index\n# of all compounds will be generated. Enable this if the project\n# contains a lot of classes, structs, unions or interfaces.\n\nALPHABETICAL_INDEX     = NO\n\n# If the alphabetical index is enabled (see ALPHABETICAL_INDEX) then\n# the COLS_IN_ALPHA_INDEX tag can be used to specify the number of columns\n# in which this list will be split (can be a number in the range [1..20])\n\nCOLS_IN_ALPHA_INDEX    = 5\n\n# In case all classes in a project start with a common prefix, all\n# classes will be put under the same header in the alphabetical index.\n# The IGNORE_PREFIX tag can be used to specify one or more prefixes that\n# should be ignored while generating the index headers.\n\nIGNORE_PREFIX          =\n\n#---------------------------------------------------------------------------\n# configuration options related to the HTML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_HTML tag is set to YES (the default) Doxygen will\n# generate HTML output.\n\nGENERATE_HTML          = YES\n\n# The HTML_OUTPUT tag is used to specify where the HTML docs will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be\n# put in front of it. If left blank `html' will be used as the default path.\n\nHTML_OUTPUT            = html\n\n# The HTML_FILE_EXTENSION tag can be used to specify the file extension for\n# each generated HTML page (for example: .htm,.php,.asp). If it is left blank\n# doxygen will generate files with .html extension.\n\nHTML_FILE_EXTENSION    = .html\n\n# The HTML_HEADER tag can be used to specify a personal HTML header for\n# each generated HTML page. If it is left blank doxygen will generate a\n# standard header.\n\nHTML_HEADER            =\n\n# The HTML_FOOTER tag can be used to specify a personal HTML footer for\n# each generated HTML page. If it is left blank doxygen will generate a\n# standard footer.\n\nHTML_FOOTER            =\n\n# The HTML_STYLESHEET tag can be used to specify a user-defined cascading\n# style sheet that is used by each HTML page. It can be used to\n# fine-tune the look of the HTML output. If the tag is left blank doxygen\n# will generate a default style sheet\n\nHTML_STYLESHEET        =\n\n# If the HTML_ALIGN_MEMBERS tag is set to YES, the members of classes,\n# files or namespaces will be aligned in HTML using tables. If set to\n# NO a bullet list will be used.\n\nHTML_ALIGN_MEMBERS     = YES\n\n# If the GENERATE_HTMLHELP tag is set to YES, additional index files\n# will be generated that can be used as input for tools like the\n# Microsoft HTML help workshop to generate a compressed HTML help file (.chm)\n# of the generated HTML documentation.\n\nGENERATE_HTMLHELP      = NO\n\n# If the GENERATE_HTMLHELP tag is set to YES, the CHM_FILE tag can\n# be used to specify the file name of the resulting .chm file. You\n# can add a path in front of the file if the result should not be\n# written to the html output dir.\n\nCHM_FILE               =\n\n# If the GENERATE_HTMLHELP tag is set to YES, the HHC_LOCATION tag can\n# be used to specify the location (absolute path including file name) of\n# the HTML help compiler (hhc.exe). If non-empty doxygen will try to run\n# the HTML help compiler on the generated index.hhp.\n\nHHC_LOCATION           =\n\n# If the GENERATE_HTMLHELP tag is set to YES, the GENERATE_CHI flag\n# controls if a separate .chi index file is generated (YES) or that\n# it should be included in the master .chm file (NO).\n\nGENERATE_CHI           = NO\n\n# If the GENERATE_HTMLHELP tag is set to YES, the BINARY_TOC flag\n# controls whether a binary table of contents is generated (YES) or a\n# normal table of contents (NO) in the .chm file.\n\nBINARY_TOC             = NO\n\n# The TOC_EXPAND flag can be set to YES to add extra items for group members\n# to the contents of the HTML help documentation and to the tree view.\n\nTOC_EXPAND             = NO\n\n# The DISABLE_INDEX tag can be used to turn on/off the condensed index at\n# top of each HTML page. The value NO (the default) enables the index and\n# the value YES disables it.\n\nDISABLE_INDEX          = NO\n\n# This tag can be used to set the number of enum values (range [1..20])\n# that doxygen will group on one line in the generated HTML documentation.\n\nENUM_VALUES_PER_LINE   = 4\n\n# If the GENERATE_TREEVIEW tag is set to YES, a side panel will be\n# generated containing a tree-like index structure (just like the one that\n# is generated for HTML Help). For this to work a browser that supports\n# JavaScript, DHTML, CSS and frames is required (for instance Mozilla 1.0+,\n# Netscape 6.0+, Internet explorer 5.0+, or Konqueror). Windows users are\n# probably better off using the HTML help feature.\n\nGENERATE_TREEVIEW      = YES\n\n# If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be\n# used to set the initial width (in pixels) of the frame in which the tree\n# is shown.\n\nTREEVIEW_WIDTH         = 250\n\n#---------------------------------------------------------------------------\n# configuration options related to the LaTeX output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_LATEX tag is set to YES (the default) Doxygen will\n# generate Latex output.\n\nGENERATE_LATEX         = YES\n\n# The LATEX_OUTPUT tag is used to specify where the LaTeX docs will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be\n# put in front of it. If left blank `latex' will be used as the default path.\n\nLATEX_OUTPUT           = latex\n\n# The LATEX_CMD_NAME tag can be used to specify the LaTeX command name to be\n# invoked. If left blank `latex' will be used as the default command name.\n\nLATEX_CMD_NAME         = latex\n\n# The MAKEINDEX_CMD_NAME tag can be used to specify the command name to\n# generate index for LaTeX. If left blank `makeindex' will be used as the\n# default command name.\n\nMAKEINDEX_CMD_NAME     = makeindex\n\n# If the COMPACT_LATEX tag is set to YES Doxygen generates more compact\n# LaTeX documents. This may be useful for small projects and may help to\n# save some trees in general.\n\nCOMPACT_LATEX          = NO\n\n# The PAPER_TYPE tag can be used to set the paper type that is used\n# by the printer. Possible values are: a4, a4wide, letter, legal and\n# executive. If left blank a4wide will be used.\n\n#PAPER_TYPE             = a4wide\nPAPER_TYPE             = letter\n\n# The EXTRA_PACKAGES tag can be to specify one or more names of LaTeX\n# packages that should be included in the LaTeX output.\n\nEXTRA_PACKAGES         =\n\n# The LATEX_HEADER tag can be used to specify a personal LaTeX header for\n# the generated latex document. The header should contain everything until\n# the first chapter. If it is left blank doxygen will generate a\n# standard header. Notice: only use this tag if you know what you are doing!\n\nLATEX_HEADER           =\n\n# If the PDF_HYPERLINKS tag is set to YES, the LaTeX that is generated\n# is prepared for conversion to pdf (using ps2pdf). The pdf file will\n# contain links (just like the HTML output) instead of page references\n# This makes the output suitable for online browsing using a pdf viewer.\n\nPDF_HYPERLINKS         = YES\n\n# If the USE_PDFLATEX tag is set to YES, pdflatex will be used instead of\n# plain latex in the generated Makefile. Set this option to YES to get a\n# higher quality PDF documentation.\n\nUSE_PDFLATEX           = YES\n\n# If the LATEX_BATCHMODE tag is set to YES, doxygen will add the \\\\batchmode.\n# command to the generated LaTeX files. This will instruct LaTeX to keep\n# running if errors occur, instead of asking the user for help.\n# This option is also used when generating formulas in HTML.\n\nLATEX_BATCHMODE        = NO\n\n# If LATEX_HIDE_INDICES is set to YES then doxygen will not\n# include the index chapters (such as File Index, Compound Index, etc.)\n# in the output.\n\nLATEX_HIDE_INDICES     = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to the RTF output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_RTF tag is set to YES Doxygen will generate RTF output\n# The RTF output is optimised for Word 97 and may not look very pretty with\n# other RTF readers or editors.\n\nGENERATE_RTF           = NO\n\n# The RTF_OUTPUT tag is used to specify where the RTF docs will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be\n# put in front of it. If left blank `rtf' will be used as the default path.\n\nRTF_OUTPUT             = rtf\n\n# If the COMPACT_RTF tag is set to YES Doxygen generates more compact\n# RTF documents. This may be useful for small projects and may help to\n# save some trees in general.\n\nCOMPACT_RTF            = NO\n\n# If the RTF_HYPERLINKS tag is set to YES, the RTF that is generated\n# will contain hyperlink fields. The RTF file will\n# contain links (just like the HTML output) instead of page references.\n# This makes the output suitable for online browsing using WORD or other\n# programs which support those fields.\n# Note: wordpad (write) and others do not support links.\n\nRTF_HYPERLINKS         = NO\n\n# Load stylesheet definitions from file. Syntax is similar to doxygen's\n# config file, i.e. a series of assigments. You only have to provide\n# replacements, missing definitions are set to their default value.\n\nRTF_STYLESHEET_FILE    =\n\n# Set optional variables used in the generation of an rtf document.\n# Syntax is similar to doxygen's config file.\n\nRTF_EXTENSIONS_FILE    =\n\n#---------------------------------------------------------------------------\n# configuration options related to the man page output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_MAN tag is set to YES (the default) Doxygen will\n# generate man pages\n\nGENERATE_MAN           = YES\n\n# The MAN_OUTPUT tag is used to specify where the man pages will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be\n# put in front of it. If left blank `man' will be used as the default path.\n\nMAN_OUTPUT             = man\n\n# The MAN_EXTENSION tag determines the extension that is added to\n# the generated man pages (default is the subroutine's section .3)\n\nMAN_EXTENSION          = .3\n\n# If the MAN_LINKS tag is set to YES and Doxygen generates man output,\n# then it will generate one additional man file for each entity\n# documented in the real man page(s). These additional files\n# only source the real man page, but without them the man command\n# would be unable to find the correct page. The default is NO.\n\nMAN_LINKS              = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to the XML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_XML tag is set to YES Doxygen will\n# generate an XML file that captures the structure of\n# the code including all documentation. Note that this\n# feature is still experimental and incomplete at the\n# moment.\n\nGENERATE_XML           = NO\n\n# The XML_OUTPUT tag is used to specify where the XML pages will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be\n# put in front of it. If left blank `xml' will be used as the default path.\n\nXML_OUTPUT             = xml\n\n# The XML_SCHEMA tag can be used to specify an XML schema,\n# which can be used by a validating XML parser to check the\n# syntax of the XML files.\n\nXML_SCHEMA             =\n\n# The XML_DTD tag can be used to specify an XML DTD,\n# which can be used by a validating XML parser to check the\n# syntax of the XML files.\n\nXML_DTD                =\n\n#---------------------------------------------------------------------------\n# configuration options for the AutoGen Definitions output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_AUTOGEN_DEF tag is set to YES Doxygen will\n# generate an AutoGen Definitions (see autogen.sf.net) file\n# that captures the structure of the code including all\n# documentation. Note that this feature is still experimental\n# and incomplete at the moment.\n\nGENERATE_AUTOGEN_DEF   = NO\n\n#---------------------------------------------------------------------------\n# configuration options related to the Perl module output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES Doxygen will\n# generate a Perl module file that captures the structure of\n# the code including all documentation. Note that this\n# feature is still experimental and incomplete at the\n# moment.\n\nGENERATE_PERLMOD       = NO\n\n# If the PERLMOD_LATEX tag is set to YES Doxygen will generate\n# the necessary Makefile rules, Perl scripts and LaTeX code to be able\n# to generate PDF and DVI output from the Perl module output.\n\nPERLMOD_LATEX          = NO\n\n# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be\n# nicely formatted so it can be parsed by a human reader.  This is useful\n# if you want to understand what is going on.  On the other hand, if this\n# tag is set to NO the size of the Perl module output will be much smaller\n# and Perl will parse it just the same.\n\nPERLMOD_PRETTY         = YES\n\n# The names of the make variables in the generated doxyrules.make file\n# are prefixed with the string contained in PERLMOD_MAKEVAR_PREFIX.\n# This is useful so different doxyrules.make files included by the same\n# Makefile don't overwrite each other's variables.\n\nPERLMOD_MAKEVAR_PREFIX =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the preprocessor\n#---------------------------------------------------------------------------\n\n# If the ENABLE_PREPROCESSING tag is set to YES (the default) Doxygen will\n# evaluate all C-preprocessor directives found in the sources and include\n# files.\n\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro\n# names in the source code. If set to NO (the default) only conditional\n# compilation will be performed. Macro expansion can be done in a controlled\n# way by setting EXPAND_ONLY_PREDEF to YES.\n\nMACRO_EXPANSION        = NO\n\n# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES\n# then the macro expansion is limited to the macros specified with the\n# PREDEFINED and EXPAND_AS_PREDEFINED tags.\n\nEXPAND_ONLY_PREDEF     = NO\n\n# If the SEARCH_INCLUDES tag is set to YES (the default) the includes files\n# in the INCLUDE_PATH (see below) will be search if a #include is found.\n\nSEARCH_INCLUDES        = YES\n\n# The INCLUDE_PATH tag can be used to specify one or more directories that\n# contain include files that are not input files but should be processed by\n# the preprocessor.\n\nINCLUDE_PATH           =\n\n# You can use the INCLUDE_FILE_PATTERNS tag to specify one or more wildcard\n# patterns (like *.h and *.hpp) to filter out the header-files in the\n# directories. If left blank, the patterns specified with FILE_PATTERNS will\n# be used.\n\nINCLUDE_FILE_PATTERNS  =\n\n# The PREDEFINED tag can be used to specify one or more macro names that\n# are defined before the preprocessor is started (similar to the -D option of\n# gcc). The argument of the tag is a list of macros of the form: name\n# or name=definition (no spaces). If the definition and the = are\n# omitted =1 is assumed.\n\nPREDEFINED             = DOXYGEN\n\n# If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then\n# this tag can be used to specify a list of macro names that should be expanded.\n# The macro definition that is found in the sources will be used.\n# Use the PREDEFINED tag if you want to use a different macro definition.\n\nEXPAND_AS_DEFINED      =\n\n# If the SKIP_FUNCTION_MACROS tag is set to YES (the default) then\n# doxygen's preprocessor will remove all function-like macros that are alone\n# on a line, have an all uppercase name, and do not end with a semicolon. Such\n# function macros are typically used for boiler-plate code, and will confuse the\n# parser if not removed.\n\nSKIP_FUNCTION_MACROS   = YES\n\n#---------------------------------------------------------------------------\n# Configuration::addtions related to external references\n#---------------------------------------------------------------------------\n\n# The TAGFILES option can be used to specify one or more tagfiles.\n# Optionally an initial location of the external documentation\n# can be added for each tagfile. The format of a tag file without\n# this location is as follows:\n#   TAGFILES = file1 file2 ...\n# Adding location for the tag files is done as follows:\n#   TAGFILES = file1=loc1 \"file2 = loc2\" ...\n# where \"loc1\" and \"loc2\" can be relative or absolute paths or\n# URLs. If a location is present for each tag, the installdox tool\n# does not have to be run to correct the links.\n# Note that each tag file must have a unique name\n# (where the name does NOT include the path)\n# If a tag file is not located in the directory in which doxygen\n# is run, you must also specify the path to the tagfile here.\n\nTAGFILES               =\n\n# When a file name is specified after GENERATE_TAGFILE, doxygen will create\n# a tag file that is based on the input files it reads.\n\nGENERATE_TAGFILE       = doxygen/tagfile\n\n# If the ALLEXTERNALS tag is set to YES all external classes will be listed\n# in the class index. If set to NO only the inherited external classes\n# will be listed.\n\nALLEXTERNALS           = NO\n\n# If the EXTERNAL_GROUPS tag is set to YES all external groups will be listed\n# in the modules index. If set to NO, only the current project's groups will\n# be listed.\n\nEXTERNAL_GROUPS        = YES\n\n# The PERL_PATH should be the absolute path and name of the perl script\n# interpreter (i.e. the result of `which perl').\n\nPERL_PATH              = /usr/bin/perl\n\n#---------------------------------------------------------------------------\n# Configuration options related to the dot tool\n#---------------------------------------------------------------------------\n\n# If the CLASS_DIAGRAMS tag is set to YES (the default) Doxygen will\n# generate a inheritance diagram (in HTML, RTF and LaTeX) for classes with base or\n# super classes. Setting the tag to NO turns the diagrams off. Note that this\n# option is superceded by the HAVE_DOT option below. This is only a fallback. It is\n# recommended to install and use dot, since it yields more powerful graphs.\n\nCLASS_DIAGRAMS         = YES\n\n# If set to YES, the inheritance and collaboration graphs will hide\n# inheritance and usage relations if the target is undocumented\n# or is not a class.\n\nHIDE_UNDOC_RELATIONS   = YES\n\n# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is\n# available from the path. This tool is part of Graphviz, a graph visualization\n# toolkit from AT&T and Lucent Bell Labs. The other options in this section\n# have no effect if this option is set to NO (the default)\n\nHAVE_DOT               = NO\n\n# If the CLASS_GRAPH and HAVE_DOT tags are set to YES then doxygen\n# will generate a graph for each documented class showing the direct and\n# indirect inheritance relations. Setting this tag to YES will force the\n# the CLASS_DIAGRAMS tag to NO.\n\nCLASS_GRAPH            = YES\n\n# If the COLLABORATION_GRAPH and HAVE_DOT tags are set to YES then doxygen\n# will generate a graph for each documented class showing the direct and\n# indirect implementation dependencies (inheritance, containment, and\n# class references variables) of the class with other documented classes.\n\nCOLLABORATION_GRAPH    = YES\n\n# If the UML_LOOK tag is set to YES doxygen will generate inheritance and\n# collaboration diagrams in a style similiar to the OMG's Unified Modeling\n# Language.\n\nUML_LOOK               = NO\n\n# If set to YES, the inheritance and collaboration graphs will show the\n# relations between templates and their instances.\n\nTEMPLATE_RELATIONS     = NO\n\n# If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDE_GRAPH, and HAVE_DOT\n# tags are set to YES then doxygen will generate a graph for each documented\n# file showing the direct and indirect include dependencies of the file with\n# other documented files.\n\nINCLUDE_GRAPH          = YES\n\n# If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDED_BY_GRAPH, and\n# HAVE_DOT tags are set to YES then doxygen will generate a graph for each\n# documented header file showing the documented files that directly or\n# indirectly include this file.\n\nINCLUDED_BY_GRAPH      = YES\n\n# If the CALL_GRAPH and HAVE_DOT tags are set to YES then doxygen will\n# generate a call dependency graph for every global function or class method.\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable call graphs for selected\n# functions only using the \\callgraph command.\n\nCALL_GRAPH             = NO\n\n# If the GRAPHICAL_HIERARCHY and HAVE_DOT tags are set to YES then doxygen\n# will graphical hierarchy of all classes instead of a textual one.\n\nGRAPHICAL_HIERARCHY    = YES\n\n# The DOT_IMAGE_FORMAT tag can be used to set the image format of the images\n# generated by dot. Possible values are png, jpg, or gif\n# If left blank png will be used.\n\nDOT_IMAGE_FORMAT       = png\n\n# The tag DOT_PATH can be used to specify the path where the dot tool can be\n# found. If left blank, it is assumed the dot tool can be found on the path.\n\nDOT_PATH               =\n\n# The DOTFILE_DIRS tag can be used to specify one or more directories that\n# contain dot files that are included in the documentation (see the\n# \\dotfile command).\n\nDOTFILE_DIRS           =\n\n# The MAX_DOT_GRAPH_WIDTH tag can be used to set the maximum allowed width\n# (in pixels) of the graphs generated by dot. If a graph becomes larger than\n# this value, doxygen will try to truncate the graph, so that it fits within\n# the specified constraint. Beware that most browsers cannot cope with very\n# large images.\n\nMAX_DOT_GRAPH_WIDTH    = 1024\n\n# The MAX_DOT_GRAPH_HEIGHT tag can be used to set the maximum allows height\n# (in pixels) of the graphs generated by dot. If a graph becomes larger than\n# this value, doxygen will try to truncate the graph, so that it fits within\n# the specified constraint. Beware that most browsers cannot cope with very\n# large images.\n\nMAX_DOT_GRAPH_HEIGHT   = 1024\n\n# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the\n# graphs generated by dot. A depth value of 3 means that only nodes reachable\n# from the root by following a path via at most 3 edges will be shown. Nodes that\n# lay further from the root node will be omitted. Note that setting this option to\n# 1 or 2 may greatly reduce the computation time needed for large code bases. Also\n# note that a graph may be further truncated if the graph's image dimensions are\n# not sufficient to fit the graph (see MAX_DOT_GRAPH_WIDTH and MAX_DOT_GRAPH_HEIGHT).\n# If 0 is used for the depth value (the default), the graph is not depth-constrained.\n\nMAX_DOT_GRAPH_DEPTH    = 0\n\n# If the GENERATE_LEGEND tag is set to YES (the default) Doxygen will\n# generate a legend page explaining the meaning of the various boxes and\n# arrows in the dot generated graphs.\n\nGENERATE_LEGEND        = YES\n\n# If the DOT_CLEANUP tag is set to YES (the default) Doxygen will\n# remove the intermediate dot files that are used to generate\n# the various graphs.\n\nDOT_CLEANUP            = YES\n\n#---------------------------------------------------------------------------\n# Configuration::addtions related to the search engine\n#---------------------------------------------------------------------------\n\n# The SEARCHENGINE tag specifies whether or not a search engine should be\n# used. If set to NO the values of all tags below this one will be ignored.\n\nSEARCHENGINE           = NO\n"
        },
        {
          "name": "HACKING.md",
          "type": "blob",
          "size": 0.4619140625,
          "content": "# Open MPI Hacking / Developer's Guide\n\n## Overview\n\nThis file is here for those who are building/exploring OMPI in its\nsource code form, most likely through a developer's tree (i.e., a\nGit clone).\n\n## This file has moved\n\nPlease see the content of this file in its new location:\nhttps://docs.open-mpi.org/en/main/developers/\n\nAdditionally, see\nhttps://docs.open-mpi.org/en/main/developers/prerequisites.html#sphinx\nif you want to edit and build the documentation locally.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 7.283203125,
          "content": "Most files in this release are marked with the copyrights of the\norganizations who have edited them.  The copyrights below are in no\nparticular order and generally reflect members of the Open MPI core\nteam who have contributed code to this release.  The copyrights for\ncode used under license from other parties are included in the\ncorresponding files.\n\nCopyright (c) 2004-2012 The Trustees of Indiana University and Indiana\n                        University Research and Technology\n                        Corporation.  All rights reserved.\nCopyright (c) 2004-2021 The University of Tennessee and The University\n                        of Tennessee Research Foundation.  All rights\n                        reserved.\nCopyright (c) 2004-2018 High Performance Computing Center Stuttgart,\n                        University of Stuttgart.  All rights reserved.\nCopyright (c) 2004-2008 The Regents of the University of California.\n                        All rights reserved.\nCopyright (c) 2006-2018 Los Alamos National Security, LLC.  All rights\n                        reserved.\nCopyright (c) 2006-2021 Cisco Systems, Inc.  All rights reserved.\nCopyright (c) 2006-2010 Voltaire, Inc. All rights reserved.\nCopyright (c) 2006-2021 Sandia National Laboratories. All rights reserved.\nCopyright (c) 2006-2010 Sun Microsystems, Inc.  All rights reserved.\n                        Use is subject to license terms.\nCopyright (c) 2006-2021 The University of Houston. All rights reserved.\nCopyright (c) 2006-2009 Myricom, Inc.  All rights reserved.\nCopyright (c) 2007-2017 UT-Battelle, LLC. All rights reserved.\nCopyright (c) 2007-2021 IBM Corporation.  All rights reserved.\nCopyright (c) 1998-2005 Forschungszentrum Juelich, Juelich Supercomputing\n                        Centre, Federal Republic of Germany\nCopyright (c) 2005-2008 ZIH, TU Dresden, Federal Republic of Germany\nCopyright (c) 2007      Evergrid, Inc. All rights reserved.\nCopyright (c) 2008-2016 Chelsio, Inc.  All rights reserved.\nCopyright (c) 2008-2009 Institut National de Recherche en\n                        Informatique.  All rights reserved.\nCopyright (c) 2007      Lawrence Livermore National Security, LLC.\n                        All rights reserved.\nCopyright (c) 2007-2019 Mellanox Technologies.  All rights reserved.\nCopyright (c) 2006-2010 QLogic Corporation.  All rights reserved.\nCopyright (c) 2008-2017 Oak Ridge National Labs.  All rights reserved.\nCopyright (c) 2006-2012 Oracle and/or its affiliates.  All rights reserved.\nCopyright (c) 2009-2015 Bull SAS.  All rights reserved.\nCopyright (c) 2010      ARM ltd.  All rights reserved.\nCopyright (c) 2016      ARM, Inc.  All rights reserved.\nCopyright (c) 2010-2011 Alex Brick <bricka@ccs.neu.edu>.  All rights reserved.\nCopyright (c) 2012      The University of Wisconsin-La Crosse. All rights reserved.\nCopyright (c) 2013-2020 Intel, Inc. All rights reserved.\nCopyright (c) 2011-2021 NVIDIA Corporation.  All rights reserved.\nCopyright (c) 2016-2018 Broadcom Limited.  All rights reserved.\nCopyright (c) 2011-2021 Fujitsu Limited.  All rights reserved.\nCopyright (c) 2014-2015 Hewlett-Packard Development Company, LP.  All\n                        rights reserved.\nCopyright (c) 2013-2021 Research Organization for Information Science (RIST).\n                        All rights reserved.\nCopyright (c) 2017-2021 Amazon.com, Inc. or its affiliates.  All Rights\n                        reserved.\nCopyright (c) 2018      DataDirect Networks. All rights reserved.\nCopyright (c) 2018-2021 Triad National Security, LLC. All rights reserved.\nCopyright (c) 2019-2021 Hewlett Packard Enterprise Development, LP.\nCopyright (c) 2020-2021 Google, LLC. All rights reserved.\nCopyright (c) 2002      University of Chicago\nCopyright (c) 2001      Argonne National Laboratory\nCopyright (c) 2020-2021 Cornelis Networks, Inc. All rights reserved.\nCopyright (c) 2021      Nanook Consulting\nCopyright (c) 2017-2019 Iowa State University Research Foundation, Inc.\n                        All rights reserved.\nCopyright (c) 2024      Advanced Micro Devices, Inc. All rights reserved.\n\n$COPYRIGHT$\n\nAdditional copyrights may follow\n\n$HEADER$\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n- Redistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n\n- Redistributions in binary form must reproduce the above copyright\n  notice, this list of conditions and the following disclaimer listed\n  in this license in the documentation and/or other materials\n  provided with the distribution.\n\n- Neither the name of the copyright holders nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nThe copyright holders provide no reassurances that the source code\nprovided does not infringe any patent, copyright, or any other\nintellectual property rights of third parties.  The copyright holders\ndisclaim any liability to any recipient for claims brought against\nrecipient by any third party for infringement of that parties\nintellectual property rights.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n----------------[Copyright from inclusion of MPICH code]----------------\n\nThe following is a notice of limited availability of the code, and disclaimer\nwhich must be included in the prologue of the code and in all source listings\nof the code.\n\nCopyright Notice\n + 2002 University of Chicago\n\nPermission is hereby granted to use, reproduce, prepare derivative works, and\nto redistribute to others.  This software was authored by:\n\nMathematics and Computer Science Division\nArgonne National Laboratory, Argonne IL 60439\n\n(and)\n\nDepartment of Computer Science\nUniversity of Illinois at Urbana-Champaign\n\n\n\t\t\t      GOVERNMENT LICENSE\n\nPortions of this material resulted from work developed under a U.S.\nGovernment Contract and are subject to the following license: the Government\nis granted for itself and others acting on its behalf a paid-up, nonexclusive,\nirrevocable worldwide license in this computer software to reproduce, prepare\nderivative works, and perform publicly and display publicly.\n\n\t\t\t\t  DISCLAIMER\n\nThis computer code material was prepared, in part, as an account of work\nsponsored by an agency of the United States Government.  Neither the United\nStates, nor the University of Chicago, nor any of their employees, makes any\nwarranty express or implied, or assumes any legal liability or responsibility\nfor the accuracy, completeness, or usefulness of any information, apparatus,\nproduct, or process disclosed, or represents that its use would not infringe\nprivately owned rights.\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 2.7216796875,
          "content": "#\n# Copyright (c) 2004-2005 The Trustees of Indiana University and Indiana\n#                         University Research and Technology\n#                         Corporation.  All rights reserved.\n# Copyright (c) 2004-2005 The University of Tennessee and The University\n#                         of Tennessee Research Foundation.  All rights\n#                         reserved.\n# Copyright (c) 2004-2009 High Performance Computing Center Stuttgart,\n#                         University of Stuttgart.  All rights reserved.\n# Copyright (c) 2004-2005 The Regents of the University of California.\n#                         All rights reserved.\n# Copyright (c) 2006-2022 Cisco Systems, Inc.  All rights reserved.\n# Copyright (c) 2012-2015 Los Alamos National Security, Inc.  All rights reserved.\n# Copyright (c) 2014-2019 Intel, Inc.  All rights reserved.\n# Copyright (c) 2017-2022 Amazon.com, Inc. or its affiliates.  All Rights reserved.\n#                         All Rights reserved.\n# Copyright (c) 2020      IBM Corporation.  All rights reserved.\n# $COPYRIGHT$\n#\n# Additional copyrights may follow\n#\n# $HEADER$\n#\n\n# There is an assumption in config/Makefile.am that config is the first\n# subdirectory in the DIST_SUBDIRS list.  If that changes, work may\n# be required.\nSUBDIRS = config contrib 3rd-party $(MCA_PROJECT_SUBDIRS) test docs\nDIST_SUBDIRS = config contrib 3rd-party $(MCA_PROJECT_DIST_SUBDIRS) test docs\nEXTRA_DIST = README.md VERSION Doxyfile LICENSE autogen.pl AUTHORS\n\ninclude examples/Makefile.include\n\ndist-hook:\n\tenv LS_COLORS= sh \"$(top_srcdir)/config/distscript.sh\" \"$(top_srcdir)\" \"$(distdir)\" \"$(OMPI_REPO_REV)\"\n\t@if test ! -s $(distdir)/AUTHORS ; then \\\n\t\techo \"AUTHORS file is empty; aborting distribution\"; \\\n\t\texit 1; \\\n\tfi\n\n# Check for common symbols.  Use a \"-hook\" to increase the odds that a\n# developer will see it at the end of their installation process.\ninstall-exec-hook:\n\t-@if test -d \"$(top_srcdir)/.git\"; then \\\n\t    $(top_srcdir)/config/find_common_syms \\\n\t        --brief \\\n\t        --top_builddir=$(top_builddir) \\\n\t        --top_srcdir=$(top_srcdir) \\\n\t        --objext=$(OBJEXT) \\\n\t        --skipdir=3rd-party ; \\\n\tfi\n\nACLOCAL_AMFLAGS = -I config\n\n# Use EXTRA_DIST and an explicit target (with a FORCE hack so that\n# it's always run) rather than a dist-hook because there's some magic\n# extra logic in Automake that will add AUTHORS to EXTRA_DIST if the\n# file exists when Automake is run.  Once we're explicit (to avoid odd\n# copy behavior), it's easier to always build AUTHORS here, rather\n# than trying to handle the EXTRA_DIST dependency from a clean repo\n# (no AUTHORS file present) and use dist-hook to run every time.\nAUTHORS: FORCE\n\t$(PERL) \"$(top_srcdir)/contrib/dist/make-authors.pl\" --skip-ok --quiet --srcdir=\"$(top_srcdir)\"\n\nFORCE:\n"
        },
        {
          "name": "Makefile.ompi-rules",
          "type": "blob",
          "size": 1.5625,
          "content": "# -*- makefile -*-\n# Copyright (c) 2008-2022 Cisco Systems, Inc.  All rights reserved.\n# Copyright (c) 2008      Sun Microsystems, Inc.  All rights reserved.\n# Copyright (c) 2020      Intel, Inc.  All rights reserved.\n# Copyright (c) 2023      Jeffrey M. Squyres.  All rights reserved.\n# $COPYRIGHT$\n#\n# Additional copyrights may follow\n#\n# $HEADER$\n#\n\n# A little verbosity magic; \"make\" will show the terse output.  \"make\n# V=1\" will show the actual commands used (just like the other\n# Automake-generated compilation/linker rules).\nV=0\n\nOMPI_V_LN_S = $(ompi__v_LN_S_$V)\nompi__v_LN_S_ = $(ompi__v_LN_S_$AM_DEFAULT_VERBOSITY)\nompi__v_LN_S_0 = @echo \"  LN_S    \" `basename $@`;\n\nOMPI_V_MKDIR = $(ompi__v_MKDIR_$V)\nompi__v_MKDIR_ = $(ompi__v_MKDIR_$AM_DEFAULT_VERBOSITY)\nompi__v_MKDIR_0 = @echo \"  MKDIR   \" $@;\n\nOMPI_V_GEN = $(ompi__v_GEN_$V)\nompi__v_GEN_ = $(ompi__v_GEN_$AM_DEFAULT_VERBOSITY)\nompi__v_GEN_0 = @echo \"  GENERATE\" $@;\n\nOMPI_V_COPYALL = $(ompi__v_COPYALL_$V)\nompi__v_COPYALL_ = $(ompi__v_COPYALL_$AM_DEFAULT_VERBOSITY)\nompi__v_COPYALL_0 = @echo \"  COPY tree $@\";\n\nOMPI_V_SPHINX_COPYRST = $(ompi__v_SPHINX_COPYRST_$V)\nompi__v_SPHINX_COPYRST_ = $(ompi__v_SPHINX_COPYRST_$AM_DEFAULT_VERBOSITY)\nompi__v_SPHINX_COPYRST_0 = @echo \"  COPY RST source files\";\n\nOMPI_V_SPHINX_HTML = $(ompi__v_SPHINX_HTML_$V)\nompi__v_SPHINX_HTML_ = $(ompi__v_SPHINX_HTML_$AM_DEFAULT_VERBOSITY)\nompi__v_SPHINX_HTML_0 = @echo \"  GENERATE HTML docs\";\n\nOMPI_V_SPHINX_MAN = $(ompi__v_SPHINX_MAN_$V)\nompi__v_SPHINX_MAN_ = $(ompi__v_SPHINX_MAN_$AM_DEFAULT_VERBOSITY)\nompi__v_SPHINX_MAN_0 = @echo \"  GENERATE man pages\";\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.275390625,
          "content": "# Open MPI\n\n[The Open MPI Project](https://www.open-mpi.org/) is an open source\nimplementation of the [Message Passing Interface (MPI)\nspecification](https://www.mpi-forum.org/docs/) that is developed and\nmaintained by a consortium of academic, research, and industry\npartners.  Open MPI is therefore able to combine the expertise,\ntechnologies, and resources from all across the High Performance\nComputing community in order to build the best MPI library available.\nOpen MPI offers advantages for system and software vendors,\napplication developers and computer science researchers.\n\n## Official documentation\n\nThe Open MPI documentation can be viewed in the following ways:\n\n1. Online at https://docs.open-mpi.org/\n1. In self-contained (i.e., suitable for local viewing, without an\n   internet connection) in official distribution tarballs under\n   `docs/_build/html/index.html`.\n\n## Building the documentation locally\n\nThe source code for Open MPI's docs can be found in the Open MPI Git\nrepository under the `docs` folder.\n\nDevelopers who clone the Open MPI Git repository will not have the\nHTML documentation and man pages by default; it must be built.\nInstructions for how to build the Open MPI documentation can be found\nhere:\nhttps://docs.open-mpi.org/en/main/developers/prerequisites.html#sphinx.\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 4.4501953125,
          "content": "# Copyright (c) 2008      Sun Microsystems, Inc.  All rights reserved.\n# Copyright (c) 2008-2019 Cisco Systems, Inc.  All rights reserved.\n# Copyright (c) 2011      NVIDIA Corporation.  All rights reserved.\n# Copyright (c) 2013      Mellanox Technologies, Inc.\n#                         All rights reserved.\n# Copyright (c) 2016-2022 IBM Corporation.  All rights reserved.\n# Copyright (c) 2017      Los Alamos National Security, LLC.  All rights\n#                         reserved.\n\n# This is the VERSION file for Open MPI, describing the precise\n# version of Open MPI in this distribution.  The various components of\n# the version number below are combined to form a single version\n# number string.\n\n# major, minor, and release are generally combined in the form\n# <major>.<minor>.<release>.\n\nmajor=5\nminor=1\nrelease=0\n\n# MPI Standard Compliance Level\nmpi_standard_version=3\nmpi_standard_subversion=1\n\n# OMPI required dependency versions.\n# List in x.y.z format.\npmix_min_version=4.2.0\nprte_min_version=3.0.0\nhwloc_min_version=2.1.0\nevent_min_version=2.0.21\nautomake_min_version=1.13.4\nautoconf_min_version=2.69.0\nlibtool_min_version=2.4.2\nflex_min_version=2.5.4\n\n# greek is generally used for alpha or beta release tags.  If it is\n# non-empty, it will be appended to the version number.  It does not\n# have to be numeric.  Common examples include: a1 (alpha release 1),\n# b1 (beta release 1), rc2 (release candidate 2).  The only\n# requirement is that it must be entirely printable ASCII characters\n# and have no white space.\n\ngreek=a1\n\n# If repo_rev is empty, then the repository version number will be\n# obtained during \"make dist\" via the \"git describe --tags --always\"\n# command, or with the date (if \"git describe\" fails) in the form of\n# \"date<date>\".\n\nrepo_rev=\n\n# If tarball_version is not empty, it is used as the version string in\n# the tarball filename, regardless of all other versions listed in\n# this file.  For example, if tarball_version is empty, the tarball\n# filename will be of the form\n# openmpi-<major>.<minor>.<release><greek>.tar.*.  However, if\n# tarball_version is not empty, the tarball filename will be of the\n# form openmpi-<tarball_version>.tar.*.\n\ntarball_version=gitclone\n\n# The date when this release was created\n\ndate=\"Unreleased developer copy\"\n\n# The shared library version of each of Open MPI's public libraries.\n# These versions are maintained in accordance with the \"Library\n# Interface Versions\" chapter from the GNU Libtool documentation.  The\n# first Open MPI release to programmatically specify these versions was\n# v1.3.4 (note that Libtool defaulted all prior releases to 0:0:0).\n# All changes in these version numbers are dictated by the Open MPI\n# release managers (not individual developers).  Notes:\n\n# 1. Since these version numbers are associated with *releases*, the\n# version numbers maintained on the Open MPI SVN trunk (and developer\n# branches) is always 0:0:0 for all libraries.\n\n# 2. The version number of libmpi refers to the public MPI interfaces.\n# It does not refer to any internal interfaces.\n\n# 3. Similar to libmpi, the version numbers of the Fortran libraries\n# refer to the public MPI interfaces.  For example, that there have\n# been typo fixes in the parameter types to mpif.h Fortran library\n# functions over time; these technically did not change the interface\n# because Fortran 77 does not link by parameter type.\n\n# 4. The ORTE and OPAL libraries will change versions when their\n# public interfaces change (as relative to the layer(s) above them).\n# None of the ORTE and OPAL interfaces are public to MPI applications,\n# but they are \"public\" within the OMPI code base and select 3rd party\n# software packages.\n\n# Version numbers are described in the Libtool current:revision:age\n# format.\n\nlibmpi_so_version=0:0:0\nlibmpi_mpifh_so_version=0:0:0\nlibmpi_usempi_tkr_so_version=0:0:0\nlibmpi_usempi_ignore_tkr_so_version=0:0:0\nlibmpi_usempif08_so_version=0:0:0\nlibopen_pal_so_version=0:0:0\nlibmpi_java_so_version=0:0:0\nliboshmem_so_version=0:0:0\nlibompitrace_so_version=0:0:0\n\n# \"Common\" components install standalone libraries that are run-time\n# linked by one or more components.  So they need to be versioned as\n# well.  Yuck; this somewhat breaks the\n# components-don't-affect-the-build-system abstraction.\n\n# OMPI layer\nlibmca_ompi_common_ompio_so_version=0:0:0\nlibmca_ompi_common_monitoring_so_version=0:0:0\n\n# OPAL layer\nlibmca_opal_common_cuda_so_version=0:0:0\nlibmca_opal_common_ofi_so_version=0:0:0\nlibmca_opal_common_sm_so_version=0:0:0\nlibmca_opal_common_ucx_so_version=0:0:0\n"
        },
        {
          "name": "autogen.pl",
          "type": "blob",
          "size": 60.212890625,
          "content": "#!/usr/bin/env perl\n#\n# Copyright (c) 2009-2022 Cisco Systems, Inc.  All rights reserved\n# Copyright (c) 2010      Oracle and/or its affiliates.  All rights reserved.\n# Copyright (c) 2013      Mellanox Technologies, Inc.\n#                         All rights reserved.\n# Copyright (c) 2013-2020 Intel, Inc.  All rights reserved.\n# Copyright (c) 2015-2024 Research Organization for Information Science\n#                         and Technology (RIST).  All rights reserved.\n# Copyright (c) 2015-2022 IBM Corporation.  All rights reserved.\n# Copyright (c) 2020      Amazon.com, Inc. or its affiliates.\n#                         All Rights reserved.\n#\n# $COPYRIGHT$\n#\n# Additional copyrights may follow\n#\n# $HEADER$\n#\n\nuse strict;\n\nuse Cwd;\nuse File::Basename;\nuse File::Find;\nuse Data::Dumper;\nuse Getopt::Long;\n\n#\n# Global variables\n#\n\n# Sentinel file to remove if we fail\nmy $sentinel;\n\n# The m4 file we'll write at the end\nmy $m4_output_file = \"config/autogen_found_items.m4\";\nmy $m4;\n# Sanity check file\nmy $topdir_file = \"opal/include/opal_config_bottom.h\";\nmy $dnl_line = \"dnl ---------------------------------------------------------------------------\";\n\n# Data structures to fill up with all the stuff we find\nmy $mca_found;\nmy $mpiext_found;\nmy @subdirs;\n\n# Command line parameters\nmy $no_3rdparty_arg = \"\";\nmy $quiet_arg = 0;\nmy $debug_arg = 0;\nmy $help_arg = 0;\nmy $platform_arg = 0;\nmy $include_arg = 0;\nmy $exclude_arg = 0;\nmy $force_arg = 0;\nmy $automake_jobs;\n\n# Include/exclude lists\nmy $include_list;\nmy $exclude_list;\n\n# Minimum versions\nmy $ompi_automake_version;\nmy $ompi_autoconf_version;\nmy $ompi_libtool_version;\n\n# Search paths\nmy $ompi_autoconf_search = \"autoconf\";\nmy $ompi_automake_search = \"automake\";\nmy $ompi_libtoolize_search = \"libtoolize;glibtoolize\";\n\n# version of packages we ship as tarballs\nmy $libevent_version=\"2.1.12-stable-ompi\";\nmy $hwloc_version=\"2.7.1\";\n\n# One-time setup\nmy $username;\nmy $hostname;\nmy $full_hostname;\n\n# Patch program\nmy $patch_prog = \"patch\";\n# Solaris \"patch\" doesn't understand unified diffs, and will cause\n# autogen.pl to hang with a \"File to patch:\" prompt. Default to Linux\n# \"patch\", but use \"gpatch\" on Solaris.\nif ($^O eq \"solaris\") {\n    $patch_prog = \"gpatch\";\n}\n\n$username = $ENV{USER} || getpwuid($>);\n$full_hostname = $ENV{HOSTNAME} || `hostname`;\nchomp($full_hostname);\n$hostname = $full_hostname;\n$hostname =~ s/^([\\w\\-]+)\\..+/\\1/;\n\n##############################################################################\n\nsub my_die {\n    unlink($sentinel)\n        if ($sentinel);\n    die @_;\n}\n\nsub my_exit {\n    my ($ret) = @_;\n    unlink($sentinel)\n        if ($sentinel && $ret != 0);\n    exit($ret);\n}\n\n##############################################################################\n\nsub verbose {\n    print @_\n        if (!$quiet_arg);\n}\n\nsub debug {\n    print @_\n        if ($debug_arg);\n}\n\nsub debug_dump {\n    my $d = new Data::Dumper([@_]);\n    $d->Purity(1)->Indent(1);\n    debug $d->Dump;\n}\n\n##############################################################################\n\nsub list_contains {\n    my $searched_string = shift;\n    foreach my $str (@_) {\n\tif ($searched_string eq $str) {\n\t    return 1;\n\t}\n    }\n    return 0;\n}\n\n##############################################################################\n\nsub read_config_params {\n    my ($filename, $dir_prefix) = @_;\n\n    my $dir = dirname($filename);\n    open(FILE, $filename) ||\n        my_die \"Can't open $filename\";\n    my $file;\n    $file .= $_\n        while(<FILE>);\n    close(FILE);\n\n    # Save all lines of the form \"foo = bar\" in a hash\n    my $ret;\n    while ($file =~ s/^\\s*(\\w+)\\s*=\\s*(.+)\\s*$//m) {\n        my $key = $1;\n        my $val = $2;\n\n        # Strip off any leading and trailing \"'s\n        $val = $1\n            if ($val =~ m/^\\\"(.+)\\\"$/);\n\n        $ret->{$key} = $val;\n    }\n\n    # Split PARAM_CONFIG_FILES into an array\n    if (exists($ret->{PARAM_CONFIG_FILES})) {\n        my @out;\n        foreach my $f (split(/\\s+/, $ret->{PARAM_CONFIG_FILES})) {\n            push(@out, \"$dir_prefix/$f\");\n        }\n        $ret->{PARAM_CONFIG_FILES} = \\@out;\n    }\n\n    debug_dump($ret);\n    return $ret;\n}\n\n##############################################################################\n\n# Process a \"subdir\", meaning that the directory isn't a component or\n# an extension; it probably just needs an autoreconf, autogen, etc.\nsub process_subdir {\n    my ($dir) = @_;\n\n    # Chdir to the subdir\n    print \"\\n=== Processing subdir: $dir\\n\";\n    my $start = Cwd::cwd();\n    my $check = chdir($dir);\n    if (0 == $check) {\n        my_die \"Could not change to $dir\\n\";\n    }\n\n    # Run an action depending on what we find in that subdir\n    if (-x \"autogen.pl\") {\n        print \"--- Found autogen.pl; running...\\n\";\n        safe_system(\"./autogen.pl\");\n    } elsif (-x \"autogen.sh\") {\n        print \"--- Found autogen.sh; running...\\n\";\n        safe_system(\"./autogen.sh\");\n    } elsif (-f \"configure.in\" || -f \"configure.ac\") {\n        print \"--- Found configure.in|ac; running autoreconf...\\n\";\n        safe_system(\"autoreconf -ivf\");\n        print \"--- Patching autotools output... :-(\\n\";\n    } else {\n        my_die \"Found subdir, but no autogen.sh or configure.in|ac to do anything\";\n    }\n\n    # Ensure that we got a good configure executable.\n    my_die \"Did not generate a \\\"configure\\\" executable in $dir.\\n\"\n        if (! -x \"configure\");\n\n    # Fix known issues in Autotools output\n    patch_autotools_output($start);\n\n    # Chdir back to where we came from\n    chdir($start);\n}\n\n##############################################################################\n\nsub process_autogen_subdirs {\n    my ($dir) = @_;\n\n    my $file = \"$dir/autogen.subdirs\";\n    if (-f $file) {\n        open(FILE, $file) || my_die \"Can't open $file\";\n        while (<FILE>) {\n            chomp;\n            $_ =~ s/#.*$//;\n            $_ =~ s/^\\s*//;\n            $_ =~ s/\\s*$//;\n            if ($_ ne \"\") {\n                print \"    Found subdir: $_ (will process later)\\n\";\n\n                # Note: there's no real technical reason to defer\n                # processing the subdirs.  It's more of an aesthetic\n                # reason -- don't interrupt the current flow of\n                # finding mca / ext (which is a nice, fast\n                # process).  Then process the subdirs (which is a slow\n                # process) all at once.\n                push(@subdirs, \"$dir/$_\");\n            }\n        }\n        close(FILE);\n    }\n}\n\n##############################################################################\n\nsub mca_process_component {\n    my ($topdir, $project, $framework, $component) = @_;\n\n    my $pname = $project->{name};\n    my $pdir = $project->{dir};\n    my $cdir = \"$topdir/$pdir/mca/$framework/$component\";\n\n    return\n        if (! -d $cdir);\n\n    # Process this directory (pretty much the same treatment as for\n    # mpiext, so it's in a sub).\n    my $found_component;\n\n    # Does this directory have a configure.m4 file?\n    if (-f \"$cdir/configure.m4\") {\n        $found_component->{\"configure.m4\"} = 1;\n        verbose \"    Found configure.m4 file\\n\";\n    }\n\n    $found_component->{\"name\"} = $component;\n\n    # Push the results onto the $mca_found hash array\n    push(@{$mca_found->{$pname}->{$framework}->{\"components\"}},\n         $found_component);\n\n    # Is there an autogen.subdirs in here?\n    process_autogen_subdirs($cdir);\n}\n\n##############################################################################\n\nsub ignored {\n    my ($dir) = @_;\n\n    # If this directory does not have .opal_ignore, or if it has a\n    # .opal_unignore that has my username in it, then add it to the\n    # list of components.\n    my $ignored = 0;\n\n    if (-f \"$dir/.opal_ignore\") {\n        $ignored = 1;\n    }\n    if (-f \"$dir/.opal_unignore\") {\n        open(UNIGNORE, \"$dir/.opal_unignore\") ||\n            my_die \"Can't open $dir/.opal_unignore file\";\n        my $unignore;\n        $unignore .= $_\n            while (<UNIGNORE>);\n        close(UNIGNORE);\n\n        $ignored = 0\n            if ($unignore =~ /^$username$/m ||\n                $unignore =~ /^$username\\@$hostname$/m ||\n                $unignore =~ /^$username\\@$full_hostname$/m);\n    }\n\n    return $ignored;\n}\n\n##############################################################################\n\nsub mca_process_framework {\n    my ($topdir, $project, $framework) = @_;\n\n    my $pname = $project->{name};\n    my $pdir = $project->{dir};\n\n    # Does this framework have a configure.m4 file?\n    my $dir = \"$topdir/$pdir/mca/$framework\";\n    if (-f \"$dir/configure.m4\") {\n        $mca_found->{$pname}->{$framework}->{\"configure.m4\"} = 1;\n        verbose \"    Found framework configure.m4 file\\n\";\n    }\n\n    # Did we exclude all components for this framework?\n    if (exists($exclude_list->{$framework}) &&\n        $exclude_list->{$framework}[0] eq \"AGEN_EXCLUDE_ALL\") {\n        verbose \"    => Excluded\\n\";\n    } else {\n        # Look for component directories in this framework\n        if (-d $dir) {\n            $mca_found->{$pname}->{$framework}->{found} = 1;\n            opendir(DIR, $dir) ||\n                my_die \"Can't open $dir directory\";\n            foreach my $d (sort(readdir(DIR))) {\n                # Skip any non-directory, \"base\", or any dir that\n                # begins with \".\"\n                next\n                    if (! -d \"$dir/$d\" || $d eq \"base\" ||\n                        substr($d, 0, 1) eq \".\");\n\n                # Skip any component that doesn't have a configure.m4\n                # or Makefile.am as we couldn't build it anyway\n                if (! -f \"$dir/$d/configure.m4\" &&\n                    ! -f \"$dir/$d/Makefile.am\" &&\n                    ! -f \"$dir/$d/configure.ac\" &&\n                    ! -f \"$dir/$d/configure.in\") {\n                     verbose \"    => No sentinel file found in $dir/$d -> Excluded\\n\";\n                     next;\n                }\n\n                verbose \"--- Found $pname / $framework / $d component\\n\";\n\n                # Skip if specifically excluded\n                if (exists($exclude_list->{$framework})) {\n                    my $tst = 0;\n                    foreach my $ck (@{$exclude_list->{$framework}}) {\n                        if ($ck eq $d) {\n                            verbose \"    => Excluded\\n\";\n                            $tst = 1;\n                            last;\n                        }\n                    }\n                    if ($tst) {\n                        next;\n                    }\n                }\n\n                # Skip if the framework is on the include list, but\n                # doesn't contain this component\n                if (exists($include_list->{$framework})) {\n                    my $tst = 0;\n                    foreach my $ck (@{$include_list->{$framework}}) {\n                        if ($ck ne $d) {\n                            verbose \"    => Not included\\n\";\n                            $tst = 1;\n                            last;\n                        }\n                    }\n                    if ($tst) {\n                        next;\n                    }\n                }\n\n                # Check ignore status\n                if (ignored(\"$dir/$d\")) {\n                    verbose \"    => Ignored (found .opal_ignore file)\\n\";\n                } else {\n                    mca_process_component($topdir, $project, $framework, $d);\n                }\n            }\n        }\n        closedir(DIR);\n    }\n}\n\n##############################################################################\n\nsub mca_generate_framework_header(\\$\\@) {\n    my ($project, @frameworks) = @_;\n    my $framework_array_output=\"\";\n    my $framework_decl_output=\"\";\n\n    foreach my $framework (@frameworks) {\n        # There is no common framework object\n        if ($framework ne \"common\") {\n            my $framework_name = \"${project}_${framework}_base_framework\";\n            $framework_array_output .= \"    &$framework_name,\\n\";\n            $framework_decl_output .= \"extern mca_base_framework_t $framework_name;\\n\";\n        }\n    }\n\n    my $ifdef_string = uc \"${project}_FRAMEWORKS_H\";\n    open(FRAMEWORKS_OUT, \">$project/include/$project/frameworks.h\");\n    printf FRAMEWORKS_OUT \"%s\", \"/*\n * This file is autogenerated by autogen.pl. Do not edit this file by hand.\n */\n#ifndef $ifdef_string\n#define $ifdef_string\n\n#include \\\"opal/mca/base/mca_base_framework.h\\\"\n\n$framework_decl_output\nstatic mca_base_framework_t *${project}_frameworks[] = {\n$framework_array_output    NULL\n};\n\n#endif /* $ifdef_string */\\n\\n\";\n    close(FRAMEWORKS_OUT);\n}\n\n##############################################################################\n\nsub mca_process_project {\n    my ($topdir, $project) = @_;\n\n    my $pname = $project->{name};\n    my $pdir = $project->{dir};\n\n    # Does this project have a configure.m4 file?\n    if (-f \"$topdir/$pdir/configure.m4\") {\n        $mca_found->{$pname}->{\"configure.m4\"} = 1;\n        verbose \"    Found $topdir/$pdir/configure.m4 file\\n\";\n    }\n\n    # Look for framework directories in this project\n    my $dir = \"$topdir/$pdir/mca\";\n    if (-d $dir) {\n        opendir(DIR, $dir) ||\n            my_die \"Can't open $dir directory\";\n        my @my_dirs = readdir(DIR);\n        @my_dirs = sort(@my_dirs);\n\n        foreach my $d (@my_dirs) {\n            # Skip any non-directory, \"base\", or any dir that begins with \".\"\n            next\n                if (! -d \"$dir/$d\" || $d eq \"base\" || substr($d, 0, 1) eq \".\");\n\n            my $framework_header = \"$dir/$d/$d.h\";\n\n            # If there's a $dir/$d/autogen.options file, read it\n            my $ao_file = \"$dir/$d/autogen.options\";\n            if (-r $ao_file) {\n                verbose \"\\n>>> Found $dir/$d/autogen.options file\\n\";\n                open(IN, $ao_file) ||\n                    die \"$ao_file present, but cannot open it\";\n                while (<IN>) {\n                    if (m/\\s*framework_header\\s*=\\s*(.+?)\\s*$/) {\n                        verbose \"    Framework header entry: $1\\n\";\n                        $framework_header = \"$dir/$d/$1\";\n                    }\n                }\n                close(IN);\n            }\n\n            # If this directory has a framework header and a base/\n            # subdirectory, or its name is \"common\", then it's a\n            # framework.\n            if (\"common\" eq $d || !$project->{need_base} ||\n                (-f $framework_header && -d \"$dir/$d/base\")) {\n                verbose \"\\n=== Found $pname / $d framework\\n\";\n                mca_process_framework($topdir, $project, $d);\n            }\n        }\n        closedir(DIR);\n    }\n}\n\n##############################################################################\n\nsub mca_run_global {\n    my ($projects) = @_;\n\n    # For each project, go find a list of frameworks, and for each of\n    # those, go find a list of components.\n    my $topdir = Cwd::cwd();\n    foreach my $p (@$projects) {\n        if (-d \"$topdir/$p->{dir}\") {\n            verbose \"\\n*** Found $p->{name} project\\n\";\n            mca_process_project($topdir, $p);\n        }\n    }\n\n    # Debugging output\n    debug_dump($mca_found);\n\n    # Save (just) the list of MCA projects in the m4 file\n    my $str;\n    foreach my $p (@$projects) {\n        my $pname = $p->{name};\n        # Check if this project is an MCA project (contains MCA framework)\n        if (exists($mca_found->{$pname})) {\n            $str .= \"$p->{name}, \";\n        }\n    }\n    $str =~ s/, $//;\n    $m4 .= \"\\ndnl List of MCA projects found by autogen.pl\nm4_define([mca_project_list], [$str])\\n\";\n\n    #-----------------------------------------------------------------------\n\n    $m4 .= \"\\n$dnl_line\n$dnl_line\n$dnl_line\n\ndnl MCA information\\n\";\n\n    # Array for all the m4_includes that we'll need to pick up the\n    # configure.m4's.\n    my @includes;\n\n    # Next, for each project, write the list of frameworks\n    foreach my $p (@$projects) {\n\n        my $pname = $p->{name};\n        my $pdir = $p->{dir};\n\n        if (exists($mca_found->{$pname})) {\n            my $frameworks_comma;\n\n            # Does this project have a configure.m4 file?\n            push(@includes, \"$pdir/configure.m4\")\n                if (exists($mca_found->{$p}->{\"configure.m4\"}));\n\n            # Print out project-level info\n            my @mykeys = keys(%{$mca_found->{$pname}});\n            @mykeys = sort(@mykeys);\n\n            # Ensure that the \"common\" framework is listed first\n            # (if it exists)\n            my @tmp;\n            push(@tmp, \"common\")\n                if (grep(/common/, @mykeys));\n            foreach my $f (@mykeys) {\n                push(@tmp, $f)\n                    if ($f ne \"common\");\n            }\n            @mykeys = @tmp;\n\n            foreach my $f (@mykeys) {\n                $frameworks_comma .= \", $f\";\n\n                # Does this framework have a configure.m4 file?\n                push(@includes, \"$pdir/mca/$f/configure.m4\")\n                    if (exists($mca_found->{$pname}->{$f}->{\"configure.m4\"}));\n\n                # This framework does have a Makefile.am (or at least,\n                # it should!)\n                my_die \"Missing $pdir/mca/$f/Makefile.am\"\n                    if (! -f \"$pdir/mca/$f/Makefile.am\");\n            }\n            $frameworks_comma =~ s/^, //;\n\n            &mca_generate_framework_header($pname, @mykeys);\n\n            $m4 .= \"$dnl_line\n\ndnl Frameworks in the $pname project and their corresponding directories\nm4_define([mca_${pname}_framework_list], [$frameworks_comma])\n\n\";\n\n            # Print out framework-level info\n            foreach my $f (@mykeys) {\n                my $components;\n                my $m4_config_component_list;\n                my $no_config_component_list;\n\n                # Troll through each of the found components\n                foreach my $comp (@{$mca_found->{$pname}->{$f}->{components}}) {\n                    my $c = $comp->{name};\n                    $components .= \"$c \";\n\n                    # Does this component have a configure.m4 file?\n                    if (exists($comp->{\"configure.m4\"})) {\n                        push(@includes, \"$pdir/mca/$f/$c/configure.m4\");\n                        $m4_config_component_list .= \", $c\";\n                    } else {\n                        $no_config_component_list .= \", $c\";\n                    }\n                }\n                $m4_config_component_list =~ s/^, //;\n                $no_config_component_list =~ s/^, //;\n\n                $m4 .= \"dnl Components in the $pname / $f framework\nm4_define([mca_${pname}_${f}_m4_config_component_list], [$m4_config_component_list])\nm4_define([mca_${pname}_${f}_no_config_component_list], [$no_config_component_list])\n\n\";\n            }\n        }\n    }\n\n    # List out all the m4_include\n    $m4 .= \"$dnl_line\n\ndnl List of configure.m4 files to include\\n\";\n    foreach my $i (@includes) {\n        $m4 .= \"m4_include([$i])\\n\";\n    }\n}\n\n##############################################################################\n\nsub mpiext_process_extension {\n    my ($topdir, $ext_prefix, $extdir) = @_;\n\n    my $edir = \"$topdir/$ext_prefix/$extdir\";\n    return\n        if (! -d $edir);\n\n    # Process this directory (pretty much the same treatment as for\n    # MCA components, so it's in a sub).\n    my $found_ext;\n\n    $found_ext->{\"name\"} = $extdir;\n\n    # Push the results onto the hash array\n    push(@{$mpiext_found}, $found_ext);\n\n    # Is there an autogen.subdirs in here?\n    process_autogen_subdirs($edir);\n}\n\n##############################################################################\n\nsub mpiext_run_global {\n    my ($ext_prefix) = @_;\n\n    my $topdir = Cwd::cwd();\n\n    my $dir = \"$topdir/$ext_prefix\";\n    opendir(DIR, $dir) ||\n        my_die \"Can't open $dir directory\";\n    foreach my $d (sort(readdir(DIR))) {\n        # Skip any non-directory, \"base\", or any dir that begins with \".\"\n        next\n            if (! -d \"$dir/$d\" || $d eq \"base\" || substr($d, 0, 1) eq \".\");\n\n        # If this directory has a configure.m4, then it's an\n        # extension.\n        if (-f \"$dir/$d/configure.m4\") {\n            verbose \"=== Found $d MPI extension\";\n\n            # Check ignore status\n            if (ignored(\"$dir/$d\")) {\n                verbose \" (ignored)\\n\";\n            } else {\n                verbose \"\\n\";\n                mpiext_process_extension($topdir, $ext_prefix, $d);\n            }\n        }\n    }\n    closedir(DIR);\n    debug_dump($mpiext_found);\n\n    #-----------------------------------------------------------------------\n\n    $m4 .= \"\\n$dnl_line\n$dnl_line\n$dnl_line\n\ndnl Open MPI extensions information\n$dnl_line\\n\\n\";\n\n    # Array for all the m4_includes that we'll need to pick up the\n    # configure.m4's.\n    my @includes;\n    my $m4_config_ext_list;\n\n    # Troll through each of the found exts\n    foreach my $ext (@{$mpiext_found}) {\n        my $e = $ext->{name};\n        push(@includes, \"$ext_prefix/$e/configure.m4\");\n        $m4_config_ext_list .= \", $e\";\n    }\n\n    $m4_config_ext_list =~ s/^, //;\n\n    # List the M4 and no configure exts\n    $m4 .= \"dnl List of all MPI extensions\nm4_define([ompi_mpiext_list], [$m4_config_ext_list])\\n\";\n    # List out all the m4_include\n    $m4 .= \"\\ndnl List of configure.m4 files to include\\n\";\n    foreach my $i (@includes) {\n        $m4 .= \"m4_include([$i])\\n\";\n    }\n}\n\n##############################################################################\n# Find and remove stale files\n\nsub find_and_delete {\n    foreach my $file (@_) {\n        my $removed = 0;\n        if (-f $file) {\n            unlink($file);\n            $removed = 1;\n        }\n        if (-f \"config/$file\") {\n            unlink(\"config/$file\");\n            $removed = 1;\n        }\n        debug \"    Removed stale copy of $file\\n\"\n            if ($removed);\n    }\n}\n\n##############################################################################\n# Find a specific executable and ensure that it is a recent enough\n# version.\n\nsub find_and_check {\n    my ($app, $app_name, $req_version) = @_;\n\n    my @search_path = split(/;/, $app_name);\n    my @min_version = split(/\\./, $req_version);\n    my @versions_found = ();\n\n    foreach (@search_path) {\n        verbose \"   Searching for $_\\n\";\n        my $version = `$_ --version`;\n        if (!defined($version)) {\n            verbose \"  $_ not found\\n\";\n            next;\n        }\n\n\t# Matches a version string with 1 or more parts possibly prefixed with a letter (ex:\n\t# v2.2) or followed by a letter (ex: 2.2.6b). This regex assumes there is a space\n\t# before the version string and that the version is ok if there is no version.\n\tif (!($version =~ m/\\s[vV]?(\\d[\\d\\.]*\\w?)/m)) {\n\t    verbose \"  WARNING: $_ does not appear to support --version. Assuming it is ok\\n\";\n\n\t    return;\n\t}\n\n\t$version = $1;\n\n        verbose \"     Found $_ version $version; checking version...\\n\";\n        push(@versions_found, $version);\n\n        my @parts = split(/\\./, $version);\n        my $i = 0;\n        # Check every component of the version number\n        while ($i <= $#min_version) {\n            verbose \"       Found version component $parts[$i] -- need $min_version[$i]\\n\";\n\n            # Check to see if there are any characters (!) in the\n            # version number (e.g., Libtool's \"2.2.6b\" -- #%@#$%!!!).\n            # Do separate comparisons between the number and any\n            # trailing digits.  You can't just \"lt\" compare the whole\n            # string because \"10 lt 2b\" will return true.  #@$@#$#@$\n            # Libtool!!\n            $parts[$i] =~ m/(\\d+)([a-z]*)/i;\n            my $pn = $1;\n            my $pa = $2;\n            $min_version[$i] =~ m/(\\d+)([a-z]*)/i;\n            my $mn = $1;\n            my $ma = $2;\n\n            # If the version is higher, we're done.\n            if ($pn > $mn) {\n                verbose \"     ==> ACCEPTED\\n\";\n                return;\n            }\n            # If the version is lower, we're done.\n            elsif ($pn < $mn ||\n                ($pn == $mn && $pa lt $ma)) {\n                verbose \"     ==> Too low!  Skipping this version\\n\";\n                last;\n            }\n\n            # If the version was equal, keep checking.\n            ++$i;\n        }\n\n        # If we found a good version, return.\n        if ($i > $#min_version) {\n            verbose \"     ==> ACCEPTED\\n\";\n            return;\n        }\n    }\n\n    # if no acceptable version found, reject it\n    print \"\n=================================================================\nI could not find a recent enough copy of $app.\nI need at least $req_version, but only found the following versions:\\n\\n\";\n\n    my $i = 0;\n    foreach (@search_path) {\n        print \"    $_: $versions_found[$i]\\n\";\n        $i++;\n    }\n\n    print \"\\nI am gonna abort.  :-(\n\nPlease make sure you are using at least the following versions of the\ntools:\n\n    GNU Autoconf: $ompi_autoconf_version\n    GNU Automake: $ompi_automake_version\n    GNU Libtool: $ompi_libtool_version\n=================================================================\\n\";\n    my_exit(1);\n}\n\n##############################################################################\n\nsub safe_system {\n    print \"Running: \" . join(/ /, @_) . \"\\n\";\n    my $ret = system(@_);\n    $ret >>= 8;\n    if (0 != $ret) {\n        print \"Command failed: @_\\n\";\n        my_exit($ret);\n    }\n    $ret;\n}\n\n##############################################################################\n\nsub patch_autotools_output {\n    my ($topdir) = @_;\n\n    # Set indentation string for verbose output depending on current directory.\n    my $indent_str = \"    \";\n    if ($topdir eq \".\") {\n        $indent_str = \"=== \";\n    }\n\n    # Patch ltmain.sh error for PGI version numbers.  Redirect stderr to\n    # /dev/null because this patch is only necessary for some versions of\n    # Libtool (e.g., 2.2.6b); it'll [rightfully] fail if you have a new\n    # enough Libtool that doesn't need this patch.  But don't alarm the\n    # user and make them think that autogen failed if this patch fails --\n    # make the errors be silent.\n    # Also patch ltmain.sh for NAG compiler\n    if (-f \"config/ltmain.sh\") {\n        verbose \"$indent_str\".\"Patching PGI compiler version numbers in ltmain.sh\\n\";\n        system(\"$patch_prog -N -p0 < $topdir/config/ltmain_pgi_tp.diff >/dev/null 2>&1\");\n        unlink(\"config/ltmain.sh.rej\");\n\n        verbose \"$indent_str\".\"Patching \\\"-pthread\\\" option for NAG compiler in ltmain.sh\\n\";\n        system(\"$patch_prog -N -p0 < $topdir/config/ltmain_nag_pthread.diff >/dev/null 2>&1\");\n        unlink(\"config/ltmain.sh.rej\");\n    }\n\n    # If there's no configure script, there's nothing else to do.\n    return\n        if (! -f \"configure\");\n    my @verbose_out;\n\n    # Total ugh.  We have to patch the configure script itself.  See below\n    # for explanations why.\n    open(IN, \"configure\") || my_die \"Can't open configure\";\n    my $c;\n    $c .= $_\n        while(<IN>);\n    close(IN);\n    my $c_orig = $c;\n\n    # LT <=2.2.6b need to be patched for the PGI 10.0 fortran compiler\n    # name (pgfortran).  The following comes from the upstream LT patches:\n    # http://lists.gnu.org/archive/html/libtool-patches/2009-11/msg00012.html\n    # http://lists.gnu.org/archive/html/bug-libtool/2009-11/msg00045.html\n    # Note that that patch is part of Libtool (which is not in this OMPI\n    # source tree); we can't fix it.  So all we can do is patch the\n    # resulting configure script.  :-(\n    push(@verbose_out, $indent_str . \"Patching configure for Libtool PGI 10 fortran compiler name\\n\");\n    $c =~ s/gfortran g95 xlf95 f95 fort ifort ifc efc pgf95 lf95 ftn/gfortran g95 xlf95 f95 fort ifort ifc efc pgfortran nvfortran pgf95 lf95 ftn/g;\n    $c =~ s/pgcc\\* \\| pgf77\\* \\| pgf90\\* \\| pgf95\\*\\)/pgcc* | pgf77* | pgf90* | pgf95* | pgfortran* | nvfortran*)/g;\n    $c =~ s/pgf77\\* \\| pgf90\\* \\| pgf95\\*\\)/pgf77* | pgf90* | pgf95* | pgfortran* | nvfortran*)/g;\n\n    # Similar issue as above -- the PGI 10 version number broke <=LT\n    # 2.2.6b's version number checking regexps.  Again, we can't fix the\n    # Libtool install; all we can do is patch the resulting configure\n    # script.  :-( The following comes from the upstream patch:\n    # http://lists.gnu.org/archive/html/libtool-patches/2009-11/msg00016.html\n    push(@verbose_out, $indent_str . \"Patching configure for Libtool PGI version number regexps\\n\");\n    $c =~ s/\\*pgCC\\\\ \\[1-5\\]\\* \\| \\*pgcpp\\\\ \\[1-5\\]\\*/*pgCC\\\\ [1-5]\\.* | *pgcpp\\\\ [1-5]\\.*/g;\n\n    # Similar issue as above -- fix the case statements that handle the Sun\n    # Fortran version strings.\n    #\n    # Note: we have to use octal escapes to match '*Sun\\ F*) and the\n    # four succeeding lines in the bourne shell switch statement.\n    #   \\ = 134\n    #   ) = 051\n    #   * = 052\n    #\n    # Below is essentially an upstream patch for Libtool which we want\n    # made available to Open MPI users running older versions of Libtool\n\n    foreach my $tag ((\"\", \"_FC\")) {\n\n        # We have to change the search pattern and substitution on each\n        # iteration to take into account the tag changing\n        my $search_string = '# icc used to be incompatible with GCC.\\n\\s+' .\n                            '# ICC 10 doesn\\047t accept -KPIC any more.\\n.*\\n\\s+' .\n\t                    \"lt_prog_compiler_wl${tag}=\";\n        my $replace_string = \"# Flang compiler\n      *flang*)\n\tlt_prog_compiler_wl${tag}='-Wl,'\n\tlt_prog_compiler_pic${tag}='-fPIC -DPIC'\n\tlt_prog_compiler_static${tag}='-static'\n        ;;\n      # icc used to be incompatible with GCC.\n      # ICC 10 doesn't accept -KPIC any more.\n      icc* | ifort*)\n\tlt_prog_compiler_wl${tag}=\";\n\n        push(@verbose_out, $indent_str . \"Patching configure for flang Fortran ($tag)\\n\");\n        $c =~ s/$search_string/$replace_string/;\n    }\n\n    foreach my $tag ((\"\", \"_FC\")) {\n\n        # We have to change the search pattern and substitution on each\n        # iteration to take into account the tag changing\n        my $search_string = '\\052Sun\\134 F\\052.*\\n.*\\n\\s+' .\n            \"lt_prog_compiler_pic${tag}\" . '.*\\n.*\\n.*\\n.*\\n';\n        my $replace_string = \"\n        *Sun\\\\ Ceres\\\\ Fortran* | *Sun*Fortran*\\\\ [[1-7]].* | *Sun*Fortran*\\\\ 8.[[0-3]]*)\n          # Sun Fortran 8.3 passes all unrecognized flags to the linker\n          lt_prog_compiler_pic${tag}='-KPIC'\n          lt_prog_compiler_static${tag}='-Bstatic'\n          lt_prog_compiler_wl${tag}=''\n          ;;\n        *Sun\\\\ F* | *Sun*Fortran*)\n          lt_prog_compiler_pic${tag}='-KPIC'\n          lt_prog_compiler_static${tag}='-Bstatic'\n          lt_prog_compiler_wl${tag}='-Qoption ld '\n          ;;\n\";\n\n        push(@verbose_out, $indent_str . \"Patching configure for Sun Studio Fortran version strings ($tag)\\n\");\n        $c =~ s/$search_string/$replace_string/;\n    }\n\n    foreach my $tag ((\"\", \"_FC\")) {\n\n        # We have to change the search pattern and substitution on each\n        # iteration to take into account the tag changing\n        my $search_string = 'lf95\\052.*# Lahey Fortran 8.1\\n\\s+' .\n            \"whole_archive_flag_spec${tag}=\" . '\\n\\s+' .\n            \"tmp_sharedflag='--shared' ;;\" . '\\n\\s+' .\n            'xl';\n        my $replace_string = \"lf95*)\t\t\t\t# Lahey Fortran 8.1\n\t  whole_archive_flag_spec${tag}=\n\t  tmp_sharedflag='--shared' ;;\n\tnagfor*)\t\t\t# NAGFOR 5.3\n\t  tmp_sharedflag='-Wl,-shared' ;;\n\txl\";\n\n        push(@verbose_out, $indent_str . \"Patching configure for NAG compiler #1 ($tag)\\n\");\n        $c =~ s/$search_string/$replace_string/;\n\n        # Newer versions of Libtool have the previous patch already. Therefore,\n        # we add the support for convenience libraries separately\n        my $search_string = \"whole_archive_flag_spec${tag}=\" . '\\n\\s+' .\n            \"tmp_sharedflag='--shared' ;;\" . '\\n\\s+' .\n            'nagfor\\052.*# NAGFOR 5.3\\n\\s+' .\n            \"tmp_sharedflag='-Wl,-shared' ;;\" . '\\n\\s+' .\n            'xl';\n        my $replace_string = \"whole_archive_flag_spec${tag}=\n\t  tmp_sharedflag='--shared' ;;\n        nagfor*)                        # NAGFOR 5.3\n          whole_archive_flag_spec${tag}='\\$wl--whole-archive`for conv in \\$convenience\\\\\\\"\\\\\\\"; do test  -n \\\\\\\"\\$conv\\\\\\\" && new_convenience=\\\\\\\"\\$new_convenience,\\$conv\\\\\\\"; done; func_echo_all \\\\\\\"\\$new_convenience\\\\\\\"` \\$wl--no-whole-archive'\n          compiler_needs_object=yes\n          tmp_sharedflag='-Wl,-shared' ;;\n\txl\";\n\n        push(@verbose_out, $indent_str . \"Patching configure for NAG compiler #2 ($tag)\\n\");\n        $c =~ s/$search_string/$replace_string/;\n    }\n\n    # Oracle has apparently begun (as of 12.5-beta) removing the \"Sun\" branding.\n    # So this patch (cumulative over the previous one) is required.\n    push(@verbose_out, $indent_str . \"Patching configure for Oracle Studio Fortran version strings\\n\");\n    $c =~ s/\\*Sun\\*Fortran\\*\\)/*Sun*Fortran* | *Studio*Fortran*)/g;\n    $c =~ s/\\*Sun\\\\ F\\*\\)(.*\\n\\s+tmp_sharedflag=)/*Sun\\\\ F* | *Studio*Fortran*)$1/g;\n\n    # See http://git.savannah.gnu.org/cgit/libtool.git/commit/?id=v2.2.6-201-g519bf91 for details\n    # Note that this issue was fixed in LT 2.2.8, however most distros are still using 2.2.6b\n\n    push(@verbose_out, $indent_str . \"Patching configure for IBM xlf libtool bug\\n\");\n    $c =~ s/(\\$LD -shared \\$libobjs \\$deplibs \\$)compiler_flags( -soname \\$soname)/$1linker_flags$2/g;\n\n    #Check if we are using a recent enough libtool that supports PowerPC little endian\n    if(index($c, 'powerpc64le-*linux*)') == -1) {\n        push(@verbose_out, $indent_str . \"Patching configure for PowerPC little endian support\\n\");\n        my $replace_string = \"x86_64-*kfreebsd*-gnu|x86_64-*linux*|powerpc*-*linux*|\";\n        $c =~ s/x86_64-\\*kfreebsd\\*-gnu\\|x86_64-\\*linux\\*\\|ppc\\*-\\*linux\\*\\|powerpc\\*-\\*linux\\*\\|/$replace_string/g;\n        $replace_string =\n        \"powerpc64le-*linux*)\\n\\t    LD=\\\"\\${LD-ld} -m elf32lppclinux\\\"\\n\\t    ;;\\n\\t  powerpc64-*linux*)\";\n        $c =~ s/ppc64-\\*linux\\*\\|powerpc64-\\*linux\\*\\)/$replace_string/g;\n        $replace_string =\n        \"powerpcle-*linux*)\\n\\t    LD=\\\"\\${LD-ld} -m elf64lppc\\\"\\n\\t    ;;\\n\\t  powerpc-*linux*)\";\n        $c =~ s/ppc\\*-\\*linux\\*\\|powerpc\\*-\\*linux\\*\\)/$replace_string/g;\n    }\n\n    # Fix consequence of broken libtool.m4\n    # see http://lists.gnu.org/archive/html/bug-libtool/2015-07/msg00002.html and\n    # https://github.com/open-mpi/ompi/issues/751\n    push(@verbose_out, $indent_str . \"Patching configure for -L/-R libtool.m4 bug\\n\");\n    # patch for libtool < 2.4.3\n    $c =~ s/# Some compilers place space between \"-\\{L,R\\}\" and the path.\\n       # Remove the space.\\n       if test \\$p = \\\"-L\\\" \\|\\|/# Some compilers place space between \"-\\{L,-l,R\\}\" and the path.\\n       # Remove the spaces.\\n       if test \\$p = \\\"-L\\\" \\|\\|\\n          test \\$p = \\\"-l\\\" \\|\\|/g;\n    # patch for libtool >= 2.4.3\n    $c =~ s/# Some compilers place space between \"-\\{L,R\\}\" and the path.\\n       # Remove the space.\\n       if test x-L = \\\"\\$p\\\" \\|\\|\\n          test x-R = \\\"\\$p\\\"\\; then/# Some compilers place space between \"-\\{L,-l,R\\}\" and the path.\\n       # Remove the spaces.\\n       if test x-L = \\\"x\\$p\\\" \\|\\|\\n          test x-l = \\\"x\\$p\\\" \\|\\|\\n          test x-R = \\\"x\\$p\\\"\\; then/g;\n\n    # Fix OS X Big Sur (11.0.x) support\n    # From https://lists.gnu.org/archive/html/libtool-patches/2020-06/msg00001.html\n    push(@verbose_out, $indent_str . \"Patching configure for MacOS Big Sur libtool.m4 bug\\n\");\n    # Some versions of Libtool use ${wl} consistently, but others did\n    # not (e.g., they used $wl).  Make the regexp be able to handle\n    # both.  Additionally, the case string searching for 10.[012]*\n    # changed over time.  So make sure it can handle both of the case\n    # strings that we're aware of.\n    my $WL = '(\\$\\{wl\\}|\\$wl)';\n    my $SOMETIMES = '(\\[,.\\])*';\n    my $search_string = 'darwin\\*\\) # darwin 5.x on\n      # if running on 10.5 or later, the deployment target defaults\n      # to the OS version, if on x86, and 10.4, the deployment\n      # target defaults to 10.4. Don\\'t you love it\\?\n      case \\$\\{MACOSX_DEPLOYMENT_TARGET-10.0\\},\\$host in\n\t10.0,\\*86\\*-darwin8\\*\\|10.0,\\*-darwin\\[91\\]\\*\\)\n\t  _lt_dar_allow_undefined=\\'' . $WL . '-undefined ' . $WL . 'dynamic_lookup\\' ;;\n\t10.\\[012\\]' . $SOMETIMES . '\\*\\)\n\t  _lt_dar_allow_undefined=\\'' . $WL . '-flat_namespace ' . $WL . '-undefined ' . $WL . 'suppress\\' ;;\n\t10.\\*\\)';\n    my $replace_string = 'darwin*)\n      # Open MPI patched for Darwin / MacOS Big Sur.  See\n      # http://lists.gnu.org/archive/html/bug-libtool/2015-07/msg00001.html\n      case ${MACOSX_DEPLOYMENT_TARGET},$host in\n      10.[012],*|,*powerpc*)\n\t  _lt_dar_allow_undefined=\\'${wl}-flat_namespace ${wl}-undefined ${wl}suppress\\' ;;\n      *)';\n    $c =~ s/$search_string/$replace_string/g;\n\n    # Fix ifort support on OSX\n    # see https://ntq1982.github.io/files/20200621.html\n    $search_string = 'case \\$cc_basename in\n      nagfor\\*\\)\n        # NAG Fortran compiler\n        lt_prog_compiler_wl_FC=\\'-Wl,-Wl,,\\'\n        lt_prog_compiler_pic_FC=\\'-PIC\\'\n        lt_prog_compiler_static_FC=\\'-Bstatic\\'\n        ;;';\n    $replace_string = \"case \\$cc_basename in\n      icc* | ifort*)\n        #Intel Fortran compiler\n        lt_prog_compiler_wl_FC='-Wl,'\n        lt_prog_compiler_pic_FC='-fno-common -PIC'\n        lt_prog_compiler_static_FC=''\n        ;;\n      nagfor*)\n        # NAG Fortran compiler\n        lt_prog_compiler_wl_FC='-Wl,-Wl,,'\n        lt_prog_compiler_pic_FC='-PIC'\n        lt_prog_compiler_static_FC='-Bstatic'\n        ;;\";\n    $c =~ s/$search_string/$replace_string/g;\n\n    $c =~ s/for ac_prog in gfortran f95 fort xlf95 ifort ifc efc pgfortran pgf95 lf95 f90 xlf90 pgf90 epcf90 nagfor/for ac_prog in gfortran f95 fort xlf95 ifort ifc efc pgfortran pgf95 lf95 f90 xlf90 pgf90 epcf90 nagfor nvfortran/g;\n    foreach my $tag ((\"\", \"_FC\")) {\n        $search_string = 'tcc\\*\\)\n\t# Fabrice Bellard et al\\'s Tiny C Compiler\n\tlt_prog_compiler_wl'.\"${tag}\".'=\\'-Wl,\\'\n\tlt_prog_compiler_pic'.\"${tag}\".'=\\'-fPIC\\'\n\tlt_prog_compiler_static'.\"${tag}\".'=\\'-static\\'\n\t;;';\n        $replace_string = \"tcc*)\n        # Fabrice Bellard et al's Tiny C Compiler\n        lt_prog_compiler_wl${tag}='-Wl,'\n        lt_prog_compiler_pic${tag}='-fPIC'\n        lt_prog_compiler_static${tag}='-static'\n        ;;\n    nvc* | nvcc* | nvfortran*)\n\t# NVIDIA Fortran compiler\n        lt_prog_compiler_wl${tag}='-Wl,'\n        lt_prog_compiler_pic${tag}='-fPIC'\n        lt_prog_compiler_static${tag}='-Bstatic'\n        ;;\";\n        push(@verbose_out, $indent_str . \"Patching configure for NVIDIA Fortran compiler (${tag})\\n\");\n        $c =~ s/$search_string/$replace_string/g;\n    }\n\n    # Only write out verbose statements and a new configure if the\n    # configure content actually changed\n    return\n        if ($c eq $c_orig);\n    foreach my $str (@verbose_out) {\n        verbose($str);\n    }\n\n    open(OUT, \">configure.patched\") || my_die \"Can't open configure.patched\";\n    print OUT $c;\n    close(OUT);\n    # Use cp so that we preserve permissions on configure\n    safe_system(\"cp configure.patched configure\");\n    unlink(\"configure.patched\");\n}\n\nsub export_version {\n    my ($name,$version) = @_;\n    $version =~ s/[^a-zA-Z0-9,.]//g;\n    my @version_splits = split(/\\./,$version);\n    my $hex = sprintf(\"0x%04x%02x%02x\", $version_splits[0], $version_splits[1], $version_splits[2]);\n    $m4 .= \"m4_define([OMPI_${name}_MIN_VERSION], [$version])\\n\";\n    $m4 .= \"m4_define([OMPI_${name}_NUMERIC_MIN_VERSION], [$hex])\\n\";\n}\n\nsub export_mpi_version {\n    my ($name,$version) = @_;\n    $version =~ s/[^a-zA-Z0-9,.]//g;\n    $m4 .= \"m4_define([$name], [$version])\\n\";\n}\n\nsub get_and_define_min_versions() {\n\n    open(IN, \"VERSION\") || my_die \"Can't open VERSION\";\n    while (<IN>) {\n          my $line = $_;\n          my @fields = split(/=/,$line);\n          if ($fields[0] eq \"automake_min_version\") {\n              if ($fields[1] ne \"\\n\") {\n                  $ompi_automake_version = $fields[1];\n              }\n          }\n          elsif($fields[0] eq \"autoconf_min_version\") {\n              if ($fields[1] ne \"\\n\") {\n                  $ompi_autoconf_version = $fields[1];\n              }\n          }\n          elsif($fields[0] eq \"libtool_min_version\") {\n              if ($fields[1] ne \"\\n\") {\n                  $ompi_libtool_version = $fields[1];\n              }\n          }\n          elsif($fields[0] eq \"pmix_min_version\") {\n              if ($fields[1] ne \"\\n\") {\n                  export_version(\"PMIX\", $fields[1]);\n              }\n          }\n          elsif($fields[0] eq \"prte_min_version\") {\n              if ($fields[1] ne \"\\n\") {\n                  export_version(\"PRTE\", $fields[1]);\n              }\n          }\n          elsif($fields[0] eq \"hwloc_min_version\") {\n              if ($fields[1] ne \"\\n\") {\n                  export_version(\"HWLOC\", $fields[1]);\n              }\n          }\n          elsif($fields[0] eq \"event_min_version\") {\n              if ($fields[1] ne \"\\n\") {\n                  export_version(\"EVENT\", $fields[1]);\n              }\n          }\n          elsif($fields[0] eq \"mpi_standard_version\") {\n              if ($fields[1] ne \"\\n\") {\n                  export_mpi_version(\"MPI_VERSION_NUM\", $fields[1]);\n              }\n          }\n          elsif($fields[0] eq \"mpi_standard_subversion\") {\n              if ($fields[1] ne \"\\n\") {\n                  export_mpi_version(\"MPI_SUBVERSION_NUM\", $fields[1]);\n              }\n          }\n    }\n    close(IN);\n}\n\nsub in_tarball {\n    my $tarball = 0;\n    open(IN, \"VERSION\") || my_die \"Can't open VERSION\";\n    # If repo_rev is not an empty string, we are in a tarball\n    while (<IN>) {\n          my $line = $_;\n          my @fields = split(/=/,$line);\n          if ($fields[0] eq \"repo_rev\") {\n              if ($fields[1] ne \"\\n\") {\n                  $tarball = 1;\n                  last;\n              }\n          }\n    }\n    close(IN);\n    return $tarball;\n}\n\n##############################################################################\n\nsub replace_config_sub_guess {\n    # This could be simpler if we could use some Perl modules for this\n    # functionality (e.g., DateTime).  But I don't want to introduce\n    # any CPAN dependencies here, so just do sometime simple, even if\n    # it's a bit laborious. Use a few private helper functions for\n    # this kind of functionality.\n\n    sub _get_timestamp {\n        my $filename = shift;\n\n        my $ret;\n        if (-x $filename) {\n            my $out = `$filename --version`;\n            $out =~ m/GNU config\\.[a-z]+ \\((.+)\\)/;\n            $ret = $1;\n        }\n\n        return $ret;\n    }\n\n    sub _split_timestamp {\n        my $ts = shift;\n\n        $ts =~ m/(\\d+)-(\\d+)-(\\d+)/;\n        return $1, $2, $3;\n    }\n\n    # Returns true if timestamp $a > timestamp $b.\n    sub _timestamp_gt {\n        my ($a, $b) = @_;\n\n        my ($year_a, $month_a, $day_a) = _split_timestamp($a);\n        my ($year_b, $month_b, $day_b) = _split_timestamp($b);\n\n        # Don't try to be clever -- just do a simple set of explicit\n        # comparisons.\n        if ($year_a > $year_b) {\n            return 1;\n        } elsif ($year_a < $year_b) {\n            return 0;\n        } else {\n            if ($month_a > $month_b) {\n                return 1;\n            } elsif ($month_a < $month_b) {\n                return 0;\n            } else {\n                if ($day_a > $day_b) {\n                    return 1;\n                } else {\n                    return 0;\n                }\n            }\n        }\n    }\n\n    my ($topdir) = @_;\n\n    # Find the stashed known-good files, and get their version\n    # timestamps.\n    my $cached_dir = \"$topdir/config/from-savannah\";\n    my @files = qw/config.guess config.sub/;\n    my %known_good_timestamps;\n    foreach my $file (@files) {\n        my $filename = \"$cached_dir/upstream-$file\";\n        my_die(\"Cannot find $filename\")\n            if (! -f $filename);\n\n        my $ts = _get_timestamp($filename);\n        $known_good_timestamps{$file} = $ts;\n    }\n\n    # Find all config.guess/config.sub files in the tree.  If their\n    # versions are older than the stashed known-good files, update\n    # them from the stash.\n    my @files;\n    File::Find::find(sub {\n        push(@files, $File::Find::name)\n            if ($_ eq \"config.guess\" ||\n                $_ eq \"config.sub\") }, $topdir);\n\n    foreach my $file (@files) {\n        # Skip anything in the 3rd-party tree\n        next\n            if ($file =~ /\\/3rd-party\\//);\n\n        my $base = basename($file);\n        my $ts = _get_timestamp($file);\n        if (_timestamp_gt($known_good_timestamps{$base}, $ts)) {\n            print(\"=== Replacing $file with newer version\\n\");\n            safe_system(\"cp -f $cached_dir/upstream-$base $file\");\n        }\n    }\n}\n\n##############################################################################\n##############################################################################\n## main - do the real work...\n##############################################################################\n##############################################################################\n\n# Command line parameters\n\nmy $ok = Getopt::Long::GetOptions(\"no-3rdparty=s\" => \\$no_3rdparty_arg,\n                                  \"quiet|q\" => \\$quiet_arg,\n                                  \"debug|d\" => \\$debug_arg,\n                                  \"help|h\" => \\$help_arg,\n                                  \"platform=s\" => \\$platform_arg,\n                                  \"include=s\" => \\$include_arg,\n                                  \"exclude=s\" => \\$exclude_arg,\n                                  \"force|f\" => \\$force_arg,\n                                  \"jobs|j=i\" => \\$automake_jobs,\n    );\n\nif (!$ok || $help_arg) {\n    print \"Invalid command line argument.\\n\\n\"\n        if (!$ok);\n    print \"Options:\n  --no-3rdparty <package>       Do not build the listed 3rd-party package (comma separtated list)\n  --quiet | -q                  Do not display normal verbose output\n  --debug | -d                  Output lots of debug information\n  --help | -h                   This help list\n  --platform | -p               Specify a platform file to be parsed for no_build\n                                and only_build directives\n  --include | -i                Comma-separated list of framework-component pairs\n                                to be exclusively built - i.e., all other components\n                                will be ignored and only those specified will be marked\n                                to build\n  --exclude | -e                Comma-separated list of framework or framework-component\n                                to be excluded from the build\n  --force | -f                  Run even if invoked from the source tree of an expanded\n                                distribution tarball\n  --jobs | -j #                 Value to set for AUTOMAKE_JOBS\\n\";\n    my_exit($ok ? 0 : 1);\n}\n\n#---------------------------------------------------------------------------\n\n# Check for project existence\nmy $project_name_long = \"Open MPI\";\nmy $project_name_short = \"openmpi\";\n\nmy_die \"Invalid value for --jobs $automake_jobs. Must be greater than 0.\"\n    if (defined $automake_jobs && $automake_jobs <= 0);\n\nif (defined $automake_jobs) {\n    $ENV{'AUTOMAKE_JOBS'} = $automake_jobs;\n}\n\n#---------------------------------------------------------------------------\n\n$m4 = \"dnl\ndnl \\$HEADER\\$\ndnl\n$dnl_line\ndnl This file is automatically created by autogen.pl; it should not\ndnl be edited by hand!!\ndnl\ndnl Generated by $username at \" . localtime($ENV{SOURCE_DATE_EPOCH} || time) . \"\ndnl on $full_hostname.\n$dnl_line\\n\\n\";\n\n#---------------------------------------------------------------------------\n\n# Verify that we're in the OMPI root directory by checking for a token file.\n\nmy_die \"Not at the root directory of an OMPI source tree\"\n    if (! -f \"config/opal_mca.m4\");\n\nmy_die \"autogen.pl has been invoked in the source tree of an Open MPI distribution tarball; aborting...\nYou likely do not need to invoke \\\"autogen.pl\\\" -- you can probably run \\\"configure\\\" directly.\nIf you really know what you are doing, and really need to run autogen.pl, use the \\\"--force\\\" flag.\"\n    if (!$force_arg && in_tarball());\n\n# Now that we've verified that we're in the top-level OMPI directory,\n# set the sentinel file to remove if we abort.\n$sentinel = Cwd::cwd() . \"/configure\";\n\n#---------------------------------------------------------------------------\n\nmy $step = 1;\nverbose \"Open MPI autogen (buckle up!)\n\n$step. Checking tool versions\\n\\n\";\n\nget_and_define_min_versions();\n\n# Check the autotools revision levels\n&find_and_check(\"autoconf\", $ompi_autoconf_search, $ompi_autoconf_version);\n&find_and_check(\"libtool\", $ompi_libtoolize_search, $ompi_libtool_version);\n&find_and_check(\"automake\", $ompi_automake_search, $ompi_automake_version);\n\n#---------------------------------------------------------------------------\n\n++$step;\nverbose \"\\n$step. Checking for git submodules\\n\\n\";\n\nmy @enabled_3rdparty_packages = ();\nmy @disabled_3rdparty_packages = split(/,/, $no_3rdparty_arg);\n# Alias: 'openpmix' -> 'pmix'\nif (list_contains(\"openpmix\", @disabled_3rdparty_packages)) {\n    push(@disabled_3rdparty_packages, \"pmix\");\n}\n\n# Make sure we got a submodule-full clone.  If not, abort and let a\n# human figure it out.\nif (-f \".gitmodules\") {\n    # Do a quick sanity check to ensure that non-3rd-party\n    # submodules are at least present (e.g., they won't be present\n    # if you downloaded a GitHub.com-created tarball).\n    open(IN, \".gitmodules\") ||\n        die \"Can't open .gitmodules\";\n    while (<IN>) {\n        # Find \"path = \" lines\n        if (!($_ =~ m/^\\s+path = (.+)$/)) {\n            next;\n        }\n        my $path = $1;\n\n        # Only care about paths that do not include \"3rd-party\"\n        if (index($path, \"3rd-party\") != -1) {\n            next;\n        }\n\n        # Check that the path exists and is non-empty.\n        my $happy = 1;\n        if (! -d $path) {\n            $happy = 0;\n        } else {\n            opendir(DIR, $path) ||\n                my_die \"Can't open $path directory\";\n            my @files = readdir(DIR);\n            closedir(DIR);\n\n            $happy = 0\n                if ($#files < 2);\n        }\n\n        if (!$happy) {\n                print(\"    ==> ERROR: Missing\n\nThe submodule \\\"$path\\\" is missing.\n\nPerhaps you forgot to \\\"git clone --recursive ...\\\", or you need to\n\\\"git submodule update --init --recursive\\\"...?\\n\\n\");\n            exit(1);\n        }\n    }\n\n    if (-d \".git\") {\n        open(IN, \"git submodule status|\")\n            || die \"Can't run \\\"git submodule status\\\"\";\n        while (<IN>) {\n            $_ =~ m/^(.)[0-9a-f]{40}\\s+(\\S+)/;\n            my $status = $1;\n            my $path   = $2;\n\n            print(\"=== Submodule: $path\\n\");\n            if (index($path, \"pmix\") != -1 and list_contains(\"pmix\", @disabled_3rdparty_packages)) {\n                print(\"Disabled - skipping openpmix\");\n                next;\n            }\n            if (index($path, \"prrte\") != -1 and list_contains(\"prrte\", @disabled_3rdparty_packages)) {\n                print(\"Disabled - skipping prrte\");\n                next;\n            }\n\n            # Make sure the submodule is there\n            if ($status eq \"-\") {\n                print(\"    ==> ERROR: Missing\n\nThe submodule \\\"$path\\\" is missing.\n\nPerhaps you forgot to \\\"git clone --recursive ...\\\", or you need to\n\\\"git submodule update --init --recursive\\\"...?\\n\\n\");\n                exit(1);\n            }\n\n            # See if the commit in the submodule is not the same as the\n            # commit that the git submodule thinks it should be.\n            elsif ($status eq \"+\") {\n                print(\"    ==> WARNING: Submodule hash is different than upstream.\n         If this is not intentional, you may want to run:\n         \\\"git submodule update --init --recursive\\\"\\n\");\n            } else {\n                print(\"    Local hash is what is expected by the submodule (good!)\\n\");\n            }\n        }\n    }\n}\n\n#---------------------------------------------------------------------------\n\n# Save the platform file in the m4\n$m4 .= \"dnl Platform file\\n\";\n\n# Process platform arg, if provided\nif ($platform_arg) {\n    $m4 .= \"m4_define([autogen_platform_file], [$platform_arg])\\n\\n\";\n    open(IN, $platform_arg) || my_die \"Can't open $platform_arg\";\n    # Read all lines from the file\n    while (<IN>) {\n        my $line = $_;\n        my @fields = split(/=/,$line);\n        if ($fields[0] eq \"enable_mca_no_build\") {\n            if ($exclude_arg) {\n                print \"The specified platform file includes an\nenable_mca_no_build line. However, your command line\nalso contains an exclude specification. Only one of\nthese directives can be given.\\n\";\n                my_exit(1);\n            }\n            $exclude_arg = $fields[1];\n        } elsif ($fields[0] eq \"enable_mca_only_build\") {\n            if ($include_arg) {\n                print \"The specified platform file includes an\nenable_mca_only_build line. However, your command line\nalso contains an include specification. Only one of\nthese directives can be given.\\n\";\n                my_exit(1);\n            }\n            $include_arg = $fields[1];\n        }\n    }\n    close(IN);\n} else {\n    # No platform file -- write an empty list\n    $m4 .= \"m4_define([autogen_platform_file], [])\\n\\n\";\n}\n\nif ($exclude_arg) {\n    debug \"Using exclude list: $exclude_arg\";\n    my @list = split(/,/, $exclude_arg);\n    foreach (@list) {\n        my @pairs = split(/-/, $_);\n        if (exists($pairs[1])) {\n        # Remove any trailing newlines\n            chomp($pairs[1]);\n            debug \"    Adding \".$pairs[0].\"->\".$pairs[1].\" to exclude list\\n\";\n            push(@{$exclude_list->{$pairs[0]}}, $pairs[1]);\n        } else {\n            debug \"    Adding $pairs[0] to exclude list\\n\";\n            push(@{$exclude_list->{$pairs[0]}}, \"AGEN_EXCLUDE_ALL\");\n        }\n    }\n}\nif ($include_arg) {\n    debug \"Using include list: $include_arg\";\n    my @list = split(/,/, $include_arg);\n    foreach (@list) {\n        my @pairs = split(/-/, $_);\n        if (exists($pairs[1])) {\n        # Remove any trailing newlines\n            chomp($pairs[1]);\n            debug \"    Adding \".$pairs[0].\"->\".$pairs[1].\" to include list\\n\";\n            push(@{$include_list->{$pairs[0]}}, $pairs[1]);\n        }\n        # NOTE: it makes no sense to include all as that is the default\n        # so ignore that scenario here, if given\n    }\n}\n\n#---------------------------------------------------------------------------\n\n++$step;\nverbose \"\\n$step. Running template-generating scripts\\n\\n\";\n\n# These scripts generate fortran header files of different types, but\n# guaranteed to have the same value (i.e., so humans don't have to\n# maintain two sets of files, and potentially have values get out of\n# sync).\n\nmy @scripts;\npush(@scripts, \"ompi/include/mpif-values.pl\");\n\nforeach my $s (@scripts) {\n    verbose \"=== $s\\n\";\n    if (! -x $s) {\n        print \"Cannot find executable $s!\\nAborting.\\n\";\n        my_exit(1);\n    }\n    if (system($s) != 0) {\n        print \"Script failed: $s\\n\";\n        my_exit(1);\n    }\n}\n\n#---------------------------------------------------------------------------\n\n# Find projects, frameworks, components\n++$step;\nverbose \"\\n$step. Searching for projects, MCA frameworks, and MCA components\\n\";\n\nmy $ret;\n\n# Figure out if we're at the top level of the OMPI tree or not.\nif (! (-f \"VERSION\" && -f \"configure.ac\" && -f $topdir_file)) {\n    print(\"\\n\\nYou must run this script from the top-level directory of the Open MPI tree.\\n\\n\");\n    my_exit(1);\n}\n\n# Top-level projects to examine\nmy $projects;\npush(@{$projects}, { name => \"opal\", dir => \"opal\", need_base => 1 });\npush(@{$projects}, { name => \"ompi\", dir => \"ompi\", need_base => 1 });\npush(@{$projects}, { name => \"oshmem\", dir => \"oshmem\", need_base => 1 });\n\n$m4 .= \"dnl Separate m4 define for each project\\n\";\nforeach my $p (@$projects) {\n    $m4 .= \"m4_define([project_$p->{name}], [1])\\n\";\n}\n\n$m4 .= \"\\ndnl Project names\nm4_define([project_name_long], [$project_name_long])\nm4_define([project_name_short], [$project_name_short])\\n\";\n\n# Setup MCA\nmca_run_global($projects);\n\n#---------------------------------------------------------------------------\n\n# Handle 3rd-party packages\n++$step;\nverbose \"\\n$step. Setup for 3rd-party packages\\n\";\n\n$m4 .= \"\\n$dnl_line\n$dnl_line\n$dnl_line\n\ndnl 3rd-party package information\\n\";\n\n# Extract the OMPI options to exclude them when processing PMIx and PRRTE\nif ( ! (list_contains(\"pmix\", @disabled_3rdparty_packages) &&\n\tlist_contains(\"prrte\", @disabled_3rdparty_packages))) {\n    safe_system(\"./config/extract-3rd-party-configure.pl -p . -n \\\"OMPI\\\" -l > config/auto-generated-ompi-exclude.ini\");\n}\n\n# these are fairly one-off, so we did not try to do anything\n# generic. Sorry :).\n\nverbose \"=== Libevent\\n\";\nif (list_contains(\"libevent\", @disabled_3rdparty_packages)) {\n    verbose \"--- Libevent disabled\\n\";\n} else {\n    my $libevent_directory = \"libevent-\" . $libevent_version;\n    my $libevent_tarball = $libevent_directory . \".tar.gz\";\n    if (! -f \"3rd-party/\" . $libevent_tarball) {\n        my_die(\"Could not find libevent tarball\\n\");\n    }\n    $m4 .= \"m4_define([package_libevent], [1])\\n\";\n    $m4 .= \"m4_define([libevent_tarball], [\" . $libevent_tarball . \"])\\n\";\n    $m4 .= \"m4_define([libevent_directory], [\" . $libevent_directory . \"])\\n\";\n    verbose \"--- Libevent enabled (\" . $libevent_version . \")\\n\";\n}\n\nverbose \"=== hwloc\\n\";\nif (list_contains(\"hwloc\", @disabled_3rdparty_packages)) {\n    verbose \"--- hwloc disabled\\n\";\n} else {\n    my $hwloc_directory = \"hwloc-\" . $hwloc_version;\n    my $hwloc_tarball = $hwloc_directory . \".tar.gz\";\n    if (! -f \"3rd-party/\" . $hwloc_tarball) {\n        my_die(\"Could not find hwloc tarball\\n\");\n    }\n    $m4 .= \"m4_define([package_hwloc], [1])\\n\";\n    $m4 .= \"m4_define([hwloc_tarball], [\" . $hwloc_tarball . \"])\\n\";\n    $m4 .= \"m4_define([hwloc_directory], [\" . $hwloc_directory . \"])\\n\";\n    verbose \"--- hwloc enabled (\" . $hwloc_version . \")\\n\";\n}\n\nverbose \"=== PMIx\\n\";\nif (list_contains(\"pmix\", @disabled_3rdparty_packages)) {\n    verbose \"--- PMIx disabled\\n\";\n} else {\n    # sanity check pmix files exist\n    if (! -f \"3rd-party/openpmix/configure.ac\") {\n        my_die(\"Could not find pmix files\\n\");\n    }\n    push(@subdirs, \"3rd-party/openpmix/\");\n    $m4 .= \"m4_define([package_pmix], [1])\\n\";\n\n    # Grab the unique configure options from each of the 3rd party packages\n    safe_system(\"./config/extract-3rd-party-configure.pl -p \\\"3rd-party/openpmix/\\\" -n \\\"PMIx\\\" -e config/auto-generated-ompi-exclude.ini > config/auto-extracted-pmix-configure-args.m4\");\n    # Add the additional configure options from PMIx\n    safe_system(\"./config/extract-3rd-party-configure.pl -p \\\"3rd-party/openpmix/\\\" -n \\\"PMIx\\\" -l >> config/auto-generated-ompi-exclude.ini\");\n\n    verbose \"--- PMIx enabled\\n\";\n}\n\nverbose \"=== PRRTE\\n\";\nif (list_contains(\"prrte\", @disabled_3rdparty_packages)) {\n    verbose \"--- PRRTE disabled\\n\";\n} else {\n    # sanity check prrte files exist\n    if (! -f \"3rd-party/prrte/configure.ac\") {\n        my_die(\"Could not find pmix files\\n\");\n    }\n    push(@subdirs, \"3rd-party/prrte/\");\n    $m4 .= \"m4_define([package_prrte], [1])\\n\";\n\n    # Grab the unique configure options from each of the 3rd party packages\n    safe_system(\"./config/extract-3rd-party-configure.pl -p \\\"3rd-party/prrte/\\\" -n \\\"PRRTE\\\" -e config/auto-generated-ompi-exclude.ini > config/auto-extracted-prrte-configure-args.m4\");\n\n    verbose \"--- PRRTE enabled\\n\";\n}\n\n$m4 .= \"\\n\";\n\nprocess_autogen_subdirs(\"3rd-party\");\n\n#---------------------------------------------------------------------------\n\n# Find MPI extensions\n++$step;\nverbose \"\\n$step. Searching for Open MPI extensions\\n\\n\";\nmpiext_run_global(\"ompi/mpiext\");\n\n#---------------------------------------------------------------------------\n\n# Process all subdirs that we found in previous steps\n++$step;\nverbose \"\\n$step. Processing autogen.subdirs directories\\n\";\n\nif ($#subdirs >= 0) {\n    foreach my $d (@subdirs) {\n        process_subdir($d);\n    }\n} else {\n    print \"<none found>\\n\";\n}\n\n#---------------------------------------------------------------------------\n\n# If we got here, all was good.  Run the auto tools.\n++$step;\nverbose \"\\n$step. Running autotools on top-level tree\\n\\n\";\n\n# Remove old versions of the files (this is probably overkill, but...)\nverbose \"==> Remove stale files\\n\";\nfind_and_delete(qw/config.guess config.sub depcomp compile install-sh ltconfig\n    ltmain.sh missing mkinstalldirs libtool/);\n\n# Remove the old m4 file and write the new one\nverbose \"==> Writing m4 file with autogen.pl results\\n\";\nunlink($m4_output_file);\nopen(M4, \">$m4_output_file\") ||\n    my_die \"Can't open $m4_output_file\";\nprint M4 $m4;\nclose(M4);\n\n# Generate the version checking script with autom4te\nverbose \"==> Generating opal_get_version.sh\\n\";\nchdir(\"config\");\nsafe_system(\"autom4te --language=m4sh opal_get_version.m4sh -o opal_get_version.sh\");\n\n# Run autoreconf\nverbose \"==> Running autoreconf\\n\";\nchdir(\"..\");\nmy $cmd = \"autoreconf -ivf --warnings=all,no-obsolete,no-override -I config -I config/oac\";\nforeach my $project (@{$projects}) {\n    $cmd .= \" -I $project->{dir}/config\"\n        if (-d \"$project->{dir}/config\");\n}\nsafe_system($cmd);\n\npatch_autotools_output(\".\");\n\n# Per https://github.com/open-mpi/ompi/issues/8410, replace config.sub\n# and config.guess with known-good versions if the Autoconf-installed\n# versions are older.\nreplace_config_sub_guess(\".\");\n\n#---------------------------------------------------------------------------\n\nverbose \"\n================================================\nOpen MPI autogen: completed successfully.  w00t!\n================================================\\n\\n\";\n\n# Done!\nexit(0);\n"
        },
        {
          "name": "autogen.subdirs",
          "type": "blob",
          "size": 0.005859375,
          "content": "prrte\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 47.1806640625,
          "content": "# -*- shell-script -*-\n#\n# Copyright (c) 2004-2009 The Trustees of Indiana University and Indiana\n#                         University Research and Technology\n#                         Corporation.  All rights reserved.\n# Copyright (c) 2004-2018 The University of Tennessee and The University\n#                         of Tennessee Research Foundation.  All rights\n#                         reserved.\n# Copyright (c) 2004-2007 High Performance Computing Center Stuttgart,\n#                         University of Stuttgart.  All rights reserved.\n# Copyright (c) 2004-2005 The Regents of the University of California.\n#                         All rights reserved.\n# Copyright (c) 2006-2023 Cisco Systems, Inc.  All rights reserved.\n# Copyright (c) 2006-2008 Sun Microsystems, Inc.  All rights reserved.\n# Copyright (c) 2006-2017 Los Alamos National Security, LLC.  All rights\n#                         reserved.\n# Copyright (c) 2009      Oak Ridge National Labs.  All rights reserved.\n# Copyright (c) 2011-2013 NVIDIA Corporation.  All rights reserved.\n# Copyright (c) 2012      Oracle and/or its affiliates.  All rights reserved.\n# Copyright (c) 2013      Mellanox Technologies, Inc.\n#                         All rights reserved.\n# Copyright (c) 2013-2020 Intel, Inc.  All rights reserved.\n# Copyright (c) 2014-2022 Research Organization for Information Science\n#                         and Technology (RIST).  All rights reserved.\n# Copyright (c) 2016-2022 IBM Corporation.  All rights reserved.\n# Copyright (c) 2018-2021 Amazon.com, Inc. or its affiliates.\n#                         All Rights reserved.\n# Copyright (c) 2018      FUJITSU LIMITED.  All rights reserved.\n# Copyright (c) 2019      Triad National Security, LLC. All rights\n#                         reserved.\n# Copyright (c) 2023      Jeffrey M. Squyres.  All rights reserved.\n# $COPYRIGHT$\n#\n# Additional copyrights may follow\n#\n# $HEADER$\n#\n\n\n############################################################################\n# Initialization, version number, and other random setup/init stuff\n############################################################################\n\n# Load in everything found by autogen.pl\nm4_include([config/autogen_found_items.m4])\n# Load the version number code\nm4_include([config/opal_get_version.m4])\nAC_LANG([C])\n\n# Init autoconf\n\n# We don't have the version number to put in here yet, and we can't\n# call OPAL_GET_VERSION (etc.) before AC_INIT.  So use the shell\n# version.  project_name_* comes from config/project_list.m4, which\n# was set during autogen.pl.\n\nAC_INIT([project_name_long],\n        [m4_normalize(esyscmd([config/opal_get_version.sh VERSION --tarball]))],\n        [https://www.open-mpi.org/community/help/], [project_name_short])\nAC_PREREQ(2.60)\nAC_CONFIG_AUX_DIR(config)\nAC_CONFIG_MACRO_DIR(config)\n\nOAC_PUSH_PREFIX([OPAL])\n\nOPAL_CAPTURE_CONFIGURE_CLI([OPAL_CONFIGURE_CLI])\n\n# Get our platform support file.  This has to be done very, very early\n# because it twiddles random bits of autoconf\nOPAL_LOAD_PLATFORM\n\n# Start a list of packages / modules / etc. that want to disable \"make dist\".\nOPAL_MAKEDIST_DISABLE=\"\"\n\n#\n# Start it up\n#\n\nOPAL_CONFIGURE_SETUP\nopal_show_title \"Configuring project_name_long\"\nopal_show_subtitle \"Prerequisites\"\n\nAC_PROG_SED\n\nAC_CHECK_PROG([PERL],[perl],[perl],[no])\nAS_IF([test \"X$PERL\" = \"Xno\"],\n      [AC_MSG_ERROR([\"Open MPI requires perl. Aborting\"])])\n\n#\n# Setup some things that must be done before AM-INIT-AUTOMAKE\n#\n\nopal_show_subtitle \"Startup tests\"\nAC_CANONICAL_HOST\nAC_CANONICAL_TARGET\nAC_DEFINE_UNQUOTED(OPAL_ARCH, \"$target\", [OMPI architecture string])\nAS_IF([test \"$host\" != \"$target\"],\n      [AC_MSG_WARN([Cross-compile detected])\n       AC_MSG_WARN([Cross-compiling is only partially supported])\n       AC_MSG_WARN([Proceed at your own risk!])])\n\n\n#\n# Init automake\n#\nAM_INIT_AUTOMAKE([foreign dist-bzip2 subdir-objects no-define 1.13.4 tar-pax])\n\n# SILENT_RULES is new in AM 1.11, but we require 1.11 or higher via\n# autogen.  Limited testing shows that calling SILENT_RULES directly\n# works in more cases than adding \"silent-rules\" to INIT_AUTOMAKE\n# (even though they're supposed to be identical).  Shrug.\nAM_SILENT_RULES([yes])\n\n# Make configure depend on the VERSION file, since it's used in AC_INIT\nAC_SUBST([CONFIGURE_DEPENDENCIES], ['$(top_srcdir)/VERSION'])\n\n# Sanity checks\nAC_DEFUN([OMPI_CHECK_DIR_FOR_SPACES],[\n    dir=\"$1\"\n    article=\"$2\"\n    label=\"$3\"\n\n    AC_MSG_CHECKING([directory of $label])\n    AC_MSG_RESULT([$dir])\n    AS_IF([test -n \"`echo $dir | grep ' '`\"],\n          [AC_MSG_WARN([This version of Open MPI does not support $article $label])\n           AC_MSG_WARN([with a path that contains spaces])\n           AC_MSG_ERROR([Cannot continue.])])\n])\n\nompi_dir=`pwd`\nOMPI_CHECK_DIR_FOR_SPACES([$ompi_dir], [a], [build tree])\nOMPI_CHECK_DIR_FOR_SPACES([$srcdir], [a], [source tree])\nOMPI_CHECK_DIR_FOR_SPACES([$prefix], [a], [prefix])\n\nopal_show_subtitle \"Checking versions\"\n\n# Get the version of OMPI that we are installing\n\nm4_ifdef([project_ompi],\n         [OPAL_SAVE_VERSION([OMPI], [Open MPI], [$srcdir/VERSION],\n                            [ompi/include/ompi/version.h])\n          OPAL_SAVE_MPI_STANDARD_VERSION([$srcdir/VERSION])])\n\nm4_ifdef([project_oshmem],\n         [OPAL_SAVE_VERSION([OSHMEM], [Open SHMEM],\n                            [$srcdir/VERSION],\n                            [oshmem/include/oshmem/version.h])])\n\nOPAL_SAVE_VERSION([OPAL], [Open Portable Access Layer], [$srcdir/VERSION],\n                  [opal/include/opal/version.h])\n\n# Get shared library version numbers\n\n. $srcdir/VERSION\nm4_ifdef([project_ompi],\n         [AC_SUBST(libmpi_so_version)\n          AC_SUBST(libmpi_mpifh_so_version)\n          AC_SUBST(libmpi_usempi_tkr_so_version)\n          AC_SUBST(libmpi_usempi_ignore_tkr_so_version)\n          AC_SUBST(libmpi_usempif08_so_version)\n          AC_SUBST(libmpi_java_so_version)\n          AC_SUBST(libompitrace_so_version)])\nm4_ifdef([project_oshmem],\n         [AC_SUBST(liboshmem_so_version)])\nAC_SUBST(libopen_pal_so_version)\n# It's icky that we have to hard-code the names of the\n# common components here.  :-( This could probably be done\n# transparently by adding some intelligence in autogen.pl\n# and/or opal_mca.m4, but I don't have the cycles to do this\n# right now.\nAC_SUBST(libmca_opal_common_ofi_so_version)\nAC_SUBST(libmca_opal_common_cuda_so_version)\nAC_SUBST(libmca_opal_common_sm_so_version)\nAC_SUBST(libmca_ompi_common_ompio_so_version)\nAC_SUBST(libmca_ompi_common_monitoring_so_version)\nAC_SUBST(libmca_opal_common_ucx_so_version)\n\n#\n# Get the versions of the autotools that were used to bootstrap us\n# (helpful for debugging reports)\n#\nAC_MSG_CHECKING([for bootstrap Autoconf version])\nacversion=`grep \"Generated by GNU Autoconf\" $0 | head -n 1 | awk '{ print $6 }'`\nAC_MSG_RESULT([$acversion])\nAC_MSG_CHECKING([for bootstrap Automake version])\nAC_MSG_RESULT([$am__api_version])\nAC_MSG_CHECKING([for bootstrap Libtool version])\nltversion=`grep VERSION= $srcdir/config/ltmain.sh | head -n 1 | cut -d= -f2`\nAC_MSG_RESULT([$ltversion])\n\n# List header files to generate\n\nAC_CONFIG_HEADERS([opal/include/opal_config.h])\nm4_ifdef([project_ompi],\n         [AC_CONFIG_HEADERS([ompi/include/mpi.h])])\nm4_ifdef([project_oshmem],\n         [AC_CONFIG_HEADERS([oshmem/include/shmem.h])])\n\nopal_show_subtitle \"Initialization, setup\"\n\nOMPI_TOP_BUILDDIR=\"`pwd`\"\nAC_SUBST(OMPI_TOP_BUILDDIR)\ncd \"$srcdir\"\nOMPI_TOP_SRCDIR=\"`pwd`\"\nAC_SUBST(OMPI_TOP_SRCDIR)\ncd \"$OMPI_TOP_BUILDDIR\"\n\nAC_MSG_NOTICE([builddir: $OMPI_TOP_BUILDDIR])\nAC_MSG_NOTICE([srcdir: $OMPI_TOP_SRCDIR])\nif test \"$OMPI_TOP_BUILDDIR\" != \"$OMPI_TOP_SRCDIR\"; then\n    AC_MSG_NOTICE([Detected VPATH build])\nfi\n\n# Check for deprecated/deleted options\nOMPI_CHECK_DELETED_OPTIONS\n\n# Setup the top of the opal/include/opal_config.h file\n\nAH_TOP([/* -*- c -*-\n *\n * Copyright (c) 2004-2005 The Trustees of Indiana University.\n *                         All rights reserved.\n * Copyright (c) 2004-2005 The Trustees of the University of Tennessee.\n *                         All rights reserved.\n * Copyright (c) 2004-2005 High Performance Computing Center Stuttgart,\n *                         University of Stuttgart.  All rights reserved.\n * Copyright (c) 2004-2005 The Regents of the University of California.\n *                         All rights reserved.\n * Copyright (c) 2014      Intel, Inc. All rights reserved.\n * $COPYRIGHT$\n *\n * Additional copyrights may follow\n *\n * $HEADER$\n *\n * Function: - OS, CPU and compiler dependent configuration\n */\n\n#ifndef OPAL_CONFIG_H\n#define OPAL_CONFIG_H\n\n#include \"opal_config_top.h\"\n\n])\nAH_BOTTOM([\n#include \"opal_config_bottom.h\"\n#endif /* OPAL_CONFIG_H */\n])\n\n# Other basic setup stuff (shared with components)\n\nOPAL_BASIC_SETUP\n\nOPAL_TOP_SRCDIR=\"$OMPI_TOP_SRCDIR\"\nOPAL_TOP_BUILDDIR=\"$OMPI_TOP_BUILDDIR\"\nAC_SUBST(OPAL_TOP_SRCDIR)\nAC_SUBST(OPAL_TOP_BUILDDIR)\n\nm4_ifdef([project_oshmem],\n         [OSHMEM_TOP_SRCDIR=\"$OMPI_TOP_SRCDIR\"\n          OSHMEM_TOP_BUILDDIR=\"$OMPI_TOP_BUILDDIR\"\n          AC_SUBST(OSHMEM_TOP_SRCDIR)\n          AC_SUBST(OSHMEM_TOP_BUILDDIR)])\n\n############################################################################\n# Configuration options\n############################################################################\n\nOPAL_CONFIGURE_OPTIONS\n\n###########################\n# Open MPI options\nm4_ifdef([project_ompi], [OMPI_CONFIGURE_OPTIONS])\n\n# Enable/Disable Software-Based Performance Counters Capability\nAC_MSG_CHECKING([if want software-based performance counters (SPC)])\nAC_ARG_ENABLE([spc],\n    [AS_HELP_STRING([--enable-spc],\n                   [Enable software-based performance counters capability (default: disabled)])])\nif test \"$enable_spc\" = \"yes\"; then\n    AC_MSG_RESULT([yes])\n    SPC_ENABLE=1\nelse\n    AC_MSG_RESULT([no])\n    SPC_ENABLE=0\nfi\nAC_DEFINE_UNQUOTED([SPC_ENABLE],\n                   [$SPC_ENABLE],\n                   [If the software-based performance counters capability should be enabled.])\nAM_CONDITIONAL(SPC_ENABLE, test \"$SPC_ENABLE\" = \"1\")\n\nAS_IF([test \"$enable_spc\" != \"no\"], [project_spc_amc=true], [project_spc_amc=false])\n\nif test \"$enable_binaries\" = \"no\" && test \"$enable_dist\" = \"yes\"; then\n    AC_MSG_WARN([--disable-binaries is incompatible with --enable dist])\n    AC_MSG_ERROR([Cannot continue])\nfi\n\n# The library prefixes must be set before we call OPAL MCA.  Here is\n# as good a place as any.\nm4_ifdef([project_opal],\n         [OPAL_SET_LIB_NAME([open-pal])])\n\nm4_ifdef([project_ompi],\n         [OMPI_SET_LIB_NAME([])])\n\n###########################\n# OSHMEM options\nm4_ifdef([project_oshmem], [OSHMEM_CONFIGURE_OPTIONS])\n\n# Set up project specific AM_CONDITIONALs\nAS_IF([test \"$enable_ompi\" != \"no\"], [project_ompi_amc=true], [project_ompi_amc=false])\nm4_ifndef([project_ompi], [project_ompi_amc=false])\n\nAS_IF([test \"$enable_oshmem\" != \"no\"], [project_oshmem_amc=true], [project_oshmem_amc=\"no (disabled)\"])\nm4_ifndef([project_oshmem], [project_oshmem_amc=\"no (not available)\"])\n\n############################################################################\n# Libtool: part one\n# (before C compiler setup)\n############################################################################\n\n#\n# Part one of libtool magic.  Default to: enable shared, disable static.\n#\n\nAC_ENABLE_SHARED\nAC_DISABLE_STATIC\n\n##################################\n# Check for known incompatibility\n##################################\n\n# Do *not* print a message that we're checking the OS because this\n# test is *not* meant to be an all-inclusive \"if it passes this test,\n# then configure must succeed\" test.  This test is *only* mean to\n# screen out the versions of OS X where we know OMPI will cause kernel\n# panics because of bad implementations of pty's.  See\n# https://svn.open-mpi.org/trac/ompi/ticket/1637 for details.\n\n#   OS X name         OS X Version    $host_os value\n# OS X Tiger             10.4.x           darwin8.x\n# OS X Leopard           10.5.x           darwin9.x\n# OS X Snow Leopard      10.6.x           darwin10.x\n# OS X Lion              10.7.x           darwin11.x\n\n# We do not support OS X before version 10.5 (Leopard)\ncase $host_os in\n# Corresponds to OS X 10.0 - 10.4 (additional [] quoting for m4)\ndarwin[[45678]]*)\n    AC_MSG_WARN([Open MPI does not support OS X prior to version 10.5 (Leopard)])\n    AC_MSG_ERROR([Cannot continue])\nesac\n\n############################################################################\n# Check for compilers and preprocessors\n############################################################################\nopal_show_title \"Compiler and preprocessor tests\"\n\n##################################\n# C compiler characteristics\n##################################\n\nOPAL_SETUP_CC\n\n# Do all Interix detections if necessary\nOMPI_INTERIX\n\n#\n# Check for some types\n#\n\n# 'short float' support of the Intel C++ Compiler (group of C and C++\n# compilers), at least versions 18.0 and 19.0, is half-baked. It can\n# compile declarations of 'short float' variables and expressions of\n# 'sizeof(short float)' but cannot compile casts and operations of\n# 'short float' variables. In this situation, 'AC_CHECK_TYPES(short float)'\n# defines 'HAVE_SHORT_FLOAT' as 1 and compilation errors occur in\n# ompi/mca/op/base/op_base_functions.c. To avoid this error, check it\n# using 'AC_COMPILE_IFELSE' and set Autoconf cache variables before\n# 'AC_CHECK_TYPES(short float)'. This check can be removed when all\n# OMPI-supported Intel C++ Compilers support 'short float' completely\n# (or drop it completely).\nif test \"$opal_cv_c_compiler_vendor\" = \"intel\"; then\n    AC_MSG_CHECKING([if Intel compiler supports \"short float\" properly])\n    AC_COMPILE_IFELSE(\n        [AC_LANG_SOURCE([float f(short float a, short float b) { return (float)(a + b); }])],\n        [AC_MSG_RESULT([yes])],\n        [ac_cv_type_short_float=\"no\"\n         ac_cv_type_short_float__Complex=\"no\"]\n         AC_MSG_RESULT([no]))\nfi\n\nAC_CHECK_TYPES(int8_t)\nAC_CHECK_TYPES(uint8_t)\nAC_CHECK_TYPES(int16_t)\nAC_CHECK_TYPES(uint16_t)\nAC_CHECK_TYPES(int32_t)\nAC_CHECK_TYPES(uint32_t)\nAC_CHECK_TYPES(int64_t)\nAC_CHECK_TYPES(uint64_t)\nAC_CHECK_TYPES(int128_t)\nAC_CHECK_TYPES(__int128)\nAC_CHECK_TYPES(uint128_t)\nAC_CHECK_TYPES(long long)\n\nAC_CHECK_TYPES(__float128)\nAC_CHECK_TYPES(short float)\nAC_CHECK_TYPES(long double)\n# We only need these types if we're building the OMPI project, but\n# OPAL currently doesn't protect for their lack of presence well.\nAC_CHECK_HEADERS(complex.h)\nAC_CHECK_TYPES(short float _Complex)\nAC_CHECK_TYPES(float _Complex)\nAC_CHECK_TYPES(double _Complex)\nAC_CHECK_TYPES(long double _Complex)\n\nAC_CHECK_TYPES(intptr_t)\nAC_CHECK_TYPES(uintptr_t)\nAC_CHECK_TYPES(mode_t)\nAC_CHECK_TYPES(ssize_t)\nAC_CHECK_TYPES(ptrdiff_t)\n\n#\n# Check for type sizes\n#\n\nAC_CHECK_SIZEOF(_Bool)\nAC_CHECK_SIZEOF(char)\nAC_CHECK_SIZEOF(short)\nAC_CHECK_SIZEOF(int)\nAC_CHECK_SIZEOF(unsigned int)\nAC_CHECK_SIZEOF(long)\nAC_CHECK_SIZEOF(unsigned long)\nAC_CHECK_SIZEOF(long long)\nif test \"$ac_cv_type_short_float\" = yes; then\n    AC_CHECK_SIZEOF(short float)\nfi\nAC_CHECK_SIZEOF(float)\nAC_CHECK_SIZEOF(double)\nAC_CHECK_SIZEOF(long double)\nif test \"$ac_cv_type___float128\" = yes; then\n    AC_CHECK_SIZEOF(__float128)\nfi\n# We only need these types if we're building the OMPI project, but\n# OPAL currently doesn't protect for their lack of presence well.\nif test \"$ac_cv_type_short_float__Complex\" = yes; then\n    AC_CHECK_SIZEOF(short float _Complex)\nfi\nAC_CHECK_SIZEOF(float _Complex)\nAC_CHECK_SIZEOF(double _Complex)\nAC_CHECK_SIZEOF(long double _Complex)\n\nAC_CHECK_SIZEOF(void *)\nAS_IF([test \"$ac_cv_sizeof_void_p\" -eq 4],\n      [AC_MSG_WARN([Open MPI no longer supports 32 bit builds.])\n       AC_MSG_WARN([Please use Open MPI v4.x or earlier if you need 32 bit support.])\n       AC_MSG_ERROR([Cannot continue])])\nAC_CHECK_SIZEOF(size_t)\nif test \"$ac_cv_type_ssize_t\" = yes ; then\n    AC_CHECK_SIZEOF(ssize_t)\nfi\nif test \"$ac_cv_type_ptrdiff_t\" = yes; then\n    AC_CHECK_SIZEOF(ptrdiff_t)\nelse\n    AC_MSG_ERROR([ptrdiff_t type is not available, this is required by C99 standard.  Cannot continue])\nfi\nAC_CHECK_SIZEOF(wchar_t)\n\nAC_CHECK_SIZEOF(pid_t)\n\n# Check sizes of atomic types so we can define fixed-width types in OPAL\nAC_CHECK_SIZEOF(atomic_short, [],[[#include <stdatomic.h>]])\nAC_CHECK_SIZEOF(atomic_int,[],[[#include <stdatomic.h>]])\nAC_CHECK_SIZEOF(atomic_long,[],[[#include <stdatomic.h>]])\nAC_CHECK_SIZEOF(atomic_llong,[],[[#include <stdatomic.h>]])\n\n#\n# Check for type alignments\n#\n\nOPAL_C_GET_ALIGNMENT(bool, OPAL_ALIGNMENT_BOOL)\nOPAL_C_GET_ALIGNMENT(int8_t, OPAL_ALIGNMENT_INT8)\nOPAL_C_GET_ALIGNMENT(int16_t, OPAL_ALIGNMENT_INT16)\nOPAL_C_GET_ALIGNMENT(int32_t, OPAL_ALIGNMENT_INT32)\nOPAL_C_GET_ALIGNMENT(int64_t, OPAL_ALIGNMENT_INT64)\nif test \"$ac_cv_type_int128_t\" = yes ; then\n  OPAL_C_GET_ALIGNMENT(int128_t, OPAL_ALIGNMENT_INT128)\nfi\nOPAL_C_GET_ALIGNMENT(char, OPAL_ALIGNMENT_CHAR)\nOPAL_C_GET_ALIGNMENT(short, OPAL_ALIGNMENT_SHORT)\nOPAL_C_GET_ALIGNMENT(wchar_t, OPAL_ALIGNMENT_WCHAR)\nOPAL_C_GET_ALIGNMENT(int, OPAL_ALIGNMENT_INT)\nOPAL_C_GET_ALIGNMENT(long, OPAL_ALIGNMENT_LONG)\nOPAL_C_GET_ALIGNMENT(long long, OPAL_ALIGNMENT_LONG_LONG)\nif test \"$ac_cv_type_short_float\" = yes; then\n    OPAL_C_GET_ALIGNMENT(short float, OPAL_ALIGNMENT_SHORT_FLOAT)\nfi\nOPAL_C_GET_ALIGNMENT(float, OPAL_ALIGNMENT_FLOAT)\nOPAL_C_GET_ALIGNMENT(double, OPAL_ALIGNMENT_DOUBLE)\nOPAL_C_GET_ALIGNMENT(long double, OPAL_ALIGNMENT_LONG_DOUBLE)\nif test \"$ac_cv_type___float128\" = yes; then\n    OPAL_C_GET_ALIGNMENT(__float128, OPAL_ALIGNMENT___FLOAT128)\nfi\n\n\n# We only need these types if we're building the OMPI project, but\n# OPAL currently doesn't protect for their lack of presence well.\nif test \"$ac_cv_type_short_float__Complex\" = yes; then\n    OPAL_C_GET_ALIGNMENT(short float _Complex, OPAL_ALIGNMENT_SHORT_FLOAT_COMPLEX)\nfi\nOPAL_C_GET_ALIGNMENT(float _Complex, OPAL_ALIGNMENT_FLOAT_COMPLEX)\nOPAL_C_GET_ALIGNMENT(double _Complex, OPAL_ALIGNMENT_DOUBLE_COMPLEX)\nOPAL_C_GET_ALIGNMENT(long double _Complex, OPAL_ALIGNMENT_LONG_DOUBLE_COMPLEX)\n\nOPAL_C_GET_ALIGNMENT(void *, OPAL_ALIGNMENT_VOID_P)\nOPAL_C_GET_ALIGNMENT(size_t, OPAL_ALIGNMENT_SIZE_T)\n\n#\n# Check for an alternate type of C 'short float'\n#\n\nOPAL_CHECK_ALT_SHORT_FLOAT\n\n# Check system alignment requirements\nif test \"$opal_want_heterogeneous\" = 1; then\n    ompi_cv_c_word_size_align=yes\nelse\n    AC_CACHE_CHECK([if word-sized integers must be word-size aligned],\n        [ompi_cv_c_word_size_align],\n        [AC_LANG_PUSH(C)\n         AC_RUN_IFELSE([AC_LANG_PROGRAM([dnl\n#include <stdlib.h>], [[    long data[2] = {0, 0};\n    long *lp;\n    int *ip;\n    ip = (int*) data;\n    ip++;\n    lp = (long*) ip;\n    return lp[0]; ]])],\n            [ompi_cv_c_word_size_align=no],\n            [ompi_cv_c_word_size_align=yes],\n            [ompi_cv_c_word_size_align=yes])])\nfi\nAS_IF([test $ompi_cv_c_word_size_align = yes], [results=1], [results=0])\nAC_DEFINE_UNQUOTED([OPAL_ALIGN_WORD_SIZE_INTEGERS], [$results],\n    [set to 1 if word-size integers must be aligned to word-size padding to prevent bus errors])\n\n#\n# Check for other compiler characteristics\n#\n\nOPAL_C_WEAK_SYMBOLS\nOPAL_C_MACRO_WEAK_SYMBOLS\n\n# If we want the profiling layer:\n# - If the C compiler has weak symbols, use those.\n# - If not, then set to compile the code again with #define's in a\n#   separate directory.\n\nif test \"$WANT_WEAK_SYMBOLS\" = \"0\"; then\n    OPAL_C_HAVE_WEAK_SYMBOLS=0\nfi\nif test \"$OPAL_C_HAVE_WEAK_SYMBOLS\" = \"1\"; then\n    OMPI_PROFILING_COMPILE_SEPARATELY=0\nelse\n    OMPI_PROFILING_COMPILE_SEPARATELY=1\nfi\n\n# Check if we support the offsetof compiler directive\n\nOPAL_CHECK_OFFSETOF\n\n\n##################################\n# C++ compiler characteristics\n##################################\n\n# We don't need C++ unless we're building Open MPI, because Open MPI\n# supports an \"mpicxx\" wrapper compiler (there is no C++ code in Open\n# MPI -- the MPI C++ bindings were removed in Open MPI v5.0 -- so we\n# don't need a C++ compiler for compiling Open MPI itself).\nm4_ifdef([project_ompi], [OMPI_SETUP_CXX])\n\n##################################\n# Only after setting up both\n# C and C++ check compiler attributes.\n##################################\n\nopal_show_subtitle \"Compiler characteristics\"\n\nOPAL_CHECK_ATTRIBUTES\nOPAL_CHECK_COMPILER_VERSION_ID\n\n# Open MPI only supports GCC >=v4.8.1.  Notes:\n#\n# 1. The default compiler that comes with RHEL 7 is v4.8.5 (version ID\n#    264197).\n# 2. We regularly test with GCC v4.8.1 (version ID 264193).\n# 3. GCC 4.8.0 probably also works; we just haven't tested it.\n#\n# Since we regularly test with 4.8.1, that's what we check for.\nAS_IF([test \"$opal_cv_compiler_FAMILYNAME\" = \"GNU\" && \\\n       test \"$opal_cv_compiler_VERSION\" -lt 264193],\n      [AC_MSG_WARN([Open MPI no longer supports versions of the GNU compiler suite])\n       AC_MSG_WARN([less than v4.8.1.])\n       AC_MSG_WARN([Please upgrade your GNU compiler suite, or use])\n       AC_MSG_WARN([a different compiler to build Open MPI.])\n       AC_MSG_ERROR([Cannot continue])\n      ])\n\n##################################\n# Java MPI Binding request\n##################################\n# Only needed for OMPI\nm4_ifdef([project_ompi], [OMPI_SETUP_JAVA_BINDINGS])\n\n\n##################################\n# MPI / OpenSHMEM API profiling layer\n##################################\n\n# Setup profiling bindings (if we're building the relevant projects).\nm4_ifdef([project_ompi], [OMPI_SETUP_MPI_PROFILING])\nm4_ifdef([project_oshmem], [OSHMEM_SETUP_PROFILING])\n\n\n##################################\n# Assembler Configuration\n##################################\n\nopal_show_subtitle \"Assembler\"\n\nAM_PROG_AS\nOPAL_CONFIG_ASM\n\n\n##################################\n# Fortran\n##################################\n\nOMPI_BUILD_FORTRAN_BINDINGS=0\n\nm4_ifdef([project_ompi], [OMPI_SETUP_MPI_FORTRAN], [ompi_fortran_happy=0])\n\n# Used in Makefile.ompi-rules\nAM_CONDITIONAL(MAN_PAGE_BUILD_MPIFH_BINDINGS,\n              [test $OMPI_BUILD_FORTRAN_BINDINGS -gt $OMPI_FORTRAN_NO_BINDINGS])\nAM_CONDITIONAL(MAN_PAGE_BUILD_USEMPIF08_BINDINGS,\n              [test $OMPI_BUILD_FORTRAN_BINDINGS -ge $OMPI_FORTRAN_USEMPIF08_BINDINGS])\n\nAM_CONDITIONAL(OSHMEM_BUILD_FORTRAN_BINDINGS,\n    [test \"$enable_oshmem\" = \"yes\" && \\\n     test \"$ompi_fortran_happy\" = \"1\" && \\\n     test \"$OMPI_TRY_FORTRAN_BINDINGS\" -gt \"$OMPI_FORTRAN_NO_BINDINGS\" && \\\n     test \"$enable_oshmem_fortran\" != \"no\"])\n\n# checkpoint results\nAC_CACHE_SAVE\n\n\n##################################\n# Wrapper compilers.\n#\n# Must be called before MCA system\n##################################\nOPAL_SETUP_WRAPPER_INIT\n\n\n##################################\n# Header files\n##################################\n\nopal_show_title \"Header file tests\"\n\nAC_CHECK_HEADERS([alloca.h aio.h arpa/inet.h dirent.h \\\n    dlfcn.h endian.h execinfo.h err.h fcntl.h grp.h libgen.h \\\n    libutil.h memory.h netdb.h netinet/in.h netinet/tcp.h \\\n    poll.h pthread.h pty.h pwd.h sched.h \\\n    strings.h stropts.h linux/ethtool.h linux/sockios.h \\\n    sys/fcntl.h sys/ipc.h sys/shm.h \\\n    sys/ioctl.h sys/mman.h sys/param.h sys/queue.h \\\n    sys/resource.h sys/select.h sys/socket.h sys/sockio.h \\\n    sys/stat.h sys/statfs.h sys/statvfs.h time.h sys/time.h sys/tree.h \\\n    sys/types.h sys/uio.h sys/un.h net/uio.h sys/utsname.h sys/vfs.h sys/wait.h syslog.h \\\n    termios.h ulimit.h unistd.h util.h utmp.h malloc.h \\\n    ifaddrs.h crt_externs.h regex.h mntent.h paths.h \\\n    ioLib.h sockLib.h hostLib.h shlwapi.h sys/synch.h db.h ndbm.h ieee754.h syslimits.h])\n\nAC_CHECK_HEADERS([sys/mount.h], [], [],\n[AC_INCLUDES_DEFAULT\n#if HAVE_SYS_PARAM_H\n#include <sys/param.h>\n#endif\n])\n\nAC_CHECK_HEADERS([sys/sysctl.h], [], [],\n[AC_INCLUDES_DEFAULT\n#if HAVE_SYS_PARAM_H\n#include <sys/param.h>\n#endif\n])\n\n# Needed to work around Darwin requiring sys/socket.h for\n# net/if.h\nAC_CHECK_HEADERS([net/if.h], [], [],\n    [#include <stdio.h>\n#if STDC_HEADERS\n# include <stdlib.h>\n# include <stddef.h>\n#else\n# if HAVE_STDLIB_H\n#  include <stdlib.h>\n# endif\n#endif\n#if HAVE_SYS_SOCKET_H\n# include <sys/socket.h>\n#endif\n])\n\n# checkpoint results\nAC_CACHE_SAVE\n\n\n##################################\n# Types\n##################################\n\nopal_show_title \"Type tests\"\n\nAC_CHECK_TYPES([socklen_t, struct sockaddr_in, struct sockaddr_in6,\n                struct sockaddr_storage, struct ifreq, struct ethtool_cmd],\n               [], [], [AC_INCLUDES_DEFAULT\n#if HAVE_SYS_SOCKET_H\n#include <sys/socket.h>\n#endif\n#ifdef HAVE_NETINET_IN_H\n#include <netinet/in.h>\n#endif\n#ifdef HAVE_LINUX_ETHTOOL_H\n#include <linux/ethtool.h>\n#endif\n#ifdef HAVE_NET_IF_H\n#include <net/if.h>\n#endif])\n\nAC_CHECK_DECLS([ethtool_cmd_speed, SIOCETHTOOL],\n               [], [], [AC_INCLUDES_DEFAULT\n#ifdef HAVE_LINUX_ETHTOOL_H\n#include <linux/ethtool.h>\n#endif\n#ifdef HAVE_LINUX_SOCKIOS_H\n#include <linux/sockios.h>\n#endif])\n\nAC_CHECK_MEMBERS([struct ethtool_cmd.speed_hi],\n               [], [], [AC_INCLUDES_DEFAULT\n#ifdef HAVE_LINUX_ETHTOOL_H\n#include <linux/ethtool.h>\n#endif\n#ifdef HAVE_LINUX_SOCKIOS_H\n#include <linux/sockios.h>\n#endif])\n\nAC_CHECK_MEMBERS([struct ethtool_cmd.speed_hi],\n               [], [], [AC_INCLUDES_DEFAULT\n#ifdef HAVE_LINUX_ETHTOOL_H\n#include <linux/ethtool.h>\n#endif\n#ifdef HAVE_LINUX_SOCKIOS_H\n#include <linux/sockios.h>\n#endif])\n\nAC_CHECK_MEMBERS([struct ethtool_cmd.speed_hi],\n               [], [], [AC_INCLUDES_DEFAULT\n#ifdef HAVE_LINUX_ETHTOOL_H\n#include <linux/ethtool.h>\n#endif\n#ifdef HAVE_LINUX_SOCKIOS_H\n#include <linux/sockios.h>\n#endif])\n\nAC_CHECK_MEMBERS([struct ethtool_cmd.speed_hi],\n               [], [], [AC_INCLUDES_DEFAULT\n#ifdef HAVE_LINUX_ETHTOOL_H\n#include <linux/ethtool.h>\n#endif\n#ifdef HAVE_LINUX_SOCKIOS_H\n#include <linux/sockios.h>\n#endif])\n\nAC_CHECK_DECLS([AF_UNSPEC, PF_UNSPEC, AF_INET6, PF_INET6],\n               [], [], [AC_INCLUDES_DEFAULT\n#if HAVE_SYS_SOCKET_H\n#include <sys/socket.h>\n#endif\n#ifdef HAVE_NETINET_IN_H\n#include <netinet/in.h>\n#endif])\n\n# SA_RESTART in signal.h\nOPAL_VAR_SCOPE_PUSH([MSG])\nAC_MSG_CHECKING([if SA_RESTART defined in signal.h])\nAC_EGREP_CPP(yes, [\n#include <signal.h>\n#ifdef SA_RESTART\n    yes\n#endif ], [MSG=yes VALUE=1], [MSG=no VALUE=0])\nAC_DEFINE_UNQUOTED(OPAL_HAVE_SA_RESTART, $VALUE,\n    [Whether we have SA_RESTART in <signal.h> or not])\nAC_MSG_RESULT([$MSG])\nOPAL_VAR_SCOPE_POP\n\nAC_CHECK_MEMBERS([struct sockaddr.sa_len], [], [], [\n#include <sys/types.h>\n#if HAVE_SYS_SOCKET_H\n#include <sys/socket.h>\n#endif])\n\nAC_CHECK_MEMBERS([struct dirent.d_type], [], [], [\n#include <sys/types.h>\n#include <dirent.h>])\n\nAC_CHECK_MEMBERS([siginfo_t.si_fd],,,[#include <signal.h>])\nAC_CHECK_MEMBERS([siginfo_t.si_band],,,[#include <signal.h>])\n\n#\n# Checks for struct member names in struct statfs\n#\nAC_CHECK_MEMBERS([struct statfs.f_type], [], [], [\nAC_INCLUDES_DEFAULT\n#ifdef HAVE_SYS_VFS_H\n#include <sys/vfs.h>\n#endif\n#ifdef HAVE_SYS_STATFS_H\n#include <sys/statfs.h>\n#endif\n])\n\nAC_CHECK_MEMBERS([struct statfs.f_fstypename], [], [], [\nAC_INCLUDES_DEFAULT\n#ifdef HAVE_SYS_PARAM_H\n#include <sys/param.h>\n#endif\n#ifdef HAVE_SYS_MOUNT_H\n#include <sys/mount.h>\n#endif\n#ifdef HAVE_SYS_VFS_H\n#include <sys/vfs.h>\n#endif\n#ifdef HAVE_SYS_STATFS_H\n#include <sys/statfs.h>\n#endif\n])\n\n#\n# Checks for struct member names in struct statvfs\n#\nAC_CHECK_MEMBERS([struct statvfs.f_basetype], [], [], [\nAC_INCLUDES_DEFAULT\n#ifdef HAVE_SYS_STATVFS_H\n#include <sys/statvfs.h>\n#endif\n])\n\nAC_CHECK_MEMBERS([struct statvfs.f_fstypename], [], [], [\nAC_INCLUDES_DEFAULT\n#ifdef HAVE_SYS_STATVFS_H\n#include <sys/statvfs.h>\n#endif\n])\n\nAC_CHECK_MEMBERS([struct timespec.tv_nsec],\n               [], [], [AC_INCLUDES_DEFAULT\n#ifdef HAVE_TIME_H\n#include <time.h>\n#endif\n#ifdef HAVE_SYS_TIME_H\n#include <sys/time.h>\n#endif])\n\n#\n# Find corresponding types for MPI_Aint, MPI_Count, and MPI_Offset.\n# And if relevant, find the corresponding MPI_ADDRESS_KIND,\n# MPI_COUNT_KIND, and MPI_OFFSET_KIND.\n#\nm4_ifdef([project_ompi], [OMPI_FIND_MPI_AINT_COUNT_OFFSET])\n\n# checkpoint results\nAC_CACHE_SAVE\n\n##################################\n# Linker characteristics\n##################################\n\nAC_MSG_CHECKING([the linker for support for the -fini option])\nOPAL_VAR_SCOPE_PUSH([LDFLAGS_save])\nLDFLAGS_save=$LDFLAGS\nLDFLAGS=\"$LDFLAGS_save -Wl,-fini -Wl,finalize\"\nAC_LINK_IFELSE([AC_LANG_PROGRAM([void finalize (void) {}], [])],\n               [AC_MSG_RESULT([yes])\n        opal_ld_have_fini=1], [AC_MSG_RESULT([no])\n        opal_ld_have_fini=0])\nLDFLAGS=$LDFLAGS_save\nOPAL_VAR_SCOPE_POP\n\n##################################\n# Libraries\n##################################\n\nopal_show_title \"Library and Function tests\"\n\n# Darwin doesn't need -lutil, as it's something other than this -lutil.\nOPAL_SEARCH_LIBS_CORE([openpty], [util])\n\nOPAL_SEARCH_LIBS_CORE([gethostbyname], [nsl])\n\nOPAL_SEARCH_LIBS_CORE([socket], [socket])\n\n# Solaris has sched_yield in -lrt, usually in libc\nOPAL_SEARCH_LIBS_CORE([sched_yield], [rt])\n\n# IRIX and CentOS have dirname in -lgen, usually in libc\nOPAL_SEARCH_LIBS_CORE([dirname], [gen])\n\n# Darwin doesn't need -lm, as it's a symlink to libSystem.dylib\nOPAL_SEARCH_LIBS_CORE([ceil], [m])\n\n# -lrt might be needed for clock_gettime\nOPAL_SEARCH_LIBS_CORE([clock_gettime], [rt])\n\nAC_CHECK_FUNCS([asprintf snprintf vasprintf vsnprintf openpty isatty getpwuid fork waitpid execve pipe ptsname setsid mmap tcgetpgrp posix_memalign strsignal sysconf syslog vsyslog regcmp regexec regfree _NSGetEnviron socketpair usleep mkfifo dbopen dbm_open statfs statvfs setpgid setenv __malloc_initialize_hook __clear_cache on_exit])\n\n# Sanity check: ensure that we got at least one of statfs or statvfs.\nif test $ac_cv_func_statfs = no && test $ac_cv_func_statvfs = no; then\n    AC_MSG_WARN([neither statfs() and statvfs() were found])\n    AC_MSG_ERROR([Cannot continue])\nfi\n\n# On some hosts, htonl is a define, so the AC_CHECK_FUNC will get\n# confused.  On others, it's in the standard library, but stubbed with\n# the magic glibc foo as not implemented.  and on other systems, it's\n# just not there.  This covers all cases.\nAC_CACHE_CHECK([for htonl define],\n  [ompi_cv_htonl_define],\n  [AC_PREPROC_IFELSE([AC_LANG_PROGRAM([\n#ifdef HAVE_SYS_TYPES_H\n#include <sys/types.h>\n#endif\n#ifdef HAVE_NETINET_IN_H\n#include <netinet/in.h>\n#endif\n#ifdef HAVE_ARPA_INET_H\n#include <arpa/inet.h>\n#endif],[\n#ifndef ntohl\n#error \"ntohl not defined\"\n#endif\n])], [ompi_cv_htonl_define=yes], [ompi_cv_htonl_define=no])])\nAC_CHECK_FUNC([htonl], [ompi_have_htonl=yes], [ompi_have_htonl=no])\nAS_IF([test \"$ompi_cv_htonl_define\" = \"yes\" || test \"$ompi_have_htonl\" = \"yes\"],\n    [AC_DEFINE_UNQUOTED([HAVE_UNIX_BYTESWAP], [1],\n        [whether unix byteswap routines -- htonl, htons, nothl, ntohs -- are available])])\n\n#\n# Make sure we can copy va_lists (need check declared, not linkable)\n#\n\nAC_CHECK_DECL(va_copy, OPAL_HAVE_VA_COPY=1, OPAL_HAVE_VA_COPY=0,\n    [#include <stdarg.h>])\nAC_DEFINE_UNQUOTED(OPAL_HAVE_VA_COPY, $OPAL_HAVE_VA_COPY,\n    [Whether we have va_copy or not])\n\nAC_CHECK_DECL(__va_copy, OPAL_HAVE_UNDERSCORE_VA_COPY=1,\n    OPAL_HAVE_UNDERSCORE_VA_COPY=0, [#include <stdarg.h>])\nAC_DEFINE_UNQUOTED(OPAL_HAVE_UNDERSCORE_VA_COPY, $OPAL_HAVE_UNDERSCORE_VA_COPY,\n    [Whether we have __va_copy or not])\n\nAC_CHECK_DECLS(__func__)\n\n# checkpoint results\nAC_CACHE_SAVE\n\n\n##################################\n# System-specific tests\n##################################\n\nopal_show_title \"System-specific tests\"\n\n##################################\nOPAL_CHECK_OS_FLAVORS\n\n\n\n# Do we have _SC_NPROCESSORS_ONLN? (only going to pass if we also have\n# <unistd.h> and sysconf(), which is ok) OS X 10.4 has <unistd.h> and\n# sysconf(), but does not have _SC_NPROCESSORS_ONLN.  Doh!\n\nAC_CACHE_CHECK([for _SC_NPROCESSORS_ONLN],\n  [ompi_cv_have__SC_NPROCESSORS_ONLN],\n  [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([\nAC_INCLUDES_DEFAULT\n#include <unistd.h>\n],\n     [int i = _SC_NPROCESSORS_ONLN;])],\n     [ompi_cv_have__SC_NPROCESSORS_ONLN=\"yes\"],\n     [ompi_cv_have__SC_NPROCESSORS_ONLN=\"no\"])])\nAS_IF([test \"$ompi_cv_have__SC_NPROCESSORS_ONLN\" = \"yes\"],\n      [result=1], [result=0])\nAC_DEFINE_UNQUOTED([OPAL_HAVE__SC_NPROCESSORS_ONLN], [$result],\n  [Define to 1 ifyou have the declaration of _SC_NPROCESSORS_ONLN, and to 0 otherwise])\n\n# all: endian\n\nAC_C_BIGENDIAN\n\nOPAL_CHECK_BROKEN_QSORT\n\n# all: SYSV semaphores\n# all: SYSV shared memory\n# all: size of FD_SET\n# all: sizeof struct stat members\n# all: type of getsockopt optlen\n# all: type of recvfrom optlen\n\n#\n# What is the local equivalent of \"ln -s\"\n#\n\nAC_PROG_LN_S\n\nAC_PROG_GREP\nAC_PROG_EGREP\n\n#\n# We need as and flex\n#\nAM_PROG_AS\n\ndnl Note that prior to AC v2.70, PROG_LEX did not take any arguments.\ndnl But it is harmless to pass an argument to it ($1 will just be\ndnl ignored).\nAC_PROG_LEX([noyywrap])\n\n# If we don't have Flex and we don't have a generated .c file\n# (distribution tarballs will have the .c file included, but git\n# clones will not), then error.  Must have Flex -- other versions of\n# Lex are not workable (all things being equal, since this is *only*\n# required for developers, we decided that it really was not worth it\n# to be portable between different versions of lex ;-).\nAS_IF([test -z \"$LEX\" || \\\n   test -n \"`echo $LEX | $GREP missing`\" || \\\n   test \"`basename $LEX`\" != \"flex\"],\n    [AS_IF([test ! -f \"$srcdir/opal/util/show_help_lex.c\"],\n       [AC_MSG_WARN([*** Could not find Flex on your system.])\n        AC_MSG_WARN([*** Flex is required for developer builds of Open MPI.])\n        AC_MSG_WARN([*** Other versions of Lex are not supported.])\n        AC_MSG_WARN([*** NOTE: If you are building a tarball downloaded from www.open-mpi.org, you do not need Flex])\n        AC_MSG_ERROR([Cannot continue])\n       ])\n    ])\n\n#\n# Setup HTML and man page processing\n#\n\ndnl Note that we have to double escape the URL below\ndnl so that the # it contains doesn't confuse the Autotools\nOAC_SETUP_SPHINX([$srcdir/docs/man/MPI_T.3],\n                 [[https://docs.open-mpi.org/en/main/developers/prerequisites.html#sphinx-and-therefore-python]],\n                 [$srcdir/docs/requirements.txt])\n\n#\n# File system case sensitivity\n#\n\nOPAL_CASE_SENSITIVE_FS_SETUP\n\n# AIX: FIONBIO in sys/ioctl.h\n# glibc: memcpy\n\n#\n# Do we have RLIMIT_NPROC in <sys/resources.h>? (e.g., Solaris does not)\n#\n\nAC_CHECK_DECLS([RLIMIT_NPROC], [], [], [\nAC_INCLUDES_DEFAULT\n#if HAVE_SYS_RESOURCE_H\n#include <sys/resource.h>\n#endif])\n\n#\n# Do we have RLIMIT_MEMLOCK in <sys/resources.h>? (e.g., Solaris does not)\n#\n\nAC_CHECK_DECLS([RLIMIT_MEMLOCK], [], [], [\nAC_INCLUDES_DEFAULT\n#if HAVE_SYS_RESOURCE_H\n#include <sys/resource.h>\n#endif])\n\n#\n# Do we have RLIMIT_NOFILE in <sys/resources.h>? (e.g., Solaris does not)\n#\n\nAC_CHECK_DECLS([RLIMIT_NOFILE], [], [], [\nAC_INCLUDES_DEFAULT\n#if HAVE_SYS_RESOURCE_H\n#include <sys/resource.h>\n#endif])\n\n#\n# Do we have RLIMIT_MEMLOCK in <sys/resources.h>? (e.g., Solaris does not)\n#\n\nAC_CHECK_DECLS([RLIMIT_FSIZE], [], [], [\nAC_INCLUDES_DEFAULT\n#if HAVE_SYS_RESOURCE_H\n#include <sys/resource.h>\n#endif])\n\n#\n# Do we have RLIMIT_CORE in <sys/resources.h>? (e.g., Solaris does not)\n#\n\nAC_CHECK_DECLS([RLIMIT_CORE], [], [], [\nAC_INCLUDES_DEFAULT\n#if HAVE_SYS_RESOURCE_H\n#include <sys/resource.h>\n#endif])\n\n#\n# Do we have RLIMIT_STACK in <sys/resources.h>? (e.g., Solaris does not)\n#\n\nAC_CHECK_DECLS([RLIMIT_STACK], [], [], [\nAC_INCLUDES_DEFAULT\n#if HAVE_SYS_RESOURCE_H\n#include <sys/resource.h>\n#endif])\n\n#\n# Do we have RLIMIT_AS in <sys/resources.h>? (e.g., Solaris does not)\n#\n\nAC_CHECK_DECLS([RLIMIT_AS], [], [], [\nAC_INCLUDES_DEFAULT\n#if HAVE_SYS_RESOURCE_H\n#include <sys/resource.h>\n#endif])\n\n# checkpoint results\nAC_CACHE_SAVE\n\n##################################\n#        Fault Tolerance\n# Part1: must happen before prte\n##################################\nOPAL_SETUP_FT_OPTIONS\n\n##################################\n# 3rd-party packages not called ROMIO\n##################################\nopal_show_title \"3rd-party packages\"\n\nOPAL_3RDPARY_SUBDIRS=\nOPAL_3RDPARY_DIST_SUBDIRS=\nOPAL_3RDPARY_EXTRA_DIST=\nOPAL_3RDPARY_DISTCLEAN_DIRS=\n\nOPAL_CONFIG_LIBEVENT\nOPAL_CONFIG_HWLOC\nOPAL_CONFIG_PMIX\nOMPI_SETUP_PRRTE\n\nAC_SUBST(OPAL_3RDPARTY_SUBDIRS)\nAC_SUBST(OPAL_3RDPARTY_DIST_SUBDIRS)\nAC_SUBST(OPAL_3RDPARTY_EXTRA_DIST)\nAC_SUBST(OPAL_3RDPARTY_DISTCLEAN_DIRS)\n\n##################################\n#        Fault Tolerance\n# Part2: must happen after prte\n##################################\nOPAL_SETUP_FT\n\n##################################\n# MCA\n##################################\n\nopal_show_title \"Modular Component Architecture (MCA) setup\"\n\nAC_MSG_CHECKING([for subdir args])\nOPAL_CONFIG_SUBDIR_ARGS([opal_subdir_args])\nAC_MSG_RESULT([$opal_subdir_args])\n\nOPAL_MCA\n\n#\n# Now that we know how to support threads with wrappers, update\n#\nOPAL_WRAPPER_FLAGS_ADD([CFLAGS], [$THREAD_CFLAGS])\nOPAL_WRAPPER_FLAGS_ADD([CXXFLAGS], [$THREAD_CXXFLAGS])\nOPAL_WRAPPER_FLAGS_ADD([FCFLAGS], [$THREAD_FCFLAGS])\nOPAL_WRAPPER_FLAGS_ADD([LDFLAGS], [$THREAD_LDFLAGS])\n\nm4_ifdef([project_ompi], [OMPI_REQUIRE_ENDPOINT_TAG_FINI])\n\n# Last minute disable of OpenSHMEM if we didn't find any oshmem SPMLs\nif test \"$project_oshmem_amc\" = \"true\" && test $OSHMEM_FOUND_WORKING_SPML -eq 0 ; then\n    # We don't have an spml that will work, so oshmem wouldn't be able\n    # to run an application.  Therefore, don't build the oshmem layer.\n    if test \"$enable_oshmem\" != \"no\" && test -n \"$enable_oshmem\"; then\n\tAC_MSG_WARN([No spml found, so OpenSHMEM layer will be non functional.])\n\tAC_MSG_ERROR([Aborting because OpenSHMEM requested, but can not build.])\n    else\n\tAC_MSG_WARN([No spml found.  Will not build OpenSHMEM layer.])\n\tproject_oshmem_amc=\"false (no spml)\"\n\t# now for the hard part, remove project from list that will\n\t# run.  This is a hack, but it works as long as the project\n\t# remains named \"oshmem\".\n\tMCA_PROJECT_SUBDIRS=`echo \"$MCA_PROJECT_SUBDIRS\" | sed -e 's/oshmem//'`\n    fi\nfi\n\n# checkpoint results\nAC_CACHE_SAVE\n\n##################################\n# MPI Extended Interfaces\n##################################\n\nm4_ifdef([project_ompi], [OMPI_SETUP_MPI_EXT])\n\n# checkpoint results\nAC_CACHE_SAVE\n\n##################################\n# Visibility\n##################################\n\n# Check the visibility declspec at the end to avoid problem with\n# the previous tests that are not necessarily prepared for\n# the visibility feature.\nopal_show_title \"Symbol visibility feature\"\n\nOPAL_CHECK_VISIBILITY\n\n\n############################################################################\n# Final top-level OMPI configuration\n############################################################################\n\nopal_show_title \"Final top-level OMPI configuration\"\n\n############################################################################\n# Libtool: part two\n# (after C compiler setup = no compiler/linker tests after this)\n############################################################################\n\nopal_show_subtitle \"Libtool configuration\"\n\n# Due to this thread:\n# https://www.open-mpi.org/community/lists/users/2013/02/21356.php and\n# a helpful tip from Dave Goodell, set the precious variables for\n# compilers to \"no\" that we don't want.  Libtool's m4 configry will\n# interpret this as \"I won't be using this language; don't bother\n# setting it up.\"  Note that we do this only for Fortran; we *don't*\n# do this for C++, because *do* still want to setup the mpicxx wrapper\n# if we have a C++ compiler.\nAS_IF([test \"$OMPI_TRY_FORTRAN_BINDINGS\" = \"$OMPI_FORTRAN_NO_BINDINGS\"],[F77=no FC=no])\n\nLT_INIT\n\n# What's the suffix of shared libraries?  Inspired by generated\n# Libtool code (even though we don't support several of these\n# platforms, there didn't seem to be any harm in leaving in some of\n# them, alhtough I did remove some that we have never/will never\n# support, like OS/2).\nOPAL_DYN_LIB_PREFIX=lib\ncase $host_os in\ncygwin*)\n    OPAL_DYN_LIB_PREFIX=cyg\n    OPAL_DYN_LIB_SUFFIX=dll\n    ;;\nmingw* | pw32* | cegcc*)\n    OPAL_DYN_LIB_SUFFIX=dll\n    ;;\ndarwin* | rhapsody*)\n    OPAL_DYN_LIB_SUFFIX=dylib\n    ;;\nhpux9* | hpux10* | hpux11*)\n    case $host_cpu in\n        ia64*)\n        OPAL_DYN_LIB_SUFFIX=so\n        ;;\n    *)\n        OPAL_DYN_LIB_SUFFIX=sl\n        ;;\n    esac\n    ;;\n*)\n   OPAL_DYN_LIB_SUFFIX=so\n   ;;\nesac\nAC_SUBST(OPAL_DYN_LIB_PREFIX)\nAC_SUBST(OPAL_DYN_LIB_SUFFIX)\n\n# Need the libtool executable before the rpathify stuff\nLT_OUTPUT\n\n############################################################################\n# final compiler config\n############################################################################\n\nm4_ifdef([project_ompi], [opal_show_subtitle \"Compiler flags\"])\n\n#\n# This is needed for VPATH builds, so that it will -I the appropriate\n# include directory.  We delayed doing it until now just so that\n# '-I$(top_srcdir)' doesn't show up in any of the configure output --\n# purely aesthetic.\n#\n# Because opal_config.h and mpi.h are created by AC_CONFIG_HEADERS, we\n# don't need to -I the builddir for <opal,ompi>/include. If we VPATH\n# building, we do need to include the source directories, however.\n#\nif test \"$OMPI_TOP_BUILDDIR\" != \"$OMPI_TOP_SRCDIR\"; then\n    # Note the embedded m4 directives here -- we must embed them\n    # rather than have successive assignments to these shell\n    # variables, lest the $(foo) names try to get evaluated here.\n    # Yuck!\n    cpp_includes='$(top_srcdir) $(top_builddir) $(top_srcdir)/opal/include m4_ifdef([project_ompi], [$(top_srcdir)/ompi/include]) m4_ifdef([project_oshmem], [$(top_srcdir)/oshmem/include])'\nelse\n    cpp_includes='$(top_srcdir)'\nfi\n\nCPP_INCLUDES=\"$(echo $cpp_includes | $SED 's/[[^ \\]]* */'\"$opal_cc_iquote\"'&/g')\"\nCXX_INCLUDES=\"$(echo $cpp_includes | $SED 's/[[^ \\]]* */'\"$opal_cxx_iquote\"'&/g')\"\nCPPFLAGS=\"$CPP_INCLUDES $CPPFLAGS\"\n# C++ is only relevant if we're building OMPI\nm4_ifdef([project_ompi],[CXXCPPFLAGS=\"$CXX_INCLUDES $CXXCPPFLAGS\"])\n\n# OMPI needs some additional processing of the flags (e.g., get\n# versions without optimization for debugger modules).\n\nm4_ifdef([project_ompi], [OMPI_SETUP_DEBUGGER_FLAGS])\n#\n# Delayed the substitution of CFLAGS and friends until now because\n# they may have been modified throughout the course of this script.\n#\n\nAC_SUBST(CFLAGS)\nAC_SUBST(CPPFLAGS)\nm4_ifdef([project_ompi], [AC_SUBST(FFLAGS)\n                          AC_SUBST(FCFLAGS)\n\n                          AC_SUBST(OMPI_LIBMPI_EXTRA_LIBS)\n                          AC_SUBST(OMPI_LIBMPI_EXTRA_LDFLAGS)])\n\n#\n# Aggregate MCA parameters directory\n#\nAC_SUBST([AMCA_PARAM_SETS_DIR], ['$(opaldatadir)/amca-param-sets'])\n\n############################################################################\n# final wrapper compiler config\n############################################################################\n\nopal_show_subtitle \"Wrapper compiler final setup\"\n# The OMPI wrapper scripts (i.e., not the C-compiled\n# executables) need perl.\nAC_PATH_PROG(PERL, perl, perl)\n\nOPAL_SETUP_WRAPPER_FINAL\n\n# Recreate some defines prefixed with OMPI_ so that there are no bare\n# autoconf macro defines in mpi.h.  Since AC sometimes changes whether\n# things are defined as null tokens or an integer result, two projects\n# with different versions of AC can cause problems.\n\n# According to the autoconf 2.67 documentation the AC_HEADER_STDC macro,\n# and therefore the ac_cv_header_stdc cache variable, is obsolescent, as\n# current systems have conforming header files. Instead of removing the\n# protection completely, let's just make sure it is always on.\nAC_DEFINE(OPAL_STDC_HEADERS, 1,\n          [Do not use outside of mpi.h.  Define to 1 if you have the ANSI C header files.])\nif test $ac_cv_header_sys_time_h = yes ; then\n    AC_DEFINE(OPAL_HAVE_SYS_TIME_H, 1,\n              [Do not use outside of mpi.h.  Define to 1 if you have the <sys/time.h> header file.])\nfi\nif test $ac_cv_type_long_long = yes ; then\n    AC_DEFINE(OPAL_HAVE_LONG_LONG, 1,\n              [Do not use outside of mpi.h.  Define to 1 if the system has the type `long long'.]) dnl `\nfi\nif test $ac_cv_header_sys_synch_h = yes ; then\n    AC_DEFINE(OPAL_HAVE_SYS_SYNCH_H, 1,\n              [Do not use outside of mpi.h.  Define to 1 if you have the <sys/synch.h> header file.])\nfi\n\n# If there is a local hook for each project, call it.  This allows 3rd\n# parties to add configuration steps to OPAL and/or OMPI simply\n# by placing a file in [opal|ompi]/config/whatever.m4 that\n# AC_DEFUN's the appropriate macro name -- no patching is necessary.\n# If that macro is defined, we'll run it here.\n#\n# Unfortunately, aclocal is not smart enough to parse something like\n# the following in opal_mca.m4 (when we're already m4 looping over the\n# project list):\n#\n# m4_foreach(mca_project, [mca_project_list],\n#           [m4_ifdef(mca_project[_CONFIG_LOCAL], mca_project[_CONFIG_LOCAL])])\n#\n# Meaning that aclocal doesn't see that, for example,\n# \"ompi_CONFIG_LOCAL\" is actually invoked at the bottom and therefore\n# go look for an .m4 file that contains it.  Instead, we have to\n# manually list the macros here.  *Then* aclocal is smart enough to go\n# look for an .m4 file containing each macro, and if found,\n# automatically m4_include the corresponding in aclocal.m4.  Bummer.\n# :-\\\n\nm4_ifdef([opal_CONFIG_LOCAL], [opal_CONFIG_LOCAL])\nm4_ifdef([project_ompi],\n         [m4_ifdef([ompi_CONFIG_LOCAL], [ompi_CONFIG_LOCAL])])\n\n############################################################################\n# Party on\n############################################################################\n\n# set projects good/no good AM_CONDITIONALS.  This is at the end so\n# that the OSHMEM/OMPI projects can be disabled, if needed, based on\n# MCA tests.  If a project is to be disabled, also remove it from\n# MCA_PROJECT_SUBDIRS to actually disable building.\nAM_CONDITIONAL([PROJECT_OMPI], [test \"$project_ompi_amc\" = \"true\"])\nAM_CONDITIONAL([PROJECT_OSHMEM], [test \"$project_oshmem_amc\" = \"true\"])\n\nAC_MSG_CHECKING([if libtool needs -no-undefined flag to build shared libraries])\ncase \"`uname`\" in\n  CYGWIN*|MINGW*|AIX*)\n    ## Add in the -no-undefined flag to LDFLAGS for libtool.\n    AC_MSG_RESULT([yes])\n    LDFLAGS=\"$LDFLAGS -no-undefined\"\n    ;;\n  *)\n    ## Don't add in anything.\n    AC_MSG_RESULT([no])\n    ;;\nesac\n\n# opaldatadir, opallibdir, and opalinclude are essentially the same as\n# pkg*dir, but will always be */openmpi.  This is to make it a bit\n# easier to deal with the problem of opal and ompi built from\n# their own tarballs, with their own PACKAGE variables.\nopaldatadir='${datadir}/openmpi'\nopallibdir='${libdir}/openmpi'\nopalincludedir='${includedir}/openmpi'\nAC_SUBST(opaldatadir)\nAC_SUBST(opallibdir)\nAC_SUBST(opalincludedir)\n\nOPAL_SET_MCA_PREFIX([OMPI_MCA_])\nOPAL_SET_MCA_CMD_LINE_ID([mca])\nm4_ifdef([project_ompi],\n         [ompidatadir=\"$opaldatadir\"\n          AC_SUBST(ompidatadir)\n          ompilibdir=\"$opallibdir\"\n          AC_SUBST(ompilibdir)\n          ompiincludedir=\"$opalincludedir\"\n          AC_SUBST(ompiincludedir)])\nm4_ifdef([project_oshmem],\n         [oshmemdatadir=\"$opaldatadir\"\n          AC_SUBST(oshmemdatadir)\n          oshmemlibdir=\"$opallibdir\"\n          AC_SUBST(oshmemlibdir)\n          oshmemincludedir=\"$opalincludedir\"\n          AC_SUBST(oshmemincludedir)])\n\nopal_show_subtitle \"Final output\"\n\nAC_MSG_CHECKING([OMPI final CPPFLAGS])\nAC_MSG_RESULT([$CPPFLAGS])\nAC_MSG_CHECKING([OMPI final LDFLAGS])\nAC_MSG_RESULT([$LDFLAGS])\nAC_MSG_CHECKING([OMPI final LIBS])\nAC_MSG_RESULT([$LIBS])\n\nAC_CONFIG_FILES([\n    Makefile\n\n    docs/Makefile\n\n    config/Makefile\n\n    contrib/Makefile\n\n    contrib/dist/mofed/debian/changelog\n    contrib/dist/mofed/debian/control\n    contrib/dist/mofed/debian/copyright:LICENSE\n\n    3rd-party/Makefile\n\n    test/Makefile\n    test/event/Makefile\n    test/asm/Makefile\n    test/datatype/Makefile\n    test/class/Makefile\n    test/mpool/Makefile\n    test/support/Makefile\n    test/threads/Makefile\n    test/util/Makefile\n])\n\nm4_ifdef([project_ompi], [AC_CONFIG_FILES([test/monitoring/Makefile test/spc/Makefile])])\n\nAC_CONFIG_FILES([contrib/dist/mofed/debian/rules],\n                [chmod +x contrib/dist/mofed/debian/rules])\nAC_CONFIG_FILES([contrib/dist/mofed/compile_debian_mlnx_example],\n                [chmod +x contrib/dist/mofed/compile_debian_mlnx_example])\n\nAS_IF([test -n \"$OPAL_MAKEDIST_DISABLE\"],\n      [AC_MSG_WARN([\"make dist\" will be disabled due to: $OPAL_MAKEDIST_DISABLE])])\nAC_SUBST([OPAL_MAKEDIST_DISABLE])\n\nOPAL_CONFIG_FILES\nm4_ifdef([project_ompi], [OMPI_CONFIG_FILES])\nm4_ifdef([project_oshmem], [OSHMEM_CONFIG_FILES])\n\nOPAL_CHECK_LIBNL_SUMMARY\n\n# checkpoint results\nAC_CACHE_SAVE\n\nAC_OUTPUT\n\nOPAL_SUMMARY_PRINT\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "ompi",
          "type": "tree",
          "content": null
        },
        {
          "name": "opal",
          "type": "tree",
          "content": null
        },
        {
          "name": "oshmem",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}