{
  "metadata": {
    "timestamp": 1736709935503,
    "page": 465,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "yangjie10930/EpMedia",
      "stars": 2435,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1142578125,
          "content": "*.js linguist-language=java\n*.css linguist-language=java\n*.html linguist-language=java\n*.less linguist-language=java\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.115234375,
          "content": "*.iml\n.gradle\n/local.properties\n/.idea/workspace.xml\n/.idea/libraries\n.DS_Store\n/build\n/captures\n.externalNativeBuild\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0390625,
          "content": "MIT License\n\nCopyright (c) 2020 YangJie\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.728515625,
          "content": "[![](https://img.shields.io/badge/minSdkVersion-21-green.svg)](https://developer.android.google.cn) [![](https://img.shields.io/badge/FFmpeg-4.2.2-orange.svg)](https://ffmpeg.org/download.html#release_3.3) \n[![](https://jitpack.io/v/yangjie10930/EpMedia.svg)](https://jitpack.io/#yangjie10930/EpMedia)\n#### 中文 / [English](https://github.com/yangjie10930/EpMedia/blob/master/Readme-English.md)\n\n# EpMedia\n基于FFmpeg开发的视频处理框架，简单易用，体积小，帮助使用者快速实现视频处理功能。包含以下功能：剪辑，裁剪，旋转，镜像，合并，分离，添加LOGO，添加滤镜，添加背景音乐，加速减速视频，倒放音视频。</br>\n\n好用的话麻烦给个star,感谢您的支持与鼓励O(∩_∩)O\n\n<a href=\"https://github.com/yangjie10930/EpMediaDemo\" target=\"_blank\">Demo点这里</a>   \n\n##### V1.0.0版本更新说明\n1. 更新FFmpeg至4.2.2版本，使用ndk-r21编译，采用clang工具;\n1. 新增x86_64支持;\n1. 移除添加文字的功能(由于依赖库编译的一些问题，该方法暂时无法使用，后续会加回，如果需要此功能，请使用v0.9.5版本);\n1. 添加MediaCodec的支持。\n\n\n## 使用方法:\n* build.gradle里添加:\n```Java\nallprojects {\n\t\trepositories {\n\t\t\t...\n\t\t\tmaven { url 'https://jitpack.io' }\n\t\t}\n\t}\n```\n* 添加gradle依赖:\n```Java\ncompile 'com.github.yangjie10930:EpMedia:v1.0.1'\n```\n## 单个视频处理:\n* 创建待处理视频:\n```Java\nEpVideo epVideo = new EpVideo(url);\n```\n* 剪辑\n```Java\n//一个参数为剪辑的起始时间，第二个参数为持续时间,单位：秒\nepVideo.clip(1,2);//从第一秒开始，剪辑两秒\n```\n* 裁剪\n```Java\n//参数分别是裁剪的宽，高，起始位置X，起始位置Y\nepVideo.crop(480,360,0,0);\n```\n* 旋转和镜像\n```Java\n//第一个参数为旋转角度，第二个参数为是否镜像，仅支持90,180,270度旋转\nepVideo.rotation(90,true);\n```\n* 添加文字\n```Java\n//参数分别是添加位置的X,Y坐标,文字的字号(单位px),文字颜色,字体文件的路径,内容，Time类为显示的起始时间和持续时间\nepVideo.addText(10,10,35,\"red\",ttfPath,text);\nepVideo.addText(new EpText(10,10,35,\"red\",ttfPath,text,new EpText.Time(3,5)));\n```\n* 添加logo\n```Java\n//添加图片类\n//参数为图片路径,X,Y,图片的宽,高,是否是动图(仅支持png,jpg,gif图片,如果是gif图片,最后一个参数为true)\nEpDraw epDraw = new EpDraw(filePath,10,10,50,50,false);\nepVideo.addDraw(epDraw);\n或\nepVideo.addDraw(new EpDraw(filePath,10,10,50,50,false,3,5));//最后两个参数为显示的起始时间和持续时间\n```\n* 添加自定义滤镜\n```Java\n//自定义滤镜，ffmpeg命令支持的滤镜都支持\n//详细效果可参考：http://blog.csdn.net/u012027644/article/details/77833484\n//具体内容参见ffmpeg filter官网：http://www.ffmpeg.org/ffmpeg-filters.html\n//举例 String filter = \"lutyuv=y=maxval+minval-val:u=maxval+minval-val:v=maxval+minval-val\";//底片效果\nepVideo.addFilter(filter);\n```\n* 处理单个视频\n```Java\nEpVideo epVideo = new EpVideo(url);\n//输出选项，参数为输出文件路径(目前仅支持mp4格式输出)\nEpEditor.OutputOption outputOption = new EpEditor.OutputOption(outFile);\noutputOption.width = 480;//输出视频宽，如果不设置则为原始视频宽高\noutputOption.height = 360;//输出视频高度\noutputOption.frameRate = 30;//输出视频帧率,默认30\noutputOption.bitRate = 10;//输出视频码率,默认10\nEpEditor.exec(epVideo, outputOption, new OnEditorListener());\n```\n* 添加背景音乐\n```Java\n//参数分别是视频路径，音频路径，输出路径,原始视频音量(1为100%,0.7为70%,以此类推),添加音频音量\nEpEditor.music(videoPath, audioPath, outfilePath, 1, 0.7, new OnEditorListener());\n```\n* 分离音视频\n```Java\n//参数分别是视频路径，输出路径，输出类型\nEpEditor.demuxer(videoPath, outfilePath,EpEditor.Format.MP3, new OnEditorListener());\n```\n* 视频变速\n```Java\n//参数分别是视频路径,输出路径,变速倍率（仅支持0.25-4倍),变速类型(VIDEO-视频(选择VIDEO的话则会屏蔽音频),AUDIO-音频,ALL-视频音频同时变速)\nEpEditor.changePTS(videoPath, outfilePath, 2.0f, EpEditor.PTS.ALL, new OnEditorListener());\n```\n* 音视频倒放\n```Java\n//参数分别是视频路径,输出路径,视频是否倒放，音频是否倒放（两个都选true的话，音视频都倒放，视频ture音频false的话，输出倒放的无音频视频，视频false音频ture的话，输入倒放的音频，音频的倒放也用这个配置）\nEpEditor.reverse(videoPath, outfilePath, true, true, new OnEditorListener());\n```\n* 视频转图片\n```Java\n//参数分别是视频路径,输出路径（路径用集合的形式，比如pic%03d.jpg,支持jpg和png两种图片格式）,输出图片的宽度，输出图片的高度，每秒输出图片数量（2的话就是每秒2张，0.5f的话就是每两秒一张）\nEpEditor.video2pic(videoPath, outfilePath, 720, 1080, 2, new OnEditorListener());\n```\n* 图片转视频\n```Java\n//参数分别是图片集合路径,输出路径,输出视频的宽度，输出视频的高度，输出视频的帧率\nEpEditor.pic2video(picPath, outfilePath, 480, 320, 30, new OnEditorListener());\n```\n## 多个视频处理&合并\n* 合并视频（支持对要合并的视频进行其他处理操作）\n```Java\nArrayList<EpVideo> epVideos = new ArrayList<>();\nepVideos.add(new EpVideo(url));//视频1\nepVideos.add(new EpVideo(url2));//视频2\nepVideos.add(new EpVideo(url3));//视频3\n//输出选项，参数为输出文件路径(目前仅支持mp4格式输出)\nEpEditor.OutputOption outputOption = new EpEditor.OutputOption(outFile);\noutputOption.width = 480;//输出视频宽，默认480\noutputOption.height = 360;//输出视频高度,默认360\noutputOption.frameRate = 30;//输出视频帧率,默认30\noutputOption.bitRate = 10;//输出视频码率,默认10\nEpEditor.merge(epVideos, outputOption, new OnEditorListener());\n```\n* 无损合并视频(对视频格式严格，需要分辨率，帧率，码率都相同，不支持对要合并的视频进行其他处理操作，该方法合并速度很快，另：两段同格式的音频拼接也可使用该方法)\n```Java\nArrayList<EpVideo> epVideos = new ArrayList<>();\nepVideos.add(new EpVideo(url));//视频1\nepVideos.add(new EpVideo(url2));//视频2\nepVideos.add(new EpVideo(url3));//视频3\nEpEditor.mergeByLc(epVideos, new EpEditor.OutputOption(outFile), new OnEditorListener());\n```\n## 自定义命令\n* 输入ffmpeg命令即可（起头不用输ffmpeg,例子\"-i input.mp4 -ss 0 -t 5 output.mp4\",第二个参数为视频长度，单位微秒，可以填0）\n```Java\nEpEditor.execCmd(\"\", 0, new OnEditorListener() {\n\t@Override\n\tpublic void onSuccess() {\n\n\t}\n\n\t@Override\n\tpublic void onFailure() {\n\n\t}\n\n\t@Override\n\tpublic void onProgress(float progress) {\n\n\t}\n});\n```\n"
        },
        {
          "name": "Readme-English.md",
          "type": "blob",
          "size": 7.1953125,
          "content": "[![](https://img.shields.io/badge/minSdkVersion-21-green.svg)](https://developer.android.google.cn) [![](https://img.shields.io/badge/FFmpeg-4.2.2-orange.svg)](https://ffmpeg.org/download.html#release_3.3) \n[![](https://jitpack.io/v/yangjie10930/EpMedia.svg)](https://jitpack.io/#yangjie10930/EpMedia)\n#### English / [中文](https://github.com/yangjie10930/EpMedia/blob/master/README.md)\n\n# EpMedia\nThe video processing framework based on FFmpeg developed on Android is simple, easy to use, and small in size, helping users quickly realize video processing functions. Contains the following functions: editing, cropping, rotating, mirroring, merging, separating, variable speed, adding LOGO, adding filters, adding background music, accelerating and decelerating video, rewinding audio and video. \n\n<a href=\"https://github.com/yangjie10930/EpMediaDemo\" target=\"_blank\">Demo</a>   \n\n##### V1.0.0 version update instructions\n1. Update FFmpeg to version 4.2.2, compile with ndk-r21, use clang tool;\n1. Added x86_64 support;\n1. Removed the function of adding text (due to some problems of dependent library compilation, this method is temporarily unavailable, and will be added back later, if you need this function, please use v0.9.5 version);\n1. Add MediaCodec support.\n\n\n## How to use:\n* Add in build.gradle:\n```Java\nallprojects {\n\t\trepositories {\n\t\t\t...\n\t\t\tmaven { url 'https://jitpack.io' }\n\t\t}\n\t}\n```\n* Add gradle dependency:\n```Java\ncompile 'com.github.yangjie10930:EpMedia:v1.0.1'\n```\n## Single video processing:\n* create pending video:\n```Java\nEpVideo epVideo = new EpVideo(url);\n```\n* clip\n```Java\n//The first parameter is the start time of the clip, the second parameter is the duration, in seconds\nepVideo.clip(1,2);//From the first second, edit for two seconds\n```\n* crop\n```Java\n//The parameters are the crop width, height, starting position X, starting position Y\nepVideo.crop(480,360,0,0);\n```\n* rotate and mirror\n```Java\n//The first parameter is the rotation angle, the second parameter is whether to mirror, only supports 90,180,270 degree rotation\nepVideo.rotation(90,true);\n```\n* add logo\n```Java\n// Add picture class\n// The parameter is the image path, X, Y, the width and height of the image, whether it is a moving image (only png, jpg, gif images are supported, if it is a gif image, the last parameter is true)\nEpDraw epDraw = new EpDraw(filePath,10,10,50,50,false);\nepVideo.addDraw(epDraw);\n```\nor\n```Java\nepVideo.addDraw(new EpDraw(filePath,10,10,50,50,false,3,5));//The last two parameters are the displayed start time and duration\n```\n* Add custom filter\n```Java\n// Custom filters, all filters supported by ffmpeg command are supported\n// For detailed results, please refer to: http://blog.csdn.net/u012027644/article/details/77833484\n// For details, please refer to ffmpeg official website：http://www.ffmpeg.org/ffmpeg-filters.html\n//Examples: String filter = \"lutyuv=y=maxval+minval-val:u=maxval+minval-val:v=maxval+minval-val\";\nepVideo.addFilter(filter);\n```\n* Processing a single video\n```Java\nEpVideo epVideo = new EpVideo(url);\n//Output options, the parameter is the output file path (currently only supports mp4 format output)\nEpEditor.OutputOption outputOption = new EpEditor.OutputOption(outFile);\noutputOption.width = 480;//The width and height of the output video, if not set, the original video width and height\noutputOption.height = 360;//Output video height\noutputOption.frameRate = 30;//frame rate, default 30\noutputOption.bitRate = 10;//bit rate, default 10\nEpEditor.exec(epVideo, outputOption, new OnEditorListener());\n```\n* Add background music\n```Java\n//The parameters are video path, audio path, output path, original video volume (1 is 100%, 0.7 is 70%, and so on), add audio volume\nEpEditor.music(videoPath, audioPath, outfilePath, 1, 0.7, new OnEditorListener());\n```\n* Separate audio and video\n```Java\n//The parameters are the video path, output path, and output type\nEpEditor.demuxer(videoPath, outfilePath,EpEditor.Format.MP3, new OnEditorListener());\n```\n* Change video playback speed\n```Java\n//The parameters are video path, output path, variable speed ratio (only supports 0.25-4 times), variable speed type (VIDEO-video (if VIDEO is selected, audio will be shielded), AUDIO-audio, ALL-video audio and variable speed)\nEpEditor.changePTS(videoPath, outfilePath, 2.0f, EpEditor.PTS.ALL, new OnEditorListener());\n```\n* Rewind video\n```Java\n//The parameters are video path, output path, whether the video is reversed, and whether the audio is reversed (if both are true, the audio and video are reversed, if the video ture audio is false, the output is reversed without audio video, video false audio ture If it is, input the audio of the reverse playback, and the audio reverse playback also uses this configuration)\nEpEditor.reverse(videoPath, outfilePath, true, true, new OnEditorListener());\n```\n* Video to image\n```Java\n//The parameters are the video path, the output path (the path is in the form of a collection, such as pic% 03d.jpg, supports both jpg and png image formats), the width of the output picture, the height of the output picture, and the number of output pictures per second (if 2 It ’s 2 frames per second, if 0.5f, it ’s one frame every two seconds.)\nEpEditor.video2pic(videoPath, outfilePath, 720, 1080, 2, new OnEditorListener());\n```\n* Image to video\n```Java\n//The parameters are picture collection path, output path, output video width, output video height, output video frame rate\nEpEditor.pic2video(picPath, outfilePath, 480, 320, 30, new OnEditorListener());\n```\n## Multiple video processing & merging\n* Merge video (support other processing operations on the video to be merged)\n```Java\nArrayList<EpVideo> epVideos = new ArrayList<>();\nepVideos.add(new EpVideo(url));//Video 1\nepVideos.add(new EpVideo(url2));//Video 2\nepVideos.add(new EpVideo(url3));//Video 3\n//Output options, the parameter is the output file path (currently only supports mp4 format output)\nEpEditor.OutputOption outputOption = new EpEditor.OutputOption(outFile);\noutputOption.width = 480;//Output video width, default 480\noutputOption.height = 360;//Output video height, default 360\noutputOption.frameRate = 30;//Output video frame rate, default 30\noutputOption.bitRate = 10;//Output video bit rate, default 10\nEpEditor.merge(epVideos, outputOption, new OnEditorListener());\n```\n* Lossless merged video (strict on the video format, requiring the same resolution, frame rate, and bit rate. It does not support other processing operations on the video to be merged. The method of merging is very fast. Another: two pieces of audio in the same format are also spliced. (This method can be used)\n```Java\nArrayList<EpVideo> epVideos = new ArrayList<>();\nepVideos.add(new EpVideo(url));//Video 1\nepVideos.add(new EpVideo(url2));//Video 2\nepVideos.add(new EpVideo(url3));//Video 3\nEpEditor.mergeByLc(epVideos, new EpEditor.OutputOption(outFile), new OnEditorListener());\n```\n## Custom commands\n* Enter the ffmpeg command (you don't need to input ffmpeg at the beginning, for example \"-i input.mp4 -ss 0 -t 5 output.mp4\", the second parameter is the video length, the unit is microseconds, you can fill in 0)\n```Java\nEpEditor.execCmd(\"\", 0, new OnEditorListener() {\n\t@Override\n\tpublic void onSuccess() {\n\n\t}\n\n\t@Override\n\tpublic void onFailure() {\n\n\t}\n\n\t@Override\n\tpublic void onProgress(float progress) {\n\n\t}\n});\n```\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.7802734375,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    repositories {\n        maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }\n        jcenter()\n        google()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.6.3'\n        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }\n        jcenter()\n        maven { url \"https://jitpack.io\" }\n        google()\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.7451171875,
          "content": "# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\norg.gradle.jvmargs=-Xmx1536m\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n\nandroid.useDeprecatedNdk = true\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.8544921875,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.259765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windowz variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\ngoto execute\n\n:4NT_args\n@rem Get arguments from the 4NT Shell from JP Software\nset CMD_LINE_ARGS=%$\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "joevideolib",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0302734375,
          "content": "include ':app', ':joevideolib'\n"
        }
      ]
    }
  ]
}