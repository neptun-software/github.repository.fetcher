{
  "metadata": {
    "timestamp": 1736710107607,
    "page": 734,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "begeekmyfriend/bplustree",
      "stars": 1864,
      "defaultBranch": "disk-io",
      "files": [
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 0.333984375,
          "content": "cmake_minimum_required (VERSION 2.6)\n\nproject (bplustree)\n\n#set(CMAKE_BUILD_TYPE \"Debug\")\nset(CMAKE_CXX_FLAGS_DEBUG \"$ENV{CXXFLAGS} -O0 -Wall -g -ggdb\")\nset(CMAKE_CXX_FLAGS_RELEASE \"$ENV{CXXFLAGS} -O3 -Wall\")\n\nset(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)\nset(LIB_BPLUSTREE_NAME bplustree)\n\nadd_subdirectory(lib)\nadd_subdirectory(tests)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.048828125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014 Leo Ma\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.4716796875,
          "content": "# B+Tree\nA minimal B+Tree implementation for millions (even billions) of key-value storage based on Posix.\n\n## Branch\n[in-memory](https://github.com/begeekmyfriend/bplustree/tree/in-memory) for learning and debugging.\n\n## Demo\n```shell\n./demo_build.sh\n```\n\n## Code Coverage Test\n\n**Note:** You need to `rm /tmp/coverage.index*` for this testing every time because the configuration (i.e block size and order etc.) in those index files is immutable!\n\n```shell\n./coverage_build.sh\n```\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "coverage_build.sh",
          "type": "blob",
          "size": 0.2587890625,
          "content": "#!/bin/sh\nsudo rm /tmp/coverage*\nrm -rf build\nmkdir build\necho \"Please wait about 10 seconds for test case generation...\"\npython ./tests/testcase_generator.py\nmv testcase build\ncd build\ncmake -DCMAKE_BUILD_TYPE=Coverage ..\nmake coverage\nfirefox coverage/index.html\n"
        },
        {
          "name": "demo_build.sh",
          "type": "blob",
          "size": 0.0771484375,
          "content": "#!/bin/sh\nrm -rf build\nmkdir build\ncd build\ncmake ..\nmake\n./bin/bplustree_demo\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.29296875,
          "content": "{\n  \"name\" : \"bplustree\",\n  \"description\" : \"A minimal B+Tree library for key-value storage.\",\n  \"license\" : \"MIT\",\n  \"version\" : \"0.1\",\n  \"repo\" : \"begeekmyfriend/bplustree\",\n  \"src\" : [\"lib/bplustree.h\", \"lib/bplustree.c\"],\n  \"keywords\" : [\"tree\", \"dictionary\", \"B+tree\", \"key-value\", \"storage\"]\n}\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}