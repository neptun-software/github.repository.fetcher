{
  "metadata": {
    "timestamp": 1736709822423,
    "page": 285,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "saki4510t/UVCCamera",
      "stars": 3052,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.9482421875,
          "content": "# built application files\n*.apk\n*.ap_\n\n# files for the dex VM\n*.dex\n\n# Java class files\n*.class\n\n# Mobile Tools for Java (J2ME)\n.mtj.tmp/\n\n\n# generated files\nbin/\nobj\nobj/local\ngen/\nbin/dexedLibs\nbin/res\nbin/*.xml\nbin/classes\nbin/res\nbin/jarlist.cache\n*.cache\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Eclipse project files\n.classpath\n.project\n\n# Proguard folder generated by Eclipse\nproguard/\n\n# Intellij project files\n*.iml\n*.ipr\n*.iws\n\n# Gradle\n.gradle/\n.gradle\nbuild/\nbuild\n\n# gedit\n*~\n\n.idea/*.xml\n!.idea/codeStyleSettings.xml\n!.idea/copyright/*.xml\n!.idea/fileColors.xml\n!.idea/encodings.xml\n!.idea/gradle.xml\n!.idea/runConfigurations/*.xml\n\n!.idea/inspectionProfiles/*.xml\n.idea/inspectionProfiles/profiles_settings.xml\n\n!.idea/scopes/*.xml\n.idea/scopes/scope_settings.xml\n\n!.idea/templateLanguages.xml\n!.idea/vcs.xml\nprofiles_settings.xml\n.idea/libraries\nlibuvccamera/src/main/libs\n.idea/copyright\n.idea/scopes\n.idea/caches\n.idea/codeStyles\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.0595703125,
          "content": "UVCCamera\n=========\n\nlibrary and sample to access to UVC web camera on non-rooted Android device\n\nCopyright (c) 2014-2017 saki t_saki@serenegiant.com\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n\nAll files in the folder are under this Apache License, Version 2.0.\nFiles in the jni/libjpeg, jni/libusb and jin/libuvc folders may have a different license,\nsee the respective files.\n\nHow to compile library  \n=========\nThe Gradle build system will build the entire project, including the NDK parts. If you want to build with Gradle build system,\n\n1. make directory on your favorite place (this directory is parent directory of `UVCCamera` project).\n2. change directory into the directory.\n3. clone this repository with `git  clone https://github.com/saki4510t/UVCCamera.git`\n4. change directory into `UVCCamera` directory with `cd UVCCamera`\n5. build library with all sample projects using `gradle build`\n\nIt will takes several minutes to build. Now you can see apks in each `{sample project}/build/outputs/apks` directory.  \nOr if you want to install and try all sample projects on your device, run `gradle installDebug`.  \n\nNote: Just make sure that `local.properties` contains the paths for `sdk.dir` and `ndk.dir`. Or you can set them as enviroment variables of you shell. On some system, you may need add `JAVA_HOME` envairoment valiable that points to JDK directory.  \n\nIf you want to use Android Studio(unfortunately NDK supporting on Android Studio is very poor though),\n1. make directory on your favorite place (this directory is parent directory of `UVCCamera` project).\n2. change directory into the directory.\n3. clone this repository with `git  clone https://github.com/saki4510t/UVCCamera.git`\n4. start Android Studio and open the cloned repository using `Open an existing Android Studio project`\n5. Android Studio raise some errors but just ignore now. Android Studio generate `local.properties` file. Please open `local.properties` and add `ndk.dir` key to the end of the file. The contents of the file looks like this.\n```\nsdk.dir={path to Android SDK on your storage}\nndk.dir={path to Android SDK on your storage}\n```\nPlease replace actual path to SDK and NDK on your storage.  \nOf course you can make `local.properties` by manually instead of using automatically generated ones by Android Studio.\n6. Synchronize project\n7. execute `Make project` from `Build` menu.\n\nIf you want to use build-in VCS on Android Studio, use `Check out project from Version Control` from `https://github.com/saki4510t/UVCCamera.git`. After cloning, Android Studio ask you open the project but don't open now. Instead open the project using `Open an existing Android Studio project`. Other procedures are same as above.\n\nIf you still need to use Eclipse or if you don't want to use Gradle with some reason, you can build suing `ndk-build` command.\n\n1. make directory on your favorite place.\n2. change directory into the directory.\n3. clone this repository with `git  clone https://github.com/saki4510t/UVCCamera.git`\n4. change directory into `{UVCCamera}/libuvccamera/build/src/main/jni` directory.\n5. run `ndk-build`\n6. resulted shared libraries are available under `{UVCCamera}/libuvccamera/build/src/main/libs` directory and copy them into your project with directories by manually.\n7. copy files under `{UVCCamera}/libuvccamera/build/src/main/java` into your project source directory by manually.\n\nHow to use\n=========\nPlease see sample project and/or our web site(but sorry web site is Japanese only).\nThese sample projects are IntelliJ projects, as is the library.\nThis library works on at least Android 3.1 or later(API >= 12), but Android 4.0(API >= 14)\nor later is better. USB host function must be required.\nIf you want to try on Android 3.1, you will need some modification(need to remove\nsetPreviewTexture method in UVCCamera.java etc.), but we have not confirm whether the sample\nproject run on Android 3.1 yet.\nSome sample projects need API>=18 though.\n\n### 2014/07/25\nAdd some modification to the library and new sample project named \"USBCameraTest2\".\nThis new sample project demonstrate how to capture movie using frame data from\nUVC camera with MediaCodec and MediaMuxer.\nNew sample requires at least Android 4.3(API>=18).\nThis limitation does not come from the library itself but from the limitation of\nMediaMuxer and MediaCodec#createInputSurface.\n\n### 2014/09/01\nAdd new sample project named `USBCameraTest3`\nThis new sample project demonstrate how to capture audio and movie simultaneously\nusing frame data from UVC camera and internal mic with MediaCodec and MediaMuxer.\nThis new sample includes still image capturing as png file.(you can easily change to\nsave as jpeg) This sample also requires at least Android 4.3(API>=18).\nThis limitation does not come from the library itself but from the limitation of\nMediaMuxer and MediaCodec#createInputSurface.\n\n### 2014/11/16\nAdd new sample project named `USBCameraTest4`\nThis new sample project mainly demonstrate how to use offscreen rendering\nand record movie without any display.\nThe communication with camera execute as Service and continue working\neven if you stop app. If you stop camera communication, click \"stop service\" button.\n\n### 2014/12/17\nAdd bulk transfer mode and update sample projects.\n\n### 2015/01/12\nAdd wiki page, [HowTo](https://github.com/saki4510t/UVCCamera/wiki/howto \"HowTo\")\n\n### 2015/01/22\nAdd method to adjust preview resolution and frame data mode.\n\n### 2015/02/12\nAdd IFrameCallback interface to get frame data as ByteArray\nand new sample project `USBCameraTest5` to demonstrate how to use the callback method.\n\n### 2015/02/18\nAdd `libUVCCamera` as a library project(source code is almost same as previous release except Android.mk).\nAll files and directories under `library` directory is deprecated.\n\n### 2015/05/25\nlibraryProject branch merged to master.\n\n### 2015/05/30\nFixed the issue that DeviceFilter class could not work well when providing venderID, productID etc.\n\n### 2015/06/03\nAdd new sample project named `USBCameraTest6`\nThis new sample project mainly demonstrate how to show video images on two TextureView simultaneously, side by side.\n\n### 2015/06/10\nFixed the issue of pixel format is wrong when NV21 mode on calling IFrameCallback#onFrame(U and V plane was swapped) and added YUV420SP mode.\n\n### 2015/06/11\nImprove the issue of `USBCameraTest4` that fails to connect/disconnect.\n\n### 2015/07/19\nAdd new methods to get/set camera features like brightness, contrast etc.  \nAdd new method to get supported resolution from camera as json format.  \n\n### 2015/08/17\nAdd new sample project `USBCameraTest7` to demonstrate how to use two camera at the same time.  \n\n### 2015/09/20\nFixed the issue that building native libraries fail on Windows.\n\n### 2015/10/30\nMerge pull request(add status and button callback). Thanks Alexey Pelykh.\n\n### 2015/12/16\nAdd feature so that user can request fps range from Java code when negotiating with camera. Actual resulted fps depends on each UVC camera. Currently there is no way to get resulted fps(will add on future).\n\n### 2016/03/01\nupdate minoru001 branch, experimentaly support streo camera.\n\n### 2016/06/18\nreplace libjpeg-turbo 1.4.0 with 1.5.0\n\n### 2016/11/17\napply bandwidth factor setting of usbcameratest7 on master branch\n\n### 2016/11/21\nNow this repository supports Android N(7.x) and dynamic permission model of Android N and later.\n\n### 2017/01/16\nAdd new sample app `usbCameraTest8` to show how to set/get uvc control like brightness \n\n### 2017/04/17\nAdd new sample app on [OpenCVwithUVC](https://github.com/saki4510t/OpenCVwithUVC.git) repository.\nThis shows the way to pass video images from UVC into `cv::Mat` (after optional applying video effect by OpenGL|ES) and execute image processing by `OpenCV`.\n"
        },
        {
          "name": "UVCCamera.iml",
          "type": "blob",
          "size": 0.865234375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module external.linked.project.id=\"UVCCamera\" external.linked.project.path=\"$MODULE_DIR$\" external.root.project.path=\"$MODULE_DIR$\" external.system.id=\"GRADLE\" type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"FacetManager\">\n    <facet type=\"java-gradle\" name=\"Java-Gradle\">\n      <configuration>\n        <option name=\"BUILD_FOLDER_PATH\" value=\"$MODULE_DIR$/build\" />\n        <option name=\"BUILDABLE\" value=\"false\" />\n      </configuration>\n    </facet>\n  </component>\n  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_1_8\" inherit-compiler-output=\"true\">\n    <exclude-output />\n    <content url=\"file://$MODULE_DIR$\">\n      <excludeFolder url=\"file://$MODULE_DIR$/.gradle\" />\n    </content>\n    <orderEntry type=\"jdk\" jdkName=\"1.8\" jdkType=\"JavaSDK\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n</module>"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.8642578125,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\nbuildscript {\n    repositories {\n//\t\tgoogle()\n\t\tmaven { url 'https://maven.google.com' }\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.1.4'\n    }\n}\n\nallprojects {\n    repositories {\n//    \tgoogle()\n\t\tmaven { url 'https://maven.google.com' }\n\t\tjcenter()\n\t\tmaven { url 'http://raw.github.com/saki4510t/libcommon/master/repository/' }\n    }\n}\n\ntask clean(type: Delete) {\n\tdelete rootProject.buildDir\n}\n\next {\n\tsupportLibVersion = '27.1.1'  // variable that can be referenced to keep support libs consistent\n\tcommonLibVersion= '2.12.4'\n\tversionBuildTool = '27.0.3'\n\tversionCompiler = 27\n\tversionTarget = 27\n\tversionNameString = '1.0.0'\n\tjavaSourceCompatibility = JavaVersion.VERSION_1_8\n\tjavaTargetCompatibility = JavaVersion.VERSION_1_8\n}\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.8310546875,
          "content": "# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx10248m -XX:MaxPermSize=256m\norg.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\norg.gradle.parallel=true"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.9609375,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched.\nif $cygwin ; then\n    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\nfi\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >&-\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >&-\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.34765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windowz variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\ngoto execute\r\n\r\n:4NT_args\r\n@rem Get arguments from the 4NT Shell from JP Software\r\nset CMD_LINE_ARGS=%$\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "libuvccamera",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 1.1884765625,
          "content": "/*\n *  UVCCamera\n *  library and sample to access to UVC web camera on non-rooted Android device\n *\n * Copyright (c) 2014-2017 saki t_saki@serenegiant.com\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *   You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *   Unless required by applicable law or agreed to in writing, software\n *   distributed under the License is distributed on an \"AS IS\" BASIS,\n *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *   See the License for the specific language governing permissions and\n *   limitations under the License.\n *\n *  All files in the folder are under this Apache License, Version 2.0.\n *  Files in the libjpeg-turbo, libusb, libuvc, rapidjson folder\n *  may have a different license, see the respective files.\n */\n\ninclude ':libuvccamera'\ninclude ':usbCameraCommon'\ninclude ':usbCameraTest'\ninclude ':usbCameraTest0'\ninclude ':usbCameraTest2'\ninclude ':usbCameraTest3'\ninclude ':usbCameraTest4'\ninclude ':usbCameraTest5'\ninclude ':usbCameraTest6'\ninclude ':usbCameraTest7'\ninclude ':usbCameraTest8'\n"
        },
        {
          "name": "usbCameraCommon",
          "type": "tree",
          "content": null
        },
        {
          "name": "usbCameraTest",
          "type": "tree",
          "content": null
        },
        {
          "name": "usbCameraTest0",
          "type": "tree",
          "content": null
        },
        {
          "name": "usbCameraTest2",
          "type": "tree",
          "content": null
        },
        {
          "name": "usbCameraTest3",
          "type": "tree",
          "content": null
        },
        {
          "name": "usbCameraTest4",
          "type": "tree",
          "content": null
        },
        {
          "name": "usbCameraTest5",
          "type": "tree",
          "content": null
        },
        {
          "name": "usbCameraTest6",
          "type": "tree",
          "content": null
        },
        {
          "name": "usbCameraTest7",
          "type": "tree",
          "content": null
        },
        {
          "name": "usbCameraTest8",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}