{
  "metadata": {
    "timestamp": 1736709952989,
    "page": 494,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "linux-test-project/ltp",
      "stars": 2363,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.013671875,
          "content": "Containerfile\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.630859375,
          "content": "CVS\n.*.swp\n*~\n*.o\n*.o.d\n*.obj\n*.gdb\ncore\n.gdb_history\n.gdbinit\nlib*.a\n.cache.mk\n*.dwo\n*.mod\nbuilt-in.a\n\n/aclocal.m4\nautom4te.cache\n/compile\n/configure\n/config.cache\n/config.guess\n/config.log\n/config.mk\n/config.status\n/config.sub\n/conf*/\n/install-sh\n/missing\n/include/config.h\n/include/config.h.in\n/include/stamp-h1\n/m4/Makefile\n/m4/Makefile.in\n\n/tags\n/Version\n/include/mk/config.mk\n/include/mk/config-openposix.mk\n/include/mk/features.mk\n/m4/ltp-version.m4\n/pan/ltp-bump\n/pan/ltp-pan\n\ncscope.*\nncscope.*\n\n.dep_modules\n.gitattributes\n.pc/\npatches/\n*.diff\n*.patch\n*.rej\n*.orig\n*.eml\n\n*.run-test\n*.test\nlogfile.*\n\n/utils/benchmark/ebizzy-0.3/ebizzy\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.4775390625,
          "content": "[submodule \"testcases/kernel/mce-test\"]\n\tpath = testcases/kernel/mce-test\n\turl = git://git.kernel.org/pub/scm/linux/kernel/git/gong.chen/mce-test.git\n[submodule \"tools/sparse/sparse-src\"]\n\tpath = tools/sparse/sparse-src\n\turl = git://git.kernel.org/pub/scm/devel/sparse/sparse.git\n[submodule \"tools/kirk\"]\n\tpath = tools/kirk\n\turl = https://github.com/linux-test-project/kirk.git\n[submodule \"tools/ltx/ltx-src\"]\n\tpath = tools/ltx/ltx-src\n\turl = https://github.com/linux-test-project/ltx.git\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 0.1767578125,
          "content": "Petr Vorel <pvorel@suse.cz> <petr.vorel@gmail.com>\nPetr Vorel <pvorel@suse.cz> <pevik@users.noreply.github.com>\nXinjian Ma (Fujitsu) <maxj.fnst@fujitsu.com> <maxj.fnst@fujitsu.com>\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.3154296875,
          "content": "version: 2\n\nbuild:\n  os: \"ubuntu-22.04\"\n  tools:\n    python: \"3.6\"\n  apt_packages:\n    - enchant-2\n    - hunspell-en-us\n\n# Build from the doc/ directory with Sphinx\nsphinx:\n  configuration: doc/conf.py\n\n# Explicitly set the version of Python and its requirements\npython:\n  install:\n    - requirements: doc/requirements.txt\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 17.66796875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "Containerfile",
          "type": "blob",
          "size": 0.7744140625,
          "content": "# SPDX-License-Identifier: GPL-2.0-or-later\n# Copyright (c) 2023 SUSE LLC\n\nARG PREFIX=docker.io/\nARG DISTRO_NAME=alpine\nARG DISTRO_RELEASE=3.18\n\nFROM $PREFIX$DISTRO_NAME:$DISTRO_RELEASE AS build\nARG LTPROOT=/opt/ltp\nARG DISTRO_NAME=alpine\nARG DISTRO_RELEASE=3.18\n\nRUN mkdir /build\nWORKDIR /build\nCOPY . /build\nRUN ./ci/${DISTRO_NAME}.sh\nRUN git clean -fdX\nRUN ./build.sh -p $LTPROOT -i\n\nFROM $PREFIX$DISTRO_NAME:$DISTRO_RELEASE\nARG LTPROOT=/opt/ltp\nARG KIRKROOT=/opt/kirk\nARG DISTRO_NAME=alpine\n\nCOPY --from=build /build/ci/${DISTRO_NAME}-runtime.sh $LTPROOT/runtime-deps.sh\nRUN $LTPROOT/runtime-deps.sh\n\nCOPY --from=build $LTPROOT $LTPROOT\nENV LTPROOT=$LTPROOT\nENV PATH=$LTPROOT/testcases/bin:$LTPROOT/bin:$PATH\n\nRUN mkdir -p $KIRKROOT\nCOPY --from=build /build/tools/kirk $KIRKROOT\n\nUSER ltp\n"
        },
        {
          "name": "IDcheck.sh",
          "type": "blob",
          "size": 5.0244140625,
          "content": "#!/bin/sh\n#\n#    Copyright (c) International Business Machines  Corp., 2001\n#\n#    This program is free software;  you can redistribute it and/or modify\n#    it under the terms of the GNU General Public License as published by\n#    the Free Software Foundation; either version 2 of the License, or\n#    (at your option) any later version.\n#\n#    This program is distributed in the hope that it will be useful,\n#    but WITHOUT ANY WARRANTY;  without even the implied warranty of\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See\n#    the GNU General Public License for more details.\n#\n#    You should have received a copy of the GNU General Public License\n#    along with this program;  if not, write to the Free Software\n#    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n#\n#   FILE        : IDcheck.sh\n#   DESCRIPTION : checks for req'd users/groups and will create them if requested.\n#   HISTORY     : see the cvs log\n#\n\n# Prompt user if ids/groups should be created\necho \"Checking for required user/group ids\"\necho \"\"\n\n# Check ids and create if needed.\nNO_ROOT_ID=1\nNO_NOBODY_ID=1\nNO_BIN_ID=1\nNO_DAEMON_ID=1\nNO_ROOT_GRP=1\nNO_NOBODY_GRP=1\nNO_BIN_GRP=1\nNO_DAEMON_GRP=1\nNO_USERS_GRP=1\nNO_SYS_GRP=1\n\ngroup=\"$DESTDIR/etc/group\"\npasswd=\"$DESTDIR/etc/passwd\"\n\n# find entry.\nfe() {\n    ID=$1\n    FILE=$2\n    [ -e \"$FILE\" ] || return $?\n    grep -q \"^$ID:\" \"$FILE\"\n}\n\nprompt_for_create() {\n\tif [ -z \"$CREATE_ENTRIES\" ] ; then\n\n\t\tif [ $NO_ROOT_ID -ne 0 -o $NO_NOBODY_ID -ne 0 -o $NO_BIN_ID -ne 0 -o $NO_DAEMON_ID -ne 0 -o $NO_ROOT_GRP -ne 0 -o $NO_NOBODY_GRP -ne 0 -o $NO_BIN_GRP -ne 0 -o $NO_DAEMON_GRP -ne 0 -o $NO_USERS_GRP -ne 0 -o $NO_SYS_GRP -ne 0 ] ; then\n\t\t\techo -n \"If any required user ids and/or groups are missing, would you like these created? [y/N]\"\n\t\t\tread ans\n\t\t\tcase \"$ans\" in\n\t\t\t[Yy]*) CREATE_ENTRIES=1 ;;\n\t\t\t*)     CREATE_ENTRIES=0 ;;\n\t\t\tesac\n\t\telse\n\t\t\tCREATE_ENTRIES=0\n\t\tfi\n\n\tfi\n}\n\nif [ -z ${EUID} ] ; then\n\tEUID=$(id -u)\nfi\n\nfor i in \"$passwd\" \"$group\"; do\n    if [ -e \"$i\" -a ! -r \"$i\" ] ; then\n\techo \"$i not readable by uid $EUID\"\n\texit 1\n    fi\ndone\n\nfe root \"$passwd\"; NO_ROOT_ID=$?\nfe bin \"$passwd\"; NO_BIN_ID=$?\nfe daemon \"$passwd\"; NO_DAEMON_ID=$?\nfe nobody \"$passwd\"; NO_NOBODY_ID=$?\n\nfe root \"$group\"; NO_ROOT_GRP=$?\nfe bin \"$group\"; NO_BIN_GRP=$?\nfe daemon \"$group\"; NO_DAEMON_GRP=$?\nfe nobody \"$group\" || fe nogroup \"$group\"; NO_NOBODY_GRP=$?\nfe sys \"$group\"; NO_SYS_GRP=$?\nfe users \"$group\"; NO_USERS_GRP=$?\n\nprompt_for_create\n\ndebug_vals() {\n\necho \"Missing the following group / user entries:\"\necho \"Group file:\t\t$group\"\necho \"Password file:\t\t$passwd\"\necho \"root\t\t\t$NO_ROOT_ID\"\necho \"nobody:\t\t\t$NO_NOBODY_ID\"\necho \"bin:\t\t\t$NO_BIN_ID\"\necho \"daemon:\t\t\t$NO_DAEMON_ID\"\necho \"root grp:\t\t\t$NO_ROOT_GRP\"\necho \"nobody[/nogroup] grp:\t$NO_NOBODY_GRP\"\necho \"bin grp:\t\t\t$NO_BIN_GRP\"\necho \"daemon grp:\t\t$NO_DAEMON_GRP\"\necho \"sys grp:\t\t\t$NO_SYS_GRP\"\necho \"users grp:\t\t$NO_USERS_GRP\"\necho \"\"\n\n}\n\n#debug_vals\n\nif [ $CREATE_ENTRIES -ne 0 ] ; then\n    if ! touch \"$group\" \"$passwd\" 2>/dev/null; then\n        echo \"Failed to touch $group or $passwd\"\n        exit 1\n    fi\nfi\n\nmake_user_group() {\n\tlocal name=$1 id=$2 no_id=$3 no_grp=$4\n\n\tif [ $no_id -eq 0 -a $no_grp -eq 0 ] ; then\n\t\techo \"'$name' user id and group found.\"\n\telif [ $CREATE_ENTRIES -ne 0 ] ; then\n\t\techo \"Creating entries for $name\"\n\n\t\t# Avoid chicken and egg issue with id(1) call\n\t\t# made above and below.\n\t\tif ! fe \"$name\" \"$passwd\" && [ $no_id -ne 0 ] ; then\n\t\t\techo \"${name}:x:${id}:${id}:${name}::\" >> \"$passwd\"\n\t\tfi\n\t\tif [ $no_grp -ne 0 ] ; then\n\t\t\techo \"${name}:x:$(id -u ${name}):\" >> \"$group\"\n\t\tfi\n\tfi\n}\nmake_user_group root 0 $NO_ROOT_ID $NO_ROOT_GRP\nmake_user_group nobody 65534 $NO_NOBODY_ID $NO_NOBODY_GRP\nmake_user_group bin 1 $NO_BIN_ID $NO_BIN_GRP\nmake_user_group daemon 2 $NO_DAEMON_ID $NO_DAEMON_GRP\n\nif [ $NO_USERS_GRP -eq 0 ] ; then\n\techo \"Users group found.\"\nelif [ $CREATE_ENTRIES -ne 0 ] ; then\n\techo 'users:x:100:' >> \"$group\"\nfi\n\nif [ $NO_SYS_GRP -eq 0 ] ; then\n\techo \"Sys group found.\"\nelif [ $CREATE_ENTRIES -ne 0 ] ; then\n\techo 'sys:x:3:' >> \"$group\"\nfi\n\nMISSING_ENTRY=0\n\n# For entries that exist in both $group and $passwd.\nfor i in root bin daemon; do\n    for file in \"$group\" \"$passwd\"; do\n        if ! fe \"$i\" \"$file\"; then\n            MISSING_ENTRY=1\n            break\n        fi\n    done\n    if [ $MISSING_ENTRY -ne 0 ]; then\n        break\n    fi\ndone\n\n# nobody is a standard group on all distros, apart from debian based ones;\n# let's account for the fact that they use the nogroup group instead.\nif ! fe \"nobody\" \"$passwd\" || ! (fe \"nogroup\" \"$group\" || fe \"nobody\" \"$group\")\nthen\n    MISSING_ENTRY=1\nfi\n\n# For entries that only exist in $group.\nfor i in users sys; do\n    if ! fe \"$i\" \"$group\" ; then\n        MISSING_ENTRY=1\n    fi\ndone\n\nif [ $MISSING_ENTRY -eq 0 ] ; then\n    echo \"Required users/groups exist.\"\n    exit 0\nfi\n\necho \"\"\necho \"*****************************************\"\necho \"* Required users/groups do NOT exist!!! *\"\necho \"*                                       *\"\necho \"* Some kernel/syscall tests will FAIL!  *\"\necho \"*****************************************\"\nexit 1\n"
        },
        {
          "name": "INSTALL",
          "type": "blob",
          "size": 6.58203125,
          "content": "Requirements\n------------\n\nTools are needed for LTP compilation. They should be available as a\npackage in any Linux distribution (no specific version is required).\n\nDebian / Ubuntu\n\n\t# apt install gcc git make pkgconf autoconf automake bison flex m4 linux-headers-$(uname -r) libc6-dev\n\nopenSUSE / SLES\n\n\t# zypper install gcc git make pkg-config autoconf automake bison flex m4 linux-glibc-devel glibc-devel\n\nFedora / CentOS / RHEL\n\n\t# yum install gcc git make pkgconf autoconf automake bison flex m4 kernel-headers glibc-headers\n\nThese are minimal build requirements for git compilation. Some tests require\nextra development files of some libraries, see ci/*.sh. There is also\nsupport for other Linux distributions not listed here.\n\nautoconf, automake, m4 (autoconf requirement), git and pkgconf (or pkg-config\non older distros) are required only for compilation from git (used for creating\nconfigure file).\n\npkgconf is recommended also for compilation from tarball as it\ndoes automatic detection of some library support.\n\nConfiguration\n-------------\n\nConfiguration requires autoconf:\n\n\t$ cd $TOP_SRCDIR\n\t$ make autotools\n\t$ mkdir -p $TOP_BUILDDIR\n\t$ cd $TOP_BUILDDIR && $TOP_SRCDIR/configure # configure args go here, e.g. CC=$CC, LDFLAGS=$LDFLAGS, etc\n\n- $TOP_SRCDIR and $TOP_BUILDDIR are the same for in-build-tree scenarios.\n- $TOP_SRCDIR and $TOP_BUILDDIR differ for out-of-build-tree scenarios.\n\nSee the In-build-tree and Out-of-build-tree sections below for more details on\nwhat to do next.\n\nCompiling LTP\n-------------\n\nIn-build-tree\n-------------\n\nIn-build-tree support is when you build binaries (applications, binary objects)\nin the same directory where the source files reside.\n\n\t$ make all\n\t$ make \\\n\t  \"DESTDIR=$SYSROOT\" \\\n\t  install\n\n- Specifying DESTDIR is optional, but required when installing to a non-host\n  sysroot, as opposed to the host system's sysroot.\n\nIf you get a build error, please report it to ltp@lists.linux.it with\nfollowing information,\n\n 1. The error output before the failure.\n 2. If you used configure:\n\ti.   include/config.h\n\tii.  include/mk/config.mk\n\tiii. config.log\n\nOut-of-build-tree\n-----------------\n\nOut-of-build-tree support is when you build binaries (applications, binary\nobjects, generated files) outside of the directory where the source files\nreside. This is typically used when cross-compiling for multiple targets.\n\nNOTE: This is by and large correctly implemented, but there are several corner\ncases, where this isn't implemented properly. Please see TODO for a list of\nitems which need fixing in the LTP tree.\n\n\t$ mkdir \"$OUT_OF_BUILD_TREE_DIR\"\n\t$ make \\\n\t  -C \"$OUT_OF_BUILD_TREE_DIR\" \\\n\t  -f \"$TOP_SRCDIR/Makefile\" \\\n\t  \"top_srcdir=$TOP_SRCDIR\" \\\n\t  \"top_builddir=$OUT_OF_BUILD_TREE_DIR\"\n\t$ make \\\n\t  -C \"$OUT_OF_BUILD_TREE_DIR\" \\\n\t  -f \"$TOP_SRCDIR/Makefile\" \\\n\t  \"top_srcdir=$TOP_SRCDIR\" \\\n\t  \"top_builddir=$OUT_OF_BUILD_TREE_DIR\" \\\n\t  \"DESTDIR=$SYSROOT\" \\\n\t  install\n\n- Specifying DESTDIR is optional, but required when installing to a non-host\n  sysroot, as opposed to the host system's sysroot.\n\nQuick Start\n-----------\n\n\t$ tar xzf ltp-XXXXXXXX.tar.gz\n\t$ cd ltp\n\t$ ./configure\n\t$ make all\n\t# make install\n\t$ /opt/ltp/runltp\n\n*NOTE:\n- LTP assumes the existence of the nobody, bin, and daemon users and their\ngroups.  If these IDs do not exist, certain tests will fail. The respective\nuser and group IDs should be the same, i.e. if `nobody's' user ID is 99, then\nits group ID should also be 99. The names of the groups are irrelevant.\n- The installation directory is /opt/ltp by default. Please see\n\"Using autoconf\" above and specify the appropriate path via --prefix.\nDESTDIR= is also honored for install and will install into $DESTDIR/$prefix,\nif you want to install into a chroot or a rootfs for instance.\n\nDetailed Installation\n---------------------\n\nBeyond the \"Quick Start\" instructions, there are only a few other things\nthat should be done.  The Linux Test Project build process uses a\nminimalist approach.  There is a lot of room for improvement and\ncontributions are welcome.\n\n1. Log in as root.\n\n2. Untar the ltp tarball into a spare directory.  There is not a\n   standard location for it yet.  We put it in our home directory\n   while we're working on it.\n   Note that the full path to this location must be accessible for\n   unprivileged users, as some tests are run as a different user than root.\n   Hence /root is not a good choice on several distributions.\n\n3. Build and install everything, as described above. Note the minimum software\n   requirements above before doing so.\n\n4. The disk I/O tests can be run by executing the diskio.sh script.  In order\n   for these tests to successfully operate a writable high-density 3.5\" floppy\n   must be in the disk drive and a CD-ROM with more than 100Mb of data must be\n   in the CD-ROM drive.  The corresponding tests will fail if either disk is\n   missing.\n\n5. The network tests related installation see testcases/network/README.md.\n\nCross compiling\n---------------\n\nTo cross compile, you must specify the correct variables when running configure.\ne.g. CC, LDFLAGS, etc.\nFor correct pkgconf / pkg-config detection you need to set\nPKG_CONFIG_SYSROOT_DIR=$SYSROOT\n\nAfter configure has run, it will generate include/mk/config.mk. You can tweak\nsettings in there if need be, but you should not specificy settings on the\ncommand-line when running make.\n\n32 bit build on 64 bit machine\n------------------------------\n\nYou need to set CFLAGS=-m32 LDFLAGS=-m32 and PKG_CONFIG_LIBDIR\n\n* RPM based distributions (openSUSE, Fedora, etc.)\nPKG_CONFIG_LIBDIR=/usr/lib/pkgconfig CFLAGS=-m32 LDFLAGS=-m32 ./configure\n\n* Debian / Ubuntu and derivates\nPKG_CONFIG_LIBDIR=/usr/lib/i386-linux-gnu/pkgconfig CFLAGS=-m32 LDFLAGS=-m32 ./configure\n\n* Arch Linux\nPKG_CONFIG_LIBDIR=/usr/lib32/pkgconfig CFLAGS=-m32 LDFLAGS=-m32 ./configure\n\nAndroid Users\n-------------\n\nSpecify ANDROID=1 when calling make. Many tests which would otherwise work are\ncurrently not built because they share a directory with an incompatible test.\n\nThe shell scripts expect /bin/sh to exist, so create a symlink.\n\nVariables in Makefile\n---------------------\n\nThe conventions enforced are standard ones. Here's a quick summary:\n\nCFLAGS   - used when compiling/linking C code, e.g. -D_GNU_SOURCE (no CPPFLAGS!)\n\nCPPFLAGS - used when preprocessor is run (so C/C++ compiling with $(CPP)\n\t   functions, e.g. -I$SYSROOT/usr/include -I$SYSROOT/include -I$SYSROOT\n\nLDFLAGS  - linker flags, e.g. \"-L$SYSROOT/usr/lib\" \"-L$SYSROOT/lib\". DO NOT\n\t   PUT LIBRARIES IN THIS LIST (see LDLIBS for that).\n\nLDLIBS   - libraries listed after objects during link, e.g. -lc, -lpthread,\n\t   -lltp.\n\nFor other variables and more info about the build systems see\ndoc/Build-System.asciidoc.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 6.564453125,
          "content": "# SPDX-License-Identifier: GPL-2.0-or-later\n# Copyright (c) Linux Test Project, 2009-2024\n# Copyright (c) Cisco Systems Inc., 2009-2010\n# Ngie Cooper, July 2009\n\n# Avoid funny character set dependencies\nunexport LC_ALL\nLC_COLLATE=C\nLC_NUMERIC=C\nexport LC_COLLATE LC_NUMERIC\n\ntop_srcdir\t\t?= $(CURDIR)\n\ninclude $(top_srcdir)/include/mk/env_pre.mk\ninclude $(top_srcdir)/include/mk/automake.mk\n\n.SUFFIXES:\n.SUFFIXES: .am .default .h .in .m4 .mk\n\nvpath %.am\t\t$(top_srcdir)/m4\nvpath %.default\t\t$(top_srcdir)/include\nvpath %.h\t\t$(top_srcdir)/include:$(top_builddir)/include\nvpath %.in\t\t$(top_srcdir)/include\nvpath %.m4\t\t$(top_srcdir)/m4\nvpath %.mk\t\t$(top_srcdir)/mk:$(top_srcdir)/mk/include\n\n# CLEAN_TARGETS:\tTargets which exist solely in clean.\n# COMMON_TARGETS:\tTargets which exist in all, clean, and install.\n# INSTALL_TARGETS:\tTargets which exist in clean and install (contains\n# \t\t\tCOMMON_TARGETS).\n# BOOTSTRAP_TARGETS:\tDirectories required to bootstrap out-of-build-tree\n# \t\t\tsupport.\n\nCOMMON_TARGETS\t\t:= pan utils\n\ndefine target_to_dir_dep_mapping\nifeq ($$(filter %-clean,$(1)),) # not *-clean\n$(1): | $$(abs_top_builddir)/$$(basename $$(subst -,.,$(1)))\nelse\t\t\t\t# clean\n$(1):: | $$(abs_top_builddir)/$$(basename $$(subst -,.,$(1)))\nendif\nendef\n\nCOMMON_TARGETS\t\t+= testcases tools metadata\n\n# Don't want to nuke the original files if we're installing in-build-tree.\nifneq ($(BUILD_TREE_STATE),$(BUILD_TREE_SRCDIR_INSTALL))\nINSTALL_TARGETS\t\t+= runtest scenario_groups testscripts\nCLEAN_TARGETS\t\t+= include runtest scenario_groups testscripts\nendif\nINSTALL_TARGETS\t\t+= $(COMMON_TARGETS)\nCLEAN_TARGETS\t\t+= $(COMMON_TARGETS) lib libs\nBOOTSTRAP_TARGETS\t:= $(sort $(COMMON_TARGETS) $(CLEAN_TARGETS) $(INSTALL_TARGETS))\n\nCLEAN_TARGETS\t\t:= $(addsuffix -clean,$(CLEAN_TARGETS))\nINSTALL_TARGETS\t\t:= $(addsuffix -install,$(INSTALL_TARGETS))\nMAKE_TARGETS\t\t:= $(addsuffix -all,$(filter-out lib,$(COMMON_TARGETS)))\nCHECK_TARGETS\t\t:= $(addsuffix -check,testcases lib)\n\n# There's no reason why we should run `all' twice. Otherwise we're just wasting\n# 3+ mins of useful CPU cycles on a modern machine, and even more time on an\n# overtaxed one, or one where -j => 1 was specified.\nall: $(addsuffix -all,$(COMMON_TARGETS)) Version\n\n$(MAKE_TARGETS): lib-all libs-all\n\n.PHONY: include-all include-install\ninclude-install: $(top_builddir)/include/config.h include/mk/config.mk include-all\n\nINSTALL_DIR\t\t:= $(DESTDIR)/$(prefix)\n\n# DO NOT REMOVE THIS CALL (see clean_install_dir call below...)!!!!\nINSTALL_DIR\t\t:= $(abspath $(INSTALL_DIR))\n\n# build tree bootstrap targets and $(INSTALL_DIR) target.\n$(sort $(addprefix $(abs_top_builddir)/,$(BOOTSTRAP_TARGETS)) $(INSTALL_DIR) $(DESTDIR)/$(bindir)):\n\tmkdir -m 00755 -p \"$@\"\n\n## Pattern based subtarget rules.\nlib-install: lib-all\n\nlibs-all: $(abs_top_builddir)/libs\n\n$(MAKE_TARGETS) include-all lib-all libs-all:\n\t$(MAKE) -C \"$(subst -all,,$@)\" \\\n\t\t-f \"$(abs_top_srcdir)/$(subst -all,,$@)/Makefile\" all\n\n$(CHECK_TARGETS): tools-all\n\t$(MAKE) -C \"$(subst -check,,$@)\" \\\n\t\t-f \"$(abs_top_srcdir)/$(subst -check,,$@)/Makefile\" check\n\n# Let's not conflict with ac-clean, maintainer-clean, etc, so.\n$(filter-out include-clean,$(CLEAN_TARGETS))::\n\t-$(MAKE) -C \"$(subst -clean,,$@)\" \\\n\t\t -f \"$(abs_top_srcdir)/$(subst -clean,,$@)/Makefile\" clean\n\n# Just like everything depends on include-all / -install, we need to get rid\n# of include last to ensure that things won't be monkey screwed up. Only do\n# this if we're invoking clean or a subclean directly though.\nifneq ($(filter clean,$(MAKECMDGOALS)),)\nINCLUDE_CLEAN_RDEP_SUBJECT\t:= $(CLEAN_TARGETS)\nelse\nifneq ($(filter %clean,$(MAKECMDGOALS)),)\nINCLUDE_CLEAN_RDEP_SUBJECT\t:= $(MAKECMDGOALS)\nendif\nendif\n\n# Remove potential for circular dependencies.\nINCLUDE_CLEAN_RDEPS\t\t:= $(filter-out include-clean,$(INCLUDE_CLEAN_RDEP_SUBJECT))\n\ninclude-clean:: $(INCLUDE_CLEAN_RDEPS) | $(abs_top_builddir)/include\n\t-$(MAKE) -C include -f \"$(abs_top_srcdir)/include/Makefile\" clean\n\n# include-install is separate to avoid creating a circular dependency below in\n# the install target.\n$(INSTALL_TARGETS) include-install lib-install:\n\t$(MAKE) -C \"$(subst -install,,$@)\" \\\n\t\t-f \"$(abs_top_srcdir)/$(subst -install,,$@)/Makefile\" install\n\n# Just in case configure hasn't been run yet, let's not overambitiously remove\n# the $(INSTALL_DIR).\n.PHONY: clean_install_dir\nclean_install_dir::\n\t$(RM) -Rf \"$(INSTALL_DIR)\"\n\n# Clean the directory if the build-tree is properly configured and not set to\n# the srcdir.\nifeq ($(filter $(BUILD_TREE_STATE),$(BUILD_TREE_SRCDIR_INSTALL) $(BUILD_TREE_UNCONFIGURED)),)\n# Make sure that we don't whack `/'!!!!!\nifneq ($(INSTALL_DIR),/)\nCLEAN_TARGETS\t+= clean_install_dir\nendif\nendif\n\nclean:: $(CLEAN_TARGETS)\n\t$(RM) -f Version\n\n$(foreach tgt,$(MAKE_TARGETS) include-all lib-all $(filter-out clean_install_dir,$(CLEAN_TARGETS)) $(INSTALL_TARGETS) include-install lib-install,$(eval $(call target_to_dir_dep_mapping,$(tgt))))\n\nSRCDIR_INSTALL_SCRIPTS\t:= IDcheck.sh runltp ver_linux\nSRCDIR_INSTALL_READONLY\t:= Version\nSRCDIR_INSTALL_TARGETS\t:= $(SRCDIR_INSTALL_SCRIPTS) $(SRCDIR_INSTALL_READONLY)\n\n#\n# If we are in git repository, use git describe to indentify current version,\n# otherwise if downloaded as tarball use VERSION file.\n#\n.PHONY: Version\nVersion:\n\tif git describe >/dev/null 2>&1; then \\\n\t\tgit describe > \"$@\"; \\\n\telse \\\n\t\tcp $(top_srcdir)/VERSION \"$@\"; \\\n\tfi\n\n$(INSTALL_DIR)/Version: Version\n\tinstall -m 00644 \"$(top_builddir)/$(@F)\" \"$@\"\n\n$(addprefix $(DESTDIR)/$(bindir)/,$(BINDIR_INSTALL_SCRIPTS)): %:\n\tinstall -m 00755 \"$(top_builddir)/$(@F)\" \"$@\"\n\n$(addprefix $(INSTALL_DIR)/,$(SRCDIR_INSTALL_SCRIPTS)): %:\n\tinstall -m 00755 \"$(top_srcdir)/$(@F)\" \"$@\"\n\nifneq ($(BUILD_TREE_STATE),$(BUILD_TREE_SRCDIR_INSTALL))\nINSTALL_TARGETS\t\t+= $(addprefix $(INSTALL_DIR)/,$(SRCDIR_INSTALL_TARGETS))\nendif\nINSTALL_TARGETS\t\t+= $(addprefix $(DESTDIR)/$(bindir)/,$(BINDIR_INSTALL_SCRIPTS))\n\n$(INSTALL_TARGETS): $(INSTALL_DIR) $(DESTDIR)/$(bindir)\n\n.PHONY: doc\ndoc: metadata-all\n\n.PHONY: check\ncheck: $(CHECK_TARGETS)\n\n## Install\ninstall: $(INSTALL_TARGETS)\n\n## Test\ndefine _test\n\t@set -e; $(top_srcdir)/lib/newlib_tests/runtest.sh -b $(abs_builddir) $(1)\nendef\n\ntest: lib-all\nifneq ($(build),$(host))\n\t$(error running tests on cross-compile build not supported)\nendif\n\t$(call _test)\n\t$(MAKE) test-metadata\n\ntest-c: lib-all\nifneq ($(build),$(host))\n\t$(error running tests on cross-compile build not supported)\nendif\n\t$(call _test,-c)\n\ntest-shell: lib-all\nifneq ($(build),$(host))\n\t$(error running tests on cross-compile build not supported)\nendif\n\t$(call _test,-s)\n\ntest-metadata: metadata-all\n\t$(MAKE) -C $(abs_srcdir)/metadata test\n\n## Help\n.PHONY: help\nhelp:\n\t@echo \"Please read the Configuration section in $(top_srcdir)/INSTALL\"\n\t@exit 1\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 1.2021484375,
          "content": ".. SPDX-License-Identifier: GPL-2.0-or-later\n\nLinux Test Project\n==================\n\nLinux Test Project is a joint project started by SGI, OSDL and Bull developed\nand maintained by SUSE, Red Hat, Fujitsu, IBM, Cisco, Oracle and others. The\nproject goal is to deliver tests to the open source community that validate\nreliability, robustness, and stability of the Linux Kernel.\n\nThe testing suites contain a collection of tools for testing the Linux kernel\nand related features. Our goal is to improve the Linux kernel and system\nlibraries by bringing test automation.\n\n.. warning::\n\n   LTP tests shouldn't run in production systems. In particular,\n   growfiles, doio, and iogen, stress the I/O capabilities of the systems and\n   they are intended to find (or cause) problems.\n\nSome references:\n\n* `Documentation <http://linux-test-project.rtfd.io/>`_\n* `Source code <https://github.com/linux-test-project/ltp>`_\n* `Releases <https://github.com/linux-test-project/ltp/releases>`_\n* `Mailing List <http://lists.linux.it/listinfo/ltp>`_\n* `Working patches (patchwork) <https://patchwork.ozlabs.org/project/ltp/list/>`_\n* `Working patches (lore.kernel.org) <https://lore.kernel.org/ltp>`_\n* `#ltp @ libera chat <https://libera.chat/>`_\n"
        },
        {
          "name": "TODO",
          "type": "blob",
          "size": 1.2724609375,
          "content": "LTP TODO\n--------\n\n\nWrite more syscall tests\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nSyscalls and new syscall flags are added to Linux kernel each development cycle\nand LTP still falls behind. Unfortunately there is no single place that would\nstore comprehensive list of syscalls, but there are a few places to look at:\n\nOne of the options would be looking at changes in man-pages git[1] in man2/\ndirectory to find out newly documented functionality.\n\nAnother good source of information are kernel pages in LWN[2] weekly\neditions.\n\nThen there is linux-api mailing list[3] where changes in kernel userspace API\nshould be discussed.\n\n[1] http://git.kernel.org/cgit/docs/man-pages/man-pages.git\n[2] http://lwn.net\n[3] http://dir.gmane.org/gmane.linux.kernel.api\n\n\nRewrite old and add new controller testcases\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWe already started working on this with rewriting cgroup_fj testcases and\nnewly added pids testcases. Have a look at testcases/kernel/controllers/.\n\n\nShell tests cleanups\n~~~~~~~~~~~~~~~~~~~~\n\nThere are numerous testcases written in shell that does not follow single style\nand use the broken-by-design binaries from tools/apicmds. These should be\ncleaned up and fixed to use the test.sh test library. These include most of\ntests in testcases/commands/ for example.\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.0087890625,
          "content": "20240930\n"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 5.814453125,
          "content": "#!/bin/sh\n# Copyright (c) 2017-2021 Petr Vorel <pvorel@suse.cz>\n# Script for CI builds.\n\nset -e\n\nCFLAGS=\"${CFLAGS:--Wformat -Werror=format-security -Werror=implicit-function-declaration -Werror=return-type -fno-common}\"\nCC=\"${CC:-gcc}\"\n\nDEFAULT_PREFIX=\"$HOME/ltp-install\"\nDEFAULT_BUILD=\"native\"\nDEFAULT_TREE=\"in\"\n\nCONFIGURE_OPTS_IN_TREE=\"--with-open-posix-testsuite --with-realtime-testsuite $CONFIGURE_OPT_EXTRA\"\n# TODO: open posix testsuite is currently broken in out-tree-build. Enable it once it's fixed.\nCONFIGURE_OPTS_OUT_TREE=\"--with-realtime-testsuite $CONFIGURE_OPT_EXTRA\"\n\nSRC_DIR=\"$(cd $(dirname $0); pwd)\"\nBUILD_DIR=\"$SRC_DIR/../ltp-build\"\n\nMAKE_OPTS=\"-j$(getconf _NPROCESSORS_ONLN)\"\nMAKE_OPTS_OUT_TREE=\"$MAKE_OPTS -C $BUILD_DIR -f $SRC_DIR/Makefile top_srcdir=$SRC_DIR top_builddir=$BUILD_DIR\"\n\nrun_configure()\n{\n\tlocal configure=\"$1\"\n\tshift\n\n\texport CC CFLAGS LDFLAGS PKG_CONFIG_LIBDIR\n\techo \"CC='$CC' CFLAGS='$CFLAGS' LDFLAGS='$LDFLAGS' PKG_CONFIG_LIBDIR='$PKG_CONFIG_LIBDIR'\"\n\n\techo \"=== configure $configure $@ ===\"\n\tif ! $configure $@; then\n\t\techo \"== ERROR: configure failed, config.log ==\"\n\t\tcat config.log\n\t\texit 1\n\tfi\n\n\techo \"== include/config.h ==\"\n\tcat include/config.h\n}\n\nconfigure_in_tree()\n{\n\trun_configure ./configure $CONFIGURE_OPTS_IN_TREE --prefix=$prefix $@\n}\n\nconfigure_out_tree()\n{\n\tmkdir -p $BUILD_DIR\n\tcd $BUILD_DIR\n\trun_configure $SRC_DIR/configure $CONFIGURE_OPTS_OUT_TREE $@\n}\n\nconfigure_32()\n{\n\tlocal tree=\"$1\"\n\tlocal prefix=\"$2\"\n\tlocal arch=\"$(uname -m)\"\n\tlocal dir\n\n\techo \"===== 32-bit ${tree}-tree build into $prefix =====\"\n\n\tif [ -z \"$PKG_CONFIG_LIBDIR\" ]; then\n\t\tif [ \"$arch\" != \"x86_64\" ]; then\n\t\t\techo \"ERROR: auto-detection not supported platform $arch, export PKG_CONFIG_LIBDIR!\"\n\t\t\texit 1\n\t\tfi\n\n\t\tfor dir in /usr/lib/i386-linux-gnu/pkgconfig \\\n\t\t\t/usr/lib32/pkgconfig /usr/lib/pkgconfig; do\n\t\t\tif [ -d \"$dir\" ]; then\n\t\t\t\tPKG_CONFIG_LIBDIR=\"$dir\"\n\t\t\t\tbreak\n\t\t\tfi\n\t\tdone\n\t\tif [ -z \"$PKG_CONFIG_LIBDIR\" ]; then\n\t\t\techo \"WARNING: PKG_CONFIG_LIBDIR not found, build might fail\"\n\t\tfi\n\tfi\n\n\tCFLAGS=\"-m32 $CFLAGS\" LDFLAGS=\"-m32 $LDFLAGS\"\n\n\teval configure_${tree}_tree\n}\n\nconfigure_native()\n{\n\tlocal tree=\"$1\"\n\tlocal prefix=\"$2\"\n\n\techo \"===== native ${tree}-tree build into $prefix =====\"\n\teval configure_${tree}_tree\n}\n\nconfigure_cross()\n{\n\tlocal tree=\"$1\"\n\tlocal prefix=\"$2\"\n\tlocal host=$(basename \"${CC%-gcc}\")\n\n\tif [ \"$host\" = \"gcc\" ]; then\n\t\techo \"Invalid CC variable for cross compilation: $CC (clang not supported)\" >&2\n\t\texit 1\n\tfi\n\n\techo \"===== cross-compile ${host} ${1}-tree build into $prefix =====\"\n\teval configure_${tree}_tree \"--host=$host\"\n}\n\nbuild_in_tree()\n{\n\tmake $MAKE_OPTS\n}\n\nbuild_out_tree()\n{\n\tcd $BUILD_DIR\n\tmake $MAKE_OPTS_OUT_TREE\n}\n\ntest_in_tree()\n{\n\tmake $1\n}\n\ntest_out_tree()\n{\n\tcd $BUILD_DIR\n\tmake $MAKE_OPTS_OUT_TREE $1\n}\n\ninstall_in_tree()\n{\n\tmake $MAKE_OPTS install\n}\n\ninstall_out_tree()\n{\n\tcd $BUILD_DIR\n\tmake $MAKE_OPTS_OUT_TREE DESTDIR=\"$prefix\" install\n}\n\nusage()\n{\n\tcat << EOF\nUsage:\n$0 [ -c CC ] [ -i ] [ -o TREE ] [ -p DIR ] [-r RUN ] [ -t TYPE ]\n$0 -h\n\nOptions:\n-h       Print this help\n-c CC    Define compiler (\\$CC variable), needed only for configure step\n-i       Run 'make install', needed only for install step\n-o TREE  Specify build tree, default: $DEFAULT_TREE\n-p DIR   Change installation directory. For in-tree build is this value passed\n         to --prefix option of configure script. For out-of-tree build is this\n         value passed to DESTDIR variable (i.e. sysroot) of make install\n         target, which means that LTP will be actually installed into\n         DIR/PREFIX (i.e. DIR/opt/ltp).\n         Default for in-tree build: '$DEFAULT_PREFIX'\n         Default for out-of-tree build: '$DEFAULT_PREFIX/opt/ltp'\n-r RUN   Run only certain step (usable for CI), default: all\n-t TYPE  Specify build type, default: $DEFAULT_BUILD, only for configure step\n\nTREE:\nin       in-tree build\nout      out-of-tree build\n\nTYPES:\n32       32-bit build (PKG_CONFIG_LIBDIR auto-detection for x86_64)\ncross    cross-compile build (requires set compiler via -c switch)\nnative   native build\n\nRUN:\nautotools   run only 'make autotools'\nconfigure   run only 'configure'\nbuild       run only 'make'\ntest        run only 'make test' (not supported for cross-compile build)\ntest-c      run only 'make test-c' (not supported for cross-compile build)\ntest-shell  run only 'make test-shell' (not supported for cross-compile build)\ninstall     run only 'make install'\n\nDefault configure options:\nin-tree:    $CONFIGURE_OPTS_IN_TREE\nout-of-tree $CONFIGURE_OPTS_OUT_TREE\n\nconfigure options can extend the default with \\$CONFIGURE_OPT_EXTRA environment variable\nEOF\n}\n\nprefix=\"$DEFAULT_PREFIX\"\nbuild=\"$DEFAULT_BUILD\"\ntree=\"$DEFAULT_TREE\"\ninstall=\nrun=\n\nwhile getopts \"c:hio:p:r:t:\" opt; do\n\tcase \"$opt\" in\n\tc) CC=\"$OPTARG\";;\n\th) usage; exit 0;;\n\ti) install=1;;\n\to) case \"$OPTARG\" in\n\t\tin|out) tree=\"$OPTARG\";;\n\t\t*) echo \"Wrong build tree '$OPTARG'\" >&2; usage; exit 1;;\n\t\tesac;;\n\tp) prefix=\"$OPTARG\";;\n\tr) case \"$OPTARG\" in\n\t\tautotools|configure|build|test|test-c|test-shell|install) run=\"$OPTARG\";;\n\t\t*) echo \"Wrong run type '$OPTARG'\" >&2; usage; exit 1;;\n\t\tesac;;\n\tt) case \"$OPTARG\" in\n\t\t32|cross|native) build=\"$OPTARG\";;\n\t\t*) echo \"Wrong build type '$OPTARG'\" >&2; usage; exit 1;;\n\t\tesac;;\n\t?) usage; exit 1;;\n\tesac\ndone\n\ncd $SRC_DIR\n\nif [ -z \"$run\" -o \"$run\" = \"autotools\" ]; then\n\tmake autotools\nfi\n\nif [ -z \"$run\" -o \"$run\" = \"configure\" ]; then\n\teval configure_$build $tree $prefix\nfi\n\nif [ -z \"$run\" -o \"$run\" = \"build\" ]; then\n\techo \"=== build ===\"\n\teval build_${tree}_tree\nfi\n\nif [ -z \"$run\" -o \"$run\" = \"test\" -o \"$run\" = \"test-c\" -o \"$run\" = \"test-shell\" ]; then\n\tif [ \"$build\" = \"cross\" ]; then\n\t\techo \"cross-compile build, skipping running tests\" >&2\n\telse\n\t\teval test_${tree}_tree $run\n\tfi\nfi\n\nif [ -z \"$run\" -o \"$run\" = \"install\" ]; then\n\tif [ \"$install\" = 1 ]; then\n\t\teval install_${tree}_tree\n\telse\n\t\techo \"make install skipped, use -i to run it\"\n\tfi\nfi\n\nexit $?\n"
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 12.5498046875,
          "content": "AC_PREREQ(2.64)\nAC_INIT([ltp], [LTP_VERSION], [ltp@lists.linux.it])\nAC_CONFIG_AUX_DIR([.])\nAM_INIT_AUTOMAKE\nAC_CONFIG_HEADERS([include/config.h])\nAC_CONFIG_MACRO_DIR([m4])\nAC_CONFIG_FILES([ \\\n    include/mk/config.mk \\\n    include/mk/config-openposix.mk \\\n    include/mk/features.mk \\\n    lib/ltp.pc \\\n    m4/Makefile \\\n])\n\nAC_ARG_VAR(HOSTCC, [The C compiler on the host])\n\nAM_MAINTAINER_MODE([enable])\n\nAC_CANONICAL_HOST\n\nAC_PROG_CC\n# <= autoconf 2.61 doesn't have AC_PROG_AR, but 2.63 has it. Not sure about\n# 2.62.\nAC_DEFUN([AC_PROG_AR], [AC_CHECK_TOOL(AR, ar, :)])\nAC_PROG_AR\nAC_PROG_RANLIB\nAC_DEFUN([AC_PROG_STRIP], [AC_CHECK_TOOL(STRIP, strip, :)])\nAC_PROG_STRIP\nAC_PROG_YACC\n\nm4_ifndef([PKG_CHECK_EXISTS],\n\t[m4_fatal([must install pkg-config or pkgconfig and pkg.m4 macro (usual dependency), see INSTALL])])\n\nAC_PREFIX_DEFAULT(/opt/ltp)\n\nAC_CHECK_DECLS([IFLA_NET_NS_PID],,,[#include <linux/if_link.h>])\nAC_CHECK_DECLS([LANDLOCK_RULE_PATH_BENEATH],,,[#include <linux/landlock.h>])\nAC_CHECK_DECLS([LANDLOCK_RULE_NET_PORT],,,[#include <linux/landlock.h>])\nAC_CHECK_DECLS([MADV_MERGEABLE],,,[#include <sys/mman.h>])\nAC_CHECK_DECLS([NFTA_CHAIN_ID, NFTA_VERDICT_CHAIN_ID],,,[#include <linux/netfilter/nf_tables.h>])\nAC_CHECK_DECLS([PR_CAPBSET_DROP, PR_CAPBSET_READ],,,[#include <sys/prctl.h>])\nAC_CHECK_DECLS([SEM_STAT_ANY],,,[#include <sys/sem.h>])\n\nAC_CHECK_HEADERS_ONCE([ \\\n    asm/ldt.h \\\n    asm/prctl.h \\\n    cpuid.h \\\n    emmintrin.h \\\n    ifaddrs.h \\\n    keyutils.h \\\n    linux/can.h \\\n    linux/cgroupstats.h \\\n    linux/cryptouser.h \\\n    linux/close_range.h \\\n    linux/dccp.h \\\n    linux/futex.h \\\n    linux/genetlink.h \\\n    linux/if_alg.h \\\n    linux/if_ether.h \\\n    linux/if_packet.h \\\n    linux/io_uring.h \\\n    linux/ioprio.h \\\n    linux/keyctl.h \\\n    linux/landlock.h \\\n    linux/mempolicy.h \\\n    linux/module.h \\\n    linux/mount.h \\\n    linux/netlink.h \\\n    linux/seccomp.h \\\n    linux/securebits.h \\\n    linux/tls.h \\\n    linux/tty.h \\\n    linux/types.h \\\n    linux/userfaultfd.h \\\n    netinet/sctp.h \\\n    pthread.h \\\n    sys/epoll.h \\\n    sys/fanotify.h \\\n    sys/inotify.h \\\n    sys/pidfd.h\n    sys/prctl.h \\\n    sys/random.h \\\n    sys/shm.h \\\n    sys/timerfd.h \\\n    sys/ustat.h \\\n    sys/utsname.h \\\n    sys/xattr.h \\\n    xfs/xqm.h \\\n])\nAC_CHECK_HEADERS(fts.h, [have_fts=1])\nAC_SUBST(HAVE_FTS_H, $have_fts)\nAC_CHECK_HEADERS(linux/vm_sockets.h, [], [], [#include <sys/socket.h>])\n\nAC_CHECK_FUNCS_ONCE([ \\\n    cachestat \\\n    clone3 \\\n    close_range \\\n    copy_file_range \\\n    epoll_pwait \\\n    epoll_pwait2 \\\n    execveat \\\n    faccessat2 \\\n    fallocate \\\n    fsconfig \\\n    fsmount \\\n    fsopen \\\n    fspick \\\n    fstatat \\\n    getauxval \\\n    getcontext \\\n    getcpu \\\n    getdents \\\n    getdents64 \\\n    io_pgetevents \\\n    io_uring_setup \\\n    io_uring_register \\\n    io_uring_enter \\\n    kcmp \\\n    mallinfo \\\n    mallinfo2 \\\n    mallopt \\\n    modify_ldt \\\n    mount_setattr \\\n    move_mount \\\n    name_to_handle_at \\\n    open_tree \\\n    openat \\\n    openat2 \\\n    pidfd_getfd \\\n    pidfd_open \\\n    pidfd_send_signal \\\n    pkey_mprotect \\\n    preadv \\\n    preadv2 \\\n    profil \\\n    pwritev \\\n    pwritev2 \\\n    quotactl_fd \\\n    rand_r \\\n    recvmmsg \\\n    renameat2 \\\n    sched_getcpu \\\n    sendmmsg \\\n    sethostid \\\n    setns \\\n    sigpending \\\n    splice \\\n    statx \\\n    stime \\\n    sync_file_range \\\n    syncfs \\\n    tee \\\n    timerfd_create \\\n    timerfd_gettime \\\n    timerfd_settime \\\n    unshare \\\n    ustat \\\n    vmsplice \\\n])\nAC_CHECK_FUNCS(mkdtemp,[],AC_MSG_ERROR(mkdtemp() not found!))\n\nAC_CHECK_MEMBERS([struct fanotify_event_info_fid.fsid.__val],,,[#include <sys/fanotify.h>])\nAC_CHECK_MEMBERS([struct perf_event_mmap_page.aux_head],,,[#include <linux/perf_event.h>])\nAC_CHECK_MEMBERS([struct sigaction.sa_sigaction],[],[],[#include <signal.h>])\nAC_CHECK_MEMBERS([struct statx.stx_mnt_id, struct statx.stx_dio_mem_align],,,[\n#define _GNU_SOURCE\n#include <sys/stat.h>\n])\n\nAC_CHECK_MEMBERS([struct utsname.domainname],,,[\n#define _GNU_SOURCE\n#include <sys/utsname.h>\n])\n\nAC_CHECK_TYPES([enum kcmp_type],,,[#include <linux/kcmp.h>])\nAC_CHECK_TYPES([struct acct_v3],,,[#include <sys/acct.h>])\nAC_CHECK_TYPES([struct af_alg_iv, struct sockaddr_alg],,,[# include <linux/if_alg.h>])\nAC_CHECK_TYPES([struct fanotify_event_info_fid, struct fanotify_event_info_error,\n\t\tstruct fanotify_event_info_header, struct fanotify_event_info_pidfd],,,[#include <sys/fanotify.h>])\nAC_CHECK_TYPES([struct file_clone_range],,,[#include <linux/fs.h>])\nAC_CHECK_TYPES([struct file_dedupe_range],,,[#include <linux/fs.h>])\n\nAC_CHECK_TYPES([struct file_handle],,,[\n#define _GNU_SOURCE\n#include <fcntl.h>\n])\n\nAC_CHECK_TYPES([struct fs_quota_statv],,,[\n#define _GNU_SOURCE\n#include <xfs/xqm.h>\n])\n\nAC_CHECK_TYPES([struct if_nextdqblk],,,[#include <linux/quota.h>])\nAC_CHECK_TYPES([struct iovec],,,[#include <sys/uio.h>])\nAC_CHECK_TYPES([struct ipc64_perm],,,[#include <sys/ipcbuf.h>])\nAC_CHECK_TYPES([struct loop_config],,,[#include <linux/loop.h>])\nAC_CHECK_TYPES([struct landlock_path_beneath_attr],,,[#include <linux/landlock.h>])\nAC_CHECK_TYPES([struct landlock_net_port_attr],,,[#include <linux/landlock.h>])\n\nAC_CHECK_TYPES([struct mmsghdr],,,[\n#define _GNU_SOURCE\n#include <sys/types.h>\n#include <sys/socket.h>\n])\n\nAC_CHECK_TYPES([struct msqid64_ds],,,[#include <sys/msgbuf.h>])\n\nAC_CHECK_TYPES([struct rlimit64],,,[\n#define _LARGEFILE64_SOURCE\n#include <sys/resource.h>\n])\n\nAC_CHECK_TYPES([struct semid64_ds],,,[#include <sys/sem.h>])\nAC_CHECK_TYPES([struct shmid64_ds],,,[#include <sys/shmbuf.h>])\n\nAC_CHECK_TYPES([struct statx, struct statx_timestamp],,,[\n#define _GNU_SOURCE\n#include <sys/stat.h>\n])\n\nAC_CHECK_TYPES([struct termio],,,[#include <sys/ioctl.h>])\nAC_CHECK_TYPES([struct tpacket_req3],,,[# include <linux/if_packet.h>])\nAC_CHECK_TYPES([struct user_desc, struct modify_ldt_ldt_s],[],[],[#include <asm/ldt.h>])\n\nAC_CHECK_TYPES([struct xt_entry_match, struct xt_entry_target],,,[\n#include <sys/types.h>\n#include <netinet/in.h>\n#include <net/if.h>\n#include <limits.h>\n#include <linux/netfilter_ipv4/ip_tables.h>\n])\n\nAC_CHECK_TYPES([struct __kernel_old_timeval, struct __kernel_old_timespec, struct __kernel_timespec,\n                struct __kernel_old_itimerspec, struct __kernel_itimerspec,\n                struct __kernel_old_itimerval],,,[#include <sys/socket.h>])\n\nAC_CHECK_TYPES([struct futex_waitv],,,[#include <linux/futex.h>])\nAC_CHECK_TYPES([struct mount_attr],,,[\n#ifdef HAVE_MOUNT_SETATTR\n# include <sys/mount.h>\n#elif HAVE_LINUX_MOUNT_H\n# include <linux/mount.h>\n#endif\n])\n\nAC_CHECK_TYPES([struct cachestat_range],,,[#include <sys/mman.h>])\nAC_CHECK_TYPES([struct cachestat],,,[#include <sys/mman.h>])\nAC_CHECK_TYPES([struct mnt_id_req],,,[#include <linux/mount.h>])\nAC_CHECK_TYPES([struct statmount],,,[#include <linux/mount.h>])\n\n# Tools knobs\n\n# Bash\nAC_ARG_WITH([bash],\n  [AS_HELP_STRING([--with-bash],\n    [have the Bourne Again Shell interpreter])],\n  [with_bash=$withval],\n  [with_bash=no]\n)\nif test \"x$with_bash\" = xyes; then\n    AC_SUBST([WITH_BASH],[\"yes\"])\nelse\n    AC_SUBST([WITH_BASH],[\"no\"])\nfi\n\n# metadata\nAC_ARG_ENABLE([metadata],\n  [AS_HELP_STRING([--disable-metadata],\n\t[Disable metadata generation (both HTML and PDF, default no)])],\n  [], [enable_metadata=yes]\n)\nAC_ARG_ENABLE([metadata_html],\n  [AS_HELP_STRING([--disable-metadata-html],\n\t[Disable metadata HTML generation (default no)])],\n  [], [enable_metadata_html=yes]\n)\n\nAC_ARG_ENABLE([metadata_pdf],\n  [AS_HELP_STRING([--enable-metadata-pdf],\n\t[Enable metadata PDF generation (default no)])],\n  [], [enable_metadata_pdf=no]\n)\n\nAC_ARG_WITH([metadata_generator],\n  [AS_HELP_STRING([--with-metadata-generator=asciidoc|asciidoctor],\n\t[Specify metadata generator to use (default autodetect)])],\n  [with_metadata_generator=$withval],\n  [with_metadata_generator=detect]\n)\n\nLTP_DOCPARSE\n\n# Expect\nAC_ARG_WITH([expect],\n  [AS_HELP_STRING([--with-expect],\n    [have the Tcl/expect library])],\n  [with_expect=$withval],\n  [with_expect=no]\n)\nif test \"x$with_expect\" = xyes; then\n    AC_SUBST([WITH_EXPECT],[\"yes\"])\nelse\n    AC_SUBST([WITH_EXPECT],[\"no\"])\nfi\n\n# Numa\nAC_ARG_WITH([numa],\n  AS_HELP_STRING([--without-numa],\n    [without numa support]),\n  [with_numa=$withval],\n  [with_numa=yes]\n)\n\n# Perl\nAC_ARG_WITH([perl],\n  [AS_HELP_STRING([--with-perl],\n    [have a perl interpreter])],\n  [with_perl=$withval],\n  [with_perl=no]\n)\nif test \"x$with_perl\" = xyes; then\n    AC_SUBST([WITH_PERL],[\"yes\"])\nelse\n    AC_SUBST([WITH_PERL],[\"no\"])\nfi\n\n# Python\nAC_ARG_WITH([python],\n  [AS_HELP_STRING([--with-python],\n    [have a python interpreter])],\n  [with_python=$withval],\n  [with_python=no]\n)\nif test \"x$with_python\" = xyes; then\n    AC_SUBST([WITH_PYTHON],[\"yes\"])\nelse\n    AC_SUBST([WITH_PYTHON],[\"no\"])\nfi\n\n# TI RPC\nAC_ARG_WITH([tirpc],\n  AS_HELP_STRING([--without-tirpc],\n    [without libtirpc support]),\n  [with_tirpc=$withval],\n  [with_tirpc=yes]\n)\n# END tools knobs\n\n# Testsuites knobs\n\nAC_ARG_WITH([open-posix-testsuite],\n  [AS_HELP_STRING([--with-open-posix-testsuite],\n    [compile and install the open posix testsuite])],\n  [with_open_posix_testsuite=$withval],\n  [with_open_posix_testsuite=no]\n)\n\n# Allow setting the directoy, where the open posix testsuite is installed to.\n# If nothing is defined, we have to pass our default value to submake\nAC_ARG_WITH([open-posix-testdir],\n  [AS_HELP_STRING([--with-open-posix-testdir=<dir>],\n    [set the directory, where the open posix testsuite will be installed under prefix])],\n  [],\n  [ac_configure_args=\"$ac_configure_args --with-open-posix-testdir=testcases/open_posix_testsuite\"]\n)\n\nif test \"x$with_open_posix_testsuite\" = xyes; then\n    AC_SUBST([WITH_OPEN_POSIX_TESTSUITE],[\"yes\"])\n    AC_CONFIG_SUBDIRS([testcases/open_posix_testsuite])\nelse\n    AC_SUBST([WITH_OPEN_POSIX_TESTSUITE],[\"no\"])\nfi\n\n# TODO: testcases/realtime requires bash and python.\nAC_ARG_WITH([realtime-testsuite],\n  [AS_HELP_STRING([--with-realtime-testsuite],\n    [unused, kept for compatibility reason])],\n  [with_realtime_testsuite=$withval],\n  [with_realtime_testsuite=no]\n)\n\nif test \"x$with_realtime_testsuite\" = xyes; then\n    AC_SUBST([WITH_REALTIME_TESTSUITE],[\"yes\"])\nelse\n    AC_SUBST([WITH_REALTIME_TESTSUITE],[\"no\"])\nfi\n\nAC_CONFIG_COMMANDS([syscalls.h], [cd ${ac_top_srcdir}/include/lapi/syscalls; ./generate_syscalls.sh ../syscalls.h; cd - >/dev/null])\n\n# custom functions\n# NOTE: don't create custom functions for simple checks, put them into this file\nLTP_CHECK_ACL_SUPPORT\nLTP_CHECK_ATOMIC_MEMORY_MODEL\nLTP_CHECK_BUILTIN_CLEAR_CACHE\nLTP_CHECK_CAPABILITY_SUPPORT\nLTP_CHECK_CC_WARN_OLDSTYLE\nLTP_CHECK_CRYPTO\nLTP_CHECK_FORTIFY_SOURCE\nLTP_CHECK_KERNEL_DEVEL\nLTP_CHECK_KEYUTILS_SUPPORT\nLTP_CHECK_LIBMNL\nLTP_CHECK_LINUXRANDOM\nLTP_CHECK_SELINUX\nLTP_CHECK_SYNC_ADD_AND_FETCH\nLTP_CHECK_SYSCALL_EVENTFD\nLTP_CHECK_SYSCALL_FCNTL\nLTP_CHECK_FSVERITY\n\nAX_CHECK_COMPILE_FLAG([-no-pie], [LTP_CFLAGS_NOPIE=1])\nAX_CHECK_COMPILE_FLAG([-ffixed-ebp], [LTP_CFLAGS_FFIXED_EBP=1])\nAC_SUBST([LTP_CFLAGS_NOPIE])\nAC_SUBST([LTP_CFLAGS_FFIXED_EBP])\n\nif test \"x$with_numa\" = xyes; then\n\tLTP_CHECK_SYSCALL_NUMA\n\tnuma_error_msg=\"test requires libnuma development packages with LIBNUMA_API_VERSION >= 2\"\nelse\n\tnuma_error_msg=\"NUMA support was disabled during build\"\nfi\nAC_DEFINE_UNQUOTED(NUMA_ERROR_MSG, [\"$numa_error_msg\"], [Error message when no NUMA support])\n\n\nLTP_CHECK_SYSCALL_SIGNALFD\nLTP_CHECK_SYSCALL_UTIMENSAT\nLTP_CHECK_TASKSTATS\ntest \"x$with_tirpc\" = xyes && LTP_CHECK_TIRPC\nLTP_DETECT_HOST_CPU\n\nAC_MSG_CHECKING([whether linker can handle KVM payloads])\nltp_backup_ldflags=\"$LDFLAGS\"\nltp_backup_flags=\"$[]_AC_LANG_PREFIX[]FLAGS\"\nLDFLAGS=\"-T ${srcdir}/testcases/kernel/kvm/linker/${HOST_CPU}.lds\"\n_AC_LANG_PREFIX[]FLAGS=\nAC_LINK_IFELSE([AC_LANG_PROGRAM()],\n  [\n    AC_MSG_RESULT([yes])\n    AC_SUBST([WITH_KVM_TESTSUITE],[\"yes\"])\n    have_kvm=yes\n  ],\n  [\n    AC_MSG_RESULT([no])\n    AC_SUBST([WITH_KVM_TESTSUITE],[\"no\"])\n    have_kvm=no\n  ])\n_AC_LANG_PREFIX[]FLAGS=\"$ltp_backup_flags\"\nLDFLAGS=\"$ltp_backup_ldflags\"\n\nAC_OUTPUT\n\ncat << EOF\n\nTESTSUITES\nKVM testsuite: $have_kvm\nopen posix testsuite: ${with_open_posix_testsuite:-no}\nTI-RPC testsuite: ${with_tirpc:-yes}\n\nLIBRARIES\nkeyutils: ${have_keyutils:-yes}\nlibacl: ${have_libacl:-no}\nlibaio: ${have_libaio:-no} (aio: ${have_aio:-no})\nlibcap: $cap_libs (newer: ${has_newer_libcap:-no})\nlibcrypto: ${have_libcrypto:-no} (sha: ${have_sha:-no})\nlibmnl: ${have_libmnl:-yes}\nlibnuma: ${have_libnuma:-no} (headers: ${have_numa_headers:-yes}, v2 headers: ${have_numa_headers_v2:-no})\nlibtirpc: ${have_libtirpc:-no}\nglibc SUN-RPC: ${have_rpc_glibc:-no}\n\nMETADATA\nmetadata generator: $with_metadata_generator\nHTML metadata: $with_metadata_html\nPDF metadata: $with_metadata_pdf\nEOF\n\nif test \"x$with_realtime_testsuite\" = xyes; then\n    AC_MSG_WARN([--with-realtime-testsuite has no effect and is kept for compatibilty reason. It will be removed in the future.])\nfi\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "docparse",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "libs",
          "type": "tree",
          "content": null
        },
        {
          "name": "m4",
          "type": "tree",
          "content": null
        },
        {
          "name": "metadata",
          "type": "tree",
          "content": null
        },
        {
          "name": "pan",
          "type": "tree",
          "content": null
        },
        {
          "name": "runltp",
          "type": "blob",
          "size": 35.541015625,
          "content": "#!/bin/sh\n################################################################################\n##                                                                            ##\n## Copyright (c) International Business Machines  Corp., 2001                 ##\n##                                                                            ##\n## This program is free software;  you can redistribute it and#or modify      ##\n## it under the terms of the GNU General Public License as published by       ##\n## the Free Software Foundation; either version 2 of the License, or          ##\n## (at your option) any later version.                                        ##\n##                                                                            ##\n## This program is distributed in the hope that it will be useful, but        ##\n## WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY ##\n## or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License   ##\n## for more details.                                                          ##\n##                                                                            ##\n## You should have received a copy of the GNU General Public License          ##\n## along with this program;  if not, write to the Free Software               ##\n## Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA    ##\n##                                                                            ##\n################################################################################\n# File: runltp\n#\n# Description:  This script can be used to the tests in the LTP test suite\n#\n# Authors:      Manoj Iyer - manjo@mail.utexas.edu\n#               Robbe Williamson - robbiew@us.ibm.com\n#\n# History:      Oct 07 2003 - Modified - Manoj Iyer\n#               - use functions\n#               - clean up on script exit\n#               - error checking etc.\n#\n#               Oct 08 2003 - Modified - Manoj Iyer\n#               - fixed bug in creating results directory\n#               - all checks should be enlclosed in \" \" to avoid bash error\n#               - exit with error if ltp-pan is not found in pan directory\n#\n#               Jul 22 2007 - Modified - Ricardo Salveti de Araujo\n#               - added support to put more then one file at CMDLINE (-f)\n#               - added a new option, that the user can pass the address of\n#               the command file, and it'll use wget to get it (-w)\n#               - now -s does the grep at the selected command files (default,\n#               -f or -w)\n#\n#               Jul 23 2007 - Modified - Ricardo Salveti de Araujo\n#               - added flag to get the command file that has all failed tests\n#\n#               Sep 11 2007 - Modified - Subrata Modak\n#               - added option to create Failed File if it is not an absolute path\n#               - added option to create Output File if it is not an absolute path\n#               - added option to create Failed File compulsory, even if user has not mentioned it\n#\n#               Sep 14 2007 - Modified - Ricardo Salveti de Araujo\n#               - cleaning and removing duplicated code\n#\n#               Oct 27 2007 - Modified - Ricardo Salveti de Araujo and Subrata Modak\n#               - better ways to integrate \"ltp/tools/genload/stress\" with \"ltp/runltp\"\n#               Nov 24 2007 - Modified - Subrata Modak\n#               - Added a new option to generate output in HTML format also. Also retaining\n#                 the original test format\n#               Nov 28 2007 - Modified - Subrata Modak\n#               - Added a new option to mail back LTP reports\n#               May 19 2008 - Modified - Subrata Modak\n#               - Added capability for default Log file generation\n#\t\tAug 17 2009 - Modified - Subrata Modak\n#\t\t- Added Fault Injection generation Capability through -F Option\n#\n#################################################################################\n\n\ndeprecated()\n{\n    echo \"-------------------------------------------\" >&2\n    echo \"INFO: runltp script is deprecated, try kirk\" >&2\n    echo \"https://github.com/linux-test-project/kirk\" >&2\n    echo \"-------------------------------------------\" >&2\n}\n\n\nsetup()\n{\n    deprecated\n\n    cd `dirname $0` || \\\n    {\n        echo \"FATAL: unable to change directory to $(dirname $0)\"\n        exit 1\n    }\n    export LTPROOT=${PWD}\n    export TMPBASE=\"/tmp\"\n    export PATH=\"${PATH}:${LTPROOT}/testcases/bin:${LTPROOT}/bin\"\n\n    export LTP_DEV_FS_TYPE=\"ext2\"\n\n    [ -d \"$LTPROOT/testcases/bin\" ] ||\n    {\n        echo \"FATAL: LTP not installed correctly\"\n        echo \"INFO:  Follow directions in INSTALL!\"\n        exit 1\n    }\n\n    [ -e \"$LTPROOT/bin/ltp-pan\" ] ||\n    {\n        echo \"FATAL: Test suite driver 'ltp-pan' not found\"\n        echo \"INFO:  Follow directions in INSTALL!\"\n        exit 1\n    }\n}\n\nversion_of_ltp()\n{\n    cat \"$LTPROOT/Version\"\n    exit 0\n}\n\nusage()\n{\n    cat <<-EOF >&2\n\n    usage: ${0##*/} [ -a EMAIL_TO ] [ -c NUM_PROCS ] [ -C FAILCMDFILE ] [ -T TCONFCMDFILE ]\n    [ -d TMPDIR ] [ -D NUM_PROCS,NUM_FILES,NUM_BYTES,CLEAN_FLAG ] -e [ -f CMDFILES(,...) ]\n    [ -g HTMLFILE] [ -i NUM_PROCS ] [ -l LOGFILE ] [ -m NUM_PROCS,CHUNKS,BYTES,HANGUP_FLAG ]\n    -N -n [ -o OUTPUTFILE ] -p -q -Q [ -r LTPROOT ] [ -s PATTERN ] [ -t DURATION ]\n    -v [ -w CMDFILEADDR ] [ -x INSTANCES ] [ -b DEVICE ] [-B LTP_DEV_FS_TYPE]\n\t[ -F LOOPS,PERCENTAGE ] [ -z BIG_DEVICE ] [-Z  LTP_BIG_DEV_FS_TYPE]\n\n    -a EMAIL_TO     EMAIL all your Reports to this E-mail Address\n    -c NUM_PROCS    Run LTP under additional background CPU load\n                    [NUM_PROCS = no. of processes creating the CPU Load by spinning over sqrt()\n                                 (Defaults to 1 when value)]\n    -C FAILCMDFILE  Command file with all failed test cases.\n    -T TCONFCMDFILE Command file with all test cases that are not fully tested.\n    -d TMPDIR       Directory where temporary files will be created.\n    -D NUM_PROCS,NUM_FILES,NUM_BYTES,CLEAN_FLAG\n                    Run LTP under additional background Load on Secondary Storage (separated by comma)\n                    [NUM_PROCS   = no. of processes creating Storage Load by spinning over write()]\n                    [NUM_FILES   = Write() to these many files (Defaults to 1 when value 0 or undefined)]\n                    [NUM_BYTES   = write these many bytes (defaults to 1GB, when value 0 or undefined)]\n                    [CLEAN_FLAG  = unlink file to which random data written, when value 1]\n    -e              Prints the date of the current LTP release\n    -f CMDFILES     Execute user defined list of testcases (separate with ',')\n\t-F LOOPS,PERCENTAGE Induce PERCENTAGE Fault in the Kernel Subsystems, and, run each test for LOOPS loop\n    -g HTMLFILE     Create an additional HTML output format\n    -h              Help. Prints all available options.\n    -i NUM_PROCS    Run LTP under additional background Load on IO Bus\n                    [NUM_PROCS   = no. of processes creating IO Bus Load by spinning over sync()]\n    -K DMESG_LOG_DIR\n\t\t\tLog Kernel messages generated for each test cases inside this directory\n    -l LOGFILE      Log results of test in a logfile.\n    -m NUM_PROCS,CHUNKS,BYTES,HANGUP_FLAG\n                    Run LTP under additional background Load on Main memory (separated by comma)\n                    [NUM_PROCS   = no. of processes creating main Memory Load by spinning over malloc()]\n                    [CHUNKS      = malloc these many chunks (default is 1 when value 0 or undefined)]\n                    [BYTES       = malloc CHUNKS of BYTES bytes (default is 256MB when value 0 or undefined) ]\n                    [HANGUP_FLAG = hang in a sleep loop after memory allocated, when value 1]\n\t-M CHECK_TYPE\n\t\t[CHECK_TYPE=1 => Full Memory Leak Check tracing children as well]\n\t\t[CHECK_TYPE=2 => Thread Concurrency Check tracing children as well]\n\t\t[CHECK_TYPE=3 => Full Memory Leak & Thread Concurrency Check tracing children as well]\n    -N              Run all the networking tests.\n    -o OUTPUTFILE   Redirect test output to a file.\n    -p              Human readable format logfiles.\n    -q              Print less verbose output to screen. This implies\n                    not logging start of the test in kernel log.\n    -Q              Don't log start of test in kernel log.\n    -r LTPROOT      Fully qualified path where testsuite is installed.\n    -R              Randomize test order.\n    -s PATTERN      Only run test cases which match PATTERN.\n    -S SKIPFILE     Skip tests specified in SKIPFILE\n    -t DURATION     Execute the testsuite for given duration. Examples:\n                      -t 60s = 60 seconds\n                      -t 45m = 45 minutes\n                      -t 24h = 24 hours\n                      -t 2d  = 2 days\n    -I ITERATIONS   Execute the testsuite ITERATIONS times.\n    -w CMDFILEADDR  Uses wget to get the user's list of testcases.\n    -x INSTANCES    Run multiple instances of this testsuite.\n    -b DEVICE       Some tests require an unmounted block device\n                    to run correctly.\n    -B LTP_DEV_FS_TYPE The file system of test block devices.\n    -z BIG_DEVICE   Some tests require a big unmounted block device\n                    to run correctly.\n    -Z  LTP_BIG_DEV_FS_TYPE The file system of the big device\n    -W ZOOFILE      Specify the zoo file used to record current test tags (default PID of this script)\n\n\n\n    example: ${0##*/} -c 2 -i 2 -m 2,4,10240,1 -D 2,10,10240,1 -p -q  -l /tmp/result-log.$$ -o /tmp/result-output.$$ -C /tmp/result-failed.$$ -d ${PWD}\n\n\n\tEOF\nexit 0\n}\n\nmain()\n{\n    local CMDFILES=\n    local PRETTY_PRT=\n    local ALT_DIR_OUT=0\n    local ALT_DIR_RES=0\n    local ALT_HTML_OUT=0\n    local ALT_EMAIL_OUT=0\n    local ALT_DMESG_OUT=0\n    local RUN_NETEST=0\n    local RUN_REPEATED=0\n    local QUIET_MODE=\n    local NO_KMSG=\n    local NETPIPE=0\n    local GENLOAD=0\n    local MEMSIZE=0\n    local DURATION=\n    local CMDFILEADDR=\n    local FAILCMDFILE=\n    local TCONFCMDFILE=\n    local INJECT_KERNEL_FAULT=\n    local INJECT_KERNEL_FAULT_PERCENTAGE=\n    local INJECT_FAULT_LOOPS_PER_TEST=\n    local VALGRIND_CHECK=\n    local VALGRIND_CHECK_TYPE=\n    local LOGFILE_NAME=\n    local LOGFILE=\n    local OUTPUTFILE_NAME=\n    local OUTPUTFILE=\n    local HTMLFILE_NAME=\n    local HTMLFILE=\n    local DMESG_DIR=\n    local EMAIL_TO=\n    local TAG_RESTRICT_STRING=\n    local PAN_COMMAND=\n    local RANDOMRUN=0\n    local DEFAULT_FILE_NAME_GENERATION_TIME=`date +\"%Y_%m_%d-%Hh_%Mm_%Ss\"`\n    local scenfile=\n    local ZOOFILE=$$\n\n    version_date=$(cat \"$LTPROOT/Version\")\n\n    while getopts a:b:B:c:C:T:d:D:ef:F:g:hi:I:K:l:m:M:No:pqQr:Rs:S:t:T:w:x:z:Z:W: arg\n    do  case $arg in\n        a)  EMAIL_TO=$OPTARG\n            ALT_EMAIL_OUT=1;;\n        c)\n            NUM_PROCS=$(($OPTARG))\n            if   [ \"$NUM_PROCS\" -eq 0 ]; then\n                # User Did not Define the Value ,or, User Defined Zero,\n                # hence, prevent from creating infinite processes\n                NUM_PROCS=1\n            fi\n            $LTPROOT/testcases/bin/genload --cpu $NUM_PROCS >/dev/null 2>&1 &\n            GENLOAD=1 ;;\n\n        C)\n            case $OPTARG in\n            /*)\n                FAILCMDFILE=\"-C $OPTARG\" ;;\n            *)\n                FAILCMDFILE=\"-C $LTPROOT/output/$OPTARG\"\n                ALT_DIR_OUT=1 ;;\n            esac ;;\n\n        T)\n            case $OPTARG in\n            /*)\n                TCONFCMDFILE=\"-T $OPTARG\" ;;\n            *)\n                TCONFCMDFILE=\"-T $LTPROOT/output/$OPTARG\"\n                ALT_DIR_OUT=1 ;;\n            esac ;;\n\n        d)  # convert the user path to absolute path.\n            export TMPBASE=$(readlink -f ${OPTARG}) ;;\n\n        D)  NUM_PROCS=1; NUM_FILES=1; NUM_BYTES=$((1024 * 1024 * 1024)); CLEAN_FLAG=0\n            ARGUMENT_LIST=$OPTARG\n            TOTAL_ARGUMENTS=1\n            for ARGUMENT in `echo \"$ARGUMENT_LIST\" | tr ',' ' '`\n            do\n                case $TOTAL_ARGUMENTS in\n                    1) NUM_PROCS=\"$ARGUMENT\" ;;\n                    2) NUM_FILES=\"$ARGUMENT\" ;;\n                    3) NUM_BYTES=\"$ARGUMENT\" ;;\n                    4) CLEAN_FLAG=\"$ARGUMENT\" ;;\n                esac\n                TOTAL_ARGUMENTS=`expr $TOTAL_ARGUMENTS + 1`\n            done\n            # just to get the default values if the user passed 0\n            if [ \"$NUM_PROCS\" -eq 0 ]; then\n                NUM_PROCS=1\n            fi\n            if [ \"$NUM_FILES\" -eq 0 ]; then\n                NUM_FILES=1\n            fi\n            if [ \"$NUM_BYTES\" -eq 0 ]; then\n                NUM_BYTES=$((1024 * 1024 * 1024))\n            fi\n            if [ \"$CLEAN_FLAG\" -ne 1 ]; then\n                CLEAN_FLAG=0\n            fi\n            if [ \"$CLEAN_FLAG\" -eq 1 ]; then\n                # Do not unlink file in this case\n                $LTPROOT/testcases/bin/genload --hdd $NUM_PROCS --hdd-files \\\n                    $NUM_FILES --hdd-bytes $NUM_BYTES >/dev/null 2>&1 &\n            else\n                # Cleanup otherwise\n                $LTPROOT/testcases/bin/genload --hdd $NUM_PROCS --hdd-files \\\n                    $NUM_FILES --hdd-bytes $NUM_BYTES --hdd-noclean >/dev/null 2>&1 &\n            fi\n            GENLOAD=1;;\n\n        e)  # Print out the version of LTP\n            version_of_ltp\n\t    ;;\n        f)  # Execute user defined set of testcases.\n            # Can be more than one file, just separate it with ',', like:\n            # -f nfs,commands,/tmp/testfile\n            CMDFILES=$OPTARG;;\n\tF)\tINJECT_KERNEL_FAULT=1\n\t\t# Separate out the NO_OF_LOOPS & FAULT_PERCENTAGE\n\t\tINJECT_FAULT_LOOPS_PER_TEST=`echo $OPTARG |cut -d',' -f1 | tr -d '\\n' | tr -d ' '`\n\t\tINJECT_KERNEL_FAULT_PERCENTAGE=`echo $OPTARG |cut -d',' -f2 | tr -d '\\n' | tr -d ' '`\n\t\tif [ ! $INJECT_FAULT_LOOPS_PER_TEST ]; then\n\t\t\techo \"Loops not properly defined. Resorting to default 5...\"\n\t\t\texport INJECT_FAULT_LOOPS_PER_TEST=5\n\t\tfi\n\t\tif [ ! $INJECT_KERNEL_FAULT_PERCENTAGE ]; then\n\t\t\techo \"Fault Persentage not properly defined. Resorting to default 10...\"\n\t\t\texport INJECT_KERNEL_FAULT_PERCENTAGE=10\n\t\tfi;;\n        g)  HTMLFILE_NAME=\"$OPTARG\"\n            case $OPTARG in\n            /*)\n                HTMLFILE=\"$OPTARG\";;\n            *)\n                HTMLFILE=\"$LTPROOT/output/$OPTARG\"\n                ALT_DIR_OUT=1;;\n            esac\n            ALT_HTML_OUT=1;;\n        h)  usage;;\n\n        i)\n            NUM_PROCS=$(($OPTARG))\n            if   [ \"$NUM_PROCS\" -eq 0 ]; then\n                # User Did not Define the Value ,or, User Defined Zero,\n                # hence, prevent from creating infinite processes\n                NUM_PROCS=1\n            fi\n            $LTPROOT/testcases/bin/genload --io $NUM_PROCS >/dev/null 2>&1 &\n            GENLOAD=1 ;;\n\n        K)\n\t    case $OPTARG in\n        \t   /*)\n\t\t\tDMESG_DIR=\"$OPTARG-dmesg-output-`echo $$-``date +%X | tr -d ' '`\";;\n\t            *)\n\t\t        DMESG_DIR=\"$LTPROOT/output/$OPTARG-dmesg-output-`echo $$-``date +%X | tr -d ' '`\";;\n\t    esac\n            mkdir -p $DMESG_DIR\n            ALT_DMESG_OUT=1;;\n        l)\n            LOGFILE_NAME=\"$OPTARG\"\n            case $OPTARG in\n            /*)\n                LOGFILE=\"-l $OPTARG\" ;;\n            *)\n                LOGFILE=\"-l $LTPROOT/results/$OPTARG\"\n                ALT_DIR_RES=1 ;;\n            esac ;;\n\n        m)  NUM_PROCS=1; CHUNKS=1; BYTES=$((256 * 1024 * 1024)); HANGUP_FLAG=0\n            ARGUMENT_LIST=$OPTARG\n            TOTAL_ARGUMENTS=1\n            for ARGUMENT in `echo \"$ARGUMENT_LIST\" | tr ',' ' '`\n            do\n                case $TOTAL_ARGUMENTS in\n                    1) NUM_PROCS=\"$ARGUMENT\" ;;\n                    2) CHUNKS=\"$ARGUMENT\" ;;\n                    3) BYTES=\"$ARGUMENT\" ;;\n                    4) HANGUP_FLAG=\"$ARGUMENT\" ;;\n                esac\n                TOTAL_ARGUMENTS=`expr $TOTAL_ARGUMENTS + 1`\n            done\n            # just to get the default values if the user passed 0\n            if [ \"$NUM_PROCS\" -eq 0 ]; then\n                NUM_PROCS=1\n            fi\n            if [ \"$CHUNKS\" -eq 0 ]; then\n                CHUNKS=1\n            fi\n            if [ \"$BYTES\" -eq 0 ]; then\n                BYTES=$((256 * 1024 * 1024))\n            fi\n            if [ \"$HANGUP_FLAG\" -ne 1 ]; then\n                HANGUP_FLAG=0\n            fi\n            if [ \"$HANGUP_FLAG\" -eq 1 ]; then\n                # Hang in a Sleep loop after memory allocated\n                $LTPROOT/testcases/bin/genload --vm $NUM_PROCS --vm-chunks \\\n                    $CHUNKS --vm-bytes $BYTES --vm-hang >/dev/null 2>&1 &\n            else\n                # Otherwise Do not Hangup\n                $LTPROOT/testcases/bin/genload --vm $NUM_PROCS --vm-chunks \\\n                    $CHUNKS --vm-bytes $BYTES >/dev/null 2>&1 &\n            fi\n            GENLOAD=1;;\n\tM)\n\t\tVALGRIND_CHECK=1\n\t\tVALGRIND_CHECK_TYPE=\"$OPTARG\";;\n\n        N)  RUN_NETEST=1;;\n\n        o)  OUTPUTFILE_NAME=\"$OPTARG\"\n            case $OPTARG in\n            /*)\n                OUTPUTFILE=\"-o $OPTARG\";;\n            *)\n                OUTPUTFILE=\"-o $LTPROOT/output/$OPTARG\"\n                ALT_DIR_OUT=1 ;;\n            esac ;;\n\n        p)  PRETTY_PRT=\"-p\";;\n\n        q)  QUIET_MODE=\"-q\";;\n\n        Q)  NO_KMSG=\"-Q\";;\n\n        r)  LTPROOT=$OPTARG;;\n\n        R)  RANDOMRUN=1;;\n\n        s)  TAG_RESTRICT_STRING=$OPTARG;;\n\n\tS)  case $OPTARG in\n            /*)\n                SKIPFILE=$OPTARG;;\n            *)\n                SKIPFILE=\"$LTPROOT/$OPTARG\";;\n            esac ;;\n\n        t)  # In case you want to specify the time\n            # to run from the command line\n            # (2m = two minutes, 2h = two hours, etc)\n            DURATION=\"-t $OPTARG\" ;;\n\n        I)  # In case you want the testcases to runsequentially RUN_REPEATED times\n            RUN_REPEATED=$OPTARG;;\n\n        w)  CMDFILEADDR=$OPTARG;;\n\n        x)  # number of ltp's to run\n            cat <<-EOF >&1\n            WARNING: The use of -x can cause unpredictable failures, as a\n                     result of concurrently running multiple tests designed\n                     to be ran exclusively.\n                     Pausing for 10 seconds...\"\n\tEOF\n            sleep 10\n            INSTANCES=\"-x $OPTARG\";;\n        b) DEVICE=$OPTARG;;\n        B) LTP_DEV_FS_TYPE=$OPTARG;;\n        z) BIG_DEVICE=$OPTARG;;\n        Z) BIG_DEVICE_FS_TYPE=$OPTARG;;\n        W) ZOOFILE=$OPTARG;;\n        \\?) usage;;\n        esac\n    done\n\n    ## It would be nice to create a default log file even if the user has not mentioned\n    if [ ! \"$LOGFILE\" ]; then                                ## User has not mentioned about Log File name\n       LOGFILE_NAME=\"$DEFAULT_FILE_NAME_GENERATION_TIME\"\n       LOGFILE=\"-l $LTPROOT/results/LTP_RUN_ON-$LOGFILE_NAME.log\"\n       ALT_DIR_RES=1\n       PRETTY_PRT=\"-p\"\n    fi\n\n    ## It would be nice if a Failed File is compulsorily created (gives User better Idea of Tests that failed)\n\n    if [ ! \"$FAILCMDFILE\" ]; then                            ## User has not mentioned about Failed File name\n         ALT_DIR_OUT=1\n         if [ ! \"$OUTPUTFILE\" ]; then\t\t             ## User has not mentioned about Output File name either\n            if [ ! \"$LOGFILE\" ]; then                        ## User has not mentioned about Log File name either\n               FAILED_FILE_NAME=\"$DEFAULT_FILE_NAME_GENERATION_TIME\"\n               FAILCMDFILE=\"-C $LTPROOT/output/LTP_RUN_ON-$FAILED_FILE_NAME.failed\"\n            else\t\t\t\t\t     ## User Fortunately wanted a log file,\n               FAILED_FILE_NAME=`basename $LOGFILE_NAME`     ## Extract log file name and use it to construct Failed file name\n               FAILCMDFILE=\"-C $LTPROOT/output/LTP_RUN_ON-$FAILED_FILE_NAME.failed\"\n            fi\n         else                                                ## User Fortunately wanted a Output file\n               FAILED_FILE_NAME=`basename $OUTPUTFILE_NAME`  ## Extract output file name and use it to construct Failed file name\n               FAILCMDFILE=\"-C $LTPROOT/output/LTP_RUN_ON-$FAILED_FILE_NAME.failed\"\n         fi\n    fi\n\n    if [ ! \"$TCONFCMDFILE\" ]; then\n         ALT_DIR_OUT=1\n         if [ ! \"$OUTPUTFILE\" ]; then\n            if [ ! \"$LOGFILE\" ]; then\n               TCONF_FILE_NAME=\"$DEFAULT_FILE_NAME_GENERATION_TIME\"\n               TCONFCMDFILE=\"-T $LTPROOT/output/LTP_RUN_ON-${TCONF_FILE_NAME}.tconf\"\n            else\n               TCONF_FILE_NAME=`basename $LOGFILE_NAME`\n               TCONFCMDFILE=\"-T $LTPROOT/output/LTP_RUN_ON-${TCONF_FILE_NAME}.tconf\"\n            fi\n         else\n               TCONF_FILE_NAME=`basename $OUTPUTFILE_NAME`\n               TCONFCMDFILE=\"-T $LTPROOT/output/LTP_RUN_ON-${TCONF_FILE_NAME}.tconf\"\n         fi\n    fi\n\n    if [ \"$ALT_HTML_OUT\" -eq 1 ] ; then                      ## User wants the HTML version of the output\n       QUIET_MODE=\"\"                                         ## Suppressing this guy as it will prevent generation of proper output\n                                                             ## which the HTML parser will require\n       if [ ! \"$OUTPUTFILE\" ]; then                          ## User has not mentioned about the Outputfile name, then we need to definitely generate one\n          OUTPUTFILE_NAME=\"$DEFAULT_FILE_NAME_GENERATION_TIME\"\n          OUTPUTFILE=\"-o $LTPROOT/output/LTP_RUN_ON-$OUTPUTFILE_NAME.output\"\n          ALT_DIR_OUT=1\n       fi\n    fi\n\n    # If we need, create the output directory\n    [ \"$ALT_DIR_OUT\" -eq 1 ] && \\\n    {\n        [ ! -d $LTPROOT/output ] && \\\n        {\n           echo \"INFO: creating $LTPROOT/output directory\"\n           mkdir -p $LTPROOT/output || \\\n           {\n               echo \"ERROR: failed to create $LTPROOT/output\"\n               exit 1\n            }\n        }\n    }\n\n    # If we need, create the results directory\n    [ \"$ALT_DIR_RES\" -eq 1 ] && \\\n    {\n        [ ! -d $LTPROOT/results ] && \\\n        {\n            echo \"INFO: creating $LTPROOT/results directory\"\n            mkdir -p $LTPROOT/results || \\\n            {\n                echo \"ERROR: failed to create $LTPROOT/results\"\n                exit 1\n            }\n        }\n    }\n\n    # Added -m 777 for tests that call tst_tmpdir() and try to\n    #  write to it as user nobody\n    mkdir -m 777 -p $TMPBASE || \\\n    {\n        echo \"FATAL: Unable to make temporary directory $TMPBASE\"\n        exit 1\n    }\n    # use mktemp to create \"safe\" temporary directories\n    export TMPTEMPLATE=\"${TMPBASE}/ltp-XXXXXXXXXX\"\n    TMP=`mktemp -d $TMPTEMPLATE` || \\\n    {\n        echo \"FATAL: Unable to make temporary directory: $TMP\"\n        exit 1\n    }\n    export TMP\n    # To be invoked by tst_tmpdir()\n    # write to it as user nobody\n    export TMPDIR=$TMP\n\n    trap \"cleanup\" 0\n\n    chmod 777 $TMP || \\\n    {\n      echo \"unable to chmod 777 $TMP ... aborting\"\n      exit 1\n    }\n\n    cd $TMP || \\\n    {\n      echo \"could not cd ${TMP} ... exiting\"\n      exit 1\n    }\n\n    [ -n \"$INSTANCES\" ] && \\\n    {\n      INSTANCES=\"$INSTANCES -O ${TMP}\"\n    }\n\n    # If user does not provide a command file select a default set of testcases\n    # to execute.\n    if [ -z \"$CMDFILES\" ] && [ -z \"$CMDFILEADDR\" ]; then\n\n        SCENARIO_LISTS=\"$LTPROOT/scenario_groups/default\"\n        if [ \"$RUN_NETEST\" -eq 1 ]; then\n            SCENARIO_LISTS=\"$LTPROOT/scenario_groups/network\"\n        fi\n\n        cat <<-EOF >&1\nINFO: no command files were provided. Executing following runtest scenario files:\n`cat $SCENARIO_LISTS | tr '\\012' ' '`\n\nEOF\n        cat_ok_sentinel=$TMP/cat_ok.$$\n        touch \"$cat_ok_sentinel\"\n        cat $SCENARIO_LISTS | while read scenfile; do\n            scenfile=${LTPROOT}/runtest/$scenfile\n            [ -f \"$scenfile\" ] || continue\n\n            cat $scenfile >> \"$TMP/alltests\" || {\n                echo \"FATAL: unable to append to command file\"\n                rm -Rf \"$TMP\"\n                rm -f \"$cat_ok_sentinel\"\n                exit 1\n            }\n        done\n        rm -f \"$cat_ok_sentinel\"\n    fi\n\n    [ -n \"$CMDFILES\" ] && \\\n    {\n        for scenfile in `echo \"$CMDFILES\" | tr ',' ' '`\n        do\n            [ -f \"$scenfile\" ] || scenfile=\"$LTPROOT/runtest/$scenfile\"\n            cat \"$scenfile\" >> ${TMP}/alltests || \\\n            {\n                echo \"FATAL: unable to create command file\"\n                rm -Rf \"$TMP\"\n                exit 1\n            }\n        done\n    }\n\n    [ -n \"$CMDFILEADDR\" ] && \\\n    {\n        wget -q \"${CMDFILEADDR}\" -O ${TMP}/wgetcmdfile\n        if [ $? -ne 0 ]; then\n            echo \"FATAL: error while getting the command file with wget (address $CMDFILEADDR)\"\n            exit 1\n        fi\n        cat \"${TMP}/wgetcmdfile\" >> ${TMP}/alltests || \\\n        {\n            echo \"FATAL: unable to create command file\"\n            exit 1\n        }\n    }\n\n    # If enabled, execute only test cases that match the PATTERN\n    if [ -n \"$TAG_RESTRICT_STRING\" ]\n    then\n        mv -f ${TMP}/alltests ${TMP}/alltests.orig\n\t    grep $TAG_RESTRICT_STRING ${TMP}/alltests.orig > ${TMP}/alltests #Not worth checking return codes for this case\n    fi\n\n    # Blacklist or skip tests if a SKIPFILE was specified with -S\n    if [ -n \"${SKIPFILE}\" ]; then\n        for test_name in $(awk '{print $1}' \"${SKIPFILE}\"); do\n            case \"${test_name}\" in \\#*) continue;; esac\n            sed -i \"/\\<${test_name}\\>/c\\\\${test_name} exit 32;\" alltests\n        done\n    fi\n\n    # check for required users and groups\n    ${LTPROOT}/IDcheck.sh || \\\n    {\n        echo \"WARNING: required users and groups not present\"\n        echo \"WARNING: some test cases may fail\"\n    }\n\n    # display versions of installed software\n    [ -z \"$QUIET_MODE\" ] && \\\n    {\n        ${LTPROOT}/ver_linux || \\\n        {\n            echo \"WARNING: unable to display versions of software installed\"\n            exit 1\n    }\n    }\n\n    set_block_device\n\n    # here even if the user don't specify a big block device, we\n    # also don't create the big block device.\n    if [ -z \"$BIG_DEVICE\" ]; then\n        echo \"no big block device was specified on commandline.\"\n        echo \"Tests which require a big block device are disabled.\"\n        echo \"You can specify it with option -z\"\n    else\n        export LTP_BIG_DEV=$BIG_DEVICE\n        if [ -z \"$BIG_DEVICE_FS_TYPE\" ]; then\n            export LTP_BIG_DEV_FS_TYPE=\"ext2\"\n        else\n            export LTP_BIG_DEV_FS_TYPE=$BIG_DEVICE_FS_TYPE\n        fi\n    fi\n\n    if [ $RUN_REPEATED -gt 1 ]; then # You need to specify at least more than 1 sequential run, else it runs default\n         echo \"PAN will run these test cases $RUN_REPEATED times.....\"\n         echo \"Test Tags will be Prepended with ITERATION NO.s.....\"\n         inc=1\n         sed -e '/^$/ d' -e 's/^[ ,\\t]*//' -e '/^#/ d' < ${TMP}/alltests > ${TMP}/alltests.temp ##This removes all newlines, leading spaces, tabs, #\n         sed 's/^[0-9,a-z,A-Z]*/'\"$inc\"'_ITERATION_&/' < ${TMP}/alltests.temp > ${TMP}/alltests ## .temp is kept as Base file\n         while [ $inc -lt $RUN_REPEATED ] ; do\n               inc=`expr $inc + 1`\n               sed 's/^[0-9,a-z,A-Z]*/'\"$inc\"'_ITERATION_&/' < ${TMP}/alltests.temp >> ${TMP}/alltests #Keep appending with Iteration No.s\n         done\n    fi\n\n    if [ \"$RANDOMRUN\" != \"0\" ]; then\n        sort -R ${TMP}/alltests -o ${TMP}/alltests\n    fi\n\n    [ ! -z \"$QUIET_MODE\" ] && { echo \"INFO: Test start time: $(date)\" ; }\n    PAN_COMMAND=\"${LTPROOT}/bin/ltp-pan $QUIET_MODE $NO_KMSG -e -S $INSTANCES $DURATION -a ${ZOOFILE} \\\n    -n $$ $PRETTY_PRT -f ${TMP}/alltests $LOGFILE $OUTPUTFILE $FAILCMDFILE $TCONFCMDFILE\"\n    echo \"COMMAND:    $PAN_COMMAND\"\n    if [ ! -z \"$TAG_RESTRICT_STRING\" ] ; then\n      echo \"INFO: Restricted to $TAG_RESTRICT_STRING\"\n    fi\n    #$PAN_COMMAND #Duplicated code here, because otherwise if we fail, only \"PAN_COMMAND\" gets output\n\n    ## Display the Output/Log/Failed/HTML file names here\n    printf \"LOG File: \"\n    echo $LOGFILE | cut -b4-\n\n    if [ \"$OUTPUTFILE\" ]; then\n       printf \"OUTPUT File: \"\n       echo $OUTPUTFILE | cut -b4-\n    fi\n\n    printf \"FAILED COMMAND File: \"\n    echo $FAILCMDFILE | cut -b4-\n\n   printf \"TCONF COMMAND File: \"\n   echo $TCONFCMDFILE | cut -b4-\n\n    if [ \"$HTMLFILE\" ]; then\n       echo \"HTML File: $HTMLFILE\"\n    fi\n\n    echo \"Running tests.......\"\n    test_start_time=$(date)\n\n\t# User wants testing with Kernel Fault Injection\n\tif [ $INJECT_KERNEL_FAULT ] ; then\n\t\t#See if Debugfs is mounted, and\n\t\t#Fault Injection Framework available through Debugfs\n\t\tuse_faultinjection=true\n\t\tfor debug_subdir in \\\n\t\t\tfail_io_timeout \\\n\t\t\tfail_make_request \\\n\t\t\tfail_page_alloc \\\n\t\t\tfailslab \\\n\t\t; do\n\t\t\tif [ -d \"/sys/kernel/debug/$debug_subdir\" ]\n\t\t\tthen\n\t\t\t\tuse_faultinjection=true\n\t\t\t\tbreak\n\t\t\tfi\n\t\tdone\n\t\tif $use_faultinjection; then\n\t\t\t#If at least one of the Framework is available\n\t\t\t#Go ahead to Inject Fault & Create required\n\t\t\t#Command Files for LTP run\n\t\t\techo Running tests with Fault Injection Enabled in the Kernel...\n\t\t\tawk -v LOOPS=$INJECT_FAULT_LOOPS_PER_TEST \\\n\t\t\t\t-v PERCENTAGE=$INJECT_KERNEL_FAULT_PERCENTAGE \\\n\t\t\t\t-f ${LTPROOT}/bin/create_kernel_faults_in_loops_and_probability.awk \\\n\t\t\t\t${TMP}/alltests > ${TMP}/alltests.tmp\n\t\t\tcp ${TMP}/alltests.tmp ${TMP}/alltests\n\t\t\trm -rf ${TMP}/alltests.tmp\n\t\telse\n\t\t\techo Fault Injection not enabled in the Kernel..\n\t\t\techo Running tests normally...\n\t\tfi\n\tfi\n\n\t## Valgrind Check will work only when Kernel Fault Injection is not expected,\n\t## We do not want to test Faults when valgrind is running\n\tif [ $VALGRIND_CHECK ]; then\n\t\tif [ ! $INJECT_KERNEL_FAULT ]; then\n\t\t\twhich valgrind || VALGRIND_CHECK_TYPE=XYZ\n\t\t\tcase $VALGRIND_CHECK_TYPE in\n\t\t\t[1-3])\n\t\t\t\tawk -v CHECK_LEVEL=$VALGRIND_CHECK_TYPE \\\n\t\t\t\t\t-f ${LTPROOT}/bin/create_valgrind_check.awk \\\n\t\t\t\t\t${TMP}/alltests $VALGRIND_CHECK_TYPE > \\\n\t\t\t\t\t${TMP}/alltests.tmp\n\t\t\t\tcp ${TMP}/alltests.tmp ${TMP}/alltests\n\t\t\t\trm -rf ${TMP}/alltests.tmp\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\techo \"Invalid Memory Check Type, or, Valgrind is not available\"\n\t\t\t\t;;\n\t\t\tesac\n\t\tfi\n\tfi\n\n\tif [ $ALT_DMESG_OUT -eq 1 ] ; then\n\t\t#We want to print dmesg output for each test,lets do the trick inside the script\n\t\techo Enabling dmesg output logging for each test...\n\t\tawk -v DMESG_DIR=$DMESG_DIR \\\n\t\t\t-f ${LTPROOT}/bin/create_dmesg_entries_for_each_test.awk \\\n\t\t\t${TMP}/alltests > ${TMP}/alltests.tmp\n\t\tcp ${TMP}/alltests.tmp ${TMP}/alltests\n\t\trm -rf ${TMP}/alltests.tmp\n\tfi\n    # Some tests need to run inside the \"bin\" directory.\n    cd \"${LTPROOT}/testcases/bin\"\n    \"${LTPROOT}/bin/ltp-pan\" $QUIET_MODE $NO_KMSG -e -S $INSTANCES $DURATION -a ${ZOOFILE} -n $$ $PRETTY_PRT -f ${TMP}/alltests $LOGFILE $OUTPUTFILE $FAILCMDFILE $TCONFCMDFILE\n\n    if [ $? -eq 0 ]; then\n      echo \"INFO: ltp-pan reported all tests PASS\"\n      VALUE=0\n      export LTP_EXIT_VALUE=0;\n    else\n      echo \"INFO: ltp-pan reported some tests FAIL\"\n      VALUE=1\n      export LTP_EXIT_VALUE=1;\n    fi\n    cd ..\n    echo \"LTP Version: $version_date\"\n\n\t# $DMESG_DIR is used to cache messages obtained from dmesg after a test run.\n\t# Proactively reap all of the 0-byte files in $DMESG_DIR as they have zero value\n\t# and only clutter up the filesystem.\n\n\tif [ $ALT_DMESG_OUT -eq 1 ] ; then\n\t\tif ! find \"$DMESG_DIR\" -size 0 -exec rm {} + ; then\n\t\t\techo \"cd to $DMESG_DIR failed: $?\"\n\t\tfi\n\t\tif [ -n \"$(ls \"$DMESG_DIR\")\" ] ; then\n\t\t\techo \"Kernel messages were generated for LTP tests $version_date\"\n\t\telse\n\t\t\techo \"No Kernel messages were generated for LTP tests $version_date\"\n\t\tfi\n\tfi\n\n    if [ \"$ALT_HTML_OUT\" -eq 1 ] ; then        #User wants the HTML output to be created, it then needs to be generated\n       export LTP_VERSION=$version_date\n       export TEST_START_TIME=\"$test_start_time\"\n       export TEST_END_TIME=\"$(date)\"\n       OUTPUT_FILE=`echo $OUTPUTFILE | cut -c4-`\n       LOGS_DIRECTORY=\"$LTPROOT/results\"\n       export TEST_OUTPUT_DIRECTORY=\"$LTPROOT/output\"\n       export TEST_LOGS_DIRECTORY=$LOGS_DIRECTORY\n       echo \"Generating HTML Output.....!!\"\n       ( perl $LTPROOT/bin/genhtml.pl $LTPROOT/bin/html_report_header.txt test_start test_end test_output execution_status $OUTPUT_FILE  > $HTMLFILE; )\n       echo \"Generated HTML Output.....!!\"\n       echo \"Location: $HTMLFILE\";\n\n    fi\n\n    if [ \"$ALT_EMAIL_OUT\" -eq 1 ] ; then                    ## User wants reports to be e-mailed\n        TAR_FILE_NAME=LTP_RUN_$version_date$DEFAULT_FILE_NAME_GENERATION_TIME.tar\n        if [ \"$HTMLFILE_NAME\" ] ; then                      ## HTML file Exists\n            if [ \"$ALT_HTML_OUT\" -ne 1 ] ; then             ## The HTML file path is absolute and not $LTPROOT/output\n                mkdir -p $LTPROOT/output                    ## We need to create this Directory\n                cp $HTMLFILE_NAME $LTPROOT/output/\n            fi\n        fi\n        if [ \"$OUTPUTFILE_NAME\" ] ; then                    ## Output file exists\n            if [ \"$ALT_DIR_OUT\" -ne 1 ] ; then              ## The Output file path is absolute and not $LTPROOT/output\n                mkdir -p $LTPROOT/output                    ## We need to create this Directory\n                cp $OUTPUTFILE_NAME $LTPROOT/output/\n            fi\n        fi\n        if [ \"$LOGFILE_NAME\" ] ; then                       ## Log file exists\n            if [ \"$ALT_DIR_RES\" -ne 1 ] ; then              ## The Log file path is absolute and not $LTPROOT/results\n                mkdir -p $LTPROOT/results                   ## We need to create this Directory\n                cp $LOGFILE_NAME $LTPROOT/results/\n            fi\n        fi\n        if [ -d $LTPROOT/output ] ; then\n            tar -cf  ./$TAR_FILE_NAME $LTPROOT/output\n            if [ $? -eq 0 ]; then\n                echo \"Created TAR File: ./$TAR_FILE_NAME successfully, added $LTPROOT/output\"\n            else\n                echo \"Cannot Create TAR File: ./$TAR_FILE_NAME for adding $LTPROOT/output\"\n            fi\n        fi\n        if [ -d $LTPROOT/results ] ; then\n            tar -uf ./$TAR_FILE_NAME $LTPROOT/results\n            if [ $? -eq 0 ]; then\n                echo \"Updated TAR File: ./$TAR_FILE_NAME successfully, added $LTPROOT/results\"\n            else\n                echo \"Cannot Update TAR File: ./$TAR_FILE_NAME for adding $LTPROOT/results\"\n            fi\n        fi\n        if [ -e $LTPROOT/nohup.out ] ; then                 ## If User would have Chosen nohup to do ltprun\n            tar -uf ./$TAR_FILE_NAME $LTPROOT/nohup.out\n            if [ $? -eq 0 ]; then\n                echo \"Updated TAR File: ./$TAR_FILE_NAME successfully, added $LTPROOT/nohup.out\"\n            else\n                echo \"Cannot Update TAR File: ./$TAR_FILE_NAME for adding $LTPROOT/nohup.out\"\n            fi\n        fi\n        gzip ./$TAR_FILE_NAME                               ## gzip this guy\n        if [ $? -eq 0 ]; then\n            echo \"Gunzipped TAR File: ./$TAR_FILE_NAME\"\n        else\n            echo \"Cannot Gunzip TAR File: ./$TAR_FILE_NAME\"\n        fi\n        if which mutt >/dev/null 2>&1; then\n            echo \"Starting mailing reports to: $EMAIL_TO, file: ./$TAR_FILE_NAME.gz\"\n            mutt -a ./$TAR_FILE_NAME.gz -s \"LTP Reports on $test_start_time\" -- $EMAIL_TO < /dev/null\n            if [ $? -eq 0 ]; then\n                echo \"Reports Successfully mailed to: $EMAIL_TO\"\n            else\n                echo \"Reports cannot be mailed to: $EMAIL_TO\"\n            fi\n        else ## Use our Ageold mail program\n            echo \"Starting mailing reports to: $EMAIL_TO, file: ./$TAR_FILE_NAME.gz\"\n            uuencode ./$TAR_FILE_NAME.gz $TAR_FILE_NAME.gz | mail  $EMAIL_TO -s \"LTP Reports on $test_start_time\"\n            if [ $? -eq 0 ]; then\n                echo \"Reports Successfully mailed to: $EMAIL_TO\"\n            else\n                echo \"Reports cannot be mailed to: $EMAIL_TO\"\n            fi\n        fi\n    fi\n\n    [ ! -z \"$QUIET_MODE\" ] && { echo \"INFO: Test end time: $(date)\" ; }\n\n    [ \"$GENLOAD\" -eq 1 ] && { killall -9 genload  >/dev/null 2>&1; }\n    [ \"$NETPIPE\" -eq 1 ] && { killall -9 NPtcp  >/dev/null 2>&1; }\n\n    [ \"$ALT_DIR_OUT\" -eq 1 ] || [ \"$ALT_DIR_RES\" -eq 1 ] && \\\n    {\n    cat <<-EOF >&1\n\n       ###############################################################\n\n            Done executing testcases.\n            LTP Version:  $version_date\n       ###############################################################\n\n\tEOF\n    }\n\n    deprecated\n\n    exit $VALUE\n}\n\nset_block_device()\n{\n    if [ -n \"$DEVICE\" ]; then\n        export LTP_DEV=$DEVICE\n    fi\n}\n\ncleanup()\n{\n    [ \"$LOOP_DEV\" ] && losetup -d $LOOP_DEV\n    rm -rf ${TMP}\n}\n\n\nLTP_SCRIPT=\"$(basename $0)\"\n\nif [ \"$LTP_SCRIPT\" = \"runltp\" ]; then\n    setup\n    main \"$@\"\nfi\n"
        },
        {
          "name": "runtest",
          "type": "tree",
          "content": null
        },
        {
          "name": "scenario_groups",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "testcases",
          "type": "tree",
          "content": null
        },
        {
          "name": "testscripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        },
        {
          "name": "ver_linux",
          "type": "blob",
          "size": 4.0146484375,
          "content": "#!/bin/sh\n# Before running this script please ensure that your PATH is\n# typical as you use for compilation/istallation. I use\n# /bin /sbin /usr/bin /usr/sbin /usr/local/bin, but it may\n# differ on your system.\n\nPATH=/sbin:/usr/sbin:/bin:/usr/bin:$PATH\n\ntst_cmd_available()\n{\n\tif type command > /dev/null 2>&1; then\n\t\tcommand -v $1 > /dev/null 2>&1 || return 1\n\telse\n\t\twhich $1 > /dev/null 2>&1\n\t\tif [ $? -eq 0 ]; then\n\t\t\treturn 0\n\t\telse\n\t\t\treturn 1\n\t\tfi\n\tfi\n}\n\ntst_cmd_run()\n{\n\tlocal cmd=\"$1\"\n\tshift\n\ttst_cmd_available $cmd && eval \"$cmd $@\"\n}\n\nis_enabled()\n{\n\t[ -f \"$1\" ] && [ \"$(cat $1)\" = \"Y\" -o \"$(cat $1)\" = \"1\" ]\n}\n\necho 'If some fields are empty or look unusual you may have an old version.'\necho 'Compare to the current minimal requirements in Documentation/Changes.'\n\necho\necho \"`ls /etc/*release 2> /dev/null`\"\ncat /etc/*release 2> /dev/null\nif [ $? = 1 ]; then\n   echo \"`ls /usr/lib/*release 2> /dev/null`\"\n   cat /usr/lib/*release 2> /dev/null\nfi\nif [ $? = 1 ]; then\n   echo '/etc/issue:'\n   cat /etc/issue 2> /dev/null\nfi\nif [ $? = 1 ]; then\n\techo 'lsb_release -a'\n\tlsb_release -a 2> /dev/null\nfi\n\necho\necho 'uname:'\nuname -a\n\necho\necho '/proc/cmdline'\ncat /proc/cmdline\n\necho\n\necho \"Gnu C                 \" `gcc --version 2>/dev/null | head -n 1`\necho \"Clang                 \" `clang --version 2>/dev/null | head -n 1`\n\nmake --version 2>&1 | awk -F, '{print $1}' | awk \\\n      '/GNU Make/{print \"Gnu make              \",$NF}'\n\nld -v 2>&1 | awk -F\\) '{print $1}' | awk \\\n      '/BFD/{print \"binutils              \",$NF}'\n\nmkswap -V 2>&1 | awk '{print \"util-linux            \", $NF}'\n\nmount --version 2>&1 | awk -F\\- '{print \"mount                 \", $NF}'\n\ninsmod -V  2>&1 | awk 'NR==1 {print \"modutils              \",$NF}'\n\ntune2fs 2>&1 | grep \"^tune2fs\" | sed 's/,//' |  awk \\\n'NR==1 {print \"e2fsprogs             \", $2}'\n\nreiserfsck 2>&1 | grep reiserfsprogs | awk \\\n'NR==1{print \"reiserfsprogs         \", $NF}'\n\ncardmgr -V 2>&1| grep version | awk \\\n'NR==1{print \"pcmcia-cs             \", $3}'\n\npppd --version 2>&1| grep version | awk \\\n'NR==1{print \"PPP                   \", $3}'\n\nisdnctrl 2>&1 | grep version | awk \\\n'NR==1{print \"isdn4k-utils          \", $NF}'\n\nprintf \"Linux C Library        $($(ldd /bin/sh | \\\nawk '/libc/{print $3}') 2>&1 | \\\ngrep -i -e libc.*version -e musl.*libc -e ^version)\\n\"\n\nldd -v > /dev/null 2>&1 && ldd -v || ldd --version |head -n 1 | awk \\\n'NR==1{print \"Dynamic linker (ldd)  \", $NF}'\n\nls -l /usr/lib/lib{g,stdc}++.so  2>/dev/null | awk -F. \\\n       '{print \"Linux C++ Library      \" $4\".\"$5\".\"$6}'\n\nps --version 2>&1 | awk 'NR==1{print \"Procps                \", $NF}'\n\nifconfig --version 2>&1 | grep tools | awk \\\n'NR==1{print \"Net-tools             \", $NF}'\n\nip -V 2>&1 | awk \\\n'NR==1{print \"iproute2              \", $NF}'\n\nping -V 2>&1 | awk \\\n'NR==1{print \"iputils               \", $NF}'\n\nethtool --version | grep version 2>&1 | awk \\\n'NR==1{print \"ethtool               \", $NF}'\n\n# Kbd needs 'loadkeys -h',\nloadkeys -h 2>&1 | awk \\\n'(NR==1 && ($3 !~ /option/)) {print \"Kbd                   \", $3}'\n\n# while console-tools needs 'loadkeys -V'.\nloadkeys -V 2>&1 | awk \\\n'(NR==1 && ($2 ~ /console-tools/)) {print \"Console-tools         \", $3}'\n\nexpr --v 2>&1 | awk 'NR==1{print \"Sh-utils              \", $NF}'\n\nif [ -e /proc/modules ]; then\n    X=`cat /proc/modules | sed -e \"s/ .*$//\"`\n    echo \"Modules Loaded         \"$X\nfi\n\necho\necho 'cpuinfo:'\ntst_cmd_run lscpu || cat /proc/cpuinfo\n\necho\necho 'free reports:'\nfree\n\necho\necho 'memory (/proc/meminfo):'\ncat /proc/meminfo\n\necho\necho 'available filesystems:'\necho $(cut -f2 /proc/filesystems | sort -u)\n\necho\necho 'mounted filesystems (/proc/mounts):'\ncat /proc/mounts\n\necho\necho 'mounted filesystems (df):'\nif `df -hT >/dev/null 2>/dev/null`; then\n\tdf -hT\nelse\n\tdf\nfi\n\necho\necho 'tainted (/proc/sys/kernel/tainted):'\ncat /proc/sys/kernel/tainted\n\necho\nif is_enabled /sys/module/apparmor/parameters/enabled; then\n\techo 'AppArmor enabled'\n\ttst_cmd_run aa-status\nelse\n\techo 'AppArmor disabled'\nfi\n\necho\n\nif ! tst_cmd_run sestatus; then\n\tprintf 'SELinux mode: '\n\ttst_cmd_run getenforce || echo 'unknown'\nfi\n"
        }
      ]
    }
  ]
}