{
  "metadata": {
    "timestamp": 1736709879530,
    "page": 365,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "rizinorg/rizin",
      "stars": 2766,
      "defaultBranch": "dev",
      "files": [
        {
          "name": ".appveyor.yml",
          "type": "blob",
          "size": 5.6669921875,
          "content": "# Version format\nversion: 'git.{build}'\n\n# Skip Github tags\nskip_tags: true\n\n\n# Environment variables\nenvironment:\n  NINJA_URL: https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-win.zip\n  VSVARSALLPATH2017: 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat'\n  VSVARSALLPATH2019: 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat'\n  VSVARSALLPATH2022: 'C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat'\n\n  matrix:\n    # VS2017 64\n    - builder: vs2017_64\n      PYTHON: 'C:\\\\Python37-x64'\n      INNO_SETUP: 'C:\\\\Program Files (x86)\\\\Inno Setup 5'\n      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017\n      BUILD_DIR: build\n      RUN_TESTS: false\n      TEST_INCLUDE_HEADERS_CPP: false\n    # VS2022 64\n    - builder: vs2022_64\n      PYTHON: 'C:\\\\Python38-x64'\n      INNO_SETUP: 'C:\\\\Program Files (x86)\\\\Inno Setup 6'\n      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2022\n      BUILD_DIR: build\n      RUN_TESTS: true\n      TEST_INCLUDE_HEADERS_CPP: true\n    # VS2017 64 (Dynamic linking)\n    - builder: vs2017_64_dyn\n      PYTHON: 'C:\\\\Python37'\n      INNO_SETUP: 'C:\\\\Program Files (x86)\\\\Inno Setup 5'\n      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017\n      BUILD_DIR: build\n      RUN_TESTS: false\n      TEST_INCLUDE_HEADERS_CPP: false\n    # Clang-cl 64 (Dynamic linking)\n    - builder: clang_cl_64_dyn\n      PYTHON: 'C:\\\\Python38'\n      INNO_SETUP: 'C:\\\\Program Files (x86)\\\\Inno Setup 6'\n      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019\n      BUILD_DIR: build\n      RUN_TESTS: true\n      TEST_INCLUDE_HEADERS_CPP: false\n\nonly_commits:\n  files:\n    - '**/*.c'\n    - '**/*.h'\n    - '**/*.in'\n    - '**/*.inc'\n    - '**/meson.build'\n    - 'subprojects/'\n    - 'test/'\n    - '.appveyor.yml'\n\n# Init\ninit:\n  # Build dependent custom commands\n  - cmd: \"%init_command%\"\n\n# Required software for building\ninstall:\n  # Update environment variables\n  - ps: $env:RZ_VERSION = (& (Join-Path $env:PYTHON python.exe) sys\\\\version.py )\n  - ps: $env:DIST_FOLDER = \"rizin-$env:builder-$env:RZ_VERSION\"\n  - ps: $env:ARTIFACT_ZIP = \"$env:DIST_FOLDER.zip\"\n  # Download required packages\n  - cmd: if defined BUILD_DIR ( %PYTHON%\\python.exe -m pip install meson ninja PyYAML tomli)\n\n# Build scripts\nbuild_script:\n  - appveyor AddMessage \"Compiling rizin %RZ_VERSION% (%builder%)\"\n\n  - cmd: if %builder% == vs2017_64 ( set \"PATH=C:\\mingw\\bin;C:\\mingw\\msys\\1.0\\bin;%PYTHON%;%PATH%\" && call \"%VSVARSALLPATH2017%\" x64 && %PYTHON%\\Scripts\\meson setup --buildtype=release --prefix=\"%CD%\\%DIST_FOLDER%\" --default-library=static -Db_vscrt=static_from_buildtype build && %PYTHON%\\Scripts\\ninja -C build install && 7z a %ARTIFACT_ZIP% %DIST_FOLDER% )\n\n  - cmd: if %builder% == vs2022_64 ( choco install mingw && refreshenv && set \"PATH=C:\\mingw\\bin;C:\\mingw\\msys\\1.0\\bin;%PYTHON%;%PATH%\" && call \"%VSVARSALLPATH2022%\" x64 && %PYTHON%\\Scripts\\meson setup --buildtype=release --prefix=\"%CD%\\%DIST_FOLDER%\" --default-library=static -Db_vscrt=static_from_buildtype build && %PYTHON%\\Scripts\\ninja -C build install && 7z a %ARTIFACT_ZIP% %DIST_FOLDER% )\n\n  - cmd: if %builder% == vs2017_64_dyn ( set \"PATH=C:\\mingw\\bin;C:\\mingw\\msys\\1.0\\bin;%PYTHON%;%PATH%\" && call \"%VSVARSALLPATH2017%\" x64 && %PYTHON%\\Scripts\\meson setup --buildtype=release --prefix=\"%CD%\\%DIST_FOLDER%\" build && %PYTHON%\\Scripts\\ninja -C build install && 7z a %ARTIFACT_ZIP% %DIST_FOLDER% )\n\n  - cmd: if %builder% == clang_cl_64_dyn ( set \"PATH=C:\\mingw\\bin;C:\\mingw\\msys\\1.0\\bin;%PYTHON%;%PATH%\" && call \"%VSVARSALLPATH2019%\" x64 && set CC=clang-cl && %PYTHON%\\Scripts\\meson setup --buildtype=release --prefix=\"%CD%\\%DIST_FOLDER%\" build && %PYTHON%\\Scripts\\ninja -C build install && 7z a %ARTIFACT_ZIP% %DIST_FOLDER% )\n\nfor:\n  # Run tests only conditionally\n  - matrix:\n      only:\n        - RUN_TESTS: true\n\n    test_script:\n      - if %builder% == vs2017_64 ( call \"%VSVARSALLPATH2017%\" x64 )\n      - if %builder% == vs2022_64 ( call \"%VSVARSALLPATH2022%\" x64 )\n      - if %builder% == vs2017_64_dyn ( call \"%VSVARSALLPATH2017%\" x64 )\n      - if %builder% == clang_cl_64_dyn ( call \"%VSVARSALLPATH2019%\" x64 )\n      - set PATH=%APPVEYOR_BUILD_FOLDER%\\%DIST_FOLDER%\\bin;C:\\Python38-x64;C:\\msys64\\mingw64\\bin;%PATH%\n      - echo %PATH%\n      - where rizin\n      - rizin -v\n      - copy C:\\Python38-x64\\python.exe C:\\Python38-x64\\python3.exe\n      - python3 -m pip install \"git+https://github.com/rizinorg/rz-pipe#egg=rzpipe&subdirectory=python\"\n      - python3 -m pip install requests\n      - cd test\n      - git clone -q --depth 1 -c core.symlinks=true https://github.com/rizinorg/rizin-testbins bins\n      - cd ..\n      - \"%PYTHON%\\\\Scripts\\\\meson test -C build -t 10 --print-errorlogs\"\n      - cd test\n      - rz-test -o results.json -L db\n      - cd ..\n\n  # Include header files from C++\n  - matrix:\n      only:\n        - TEST_INCLUDE_HEADERS_CPP: true\n\n    test_script:\n      - if %builder% == vs2017_64 ( call \"%VSVARSALLPATH2017%\" x64 )\n      - if %builder% == vs2022_64 ( call \"%VSVARSALLPATH2022%\" x64 )\n      - if %builder% == vs2017_64_dyn ( call \"%VSVARSALLPATH2017%\" x64 )\n      - if %builder% == clang_cl_64_dyn ( call \"%VSVARSALLPATH2019%\" x64 )\n      - set PATH=%APPVEYOR_BUILD_FOLDER%\\%DIST_FOLDER%\\bin;C:\\Python38-x64;C:\\msys64\\mingw64\\bin;%PATH%\n      - echo %PATH%\n      - where rizin\n      - rizin -v\n      - copy C:\\Python38-x64\\python.exe C:\\Python38-x64\\python3.exe\n      - \"%PYTHON%\\\\Scripts\\\\meson setup build-cpp-test ./test/unit/cpp\"\n      - \"%PYTHON%\\\\Scripts\\\\meson compile -C build-cpp-test\"\n      - \"%PYTHON%\\\\Scripts\\\\meson test -C build-cpp-test --print-errorlogs\"\n\n# Artifacts\nartifacts:\n  # Binaries\n  - path: \"%ARTIFACT_ZIP%\"\n  # Test results\n  - path: test/results.json\n"
        },
        {
          "name": ".builds",
          "type": "tree",
          "content": null
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 1.07421875,
          "content": "Language: Cpp\nMaxEmptyLinesToKeep: 1\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesInContainerLiterals: true\nBasedOnStyle: LLVM\nContinuationIndentWidth: 8\nIndentCaseLabels: false\nIndentFunctionDeclarationAfterType: false\nIndentWidth: 8\nUseTab: ForContinuationAndIndentation\nColumnLimit: 0\nBreakBeforeBraces: Attach\nBreakBeforeTernaryOperators: true\nAllowShortIfStatementsOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: true\nAllowShortFunctionsOnASingleLine: Inline\nAllowShortLoopsOnASingleLine: false\nAlignAfterOpenBracket: DontAlign\nAlignEscapedNewlines: DontAlign\nAlignConsecutiveMacros: true\nAlignTrailingComments: false\nAlignOperands: false\nCpp11BracedListStyle: false\nForEachMacros: ['rz_list_foreach', 'rz_list_foreach_enum', 'rz_list_foreach_safe', 'rz_vector_foreach', 'rz_vector_foreach_prev', 'rz_vector_enumerate', 'rz_pvector_foreach', 'rz_pvector_enumerate', 'rz_rbtree_foreach', 'rz_interval_tree_foreach', 'rz_skiplist_foreach', 'graph_foreach_anode']\nSortIncludes: false\nRequiresClausePosition: SingleLine\nTypenameMacros: ['HT_', 'Ht_', 'HtName_']\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.4951171875,
          "content": ".git\n.cache\n.vscode\n.idea\n.ccls-cache/\n.vs\ncscope.out\ncompile_commands.json\nclang-log/\n.#*\n*._d\n*._o\n*.[ado]\n*.so\n*.pc\n*.sdb\n*.dylib\n*.dll\n*.lib\n*.obj\n*.ilk\n*.dSYM\nsupported.*\nconfig.mk\nplugins.cfg\nlangs.cfg\n.test.c\n.*.swp\n.*.swo\n*.un~\n*.pdb\n*.lib\n*.ilk\n**/*.o\nbuild*\ntest/.tmp/*\nsubprojects/capstone-*/\n!subprojects/capstone-*.wrap\nsubprojects/libzip-*/\nsubprojects/lz4-*/\nsubprojects/packagecache/\nsubprojects/sdb/\nsubprojects/tree-sitter-*/\n!subprojects/tree-sitter-*.wrap\nsubprojects/zlib-*/\nDockerfile\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2099609375,
          "content": "subprojects/rizin-shell-parser/src/grammar.json linguist-generated=true\nsubprojects/rizin-shell-parser/src/node-types.json linguist-generated=true\nsubprojects/rizin-shell-parser/src/parser.c linguist-generated=true\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.1025390625,
          "content": "clang-log/\n.clang_complete\n.tmp-format\n.#*\n*._d\n*._o\n*.[ado]\n*.so\n*.pc\n*.sdb\n*.dylib\n*.dll\n*.lib\n*.obj\n*.ilk\n*.dSYM\nsupported.*\nconfig.mk\nplugins.cfg\nlangs.cfg\n.test.c\n.*.swp\n.*.swo\n*.un~\n*.pdb\n*.lib\n*.ilk\nbinrz/rz-agent/rz-agent\nbinrz/rz-agent/rz-agent.exe\nbinrz/rz-test/rz-test\nbinrz/rz-test/rz-test.exe\nbinrz/rz-bin/rz-bin\nbinrz/rz-bin/rz-bin.exe\nbinrz/rizin/rizin\nbinrz/rizin/rizin.exe\nbinrz/rz-diff/rz-diff\nbinrz/rz-diff/rz-diff.exe\nbinrz/rz-find/rz-find\nbinrz/rz-find/rz-find.exe\nbinrz/rz-gg/rz-gg\nbinrz/rz-gg/rz-gg.exe\nbinrz/rz-hash/rz-hash\nbinrz/rz-hash/rz-hash.exe\nbinrz/ranal2/ranal2\nbinrz/ranal2/ranal2.exe\nbinrz/rz-run/rz-run\nbinrz/rz-run/rz-run.exe\nbinrz/rz-asm/rz-asm\nbinrz/rz-asm/rz-asm.exe\nbinrz/rz-ax/rz-ax\nbinrz/rz-ax/rz-ax.exe\nbinrz/rz-sign/rz-sign\nbinrz/rz-sign/rz-sign.exe\nbinrz/*/_CodeSignature/*\nbuild*/\nconfig-user.mk\nlibrz/bin/d/dll/dll\nlibrz/config.h\nlibrz/include/rz_userconf.h\nlibrz/include/rz_version.h\nlibrz/include/rz_version.h.tmp\nsubprojects/spp/config.h\nsys/travis/*.txt\nsys/.mark_python-deps\nsys/.mark_swig\nsys/_work\nrizin-bindings\nrizin-regressions\nrizin-w32-*\nrizin-w64-*\ntags\n**/GPATH\n**/GRTAGS\n**/GTAGS\n**/.gdb_history\n.lvimrc\n.nconfig.tmp\n.ycm_extra_conf.py\n.ycm_extra_conf.pyc\n.kdev4/*\n*.kdev4\nrizin-*.zip\n# Ignore meson related files\n./bin\nninja.exe\n.DS_Store\ninfer_out\ninfer-out/\ncscope.out\nr2-static/*\ncompile_commands.json\nlibrz/flag/d/tags.rz\n# CLion\n.idea/\n# VSCode\n.vscode/\nCMakeLists.txt\n*.cmake\ncmake-build-*\n# Snap packaging\n/parts\n/prime\n/stage\n/snap\n/*.snap\n# doxygen autogen\ndoc/doxygen/html\n# Python\n__pycache__\n# Dynamic docker building folder to minimize docker context\n.docker_alpine\n.ccls-cache/\nvgcore.*\nlibrz/include/sdb\npeda-session-*\n/.vs\n.cache/\ntest/.tmp/*\ntest/.sync_disk_db\nsubprojects/capstone-*/\nsubprojects/pcre2*/\nsubprojects/libzip-*/\nsubprojects/lz4-*/\nsubprojects/packagecache/\nsubprojects/sdb/\nsubprojects/tree-sitter-*/\nsubprojects/rizin-grammar-*/\nsubprojects/zlib-*/\nsubprojects/sigdb/\nsubprojects/libdemangle/\nsubprojects/libmspack/\nsubprojects/blake3/\nsubprojects/xz-*/\nsubprojects/zstd-*/\nsubprojects/softflo*/\ndist/windows/Output\n# Core files generated by OpenBSD\n*.core\n"
        },
        {
          "name": ".lgtm.yml",
          "type": "blob",
          "size": 0.384765625,
          "content": "extraction:\n    cpp:\n        prepare:\n            packages:\n                - python3-pip\n                - python3-setuptools\n                - python3-wheel\n        after_prepare:\n            - pip3 install meson\n            - export PATH=\"$HOME/.local/bin/:$PATH\"\n        configure:\n            command: meson build\n        index:\n            build_command:\n                - ninja -C build\n"
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.052734375,
          "content": "subprojects/rizin-shell-parser/bindings/node/index.js\n"
        },
        {
          "name": ".pylintrc",
          "type": "blob",
          "size": 15.59375,
          "content": "[MASTER]\n\n# A comma-separated list of package or module names from where C extensions may\n# be loaded. Extensions are loading into the active Python interpreter and may\n# run arbitrary code.\nextension-pkg-whitelist=\n\n# Specify a score threshold to be exceeded before program exits with error.\nfail-under=10.0\n\n# Add files or directories to the blacklist. They should be base names, not\n# paths.\nignore=CVS\n\n# Add files or directories matching the regex patterns to the blacklist. The\n# regex matches against base names, not paths.\nignore-patterns=\n\n# Python code to execute, usually for sys.path manipulation such as\n# pygtk.require().\n#init-hook=\n\n# Use multiple processes to speed up Pylint. Specifying 0 will auto-detect the\n# number of processors available to use.\njobs=1\n\n# Control the amount of potential inferred values when inferring a single\n# object. This can help the performance when dealing with large functions or\n# complex, nested conditions.\nlimit-inference-results=100\n\n# List of plugins (as comma separated values of python module names) to load,\n# usually to register additional checkers.\nload-plugins=\n\n# Pickle collected data for later comparisons.\npersistent=yes\n\n# When enabled, pylint would attempt to guess common misconfiguration and emit\n# user-friendly hints instead of false-positive error messages.\nsuggestion-mode=yes\n\n# Allow loading of arbitrary C extensions. Extensions are imported into the\n# active Python interpreter and may run arbitrary code.\nunsafe-load-any-extension=no\n\n\n[MESSAGES CONTROL]\n\n# Only show warnings with the listed confidence levels. Leave empty to show\n# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED.\nconfidence=\n\n# Disable the message, report, category or checker with the given id(s). You\n# can either give multiple identifiers separated by comma (,) or put this\n# option multiple times (only on the command line, not in the configuration\n# file where it should appear only once). You can also use \"--disable=all\" to\n# disable everything first and then reenable specific checks. For example, if\n# you want to run only the similarities checker, you can use \"--disable=all\n# --enable=similarities\". If you want to run only the classes checker, but have\n# no Warning level messages displayed, use \"--disable=all --enable=classes\n# --disable=W\".\ndisable=C0103,C0114,C0115,C0116,E0401,R0902,C0209\n\n# Enable the message, report, category or checker with the given id(s). You can\n# either give multiple identifier separated by comma (,) or put this option\n# multiple time (only on the command line, not in the configuration file where\n# it should appear only once). See also the \"--disable\" option for examples.\nenable=c-extension-no-member\n\n\n[REPORTS]\n\n# Python expression which should return a score less than or equal to 10. You\n# have access to the variables 'error', 'warning', 'refactor', and 'convention'\n# which contain the number of messages in each category, as well as 'statement'\n# which is the total number of statements analyzed. This score is used by the\n# global evaluation report (RP0004).\nevaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)\n\n# Template used to display messages. This is a python new-style format string\n# used to format the message information. See doc for all details.\n#msg-template=\n\n# Set the output format. Available formats are text, parseable, colorized, json\n# and msvs (visual studio). You can also give a reporter class, e.g.\n# mypackage.mymodule.MyReporterClass.\noutput-format=text\n\n# Tells whether to display a full report or only the messages.\nreports=no\n\n# Activate the evaluation score.\nscore=yes\n\n\n[REFACTORING]\n\n# Maximum number of nested blocks for function / method body\nmax-nested-blocks=5\n\n# Complete name of functions that never returns. When checking for\n# inconsistent-return-statements if a never returning function is called then\n# it will be considered as an explicit return statement and no message will be\n# printed.\nnever-returning-functions=sys.exit\n\n\n[STRING]\n\n# This flag controls whether inconsistent-quotes generates a warning when the\n# character used as a quote delimiter is used inconsistently within a module.\ncheck-quote-consistency=no\n\n# This flag controls whether the implicit-str-concat should generate a warning\n# on implicit string concatenation in sequences defined over several lines.\ncheck-str-concat-over-line-jumps=no\n\n\n[VARIABLES]\n\n# List of additional names supposed to be defined in builtins. Remember that\n# you should avoid defining new builtins when possible.\nadditional-builtins=\n\n# Tells whether unused global variables should be treated as a violation.\nallow-global-unused-variables=yes\n\n# List of strings which can identify a callback function by name. A callback\n# name must start or end with one of those strings.\ncallbacks=cb_,\n          _cb\n\n# A regular expression matching the name of dummy variables (i.e. expected to\n# not be used).\ndummy-variables-rgx=_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_\n\n# Argument names that match this expression will be ignored. Default to name\n# with leading underscore.\nignored-argument-names=_.*|^ignored_|^unused_\n\n# Tells whether we should check for unused import in __init__ files.\ninit-import=no\n\n# List of qualified module names which can have objects that can redefine\n# builtins.\nredefining-builtins-modules=six.moves,past.builtins,future.builtins,builtins,io\n\n\n[BASIC]\n\n# Naming style matching correct argument names.\nargument-naming-style=snake_case\n\n# Regular expression matching correct argument names. Overrides argument-\n# naming-style.\n#argument-rgx=\n\n# Naming style matching correct attribute names.\nattr-naming-style=snake_case\n\n# Regular expression matching correct attribute names. Overrides attr-naming-\n# style.\n#attr-rgx=\n\n# Bad variable names which should always be refused, separated by a comma.\nbad-names=foo,\n          bar,\n          baz,\n          toto,\n          tutu,\n          tata\n\n# Bad variable names regexes, separated by a comma. If names match any regex,\n# they will always be refused\nbad-names-rgxs=\n\n# Naming style matching correct class attribute names.\nclass-attribute-naming-style=any\n\n# Regular expression matching correct class attribute names. Overrides class-\n# attribute-naming-style.\n#class-attribute-rgx=\n\n# Naming style matching correct class names.\nclass-naming-style=PascalCase\n\n# Regular expression matching correct class names. Overrides class-naming-\n# style.\n#class-rgx=\n\n# Naming style matching correct constant names.\nconst-naming-style=UPPER_CASE\n\n# Regular expression matching correct constant names. Overrides const-naming-\n# style.\n#const-rgx=\n\n# Minimum line length for functions/classes that require docstrings, shorter\n# ones are exempt.\ndocstring-min-length=-1\n\n# Naming style matching correct function names.\nfunction-naming-style=snake_case\n\n# Regular expression matching correct function names. Overrides function-\n# naming-style.\n#function-rgx=\n\n# Good variable names which should always be accepted, separated by a comma.\ngood-names=i,\n           j,\n           k,\n           ex,\n           Run,\n           _\n\n# Good variable names regexes, separated by a comma. If names match any regex,\n# they will always be accepted\ngood-names-rgxs=\n\n# Include a hint for the correct naming format with invalid-name.\ninclude-naming-hint=no\n\n# Naming style matching correct inline iteration names.\ninlinevar-naming-style=any\n\n# Regular expression matching correct inline iteration names. Overrides\n# inlinevar-naming-style.\n#inlinevar-rgx=\n\n# Naming style matching correct method names.\nmethod-naming-style=snake_case\n\n# Regular expression matching correct method names. Overrides method-naming-\n# style.\n#method-rgx=\n\n# Naming style matching correct module names.\nmodule-naming-style=snake_case\n\n# Regular expression matching correct module names. Overrides module-naming-\n# style.\n#module-rgx=\n\n# Colon-delimited sets of names that determine each other's naming style when\n# the name regexes allow several styles.\nname-group=\n\n# Regular expression which should only match function or class names that do\n# not require a docstring.\nno-docstring-rgx=^_\n\n# List of decorators that produce properties, such as abc.abstractproperty. Add\n# to this list to register other decorators that produce valid properties.\n# These decorators are taken in consideration only for invalid-name.\nproperty-classes=abc.abstractproperty\n\n# Naming style matching correct variable names.\nvariable-naming-style=snake_case\n\n# Regular expression matching correct variable names. Overrides variable-\n# naming-style.\n#variable-rgx=\n\n\n[SIMILARITIES]\n\n# Ignore comments when computing similarities.\nignore-comments=yes\n\n# Ignore docstrings when computing similarities.\nignore-docstrings=yes\n\n# Ignore imports when computing similarities.\nignore-imports=no\n\n# Minimum lines number of a similarity.\nmin-similarity-lines=4\n\n\n[MISCELLANEOUS]\n\n# List of note tags to take in consideration, separated by a comma.\nnotes=FIXME,\n      XXX,\n      TODO\n\n# Regular expression of note tags to take in consideration.\n#notes-rgx=\n\n\n[SPELLING]\n\n# Limits count of emitted suggestions for spelling mistakes.\nmax-spelling-suggestions=4\n\n# Spelling dictionary name. Available dictionaries: none. To make it work,\n# install the python-enchant package.\nspelling-dict=\n\n# List of comma separated words that should not be checked.\nspelling-ignore-words=\n\n# A path to a file that contains the private dictionary; one word per line.\nspelling-private-dict-file=\n\n# Tells whether to store unknown words to the private dictionary (see the\n# --spelling-private-dict-file option) instead of raising a message.\nspelling-store-unknown-words=no\n\n\n[FORMAT]\n\n# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.\nexpected-line-ending-format=\n\n# Regexp for a line that is allowed to be longer than the limit.\nignore-long-lines=^\\s*(# )?<?https?://\\S+>?$\n\n# Number of spaces of indent required inside a hanging or continued line.\nindent-after-paren=4\n\n# String used as indentation unit. This is usually \"    \" (4 spaces) or \"\\t\" (1\n# tab).\nindent-string='    '\n\n# Maximum number of characters on a single line.\nmax-line-length=120\n\n# Maximum number of lines in a module.\nmax-module-lines=1000\n\n# Allow the body of a class to be on the same line as the declaration if body\n# contains single statement.\nsingle-line-class-stmt=no\n\n# Allow the body of an if to be on the same line as the test if there is no\n# else.\nsingle-line-if-stmt=no\n\n\n[TYPECHECK]\n\n# List of decorators that produce context managers, such as\n# contextlib.contextmanager. Add to this list to register other decorators that\n# produce valid context managers.\ncontextmanager-decorators=contextlib.contextmanager\n\n# List of members which are set dynamically and missed by pylint inference\n# system, and so shouldn't trigger E1101 when accessed. Python regular\n# expressions are accepted.\ngenerated-members=\n\n# Tells whether missing members accessed in mixin class should be ignored. A\n# mixin class is detected if its name ends with \"mixin\" (case insensitive).\nignore-mixin-members=yes\n\n# Tells whether to warn about missing members when the owner of the attribute\n# is inferred to be None.\nignore-none=yes\n\n# This flag controls whether pylint should warn about no-member and similar\n# checks whenever an opaque object is returned when inferring. The inference\n# can return multiple potential results while evaluating a Python object, but\n# some branches might not be evaluated, which results in partial inference. In\n# that case, it might be useful to still emit no-member and other checks for\n# the rest of the inferred objects.\nignore-on-opaque-inference=yes\n\n# List of class names for which member attributes should not be checked (useful\n# for classes with dynamically set attributes). This supports the use of\n# qualified names.\nignored-classes=optparse.Values,thread._local,_thread._local\n\n# List of module names for which member attributes should not be checked\n# (useful for modules/projects where namespaces are manipulated during runtime\n# and thus existing member attributes cannot be deduced by static analysis). It\n# supports qualified module names, as well as Unix pattern matching.\nignored-modules=\n\n# Show a hint with possible names when a member name was not found. The aspect\n# of finding the hint is based on edit distance.\nmissing-member-hint=yes\n\n# The minimum edit distance a name should have in order to be considered a\n# similar match for a missing member name.\nmissing-member-hint-distance=1\n\n# The total number of similar names that should be taken in consideration when\n# showing a hint for a missing member.\nmissing-member-max-choices=1\n\n# List of decorators that change the signature of a decorated function.\nsignature-mutators=\n\n\n[LOGGING]\n\n# The type of string formatting that logging methods do. `old` means using %\n# formatting, `new` is for `{}` formatting.\nlogging-format-style=old\n\n# Logging modules to check that the string format arguments are in logging\n# function parameter format.\nlogging-modules=logging\n\n\n[DESIGN]\n\n# Maximum number of arguments for function / method.\nmax-args=5\n\n# Maximum number of attributes for a class (see R0902).\nmax-attributes=7\n\n# Maximum number of boolean expressions in an if statement (see R0916).\nmax-bool-expr=5\n\n# Maximum number of branch for function / method body.\nmax-branches=12\n\n# Maximum number of locals for function / method body.\nmax-locals=15\n\n# Maximum number of parents for a class (see R0901).\nmax-parents=7\n\n# Maximum number of public methods for a class (see R0904).\nmax-public-methods=20\n\n# Maximum number of return / yield for function / method body.\nmax-returns=6\n\n# Maximum number of statements in function / method body.\nmax-statements=50\n\n# Minimum number of public methods for a class (see R0903).\nmin-public-methods=2\n\n\n[CLASSES]\n\n# List of method names used to declare (i.e. assign) instance attributes.\ndefining-attr-methods=__init__,\n                      __new__,\n                      setUp,\n                      __post_init__\n\n# List of member names, which should be excluded from the protected access\n# warning.\nexclude-protected=_asdict,\n                  _fields,\n                  _replace,\n                  _source,\n                  _make\n\n# List of valid names for the first argument in a class method.\nvalid-classmethod-first-arg=cls\n\n# List of valid names for the first argument in a metaclass class method.\nvalid-metaclass-classmethod-first-arg=cls\n\n\n[IMPORTS]\n\n# List of modules that can be imported at any level, not just the top level\n# one.\nallow-any-import-level=\n\n# Allow wildcard imports from modules that define __all__.\nallow-wildcard-with-all=no\n\n# Analyse import fallback blocks. This can be used to support both Python 2 and\n# 3 compatible code, which means that the block might have code that exists\n# only in one or another interpreter, leading to false positives when analysed.\nanalyse-fallback-blocks=no\n\n# Deprecated modules which should not be used, separated by a comma.\ndeprecated-modules=optparse,tkinter.tix\n\n# Create a graph of external dependencies in the given file (report RP0402 must\n# not be disabled).\next-import-graph=\n\n# Create a graph of every (i.e. internal and external) dependencies in the\n# given file (report RP0402 must not be disabled).\nimport-graph=\n\n# Create a graph of internal dependencies in the given file (report RP0402 must\n# not be disabled).\nint-import-graph=\n\n# Force import order to recognize a module as part of the standard\n# compatibility libraries.\nknown-standard-library=\n\n# Force import order to recognize a module as part of a third party library.\nknown-third-party=enchant\n\n# Couples of modules and preferred modules, separated by a comma.\npreferred-modules=\n\n\n[EXCEPTIONS]\n\n# Exceptions that will emit a warning when being caught. Defaults to\n# \"BaseException, Exception\".\novergeneral-exceptions=builtins.BaseException,\n                       builtins.Exception\n"
        },
        {
          "name": ".reuse",
          "type": "tree",
          "content": null
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.55078125,
          "content": "language: generic\nconditions: v1\n\nservices:\n  - docker\n\njobs:\n  fast_finish: true\n  include:\n    # Linux with GCC on PowerPC\n    - os: linux\n      name: PPC64\n      arch: ppc64le\n      dist: focal\n      env: COMPILER_NAME=gcc CXX=g++ CC=gcc CFLAGS=\"-DRZ_ASSERT_STDOUT=1\" RZ_ARM64_AS=aarch64-linux-gnu-as RZ_ARM32_AS=arm-linux-gnueabi-as RZ_X86_AS=x86_64-linux-gnu-as\n      addons:\n        apt:\n          packages:\n            - binutils-aarch64-linux-gnu\n            - binutils-arm-linux-gnueabi\n            - binutils-x86-64-linux-gnu\n    # Linux with GCC on System Z\n    - os: linux\n      name: S390X\n      arch: s390x\n      dist: focal\n      env: COMPILER_NAME=gcc CXX=g++ CC=gcc CFLAGS=\"-DRZ_ASSERT_STDOUT=1\" RZ_X86_AS=x86_64-w64-mingw32-as\n      addons:\n        apt:\n          packages:\n            - binutils-mingw-w64-x86-64\n    # Linux with GCC on ARMv8 (64bit)\n    - os: linux\n      name: ARM64\n      arch: arm64\n      dist: focal\n      env: COMPILER_NAME=gcc CXX=g++ CC=gcc CFLAGS=\"-DRZ_ASSERT_STDOUT=1\" RZ_ARM32_AS=arm-linux-gnueabi-as RZ_X86_AS=x86_64-linux-gnu-as RZ_PPC_AS=powerpc64le-linux-gnu-as\n      addons:\n        apt:\n          packages:\n            - binutils-arm-linux-gnueabi\n            - binutils-x86-64-linux-gnu\n            - binutils-powerpc64le-linux-gnu\n\ncache:\n  - ccache\n\nscript:\n  - export PR_NAME=$(echo $TRAVIS_PULL_REQUEST_SLUG | cut -d'/' -f1)\n  - |\n    pip3 install -U --user tomli meson ninja\n    pip3 install --user 'git+https://github.com/rizinorg/rz-pipe#egg=rzpipe&subdirectory=python'\n    pip3 install --user requests\n    $SHELL travis-script\n"
        },
        {
          "name": ".woodpecker",
          "type": "tree",
          "content": null
        },
        {
          "name": "BUILDING.md",
          "type": "blob",
          "size": 8.9755859375,
          "content": "# Clone the Rizin project and keep it updated\n\nThe first time you download Rizin you can use:\n```\n$ git clone https://github.com/rizinorg/rizin\n```\n\nAfter that, use `git pull` to update the Rizin codebase.\n\n# Build\n\nRizin uses [`meson`](https://mesonbuild.com/) to build. As not all systems have\na version of `meson` that is recent enough, we suggest to install it directly\nfrom `pip` with `pip install meson`. If necessary, also install `ninja` with\n`pip install ninja`.\n\nIf you are trying to build Rizin to create a package for a distribution,\ntake a look at [doc/PACKAGERS.md][].\n\n## Note about debugging\n\nUnless you are interested in debugging Rizin, it is a good idea to pass the `--buildtype=release` flag to `meson` for increased performance and to prevent the buggy `mspdbsrv.exe` process from [blocking/breaking the building process](https://social.msdn.microsoft.com/Forums/en-US/9e58b7d1-a47d-4a76-943a-4f35090616e8/link-fatal-error-lnk1318?forum=vclanguage) when generating `PDB` files in Windows. See the first table in the [Running Meson Documentation](https://mesonbuild.com/Running-Meson.html#configuring-the-build-directory) for other build types.\n\n## *NIX systems\n\n### Build system-wide, in `/usr/local`\n\nThis is the default configuration and it allows you to install your built Rizin\nversion while keeping, if provided, the Rizin version shipped by your\ndistribution in `/usr`.\n\n```\n$ meson --buildtype=release build\n$ ninja -C build                # or `meson compile -C build`\n$ sudo ninja -C build install   # or `sudo meson install -C build`\n```\n\nNOTE: when `--prefix=/usr` is not used, meson will set `RPATH` to ensure that\nlibraries can be found on the system without having to deal with\n`LD_LIBRARY_PATH` or ld settings. This is done to ensure a simple\ninstallation process out-of-the-box, but if you don't want this behaviour and\nyou know what you are doing, you can still use `-Dlocal=disabled` to avoid\nusing `RPATH`.\n\n### Build system-wide, in `/usr`\n\nIf your system does not already provide rizin in `/usr/bin`, you want to package\nRizin on your preferred distribution or you just prefer to have Rizin together\nwith all other binaries on your system, you can also install it system-wide in\n`/usr`.\n\n```\n$ meson --buildtype=release --prefix=/usr build\n$ ninja -C build\n$ sudo ninja -C build install\n```\n\nThis kind of installation is not recommended if your system provides Rizin as\na package or if you don't want to mess with software provided by your\ndistribution.\n\n\n### Build user-wide, in `~/.local`\n\nYou are not forced to install Rizin in your system, you can just make it\navailable for your current user, without requiring you to have `sudo` access to\nthe machine (or if you don't trust our build scripts enough).\n\n```\n$ meson --buildtype=release --prefix=~/.local build\n$ ninja -C build\n$ ninja -C build install\n```\n\nThe `install` step will install rizin in `~/.local/bin`, so make sure to add it\nto your `PATH` variable (e.g. `export PATH=$PATH:~/.local/bin`).\n\nNOTE: meson will set `RPATH` to ensure that libraries can be found on the\nsystem without having to deal with `LD_LIBRARY_PATH` or ld settings. This is\ndone to ensure a simple installation process out-of-the-box, but if you don't\nwant this behaviour and you know what you are doing, you can still use\n`-Dlocal=disabled` to avoid using `RPATH`.\n\n## Windows\n\nThe building steps on Windows are the same as on *NIX systems, however you\nwill have to run the following commands from the Visual Studio Developer\nshell (search for \"x64 Native Tools Command Prompt for VS 2019\" or similar).\nTo install Meson on Windows, follow instructions\n[here](https://mesonbuild.com/Getting-meson.html). If using PowerShell, \nreplace `%CD%` with `$((Get-Item .).FullName)`\n\n```\n$ meson --buildtype=release --prefix=%CD%\\rizin-install build\n$ ninja -C build\n$ ninja -C build install\n```\n\nYou can run rizin from `.\\rizin-install\\bin`. If you don't specify any\n`--prefix`, meson will install rizin directly under `C:\\`.\n\n## Build with ASAN/UBSAN\n\nUse `-Db_sanitize=address,undefined` during the setup phase.\n\n```\n$ meson --buildtype=release -Db_sanitize=address,undefined build\n```\n\n*Note*: Due to [a bug](https://github.com/google/sanitizers/issues/1716) in ASAN,\nASAN built binaries will crash or endlessly loop randomly, and only report\n`AddressSanitizer:DEADLYSIGNAL`.\nThis also effects the build of Rizin, because we run an ASAN compiled binary (`sdb`)\nduring the build.\nIf this binary stays in an endless loop of `AddressSanitizer:DEADLYSIGNAL`,\nthe build will hang up and fill up your memory.\n\nTo fix this, you need to lower the size of the random offset applied\nto VMA base addresses with:\n\n```sh\nsudo sysctl vm.mmap_rnd_bits=28\n```\n\n## Build fully-static binaries\n\nIt may be useful to run Rizin just by using a single file, which can be\ncopied on other systems if necessary. On *NIX systems, this adds the classic\n`-static` flag to the linker, while on Windows it uses `/MT`.\n\n```\n$ meson --buildtype=release --default-library=static -Dstatic_runtime=true build\n```\n\n## Cross-compilation for Android\n\nYou can cross-compile rizin from your main machine to target your Android\ndevice. First download and install the Android NDK from\n[https://developer.android.com/ndk](https://developer.android.com/ndk).\n\nThen you can use meson to cross-compile, however you have to provide a\nconfiguration file that specifies all the necessary information meson needs to\nknow to correctly cross-compile.\n\nYou can find an\n[example](https://github.com/rizinorg/rizin/blob/dev/.github/meson-android-aarch64.ini)\nof such a file in our codebase, but you should adjust it to match your system.\n\nTo make the deployment and usage of the rizin tools easier from within your\nAndroid device, we suggest to compile statically and by using the *blob*\nfeature, which will produce just one executable and link all the other tools to\nthat only tool, similar to how busybox works.\n\n```\n$ meson --buildtype release --default-library static --prefix=/tmp/android-dir -Dblob=true build -Dstatic_runtime=true --cross-file ./cross-compile-conf.ini\n$ ninja -C build\n$ ninja -C build install\n```\n\nAt this point you can find everything under `/tmp/android-dir` and you can copy\nfiles to your Android device.\n\n## Compile 32-bit Rizin on 64-bit machine\n\nWhenever you want to build Rizin for a different system/architecture than the\none you are using for building, you are effectively cross-compiling and you\nshould provide a full configuration file to tell meson what is the target\nmachine.\n\nEven to compile a 32-bit version of Rizin on a 64-bit machine, you should use\na configuration file like the following:\n\n```\n[binaries]\nc = '/usr/bin/gcc'\ncpp = '/usr/bin/g++'\nar = '/usr/bin/gcc-ar'\nstrip = '/usr/bin/strip'\npkgconfig = '/usr/bin/i686-redhat-linux-gnu-pkg-config'\nllvm-config = '/usr/bin/llvm-config-32'\n\n[built-in options]\nc_args = ['-m32']\nc_link_args = ['-m32']\ncpp_args = ['-m32']\ncpp_link_args = ['-m32']\n\n[host_machine]\nsystem = 'linux'\ncpu_family = 'x86'\ncpu = 'i686'\nendian = 'little'\n```\n\nAlternatively, if your distribution provide specific compiler tools for the\ni686 architecture, you can use a configuration similar to this:\n\n```\n[binaries]\nc = '/usr/bin/i686-linux-gnu-gcc'\ncpp = '/usr/bin/i686-linux-gnu-g++'\nar = '/usr/bin/i686-linux-gnu-gcc-ar'\nstrip = '/usr/bin/i686-linux-gnu-strip'\npkgconfig = '/usr/bin/i686-linux-gnu-pkg-config'\n\n[host_machine]\nsystem = 'linux'\ncpu_family = 'x86'\ncpu = 'i686'\nendian = 'little'\n```\n\nOf course, you might have to adjust some settings depending on your system\nand you should double check that you have installed all the necessary 32-bit\nlibraries and tools. Once you have checked everything, you can setup the\nbuild directory with:\n\n```\n$ meson build --cross-file ./rizin-i386.ini\n```\n\n# Uninstall\n\nIf Rizin was installed using `meson`, you can run the following command from the\nsame build directory where you had previously installed Rizin:\n\n```\n$ sudo ninja -C uninstall # `sudo` may not be required based on how you configured the `build` directory with meson the first time```\n```\n\nFurthermore, if you had installed Rizin using a distribution package, use the\ncorresponding package manager's method for removing a package to uninstall Rizin.\n\n# Update\n\nFirstly, use `git pull` to update the Rizin codebase to the latest version.\n\nTo re-build Rizin after you have updated your source code, you can use:\n```\n$ ninja -C build # or `meson compile -C build`\n$ sudo ninja -C build install # or `sudo meson install -C build`. `sudo` may not be required based on how you configured the `build` directory with meson the first time\n```\n\nIf you are a developer, it might not be necessary to run the `install` step\n(the second step from above) every time you build Rizin. You can directly use\n`rizin` from `./build/binrz/rizin/rizin.`\n\nIf you encounter issues while re-building Rizin, try to remove the existing\nbuild directory (e.g. `rm -r ./build`) and clean the subproject files\ndownloaded by meson (e.g. `git clean -dxff subprojects/`). Note that changing\na `meson.build` file does *not* guarantee a full rebuild.\n\n[doc/PACKAGERS.md]: https://github.com/rizinorg/rizin/blob/dev/doc/PACKAGERS.md\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 1.060546875,
          "content": "* @wargio @XVilka @kazarmy @thestr4ng3r @ret2libc\n*.js @wargio\nCODEOWNERS @wargio @XVilka @kazarmy @thestr4ng3r @ret2libc\nlibrz/arch/ @thestr4ng3r\nlibrz/arch/esil* @wargio\nlibrz/arch/xrefs.c @ret2libc\nlibrz/arch/gb/ @wargio\nlibrz/arch/ @wargio\nlibrz/arch/p/asm/x86_* @ret2libc\nlibrz/arch/p/asm/arm_* @wargio\nlibrz/bin/ @ret2libc @wargio\nlibrz/bin/format/elf/ @ret2libc @kazarmy\nlibrz/bin/format/mach0/ @wargio\nlibrz/bin/format/objc/ @wargio\nlibrz/bin/format/wasm/ @wargio\nlibrz/config/ @wargio @ret2libc\nlibrz/cons/ @thestr4ng3r @wargio\nlibrz/core/cmd.c @ret2libc @wargio\nlibrz/debug/ @yossizap @wargio\nlibrz/egg/ @wargio\nlibrz/flag/ @ret2libc @wargio\nlibrz/fs/ @wargio\nlibrz/io/ @wargio @ret2libc\nlibrz/lang/ @thestr4ng3r @wargio @ret2libc\nlibrz/magic/ @wargio\nlibrz/reg/ @XVilka @wargio\nlibrz/socket/ @XVilka @yossizap\nlibrz/syscall/ @ret2libc @wargio\nlibrz/type/ @XVilka\nlibrz/util/ @ret2libc @thestr4ng3r\nsubprojects/rzgdb/ @yossizap\nsubprojects/ptrace-wrap/ @thestr4ng3r\nsubprojects/rizin-shell-parser/ @ret2libc\nsubprojects/rzw32dbg_wrap/ @yossizap\nsubprojects/rzwinkd/ @yossizap\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.369140625,
          "content": "\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n[conduct@rizin.re](malto:conduct@rizin.re).\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\n[https://www.contributor-covenant.org/version/2/0/code_of_conduct.html][v2.0].\n\nCommunity Impact Guidelines were inspired by \n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available \nat [https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.0]: https://www.contributor-covenant.org/version/2/0/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.109375,
          "content": "# How to report issues\n\nBefore reporting an issue with GitHub, be sure that:\n* You are using the latest released version of Rizin or the latest git version\n* You are using a clean installation\n* The issue was not already reported\n\nWhen the above conditions are satisfied, feel free to submit an issue while\ntrying to be as precise as possible. If you can, provide the problematic binary,\nthe steps to reproduce the error and a backtrace in case of SEGFAULTs. Try to\nfollow the issue template that comes by default. Any information will help to\nfix the problem.\n\n# How to contribute\n\nThere are a few guidelines that we need contributors to follow so that we can\ntry to keep the codebase consistent and clean.\n\n## Getting Started\n\n* Make sure you have a GitHub account and solid ability to use `git`.\n* Fork the repository on GitHub.\n* Create a topic branch from `dev`. Please avoid working directly on the `dev` branch.\n* Make commits of logical units.\n* Be sure to follow the CODINGSTYLE (more on this in [DEVELOPERS.md][]).\n* Submit the Pull Request(PR) on Github.\n* When relevant, write a test in [test/](test).\n\n## Rebasing onto updated dev\n\nEvery so often, your PR will lag behind `dev` and get conflicts.\n\nTo \"update\" your branch `my-awesome-feature`, you *rebase* it onto\nthe latest `rizinorg/dev`, and *force-push* the result into your fork.\n\n#### Step 1: Switch to `dev` branch.\n```sh\n$ git checkout dev\n```\n#### Step 2: Pull new commits published to rizinorg repo.\n```sh\n$ git pull https://github.com/rizinorg/rizin\n```\n#### Step 3: Switch back to `my-awesome-feature` branch.\n```sh\n$ git checkout my-awesome-feature\n```\n#### Step 4: Rebase the `my-awesome-feature` branch.\n```sh\n$ git rebase dev\n```\nOptionally, use the alternative mode \"interactive rebase\". It allows\nto `squash` your commits all into one, reorder, reword them, etc.\n```sh\n$ git rebase -i dev\n```\nFollow git instructions when conflicts arise.\n\n#### Step 5: Publish your updated local branch.\n```sh\n$ git push -f\n```\nThis `-f` *force-flag* is needed because git commits are immutable: rebasing\ncreates newer versions of them. git needs to confirm the destruction of\nprevious incarnations.\n\nWhen afraid to touch force and risk losing your work (do backups!..),\ntry *merging dev into your branch* instead of rebasing onto it.\nThis is discouraged, as it produces ugly hard-to-maintain commit history.\n\n## Commit message rules\n\nWhen committing your changes into the repository you may want to follow some\nrules to make the git history more readable and consistent:\n\n* Start the message capitalized (only the first character must be in uppercase)\n* Be short and concise, the whole concept must fit one line\n* If a command is inlined, use backticks\n* For extra details, add an empty line and use asterisk item list below\n* Use present simple grammar tense (Add vs Added, Fix vs Fixed/Fixes)\n\n# Additional resources\n\n * [README.md][]\n * [DEVELOPERS.md][]\n\n[README.md]: https://github.com/rizinorg/rizin/blob/dev/README.md\n[DEVELOPERS.md]: https://github.com/rizinorg/rizin/blob/dev/DEVELOPERS.md\n\nIf you need more confidence in your git skills, check out this quick guide:\n<https://learnxinyminutes.com/docs/git/>\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 34.3232421875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
        },
        {
          "name": "COPYING.LESSER",
          "type": "blob",
          "size": 7.4716796875,
          "content": "                   GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\n  This version of the GNU Lesser General Public License incorporates\nthe terms and conditions of version 3 of the GNU General Public\nLicense, supplemented by the additional permissions listed below.\n\n  0. Additional Definitions.\n\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\nGeneral Public License.\n\n  \"The Library\" refers to a covered work governed by this License,\nother than an Application or a Combined Work as defined below.\n\n  An \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\n  A \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library.  The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\n  The \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\n  The \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n  1. Exception to Section 3 of the GNU GPL.\n\n  You may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n  2. Conveying Modified Versions.\n\n  If you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n   a) under this License, provided that you make a good faith effort to\n   ensure that, in the event an Application does not supply the\n   function or data, the facility still operates, and performs\n   whatever part of its purpose remains meaningful, or\n\n   b) under the GNU GPL, with none of the additional permissions of\n   this License applicable to that copy.\n\n  3. Object Code Incorporating Material from Library Header Files.\n\n  The object code form of an Application may incorporate material from\na header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n   a) Give prominent notice with each copy of the object code that the\n   Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the object code with a copy of the GNU GPL and this license\n   document.\n\n  4. Combined Works.\n\n  You may convey a Combined Work under terms of your choice that,\ntaken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n   a) Give prominent notice with each copy of the Combined Work that\n   the Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\n   document.\n\n   c) For a Combined Work that displays copyright notices during\n   execution, include the copyright notice for the Library among\n   these notices, as well as a reference directing the user to the\n   copies of the GNU GPL and this license document.\n\n   d) Do one of the following:\n\n       0) Convey the Minimal Corresponding Source under the terms of this\n       License, and the Corresponding Application Code in a form\n       suitable for, and under terms that permit, the user to\n       recombine or relink the Application with a modified version of\n       the Linked Version to produce a modified Combined Work, in the\n       manner specified by section 6 of the GNU GPL for conveying\n       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version.\n\n   e) Provide Installation Information, but only if you would otherwise\n   be required to provide such information under section 6 of the\n   GNU GPL, and only to the extent that such information is\n   necessary to install and execute a modified version of the\n   Combined Work produced by recombining or relinking the\n   Application with a modified version of the Linked Version. (If\n   you use option 4d0, the Installation Information must accompany\n   the Minimal Corresponding Source and Corresponding Application\n   Code. If you use option 4d1, you must provide the Installation\n   Information in the manner specified by section 6 of the GNU GPL\n   for conveying Corresponding Source.)\n\n  5. Combined Libraries.\n\n  You may place library facilities that are a work based on the\nLibrary side by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n   a) Accompany the combined library with a copy of the same work based\n   on the Library, uncombined with any other library facilities,\n   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n  Each version is given a distinguishing version number. If the\nLibrary as you received it specifies that a certain numbered version\nof the GNU Lesser General Public License \"or any later version\"\napplies to it, you have the option of following the terms and\nconditions either of that published version or of any later version\npublished by the Free Software Foundation. If the Library as you\nreceived it does not specify a version number of the GNU Lesser\nGeneral Public License, you may choose any version of the GNU Lesser\nGeneral Public License ever published by the Free Software Foundation.\n\n  If the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n"
        },
        {
          "name": "DEVELOPERS.md",
          "type": "blob",
          "size": 17.20703125,
          "content": "# DEVELOPERS\n\nThis file is aimed at developers who want to work on the Rizin code base.\n\n## Documentation\n\nThere is support for Doxygen document generation in this repo.\nBy running `doxygen` in the root of this repository, it will autodetect the\nDoxyfile and generate HTML documentation into\n[doc/doxygen/html/index.html](./doc/doxygen/html/index.html).\n\nIf you're contributing code or willing to update existing code, you should use the\ndoxygen C-style comments to improve documentation and comments in code.\nSee the [Doxygen Manual](http://www.doxygen.nl/manual/index.html)\nfor more info. Example usage can be found [here](http://www.doxygen.nl/manual/docblocks.html).\n\nDocumentation goes into the source files (not the header files).\n\n```c\n/**\n * \\brief Find the min and max addresses in an RzList of maps.\n * \\param maps RzList of maps that will be searched through\n * \\param min Pointer to a ut64 that the min will be stored in\n * \\param max Pointer to a ut64 that the max will be stored in\n * \\param skip How many maps to skip at the start of an iteration\n * \\param width Divisor for the return value\n * \\return (max-min)/width\n *\n * Used to determine the min & max addresses of maps and\n * scale the ascii bar to the width of the terminal\n */\nstatic int find_min_max(RzList *maps, ut64 *min, ut64 *max, int skip, int width) { /* ... */ }\n```\n\nIn order to improve the documentation and help newcomers, documenting code is mandatory.\n\nYou should add or update the documentation of:\n- code written by you.\n- existing Rizin code you changed.\n\nExceptions:\n- Trivial changes.\n\nIf you have not updated the documentation, explain why.\nE.g.: `Bug fix did not change the general behavior of the function. No documentation update needed.`\n\n## Code style\n\n### C\n\nIn order to contribute with patches or plugins, we encourage you to use the same\ncoding style as the rest of the code base.\n\n* Use git-clang-format 16 to format your code. If clang-format-16 is not available on\n  your Debian-based distribution, you can install it from https://apt.llvm.org/.\n  You should invoke it as below (after making sure that your local copy of `dev`\n  is up-to-date and your branch is up-to-date with `dev`):\n\n```bash\ngit-clang-format-16 --extensions c,cpp,h,hpp,inc --style file dev\n```\n\n  There is a script available to run on all source files; you will need python and\n  the gitpython python library, which you may install e.g. from pip. Invoke it as\n  follows (after making sure that your local copy of `dev` is up-to-date and your\n  branch is up-to-date with `dev`):\n\n```bash\n./sys/clang-format.py\n```\n\n* Lines should be at most 100 chars. A tab is considered as 8 chars. If it makes\n  things more readable, you can use more than 100 characters, but this should be\n  the exception, not the rule.\n\n* Always use braces for if and while.\n\n* In general, don't use goto. The goto statement only comes in handy when a\n  function exits from multiple locations and some common work such as cleanup\n  has to be done. If there is no cleanup needed, then just return directly.\n* Choose label names which say what the goto does or why the goto exists.  An\n  example of a good name could be \"out_buffer:\" if the goto frees \"buffer\".\n  Avoid using GW-BASIC names like \"err1:\" and \"err2:\".\n* Use `rz_return_*` functions to check preconditions that are caused by\n  programmers' errors. Please note the difference between conditions that should\n  never happen, and that are handled through `rz_return_*` functions, and\n  conditions that can happen at runtime (e.g. `malloc()` returns `NULL`, input coming\n  from user, etc.), and should be handled in the usual way through if-else.\n\n```c\nint check(RzCore *c, int a, int b) {\n\trz_return_val_if_fail(c, false);\n\trz_return_val_if_fail(a >= 0 && b >= 1, false);\n\n\tif (a == 0) {\n\t\t/* do something */\n\t\t...\n\t}\n\t... /* do something else */\n}\n```\n\n* Use `rz_warn_if_reached()` macros to emit a runtime warning if the code path is reached.\n  It is often useful in a switch cases handling, in the default case:\n\n```c\nswitch(something) {\n\tcase EXPECTED_CASE1:\n\t\t...\n\t\tbreak;\n\tcase EXPECTED_CASE2:\n\t\t...\n\t\tbreak;\n\tcase UNEXPECTED_CASE:\n\t\trz_warn_if_reached();\n\t\tbreak;\n\t...\n}\n```\n\n* Split long conditional expressions into small `static inline` functions to make them more readable:\n\n```diff\n+static inline bool inRange(RzBreakpointItem *b, ut64 addr) {\n+       return (addr >= b->addr && addr < (b->addr + b->size));\n+}\n+\n+static inline bool matchProt(RzBreakpointItem *b, int rwx) {\n+       return (!rwx || (rwx && b->rwx));\n+}\n+\n RZ_API RzBreakpointItem *rz_bp_get_in(RzBreakpoint *bp, ut64 addr, int rwx) {\n        RzBreakpointItem *b;\n        RzListIter *iter;\n        rz_list_foreach (bp->bps, iter, b) {\n-               if (addr >= b->addr && addr < (b->addr+b->size) && \\\n-                       (!rwx || rwx&b->rwx))\n+               if (inRange(b, addr) && matchProt(b, rwx)) {\n                        return b;\n+               }\n        }\n        return NULL;\n }\n```\n\n* Structure in the C files\n\nThe structure of the C files in Rizin must be like this:\n\n```c\n// SPDX-License-Identifier: LGPL-3.0-only\n/* Copyright ... */           ## copyright\n#include <rz_core.h>           ## includes\nstatic int globals            ## const, define, global variables\nstatic void helper(void) {}   ## static functions\nRZ_IPI void internal(void) {}  ## internal apis (used only inside the library)\nRZ_API void public(void) {}    ## public apis starting with constructor/destructor\n```\n\n* Why return int vs enum\n\nThe reason why many places in Rizin-land functions return int instead of an enum type is because enums can't be OR'ed; otherwise, it breaks the usage within a switch statement and swig can't handle that stuff.\n\n```\nrz_core_wrap.cxx:28612:60: error: assigning to 'RzRegisterType' from incompatible type 'long'\n  arg2 = static_cast< long >(val2); if (arg1) (arg1)->type = arg2; resultobj = SWIG_Py_Void(); return resultobj; fail:\n                                                           ^ ~~~~\nrz_core_wrap.cxx:32103:61: error: assigning to 'RzDebugReasonType' from incompatible type 'int'\n    arg2 = static_cast< int >(val2); if (arg1) (arg1)->type = arg2; resultobj = SWIG_Py_Void(); return resultobj; fail:\n                                                            ^ ~~~~\n3 warnings and 2 errors generated.\n````\n\n* Do not use `assert.h`, use `rz_util/rz_assert.h` instead.\n\n* You can use `export RZ_DEBUG_ASSERT=1` to set a breakpoint when hitting an assert.\n\n* Function names should be explicit enough to not require a comment\n  explaining what it does when seen elsewhere in code.\n\n* Use `RZ_API` define to mark exportable (public) methods only for module APIs.\n\n* The rest of functions must be static, to avoid polluting the global space.\n\n* Avoid using global variables, they are evil.\n\n* Do not write ultra-large functions: split them into multiple or simplify\n  the algorithm, only external-copy-pasted-not-going-to-be-maintained code\n  can be accepted in this way. (gnu code, external disassemblers, etc..)\n\n* Use the Rizin types instead of the ones in `<stdint.h>`, which are known to cause some\n  portability issues. So, instead of `uint8_t`, use `ut8`, etc.. As a bonus point they\n  are shorter to write.\n\n* Never ever use `%lld` or `%llx`. This is not portable. Always use the `PFMT64x`\n  macros. Those are similar to the ones in GLIB. See all macroses in `librz/include/rz_types.h`.\n\n* Never use `offsetof()` macros - it's not supported by some compilers. Use `rz_offsetof()` instead.\n\n* Add a single space after the `//` when writing inline comments:\n\n```c\nint sum = 0; // set sum to 0\n```\n\n* If you want to iterate over values of your struct, implement `RzIterator *mystruct_as_iter()` and `RzIterator *mystruct_as_iter_mut()` for them.\n  See `rz_iterator.h` for details about the iterator.\n\n* If you need bitmaps, do not shift and OR the bits manually on `ut32`. Use bit vectors from `rz_bitvector.h` instead.\n\n### Shell Scripts\n\n* Use `#!/bin/sh`\n\n* Do not use bashisms `[[`, `$'...'` etc.\n\n* Use our [shellcheck.sh](https://github.com/rizinorg/rizin/blob/master/sys/shellcheck.sh) script to check for problems and for bashisms.\n\n### Python Scripts\n\n* Code must run under Python 3.6 (for [Debian \"wheezy\" compatibility](https://github.com/rizinorg/rizin/pull/2870#issuecomment-1205338140)).\n\n# Manage Endianness\n\nAs hackers, we need to be aware of endianness.\n\nEndianness can become a problem when you try to process buffers or streams\nof bytes and store intermediate values as integers with width larger than\na single byte.\n\nIt can seem very easy to write the following code:\n```c\nut8 opcode[4] = { 0x10, 0x20, 0x30, 0x40 };\nut32 value = *(ut32*)opcode;\n```\n... and then continue to use \"value\" in the code to represent the opcode.\n\nThis needs to be avoided!\n\nWhy? What is actually happening?\n\nWhen you cast the opcode stream to a unsigned int, the compiler uses the endianness\nof the host to interpret the bytes and stores it in host endianness.  This leads to\nvery unportable code, because if you compile on a different endian machine, the\nvalue stored in \"value\" might be 0x40302010 instead of 0x10203040.\n\n## Solution\n\nUse bitshifts and OR instructions to interpret bytes in a known endian.\nInstead of casting streams of bytes to larger width integers, do the following:\n```c\nut8 opcode[4] = { 0x10, 0x20, 0x30, 0x40 };\nut32 value = opcode[0] | opcode[1] << 8 | opcode[2] << 16 | opcode[3] << 24;\n```\nor if you prefer the other endian:\n```c\nut32 value = opcode[3] | opcode[2] << 8 | opcode[1] << 16 | opcode[0] << 24;\n```\nThis is much better because you actually know which endian your bytes are stored in\nwithin the integer value, REGARDLESS of the host endian of the machine.\n\n## Endian helper functions\n\nRizin now uses helper functions to interpret all byte streams in a known endian.\n\nPlease use these at all times, eg:\n```c\n  \tval32 = rz_read_be32(buffer)\t\t// reads 4 bytes from a stream in BE\n  \tval32 = rz_read_le32(buffer)\t\t// reads 4 bytes from a stream in LE\n  \tval32 = rz_read_ble32(buffer, isbig)\t// reads 4 bytes from a stream:\n  \t\t\t\t\t\t//   if isbig is true, reads in BE\n  \t\t\t\t\t\t//   otherwise reads in LE\n```\nThere are a number of helper functions for 64, 32, 16, and 8 bit reads and writes.\n\n(Note that 8 bit reads are equivalent to casting a single byte of the buffer\nto a `ut8` value, ie endian is irrelevant).\n\nIn case of the access to the `RzBuffer *buffer` type, there are also helpers like\n`rz_buf_read_bleXX()`/`rz_buf_write_bleXX()`, `rz_buf_read_bleXX_at()`/`rz_buf_write_bleXX_at()`,\nand `rz_buf_read_bleXX_offset()`/`rz_buf_write_bleXX_offset()`. In\naddition to them there are corresponding little-endian or big-endian-only functions\nlike `rz_buf_read_leXX()`/`rz_buf_read_beXX()`, `rz_buf_read_leXX_at()`/`rz_buf_read_beXX()`,\n`rz_buf_read_leXX_offset()`/`rz_buf_read_beXX_offset()`, and corresponding writing functions.\n\n## Packed structures\n\nDue to the various differences between platforms and compilers Rizin\nhas a special helper macro - `RZ_PACKED()`. Instead of non-portable\n`#pragma pack` or `__attribute__((packed))` it is advised to use this macro\ninstead. To wrap the code inside of it you just need to write:\n```c\nRZ_PACKED(union mystruct {\n\tint a;\n\tchar b;\n})\n```\nor in case of typedef:\n```c\nRZ_PACKED(typedef structmystruct {\n\tint a;\n\tchar b;\n})\n```\n\n## Modules\n\nThe Rizin code base is modularized into different libraries that are\nfound in `librz/` directory. The `binrz/` directory contains the programs\nwhich use the libraries.\n\nHint: To find both the declaration and definition of a function named\n*func_name*, you can use the following `git grep` command:\n\n```bash\ngit grep -nWG \"^[^[:blank:]].*func_name(\"\n```\n\n## JSON\n\nSince many places in Rizin output JSON the special API was created, **PJ** which means \"Print Json\".\nIt allows to create nested JSON structs with a simple and short API. Full API reference is\navailable in `librz/include/rz_util/rz_pj.h`.\n\nHere is the short example of how we usually use **PJ**:\n```c\nPJ *pj = NULL;\nif (mode == RZ_OUTPUT_MODE_JSON) {\n\tpj = pj_new(); // creates a new instance of the API\n\tif (!pj) {\n\t\treturn false;\n\t}\n}\n// ... some other logic\n// Creating the JSON structure\nif (mode == RZ_OUTPUT_MODE_JSON) {\n\tpj_o(pj); // creates a JSON list\n\tpj_ki(pj, \"id\", some->id); // creates an element like \"id\": 6\n\tpj_ks(pj, \"name\", some->name); // creates an element like \"name\": \"bla\"\n\tpj_end(pj); // closes a JSON list\n}\n// ... some other logic\n// Printing the JSON on the screen\nif (mode == RZ_OUTPUT_MODE_JSON) {\n\trz_cons_println(pj_string(pj));\n\tpj_free(pj); // free the instance of the API\n}\n```\nIt will produce the following output:\n```json\n{\"id\":6,\"name\":\"bla\"}\n```\n\n## Licenses\n\nRizin is trying to comply with the Software Package Data Exchange® (SPDX®),\nan open standard to communicate in a clear way licenses and copyrights, among\nother things, of a software. All files in the repository should either have\nan header specifying the copyright and the license that apply or an entry in\n.reuse/dep5 file. All pieces of code copied from other projects should have\na license/copyright entry as well.\n\nIn particular, the SPDX header may look like:\n```C\n// SPDX-FileCopyrightText: 2021 RizinOrg <info@rizin.re>\n// SPDX-License-Identifier: LPGL-3.0-only\n```\n\nYou can use the [REUSE Software](https://reuse.software/) to check the\ncompliance of the project and get the licenses/copyright of each file.\n\n# Custom Pointer Modifiers\n\nIn Rizin code, there are some conventions to help developers use pointers more safely, which are defined in `librz/include/rz_types.h`:\n\n```c\n#define RZ_IN        /* do not use, implicit */\n#define RZ_OUT       /* parameter is written, not read */\n#define RZ_INOUT     /* parameter is read and written */\n#define RZ_OWN       /* pointer ownership is transferred */\n#define RZ_BORROW    /* pointer ownership is not transferred, it must not be freed by the receiver */\n#define RZ_NONNULL   /* pointer cannot be null */\n#define RZ_NULLABLE  /* pointer can be null */\n#define RZ_DEPRECATE /* should not be used in new code and should/will be removed in the future */\n```\n\n### Usage of Modifiers\n\nMost of these modifiers are self-explanatory, and you can see brief explanations in the comments. However, `RZ_OWN` and `RZ_BORROW` can be a bit tricky for new developers.\n\nSometimes it may not be immediately clear whether the object you are getting from a function shall be freed or not.\nRizin uses `RZ_OWN` and `RZ_BORROW` to indicate pointer ownership,\nso you don't have to read complicated function definitions to know whether they should still free objects or not.\n\nYou can use the two modifiers in two places, and their explanations are as follows:\n\n- **Before the return type of a function**:\n  - `RZ_OWN`: The ownership of the returned object is transferred to the caller. The caller *owns* the object, so it must free it (or ensure that something else frees it).\n  - `RZ_BORROW`: The ownership of the returned object is not transferred. The caller can use the object, but it does not own it, so it should not free it.\n- **Before the parameter of a function**:\n  - `RZ_OWN`: The ownership of the passed argument is transferred to the callee. The callee now owns the object and it is its duty to free it (or ensure that something else frees it). In any case, the caller should not care anymore about freeing that passed object.\n  - `RZ_BORROW`: The ownership of the passed argument is *not* transferred to the callee, which can use it but it should not free it. After calling this function, the caller still owns the passed object and it should ensure that at some point it is freed.\n\n### Guidelines for Functions\n\n#### Functions Returning Pointers\n- **Arguments (Pointers)**: Must have both ownership and nullability definitions specified.\n- **Return Value**: Must have ownership defined and, unless otherwise specified, it is assumed to be `RZ_NULLABLE`.\n\n#### Functions Handling `NULL` Pointers\n- **Arguments (Pointers)**: Must be marked with `RZ_NULLABLE`.\n- **Assertions**: There should not be any assertions on these arguments as the function is expected to handle `NULL` pointers.\n\n### Examples:\n\n```c\nRZ_OWN MyString *capitalize_str(RZ_BORROW char *s) {\n  MyString *m = RZ_NEWS(MyString);\n  m->s = strdup(s);\n  capitalize(m->s);\n  return m;\n}\n\nint main() {\n  char *s = rz_str_dup(\"Hello World\");\n  MyString *m = capitalize_str(s);\n  // s was RZ_BORROW, so main MUST free it\n  free(s);\n  // ... use m ....\n  // m was RZ_OWN, so main now has to free it\n  my_string_free(m);\n}\n```\n\n```c\nRZ_BORROW MyString *capitalize_str(RZ_BORROW MyFile *f, RZ_OWN char *s) {\n  MyString *m = RZ_NEWS(MyString);\n  m->s = s;\n  capitalize(m->s);\n  f->m = m;\n  return m;\n}\n\nint main() {\n  char *s = strdup(\"Hello World\");\n  MyFile *f = create_my_file();\n  MyString *m = capitalize_str(f, s);\n  // s was RZ_OWN, so main does not need to free it. s is now owned by `m`\n  // ... use m ....\n  // m was RZ_BORROW, so main is just borrowing it from `f`, and it does not have to free it.\n  my_file_free(f);\n  // f was created by main and never transferred to anything else, so main needs to free it.\n}\n```\n\n- You should use these modifiers consistently in both function definition and declaration.\n- You should use these modifiers when and only when it makes sense. For example, if your function returns `const char *`, the caller should not free it because of the `const`. So specifying `RZ_BORROW` in this case is probably redundant.\n- Since they are used as indications to developers with no special compiler-time restrictions, there is no good way to check if you have used them correctly.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 2.828125,
          "content": "# rizin docker\n# ========\n#\n# Requires 400MB of free disk space\n#\n# Build docker image with:\n# $ docker build -t rizin:latest .\n# To enable rz-asm plugins based on binutils, pass '--build-arg with_ARCH_as=1' to the build command.\n# Supported ARCHs are arm32, arm64, ppc. Each ARCH should be passed in a separate '--build-arg'.\n#\n# Run the docker image:\n# $ docker images\n# $ export DOCKER_IMAGE_ID=$(docker images --format '{{.ID}}' -f 'label=rizin')\n# $ docker run -ti --cap-drop=ALL rizin:latest\n#\n# Once you quit the bash session get the container id with:\n# $ docker ps -a | grep bash\n#\n# To get into that shell again just type:\n# $ docker start -ai <containedid>\n#\n# To share those images:\n# $ docker export <containerid> | xz > container.xz\n# $ xz -d < container.xz | docker import -\n#\n#\n# If you willing to debug a program within Docker, you should run it with CAP_SYS_PTRACE:\n#\n# $ docker run -it --cap-drop=ALL --cap-add=SYS_PTRACE rizin:latest\n# $ rizin -d /bin/true\n#\n\nFROM debian:10\n\n# rz-pipe python version\nARG RZ_PIPE_PY_VERSION=master\n# rz-ghidra version\nARG RZ_GHIDRA_VERSION=dev\n\nARG with_arm32_as\nARG with_arm64_as\nARG with_ppc_as\n\nENV RZ_PIPE_PY_VERSION ${RZ_PIPE_PY_VERSION}\nENV RZ_GHIDRA_VERSION ${RZ_GHIDRA_VERSION}\n\nRUN echo -e \"Building versions:\\n\\\n\tRZ_PIPE_PY_VERSION=${RZ_PIPE_PY_VERSION}\\\n\tRZ_GHIDRA_VERSION=${RZ_GHIDRA_VERSION}\"\n\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n\tninja-build \\\n\tcmake \\\n\tgcc \\\n\tcpp \\\n\tg++ \\\n\tgit \\\n\tmake \\\n\tpkg-config \\\n\tlibc-dev-bin libc6-dev linux-libc-dev \\\n\tpython3-pip \\\n\tpython3-setuptools \\\n\tpython3-wheel \\\n\t${with_arm64_as:+binutils-aarch64-linux-gnu} \\\n\t${with_arm32_as:+binutils-arm-linux-gnueabi} \\\n\t${with_ppc_as:+binutils-powerpc64le-linux-gnu}\n\nRUN pip3 install meson tomli\n\n# Build rizin in a volume to minimize space used by build\nCOPY . /tmp/rizin/\n\nWORKDIR /tmp/rizin\nRUN meson setup --prefix=/usr -Dinstall_sigdb=true /tmp/build && \\\n\tmeson compile -C /tmp/build && \\\n\tmeson install --destdir /tmp/rizin-install -C /tmp/build\n\nWORKDIR /tmp\nRUN git clone -b \"$RZ_PIPE_PY_VERSION\" https://github.com/rizinorg/rz-pipe\nRUN pip3 install --root=/tmp/rizin-install ./rz-pipe/python\n\nWORKDIR /tmp\nRUN git clone --recurse-submodules -b \"$RZ_GHIDRA_VERSION\" https://github.com/rizinorg/rz-ghidra\nWORKDIR /tmp/rz-ghidra\nRUN cmake -DCMAKE_PREFIX_PATH=/tmp/rizin-install/usr -DCMAKE_INSTALL_PREFIX=/usr -B build && cmake --build build && DESTDIR=/tmp/rizin-install cmake --build build --target install\n\nFROM debian:10\nENV RZ_ARM64_AS=${with_arm64_as:+aarch64-linux-gnu-as}\nENV RZ_ARM32_AS=${with_arm32_as:+arm-linux-gnueabi-as}\nENV RZ_PPC_AS=${with_ppc_as:+powerpc64le-linux-gnu-as}\n\nRUN useradd -m rizin\nRUN apt-get update && apt-get install -y --no-install-recommends ca-certificates git python3\n\nUSER rizin\nWORKDIR /home/rizin\nENV HOME /home/rizin\n\nCOPY --from=0 /tmp/rizin-install/ /\n\nCMD [\"/bin/bash\"]\n"
        },
        {
          "name": "Doxyfile",
          "type": "blob",
          "size": 105.71484375,
          "content": "# Doxyfile 1.8.14\n\n# This file describes the settings to be used by the documentation system\n# doxygen (www.doxygen.org) for a project.\n#\n# All text after a double hash (##) is considered a comment and is placed in\n# front of the TAG it is preceding.\n#\n# All text after a single hash (#) is considered a comment and will be ignored.\n# The format is:\n# TAG = value [value, ...]\n# For lists, items can also be appended using:\n# TAG += value [value, ...]\n# Values that contain spaces should be placed between quotes (\\\" \\\").\n\n#---------------------------------------------------------------------------\n# Project related configuration options\n#---------------------------------------------------------------------------\n\n# This tag specifies the encoding used for all characters in the config file\n# that follow. The default is UTF-8 which is also the encoding used for all text\n# before the first occurrence of this tag. Doxygen uses libiconv (or the iconv\n# built into libc) for the transcoding. See\n# https://www.gnu.org/software/libiconv/ for the list of possible encodings.\n# The default value is: UTF-8.\n\nDOXYFILE_ENCODING      = UTF-8\n\n# The PROJECT_NAME tag is a single word (or a sequence of words surrounded by\n# double-quotes, unless you are using Doxywizard) that should identify the\n# project for which the documentation is generated. This name is used in the\n# title of most generated pages and in a few other places.\n# The default value is: My Project.\n\nPROJECT_NAME           = Rizin\n\n# The PROJECT_NUMBER tag can be used to enter a project or revision number. This\n# could be handy for archiving the generated documentation or if some version\n# control system is used.\n\nPROJECT_NUMBER         =\n\n# Using the PROJECT_BRIEF tag one can provide an optional one line description\n# for a project that appears at the top of each page and should give viewer a\n# quick idea about the purpose of the project. Keep the description short.\n\nPROJECT_BRIEF          = \"unix-like reverse engineering framework and cli tools\"\n\n# With the PROJECT_LOGO tag one can specify a logo or an icon that is included\n# in the documentation. The maximum height of the logo should not exceed 55\n# pixels and the maximum width should not exceed 200 pixels. Doxygen will copy\n# the logo to the output directory.\n\n#PROJECT_LOGO           = doc/images/rizin.svg\n\n# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) path\n# into which the generated documentation will be written. If a relative path is\n# entered, it will be relative to the location where doxygen was started. If\n# left blank the current directory will be used.\n\nOUTPUT_DIRECTORY       = doc/doxygen\n\n# If the CREATE_SUBDIRS tag is set to YES then doxygen will create 4096 sub-\n# directories (in 2 levels) under the output directory of each output format and\n# will distribute the generated files over these directories. Enabling this\n# option can be useful when feeding doxygen a huge amount of source files, where\n# putting all generated files in the same directory would otherwise causes\n# performance problems for the file system.\n# The default value is: NO.\n\nCREATE_SUBDIRS         = NO\n\n# If the ALLOW_UNICODE_NAMES tag is set to YES, doxygen will allow non-ASCII\n# characters to appear in the names of generated files. If set to NO, non-ASCII\n# characters will be escaped, for example _xE3_x81_x84 will be used for Unicode\n# U+3044.\n# The default value is: NO.\n\nALLOW_UNICODE_NAMES    = NO\n\n# The OUTPUT_LANGUAGE tag is used to specify the language in which all\n# documentation generated by doxygen is written. Doxygen will use this\n# information to generate all constant output in the proper language.\n# Possible values are: Afrikaans, Arabic, Armenian, Brazilian, Catalan, Chinese,\n# Chinese-Traditional, Croatian, Czech, Danish, Dutch, English (United States),\n# Esperanto, Farsi (Persian), Finnish, French, German, Greek, Hungarian,\n# Indonesian, Italian, Japanese, Japanese-en (Japanese with English messages),\n# Korean, Korean-en (Korean with English messages), Latvian, Lithuanian,\n# Macedonian, Norwegian, Persian (Farsi), Polish, Portuguese, Romanian, Russian,\n# Serbian, Serbian-Cyrillic, Slovak, Slovene, Spanish, Swedish, Turkish,\n# Ukrainian and Vietnamese.\n# The default value is: English.\n\nOUTPUT_LANGUAGE        = English\n\n# If the BRIEF_MEMBER_DESC tag is set to YES, doxygen will include brief member\n# descriptions after the members that are listed in the file and class\n# documentation (similar to Javadoc). Set to NO to disable this.\n# The default value is: YES.\n\nBRIEF_MEMBER_DESC      = YES\n\n# If the REPEAT_BRIEF tag is set to YES, doxygen will prepend the brief\n# description of a member or function before the detailed description\n#\n# Note: If both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the\n# brief descriptions will be completely suppressed.\n# The default value is: YES.\n\nREPEAT_BRIEF           = YES\n\n# This tag implements a quasi-intelligent brief description abbreviator that is\n# used to form the text in various listings. Each string in this list, if found\n# as the leading text of the brief description, will be stripped from the text\n# and the result, after processing the whole list, is used as the annotated\n# text. Otherwise, the brief description is used as-is. If left blank, the\n# following values are used ($name is automatically replaced with the name of\n# the entity):The $name class, The $name widget, The $name file, is, provides,\n# specifies, contains, represents, a, an and the.\n\nABBREVIATE_BRIEF       = \"The $name class\" \\\n                         \"The $name widget\" \\\n                         \"The $name file\" \\\n                         is \\\n                         provides \\\n                         specifies \\\n                         contains \\\n                         represents \\\n                         a \\\n                         an \\\n                         the\n\n# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then\n# doxygen will generate a detailed section even if there is only a brief\n# description.\n# The default value is: NO.\n\nALWAYS_DETAILED_SEC    = NO\n\n# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all\n# inherited members of a class in the documentation of that class as if those\n# members were ordinary class members. Constructors, destructors and assignment\n# operators of the base classes will not be shown.\n# The default value is: NO.\n\nINLINE_INHERITED_MEMB  = NO\n\n# If the FULL_PATH_NAMES tag is set to YES, doxygen will prepend the full path\n# before files name in the file list and in the header files. If set to NO the\n# shortest path that makes the file name unique will be used\n# The default value is: YES.\n\nFULL_PATH_NAMES        = YES\n\n# The STRIP_FROM_PATH tag can be used to strip a user-defined part of the path.\n# Stripping is only done if one of the specified strings matches the left-hand\n# part of the path. The tag can be used to show relative paths in the file list.\n# If left blank the directory from which doxygen is run is used as the path to\n# strip.\n#\n# Note that you can specify absolute paths here, but also relative paths, which\n# will be relative from the directory where doxygen is started.\n# This tag requires that the tag FULL_PATH_NAMES is set to YES.\n\nSTRIP_FROM_PATH        =\n\n# The STRIP_FROM_INC_PATH tag can be used to strip a user-defined part of the\n# path mentioned in the documentation of a class, which tells the reader which\n# header file to include in order to use a class. If left blank only the name of\n# the header file containing the class definition is used. Otherwise one should\n# specify the list of include paths that are normally passed to the compiler\n# using the -I flag.\n\nSTRIP_FROM_INC_PATH    =\n\n# If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter (but\n# less readable) file names. This can be useful is your file systems doesn't\n# support long names like on DOS, Mac, or CD-ROM.\n# The default value is: NO.\n\nSHORT_NAMES            = NO\n\n# If the JAVADOC_AUTOBRIEF tag is set to YES then doxygen will interpret the\n# first line (until the first dot) of a Javadoc-style comment as the brief\n# description. If set to NO, the Javadoc-style will behave just like regular Qt-\n# style comments (thus requiring an explicit @brief command for a brief\n# description.)\n# The default value is: NO.\n\nJAVADOC_AUTOBRIEF      = NO\n\n# If the QT_AUTOBRIEF tag is set to YES then doxygen will interpret the first\n# line (until the first dot) of a Qt-style comment as the brief description. If\n# set to NO, the Qt-style will behave just like regular Qt-style comments (thus\n# requiring an explicit \\brief command for a brief description.)\n# The default value is: NO.\n\nQT_AUTOBRIEF           = NO\n\n# The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make doxygen treat a\n# multi-line C++ special comment block (i.e. a block of //! or /// comments) as\n# a brief description. This used to be the default behavior. The new default is\n# to treat a multi-line C++ comment block as a detailed description. Set this\n# tag to YES if you prefer the old behavior instead.\n#\n# Note that setting this tag to YES also means that rational rose comments are\n# not recognized any more.\n# The default value is: NO.\n\nMULTILINE_CPP_IS_BRIEF = NO\n\n# If the INHERIT_DOCS tag is set to YES then an undocumented member inherits the\n# documentation from any documented member that it re-implements.\n# The default value is: YES.\n\nINHERIT_DOCS           = YES\n\n# If the SEPARATE_MEMBER_PAGES tag is set to YES then doxygen will produce a new\n# page for each member. If set to NO, the documentation of a member will be part\n# of the file/class/namespace that contains it.\n# The default value is: NO.\n\nSEPARATE_MEMBER_PAGES  = NO\n\n# The TAB_SIZE tag can be used to set the number of spaces in a tab. Doxygen\n# uses this value to replace tabs by spaces in code fragments.\n# Minimum value: 1, maximum value: 16, default value: 4.\n\nTAB_SIZE               = 4\n\n# This tag can be used to specify a number of aliases that act as commands in\n# the documentation. An alias has the form:\n# name=value\n# For example adding\n# \"sideeffect=@par Side Effects:\\n\"\n# will allow you to put the command \\sideeffect (or @sideeffect) in the\n# documentation, which will result in a user-defined paragraph with heading\n# \"Side Effects:\". You can put \\n's in the value part of an alias to insert\n# newlines (in the resulting output). You can put ^^ in the value part of an\n# alias to insert a newline as if a physical newline was in the original file.\n\nALIASES                =\n\n# This tag can be used to specify a number of word-keyword mappings (TCL only).\n# A mapping has the form \"name=value\". For example adding \"class=itcl::class\"\n# will allow you to use the command class in the itcl::class meaning.\n\nTCL_SUBST              =\n\n# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C sources\n# only. Doxygen will then generate output that is more tailored for C. For\n# instance, some of the names that are used will be different. The list of all\n# members will be omitted, etc.\n# The default value is: NO.\n\nOPTIMIZE_OUTPUT_FOR_C  = NO\n\n# Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java or\n# Python sources only. Doxygen will then generate output that is more tailored\n# for that language. For instance, namespaces will be presented as packages,\n# qualified scopes will look different, etc.\n# The default value is: NO.\n\nOPTIMIZE_OUTPUT_JAVA   = NO\n\n# Set the OPTIMIZE_FOR_FORTRAN tag to YES if your project consists of Fortran\n# sources. Doxygen will then generate output that is tailored for Fortran.\n# The default value is: NO.\n\nOPTIMIZE_FOR_FORTRAN   = NO\n\n# Set the OPTIMIZE_OUTPUT_VHDL tag to YES if your project consists of VHDL\n# sources. Doxygen will then generate output that is tailored for VHDL.\n# The default value is: NO.\n\nOPTIMIZE_OUTPUT_VHDL   = NO\n\n# Doxygen selects the parser to use depending on the extension of the files it\n# parses. With this tag you can assign which parser to use for a given\n# extension. Doxygen has a built-in mapping, but you can override or extend it\n# using this tag. The format is ext=language, where ext is a file extension, and\n# language is one of the parsers supported by doxygen: IDL, Java, Javascript,\n# C#, C, C++, D, PHP, Objective-C, Python, Fortran (fixed format Fortran:\n# FortranFixed, free formatted Fortran: FortranFree, unknown formatted Fortran:\n# Fortran. In the later case the parser tries to guess whether the code is fixed\n# or free formatted code, this is the default for Fortran type files), VHDL. For\n# instance to make doxygen treat .inc files as Fortran files (default is PHP),\n# and .f files as C (default is Fortran), use: inc=Fortran f=C.\n#\n# Note: For files without extension you can use no_extension as a placeholder.\n#\n# Note that for custom extensions you also need to set FILE_PATTERNS otherwise\n# the files are not read by doxygen.\n\nEXTENSION_MAPPING      =\n\n# If the MARKDOWN_SUPPORT tag is enabled then doxygen pre-processes all comments\n# according to the Markdown format, which allows for more readable\n# documentation. See http://daringfireball.net/projects/markdown/ for details.\n# The output of markdown processing is further processed by doxygen, so you can\n# mix doxygen, HTML, and XML commands with Markdown formatting. Disable only in\n# case of backward compatibilities issues.\n# The default value is: YES.\n\nMARKDOWN_SUPPORT       = YES\n\n# When the TOC_INCLUDE_HEADINGS tag is set to a non-zero value, all headings up\n# to that level are automatically included in the table of contents, even if\n# they do not have an id attribute.\n# Note: This feature currently applies only to Markdown headings.\n# Minimum value: 0, maximum value: 99, default value: 0.\n# This tag requires that the tag MARKDOWN_SUPPORT is set to YES.\n\nTOC_INCLUDE_HEADINGS   = 0\n\n# When enabled doxygen tries to link words that correspond to documented\n# classes, or namespaces to their corresponding documentation. Such a link can\n# be prevented in individual cases by putting a % sign in front of the word or\n# globally by setting AUTOLINK_SUPPORT to NO.\n# The default value is: YES.\n\nAUTOLINK_SUPPORT       = YES\n\n# If you use STL classes (i.e. std::string, std::vector, etc.) but do not want\n# to include (a tag file for) the STL sources as input, then you should set this\n# tag to YES in order to let doxygen match functions declarations and\n# definitions whose arguments contain STL classes (e.g. func(std::string);\n# versus func(std::string) {}). This also make the inheritance and collaboration\n# diagrams that involve STL classes more complete and accurate.\n# The default value is: NO.\n\nBUILTIN_STL_SUPPORT    = NO\n\n# If you use Microsoft's C++/CLI language, you should set this option to YES to\n# enable parsing support.\n# The default value is: NO.\n\nCPP_CLI_SUPPORT        = NO\n\n# Set the SIP_SUPPORT tag to YES if your project consists of sip (see:\n# https://www.riverbankcomputing.com/software/sip/intro) sources only. Doxygen\n# will parse them like normal C++ but will assume all classes use public instead\n# of private inheritance when no explicit protection keyword is present.\n# The default value is: NO.\n\nSIP_SUPPORT            = NO\n\n# For Microsoft's IDL there are propget and propput attributes to indicate\n# getter and setter methods for a property. Setting this option to YES will make\n# doxygen to replace the get and set methods by a property in the documentation.\n# This will only work if the methods are indeed getting or setting a simple\n# type. If this is not the case, or you want to show the methods anyway, you\n# should set this option to NO.\n# The default value is: YES.\n\nIDL_PROPERTY_SUPPORT   = YES\n\n# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC\n# tag is set to YES then doxygen will reuse the documentation of the first\n# member in the group (if any) for the other members of the group. By default\n# all members of a group must be documented explicitly.\n# The default value is: NO.\n\nDISTRIBUTE_GROUP_DOC   = NO\n\n# If one adds a struct or class to a group and this option is enabled, then also\n# any nested class or struct is added to the same group. By default this option\n# is disabled and one has to add nested compounds explicitly via \\ingroup.\n# The default value is: NO.\n\nGROUP_NESTED_COMPOUNDS = NO\n\n# Set the SUBGROUPING tag to YES to allow class member groups of the same type\n# (for instance a group of public functions) to be put as a subgroup of that\n# type (e.g. under the Public Functions section). Set it to NO to prevent\n# subgrouping. Alternatively, this can be done per class using the\n# \\nosubgrouping command.\n# The default value is: YES.\n\nSUBGROUPING            = YES\n\n# When the INLINE_GROUPED_CLASSES tag is set to YES, classes, structs and unions\n# are shown inside the group in which they are included (e.g. using \\ingroup)\n# instead of on a separate page (for HTML and Man pages) or section (for LaTeX\n# and RTF).\n#\n# Note that this feature does not work in combination with\n# SEPARATE_MEMBER_PAGES.\n# The default value is: NO.\n\nINLINE_GROUPED_CLASSES = NO\n\n# When the INLINE_SIMPLE_STRUCTS tag is set to YES, structs, classes, and unions\n# with only public data fields or simple typedef fields will be shown inline in\n# the documentation of the scope in which they are defined (i.e. file,\n# namespace, or group documentation), provided this scope is documented. If set\n# to NO, structs, classes, and unions are shown on a separate page (for HTML and\n# Man pages) or section (for LaTeX and RTF).\n# The default value is: NO.\n\nINLINE_SIMPLE_STRUCTS  = NO\n\n# When TYPEDEF_HIDES_STRUCT tag is enabled, a typedef of a struct, union, or\n# enum is documented as struct, union, or enum with the name of the typedef. So\n# typedef struct TypeS {} TypeT, will appear in the documentation as a struct\n# with name TypeT. When disabled the typedef will appear as a member of a file,\n# namespace, or class. And the struct will be named TypeS. This can typically be\n# useful for C code in case the coding convention dictates that all compound\n# types are typedef'ed and only the typedef is referenced, never the tag name.\n# The default value is: NO.\n\nTYPEDEF_HIDES_STRUCT   = NO\n\n# The size of the symbol lookup cache can be set using LOOKUP_CACHE_SIZE. This\n# cache is used to resolve symbols given their name and scope. Since this can be\n# an expensive process and often the same symbol appears multiple times in the\n# code, doxygen keeps a cache of pre-resolved symbols. If the cache is too small\n# doxygen will become slower. If the cache is too large, memory is wasted. The\n# cache size is given by this formula: 2^(16+LOOKUP_CACHE_SIZE). The valid range\n# is 0..9, the default is 0, corresponding to a cache size of 2^16=65536\n# symbols. At the end of a run doxygen will report the cache usage and suggest\n# the optimal cache size from a speed point of view.\n# Minimum value: 0, maximum value: 9, default value: 0.\n\nLOOKUP_CACHE_SIZE      = 1\n\n#---------------------------------------------------------------------------\n# Build related configuration options\n#---------------------------------------------------------------------------\n\n# If the EXTRACT_ALL tag is set to YES, doxygen will assume all entities in\n# documentation are documented, even if no documentation was available. Private\n# class members and static file members will be hidden unless the\n# EXTRACT_PRIVATE respectively EXTRACT_STATIC tags are set to YES.\n# Note: This will also disable the warnings about undocumented members that are\n# normally produced when WARNINGS is set to YES.\n# The default value is: NO.\n\nEXTRACT_ALL            = YES\n\n# If the EXTRACT_PRIVATE tag is set to YES, all private members of a class will\n# be included in the documentation.\n# The default value is: NO.\n\nEXTRACT_PRIVATE        = YES\n\n# If the EXTRACT_PACKAGE tag is set to YES, all members with package or internal\n# scope will be included in the documentation.\n# The default value is: NO.\n\nEXTRACT_PACKAGE        = YES\n\n# If the EXTRACT_STATIC tag is set to YES, all static members of a file will be\n# included in the documentation.\n# The default value is: NO.\n\nEXTRACT_STATIC         = YES\n\n# If the EXTRACT_LOCAL_CLASSES tag is set to YES, classes (and structs) defined\n# locally in source files will be included in the documentation. If set to NO,\n# only classes defined in header files are included. Does not have any effect\n# for Java sources.\n# The default value is: YES.\n\nEXTRACT_LOCAL_CLASSES  = YES\n\n# This flag is only useful for Objective-C code. If set to YES, local methods,\n# which are defined in the implementation section but not in the interface are\n# included in the documentation. If set to NO, only methods in the interface are\n# included.\n# The default value is: NO.\n\nEXTRACT_LOCAL_METHODS  = NO\n\n# If this flag is set to YES, the members of anonymous namespaces will be\n# extracted and appear in the documentation as a namespace called\n# 'anonymous_namespace{file}', where file will be replaced with the base name of\n# the file that contains the anonymous namespace. By default anonymous namespace\n# are hidden.\n# The default value is: NO.\n\nEXTRACT_ANON_NSPACES   = NO\n\n# If the HIDE_UNDOC_MEMBERS tag is set to YES, doxygen will hide all\n# undocumented members inside documented classes or files. If set to NO these\n# members will be included in the various overviews, but no documentation\n# section is generated. This option has no effect if EXTRACT_ALL is enabled.\n# The default value is: NO.\n\nHIDE_UNDOC_MEMBERS     = NO\n\n# If the HIDE_UNDOC_CLASSES tag is set to YES, doxygen will hide all\n# undocumented classes that are normally visible in the class hierarchy. If set\n# to NO, these classes will be included in the various overviews. This option\n# has no effect if EXTRACT_ALL is enabled.\n# The default value is: NO.\n\nHIDE_UNDOC_CLASSES     = NO\n\n# If the HIDE_FRIEND_COMPOUNDS tag is set to YES, doxygen will hide all friend\n# (class|struct|union) declarations. If set to NO, these declarations will be\n# included in the documentation.\n# The default value is: NO.\n\nHIDE_FRIEND_COMPOUNDS  = NO\n\n# If the HIDE_IN_BODY_DOCS tag is set to YES, doxygen will hide any\n# documentation blocks found inside the body of a function. If set to NO, these\n# blocks will be appended to the function's detailed documentation block.\n# The default value is: NO.\n\nHIDE_IN_BODY_DOCS      = NO\n\n# The INTERNAL_DOCS tag determines if documentation that is typed after a\n# \\internal command is included. If the tag is set to NO then the documentation\n# will be excluded. Set it to YES to include the internal documentation.\n# The default value is: NO.\n\nINTERNAL_DOCS          = NO\n\n# If the CASE_SENSE_NAMES tag is set to NO then doxygen will only generate file\n# names in lower-case letters. If set to YES, upper-case letters are also\n# allowed. This is useful if you have classes or files whose names only differ\n# in case and if your file system supports case sensitive file names. Windows\n# and Mac users are advised to set this option to NO.\n# The default value is: system dependent.\n\nCASE_SENSE_NAMES       = YES\n\n# If the HIDE_SCOPE_NAMES tag is set to NO then doxygen will show members with\n# their full class and namespace scopes in the documentation. If set to YES, the\n# scope will be hidden.\n# The default value is: NO.\n\nHIDE_SCOPE_NAMES       = NO\n\n# If the HIDE_COMPOUND_REFERENCE tag is set to NO (default) then doxygen will\n# append additional text to a page's title, such as Class Reference. If set to\n# YES the compound reference will be hidden.\n# The default value is: NO.\n\nHIDE_COMPOUND_REFERENCE= NO\n\n# If the SHOW_INCLUDE_FILES tag is set to YES then doxygen will put a list of\n# the files that are included by a file in the documentation of that file.\n# The default value is: YES.\n\nSHOW_INCLUDE_FILES     = YES\n\n# If the SHOW_GROUPED_MEMB_INC tag is set to YES then Doxygen will add for each\n# grouped member an include statement to the documentation, telling the reader\n# which file to include in order to use the member.\n# The default value is: NO.\n\nSHOW_GROUPED_MEMB_INC  = NO\n\n# If the FORCE_LOCAL_INCLUDES tag is set to YES then doxygen will list include\n# files with double quotes in the documentation rather than with sharp brackets.\n# The default value is: NO.\n\nFORCE_LOCAL_INCLUDES   = NO\n\n# If the INLINE_INFO tag is set to YES then a tag [inline] is inserted in the\n# documentation for inline members.\n# The default value is: YES.\n\nINLINE_INFO            = YES\n\n# If the SORT_MEMBER_DOCS tag is set to YES then doxygen will sort the\n# (detailed) documentation of file and class members alphabetically by member\n# name. If set to NO, the members will appear in declaration order.\n# The default value is: YES.\n\nSORT_MEMBER_DOCS       = YES\n\n# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the brief\n# descriptions of file, namespace and class members alphabetically by member\n# name. If set to NO, the members will appear in declaration order. Note that\n# this will also influence the order of the classes in the class list.\n# The default value is: NO.\n\nSORT_BRIEF_DOCS        = NO\n\n# If the SORT_MEMBERS_CTORS_1ST tag is set to YES then doxygen will sort the\n# (brief and detailed) documentation of class members so that constructors and\n# destructors are listed first. If set to NO the constructors will appear in the\n# respective orders defined by SORT_BRIEF_DOCS and SORT_MEMBER_DOCS.\n# Note: If SORT_BRIEF_DOCS is set to NO this option is ignored for sorting brief\n# member documentation.\n# Note: If SORT_MEMBER_DOCS is set to NO this option is ignored for sorting\n# detailed member documentation.\n# The default value is: NO.\n\nSORT_MEMBERS_CTORS_1ST = NO\n\n# If the SORT_GROUP_NAMES tag is set to YES then doxygen will sort the hierarchy\n# of group names into alphabetical order. If set to NO the group names will\n# appear in their defined order.\n# The default value is: NO.\n\nSORT_GROUP_NAMES       = NO\n\n# If the SORT_BY_SCOPE_NAME tag is set to YES, the class list will be sorted by\n# fully-qualified names, including namespaces. If set to NO, the class list will\n# be sorted only by class name, not including the namespace part.\n# Note: This option is not very useful if HIDE_SCOPE_NAMES is set to YES.\n# Note: This option applies only to the class list, not to the alphabetical\n# list.\n# The default value is: NO.\n\nSORT_BY_SCOPE_NAME     = NO\n\n# If the STRICT_PROTO_MATCHING option is enabled and doxygen fails to do proper\n# type resolution of all parameters of a function it will reject a match between\n# the prototype and the implementation of a member function even if there is\n# only one candidate or it is obvious which candidate to choose by doing a\n# simple string match. By disabling STRICT_PROTO_MATCHING doxygen will still\n# accept a match between prototype and implementation in such cases.\n# The default value is: NO.\n\nSTRICT_PROTO_MATCHING  = NO\n\n# The GENERATE_TODOLIST tag can be used to enable (YES) or disable (NO) the todo\n# list. This list is created by putting \\todo commands in the documentation.\n# The default value is: YES.\n\nGENERATE_TODOLIST      = YES\n\n# The GENERATE_TESTLIST tag can be used to enable (YES) or disable (NO) the test\n# list. This list is created by putting \\test commands in the documentation.\n# The default value is: YES.\n\nGENERATE_TESTLIST      = YES\n\n# The GENERATE_BUGLIST tag can be used to enable (YES) or disable (NO) the bug\n# list. This list is created by putting \\bug commands in the documentation.\n# The default value is: YES.\n\nGENERATE_BUGLIST       = YES\n\n# The GENERATE_DEPRECATEDLIST tag can be used to enable (YES) or disable (NO)\n# the deprecated list. This list is created by putting \\deprecated commands in\n# the documentation.\n# The default value is: YES.\n\nGENERATE_DEPRECATEDLIST= YES\n\n# The ENABLED_SECTIONS tag can be used to enable conditional documentation\n# sections, marked by \\if <section_label> ... \\endif and \\cond <section_label>\n# ... \\endcond blocks.\n\nENABLED_SECTIONS       =\n\n# The MAX_INITIALIZER_LINES tag determines the maximum number of lines that the\n# initial value of a variable or macro / define can have for it to appear in the\n# documentation. If the initializer consists of more lines than specified here\n# it will be hidden. Use a value of 0 to hide initializers completely. The\n# appearance of the value of individual variables and macros / defines can be\n# controlled using \\showinitializer or \\hideinitializer command in the\n# documentation regardless of this setting.\n# Minimum value: 0, maximum value: 10000, default value: 30.\n\nMAX_INITIALIZER_LINES  = 30\n\n# Set the SHOW_USED_FILES tag to NO to disable the list of files generated at\n# the bottom of the documentation of classes and structs. If set to YES, the\n# list will mention the files that were used to generate the documentation.\n# The default value is: YES.\n\nSHOW_USED_FILES        = YES\n\n# Set the SHOW_FILES tag to NO to disable the generation of the Files page. This\n# will remove the Files entry from the Quick Index and from the Folder Tree View\n# (if specified).\n# The default value is: YES.\n\nSHOW_FILES             = YES\n\n# Set the SHOW_NAMESPACES tag to NO to disable the generation of the Namespaces\n# page. This will remove the Namespaces entry from the Quick Index and from the\n# Folder Tree View (if specified).\n# The default value is: YES.\n\nSHOW_NAMESPACES        = YES\n\n# The FILE_VERSION_FILTER tag can be used to specify a program or script that\n# doxygen should invoke to get the current version for each file (typically from\n# the version control system). Doxygen will invoke the program by executing (via\n# popen()) the command command input-file, where command is the value of the\n# FILE_VERSION_FILTER tag, and input-file is the name of an input file provided\n# by doxygen. Whatever the program writes to standard output is used as the file\n# version. For an example see the documentation.\n\nFILE_VERSION_FILTER    =\n\n# The LAYOUT_FILE tag can be used to specify a layout file which will be parsed\n# by doxygen. The layout file controls the global structure of the generated\n# output files in an output format independent way. To create the layout file\n# that represents doxygen's defaults, run doxygen with the -l option. You can\n# optionally specify a file name after the option, if omitted DoxygenLayout.xml\n# will be used as the name of the layout file.\n#\n# Note that if you run doxygen from a directory containing a file called\n# DoxygenLayout.xml, doxygen will parse it automatically even if the LAYOUT_FILE\n# tag is left empty.\n\nLAYOUT_FILE            =\n\n# The CITE_BIB_FILES tag can be used to specify one or more bib files containing\n# the reference definitions. This must be a list of .bib files. The .bib\n# extension is automatically appended if omitted. This requires the bibtex tool\n# to be installed. See also https://en.wikipedia.org/wiki/BibTeX for more info.\n# For LaTeX the style of the bibliography can be controlled using\n# LATEX_BIB_STYLE. To use this feature you need bibtex and perl available in the\n# search path. See also \\cite for info how to create references.\n\nCITE_BIB_FILES         =\n\n#---------------------------------------------------------------------------\n# Configuration options related to warning and progress messages\n#---------------------------------------------------------------------------\n\n# The QUIET tag can be used to turn on/off the messages that are generated to\n# standard output by doxygen. If QUIET is set to YES this implies that the\n# messages are off.\n# The default value is: NO.\n\nQUIET                  = NO\n\n# The WARNINGS tag can be used to turn on/off the warning messages that are\n# generated to standard error (stderr) by doxygen. If WARNINGS is set to YES\n# this implies that the warnings are on.\n#\n# Tip: Turn warnings on while writing the documentation.\n# The default value is: YES.\n\nWARNINGS               = YES\n\n# If the WARN_IF_UNDOCUMENTED tag is set to YES then doxygen will generate\n# warnings for undocumented members. If EXTRACT_ALL is set to YES then this flag\n# will automatically be disabled.\n# The default value is: YES.\n\nWARN_IF_UNDOCUMENTED   = YES\n\n# If the WARN_IF_DOC_ERROR tag is set to YES, doxygen will generate warnings for\n# potential errors in the documentation, such as not documenting some parameters\n# in a documented function, or documenting parameters that don't exist or using\n# markup commands wrongly.\n# The default value is: YES.\n\nWARN_IF_DOC_ERROR      = YES\n\n# This WARN_NO_PARAMDOC option can be enabled to get warnings for functions that\n# are documented, but have no documentation for their parameters or return\n# value. If set to NO, doxygen will only warn about wrong or incomplete\n# parameter documentation, but not about the absence of documentation.\n# The default value is: NO.\n\nWARN_NO_PARAMDOC       = NO\n\n# If the WARN_AS_ERROR tag is set to YES then doxygen will immediately stop when\n# a warning is encountered.\n# The default value is: NO.\n\nWARN_AS_ERROR          = NO\n\n# The WARN_FORMAT tag determines the format of the warning messages that doxygen\n# can produce. The string should contain the $file, $line, and $text tags, which\n# will be replaced by the file and line number from which the warning originated\n# and the warning text. Optionally the format may contain $version, which will\n# be replaced by the version of the file (if it could be obtained via\n# FILE_VERSION_FILTER)\n# The default value is: $file:$line: $text.\n\nWARN_FORMAT            = \"$file:$line: $text\"\n\n# The WARN_LOGFILE tag can be used to specify a file to which warning and error\n# messages should be written. If left blank the output is written to standard\n# error (stderr).\n\nWARN_LOGFILE           =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the input files\n#---------------------------------------------------------------------------\n\n# The INPUT tag is used to specify the files and/or directories that contain\n# documented source files. You may enter file names like myfile.cpp or\n# directories like /usr/src/myproject. Separate the files or directories with\n# spaces. See also FILE_PATTERNS and EXTENSION_MAPPING\n# Note: If this tag is empty the current directory is searched.\n\nINPUT =\n\n# This tag can be used to specify the character encoding of the source files\n# that doxygen parses. Internally doxygen uses the UTF-8 encoding. Doxygen uses\n# libiconv (or the iconv built into libc) for the transcoding. See the libiconv\n# documentation (see: https://www.gnu.org/software/libiconv/) for the list of\n# possible encodings.\n# The default value is: UTF-8.\n\nINPUT_ENCODING         = UTF-8\n\n# If the value of the INPUT tag contains directories, you can use the\n# FILE_PATTERNS tag to specify one or more wildcard patterns (like *.cpp and\n# *.h) to filter out the source-files in the directories.\n#\n# Note that for custom extensions or not directly supported extensions you also\n# need to set EXTENSION_MAPPING for the extension otherwise the files are not\n# read by doxygen.\n#\n# If left blank the following patterns are tested:*.c, *.cc, *.cxx, *.cpp,\n# *.c++, *.java, *.ii, *.ixx, *.ipp, *.i++, *.inl, *.idl, *.ddl, *.odl, *.h,\n# *.hh, *.hxx, *.hpp, *.h++, *.cs, *.d, *.php, *.php4, *.php5, *.phtml, *.inc,\n# *.m, *.markdown, *.md, *.mm, *.dox, *.py, *.pyw, *.f90, *.f95, *.f03, *.f08,\n# *.f, *.for, *.tcl, *.vhd, *.vhdl, *.ucf and *.qsf.\n\nFILE_PATTERNS          = *.c \\\n                         *.cc \\\n                         *.cxx \\\n                         *.cpp \\\n                         *.c++ \\\n                         *.java \\\n                         *.ii \\\n                         *.ixx \\\n                         *.ipp \\\n                         *.i++ \\\n                         *.inl \\\n                         *.idl \\\n                         *.ddl \\\n                         *.odl \\\n                         *.h \\\n                         *.hh \\\n                         *.hxx \\\n                         *.hpp \\\n                         *.h++ \\\n                         *.cs \\\n                         *.d \\\n                         *.php \\\n                         *.php4 \\\n                         *.php5 \\\n                         *.phtml \\\n                         *.inc \\\n                         *.m \\\n                         *.markdown \\\n                         *.md \\\n                         *.mm \\\n                         *.dox \\\n                         *.py \\\n                         *.pyw \\\n                         *.f90 \\\n                         *.f95 \\\n                         *.f03 \\\n                         *.f08 \\\n                         *.f \\\n                         *.for \\\n                         *.tcl \\\n                         *.vhd \\\n                         *.vhdl \\\n                         *.ucf \\\n                         *.qsf\n\n# The RECURSIVE tag can be used to specify whether or not subdirectories should\n# be searched for input files as well.\n# The default value is: NO.\n\nRECURSIVE              = YES\n\n# The EXCLUDE tag can be used to specify files and/or directories that should be\n# excluded from the INPUT source files. This way you can easily exclude a\n# subdirectory from a directory tree whose root is specified with the INPUT tag.\n#\n# Note that relative paths are relative to the directory from which doxygen is\n# run.\n\nEXCLUDE                =\n\n# The EXCLUDE_SYMLINKS tag can be used to select whether or not files or\n# directories that are symbolic links (a Unix file system feature) are excluded\n# from the input.\n# The default value is: NO.\n\nEXCLUDE_SYMLINKS       = NO\n\n# If the value of the INPUT tag contains directories, you can use the\n# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude\n# certain files from those directories.\n#\n# Note that the wildcards are matched against the file with absolute path, so to\n# exclude all test directories for example use the pattern */test/*\n\nEXCLUDE_PATTERNS       = */test/*\n\n# The EXCLUDE_SYMBOLS tag can be used to specify one or more symbol names\n# (namespaces, classes, functions, etc.) that should be excluded from the\n# output. The symbol name can be a fully qualified name, a word, or if the\n# wildcard * is used, a substring. Examples: ANamespace, AClass,\n# AClass::ANamespace, ANamespace::*Test\n#\n# Note that the wildcards are matched against the file with absolute path, so to\n# exclude all test directories use the pattern */test/*\n\nEXCLUDE_SYMBOLS        =\n\n# The EXAMPLE_PATH tag can be used to specify one or more files or directories\n# that contain example code fragments that are included (see the \\include\n# command).\n\nEXAMPLE_PATH           =\n\n# If the value of the EXAMPLE_PATH tag contains directories, you can use the\n# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp and\n# *.h) to filter out the source-files in the directories. If left blank all\n# files are included.\n\nEXAMPLE_PATTERNS       = *\n\n# If the EXAMPLE_RECURSIVE tag is set to YES then subdirectories will be\n# searched for input files to be used with the \\include or \\dontinclude commands\n# irrespective of the value of the RECURSIVE tag.\n# The default value is: NO.\n\nEXAMPLE_RECURSIVE      = NO\n\n# The IMAGE_PATH tag can be used to specify one or more files or directories\n# that contain images that are to be included in the documentation (see the\n# \\image command).\n\nIMAGE_PATH             = doc/images\n\n# The INPUT_FILTER tag can be used to specify a program that doxygen should\n# invoke to filter for each input file. Doxygen will invoke the filter program\n# by executing (via popen()) the command:\n#\n# <filter> <input-file>\n#\n# where <filter> is the value of the INPUT_FILTER tag, and <input-file> is the\n# name of an input file. Doxygen will then use the output that the filter\n# program writes to standard output. If FILTER_PATTERNS is specified, this tag\n# will be ignored.\n#\n# Note that the filter must not add or remove lines; it is applied before the\n# code is scanned, but not when the output code is generated. If lines are added\n# or removed, the anchors will not be placed correctly.\n#\n# Note that for custom extensions or not directly supported extensions you also\n# need to set EXTENSION_MAPPING for the extension otherwise the files are not\n# properly processed by doxygen.\n\nINPUT_FILTER           =\n\n# The FILTER_PATTERNS tag can be used to specify filters on a per file pattern\n# basis. Doxygen will compare the file name with each pattern and apply the\n# filter if there is a match. The filters are a list of the form: pattern=filter\n# (like *.cpp=my_cpp_filter). See INPUT_FILTER for further information on how\n# filters are used. If the FILTER_PATTERNS tag is empty or if none of the\n# patterns match the file name, INPUT_FILTER is applied.\n#\n# Note that for custom extensions or not directly supported extensions you also\n# need to set EXTENSION_MAPPING for the extension otherwise the files are not\n# properly processed by doxygen.\n\nFILTER_PATTERNS        =\n\n# If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using\n# INPUT_FILTER) will also be used to filter the input files that are used for\n# producing the source files to browse (i.e. when SOURCE_BROWSER is set to YES).\n# The default value is: NO.\n\nFILTER_SOURCE_FILES    = NO\n\n# The FILTER_SOURCE_PATTERNS tag can be used to specify source filters per file\n# pattern. A pattern will override the setting for FILTER_PATTERN (if any) and\n# it is also possible to disable source filtering for a specific pattern using\n# *.ext= (so without naming a filter).\n# This tag requires that the tag FILTER_SOURCE_FILES is set to YES.\n\nFILTER_SOURCE_PATTERNS =\n\n# If the USE_MDFILE_AS_MAINPAGE tag refers to the name of a markdown file that\n# is part of the input, its contents will be placed on the main page\n# (index.html). This can be useful if you have a project on for instance GitHub\n# and want to reuse the introduction page also for the doxygen output.\n\nUSE_MDFILE_AS_MAINPAGE = ./README.md\n\n#---------------------------------------------------------------------------\n# Configuration options related to source browsing\n#---------------------------------------------------------------------------\n\n# If the SOURCE_BROWSER tag is set to YES then a list of source files will be\n# generated. Documented entities will be cross-referenced with these sources.\n#\n# Note: To get rid of all source code in the generated output, make sure that\n# also VERBATIM_HEADERS is set to NO.\n# The default value is: NO.\n\nSOURCE_BROWSER         = YES\n\n# Setting the INLINE_SOURCES tag to YES will include the body of functions,\n# classes and enums directly into the documentation.\n# The default value is: NO.\n\nINLINE_SOURCES         = YES\n\n# Setting the STRIP_CODE_COMMENTS tag to YES will instruct doxygen to hide any\n# special comment blocks from generated source code fragments. Normal C, C++ and\n# Fortran comments will always remain visible.\n# The default value is: YES.\n\nSTRIP_CODE_COMMENTS    = YES\n\n# If the REFERENCED_BY_RELATION tag is set to YES then for each documented\n# function all documented functions referencing it will be listed.\n# The default value is: NO.\n\nREFERENCED_BY_RELATION = YES\n\n# If the REFERENCES_RELATION tag is set to YES then for each documented function\n# all documented entities called/used by that function will be listed.\n# The default value is: NO.\n\nREFERENCES_RELATION    = YES\n\n# If the REFERENCES_LINK_SOURCE tag is set to YES and SOURCE_BROWSER tag is set\n# to YES then the hyperlinks from functions in REFERENCES_RELATION and\n# REFERENCED_BY_RELATION lists will link to the source code. Otherwise they will\n# link to the documentation.\n# The default value is: YES.\n\nREFERENCES_LINK_SOURCE = YES\n\n# If SOURCE_TOOLTIPS is enabled (the default) then hovering a hyperlink in the\n# source code will show a tooltip with additional information such as prototype,\n# brief description and links to the definition and documentation. Since this\n# will make the HTML file larger and loading of large files a bit slower, you\n# can opt to disable this feature.\n# The default value is: YES.\n# This tag requires that the tag SOURCE_BROWSER is set to YES.\n\nSOURCE_TOOLTIPS        = YES\n\n# If the USE_HTAGS tag is set to YES then the references to source code will\n# point to the HTML generated by the htags(1) tool instead of doxygen built-in\n# source browser. The htags tool is part of GNU's global source tagging system\n# (see https://www.gnu.org/software/global/global.html). You will need version\n# 4.8.6 or higher.\n#\n# To use it do the following:\n# - Install the latest version of global\n# - Enable SOURCE_BROWSER and USE_HTAGS in the config file\n# - Make sure the INPUT points to the root of the source tree\n# - Run doxygen as normal\n#\n# Doxygen will invoke htags (and that will in turn invoke gtags), so these\n# tools must be available from the command line (i.e. in the search path).\n#\n# The result: instead of the source browser generated by doxygen, the links to\n# source code will now point to the output of htags.\n# The default value is: NO.\n# This tag requires that the tag SOURCE_BROWSER is set to YES.\n\nUSE_HTAGS              = NO\n\n# If the VERBATIM_HEADERS tag is set the YES then doxygen will generate a\n# verbatim copy of the header file for each class for which an include is\n# specified. Set to NO to disable this.\n# See also: Section \\class.\n# The default value is: YES.\n\nVERBATIM_HEADERS       = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to the alphabetical class index\n#---------------------------------------------------------------------------\n\n# If the ALPHABETICAL_INDEX tag is set to YES, an alphabetical index of all\n# compounds will be generated. Enable this if the project contains a lot of\n# classes, structs, unions or interfaces.\n# The default value is: YES.\n\nALPHABETICAL_INDEX     = YES\n\n# The COLS_IN_ALPHA_INDEX tag can be used to specify the number of columns in\n# which the alphabetical index list will be split.\n# Minimum value: 1, maximum value: 20, default value: 5.\n# This tag requires that the tag ALPHABETICAL_INDEX is set to YES.\n\nCOLS_IN_ALPHA_INDEX    = 5\n\n# In case all classes in a project start with a common prefix, all classes will\n# be put under the same header in the alphabetical index. The IGNORE_PREFIX tag\n# can be used to specify a prefix (or a list of prefixes) that should be ignored\n# while generating the index headers.\n# This tag requires that the tag ALPHABETICAL_INDEX is set to YES.\n\nIGNORE_PREFIX          =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the HTML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_HTML tag is set to YES, doxygen will generate HTML output\n# The default value is: YES.\n\nGENERATE_HTML          = YES\n\n# The HTML_OUTPUT tag is used to specify where the HTML docs will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: html.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_OUTPUT            = html\n\n# The HTML_FILE_EXTENSION tag can be used to specify the file extension for each\n# generated HTML page (for example: .htm, .php, .asp).\n# The default value is: .html.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_FILE_EXTENSION    = .html\n\n# The HTML_HEADER tag can be used to specify a user-defined HTML header file for\n# each generated HTML page. If the tag is left blank doxygen will generate a\n# standard header.\n#\n# To get valid HTML the header file that includes any scripts and style sheets\n# that doxygen needs, which is dependent on the configuration options used (e.g.\n# the setting GENERATE_TREEVIEW). It is highly recommended to start with a\n# default header using\n# doxygen -w html new_header.html new_footer.html new_stylesheet.css\n# YourConfigFile\n# and then modify the file new_header.html. See also section \"Doxygen usage\"\n# for information on how to generate the default header that doxygen normally\n# uses.\n# Note: The header is subject to change so you typically have to regenerate the\n# default header when upgrading to a newer version of doxygen. For a description\n# of the possible markers and block names see the documentation.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_HEADER            =\n\n# The HTML_FOOTER tag can be used to specify a user-defined HTML footer for each\n# generated HTML page. If the tag is left blank doxygen will generate a standard\n# footer. See HTML_HEADER for more information on how to generate a default\n# footer and what special commands can be used inside the footer. See also\n# section \"Doxygen usage\" for information on how to generate the default footer\n# that doxygen normally uses.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_FOOTER            =\n\n# The HTML_STYLESHEET tag can be used to specify a user-defined cascading style\n# sheet that is used by each HTML page. It can be used to fine-tune the look of\n# the HTML output. If left blank doxygen will generate a default style sheet.\n# See also section \"Doxygen usage\" for information on how to generate the style\n# sheet that doxygen normally uses.\n# Note: It is recommended to use HTML_EXTRA_STYLESHEET instead of this tag, as\n# it is more robust and this tag (HTML_STYLESHEET) will in the future become\n# obsolete.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_STYLESHEET        =\n\n# The HTML_EXTRA_STYLESHEET tag can be used to specify additional user-defined\n# cascading style sheets that are included after the standard style sheets\n# created by doxygen. Using this option one can overrule certain style aspects.\n# This is preferred over using HTML_STYLESHEET since it does not replace the\n# standard style sheet and is therefore more robust against future updates.\n# Doxygen will copy the style sheet files to the output directory.\n# Note: The order of the extra style sheet files is of importance (e.g. the last\n# style sheet in the list overrules the setting of the previous ones in the\n# list). For an example see the documentation.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_EXTRA_STYLESHEET  =\n\n# The HTML_EXTRA_FILES tag can be used to specify one or more extra images or\n# other source files which should be copied to the HTML output directory. Note\n# that these files will be copied to the base HTML output directory. Use the\n# $relpath^ marker in the HTML_HEADER and/or HTML_FOOTER files to load these\n# files. In the HTML_STYLESHEET file, use the file name only. Also note that the\n# files will be copied as-is; there are no commands or markers available.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_EXTRA_FILES       =\n\n# The HTML_COLORSTYLE_HUE tag controls the color of the HTML output. Doxygen\n# will adjust the colors in the style sheet and background images according to\n# this color. Hue is specified as an angle on a colorwheel, see\n# https://en.wikipedia.org/wiki/Hue for more information. For instance the value\n# 0 represents red, 60 is yellow, 120 is green, 180 is cyan, 240 is blue, 300\n# purple, and 360 is red again.\n# Minimum value: 0, maximum value: 359, default value: 220.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_COLORSTYLE_HUE    = 220\n\n# The HTML_COLORSTYLE_SAT tag controls the purity (or saturation) of the colors\n# in the HTML output. For a value of 0 the output will use grayscales only. A\n# value of 255 will produce the most vivid colors.\n# Minimum value: 0, maximum value: 255, default value: 100.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_COLORSTYLE_SAT    = 100\n\n# The HTML_COLORSTYLE_GAMMA tag controls the gamma correction applied to the\n# luminance component of the colors in the HTML output. Values below 100\n# gradually make the output lighter, whereas values above 100 make the output\n# darker. The value divided by 100 is the actual gamma applied, so 80 represents\n# a gamma of 0.8, The value 220 represents a gamma of 2.2, and 100 does not\n# change the gamma.\n# Minimum value: 40, maximum value: 240, default value: 80.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_COLORSTYLE_GAMMA  = 80\n\n# If the HTML_TIMESTAMP tag is set to YES then the footer of each generated HTML\n# page will contain the date and time when the page was generated. Setting this\n# to YES can help to show when doxygen was last run and thus if the\n# documentation is up to date.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_TIMESTAMP         = NO\n\n# If the HTML_DYNAMIC_MENUS tag is set to YES then the generated HTML\n# documentation will contain a main index with vertical navigation menus that\n# are dynamically created via Javascript. If disabled, the navigation index will\n# consists of multiple levels of tabs that are statically embedded in every HTML\n# page. Disable this option to support browsers that do not have Javascript,\n# like the Qt help browser.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_DYNAMIC_MENUS     = YES\n\n# If the HTML_DYNAMIC_SECTIONS tag is set to YES then the generated HTML\n# documentation will contain sections that can be hidden and shown after the\n# page has loaded.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_DYNAMIC_SECTIONS  = NO\n\n# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of entries\n# shown in the various tree structured indices initially; the user can expand\n# and collapse entries dynamically later on. Doxygen will expand the tree to\n# such a level that at most the specified number of entries are visible (unless\n# a fully collapsed tree already exceeds this amount). So setting the number of\n# entries 1 will produce a full collapsed tree by default. 0 is a special value\n# representing an infinite number of entries and will result in a full expanded\n# tree by default.\n# Minimum value: 0, maximum value: 9999, default value: 100.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nHTML_INDEX_NUM_ENTRIES = 100\n\n# If the GENERATE_DOCSET tag is set to YES, additional index files will be\n# generated that can be used as input for Apple's Xcode 3 integrated development\n# environment (see: https://developer.apple.com/tools/xcode/), introduced with\n# OSX 10.5 (Leopard). To create a documentation set, doxygen will generate a\n# Makefile in the HTML output directory. Running make will produce the docset in\n# that directory and running make install will install the docset in\n# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find it at\n# startup. See https://developer.apple.com/tools/creatingdocsetswithdoxygen.html\n# for more information.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_DOCSET        = NO\n\n# This tag determines the name of the docset feed. A documentation feed provides\n# an umbrella under which multiple documentation sets from a single provider\n# (such as a company or product suite) can be grouped.\n# The default value is: Doxygen generated docs.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_FEEDNAME        = \"Doxygen generated docs\"\n\n# This tag specifies a string that should uniquely identify the documentation\n# set bundle. This should be a reverse domain-name style string, e.g.\n# com.mycompany.MyDocSet. Doxygen will append .docset to the name.\n# The default value is: org.doxygen.Project.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_BUNDLE_ID       = org.doxygen.Project\n\n# The DOCSET_PUBLISHER_ID tag specifies a string that should uniquely identify\n# the documentation publisher. This should be a reverse domain-name style\n# string, e.g. com.mycompany.MyDocSet.documentation.\n# The default value is: org.doxygen.Publisher.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_PUBLISHER_ID    = org.doxygen.Publisher\n\n# The DOCSET_PUBLISHER_NAME tag identifies the documentation publisher.\n# The default value is: Publisher.\n# This tag requires that the tag GENERATE_DOCSET is set to YES.\n\nDOCSET_PUBLISHER_NAME  = Publisher\n\n# If the GENERATE_HTMLHELP tag is set to YES then doxygen generates three\n# additional HTML index files: index.hhp, index.hhc, and index.hhk. The\n# index.hhp is a project file that can be read by Microsoft's HTML Help Workshop\n# (see: http://www.microsoft.com/en-us/download/details.aspx?id=21138) on\n# Windows.\n#\n# The HTML Help Workshop contains a compiler that can convert all HTML output\n# generated by doxygen into a single compiled HTML file (.chm). Compiled HTML\n# files are now used as the Windows 98 help format, and will replace the old\n# Windows help format (.hlp) on all Windows platforms in the future. Compressed\n# HTML files also contain an index, a table of contents, and you can search for\n# words in the documentation. The HTML workshop also contains a viewer for\n# compressed HTML files.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_HTMLHELP      = NO\n\n# The CHM_FILE tag can be used to specify the file name of the resulting .chm\n# file. You can add a path in front of the file if the result should not be\n# written to the html output directory.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nCHM_FILE               =\n\n# The HHC_LOCATION tag can be used to specify the location (absolute path\n# including file name) of the HTML help compiler (hhc.exe). If non-empty,\n# doxygen will try to run the HTML help compiler on the generated index.hhp.\n# The file has to be specified with full path.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nHHC_LOCATION           =\n\n# The GENERATE_CHI flag controls if a separate .chi index file is generated\n# (YES) or that it should be included in the master .chm file (NO).\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nGENERATE_CHI           = NO\n\n# The CHM_INDEX_ENCODING is used to encode HtmlHelp index (hhk), content (hhc)\n# and project file content.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nCHM_INDEX_ENCODING     =\n\n# The BINARY_TOC flag controls whether a binary table of contents is generated\n# (YES) or a normal table of contents (NO) in the .chm file. Furthermore it\n# enables the Previous and Next buttons.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nBINARY_TOC             = NO\n\n# The TOC_EXPAND flag can be set to YES to add extra items for group members to\n# the table of contents of the HTML help documentation and to the tree view.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTMLHELP is set to YES.\n\nTOC_EXPAND             = NO\n\n# If the GENERATE_QHP tag is set to YES and both QHP_NAMESPACE and\n# QHP_VIRTUAL_FOLDER are set, an additional index file will be generated that\n# can be used as input for Qt's qhelpgenerator to generate a Qt Compressed Help\n# (.qch) of the generated HTML documentation.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_QHP           = NO\n\n# If the QHG_LOCATION tag is specified, the QCH_FILE tag can be used to specify\n# the file name of the resulting .qch file. The path specified is relative to\n# the HTML output folder.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQCH_FILE               =\n\n# The QHP_NAMESPACE tag specifies the namespace to use when generating Qt Help\n# Project output. For more information please see Qt Help Project / Namespace\n# (see: http://doc.qt.io/qt-4.8/qthelpproject.html#namespace).\n# The default value is: org.doxygen.Project.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_NAMESPACE          = org.doxygen.Project\n\n# The QHP_VIRTUAL_FOLDER tag specifies the namespace to use when generating Qt\n# Help Project output. For more information please see Qt Help Project / Virtual\n# Folders (see: http://doc.qt.io/qt-4.8/qthelpproject.html#virtual-folders).\n# The default value is: doc.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_VIRTUAL_FOLDER     = doc\n\n# If the QHP_CUST_FILTER_NAME tag is set, it specifies the name of a custom\n# filter to add. For more information please see Qt Help Project / Custom\n# Filters (see: http://doc.qt.io/qt-4.8/qthelpproject.html#custom-filters).\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_CUST_FILTER_NAME   =\n\n# The QHP_CUST_FILTER_ATTRS tag specifies the list of the attributes of the\n# custom filter to add. For more information please see Qt Help Project / Custom\n# Filters (see: http://doc.qt.io/qt-4.8/qthelpproject.html#custom-filters).\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_CUST_FILTER_ATTRS  =\n\n# The QHP_SECT_FILTER_ATTRS tag specifies the list of the attributes this\n# project's filter section matches. Qt Help Project / Filter Attributes (see:\n# http://doc.qt.io/qt-4.8/qthelpproject.html#filter-attributes).\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHP_SECT_FILTER_ATTRS  =\n\n# The QHG_LOCATION tag can be used to specify the location of Qt's\n# qhelpgenerator. If non-empty doxygen will try to run qhelpgenerator on the\n# generated .qhp file.\n# This tag requires that the tag GENERATE_QHP is set to YES.\n\nQHG_LOCATION           =\n\n# If the GENERATE_ECLIPSEHELP tag is set to YES, additional index files will be\n# generated, together with the HTML files, they form an Eclipse help plugin. To\n# install this plugin and make it available under the help contents menu in\n# Eclipse, the contents of the directory containing the HTML and XML files needs\n# to be copied into the plugins directory of eclipse. The name of the directory\n# within the plugins directory should be the same as the ECLIPSE_DOC_ID value.\n# After copying Eclipse needs to be restarted before the help appears.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_ECLIPSEHELP   = NO\n\n# A unique identifier for the Eclipse help plugin. When installing the plugin\n# the directory name containing the HTML and XML files should also have this\n# name. Each documentation set should have its own identifier.\n# The default value is: org.doxygen.Project.\n# This tag requires that the tag GENERATE_ECLIPSEHELP is set to YES.\n\nECLIPSE_DOC_ID         = org.doxygen.Project\n\n# If you want full control over the layout of the generated HTML pages it might\n# be necessary to disable the index and replace it with your own. The\n# DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs) at top\n# of each HTML page. A value of NO enables the index and the value YES disables\n# it. Since the tabs in the index contain the same information as the navigation\n# tree, you can set this option to YES if you also set GENERATE_TREEVIEW to YES.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nDISABLE_INDEX          = NO\n\n# The GENERATE_TREEVIEW tag is used to specify whether a tree-like index\n# structure should be generated to display hierarchical information. If the tag\n# value is set to YES, a side panel will be generated containing a tree-like\n# index structure (just like the one that is generated for HTML Help). For this\n# to work a browser that supports JavaScript, DHTML, CSS and frames is required\n# (i.e. any modern browser). Windows users are probably better off using the\n# HTML help feature. Via custom style sheets (see HTML_EXTRA_STYLESHEET) one can\n# further fine-tune the look of the index. As an example, the default style\n# sheet generated by doxygen has an example that shows how to put an image at\n# the root of the tree instead of the PROJECT_NAME. Since the tree basically has\n# the same information as the tab index, you could consider setting\n# DISABLE_INDEX to YES when enabling this option.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nGENERATE_TREEVIEW      = YES\n\n# The ENUM_VALUES_PER_LINE tag can be used to set the number of enum values that\n# doxygen will group on one line in the generated HTML documentation.\n#\n# Note that a value of 0 will completely suppress the enum values from appearing\n# in the overview section.\n# Minimum value: 0, maximum value: 20, default value: 4.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nENUM_VALUES_PER_LINE   = 4\n\n# If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be used\n# to set the initial width (in pixels) of the frame in which the tree is shown.\n# Minimum value: 0, maximum value: 1500, default value: 250.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nTREEVIEW_WIDTH         = 250\n\n# If the EXT_LINKS_IN_WINDOW option is set to YES, doxygen will open links to\n# external symbols imported via tag files in a separate window.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nEXT_LINKS_IN_WINDOW    = NO\n\n# Use this tag to change the font size of LaTeX formulas included as images in\n# the HTML documentation. When you change the font size after a successful\n# doxygen run you need to manually remove any form_*.png images from the HTML\n# output directory to force them to be regenerated.\n# Minimum value: 8, maximum value: 50, default value: 10.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nFORMULA_FONTSIZE       = 10\n\n# Use the FORMULA_TRANSPARENT tag to determine whether or not the images\n# generated for formulas are transparent PNGs. Transparent PNGs are not\n# supported properly for IE 6.0, but are supported on all modern browsers.\n#\n# Note that when changing this option you need to delete any form_*.png files in\n# the HTML output directory before the changes have effect.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nFORMULA_TRANSPARENT    = YES\n\n# Enable the USE_MATHJAX option to render LaTeX formulas using MathJax (see\n# https://www.mathjax.org) which uses client side Javascript for the rendering\n# instead of using pre-rendered bitmaps. Use this if you do not have LaTeX\n# installed or if you want to formulas look prettier in the HTML output. When\n# enabled you may also need to install MathJax separately and configure the path\n# to it using the MATHJAX_RELPATH option.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nUSE_MATHJAX            = NO\n\n# When MathJax is enabled you can set the default output format to be used for\n# the MathJax output. See the MathJax site (see:\n# http://docs.mathjax.org/en/latest/output.html) for more details.\n# Possible values are: HTML-CSS (which is slower, but has the best\n# compatibility), NativeMML (i.e. MathML) and SVG.\n# The default value is: HTML-CSS.\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_FORMAT         = HTML-CSS\n\n# When MathJax is enabled you need to specify the location relative to the HTML\n# output directory using the MATHJAX_RELPATH option. The destination directory\n# should contain the MathJax.js script. For instance, if the mathjax directory\n# is located at the same level as the HTML output directory, then\n# MATHJAX_RELPATH should be ../mathjax. The default value points to the MathJax\n# Content Delivery Network so you can quickly see the result without installing\n# MathJax. However, it is strongly recommended to install a local copy of\n# MathJax from https://www.mathjax.org before deployment.\n# The default value is: https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/.\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_RELPATH        = https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.2/\n\n# The MATHJAX_EXTENSIONS tag can be used to specify one or more MathJax\n# extension names that should be enabled during MathJax rendering. For example\n# MATHJAX_EXTENSIONS = TeX/AMSmath TeX/AMSsymbols\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_EXTENSIONS     =\n\n# The MATHJAX_CODEFILE tag can be used to specify a file with javascript pieces\n# of code that will be used on startup of the MathJax code. See the MathJax site\n# (see: http://docs.mathjax.org/en/latest/output.html) for more details. For an\n# example see the documentation.\n# This tag requires that the tag USE_MATHJAX is set to YES.\n\nMATHJAX_CODEFILE       =\n\n# When the SEARCHENGINE tag is enabled doxygen will generate a search box for\n# the HTML output. The underlying search engine uses javascript and DHTML and\n# should work on any modern browser. Note that when using HTML help\n# (GENERATE_HTMLHELP), Qt help (GENERATE_QHP), or docsets (GENERATE_DOCSET)\n# there is already a search function so this one should typically be disabled.\n# For large projects the javascript based search engine can be slow, then\n# enabling SERVER_BASED_SEARCH may provide a better solution. It is possible to\n# search using the keyboard; to jump to the search box use <access key> + S\n# (what the <access key> is depends on the OS and browser, but it is typically\n# <CTRL>, <ALT>/<option>, or both). Inside the search box use the <cursor down\n# key> to jump into the search results window, the results can be navigated\n# using the <cursor keys>. Press <Enter> to select an item or <escape> to cancel\n# the search. The filter options can be selected when the cursor is inside the\n# search box by pressing <Shift>+<cursor down>. Also here use the <cursor keys>\n# to select a filter and <Enter> or <escape> to activate or cancel the filter\n# option.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_HTML is set to YES.\n\nSEARCHENGINE           = YES\n\n# When the SERVER_BASED_SEARCH tag is enabled the search engine will be\n# implemented using a web server instead of a web client using Javascript. There\n# are two flavors of web server based searching depending on the EXTERNAL_SEARCH\n# setting. When disabled, doxygen will generate a PHP script for searching and\n# an index file used by the script. When EXTERNAL_SEARCH is enabled the indexing\n# and searching needs to be provided by external tools. See the section\n# \"External Indexing and Searching\" for details.\n# The default value is: NO.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nSERVER_BASED_SEARCH    = NO\n\n# When EXTERNAL_SEARCH tag is enabled doxygen will no longer generate the PHP\n# script for searching. Instead the search results are written to an XML file\n# which needs to be processed by an external indexer. Doxygen will invoke an\n# external search engine pointed to by the SEARCHENGINE_URL option to obtain the\n# search results.\n#\n# Doxygen ships with an example indexer (doxyindexer) and search engine\n# (doxysearch.cgi) which are based on the open source search engine library\n# Xapian (see: https://xapian.org/).\n#\n# See the section \"External Indexing and Searching\" for details.\n# The default value is: NO.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nEXTERNAL_SEARCH        = NO\n\n# The SEARCHENGINE_URL should point to a search engine hosted by a web server\n# which will return the search results when EXTERNAL_SEARCH is enabled.\n#\n# Doxygen ships with an example indexer (doxyindexer) and search engine\n# (doxysearch.cgi) which are based on the open source search engine library\n# Xapian (see: https://xapian.org/). See the section \"External Indexing and\n# Searching\" for details.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nSEARCHENGINE_URL       =\n\n# When SERVER_BASED_SEARCH and EXTERNAL_SEARCH are both enabled the unindexed\n# search data is written to a file for indexing by an external tool. With the\n# SEARCHDATA_FILE tag the name of this file can be specified.\n# The default file is: searchdata.xml.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nSEARCHDATA_FILE        = searchdata.xml\n\n# When SERVER_BASED_SEARCH and EXTERNAL_SEARCH are both enabled the\n# EXTERNAL_SEARCH_ID tag can be used as an identifier for the project. This is\n# useful in combination with EXTRA_SEARCH_MAPPINGS to search through multiple\n# projects and redirect the results back to the right project.\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nEXTERNAL_SEARCH_ID     =\n\n# The EXTRA_SEARCH_MAPPINGS tag can be used to enable searching through doxygen\n# projects other than the one defined by this configuration file, but that are\n# all added to the same external search index. Each project needs to have a\n# unique id set via EXTERNAL_SEARCH_ID. The search mapping then maps the id of\n# to a relative location where the documentation can be found. The format is:\n# EXTRA_SEARCH_MAPPINGS = tagname1=loc1 tagname2=loc2 ...\n# This tag requires that the tag SEARCHENGINE is set to YES.\n\nEXTRA_SEARCH_MAPPINGS  =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the LaTeX output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_LATEX tag is set to YES, doxygen will generate LaTeX output.\n# The default value is: YES.\n\nGENERATE_LATEX         = NO\n\n# The LATEX_OUTPUT tag is used to specify where the LaTeX docs will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: latex.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_OUTPUT           = latex\n\n# The LATEX_CMD_NAME tag can be used to specify the LaTeX command name to be\n# invoked.\n#\n# Note that when enabling USE_PDFLATEX this option is only used for generating\n# bitmaps for formulas in the HTML output, but not in the Makefile that is\n# written to the output directory.\n# The default file is: latex.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_CMD_NAME         = latex\n\n# The MAKEINDEX_CMD_NAME tag can be used to specify the command name to generate\n# index for LaTeX.\n# The default file is: makeindex.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nMAKEINDEX_CMD_NAME     = makeindex\n\n# If the COMPACT_LATEX tag is set to YES, doxygen generates more compact LaTeX\n# documents. This may be useful for small projects and may help to save some\n# trees in general.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nCOMPACT_LATEX          = NO\n\n# The PAPER_TYPE tag can be used to set the paper type that is used by the\n# printer.\n# Possible values are: a4 (210 x 297 mm), letter (8.5 x 11 inches), legal (8.5 x\n# 14 inches) and executive (7.25 x 10.5 inches).\n# The default value is: a4.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nPAPER_TYPE             = a4\n\n# The EXTRA_PACKAGES tag can be used to specify one or more LaTeX package names\n# that should be included in the LaTeX output. The package can be specified just\n# by its name or with the correct syntax as to be used with the LaTeX\n# \\usepackage command. To get the times font for instance you can specify :\n# EXTRA_PACKAGES=times or EXTRA_PACKAGES={times}\n# To use the option intlimits with the amsmath package you can specify:\n# EXTRA_PACKAGES=[intlimits]{amsmath}\n# If left blank no extra packages will be included.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nEXTRA_PACKAGES         =\n\n# The LATEX_HEADER tag can be used to specify a personal LaTeX header for the\n# generated LaTeX document. The header should contain everything until the first\n# chapter. If it is left blank doxygen will generate a standard header. See\n# section \"Doxygen usage\" for information on how to let doxygen write the\n# default header to a separate file.\n#\n# Note: Only use a user-defined header if you know what you are doing! The\n# following commands have a special meaning inside the header: $title,\n# $datetime, $date, $doxygenversion, $projectname, $projectnumber,\n# $projectbrief, $projectlogo. Doxygen will replace $title with the empty\n# string, for the replacement values of the other commands the user is referred\n# to HTML_HEADER.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_HEADER           =\n\n# The LATEX_FOOTER tag can be used to specify a personal LaTeX footer for the\n# generated LaTeX document. The footer should contain everything after the last\n# chapter. If it is left blank doxygen will generate a standard footer. See\n# LATEX_HEADER for more information on how to generate a default footer and what\n# special commands can be used inside the footer.\n#\n# Note: Only use a user-defined footer if you know what you are doing!\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_FOOTER           =\n\n# The LATEX_EXTRA_STYLESHEET tag can be used to specify additional user-defined\n# LaTeX style sheets that are included after the standard style sheets created\n# by doxygen. Using this option one can overrule certain style aspects. Doxygen\n# will copy the style sheet files to the output directory.\n# Note: The order of the extra style sheet files is of importance (e.g. the last\n# style sheet in the list overrules the setting of the previous ones in the\n# list).\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_EXTRA_STYLESHEET =\n\n# The LATEX_EXTRA_FILES tag can be used to specify one or more extra images or\n# other source files which should be copied to the LATEX_OUTPUT output\n# directory. Note that the files will be copied as-is; there are no commands or\n# markers available.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_EXTRA_FILES      =\n\n# If the PDF_HYPERLINKS tag is set to YES, the LaTeX that is generated is\n# prepared for conversion to PDF (using ps2pdf or pdflatex). The PDF file will\n# contain links (just like the HTML output) instead of page references. This\n# makes the output suitable for online browsing using a PDF viewer.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nPDF_HYPERLINKS         = YES\n\n# If the USE_PDFLATEX tag is set to YES, doxygen will use pdflatex to generate\n# the PDF file directly from the LaTeX files. Set this option to YES, to get a\n# higher quality PDF documentation.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nUSE_PDFLATEX           = YES\n\n# If the LATEX_BATCHMODE tag is set to YES, doxygen will add the \\batchmode\n# command to the generated LaTeX files. This will instruct LaTeX to keep running\n# if errors occur, instead of asking the user for help. This option is also used\n# when generating formulas in HTML.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_BATCHMODE        = NO\n\n# If the LATEX_HIDE_INDICES tag is set to YES then doxygen will not include the\n# index chapters (such as File Index, Compound Index, etc.) in the output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_HIDE_INDICES     = NO\n\n# If the LATEX_SOURCE_CODE tag is set to YES then doxygen will include source\n# code with syntax highlighting in the LaTeX output.\n#\n# Note that which sources are shown also depends on other settings such as\n# SOURCE_BROWSER.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_SOURCE_CODE      = NO\n\n# The LATEX_BIB_STYLE tag can be used to specify the style to use for the\n# bibliography, e.g. plainnat, or ieeetr. See\n# https://en.wikipedia.org/wiki/BibTeX and \\cite for more info.\n# The default value is: plain.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_BIB_STYLE        = plain\n\n# If the LATEX_TIMESTAMP tag is set to YES then the footer of each generated\n# page will contain the date and time when the page was generated. Setting this\n# to NO can help when comparing the output of multiple runs.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_LATEX is set to YES.\n\nLATEX_TIMESTAMP        = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the RTF output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_RTF tag is set to YES, doxygen will generate RTF output. The\n# RTF output is optimized for Word 97 and may not look too pretty with other RTF\n# readers/editors.\n# The default value is: NO.\n\nGENERATE_RTF           = NO\n\n# The RTF_OUTPUT tag is used to specify where the RTF docs will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: rtf.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_OUTPUT             = rtf\n\n# If the COMPACT_RTF tag is set to YES, doxygen generates more compact RTF\n# documents. This may be useful for small projects and may help to save some\n# trees in general.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nCOMPACT_RTF            = NO\n\n# If the RTF_HYPERLINKS tag is set to YES, the RTF that is generated will\n# contain hyperlink fields. The RTF file will contain links (just like the HTML\n# output) instead of page references. This makes the output suitable for online\n# browsing using Word or some other Word compatible readers that support those\n# fields.\n#\n# Note: WordPad (write) and others do not support links.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_HYPERLINKS         = NO\n\n# Load stylesheet definitions from file. Syntax is similar to doxygen's config\n# file, i.e. a series of assignments. You only have to provide replacements,\n# missing definitions are set to their default value.\n#\n# See also section \"Doxygen usage\" for information on how to generate the\n# default style sheet that doxygen normally uses.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_STYLESHEET_FILE    =\n\n# Set optional variables used in the generation of an RTF document. Syntax is\n# similar to doxygen's config file. A template extensions file can be generated\n# using doxygen -e rtf extensionFile.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_EXTENSIONS_FILE    =\n\n# If the RTF_SOURCE_CODE tag is set to YES then doxygen will include source code\n# with syntax highlighting in the RTF output.\n#\n# Note that which sources are shown also depends on other settings such as\n# SOURCE_BROWSER.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_RTF is set to YES.\n\nRTF_SOURCE_CODE        = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the man page output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_MAN tag is set to YES, doxygen will generate man pages for\n# classes and files.\n# The default value is: NO.\n\nGENERATE_MAN           = NO\n\n# The MAN_OUTPUT tag is used to specify where the man pages will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it. A directory man3 will be created inside the directory specified by\n# MAN_OUTPUT.\n# The default directory is: man.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_OUTPUT             = man\n\n# The MAN_EXTENSION tag determines the extension that is added to the generated\n# man pages. In case the manual section does not start with a number, the number\n# 3 is prepended. The dot (.) at the beginning of the MAN_EXTENSION tag is\n# optional.\n# The default value is: .3.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_EXTENSION          = .3\n\n# The MAN_SUBDIR tag determines the name of the directory created within\n# MAN_OUTPUT in which the man pages are placed. If defaults to man followed by\n# MAN_EXTENSION with the initial . removed.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_SUBDIR             =\n\n# If the MAN_LINKS tag is set to YES and doxygen generates man output, then it\n# will generate one additional man file for each entity documented in the real\n# man page(s). These additional files only source the real man page, but without\n# them the man command would be unable to find the correct page.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_MAN is set to YES.\n\nMAN_LINKS              = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the XML output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_XML tag is set to YES, doxygen will generate an XML file that\n# captures the structure of the code including all documentation.\n# The default value is: NO.\n\nGENERATE_XML           = NO\n\n# The XML_OUTPUT tag is used to specify where the XML pages will be put. If a\n# relative path is entered the value of OUTPUT_DIRECTORY will be put in front of\n# it.\n# The default directory is: xml.\n# This tag requires that the tag GENERATE_XML is set to YES.\n\nXML_OUTPUT             = xml\n\n# If the XML_PROGRAMLISTING tag is set to YES, doxygen will dump the program\n# listings (including syntax highlighting and cross-referencing information) to\n# the XML output. Note that enabling this will significantly increase the size\n# of the XML output.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_XML is set to YES.\n\nXML_PROGRAMLISTING     = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to the DOCBOOK output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_DOCBOOK tag is set to YES, doxygen will generate Docbook files\n# that can be used to generate PDF.\n# The default value is: NO.\n\nGENERATE_DOCBOOK       = NO\n\n# The DOCBOOK_OUTPUT tag is used to specify where the Docbook pages will be put.\n# If a relative path is entered the value of OUTPUT_DIRECTORY will be put in\n# front of it.\n# The default directory is: docbook.\n# This tag requires that the tag GENERATE_DOCBOOK is set to YES.\n\nDOCBOOK_OUTPUT         = docbook\n\n# If the DOCBOOK_PROGRAMLISTING tag is set to YES, doxygen will include the\n# program listings (including syntax highlighting and cross-referencing\n# information) to the DOCBOOK output. Note that enabling this will significantly\n# increase the size of the DOCBOOK output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_DOCBOOK is set to YES.\n\nDOCBOOK_PROGRAMLISTING = NO\n\n#---------------------------------------------------------------------------\n# Configuration options for the AutoGen Definitions output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_AUTOGEN_DEF tag is set to YES, doxygen will generate an\n# AutoGen Definitions (see http://autogen.sourceforge.net/) file that captures\n# the structure of the code including all documentation. Note that this feature\n# is still experimental and incomplete at the moment.\n# The default value is: NO.\n\nGENERATE_AUTOGEN_DEF   = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the Perl module output\n#---------------------------------------------------------------------------\n\n# If the GENERATE_PERLMOD tag is set to YES, doxygen will generate a Perl module\n# file that captures the structure of the code including all documentation.\n#\n# Note that this feature is still experimental and incomplete at the moment.\n# The default value is: NO.\n\nGENERATE_PERLMOD       = NO\n\n# If the PERLMOD_LATEX tag is set to YES, doxygen will generate the necessary\n# Makefile rules, Perl scripts and LaTeX code to be able to generate PDF and DVI\n# output from the Perl module output.\n# The default value is: NO.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\nPERLMOD_LATEX          = NO\n\n# If the PERLMOD_PRETTY tag is set to YES, the Perl module output will be nicely\n# formatted so it can be parsed by a human reader. This is useful if you want to\n# understand what is going on. On the other hand, if this tag is set to NO, the\n# size of the Perl module output will be much smaller and Perl will parse it\n# just the same.\n# The default value is: YES.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\nPERLMOD_PRETTY         = YES\n\n# The names of the make variables in the generated doxyrules.make file are\n# prefixed with the string contained in PERLMOD_MAKEVAR_PREFIX. This is useful\n# so different doxyrules.make files included by the same Makefile don't\n# overwrite each other's variables.\n# This tag requires that the tag GENERATE_PERLMOD is set to YES.\n\nPERLMOD_MAKEVAR_PREFIX =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the preprocessor\n#---------------------------------------------------------------------------\n\n# If the ENABLE_PREPROCESSING tag is set to YES, doxygen will evaluate all\n# C-preprocessor directives found in the sources and include files.\n# The default value is: YES.\n\nENABLE_PREPROCESSING   = YES\n\n# If the MACRO_EXPANSION tag is set to YES, doxygen will expand all macro names\n# in the source code. If set to NO, only conditional compilation will be\n# performed. Macro expansion can be done in a controlled way by setting\n# EXPAND_ONLY_PREDEF to YES.\n# The default value is: NO.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nMACRO_EXPANSION        = NO\n\n# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES then\n# the macro expansion is limited to the macros specified with the PREDEFINED and\n# EXPAND_AS_DEFINED tags.\n# The default value is: NO.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nEXPAND_ONLY_PREDEF     = NO\n\n# If the SEARCH_INCLUDES tag is set to YES, the include files in the\n# INCLUDE_PATH will be searched if a #include is found.\n# The default value is: YES.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nSEARCH_INCLUDES        = YES\n\n# The INCLUDE_PATH tag can be used to specify one or more directories that\n# contain include files that are not input files but should be processed by the\n# preprocessor.\n# This tag requires that the tag SEARCH_INCLUDES is set to YES.\n\nINCLUDE_PATH           =\n\n# You can use the INCLUDE_FILE_PATTERNS tag to specify one or more wildcard\n# patterns (like *.h and *.hpp) to filter out the header-files in the\n# directories. If left blank, the patterns specified with FILE_PATTERNS will be\n# used.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nINCLUDE_FILE_PATTERNS  =\n\n# The PREDEFINED tag can be used to specify one or more macro names that are\n# defined before the preprocessor is started (similar to the -D option of e.g.\n# gcc). The argument of the tag is a list of macros of the form: name or\n# name=definition (no spaces). If the definition and the \"=\" are omitted, \"=1\"\n# is assumed. To prevent a macro definition from being undefined via #undef or\n# recursively expanded use the := operator instead of the = operator.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nPREDEFINED             =\n\n# If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then this\n# tag can be used to specify a list of macro names that should be expanded. The\n# macro definition that is found in the sources will be used. Use the PREDEFINED\n# tag if you want to use a different macro definition that overrules the\n# definition found in the source code.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nEXPAND_AS_DEFINED      =\n\n# If the SKIP_FUNCTION_MACROS tag is set to YES then doxygen's preprocessor will\n# remove all references to function-like macros that are alone on a line, have\n# an all uppercase name, and do not end with a semicolon. Such function macros\n# are typically used for boiler-plate code, and will confuse the parser if not\n# removed.\n# The default value is: YES.\n# This tag requires that the tag ENABLE_PREPROCESSING is set to YES.\n\nSKIP_FUNCTION_MACROS   = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to external references\n#---------------------------------------------------------------------------\n\n# The TAGFILES tag can be used to specify one or more tag files. For each tag\n# file the location of the external documentation should be added. The format of\n# a tag file without this location is as follows:\n# TAGFILES = file1 file2 ...\n# Adding location for the tag files is done as follows:\n# TAGFILES = file1=loc1 \"file2 = loc2\" ...\n# where loc1 and loc2 can be relative or absolute paths or URLs. See the\n# section \"Linking to external documentation\" for more information about the use\n# of tag files.\n# Note: Each tag file must have a unique name (where the name does NOT include\n# the path). If a tag file is not located in the directory in which doxygen is\n# run, you must also specify the path to the tagfile here.\n\nTAGFILES               =\n\n# When a file name is specified after GENERATE_TAGFILE, doxygen will create a\n# tag file that is based on the input files it reads. See section \"Linking to\n# external documentation\" for more information about the usage of tag files.\n\nGENERATE_TAGFILE       =\n\n# If the ALLEXTERNALS tag is set to YES, all external class will be listed in\n# the class index. If set to NO, only the inherited external classes will be\n# listed.\n# The default value is: NO.\n\nALLEXTERNALS           = NO\n\n# If the EXTERNAL_GROUPS tag is set to YES, all external groups will be listed\n# in the modules index. If set to NO, only the current project's groups will be\n# listed.\n# The default value is: YES.\n\nEXTERNAL_GROUPS        = YES\n\n# If the EXTERNAL_PAGES tag is set to YES, all external pages will be listed in\n# the related pages index. If set to NO, only the current project's pages will\n# be listed.\n# The default value is: YES.\n\nEXTERNAL_PAGES         = YES\n\n# The PERL_PATH should be the absolute path and name of the perl script\n# interpreter (i.e. the result of 'which perl').\n# The default file (with absolute path) is: /usr/bin/perl.\n\nPERL_PATH              = /usr/bin/perl\n\n#---------------------------------------------------------------------------\n# Configuration options related to the dot tool\n#---------------------------------------------------------------------------\n\n# If the CLASS_DIAGRAMS tag is set to YES, doxygen will generate a class diagram\n# (in HTML and LaTeX) for classes with base or super classes. Setting the tag to\n# NO turns the diagrams off. Note that this option also works with HAVE_DOT\n# disabled, but it is recommended to install and use dot, since it yields more\n# powerful graphs.\n# The default value is: YES.\n\nCLASS_DIAGRAMS         = YES\n\n# You can define message sequence charts within doxygen comments using the \\msc\n# command. Doxygen will then run the mscgen tool (see:\n# http://www.mcternan.me.uk/mscgen/)) to produce the chart and insert it in the\n# documentation. The MSCGEN_PATH tag allows you to specify the directory where\n# the mscgen tool resides. If left empty the tool is assumed to be found in the\n# default search path.\n\nMSCGEN_PATH            =\n\n# You can include diagrams made with dia in doxygen documentation. Doxygen will\n# then run dia to produce the diagram and insert it in the documentation. The\n# DIA_PATH tag allows you to specify the directory where the dia binary resides.\n# If left empty dia is assumed to be found in the default search path.\n\nDIA_PATH               =\n\n# If set to YES the inheritance and collaboration graphs will hide inheritance\n# and usage relations if the target is undocumented or is not a class.\n# The default value is: YES.\n\nHIDE_UNDOC_RELATIONS   = YES\n\n# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is\n# available from the path. This tool is part of Graphviz (see:\n# http://www.graphviz.org/), a graph visualization toolkit from AT&T and Lucent\n# Bell Labs. The other options in this section have no effect if this option is\n# set to NO\n# The default value is: NO.\n\nHAVE_DOT               = NO\n\n# The DOT_NUM_THREADS specifies the number of dot invocations doxygen is allowed\n# to run in parallel. When set to 0 doxygen will base this on the number of\n# processors available in the system. You can set it explicitly to a value\n# larger than 0 to get control over the balance between CPU load and processing\n# speed.\n# Minimum value: 0, maximum value: 32, default value: 0.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_NUM_THREADS        = 0\n\n# When you want a differently looking font in the dot files that doxygen\n# generates you can specify the font name using DOT_FONTNAME. You need to make\n# sure dot is able to find the font, which can be done by putting it in a\n# standard location or by setting the DOTFONTPATH environment variable or by\n# setting DOT_FONTPATH to the directory containing the font.\n# The default value is: Helvetica.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_FONTNAME           = Helvetica\n\n# The DOT_FONTSIZE tag can be used to set the size (in points) of the font of\n# dot graphs.\n# Minimum value: 4, maximum value: 24, default value: 10.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_FONTSIZE           = 10\n\n# By default doxygen will tell dot to use the default font as specified with\n# DOT_FONTNAME. If you specify a different font using DOT_FONTNAME you can set\n# the path where dot can find it using this tag.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_FONTPATH           =\n\n# If the CLASS_GRAPH tag is set to YES then doxygen will generate a graph for\n# each documented class showing the direct and indirect inheritance relations.\n# Setting this tag to YES will force the CLASS_DIAGRAMS tag to NO.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCLASS_GRAPH            = YES\n\n# If the COLLABORATION_GRAPH tag is set to YES then doxygen will generate a\n# graph for each documented class showing the direct and indirect implementation\n# dependencies (inheritance, containment, and class references variables) of the\n# class with other documented classes.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCOLLABORATION_GRAPH    = YES\n\n# If the GROUP_GRAPHS tag is set to YES then doxygen will generate a graph for\n# groups, showing the direct groups dependencies.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nGROUP_GRAPHS           = YES\n\n# If the UML_LOOK tag is set to YES, doxygen will generate inheritance and\n# collaboration diagrams in a style similar to the OMG's Unified Modeling\n# Language.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nUML_LOOK               = NO\n\n# If the UML_LOOK tag is enabled, the fields and methods are shown inside the\n# class node. If there are many fields or methods and many nodes the graph may\n# become too big to be useful. The UML_LIMIT_NUM_FIELDS threshold limits the\n# number of items for each type to make the size more manageable. Set this to 0\n# for no limit. Note that the threshold may be exceeded by 50% before the limit\n# is enforced. So when you set the threshold to 10, up to 15 fields may appear,\n# but if the number exceeds 15, the total amount of fields shown is limited to\n# 10.\n# Minimum value: 0, maximum value: 100, default value: 10.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nUML_LIMIT_NUM_FIELDS   = 10\n\n# If the TEMPLATE_RELATIONS tag is set to YES then the inheritance and\n# collaboration graphs will show the relations between templates and their\n# instances.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nTEMPLATE_RELATIONS     = NO\n\n# If the INCLUDE_GRAPH, ENABLE_PREPROCESSING and SEARCH_INCLUDES tags are set to\n# YES then doxygen will generate a graph for each documented file showing the\n# direct and indirect include dependencies of the file with other documented\n# files.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nINCLUDE_GRAPH          = YES\n\n# If the INCLUDED_BY_GRAPH, ENABLE_PREPROCESSING and SEARCH_INCLUDES tags are\n# set to YES then doxygen will generate a graph for each documented file showing\n# the direct and indirect include dependencies of the file with other documented\n# files.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nINCLUDED_BY_GRAPH      = YES\n\n# If the CALL_GRAPH tag is set to YES then doxygen will generate a call\n# dependency graph for every global function or class method.\n#\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable call graphs for selected\n# functions only using the \\callgraph command. Disabling a call graph can be\n# accomplished by means of the command \\hidecallgraph.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCALL_GRAPH             = NO\n\n# If the CALLER_GRAPH tag is set to YES then doxygen will generate a caller\n# dependency graph for every global function or class method.\n#\n# Note that enabling this option will significantly increase the time of a run.\n# So in most cases it will be better to enable caller graphs for selected\n# functions only using the \\callergraph command. Disabling a caller graph can be\n# accomplished by means of the command \\hidecallergraph.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nCALLER_GRAPH           = NO\n\n# If the GRAPHICAL_HIERARCHY tag is set to YES then doxygen will graphical\n# hierarchy of all classes instead of a textual one.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nGRAPHICAL_HIERARCHY    = YES\n\n# If the DIRECTORY_GRAPH tag is set to YES then doxygen will show the\n# dependencies a directory has on other directories in a graphical way. The\n# dependency relations are determined by the #include relations between the\n# files in the directories.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDIRECTORY_GRAPH        = YES\n\n# The DOT_IMAGE_FORMAT tag can be used to set the image format of the images\n# generated by dot. For an explanation of the image formats see the section\n# output formats in the documentation of the dot tool (Graphviz (see:\n# http://www.graphviz.org/)).\n# Note: If you choose svg you need to set HTML_FILE_EXTENSION to xhtml in order\n# to make the SVG files visible in IE 9+ (other browsers do not have this\n# requirement).\n# Possible values are: png, jpg, gif, svg, png:gd, png:gd:gd, png:cairo,\n# png:cairo:gd, png:cairo:cairo, png:cairo:gdiplus, png:gdiplus and\n# png:gdiplus:gdiplus.\n# The default value is: png.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_IMAGE_FORMAT       = png\n\n# If DOT_IMAGE_FORMAT is set to svg, then this option can be set to YES to\n# enable generation of interactive SVG images that allow zooming and panning.\n#\n# Note that this requires a modern browser other than Internet Explorer. Tested\n# and working are Firefox, Chrome, Safari, and Opera.\n# Note: For IE 9+ you need to set HTML_FILE_EXTENSION to xhtml in order to make\n# the SVG files visible. Older versions of IE do not have SVG support.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nINTERACTIVE_SVG        = NO\n\n# The DOT_PATH tag can be used to specify the path where the dot tool can be\n# found. If left blank, it is assumed the dot tool can be found in the path.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_PATH               =\n\n# The DOTFILE_DIRS tag can be used to specify one or more directories that\n# contain dot files that are included in the documentation (see the \\dotfile\n# command).\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOTFILE_DIRS           =\n\n# The MSCFILE_DIRS tag can be used to specify one or more directories that\n# contain msc files that are included in the documentation (see the \\mscfile\n# command).\n\nMSCFILE_DIRS           =\n\n# The DIAFILE_DIRS tag can be used to specify one or more directories that\n# contain dia files that are included in the documentation (see the \\diafile\n# command).\n\nDIAFILE_DIRS           =\n\n# When using plantuml, the PLANTUML_JAR_PATH tag should be used to specify the\n# path where java can find the plantuml.jar file. If left blank, it is assumed\n# PlantUML is not used or called during a preprocessing step. Doxygen will\n# generate a warning when it encounters a \\startuml command in this case and\n# will not generate output for the diagram.\n\nPLANTUML_JAR_PATH      =\n\n# When using plantuml, the PLANTUML_CFG_FILE tag can be used to specify a\n# configuration file for plantuml.\n\nPLANTUML_CFG_FILE      =\n\n# When using plantuml, the specified paths are searched for files specified by\n# the !include statement in a plantuml block.\n\nPLANTUML_INCLUDE_PATH  =\n\n# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of nodes\n# that will be shown in the graph. If the number of nodes in a graph becomes\n# larger than this value, doxygen will truncate the graph, which is visualized\n# by representing a node as a red box. Note that doxygen if the number of direct\n# children of the root node in a graph is already larger than\n# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that\n# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.\n# Minimum value: 0, maximum value: 10000, default value: 50.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_GRAPH_MAX_NODES    = 50\n\n# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the graphs\n# generated by dot. A depth value of 3 means that only nodes reachable from the\n# root by following a path via at most 3 edges will be shown. Nodes that lay\n# further from the root node will be omitted. Note that setting this option to 1\n# or 2 may greatly reduce the computation time needed for large code bases. Also\n# note that the size of a graph can be further restricted by\n# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.\n# Minimum value: 0, maximum value: 1000, default value: 0.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nMAX_DOT_GRAPH_DEPTH    = 0\n\n# Set the DOT_TRANSPARENT tag to YES to generate images with a transparent\n# background. This is disabled by default, because dot on Windows does not seem\n# to support this out of the box.\n#\n# Warning: Depending on the platform used, enabling this option may lead to\n# badly anti-aliased labels on the edges of a graph (i.e. they become hard to\n# read).\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_TRANSPARENT        = NO\n\n# Set the DOT_MULTI_TARGETS tag to YES to allow dot to generate multiple output\n# files in one run (i.e. multiple -o and -T options on the command line). This\n# makes dot run faster, but since only newer versions of dot (>1.8.10) support\n# this, this feature is disabled by default.\n# The default value is: NO.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_MULTI_TARGETS      = NO\n\n# If the GENERATE_LEGEND tag is set to YES doxygen will generate a legend page\n# explaining the meaning of the various boxes and arrows in the dot generated\n# graphs.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nGENERATE_LEGEND        = YES\n\n# If the DOT_CLEANUP tag is set to YES, doxygen will remove the intermediate dot\n# files that are used to generate the various graphs.\n# The default value is: YES.\n# This tag requires that the tag HAVE_DOT is set to YES.\n\nDOT_CLEANUP            = YES\n"
        },
        {
          "name": "LICENSES",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.640625,
          "content": "<img width=\"150\" height=\"150\" align=\"left\" style=\"float: left; margin: 0 10px 0 0;\" alt=\"Rizin logo\" src=\"https://raw.githubusercontent.com/rizinorg/rizin/dev/doc/img/rizin.svg?sanitize=true\">\n\n# Rizin\n\nRizin is a fork of the radare2 reverse engineering framework with a focus on\nusability, working features and code cleanliness.\n\nRizin is portable and it can be used to analyze binaries, disassemble code,\ndebug programs, as a forensic tool, as a scriptable command-line hexadecimal\neditor able to open disk files, and much more!\n\nTo learn more on Rizin you may want to read the\n[official Rizin book](https://book.rizin.re).\n\n# How to install\n\nLook at [install instructions](https://rizin.re/install/) on our web page.\n\n# How to build\n\nUse `meson` to compile and install Rizin. Please make sure to get an updated\n`meson` (e.g. get it with `pip install meson` if your system does not provide\none that is at least version `0.55.0`).\n\nClone this repository:\n```\n$ git clone https://github.com/rizinorg/rizin\n```\n\nThen compile and install with:\n```\n$ meson setup build\n$ meson compile -C build\n$ sudo meson install -C build\n```\n\nNow you can use `rizin`:\n```\n$ rizin\n -- Thank you for using rizin. Have a nice night!\n[0x00000000]>\n\n```\n\nTo uninstall rizin, execute `sudo ninja -C build uninstall`.\n\n\nPlease have a look at [BUILDING.md][] for more information about building Rizin.\n\n# Contributing\n\nWe very much welcome any kind of contributions, from typos, to documentation, to\nrefactoring, up to completely new features you may think of. Before\ncontributing, we would like you to read the file [CONTRIBUTING.md][], so that we\ncan all be on the same page.\n\n## Tests\n\nLook at [test/README.md][].\n\n# Supported features\n\n## Supported Operating Systems\n\nWindows 7 and higher, Apple macOS/iOS/iPadOS, GNU/Linux,\n[Dragonfly|Net|Free|Open]BSD, Android, QNX, Solaris/Illumos, Haiku,\nGNU/Darwin, GNU/Hurd.\n\n## Supported Architectures\n\ni386, x86-64, ARM/ARM64, RISC-V, PowerPC, MIPS, AVR, SPARC, System Z (S390),\nSuperH, m68k, m680x, XAP, XCore, CR16, HPPA, ARC, Blackfin, Z80, H8/300,\nRenesas (V810, V850, RL78), CRIS, XAP, PIC, LM32, 8051, 6502, i4004, i8080, Propeller,\nTricore, CHIP-8, LH5801, T8200, GameBoy, SNES, SPC700, MSP430, Xtensa,\nNIOS II, TMS320 (c54x, c55x, c55+, c64x), Hexagon, DCPU16, LANAI,\nMCORE, mcs96, RSP, C-SKY(MCore), VAX, AMD Am29000.\n\nThere is also support for the following bytecode formats:\n\nDalvik, EBC, Java, Lua, Python, WebAssembly, Brainfuck, Malbolge\n\n## Supported File Formats\n\nELF, Mach-O, Fatmach-O, PE, PE+, MZ, COFF, OMF, NE, LE, LX, TE, XBE, BIOS/UEFI,\nDyldcache, DEX, ART, CGC, ELF, Java class, Android boot image, Plan9 executable,\nZIMG, MBN/SBL bootloader, ELF coredump, MDMP (Windows minidump), DMP (Windows pagedump),\nWASM (WebAssembly binary), Commodore VICE emulator, QNX,\nGame Boy (Advance), Nintendo DS ROMs and Nintendo 3DS FIRMs.\n\n## Tools\n\nApart from the main tool `rizin`, there are also other tools tailored for specific purposes and \nuseful for shell scripting or as separate standalone tools:\n\n- `rz-bin` - provides all kind of information about binary formats\n- `rz-asm` - a command-line assembler and disassemblers\n- `rz-diff` - a tool to compare two binaries as raw data or analyzed executables\n- `rz-hash` - allows to calculate different hashes or even encrypt data\n- `rz-gg` - a small \"eggs\" code generator useful for exploitation purposes\n- `rz-find` - binary analog of `find` tool, allowing to search patterns and bit masks\n- `rz-sign` - tool to create, convert and parse FLIRT signatures\n- `rz-ax` - a calculator and number format converter\n- `rz-run` - a tool that allows to specify running environment and arguments for debugged file\n\n## Scripting\n\nWe provide a way to interact with Rizin from Python, Haskell, OCaml,\nRuby, Rust, and Go languages through [rzpipe](https://github.com/rizinorg/rz-pipe).\nOther languages although not currently supported could be easily added.\n\n# Community\n\nOur website and blog: [https://www.rizin.re/](https://www.rizin.re/)\n\nJoin our [Mattermost](https://im.rizin.re) community to discuss Rizin, its\ndevelopment, and general topics related to the project.\n\nWe also provide the following partial bridges to other messaging platforms:\n- [Telegram](https://t.me/rizinorg)\n- IRC: [irc.libera.chat:6697 with TLS support](ircs://irc.libera.chat:6697)\n  - Community - [#rizin](https://web.libera.chat/#rizin)\n  - Developers - [#rizindev](https://web.libera.chat/#rizindev)\n\n[CONTRIBUTING.md]: https://github.com/rizinorg/rizin/blob/dev/CONTRIBUTING.md\n[test/README.md]: https://github.com/rizinorg/rizin/blob/dev/test/README.md\n[BUILDING.md]: https://github.com/rizinorg/rizin/blob/dev/BUILDING.md\n[DEVELOPERS.md]: https://github.com/rizinorg/rizin/blob/dev/DEVELOPERS.md\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.845703125,
          "content": "# Security Policy\n\n## Scope and Supported Versions\n\n| Version          | Supported          |\n| ---------------- | ------------------ |\n| latest-release   | :white_check_mark: |\n| *                | :x:                |\n\nRizin is a user-space Command Line Interface (CLI) tool that isn't considered a high-availability service. As such, issues that impact Rizin's availability will not be considered as vulnerabilities by the security team. Such issues include, but are not limited to:\n - NULL Pointer Dereference\n - Memory Exhaustion\n\nIssues that can leak non-sensitive memory contents (e.g memory addresses and values, etc.) should be demonstrated to be usable by an attacker and will be considered on a case-by-case basis.\n\n## Reporting a Vulnerability\n\nSecurity issues in the Rizin repository should be reported by email to security@rizin.re. Your email will be delivered to a small security team that will handle the report. Your email will be acknowledged within 48 hours, and you'll receive a more detailed response to your email within 72 hours indicating the next steps in handling your report.\n\nFor your convenience, we accept reports written in one of the languages listed on our [security.txt](https://rizin.re/.well-known/security.txt) page, but we prefer reports in English. Please try to always include in your report an attack scenario, showing how the issue can affect Rizin users.\n\nIf you have not received a reply to your email within 48 hours, or have not heard from the security team for the past week, there are a few steps you can take (in order):\n\n- Directly contact at least one member from [Rizin Security Team](https://rizin.re/teams/security/)\n- Inform the team over the [public chats](https://rizin.re/#community) that you sent a message regarding a security issue.\n\n**Important:** Don't disclose any information regarding the issue itself in the public chats.\n"
        },
        {
          "name": "binrz",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.390625,
          "content": "coverage:\n  status:\n    project:\n      default:\n        branches:\n          - dev\n          - 'release-*'\n        if_not_found: failure\n        if_ci_failed: error\n        informational: true\n    patch:\n      default:\n        if_not_found: success\n        if_ci_failed: success\n        informational: true\nignore:\n  - \"binrz/rz-test\"\n  - \"doc\"\n  - \"man\"\n  - \"mk\"\n  - \"sys\"\n  - \"test\"\n\ncomment: false\n"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "librz",
          "type": "tree",
          "content": null
        },
        {
          "name": "meson.build",
          "type": "blob",
          "size": 33.9296875,
          "content": "project('rizin', 'c',\n  version: 'v0.8.0',\n  license: 'LGPL-3.0-only',\n  meson_version: '>=0.57.0',\n  default_options: [\n    'buildtype=debugoptimized',\n    'b_vscrt=from_buildtype',\n    'warning_level=1',\n  ]\n)\n\npy3_exe = import('python').find_installation()\ngit_exe = find_program('git', required: false)\npkgconfig_mod = import('pkgconfig')\n\n# Python scripts used during the build process\ncreate_tags_rz_py = files('sys/create_tags_rz.py')\nsyscall_preprocessing_py = files('sys/syscall_preprocessing.py')\ncheck_meson_subproject_py = files('sys/check_meson_subproject.py')\ngit_exe_repo_py = files('sys/meson_git_wrapper.py')\ncmake_package_prefix_dir_py = files('sys/meson_cmake_prefix_dir.py')\n\nis_static_build = get_option('static_runtime')\nis_static_libs_only = get_option('default_library') == 'static'\nif is_static_build and not is_static_libs_only\n  error('Cannot use `static_runtime` when libraries are dynamically built. Set `--default-library=static` if you want to build statically.')\nendif\n\n# Get rizin version and compute various version parts\nrizin_version = meson.project_version().split('v')[1]\nrizin_version_split = rizin_version.split('.')\nrizin_version_major = rizin_version_split[0].to_int()\nrizin_version_minor = rizin_version_split[1].to_int()\nrizin_version_patch = rizin_version_split[2].split('-')[0].to_int()\nrizin_version_number = 1000000 * rizin_version_major + 1000 * rizin_version_minor + rizin_version_patch\n\nrepo = meson.current_source_dir()\n\nrizin_libversion = '@0@.@1@'.format(rizin_version_major, rizin_version_minor)\nmessage('rizin lib version: ' + rizin_libversion)\n\n# system dependencies\ncc = meson.get_compiler('c')\ncc_native = meson.get_compiler('c', native: true)\n\nplatform_deps = []\nplatform_inc = ['.', 'librz', 'librz/include']\nif host_machine.system() == 'windows'\n  add_project_arguments('-DPSAPI_VERSION=1', language: 'c')\n  platform_deps = [\n    cc.find_library('ws2_32'),\n    cc.find_library('wininet'),\n    cc.find_library('psapi'),\n  ]\nendif\nplatform_inc = include_directories(platform_inc)\n\nlib_name_suffix = []\nlib_name_prefix = []\nif is_static_libs_only and cc.get_id() == 'msvc'\n  # On MSVC meson uses the .a suffix and lib as prefix, but cmake and other\n  # tools expect a .lib suffix and no prefix\n  # https://mesonbuild.com/FAQ.html#why-does-building-my-project-with-msvc-output-static-libraries-called-libfooa\n  lib_name_suffix = 'lib'\n  lib_name_prefix = ''\nendif\n\nif is_static_build\n  if cc.get_id() == 'msvc'\n    # Use -Db_vscrt=static_from_buildtype to avoid warnings due to multiple /M options\n    if get_option('b_vscrt') == 'from_buildtype'\n      warning('To avoid warnings due to multiple /M options, please also set -Db_vscrt=mt or -Db_vscrt=mtd.')\n      add_project_arguments('/MT', language: 'c')\n    endif\n  else\n    if cc.has_link_argument('-static')\n      add_project_link_arguments('-static', language: 'c')\n    endif\n  endif\nendif\n\n# These two warnings enum compare and conversion are necessary for the Capstone compatibility header.\n# Newer compilers will warn about the comparison of different enums (arm64 and aarch64) in the header.\n# Hence, we have to disable them for the newer once.\n# Older compilers don't have these warnings and should not be included with #pragma\nif cc.has_argument('-Wenum-conversion')\n  add_project_arguments('-DCC_SUPPORTS_W_ENUM_CONVERION', language: ['c', 'cpp'])\nendif\nif cc.has_argument('-Wenum-compare')\n  add_project_arguments('-DCC_SUPPORTS_W_ENUM_COMPARE', language: ['c', 'cpp'])\nendif\n\nif cc.has_argument('--std=gnu99')\n  add_project_arguments('--std=gnu99', language: ['c', 'cpp'])\nelif cc.has_argument('--std=c99')\n  add_project_arguments('--std=c99', language: ['c', 'cpp'])\nendif\n\n# Sanitize correct usage of rz_strf()\nif cc.has_argument('-Werror=sizeof-pointer-memaccess')\n  add_project_arguments('-Werror=sizeof-pointer-memaccess', language: ['c', 'cpp'])\nendif\n\nif cc.has_argument('-Wimplicit-fallthrough=3')\n  add_project_arguments('-Wimplicit-fallthrough=3', language: ['c', 'cpp'])\nendif\n\nif cc.get_id() == 'clang-cl'\n  if cc.has_argument('-fcommon')\n    add_project_arguments('-fcommon', language: 'c')\n  endif\n  add_project_arguments('-D__STDC__=1', language: 'c')\n  add_project_arguments('-D_CRT_DECLARE_NONSTDC_NAMES ', language: 'c')\n  add_project_arguments('-D_CRT_SECURE_NO_WARNINGS', language: 'c')\n  add_project_arguments('-D_CRT_NONSTDC_NO_DEPRECATE', language: 'c')\nendif\n\nif get_option('default_library') == 'shared'\n  if cc.has_argument('-fvisibility=hidden')\n    add_project_arguments('-fvisibility=hidden', language: 'c')\n  endif\nendif\n\nadd_project_arguments(['-DRZ_PLUGIN_INCORE=1'], language: 'c')\nb_sanitize_opt = get_option('b_sanitize')\nif (b_sanitize_opt.contains('address') or b_sanitize_opt.contains('undefined')) and cc.get_id() == 'clang'\n  add_project_arguments('-shared-libasan', language: 'c')\n  add_project_link_arguments('-shared-libasan', language: 'c')\n  add_project_arguments('-shared-libasan', language: 'c', native: true)\n  add_project_link_arguments('-shared-libasan', language: 'c', native: true)\nendif\n\nfs = import('fs')\nrizin_prefix = get_option('prefix')\nrizin_bindir = get_option('bindir')\nrizin_libdir = get_option('libdir')\nrizin_cmakedir = rizin_libdir / 'cmake'\nrizin_incdir = get_option('includedir') / 'librz'\nrizin_datdir = get_option('datadir')\nextra_prefix = get_option('extra_prefix')\nif host_machine.system() == 'windows'\n  rizin_prefix = fs.as_posix(rizin_prefix).replace('/', '\\\\\\\\')\n  rizin_bindir = fs.as_posix(rizin_bindir).replace('/', '\\\\\\\\')\n  rizin_libdir = fs.as_posix(rizin_libdir).replace('/', '\\\\\\\\')\n  rizin_cmakedir = fs.as_posix(rizin_cmakedir).replace('/', '\\\\\\\\')\n  rizin_incdir = fs.as_posix(rizin_incdir).replace('/', '\\\\\\\\')\n  rizin_datdir = fs.as_posix(rizin_datdir).replace('/', '\\\\\\\\')\n  rizin_datdir_rz = fs.as_posix(rizin_datdir).replace('/', '\\\\\\\\')\nelse\n  rizin_datdir_rz = rizin_datdir / 'rizin'\nendif\n\nload_dirs = {\n  'rizin_sdb': rizin_datdir_rz,\n  'rizin_wwwroot': rizin_datdir_rz / 'www',\n  'rizin_sigdb': rizin_datdir_rz / 'sigdb',\n  'rizin_themes': rizin_datdir_rz / 'cons',\n  'rizin_fortunes': rizin_datdir_rz / 'fortunes',\n  'rizin_flags': rizin_datdir_rz / 'flag',\n  'rizin_hud': rizin_datdir_rz / 'hud',\n  'rizin_plugins': rizin_libdir / 'rizin' / 'plugins',\n  'rizin_bindings': rizin_libdir / 'rizin-bindings',\n}\n\n# Calcualte BINDIR's depth to be able to find the root directory during runtime\n# in portable builds\npy_cmd = 'import os; from pathlib import Path; print(len(Path(os.path.normpath(r\"@0@\")).parents) - len(Path(os.path.normpath(r\"@1@\")).parents))'.format(rizin_prefix / rizin_bindir, rizin_prefix)\npy_cmd = run_command(py3_exe, '-c', py_cmd, check: true)\nbindir_depth = py_cmd.stdout().strip()\n\nforeach load_dir, default_subdir : load_dirs\n  val = get_option(load_dir)\n  if val != ''\n    set_variable(load_dir, val)\n  else\n    val = default_subdir\n    if host_machine.system() == 'windows'\n      val = fs.as_posix(val).replace('/', '\\\\\\\\')\n    endif\n    set_variable(load_dir, val)\n  endif\nendforeach\n\ncmake_package_relative_path = run_command(py3_exe, cmake_package_prefix_dir_py, rizin_prefix, rizin_cmakedir / 'xxx', check: true).stdout().strip()\n\nsubproject_clean_error_msg = 'Subprojects are not updated. Please run `git clean -dxff subprojects/` to delete all local subprojects directories. If you want to compile against current subprojects then set option `subprojects_check=false`.'\n\n# handle capstone dependency\ncapstone_dep = dependency('capstone', version: '>=4.0.2', required: get_option('use_sys_capstone'), static: is_static_build)\nif not capstone_dep.found()\n  capstone_version = get_option('use_capstone_version')\n  if fs.is_file('subprojects/capstone-' + capstone_version + '.wrap')\n    r = run_command(py3_exe, check_meson_subproject_py, 'capstone-' + capstone_version, check: false)\n    if r.returncode() == 1 and get_option('subprojects_check')\n      error(subproject_clean_error_msg)\n    endif\n    capstone_proj = subproject('capstone-' + capstone_version, default_options: ['default_library=static'])\n  else\n    error('Wrong capstone version selected. Please use one of the supported versions.')\n  endif\n  capstone_dep = capstone_proj.get_variable('capstone_dep')\nelse\n  # Package managers CS version has no meta programming macros for AArch64 -> ARM64 renaming\n  # (because it is outdated).\n  # With this define we includeour copy of those macros.\n  add_project_arguments(['-DUSE_SYS_CAPSTONE'], language: 'c')\nendif\n\n# Handle PCRE2\ncpu_jit_supported = [ 'aarch64', 'arm', 'mips', 'mips64', 'ppc', 'ppc64', 'riscv32', 'riscv64', 's390x', 'x86', 'x86_64' ]\npcre2_jit_supported = target_machine.cpu_family() in cpu_jit_supported and cc.get_id() != 'tcc' and target_machine.system() != 'darwin'\nif pcre2_jit_supported\n  add_project_arguments(['-DSUPPORTS_PCRE2_JIT'], language: 'c')\nendif\n\npcre2_dep_opt = get_option('use_sys_pcre2')\npcre2_dep = disabler()\nif (pcre2_dep_opt.enabled() or pcre2_dep_opt.auto()) and not meson.is_cross_build()\n  pcre2_dep = dependency('libpcre2-8', required: false, static: false)\n  if not pcre2_dep.found()\n    pcre2_dep = cc.find_library('pcre2', required: true, static: true)\n  endif\nelse\n  pcre2_dep = dependency('pcre2', version: '>=10.42', required: true, static: true)\nendif\n\nif meson.is_cross_build()\n  pcre2_native_dep = dependency('pcre2_cross_native', required: true, static: true, native: true)\nendif\n\n# handle magic library\nsys_magic_opt = get_option('use_sys_magic')\nsys_magic = disabler()\nif sys_magic_opt.enabled() or sys_magic_opt.auto()\n  sys_magic = dependency('libmagic', required: false, static: is_static_build)\n  if not sys_magic.found()\n    sys_magic = cc.find_library('magic', required: sys_magic_opt, static: is_static_build)\n  endif\nendif\n\n# handle libmspack library\nsys_libmspack_opt = get_option('use_sys_libmspack')\nlibmspack_dep = disabler()\nif sys_libmspack_opt.enabled() or sys_libmspack_opt.auto()\n  libmspack_dep = dependency('libmspack', required: false, static: is_static_build)\n  if not libmspack_dep.found()\n    libmspack_dep = cc.find_library('mspack', required: sys_libmspack_opt, static: is_static_build)\n  endif\nendif\nif (sys_libmspack_opt.auto() and not libmspack_dep.found()) or sys_libmspack_opt.disabled()\n  libmspack_proj = subproject('libmspack', default_options: ['default_library=static'])\n  libmspack_dep = libmspack_proj.get_variable('libmspack_dep')\nendif\n\n# handle xxhash library\nr = run_command(py3_exe, check_meson_subproject_py, 'xxhash', check: false)\nif r.returncode() == 1 and get_option('subprojects_check')\n  error(subproject_clean_error_msg)\nendif\n\nsys_xxhash_opt = get_option('use_sys_xxhash')\nif sys_xxhash_opt.enabled() or sys_xxhash_opt.auto()\n  xxhash_dep = dependency('libxxhash', required: false, static: is_static_build)\n  if not xxhash_dep.found()\n    xxhash_dep = cc.find_library('xxhash', required: sys_xxhash_opt, static: is_static_build)\n  endif\nendif\nif (sys_xxhash_opt.auto() and not xxhash_dep.found()) or sys_xxhash_opt.disabled()\n  xxhash_proj = subproject('xxhash', default_options: ['default_library=static'])\n  xxhash_dep = xxhash_proj.get_variable('xxhash_dep')\nendif\n\n# handle libdemangle\nr = run_command(py3_exe, check_meson_subproject_py, 'libdemangle', check: false)\nif r.returncode() == 1 and get_option('subprojects_check')\n  error(subproject_clean_error_msg)\nendif\n\nlibdemangle_options = ['default_library=static']\nif get_option('use_gpl')\n  libdemangle_options += 'use_gpl=true'\nelse\n  libdemangle_options += 'use_gpl=false'\nendif\nif get_option('use_swift_demangler')\n  libdemangle_options += 'use_swift_demangler=true'\nelse\n  libdemangle_options += 'use_swift_demangler=false'\nendif\n\nlibdemangle_proj = subproject('libdemangle', default_options: libdemangle_options)\nlibdemangle_dep = libdemangle_proj.get_variable('libdemangle_dep')\n\n# handle blake3 algo\nblake3_proj = subproject('blake3', default_options: ['default_library=static', 'werror=false'])\nblake3_dep = blake3_proj.get_variable('blake3_dep')\n\n# handle openssl library\nsys_openssl = dependency('openssl', required: get_option('use_sys_openssl'), static: is_static_build)\n\n# handle tree-sitter\nr = run_command(py3_exe, check_meson_subproject_py, 'tree-sitter', check: false)\nif r.returncode() == 1 and get_option('subprojects_check')\n  error(subproject_clean_error_msg)\nendif\n\ntree_sitter_dep = dependency('tree-sitter', required: get_option('use_sys_tree_sitter'), static: is_static_build, fallback: [])\nif not tree_sitter_dep.found()\n  tree_sitter_proj = subproject('tree-sitter', default_options: ['default_library=static'])\n  tree_sitter_dep = tree_sitter_proj.get_variable('tree_sitter_dep')\n  meson.override_dependency('tree-sitter', tree_sitter_dep)\nendif\n\n# handle rizin-grammar-c\nr = run_command(py3_exe, check_meson_subproject_py, 'rizin-grammar-c', check: false)\nif r.returncode() == 1 and get_option('subprojects_check')\n  error(subproject_clean_error_msg)\nendif\n\nrizin_grammar_c_dep = dependency('rizin-grammar-c', required: get_option('use_sys_tree_sitter'), static: is_static_build, fallback: [])\nif not rizin_grammar_c_dep.found()\n  rizin_grammar_c_proj = subproject('rizin-grammar-c', default_options: ['default_library=static'])\n  rizin_grammar_c_dep = rizin_grammar_c_proj.get_variable('rizin_grammar_c_dep')\n  # override done in rizin-grammar-c subproject\nendif\n\nhas_debugger = get_option('debugger')\nhave_ptrace = not ['windows', 'cygwin', 'sunos', 'haiku'].contains(host_machine.system())\nuse_ptrace_wrap = ['linux'].contains(host_machine.system())\n\nhave_ptrace = have_ptrace and has_debugger\nuse_ptrace_wrap = use_ptrace_wrap and has_debugger\n\nmessage('HAVE_PTRACE: @0@'.format(have_ptrace))\nmessage('USE_PTRACE_WRAP: @0@'.format(use_ptrace_wrap))\n\nchecks_level = get_option('checks_level')\nif checks_level == 9999\n  if get_option('buildtype') == 'release'\n    checks_level = 1\n  else\n    checks_level = 2\n  endif\nendif\n\nmessage('RZ_CHECKS_LEVEL: @0@'.format(checks_level))\n\nuserconf = configuration_data()\nccs = [[cc, userconf, host_machine, false]]\nif meson.is_cross_build()\n  userconf_native = configuration_data()\n  ccs += [[cc_native, userconf_native, build_machine, true]]\nendif\nuserconfs = []\n\nforeach it : ccs\n  it_cc = it[0]\n  it_userconf = it[1]\n  it_machine = it[2]\n  it_native = it[3]\n\n  # required for linux\n  it_utl = it_cc.find_library('util', required: false, static: is_static_build)\n  it_ldl = it_cc.find_library('dl', required: false, static: is_static_build)\n  it_th = dependency('threads', required: false, static: is_static_build, native: it_native)\n  have_pthread = it_th.found() and it_machine.system() != 'windows'\n  if it_machine.system() == 'sunos'\n    # workaround for Solaris until https://github.com/mesonbuild/meson/issues/4328 is fixed\n    it_mth = declare_dependency(link_args: '-lm')\n  else\n    it_mth = it_cc.find_library('m', required: false, static: is_static_build)\n  endif\n  it_lrt = dependency('', required: false, native: it_native)\n  if not it_cc.has_function('clock_gettime', prefix: '#include <time.h>') and it_cc.has_header_symbol('features.h', '__GLIBC__')\n    it_lrt = it_cc.find_library('rt', required: true, static: is_static_build)\n  endif\n  have_lrt = not ['windows', 'darwin', 'openbsd', 'android', 'haiku'].contains(it_machine.system())\n  if have_lrt and not it_lrt.found()\n    it_lrt = it_cc.find_library('rt', required: true, static: is_static_build)\n  endif\n  # FreeBSD has backtrace() in libexecinfo\n  it_lexecinfo = it_cc.find_library('execinfo', required: false)\n\n  it_userconf.set('RZ_CHECKS_LEVEL', checks_level)\n  it_userconf.set10('IS_PORTABLE', get_option('portable'))\n  it_userconf.set10('HAVE_LIB_MAGIC', sys_magic.found())\n  it_userconf.set10('USE_LIB_MAGIC', sys_magic.found())\n  it_userconf.set10('HAVE_LIB_PCRE2', pcre2_dep.found())\n  it_userconf.set10('USE_LIB_PCRE2', pcre2_dep.found())\n  it_userconf.set10('HAVE_LIB_XXHASH', xxhash_dep.found())\n  it_userconf.set10('USE_LIB_XXHASH', xxhash_dep.found())\n  it_userconf.set10('DEBUGGER', has_debugger)\n  if extra_prefix != ''\n    it_userconf.set_quoted('EXTRA_PREFIX', extra_prefix)\n  else\n    it_userconf.set10('EXTRA_PREFIX', false)\n  endif\n  it_userconf.set('PREFIX', rizin_prefix)\n  it_userconf.set('BINDIR', rizin_bindir)\n  it_userconf.set('BINDIR_DEPTH', bindir_depth)\n  it_userconf.set('LIBDIR', rizin_libdir)\n  it_userconf.set('INCLUDEDIR', rizin_incdir)\n  it_userconf.set('DATADIR_RZ', rizin_datdir_rz)\n  is_ppc = it_machine.cpu_family() == 'ppc' or it_machine.cpu_family() == 'ppc64'\n  it_userconf.set10('HAVE_JEMALLOC', it_machine.system() != 'windows' and (it_machine.system() != 'darwin' or not is_ppc))\n  it_userconf.set('DATADIR', rizin_datdir)\n  it_userconf.set('WWWROOT', rizin_wwwroot)\n  it_userconf.set('SDB', rizin_sdb)\n  it_userconf.set('SIGDB', rizin_sigdb)\n  it_userconf.set('THEMES', rizin_themes)\n  it_userconf.set('FORTUNES', rizin_fortunes)\n  it_userconf.set('FLAGS', rizin_flags)\n  it_userconf.set('HUD', rizin_hud)\n  it_userconf.set('PLUGINS', rizin_plugins)\n  it_userconf.set('BINDINGS', rizin_bindings)\n  it_userconf.set10('HAVE_OPENSSL', sys_openssl.found())\n  it_userconf.set10('WANT_DYLINK', true)\n  it_userconf.set10('HAVE_PTRACE', have_ptrace)\n  it_userconf.set10('USE_PTRACE_WRAP', use_ptrace_wrap)\n  it_userconf.set10('WITH_GPL', get_option('use_gpl'))\n  it_userconf.set10('WITH_SWIFT_DEMANGLER', get_option('use_swift_demangler'))\n  it_userconf.set10('RZ_BUILD_DEBUG', get_option('buildtype').startswith('debug'))\n  ok = it_cc.has_header_symbol('sys/personality.h', 'ADDR_NO_RANDOMIZE')\n  it_userconf.set10('HAVE_DECL_ADDR_NO_RANDOMIZE', ok)\n  ok = it_cc.has_header_symbol('sys/procctl.h', 'PROC_ASLR_CTL')\n  it_userconf.set10('HAVE_DECL_PROCCTL_ASLR_CTL', ok)\n  it_userconf.set10('HAVE_THREADS', it_th.found())\n  it_userconf.set10('HAVE_PTHREAD', have_pthread)\n  it_userconf.set10('HAVE_LZMA', get_option('use_lzma'))\n  it_userconf.set10('HAVE_ZLIB', get_option('use_zlib'))\n  it_userconf.set10('SUPPORTS_PCRE2_JIT', pcre2_jit_supported)\n  it_userconf.set('N_THREAD_LIMIT', get_option('n_thread_limit'))\n\n  if it_machine.system() == 'freebsd' or it_machine.system() == 'dragonfly'\n    add_project_link_arguments('-Wl,--unresolved-symbols,ignore-in-object-files', language: 'c', native: it_native)\n    add_project_link_arguments('-Wl,--allow-shlib-undefined', language: 'c', native: it_native)\n  endif\n\n  if it_machine.system() == 'darwin'\n    # On older Mac OS X versions (at least Lion and older), environ is only available when compiling an executable,\n    # but we will use is primarily in shared libs. Unfortunately, it_cc.links() only checks for executable compiling,\n    # so this does not help us.\n    # But in fact, even the environ(7) man page on macOS 11.6 still claims that environ is not avaliable for\n    # shared libs (even though it seems to work) and suggests using _NSGetEnviron(), so let's just do this always.\n    have_environ = false\n  elif host_machine.system() == 'windows'\n    code = '#include <stdlib.h>\\n\\nint main() { char **env = environ; }'\n    have_environ = cc.links(code, name: 'have environ')\n  else\n    code = '#include <unistd.h>\\nextern char **environ;\\nint main() { char **env = environ; }'\n    have_environ = it_cc.links(code, name: 'have extern char **environ')\n  endif\n  it_userconf.set10('HAVE_ENVIRON', have_environ)\n  message('HAVE_ENVIRON: @0@'.format(have_environ))\n\n  code = '#if __is_target_os(ios)\\nint x = 0;\\n#endif\\nint main() { x++; }'\n  is_ios = it_cc.links(code, name: 'target is ios')\n  it_userconf.set10('IS_IOS', is_ios)\n  message('IS_IOS: @0@'.format(is_ios))\n\n  foreach item : [\n      ['arc4random', '#include <stdlib.h>', []],\n      ['arc4random_uniform', '#include <stdlib.h>', []],\n      ['explicit_bzero', '#include <string.h>', []],\n      ['explicit_memset', '#include <string.h>', []],\n      ['clock_nanosleep', '#include <time.h>', []],\n      ['clock_gettime', '#include <time.h>', [it_lrt]],\n      ['sigaction', '#include <signal.h>', []],\n      ['pipe', '#include <unistd.h>', []],\n      ['execv', '#include <unistd.h>', []],\n      ['execve', '#include <unistd.h>', []],\n      ['execvp', '#include <unistd.h>', []],\n      ['execl', '#include <unistd.h>', []],\n      ['system', '#include <stdlib.h>', []],\n      ['realpath', '#include <stdlib.h>', []],\n      ['fork', '#include <unistd.h>', []],\n      ['nice', '#include <unistd.h>', []],\n      ['copyfile', '#include <copyfile.h>', []],\n      ['strlcpy', '#include <string.h>', []],\n      ['strnlen', '#include <string.h>', []],\n      ['shm_open', '#include <sys/mman.h>', [it_lrt]],\n      ['openpty', '', [it_utl]],\n      ['forkpty', '', [it_utl]],\n      ['login_tty', '', [it_utl]],\n      ['pipe2', '#define _GNU_SOURCE\\n#include <fcntl.h>\\n#include <unistd.h>', []],\n      # copy_file_range for now disable on freebsd as it s not reliable even for small chunks\n      ['copy_file_range', '#ifdef __linux__\\n#define _GNU_SOURCE\\n#include <unistd.h>\\n#endif', []],\n      ['backtrace', '', [it_lexecinfo]],\n      ['__builtin_bswap16', '', []],\n      ['__builtin_bswap32', '', []],\n      ['__builtin_bswap64', '', []],\n      ['__builtin_clzll', '', []],\n      ['posix_memalign', '#include <stdlib.h>', []],\n      ['_aligned_malloc', '#include <malloc.h>', []],\n    ]\n    func = item[0]\n    ok = it_cc.has_function(func, prefix: item[1], dependencies: item[2])\n    it_userconf.set10('HAVE_@0@'.format(func.to_upper()), ok)\n  endforeach\n\n  foreach item : [\n      ['linux/ashmem.h', '', []],\n      ['sys/shm.h', '', []],\n      ['sys/ipc.h', '', []],\n      ['sys/mman.h', '', []],\n      ['inttypes.h', '', []],\n    ]\n    hdr = item[0]\n    ok = it_cc.has_header(hdr, prefix: item[1], dependencies: item[2])\n    it_userconf.set10('HAVE_HEADER_@0@'.format(hdr.underscorify().to_upper()), ok)\n  endforeach\n\n  if it_userconf.get('HAVE_PIPE2') == 1\n    add_project_arguments('-D_GNU_SOURCE', language: ['c', 'cpp'], native: it_native)\n  endif\n  userconfs += [[it_userconf, it_lrt, it_utl, it_ldl, it_mth, it_th]]\nendforeach\nuserconf = userconfs[0][0]\nlrt = userconfs[0][1]\nutl = userconfs[0][2]\nldl = userconfs[0][3]\nmth = userconfs[0][4]\nth = userconfs[0][5]\nif meson.is_cross_build()\n  userconf_native = userconfs[1][0]\n  lrt_native = userconfs[1][1]\n  utl_native = userconfs[1][2]\n  ldl_native = userconfs[1][3]\n  mth_native = userconfs[1][4]\n  th_native = userconfs[1][5]\nendif\n\nrz_userconf_h_in = files('librz/include/rz_userconf.h.in')\nrz_userconf_h = configure_file(\n  input: rz_userconf_h_in,\n  output: 'rz_userconf.h',\n  configuration: userconf,\n  install_dir: rizin_incdir\n)\n\npackager = get_option('packager')\npackager_version = get_option('packager_version')\n\nmessage('Version Major: @0@0'.format(rizin_version_major))\nmessage('Version Minor: @0@0'.format(rizin_version_minor))\nmessage('Version Patch: @0@0'.format(rizin_version_patch))\n\nversionconf = configuration_data()\nversionconf.set('RZ_VERSION_MAJOR', rizin_version_major)\nversionconf.set('RZ_VERSION_MINOR', rizin_version_minor)\nversionconf.set('RZ_VERSION_PATCH', rizin_version_patch)\nversionconf.set('RZ_VERSION_NUMBER', rizin_version_number)\nversionconf.set('RZ_VERSION', rizin_version)\nif packager_version != ''\n  versionconf.set_quoted('RZ_PACKAGER_VERSION', packager_version)\n  if packager != ''\n    versionconf.set_quoted('RZ_PACKAGER', packager)\n  endif\nendif\nrz_version_h = configure_file(\n  input: 'librz/include/rz_build_version.h.in',\n  output: 'rz_build_version.h',\n  configuration: versionconf,\n  install_dir: rizin_incdir\n)\n\nif git_exe.found() and fs.exists('.git')\n  gittip_file = custom_target('gittip_file',\n    build_always_stale: true,\n    build_by_default: true,\n    output: 'gittip',\n    command: [py3_exe, git_exe_repo_py, git_exe, repo, '@OUTPUT@', 'rev-parse', 'HEAD'],\n    install: true,\n    install_dir: rizin_datdir_rz\n  )\nendif\n\n# handle zlib dependency\nzlib_dep = disabler()\nif get_option('use_zlib')\n  r = run_command(py3_exe, check_meson_subproject_py, 'zlib', check: false)\n  if r.returncode() == 1 and get_option('subprojects_check')\n    error(subproject_clean_error_msg)\n  endif\n\n  zlib_dep = dependency('zlib', required: get_option('use_sys_zlib'), static: is_static_build)\n  if not zlib_dep.found()\n    zlib_proj = subproject('zlib', default_options: ['default_library=static', 'werror=false'])\n    zlib_dep = zlib_proj.get_variable('zlib_dep')\n    meson.override_dependency('zlib', zlib_dep)\n  endif\nendif\n\n# handle lz4 dependency\nr = run_command(py3_exe, check_meson_subproject_py, 'lz4', check: false)\nif r.returncode() == 1 and get_option('subprojects_check')\n  error(subproject_clean_error_msg)\nendif\n\nlz4_dep = dependency('liblz4', required: get_option('use_sys_lz4'), static: is_static_build)\nif not lz4_dep.found()\n  lz4_proj = subproject('lz4', default_options: ['default_library=static'])\n  lz4_dep = lz4_proj.get_variable('lz4_dep')\nendif\n\n# handle lzma dependency\nliblzma_dep = disabler()\nif get_option('use_lzma')\n  r = run_command(py3_exe, check_meson_subproject_py, 'lzma', check: false)\n  if r.returncode() == 1 and get_option('subprojects_check')\n    error(subproject_clean_error_msg)\n  endif\n\n  liblzma_dep = dependency('liblzma', required: get_option('use_sys_lzma'), static: is_static_build)\n  if not liblzma_dep.found()\n    liblzma_proj = subproject('liblzma', default_options: ['default_library=static'])\n    liblzma_dep = liblzma_proj.get_variable('lzma_dep')\n    meson.override_dependency('liblzma', liblzma_dep)\n  endif\nendif\n\n# handle softfloat dependency\nr = run_command(py3_exe, check_meson_subproject_py, 'softfloat', check: false)\nif r.returncode() == 1 and get_option('subprojects_check')\n  error(subproject_clean_error_msg)\nendif\n\nsoftfloat_dep = dependency('softfloat', required: get_option('use_sys_softfloat'), static: is_static_build)\nif not softfloat_dep.found()\n  softfloat_proj = subproject('softfloat', default_options: ['default_library=static'])\n  softfloat_dep = softfloat_proj.get_variable('softfloat_dep')\nendif\n\nif meson.is_cross_build()\n  softfloat_cross_native_proj = subproject('softfloat_cross_native', default_options: ['default_library=static', 'cross_native=true'])\n  softfloat_cross_native_dep = softfloat_cross_native_proj.get_variable('softfloat_dep')\nendif\n\n# handle zip dependency\nr = run_command(py3_exe, check_meson_subproject_py, 'libzip', check: false)\nif r.returncode() == 1 and get_option('subprojects_check')\n  error(subproject_clean_error_msg)\nendif\n\nlibzip_dep = dependency('libzip', required: get_option('use_sys_libzip'), static: is_static_build)\nif not libzip_dep.found()\n  libzip_proj = subproject('libzip', default_options: [\n    'default_library=static',\n    'static_runtime=@0@'.format(is_static_build),\n    'use_sys_openssl=@0@'.format(get_option('use_sys_libzip_openssl')),\n  ])\n  libzip_dep = libzip_proj.get_variable('libzip_dep')\nendif\n\n# handle zstd dependency\nr = run_command(py3_exe, check_meson_subproject_py, 'zstd', check: false)\nif r.returncode() == 1 and get_option('subprojects_check')\n  error(subproject_clean_error_msg)\nendif\n\nlibzstd_dep = dependency('libzstd', required: get_option('use_sys_libzstd'), static: is_static_build, fallback: [])\nif not libzstd_dep.found()\n  zstd_proj = subproject('zstd', default_options: [\n      'default_library=static',\n      'static_runtime=@0@'.format(is_static_build),\n  ])\n  libzstd_dep = zstd_proj.get_variable('libzstd_dep')\n  meson.override_dependency('zstd', libzstd_dep)\nendif\n\n# handle mpc dependency\nr = run_command(py3_exe, check_meson_subproject_py, 'mpc', check: false)\nif r.returncode() == 1 and get_option('subprojects_check')\n  error(subproject_clean_error_msg)\nendif\n\nmpc_proj = subproject('mpc', default_options: ['default_library=static'])\nmpc_dep = mpc_proj.get_variable('mpc_dep')\n\n# handle yxml dependency\nr = run_command(py3_exe, check_meson_subproject_py, 'yxml', check: false)\nif r.returncode() == 1 and get_option('subprojects_check')\n  error(subproject_clean_error_msg)\nendif\n\nyxml_proj = subproject('yxml', default_options: ['default_library=static'])\nyxml_dep = yxml_proj.get_variable('yxml_dep')\n\nuse_rpath = false\nuse_rpath_absolute = false\nif host_machine.system() != 'windows' and get_option('default_library') == 'shared'\n  if get_option('local') == 'enabled'\n    use_rpath = true\n  elif get_option('local') == 'absolute'\n    use_rpath_absolute = true\n  elif get_option('local') == 'auto' and get_option('prefix') != '/usr'\n    if host_machine.system() == 'openbsd'\n      # OpenBSD's $ORIGIN only works in the way we would need it when running an\n      # executable by its actual path, but not when run through PATH.\n      # So let's use absolute rpaths there.\n      use_rpath_absolute = true\n    else\n      use_rpath = true\n    endif\n  endif\nendif\n\nrpath_exe = ''\nrpath_lib = ''\nrpath_summary = 'disabled'\nif use_rpath\n  # Use bindir depth to create a path to the rootdir from bindir\n  py_cmd = 'import os; print(\"../\" * @0@)'.format(bindir_depth.to_int())\n  py_cmd = run_command(py3_exe, '-c', py_cmd, check: true)\n  path_to_rootdir = py_cmd.stdout().strip()\n\n  rpath_exe = '$ORIGIN/' + path_to_rootdir + get_option('libdir')\n  rpath_lib = '$ORIGIN'\n  rpath_summary = 'relative'\nelif use_rpath_absolute\n  rpath_exe = get_option('prefix') / get_option('libdir')\n  rpath_lib = get_option('prefix') / get_option('libdir')\n  rpath_summary = 'absolute'\nendif\n# NOTE: this is to workaround an issue on Windows where unit tests don't use\n# the right libraries, resulting in tests not being run properly\ntest_env_common_path = []\nbuild_root = meson.current_build_dir()\nif host_machine.system() == 'windows'\n  test_env_common_path += [\n    build_root / 'librz' / 'arch',\n    build_root / 'librz' / 'bin',\n    build_root / 'librz' / 'bp',\n    build_root / 'librz' / 'config',\n    build_root / 'librz' / 'cons',\n    build_root / 'librz' / 'signature',\n    build_root / 'librz' / 'core',\n    build_root / 'librz' / 'demangler',\n    build_root / 'librz' / 'diff',\n    build_root / 'librz' / 'crypto',\n    build_root / 'librz' / 'debug',\n    build_root / 'librz' / 'egg',\n    build_root / 'librz' / 'flag',\n    build_root / 'librz' / 'hash',\n    build_root / 'librz' / 'io',\n    build_root / 'librz' / 'lang',\n    build_root / 'librz' / 'magic',\n    build_root / 'librz' / 'main',\n    build_root / 'librz' / 'parse',\n    build_root / 'librz' / 'reg',\n    build_root / 'librz' / 'search',\n    build_root / 'librz' / 'socket',\n    build_root / 'librz' / 'syscall',\n    build_root / 'librz' / 'type',\n    build_root / 'librz' / 'util',\n  ]\nendif\n\nsubdir('librz')\n\nif get_option('install_sigdb')\n  r = run_command(py3_exe, check_meson_subproject_py, 'sigdb', check: false)\n  if r.returncode() == 1 and get_option('subprojects_check')\n    error(subproject_clean_error_msg)\n  endif\n  subproject('sigdb', default_options: ['sigdb_path=@0@'.format(get_option('prefix') / rizin_sigdb)])\nendif\n\ncli_option = get_option('cli')\ncli_enabled = cli_option.auto() ? not meson.is_subproject() : cli_option.enabled()\nif cli_enabled\n  subdir('binrz')\n\n  install_data('doc/hud',\n    install_dir: rizin_hud,\n    rename: 'main'\n  )\nendif\n\nsubdir('test')\n\ninstall_data(\n  'doc/fortunes.fun',\n  'doc/fortunes.tips',\n  install_dir: rizin_fortunes\n)\n\ndist_script = 'sys/meson_dist_script.py'\nif meson.version().version_compare('>=0.49.0') and meson.version().version_compare('<0.57.0')\n  meson.add_dist_script(meson.source_root() / dist_script)\nelse\n  meson.add_dist_script(files(dist_script))\nendif\n\nsummary({\n  'prefix': rizin_prefix,\n  'bindir': rizin_bindir,\n  'libdir': rizin_libdir,\n  'includedir': rizin_incdir,\n  'datadir': rizin_datdir,\n  'wwwroot': rizin_wwwroot,\n  'sdb': rizin_sdb,\n  'sigdb': rizin_sigdb,\n  'themes': rizin_themes,\n  'fortunes': rizin_fortunes,\n  'flags': rizin_flags,\n  'hud': rizin_hud,\n  'plugins': rizin_plugins,\n  'bindings': rizin_bindings,\n}, section: 'Directories')\n\nsummary({\n  'GPL code': get_option('use_gpl'),\n  'Install sigdb': get_option('install_sigdb'),\n  'Swift demangler': get_option('use_swift_demangler'),\n  'Debugger enabled': has_debugger,\n  'Capstone version': capstone_dep.version(),\n  'PCRE2 version': pcre2_dep.version(),\n  'PCRE2 JIT': pcre2_jit_supported,\n  'System magic library': sys_magic.found() and sys_magic.type_name() != 'internal',\n  'System pcre2 library': pcre2_dep.found() and pcre2_dep.type_name() != 'internal',\n  'System xxhash library': xxhash_dep.found() and xxhash_dep.type_name() != 'internal',\n  'System libmspack library': libmspack_dep.found() and libmspack_dep.type_name() != 'internal',\n  'System openssl library': sys_openssl.found() and sys_openssl.type_name() != 'internal',\n  'System capstone library': capstone_dep.found() and capstone_dep.type_name() != 'internal',\n  'System tree-sitter library': tree_sitter_dep.found() and tree_sitter_dep.type_name() != 'internal',\n  'System lz4 library': lz4_dep.found() and lz4_dep.type_name() != 'internal',\n  'System lzma library': liblzma_dep.found() and liblzma_dep.type_name() != 'internal',\n  'System softfloat library': softfloat_dep.found() and softfloat_dep.type_name() != 'internal',\n  'System zlib library': zlib_dep.found() and zlib_dep.type_name() != 'internal',\n  'System zstd library': libzstd_dep.found() and libzstd_dep.type_name() != 'internal',\n  'System zip library': libzip_dep.found() and libzip_dep.type_name() != 'internal',\n  'Use ptrace-wrap': use_ptrace_wrap,\n  'Use RPATH': rpath_summary,\n}, section: 'Configuration', bool_yn: true)\n\n# output will be slightly degraded if there's only 1 crca_crc hash plugin and/or last hash plugin is a crca_crc plugin\ncomb_hash_plugins = []\nin_crca_loop = false\nforeach plugin : hash_plugins.get('list')\n  if plugin.startswith('crca_crc')\n    comb_hash_plugins += (in_crca_loop ? '' : 'crca_crc(') + plugin.split('_')[1].split('crc')[1]\n    in_crca_loop = true\n  else\n    if in_crca_loop\n      # add closing parenthesis to last crca_cec plugin\n      parenthesized_last = []\n      foreach item : comb_hash_plugins\n        if item not in [comb_hash_plugins[-1]]\n          parenthesized_last += item\n        endif\n      endforeach\n      parenthesized_last += comb_hash_plugins[-1] + ')'\n      comb_hash_plugins = parenthesized_last\n    endif\n    comb_hash_plugins += plugin\n    in_crca_loop = false\n  endif\nendforeach\n\nsummary({\n  'Arch Plugins': arch_plugins.get('list'),\n  'Binary Plugins': bin_plugins.get('list'),\n  'BinXtr Plugins': bin_xtr_plugins.get('list'),\n  'Breakpoint Plugins': bp_plugins.get('list'),\n  'Core Plugins': core_plugins.get('list'),\n  'Crypto Plugins': crypto_plugins.get('list'),\n  'Debug Plugins': debug_plugins.get('list'),\n  'Egg Plugins': egg_plugins.get('list'),\n  'IO Plugins': io_plugins.get('list'),\n  'Lang Plugins': lang_plugins.get('list'),\n  'Hash Plugins': comb_hash_plugins,\n  'Demangler Plugins': demangler_plugins.get('list'),\n}, section: 'Plugins', list_sep: ', ')\n"
        },
        {
          "name": "meson_options.txt",
          "type": "blob",
          "size": 4.5927734375,
          "content": "option('packager', type: 'string', value: '', description: 'Extra packager name')\noption('packager_version', type: 'string', value: '', description: 'Extra packager version')\noption('cli', type: 'feature', value: 'auto', description: 'Build CLI programs (“auto” means they will be built when not a subproject)')\noption('static_runtime', type: 'boolean', value: false, description: 'Set to true when you want static libraries/dependencies and runtime in Rizin')\noption('local', type: 'combo', choices: ['enabled', 'disabled', 'absolute', 'auto'], value: 'auto', description: 'Adds support for local/side-by-side installation (sets rpath if needed). enabled uses rpaths relative to $ORIGIN, absolute uses absolute paths.')\noption('blob', type: 'boolean', value: false, description: 'Compile just one binary which dispatch to the right handlers based on the name used to call it')\noption('subprojects_check', type: 'boolean', value: true, description: 'Check if git subprojects are up-to-date. Might be useful to disable this when developing on a different subproject version')\noption('portable', type: 'boolean', value: false, description: 'Make rizin installation moveable, by using relative paths instead of absolute ones')\noption('extra_prefix', type: 'string', value: '', description: 'Extra load path prefix (absolute path) for plugins, sdb, sigdb, etc.')\noption('n_thread_limit', type: 'integer', min: 1, value: 32767)\n\noption('rizin_wwwroot', type: 'string', value: '', description: 'Install path for www files')\noption('rizin_sdb', type: 'string', value: '', description: 'Install path for all SDB files')\noption('rizin_sigdb', type: 'string', value: '', description: 'Install path for sigdb files')\noption('rizin_themes', type: 'string', value: '', description: 'Install path for themes (colors, etc.)')\noption('rizin_fortunes', type: 'string', value: '', description: 'Install path for fortunes displayed when starting')\noption('rizin_flags', type: 'string', value: '', description: 'Install path for flags tags')\noption('rizin_hud', type: 'string', value: '', description: 'Install path for hud file (V!/)')\noption('rizin_plugins', type: 'string', value: '', description: 'Path where plugins are expected to be found')\noption('rizin_bindings', type: 'string', value: '', description: 'Path where rizin bindings are expected to be found')\n\noption('checks_level', type: 'integer', value: 9999, description: 'Value between 0 and 3 to enable different level of assert (see RZ_CHECKS_LEVEL). By default its value depends on buildtype (2 on debug, 1 on release).')\noption('use_sys_capstone', type: 'feature', value: 'disabled')\noption('use_capstone_version', type: 'combo', choices: ['v4', 'v5', 'v6', 'next'], value: 'next', description: 'Specify which version of capstone to use')\noption('use_sys_magic', type: 'feature', value: 'disabled')\noption('use_sys_libzip', type: 'feature', value: 'disabled')\noption('use_sys_libzip_openssl', type: 'boolean', value: false, description: 'Whether to use or not system openssl dependency to build libzip')\noption('use_sys_zlib', type: 'feature', value: 'disabled')\noption('use_sys_lz4', type: 'feature', value: 'disabled')\noption('use_sys_libzstd', type: 'feature', value: 'disabled')\noption('use_lzma', type: 'boolean', value: true, description: 'If true, liblzma is used to provide extra features (e.g. .gnu_debugdata parser)')\noption('use_zlib', type: 'boolean', value: true, description: 'If true, zlib is used to provide extra features (e.g. project compression/decompression, etc.)')\noption('use_sys_lzma', type: 'feature', value: 'disabled')\noption('use_sys_xxhash', type: 'feature', value: 'disabled')\noption('use_sys_openssl', type: 'feature', value: 'disabled')\noption('use_sys_libmspack', type: 'feature', value: 'disabled')\noption('use_sys_tree_sitter', type: 'feature', value: 'disabled')\noption('use_sys_pcre2', type: 'feature', value: 'disabled')\noption('use_sys_softfloat', type: 'feature', value: 'disabled')\noption('use_swift_demangler', type: 'boolean', value: true, description: 'If false, disables the swift demangler')\noption('use_gpl', type: 'boolean', value: true, description: 'Set to false when you want to disable gpl code')\noption('install_sigdb', type: 'boolean', value: false, description: 'Downloads and installs rizin sigdb')\noption('debugger', type: 'boolean', value: true)\n\noption('enable_tests', type: 'boolean', value: true, description: 'Build unit tests in test/unit')\noption('enable_rz_test', type: 'boolean', value: true, description: 'Build rz-test executable for regression testing')\noption('regenerate_cmds', type: 'feature', value: 'auto', description: 'Regenerate the cmd_descs.[ch] files (requires PyYAML)')\n"
        },
        {
          "name": "snapcraft.yaml",
          "type": "blob",
          "size": 2.08984375,
          "content": "# SPDX-FileCopyrightText: 2018 Simos Xenitellis\n# SPDX-License-Identifier: LGPL-3.0-only\n\nname: rizin\nversion: '0.8.0'\nbase: core18\nsummary: Rizin reverse engineering framework and tool\ndescription: |\n  Rizin is a complete framework for reverse-engineering\n  and analyzing binaries; composed of a set of small utilities\n  that can be used together or independently from the command line.\n  Built around a disassembler for computer software which generates\n  assembly language source code from machine-executable code,\n  it supports a variety of executable formats for different processors\n  and operating systems.\n\ngrade: devel # Development version, can only publish to beta/candidate channels.\nconfinement: devmode # Unrestricted access, only to beta/candidate channels.\n\n# rizin requires in most cases privileged access to resources.\n# The following \"plugs\" are thus superfluous because the \"devmode\" confinement\n# gives full access to the system as if it were a DEB/RPM package.\n# With the following plugs though, and the \"strict\" confinement, rizin\n# would be able to do things like editing an executable file in the $HOME folder.\n\napps:\n  rizin:\n    command: usr/bin/rizin\n    plugs: [home]\n  rz-find:\n    command: usr/bin/rz-find\n    plugs: [home]\n  rz-hash:\n    command: usr/bin/rz-hash\n    plugs: [home]\n  rz-asm:\n    command: usr/bin/rz-asm\n    plugs: [home]\n  rz-bin:\n    command: usr/bin/rz-bin\n    plugs: [home]\n  rz-diff:\n    command: usr/bin/rz-diff\n    plugs: [home]\n  rz-gg:\n    command: usr/bin/rz-gg\n    plugs: [home]\n  rz-run:\n    command: usr/bin/rz-run\n    plugs: [home]\n  rz-ax:\n    command: usr/bin/rz-ax\n    plugs: [home]\n  rz-sign:\n    command: usr/bin/rz-sign\n    plugs: [home]\n\nparts:\n  rizin:\n    source: https://github.com/rizinorg/rizin.git\n    source-tag: '0.8.0'\n    plugin: meson\n    meson-parameters: [--prefix=/usr]\n    override-build: |\n      pip3 install --system meson\n      snapcraftctl build\n    build-packages:\n      - python3-pip\n      - python3-setuptools\n      - libmagic-dev\n      - pkg-config\n      - libzip-dev\n      - liblz4-dev\n      - libssl-dev\n      - libbsd-dev\n      - libcapstone-dev\n"
        },
        {
          "name": "subprojects",
          "type": "tree",
          "content": null
        },
        {
          "name": "sys",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "travis-extract-var.sh",
          "type": "blob",
          "size": 0.8974609375,
          "content": "#!/bin/bash\n#\n# SPDX-FileCopyrightText: 2021 ret2libc <sirmy15@gmail.com>\n# SPDX-License-Identifier: LGPL-3.0-only\n\nprint_var()\n{\n    VAR_NAME=$1\n    VAR_VALUE=$2\n    if [ \"${VAR_VALUE}\" != \"\" ] ; then\n        printf \"export %s=%q\\n\" \"${VAR_NAME}\" \"${VAR_VALUE}\"\n    fi\n}\n\nenv -0 | while IFS='=' read -r -d '' n v; do\n    if [[ \"${n}\" =~ ^TRAVIS* || \"${n}\" =~ ^RZ* || \"${n}\" =~ SAN_* || \"%{n}\" =~ CODECOV_* || \"%{n}\" =~ VCS_* || \"%{n}\" =~ CI_* ]]; then\n        print_var \"${n}\" \"${v}\"\n    fi\ndone\n\n# print extra variables\nprint_var DEBPKG \"${DEBPKG}\"\nprint_var CC \"${CC}\"\nprint_var CXX \"${CXX}\"\nprint_var CFLAGS \"${CFLAGS}\"\nprint_var LDFLAGS \"${LDFLAGS}\"\nprint_var CXXFLAGS \"${CXXFLAGS}\"\nprint_var TRAVIS \"${TRAVIS}\"\nprint_var INSTALL_SYSTEM \"${INSTALL_SYSTEM}\"\nprint_var MESON_OPTIONS \"${MESON_OPTIONS}\"\nprint_var COVERAGE \"${COVERAGE}\"\nprint_var ASAN \"${ASAN}\"\nprint_var SHIPPABLE \"${SHIPPABLE}\"\nprint_var CI \"${CI}\"\n"
        },
        {
          "name": "travis-script",
          "type": "blob",
          "size": 1.5146484375,
          "content": "#!/bin/bash\n#\n# SPDX-FileCopyrightText: 2021 ret2libc <sirmy15@gmail.com>\n# SPDX-License-Identifier: LGPL-3.0-only\n\nset -x\n\nexport PATH=${TRAVIS_BUILD_DIR}/install/bin:${PATH}\nexport LD_LIBRARY_PATH=${TRAVIS_BUILD_DIR}/install/lib/$(uname -m)-linux-gnu:${TRAVIS_BUILD_DIR}/install/lib:${TRAVIS_BUILD_DIR}/install/lib64:${LD_LIBRARY_PATH}\n\necho \"Installing with meson + ninja\"\n\nOPTS=\"\"\nif [ \"${RZ_SYS_CAPSTONE}\" != \"\" ] ; then\n\tOPTS=\"${OPTS} -D use_sys_capstone=${RZ_SYS_CAPSTONE}\"\nfi\nif [ \"${RZ_SYS_MAGIC}\" != \"\" ] ; then\n\tOPTS=\"${OPTS} -D use_sys_magic=${RZ_SYS_MAGIC}\"\nfi\nif [ \"${RZ_SYS_ZLIB}\" != \"\" ] ; then\n\tOPTS=\"${OPTS} -D use_sys_zlib=${RZ_SYS_ZLIB}\"\nfi\nif [ \"${RZ_SYS_ZIP}\" != \"\" ] ; then\n\tOPTS=\"${OPTS} -D use_sys_libzip=${RZ_SYS_ZIP}\"\nfi\nif [ \"${RZ_SYS_LZ4}\" != \"\" ] ; then\n\tOPTS=\"${OPTS} -D use_sys_lz4=${RZ_SYS_LZ4}\"\nfi\nif [ \"${RZ_SYS_OPENSSL}\" != \"\" ] ; then\n\tOPTS=\"${OPTS} -D use_sys_openssl=${RZ_SYS_OPENSSL}\"\nfi\nif [ \"${RZ_RZSHELL}\" != \"\" ] ; then\n\tOPTS=\"${OPTS} -D use_treesitter=${RZ_RZSHELL}\"\nfi\nif [ \"${COVERAGE}\" == \"1\" ] ; then\n\tOPTS=\"${OPTS} -Db_coverage=true\"\nfi\n\nmeson setup --prefix=${TRAVIS_BUILD_DIR}/install ${OPTS} build || exit 1\nninja -C build || exit 1\nninja -C build install || exit 1\nexport PKG_CONFIG_PATH=$(pwd)/build/meson-private:${PKG_CONFIG_PATH}\n\nif [ \"${RZ_TESTS_DISABLE}\" != \"1\" ] ; then\n\texport NOREPORT=1\n\tgit clone https://github.com/rizinorg/rizin-testbins test/bins\n\t# Unit tests\n\tVERBOSE=1 RZ_TEST_ARGS=-t1920 ninja -C build test || exit 1\n\t# Integration tests\n\tcd test\n\trz-test -L -o results.json\nfi\n"
        }
      ]
    }
  ]
}