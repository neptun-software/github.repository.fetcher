{
  "metadata": {
    "timestamp": 1736710073795,
    "page": 689,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "leixiaohua1020/simplest_ffmpeg_mobile",
      "stars": 1931,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.458984375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.1806640625,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.sln.docstates\n\n# Build results\n\n[Dd]ebug/\n[Rr]elease/\nx64/\nbuild/\n[Bb]in/\n[Oo]bj/\n\n# Enable \"build/\" folder in the NuGet Packages folder since NuGet packages use it for MSBuild targets\n!packages/*/build/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n*_i.c\n*_p.c\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.log\n*.scc\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opensdf\n*.sdf\n*.cachefile\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n*.ncrunch*\n.*crunch*.local.xml\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.Publish.xml\n\n# NuGet Packages Directory\n## TODO: If you have NuGet Package Restore enabled, uncomment the next line\n#packages/\n\n# Windows Azure Build Output\ncsx\n*.build.csdef\n\n# Windows Store app package directory\nAppPackages/\n\n# Others\nsql/\n*.Cache\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.dbmdl\n*.[Pp]ublish.xml\n*.pfx\n*.publishsettings\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file to a newer\n# Visual Studio version. Backup files are not needed, because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\nApp_Data/*.mdf\nApp_Data/*.ldf\n\n\n#LightSwitch generated files\nGeneratedArtifacts/\n_Pvt_Extensions/\nModelManifest.xml\n\n# =========================\n# Windows detritus\n# =========================\n\n# Windows image file caches\nThumbs.db\nehthumbs.db\n\n# Folder config file\nDesktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Mac desktop service store files\n.DS_Store\n"
        },
        {
          "name": "Readme.txt",
          "type": "blob",
          "size": 2.4140625,
          "content": "最简单的基于FFmpeg的移动端例子\nSimplest FFmpeg Mobile\n\n雷霄骅 Lei Xiaohua\nleixiaohua1020@126.com\n中国传媒大学/数字电视技术\nCommunication University of China / Digital TV Technology\nhttp://blog.csdn.net/leixiaohua1020\n\n本解决方案包含了使用FFmpeg在移动端处理多媒体的各种例子：\n[Android]\nsimplest_android_player: 基于安卓接口的视频播放器\nsimplest_ffmpeg_android_helloworld: 安卓平台下基于FFmpeg的HelloWorld程序\nsimplest_ffmpeg_android_decoder: 安卓平台下最简单的基于FFmpeg的视频解码器\nsimplest_ffmpeg_android_decoder_onelib: 安卓平台下最简单的基于FFmpeg的视频解码器-单库版\nsimplest_ffmpeg_android_streamer: 安卓平台下最简单的基于FFmpeg的推流器\nsimplest_ffmpeg_android_transcoder: 安卓平台下移植的FFmpeg命令行工具\nsimplest_sdl_android_helloworld: 移植SDL到安卓平台的最简单程序\n[IOS]\nsimplest_ios_player: 基于IOS接口的视频播放器\nsimplest_ffmpeg_ios_helloworld: IOS平台下基于FFmpeg的HelloWorld程序\nsimplest_ffmpeg_ios_decoder: IOS平台下最简单的基于FFmpeg的视频解码器\nsimplest_ffmpeg_ios_streamer: IOS平台下最简单的基于FFmpeg的推流器\nsimplest_ffmpeg_ios_transcoder: IOS平台下移植的ffmpeg.c命令行工具\nsimplest_sdl_ios_helloworld: 移植SDL到IOS平台的最简单程序\n[Windows]\nsimplest_ffmpeg_windowsphone_helloworld: Windows Phone平台下基于FFmpeg的HelloWorld程序\n\nThis project contains examples about handling multi-media data based on FFmpeg on mobile devices.\n[Android]\nsimplest_android_player: Video player based on Android API\nsimplest_ffmpeg_android_helloworld: Simplest HelloWorld program based on FFmpeg in Android.\nsimplest_ffmpeg_android_decoder: Simplest decoder based on FFmpeg in Android.\nsimplest_ffmpeg_android_decoder_onelib: Simplest decoder based on FFmpeg in Android - One Library.\nsimplest_ffmpeg_android_streamer: Simplest streamer based on FFmpeg in Android.\nsimplest_ffmpeg_android_transcoder: Transcoder transplant from ffmpeg.c in Android.\nsimplest_sdl_android_helloworld: Simplest program based on SDL in Android.\n[IOS]\nsimplest_ios_player: Video player based on IOS API\nsimplest_ffmpeg_ios_helloworld: Simplest HelloWorld program based on FFmpeg in IOS.\nsimplest_ffmpeg_ios_decoder: Simplest decoder based on FFmpeg in IOS.\nsimplest_ffmpeg_ios_streamer: Simplest streamer based on FFmpeg in IOS.\nsimplest_ffmpeg_ios_transcoder: Transcoder transplant from ffmpeg.c in IOS.\nsimplest_sdl_ios_helloworld: Simplest program based on SDL in IOS.\n[Windows]\nsimplest_ffmpeg_windowsphone_helloworld: Simplest HelloWorld program based on FFmpeg in Windows Phone platform.\n"
        },
        {
          "name": "simplest_android_player",
          "type": "tree",
          "content": null
        },
        {
          "name": "simplest_ffmpeg_android_decoder",
          "type": "tree",
          "content": null
        },
        {
          "name": "simplest_ffmpeg_android_decoder_onelib",
          "type": "tree",
          "content": null
        },
        {
          "name": "simplest_ffmpeg_android_encoder",
          "type": "tree",
          "content": null
        },
        {
          "name": "simplest_ffmpeg_android_helloworld",
          "type": "tree",
          "content": null
        },
        {
          "name": "simplest_ffmpeg_android_streamer",
          "type": "tree",
          "content": null
        },
        {
          "name": "simplest_ffmpeg_android_transcoder",
          "type": "tree",
          "content": null
        },
        {
          "name": "simplest_ffmpeg_ios_decoder",
          "type": "tree",
          "content": null
        },
        {
          "name": "simplest_ffmpeg_ios_helloworld",
          "type": "tree",
          "content": null
        },
        {
          "name": "simplest_ffmpeg_ios_streamer",
          "type": "tree",
          "content": null
        },
        {
          "name": "simplest_ffmpeg_ios_transcoder",
          "type": "tree",
          "content": null
        },
        {
          "name": "simplest_ffmpeg_winphone_helloworld",
          "type": "tree",
          "content": null
        },
        {
          "name": "simplest_ios_player",
          "type": "tree",
          "content": null
        },
        {
          "name": "simplest_sdl_android_helloworld",
          "type": "tree",
          "content": null
        },
        {
          "name": "testscript",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}