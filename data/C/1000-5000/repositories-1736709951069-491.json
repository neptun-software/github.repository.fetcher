{
  "metadata": {
    "timestamp": 1736709951069,
    "page": 491,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "shadowsocks/simple-obfs",
      "stars": 2367,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.892578125,
          "content": "# Ignore files generated by autoconf\nMakefile.in\naclocal.m4\nauto/\nconfig.h.in\nconfigure\ndoc/Makefile.in\nm4/libtool.m4\nm4/ltoptions.m4\nm4/ltsugar.m4\nm4/ltversion.m4\nm4/lt~obsolete.m4\nsrc/Makefile.in\n\n# Ignore files generated by configure\nbuild/\n.deps/\n/Makefile\nsrc/Makefile\nlibev/Makefile\nlibudns/Makefile\nlibcork/Makefile\nlibipset/Makefile\ndoc/Makefile\nautom4te.cache/\n/config.h\nconfig.log\nconfig.status\nlibtool\npid\nsrc/obfs-*\nstamp-h1\n.libs\n.pc\n.dirstamp\nlibsodium/src/libsodium/include/sodium/version.h\n\n# Ignore per-project vim config\n.vimrc\n\n# Ignore garbage of OS X\n*.DS_Store\n\n# Ignore vim cache\n*.swp\n\n# Documentation files\ndoc/*.1\ndoc/*.8\ndoc/*.gz\ndoc/*.xml\ndoc/*.html\n\n#\tDo not edit the following section\n# \tEdit Compile Debug Document Distribute\n*~\n*.bak\n*.bin\n*.dll\n*.exe\n*-ISO*.bdf\n*-JIS*.bdf\n*-KOI8*.bdf\n*.kld\n*.ko\n*.ko.cmd\n*.lai\n*.l[oa]\n*.[oa]\n*.obj\n*.patch\n*.so\n*.pcf.gz\n*.pdb\n*.tar.bz2\n*.tar.gz\n#\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1044921875,
          "content": "[submodule \"libcork\"]\n\tpath = libcork\n\turl = https://github.com/shadowsocks/libcork.git\n    ignore = dirty\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.4248046875,
          "content": "{\n  \"sudo\": \"required\",\n  \"language\": \"c\",\n  \"dist\": \"trusty\",\n  \"before_script\": [\n    \"sudo apt-get install --no-install-recommends -y build-essential autoconf libtool libssl-dev libpcre3-dev libc-ares-dev libev-dev asciidoc xmlto automake\",\n    \"git submodule update --init --recursive\",\n    \"chmod +x *.sh\",\n    \"./autogen.sh\",\n    \"./configure && make\"\n  ],\n  \"script\": \"sudo make install\",\n  \"group\": \"stable\",\n  \"os\": \"linux\"\n}\n"
        },
        {
          "name": ".uncrustify.cfg",
          "type": "blob",
          "size": 60.0107421875,
          "content": "#\n# General options\n#\n\n# The type of line endings\nnewlines                                 = lf       # auto/lf/crlf/cr\n\n# The original size of tabs in the input\ninput_tab_size                           = 8        # number\n\n# The size of tabs in the output (only used if align_with_tabs=true)\noutput_tab_size                          = 8        # number\n\n# The ASCII value of the string escape char, usually 92 (\\) or 94 (^). (Pawn)\nstring_escape_char                       = 92       # number\n\n# Alternate string escape char for Pawn. Only works right before the quote char.\nstring_escape_char2                      = 0        # number\n\n#\n# Indenting\n#\n\n# The number of columns to indent per level.\n# Usually 2, 3, 4, or 8.\nindent_columns                           = 4        # number\n\n# The continuation indent. If non-zero, this overrides the indent of '(' and '=' continuation indents.\n# For FreeBSD, this is set to 4.\nindent_continue                          = 0        # number\n\n# How to use tabs when indenting code\n# 0=spaces only\n# 1=indent with tabs to brace level, align with spaces\n# 2=indent and align with tabs, using spaces when not on a tabstop\nindent_with_tabs                         = 0        # number\n\n# Comments that are not a brace level are indented with tabs on a tabstop.\n# Requires indent_with_tabs=2. If false, will use spaces.\nindent_cmt_with_tabs                     = false    # false/true\n\n# Whether to indent strings broken by '\\' so that they line up\nindent_align_string                      = true     # false/true\n\n# The number of spaces to indent multi-line XML strings.\n# Requires indent_align_string=True\nindent_xml_string                        = 0        # number\n\n# Spaces to indent '{' from level\nindent_brace                             = 0        # number\n\n# Whether braces are indented to the body level\nindent_braces                            = false    # false/true\n\n# Disabled indenting function braces if indent_braces is true\nindent_braces_no_func                    = false    # false/true\n\n# Disabled indenting class braces if indent_braces is true\nindent_braces_no_class                   = false    # false/true\n\n# Disabled indenting struct braces if indent_braces is true\nindent_braces_no_struct                  = false    # false/true\n\n# Indent based on the size of the brace parent, i.e. 'if' => 3 spaces, 'for' => 4 spaces, etc.\nindent_brace_parent                      = false    # false/true\n\n# Whether the 'namespace' body is indented\nindent_namespace                         = false    # false/true\n\n# The number of spaces to indent a namespace block\nindent_namespace_level                   = 0        # number\n\n# If the body of the namespace is longer than this number, it won't be indented.\n# Requires indent_namespace=true. Default=0 (no limit)\nindent_namespace_limit                   = 0        # number\n\n# Whether the 'extern \"C\"' body is indented\nindent_extern                            = false    # false/true\n\n# Whether the 'class' body is indented\nindent_class                             = false    # false/true\n\n# Whether to indent the stuff after a leading class colon\nindent_class_colon                       = false    # false/true\n\n# False=treat 'else\\nif' as 'else if' for indenting purposes\n# True=indent the 'if' one level\nindent_else_if                           = false    # false/true\n\n# Amount to indent variable declarations after a open brace. neg=relative, pos=absolute\nindent_var_def_blk                       = 0        # number\n\n# Indent continued variable declarations instead of aligning.\nindent_var_def_cont                      = false    # false/true\n\n# True:  indent continued function call parameters one indent level\n# False: align parameters under the open paren\nindent_func_call_param                   = false    # false/true\n\n# Same as indent_func_call_param, but for function defs\nindent_func_def_param                    = false    # false/true\n\n# Same as indent_func_call_param, but for function protos\nindent_func_proto_param                  = false    # false/true\n\n# Same as indent_func_call_param, but for class declarations\nindent_func_class_param                  = false    # false/true\n\n# Same as indent_func_call_param, but for class variable constructors\nindent_func_ctor_var_param               = false    # false/true\n\n# Same as indent_func_call_param, but for templates\nindent_template_param                    = false    # false/true\n\n# Double the indent for indent_func_xxx_param options\nindent_func_param_double                 = false    # false/true\n\n# Indentation column for standalone 'const' function decl/proto qualifier\nindent_func_const                        = 0        # number\n\n# Indentation column for standalone 'throw' function decl/proto qualifier\nindent_func_throw                        = 0        # number\n\n# The number of spaces to indent a continued '->' or '.'\n# Usually set to 0, 1, or indent_columns.\nindent_member                            = 0        # number\n\n# Spaces to indent single line ('//') comments on lines before code\nindent_sing_line_comments                = 0        # number\n\n# If set, will indent trailing single line ('//') comments relative\n# to the code instead of trying to keep the same absolute column\nindent_relative_single_line_comments     = false    # false/true\n\n# Spaces to indent 'case' from 'switch'\n# Usually 0 or indent_columns.\nindent_switch_case                       = 0        # number\n\n# Spaces to shift the 'case' line, without affecting any other lines\n# Usually 0.\nindent_case_shift                        = 0        # number\n\n# Spaces to indent '{' from 'case'.\n# By default, the brace will appear under the 'c' in case.\n# Usually set to 0 or indent_columns.\nindent_case_brace                        = 0        # number\n\n# Whether to indent comments found in first column\nindent_col1_comment                      = false    # false/true\n\n# How to indent goto labels\n#  >0 : absolute column where 1 is the leftmost column\n#  <=0 : subtract from brace indent\nindent_label                             = 1        # number\n\n# Same as indent_label, but for access specifiers that are followed by a colon\nindent_access_spec                       = 1        # number\n\n# Indent the code after an access specifier by one level.\n# If set, this option forces 'indent_access_spec=0'\nindent_access_spec_body                  = false    # false/true\n\n# If an open paren is followed by a newline, indent the next line so that it lines up after the open paren (not recommended)\nindent_paren_nl                          = false    # false/true\n\n# Controls the indent of a close paren after a newline.\n# 0: Indent to body level\n# 1: Align under the open paren\n# 2: Indent to the brace level\nindent_paren_close                       = 0        # number\n\n# Controls the indent of a comma when inside a paren.If TRUE, aligns under the open paren\nindent_comma_paren                       = false    # false/true\n\n# Controls the indent of a BOOL operator when inside a paren.If TRUE, aligns under the open paren\nindent_bool_paren                        = false    # false/true\n\n# If 'indent_bool_paren' is true, controls the indent of the first expression. If TRUE, aligns the first expression to the following ones\nindent_first_bool_expr                   = false    # false/true\n\n# If an open square is followed by a newline, indent the next line so that it lines up after the open square (not recommended)\nindent_square_nl                         = false    # false/true\n\n# Don't change the relative indent of ESQL/C 'EXEC SQL' bodies\nindent_preserve_sql                      = false    # false/true\n\n# Align continued statements at the '='. Default=True\n# If FALSE or the '=' is followed by a newline, the next line is indent one tab.\nindent_align_assign                      = true     # false/true\n\n#\n# Spacing options\n#\n\n# Add or remove space around arithmetic operator '+', '-', '/', '*', etc\nsp_arith                                 = force    # ignore/add/remove/force\n\n# Add or remove space around assignment operator '=', '+=', etc\nsp_assign                                = force    # ignore/add/remove/force\n\n# Add or remove space around assignment operator '=' in a prototype\nsp_assign_default                        = ignore   # ignore/add/remove/force\n\n# Add or remove space before assignment operator '=', '+=', etc. Overrides sp_assign.\nsp_before_assign                         = ignore   # ignore/add/remove/force\n\n# Add or remove space after assignment operator '=', '+=', etc. Overrides sp_assign.\nsp_after_assign                          = ignore   # ignore/add/remove/force\n\n# Add or remove space around assignment '=' in enum\nsp_enum_assign                           = force    # ignore/add/remove/force\n\n# Add or remove space before assignment '=' in enum. Overrides sp_enum_assign.\nsp_enum_before_assign                    = ignore   # ignore/add/remove/force\n\n# Add or remove space after assignment '=' in enum. Overrides sp_enum_assign.\nsp_enum_after_assign                     = ignore   # ignore/add/remove/force\n\n# Add or remove space around preprocessor '##' concatenation operator. Default=Add\nsp_pp_concat                             = add      # ignore/add/remove/force\n\n# Add or remove space after preprocessor '#' stringify operator. Also affects the '#@' charizing operator. Default=Add\nsp_pp_stringify                          = add      # ignore/add/remove/force\n\n# Add or remove space around boolean operators '&&' and '||'\nsp_bool                                  = force    # ignore/add/remove/force\n\n# Add or remove space around compare operator '<', '>', '==', etc\nsp_compare                               = force    # ignore/add/remove/force\n\n# Add or remove space inside '(' and ')'\nsp_inside_paren                          = remove   # ignore/add/remove/force\n\n# Add or remove space between nested parens\nsp_paren_paren                           = remove   # ignore/add/remove/force\n\n# Whether to balance spaces inside nested parens\nsp_balance_nested_parens                 = false    # false/true\n\n# Add or remove space between ')' and '{'\nsp_paren_brace                           = force    # ignore/add/remove/force\n\n# Add or remove space before pointer star '*'\nsp_before_ptr_star                       = add      # ignore/add/remove/force\n\n# Add or remove space before pointer star '*' that isn't followed by a variable name\n# If set to 'ignore', sp_before_ptr_star is used instead.\nsp_before_unnamed_ptr_star               = add      # ignore/add/remove/force\n\n# Add or remove space between pointer stars '*'\nsp_between_ptr_star                      = remove   # ignore/add/remove/force\n\n# Add or remove space after pointer star '*', if followed by a word.\nsp_after_ptr_star                        = remove   # ignore/add/remove/force\n\n# Add or remove space after a pointer star '*', if followed by a func proto/def.\nsp_after_ptr_star_func                   = remove   # ignore/add/remove/force\n\n# Add or remove space before a pointer star '*', if followed by a func proto/def.\nsp_before_ptr_star_func                  = ignore   # ignore/add/remove/force\n\n# Add or remove space before a reference sign '&'\nsp_before_byref                          = force    # ignore/add/remove/force\n\n# Add or remove space before a reference sign '&' that isn't followed by a variable name\n# If set to 'ignore', sp_before_byref is used instead.\nsp_before_unnamed_byref                  = force    # ignore/add/remove/force\n\n# Add or remove space after reference sign '&', if followed by a word.\nsp_after_byref                           = ignore   # ignore/add/remove/force\n\n# Add or remove space after a reference sign '&', if followed by a func proto/def.\nsp_after_byref_func                      = ignore   # ignore/add/remove/force\n\n# Add or remove space before a reference sign '&', if followed by a func proto/def.\nsp_before_byref_func                     = ignore   # ignore/add/remove/force\n\n# Add or remove space between type and word. Default=Force\nsp_after_type                            = force    # ignore/add/remove/force\n\n# Add or remove space in 'template <' vs 'template<'.\n# If set to ignore, sp_before_angle is used.\nsp_template_angle                        = ignore   # ignore/add/remove/force\n\n# Add or remove space before '<>'\nsp_before_angle                          = ignore   # ignore/add/remove/force\n\n# Add or remove space inside '<' and '>'\nsp_inside_angle                          = ignore   # ignore/add/remove/force\n\n# Add or remove space after '<>'\nsp_after_angle                           = ignore   # ignore/add/remove/force\n\n# Add or remove space between '<>' and '(' as found in 'new List<byte>();'\nsp_angle_paren                           = ignore   # ignore/add/remove/force\n\n# Add or remove space between '<>' and a word as in 'List<byte> m;'\nsp_angle_word                            = ignore   # ignore/add/remove/force\n\n# Add or remove space between '>' and '>' in '>>' (template stuff C++/C# only). Default=Add\nsp_angle_shift                           = add      # ignore/add/remove/force\n\n# Add or remove space before '(' of 'if', 'for', 'switch', and 'while'\nsp_before_sparen                         = force    # ignore/add/remove/force\n\n# Add or remove space inside if-condition '(' and ')'\nsp_inside_sparen                         = remove   # ignore/add/remove/force\n\n# Add or remove space before if-condition ')'. Overrides sp_inside_sparen.\nsp_inside_sparen_close                   = ignore   # ignore/add/remove/force\n\n# Add or remove space after ')' of 'if', 'for', 'switch', and 'while'\nsp_after_sparen                          = ignore   # ignore/add/remove/force\n\n# Add or remove space between ')' and '{' of 'if', 'for', 'switch', and 'while'\nsp_sparen_brace                          = force    # ignore/add/remove/force\n\n# Add or remove space between 'invariant' and '(' in the D language.\nsp_invariant_paren                       = ignore   # ignore/add/remove/force\n\n# Add or remove space after the ')' in 'invariant (C) c' in the D language.\nsp_after_invariant_paren                 = ignore   # ignore/add/remove/force\n\n# Add or remove space before empty statement ';' on 'if', 'for' and 'while'\nsp_special_semi                          = ignore   # ignore/add/remove/force\n\n# Add or remove space before ';'. Default=Remove\nsp_before_semi                           = remove   # ignore/add/remove/force\n\n# Add or remove space before ';' in non-empty 'for' statements\nsp_before_semi_for                       = ignore   # ignore/add/remove/force\n\n# Add or remove space before a semicolon of an empty part of a for statement.\nsp_before_semi_for_empty                 = ignore   # ignore/add/remove/force\n\n# Add or remove space after ';', except when followed by a comment. Default=Add\nsp_after_semi                            = force    # ignore/add/remove/force\n\n# Add or remove space after ';' in non-empty 'for' statements. Default=Force\nsp_after_semi_for                        = force    # ignore/add/remove/force\n\n# Add or remove space after the final semicolon of an empty part of a for statement: for ( ; ; <here> ).\nsp_after_semi_for_empty                  = remove   # ignore/add/remove/force\n\n# Add or remove space before '[' (except '[]')\nsp_before_square                         = remove   # ignore/add/remove/force\n\n# Add or remove space before '[]'\nsp_before_squares                        = ignore   # ignore/add/remove/force\n\n# Add or remove space inside '[' and ']'\nsp_inside_square                         = remove   # ignore/add/remove/force\n\n# Add or remove space after ','\nsp_after_comma                           = force    # ignore/add/remove/force\n\n# Add or remove space before ','\nsp_before_comma                          = remove   # ignore/add/remove/force\n\n# Add or remove space between an open paren and comma: '(,' vs '( ,'\nsp_paren_comma                           = force    # ignore/add/remove/force\n\n# Add or remove space before the variadic '...' when preceded by a non-punctuator\nsp_before_ellipsis                       = ignore   # ignore/add/remove/force\n\n# Add or remove space after class ':'\nsp_after_class_colon                     = ignore   # ignore/add/remove/force\n\n# Add or remove space before class ':'\nsp_before_class_colon                    = ignore   # ignore/add/remove/force\n\n# Add or remove space before case ':'. Default=Remove\nsp_before_case_colon                     = remove   # ignore/add/remove/force\n\n# Add or remove space between 'operator' and operator sign\nsp_after_operator                        = ignore   # ignore/add/remove/force\n\n# Add or remove space between the operator symbol and the open paren, as in 'operator ++('\nsp_after_operator_sym                    = ignore   # ignore/add/remove/force\n\n# Add or remove space after C/D cast, i.e. 'cast(int)a' vs 'cast(int) a' or '(int)a' vs '(int) a'\nsp_after_cast                            = remove      # ignore/add/remove/force\n\n# Add or remove spaces inside cast parens\nsp_inside_paren_cast                     = remove   # ignore/add/remove/force\n\n# Add or remove space between the type and open paren in a C++ cast, i.e. 'int(exp)' vs 'int (exp)'\nsp_cpp_cast_paren                        = ignore   # ignore/add/remove/force\n\n# Add or remove space between 'sizeof' and '('\nsp_sizeof_paren                          = remove   # ignore/add/remove/force\n\n# Add or remove space after the tag keyword (Pawn)\nsp_after_tag                             = ignore   # ignore/add/remove/force\n\n# Add or remove space inside enum '{' and '}'\nsp_inside_braces_enum                    = remove   # ignore/add/remove/force\n\n# Add or remove space inside struct/union '{' and '}'\nsp_inside_braces_struct                  = force    # ignore/add/remove/force\n\n# Add or remove space inside '{' and '}'\nsp_inside_braces                         = force    # ignore/add/remove/force\n\n# Add or remove space inside '{}'\nsp_inside_braces_empty                   = remove   # ignore/add/remove/force\n\n# Add or remove space between return type and function name\n# A minimum of 1 is forced except for pointer return types.\nsp_type_func                             = remove   # ignore/add/remove/force\n\n# Add or remove space between function name and '(' on function declaration\nsp_func_proto_paren                      = remove   # ignore/add/remove/force\n\n# Add or remove space between function name and '(' on function definition\nsp_func_def_paren                        = remove   # ignore/add/remove/force\n\n# Add or remove space inside empty function '()'\nsp_inside_fparens                        = remove   # ignore/add/remove/force\n\n# Add or remove space inside function '(' and ')'\nsp_inside_fparen                         = remove   # ignore/add/remove/force\n\n# Add or remove space between ']' and '(' when part of a function call.\nsp_square_fparen                         = ignore   # ignore/add/remove/force\n\n# Add or remove space between ')' and '{' of function\nsp_fparen_brace                          = ignore   # ignore/add/remove/force\n\n# Add or remove space between function name and '(' on function calls\nsp_func_call_paren                       = remove   # ignore/add/remove/force\n\n# Add or remove space between function name and '()' on function calls without parameters.\n# If set to 'ignore' (the default), sp_func_call_paren is used.\nsp_func_call_paren_empty                 = ignore   # ignore/add/remove/force\n\n# Add or remove space between the user function name and '(' on function calls\n# You need to set a keyword to be a user function, like this: 'set func_call_user _' in the config file.\nsp_func_call_user_paren                  = ignore   # ignore/add/remove/force\n\n# Add or remove space between a constructor/destructor and the open paren\nsp_func_class_paren                      = ignore   # ignore/add/remove/force\n\n# Add or remove space between 'return' and '('\nsp_return_paren                          = ignore   # ignore/add/remove/force\n\n# Add or remove space between '__attribute__' and '('\nsp_attribute_paren                       = remove   # ignore/add/remove/force\n\n# Add or remove space between 'defined' and '(' in '#if defined (FOO)'\nsp_defined_paren                         = ignore   # ignore/add/remove/force\n\n# Add or remove space between 'throw' and '(' in 'throw (something)'\nsp_throw_paren                           = ignore   # ignore/add/remove/force\n\n# Add or remove space between macro and value\nsp_macro                                 = ignore   # ignore/add/remove/force\n\n# Add or remove space between macro function ')' and value\nsp_macro_func                            = ignore   # ignore/add/remove/force\n\n# Add or remove space between 'else' and '{' if on the same line\nsp_else_brace                            = force    # ignore/add/remove/force\n\n# Add or remove space between '}' and 'else' if on the same line\nsp_brace_else                            = force    # ignore/add/remove/force\n\n# Add or remove space between '}' and the name of a typedef on the same line\nsp_brace_typedef                         = force    # ignore/add/remove/force\n\n# Add or remove space between 'catch' and '{' if on the same line\nsp_catch_brace                           = ignore   # ignore/add/remove/force\n\n# Add or remove space between '}' and 'catch' if on the same line\nsp_brace_catch                           = ignore   # ignore/add/remove/force\n\n# Add or remove space between 'finally' and '{' if on the same line\nsp_finally_brace                         = ignore   # ignore/add/remove/force\n\n# Add or remove space between '}' and 'finally' if on the same line\nsp_brace_finally                         = ignore   # ignore/add/remove/force\n\n# Add or remove space between 'try' and '{' if on the same line\nsp_try_brace                             = ignore   # ignore/add/remove/force\n\n# Add or remove space between get/set and '{' if on the same line\nsp_getset_brace                          = ignore   # ignore/add/remove/force\n\n# Add or remove space before the '::' operator\nsp_before_dc                             = ignore   # ignore/add/remove/force\n\n# Add or remove space after the '::' operator\nsp_after_dc                              = ignore   # ignore/add/remove/force\n\n# Add or remove around the D named array initializer ':' operator\nsp_d_array_colon                         = ignore   # ignore/add/remove/force\n\n# Add or remove space after the '!' (not) operator. Default=Remove\nsp_not                                   = remove   # ignore/add/remove/force\n\n# Add or remove space after the '~' (invert) operator. Default=Remove\nsp_inv                                   = remove   # ignore/add/remove/force\n\n# Add or remove space after the '&' (address-of) operator. Default=Remove\n# This does not affect the spacing after a '&' that is part of a type.\nsp_addr                                  = remove   # ignore/add/remove/force\n\n# Add or remove space around the '.' or '->' operators. Default=Remove\nsp_member                                = remove   # ignore/add/remove/force\n\n# Add or remove space after the '*' (dereference) operator. Default=Remove\n# This does not affect the spacing after a '*' that is part of a type.\nsp_deref                                 = remove   # ignore/add/remove/force\n\n# Add or remove space after '+' or '-', as in 'x = -5' or 'y = +7'. Default=Remove\nsp_sign                                  = remove   # ignore/add/remove/force\n\n# Add or remove space before or after '++' and '--', as in '(--x)' or 'y++;'. Default=Remove\nsp_incdec                                = remove   # ignore/add/remove/force\n\n# Add or remove space before a backslash-newline at the end of a line. Default=Add\nsp_before_nl_cont                        = add      # ignore/add/remove/force\n\n# Add or remove space after the scope '+' or '-', as in '-(void) foo;' or '+(int) bar;'\nsp_after_oc_scope                        = ignore   # ignore/add/remove/force\n\n# Add or remove space after the colon in message specs\n# '-(int) f:(int) x;' vs '-(int) f: (int) x;'\nsp_after_oc_colon                        = ignore   # ignore/add/remove/force\n\n# Add or remove space before the colon in message specs\n# '-(int) f: (int) x;' vs '-(int) f : (int) x;'\nsp_before_oc_colon                       = ignore   # ignore/add/remove/force\n\n# Add or remove space after the colon in message specs\n# '[object setValue:1];' vs '[object setValue: 1];'\nsp_after_send_oc_colon                   = ignore   # ignore/add/remove/force\n\n# Add or remove space before the colon in message specs\n# '[object setValue:1];' vs '[object setValue :1];'\nsp_before_send_oc_colon                  = ignore   # ignore/add/remove/force\n\n# Add or remove space after the (type) in message specs\n# '-(int)f: (int) x;' vs '-(int)f: (int)x;'\nsp_after_oc_type                         = ignore   # ignore/add/remove/force\n\n# Add or remove space after the first (type) in message specs\n# '-(int) f:(int)x;' vs '-(int)f:(int)x;'\nsp_after_oc_return_type                  = ignore   # ignore/add/remove/force\n\n# Add or remove space between '@selector' and '('\n# '@selector(msgName)' vs '@selector (msgName)'\n# Also applies to @protocol() constructs\nsp_after_oc_at_sel                       = ignore   # ignore/add/remove/force\n\n# Add or remove space between '@selector(x)' and the following word\n# '@selector(foo) a:' vs '@selector(foo)a:'\nsp_after_oc_at_sel_parens                = ignore   # ignore/add/remove/force\n\n# Add or remove space inside '@selector' parens\n# '@selector(foo)' vs '@selector( foo )'\n# Also applies to @protocol() constructs\nsp_inside_oc_at_sel_parens               = ignore   # ignore/add/remove/force\n\n# Add or remove space before a block pointer caret\n# '^int (int arg){...}' vs. ' ^int (int arg){...}'\nsp_before_oc_block_caret                 = ignore   # ignore/add/remove/force\n\n# Add or remove space after a block pointer caret\n# '^int (int arg){...}' vs. '^ int (int arg){...}'\nsp_after_oc_block_caret                  = ignore   # ignore/add/remove/force\n\n# Add or remove space around the ':' in 'b ? t : f'\nsp_cond_colon                            = force    # ignore/add/remove/force\n\n# Add or remove space around the '?' in 'b ? t : f'\nsp_cond_question                         = force    # ignore/add/remove/force\n\n# Fix the spacing between 'case' and the label. Only 'ignore' and 'force' make sense here.\nsp_case_label                            = ignore   # ignore/add/remove/force\n\n# Control the space around the D '..' operator.\nsp_range                                 = ignore   # ignore/add/remove/force\n\n# Control the space after the opening of a C++ comment '// A' vs '//A'\n# MPlayer devs note: we ignore the following setting because it breaks Doxygen comments\n#sp_cmt_cpp_start                         = ignore   # ignore/add/remove/force\nsp_cmt_cpp_start                         = add   # ignore/add/remove/force\n\n# Controls the spaces between #else or #endif and a trailing comment\nsp_endif_cmt                             = ignore   # ignore/add/remove/force\n\n#\n# Code alignment (not left column spaces/tabs)\n#\n\n# Whether to keep non-indenting tabs\nalign_keep_tabs                          = false    # false/true\n\n# Whether to use tabs for aligning\nalign_with_tabs                          = false    # false/true\n\n# Whether to bump out to the next tab when aligning\nalign_on_tabstop                         = false    # false/true\n\n# Whether to left-align numbers\nalign_number_left                        = true     # false/true\n\n# Align variable definitions in prototypes and functions\nalign_func_params                        = false    # false/true\n\n# Align parameters in single-line functions that have the same name.\n# The function names must already be aligned with each other.\nalign_same_func_call_params              = false    # false/true\n\n# The span for aligning variable definitions (0=don't align)\nalign_var_def_span                       = 0        # number\n\n# How to align the star in variable definitions.\n#  0=Part of the type     'void *   foo;'\n#  1=Part of the variable 'void     *foo;'\n#  2=Dangling             'void    *foo;'\nalign_var_def_star_style                 = 2        # number\n\n# How to align the '&' in variable definitions.\n#  0=Part of the type\n#  1=Part of the variable\n#  2=Dangling\nalign_var_def_amp_style                  = 0        # number\n\n# The threshold for aligning variable definitions (0=no limit)\nalign_var_def_thresh                     = 0        # number\n\n# The gap for aligning variable definitions\nalign_var_def_gap                        = 0        # number\n\n# Whether to align the colon in struct bit fields\nalign_var_def_colon                      = false    # false/true\n\n# Whether to align any attribute after the variable name\nalign_var_def_attribute                  = false    # false/true\n\n# Whether to align inline struct/enum/union variable definitions\nalign_var_def_inline                     = false    # false/true\n\n# The span for aligning on '=' in assignments (0=don't align)\nalign_assign_span                        = 1        # number\n\n# The threshold for aligning on '=' in assignments (0=no limit)\nalign_assign_thresh                      = 0        # number\n\n# The span for aligning on '=' in enums (0=don't align)\nalign_enum_equ_span                      = 1        # number\n\n# The threshold for aligning on '=' in enums (0=no limit)\nalign_enum_equ_thresh                    = 0        # number\n\n# The span for aligning struct/union (0=don't align)\nalign_var_struct_span                    = 0        # number\n\n# The threshold for aligning struct/union member definitions (0=no limit)\nalign_var_struct_thresh                  = 0        # number\n\n# The gap for aligning struct/union member definitions\nalign_var_struct_gap                     = 0        # number\n\n# The span for aligning struct initializer values (0=don't align)\nalign_struct_init_span                   = 1        # number\n\n# The minimum space between the type and the synonym of a typedef\nalign_typedef_gap                        = 0        # number\n\n# The span for aligning single-line typedefs (0=don't align)\nalign_typedef_span                       = 0        # number\n\n# How to align typedef'd functions with other typedefs\n# 0: Don't mix them at all\n# 1: align the open paren with the types\n# 2: align the function type name with the other type names\nalign_typedef_func                       = 0        # number\n\n# Controls the positioning of the '*' in typedefs. Just try it.\n# 0: Align on typedef type, ignore '*'\n# 1: The '*' is part of type name: typedef int  *pint;\n# 2: The '*' is part of the type, but dangling: typedef int *pint;\nalign_typedef_star_style                 = 0        # number\n\n# Controls the positioning of the '&' in typedefs. Just try it.\n# 0: Align on typedef type, ignore '&'\n# 1: The '&' is part of type name: typedef int  &pint;\n# 2: The '&' is part of the type, but dangling: typedef int &pint;\nalign_typedef_amp_style                  = 0        # number\n\n# The span for aligning comments that end lines (0=don't align)\nalign_right_cmt_span                     = 0        # number\n\n# If aligning comments, mix with comments after '}' and #endif with less than 3 spaces before the comment\nalign_right_cmt_mix                      = false    # false/true\n\n# If a trailing comment is more than this number of columns away from the text it follows,\n# it will qualify for being aligned. This has to be > 0 to do anything.\nalign_right_cmt_gap                      = 0        # number\n\n# Align trailing comment at or beyond column N; 'pulls in' comments as a bonus side effect (0=ignore)\nalign_right_cmt_at_col                   = 0        # number\n\n# The span for aligning function prototypes (0=don't align)\nalign_func_proto_span                    = 0        # number\n\n# Minimum gap between the return type and the function name.\nalign_func_proto_gap                     = 0        # number\n\n# Align function protos on the 'operator' keyword instead of what follows\nalign_on_operator                        = false    # false/true\n\n# Whether to mix aligning prototype and variable declarations.\n# If true, align_var_def_XXX options are used instead of align_func_proto_XXX options.\nalign_mix_var_proto                      = false    # false/true\n\n# Align single-line functions with function prototypes, uses align_func_proto_span\nalign_single_line_func                   = false    # false/true\n\n# Aligning the open brace of single-line functions.\n# Requires align_single_line_func=true, uses align_func_proto_span\nalign_single_line_brace                  = false    # false/true\n\n# Gap for align_single_line_brace.\nalign_single_line_brace_gap              = 0        # number\n\n# The span for aligning ObjC msg spec (0=don't align)\nalign_oc_msg_spec_span                   = 0        # number\n\n# Whether to align macros wrapped with a backslash and a newline.\n# This will not work right if the macro contains a multi-line comment.\nalign_nl_cont                            = false    # false/true\n\n# The minimum space between label and value of a preprocessor define\nalign_pp_define_gap                      = 0        # number\n\n# The span for aligning on '#define' bodies (0=don't align)\nalign_pp_define_span                     = 0        # number\n\n# Align lines that start with '<<' with previous '<<'. Default=true\nalign_left_shift                         = true     # false/true\n\n# Span for aligning parameters in an Obj-C message call on the ':' (0=don't align)\nalign_oc_msg_colon_span                  = 0        # number\n\n# Aligning parameters in an Obj-C '+' or '-' declaration on the ':'\nalign_oc_decl_colon                      = false    # false/true\n\n#\n# Newline adding and removing options\n#\n\n# Whether to collapse empty blocks between '{' and '}'\nnl_collapse_empty_body                   = false    # false/true\n\n# Don't split one-line braced assignments - 'foo_t f = { 1, 2 };'\nnl_assign_leave_one_liners               = false    # false/true\n\n# Don't split one-line braced statements inside a class xx { } body\nnl_class_leave_one_liners                = false    # false/true\n\n# Don't split one-line enums: 'enum foo { BAR = 15 };'\nnl_enum_leave_one_liners                 = false    # false/true\n\n# Don't split one-line get or set functions\nnl_getset_leave_one_liners               = false    # false/true\n\n# Don't split one-line function definitions - 'int foo() { return 0; }'\nnl_func_leave_one_liners                 = false    # false/true\n\n# Don't split one-line if/else statements - 'if(a) b++;'\nnl_if_leave_one_liners                   = false    # false/true\n\n# Add or remove newlines at the start of the file\nnl_start_of_file                         = remove   # ignore/add/remove/force\n\n# The number of newlines at the start of the file (only used if nl_start_of_file is 'add' or 'force'\nnl_start_of_file_min                     = 0        # number\n\n# Add or remove newline at the end of the file\nnl_end_of_file                           = force    # ignore/add/remove/force\n\n# The number of newlines at the end of the file (only used if nl_end_of_file is 'add' or 'force')\nnl_end_of_file_min                       = 1        # number\n\n# Add or remove newline between '=' and '{'\nnl_assign_brace                          = remove   # ignore/add/remove/force\n\n# Add or remove newline between '=' and '[' (D only)\nnl_assign_square                         = ignore   # ignore/add/remove/force\n\n# Add or remove newline after '= [' (D only). Will also affect the newline before the ']'\nnl_after_square_assign                   = ignore   # ignore/add/remove/force\n\n# The number of blank lines after a block of variable definitions\nnl_func_var_def_blk                      = 0        # number\n\n# Add or remove newline between a function call's ')' and '{', as in:\n# list_for_each(item, &list) { }\nnl_fcall_brace                           = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'enum' and '{'\nnl_enum_brace                            = remove   # ignore/add/remove/force\n\n# Add or remove newline between 'struct and '{'\nnl_struct_brace                          = remove   # ignore/add/remove/force\n\n# Add or remove newline between 'union' and '{'\nnl_union_brace                           = remove   # ignore/add/remove/force\n\n# Add or remove newline between 'if' and '{'\nnl_if_brace                              = remove   # ignore/add/remove/force\n\n# Add or remove newline between '}' and 'else'\nnl_brace_else                            = remove   # ignore/add/remove/force\n\n# Add or remove newline between 'else if' and '{'\n# If set to ignore, nl_if_brace is used instead\nnl_elseif_brace                          = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'else' and '{'\nnl_else_brace                            = remove   # ignore/add/remove/force\n\n# Add or remove newline between 'else' and 'if'\nnl_else_if                               = remove   # ignore/add/remove/force\n\n# Add or remove newline between '}' and 'finally'\nnl_brace_finally                         = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'finally' and '{'\nnl_finally_brace                         = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'try' and '{'\nnl_try_brace                             = ignore   # ignore/add/remove/force\n\n# Add or remove newline between get/set and '{'\nnl_getset_brace                          = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'for' and '{'\nnl_for_brace                             = remove   # ignore/add/remove/force\n\n# Add or remove newline between 'catch' and '{'\nnl_catch_brace                           = ignore   # ignore/add/remove/force\n\n# Add or remove newline between '}' and 'catch'\nnl_brace_catch                           = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'while' and '{'\nnl_while_brace                           = remove   # ignore/add/remove/force\n\n# Add or remove newline between 'using' and '{'\nnl_using_brace                           = ignore   # ignore/add/remove/force\n\n# Add or remove newline between two open or close braces.\n# Due to general newline/brace handling, REMOVE may not work.\nnl_brace_brace                           = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'do' and '{'\nnl_do_brace                              = remove   # ignore/add/remove/force\n\n# Add or remove newline between '}' and 'while' of 'do' statement\nnl_brace_while                           = remove   # ignore/add/remove/force\n\n# Add or remove newline between 'switch' and '{'\nnl_switch_brace                          = remove   # ignore/add/remove/force\n\n# Add a newline between ')' and '{' if the ')' is on a different line than the if/for/etc.\n# Overrides nl_for_brace, nl_if_brace, nl_switch_brace, nl_while_switch, and nl_catch_brace.\nnl_multi_line_cond                       = false    # false/true\n\n# Force a newline in a define after the macro name for multi-line defines.\nnl_multi_line_define                     = false    # false/true\n\n# Whether to put a newline before 'case' statement\nnl_before_case                           = false    # false/true\n\n# Add or remove newline between ')' and 'throw'\nnl_before_throw                          = ignore   # ignore/add/remove/force\n\n# Whether to put a newline after 'case' statement\nnl_after_case                            = true     # false/true\n\n# Newline between namespace and {\nnl_namespace_brace                       = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'template<>' and whatever follows.\nnl_template_class                        = ignore   # ignore/add/remove/force\n\n# Add or remove newline between 'class' and '{'\nnl_class_brace                           = ignore   # ignore/add/remove/force\n\n# Add or remove newline after each ',' in the constructor member initialization\nnl_class_init_args                       = ignore   # ignore/add/remove/force\n\n# Add or remove newline between return type and function name in a function definition\nnl_func_type_name                        = force    # ignore/add/remove/force\n\n# Add or remove newline between return type and function name inside a class {}\n# Uses nl_func_type_name or nl_func_proto_type_name if set to ignore.\nnl_func_type_name_class                  = ignore   # ignore/add/remove/force\n\n# Add or remove newline between function scope and name in a definition\n# Controls the newline after '::' in 'void A::f() { }'\nnl_func_scope_name                       = ignore   # ignore/add/remove/force\n\n# Add or remove newline between return type and function name in a prototype\nnl_func_proto_type_name                  = remove   # ignore/add/remove/force\n\n# Add or remove newline between a function name and the opening '('\nnl_func_paren                            = remove   # ignore/add/remove/force\n\n# Add or remove newline between a function name and the opening '(' in the definition\nnl_func_def_paren                        = remove   # ignore/add/remove/force\n\n# Add or remove newline after '(' in a function declaration\nnl_func_decl_start                       = remove   # ignore/add/remove/force\n\n# Add or remove newline after '(' in a function definition\nnl_func_def_start                        = ignore   # ignore/add/remove/force\n\n# Overrides nl_func_decl_start when there is only one parameter.\nnl_func_decl_start_single                = ignore   # ignore/add/remove/force\n\n# Overrides nl_func_def_start when there is only one parameter.\nnl_func_def_start_single                 = ignore   # ignore/add/remove/force\n\n# Add or remove newline after each ',' in a function declaration\nnl_func_decl_args                        = ignore   # ignore/add/remove/force\n\n# Add or remove newline after each ',' in a function definition\nnl_func_def_args                         = ignore   # ignore/add/remove/force\n\n# Add or remove newline before the ')' in a function declaration\nnl_func_decl_end                         = remove   # ignore/add/remove/force\n\n# Add or remove newline before the ')' in a function definition\nnl_func_def_end                          = ignore   # ignore/add/remove/force\n\n# Overrides nl_func_decl_end when there is only one parameter.\nnl_func_decl_end_single                  = ignore   # ignore/add/remove/force\n\n# Overrides nl_func_def_end when there is only one parameter.\nnl_func_def_end_single                   = ignore   # ignore/add/remove/force\n\n# Add or remove newline between '()' in a function declaration.\nnl_func_decl_empty                       = ignore   # ignore/add/remove/force\n\n# Add or remove newline between '()' in a function definition.\nnl_func_def_empty                        = ignore   # ignore/add/remove/force\n\n# Add or remove newline between function signature and '{'\nnl_fdef_brace                            = force    # ignore/add/remove/force\n\n# Whether to put a newline after 'return' statement\nnl_after_return                          = false    # false/true\n\n# Add or remove a newline between the return keyword and return expression.\nnl_return_expr                           = ignore   # ignore/add/remove/force\n\n# Whether to put a newline after semicolons, except in 'for' statements\nnl_after_semicolon                       = true     # false/true\n\n# Whether to put a newline after brace open.\n# This also adds a newline before the matching brace close.\nnl_after_brace_open                      = false    # false/true\n\n# If nl_after_brace_open and nl_after_brace_open_cmt are true, a newline is\n# placed between the open brace and a trailing single-line comment.\nnl_after_brace_open_cmt                  = false    # false/true\n\n# Whether to put a newline after a virtual brace open with a non-empty body.\n# These occur in un-braced if/while/do/for statement bodies.\nnl_after_vbrace_open                     = true     # false/true\n\n# Whether to put a newline after a virtual brace open with an empty body.\n# These occur in un-braced if/while/do/for statement bodies.\nnl_after_vbrace_open_empty               = false    # false/true\n\n# Whether to put a newline after a brace close.\n# Does not apply if followed by a necessary ';'.\nnl_after_brace_close                     = false    # false/true\n\n# Whether to put a newline after a virtual brace close.\n# Would add a newline before return in: 'if (foo) a++; return;'\nnl_after_vbrace_close                    = false    # false/true\n\n# Whether to alter newlines in '#define' macros\nnl_define_macro                          = false    # false/true\n\n# Whether to not put blanks after '#ifxx', '#elxx', or before '#endif'\nnl_squeeze_ifdef                         = false    # false/true\n\n# Add or remove blank line before 'if'\nnl_before_if                             = ignore   # ignore/add/remove/force\n\n# Add or remove blank line after 'if' statement\nnl_after_if                              = ignore   # ignore/add/remove/force\n\n# Add or remove blank line before 'for'\nnl_before_for                            = ignore   # ignore/add/remove/force\n\n# Add or remove blank line after 'for' statement\nnl_after_for                             = ignore   # ignore/add/remove/force\n\n# Add or remove blank line before 'while'\nnl_before_while                          = ignore   # ignore/add/remove/force\n\n# Add or remove blank line after 'while' statement\nnl_after_while                           = ignore   # ignore/add/remove/force\n\n# Add or remove blank line before 'switch'\nnl_before_switch                         = ignore   # ignore/add/remove/force\n\n# Add or remove blank line after 'switch' statement\nnl_after_switch                          = ignore   # ignore/add/remove/force\n\n# Add or remove blank line before 'do'\nnl_before_do                             = ignore   # ignore/add/remove/force\n\n# Add or remove blank line after 'do/while' statement\nnl_after_do                              = ignore   # ignore/add/remove/force\n\n# Whether to double-space commented-entries in struct/enum\nnl_ds_struct_enum_cmt                    = false    # false/true\n\n# Whether to double-space before the close brace of a struct/union/enum\n# (lower priority than 'eat_blanks_before_close_brace')\nnl_ds_struct_enum_close_brace            = false    # false/true\n\n# Add or remove a newline around a class colon.\n# Related to pos_class_colon, nl_class_init_args, and pos_comma.\nnl_class_colon                           = ignore   # ignore/add/remove/force\n\n# Change simple unbraced if statements into a one-liner\n# 'if(b)\\n i++;' => 'if(b) i++;'\nnl_create_if_one_liner                   = false    # false/true\n\n# Change simple unbraced for statements into a one-liner\n# 'for (i=0;i<5;i++)\\n foo(i);' => 'for (i=0;i<5;i++) foo(i);'\nnl_create_for_one_liner                  = false    # false/true\n\n# Change simple unbraced while statements into a one-liner\n# 'while (i<5)\\n foo(i++);' => 'while (i<5) foo(i++);'\nnl_create_while_one_liner                = false    # false/true\n\n#\n# Positioning options\n#\n\n# The position of arithmetic operators in wrapped expressions\npos_arith                                = ignore   # ignore/lead/lead_break/lead_force/trail/trail_break/trail_force\n\n# The position of assignment in wrapped expressions.\n# Do not affect '=' followed by '{'\npos_assign                               = ignore   # ignore/lead/lead_break/lead_force/trail/trail_break/trail_force\n\n# The position of boolean operators in wrapped expressions\npos_bool                                 = ignore   # ignore/lead/lead_break/lead_force/trail/trail_break/trail_force\n\n# The position of comparison operators in wrapped expressions\npos_compare                              = ignore   # ignore/lead/lead_break/lead_force/trail/trail_break/trail_force\n\n# The position of conditional (b ? t : f) operators in wrapped expressions\npos_conditional                          = ignore   # ignore/lead/lead_break/lead_force/trail/trail_break/trail_force\n\n# The position of the comma in wrapped expressions\npos_comma                                = ignore   # ignore/lead/lead_break/lead_force/trail/trail_break/trail_force\n\n# The position of the comma in the constructor initialization list\npos_class_comma                          = ignore   # ignore/lead/lead_break/lead_force/trail/trail_break/trail_force\n\n# The position of colons between constructor and member initialization\npos_class_colon                          = ignore   # ignore/lead/lead_break/lead_force/trail/trail_break/trail_force\n\n#\n# Line Splitting options\n#\n\n# Try to limit code width to N number of columns\ncode_width                               = 120      # number\n\n# Whether to fully split long 'for' statements at semi-colons\nls_for_split_full                        = false    # false/true\n\n# Whether to fully split long function protos/calls at commas\nls_func_split_full                       = false    # false/true\n\n#\n# Blank line options\n#\n\n# The maximum consecutive newlines\nnl_max                                   = 2        # number\n\n# The number of newlines after a function prototype, if followed by another function prototype\nnl_after_func_proto                      = 0        # number\n\n# The number of newlines after a function prototype, if not followed by another function prototype\nnl_after_func_proto_group                = 0        # number\n\n# The number of newlines after '}' of a multi-line function body\nnl_after_func_body                       = 2        # number\n\n# The number of newlines after '}' of a single line function body\nnl_after_func_body_one_liner             = 2        # number\n\n# The minimum number of newlines before a multi-line comment.\n# Doesn't apply if after a brace open or another multi-line comment.\nnl_before_block_comment                  = 0        # number\n\n# The minimum number of newlines before a single-line C comment.\n# Doesn't apply if after a brace open or other single-line C comments.\nnl_before_c_comment                      = 0        # number\n\n# The minimum number of newlines before a CPP comment.\n# Doesn't apply if after a brace open or other CPP comments.\nnl_before_cpp_comment                    = 0        # number\n\n# Whether to force a newline after a multi-line comment.\nnl_after_multiline_comment               = false    # false/true\n\n# The number of newlines before a 'private:', 'public:', 'protected:', 'signals:', or 'slots:' label.\n# Will not change the newline count if after a brace open.\n# 0 = No change.\nnl_before_access_spec                    = 0        # number\n\n# The number of newlines after a 'private:', 'public:', 'protected:', 'signals:', or 'slots:' label.\n# 0 = No change.\nnl_after_access_spec                     = 0        # number\n\n# The number of newlines between a function def and the function comment.\n# 0 = No change.\nnl_comment_func_def                      = 0        # number\n\n# The number of newlines after a try-catch-finally block that isn't followed by a brace close.\n# 0 = No change.\nnl_after_try_catch_finally               = 0        # number\n\n# The number of newlines before and after a property, indexer or event decl.\n# 0 = No change.\nnl_around_cs_property                    = 0        # number\n\n# The number of newlines between the get/set/add/remove handlers in C#.\n# 0 = No change.\nnl_between_get_set                       = 0        # number\n\n# Whether to remove blank lines after '{'\neat_blanks_after_open_brace              = true     # false/true\n\n# Whether to remove blank lines before '}'\neat_blanks_before_close_brace            = true     # false/true\n\n#\n# Code modifying options (non-whitespace)\n#\n\n# Add or remove braces on single-line 'do' statement\nmod_full_brace_do                        = remove   # ignore/add/remove/force\n\n# Add or remove braces on single-line 'for' statement\nmod_full_brace_for                       = remove   # ignore/add/remove/force\n\n# Add or remove braces on single-line function definitions. (Pawn)\nmod_full_brace_function                  = ignore   # ignore/add/remove/force\n\n# Add or remove braces on single-line 'if' statement. Will not remove the braces if they contain an 'else'.\nmod_full_brace_if                        = ignore   # ignore/add/remove/force\n\n# Make all if/elseif/else statements in a chain be braced or not. Overrides mod_full_brace_if.\n# If any must be braced, they are all braced.  If all can be unbraced, then the braces are removed.\nmod_full_brace_if_chain                  = false    # false/true\n\n# Don't remove braces around statements that span N newlines\nmod_full_brace_nl                        = 0        # number\n\n# Add or remove braces on single-line 'while' statement\nmod_full_brace_while                     = remove   # ignore/add/remove/force\n\n# Add or remove braces on single-line 'using ()' statement\nmod_full_brace_using                     = remove   # ignore/add/remove/force\n\n# Add or remove unnecessary paren on 'return' statement\nmod_paren_on_return                      = remove   # ignore/add/remove/force\n\n# Whether to change optional semicolons to real semicolons\nmod_pawn_semicolon                       = false    # false/true\n\n# Add parens on 'while' and 'if' statement around bools\nmod_full_paren_if_bool                   = false    # false/true\n\n# Whether to remove superfluous semicolons\nmod_remove_extra_semicolon               = true     # false/true\n\n# If a function body exceeds the specified number of newlines and doesn't have a comment after\n# the close brace, a comment will be added.\nmod_add_long_function_closebrace_comment = 0        # number\n\n# If a switch body exceeds the specified number of newlines and doesn't have a comment after\n# the close brace, a comment will be added.\nmod_add_long_switch_closebrace_comment   = 0        # number\n\n# If an #ifdef body exceeds the specified number of newlines and doesn't have a comment after\n# the #else, a comment will be added.\nmod_add_long_ifdef_endif_comment         = 0        # number\n\n# If an #ifdef or #else body exceeds the specified number of newlines and doesn't have a comment after\n# the #endif, a comment will be added.\nmod_add_long_ifdef_else_comment          = 0        # number\n\n# If TRUE, will sort consecutive single-line 'import' statements [Java, D]\nmod_sort_import                          = false    # false/true\n\n# If TRUE, will sort consecutive single-line 'using' statements [C#]\nmod_sort_using                           = false    # false/true\n\n# If TRUE, will sort consecutive single-line '#include' statements [C/C++] and '#import' statements [Obj-C]\n# This is generally a bad idea, as it may break your code.\nmod_sort_include                         = false    # false/true\n\n# If TRUE, it will move a 'break' that appears after a fully braced 'case' before the close brace.\nmod_move_case_break                      = false    # false/true\n\n# Will add or remove the braces around a fully braced case statement.\n# Will only remove the braces if there are no variable declarations in the block.\nmod_case_brace                           = ignore   # ignore/add/remove/force\n\n# If TRUE, it will remove a void 'return;' that appears as the last statement in a function.\nmod_remove_empty_return                  = false    # false/true\n\n#\n# Comment modifications\n#\n\n# Try to wrap comments at cmt_width columns\ncmt_width                                = 0        # number\n\n# Set the comment reflow mode (default: 0)\n# 0: no reflowing (apart from the line wrapping due to cmt_width)\n# 1: no touching at all\n# 2: full reflow\ncmt_reflow_mode                          = 0        # number\n\n# If false, disable all multi-line comment changes, including cmt_width. keyword substitution, and leading chars.\n# Default is true.\ncmt_indent_multi                         = true     # false/true\n\n# Whether to group c-comments that look like they are in a block\ncmt_c_group                              = false    # false/true\n\n# Whether to put an empty '/*' on the first line of the combined c-comment\ncmt_c_nl_start                           = false    # false/true\n\n# Whether to put a newline before the closing '*/' of the combined c-comment\ncmt_c_nl_end                             = false    # false/true\n\n# Whether to group cpp-comments that look like they are in a block\ncmt_cpp_group                            = false    # false/true\n\n# Whether to put an empty '/*' on the first line of the combined cpp-comment\ncmt_cpp_nl_start                         = false    # false/true\n\n# Whether to put a newline before the closing '*/' of the combined cpp-comment\ncmt_cpp_nl_end                           = false    # false/true\n\n# Whether to change cpp-comments into c-comments\ncmt_cpp_to_c                             = false    # false/true\n\n# Whether to put a star on subsequent comment lines\ncmt_star_cont                            = true     # false/true\n\n# The number of spaces to insert at the start of subsequent comment lines\ncmt_sp_before_star_cont                  = 0        # number\n\n# The number of spaces to insert after the star on subsequent comment lines\ncmt_sp_after_star_cont                   = 0        # number\n\n# For multi-line comments with a '*' lead, remove leading spaces if the first and last lines of\n# the comment are the same length. Default=True\ncmt_multi_check_last                     = false    # false/true\n\n# The filename that contains text to insert at the head of a file if the file doesn't start with a C/C++ comment.\n# Will substitute $(filename) with the current file's name.\ncmt_insert_file_header                   = \"\"         # string\n\n# The filename that contains text to insert at the end of a file if the file doesn't end with a C/C++ comment.\n# Will substitute $(filename) with the current file's name.\ncmt_insert_file_footer                   = \"\"         # string\n\n# The filename that contains text to insert before a function implementation if the function isn't preceded with a C/C++ comment.\n# Will substitute $(function) with the function name and $(javaparam) with the javadoc @param and @return stuff.\n# Will also substitute $(fclass) with the class name: void CFoo::Bar() { ... }\ncmt_insert_func_header                   = \"\"         # string\n\n# The filename that contains text to insert before a class if the class isn't preceded with a C/C++ comment.\n# Will substitute $(class) with the class name.\ncmt_insert_class_header                  = \"\"         # string\n\n# If a preprocessor is encountered when stepping backwards from a function name, then\n# this option decides whether the comment should be inserted.\n# Affects cmt_insert_func_header and cmt_insert_class_header.\ncmt_insert_before_preproc                = false    # false/true\n\n#\n# Preprocessor options\n#\n\n# Control indent of preprocessors inside #if blocks at brace level 0\npp_indent                                = remove   # ignore/add/remove/force\n\n# Whether to indent #if/#else/#endif at the brace level (true) or from column 1 (false)\npp_indent_at_level                       = false    # false/true\n\n# If pp_indent_at_level=false, specifies the number of columns to indent per level. Default=1.\npp_indent_count                          = 1        # number\n\n# Add or remove space after # based on pp_level of #if blocks\npp_space                                 = remove   # ignore/add/remove/force\n\n# Sets the number of spaces added with pp_space\npp_space_count                           = 0        # number\n\n# The indent for #region and #endregion in C# and '#pragma region' in C/C++\npp_indent_region                         = 0        # number\n\n# Whether to indent the code between #region and #endregion\npp_region_indent_code                    = false    # false/true\n\n# If pp_indent_at_level=true, sets the indent for #if, #else, and #endif when not at file-level\npp_indent_if                             = 0        # number\n\n# Control whether to indent the code between #if, #else and #endif when not at file-level\npp_if_indent_code                        = false    # false/true\n\n# Whether to indent '#define' at the brace level (true) or from column 1 (false)\npp_define_at_level                       = false    # false/true\n\n# You can force a token to be a type with the 'type' option.\n# Example:\n# type myfoo1 myfoo2\n#\n# You can create custom macro-based indentation using macro-open,\n# macro-else and macro-close.\n# Example:\n# macro-open  BEGIN_TEMPLATE_MESSAGE_MAP\n# macro-open  BEGIN_MESSAGE_MAP\n# macro-close END_MESSAGE_MAP\n#\n# You can assign any keyword to any type with the set option.\n# set func_call_user _ N_\n#\n# The full syntax description of all custom definition config entries\n# is shown below:\n#\n# define custom tokens as:\n# - embed whitespace in token using '' escape character, or\n#   put token in quotes\n# - these: ' \" and ` are recognized as quote delimiters\n#\n# type token1 token2 token3 ...\n#             ^ optionally specify multiple tokens on a single line\n# define def_token output_token\n#                  ^ output_token is optional, then NULL is assumed\n# macro-open token\n# macro-close token\n# macro-else token\n# set id token1 token2 ...\n#               ^ optionally specify multiple tokens on a single line\n#     ^ id is one of the names in token_enum.h sans the CT_ prefix,\n#       e.g. PP_PRAGMA\n#\n# all tokens are separated by any mix of ',' commas, '=' equal signs\n# and whitespace (space, tab)\n#\n"
        },
        {
          "name": "APKBUILD",
          "type": "blob",
          "size": 0.7236328125,
          "content": "# Contributor: Max Lv <max.c.lv@gmail.com>\n# Maintainer: Max Lv <max.c.lv@gmail.com>\npkgname=simple-obfs\npkgver=0.0.5\npkgrel=0\npkgdesc=\"Simple-obfs is a simple obfusacting tool, designed as plugin server of shadowsocks.\"\nurl=\"https://github.com/shadowsocks/simple-obfs\"\narch=\"all\"\nlicense=\"GPLv3+\"\nmakedepends=\"autoconf automake libtool linux-headers libev-dev asciidoc xmlto\"\nsubpackages=\"$pkgname-doc\"\nbuilddir=\"$srcdir/$pkgname\"\n\nprepare() {\n\tcd \"$srcdir\"\n\tgit clone \"$url\"\n\tcd \"$builddir\"\n\tgit checkout \"v$pkgver\"\n\tgit submodule update --init --recursive\n}\n\nbuild() {\n\tcd \"$builddir\"\n\t./autogen.sh\n\t./configure --prefix=/usr\n\tmake\n}\n\ncheck() {\n\tcd \"$builddir\"\n\tmake check\n}\n\npackage() {\n\tcd \"$builddir\"\n\tmake DESTDIR=\"$pkgdir\" install\n}\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.248046875,
          "content": "Here is an inevitably incomplete list of MUCH-APPRECIATED CONTRIBUTORS --\npeople who have submitted patches, fixed bugs, added translations, and\ngenerally made simple-obfs that much better:\n\nhttps://github.com/shadowsocks/simple-obfs/graphs/contributors\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 0.5986328125,
          "content": "This program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, \nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "Changes",
          "type": "blob",
          "size": 0.59375,
          "content": "simple-obfs (0.0.5-1) unstable; urgency=medium\n\n  * Fix the building issue on Windows.\n\n -- Max Lv <max.c.lv@gmail.com>  Thu, 16 Nov 2017 18:04:07 +0800\n\nsimple-obfs (0.0.4-1) unstable; urgency=medium\n\n  * Minor bug fixes.\n\n -- Max Lv <max.c.lv@gmail.com>  Mon, 06 Nov 2017 14:52:48 +0800\n\nsimple-obfs (0.0.3-1) unstable; urgency=medium\n\n  * Add failover option.\n  * Minor bug fixes.\n\n -- Max Lv <max.c.lv@gmail.com>  Fri, 17 Mar 2017 17:02:43 +0800\n\nsimple-obfs (0.0.2-1) UNRELEASED; urgency=low\n\n  * Initial release. (Closes: #)\n\n -- Roger Shimizu <rogershimizu@gmail.com>  Wed, 22 Feb 2017 21:55:18 +0900\n"
        },
        {
          "name": "INSTALL",
          "type": "blob",
          "size": 15.212890625,
          "content": "Installation Instructions\n*************************\n\nCopyright (C) 1994, 1995, 1996, 1999, 2000, 2001, 2002, 2004, 2005,\n2006, 2007, 2008, 2009 Free Software Foundation, Inc.\n\n   Copying and distribution of this file, with or without modification,\nare permitted in any medium without royalty provided the copyright\nnotice and this notice are preserved.  This file is offered as-is,\nwithout warranty of any kind.\n\nBasic Installation\n==================\n\n   Briefly, the shell commands `./configure; make; make install' should\nconfigure, build, and install this package.  The following\nmore-detailed instructions are generic; see the `README' file for\ninstructions specific to this package.  Some packages provide this\n`INSTALL' file but do not implement all of the features documented\nbelow.  The lack of an optional feature in a given package is not\nnecessarily a bug.  More recommendations for GNU packages can be found\nin *note Makefile Conventions: (standards)Makefile Conventions.\n\n   The `configure' shell script attempts to guess correct values for\nvarious system-dependent variables used during compilation.  It uses\nthose values to create a `Makefile' in each directory of the package.\nIt may also create one or more `.h' files containing system-dependent\ndefinitions.  Finally, it creates a shell script `config.status' that\nyou can run in the future to recreate the current configuration, and a\nfile `config.log' containing compiler output (useful mainly for\ndebugging `configure').\n\n   It can also use an optional file (typically called `config.cache'\nand enabled with `--cache-file=config.cache' or simply `-C') that saves\nthe results of its tests to speed up reconfiguring.  Caching is\ndisabled by default to prevent problems with accidental use of stale\ncache files.\n\n   If you need to do unusual things to compile the package, please try\nto figure out how `configure' could check whether to do them, and mail\ndiffs or instructions to the address given in the `README' so they can\nbe considered for the next release.  If you are using the cache, and at\nsome point `config.cache' contains results you don't want to keep, you\nmay remove or edit it.\n\n   The file `configure.ac' (or `configure.in') is used to create\n`configure' by a program called `autoconf'.  You need `configure.ac' if\nyou want to change it or regenerate `configure' using a newer version\nof `autoconf'.\n\n   The simplest way to compile this package is:\n\n  1. `cd' to the directory containing the package's source code and type\n     `./configure' to configure the package for your system.\n\n     Running `configure' might take a while.  While running, it prints\n     some messages telling which features it is checking for.\n\n  2. Type `make' to compile the package.\n\n  3. Optionally, type `make check' to run any self-tests that come with\n     the package, generally using the just-built uninstalled binaries.\n\n  4. Type `make install' to install the programs and any data files and\n     documentation.  When installing into a prefix owned by root, it is\n     recommended that the package be configured and built as a regular\n     user, and only the `make install' phase executed with root\n     privileges.\n\n  5. Optionally, type `make installcheck' to repeat any self-tests, but\n     this time using the binaries in their final installed location.\n     This target does not install anything.  Running this target as a\n     regular user, particularly if the prior `make install' required\n     root privileges, verifies that the installation completed\n     correctly.\n\n  6. You can remove the program binaries and object files from the\n     source code directory by typing `make clean'.  To also remove the\n     files that `configure' created (so you can compile the package for\n     a different kind of computer), type `make distclean'.  There is\n     also a `make maintainer-clean' target, but that is intended mainly\n     for the package's developers.  If you use it, you may have to get\n     all sorts of other programs in order to regenerate files that came\n     with the distribution.\n\n  7. Often, you can also type `make uninstall' to remove the installed\n     files again.  In practice, not all packages have tested that\n     uninstallation works correctly, even though it is required by the\n     GNU Coding Standards.\n\n  8. Some packages, particularly those that use Automake, provide `make\n     distcheck', which can by used by developers to test that all other\n     targets like `make install' and `make uninstall' work correctly.\n     This target is generally not run by end users.\n\nCompilers and Options\n=====================\n\n   Some systems require unusual options for compilation or linking that\nthe `configure' script does not know about.  Run `./configure --help'\nfor details on some of the pertinent environment variables.\n\n   You can give `configure' initial values for configuration parameters\nby setting variables in the command line or in the environment.  Here\nis an example:\n\n     ./configure CC=c99 CFLAGS=-g LIBS=-lposix\n\n   *Note Defining Variables::, for more details.\n\nCompiling For Multiple Architectures\n====================================\n\n   You can compile the package for more than one kind of computer at the\nsame time, by placing the object files for each architecture in their\nown directory.  To do this, you can use GNU `make'.  `cd' to the\ndirectory where you want the object files and executables to go and run\nthe `configure' script.  `configure' automatically checks for the\nsource code in the directory that `configure' is in and in `..'.  This\nis known as a \"VPATH\" build.\n\n   With a non-GNU `make', it is safer to compile the package for one\narchitecture at a time in the source code directory.  After you have\ninstalled the package for one architecture, use `make distclean' before\nreconfiguring for another architecture.\n\n   On MacOS X 10.5 and later systems, you can create libraries and\nexecutables that work on multiple system types--known as \"fat\" or\n\"universal\" binaries--by specifying multiple `-arch' options to the\ncompiler but only a single `-arch' option to the preprocessor.  Like\nthis:\n\n     ./configure CC=\"gcc -arch i386 -arch x86_64 -arch ppc -arch ppc64\" \\\n                 CXX=\"g++ -arch i386 -arch x86_64 -arch ppc -arch ppc64\" \\\n                 CPP=\"gcc -E\" CXXCPP=\"g++ -E\"\n\n   This is not guaranteed to produce working output in all cases, you\nmay have to build one architecture at a time and combine the results\nusing the `lipo' tool if you have problems.\n\nInstallation Names\n==================\n\n   By default, `make install' installs the package's commands under\n`/usr/local/bin', include files under `/usr/local/include', etc.  You\ncan specify an installation prefix other than `/usr/local' by giving\n`configure' the option `--prefix=PREFIX', where PREFIX must be an\nabsolute file name.\n\n   You can specify separate installation prefixes for\narchitecture-specific files and architecture-independent files.  If you\npass the option `--exec-prefix=PREFIX' to `configure', the package uses\nPREFIX as the prefix for installing programs and libraries.\nDocumentation and other data files still use the regular prefix.\n\n   In addition, if you use an unusual directory layout you can give\noptions like `--bindir=DIR' to specify different values for particular\nkinds of files.  Run `configure --help' for a list of the directories\nyou can set and what kinds of files go in them.  In general, the\ndefault for these options is expressed in terms of `${prefix}', so that\nspecifying just `--prefix' will affect all of the other directory\nspecifications that were not explicitly provided.\n\n   The most portable way to affect installation locations is to pass the\ncorrect locations to `configure'; however, many packages provide one or\nboth of the following shortcuts of passing variable assignments to the\n`make install' command line to change installation locations without\nhaving to reconfigure or recompile.\n\n   The first method involves providing an override variable for each\naffected directory.  For example, `make install\nprefix=/alternate/directory' will choose an alternate location for all\ndirectory configuration variables that were expressed in terms of\n`${prefix}'.  Any directories that were specified during `configure',\nbut not in terms of `${prefix}', must each be overridden at install\ntime for the entire installation to be relocated.  The approach of\nmakefile variable overrides for each directory variable is required by\nthe GNU Coding Standards, and ideally causes no recompilation.\nHowever, some platforms have known limitations with the semantics of\nshared libraries that end up requiring recompilation when using this\nmethod, particularly noticeable in packages that use GNU Libtool.\n\n   The second method involves providing the `DESTDIR' variable.  For\nexample, `make install DESTDIR=/alternate/directory' will prepend\n`/alternate/directory' before all installation names.  The approach of\n`DESTDIR' overrides is not required by the GNU Coding Standards, and\ndoes not work on platforms that have drive letters.  On the other hand,\nit does better at avoiding recompilation issues, and works well even\nwhen some directory options were not specified in terms of `${prefix}'\nat `configure' time.\n\nOptional Features\n=================\n\n   If the package supports it, you can cause programs to be installed\nwith an extra prefix or suffix on their names by giving `configure' the\noption `--program-prefix=PREFIX' or `--program-suffix=SUFFIX'.\n\n   Some packages pay attention to `--enable-FEATURE' options to\n`configure', where FEATURE indicates an optional part of the package.\nThey may also pay attention to `--with-PACKAGE' options, where PACKAGE\nis something like `gnu-as' or `x' (for the X Window System).  The\n`README' should mention any `--enable-' and `--with-' options that the\npackage recognizes.\n\n   For packages that use the X Window System, `configure' can usually\nfind the X include and library files automatically, but if it doesn't,\nyou can use the `configure' options `--x-includes=DIR' and\n`--x-libraries=DIR' to specify their locations.\n\n   Some packages offer the ability to configure how verbose the\nexecution of `make' will be.  For these packages, running `./configure\n--enable-silent-rules' sets the default to minimal output, which can be\noverridden with `make V=1'; while running `./configure\n--disable-silent-rules' sets the default to verbose, which can be\noverridden with `make V=0'.\n\nParticular systems\n==================\n\n   On HP-UX, the default C compiler is not ANSI C compatible.  If GNU\nCC is not installed, it is recommended to use the following options in\norder to use an ANSI C compiler:\n\n     ./configure CC=\"cc -Ae -D_XOPEN_SOURCE=500\"\n\nand if that doesn't work, install pre-built binaries of GCC for HP-UX.\n\n   On OSF/1 a.k.a. Tru64, some versions of the default C compiler cannot\nparse its `<wchar.h>' header file.  The option `-nodtk' can be used as\na workaround.  If GNU CC is not installed, it is therefore recommended\nto try\n\n     ./configure CC=\"cc\"\n\nand if that doesn't work, try\n\n     ./configure CC=\"cc -nodtk\"\n\n   On Solaris, don't put `/usr/ucb' early in your `PATH'.  This\ndirectory contains several dysfunctional programs; working variants of\nthese programs are available in `/usr/bin'.  So, if you need `/usr/ucb'\nin your `PATH', put it _after_ `/usr/bin'.\n\n   On Haiku, software installed for all users goes in `/boot/common',\nnot `/usr/local'.  It is recommended to use the following options:\n\n     ./configure --prefix=/boot/common\n\nSpecifying the System Type\n==========================\n\n   There may be some features `configure' cannot figure out\nautomatically, but needs to determine by the type of machine the package\nwill run on.  Usually, assuming the package is built to be run on the\n_same_ architectures, `configure' can figure that out, but if it prints\na message saying it cannot guess the machine type, give it the\n`--build=TYPE' option.  TYPE can either be a short name for the system\ntype, such as `sun4', or a canonical name which has the form:\n\n     CPU-COMPANY-SYSTEM\n\nwhere SYSTEM can have one of these forms:\n\n     OS\n     KERNEL-OS\n\n   See the file `config.sub' for the possible values of each field.  If\n`config.sub' isn't included in this package, then this package doesn't\nneed to know the machine type.\n\n   If you are _building_ compiler tools for cross-compiling, you should\nuse the option `--target=TYPE' to select the type of system they will\nproduce code for.\n\n   If you want to _use_ a cross compiler, that generates code for a\nplatform different from the build platform, you should specify the\n\"host\" platform (i.e., that on which the generated programs will\neventually be run) with `--host=TYPE'.\n\nSharing Defaults\n================\n\n   If you want to set default values for `configure' scripts to share,\nyou can create a site shell script called `config.site' that gives\ndefault values for variables like `CC', `cache_file', and `prefix'.\n`configure' looks for `PREFIX/share/config.site' if it exists, then\n`PREFIX/etc/config.site' if it exists.  Or, you can set the\n`CONFIG_SITE' environment variable to the location of the site script.\nA warning: not all `configure' scripts look for a site script.\n\nDefining Variables\n==================\n\n   Variables not defined in a site shell script can be set in the\nenvironment passed to `configure'.  However, some packages may run\nconfigure again during the build, and the customized values of these\nvariables may be lost.  In order to avoid this problem, you should set\nthem in the `configure' command line, using `VAR=value'.  For example:\n\n     ./configure CC=/usr/local2/bin/gcc\n\ncauses the specified `gcc' to be used as the C compiler (unless it is\noverridden in the site shell script).\n\nUnfortunately, this technique does not work for `CONFIG_SHELL' due to\nan Autoconf bug.  Until the bug is fixed you can use this workaround:\n\n     CONFIG_SHELL=/bin/bash /bin/bash ./configure CONFIG_SHELL=/bin/bash\n\n`configure' Invocation\n======================\n\n   `configure' recognizes the following options to control how it\noperates.\n\n`--help'\n`-h'\n     Print a summary of all of the options to `configure', and exit.\n\n`--help=short'\n`--help=recursive'\n     Print a summary of the options unique to this package's\n     `configure', and exit.  The `short' variant lists options used\n     only in the top level, while the `recursive' variant lists options\n     also present in any nested packages.\n\n`--version'\n`-V'\n     Print the version of Autoconf used to generate the `configure'\n     script, and exit.\n\n`--cache-file=FILE'\n     Enable the cache: use and save the results of the tests in FILE,\n     traditionally `config.cache'.  FILE defaults to `/dev/null' to\n     disable caching.\n\n`--config-cache'\n`-C'\n     Alias for `--cache-file=config.cache'.\n\n`--quiet'\n`--silent'\n`-q'\n     Do not print messages saying which checks are being made.  To\n     suppress all normal output, redirect it to `/dev/null' (any error\n     messages will still be shown).\n\n`--srcdir=DIR'\n     Look for the package's source code in directory DIR.  Usually\n     `configure' can determine that directory automatically.\n\n`--prefix=DIR'\n     Use DIR as the installation prefix.  *note Installation Names::\n     for more details, including other options available for fine-tuning\n     the installation locations.\n\n`--no-create'\n`-n'\n     Run the configure checks, but stop before creating any output\n     files.\n\n`configure' also accepts some other, not widely useful, options.  Run\n`configure --help' for more details.\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 31.7119140625,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 0.0908203125,
          "content": "SUBDIRS = libcork src\n\nif ENABLE_DOCUMENTATION\nSUBDIRS += doc\nendif\n\nACLOCAL_AMFLAGS = -I m4\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.228515625,
          "content": "# simple-obfs\n\nDeprecated. Followed by [v2ray-plugin](https://github.com/shadowsocks/v2ray-plugin).\n\n## Intro\n\nSimple-obfs is a simple obfuscating tool, designed as plugin server of shadowsocks.\n\nCurrent version: 0.0.5 | [Changelog](Changes)\n\n## Build\nFor Unix-like systems, especially Debian-based systems,\ne.g. Ubuntu, Debian or Linux Mint, you can build the binary like this:\n\n```bash\n# Debian / Ubuntu\nsudo apt-get install --no-install-recommends build-essential autoconf libtool libssl-dev libpcre3-dev libev-dev asciidoc xmlto automake\n# CentOS / Fedora / RHEL\nsudo yum install gcc autoconf libtool automake make zlib-devel openssl-devel asciidoc xmlto libev-devel\n# Arch\nsudo pacman -Syu gcc autoconf libtool automake make zlib openssl asciidoc xmlto\n# Alpine\napk add gcc autoconf make libtool automake zlib-dev openssl asciidoc xmlto libpcre32 libev-dev g++ linux-headers\n\ngit clone https://github.com/shadowsocks/simple-obfs.git\ncd simple-obfs\ngit submodule update --init --recursive\n./autogen.sh\n./configure && make\nsudo make install\n```\n## Usage\n\nFor a detailed and complete list of all supported arguments, you may refer to the\nman pages of the applications, respectively.\n\n### Plugin mode with shadowsocks\n\nAdd respective item to `--plugin` and `--plugin-opts` arg or as value of `plugin` and `plugin_opts` in JSON.\n\nOn the client:\n\n```bash\nss-local -c config.json --plugin obfs-local --plugin-opts \"obfs=http;obfs-host=www.bing.com\"\n```\n\nOn the server:\n\n```bash\nss-server -c config.json --plugin obfs-server --plugin-opts \"obfs=http\"\n```\n\n### Standalone mode\n\nOn the client:\n\n```bash\nobfs-local -s server_ip -p 8139 -l 1984 --obfs http --obfs-host www.bing.com\nss-local -c config.json -s 127.0.0.1 -p 1984 -l 1080\n```\n\nOn the server:\n\n```bash\nobfs-server -s server_ip -p 8139 --obfs http -r 127.0.0.1:8388\nss-server -c config.json -s 127.0.0.1 -p 8388\n```\n\n### Coexist with an actual Web server\n\nOnly applicable on the server:\n\n```bash\n# HTTP only with plugin mode\nss-server -c config.json --plugin obfs-server --plugin-opts \"obfs=http;failover=example.com:80\"\n\n# Both HTTP and HTTPS with standalone mode\nobfs-server -s server_ip -p 80 --obfs http -r 127.0.0.1:8388 --failover example.com:80\nobfs-server -s server_ip -p 443 --obfs tls -r 127.0.0.1:8388 --failover example.com:443\n\n# suppose you have an HTTP webserver (apache/nginx/whatever) listening on localhost:8080 and HTTPS on 8443\n# (you probably shouldn't expose these ports)\nobfs-server -s server_ip -p 80 --obfs http -r 127.0.0.1:8388 --failover 127.0.0.1:8080\nobfs-server -s server_ip -p 443 --obfs tls -r 127.0.0.1:8388 --failover 127.0.0.1:8443\n```\n\n## License\n\n```\nCopyright (C) 2016 Max Lv <max.c.lv@gmail.com>\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program. If not, see <http://www.gnu.org/licenses/>.\n```\n"
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 0.0390625,
          "content": "#!/bin/sh\n\nautoreconf --install --force\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 5.52734375,
          "content": "dnl                                               -*- Autoconf -*-\ndnl Process this file with autoconf to produce a configure script.\n\nAC_PREREQ([2.67])\nAC_INIT([simple-obfs], [0.0.5], [max.c.lv@gmail.com])\nAC_CONFIG_SRCDIR([src/encrypt.c])\nAC_CONFIG_HEADERS([config.h])\nAC_CONFIG_AUX_DIR(auto)\nAC_CONFIG_MACRO_DIR([m4])\nAC_USE_SYSTEM_EXTENSIONS\n\nAM_INIT_AUTOMAKE([subdir-objects foreign -Wno-gnu -Werror])\nm4_ifdef([AM_PROG_AR], [AM_PROG_AR])\nm4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\nAM_MAINTAINER_MODE\nAM_DEP_TRACK\n\ndnl Checks for lib\nAC_DISABLE_STATIC\nAC_DISABLE_SHARED\nLT_INIT([dlopen])\n\nAC_ARG_ENABLE([documentation],\n  AS_HELP_STRING([--disable-documentation], [do not build documentation]),\n  [disable_documentation=true],\n  [disable_documentation=false])\nAM_CONDITIONAL([ENABLE_DOCUMENTATION], [test x$disable_documentation = xfalse])\n\nAM_COND_IF([ENABLE_DOCUMENTATION], [\n  AC_PATH_PROG([ASCIIDOC], [asciidoc])\n  test x\"${ASCIIDOC}\" != x || AC_MSG_ERROR([Cannot find `asciidoc` in PATH.])\n  AC_PATH_PROG([XMLTO], [xmlto])\n  test x\"$XMLTO\" != x || AC_MSG_ERROR([Cannot find `xmlto` in PATH.])\n  AC_PATH_PROG([GZIP], [gzip], [gzip])\n  AC_PATH_PROG([MV], [mv], [mv])\n  AC_PROG_SED\n])\n\ndnl Checks for programs.\nAC_PROG_CC\nAM_PROG_CC_C_O\nAC_PROG_INSTALL\nAC_PROG_LN_S\nAC_PROG_LIBTOOL\nAC_PROG_MAKE_SET\nAC_LANG_SOURCE\n\ndnl Add library for mingw\ncase $host in\n  *-mingw*)\n    CFLAGS=\"$CFLAGS -mno-ms-bitfields\"\n    LIBS=\"$LIBS -lws2_32\"\n    ;;\n  *-cygwin*)\n    CFLAGS=\"$CFLAGS -mno-ms-bitfields\"\n    ;;\n  *)\n    ;;\nesac\n\ndnl Checks for TLS\nAX_TLS([:], [:])\n\ndnl Checks for inet_ntop\nss_FUNC_INET_NTOP\n\ndnl Checks for host.\nAC_MSG_CHECKING(for what kind of host)\ncase $host in\n  *-linux*)\n    os_support=linux\n    AC_MSG_RESULT(Linux)\n    ;;\n  *-mingw*)\n    os_support=mingw\n    AC_MSG_RESULT(MinGW)\n    ;;\n  *)\n    AC_MSG_RESULT(transparent proxy does not support for $host)\n    ;;\nesac\n\ndnl Checks for stack protector\nGGL_CHECK_STACK_PROTECTOR([has_stack_protector=yes], [has_stack_protector=no])\n# XXX - disable -fstack-protector due to missing libssp_nonshared\ncase \"$host_os\" in\n     *aix*)\n\tAC_MSG_NOTICE([-fstack-protector disabled on AIX])\n\thas_stack_protector=no\n\t;;\n     *sunos*)\n\tAC_MSG_NOTICE([-fstack-protector disabled on SunOS])\n\thas_stack_protector=no\n\t;;\n     *solaris*)\n\tAC_MSG_NOTICE([-fstack-protector disabled on Solaris])\n\thas_stack_protector=no\n\t;;\nesac\n\nAC_ARG_ENABLE(ssp,\n[AS_HELP_STRING(--disable-ssp,Do not compile with -fstack-protector)],\n[\n  enable_ssp=\"no\"\n],\n[\n  enable_ssp=\"yes\"\n])\n\nif test x$has_stack_protector = xyes && test x$enable_ssp = xyes; then\n   CFLAGS=\"$CFLAGS -fstack-protector\"\n   AC_MSG_NOTICE([-fstack-protector enabled in CFLAGS])\nfi\n\nAM_CONDITIONAL(BUILD_REDIRECTOR, test \"$os_support\" = \"linux\")\nAM_CONDITIONAL(BUILD_WINCOMPAT, test \"$os_support\" = \"mingw\")\n\ndnl Checks for header files.\nAC_CHECK_HEADERS([limits.h stdint.h inttypes.h arpa/inet.h fcntl.h langinfo.h locale.h netdb.h netinet/in.h stdlib.h string.h strings.h unistd.h sys/ioctl.h])\n\ndnl A special check required for <net/if.h> on Darwin. See\ndnl http://www.gnu.org/software/autoconf/manual/html_node/Header-Portability.html.\nAC_CHECK_HEADERS([sys/socket.h])\nAC_CHECK_HEADERS([net/if.h], [], [],\n[\n#include <stdio.h>\n#ifdef STDC_HEADERS\n# include <stdlib.h>\n# include <stddef.h>\n#else\n# ifdef HAVE_STDLIB_H\n#  include <stdlib.h>\n# endif\n#endif\n#ifdef HAVE_SYS_SOCKET_H\n# include <sys/socket.h>\n#endif\n])\n\ncase $host in\n  *-mingw*)\n    AC_DEFINE([CONNECT_IN_PROGRESS], [WSAEWOULDBLOCK], [errno for incomplete non-blocking connect(2)])\n    AC_CHECK_HEADERS([windows.h winsock2.h ws2tcpip.h mswsock.h], [], [AC_MSG_ERROR([Missing MinGW headers])], [])\n    ;;\n  *-linux*)\n    AC_DEFINE([CONNECT_IN_PROGRESS], [EINPROGRESS], [errno for incomplete non-blocking connect(2)])\n    dnl Checks for netfilter headers\n    AC_CHECK_HEADERS([linux/if.h linux/netfilter_ipv4.h linux/netfilter_ipv6/ip6_tables.h],\n                     [], [AC_MSG_ERROR([Missing netfilter headers])],\n    [[\n    #if HAVE_LIMITS_H\n    #include <limits.h>\n    #endif\n    /* Netfilter ip(6)tables v1.4.0 has broken headers */\n    #if HAVE_NETINET_IN_H\n    #include <netinet/in.h>\n    #endif\n    #if HAVE_LINUX_IF_H\n    #include <linux/if.h>\n    #endif\n    #if HAVE_SYS_SOCKET_H\n    #include <sys/socket.h>\n    #endif\n    ]])\n    ;;\n  *)\n    # These are POSIX-like systems using BSD-like sockets API.\n    AC_DEFINE([CONNECT_IN_PROGRESS], [EINPROGRESS], [errno for incomplete non-blocking connect(2)])\n    ;;\nesac\n\nAC_C_BIGENDIAN\n\ndnl Checks for typedefs, structures, and compiler characteristics.\nAC_C_INLINE\nAC_TYPE_SSIZE_T\n\ndnl Checks for header files.\nAC_HEADER_ASSERT\nAC_HEADER_STDC\nAC_HEADER_SYS_WAIT\n\ndnl Checks for typedefs, structures, and compiler characteristics.\nAC_C_CONST\nAC_TYPE_PID_T\nAC_TYPE_SIZE_T\nAC_TYPE_SSIZE_T\nAC_TYPE_UINT16_T\nAC_TYPE_UINT8_T\nAC_HEADER_TIME\n\ndnl Checks for library functions.\nAC_FUNC_FORK\nAC_FUNC_SELECT_ARGTYPES\nAC_TYPE_SIGNAL\nAC_CHECK_FUNCS([memset select setresuid setreuid strerror getpwnam_r setrlimit])\n\nAC_CHECK_LIB(socket, connect)\n\ndnl Checks for library functions.\nAC_CHECK_FUNCS([malloc memset socket])\n\nAC_ARG_WITH(ev,\n  AS_HELP_STRING([--with-ev=DIR], [use a specific libev library]),\n  [CFLAGS=\"$CFLAGS -I$withval/include\"\n   CPPFLAGS=\"$CPPFLAGS -I$withval/include\"\n   LDFLAGS=\"$LDFLAGS -L$withval/lib\"]\n)\nAC_CHECK_LIB([ev], [ev_loop_destroy], [LIBS=\"-lev $LIBS\"], [AC_MSG_ERROR([Couldn't find libev. Try installing libev-dev@<:@el@:>@.])])\n\nAM_COND_IF([ENABLE_DOCUMENTATION],\n  [AC_CONFIG_FILES([doc/Makefile])\n])\n\nAC_CONFIG_FILES([Makefile\n                 libcork/Makefile\n                 src/Makefile])\n\nAC_OUTPUT\n"
        },
        {
          "name": "debian",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "libcork",
          "type": "commit",
          "content": null
        },
        {
          "name": "m4",
          "type": "tree",
          "content": null
        },
        {
          "name": "rpm",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}