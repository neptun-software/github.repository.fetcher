{
  "metadata": {
    "timestamp": 1736710130721,
    "page": 776,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "monero-project/monero-gui",
      "stars": 1802,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.001953125,
          "content": "*\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6044921875,
          "content": "*.user\n*.user.*\ntranslations/*.qm\nbuild\nversion.js\n# IOS stuff below\nmoc_*\n*.o\n*.mak\n*.build\n*.xcodeproj\nmonero-wallet-gui_plugin_import.cpp\nmonero-wallet-gui_qml_plugin_import.cpp\n*.qmlc\n*.jsc\nqml_qmlcache.qrc\n\n### Vim ###\n# Swap\n[._]*.s[a-v][a-z]\n[._]*.sw[a-p]\n[._]s[a-rt-v][a-z]\n[._]ss[a-gi-z]\n[._]sw[a-p]\n\n# Session\nSession.vim\n\n# Temporary                                                                                                                                                                                             \n.netrwhist\n*~\n*.autosave\n# Auto-generated tag files\ntags\n# Persistent undo\n[._]*.un~\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.185546875,
          "content": "[submodule \"monero\"]\n\tpath = monero\n\turl = https://github.com/monero-project/monero\n\tignore = all\n[submodule \"external/quirc\"]\n\tpath = external/quirc\n\turl = https://github.com/dlbeer/quirc/\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 15.9453125,
          "content": "cmake_minimum_required(VERSION 3.12)\nproject(monero-gui)\n\nmessage(STATUS \"Initiating compile using CMake ${CMAKE_VERSION}\")\n\nset(VERSION_MAJOR \"18\")\nset(VERSION_MINOR \"3\")\nset(VERSION_REVISION \"4\")\nset(VERSION \"0.${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_REVISION}\")\n\noption(STATIC \"Link libraries statically, requires static Qt\")\n\noption(USE_DEVICE_TREZOR \"Trezor support compilation\" ON)\noption(WITH_SCANNER \"Enable webcam QR scanner\" OFF)\noption(WITH_DESKTOP_ENTRY \"Ask to install desktop entry on first startup\" ON)\noption(WITH_UPDATER \"Regularly check for new updates\" ON)\noption(DEV_MODE \"Checkout latest monero master on build\" OFF)\n\nlist(INSERT CMAKE_MODULE_PATH 0 \"${CMAKE_SOURCE_DIR}/cmake\")\ninclude(CheckCCompilerFlag)\ninclude(CheckCXXCompilerFlag)\ninclude(CheckLinkerFlag)\n\nset(BUILD_GUI_DEPS ON)\nset(BUILD_64 ON CACHE BOOL \"Build 64-bit binaries\")\n\nif(NOT MANUAL_SUBMODULES)\n  find_package(Git)\n  if(GIT_FOUND)\n    if(NOT DEV_MODE)\n      function (check_submodule relative_path)\n        execute_process(COMMAND git rev-parse \"HEAD\" WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/${relative_path} OUTPUT_VARIABLE localHead)\n        execute_process(COMMAND git rev-parse \"HEAD:${relative_path}\" WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} OUTPUT_VARIABLE checkedHead)\n        string(COMPARE EQUAL \"${localHead}\" \"${checkedHead}\" upToDate)\n        if (upToDate)\n          message(STATUS \"Submodule '${relative_path}' is up-to-date\")\n        else()\n          message(FATAL_ERROR \"Submodule '${relative_path}' is not using the checked head. Please update all submodules with\\ngit submodule update --init --force --recursive\\nor run cmake with -DMANUAL_SUBMODULES=1,\\n or if you want to build from latest master run cmake with -DDEV_MODE=ON,\\n or run make devmode\")\n        endif()\n      endfunction ()\n      message(STATUS \"Checking submodules\")\n      check_submodule(monero)\n    else()\n      execute_process(COMMAND ${GIT_EXECUTABLE} fetch WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/monero RESULT_VARIABLE GIT_FETCH_RESULT)\n      execute_process(COMMAND ${GIT_EXECUTABLE} checkout -f origin/master WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/monero RESULT_VARIABLE GIT_CHECKOUT_MASTER_RESULT)\n      execute_process(COMMAND ${GIT_EXECUTABLE} submodule sync --recursive WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/monero RESULT_VARIABLE GIT_SUBMODULE_SYNC_RESULT)\n      execute_process(COMMAND ${GIT_EXECUTABLE} submodule update --init --force --recursive WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/monero RESULT_VARIABLE GIT_SUBMODULE_UPDATE_RESULT)\n      if(NOT GIT_FETCH_RESULT EQUAL \"0\" OR NOT GIT_CHECKOUT_MASTER_RESULT EQUAL \"0\" OR NOT GIT_SUBMODULE_SYNC_RESULT EQUAL \"0\" OR NOT GIT_SUBMODULE_UPDATE_RESULT EQUAL \"0\")\n        message(FATAL_ERROR \"Updating git submodule to master (-DDEV_MODE=ON) failed\")\n      endif()\n    endif()\n  endif()\nendif()\n\nadd_subdirectory(monero)\nadd_subdirectory(external)\n\nset(CMAKE_AUTOMOC ON)\nset(CMAKE_AUTORCC ON)\nset(CMAKE_AUTOUIC ON)\n\nget_directory_property(ARCH_WIDTH DIRECTORY \"monero\" DEFINITION ARCH_WIDTH)\n\nif (NOT CMAKE_BUILD_TYPE STREQUAL \"Debug\")\n  add_definitions(-DQT_NO_DEBUG)\nendif()\n\nif(STATIC)\n  message(STATUS \"Initiating static build\")\n  set(CMAKE_FIND_LIBRARY_SUFFIXES \".a\" ${CMAKE_FIND_LIBRARY_SUFFIXES})\n  add_definitions(-DMONERO_GUI_STATIC)\nendif()\n\ninclude(CMakePackageConfigHelpers)\n\ninclude_directories(${EASYLOGGING_INCLUDE})\nlink_directories(${EASYLOGGING_LIBRARY_DIRS})\n\ninclude(VersionGui)\n\nmessage(STATUS \"${CMAKE_MODULE_PATH}\")\n\nif(WITH_SCANNER)\n    add_definitions(-DWITH_SCANNER)\nendif()\n\nif(WITH_DESKTOP_ENTRY)\n    add_definitions(-DWITH_DESKTOP_ENTRY)\nendif()\n\nif(WITH_UPDATER)\n    add_definitions(-DWITH_UPDATER)\nendif()\n\n# Sodium\nfind_library(SODIUM_LIBRARY sodium)\nmessage(STATUS \"libsodium: libraries at ${SODIUM_LIBRARY}\")\n\nif(UNIX AND NOT APPLE AND NOT ANDROID)\n    set(CMAKE_SKIP_RPATH ON)\n    set(CMAKE_FIND_LIBRARY_SUFFIXES_PREV ${CMAKE_FIND_LIBRARY_SUFFIXES})\n    set(CMAKE_FIND_LIBRARY_SUFFIXES \".so\")\n    find_package(X11 REQUIRED)\n    set(CMAKE_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES_PREV})\n    message(STATUS \"X11_FOUND = ${X11_FOUND}\")\n    message(STATUS \"X11_INCLUDE_DIR = ${X11_INCLUDE_DIR}\")\n    message(STATUS \"X11_LIBRARIES = ${X11_LIBRARIES}\")\n    include_directories(${X11_INCLUDE_DIR})\n    link_directories(${X11_LIBRARIES})\n    if(STATIC)\n        find_library(XCB_LIBRARY xcb)\n        message(STATUS \"Found xcb library: ${XCB_LIBRARY}\")\n    endif()\nendif()\n\nset(QT5_LIBRARIES\n  Qt5Core\n  Qt5Quick\n  Qt5Gui\n  Qt5Qml\n  Qt5Svg\n  Qt5Xml\n)\n\nif(WITH_SCANNER)\n  list(APPEND QT5_LIBRARIES Qt5Multimedia)\nendif()\n\nif(APPLE)\n  list(APPEND QT5_LIBRARIES Qt5MacExtras)\nendif()\n\nif(UNIX)\n  if(NOT CMAKE_PREFIX_PATH AND DEFINED ENV{CMAKE_PREFIX_PATH})\n    message(STATUS \"Using CMAKE_PREFIX_PATH environment variable: '$ENV{CMAKE_PREFIX_PATH}'\")\n    set(CMAKE_PREFIX_PATH $ENV{CMAKE_PREFIX_PATH})\n  endif()\n  if(APPLE AND NOT CMAKE_PREFIX_PATH)\n    execute_process(COMMAND brew --prefix qt5 OUTPUT_VARIABLE QT5_DIR OUTPUT_STRIP_TRAILING_WHITESPACE)\n    list(APPEND CMAKE_PREFIX_PATH ${QT5_DIR})\n  endif()\nendif()\n\nfind_package(PkgConfig REQUIRED)\n\n# TODO: drop this once we switch to Qt 5.14+\npkg_check_modules(Qt5QmlModels_PKG_CONFIG QUIET Qt5QmlModels)\nif(Qt5QmlModels_PKG_CONFIG_FOUND)\n  list(APPEND QT5_LIBRARIES Qt5QmlModels)\nendif()\n\n# TODO: drop this once we switch to Qt 5.12+\nfind_package(Qt5XmlPatterns QUIET)\nif(Qt5XmlPatterns_FOUND)\n  list(APPEND QT5_LIBRARIES Qt5XmlPatterns)\nendif()\n\nforeach(QT5_MODULE ${QT5_LIBRARIES})\n  find_package(${QT5_MODULE} REQUIRED)\n  include_directories(${${QT5_MODULE}_INCLUDE_DIRS})\nendforeach()\n\nif(NOT (CMAKE_CROSSCOMPILING AND ANDROID))\n  pkg_check_modules(QT5_PKG_CONFIG REQUIRED ${QT5_LIBRARIES})\nelse()\n  set(QT5_LIBRARIES_ABI)\n  foreach(QT5_MODULE ${QT5_LIBRARIES})\n    list(APPEND QT5_LIBRARIES_ABI \"${QT5_MODULE}_${CMAKE_ANDROID_ARCH_ABI}\")\n  endforeach()\n  pkg_check_modules(QT5_PKG_CONFIG REQUIRED ${QT5_LIBRARIES_ABI})\nendif()\n\nget_target_property(QMAKE_IMPORTED_LOCATION Qt5::qmake IMPORTED_LOCATION)\nget_filename_component(QT_INSTALL_PREFIX \"${QMAKE_IMPORTED_LOCATION}/../..\" ABSOLUTE)\n\nif(APPLE AND NOT STATIC)\n  set(CMAKE_BUILD_RPATH \"${QT_INSTALL_PREFIX}/lib\")\nendif()\n\nif(QT5_PKG_CONFIG_FOUND)\n  set(QT5_PKG_CONFIG \"QT5_PKG_CONFIG\")\n  if(STATIC)\n    set(QT5_PKG_CONFIG \"${QT5_PKG_CONFIG}_STATIC\")\n  endif()\n\n  if(UNIX AND CMAKE_PREFIX_PATH)\n    if(APPLE)\n      list(JOIN ${QT5_PKG_CONFIG}_LDFLAGS_OTHER \" \" ${QT5_PKG_CONFIG}_LDFLAGS_OTHER)\n    endif()\n    # temporal workaround for https://bugreports.qt.io/browse/QTBUG-80922\n    STRING(REPLACE \"${QT5_PKG_CONFIG_Qt5Core_PREFIX}\" \"${QT_INSTALL_PREFIX}\" ${QT5_PKG_CONFIG}_LDFLAGS_OTHER \"${${QT5_PKG_CONFIG}_LDFLAGS_OTHER}\")\n    STRING(REPLACE \"${QT5_PKG_CONFIG_Qt5Core_PREFIX}\" \"${QT_INSTALL_PREFIX}\" ${QT5_PKG_CONFIG}_LIBRARIES \"${${QT5_PKG_CONFIG}_LIBRARIES}\")\n    STRING(REPLACE \"${QT5_PKG_CONFIG_Qt5Core_PREFIX}\" \"${QT_INSTALL_PREFIX}\" ${QT5_PKG_CONFIG}_INCLUDE_DIRS \"${${QT5_PKG_CONFIG}_INCLUDE_DIRS}\")\n    STRING(REPLACE \"${QT5_PKG_CONFIG_Qt5Core_PREFIX}\" \"${QT_INSTALL_PREFIX}\" ${QT5_PKG_CONFIG}_LIBRARY_DIRS \"${${QT5_PKG_CONFIG}_LIBRARY_DIRS}\")\n  endif()\n\n  set(QT5_LIBRARIES ${${QT5_PKG_CONFIG}_LIBRARIES} ${${QT5_PKG_CONFIG}_LDFLAGS_OTHER})\n  include_directories(${${QT5_PKG_CONFIG}_INCLUDE_DIRS})\n  link_directories(${${QT5_PKG_CONFIG}_LIBRARY_DIRS})\nendif()\n\nlist(APPEND QT5_LIBRARIES\n  ${Qt5Gui_PLUGINS}\n  ${Qt5Svg_PLUGINS}\n  ${Qt5Qml_PLUGINS}\n  ${Qt5Network_PLUGINS}\n)\n\nif(STATIC)\n  set(QT5_EXTRA_PATHS ${QT5_PKG_CONFIG_Qt5Qml_PREFIX}/qml/Qt/labs/folderlistmodel)\n  list(APPEND QT5_EXTRA_PATHS ${QT5_PKG_CONFIG_Qt5Qml_PREFIX}/qml/Qt/labs/settings)\n  list(APPEND QT5_EXTRA_PATHS ${QT5_PKG_CONFIG_Qt5Qml_PREFIX}/qml/Qt/labs/platform)\n  list(APPEND QT5_EXTRA_PATHS ${QT5_PKG_CONFIG_Qt5Qml_PREFIX}/qml/QtGraphicalEffects)\n  list(APPEND QT5_EXTRA_PATHS ${QT5_PKG_CONFIG_Qt5Qml_PREFIX}/qml/QtGraphicalEffects/private)\n  list(APPEND QT5_EXTRA_PATHS ${QT5_PKG_CONFIG_Qt5Qml_PREFIX}/qml/QtMultimedia)\n  list(APPEND QT5_EXTRA_PATHS ${QT5_PKG_CONFIG_Qt5Qml_PREFIX}/qml/QtQml)\n  list(APPEND QT5_EXTRA_PATHS ${QT5_PKG_CONFIG_Qt5Qml_PREFIX}/qml/QtQml/Models.2)\n  list(APPEND QT5_EXTRA_PATHS ${QT5_PKG_CONFIG_Qt5Qml_PREFIX}/qml/QtQuick.2)\n  list(APPEND QT5_EXTRA_PATHS ${QT5_PKG_CONFIG_Qt5Qml_PREFIX}/qml/QtQuick/Controls)\n  list(APPEND QT5_EXTRA_PATHS ${QT5_PKG_CONFIG_Qt5Qml_PREFIX}/qml/QtQuick/Controls.2)\n  list(APPEND QT5_EXTRA_PATHS ${QT5_PKG_CONFIG_Qt5Qml_PREFIX}/qml/QtQuick/Dialogs)\n  list(APPEND QT5_EXTRA_PATHS ${QT5_PKG_CONFIG_Qt5Qml_PREFIX}/qml/QtQuick/Dialogs/Private)\n  list(APPEND QT5_EXTRA_PATHS ${QT5_PKG_CONFIG_Qt5Qml_PREFIX}/qml/QtQuick/Layouts)\n  list(APPEND QT5_EXTRA_PATHS ${QT5_PKG_CONFIG_Qt5Qml_PREFIX}/qml/QtQuick/PrivateWidgets)\n  list(APPEND QT5_EXTRA_PATHS ${QT5_PKG_CONFIG_Qt5Qml_PREFIX}/qml/QtQuick/Templates.2)\n  list(APPEND QT5_EXTRA_PATHS ${QT5_PKG_CONFIG_Qt5Qml_PREFIX}/qml/QtQuick/Window.2)\n  list(APPEND QT5_EXTRA_PATHS ${QT5_PKG_CONFIG_Qt5Qml_PREFIX}/qml/QtQuick/XmlListModel)\n\n  set(QT5_EXTRA_LIBRARIES_LIST\n    qtquicktemplates2plugin\n    Qt5QuickTemplates2\n    qtquickcontrols2plugin\n    Qt5QuickControls2\n    dialogplugin\n    dialogsprivateplugin\n    qmlfolderlistmodelplugin\n    qmlsettingsplugin\n    qtlabsplatformplugin\n    qmlxmllistmodelplugin\n    qquicklayoutsplugin\n    modelsplugin\n  )\n\n  if(WITH_SCANNER)\n    list(APPEND QT5_EXTRA_LIBRARIES_LIST\n      declarative_multimedia\n      Qt5MultimediaQuick\n    )\n  endif()\n\n  list(APPEND QT5_EXTRA_LIBRARIES_LIST\n    qtgraphicaleffectsplugin\n    qtgraphicaleffectsprivate\n    qtquick2plugin\n    qtquickcontrolsplugin\n    widgetsplugin\n    windowplugin\n  )\n\n  if(NOT ${Qt5Core_VERSION} VERSION_LESS 5.14)\n     list(APPEND QT5_EXTRA_LIBRARIES_LIST qmlplugin)\n  endif()\n\n  set(QT5_EXTRA_LIBRARIES)\n  foreach(LIBRARY ${QT5_EXTRA_LIBRARIES_LIST})\n    find_library(${LIBRARY}_LIBRARY ${LIBRARY} PATHS ${QT5_EXTRA_PATHS} REQUIRED)\n    list(APPEND QT5_EXTRA_LIBRARIES ${${LIBRARY}_LIBRARY})\n  endforeach()\n\n  if(MINGW)\n    if(CMAKE_BUILD_TYPE STREQUAL \"Debug\")\n      list(APPEND QT5_EXTRA_LIBRARIES D3D11 Dwrite D2d1)\n    endif()\n  endif()\n\n  set(QT5_LIBRARIES\n    ${QT5_EXTRA_LIBRARIES}\n    ${QT5_LIBRARIES}\n  )\n\n  set(QT5_INTEGRATION_LIBRARIES_LIST\n    Qt5EventDispatcherSupport\n    Qt5PacketProtocol\n    Qt5ThemeSupport\n    Qt5FontDatabaseSupport\n  )\n\n  if(UNIX AND NOT APPLE)\n    list(APPEND QT5_INTEGRATION_LIBRARIES_LIST\n      Qt5XcbQpa\n      Qt5ServiceSupport\n      Qt5GlxSupport\n    )\n  elseif(MINGW)\n    list(APPEND QT5_INTEGRATION_LIBRARIES_LIST qtfreetype)\n  endif()\n\n  foreach(LIBRARY ${QT5_INTEGRATION_LIBRARIES_LIST})\n    find_library(${LIBRARY}_LIBRARY ${LIBRARY} PATHS ${QT5_EXTRA_PATHS} REQUIRED)\n    list(APPEND QT5_LIBRARIES ${${LIBRARY}_LIBRARY})\n  endforeach()\n\n  if(UNIX AND NOT APPLE)\n    pkg_check_modules(X11XCB_XCBGLX REQUIRED x11-xcb xcb-glx)\n    list(APPEND QT5_LIBRARIES ${X11XCB_XCBGLX_LIBRARIES})\n    pkg_check_modules(FONTCONFIG REQUIRED fontconfig)\n    list(APPEND QT5_LIBRARIES ${FONTCONFIG_STATIC_LIBRARIES})\n  endif()\nendif()\n\nif(ANDROID)\n  set(QT5_EXTRA_LIBRARIES_LIST\n    GLESv2\n    log\n    z\n    jnigraphics\n    android\n    EGL\n    Qt5VirtualKeyboard_${CMAKE_ANDROID_ARCH_ABI}\n    c++_shared\n  )\n  foreach(LIBRARY ${QT5_EXTRA_LIBRARIES_LIST})\n    find_library(${LIBRARY}_LIBRARY ${LIBRARY} PATHS \"${ANDROID_TOOLCHAIN_ROOT}/sysroot/usr/lib/${CMAKE_LIBRARY_ARCHITECTURE}/${ANDROID_PLATFORM_LEVEL}\" REQUIRED)\n    list(APPEND QT5_LIBRARIES ${${LIBRARY}_LIBRARY})\n  endforeach()\nendif()\n\nif(MINGW)\n  set(CMAKE_CXX_FLAGS_DEBUG \"${CMAKE_CXX_FLAGS_DEBUG} -Wa,-mbig-obj\")\n  set(EXTRA_LIBRARIES mswsock;ws2_32;iphlpapi;crypt32;bcrypt)\n  if(DEPENDS)\n    set(ICU_LIBRARIES icuio icui18n icuuc icudata icutu iconv)\n  else()\n    set(ICU_LIBRARIES icuio icuin icuuc icudt icutu iconv)\n  endif()\nelseif(APPLE)\n  set(EXTRA_LIBRARIES \"-framework AppKit\")\nelseif(OPENBSD OR ANDROID)\n  set(EXTRA_LIBRARIES \"\")\nelseif(FREEBSD)\n  set(EXTRA_LIBRARIES execinfo)\nelseif(DRAGONFLY)\n  find_library(COMPAT compat)\n  set(EXTRA_LIBRARIES execinfo ${COMPAT})\nelseif(CMAKE_SYSTEM_NAME MATCHES \"(SunOS|Solaris)\")\n  set(EXTRA_LIBRARIES socket nsl resolv)\nelseif(NOT MSVC AND NOT DEPENDS)\n  find_library(RT rt)\n  set(EXTRA_LIBRARIES ${RT})\nendif()\n\nlist(APPEND EXTRA_LIBRARIES ${CMAKE_DL_LIBS})\n\nif(APPLE)\n  cmake_policy(SET CMP0042 NEW)\nendif()\n\nif (APPLE AND NOT IOS)\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fvisibility=default -std=c++11\")\nendif()\n\nif(APPLE)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fvisibility=default -DGTEST_HAS_TR1_TUPLE=0\")\nendif()\n\n# warnings\nadd_c_flag_if_supported(-Wformat C_SECURITY_FLAGS)\nadd_cxx_flag_if_supported(-Wformat CXX_SECURITY_FLAGS)\nadd_c_flag_if_supported(-Wformat-security C_SECURITY_FLAGS)\nadd_cxx_flag_if_supported(-Wformat-security CXX_SECURITY_FLAGS)\n\n# -fstack-protector\nif (NOT OPENBSD AND NOT (WIN32 AND (CMAKE_C_COMPILER_ID STREQUAL \"GNU\" AND CMAKE_C_COMPILER_VERSION VERSION_LESS 9.1)))\n  add_c_flag_if_supported(-fstack-protector C_SECURITY_FLAGS)\n  add_cxx_flag_if_supported(-fstack-protector CXX_SECURITY_FLAGS)\n  add_c_flag_if_supported(-fstack-protector-strong C_SECURITY_FLAGS)\n  add_cxx_flag_if_supported(-fstack-protector-strong CXX_SECURITY_FLAGS)\nendif()\n\n# New in GCC 8.2\nif (NOT OPENBSD AND NOT (WIN32 AND (CMAKE_C_COMPILER_ID STREQUAL \"GNU\" AND CMAKE_C_COMPILER_VERSION VERSION_LESS 9.1)))\n  add_c_flag_if_supported(-fcf-protection=full C_SECURITY_FLAGS)\n  add_cxx_flag_if_supported(-fcf-protection=full CXX_SECURITY_FLAGS)\nendif()\nif (NOT WIN32 AND NOT OPENBSD AND NOT \"${CMAKE_CXX_COMPILER_ID}\" MATCHES \"Clang\")\n  add_c_flag_if_supported(-fstack-clash-protection C_SECURITY_FLAGS)\n  add_cxx_flag_if_supported(-fstack-clash-protection CXX_SECURITY_FLAGS)\nendif()\n\n# Removed in GCC 9.1 (or before ?), but still accepted, so spams the output\nif (NOT (CMAKE_C_COMPILER_ID STREQUAL \"GNU\" AND NOT CMAKE_C_COMPILER_VERSION VERSION_LESS 9.1))\n  add_c_flag_if_supported(-mmitigate-rop C_SECURITY_FLAGS)\n  add_cxx_flag_if_supported(-mmitigate-rop CXX_SECURITY_FLAGS)\nendif()\n\n# linker\nif (APPLE)\n  add_linker_flag_if_supported(-Wl,-bind_at_load LD_SECURITY_FLAGS)\n  add_linker_flag_if_supported(-Wl,-dead_strip LD_SECURITY_FLAGS)\n  add_linker_flag_if_supported(-Wl,-dead_strip_dylibs LD_SECURITY_FLAGS)\nendif()\nif (NOT APPLE AND NOT (WIN32 AND CMAKE_C_COMPILER_ID STREQUAL \"GNU\"))\n  # Windows binaries die on startup with PIE when compiled with GCC\n  add_linker_flag_if_supported(-pie LD_SECURITY_FLAGS)\nendif()\nadd_linker_flag_if_supported(-Wl,-z,relro LD_SECURITY_FLAGS)\nadd_linker_flag_if_supported(-Wl,-z,now LD_SECURITY_FLAGS)\nadd_linker_flag_if_supported(-Wl,-z,noexecstack noexecstack_SUPPORTED)\nif (noexecstack_SUPPORTED)\n  set(LD_SECURITY_FLAGS \"${LD_SECURITY_FLAGS} -Wl,-z,noexecstack\")\nendif()\nadd_linker_flag_if_supported(-Wl,-z,noexecheap noexecheap_SUPPORTED)\nif (noexecheap_SUPPORTED)\n  set(LD_SECURITY_FLAGS \"${LD_SECURITY_FLAGS} -Wl,-z,noexecheap\")\nendif()\n\n# some windows linker bits\nif (WIN32)\n  add_linker_flag_if_supported(-Wl,--dynamicbase LD_SECURITY_FLAGS)\n  add_linker_flag_if_supported(-Wl,--nxcompat LD_SECURITY_FLAGS)\n  add_linker_flag_if_supported(-Wl,--high-entropy-va LD_SECURITY_FLAGS)\nendif()\n\nif(STATIC)\n  add_linker_flag_if_supported(-static-libgcc STATIC_FLAGS)\n  add_linker_flag_if_supported(-static-libstdc++ STATIC_FLAGS)\n  if(MINGW)\n    add_linker_flag_if_supported(-static STATIC_FLAGS)\n  endif()\nendif()\n\n# With GCC 6.1.1 the compiled binary malfunctions due to aliasing. Until that\n# is fixed in the code (Issue #847), force compiler to be conservative.\nadd_c_flag_if_supported(-fno-strict-aliasing C_SECURITY_FLAGS)\nadd_cxx_flag_if_supported(-fno-strict-aliasing CXX_SECURITY_FLAGS)\n\nadd_c_flag_if_supported(-fPIC C_SECURITY_FLAGS)\nadd_cxx_flag_if_supported(-fPIC CXX_SECURITY_FLAGS)\n\nmessage(STATUS \"Using C security hardening flags: ${C_SECURITY_FLAGS}\")\nmessage(STATUS \"Using C++ security hardening flags: ${CXX_SECURITY_FLAGS}\")\nmessage(STATUS \"Using linker security hardening flags: ${LD_SECURITY_FLAGS}\")\n\nset(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -std=c11 ${C_SECURITY_FLAGS}\")\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11 ${CXX_SECURITY_FLAGS}\")\nset(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} ${LD_SECURITY_FLAGS} ${STATIC_FLAGS}\")\n\nadd_subdirectory(translations)\nadd_subdirectory(src)\n"
        },
        {
          "name": "DEPLOY.md",
          "type": "blob",
          "size": 3.146484375,
          "content": "# macOS:\n\nUse macOS 10.12 - 10.13 for better backwards compability.\n\n1. `HOMEBREW_OPTFLAGS=\"-march=core2\" HOMEBREW_OPTIMIZATION_LEVEL=\"O0\" brew install boost zmq libpgm miniupnpc libsodium expat libunwind-headers protobuf@21 libgcrypt hidapi libusb cmake pkg-config && brew link protobuf@21`\n\n2. Get the latest LTS from here: https://www.qt.io/offline-installers and install\n\n3. `git clone --recursive -b v0.X.Y.Z --depth 1 https://github.com/monero-project/monero-gui` \n\n4. Compile `monero-wallet-gui.app`\n\n```bash\nmkdir build && cd build\ncmake -D CMAKE_BUILD_TYPE=Release -D ARCH=default -D CMAKE_PREFIX_PATH=/path/to/Qt5.12.8/5.12.8/clang_64 ..\nmake\nmake deploy\n```\n\n5. Replace the `monerod` binary inside `monero-wallet-gui.app/Contents/MacOS/` with one built using deterministic builds / gitian.\n\n## Codesigning and notarizing\n\n1. Save the following text as `entitlements.plist`\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n        <key>com.apple.security.cs.disable-executable-page-protection</key>\n        <true/>\n</dict>\n</plist>\n```\n\n2. `codesign --deep --force --verify --verbose --options runtime --timestamp --entitlements entitlements.plist --sign 'XXXXXXXXXX' monero-wallet-gui.app`\n\nYou can check if this step worked by using `codesign -dvvv monero-wallet-gui.app`\n\n3. `hdiutil create -fs HFS+ -srcfolder monero-gui-v0.X.Y.Z -volname monero-wallet-gui monero-gui-mac-x64-v0.X.Y.Z.dmg`\n\n4. `xcrun altool -t osx --file monero-gui-mac-x64-v0.X.Y.Z.dmg --primary-bundle-id org.monero-project.monero-wallet-gui.dmg --notarize-app --username email@address.org`\n\n5. `xcrun altool --notarization-info aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeee -u email@address.org`\n\n6. `xcrun stapler staple -v monero-gui-mac-x64-v0.X.Y.Z.dmg`\n\n## Compile Qt for Apple Silicon\n\nQt does not offer pre-built binaries for Apple Silicon, they have to be manually compiled.\n\n```bash\ngit clone https://github.com/qt/qt5.git\ncd qt5\ngit checkout v5.15.9-lts-lgpl\n./init-repository\nmkdir build\ncd build\n../configure -prefix /path/to/qt-build-dir/ -opensource -confirm-license -release -nomake examples -nomake tests -no-rpath -skip qtwebengine -skip qt3d -skip qtandroidextras -skip qtcanvas3d -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdoc -skip qtgamepad -skip qtlocation -skip qtnetworkauth -skip qtpurchasing -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qttools -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebsockets -skip qtwebview -skip qtwinextras -skip qtx11extras -skip gamepad -skip serialbus -skip location -skip webengine\nmake\nmake install\ncd ../qttools/src/linguist/lrelease\n../../../../build/qtbase/bin/qmake\nmake\nmake install\ncd ../../../../qttools/src/macdeployqt/macdeployqt/\n../../../../build/qtbase/bin/qmake\nmake\nmake install\n```\n\nFor compilation with Xcode 15 the following patch has to be applied: https://raw.githubusercontent.com/Homebrew/formula-patches/086e8cf/qt5/qt5-qmake-xcode15.patch\n\nThe `CMAKE_PREFIX_PATH` has to be set to `/path/to/qt-build-dir/` during monero-gui compilation.\n"
        },
        {
          "name": "Dockerfile.android",
          "type": "blob",
          "size": 11.275390625,
          "content": "FROM debian:buster\n\nARG THREADS=1\nARG ANDROID_NDK_REVISION=21e\nARG ANDROID_NDK_HASH=c3ebc83c96a4d7f539bd72c241b2be9dcd29bda9\nARG ANDROID_SDK_REVISION=7302050_latest\nARG ANDROID_SDK_HASH=7a00faadc0864f78edd8f4908a629a46d622375cbe2e5814e82934aebecdb622\nARG QT_VERSION=v5.15.7-lts-lgpl\n\nWORKDIR /opt/android\nENV WORKDIR=/opt/android\n\nENV ANDROID_NATIVE_API_LEVEL=30\nENV ANDROID_API=android-${ANDROID_NATIVE_API_LEVEL}\nENV ANDROID_CLANG=aarch64-linux-android${ANDROID_NATIVE_API_LEVEL}-clang\nENV ANDROID_CLANGPP=aarch64-linux-android${ANDROID_NATIVE_API_LEVEL}-clang++\nENV ANDROID_NDK_ROOT=${WORKDIR}/android-ndk-r${ANDROID_NDK_REVISION}\nENV ANDROID_SDK_ROOT=${WORKDIR}/cmdline-tools\nENV JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64\nENV PATH=${JAVA_HOME}/bin:${PATH}\nENV PREFIX=${WORKDIR}/prefix\nENV TOOLCHAIN_DIR=${ANDROID_NDK_ROOT}/toolchains/llvm/prebuilt/linux-x86_64\n\nRUN apt-get update \\\n    && apt-get install -y ant automake build-essential ca-certificates-java file gettext git libc6 libncurses5 \\\n    libssl-dev libstdc++6 libtinfo5 libtool libz1 openjdk-11-jdk-headless openjdk-11-jre-headless pkg-config python3 \\\n    unzip wget\n\nRUN PACKAGE_NAME=commandlinetools-linux-${ANDROID_SDK_REVISION}.zip \\\n    && wget -q https://dl.google.com/android/repository/${PACKAGE_NAME} \\\n    && echo \"${ANDROID_SDK_HASH}  ${PACKAGE_NAME}\" | sha256sum -c \\\n    && unzip -q ${PACKAGE_NAME} \\\n    && rm -f ${PACKAGE_NAME}\n\nRUN PACKAGE_NAME=android-ndk-r${ANDROID_NDK_REVISION}-linux-x86_64.zip \\\n    && wget -q https://dl.google.com/android/repository/${PACKAGE_NAME} \\\n    && echo \"${ANDROID_NDK_HASH}  ${PACKAGE_NAME}\" | sha1sum -c \\\n    && unzip -q ${PACKAGE_NAME} \\\n    && rm -f ${PACKAGE_NAME}\n\nRUN echo y | ${ANDROID_SDK_ROOT}/bin/sdkmanager --sdk_root=${ANDROID_SDK_ROOT} \"build-tools;28.0.3\" \"platforms;${ANDROID_API}\" \"tools\" > /dev/null\n\nENV HOST_PATH=${PATH}\nENV PATH=${TOOLCHAIN_DIR}/aarch64-linux-android/bin:${TOOLCHAIN_DIR}/bin:${PATH}\n\nARG ZLIB_VERSION=1.3.1\nARG ZLIB_HASH=9a93b2b7dfdac77ceba5a558a580e74667dd6fede4585b91eefb60f03b72df23\nRUN wget -q https://github.com/madler/zlib/releases/download/v${ZLIB_VERSION}/zlib-${ZLIB_VERSION}.tar.gz \\\n    && echo \"${ZLIB_HASH}  zlib-${ZLIB_VERSION}.tar.gz\" | sha256sum -c \\\n    && tar -xzf zlib-${ZLIB_VERSION}.tar.gz \\\n    && rm zlib-${ZLIB_VERSION}.tar.gz \\\n    && cd zlib-${ZLIB_VERSION} \\\n    && CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --prefix=${PREFIX} --static \\\n    && make -j${THREADS} \\\n    && make -j${THREADS} install \\\n    && rm -rf $(pwd)\n\nRUN git clone git://code.qt.io/qt/qt5.git -b ${QT_VERSION} --depth 1 \\\n    && cd qt5 \\\n    && perl init-repository --module-subset=default,-qtwebengine \\\n    && PATH=${HOST_PATH} ./configure -v -developer-build -release \\\n    -xplatform android-clang \\\n    -android-ndk-platform ${ANDROID_API} \\\n    -android-ndk ${ANDROID_NDK_ROOT} \\\n    -android-sdk ${ANDROID_SDK_ROOT} \\\n    -android-ndk-host linux-x86_64 \\\n    -no-dbus \\\n    -opengl es2 \\\n    -no-use-gold-linker \\\n    -no-sql-mysql \\\n    -opensource -confirm-license \\\n    -android-arch arm64-v8a \\\n    -prefix ${PREFIX} \\\n    -nomake tools -nomake tests -nomake examples \\\n    -skip qtwebengine \\\n    -skip qtserialport \\\n    -skip qtconnectivity \\\n    -skip qttranslations \\\n    -skip qtpurchasing \\\n    -skip qtgamepad -skip qtscript -skip qtdoc \\\n    -no-warnings-are-errors \\\n    && PATH=${HOST_PATH} make -j${THREADS} \\\n    && PATH=${HOST_PATH} make -j${THREADS} install \\\n    && cd qttools/src/linguist/lrelease \\\n    && ../../../../qtbase/bin/qmake \\\n    && PATH=${HOST_PATH} make -j${THREADS} install \\\n    && cd ../../../.. \\\n    && rm -rf $(pwd)\n\nARG ICONV_VERSION=1.16\nARG ICONV_HASH=e6a1b1b589654277ee790cce3734f07876ac4ccfaecbee8afa0b649cf529cc04\nRUN wget -q http://ftp.gnu.org/pub/gnu/libiconv/libiconv-${ICONV_VERSION}.tar.gz \\\n    && echo \"${ICONV_HASH}  libiconv-${ICONV_VERSION}.tar.gz\" | sha256sum -c \\\n    && tar -xzf libiconv-${ICONV_VERSION}.tar.gz \\\n    && rm -f libiconv-${ICONV_VERSION}.tar.gz \\\n    && cd libiconv-${ICONV_VERSION} \\\n    && CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --build=x86_64-linux-gnu --host=aarch64 --prefix=${PREFIX} --disable-rpath \\\n    && make -j${THREADS} \\\n    && make -j${THREADS} install\n\nARG BOOST_VERSION=1_74_0\nARG BOOST_VERSION_DOT=1.74.0\nARG BOOST_HASH=83bfc1507731a0906e387fc28b7ef5417d591429e51e788417fe9ff025e116b1\nRUN wget -q https://boostorg.jfrog.io/artifactory/main/release/${BOOST_VERSION_DOT}/source/boost_${BOOST_VERSION}.tar.bz2 \\\n    && echo \"${BOOST_HASH}  boost_${BOOST_VERSION}.tar.bz2\" | sha256sum -c \\\n    && tar -xf boost_${BOOST_VERSION}.tar.bz2 \\\n    && rm -f boost_${BOOST_VERSION}.tar.bz2 \\\n    && cd boost_${BOOST_VERSION} \\\n    && PATH=${HOST_PATH} ./bootstrap.sh --prefix=${PREFIX} \\\n    && PATH=${TOOLCHAIN_DIR}/bin:${HOST_PATH} ./b2 --build-type=minimal link=static runtime-link=static \\\n    --with-chrono --with-date_time --with-filesystem --with-program_options --with-regex --with-serialization \\\n    --with-system --with-thread --with-locale --build-dir=android --stagedir=android toolset=clang threading=multi \\\n    threadapi=pthread target-os=android -sICONV_PATH=${PREFIX} \\\n    cflags='--target=aarch64-linux-android' \\\n    cxxflags='--target=aarch64-linux-android' \\\n    linkflags='--target=aarch64-linux-android --sysroot=${ANDROID_NDK_ROOT}/platforms/${ANDROID_API}/arch-arm64 ${ANDROID_NDK_ROOT}/sources/cxx-stl/llvm-libc++/libs/arm64-v8a/libc++_shared.so -nostdlib++' \\\n    install -j${THREADS} \\\n    && rm -rf $(pwd)\n\nARG OPENSSL_VERSION=1.1.1u\nARG OPENSSL_HASH=e2f8d84b523eecd06c7be7626830370300fbcc15386bf5142d72758f6963ebc6\nRUN wget -q https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz \\\n    && echo \"${OPENSSL_HASH}  openssl-${OPENSSL_VERSION}.tar.gz\" | sha256sum -c \\\n    && tar -xzf openssl-${OPENSSL_VERSION}.tar.gz \\\n    && rm openssl-${OPENSSL_VERSION}.tar.gz \\\n    && cd openssl-${OPENSSL_VERSION} \\\n    && ANDROID_NDK_HOME=${ANDROID_NDK_ROOT} ./Configure CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} \\\n    android-arm64 no-shared --static \\\n    --with-zlib-include=${PREFIX}/include --with-zlib-lib=${PREFIX}/lib \\\n    --prefix=${PREFIX} --openssldir=${PREFIX} \\\n    && sed -i 's/CNF_EX_LIBS=-ldl -pthread//g;s/BIN_CFLAGS=-pie $(CNF_CFLAGS) $(CFLAGS)//g' Makefile \\\n    && ANDROID_NDK_HOME=${ANDROID_NDK_ROOT} make -j${THREADS} \\\n    && make -j${THREADS} install \\\n    && rm -rf $(pwd)\n\nARG EXPAT_VERSION=2.4.1\nARG EXPAT_HASH=2f9b6a580b94577b150a7d5617ad4643a4301a6616ff459307df3e225bcfbf40\nRUN wget https://github.com/libexpat/libexpat/releases/download/R_2_4_1/expat-${EXPAT_VERSION}.tar.bz2 && \\\n    echo \"${EXPAT_HASH}  expat-${EXPAT_VERSION}.tar.bz2\" | sha256sum -c && \\\n    tar -xf expat-${EXPAT_VERSION}.tar.bz2 && \\\n    rm expat-${EXPAT_VERSION}.tar.bz2 && \\\n    cd expat-${EXPAT_VERSION} && \\\n    CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --enable-static --disable-shared --prefix=${PREFIX} --host=aarch64-linux-android && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nARG UNBOUND_VERSION=1.16.2\nARG UNBOUND_HASH=2e32f283820c24c51ca1dd8afecfdb747c7385a137abe865c99db4b257403581\nRUN wget https://www.nlnetlabs.nl/downloads/unbound/unbound-${UNBOUND_VERSION}.tar.gz && \\\n    echo \"${UNBOUND_HASH}  unbound-${UNBOUND_VERSION}.tar.gz\" | sha256sum -c && \\\n    tar -xzf unbound-${UNBOUND_VERSION}.tar.gz && \\\n    rm unbound-${UNBOUND_VERSION}.tar.gz && \\\n    cd unbound-${UNBOUND_VERSION} && \\\n    CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --disable-shared --enable-static --without-pyunbound --with-libexpat=${PREFIX} --with-ssl=${PREFIX} --with-libevent=no --without-pythonmodule --disable-flto --with-pthreads --with-libunbound-only --host=aarch64-linux-android --with-pic --prefix=${PREFIX} && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nARG ZMQ_VERSION=v4.3.4\nARG ZMQ_HASH=4097855ddaaa65ed7b5e8cb86d143842a594eebd\nRUN git clone https://github.com/zeromq/libzmq.git -b ${ZMQ_VERSION} --depth 1 \\\n    && cd libzmq \\\n    && git checkout ${ZMQ_HASH} \\\n    && ./autogen.sh \\\n    && CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --prefix=${PREFIX} --host=aarch64-linux-android \\\n    --enable-static --disable-shared \\\n    && make -j${THREADS} \\\n    && make -j${THREADS} install \\\n    && rm -rf $(pwd)\n\nARG SODIUM_VERSION=1.0.18\nARG SODIUM_HASH=4f5e89fa84ce1d178a6765b8b46f2b6f91216677\nRUN set -ex \\\n    && git clone https://github.com/jedisct1/libsodium.git -b ${SODIUM_VERSION} --depth 1 \\\n    && cd libsodium \\\n    && test `git rev-parse HEAD` = ${SODIUM_HASH} || exit 1 \\\n    && ./autogen.sh \\\n    && CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --prefix=${PREFIX} --host=aarch64-linux-android --enable-static --disable-shared \\\n    && make -j${THREADS} install \\\n    && rm -rf $(pwd)\n\nRUN git clone -b libgpg-error-1.41 --depth 1 git://git.gnupg.org/libgpg-error.git \\\n    && cd libgpg-error \\\n    && git reset --hard 98032624ae89a67ee6fe3b1db5d95032e681d163 \\\n    && ./autogen.sh \\\n    && CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --host=aarch64-linux-android --prefix=${PREFIX} --disable-rpath --disable-shared --enable-static --disable-doc --disable-tests \\\n    && PATH=${TOOLCHAIN_DIR}/bin:${HOST_PATH} make -j${THREADS} \\\n    && make -j${THREADS} install \\\n    && rm -rf $(pwd)\n\nRUN git clone -b libgcrypt-1.10.1 --depth 1 git://git.gnupg.org/libgcrypt.git \\\n    && cd libgcrypt \\\n    && git reset --hard ae0e567820c37f9640440b3cff77d7c185aa6742 \\\n    && ./autogen.sh \\\n    && CC=${ANDROID_CLANG} CXX=${ANDROID_CLANGPP} ./configure --host=aarch64-linux-android --prefix=${PREFIX} --with-gpg-error-prefix=${PREFIX} --disable-shared --enable-static --disable-doc --disable-tests \\\n    && PATH=${TOOLCHAIN_DIR}/bin:${HOST_PATH} make -j${THREADS} \\\n    && make -j${THREADS} install \\\n    && rm -rf $(pwd)\n\nRUN git clone -b v3.24.2 --depth 1 https://github.com/Kitware/CMake \\\n    && cd CMake \\\n    && git reset --hard 31f835410efeea50acd43512eb9e5646a26ea177 \\\n    && PATH=${HOST_PATH} ./bootstrap \\\n    && PATH=${HOST_PATH} make -j${THREADS} \\\n    && PATH=${HOST_PATH} make -j${THREADS} install \\\n    && rm -rf $(pwd)\n\nRUN GRADLE_VERSION=5.6.4 \\\n    && GRADLE_HASH=1f3067073041bc44554d0efe5d402a33bc3d3c93cc39ab684f308586d732a80d \\\n    && wget -q https\\://services.gradle.org/distributions/gradle-${GRADLE_VERSION}-bin.zip \\\n    && echo \"${GRADLE_HASH}  gradle-${GRADLE_VERSION}-bin.zip\" | sha256sum -c \\\n    && GRADLE_LOCAL_PATH=gradle/wrapper/dists/gradle-${GRADLE_VERSION}-bin/bxirm19lnfz6nurbatndyydux \\\n    && mkdir -p ${GRADLE_LOCAL_PATH} \\\n    && mv gradle-${GRADLE_VERSION}-bin.zip ${GRADLE_LOCAL_PATH}\n\nENV GRADLE_USER_HOME=${WORKDIR}/gradle\n\nCMD set -ex \\\n    && cd /monero-gui \\\n    && mkdir -p build/Android/release \\\n    && cd build/Android/release \\\n    && cmake \\\n    -DCMAKE_TOOLCHAIN_FILE=\"${ANDROID_NDK_ROOT}/build/cmake/android.toolchain.cmake\" \\\n    -DCMAKE_PREFIX_PATH=\"${PREFIX}\" \\\n    -DCMAKE_FIND_ROOT_PATH=\"${PREFIX}\" \\\n    -DCMAKE_BUILD_TYPE=Release \\\n    -DARCH=\"armv8-a\" \\\n    -DANDROID_NATIVE_API_LEVEL=${ANDROID_NATIVE_API_LEVEL} \\\n    -DANDROID_ABI=\"arm64-v8a\" \\\n    -DANDROID_TOOLCHAIN=clang \\\n    -DBoost_USE_STATIC_RUNTIME=ON \\\n    -DLRELEASE_PATH=\"${PREFIX}/bin\" \\\n    -DQT_ANDROID_APPLICATION_BINARY=\"monero-wallet-gui\" \\\n    -DANDROID_SDK=\"${ANDROID_SDK_ROOT}\" \\\n    -DWITH_SCANNER=ON \\\n    -DWITH_DESKTOP_ENTRY=OFF \\\n    ../../.. \\\n    && PATH=${HOST_PATH} make generate_translations_header \\\n    && make -j${THREADS} -C src \\\n    && make -j${THREADS} apk\n"
        },
        {
          "name": "Dockerfile.linux",
          "type": "blob",
          "size": 12.8466796875,
          "content": "FROM ubuntu:16.04\n\nARG THREADS=1\nARG QT_VERSION=v5.15.14-lts-lgpl\n\nENV CFLAGS=\"-fPIC\"\nENV CPPFLAGS=\"-fPIC\"\nENV CXXFLAGS=\"-fPIC\"\nENV SOURCE_DATE_EPOCH=1397818193\n\nRUN apt update && \\\n    apt install -y automake autopoint bison gettext git gperf libgl1-mesa-dev libglib2.0-dev \\\n    libpng12-dev libpthread-stubs0-dev libsodium-dev libtool-bin libudev-dev libusb-1.0-0-dev mesa-common-dev \\\n    pkg-config python wget xutils-dev\n\nRUN git clone -b xorgproto-2020.1 --depth 1 https://gitlab.freedesktop.org/xorg/proto/xorgproto && \\\n    cd xorgproto && \\\n    git reset --hard c62e8203402cafafa5ba0357b6d1c019156c9f36 && \\\n    ./autogen.sh && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nRUN git clone -b 1.12 --depth 1 https://gitlab.freedesktop.org/xorg/proto/xcbproto && \\\n    cd xcbproto && \\\n    git reset --hard 6398e42131eedddde0d98759067dde933191f049 && \\\n    ./autogen.sh && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nRUN git clone -b libXau-1.0.9 --depth 1 https://gitlab.freedesktop.org/xorg/lib/libxau && \\\n    cd libxau && \\\n    git reset --hard d9443b2c57b512cfb250b35707378654d86c7dea && \\\n    ./autogen.sh --enable-shared --disable-static && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nRUN git clone -b 1.12 --depth 1 https://gitlab.freedesktop.org/xorg/lib/libxcb && \\\n    cd libxcb && \\\n    git reset --hard d34785a34f28fa6a00f8ce00d87e3132ff0f6467 && \\\n    ./autogen.sh --enable-shared --disable-static && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    make -j$THREADS clean && \\\n    rm /usr/local/lib/libxcb-xinerama.so && \\\n    ./autogen.sh --disable-shared --enable-static && \\\n    make -j$THREADS && \\\n    cp src/.libs/libxcb-xinerama.a /usr/local/lib/ && \\\n    rm -rf $(pwd)\n\nRUN git clone -b 0.4.0 --depth 1 https://gitlab.freedesktop.org/xorg/lib/libxcb-util && \\\n    cd libxcb-util && \\\n    git reset --hard acf790d7752f36e450d476ad79807d4012ec863b && \\\n    git submodule init && \\\n    git clone --depth 1 https://gitlab.freedesktop.org/xorg/util/xcb-util-m4 m4 && \\\n    git -C m4 reset --hard c617eee22ae5c285e79e81ec39ce96862fd3262f && \\\n    ./autogen.sh --enable-shared --disable-static && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nRUN git clone -b 0.4.0 --depth 1 https://gitlab.freedesktop.org/xorg/lib/libxcb-image && \\\n    cd libxcb-image && \\\n    git reset --hard d882052fb2ce439c6483fce944ba8f16f7294639 && \\\n    git submodule init && \\\n    git clone --depth 1 https://gitlab.freedesktop.org/xorg/util/xcb-util-m4 m4 && \\\n    git -C m4 reset --hard c617eee22ae5c285e79e81ec39ce96862fd3262f && \\\n    ./autogen.sh --enable-shared --disable-static && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nRUN git clone -b 0.4.0 --depth 1 https://gitlab.freedesktop.org/xorg/lib/libxcb-keysyms && \\\n    cd libxcb-keysyms && \\\n    git reset --hard 0e51ee5570a6a80bdf98770b975dfe8a57f4eeb1 && \\\n    git submodule init && \\\n    git clone --depth 1 https://gitlab.freedesktop.org/xorg/util/xcb-util-m4 m4 && \\\n    git -C m4 reset --hard c617eee22ae5c285e79e81ec39ce96862fd3262f && \\\n    ./autogen.sh --enable-shared --disable-static && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nRUN git clone -b 0.3.9 --depth 1 https://gitlab.freedesktop.org/xorg/lib/libxcb-render-util && \\\n    cd libxcb-render-util && \\\n    git reset --hard 0317caf63de532fd7a0493ed6afa871a67253747 && \\\n    git submodule init && \\\n    git clone --depth 1 https://gitlab.freedesktop.org/xorg/util/xcb-util-m4 m4 && \\\n    git -C m4 reset --hard c617eee22ae5c285e79e81ec39ce96862fd3262f && \\\n    ./autogen.sh --enable-shared --disable-static && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nRUN git clone -b 0.4.1 --depth 1 https://gitlab.freedesktop.org/xorg/lib/libxcb-wm && \\\n    cd libxcb-wm && \\\n    git reset --hard 24eb17df2e1245885e72c9d4bbb0a0f69f0700f2 && \\\n    git submodule init && \\\n    git clone --depth 1 https://gitlab.freedesktop.org/xorg/util/xcb-util-m4 m4 && \\\n    git -C m4 reset --hard c617eee22ae5c285e79e81ec39ce96862fd3262f && \\\n    ./autogen.sh --enable-shared --disable-static && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nRUN git clone -b xkbcommon-0.5.0 --depth 1 https://github.com/xkbcommon/libxkbcommon && \\\n    cd libxkbcommon && \\\n    git reset --hard c43c3c866eb9d52cd8f61e75cbef1c30d07f3a28 && \\\n    ./autogen.sh --prefix=/usr --enable-shared --disable-static --enable-x11 --disable-docs && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nRUN git clone -b v1.3 --depth 1 https://github.com/madler/zlib && \\\n    cd zlib && \\\n    git reset --hard 09155eaa2f9270dc4ed1fa13e2b4b2613e6e4851 && \\\n    ./configure --static && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nRUN git clone -b VER-2-10-2 --depth 1 https://git.savannah.gnu.org/git/freetype/freetype2.git && \\\n    cd freetype2 && \\\n    git reset --hard 132f19b779828b194b3fede187cee719785db4d8 && \\\n    ./autogen.sh && \\\n    ./configure --disable-shared --enable-static --with-zlib=no && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nRUN wget https://github.com/libexpat/libexpat/releases/download/R_2_4_8/expat-2.4.8.tar.bz2 && \\\n    echo \"a247a7f6bbb21cf2ca81ea4cbb916bfb9717ca523631675f99b3d4a5678dcd16 expat-2.4.8.tar.bz2\" | sha256sum -c && \\\n    tar -xf expat-2.4.8.tar.bz2 && \\\n    rm expat-2.4.8.tar.bz2 && \\\n    cd expat-2.4.8 && \\\n    ./configure --enable-static --disable-shared --prefix=/usr && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nRUN git clone -b 2.13.92 --depth 1 https://gitlab.freedesktop.org/fontconfig/fontconfig && \\\n    cd fontconfig && \\\n    git reset --hard b1df1101a643ae16cdfa1d83b939de2497b1bf27 && \\\n    ./autogen.sh --disable-shared --enable-static --sysconfdir=/etc --localstatedir=/var && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nRUN git clone -b release-64-2 --depth 1 https://github.com/unicode-org/icu && \\\n    cd icu/icu4c/source && \\\n    git reset --hard e2d85306162d3a0691b070b4f0a73e4012433444 && \\\n    ./configure --disable-shared --enable-static --disable-tests --disable-samples && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nRUN wget https://boostorg.jfrog.io/artifactory/main/release/1.80.0/source/boost_1_80_0.tar.gz && \\\n    echo \"4b2136f98bdd1f5857f1c3dea9ac2018effe65286cf251534b6ae20cc45e1847 boost_1_80_0.tar.gz\" | sha256sum -c && \\\n    tar -xzf boost_1_80_0.tar.gz && \\\n    rm boost_1_80_0.tar.gz && \\\n    cd boost_1_80_0 && \\\n    ./bootstrap.sh && \\\n    ./b2 --with-atomic --with-system --with-filesystem --with-thread --with-date_time --with-chrono --with-regex --with-serialization --with-program_options --with-locale variant=release link=static runtime-link=static cflags=\"${CFLAGS}\" cxxflags=\"${CXXFLAGS}\" install -a --prefix=/usr && \\\n    rm -rf $(pwd)\n\nRUN wget https://www.openssl.org/source/openssl-1.1.1u.tar.gz && \\\n    echo \"e2f8d84b523eecd06c7be7626830370300fbcc15386bf5142d72758f6963ebc6 openssl-1.1.1u.tar.gz\" | sha256sum -c && \\\n    tar -xzf openssl-1.1.1u.tar.gz && \\\n    rm openssl-1.1.1u.tar.gz && \\\n    cd openssl-1.1.1u && \\\n    ./config no-shared no-zlib-dynamic --prefix=/usr --openssldir=/usr && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nRUN wget https://www.nlnetlabs.nl/downloads/unbound/unbound-1.16.2.tar.gz && \\\n    echo \"2e32f283820c24c51ca1dd8afecfdb747c7385a137abe865c99db4b257403581 unbound-1.16.2.tar.gz\" | sha256sum -c && \\\n    tar -xzf unbound-1.16.2.tar.gz && \\\n    rm unbound-1.16.2.tar.gz && \\\n    cd unbound-1.16.2 && \\\n    ./configure --disable-shared --enable-static --without-pyunbound --with-libexpat=/usr --with-ssl=/usr --with-libevent=no --without-pythonmodule --disable-flto --with-pthreads --with-libunbound-only --with-pic && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nRUN rm /usr/lib/x86_64-linux-gnu/libX11.a && \\\n    rm /usr/lib/x86_64-linux-gnu/libXext.a && \\\n    rm /usr/lib/x86_64-linux-gnu/libX11-xcb.a && \\\n    git clone git://code.qt.io/qt/qt5.git -b ${QT_VERSION} --depth 1 && \\\n    cd qt5 && \\\n    git clone git://code.qt.io/qt/qtbase.git -b ${QT_VERSION} --depth 1 && \\\n    git clone git://code.qt.io/qt/qtdeclarative.git -b ${QT_VERSION} --depth 1 && \\\n    git clone git://code.qt.io/qt/qtgraphicaleffects.git -b ${QT_VERSION} --depth 1 && \\\n    git clone git://code.qt.io/qt/qtimageformats.git -b ${QT_VERSION} --depth 1 && \\\n    git clone git://code.qt.io/qt/qtmultimedia.git -b ${QT_VERSION} --depth 1 && \\\n    git clone git://code.qt.io/qt/qtquickcontrols.git -b ${QT_VERSION} --depth 1 && \\\n    git clone git://code.qt.io/qt/qtquickcontrols2.git -b ${QT_VERSION} --depth 1 && \\\n    git clone git://code.qt.io/qt/qtsvg.git -b ${QT_VERSION} --depth 1 && \\\n    git clone git://code.qt.io/qt/qttools.git -b ${QT_VERSION} --depth 1 && \\\n    git clone git://code.qt.io/qt/qttranslations.git -b ${QT_VERSION} --depth 1 && \\\n    git clone git://code.qt.io/qt/qtx11extras.git -b ${QT_VERSION} --depth 1 && \\\n    git clone git://code.qt.io/qt/qtxmlpatterns.git -b ${QT_VERSION} --depth 1 && \\\n    sed -ri s/\\(Libs:.*\\)/\\\\1\\ -lexpat/ /usr/local/lib/pkgconfig/fontconfig.pc && \\\n    sed -ri s/\\(Libs:.*\\)/\\\\1\\ -lz/ /usr/local/lib/pkgconfig/freetype2.pc && \\\n    sed -ri s/\\(Libs:.*\\)/\\\\1\\ -lXau/ /usr/local/lib/pkgconfig/xcb.pc && \\\n    sed -i s/\\\\/usr\\\\/X11R6\\\\/lib64/\\\\/usr\\\\/local\\\\/lib/ qtbase/mkspecs/linux-g++-64/qmake.conf && \\\n    ./configure --prefix=/usr -platform linux-g++-64 -opensource -confirm-license -release -static -no-avx \\\n    -opengl desktop -qpa xcb -xcb -xcb-xlib -feature-xlib -system-freetype -fontconfig -glib \\\n    -no-dbus -no-feature-qml-worker-script -no-linuxfb -no-openssl -no-sql-sqlite -no-kms -no-use-gold-linker \\\n    -qt-harfbuzz -qt-libjpeg -qt-libpng -qt-pcre -qt-zlib \\\n    -skip qt3d -skip qtandroidextras -skip qtcanvas3d -skip qtcharts -skip qtconnectivity -skip qtdatavis3d \\\n    -skip qtdoc -skip qtgamepad -skip qtlocation -skip qtmacextras -skip qtnetworkauth -skip qtpurchasing \\\n    -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport -skip qtspeech -skip qttools \\\n    -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel -skip qtwebengine -skip qtwebsockets -skip qtwebview \\\n    -skip qtwinextras -skip qtx11extras -skip gamepad -skip serialbus -skip location -skip webengine \\\n    -nomake examples -nomake tests -nomake tools && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    cd qttools/src/linguist/lrelease && \\\n    ../../../../qtbase/bin/qmake && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    cd ../../../.. && \\\n    rm -rf $(pwd)\n\nRUN git clone -b v1.0.26 --depth 1 https://github.com/libusb/libusb && \\\n    cd libusb && \\\n    git reset --hard 4239bc3a50014b8e6a5a2a59df1fff3b7469543b && \\\n    ./autogen.sh --disable-shared --enable-static && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nRUN git clone -b hidapi-0.13.1 --depth 1 https://github.com/libusb/hidapi && \\\n    cd hidapi && \\\n    git reset --hard 4ebce6b5059b086d05ca7e091ce04a5fd08ac3ac && \\\n    ./bootstrap && \\\n    ./configure --disable-shared --enable-static && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nRUN git clone -b v4.3.4 --depth 1 https://github.com/zeromq/libzmq && \\\n    cd libzmq && \\\n    git reset --hard 4097855ddaaa65ed7b5e8cb86d143842a594eebd && \\\n    ./autogen.sh && \\\n    ./configure --disable-shared --enable-static --disable-libunwind --with-libsodium && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nRUN git clone -b libgpg-error-1.45 --depth 1 git://git.gnupg.org/libgpg-error.git && \\\n    cd libgpg-error && \\\n    git reset --hard dbac537e5e865fb6f3aa8596d213aa8c47a9dea1 && \\\n    ./autogen.sh && \\\n    ./configure --disable-shared --enable-static --disable-doc --disable-tests && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nRUN git clone -b libgcrypt-1.10.1 --depth 1 git://git.gnupg.org/libgcrypt.git && \\\n    cd libgcrypt && \\\n    git reset --hard ae0e567820c37f9640440b3cff77d7c185aa6742 && \\\n    ./autogen.sh && \\\n    ./configure --disable-shared --enable-static --disable-doc && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nRUN git clone -b v21.5 --depth 1 https://github.com/protocolbuffers/protobuf && \\\n    cd protobuf && \\\n    git reset --hard ab840345966d0fa8e7100d771c92a73bfbadd25c && \\\n    ./autogen.sh && \\\n    ./configure --enable-static --disable-shared && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n\nRUN git clone -b v3.24.0 --depth 1 https://github.com/Kitware/CMake && \\\n    cd CMake && \\\n    git reset --hard 4be24f031a4829db75b85062cc67125035d8831e && \\\n    ./bootstrap && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    rm -rf $(pwd)\n"
        },
        {
          "name": "Dockerfile.windows",
          "type": "blob",
          "size": 3.958984375,
          "content": "FROM ubuntu:20.04\n\nARG THREADS=1\nARG QT_VERSION=v5.15.14-lts-lgpl\nENV SOURCE_DATE_EPOCH=1397818193\n\nRUN apt update && \\\n    DEBIAN_FRONTEND=noninteractive apt install -y build-essential cmake g++-mingw-w64 gettext git libtool pkg-config \\\n    python && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN update-alternatives --set x86_64-w64-mingw32-g++ $(which x86_64-w64-mingw32-g++-posix) && \\\n    update-alternatives --set x86_64-w64-mingw32-gcc $(which x86_64-w64-mingw32-gcc-posix)\n\nRUN git clone -b v0.18.2.0 --depth 1 https://github.com/monero-project/monero && \\\n    cd monero && \\\n    git reset --hard 99be9a044f3854f339548e2d99c539c18d7b1b01 && \\\n    cp -a contrib/depends / && \\\n    cd .. && \\\n    rm -rf monero\n\nRUN make -j$THREADS -C /depends HOST=x86_64-w64-mingw32 NO_QT=1\n\nRUN git clone git://code.qt.io/qt/qt5.git -b ${QT_VERSION} --depth 1 && \\\n    cd qt5 && \\\n    git clone git://code.qt.io/qt/qtbase.git -b ${QT_VERSION} --depth 1 && \\\n    git clone git://code.qt.io/qt/qtdeclarative.git -b ${QT_VERSION} --depth 1 && \\\n    git clone git://code.qt.io/qt/qtgraphicaleffects.git -b ${QT_VERSION} --depth 1 && \\\n    git clone git://code.qt.io/qt/qtimageformats.git -b ${QT_VERSION} --depth 1 && \\\n    git clone git://code.qt.io/qt/qtmultimedia.git -b ${QT_VERSION} --depth 1 && \\\n    git clone git://code.qt.io/qt/qtquickcontrols.git -b ${QT_VERSION} --depth 1 && \\\n    git clone git://code.qt.io/qt/qtquickcontrols2.git -b ${QT_VERSION} --depth 1 && \\\n    git clone git://code.qt.io/qt/qtsvg.git -b ${QT_VERSION} --depth 1 && \\\n    git clone git://code.qt.io/qt/qttools.git -b ${QT_VERSION} --depth 1 && \\\n    git clone git://code.qt.io/qt/qttranslations.git -b ${QT_VERSION} --depth 1 && \\\n    git clone git://code.qt.io/qt/qtxmlpatterns.git -b ${QT_VERSION} --depth 1 && \\\n    ./configure --prefix=/depends/x86_64-w64-mingw32 -xplatform win32-g++ \\\n    -device-option CROSS_COMPILE=/usr/bin/x86_64-w64-mingw32- \\\n    -I $(pwd)/qtbase/src/3rdparty/angle/include \\\n    -opensource -confirm-license -release -static -static-runtime -opengl dynamic -no-angle \\\n    -no-avx -no-openssl -no-sql-sqlite \\\n    -no-feature-qml-worker-script -no-openssl -no-sql-sqlite \\\n    -qt-freetype -qt-harfbuzz -qt-libjpeg -qt-libpng -qt-pcre -qt-zlib \\\n    -skip gamepad -skip location -skip qt3d -skip qtactiveqt -skip qtandroidextras \\\n    -skip qtcanvas3d -skip qtcharts -skip qtconnectivity -skip qtdatavis3d -skip qtdoc \\\n    -skip qtgamepad -skip qtlocation -skip qtmacextras -skip qtnetworkauth -skip qtpurchasing \\\n    -skip qtscript -skip qtscxml -skip qtsensors -skip qtserialbus -skip qtserialport \\\n    -skip qtspeech -skip qttools -skip qtvirtualkeyboard -skip qtwayland -skip qtwebchannel \\\n    -skip qtwebengine -skip qtwebsockets -skip qtwebview -skip qtwinextras -skip qtx11extras \\\n    -skip serialbus -skip webengine \\\n    -nomake examples -nomake tests -nomake tools && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    cd qttools/src/linguist/lrelease && \\\n    ../../../../qtbase/bin/qmake && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    cd ../../../.. && \\\n    rm -rf $(pwd)\n\nRUN git clone -b libgpg-error-1.38 --depth 1 git://git.gnupg.org/libgpg-error.git && \\\n    cd libgpg-error && \\\n    git reset --hard 71d278824c5fe61865f7927a2ed1aa3115f9e439 && \\\n    ./autogen.sh && \\\n    ./configure --disable-shared --enable-static --disable-doc --disable-tests \\\n    --host=x86_64-w64-mingw32 --prefix=/depends/x86_64-w64-mingw32 && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    cd .. && \\\n    rm -rf libgpg-error\n\nRUN git clone -b libgcrypt-1.8.5 --depth 1 git://git.gnupg.org/libgcrypt.git && \\\n    cd libgcrypt && \\\n    git reset --hard 56606331bc2a80536db9fc11ad53695126007298 && \\\n    ./autogen.sh && \\\n    ./configure --disable-shared --enable-static --disable-doc \\\n    --host=x86_64-w64-mingw32 --prefix=/depends/x86_64-w64-mingw32 \\\n    --with-gpg-error-prefix=/depends/x86_64-w64-mingw32 && \\\n    make -j$THREADS && \\\n    make -j$THREADS install && \\\n    cd .. && \\\n    rm -rf libgcrypt\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.5458984375,
          "content": "Copyright (c) 2014-2024, The Monero Project\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors\nmay be used to endorse or promote products derived from this software without\nspecific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nParts of the project are originally copyright (c) 2012-2013 The Cryptonote\ndevelopers\n\n"
        },
        {
          "name": "LeftPanel.qml",
          "type": "blob",
          "size": 21.7109375,
          "content": "// Copyright (c) 2014-2024, The Monero Project\n// \n// All rights reserved.\n// \n// Redistribution and use in source and binary forms, with or without modification, are\n// permitted provided that the following conditions are met:\n// \n// 1. Redistributions of source code must retain the above copyright notice, this list of\n//    conditions and the following disclaimer.\n// \n// 2. Redistributions in binary form must reproduce the above copyright notice, this list\n//    of conditions and the following disclaimer in the documentation and/or other\n//    materials provided with the distribution.\n// \n// 3. Neither the name of the copyright holder nor the names of its contributors may be\n//    used to endorse or promote products derived from this software without specific\n//    prior written permission.\n// \n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY\n// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL\n// THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n// STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n// THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport QtQuick 2.9\nimport QtQuick.Layouts 1.1\nimport QtGraphicalEffects 1.0\nimport moneroComponents.Wallet 1.0\nimport moneroComponents.NetworkType 1.0\nimport moneroComponents.Clipboard 1.0\nimport FontAwesome 1.0\n\nimport \"components\" as MoneroComponents\nimport \"components/effects/\" as MoneroEffects\n\nRectangle {\n    id: panel\n\n    property int currentAccountIndex\n    property alias currentAccountLabel: accountLabel.text\n    property string balanceString: \"?.??\"\n    property string balanceUnlockedString: \"?.??\"\n    property string balanceFiatString: \"?.??\"\n    property string minutesToUnlock: \"\"\n    property bool isSyncing: false\n    property alias networkStatus : networkStatus\n    property alias progressBar : progressBar\n    property alias daemonProgressBar : daemonProgressBar\n\n    property int titleBarHeight: 50\n    property string copyValue: \"\"\n    Clipboard { id: clipboard }\n\n    signal historyClicked()\n    signal transferClicked()\n    signal receiveClicked()\n    signal advancedClicked()\n    signal settingsClicked()\n    signal addressBookClicked()\n    signal accountClicked()\n\n    function selectItem(pos) {\n        menuColumn.previousButton.checked = false\n        if(pos === \"History\") menuColumn.previousButton = historyButton\n        else if(pos === \"Transfer\") menuColumn.previousButton = transferButton\n        else if(pos === \"Receive\")  menuColumn.previousButton = receiveButton\n        else if(pos === \"AddressBook\") menuColumn.previousButton = addressBookButton\n        else if(pos === \"Settings\") menuColumn.previousButton = settingsButton\n        else if(pos === \"Advanced\") menuColumn.previousButton = advancedButton\n        else if(pos === \"Account\") menuColumn.previousButton = accountButton\n        menuColumn.previousButton.checked = true\n    }\n\n    width: 300\n    color: \"transparent\"\n    anchors.bottom: parent.bottom\n    anchors.top: parent.top\n\n    MoneroEffects.GradientBackground {\n        anchors.fill: parent\n        fallBackColor: MoneroComponents.Style.middlePanelBackgroundColor\n        initialStartColor: MoneroComponents.Style.leftPanelBackgroundGradientStart\n        initialStopColor: MoneroComponents.Style.leftPanelBackgroundGradientStop\n        blackColorStart: MoneroComponents.Style._b_leftPanelBackgroundGradientStart\n        blackColorStop: MoneroComponents.Style._b_leftPanelBackgroundGradientStop\n        whiteColorStart: MoneroComponents.Style._w_leftPanelBackgroundGradientStart\n        whiteColorStop: MoneroComponents.Style._w_leftPanelBackgroundGradientStop\n        posStart: 0.6\n        start: Qt.point(0, 0)\n        end: Qt.point(height, width)\n    }\n\n    // card with monero logo\n    Column {\n        visible: true\n        z: 2\n        id: column1\n        height: 175\n        anchors.left: parent.left\n        anchors.right: parent.right\n        anchors.top: parent.top\n        anchors.topMargin: (persistentSettings.customDecorations)? 50 : 0\n\n        Item {\n            Item {\n                anchors.left: parent.left\n                anchors.top: parent.top\n                anchors.topMargin: 20\n                anchors.leftMargin: 20\n                height: 490\n                width: 260\n\n                Image {\n                    id: card\n                    visible: !isOpenGL || MoneroComponents.Style.blackTheme\n                    width: 260\n                    height: 135\n                    fillMode: Image.PreserveAspectFit\n                    source: MoneroComponents.Style.blackTheme ? \"qrc:///images/card-background-black\" + (currentAccountIndex % MoneroComponents.Style.accountColors.length) + \".png\" : \"qrc:///images/card-background-white.png\"\n                }\n\n                DropShadow {\n                    visible: isOpenGL && !MoneroComponents.Style.blackTheme\n                    anchors.fill: card\n                    horizontalOffset: 3\n                    verticalOffset: 3\n                    radius: 10.0\n                    samples: 15\n                    color: \"#3B000000\"\n                    source: card\n                    cached: true\n                }\n\n                MoneroComponents.TextPlain {\n                    id: testnetLabel\n                    visible: persistentSettings.nettype != NetworkType.MAINNET\n                    text: (persistentSettings.nettype == NetworkType.TESTNET ? qsTr(\"Testnet\") : qsTr(\"Stagenet\")) + translationManager.emptyString\n                    anchors.top: parent.top\n                    anchors.topMargin: 8\n                    anchors.left: parent.left\n                    anchors.leftMargin: 192\n                    font.bold: true\n                    font.pixelSize: 12\n                    color: \"#f33434\"\n                    themeTransition: false\n                }\n\n                MoneroComponents.TextPlain {\n                    id: viewOnlyLabel\n                    visible: viewOnly\n                    text: qsTr(\"View Only\") + translationManager.emptyString\n                    anchors.top: parent.top\n                    anchors.topMargin: 8\n                    anchors.right: testnetLabel.visible ? testnetLabel.left : parent.right\n                    anchors.rightMargin: 8\n                    font.pixelSize: 12\n                    font.bold: true\n                    color: \"#ff9323\"\n                    themeTransition: false\n                }\n            }\n\n            Item {\n                anchors.left: parent.left\n                anchors.top: parent.top\n                anchors.topMargin: 20\n                anchors.leftMargin: 20\n                height: 490\n                width: 50\n\n                MoneroComponents.Label {\n                    fontSize: 12\n                    id: accountIndex\n                    text: qsTr(\"Account\") + translationManager.emptyString + \" #\" + currentAccountIndex\n                    color: MoneroComponents.Style.blackTheme ? \"white\" : \"black\"\n                    anchors.left: parent.left\n                    anchors.leftMargin: 60\n                    anchors.top: parent.top\n                    anchors.topMargin: 23\n                    themeTransition: false\n\n                    MouseArea{\n                        anchors.fill: parent\n                        hoverEnabled: true\n                        cursorShape: Qt.PointingHandCursor\n                        onClicked: appWindow.showPageRequest(\"Account\")\n                    }\n                }\n\n                MoneroComponents.Label {\n                    fontSize: 16\n                    id: accountLabel\n                    textWidth: 170\n                    color: MoneroComponents.Style.blackTheme ? \"white\" : \"black\"\n                    anchors.left: parent.left\n                    anchors.leftMargin: 60\n                    anchors.top: parent.top\n                    anchors.topMargin: 36\n                    themeTransition: false\n                    elide: Text.ElideRight\n\n                    MouseArea {\n                        hoverEnabled: true\n                        anchors.fill: parent\n                        cursorShape: Qt.PointingHandCursor\n                        onClicked: appWindow.showPageRequest(\"Account\")\n                    }\n                }\n\n                MoneroComponents.Label {\n                    fontSize: 16\n                    visible: isSyncing\n                    text: qsTr(\"Syncing...\") + translationManager.emptyString\n                    color: MoneroComponents.Style.blackTheme ? \"white\" : \"black\"\n                    anchors.left: parent.left\n                    anchors.leftMargin: 20\n                    anchors.bottom: currencyLabel.top\n                    anchors.bottomMargin: 15\n                    themeTransition: false\n                }\n\n                MoneroComponents.TextPlain {\n                    id: currencyLabel\n                    font.pixelSize: 16\n                    text: {\n                        if (persistentSettings.fiatPriceEnabled && persistentSettings.fiatPriceToggle) {\n                            return appWindow.fiatApiCurrencySymbol();\n                        } else {\n                            return \"XMR\"\n                        }\n                    }\n                    color: MoneroComponents.Style.blackTheme ? \"white\" : \"black\"\n                    anchors.left: parent.left\n                    anchors.leftMargin: 20\n                    anchors.top: parent.top\n                    anchors.topMargin: 100\n                    themeTransition: false\n\n                    MouseArea {\n                        hoverEnabled: true\n                        anchors.fill: parent\n                        visible: persistentSettings.fiatPriceEnabled\n                        cursorShape: Qt.PointingHandCursor\n                        onClicked: persistentSettings.fiatPriceToggle = !persistentSettings.fiatPriceToggle\n                    }\n                }\n\n                MoneroComponents.TextPlain {\n                    id: balancePart1\n                    themeTransition: false\n                    anchors.left: parent.left\n                    anchors.leftMargin: 58\n                    anchors.baseline: currencyLabel.baseline\n                    color: MoneroComponents.Style.blackTheme ? \"white\" : \"black\"\n                    Binding on color {\n                        when: balancePart1MouseArea.containsMouse || balancePart2MouseArea.containsMouse\n                        value: MoneroComponents.Style.orange\n                    }\n                    text: {\n                        if (persistentSettings.fiatPriceEnabled && persistentSettings.fiatPriceToggle) {\n                            return balanceFiatString.split('.')[0] + \".\"\n                        } else {\n                            return balanceString.split('.')[0] + \".\"\n                        }\n                    }\n                    font.pixelSize: {\n                        var defaultSize = 29;\n                        var digits = (balancePart1.text.length - 1)\n                        if (digits > 2 && !(persistentSettings.fiatPriceEnabled && persistentSettings.fiatPriceToggle)) {\n                            return defaultSize - 1.1 * digits\n                        } else {\n                            return defaultSize\n                        }\n                    }\n                    MouseArea {\n                        id: balancePart1MouseArea\n                        hoverEnabled: true\n                        anchors.fill: parent\n                        cursorShape: Qt.PointingHandCursor\n                        onClicked: {\n                                console.log(\"Copied to clipboard\");\n                                clipboard.setText(balancePart1.text + balancePart2.text);\n                                appWindow.showStatusMessage(qsTr(\"Copied to clipboard\"),3)\n                        }\n                    }\n                }\n                MoneroComponents.TextPlain {\n                    id: balancePart2\n                    themeTransition: false\n                    anchors.left: balancePart1.right\n                    anchors.leftMargin: 2\n                    anchors.baseline: currencyLabel.baseline\n                    color: balancePart1.color\n                    text: {\n                        if (persistentSettings.fiatPriceEnabled && persistentSettings.fiatPriceToggle) {\n                            return balanceFiatString.split('.')[1]\n                        } else {\n                            return balanceString.split('.')[1]\n                        }\n                    }\n                    font.pixelSize: 16\n                    MouseArea {\n                        id: balancePart2MouseArea\n                        hoverEnabled: true\n                        anchors.fill: parent\n                        cursorShape: Qt.PointingHandCursor\n                        onClicked: balancePart1MouseArea.clicked(mouse)\n                    }\n                }\n\n                Item { //separator\n                    anchors.left: parent.left\n                    anchors.right: parent.right\n                    height: 1\n                }\n            }\n        }\n    }\n\n    Rectangle {\n        id: menuRect\n        z: 2\n        anchors.left: parent.left\n        anchors.right: parent.right\n        anchors.bottom: parent.bottom\n        anchors.top: column1.bottom\n        color: \"transparent\"\n\n        Flickable {\n            id:flicker\n            contentHeight: menuColumn.height\n            anchors.top: parent.top\n            anchors.bottom: progressBar.visible ? progressBar.top : networkStatus.top\n            width: parent.width\n            boundsBehavior: isMac ? Flickable.DragAndOvershootBounds : Flickable.StopAtBounds\n            clip: true\n\n        Column {\n            id: menuColumn\n            anchors.left: parent.left\n            anchors.right: parent.right\n            anchors.top: parent.top\n            clip: true\n            property var previousButton: transferButton\n\n            // top border\n            MoneroComponents.MenuButtonDivider {\n                anchors.left: parent.left\n                anchors.right: parent.right\n                anchors.leftMargin: 20\n            }\n\n            // ------------- Account tab ---------------\n            MoneroComponents.MenuButton {\n                id: accountButton\n                anchors.left: parent.left\n                anchors.right: parent.right\n                text: qsTr(\"Account\") + translationManager.emptyString\n                symbol: (isMac ? \"⌃\" : qsTr(\"Ctrl+\")) + \"T\" + translationManager.emptyString\n\n                onClicked: {\n                    parent.previousButton.checked = false\n                    parent.previousButton = accountButton\n                    panel.accountClicked()\n                }\n            }\n\n            MoneroComponents.MenuButtonDivider {\n                visible: accountButton.present\n                anchors.left: parent.left\n                anchors.right: parent.right\n                anchors.leftMargin: 20\n            }\n\n            // ------------- Transfer tab ---------------\n            MoneroComponents.MenuButton {\n                id: transferButton\n                anchors.left: parent.left\n                anchors.right: parent.right\n                text: qsTr(\"Send\") + translationManager.emptyString\n                symbol: (isMac ? \"⌃\" : qsTr(\"Ctrl+\")) + \"S\" + translationManager.emptyString\n                onClicked: {\n                    parent.previousButton.checked = false\n                    parent.previousButton = transferButton\n                    panel.transferClicked()\n                }\n            }\n\n            MoneroComponents.MenuButtonDivider {\n                visible: transferButton.present\n                anchors.left: parent.left\n                anchors.right: parent.right\n                anchors.leftMargin: 20\n            }\n\n            // ------------- AddressBook tab ---------------\n\n            MoneroComponents.MenuButton {\n                id: addressBookButton\n                anchors.left: parent.left\n                anchors.right: parent.right\n                text: qsTr(\"Address book\") + translationManager.emptyString\n                symbol: (isMac ? \"⌃\" : qsTr(\"Ctrl+\")) + \"B\" + translationManager.emptyString\n                under: transferButton\n                onClicked: {\n                    parent.previousButton.checked = false\n                    parent.previousButton = addressBookButton\n                    panel.addressBookClicked()\n                }\n            }\n\n            MoneroComponents.MenuButtonDivider {\n                visible: addressBookButton.present\n                anchors.left: parent.left\n                anchors.right: parent.right\n                anchors.leftMargin: 20\n            }\n\n            // ------------- Receive tab ---------------\n            MoneroComponents.MenuButton {\n                id: receiveButton\n                anchors.left: parent.left\n                anchors.right: parent.right\n                text: qsTr(\"Receive\") + translationManager.emptyString\n                symbol: (isMac ? \"⌃\" : qsTr(\"Ctrl+\")) + \"R\" + translationManager.emptyString\n                onClicked: {\n                    parent.previousButton.checked = false\n                    parent.previousButton = receiveButton\n                    panel.receiveClicked()\n                }\n            }\n\n            MoneroComponents.MenuButtonDivider {\n                visible: receiveButton.present\n                anchors.left: parent.left\n                anchors.right: parent.right\n                anchors.leftMargin: 20\n            }\n\n            // ------------- History tab ---------------\n\n            MoneroComponents.MenuButton {\n                id: historyButton\n                anchors.left: parent.left\n                anchors.right: parent.right\n                text: qsTr(\"Transactions\") + translationManager.emptyString\n                symbol: (isMac ? \"⌃\" : qsTr(\"Ctrl+\")) + \"H\" + translationManager.emptyString\n                onClicked: {\n                    parent.previousButton.checked = false\n                    parent.previousButton = historyButton\n                    panel.historyClicked()\n                }\n            }\n\n            MoneroComponents.MenuButtonDivider {\n                visible: historyButton.present\n                anchors.left: parent.left\n                anchors.right: parent.right\n                anchors.leftMargin: 20\n            }\n\n            // ------------- Advanced tab ---------------\n            MoneroComponents.MenuButton {\n                id: advancedButton\n                visible: appWindow.walletMode >= 2\n                anchors.left: parent.left\n                anchors.right: parent.right\n                text: qsTr(\"Advanced\") + translationManager.emptyString\n                symbol: (isMac ? \"⌃\" : qsTr(\"Ctrl+\")) + \"D\" + translationManager.emptyString\n                onClicked: {\n                    parent.previousButton.checked = false\n                    parent.previousButton = advancedButton\n                    panel.advancedClicked()\n                }\n            }\n\n            MoneroComponents.MenuButtonDivider {\n                visible: advancedButton.present && appWindow.walletMode >= 2\n                anchors.left: parent.left\n                anchors.right: parent.right\n                anchors.leftMargin: 20\n            }\n\n            // ------------- Settings tab ---------------\n            MoneroComponents.MenuButton {\n                id: settingsButton\n                anchors.left: parent.left\n                anchors.right: parent.right\n                text: qsTr(\"Settings\") + translationManager.emptyString\n                symbol: (isMac ? \"⌃\" : qsTr(\"Ctrl+\")) + \"E\" + translationManager.emptyString\n                onClicked: {\n                    parent.previousButton.checked = false\n                    parent.previousButton = settingsButton\n                    panel.settingsClicked()\n                }\n            }\n\n            MoneroComponents.MenuButtonDivider {\n                visible: settingsButton.present\n                anchors.left: parent.left\n                anchors.right: parent.right\n                anchors.leftMargin: 20\n            }\n\n        } // Column\n\n        } // Flickable\n\n        Rectangle {\n            id: separator\n            anchors.left: parent.left\n            anchors.right: parent.right\n            anchors.leftMargin: 0\n            anchors.rightMargin: 0\n            anchors.bottom: progressBar.visible ? progressBar.top : networkStatus.top\n            height: 10\n            color: \"transparent\"\n        }\n\n        MoneroComponents.ProgressBar {\n            id: progressBar\n            anchors.left: parent.left\n            anchors.right: parent.right\n            anchors.bottom: daemonProgressBar.top\n            height: 48\n            syncType: qsTr(\"Wallet\") + translationManager.emptyString\n            visible: !appWindow.disconnected\n        }\n\n        MoneroComponents.ProgressBar {\n            id: daemonProgressBar\n            anchors.left: parent.left\n            anchors.right: parent.right\n            anchors.bottom: networkStatus.top\n            syncType: qsTr(\"Daemon\") + translationManager.emptyString\n            visible: !appWindow.disconnected\n            height: 62\n        }\n        \n        MoneroComponents.NetworkStatusItem {\n            id: networkStatus\n            anchors.left: parent.left\n            anchors.right: parent.right\n            anchors.leftMargin: 5\n            anchors.rightMargin: 0\n            anchors.bottom: parent.bottom\n            anchors.bottomMargin: 5\n            connected: Wallet.ConnectionStatus_Disconnected\n            height: 48\n        }\n    }\n}\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 4.1796875,
          "content": "ANDROID_STANDALONE_TOOLCHAIN_PATH ?= /usr/local/toolchain\nMANUAL_SUBMODULES ?= OFF\n\ndotgit=$(shell ls -d .git/config)\nifeq ($(dotgit), .git/config)\n  ifeq ($(shell git --version > /dev/null 2>&1 ; echo $$?), 0)\n\tgit = yes\n  else\n    $(warning git command not found)\n  endif\nendif\n\nbuilddir := build\ntopdir := ../..\nifeq ($(USE_SINGLE_BUILDDIR), OFF)\n  os := $(shell echo  `uname | sed -e 's|[:/\\\\ \\(\\)]|_|g'`)\n  builddir := $(builddir)/$(os)\n  topdir := $(topdir)/..\n\n  ifdef git\n    branch := $(shell git branch | grep '\\* ' | cut -f2- -d' '| sed -e 's|[:/\\\\ \\(\\)]|_|g')\n    builddir := $(builddir)/$(branch)\n    topdir := $(topdir)/..\n  endif\n\n  deldirs := $(builddir)\nelse\n  deldirs := $(builddir)/debug $(builddir)/release $(builddir)/fuzz\nendif\n\ndefault:\n\tmkdir -p build && cd build && cmake -D DEV_MODE=$(or ${DEV_MODE},OFF) -DMANUAL_SUBMODULES=${MANUAL_SUBMODULES} -D BUILD_64=ON -D CMAKE_BUILD_TYPE=Release .. && $(MAKE)\ndebug:\n\tmkdir -p build && cd build && cmake -D DEV_MODE=$(or ${DEV_MODE},ON) -DMANUAL_SUBMODULES=${MANUAL_SUBMODULES} -D CMAKE_BUILD_TYPE=Debug .. && $(MAKE) VERBOSE=1\n\ndepends:\n\tmkdir -p build/$(target)/release\n\tcd build/$(target)/release && cmake -D STATIC=ON -D DEV_MODE=$(or ${DEV_MODE},OFF) -DMANUAL_SUBMODULES=${MANUAL_SUBMODULES} -D BUILD_TAG=$(tag) -D CMAKE_BUILD_TYPE=Release -D CMAKE_TOOLCHAIN_FILE=$(root)/$(target)/share/toolchain.cmake ../../.. && $(MAKE)\n\ndevmode:\n\tmkdir -p build && cd build && cmake -D DEV_MODE=$(or ${DEV_MODE},ON) -DMANUAL_SUBMODULES=${MANUAL_SUBMODULES} -D BUILD_64=ON -D CMAKE_BUILD_TYPE=Release .. && $(MAKE)\nclean:\n\tmkdir -p build && cd build && rm -rf *\nscanner:\n\tmkdir -p build && cd build && cmake -D DEV_MODE=$(or ${DEV_MODE},ON) -DMANUAL_SUBMODULES=${MANUAL_SUBMODULES} -D WITH_SCANNER=ON -D BUILD_64=ON -D CMAKE_BUILD_TYPE=Release .. && $(MAKE)\n\nrelease:\n\tmkdir -p $(builddir)/release && cd $(builddir)/release && cmake -D DEV_MODE=$(or ${DEV_MODE},OFF) -DMANUAL_SUBMODULES=${MANUAL_SUBMODULES} -D CMAKE_BUILD_TYPE=Release $(topdir) && $(MAKE)\n\nrelease-linux-armv8:\n\tmkdir -p $(builddir)/release && cd $(builddir)/release && cmake -D DEV_MODE=$(or ${DEV_MODE},OFF) -D ARCH=\"armv8-a\" -D BUILD_64=ON -D CMAKE_BUILD_TYPE=Release -D BUILD_TAG=\"linux-armv8\" $(topdir) && $(MAKE)\n\nrelease-linux-ppc64le:\n\tmkdir -p $(builddir)/release && cd $(builddir)/release && cmake -D DEV_MODE=$(or ${DEV_MODE},OFF) -DMANUAL_SUBMODULES=${MANUAL_SUBMODULES} -D ARCH=\"ppc64le\" -D CMAKE_BUILD_TYPE=Release $(topdir) && $(MAKE)\n\nrelease-static:\n\tmkdir -p $(builddir)/release && cd $(builddir)/release && cmake -D STATIC=ON -D DEV_MODE=$(or ${DEV_MODE},OFF) -DMANUAL_SUBMODULES=${MANUAL_SUBMODULES} -D ARCH=\"x86-64\" -D BUILD_64=ON -D CMAKE_BUILD_TYPE=Release $(topdir) && $(MAKE)\n\ndebug-static-win64:\n\tmkdir -p $(builddir)/debug && cd $(builddir)/debug && cmake -D STATIC=ON -G \"MSYS Makefiles\" -D DEV_MODE=$(or ${DEV_MODE},ON) -DMANUAL_SUBMODULES=${MANUAL_SUBMODULES} -D ARCH=\"x86-64\" -D BUILD_64=ON -D CMAKE_BUILD_TYPE=Debug -D BUILD_TAG=\"win-x64\" -D CMAKE_TOOLCHAIN_FILE=$(topdir)/cmake/64-bit-toolchain.cmake -D MSYS2_FOLDER=$(shell cd ${MINGW_PREFIX}/.. && pwd -W) -D MINGW=ON $(topdir) && $(MAKE)\n\ndebug-static-mac64:\n\tmkdir -p $(builddir)/debug\n\tcd $(builddir)/debug && cmake -D STATIC=ON -D DEV_MODE=$(or ${DEV_MODE},ON) -DMANUAL_SUBMODULES=${MANUAL_SUBMODULES} -D ARCH=\"x86-64\" -D BUILD_64=ON -D CMAKE_BUILD_TYPE=Debug -D BUILD_TAG=\"mac-x64\" $(topdir) && $(MAKE)\n\nrelease-static-win64:\n\tmkdir -p $(builddir)/release && cd $(builddir)/release && cmake -D STATIC=ON -G \"MSYS Makefiles\" -D DEV_MODE=$(or ${DEV_MODE},OFF) -DMANUAL_SUBMODULES=${MANUAL_SUBMODULES} -D ARCH=\"x86-64\" -D BUILD_64=ON -D CMAKE_BUILD_TYPE=Release -D BUILD_TAG=\"win-x64\" -D CMAKE_TOOLCHAIN_FILE=$(topdir)/cmake/64-bit-toolchain.cmake -D MSYS2_FOLDER=$(shell cd ${MINGW_PREFIX}/.. && pwd -W) -D MINGW=ON $(topdir) && $(MAKE)\n\nrelease-win64:\n\tmkdir -p $(builddir)/release && cd $(builddir)/release && cmake -D STATIC=OFF -G \"MSYS Makefiles\" -D DEV_MODE=$(or ${DEV_MODE},OFF) -DMANUAL_SUBMODULES=${MANUAL_SUBMODULES} -D ARCH=\"x86-64\" -D BUILD_64=ON -D CMAKE_BUILD_TYPE=Release -D BUILD_TAG=\"win-x64\" -D CMAKE_TOOLCHAIN_FILE=$(topdir)/cmake/64-bit-toolchain.cmake -D MSYS2_FOLDER=$(shell cd ${MINGW_PREFIX}/.. && pwd -W) -D MINGW=ON $(topdir) && $(MAKE)\n"
        },
        {
          "name": "MiddlePanel.qml",
          "type": "blob",
          "size": 10.0859375,
          "content": "// Copyright (c) 2014-2024, The Monero Project\n// \n// All rights reserved.\n// \n// Redistribution and use in source and binary forms, with or without modification, are\n// permitted provided that the following conditions are met:\n// \n// 1. Redistributions of source code must retain the above copyright notice, this list of\n//    conditions and the following disclaimer.\n// \n// 2. Redistributions in binary form must reproduce the above copyright notice, this list\n//    of conditions and the following disclaimer in the documentation and/or other\n//    materials provided with the distribution.\n// \n// 3. Neither the name of the copyright holder nor the names of its contributors may be\n//    used to endorse or promote products derived from this software without specific\n//    prior written permission.\n// \n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY\n// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL\n// THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n// STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n// THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\nimport QtQml 2.0\nimport QtQuick 2.9\nimport QtQuick.Controls 2.0\nimport QtQuick.Controls 1.4\nimport QtQuick.Layouts 1.1\nimport QtGraphicalEffects 1.0\nimport moneroComponents.Wallet 1.0\n\nimport \"./pages\"\nimport \"./pages/settings\"\nimport \"./pages/merchant\"\nimport \"./components\" as MoneroComponents\nimport \"./components/effects/\" as MoneroEffects\n\nRectangle {\n    id: root\n\n    property Item currentView\n    property Item previousView\n    property int minHeight: (appWindow.height > 800) ? appWindow.height : 800\n    property alias contentHeight: mainFlickable.contentHeight\n    property alias flickable: mainFlickable\n\n    property Transfer transferView: Transfer {\n        onPaymentClicked: root.paymentClicked(recipients, paymentId, mixinCount, priority, description)\n        onSweepUnmixableClicked: root.sweepUnmixableClicked()\n    }\n    property Receive receiveView: Receive { }\n    property Merchant merchantView: Merchant { }\n    property History historyView: History { }\n    property Advanced advancedView: Advanced { }\n    property Settings settingsView: Settings { }\n    property AddressBook addressBookView: AddressBook { }\n    property Keys keysView: Keys { }\n    property Account accountView: Account { }\n\n    signal paymentClicked(var recipients, string paymentId, int mixinCount, int priority, string description)\n    signal sweepUnmixableClicked()\n    signal generatePaymentIdInvoked()\n    signal getProofClicked(string txid, string address, string message, string amount);\n    signal checkProofClicked(string txid, string address, string message, string signature);\n\n    Rectangle {\n        // grey background on merchantView\n        visible: currentView === merchantView\n        color: MoneroComponents.Style.moneroGrey\n        anchors.fill: parent\n    }\n\n    MoneroEffects.GradientBackground {\n        visible: currentView !== merchantView\n        anchors.fill: parent\n        fallBackColor: MoneroComponents.Style.middlePanelBackgroundColor\n        initialStartColor: MoneroComponents.Style.middlePanelBackgroundGradientStart\n        initialStopColor: MoneroComponents.Style.middlePanelBackgroundGradientStop\n        blackColorStart: MoneroComponents.Style._b_middlePanelBackgroundGradientStart\n        blackColorStop: MoneroComponents.Style._b_middlePanelBackgroundGradientStop\n        whiteColorStart: MoneroComponents.Style._w_middlePanelBackgroundGradientStart\n        whiteColorStop: MoneroComponents.Style._w_middlePanelBackgroundGradientStop\n        start: Qt.point(0, 0)\n        end: Qt.point(height, width)\n    }\n\n    onCurrentViewChanged: {\n        if (previousView) {\n            if (typeof previousView.onPageClosed === \"function\") {\n                previousView.onPageClosed();\n            }\n        }\n        previousView = currentView\n        if (currentView) {\n            stackView.replace(currentView)\n            // Component.onCompleted is called before wallet is initilized\n            if (typeof currentView.onPageCompleted === \"function\") {\n                currentView.onPageCompleted();\n            }\n        }\n    }\n\n    function updateStatus(){\n        transferView.updateStatus();\n    }\n\n    // send from AddressBook\n    function sendTo(address, paymentId, description){\n        root.state = \"Transfer\";\n        transferView.sendTo(address, paymentId, description);\n    }\n\n    // open Transactions page with search term in search field\n    function searchInHistory(searchTerm){\n        root.state = \"History\";\n        historyView.searchInHistory(searchTerm);\n    }\n\n        states: [\n            State {\n                name: \"History\"\n                PropertyChanges { target: root; currentView: historyView }\n                PropertyChanges { target: mainFlickable; contentHeight: historyView.contentHeight + 80}\n            }, State {\n                name: \"Transfer\"\n                PropertyChanges { target: root; currentView: transferView }\n                PropertyChanges { target: mainFlickable; contentHeight: transferView.transferHeight1 + transferView.transferHeight2 + 80 }\n            }, State {\n                name: \"Receive\"\n                PropertyChanges { target: root; currentView: receiveView }\n                PropertyChanges { target: mainFlickable; contentHeight: receiveView.receiveHeight + 80 }\n            }, State {\n                name: \"Merchant\"\n                PropertyChanges { target: root; currentView: merchantView }\n                PropertyChanges { target: mainFlickable; contentHeight: merchantView.merchantHeight + 80 }\n            }, State {\n                name: \"AddressBook\"\n                PropertyChanges { target: root; currentView: addressBookView }\n                PropertyChanges { target: mainFlickable; contentHeight: addressBookView.addressbookHeight + 80 }\n            }, State {\n                name: \"Advanced\"\n                PropertyChanges { target: root; currentView: advancedView }\n                PropertyChanges { target: mainFlickable; contentHeight: advancedView.panelHeight }\n            }, State {\n                name: \"Settings\"\n                PropertyChanges { target: root; currentView: settingsView }\n                PropertyChanges { target: mainFlickable; contentHeight: settingsView.settingsHeight }\n            }, State {\n                name: \"Keys\"\n                PropertyChanges { target: root; currentView: keysView }\n                PropertyChanges { target: mainFlickable; contentHeight: keysView.keysHeight + 80}\n            }, State {\n                name: \"Account\"\n                PropertyChanges { target: root; currentView: accountView }\n                PropertyChanges { target: mainFlickable; contentHeight: accountView.accountHeight + 80 }\n            }\n        ]\n\n    ColumnLayout {\n        anchors.fill: parent\n        anchors.margins: {\n            if(currentView === merchantView || currentView === historyView)\n                return 0;\n\n            return 20;\n        }\n\n        anchors.topMargin: appWindow.persistentSettings.customDecorations ? 50 : 0\n        anchors.bottomMargin: 0\n        spacing: 0\n\n        Flickable {\n            id: mainFlickable\n            Layout.fillWidth: true\n            Layout.fillHeight: true\n            clip: true\n            boundsBehavior: isMac ? Flickable.DragAndOvershootBounds : Flickable.StopAtBounds\n\n            ScrollBar.vertical: ScrollBar {\n                parent: root\n                anchors.left: parent.right\n                anchors.leftMargin: -14 // 10 margin + 4 scrollbar width\n                anchors.top: parent.top\n                anchors.topMargin: persistentSettings.customDecorations ? 60 : 10\n                anchors.bottom: parent.bottom\n                anchors.bottomMargin: persistentSettings.customDecorations ? 15 : 10\n                onActiveChanged: if (!active && !isMac) active = true\n            }\n\n            onFlickingChanged: {\n                releaseFocus();\n            }\n\n            // Views container\n            StackView {\n                id: stackView\n                initialItem: transferView\n                anchors.fill:parent\n                clip: true // otherwise animation will affect left panel\n\n                delegate: StackViewDelegate {\n                    pushTransition: StackViewTransition {\n                        PropertyAnimation {\n                            target: enterItem\n                            property: \"x\"\n                            from: 0 - target.width\n                            to: 0\n                            duration: 300\n                            easing.type: Easing.OutCubic\n                        }\n                        PropertyAnimation {\n                            target: exitItem\n                            property: \"x\"\n                            from: 0\n                            to: target.width\n                            duration: 300\n                            easing.type: Easing.OutCubic\n                        }\n                    }\n                }\n            }\n\n        }// flickable\n    }\n\n    // border\n    Rectangle {\n        id: borderLeft\n        visible: middlePanel.state !== \"Merchant\"\n        anchors.top: parent.top\n        anchors.bottom: parent.bottom\n        anchors.left: parent.left\n        width: 1\n        color: MoneroComponents.Style.appWindowBorderColor\n\n        MoneroEffects.ColorTransition {\n            targetObj: parent\n            blackColor: MoneroComponents.Style._b_appWindowBorderColor\n            whiteColor: MoneroComponents.Style._w_appWindowBorderColor\n        }\n    }\n\n    // border shadow\n    Image {\n        source: \"qrc:///images/middlePanelShadow.png\"\n        width: 12\n        anchors.top: parent.top\n        anchors.bottom: parent.bottom\n        anchors.left: borderLeft.right\n    }\n}\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 16.8408203125,
          "content": "# Monero GUI\n\nCopyright (c) 2014-2024, The Monero Project\n\n## Table of Contents\n  * [Development resources](#development-resources)\n  * [Vulnerability response](#vulnerability-response)\n  * [Introduction](#introduction)\n  * [About this project](#about-this-project)\n  * [Supporting the project](#supporting-the-project)\n  * [License](#license)\n  * [Translations](#translations)\n  * [Installing the Monero GUI from a package](#installing-the-monero-gui-from-a-package)\n  * [Compiling the Monero GUI from source](#compiling-the-monero-gui-from-source)\n    + [Building Reproducible Windows static binaries with Docker (any OS)](#building-reproducible-windows-static-binaries-with-docker-any-os)\n    + [Building Reproducible Linux static binaries with Docker (any OS)](#building-reproducible-linux-static-binaries-with-docker-any-os)\n    + [Building Android APK with Docker (any OS) *Experimental*](#building-android-apk-with-docker-any-os-experimental)\n    + [Building on Linux](#building-on-linux)\n    + [Building on OS X](#building-on-os-x)\n    + [Building on Windows](#building-on-windows)\n\n## Development resources\n\n- Web: [getmonero.org](https://getmonero.org)\n- Mail: [dev@getmonero.org](mailto:dev@getmonero.org)\n- Github: [https://github.com/monero-project/monero-gui](https://github.com/monero-project/monero-gui)\n- IRC: [#monero-gui on Libera](irc://irc.libera.chat/#monero-gui)\n- Translation platform (Weblate): [translate.getmonero.org](https://translate.getmonero.org)\n- UI Design: [Monero-GUI on Figma](https://www.figma.com/file/DplJ2DDQfIKiuRvolHX2hN/Monero-GUI)\n\n## Vulnerability response\n\n- Our [Vulnerability Response Process](https://github.com/monero-project/meta/blob/master/VULNERABILITY_RESPONSE_PROCESS.md) encourages responsible disclosure\n- We are also available via [HackerOne](https://hackerone.com/monero)\n\n## Introduction\n\nMonero is a private, secure, untraceable, decentralised digital currency. You are your bank, you control your funds, and nobody can trace your transfers unless you allow them to do so.\n\n**Privacy:** Monero uses a cryptographically sound system to allow you to send and receive funds without your transactions being easily revealed on the blockchain (the ledger of transactions that everyone has). This ensures that your purchases, receipts, and all transfers remain absolutely private by default.\n\n**Security:** Using the power of a distributed peer-to-peer consensus network, every transaction on the network is cryptographically secured. Individual wallets have a 25 word mnemonic seed that is only displayed once, and can be written down to backup the wallet. Wallet files are encrypted with a passphrase to ensure they are useless if stolen.\n\n**Untraceability:** By taking advantage of ring signatures, a special property of a certain type of cryptography, Monero is able to ensure that transactions are not only untraceable, but have an optional measure of ambiguity that ensures that transactions cannot easily be tied back to an individual user or computer.\n\n## About this project\n\nThis is the GUI for the [core Monero implementation](https://github.com/monero-project/monero). It is open source and completely free to use without restrictions, except for those specified in the license agreement below. There are no restrictions on anyone creating an alternative implementation of Monero that uses the protocol and network in a compatible manner.\n\nAs with many development projects, the repository on Github is considered to be the \"staging\" area for the latest changes. Before changes are merged into that branch on the main repository, they are tested by individual developers in their own branches, submitted as a pull request, and then subsequently tested by contributors who focus on testing and code reviews. That having been said, the repository should be carefully considered before using it in a production environment, unless there is a patch in the repository for a particular show-stopping issue you are experiencing. It is generally a better idea to use a tagged release for stability.\n\n## Supporting the project\n\nMonero is a 100% community-sponsored endeavor. If you want to join our efforts, the easiest thing you can do is support the project financially. Both Monero and Bitcoin donations can be made to **donate.getmonero.org** if using a client that supports the [OpenAlias](https://openalias.org) standard.\n\nThe Monero donation address is: `888tNkZrPN6JsEgekjMnABU4TBzc2Dt29EPAvkRxbANsAnjyPbb3iQ1YBRk1UXcdRsiKc9dhwMVgN5S9cQUiyoogDavup3H` (viewkey: `f359631075708155cc3d92a32b75a7d02a5dcf27756707b47a2b31b21c389501`)\n\nThe Bitcoin donation address is: `1KTexdemPdxSBcG55heUuTjDRYqbC5ZL8H`\n\nGUI development funding and/or some supporting services are also graciously provided by [sponsors](https://www.getmonero.org/community/sponsorships/):\n\n[<img width=\"150\" src=\"https://www.getmonero.org/img/sponsors/tarilabs.png\"/>](https://tarilabs.com/)\n[<img width=\"150\" src=\"https://www.getmonero.org/img/sponsors/symas.png\"/>](https://symas.com/)\n[<img width=\"150\" src=\"https://www.getmonero.org/img/sponsors/macstadium.png\"/>](https://www.macstadium.com/)\n\nThere are also several mining pools that kindly donate a portion of their fees, [a list of them can be found on our Bitcointalk post](https://bitcointalk.org/index.php?topic=583449.0).\n\n## License\n\nSee [LICENSE](LICENSE).\n\n## Translations\n\nDo you speak a second language and would like to help translate the Monero GUI? Check out Weblate, our localization platform, at [translate.getmonero.org](https://translate.getmonero.org/). Choose the language and suggest a translation for a string or review an existing one. The Localization Workgroup made [a guide with step-by-step instructions](https://github.com/monero-ecosystem/monero-translations/blob/master/weblate.md) for Weblate.\n\nIf you need help/support or any info you can contact the localization workgroup on the IRC channel #monero-translations (relayed on [Matrix](https://matrix.to/#/!BKMbQLMDzHKzmtrBfg:matrix.org?via=monero.social&via=matrix.org&via=libera.chat)) or by email at translate[at]getmonero[dot]org. For more info about the Localization workgroup: [github.com/monero-ecosystem/monero-translations](https://github.com/monero-ecosystem/monero-translations)\n\nStatus of the translations:  \n\n<a href=\"https://translate.getmonero.org/engage/monero/?utm_source=widget\">\n<img src=\"https://translate.getmonero.org/widgets/monero/-/gui-wallet/horizontal-auto.svg\" alt=\"Translation status\" />\n</a>\n\n## Installing the Monero GUI from a package\n\nPackages are available for\n* Arch Linux: [monero-gui](https://archlinux.org/packages/extra/x86_64/monero-gui/)\n* NixOS: `nix-shell -p monero-gui`\n* Flatpak: [Monero GUI](https://flathub.org/apps/details/org.getmonero.Monero)\n* GuixSD: `guix package -i monero-gui`\n* macOS (homebrew): `brew install --cask monero-wallet`\n\nPackaging for your favorite distribution would be a welcome contribution!\n\n## Compiling the Monero GUI from source\n\n*Note*: Qt 5.9.7 is the minimum version required to build the GUI.\n\n*Note*: Official GUI releases use monero-wallet-gui from this process alongside the supporting binaries (monerod, etc) from the [CLI deterministic builds](https://github.com/monero-project/monero/blob/master/contrib/gitian/README.md).\n\n### Building Reproducible Windows static binaries with Docker (any OS)\n\n1. Install Docker [https://docs.docker.com/engine/install/](https://docs.docker.com/engine/install/)\n2. Clone the repository\n   ```\n   git clone --branch master --recursive https://github.com/monero-project/monero-gui.git\n   ```\n   \\* `master` - replace with the desired version tag (e.g. `v0.18.3.4`) to build the release binaries.\n3. Prepare build environment\n   ```\n   cd monero-gui\n   docker build --tag monero:build-env-windows --build-arg THREADS=4 --file Dockerfile.windows .\n   ```\n   \\* `4` - number of CPU threads to use\n\n4. Build\n   ```\n   docker run --rm -it -v <MONERO_GUI_DIR_FULL_PATH>:/monero-gui -w /monero-gui monero:build-env-windows sh -c 'make depends root=/depends target=x86_64-w64-mingw32 tag=win-x64 -j4'\n   ```\n   \\* `<MONERO_GUI_DIR_FULL_PATH>` - absolute path to `monero-gui` directory  \n   \\* `4` - number of CPU threads to use\n5. Monero GUI Windows static binaries will be placed in  `monero-gui/build/x86_64-w64-mingw32/release/bin` directory\n\n### Building Reproducible Linux static binaries with Docker (any OS)\n\n1. Install Docker [https://docs.docker.com/engine/install/](https://docs.docker.com/engine/install/)\n2. Clone the repository\n   ```\n   git clone --branch master --recursive https://github.com/monero-project/monero-gui.git\n   ```\n   \\* `master` - replace with the desired version tag (e.g. `v0.18.3.4`) to build the release binaries.\n3. Prepare build environment\n   ```\n   cd monero-gui\n   docker build --tag monero:build-env-linux --build-arg THREADS=4 --file Dockerfile.linux .\n   ```\n   \\* `4` - number of CPU threads to use\n\n4. Build\n   ```\n   docker run --rm -it -v <MONERO_GUI_DIR_FULL_PATH>:/monero-gui -w /monero-gui monero:build-env-linux sh -c 'make release-static -j4'\n   ```\n   \\* `<MONERO_GUI_DIR_FULL_PATH>` - absolute path to `monero-gui` directory  \n   \\* `4` - number of CPU threads to use\n5. Monero GUI Linux static binaries will be placed in  `monero-gui/build/release/bin` directory\n6. (*Optional*) Compare `monero-wallet-gui` SHA-256 hash to the one obtained from a trusted source\n   ```\n   docker run --rm -it -v <MONERO_GUI_DIR_FULL_PATH>:/monero-gui -w /monero-gui monero:build-env-linux sh -c 'shasum -a 256 /monero-gui/build/release/bin/monero-wallet-gui'\n   ```\n   \\* `<MONERO_GUI_DIR_FULL_PATH>` - absolute path to `monero-gui` directory  \n\n### Building Android APK with Docker (any OS) *Experimental*\n - Minimum Android 9 Pie (API 28)\n - ARMv8-A 64-bit CPU\n1. Install Docker [https://docs.docker.com/engine/install/](https://docs.docker.com/engine/install/)\n2. Clone the repository\n   ```\n   git clone --recursive https://github.com/monero-project/monero-gui.git\n   ```\n3. Prepare build environment\n   ```\n   cd monero-gui\n   docker build --tag monero:build-env-android --build-arg THREADS=4 --file Dockerfile.android .\n   ```\n   \\* `4` - number of CPU threads to use\n\n4. Build\n   ```\n   docker run --rm -it -v <MONERO_GUI_DIR_FULL_PATH>:/monero-gui -e THREADS=4 monero:build-env-android\n   ```\n   \\* `<MONERO_GUI_DIR_FULL_PATH>` - absolute path to `monero-gui` directory  \n   \\* `4` - number of CPU threads to use\n5. Monero GUI APK will be placed in  `monero-gui/build/Android/release/android-build` directory\n6. Deploy\n   * Using ADB (Android debugger bridge)\n     - [Enable adb debugging on your device](https://developer.android.com/studio/command-line/adb.html#Enabling)\n      * Connect your device with USB and install Monero GUI APK with adb:\n      ```\n      adb install build/Android/release/android-build/monero-gui.apk\n      ```\n      * Troubleshooting:\n      ```\n      adb devices -l\n      adb logcat\n      ```\n      * If using adb inside docker, make sure you did\n      ```\n      docker run -v /dev/bus/usb:/dev/bus/usb --privileged\n      ```\n   * Using a web server\n      ```\n      mkdir /usr/tmp\n      cp build/Android/release/android-build/monero-gui.apk /usr/tmp\n      docker run -d -v /usr/tmp:/usr/share/nginx/html:ro -p 8080:80 nginx\n      ```\n      Now it should be accessible through a web browser at\n      ```\n      http://<your.local.ip>:8080/QtApp-debug.apk\n      ```\n\n### Building on Linux\n\n(Tested on Ubuntu 17.10 x64, Ubuntu 18.04 x64 and Gentoo x64)\n\n1. Install Monero dependencies\n\n  - For Debian distributions (Debian, Ubuntu, Mint, Tails...)\n\n\t`sudo apt install build-essential cmake miniupnpc libunbound-dev graphviz doxygen libunwind8-dev pkg-config libssl-dev libzmq3-dev libsodium-dev libhidapi-dev libnorm-dev libusb-1.0-0-dev libpgm-dev libprotobuf-dev protobuf-compiler libgcrypt20-dev libboost-chrono-dev libboost-date-time-dev libboost-filesystem-dev libboost-locale-dev libboost-program-options-dev libboost-regex-dev libboost-serialization-dev libboost-system-dev libboost-thread-dev`\n\n  - For Gentoo\n\n\t`sudo emerge app-arch/xz-utils app-doc/doxygen dev-cpp/gtest dev-libs/boost dev-libs/expat dev-libs/openssl dev-util/cmake media-gfx/graphviz net-dns/unbound net-libs/miniupnpc net-libs/zeromq sys-libs/libunwind dev-libs/libsodium dev-libs/hidapi dev-libs/libgcrypt`\n\n  - For Fedora\n\n\t`sudo dnf install make automake cmake gcc-c++ boost-devel miniupnpc-devel graphviz doxygen unbound-devel libunwind-devel pkgconfig openssl-devel libcurl-devel hidapi-devel libusb-devel zeromq-devel libgcrypt-devel`\n\n2. Install Qt:\n\n  *Note*: The Qt 5.9.7 or newer requirement makes **some** distributions (mostly based on Debian, like Ubuntu 16.x or Linux Mint 18.x) obsolete due to their repositories containing an older Qt version.\n\n The recommended way is to install 5.9.7 from the [official Qt installer](https://www.qt.io/download-qt-installer) or [compiling it yourself](https://wiki.qt.io/Install_Qt_5_on_Ubuntu). This ensures you have the correct version. Higher versions *can* work but as it differs from our production build target, slight differences may occur.\n\nThe following instructions will fetch Qt from your distribution's repositories instead. Take note of what version it installs. Your mileage may vary.\n\n  - For Debian distributions (Debian, Ubuntu, Mint, Tails...)\n\n    `sudo apt install qtbase5-dev qtdeclarative5-dev qml-module-qtqml-models2 qml-module-qtquick-controls qml-module-qtquick-controls2 qml-module-qtquick-dialogs qml-module-qtquick-xmllistmodel qml-module-qt-labs-settings qml-module-qt-labs-platform qml-module-qt-labs-folderlistmodel qttools5-dev-tools qml-module-qtquick-templates2 libqt5svg5-dev`\n\n  - For Gentoo\n  \n   \n    The *qml* USE flag must be enabled.\n\n    `sudo emerge dev-qt/qtcore:5 dev-qt/qtdeclarative:5 dev-qt/qtquickcontrols:5 dev-qt/qtquickcontrols2:5 dev-qt/qtgraphicaleffects:5`\n\n  - Optional : To build the flag `WITH_SCANNER`\n\n    - For Debian distributions (Debian, Ubuntu, Mint, Tails...)\n\n      `sudo apt install qtmultimedia5-dev qml-module-qtmultimedia`\n\n    - For Gentoo      \n\n      `emerge dev-qt/qtmultimedia:5`\n\n\n3. Clone repository\n\n    ```\n    git clone --recursive https://github.com/monero-project/monero-gui.git\n    cd monero-gui\n    ```\n\n4. Build\n\n    ```\n    make release -j4\n    ```\n\n    \\* `4` - number of CPU threads to use  \n    \\* Add `CMAKE_PREFIX_PATH` environment variable to set a custom Qt install directory, e.g. `CMAKE_PREFIX_PATH=$HOME/Qt/5.9.7/gcc_64 make release -j4`\n\nThe executable can be found in the build/release/bin folder.\n\n### Building on OS X\n\n1. Install Xcode from AppStore\n\n2. Install [homebrew](http://brew.sh/)\n\n3. Install [monero](https://github.com/monero-project/monero) dependencies:\n\n  `brew install cmake pkg-config openssl boost unbound hidapi zmq libpgm libsodium miniupnpc expat libunwind-headers protobuf libgcrypt`\n\n4. Install Qt:\n\n  `brew install qt5`  (or download QT 5.9.7+ from [qt.io](https://www.qt.io/download-open-source/))\n\n5. Grab an up-to-date copy of the monero-gui repository\n\n   ```\n   git clone --recursive https://github.com/monero-project/monero-gui.git\n   cd monero-gui\n   ```\n\n6. Start the build\n\n    ```\n    make release -j4\n    ```\n    \\* `4` - number of CPU threads to use  \n    \\* Add `CMAKE_PREFIX_PATH` environment variable to set a custom Qt install directory, e.g. `CMAKE_PREFIX_PATH=$HOME/Qt/5.9.7/clang_64 make release -j4`\n\nThe executable can be found in the `build/release/bin` folder.\n\nFor building an application bundle see `DEPLOY.md`.\n\n### Building on Windows\n\nThe Monero GUI on Windows is 64 bits only; 32-bit Windows GUI builds are not officially supported anymore.\n\n1. Install [MSYS2](https://www.msys2.org/), follow the instructions on that page on how to update system and packages to the latest versions\n\n2. Open an 64-bit MSYS2 shell: Use the *MSYS2 MinGW 64-bit* shortcut, or use the `msys2_shell.cmd` batch file with a `-mingw64` parameter\n\n3. Install MSYS2 packages for Monero dependencies; the needed 64-bit packages have `x86_64` in their names\n\n    ```\n    pacman -S mingw-w64-x86_64-toolchain make mingw-w64-x86_64-cmake mingw-w64-x86_64-boost mingw-w64-x86_64-openssl mingw-w64-x86_64-zeromq mingw-w64-x86_64-libsodium mingw-w64-x86_64-hidapi mingw-w64-x86_64-protobuf-c mingw-w64-x86_64-libusb mingw-w64-x86_64-libgcrypt mingw-w64-x86_64-unbound mingw-w64-x86_64-pcre\n    ```\n\n    You find more details about those dependencies in the [Monero documentation](https://github.com/monero-project/monero). Note that that there is no more need to compile Boost from source; like everything else, you can install it now with a MSYS2 package.\n\n4. Install Qt5\n\n    ```\n    pacman -S mingw-w64-x86_64-qt5\n    ```\n\n    There is no more need to download some special installer from the Qt website, the standard MSYS2 package for Qt will do in almost all circumstances.\n\n5. Install git\n\n    ```\n    pacman -S git\n    ```\n\n6. Clone repository\n\n    ```\n    git clone --recursive https://github.com/monero-project/monero-gui.git\n    cd monero-gui\n    ```\n\n7. Build\n\n    ```\n    make release-win64 -j4\n    cd build/release\n    make deploy\n    ```\n    \\* `4` - number of CPU threads to use\n\nThe executable can be found in the `.\\bin` directory.\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "components",
          "type": "tree",
          "content": null
        },
        {
          "name": "external",
          "type": "tree",
          "content": null
        },
        {
          "name": "fonts",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "installers",
          "type": "tree",
          "content": null
        },
        {
          "name": "js",
          "type": "tree",
          "content": null
        },
        {
          "name": "lang",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.qml",
          "type": "blob",
          "size": 91.384765625,
          "content": "// Copyright (c) 2014-2024, The Monero Project\n//\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without modification, are\n// permitted provided that the following conditions are met:\n//\n// 1. Redistributions of source code must retain the above copyright notice, this list of\n//    conditions and the following disclaimer.\n//\n// 2. Redistributions in binary form must reproduce the above copyright notice, this list\n//    of conditions and the following disclaimer in the documentation and/or other\n//    materials provided with the distribution.\n//\n// 3. Neither the name of the copyright holder nor the names of its contributors may be\n//    used to endorse or promote products derived from this software without specific\n//    prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY\n// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL\n// THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n// PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n// STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\n// THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport QtQml.Models 2.2\nimport QtQuick 2.9\nimport QtQuick.Window 2.0\nimport QtQuick.Controls 1.1\nimport QtQuick.Controls.Styles 1.1\nimport QtQuick.Dialogs 1.2\nimport QtGraphicalEffects 1.0\n\nimport FontAwesome 1.0\n\nimport moneroComponents.Network 1.0\nimport moneroComponents.Wallet 1.0\nimport moneroComponents.WalletManager 1.0\nimport moneroComponents.PendingTransaction 1.0\nimport moneroComponents.NetworkType 1.0\nimport moneroComponents.Settings 1.0\nimport moneroComponents.P2PoolManager 1.0\n\nimport \"components\"\nimport \"components\" as MoneroComponents\nimport \"components/effects\" as MoneroEffects\nimport \"pages/merchant\" as MoneroMerchant\nimport \"wizard\"\nimport \"js/Utils.js\" as Utils\nimport \"js/Windows.js\" as Windows\nimport \"version.js\" as Version\n\nApplicationWindow {\n    id: appWindow\n    title: \"Monero\" +\n        (persistentSettings.displayWalletNameInTitleBar && walletName\n        ? \" - \" + walletName\n        : \"\")\n    minimumWidth: 750\n    minimumHeight: 450\n\n    property var currentItem\n    property var previousActiveFocusItem\n    property bool hideBalanceForced: false\n    property bool ctrlPressed: false\n    property alias persistentSettings : persistentSettings\n    property string accountsDir: !persistentSettings.portable ? moneroAccountsDir : persistentSettings.portableFolderName + \"/wallets\"\n    property var currentWallet;\n    property bool disconnected: currentWallet ? currentWallet.disconnected : false\n    property var transaction;\n    property var walletPassword\n    property int restoreHeight:0\n    property bool daemonSynced: false\n    property bool walletSynced: false\n    property int maxWindowHeight: (isAndroid || isIOS)? screenAvailableHeight : (screenAvailableHeight < 900)? 720 : 800;\n    property bool daemonRunning: !persistentSettings.useRemoteNode && !disconnected\n    property int daemonStartStopInProgress: 0\n    property alias toolTip: toolTip\n    property string walletName\n    property bool viewOnly: false\n    property bool foundNewBlock: false\n    property bool qrScannerEnabled: (typeof builtWithScanner != \"undefined\") && builtWithScanner\n    property int blocksToSync: 1\n    property int firstBlockSeen\n    property bool isMining: false\n    property int walletMode: persistentSettings.walletMode\n    property var cameraUi\n    property bool androidCloseTapped: false;\n    property int userLastActive;  // epoch\n    // Default daemon addresses\n    readonly property string localDaemonAddress : \"localhost:\" + getDefaultDaemonRpcPort(persistentSettings.nettype)\n    property string currentDaemonAddress;\n    property int disconnectedEpoch: 0\n    property int estimatedBlockchainSize: persistentSettings.pruneBlockchain ? 55 : 150 // GB\n    property alias viewState: rootItem.state\n    property string prevSplashText;\n    property bool splashDisplayedBeforeButtonRequest;\n    property bool themeTransition: false\n\n    // fiat price conversion\n    property real fiatPrice: 0\n    property var fiatPriceAPIs: {\n        return {\n            \"kraken\": {\n                \"xmrusd\": \"https://api.kraken.com/0/public/Ticker?pair=XMRUSD\",\n                \"xmreur\": \"https://api.kraken.com/0/public/Ticker?pair=XMREUR\"\n            },\n            \"coingecko\": {\n                \"xmrusd\": \"https://api.coingecko.com/api/v3/simple/price?ids=monero&vs_currencies=usd\",\n                \"xmreur\": \"https://api.coingecko.com/api/v3/simple/price?ids=monero&vs_currencies=eur\"\n            },\n            \"cryptocompare\": {\n                \"xmrusd\": \"https://min-api.cryptocompare.com/data/price?fsym=XMR&tsyms=USD\",\n                \"xmreur\": \"https://min-api.cryptocompare.com/data/price?fsym=XMR&tsyms=EUR\",\n            }\n        }\n    }\n\n    // true if wallet ever synchronized\n    property bool walletInitialized : false\n\n    // Current selected address / subaddress / (Receive/Account page)\n    property var current_address\n    property var current_address_label: \"Primary\"\n    property int current_subaddress_table_index: 0\n\n    function showPageRequest(page) {\n        middlePanel.state = page\n        leftPanel.selectItem(page)\n    }\n\n    function lock() {\n        passwordDialog.onRejectedCallback = function() { appWindow.showWizard(); }\n        passwordDialog.onAcceptedCallback = function() {\n            if(walletPassword === passwordDialog.password)\n                passwordDialog.close();\n            else \n                passwordDialog.showError(qsTr(\"Wrong password\") + translationManager.emptyString);\n        }\n        passwordDialog.open(usefulName(persistentSettings.wallet_path));\n    }\n\n    function sequencePressed(obj, seq) {\n        if(seq === undefined || !leftPanel.enabled)\n            return\n        if(seq === \"Ctrl\") {\n            ctrlPressed = true\n            return\n        }\n\n        // lock wallet on demand\n        if(seq === \"Ctrl+L\" && !passwordDialog.visible) lock()\n        if(seq === \"Ctrl+S\") middlePanel.state = \"Transfer\"\n        else if(seq === \"Ctrl+R\") middlePanel.state = \"Receive\"\n        else if(seq === \"Ctrl+H\") middlePanel.state = \"History\"\n        else if(seq === \"Ctrl+B\") middlePanel.state = \"AddressBook\"\n        else if(seq === \"Ctrl+E\") middlePanel.state = \"Settings\"\n        else if(seq === \"Ctrl+D\") middlePanel.state = \"Advanced\"\n        else if(seq === \"Ctrl+T\") middlePanel.state = \"Account\"\n        else if(seq === \"Ctrl+Tab\" || seq === \"Alt+Tab\") {\n            /*\n            if(middlePanel.state === \"Transfer\") middlePanel.state = \"Receive\"\n            else if(middlePanel.state === \"Receive\") middlePanel.state = \"TxKey\"\n            else if(middlePanel.state === \"TxKey\") middlePanel.state = \"SharedRingDB\"\n            else if(middlePanel.state === \"SharedRingDB\") middlePanel.state = \"History\"\n            else if(middlePanel.state === \"History\") middlePanel.state = \"AddressBook\"\n            else if(middlePanel.state === \"AddressBook\") middlePanel.state = \"Mining\"\n            else if(middlePanel.state === \"Mining\") middlePanel.state = \"Sign\"\n            else if(middlePanel.state === \"Sign\") middlePanel.state = \"Settings\"\n            */\n            if(middlePanel.state === \"Settings\") middlePanel.state = \"Account\"\n            else if(middlePanel.state === \"Account\") middlePanel.state = \"Transfer\"\n            else if(middlePanel.state === \"Transfer\") middlePanel.state = \"AddressBook\"\n            else if(middlePanel.state === \"AddressBook\") middlePanel.state = \"Receive\"\n            else if(middlePanel.state === \"Receive\") middlePanel.state = \"History\"\n            else if(middlePanel.state === \"History\") middlePanel.state = \"Advanced\"\n            else if(middlePanel.state === \"Advanced\") middlePanel.state = \"Settings\"\n        } else if(seq === \"Ctrl+Shift+Backtab\" || seq === \"Alt+Shift+Backtab\") {\n            /*\n            if(middlePanel.state === \"Settings\") middlePanel.state = \"Sign\"\n            else if(middlePanel.state === \"Sign\") middlePanel.state = \"Mining\"\n            else if(middlePanel.state === \"Mining\") middlePanel.state = \"AddressBook\"\n            else if(middlePanel.state === \"AddressBook\") middlePanel.state = \"History\"\n            else if(middlePanel.state === \"History\") middlePanel.state = \"SharedRingDB\"\n            else if(middlePanel.state === \"SharedRingDB\") middlePanel.state = \"TxKey\"\n            else if(middlePanel.state === \"TxKey\") middlePanel.state = \"Receive\"\n            else if(middlePanel.state === \"Receive\") middlePanel.state = \"Transfer\"\n            */\n            if(middlePanel.state === \"Settings\") middlePanel.state = \"Advanced\"\n            else if(middlePanel.state === \"Advanced\") middlePanel.state = \"History\"\n            else if(middlePanel.state === \"History\") middlePanel.state = \"Receive\"\n            else if(middlePanel.state === \"Receive\") middlePanel.state = \"AddressBook\"\n            else if(middlePanel.state === \"AddressBook\") middlePanel.state = \"Transfer\"\n            else if(middlePanel.state === \"Transfer\") middlePanel.state = \"Account\"\n            else if(middlePanel.state === \"Account\") middlePanel.state = \"Settings\"\n        }\n\n        if (middlePanel.state !== \"Advanced\") updateBalance();\n\n        leftPanel.selectItem(middlePanel.state)\n    }\n\n    function sequenceReleased(obj, seq) {\n        if(seq === \"Ctrl\")\n            ctrlPressed = false\n    }\n\n    function mousePressed(obj, mouseX, mouseY) {}\n    function mouseReleased(obj, mouseX, mouseY) {}\n\n    function loadPage(page) {\n        middlePanel.state = page;\n        leftPanel.selectItem(page);\n    }\n\n    function openWallet(prevState) {\n        passwordDialog.onAcceptedCallback = function() {\n            walletPassword = passwordDialog.password;\n            initialize();\n        }\n        passwordDialog.onRejectedCallback = function() {\n            if (prevState) {\n                appWindow.viewState = prevState;\n            }\n            if (wizard.wizardState == \"wizardOpenWallet1\") {\n                wizard.wizardStateView.wizardOpenWallet1View.pageRoot.forceActiveFocus();\n            }\n        };\n        passwordDialog.open(usefulName(persistentSettings.wallet_path));\n    }\n\n    function initialize() {\n        console.log(\"initializing..\")\n\n        // Use stored log level\n        if (persistentSettings.logLevel == 5)\n          walletManager.setLogCategories(persistentSettings.logCategories)\n        else\n          walletManager.setLogLevel(persistentSettings.logLevel)\n\n        // Reload transfer page with translations enabled\n        middlePanel.transferView.onPageCompleted();\n\n        // If currentWallet exists, we're just switching daemon - close/reopen wallet\n        if (typeof currentWallet !== \"undefined\" && currentWallet !== null) {\n            console.log(\"Daemon change - closing \" + currentWallet)\n            closeWallet();\n        } else if (!walletInitialized) {\n            // set page to transfer if not changing daemon\n            middlePanel.state = \"Transfer\";\n            leftPanel.selectItem(middlePanel.state)\n        }\n\n        // Local daemon settings\n        walletManager.setDaemonAddressAsync(localDaemonAddress);\n\n        // enable timers\n        userInActivityTimer.running = true;\n\n        // wallet already opened with wizard, we just need to initialize it\n        var wallet_path = persistentSettings.wallet_path;\n        if(isIOS)\n            wallet_path = appWindow.accountsDir + wallet_path;\n        // console.log(\"opening wallet at: \", wallet_path, \"with password: \", appWindow.walletPassword);\n        console.log(\"opening wallet at: \", wallet_path, \", network type: \", persistentSettings.nettype == NetworkType.MAINNET ? \"mainnet\" : persistentSettings.nettype == NetworkType.TESTNET ? \"testnet\" : \"stagenet\");\n\n        this.onWalletOpening();\n        walletManager.openWalletAsync(\n            wallet_path,\n            walletPassword,\n            persistentSettings.nettype,\n            persistentSettings.kdfRounds);\n    }\n\n    function closeWallet(callback) {\n\n        // Disconnect all listeners\n        if (typeof currentWallet === \"undefined\" || currentWallet === null) {\n            if (callback) {\n                callback();\n            }\n            return;\n        }\n\n        currentWallet.heightRefreshed.disconnect(onHeightRefreshed);\n        currentWallet.refreshed.disconnect(onWalletRefresh)\n        currentWallet.updated.disconnect(onWalletUpdate)\n        currentWallet.newBlock.disconnect(onWalletNewBlock)\n        currentWallet.moneySpent.disconnect(onWalletMoneySent)\n        currentWallet.moneyReceived.disconnect(onWalletMoneyReceived)\n        currentWallet.unconfirmedMoneyReceived.disconnect(onWalletUnconfirmedMoneyReceived)\n        currentWallet.transactionCreated.disconnect(onTransactionCreated)\n        currentWallet.connectionStatusChanged.disconnect(onWalletConnectionStatusChanged)\n        currentWallet.deviceButtonRequest.disconnect(onDeviceButtonRequest);\n        currentWallet.deviceButtonPressed.disconnect(onDeviceButtonPressed);\n        currentWallet.walletPassphraseNeeded.disconnect(onWalletPassphraseNeededWallet);\n        currentWallet.transactionCommitted.disconnect(onTransactionCommitted);\n        middlePanel.paymentClicked.disconnect(handlePayment);\n        middlePanel.sweepUnmixableClicked.disconnect(handleSweepUnmixable);\n        middlePanel.getProofClicked.disconnect(handleGetProof);\n        middlePanel.checkProofClicked.disconnect(handleCheckProof);\n\n        appWindow.walletName = \"\";\n        currentWallet = undefined;\n\n        appWindow.showProcessingSplash(qsTr(\"Closing wallet...\"));\n        if (callback) {\n            walletManager.closeWalletAsync(function() {\n                hideProcessingSplash();\n                callback();\n            });\n        } else {\n            walletManager.closeWallet();\n            hideProcessingSplash();\n        }\n    }\n\n    function connectWallet(wallet) {\n        currentWallet = wallet\n\n        walletName = usefulName(wallet.path)\n\n        viewOnly = currentWallet.viewOnly;\n\n        // New wallets saves the testnet flag in keys file.\n        if(persistentSettings.nettype != currentWallet.nettype) {\n            console.log(\"Using network type from keys file\")\n            persistentSettings.nettype = currentWallet.nettype;\n        }\n\n        // connect handlers\n        currentWallet.heightRefreshed.connect(onHeightRefreshed);\n        currentWallet.refreshed.connect(onWalletRefresh)\n        currentWallet.updated.connect(onWalletUpdate)\n        currentWallet.newBlock.connect(onWalletNewBlock)\n        currentWallet.moneySpent.connect(onWalletMoneySent)\n        currentWallet.moneyReceived.connect(onWalletMoneyReceived)\n        currentWallet.unconfirmedMoneyReceived.connect(onWalletUnconfirmedMoneyReceived)\n        currentWallet.transactionCreated.connect(onTransactionCreated)\n        currentWallet.connectionStatusChanged.connect(onWalletConnectionStatusChanged)\n        currentWallet.deviceButtonRequest.connect(onDeviceButtonRequest);\n        currentWallet.deviceButtonPressed.connect(onDeviceButtonPressed);\n        currentWallet.walletPassphraseNeeded.connect(onWalletPassphraseNeededWallet);\n        currentWallet.transactionCommitted.connect(onTransactionCommitted);\n        currentWallet.proxyAddress = Qt.binding(persistentSettings.getWalletProxyAddress);\n        middlePanel.paymentClicked.connect(handlePayment);\n        middlePanel.sweepUnmixableClicked.connect(handleSweepUnmixable);\n        middlePanel.getProofClicked.connect(handleGetProof);\n        middlePanel.checkProofClicked.connect(handleCheckProof);\n\n        persistentSettings.restore_height = currentWallet.walletCreationHeight;\n\n        console.log(\"Recovering from seed: \", persistentSettings.is_recovering)\n        console.log(\"restore Height\", persistentSettings.restore_height)\n\n        if (persistentSettings.useRemoteNode) {\n            const remoteNode = remoteNodesModel.currentRemoteNode();\n            currentDaemonAddress = remoteNode.address;\n            currentWallet.setDaemonLogin(remoteNode.username, remoteNode.password);\n        } else {\n            currentDaemonAddress = localDaemonAddress;\n        }\n\n        console.log(\"initializing with daemon address: \", currentDaemonAddress)\n        currentWallet.initAsync(\n            currentDaemonAddress,\n            isTrustedDaemon(),\n            0,\n            persistentSettings.is_recovering,\n            persistentSettings.is_recovering_from_device,\n            persistentSettings.restore_height,\n            persistentSettings.getWalletProxyAddress());\n\n        // save wallet keys in case wallet settings have been changed in the init\n        currentWallet.setPassword(walletPassword);\n    }\n\n    function isTrustedDaemon() {\n        return appWindow.walletMode >= 2 && (!persistentSettings.useRemoteNode || remoteNodesModel.currentRemoteNode().trusted);\n    }\n\n    function usefulName(path) {\n        // arbitrary \"short enough\" limit\n        if (path.length < 32)\n            return path\n        return path.replace(/.*[\\/\\\\]/, '').replace(/\\.keys$/, '')\n    }\n\n    function getUnlockedBalance() {\n        if(!currentWallet){\n            return 0\n        }\n        return currentWallet.unlockedBalance()\n    }\n\n    function updateBalance() {\n        if (!currentWallet)\n            return;\n\n        var balance = \"?.??\";\n        var balanceU = \"?.??\";\n        if(!hideBalanceForced && !persistentSettings.hideBalance){\n            balance = walletManager.displayAmount(currentWallet.balance());\n            balanceU = walletManager.displayAmount(currentWallet.unlockedBalance());\n        }\n\n        if (persistentSettings.fiatPriceEnabled) {\n            appWindow.fiatApiUpdateBalance(balance);\n        }\n\n        leftPanel.minutesToUnlock = (balance !== balanceU) ? currentWallet.history.minutesToUnlock : \"\";\n        leftPanel.balanceString = balance\n        leftPanel.balanceUnlockedString = balanceU\n        if (middlePanel.state === \"Account\") {\n            middlePanel.accountView.balanceAllText = walletManager.displayAmount(appWindow.currentWallet.balanceAll()) + \" XMR\";\n            middlePanel.accountView.unlockedBalanceAllText = walletManager.displayAmount(appWindow.currentWallet.unlockedBalanceAll()) + \" XMR\";\n        }\n    }\n\n    function onUriHandler(uri){\n        if(uri.startsWith(\"monero://\")){\n            var address = uri.substring(\"monero://\".length);\n\n            var params = {}\n            if(address.length === 0) return;\n            var spl = address.split(\"?\");\n\n            if(spl.length > 2) return;\n            if(spl.length >= 1) {\n                // parse additional params\n                address = spl[0];\n\n                if(spl.length === 2){\n                    spl.shift();\n                    var item = spl[0];\n\n                    var _spl = item.split(\"&\");\n                    for (var param in _spl){\n                        var _item = _spl[param];\n                        if(!_item.indexOf(\"=\") > 0) continue;\n\n                        var __spl = _item.split(\"=\");\n                        if(__spl.length !== 2) continue;\n\n                        params[__spl[0]] = __spl[1];\n                    }\n                }\n            }\n\n            // Fill fields\n            middlePanel.transferView.sendTo(address, params[\"tx_payment_id\"], params[\"tx_description\"], params[\"tx_amount\"]);\n\n            // Raise window\n            appWindow.raise();\n            appWindow.show();\n        }\n    }\n\n    function onWalletConnectionStatusChanged(status){\n        console.log(\"Wallet connection status changed \" + status)\n        middlePanel.updateStatus();\n        leftPanel.networkStatus.connected = status\n        if (status == Wallet.ConnectionStatus_Disconnected) {\n            firstBlockSeen = 0;\n        }\n\n        // If wallet isnt connected, advanced wallet mode and no daemon is running - Ask\n        if (appWindow.walletMode >= 2 && !persistentSettings.useRemoteNode && !walletInitialized && disconnected) {\n            daemonManager.runningAsync(persistentSettings.nettype, persistentSettings.blockchainDataDir, function(running) {\n                if (!running) {\n                    daemonManagerDialog.open();\n                }\n            });\n        }\n        // initialize transaction history once wallet is initialized first time;\n        if (!walletInitialized) {\n            currentWallet.history.refresh(currentWallet.currentSubaddressAccount)\n            walletInitialized = true\n\n            // check if daemon was already mining and add mining logo if true\n            if (!persistentSettings.useRemoteNode || persistentSettings.allowRemoteNodeMining) {\n                middlePanel.advancedView.miningView.update();\n            }\n        }\n    }\n\n    function onDeviceButtonRequest(code){\n        if (txConfirmationPopup.visible) {\n            txConfirmationPopup.bottomTextAnimation.running = true\n            if (!txConfirmationPopup.errorText.visible) {\n                txConfirmationPopup.bottomText.text  = qsTr(\"Please confirm transaction on the device...\") + translationManager.emptyString;\n            } else {\n                txConfirmationPopup.bottomText.text  = qsTr(\"Please proceed to the device...\") + translationManager.emptyString;\n            }\n        } else {\n            prevSplashText = splash.messageText;\n            splashDisplayedBeforeButtonRequest = splash.visible;\n            appWindow.showProcessingSplash(qsTr(\"Please proceed to the device...\"));\n        }\n    }\n\n    function onDeviceButtonPressed(){\n        if (txConfirmationPopup.visible) {\n            txConfirmationPopup.bottomTextAnimation.running = false;\n            txConfirmationPopup.bottomText.text  = qsTr(\"Signing transaction in the device...\") + translationManager.emptyString;\n        } else {\n            if (splashDisplayedBeforeButtonRequest){\n                appWindow.showProcessingSplash(prevSplashText);\n            } else {\n                hideProcessingSplash();\n            }\n        }\n    }\n\n    function onWalletOpening(){\n        appWindow.showProcessingSplash(qsTr(\"Opening wallet ...\"));\n    }\n\n    function onWalletOpened(wallet) {\n        hideProcessingSplash();\n        walletName = usefulName(wallet.path)\n        console.log(\">>> wallet opened: \" + wallet)\n        if (wallet.status !== Wallet.Status_Ok) {\n            // try to resolve common wallet cache errors automatically\n            switch (wallet.errorString) {\n                case \"basic_string::_M_replace_aux\":\n                case \"std::bad_alloc\":\n                    walletManager.clearWalletCache(wallet.path);\n                    walletPassword = passwordDialog.password;\n                    appWindow.initialize();\n                    console.error(\"Repairing wallet cache with error: \", wallet.errorString);\n                    appWindow.showStatusMessage(qsTr(\"Repairing incompatible wallet cache. Resyncing wallet.\"),6);\n                    return;\n                default:\n                    // opening with password but password doesn't match\n                    console.error(\"Error opening wallet with password: \", wallet.errorString);\n                    passwordDialog.showError(qsTr(\"Couldn't open wallet: \") + wallet.errorString);\n                    console.log(\"closing wallet async : \" + wallet.address)\n                    closeWallet();\n                    return;\n            }\n        }\n\n        // wallet opened successfully, subscribing for wallet updates\n        connectWallet(wallet)\n\n        // Force switch normal view\n        rootItem.state = \"normal\";\n\n        // Process queued IPC command\n        if(typeof IPC !== \"undefined\" && IPC.queuedCmd().length > 0){\n            var queuedCmd = IPC.queuedCmd();\n            if(/^\\w+:\\/\\/(.*)$/.test(queuedCmd)) appWindow.onUriHandler(queuedCmd); // uri\n        }\n    }\n\n    function onWalletPassphraseNeededManager(on_device){\n        onWalletPassphraseNeeded(walletManager, on_device)\n    }\n\n    function onWalletPassphraseNeededWallet(on_device){\n        onWalletPassphraseNeeded(currentWallet, on_device)\n    }\n\n    function onWalletPassphraseNeeded(handler, on_device){\n        hideProcessingSplash();\n\n        console.log(\">>> wallet passphrase needed: \")\n        devicePassphraseDialog.onAcceptedCallback = function(passphrase) {\n            handler.onPassphraseEntered(passphrase, false, false);\n            appWindow.onWalletOpening();\n        }\n        devicePassphraseDialog.onWalletEntryCallback = function() {\n            handler.onPassphraseEntered(\"\", true, false);\n            appWindow.onWalletOpening();\n        }\n        devicePassphraseDialog.onRejectedCallback = function() {\n            handler.onPassphraseEntered(\"\", false, true);\n            appWindow.onWalletOpening();\n        }\n\n        devicePassphraseDialog.open(on_device)\n    }\n\n    function onWalletUpdate() {\n        if (!currentWallet)\n            return;\n\n        console.log(\">>> wallet updated\")\n        updateBalance();\n        // Update history if new block found since last update\n        if(foundNewBlock) {\n            foundNewBlock = false;\n            console.log(\"New block found - updating history\")\n            currentWallet.history.refresh(currentWallet.currentSubaddressAccount)\n\n            if(middlePanel.state == \"History\")\n                middlePanel.historyView.update();\n        }\n    }\n\n    function connectRemoteNode() {\n        console.log(\"connecting remote node\");\n\n        p2poolManager.exit();\n        p2poolManager.getStatus();\n\n        const callback = function() {\n            persistentSettings.useRemoteNode = true;\n            const remoteNode = remoteNodesModel.currentRemoteNode();\n            currentDaemonAddress = remoteNode.address;\n            currentWallet.setDaemonLogin(remoteNode.username, remoteNode.password);\n            currentWallet.initAsync(\n                currentDaemonAddress,\n                isTrustedDaemon(),\n                0,\n                false,\n                false,\n                0,\n                persistentSettings.getWalletProxyAddress());\n            walletManager.setDaemonAddressAsync(currentDaemonAddress);\n        };\n\n        if (typeof daemonManager != \"undefined\" && daemonRunning) {\n            showDaemonIsRunningDialog(callback);\n        } else {\n            callback();\n        }\n    }\n\n    function disconnectRemoteNode() {\n        if (typeof currentWallet === \"undefined\" || currentWallet === null)\n            return;\n\n        console.log(\"disconnecting remote node\");\n\n        p2poolManager.exit();\n        p2poolManager.getStatus();\n\n        persistentSettings.useRemoteNode = false;\n        currentDaemonAddress = localDaemonAddress\n        currentWallet.setDaemonLogin(\"\", \"\");\n        currentWallet.initAsync(\n            currentDaemonAddress,\n            isTrustedDaemon(),\n            0,\n            false,\n            false,\n            0,\n            persistentSettings.getWalletProxyAddress());\n        walletManager.setDaemonAddressAsync(currentDaemonAddress);\n        firstBlockSeen = 0;\n    }\n\n    function onHeightRefreshed(bcHeight, dCurrentBlock, dTargetBlock) {\n        // Daemon fully synced\n        // TODO: implement onDaemonSynced or similar in wallet API and don't start refresh thread before daemon is synced\n        // targetBlock = currentBlock = 1 before network connection is established.\n        if (firstBlockSeen == 0 && dTargetBlock != 1) {\n            firstBlockSeen = dCurrentBlock;\n        }\n        daemonSynced = dCurrentBlock >= dTargetBlock && dTargetBlock != 1\n        walletSynced = bcHeight >= dTargetBlock\n\n        // Update progress bars\n        if(!daemonSynced) {\n            leftPanel.daemonProgressBar.updateProgress(dCurrentBlock,dTargetBlock, dTargetBlock-firstBlockSeen);\n            leftPanel.progressBar.updateProgress(0,dTargetBlock, dTargetBlock, qsTr(\"Waiting for daemon to sync\"));\n        } else {\n            leftPanel.daemonProgressBar.updateProgress(dCurrentBlock,dTargetBlock, 0, qsTr(\"Daemon is synchronized (%1)\").arg(dCurrentBlock.toFixed(0)));\n            if(walletSynced)\n                leftPanel.progressBar.updateProgress(bcHeight,dTargetBlock,dTargetBlock-bcHeight, qsTr(\"Wallet is synchronized\"))\n        }\n\n        // Update wallet sync progress\n        leftPanel.isSyncing = !disconnected && !daemonSynced;\n        // Update transfer page status\n        middlePanel.updateStatus();\n\n        // Refresh is succesfull if blockchain height > 1\n        if (bcHeight > 1){\n            // recovering from seed is finished after first refresh\n            if(persistentSettings.is_recovering) {\n                persistentSettings.is_recovering = false\n            }\n            if (persistentSettings.is_recovering_from_device) {\n                persistentSettings.is_recovering_from_device = false;\n            }\n        }\n\n        // Update history on every refresh if it's empty\n        if(currentWallet.history.count == 0)\n            currentWallet.history.refresh(currentWallet.currentSubaddressAccount)\n\n        onWalletUpdate();\n    }\n\n    function onWalletRefresh() {\n        console.log(\">>> wallet refreshed\")\n\n        // Daemon connected\n        leftPanel.networkStatus.connected = currentWallet ? currentWallet.connected() : Wallet.ConnectionStatus_Disconnected\n\n        if (currentWallet)\n            currentWallet.refreshHeightAsync();\n    }\n\n    function startDaemon(flags){\n        daemonStartStopInProgress = 1;\n\n        // Pause refresh while starting daemon\n        currentWallet.pauseRefresh();\n\n        const noSync = appWindow.walletMode === 0;\n        const bootstrapNodeAddress = persistentSettings.walletMode < 2 ? \"auto\" : persistentSettings.bootstrapNodeAddress\n        daemonManager.start(flags, persistentSettings.nettype, persistentSettings.blockchainDataDir, bootstrapNodeAddress, noSync, persistentSettings.pruneBlockchain);\n    }\n\n    function stopDaemon(callback, splash){\n        daemonStartStopInProgress = 2;\n        if (splash) {\n            appWindow.showProcessingSplash(qsTr(\"Waiting for daemon to stop...\"));\n        }\n        p2poolManager.exit()\n        daemonManager.stopAsync(persistentSettings.nettype, persistentSettings.blockchainDataDir, function(result) {\n            daemonStartStopInProgress = 0;\n            if (splash) {\n                hideProcessingSplash();\n            }\n            callback(result);\n        });\n    }\n\n    function onDaemonStarted(){\n        console.log(\"daemon started\");\n        daemonStartStopInProgress = 0;\n        if (currentWallet) {\n            currentWallet.connected(true);\n            // resume refresh\n            currentWallet.startRefresh();\n        }\n        // resume simplemode connection timer\n        appWindow.disconnectedEpoch = Utils.epoch();\n    }\n    function onDaemonStopped(){\n        if (currentWallet) {\n            currentWallet.connected(true);\n        }\n    }\n\n    function onDaemonStartFailure(error) {\n        console.log(\"daemon start failed\");\n        daemonStartStopInProgress = 0;\n        // resume refresh\n        currentWallet.startRefresh();\n        informationPopup.title = qsTr(\"Daemon failed to start\") + translationManager.emptyString;\n        informationPopup.text  = error + \".\\n\\n\" + qsTr(\"Please check your wallet and daemon log for errors. You can also try to start %1 manually.\").arg((isWindows)? \"monerod.exe\" : \"monerod\")\n        if (middlePanel.advancedView.miningView.stopMiningEnabled == true) {\n            walletManager.stopMining()\n            p2poolManager.exit()\n            middlePanel.advancedView.miningView.update()\n            informationPopup.text += qsTr(\"\\n\\nExiting p2pool. Please check that port 18083 is available.\") + translationManager.emptyString;\n        }\n        informationPopup.icon  = StandardIcon.Critical\n        informationPopup.onCloseCallback = null\n        informationPopup.open();\n    }\n\n    function onWalletNewBlock(blockHeight, targetHeight) {\n        // Update progress bar\n        var remaining = targetHeight - blockHeight;\n        if(blocksToSync < remaining) {\n            blocksToSync = remaining;\n        }\n\n        leftPanel.progressBar.updateProgress(blockHeight,targetHeight, blocksToSync);\n\n        // If wallet is syncing, daemon is already synced\n        leftPanel.daemonProgressBar.updateProgress(1,1,0,qsTr(\"Daemon is synchronized\"));\n\n        foundNewBlock = true;\n    }\n\n    function onWalletMoneyReceived(txId, amount) {\n        // refresh transaction history here\n        console.log(\"Confirmed money found\")\n        // history refresh is handled by walletUpdated\n        currentWallet.history.refresh(currentWallet.currentSubaddressAccount) // this will refresh model\n        currentWallet.subaddress.refresh(currentWallet.currentSubaddressAccount)\n\n        if(middlePanel.state == \"History\")\n            middlePanel.historyView.update();\n    }\n\n    function onWalletUnconfirmedMoneyReceived(txId, amount) {\n        // refresh history\n        console.log(\"unconfirmed money found\")\n        currentWallet.history.refresh(currentWallet.currentSubaddressAccount);\n\n        if(middlePanel.state == \"History\")\n            middlePanel.historyView.update();\n    }\n\n    function onWalletMoneySent(txId, amount) {\n        // refresh transaction history here\n        console.log(\"monero sent found\")\n        currentWallet.history.refresh(currentWallet.currentSubaddressAccount); // this will refresh model\n\n        if(middlePanel.state == \"History\")\n            middlePanel.historyView.update();\n    }\n\n    function walletsFound() {\n        if (persistentSettings.wallet_path.length > 0) {\n            if(isIOS)\n                return walletManager.walletExists(appWindow.accountsDir + persistentSettings.wallet_path);\n            else\n                return walletManager.walletExists(persistentSettings.wallet_path);\n        }\n        return false;\n    }\n\n    function onTransactionCreated(pendingTransaction, addresses, paymentId, mixinCount) {\n        console.log(\"Transaction created\");\n        txConfirmationPopup.bottomText.text = \"\";\n        transaction = pendingTransaction;\n        // validate address;\n        if (transaction.status !== PendingTransaction.Status_Ok) {\n            console.error(\"Can't create transaction: \", transaction.errorString);\n            if (currentWallet.connected() == Wallet.ConnectionStatus_WrongVersion) {\n                txConfirmationPopup.errorText.text  = qsTr(\"Can't create transaction: Wrong daemon version: \") + transaction.errorString\n            } else {\n                txConfirmationPopup.errorText.text  = qsTr(\"Can't create transaction: \") + transaction.errorString\n            }\n            // deleting transaction object, we don't want memleaks\n            currentWallet.disposeTransaction(transaction);\n\n        } else if (transaction.txCount == 0) {\n            console.error(\"Can't create transaction: \", transaction.errorString);\n            txConfirmationPopup.errorText.text   = qsTr(\"No unmixable outputs to sweep\") + translationManager.emptyString\n            // deleting transaction object, we don't want memleaks\n            currentWallet.disposeTransaction(transaction);\n        } else {\n            console.log(\"Transaction created, amount: \" + walletManager.displayAmount(transaction.amount)\n                    + \", fee: \" + walletManager.displayAmount(transaction.fee));\n\n            // here we update txConfirmationPopup\n            txConfirmationPopup.transactionAmount = Utils.removeTrailingZeros(walletManager.displayAmount(transaction.amount));\n            txConfirmationPopup.transactionFee = Utils.removeTrailingZeros(walletManager.displayAmount(transaction.fee));\n            txConfirmationPopup.confirmButton.text = viewOnly ? qsTr(\"Save as file\") : qsTr(\"Confirm\") + translationManager.emptyString;\n            txConfirmationPopup.confirmButton.rightIcon = viewOnly ? \"\" : \"qrc:///images/rightArrow.png\"\n        }\n    }\n\n    function getDisplayAmountTotal(recipients) {\n        const amounts = recipients.map(function (recipient) {\n            return recipient.amount;\n        });\n        const total = walletManager.amountsSumFromStrings(amounts);\n        return Utils.removeTrailingZeros(walletManager.displayAmount(total));\n    }\n\n    // called on \"transfer\"\n    function handlePayment(recipients, paymentId, mixinCount, priority, description, createFile) {\n        console.log(\"Creating transaction: \")\n        console.log(\"\\trecipients: \", recipients,\n                    \", payment_id: \", paymentId,\n                    \", mixins: \", mixinCount,\n                    \", priority: \", priority,\n                    \", description: \", description);\n\n        const recipientAll = recipients.find(function (recipient) {\n            return recipient.amount == \"(all)\";\n        });\n        if (recipientAll && recipients.length > 1) {\n            throw \"Sending all requires one destination address\";\n        }\n\n        txConfirmationPopup.bottomTextAnimation.running = false;\n        txConfirmationPopup.bottomText.text  = qsTr(\"Creating transaction...\") + translationManager.emptyString;\n        txConfirmationPopup.recipients = recipients;\n        txConfirmationPopup.transactionAmount = recipientAll ? \"(all)\" : getDisplayAmountTotal(recipients);\n        txConfirmationPopup.transactionPriority = priority;\n        txConfirmationPopup.transactionDescription = description;\n        txConfirmationPopup.open();\n\n        if (recipientAll) {\n            currentWallet.createTransactionAllAsync(recipientAll.address, paymentId, mixinCount, priority);\n        } else {\n            const addresses = recipients.map(function (recipient) {\n                return recipient.address;\n            });\n            const amountsxmr = recipients.map(function (recipient) {\n                return recipient.amount;\n            });\n            currentWallet.createTransactionAsync(addresses, paymentId, amountsxmr, mixinCount, priority);\n        }\n    }\n\n    //Choose where to save transaction\n    FileDialog {\n        id: saveTxDialog\n        title: \"Please choose a location\"\n        folder: \"file://\" + appWindow.accountsDir\n        selectExisting: false;\n\n        onAccepted: {\n            handleTransactionConfirmed()\n        }\n        onRejected: {\n            // do nothing\n\n        }\n\n    }\n\n\n    function handleSweepUnmixable() {\n        console.log(\"Creating transaction: \")\n\n        txConfirmationPopup.sweepUnmixable = true;\n        transaction = currentWallet.createSweepUnmixableTransaction();\n        if (transaction.status !== PendingTransaction.Status_Ok) {\n            console.error(\"Can't create transaction: \", transaction.errorString);\n            txConfirmationPopup.errorText.text  = qsTr(\"Can't create transaction: \") + transaction.errorString + translationManager.emptyString\n            // deleting transaction object, we don't want memleaks\n            currentWallet.disposeTransaction(transaction);\n\n        } else if (transaction.txCount == 0) {\n            console.error(\"No unmixable outputs to sweep\");\n            txConfirmationPopup.errorText.text  = qsTr(\"No unmixable outputs to sweep\") + translationManager.emptyString\n            // deleting transaction object, we don't want memleaks\n            currentWallet.disposeTransaction(transaction);\n        } else {\n            console.log(\"Transaction created, amount: \" + walletManager.displayAmount(transaction.amount)\n                    + \", fee: \" + walletManager.displayAmount(transaction.fee));\n            txConfirmationPopup.transactionAmount = Utils.removeTrailingZeros(walletManager.displayAmount(transaction.amount));\n            txConfirmationPopup.transactionFee = Utils.removeTrailingZeros(walletManager.displayAmount(transaction.fee));\n            // committing transaction\n        }\n        txConfirmationPopup.open();\n    }\n\n    // called after user confirms transaction\n    function handleTransactionConfirmed(fileName) {\n        // View only wallet - we save the tx\n        if(viewOnly){\n            // No file specified - abort\n            if(!saveTxDialog.fileUrl) {\n                currentWallet.disposeTransaction(transaction)\n                return;\n            }\n\n            var path = walletManager.urlToLocalPath(saveTxDialog.fileUrl)\n\n            // Store to file\n            transaction.setFilename(path);\n        }\n        appWindow.showProcessingSplash(qsTr(\"Sending transaction ...\"));\n        currentWallet.commitTransactionAsync(transaction);\n    }\n\n    function onTransactionCommitted(success, transaction, txid) {\n        hideProcessingSplash();\n        if (!success) {\n            console.log(\"Error committing transaction: \" + transaction.errorString);\n            informationPopup.title = qsTr(\"Error\") + translationManager.emptyString\n            informationPopup.text  = qsTr(\"Couldn't send the money: \") + transaction.errorString\n            informationPopup.icon  = StandardIcon.Critical\n            informationPopup.onCloseCallback = null;\n            informationPopup.open();\n        } else {\n            if (txConfirmationPopup.transactionDescription.length > 0) {\n                for (var i = 0; i < txid.length; ++i)\n                    currentWallet.setUserNote(txid[i], txConfirmationPopup.transactionDescription);\n            }\n\n            // Clear tx fields\n            middlePanel.transferView.clearFields()\n            txConfirmationPopup.clearFields()\n            successfulTxPopup.open(txid)\n        }\n        currentWallet.refresh()\n        currentWallet.disposeTransaction(transaction)\n        currentWallet.storeAsync(function(success) {\n            if (!success) {\n                appWindow.showStatusMessage(qsTr(\"Failed to store the wallet\"), 3);\n            }\n        });\n    }\n\n    function doSearchInHistory(searchTerm) {\n        middlePanel.searchInHistory(searchTerm);\n        leftPanel.selectItem(middlePanel.state)\n    }\n\n    // called on \"getProof\"\n    function handleGetProof(txid, address, message, amount) {\n        if (amount !== null && amount.length > 0) {\n            var result = currentWallet.getReserveProof(false, currentWallet.currentSubaddressAccount, walletManager.amountFromString(amount), message)\n            txProofComputed(null, result)\n        } else {\n            console.log(\"Getting payment proof: \")\n            console.log(\"\\ttxid: \", txid,\n                        \", address: \", address,\n                        \", message: \", message);\n            function spendProofFallback(txid, result){\n                if (!result || result.indexOf(\"error|\") === 0) {\n                    currentWallet.getSpendProofAsync(txid, message, txProofComputed);\n                } else {\n                    txProofComputed(txid, result);\n                }\n            }\n            if (address.length > 0)\n                currentWallet.getTxProofAsync(txid, address, message, spendProofFallback);\n            else\n                spendProofFallback(txid, null);\n        }\n        informationPopup.open()\n    }\n\n    function txProofComputed(txid, result){\n        if (result.indexOf(\"error|\") === 0) {\n            var errorString = result.split(\"|\")[1];\n            informationPopup.text = qsTr(\"Couldn't generate a proof because of the following reason: \\n\") + errorString + translationManager.emptyString;\n            informationPopup.icon = StandardIcon.Critical;\n        } else {\n            informationPopup.text  = result;\n            informationPopup.icon = StandardIcon.Critical;\n        }\n    }\n\n    // called on \"checkProof\"\n    function handleCheckProof(txid, address, message, signature) {\n        console.log(\"Checking payment proof: \")\n        console.log(\"\\ttxid: \", txid,\n                    \", address: \", address,\n                    \", message: \", message,\n                    \", signature: \", signature);\n\n        var result;\n        var isReserveProof = signature.indexOf(\"ReserveProofV\") === 0;\n        if (address.length > 0 && !isReserveProof) {\n            result = currentWallet.checkTxProof(txid, address, message, signature);\n        } \n        else if (isReserveProof) {\n            result = currentWallet.checkReserveProof(address, message, signature);\n        } \n        else {\n            result = currentWallet.checkSpendProof(txid, message, signature);\n        }\n        var results = result.split(\"|\");\n        if (address.length > 0 && results.length == 5 && results[0] === \"true\" && !isReserveProof) {\n            var good = results[1] === \"true\";\n            var received = results[2];\n            var in_pool = results[3] === \"true\";\n            var confirmations = results[4];\n\n            informationPopup.title  = qsTr(\"Payment proof check\") + translationManager.emptyString;\n            informationPopup.icon = StandardIcon.Information\n            if (!good) {\n                informationPopup.text = qsTr(\"Bad signature\");\n                informationPopup.icon = StandardIcon.Critical;\n            } else if (received > 0) {\n                if (in_pool) {\n                    informationPopup.text = qsTr(\"This address received %1 monero, but the transaction is not yet mined\").arg(walletManager.displayAmount(received));\n                }\n                else {\n                    informationPopup.text = qsTr(\"This address received %1 monero, with %2 confirmation(s).\").arg(walletManager.displayAmount(received)).arg(confirmations);\n                }\n            }\n            else {\n                informationPopup.text = qsTr(\"This address received nothing\");\n            }\n        }\n        else if (results.length == 2 && results[0] === \"true\") {\n            var good = results[1] === \"true\";\n            informationPopup.title = qsTr(\"Payment proof check\") + translationManager.emptyString;\n            informationPopup.icon = good ? StandardIcon.Information : StandardIcon.Critical;\n            informationPopup.text = good ? qsTr(\"Good signature\") : qsTr(\"Bad signature\");\n        } \n        else if (isReserveProof && results[0] === \"true\") {\n            var good = results[1] === \"true\";\n            informationPopup.title = qsTr(\"Reserve proof check\") + translationManager.emptyString;\n            informationPopup.icon = good ? StandardIcon.Information : StandardIcon.Critical;\n            informationPopup.text = good ? qsTr(\"Good signature on %1 total and %2 spent.\").arg(results[2]).arg(results[3]) : qsTr(\"Bad signature\");\n        }\n        else {\n            informationPopup.title  = qsTr(\"Error\") + translationManager.emptyString;\n            informationPopup.text = currentWallet.errorString;\n            informationPopup.icon = StandardIcon.Critical\n        }\n        informationPopup.onCloseCallback = null\n        informationPopup.open()\n    }\n\n    function showProcessingSplash(message) {\n        console.log(\"Displaying processing splash\")\n        if (typeof message != 'undefined') {\n            splash.messageText = message\n        }\n\n        leftPanel.enabled = false;\n        middlePanel.enabled = false;\n        titleBar.enabled = false;\n        splash.show();\n    }\n\n    function hideProcessingSplash() {\n        console.log(\"Hiding processing splash\")\n        splash.close();\n\n        if (!passwordDialog.visible) {\n            leftPanel.enabled = true\n            middlePanel.enabled = true\n            titleBar.enabled = true\n        }\n    }\n\n    // close wallet and show wizard\n    function showWizard(){\n        walletInitialized = false;\n        closeWallet(function() {\n            wizard.restart();\n            wizard.wizardState = \"wizardHome\";\n            rootItem.state = \"wizard\"\n            // reset balance, clear spendable funds message\n            clearMoneroCardLabelText();\n            leftPanel.minutesToUnlock = \"\";\n            // reset fields\n            middlePanel.addressBookView.clearFields();\n            middlePanel.transferView.clearFields();\n            middlePanel.receiveView.clearFields();\n            middlePanel.historyView.clearFields();\n            middlePanel.advancedView.clearFields();\n            // disable timers\n            userInActivityTimer.running = false;\n        });\n    }\n\n    objectName: \"appWindow\"\n    visible: true\n    width: screenAvailableWidth > 980\n        ? 980\n        : Math.min(screenAvailableWidth, 800)\n    height: screenAvailableHeight > maxWindowHeight\n        ? maxWindowHeight\n        : Math.min(screenAvailableHeight, 700)\n    color: MoneroComponents.Style.appWindowBackgroundColor\n    flags: persistentSettings.customDecorations ? Windows.flagsCustomDecorations : Windows.flags\n\n    Timer {\n        id: fiatPriceTimer\n        interval: 1000 * 60;\n        running: persistentSettings.fiatPriceEnabled && currentWallet !== undefined\n        repeat: true\n        onTriggered: appWindow.fiatApiRefresh()\n        triggeredOnStart: true\n    }\n\n    function fiatApiParseTicker(url, resp, currency){\n        // parse & validate incoming JSON\n        if(url.startsWith(\"https://api.kraken.com/0/\")){\n            if(resp.hasOwnProperty(\"error\") && resp.error.length > 0 || !resp.hasOwnProperty(\"result\")){\n                appWindow.fiatApiError(\"Kraken API has error(s)\");\n                return;\n            }\n\n            var key = currency === \"xmreur\" ? \"XXMRZEUR\" : \"XXMRZUSD\";\n            var ticker = resp.result[key][\"c\"][0];\n            return ticker;\n        } else if(url.startsWith(\"https://api.coingecko.com/api/v3/\")){\n            var key = currency === \"xmreur\" ? \"eur\" : \"usd\";\n            if(!resp.hasOwnProperty(\"monero\") || !resp[\"monero\"].hasOwnProperty(key)){\n                appWindow.fiatApiError(\"Coingecko API has error(s)\");\n                return;\n            }\n            return resp[\"monero\"][key];\n        } else if(url.startsWith(\"https://min-api.cryptocompare.com/data/\")){\n            var key = currency === \"xmreur\" ? \"EUR\" : \"USD\";\n            if(!resp.hasOwnProperty(key)){\n                appWindow.fiatApiError(\"cryptocompare API has error(s)\");\n                return;\n            }\n            return resp[key];\n        }\n    }\n\n    function fiatApiGetCurrency(url) {\n        var apis = appWindow.fiatPriceAPIs;\n        for (var api in apis){\n            if (!apis.hasOwnProperty(api))\n               continue;\n\n            for (var cur in apis[api]){\n                if(!apis[api].hasOwnProperty(cur))\n                    continue;\n\n                if (apis[api][cur] === url) {\n                    return cur;\n                }\n            }\n        }\n    }\n\n    function fiatApiJsonReceived(url, resp, error) {\n        if (error) {\n            appWindow.fiatApiError(error);\n            return;\n        }\n\n        try {\n            resp = JSON.parse(resp);\n        } catch (e) {\n            appWindow.fiatApiError(\"bad JSON: \" + e);\n            return;\n        }\n\n        // handle incoming JSON, set ticker\n        var currency = appWindow.fiatApiGetCurrency(url);\n        if(typeof currency == \"undefined\"){\n            appWindow.fiatApiError(\"could not get currency\");\n            return;\n        }\n\n        var ticker = appWindow.fiatApiParseTicker(url, resp, currency);\n        if(ticker <= 0){\n            appWindow.fiatApiError(\"could not get ticker\");\n            return;\n        }\n\n        appWindow.fiatPrice = ticker;\n\n        appWindow.updateBalance();\n    }\n\n    function fiatApiRefresh(){\n        // trigger API call\n        if(!persistentSettings.fiatPriceEnabled)\n            return;\n\n        var userProvider = persistentSettings.fiatPriceProvider;\n        if(!appWindow.fiatPriceAPIs.hasOwnProperty(userProvider)){\n            appWindow.fiatApiError(\"provider \\\"\" + userProvider + \"\\\" not implemented\");\n            return;\n        }\n\n        var provider = appWindow.fiatPriceAPIs[userProvider];\n        var userCurrency = persistentSettings.fiatPriceCurrency;\n        if(!provider.hasOwnProperty(userCurrency)){\n            appWindow.fiatApiError(\"currency \\\"\" + userCurrency + \"\\\" not implemented\");\n        }\n\n        var url = provider[userCurrency];\n        network.getJSON(url, fiatApiJsonReceived);\n    }\n\n    function fiatApiCurrencySymbol() {\n        switch (persistentSettings.fiatPriceCurrency) {\n            case \"xmrusd\":\n                return \"USD\";\n            case \"xmreur\":\n                return \"EUR\";\n            default:\n                console.error(\"unsupported currency\", persistentSettings.fiatPriceCurrency);\n                return \"UNSUPPORTED\";\n        }\n    }\n\n    function fiatApiConvertToFiat(amount) {\n        const ticker = appWindow.fiatPrice;\n        if(ticker <= 0){\n            fiatApiError(\"Invalid ticker value: \" + ticker);\n            return \"?.??\";\n        }\n        return (amount * ticker).toFixed(2);\n    }\n\n    function fiatApiConvertToXMR(amount) {\n        const ticker = appWindow.fiatPrice;\n        if(ticker <= 0){\n            fiatApiError(\"Invalid ticker value: \" + ticker);\n            return \"?.??\";\n        }\n        return (amount / ticker).toFixed(12);\n    }\n\n    function fiatApiUpdateBalance(balance){\n        // update balance card\n        var bFiat = \"?.??\"\n        if (!hideBalanceForced && !persistentSettings.hideBalance) {\n            bFiat = fiatApiConvertToFiat(balance);\n        }\n        leftPanel.balanceFiatString = bFiat;\n    }\n\n    function fiatApiError(msg){\n        console.log(\"fiatPriceError: \" + msg);\n    }\n\n    Component.onCompleted: {\n        if (screenAvailableWidth > width) {\n            x = (screenAvailableWidth - width) / 2;\n        }\n        if (screenAvailableHeight > height) {\n            y = (screenAvailableHeight - height) / 2;\n        }\n\n        translationManager.setLanguage(persistentSettings.locale.split(\"_\")[0]);\n\n        applyWalletMode(persistentSettings.walletMode);\n\n        //\n        walletManager.walletOpened.connect(onWalletOpened);\n        walletManager.deviceButtonRequest.connect(onDeviceButtonRequest);\n        walletManager.deviceButtonPressed.connect(onDeviceButtonPressed);\n        walletManager.checkUpdatesComplete.connect(onWalletCheckUpdatesComplete);\n        walletManager.walletPassphraseNeeded.connect(onWalletPassphraseNeededManager);\n        IPC.uriHandler.connect(onUriHandler);\n\n        if(typeof daemonManager != \"undefined\") {\n            daemonManager.daemonStarted.connect(onDaemonStarted);\n            daemonManager.daemonStartFailure.connect(onDaemonStartFailure);\n            daemonManager.daemonStopped.connect(onDaemonStopped);\n        }\n\n        // Connect app exit to qml window exit handling\n        mainApp.closing.connect(appWindow.close);\n\n        if( appWindow.qrScannerEnabled ){\n            console.log(\"qrScannerEnabled : load component QRCodeScanner\");\n            var component = Qt.createComponent(\"components/QRCodeScanner.qml\");\n            if (component.status == Component.Ready) {\n                console.log(\"Camera component ready\");\n                cameraUi = component.createObject(appWindow);\n            } else {\n                console.log(\"component not READY !!!\");\n                appWindow.qrScannerEnabled = false;\n            }\n        } else console.log(\"qrScannerEnabled disabled\");\n\n        if(!walletsFound()) {\n            wizard.wizardState = \"wizardLanguage\";\n            rootItem.state = \"wizard\"\n        } else {\n            wizard.wizardState = \"wizardHome\";\n            rootItem.state = \"normal\"\n            logger.resetLogFilePath(persistentSettings.portable);\n            openWallet(\"wizard\");\n        }\n\n        const desktopEntryEnabled = (typeof builtWithDesktopEntry != \"undefined\") && builtWithDesktopEntry;\n        if (persistentSettings.askDesktopShortcut && !persistentSettings.portable && desktopEntryEnabled) {\n            persistentSettings.askDesktopShortcut = false;\n\n            if (isTails) {\n                oshelper.createDesktopEntry();\n            } else if (isLinux) {\n                confirmationDialog.title = qsTr(\"Desktop entry\") + translationManager.emptyString;\n                confirmationDialog.text  = qsTr(\"Would you like to register Monero GUI Desktop entry?\") + translationManager.emptyString;\n                confirmationDialog.icon = StandardIcon.Question;\n                confirmationDialog.cancelText = qsTr(\"No\") + translationManager.emptyString;\n                confirmationDialog.okText = qsTr(\"Yes\") + translationManager.emptyString;\n                confirmationDialog.onAcceptedCallback = function() {\n                    oshelper.createDesktopEntry();\n                };\n                confirmationDialog.onRejectedCallback = null;\n                confirmationDialog.open();\n            }\n        }\n\n        remoteNodesModel.initialize();\n    }\n\n    MoneroSettings {\n        id: persistentSettings\n        fileName: {\n            if(isTails && tailsUsePersistence)\n                return homePath + \"/Persistent/Monero/monero-core.conf\";\n            return \"\";\n        }\n\n        property bool askDesktopShortcut: isLinux\n        property bool askStopLocalNode: true\n        property string language: 'English (US)'\n        property string language_wallet: 'English'\n        property string locale: 'en_US'\n        property string account_name\n        property string wallet_path\n        property bool   allow_background_mining : false\n        property bool   allow_p2pool_mining : false\n        property bool   allowRemoteNodeMining : false\n        property bool   miningIgnoreBattery : true\n        property int    miningModeSelected: 0\n        property int    chainDropdownSelected: 0\n        property var    nettype: NetworkType.MAINNET\n        property int    restore_height : 0\n        property bool   is_trusted_daemon : false  // TODO: drop after v0.17.2.0 release\n        property bool   is_recovering : false\n        property bool   is_recovering_from_device : false\n        property bool   customDecorations : true\n        property string daemonFlags\n        property string p2poolFlags\n        property int logLevel: 0\n        property string logCategories: \"\"\n        property string daemonUsername: \"\" // TODO: drop after v0.17.2.0 release\n        property string daemonPassword: \"\" // TODO: drop after v0.17.2.0 release\n        property bool transferShowAdvanced: false\n        property bool receiveShowAdvanced: false\n        property bool historyShowAdvanced: false\n        property bool historyHumanDates: true\n        property string blockchainDataDir: \"\"\n        property bool useRemoteNode: isAndroid\n        property string remoteNodeAddress: \"\" // TODO: drop after v0.17.2.0 release\n        property string remoteNodesSerialized: JSON.stringify({\n                selected: 0,\n                nodes: remoteNodeAddress != \"\"\n                    ? [{\n                        address: remoteNodeAddress,\n                        username: daemonUsername,\n                        password: daemonPassword,\n                        trusted: is_trusted_daemon,\n                    }]\n                    : [],\n            })\n        property string bootstrapNodeAddress: \"\"\n        property bool segregatePreForkOutputs: true\n        property bool keyReuseMitigation2: true\n        property int segregationHeight: 0\n        property int kdfRounds: 1\n        property bool displayWalletNameInTitleBar: true\n        property bool hideBalance: false\n        property bool askPasswordBeforeSending: true\n        property bool lockOnUserInActivity: true\n        property int walletMode: 2\n        property int lockOnUserInActivityInterval: 10  // minutes\n        property bool blackTheme: MoneroComponents.Style.blackTheme\n        property bool checkForUpdates: true\n        property bool autosave: true\n        property int autosaveMinutes: 10\n        property bool pruneBlockchain: false\n\n        property bool fiatPriceEnabled: false\n        property bool fiatPriceToggle: false\n        property string fiatPriceProvider: \"kraken\"\n        property string fiatPriceCurrency: \"xmrusd\"\n\n        property string proxyAddress: \"127.0.0.1:9050\"\n        property bool proxyEnabled: isTails\n        function getProxyAddress() {\n            if ((socksProxyFlagSet && socksProxyFlag == \"\") || !proxyEnabled) {\n                return \"\";\n            }\n            var proxyAddressSetOrForced = socksProxyFlagSet ? socksProxyFlag : proxyAddress;\n            if (proxyAddressSetOrForced == \"\") {\n                return \"127.0.0.1:0\";\n            }\n            return proxyAddressSetOrForced;\n        }\n        function getWalletProxyAddress() {\n            if (!useRemoteNode) {\n                return \"\";\n            } else {\n                const remoteAddress = remoteNodesModel.currentRemoteNode().address;\n                // skip proxy when using localhost remote node\n                if (remoteAddress.startsWith(\"127.0.0.1:\") || remoteAddress.startsWith(\"localhost:\")) {\n                    return \"\";\n                } else {\n                    return getProxyAddress();\n                }\n            }\n        }\n\n        Component.onCompleted: {\n            MoneroComponents.Style.blackTheme = persistentSettings.blackTheme\n        }\n    }\n\n    ListModel {\n        id: remoteNodesModel\n\n        property int selected: 0\n\n        signal store()\n\n        function initialize() {\n            try {\n                const remoteNodes = JSON.parse(persistentSettings.remoteNodesSerialized);\n                for (var index = 0; index < remoteNodes.nodes.length; ++index) {\n                    const remoteNode = remoteNodes.nodes[index];\n                    remoteNodesModel.append(remoteNode);\n                }\n                selected = remoteNodes.selected % remoteNodesModel.count || 0;\n            } catch (e) {\n                console.error('failed to parse remoteNodesSerialized', e);\n            }\n\n            store.connect(function() {\n                var remoteNodes = [];\n                for (var index = 0; index < remoteNodesModel.count; ++index) {\n                    remoteNodes.push(remoteNodesModel.get(index));\n                }\n                persistentSettings.remoteNodesSerialized = JSON.stringify({\n                    selected: selected,\n                    nodes: remoteNodes\n                });\n            });\n        }\n\n        function appendIfNotExists(newRemoteNode) {\n            for (var index = 0; index < remoteNodesModel.count; ++index) {\n                const remoteNode = remoteNodesModel.get(index);\n                if (remoteNode.address == newRemoteNode.address &&\n                    remoteNode.username == newRemoteNode.username &&\n                    remoteNode.password == newRemoteNode.password &&\n                    remoteNode.trusted == newRemoteNode.trusted) {\n                        return index;\n                }\n            }\n            remoteNodesModel.append(newRemoteNode);\n            return remoteNodesModel.count - 1;\n        }\n\n        function applyRemoteNode(index) {\n            selected = index;\n            const remoteNode = currentRemoteNode();\n            persistentSettings.useRemoteNode = true;\n            if (currentWallet) {\n                currentWallet.setDaemonLogin(remoteNode.username, remoteNode.password);\n                currentWallet.setTrustedDaemon(remoteNode.trusted);\n                appWindow.connectRemoteNode();\n            }\n        }\n\n        function currentRemoteNode() {\n            if (selected < remoteNodesModel.count) {\n                return remoteNodesModel.get(selected);\n            }\n            return {\n                address: \"\",\n                username: \"\",\n                password: \"\",\n                trusted: false,\n            };\n        }\n\n        function removeSelectNextIfNeeded(index) {\n            remoteNodesModel.remove(index);\n            if (selected == index) {\n                applyRemoteNode(selected % remoteNodesModel.count || 0);\n            } else if (selected > index) {\n                selected = selected - 1;\n            }\n        }\n\n        onCountChanged: store()\n        onDataChanged: store()\n        onSelectedChanged: store()\n    }\n\n    // Information dialog\n    StandardDialog {\n        // dynamically change onclose handler\n        property var onCloseCallback\n        id: informationPopup\n        anchors.fill: parent\n        z: parent.z + 1\n        cancelVisible: false\n        onAccepted:  {\n            if (onCloseCallback) {\n                onCloseCallback()\n            }\n        }\n    }\n\n    // Transaction confirmation popup\n    TxConfirmationDialog {\n        // dynamically change onclose handler\n        id: txConfirmationPopup\n        z: parent.z + 1\n        onAccepted: {\n            var handleAccepted = function() {\n                // Save transaction to file if view only wallet\n                if (viewOnly) {\n                    saveTxDialog.open();\n                } else {\n                    handleTransactionConfirmed()\n                }\n            }\n            close();\n            passwordDialog.onAcceptedCallback = function() {\n                if(walletPassword === passwordDialog.password){\n                    handleAccepted()\n                } else {\n                    passwordDialog.showError(qsTr(\"Wrong password\") + translationManager.emptyString);\n                }\n            }\n            passwordDialog.onRejectedCallback = null;\n            if(!persistentSettings.askPasswordBeforeSending) {\n                handleAccepted()\n            } else {\n                passwordDialog.open(\n                    \"\",\n                    \"\",\n                    (appWindow.viewOnly ? qsTr(\"Save transaction file\") : qsTr(\"Send transaction\")) + translationManager.emptyString,\n                    appWindow.viewOnly ? \"\" : FontAwesome.arrowCircleRight);\n            }\n        }\n    }\n\n    // Transaction successfully sent popup\n    SuccessfulTxDialog {\n        id: successfulTxPopup\n        z: parent.z + 1\n    }\n\n    StandardDialog {\n        z: parent.z + 1\n        id: confirmationDialog\n        anchors.fill: parent\n        property var onAcceptedCallback\n        property var onRejectedCallback\n        onAccepted:  {\n            if (onAcceptedCallback)\n                onAcceptedCallback()\n        }\n        onRejected: {\n            if (onRejectedCallback)\n                onRejectedCallback();\n        }\n    }\n\n    MoneroComponents.UpdateDialog {\n        id: updateDialog\n\n        allowed: !passwordDialog.visible && !inputDialog.visible && !splash.visible\n        x: (parent.width - width) / 2\n        y: (parent.height - height) / 2\n    }\n\n    MoneroComponents.RemoteNodeDialog {\n        id: remoteNodeDialog\n    }\n\n    // Choose blockchain folder\n    FileDialog {\n        id: blockchainFileDialog\n        property string directory: \"\"\n        signal changed();\n\n        title: \"Please choose a folder\"\n        selectFolder: true\n        folder: \"file://\" + persistentSettings.blockchainDataDir\n\n        onRejected: console.log(\"data dir selection canceled\")\n        onAccepted: {\n            var dataDir = walletManager.urlToLocalPath(blockchainFileDialog.fileUrl)\n            var validator = daemonManager.validateDataDir(dataDir);\n            if(validator.valid) {\n                persistentSettings.blockchainDataDir = dataDir;\n            } else {\n                confirmationDialog.title = qsTr(\"Warning\") + translationManager.emptyString;\n                confirmationDialog.text = \"\";\n                if(validator.readOnly)\n                    confirmationDialog.text  += qsTr(\"Error: Filesystem is read only\") + \"\\n\\n\"\n                if(validator.storageAvailable < estimatedBlockchainSize)\n                    confirmationDialog.text  += qsTr(\"Warning: There's only %1 GB available on the device. Blockchain requires ~%2 GB of data.\").arg(validator.storageAvailable).arg(estimatedBlockchainSize) + \"\\n\\n\"\n                else\n                    confirmationDialog.text  += qsTr(\"Note: There's %1 GB available on the device. Blockchain requires ~%2 GB of data.\").arg(validator.storageAvailable).arg(estimatedBlockchainSize) + \"\\n\\n\"\n                if(!validator.lmdbExists)\n                    confirmationDialog.text  += qsTr(\"Note: lmdb folder not found. A new folder will be created.\") + \"\\n\\n\"\n\n                confirmationDialog.icon = StandardIcon.Question\n\n                // Continue\n                confirmationDialog.onAcceptedCallback = function() {\n                    persistentSettings.blockchainDataDir = dataDir\n                }\n\n                // Cancel\n                confirmationDialog.onRejectedCallback = function() { };\n                confirmationDialog.open()\n            }\n\n            blockchainFileDialog.directory = blockchainFileDialog.fileUrl;\n            delete validator;\n        }\n    }\n\n    PasswordDialog {\n        id: passwordDialog\n        visible: false\n        z: parent.z + 2\n        anchors.fill: parent\n        property var onAcceptedCallback\n        property var onRejectedCallback\n        onAccepted: {\n            if (onAcceptedCallback)\n                onAcceptedCallback();\n        }\n        onRejected: {\n            if (onRejectedCallback)\n                onRejectedCallback();\n        }\n        onAcceptedNewPassword: {\n            if (currentWallet.setPassword(passwordDialog.password)) {\n                appWindow.walletPassword = passwordDialog.password;\n                informationPopup.title = qsTr(\"Information\") + translationManager.emptyString;\n                informationPopup.text  = qsTr(\"Password changed successfully\") + translationManager.emptyString;\n                informationPopup.icon  = StandardIcon.Information;\n            } else {\n                informationPopup.title  = qsTr(\"Error\") + translationManager.emptyString;\n                informationPopup.text  = qsTr(\"Error: \") + currentWallet.errorString;\n                informationPopup.icon  = StandardIcon.Critical;\n            }\n            informationPopup.onCloseCallback = null;\n            informationPopup.open();\n        }\n        onRejectedNewPassword: {}\n        Keys.enabled: !passwordDialog.visible && informationPopup.visible\n        Keys.onEnterPressed: informationPopup.close()\n        Keys.onReturnPressed: informationPopup.close()\n    }\n\n    DevicePassphraseDialog {\n        id: devicePassphraseDialog\n        visible: false\n        z: parent.z + 1\n        anchors.fill: parent\n    }\n\n    InputDialog {\n        id: inputDialog\n        visible: false\n        z: parent.z + 1\n        anchors.fill: parent\n        property var onAcceptedCallback\n        property var onRejectedCallback\n        onAccepted:  {\n            if (onAcceptedCallback)\n                onAcceptedCallback()\n        }\n        onRejected:  {\n            if (onRejectedCallback)\n                onRejectedCallback()\n        }\n    }\n\n    DaemonManagerDialog {\n        id: daemonManagerDialog\n        onRejected: {\n            middlePanel.settingsView.settingsStateViewState = \"Node\";\n            loadPage(\"Settings\");\n        }\n\n    }\n\n    ProcessingSplash {\n        id: splash\n        width: appWindow.width / 2\n        height: appWindow.height / 2.66\n        x: (appWindow.width - width) / 2\n        y: (appWindow.height - height) / 2\n        messageText: qsTr(\"Please wait...\") + translationManager.emptyString\n    }\n\n    Item {\n        id: rootItem\n        anchors.fill: parent\n        clip: true\n\n        state: \"wizard\"\n        states: [\n            State {\n                name: \"wizard\"\n                PropertyChanges { target: middlePanel; visible: false }\n                PropertyChanges { target: wizard; visible: true }\n                PropertyChanges { target: resizeArea; visible: true }\n                PropertyChanges { target: titleBar; state: \"essentials\" }\n            }, State {\n                name: \"normal\"\n                PropertyChanges { target: middlePanel; visible: true }\n                PropertyChanges { target: wizard; visible: false }\n                PropertyChanges { target: resizeArea; visible: true }\n                PropertyChanges { target: titleBar; state: \"default\" }\n            }\n        ]\n\n        Item {\n            id: blurredArea\n            anchors.fill: parent\n\n            LeftPanel {\n                id: leftPanel\n                anchors.top: parent.top\n                anchors.left: parent.left\n                anchors.bottom: parent.bottom\n                visible: rootItem.state == \"normal\" && middlePanel.state != \"Merchant\"\n                currentAccountIndex: currentWallet ? currentWallet.currentSubaddressAccount : 0\n                currentAccountLabel: {\n                    if (currentWallet) {\n                        return currentWallet.getSubaddressLabel(currentWallet.currentSubaddressAccount, 0);\n                    }\n                    return qsTr(\"Primary account\") + translationManager.emptyString;\n                }\n\n                onTransferClicked: {\n                    middlePanel.state = \"Transfer\";\n                    middlePanel.flickable.contentY = 0;\n                    updateBalance();\n                }\n\n                onReceiveClicked: {\n                    middlePanel.state = \"Receive\";\n                    middlePanel.flickable.contentY = 0;\n                    updateBalance();\n                }\n\n                onHistoryClicked: {\n                    middlePanel.state = \"History\";\n                    middlePanel.flickable.contentY = 0;\n                    updateBalance();\n                }\n\n                onAddressBookClicked: {\n                    middlePanel.state = \"AddressBook\";\n                    middlePanel.flickable.contentY = 0;\n                    updateBalance();\n                }\n\n                onAdvancedClicked: {\n                    middlePanel.state = \"Advanced\";\n                    middlePanel.flickable.contentY = 0;\n                    updateBalance();\n                }\n\n                onSettingsClicked: {\n                    middlePanel.state = \"Settings\";\n                    middlePanel.flickable.contentY = 0;\n                    updateBalance();\n                }\n\n                onAccountClicked: {\n                    middlePanel.state = \"Account\";\n                    middlePanel.flickable.contentY = 0;\n                    updateBalance();\n                }\n            }\n\n            MiddlePanel {\n                id: middlePanel\n                accountView.currentAccountIndex: currentWallet ? currentWallet.currentSubaddressAccount : 0\n                anchors.top: parent.top\n                anchors.bottom: parent.bottom\n                anchors.left: leftPanel.visible ? leftPanel.right : parent.left\n                anchors.right: parent.right\n                state: \"Transfer\"\n            }\n\n            WizardController {\n                id: wizard\n                anchors.fill: parent\n                onUseMoneroClicked: {\n                    rootItem.state = \"normal\";\n                    appWindow.openWallet(\"wizard\");\n                }\n            }\n        }\n\n        FastBlur {\n            id: blur\n            anchors.fill: blurredArea\n            source: blurredArea\n            radius: 64\n            visible: passwordDialog.visible || inputDialog.visible || splash.visible || updateDialog.visible ||\n                devicePassphraseDialog.visible || txConfirmationPopup.visible || successfulTxPopup.visible ||\n                remoteNodeDialog.visible\n        }\n\n\n        property int minWidth: 326\n        property int minHeight: 400\n        MouseArea {\n            id: resizeArea\n            enabled: persistentSettings.customDecorations\n            hoverEnabled: true\n            cursorShape: persistentSettings.customDecorations ? Qt.PointingHandCursor : Qt.ArrowCursor\n            anchors.right: parent.right\n            anchors.bottom: parent.bottom\n            height: 34\n            width: 34\n\n            MoneroEffects.ImageMask {\n                anchors.centerIn: parent\n                visible: persistentSettings.customDecorations\n                image: \"qrc:///images/resize.png\"\n                color: MoneroComponents.Style.defaultFontColor\n                width: 12\n                height: 12\n                opacity: (parent.containsMouse || parent.pressed) ? 0.5 : 1.0\n            }\n\n            property var previousPosition\n\n            onPressed: {\n                previousPosition = globalCursor.getPosition()\n            }\n\n            onPositionChanged: {\n                if(!pressed) return\n                var pos = globalCursor.getPosition()\n                //var delta = previousPosition - pos\n                var dx = previousPosition.x - pos.x\n                var dy = previousPosition.y - pos.y\n\n                if(appWindow.width - dx > parent.minWidth)\n                    appWindow.width -= dx\n                else appWindow.width = parent.minWidth\n\n                if(appWindow.height - dy > parent.minHeight)\n                    appWindow.height -= dy\n                else appWindow.height = parent.minHeight\n                previousPosition = pos\n            }\n        }\n\n        TitleBar {\n            id: titleBar\n            visible: persistentSettings.customDecorations && middlePanel.state !== \"Merchant\"\n            walletName: persistentSettings.displayWalletNameInTitleBar && rootItem.state != \"wizard\" ? appWindow.walletName : \"\"\n            anchors.left: parent.left\n            anchors.right: parent.right\n            onCloseClicked: appWindow.close();\n            onLockWalletClicked: appWindow.lock();\n            onLanguageClicked: appWindow.toggleLanguageView();\n            onCloseWalletClicked: appWindow.showWizard();\n            onMaximizeClicked: appWindow.visibility = appWindow.visibility !== Window.Maximized ? Window.Maximized : Window.Windowed\n            onMinimizeClicked: appWindow.visibility = Window.Minimized\n        }\n\n        MoneroMerchant.MerchantTitlebar {\n            id: titleBarOrange\n            visible: persistentSettings.customDecorations && middlePanel.state === \"Merchant\"\n            anchors.left: parent.left\n            anchors.right: parent.right\n            onCloseClicked: appWindow.close();\n            onMaximizeClicked: appWindow.visibility = appWindow.visibility !== Window.Maximized ? Window.Maximized : Window.Windowed\n            onMinimizeClicked: appWindow.visibility = Window.Minimized\n        }\n\n        // new ToolTip\n        Rectangle {\n            id: toolTip\n            property alias text: content.text\n            width: content.width + 12\n            height: content.height + 17\n            color: \"#FF6C3C\"\n            //radius: 3\n            visible:false;\n\n            Image {\n                id: tip\n                anchors.top: parent.bottom\n                anchors.right: parent.right\n                anchors.rightMargin: 5\n                source: \"qrc:///images/tip.png\"\n            }\n\n            MoneroComponents.TextPlain {\n                id: content\n                anchors.horizontalCenter: parent.horizontalCenter\n                y: 6\n                lineHeight: 0.7\n                font.family: \"Arial\"\n                font.pixelSize: 12\n                color: \"#FFFFFF\"\n            }\n        }\n    }\n\n    function toggleLanguageView(){\n        languageSidebar.visible ? languageSidebar.close() : languageSidebar.open();\n        languageSidebar.selectCurrentLanguage()\n        resetLanguageFields()\n    }\n\n    Timer {\n        id: autosaveTimer\n        interval: persistentSettings.autosaveMinutes * 60 * 1000\n        repeat: true\n        running: persistentSettings.autosave\n        onTriggered: {\n            if (currentWallet && !currentWallet.refreshing) {\n                currentWallet.storeAsync(function(success) {\n                    if (success) {\n                        appWindow.showStatusMessage(qsTr(\"Autosaved the wallet\"), 3);\n                    } else {\n                        appWindow.showStatusMessage(qsTr(\"Failed to autosave the wallet\"), 3);\n                    }\n                });\n            }\n        }\n    }\n\n    // TODO: Make the callback dynamic\n    Timer {\n        id: statusMessageTimer\n        interval: 5;\n        running: false;\n        repeat: false\n        onTriggered: resetAndroidClose()\n        triggeredOnStart: false\n    }\n\n    Timer {\n        id: userInActivityTimer\n        interval: 2000; running: false; repeat: true\n        onTriggered: checkInUserActivity()\n    }\n\n    Timer {\n        // enables theme transition animations after 500ms\n        id: appThemeTransition\n        running: true\n        repeat: false\n        interval: 500\n        onTriggered: appWindow.themeTransition = true;\n    }\n\n    function checkNoSyncFlag() {\n        if (!appWindow.daemonRunning) {\n            return true;\n        }\n        if (appWindow.walletMode == 0 && !daemonManager.noSync()) {\n            return false;\n        }\n        if (appWindow.walletMode == 1 && daemonManager.noSync()) {\n            return false;\n        }\n        return true;\n    }\n\n    function checkSimpleModeConnection(){\n        const disconnectedTimeoutSec = 30;\n        const firstCheckDelaySec = 2;\n\n        const firstRun = appWindow.disconnectedEpoch == 0;\n        if (firstRun) {\n            appWindow.disconnectedEpoch = Utils.epoch() + firstCheckDelaySec - disconnectedTimeoutSec;\n        } else if (!disconnected) {\n            appWindow.disconnectedEpoch = Utils.epoch();\n        }\n\n        const sinceLastConnect = Utils.epoch() - appWindow.disconnectedEpoch;\n        if (sinceLastConnect < disconnectedTimeoutSec && checkNoSyncFlag()) {\n            return;\n        }\n\n        const simpleModeFlags = \"--enable-dns-blocklist --out-peers 16 --no-igd\";\n        if (appWindow.daemonRunning) {\n            appWindow.stopDaemon(function() {\n                appWindow.startDaemon(simpleModeFlags)\n            });\n        } else {\n            appWindow.startDaemon(simpleModeFlags);\n        }\n    }\n\n    Timer {\n        // Simple mode connection check timer\n        id: simpleModeConnectionTimer\n        interval: 2000\n        running: appWindow.walletMode < 2 && currentWallet != undefined && daemonStartStopInProgress == 0\n        repeat: true\n        onTriggered: appWindow.checkSimpleModeConnection()\n    }\n\n    Rectangle {\n        id: statusMessage\n        z: 99\n        visible: false\n        property alias text: statusMessageText.text\n        anchors.bottom: parent.bottom\n        width: statusMessageText.contentWidth + 20\n        anchors.horizontalCenter: parent.horizontalCenter\n        color: MoneroComponents.Style.blackTheme ? \"black\" : \"white\"\n        height: 40\n        MoneroComponents.TextPlain {\n            id: statusMessageText\n            anchors.fill: parent\n            anchors.margins: 10\n            font.pixelSize: 14\n            color: MoneroComponents.Style.defaultFontColor\n            themeTransition: false\n        }\n    }\n\n    function resetAndroidClose() {\n        console.log(\"resetting android close\");\n        androidCloseTapped = false;\n        statusMessage.visible = false\n    }\n\n    function showStatusMessage(msg,timeout) {\n        console.log(\"showing status message\")\n        statusMessageTimer.interval = timeout * 1000;\n        statusMessageTimer.start()\n        statusMessageText.text = msg;\n        statusMessage.visible = true\n    }\n\n    function showDaemonIsRunningDialog(onClose) {\n        // Show confirmation dialog\n        confirmationDialog.title = qsTr(\"Local node is running\") + translationManager.emptyString;\n        confirmationDialog.text  = qsTr(\"Do you want to stop local node or keep it running in the background?\") + translationManager.emptyString;\n        confirmationDialog.icon = StandardIcon.Question;\n        confirmationDialog.cancelText = qsTr(\"Force stop\") + translationManager.emptyString;\n        confirmationDialog.okText = qsTr(\"Keep it running\") + translationManager.emptyString;\n        confirmationDialog.onAcceptedCallback = function() {\n            onClose();\n        }\n        confirmationDialog.onRejectedCallback = function() {\n            stopDaemon(onClose);\n        };\n        confirmationDialog.open();\n    }\n\n    onClosing: {\n        close.accepted = false;\n        console.log(\"blocking close event\");\n        if(isAndroid) {\n            console.log(\"blocking android exit\");\n            if(qrScannerEnabled)\n                cameraUi.state = \"Stopped\"\n\n            if(!androidCloseTapped) {\n                androidCloseTapped = true;\n                appWindow.showStatusMessage(qsTr(\"Tap again to close...\"),3)\n\n                // first close\n                return;\n            }\n\n\n        }\n\n        // If daemon is running - prompt user before exiting\n        if(daemonManager == undefined || persistentSettings.useRemoteNode) {\n            closeAccepted();\n        } else if (appWindow.walletMode == 0) {\n            stopDaemon(closeAccepted, true);\n        } else {\n            showProcessingSplash(qsTr(\"Checking local node status...\"));\n            const handler = function(running) {\n                hideProcessingSplash();\n                if (running && persistentSettings.askStopLocalNode) {\n                    showDaemonIsRunningDialog(closeAccepted);\n                } else {\n                    closeAccepted();\n                }\n            };\n\n            if (currentWallet) {\n                handler(!currentWallet.disconnected);\n            } else {\n                daemonManager.runningAsync(persistentSettings.nettype, persistentSettings.blockchainDataDir, handler);\n            }\n        }\n    }\n\n    function closeAccepted(){\n        console.log(\"close accepted\");\n        // Close wallet non async on exit\n        daemonManager.exit();\n        p2poolManager.exit();\n        closeWallet(Qt.quit);\n    }\n\n    function onWalletCheckUpdatesComplete(version, downloadUrl, hash, firstSigner, secondSigner) {\n        const alreadyAsked = updateDialog.url == downloadUrl && updateDialog.hash == hash;\n        if (!alreadyAsked)\n        {\n            updateDialog.show(version, isMac || isWindows || isLinux ? downloadUrl : \"\", hash);\n        }\n    }\n\n    function getBuildTag() {\n        if (isMac) {\n            return isARM ? \"mac-armv8\" : \"mac-x64\";\n        }\n        if (isWindows) {\n            return oshelper.installed ? \"install-win-x64\" : \"win-x64\";\n        }\n        if (isLinux) {\n            return \"linux-x64\";\n        }\n        return \"source\";\n    }\n\n    function checkUpdates() {\n        const version = Version.GUI_VERSION.match(/\\d+\\.\\d+\\.\\d+\\.\\d+/);\n        if (version) {\n            walletManager.checkUpdatesAsync(\"monero-gui\", \"gui\", getBuildTag(), version[0]);\n        } else {\n            console.error(\"failed to parse version number\", Version.GUI_VERSION);\n        }\n    }\n\n    Timer {\n        id: updatesTimer\n        interval: 3600 * 1000\n        repeat: true\n        running: !disableCheckUpdatesFlag && persistentSettings.checkForUpdates\n        triggeredOnStart: true\n        onTriggered: checkUpdates()\n    }\n\n    function releaseFocus() {\n        // Workaround to release focus from textfield when scrolling (https://bugreports.qt.io/browse/QTBUG-34867)\n        if(isAndroid) {\n            console.log(\"releasing focus\")\n            middlePanel.focus = true\n            middlePanel.focus = false\n        }\n    }\n\n    // reset label text. othewise potential privacy leak showing unlock time when switching wallets\n    function clearMoneroCardLabelText(){\n        leftPanel.balanceString = \"?.??\"\n        leftPanel.balanceFiatString = \"?.??\"\n    }\n\n    // some fields need an extra nudge when changing languages\n    function resetLanguageFields(){\n        clearMoneroCardLabelText()\n        if (currentWallet) {\n            onWalletRefresh();\n        }\n    }\n\n    function userActivity() {\n        // register user activity\n        appWindow.userLastActive = Utils.epoch();\n    }\n\n    function checkInUserActivity() {\n        if(rootItem.state !== \"normal\") return;\n        if(!persistentSettings.lockOnUserInActivity) return;\n        if(passwordDialog.visible) return;\n        var inputDialogVisible = inputDialog && inputDialog.visible\n        var successfulTxPopupVisible = successfulTxPopup && successfulTxPopup.visible\n        var informationPopupVisible = informationPopup && informationPopup.visible\n\n        // prompt password after X seconds of inactivity\n        var inactivity = Utils.epoch() - appWindow.userLastActive;\n        if(inactivity < (persistentSettings.lockOnUserInActivityInterval * 60)) return;\n\n        passwordDialog.onAcceptedCallback = function() {\n            if(walletPassword === passwordDialog.password){\n                passwordDialog.close();\n                if (inputDialogVisible) inputDialog.open(inputDialog.inputText)\n                if (successfulTxPopupVisible) successfulTxPopup.open(successfulTxPopup.transactionID)\n                if (informationPopupVisible) informationPopup.open()\n            } else {\n                passwordDialog.showError(qsTr(\"Wrong password\"));\n            }\n        }\n\n        passwordDialog.onRejectedCallback = function() { appWindow.showWizard(); }\n        if (inputDialogVisible) inputDialog.close()\n        remoteNodeDialog.close();\n        informationPopup.close()\n        txConfirmationPopup.close()\n        txConfirmationPopup.clearFields()\n        txConfirmationPopup.rejected()\n        successfulTxPopup.close();\n        passwordDialog.open();\n    }\n\n    function getDefaultDaemonRpcPort(networkType) {\n        switch (parseInt(networkType)) {\n            case NetworkType.STAGENET:\n                return 38081;\n            case NetworkType.TESTNET:\n                return 28081;\n            default:\n                return 18081;\n        }\n    }\n\n    function changeWalletMode(mode){\n        appWindow.disconnectedEpoch = 0;\n        persistentSettings.walletMode = mode;\n        applyWalletMode(mode);\n    }\n\n    function applyWalletMode(mode){\n        if (mode < 2) {\n            persistentSettings.useRemoteNode = false;\n\n            if (middlePanel.settingsView.settingsStateViewState === \"Node\") {\n                middlePanel.settingsView.settingsStateViewState = \"Wallet\"\n            }\n        }\n        console.log(\"walletMode: \" + (mode === 0 ? \"simple\": mode === 1 ? \"simple (bootstrap)\" : \"Advanced\"));\n    }\n\n    Rectangle {\n        id: inactiveOverlay\n        visible: blur.visible\n        anchors.fill: parent\n        anchors.topMargin: titleBar.height\n        color: MoneroComponents.Style.blackTheme ? \"black\" : \"white\"\n        opacity: isOpenGL ? 0.3 : inputDialog.visible || splash.visible ? 0.7 : 1.0\n\n        MoneroEffects.ColorTransition {\n            targetObj: parent\n            blackColor: \"black\"\n            whiteColor: \"white\"\n        }\n\n        MouseArea {\n            anchors.fill: parent\n            hoverEnabled: true\n        }\n    }\n\n    // borders on white theme + linux\n    Rectangle {\n        visible: isLinux && !MoneroComponents.Style.blackTheme && middlePanel.state !== \"Merchant\"\n        z: parent.z + 1\n        anchors.left: parent.left\n        anchors.top: parent.top\n        anchors.bottom: parent.bottom\n        width: 1\n        color: MoneroComponents.Style.appWindowBorderColor\n\n        MoneroEffects.ColorTransition {\n            targetObj: parent\n            blackColor: MoneroComponents.Style._b_appWindowBorderColor\n            whiteColor: MoneroComponents.Style._w_appWindowBorderColor\n        }\n    }\n\n    Rectangle {\n        visible: isLinux && !MoneroComponents.Style.blackTheme && middlePanel.state !== \"Merchant\"\n        z: parent.z + 1\n        anchors.right: parent.right\n        anchors.top: parent.top\n        anchors.bottom: parent.bottom\n        width: 1\n        color: MoneroComponents.Style.appWindowBorderColor\n\n        MoneroEffects.ColorTransition {\n            targetObj: parent\n            blackColor: MoneroComponents.Style._b_appWindowBorderColor\n            whiteColor: MoneroComponents.Style._w_appWindowBorderColor\n        }\n    }\n\n    Rectangle {\n        visible: isLinux && !MoneroComponents.Style.blackTheme && middlePanel.state !== \"Merchant\"\n        z: parent.z + 1\n        anchors.right: parent.right\n        anchors.top: parent.top\n        anchors.left: parent.left\n        height: 1\n        color: MoneroComponents.Style.appWindowBorderColor\n\n        MoneroEffects.ColorTransition {\n            targetObj: parent\n            blackColor: MoneroComponents.Style._b_appWindowBorderColor\n            whiteColor: MoneroComponents.Style._w_appWindowBorderColor\n        }\n    }\n\n    Rectangle {\n        visible: isLinux && !MoneroComponents.Style.blackTheme && middlePanel.state !== \"Merchant\"\n        z: parent.z + 1\n        anchors.right: parent.right\n        anchors.bottom: parent.bottom\n        anchors.left: parent.left\n        height: 1\n        color: MoneroComponents.Style.appWindowBorderColor\n\n        MoneroEffects.ColorTransition {\n            targetObj: parent\n            blackColor: MoneroComponents.Style._b_appWindowBorderColor\n            whiteColor: MoneroComponents.Style._w_appWindowBorderColor\n        }\n    }\n\n    MoneroComponents.LanguageSidebar {\n        id: languageSidebar\n        dragMargin: 0\n        onAboutToShow: previousActiveFocusItem = activeFocusItem;\n        onClosed: { if (previousActiveFocusItem) previousActiveFocusItem.forceActiveFocus() }\n    }\n\n    MoneroComponents.MenuBar { }\n\n    Network {\n        id: network\n        proxyAddress: persistentSettings.getProxyAddress()\n    }\n\n    WalletManager {\n        id: walletManager\n        proxyAddress: persistentSettings.getProxyAddress()\n    }\n}\n"
        },
        {
          "name": "monero",
          "type": "commit",
          "content": null
        },
        {
          "name": "pages",
          "type": "tree",
          "content": null
        },
        {
          "name": "qml.qrc",
          "type": "blob",
          "size": 13.8603515625,
          "content": "<RCC>\n    <qresource prefix=\"/\">\n        <file>main.qml</file>\n        <file>LeftPanel.qml</file>\n        <file>MiddlePanel.qml</file>\n        <file>components/Dialog.qml</file>\n        <file>components/Label.qml</file>\n        <file>components/LanguageButton.qml</file>\n        <file>components/Navbar.qml</file>\n        <file>components/NavbarItem.qml</file>\n        <file>components/RemoteNodeDialog.qml</file>\n        <file>components/RemoteNodeList.qml</file>\n        <file>components/SettingsListItem.qml</file>\n        <file>components/Slider.qml</file>\n        <file>components/Tooltip.qml</file>\n        <file>components/UpdateDialog.qml</file>\n        <file>images/whatIsIcon.png</file>\n        <file>images/whatIsIcon@2x.png</file>\n        <file>components/MenuButton.qml</file>\n        <file>monero/utils/gpg_keys/binaryfate.asc</file>\n        <file>monero/utils/gpg_keys/fluffypony.asc</file>\n        <file>monero/utils/gpg_keys/luigi1111.asc</file>\n        <file>pages/Account.qml</file>\n        <file>pages/Advanced.qml</file>\n        <file>pages/Transfer.qml</file>\n        <file>pages/History.qml</file>\n        <file>pages/AddressBook.qml</file>\n        <file>pages/Mining.qml</file>\n        <file>components/ContextMenu.qml</file>\n        <file>components/ContextMenuItem.qml</file>\n        <file>components/NetworkStatusItem.qml</file>\n        <file>components/Input.qml</file>\n        <file>components/StandardButton.qml</file>\n        <file>components/LineEdit.qml</file>\n        <file>components/TipItem.qml</file>\n        <file>images/tip.png</file>\n        <file>components/MenuButtonDivider.qml</file>\n        <file>images/monero-vector.svg</file>\n        <file>components/StandardDropdown.qml</file>\n        <file>images/whiteDropIndicator.png</file>\n        <file>images/whiteDropIndicator@2x.png</file>\n        <file>components/CheckBox.qml</file>\n        <file>images/uncheckedIcon.png</file>\n        <file>images/uncheckedIcon@2x.png</file>\n        <file>components/DatePicker.qml</file>\n        <file>images/prevMonth.png</file>\n        <file>images/prevMonth@2x.png</file>\n        <file>components/TitleBar.qml</file>\n        <file>components/MenuBar.qml</file>\n        <file>images/resize.png</file>\n        <file>images/resize@2x.png</file>\n        <file>images/resizeHovered.png</file>\n        <file>images/resizeHovered@2x.png</file>\n        <file>images/nextPage.png</file>\n        <file>images/nextPage@2x.png</file>\n        <file>lang/languages.xml</file>\n        <file>lang/flags/bd.png</file>\n        <file>lang/flags/bg.png</file>\n        <file>lang/flags/br.png</file>\n        <file>lang/flags/catalonia.png</file>\n        <file>lang/flags/cn.png</file>\n        <file>lang/flags/hr.png</file>\n        <file>lang/flags/hu.png</file>\n        <file>lang/flags/cz.png</file>\n        <file>lang/flags/dk.png</file>\n        <file>lang/flags/eg.png</file>\n        <file>lang/flags/esperanto.png</file>\n        <file>lang/flags/fi.png</file>\n        <file>lang/flags/fr.png</file>\n        <file>lang/flags/de.png</file>\n        <file>lang/flags/in.png</file>\n        <file>lang/flags/id.png</file>\n        <file>lang/flags/il.png</file>\n        <file>lang/flags/ir.png</file>\n        <file>lang/flags/irl.png</file>\n        <file>lang/flags/it.png</file>\n        <file>lang/flags/jp.png</file>\n        <file>lang/flags/ku.png</file>\n        <file>lang/flags/lt.png</file>\n        <file>lang/flags/nl.png</file>\n        <file>lang/flags/pk.png</file>\n        <file>lang/flags/ps.png</file>\n        <file>lang/flags/pl.png</file>\n        <file>lang/flags/pt.png</file>\n        <file>lang/flags/ro.png</file>\n        <file>lang/flags/ru.png</file>\n        <file>lang/flags/rs.png</file>\n        <file>lang/flags/sk.png</file>\n        <file>lang/flags/si.png</file>\n        <file>lang/flags/za.png</file>\n        <file>lang/flags/kr.png</file>\n        <file>lang/flags/es.png</file>\n        <file>lang/flags/se.png</file>\n        <file>lang/flags/tw.png</file>\n        <file>lang/flags/tr.png</file>\n        <file>lang/flags/ua.png</file>\n        <file>lang/flags/gb.png</file>\n        <file>lang/flags/us.png</file>\n        <file>lang/flags/nb_NO.png</file>\n        <file>lang/flags/el.png</file>\n        <file>lang/flags/vi.png</file>\n        <file>lang/flags/is.png</file>\n        <file>pages/Receive.qml</file>\n        <file>pages/TxKey.qml</file>\n        <file>pages/SharedRingDB.qml</file>\n        <file>components/effects/ImageMask.qml</file>\n        <file>components/IconButton.qml</file>\n        <file>components/PasswordDialog.qml</file>\n        <file>components/InputDialog.qml</file>\n        <file>components/ProcessingSplash.qml</file>\n        <file>components/ProgressBar.qml</file>\n        <file>components/StandardDialog.qml</file>\n        <file>components/DevicePassphraseDialog.qml</file>\n        <file>pages/Sign.qml</file>\n        <file>components/DaemonManagerDialog.qml</file>\n        <file>version.js</file>\n        <file>components/QRCodeScanner.qml</file>\n        <file>components/TextBlock.qml</file>\n        <file>components/RemoteNodeEdit.qml</file>\n        <file>pages/Keys.qml</file>\n        <file>images/appicon.ico</file>\n        <file>images/card-background-black0.png</file>\n        <file>images/card-background-black1.png</file>\n        <file>images/card-background-black2.png</file>\n        <file>images/card-background-black3.png</file>\n        <file>images/card-background-black4.png</file>\n        <file>images/card-background-black5.png</file>\n        <file>images/card-background-black6.png</file>\n        <file>images/card-background-black7.png</file>\n        <file>images/card-background-black0@2x.png</file>\n        <file>images/card-background-black1@2x.png</file>\n        <file>images/card-background-black2@2x.png</file>\n        <file>images/card-background-black3@2x.png</file>\n        <file>images/card-background-black4@2x.png</file>\n        <file>images/card-background-black5@2x.png</file>\n        <file>images/card-background-black6@2x.png</file>\n        <file>images/card-background-black7@2x.png</file>\n        <file>images/card-background-white.png</file>\n        <file>images/card-background-white@2x.png</file>\n        <file>images/moneroLogo_white.png</file>\n        <file>images/titlebarLogo.png</file>\n        <file>images/titlebarLogo@2x.png</file>\n        <file>pages/merchant/MerchantTitlebar.qml</file>\n        <file>images/menuButtonGradient.png</file>\n        <file>fonts/Roboto-Medium.ttf</file>\n        <file>fonts/Roboto-Regular.ttf</file>\n        <file>fonts/Roboto-Light.ttf</file>\n        <file>fonts/Roboto-Bold.ttf</file>\n        <file>fonts/RobotoMono-Medium.ttf</file>\n        <file>fonts/RobotoMono-Regular.ttf</file>\n        <file>fonts/RobotoMono-Light.ttf</file>\n        <file>fonts/RobotoMono-Bold.ttf</file>\n        <file>components/Style.qml</file>\n        <file>components/qmldir</file>\n        <file>components/InlineButton.qml</file>\n        <file>images/lightning.png</file>\n        <file>images/lightning@2x.png</file>\n        <file>images/logout.png</file>\n        <file>images/logout@2x.png</file>\n        <file>images/moneroIcon-28x28.png</file>\n        <file>images/moneroIcon-28x28@2x.png</file>\n        <file>images/lightning-white.png</file>\n        <file>images/lightning-white@2x.png</file>\n        <file>components/InputMulti.qml</file>\n        <file>components/LineEditMulti.qml</file>\n        <file>components/LabelButton.qml</file>\n        <file>components/LabelSubheader.qml</file>\n        <file>images/arrow-right-medium-white.png</file>\n        <file>images/arrow-right-medium-white@2x.png</file>\n        <file>images/rightArrow.png</file>\n        <file>images/rightArrow@2x.png</file>\n        <file>images/historyBorderRadius.png</file>\n        <file>components/CheckBox2.qml</file>\n        <file>components/TextPlain.qml</file>\n        <file>components/TextPlainArea.qml</file>\n        <file>js/TxUtils.js</file>\n        <file>images/warning.png</file>\n        <file>images/warning@2x.png</file>\n        <file>js/Windows.js</file>\n        <file>js/Utils.js</file>\n        <file>components/RadioButton.qml</file>\n        <file>pages/settings/Settings.qml</file>\n        <file>pages/settings/SettingsWallet.qml</file>\n        <file>pages/settings/SettingsNode.qml</file>\n        <file>pages/settings/SettingsLog.qml</file>\n        <file>pages/settings/SettingsLayout.qml</file>\n        <file>pages/settings/SettingsInfo.qml</file>\n        <file>components/WarningBox.qml</file>\n        <file>images/miningxmr.png</file>\n        <file>images/miningxmr@2x.png</file>\n        <file>pages/merchant/Merchant.qml</file>\n        <file>pages/merchant/MerchantCheckbox.qml</file>\n        <file>pages/merchant/MerchantTrackingList.qml</file>\n        <file>images/merchant/arrow_right.png</file>\n        <file>images/merchant/bg.png</file>\n        <file>images/merchant/input_box.png</file>\n        <file>fonts/FontAwesome/fa-brands-400.otf</file>\n        <file>fonts/FontAwesome/fa-regular-400.otf</file>\n        <file>fonts/FontAwesome/fa-solid-900.otf</file>\n        <file>fonts/FontAwesome/FontAwesome.qml</file>\n        <file>fonts/FontAwesome/Object.qml</file>\n        <file>fonts/FontAwesome/qmldir</file>\n        <file>wizard/WizardAskPassword.qml</file>\n        <file>wizard/WizardController.qml</file>\n        <file>wizard/WizardCreateWallet1.qml</file>\n        <file>wizard/WizardCreateWallet2.qml</file>\n        <file>wizard/WizardCreateWallet3.qml</file>\n        <file>wizard/WizardCreateWallet4.qml</file>\n        <file>wizard/WizardCreateWallet5.qml</file>\n        <file>wizard/WizardCreateDevice1.qml</file>\n        <file>wizard/WizardDaemonSettings.qml</file>\n        <file>wizard/WizardHeader.qml</file>\n        <file>wizard/WizardHome.qml</file>\n        <file>wizard/WizardLanguage.qml</file>\n        <file>wizard/WizardNav.qml</file>\n        <file>wizard/WizardWalletInput.qml</file>\n        <file>wizard/WizardRestoreWallet1.qml</file>\n        <file>wizard/WizardRestoreWallet2.qml</file>\n        <file>wizard/WizardRestoreWallet3.qml</file>\n        <file>wizard/WizardRestoreWallet4.qml</file>\n        <file>wizard/WizardSummary.qml</file>\n        <file>wizard/WizardSummaryItem.qml</file>\n        <file>wizard/WizardModeSelection.qml</file>\n        <file>wizard/WizardModeRemoteNodeWarning.qml</file>\n        <file>wizard/WizardModeBootstrap.qml</file>\n        <file>wizard/WizardMenuItem.qml</file>\n        <file>js/Wizard.js</file>\n        <file>components/LanguageSidebar.qml</file>\n        <file>images/world-flags-globe.png</file>\n        <file>images/restore-wallet-from-hardware@2x.png</file>\n        <file>images/restore-wallet-from-hardware.png</file>\n        <file>images/open-wallet-from-file@2x.png</file>\n        <file>images/open-wallet-from-file.png</file>\n        <file>images/open-wallet-from-file-mainnet@2x.png</file>\n        <file>images/open-wallet-from-file-mainnet.png</file>\n        <file>images/open-wallet-from-file-stagenet@2x.png</file>\n        <file>images/open-wallet-from-file-stagenet.png</file>\n        <file>images/open-wallet-from-file-testnet@2x.png</file>\n        <file>images/open-wallet-from-file-testnet.png</file>\n        <file>images/open-wallet-from-file-view-only@2x.png</file>\n        <file>images/open-wallet-from-file-view-only.png</file>\n        <file>images/open-wallet-from-file-trezor@2x.png</file>\n        <file>images/open-wallet-from-file-trezor.png</file>\n        <file>images/restore-wallet@2x.png</file>\n        <file>images/restore-wallet.png</file>\n        <file>images/create-wallet@2x.png</file>\n        <file>images/create-wallet.png</file>\n        <file>images/remote-node.png</file>\n        <file>images/remote-node@2x.png</file>\n        <file>images/local-node.png</file>\n        <file>images/local-node@2x.png</file>\n        <file>images/local-node-full.png</file>\n        <file>images/local-node-full@2x.png</file>\n        <file>wizard/WizardOpenWallet1.qml</file>\n        <file>images/arrow-right-in-circle.png</file>\n        <file>images/arrow-right-in-circle@2x.png</file>\n        <file>images/right.svg</file>\n        <file>images/middlePanelShadow.png</file>\n        <file>images/themes/white/titlebarLogo@2x.png</file>\n        <file>images/themes/white/titlebarLogo.png</file>\n        <file>images/fullscreen.svg</file>\n        <file>images/close.svg</file>\n        <file>images/minimize.svg</file>\n        <file>images/themes/white/close.svg</file>\n        <file>images/themes/white/fullscreen.svg</file>\n        <file>images/themes/white/minimize.svg</file>\n        <file>components/effects/ColorTransition.qml</file>\n        <file>components/effects/GradientBackground.qml</file>\n        <file>images/check-white.svg</file>\n        <file>images/copy.svg</file>\n        <file>images/edit.svg</file>\n        <file>images/arrow-right-in-circle-outline-medium-white.svg</file>\n        <file>images/tails-grey.png</file>\n        <file>components/AdvancedOptionsItem.qml</file>\n        <file>images/busy-indicator.png</file>\n        <file>images/busy-indicator@2x.png</file>\n        <file>images/success.png</file>\n        <file>images/success@2x.png</file>\n        <file>components/SuccessfulTxDialog.qml</file>\n        <file>components/TxConfirmationDialog.qml</file>\n        <file>images/ledgerNanoS.png</file>\n        <file>images/ledgerNanoSPlus.png</file>\n        <file>images/ledgerNanoX.png</file>\n        <file>images/ledgerStax.png</file>\n        <file>images/trezor3.png</file>\n        <file>images/trezor5.png</file>\n        <file>images/trezorT.png</file>\n        <file>images/trezorT@2x.png</file>\n        <file>qtquickcontrols2.conf</file>\n        <file>images/write-down.png</file>\n        <file>images/write-down-white.png</file>\n        <file>images/write-down@2x.png</file>\n        <file>images/write-down-white@2x.png</file>\n        <file>images/verify.png</file>\n        <file>images/verify-white.png</file>\n        <file>images/verify@2x.png</file>\n        <file>images/verify-white@2x.png</file>\n        <file>wizard/SeedListItem.qml</file>\n        <file>wizard/SeedListGrid.qml</file>\n        <file>wizard/template.pdf</file>\n    </qresource>\n</RCC>\n"
        },
        {
          "name": "qtquickcontrols2.conf",
          "type": "blob",
          "size": 0.0244140625,
          "content": "[Controls]\nStyle=Desktop\n"
        },
        {
          "name": "share",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "start-low-graphics-mode.bat",
          "type": "blob",
          "size": 0.08203125,
          "content": "@echo off\r\n\r\nset QMLSCENE_DEVICE=softwarecontext\r\n\r\nstart /b monero-wallet-gui.exe\r\n"
        },
        {
          "name": "translations",
          "type": "tree",
          "content": null
        },
        {
          "name": "wizard",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}