{
  "metadata": {
    "timestamp": 1736710032664,
    "page": 641,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "FIX94/Nintendont",
      "stars": 2019,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1474609375,
          "content": "*.d\n*.o\n*.bin\n*.elf\ncodehandler/*.h\nkernel/asm/*.h\nkernel/kernel.map\nloader/build/\nloader/data/kernel.zip\nnintendont/boot.dol\nfatfs/*.a\ncodehandler/*.h"
        },
        {
          "name": "BBA_Readme.md",
          "type": "blob",
          "size": 5.5478515625,
          "content": "Detailed Information about BBA Emulation    \n\nNintendont supports BBA Emulation in the following titles:  \nMario Kart: Double Dash!!  \nKirby Air Ride  \n1080 Avalanche  \nPSO Episode 1&2  \nPSO Episode III  \nHomeland    \n\nIt works just like a real BBA and works from both a USB LAN adapter and over WLAN.  \nTo enable BBA Emulation, simply go into nintendonts settings and enable it.  \nIf you are on a Wii, you can also switch the Network Profile as configued in your Wii Settings used for it.  \nThis can be useful if the profile cannot be selected as a default in the Wii Settings when it has no internet access and you just need LAN acccess.  \nOn WiiU this option is not available, but it is not needed because you can default a profile regardless of internet access or not.      \n\n\nGame specific notes:  \nFor Mario Kart, Kirby Air Ride and 1080 Avalance, when you want to connect to a real GameCube or Dolphin, first go into the LAN Mode on them.  \nAfter THEY start looking for other consoles, only THEN connect the other nintendont instances.  \nIf you do not follow that order, nintendont will not be able to see the other consoles, possibly due to a bug in the wii firmware.  \nImportant for PAL users: Both Mario Kart and 1080 Avalanche have to be set to the same 50/60Hz setting on all consoles on game boot in order to be found by other consoles, if one of your consoles is set to a different refresh rate, it wont be detected by the others when they search.  \nInterestingly, this does not apply for Kirby Air Ride which will find each other and work regardless of your 50/60Hz selection.  \nYou can only connect to other consoles in your local network unless you use a LAN tunneling program such as Xlink Kai just like on a real BBA.  \nAlso, while WLAN will work, it of course has the potential to run slower.  \nNote that 1080 Avalanche has a especially big problem with disconnecting very often, see helper cheats below to help its connection.    \n\nFor the Phantasy Star Online games you are able to connect to private servers such as schthack after creating an account on them.  \nAfter making an account, go into the games network settings, set DHCP to auto and do not disconnect, and then enter the DNS Server of the private server you want to join.  \nYou can also connect a USB Keyboard and use it ingame when you have native controls turned off without any further setup required.  \nWith native controls turned on it will instead accept a real GameCube Keyboard in the controller port of original Wiis if you happen to own one.  \nThe keyboard layout will be for a japanese keyboard by default, see helper cheats below if you want to use a different layout.    \n\nFor Homeland, you can use the game as both server and client when you enable the direct IP mode in game. Just set its network settings to DHCP auto just like PSO.  \nThen you should be able to play with it just like on a real GameCube or Dolphin.      \n\n\nHelper Cheats:  \nBelow you can find various cheats for 1080 Avalanche and the Phantasy Star Online games.  \nYou can convert those to a .gct file using this website: https://geckocodes.org/index.php?gct=  \nSimply add the codes, edit the PSO ones as required, download the .gct and put it named as \"game.gct\" next to your \"game.iso\" on whatever device you have your games on.  \nOf course, make sure to enable cheats in nintendonts settings so they have an effect.    \n\nNetwork codes for 1080 Avalanche:    \n\nThe following codes attempt to wait for the opponents input instead of immediately disconnecting when it is not present.  \nThis can potentially help your connection to disconnect less, note though the game will probably still disconnect a lot.  \n\n1080 Wait for Connection (NTSC-U) [FIX94]  \n04104604 4800009C  \n04104678 48000028    \n\n1080 Wait for Connection (PAL) [FIX94]  \n041051B0 4800009C  \n04105224 48000028    \n\n1080 Wait for Connection (NTSC-J) [FIX94]  \n041092F4 4800009C  \n04109368 48000028    \n\nKeyboard Layout cheats for the PSO games:    \n\nThe following codes change the keyboard layout the game will use.  \nFind the code for your version and change X in the second line to your layout:  \n0 - for original JP layout  \n1 - for US qwerty layout  \n2 - for french azerty layout  \n3 - for german qwertz layout  \n4 - for spanish qwerty layout    \n\nNTSC-U Codes:    \n\nPSO Keyboard Layout Modifier (Ep 1&2 v1.00 NTSC-U) [FIX94]  \n203EDC7C 88630001  \n043EDC7C 3860000X  \nE2000001 80008000    \n\nPSO Keyboard Layout Modifier (Ep 1&2 v1.01 NTSC-U) [FIX94]  \n203EDCD4 88630001  \n043EDCD4 3860000X  \nE2000001 80008000    \n\nPSO Keyboard Layout Modifier (Ep 1&2 Plus NTSC-U) [FIX94]  \n203F1558 88630001  \n043F1558 3860000X  \nE2000001 80008000    \n\nPSO Keyboard Layout Modifier (Ep III NTSC-U) [FIX94]  \n2039FAD4 88630001  \n0439FAD4 3860000X  \nE2000001 80008000    \n\nPAL Codes:    \n\nPSO Keyboard Layout Modifier (Ep 1&2 PAL) [FIX94]  \n203EFEC4 88630001  \n043EFEC4 3860000X  \nE2000001 80008000    \n\nPSO Keyboard Layout Modifier (Ep III PAL) [FIX94]  \n203A0978 88630001  \n043A0978 3860000X  \nE2000001 80008000    \n\nNTSC-J Codes:    \n\nPSO Keyboard Layout Modifier (Ep 1&2 v1.02 NTSC-J) [FIX94]  \n203EC9D8 88630001  \n043EC9D8 3860000X  \nE2000001 80008000    \n\nPSO Keyboard Layout Modifier (Ep 1&2 v1.03 NTSC-J) [FIX94]  \n203EF3B4 88630001  \n043EF3B4 3860000X  \nE2000001 80008000    \n\nPSO Keyboard Layout Modifier (Ep 1&2 Plus v1.04 NTSC-J) [FIX94]  \n203F13D8 88630001  \n043F13D8 3860000X  \nE2000001 80008000    \n\nPSO Keyboard Layout Modifier (Ep 1&2 Plus v1.05 NTSC-J) [FIX94]  \n203F1188 88630001  \n043F1188 3860000X  \nE2000001 80008000    \n\nPSO Keyboard Layout Modifier (Ep III NTSC-J) [FIX94]  \n2039EA84 88630001  \n0439EA84 3860000X  \nE2000001 80008000    \n\n"
        },
        {
          "name": "Build.bat",
          "type": "blob",
          "size": 0.087890625,
          "content": "@REM This batch file is still here for compatibility reasons.\nmake forced windows=1\npause\n"
        },
        {
          "name": "Build.sh",
          "type": "blob",
          "size": 0.0810546875,
          "content": "#!/bin/sh\n# This shell script is still here for compatibility reasons.\nmake forced\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 2.4765625,
          "content": "#---------------------------------------------------------------------------------\n# Clear the implicit built in rules\n#---------------------------------------------------------------------------------\n\n.SUFFIXES:\n#---------------------------------------------------------------------------------\nifeq ($(strip $(DEVKITPPC)),)\n$(error \"Please set DEVKITPPC in your environment. export DEVKITPPC=<path to>devkitPPC\")\nendif\nifeq ($(strip $(DEVKITARM)),)\n$(error \"Please set DEVKITARM in your environment. export DEVKITARM=<path to>devkitARM\")\nendif\n\nSUBPROJECTS := multidol kernel/asm resetstub \\\n\tfatfs/libfat-arm.a fatfs/libfat-ppc.a \\\n\tcodehandler kernel kernelboot \\\n\tloader/source/ppc/PADReadGC loader/source/ppc/IOSInterface loader\n.PHONY: all forced clean $(SUBPROJECTS)\n\nall: loader\nforced: clean all\n\nmultidol:\n\t@echo \" \"\n\t@echo \"Building Multi-DOL loader\"\n\t@echo \" \"\n\t$(MAKE) -C multidol\n\nkernel/asm:\n\t@echo \" \"\n\t@echo \"Building asm files\"\n\t@echo \" \"\n\t$(MAKE) -C kernel/asm\n\nresetstub:\n\t@echo \" \"\n\t@echo \"Building reset stub\"\n\t@echo \" \"\n\t$(MAKE) -C resetstub\n\nfatfs/libfat-arm.a:\n\t@echo \" \"\n\t@echo \"Building FatFS library for ARM\"\n\t@echo \" \"\n\t$(MAKE) -C fatfs -f Makefile.arm\n\nfatfs/libfat-ppc.a:\n\t@echo \" \"\n\t@echo \"Building FatFS library for PPC\"\n\t@echo \" \"\n\t$(MAKE) -C fatfs -f Makefile.ppc\n\ncodehandler:\n\t@echo \" \"\n\t@echo \"Building Nintendont code handler\"\n\t@echo \" \"\n\t$(MAKE) -C codehandler\n\nkernel: kernel/asm fatfs/libfat-arm.a codehandler\n\t@echo \" \"\n\t@echo \"Building Nintendont kernel\"\n\t@echo \" \"\n\t$(MAKE) -C kernel\n\nloader/source/ppc/PADReadGC:\n\t@echo \" \"\n\t@echo \"Building Nintendont PADReadGC\"\n\t@echo \" \"\n\t$(MAKE) -C loader/source/ppc/PADReadGC\n\nloader/source/ppc/IOSInterface:\n\t@echo \" \"\n\t@echo \"Building Nintendont IOSInterface\"\n\t@echo \" \"\n\t$(MAKE) -C loader/source/ppc/IOSInterface\n\nkernelboot:\n\t@echo \" \"\n\t@echo \"Building Nintendont kernelboot\"\n\t@echo \" \"\n\t$(MAKE) -C kernelboot\n\nloader: multidol resetstub fatfs/libfat-ppc.a kernel kernelboot loader/source/ppc/PADReadGC loader/source/ppc/IOSInterface\n\t@echo \" \"\n\t@echo \"Building Nintendont loader\"\n\t@echo \" \"\n\t$(MAKE) -C loader\n\nclean:\n\t@echo \" \"\n\t@echo \"Cleaning all subprojects...\"\n\t@echo \" \"\n\t$(MAKE) -C multidol clean\n\t$(MAKE) -C kernel/asm clean\n\t$(MAKE) -C resetstub clean\n\t$(MAKE) -C fatfs -f Makefile.arm clean\n\t$(MAKE) -C fatfs -f Makefile.ppc clean\n\t$(MAKE) -C codehandler clean\n\t$(MAKE) -C kernel clean\n\t$(MAKE) -C kernelboot clean\n\t$(MAKE) -C loader/source/ppc/PADReadGC clean\n\t$(MAKE) -C loader/source/ppc/IOSInterface clean\n\t$(MAKE) -C loader clean\n"
        },
        {
          "name": "NEWS.md",
          "type": "blob",
          "size": 6.830078125,
          "content": "# Nintendont Changes\n\n## v5.460\n\nChanges since v5.460:\n\n### Major Changes ###\n\n* Skip USB drives that don't have a valid MBR or UStealth MBR signature.\n  This usually happens on Wii U setups where the user has both a Wii U drive\n  and a FAT32 drive for Wii and GameCube. This allows the user to keep both\n  drives connected when running Nintendont.\n* Support for injected Wii VC on Wii U. This allows use of the Wii U GamePad\n  as Player 1 in addition to storing GameCube disc images on Wii U storage.\n* New option to skip the GameCube IPL.\n* Support for Wii Remote rumble when using Classic Controller.\n* New \"Game Info\" screen that shows information about the selected disc image.\n\n### Other Changes ###\n\n* More patches for various games, including timing and video mode fixes.\n* Fix BMX XXX 480p mode, again. (Broken since v4.428, commit e6e1c6a)\n* Datel AGP fixes.\n* The Game List now shows the filename of the selected game. This is useful\n  for distinguishing between e.g. different revisions of the same game.\n\n## v4.430\n\nChanges since v4.406:\n\n### Major Changes ###\n\n* Added support for Hermes uLoader compressed ISO (CISO) format disc images.\n  CISO saves space like shrunken GCMs, but it maintains the original file\n  offsets internally, which preserves the original disc read timing.\n* Ported libfat's disk cache to FatFS in the loader. This fixes a hang seen\n  on some systems when creating memory card images.\n* Use the bi2.bin region code instead of the game ID. This fixes region\n  detection for prototype games that use the RELSAB ID as well as mutli-language\n  PAL releases that use 'X', 'Y', and 'Z'.\n* Added a built-in MD5 verifier for 1:1 disc images. The MD5 verifier uses a\n  database based on GameTDB. The database must be downloaded manually on the\n  \"Update\" screen.\n\n### Other Changes ###\n\n* The internal updater was accidentally broken with the switch to FatFS\n  in v4.406.\n* Improved support for certain types of third-party Wii U Pro controllers.\n* Fixes for some patches, including the code handler.\n* Nintendont will no longer display any messages if it is loaded by an external\n  loader, unless an error occurs.\n* The loader's background image is now adjusted for 16:9 display if the Wii's\n  system widescreen setting is enabled.\n* Disc images no longer have to be in a subdirectory within /games/. For example,\n  you can have a file /games/Melee.iso and it will be detected. (A subdirectory\n  is still required for 2-disc games.)\n* File extensions .iso, .gcm, .cso, and .ciso are supported.\n* The game list now colorizes game names based on their file format:\n  * Black: 1:1 full rip\n  * Dark Brown: Shrunken GCM\n  * Green: Extracted FST\n  * Blue: CISO\n  * Purple: Multi-Game\n* Fixed an issue where pressing the Home button in the Settings menu after\n  changing a setting crashed the loader.\n* Grayed out settings that don't apply to the current system, e.g. Wii U\n  Widescreen on a regular Wii.\n* Added descriptions for some settings. When selected, the description will\n  appear in the lower-right quadrant of the screen.\n* Added more widescreen exceptions for games that have built-in widescreen settings.\n* Improved support for multi-game discs. Previously, Nintendont didn't handle\n  accessing data past 4 GB. Nintendont now uses 64-bit addressing for multi-game,\n  so multi-game images on exFAT partitions now work perfectly. Multi-game on\n  DVD-Rs is still somewhat problematic.\n* Reduced memory usage and improved performance when formatting a new memory card.\n* Improved usability in the Update menu.\n\n### Triforce Improvements ###\n\n* Rumble is now supported in Mario Kart Arcade GP 1 and 2.\n* New \"Triforce Arcade Mode\" option that disables free play.\n  Move the C stick in any direction to insert a coin.\n\n### Low-Level Changes ###\n\n* All subprojects now use Makefiles. The original Build.bat and Build.sh files\n  are now wrappers around `make`.\n* Split the game and settings menus into different functions. The current menu\n  state is saved within a context struct.\n\n## v4.406\n\nChanges since v3.304:\n\n### General Game Support ###\n\n* Added disc read limiting to emulate the proper speed of the disc drive.\n* ARStartDMA fixes for several games.\n* GXLoadTlut patch to fix \"rainbow sky\" bugs in Burnout and other games.\n* Audio streaming improvements.\n* Fixed some games that expect controllers to \"always\" be connected.\n* Wii Remotes automatically disconnect after 20 seconds if no extension controllers are present.\n* Timer patches to fix speed-up issues.\n* Allow discs to be taken out and put back in on Wii when using the disc drive.\n* Support for NTSC GameCube IPL v1.1 and v1.2.\n* Fix for SRAM not being updated when using real memory cards on Wii.\n* Option to modify video width and vertical video offset.\n* Option to use PAL50 when using a forced video mode.\n* Fixed auto-format of emulated memory card images for Japanese games.\n* Fixed checks for multi-game discs. (collision with Call of Duty: Finest Hour)\n* Fixed swapped audio streaming channels.\n* Force-disable DI encryption on Triforce games to prevent random shutdowns.\n\n### Game Fixes ###\n\n* Fixed audio in Majora's Mask. (Ocarina confirm; credits sequence)\n* Fixed the Japanese Pokémon Colosseum bonus disc.\n* Fixed Force PAL60 on Luigi's Mansion.\n* Fixed several demos that needed ARStartDMA exceptions.\n* Added a new DSP patch for Pikmin 1 (US) demo.\n* Fixed PAL50 issues on Ikaruga when not using the IPL.\n\n### Cheat Codes ###\n\n* Replaced kenobiwii with a cheat handler in the kernel, which saves memory and allows for more cheats to be used at once.\n\n### Widescreen ###\n\nNew widescreen hacks for:\n\n* Emulated N64 games (Ocarina of Time, Majora's Mask)\n* Metroid Prime\n* Metroid Prime 2: Echoes\n* NFL Blitz 2002, 2003, Pro\n* Skies of Arcadia Legends\n* Sonic Heroes (US, JP, 10/8/2003 prototype)\n* Sonic R (Sonic Gems Collection)\n* Super Monkey Ball\n\n### Force Progressive ###\n\nNew force progressive scan hacks for:\n\n* Capcom vs. SNK 2 EO (US)\n* Pac-Man World 3\n* SpongeBob SquarePants CFTKK\n\n### Triforce ###\n\nAdded support for:\n\n* F-Zero AX (Revs. C and E)\n* Virtua Striker 3 (JP, export)\n* Virtua Striker 4 (JP, export)\n* Virtua Striker 4 Ver 2006 (JP)\n* Gekitou Pro Yakyuu (Revs. B and C)\n\n### Storage Media ###\n\n* The GPT partition scheme can now be used on HDDs and SD cards.\n* Logical partitions are now detected.\n* Rebased to FatFS R0.12_p3. This is now used for both loader and kernel.\n* The exFAT file system is now supported.\n* The Drive Access LED option now indicates when writing to SD/USB as well as reading.\n* Timestamps are now set on emulated memory card images.\n\n### Loader ###\n\n* Rewrote the game list code to use less memory.\n* Use the correct video mode on PAL systems. (fixes red tint when using RGB)\n* Improved error messages if IOS58 could not be loaded.\n* General UI improvements, including the ability to go back from the Game List to Device Selection.\n\n### Other ###\n\n* Disable PAL IPL when running on Wii U, since Wii U doesn't support its video mode.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.857421875,
          "content": "### Nintendont\nA Wii Homebrew Project to play GC Games on Wii and vWii on Wii U\n\n### Features:\n* Works on Wii and Wii U (in vWii mode)\n* Full-speed loading from a USB device or an SD card.\n* Loads 1:1 and shrunken .GCM/.ISO disc images.\n* Loads games as extracted files (FST format)\n* Loads CISO-format disc images. (uLoader CISO format)\n* Memory card emulation\n* Play audio via disc audio streaming\n* Bluetooth controller support (Classic Controller (Pro), Wii U Pro Controller)\n* HID controller support via USB\n* Custom button layout when using HID controllers\n* Cheat code support\n* Changeable configuration of various settings\n* Reset/Power off via button combo (R + Z + Start) (R + Z + B + D-Pad Down)\n* Advanced video mode patching, force progressive and force 16:9 widescreen\n* Auto boot from loader\n* Disc switching\n* Use the official Nintendo GameCube controller adapter\n* BBA Emulation (see [BBA Emulation Readme](BBA_Readme.md))\n\n### Features: (Wii only)\n* Play retail discs\n* Play backups from writable DVD media (Old Wii only)\n* Use real memory cards\n* GBA-Link cable\n* WiiRd\n* Allow use of the Nintendo GameCube Microphone\n\n### What Nintendont will never support:\n* Game Boy Player\n\n### Quick Installation:\n1. Get the [loader.dol](loader/loader.dol?raw=true), rename it to boot.dol and put it in /apps/Nintendont/ along with the files [meta.xml](nintendont/meta.xml?raw=true) and [icon.png](nintendont/icon.png?raw=true).\n2. Copy your GameCube games to the /games/ directory. Subdirectories are optional for 1-disc games in ISO/GCM and CISO format.\n   * For 2-disc games, you should create a subdirectory /games/MYGAME/ (where MYGAME can be anything), then name disc 1 as \"game.iso\" and disc 2 as \"disc2.iso\".\n   * For extracted FST, the FST must be located in a subdirectory, e.g. /games/FSTgame/sys/boot.bin .\n3. Connect your storage device to your Wii or Wii U and start The Homebrew Channel.\n4. Select Nintendont.\n\n### Compiling:\nFor compile Nintendont yourself, get the following versions of the toolchain compiling PPC tools:\n* **devkitARM r53-1**\n* **devkitPPC r35-2**\n* **libOGC 1.8.23-1**\n\nThese versions can be downloaded here: https://www.mediafire.com/folder/j0juqb5vvd6z5/devkitPro_archives\n\nOn Windows, run the \"Build.bat\" batch script for build Nintendont.\n\nOn Unix, run the \"Build.sh\" script.\n\nPlease use these specific versions for compiling Nintendont, **because if you try to compile them on latest dkARM/dkPPC/libOGC, you'll get a lot of compiler warnings and your build will crash when attemping to return to Nintendont menu**, so be warned about that.\n\n### Notes\n* The Wii and Wii U SD card slot is known to be slow. If you're using an SD card and are having performance issues, consider either using a USB SD reader or a USB hard drive.\n* USB flash drives are known to be problematic.\n* Nintendont runs best with storage devices formatted with 32 KB clusters. (Use either FAT32 or exFAT.)\n"
        },
        {
          "name": "codehandler",
          "type": "tree",
          "content": null
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "controllerconfigs",
          "type": "tree",
          "content": null
        },
        {
          "name": "fatfs",
          "type": "tree",
          "content": null
        },
        {
          "name": "kernel",
          "type": "tree",
          "content": null
        },
        {
          "name": "kernelboot",
          "type": "tree",
          "content": null
        },
        {
          "name": "loader",
          "type": "tree",
          "content": null
        },
        {
          "name": "mem_map.txt",
          "type": "blob",
          "size": 2.4716796875,
          "content": "\r\nMEM1\r\n0x80000010-0x8000001C=EXI Fake Interrupt\r\n0x80001800=loader stub\r\n0x80002F00-0x00002F60=dvd interface\r\n0x00002F60=old memory card interface\r\n\r\nMEM2\r\n0x90000000-0x91000000=aram\r\n0x91000000-0x92000000=memcard emu - end point depends on memcard size\r\n0x92000000-0x92E80000=cache - start point depends on memcard size end point depends on Triforce\r\n0x92B80000-0x92E80000=(In Triforce mode this is reserved for DIMM memory)\r\n0x92E80000-0x92F00000=temporary di buffer (Also used by Patch code when processing DSP)\r\n\r\n0x92F00000-0x93000000=Nintendont kernel\r\n\r\n0x93000000-0x93003000=padread gc bin\r\n\r\n0x93003000=ios58 rev\r\n0x93003004=hid thread status\r\n0x93003008=old SIGetType Address\r\n0x9300300C=ISOShift (34-bit, rshifted by 2)\r\n\r\n0x93003010=pad rumble command chan0\r\n0x93003014=pad rumble command chan1\r\n0x93003018=pad rumble command chan2\r\n0x9300301C=pad rumble command chan3\r\n\r\n0x93003020=padread hid motor\r\n0x93003024=padread game setting\r\n0x93003040-0x93003050=padread bt motor\r\n0x93003050-0x93003060=padread bt channel free\r\n0x93003060-0x93003064=SIInited\r\n0x93003080-0x93003084=Triforce In Testmenu\r\n0x93003100-0x93003130=PadBuff\r\n\r\n0x93003130-0x93003190=pad barrel stuff\r\n0x930031a0-0x930031c0=ARStartDMA Debug str\r\n\r\n0x930031E0-0x93003200=tgc dol header\r\n\r\n0x93003420=reset status\r\n0x93003424=dol flush len\r\n0x93003428=dol flush addr\r\n\r\n0x93003440=hid load request\r\n0x93003460=hid controller ini\r\n\r\n0x93003500-0x93003600=Triforce game settings\r\n0x93004000-0x93005000=nincfg\r\n\r\n0x93005000-0x930050E8=hid controller positions\r\n0x930050F0-0x93005170=hid packet (may be bigger device dependent)\r\n\r\n0x93006000-0x93010000=IOS Interface\r\n\r\n0x93010000=old memory card buffer,old EXI Interrupt Handler Status\r\n0x93010010-0x93020010=loader and our reload stub\r\n0x93024000-0x93024060=memory interface\r\n0x93026400-0x93026500=serial interface\r\n0x93026500-0x930265A0=fake interrupts\r\n0x930265A0-0x93026600=audio stream information\r\n0x93060000-0x93100000=IOS Interface Data Buffers\r\n0x93100000-0x93150000=ipl fonts buffer (0x1aff00-0x1fff00)\r\n0x93160000-0x93160008=OSReport (patch_fwrite)\r\n0x931C0000=PSO PRS dol location\r\n0x931C0020=PSO PRS extract function location\r\n0x931C1800-0x931C3000=replacement memory for 0x80001800-0x80003000\r\n0x93200000=Cache FST Buffer\r\n0x93280000-0x932B3000=audio stream buffers\r\n0x932C0000-0x932C0482=conf_pads\r\n0x932C0490-0x932C0494=IRSensitivity\r\n0x932C0494-0x932C0498=SensorBarPosition\r\n0x932F0000-0x932F008F=BTPad\r\n\r\nHardware Registers\r\n0x0D80600C=EXI Command/Loop\r\n0x0D806010=EXI Command Address\r\n"
        },
        {
          "name": "multidol",
          "type": "tree",
          "content": null
        },
        {
          "name": "nintendont",
          "type": "tree",
          "content": null
        },
        {
          "name": "patched_demos.txt",
          "type": "blob",
          "size": 1.6923828125,
          "content": "MD5 hashes and disc versions of known problematic and already correctly patched demo .tgc files\nIf you find any other demo which makes problems let me know, it might require a patch\n\nLuigis Mansion USA Demo on Oct 01:\nb9cbbe5d953c8b650285a320feee7622\nPikmin USA Demo on January 02:\n832f7088c269380dbaad3d3041b0235f\nSunshine USA Demo on Aug 02, v7, v8:\n068907455d08423363bda25d80054735\nViewtiful Joe USA Demo on v12 and GC Preview Disc May 03:\na17fa7dd7b468c0f9946eab8d7a8b914\nPaper Mario 2 USA Demo on v17,v18:\n83545191da4f4328216165e472cbc79b\nPaper Mario TTYD USA Demo on v19,v20,v21,v22,v35:\ne3f1c385e74704cb2500e98ee3fc3564\nRE4 USA Demo on v20,v22,v24,v26,v29,v30 and RE4 Preview Disc:\n16d6abfaea4a9dcb54ca74c02d070649\nMario Baseball USA Demo on v27,v28,v29,v30,v31 and EUR Oct 05:\n61ba991ce2c2b2c9134e7b533792f93b\nPokemon XD USA Demo on v31,v32,v33:\n30965d577d9f4fc52e9b9c31bfd80975\n\nLuigis Mansion EUR Demo on March 02:\n9afe9084da7cddeaa999131baa792b1f\nPikmin EUR Demo on May 02:\n34de0f37180192700d2e4faae9986ab8\nSunshine EUR Demo on Sep, Nov, Dec 02:\nc29ecf5d3caffee6994ad9b53e29b798\nViewtiful Joe EUR Demo on September 03:\n3d3c3afcc878af7461a59551689167fc\nPokemon Colosseum EUR Demo on May 04:\n22e7be9eda92f4c8d9dd4fd2b3c663a2\nPaper Mario TTYD EUR Demo on Nov 04:\n8fcae7fa8480c4dd57780d62ae6570ce\nPokemon XD EUR Demo on October 05:\n4827706125b6064a4f02517b15171cb1\n\nPikmin JAP Demo on October 01:\nef1225b24719b9770abfa7b62a8b9b88\nSunshine JAP Demo on July 02 (D34J):\nd6f122bf3ccbf85d9ff38f6f5f9b9299\nOne Piece Treasure Battle JAP Demo on Nov 02 Disc B:\nc77bddc0c9cb60ba6438740407974a79\nViewtiful Joe JAP Demo on Summer 03:\nea5f6a5f738353bd4bb6da27f7cc2d84\nPaper Mario RPG JAP Demo on July 04:\n48156abea7f51773f500ba19a61e44a1\n"
        },
        {
          "name": "resetstub",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}