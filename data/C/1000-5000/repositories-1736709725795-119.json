{
  "metadata": {
    "timestamp": 1736709725795,
    "page": 119,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "F-Stack/f-stack",
      "stars": 3897,
      "defaultBranch": "dev",
      "files": [
        {
          "name": ".code.yml",
          "type": "blob",
          "size": 0.8095703125,
          "content": "branch:\n  trunk_name: \"master\"\n  branch_type_B:\n    personal_feature:\n      pattern: \"feature/*\"\n    bugfix:\n      pattern: \"bugfix/${userID}_${bugID}\"\n    single_release:\n      pattern: \"release\"\n    multiple_release:\n      pattern: \"release/[${versionname}][_${releasetype}[_${description}]]\"\n      releasetype: [rc,release]\n    hotfix_release:\n      pattern: \"hotfix/[${versionname}][_${description}]\"\n    tag:\n      pattern: \"*\"\n      versionnumber: \"*\"\n\nartifact:\n  - path: \"/\"\n    artifact_name: \"f-stack\"\n    artifact_type: \"lib\"\n    \nsource:\n  test_source:\n    filepath_regex: [\"/example/.*\"]\n\n  auto_generate_source:\n    filepath_regex: [\"/mk/.*\"]\n\n  third_party_source:\n    filepath_regex: [\"/freebsd/.*\", \"/app/.*\", \"/example/.*\"]\n\nfile :\n  - path: \"/.*\"\n    owners :  [\"patrickzeng\", \"fengbojiang\"]\n    owner_rule: 0\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.513671875,
          "content": "*~\n*.a\n*.core\n*.lo\n*.la\n*.o\n*.so\n*.swap\n*.pcap\ndpdk/x86_64-native-linuxapp-gcc/\ndpdk/build/\nexample/helloworld\nexample/helloworld_epoll\nlib/bus_if.h\nlib/cryptodev_if.c\nlib/cryptodev_if.h\nlib/device_if.h\nlib/filtered_predefined_macros.h\nlib/linker_if.c\nlib/linker_if.h\nlib/machine_include/\nlib/vnode_if.h\nlib/vnode_if_newproto.h\nlib/vnode_if_typedef.h\napp/nginx-1.11.10/objs/\napp/nginx-1.11.10/Makefile\napp/nginx-1.16.0/objs/\napp/nginx-1.16.0/Makefile\ndpdk/.ci/\ndpdk/.travis.yml\n.vscode/\n.code.yml\n.orange-ci.yml\nSMEDockerfile\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.5048828125,
          "content": "language: c\ncache:\n  directories:\n    dpdk\n\ncompiler:\n  - gcc\n\n# before_install:\n#   - sudo apt-get install -y coreutils build-essential git\n#   - sudo apt-get install -y linux-headers-`uname -r`\n\ninstall:\n  - sudo apt-get install -y coreutils build-essential git\n  - sudo apt-get install -y linux-headers-`uname -r`\n  - sudo apt-get install -y libnuma-dev\n\nscript:\n  - make -C dpdk install T=x86_64-native-linuxapp-gcc\n  - make -C lib CONF_CFLAGS=\"-Wno-unused-but-set-variable\"\n  - make -C tools\n  - make -C example\n"
        },
        {
          "name": "Bandwidth.png",
          "type": "blob",
          "size": 24.654296875,
          "content": null
        },
        {
          "name": "CPS.png",
          "type": "blob",
          "size": 12.3134765625,
          "content": null
        },
        {
          "name": "CPS_Reuseport.png",
          "type": "blob",
          "size": 25.0654296875,
          "content": null
        },
        {
          "name": "F-Stack.png",
          "type": "blob",
          "size": 48.09765625,
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 23.49609375,
          "content": "Main code of F-Stack is BSD 2-Clause licensed.\nCopyright (C) 2017-2022 THL A29 Limited, a Tencent company.\nAll rights reserved.\n\nOther Dependencies:\n------------------------------------------------------------------------------\nThis work contains some softwares from:\nDPDK(http://dpdk.org/),\nFreeBSD(https://www.freebsd.org/),\nNginx(http://nginx.org),\nRedis(https://github.com/antirez/redis),\nMicrothread framework(https://github.com/Tencent/MSEC/tree/master/spp_rpc/src/sync_frame/micro_thread).\n\nThis work uses some codes from:\nLibplebnet(https://gitorious.org/freebsd/kmm-sandbox/commit/fa8a11970bc0ed092692736f175925766bebf6af?p=freebsd:kmm-sandbox.git;a=tree;f=lib/libplebnet;h=ae446dba0b4f8593b69b339ea667e12d5b709cfb;hb=refs/heads/work/svn_trunk_libplebnet),\nLibuinet(https://github.com/pkelsey/libuinet),\ninih(https://github.com/benhoyt/inih).\n\n1.DPDK\n\nThe DPDK uses the Open Source BSD-3-Clause license for the core libraries and\ndrivers. The kernel components are naturally GPL-2.0 licensed.\n\n2.FreeBSD\n\nBSD 4-Clause, Copyright (c) 1992-2021 The FreeBSD Project. All rights reserved.\n\n3.Libplebnet\n\nBSD 2-Clause, Copyright (c) 2010-2011 Kip Macy.All rights reserved.\n\n4.Libuinet\n\nBSD 2-Clause, Copyright (c) 2015 Patrick Kelsey.All rights reserved.\n\n5.inih(a simple .INI file parser)\n\nBSD 3-Clause, Copyright (c) 2009, Ben Hoyt.All rights reserved.\n\n6.Nginx\n\nBSD 2-Clause, Copyright (C) 2002-2021 Igor Sysoev\nCopyright (C) 2011-2023 Nginx, Inc.\nAll rights reserved.\n\n7.Redis\n\nBSD 3-Clause, Copyright (c) 2006-2015, Salvatore Sanfilippo.All rights reserved.\n\n8.Microthread framework\n\nGPL-2.0, Copyright (C) 2016 THL A29 Limited, a Tencent company.All rights reserved.\n\n\nTerms of the BSD 2-Clause License:\n-----------------------------------------------------------------------------\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\nTerms of the BSD 3-Clause License:\n-----------------------------------------------------------------------------\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice,\nthis list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation and/or\nother materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors\nmay be used to endorse or promote products derived from this software without\nspecific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\nTerms of the BSD 4-Clause License:\n-----------------------------------------------------------------------------\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n\n3. All advertising materials mentioning features or use of this software\n   must display the following acknowledgement:\nThis product includes software developed by the University of\nCalifornia, Berkeley and its contributors.\n\n4. Neither the name of the University nor the names of its contributors\n   may be used to endorse or promote products derived from this software\n   without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\nOR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGE.\n\n\nTerms of the GPL-2.0 License:\n-------------------------------------------------------------------------------\nGNU GENERAL PUBLIC LICENSE\nVersion 2, June 1991\n\nCopyright (C) 1989, 1991 Free Software Foundation, Inc.\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n\nEveryone is permitted to copy and distribute verbatim copies\nof this license document, but changing it is not allowed.\n\nPreamble\n\nThe licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users. This General Public License applies to most of the Free Software Foundation's software and to any other program whose authors commit to using it. (Some other Free Software Foundation software is covered by the GNU Library General Public License instead.) You can apply it to your programs, too.\n\nWhen we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things.\n\nTo protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the software, or if you modify it.\n\nFor example, if you distribute copies of such a program, whether gratis or for a fee, you must give the recipients all the rights that you have. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights.\n\nWe protect your rights with two steps: (1) copyright the software, and (2) offer you this license which gives you legal permission to copy, distribute and/or modify the software.\n\nAlso, for each author's protection and ours, we want to make certain that everyone understands that there is no warranty for this free software. If the software is modified by someone else and passed on, we want its recipients to know that what they have is not the original, so that any problems introduced by others will not reflect on the original authors' reputations.\n\nFinally, any free program is threatened constantly by software patents. We wish to avoid the danger that redistributors of a free program will individually obtain patent licenses, in effect making the program proprietary. To prevent this, we have made it clear that any patent must be licensed for everyone's free use or not licensed at all.\n\nThe precise terms and conditions for copying, distribution and modification follow.\n\nTERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n0. This License applies to any program or other work which contains a notice placed by the copyright holder saying it may be distributed under the terms of this General Public License. The \"Program\", below, refers to any such program or work, and a \"work based on the Program\" means either the Program or any derivative work under copyright law: that is to say, a work containing the Program or a portion of it, either verbatim or with modifications and/or translated into another language. (Hereinafter, translation is included without limitation in the term \"modification\".) Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running the Program is not restricted, and the output from the Program is covered only if its contents constitute a work based on the Program (independent of having been made by running the Program). Whether that is true depends on what the Program does.\n\n1. You may copy and distribute verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and give any other recipients of the Program a copy of this License along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee.\n\n2. You may modify your copy or copies of the Program or any portion of it, thus forming a work based on the Program, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions:\n\na) You must cause the modified files to carry prominent notices stating that you changed the files and the date of any change.\n\nb) You must cause any work that you distribute or publish, that in whole or in part contains or is derived from the Program or any part thereof, to be licensed as a whole at no charge to all third parties under the terms of this License.\n\nc) If the modified program normally reads commands interactively when run, you must cause it, when started running for such interactive use in the most ordinary way, to print or display an announcement including an appropriate copyright notice and a notice that there is no warranty (or else, saying that you provide a warranty) and that users may redistribute the program under these conditions, and telling the user how to view a copy of this License. (Exception: if the Program itself is interactive but does not normally print such an announcement, your work based on the Program is not required to print an announcement.)\nThese requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Program, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Program, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program with the Program (or with a work based on the Program) on a volume of a storage or distribution medium does not bring the other work under the scope of this License.\n\n3. You may copy and distribute the Program (or a work based on it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you also do one of the following:\n\na) Accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or,\n\nb) Accompany it with a written offer, valid for at least three years, to give any third party, for a charge no more than your cost of physically performing source distribution, a complete machine-readable copy of the corresponding source code, to be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange; or,\n\nc) Accompany it with the information you received as to the offer to distribute corresponding source code. (This alternative is allowed only for noncommercial distribution and only if you received the program in object code or executable form with such an offer, in accord with Subsection b above.)\nThe source code for a work means the preferred form of the work for making modifications to it. For an executable work, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the executable. However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable.\n\nIf distribution of executable or object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place counts as distribution of the source code, even though third parties are not compelled to copy the source along with the object code.\n\n4. You may not copy, modify, sublicense, or distribute the Program except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense or distribute the Program is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance.\n\n5. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Program or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Program (or any work based on the Program), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Program or works based on it.\n\n6. Each time you redistribute the Program (or any work based on the Program), the recipient automatically receives a license from the original licensor to copy, distribute or modify the Program subject to these terms and conditions. You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License.\n\n7. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Program at all. For example, if a patent license would not permit royalty-free redistribution of the Program by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply and the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system, which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice.\n\nThis section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License.\n\n8. If the distribution and/or use of the Program is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Program under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License.\n\n9. The Free Software Foundation may publish revised and/or new versions of the General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number. If the Program specifies a version number of this License which applies to it and \"any later version\", you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of this License, you may choose any version ever published by the Free Software Foundation.\n\n10. If you wish to incorporate parts of the Program into other free programs whose distribution conditions are different, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally.\n\nNO WARRANTY\n\n11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n\nEND OF TERMS AND CONDITIONS\n\nHow to Apply These Terms to Your New Programs\n\nIf you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.\n\nTo do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively convey the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found.\n\nOne line to give the program's name and a brief idea of what it does.\nCopyright (C) <year> <name of author>\n\nThis program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this when it starts in an interactive mode:\n\nGnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details.\nThe hypothetical commands `show w' and `show c' should show the appropriate parts of the General Public License. Of course, the commands you use may be called something other than `show w' and `show c'; they could even be mouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your school, if any, to sign a \"copyright disclaimer\" for the program, if necessary. Here is a sample; alter the names:\n\nYoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\nsignature of Ty Coon, 1 April 1989\nTy Coon, President of Vice\nThis General Public License does not permit incorporating your program into proprietary programs. If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library. If this is what you want to do, use the GNU Library General Public License instead of this License.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.525390625,
          "content": "[![Build Status](https://travis-ci.org/F-Stack/f-stack.svg?branch=master)](https://travis-ci.org/F-Stack/f-stack)\n\n# F-Stack\n![](F-Stack.png)\n\n## Introduction\n\nWith the rapid development of Network Interface Cards the poor performance of data packet processing with the Linux kernel has become the bottleneck in modern network systems. Yet, the increasing demands of the Internet's growth demand a higher performant network processing solution. Kernel bypass has emerged to catch more and more attention. There are various similar technologies such as: DPDK, NETMAP and PF_RING. The main idea of kernel bypass is that Linux is only used to deal with control flow; all data streams are processed in user space. Therefore, kernel bypass can avoid performance bottlenecks caused by kernel packet copying, thread scheduling, system calls, and interrupts. Furthermore, kernel bypass can achieve higher performance with multi-optimizing methods. Within various techniques, DPDK has been widely used because of it's more thorough isolation from kernel scheduling and active community support.\n\n[F-Stack](http://www.f-stack.org/?from=github) is an open source high performant network framework based on DPDK with the following characteristics:\n\n1. Ultra high network performance which the network card can achieve under full load: 10 million concurrent connections, 5 million RPS, 1 million CPS.\n2. Transplant FreeBSD 11.01 user space stack, which provides a complete stack function, and cut a great amount of irrelevant features. This greatly enhances network performance.\n3. Support Nginx, Redis, and other mature applications. Services can easily use F-Stack.\n4. Easy to extend with multi-process architecture.\n5. Provides micro thread interface. Various applications with stateful applications can easily use F-Stack to get high performance without processing complex asynchronous logic.\n6. Provide an Epoll/Kqueue interface that allow many kinds of applications to easily use F-Stack.\n\n## History\n\nTo deal with the increasingly severe DDoS attacks the authorized DNS server of Tencent Cloud DNSPod switched from Gigabit Ethernet to 10-Gigabit at the end of 2012. We faced several options: one is to continue to use the original network stack in the Linux kernel, another is to use kernel bypass techniques. After several rounds of investigation; we finally chose to develop our next generation of DNS server based on DPDK. The reason is DPDK provides ultra-high performance and can be seamlessly extended to 40G, or even 100G NIC, in the future.\n\nAfter several months of development and testing, DKDNS, high-performance DNS server based on DPDK officially released in October 2013. It's capable of achieving up to 11 million QPS with a single 10GE port and 18.2 million QPS with two 10GE ports. And then we developed a user-space TCP/IP stack called F-Stack that can process 0.6 million RPS with a single 10GE port.\n\nWith the fast growth of Tencent Cloud more and more of our services needed higher network access performance. Meanwhile, F-Stack was continuing to improve, being driven by our business growth, and, ultimately developed into a general network access framework. But our initial TCP/IP stack couldn't meet the needs of these services. Continuing to develop and maintain a complete high performance network stack would have been too expensive. After evaluating several plans; we finally determined to port FreeBSD's (13.0 stable) TCP/IP stack into F-Stack. Not only does this allow us to stop reinventing the wheel, we can take advantage of the the improvements the FreeBSD community will bring in the future. Thanks to [libplebnet](https://gitorious.org/freebsd/kmm-sandbox/commit/fa8a11970bc0ed092692736f175925766bebf6af?p=freebsd:kmm-sandbox.git;a=tree;f=lib/libplebnet;h=ae446dba0b4f8593b69b339ea667e12d5b709cfb;hb=refs/heads/work/svn_trunk_libplebnet) and [libuinet](https://github.com/pkelsey/libuinet) this work became a lot easier.\n\nWith the rapid development of all kinds of applications, in order to help different APPs quick and easily use F-Stack, F-Stack has integrated Nginx, Redis and other commonly used APPs, and a micro thread framework, and provides a standard Epoll/Kqueue interface.\n\nCurrently, besides authorized DNS server of DNSPod, there are various products in Tencent Cloud has used the F-Stack, such as HttpDNS (D+), COS access module, CDN access module, etc..\n\n## Quick Start\n\n    # clone F-Stack\n    mkdir -p /data/f-stack\n    git clone https://github.com/F-Stack/f-stack.git /data/f-stack\n\n    # Install libnuma-dev\n    yum install numactl-devel          # on Centos\n    #sudo apt-get install libnuma-dev  # on Ubuntu\n\n    pip3 install pyelftools --upgrade\n    # Install python and modules for running DPDK python scripts\n    pip3 install pyelftools --upgrade # RedHat/Centos\n    sudo apt install python # On ubuntu\n    #sudo pkg install python # On FreeBSD\n\n    # Install dependencies (FreeBSD only)\n    #pkg install meson pkgconf py38-pyelftools\n\n    cd f-stack\n    # Compile DPDK\n    cd dpdk/\n    # re-enable kni now, to remove kni later\n    # disable crypto/openssl,net/ice for Redhat/Centos 7.x.\n    meson -Denable_kmods=true -Ddisable_libs=flow_classify -Ddisable_drivers=crypto/openssl,net/ice build\n    ninja -C build\n    ninja -C build install\n\n    # Set hugepage (Linux only)\n    # single-node system\n    echo 1024 > /sys/kernel/mm/hugepages/hugepages-2048kB/nr_hugepages\n\n    # or NUMA (Linux only)\n    echo 1024 > /sys/devices/system/node/node0/hugepages/hugepages-2048kB/nr_hugepages\n    echo 1024 > /sys/devices/system/node/node1/hugepages/hugepages-2048kB/nr_hugepages\n\n    # Using Hugepage with the DPDK (Linux only)\n    mkdir /mnt/huge\n    mount -t hugetlbfs nodev /mnt/huge\n\n    # Close ASLR; it is necessary in multiple process (Linux only)\n    echo 0 > /proc/sys/kernel/randomize_va_space\n\n    # Offload NIC\n    # For Linux:\n    modprobe uio\n    insmod /data/f-stack/dpdk/build/kernel/linux/igb_uio/igb_uio.ko\n    insmod /data/f-stack/dpdk/build/kernel/linux/kni/rte_kni.ko carrier=on # carrier=on is necessary, otherwise need to be up `veth0` via `echo 1 > /sys/class/net/veth0/carrier`\n    python dpdk-devbind.py --status\n    ifconfig eth0 down\n    python dpdk-devbind.py --bind=igb_uio eth0 # assuming that use 10GE NIC and eth0\n\n    # For FreeBSD:\n    # Refer DPDK FreeBSD guide to set tunables in /boot/loader.conf\n    # Below is an example used for our testing machine\n    #echo \"hw.nic_uio.bdfs=\\\"2:0:0\\\"\" >> /boot/loader.conf\n    #echo \"hw.contigmem.num_buffers=1\" >> /boot/loader.conf\n    #echo \"hw.contigmem.buffer_size=1073741824\" >> /boot/loader.conf\n    #kldload contigmem\n    #kldload nic_uio\n\n    # On Ubuntu, use gawk instead of the default mawk.\n    #sudo apt-get install gawk  # or execute `sudo update-alternatives --config awk` to choose gawk.\n\n    # Install dependencies for F-Stack\n    sudo apt install gcc make libssl-dev                            # On ubuntu\n    #sudo pkg install gcc gmake openssl pkgconf libepoll-shim       # On FreeBSD\n\n    # Upgrade pkg-config while version < 0.28\n    #cd /data\n    #wget https://pkg-config.freedesktop.org/releases/pkg-config-0.29.2.tar.gz\n    #tar xzvf pkg-config-0.29.2.tar.gz\n    #cd pkg-config-0.29.2\n    #./configure --with-internal-glib\n    #make\n    #make install\n    #mv /usr/bin/pkg-config /usr/bin/pkg-config.bak\n    #ln -s /usr/local/bin/pkg-config /usr/bin/pkg-config\n \n    # Compile F-Stack\n    export FF_PATH=/data/f-stack\n    export PKG_CONFIG_PATH=/usr/lib64/pkgconfig:/usr/local/lib64/pkgconfig:/usr/lib/pkgconfig\n    cd /data/f-stack/lib/\n    make    # On Linux\n    #gmake   # On FreeBSD\n\n    # Install F-STACK\n    # libfstack.a will be installed to /usr/local/lib\n    # ff_*.h will be installed to /usr/local/include\n    # start.sh will be installed to /usr/local/bin/ff_start\n    # config.ini will be installed to /etc/f-stack.conf\n    make install    # On Linux\n    #gmake install   # On FreeBSD\n\n#### Nginx\n\n    cd app/nginx-1.25.2\n    bash ./configure --prefix=/usr/local/nginx_fstack --with-ff_module\n    make\n    make install\n    cd ../..\n    /usr/local/nginx_fstack/sbin/nginx\n\nfor more details, see [nginx guide](https://github.com/F-Stack/f-stack/blob/master/doc/F-Stack_Nginx_APP_Guide.md).\n\n#### Redis\n\n    cd app/redis-6.2.6/deps/jemalloc\n    ./autogen.sh \n    cd ../..\n    make\n    make install\n\n  If KNI is enabled in the configuration file, you should create a virtual NIC after F-Stack started, and set the ipaddr, netmask, mac addr, route table, etc. These addrs must be same with F-Stack.\n\n  If you don't have another management port, you should execute a script like this.\n\n    /usr/local/nginx_fstack/sbin/nginx\n    sleep 10\n    ifconfig veth0 <ipaddr>  netmask <netmask>  broadcast <broadcast> hw ether <mac addr>\n    route add -net 0.0.0.0 gw <gateway> dev veth0\n    echo 1 > /sys/class/net/veth0/carrier # if `carrier=on` not set while `insmod rte_kni.ko` \n    # route add -net ...  # other route rules\n\n## Nginx Testing Result\n\nTest environment\n\n    NIC:Intel Corporation Ethernet Controller XL710 for 40GbE QSFP+\n    CPU:Intel(R) Xeon(R) CPU E5-2670 v3 @ 2.30GHz(NUMA)\n    Memory：128G\n    OS:CentOS Linux release 7.2 (Final)\n    Kernel：3.10.104-1-tlinux2-0041.tl2\n\nNginx uses linux kernel's default config, all soft interrupts are working in the first CPU core.\n\nNginx si means modify the smp_affinity of every IRQ, so that the decision to service an interrupt with a particular CPU is made at the hardware level, with no intervention from the kernel.\n\nNginx Reuseport means enable \"reuseport\" in `nginx.conf`.\n\nNginx_FStack's 600 cache bytes' body was returned directly in nginx.conf.\n\nAll of these test cases use CPUs' physical cores.\n\n\nCPS (Connection:close, Small data packet)  test result\n![](CPS.png)\n\nCPS_Reuseport (Connection:close, Small data packet)  test result, This test case runs in a different test environment\n![](CPS_Reuseport.png)\n\nRPS (Connection:Keep-Alive, Small data packet) test data\n![](RPS.png)\n\nBandwidth (Connection:Keep-Alive, 3.7k bytes data packet) test data\n![](Bandwidth.png)\n\n## Licenses\nSee [LICENSE](LICENSE)\n\n## Join us\n\nTencent Cloud F-Stack team developed F-Stack which is a general network framework based on DPDK and provides ultra high network performance. We are here looking for more and more talented people with great passion on technology to join us. You would have the chance to work with brightest minds on this planet and help Tencent cloud and F-stack continuously evolve. Send us your resume or refer your friend to us if you are interested in joining us.\n\nOpen Positions: Software engineer(C/C++), Web developer, IOS/Android developer, Product Manager, Operating Manager, etc.\nContact: Please send your resume to [us](mailto:fengbojiang@tencent.com)\n"
        },
        {
          "name": "RPS.png",
          "type": "blob",
          "size": 29.185546875,
          "content": null
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.0048828125,
          "content": "1.24\n"
        },
        {
          "name": "adapter",
          "type": "tree",
          "content": null
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.ini",
          "type": "blob",
          "size": 8.482421875,
          "content": "[dpdk]\n# Hexadecimal bitmask of cores to run on.\nlcore_mask=1\n\n# Number of memory channels.\nchannel=4\n\n# Specify base virtual address to map.\n#base_virtaddr=0x7f0000000000\n\n# Promiscuous mode of nic, defualt: enabled.\npromiscuous=1\nnuma_on=1\n\n# TX checksum offload skip, default: disabled.\n# We need this switch enabled in the following cases:\n# -> The application want to enforce wrong checksum for testing purposes\n# -> Some cards advertize the offload capability. However, doesn't calculate checksum.\ntx_csum_offoad_skip=0\n\n# TCP segment offload, default: disabled.\ntso=0\n\n# HW vlan strip, default: enabled.\nvlan_strip=1\n\n# Set [vlanN]'s addrs like [portN] later\n# the format is same as port_list\n# Set vlan filter id, to enable L3/L4 RSS below vlan hdr is not enable after f-stack-1.22.\nvlan_filter=1,2,4-6\n\n# sleep when no pkts incomming\n# unit: microseconds\nidle_sleep=0\n\n# sent packet delay time(0-100) while send less than 32 pkts.\n# default 100 us.\n# if set 0, means send pkts immediately.\n# if set >100, will dealy 100 us.\n# unit: microseconds\npkt_tx_delay=100\n\n# use symmetric Receive-side Scaling(RSS) key, default: disabled.\nsymmetric_rss=0\n\n# PCI device enable list.\n# And driver options\n#allow=02:00.0\n# for multiple PCI devices\n#allow=02:00.0,03:00.0\n\n# enabled port list\n#\n# EBNF grammar:\n#\n#    exp      ::= num_list {\",\" num_list}\n#    num_list ::= <num> | <range>\n#    range    ::= <num>\"-\"<num>\n#    num      ::= '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9'\n#\n# examples\n#    0-3       ports 0, 1,2,3 are enabled\n#    1-3,4,7   ports 1,2,3,4,7 are enabled\n#\n# If use bonding, shoule config the bonding port id in port_list\n# and not config slave port id in port_list\n# such as, port 0 and port 1 trank to a bonding port 2,\n# should set `port_list=2` and config `[port2]` section\n\nport_list=0\n\n# Number of vdev.\nnb_vdev=0\n\n# Number of bond.\nnb_bond=0\n\n# log level for dpdk, optional\n# log_level=0\n\n# Each core write into own pcap file, which is open one time, close one time if enough.\n# Support dump the first snaplen bytes of each packet.\n# if pcap file is lager than savelen bytes, it will be closed and next file was dumped into.\n[pcap]\nenable=0\nsnaplen=96\nsavelen=16777216\nsavepath=.\n\n# Port config section\n# Correspond to dpdk.port_list's index: port0, port1...\n[port0]\naddr=192.168.1.2\nnetmask=255.255.255.0\nbroadcast=192.168.1.255\ngateway=192.168.1.1\n# set interface name, Optional parameter.\n#if_name=eno7\n\n# IPv6 net addr, Optional parameters.\n#addr6=ff::02\n#prefix_len=64\n#gateway6=ff::01\n\n# Multi virtual IPv4/IPv6 net addr, Optional parameters.\n#       `vip_ifname`: default `f-stack-x`\n#       `vip_addr`: Separated by semicolons, MAX number 64;\n#                   Only support netmask 255.255.255.255, broadcast x.x.x.255 now, hard code in `ff_veth_setvaddr`.\n#       `ipfw_pr`: Set simplest policy routing,  Optional parameters.\n#                  Such as the cmd `ff_ipfw -P 0 add 100 setfib 0 ip from 192.168.0.0/24 to any out`\n#                  can set parameter`192.168.0.0 255.255.255.0`, cidr and netmask separated by space.\n#                  Multi cidr separated by semicolons.\n#                  IPv4 only now, and if you want set more complex policy routing, should use tool `ff_ipfw`.\n#       `vip_addr6`: Separated by semicolons, MAX number 64.\n#       `vip_prefix_len`: All addr6 use the same prefix now, default 64.\n#vip_ifname=lo0\n#vip_addr=192.168.0.3;192.168.0.4;192.168.0.5;192.168.0.6\n#ipfw_pr=192.168.0.0 255.255.255.0;192.168.10.0 255.255.255.0\n#vip_addr6=ff::03;ff::04;ff::05;ff::06;ff::07\n#vip_prefix_len=64\n\n# lcore list used to handle this port\n# the format is same as port_list\n#lcore_list=0\n\n# bonding slave port list used to handle this port\n# need to config while this port is a bonding port\n# the format is same as port_list\n#slave_port_list=0,1\n\n# Vlan config section, Must set after all [portN]\n# NOTE1: Must enable dpdk.vlan_filter first, and match it.\n# NOTE2: If enable vlan config, all [PortN] config will be ignored!\n#[vlan1]\n#portid=0\n#addr=192.169.0.2\n#netmask=255.255.255.0\n#broadcast=192.169.0.255\n#gateway=192.169.0.1\n#\n#vip_addr=192.169.0.3;192.169.0.4;192.169.0.5;192.169.0.6\n#ipfw_pr=192.169.0.0 255.255.255.0;192.169.10.0 255.255.255.0\n#\n#[vlan2]\n#portid=0\n#addr=192.169.1.2\n#netmask=255.255.255.0\n#broadcast=192.169.1.255\n#gateway=192.169.1.1\n#\n#vip_addr=192.169.1.3;192.169.1.4;192.169.1.5;192.169.1.6\n#ipfw_pr=192.169.1.0 255.255.255.0;192.169.11.0 255.255.255.0\n#\n#[vlan4]\n#portid=0\n#addr=192.169.2.2\n#netmask=255.255.255.0\n#broadcast=192.169.2.255\n#gateway=192.169.2.1\n#\n#vip_addr=192.169.2.3;192.169.2.4;192.169.2.5;192.169.2.6\n#ipfw_pr=192.169.2.0 255.255.255.0;192.169.12.0 255.255.255.0\n#\n#[vlan5]\n#portid=0\n#addr=192.169.3.2\n#netmask=255.255.255.0\n#broadcast=192.169.3.255\n#gateway=192.169.3.1\n#\n#addr6=fe::32\n#prefix_len=64\n#gateway6=fe::31\n#\n#vip_addr=192.169.3.3;192.169.3.4;192.169.3.5;192.169.3.6\n#ipfw_pr=192.169.3.0 255.255.255.0;192.169.13.0 255.255.255.0\n#vip_addr6=fe::33;fe::34;fe::35;fe::36;fe::37\n#vip_prefix_len=64\n\n# Vdev config section\n# orrespond to dpdk.nb_vdev's index: vdev0, vdev1...\n#    iface : Shouldn't set always.\n#    path : The vuser device path in container. Required.\n#    queues : The max queues of vuser. Optional, default 1, greater or equal to the number of processes.\n#    queue_size : Queue size.Optional, default 256.\n#    mac : The mac address of vuser. Optional, default random, if vhost use phy NIC, it should be set to the phy NIC's mac.\n#    cq : Optional, if queues = 1, default 0; if queues > 1 default 1.\n#[vdev0]\n##iface=/usr/local/var/run/openvswitch/vhost-user0\n#path=/var/run/openvswitch/vhost-user0\n#queues=1\n#queue_size=256\n#mac=00:00:00:00:00:01\n#cq=0\n\n# bond config section\n# See http://doc.dpdk.org/guides/prog_guide/link_bonding_poll_mode_drv_lib.html\n#[bond0]\n#mode=4\n#slave=0000:0a:00.0,slave=0000:0a:00.1\n#primary=0000:0a:00.0\n#mac=f0:98:38:xx:xx:xx\n## opt argument\n#socket_id=0\n#xmit_policy=l23\n#lsc_poll_period_ms=100\n#up_delay=10\n#down_delay=50\n\n# Kni config: if enabled and method=reject,\n# all packets that do not belong to the following tcp_port and udp_port\n# will transmit to kernel; if method=accept, all packets that belong to\n# the following tcp_port and udp_port will transmit to kernel.\n#\ttype: exception path type, 0 means kni(must set meson -Ddisable_libs=flow_classif to re-enable kni in DPDK first), 1 means virtio_user(linux only)\n#[kni]\n#type=1\n#enable=1\n#method=reject\n# The format is same as port_list\n#tcp_port=80,443\n#udp_port=53\n# KNI ratelimit value, default: 0, means disable ratelimit.\n# example:\n# The total speed limit for a single process entering the kni ring is 10,000 QPS,\n# 1000 QPS for general packets, 9000 QPS for console packets (ospf/arp, etc.)\n# The total speed limit for kni forwarding to the kernel is 20,000 QPS.\n#console_packets_ratelimit=0\n#general_packets_ratelimit=0\n#kernel_packets_ratelimit=0\n\n# FreeBSD network performance tuning configurations.\n# Most native FreeBSD configurations are supported.\n[freebsd.boot]\n# If use rack/bbr which depend HPTS, you should set a greater value of hz, such as 1000000 means a tick is 1us.\nhz=100\n\n# Block out a range of descriptors to avoid overlap\n# with the kernel's descriptor space.\n# You can increase this value according to your app.\nfd_reserve=1024\n\nkern.ipc.maxsockets=262144\n\nnet.inet.tcp.syncache.hashsize=4096\nnet.inet.tcp.syncache.bucketlimit=100\n\nnet.inet.tcp.tcbhashsize=65536\n\nkern.ncallout=262144\n\nkern.features.inet6=1\n\n[freebsd.sysctl]\nkern.ipc.somaxconn=32768\nkern.ipc.maxsockbuf=16777216\n\nnet.add_addr_allfibs=1\n\nnet.link.ether.inet.maxhold=5\n\nnet.inet.tcp.fast_finwait2_recycle=1\nnet.inet.tcp.sendspace=16384\nnet.inet.tcp.recvspace=8192\n#net.inet.tcp.nolocaltimewait=1\nnet.inet.tcp.cc.algorithm=cubic\nnet.inet.tcp.sendbuf_max=16777216\nnet.inet.tcp.recvbuf_max=16777216\nnet.inet.tcp.sendbuf_auto=1\nnet.inet.tcp.recvbuf_auto=1\nnet.inet.tcp.sendbuf_inc=16384\n#net.inet.tcp.recvbuf_inc=524288\nnet.inet.tcp.sack.enable=1\nnet.inet.tcp.blackhole=1\nnet.inet.tcp.msl=2000\nnet.inet.tcp.delayed_ack=1\nnet.inet.tcp.rfc1323=1\n\nnet.inet.udp.blackhole=1\nnet.inet.ip.redirect=0\nnet.inet.ip.forwarding=0\n\nnet.inet6.ip6.auto_linklocal=1\nnet.inet6.ip6.accept_rtadv=2\nnet.inet6.icmp6.rediraccept=1\nnet.inet6.ip6.forwarding=0\n\n# set default stacks:freebsd, rack or bbr, may be you need increase the value of parameter 'freebsd.boot.hz' while use rack or bbr.\nnet.inet.tcp.functions_default=freebsd\n# need by bbr, should enable it.\nnet.inet.tcp.hpts.skip_swi=1\n# Interval between calls to hpts_timeout_dir. default min 250us, max 256-512ms, default 512ms.\nnet.inet.tcp.hpts.minsleep=250\n# [25600-51200]\nnet.inet.tcp.hpts.maxsleep=51200\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "dpdk",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "freebsd",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "mk",
          "type": "tree",
          "content": null
        },
        {
          "name": "start.sh",
          "type": "blob",
          "size": 1.494140625,
          "content": "#!/bin/bash\n\nfunction usage() {\n    echo \"F-Stack app start tool\"\n    echo \"Options:\"\n    echo \" -c [conf]                Path of config file\"\n    echo \" -b [N]                   Path of binary\"\n    echo \" -o [N]                   Other ARGs for app\"\n    echo \" -h                       show this help\"\n    exit\n}\n\nconf=config.ini\nbin=./example/helloworld\n\nwhile getopts \"c:b:o:h\" args\ndo\n    case $args in\n         c)\n            conf=$OPTARG\n            ;;\n         b)\n            bin=$OPTARG\n            ;;\n         o)\n            others=$OPTARG\n            ;;\n         h)\n            usage\n            exit 0\n            ;;\n    esac\ndone\n\nif ! type \"bc\" > /dev/null 2>&1; then\n    echo \"please install bc\"\n    exit\nfi\n\nallcmask0x=`cat ${conf}|grep lcore_mask|awk -F '=' '{print $2}'`\n((allcmask=16#$allcmask0x))\n\nnum_procs=0\nPROCESSOR=$(grep 'processor' /proc/cpuinfo |sort |uniq |wc -l)\nfor((i=0;i<${PROCESSOR};++i))\ndo\n    mask=`echo \"2^$i\"|bc`\n    ((result=${allcmask} & ${mask}))\n    if [ ${result} != 0 ]\n    then\n        ((num_procs++));\n    fi\ndone\n\nfor((proc_id=0; proc_id<${num_procs}; ++proc_id))\ndo\n    if ((proc_id == 0))\n    then\n        echo \"${bin} --conf ${conf} --proc-type=primary --proc-id=${proc_id} ${others}\"\n        ${bin} --conf ${conf} --proc-type=primary --proc-id=${proc_id} ${others} &\n        sleep 5\n    else\n        echo \"${bin} --conf ${conf} --proc-type=secondary --proc-id=${proc_id} ${others}\"\n        ${bin} --conf ${conf} --proc-type=secondary --proc-id=${proc_id} ${others} &\n    fi\ndone\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}