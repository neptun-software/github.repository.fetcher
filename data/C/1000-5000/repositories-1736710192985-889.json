{
  "metadata": {
    "timestamp": 1736710192985,
    "page": 889,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "linux-rdma/rdma-core",
      "stars": 1649,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 4.177734375,
          "content": "# SPDX-License-Identifier: GPL-2.0\n#\n# clang-format configuration file. Intended for clang-format >= 4.\n#\n# For more information, see:\n#\n#   Documentation/process/clang-format.rst\n#   https://clang.llvm.org/docs/ClangFormat.html\n#   https://clang.llvm.org/docs/ClangFormatStyleOptions.html\n#\n---\nAccessModifierOffset: -4\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\n#AlignEscapedNewlines: Left # Unknown to clang-format-4.0\nAlignOperands: true\nAlignTrailingComments: false\nAllowAllParametersOfDeclarationOnNextLine: false\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: None\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: false\nBinPackArguments: true\nBinPackParameters: true\nBraceWrapping:\n  AfterClass: false\n  AfterControlStatement: false\n  AfterEnum: false\n  AfterFunction: true\n  AfterNamespace: true\n  AfterObjCDeclaration: false\n  AfterStruct: false\n  AfterUnion: false\n  #AfterExternBlock: false # Unknown to clang-format-5.0\n  BeforeCatch: false\n  BeforeElse: false\n  IndentBraces: false\n  #SplitEmptyFunction: true # Unknown to clang-format-4.0\n  #SplitEmptyRecord: true # Unknown to clang-format-4.0\n  #SplitEmptyNamespace: true # Unknown to clang-format-4.0\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Custom\n#BreakBeforeInheritanceComma: false # Unknown to clang-format-4.0\nBreakBeforeTernaryOperators: false\nBreakConstructorInitializersBeforeComma: false\n#BreakConstructorInitializers: BeforeComma # Unknown to clang-format-4.0\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: false\nColumnLimit: 80\nCommentPragmas: '^ IWYU pragma:'\n#CompactNamespaces: false # Unknown to clang-format-4.0\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nConstructorInitializerIndentWidth: 8\nContinuationIndentWidth: 8\nCpp11BracedListStyle: false\nDerivePointerAlignment: false\nDisableFormat: false\nExperimentalAutoDetectBinPacking: false\n#FixNamespaceComments: false # Unknown to clang-format-4.0\n\n# Taken from:\n#   grep -Rh '^#define [^[:space:]]*for_each[^[:space:]]*(' build/include/ \\\n#   | sed \"s,^#define \\([^[:space:]]*for_each[^[:space:]]*\\)(.*$,  - '\\1',\" \\\n#   | sort | uniq\nForEachMacros:\n  - 'list_for_each'\n  - 'list_for_each_off'\n  - 'list_for_each_off_dir_'\n  - 'list_for_each_rev'\n  - 'list_for_each_rev_off'\n  - 'list_for_each_rev_safe'\n  - 'list_for_each_rev_safe_off'\n  - 'list_for_each_safe'\n  - 'list_for_each_safe_off'\n  - 'list_for_each_safe_off_dir_'\n\n#IncludeBlocks: Preserve # Unknown to clang-format-5.0\nIncludeCategories:\n  - Regex: '.*'\n    Priority: 1\nIncludeIsMainRegex: '(Test)?$'\nIndentCaseLabels: false\n#IndentPPDirectives: None # Unknown to clang-format-5.0\nIndentWidth: 8\nIndentWrappedFunctionNames: false\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: false\nMacroBlockBegin: ''\nMacroBlockEnd: ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: Inner\n#ObjCBinPackProtocolList: Auto # Unknown to clang-format-5.0\nObjCBlockIndentWidth: 8\nObjCSpaceAfterProperty: true\nObjCSpaceBeforeProtocolList: true\n\n# Taken from git's rules\n#PenaltyBreakAssignment: 10 # Unknown to clang-format-4.0\nPenaltyBreakBeforeFirstCallParameter: 30\nPenaltyBreakComment: 10\nPenaltyBreakFirstLessLess: 0\nPenaltyBreakString: 10\nPenaltyExcessCharacter: 100\nPenaltyReturnTypeOnItsOwnLine: 60\n\nPointerAlignment: Right\nReflowComments: false\nSortIncludes: false\n#SortUsingDeclarations: false # Unknown to clang-format-4.0\nSpaceAfterCStyleCast: false\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\n#SpaceBeforeCtorInitializerColon: true # Unknown to clang-format-5.0\n#SpaceBeforeInheritanceColon: true # Unknown to clang-format-5.0\nSpaceBeforeParens: ControlStatements\n#SpaceBeforeRangeBasedForLoopColon: true # Unknown to clang-format-5.0\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles: false\nSpacesInContainerLiterals: false\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard: Cpp03\nTabWidth: 8\nUseTab: Always\n...\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.671875,
          "content": "# -*- mode: gitignore; -*-\n# CMake\ncmake_install.cmake\nCMakeFiles\nCMakeCache.txt\nlib*.a\n/bin/**\n/lib/**\n/include/**\n/.ninja*\n*.ninja\nMakefile\n\n# Tags\nTAGS\n.TAGS\n!TAGS/\ntags\n.tags\n!tags/\ngtags.files\nGTAGS\nGRTAGS\nGPATH\n\n# clangd\n.cache/\n\n# cscope\ncscope.files\ncscope.out\ncscope.in.out\ncscope.po.out\n\n# Emacs\n*~\n\\#*\\#\n/.emacs.desktop\n/.emacs.desktop.lock\n*.elc\nauto-save-list\ntramp\n.\\#*\n\n# Org-mode\n.org-id-locations\n*_archive\n\n# flymake-mode\n*_flymake.*\n\n# eshell files\n/eshell/history\n/eshell/lastdir\n\n# elpa packages\n/elpa/\n\n# reftex files\n*.rel\n\n# AUCTeX auto folder\n/auto/\n\n# cask packages\n.cask/\n\n# vim\n[._]*.s[a-w][a-z]\n[._]s[a-w][a-z]\n*.un~\nSession.vim\n.netrwhist\n*~\n\n# python\n*.pyc\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 0.6201171875,
          "content": "#\n# This list is used by git-shortlog to fix a few botched name translations\n# in the git archive, either because the author's full name was messed up\n# and/or not always written the same way, making contributions from the\n# same person appearing not to be so or badly displayed.\n#\nJason Gunthorpe <jgg@ziepe.ca> <jgg@mellanox.com>\nJason Gunthorpe <jgg@ziepe.ca> <jgunthorpe@obsidianresearch.com>\nLeon Romanovsky <leon@kernel.org> <leonro@mellanox.com>\nLeon Romanovsky <leon@kernel.org> <leonro@nvidia.com>\nSteve Wise <larrystevenwise@gmail.com> <swise@chelsio.com>\nSteve Wise <larrystevenwise@gmail.com> <swise@opengridcomputing.com>\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 30.021484375,
          "content": "# COPYRIGHT (c) 2016 Obsidian Research Corporation. See COPYING file\n# Run cmake as:\n#  mkdir build\n#  cmake -GNinja ..\n#  ninja\n#\n# Common options passed to cmake are:\n#  -DIN_PLACE=1\n#      Configure the build to be run from the build directory, this results in something\n#      that is not installable.\n#  -DCMAKE_EXPORT_COMPILE_COMMANDS=1\n#      Write a compile_commands.json file for clang tooling\n#  -DCMAKE_BUILD_TYPE=RelWithDebInfo\n#      Change the optimization level, Debug disables optimization,\n#      Release is for packagers\n#  -DENABLE_VALGRIND=0 (default enabled)\n#      Disable valgrind notations, this has a tiny positive performance impact\n#  -DENABLE_RESOLVE_NEIGH=0 (default enabled)\n#      Do not link to libnl and do not resolve neighbours internally for Ethernet,\n#      and do not build iwpmd.\n#  -DENABLE_STATIC=1 (default disabled)\n#      Produce static libraries along with the usual shared libraries.\n#  -DVERBS_PROVIDER_DIR='' (default /usr/lib.../libibverbs)\n#      Use the historical search path for providers, in the standard system library.\n#  -DNO_COMPAT_SYMS=1 (default disabled)\n#      Do not generate backwards compatibility symbols in the shared\n#      libraries. This may is necessary if using a dynmic linker that does\n#      not support symbol versions, such as uclibc.\n#  -DIOCTL_MODE=write (default both)\n#      Disable new kABI ioctl() support and support only the legacy write\n#      path. May also be 'ioctl' to disable fallback to write.\n#  -DIBACM_SERVER_MODE_DEFAULT (default unix)\n#      Selects how clients can connect to this server:\n#      open) Allow incoming connections from any TCP client (internal or external).\n#      loop) Limit incoming connections for server_port to 127.0.0.1.\n#      unix) Use unix-domain sockets, hence limits service to the same machine.\n#  -DIBACM_ACME_PLUS_KERNEL_ONLY_DEFAULT (default 0)\n#      If non-zero, limit incoming requests to kernel or the ib_acme utility\n#      (i.e. do not serve librdmacm requests)\n#  -DPYTHON_EXECUTABLE\n#      Override automatic detection of python to use a certain\n#      exectuable. This can be used to force the build to use python2 on a\n#      system that has python3 installed. Otherwise the build automatically\n#      prefers python3 if available.\n#   -DNO_PYVERBS=1 (default, build pyverbs)\n#      Invoke cython to build pyverbs. Usually you will run with this option\n#      set\n#   -DENABLE_IBDIAGS_COMPAT=True (default False)\n#      Include obsolete scripts. These scripts are replaced by C programs with\n#      a different interface now.\n#   -DNO_MAN_PAGES=1 (default 0, build/install the man pages)\n#      Disable man pages. Allows rdma-core to be built and installed\n#      (without man pages) when neither pandoc/rst2man nor the pandoc-prebuilt\n#      directory are available.\n#   -DENABLE_LTTNG (default, no tracing support)\n#      Enable LTTng tracing.\n\nif (${CMAKE_VERSION} VERSION_LESS \"3.18.1\")\n\t# Centos 7 support\n\tcmake_minimum_required(VERSION 2.8.12 FATAL_ERROR)\nelse()\n\tcmake_minimum_required(VERSION 3.18.1 FATAL_ERROR)\nendif()\nproject(rdma-core C)\n\n# CMake likes to use -rdynamic too much, they fixed it in 3.4.\nif(POLICY CMP0065)\n  cmake_policy(SET CMP0065 NEW)\nelse()\n  # .. but we really do want to opt out.\n  string(REPLACE \"-rdynamic\" \"\" CMAKE_SHARED_LIBRARY_LINK_C_FLAGS \"${CMAKE_SHARED_LIBRARY_LINK_C_FLAGS}\")\nendif()\n\n# Make RDMA_CHECK_C_LINKER_FLAG work better\nif(POLICY CMP0056)\n  cmake_policy(SET CMP0056 NEW)\nendif()\n\nset(PACKAGE_NAME \"RDMA\")\n\n# See Documentation/versioning.md\nset(PACKAGE_VERSION \"56.0\")\n# When this is changed the values in these files need changing too:\n#   debian/control\n#   debian/libibverbs1.symbols\nset(IBVERBS_PABI_VERSION \"34\")\nset(IBVERBS_PROVIDER_SUFFIX \"-rdmav${IBVERBS_PABI_VERSION}.so\")\n\n#-------------------------\n# Basic standard paths\n\n# Override the CMAKE_INSTALL_ dirs to be under the build/ directory\nif (IN_PLACE)\n  set(CMAKE_INSTALL_SYSCONFDIR \"${PROJECT_BINARY_DIR}/etc\")\n  set(CMAKE_INSTALL_BINDIR \"${PROJECT_BINARY_DIR}/bin\")\n  set(CMAKE_INSTALL_SBINDIR \"${PROJECT_BINARY_DIR}/bin\")\n  set(CMAKE_INSTALL_PREFIX \"${PROJECT_BINARY_DIR}\")\n  set(CMAKE_INSTALL_LIBDIR \"lib\")\n  set(CMAKE_INSTALL_INCLUDEDIR \"include\")\nendif()\n\ninclude(GNUInstallDirs)\n# C include root\nset(BUILD_INCLUDE ${PROJECT_BINARY_DIR}/include)\n# Executables\nset(BUILD_BIN ${PROJECT_BINARY_DIR}/bin)\n# Libraries\nset(BUILD_LIB ${PROJECT_BINARY_DIR}/lib)\n# Static library pre-processing\nset(BUILD_STATIC_LIB ${PROJECT_BINARY_DIR}/lib/statics)\n# Used for IN_PLACE configuration\nset(BUILD_ETC ${PROJECT_BINARY_DIR}/etc)\nset(BUILD_PYTHON ${PROJECT_BINARY_DIR}/python)\n\nset(IBDIAG_CONFIG_PATH \"${CMAKE_INSTALL_FULL_SYSCONFDIR}/infiniband-diags\")\nset(IBDIAG_NODENAME_MAP_PATH \"${CMAKE_INSTALL_FULL_SYSCONFDIR}/rdma/ib-node-name-map\")\n\nset(CMAKE_INSTALL_INITDDIR \"${CMAKE_INSTALL_SYSCONFDIR}/init.d\"\n  CACHE PATH \"Location for init.d files\")\nset(CMAKE_INSTALL_MODPROBEDIR \"${CMAKE_INSTALL_SYSCONFDIR}/modprobe.d/\"\n  CACHE PATH \"Location for modprobe.d files\")\nset(CMAKE_INSTALL_SYSTEMD_SERVICEDIR \"${CMAKE_INSTALL_PREFIX}/lib/systemd/system\"\n  CACHE PATH \"Location for systemd service files\")\nset(CMAKE_INSTALL_SYSTEMD_BINDIR \"/lib/systemd\"\n  CACHE PATH \"Location for systemd extra binaries\")\n\nset(ACM_PROVIDER_DIR \"${CMAKE_INSTALL_FULL_LIBDIR}/ibacm\"\n  CACHE PATH \"Location for ibacm provider plugin shared library files.\")\n# Location to find the provider plugin shared library files\nset(VERBS_PROVIDER_DIR \"${CMAKE_INSTALL_FULL_LIBDIR}/libibverbs\"\n  CACHE PATH \"Location for provider plugin shared library files. If set to empty the system search path is used.\")\n\n# Allow the 'run' dir to be configurable, this historically has been /var/run, but\n# some systems now use /run/\nset(CMAKE_INSTALL_RUNDIR \"var/run\"\n  CACHE PATH \"Location for runtime information, typically /var/run, or /run\")\nif(NOT IS_ABSOLUTE ${CMAKE_INSTALL_RUNDIR})\n  set(CMAKE_INSTALL_FULL_RUNDIR \"${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_RUNDIR}\")\nelse()\n  set(CMAKE_INSTALL_FULL_RUNDIR \"${CMAKE_INSTALL_RUNDIR}\")\nendif()\n\n# Allow the udev rules.d dir to be configurable, this has historically been\n# /lib/udev/rules.d/, but some systems now prefix /usr/\nset(CMAKE_INSTALL_UDEV_RULESDIR \"lib/udev/rules.d\"\n  CACHE PATH \"Location for system udev rules, typically /lib/udev/rules.d or /usr/lib/udev/rules.d\")\nif(NOT IS_ABSOLUTE ${CMAKE_INSTALL_UDEV_RULESDIR})\n  set(CMAKE_INSTALL_FULL_UDEV_RULESDIR \"${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_UDEV_RULESDIR}\")\nelse()\n  set(CMAKE_INSTALL_FULL_UDEV_RULESDIR \"${CMAKE_INSTALL_UDEV_RULESDIR}\")\nendif()\n\n# Allow the perl library dir to be configurable\nset(CMAKE_INSTALL_PERLDIR \"share/perl5\"\n  CACHE PATH \"Location for system perl library, typically /usr/share/perl5\")\nif(NOT IS_ABSOLUTE ${CMAKE_INSTALL_PERLDIR})\n  set(CMAKE_INSTALL_FULL_PERLDIR \"${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_PERLDIR}\")\nelse()\n  set(CMAKE_INSTALL_FULL_PERLDIR \"${CMAKE_INSTALL_PERLDIR}\")\nendif()\n\n# Location to place provider .driver files\nif (IN_PLACE)\n  set(CONFIG_DIR \"${BUILD_ETC}/libibverbs.d\")\n  set(VERBS_PROVIDER_DIR \"${BUILD_LIB}\")\n  set(ACM_PROVIDER_DIR \"${BUILD_LIB}/ibacm\")\nelse()\n  set(CONFIG_DIR \"${CMAKE_INSTALL_FULL_SYSCONFDIR}/libibverbs.d\")\nendif()\n\nset(DISTRO_FLAVOUR \"None\" CACHE\n  STRING \"Flavour of distribution to install for. This primarily impacts the init.d scripts installed.\")\n\n#-------------------------\n# Load CMake components\nset(BUILDLIB \"${PROJECT_SOURCE_DIR}/buildlib\")\nset(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} \"${BUILDLIB}\")\n\ninclude(CMakeParseArguments)\ninclude(CheckCCompilerFlag)\ninclude(CheckCSourceCompiles)\ninclude(CheckIncludeFile)\ninclude(CheckTypeSize)\ninclude(RDMA_EnableCStd)\ninclude(RDMA_Sparse)\ninclude(RDMA_BuildType)\ninclude(RDMA_DoFixup)\ninclude(publish_headers)\ninclude(rdma_functions)\ninclude(pyverbs_functions)\nif (NO_MAN_PAGES)\n  # define empty stub functions to omit man page processing\n  function(rdma_man_pages)\n  endfunction()\n  function(rdma_alias_man_pages)\n  endfunction()\nelse()\n  include(rdma_man)\nendif()\n\nif (NOT DEFINED ENABLE_STATIC)\n  set(ENABLE_STATIC \"OFF\" CACHE BOOL \"Produce static linking libraries as well as shared libraries.\")\nendif()\n\n#-------------------------\n# Setup the basic C compiler\nRDMA_BuildType()\ninclude_directories(${BUILD_INCLUDE})\n\n# Working means that the compiler doesn't spew output that confuses cmake's\n# capabilitiy tests. ie cmake will test and succeed a simple program\nRDMA_Check_C_Compiles(HAVE_WORKING_WERROR \"int main(int argc,const char *argv[]) { return 0; }\" \"\")\nif (NOT HAVE_WORKING_WERROR)\n  message(FATAL_ERROR \"-Werror doesn't work (compiler always creates warnings?). Werror is required for CMake.\")\nendif()\n\n# Use Python modules based on CMake version for backward compatibility\nif (${CMAKE_VERSION} VERSION_LESS \"3.12\")\n        FIND_PACKAGE(PythonInterp REQUIRED)\n        FIND_PACKAGE(PythonLibs ${PYTHON_VERSION_MAJOR}.${PYTHON_VERSION_MINOR} EXACT)\nelseif (${CMAKE_VERSION} VERSION_GREATER_EQUAL \"3.12\")\n        set(Python_EXECUTABLE ${PYTHON_EXECUTABLE})\n        FIND_PACKAGE(Python 3 REQUIRED COMPONENTS Interpreter OPTIONAL_COMPONENTS Development)\n        set(PYTHON_EXECUTABLE ${Python_EXECUTABLE})\n        if(Python_Development_FOUND)\n            set(PYTHONLIBS_FOUND ${Python_Development_FOUND})\n            set(PYTHON_LIBRARIES ${Python_LIBRARIES})\n            set(PYTHON_INCLUDE_DIRS ${Python_INCLUDE_DIRS})\n        endif()\nendif()\n\nset(CYTHON_EXECUTABLE \"\")\nif(NOT NO_PYVERBS AND PYTHONLIBS_FOUND)\n    execute_process(COMMAND \"${PYTHON_EXECUTABLE}\" -c\n        \"import sysconfig; print(sysconfig.get_path(\\\"platlib\\\"))\"\n        OUTPUT_VARIABLE py_path)\n    string(STRIP ${py_path} py_path)\n    set(CMAKE_INSTALL_PYTHON_ARCH_LIB \"${py_path}\"\n        CACHE PATH \"Location for architecture specific python libraries\")\n\n    # See PEP3149\n    execute_process(COMMAND \"${PYTHON_EXECUTABLE}\" -c\n        \"import sysconfig; x = sysconfig.get_config_var(\\\"EXT_SUFFIX\\\"); print(x if x else '.so')\"\n        OUTPUT_VARIABLE py_path)\n    string(STRIP ${py_path} CMAKE_PYTHON_SO_SUFFIX)\n\n    FIND_PACKAGE(cython)\nelseif(NOT NO_PYVERBS AND NOT PYTHONLIBS_FOUND)\n    message(WARNING \"pyverbs build requested but python development files not found\")\nendif()\n\nfind_program(SYSTEMCTL_BIN systemctl HINTS \"/usr/bin\" \"/bin\")\nif (NOT SYSTEMCTL_BIN)\n  set (SYSTEMCTL_BIN \"/bin/systemctl\")\nendif()\n\nRDMA_CheckSparse()\n\n# Require GNU99 mode\nRDMA_EnableCStd()\n\n# Extra warnings. Turn on -Wextra to keep aware of interesting developments from gcc,\n# but turn off some that are not terribly useful for this source.\n# FIXME: I wonder how many of the signed compares are bugs?\nRDMA_AddOptCFlag(CMAKE_C_FLAGS HAVE_C_WARNINGS\n  \"-Wall -Wextra -Wno-sign-compare -Wno-unused-parameter\")\nRDMA_AddOptCFlag(CMAKE_C_FLAGS HAVE_C_WMISSING_PROTOTYPES \"-Wmissing-prototypes\")\nRDMA_AddOptCFlag(CMAKE_C_FLAGS HAVE_C_WMISSING_DECLARATIONS \"-Wmissing-declarations\")\nRDMA_AddOptCFlag(CMAKE_C_FLAGS HAVE_C_WWRITE_STRINGS \"-Wwrite-strings\")\nRDMA_AddOptCFlag(CMAKE_C_FLAGS HAVE_C_WFORMAT_2 \"-Wformat=2\")\nRDMA_AddOptCFlag(CMAKE_C_FLAGS HAVE_C_WCAST_FUNCTION \"-Wcast-function-type\")\nRDMA_AddOptCFlag(CMAKE_C_FLAGS HAVE_C_WFORMAT_NONLITERAL \"-Wformat-nonliteral\")\nRDMA_AddOptCFlag(CMAKE_C_FLAGS HAVE_C_WDATE_TIME \"-Wdate-time\")\nRDMA_AddOptCFlag(CMAKE_C_FLAGS HAVE_C_WNESTED_EXTERNS \"-Wnested-externs\")\n\n# At some point after 4.4 gcc fixed shadow to ignore function vs variable\n# conflicts\nRDMA_Check_C_Compiles(HAVE_C_WORKING_SHADOW \"\n #include <unistd.h>\n int main(int argc,const char *argv[]) { int access = 1; return access; }\"\n  \"-Wshadow\")\nif (HAVE_C_WORKING_SHADOW)\n  RDMA_AddOptCFlag(CMAKE_C_FLAGS HAVE_C_WORKING_SHADOW \"-Wshadow\")\nendif()\n\n# At some point around 5.4 gcc fixed missing-field-initializers to ignore this\n# common idiom we use extensively. Since this is a useful warning for\n# developers try and leave it on if the compiler supports it.\nRDMA_Check_C_Compiles(HAVE_C_WORKING_MISSING_FIELD_INITIALIZERS \"\n struct foo { int a; int b; };\n int main(int argc,const char *argv[]) { struct foo tmp = {}; return tmp.a; }\"\n)\nif (NOT HAVE_C_WORKING_MISSING_FIELD_INITIALIZERS)\n  RDMA_AddOptCFlag(CMAKE_C_FLAGS HAVE_C_WNO_MISSING_FIELD_INITIALIZERS \"-Wno-missing-field-initializers\")\nendif()\n\n# clang doesn't support variable size GCC extension\nRDMA_Check_C_Compiles(HAVE_C_VARIABLE_SIZE \"\n struct c { int a; int b[]; };\n struct foo { struct c c; int b; };\n int main(int argc,const char *argv[]) { return 0; }\"\n)\nif (NOT HAVE_C_VARIABLE_SIZE)\n\tRDMA_AddOptCFlag(CMAKE_C_FLAGS HAVE_C_WNO_VARIABLE_SIZE \"-Wno-gnu-variable-sized-type-not-at-end\")\nendif()\n\n# Check that the compiler supports -fno-strict-aliasing.\n# The use of this flag in the source is discouraged\nset(NO_STRICT_ALIASING_FLAGS \"\")\nRDMA_AddOptCFlag(NO_STRICT_ALIASING_FLAGS HAVE_NO_STRICT_ALIASING\n  \"-fno-strict-aliasing\")\n\n# pyverbs has a problem with var-tracking warnings, turn it off if we can.\nset(NO_VAR_TRACKING_FLAGS \"\")\nRDMA_AddOptCFlag(NO_VAR_TRACKING_FLAGS HAVE_NO_VAR_TRACKING_ASSIGNMENTS\n  \"-fno-var-tracking-assignments\")\n\nRDMA_Check_C_Compiles(HAVE_FUNC_ATTRIBUTE_IFUNC \"\n #include <unistd.h>\n\n void entry(void);\n\n static void do_entry(void) {}\n void entry(void) __attribute__((ifunc(\\\"resolve_entry\\\")));\n typedef void (*fn_t)(void);\n static fn_t resolve_entry(void) {return &do_entry;}\n\n int main(int argc,const char *argv[]) { entry(); }\"\n)\n\nRDMA_Check_C_Compiles(HAVE_FUNC_ATTRIBUTE_SYMVER \"\n #include <unistd.h>\n\n void _sym(void);\n __attribute__((__symver__(\\\"sym@TEST_1.1\\\"))) void _sym(void) {}\n\n int main(int argc,const char *argv[]) { _sym(); }\"\n)\n\n# The code does not do the racy fcntl if the various CLOEXEC's are not\n# supported so it really doesn't work right if this isn't available. Thus hard\n# require it.\nCHECK_C_SOURCE_COMPILES(\"\n #include <sys/types.h>\n #include <sys/stat.h>\n #include <sys/socket.h>\n #include <fcntl.h>\n int main(int argc,const char *argv[]) {\n    open(\\\".\\\",O_RDONLY | O_CLOEXEC);\n    socket(AF_INET, SOCK_STREAM | SOCK_CLOEXEC, 0);\n    return 0;\n }\" HAS_CLOEXEC)\n\nif (NOT HAS_CLOEXEC)\n# At least uclibc wrongly hides this POSIX constant behind _GNU_SOURCE\nCHECK_C_SOURCE_COMPILES(\"\n #define _GNU_SOURCE\n #include <sys/types.h>\n #include <sys/stat.h>\n #include <sys/socket.h>\n #include <fcntl.h>\n int main(int argc,const char *argv[]) {\n    open(\\\".\\\",O_RDONLY | O_CLOEXEC);\n    socket(AF_INET, SOCK_STREAM | SOCK_CLOEXEC, 0);\n    return 0;\n }\" HAS_CLOEXEC_GNU_SOURCE)\n  if (HAS_CLOEXEC_GNU_SOURCE)\n    set(HAS_CLOEXEC 1)\n    add_definitions(\"-D_GNU_SOURCE=\")\n  endif()\nendif()\n\nif (NOT HAS_CLOEXEC)\n  message(FATAL_ERROR \"O_CLOEXEC/SOCK_CLOEXEC/fopen(..,\\\"e\\\") support is required but not found\")\nendif()\n\n# always_inline is supported\nRDMA_Check_C_Compiles(HAVE_FUNC_ATTRIBUTE_ALWAYS_INLINE \"\n int foo(void);\n inline __attribute__((always_inline)) int foo(void) {return 0;}\n int main(int argc,const char *argv[]) { return foo(); }\"\n)\n\n# Linux __u64 is an unsigned long long\nRDMA_Check_C_Compiles(HAVE_LONG_LONG_U64 \"\n#include <linux/types.h>\n int main(int argc,const char *argv[]) { __u64 tmp = 0; unsigned long long *tmp2 = &tmp; return *tmp2; }\"\n)\n\nif (NOT HAVE_LONG_LONG_U64)\n  # Modern Linux has switched to use ull in all cases, but to avoid disturbing\n  # userspace some platforms continued to use unsigned long by default. This\n  # define will cause kernel headers to consistently use unsigned long long\n  add_definitions(\"-D__SANE_USERSPACE_TYPES__\")\nendif()\n\n# glibc and kernel uapi headers can co-exist\nCHECK_C_SOURCE_COMPILES(\"\n #include <sys/socket.h>\n #include <netinet/in.h>\n #include <linux/in.h>\n #include <linux/in6.h>\n int main(int argc,const char *argv[]) { return 0; }\"\n  HAVE_GLIBC_UAPI_COMPAT)\nRDMA_DoFixup(\"${HAVE_GLIBC_UAPI_COMPAT}\" \"linux/in.h\")\nRDMA_DoFixup(\"${HAVE_GLIBC_UAPI_COMPAT}\" \"linux/in6.h\")\n\n# The compiler has working -fstrict-aliasing support, old gcc's do not. If\n# broken then globally disable strict aliasing.\nRDMA_Check_Aliasing(HAVE_WORKING_STRICT_ALIASING)\nif (NOT HAVE_WORKING_STRICT_ALIASING)\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${NO_STRICT_ALIASING_FLAGS}\")\nendif()\n\n# Check if off_t is 64 bits, eg large file support is enabled\nCHECK_C_SOURCE_COMPILES(\"\n#include <sys/types.h>\n #define BUILD_ASSERT_OR_ZERO(cond) (sizeof(char [1 - 2*!(cond)]) - 1)\n int main(int argc,const char *argv[]) { return BUILD_ASSERT_OR_ZERO(sizeof(off_t) >= 8); }\"\n  HAVE_LARGE_FILES)\n\nif (NOT HAVE_LARGE_FILES)\n  CHECK_C_SOURCE_COMPILES(\"\n#define _FILE_OFFSET_BITS 64\n#include <sys/types.h>\n #define BUILD_ASSERT_OR_ZERO(cond) (sizeof(char [1 - 2*!(cond)]) - 1)\n int main(int argc,const char *argv[]) { return BUILD_ASSERT_OR_ZERO(sizeof(off_t) >= 8); }\"\n    HAVE_LARGE_FILES2)\n  if (NOT HAVE_LARGE_FILES2)\n    message(FATAL_ERROR \"Could not enable large file support\")\n  endif()\n  add_definitions(\"-D_FILE_OFFSET_BITS=64\")\nendif()\n\n# Provide a shim if C11 stdatomic.h is not supported.\nif (NOT HAVE_SPARSE)\n  CHECK_INCLUDE_FILE(\"stdatomic.h\" HAVE_STDATOMIC)\n  RDMA_DoFixup(\"${HAVE_STDATOMIC}\" \"stdatomic.h\")\nendif()\n\nRDMA_Check_SSE(HAVE_TARGET_SSE)\n\n# Enable development support features\n# Prune unneeded shared libraries during linking\nRDMA_AddOptLDFlag(CMAKE_EXE_LINKER_FLAGS SUPPORTS_AS_NEEDED \"-Wl,--as-needed\")\nRDMA_AddOptLDFlag(CMAKE_SHARED_LINKER_FLAGS SUPPORTS_AS_NEEDED \"-Wl,--as-needed\")\nRDMA_AddOptLDFlag(CMAKE_MODULE_LINKER_FLAGS SUPPORTS_AS_NEEDED \"-Wl,--as-needed\")\n\n# Ensure all shared ELFs have fully described linking\nRDMA_AddOptLDFlag(CMAKE_EXE_LINKER_FLAGS SUPPORTS_NO_UNDEFINED \"-Wl,--no-undefined\")\nRDMA_AddOptLDFlag(CMAKE_SHARED_LINKER_FLAGS SUPPORTS_NO_UNDEFINED \"-Wl,--no-undefined\")\n\n# Enable gold linker - gold has different linking checks\n#RDMA_AddOptLDFlag(CMAKE_EXE_LINKER_FLAGS SUPPORTS_NO_UNDEFINED \"-fuse-ld=gold\")\n#RDMA_AddOptLDFlag(CMAKE_SHARED_LINKER_FLAGS SUPPORTS_NO_UNDEFINED \"-fuse-ld=gold\")\n#RDMA_AddOptLDFlag(CMAKE_MODULE_LINKER_FLAGS SUPPORTS_NO_UNDEFINED \"-fuse-ld=gold\")\n\n# Verify that GNU --version-script and asm(\".symver\") works\nfind_package(LDSymVer REQUIRED)\nif (NO_COMPAT_SYMS)\n  set(HAVE_LIMITED_SYMBOL_VERSIONS 1)\nelse()\n  set(HAVE_FULL_SYMBOL_VERSIONS 1)\nendif()\n\nset(NO_MAN_PAGES \"OFF\" CACHE BOOL \"Disable build/install of man pages\")\nif (NOT NO_MAN_PAGES)\n  # Look for pandoc and rst2man for making manual pages\n  FIND_PACKAGE(pandoc)\n  FIND_PACKAGE(rst2man)\nendif ()\n\n#-------------------------\n# Find libraries\n# pthread\nFIND_PACKAGE (Threads REQUIRED)\n\nFIND_PACKAGE(PkgConfig REQUIRED)\n\n# libnl\nif (NOT DEFINED ENABLE_RESOLVE_NEIGH)\n  set(ENABLE_RESOLVE_NEIGH \"ON\" CACHE BOOL \"Enable internal resolution of neighbours for Etherent\")\nendif()\nif (ENABLE_RESOLVE_NEIGH)\n  # FIXME use of pkgconfig is discouraged\n  pkg_check_modules(NL libnl-3.0 libnl-route-3.0 REQUIRED)\n  include_directories(${NL_INCLUDE_DIRS})\n  link_directories(${NL_LIBRARY_DIRS})\n  set(NL_KIND 3)\nelse()\n  set(NL_KIND 0)\n  set(NL_LIBRARIES \"\")\n  RDMA_DoFixup(0 \"netlink/attr.h\")\n  RDMA_DoFixup(0 \"netlink/msg.h\")\n  RDMA_DoFixup(0 \"netlink/netlink.h\")\n  RDMA_DoFixup(0 \"netlink/object-api.h\")\n  RDMA_DoFixup(0 \"netlink/route/link.h\")\n  RDMA_DoFixup(0 \"netlink/route/link/vlan.h\")\n  RDMA_DoFixup(0 \"netlink/route/neighbour.h\")\n  RDMA_DoFixup(0 \"netlink/route/route.h\")\n  RDMA_DoFixup(0 \"netlink/route/rtnl.h\")\nendif()\n\n# Older stuff blows up if these headers are included together\nif (NOT NL_KIND EQUAL 0)\n  set(SAFE_CMAKE_REQUIRED_INCLUDES \"${CMAKE_REQUIRED_INCLUDES}\")\n  set(CMAKE_REQUIRED_INCLUDES \"${NL_INCLUDE_DIRS}\")\n  CHECK_C_SOURCE_COMPILES(\"\n#include <netlink/route/link.h>\n#include <net/if.h>\n int main(int argc,const char *argv[]) {return 0;}\"\n    HAVE_WORKING_IF_H)\n  set(CMAKE_REQUIRED_INCLUDES \"${SAFE_CMAKE_REQUIRED_INCLUDES}\")\nendif()\n\n# udev\nfind_package(UDev)\ninclude_directories(${UDEV_INCLUDE_DIRS})\n\n# Statically determine sizeof(long), this is largely unnecessary, no new code\n# should rely on this.\ncheck_type_size(\"long\" SIZEOF_LONG BUILTIN_TYPES_ONLY LANGUAGE C)\n\n# Determine if this arch supports cache coherent DMA. This isn't really an\n# arch specific property, but for our purposes arches that do not support it\n# also do not define wmb/etc which breaks our compile.\n# As a special case s390x always has coherent DMA but needs linking for its wmb\nCHECK_C_SOURCE_COMPILES(\"\n#if !defined(__s390x__)\n#include \\\"${CMAKE_CURRENT_SOURCE_DIR}/util/udma_barrier.h\\\"\n#endif\n int main(int argc,const char *argv[]) {return 0;}\"\n  HAVE_COHERENT_DMA)\n\nfind_package(Systemd)\ninclude_directories(${SYSTEMD_INCLUDE_DIRS})\nRDMA_DoFixup(\"${SYSTEMD_FOUND}\" \"systemd/sd-daemon.h\")\n\n# drm headers\n\n# Check if the headers have been installed by kernel-headers\nfind_path(DRM_INCLUDE_DIRS \"drm.h\" PATH_SUFFIXES \"drm\" \"libdrm\")\n\n# Alternatively the headers could have been installed by libdrm\nif (NOT DRM_INCLUDE_DIRS)\n  pkg_check_modules(DRM libdrm)\nendif()\n\nif (DRM_INCLUDE_DIRS)\n  if (EXISTS \"${DRM_INCLUDE_DIRS}/i915_drm.h\" AND EXISTS \"${DRM_INCLUDE_DIRS}/amdgpu_drm.h\")\n    include_directories(${DRM_INCLUDE_DIRS})\n  else()\n    unset(DRM_INCLUDE_DIRS CACHE)\n  endif()\nendif()\n\n# LTTng Tracer support\nif (DEFINED ENABLE_LTTNG)\n  include(FindLTTngUST REQUIRED)\n  add_definitions(-DLTTNG_ENABLED)\nendif()\n\n#-------------------------\n# Apply fixups\n\n# We prefer to build with valgrind memcheck.h present, but if not, or the user\n# requested valgrind disabled, then replace it with our dummy stub.\nif (NOT DEFINED ENABLE_VALGRIND)\n  set(ENABLE_VALGRIND \"ON\" CACHE BOOL \"Enable use of valgrind annotations\")\nendif()\nif (ENABLE_VALGRIND)\n  CHECK_INCLUDE_FILE(\"valgrind/memcheck.h\" HAVE_VALGRIND_MEMCHECK)\n  CHECK_INCLUDE_FILE(\"valgrind/drd.h\" HAVE_VALGRIND_DRD)\nelse()\n  set(HAVE_VALGRIND_MEMCHECK 0)\n  set(HAVE_VALGRIND_DRD 0)\nendif()\nRDMA_DoFixup(\"${HAVE_VALGRIND_MEMCHECK}\" \"valgrind/memcheck.h\")\nRDMA_DoFixup(\"${HAVE_VALGRIND_DRD}\" \"valgrind/drd.h\")\n\n# Older glibc does not include librt\nCHECK_C_SOURCE_COMPILES(\"\n#include <time.h>\nint main(int argc,const char *argv[]) {\n   clock_gettime(CLOCK_MONOTONIC,0);\n   clock_nanosleep(CLOCK_MONOTONIC,0,0,0);\n   return 0;\n};\" LIBC_HAS_LIBRT)\nif (NOT LIBC_HAS_LIBRT)\n  set(RT_LIBRARIES \"rt\")\nendif()\n\n# Check for static_assert\nCHECK_C_SOURCE_COMPILES(\"\n#include <assert.h>\nstatic_assert(1, \\\"failed\\\");\nint main(int argc,const char *argv[]) {\n   static_assert(1, \\\"failed\\\");\n   return 0;\n};\" HAVE_STATIC_ASSERT)\nRDMA_DoFixup(\"${HAVE_STATIC_ASSERT}\" \"assert.h\")\n\n#-------------------------\n# Final warning flags\n\n# Old version of cmake used 'main(){..}' as their test program which breaks with -Werror.\n# So set this flag last.\nRDMA_AddOptCFlag(CMAKE_C_FLAGS HAVE_C_WSTRICT_PROTOTYPES \"-Wstrict-prototypes\")\nRDMA_AddOptCFlag(CMAKE_C_FLAGS HAVE_C_WOLD_STYLE_DEFINITION \"-Wold-style-definition\")\n\nif (ENABLE_WERROR)\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Werror\")\n  message(STATUS \"Enabled -Werror\")\nendif()\n\n# Old versions of libnl have a duplicated rtnl_route_put, disbale the warning on those\n# systems\nif (NOT NL_KIND EQUAL 0)\n  set(SAFE_CMAKE_REQUIRED_FLAGS \"${CMAKE_REQUIRED_FLAGS}\")\n  set(CMAKE_REQUIRED_INCLUDES \"${NL_INCLUDE_DIRS}\")\n  RDMA_Check_C_Compiles(HAVE_C_WREDUNDANT_DECLS \"\n #include <netlink/route/route.h>\n int main(int argc,const char *argv[]) { return 0; }\"\n  \"-Wredundant-decls\")\n  set(CMAKE_REQUIRED_INCLUDES \"${SAFE_CMAKE_REQUIRED_INCLUDES}\")\nendif()\nRDMA_AddOptCFlag(CMAKE_C_FLAGS HAVE_C_WREDUNDANT_DECLS \"-Wredundant-decls\")\n\n# Support of getrandom() was added to glibc in version 2.25\nCHECK_C_SOURCE_COMPILES(\"\n #include <sys/random.h>\n int main(int argc,const char *argv[]) {char buf[64]; return getrandom(buf, 64, GRND_NONBLOCK);}\"\n HAVE_GLIBC_GETRANDOM)\nRDMA_DoFixup(\"${HAVE_GLIBC_GETRANDOM}\" \"sys/random.h\")\n\n# glibc 2.33 and newer stopped to properly declare __fxstat in sys/stat.h\nRDMA_Check_C_Compiles(HAVE_GLIBC_FXSTAT \"\n #include <sys/stat.h>\n int main(int argc,const char *argv[]) {\n struct stat stat = {};  __fxstat(0, 0, &stat);  return 0;}\")\nRDMA_DoFixup(\"${HAVE_GLIBC_FXSTAT}\" \"sys/stat.h\")\n\n\n# glibc before 2.35 does not necesarily define the HWCAP_S390_PCI_MIO hardware\n# capability bit constant. Check for it and if necessary shim it in such that\n# kernel support for PCI MIO instructions can always be checked.\nRDMA_Check_C_Compiles(HAVE_GLIBC_HWCAP_S390_PCI_MIO \"\n #if defined(__s390x__)\n #include <sys/auxv.h>\n int main(int argc, const char *argv[]) {\n return !!(getauxval(AT_HWCAP) & HWCAP_S390_PCI_MIO);}\n #else\n int main(int argc, const char *argv[]) {return 0;}\n #endif\n \")\nRDMA_DoFixup(\"${HAVE_GLIBC_HWCAP_S390_PCI_MIO}\" \"sys/auxv.h\")\n\n#-------------------------\n# Build Prep\n# Write out a git ignore file to the build directory if it isn't the source\n# directory. For developer convenience\nif (NOT ${CMAKE_CURRENT_BINARY_DIR} STREQUAL ${CMAKE_CURRENT_SOURCE_DIR})\n  file(WRITE ${PROJECT_BINARY_DIR}/.gitignore \"*\")\nendif()\n\nif (\"${IOCTL_MODE}\" STREQUAL \"both\")\n  set(IOCTL_MODE_NUM 3)\nelseif (\"${IOCTL_MODE}\" STREQUAL \"write\")\n  set(IOCTL_MODE_NUM 2)\nelseif (\"${IOCTL_MODE}\" STREQUAL \"ioctl\")\n  set(IOCTL_MODE_NUM 1)\nelseif (\"${IOCTL_MODE}\" STREQUAL \"\")\n  set(IOCTL_MODE_NUM 3)\nelse()\n  message(FATAL_ERROR \"-DIOCTL_MODE=${IOCTL_MODE} is not a valid choice\")\nendif()\n\n# Configuration defaults\n\nif (\"${IBACM_SERVER_MODE_DEFAULT}\" STREQUAL \"open\")\n  set(IBACM_SERVER_MODE_DEFAULT \"IBACM_SERVER_MODE_OPEN\")\nelseif (\"${IBACM_SERVER_MODE_DEFAULT}\" STREQUAL \"loop\")\n  set(IBACM_SERVER_MODE_DEFAULT \"IBACM_SERVER_MODE_LOOP\")\nelse()\n  set(IBACM_SERVER_MODE_DEFAULT \"IBACM_SERVER_MODE_UNIX\")\nendif()\n\nif (IBACM_ACME_PLUS_KERNEL_ONLY_DEFAULT)\n  set(IBACM_ACME_PLUS_KERNEL_ONLY_DEFAULT 1)\nelse()\n  set(IBACM_ACME_PLUS_KERNEL_ONLY_DEFAULT 0)\nendif()\n\nconfigure_file(\"${BUILDLIB}/config.h.in\" \"${BUILD_INCLUDE}/config.h\" ESCAPE_QUOTES @ONLY)\n\n#-------------------------\n# Sub-directories\nadd_subdirectory(ccan)\nadd_subdirectory(util)\nadd_subdirectory(util/tests)\nadd_subdirectory(Documentation)\nadd_subdirectory(kernel-boot)\nadd_subdirectory(kernel-headers)\n# Libraries\nadd_subdirectory(libibumad)\nadd_subdirectory(libibumad/man)\nadd_subdirectory(libibverbs)\nadd_subdirectory(libibverbs/man)\nadd_subdirectory(librdmacm)\nadd_subdirectory(librdmacm/man)\n\n# Providers\nif (HAVE_COHERENT_DMA)\nadd_subdirectory(providers/bnxt_re)\nadd_subdirectory(providers/cxgb4) # NO SPARSE\nadd_subdirectory(providers/efa)\nadd_subdirectory(providers/efa/man)\nadd_subdirectory(providers/erdma)\nadd_subdirectory(providers/hns)\nadd_subdirectory(providers/hns/man)\nadd_subdirectory(providers/irdma)\nadd_subdirectory(providers/mana)\nadd_subdirectory(providers/mana/man)\nadd_subdirectory(providers/mlx4)\nadd_subdirectory(providers/mlx4/man)\nadd_subdirectory(providers/mlx5)\nadd_subdirectory(providers/mlx5/man)\nadd_subdirectory(providers/mthca)\nadd_subdirectory(providers/ocrdma)\nadd_subdirectory(providers/qedr)\nadd_subdirectory(providers/vmw_pvrdma)\nendif()\n\nadd_subdirectory(providers/hfi1verbs)\nadd_subdirectory(providers/ipathverbs)\nadd_subdirectory(providers/rxe)\nadd_subdirectory(providers/rxe/man)\nadd_subdirectory(providers/siw)\n\nadd_subdirectory(libibmad)\nadd_subdirectory(libibnetdisc)\nadd_subdirectory(libibnetdisc/man)\nadd_subdirectory(infiniband-diags)\nadd_subdirectory(infiniband-diags/scripts)\nadd_subdirectory(infiniband-diags/man)\n\nif (CYTHON_EXECUTABLE)\n  add_subdirectory(pyverbs)\n  add_subdirectory(tests)\nendif()\n\n# Binaries\nif (NOT NL_KIND EQUAL 0)\n  add_subdirectory(ibacm) # NO SPARSE\nendif()\n\nif (NOT NL_KIND EQUAL 0)\n  add_subdirectory(iwpmd)\nendif()\nadd_subdirectory(libibumad/tests)\nadd_subdirectory(libibverbs/examples)\nadd_subdirectory(librdmacm/examples)\nif (UDEV_FOUND)\n  add_subdirectory(rdma-ndd)\nendif()\nadd_subdirectory(srp_daemon)\n\nibverbs_finalize()\nrdma_finalize_libs()\n\n#-------------------------\n# Display a summary\n# Only report things that are non-ideal.\nmessage(STATUS \"Missing Optional Items:\")\nif (NOT HAVE_FUNC_ATTRIBUTE_ALWAYS_INLINE)\n  message(STATUS \" Compiler attribute always_inline NOT supported\")\nendif()\nif (NOT HAVE_FUNC_ATTRIBUTE_IFUNC)\n  message(STATUS \" Compiler attribute ifunc NOT supported\")\nendif()\nif (NOT HAVE_FUNC_ATTRIBUTE_SYMVER)\n  message(STATUS \" Compiler attribute symver NOT supported, can not use LTO\")\nendif()\nif (NOT HAVE_COHERENT_DMA)\n  message(STATUS \" Architecture NOT able to do coherent DMA (check util/udma_barrier.h) some providers disabled!\")\nendif()\nif (NOT HAVE_STDATOMIC)\n  message(STATUS \" C11 stdatomic.h NOT available (old compiler)\")\nendif()\nif (NOT HAVE_STATIC_ASSERT)\n  message(STATUS \" C11 static_assert NOT available (old compiler)\")\nendif()\nif (NOT HAVE_WORKING_STRICT_ALIASING)\n  message(STATUS \" Compiler cannot do strict aliasing\")\nendif()\nif (NOT HAVE_VALGRIND_MEMCHECK)\n  message(STATUS \" Valgrind memcheck.h NOT enabled\")\nendif()\nif (NOT HAVE_VALGRIND_DRD)\n  message(STATUS \" Valgrind drd.h NOT enabled\")\nendif()\nif (NL_KIND EQUAL 0)\n  message(STATUS \" neighbour resolution NOT enabled\")\nelse()\n  if (NOT HAVE_WORKING_IF_H)\n    message(STATUS \" netlink/route/link.h and net/if.h NOT co-includable (old headers)\")\n  endif()\nendif()\nif (NO_MAN_PAGES)\n  message(STATUS \" man pages NOT built\")\nelse()\n  if (NOT PANDOC_FOUND)\n    if (NOT EXISTS \"${PROJECT_SOURCE_DIR}/buildlib/pandoc-prebuilt\")\n      message(STATUS \" pandoc NOT found and NO prebuilt man pages. 'install' disabled\")\n    else()\n      message(STATUS \" pandoc NOT found (using prebuilt man pages)\")\n    endif()\n  endif()\n  if (NOT RST2MAN_FOUND)\n    if (NOT EXISTS \"${PROJECT_SOURCE_DIR}/buildlib/pandoc-prebuilt\")\n      message(STATUS \" rst2man NOT found and NO prebuilt man pages. 'install' disabled\")\n    else()\n      message(STATUS \" rst2man NOT found (using prebuilt man pages)\")\n    endif()\n  endif()\nendif()\nif (NOT CYTHON_EXECUTABLE)\n  message(STATUS \" cython NOT found (disabling pyverbs)\")\nendif()\nif (NOT SYSTEMD_FOUND)\n  message(STATUS \" libsystemd NOT found (disabling features)\")\nendif()\nif (NOT UDEV_FOUND)\n  message(STATUS \" libudev NOT found (disabling features)\")\nendif()\nif (NOT HAVE_C_WARNINGS)\n  message(STATUS \" extended C warnings NOT supported\")\nendif()\nif (NOT HAVE_NO_STRICT_ALIASING)\n  message(STATUS \" -fno-strict-aliasing NOT supported\")\nendif()\nif (NOT HAVE_C_WORKING_MISSING_FIELD_INITIALIZERS)\n  message(STATUS \" -Wmissing-field-initializers does NOT work\")\nendif()\nif (NOT HAVE_C_WORKING_SHADOW)\n  message(STATUS \" -Wshadow does NOT work\")\nendif()\nif (NOT HAVE_C_WREDUNDANT_DECLS)\n  message(STATUS \" -Wredundant-decls does NOT work\")\nendif()\nif (NOT HAVE_GLIBC_UAPI_COMPAT)\n  message(STATUS \" libc netinet/in.h and linux/in.h do NOT coexist\")\nendif()\nif (NOT HAVE_TARGET_SSE)\n  message(STATUS \" attribute(target(\\\"sse\\\")) does NOT work\")\nendif()\nif (NOT DRM_INCLUDE_DIRS)\n  message(STATUS \" DMABUF NOT supported (disabling some tests)\")\nendif()\nif (NOT HAVE_GLIBC_HWCAP_S390_PCI_MIO )\n  message(STATUS \" Glibc version does not contain the HWCAP_S390_PCI_MIO bit, using shim version\")\nendif()\n"
        },
        {
          "name": "COPYING.BSD_FB",
          "type": "blob",
          "size": 1.265625,
          "content": "\t\t   OpenIB.org BSD license (FreeBSD Variant)\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  - Redistributions of source code must retain the above copyright notice,\n    this list of conditions and the following disclaimer.\n\n  - Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "COPYING.BSD_MIT",
          "type": "blob",
          "size": 0.9775390625,
          "content": "\t\t     OpenIB.org BSD license (MIT variant)\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  - Redistributions of source code must retain the above copyright notice,\n    this list of conditions and the following disclaimer.\n\n  - Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "COPYING.GPL2",
          "type": "blob",
          "size": 17.66796875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "COPYING.md",
          "type": "blob",
          "size": 1.953125,
          "content": "# Default Dual License\n\nUnless otherwise stated this software is available to you under a choice of\none of two licenses.  You may choose to be licensed under the terms of the\nOpenIB.org BSD (MIT variant) license (see COPYING.BSD_MIT) or the GNU General\nPublic License (GPL) Version 2 (see COPYING.GPL2), both included in this\npackage.\n\nFiles marked 'See COPYING file' are licensed under the above Dual License.\n\n# Other Options\n\nIndividual source files may use a license different from the above Defaul Dual\nLicense. If a license is declared in the file then it supersedes the Default\nLicense.\n\nIf a directory contains a COPYING file then the License from that file becomes\nthe Default License for files in that directory and below.\n\n# Copyright Holders\n\nRefer to individual files for information on the copyright holders.\n\n# License Catalog (Informative, Non Binding)\n\n## Utilities\n\nUtility source code that may be linked into any binary are available under\nseveral licenses:\n\n   - MIT license (see ccan/LICENSE.MIT)\n   - Creative Commons CC0 1.0 Universal License (see ccan/LICENSE.CC0)\n\n## Providers\n\nThe following providers use a different license than the Default Dual\nLicense. Refer to files in each directory for details.\n\nhfi1verbs\n: Dual License: GPLv2 or Intel 3 clause BSD license\n\nipathverbs\n: Dual License: GPLv2 or PathScale BSD Patent license\n\nocrdma\n: Dual License: GPLv2 or OpenIB.org BSD (FreeBSD variant), See COPYING.BSD_FB\n\n## Libraries\n\nAll library compilable source code (.c and .h files) are available under the\nDefault Dual License.\n\nUnmarked ancillary files may be available under a Dual License: GPLv2 or\nOpenIB.org BSD (FreeBSD variant).\n\n## Tools (iwpmd, srp_daemon, ibacm)\n\nAll compilable source code (.c and .h files) are available under the Default\nDual License.\n\nUnmarked ancillary files may be available under a Dual License: GPLv2 or\nOpenIB.org BSD (FreeBSD variant).\n\nsrp_daemon/srp_daemon/srp_daemon.sh: Any one of the GPLv2, a 2 clause BSD\nlicense or the CPLv1.\n"
        },
        {
          "name": "Documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "MAINTAINERS",
          "type": "blob",
          "size": 5.478515625,
          "content": "                          List of maintainers\n\nGenerally patches should be submitted to the main development mailing list:\n\nlinux-rdma@vger.kernel.org\n\nDescriptions of section entries:\n        F: Files and directories with wildcard patterns.\n           A trailing slash includes all files and subdirectory files.\n           F:   providers/mlx4/ all files in and below providers/mlx4/\n           F:   providers/*     all files in providers, but not below\n           F:   */net/*         all files in \"any top level directory\"/net\n           One pattern per line.  Multiple F: lines acceptable.\n        H: Historical authors\n        L: Mailing list that is relevant to this area\n        M: Designated reviewer: FullName <address@domain>\n           These reviewers should be CCed on patches.\n        S: Status, one of the following:\n           Supported:   Someone is actually paid to look after this.\n           Maintained:  Someone actually looks after it.\n           Odd Fixes:   It has a maintainer but they don't have time to do\n                        much other than throw the odd patch in. See below..\n           Orphan:      No current maintainer [but maybe you could take the\n                        role as you write your new code].\n           Obsolete:    Old code. Something tagged obsolete generally means\n                        it has been replaced by a better system and you\n                        should be using that.\n\n                -----------------------------------\n\n* OVERALL PACKAGE\nM:\tLeon Romanovsky <leon@kernel.org>\nM:\tJason Gunthorpe <jgg@mellanox.com>\nH:\tDoug Ledford <dledford@redhat.com>\nS:\tSupported\n\nBUILD SYSTEM\nM:\tJason Gunthorpe <jgg@mellanox.com>\nS:\tSupported\nF:\t*/CMakeLists.txt\nF:\t*/lib*.map\nF:\tbuildlib/\n\nDEBIAN PACKAGING\nM:\tBenjamin Drung <bdrung@ubuntu.com>\nS:\tSupported\nF:\tdebian/\n\nBNXT_RE USERSPACE PROVIDER (for bnxt_re.ko)\nM:\tSelvin Xavier <selvin.xavier@broadcom.com>\nS:\tSupported\nF:\tproviders/bnxt_re/\n\nCXGB4 USERSPACE PROVIDER (for iw_cxgb4.ko)\nM:\tSteve Wise <swise@opengridcomputing.com>\nS:\tSupported\nF:\tproviders/cxgb4/\n\nEFA USERSPACE PROVIDER (for efa.ko)\nM:\tMichael Margolin <mrgolin@amazon.com>\nS:\tSupported\nF:\tproviders/efa/\n\nERDMA USERSPACE PROVIDER (for erdma.ko)\nM:\tCheng Xu <chengyou@linux.alibaba.com>\nS:\tSupported\nF:\tproviders/erdma/\n\nHF1 USERSPACE PROVIDER (for hf1.ko)\nM:\tDennis Dalessandro <dennis.dalessandro@cornelisnetworks.com>\nS:\tSupported\nF:\tproviders/hfi1verbs/\n\nHNS USERSPACE PROVIDER (for hns-roce-hw-v2.ko)\nM:\tJunxian Huang <huangjunxian6@hisilicon.com>\nM:\tChengchang Tang <tangchengchang@huawei.com>\nS:\tSupported\nF:\tproviders/hns/\n\nIRDMA USERSPACE PROVIDER (for i40iw.ko and irdma.ko)\nM:\tSindhu Devale <sindhu.devale@intel.com>\nM:\tTatyana Nikolova <tatyana.e.nikolova@intel.com>\nS:\tSupported\nF:\tproviders/irdma/\n\nRDMA Communication Manager Assistant (for librdmacm.so)\nM:\tHaakon Bugge <haakon.bugge@oracle.com>\nM:\tMark Haywood <mark.haywood@oracle.com>\nS:\tSupported\nF:\tibacm/*\n\nIPATH/QIB USERSPACE PROVIDER (for ib_qib.ko)\nM:\tDennis Dalessandro <dennis.dalessandro@cornelisnetworks.com>\nS:\tSupported\nF:\tproviders/ipathverbs/\n\nIWARP PORT MAPPER DAEMON (for iwarp kernel providers)\nM:\tTatyana Nikolova <Tatyana.E.Nikolova@intel.com>\nM:\tSteve Wise <swise@opengridcomputing.com>\nH:\tRobert Sharp <robert.o.sharp@intel.com>\nS:\tSupported\nF:\tiwpmd/\n\nLIBIBUMAD USERSPACE LIBRARY FOR SMP AND GMP MAD PROCESSING (/dev/infiniband/umadX)\nM:\tDaniel Klein <danielk@mellanox.com>\nH:\tHal Rosenstock <hal@dev.mellanox.co.il>\nH:\tSasha Khapyorsky <sashak@voltaire.com>\nH:\tShahar Frank <shahar@voltaire.com>\nS:\tSupported\nF:\tlibibumad/\n\nLIBIBVERBS USERSPACE LIBRARY FOR RDMA VERBS (/dev/infiniband/uverbsX)\nM:\tYishai Hadas <yishaih@dev.mellanox.co.il>\nH:\tMichael S. Tsirkin <mst@mellanox.co.il>\nH:\tDoug Ledford <dledford@redhat.com>\nH:\tSean Hefty <sean.hefty@intel.com>\nH:\tDotan Barak <dotanba@gmail.com>\nH:\tRoland Dreier <roland@topspin.com>\nS:\tSupported\nF:\tlibibverbs/\n\nLIBRDMACM USERSPACE LIBRARY FOR RDMA CONNECTION MANAGEMENT (/dev/infiniband/rdma_cm)\nM:\tSean Hefty <sean.hefty@intel.com>\nS:\tSupported\nF:\tlibrdmacm/\n\nMANA USERSPACE PROVIDER (for mana_ib.ko)\nM:\tLong Li <longli@microsoft.com>\nS:\tSupported\nF:\tproviders/mana/\n\nMLX4 USERSPACE PROVIDER (for mlx4_ib.ko)\nM:\tYishai Hadas <yishaih@mellanox.com>\nH:\tRoland Dreier <rolandd@cisco.com>\nS:\tSupported\nF:\tproviders/mlx4/\n\nMLX5 USERSPACE PROVIDER (for mlx5_ib.ko)\nM:\tYishai Hadas <yishaih@mellanox.com>\nH:\tEli Cohen <eli@mellanox.com>\nS:\tSupported\nF:\tproviders/mlx5/\n\nMTHCA USERSPACE PROVIDER (for ib_mthca.ko)\nM:\tVladimir Sokolovsky <vlad@mellanox.com>\nH:\tMichael S. Tsirkin <mst@mellanox.co.il>\nH:\tRoland Dreier <roland@topspin.com>\nS:\tSupported\nF:\tproviders/mthca/\n\nOCRDMA USERSPACE PROVIDER (for ocrdma.ko)\nM:\tSelvin Xavier <selvin.xavier@broadcom.com>\nS:\tSupported\nF:\tproviders/ocrdma/\n\nQEDR USERSPACE PROVIDER (for qedr.ko)\nM:\tMichal Kalderon <michal.kalderon@marvell.com>\nM:\tAriel Elior <ariel.elior@marvell.com>\nS:\tSupported\nF:\tproviders/qedr/\n\nRXE SOFT ROCEE USERSPACE PROVIDER (for rdma_rxe.ko)\nM:\tMoni Shoua <monis@mellanox.com>\nS:\tSupported\nF:\tproviders/rxe/\n\nSIW SOFT IWARP USERSPACE PROVIDER (for siw.ko)\nM:\tBernard Metzler <bmt@zurich.ibm.com>\nS:\tSupported\nF:\tproviders/siw/\n\nSRP DAEMON (for ib_srp.ko)\nM:\tBart Van Assche <bvanassche@acm.org>\nS:\tSupported\nF:\tsrp_daemon/\n\nSUSE PACKAGING\nM:\tNicolas Morey-Chaisemartin <nmorey@suse.com>\nS:\tSupported\nF:\tsuse/\n\nVMWARE PVRDMA USERSPACE PROVIDER (for vmw_pvrdma.ko)\nM:\tAdit Ranadive <aditr@vmware.com>\nL:\tpv-drivers@vmware.com\nS:\tSupported\nF:\tproviders/vmw_pvrdma/\n\nPYVERBS\nM:\tEdward Srouji <edwards@mellanox.com>\nS:\tSupported\nF:\tpyverbs/\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.75390625,
          "content": "[![Build Status](https://dev.azure.com/ucfconsort/rdma-core/_apis/build/status/linux-rdma.rdma-core?branchName=master)](https://dev.azure.com/ucfconsort/rdma-core/_build/latest?definitionId=2&branchName=master)\n\n# RDMA Core Userspace Libraries and Daemons\n\nThis is the userspace components for the Linux Kernel's drivers/infiniband\nsubsystem. Specifically this contains the userspace libraries for the\nfollowing device nodes:\n\n - /dev/infiniband/uverbsX (libibverbs)\n - /dev/infiniband/rdma_cm (librdmacm)\n - /dev/infiniband/umadX (libibumad)\n\nThe userspace component of the libibverbs RDMA kernel drivers are included\nunder the providers/ directory. Support for the following Kernel RDMA drivers\nis included:\n\n - bnxt_re.ko\n - efa.ko\n - erdma.ko\n - iw_cxgb4.ko\n - hfi1.ko\n - hns-roce-hw-v2.ko\n - irdma.ko\n - ib_qib.ko\n - mana_ib.ko\n - mlx4_ib.ko\n - mlx5_ib.ko\n - ib_mthca.ko\n - ocrdma.ko\n - qedr.ko\n - rdma_rxe.ko\n - siw.ko\n - vmw_pvrdma.ko\n\nAdditional service daemons are provided for:\n - srp_daemon (ib_srp.ko)\n - iwpmd (for iwarp kernel providers)\n - ibacm (for InfiniBand communication management assistant)\n\n# Building\n\nThis project uses a cmake based build system. Quick start:\n\n```sh\n$ bash build.sh\n```\n\n*build/bin* will contain the sample programs and *build/lib* will contain the\nshared libraries. The build is configured to run all the programs 'in-place'\nand cannot be installed.\n\n### Debian Derived\n\n```sh\n$ apt-get install build-essential cmake gcc libudev-dev libnl-3-dev libnl-route-3-dev ninja-build pkg-config valgrind python3-dev cython3 python3-docutils pandoc\n```\n\nSupported releases:\n\n* Debian 9 (stretch) or newer\n* Ubuntu 16.04 LTS (xenial) or newer\n\n### Fedora, CentOS 8\n\n```sh\n$ dnf builddep redhat/rdma-core.spec\n```\n\nNOTE: Fedora Core uses the name 'ninja-build' for the 'ninja' command.\n\n### openSUSE\n\n```sh\n$ zypper install cmake gcc libnl3-devel libudev-devel ninja pkg-config valgrind-devel python3-devel python3-Cython python3-docutils pandoc\n```\n\n## Building on CentOS 7, Amazon Linux 2\n\nInstall required packages:\n\n```sh\n$ yum install cmake gcc libnl3-devel libudev-devel make pkgconfig valgrind-devel\n```\n\nDevelopers on CentOS 7 or Amazon Linux 2 are suggested to install more modern\ntooling for the best experience.\n\nCentOS 7:\n\n```sh\n$ yum install epel-release\n$ yum install cmake3 ninja-build pandoc\n```\n\nAmazon Linux 2:\n\n```sh\n$ amazon-linux-extras install epel\n$ yum install cmake3 ninja-build pandoc\n```\n\nNOTE: EPEL uses the name 'ninja-build' for the 'ninja' command, and 'cmake3'\nfor the 'cmake' command.\n\n# Usage\n\nTo set up software RDMA on an existing interface with either of the available\ndrivers, use the following commands, substituting `<DRIVER>` with the name of\nthe driver of your choice (`rdma_rxe` or `siw`) and `<TYPE>` with the type\ncorresponding to the driver (`rxe` or `siw`).\n\n```\n# modprobe <DRIVER>\n# rdma link add <NAME> type <TYPE> netdev <DEVICE>\n```\n\nPlease note that you need version of `iproute2` recent enough is required for the\ncommand above to work.\n\nYou can use either `ibv_devices` or `rdma link` to verify that the device was\nsuccessfully added.\n\n# Reporting bugs\n\nBugs should be reported to the <linux-rdma@vger.kernel.org> mailing list\nIn your bug report, please include:\n\n * Information about your system:\n   - Linux distribution and version\n   - Linux kernel and version\n   - InfiniBand hardware and firmware version\n   - ... any other relevant information\n\n * How to reproduce the bug.\n\n * If the bug is a crash, the exact output printed out when the crash\n   occurred, including any kernel messages produced.\n\n# Submitting patches\n\nSee [Contributing to rdma-core](Documentation/contributing.md).\n\n# Stable branches\n\nStable versions are released regularly with backported fixes (see Documentation/stable.md)\nThe current minimum version still maintained is 'v33.X'\n"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 0.5361328125,
          "content": "#!/bin/bash\nset -e\n\nSRCDIR=`dirname $0`\nBUILDDIR=\"$SRCDIR/build\"\n\nmkdir -p \"$BUILDDIR\"\n\nif hash cmake3 2>/dev/null; then\n    # CentOS users are encouraged to install cmake3 from EPEL\n    CMAKE=cmake3\nelse\n    CMAKE=cmake\nfi\n\nif hash ninja-build 2>/dev/null; then\n    # Fedora uses this name\n    NINJA=ninja-build\nelif hash ninja 2>/dev/null; then\n    NINJA=ninja\nfi\n\ncd \"$BUILDDIR\"\n\nif [ \"x$NINJA\" == \"x\" ]; then\n    $CMAKE -DIN_PLACE=1 ${EXTRA_CMAKE_FLAGS:-} ..\n    make\nelse\n    $CMAKE -DIN_PLACE=1 -GNinja ${EXTRA_CMAKE_FLAGS:-} ..\n    $NINJA\nfi\n"
        },
        {
          "name": "buildlib",
          "type": "tree",
          "content": null
        },
        {
          "name": "ccan",
          "type": "tree",
          "content": null
        },
        {
          "name": "debian",
          "type": "tree",
          "content": null
        },
        {
          "name": "ibacm",
          "type": "tree",
          "content": null
        },
        {
          "name": "infiniband-diags",
          "type": "tree",
          "content": null
        },
        {
          "name": "iwpmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "kernel-boot",
          "type": "tree",
          "content": null
        },
        {
          "name": "kernel-headers",
          "type": "tree",
          "content": null
        },
        {
          "name": "libibmad",
          "type": "tree",
          "content": null
        },
        {
          "name": "libibnetdisc",
          "type": "tree",
          "content": null
        },
        {
          "name": "libibumad",
          "type": "tree",
          "content": null
        },
        {
          "name": "libibverbs",
          "type": "tree",
          "content": null
        },
        {
          "name": "librdmacm",
          "type": "tree",
          "content": null
        },
        {
          "name": "providers",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyverbs",
          "type": "tree",
          "content": null
        },
        {
          "name": "rdma-ndd",
          "type": "tree",
          "content": null
        },
        {
          "name": "redhat",
          "type": "tree",
          "content": null
        },
        {
          "name": "srp_daemon",
          "type": "tree",
          "content": null
        },
        {
          "name": "suse",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "util",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}