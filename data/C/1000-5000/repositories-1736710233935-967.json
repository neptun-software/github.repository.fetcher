{
  "metadata": {
    "timestamp": 1736710233935,
    "page": 967,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pmq20/ruby-packer",
      "stars": 1565,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0927734375,
          "content": ".DS_Store\r\n*.dll\r\n*~\r\n\r\n/.vs/\r\n/.vscode/\r\n/a.exe\r\n/a.out\r\n/ruby-packer/\r\n/rubyc\r\n/rubyc.exe\r\n\r\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 0.0283203125,
          "content": "Minqi Pan <pmq2001@gmail.com>"
        },
        {
          "name": ".rubocop.yml",
          "type": "blob",
          "size": 0.3486328125,
          "content": "AllCops:\n  NewCops: enable\n  Exclude:\n    - ruby/**/*\n    - vendor/**/*\n\nMetrics/AbcSize:\n  Enabled: false\n\nMetrics/ClassLength:\n  Enabled: false\n\nMetrics/BlockLength:\n  Enabled: false\n\nMetrics/MethodLength:\n  Enabled: false\n\nMetrics/PerceivedComplexity:\n  Enabled: false\n\nMetrics/CyclomaticComplexity:\n  Enabled: false\n\nLayout/LineLength:\n  Enabled: false\n"
        },
        {
          "name": ".ruby-version",
          "type": "blob",
          "size": 0.0107421875,
          "content": "ruby-2.7.1\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.498046875,
          "content": "# Authors ordered by first contribution.\n\nMinqi Pan <pmq2001@gmail.com>\nRei <duduktamg@hotmail.com>\nGeorg Gadinger <nilsding@nilsding.org>\nEric Hodel <drbrain@segment7.net>\nJari Kolehmainen <jari.kolehmainen@gmail.com>\nYouri van der Lans <youri@itflows.nl>\nDimitri Arrigoni <dimitri@arrigoni.me>\nJess <jessachandler@gmail.com>\nBeth Skurrie <beth@bethesque.com>\nJustin Chan <chanman@chanman.net>\nSaverio Miroddi <saverio.pub2@gmail.com>\nBryan Powell <bryan@metabahn.com>\nPiotr Stachyra <piotr.stachyra@iohk.io>\n"
        },
        {
          "name": "Gemfile",
          "type": "blob",
          "size": 0.3798828125,
          "content": "# frozen_string_literal: true\n\nsource 'https://rubygems.org'\n\nruby '2.7.1'\n\ngem 'activesupport', '~> 6.0', '>= 6.0.3.2', require: 'active_support/all'\ngem 'minitest', '~> 5.14', '>= 5.14.1'\ngem 'minitest-reporters', github: 'kern/minitest-reporters' # make sure github gems work, cf. https://github.com/pmq20/ruby-packer/issues/95\ngem 'pry', '~> 0.13.1'\ngem 'rake', '~> 13.0', '>= 13.0.1'\n"
        },
        {
          "name": "Gemfile.lock",
          "type": "blob",
          "size": 1.056640625,
          "content": "GIT\n  remote: https://github.com/kern/minitest-reporters.git\n  revision: 9cb9e78aed69bfe4eed6c27b5b795e8bb4ad708f\n  specs:\n    minitest-reporters (1.4.2)\n      ansi\n      builder\n      minitest (>= 5.0)\n      ruby-progressbar\n\nGEM\n  remote: https://rubygems.org/\n  specs:\n    activesupport (6.0.3.2)\n      concurrent-ruby (~> 1.0, >= 1.0.2)\n      i18n (>= 0.7, < 2)\n      minitest (~> 5.1)\n      tzinfo (~> 1.1)\n      zeitwerk (~> 2.2, >= 2.2.2)\n    ansi (1.5.0)\n    builder (3.2.4)\n    coderay (1.1.3)\n    concurrent-ruby (1.1.6)\n    i18n (1.8.3)\n      concurrent-ruby (~> 1.0)\n    method_source (1.0.0)\n    minitest (5.14.1)\n    pry (0.13.1)\n      coderay (~> 1.1)\n      method_source (~> 1.0)\n    rake (13.0.1)\n    ruby-progressbar (1.10.1)\n    thread_safe (0.3.6)\n    tzinfo (1.2.7)\n      thread_safe (~> 0.1)\n    zeitwerk (2.4.0)\n\nPLATFORMS\n  mswin64\n  ruby\n  x64-mingw32\n\nDEPENDENCIES\n  activesupport (~> 6.0, >= 6.0.3.2)\n  minitest (~> 5.14, >= 5.14.1)\n  minitest-reporters!\n  pry (~> 0.13.1)\n  rake (~> 13.0, >= 13.0.1)\n\nRUBY VERSION\n   ruby 2.7.1p83\n\nBUNDLED WITH\n   2.1.4\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0546875,
          "content": "MIT License\n\nCopyright (c) 2017 - 2020 Minqi Pan et al.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.35546875,
          "content": "# Ruby Packer\n\n*Packing your Ruby application into a single executable.*\n\n[![Windows](https://github.com/pmq20/ruby-packer/workflows/Windows/badge.svg)](https://github.com/pmq20/ruby-packer/actions?query=workflow%3A\"Windows\")\n[![macOS](https://github.com/pmq20/ruby-packer/workflows/macOS/badge.svg)](https://github.com/pmq20/ruby-packer/actions?query=workflow%3A\"macOS\")\n[![Linux](https://github.com/pmq20/ruby-packer/workflows/Linux/badge.svg)](https://github.com/pmq20/ruby-packer/actions?query=workflow%3A\"Linux\")\n\n## Features\n\nIt takes less than 5 minutes to compile any project with Ruby Packer.\n\nYou won't need to modify a single line of code in your application, no matter how you developed it as long as it works in plain Ruby!\n\n- Works on ![win](resource/win_sm.png) Windows, ![macOS](resource/apple_sm.png) macOS and ![linux](resource/linux_sm.png) Linux\n- Windows is supported via the native Windows API; there are no MSYS2/MinGW/Cygwin dependencies\n- Creates a binary distribution of your Ruby and/or Rails application\n- Supports natively any form of `require` and `load`, including dynamic ones (e.g. `load(my_path + '/x.rb')`)\n- Ruby Packer is written in Ruby and is packed and distributed using Ruby Packer itself\n- Native C extensions are fully supported\n- Open Source, MIT Licensed\n\n### Known Limitations\n\n- Some gems that use C extensions that use libc IO to load files from your Rails application will not work with rubyc.  Notably, [bootsnap will not work with rubyc](https://github.com/pmq20/ruby-packer/issues/30#issuecomment-387893082)\n- On macOS and Linux, DTrace is currently disabled, see https://github.com/pmq20/ruby-packer/issues/114\n\n## Download\n\n### Stable Releases\n\nHere is the latest stable Ruby Packer release:\n\n|    OS     | Arch. |                                              Executable                                                      |\n|:---------:|:-----:|--------------------------------------------------------------------------------------------------------------|\n|  Windows  |  x64  | https://gw.alipayobjects.com/os/rmsportal/WxwlPrUTTReYNVVxJMtR.zip                                           |\n|   macOS   |  x64  | https://gw.alipayobjects.com/os/enclose-prod/b812fa0f-d52b-44f1-8233-65ab8707cf1f/rubyc-v0.4.0-darwin-x64.gz |\n|   Linux   |  x64  | https://gw.alipayobjects.com/os/enclose-prod/1fd23e6b-d48f-4ed0-94dd-f0f539960253/rubyc-v0.4.0-linux-x64.gz  |\n\n### Unstable Pre-release\n\nWhenever the `master` branch CI succeeded, a Ruby Packer pre-release binary would be automatically generated. Here is the latest unstable pre-release build:\n\n|    OS     | Arch. |                               Executable                                      |\n|:---------:|:-----:|-------------------------------------------------------------------------------|\n|  Windows  |  x64  | https://github.com/pmq20/ruby-packer/releases/download/windows-x64/rubyc.exe  |\n|   macOS   |  x64  | https://github.com/pmq20/ruby-packer/releases/download/darwin-x64/rubyc       |\n|   Linux   |  x64  | https://github.com/pmq20/ruby-packer/releases/download/linux-x64/rubyc        |\n\n## Install\n\n### ![win](resource/win_med.png) Install on Windows\n\nFirst install the prerequisites:\n\n* [Visual Studio](https://www.visualstudio.com/), all editions including the Community edition (remember to select \"Common Tools for Visual C++\" feature during installation).\n* [SquashFS Tools](http://squashfs.sourceforge.net/): you might want to first install [choco](https://chocolatey.org) and then execute `choco install squashfs`.\n* [Ruby](https://www.ruby-lang.org/): you might want to install it using [RubyInstaller](https://rubyinstaller.org/).\n* [Perl](https://www.perl.org/): you might want to install it using [Strawberry Perl for Windows](http://strawberryperl.com/).\n* [Netwide Assembler](https://www.nasm.us): please make sure `nasm` works from your command line.\n\nThen download `rubyc.exe` from either [Unstable Pre-release](#unstable-pre-release) or [Stable Releases](#stable-releases).\nOptionally, put it under `C:\\Windows` or any other `PATH` directories.\nOpen Visual Studio's \"x64 Native Tools Command Prompt\" and execute `rubyc --help` therein.\n\n### ![macOS](resource/apple_med.png) Install on macOS\n\nFirst install the prerequisites:\n\n* [SquashFS Tools](http://squashfs.sourceforge.net/): `brew install squashfs`\n* [Xcode](https://developer.apple.com/xcode/download/)\n  * You also need to install the `Command Line Tools` via Xcode. You can find\n    this under the menu `Xcode -> Preferences -> Downloads`\n  * This step will install `gcc` and the related toolchain containing `make`\n* [Ruby](https://www.ruby-lang.org/)\n\nThen download `rubyc` from either [Unstable Pre-release](#unstable-pre-release) or [Stable Releases](#stable-releases).\nRun `chmod +x` to give it execution permissions and execute `./rubyc --help`.\n\n### ![linux](resource/linux_med.png) Install on Linux\n\nFirst install the prerequisites:\n\n* [SquashFS Tools](http://squashfs.sourceforge.net/)\n  - `sudo yum install squashfs-tools`\n  - `sudo apt install squashfs-tools`\n* `gcc` or `clang`\n* GNU Make\n* [Ruby](https://www.ruby-lang.org/)\n\nThen download `rubyc` from either [Unstable Pre-release](#unstable-pre-release) or [Stable Releases](#stable-releases).\nRun `chmod +x` to give it execution permissions and execute `./rubyc --help`.\n\n## Usage\n\n    rubyc [OPTION]... [ENTRANCE_FILE]\n\n    ENTRANCE_FILE refers to the path of an executable ruby script from your project, e.g. \"bin/rails\".\n    If ENTRANCE_FILE was not provided, a single raw Ruby interpreter executable would be produced.\n\n    -r, --root=DIR                   The path to the root of your application\n    -o, --output=FILE                The path of the output file\n    -d, --tmpdir=DIR                 The directory for temporary files\n        --keep-tmpdir                Keeps all temporary files that were generated last time\n        --openssl-dir                The path to openssl\n        --make-args=ARGS             Extra arguments to be passed to make\n        --nmake-args=ARGS            Extra arguments to be passed to nmake\n    -i, --ignore-file=STRING         Ignore file(s) from build\n        --debug                      Enable debug mode\n        --quiet                      Enable quiet mode\n    -v, --version                    Prints the version of rubyc and exit\n    -V, --ruby-version               Prints the version of the Ruby runtime and exit\n        --ruby-api-version           Prints the version of the Ruby API and exit\n    -h, --help                       Prints this help and exit\n\n### The `--openssl-dir` Option\n\nrubyc compiles its own version of openssl without any certifications.\nTo be able to use ssl with rubyc it should know where to find the certifications.\n\nBy default this path is set to `/usr/local/etc/openssl/` but can be overridden using the `--openssl-dir` argument.\n\nKeep in mind that users running your compiled package should have their certifications\npresent in this directory as well.\n\n### The `--ignore-file` Option\n\nIf you don't want certain files included in the build you can ignore them from the command line using -i.\n\n\trubyc -i ignore.file -i ignore-2.file -i \"ignore*\"\n\nAlternatively you can create a `.rubycignore` file in the root of your project to specify which files should be ignored.\n\n## Examples\n\n### Producing a Portable Ruby Interpreter Executable\n\nI.e. packing the raw Ruby interpreter without packing any projects:\n\n\trubyc\n\t./a.out (or a.exe on Windows)\n\n### Packing a CLI utility\n\nTaking Ruby Packer itself as an example of the CLI utility to pack:\n\n\tgit clone --depth 1 https://github.com/pmq20/ruby-packer\n\tcd ruby-packer\n\trubyc bin/rubyc\n\t./a.out (or a.exe on Windows)\n\n### Packing a Rails Application\n\n\trails new yours\n\tcd yours\n\trubyc bin/rails\n\t./a.out server (or a.exe server on Windows)\n\n## Building `rubyc` from Source\n\nTo build `rubyc` you must have a C compiler and the necessary toolchain to\nbuild ruby and the libraries stuffed inside rubyc which include at least:\n* gdbm\n* libffi\n* ncurses\n* openssl\n* readline\n* yaml\n* zlib\n\nIf you are unsure if your toolchain is complete then trying to build `rubyc`\nwill let you know you are missing something.  Unfortunately it may tell you\nwith some unfamiliar message.  Please file an issue here if this occurs.\n\nOnce your toolchain is set up run `bundle`.  To compile your own `rubyc` run:\n\n\tbundle exec rake rubyc\n\nOr (if you want to compile with debug symbols):\n\n\tENCLOSE_IO_RUBYC_ADDTIONAL_ARGS=--debug bundle exec rake rubyc\n\nThis will produce a single `rubyc` executable, which can\nbe put inside any of your `PATH` locations, so that it can be directly\ncalled from the command prompt. For example:\n\n\tmv rubyc /usr/local/bin\n\nRemember that rubyc includes all the files from the current directory in the\nbuilt executable.  You must *delete the prior rubyc* or your squashfs will\n*continually grow larger* and the embedded squashfs *compile time will be\nvery, very long*.\n\n## Authors\n\n[Minqi Pan et al.](https://raw.githubusercontent.com/pmq20/ruby-packer/master/AUTHORS)\n\n## License\n\n[MIT](https://raw.githubusercontent.com/pmq20/ruby-packer/master/LICENSE)\n\n## See Also\n\n- [RubyConf 2017 (New Orleans, LA) presentation video: Packing your Ruby application into a single executable](https://www.youtube.com/watch?v=1mme7HiLqzA).\n- [Libsquash](https://github.com/pmq20/libsquash): portable, user-land SquashFS that can be easily linked and embedded within your application.\n- [Squashfs Tools](https://github.com/plougher/squashfs-tools): tools to create and extract Squashfs filesystems.\n\n"
        },
        {
          "name": "Rakefile",
          "type": "blob",
          "size": 1.63671875,
          "content": "# frozen_string_literal: true\n\nrequire 'rubygems'\nrequire 'bundler/setup'\nBundler.require(:default)\n\nrequire 'rake/testtask'\nrequire 'rake/clean'\n\ntask default: %w[test]\nrubyc_deps = FileList[File.expand_path('**/*', __dir__)] - [File.expand_path(((Gem.win_platform? ? 'rubyc.exe' : 'rubyc')), __dir__)]\n\ndesc \"build #{Gem.win_platform? ? 'rubyc.exe' : 'rubyc'}\"\nfile((Gem.win_platform? ? 'rubyc.exe' : 'rubyc') => rubyc_deps) do\n  warn \"Rebuilding #{Gem.win_platform? ? 'rubyc.exe' : 'rubyc'}...\"\n\n  # don't include rubyc in rubyc\n  rm_f(Gem.win_platform? ? 'rubyc.exe' : 'rubyc')\n\n  ruby_args = ['bin/rubyc', 'bin/rubyc', '-o', 'rubyc']\n  if ENV['ENCLOSE_IO_RUBYC_ADDTIONAL_ARGS'].present?\n    ENV['ENCLOSE_IO_RUBYC_ADDTIONAL_ARGS'].split(/\\s+/).each do |arg|\n      ruby_args << arg.strip\n    end\n  end\n  warn \"Will call ruby with #{ruby_args}\"\n  ruby(*ruby_args)\nend\n\nCLEAN << (Gem.win_platform? ? 'rubyc.exe' : 'rubyc')\n\nnamespace 'rubyc' do\n  rubyc_original_ruby_env = {\n    'ENCLOSE_IO_USE_ORIGINAL_RUBY' => 'true'\n  }\n\n  desc 'run pry from inside rubyc'\n  task pry: (Gem.win_platform? ? 'rubyc.exe' : 'rubyc') do\n    sh rubyc_original_ruby_env, (Gem.win_platform? ? '.\\\\rubyc.exe' : './rubyc'), '/__enclose_io_memfs__/bin/pry'\n  end\n\n  desc 'run irb from inside rubyc'\n  task irb: (Gem.win_platform? ? 'rubyc.exe' : 'rubyc') do\n    sh rubyc_original_ruby_env, (Gem.win_platform? ? '.\\\\rubyc.exe' : './rubyc'), '-rirb', '-e', 'IRB.start'\n  end\n\n  desc 'run ruby -e from inside rubyc'\n  task :ruby, [:e] => (Gem.win_platform? ? 'rubyc.exe' : 'rubyc') do |_, args|\n    sh rubyc_original_ruby_env, (Gem.win_platform? ? '.\\\\rubyc.exe' : './rubyc'), '-e', args[:e]\n  end\nend\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "rakelib",
          "type": "tree",
          "content": null
        },
        {
          "name": "resource",
          "type": "tree",
          "content": null
        },
        {
          "name": "ruby",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}