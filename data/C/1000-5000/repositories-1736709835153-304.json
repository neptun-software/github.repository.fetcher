{
  "metadata": {
    "timestamp": 1736709835153,
    "page": 304,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mtoyoda/sl",
      "stars": 2999,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.00390625,
          "content": "/sl\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.326171875,
          "content": "Copyright 1993,1998,2014 Toyoda Masashi (mtoyoda@acm.org)\n\nEveryone is permitted to do anything on this program including copying,\nmodifying, and improving, unless you try to pretend that you wrote it.\ni.e., the above copyright notice has to appear in all copies.\nTHE AUTHOR DISCLAIMS ANY RESPONSIBILITY WITH REGARD TO THIS SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.349609375,
          "content": "#==========================================\n#    Makefile: makefile for sl 5.1\n#\tCopyright 1993, 1998, 2014\n#                 Toyoda Masashi\n#\t\t  (mtoyoda@acm.org)\n#\tLast Modified: 2014/03/31\n#==========================================\n\nCC=gcc\nCFLAGS=-O -Wall\n\nall: sl\n\nsl: sl.c sl.h\n\t$(CC) $(CFLAGS) -o sl sl.c -lncurses\n\nclean:\n\trm -f sl\n\ndistclean: clean\n"
        },
        {
          "name": "README.ja.md",
          "type": "blob",
          "size": 0.42578125,
          "content": "SL: キータイプ矯正ソフト\n========================\n\nむかしにも投稿された冗談ソフトの sl の豪華版です。\nアイデアは借り物ですが、プログラム自体は私のオリジナルです。\nいまさらながら若干アップデートしました。\na,l,F,c オプションが有効です。機能は実行して確かめてください。\n\nCopyright 1993,1998,2014 Toyoda Masashi (mtoyoda@acm.org)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.2900390625,
          "content": "SL(1): Cure your bad habit of mistyping\n=======================================\n\nSL (Steam Locomotive) runs across your terminal when you type \"sl\" as\nyou meant to type \"ls\". It's just a joke command, and not useful at\nall.\n\nCopyright 1993,1998,2014 Toyoda Masashi (mtoyoda@acm.org)\n\n![](demo.gif)"
        },
        {
          "name": "demo.gif",
          "type": "blob",
          "size": 651.115234375,
          "content": null
        },
        {
          "name": "sl.1",
          "type": "blob",
          "size": 0.5791015625,
          "content": ".\\\"\n.\\\"  Copyright 1993,1998,2014 Toyoda Masashi (mtoyoda@acm.org)\n.\\\"\n.\\\"\t@(#)sl.1\n.\\\"\n.TH SL 1 \"March 31, 2014\"\n.SH NAME\nsl \\- cure your bad habit of mistyping\n.SH SYNOPSIS\n.B sl\n[\n.B \\-alFc\n]\n.SH DESCRIPTION\n.B sl\nis a highly advanced animation program for curing your bad habit of mistyping.\n.PP\n.TP\n.B \\-a\nAn accident is occurring. People cry for help.\n.TP\n.B \\-l\nLittle version.\n.TP\n.B \\-F\nIt flies like the galaxy express 999.\n.TP\n.B \\-c\nC51 appears instead of D51.\n.PP\n.SH SEE ALSO\n.BR ls (1)\n.SH BUGS\nIt sometimes lists directory contents.\n.SH AUTHOR\nToyoda Masashi (mtoyoda@acm.org)\n"
        },
        {
          "name": "sl.1.ja",
          "type": "blob",
          "size": 0.74609375,
          "content": ".\\\"\n.\\\"  Copyright 1993,2014 Toyoda Masashi.\n.\\\"\t\t         (mtoyoda@acm.org)\n.\\\"\t@(#)sl.1\n.\\\"\n.TH SL 1 \"March 31, 2014\"\n.SH 名称\nsl \\- キータイプを矯正します。\n.SH 形式\n.B sl\n[\n.B \\-alF\n]\n.SH 解説\n.B sl\nは、高度に発展した、キータイプ矯正を目的とするアニメーションプログラムです。\n.PP\n次のようなオプションがあります。\n.TP\n.B \\-a\nなにかアクシデントがあったようですね。助けを求める人々が悲痛です。\n.TP\n.B \\-l\n小さくなります。\n.TP\n.B \\-F\n飛びます。\n.TP\n.B \\-c\nC51になります。\n.PP\n.SH 関連事項\n.BR ls (1)\n.SH バグ\nカレントディレクトリの内容が表示されることがあります。\n.SH 著者\n豊田 正史 (mtoyoda@acm.org)\n"
        },
        {
          "name": "sl.c",
          "type": "blob",
          "size": 10.4521484375,
          "content": "/*========================================\n *    sl.c: SL version 5.03\n *        Copyright 1993,1998,2014-2015\n *                  Toyoda Masashi\n *                  (mtoyoda@acm.org)\n *        Last Modified: 2014/06/03\n *========================================\n */\n/* sl version 5.03 : Fix some more compiler warnings.                        */\n/*                                              by Ryan Jacobs    2015/01/19 */\n/* sl version 5.02 : Fix compiler warnings.                                  */\n/*                                              by Jeff Schwab    2014/06/03 */\n/* sl version 5.01 : removed cursor and handling of IO                       */\n/*                                              by Chris Seymour  2014/01/03 */\n/* sl version 5.00 : add -c option                                           */\n/*                                              by Toyoda Masashi 2013/05/05 */\n/* sl version 4.00 : add C51, usleep(40000)                                  */\n/*                                              by Toyoda Masashi 2002/12/31 */\n/* sl version 3.03 : add usleep(20000)                                       */\n/*                                              by Toyoda Masashi 1998/07/22 */\n/* sl version 3.02 : D51 flies! Change options.                              */\n/*                                              by Toyoda Masashi 1993/01/19 */\n/* sl version 3.01 : Wheel turns smoother                                    */\n/*                                              by Toyoda Masashi 1992/12/25 */\n/* sl version 3.00 : Add d(D51) option                                       */\n/*                                              by Toyoda Masashi 1992/12/24 */\n/* sl version 2.02 : Bug fixed.(dust remains in screen)                      */\n/*                                              by Toyoda Masashi 1992/12/17 */\n/* sl version 2.01 : Smoke run and disappear.                                */\n/*                   Change '-a' to accident option.                         */\n/*                                              by Toyoda Masashi 1992/12/16 */\n/* sl version 2.00 : Add a(all),l(long),F(Fly!) options.                     */\n/*                                              by Toyoda Masashi 1992/12/15 */\n/* sl version 1.02 : Add turning wheel.                                      */\n/*                                              by Toyoda Masashi 1992/12/14 */\n/* sl version 1.01 : Add more complex smoke.                                 */\n/*                                              by Toyoda Masashi 1992/12/14 */\n/* sl version 1.00 : SL runs vomiting out smoke.                             */\n/*                                              by Toyoda Masashi 1992/12/11 */\n\n#include <curses.h>\n#include <signal.h>\n#include <unistd.h>\n#include \"sl.h\"\n\nvoid add_smoke(int y, int x);\nvoid add_man(int y, int x);\nint add_C51(int x);\nint add_D51(int x);\nint add_sl(int x);\nvoid option(char *str);\nint my_mvaddstr(int y, int x, char *str);\n\nint ACCIDENT  = 0;\nint LOGO      = 0;\nint FLY       = 0;\nint C51       = 0;\n\nint my_mvaddstr(int y, int x, char *str)\n{\n    for ( ; x < 0; ++x, ++str)\n        if (*str == '\\0')  return ERR;\n    for ( ; *str != '\\0'; ++str, ++x)\n        if (mvaddch(y, x, *str) == ERR)  return ERR;\n    return OK;\n}\n\nvoid option(char *str)\n{\n    extern int ACCIDENT, LOGO, FLY, C51;\n\n    while (*str != '\\0') {\n        switch (*str++) {\n            case 'a': ACCIDENT = 1; break;\n            case 'F': FLY      = 1; break;\n            case 'l': LOGO     = 1; break;\n            case 'c': C51      = 1; break;\n            default:                break;\n        }\n    }\n}\n\nint main(int argc, char *argv[])\n{\n    int x, i;\n\n    for (i = 1; i < argc; ++i) {\n        if (*argv[i] == '-') {\n            option(argv[i] + 1);\n        }\n    }\n    initscr();\n    signal(SIGINT, SIG_IGN);\n    noecho();\n    curs_set(0);\n    nodelay(stdscr, TRUE);\n    leaveok(stdscr, TRUE);\n    scrollok(stdscr, FALSE);\n\n    for (x = COLS - 1; ; --x) {\n        if (LOGO == 1) {\n            if (add_sl(x) == ERR) break;\n        }\n        else if (C51 == 1) {\n            if (add_C51(x) == ERR) break;\n        }\n        else {\n            if (add_D51(x) == ERR) break;\n        }\n        getch();\n        refresh();\n        usleep(40000);\n    }\n    mvcur(0, COLS - 1, LINES - 1, 0);\n    endwin();\n\n    return 0;\n}\n\n\nint add_sl(int x)\n{\n    static char *sl[LOGOPATTERNS][LOGOHEIGHT + 1]\n        = {{LOGO1, LOGO2, LOGO3, LOGO4, LWHL11, LWHL12, DELLN},\n           {LOGO1, LOGO2, LOGO3, LOGO4, LWHL21, LWHL22, DELLN},\n           {LOGO1, LOGO2, LOGO3, LOGO4, LWHL31, LWHL32, DELLN},\n           {LOGO1, LOGO2, LOGO3, LOGO4, LWHL41, LWHL42, DELLN},\n           {LOGO1, LOGO2, LOGO3, LOGO4, LWHL51, LWHL52, DELLN},\n           {LOGO1, LOGO2, LOGO3, LOGO4, LWHL61, LWHL62, DELLN}};\n\n    static char *coal[LOGOHEIGHT + 1]\n        = {LCOAL1, LCOAL2, LCOAL3, LCOAL4, LCOAL5, LCOAL6, DELLN};\n\n    static char *car[LOGOHEIGHT + 1]\n        = {LCAR1, LCAR2, LCAR3, LCAR4, LCAR5, LCAR6, DELLN};\n\n    int i, y, py1 = 0, py2 = 0, py3 = 0;\n\n    if (x < - LOGOLENGTH)  return ERR;\n    y = LINES / 2 - 3;\n\n    if (FLY == 1) {\n        y = (x / 6) + LINES - (COLS / 6) - LOGOHEIGHT;\n        py1 = 2;  py2 = 4;  py3 = 6;\n    }\n    for (i = 0; i <= LOGOHEIGHT; ++i) {\n        my_mvaddstr(y + i, x, sl[(LOGOLENGTH + x) / 3 % LOGOPATTERNS][i]);\n        my_mvaddstr(y + i + py1, x + 21, coal[i]);\n        my_mvaddstr(y + i + py2, x + 42, car[i]);\n        my_mvaddstr(y + i + py3, x + 63, car[i]);\n    }\n    if (ACCIDENT == 1) {\n        add_man(y + 1, x + 14);\n        add_man(y + 1 + py2, x + 45);  add_man(y + 1 + py2, x + 53);\n        add_man(y + 1 + py3, x + 66);  add_man(y + 1 + py3, x + 74);\n    }\n    add_smoke(y - 1, x + LOGOFUNNEL);\n    return OK;\n}\n\n\nint add_D51(int x)\n{\n    static char *d51[D51PATTERNS][D51HEIGHT + 1]\n        = {{D51STR1, D51STR2, D51STR3, D51STR4, D51STR5, D51STR6, D51STR7,\n            D51WHL11, D51WHL12, D51WHL13, D51DEL},\n           {D51STR1, D51STR2, D51STR3, D51STR4, D51STR5, D51STR6, D51STR7,\n            D51WHL21, D51WHL22, D51WHL23, D51DEL},\n           {D51STR1, D51STR2, D51STR3, D51STR4, D51STR5, D51STR6, D51STR7,\n            D51WHL31, D51WHL32, D51WHL33, D51DEL},\n           {D51STR1, D51STR2, D51STR3, D51STR4, D51STR5, D51STR6, D51STR7,\n            D51WHL41, D51WHL42, D51WHL43, D51DEL},\n           {D51STR1, D51STR2, D51STR3, D51STR4, D51STR5, D51STR6, D51STR7,\n            D51WHL51, D51WHL52, D51WHL53, D51DEL},\n           {D51STR1, D51STR2, D51STR3, D51STR4, D51STR5, D51STR6, D51STR7,\n            D51WHL61, D51WHL62, D51WHL63, D51DEL}};\n    static char *coal[D51HEIGHT + 1]\n        = {COAL01, COAL02, COAL03, COAL04, COAL05,\n           COAL06, COAL07, COAL08, COAL09, COAL10, COALDEL};\n\n    int y, i, dy = 0;\n\n    if (x < - D51LENGTH)  return ERR;\n    y = LINES / 2 - 5;\n\n    if (FLY == 1) {\n        y = (x / 7) + LINES - (COLS / 7) - D51HEIGHT;\n        dy = 1;\n    }\n    for (i = 0; i <= D51HEIGHT; ++i) {\n        my_mvaddstr(y + i, x, d51[(D51LENGTH + x) % D51PATTERNS][i]);\n        my_mvaddstr(y + i + dy, x + 53, coal[i]);\n    }\n    if (ACCIDENT == 1) {\n        add_man(y + 2, x + 43);\n        add_man(y + 2, x + 47);\n    }\n    add_smoke(y - 1, x + D51FUNNEL);\n    return OK;\n}\n\nint add_C51(int x)\n{\n    static char *c51[C51PATTERNS][C51HEIGHT + 1]\n        = {{C51STR1, C51STR2, C51STR3, C51STR4, C51STR5, C51STR6, C51STR7,\n            C51WH11, C51WH12, C51WH13, C51WH14, C51DEL},\n           {C51STR1, C51STR2, C51STR3, C51STR4, C51STR5, C51STR6, C51STR7,\n            C51WH21, C51WH22, C51WH23, C51WH24, C51DEL},\n           {C51STR1, C51STR2, C51STR3, C51STR4, C51STR5, C51STR6, C51STR7,\n            C51WH31, C51WH32, C51WH33, C51WH34, C51DEL},\n           {C51STR1, C51STR2, C51STR3, C51STR4, C51STR5, C51STR6, C51STR7,\n            C51WH41, C51WH42, C51WH43, C51WH44, C51DEL},\n           {C51STR1, C51STR2, C51STR3, C51STR4, C51STR5, C51STR6, C51STR7,\n            C51WH51, C51WH52, C51WH53, C51WH54, C51DEL},\n           {C51STR1, C51STR2, C51STR3, C51STR4, C51STR5, C51STR6, C51STR7,\n            C51WH61, C51WH62, C51WH63, C51WH64, C51DEL}};\n    static char *coal[C51HEIGHT + 1]\n        = {COALDEL, COAL01, COAL02, COAL03, COAL04, COAL05,\n           COAL06, COAL07, COAL08, COAL09, COAL10, COALDEL};\n\n    int y, i, dy = 0;\n\n    if (x < - C51LENGTH)  return ERR;\n    y = LINES / 2 - 5;\n\n    if (FLY == 1) {\n        y = (x / 7) + LINES - (COLS / 7) - C51HEIGHT;\n        dy = 1;\n    }\n    for (i = 0; i <= C51HEIGHT; ++i) {\n        my_mvaddstr(y + i, x, c51[(C51LENGTH + x) % C51PATTERNS][i]);\n        my_mvaddstr(y + i + dy, x + 55, coal[i]);\n    }\n    if (ACCIDENT == 1) {\n        add_man(y + 3, x + 45);\n        add_man(y + 3, x + 49);\n    }\n    add_smoke(y - 1, x + C51FUNNEL);\n    return OK;\n}\n\n\nvoid add_man(int y, int x)\n{\n    static char *man[2][2] = {{\"\", \"(O)\"}, {\"Help!\", \"\\\\O/\"}};\n    int i;\n\n    for (i = 0; i < 2; ++i) {\n        my_mvaddstr(y + i, x, man[(LOGOLENGTH + x) / 12 % 2][i]);\n    }\n}\n\n\nvoid add_smoke(int y, int x)\n#define SMOKEPTNS        16\n{\n    static struct smokes {\n        int y, x;\n        int ptrn, kind;\n    } S[1000];\n    static int sum = 0;\n    static char *Smoke[2][SMOKEPTNS]\n        = {{\"(   )\", \"(    )\", \"(    )\", \"(   )\", \"(  )\",\n            \"(  )\" , \"( )\"   , \"( )\"   , \"()\"   , \"()\"  ,\n            \"O\"    , \"O\"     , \"O\"     , \"O\"    , \"O\"   ,\n            \" \"                                          },\n           {\"(@@@)\", \"(@@@@)\", \"(@@@@)\", \"(@@@)\", \"(@@)\",\n            \"(@@)\" , \"(@)\"   , \"(@)\"   , \"@@\"   , \"@@\"  ,\n            \"@\"    , \"@\"     , \"@\"     , \"@\"    , \"@\"   ,\n            \" \"                                          }};\n    static char *Eraser[SMOKEPTNS]\n        =  {\"     \", \"      \", \"      \", \"     \", \"    \",\n            \"    \" , \"   \"   , \"   \"   , \"  \"   , \"  \"  ,\n            \" \"    , \" \"     , \" \"     , \" \"    , \" \"   ,\n            \" \"                                          };\n    static int dy[SMOKEPTNS] = { 2,  1, 1, 1, 0, 0, 0, 0, 0, 0,\n                                 0,  0, 0, 0, 0, 0             };\n    static int dx[SMOKEPTNS] = {-2, -1, 0, 1, 1, 1, 1, 1, 2, 2,\n                                 2,  2, 2, 3, 3, 3             };\n    int i;\n\n    if (x % 4 == 0) {\n        for (i = 0; i < sum; ++i) {\n            my_mvaddstr(S[i].y, S[i].x, Eraser[S[i].ptrn]);\n            S[i].y    -= dy[S[i].ptrn];\n            S[i].x    += dx[S[i].ptrn];\n            S[i].ptrn += (S[i].ptrn < SMOKEPTNS - 1) ? 1 : 0;\n            my_mvaddstr(S[i].y, S[i].x, Smoke[S[i].kind][S[i].ptrn]);\n        }\n        my_mvaddstr(y, x, Smoke[sum % 2][0]);\n        S[sum].y = y;    S[sum].x = x;\n        S[sum].ptrn = 0; S[sum].kind = sum % 2;\n        sum ++;\n    }\n}\n"
        },
        {
          "name": "sl.h",
          "type": "blob",
          "size": 6.4716796875,
          "content": "/*========================================\n *    sl.h: SL version 5.02\n *\tCopyright 1993,2002,2014\n *                Toyoda Masashi\n *\t\t  (mtoyoda@acm.org)\n *\tLast Modified: 2014/06/03\n *========================================\n */\n\n#define D51HEIGHT\t10\n#define D51FUNNEL\t 7\n#define D51LENGTH\t83\n#define D51PATTERNS\t 6\n\n\n#define D51STR1  \"      ====        ________                ___________ \"\n#define D51STR2  \"  _D _|  |_______/        \\\\__I_I_____===__|_________| \"\n#define D51STR3  \"   |(_)---  |   H\\\\________/ |   |        =|___ ___|   \"\n#define D51STR4  \"   /     |  |   H  |  |     |   |         ||_| |_||   \"\n#define D51STR5  \"  |      |  |   H  |__--------------------| [___] |   \"\n#define D51STR6  \"  | ________|___H__/__|_____/[][]~\\\\_______|       |   \"\n#define D51STR7  \"  |/ |   |-----------I_____I [][] []  D   |=======|__ \"\n\n#define D51WHL11 \"__/ =| o |=-~~\\\\  /~~\\\\  /~~\\\\  /~~\\\\ ____Y___________|__ \"\n#define D51WHL12 \" |/-=|___|=    ||    ||    ||    |_____/~\\\\___/        \"\n#define D51WHL13 \"  \\\\_/      \\\\O=====O=====O=====O_/      \\\\_/            \"\n\n#define D51WHL21 \"__/ =| o |=-~~\\\\  /~~\\\\  /~~\\\\  /~~\\\\ ____Y___________|__ \"\n#define D51WHL22 \" |/-=|___|=O=====O=====O=====O   |_____/~\\\\___/        \"\n#define D51WHL23 \"  \\\\_/      \\\\__/  \\\\__/  \\\\__/  \\\\__/      \\\\_/            \"\n\n#define D51WHL31 \"__/ =| o |=-O=====O=====O=====O \\\\ ____Y___________|__ \"\n#define D51WHL32 \" |/-=|___|=    ||    ||    ||    |_____/~\\\\___/        \"\n#define D51WHL33 \"  \\\\_/      \\\\__/  \\\\__/  \\\\__/  \\\\__/      \\\\_/            \"\n\n#define D51WHL41 \"__/ =| o |=-~O=====O=====O=====O\\\\ ____Y___________|__ \"\n#define D51WHL42 \" |/-=|___|=    ||    ||    ||    |_____/~\\\\___/        \"\n#define D51WHL43 \"  \\\\_/      \\\\__/  \\\\__/  \\\\__/  \\\\__/      \\\\_/            \"\n\n#define D51WHL51 \"__/ =| o |=-~~\\\\  /~~\\\\  /~~\\\\  /~~\\\\ ____Y___________|__ \"\n#define D51WHL52 \" |/-=|___|=   O=====O=====O=====O|_____/~\\\\___/        \"\n#define D51WHL53 \"  \\\\_/      \\\\__/  \\\\__/  \\\\__/  \\\\__/      \\\\_/            \"\n\n#define D51WHL61 \"__/ =| o |=-~~\\\\  /~~\\\\  /~~\\\\  /~~\\\\ ____Y___________|__ \"\n#define D51WHL62 \" |/-=|___|=    ||    ||    ||    |_____/~\\\\___/        \"\n#define D51WHL63 \"  \\\\_/      \\\\_O=====O=====O=====O/      \\\\_/            \"\n\n#define D51DEL   \"                                                      \"\n\n#define COAL01 \"                              \"\n#define COAL02 \"                              \"\n#define COAL03 \"    _________________         \"\n#define COAL04 \"   _|                \\\\_____A  \"\n#define COAL05 \" =|                        |  \"\n#define COAL06 \" -|                        |  \"\n#define COAL07 \"__|________________________|_ \"\n#define COAL08 \"|__________________________|_ \"\n#define COAL09 \"   |_D__D__D_|  |_D__D__D_|   \"\n#define COAL10 \"    \\\\_/   \\\\_/    \\\\_/   \\\\_/    \"\n\n#define COALDEL \"                              \"\n\n#define LOGOHEIGHT    \t 6\n#define LOGOFUNNEL  \t 4\n#define LOGOLENGTH      84\n#define LOGOPATTERNS\t 6\n\n#define LOGO1  \"     ++      +------ \"\n#define LOGO2  \"     ||      |+-+ |  \"\n#define LOGO3  \"   /---------|| | |  \"\n#define LOGO4  \"  + ========  +-+ |  \"\n\n#define LWHL11 \" _|--O========O~\\\\-+  \"\n#define LWHL12 \"//// \\\\_/      \\\\_/    \"\n\n#define LWHL21 \" _|--/O========O\\\\-+  \"\n#define LWHL22 \"//// \\\\_/      \\\\_/    \"\n\n#define LWHL31 \" _|--/~O========O-+  \"\n#define LWHL32 \"//// \\\\_/      \\\\_/    \"\n\n#define LWHL41 \" _|--/~\\\\------/~\\\\-+  \"\n#define LWHL42 \"//// \\\\_O========O    \"\n\n#define LWHL51 \" _|--/~\\\\------/~\\\\-+  \"\n#define LWHL52 \"//// \\\\O========O/    \"\n\n#define LWHL61 \" _|--/~\\\\------/~\\\\-+  \"\n#define LWHL62 \"//// O========O_/    \"\n\n#define LCOAL1 \"____                 \"\n#define LCOAL2 \"|   \\\\@@@@@@@@@@@     \"\n#define LCOAL3 \"|    \\\\@@@@@@@@@@@@@_ \"\n#define LCOAL4 \"|                  | \"\n#define LCOAL5 \"|__________________| \"\n#define LCOAL6 \"   (O)       (O)     \"\n\n#define LCAR1  \"____________________ \"\n#define LCAR2  \"|  ___ ___ ___ ___ | \"\n#define LCAR3  \"|  |_| |_| |_| |_| | \"\n#define LCAR4  \"|__________________| \"\n#define LCAR5  \"|__________________| \"\n#define LCAR6  \"   (O)        (O)    \"\n\n#define DELLN  \"                     \"\n\n#define C51HEIGHT 11\n#define C51FUNNEL 7\n#define C51LENGTH 87\n#define C51PATTERNS 6\n\n#define C51DEL \"                                                       \"\n\n#define C51STR1 \"        ___                                            \"\n#define C51STR2 \"       _|_|_  _     __       __             ___________\"\n#define C51STR3 \"    D__/   \\\\_(_)___|  |__H__|  |_____I_Ii_()|_________|\"\n#define C51STR4 \"     | `---'   |:: `--'  H  `--'         |  |___ ___|  \"\n#define C51STR5 \"    +|~~~~~~~~++::~~~~~~~H~~+=====+~~~~~~|~~||_| |_||  \"\n#define C51STR6 \"    ||        | ::       H  +=====+      |  |::  ...|  \"\n#define C51STR7 \"|    | _______|_::-----------------[][]-----|       |  \"\n\n#define C51WH61 \"| /~~ ||   |-----/~~~~\\\\  /[I_____I][][] --|||_______|__\"\n#define C51WH62 \"------'|oOo|==[]=-     ||      ||      |  ||=======_|__\"\n#define C51WH63 \"/~\\\\____|___|/~\\\\_|   O=======O=======O  |__|+-/~\\\\_|     \"\n#define C51WH64 \"\\\\_/         \\\\_/  \\\\____/  \\\\____/  \\\\____/      \\\\_/       \"\n\n#define C51WH51 \"| /~~ ||   |-----/~~~~\\\\  /[I_____I][][] --|||_______|__\"\n#define C51WH52 \"------'|oOo|===[]=-    ||      ||      |  ||=======_|__\"\n#define C51WH53 \"/~\\\\____|___|/~\\\\_|    O=======O=======O |__|+-/~\\\\_|     \"\n#define C51WH54 \"\\\\_/         \\\\_/  \\\\____/  \\\\____/  \\\\____/      \\\\_/       \"\n\n#define C51WH41 \"| /~~ ||   |-----/~~~~\\\\  /[I_____I][][] --|||_______|__\"\n#define C51WH42 \"------'|oOo|===[]=- O=======O=======O  |  ||=======_|__\"\n#define C51WH43 \"/~\\\\____|___|/~\\\\_|      ||      ||      |__|+-/~\\\\_|     \"\n#define C51WH44 \"\\\\_/         \\\\_/  \\\\____/  \\\\____/  \\\\____/      \\\\_/       \"\n\n#define C51WH31 \"| /~~ ||   |-----/~~~~\\\\  /[I_____I][][] --|||_______|__\"\n#define C51WH32 \"------'|oOo|==[]=- O=======O=======O   |  ||=======_|__\"\n#define C51WH33 \"/~\\\\____|___|/~\\\\_|      ||      ||      |__|+-/~\\\\_|     \"\n#define C51WH34 \"\\\\_/         \\\\_/  \\\\____/  \\\\____/  \\\\____/      \\\\_/       \"\n\n#define C51WH21 \"| /~~ ||   |-----/~~~~\\\\  /[I_____I][][] --|||_______|__\"\n#define C51WH22 \"------'|oOo|=[]=- O=======O=======O    |  ||=======_|__\"\n#define C51WH23 \"/~\\\\____|___|/~\\\\_|      ||      ||      |__|+-/~\\\\_|     \"\n#define C51WH24 \"\\\\_/         \\\\_/  \\\\____/  \\\\____/  \\\\____/      \\\\_/       \"\n\n#define C51WH11 \"| /~~ ||   |-----/~~~~\\\\  /[I_____I][][] --|||_______|__\"\n#define C51WH12 \"------'|oOo|=[]=-      ||      ||      |  ||=======_|__\"\n#define C51WH13 \"/~\\\\____|___|/~\\\\_|  O=======O=======O   |__|+-/~\\\\_|     \"\n#define C51WH14 \"\\\\_/         \\\\_/  \\\\____/  \\\\____/  \\\\____/      \\\\_/       \"\n"
        }
      ]
    }
  ]
}