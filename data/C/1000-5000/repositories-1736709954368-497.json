{
  "metadata": {
    "timestamp": 1736709954368,
    "page": 497,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "MinhasKamal/CreepyCodeCollection",
      "stars": 2361,
      "defaultBranch": "master",
      "files": [
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.1484375,
          "content": "<h1> <img src=\"https://cloud.githubusercontent.com/assets/5456665/22564404/991be738-e9ae-11e6-9084-c1631f970b60.png\" width=\"20\" height=auto /> CreepyCodeCollection</h1>\n\n#### A Nonsense Collection of Disgusting Codes\n\n**Here we are talking about creepiest of the most creepy codes. Programs, behave so strange, that they will twist your brain. Snippets, so small, that you won’t believe their functionality. And codes, so cryptic, that even the top coders will think of going back to the college.**\n\n**Note**: Never try this type of code in a real life software project; readability and maintainability should be the main concern there.\n\n\n## Intro\nSee this cute little code ([↗](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/check_prime.pl))-\n\n``` PL\n(1x$a)!~/^1?$|^(11+?)\\1+$/\n```\n\nIn Perl, this regular expression checks if a number is prime.\n\nFollowing code will produce day of the week for a given date ([↗](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/day_of_week.c))-\n\n``` C\n((y-=m<3)+y/4-y/100+y/400+\" bed=pen+mad.\"[m]+d)%7\n```\n\nConsider this Java code ([↗](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/confusion.java))-\n\n``` Java\nint i = (byte) + (char) - (int) + (long) - 1;\n```\n\nWhat will be the value of `i`? Will the code even compile? Weird! Huh?\n\nThe program is a Ruby [Quine](https://en.wikipedia.org/wiki/Quine_(computing)) called qlobe ([↗](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/qlobe.rb)). Isn't the the output amazing?\n\n  <div align=\"center\">\n    <img src=\"https://cloud.githubusercontent.com/assets/5456665/21362343/258441bc-c712-11e6-88bf-f8f02a028ad3.gif\" alt=\"Qlobe\" height=\"300\" width=auto/>\n  </div>\n\nThis is one of my favourites- The Animated 3d Doughnut ([↗](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/animated_3d_doughnut.c)). Taste how delicious it is!\n\n  <div align=\"center\">\n    <img src=\"https://cloud.githubusercontent.com/assets/5456665/21362492/c976724a-c712-11e6-9773-03e80f8ba598.gif\" alt=\"Animated 3d Doughnut\" height=\"300\" width=auto/>\n  </div>\n  \nPaste this in your browser's url- \n\n    data:text/html,<body%20style=margin:0><canvas%20id=q%20/><script>var%20q=document.getElementById('q'),s=window.screen,w=q.width=s.width,h=q.height=s.height,p=Array(256).join(1).split(''),c=q.getContext('2d'),m=Math;setInterval(function(){c.fillStyle='rgba(0,0,0,0.05)';c.fillRect(0,0,w,h);c.fillStyle='rgba(0,255,0,1)';p=p.map(function(v,i){r=m.random();c.fillText(String.fromCharCode(m.floor(2720+r*33)),i*10,v);v+=10;%20return%20v>768+r*1e4?0:v})},33)</script>\n\nAnd see the magic yourself ([↗](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/matrix_effect.html))!\n\nMost of the programs here are hell hard to understand. The details-url provided with the codes contain useful description. Follow the [Creepy Rank](#creepy-rank) for getting a structured view of all the programs.\n\n## Creepy Rank\nSorted by difficulty level-\n\n### Level- 1: Genin\n\nCode | Intro\n--- | --- \n[pyjava.java](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/pyjava.java) | Java code written like python. Finds factorial of big numbers.\n[backward.java](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/backward.java) | Weird flipped code compiles- \"backward!\".\n[one_line_swap.c](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/one_line_swap.c) | Strange one-liners that swaps value of two variables.\n[without_main.c](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/without_main.c) | C code without main.\n[hello_world.java](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/hello_world.java) | Magically outputs \"hello world\" in the console.\n[obfuscated.java](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/obfuscated.java) | Prints \"Hi!\" in the console, looks like a big meaningless comment though.\n[strange.c](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/strange.c) | A strange code with more strange output.\n  \n### Level- 2: Chunin\n\nCode | Intro\n--- | --- \n[bitwise_arithmetic.c](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/bitwise_arithmetic.c) | Performs addition and multiplication using only bit operation.\n[prefix2postfix.c](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/prefix2postfix.c) | Converts prefix notation to postfix.\n[sapin.c](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/sapin.c) | Prints a dynamic christmas tree.\n[crazy_jvm.java](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/crazy_jvm.java) | Seems like the JVM has gone mad, printing random integers.\n[confusion.java](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/confusion.java) | It is surprising enough, that the code compiles & prints 1.\n[not_so_random.java](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/not_so_random.java) | Will (randomly!) print- 1 1 1 1 1 1 1 1 1 1.\n[bangladesh.c](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/bangladesh.c) | Prints the map of Bangladesh.\n[signature_prime.c](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/signature_prime.c) | Keeps printing prime number (theoretically) forever.\n[day_of_week.c](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/day_of_week.c) | Computes day of the week for given date.\n[polyglot_so404.py.pl.rb.c.bf](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/polyglot_so404.py.pl.rb.c.bf) | Prints 404 in python, perl, ruby, c and brainfu\\*k.\n[polyglot_quine.c.py.pl.rb](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/polyglot_quine.c.py.pl.rb) | A quine that runs in c, python, perl & ruby.\n\n### Level- 3: Jonin\n\nCode | Intro\n--- | --- \n[compound_eye.rb](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/compound_eye.rb) | Displays animated pattern.\n[best_short_program.c](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/best_short_program.c) | Reads a spelt number and writes a corresponding decimal number.\n[check_prime.pl](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/check_prime.pl) | Checks if a number is prime using regular expression!\n[quine_signature.c](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/quine_signature.c) | Shortest C code that prints itself.\n[clock_in1line.c](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/clock_in1line.c) | Prints current time in text-art.\n[japh.pl](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/japh.pl) | Prints \"just another perl hacker\".\n[matrix_effect.html](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/matrix_effect.html) | Displays a matrix-like screen.\n[pi_signature.c](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/pi_signature.c) | Calculates the first 15000 digits of PI.\n\n### Level- 4: Kage\n\nCode | Intro\n--- | --- \n[mandelbrot_imager.py](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/mandelbrot_imager.py) | Creates an image of Mandelbrot (may take 20m to run!).\n[shortest_tetris.html](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/shortest_tetris.html) | Very short and simplified variant of the classic tetris game.\n[qlobe.rb](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/qlobe.rb) | Prints the globe. And it can also be turned by puting command-line argument.\n[animated_3d_doughnut.c](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/animated_3d_doughnut.c) | Shows a 3d animated doughnut with ASCII art.\n[mandelbrot_flythrough.pl](https://github.com/MinhasKamal/CreepyCodeCollection/blob/master/mandelbrot_flythrough.pl) | Rotates, zooms in & out, and scrolls randomly to examine regions of the Mandelbrot.\n\n### Rogue \n\nCode | Intro\n--- | --- \n[octaglot.cob.pas.f77.c.ps.sh.pl.com](https://rosettacode.org/wiki/Polyglot) | A polyglot, prints \"hello polyglots\" in 8 languages.\n[esoteric_polyglot.mal.bf.ws.asdf.123.spoon.excon](https://github.com/kenrube/Esopoly) | A polyglot written in 7 esoteric languages.\n[palindrome_polyglot_quine.cs.java](https://github.com/KvanTTT/Freaky-Sources/blob/master/Patterns%20and%20Data/PalindromePolyglotQuine.cs.java) | The code is palindromic, compiles in C# and Java, prints itself.\n[quine_relay.rb](https://github.com/mame/quine-relay) | An uroboros program with 100 programming languages.\n\nAll the programs here have been tested (by me). [TutorialsPoint-CodingGround](https://www.tutorialspoint.com/codingground.htm) or [repl.it](https://repl.it/languages) has online code editors and compilers, which can be used to run these programs. Many programs here have been collected from q/a and discussion sites, like- [StackOverflow](//stackoverflow.com), [Quora](https://www.quora.com/), [Programming Puzzles & Code Golf](http://codegolf.stackexchange.com/), & [Hacker News](https://news.ycombinator.com/news).\n\nIf you liked this project, then you may also love [CuteVirusCollection](https://github.com/MinhasKamal/CuteVirusCollection).\n\n\n## Not Satisfied Yet!\n- [IOCCC](http://www.ioccc.org/years-spoiler.html), [IOCCC Winning Entries](http://www.pixelstech.net/article/1351185934-Do-you-really-understand-C-21st-International-Obfuscated-C-Code-Contest-winning-entries)\n- [PerlMonks](http://www.perlmonks.org)\n- [C Cignature Programs](http://www.iwriteiam.nl/SigProgC.html)\n- [CodeGolf-StackExchange: Tips](http://codegolf.stackexchange.com/questions/tagged/tips?sort=votes&pageSize=15), [CodeGolf-StackExchange: Quine](http://codegolf.stackexchange.com/questions/69/golf-you-a-quine-for-great-good), [StackOverflow: Strangest Language Feature](http://stackoverflow.com/questions/1995113/strangest-language-feature)\n- [JS1K](http://js1k.com)\n- [Quora: Elegant Code](https://www.quora.com/What-is-the-most-elegant-line-of-code-youve-seen), [Quora: Shortest Effective Code](https://www.quora.com/What-is-the-shortest-and-most-effective-code-ever-written), [Quora: Coolest Thing in 10 Line](https://www.quora.com/Whats-the-coolest-thing-you-can-get-a-computer-to-do-in-10-lines-of-code)\n- [QuinePrograms](http://cs.lmu.edu/~ray/notes/quineprograms/)\n- [CodePoetry](http://code-poetry.com/)\n- [Anarchy Golf](http://golf.shinh.org/all.rb)\n- [JS Code Golfing](https://gist.github.com/xem/206db44adbdd09bac424)\n"
        },
        {
          "name": "animated_3d_doughnut.c",
          "type": "blob",
          "size": 0.9267578125,
          "content": "// Developer- Andy Sloane (https://www.a1k0n.net/about.html)\n// Intro- Shows a 3d animated doughnut with ASCII art.\n// Details- https://www.a1k0n.net/2011/07/20/donut-math.html\n\n             k;double sin()\n         ,cos();main(){float A=\n       0,B=0,i,j,z[1760];char b[\n     1760];/**###/////####**/for(;;\n  ){memset(b,32,1760);memset(z,0,7040)\n  ;for(j=0;6.28>j;j+=0.07)for(i=0;6.28\n >i;i+=0.02){float c=sin(i),d=cos(j),e=\n sin(A),f=sin(j),g=cos(A),h=d+2,D=1/(c*\n h*e+f*g+5),l=cos      (i),m=cos(B),n=s\\\nin(B),t=c*h*g-f*        e;int x=40+30*D*\n(l*h*m-t*n),y=            12+15*D*(l*h*n\n+t*m),o=x+80*y,          N=8*((f*e-c*d*g\n )*m-c*d*e-f*g-l        *d*n);if(22>y&&\n y>0&&x>0&&80>x&&D>z[o]){z[o]=D;;;b[o]=\n \".,-~:;=!*#$@\"[N>0?N:0];}}/*#****!!-*/\n  /**#++#|||||#**/for(k=0;1761>k;k++)\n   putchar(k%80?b[k]:10);A+=0.04;B+=\n     0.02;int strt=clock();while((\n       clock()-strt)<(300));///\n         system(\"cls\");}}/***!\n             ..,--____--*/\n"
        },
        {
          "name": "backward.java",
          "type": "blob",
          "size": 0.2890625,
          "content": "// Intro- Weird flipped code compiles- \"backward!\".\n// Details- http://stackoverflow.com/questions/43943699/why-does-this-code-written-backwards-print-hello-world\n\npublic class backward{public static void main(String[]a‭‮){System.out.print(new char[]{'b','a','c','k','w','a','r','d','!'});}}\n"
        },
        {
          "name": "bangladesh.c",
          "type": "blob",
          "size": 0.416015625,
          "content": "// Developer: Victor Adam (https://github.com/Grimy) & Minhas Kamal (https://minhaskamal.github.io/)\n// Intro- Prints the map of Bangladesh.\n// Inspired- http://stackoverflow.com/questions/3533348/how-does-this-code-generate-the-map-of-india\n\nb;c;char*m=\"'$R'$$L,%$E/#%C5C4F1G1EK+M'O'O)M-H2D2@6?)%.?('.\\\n?'(.?%)/@#*/H/I.=#-.<#/-<$..6#&&,.+$('%&,/$=+L+N%$&L%S%T$&\";\nmain(i){while(--i<34?i=m[c++]:putchar(b++%51?43+c%2*2:10));}\n"
        },
        {
          "name": "best_short_program.c",
          "type": "blob",
          "size": 0.41796875,
          "content": "// Developer- Seonghoon Kang\n// Intro- Reads a spelt number and writes a corresponding decimal number.\n// Details- http://www.ioccc.org/2012/kang/hint.html\n\nlong long n,u,m,b;main(e,r)char **r;{f\\\nor(;n++||(e=getchar()|32)>=0;b=\"ynwtsflrabg\"[n%=11]-e?b:b*8+\nn)for(r=b%64-25;e<47&&b;b/=8)for(n=19;n;n[\"1+DIY/.K430x9\\\nG(kC[\"]-42&255^b||(m+=n>15?n:n>9?m%u*~-u:~(int)r?n+\n!(int)r*16:n*16,b=0))u=1ll<<6177%n--*4;printf(\"%llx\\n\",m);}\n"
        },
        {
          "name": "bitwise_arithmetic.c",
          "type": "blob",
          "size": 0.46484375,
          "content": "// Developer- Debarghya Das (http://debarghyadas.com)\n// Intro- Performs addition and multiplication using only bit operation.\n// Source- https://www.quora.com/What-is-the-most-elegant-line-of-code-youve-seen/answer/Debarghya-Das?srid=u2HNX\n\n#include <stdio.h>\n\nmain(){\n    printf(\"%d %d\", add(4, 5), multiply(4, 5));\n}\n \nint multiply(int a, int b){\n    return b==0?0:add(((b&1) ==1?a:0),multiply(a<<1,b>>1));\n}\n\nint add(int a, int b){\n    return b==0?a:add(a^b, (a&b)<<1);\n}\n"
        },
        {
          "name": "check_prime.pl",
          "type": "blob",
          "size": 0.474609375,
          "content": "# Developer- Abigail (http://abigail.be/)\n# Intro- Checks if a number is prime using regular expression!\n# Details- http://neilk.net/blog/2000/06/01/abigails-regex-to-test-for-prime-numbers/\n \n$a=33;\nprint \"prime\" if(1x$a)!~/^1?$|^(11+?)\\1+$/;\n\n# Following Java code does the same thing-\n#     public boolean prime(int n){return !new String(new char[n]).matches(\".?|(..+?)\\\\1+\");}\n# Details- http://stackoverflow.com/questions/2795065/how-to-determine-if-a-number-is-a-prime-with-regex\n"
        },
        {
          "name": "clock_in1line.c",
          "type": "blob",
          "size": 0.337890625,
          "content": "// Developer- Stephen Sykes (http://www.stephensykes.com/)\n// Intro- Prints current time in text-art.\n// Details- http://stackoverflow.com/questions/15393441/obfuscated-c-code-contest-2006-please-explain-sykes2-c\n \nmain(_){_^448&&main(-~_);putchar(--_%64?32|-~7[__TIME__-_/8%8][\">'txiZ^(~z?\"-48]>>\";;;====~$::199\"[_*2&8|_/64]/(_&2?1:8)%8&1:10);}\n"
        },
        {
          "name": "compound_eye.rb",
          "type": "blob",
          "size": 0.5205078125,
          "content": "# Intro: Displays animated pattern.\n# Source: http://code-poetry.com/compound_eye\n\n                   c,q,g,p=1.45,0.5,\n                  0.25,0.25;v=->x,t,s{\n                a,j=(x-c).abs,(t-q).abs\n               return j>p||a>2*g ? 0: (s*\n              -(2*p*g-p*a-g*j)).to_i+s;};(\n             1..1000).map{|m|;s=\"\\n   \" ; (\n              0..21).map{|t|;(0..74). map{\n               |x|;d=v[x/25.0,t/21.0, m];\n                s+=' .:-=+*&#%@'[d%11]};\n                 s+=\"\\n   \"};sleep(0.02\n                  );puts(s);'.:-=+*&'}\n"
        },
        {
          "name": "confusion.java",
          "type": "blob",
          "size": 0.328125,
          "content": "// Intro- It is surprising enough, that the code compiles & prints 1.\n// Details- http://stackoverflow.com/questions/7924961/weird-java-behavior-with-casts-to-primitive-types\n\nclass confusion{\n    \n    public static void main (String[] args){\n        int i = (byte) + (char) - (int) + (long) - 1;\n        System.out.println(i);\n    }\n}\n"
        },
        {
          "name": "crazy_jvm.java",
          "type": "blob",
          "size": 0.88671875,
          "content": "// Intro- Seems like the JVM has gone mad, printing random integers.\n// Details- https://blog.jooq.org/2013/10/17/add-some-entropy-to-your-jvm/ (modified)\n\nimport java.lang.reflect.Field;\nimport java.util.Random;\n \npublic class crazy_jvm {\n    public static void main(String[] args) throws Exception {\n        justKidding();\n\n        for(int i=0; i<10; i++){\n            System.out.println((Integer) i);\n        }\n    }\n\n    private static void justKidding() throws Exception{\n        // extract the IntegerCache through reflection\n        Field field = Class.forName(\"java.lang.Integer$IntegerCache\").getDeclaredField(\"cache\");\n        field.setAccessible(true);\n        Integer[] cache = (Integer[]) field.get(\"java.lang.Integer$IntegerCache\");\n\n        // rewrite the Integer cache\n        for (int i=0; i<cache.length; i++){ \n            cache[i] = new Integer(new Random().nextInt());\n        }\n    }\n}\n"
        },
        {
          "name": "day_of_week.c",
          "type": "blob",
          "size": 0.4033203125,
          "content": "// Developer- Tomohiko Sakamoto \n// Intro- Computes day of the week for given date.\n// Details- https://www.quora.com/How-does-Tomohiko-Sakamotos-Algorithm-work/answer/Raziman-T-V?srid=u2HNX\n\n#include <stdio.h>\n\nmain(){\n    printf(\"%d %d %d\", dow(2011, 7, 19), dow(1993, 5, 23), dow(2016, 12, 16)); //output- 2 0 5\n}\n\nint dow(int y, int m, int d) {\n    return ((y-=m<3)+y/4-y/100+y/400+\" bed=pen+mad.\"[m]+d)%7;\n}\n"
        },
        {
          "name": "funny_and_hilarious.md",
          "type": "blob",
          "size": 1.9853515625,
          "content": "## Robust Random Number Generator\n\n    int getRandomNumber() {\n        return 4; // chosen by fair dice roll, guaranteed to be random\n    }\n    \n![Robust Random Number Generator Img](https://qph.ec.quoracdn.net/main-qimg-30dcc3032482f03ce41d0dfc58fb1ddb-c?convert_to_webp=true)\n\n## Greatest Lifesaving Comment\n\n    // \n    // Dear maintainer:\n    // \n    // Once you are done trying to 'optimize' this routine,\n    // and have realized what a terrible mistake that was,\n    // please increment the following counter as a warning\n    // to the next guy:\n    // \n    // total_hours_wasted_here = 42\n    //\n\n## Definition of Programmer\n\n    Programmer is a teacher who takes the bloody challenge of tutoring the dumbest student and make him the smartest.\n\n![Definition of Programmer Img](https://cloud.githubusercontent.com/assets/5456665/22073097/93665256-ddce-11e6-91b6-e1916df5d1fe.gif)\n\n## What is Algorithm?\n\n    Word used by programmers when they do not want to explain what they did.\n\n## Date of Tomorrow\n\n    Date getTomorrowDate(Date date){\n        sleep(24*60*60);\n        return getTimeOfDay(date);\n    }\n\n![Date of Tomorrow Img](https://qph.ec.quoracdn.net/main-qimg-c7cf2bdc7f34ff7b74835845bf2eb810-c?convert_to_webp=true)\n\n## God Is The Supreme Programmer \n\n    //When I wrote this, only God and I understood what I was doing\n    //Now, God only knows\n\n## Commit before Leaving Job\n\n    #define if while\n\n![Commit before Leaving Job Img](https://qph.ec.quoracdn.net/main-qimg-79690742b44c30ea1022f56486bd305d-c?convert_to_webp=true)\n\n## Dream Language-\n\n    Machine,\n\n    Pls make website,\n\n    all responsive like,\n    w/ BIG pictures ooo,\n    use my fav fonts,\n    also fancy menus with whooosh on,\n    load fast pls\n\n    Thanks,\n    Human\n\n    PS no bugs :)\n\n## You Know You're Nuked\n    \n    When you Google an error and find GitHub issues instead of Stackoverflow answers.\n\n<br />\n<div align=\"right\">\n    <b><i>So funny and hilarious that they may seem creepy!</i></b>\n    <br />\n    collected from the web :P\n</div>\n"
        },
        {
          "name": "hello_world.java",
          "type": "blob",
          "size": 0.3359375,
          "content": "// Intro- Magically outputs \"hello world\" in the console.\n// Details- http://stackoverflow.com/questions/20720098/how-does-this-print-hello-world\n \npublic class hello_world{\n    public static void main (String[] args) {\n        for(long l=4946144450195624l; l>0; l>>=5)\n            System.out.print((char) (((l & 31 | 64) % 95) + 32));\n    }\n}\n"
        },
        {
          "name": "japh.pl",
          "type": "blob",
          "size": 0.642578125,
          "content": "# Intro- Prints \"just another perl hacker\".\n# Details- http://stackoverflow.com/questions/14440594/how-does-this-famous-japh-work\n# Source- http://www.perlmonks.org/?node_id=290607\n\nnot exp log srand xor s qq qx xor\ns x x length uc ord and print chr\nord for qw q join use sub tied qx\nxor eval xor print qq q q xor int\neval lc q m cos and print chr ord\nfor qw y abs ne open tied hex exp\nref y m xor scalar srand print qq\nq q xor int eval lc qq y sqrt cos\nand print chr ord for qw x printf\neach return local x y or print qq\ns s and eval q s undef or oct xor\ntime xor ref print chr int ord lc\nforeach qw y hex alarm chdir kill\nexec return y s gt sin sort split\n"
        },
        {
          "name": "mandelbrot_flythrough.pl",
          "type": "blob",
          "size": 1.54296875,
          "content": "# Intro- Rotates, zooms in & out, and scrolls randomly to examine regions of the Mandelbrot.\n# Source- http://www.perlmonks.org/?node_id=329492\n\n\n $r=25; $c=80;\n                                              $xr=6;$yr=3;$xc=-0.5;$dw=$z=-4/\n                                              100;local$\";while($q=$dr=rand()\n                                             /7){$w+=$dw;$_=join$/,map{$Y=$_*\n                                             $yr/$r;\n  join\"\"                                    ,map{$                  x=$_*$\n xr/$c;($                                   x,$y)=                 ($xc+$x\n  *cos($                                   w)-$Y*               sin$w,$yc+\n                                           $x*sin              ($w)+$Y*cos\n  $w);$                                   e=-1;$                    a=$b=0\n;($a,$b)   =($u-$v+$x,2*$a*               $b+$y)                    while(\n$ u=$a*$   a)+($v=$b*$b)<4.5  &&++$e     <15;if                     (($e>$\n  q&&$e<   15)||($e==$q and   rand()     <$dr))  {$q=$e;($d0,$d1)   =($x,$\n  y); }                        chr(+(   32,96,+  46,45,43,58,73,37  ,36,64\n ,32)[$                        e/1.5]   );}(-$   c/2)..($c/2)-1;}   (-$r/2\n )..($     r/2)-1;select$\",     $\",$\", 0.015;                       system\n$^O=~m     ~[wW]in~x?\"cls\":     \"clear\";print                       ;$xc=(\n$d0+15     *$xc)/16;$yc=($       d1+15*$yc)/                        16;$_*=\n1+$z for                         $xr,$yr;$dw                     *=-1 if rand\n()<0.02;                          (++$i%110                      )||($z*=-1)}\n"
        },
        {
          "name": "mandelbrot_imager.py",
          "type": "blob",
          "size": 1.16015625,
          "content": "# Intro- Creates an image of Mandelbrot (may take 20m to run!).\n# Details- http://preshing.com/20110926/high-resolution-mandelbrot-in-obfuscated-python/\n\n_                                      =   (\n                                        255,\n                                      lambda\n                               V       ,B,c\n                             :c   and Y(V*V+B,B,  c\n                               -1)if(abs(V)<6)else\n               (              2+c-4*abs(V)**-0.4)/i\n                 )  ;v,      x=1500,1000;C=range(v*x\n                  );import  struct;P=struct.pack;M,\\\n            j  ='<QIIHHHH',open('M.bmp','wb').write\nfor X in j('BM'+P(M,v*x*3+26,26,12,v,x,1,24))or C:\n            i  ,Y=_;j(P('BBB',*(lambda T:(T*80+T**9\n                  *i-950*T  **99,T*70-880*T**18+701*\n                 T  **9     ,T*i**(1-T**45*2)))(sum(\n               [              Y(0,(A%3/3.+X%v+(X/v+\n                               A/3/3.-x/2)/1j)*2.5\n                             /x   -2.7,i)**2 for  \\\n                               A       in C\n                                      [:9]])\n                                        /9)\n                                       )   )\n"
        },
        {
          "name": "matrix_effect.html",
          "type": "blob",
          "size": 0.5888671875,
          "content": "<!-- Intro- Displays a matrix-like screen. -->\n<!-- Details- https://www.reddit.com/r/programming/comments/1ag0c3/someone_posted_an_htmljavascript_implementation -->\n\n<body style=margin:0><canvas id=q /><script>var q=document.getElementById('q'),s=window.screen,w=q.width=s.width,h=q.height=s.height,p=Array(256).join(1).split(''),c=q.getContext(\"2d\"),m=Math;setInterval(function(){c.fillStyle=\"rgba(0,0,0,0.05)\";c.fillRect(0,0,w,h);c.fillStyle=\"rgba(0,255,0,1)\";p=p.map(function(v,i){r=m.random();c.fillText(String.fromCharCode(m.floor(2720+r*33)),i*10,v);v+=10; return v>768+r*1e4?0:v})},33)</script>\n"
        },
        {
          "name": "not_so_random.java",
          "type": "blob",
          "size": 0.3857421875,
          "content": "// Intro- Will (randomly!) print- 1 1 1 1 1 1 1 1 1 1.\n// Details- http://stackoverflow.com/questions/13241937/random-class-acting-odd\n\nimport java.util.Random;\n\npublic class not_so_random{\n    \n    public static void main (String[] args){\n        Random random = new Random(441287210);\n        for(int i=0;i<10;i++){\n            System.out.print(random.nextInt(10)+\" \");\n        }\n    }\n    \n}\n"
        },
        {
          "name": "obfuscated.java",
          "type": "blob",
          "size": 0.724609375,
          "content": "// Developer- Peter van der Linden (April 1, 1996), little modified.\n// Intro- Prints \"Hi!\" in the console, looks like a big meaningless comment though.\n// Details- https://community.oracle.com/blogs/forax/2006/10/16/obfuscated-java\n \npublic class obfuscated{\n\t/**\n\t * Hi!\n\t * \\u002a\\u002f\\u0020\\u0070\\u0075\\u0062\\u006c\\u0069\\u0063\\u0020\\u0020\\u0020\n\t   \\u0073\\u0074\\u0061\\u0074\\u0069\\u0063\\u0020\\u0076\\u006f\\u0069\\u0064\\u0020\n\t   \\u006d\\u0061\\u0069\\u006e\\u0028\\u0053\\u0074\\u0072\\u0069\\u006e\\u0067\\u0020\n\t   \\u005b\\u005d\\u0061\\u0029\\u007b\\u0053\\u0079\\u0073\\u0074\\u0065\\u006d\\u002e\n\t   \\u006f\\u0075\\u0074\\u002e\\u0070\\u0072\\u0069\\u006e\\u0074\\u006c\\u006e\\u0020\n\t   \\u0028\\u0022\\u0048\\u0069\\u0021\\u0022\\u0029\\u003b\\u007d\\u0020\\u002f\\u002a\n\t */\n}\n"
        },
        {
          "name": "obfuscated_life.c",
          "type": "blob",
          "size": 0.6943359375,
          "content": "// Developer- Sean Murphy (https://github.com/duckythescientist)\n// Intro- Conway's Game of Life in 9 lines of C.\n// Details- https://github.com/duckythescientist/obfuscatedLife/blob/original/remarks.md\n\nint main(){\nint _[2048],O=(int)&O,__=~__+__;\nwhile((__=-~__)^2048)__[_]=(O=(O*0x41C64E6D+12345)&0x7fffffff)&1024?1<<5:0;\nwhile(usleep('d'<<'\\n'),__+=~__){\nwhile((__=-~__)^8192){\nif(_[((__>>2)+2048+\"\\x01?@A\"[__%4])%04000]&1<<5)*(_+(__>>2))=-~_[__>>2];\nif(_[((__>>2)+04000-\"\\x01?@A\"[__%4])%2048]&1<<5)*(_+(__>>2))=-~_[__>>2];\nif(__%4==3)_[__>>2]|=_[__>>2]^'\\\"'&&_[__>>2]^'#'?((_[__>>2]^3)?0:1<<4):1<<4;};\nwhile((__=-~__)^10240)if(putchar((_[__%2048]=_[__%2048]<<1&1<<5)?'X':' '),!(63^__%0100))putchar(10);}};\n"
        },
        {
          "name": "one_line_swap.c",
          "type": "blob",
          "size": 1.61328125,
          "content": "// Intro- Strange one-liners that swaps value of two variables.\n \n#include <stdio.h>\n\nmain(){\n    int a=5, b=7;\n\n    a-=b=(a+=b)-b; // Developer- Minhas Kamal (https://minhaskamal.github.io)\n                   // Details- https://cloud.githubusercontent.com/assets/5456665/21447433/bc21ad60-c8fe-11e6-9154-b3b682cad607.png\n    printf(\"%d %d\\n\", a, b);\n \n    a=(int[]){b, b=a}[0]; // Expanded- int[] arr = {b, b=a}; a = arr[0];\n    printf(\"%d %d\\n\", a, b);\n    \n    a^=b^=a^=b; // Developer- Chris Taylor (http://chris-taylor.github.io/)\n                // Details- http://chris-taylor.github.io/blog/2013/02/25/xor-trick/\n    printf(\"%d %d\\n\", a, b);\n    \n    a=b+a-(b=a); //Details- http://stackoverflow.com/questions/20800684/why-is-a-ab-b-a-a-bad-choice-for-swapping-two-integers\n    printf(\"%d %d\\n\", a, b);\n \n    // This python code swaps value of two variables- \n    //     a, b = b, a\n    // Details- https://stackoverflow.com/questions/21047524/how-does-swapping-of-members-in-the-python-tuples-a-b-b-a-work-internally\n \n    // Bonus- Get the max number without using logical operation\n    int m = (a+b+((a-b)>>sizeof(int)*8-1|1)*(a-b))/2; // Developer- Minhas Kamal (https://minhaskamal.github.io)\n                                                      // Details- https://stackoverflow.com/a/41736445/4684058\n                                                      // Another Solution- If both both numbers are positive\n                                                      //                   then this works too:\n                                                      //                   m = (int[]){a,b}[1-!!(a/b)]\n    printf(\"%d \\n\", m);\n}\n"
        },
        {
          "name": "pi.c",
          "type": "blob",
          "size": 0.7890625,
          "content": "// Source- http://www.ioccc.org/1988/westley.c\n// Intro- Uses the most unusual method of calculating PI. It works by calculating the area and diameter of the circle, and then doing a division.\n// Details- http://www.cplusplus.com/forum/general/13434/\n\n#define _ -F<00||--F-OO--;\nint F=00,OO=00;main(){F_OO();printf(\"%1.3f\\n\",4.*-F/OO/OO);}F_OO()\n{\n            _-_-_-_\n       _-_-_-_-_-_-_-_-_\n    _-_-_-_-_-_-_-_-_-_-_-_\n  _-_-_-_-_-_-_-_-_-_-_-_-_-_\n _-_-_-_-_-_-_-_-_-_-_-_-_-_-_\n _-_-_-_-_-_-_-_-_-_-_-_-_-_-_\n_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_\n_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_\n_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_\n_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_\n _-_-_-_-_-_-_-_-_-_-_-_-_-_-_\n _-_-_-_-_-_-_-_-_-_-_-_-_-_-_\n  _-_-_-_-_-_-_-_-_-_-_-_-_-_\n    _-_-_-_-_-_-_-_-_-_-_-_\n        _-_-_-_-_-_-_-_\n            _-_-_-_\n}\n\n"
        },
        {
          "name": "pi_signature.c",
          "type": "blob",
          "size": 0.3837890625,
          "content": "// Developer- Dik T. Winter\n// Intro- Calculates the first 15000 digits of PI.\n// Details- http://stackoverflow.com/questions/20287513/can-anyone-make-heads-or-tales-of-this-spigot-algorithm-code-pitiny-c\n// Source- http://www.iwriteiam.nl/SigProgC.html#pi\n \na[52514],b,c=52514,d,e,f=1e4,g,h;main(){for(;b=c-=14;h=printf(\"%04d\",e+d/f))for(e=d%=f;g=--b*2;d/=g)d=d*b+f*(h?a[b]:f/5),a[b]=d%--g;}\n"
        },
        {
          "name": "polyglot_quine.c.py.pl.rb",
          "type": "blob",
          "size": 0.4921875,
          "content": "#define Intro \"A quine that runs in c, python, perl & ruby.\"\n#define Source \"http://shinh.skr.jp/obf/\"\n\n #include/*\ns='''*/<stdio.h>\nmain(){char*_;/*==;sub _:lvalue{$_}<<s;#';<<s#'''\ndef printf(a,*b):print a%b,\ns\n#*/\n_=\" #include/*%cs='''*/<stdio.h>%cmain(){char*_;/*==;sub _:lvalue{%c_}<<s;#';<<s#'''%cdef printf(a,*b):print a%%b,%cs%c#*/%c_=%c%s%c;printf(_,10,10,36,10,10,10,10,34,_,34,10,10,10,10);%c#/*%cs='''*/%c}//'''#==%c\";printf(_,10,10,36,10,10,10,10,34,_,34,10,10,10,10);\n#/*\ns='''*/\n}//'''#==\n"
        },
        {
          "name": "polyglot_so404.py.pl.rb.c.bf",
          "type": "blob",
          "size": 0.4228515625,
          "content": "#define Developer \"Mark Rushakoff (http://stackoverflow.com/users/126042/mark-rushakoff)\"\n#define Intro \"Prints 404 in python, perl, ruby, c and brainfu*k.\"\n#define Details \"http://meta.stackoverflow.com/questions/252184/whats-the-joke-in-the-stack-overflow-404-page-code\"\n \n# define v putchar\n#   define print(x) main(){v(4+v(v(52)-4));return 0;}/*\n#>+++++++4+[>++++++<-]>++++.----.++++.*/\nprint(202*2);exit();\n#define/*>.@*/exit()\n"
        },
        {
          "name": "prefix2postfix.c",
          "type": "blob",
          "size": 0.3564453125,
          "content": "// Developer- Nadeem Moidu (https://www.quora.com/profile/Nadeem-Moidu)\n// Intro- Converts prefix notation to postfix. Operands has to be of one digit.\n//        The notation should not carry space. Example input- /*A+BCD or *-1/341\n \n#include <stdio.h>\n\nmain(){\n    char c=getchar();\n    (c=='+' || c=='-' || c=='*' || c=='/')? main(),main(): 0;\n    putchar(c);\n}\n"
        },
        {
          "name": "pyjava.java",
          "type": "blob",
          "size": 2.916015625,
          "content": "// Developer- Minhas Kamal (https://minhaskamal.github.io)\n// Intro- Java code written like python. Finds factorial of big numbers.\n// Details- Really! You need detail here too!\n\npublic class Factorial                                                                          {\n    \n    public static int[] calculateFactorial(int inputNumber)                                     {\n        int[] factorial = initializeFactorial(inputNumber)                                      ;\n        for(int i=inputNumber-1, j, k; i>0; i--)                                                {\n            for(j=factorial.length-1, k=0; factorial[j]>=0; j--)                                {\n                k+=i*factorial[j]                                                               ;\n                factorial[j]=k%10                                                               ;\n                k/=10                                                                           ;}\n            factorial[j]=k%10                                                                   ;\n            k/=10                                                                               ;\n            factorial[j-1]=k                                                                    ;\n            for(int l=0; factorial[l]<1; l++) \n                factorial[l]=-1                                                                 ;}\n        return factorial                                                                        ;}\n    \n    private static int[] initializeFactorial(int inputNumber)                                   {\n        int digits = (int)Math.ceil(inputNumber*Math.log10(inputNumber/2))+2                    ;\n        int[] factorial = new int[digits+1]                                                     ;\n        for(int i=0; i<factorial.length; i++)\n            factorial[i]=-1                                                                     ;\n        for(int j=factorial.length-1, i=inputNumber; i>0; j--)                                  {\n            factorial[j]=i%10                                                                   ;\n            i/=10                                                                               ;}\n        return factorial                                                                        ;}\n    \n    private static void showOutput(int[] factorial)                                             {\n        int i=0                                                                                 ;\n        for(; factorial[i]<1; i++)                                                              ;\n        for(; i<factorial.length; i++) \n            System.out.print(factorial[i])                                                      ;}\n    \n    public static void main(String[] args)                                                      {\n        showOutput(calculateFactorial(67))                                                      ;}}\n"
        },
        {
          "name": "qlobe.rb",
          "type": "blob",
          "size": 2.15234375,
          "content": "# Developer- Yusuke Endoh (https://github.com/mame/)\n# Intro- Prints the globe. And it can also be turned by puting command-line argument.\n# Details- http://stackoverflow.com/questions/4504196/how-does-this-superb-quine-work\n# Source- http://mamememo.blogspot.com/2010/09/qlobe.html\n\nv=0000;eval$s=%q~d=%!^Lcf<LK8,                  _@7gj*LJ=c5nM)Tp1g0%Xv.,S[<>YoP\n4ZojjV)O>qIH1/n[|2yE[>:ieC       \"%.#%  :::##\"       97N-A&Kj_K_><wS5rtWk@*a+Y5\nyH?b[F^e7C/56j|pmRe+:)B     \"##%      ::##########\"     O98(Zh)'Iof*nm.,$C5Nyt=\nPPu01Avw^<IiQ=5$'D-y?    \"##:         ###############\"    g6`YT+qLw9k^ch|K'),tc\n6ygIL8xI#LNz3v}T=4W    \"#            #.   .####:#######\"    lL27FZ0ij)7TQCI)P7u\n}RT5-iJbbG5P-DHB<.   \"              ##### # :############\"   R,YvZ_rnv6ky-G+4U'\n$*are@b4U351Q-ug5   \"              #######################\"   00x8RR%`Om7VDp4M5\nPFixrPvl&<p[]1IJ   \"              ############:####  %#####\"   EGgDt8Lm#;bc4zS^\ny]0`_PstfUxOC(q   \"              .#############:##%   .##  .\"   /,}.YOIFj(k&q_V\nzcaAi?]^lCVYp!;  \" %%            .################.     #.   \"  ;s=\"v=%04o;ev\"%\n(;v=(v-($*+[45,  \":####:          :##############%       :   \"  ])[n=0].to_i;)%\n360)+\"al$s=%q#{  \"%######.              #########            \"  ;;\"%c\"%126+$s<<\n126}\";d.gsub!(/  \"##########.           #######%             \"  |\\s|\".*\"/,\"\");;\nrequire\"zlib\"||  \"###########           :######.             \"  ;d=d.unpack\"C*\"\nd.map{|c|n=(n||  \":#########:           .######: .           \"  )*90+(c-2)%91};\ne=[\"%x\"%n].pack   \" :#######%           :###### #:          \"   &&\"H*\";e=Zlib::\nInflate.inflate(   \"  ######%           .####% ::          \"   &&e).unpack(\"b*\"\n)[0];22.times{|y|   \"  ####%             %###             \"   ;w=(Math.sqrt(1-(\n(y*2.0-21)/22)**(;   \" .###:             .#%             \"   ;2))*23).floor;(w*\n2-1).times{|x|u=(e+    \" %##                           \"    )[y*z=360,z]*2;u=u[\n90*x/w+v+90,90/w];s[(    \" #.                        \"    ;y*80)+120-w+x]=(\"\"<<\n32<<\".:%#\")[4*u.count((     \" .                   \"     ;\"0\"))/u.size]}};;puts\\\ns+\";_ The Qlobe#{\" \"*18+ (       \"#  :#######\"       ;\"Copyright(C).Yusuke End\\\noh, 2010\")}\";exit~;_ The Qlobe                  Copyright(C).Yusuke Endoh, 2010\n"
        },
        {
          "name": "quine_signature.c",
          "type": "blob",
          "size": 0.2294921875,
          "content": "// Developer- Dario Dariol\n// Intro- Shortest C code that prints itself.\n// Details- http://stackoverflow.com/questions/29837173/how-does-this-program-duplicate-itself\n \nmain(a){printf(a=\"main(a){printf(a=%c%s%c,34,a,34);}\",34,a,34);}\n"
        },
        {
          "name": "ray_tracer.cpp",
          "type": "blob",
          "size": 1.486328125,
          "content": "// Developer- Andrew Kensler (http://eastfarthing.com/blog/index.html)\n// Intro- Generates a mesmerizing 3d image with ray tracing.\n// Details- http://fabiensanglard.net/rayTracing_back_of_business_card/\n\n#include <stdlib.h>\n#include <stdio.h>\n#include <math.h>\ntypedef int i;typedef float f;struct v{\nf x,y,z;v operator+(v r){return v(x+r.x\n,y+r.y,z+r.z);}v operator*(f r){return\nv(x*r,y*r,z*r);}f operator%(v r){return\nx*r.x+y*r.y+z*r.z;}v(){}v operator^(v r\n){return v(y*r.z-z*r.y,z*r.x-x*r.z,x*r.\ny-y*r.x);}v(f a,f b,f c){x=a;y=b;z=c;}v\noperator!(){return*this*(1/sqrt(*this%*\nthis));}};i G[]={247570,280596,280600,\n249748,18578,18577,231184,16,16};f R(){\nreturn(f)rand()/RAND_MAX;}i T(v o,v d,f\n&t,v&n){t=1e9;i m=0;f p=-o.z/d.z;if(.01\n<p)t=p,n=v(0,0,1),m=1;for(i k=19;k--;)\nfor(i j=9;j--;)if(G[j]&1<<k){v p=o+v(-k\n,0,-j-4);f b=p%d,c=p%p-1,q=b*b-c;if(q>0\n){f s=-b-sqrt(q);if(s<t&&s>.01)t=s,n=!(\np+d*t),m=2;}}return m;}v S(v o,v d){f t\n;v n;i m=T(o,d,t,n);if(!m)return v(.7,\n.6,1)*pow(1-d.z,4);v h=o+d*t,l=!(v(9+R(\n),9+R(),16)+h*-1),r=d+n*(n%d*-2);f b=l%\nn;if(b<0||T(h,l,t,n))b=0;f p=pow(l%r*(b\n>0),99);if(m&1){h=h*.2;return((i)(ceil(\nh.x)+ceil(h.y))&1?v(3,1,1):v(3,3,3))*(b\n*.2+.1);}return v(p,p,p)+S(h,r)*.5;}i\nmain(){printf(\"P6 512 512 255 \");v g=!v\n(-6,-16,0),a=!(v(0,0,1)^g)*.002,b=!(g^a\n)*.002,c=(a+b)*-256+g;for(i y=512;y--;)\nfor(i x=512;x--;){v p(13,13,13);for(i r\n=64;r--;){v t=a*(R()-.5)*99+b*(R()-.5)*\n99;p=S(v(17,16,8)+t,!(t*-1+(a*(R()+x)+b\n*(y+R())+c)*16))*3.5+p;}printf(\"%c%c%c\"\n,(i)p.x,(i)p.y,(i)p.z);}}\n"
        },
        {
          "name": "sapin.c",
          "type": "blob",
          "size": 1.328125,
          "content": "// Developer- Manfred Touron (https://github.com/moul) & Uriel Corfa (https://github.com/korfuri)\n// Intro- Prints a dynamic christmas tree.\n// Details- https://github.com/MinhasKamal/CreepyCodeCollection/pull/10\n\n#define C(B,E,S)(1+(E)*2+(B)*4+(((B)/2)*2)*(((B)+1)/2))\n\n/* */ __\n/* by */                     (\n/* ko */                    int\n/* rf */                   $,int\n/* ur */                  o,int O\n/* i& */                   , int\n/* mo */                  Q ,char\n/* ul */                 c){return\n/* vi */                $<(C(Q-1,Q+\n/* ve */               3,Q)-O-1)/2?(\n/* le */                write(1,\" \"\n/* mo */               ,1)+__(++$,o,\n/* uv */              O,Q,c )): (o<O?\n/* em */             write(1,&c,1)+__(\n/* en */            $,++o,O,Q,c):write(\n/* td */           1,\"\\n\",1));}_(int or,\n/* es */             int e,int $,int o\n/* as */            ,int Q){return or<Q\n/* te */           ?(e<or+4?__(0,0,C(or,\n/* ks */          e,Q),Q,42)+_(or,++e,0,0\n/* di */         ,Q): _(++or,0,0,0,Q)):e<Q\n/* ss */        ?__(0,0,Q|1,Q,'|')+_(or,++e\n/* id */       ,0,0,Q):0;}main(int c,char**v\n){return                   c>1&&\n/* en */                   atoi(\n/* ts */                   1[v])\n/* <3 */                   >=0?_\n/*/*             (2,0,0,8,astk(0[x])):c;}             /**/\n/**/             (0,0,0,0,atoi(1[v])):0;}             /**/\n"
        },
        {
          "name": "shortest_tetris.html",
          "type": "blob",
          "size": 0.4873046875,
          "content": "<!-- Developer- Martin Kleppe (https://github.com/aemkei) -->\n<!-- Intro- Very short and simplified variant of the classic tetris game. -->\n<!-- Details- https://gist.github.com/aemkei/1672254 -->\n\n<body onload='setInterval(onkeydown=d=>{for(d=d||5,(e=d.keyCode)&&(d=e%2?e%3?-1:1:5),t=\"\",d=c-d,e=a|b<<d,0>d|a&b<<d&&(a=e=parseInt((a|b<<c).toString(d=32).replace(/v/,\"\"),d),b=new Date%2?1:3),c=d,i=1;31>i;)O.innerHTML=t+=\".#\"[1&(1<<30|e).toString(2)[i]]+(i++%5?\"\":\"\\n\")},666,a=0,b=3,c=32)'><pre id=O>\n"
        },
        {
          "name": "signature_prime.c",
          "type": "blob",
          "size": 0.4169921875,
          "content": "// Developer- Minhas Kamal (https://minhaskamal.github.io)\n// Intro- Keeps printing prime number (theoretically) forever. Number of characters- 60.\n//      Can be made shorter (53 bytes)- main(m,k){for(;m%k--?:(k=m++);k^1?:printf(\"%i|\",m));}\n// Details- https://www.quora.com/What-is-the-shortest-and-most-effective-code-ever-written/answer/Minhas-Kamal?srid=u2HNX\n\n_=1;main($){for(;_%$?:(_+=$=1);++$*$>_&&printf(\"%i|\",$=_));}\n"
        },
        {
          "name": "strange.c",
          "type": "blob",
          "size": 0.5166015625,
          "content": "// Developer- Minhas Kamal (https://minhaskamal.github.io)\n// Intro- A strange code with more strange output.\n// Details- https://www.quora.com/What-are-some-of-the-most-strange-programming-language-features/answer/Minhas-Kamal?srid=u2HNX\n\n#include <stdio.h>\n\nint ma\\\nin() {\n\n    int arr[10], i;\n\n    for(i=0; i<10; i++){\n        i[arr] = i;\n    }\n\n    while(i --> 0){\n        printf(\"%d \", *arr+i);\n    }\n\n    https://www.google.com\n\n    i = 010;\n    printf(\"\\n| %d |\", i);\n\n    i = 5i;\n    printf(\"\\n %d\", i);\n\n    return 0;\n}\n"
        },
        {
          "name": "without_main.c",
          "type": "blob",
          "size": 0.275390625,
          "content": "// Developer- Susam Pal (https://stackoverflow.com/users/303363/susam-pal)\n// Intro- C code without main.\n// Details- http://susam.in/blog/obfuscating-main-function/\n\n#include <stdio.h>\n#define _ __(a,n,i,m,a,t,e)\n#define __(n,e,u,t,r,a,l) t##r##u##e\n\n_(){\n    printf(\"true!\\n\");\n}\n"
        }
      ]
    }
  ]
}