{
  "metadata": {
    "timestamp": 1736709739638,
    "page": 150,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "zsh-users/zsh",
      "stars": 3715,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".cvsignore",
          "type": "blob",
          "size": 0.171875,
          "content": "Makefile\nMETA-FAQ\nconfig.cache\nconfig.h\nconfig.h.in\nconfig.log\nconfig.modules\nconfig.modules.sh\nconfig.status\nconfigure\ncscope.out\nstamp-h\nstamp-h.in\nautom4te.cache\n*.swp\n.git\n"
        },
        {
          "name": ".distfiles",
          "type": "blob",
          "size": 0.06640625,
          "content": "DISTFILES_SRC='\n    META-FAQ\n    configure config.h.in stamp-h.in\n'\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.3173828125,
          "content": "# Top-most editorconfig file\n\nroot = true\n\n[*]\nend_of_line = lf\ntab_width   = 8\nindent_size = 2\nindent_style = space\n\n[**/Makefile*]\nindent_style = tab\nindent_size = 8\n\n[Functions/VCS_Info/**/*]\nindent_size = 4\nindent_style = space\n\n[ChangeLog]\nindent_size = 8\nindent_style = tab\n\n[*.[ch]]\nindent_size = 4\nindent_style = tab\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.0810546875,
          "content": "Makefile\ntags\nTAGS\n*.o\n*.o.c\n*.orig\n*.a\n*.so\n*.dll\n*~\n.*.sw?\n\\#*\n\n/META-FAQ\n/config.cache\n/config.h\n/config.h.in\n/config.log\n/config.modules\n/config.modules.sh\n/config.status\n/config.status.lineno\n/configure\n/cscope.out\n/stamp-h\n/stamp-h.in\n/autom4te.cache\n\nConfig/defs.mk\n\nCVS\n.#*\n\nDoc/help\nDoc/help.txt\nDoc/help/[_a-zA-Z0-9]*\n\nDoc/intro.pdf\nDoc/intro.ps\nDoc/intro.a4.pdf\nDoc/intro.a4.ps\nDoc/intro.us.pdf\nDoc/intro.us.ps\nDoc/version.yo\nDoc/texi2html.conf\nDoc/zsh*.1\nDoc/zsh.texi\nDoc/zsh.info*\nDoc/*.html\nDoc/zsh.aux\nDoc/zsh.toc\nDoc/zsh.cp\nDoc/zsh.cps\nDoc/zsh.fn\nDoc/zsh.fns\nDoc/zsh.ky\nDoc/zsh.kys\nDoc/zsh.pg\nDoc/zsh.pgs\nDoc/zsh.vr\nDoc/zsh.vrs\nDoc/zsh.log\nDoc/zsh.dvi\nDoc/zsh_a4.dvi\nDoc/zsh_us.dvi\nDoc/zsh.tp\nDoc/zsh.tps\nDoc/zsh.idx\nDoc/zsh_*.ps\nDoc/infodir\nDoc/zsh.pdf\nDoc/zsh_a4.pdf\nDoc/zsh_us.pdf\n\nDoc/Zsh/modlist.yo\nDoc/Zsh/modmenu.yo\nDoc/Zsh/manmodmenu.yo\n\nEtc/FAQ\nEtc/FAQ.html\n\nSrc/*.epro\nSrc/*.export\nSrc/*.mdh\nSrc/*.mdh.tmp\nSrc/*.mdhi\nSrc/*.mdhs\nSrc/*.syms\nSrc/Makemod.in\nSrc/Makemod\nSrc/[_a-zA-Z0-9]*.pro\nSrc/ansi2knr\nSrc/bltinmods.list\nSrc/cscope.out\nSrc/libzsh.so*\nSrc/modules-bltin\nSrc/modules.index\nSrc/modules.index.tmp\nSrc/modules.stamp\nSrc/patchlevel.h\nSrc/sigcount.h\nSrc/signames.c\nSrc/signames2.c\nSrc/stamp-modobjs\nSrc/stamp-modobjs.tmp\nSrc/tags\nSrc/TAGS\nSrc/version.h\nSrc/zsh\nSrc/zsh.exe\nSrc/zshcurses.h\nSrc/zshpaths.h\nSrc/zshterm.h\nSrc/zshxmods.h\n\nSrc/Builtins/Makefile.in\nSrc/Builtins/*.export\nSrc/Builtins/so_locations\nSrc/Builtins/*.pro\nSrc/Builtins/*.epro\nSrc/Builtins/*.syms\nSrc/Builtins/*.mdh\nSrc/Builtins/*.mdhi\nSrc/Builtins/*.mdhs\nSrc/Builtins/*.mdh.tmp\n\nSrc/Modules/Makefile.in\nSrc/Modules/*.export\nSrc/Modules/so_locations\nSrc/Modules/*.pro\nSrc/Modules/*.epro\nSrc/Modules/*.syms\nSrc/Modules/*.mdh\nSrc/Modules/*.mdhi\nSrc/Modules/*.mdhs\nSrc/Modules/*.mdh.tmp\nSrc/Modules/errnames.c\nSrc/Modules/errcount.h\nSrc/Modules/curses_keys.h\n\nSrc/Zle/Makefile.in\nSrc/Zle/*.export\nSrc/Zle/so_locations\nSrc/Zle/*.pro\nSrc/Zle/*.epro\nSrc/Zle/*.syms\nSrc/Zle/*.mdh\nSrc/Zle/*.mdhi\nSrc/Zle/*.mdhs\nSrc/Zle/*.mdh.tmp\nSrc/Zle/thingies.list\nSrc/Zle/widgets.list\nSrc/Zle/zle_things.h\nSrc/Zle/zle_widget.h\n\nTest/*.tmp\n/.project\n"
        },
        {
          "name": ".preconfig",
          "type": "blob",
          "size": 0.056640625,
          "content": "#! /bin/sh\n\nset -e\n\nautoconf\nautoheader\necho > stamp-h.in\n"
        },
        {
          "name": "ChangeLog",
          "type": "blob",
          "size": 685.4609375,
          "content": "2025-01-03  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 53294: Src/loop.c: fix multibyte handling in \"select\" prompts\n\n2025-01-03  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 53293: Doc/Zsh/compsys.yo, Doc/Zsh/index.yo, Doc/Zsh/manual.yo:\n\tfix menu() and texinode() in yodl docs\n\n2025-01-02  dana  <dana@dana.is>\n\n\t* 53297: Test/A08time.ztst: allow %nU/%nS result to be 0\n\n\t* unposted: Completion/Zsh/Command/_zparseopts: update\n\tcompletion per workers/53260\n\n2024-12-26  dana  <dana@dana.is>\n\n\t* 53260: Doc/Zsh/mod_zutil.yo, Src/Modules/zutil.c,\n\tTest/V12zparseopts.ztst: add -v and -G options to zparseopts\n\n\t* 53257: Doc/Zsh/params.yo, Doc/Zsh/prompt.yo,\n\tSrc/Modules/zftp.c, Src/Modules/zprof.c, Src/compat.c,\n\tSrc/exec.c, Src/hist.c, Src/init.c, Src/jobs.c, Src/params.c,\n\tSrc/prompt.c, Src/signals.c, Src/utils.c, Src/zsh.h,\n\tTest/A08time.ztst, Test/D01prompt.ztst, Test/D04parameter.ztst:\n\tuse monotonic clock where appropriate\n\n2024-12-16  dana  <dana@dana.is>\n\n\t* 53251: Completion/Unix/Command/_man: fix page completion on\n\tmacOS, update fall-back paths, etc.\n\n\t* 52108: Doc/Zsh/compsys.yo: document benefits of `_normal -p`\n\n2024-11-23  Oliver Kiddle  <opk@zsh.org>\n\n\t* Clinton Bunch: 53228: Etc/FAQ.yo: Remove references to\n\tPatches \"Archive\" from FAQ\n\n\t* github #122: Wu, Zhenyu: Completion/Unix/Command/_gcc: Add\n\tnewer C and C++ language standards to gcc completion\n\n\t* github #123: Shlomi Fish: Completion/X/Command/_okular:\n\tMake okular's completion support *.epub files.\n\n\t* github #124: Ryan Rotter: Completion/Debian/Command/_dpkg:\n\tremove defunct --largemem, --smallmem options\n\n\t* 53243: Src/Zle/zle_hist.c: fix use of vi-fetch-history\n\twith a range\n\n\t* 53244: Test/Y01completion.ztst: rename user in test case to\n\treduce likelihood of failure due to user existing\n\n2024-11-21  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 53238 (+53239 Mikael): Completion/Redhat/Command/_dnf,\n\tCompletion/Redhat/Command/_dnf5: support dnf5\n\n2024-11-12  Bart Schaefer  <schaefer@zsh.org>\n\n\t* Karel Balej: 53240, 53241: Completion/Unix/Command/_mpc:\n\tupdated completions for mpc add, mpc insert\n\n2024-11-12  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 53137 + 53213: Doc/Makefile.in, Doc/intro.ms, allow creating\n\tintro.html\n\n2024-11-11  Eric Cook  <llua@gmx.com>\n\n\t* 53144: Completion/Unix/Command/_sysctl:\n\tsupport completion with the dot delimiter on linux\n\n\t* Matthew Martin: 53174 + comments:\n\tCompletion/Base/Utility/_as_if: complete `as if'\n\ta different command were being completed\n\n2024-11-05  Bart Schaefer  <schaefer@toltec-ubuntu>\n\n\t* 53209 + comments + test: Src/params.c, Test/D04parameter.ztst:\n\tdo not unmetafy via string pointers into global parameter table\n\n2024-10-16  Bart Schaefer  <schaefer@toltec-ubuntu>\n\n\t* 53146: Src/exec.c: trace flags cannot be copied from an\n\tundefined function (cf. workers/45131)\n\n2024-09-02  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 53134: configure.ac: use -undefined dynamic_lookup on recent macOS\n\n2024-09-21  Bart Schaefer  <schaefer@toltec-ubuntu>\n\n\t* 53103: Test/A08time.ztst: fix spurious test failure on Solaris\n\n2024-09-18  Oliver Kiddle  <opk@zsh.org>\n\n\t* Philip Sequeira: 53095: Completion/Unix/Command/_chmod,\n\tCompletion/Unix/Command/_chown: fix completion for chmod/chown\n\t--reference with escaped filename\n\n\t* 53094: configure.ac, Src/signals.h: remove unused autoconf tests\n\n\t* 53093: Src/input.c: silence compiler warning when USE_LSEEK\n\tis not defined\n\n\t* 53092: Src/init.c: silence deprecated header warning on Linux\n\n2024-09-14  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 53088: Src/exec.c, Src/jobs.c, Test/A01grammar.ztst,\n\tTest/A08time.ztst: enable `time' on builtins, assignments, and\n\tother current-shell actions, including failed commands.  Tests.\n\n2024-09-14  Oliver Kiddle  <opk@zsh.org>\n\n\t* c.f. Emil Velikov: 53072: Completion/Linux/Command/_dkms:\n\tremove completion that has been imported by the upstream project\n\n\t* 53087: Test/X05zleincarg.ztst: don't produce spurious error\n\twhen zpty is missing\n\n\t* 53086: configure.ac: change flags used for building dynamic\n\tmodules on Haiku OS\n\n\t* 53085: configure.ac, Src/init.c: support for BSDs in\n\t$ZSH_EXEPATH implementation\n\n\t* 53084: configure.ac: yet another approach to the /dev/fd\n\tautoconf test because of shells emulating /dev/fd\n\n\t* 53083: configure.ac, Src/Builtins/rlimits.c: handle Haiku\n\tspecific resource limit for open vnode monitors\n\n\t* 53082: configure.ac: remove a couple of unused #defines\n\n\t* 53081: INSTALL, configure.ac, Src/init.c, Src/options.c,\n\tSrc/signals.c, Src/zsh_system.h: remove old BeOS support code\n\n\t* 53080: configure.ac, Src/init.c, Src/signals.c, Src/signals.h:\n\tremove code for systems that only have the old pre-POSIX signal()\n\n2024-08-31  Oliver Kiddle  <opk@zsh.org>\n\n\t* Clinton Bunch: 53060: Doc/Zsh/mod_random.yo,\n\tSrc/Modules/random.c: silence build warnings\n\n\t* Clinton Bunch: 53056: Completion/Zsh/Type/_module_math_func,\n\tDoc/Makefile.in, Doc/Zsh/mod_random.yo, Src/Modules/random.c,\n\tSrc/Modules/random.mdd, Src/Modules/random_real.c, configure.ac:\n\tnew zsh/random module defining an SRANDOM parameter and\n\tzrand_float() and zrand_int() math functions\n\n\t* github #120: Semnodime: Completion/Unix/Command/_git: update\n\t_git to reflect `--recursive` being an alias\n\n\t* 53058: Completion/Unix/Command/_zstd: new completion for zstd\n\n\t* 53057: Completion/Zsh/Context/_equal: complete glob qualifiers\n\tfollowing an equals expansion\n\n\t* 53052: Completion/X/Command/_setxkbmap: update completion with\n\tnewer options\n\n2024-08-26  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* unposted: Doc/Zsh/compsys.yo: remove reference to removed code\n\n2024-08-15  Bart Schaefer  <schaefer@zsh.org>\n\n\t* unposted (see 53034): Src/lex.c, Test/A06assign.ztst: fix parsing\n\tof Bang token in value side of array element assignment\n\n2024-08-13  Eric Cook  <llua@gmx.com>\n\n\t* 53031: Christian Heusel: Completion/Unix/Command/_git: add\n\tmissing terminator in case statement\n\n2024-08-06  Bart Schaefer  <schaefer@zsh.org>\n\n\t* Jun.T: 53026: Src/params.c: fix failure to free old value when\n\tsetting new value of reference\n\n2024-08-05  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 53025: Src/loop.c, Src/params.c: fix two memory leaks and two\n\tpointer errors when encountering a named reference self-reference\n\n\t* 53023: Src/params.c: fix memory leak of unset private parameter\n\n2024-08-04  Bart Schaefer  <schaefer@zsh.org>\n\n\t* Philippe Altherr: 53005: Src/exec.c: off-by-one error when\n\tresetting signals on subshell entrance\n\n2024-08-03  Eric Cook  <llua@gmx.com>\n\n\t* 52989: Completion/Unix/Command/_rsync,\n\tCompletion/Unix/Type/_remote_files: support rsync 3.2.4+ remote\n\tfilename handling.\n\n2024-07-28  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 52999: Franklin Yu (adapted): Src/init.c: Import OLDPWD from\n\tthe environment if set.\n\n2024-07-04  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 52985: Src/exec.c: avoid adding original param to restorelist\n\n2024-06-28  Bart Schaefer  <schaefer@zsh.org>\n\n\t* Philippe Altherr: 52977: Src/exec.c, Test/C03traps.ztst: fix\n\tand test regression so that ERR_EXIT and ERR_RETURN are respected\n\tby the final command in an && / || sequence.\n\n2024-06-24  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 52968: Doc/Makefile.in: use pdfroff to create intro.pdf\n\n2024-06-13  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 52951: Src/builtin.c: make sure to close memstream for 'print -v'\n\n2024-06-08  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 52946: Completion/compdump, Completion/compinit: Revert 52768\n\n2024-05-24  Bart Schaefer  <schaefer@zsh.org>\n\n\t* users/29882: Etc/FAQ.yo: Explain $RANDOM predictability\n\n\t* 52910: Functions/Misc/zmv: Improve handling of **/ patterns\n\n\t* 52904: Completion/Unix/Command/_git: Improve quoting of paths\n\tpassed via _call_program to \"git ls-files\"\n\n2024-05-20  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 52895: Completion/Unix/Type/_baudrates: Partial revert of\n\t44274 which broke _baudrates\n\n2024-05-10  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 52924: Src/Modules/zftp.c: NULL zfsessions after free.\n\n2024-05-08  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 52915: Doc/Zsh/cond.yo: be explicit about behaviour of globbing\n\tpatterns within conditions.\n\n2024-04-07  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 52878: Src/subst.c: Fix ${foo:^bar} where bar is an associative\n\tarray\n\n2024-04-01  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52865: Doc/Zsh/expn.yo, Doc/Zsh/params.yo, Etc/FAQ.yo:\n\tDocumentation update for 52864\n\n\t* 52864: Src/lex.c, Src/subst.c, Test/D10nofork.ztst,\n\tTest/V10private.ztst: Change ${|var|...} to ${{var} ...},\n\tlimit local REPLY behavior to ${|...}, update tests.\n\n\t* 52781 (and typo fix): Src/hashtable.c: HIST IGNORE_DUPS treats\n\twhitespace as significant when HIST_REDUCE_BLANKS is also set.\n\n2024-04-01  Oliver Kiddle  <opk@zsh.org>\n\n\t* github #115: OKURA Masafumi: Completion/Unix/Command/_ruby:\n\tIRB now has `--regexp-completor` and `--type-completor` options\n\n\t* 52859: Completion/Zsh/Command/_fc, Completion/Zsh/Command/_vared:\n\tuse _date_formats for fc and complete -m/-M for vared\n\n2024-03-25  Oliver Kiddle  <opk@zsh.org>\n\n\t* 52798: Completion/Unix/Command/_ssh,\n\tCompletion/Unix/Type/_ssh_hosts: handle comments in ssh config\n\n2024-03-23  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 52768: Completion/compdump, Completion/compinit: Handle\n\tcompleter filenames with funny characters in them\n\n2024-03-21  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 52780: Src/Modules/hlgroup.c: remove unnecessary returns.\n\n2024-03-20  Oliver Kiddle  <opk@zsh.org>\n\n\t* 52783: Src/Modules/hlgroup.c: allow for unset hash element\n\n\t* unposted: configure.ac: remove reference to fp_PROG_CC_STDC\n\tmacro which was removed in 52750\n\n2024-03-18  Oliver Kiddle  <opk@zsh.org>\n\n\t* 52770: Completion/Linux/Command/_selinux: handle newrole\n\n\t* 52769: Completion/Unix/Command/_ansible: fix completion of\n\tansible keywords and --step option\n\n\t* 52750: Config/defs.mk.in, Etc/zsh-development-guide,\n\tSrc/Makemod.in.in, Src/Modules/files.c, Src/Modules/watch.c,\n\tSrc/Modules/zftp.c, Src/Modules/zprof.c, Src/Zle/compcore.c,\n\tSrc/Zle/zle.h, Src/Zle/zle_keymap.c, Src/Zle/zle_thingy.c,\n\tSrc/exec.c, Src/glob.c, Src/hist.c, Src/makepro.awk, Src/mem.c,\n\tSrc/mkbltnmlst.sh, Src/modentry.c, Src/parse.c, Src/prototypes.h,\n\tSrc/signals.h, Src/utils.c, Src/zsh.h, Src/zsh_system.h, aclocal.m4,\n\tconfigure.ac: remove ansi2knr support for old pre-ansi K&R compilers\n\n2024-03-14  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52759: Doc/Zsh/expn.yo, Etc/FAQ.yo, Src/subst.c,\n\tTest/D10nofork.ztst: change ${ ... } substitution to trim one\n\ttrailing newline; instead \"${ ... }\" (with quotes) preserves that\n\tnewline.  All trailing newlines are still trimmed in emulations.\n\n\t* unposted: Etc/BUGS: HIST_IGNORE_DUPS mishandles quoted whitespace.\n\n\t* 52752: Src/params.c, Test/B02typeset.ztst: more typeset -p fixes\n\tfor local exports and improper \"export -x\" / \"readonly -r\" output.\n\n2024-03-13  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52753: Doc/Zsh/grammar.yo: Clarify \"nocorrect\" when introducing\n\tprecommand modifiers.\n\n\t* unposted: Doc/Zsh/contrib.yo: update doc for \"colors\" to match\n\tworkers/47489,50212 (italic and bright)\n\n2024-03-12  Bart Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Src/Modules/ksh93.c: \"typeset -p\" has problems with\n\tspecial parameters having NULL values, use a dummy static instead.\n\n\t* 52742: Src/builtin.c: fix bad interactions of \"typeset -p\" with\n\tGLOBAL_EXPORT, plus some other inconsistencies.\n\n2024-03-13  Oliver Kiddle  <opk@zsh.org>\n\n\t* 52724: Src/Modules/hlgroup.c: fix .zle.sgr for empty sequences\n\n2024-03-09  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52725: Src/Modules/ksh93.c: updated named reference semantics\n\n2024-03-09  Stephane Chazelas  <stephane@chazelas.org>\n\n\t* 52721: fix metafication and regexp/subject confusion in\n\tpcre_match error message.\n\n2024-03-08  Stephane Chazelas  <stephane@chazelas.org>\n\n\t* 52704: Doc/Zsh/params.yo, mention new ${ ... } and ${|...}\n\toperators and fix process substitution terminology in\n\tdocumentation of $zsh_eval_context.\n\n2024-03-05  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52692: Doc/Zsh/params.yo, Src/builtin.c, Src/params.c,\n\tTest/K01nameref.ztst: local declaration (typeset) of the\n\tname of a named reference hides the reference rather than\n\tfollowing it.  Also fix two related crash bugs.\n\n2024-03-05  Stephane Chazelas  <stephane@chazelas.org>\n\n\t* 52685: Doc/Zsh/restricted.yo: fix typo in the name of bash's\n\tBASH_ENV variable.\n\n2024-03-04  Bart Schaefer  <schaefer@zsh.org>\n\n\t* unposted (cf. 52615): Src/builtin.c: use META_NOALLOC for 52591\n\n\t* unposted (cf. 52617): Src/params.c: only scalars can instantiate\n\ta declared named reference\n\n\t* 52659: Src/builtin.c, Test/K01nameref.ztst: Fix crash when unset\n\twas called on a named referece, add regression test\n\n\t* 52650 plus minor fixes: Doc/Zsh/builtins.yo, Doc/Zsh/expn.yo,\n\tDoc/Zsh/func.yo, Doc/Zsh/mod_ksh93.yo, Etc/FAQ.yo,\n\tSrc/Modules/ksh93.c, Src/builtin.c, Src/exec.c, Src/params.c,\n\tTest/D04parameter.ztst, Test/K01nameref.ztst,\n\tTest/V10private.ztst: add -u option for named references that\n\tpoint to the \"upper\" scope, failed assignments have status 1\n\n2024-03-05  Oliver Kiddle  <opk@zsh.org>\n\n\t* 52646: Completion/Zsh/Type/_ps1234, Doc/Zsh/compsys.yo,\n\tDoc/Zsh/compwid.yo, Src/Modules/watch.c, Src/Zle/complist.c,\n\tSrc/Zle/zle_tricky.c, Src/prompt.c: extend support for highlight\n\tgroups to completion explanation strings and WATCHFMT\n\n\t* 52641: midchildan: Doc/Zsh/contrib.yo, Functions/Zle/incarg,\n\tTest/X05zleincarg.ztst: add a backward variant and make it repeatable\n\n2024-03-02  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52652: Src/params.c, Test/D04parameter.ztst: fix obscure bug\n\tunsetting the array part of a tied parameter pair, update test\n\n\t* JunT.: 52635: Test/runtests.zsh: show file name when crashed\n\n\t* 52612: Src/parse.c, Src/subst.c, Src/utils.c: change the %l\n\treplacment of zwarning() et al. to do literal string output;\n\tchange previous uses to %s and use new %l for ${var?$error}\n\n2024-03-01  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52645: Src/builtin.c: unset through a nameref keep up-scope\n\tparameters declared, and not wipe out the entire parameter stack\n\n2024-02-28  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52619 (plus tests): Src/params.c, Test/A06assign.ztst: there\n\tis no empty element when appending array to unset scalar\n\n2024-02-28  Oliver Kiddle  <opk@zsh.org>\n\n\t* 52622 (tweaked, c.f. 52626): Src/jobs.c: adjust number of columns\n\tand drop right-parenthesis in \"kill -L\" output\n\n\t* 52623: Src/signames2.awk: add some Solaris signal descriptions\n\n\t* 52594: Completion/Zsh/Command/_kill, Doc/Zsh/builtins.yo,\n\tDoc/Zsh/params.yo, Src/Modules/parameter.c, Src/builtin.c,\n\tSrc/exec.c, Src/hashtable.c, Src/init.c, Src/jobs.c, Src/params.c,\n\tSrc/signals.c, Src/signals.h, Src/signames2.awk: support for\n\tPOSIX real-time signals with kill and trap and add -L option to\n\tkill for more verbose listing of signals\n\n2024-02-24  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52597: Src/math.c: fix multibyte and metafied character counts\n\twhen providing context for operator and operand errors\n\n\t* 52596: Src/exec.c: metafy interpreter name for error message\n\n\t* Stephane: 52591: Src/builtin.c: printf builtin must pass\n\tmetafied strings to math evaluation\n\n2024-02-23  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52583: Src/params.c, Test/V10private.ztst: do an extra check\n\tfor proper scope and parameter existence when assigning to a\n\tnon-local name that resolves to a readonly special.\n\n2024-02-22  Oliver Kiddle  <opk@zsh.org>\n\n\t* 52552: Completion/Unix/Command/_java: newer Java supports\n\tpassing source files directly to java\n\n2024-02-20  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52559: Doc/Zsh/builtins.yo, Doc/Zsh/mod_private.yo,\n\tSrc/Modules/param_private.c, Src/params.c, Test/B02typeset.ztst,\n\tTest/K01nameref.ztst, Test/V10private.ztst: revise \"typeset -p\"\n\twith respect to local readonly special parameters; update doc\n\tand tests to describe handling of global readonly specials and\n\tto account for side-effects on zsh/param/private.\n\n2024-02-19  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 52549: Doc/Zsh/builtins.yo: document that return already works\n\tin a script.\n\nx2024-02-19  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 52544: Completion/Unix/Type/_diff_options: support macOS Ventura\n\tor newer\n\n2024-02-18  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52558: Etc/FAQ.yo: make note of word splitting differences\n\twith nofork substitutions; update ToC; minor formatting fixes\n\n2024-02-18  Stephane Chazelas  <stephane@chazelas.org>\n\n\t* 45837: Src/exec.c, Src/init.c, Src/options.c: fix issue whereby\n\toriginal process group is not restored properly upon exit when\n\texec {var} redirs are used or MONITOR is temporarily disabled.\n\n2024-02-18  Stephane Chazelas  <stephane@chazelas.org>\n\n\t* 52515: Src/exec.c (+ tests in 52527) avoid sh errors when\n\t  running shebang-less scripts with paths starting with - or +\n\n2024-02-17  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52556: Test/K01nameref.ztst: regression test for unset referent\n\n\t* 52556: Src/builtin.c: fix crash when applying a type change via\n\ta named reference when the referent has been declared but unset\n\n2024-02-16  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 52546: Functions/Zle/incarg: incarg: avoid unneeded subshell\n\n2024-02-15  Oliver Kiddle  <opk@zsh.org>\n\n\t* 52520: midchildan: Doc/Zsh/contrib.yo, Functions/Zle/incarg,\n\tTest/X05zleincarg.ztst: add new features and improvements to the\n\t\"incarg\" ZLE widget\n\n\t* github #112: Poncho: Completion/Unix/Command/_todo.sh:\n\tCompletion: todo.sh uses shorthelp and not showhelp\n\n\t* 52535: Doc/Makefile.in, Doc/Zsh/prompt.yo, Doc/Zsh/zle.yo,\n\tDoc/Zsh/mod_hlgroup.yo, NEWS: documentation for highlight groups\n\n\t* 52533: Src/Modules/hlgroup.c, Src/Modules/hlgroup.mdd,\n\tSrc/prompt.c: add module to provide alternate readonly views of\n\tthe content of .zle.hlgroups\n\n2024-02-09  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 52526: Src/Modules/terminfo.c: metafy terminfo capabilities\n\n2024-02-04  Bart Schaefer  <schaefer@zsh.org>\n\n\t* unposted (cf. users/29635): Doc/Zsh/arith.yo: additional detail\n\tof parameter expansion in math context.\n\n\t* 52521: Etc/BUGS: mapfile handling of empty/unreadable files\n\n2024-02-04  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 52516: Src/prompt.c: fix crash in %H when hlgroups is empty\n\n\t* 52517: Src/prompt.c: ensure that %H is followed by {\n\n2024-02-03  Bart Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Util/printdefines: updates and fix omissions\n\n \t* unposted: cf. Roman in users/29472: Functions/Misc/zslurp:\n\tEfficient lossless read of stdin into $REPLY\n\n\t* unposted: Src/Zle/zle_tricky.c, Src/parse.c, Src/pattern.c:\n\tRecord as comments some notes about namespace usage exceptions.\n\n\t* 52513: Doc/Zsh/mod_private.yo, Src/Modules/param_private.c,\n\tSrc/params.c, Test/v10private.ztst: nofork substitutions can\n\tuse private parameters; fix crash bug on {privateFD}>&N; add\n\ttests and documentation\n\n2024-01-28  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52510: Doc/Zsh/expn.yo, Doc/Zsh/mod_private.yo: document how\n\t${ ... } et al. affect use of \"private\"; add index entries\n\n\t* 52509: configure.ac, Src/utils.c: manage internals of stdio\n\tobjects when performing redirections.\n\n2024-01-28  Oliver Kiddle  <opk@zsh.org>\n\n\t* 52500: Src/Zle/zle.h, Src/Zle/zle_refresh.c, Src/prompt.c:\n\tadd layer token to zle attributes to provide control over\n\tthe precedence of highlighting\n\n\t* 52499: Src/prompt.c: support highlight groups defined in a\n\t.zle.hlgroups associative array and referenced using %H in\n\tprompt strings or hl= in zle_highlight/region_highlight\n\n\t* unposted: Src/Modules/zutil.c: remove unused variable to silence\n\tcompiler warning\n\n\t* Jörg Sommer: 52442: Src/zsh.h: Mark hookdef.name as const\n\n\t* Jörg Sommer: 52444: Src/module.c: Mark name argument of some\n\tfunctions const\n\n\t* Jörg Sommer: 52441: Src/Zle/zle_vi.c: Mark variables as const\n\n\t* Jörg Sommer: 52440: Src/Zle/textobjects.c: Mark variables as const\n\n2024-01-26  Oliver Kiddle  <opk@zsh.org>\n\n\t* 52405, 52502: Src/Modules/pcre.c, Test/V07pcre.ztst:\n\tadd empty elements to $match for optional captures that don't match\n\n\t* github #110: opensauce04: Completion/Redhat/Command/_dnf:\n\tFix incorrect completion for `dnf --showduplicates`\n\n\t* github #108: Aurélien Olivier: Completion/Unix/Command/_perlbrew:\n\tadd perlbrew completion\n\n2024-01-25  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52385: Test/B03print.ztst: avoid \"tr\" in test output formatting\n\n2024-01-24  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52496 + 52377: Doc/Zsh/options.yo, Doc/Zsh/params.yo: clarify\n\tSPROMPT behavior when CORRECT_ALL is set\n\n\t* 52492: Src/math.c: prevent indexing error when using recursive\n\tarithmetic in array subscript (operator stops on operand error)\n\n\t* 52482: Src/subst.c: strip trailing newlines in emulation modes\n\tof ${ command; }, for bash/ksh compatibility\n\n\t* 52476 + cf. 52479: Etc/FAQ.yo: more about nofork substitution\n\n\t* 52477: Src/Modules/curses.c: fix \"zcurses mouse delay ...\"\n\n\t* 52473: Doc/Zsh/mod_zutil.yo, Src/Modules/zutil.c: zstyle -q\n\n\t* 52468: Src/builtin.c, Src/utils.c: save and restore state of\n\tcorrect TTY when using read -s / -d\n\n2024-01-14  Matthew Martin  <phy1729@gmail.com>\n\n\t* github #109: Wu Zhenyu: Completion/Linux/Command/_valgrind: Fix\n\ta typo\n\n2024-01-05  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52465: Doc/Zsh/contrib.yo, Functions/Misc/zmv: use NULL_GLOB\n\twhen expanding the input pattern to avoid NOMATCH exit\n\n2023-12-06  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 52413: Completion/Unix/Command/_iconv: support Citrus version\n\ton macOS, DragonFly and NetBSD\n\n2023-12-13  Oliver Kiddle  <opk@zsh.org>\n\n\t* Florian Weimer: 52383: configure.ac: Avoid incompatible pointer\n\ttypes in terminfo global variable checks\n\n\t* 52394: configure.ac: alter form of /dev/fd test to work where\n\t/bin/sh is ksh such as on Solaris 11\n\n\t* 52393: Test/ztst.zsh: fix tests on Solaris by omitting -a option\n\tto diff as it is not supported there\n\n\t* 52392: Src/makepro.awk: use octal escape to match = without\n\terror messages from either GNU awk or Solaris awk\n\n\t* 52382: Src/Modules/ksh93.c, Src/Zle/zle_utils.c: avoid \\e in C code\n\n2023-12-09  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52366 + fix typo: Completion/Unix/Command/_ant: rename\n\tfind_targets as _ant_targets, replace one sed with substitution\n\n\t* 52365: Src/jobs.c, Src/signals.c: record state of exited\n\tbackground jobs sooner so as to be visible in TRAPCHLD\n\n2023-12-05  Oliver Kiddle  <opk@zsh.org>\n\n\t* 52326, 52372: configure.ac, Src/jobs.c, Doc/Zsh/builtins.yo,\n\tCompletion/Zsh/Command/_kill: add -q option to kill for sigqueue\n\n\t* 52373: Completion/Base/Utility/_numbers,\n\tCompletion/Solaris/Command/_dumpadm, Completion/Unix/Command/_xz:\n\tfix _numbers for suffixes containing % and update affected functions\n\n2023-12-04  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 52356: (cf. 52327 Dennis Eriksen): Doc/Zsh/builtins.yo: add\n\tmissing function index entries\n\n2023-12-02  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52361: Completion/Unix/Command/_ant: fix quoting of target files\n\t(derived from Germán Riaño: 52329)\n\n\t* 52360: Test/A04redirect.ztst: Simplify bad-descriptor check in\n\t%prep -- avoids accidentally using an open descriptor (derived\n\tfrom Germán Riaño: 52328)\n\n2023-11-29  Bart Schaefer  <schaefer@zsh.org>\n\n\t* Sebastian Gniazdowski: 52145: Functions/Prompts/prompt_sprint2_setup:\n\tContributed prompt theme with current time and abbreviated VCS_info.\n\n2023-11-23  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52325: Doc/Zsh/expn.yo, Doc/Zsh/mod_ksh93.yo, Doc/Zsh/params.yo:\n\tClarify side-effects of $argv and named references to specials,\n\tupdate ksh93 feature compatibility.\n\n\tunposted: Src/subst.c, Test/D10nofork.ztst: whitespace tweak to\n\tavoid unexpected parse error when comments are used in ${ ... }\n\n2023-11-22  Oliver Kiddle  <opk@zsh.org>\n\n\t* unposted: Completion/Unix/Command/_ri: fix missing closing brace\n\n\t* 52315: Completion/...: completion options update\n\n2023-11-18  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52313: Src/exec.c: subshells implementing multio reads/writes\n\tare not interactive and should check for write errors.\n\n2023-11-17  Oliver Kiddle  <opk@zsh.org>\n\n\t* 52307: Completion/Linux/Command/_selinux,\n\tCompletion/Linux/Command/_chcon, Completion/Linux/Command/_setpriv,\n\tCompletion/Linux/Type/_selinux_contexts, Completion/Unix/Command/_cp,\n\tCompletion/Linux/Type/_selinux_types, Completion/Unix/Command/_find,\n\tCompletion/Unix/Command/_install, Completion/Unix/Command/_mount,\n\tCompletion/Unix/Command/_zfs: new completion for many SELinux tools\n\n\t* 52303: Completion/Unix/Command/_ifconfig,\n\tCompletion/Unix/Command/_chown, Completion/Unix/Command/_cp,\n\tCompletion/Unix/Command/_cut, Completion/Unix/Command/_date,\n\tCompletion/Unix/Command/_du, Completion/Unix/Command/_env,\n\tCompletion/Unix/Command/_id, Completion/Unix/Command/_ln,\n\tCompletion/Unix/Command/_ls, Completion/Unix/Command/_make,\n\tCompletion/Unix/Command/_mount, Completion/Unix/Command/_mv,\n\tCompletion/Unix/Command/_rm, Completion/Unix/Command/_sed,\n\tCompletion/Unix/Command/_split, Completion/Unix/Command/_touch,\n\tCompletion/Unix/Command/_uniq, Completion/Unix/Command/_xargs:\n\tupdates to completions for macOS 13\n\n2023-11-15  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52309: Src/exec.c: suppress job control inside <<(substition)\n\tto fix cases that hang with all signals blocked.  Similarly,\n\tallow interrupt of multios reading from a terminal.\n\n\t* 52308: Etc/FAQ.yo: mention new features, fix some old answers\n\n\t* 52275: Src/compat.c: rationality in zgetdir() and zgetcwd() to\n\tavoid silently wandering out of the current directory when path\n\tparents are inaccessible.\n\n\t* 52202: Src/lex.c, Src/subst.c, Test/D04parameter.ztst: improve\n\thandling of quoting in ${var/pattern/replacement}.  Still not\n\tperfect, e.g., deeply nested expansions\tin the pattern may fail.\n\n2023-11-14  Oliver Kiddle  <opk@zsh.org>\n\n\t* github #106: Matt Koscica: Completion/Unix/Command/_tmux,\n\tUtil/check-tmux-state: update tmux completion (20230919)\n\n\t* unposted (cf. 52167): Completion/Unix/Command/_mutt:\n\tmutt's -a takes a list of files terminated by --\n\n\t* 52301: Completion/Unix/Command/_gem, Completion/Unix/Command/_ri,\n\tCompletion/Unix/Command/_ruby: update options in completions for\n\truby 3.2, gem 3.4.10 and ri 6.5\n\n\t* 52300: Completion/Unix/Command/_ansible: ansible 2.15.2 updates\n\n2023-11-09  Oliver Kiddle  <opk@zsh.org>\n\n\t* 52280: Completion/Unix/Command/_git: update git completion for new\n\toptions in git through to version 2.42.0\n\n2023-11-08  Oliver Kiddle  <opk@zsh.org>\n\n\t* github #105: Shotaro Aoyama: Completion/Zsh/Command/_zle:\n\tadd \"-I\" for \"zle\" completion\n\n\t* Eric Cook: 52168: Completion/Unix/Command/_xfconf-query:\n\tadd completion for xfce's xfconf-query(1)\n\n\t* 52271: Src/Modules/pcre.c: use correct form for unused parameter\n\n2023-11-02  Oliver Kiddle  <opk@zsh.org>\n\n\t* 52268: Completion/Linux/Command/_networkmanager: update to 1.42.2\n\n\t* 52266: Completion/Linux/Command/_strace: update to 2.6.5\n\n\t* 52265: Completion/Linux/Command/_findmnt,\n\tCompletion/Linux/Command/_lsblk, Completion/Unix/Command/_column:\n\tupdate completions for some util-linux tools to version 2.39.2\n\n\t* 52253: Src/Modules/pcre.c: support pcre callouts with shell\n\tevaluation of the callout string\n\n\t* 52260: Completion/Unix/Command/_sudo: handle variable assignments\n\tbefore the command in sudo completion\n\n2023-11-01  Oliver Kiddle  <opk@zsh.org>\n\n\t* 52252: Src/Modules/pcre.c: Coverity defect 1547827\n\n\t* Shohei YOSHIDA: 52179: Completion/Unix/Command/_gradle:\n\tFix gradlew completion when it isn't in PATH\n\n2023-10-29  Matthew Martin  <phy1729@gmail.com>\n\n\t* github #102: Ulysse Buonomo: Completion/Unix/Command/_todo.sh:\n\tEnsure todo.sh completion uses builtin commands\n\n2023-10-25  Bart Schaefer  <schaefer@zsh.org>\n\n\t* Daniel Shahaf: 50569 (tweaked): README, Src/Zle/zle_keymap.c:\n\tmain keymap defaults to emacs\n\n\t* Sebastian Gniazdowski: 52240: Functions/MIME/zsh-mime-handler:\n\tuse work-var $s not $suffix when setting flags\n\n\t* 52244: Src/Modules/zutil.c, Src/Zle/compcore.c,\n\tSrc/Zle/compresult.c, Src/builtin.c, Src/glob.c, Src/hist.c,\n\tSrc/input.c, Src/params.c, Src/utils.c: Coverity defects 1547831,\n\t1547826 (remove unused function), 1521551, 1500752, 1500747,\n\t1401549, 1372423, 1270645, 1255799, 1255792, 1255789, 1255787,\n\t1255782, 1255750\n\n2023-10-24  Matthew Martin  <phy1729@gmail.com>\n\n\t* github #103: Christian Heusel: Completion/Unix/Command/_zfs: fix\n\tcompletion for zpool upgrade\n\n\t* github #104: ErrrorMaxx: Src/exec.c: fix small typo\n\n2023-10-16  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 52056: Completion/Unix/Command/_sccs: _sccs: don't handle\n\tsubcommands in main namespace\n\n\t* 51490: Src/Zle/computil.c: Use time_t for lastt which stores\n\tresult of time(0)\n\n\t* 52222: Doc/Zsh/contrib.yo: Document bracketed-paste-url-magic\n\n2023-10-15  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52218: Etc/BUGS, NEWS, README: notes since 5.9 release\n\n2023-10-10  Oliver Kiddle  <opk@zsh.org>\n\n\t* 52189: Completion/Unix/Type/_umountable, Src/Zle/complete.c:\n\tignore compadd -M if -U also specified as they don't make\n\tsense together, this fixes df completion\n\n\t* 52217: Completion/BSD/Command/_freebsd-update,\n\tCompletion/BSD/Command/_ipfw, Completion/BSD/Command/_pfctl,\n\tCompletion/BSD/Command/_sockstat, Completion/Unix/Command/_cmp,\n\tCompletion/Unix/Command/_date, Completion/Unix/Command/_elfdump,\n\tCompletion/Unix/Command/_gcore, Completion/Unix/Command/_mktemp,\n\tCompletion/Unix/Command/_iostat, Completion/Unix/Command/_ldd,\n\tCompletion/Unix/Command/_ls, Completion/Unix/Command/_ifconfig,\n\tCompletion/Unix/Command/_netstat, Completion/Unix/Command/_script,\n\tCompletion/Unix/Command/_service, Completion/Unix/Command/_split,\n\tCompletion/Unix/Command/_ssh, Completion/Unix/Command/_sysctl,\n\tCompletion/Unix/Type/_diff_options:\n\tupdate completions for FreeBSD 14\n\n\t* 52216: Src/Modules/watch.c: metafy usernames to allow for\n\tthem to be UTF-8 encoded\n\n\t* 52214: Src/subst.c: allow extra byte for nul in allocation\n\n\t* unposted (cf. 52166): Functions/Misc/run-help-svk:\n\tremove obsolete helper for svk\n\n\t* Jörg Sommer: 51812: Functions/Misc/run-help-docker,\n\tFunctions/Misc/run-help-perf, Functions/Misc/run-help-podman,\n\tFunctions/Misc/run-help-ssh, Functions/Misc/run-help-svnadmin:\n\trun-help for docker, perf, podman, ssh, svnadmin\n\n2023-10-05  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52204: Src/parse.c: fix unmeta() thinko from 52193\n\n2023-10-03  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52198: Src/input.c: put back incorrectly removed zfree()\n\n2023-10-01  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52195: Src/params.c: cached_username is already metafied when\n\tinitializing LOGNAME\n\n\t* 52193: Src/init.c, Src/params.c, Src/utils.c: metafy USERNAME\n\t(mostly for Cygwin compatibilty with UTF8 encodings)\n\n\t* 52193: Src/parse.c: unmetafy file paths in zcompile\n\n2023-09-27  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 52188: Test/D04parameter.ztst: skip tests that fail if\n\tmultibyte is not available\n\n\t* 52169: Src/subst.c, Src/utils.c: a few more improvemets of (#)\n\n2023-09-23  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52180: Doc/Zsh/expn.yo: clarify array behavior of ${|var|...}\n\tand the REPLY parameter\n\n2023-09-22  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52176: Src/subst.c: metafy return from ${ ... } substitution\n\t(adapted from Jun T.: 52172)\n\n2023-09-20  Oliver Kiddle  <opk@zsh.org>\n\n\t* Jörg Sommer: 51747: Functions/Misc/run-help-ip:\n\tip accepts the reduction of link to l\n\n\t* Jörg Sommer: 51776: Functions/Misc/run-help-openssl:\n\tReduce code and use new manpages\n\n\t* Wim de With: 51857: Completion/Linux/Command/_fusermount:\n\tInclude fusermount3 in fusermount completions\n\n\t* Atte Peltomäki: 51980: Completion/Zsh/Type/_globquals,\n\tDoc/Zsh/expn.yo: Add glob qualifier grouping operator to completion\n\n\t* Jörg Sommer: 52102: Completion/Debian/Command/_apt:\n\tAdd subcommand autopurge to apt completion\n\n\t* Wesley Schwengle: 52141: Completion/Unix/Command/_git:\n\tadd trailer token completion for git commit --trailer\n\n\t* 52163: Completion/Unix/Command/_zfs: completion update for\n\tOpenZFS 2.2\n\n2023-09-16  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52156: Test/E01options.ztst: Test case for user/29160.\n\n\t* users/29160: Src/subst.c: Fix repetition of substituion modifier.\n\n\t* Christoffer Lundell: 52082: Functions/Zle/edit-command-line:\n\tEnable linewise edit-command when in visual-line mode.\n\n\t* 52155: Test/D10nofork.ztst: Tests for non-forking substitution.\n\n\t* 52154: Doc/Zsh/expn.yo, Src/lex.c, Src/subst.c:  implement\n\tand document non-forking command substitutions ${|...} and\n\t${ ... }.  Based on Sebastian Gniazdowski: 51702.\n\n\t* 52153: Src/input.c, Src/Modules/mapfile.c: $mapfile[fname]\n\tshould not trim newlines (only applies when not HAVE_MMAP)\n\n2023-09-15  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 52142: Completion/Zsh/Context/_parameter,\n\tCompletion/Zsh/Type/_parameters: Move _history_modifiers call\n\tto _parameter\n\n2023-09-13  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 52122 + 52129: Src/subst.c, Test/D04parameter.ztst: fix (#)\n\tparameter expansion flag for bad math expressions and out-of-\n\trange characters\n\n2023-09-10  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52125: Src/exec.c: getoutput() must not free() gettempname()\n\n2023-09-09  Bart Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Completion/Base/Utility/_shadow: quoting for safety\n\n2023-09-07  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 52114: Completion/Unix/Command/_nice: improve _nice (support\n\t-n option, complete only external commands)\n\n2023-09-05  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 52115: Src/Modules/param_private.c, Test/V10private.ztst: permit\n\trepeated \"private\" declarations as long as types aren't changed\n\n2023-09-04  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 52112: Completion/BSD/Command/_jexec,\n\tCompletion/Linux/Command/_chrt, Completion/Linux/Command/_cpupower,\n\tCompletion/Linux/Command/_ionice,Completion/Linux/Command/_setpriv,\n\tCompletion/Linux/Command/_sysstat, Completion/Unix/Command/_chroot,\n\tCompletion/Unix/Command/_mosh, Completion/Unix/Command/_route,\n\tCompletion/Unix/Command/_screen, Completion/Unix/Command/_script,\n\tCompletion/Unix/Command/_ssh, Completion/Unix/Command/_stdbuf,\n\tCompletion/Unix/Command/_timeout: use '_normal -p $service' to\n\tcomplete only external commands\n\n2023-09-03  Bart Schaefer  <schaefer@zsh.org>\n\n\t* users/29220: Src/Modules/param_private.c, Test/V10private.ztst:\n\tfix bug with assignment to private following explicit unset\n\n2023-08-28  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* Shohei YOSHIDA: 52098(+comment), 52099, 52100, 52105(+52106):\n\tCompletion/Darwin/Command/_open, Completion/Darwin/Command/_otool,\n\tCompletion/Darwin/Command/_sw-vers,\n\tCompletion/Darwin/Command/_system_profiler:\n\tupdate for latest macOS (with a few fixes)\n\n\t* sergio: 51858 (+52073): Completion/Unix/Command/_libvirt:\n\tvirsh's edit subcommand accepts all domains\n\n2023-08-27  Bart Schaefer  <schaefer@zsh.org>\n\n\t* Marlon Richert: 51861 (tweaked for 52028):\n\tCompletion/Base/Completer/_approximate: allow _approximate\n\tto provide corrections even when compadd is overridden\n\n\t* 52028: Completion/Base/Utility/_shadow, Doc/Zsh/compsys.yo,\n\tDoc/Zsh/contrib.yo, Functions/Misc/mkshadow: improve _shadow\n\tand _unshadow, add helper function and update documentation\n\n\t* Robert Woods: 52053: Src/utils.c: whitelist capability\n\tCAP_WAKE_ALARM in 'privasserted' function\n\n\t* Shohei YOSHIDA: 52034: Completion/Unix/Command/_sqlite:\n\tupdate for version 3.42.0\n\n2023-08-22  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Nojus Gudinavičius: users/29175: Src/Zle/zle_hist.c: don't\n\tneed to forget edits if none were made, avoiding loop over\n\tentire history.\n\n2023-08-21  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* Shohei YOSHIDA: 52059 (+52070): Completion/Unix/Command/_scons:\n\tfix for options -j/--jobs and -q/--question\n\n2023-08-16  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 29130, 29131 (Ray): Doc/Zsh/builtins.yo: document what typeset\n\t-t is for, not what it isn't for.\n\n2023-08-14  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 52037: Completion/Unix/Command/_date,\n\tCompletion/Unix/Command/_env, Completion/Unix/Command/_watch:\n\tcomplete only external commands for env and watch, with a few\n\tmore minor fixes\n\n2023-08-06  Bart Schaefer  <schaefer@zsh.org>\n\n\t* Shohei YOSHIDA: 52018: Completion/Unix/Command/_wc: latest\n\tcoreutils options\n\n\t* Shohei YOSHIDA: 52017: Completion/Unix/Command/_tr: latest\n\tcoreutils options\n\n\t* Shohei YOSHIDA: 52016: Completion/Unix/Command/_tail: latest\n\tcoreutils options\n\n\t* Shohei YOSHIDA: 52015: Completion/Unix/Command/_env: latest\n\tcoreutils options\n\n\t* Shohei YOSHIDA: 52014: Completion/Unix/Command/_date: latest\n\tcoreutils options\n\n\t* Shohei YOSHIDA: 52013: Completion/Unix/Command/_head: latest\n\tcoreutils options\n\n2023-08-01  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 52008: Src/pattern.c, Test/D02glob.ztst: Fix bug with branches\n\tin patterns followed by an exculsion, and add tests.\n\n2023-07-31  dana  <dana@dana.is>\n\n\t* github #100: HexorCatZ: Completion/Unix/Command/_qemu:\n\tadd -enable-kvm and -bios suggestion\n\n2023-07-26  Bart Schaefer  <schaefer@zsh.org>\n\n\t* unposted (cf. 51968): Doc/Zsh/builtins.yo: improve description\n\tof typeset -gn and -r\n\n\t* 51945: Doc/Zsh/builtins.yo, Doc/Zsh/expn.yo, Doc/Zsh/params.yo,\n\tSrc/builtin.c, Src/params.c, Test/K01nameref.ztst: improve named\n\treferences documentation, fixes for typeset -r and -g behavior,\n\tfix unset reference behavior including scoping crash, more tests\n\n\t* Shohei YOSHIDA: 51979: Completion/Linux/Command/_free: Update\n\tfree completion for procps-ng version 4.0.3\n\n\t* Shohei YOSHIDA: 51964: Completion/Linux/Command/_pidof: support\n\tpidof variants other than procps\n\n\t* 51969: Src/builtin.c: read -d and -s should not reset terminal\n\tstate when stdin is redirected\n\n\t* 51949 (tweak per 51950): Src/Zle/zle_main.c: correct Thingy\n\trefcount in raw_getbyte()\n\n\t* Shohei YOSHIDA: 51927: Completion/Unix/Command/_watch: Update\n\tprocps watch completion for version 4.0.3\n\n\t* unposted (cf. 51899): Doc/Zsh/compsys.yo: document _shadow\n\n2023-07-20  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 51977: Src/jobs.c, Test/E01options.ztst: Combination of\n\tPIPEFAIL and ERRRETURN / ERREXIT options failed with complex\n\tcommands at end of pipeline.\n\n2023-07-19  dana  <dana@dana.is>\n\n\t* github #99: mirsella: Completion/Darwin/Command/_trash,\n\tCompletion/Unix/Command/_trash: add completion for trash-d\n\n2023-07-10  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 51897 (+ minor tweaks): Completion/Darwin/Command/_softwareupdate:\n\tupdate _softwareupdate (based on 51895 by Shohei YOSHIDA)\n\n2023-07-09  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 51890: Src/builtin.c: fix \"whence -wa\" for multiple arguments\n\n2023-06-26  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 51889: Src/Modules/zftp.c, Src/mkbltnmlst.sh: enable loading a\n\tmodule (e.g. zftp) that depends on other modules even if zsh is\n\tbuilt with the full RELRO\n\n\t* 51884: Doc/Zsh/params.yo, Src/params.c, Src/utils.c,\n\tTest/D04parameter.ztst: if MULTIBYTE option is on and IFS contains\n\tinvalid bytes in curret locale then reset it to default\n\n2023-06-22  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 51887: Src/math.c, Src/params.c, Test/K02parameter.ztst:\n\tnamespaces recognized in math, incorrect usages rejected.\n\n\t* Marlon Richert: 51860: Completion/Base/Completer/_prefix,\n\tTest/Y01completion.ztst, Test/comptest: simplify suffix handling\n\tin _prefix to remove longstanding and less accurate hack; tests.\n\n\t* Stephane: 51813: Functions/Misc/is-at-least: differentiate empty\n\t$2 from omitted $2 to avoid wrong comparisons against ZSH_VERSION.\n\n2023-06-20  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 51877: Src/Modules/pcre.mdd, configure.ac: do not build pcre\n\tmodule if pcre2-config is not available.\n\n2023-06-19  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 51862: Doc/Makefile.in, configure.ac: support texinfo-7.0\n\n2023-06-08  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 51826: Src/hist.c: correctly handle metafied null character\n\twhen reading history file\n\n\t* Stephane: 51817: Completion/BSD/Command/_rcctl: protect ':'\n\tin _rcctl (was in 51817 but missed in commit 0577daf)\n\n2023-06-06  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Stephane: 51818: Protect another ':'.\n\n\t* Stephane: 51817: Protect some use of ':' from history modifier\n\tinterpreation.\n\n\t* 51816: Doc/Zsh/expn.yo, Src/hist.c, Src/subst.c,\n\tTest/D04parameter.ztst: add :S history modifier with pattern\n\tmatch.\n\n2023-06-06  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* Marlon Richert: 51779: Test/Y01completion.ztst: update\n\tcompletion test for 51761\n\n2023-05-25  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 51739: Src/hist.c: detect invalid history word beginning.\n\n2023-05-21  Oliver Kiddle  <opk@zsh.org>\n\n\t* 51769: Src/jobs.c, Src/utils.c: fix compilation when\n\tHAVE_GETRUSAGE is not defined\n\n\t* Marlon Richert: 51761: Completion/Zsh/Type/_parameters:\n\tUse zstyle verbose for _parameters descriptions\n\n\t* Marlon Richert: 51682: Completion/Base/Core/_main_complete,\n\tTest/Y01completion.ztst: Fix subscript completion bugs\n\tinside ~[...]\n\n\t* Marlon Richert: 51759: Completion/Zsh/Type/_command_names:\n\tShow alias values in command completions\n\n\t* Marlon Richert: 51760: Doc/Zsh/compwid.yo: r and R were listed\n\tin the wrong order.\n\n\t* Marlon Richert: 51758: Test/Y01completion.ztst, Doc/Zsh/expn.yo,\n\tCompletion/Zsh/Context/_dynamic_directory_name: Make dynamic dir\n\tcompletion easier to implement\n\n2023-05-13  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 51722: Src/Modules/parameter.c: Add safety to extracting\n\telements of $historywords.\n\n2023-05-13  Oliver Kiddle  <opk@zsh.org>\n\n\t* 51738: Doc/Zsh/mod_pcre.yo, Src/Modules/pcre.c,\n\tTest/V07pcre.ztst: support pcre's DFA matching algorithm\n\n\t* 51728: Doc/Zsh/mod_pcre.yo, Src/Modules/pcre.c,\n\tTest/V07pcre.ztst: assign pcre named capture groups to a hash\n\n\t* 51723: Src/Modules/pcre.c, Test/V07pcre.ztst, configure.ac:\n\tmigrate pcre module to pcre2\n\n\t* Felipe Contreras: 50612: Misc/vcs_info-examples: fix typo\n\n\t* github #98: Vidhan Bhatt: Completion/Darwin/Command/_shortcuts:\n\tfeat: add `shortcuts` completions\n\n2023-05-11  Bart Schaefer  <schaefer@zsh.org>\n\n\t* users/29070: Src/Zle/zle_tricky.c: clean up tokens in cmdstr\n\tbefore attempting completion (compctl only)\n\n\t* Jim <linux.tech.guy@gmail.com>: 51609: Doc/Zsh/mod_zselect.yo:\n\tfix reference to select(2)\n\n\t* Shohei YOSHIDA: 51340: Completion/Unix/Command/_rake: update\n\tfor version 13\n\n\t* Shohei YOSHIDA: 51331: Completion/Unix/Command/_pydoc: update\n\tfor version 3.11\n\n2023-05-10  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 51593: Functions/Misc/run-help: improve search for original\n\tcommand name after skipping prefix assignments\n\n2023-05-08  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 51692: Test/C02cond.ztst: do not skip tests for [[ -r file ]]\n\tand [[ -N file ]] on Cygwin\n\n2023-04-22  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 51670: Src/text.c: prevent possible underflow in gettext()\n\n2023-04-18  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 51663: Completion/Unix/Command/_ssh: fix a typo in 51582\n\n2023-04-17  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 51652 (plus typo correction): Src/exec.c, Test/C03traps.ztst:\n\tfix running of TRAPEXIT explicitly.\n\n2023-04-11  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 51639: Doc/Zsh/params.yo, Src/init.c, configure.ac: add new\n\tparameter ZSH_EXEPATH that is set to the full pathname of the\n\texecutable file of the current zsh\n\n2023-04-09  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 51631: Doc/Zsh/params.yo, Src/init.c: initialize $_ by copying\n\tit from environment\n\n\t* 51632: Src/exec.c: unmetafy $_ when exporting it to child\n\n2023-04-03  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 51597: Src/Zle/zle_utils.c: fix 'vared -c var' when var is unset\n\n2023-03-30  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 51604: Src/jobs.c, configure.ac: %M in TIMEFMT should report\n\tin kilobytes\n\n2023-03-29  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 51608: Src/exec.c, Test/A01grammar.ztst: shouldn't be\n\texecuting commands after \"continue &&\" or \"! continue ||\".\n\n2023-03-28  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 51602: Src/jobs.c, Src/signames2.awk: Handle SIGIOT as an\n\talias to SIGABRT if they are the same signal number\n\n2023-03-27  Oliver Kiddle  <opk@zsh.org>\n\n\t* Shohei YOSHIDA: 51589: Completion/Unix/Command/_nm:\n\tUpdate nm options\n\n\t* 51603: Completion/Unix/Command/_git: complete dates and times\n\tin the form that git accepts\n\n2023-03-22  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 51586: Src/builtin.c: When printf \"%s\" encounters a byte\n\tthat's not part of a valid multibyte character it should handle\n\tit a single byte at a time.\n\n2023-03-16  Oliver Kiddle  <opk@zsh.org>\n\n\t* 51583: Completion/Unix/Command/_git: update completion of\n\tgit attributes\n\n\t* 51582: Completion/Unix/Command/_ssh: openssh 9.3 completion update\n\n\t* 51581: Completion/BSD/Command/_fw_update,\n\tCompletion/BSD/Command/_rcctl, Completion/Unix/Command/_grep,\n\tCompletion/Unix/Command/_netstat, Completion/Unix/Command/_ps:\n\tupdate completions to cover changes in OpenBSD 7.2\n\n2023-03-14  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 51573: Src/builtin.c: additional \"typset -p -m\" fix for namespaces\n\n2023-03-13  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 51572: Functions/Misc/run-help: fix error when running standalone\n\n\t* Sven Joachim: 51563: Completion/Debian/Command/_sbuild: unmatched \"\n\n2023-03-11  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 51558: Doc/Zsh/grammar.yo: Clarify \"for\" loops + named refs.\n\n\t* 51557: Doc/Zsh/mod_ksh93.yo, Src/Modules/ksh93.c: Clarify\n\tavailability of ksh-mode parameters, improve vi-mode detection.\n\n2023-03-11  Oliver Kiddle  <opk@zsh.org>\n\n\t* 51539: Completion/Unix/Command/_git: don't complete diff\n\toptions to git blame\n\n2023-03-07  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 51534: Util/printdefines: update for recent changes\n\n2023-03-06  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 51512: Doc/Zsh/mod_ksh93.yo: More about unsupported features\n\n\t* 51511: Doc/Zsh/expn.yo, Doc/Zsh/params.yo: Document namespaces\n\n\t* 51510: Src/builtin.c, Src/params.c, Src/utils.c, Src/zsh.h,\n\tTest/K02parameter.ztst: parameters with a leading namespace are\n\tskipped in output of \"set\" and \"typeset\", add tests for ksh-like\n\tparameter handling and fix a bug thus revealed\n\n\t* 51509 (+ fix typo): Src/params.c, Src/subst.c, Src/zsh.h: Add\n\t${(!)name} for the referred-to parameter of a named reference,\n\tand extend ${!name} in ksh emulation for same\n\n\t* 51524: Src/Modules/ksh93.mdd: dependency on zsh/zle for linkage\n\n2023-03-05  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 51486: Etc/zsh-development-guide: clarify module section\n\n\t* 51485: Doc/Makefile.in, Doc/Zsh/mod_ksh93.yo, Src/utils.c,\n\tSrc/Modules/ksh93.c, Src/Modules/ksh93.mdd: module for several\n\tksh93 features, mostly enabled only in ksh emulation.\n\n\t* 51484: Src/builtins.yo Src/params.c: Extend named reference\n\thandling for special parameters, improve doc.\n\n\t* 51483: Src/Zle/compcore.c, Src/Zle/zle_tricky.c, Src/lex.c,\n\tSrc/params.c, Src/subst.c, Src/utils.c, Src/zsh.h, Src/ztype.h:\n\tEnable assignment and expansion of parameters with ksh-like\n\tnamespace prefixes.\n\n\t* unposted: Src/Modules/param_private.c: coverity memory leak\n\n2023-02-28  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 51491: Src/Zle/zle_utils.c: Check should use zlemetacs instead\n\tof zlecs\n\n2023-02-26  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 51464: Util/printdefines: utility to interpret zsh.h constants\n\n\t* unposted: Doc/Zsh/restricted.yo: fix typo\n\n\t* 51460: Src/module.c: avoid crash on bad parameter autofeature\n\n2023-02-24  Oliver Kiddle  <opk@zsh.org>\n\n\t* Shohei YOSHIDA: 51473: Completion/Unix/Command/_cal:\n\tUpdate cal/ncal completion\n\n\t* Sebastian Stark: 51470 (tweaked, c.f. 51476):\n\tCompletion/Zsh/Command/_cd: Separate cdpath elements in\n\tpath-directories completion\n\n\t* 51474: Completion/Unix/Command/_ansible: make -e and --vault-id\n\toptions repeatable and update for new options to ansible 2.13.2\n\n2023-02-21  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 51466: Src/params.c: fix access to autoloaded parameter.\n\n2023-02-20  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 51431: Src/builtin.c: \"typeset -p\" shouldn't change parameter flags\n\n2023-02-19  Oliver Kiddle  <opk@zsh.org>\n\n\t* 51456: Completion/Unix/Command/_git: complete only modified\n\tfiles with git add -u\n\n\t* 51455, 51461: Completion/Unix/Type/_ldap_attributes\n\tCompletion/BSD/Command/_ldap, Completion/Unix/Command/_openldap,\n\tCompletion/Unix/Type/_ldap_filters: new completion for the OpenLDAP\n\tclient tools including a helper function for LDAP search filters\n\n2023-02-17  Oliver Kiddle  <opk@zsh.org>\n\n\t* 51447: Src/Zle/zle_keymap.c: silence compiler maybe-uninitialized\n\twarning by combining a couple of variables\n\n\t* Øystein Walle: 51391: Completion/Unix/Command/_git:\n\tcomplete remote branch names respecting --delete for git push\n\n2023-02-14  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 51437: Src/params.c, Test/K01nameref.ztst: Fix incorrectly-passed\n\ttest case, masked by unrelated bug.  Improve warnnestedvar message.\n\n2023-02-14  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 51425: Src/exec.c, Test/E01OPTIONS: $(<...) shouldn't try to\n\topen a file with NO_EXEC.\n\n2023-02-13  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 51430: Src/Modules/parameter.c, Src/builtin.c, Src/params.c,\n\tTest/K01nameref.ztst: Fix and test for regression of assignment\n\twhen using typeset command, fix output of typeset +m and\n\t$parameters[ref], prevent segfault in typeset.\n\n2023-02-12  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 51417: Src/params.c, Test/K01nameref.ztst: Check subscripts\n\tin named reference values more rigorously.\n\n\t* 51403: Doc/Zsh/builtins.yo, Doc/Zsh/expn.yo, Doc/Zsh/func.yo,\n\tDoc/Zsh/grammar.yo, Doc/Zsh/params.yo, Test/K01nameref.ztst:\n\tTests and documentation for 51402, clean up some other tests.\n\n\t* 51402: Src/builtin.c, Src/loop.c, Src/params.c, Src/zsh.h:\n\tAdd ksh/bash features (unset -n, for ref), readonly refs,\n\tbetter error checking and messages, code injection safety,\n\tallow references to $! $? $$ $- $0 $_\n\n\t* 51375: Doc/Zsh/builtins.yo, Doc/Zsh/expn.yo, Doc/Zsh/params.yo,\n\tDoc/Zsh/mod_parameter.yo: Clarify, fix typos, add indexing.\n\n\t* 51374: Src/Modules/parameter.c, Src/params.c, Test/README,\n\tTest/K01nameref.ztst: Expose named references in $parameters,\n\tfix substitution error.\n\n\t* 51362: Doc/Zsh/builtins.yo, Doc/Zsh/expn.yo, Doc/Zsh/params.yo,\n\tDoc/Zsh/mod_parameter.yo: Begin documentation for named references.\n\n\t* 51361: Test/K01nameref.ztst, Test/V10private.ztst: Tests\n\tfor 51360.\n\n\t* 51360: Src/Modules/param_private.c, Src/Modules/parameter.c,\n\tSrc/builtin.c, Src/params.c, Src/subst.c, Src/zsh.h: Initial\n\timplementation of named references.\n\n\t* 51404: Src/jobs.c: Nullify filelist after deleting (fix segfault)\n\n2023-02-09  Oliver Kiddle  <opk@zsh.org>\n\n\t* 51320, 51383: Src/Zle/zle_main.c, Src/Zle/complist.c,\n\tSrc/Zle/zle_tricky.c, Test/D01prompt.ztst,\n\tTest/X04zlehighlight.ztst: fixes to prevent later reappearance\n\tof old attributes\n\n2023-02-06  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 51350: Src/subst.c, Test/D04parameter.ztst: the combination\n\t${(S)...//#%...} needs to match as far as possible.\n\n2023-02-02  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 51354: Doc/Zsh/params.yo: Fix markup in man page version\n\n2023-02-02  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 51306: Doc/Zsh/expn.yo, Src/subst.c, Test/D04parameter.ztst:\n\terror message in ${unset?...} should be expanded.\n\n\t* 51307: Src/input.c, Src/parse.c, Test/A02alias.ztst: error\n\ton attempt to expand alias in function definition name didn't\n\tfind the original alias and printed an extra error.\n\n2023-01-31  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 51342: Etc/zsh-development-guide: update PARAMDEF description\n\n\t* 51337: Doc/Zsh/expn.yo, Doc/Zsh/mod_parameter.yo: parameter\n\tattributes cross-reference typeset equivalents (or lack thereof)\n\n2023-01-27  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted (cribbed from users/28784 by Roman):\n\tTest/D04parameter.ztst: Add XFail tests for substituting a\n\tsingle-quoting backslash.\n\n2023-01-27  Shohei YOSHIDA  <syohex@gmail.com>\n\n\t* 51330: Completion/Unix/Command/_python: Update python3\n\tcompletion for version 3.11\n\n2023-01-24  Shohei YOSHIDA  <syohex@gmail.com>\n\n\t* 51326: Completion/Unix/Command/_gcc: Improve -fsanitize\n\toption completion\n\n2023-01-22  Shohei YOSHIDA  <syohex@gmail.com>\n\n\t* 51322 (+ minor tweak): Completion/Unix/Command/_make: Update gnu\n\tmake completion for version 4.4\n\n2023-01-21  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 51313: Completion/Unix/Command/_git: fix \"git rerere forget\"\n\n\t* 51310: Src/Zle/zle_main.c: zle -F handlers preserve LASTWIDGET\n\n2023-01-16  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 51278: Src/params.c, Test/D06subscript.ztst: result of (i)\n\tsubscript flag with zero-length string was inconsistent with\n\tother cases.\n\n2023-01-11  Oliver Kiddle  <opk@zsh.org>\n\n\t* 51297: Test/X04zlehighlight.ztst: update expected test results\n\tto match more optimised escape sequences with recent changes\n\n\t* Jörg Sommer: 51256: Completion/Unix/Command/_git:\n\tAdd --refetch to completions of git-fetch\n\n\t* unposted: NEWS, Src/zsh.h, Completion/Zsh/Type/_ps1234: mention\n\tattributes changes, fix renumbering mistake and allow completion\n\tto offer prompt escapes for PROMPT_EOL_MARK\n\n\t* 51295: Src/Zle/zle_utils.c: where the end of a region coincides\n\twith the end of PREDISPLAY, don't extend it to include new text\n\n2023-01-10  Oliver Kiddle  <opk@zsh.org>\n\n\t* 51292: Src/Zle/zle_utils.c: fix dynamic updates of\n\tregion_highlight to account for PREDISPLAY\n\n\t* 51291: Doc/Zsh/zle.yo, Src/Zle/zle_refresh.c, Src/prompt.c:\n\tsupport for highlighting ellipses in the line editor\n\n\t* 51290: Src/Zle/zle_refresh.c: fix display of control\n\tcharacters with SINGLE_LINE_ZLE set\n\n\t* 51289: Src/Zle/zle_refresh.c, Src/prompt.c: don't disable\n\tnon-colour attributes in prompts for SINGLE_LINE_ZLE and remove\n\tsuperfluous extra escapes to disable attributes\n\n\t* 51281: Src/Zle/zle_main.c, Src/Zle/zle_refresh.c, Src/zsh.h:\n\tkeep track of attributes left on at the end of left and right\n\tprompts and reapply them explicitly as appropriate\n\n\t* 51280: Doc/Zsh/zle.yo, Src/Zle/zle_refresh.c, Src/init.c,\n\tSrc/prompt.c, Src/zsh.h: add support for italic and faint\n\tfonts in the line editor\n\n\t* 51258, 51272: Src/Modules/watch.c, Src/Zle/complist.c,\n\tSrc/Zle/zle.h, Src/Zle/zle_main.c, Src/Zle/zle_refresh.c,\n\tSrc/Zle/zle_tricky.c, Src/Zle/zle_utils.c, Src/builtin.c,\n\tSrc/init.c, Src/input.c, Src/loop.c, Src/prompt.c,\n\tSrc/subst.c, Src/utils.c, Src/zsh.h, Test/D01prompt.ztst,\n\tTest/X04zlehighlight.ztst: refactor handling of terminal\n\tattributes, removing OFF flags in zattr\n\n\t* Nathan Houghton: 51276: Completion/Unix/Type/_diff_options:\n\tFix diff completion for non GNU / FreeBSD platforms\n\n2023-01-08  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Src/Zle/zle_refresh.c: In a comment, replace a C\n\tvariables glob pattern with its matches, for greppability.\n\n2023-01-06  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted (cf. users/28616):\n\tCompletion/Unix/Command/_subversion: _svnadmin: Add comment\n\tnoting a case that's not completed correctly.\n\n2022-12-31  Oliver Kiddle  <opk@zsh.org>\n\n\t* Max Coplan: 51263: Doc/Zsh/files.yo: fix typo, an -> a\n\n\t* Shohei YOSHIDA: 51255: Completion/Unix/Command/_ruby:\n\tUpdate erb completion for version 4.0.2\n\n\t* Shohei YOSHIDA: 51254: Completion/Unix/Command/_ruby:\n\tAdd irb completion for version 1.6.2\n\n\t* Shohei YOSHIDA: 51253: Completion/Unix/Command/_ruby:\n\tUpdate ruby completion for version 3.2.0\n\n\t* Shohei YOSHIDA: 51233: Completion/Unix/Command/_gcc:\n\tUpdate sanitizer list to GCC 12\n\n2022-12-30  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* Daniel: 51249: Completion/Unix/Command/_tar: copy\n\t--force-local option as needed for file names.\n\n2022-12-16  Oliver Kiddle  <opk@zsh.org>\n\n\t* 51214: Doc/Zsh/builtins.yo, Src/builtin.c, Test/B04read.ztst,\n\tTest/D07multibyte.ztst: with read -d and a delimiter that can't be\n\tdecoded into a character terminate input at the raw byte value\n\n\t* Jun T.: 51207: Src/builtin.c, Test/B04read.ztst:\n\tfix for read -d when the delimiter is a byte >= 0x80\n\n\t* 51212: Etc/zsh-development-guide, Src/Modules/curses.c,\n\tSrc/Modules/stat.c, Src/Modules/zftp.c, Src/Modules/zpty.c,\n\tSrc/Modules/zutil.c, Src/Zle/compcore.c, Src/Zle/complete.c,\n\tSrc/Zle/complist.c, Src/Zle/zle.h, Src/Zle/zle_keymap.c,\n\tSrc/Zle/zle_main.c, Src/Zle/zle_thingy.c, Src/Zle/zle_utils.c,\n\tSrc/builtin.c, Src/exec.c, Src/glob.c, Src/hist.c, Src/init.c,\n\tSrc/input.c, Src/lex.c, Src/math.c, Src/module.c, Src/params.c,\n\tSrc/parse.c, Src/pattern.c, Src/prompt.c, Src/sort.c, Src/subst.c,\n\tSrc/utils.c, Src/zsh.h, Src/ztype.h, configure.ac: remove STOUC()\n\tmacro which served as a workaround for ancient compilers where\n\tcasts to unsigned char were broken\n\n\t* 51215: Src/Zle/zle_keymap.c, Test/X03zlebindkey.ztst,\n\tTest/X02zlevi.ztst: consume whole CSI sequences from the input\n\teven where they aren't explicitly bound\n\n2022-12-15  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Src/zsh.h: Follow-up to the last commit: Fix a typo\n\tin a comment.\n\n\t* unposted: Src/zsh.h: lextok: Add an explanatory comment with\n\ta cross-reference.\n\n2022-12-13  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 51210: Src/exec.c: Clear errflag before calling EXIT trap,\n\totherwise the trap is skipped for special-case errors in builtins\n\n\t* Philippe Altherr: 51198: Doc/Zsh/options.yo: Clarify and expand\n\tERR_EXIT and ERR_RETURN documentation to include updated behavior\n\n\t* Philippe Altherr: 51193: NEWS, README: Discuss ERR_EXIT changes\n\n2022-12-12  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 51134: Src/exec.c, Test/A01grammar.ztst: ! return doesn't\n\taffect return status, only the (now irrelevant) local status\n\twithin the returning function.\n\n\t* 51134: Doc/Zsh/options.yo: document interactions between\n\tERR_EXIT and ERR_RETURN and interactive shells.\n\n2022-12-09  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 51161: Src/exec.c: correct errno after closing xtrace FD\n\n\t* Shohei YOSHIDA: 51111: Completion/Unix/Command/_global:\n\tupdate completion for global to version 6.6.8\n\n\t* 51047: Completion/Unix/Type/_canonical_paths: fix quoting\n\tof completion matches when _canonical_paths -N option is used\n\n2022-12-09  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 51144, 51146:\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_git: vcs_info git:\n\tstg: Extract patch descriptions\n\n2022-12-08  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 51142: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info git: Check the get-unapplied style as documented\n\n2022-12-08  Peter Grayson  <pete@jpgrayson.net>\n\n\t* 51138: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tUpdated StGit patch detection in vcs_info\n\n2022-12-06  Bart Schaefer  <schaefer@zsh.org>\n\n\t* Shohei YOSHIDA: 51108: Completion/Unix/Command/_nkf: single\n\tletter forms of Shift-JIS / EUC-JP options were reversed\n\n\t* Atte Peltomäki: 51088: Functions/Misc/colors: typo in comment\n\n2022-12-03  Bart Schaefer  <schaefer@zsh.org>\n\n\t* Philippe Altherr: 51094: Src/exec.c, Src/loop.c: consistent\n\tuse of bit-manipulation for noerrexit flag value changes\n\n\t* Philippe Altherr: 51098: Src/exec.c, Src/loop.c, Src/zsh.h:\n\tremove unreachable NOERREXIT_UNTIL_EXEC code and effects\n\n\t* Philippe Altherr: 51076: Src/exec.c, Test/C03traps.ztst: fix\n\tERR_EXIT when used with \"eval\" or \"source\"; documentary comments\n\n\t* Philippe Altherr: 51071: Src/exec.c, Test/C03traps.ztst: fix\n\tERR_RETURN when a function using && / || is called within another\n\tstatement using && / ||\n\n\t* Philippe Altherr: 51001: Src/exec.c, Src/loop.c,\n\tTest/C03traps.ztst: adjust handling of ERR_EXIT to more closely\n\talign with POSIX and with other shells; add corresponding tests\n\n2022-12-02  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 51080: Src/glob.c: allow multibyte characters in glob qualifier\n\t(u:uname:)\n\n\t* 51079: Src/params.c, Test/D06subscript.ztst: metafy sep in the\n\tarray subscript flag (s:sep:) so that sep can contain \\0 etc.\n\n2022-11-23  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted (cf. 51016): Test/C01arith.ztst: Add a test case\n\tfor underscore-followed-by-digits in math context.\n\n2022-11-17  Oliver Kiddle  <opk@zsh.org>\n\n\t* unposted (c.f. Norikatsu Shigemura: github #96):\n\tCompletion/Unix/Command/_cut: add missing local declaration\n\n\t* github #87: Matt Koscica: Completion/Unix/Command/_tmux:\n\tupdate options tmux 3.4\n\n\t* github #95: Wu Zhenyu: Completion/Unix/Command/_mutt:\n\tAdd completions for neomutt\n\n\t* unposted (c.f. Denis Bitouzé: users/28405):\n\tCompletion/Unix/Command/_tex: handle also lualatex\n\n\t* 50934: Doc/Zsh/zle.yo, Src/Zle/zle.h, Src/Zle/zle_utils.c,\n\tSrc/Zle/zle_vi.c: use OSC 52 escape sequence when copying to\n\t\"* or \"+ vi buffers\n\n2022-11-09  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 50928: Test/C03traps.ztst: scoping of ERR_RETURN in test\n\t(most of this patch was not retained)\n\n\t* 50922: Src/exec.c, Src/jobs.c: fix additional cases of signals\n\tfor current shell jobs on the right of a pipeline.  Backs out\n\tpart of 50874.\n\n2022-11-08  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* users/28338: Src/lex.c, Test/D08cmdsubst.ztst: edge case of an\n\tedge case in command expansion of alias.\n\n2022-11-06  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 50874: Src/jobs.c: fix handling of tty signals for jobs in\n\tthe current shell when waiting for the right side of a pipeline.\n\n2022-11-02  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 50851: Doc/Zsh/options.yo, Src/exec.c, Src/options.c: restore\n\tstate (such as typtab) when returning from a function with\n\tlocaloptions (but do not take care of EMACS/VI options).\n\n2022-10-31  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 50855: Doc/Zsh/builtins.yo, Doc/Zsh/params.yo: Clarify how\n\tcommands are hashed, and searched-for by \"whence\".\n\n2022-10-31  Peter Grayson  <pete@jpgrayson.net>\n\n\t* 50844: Completion/Unix/Command/_stgit: Remove _stgit completion\n\tscript\n\n2022-10-25  Axel Beckert  <abe@deuxchevaux.org.org>\n\n\t* 50840: Doc/Zsh/grammar.yo: Correct NO_MATCH to NOMATCH.\n\n2022-10-23  Bart Schaefer  <schaefer@zsh.org>\n\n\t* users/28243: Doc/Zsh/builtins.yo: update \"typeset +\" doc\n\n2022-10-22  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 50714: Completion/Unix/Command/_git (_git-diff): also complete\n\tin the 2nd argument position anything that could be in the 1st.\n\n2022-10-17  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 50786: Functions/Misc/add-zle-hook-widget: make match\n\tetc. local when used in styles.\n\n2022-10-17  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* Wesley Schwengle: 50736: Src/Zle/compmatch.c: silence\n\tuse-after-free waring (gcc-12.2)\n\n2022-09-29  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 50671: Util/ztst-syntax.vim: enable spell check in *.ztst\n\n2022-09-28  Eric Cook  <llua@gmx.com>\n\t* Bart Schaefer: 50399: Completion/Base/Widget/_complete_debug\n\tProperly local scope PS4 change\n\n\t* 50695: Completion/Unix/Command/_mysql_utils add --protocol\n\toption\n\n2022-09-27  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 50668: Src/utils.c, Test/D09brace.ztst: treat 8bit characters\n\tin charcter range correctly when multibyte is unset\n\n2022-09-26  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 50662: Test/ztst.zsh: unset LC_* for all the tests\n\n\t* 50658 + test: Src/Modules/pcre.c, Test/V07pcre.ztst: Enable to\n\tswitch between C/UTF-8 locales in PCRE\n\n2022-09-25  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 50648: Functions/Misc/zcalc: Julian Prein: Use ZCALC_HISTFILE\n\twhere defined for zcalc history.\n\n2022-09-21  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* Nicholas Vinson: 50641: aczsh.m4, configure.ac: use 'int main()'\n\tin test C-codes in configure\n\n2022-09-15  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 50629: Test/D07multibyte.ztst, Test/E01options.ztst,\n\tTest/V07pcre.ztst, Test/X02zlevi.ztst, Test/X03zlebindkey.ztst,\n\tTest/Y01completion.ztst, Test/ztst.zsh: do not use egrep in tests\n\n2022-08-28  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Completion/Unix/Command/_imagemagick: Add *.svg\n\tand *.webp files.\n\n2022-08-05  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* Felipe Contreras: 50435+50436 (+50444):\n\tCompletion/Unix/Command/_make: do not actually build anything.\n\tAlso include some performance improvements.\n\n2022-07-24  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 50421: Completion/Zsh/Context/_redirect: add missing context\n\tas the 1st argument to _dispatch\n\n\t* 50418: Src/zsh_system.h, configure.ac: use setenv(3)/getenv(3)\n\ton newer macOS\n\n2022-07-16  Bart Schaefer  <schaefer@zsh.org>\n\n\t* users/27852: Completion/Unix/Command/_python: Make a local copy\n\tof $_compskip to avoid propagating outward any changes by _normal\n\n2022-06-21  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 50379 (tweaked per 50380): Src/jobs.c: fix off-by-one\n\tside-effect of workers/49906 that broke $(jobs -l)\n\n\t* 50368: Src/Modules/db_gdbm.c: adjust bitflags so local copies of\n\tvariables cannot mess with database file contents\n\n2022-06-16  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 50372: Etc/FAQ.yo: remove redundant references from days of\n\tUsenet posting.\n\n2022-06-14  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 50365: Etc/FAQ.yo: fix indent in FAQ (text version)\n\n2022-06-11  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 50355: Doc/Zsh/mod_system.yo, Src/Modules/system.c: make return\n\tstatus values of sysopen consistent with other sys* functions,\n\tmake ERRNO values consistent for all, and update documentation\n\n2022-06-11  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 50356: Etc/FAQ.yo: work around a yodl bug (mishandling of \\'e)\n\n2022-06-09  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 50363: Src/Modules/param_private.c: avoid use of heap memory\n\tthat depends on parameter scoping\n\n2022-06-09  Matthew Martin <phy1729@gmail.com>\n\n\t* 50359: Src/builtin.c: fix bad sticky-emulation in \"functions -c\"\n\n2022-06-09  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 50351: Src/builtin.c: \"functions -c\" can set signal traps\n\n2022-06-09  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 50342: Src/jobs.c, Test/A05execution.ztst: fix test added by\n\t50306\n\n2022-06-08  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 50341: Src/parse.c: disallow here-doc markers containing newline\n\n\t* 50335: Functions/Misc/zargs: simplify \"wait\" usage, fix signal\n\thandling for functions used as the command.\n\n2022-06-07  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 50339: Doc/Zsh/options.yo, Src/text.c, Test/C04funcdef.ztst:\n\tMake multiple function output safer with NO_MULTI_FUNC_DEF and\n\tdocument exceptions to errors raised by MULTI_FUNC_DEF.\n\n2022-06-04  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 50323: Completion/Base/Utility/_shadow (new file),\n\tCompletion/Base/Widget/_complete_help, Functions/Zle/keeper:\n\tcreate helper for shadowing builtins or existing functions and\n\tuse it when redefining compadd et al.\n\n2022-06-03  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 50306: Src/jobs.c, Src/signals.c, Test/A05execution.ztst: fix\n\twait builtin for child that has been stopped and continued.\n\n2022-06-02  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 50325: Src/Zle/compmatch.c, Src/Zle/computil.c: revert 38150 and\n\tfix in calling function cfp_matcher_range() instead\n\n2022-05-30  Bart Schaefer  <schaefer@zsh.org>\n\n\t* Marlon Richert: 50307 (cf. PWS 50205):\n\tCompletion/Zsh/Type/_suffix_alias_files: suffix aliases should not\n\tcollide\twith directory names when completing\n\n2022-05-26  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 50287: configure.ac: Turn on use of getcwd by default.  Leave\n\tthe ability to turn it off per OS configuration.\n\n\t* 50286: Functions/Misc/zed: avoid error if nounset is in effect.\n\n2022-05-25  Norbert Lange  <nolange79@gmail.com>\n\n\t* github #94: Completion/Linux/Command/_modutils: Support .zst\n\tkernel modules with modutils.\n\n\t* github #93: Completion/Linux/Command/_btrfs,\n\tCompletion/Linux/Command/_fusermount,\n\tCompletion/Unix/Type/_umountable: Replace /etc/mtab with\n\t/proc/self/mounts for Linux.\n\n2022-05-22  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 50278: Completion/Unix/Command/_man: use `man -w` in preference\n\tto `manpath` for portability; fix caching and precedence of -M\n\n2022-05-20  Arvid Norlander  <VorpalBlade@users.noreply.github.com>\n\n\t* github #91: Completion/Unix/Command/_find: _find\n\t(gnu/freebsd/darwin): Add some flags and syntaxes\n\n2022-05-14  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 50229: NEWS: Typo\n\n\t* Jan Brieg: 50212 (and discussion): Functions/Misc/colors: Add\n\t\"bright\" color variants\n\n2022-05-15  Axel Beckert  <abe@deuxchevaux.org>\n\n\t* 50220: Doc/Zsh/{builtins,options}.yo: Fix typos found by\n\tDebian's Lintian tool.\n\n2022-05-14  dana  <dana@dana.is>\n\n\t* unposted: Config/version.mk: Post-release version bump\n\n\t* unposted: Config/version.mk: Update for 5.9\n\n2022-05-11  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 50192: Src/openssh_bsd_setres_id.c: use set{u,g}id() instead of\n\tsetre{u,g}id() for dropping privilege on NetBSD\n\n2022-05-08  dana  <dana@dana.is>\n\n\t* 50176 (with xpufx, tweaked): Completion/Linux/Command/_htop:\n\tImprove htop completion\n\n2022-05-07  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 50184: Completion/Base/Utility/_values: fix inclusion of -S\n\tseparator in -r options passed to compadd through _describe\n\n\t* Marlon Richert: 49954: Completion/Unix/Command/_gradle: improve\n\thandling of task names, subprojects, completion tags, and caching\n\n\t* unposted: Doc/Zsh/builtins.yo: cross-reference \"typeset -f\" for\n\t\"functions -[Tt]\"\n\n2022-05-02  Bart Schaefer  <schaefer@zsh.org>\n\n\t* unposted (cf. Jun-ichi 50164): Test/E01options.ztst: add sleep\n\tafter nullexec test to allow background process to flush writes\n\t(observed only on MacOS Monterey 12).\n\n\t* 50162: Test/D07multibyte.ztst: Tweak 50150 test to check proper\n\tmetafication of array elements and to ignore collation variances\n\n2022-05-01  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 50160: Test/D03procsubst.ztst, Test/E01options.ztst: Regression\n\ttests for 50126, 50136, and 50149\n\n\t* 50159: Test/V14system.ztst: Tests for sysread\n\n\t* 50157 (Daniel Shahaf): Test/D07multibyte.ztst: Test for 50150\n\n2022-05-01  dana  <dana@dana.is>\n\n\t* unposted: Config/version.mk: Update for 5.8.1.3-test (5.9)\n\n\t* unposted: Etc/creating-a-release.txt: Mention #zsh topic\n\n2022-04-30  Bart Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Etc/BUGS: remove debian #924736, fixed since 5.8 by\n\tworkers/44142; correct misguided edit from earlier commit\n\n\t* unposted: Doc/Zsh/expn.yo, NEWS: Details about ${(*)...}\n\n\t* 50150: Src/Modules/stat.c: Filenames need unmetafy for printing\n\n\t* 50149: Etc/BUGS, Src/builtin.c, Src/jobs.c: Remove all =(...)\n\tfiles at shell exit\n\n2022-04-29  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 50136: Etc/BUGS, Src/exec.c: Fix =(nosuchcommand) race/deadlock\n\tfirst reported in workers/42609\n\n\t* 50134: Src/jobs.c: Tweak process group handling (workers/43409)\n\tto avoid creating \"unkillable\" pipelines that ignore signals\n\n\t* unposted: Etc/BUGS: Details about STTY; consistency nit\n\n2022-04-28  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 50138: Doc/Zsh/params.yo:  Note ERRNO must be set before use.\n\n\t* 50133 (Bart, PWS, Jun-ichi): Src/input.c, configure.ac: when\n\tlseek(2) is available, use it to check for and rewind read-ahead\n\tfor more efficient line-buffered input.\n\n\t* 50126: Etc/BUGS, Src/exec.c: Fix multios in current-shell \"exec\"\n\n\t* 50101: Src/Modules/system.c: sysread -o with param matches doc\n\n2022-04-26  dana  <dana@dana.is>\n\n\t* unposted: Completion/Unix/Command/_getopt: Fix util-linux\n\tvariant detection\n\n\t* unposted: NEWS: Adjust dedication wording\n\n2022-04-26  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 50089: Test/X03zlebindkey.ztst: unset LC_* for multibyte tests\n\n2022-04-12  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 50049: Src/exec.c, Src/prompt.c: care with signed character\n\tindices on the few remaining systems such as Cygwin that aren't\n\totherwise protected.\n\n2022-04-20  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 50081: Src/pattern.c, Src/params.c: reset global mbstate_t\n\tvariables when LC_CTYPE changes\n\n\t* 50080: Src/hist.c: add missing STOUC() in casemodify()\n\n2022-04-19  Bart Schaefer  <schaefer@zsh.org>\n\n\t* unposted (cf. users/27656 (Tomasz Pala), users/27660):\n\tCompletion/Unix/Type/_path_files: fix $SUFFIX when GLOB_COMPLETE\n\n2022-04-14  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 50069: Test/C03traps.ztst: fix test description\n\n\t* 50068: Etc/BUGS, Src/builtin.c, Test/C03traps.ztst: 'exit' in\n\ttrap causes calling function to return (fixes workers/44007)\n\n2022-04-14  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 50052: Test/V14system.ztst: do nothing when skipping the test\n\n\t* 50046: Test/ztst.zsh: export LANG to child zsh\n\n2022-04-12  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 50013: Test/P01privileged.ztst, Test/ztst.zsh: skip %test if\n\ta chunk in %prep returns nonzero\n\n\t* 49996 (Peter) + 50012: Test/README, Test/ztst.zsh: add\n\tZTST_continue to continue tests after a failure\n\n\t* 50017: Completion/Unix/Type/_time_zone: allow lowercase to\n\tmatch with uppercase\n\n2022-04-11  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 50043: Test/D02glob.ztst, Test/E03posix.ztst: for root user,\n\tskip glob tests\tthat rely on limited privilege and fix EUID test\n\n2022-04-11  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 50042: Src/Zle/compcore.c: Another fix for 49915\n\n2022-04-10  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: NEWS: Improve flow between the paragraph and\n\tits links.\n\n2022-04-09  dana  <dana@dana.is>\n\n\t* unposted: Config/version.mk, Etc/FAQ.yo: Update for\n\t5.8.1.2-test (5.9)\n\n\t* 49958: NEWS: Dedicate zsh 5.9 to Sven Guckes\n\n\t* 49958, (tweaked per 50019): NEWS, README: Add missing\n\tchanges, update for zsh 5.9\n\n2022-04-06  Matthew Martin  <phy1729@gmail.com>\n\n\t* 49960: Doc/Zsh/compsys.yo: Sort lists in zshcompsys.\n\n2022-04-05  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 49994: Src/glob.c: Single-byte equivalence of users/22601 and\n\tworkers/40891 for matching against zero-length strings\n\n2022-04-05  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 49989:  Src/Zle/compresult.c, Src/utils.c, Src/zsh.h: Align\n\t\"nice\" printing for single byte compilation with multibyte.\n\n2022-04-04  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 49992: Src/utils.c: further unify single- and multi-byte\n\timplementations of nicechar() to fix ${(V)...} output format\n\n\t* 49991: Src/glob.c, Src/utils.c: single-byte brace expansion\n\thandles $'\\0' and control character output aligns with multibyte\n\n\t* 49990: Src/hist.c: in single-byte, like multibyte, casemodify()\n\tavoids metafying characters that it otherwise did not touch\n\n2022-04-03  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 49955 (with thanks to Madhu <enometh@meer.net>): Src/glob.c:\n\tfix bad free in incremental-pattern-search matching (observed\n\tonly when compiled without MULTIBYTE support)\n\n2022-04-03  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 49959: Completion/Zsh/Context/_brace_parameter:\n\t_brace_parameter: add (-)\n\n\t* 49957: Src/Zle/compcore.c: Brown paper bag for 49915\n\n\t* 49961: Completion/Unix/Command/_adb: _adb: handle exec-out\n\tlike shell\n\n\t* 49962: Completion/Unix/Command/_adb: _adb: Add dumpsys and\n\tcmd completion\n\n\t* 49963: Completion/Unix/Command/_adb: _adb: Fix device serial\n\tcompletion for hostname:port syntax\n\n\t* 49964: Completion/Unix/Command/_adb: _adb: Complete services\n\tfor start/stop\n\n\t* 49965: Completion/Unix/Command/_adb: _adb: use $CURRENT instead\n\tof $#words\n\n\t* 49966: Completion/Unix/Command/_adb: _adb: Parse device spec\n\tcorrectly\n\n\t* 49967: Completion/Unix/Command/_adb: _adb: Handle dumpsys\n\tSurfaceFlinger arguments\n\n\t* 49968: Completion/Unix/Command/_adb: _adb: also replace model\n\tnames, since device names aren't sent on wifi listing\n\n2022-04-02  dana  <dana@dana.is>\n\n\t* unposted (see 48073): Completion/Zsh/Command/_fc: Complete\n\tnew -s option\n\n\t* unposted (see security/107): Etc/creating-a-release.txt:\n\tNormalise white space, clarify some steps\n\n2022-04-01  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 49943: Completion/Unix/Type/_time_zone: offer only filenames\n\tstarting with an uppercase letter\n\n2022-03-31  Matthew Martin  <phy1729@gmail.com>\n\n\t* unposted: Completion/BSD/Command/_rcctl: Fix typo.\n\n\t* github #88: elig0n: Doc/Zsh/func.yo: Fix typo.\n\n\t* 49933: Doc/Zsh/mod_system.yo, Src/Modules/system.c: Add\n\tnonblock to sysopen.\n\n\t* 49932: Completion/Zsh/Context/_brace_parameter: Update\n\t_brace_parameter # description.\n\n\t* 49931: Completion/BSD/Command/_bsd_pkg: Update _bsd_pkg.\n\n\t* 49907: Etc/completion-style-guide: Mention _numbers in\n\tcompletion guide.\n\n2022-03-31  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 27639: Doc/Zsh/expn.yo: clarify that ${(#)...} deals with\n\tcharacter codes.\n\n2022-03-30  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 49906 (Bart), 49911: Doc/Zsh/builtins.yo,\n\tDoc/Zsh/mod_parameter.yo, Src/exec.c, Src/jobs.c,\n\tTest/W03jobparameters.ztst: Fix querying jobs in subshell.\n\tDon't query invalid job at end, if background job started in\n\tsubshell query jobs in subshell instead of main shell.\n\n2022-03-30  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 49893: Src/Zle/comp.h, Src/Zle/compcore.c: Fix comments for\n\tUNIQCON/ALL\n\n\t* 49915: Src/Zle/comp.h, Src/Zle/compcore.c: Efficient dedup\n\tfor unsorted completions\n\n\t* 49870: Src/glob.c: Fix NULL reference in match code more\n\n\t* 49813: Doc/Zsh/redirect.yo, Src/exec.c: <<<: Document newline\n\tbehavior and fix optimization\n\n\t* 49820: Src/Zle/compresult.c: Fix a crash when completing with\n\tcombination of -Q and braces\n\n2022-03-30  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 49910: Test/D07multibyte.ztst, Test/E03posix.ztst: move\n\tmultibyte-related incompatibility with POSIX from E03 to D07\n\n\t* 49908: Test/ztst.zsh: reset LC_CTYPE to C during tests.\n\n2022-03-29  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 49918: NEWS, README: Update for 49917 and 49911.\n\n\t* 49917: Completion/compinit, Doc/Zsh/compsys.yo: change sense\n\tof \"Ignore insecure ...\" answer to ignore the files rather than\n\tignore the problem.  Use \"autoload -r\" for autoload paths.\n\n2022-03-29  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 49853 + 49882/49883: Src/subst.c, Test/D04parameter.ztst: make\n\t\"${array[*]:offset:length}\" compatible with ksh/bash\n\n2022-03-28  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 49897: Functions/Misc/zargs: Eliminate reliance on $jobstates\n\tparameter, fix -P exit status check.\n\n2022-03-28  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 49890: Src/Zle/zle_utils.c: best not to look at unallocated\n\tmemory in saved command line.\n\n2022-03-24  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 49875: Completion/Unix/Command/_texinfo: info -f completes\n\tboth info pages by search and (if there's a slash present) local\n\tfiles.  Not all versions of info seem to need the slash, however.\n\n\t* 49845: Doc/Zsh/options.yo: clarify that options can be local\n\tin function scope.\n\n2022-03-18  Matthew Martin  <phy1729@gmail.com>\n\n\t* 49852: Completion/BSD/Command/_pfctl,\n\tCompletion/BSD/Type/_routing_domains,\n\tCompletion/BSD/Type/_routing_tables,\n\tCompletion/Unix/Command/_arp, Completion/Unix/Command/_netstat,\n\tCompletion/Unix/Command/_pgrep, Completion/Unix/Command/_ping,\n\tCompletion/Unix/Command/_route, Completion/Unix/Command/_top:\n\tAdd _routing_domains and _routing_tables types.\n\n\t* 49851: Completion/BSD/Type/_login_classes: Complete\n\tlogin.conf.d classes.\n\n2022-03-13  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 49844: Doc/Zsh/expn.yo, Doc/Zsh/zle.yo: Fix node reference\n\terrors from 49446 and 49448.\n\n2022-03-08  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 49773: Functions/Prompts/promptinit: promptinit: only exclude\n\tcurrent theme from preview if no arguments are given\n\n2022-03-06  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 49802 (+ 49804:Daniel): Test/W03jobparameters.ztst: pass\n\tMODULE_PATH to the zsh started by zpty\n\n2022-03-03  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 49792: Src/input.c, Test/A01grammar.ztst: Use line buffering\n\tfor non-interactive input.\n\n\t* 49787: Test/W02jobs.ztst, Test/W03jobparameters.ztst: test for\n\tjobs fix in 49783.\n\n2022-03-01  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 49783: Src/jobs.c, Src/Modules/parameter.c: Consistently use\n\told job table in parameter module.\n\n\t* users/27536: Doc/Zsh/builtins.yo: Clarify interaction of\n\thistory matching and numeric indices.\n\n2022-02-23  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 49766: Completion/Unix/Command/_less: add quotes to -\" and -#\n\n\t* 49765: Completion/Unix/Command/_less: add option --color\n\tas synonym for -D\n\n2022-02-22  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Doc/Zsh/contrib.yo, Src/Modules/parameter.c,\n\tSrc/string.c, Src/zsh.h: Fix some typos and markup.\n\n2022-02-22  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 49672: Doc/Zsh/expn.yo: document \"tied\" output in parameter\n\t(t) output.\n\n2022-02-22  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 49769: Doc/Zsh/mod_stat.yo: Mention how to show nanosecond\n\tprecision\n\n2022-02-20  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 49728: Functions/VCS_Info/Backends/VCS_INFO_get_data_hg:\n\tvcs_info hg mq: Don't include applied patches in the unapplied\n\tpatches\n\n\t* 49727 (+ comment): Doc/Zsh/contrib.yo,\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_git,\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_hg,\n\tFunctions/VCS_Info/VCS_INFO_quilt,\n\tFunctions/VCS_Info/VCS_INFO_set-patch-format: vcs_info\n\tquilt: Pass the patches dir path to the gen-applied-string,\n\tgen-unapplied-string, and set-patch-format hooks\n\n\t* unposted: Functions/VCS_Info/Backends/VCS_INFO_get_data_hg:\n\tvcs_info hg mg (with get-unapplied set): Stop leaking a variable\n\tto global scope\n\n2022-02-16  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 49757 (sourceforge #1): samcarter: Completion/Unix/Command/_tex:\n\toffer *.dtx as TeX input files\n\n2022-02-15  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 49756 + 49758 (Daniel): Etc/FAQ.yo, Util/zyodl.vim: replace\n\tyodl macro LPAR() in FAQ.yo by SUBST(_LPAR_)\n\n2022-02-13  Axel Beckert  <abe@deuxchevaux.org>\n\n\t* unposted: README: Fix underline length of \"Incompatibilities\n\tbetween 5.5.1 and 5.6.2\" headline. (Cosmetic fix)\n\n2022-02-12  dana  <dana@dana.is>\n\n\t* unposted: Config/version.mk: Post-release version bump\n\n\t* unposted: Config/version.mk, Etc/FAQ.yo, README: Update\n\tfor 5.8.1\n\n\t* Marc Cornellà: security/82 (tweaked):\n\tFunctions/VCS_Info/VCS_INFO_formats: Fix typo in\n\thook_com[base-name_orig] assignment\n\n\t* CVE-2021-45444: NEWS, README: Document preceding two changes\n\n\t* Marc Cornellà: security/89:\n\tEtc/CVE-2021-45444-VCS_Info-workaround.patch: Add patch which\n\tcan optionally be used to work around recursive PROMPT_SUBST\n\tissue in VCS_Info\n\n\t* Oliver Kiddle: security/41: Src/prompt.c: Prevent recursive\n\tPROMPT_SUBST\n\n2022-02-04  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 49730: Completion/Unix/Command/_csplit,\n\tCompletion/Unix/Command/_pr, Completion/Unix/Command/_ptx,\n\tCompletion/Unix/Command/_truncate: New completers\n\n2022-02-02  Matthew Martin  <phy1729@gmail.com>\n\n\t* 49731: Completion/BSD/Command/_sysclean,\n\tCompletion/BSD/Command/_sysmerge,\n\tCompletion/BSD/Command/_syspatch,\n\tCompletion/BSD/Command/_sysupgrade: Add completers\n\n2022-01-30  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 49694 + doc: Doc/Zsh/builtins.yo, Doc/Zsh/params.yo, Src/exec.c:\n\tAllow using empty STTY= to freeze tty for a single command\n\n2022-01-29  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Functions/VCS_Info/test-repo-git-rebase-apply,\n\tFunctions/VCS_Info/test-repo-git-rebase-merge: vcs_info git:\n\tTeach the rebase-apply test case generator to also generate\n\trebase-merge test cases\n\n\t* unposted: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info git: Add a missing guard against redefining a function.\n\n\t* unposted: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info git: Deconfuse $EDITOR\n\n\t* unposted: Functions/VCS_Info/VCS_INFO_patch2subject,\n\tFunctions/VCS_Info/VCS_INFO_set-branch-format,\n\tFunctions/VCS_Info/VCS_INFO_set-patch-format: vcs_info: Add\n\tVim modelines\n\n\t* 49723: Functions/VCS_Info/VCS_INFO_quilt: vcs_info quilt:\n\tUse quilt-patch-dir and ${QUILT_PATCHES} even when get-unapplied\n\thasn't been set\n\n\t* 49722: Functions/VCS_Info/VCS_INFO_quilt: vcs_info quilt:\n\tRefactor for readability. No functional change.\n\n\t* 49715: Completion/Unix/Command/_subversion: add: Complete\n\ttarget arguments to this subcommand\n\n\t* 49714: Completion/Unix/Command/_subversion: resolve: Complete\n\tconflicted files created by merges, too\n\n\t* 49713: Completion/Unix/Command/_subversion: commit, diff,\n\trevert: Update completions for svn 1.7 and newer\n\n\t* 49712: Completion/Unix/Command/_subversion: svn rm: Complete\n\tall svn-controlled files, not only missing/deleted files\n\n\t* 49711: Completion/Unix/Command/_subversion: _svn_status:\n\tDon't offer unversioned files\n\n2022-01-27  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Doc/Zsh/contrib.yo: vcs_info quilt docs: Fix\n\tmisspelled style name\n\n\t* unposted: Functions/VCS_Info/VCS_INFO_quilt: vcs_info quilt:\n\tRemove a no-op variable assignment\n\n2022-01-25  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 49709: Functions/VCS_Info/Backends/VCS_INFO_get_data_hg:\n\tvcs_info hg: Keep $HGPLAIN set for hooks if it had been set\n\toutside vcs_info\n\n2022-01-23  Andreas Schneider  <asn@cryptomilk.org>\n\n\t* gitlab !17: Completion/Unix/Command/_quilt: Add missing\n\toptions for quilt setup command\n\n2022-01-01  Bart Schaefer  <schaefer@zsh.org>\n\n\t* Matt Alexander: 49667: Functions/Misc/colors: include \"gray\"\n\n2021-12-29  Oliver Kiddle  <opk@zsh.org>\n\n\t* Aaron Schrab: 49664: Completion/Unix/Command/_git:\n\tUse associative array for third-party completion\n\n\t* 49668: Completion/Unix/Command/_zfs,\n\tCompletion/Unix/Type/_zfs_dataset: update zfs completion\n\n2021-12-24  Bart Schaefer  <schaefer@zsh.org>\n\n\t* m0viefreak: 38150: Src/Zle/compmatch.c: fix off-by-one error\n\tin matcher spec parsing\n\n2021-12-21  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 49658: Src/glob.c: Remove erroneous use of NULL pointer for\n\treplacement pattern match.\n\n2021-12-21  Oliver Kiddle  <opk@zsh.org>\n\n\t* 49655 based on 34928 (Daniel Hahler):\n\tCompletion/Unix/Command/_pip: new pip completion\n\n2021-12-16  Oliver Kiddle  <opk@zsh.org>\n\n\t* 49653: Src/Zle/computil.c: fix array indexing issue introduced\n\twith 49518 due to using decimal rather than hex 20\n\n\t* 49648 based on github #80 (Vincent Bernat):\n\tCompletion/Unix/Command/_find, Completion/Zsh/Type/_globquals:\n\tinvert before/since for date glob qualifiers completion\n\n2021-12-14  Oliver Kiddle  <opk@zsh.org>\n\n\t* 49518: Src/Zle/computil.c, Etc/BUGS, Test/Y03arguments.ztst:\n\tfix exclusions for mixed - and + stacked options\n\n2021-12-13  Oliver Kiddle  <opk@zsh.org>\n\n\t* 49646: Doc/Zsh/mod_watch.yo, Src/Modules/watch.c, Src/prompt.c:\n\tallow colors in WATCHFMT with %F/%K\n\n\t* 49645: Completion/Unix/Type/_path_commands: when completing for\n\tthe path_dirs option, add a / suffix and follow symlinks\n\n\t* 49643: Completion/Zsh/Type/_command_names: facilitate use\n\tof the fake style by always calling _description with the\n\texecutables tag\n\n\t* 49634, reported by Claes Nästén: configure.ac: revert 28989,\n\tdefining _POSIX_C_SOURCE caused issues on Solaris 10 but\n\tdoesn't seem to be needed for musl anymore\n\n2021-12-07  Oliver Kiddle  <opk@zsh.org>\n\n\t* 49633: Completion/Unix/Command/_git: update options for git 2.34\n\n2021-12-02  Oliver Kiddle  <opk@zsh.org>\n\n\t* 49630: Completion/bashcompinit: allow zsh to quote matches but\n\tinclude a special case for space suffixes\n\n\t* 49631: Completion/Unix/Command/_logger: new logger completion\n\n\t* 49629: Completion/Linux/Command/_perf: new Linux perf completion\n\n2021-12-01  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 49628: Test/D01prompt.ztst: Add an xfail test for RPS1/RPROMPT\n\tequivalence.\n\n\t* 49624: Test/E03posix.ztst: Expect the test 'All identifiers\n\tare variable references in POSIX arithmetic' to pass, as it\n\thas been passing since 49611.\n\n\t* unposted: Doc/Zsh/zle.yo, Doc/ztexi.yo: Add whitespace and\n\tcomments.  No functional change.\n\n\t* 49621: Doc/Zsh/manual.yo, Doc/Zsh/zle.yo: Fix the info Doc\n\tbuild, broken in 49448.\n\n2021-11-30  Oliver Kiddle  <opk@zsh.org>\n\n\t* 49612: Src/module.c: avoid startup error with clashing non-local\n\tmodule parameter name\n\n\t* 49611 based on 49590 (Martijn Dekker): Src/math.c: disable Inf\n\tand NaN in math expressions for sh emulation\n\n2021-11-28  Oliver Kiddle  <opk@zsh.org>\n\n\t* 49606: Src/hashnameddir.c, Src/utils.c, configure.ac: remove old\n\tNIS-specific code for retrieving user data\n\n\t* 49602: Src/params.c: only set LOGCHECK from the watch module\n\n\t* 49601: Src/hist.c, Test/W01history.ztst: don't create\n\tambiguous history file entries for lines ending with a backslash\n\n2021-11-26  Paul Seyfert  <Paul.Seyfert@sevensense.ch>\n\n\t* github #83: Completion/Unix/Command/_git: _git-push,\n\t_git-send-pack: Make --push-option repeatable.\n\n2021-11-26  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 49448: Doc/Zsh/contrib.yo, Doc/Zsh/zle.yo: docs: Fix pointers\n\tto the `Widgets', `User-defined Widgets', and `Standard Widgets'\n\tsections.\n\n\t* 49447: Doc/Zsh/compsys.yo: docs: _wanted: Clarify the example\n\tand point to another one.\n\n\t* 49446: Doc/Zsh/expn.yo: docs: Add texinode()s, so the next\n\tcommit can link directly to a subsection.\n\n\t* 49445: Doc/Zsh/calsys.yo, Doc/Zsh/contrib.yo, Doc/Zsh/expn.yo,\n\tDoc/Zsh/intro.yo, Doc/Zsh/jobs.yo, Doc/Zsh/mod_newuser.yo,\n\tDoc/Zsh/options.yo, Doc/Zsh/params.yo, Doc/Zsh/roadmap.yo,\n\tDoc/Zsh/zle.yo: docs: Clean up some subsection references.\n\n\t* 49449: Completion/Unix/Command/_stat: _zstat: Don't offer -o\n\tafter -s, since -s is ignored when both -s and -o are specified.\n\n\t* 47599 (tweaked): New test for '{foo,bar}' in command position\n\n2021-11-24  Oliver Kiddle  <opk@zsh.org>\n\n\t* 49597: Completion/Base/Core/_description, Doc/Zsh/compsys.yo,\n\tCompletion/Base/Utility/_numbers, Completion/BSD/Command/_ipfw,\n\tCompletion/Linux/Command/_btrfs, Completion/Unix/Command/_dd,\n\tCompletion/Unix/Command/_git, Completion/Unix/Command/_head,\n\tCompletion/Unix/Command/_killall, Completion/Unix/Command/_pv,\n\tCompletion/Unix/Command/_rclone, Completion/Unix/Command/_rsync,\n\tCompletion/Unix/Command/_stdbuf, Completion/Unix/Command/_tail,\n\tCompletion/Unix/Command/_timeout, Completion/Unix/Command/_zfs,\n\tCompletion/X/Command/_xset: add a helper for completing numbers\n\twith unit suffixes and separate out defaults, ranges and units\n\tin completion descriptions\n\n2021-11-22  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 49586: Src/hist.c: fix :a and :A modifiers (with PWD=\"/\") on\n\tCygwin\n\n2021-11-19  Oliver Kiddle  <opk@zsh.org>\n\n\t* 49594: Completion/Unix/Command/_chmod: adapt to changes in 49499\n\tto ensure file modes starting with dash aren't taken to be flags\n\n\t* 49584: Completion/Unix/Command/_gem: allow for build options\n\tin gem install completion\n\n\t* Arseny Maslennikov: 49575: Doc/Zsh/compsys.yo:\n\tclarify _alternative's action syntax\n\n2021-11-15  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 49563: Src/Modules/watch.c: fix build problem of watch module\n\ton Cygwin\n\n2021-11-12  Oliver Kiddle  <opk@zsh.org>\n\n\t* github #82: Dimitris Apostolou: Completion/BSD/Command/_kdump,\n\tCompletion/Redhat/Command/_dnf, Completion/BSD/Command/_ktrace,\n\tCompletion/Linux/Command/_modutils, Test/A01grammar.ztst,\n\tCompletion/Linux/Command/_sysstat, Functions/Chpwd/cdr,\n\tCompletion/Unix/Command/_ansible, Completion/Unix/Command/_gcc,\n\tCompletion/Mandriva/Command/_urpmi, Etc/NEWS-4.3,\n\tCompletion/Debian/Command/_aptitude, Etc/FAQ.yo,\n\tFunctions/Newuser/zsh-newuser-install, NEWS,\n\tFunctions/Misc/regexp-replace, Src/Zle/compmatch.c,\n\tSrc/exec.c, Src/math.c, Test/B12limit.ztst: fix typos\n\n\t* Marlon: 49572: Completion/Base/Completer/_expand,\n\tTest/Y01completion.ztst: Let _expand preserve array form w/out\n\tzstyle glob\n\n\t* unposted: Completion/Unix/Command/_ansible: fix case statement\n\tfall-through for ansible-galaxy role completion\n\n\t* 49566: Doc/Zsh/compsys.yo: document the _default function\n\n\t* 49564: Completion/Unix/Type/_files, Doc/Zsh/compsys.yo: always\n\tuse descriptions included in the file-patterns style and allow\n\tthe recursive-files style to also work in those cases\n\n\t* 49562: Doc/Zsh/compsys.yo: remove old documentation for\n\tother-files tag that was removed in 36165\n\n\t* 49561: Src/Modules/zutil.c, Doc/Zsh/mod_zutil.yo,\n\tCompletion/Base/Core/_description, Completion/Base/Core/_message,\n\tTest/V13zformat.ztst: Add zformat -F option, similar to -f but\n\tternary expressions check for existence instead of doing math\n\tevaluation. Make use of it with the format style.\n\n2021-11-07  Oliver Kiddle  <opk@zsh.org>\n\n\t* 49544: Src/Modules/watch.c: only tie watch/WATCH if both come\n\tfrom the module\n\n2021-11-02  Oliver Kiddle  <opk@zsh.org>\n\n\t* 49534, 49539: Doc/Makefile.in, Doc/Zsh/builtins.yo,\n\tDoc/Zsh/compat.yo, Doc/Zsh/mod_watch.yo, Doc/Zsh/params.yo,\n\tSrc/Modules/watch.mdd, Src/builtin.c, Src/init.c, Src/params.c,\n\tSrc/utils.c, Src/Modules/watch.c, Src/zsh.mdd: separate watch/log\n\tfunctionality out into a module\n\n\t* 49537: aczsh.m4, configure.ac: fix finding utmpx file on FreeBSD\n\n2021-11-01  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 49535: Src/Zle/compcore.c: fix completion of parameter names\n\tfor ${<TAB> and ${(a)<TAB>\n\n2021-10-31  Bart Schaefer  <schaefer@zsh.org>\n\n\t* users/27302: Completion/Unix/Type/_remote_files: respect setting\n\tof AUTO_REMOVE_SLASH option\n\n2021-10-30  Oliver Kiddle  <opk@zsh.org>\n\n\t* 49533: Src/utils.c: add null check for preprompt functions list\n\tthat could occur following an error when loading a module\n\n\t* 49528: Src/Zle/comp.h, Src/Zle/compcore.c, Src/Zle/complete.c,\n\tCompletion/X/Command/_xinput, Completion/Zsh/Command/_compadd,\n\tDoc/Zsh/compwid.yo: allow multiple -D options to compadd\n\n\t* unposted (c.f. Bart: 49531): Test/Y02compmatch.ztst: fix test\n\n2021-10-27  Matthew Martin  <phy1729@gmail.com>\n\n\t* 49529: Completion/BSD/Command/_rcctl: Add rogue and\n\tdescriptions to _rcctl ls.\n\n2021-10-26  Oliver Kiddle  <opk@zsh.org>\n\n\t* Peter Palfrader: 49431 (tweaked, c.f. Bart: 49434):\n\tCompletion/Unix/Type/_ssh_hosts: Faster ~/.ssh/config processing\n\n\t* Marlon: 49521: Doc/Zsh/compwid.yo, Test/Y02compmatch.ztst:\n\tDefine correct behavior of || completion matchers\n\n\t* 49519: Completion/Base/Utility/_arguments,\n\tCompletion/Darwin/Command/_qtplay, Completion/Unix/Command/_less,\n\tCompletion/Unix/Command/_nm, Completion/Unix/Command/_php,\n\tCompletion/Unix/Command/_strings, Completion/Unix/Command/_zip,\n\tCompletion/X/Command/_gnome-gv: quote completed options as needed\n\tand remove the now superfluous quotes from option specifications\n\n\t* 49516: Src/Zle/compmatch.c: bail out early from matching\n\tcontrol if command line content is too short for the coanchor\n\n2021-10-24  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 49520: Etc/completion-style-guide: document $_args_cache_cmd\n\n\t* 49493: Completion/Base/Utility/_arguments: fix handling of\n\toptional argument of long option in help text\n\n2021-10-23  Oliver Kiddle  <opk@zsh.org>\n\n\t* 49499 based on 49496 by Jun T.: Src/Zle/computil.c,\n\tTest/Y03arguments.ztst: fixes to option -A of _arguments\n\n\t* 49500: Completion/Linux/Command/_lsns: new completion\n\n2021-10-16  dana  <dana@dana.is>\n\n\t* github #79 (tweaked): Xavier Hsinyuan:\n\tCompletion/Unix/Command/_ssh: update options in apple's version\n\tof ssh-add\n\n2021-10-13  Matthew Martin  <phy1729@gmail.com>\n\n\t* 49441: Completion/Unix/Command/_timeout: Add OpenBSD.\n\n2021-10-11  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 49464: Completion/Linux/Command/_basenc: new completion\n\n2021-10-05  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 49433: Src/parse.c: Assuming EPROG references are bounded by\n\tfunction depth is incorrect as we have efficient function copy.\n\n2021-10-04  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 49456: Doc/Zsh/mod_private.yo, Doc/Zsh/params.yo,\n\tSrc/Modules/param_private.c, Src/params.c, Test/V10private.ztst:\n\tclean up detection of private params in nested scopes, update doc\n\n2021-09-28  Oliver Kiddle  <opk@zsh.org>\n\n\t* ivan tkachenko: 49440: Doc/Zsh/expn.yo: Make double-flag\n\tparameter expansion syntax more discoverable in docs\n\n\t* ivan tkachenko: 49435: Doc/Zsh/expn.yo: Remove trailing whitespace\n\n\t* Alex Xu: 49444: Completion/Unix/Type/_tar_archive:\n\tlibarchive tar can actually extract much more formats\n\n\t* Marlon Richert: 49423: Completion/Unix/Command/_gradle:\n\tAdd support for multi-project builds\n\n\t* 49454: Completion/compdump: open dump file once only instead\n\tof reopening it for appends\n\n\t* 49450: Src/Zle/compcore.c: don't display explanation with\n\tcompadd -x if any of -D, -A or -O are also used\n\n2021-09-26  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Doc/Zsh/contrib.yo, Doc/Zsh/mod_curses.yo,\n\tDoc/Zsh/mod_zselect.yo, Test/A05execution.ztst,\n\tTest/C04funcdef.ztst: Fix typos\n\n2021-09-22  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 49422: Src/Modules/parameter.c, Src/hashnameddir.c, Src/options.c,\n\tSrc/params.c, Src/utils.c: improve support of --disable-dynamic-nss\n\n2021-09-09  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 49353: Src/exe.c, Test/A01grammar.ztst: In sourced file,\n\talways parse comments normally, ignoring INTERACTIVE_COMMENTS.\n\n2021-09-08  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 49391: Doc/Zsh/zle.yo: document default bracketed-paste bindings\n\n\t* 49389: Completion/Zsh/Command/_typeset: leading variables in\n\tautoload file completion\n\n\t* 49387: Src/Zle/zle_misc.c: suffix highlight with \"compadd -R\"\n\n\t* 49386: Test/Z03run-help.ztst: handle separate source/build trees\n\n2021-09-08  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* unposted: Src/Modules/db_gdbm.c, Src/Modules/files.c,\n\tSrc/Modules/nearcolor.c, Src/Zle/complete.c, Src/builtin.c:\n\tadd/remove UNUSED() for some funtion parameters\n\n\t* unposted: Src/input.c: add 'static' to shinsavestack\n\n\t* 49377: Src/Zle/zle_keymap.c, Test/X03zlebindkey.ztst: fix\n\tsegfault by 'bindkey -d' with reordered keymapnamtab\n\n2021-09-06  Bart Schaefer  <schaefer@zsh.org>\n\n\t* Stephane Chazelas: 45180: Doc/Zsh/contrib.yo,\n\tFunctions/Example/zpgrep, Functions/Misc/regexp-replace: clarify\n\tdoc for POSIX EREs, fix an issue with PCRE when the replacement\n\twas empty or generated more than one element\n\n\t* zeurkous: 49154: Doc/Zsh/exec.yo: clarify status on exec failure\n\n\t* Marlon Richert: 49378: Src/parse.c: skip check for collision\n\tof aliases and functions when NO_EXEC\n\n\t* Marlon Richert: 49292: Src/Zle/complist.c: turn off colors\n\tbefore clearing to end of line\n\n\t* 49282: set $0 correctly when calling functions from hooks\n\n\t* 49266: fix segfault on metacharacters in long job texts\n\n\t* Marlon Richert: 49218: Functions/Misc/run-help,\n\tFunctions/Misc/run-help-btrfs, Functions/Misc/run-help-git,\n\tFunctions/Misc/run-help-ip, Functions/Misc/run-help-p4,\n\tFunctions/Misc/run-help-svk, Functions/Misc/run-help-svn:\n\trun-help filters cmd_args before calling run-help-<command>\n\n\t* unposted (cf. 49202 and 49217): Src/Zle/zle_hist.c: insertlastword\n\tignores blank/missing history entries when repeating\n\n\t* 49196: Src/Modules/db_gdbm.c: gdbm keys not present in the\n\tdatabase appear unset in tied hashes\n\n\t* Marlon Richert: 48969: fix for \"zle -N\" completion\n\n\t* 48888: Doc/Zsh/mod_system.yo, Doc/Zsh/params.yo, Test/E03posix.ztst:\n\timprove doc for $$ and $PPID, add fail test for PPID readonly-ness\n\n\t* 48832: Completion/Unix/Command/_curl: try _gnu_generic first\n\n2021-09-04  Oliver Kiddle  <opk@zsh.org>\n\n\t* Shohei YOSHIDA: 49343: Completion/Unix/Command/_md5sum:\n\tFix file name completion of GNU digest utilities\n\n\t* 49345: Completion/Unix/Command/_git: fix git file completion\n\tfor paths starting with ../\n\n2021-08-29  Oliver Kiddle  <opk@zsh.org>\n\n\t* 49327: Completion/Unix/Command/_git: complete for new git\n\tmaintenance, for-each-repo, sparse-checkout and bugreport commands\n\n\t* 49319: Completion/...: completion options update\n\n\t* 49317: Completion/Unix/Command/_transmission,\n\tCompletion/Unix/Command/_gcore, Completion/Unix/Command/_pandoc,\n\tCompletion/Unix/Command/_luarocks: cleanup inappropriate use\n\tof {...} specs with _arguments or _alternative\n\n\t* 49316: Completion/Unix/Command/_transmission,\n\tCompletion/Unix/Command/_bittorrent, Completion/Unix/Command/_go,\n\tCompletion/Unix/Command/_pandoc, Completion/X/Command/_pdftk:\n\tadd (-.) glob qualifier to globs where only files are applicable\n\n\t* 49315: Completion/Unix/Command/_transmission,\n\tCompletion/Debian/Command/_dak, Completion/Linux/Command/_tpb,\n\tCompletion/Mandriva/Command/_urpmi, Completion/Unix/Command/_cpio,\n\tCompletion/Unix/Command/_dropbox, Completion/X/Command/_urxvt,\n\tCompletion/Unix/Command/_growisofs,\n\tCompletion/Unix/Command/_perforce,\n\tCompletion/Unix/Command/_mysql_utils:\n\tlist units in brackets at the end of group descriptions\n\n2021-08-28  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* Peter A. Castro: users/26982 (subset as most of this already\n\tpresent): Src/openssh_bsd_setres_id.c: use standard header\n\tincludes.\n\n2021-08-27  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 49290: Src/init.c, Src/input.c: Replace stdio for buffered\n\tshell input to avoid memory management interacting with signal\n\thandlers.\n\n2021-08-27  Oliver Kiddle  <opk@zsh.org>\n\n\t* Marlon: 49272: Completion/Base/Utility/_call_program:\n\tSet $COLUMNS in _call_program to ensure cached command\n\toutput is sufficiently wide\n\n\t* unposted (based on Marlon: 49273):\n\tCompletion/Zsh/Command/_typeset: add -x to local completion\n\n\t* 49309: Completion/Linux/Command/_strace: update the\n\tstrace completion through strace 5.13\n\n\t* 49306: Completion/Linux/Command/_losetup: fix file\n\tcompletion for the second parameter to losetup\n\n\t* Štěpán Němec: 49234: Completion/Unix/Command/_python:\n\tadd missing options in python completion\n\n2021-08-26  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 49307 with documentation updated: Src/exec,\n\tDoc/Zsh/grammar.yo, Doc/Zsh/options.yo: With POSIX_TRAPS,\n\tignored signals stay that way in subshell.\n\n2021-08-24  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 49297 with quoting updated: Src/Modules/files.c: check\n\twhich files is in error when ENOENT on link etc.\n\n2021-08-24  dana  <dana@dana.is>\n\n\t* github #78: DCsunset: Completion/Unix/Command/_pandoc: Fix\n\tcompletions in _pandoc\n\n2021-08-16  Oliver Kiddle  <opk@zsh.org>\n\n\t* 49268: Completion/Unix/Command/_texinfo: use an empty string search\n\tto find matches for info --index-search= completion\n\n\t* 49160: Completion/Unix/Command/_xmlsoft: fix quoting for\n\txmllint --pretty completion\n\n2021-08-14  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* users/26734: Doc/Zsh/builtins.yo: docs: read: Notate the\n\tparameter name argument as optional.\n\n2021-08-10  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 49269: Src/parse.c, Test/C02cond.ztst: \"[ ! -o ]\" should\n\tdetect \"-o\" as a non-empty string and return status 1.  Update\n\ttest to reflect this.\n\n2021-07-30  dana  <dana@dana.is>\n\n\t* github #77: Stavros Ntentos: Completion/X/Command/_sublimetext:\n\tImprove subl completions for Sublime Text v4\n\n2021-07-30  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 49211: Completion/Zsh/Command/_typeset: correctly set return value\n\n2021-07-23  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* Erik Paulson: 49029: Src/signals.c: Remove additional copies\n\tof signals sent by zsh with MONITOR enabled.\n\n\t* 49182: Src/hist.c, Src/lex.c: Interactive word correction\n\tdoesn't work inside command substitution, so don't try to do it.\n\n2021-07-19  Eric Cook  <llua@gmx.com>\n\n\t* 49147: Completion/Linux/Command/_modutils: fix the completion\n\tlinux kernel modules\n\n2021-07-19  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 49166: Src/subst.c, Test/D04parameter.ztst: fix coredump in\n\t${name:offset:length} with ill-formatted length\n\n2021-07-10  Oliver Kiddle  <opk@zsh.org>\n\n\t* 49158: Completion/Debian/Command/_dscverify,\n\tCompletion/Solaris/Command/_dhcpinfo,\n\tCompletion/Solaris/Command/_inetadm,\n\tCompletion/Solaris/Command/_prstat,\n\tCompletion/Solaris/Command/_svcadm,\n\tCompletion/Solaris/Command/_svcprop,\n\tCompletion/Solaris/Command/_zlogin,\n\tCompletion/Unix/Command/_pkginfo, Completion/Unix/Command/_pkgrm:\n\tremove superfluous function definitions\n\n\t* 49157: Completion/Linux/Command/_valgrind,\n\tCompletion/Unix/Command/_baz, Completion/Unix/Command/_opustools,\n\tCompletion/Unix/Command/_tla: fix uses of literal % characters in\n\tcompletion descriptions\n\n\t* 49156: Completion/Cygwin/Command/_cygserver,\n\tCompletion/Debian/Command/_git-buildpackage,\n\tCompletion/Linux/Command/_alsa-utils, Completion/Unix/Command/_adb,\n\tCompletion/Linux/Command/_ipset, Completion/Unix/Command/_django,\n\tCompletion/Solaris/Command/_dtrace, Completion/Unix/Command/_ant,\n\tCompletion/Solaris/Command/_prstat, Completion/Unix/Command/_gcc,\n\tCompletion/Unix/Command/_dtruss, Completion/Unix/Command/_gnupod,\n\tCompletion/Unix/Command/_initctl, Completion/Unix/Command/_pandoc,\n\tCompletion/Unix/Command/_mysqldiff, Completion/Unix/Command/_pbm,\n\tCompletion/Unix/Command/_perforce, Completion/Unix/Command/_qemu,\n\tCompletion/Unix/Command/_ruby, Completion/Unix/Command/_tidy,\n\tCompletion/Unix/Command/_w3m, Completion/X/Command/_vnc,\n\tCompletion/X/Command/_xdvi: make wider use of the convention of\n\tsquare brackets for defaults\n\n2021-07-08  Oliver Kiddle  <opk@zsh.org>\n\n\t* 49151: Completion/Debian/Command/_madison,\n\tCompletion/Debian/Command/_dak, Completion/Debian/Command/_dpkg,\n\tCompletion/Unix/Command/_aap, Completion/Unix/Command/_samba,\n\tCompletion/Unix/Command/_setfacl, Completion/Zsh/Function/_zargs:\n\tremove commas erroneously included in _arguments exclusion lists\n\n\t* 49150: Completion/...: consistently use singular form for\n\theadings on completion match groups\n\n\t* 49149: Completion/Unix/Command/_ssh: add specific values\n\tin completion after ssh-keygen -b depending on the key type\n\n\t* Max Voit: 49153: Completion/Unix/Command/_module:\n\tcut off .lua extension from module files that occurs\n\twhen using lmod for module\n\n2021-07-06  Suraj N. Kurapati  <sunaku@riseup.net>\n\n\t* 49128 (github #76): Misc/vcs_info-examples: optimize\n\t+vi-git-untracked()\n\n2021-06-28  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 49102: Src/subst.c: Dynamic directory expansion failure is\n\tignored if NO_EXEC is set.\n\n2021-06-22  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 48906: Doc/Zsh/manual.yo, Doc/Zsh/metafaq.yo, Etc/FAQ.yo,\n\tEtc/changelog2html.pl: Update Sourceforge links to\n\thttps://zsh.sourceforge.io/.\n\n2021-06-14  dana  <dana@dana.is>\n\n\t* 48920: Completion/Unix/Command/_pgrep: Address issues related to\n\t-f completion\n\n\t* 48920: Completion/Unix/Command/_pgrep: Clarify -x description\n\n2021-06-13  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 49069: NEWS, Src/builtin.c: literal interpretation of subscripts\n\tfor unset of array/hash elements\n\n2021-06-02  Oliver Kiddle  <opk@zsh.org>\n\n\t* Akinori MUSHA: 48942: Functions/Zle/edit-command-line:\n\tLet EDITOR invoked by edit-command-line know it's a zsh script\n\n\t* 48954: Src/Zle/complist.c: avoid crash in reverse-menu-complete\n\tfrom menuselect without 'menu' in $compstate[insert]\n\n\t* 48952: Completion/Unix/Command/_perl: expand octal codes for\n\trecord separators in perl completion\n\n\t* 48938 (minus _cdrdao changes): Completion/Unix/Command/_pandoc,\n\tCompletion/Unix/Command/_bpython: remove vim fold and option markers\n\n\t* 48939: Completion/Unix/Command/_rsync: update for rsync 3.2.3\n\n2021-05-21  Oliver Kiddle  <opk@zsh.org>\n\n\t* 48897: Completion/Unix/Command/_sed, Completion/Unix/Command/_head,\n\tCompletion/Unix/Command/_dhclient, Completion/Unix/Command/_pgrep,\n\tCompletion/Unix/Command/_ping, Completion/Unix/Command/_tail,\n\tCompletion/Unix/Command/_timeout, Completion/Unix/Command/_uname:\n\tcompletion updates for DragonFly 6.0 and OpenBSD 6.9\n\n\t* Marlon Richert: 48891: Completion/Unix/Command/_pgrep:\n\tFix pgrep/pkill -f completion\n\n\t* Marlon Richert: 48864: Completion/Zsh/Type/_parameters: Improve\n\textra-verbose completion display strings for array parameter values\n\n2021-05-18  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 48601/0005: Functions/Misc/zmathfuncdef: Fix the workers/48147\n\treturn status / 'set -e' bug.\n\n\t* 48601/0004: Doc/Zsh/builtins.yo: docs: return: Give examples\n\tof using arithmetic evaluation.\n\n\t* 48601/0003: Doc/Zsh/builtins.yo: docs: functions -M: Add a\n\tsubheading and index entries.\n\n\t* 48601/0002: Doc/Zsh/builtins.yo: docs: functions -M: Document\n\tthe return status / result interdependency gotchas (cf. 48147).\n\n\t* 48601/0001: Doc/Zsh/builtins.yo: docs: functions -M: Move an\n\texample to be near the specification of the relevant flag\n\n\t* 48594 (plus an \"F:\" line corresponding to the question there):\n\tTest/E02xtrace.ztst: New tests for functions -t / functions -T\n\n2021-05-16  Bart Schaefer  <schaefer@zsh.org>\n\n\t* Marlon Richert: 48853: Doc/Zsh/contrib.yo,\n\tFunctions/Prompts/promptinit: improved handling of theme resets\n\twhen changing prompt themes, especially for theme preview\n\n\t* 48860: Etc/BUGS: remove mention of bugs that were fixed\n\n\t* 48857: Src/builtin.c, Src/exec.c, Src/loop.c, Src/makepro.awk,\n\tSrc/params.c, Src/signals.c: declare as \"volatile\" all globals\n\tthat may be modified by signal handlers; recognize in makepro.awk\n\n2021-05-16  Oliver Kiddle  <opk@zsh.org>\n\n\t* Jörg Sommer: users/26649: Completion/Unix/Command/_rake:\n\tadd zstyle for rake targets without description\n\n\t* 48783: Completion/Unix/Command/_ansible: update ansible\n\tcompletion to 2.10.8\n\n\t* 48623: Completion/Unix/Command/_ssh: update options in openssh\n\tcompletion to version 8.6\n\n2021-05-16  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* unposted: Completion/Unix/Command/_timeout: Fix wrong syntax\n\n2021-05-15  Bart Schaefer  <schaefer@zsh.org>\n\n\t* Han Pingtian: 33465 (very belatedly): use prctl() for \"jobs -Z\"\n\twhere available\n\n\t* Vincent Lefevre: 48723: Src/math.c: locale-safe recognition of\n\t\"Inf\" and \"NaN\" constants\n\n\t* Peter Stephenson: users/26742: Src/builtin.c: break out of\n\tsurrounding shell loops when \"exit\" is called from an exit hook\n\n\t* users/26736: Src/Zle/zle_main.c: avoid infinite loop in getbyte\n\twhen read -q is called from exit hook\n\n\t* 48810: Test/C04funcdef.ztst: name clash in test for autoloading\n\n\t* 48790: Src/Zle/compcore.c: COMPLETE_IN_WORD inside brace-param\n\n\t* 48710: Completion/Zsh/Command/_zed, Doc/Zsh/contrib.yo,\n\tFunctions/Misc/zed: add \"zed -h\" aka \"histed\", update doc and\n\tcompletion; improve compatibility with SH_WORD_SPLIT\n\n\t* 48709: Completion/Base/Widget/_complete_help: suppress error\n\tmessages from comptry\n\n\t* 48707: Doc/Zsh/contrib.yo, Functions/Zle/zed-set-file-name:\n\tfix keymap handling when zed invokes read-from-minibuffer\n\n2021-05-06  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 48787: Src/loop.c, Test/A01grammar.ztst: status was incorrect\n\ton hard error flagged by condition in \"if\" without \"else\".\n\n2021-05-03  dana  <dana@dana.is>\n\n\t* unposted (see 48613): Etc/FAQ.yo: Move section 3.31 to 2.8\n\n\t* unposted (see 48613): Doc/Zsh/metafaq.yo, Doc/Zsh/roadmap.yo:\n\tUpdate http:// FAQ links to https://\n\n\t* 48551 (tweaked per 48565, 48629): Doc/Zsh/compat.yo: Add\n\tdisclaimer about POSIX compliance and emulation of other shells\n\n\t* 48614 (tweaked per 48630): Doc/Zsh/builtins.yo,\n\tDoc/Zsh/options.yo, README, Src/builtin.c, Test/B10getopts.ztst:\n\tCalculate OPTIND according to POSIX_BUILTINS\n\n2021-05-03  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 48767: Doc/Zsh/params.yo: docs: $SECONDS: Clarify what types\n\tmay be set\n\n2021-04-28  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 48702: Completion/Unix/Command/_pandoc: do not use cache,\n\tsupport two or more extensions of format, and other fixes\n\n2021-04-21  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 48606 + 48607 + unposted test: Functions/Math/zmathfunc,\n\tTest/Z02zmathfunc.ztst: zmathfunc: Force arguments to be numbers\n\tand catch errors.\n\n\t* unposted (cf. 48156): Test/Z02zmathfunc.ztst: New test.\n\n\t* users/26635 (tweaked):\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_hg: vcs_info hg:\n\tCompute the branch name correctly when get-revision is set and\n\tcheck-for-changes is not\n\n2021-04-20  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 48638: NEWS: mention TYPESET_TO_UNSET\n\n2021-04-20  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 48435 (tweaked): Doc/Zsh/contrib.yo, Misc/vcs_info-examples:\n\tvcs_info docs: applied-string/unapplied-string: Correct an\n\tomission in the documentation and add an example.\n\n\t* 48528/0002: Misc/vcs_info-examples: vcs_info git docs:\n\tahead/behind commits: Reduce the number of forks\n\n\t* 48528/0001: Misc/vcs_info-examples: vcs_info git docs:\n\tahead/behind commits: Don't run rev-list when that would fail\n\n2021-04-19  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 48617: Completion/Base/Widget/_complete_debug: fix misuse of\n\tIGNORE_BRACES when initializing debug_indent\n\n\t* 47489: Functions/Misc/colors: rename standout as italic\n\n2021-04-19  Oliver Kiddle  <opk@zsh.org>\n\n\t* Marlon Richert: 48621: Completion/Zsh/Function/_add-zsh-hook,\n\tCompletion/Zsh/Function/_add-zle-hook-widget: Add -L to\n\tadd-(zsh|zle)-hook[-widget] completion\n\n\t* André Kugland: github/zsh-completions #792:\n\tCompletion/Unix/Command/_opustools: new opus-tools completion\n\n\t* 48619: Completion/Unix/Command/_ansible: complete inventory\n\tplugins in assignments to ANSIBLE_INVENTORY_ENABLED\n\n\t* 48618: Completion/Unix/Command/_date,\n\tCompletion/Unix/Command/_grep, Completion/Unix/Command/_netstat,\n\tCompletion/Unix/Command/_ping, Completion/Unix/Command/_readelf,\n\tCompletion/Unix/Command/_uname: update completions for FreeBSD 13\n\n2021-04-18  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 47704: Src/builtin.c, Src/params.c, Test/B02typeset.ztst:\n\tPOSIX export and readonly ignore the \"-p\" option when parameter\n\tnames are also present.\n\n\t* 48560: Completion/compinit, Doc/Zsh/builtins.yo,\n\tDoc/Zsh/options.yo, Doc/Zsh/params.yo, Src/builtin.c,\n\tSrc/options.c, Src/params.c, Src/subst.c, Src/zsh.h,\n\tTest/D06subscript.ztst, Test/E01options.ztst, Test/E03posix.ztst,\n\tTest/V10private.ztst, Test/runtests.zsh, Test/ztst.zsh: add\n\tTYPESET_TO_UNSET option, which removes initialization of newly\n\tdeclared parameters such that ${newparam-notset} yields \"notset\"\n\tand \"typeset -p newparam\" does not show an assignment to the\n\tparameter.  This is similar to the default behavior of bash and\n\tksh, with minor differences in typeset output.  Also add tests for\n\tsome POSIX incompatibilities plus minor changes for test harness\n\trobustness.\n\n2021-04-18  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* unposted: Etc/BUGS: remove a bug fixed by 47301\n\n2021-04-17  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 48361 (+ 48368 review comments):\n\tCompletion/Zsh/Function/__arguments: New completion function\n\tfor _arguments.\n\n2021-04-16  Oliver Kiddle  <opk@zsh.org>\n\n\t* Marlon Richert: 48513: Completion/Zsh/Type/_parameters,\n\tTest/Y01completion.ztst: Let extra-verbose completion\n\tshow parameter values\n\n\t* unposted: Etc/BUGS: update on bug list\n\n\t* 48556: Completion/BSD/Command/_ipfw: new completion\n\n2021-04-16  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted (cf. 48153): Test/Z02zmathfunc.ztst: Add tests for\n\tmax() and min().\n\n2021-04-15  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 48574/0008: Doc/Zsh/contrib.yo: vcs_info git: Use best\n\tpractices in an example\n\n\t* 48574/0007: Doc/Zsh/contrib.yo: vcs_info docs:\n\tvcs_info_lastmsg: Correct an ambiguous/wrong description.\n\n\t* 48574/0006: Doc/Zsh/contrib.yo: vcs_info docs: Change\n\tuser-context name in an example, to avoid confusion with the\n\tspecial-casing of the value `command' in vcs_info_lastmsg.\n\n\t* 48574/0005: Doc/Zsh/contrib.yo: vcs_info docs: Recommend use\n\tof prompt expandos rather than terminal escape sequences.\n\n\t* 48574/0004: Doc/Zsh/func.yo: docs: Document that hook functions\n\tmay rely on $? (see workers/48570).\n\n\t* 48574/0003: Doc/Zsh/contrib.yo: docs: Fix rendering in the\n\tman page output\n\n\t* 48574/0002 (tweaked): Doc/Zsh/contrib.yo: docs: Fix rendering\n\tof an example in the man page output\n\n\t* 48574/0001: Doc/Zsh/func.yo: docs: Minor markup tweak\n\n2021-04-13  dana  <dana@dana.is>\n\n\t* Daniel Shahaf: 48522: README: Clarify _alternative change\n\n2021-04-13  Tim Lee  <progscriptclone@gmail.com>\n\n\t* 48525: Misc/vcs_info-examples: vcs_info git docs: ahead/behind\n\tcommits: Run fewer external programs\n\n2021-04-12  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 48439: Src/mem.c: remove macros that became unnecessary by 47785\n\n2021-04-11  Oliver Kiddle  <opk@zsh.org>\n\n\t* 48504: Src/hist.c, Src/input.c, Src/watch.c:\n\tuse SEEK_ macros in fseek() calls\n\n\t* Michael Stapelberg: 45396: Src/hist.c: readhistfile:\n\tavoid thousands of lseek(2) syscalls via ftell()\n\n\t* Marc Chantreux: 48466: Completion/Unix/Command/_surfraw:\n\tcorrect indentation and remove tabs and trailing spaces\n\n\t* Marc Chantreux: 48445: Completion/Unix/Command/_surfraw:\n\tpluralize tags in _surfraw\n\n\t* Marc Chantreux: users/26645: Completion/X/Command/_gv:\n\tupdate options in gv completion\n\n2021-04-10  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 47913: Doc/Zsh/options.yo, Src/options.c, Src/pattern.c, Src/zsh.h:\n\timplement CASE_PATHS option to make NO_CASE_GLOB more sensible\n\n2021-04-10  dana  <dana@dana.is>\n\n\t* brian m. carlson: 47794: README, Src/exec.c,\n\tTest/B07emulate.ztst: exec: run final pipeline command in a\n\tsubshell in sh mode\n\n\t* unposted (see 48415): README: Document incompatibility\n\tcaused by workers/43928\n\n\t* 48338: Completion/Unix/Command/_git: Support case-insensitive\n\tpath matching\n\n2021-04-09  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 48432 (plus test change): Src/Modules/zutil.c,\n\tTest/V05styles.ztst: Fix quoting of zstyle -L output for\n\t-e styles, and enable test.\n\n2021-04-09  Oliver Kiddle  <opk@zsh.org>\n\n\t* 48378: Completion/Zsh/Command/_compadd: complete compadd\n\toptions for other completion functions\n\n\t* 48437: Completion/Unix/Command/_gdb: fix pid completion when\n\tcursor is in the middle of the line\n\n\t* Felipe Contreras: 47786: aclocal.m4, aczsh.m4: prepare for\n\tautoconf 2.70\n\n\t* Felipe Contreras: 47785: Src/Modules/files.c, Src/zsh_system.h,\n\tSrc/mem.c, configure.ac: remove deprecated autoconf functions\n\n2021-04-08  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 48416: Completion/Unix/Command/_gcore: support macOS, with\n\tupdate for GNU gcore\n\n2021-04-08  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 48410: Doc/Zsh/metafaq.yo, Etc/FAQ.yo: FAQ, METAFAQ: Mention\n\tzsh-security@.\n\n\t* 48379: Src/subst.c, Test/D04parameter.ztst: Make the parameter\n\texpansion subscript flags parse error message, \"error in flags\",\n\tidentify the location of the parse error.\n\n\t* 48321 (tweaked per thread): Completion/Unix/Type/_perl_modules:\n\tDon't assume ${words[1]} to be either \"perl\" or \"perldoc\"\n\n2021-04-07  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 48425: Test/V05styles.ztst: Add an XFail test for a 'zstyle\n\t-L' escaping bug (workers/48424).\n\n2021-04-06  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 48391: Src/Zle/compresult.c: correctly calculate display string\n\twidth in completion list to fix display problem in menu-complete\n\n\t* 48389: Src/math.c, Src/utils.c: getkeystring(GETKEY_SINGLE_CHAR)\n\tshould not return a pointer to a local variable\n\n2021-04-06  Oliver Kiddle  <opk@zsh.org>\n\n\t* Marc Chantreux: users/26579: Completion/Unix/Command/_surfraw:\n\tchanges from review including parameter expansion to replace awk\n\n\t* 48414: Completion/Unix/Type/_bpf_filters: quote closing bracket\n\tto adapt for change in 43928\n\n\t* Marlon Richert: 48413: Test/comptest, Test/Y01completion.ztst:\n\tFix _expand completion test\n\n\t* unposted: Etc/BUGS: add several references to old list posts\n\n2021-04-05  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Etc/FAQ.yo: FAQ: Move the 'The mailing lists have\n\tmoved' notice to a more appropriate place.\n\n2021-04-04  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* Felipe Contreras: 47784: Src/pattern.c: silence compiler\n\twarning -Wmaybe-uninitialized\n\n\t* Jacob Gelbman: 48218 (+ 48354): Completion/Unix/Command/_gcc:\n\tvarious improvements for _gcc\n\n2021-04-02  Oliver Kiddle  <opk@zsh.org>\n\n\t* 47510: Src/prompt.c, Src/zsh.h: drop code that avoided\n\ttermcap for named colours\n\n\t* 48356: Doc/Zsh/compwid.yo: clarify (the intended)\n\tbehaviour for the two anchor forms of matching control\n\n2021-04-01  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Etc/BUGS: Add 39319, a named-file process\n\tsubstitution cleanup bug.\n\n2021-04-01  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 48202 (+ 48366 test fix from Jun): Src/utils.c,\n\tTest/B03print.ztst: Fix handling of NUL bytes in zexpandtabs\n\tmultibyte version\n\n2021-03-31  Oliver Kiddle  <opk@zsh.org>\n\n\t* github #74: Caleb Maclennan: Completion/Unix/Command/_vcsh:\n\tDrop vcsh completions, maintained upstream\n\n\t* Marlon Richert: 48214: Completion/Base/Completer/_expand,\n\tTest/Y01completion.ztst: add file types to _expand completions,\n\tso they can be colored through complist\n\n\t* Christian K: 48192: Completion/Unix/Command/_openstack:\n\tFix openstack completion for new style clients\n\n\t* Marc Chantreux: users/26557: Completion/Unix/Command/_surfraw:\n\tadd bookmarks support and remove the header from the final list\n\n2021-03-29  Aleksandr Mezin  <mezin.alexander@gmail.com>\n\n\t* 47561 (the git and cvs parts) (compare 44919 + 44920):\n\tFunctions/VCS_Info/Backends/VCS_INFO_detect_cvs,\n\tFunctions/VCS_Info/Backends/VCS_INFO_detect_git,\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_cvs,\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_git: vcs_info\n\tinternals: cvs, git: Set ${vcs_comm[basedir]} like all other\n\tbackends do.\n\n2021-03-29  dana  <dana@dana.is>\n\n\t* 47737: Completion/Zsh/Command/_zstyle: Fix option completion\n\twhen positional arguments are already present (regression from\n\tworkers/39659 (commit ae3b675ce6e4ac62451ea08169c2b4dc45cf533b))\n\n2021-03-29  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: ChangeLog: Fix X-Seq numbers for the 39657, 39658,\n\t39659 patch series.\n\n\t* unposted: Doc/Zsh/compsys.yo: docs: _arguments: Fix a typo\n\tin the example.\n\n2021-03-28  Oliver Kiddle  <opk@zsh.org>\n\n\t* Jacob Gelbman: 48166: Completion/Unix/Command/_ctags:\n\tadd completion for language options\n\n\t* Arseny Maslennikov: 48210, 48211:\n\tCompletion/Linux/Command/_setpriv: new completion for setpriv(1)\n\n\t* Arseny Maslennikov: 48212: Completion/Linux/Type/_capabilities:\n\tIntroduce new completion for Linux task capabilities\n\n\t* Štěpán Němec: 48231: Completion/Unix/Command/_git:\n\tadd missing --pretty formats and improve descriptions\n\n\t* 48230, 48233 (Jun T): Completion/Solaris/Command/_dtrace:\n\tcompletion of dtrace probes and runtime options\n\n2021-03-28  dana  <dana@dana.is>\n\n\t* 48216: Test/Y01completion.ztst: Fix broken test from\n\tworkers/48180\n\n2021-03-26  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 48131/0004: Etc/FAQ.yo: FAQ: 3.31: Rearrange\n\n\t* 48131/0003: Etc/FAQ.yo: FAQ: 3.31: Move two paragraphs\n\tunchanged, reordering them\n\n\t* 48131/0002: Etc/FAQ.yo: FAQ: 3.31: Tweak summary paragraph\n\n\t* 48131/0001: Etc/FAQ.yo: FAQ: 3.31: Add a one-sentence summary\n\n2021-03-23  dana  <dana@dana.is>\n\n\t* unposted: Doc/Zsh/expn.yo, Test/D07multibyte.ztst: Improve\n\tdocumentation and add regression test for workers/47745\n\n\t* 47745: Stephane Chazelas: Src/utils.c: Fix [:IDENT:] vs\n\tposixidentifiers\n\n2021-03-17  dana  <dana@dana.is>\n\n\t* 48180: Marlon Richert: Completion/Base/Core/_main_complete,\n\tTest/Y01completion.ztst: Start menu selection with\n\tselect=long-list in menu style\n\n2021-03-07  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 48147/0002: Functions/Math/zmathfunc, Test/Z02zmathfunc.ztst:\n\tzmathfunc: Fix bug where the exit code would be non-zero if\n\tthe expression evaluted to zero.\n\n\t* 48147/0001: Test/Z02zmathfunc.ztst: tests: Add a unit test for\n\tzmathfunc and a regression test for workers/48146 affecting it.\n\n2021-02-24  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t*  48105: Jacob Gelbman: Completion/Unix/Command/_ctags: update and\n\tfix formatting and import.\n\n2021-02-23  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 48096: Jacob Gelbman: Completion/Unix/Command/_ctags: new\n\tcompletion.\n\n2021-02-22  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 48094: Arseny Maslennikov: Functions/Prompts/prompt_restore_setup,\n\tFunctions/Prompts/promptinit: apply cleanup commands of the current\n\ttheme on any theme change, including \"prompt -[hp] $theme\"\n\n2021-02-19  dana  <dana@dana.is>\n\n\t* 47867: Arseny Maslennikov: Functions/Prompts/promptinit: Fix\n\tRPROMPT typo\n\n2021-02-18  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* users/26509: Src/builtin.c: fc -L should ignore remote entries\n\trather than treat them as an error.\n\n2021-02-17  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 48073: Martijn Dekker: Doc/Zsh/builtins.yo, Src/builtin.c: fc\n\t-s is POSIX version of fc -e -.\n\n2021-02-16  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 47876: Justtine Tunney: Src/exec.c: Add more cases where\n\tshell scripts can be recognised from the first line as\n\tdescribed by POSIX.\n\n2021-02-16  Lawrence Velázquez  <vq@larryv.me>\n\n\t* 47830: Doc/Zsh/contrib.yo, README: Fix some documentation typos\n\n2021-02-13  Oliver Kiddle  <opk@zsh.org>\n\n\t* unposted (Daniel): Completion/Unix/Command/_locale:\n\tadd exclusion list missed in recent OpenBSD update\n\n\t* github #68: taiyu.len: Completion/Unix/Command/_man,\n\tCompletion/Zsh/Command/_zstyle, Doc/Zsh/compsys.yo:\n\tsupport section suffix completion for man pages\n\n\t* 47905: Joshua Krusell: Src/Modules/zutil.c,\n\tTest/V12zparseopts.ztst: Add leading '-' to zparseopts option\n\tparsing errors\n\n2021-02-11  Bart Schaefer  <schaefer@zsh.org>\n\n\t* unposted: NEWS, README: mention the effects of 47997.\n\n\t* 47997: Src/Zle/compcore.c: disable xtrace around completions\n\n2021-02-07  Oliver Kiddle  <opk@zsh.org>\n\n\t* 47944: Completion/BSD/Command/_bsd_pkg,\n\tCompletion/BSD/Command/_pkgin, Completion/BSD/Command/_systat,\n\tCompletion/Unix/Command/_dmesg: update completions for NetBSD 9\n\n\t* 47943: Completion/Unix/Command/_date,\n\tCompletion/Unix/Command/_xargs: update completions for DragonflyBSD\n\n\t* 47932: Completion/Linux/Command/_free, Completion/Unix/Command/_w,\n\tCompletion/Unix/Command/_pgrep, Completion/Unix/Command/_vmstat:\n\tupdate completions for procps 3.3.16\n\n\t* 47931: Completion/BSD/Command/_signify,\n\tCompletion/BSD/Command/_systat, Completion/Unix/Command/_locale,\n\tCompletion/Unix/Command/_netstat, Completion/Unix/Command/_top:\n\tupdate completions for OpenBSD base up to 6.8\n\n\t* 47930: Completion/BSD/Command/_freebsd-update,\n\tCompletion/Unix/Command/_uniq, Completion/Unix/Type/_diff_options:\n\tupdate completions for FreeBSD base up to 12.2\n\n\t* 47929: Completion/Zsh/Command/_zstyle: complete newer\n\tpossible values for the sort style\n\n\t* based on github #62: oxiedi@yandex.ru:\n\tCompletion/Unix/Type/_date_formats: return proper exit status\n\n\t* github #66: DCsunset: Completion/Unix/Command/_todo.sh:\n\tAdd more commands to _todo.sh\n\n\t* github #63: oxiedi@yandex.ru: Completion/Base/Utility/_values:\n\tfix regression caused by 44274, with sort style -o may be passed\n\n\t* github #72 (tweaked): Semnodime: Completion/Unix/Command/_lldb:\n\tfix unix command lldb tab-completion, args are space separated\n\n\t* gitlab !16: aaaz <i1460889@mvrht.net>:\n\tCompletion/Unix/Command/_transmission: allow spaces between short\n\toptions and their parameters in transmission completion\n\n2021-02-06  Oliver Kiddle  <opk@zsh.org>\n\n\t* 47919: Completion/BSD/Type/_login_classes,\n\tCompletion/Unix/Command/_env, Completion/Unix/Command/_pgrep,\n\tCompletion/Unix/Command/_su, Completion/Unix/Command/_user_admin:\n\tuse common function for completing BSD login classes and update for\n\toptions to env\n\n\t* 47918: Completion/Linux/Command/_nsenter,\n\tCompletion/Linux/Command/_unshare: new util-linux completions\n\n2021-02-05  Bart Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Doc/Zsh/expn.yo: Add cindex entries for subsections\n\n2021-02-04  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 47895: Src/builtin.c, Test/D02glob.ztst: Remove trailing spaces\n\tfrom \"print -ac\" output lines.\n\n\t* 47865: Test/D02glob.ztst: More tests for restricted directories\n\n\t* 47889: Etc/FAQ.yo: Update csh alias equivalences (section 2.3)\n\n2021-02-03  Joshua Krusell <js.shirin@gmail.com>\n\n\t* 47899: Src/Modules/zutil.c, Test/V12zparseopts.ztst: Improved\n\terror message from zparseopts.\n\n2021-01-20  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 47883: Completion/Unix/Command/_awk: support gawk ver.5\n\n2021-01-27  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 47873: Completion/Base/Core/_main_complete,\n\tCompletion/Zsh/Context/_subscript,\n\tFunctions/Chpwd/zsh_directory_name_cdr: Improve completion\n\twithin dynamic directory names ~[<here>].\n\n\t* GammaFunction@vivaldi.net via Roman: 47744:\n\tSrc/Zle/zle_main.c: Fix vi-repeat-change when hooks are in use.\n\n2021-01-26  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Etc/FAQ.yo: Fix a typo in the front matter.\n\n2021-01-24  Paul Seyfert  <pseyfert.mathphys@gmail.com>\n\n\t* github #71 (tweaked): Completion/X/Command/_xrandr: Complete\n\tproviders\n\n2021-01-23  Bart Schaefer  <schaefer@zsh.org>\n\n\t* users/26406: Functions/Misc/zargs: preserve caller setopts\n\n2021-01-20  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 47849: Test/E01options.ztst, Test/V08zpty.ztst,\n\tTest/W02jobs.ztst, Test/X02zlevi.ztst, Test/X03zlebindkey.ztst,\n\tTest/X04zlehighlight.ztst, Test/Y01completion.ztst,\n\tTest/Y02compmatch.ztst, Test/Y03arguments.ztst: do not skip\n\ttests that require zpty on Cygwin\n\n\t* Peiyuan Song: 47840: Src/Modules/zpty.c, configure.ac: make\n\tzpty module work on Cygwin\n\n2020-12-12  dana  <dana@dana.is>\n\n\t* unposted: NEWS: Catch up on new features\n\n2020-12-11  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 47731 (+unposted): Functions/Misc/run-help-btrfs,\n\tDoc/Zsh/contrib.yo: add run-help assistant for btrfs command.\n\t(based on the patch by Samir Benmendil in 43947)\n\n\t* Samir Benmendil: 43946: Functions/Misc/run-help-sudo: call\n\trun-help (instead of man) for the command given to sudo\n\n2020-12-05  Bart Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Doc/Zsh/compsys.yo: index compprefuncs and comppostfuncs\n\n2020-12-04  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 47716: Etc/BUGS: Add Aleksandr's vcs_info patch.\n\n2020-12-02  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 47704: Src/Modules/param_private.c: fix scope for \"private -p\"\n\n2020-12-01  Bart Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Etc/BUGS: Add users/26150 (multios + exec)\n\n2020-11-16  ivan tkachenko  <me@ratijas.tk>\n\n\t* 47547: Doc/Zsh/arith.yo: docs: Specify the exact kind of\n\tquoting which is assumed when parsing arithmetic expressions\n\n2020-11-16  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 47560: configure.ac, aczsh.m4: add necessary includes or\n\tprototypes for the tests in configure (fix errors in macOS 11)\n\n2020-10-29  Oliver Kiddle  <opk@zsh.org>\n\n\t* users/26107: Completion/Unix/Command/_git: complete changed\n\tfiles after git diff HEAD\n\n2020-10-25  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* Jun-ichi Takimoto: 47301: Src/builtin.c: Fix print -v\n\tmetafication\n\n\t* 47302: Test/B03print.ztst, Test/D07multibyte.ztst: Test for\n\tprint -v fix\n\n\t* 47494, 47495: Completion/Zsh/Command/_strftime,\n\tDoc/Zsh/mod_datetime.yo, Src/Modules/datetime.c,\n\tTest/V09datetime.ztst: Add -n option to strftime\n\n2020-10-18  Roman Perepelitsa  <roman.perepelitsa@gmail.com>\n\n\t* 47476: Src/Modules/files.c: Fix a race condition in zf_mkdir -p\n\t(based on the patch by Matthew Martin in workers/47436)\n\n2020-10-18  Axel Beckert  <abe@deuxchevaux.org>\n\n\t* 47468: Doc/Zsh/contrib.yo: Fix typo\n\n2020-10-03  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* users/26088: Doc/Zsh/zle.yo: docs: zle -R: Clarify that it\n\tneeds not be called in the normal course of things, but only\n\twhen an immediate, interim redisplay is desired.\n\n2020-09-23  Meng Bo  <mengbo@lnu.edu.cn>\n\n\t* github #65: Completion/Unix/Command/_nmap: Rename option flags\n\t(s/_/-/g)\n\n2020-09-22  Jacob Menke  <linux.dev25@gmail.com>\n\n\t* 47395: Completion/Base/Utility/_store_cache: Don't leak the\n\tvariable ${_cache_dir}.\n\n2020-09-13  Bart Schaefer  <schaefer@zsh.org>\n\n\t* Mikael Magnusson: 47382: Completion/Zsh/Context/_brace_parameter:\n\tCompletion for 47364\n\n\t* 47364: Doc/Zsh/expn.yo, Src/subst.c, Src/zsh.h, Test/D02glob.ztst:\n\tEnable extendedglob in pattern with ${(*)name/pattern/replacement}\n\n2020-09-09  Stephane Chazelas  <stephane@chazelas.org>\n\n\t* 47352 (+ extra test cases): Src/prompt.c, Test/D01prompt.ztst:\n\tfix %<n>K prompt expansion (regression introduced in 5.0.3).\n\n2020-09-05  Doug Kearns  <dougkearns@gmail.com>\n\n\t* unposted: Completion/Unix/Command/_lp,\n\tCompletion/Unix/Command/_transmission, Completion/X/Command/_code,\n\tCompletion/X/Command/_kdeconnect, Completion/Zsh/Command/_zstyle:\n\tRemove periods from completion descriptions as per the\n\tcompletion-style-guide recommendations.\n\n2020-09-04  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 47350; Completion/Unix/Command/_dropbox: new completion.\n\n2020-08-28  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* github #64: Src/Modules/curses_keys.awk: Fix a build-time\n\terror when building against ncurses that hadn't been built\n\twith --enable-wgetch-events.  (Reported by Martin Liska.)\n\n2020-08-21  Oliver Kiddle  <opk@zsh.org>\n\n\t* 47328: Doc/Zsh/metafaq.yo, Etc/CONTRIBUTORS: remove references\n\tto old zsh.org mail addresses\n\n\t* 47322: Completion/Unix/Command/_ssh: allow prefix with ssh\n\tcipher completion and add matching control for options\n\n2020-08-18  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 47323: Completion/Redhat/Command/_rpm: _rpmbuild: Complete\n\tfile arguments after -r/-b/-t.\n\n2020-08-16  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 47304: Completion/Zsh/Type/_globflags: support specifying more\n\tthan one flag where appropriate\n\n\t* 47305: Functions/Zle/edit-command-line: when possible, set\n\t$BUFFER directly\n\n\t* 47306: Completion/Zsh/Command/_zstyle, Doc/Zsh/contrib.yo,\n\tFunctions/Zle/edit-command-line: add editor style\n\n\t* 47307: Functions/Zle/edit-command-line: restrict editing to\n\tregion if it is active\n\n2020-08-16  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 47314 (+ extra test case): Test/Z01is-at-least.ztst: is-at-least\n\tfalse positive (5.8.0.2 / 5.8)\n\n\t* 47313: Doc/Zsh/expn.yo: docs: Document explicitly that the\n\t:P modifier returns a symlink-less path.\n\n2020-08-13  Oliver Kiddle  <opk@zsh.org>\n\n\t* Jörg Sommer: 47320: Completion/Linux/Command/_choom: Add\n\tcompletion for Linux tool used to adjust process OOM score\n\n\t* 47321: Completion/Linux/Command/_btrfs: update for btrfs 5.4\n\n\t* 47319: Completion/Unix/Command/_imagemagick: complete more\n\toptions to ImageMagick's convert command\n\n2020-08-10  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 47294: Completion/Debian/Command/_aptitude: updates to options\n\n\t* 47293: Completion/Unix/Command/_lp: lowercase descriptions\n\n2020-08-10  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 47308: Etc/zsh-development-guide: Document the new X-Seq\n\tautoreply bot.\n\n2020-08-09  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 47303: Functions/VCS_Info/Backends/VCS_INFO_get_data_hg,\n\tFunctions/VCS_Info/VCS_INFO_set-patch-format: vcs_info hg:\n\tFix changing the expansion of %g (hook_com[guards]) in the\n\tset-patch-format hook (regression from workers/40480).\n\n2020-08-08  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Doc/Zsh/metafaq.yo, Etc/FAQ.yo: Update documentation\n\tfor the move to new hosting.\n\n\t* 47296 (+ unposted additional tests and comments): Src/loop.c,\n\tTest/A05execution.ztst: 'repeat' loops: Let the repeat count\n\tuse $?.\n\n\t* 47300: Src/parse.c, Src/zsh.h: Document the EC_NODUP, EC_DUP,\n\tEC_DUPTOK triplet.\n\n2020-08-08  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* unposted: Completion/BSD/Command/_kdump,\n\tCompletion/BSD/Type/_ktrace_points: fix syntax errors in\n\tcompleters added in 45940\n\n2020-08-05  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* unposted: Completion/compinit: add help text for -w\n\n\t* 46280: Completion/compinit: add -w to explain why compdump runs\n\n2020-07-29  Roman Perepelitsa  <roman.perepelitsa@gmail.com>\n\n\t* unposted: Src/zsh.h: comments explaining how hashtable must\n\tbe created\n\n2020-07-28  Roman Perepelitsa  <roman.perepelitsa@gmail.com>\n\n\t* 46275: Src/hashtable.c, Src/zsh.h: eliminate undefined behavior\n\tcaused by redefinition of hashtable\n\n2020-07-27  Roman Perepelitsa  <roman.perepelitsa@gmail.com>\n\n\t* 46268: Src/exec.c: suppress a useless compiler warning\n\taround nice()\n\n2020-07-14  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 46244 (cont.): Etc/creating-a-release.txt: Flesh out the TODO\n\tfrom the previous commit.\n\n\t* 46244: Etc/creating-a-release.txt: Start to introduce a\n\trelease managers keyring.\n\n2020-07-14  oxiedi  <oxiedi@yandex.ru>\n\n\t* github #61: Completion/Zsh/Type/_parameters: Don't leak the\n\tvariable $i\n\n2020-07-13  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 46240: Doc/Zsh/builtins.yo, Doc/Zsh/contrib.yo,\n\tDoc/Zsh/jobs.yo, Doc/Zsh/params.yo, Doc/ztexi.yo: Make the\n\texpansion of manref()() in ztexi.yo match its expansion in\n\tzman.yo.\n\n2020-07-12  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 46183: Test/D03procsubst.ztst: New XFail test: external\n\tcommand with =(...) on LHS of pipeline cleans up its tempfiles.\n\n\t* unposted (cf. GitHub #11): Misc/vcs_info-examples: vcs_info\n\thg: docs: Change an example to not use a hex dump incantation\n\tthat may replace some bytes' values with asterisks.\n\n\t* users/24985: Doc/Zsh/expn.yo: Clarify documentation of the\n\t${(n)} and ${(-)} parameter expansion flags, and add a forward\n\tcompatibility hatch to the latter.\n\n\t* 46204: Test/E01options.ztst: Fix new test case for the\n\ttheoretical case of having more than 100 files in the root\n\tdirectory.\n\n\t* unposted: .editorconfig: For Makefiles, make the indent size\n\tequal to tab width.\n\n2020-07-11  dana  <dana@dana.is>\n\n\t* Cedric Ware: 46152: Src/Modules/system.c, Test/V14system.ztst:\n\tRe-allow '0' timeout in zsystem flock\n\n2020-07-09  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 46215 (w/ minor tweak): Test/E01options.ztst: make the test\n\tadded by 46175/0002 work on wider systems, and skip the test\n\ton Cygwin.\n\n2020-07-08  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 46216: Completion/Unix/Command/_ansible: update for ansible 2.9\n\n\t* 46217: Completion/Unix/Command/_tmux: update options for tmux 3.1\n\n\t* github #60: Mathias Fredriksson: Completion/Unix/Type/_zfs_dataset:\n\tFix completion for a zfs dataset containing spaces\n\n\t* gitlab !15: Doron Behar: Completion/Linux/Command/_modutils:\n\tFix FHS assumption\n\n\t* 46201 (tweaked per Daniel): Etc/completion-style-guide: add\n\tguidelines for caching and use of imperative mood in descriptions\n\n\t* 46195: Completion/X/Type/_x_color: use showrgb command to get\n\tcolours if it is available\n\n\t* github #50: SATOH Fumiyasu: Completion/Unix/Type/_ssh_hosts:\n\tComplete hosts in \"Match\" directive\n\n\t* github #53: James Pike: Completion/Unix/Type/_remote_files:\n\tallow specifying directory name.\n\n2020-07-07  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 46189: Test/comptest: Ignore exit status of final zpty_flush\n\n2020-07-07  Nuri Jung  <jnooree@gmail.com>\n\n\t* github #58: Doc/Zsh/mod_regex.yo: docs: Note that the zsh/regex\n\tsyntax is platform-dependent.\n\n2020-07-06  Pete Moore  <pmoore@mozilla.com>\n\n\t* 46194: Doc/Zsh/metafaq.yo: docs: metafaq: Remove spurious\n\tclosing bracket\n\n2020-07-05  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 46175/0003: Src/exec.c, Test/E01options.ztst: Fix the\n\tRM_STAR_SILENT bug from the parent commit.\n\n\t* 46175/0002: Test/E01options.ztst: Add a regression test for\n\t46169: the RM_STAR_SILENT logic processes the current directory\n\trather than the root directory.\n\n\t* 46175/0001: Test/E01options.ztst: Add a unit test for the\n\tRM_STAR_SILENT option.\n\n\t* 46174/0002: Test/comptest: test harness: Restore indentation\n\tafter the previous commit. No functional change.\n\n\t* 46174/0001: Test/comptest: test harness: Plug a symlink attack\n\n2020-07-03  Matthew Martin  <phy1729@gmail.com>\n\n\t* 46168: Src/builtin.c, Test/B01cd.ztst: Update $PWD and call\n\tchpwd hook after normalizing path.\n\n2020-07-03  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted (cf. users/24972, users/24978): Doc/Zsh/expn.yo:\n\tUse an ASCII hyphen/minus rather than a dash.\n\n2020-07-03  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* users/24971: Doc/Zsh/expn.yo, Src/sort.c, Src/subst.c,\n\tSrc/zsh.h, Test/D04parameter.ztst: Add parameter flag (-)\n\tto allow signed numeric sorting.\n\n2020-06-28  zsugabubus  <zsugabubus>\n\n\t* 46097: Completion/Unix/Command/_rm: Fix \"assignment to invalid\n\tsubscript range\" error in _rm.\n\n2020-06-28  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 46132: Doc/Zsh/expn.yo: docs: Use an itemized list in the\n\tdocumentation of the *(o) glob qualifier.\n\n\t* 46131: Completion/Unix/Command/_git: _git-config: Partly\n\tfix a bug whereby a 'foo.ba<TAB>' wouldn't be completed to\n\t'foo.bar.baz'.\n\n\t* 46128: Completion/Unix/Command/_git: Complete more options\n\tand diff/merge tools.\n\n\t* 46129: Completion/Unix/Command/_git: _git-config: Fix a bug\n\twhere a second trailing dot would be incorrectly offered.\n\n\t* 46130: Completion/Unix/Command/_git: _git-config: Complete\n\tsome more options.\n\n2020-06-27  Miroslav Koškár  <mk@mkoskar.com>\n\n\t* 46140: Completion/Unix/Command/_git: Fix insufficiently\n\tquoted pattern\n\n\t* 46139: Completion/Unix/Command/_git: Remove hanging whitespaces\n\n2020-06-27  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted (after 46068): Src/Zle/zle_utils.c: Fix a compiler\n\twarning.\n\n\t* 46072 + 46136: Doc/Zsh/contrib.yo, Doc/Zsh/zle.yo,\n\tFunctions/Misc/add-zle-hook-widget, Src/Zle/zle_thingy.c,\n\tTest/X04zlehighlight.ztst: Add the 'zle $widget -f nolast'\n\tsyntax, to improve add-zle-hook-widget support for multiple\n\thook functions.\n\n\t* users/24959/0002: Doc/Zsh/grammar.yo: Update aliases\n\tdocumentation for the addition of the ALIAS_FUNC_DEF option.\n\n\t* users/24959/0001: Doc/Zsh/builtins.yo, Doc/Zsh/grammar.yo:\n\tExtend documentation of global aliases.\n\n2020-06-26  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Doc/Zsh/contrib.yo, Doc/Zsh/expn.yo,\n\tDoc/Zsh/mod_mapfile.yo, Etc/FAQ.yo: docs: Fix some markup\n\tand typos.\n\n2020-06-26  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 46110: Src/subst.c, Test/D03procsubst.ztst: If =subst occurs\n\tbefore =(subst) we should allow for the possibility of the latter.\n\n2020-06-26  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* unposted c.f. 46034: Completion/Unix/Command/_gpg: workaround\n\tincompatibility with sh_file_expansion option\n\n\t* 46106: Completion/BSD/Command/_usbconfig: new completion\n\n\t* 46105: Completion/X/Command/_xinput: new xinput completion\n\n\t* 46075: drelo: Completion/Unix/Type/_find_net_interfaces:\n\tprefer ip on linux for finding network interfaces\n\n\t* 45895: oxiedi: Completion/Base/Utility/_sequence,\n\tTest/Y01completion.ztst: ignore dedup patterns in _sequence\n\n2020-06-25  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 46068 (tweaked) (was: github #57): Doc/Zsh/zle.yo, README,\n\tSrc/Zle/zle.h, Src/Zle/zle_refresh.c, Src/Zle/zle_utils.c,\n\tSrc/prompt.c, Test/X04zlehighlight.ztst: region_highlight:\n\tAdd memo= support.\n\n\t* 46102: Test/ztst.zsh: test harness: Make the XPass message\n\tdistinct from the Fail message.\n\n2020-06-22  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 46079: Src/math.c, Test/C01arith.ztst: Ignore double quotes in\n\tmath expression: treat as white space.\n\n2020-06-22  Manuel Jacob  <me@manueljacob.de>\n\n\t* 46091: Doc/Zsh/contrib.yo,\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_hg: Add code to\n\tMercurial VCS backend to show topic if there is any.\n\n2020-06-19  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 46044 (tweaked per Matthew): Completion/Unix/Command/_units:\n\tCorrect the path to the units data file on Debian with units\n\t2.00 and newer and on FreeBSD.\n\n2020-06-18  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 46067: Test/A05execution.ztst: Add a unit test for\n\tworkers/46060.\n\n2020-06-18  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 46060: Src/jobs.c: Ensure process has been signalled before\n\ttaking special action for SIGINT or SIGQUIT.\n\n2020-06-17  Eric Cook  <llua@gmx.com>\n\n\t* 45982: Frederick Zhang: Completion/Unix/Command/_zfs:\n\tAdd space read-only property\n\n2020-06-17  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Util/ztst-syntax.vim: internal: ztst.vim: Recognize\n\tempty \"F:\" line as well, as the test harness does.\n\n2020-06-17  Miroslav Koškár  <mk@mkoskar.com>\n\n\t* 46049: Doc/Zsh/options.yo: docs: Correct the sense of the\n\tsingle-letter abstract of the GLOBAL_RCS option (-d)\n\n2020-06-11  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* gitlab !12: Jan Máslo: Completion/Linux/Command/_mat,\n\tCompletion/Linux/Command/_mat2: new completions\n\n\t* 46036: Completion/Zsh/Type/_ps1234: fix colouring in prompt\n\tcompletion\n\n\t* users/24892: Completion/Unix/Type/_files,\n\tCompletion/Zsh/Command/_zstyle: fix local declaration with\n\trecursive-files style and complete it for zstyle\n\n2020-06-10  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Doc/Zsh/mod_zutil.yo: zstyle docs: Fix typo.\n\n2020-06-09  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 46026: Doc/Zsh/options.yo, Src/exec.c, Src/options.c,\n\tSrc/zsh.h, Test/A04redirect.ztst: Add CLOBBER_EMPTY option.\n\n2020-06-08  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* uwers/24909: Src/exec.c: Don't clean up files used for\n\tsubstitution until after function has run.\n\n2020-06-08  Doron Behar  <doron.behar@gmail.com>\n\n\t* gitlab !14 (fixup): Completion/Linux/Command/_modutils:\n\tmodutils comp: Fix getting the value of kver from opt_args\n\n2020-06-07  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 45932: Etc/FAQ.yo: FAQ (3.1): Update ksh compatibility answer\n\tfor reserved word typeset.\n\n\t* 45933: Etc/FAQ.yo: FAQ: Add \"Why does my bash script report\n\tan error when I run it under zsh?\".\n\n\t* 45791 (tweaked): Etc/FAQ.yo, Util/zyodl.vim: FAQ: Explain\n\thow to binary search one's dotfiles\n\n\t* unposted: Etc/FAQ.yo: FAQ: Update section number in links to\n\tthe \"The future of zsh\" section.\n\n2020-06-06  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Etc/BUGS: Add users/24904 to Etc/BUGS (a process\n\tsubstitution / forking issue).\n\n2020-06-05  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 45985: Src/builtin.c: typeset: Fix leaving corrupted entries\n\tin paramtab\n\n2020-06-03  Yasuhiro KIMURA  <yasu@utahime.org>\n\n\t* 45950: configure.ac: Fix 'make install' in out-of-tree\n\ttarball builds.\n\n2020-06-01  Matthew Martin  <phy1729@gmail.com>\n\n\t* 45940: Completion/BSD/Command/_kdump,\n\tCompletion/BSD/Command/_ktrace,\n\tCompletion/BSD/Type/_ktrace_points: Add _kdump and _ktrace\n\tcompleters and supporting _ktrace_points type.\n\n\t* 45939: Completion/Linux/Command/_ionice,\n\tCompletion/Unix/Command/_lsof, Completion/Unix/Command/_pgrep,\n\tCompletion/Unix/Command/_renice, Completion/Unix/Type/_pgids:\n\tAdd _pgids type.\n\n2020-06-01  Doron Behar  <doron.behar@gmail.com>\n\n\t* gitlab !14: Completion/Linux/Command/_modutils: modutils\n\tcompletion: Fix getting the value of kver from opt_args\n\n2020-05-30  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 45915: Src/utils.c: fix handling of hyphens in spckword()\n\n2020-05-28  Yasuhiro KIMURA  <yasu@utahime.org>\n\n\t* 45934: Completion/Unix/Command/_subversion: Make 'svnliteadmin'\n\tcompleted same as 'svnadmin'\n\n2020-05-28  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Util/zyodl.vim: Highlight the word \"note\", like\n\tft=help does.\n\n\t* unposted: Util/zyodl.vim: Highlight yodl continuation line\n\tmarker\n\n\t* 45923 (with memory leak fixed, cf. 45924): Src/Modules/zprof.c,\n\tSrc/exec.c: zprof: Don't tally all anonymous functions as though\n\tthey were a single function named \"(anon)\".\n\n2020-05-23  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 45900: Src/lex.c, Test/D04parameter.ztst: Fix issues with\n\tescaped newline in $-substitution.\n\n2020-05-21  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 45884 (Oliver's, edited by me): Etc/BUGS: Add a few entries.\n\n2020-05-20  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 45862: Test/D04parameter.ztst: Add test cases for 45843#1\n\tand 45843#2, adapted from Aaron Esau and pws.\n\n2020-05-17  Eitan Adler <lists@eitanadler.com>\n\n\t* Eitan Adler: unposted: config.guess, config.sub: update to\n\t2020-04-26.\n\n2020-05-17  Matthew Martin  <phy1729@gmail.com>\n\n\t* 45831: Completion/Unix/Command/_vi: Add _vi completer.\n\n2020-05-16  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* users/24843: Doc/Zsh/compsys.yo: zshcompsys(1): Point to the\n\t'format' style from the 'tag-order' style.\n\n2020-05-12  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 45796: Src/subst.c, Test/D04parameter.ztst: Support\n\t${name:offset:length} with an empty offset\n\n2020-05-09: Eitan Adler <lists@eitanadler.com>\n\n\t* noraj: gitlab !13: Completion/Unix/Type/_tar_archive: libarchive and\n\tGNU tar can uncompress zstandard (zstd) based files\n\n2020-05-07: Eitan Adler <lists@eitanadler.com>\n\n\t* unposted: Completion/Unix/Type/_tar_archive: libarchive based\n\ttar can uncompress zip files\n\n2020-05-07  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Completion/Debian/Command/_dscverify,\n\tCompletion/Unix/Command/_pandoc: Use alternation patterns rather\n\tthan brace expansion\n\n2020-05-05  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 45764: Test/D07multibyte.ztst: Add a regression test for 45772.\n\tTest by Roman\n\n2020-05-05  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 45772: Src/params.c: Upon restoring locale variables, restore\n\tthe corresponding system settings.\n\n2020-05-23  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* unposted: Src/Builtins/rlimits.c: add a comment about how to\n\tadd a new resource.\n\n\t* 45614: Completion/Redhat/Command/_dnf: add support for several\n\tsubcommands and options.\n\n2020-05-03  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 45731: Completion/Debian/Command/_debsnap: New completion\n\tfunction.\n\n\t* 45730: Completion/Base/Utility/_arguments, Doc/Zsh/compsys.yo,\n\tSrc/Zle/computil.c, Src/utils.c, Test/Y03arguments.ztst:\n\t_arguments: Add the -0 flag, which makes $opt_args be populated\n\tsanely.\n\n\t* 45729: Src/Modules/curses.c, Src/Zle/compcore.c,\n\tSrc/Zle/computil.c, Src/builtin.c, Src/linklist.c: internal:\n\tAdd a second parameter to zlinklist2array(), analogously to\n\thlinklist2array().\n\n2020-05-02  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Util/zyodl.vim: Use 'conceal' for some macros that\n\texpand to a single character.\n\n\t* 45737 (+ docs, and update the test from 45722):\n\tDoc/Zsh/mod_zutil.yo, README, Src/Modules/zutil.c,\n\tTest/V05styles.ztst: zstyle: When determining the weight\n\t(specificity) of a pattern, consider the number of components\n\tbefore anything else, as documented.\n\n\t* unposted: Test/V05styles.ztst: Revert unintentional move\n\tfrom 45722.\n\n\t* 45739: Doc/Zsh/compsys.yo, Doc/Zsh/zftpsys.yo: docs:\n\tClarifications about zstyle patterns.\n\n\t* 45722: Doc/Zsh/mod_zutil.yo, V05styles.ztst: docs: Change\n\tzstyle example to a non-hierarchical one\n\n\t* 45752/0002: Completion/Unix/Command/_gcc: Complete --output\n\tlike -o.\n\n\t* 45752/0001: Completion/Unix/Command/_gcc: Add .cpp and .hpp\n\tto the ignored extensions list.\n\n2020-04-27  Benjamin Esham  <benjamin@esham.io>\n\n\t* github #56: Doc/Zsh/mod_zutil.yo: typo: Add a single quote\n\tthat had been missing\n\n2020-04-21  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: README: Give the 'zsystem flock' limit in\n\tpretty-printed form as well.\n\n2020-04-21  dana  <dana@dana.is>\n\n\t* github #54: davey hathorn: Completion/Unix/Command/_dig:\n\tFix dig completion error\n\n2020-04-20  dana  <dana@dana.is>\n\n\t* unposted: NEWS, README: Document zsh/system changes from\n\tworkers/45708\n\n\t* unposted: Doc/Zsh/mod_system.yo: Adjust documentation from\n\tworkers/45708\n\n\t* Cedric Ware: 45708: Doc/Zsh/mod_system.yo,\n\tSrc/Modules/system.c, Src/compat.c, Src/utils.c,\n\tTest/V14system.ztst: Enable sub-second timeout in zsystem flock\n\n\t* 45702: Doc/Zsh/compsys.yo: Improve documentation of\n\t{insert,separate}-sections\n\n2020-04-15  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 45684: Doc/Zsh/expn.yo: - glob qualifier behaviour in error\n\tcases.\n\n2020-04-12  dg1727  <dg1727@protonmail.com>\n\n\t* 45661: Doc/Zsh/params.yo: docs: Clarify the effect of\n\tKSH_ARRAYS on the (I) subscript.\n\n2020-04-09  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 45660: Src/builtin,c, Src/init.c: Delay initial setting of\n\tkeympa options until module system is active.\n\n2020-04-05  dana  <dana@dana.is>\n\n\t* 45655: Completion/Darwin/Type/_retrieve_mac_apps: Update\n\tsearch paths and Spotlight index check for recent macOS\n\n2020-04-05  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 45656: Etc/BUGS: Document the -o emacs segfault bug.\n\n2020-04-02  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 45142: Doc/Zsh/grammar.yo, Doc/Zsh/options.yo, Src/lex.c,\n\tSrc/options.c, Src/parse.c, Src/zsh.h, Test/E01options.ztst:\n\tAdd SHORT_REPEAT option\n\n2020-04-02  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Test/D02glob.ztst: Make test platform-independent.\n\n2020-04-01  dana  <dana@dana.is>\n\n\t* 45542: Test/P01privileged.ztst: Use test-directory owner for\n\tauto-determined EUID/EGID\n\n\t* unposted: Test/D02glob.ztst: Fix platform-dependent test\n\tfailure introduced by workers/45583\n\n2020-03-29  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 45649: Completion/Unix/Command/_unison: completion: Simplify\n\tUnison completion. No functional change.\n\n2020-03-29  Henri Menke  <henri@icp.uni-stuttgart.de>\n\n\t* 45646: Completion/Unix/Command/_unison: completion: Unison:\n\tHonour the $UNISON variable\n\n2020-03-28  Gastón Haro  <gaston.haro@fing.edu.uy>\n\n\t* github #46: Completion/Unix/Command/_git: _git-restore:\n\tComplete arguments to the --source option after a '=' sign\n\n2020-03-28  Gastón Haro  <harogaston@users.noreply.github.com>\n\n\t* github #46: Completion/Unix/Command/_git: Better restrict\n\tgit-restore(1) file completions\n\n2020-03-28  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 45644: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info git: Fix current patch's name in several cases.\n\n\t* unposted: Test/V07pcre.ztst: Fix syntax error introduced\n\tin 45591.\n\n\t* 45640: Test/B13whence.ztst: Fix new test when ${PWD}'s value\n\tcontains symlinks.\n\n2020-03-26  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 45627: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info git: Under git-am(1) conflicts, pass to the\n\tgen-applied-string hook information on already-applied patches.\n\n\t* 45625: Functions/VCS_Info/Backends/VCS_INFO_get_data_svn:\n\tvcs_info svn: Detect the \"working copy format is too new\" error.\n\n\t* 45626: Functions/VCS_Info/Backends/VCS_INFO_get_data_bzr,\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_p4,\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_svk,\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_svn,\n\tFunctions/VCS_Info/VCS_INFO_set-branch-format,\n\tFunctions/VCS_Info/vcs_info: vcs_info: Deduplicate calling the\n\tset-branch-format hook.\n\n\t* 45624: Functions/VCS_Info/Backends/VCS_INFO_get_data_fossil,\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_p4,\n\tFunctions/VCS_Info/VCS_INFO_bydir_detect: vcs_info: Set $rrn\n\tin all backends.\n\n\t* 45623: Completion/Unix/Command/_quilt: Add subcommand\n\tdescriptions\n\n\t* 45622: Completion/Unix/Command/_quilt: Categorize subcommands\n\n\t* 45584, 45620: Test/B12limit.ztst: zsh/rlimits: Skip the tests\n\tfor this module when it wasn't compiled in.\n\n\t* 45591 (Cf. 45587, 45620): Test/V01zmodload.ztst,\n\tTest/V07pcre.ztst: In the test suite, centralize testing that\n\tcompiled modules can be loaded successfully.\n\n2020-03-26  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 45616: Src/loop.c, Test/A01grammar.ztst: Remove tokens\n\tfrom count to repeat keyword.\n\n2020-03-25  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 45583/0008: Etc/BUGS, Src/utils.c, Test/B13whence.ztst:\n\tExtend tests to prove that what remains of xsymlinks() handles\n\tsymlink loops gracefully.\n\n\t* 45583/0007: Src/utils.c: Remove code that is now unreachable.\n\n\t* 45583/0006: Src/utils.c: Don't use xsymlinks() in 'whence -s'.\n\n\t* 45583/0005: Test/B13whence.ztst: Add a test for bin_whence's\n\tsymlinks resolution.\n\n\t* 45583/0004: Etc/BUGS, Src/utils.c, Test/D02glob.ztst: Fix\n\tsegfault on resolving symlink loops\n\n\t* 45583/0003: Src/hist.c, Src/subst.c: chrealpath: Let caller\n\tdecide how the return value should be allocated.\n\n\t* 45583/0002: Src/hist.c, Src/subst.c: chrealpath: Make symlink\n\tresolution optional.\n\n\t* 45583/0001: Test/D02glob.ztst: Add tests for the segfault on\n\tresolving a symlink loop bug (workers/45282).\n\n\t* 45590/0002 (in part): Test/B12limit.ztst: zsh/rlimits: Test\n\tthat ulimit letters are unique.\n\n2020-03-25  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 45601: Test/E02xtrace.ztst: fix one more return status\n\n2020-03-22  Rin Okuyama  <rokuyama.rk@gmail.com>\n\n\t* github #51: aczsh.m4, configure.ac: Fix configure for cross\n\tbuild.\n\n2020-03-22  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 45601: Test/E02xtrace.ztst: Fix status in new functions -T\n\ttest.\n\n\t* 45563: Src/utils.c: %z supplies zlong for errors and warnings.\n\n2020-03-22  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 45583/0009: README, Src/parse.c, Test/E02xtrace.ztst: Add\n\tend-of-options guard support to 'function -T'.\n\n\t* 45583/0008: Doc/Zsh/grammar.yo, README, Src/exec.c,\n\tSrc/parse.c, Test/E02xtrace.ztst: Add the 'function -T' syntax.\n\n\t* 45583/0007: Config/version.mk, Src/exec.c, Src/parse.c,\n\tSrc/text.c: WC_FUNCDEF: Add a placeholder element.\n\n\t* 45583/0006: Src/parse.c: internal: Add some comments for\n\torientation. No functional change.\n\n\t* 45583/0005: Src/parse.c: internal: Document the WC_FUNCDEF\n\tdata layout for anonymous functions with arguments (follow-up\n\tto 29492)\n\n\t* 45583/0004: Src/parse.c, Src/zsh.h: internal: Add some comments\n\taround wordcodes. No functional change.\n\n\t* 45583/0003: Src/parse.c, Src/zsh.h: internal: Add some comments\n\taround Eccstr. No functional change.\n\n\t* 45583/0002: Src/parse.c: internal: Reduce some variables'\n\tvisibility. No functional change.\n\n\t* 45583/0001: Src/exec.c: internal: Remove a redundant\n\tassignment.\n\n2020-03-20  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Src/Builtins/rlimits.c: Deconfuse $EDITOR's balanced\n\tbraces mode.  No functional change.\n\n\t* unposted: Doc/Zsh/expn.yo: ${(Z)}: Convert documentation to\n\ta description block.\n\n\t* unposted: Util/ztst-syntax.vim: internal: ztst.vim: Make\n\tsure syntax elements are only hidden if they're followed by\n\tsomething visible\n\n2020-03-18  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: .editorconfig: Specify tabs for Makefiles.\n\n2020-03-17  Daniel Shahaf  <danielsh@apache.org>\n\n\t* 45572: Completion/Linux/Command/_sshfs: Complete some more\n\toptions\n\n2020-03-17  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 45536: Src/utils.c: fix handling of 8bit character in\n\tis_wcs_nicechar() and wcs_nicechar_sel() under C-locale.\n\n2020-03-15  Daniel Shahaf  <danielsh@apache.org>\n\n\t* 45541: Functions/VCS_Info/test-repo-git-rebase-apply: internal:\n\tvcs_info git: Add a test case repository for rebase-apply\n\tsituations\n\n\t* 45539: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info git: In non-interactive rebases, obtain applied\n\tpatches' names.\n\n\t* 45540: Doc/Zsh/contrib.yo,\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_git: vcs_info git:\n\tIn non-interactive rebases, compute patch names for unapplied\n\tpatches.\n\n\t* 45543: Functions/VCS_Info/VCS_INFO_quilt, README: vcs_info\n\tquilt: Allow quiltcommand to be a function.\n\n\t* 45547: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info git: In interactive rebases, process\n\tgen-unapplied-string arguments like gen-applied-string arguments\n\tare processed.\n\n\t* 45546: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info git: In interactive rebases, properly support the full\n\tform of the \"exec\" verb.\n\n\t* 45545: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info git: In interactive rebases, ignore comment lines.\n\n2020-03-13  dana  <dana@dana.is>\n\n\t* unposted: Completion/Unix/Command/_git: Fix copy/paste error\n\tin earlier commit that broke `git stash drop`\n\n\t* 45535: Completion/Unix/Command/_lz4: Order compression levels\n\tnumerically\n\n\t* 45534: Completion/Darwin/Command/_hdiutil: Update image-file\n\textensions, image/disk formats, &c.\n\n\t* 45531: Completion/Unix/Command/_sh: Complete options more\n\taccurately\n\n\t* 45537 (tweaked per 45550, needs 45536): Test/E02xtrace.ztst:\n\tFix inconsistent function-name encoding in preserves-xtrace test\n\n2020-03-12  Daniel Shahaf  <danielsh@apache.org>\n\n\t* unposted: .editorconfig: Specify spaces rather than tabs for\n\tzsh scripts.\n\n2020-03-11  dana  <dana@dana.is>\n\n\t* 45470: Test/C02cond.ztst: Simplify '-N cond' test\n\n\t* 45424 (tweaked): Completion/Solaris/Command/_pfexec,\n\tCompletion/Unix/Command/_doas, Completion/Unix/Command/_su,\n\tCompletion/Unix/Command/_sudo, Completion/Zsh/Type/_command_names:\n\tAdd **/sbin to PATH when completing commands like sudo\n\n2020-03-10  Romain Porte  <debian@microjoe.org>\n\n\t* 45524: Completion/Debian/Command/_dscverify: Add completion\n\tfor dscverify(1) from Debian's devscripts.\n\n2020-03-09  Daniel Shahaf  <danielsh@apache.org>\n\n\t* 45518 + unposted tweak (change single quotes to double quotes):\n\tTest/V01zmodload.ztst: Fix V01zmotload.ztst test failures when\n\tzsh/parameter is dynamically linked (which is the default).\n\n2020-03-07  Daniel Shahaf  <danielsh@apache.org>\n\n\t* unposted: README: Move a new incompatibility notice.\n\n\t* unposted: Test/V01zmodload.ztst: Fix trailing whitespace in\n\ttest expectations.\n\n2020-01-29  Daniel Shahaf  <danielsh@apache.org>\n\n\t* 45342: Test/V01zmodload.ztst: Add tests for interaction\n\tbetween autoloadable parameters and module loading.\n\n2020-01-17  Daniel Shahaf  <danielsh@apache.org>\n\n\t* 45313: Completion/Unix/Command/_git: Support completion from\n\toutside of a worktree when --git-dir/--work-tree are specified\n\ton the command line\n\n2020-01-16  Daniel Shahaf  <danielsh@apache.org>\n\n\t* 45304: Src/loop.c, Test/A01grammar.ztst: Do execute the always\n\tblock even when the try/always block itself is the last command.\n\n2020-01-15  dana  <dana@dana.is>\n\n\t* 45292: Test/D02glob.ztst: Add regression test for macOS stat(2)\n\tmisbehaviour, now worked around by previous fix (see workers/42891)\n\n\t* Daniel: 45291: Src/glob.c, Test/D02glob.ztst: A glob with a\n\ttrailing slash will now match unreadable/unexecutable directories.\n\n2020-01-15  Daniel Shahaf  <danielsh@apache.org>\n\n\t* 45288: Completion/Unix/Command/_git: Complete bisect/new as\n\twell as bisect/bad.\n\n2020-01-06  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 45246: configure.ac: Make --disable-multibyte warn, since\n\tthe test suite fails in that configuration.\n\n2020-01-06  Daniel Shahaf  <danielsh@apache.org>\n\n\t* 45213: README, configure.ac: Make --enable-gdbm default to\n\tfalse, rather than default to true with an unavoidable warning.\n\n2019-12-26  Daniel Shahaf  <danielsh@apache.org>\n\n\t* unposted (follow-up to 45131): Test/E02xtrace.ztst: Extra\n\ttesting by Mikael\n\n\t* 45137: Src/Modules/zutil.c, Test/V13zformat.ztst: zformat:\n\tAllow the specifying minimum width and a dot with an empty\n\tmaximum width.\n\n\t* 45138: Src/Modules/zutil.c, Test/V13zformat.ztst: Add zformat\n\tunit tests.\n\n\t* 45131: Src/exec.c, Test/E02xtrace.ztst: Make a function that\n\tredefines itself preserve its tracedness.\n\n2020-03-06  Daniel Shahaf  <danielsh@apache.org>\n\n\t* unposted: Completion/BSD/Type/_obsd_architectures: Remove\n\t'sgi', as that OpenBSD port has been discontinued.\n\n2020-03-06  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 45509: Test/B01cd.ztst: Fix typos.\n\n\t* 45490 (+45495 and a test): .gitignore,\n\tSrc/Builtins/rlimits.awk, Src/Builtins/rlimits.c,\n\tSrc/Builtins/rlimits.mdd, Test/B12limit.ztst, configure.ac:\n\tRefactor rlimits.c.\n\n2020-03-05  Bryan Irvine  <sparctacus@gmail.com>\n\n\t* github #49: Completion/BSD/Type/_obsd_architectures: Fix typo:\n\tlongson should be loongson\n\n2020-02-27  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* users/24710: Src/exec.c, Src/jobs.c, Src/signals.c: when using\n\tkill or killpg to test for continued existince of a process\n\tgroup, check errono is ESRCH on failure as EPERM indicates\n\tprocesses exist but under a different UID.\n\n2020-02-27  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 45492: Test/D02glob.ztst: skip test added by users/24633 \n\ton Cygwin.\n\n2020-02-25  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 45488: Marc Cornella: Completion/bashcompinit: Need \"$@\"\n\tquoting for empty words in COMP_WORDS for bash completion.\n\n2020-02-24  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 45487: Src/Zle/zle_keymap.c, Src/Zle/zle_main.c,\n\tSrc/Zle/zle_move.c, Src/builtin.c, Src/compat.c, Src/utils.c:\n\tAdd missing mod_export for AIX compilation.\n\n2020-02-19  Daniel Shahaf  <danielsh@apache.org>\n\n\t* 45447: Completion/Zsh/Command/_zstyle,\n\tCompletion/Zsh/Function/_vcs_info,\n\tCompletion/Zsh/Type/_vcs_info_hooks: Complete vcs_info_hookadd\n\tand vcs_info_hookdel. Expose _vcs_info_hooks as a top-level\n\thelper function.\n\n2020-02-18  Chris Down  <chris@chrisdown.name>\n\n\t* 45463: Test/B11kill.ztst: test: kill: Document why we use\n\tSIGURG\n\n\t* 45453: Src/jobs.c, Test/B11kill.ztst: builtins: kill: Do not\n\tsignal current process group when pid is empty\n\n\t* 45452: Test/B11kill.ztst: builtins: kill: Add `kill ''`\n\tregression test with explicit sigspec\n\n\t* 45451: Test/B11kill.ztst: builtins: kill: Add basic test suite\n\n2020-02-17  brian m. carlson  <sandals@crustytoothpaste.net>\n\n\t* github #48/0002:\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_git: vcs_info git:\n\tproperly detect bare repositories\n\n\t* github #48/0001:\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_git: vcs_info git:\n\tavoid warnings in bare repositories\n\n2020-02-14  dana  <dana@dana.is>\n\n\t* unposted: Config/version.mk: Post-release version bump\n\n\t* unposted: Config/version.mk: Update for 5.8\n\n\t* Sam Foxman, Daniel Shahaf, dana: CVE-2019-20044: NEWS,\n\tREADME, Src/openssh_bsd_setres_id.c, Src/options.c, Src/zsh.mdd,\n\tSrc/zsh_system.h, Test/E01options.ztst, Test/P01privileged.ztst,\n\tTest/README, configure.ac: Fix insecure dropping of privileges\n\twhen unsetting PRIVILEGED option\n\n\t* unposted: Test/V01zmodload.ztst: Fix failing test from\n\tworkers/45385\n\n\t* 45423 (tweaked): Completion/Unix/Command/_su: Improve arg\n\thandling, shell look-ups\n\n2020-02-07  dana  <dana@dana.is>\n\n\t* unposted: Completion/Unix/Command/_zip: Recognise '--'\n\n2020-02-06  Daniel Shahaf  <danielsh@apache.org>\n\n\t* 45385: Test/V01zmodload.ztst: Add a test for 'zmodload -Fa'\n\tpreemptively disabling (\"blacklisting\"?) features.\n\n2020-02-06  dana  <dana@dana.is>\n\n\t* unposted: Config/version.mk: Update for 5.7.1-test-3\n\n\t* Roman Perepelitsa: 45382: Src/Modules/system.c: Fix infinite\n\tloop in sysread\n\n\t* Martin von Wittich: 45388 (tweaked):\n\tCompletion/Unix/Type/_diff_options: Restore -w completion lost\n\tin workers/43351\n\n2020-02-03  Daniel Shahaf  <danielsh@apache.org>\n\n\t* 45368: Test/B01cd.ztst, Test/D02glob.ztst: Add tests for\n\tworkers/45367's issue about double slashes in 'cd -P' and\n\t$PWD.\n\n2020-02-02  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 45373: Src/loop.c, Test/C03traps.ztst: ERR_EXIT failed on\n\tcommand substitution in else branch.\n\n2020-02-02  Daniel Shahaf  <danielsh@apache.org>\n\n\t* 45372: Etc/BUGS: Record a symlink loop bug involving :P\n\n2020-02-02  WGH  <wgh@torlan.ru>\n\n\t* 45365: Completion/Unix/Command/_git: Fix __git_recent_branches\n\tfor the case when a commit has an empty message\n\n2020-01-29  Daniel Shahaf  <danielsh@apache.org>\n\n\t* 45343: Src/exec.c, Src/math.c: Queue signals around arithmetic\n\tevaluations\n\n\t* 45344: INSTALL: Document where third-party completion functions\n\tshould be installed.\n\n2020-01-28  Daniel Shahaf  <danielsh@apache.org>\n\n\t* 45345: Util/ztst-syntax.vim: internal: ztst.vim: Fix\n\thighlighting of zsh comments in test payload\n\n2020-01-26  Daniel Shahaf  <danielsh@apache.org>\n\n\t* unposted: Src/init.c: internal: Add some comments and fix\n\tindentation.  No functional change.\n\n2020-01-23  Daniel Shahaf  <danielsh@apache.org>\n\n\t* 45340: Src/params.c: internal: Document the difference between\n\tparamtab and realparamtab.\n\n2020-01-19  Eitan Adler  <lists@eitanadler.com>\n\n\t* 45332: Completion/Unix/Command/_git: add completion for\n\tgit-version\n\n2020-01-19  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* unposted: _brace_parameter: add missing \\\n\n2020-01-16  Daniel Shahaf  <danielsh@apache.org>\n\n\t* 45305: Test/A01grammar.ztst: Add an XFail test: The\n\texec-last-command optimization is applied to try/always.\n\n\t* 45307: Doc/Zsh/mod_zutil.yo: zstyle docs: Unoverload a\n\tplaceholder variable name.\n\n\t* 45306: Doc/Zsh/mod_zutil.yo: zstyle docs: Introduce the first\n\tsynopsis in the same way as all others: with an item()().\n\n\t* unposted: Doc/Zsh/options.yo, Doc/Zsh/params.yo: docs: Fix\n\ta cross-reference.\n\n2020-01-15  Daniel Shahaf  <danielsh@apache.org>\n\n\t* 45287: Doc/Zsh/expn.yo: zshexpn: Describe parameter elision\n\tand add some introductory prose\n\n\t* 45302: Src/builtin.c: bin_umask(): Queue signals around\n\tumask().\n\n2020-01-14  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* users/24656: Doc/Zsh/mod_zutil.yo: docs: Add an example of\n\tsetting and querying zstyles\n\n2020-01-14  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* users/24659: Doc/Zsh/compsys.yo: Cross-reference use of\n\tmatcher and matcher-list with tag-order.\n\n2020-01-13  dana  <dana@dana.is>\n\n\t* 45296: Test/D02glob.ztst: Clean up after test from users/24633\n\n2020-01-13  Daniel Shahaf  <danielsh@apache.org>\n\n\t* 45290: Test/list-XFails: New helper script for listing\n\tXFail tests.\n\n2020-01-12  Daniel Shahaf  <danielsh@apache.org>\n\n\t* users/24633: Test/D02glob.ztst: Add an xfail test for\n\tusers/24619.\n\n2020-01-11  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* unposted: Completion/Unix/Command/_cat: additional typo fix\n\n\t* Eitan: 45280: Completion/Unix/Command/_git: add -local\n\tvariants to completed date formats\n\n2020-01-11  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* users/24628 (fixed up): Doc/Zsh/contrib.yo: Add example of how\n\tto bind word matching widget with a fixed style.\n\n2020-01-10  Daniel Shahaf  <danielsh@apache.org>\n\n\t* 45266: Completion/Linux/Command/_losetup: Fix losetup\n\tcompletion, broken in da085b7a20729401c725f91ae930200d0deda64f\n\t(41720).\n\n\t* unposted: Doc/Zsh/mod_zpty.yo: Fix punctuation.\n\n2020-01-10  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 45264: configure.ac: use /dev/fd on Cygwin for process\n\tsubstitution\n\n2020-01-09  Daniel Shahaf  <danielsh@apache.org>\n\n\t* unposted: Completion/Debian/Command/_sbuild,\n\tCompletion/Unix/Command/_growisofs: Two additional typo fixes.\n\n2020-01-09  Jens Schleusener  <Jens.Schleusener@fossies.org>\n\n\t* 45269: Completion/BSD/Command/_mixerctl,\n\tCompletion/Darwin/Command/_fs_usage,\n\tCompletion/Darwin/Type/_mac_files_for_application,\n\tCompletion/Debian/Command/_sbuild,\n\tCompletion/Linux/Command/_brctl,\n\tCompletion/Linux/Command/_findmnt,\n\tCompletion/Linux/Command/_ltrace,\n\tCompletion/Mandriva/Command/_urpmi,\n\tCompletion/Redhat/Command/_yum,\n\tCompletion/Unix/Command/_attr, Completion/Unix/Command/_git,\n\tCompletion/Unix/Command/_graphicsmagick,\n\tCompletion/Unix/Command/_iconv,\n\tCompletion/Unix/Command/_imagemagick,\n\tCompletion/Unix/Command/_links,\n\tCompletion/Unix/Command/_luarocks,\n\tCompletion/Unix/Command/_objdump, Completion/Unix/Command/_od,\n\tCompletion/Unix/Command/_pandoc, Completion/Unix/Command/_ping,\n\tCompletion/Unix/Command/_pkg-config,\n\tCompletion/Unix/Command/_postgresql,\n\tCompletion/Unix/Command/_rubber,\n\tCompletion/Unix/Command/_transmission,\n\tCompletion/Unix/Type/_baudrates,\n\tCompletion/Unix/Type/_path_files, Etc/FAQ.yo,\n\tFunctions/Zftp/zfautocheck, Misc/c2z, Src/Modules/curses.c,\n\tSrc/Modules/db_gdbm.c, Src/Modules/parameter.c, Src/Zle/comp.h,\n\tSrc/Zle/compcore.c, Src/Zle/compctl.c, Src/Zle/complete.c,\n\tSrc/Zle/compresult.c, Src/Zle/computil.c, Src/Zle/zle_keymap.c,\n\tSrc/Zle/zle_main.c, Src/Zle/zle_refresh.c, Src/pattern.c,\n\tSrc/zsh.h, Src/ztype.h, Test/B01cd.ztst, Test/D04parameter.ztst:\n\tFix misspellings in completions and elsewhere.\n\n2020-01-08  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 45272, 45273: Fix more typos.\n\n2020-01-08  dana  <dana@dana.is>\n\n\t* 45261: Completion/Unix/Command/_gcc: Detect clang-as-gcc\n\n2020-01-07  Daniel Shahaf  <danielsh@apache.org>\n\n\t* unposted: Test/X04zlehighlight.ztst: internal: Remove Vim\n\tmodeline that interferes with ztst.vim.\n\n\t* unposted: Util/ztst-syntax.vim: internal: ztst.vim: Use\n\t:syn-sync to work around (#x) and \"`\\\\\\\\\\\\\\\\`\" confusing the\n\thighlighting.\n\n\t* unposted: Util/zyodl.vim: internal: zyodl.vim: Support glob\n\tqualifiers in example()'s\n\n\t* unposted: Util/zyodl.vim: internal: zyodl.vim: Support yodl\n\tcomments.\n\n2020-01-07  Damien Thébault  <damien.thebault@gmail.com>\n\n\t* github #44: Completion/Unix/Command/_picocom: Allow completion\n\tfor picocom to list symlinks to character devices\n\n2020-01-06  dana  <dana@dana.is>\n\n\t* Eitan Adler: 45245: Completion/Unix/Command/_gcc: add some\n\tclang specific warnings\n\n2020-01-06  Daniel Shahaf  <danielsh@apache.org>\n\n\t* 45231: Completion/Unix/Command/_rsync: When completing remote\n\tmodules, ignore more of the motd.\n\n2020-01-05  dana  <dana@dana.is>\n\n\t* unposted: Completion/Unix/Command/_tac: Eliminate superfluous\n\tvariable\n\n\t* 45226 (with Daniel, 45223): Completion/Unix/Command/_man:\n\tImprove completion of file paths\n\n\t* 45184: Doc/Zsh/compsys.yo, Doc/Zsh/compwid.yo: Clarify\n\tdocumentation of %-sequences understood by compadd -[Xx]\n\n2020-01-05  Andrey Butirsky  <butirsky@gmail.com>\n\n\t* 45239: Functions/Newuser/zsh-newuser-install: Remove\n\t'appendhistory' from zsh-newuser-install\n\n2020-01-03  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 45218: Completion/Unix/Command/_swaks: add more options\n\n\t* 45196: Completion/Unix/Command/_make: fix completion after\n\tmake -C, allowing for -C being used multiple times\n\n2020-01-02  Daniel Shahaf  <danielsh@apache.org>\n\n\t* unposted (after 45183): Doc/Zsh/contrib.yo: Fix yodl error:\n\t\"contrib.yo:4457: No macro: back(...)\".\n\n\t* 45181: Src/glob.c, Test/D04parameter.ztst: Fix workers/45164:\n\t${(S)%%} will now consider the empty string as a potential match.\n\n2020-01-01  dana  <dana@dana.is>\n\n\t* Stephane: 45183: Doc/Zsh/builtins.yo, Doc/Zsh/contrib.yo,\n\tDoc/Zsh/expn.yo: Improve documentation examples\n\n2020-01-01  Daniel Shahaf  <danielsh@apache.org>\n\n\t* unposted: Test/D04parameter.ztst: Add some tests for ${(S)},\n\tincluding a regression test for workers/45164.\n\n\t* 45169/0002 (tweaked for trailing newlines): Etc/BUGS,\n\tTest/C03traps.ztst: Add an expected-to-fail test for\n\tworkers/44007.\n\n\t* 45169/0001: Test/B01cd.ztst, Test/ztst.zsh,\n\tUtil/ztst-syntax.vim: In the test suite, allow test cases to\n\tbe marked as expected to fail.\n\n2019-12-31  Daniel Shahaf  <danielsh@apache.org>\n\n\t* users/24582 + users/24583: Test/D04parameter.ztst,\n\tTest/Y01completion.ztst: Add regression tests for the previous\n\tcommit.\n\n2019-12-30  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* users/24581: Src/Zle/zle_tricky.c, Src/hist.c: Array assignments\n\tafter the first weren't parsed correctly by ${(z)...} or by\n\tcompletion.\n\n2019-12-31  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 45160: Doc/Zsh/expn.yo: zshexpn: Expand documentation\n\tof (S)\n\n2019-12-28  Sebastian Gniazdowski  <sgniazdowski@gmail.com>\n\n\t* 45150 + 45152: Doc/Zsh/expn.yo: zshexpn: Use a more minimal\n\texample in the documentation of (#b).\n\n2019-12-27  Daniel Shahaf  <danielsh@apache.org>\n\n\t* unposted: Test/B01cd.ztst, Util/ztst-ftplugin.vim,\n\tUtil/ztst-syntax.vim: internal: Vim ztst support: Add an ftplugin\n\tin addition to the syntax highlighter.\n\n2019-12-26  dana  <dana@dana.is>\n\n\t* 45130: Completion/Base/Utility/_multi_parts: Always pass -f\n\tto compadd if given by caller\n\n\t* unposted: Src/utils.c: Fix macro guard missed in previous\n\tcommit\n\n2019-12-26  Daniel Shahaf  <danielsh@apache.org>\n\n\t* unposted: Src/utils.c: internal: Allow %L in zerrmsg() in\n\tnon-debug builds, too.\n\n2019-12-23  Daniel Shahaf  <danielsh@apache.org>\n\n\t* unposted: Completion/Unix/Command/_stdbuf: Fix mismatch\n\tbetween the long options on the one hand, and the short options\n\tand descriptions on the other hand.\n\n2019-12-22  Daniel Shahaf  <danielsh@apache.org>\n\n\t* unposted: Test/B01cd.ztst, Util/ztst.vim: Fix broken build:\n\t45109 (!) broke Test/Y01completion.ztst.\n\n\t* 45110: Doc/Zsh/grammar.yo: zshmisc(1): Fix markup of \"try-list\"\n\tand \"always-list\".\n\n\t* 45111: Doc/Zsh/grammar.yo, Etc/BUGS, NEWS,\n\tTest/A01grammar.ztst: zshmisc(1): Clarify the documentation of\n\t'return' and 'exit' in conjunction with try/always\n\n\t* 45112: Doc/Zsh/mod_zutil.yo: zshmodules: Explicitly document\n\tthe return values of the 'zstyle' getters -s, -b, and -a.\n\n\t* 45113: Doc/Zsh/contrib.yo: vcs_info docs: Clarify documentation\n\tof the %p/%u/%a patch-format expandos.\n\n\t* 45114: Functions/VCS_Info/VCS_INFO_patch2subject: vcs_info\n\tquilt: Improve support for svn-style patch headers.\n\n\t* 45115: Misc/vcs_info-examples: vcs_info examples: Make the\n\tquilt-patch-dir example friendlier.\n\n\t* 45116: Misc/vcs_info-examples: vcs_info examples: Add an\n\texample of showing Git environment variables.\n\n\t* 45107: Test/ztst.vim: Highlight some more special variables\n\n\t* 45108: Test/ztst.vim: Conceal the '>' or '?' on pattern\n\texpected output / expected errput lines.\n\n\t* 45109: Test/B01cd.ztst, Test/ztst.vim, Util/zyodl.vim: Add\n\tVim highlighting file for Test/*.ztst files.\n\n2019-12-21  dana  <dana@dana.is>\n\n\t* unposted: Config/version.mk: Update for 5.7.1-test-2\n\n\t* 45101: Etc/creating-a-release.txt: Adjust white space\n\n\t* 45101 (tweaked per 45104): Etc/creating-a-release.txt:\n\tDocument new dev/test versioning scheme, clarify other release\n\tsteps. New versioning scheme not to be used until after 5.8\n\n2019-12-21  Daniel Shahaf  <danielsh@apache.org>\n\n\t* unposted: Test/A01grammar.ztst: Group related tests.\n\tNo functional change.\n\n\t* unposted: Etc/BUGS: Add two bugs discussed on -workers@\n\tthis week\n\n2019-12-20  dana  <dana@dana.is>\n\n\t* 45055: Doc/Zsh/compsys.yo: Clarify _files documentation\n\n2019-12-18  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 45083: Src/exec.c: execarith() needs signal protection as\n\tit sets variables.\n\n2019-12-18  Daniel Shahaf  <danielsh@apache.org>\n\n\t* 45076: Src/loop.c: internal: Simplify handling of\n\ttry_tryflag. No functional change.\n\n\t* 45066: Src/builtin.c, Src/exec.c, Src/params.c: internal:\n\tDocument forklevel, locallevel, and exit_pending.\n\n\t* 45065: Src/Makefile.in: Make 'make -s' print nothing when it\n\tdoes nothing.\n\n\t* 45064: Src/utils.c: Fix the mktemp() warning, in debug\n\tbuilds only.\n\n\t* 45073: Doc/Zsh/contrib.yo: regex-replace docs: Simplify grammar\n\t(avoid a double negative, state defaults first).\n\n2019-12-17  Daniel Shahaf  <danielsh@apache.org>\n\n\t* 45058: Src/Modules/zpty.c, Src/Zle/zle_main.c, Src/builtin.c,\n\tSrc/exec.c, Src/init.c, Src/signals.c, Src/subst.c, Src/zsh.h:\n\tinternal: Add symbolic names to possible values of zexit()'s\n\t\"from_where\" parameter. No functional change.\n\n\t* unposted: Src/builtin.c: Update comment to reflect variable\n\trename in 41012 (zsh-5.3.1-182-gd7110d8f0).\n\n2019-12-16  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 44698, 45000: Baptiste BEAUPLAT: Completion for sbuild\n\n\t* github #36: Aurélien Olivier: Add completion file for GNU Stow\n\n\t* 45035: Doc/Zsh/zle.yo: be explicit about the need for\n\ta # in colours specified as hex triplets\n\n2019-12-15  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 45025: Src/exec.c: fix re-entrancy problem with memory\n\tmanagement in readoutput().  This could cause a signal\n\treceived during $(...) to corrupt memory.\n\n2019-12-14  dana  <dana@dana.is>\n\n\t* unposted: Config/version.mk, Etc/FAQ.yo, README: Update for\n\t5.7.1-test-1\n\n2019-12-12  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Martijn: 45009: Src/builtin.c, Doc/Zsh/builtins.yo,\n\tDoc/Zsh/options.yo: POSIX_CD needs to suppress special\n\tuse of options so that POSIX-allowed argument forms work as\n\texpected.\n\n\t* 45001: Src/glob.c, Test/D04parameter.ztst: ${...%...} didn't\n\ttest for zero-length matches, which should be preferred where\n\tpossible.\n\n2019-12-11  Martijn Dekker  <martijn@inlv.org>\n\n\t* 45004: Src/builtin.c, Src/compat.c, Src/exec.c, Src/glob.c,\n\tSrc/hashtable.c, Src/hist.c, Src/init.c, Src/jobs.c,\n\tSrc/lex.c, Src/main.c, Src/mem.c, Src/module.c, Src/params.c,\n\tSrc/parse.c, Src/pattern.c, Src/prompt.c, Src/subst.c,\n\tSrc/text.c, Src/watch.c, Src/zsh.h, Test/A02alias.ztst,\n\tTest/C01arith.ztst, Test/C02cond.ztst, Test/D03procsubst.ztst,\n\tTest/D06subscript.ztst, Test/D08cmdsubst.ztst,\n\tTest/E01options.ztst, Test/V10private.ztst: Fix typos in comments\n\n\t* 45003: Etc/FAQ.yo, Etc/zsh-development-guide,\n\tFunctions/Prompts/prompt_oliver_setup,\n\tFunctions/Zle/insert-composed-char, NEWS, README: Fix more\n\tdocumentation typos\n\n2019-12-10  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 44997: Src/Zle/compctl.c: prefix needed extra munging for\n\thyphen with GLOB_COMPLETE in compctl.\n\n2019-12-04  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 44976: Src/Zle/zle_main.c: describe-key-briefly in visual mode\n\n\t* Sebastian: 44970: Completion/Zsh/Context/_brace_parameter:\n\tUpdate the description of S flag\n\n2019-12-04  Martijn Dekker  <martijn@inlv.org>\n\n\t* 44981: Doc/Zsh/cond.yo, Doc/Zsh/contrib.yo, Doc/Zsh/expn.yo,\n\tDoc/Zsh/mod_mapfile.yo, Doc/Zsh/mod_parameter.yo,\n\tDoc/Zsh/params.yo, Doc/intro.ms: Fix some typos in the\n\tdocumentation.\n\n2019-12-03  Daniel Shahaf  <danielsh@apache.org>\n\n\t* 44960: Functions/VCS_Info/Backends/VCS_INFO_get_data_cvs:\n\tvcs_info cvs: Fix infinite loop when /CVS exists.\n\n\t* 44961: Functions/VCS_Info/Backends/VCS_INFO_get_data_svn:\n\tvcs_info svn: Fix infinite loop when /.svn exists.\n\n\t* 44962: Functions/VCS_Info/VCS_INFO_bydir_detect,\n\tFunctions/VCS_Info/vcs_info: vcs_info: Document internal function\n\tand variable\n\n\t* 44964: Doc/Zsh/redirect.yo: zshmisc(1): Document APPEND_CREATE\n\tunder the append redirection operators, >> and >>!.\n\n2019-12-02  dana  <dana@dana.is>\n\n\t* 44969: Etc/completion-style-guide: Mention defaults and\n\tsuperfluous descriptions\n\n\t* unposted (cf. 44967): Completion/Linux/Command/_alsa-utils:\n\tFix minor syntax error in arg spec\n\n2019-12-02  Daniel Shahaf  <danielsh@apache.org>\n\n\t* unposted: Misc/vcs_info-examples: vcs_info: Add an example\n\tof using $functions to find hooks by name.\n\n2019-12-01  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* unposted: Completion/Unix/Command/_killall: another place\n\tto complete selinux contexts that was missed in 44781\n\n\t* 44968: Completion/Unix/Command/_objdump,\n\tCompletion/Unix/Command/_readelf: cleanup and update objdump\n\tand readelf completions\n\n\t* Sebastian: 44967: Completion/Linux/Command/_alsa-utils:\n\tCompletion for aplay from alsa-utils\n\n2019-12-01  Daniel Shahaf  <danielsh@apache.org>\n\n\t* unposted: Src/Modules/zutil.c, Test/V05styles.ztst: zstyle:\n\tAdd a unit test and some comments.\n\n\t* unposted: Completion/Unix/Command/_sqlite: Fix syntax error\n\n2019-11-30  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 44958: Functions/VCS_Info/VCS_INFO_quilt, README: vcs_info\n\tquilt: Avoid forks\n\n\t* 44945: Functions/VCS_Info/Backends/VCS_INFO_detect_git:\n\tvcs_info git: Optimize detection by running fewer external\n\tcommands.\n\n2019-11-29  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 44948: Completion/Unix/Command/_subversion: Make\n\t_svn_controlled offer everything rather than nothing.\n\n\t* 44947: Completion/Unix/Command/_subversion: Complete the\n\t'auth', 'changelist', 'patch', 'resolve', and 'x-unshelve'\n\tsubcommands.\n\n\t* 44946: Completion/Unix/Command/_subversion: Make _svn_conflicts\n\tnot offer all files in the directory.\n\n2019-11-26  Wayne Davison  <wayned@users.sourceforge.net>\n\n\t* 44912: Completion/Base/Completer/_expand: Don't set done_quote=1\n\tif the glob result is empty.  Fixes more cases of missing quotes.\n\n2019-11-24  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 44923: Completion/Unix/Command/_git: update options for 2.24\n\n\t* 44896: Completion/Unix/Command/_make: use opt_args to find\n\tbase directory and use it for $(CURDIR)\n\n2019-11-19  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* users/24451: Src/compat.c: zgetcwd: Add a guard against\n\treturning an empty string.\n\n\t* unposted: Test/W01history.ztst: Add smoke test for :P history\n\tmodifier.\n\n2019-11-18  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* users/24445: Src/hist.c: Add missing support for :P to history\n\tcode (was already present in glob qualifiers and variables).\n\n2019-11-11  skirit  <skirit@dump.cz>\n\n\t* unposted (salsa.debian.org MR!1): Completion/Unix/Command/_ip:\n\tComplete the -brief option\n\n2019-11-08  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Doc/Zsh/compsys.yo: _values: Use the formal\n\tparameter's name in the docstring.\n\n2019-11-07  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 44897: Completion/Unix/Command/_subversion: Complete\n\t--show-item=changelist\n\n2019-11-06  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 44895: Completion/Solaris/Command/_svccfg: complete options\n\tfor state change notifications and other improvements\n\n\t* Eitan Adler: 44882: Completion/Unix/Command/_gcc: add\n\tcompletion of -save-stats flag\n\n\t* unposted: Completion/Base/Utility/_sequence: fix missing local\n\tdeclarations\n\n2019-10-29  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* github #41: Sebastian: Extend _dbus with dbus-launch completion\n\n\t* unposted: Completion/Unix/Command/_zfs: tweak to check for\n\topenzfs rather than Solaris\n\n\t* github #40: Teddy Heinen: Completion/Unix/Command/_zfs:\n\tadjust zfs completion to use acltype on linux instead of aclmode\n\n2019-10-28  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 44864: Src/jobs.c: Avoid infinite loop in interactive mode\n\twhen trying to grab terminal.  Fail after 100 goes (arbitrary\n\tchoice).\n\n\t* Sebastian: 44865: configure.ac: Try harder to link in curses\n\teven if not needed for termcap variables.\n\n2019-10-18  dana  <dana@dana.is>\n\n\t* 44846: Completion/Unix/Type/_dates: Fix regression caused by\n\tworkers/44274\n\n2019-10-18  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* c.f. 44831: Completion/Linux/Command/_tpconfig,\n\tCompletion/Unix/Command/_elm, Completion/Unix/Command/_flasher,\n\tCompletion/Unix/Command/_prcs, Completion/Unix/Command/_raggle,\n\tCompletion/Unix/Command/_uzbl, Completion/Unix/Command/_vux,\n\tCompletion/Unix/Command/_sablotron: remove completion functions\n\tfor long dead projects\n\n\t* c.f. 44831: Completion/Unix/Command/_notmuch,\n\tCompletion/Unix/Command/_hg, Completion/X/Command/_zathura:\n\tremove completion functions included in upstream projects\n\n\t* 44849: Completion/Unix/Command/_dhclient,\n\tCompletion/Unix/Command/_date, Completion/Unix/Command/_grep,\n\tCompletion/Unix/Command/_ssh, Completion/BSD/Command/_vmctl:\n\tcompletion updates for changes in OpenBSD 6.6\n\n2019-10-16  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* _RuRo_ (Андрей Стоцкий): 44841: Src/exec.c: Better error\n\tchecking of nice, since return value can be negative.\n\n2019-10-14  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 44812: Completion/Unix/Command/_subversion: Fix syntax error\n\tin 44726/0001\n\n\t* 44809: Completion/Zsh/Command/_typeset: Complete 'functions -c'\n\n2019-10-12  dana  <dana@dana.is>\n\n\t* 44767: Completion/Base/Core/_description: Ignore -J\n\n\t* 44681 (tweaked): Completion/Unix/Command/_composer: Eliminate\n\tquestionable eval, fix quoting issue\n\n2019-10-10  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Src/builtin.c: functions -c: Fix typo\n\n2019-10-04  Roman Perepelitsa  <roman.perepelitsa@gmail.com>\n\n\t* 44784: Src/Zle/zle_main.c: Fix infinite loop when TTY\n\tdisappears\n\n2019-10-02  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 44797: Completion/Unix/Command/_git: _git-config: Complete\n\tunknown options from 'git help -c'.\n\n2019-10-01  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 44800: Completion/Unix/Command/_tmux: complete tmux formats\n\n\t* 44799: Completion/Unix/Command/_pv: new pv completion\n\n\t* 44798: Completion/Unix/Command/_netstat,\n\tCompletion/Linux/Command/_strace, Completion/X/Command/_xterm\n\tCompletion/Linux/Command/_kpartx, Completion/Linux/Command/_ss,\n\tCompletion/Linux/Command/_btrfs, Completion/X/Command/_xrandr,\n\tCompletion/Unix/Command/_gnutls, Completion/Unix/Command/_make,\n\tCompletion/Unix/Command/_xargs, Completion/Unix/Type/_ld_debug:\n\tcompletion option update\n\n2019-09-30  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 44783, 44791: Completion/Solaris/Command/_dladm,\n\tCompletion/Unix/Command/_dsh, Completion/Unix/Command/_ssh,\n\tCompletion/Unix/Command/_ansible: mark some repeatable\n\toptions with * in the _arguments specs\n\n\t* 44788: Completion/Redhat/Command/_rpm: handle newer rpm\n\tcommands like rpmkeys, rpmsign and update options\n\n2019-09-26  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 44782: Completion/BSD/Command/_pkgin,\n\tCompletion/Unix/Command/_avahi: new completions\n\n\t* Gautam Iyer: gitlab !9: Completion/Unix/Command/_seafile:\n\tRudimentary seafile client completion\n\n\t* Doron Behar: gitlab !11: Completion/Unix/Command/_luarocks:\n\tFix/improve logic of cache validation\n\n\t* 44781: Completion/Linux/Type/_selinux_contexts,\n\tCompletion/Linux/Type/_selinux_roles,\n\tCompletion/Linux/Type/_selinux_types,\n\tCompletion/Linux/Type/_selinux_users,\n\tCompletion/Linux/Command/_chcon, Completion/Unix/Command/_cp,\n\tCompletion/Unix/Command/_find, Completion/Unix/Command/_install,\n\tCompletion/Unix/Command/_mkdir, Completion/Unix/Command/_mkfifo,\n\tCompletion/Unix/Command/_mknod, Completion/Unix/Command/_sudo:\n\tadd completion of SELinux contexts\n\n\t* 44780: Completion/Unix/Command/_getent: add completion to\n\tgetent for the utmpx key on FreeBSD.\n\n\t* 44779: Completion/Unix/Command/_git: completion for new\n\tgit switch and git restore commands\n\n2019-09-24  Bart Schaefer  <schaefer@zsh.org>\n\n\t* unposted (see 44772): Functions/Zle/bracketed-paste-magic:\n\tquote the string argument to zle -U\n\n2019-09-20  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 44768: Completion/Unix/Command/_tar: improve completion of\n\tlong options\n\n2019-09-18  Tobias Schulte  <tobias.schulte@gliderpilot.de>\n\n\t* github #38: Completion/Unix/Command/_git: fix completion text\n\tfor git update-index --chmod\n\n2019-09-06  Daniel Hahler  <zsh@thequod.de>\n\n\t* 44722: Completion/Unix/Command/_make: use --always-make\n\tinstead of .PHONY for GNU make.\n\n2019-09-04  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 44726/0002: Completion/Unix/Command/_subversion: Update\n\t--show-item= completion to 1.12.0.\n\n\t* 44726/0001: Completion/Unix/Command/_subversion: Use\n\t'svn help -v' to show global options, experimental options,\n\tand experimental subcommands (upstream issue SVN-4828, to be\n\treleased in Subversion 1.13.0)\n\n2019-09-04  Ned Batchelder  <ned@nedbatchelder.com>\n\n\t* github #37: Doc/Zsh/builtins.yo: Make it easier to understand\n\twhat \"fc -e\" does.\n\n2019-08-29  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 44714 (tweaked): Src/utils.c: Take account of CDABLE_VARS\n\twhile checking spelling\n\n2019-08-28  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 44710: Src/Builtins/rlimits.awk, Src/Builtins/rlimits.c,\n\tconfigure.ac: support RLIMIT_UMTXP on FreeBSD\n\n\t* 44709: Src/zsh_system.h: incluce sys/capability.h only if\n\tHAVE_CAP_GET_PROC is defined\n\n2019-08-27  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Sebastian: 44712: configure.ac: prefer any form of ncurses to\n\tother terminal library as we rely on its features to provide\n\tmodules.\n\n2019-08-19  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 44614: Completion/Debian/Command/_apt: apt list option completion\n\n\t* Lajos Koszti: 44633: Completion/Unix/Command/_ansible:\n\tcomplete ansible-vault actions like create, edit, etc.\n\n\t* 44587: Completion/Linux/Command/_btrfs,\n\tCompletion/Linux/Command/_networkmanager,\n\tCompletion/Linux/Command/_ss, Completion/Linux/Command/_sshfs,\n\tCompletion/Linux/Command/_strace, Completion/Unix/Command/_ansible,\n\tCompletion/Unix/Command/_awk, Completion/Unix/Command/_gcore,\n\tCompletion/Unix/Command/_gnutls, Completion/Unix/Command/_ifconfig,\n\tCompletion/Unix/Command/_less, Completion/Unix/Command/_ln,\n\tCompletion/Unix/Command/_lsof, Completion/Unix/Command/_mpc,\n\tCompletion/Unix/Command/_rclone, Completion/Unix/Command/_sqlite,\n\tCompletion/Unix/Command/_tmux: completion option updates\n\n2019-08-17  dana  <dana@dana.is>\n\n\t* 44675: Completion/Unix/Command/_find: Fix return status\n\n\t* unposted: NEWS: Mention `functions -c`\n\n2019-08-14  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 44664: Src/params.c, Test/D04parameter.ztst: Ensure\n\ttemporary assignment around builtin in function doesn't\n\ttrash global variable.\n\n2019-08-03  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 44635: Src/exec.c: don't apply STAT_NOPRINT to backgrounded\n\tjobs.\n\n2019-08-03  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 44637: Shlomi Fish: Src/makepro.awk: \"=\" doesn't need quoting\n\tin awk regexp and can cause warnings.\n\n2019-07-30  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Eric Cook: 24102: Completion/Unix/Command/_user_admin: subuids\n\t/ subgids completion.\n\n2019-07-26  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Kamil: 44582: Src/Zle/zle_utils.c: update to foregoing to\n\tuse DPUTS() properly.\n\n2019-07-24  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Kamil: 44566: Src/Zle/zle_utils.c: make failed searches of\n\thistory in Zle robust.\n\n2019-07-19  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 44356: Completion/Unix/Command/_ansible: complete ansible\n\tcallback plugins for the relevant environment variable's value\n\n\t* 44551: Completion/Unix/Command/_git: update for new git changes\n\n2019-07-16  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 44523: Test/Makefile.in: allow ZTST_handler to be something\n\tother than runtests.zsh to accommodate alternative test modes.\n\n2019-07-15  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 44509: Src/params.c: Prevent crash with modified PATH / path\n\tcombination in function.\n\n2019-07-10  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 44505: Functions/Chpwd/zsh_directory_name_generic: Longest\n\tprefix matching was broken if there were suffixes indicating\n\tfurther handling.\n\n2019-07-09  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* unposted: Etc/FAQ.yo: typo. also updates to outdated notes on\n\tmultibyte support.\n\n2019-07-08  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 43755: Functions/Zle/smart-insert-last-word: (Belated commit)\n\tFix state management for repeat uses to avoid clobbering command\n\tline when NOT a repeat\n\n\t* 44502: Src/builtin.c: Quote function name for \"autoload -X\"\n\n\t* 44495: Doc/Zsh/params.yo: Mention coproc under $!\n\n2019-07-08  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* users/24030: Etc/FAQ.yo: Note that *.{bla,hbl,ahb} is an\n\texpansion, not a pattern match, and what to do instead.\n\n2019-07-02  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 44480: Doc/Zsh/mod_socket.yo, Doc/Zsh/mod_system.yo,\n\tDoc/Zsh/redirect.yo, Src/Modules/system.c, Src/exec.c:\n\tDon't automatically close FDT_EXTERNAL file descriptors.\n\tAll sysopen-created fd's become FDT_EXTERNAL.  =(...)\n\tcalls closem() consistent with other substitutions.\n\n2019-07-01  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Martijn: 44469: Src/builtin.c, Test/B10getopts.ztst: correct\n\terror on missing option argument.\n\n2019-06-24  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 44446: Src/parse.c, Test/A04redirect.ztst: fix here document\n\twith file descriptor declarator.\n\n2019-06-23  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* Martijn: 44443: Src/builtin.c: POSIX allows exporting readonly\n\tvariables.\n\n2019-06-20  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 44435: Doc/Zsh/expn.yo, NEWS, README, Src/Zle/compctl.c,\n\tSrc/glob.c, Src/hist.c, Src/subst.c, Test/D02glob.ztst,\n\tTest/D04parameter.ztst, Test/W01history.ztst: Handle\n\ttrailing digit arguments of :t and :h modifiers.\n\n2019-06-19  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Roman Perepelitsa: 44430: Src/prompt.c: various problems with\n\tcountprompt() including wide characters, split tabs and trailing\n\tMeta characters.\n\n2019-06-10  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Eitan Adler: 44409: config.guess, config.sub: update to\n\t2019-05-28.\n\n2019-06-06  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* Stephane (44387, edited): Doc/Zsh/restricted.yo: Describe some\n\tproblems with restricted mode.\n\n2019-06-03  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 44389: Completion/BSD/Type/_bsd_disks,\n\tCompletion/BSD/Type/_fbsd_device_types,\n\tCompletion/Unix/Command/_iostat, Completion/Unix/Command/_vmstat:\n\tupdate _iostat and _vmstat for BSD\n\n2019-05-28  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 44361: Src/pattern.c: Ensure variables used recursively are\n\tinitialised in pattern matching.\n\n2019-05-28  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Jim Murphy: 44364: Doc/Zsh/intro.yo: refer to main zsh page in\n\tzshall doc.\n\n2019-05-23  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* unposted: Completion/Linux/Command/_iptables: remove spurious\n\treference to nonexistent completion function\n\n\t* 44349: Completion/Linux/Command/_cryptsetup,\n\tCompletion/X/Command/_x_utils, Completion/Linux/Command/_lsblk,\n\tCompletion/Linux/Command/_ss, Completion/Linux/Command/_valgrind,\n\tCompletion/Linux/Command/_strace, Completion/Unix/Command/_bash,\n\tCompletion/Unix/Command/_dhclient, Completion/Unix/Command/_dig,\n\tCompletion/Unix/Command/_entr, Completion/Unix/Command/_env,\n\tCompletion/Unix/Command/_gem, Completion/Unix/Command/_gnutls,\n\tCompletion/Unix/Command/_links, Completion/Unix/Command/_nm,\n\tCompletion/Unix/Command/_objdump, Completion/Unix/Command/_ruby,\n\tCompletion/Unix/Command/_sed, Completion/Unix/Command/_sqlite,\n\tCompletion/Unix/Command/_ssh, Completion/Unix/Command/_tiff,\n\tCompletion/Unix/Command/_tree, Completion/Unix/Command/_wget,\n\tCompletion/Linux/Command/_ethtool: completion option updates\n\n\t* 44345: Src/text.c, Test/A01grammar.ztst: fix wordcode traversal\n\twhere ! without a following command could result in a crash\n\n2019-05-20  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 44307: Src/exec.c, Src/init.c, Src/params.c, Src/utils.c:\n\tallow for atoi() returning a negative number\n\n\t* 44308: Completion/Linux/Command/_modutils: update Linux\n\tmodutils completion\n\n2019-05-14  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 44284: Src/builtin.c: combination of -T and -p to typeset\n\tcrashed the shell.\n\n\t* 44290: Src/jobs.c: job number exceeding int range and wrapping\n\tto a negative number crashed the shell.\n\n\t* 44291: Src/builtin.c: printf with argument specifier out of\n\trange for an int crashed the shell.\n\n2019-05-14  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 44296: Src/parse.c, Test/B02typeset.ztst: \"typeset Q= {X}\"\n\tcrashed the shell.\n\n2019-05-13  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 44259: Src/signals.c: Ensure we can set signal to default\n\teven if it was ignored on entry to the shell.\n\n2019-05-08  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 44279: Completion/BSD/Command/_cu, Completion/BSD/Command/_gstat,\n\tCompletion/BSD/Command/_procstat, Completion/BSD/Command/_signify,\n\tCompletion/BSD/Command/_sockstat, Completion/BSD/Command/_vmctl,\n\tCompletion/Unix/Command/_arp, Completion/Unix/Command/_arping,\n\tCompletion/Unix/Command/_cp, Completion/Unix/Command/_date,\n\tCompletion/Unix/Command/_gcore, Completion/Unix/Command/_install,\n\tCompletion/Unix/Command/_ls, Completion/Unix/Command/_netstat,\n\tCompletion/Unix/Command/_ping, Completion/Unix/Command/_script,\n\tCompletion/Unix/Command/_tcpdump, Completion/Unix/Command/_top,\n\tCompletion/Unix/Command/_vmstat, Completion/Unix/Command/_zpool:\n\tcompletion updates for Dragonfly 5.4, FreeBSD 12 and OpenBSD 6.5\n\n2019-05-08  dana  <dana@dana.is>\n\n\t* unposted: Test/Y01completion.ztst: Fix bad encoding\n\n\t* Oliver Kiddle: unposted: Test/Y01completion.ztst: Add compset tests\n\trelated to workers/44275\n\n\t* 44275: Doc/Zsh/compwid.yo, Src/Zle/complete.c: Fix compset -p/-s\n\tmultibyte inconsistency and documentation\n\n2019-05-07  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 44274: Completion/Base/Core/_description,\n\tCompletion/Base/Utility/_describe, Completion/Base/Utility/_guard,\n\tCompletion/Base/Utility/_multi_parts,\n\tCompletion/Base/Utility/_sep_parts,\n\tCompletion/Base/Utility/_sequence, Completion/Zsh/Command/_compadd,\n\tCompletion/Darwin/Type/_mac_files_for_application,\n\tCompletion/Redhat/Command/_yum, Completion/Unix/Command/_git,\n\tCompletion/Unix/Type/_canonical_paths,\n\tCompletion/Unix/Type/_baudrates, Completion/Unix/Type/_files,\n\tCompletion/Unix/Type/_list_files, Completion/Unix/Type/_path_files,\n\tCompletion/Zsh/Type/_file_descriptors,\n\tDoc/Zsh/compsys.yo, Doc/Zsh/compwid.yo, NEWS,\n\tSrc/Zle/comp.h, Src/Zle/compcore.c, Src/Zle/complete.c:\n\tallow finer control of completion match sorting with\n\targuments to compadd's -o option\n\n\t* Gautam Iyer: gitlab !6: Completion/Unix/Command/_rclone:\n\tRudimentary rclone completion\n\n2019-05-06  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* Gautam Iyer: gitlab !7: Completion/Unix/Command/_lp,\n\tCompletion/X/Command/_gv: Minor fixes to lp and gv completion\n\n\t* Doron Behar: gitlab !8: Completion/Unix/Command/_luarocks:\n\tSupport completion of installed lua rocks' versions\n\n\t* Doron Behar: gitlab !4: Completion/Unix/Command/_pandoc:\n\tAdd pandoc completion\n\n\t* Doron Behar: gitlab !3: Completion/Unix/Command/_transmission:\n\tTransmission remote completion\n\n\t* Aurélien Olivier: github #33: Completion/Unix/Command/_myrepos:\n\tAdd completion file for myrepos (mr)\n\n\t* Laurent Arnoud: github #35: Completion/Unix/Command/_gem:\n\tfix _arguments spec for gem push completion (tweaked)\n\n2019-05-03  dana  <dana@dana.is>\n\n\t* 44267: Src/sort.c, Test/Y01completion.ztst: Restore option to\n\tignore backslashes when sorting\n\n2019-05-03  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 44271: Src/loop.c, Test/A01grammar.ztst: until with positive\n\tand while with negative status propagated breaks too far after a\n\treturn, causing code in enclosing scope not to run.\n\n2019-04-26  dana  <dana@dana.is>\n\n\t* 44234: Completion/Unix/Command/_ssh: Update for OpenSSH 8.0\n\n\t* 44249: Completion/Unix/Command/_mv,\n\tCompletion/Unix/Command/_rmdir,\n\tCompletion/Unix/Type/_directories: Handle zsh/files built-ins\n\tin _mv and _rmdir\n\n\t* 44250: Completion/Unix/Command/_chmod,\n\tCompletion/Unix/Command/_chown, Completion/Unix/Command/_ln,\n\tCompletion/Unix/Command/_mkdir, Completion/Unix/Command/_mv,\n\tCompletion/Unix/Command/_rm, Completion/Unix/Command/_rmdir:\n\tFix use of -A and -S options to _arguments\n\n\t* 44251: Completion/Unix/Command/_chmod,\n\tCompletion/Unix/Command/_chown, Completion/Unix/Command/_mkdir,\n\tCompletion/Unix/Command/_mv, Completion/Unix/Command/_rmdir:\n\tFix various wording issues\n\n2019-04-25  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 44248: Src/init.c: Mark SIGQUIT as ignored if ignored at\n\tshell start, so we don't enable it after a fork.\n\n2019-04-25  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 44254: Src/compat.c: make quite sure we've reached \"/\"\n\tin zgetdir(), else report an error.\n\n2019-04-22  Matthew Martin  <phy1729@gmail.com>\n\n\t* unposted: Completion/Base/Utility/_pick_variant: Use\n\t${(P) ::= rather than eval.\n\n\t* 44242: Completion/Unix/Command/_chown,\n\tCompletion/Unix/Command/_ln, Completion/Unix/Command/_mv,\n\tCompletion/Unix/Command/_rm, Completion/Unix/Command/_rmdir:\n\tUse _pick_variant -b to detect builtins.\n\n2019-04-18  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* dana: 43288: Src/prompt.c: fix line-broken prompts\n\n2019-04-12  dana  <dana@dana.is>\n\n\t* unposted: NEWS: Document recent feature additions\n\n\t* 44198: Doc/Zsh/options.yo, Src/builtin.c, Src/options.c,\n\tSrc/zsh.h: Add cd_silent option to suppress all cd output\n\n2019-04-10  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Eric Freese: 44214: Src/exec.c: <(...) substitutions shouldn't\n\tgrab the terminal.\n\n\t* Roman Perepelitsa: 44215: Doc/Zsh/zle.yo,\n\tSrc/Zle/iwidgets.list, Src/Zle/zle.h, Src/Zle/zle_main.c,\n\tSrc/Zle/zle_thingy.c, Src/Zle/zle_utils.c, Src/Zle/zle_vi.c:\n\tMaintain LASTWIDGET across reset-prompt, avoiding side effects\n\tof asynchronous notifications.\n\n\t* 44202: Src/Zle/compctl.c: Rewrite to use memmove()\n\tfor possibly overlapping copy.\n\n2019-04-10  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 44210: Completion/Linux/Command/_findmnt,\n\tCompletion/Linux/Command/_lsblk: Add _findmnt and update _lsblk.\n\n2019-04-04  Matthew Martin  <phy1729@gmail.com>\n\n\t* 44202 (tweaked): Completion/Base/Core/_normal,\n\tDoc/Zsh/compsys.yo: Add -P to reset precommands.\n\n\t* 44201: Completion/Base/Core/_main_complete,\n\tCompletion/Base/Utility/_pick_variant,\n\tCompletion/Linux/Command/_setsid,\n\tCompletion/Zsh/Command/_command,\n\tCompletion/Zsh/Type/_command_names: Check for external forcing\n\tprecommand.\n\n\t* 44200 (tweaked): Completion/Base/Core/_normal,\n\tCompletion/Linux/Command/_setsid,\n\tCompletion/Zsh/Command/_builtin,\n\tCompletion/Zsh/Command/_command, Completion/Zsh/Command/_exec,\n\tCompletion/Zsh/Command/_precommand, Doc/Zsh/compsys.yo: Append\n\tto precommands in _normal.\n\n\t* 44199: Completion/Base/Core/_normal: Use zparseopts.\n\n2019-04-01  dana  <dana@dana.is>\n\n\t* 44158 (tweaked): Completion/Unix/Command/_postgresql: Add\n\tcompletion for PostgreSQL\n\n2019-03-27  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 44168 (tweaked to remove modification to errflag):\n\tSrc/Zle/zle_main.c: Ignore bad return if errno EINTR as this is\n\trecoverable.\ng\n2019-03-25  dana  <dana@dana.is>\n\n\t* 44160 (tweaked): Completion/Debian/Command/_apt,\n\tCompletion/Debian/Command/_apt-file,\n\tCompletion/Debian/Command/_debdiff,\n\tCompletion/Debian/Command/_dpkg,\n\tCompletion/Debian/Command/_lintian,\n\tCompletion/Debian/Command/_piuparts,\n\tCompletion/Debian/Type/_deb_files: Add _deb_files helper with\n\tsupport for *.ddeb, use it where applicable\n\n2019-03-25  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 44176: Src/Modules/zftp.c: warn only if off_t is longer than long\n\n\t* Wesley Schwengle: 44162 (tweaked): Src/Modules/zftp.c: Avoid\n\tformat-overflow warning by using ztrftime()\n\n\t* Wesley Schwengle: 44164: Src/params.c: Avoid stringop-truncation\n\twarning by replacing strncpy() by memcpy()\n\n2019-03-24  dana  <dana@dana.is>\n\n\t* unposted: Completion/Unix/Command/_chmod: Adjust _guard pattern\n\n2019-03-22  dana  <dana@dana.is>\n\n\t* unposted: Completion/Unix/Command/_chmod: Use _guard for mode\n\toperand\n\n\t* Clinton Bunch: 44156 (tweaked): Doc/Zsh/mod_system.yo: Add\n\tnote about potential flock side-effects\n\n2019-03-22  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 44147: Completion/Linux/Command/_free,\n\tCompletion/Linux/Command/_pmap, Completion/Linux/Command/_slabtop,\n\tCompletion/Linux/Command/_tload, Completion/Unix/Command/_top,\n\tCompletion/Unix/Type/_pids: add/update completions for procps-ng.\n\n2019-03-21  Matthew Martin  <phy1729@gmail.com>\n\n\t* 44153: Doc/Zsh/mod_files.yo, Src/Modules/files.c: rm: Accept\n\t-R as equivalent to -r.\n\n\t* 44149: Completion/Unix/Command/_mkdir,\n\tCompletion/Unix/Command/_stat: Use _pick_variant -b.\n\n\t* 44144: Completion/Zsh/Command/_builtin: Append \"builtin\" to\n\tprecommands.\n\n\t* 44155: Completion/Base/Utility/_pick_variant: Update builtin\n\tcheck.\n\n2019-03-21  dana  <dana@dana.is>\n\n\t* 44111: Completion/Unix/Command/_git: Use `git rev-list` for log\n\tmessages\n\n2019-03-19  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* unposted: Make the doc change in the foregoing clearer.\n\n\t* Charles Blake: 44132: Src/exec.c, Doc/Zsh/builtins.yo: don't\n\thash commands beginning with a '/'.\n\n\t* 44142: Src/hist.c: fix bug stripping spaces on line with only\n\tcomment.\n\n2019-03-18  Matthew Martin  <phy1729@gmail.com>\n\n\t* 44135: Completion/Unix/Command/_chmod, Doc/Zsh/mod_files.yo,\n\tSrc/Modules/files.c: Add chmod builtin.\n\n2019-03-15  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 44118: configure.ac: use /usr/include/tirpc/ if headers for\n\tRPC is not found in the standard location.\n\n2019-03-14  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Kamil: 44122: Src/parse.c: turn an int into a long to avoid\n\toverflow.\n\n2019-03-12  dana  <dana@dana.is>\n\n\t* 44100: Completion/Zsh/Command/_zparseopts, Doc/Zsh/mod_zutil.yo,\n\tSrc/Modules/zutil.c, Test/V12zparseopts.ztst: Add `zparseopts -F`,\n\tcompletion, tests, documentation\n\n2019-03-08  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 44101: Completion/Unix/Command/_vim: better support for nvim\n\n2019-03-06  dana  <dana@dana.is>\n\n\t* unposted: Completion/Zsh/Command/_zftp: Use 'post' pattern\n\tmatching to avoid clobbering other functions\n\n\t* 44099: Completion/Darwin/Command/_trash: Add completion for\n\tmacOS trash utility\n\n2019-03-01  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* unposted: Test/ztst.zsh: fix a typo\n\n2019-02-27  dana  <dana@dana.is>\n\n\t* 44087: Completion/Unix/Command/_getconf: Complete options,\n\tcomplete config variables on more systems\n\n\t* 44090 (re: 44085): Completion/Unix/Type/_remote_files: Don't\n\tset QUOTING_STYLE -- syntax incompatible with some shells\n\n2019-02-26  dana  <dana@dana.is>\n\n\t* 44085: Completion/Unix/Type/_remote_files: Prevent ls/alias\n\tsettings from mangling file listings\n\n\t* 44080: Completion/BSD/Command/_bsd_pkg,\n\tCompletion/BSD/Command/_fetch, Completion/Darwin/Command/_hdiutil,\n\tCompletion/Darwin/Command/_otool,\n\tCompletion/Darwin/Command/_sc_usage,\n\tCompletion/Debian/Command/_aptitude,\n\tCompletion/Debian/Command/_dpkg,\n\tCompletion/Debian/Command/_vim-addons,\n\tCompletion/Linux/Command/_btrfs, Completion/Linux/Command/_cpupower,\n\tCompletion/Linux/Command/_iptables,\n\tCompletion/Mandriva/Command/_urpmi, Completion/Unix/Command/_chsh,\n\tCompletion/Unix/Command/_cksum, Completion/Unix/Command/_git,\n\tCompletion/Unix/Command/_gnutls, Completion/Unix/Command/_initctl,\n\tCompletion/Unix/Command/_java, Completion/Unix/Command/_ldconfig,\n\tCompletion/Unix/Command/_lp, Completion/Unix/Command/_lz4,\n\tCompletion/Unix/Command/_nkf, Completion/Unix/Command/_objdump,\n\tCompletion/Unix/Command/_perforce, Completion/Unix/Command/_python,\n\tCompletion/Unix/Command/_smartmontools,\n\tCompletion/Unix/Command/_surfraw, Completion/Unix/Command/_sysctl,\n\tCompletion/Unix/Command/_unison, Completion/Unix/Command/_xmlsoft,\n\tCompletion/X/Command/_setxkbmap, Completion/X/Command/_vnc: Fix\n\tseveral option-description typos\n\n2019-02-24  dana  <dana@dana.is>\n\n\t* unposted: Completion/Unix/Command/_less: Fix typo\n\n2019-02-22  dana  <dana@dana.is>\n\n\t* 44077: Completion/Unix/Command/_getent,\n\tCompletion/Unix/Command/_iconv, Completion/Unix/Command/_ldd,\n\tCompletion/Unix/Command/_locale,\n\tCompletion/Unix/Command/_localedef: Fix outdated _pick_variant\n\tpatterns, partially fix `getent -s`\n\n\t* 44076 (tweaked): Completion/Unix/Command/_column: Support\n\tDebian column, add missing util-linux options, adjust wording\n\n2019-02-18  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Yutian Li: 44067: Src/hist.c: If history read was interrupted,\n\tdon't assume next time it was correctly read.\n\n2019-02-14  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* see 44062: back off change to ZLE per-line initialisation,\n\tcausing problems after failed reads and apparently not needed\n\tfor the intended fix of interrupt handling (40305 / 34656ec2).\n\n2019-02-09  Doron Behar <doron.behar@gmail.com>\n\n\t* gitlab !5: Completion/Unix/Command/_abcde:\n\tNew abcde completion.\n\n2019-02-09  Hiroki Noda <kubo39@gmail.com>\n\n\t* github #31: Completion/Unix/Command/_nm,\n\tCompletion/Unix/Command/_objdump: Add new demangle\n\tstyle, rust and dlang\n\n2019-02-03  dana  <dana@dana.is>\n\n\t* unposted: Config/version.mk: Post-release version bump\n\n\t* unposted: Config/version.mk, Etc/FAQ.yo, README: Update for\n\t5.7.1\n\n\t* 44034: Completion/Unix/Type/_date_formats: Complete %9./%N,\n\tadjust some wording\n\n\t* 44033: Completion/Unix/Command/_dos2unix: Add completion for\n\tdos2unix/unix2dos\n\n\t* 44030: Src/prompt.c, Test/D01prompt.ztst: Return error for\n\tunrecognised colour name\n\n2019-01-28  Fredric Silberberg  <fred@silberberg.xyz>\n\n\t* github #32: Completion/Unix/Command/_git: Fix a typo in the\n\tgit tag completion.\n\n2018-01-27  dana  <dana@dana.is>\n\n\t* unposted: Etc/creating-a-release.txt: Document additional\n\trelease steps\n\n\t* 44020: Functions/VCS_Info/Backends/VCS_INFO_detect_p4: Fix\n\tinfinite recursion\n\n2018-01-24  dana  <dana@dana.is>\n\n\t* unposted: Config/version.mk: Post-release version bump\n\n\t* unposted: Config/version.mk, README: Update for 5.7\n\n2018-01-23  dana  <dana@dana.is>\n\n\t* 44012: Test/X04zlehighlight.ztst: Fix spurious test failures\n\ton OpenBSD\n\n2019-01-23  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 44011: Doc/Zsh/zle.yo, Src/prompt.c, Test/X04zlehighlight.ztst:\n\tOnly use fg_start_code for non-truecolor\n\n2018-01-21  dana  <dana@dana.is>\n\n\t* 44001: Completion/Zsh/Context/_brace_parameter: Complete (q+)\n\n2018-01-18  dana  <dana@dana.is>\n\n\t* 43990: Completion/Linux/Command/_opkg: Support gain-privileges\n\n2019-01-08  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* users/23829: Completion/Unix/Type/_path_files,\n\tDoc/Zsh/compsys.yo: Add and document file-split-chars style.\n\n2018-01-05  dana  <dana@dana.is>\n\n\t* unposted: Config/version.mk, NEWS: Update for 5.6.2-test-3\n\n2018-01-04  dana  <dana@dana.is>\n\n\t* 43974: Completion/Unix/Command/_git: Always offer -F/-m for\n\t`git tag`\n\n\t* 43970, 43971: Etc/creating-a-release.txt, NEWS: Document some\n\tchanges in 5.{4,5,6} not previously mentioned, clarify that\n\tprocess in release instructions\n\n2019-01-03  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 43969: Src/Zle/compctl.c: untokenize Dash for compctl with\n\tGLOB_SUBST set.\n\n2018-01-01  dana  <dana@dana.is>\n\n\t* 43960: Completion/Linux/Command/_setsid,\n\tCompletion/Zsh/Command/_exec, Completion/Zsh/Command/_precommand:\n\tAdd full completion for exec and setsid\n\n\t* 43959: Completion/Unix/Command/_ipsec,\n\tCompletion/Unix/Command/_swanctl, Completion/Unix/Type/_urls: Add\n\tcompletion for strongSwan, &al.; complete unix:// URIs\n\n2018-12-31  dana  <dana@dana.is>\n\n\t* 43962: Test/X04zlehighlight.ztst: Fix module_path\n\n2018-12-30  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* Sebastian: users/23809: Src/prompt.c,\n\tTest/X04zlehighlight.ztst: Add ZLE_HIGHLITHT extensions to\n\ttermcap for colours > 7, add tests.\n\n\t* 43944: Martijn: Doc/Zsh/options.yo, README, Src/math.c,\n\tTest/C01arith.ztst: apply NO_UNSET consistently to arithmetic.\n\n\t* unposted: Test/D04parameter.ztst: test for 43938.\n\n2018-12-30  dana  <dana@dana.is>\n\n\t* 43914 (tweaked): Completion/Unix/Command/_composer: Add\n\tcompletion for Composer\n\n\t* 43930: Completion/Base/Utility/_multi_parts: Improve performance\n\n\t* unposted (per 43938): Src/utils.c: Avoid segfault when\n\tunmetafying empty string\n\n2018-12-29  dana  <dana@dana.is>\n\n\t* 43953 (tweaked per 43954): Src/utils.c, Test/V09datetime.ztst:\n\tFix rounding/truncation error in %. time-format specifier\n\n2018-12-24  dana  <dana@dana.is>\n\n\t* 43935 (tweaked): Src/Modules/datetime.c, Test/V09datetime.ztst:\n\tFix test error on 32-bit machines, reject too-large nanosecond\n\tvalues given to strftime\n\n2018-12-23  dana  <dana@dana.is>\n\n\t* 43928: Completion/Base/Utility/_alternative: Evaluate (...)\n\taction syntax as with _arguments\n\n2018-12-21  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 43921: ${\\var} should be an error\n\n2018-12-19  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: Config/version.mk, Etc/FAQ.yo, README: update for\n\t5.6.2-test-2.\n\n2018-12-19  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* unposted c.f. 43913: Functions/Zle/edit-command-line: emulate\n\t-L zsh to avoid bad effects with globsubst.\n\n2018-12-17  dana  <dana@dana.is>\n\n\t* 43897: Completion/Darwin/Command/_xcode-select,\n\tCompletion/Unix/Command/_asciidoctor,\n\tCompletion/Unix/Command/_asciinema,\n\tCompletion/Unix/Command/_host, Completion/Unix/Command/_mkfifo,\n\tCompletion/Unix/Command/_mknod, Completion/Unix/Command/_shred,\n\tCompletion/Unix/Command/_tail, Completion/Unix/Command/_tty,\n\tCompletion/Unix/Command/_visudo, Completion/Unix/Type/_hosts:\n\tAdd/update various completion functions\n\n\t* 43895: Completion/Unix/Command/_watch: Complete for\n\tprocps/-ng watch\n\n2018-12-17  Joey Pabalinas  <joeypabalinas@gmail.com>\n\n\t* 43904 (plus tweak): Doc/Zsh/grammar.yo: zshmisc(1): document\n\tterm being optional if `in word' is omitted\n\n2018-12-14  dana  <dana@dana.is>\n\n\t* unposted: Completion/Unix/Command/_dig: Fix _arguments syntax\n\terror\n\n2018-12-13  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 43879: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info git: Fix fatal error in VCS_INFO_git_getbranch in\n\tcorner case\n\n2018-12-09  dana  <dana@dana.is>\n\n\t* 43871: Completion/Unix/Type/_files: Support `-F '(pat ...)'` as\n\twith _path_files\n\n2018-12-04  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 43860, 43861: Completion/Unix/Type/_files: complete globbing\n\tflags at start of word.\n\n2018-11-29  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 43854: Src/lex.c: set tok to LEXERR on generic parser error so\n\tthis gets picked up by main loop.\n\n2018-11-21  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 43837 (test from Daniel): Src/subst.c, Test/D04parameter.ztst:\n\tNested substitution didn't remove Nularg from empty string,\n\tgiving bogus character.\n\n2018-11-19  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 43829: Src/Modules/nearcolor.c: use double instead of float\n\n2018-11-16  dana  <dana@dana.is>\n\n\t* Daniel O'Connor: 43830: Completion/BSD/Command/_cu: Complete\n\t/dev/cu.* (used by macOS)\n\n2018-11-15  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* unposted: Completion/Unix/Command/_zcat: support macOS\n\n\t* Ivan Tkachenko: 43823: Src/Modules/stat.c: remove unnecessary\n\tmetafy() in stattimeprint()\n\n2018-11-14  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 43620: Doc/Zsh/expn.yo: more care documenting command\n\tsubstituion including $(<...).\n\n2018-11-13  dana  <dana@dana.is>\n\n\t* 43809: Completion/Unix/Command/_npm: Suppress npm update checks\n\tduring completion\n\n\t* unposted (cf. 43800): Completion/Zsh/Command/_strftime: Update\n\tstrftime completion for nanoseconds change\n\n\t* 43800: Doc/Zsh/mod_datetime.yo, Src/Modules/datetime.c,\n\tTest/V09datetime.ztst: Add nanosecond support to strftime built-in\n\n2018-11-12  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 43819: Completion/Unix/Command/_adb: expand adb completion to\n\talso cover options to adb backup\n\n\t* 43818: Completion/Zsh/Type/_module_math_func: complete math\n\tfunctions for other modules besides zsh/mathfunc\n\n\t* 43816: Completion/Linux/Command/_valgrind,\n\tCompletion/BSD/Command/_vmctl, Completion/Linux/Command/_ethtool,\n\tCompletion/Linux/Command/_losetup, Completion/Linux/Command/_lsblk,\n\tCompletion/Unix/Command/_ansible, Completion/Unix/Command/_column,\n\tCompletion/Unix/Command/_dhclient, Completion/Unix/Command/_links,\n\tCompletion/Unix/Command/_dmidecode, Completion/Unix/Command/_jq,\n\tCompletion/Unix/Command/_luarocks, Completion/Unix/Command/_mpc,\n\tCompletion/Unix/Command/_samba, Completion/Unix/Command/_script,\n\tCompletion/Unix/Command/_ssh, Completion/Unix/Command/_tmux:\n\tvarious completion option updates\n\n\t* 43817: Completion/Linux/Command/_btrfs: update options in\n\tcompletion through to btrfs 4.17.1\n\n\t* 43813: Completion/BSD/Command/_powerd: add units, default\n\tvalues and allow option arguments in the same word as the option\n\n\t* 43812: Completion/Unix/Command/_gcc: allow repeats of\n\tthe -Wsuggest-attribute option\n\n2018-11-09  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 43790: Kamil: Src/utils.c: failed mailstat could leak memory.\n\n\t* 43789: Kamil: Src/module.c: possible use after free handling\n\tmath functions from module.\n\n\t* 43792: Kamil: Src/exec.c: file descriptor could leak on fork error.\n\n\t* 43793: Kamil: Src/Zle/computil.c: could overrun buffer by 1 byte.\n\n\t* 43791: Kamil: Src/Modules/clone.c: file descriptor was closed twice.\n\n2018-11-08  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 43779 (tweaked): Joey Pabalinas: Functions/Zle/select-bracketed: \n\tadd parentheses to fix expression with cprecedences option set\n\n\t* 43805: Src/Modules/nearcolor.c, Src/prompt.c: make nearcolor\n\tmodule use the default colour rather than black as a fallback\n\n\t* 43804: Src/prompt.c: also need to be able to turn colour\n\tattributes back into hex triples for region_highlight variable\n\n\t* unposted: Src/Modules/nearcolor.c: add usual copyright header\n\n\t* 43784: Completion/Zsh/Command/_compadd: clarify descriptions on\n\toptions related to match sorting\n\n\t* unposted (c.f. Bart: 43739):\n\tCompletion/Zsh/Context/_brace_parameter: use a correct\n\tdescription for the @ parameter expansion flag\n\n2018-11-07  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 43788: Doc/Zsh/mod_zpty.yo: make it clear -n option to\n\tzpty -w is irrelevant if no string argument.\n\n2018-11-07  Jun-ichi Takimoto  <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 43761: Completion/BSD/Type/_file_flags,\n\tCompletion/Unix/Command/_mktemp, Completion/Unix/Command/_script,\n\tCompletion/Unix/Command/_strip, Completion/Unix/Type/_file_systems:\n\tadd or update support for darwin\n\n2018-11-05  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 43760: Doc/Makefile.in, Doc/Zsh/mod_nearcolor.yo,\n\tDoc/Zsh/zle.yo, NEWS: add documentation for true colour\n\tchanges and nearcolor module\n\n\t* 43759: Src/Modules/nearcolor.c, Src/Zle/complist.c,\n\tSrc/Zle/zle.h, Src/Zle/zle_refresh.c, Src/Zle/zle_tricky.c,\n\tSrc/prompt.c, Src/zsh.h, Src/zsh_system.h: add support for\n\ttrue colour terminals\n\n\t* 43747: Src/Modules/nearcolor.c, Src/Modules/nearcolor.mdd,\n\tSrc/init.c, Src/prompt.c, Src/zsh.h: new module to map\n\tcolours from hex triplets to the nearest matching colour\n\n2018-11-03  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 43752: Completion/Base/Completer/_expand: Fix quoting if\n\tglobbing failed / was not tried for expression on command line.\n\n2018-11-02  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 43748: Completion/Unix/Command/_ack: fix for ack 3beta\n\n\t* github #29: Wieland Hoffmann: Completion/Unix/Command/_git:\n\tAdd completion support for Gits --color-moved option and\n\tcolor settings\n\n2018-10-31  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 43746: Completion/Unix/Command/_ping: update for BSD and\n\tDarwin\n\n\t* 43744: Completion/Unix/Command/_sysctl: add support for\n\tprocps-ng (Linux) and NetBSD, with several other updates\n\n2018-10-24  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 43726: Test/A01grammar.ztst: Add tests for semicolon in the\n\tmiddle of a sublist not terminating it.\n\n2018-10-24  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 43723: Completion/Unix/Command/_mkdir: fix for builtin\n\tmkdir, and add support for darwin\n\n\t* 43722: Completion/Unix/Command/_ed,\n\tCompletion/Unix/Command/_env, Completion/Unix/Command/_sort:\n\tuse the same completions as freebsd for darwin.\n\n\t* 43721: Completion/Unix/Command/_diff3: detect GNU variant\n\tcorrectly\n\n2018-10-24  dana  <dana@dana.is>\n\n\t* 43718: Completion/BSD/Command/_fstat,\n\tCompletion/Unix/Command/_awk, Completion/Unix/Command/_cat,\n\tCompletion/Unix/Command/_chown, Completion/Unix/Command/_df,\n\tCompletion/Unix/Command/_grep, Completion/Unix/Command/_ls,\n\tCompletion/Unix/Command/_od, Completion/Unix/Command/_pax,\n\tCompletion/Unix/Command/_rar, Completion/Unix/Command/_rm,\n\tCompletion/Unix/Command/_xxd: Use singular group descriptions\n\n2018-10-23  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Marcin Mielniczuk: 43714: Completion/Unix/Command/_lp: lp\n\tfit-to-page option.\n\n\t* Sebastian: 43695: Src/lex.c: minor but simple optimisation\n\tto reuse existing string lengths.\n\n2018-10-22  dana  <dana@dana.is>\n\n\t* 43713: Completion/Unix/Command/_init_d: Improve completion of\n\tservice commands\n\n2018-10-17  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 43694: Doc/Zsh/redirect.yo: More detail on how multio file\n\topening differs from cat.\n\n2018-10-17  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 43697: Completion/X/Command/_zathura: match uppercase\n\tfilename extensions\n\n\t* 43698: Completion/Unix/Command/_git: update options for 2.19\n\n2018-10-16  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 43692: Doc/Makefile.in: Generate man pages in the build dir,\n\trather than the source dir.\n\n2018-10-15  dana  <dana@dana.is>\n\n\t* 43672: Doc/Zsh/redirect.yo: Document result of redirecting\n\tfrom a non-existent file\n\n2018-10-14  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Src/utils.c: internals: Document sepjoin().\n\n\t* 43685: Functions/Misc/add-zle-hook-widget: Support running\n\tunder NO_UNSET ('set -u').\n\n2018-10-12  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 43674: Src/zsh.h, Config/version.mk: Split more parameter and\n\tfunction flags to avoid using sign bit; bump version because of\n\twordcode incompatibility.\n\n2018-10-10  dana  <dana@dana.is>\n\n\t* 43602: Doc/Zsh/compsys.yo: Clarify behaviour of `compdef -p`\n\n2018-10-10  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* unposted: Test/C03traps.ztst: Another couple of tests for\n\tother code paths.\n\n\t* 43669: Src/builtin.c, Src/init.c, Test/C03traps.ztst: ensure\n\texplicit exit status is used rather than implicit.\n\n2018-10-09  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 43660: Src/builtin.c, Src/exec.c, Src/init.c,\n\tTest/C03traps.ztst: extend 43653 for implicit exit and combine\n\tlogic with pending exit status from exits within functions.\n\n\t* 43656: Src/builtin.c: special tied parameters don't have\n\ttieddata.\n\n\t* unposted: Test/C03traps.ztst: addition to previous test\n\tsuggested by Mikael.\n\n\t* 43653: Src/builtin.c, Test/C03traps.ztst: explicit exit from\n\tEXIT trap overrides previous status.\n\n2018-10-08  a-wing  <1@233.email>\n\n\t* 43623: Completion/Linux/Command/_iptables: Fix Completion\n\tiptables -t raw security\n\n2018-10-08  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 43620 (tweaked): Doc/Zsh/contrib.yo,\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_git,\n\tFunctions/VCS_Info/VCS_INFO_set-patch-format, README: vcs_info\n\tgit: Reverse the order patches are passed to gen-unapplied-string\n\tin.\n\n\t* 43617: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info git: During a non-interactive rebase of a detached head,\n\tcomputer the %b expando correctly.\n\n\t* 43619: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info git: In non-interactive rebases, always set\n\t$hook_com[git_patches_applied] to a string of the form 'foo bar',\n\tnever just 'foo'.\n\n\t* 43618: Functions/VCS_Info/Backends/VCS_INFO_detect_p4,\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_bzr,\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_git,\n\tFunctions/VCS_Info/VCS_INFO_quilt: vcs_info: Don't redefine\n\thelper functions on every execution of the autoloadable outer\n\tfunction.\n\n2018-10-08  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* unposted: tweak to Doc/Zsh/builtins.yo to put close\n\tparenthesis on new line for help files script.\n\n\t* Stephane: 43616: Doc/Zsh/builtins.yo, Src/Modules/db_gdbm.c,\n\tSrc/Modules/parameter.c, Src/builtin.c, Src/hashtable.h,\n\tSrc/params.c, Src/subst.c, Src/zsh.h, Test/B02typeset.ztst:\n\tFixes and improvements to tied variables and interaction\n\twith typeset -p.\n\n2018-10-07  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 43587: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info git: In 'git rebase -i', when computing subjects\n\tof applied-patches, handle an edge case where the subject is\n\tnot available.\n\n\t* 43588: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info git: Make sure applied-patches is of the form \"$hash\n\t$subject\" --- that is, has a space and a non-empty second\n\targument --- even with future 'git rebase -i' verbs.\n\n\t* 43586: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info git: Reformat to minimise next diff. No functional\n\tchange.\n\n\t* 43585: Functions/VCS_Info/Backends/VCS_INFO_get_data_svn:\n\tvcs_info svn: Recognize working copies in need of an upgrade.\n\n2018-10-03  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* unposted: Etc/FAQ.yo: minor typos.\n\n\t* 43589: Src/jobs.c: Show subjob status instead of superjob any\n\ttime it still has processes.\n\n2018-10-02  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tIndicate which use-case each branch handles.\n\n\t* unposted: Doc/Zsh/contrib.yo: Fix typo\n\n2018-09-30  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 43531: Src/Zle/compcore.c: Completion: Fix some false\n\tpositives in the logic for \"are these two candidates completions\n\tequivalent\".\n\n2018-09-28  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 43570: Src/jobs.c: Start documenting jobs.c, in particular\n\tsuperjobs.\n\n2018-09-27  Daniel Shahaf  <d.s@xxxxxxxxxxxxxxxxxx>\n\n\t* 43563: Doc/Zsh/zle.yo: zshzle: Clarify sentence in\n\tintroduction.\n\n2018-09-26  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 43564: Better output concerning stopped subjob.\n\n\t* 43542 (tweaked): Etc/FAQ.yo: further update about which output.\n\n2018-09-25  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 43528: Doc/Zsh/builtins.yo: zshbuiltins(1): Document 'which''s\n\t\"not found is not an error\" behaviour.\n\n2018-09-25  Oliver Freyermuth  <o.freyermuth@xxxxxxxxxxxxxx>\n\n\t* 43554 (tweaked): Completion/X/Command/_zathura: Fix zathura\n\tcompletion ignoring multiple plugin directories.\n\n2018-09-25  Oliver Freyermuth  <o.freyermuth@googlemail.com>\n\n\t* 43544: Completion/X/Command/_zathura: Fix zathura filename\n\tcompletion derived from *.so plugin name.\n\n2018-09-25  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 43489: Src/exec.c: Add error checking on a new write() call.\n\n2018-09-25  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 43543: Src/jobs.c: Improvements to 43535: attempt to keep\n\tSTAT_STOPPED correct for superjob, also wait for subjob before\n\tsuperjob.\n\n2018-09-25  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Test/B02typeset.ztst: Add a test for 43536.\n\n2018-09-25  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Stephane: 43536: \"typeset -p\" should show presence of -U\n\toption.\n\n2018-09-24  dana  <dana@dana.is>\n\n\t* Takeshi Banse: users/23642: Completion/Unix/Type/_files: Revert\n\tchange from workers/42984\n\n2018-09-24  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 43535: Src/jobs.c, Src/signals.c: fixes for bg / fg handling\n\tof superjobs.  Be more consistent about marking jobs running;\n\talways send SIGCONT when putting superjob / subjob combination\n\tinto foreground; wait for both superjob and subjob when waiting\n\tfor superjob.\n\n2018-09-24  Daniel Shahaf  <danielsh@apache.org>\n\n\t* 43493: Test/V07pcre.ztst: Have V07pcre fail if PCRE was enabled\n\tby configure (config.modules) but failed to load for any reason.\n\n2018-09-24  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 43527, tweaked: Etc/FAQ.yo: describe \"which\" output\n\tbehaviour.\n\n2018-09-23  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* gitlab !2: Noam Barnea: Completion/Unix/Command/_toilet:\n\tdetect .flf files as well as .tlf ones\n\n2018-09-21  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 43511: Src/input.c: alias entry on input stack wasn't\n\tinitialised if not expanding alias or using history.\n\n2018-09-19  Maximilian Bosch  <maximilian@mbosch.me>\n\n\t* 43502: Completion/X/Command/_setxkbmap: Search XDG_DATA_DIRS\n\tin _setxkbmap completion\n\n2018-09-18  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 43464: Completion/Linux/Command/_valgrind: complete options\n\tfor the drd tool and update them for helgrind\n\n2018-09-17  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: ChangeLog: Fix typo, s/43464/43474/.\n\n2018-09-16  dana  <dana@dana.is>\n\n\t* unposted: Doc/Zsh/builtins.yo: Fix trivial formatting error\n\n2018-09-16  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 43474: Src/exec.c, Src/jobs.c, Src/signals.c, Src/utils.c:\n\tRemember the last process group to attach to the terminal, not\n\tjust the set of running processes which did.  Don't\n\trecord process groups for ESUB_ASYNC subshells.\n\n2018-09-14  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Completion/Unix/Command/_subversion: _svn: Allow\n\thyphens in command name aliases.\n\n\t* unposted: Config/version.mk: Post-release version bump.\n\n\t* 43457: Config/version.mk, Etc/FAQ.yo, NEWS, README: Release\n\t5.6.2\n\n2018-09-14  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 43466: Test/A05execution.ztst: path(5) test is too specific as\n\tOS codes and messages may vary.\n\n2018-09-12  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Completion/Unix/Command/_subversion: _svn: Complete\n\t--accept=recommended, new in 1.10.0.\n\n\t* 43447: Etc/creating-a-release.txt, Makefile.in: Generate\n\ttar.xz artifacts only.\n\n\t* 43443: Completion/Unix/Command/_git: When completing worktrees,\n\tshow the ref and hash of each worktree.\n\n\t* 43442: Completion/Unix/Command/_git: Break out a helper\n\tfunction.\n\n2018-09-12  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 43450: Src/signals.c: fix window size if reattaching shell\n\tto terminal on exit of process.\n\n\t* 43446: Src/exec.c, Src/jobs.c, Src/zsh.h: enhance 43409 to\n\tpass back list_pipe_job as well, fixing additional races.\n\n2018-09-10  Jörg Thalheim  <joerg@thalheim.io>\n\n\t* GitHub #28: Src/builtin.c: Add missing math.h include for\n\tbuiltins\n\n2018-09-10  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 43426: Test/W02jobs.ztst: disable tests involving suspending\n\tjobs as these are provoking races in particular on OpenSUSE.\n\n2018-09-08  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Etc/creating-a-release.txt: Add another step.\n\n\t* unposted: Config/version.mk: Post-release version bump.\n\n\t* unposted: Config/version.mk, Etc/FAQ.yo, NEWS, README: Patch\n\trelease: 5.6.1\n\n2018-09-07  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 43409: Src/exec.c, Src/jobs.c: ensure main shell and newly\n\tstarted subshell are agreed on which process group the latter\n\tbelongs to.\n\n2018-09-07  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 43404 (after 43392): Doc/Makefile.in: Fix 'make install'\n\tin out-of-tree builds\n\n2018-09-06  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 43392: Doc/Makefile.in, Etc/creating-a-release.txt: dist:\n\tGenerate doc/help/* and doc/help.txt in builddir rather than\n\tsrcdir.\n\n\t* 43366: Completion/Zsh/Command/_compdef: Change and add sources\n\tfor completed completion function names.\n\n2018-09-05  dana  <dana@dana.is>\n\n\t* 43372: Completion/Linux/Command/_e2label: Add completion for\n\te2label\n\n2018-09-05  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 43375 with fix from 43390: Test/A05execution.ztst: don't\n\tassume path for sh and echo, work it out.\n\n2018-09-05  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted (cf 43373): Etc/creating-a-release.txt: Add two\n\tcaveats: no local modifications, and need to build in-tree.\n\n2018-09-03  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 43370: Etc/creating-a-release.txt: New maintainer-facing\n\tdocumentation.\n\n\t* unposted: Config/version.mk: Post-release version bump.\n\n\t* unposted: Config/version.mk: Release 5.6.\n\n2018-09-03  Anthony Sottile  <asottile@umich.edu>\n\n\t* CVE-2018-0502, CVE-2018-13259: Fix two security issues in\n\tshebang line parsing. [With Buck Evan]\n\n2018-09-03  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 43367: Makefile.in: Add maintainer targets 'tarxz-src' and\n\t'targz-src'.\n\n2018-09-03  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* unposted: NEWS: mention Inf/NaN floating point changes\n\n\t* unposted: Makefile.in: further to 43358 use same patchlevel\n\tform for the release file\n\n2018-09-03  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 43333: Etc/Makefile.in: Generate FAQ.html in the builddir,\n\trather than in the srcdir, and add it to the default target of\n\tthe Etc/ subdirectory.\n\n2018-09-03  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 43365: Src/Zle/zle_keymap.c, Src/Zle/zle_main.c,\n\tSrc/Zle/zle_misc.c, Src/Zle/zle_vi.c: Don't handle ZLE timed\n\tfunctions if just reading a single key.\n\n2018-08-31  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 43358: Src/zsh.mdd: enforce consistent patchlevel form\n\n\t* 43357: configure.ac: isinf/isnan can be macros rather\n\tthan functions so need a custom configure test\n\n\t* unposted: Completion/Unix/Command/_git: git describe's\n\t--long and --abbrev options are not mutually exclusive\n\n\t* 43359: Completion/Unix/Command/_git:\n\tfurther review of git remote set-url completion\n\n\t* 42810: pseyfert: Completion/Unix/Command/_git:\n\tgit remote set-url completion\n\n2018-08-30  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 43349: Completion/X/Command/_eog: new completion for eog\n\n\t* 43350: Completion/Unix/Command/_zsh: support --emulate\n\n2018-08-29  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 43351: Completion/Unix/Type/_diff_options: handle the new\n\tdiff implementation in the pre-release version of FreeBSD 12\n\n\t* 43346: Completion/Linux/Command/_cryptsetup,\n\tCompletion/Linux/Command/_networkmanager,\n\tCompletion/Linux/Command/_strace, Completion/Unix/Command/_attr,\n\tCompletion/Linux/Command/_sysstat, Completion/Unix/Command/_cmp,\n\tCompletion/Unix/Command/_dhclient, Completion/Unix/Command/_dig,\n\tCompletion/Unix/Command/_entr, Completion/Unix/Command/_gnutls,\n\tCompletion/Unix/Command/_env, Completion/Unix/Command/_iostat,\n\tCompletion/Unix/Command/_ln, Completion/Unix/Command/_md5sum,\n\tCompletion/Unix/Command/_ps, Completion/Unix/Command/_route,\n\tCompletion/Unix/Command/_service, Completion/Unix/Command/_sort,\n\tCompletion/Unix/Command/_split, Completion/Unix/Command/_top:\n\tvarious completion option updates\n\n\t* 43348: Anton Shestakov: Completion/Unix/Command/_hg:\n\tcheck for both -r and --rev\n\n\t* 43347: Anton Shestakov: Completion/Unix/Command/_hg:\n\tuse revsets for suggestions for hg merge\n\n2018-08-28  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 43345: Completion/Unix/Command/_mount,\n\tCompletion/Unix/Type/_umountable: don't modify global variable\n\n\t* unposted: Completion/Linux/Command/_dkms: correct\n\tcompletion argument order\n\n\t* unposted: Completion/Unix/Command/_strings: completion for\n\targument to -s was missing\n\n\t* unposted: Completion/Unix/Command/_tar: complete also for bsdtar\n\n\t* unposted: Completion/Solaris/Command/_svccfg: fix typo in\n\tfunction call\n\n2018-08-25  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Etc/FAQ.yo: Fix FAQ build, broken by 43184.\n\n\t* unposted: Config/version.mk, NEWS, README: Test release:\n\t5.5.1-test-1.\n\n\t* 43331: Completion/Unix/Command/_diff3: Enhance positional\n\targument descriptions (thanks, Oliver).\n\n2018-08-24  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 43313 (log message tweaked):\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_git: vcs_info git:\n\tFor the branch name, try to find a symbolic name before falling\n\tback to a raw commit hash.\n\n\t* 43314: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info git: Flatten a nested if.\n\n2018-08-24  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 43330: Completion/BSD/Command/_cu: complete more options\n\n\t* 43329: Completion/Unix/Command/_diff3: new diff3 completion\n\n\t* 43328: Completion/X/Command/_zeal: new completion\n\n2018-08-23  dana  <dana@dana.is>\n\n\t* unposted: Completion/Unix/Command/_man: Fix --ascii typo\n\n2018-08-23  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 43325: Anton Shestakov: Completion/Unix/Command/_hg:\n\tsuggest merge tools for -t/--tool\n\n\t* 43326: Anton Shestakov: Completion/Unix/Command/_hg:\n\tadd completion of -S/--subrepos to many commands\n\n\t* github #27: Klas Mellbourn: Completion/X/Command/_code:\n\tadd --folder-uri to completion for Visual Studio Code\n\n\t* 43301 (based on work by Julien Nicoulaud):\n\tCompletion/Debian/Command/_debuild, Completion/Unix/Command/_ack,\n\tCompletion/Unix/Command/_scons, Completion/Unix/Command/_vpnc,\n\tCompletion/X/Command/_geany: functions from zsh-completions project\n\n2018-08-21  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Doc/Zsh/compsys.yo: docs: Fix duplicated words\n\tin _combination.\n\n2018-08-16  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 43294: Doc/Zsh/zle.yo, Src/Zle/zle_main.c,\n\tSrc/Zle/zle_params.c: Add ZLE_RECURSIVE parameter.\n\n2018-08-15  dana  <dana@dana.is>\n\n\t* 43302: Completion/Unix/Command/_du: Change -B to -B+\n\n2018-08-13  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Completion/Unix/Command/_make: Allow pasted arguments\n\tfor GNU make's -j option.\n\n2018-08-13  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* dana: 43275: Doc/Zsh/mod_mathfunc.yo, Src/Modules/mathfunc.c,\n\tTest/V03mathfunc.ztst, configure.ac: Add log2 to mathfunc.\n\n2018-08-12  Marc Cornellà  <marc.cornella@live.com>\n\n\t* unposted (PR #26): Completion/Unix/Command/_git: __git_files:\n\tfix double quotation of star\n\n2018-08-09  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 43264: Src/params.c, Test/D04parameter.ztst:\n\t${+assoc[nonexistent]} returned 1 with KSH_ARRAYS.\n\n2018-08-08  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 43261: Src/math.c, Test/C01arith.ztst: Apply unary minus to\n\tentire lexical constant, so base doesn't get treated as negative.\n\n2018-08-07  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Anton Shestakov: 43254: Completion/Unix/Command/_hg: Remove hg\n\t-w and add hg -S.\n\n\t* Anton Shestakov: 43252: Completion/Unix/Command/_hg: fix up\n\tvarious hg options for completion.\n\n\t* Anton Shestakov: 43250: Completion/Unix/Command/_hg: Add hg\n\tforget, phase, summary completions.\n\n\t* Anton Shestakov: 43251: Completion/Unix/Command/_hg: fix\n\treturn value of some hg completion functions.\n\n\t* Anton Shestakov: 43253: Completion/Unix/Command/_hg: hg\n\t--style is deprecated, use --template.\n\n2018-08-01  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 43227: Src/Modules/termcap.c, Src/Modules/terminfo.c,\n\tSrc/utils.c: fix memory leaks not fixed in 43219\n\n2018-07-31  dana  <dana@dana.is>\n\n\t* 43207 (tweaked): Completion/Unix/Type/_bind_addresses,\n\tCompletion/Unix/Command/_php: Add options to control _bind_addresses\n\tbehaviour, improve PHP completion\n\n2018-07-31  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 43219 (except term{cap,info}.c): Src/Modules/db_gdbm.c,\n\tSrc/Modules/pcre.c, Src/Zle/compcore.c, Src/init.c, Src/math.c,\n\tSrc/subst.c: fix several memory leaks\n\n2018-07-30  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 43225: Src/Zle/zle_main.c: recalculate timeout after calling\n\thandler within ZLE raw read.\n\n2018-07-29  Matthew Martin  <phy1729@gmail.com>\n\n\t* 43185: Completion/Zsh/Type/_command_names: Use [ suffix for\n\tassociative arrays. Add + to remove-chars from Oliver.\n\n\t* 43184: Etc/FAQ.yo: Remove reference to ftp_sites.yo.\n\n2018-07-25  dana  <dana@dana.is>\n\n\t* 43203: Completion/Unix/Command/_lua: Add completion for lua\n\n\t* Simon Ruderich: 43200: Completion/Linux/Command/_iptables: Add\n\tcompletion for ip6tables*\n\n2018-07-20  dana  <dana@dana.is>\n\n\t* 43196: Completion/Unix/Command/_nginx: Add completion for nginx\n\n2018-07-20  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 43192: Completion/Unix/Command/_pgrep: simplify the completions\n\tof comma-separated list of IDs.\n\n2018-07-19  dana  <dana@dana.is>\n\n\t* 43186 (tweaked): Completion/Unix/Command/_crontab: Add completion\n\tfor cronie/dcron/Vixie crontab\n\n2018-07-19  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 43189: Completion/Unix/Command/_install: similar fix as 43187\n\tfor option -f (_flags was renamed to _file_flags)\n\n\t* 43183: Completion/Unix/Type/_ttys, Completion/Unix/Command/_gdb,\n\tCompletion/Unix/Command/_pgrep: fix '_ttys -o' on Linux, and use\n\tit in _gdb and _pgrep.\n\n2018-07-19  Yasuhiro KIMURA  <yasu@utahime.org>\n\n\t* 43187: Completion/Unix/Command/_install: Fix completion error\n\tabout 'm' option of 'install' command\n\n2018-07-17  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* Doron Behar: 43166: Completion/Unix/Type/_pspdf,\n\tCompletion/X/Command/_zathura: new zathura completion.\n\n2018-07-18  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 43177: Completion/Unix/Command/_grep: support bzgrep, and add\n\ta few options for macOS.\n\n\t* 43182: Completion/Unix/Command/_lldb: complete process name\n\tafter option -n/--attach-name\n\n2018-07-17  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* unposted: Doc/Makefile.in: remove ftp_sites.yo.\n\n\t* Matthew Martin: 43179: Doc/Zsh/contrib.yo,\n\tDoc/Zsh/ftp_sites.yo, Doc/Zsh/metafaq.yo: update distro docs to\n\tremove dead links.\n\n\t* 43176: Doc/Zsh/intro.yo: note right at start of manual that\n\tdefault mode is not POSIX.\n\n2018-07-16  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Tim Smith: 43172: Doc/Zsh/mod_zutil.yo: document escaping of\n\tcolon in zformat -a.\n\n2018-07-11  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 43164: Completion/Unix/Command/_gcc: fix 'args=' to 'args+=',\n\tand update a few options.\n\n2018-07-10  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 43155: Completion/Unix/Command/_gcc: escape : in action for -std\n\n2018-07-10  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 43156, 43157: Src/exec.c: need to allow for possible\n\tupdate of pointer by two in gethere().\n\n2018-07-09  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* users/23531: Src/exec.c, Test/C03traps.ztst: Fix error\n\texit/return from within shell construct inside nested function,\n\tand in left hand side of pipe (regression due to broken tests);\n\tstop tests from exiting too early and add new test for first fix.\n\n2018-07-07  Matthew Martin  <phy1729@gmail.com>\n\n\t* 43106: Completion/BSD/Command/_ldap: Add ldap completer.\n\n\t* 43046: Completion/Unix/Type/_pdf, Completion/X/Command/_mupdf:\n\tAdd mupdf completer.\n\n\t* 42995: David Klann: Completion/Linux/Command/_networkmanager:\n\tOnly complete active connections for nmcli connection down.\n\n2018-07-03  dana  <dana@dana.is>\n\n\t* 43105 (tweaked): Completion/Unix/Command/_pgrep: Add full procps\n\tsupport, other improvements\n\n2018-07-03  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* dana: 43134: Completion/Unix/Type/_signals: don't complete SIG\n\tin front of numeric signals.\n\n2018-07-02  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 43108, 43121: Completion/Unix/Command/_killall: complete\n\tvarious options\n\n2018-07-01  Doron Behar  <doron.behar@gmail.com>\n\n\t* 43059: Completion/Unix/Command/_gpg: Use explicit UIDs for\n\tstate = public keys.\n\n2018-07-01  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 43107: Completion/Unix/Type/_ttys, Completion/Unix/Command/_ps,\n\tCompletion/BSD/Command/_watch-snoop: add an option to _ttys to\n\tcomplete only open ttys, and use it in _ps and _watch-snoop.\n\n2018-06-29  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* users/23519: README, Completion/Unix/Type/_remote_files: Use tag\n\tremote-files instead of files for remote files.\n\n2018-06-27  Daniel Hahler  <zsh@thequod.de>\n\n\t* 42746: Completion/Unix/Command/_vim: _vim: handle special values for\n\t-u/-U.\n\n2018-06-27  Eric Cook  <llua@gmx.com>\n\n\t* 43096: Eitan: Completion/Unix/Command/_vim, remove duplicate flag\n\n2018-06-25  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 43091: Src/glob.c: In the (u) glob qualifier, expand and\n\tcorrect \"unknown user\" error messages.\n\n2018-06-25  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 43084: Doc/Zsh/zle.yo, Functions/Chpwd/zsh_directory_name_cdr,\n\tSrc/Zle/zle_main.c: vared -g suppresses variable creation and\n\toverride warnings; also suppress in function.\n\n2018-06-25  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 43079, 43086: Completion/Unix/Type/_process_names,\n\tCompletion/Unix/Command/_dtruss, Completion/Darwin/Command/_fs_usage,\n\tCompletion/Darwin/Command/_sc_usage: new utility to complete names\n\tof running processes, and three new completion functions which use it.\n\n\t* 43080: Completion/Unix/Type/_sys_calls: analyze recent syscall.h\n\tproperly\n\n2018-06-24  dana  <dana@dana.is>\n\n\t* unposted: Completion/Linux/Command/_opkg: Fix mistyped variable\n\tname\n\n2018-06-23  dana  <dana@dana.is>\n\n\t* 43081: Completion/Darwin/Command/_networksetup: Add networksetup\n\tcompletion\n\n\t* 43088: Completion/Debian/Command/_wajig: Fix sub-command completion\n\n2018-06-18  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 43074: Eitan: Completion/Unix/Command/_gcc: Completion for\n\tadditional linker options for clang and sanitizers for gcc\n\n\t* 43078: Completion/Unix/Command/_sed: add completion for the\n\tsed expression\n\n\t* 43073: Completion/Linux/Command/_cryptsetup,\n\tCompletion/Linux/Command/_sysstat, Completion/Linux/Command/_ss,\n\tCompletion/Linux/Command/_kpartx, Completion/Linux/Command/_tune2fs,\n\tCompletion/Unix/Command/_ansible, Completion/Unix/Command/_git,\n\tCompletion/Unix/Command/_lynx, Completion/Unix/Command/_mpc,\n\tCompletion/Unix/Command/_readelf, Completion/Unix/Command/_sqlite,\n\tCompletion/Unix/Command/_subversion, Completion/Unix/Command/_tmux,\n\tCompletion/Unix/Command/_user_admin, Completion/Unix/Command/_wget,\n\tCompletion/Unix/Command/_xxd, Completion/X/Command/_qiv,\n\tCompletion/Zsh/Command/_which, Completion/Zsh/Command/_zed:\n\tvarious completion option updates\n\n2018-06-20  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 43077: Src/builtin.c: failure of math evaluation didn't\n\tpropagate to status of shift builtin.\n\n2018-06-20  dana  <dana@dana.is>\n\n\t* 43075 (based on 24059): Doc/Zsh/mod_stat.yo, Doc/Zsh/prompt.yo,\n\tSrc/Modules/datetime.c,\tSrc/Modules/stat.c, Src/compat.c,\n\tSrc/prompt.c, Src/utils.c, Src/zsh_system.h, Test/D01prompt.ztst,\n\tconfigure.ac: Support nanosecond precision in zsh/stat file times\n\tand time formats generally (%9./%N)\n\n\t* 43061: Completion/Darwin/Command/_open,\n\tCompletion/Unix/Command/_webbrowser: Improve open completion, adjust\n\t_webbrowser wording\n\n\t* 43060: Completion/Unix/Command/_stat,\n\tCompletion/Zsh/Command/_stat: Expand stat completion\n\n2018-06-18  dana  <dana@dana.is>\n\n\t* 43047: Completion/Unix/Command/_hostname: Add hostname completion\n\n\t* 43047: Completion/Unix/Type/_bind_addresses: Always return local IPs\n\n2018-06-18  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* unposted: Test/V01zmodload.ztst: updated for 43039.\n\n\t* Eitan: 43029: Src/Modules/zftp.c, Src/signals.c, Src/signals.h,\n\tconfigure.ac: remove test for signal handler return type as no\n\tlonger needed.\n\n2018-06-18  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 43006: Tim Smith: Completion/Unix/Command/_git: complete\n\tmodified files after `git stash --`\n\n\t* users/23484: Completion/Unix/Command/_git: be consistent on\n\tmatcher specs for branches to fix issue with partial matching\n\n\t* 43048: Eitan: Completion/Unix/Command/_gcc: add sanitizers,\n\tstandards aliases and fix -flto\n\n2018-06-17  dana  <dana@dana.is>\n\n\t* 43043: Completion/Unix/Command/_comm,\n\tCompletion/Unix/Command/_sed: Improve comm/sed completion\n\n\t* 43039: Src/Modules/parameter.mdd: Mark functions_source (et al.)\n\tfor auto-loading\n\n2018-06-16  dana  <dana@dana.is>\n\n\t* 43030: Functions/VCS_Info/Backends/VCS_INFO_get_data_bzr,\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_cvs,\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_svn,\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_tla,\n\tFunctions/VCS_Info/VCS_INFO_bydir_detect,\n\tFunctions/VCS_Info/VCS_INFO_realpath,\n\tFunctions/VCS_Info/vcs_info: Replace VCS_INFO_realpath() by :P\n\n\t* 43031: Etc/completion-style-guide: Add note about quoting/escaping\n\t(cf. 42992)\n\n\t* 43031: Etc/completion-style-guide: Add note about optional/variant\n\tsyntax (cf. 43025)\n\n2018-06-15  dana  <dana@dana.is>\n\n\t* 43024: Completion/Unix/Command/_man: Improve section-name matching\n\n2018-06-15  Matthew Martin  <phy1729@gmail.com>\n\n\t* 42981: Completion/Unix/Command/_ed: Add ed completer\n\n2018-06-15  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* users/23472: \tDoc/Zsh/mod_system.yo, Src/Modules/system.c,\n\tSrc/exec.c, Src/zsh.h: Add $sysparams[procsubstpid].\n\n\t* 43008: Src/options.c: combine suggestion from Sebastian to\n\tsilence warnings for double setgid/setuid with suggestion\n\tfrom Eitan to put setgid first.\n\n2018-06-13  dana  <dana@dana.is>\n\n\t* 42992: Completion/Unix/Command/_bash: Fix minor escaping bug\n\n\t* 42992: Completion/Darwin/Command/_nvram,\n\tCompletion/Darwin/Command/_osascript, Completion/Darwin/Command/_say,\n\tCompletion/Darwin/Command/_scselect: Use _call_program to fetch\n\targument possibilities\n\n2018-06-12  dana  <dana@dana.is>\n\n\t* unposted: Completion/Darwin/Type/_mac_applications: Change\n\t'Mac OS X' to 'macOS'\n\n2018-06-11  dana  <dana@dana.is>\n\n\t* 42983: Completion/Unix/Command/_man: Address misc. feedback\n\n\t* 42984: Completion/Unix/Type/_files,\n\tCompletion/Unix/Type/_object_files: Fix argument pass-through to\n\tcompadd\n\n2018-06-10  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 42978: dana: Completion/Darwin/Command/_pbcopy: fix small bug\n\n\t* 42977: dana: Completion/Unix/Command/_man: Complete options to\n\tmajor man variants, otherwise improve especially section matching\n\n2018-06-09  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 42968: Eitan Adler: Completion/Unix/Command/_shutdown:\n\tadd \"-c\" for _shutdown completion on FreeBSD 12-current\n\n\t* 42965: dana: Completion/Unix/Command/_bash,\n\tCompletion/Unix/Command/_sh: add full completion for bash\n\n\t* 42964: Eitan Adler: Completion/BSD/Type/_fbsd_architectures:\n\tUpdate list of fbsd architectures\n\n\t* 42918: dana: Completion/Unix/Command/_jq: fix file completion\n\n\t* 42918: dana: Completion/Unix/Command/_ldd: adapt detection of\n\tGNU variant to work on Ubuntu\n\n2018-06-07  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 42947: Doron Behar: Completion/Unix/Command/_luarocks:\n\tnew luarocks completion\n\n\t* 42948: dana: Completion/Linux/Command/_opkg: new opkg completion\n\n\t* 42931: dana: Completion/Unix/Command/_base64,\n\tCompletion/Unix/Command/_chroot, Completion/Unix/Command/_cksum,\n\tCompletion/Unix/Command/_lz4, Completion/Unix/Command/_md5sum,\n\tCompletion/Unix/Command/_tee, Completion/Unix/Command/_shasum,\n\tCompletion/Unix/Command/_readlink: completion for several\n\tutilities especially for checksums across a variety of systems\n\n\t* users/23434: Functions/Misc/zed: initialise UNDO_LIMIT_NO so\n\tthat an initial undo doesn't clear the whole edit buffer\n\n\t* 42935: Eitan Adler: Completion/Unix/Command/_arp:\n\tFreeBSD does not support -v for arp\n\n\t* 42937: Eitan Adler: Completion/BSD/Command/_powerd: add -M/-m\n\n\t* 43943: Completion/Unix/Command/_samba: update with long options\n\n2018-06-06  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Eitan: 42938: Src/Modules/mathfunc.c: name argument to\n\tmath_func is not unused.\n\n\t* Eitan: 42939: Src/Zle/zle_params.c: pm argument to\n\tset_registers is not unused.\n\n2018-06-05  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Sebastian: 42929 (twaked): Functions/Misc/zed: additional\n\tdefault bindings for emacs and vi modes.\n\n2018-06-03  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 42826: Eitan Adler: Misc/bash2zshprompt: remove link to\n\tnow-spam website\n\n\t* 42919: dana: Completion/Unix/Command/_uptime,\n\tCompletion/Unix/Command/_shuf: new shuf and uptime completions\n\n\t* 42922: dana: Completion/Unix/Command/_tac: new tac completion\n\n\t* 42881: Completion/Unix/Command/_ghostscript: update options in\n\tghostscript completion and query more matches directly from it\n\n\t* 42920: Completion/Linux/Command/_dkms: new dkms completion\n\n2018-06-01  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 42888: MACHINES: remove outdated issues and update general\n\tdescription.\n\n2018-05-31  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 42870: Src/Zle/compcore.c: another improvement of 'compset -q'\n\n2018-05-29  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* c.f. 42865: config.guess, config.sub: update from GNU\n\tdistribution.\n\n\t* Eitan Adler: 42862: configure.ac: AC_PROG_TRADITIONAL is no\n\tlonger needed.\n\n\t* Eitan Adler: 42863: configure.ac: autoconf update to latest\n\tconventions.\n\n2018-05-25  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 42809: Src/Zle/compcore.c: slightly improve 'compset -q'\n\n2018-05-19  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 42806: Completion/Unix/Command/_shutdown: fix where options\n\twere lost due to args= assignment where args+= was needed\n\n\t* 42803: Completion/Unix/Command/_netstat: handle Linux and\n\tthe the BSDs in netstat completion\n\n2018-05-17  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* Stephane: 42790: Doc/Zsh/expn.yo, NEWS, Src/pattern.c,\n\tconfigure.ac: make [[:blank:]] match non-ASCII blanks\n\n\t* 42784: Completion/Zsh/Command/_typeset: complete -s and -x\n\toptions to the functions builtin\n\n2018-05-17  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 42793: Src/jobs.c, Src/zsh.h: Always define FDT_PROC_SUBST to\n\tavoid proliferating #ifdef's.\n\n\t* 42785: Src/builtins.c: redefining a user math function should\n\tsilently work as with redefining other shell objects.\n\n2018-05-14  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 42297: dana: Src/params.c, Test/D06subscript.ztst: (e)\n\tsubscript needs extra work with scalars.\n\n\t* 42234: Stephane: Src/signals.c: don't kill a process that's\n\talready exited when killing a job.\n\n2018-05-13  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 42488: Src/Modules/mathfunc.c, Src/builtin.c, Src/math.c,\n\tTest/B03print.ztst, Test/C01arith.ztst, Test/V03mathfunc.ztst:\n\ttest cases for 42369 and address some issues in the code\n\n\t* Nelson H. F. Beebe: 19597 (rebased 42369): Src/math.c,\n\tSrc/params.c. Src/Modules/mathfunc.c, configure.ac:\n\treturn Inf, NaN etc from floating point operations instead\n\tof errors to allow non-stop IEEE 754 arithmetic\n\n\t* 42760: Src/Zle/zle_thingy.c: move stack variable outside\n\twhile loop scope as it is accessed in the while condition\n\n2018-05-11  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 42180: dana: Src/Zle/compcore.c: safety when removing\n\tseparators in completion.\n\n\t* 42101 (tweaked): dana: Src/exec.c, Test/A06assign.ztst:\n\tassigning shell status to array was broken.\n\n2018-05-08  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 42752: Completion/Unx/Command/_git: better completion\n\thandling for git aliases expanding to external command.\n\n\t* 42751: Src/Zle/zle_main.c: Protect shell status around\n\ttime function execution in line editor.\n\n2018-05-02  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* Eitan Adler: 42740: Completion/BSD/Command/_systat:\n\tTeach _systat about the 'zarc' screen\n\n\t* Eitan Adler: 42732: Completion/Unix/Command/_ifconfig:\n\tAdd several more entries to ifconfig\n\n\t* 42743: Completion/Unix/Command/_vorbis: update vorbis-tools\n\tcompletion and include vorbiscomment with the rest\n\n2018-05-01  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* from branch fork_early, c.f. 42702: Src/exec.c: Various changes\n\tto make forking for a command work better.  Move the fork even\n\tearlier; add case of non-final pipeline elements; _exit when\n\tforked; remove previous early fork in caller; replace fix for\n\tleaked file descriptor in pipeline handling.\n\n2018-04-29  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* Matthew Martin: 42730: Completion/Unix/Command/_rmdir,\n\tCompletion/Unix/Type/_directories: Complete the options for rmdir\n\n\t* Matthew Martin: 42729: Completion/Unix/Command/_df:\n\tupdate df completion for [DFNO]BSD\n\n\t* 42676: Completion/Unix/Command/_dd: deal with system\n\tspecific arguments\n\n\t* 42728: Completion/Unix/Command/_tiff: update options and\n\tadd handling for tiff2pdf\n\n2018-04-29  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* Ricardo Giorni: 42701: fix 42355 for multiple backslashes\n\n2018-04-26  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* c.f. 42726: Test/W02jobs.ztst: Back off fg and bg tests as they\n\tare currently too hard to make robust.\n\n2018-04-25  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Src/exec.c: Correct process substitution buffer\n\tsize in the PATH_DEV_FD codepath.\n\n2018-04-25  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 42722: Test/ztst.zsh, Test/W02jobs.ztst: replace ed with\n\tdc and hope for better times.\n\n\t* 42714: Test/W02jobs.ztst, Test/ztst.zsh: add basic fg and bg\n\ttests using ed.  Improve output on pattern difference failure in\n\ttests.\n\n2018-04-24  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 42708: Src/exec.c, Src/Modules/clone.c, Src/Modules/zpty.c,\n\tTest/D03procsubst.ztst: don't close file descriptors for\n\tprocess substitution on closem() tidy up unless we are exiting\n\tas they need to be visible to external processes.\n\n2018-04-23  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 42705: Src/signals.c: another fix for 42630 --- also check\n\tthat killpg(pgrp, 0) is -1.\n\n\t* 23362: Src/parse.c: Allow short loops with \"while\".\n\n2018-04-20  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 42684 (with extra comments): Src/exec.c: Fork earlier\n\twhen executing command if run in background.\n\n2018-04-19  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 42686: Src/signals.c: Fix 42630 only to change process groups\n\ton exited process.\n\n2018-04-17  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 42630: Src/exec.c, Src/signals.c: Improve process group\n\thandling in pipelines.  Main shell will reclaim terminal if\n\tleader exits.  Allow SIGCHLD to interrupt reading data from\n\tcommand substitution.\n\n\t* unposted: Config/version.mk: update to 5.5.1-dev-0.\n\n2018-04-16  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: NEWS, README, Config/version.mk, Etc/FAQ.yo: update\n\tto release 5.5.1.\n\n2018-04-16  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 42659: Completion/Unix/Command/_git, Completion/Unix/Command/_sed,\n\tCompletion/Linux/Command/_ethtool, Completion/Linux/Command/_htop,\n\tCompletion/Linux/Command/_pidof, Completion/Unix/Command/_sqlite,\n\tCompletion/Unix/Command/_ssh: various completion option updates\n\n\t* 42658: Completion/Unix/Command/_diffstat: allow compact form of\n\toption arguments to diffstat\n\n\t* Matthew Martin: 42643, 42644: Completion/BSD/Command/_cksum:\n\tnew cksum completion\n\n\t* Matthew Martin: 42642 (tweaked for Solaris):\n\tCompletion/Unix/Command/_chown:\n\tOpenBSD chown does not support -f and dragonfly has -x\n\n2018-04-15  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 42650: Src/utils.c: fix 42156 for zero-sized terminals\n\n\t* 42636: Src/utils.c: fix GLOB_DOTS for !(RM_STAR_SILENT)\n\n2018-04-13  Daniel Hahler  <zsh@thequod.de>\n\n\t* 42631: Completion/Unix/Command/_pgrep: _pgrep: pkill: fix completion\n\tof signals.\n\n2018-04-12  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 42624 (plus test): Src/exec.c, Test/C04funcdef.ztst: avoid\n\tfreeing memory that's still needed in multiple function\n\tdefinition that has a duplicated function name\n\n2018-04-11  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 42623: configure.ac: some extra quotes needed (and some\n\tcosmetic) for 42618.\n\n2018-04-10  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Benedikt Morbach: 42618: configure.ac: support signal names\n\tfrom multiple include files as needed for glibc 2.25.\n\n\t* unposted: Config/version.mk: update dev version to 5.5-dev-0.\n\n2018-04-09  Eric Cook  <llua@gmx.com>\n\t* 42613: pda: Completion/Linux/Command/_ss\n\tfix quoting typo\n\n2018-04-08  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: release zsh-5.5.\n\n2018-04-08  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* c.f. 42499: tera torn: Completion/Unix/Command/_twisted:\n\tupdate twisted completion stub for new twist command\n\n2018-04-07  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 42605: Src/Modules/mapfile.c, Src/Zle/complete.c,\n\tSrc/Zle/zle_params.c: properly free the vi registers hash\n\n\t* 42601: Src/builtin.c: tidy up code for set -A/+A to not\n\tincrement a NULL pointer and to be more efficient\n\n\t* 42607, CVE-2018-1100: Src/utils.c: check bounds on buffer\n\tin mail checking\n\n\t* 42600: Src/Zle/computil.c: error paths for _values leaked\n\tthe exclusion list array\n\n\t* 42597: Src/params.c: plug memory leak found by coverity\n\n\t* 42595: Src/utils.c: remove dead code flagged by coverity\n\n\t* Matthew Martin: 42604: Completion/BSD/Command/_signify,\n\tCompletion/BSD/Command/_vmctl: new completions for OpenBSD's\n\tsignify and vmctl\n\n\t* github #24: Klas Mellbourn: Completion/X/Command/_code:\n\tAdd completion script for Visual Studio Code\n\n2018-04-06  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 42602: Completion/Unix/Command/_gcc: Update _gcc as of GCC\n\t7.3.0 for generic options and x86\n\n2018-04-05  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 42591: Completion/Debian/Command/_apt: complete *.changes and\n\t*.dsc files alongside *.deb\n\n\t* 42584: Completion/Unix/Command/_ssh: complete options for\n\tssh-keyscan and update options for ssh-copy-id\n\n\t* 42583: Completion/Unix/Command/_column: new column completion\n\n\t* 42582: Completion/BSD/Command/_cu, Completion/Unix/Command/_uniq,\n\tCompletion/Unix/Command/_dhclient, Completion/Unix/Command/_script:\n\tupdates to options in completions for OpenBSD 6.3\n\n\t* 42575: Src/Zle/computil.c, Test/Y03arguments.ztst: fix to not\n\tcomplete options in the argument to another option\n\n2018-04-05  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 42590: Completion/Unix/Command/_fmt: fix detection of OSTYPE\n\n\t* 42585 (cf. 42574: Eitan Adler): Completion/Unix/Command/_tar,\n\tCompletion/Unix/Type/_tar_archive: complete all compressed\n\tarchives when libarchive-based tar is being used without\n\tcompression flag\n\n\t* 42577: Completion/Unix/Command/_strings: fix macOS support\n\n\t* 42578: Completion/Unix/Command/_shutdown: add support for macOS\n\n2018-04-04  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: 5.4.2-test-2.\n\n\t* 42581(?): Src/hist.c, Src/lex.c, Test/X03zlebindkey.ztst: history\n\texpansion within ZLE needs history to be read to conclusion on\n\terror.\n\n2018-03-31  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 42572: Completion/Linux/Command/_ethtool,\n\tCompletion/Linux/Command/_ss, Completion/Unix/Command/_arping,\n\tCompletion/Unix/Command/_mosh, Completion/Unix/Command/_notmuch,\n\tCompletion/Unix/Command/_mpc, Completion/Unix/Command/_objdump,\n\tCompletion/Unix/Command/_prove, Completion/Unix/Command/_rsync,\n\tCompletion/Unix/Command/_readelf, Completion/Unix/Command/_ruby,\n\tCompletion/Unix/Command/_strip, Completion/Unix/Command/_vim,\n\tCompletion/X/Command/_evince: various completion option updates\n\n\t* 42571: Completion/BSD/Command/_jail,\n\tCompletion/BSD/Command/_jexec: new completion for FreeBSD jail\n\n2018-03-30  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 42568: Completion/Unix/Command/_shutdown: new completion\n\n\t* 42569: Completion/Unix/Command/_lsof: improve completion after\n\t-i and -s options\n\n\t* 42567: Completion/Unix/Command/_xmlstarlet: new completion\n\tfor xmlstarlet\n\n\t* 42570: Completion/Unix/Command/_drill,\n\tCompletion/Unix/Command/_dig, Completion/Unix/Type/_dns_types:\n\tnew completion for drill and factor out DNS type completion\n\n\t* 42560: Src/utils.c: silence sign-compare compiler warnings\n\n\t* 42566: Completion/Unix/Command/_strings: new strings completion\n\n2018-03-29  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 42564: Completion/Unix/Command/_adb: Various improvements\n\n2018-03-28  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 42548: Completion/Unix/Command/_pwgen: new pwgen completion\n\n\t* 42549: Completion/Redhat/Command/_yum: also handle the yumdb\n\tcommand in yum completion\n\n\t* 42550: Completion/Unix/Command/_gem: completion for ruby's gem\n\n\t* 42539: Src/utils.c: prevent overflow of PATH_MAX-sized\n\tbuffer in spelling correction\n\n2018-03-27  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Martijn: 42538: Src/utils.c, Test/A04redirect.ztst:\n\ttemporarily set umask (with signals queued) while reading\n\there document.\n\n2018-03-25  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 42480: Src/utils.c: optimize $#var for single-byte character sets\n\n2018-03-25  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 42505: README. Etc/FAQ.yo: prepare for 5.5 release.\n\n2018-03-24  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 42520: Completion/Unix/Command/_netcat: don't use an empty\n\tbut existing option cache in netcat completion\n\n\t* 42521 based on 42049 (SATOH Fumiyasu):\n\tCompletion/Unix/Command/_make: make always includes relative\n\tto the current directory rather than relative to the Makefile\n\n\t* 42519, CVE-2018-1083: Src/Zle/compctl.c: check bounds on\n\tPATH_MAX-sized buffer used for file completion candidates\n\n\t* 42518, CVE-2018-1071: Src/exec.c, Src/utils.c:\n\tcheck bounds when copying path in hashcmd()\n\n2018-03-24  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 42501: Src/Zle/complete.c, Src/Zle/computil.c,\n\tSrc/Zle/zle_thingy.c: avoid out of bound pointer (as 42487).\n\n\t* unposted: Src/Modules/db_gdbm.c: add 'static' to a file-local\n\tvariable.\n\n2018-03-23  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 42491 based on 42000 (Andrei Shevchuk):\n\tCompletion/Unix/Command/_mosh, Completion/Unix/Command/_git,\n\tCompletion/Unix/Command/_ssh, Completion/Unix/Type/_ssh_hosts:\n\tfactor ssh host completion for use for mosh and git\n\n\t* 42497 (tweaked c.f. 42498): Completion/Debian/Command/_apt:\n\tmake completion after apt install work on local .deb files\n\n2018-03-22  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 42191: Completion/Darwin/Command/_otool: new completion\n\n2018-03-21  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 42487: Src/Zle/compctl.c: remove gcc 7.3.0 warnings and\n\tpotentially incorrect pointer usage.\n\n2018-03-18  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* Stephane: 42469: Src/exec.c, Src/Modules/mapfile.c: fix 42465\n\n2018-03-15  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Stephane: 42465: Src/exec.c, Src/Modules/mapfile.c: pass error\n\tstatus from readoutput, causing more consistent reporting\n\tfrom $(...) constructs.\n\n2018-03-12  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 42453: Src/jobs.c: fix race looking up status of just\n\texited background job.\n\n2018-03-07  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* github #22: Ferenc-: Completion/Unix/Command/_gcc:\n\tAdd newer C++ standard options to gcc completion\n\n\t* github #23: Matthijs Tijink: Completion/X/Command/_kdeconnect:\n\tnew kdeconnect-cli completion\n\n2018-03-05  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Martijn: 42365: Src/parse.c: use .zwc file if timestamp\n\tidentical to source file.\n\n2018-03-04  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* Taylor West: 42411: Src/mem.c: assume any current C compiler\n\twill handle NULL argument to free.\n\n2018-02-26  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 23180: Src/Zle/zle_tricky.c: Square brackets in dynamic\n\tdirectory expansion shouldn't force expansion in\n\texpand-or-complete.\n\n\t* Joey Pabalinas: 42401: Src/mem.c: replace malloc with use of\n\trealloc to work around crash with gcc using -foptimize-strlen.\n\n\t* users/23169: Completion/Base/Completer/_expand: treat ~[...]\n\tthe same way is other forms of tilde expansion: only expand\n\tif accept-exact is set.\n\n\t* 42399: Doc/Zsh/builtins.yo: better description of interaction\n\tbetween echo and dashes.\n\n2018-02-22  Daniel Hahler  <zsh@thequod.de>\n\n\t* 42364: Completion/Unix/Command/_git: _git: fix __git_ignore_line to\n\tignore the current word.\n\n2018-02-17  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 42362: Src/jobs.c: protet REPORTTIME logic from bad status.\n\n2018-02-13  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Eitan Adler: Doc/Zsh/params.yo: REPORTMEMORY is in kilobytes,\n\tnot megabytes.\n\n2018-02-12  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Martijn: 42355: Src/exec.c, Test/A04redirect.ztst:\n\tInterpreation of backslash on here doc input was inconsistent\n\tand confusing.\n\n2018-02-12  Daniel Hahler  <zsh@thequod.de>\n\n\t* 42324: Completion/Unix/Command/_git: _git: handle mutually exclusive\n\toptions.\n\n2018-02-11  Daniel Hahler  <zsh@thequod.de>\n\n\t* 42327: Completion/Unix/Command/_make: _make: complete _files.\n\n2018-02-08  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Completion/Unix/Command/_subversion: Support\n\tsubcommands with hyphens in their names, such as 'shelf-list\n\t(shelves)' from upstream 1.10 development versions.\n\n2018-02-07  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* Christian Hesse: 42333: Completion/Unix/Command/_git: Starting\n\twith version 2.16.0 git no longer accepts an empty string as a\n\tpathspec element. Thus we have to replace empty strings with a dot.\n\n\t* Matthew Martin: 42330: Completion/Unix/Command/_ln:\n\t-L and -P are POSIX, but not supported by Darwin or NetBSD\n\n\t* wgh@torlan.ru: 42336: Completion/Unix/Command/_adb: force\n\tsingle column output when getting filenames with adb ls command\n\n\t* 42343: Completion/Unix/Command/_subversion: complete\n\t--config-option more than once\n\n2018-01-31  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 42332: Src/builtin.c, Src/utils.c: special case printf for\n\tunsigned integers by looking for constansts, avoiding conversion\n\tto signed.\n\n2018-01-24  Daniel Hahler  <zsh@thequod.de>\n\n\t* 42323: Completion/Unix/Command/_git: _git: move \"local\" statement\n\tout of loop.\n\n2018-01-24  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 42322 (tweaked): Src/hist.c, Src/zsh.h: don't discard a\n\thistory line with just an interactive comment simply because\n\tthere were no words, since the comment now doesn't produce\n\twords.\n\n2018-01-23  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* Joey Pabalinas: 42313: Src/subst.c: avoid null-pointer deref\n\twhen using ${(PA)...} on an empty array result\n\n2018-01-23  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* 42317: Completion/Linux/Command/_cryptsetup,\n\tCompletion/Linux/Command/_ethtool, Completion/Unix/Command/_wget,\n\tCompletion/Linux/Command/_tune2fs, Completion/Unix/Command/_cowsay,\n\tCompletion/Unix/Command/_git, Completion/Unix/Command/_gsettings,\n\tCompletion/Unix/Command/_gzip, Completion/Unix/Command/_ssh,\n\tCompletion/Unix/Command/_sudo, Completion/Unix/Command/_tidy,\n\tCompletion/Unix/Command/_tmux, Completion/Unix/Command/_truss:\n\toption updates for commands that have had recent updates\n\n\t* 42299: Completion/Zsh/Command/_typeset: correct optional argument\n\n\t* Matthew Martin: 42309: Completion/Unix/Command/_dhclient,\n\tCompletion/Unix/Command/_id,  Completion/Unix/Command/_install:\n\tA few small updates for OpenBSD\n\n2018-01-22  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Daniel Tamelin: 42305: INSTALL: CVS should be git.\n\n2018-01-20  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 42243: Src/Modules/pcre.c: Free stuff properly in zsh/pcre\n\tmodule\n\n2018-01-19  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* dana: 41924: Doc/Zsh/params.yo: (wi) subscript flag interaction\n\n\t* Sebastian Gniazdowski: 41839: Functions/Misc/allopt: force IFS\n\tto default for \"read\"\n\n2018-01-18  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 42294: Completion/compinit: disable REPORTTIME in completion.\n\n2018-01-16  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Warepire: Src/prompt.c: off by one fix in multiline prompts.\n\n2018-01-14  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 42136: Src/prompt.c: empty string check in %~ / %C expansions\n\n\t* 42043: Src/exec.c: ZSH_DEBUG_CMD should not WARN_CREATE_GLOBAL\n\n2018-01-13  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 42264: Doc/Zsh/expn.yo: Follow-up to previous: Clarify that\n\t${histchars[1]} may be backslash-escaped even when it isn't '!'.\n\n2018-01-13  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 42261: Doc/Zsh/expn.yo, Doc/Zsh/grammar.yo: docs: Expand\n\tdocumentation of $histchars[1]. Joint with Matthew Martin.\n\n2018-01-10  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* Matthew Martin: 42242: Completion/Unix/Command/_ldconfig:\n\tadd [DFNO]BSD to the mix\n\n2018-01-08  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 42245: Src/hist.c, Src/lex.c, Src/zsh.h: Abort last word on\n\tinteractive comment to avoid it becoming a useless word.\n\n2018-01-05  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* dana: 42231: Completion/Darwin/Command/_caffeinate,\n\tCompletion/Darwin/Command/_mdfind,\n\tCompletion/Darwin/Command/_mdls,\n\tCompletion/Darwin/Command/_mdutil,\n\tCompletion/Darwin/Command/_nvram,\n\tCompletion/Darwin/Command/_osascript,\n\tCompletion/Darwin/Command/_pbcopy,\n\tCompletion/Darwin/Command/_plutil,\n\tCompletion/Darwin/Command/_say,\n\tCompletion/Darwin/Command/_scselect,\n\tCompletion/Darwin/Command/_scutil,\n\tCompletion/Darwin/Command/_sw_vers,\n\tCompletion/Linux/Command/_chattr,\n\tCompletion/Linux/Command/_ldconfig,\n\tCompletion/Linux/Command/_lsattr,\n\tCompletion/Unix/Command/_attr: new completion functions for simple\n\tutilities belonging to the 'Darwin' and 'Linux' groups.\n\n\t* 42230: Completion/Unix/Command/_screen: update to 4.06.01\n\n\t* 42229: Completion/Unix/Command/_awk, Completion/Unix/Command/_df,\n\tCompletion/Unix/Command/_ls, Completion/Unix/Command/_od,\n\tCompletion/Unix/Command/_tail, Completion/Unix/Command/_timeout:\n\tupdate completion of GNU programs for coreutils 8.29 / gawk 4.2.0\n\n\t* dana: 42223 (tweaked): Completion/X/Command/_sublimetext,\n\tCompletion/Unix/Command/_getopt, Completion/Unix/Command/_install\n\tCompletion/Unix/Command/_mktemp, Completion/Unix/Command/_fold:\n\tnew completions\n\n\t* 42221: Completion/Unix/Command/_enscript:\n\tupdate enscript completion for GNU enscript 1.6.6\n\n2018-01-05  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* dana: 42222: Completion/Unix/Type/_object_files: recognize\n\t.dylib extension (macOS).\n\n2018-01-04  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* dana: 42164: Src/Zle/complist.c, Test/Y01completion.ztst:\n\tnumeric values didn't work in format escapes in completion lists.\n\n\t* Stephane: 42159: Src/params.c: avoid crash copying empty hash table.\n\n\t* Sebastian: 42188: Src/Modules/system.c: It is necessary to\n\tclose the lock descriptor in some failure cases.\n\n2018-01-04  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* dana: 42214: Completion/BSD/Type/_file_flags,\n\tCompletion/Unix/Type/_file_modes, Completion/Unix/Command/_find,\n\tCompletion/Unix/Command/_mkdir, Completion/BSD/Command/_chflags,\n\tCompletion/Unix/Command/_chmod: use less general names on new\n\tfunctions for completing file flags and modes\n\n\t* github #21: Maciek Makowski:\n\tCompletion/Linux/Command/_networkmanager: update nmcli\n\tcompletions to be compatible with recent version 1.8.4\n\n2018-01-03  Oliver Kiddle  <okiddle@yahoo.co.uk>\n\n\t* dana: 42210: Completion/BSD/Command/_chflags,\n\tCompletion/BSD/Type/_flags, Completion/Unix/Command/_chmod,\n\tCompletion/Unix/Command/_find, Completion/Unix/Command/_mkdir,\n\tCompletion/Unix/Type/_modes: factor out completion of file\n\tmodes and flags and handle _comp_priv_prefix for chflags\n\n\t* dana: 42209: Completion/Unix/Command/_unexpand: take account\n\tof numeric options such as -4 instead of -t4\n\n\t* dana: 42209: Completion/Unix/Command/_tr: fix option\n\tdescriptions for non-GNU variants\n\n\t* 42208: Completion/Unix/Command/_yp: fix use of cache variables\n\n\t* dana: 42207: Completion/Unix/Command/_chown,\n\tCompletion/Unix/Command/_cat, Completion/Unix/Command/_cut,\n\tCompletion/Unix/Command/_dd, Completion/Unix/Command/_df,\n\tCompletion/Unix/Command/_env, Completion/Unix/Command/_fmt,\n\tCompletion/Unix/Command/_head, Completion/Unix/Command/_paste,\n\tCompletion/Unix/Command/_printenv, Completion/Unix/Command/_stty,\n\tCompletion/Unix/Command/_stdbuf, Completion/Unix/Command/_tail,\n\tCompletion/Unix/Command/_tr, Completion/Unix/Command/_uname,\n\tCompletion/Unix/Type/_directories: add g prefixes for GNU variants\n\n\t* Matthew Martin: 42117: Completion/BSD/Command/_chflags:\n\tuse anonymous function rather than define one in user namespace\n\n2018-01-02  Eric Cook <llua@gmx.com>\n\n\t* 42171: Completion/BSD/Command/_portsnap,\n\tCompletion/Linux/Command/_ipset,\n\tCompletion/Linux/Command/_valgrind,\n\tCompletion/Redhat/Command/_rpm,\n\tCompletion/Solaris/Command/_prstat,\n\tCompletion/Unix/Command/_arp,\n\tCompletion/Unix/Command/_cvs,\n\tCompletion/Unix/Command/_devtodo,\n\tCompletion/Unix/Command/_ffmpeg,\n\tCompletion/Unix/Command/_git,\n\tCompletion/Unix/Command/_gpg,\n\tCompletion/Unix/Command/_ruby,\n\tCompletion/Unix/Command/_tr,\n\tCompletion/Unix/Command/_whois,\n\tCompletion/Unix/Command/_yp,\n\tCompletion/Unix/Command/_zfs,\n\tCompletion/X/Command/_xset,\n\tCompletion/Zsh/Command/_cd: prevent various parameters\n\tfrom becoming global.\n\n2017-12-31  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 42183: Completion/Unix/Command/_objdump: support LLVM variant\n\n2017-12-30  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 42186: Completion/Debian/Command/_apt: Fix completion of\n\ttarget_release names, e.g., 'apt install zsh/<TAB>'.\n\n\t* unposted: Functions/VCS_Info/VCS_INFO_formats,\n\tFunctions/VCS_Info/VCS_INFO_set: vcs_info: Add docstrings to\n\tthe internal functions VCS_INFO_formats and VCS_INFO_set.\n\n2017-12-28  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 42175 + 42177 (+ 24178 by Daniel):\n\tCompletion/Base/Utility/_arguments,\n\tCompletion/Base/Utility/_call_program,\n\tCompletion/Debian/Command/_aptitude, Completion/Unix/Command/_a2ps,\n\tCompletion/Unix/Command/_subversion, Completion/Unix/Command/_tar,\n\tDoc/Zsh/compsys.yo: avoid localized output from external commands\n\tfor easier analysys by the completion system.\n\n2017-12-27  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 42176: Completion/Unix/Command/_tar: update long options\n\n2017-12-22  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* dana: 42156 with tweak as per 42158: Doc/Zsh/options.yo,\n\tSrc/builtin.c, Src/options.c, Src/utils.c, Src/zsh.h,\n\tTest/W02jobs.ztst: add CHECK_RUNNING_JOBS opion and job tests;\n\tremove debug error when rows or columns are zero as this is\n\tnormal without a physical terminal.\n\n\t* dana: 42156: Doc/Zsh/options.yo, Src/builtin.c,\n\tSrc/options.c, Src/zsh.h, Test/W02jobs.ztst: new\n\tCHECK_RUNNING_JOBS option demanded by bash groupies.\n\n\t* danda: 42155: Completion/Unix/Command/_ssh: various\n\timprovements for OpenSSH.\n\n\t* 42152: Src/exec.c, Src/zsh.h: improved line numbering for\n\tfunctions (in particular anonymous functions) defined inside\n\tothers, also flag for anonymous functions.\n\n2017-12-20  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* dana: 42145: Src/Zle/computil.c, Test/Y03arguments.ztst: fix\n\tfor completion option arguments.\n\n2017-12-20  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 42146: Src/hashtable.c, Test/A02alias.ztst: type -w +=\n\tglobal aliases\n\n\t* 42138: Completion/Unix/Command/_git: _git-revert: Complete\n\trecent commits first.\n\n\t* Stephane (rebased by Mikael): users/13148, workers/42060:\n\tSrc/exec.c: Abort the command line when replying \"[n] No\" to\n\tthe RM_STAR_SILENT prompt.\n\n2017-12-20  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 42143: Completion/Unix/Type/_object_files: fix a pattern for\n\tmatching object files\n\n2017-12-18  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 42412: Src/Zle/zle_word.c: fix a bug in 42116. Also fix a few\n\twidgets which were calling wrong function when negative numeric\n\targument was given.\n\n2017-12-18  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 42116: Src/Zle/zle_word.c, Src/Zle/textobjects.c, Src/Zle/zle.h,\n\tTest/X02zlevi.ztst: multibyte support for Zle vi-mode word motion\n\n2017-12-15  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 42123 (tweaked further): Src/exec.c: need to take account of\n\tDash when comparing functions names for autoloading.\n\n2017-12-14  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* dana: 42119: Doc/zsh/params.yo, Src/jobs.c,\n\tTest/A01grammar.ztst: add millisecond and microsecond options to\n\tTIMEFMT variable.\n\n2017-12-13  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* Matthew Martin: 42114: Completion/BSD/Command/_bsd_pkg,\n\tCompletion/BSD/Type/_fbsd_architectures,\n\tCompletion/BSD/Type/_nbsd_architectures,\n\tCompletion/BSD/Type/_obsd_architectures: Remove FreeBSD use of\n\tpkg_* tools and add BSD architecture utilities.\n\n2017-12-12  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 42110: Src/parse.c, Test/A04redirect.ztst: fix redirection in\n\tbetween variable assignments at start of line.\n\n2017-12-01  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* dana: 42065: Test/B10getopts.ztst: new getopts tests.\n\n\t* dana: 42063: Src/builtin.c: getopts errors now report \"+\" if\n\tappropriate for option.\n\n2017-11-24  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 42031 + 42048: Doc/Zsh/cond.yo, Doc/Zsh/options.yo, README,\n\tSrc/cond.c, Test/C02cond.ztst: Make [[ -o invalidoption ]]\n\ta normal(ish) false value, rather than a syntax error.\n\n2017-11-20  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Dima Kogan: 42040: Src/glob.c: buffer for glob qualifiers\n\tloses stat information in corner case.\n\n\t* Evan Underscore / pws: 42037: Completion/bashcompinit: recent\n\tchange caused wrong word to be used for COMP_POINT.\n\n2017-11-13  Oliver Kiddle  <opk@zsh.org>\n\n\t* 42019: Completion/Unix/Command/_git: update options to 2.15\n\tand improve format completion for git tag and for-each-ref\n\n\t* gitlab #1: Completion/Unix/Command/_sqlite: update options\n\tfor sqlite 3.21.0\n\n\t* github #18: Malcolm Ramsay: Completion/Redhat/Command/_dnf:\n\tExplicitly use system python so the dnf module can be found\n\n\t* github #19: Chris Bracken: Doc/Zsh/options.yo: Fix minor typo\n\tin INC_APPEND_HISTORY documentation\n\n2017-11-11  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* Martijn: 42004: Doc/Zsh/builtins.yo: fix parentheses.\n\n2017-11-04  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Completion/Linux/Command/_sshfs: Make the -o option\n\trepeatable, accept \"--\".\n\n2017-11-04  Oliver Kiddle  <opk@zsh.org>\n\n\t* 41983: Src/Zle/computil.c, Test/Y03arguments.ztst:\n\tfix exclusion of long options with (-) on a normal argument\n\n2017-11-03  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 41969: Completion/Unix/Command/_sort: Clarify option\n\tdescription.\n\n2017-11-02  Oliver Kiddle  <opk@zsh.org>\n\n\t* 41971: Completion/Linux/Command/_modutils,\n\tCompletion/Unix/Command/_make, Completion/Zsh/Command/_zmodload:\n\tcorrectly break out of certain tag loops when there are matches\n\n2017-11-02  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* Martijn: 41866: Src/builtin.c, Src/hashtable.c: no error for\n\tunsetting nonexistent function if POSIXBUILTINS.\n\n2017-10-31  Oliver Kiddle  <opk@zsh.org>\n\n\t* 41965: Completion/Zsh/Command/_typeset: complete functions -W\n\n\t* 41965: Completion/Zsh/Command/_zmodload: complete zmodload -s\n\n\t* 41963: Completion/Unix/Command/_gnutls: update for gnutls 3.6.1\n\n2017-10-30  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 41939: Doc/Zsh/grammar.yo: docs: Move aliases corner case to\n\tthe dangerous bends section. (after 41482)\n\n2017-10-29  Oliver Kiddle  <opk@zsh.org>\n\n\t* Sebastian: 41960: Completion/Zsh/Command/_zstyle,\n\tCompletion/Zsh/Type/_globquals: declare MATCH, MBEGIN, MEND local\n\n\t* 41961: Completion/Unix/Command/_ansible: new ansible completion\n\n\t* 41958: Completion/Linux/Command/_losetup,\n\tCompletion/Linux/Command/_lsblk, Completion/Linux/Command/_wipefs,\n\tCompletion/Unix/Command/_hexdump, Completion/Unix/Command/_last:\n\tupdate util-linux completions to 2.31; new hexdump completion\n\n2017-10-28  Oliver Kiddle  <opk@zsh.org>\n\n\t* 41957: Completion/Unix/Command/_git: update for git 2.14.3\n\n\t* 41927: Completion/Zsh/Command/_typeset: complete\n\t\"typeset -p\"'s optional argument for multi-line output\n\n2017-10-25  Alexey Sokolov  <sokolov@google.com>\n\n\t* 41952: Functions/VCS_Info/Backends/VCS_INFO_get_data_hg: Use\n\tHGPLAIN instead of HGRCPATH in VCS_INFO_get_data_hg\n\n2017-10-20  Christian Brabandt  <cb@256bit.org>\n\n\t* 41943: Completion/Unix/Command/_vim: Completion: add --clean for\n\tvim\n\n2017-10-17  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Test/D04parameter.ztst: tests for 41902\n\n\t* 41902: Src/lex.c: ${(z)...} continues parsing on unmatched\n\tquote when CSH_JUNKIE_QUOTES is set.\n\n\t* unposted (cf. Sebastian: 41891): Test/D04parameter.ztst:\n\tregression test for 41873\n\t\n2017-10-17  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Doc/Zsh/builtins.yo: Document \"typeset -p\"'s optional\n\targument in the inline synopsis.\n\n2017-10-16  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* gi1242+ZSH: 41907: Completion/Debian/Command/_deborphan:\n\tfurther update.\n\n\t* gi1242+zsh: 41904: Completion/Debian/Command/_deborphan,\n\tCompletion/X/Command/_xrandr: new and updated completions.\n\n2017-10-15  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 41898: Functions/Zle/edit-command-line: handle multi-word values\n\tof $VISUAL et al., and line counting of buffer for emacs startup\n\n2017-10-13  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 41873: Src/lex.c: temporarily disable effects of ${(Z:n:)...}\n\tfor parsing $(...) expressions within the parameter value\n\n2017-10-13  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 41833 + 41838: Completion/Unix/Command/_jq: New completion.\n\n2017-10-13  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41877: Src/subst.c, Test/E01options.ztst: Separate out\n\tSH_FILE_EXPANSION loop from parameter substitution as the latter\n\tcan add nodes: SH_FILE_EXPANSION should see following nodes\n\tonly, but on the next loop parameter substitution needs to see\n\tadded nodes for further expansion.\n\n2017-10-11  Daniel Shahaf  <d.s@xxxxxxxxxxxxxxxxxx>\n\n\t* 41825/0002: Completion/Zsh/Command/_stat: Complete -x options\n\tto zsh/stat's 'zstat'.\n\n\t* 41825/0001: Completion/Zsh/Command/_stat: Only complete 'stat'\n\tif it's provided by the zsh/stat builtin.\n\n2017-10-10  Oliver Kiddle  <opk@zsh.org>\n\n\t* 41855: Completion/Unix/Command/_dhclient,\n\tCompletion/BSD/Command/_pfctl, Completion/Unix/Command/_id,\n\tCompletion/Unix/Command/_rm: completion option updates for\n\tOpenBSD 6.2 and handle macOS in rm completion\n\n\t* 41854: Completion/Unix/Command/_ping: also complete options\n\tfor ping on Solaris, macOS, NetBSD and OpenBSD and for ping6\n\n\t* 41853: Completion/Unix/Command/_texinfo: update options for\n\ttexinfo 6.5 and complete also for the pinfo info reader\n\n\t* 41849: Completion/Unix/Command/_unexpand: handle both unexpand\n\tand expand in a single function: they have some commonalities\n\tand it dodges around the clash with the _expand completer\n\n\t* 41831: Completion/Unix/Type/_tilde_files,\n\tCompletion/Unix/Command/_less, Completion/Unix/Command/_vorbis,\n\tCompletion/Zsh/Type/_globquals: fix compset usage in ogg123\n\tcompletion and tweak where compset -p is a better choice than -P\n\n\t* 41835: Src/Zle/complete.c: handle multibyte characters with\n\tcompset -p and -s\n\n2017-10-10  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* uposted, c.f. 41846: Completion/Unix/Command/_expand ->\n\t_expand_cmd: rename to avoid clash with completer.\n\n\t* 41842: Doc/Zsh/grammar.yo: split alias documentation, adding\n\tmore on problems.\n\n2017-10-08  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 41830: Test/E01options.ztst: test for 41828.\n\n\t* 41828: Src/subst.c: skip SHFILEEXPANSION for new nodes added\n\tby stringsubst() in prefork().\n\n2017-10-07  Oliver Kiddle  <opk@zsh.org>\n\n\t* 41827: Completion/Zsh/Context/_brace_parameter: correct\n\tsense of description for ${...:?...} expansion\n\n\t* dana: 41826: Completion/Zsh/Context/_brace_parameter: fix\n\tinaccuracies in completion description wording\n\n\t* 41824: Src/Zle/computil.c, Test/Y03arguments.ztst: fix to\n\tnot complete rest args from an _arguments set alongside\n\tthe argument to and option in a separate set\n\n\t* 41823: Completion/Unix/Command/_expand,\n\tCompletion/Unix/Command/_mv, Completion/Unix/Command/_numfmt,\n\tCompletion/Unix/Command/_seq, Completion/Unix/Command/_split,\n\tCompletion/Unix/Command/_stdbuf, Completion/Unix/Command/_cp,\n\tCompletion/Unix/Command/_timeout,\n\tCompletion/Unix/Command/_unexpand: new completions for some\n\tGNU coreutils utilities\n\n2017-10-07  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Doc/Zsh/mod_stat.yo: zsh/stat docs: Rephrase to\n\tavoid ambiguity due to the ambiguous relative precedence of the\n\t'other than' and 'and' operators.\n\n2017-10-04  Noah Pendleton  <noah.pendleton@gmail.com>\n\n\t* 41808: Completion/Unix/Command/_git: _git-cherry-pick:\n\tTypo fixes\n\n2017-10-04  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41802 (minor tweaks): Src/exec.c, Src/parse.c: use heap\n\tinstead of stack for temporary storage over shell function call,\n\talso fix debug message when FUNCNEST increased.\n\n2017-10-02  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41787 (minor corrections): configure.ac, README,\n\tDoc/Zsh/params.yo, Src/exec.c, Src/parms.c,\n\tTest/C04funcdef.ztst: reduce default nested function depth to\n\t500 and expose as $FUNCNEST.\n\n2017-10-01  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 41797 (tweaked): Doc/Zsh/builtins.yo, Src/builtin.c,\n\tSrc/params.c, Src/subst.c, Src/zsh.h, Test/B02typeset.ztst:\n\ttypeset -p1 outputs arrays and associative arrays with newlines\n\tand indented elements.\n\n2017-09-29  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41789: Src/exec.c: Don't try to mark an FD as saved if it\n\tcouldn't be moved.\n\n2017-09-28  Oliver Kiddle  <opk@zsh.org>\n\n\t* 41772: Src/Zle/computil.c, Test/Y03arguments.ztst: fix bug\n\tin handling of long options with _arguments' -A option\n\n\t* 41762: Completion/Zsh/Context/_value: fix for completion\n\tin assignment to associative array element\n\n2017-09-27  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 41767: Src/exec.c: preserve nonzero exit status on interrupt\n\n2017-09-27  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41773: Test/D04parameter.ztst: Array index assignment tests\n\tfor KSH_ARRAYS.\n\n\t* 41764 (test tweaked): Doc/Zsh/params.yo, Src/params.c,\n\tSrc/subst.c, Src/zsh.h, Test/D04parameter.ztst: allow\n\t[key]+=value when modifying array or associative array.\n\n2017-09-26  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41761: Src/exec.c: Ensure status from interrupt is propagated\n\tfrom builtin.\n\n2017-09-25  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 41747: Sr/hist.c, Src/params.c, Src/subst.c. Src/zsh.h: add\n\tflag so as not to create hash table when checking existence.\n\n2017-09-24  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 41755: Doc/Zsh/params.yo: Followup to last: minor clarification\n\tto docs.\n\n2017-09-24  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 41754: Doc/Zsh/params.yo, NEWS,  README,\n\tSrc/Zle/zle_tricky.c, Src/exec.c, Src/params.c, Src/subst.c,\n\tSrc/zsh.h, Test/B02typeset.ztst, Test/D04parameter.ztst:\n\tallow mix of [ind]=val and traditional assignment for normal\n\t(but not associative) arrays, add tests.\n\n2017-09-22  Oliver Kiddle  <opk@zsh.org>\n\n\t* 41742: Completion/Unix/Command/_mtr: update for mtr 0.92\n\n\t* 41743: Completion/Linux/Command/_tune2fs: update options in\n\tcompletion through e2fsprogs 1.43.6\n\n\t* 41732: Completion/Unix/Command/_tmux: bring completion in\n\tline with tmux 2.5 - removing completion of mode tables\n\n2017-09-21  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted (cf. 41672): Src/utils.c: checkrmall: Record the\n\t41672 bug in a TODO.\n\n\t* unposted (cf. 41707): Src/utils.c: internal: Document the\n\tcount==0 case of checkrmall().\n\n2017-09-20  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 41736: NEWS, Src/exec.c: NO_INTERACTIVE_COMMENTS in $(...)\n\n\t* 41731: Doc/Zsh/params.yo: reformat and expand doc for 41698.\n\n2017-09-18  Oliver Kiddle  <opk@zsh.org>\n\n\t* 41729: Completion/Unix/Command/_gnutls: update options for\n\tgnutls plus cleanup and rearrange the function\n\n\t* 41728: Completion/Unix/Command/_flac (was _metaflac): new\n\tcompletion for flac and update options in metaflac completion\n\n\t* 41727: Completion/Unix/Command/_tidy: run tidy -xml-config\n\tto get HTML options for completion\n\n2017-09-18  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 41723: Src/loop.c: one more case of 41627 in \"while\" loops.\n\n2017-09-18  Oliver Kiddle  <opk@zsh.org>\n\n\t* 41726: Completion/Linux/Command/_cryptsetup: add + and = to\n\toption specs taking arguments and update options to 1.7.5\n\n\t* 41720: Completion/Linux/Command/_chrt,\n\tCompletion/Linux/Command/_ionice,\n\tCompletion/Linux/Command/_losetup,\n\tCompletion/Linux/Command/_wipefs: update completion of options\n\tfor util-linux 2.30.1\n\n\t* 41725: Completion/BSD/Command/_sysrc,\n\tCompletion/Linux/Command/_mii-tool,\n\tCompletion/Redhat/Command/_scl, Completion/Unix/Command/_env,\n\tCompletion/Unix/Command/_dhclient,\n\tCompletion/Unix/Command/_getfacl, Completion/Unix/Command/_gpg,\n\tCompletion/Unix/Command/_ls, Completion/Unix/Command/_screen,\n\tCompletion/Unix/Command/_setfacl,\n\tCompletion/Unix/Command/_strip, Completion/Unix/Command/_truss,\n\tCompletion/Unix/Command/_vim, Completion/Unix/Command/_wget:\n\tassorted minor updates to completion functions\n\n\t* 41724: Completion/Linux/Command/_ethtool: update\n\tcompletion for new options\n\n2017-09-15  Oliver Kiddle  <opk@zsh.org>\n\n\t* 41711: Completion/Unix/Command/_dconf: new dconf completion\n\n\t* 41710: Completion/Unix/Command/_smartmontools:\n\tnew smartctl completion\n\n\t* 41709: Completion/Linux/Command/_sysstat,\n\tCompletion/Unix/Command/_iostat: update options in completion\n\n2017-09-15  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* unposted: Doc/Zsh/params.yo: nodref -> noderef.\n\n2017-09-14  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 41705: Doc/Zsh/expn.yo, Doc/ZSh/params.yo, Src/params.c,\n\tTest/B02typeset.ztst, Test/V10private.ztst: typeset -p output\n\tfor associative arrays and some rephrasings.\n\n2017-09-13  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: typo in proceeding Doc noticed by Oliver.\n\n\t* 41698: Doc/Zsh/params.yo, Src/builtin.c, Src/exec.c,\n\tSrc/params.c, Src/zsh.h, Test/B02typeset.ztst,\n\tTest/D04parameter.ztst: add ([key]=val) assignment syntax.\n\tStill to do: allow to mix with other syntax, improve typeset -p,\n\timplement [key]+=value.\n\n2017-09-13  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41688: Src/jobs.c: \"wait\" for all active jobs should ignore\n\tthose marked STAT_NOPRINT.\n\n\t* 41679: Doc/Zsh/builtins.yo: slight clarifcation on exec of\n\tbuiltins.\n\n2017-09-11  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Src/utils.c: internal: Document zreaddir().\n\n2017-09-11  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* unposted: Doc/Zsh/invoke.yo: YODL compatibility fix for\n\t--emulate.\n\n\t* Thierry Ghelew: 41666: Src/Modules/zpty.c: zpty compatibility\n\tfor OpenBSD.\n\n\t* 41668: Doc/Zsh/invoke.yo, Src/builtin.c, Src/init.c,\n\tSrc/zsh.h, Test/B07emulate.ztst: Add option --emulate at\n\tinvocation to start in correct emulation, as the ARGV0 trick\n\tdoesn't work from other shells.\n\n2017-09-10  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 41622: Src/exec., Test/A01grammar.ztst: exec -a arguments\n\tweren't sanitised.\n\n\t* 41661: Src/subst.c, Test/D04parameter.ztst: need to remove\n\ttokens before passing to bufferwords() for (z).\n\n2017-09-09  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 41628 (plus 41645 by Oliver): Completion/Unix/Command/_ps:\n\tupdate options; do not reset compstate\n\n2017-09-05  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41641: Src/math.c: more arithmetic operations need to be\n\tmarked as rvalues, in particular increment and decrement.\n\n2017-09-04  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 41633: Src/parse.c: make sure function definitions including\n\tanonymous functions put into the background are run in the\n\tbackground.\n\n2017-09-04  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 41621: Completion/Unix/Command/_mkdir: Honour the 'command'\n\tand 'builtin' precommand modifiers.\n\n\t* 41620 (tweaked per 41622): Completion/Unix/Command/_mkdir:\n\tDon't offer a linux-specific option in the 'zsh' variant.\n\n2017-09-04  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41637: Marc Aldorasi: Completion/Unix/Command/_objdump:\n\texplicit completion instead of generating from _object_files.\n\n2017-09-02  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 41623: Etc/FAQ.yo: update to align with Yodl 3.\n\n2017-08-31  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* unposted: Functions/Misc/zed: zstyle -m can set match,\n\tmbegin, mend, so declare locally.\n\n\t* 41627: Src/loop.c, Test/C03traps.ztst: fix problem with\n\tERR_RETURN in initialisation scripts and also on nested\n\tfunction involving ERR_RETURN suppression in the caller.\n\n2017-08-30  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 41567: Completion/Unix/Command/_tmux: Complete detached\n\tsessions first for attach-session.\n\n\t* 41566: Completion/Unix/Command/_tmux: Complete only attached\n\tsessions for detach-session.\n\n\t* 41564: Completion/Unix/Command/_tmux: Complete environment\n\tvariables and their values for set-environment and\n\tshow-environment.\n\n\t* 41557: Completion/Unix/Command/_tmux: show-environment,\n\tset-environment: Make -g,-t mutually exclusive.\n\n\t* 41558: Completion/Unix/Command/_tmux: Complete option names\n\tfor show-options and show-window-options.\n\n2017-08-27  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 41608 (plus tests): Src/exec.c, Test/C03traps.ztst: ERR_EXIT\n\tbehaviour restored when executing a function in body of else.\n\n2017-08-29  Андрей Стоцкий (_RuRo_)  <ruro.ruro@ya.ru>\n\n\t* 41618: Completion/Unix/Command/_todo.sh: Added some arguments\n\tautocompletion to _todo.sh.\n\n2017-08-29  Oliver Kiddle  <opk@zsh.org>\n\n\t* 41617: Completion/Linux/Command/_tracepath: complete new options\n\n\t* 41616: Completion/Unix/Command/_entr: update options to 3.8\n\n\t* unposted: Completion/Unix/Type/_bpf_filters:\n\tadd missing #autoload directive\n\n2017-08-28  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Config/version.mk: Post-release version bump.\n\n2017-08-27  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: Config/version.mk: 5.4.2.\n\n2017-08-25  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 41599: README, Etc/FAQ.yo: updates for 5.4.2.\n\n2017-08-25  William da Silva  <w.vigolodasilva@gmail.com>\n\n\t* 41602 (tweaked): Completion/Unix/Command/_gpg: Improve wording\n\tin gpg completion.\n\n2017-08-25  Oliver Kiddle  <opk@zsh.org>\n\n\t* 41601: Completion/Unix/Command/_arp,\n\tCompletion/Unix/Command/_route: handle system differences\n\tin arp completion and add function for route\n\n\t* 41600: Completion/Unix/Command/_mpc: fix quoting of\n\tsongs for completion and avoid sending errors to stderr\n\n\t* 41598: Completion/Unix/Command/_w,\n\tCompletion/Unix/Command/_who: new who and w completions\n\n2017-08-24  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 41590 (modified as per 41595): README, Doc/Zsh/options.yo,\n\tSrc/exec.c, Src/init.c, Src/loop.c, Src/signals.c, Src/zsh.h,\n\tTest/E01options.ztst: make ERR_RETURN work within each function\n\tcontext, leaving ERR_EXIT global.\n\n2017-08-22  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 41565: Functions/VCS_Info/VCS_INFO_patch2subject: vcs_info\n\tpatch2subject: Support `svn log -r N --diff` output.\n\n2017-08-18  Oliver Kiddle  <opk@zsh.org>\n\n\t* 41568: Completion/Unix/Command/_vmstat: handle vmstat options\n\ton NetBSD and Solaris and add some exclusion lists\n\n\t* 41563: Completion/Base/Utility/_regex_words: fix completion\n\tdescription alignment with _regex_words\n\n\t* 41562: Completion/BSD/Command/_rcctl: correct completed word\n\n\t* 41561: Completion/Unix/Command/_dhclient: handle Free/OpenBSD\n\tand bring options up-to-date for the ISC implementation\n\n\t* 41560: Completion/Unix/Command/_chsh: cleanup chsh completion\n\tfor different platforms\n\n2017-08-16  Oliver Kiddle  <opk@zsh.org>\n\n\t* Tomasz Pala: users/22834: Completion/Linux/Command/_modutils:\n\tfix irritating bug in file glob for Linux kernel modules\n\n\t* Tomasz Pala: users/22834: Completion/Unix/Command/_ip:\n\tallow completion after -c and a few other new options\n\n\t* 41556: Completion/Solaris/Command/_snoop\n\tCompletion/Unix/Command/_ngrep, Completion/Unix/Command/_tcpdump,\n\tCompletion/Unix/Type/_bpf_filters: complete BPF (libpcap) filters\n\n\t* 41552: Completion/Unix/Command/_git: complete only branches\n\tafter git worktree add --detach because the --detach is\n\tsuperfluous for other commits\n\n2017-08-15  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* posted twice but has not shown up: Src/exec.c, Src/zsh.h:\n\trecord file desriptors that remain open to save ones in the\n\trange 0 to 9 in fdtable and close them on forking.\n\n2017-08-14  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Phil: 4152: Src/Modules/pcre.c, Test/V07pcre.ztst: fix big\n\twith uninititialised memory in logic for extracting matched\n\tparentheses.\n\n2017-08-11  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Phil: 41527 (tweak to use heap memory): Src/module.c,\n\tTest/V07pcre.ztst: fix [[ ... ]]] conditions passed to modules.\n\n2017-08-09  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: README: 5.4,1 typo fixed.\n\n\t* 41504: Src/lex.c, Src/parse.c, Test/A01grammar.ztst: make\n\tempty strings work in case patterns with no opening\n\tparenthesis.\n\n2017-08-08  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: Config/version.mk: update to 5.4.1-dev-0.\n\n\t* unposted: Config/verson.mk, README, Etc/FAQ.yo: update to version\n\t5.4.1.\n\n\t* unposted: back off 41499 as it has side effects which, while\n\tperfectly logical, are not what POSIX expects.\n\n2017-08-08  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41510: Doc/Zsh/params.yo: update doc for $ZSH_PATCHLEVEL.\n\n2017-08-08  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 41481: Completion/Unix/Command/_df,\n\tCompletion/Unix/Command/_mount, Completion/Unix/Type/_umountable:\n\t_df: Complete mounted device and mount points.\n\n\t* 41486: Completion/Unix/Command/_tmux: Correct completions of\n\tnew-window, split-window, respawn-window, respawn-pane.\n\n\t* unposted: Config/version.mk: Post-release version number bump\n\tto 5.4-dev-0.\n\n2017-08-07  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: version 5.4.\n\n\t* 41499 (with one further tweak): Src/utils.c,\n\tDoc/Zsh/options.yo, Test/E01options.ztst: With POSIX_STRINGS\n\tignore terminating separator when splitting.\n\n2017-08-07  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Anthony: 41500: Doc/Zsh/mod_zutil.yo: document '-' to end\n\tzparseopts options.\n\n2017-08-05  Oliver Kiddle  <opk@zsh.org>\n\n\t* 41493: Completion/Unix/Command/_git: fix to not print hash\n\tinto terminal and update options for git 2.14\n\n\t* 41492: Completion/BSD/Command/_gstat,\n\tCompletion/Unix/Command/_flex, Completion/Unix/Command/_sqlite,\n\tCompletion/Unix/Command/_sudo: update options in completions\n\n2017-08-03  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 41485: Test/A03quoting.ztst: test for previous fix.\n\n\t* Martijn: 41484: Src/utils.c: ${(q+)...} didn't properly\n\tquote backslashes.\n\n2017-08-02  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 41479: Completion/Unix/Command/_xz: Complete compressed,\n\trather than uncompressed, files after -d.\n\n\t* 41475: Completion/Unix/Command/_git: Complete files after\n\t'reset' when there are no commits, when the 'verbose' style\n\tis set.\n\n2017-08-01  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41470: Doc/Zsh/builtins.yo: note that 41464 stops exec finding\n\tother precommand modifiers with POSIX_BUILTINS (for now, at\n\tleast).\n\n2017-08-01  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 41474: Completion/Debian/Command/_pbuilder,\n\tCompletion/Debian/Type/_deb_codenames: Fix pbuilder's\n\t--distribution,--architecture completion.\n\n2017-07-31  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: Config/version.mk: test release 5.3.1-test-2.\n\n2017-07-31  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Completion/Unix/Command/_git: Fix style lookup for\n\t'max-verbose'.\n\n2017-07-29  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 41472: Doc/Zsh/contrib.yo, Functions/Prompts/prompt_bart_setup,\n\tFunctions/Prompts/prompt_default_setup,\n\tFunctions/Prompts/prompt_off_setup,\n\tFunctions/Prompts/prompt_restore_setup,\n\tFunctions/Prompts/promptinit: introduce cleanup hooks default and\n\trestore special themes, and update documentation\n\n2017-07-29  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: Etc/FAQ.yo, NEWS, README: update in preparation for\n\t5.4 release.\n\n2017-07-28  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 41467: Completion/Unix/Command/_tmux,\n\tCompletion/Unix/Type/_cmdambivalent, Doc/Zsh/compsys.yo:\n\tCorrect completion of 'tmux new <TAB>'.\n\n\t* 41471 (tweaked): Completion/Unix/Command/_subversion: _svn:\n\tComplete propvals in 'propset'.\n\n\t* 41458: Completion/Unix/Command/_subversion: Don't cache an\n\tempty commands list when svn is not available at the first\n\tinvocation of _svn.\n\n2017-07-26  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41464, 41466 (modified): Doc/Zsh/builtins.yo,\n\tDoc/Zsh/options.yo, Src/exec.c, Test/E01options.ztst:\n\tPOSIX_BUILTINS stops \"exec\" finding builtins or shell\n\tfunctions.  Document existing behaviour.\n\n\t* Jim: 41461: Doc/Zsh/seealso.yo: complete list of zsh manual\n\tpages in introduction.\n\n2017-07-20  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 41433: Doc/Zsh/expn.yo: Further clarification about expansion\n\tprocessing.\n\n2017-07-17  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41429: Doc/Zsh/expn.yo: Better documentation of how stages of\n\texpansion fit together.\n\n2017-07-15  Oliver Kiddle  <opk@zsh.org>\n\n\t* 41432: Completion/Unix/Command/_xz: use option grouping\n\n\t* 41431: Completion/Linux/Command/_lsblk,\n\tCompletion/Linux/Command/_ss, Completion/Linux/Command/_strace,\n\tCompletion/Unix/Command/_diffstat, Completion/Unix/Command/_dig,\n\tCompletion/Unix/Command/_dmidecode, Completion/Unix/Command/_irssi,\n\tCompletion/Unix/Command/_gsettings, Completion/Unix/Command/_ssh,\n\tCompletion/X/Command/_xclip: update options in assorted completions\n\n2017-07-14  Oliver Kiddle  <opk@zsh.org>\n\n\t* Fabian Klötzl: 41414: Completion/Linux/Command/_iptables,\n\tCompletion/Unix/Command/_gcc, Completion/Unix/Command/_git,\n\tEtc/completion-style-guide: fix for commas used in exclusion\n\tlists, missing escape for _gcc and --no-index option for git diff\n\n\t* 41419: Completion/Unix/Command/_git: update for git 2.13.2\n\n2017-07-13  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41420: Src/glob.c, Test/D09brace.ztst: \"{..\" wasn't checked\n\tproperly.\n\n2017-07-11  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Marcin Mielniczuk: 41409: Completion/Unix/Command/_django:\n\tcomplete \"django startproject\".\n\n2017-07-09  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: Config/version.mk: update dev version due to\n\twordcode changes.\n\n\t* Sebastian: 41402: Src/parse.c: Delay checking tokens in\n\tecstrcode() as may not be needed.\n\n\t* Sebastian: 41402: Src/parse.c, Src/zsh.h: Add hasher to\n\tecstrcode() to reduce string comparisons.\n\n2017-07-04  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41391: Doc/Zsh/jobs.yo, Src/jobs.c, Src/zsh.h: delay disown\n\tfor superjob.\n\n\t* Maxime de Roucy: 41385: Src/Zle/complist.c: Avoid invalid\n\taccess with isearch in completion list.\n\n2017-07-03  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Sebastian: 41375: Src/Modules/db_gdbm.c: GDBM interface bug fixes.\n\n2017-07-02  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 41386: Src/jobs.c: when backgrounding a STAT_CURSH job, remove\n\tthe flag, preventing it getting foreground signals.\n\n\t* 22760: Src/utils.c, Test/D04parameter.ztst: NO_MULTIBYTE\n\tpartial string lengths were reported as full string lengths.\n\n2017-06-27  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41368: Src/Zle/compctl.c: missing unqueue_signals().\n\n2017-06-26  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41345: Functions/Prompts/prompt_walters_setup: use consistent\n\tversions of the prompt variables in prompt themes.\n\n2017-06-22  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Axel: 41342: conigure.ac: check for yodl version 4.\n\n\t* 41339: Completion/Unix/Command/_git: unquote treeish argument\n\tfor git checkout completion.\n\n\t* Phil: 41308, tweaked: Src/Modules/pcre.c, Test/V07pcre.ztst:\n\tBehaviour of PCRE with NULL bytes.\n\n2017-06-19  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* Mikael Magnusson: 41319: Src/cond.c: dupstring a possibly\n\treadonly string before modifying\n\n\t* 41322 + comment: Src/input.c: reduce number of changes in signal\n\tqueuing/blocking state during shingetline() to improve read speed\n\n\t* 41317: Src/exec.c: use heap allocation in getoutputfile() to\n\tplug memory leak (cf. Sebastian: 41316)\n\n2017-06-17  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 41242: Src/Zle/compcore.c, Src/Zle/zle_tricky.c: zstrbcmp(...)\n\tremoved in favor of zstrcmp(..., SORTIT_IGNORING_BACKSLASHES)\n\n2017-06-16  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* Wieland Hoffmann: 41265: Functions/Zle/insert-files: quote\n\tthe inserted file names as necessary\n\n2017-06-13  Eric Cook  <llua@gmx.com>\n\n\t* unposted: Functions/Zle/url-quote-magic: fix typo\n\tin the examples\n\n\t* Stephane: 41275: Src/Zle/zle_main.c: Leave stdin open\n\twhen executing widgets.\n\n2017-06-13  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41284: Src/builtin.c, Test/B01cd.ztst: fix null dereference on\n\tcd with no argument if HOME is not set.\n\n2017-06-12  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41244: Doc/Zsh/builtins.yo, Src/Modules/zftp.c,\n\tSrc/Zle/zle_thingy.c, Src/builtin.c, Src/module.c: Add zmodload\n\t-s (silent) option by exposing low-level argument to builtin.\n\n2017-06-09  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Etc/BUGS: Add to Etc/BUGS 41184,41203,41254 about\n\tSTTY and about modules.\n\n2017-06-07  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41239: Src/hist.c, Src/zsh.h: Save and restore default history\n\tevent on context stack.  This prevents expansions in ZLE from\n\tpropagating to the command line expansion.\n\n\t* Sebastian: 41232: Functions/Misc/zed: use terminfo to find\n\tpage up/down keys where available.\n\n2017-06-05  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 41225: Src/params.c: sethparam() should not attempt to change\n\tspecial\tparameters into hashes\n\n2017-06-01  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41191: Src/Zle/textobjects.c, Src/Zle/zle.h,\n\tSrc/Zle/zle_keymap.c: Check for .thingy when we check for a\n\tparticular thingy.\n\n2017-05-30  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 41177: Completion/Unix/Command/_nm: add support for macOS\n\tand OpenBSD\n\n2017-05-26  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41164: Src/hashtable.c, Src/hist.c, Src/zsh.h: Don't free a\n\thistory entry if it's the current line.  This replaces 41113.\n\n2017-05-28  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* Sebastian: 41153: Src/Modules/db_gdbm.c: finish module setup\n\tonly after all error conditions have been checked\n\n\t* Sebastian: 41151: Src/Modules/db_gdbm.c: propagate flags when\n\tcreating new parameter\n\n\t* unposted: Doc/Zsh/mod_complist.yo: clarify ZLS_COLORS pattern\n\tmatching contexts\n\n\t* 41159 (tweaked): Completion/Unix/Command/_ssh: handle \"Include\"\n\tand \"HostName\" lines in ~/.ssh/config\n\n2017-05-24  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Sebastian: 41146: Src/Modules/db_gdbm.c: be more careful about\n\tfreeing strings with embedded nulls.\n\n\t* Sebastian: 40898: Src/Modules/db_gdbm.c: fix GDBM error handling.\n\n2017-05-23  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Stephane: 41142: Src/Modules/system.c: ensure close-on-exec is\n\tapplied to moved file descriptor.\n\n2017-05-22  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Marko Myllenen: 41087: Completion/Unix/Command/_kvno: Update\n\tcompletion to MIT krb 1.14.\n\n\t* Marko Myllenen: 41086: Completion/Unix/Command/_libvirt:\n\tupdate completion.\n\n\t* Marko Myllenen: 41085: Completion/Unix/Command/_openstack:\n\tupdate completion.\n\n\t*  Jörg Sommer: 41128: Doc/Zsh/compsys.yo: typo.\n\n2017-05-19  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* users/22707: Doc/Zsh/compsys.yo: Document use of\n\taccept-exact-dirs for allowing completion after \"magic\"\n\tdirectories.\n\n2017-05-18  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41113 (tweaked): Src/hashtable,c, Src/hist.c, Src/zsh.h: Save\n\tand restore state of linking of current history line into history\n\tring, to avoid an attempt to free the current history line.\n\n2017-05-12  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 41090: Src/Zle/zle_refresh.c, Src/compat.c, Src/pattern.c,\n\tSrc/utils.c, Src/wcwidth9.h, Src/zsh.h, Src/ztype.h,\n\tconfigure.ac: Replace iswprint() if unicode9 support is enabled.\n\tEnable unicode9 if wcwidth() and/or iswprint() is broken.\n\n2017-05-11  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41096: Src/string.c: Fix dupstring_wlen() for unmetafied\n\tstring.  It's not safe to assume null termination.\n\n2017-05-09  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: Test/D02glob.ztst: Adding comment to test changed\n\tline number in output.\n\n2017-05-09  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41081: Src/utils.c, Test/D02glob.ztst: Symlink expansion\n\tdidn't test all buffer length calculations.\n\n\t* 41078: Src/prompt.c, Test/D01prompt.ztst: Empty psvar could\n\tcause bad reference in prompt expansion.\n\n2017-05-08  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41059: Completion/compinit: use 2>&- to avoid error in\n\trestricted shell.\n\n\t* 41073: Src/parse.c, Test/A04redirect.ztst: off-by-one error\n\tchecking for {varid} syntax.\n\n\t* users/22688: Src/parse.c, Test/A04redirect.ztst: Allow mixing\n\tof redirections and arguments after anonymous functions.\n\n\t* 41060: Src/parse.c, Test/A04redirect.ztst: combination\n\tof HERE document and |& was broken by miscounting wordcode owing\n\tto missing flag.\n\n2017-05-04  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 41038: NEWS: Document recent, backwards-compatible precommand\n\tmodifiers changes.\n\n2017-05-03  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41043: Src/exec.c: Close pipes in shell if disowning\n\tbackgrounded job with &!.\n\n2017-05-02  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* unposted: Functions/Zle/insert-unicode-char: use typeset -g to\n\tavoid warnnestedvar warning.\n\n2017-04-28  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41020: Src/exec.c, Test/A01grammar.ztst: \"command -p\" was\n\tbroken by 41008, also add more tests for precommand modifiers.\n\n2017-04-27  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 41012: Src/builtin.c, Src/exec.c, Src/signals.c,\n\tTest/C03traps.ztst: Fix early exit from nested functions in EXIT\n\ttrap.  Drive-by fix of testing for need to exit if exiting when\n\talready in EXIT trap for main shell --- we should just leave\n\timmediately.\n\n2017-04-27  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41016: Test/A01grammar.ztst: test that quoted precommand\n\tmodifiers now work.\n\n2017-04-26  Oliver Kiddle  <opk@zsh.org>\n\n\t* unposted: Completion/Unix/Command/_dbus: fix syntax on line end\n\n\t* 40965 (tweaked c.f. 40968): Completion/BSD/Command/_portmaster,\n\tCompletion/Debian/Command/_a2utils, Completion/Debian/Command/_apt,\n\tCompletion/Debian/Command/_lighttpd,\n\tCompletion/Debian/Command/_lintian,\n\tCompletion/Debian/Command/_wajig,\n\tCompletion/Debian/Type/_deb_architectures,\n\tCompletion/Debian/Type/_debbugs_bugnumber,\n\tCompletion/Linux/Command/_ethtool,\n\tCompletion/Solaris/Command/_svcadm,\n\tCompletion/Solaris/Command/_svccfg,\n\tCompletion/Solaris/Type/_svcs_fmri,\n\tCompletion/Unix/Command/_cdrdao, Completion/Unix/Command/_darcs,\n\tCompletion/Unix/Command/_iftop, Completion/Unix/Command/_lha,\n\tCompletion/Unix/Command/_lsof, Completion/Unix/Command/_pkg-config,\n\tCompletion/Unix/Command/_rrdtool, Completion/Unix/Command/_stgit,\n\tCompletion/Unix/Command/_tcpdump, Completion/Unix/Command/_texinfo,\n\tCompletion/Unix/Command/_units, Completion/Unix/Command/_yafc,\n\tCompletion/Unix/Type/_absolute_command_paths,\n\tCompletion/X/Command/_setxkbmap, Completion/X/Type/_xft_fonts,\n\tCompletion/Zsh/Command/_fc, Completion/Zsh/Context/_value,\n\tCompletion/Zsh/Function/_add-zle-hook-widget,\n\tCompletion/Zsh/Function/_add-zsh-hook:\n\tfix for missing local declarations of expl\n\n2017-04-26  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 41008: Src/exec.c, Src/linklist.c, Test/A01grammar.ztst,\n\tTest/E01options.ztst: Handle expansions when analysing\n\tprecommand modifiers.\n\n2017-04-26  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 41006: Completion/Unix/Command/_ls: add new options for BSDs,\n\tfix a few problems on Linux, etc.\n\n2017-04-23  Daniel Hahler  <zsh@thequod.de>\n\n\t* 40943: Completion/Unix/Command/_git: __git_recent_commits: prefer\n\trecent commit objects.\n\n2017-04-23  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 40995: Src/lex.c, Test/D08cmdsubst.ztst: we need to expand\n\taliases when identifiying the end of a command substitution as\n\tsometimes we can hit a parse error before.\n\n2017-04-23  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 40994: Src/utils.c: unmeta_one() need not count Meta\n\n2017-04-21  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 40990: Src/params.c: When starting in sh emulation, don't\n\tlink PATH-style parameters to array equivalents.  Don't\n\tcheck linkage when exporting colon-separated parameter.\n\n2017-04-18  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 40973: Completion/Unix/Type/_remote_files: Fix completion of\n\tremote files that start with a hyphen/minus.\n\n2017-04-15  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 40977: Src/init.c: \"emulate\" disallows \"--help\" and \"--version\"\n\n2017-04-10  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Orlov Sergey: 40935: Src/utils.c: User names need metafying as\n\tthey can contain multibyte characters on some systems.\n\n2017-04-07  Bart Schaefer  <schaefer@zsh.org>\n\n\t* 40940: Src/cond.c: untokenize names of condition features\n\tbefore attempting to look up the definition from a module.\n\tNecessary because of 40760 (tokenization of '-' as Dash).\n\n2017-04-05  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* users/22653: Doc/Zsh/options.yo: Clarify REMATCH_PCRE\n\tsemantics.\n\n2017-04-04  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 40933: Src/exec.c: we need job text in sourced files in case\n\tof suspending.\n\n2017-04-03  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 40932: Src/params.c, Test/D06subscript.ztst: parameter\n\tsubscripts need to count parentheses to avoid terminating early.\n\n2017-04-02  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 40929 (replaces 40598): Src/subst.c: paramsubst() should always\n\treturn scalar when PREFORK_SINGLE was passed in from prefork()\n\n2017-04-01  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* Sebastian: 40782: Completion/Unix/Type/_hosts: avoid dependency\n\ton zsh/regex module\n\n2017-03-30  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Dag-Erling Smørgrav: 40915: Completion/BSD/Command/_kld: fix\n\tbreakage.\n\n\t* Sebastian: 40909: Test/D04parameter.ztst: stress test for\n\tparameter substitution.\n\n2017-03-27  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 40906: Doc/Zsh/expn.yo: array subst needs [*] or [@] with\n\tKSH_ARRAYS.  Note this for (k) flag.\n\n2017-03-24  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Alexandre Rames: 40878: Completion/Unix/Command/_stgit:\n\tadditional squash command completion.\n\n\t* Aaron Schrab: 40892: Functions/Misc/run-help-ip: subcommand\n\tmatching for ip help.\n\n2017-03-23  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 40891: Src/glob.c, Test/D04parameter.ztst: another similar fix\n\tfor zero-length matches at the end of a string.\n\n2017-03-23  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* users/22601: Src/glob.c, Test/D04parameter.ztst: problem matching\n\tpattern against zero-length string in parameter substitutions.\n\n2017-03-21  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 40875 (Martin Krafft): change description of REC_EXACT option.\n\n\t* 40821: Test/V11db_gdbm.ztst: Note this contains UTF-8\n\tcharacters and fix name.\n\n2017-03-20  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted (after 40859): Doc/Zsh/contrib.yo: Fix yodl warning.\n\n2017-03-19  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 40859: Doc/Zsh/contrib.yo: vcs_info docs: Use proper internal\n\tlinks through texinfo nodes.\n\n2017-03-18  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Doc/Zsh/contrib.yo: vcs_info quilt: Fix documentation\n\tmarkup typo.\n\n2017-03-16  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 40855: Completion/Unix/Command/_dmidecode: Fix _arguments\n\tsyntax error.\n\n2017-03-14  Oliver Kiddle  <opk@zsh.org>\n\n\t* 40843: Completion/Unix/Command/_ruby: update options for\n\truby 2.4.0p0\n\n\t* 40842: Completion/Unix/Command/_basename,\n\tCompletion/Unix/Command/_cat, Completion/Unix/Command/_date,\n\tCompletion/Unix/Command/_df, Completion/Unix/Command/_fmt,\n\tCompletion/Unix/Command/_locate, Completion/Unix/Command/_ls,\n\tCompletion/Unix/Command/_nm, Completion/Unix/Command/_paste,\n\tCompletion/Unix/Command/_readelf, Completion/Unix/Command/_sed,\n\tCompletion/Unix/Command/_strip: update completions for coreutils\n\tand similar utilities, also improving BSD and Solaris support\n\n2017-03-14  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 40818: Completion/Unix/Command/_git: _git-checkout: When\n\tcompleting local heads, prefer recently-checked-out ones. (after\n\t38592)\n\n\t* 40817: Completion/Unix/Command/_git: __git_recent_branches:\n\tRetrieve less data, but faster.\n\n\t* 40822: Doc/Zsh/contrib.yo: vcs_info quilt: Document the\n\t'.quilt-foo' zstyle context element. (Compare users/20807.)\n\n2017-03-12  Oliver Kiddle  <opk@zsh.org>\n\n\t* Wieland Hoffmann: 40837: Completion/Unix/Command/_pgrep:\n\tadd -w on Linux\n\n2017-03-12  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 40816: Doc/Zsh/builtins.yo, Test/D01prompt.ztst: Document\n\tinteraction of 'print -P' and 'print -f'.\n\n2017-03-12  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 40820: Test/V09datetime.ztst: add a few tests of strftime,\n\trelated to 40681\n\n2017-03-11  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 40832: Src/subst.c: fix $x:P when PWD=/\n\n2017-03-11  John Leuenhagen  <john@zlima12.com>\n\n\t* unposted (github pull request #15):\n\tCompletion/Unix/Command/_ip: fix a small typo in `ip`\n\tcorrections file\n\n2017-03-10  Oliver Kiddle  <opk@zsh.org>\n\n\t* 40824: Completion/Unix/Command/_grep: completion handling\n\tof option deviations between different systems\n\n\t* 40823: Completion/Linux/Command/_sshfs: update for sshfs 2.8\n\n2017-03-10  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 40819: Src/glob.c: Fix IS_DASH() test in BRACE_CCL handling.\n\n2017-03-10  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* unposted: Src/Modules/tcp.c: silence compiler warnings on Cygwin\n\n\t* unposted: Src/hashtable.c: declare file local variables as static\n\n2017-03-09  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* Fabian Klotzl: 40808: Completion/Linux/Command/_mdadm,\n\tCompletion/Unix/Command/_git, Completion/Unix/Command/_grep,\n\tCompletion/Unix/Command/_hg, Completion/Unix/Command/_java,\n\tCompletion/Unix/Command/_ls, Completion/Unix/Command/_mysql_utils,\n\tCompletion/Unix/Command/_rake, Completion/Unix/Command/_user_admin,\n\tCompletion/Unix/Command/_wget, Completion/Unix/Command/_zpool:\n\tfix typos where (x,y) should have been (x y) in _arguments syntax\n\n\t* 40801: Completion/Unix/Command/_mount: turns out that work of\n\tart removed by 33963 was necessary after all: re-fix completion\n\tof mount points with spaces in the name\n\n2017-03-09  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 40805: (combined with the previous change):\n\tTest/D04parameter.ztst: Check that $- and ${-} produce a\n\tplausible result.\n\n\t* Sebastian: 40803 as modified in 40804 and 40806:\n\tTest/D04parameter.ztst: check for the (z) split flag on some\n\tpartly binary data that might be problematic.\n\n\t* 40796: Src/exec.c: We don't want magic '=' expansion if we are\n\talready parsing a separate variable name and value.\n\n2017-03-08  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 40799: Src/params.c: fix $- expansion partly broken by 40760\n\n\t* 40763: Src/Zle/compmatch.c, Src/Zle/computil.c, Src/utils.c:\n\tcount wide characters and Cmatcher pointers more sanely in\n\tcfp_matcher_pats(), and count characters in pattern_match()\n\tthe same way to stay in sync; might not fix wide-char matching\n\tin completion matcher-lists but should avoid wild pointer crash\n\n2017-03-08  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 40745 + 40753: Src/init.c, Src/params.c: Fix 'unset\n\tZLE_RPROMPT_INDENT' not restoring the default behaviour.\n\n\t* 40744: Doc/Zsh/grammar.yo: Document the SHORT_LOOPS 'function'\n\tsyntax.\n\n2017-03-07  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Sebastian: 40706: Test/V11db_gdbm.ztst: Fix ordering\n\tdependence in gdbm test.\n\n\t* 40760: Src/cond.c, Src/exec.c, Src/glob.c, Src/lex.c,\n\tSrc/math.c, Src/parse.c, Src/pattern.c, Src/subst.c,\n\tSrc/utils.c, Src/zsh.h, Test/D02glob.ztst: Always tokenise '-'\n\tto Dash to eliminate niggles with range matches in complicated\n\tcontexts.  Match both - or Dash in contexts that don't care.\n\n2017-03-07  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 40780: Completion/Unix/Command/_mount: Don't use =~ for simple\n\tprefix match\n\n2017-03-05  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* Sebastian: 40726: Doc/Zsh/mod_curses.yo, Src/Modules/curses.c,\n\tconfigure.ac: add \"zcurses resize\" for sane terminal size change\n\n2017-03-04  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* Sebastian: 40781: Src/params.c, Test/A06assign.ztst: optimize\n\tarray assignment, similar to 39995 for string assignment\n\n\t* 40654: Src/exec.c: exit cleanly from special POSIXBUILTINS in\n\tsubshells\n\n2017-03-04  Oliver Kiddle  <opk@zsh.org>\n\n\t* unposted (github): Christoffer Aasted:\n\tCompletion/Unix/Command/_ant: allow -Dproperty=/path_complete\n\n\t* unposted (from Ferenc- via github): Completion/Unix/Command/_gcc:\n\tAdd newer C++ standard options to gcc completion\n\n\t* unposted: Completion/Unix/Command/_tmux: complete 'tiled' layout\n\n\t* unposted: Completion/Unix/Command/_xz: fix argument to --format\n\n\t* 40715: Completion/Unix/Command/_git: update for git 2.12.0\n\n\t* 40597: Completion/BSD/Command/_sysrc,\n\tCompletion/Base/Utility/_values: be flexible about order of\n\toptions to _values\n\n2017-03-03  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Sebastian: 40170: Src/Modules/curses.c: Fix up error number\n\tresetting in curses module.  This appears to resolve an issue\n\tmentioned in comments but attributed elsewhere, so remove\n\tconfusion here.\n\n\t* 40173: Test/V11db_gdbm.ztst: don't report an error if gdbm\n\tmodule doesn't load as this simply causes the test to be skipped.\n\n\t* 40702: Doc/Zsh/zle.yo, Src/Zle/zle_params.c: add\n\tKEYS_QUEUED_COUNT variable to ZLE parameters.\n\n2017-03-02  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 40681: Src/Modules/datetime.c: strftime builtin should\n\treturn 1 if zstrftime() returns -1.\n\n2017-03-01  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 40622 (typos fixed): Doc/Zsh/builtins.yo, Src/builtin.c,\n\tSrc/math.c, Test/C04funcdef.ztst: add functions -Ms for\n\tmathematical functions with string arguments.\n\n\t* Sebastian: 40562: Test/V11db_gdbm.ztst: this was missed out of\n\tthe previous commit.\n\n2017-02-28  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 40641: Doc/Zsh/expn.yo, Doc/Zsh/roadmap.yo: docs: patterns:\n\tAdd '|' to the overview. Clarify that it short-circuits.\n\n2017-02-26  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 40650: Src/Modules/parameter.c: redo 40508 and 40626 with\n\tcomments explaining what is actually going on\n\n2017-02-25  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 40644: Src/Modules/parameter.c, Test/V06parameter.ztst:\n\tRevert 40626 which broke tests.\n\n2017-02-25  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 40640 (plus doc typo fixed): Doc/Zsh/expn.yo, Src/subst.c: the\n\t(A) parameter flag forces array result even if assignment syntax\n\tis not used\n\n2017-02-25  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Completion/Zsh/Context/_brace_parameter: Port 40617\n\tto the completion.\n\n\t* 40626: Src/Modules/parameter.c, Test/V06parameter.ztst:\n\tMake $options re-settable.  [reverted in 40644]\n\n2017-02-23  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted (cf. 40617): Doc/Zsh/expn.yo: clarify description of\n\tthe ${(A)name=value} and ${(AA)name=value} parameter flag uses.\n\n\t* 40624 (cf. Danek Duvall, 40563): Src/signals.c: conditionally\n\thandle WIFCONTINUED to properly set SP_RUNNING process status\n\n2017-02-23  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 40604: configure.ac, Src/watch.c: revert to the old method if\n\tgetutent() is not available\n\n2017-02-21  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* Julien Nicoulaud: 40586:\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_git: discard stderr\n\n2017-02-20  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Test/ztst.zsh: use \"diff -a\" in case special characters\n\twere written to the test output\n\n\t* 40598: Src/subst.c: paramsubst() should always return scalar\n\twhen PREFORK_SINGLE was passed in from prefork()\n\n\t* Martijn Dekker: 40565 (tweaked): test cases for assigning array\n\tto scalar with various combinations of SHWORDSPLIT and IFS\n\n2017-02-19  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 40593: Src/subst.c: SHWORDSPLIT + unset IFS should cause default\n\tsplitting of $@ and other array references with (@) or [@]\n\n\t* 40576 (tweaked): Src/exec.c: entersubsh(): small improvement to\n\tloop that resets trap handlers; unblock any signals that were\n\tblocked for trap handling\n\n2017-02-19  Oliver Kiddle  <opk@zsh.org>\n\n\t* 40569: Completion/Unix/Command/_gphoto2: update to gphoto2 2.5.11\n\n2017-02-17  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t*  Øystein Walle: 40568: REMATCH_PCRE option is not enabled by\n\tdefault.\n\n\t* Sebastian: 40558, 40562: Doc/Zsh/mod_db_gdbm.yo,\n\tSrc/Modules/db_gdbm.c, Src/Modules/db_gdbm.mdd: General\n\timprovements to zsh/db/gdbm module.\n\n2017-02-13  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 40539: Fabian Klotzl: Completion/Unix/Command/_gcc: typo in MIPS\n\tbranch of argument selection\n\n\t* 40524: Src/Modules/example.c: do not free a null array\n\n2017-02-13  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 40537: Doc/Zsh/builtins.yo: document the foregoing.\n\n\t* Sebastian: 40536: Src/builtin.c, Src/zsh.h: prepend directory\n\tof function autoload with absolute path to fpath if loading a\n\tfunction by relative path.\n\n2017-02-10  Oliver Kiddle  <opk@zsh.org>\n\n\t* 40512: Completion/Unix/Command/_entr: new entr completion\n\n\t* unposted: Completion/Linux/Command/_lsusb: using a colon in\n\tthe tag name was not such a good idea\n\n2017-02-09  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 40510: Misc/vcs_info-examples, README: vcs_info: Update the\n\t$psvar episode with '%'-unescaping. (Follow-up to 40492.)\n\n\t* 40492: Doc/Zsh/contrib.yo, Etc/BUGS,\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_hg,\n\tFunctions/VCS_Info/VCS_INFO_set-patch-format, README: vcs_info:\n\tEscape '%' signs in payloads.\n\n2017-02-08  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Completion/Unix/Command/_subversion: _svn: Fix\n\t'--show-revs' completion.\n\n\t* 40508: Src/Modules/parameter.c, Test/V06parameter.ztst:\n\tMake $functions re-settable.\n\n2017-02-07  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Sebastian: 40507: Src/Modules/db_gdbm.c: remove extraneous\n\tnull byte creating records.\n\n2017-02-07  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 40494: Completion/Unix/Command/_git: Use slashes matchspec\n\tfor references (as already used for branch names).\n\n2017-02-07  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 40493/0002: Completion/Unix/Command/_git: _git-checkout:\n\tReorder default completions.\n\n2017-02-07  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 40493/0001: Completion/Unix/Command/_git: _git-checkout:\n\tNo functional change.\n\n2017-02-06  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Jan Matejek: 40434: Completion/Unix/Command/_patchutils:\n\tupdate.\n\n2017-02-04  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Doc/Zsh/contrib.yo,\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_git: vcs_info git:\n\tFix typo in manual.\n\n2017-02-03  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 40480: Functions/VCS_Info/Backends/VCS_INFO_get_data_git,\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_hg,\n\tFunctions/VCS_Info/VCS_INFO_quilt,\n\tFunctions/VCS_Info/VCS_INFO_set-patch-format: vcs_info\n\tset-patch-format: Eliminate the remaining code duplication.\n\n\t* 40479: Functions/VCS_Info/Backends/VCS_INFO_get_data_git,\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_hg,\n\tFunctions/VCS_Info/VCS_INFO_quilt,\n\tFunctions/VCS_Info/VCS_INFO_set-patch-format: vcs_info\n\tset-patch-format: Prepare for more code sharing between the\n\tcallers.\n\n\t* 40481: Functions/VCS_Info/Backends/VCS_INFO_get_data_hg:\n\tvcs_info hg: Pass arguments to the set-patch-format hook.\n\n\t* 40478: Functions/VCS_Info/VCS_INFO_set-patch-format: vcs_info\n\tset-patch-format: Guard against empty variable elision.\n\n\t* 40476: Doc/Zsh/contrib.yo, Functions/VCS_Info/VCS_INFO_quilt:\n\tvcs_info $backend_misc: Document at the right point, provide\n\tin quilt 'standalone' mode.\n\n2017-02-02  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 40486: Src/Modules/regex.c, Src/params.c: don't warn on\n\tcreation of MATCH etc. from regex test as this is implicit.\n\n2017-02-01  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 40483 (cf. Eric Freese: 40482): Src/Modules/zpty.c: Remove zpty\n\texit hook from forked processes\n\n2017-02-01  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 40460: Src/params.c, Test/E01options.ztst: WARN_NESTED_VAR:\n\tDon't warn when assigning to a slice of an existing array\n\n2017-02-01  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 40470: Test/D07multibyte.ztst: make the test work also on\n\tOSs which always use ASCII collation (e.g. macOS).\n\n2017-01-31  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 40466: Makefile.in: update depencencies so autoheader is run\n\tafter autoconf when configuration input files change.\n\n2017-01-30  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 40469: Src/Zle/complete.c: change strategy from 40453 to use\n\tpatcompile(PAT_HEAPDUP) instead of signal queueing.\n\n2017-01-30  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 40465: Test/C04funcdef.ztst, Test/V06parameter.ztst: use\n\tmethod from cd tests to output current directory.\n\n2017-01-29  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t*  Zhiming Wang: 40450, 40451: Completion/Unix/Command/_swift,\n\tCompletion/Unix/Command/_openstack: Add new swift language\n\tcompletion and attempt to resolve against openstack swift command.\n\n2017-01-28  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 40453: Src/Modules/zpty.c, Src/Modules/zutil.c,\n\tSrc/Zle/compctl.c, Src/Zle/complete.c, Src/Zle/computil.c,\n\tSrc/Zle/zle_hist.c, Src/builtin.c, Src/cond.c, Src/glob.c,\n\tSrc/loop.c, Src/options.c, Src/parse.c: signal handler safety\n\tfor callers of patcompile(PAT_STATIC), which is not re-entrant.\n\n\t* 40439: Src/zsh.h: PAT_HEAPDUP definition just for clarity\n\n2017-01-28  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 40440: ../Doc/Zsh/mod_parameter.yo, Modules/parameter.c,\n\thashtable.c, ../Test/C04funcdef.ztst, ../Test/V06parameter.ztst:\n\tAdd $functions_source to zsh/parameter to help find where\n\tfunctions where loaded from.\n\n2017-01-27  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Zach Whaley: 40200: Completion/Unix/Command/_perforce: update\n\tfor latest Perforce versions.\n\n\t* 40425: configure.ac, Src/watch.c: HAVE_* tests for getutxent\n\tetc.\n\n2017-01-26  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 40423: Src/params.c, Test/E01options.ztst: similar for type\n\tconversion the other way.\n\n\t* 40422: Src/params.c, Test/E01options.ztst: more\n\tWARN_NESTED_VAR cases that were broken in the original patch.\n\n2017-01-25  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 40413: Src/params.c, Test/E01options.ztst: no WARN_NESTED_VAR\n\twarning on bogus parameter created for subscripted assignment.\n\n2017-01-25  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 40403/0004: Functions/VCS_Info/Backends/VCS_INFO_get_data_git,\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_hg,\n\tFunctions/VCS_Info/VCS_INFO_quilt,\n\tFunctions/VCS_Info/VCS_INFO_set-patch-format: vcs_info\n\tset-patch-format helper: Part #4.\n\n\t* 40403/0003: Functions/VCS_Info/Backends/VCS_INFO_get_data_git,\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_hg,\n\tFunctions/VCS_Info/VCS_INFO_quilt,\n\tFunctions/VCS_Info/VCS_INFO_set-patch-format: vcs_info\n\tset-patch-format helper: Part #3.\n\n\t* 40403/0002: Functions/VCS_Info/Backends/VCS_INFO_get_data_git,\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_hg,\n\tFunctions/VCS_Info/VCS_INFO_quilt,\n\tFunctions/VCS_Info/VCS_INFO_set-patch-format: vcs_info\n\tset-patch-format helper: Part #2.\n\n\t* 40403/0001: Functions/VCS_Info/Backends/VCS_INFO_get_data_git,\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_hg,\n\tFunctions/VCS_Info/VCS_INFO_quilt,\n\tFunctions/VCS_Info/VCS_INFO_set-patch-format,\n\tFunctions/VCS_Info/vcs_info: vcs_info set-patch-format helper:\n\tPart #1.\n\n\t* 40401: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info git: Fix the %c patch-format expando.\n\n\t* 40396: Doc/Zsh/contrib.yo: vcs_info quilt: More documentation\n\tof '%Q' and 'use-quilt'.\n\n\t* 40392: Functions/VCS_Info/VCS_INFO_patch2subject: vcs_info\n\tpatch2subject: Support `git show` output.\n\n2017-01-24  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* posted: Test/D07multibyte.ztst: Make D07 recognize more\n\tspellings of pl_PL.UTF-8\n\n2017-01-24  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 40404: Src/builtin.c: quoting of commands in whence should\n\tonly apply to whence -v.\n\n2017-01-23  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 40391: Completion/compinit, Doc/Zsh/builtins.yo,\n\tDoc/Zsh/options.yo, Src/builtin.c, Src/exec.c, Src/options.c,\n\tSrc/params.c, Src/zsh.h, Test/E01options.ztst: Add\n\tWARN_NESTED_VAR option and functions -W to turn it on similarly\n\tto functions -T.\n\n2017-01-23  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Etc/BUGS: Record users/20807 vcs_info quilt issue.\n\n2017-01-18  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 43080: Test/C04funcdef.ztst: a few more tests for autoload\n\twith absolute path.\n\n\t* 40375: Src/builtin.c, Src/subst.c: autoload with explicit path\n\tmustn't trash already loaded function.  Also drive-by removal of\n\tduplicated duplication in =cmd expansion.\n\n2017-01-17  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* unposted: Completion/Zsh/Command/_typeset: autoload ~... also\n\tcompletes file.\n\n2017-01-16  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 40372: Completion/compinit: turn off POSIX_IDENTIFIERS option\n\tfor completion.\n\n\t* 40369: Src/builtin.c: whence -v should probably quote commands\n\tsince it quotes functions.\n\n\t* 40353 (plus improvement to whence -v): Src/exec.c,\n\tSrc/hashtable.c, Src/signals.c: use directory cache where\n\tpossible for all functions loaded from directory including\n\tfpath.\n\n2017-01-15  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 40362: Src/Zle/computil.c: need duplicated values for setting\n\tparameter in compvalues.  Was causing obscure but surprisingly\n\trare crashes in value completion.\n\n2017-01-13  Eric Cook  <llua@gmx.com>\n\n\t* earnestly: 40355: Completion/Unix/Command/_mpc: improve\n\tplaylist completion\n\n2017-01-13  Oliver Kiddle  <opk@zsh.org>\n\n\t* 40345: Completion/Linux/Command/_lsusb: update lsusb completion\n\n\t* 40344: Completion/Linux/Command/_lsblk: new lsblk completion\n\n2017-01-12  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: Src/hashtable.c: one missing *name = NULL.\n\n\t* 40342: Src/builtin.c, Src/exec.c, Src/hashtable.c,\n\tSrc/signals.c, Test/C04funcdef.ztst: add directory name cache\n\tfor directories recorded for autoload files.\n\n2017-01-12  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 40335: Src/builtin.c, Src/exec.c, Src/zsh.h,\n\tTest/C04funcdef.ztst: be more careful autoload filename is\n\tdirectory, not source location.\n\n\t* Jens Elkner: 40333: Src/watch.c: Fix the utmpx interface for\n\twatch as otherwise it failed on some OSes.\n\n2017-01-11  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 40332: Completion/Zsh/Command/_typeset: completion for new\n\tautoload features.\n\n2017-01-11  Oliver Kiddle  <opk@zsh.org>\n\n\t* 40321: Doc/Zsh/compsys.yo, Src/Zle/computil.c,\n\tTest/Y03arguments.ztst: _arguments option groups\n\n2017-01-11  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* unposted: Src/builtin.c, Src/exec.c: be more careful to free\n\tmemory when updating filename in struct shfunc.\n\n\t* 40327 (with minor fixes): Doc/Zsh/builtins.yo,\n\tREADME,Src/builtin.c, Src/exec.c, Src/hashtable.c, Src/parse.c,\n\tSrc/zsh.h, Test/C04funcdef.ztst: add ability to autoload\n\tfunction from file using full path, with additional related\n\tautoload options -r, -R, -d and extension to -X.\n\n2017-01-10  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 40305: Src/Zle/complist.c, Src/Zle/zle_main.c,\n\tSrc/Zle/zle_refresh.c, Src/Zle/zle_thingy.c: fix some problems\n\tredisplaying command line after interrupts.\n\n\t* 40306 with documentation additions: Doc/Zsh/options.yo,\n\tREADME, Src/input.c, Src/options.c, Src/parse.c, Src/zsh.h,\n\tTest/A02alias.ztst: Add ALIAS_FUNC_DEF option and make\n\tthe default behaviour to disallow functions where the\n\tname is expanded as an alias (unless part of a complete\n\tfunction definition within the alias).\n\n2017-01-10  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 40303: Completion/Debian/Command/_bts: Add more subcommands.\n\n2017-01-10  Phil Pennock  <zsh-workers+phil.pennock@spodhuis.org>\n\n\t* 40318 (in part): Doc/Zsh/builtins.yo: Document echo \\c\n\tbehaviour.\n\n2017-01-10  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 40302: Completion/Unix/Command/_swaks: New _swaks completion\n\t(common options only).\n\n2017-01-08  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: LICENCE: Update year to $now (2017).\n\n2017-01-06  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* m0viefreak: 40285: Src/Zle/zle_hist.c: more care needed\n\tmanaging patterns in history isearch if there are hooks\n\taround.\n\n2017-01-05  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 40270 (after 39995): Src/params.c: Add cross-reference for\n\trobustness.\n\n\t* 40264: Completion/Unix/Command/_man: Complete all sections\n\tafter '-a'.\n\n\t* users/22320: Etc/BUGS: Add 40240, label 40106.\n\n2017-01-05  Oliver Kiddle  <opk@zsh.org>\n\n\t* 40269: Src/Zle/computil.c, Test/Y03arguments.ztst:\n\thandle option exclusion within current word for clumped options\n\n2017-01-04  Oliver Kiddle  <opk@zsh.org>\n\n\t* 40227: Src/Zle/computil.c, Test/Y03arguments.ztst: new approach\n\tto 39611 (_arguments sets and rest arguments starting with a dash)\n\n\t* 40226: Src/Zle/computil.c, Test/Y03arguments.ztst:\n\ttidy up some of the _arguments set code\n\n2017-01-03  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 40265: Src/pattern.c: fix continuing problems with Meta characters\n\tin pattern that resolves to a string by copying source string.\n\tTriggered by string that (correctly) turned Dash into '-'.\n\n\t* Paulo Andrade: 40260: Src/prompt.c: Set newly allocated\n\tspace in prompt buffer to zero as it may be tested.\n\n2017-01-01  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* users/22319: Src/subst.c: ${ary1:^ary2} should not change\n\tthe isarr state of the expansion of ary1 unless ary1 is made\n\tfrom a scalar, lest semantics of (@) in double quotes be lost.\n\n2016-12-30  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 40248: Src/hist.c: suppress errors from zshaddhistoryhook,\n\tand do not call it if no history entry will be written\n\n2016-12-28  Sebastian Gniazdowski  <psprint@fastmail.com>\n\n\t* 40231: Src/params.c: Optimise setarrvalue().\n\n2016-12-28  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 40232: configure.ac: Remove SH_USE_BSD_ECHO autoconf test.\n\n2016-12-27  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted (see users/22287): Completion/compinit: _comp_options\n\tneeds to disable ERR_RETURN along with ERR_EXIT\n\n2016-12-24  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* Oliver: 40118: Functions/Zle/bracketed-paste-magic: relocate\n\tBUFFER/CURSOR reset to work around \"fc -p\" issue (alternate fix\n\treplacing 40115).\n\n\t* unposted: Functions/Zle/bracketed-paste-magic: revert 40115,\n\tthus restoring 38579.\n\n2016-12-22  Oliver Kiddle  <opk@zsh.org>\n\n\t* 40162: Src/Zle/computil.c, Test/Y03arguments.ztst: _arguments\n\tsupport for a match spec in combination with sets\n\n2016-12-22  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Config/version.mk: Post-release version bump to\n\t5.3.1-dev-0.\n\n2016-12-21  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: Config/version.mk, Etc/FAQ.yo, NEWS, README:\n\trelease 5.3.1:\n\n2016-12-18  Baptiste Daroussin  <bapt@FreeBSD.org>\n\n\t* 40210: Completion/Unix/Command/_sysctl: Add support modern\n\tFreeBSD and drop support for FreeBSD < 5\n\n2016-12-18  Baptiste Daroussin  <bapt@gandi.net>\n\n\t* 40209: Completion/BSD/Command/_chflags: Fix typo in chflags\n\tcompletion\n\n2016-12-16  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 40149: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info git: Avoid a fork.\n\n\t* 40203: Test/B03print.ztst: Resolve 'printf --' question from\n\tgrandparent commit (thanks Chet).\n\n2016-12-15  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 40198: Test/V10private.ztst: output of B02typeset differs when\n\t(( UID == 0 )) so do not attempt to redo that test in that case\n\n2016-12-14  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 40179: Src/builtin.c: fix handling of \"printf -\" and \"printf --\"\n\n\t* unposted: Test/B03print.ztst: regression for 40179 / 37467\n\n2016-12-12  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: Config/version.mk: update to 5.3-dev-0 to avoid\n\tclash with installed 5.3.\n\n2016-12-10  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 40143: Src/builtin.c, Src/Zle/compmatch.c: silence spurious\n\tcompiler warnings.\n\n2016-12-10  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 40139: Test/Y03arguments.ztst: tests: Convert comments to\n\tdiagnostics; test backslashes. (after 40129)\n\n\t* users/22182: Completion/Zsh/Context/_brace_parameter: Propagate\n\t22161 docs patch to completion descriptions.\n\n2016-12-09  Oliver Kiddle  <opk@zsh.org>\n\n\t* 40137: Doc/Zsh/compsys.yo: document _external_pwds\n\n2016-12-09  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: Config/version.mk: 5.2-test-3.\n\n\t* users/22161: Doc/Zsh/expn.yo: the (E) parameter flag is one\n\tafter every other use of indexing.\n\n2016-12-09  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 40117: Doc/Zsh/compsys.yo, Src/input.c: Revert a hunk of\n\t40035 that changed semantics incorrectly.\n\n2016-12-09  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* unposted: Test/D07multibyte.ztst: minor typos.\n\n\t* 40138: Test/D07multibyte.ztst: Put the regex test last as it\n\thas an additional dependency, and note this in a failure\n\tmessage.\n\n2016-12-09  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 40126: Functions/Misc/zed: zed (fned): When editing a new\n\tfunction. escape its name.\n\n2016-12-08  Oliver Kiddle  <opk@zsh.org>\n\n\t* 40130: NEWS: mention some changes since 5.2\n\n\t* 40129: Src/Zle/computil.c, Test/Y03arguments.ztst:\n\trevert 39611, add code comments and test cases for _arguments\n\n\t* c.f. 40119: Src/zsh.h: correct typo in comment\n\n\t* 40114: Completion/Zsh/Context/_brace_parameter: complete\n\t:/ with other parameter operators\n\n2016-12-06  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* Zhiming Wang: 40115: Functions/Zle/bracketed-paste-magic:\n\trevert 38579 due to bug restoring BUFFER after history search\n\n\t* 40110: Test/B02typeset.ztst: ignore strerror text in test\n\toutput, it differs by OS\n\n\t* 40110: Test/C02cond.ztst: discard stderr when looking for\n\ta path to the \"mount\" command, to avoid spurious test failure\n\n2016-12-06  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 40107: Completion/Linux/Command/_fusermount,\n\tCompletion/Unix/Command/_mount: fix quoting\n\n2016-12-06  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: Config/version.mk: 5.2-test-2.\n\n2016-12-05  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 40102: Test/ztst.zsh, Test/C02cond.ztst: create test IO\n\tfiles in newly created temporary directory.\n\n\t* 40100: Test/C03traps.ztst: Check ERR_EXIT and ERR_RETURN on\n\tanonymous functions: should exit on function return even if\n\tsuppressed internally.\n\n\t* 40097: Src/exec.c, Test/C03traps.ztst: Don't trigger ERR_EXIT\n\tor ERR_RETURN on non-zero status after current shell group, either.\n\n\t* 40096: Src/exec.c, Src/loop.c, Src/zsh.h, Test/C03traps.ztst:\n\tDon't trigger ERR_EXIT or ERR_RETURN on non-zero status after\n\tshell construct.\n\n2016-12-04  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info git: Handle rebase-apply sequences with >=10000 patches.\n\n\t* 40074: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info git: rfc822-unfold rebase-apply patch subjects when\n\tmsg-clean is unavailable.\n\n2016-12-04  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 40088: Test/D04parameter.ztst: attempt to make output from\n\tinteractive test more robust.\n\n2016-12-03  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Test/D04parameter.ztst: regression test for 40071\n\n\t* 40071: Src/subst.c: change Dash back to \"-\" before evaluating\n\tnamed directory expansions\n\n2016-12-03  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 40068: Src/params.c, Test/B02typeset.ztst: Abort execution\n\twhen setuid/setgid fail.\n\n\t* 40067: Src/Zle/comp.h, Src/Zle/complete.c, Src/params.c:\n\tinternal: Document 'cmatcher', parse_cmatcher(), 'comptoend',\n\tunsetparam_pm(), and getindex().\n\n2016-12-03  Daniel Hahler  <zsh@thequod.de>\n\n\t*  40029: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tGet subject of current patch in rebase-apply mode\n\n2016-12-02  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: Config/version.mk: 5.2-test-1.\n\n\t* 40066: Etc/FAQ.yo, README: updates for 5.3 release.\n\n2016-12-01  Oliver Kiddle  <opk@zsh.org>\n\n\t* 40055: Completion/Unix/Command/_git: update for git 2.11.0\n\n\t* 40053: Completion/Base/Completer/_external_pwds: exclude\n\tcurrent directory of active zsh from completion matches\n\n2016-12-01  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Functions/VCS_Info/VCS_INFO_patch2subject,\n\tFunctions/VCS_Info/VCS_INFO_quilt, Functions/VCS_Info/vcs_info:\n\tvcs_info: Break out VCS_INFO_quilt-patch2subject into\n\tVCS_INFO_patch2subject\n\n2016-12-01  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 40024: Completion/Unix/Type/_path_files: Update _path_files\n\tsince quoting requirements changed in 39412, this case only\n\ttriggers when accept-exact-dirs is set.\n\n2016-12-01  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 40050: Src/compat.c: prepend /**/ to global functions and #ifdefs\n\n2016-11-30  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 40049: NEWS: notes on Unicode 9 (40037).\n\n\t* 40043: Src/Zle/computil.c: fix indentation (recent gcc warns\n\tabout this).\n\n2016-11-30  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 40036: Completion/Debian/Command/_bts: Complete removal\n\tsyntaxes correctly.\n\n2016-11-29  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 40034: Src/subst.c: clear badcshglob when ignoring errors\n\n\t* unposted: README: example describing 40032\n\n\t* 40032: Src/params.c: consistency in handling of subscript\n\tslices outside the bounds of an array parameter\n\n2016-11-29  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 40037: Joshua Rubin: Unicode 9 character width support.\n\tNeeds enabling with --enable-unicode9.\n\n\t* 40035: Eitan Adler: Cosmetic fixes mostly for duplication in\n\tcomments and documentation.\n\n\t* 40026: Src/Zle/zle_tricky.c: More care with redirection\n\tcompletion.  Fixes for completion after > in \"!> .\" that\n\tshould add to sanity.\n\n2016-11-29  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Completion/Zsh/Context/_subscript: Complete the\n\t$foo[(f)] flag.\n\n\t* unposted: Completion/Unix/Command/_git: _git-config: Fix\n\tuser.email completion to complete only bare email addresses.\n\n2016-11-28  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 40011: Completion/Base/Core/_main_complete,\n\tCompletion/Solaris/Command/_pfexec,\n\tCompletion/Solaris/Command/_zlogin,\n\tCompletion/Unix/Command/_chown, Completion/Unix/Command/_doas,\n\tCompletion/Unix/Command/_sudo: Make $_comp_priv_prefix only\n\tdeclared when required, and use that to have chgrp offer all\n\tgroups under doas, ssh, etc as well.\n\n\t* 40010: Src/builtin.c, Test/A02alias.ztst: builtins: Say\n\t'bad option: +x', not 'bad option: -x', when +x was passed.\n\n\t* 40009: Src/hashtable.c: alias -L: Emit aliases that begin\n\twith a plus sign correctly.\n\n2016-11-24  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 40013: Completion/Unix/Type/_date_formats,\n\tCompletion/Zsh/Command/_strftime: process zsh-specific time\n\tformat extensions correctly\n\n2016-11-25  Oliver Kiddle  <opk@zsh.org>\n\n\t* unposted: Functions/Zle/surround: set new vichange flag\n\n\t* 40020: Completion/Unix/Command/_cscope: new completion\n\n2016-11-25  Laurent Arnoud  <laurent@spkdev.net>\n\n\t* 40018 + 40019: Completion/Debian/Command/_apt: Add missing\n\tcommands to Debian apt completion\n\n2016-11-24  Oliver Kiddle  <opk@zsh.org>\n\n\t* unposted: Completion/Unix/Command/_date: fix typo (=+ to +=)\n\n\t* 40004 (tweaked): Completion/Redhat/Command/_yum: fix cache\n\tmechanism, complete groups and other minor improvements\n\n\t* unposted: Src/Zle/zle_params.c: fix to compile on Solaris where\n\tcurses.h has a #define for reg to register\n\n\t* 40003: Src/Zle/zle_params.c, Doc/Zsh/zle.yo: include \"0-\"9\n\tvi buffers in the registers associative array\n\n2016-11-24  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 40005: Completion/Unix/Command/_date,\n\tCompletion/Unix/Type/_date_formats: call _date_formats from _date.\n\tUpdate both files for darwin etc.\n\n2016-11-24  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39982: README, Src/utils.c: $SPROMPT: Don't accept a spelling\n\tcorrection at space/tab.\n\n2016-11-23  Bart Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Src/Zle/zle_main.c: clear ERRFLAG_ERROR before\n\tinvoking immortal widget (cf. 39934)\n\n2016-11-23  Oliver Kiddle  <opk@zsh.org>\n\n\t* unposted: Test/Y03arguments.ztst: partial match test case\n\n\t* unposted: Src/builtin.c, Test/B03print.ztst: fix printf -v\n\tto an array without format string reuse\n\n2016-11-21  Oliver Kiddle  <opk@zsh.org>\n\n\t* 39993: Test/Y01completion.ztst: Tests for 39981.\n\n2016-11-21  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39981: Src/Zle/compresult.c: Make compstate[to_end] skip\n\tsuffix and hidden suffix, but not ignored suffix.\n\n2016-11-20  Oliver Kiddle  <opk@zsh.org>\n\n\t* 39986, 39989: Src/Zle/zle.h, Src/Zle/zle_keymap.c,\n\tSrc/Zle/zle_main.c, Src/Zle/zle_misc.c, Src/Zle/zle_thingy.c,\n\tSrc/Zle/zle_utils.c, Src/Zle/zle_vi.c, Test/X02zlevi.ztst,\n\tDoc/Zsh/zle.yo, Functions/Zle/vi-pipe: make vi-repeat-change\n\twork better with shell based widgets and save old change\n\twhen recording a new change in case the new one fails\n\n\t* 39974: Completion/Unix/Command/_ssh: complete shared\n\tlibraries for -e and -s options to ssh-add\n\n2016-11-20  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* Guillaume Maudoux: 39900 (doc slightly tweaked): Src/params.c,\n\tDoc/Zsh/params.yo: Add TERMINFO_DIRS special colon-separated\n\tarray, not tied.\n\n\t* 39995 (from 39977): Src/params.c, Test/A06assign.ztst:\n\toptimisation of string assignment if length is unchanged.\n\n\t* Mikel Ward: 39978: Doc/Zsh/jobs.yo: more accurate\n\tdocumentation of searching for job by string.\n\n2016-11-20  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* Sebastian: 39992: Src/params.c: setarrvalue: Allocate\n\ta correctly-sized array.\n\n\t* unposted (after 39952): Src/Zle/zle_params.c: Restore C89\n\tcompatibility.\n\n\t* 39985: Doc/Zsh/params.yo: Document the [nyae] answers to the\n\tspelling correction prompt, $SPROMPT.\n\n2016-11-18  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39916 + 39930 + tweak: Completion/Unix/Command/_git: Complete\n\toptions and values for -c.\n\n2016-11-17  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 39958: Src/Zle/compctl.c, Src/builtin.c, Src/compat.c,\n\tSrc/exec.c, Src/glob.c, Src/hist.c, Src/utils.c: Add spare byte\n\tto PATH_MAX allocation to allow for possible null.\n\n2016-11-17  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39921: Completion/Unix/Command/_git: __git_recent_branches:\n\tRemove erroneous parsing of partial ref names as tags.\n\n\t* 39922: Completion/Unix/Command/_git: __git_recent_branches:\n\tFix an 'assertion' failure when two branches (refs) point to\n\tthe same commit.\n\n\t* 39917: Completion/Zsh/Command/_precommand: Complete setsid(1)\n\tas a precommand\n\n\t* 39915: Src/exec.c, Test/E01options.ztst: whence: Honor\n\tPATH_DIRS option for arguments that start with './' or '../'.\n\n2016-11-17  Oliver Kiddle  <opk@zsh.org>\n\n\t* 39962: Src/Zle/zle_keymap.c: bind vi case conversion widgets\n\tu/U in visual mode and g~ from normal mode\n\n\t* 39959: Src/Zle/zle_vi.c, Test/X02zlevi.ztst: when repeating\n\tvi changes advance through the numbered killring registers.\n\tAlso fix numeric arguments with vi-repeat-change.\n\n\t* 39952: Src/Zle/zle_params.c, Doc/Zsh/zle.yo: add registers\n\tspecial parameter to provide access to the vi register\n\tbuffers from a zle widget function\n\n2016-11-16  Oliver Kiddle  <opk@zsh.org>\n\n\t* 39945: Src/Zle/compcore.c, Completion/Base/Core/_message,\n\tTest/Y03arguments.ztst: allow further tab presses to move on\n\tto menu completion even when compstate[insert] is emptied\n\n2016-11-15  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 39949: Src/subst.c, Src/utils.c, Test/B09hash.ztst: \"-\" is\n\tallowed in named directories, so needs a special case when\n\tsh-tokenized for possible ranges.\n\n\t* 39947: Test/D04parameter.ztst: Test out-of-rantge multiple\n\tarray subscripts with and without (@).\n\n2016-11-14  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 39943: Src/utils.c: no need to compute arrlen() in arrdup_max()\n\twhen max == 0.\n\n2016-11-15  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 39937: Src/params.c: fix a problem introduced by 39886.\n\t$a[i,j] should become an empty array if i>j.\n\n2016-11-14  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 39906: Src/utils.c: More optimisation of multibyte handling\n\tfor US-ASCII along existing lines.\n\n2016-11-13  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Src/Zle/zle_utils.c: comment in zlecallhook() points\n\tto redrawhook() just in case\n\n\t* 39934: Src/Zle/zle_main.c: if a widget execution fails, try to\n\texecute a corresponding immortal widget instead.\n\n\t* 39933: Src/Zle/zle_main.c: more of zlecallhook() in redrawhook(),\n\tadd commentary on some of the differences\n\n\t* 39929: Doc/Zsh/zle.yo: clarify execute{,-last}-named-cmd\n\n2016-11-12  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Etc/zsh-development-guide: add list of standard\n\tmodule hooks with corresponding macro names\n\n2016-11-12  Oliver Kiddle  <opk@zsh.org>\n\n\t* Paul Seyfert: 39920: Completion/Redhat/Command/_yum:\n\textend yum completion to cover more yum commands\n\n2016-11-10  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 39893: Src/params.c: use arrdup_max() to show explicitly the\n\tdifference in two code branches; no functional change\n\n2016-11-11  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39874/0002 plus size=0 handling: Src/mem.c: zshcalloc: Remove\n\tcode duplication. No functional change.\n\n\t* 39874/0001: Src/params.c: setarrvalue: Remove needless\n\tinitialization.\n\n2016-11-10  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 39901: Src/exec.c, Test/C03traps.ztst: Exiting the left hand\n\tside of a pipeline shouldn't trigger EXIT trap.\n\n2016-11-09  Oliver Kiddle  <opk@zsh.org>\n\n\t* 39890: Completion/Debian/Command/_git-buildpackage,\n\tCompletion/Debian/Command/_lintian,\n\tCompletion/Debian/Command/_make-kpkg,\n\tCompletion/Linux/Command/_iwconfig,\n\tCompletion/Debian/Command/_dcut, Completion/Linux/Command/_mdadm,\n\tCompletion/Solaris/Command/_dladm, Completion/Unix/Command/_adb,\n\tCompletion/Unix/Command/_attr, Completion/Unix/Command/_awk,\n\tCompletion/Unix/Command/_bzr, Completion/Unix/Command/_cdrdao,\n\tCompletion/Unix/Command/_devtodo, Completion/Unix/Command/_feh,\n\tCompletion/Unix/Command/_global, Completion/Unix/Command/_groff,\n\tCompletion/Unix/Command/_growisofs,\n\tCompletion/Unix/Command/_initctl, Completion/Unix/Command/_iostat,\n\tCompletion/Unix/Command/_ip, Completion/Unix/Command/_java,\n\tCompletion/Unix/Command/_localedef, Completion/Unix/Command/_make,\n\tCompletion/Unix/Command/_mencal, Completion/Unix/Command/_module,\n\tCompletion/Unix/Command/_nkf, Completion/Unix/Command/_nmap,\n\tCompletion/Unix/Command/_pbm, Completion/Unix/Command/_rar,\n\tCompletion/Unix/Command/_sisu, Completion/Unix/Command/_sqsh,\n\tCompletion/Unix/Command/_surfraw, Completion/Unix/Command/_units,\n\tCompletion/Unix/Command/_wiggle: fix typos and spellings\n\n\t* 39888: Completion/Unix/Command/_tmux: update for tmux 2.3\n\n\t* 39884: Functions/Zle/history-beginning-search-menu:\n\tfix for history lines containing a pipe character\n\n2016-11-09  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 39882: Doc/Zsh/expn.yo: mention ${name:/pattern/replacement}\n\tin the itemized synopsis with the related forms; clarify doc.\n\n2016-11-09  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 39887: Src/params.c: no need to conditionalise assignment of\n\tstrlen in getstrvalue().\n\n\t* 39886 based on 39877 (Sebastian): Src/params.c, Src/utils.c:\n\tadd arrdup_max() so as not to duplicate entire arrays unnecessarily.\n\n\t* Sebastian: 39875: Src/params.c, Src/string.c: add\n\tdupstring_glen() to avoid redundant strlen() calls.\n\n2016-11-09  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39853: Completion/Unix/Command/_subversion: Accept long\n\toptions in the '--foo=bar' syntax.\n\n2016-11-08  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Sebastian: 39871: cut down number of strlen()s in getstrvalue().\n\n2016-11-08  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 39857: Completion/Unix/Command/_top: add support for darwin,\n\twith improvements on linux etc.\n\n2016-11-08  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 39870: Src/builtin.c, Test/C03traps.ztst: ensure exit trap can\n\talways run.\n\n\t* unposted: Src/utils.c: follow up to 39867: don't need test\n\tagainst zero any more.\n\n\t* Sebastian: 39869: can transfer ownership of core of array when\n\tassigning.\n\n\t* 39867: Src/utils.c: cast to unsigned char to compare against\n\t0x7f.\n\n2016-11-07  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t*  Felix Neumärker: Completion/Unix/Command/_module: follow\n\tsymbolic links and use _multi_parts for paths.\n\n\t* zsh-users/22083: Doc/Zsh/expn.yo: attempt to explain a bit\n\tbetter what a \"word\" is in parameter substitution.\n\n2016-11-07  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39840: Completion/Unix/Command/_cpio: Declare variable's\n\ttype correctly.\n\n2016-11-07  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 39728: Src/zsh_system.h, Src/Modules/datetime.c: define\n\t_GNU_SOURCE on Cygwin\n\n\t* 39855: Completion/BSD/Command/_jot: new completion\n\n2016-11-07  Frank Terbeck  <ft@bewatermyfriend.org>\n\n\t* 39849: Completion/Unix/Command/_tmux: _tmux: Remove\n\tset-remain-on-exit\n\n2016-11-06  Frank Terbeck  <ft@bewatermyfriend.org>\n\n\t* 39847: Util/check-tmux-state: Update helper function name\n\tpattern\n\n\t* 39848: Completion/Unix/Command/_tmux: _tmux: Update options to\n\tlatest tmux\n\n2016-11-05  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Completion/compaudit: tweak replacement getent\n\tto handle /etc/hosts format.\n\n\t* Thomas Bereknyei, Mic92: 39831: Completion/compaudit: find\n\t\"getent\" by the usual command search, not just /usr/bin/.\n\n\t* unposted: Test/A05execution.ztst:  tests for 39839, 39844\n\n\t* 39844: Src/loop.c: fix \"while\" condition as per 39839\n\n\t* 39839: Src/loop.c: fix \"return\" from \"if\" condition\n\n\t* 39838: Src/builtin.c: another missing unqueue_signals()\n\n2016-11-04  Oliver Kiddle  <opk@zsh.org>\n\n\t* 39829: Src/Zle/compcore.c: when compstate[insert] is emptied\n\tby the completion function and AUTO_MENU is set, start menu\n\tcompletion on the second tab press rather than the third\n\n\t* 39834: Src/builtin.c, Completion/Zsh/Command/_print,\n\tCompletion/Zsh/Command/_fc, Completion/Zsh/Type/_ps1234:\n\twhen print used with -v and -l, include a final\n\tnewline; complete print -S option and make further use\n\tof the new printf to an array feature\n\n\t* 39389: Src/builtin.c, Test/B03print.ztst, Doc/Zsh/builtins.yo,\n\tCompletion/Zsh/Type/_globquals, Completion/Zsh/Command/_print:\n\twhen printf -v is used with an array use separate elements each\n\ttime the format is reused\n\n2016-11-04  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* users/22080: Doc/Zsh/zle.yo: bracketed-paste: Third time's\n\ta charm.\n\n2016-11-04  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Sebastian: 39825: Src/utils.c: Optimise mb_metastrlenend() for\n\tthe common case of 7-bit character.\n\n2016-11-04  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 39818 (Oliver Kiddle): Completion/Unix/Command/_awk: add nawk\n\n2016-11-03  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 39824: Test/X02zlevi.ztst: test case for 39811\n\n2016-11-03  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* unposted: Src/Zle/zle_keymap.c: comment explaining putting\n\tback tail end of key buffer into input.\n\n2016-11-03  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39806: Src/Zle/zle_vi.c: internal: Document zle's vichgbuf.\n\n\t* 39805: Src/Zle/comp.h, Src/Zle/compcore.c: internal: Document\n\tsome compadd internals.\n\n\t* 39804: Src/Zle/comp.h, Src/Zle/complete.c: internal: Document\n\tmatchspec flags.\n\n\t* 39803: Src/Zle/complete.c: internal: Document bin_compadd().\n\n\t* 39802: Src/Zle/compcore.c, Src/Zle/complete.c: internal:\n\tDocument and simplify multiquote().\n\n\t* users/22063: Doc/Zsh/zle.yo: bracketed-paste: Document ability\n\tto specify a vi register. (after users/22036)\n\n2016-11-03  Daniel Hahler  <zsh@thequod.de>\n\n\t* 39822: Completion/Unix/Command/_git: remove \"-A '-*'\" with\n\t_arguments for some commands.\n\n2016-11-03  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Completion/Unix/Type/_remote_files: fix typo that\n\twas causing handling of \"--\" argument to fail\n\n\t* 39820: Src/Zle/zle_vi.c: vi-repeat handles multi-key bindings\n\n2016-11-03  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 39815: Src/lex.c, Test/D04parameter.ztst: read input to end\n\ton parse error in $(...) inside a string.\n\n2016-11-02  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 39813: Src/Zle/zle_keymap.c: fix keybuflen after ungetting\n\textra keys from the end of keybuf in getkeymapcmd().\n\n\t* 39811: Src/Zle/zle_vi.c: vi-repeat-change must not be the\n\t\"motion\" of vi-change, lest it infinitely repeat itself.\n\n2016-11-01  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 39731: Completion/Unix/Command/_awk: add support for gawk\n\tver.3 and 4\n\n2016-11-01  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39787: Test/Y01completion.ztst: Add a regression test for\n\t39412.\n\n2016-10-31  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 39797: Completion/Unix/Type/_canonical_paths: obsolete the\n\thelper functions fixed by the previous two changes, replacing\n\tthem with the new ${var:P} modifier.\n\n\t* 39795: Completion/Unix/Type/_canonical_paths: preserve \"cd -\"\n\tbehavior around directory shuffling in _canonical_paths_pwd\n\n\t* 39792: Completion/Unix/Type/_canonical_paths: improve handling\n\tof relative paths in _canonical_paths_add_paths\n\n2016-10-31  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39786: Functions/VCS_Info/Backends/VCS_INFO_get_data_hg,\n\tFunctions/VCS_Info/VCS_INFO_hexdump, Functions/VCS_Info/vcs_info:\n\tvcs_info (hg): Use native hexdump implementation instead of\n\texternal command.\n\n2016-10-30  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 39777: Src/parse.c, Test/D08cmdsubst.ztst: $() is a valid\n\tempty command substitution.\n\n2016-10-29  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 39758: Src/builtin.c, Src/params.c: revise 39704 to output\n\t\"typeset\" for array and hash parameters, even when exported; for\n\tPOSIXBUILTINS, \"export var\" does not implicitly set $var, and its\n\texport state is preserved when assigned (but not when explicitly\n\tunset).\n\n2016-10-28  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* users/22036: Doc/Zsh/zle.yo: bracketed-paste: Document\n\tcutbuffer behaviour; clarify.\n\n2016-10-27  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Functions/Zle/bracketed-paste-magic: handle empty\n\tpastes and \"zle bracketed-paste variablename\" form.\n\n2016-10-27  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Doc/Zsh/compsys.yo, Doc/Zsh/contrib.yo: Minor\n\tdocumentation fixes (markup, grammar, etc).\n\n\t* 39739: Completion/Unix/Command/_head,\n\tCompletion/Unix/Command/_tail: Complete negative integers for\n\t-n/-c in the GNU variant.  (after 39479)\n\n2016-10-25  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 39725: Src/Zle/complist.c: more metafication of patterns.\n\n2016-10-25  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 39723: Src/Zle/complist.c, Src/glob.c: metafy string to be\n\tused in pattern for complist.  Also skip metafied characters\n\twhen tokenizing (typically this has no effect, however).\n\n2016-10-24  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted: NEWS, README: update for 39704.\n\n\t* 39704: Src/params.c, Test/B02typeset.ztst, Test/B03print.ztst,\n\tTest/V10private.ztst: the output of \"typeset -p\" uses \"export\"\n\tcommands or the \"-g\" option for parameters that are not local to\n\tthe current scope.\n\n2016-10-24  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39706: Completion/Unix/Type/_tilde_files, Doc/Zsh/compsys.yo:\n\t_tilde_files: Offer named directories. Document.\n\n\t* 39708: Completion/Unix/Type/_email_addresses,\n\tDoc/Zsh/compsys.yo: Document _email_addresses.\n\n\t* 39707: Doc/Zsh/compsys.yo: Document _dir_list.\n\n2016-10-23  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 39715: Src/Zle/complist.c: handle multibyte characters when\n\thighlighting completion listing.\n\n2016-10-22  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 39710 (cf. Alex George: 39709): Completion/Base/Completer/_expand,\n\tCompletion/Base/Completer/_user_expand: handle the %o format in the\n\t\"all-expansions\" tag; allow a single unique match to appear in the\n\t\"expansions\" tag (cf. users/21955).\n\n2016-10-20  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 39688: Src/pattern.c: Alternative fix: next pointer is\n\tirrelevant anyway as there's only one P_EXACTLY in a P_PURES.\n\n\t* 39683: Src/pattern.c: Update scan pointer in pattern after\n\tpossible reallocation for meta handling.\n\n2016-10-19  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 39680: Src/mem.c: correctly handle case of popping last arena\n\n2016-10-19  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 39678: Src/builtin.c, Test/D07multibyte.ztst: printf %q\n\targument needs metafying and result unmetafying.\n\n2016-10-18  m0viefreak  <m0viefreak.cm@googlemail.com>\n\n\t* 39590: Src/Zle/compresult.c: zle: Call zle-line-pre-redraw\n\tafter inserting a completion result\n\n2016-10-18  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39654: Completion/Unix/Command/_make: (based on patch by\n\tBaptiste Daroussin) Better support bmake, FreeBSD's default\n\tmake(1) implementation.\n\n\t* 39659: Completion/Zsh/Command/_zstyle: Complete the -g,\n\t-s,-b,-a, -t,-T, -m options.\n\n\t* 39658: Completion/Zsh/Command/_zstyle: When completing a\n\tstyle for an unrecognised context, complete all known styles.\n\n\t* 39657: Completion/Zsh/Command/_zstyle,\n\tCompletion/Zsh/Type/_completers, Doc/Zsh/compsys.yo: Make a\n\thelper function global.\n\n2016-10-16  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39500: Src/Zle/computil.c: compdescribe: perform\n\ton-screen-width computation using the \"nice\" length, since the\n\tmatches are rendered by nice*() functions by compadd\n\n2016-10-13  Oliver Kiddle  <opk@zsh.org>\n\n\t* 39624: Completion/Unix/Command/_yafc: remove space before\n\tcompdef that prevents function being used plus other tweaks\n\n\t* 39623: Completion/X/Command/_evince: new completion\n\n2016-10-13  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 39625: Martijn Dekker: Src/loop.c, Test/A01grammar.ztst: case\n\tneeds to reset lastval if no pattern matched.\n\n2016-10-13  Oliver Kiddle  <opk@zsh.org>\n\n\t* 39622: Test/Y03arguments.ztst: add test cases for recent\n\t_arguments fixes, exclusion lists and -A/-S\n\n\t* 39611: Src/Zle/computil.c: with _arguments sets completion\n\tstopped if one of the rest arguments starts with a dash\n\n\t* 39533: Matthew Martin: Completion/Unix/Command/_doas:\n\tadd the new -L option, sort options and add some exclusions\n\n2016-10-11  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 36108: Src/builtin.c: command -[vV] assumed -p.\n\n2016-10-10  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 39599: Src/loop.c, Test/A01grammar.ztst: Don't reset status\n\tbefore \"case\" execution.\n\n2016-10-07  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39522: Doc/Zsh/contrib.yo: add-zsh-hook/add-zle-hook-widget:\n\tPromise append semantics.\n\n\t* 39489: Completion/Unix/Type/_path_files: Interpret -P as\n\tliterally, rather than as a pattern.\n\n\t* 39479 + 39481 minus _path_files hunk (see\n\t39489): Completion/Debian/Command/_debfoster,\n\tCompletion/Linux/Command/_modutils,\n\tCompletion/Redhat/Command/_rpm, Completion/Unix/Command/_ant,\n\tCompletion/Unix/Command/_cpio, Completion/Unix/Command/_cvs,\n\tCompletion/Unix/Command/_dbus, Completion/Unix/Command/_git,\n\tCompletion/Unix/Command/_graphicsmagick,\n\tCompletion/Unix/Command/_growisofs, Completion/Unix/Command/_gs,\n\tCompletion/Unix/Command/_gsettings,\n\tCompletion/Unix/Command/_head,\n\tCompletion/Unix/Command/_imagemagick,\n\tCompletion/Unix/Command/_java, Completion/Unix/Command/_lp,\n\tCompletion/Unix/Command/_lzop, Completion/Unix/Command/_mount,\n\tCompletion/Unix/Command/_perl, Completion/Unix/Command/_php,\n\tCompletion/Unix/Command/_rlogin, Completion/Unix/Command/_ssh,\n\tCompletion/Unix/Command/_tail, Completion/Unix/Command/_w3m,\n\tCompletion/X/Command/_rdesktop, Completion/X/Command/_x_utils,\n\tCompletion/Zsh/Command/_fc, Completion/Zsh/Type/_arrays,\n\tCompletion/Zsh/Type/_globflags, Completion/Zsh/Type/_ps1234,\n\tCompletion/Zsh/Type/_vars: Completion: audit 'compset -P'\n\tcalls to use shortest match where applicable, plus random\n\tdrive-by tweaks.\n\n2016-10-06  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Julien Cretin: 39579: Src/subst.c: position of \\0\n\twith optional quoting in parameter substitution was wrongly\n\tcalculated.\n\n\t* 39578: Test/C03traps.ztst: Test some more ERR_RETURN cases\n\tinvolving \"&&\" and functions.\n\n2016-10-05  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 39571: Src/exec.c, Test/C03traps.ztst: \"&&\" inside a shell\n\tfunction could mess up ERR_EXIT outside.\n\n\t* 39568: Src/exec.c, Test/C03traps.ztst: \"! <complex-command>\"\n\tshould suppress ERR_EXIT inside the complex command.\n\n\t* 39566: README, Doc/Zsh/exec.yo, Src/exec.c,\n\tTest/C04funcdef.ztst: change the behaviour of\n\tcommand_not_found_handler to make it easier to handle a non-zero\n\treturn status naturally.\n\n2016-10-04  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 39561: Src/mem.c: missing unqueue_signals() when ZSH_HEAP_DEBUG\n\n2016-10-03  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 39550: Src/Zle/zle_main.c: reset signal queue in recursiveedit()\n\n\t* 39548: Src/signals.c, Src/signals.h: DEBUG for queueing_enabled\n\n\t* 39547: Src/Zle/zle_main.c: handle zero delta in calc_timeout()\n\n2016-10-03  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 39545: Src/builtin.c, Src/exec.c, Src/hist.c, Src/init.c,\n\tSrc/mem.c, Src/module.c, Src/params.c, Src/prompt.c,\n\tSrc/Zle/computil.c, Src/Zle/zle_main.c: Add some missing\n\tunqueue_signals().\n\n\t* 39521: Src/exec.c, Src/zsh.h, Test/A01grammar.ztst: Refactor\n\tstart of execcmd().  This allows execpline2() easier access to\n\tthe state at the start of execuation.\n\n2016-10-02  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 39540: Src/exec.c, Test/C03traps.ztst: \"! command\" should\n\tsuppress ERR_EXIT and ERR_RETURN.\n\n2016-09-30  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39495: Doc/Zsh/contrib.yo, Functions/Misc/add-zle-hook-widget:\n\tadd-zle-hook-widget: Add end-of-options guard to hook invocation.\n\n\t* 39480: Completion/Debian/Command/_bug: _reportbug: Complete\n\tabsolute filenames, too.\n\n2016-09-30  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Doc/Zsh/builtins.yo: update or remove references to\n\ttypeset behavior obsoleted by 35586.\n\n\t* 39509: Src/builtins.c: in the event the current directory has\n\tbeen removed, use chasedots semantics for \"cd ..\".\n\n2016-09-30  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 39519: Src/params.c: setting PM_EXPORT was missing in\n\tUSE_SET_UNSET_ENV case.\n\n\t* 39517: back off 39502, this isn't a robust fix.\n\n\t* 39498: Src/parmas.c,Src/zsh.h: use PRIVILEGED option to\n\tdecide on problematic parameter imports.\n\n2016-09-30  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 39452 + comment from 39432: Src/Zle/zle_main.c: Call the\n\tpre-redraw hook if there is text in the buffer on init (from\n\tpopping or zle-line-init setting $BUFFER)\n\n2016-09-30  Oliver Kiddle  <opk@zsh.org>\n\n\t* 39514: Completion/Unix/Command/_git: handle --git-dir\n\n\t* 39513: Completion/Unix/Command/_doas: new doas completion\n\n\t* 39464: Completion/Solaris/Command/_fmadm: fix where lack\n\tof $state check caused unwanted filename completion\n\n2016-09-29  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 39507: Doc/Zsh/params.yo, Src/exec.c: TMPSUFFIX for =(...)\n\n\t* 39470: Src/exec.c, Src/utils.c: failure to open a supposedly\n\tunique temp file name should result in an error; band-aid for\n\tsignal-related race conditions in temp file name generation\n\n2016-09-29  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 39502: Src/exec.c, Test/A01grammar.ztst: need to fork for\n\tassignment in LHS of pipeline.\n\n\t* unposted: Src/Zle/compctl.c, Src/Zle/zle_tricky.c: update\n\tfindcmd() call here, too.\n\n\t* 39493: Src/builtin.c, Src/exec.c, Src/subst.c,\n\tTest/A01grammar.ztst: make \"command\" with multiple options work\n\tbetter and ensure \"command -p\" with \"-v\" or \"-V\" checks for a\n\tbuiltin and then using the system default command path.\n\n2016-09-28  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Martijn Dekker: 39463: configure.ac: another way of getting\n\tthe default system path.\n\n\t* 39460: Src/params.c, Src/zsh.h: don't import PS4 if running as\n\troot.  Currently no known exploit with this in zsh as xtrace\n\tneeds an explicit option setting, so this is just precautionary.\n\n2016-09-27  Oliver Kiddle  <opk@zsh.org>\n\n\t* Marko Myllynen: 39453: Completion/Unix/Command/_openstack:\n\tnew openstack completions\n\n\t* 39369 (tweaked cf 39371): Src/Zle/zle_thingy.c: when calling\n\tan internal widget, set bindk because some widgets use it to\n\tdetermine how they should act\n\n2016-09-27  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 39437: Src/exec.c: use list_pipe_pid in assignment for clarity\n\n2016-09-26  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* Martijn Dekker: 39448: Src/loop.c: reset REPLY in select when\n\tneeded on user action.\n\n2016-09-25  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 39436: Src/exec.c, Src/signals.c: Don't execute builtin if\n\tinterrupted; set lastval to 128 + SIGINT on interrupt.\n\n\t* 39435: Src/exec.c: Don't set gleader of SUBJOB immediately if\n\tSUPERJOB has no processes.\n\n2016-09-24  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39423: Completion/Zsh/Command/_zed: Support the '--'\n\tend-of-options mark.\n\n\t* 39423: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info git: Produce nicer applied-string messages for 'exec'\n\tactions.\n\n2016-09-23  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39412: Src/Zle/computil.c: Fix directory completion when\n\t$PWD:h contains parentheses, which are interpreted as globbing\n\tmetacharacters.\n\n2016-09-22  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39410: Completion/Darwin/Type/_retrieve_mac_apps,\n\tCompletion/Unix/Command/_dsh, Completion/Unix/Type/_dates:\n\tFix unintentional history modifiers.\n\n2016-09-22  Adam Gibbins  <adam@adamgibbins.com>\n\n\t* unposted: Completion/Unix/Command/_gpg: Correct typo\n\n2016-09-21  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Completion/Darwin/Type/_retrieve_mac_apps: add\n\tmissing final colon in zstyle context lookup\n\n\t* users/21955: Completion/Base/Completer/_user_expand: add\n\tmissing final colon in zstyle context lookup; allow a single\n\tunique match to appear in \"expansions\" tag\n\n2016-09-21  Oliver Kiddle  <opk@zsh.org>\n\n\t* 39370: Completion/Zsh/Command/_typeset,\n\tCompletion/Zsh/Command/_zle: complete -w and -K options to zle\n\tfollowing the widget name and numeric base to integer\n\n\t* 39407: Completion/Linux/Command/_cpupower: cleanup minor\n\tissues; updated through to version 4.8\n\n2016-09-20  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39385: Completion/Debian/Command/_bts: Complete more argument\n\ttypes for 'cache' and 'show'.\n\n\t* 39383: Src/Zle/compcore.c: compadd: Restrict previous patch\n\tto the case where $PREFIX includes characters both from the -P\n\tprefix and from the (unprefixed) candidate completion word.\n\n\t* 39372: Src/Zle/compcore.c: compadd: Match -P prefix\n\tall-or-nothing rather than greedily.\n\n2016-09-19  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 39381: Src/exec.c: handle save/restore of variable values when\n\t\"typeset\"-related reserved words are prefixed by an assignment\n\n2016-09-19  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 39351: Functions/Zle/bracketed-paste-url-magic: Handle magnet\n\tlinks too, and allow for schemes without //\n\n2016-09-18  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39374: Completion/Debian/Command/_apt: Complete package\n\tversions in the 'packagename=<version>' syntax.\n\n2016-09-17  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39356 (tweaked, c.f. Bart 39358): Etc/BUGS: Remove fixed items,\n\tadd 'compset -q' item from workers/39306.\n\n2016-09-16  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 39362: Src/exec.c: forked zsh in pipeline handling always\n\tstarts a new process group, avoiding double STOP.\n\n2016-09-16  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 39359: Src/exec.c, Src/jobs.c, Src/signals.c: Further fix on\n\ttop of 39331 for remaining race.  Ensure process group of forked\n\tsuperjob is sane.\n\n\t* 39331: Src/exec.c, Src/jobs.c, Src/zsh.h: Partially fix problem\n\toccurring when a subjop in the RHS of a pipeline needs to be\n\tpicked up by a forked zsh after ^Z when the original superjob\n\t(LHS of pipeline) has already exited.  Still race-prone.\n\n2016-09-16  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Completion/Unix/Command/_postfix: Correct quoting\n\tin _call_program invocations.\n\n\t* 39312 (tweaked): Completion/Unix/Command/_postfix: _postfix\n\t(postconf): Complete only applicable parameters for -X and -#.\n\n\t* 39310/0010: Src/Zle/compmatch.c: internals: match_str:\n\tSimplify expression.\n\n\t* 39310/0009: Src/Zle/compmatch.c: internals: match_str:\n\tDownscope local variable 't'.\n\n\t* 39310/0008: Src/Zle/compmatch.c: internals: match_str:\n\tDocument several local variables.\n\n\t* 39310/0007: Src/Zle/compmatch.c: internals: match_str: Rename\n\tand constify local variables 'oll', 'olw'.\n\n\t* 39310/0006: Src/Zle/compmatch.c: internals: match_str:\n\tDownscope local variable 'bpc'.\n\n\t* 39310/0005: Src/Zle/compmatch.c: internals: match_str:\n\tConstify some local variables.\n\n\t* 39310/0004: Src/Zle/compmatch.c: internals: match_str: Document\n\t'savl'.\n\n\t* 39310/0003: Src/Zle/compmatch.c: internals: match_str: Document\n\t'savw'. Avoid magic number.\n\n\t* 39310/0002: Src/Zle/compmatch.c: internals: match_str:\n\tSimplify by removing 'zoff'.\n\n\t* 39310/0001: Src/Zle/compmatch.c: internals: match_str:\n\tDocument some local variables. See 39123.\n\n\t* 39311: Completion/Unix/Command/_tmux: _tmux-capture-pane:\n\tTweak specifications of -S/-E and description strings.\n\n2016-09-15  Oliver Kiddle  <opk@zsh.org>\n\n\t* 39333: Completion/Base/Utility/_call_program,\n\tDoc/Zsh/compsys.yo, Completion/Solaris/Command/_pfexec,\n\tCompletion/Unix/Command/_sudo: include name of command used to\n\tgain priviliges in context for command and gain-priviliges styles\n\n\t* 39332: Doc/Zsh/cond.yo, Src/cond.c, Src/params.c, Src/parse.c,\n\tCompletion/Zsh/Context/_condition, Test/C02cond.ztst: support\n\tksh's [[ -v varname ]] condition for checking if variables are set\n\n\t* unposted: Src/parse.c: remove duplicated assignment\n\n2016-09-14  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* unposted: Doc/Zsh/expn.yo: small documentation tweaks.\n\n\t* zsh-users/21903: Src/subst.c, Src/zsh.h,\n\tTest/D04parameter.ztst: ${...?...} in interactive shell should\n\tabort to top level, not just current command.\n\n2016-09-14  Marko Myllynen  <myllynen@redhat.com>\n\n\t* unposted: Completion/Unix/Command/_libvirt: Add another\n\tnoglob. (Follow-up to 39199)\n\n2016-09-14  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39199: Completion/Unix/Command/_libvirt: Support libvirt URLs\n\tthat contain a literal question mark under noglob.\n\n\t* unposted: Completion/Unix/Command/_git: Permit multiple\n\t-c options.\n\n2016-09-13  Oliver Kiddle  <opk@zsh.org>\n\n\t* 39307: Completion/Unix/Command/_vim,\n\tCompletion/Unix/Command/_xxd: update options up to vim 8\n\n\t* 39299: Completion/Base/Completer/_external_pwds: better\n\tFreebsd support in _external_pwds using procstat\n\n2016-09-13  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 39292: Config/version.mk, Src/cond.c, Src/parse.c, Src/text.c,\n\tSrc/zsh.h, Test/C02cond.ztst, Test/D01prompt.ztst,\n\tTest/E02xtrace.ztst: Distinguish \"=\" and \"==\" tests in output to\n\tavoid confusion.  Update version number to 5.2-dev-2 (unposted:\n\tupdate date, too).\n\n\t* 39305: Src/exec.c: error handling on substitution for here\n\tdocument was illogical.\n\n2016-09-12  Oliver Kiddle  <opk@zsh.org>\n\n\t* 39295: Completion/Unix/Type/_remote_files: allow '--' to\n\tappear in the command line passed as an argument\n\n\t* 39287: Completion/Unix/Command/_graphicsmagick,\n\tCompletion/Unix/Command/_imagemagick, Completion/X/Command/_okular:\n\tadd .tif as a valid extension for TIFF files\n\n2016-09-12  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Doc/Zsh/mod_sched.yo: reference use of widgets to\n\teffect editor changes from a sched command\n\n\t* 39297: Doc/Zsh/compsys.yo: more of 39284, it's painful to add\n\ttexi nodes in yodl\n\n2016-09-12  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 39255: Doc/Zsh/cond.yo: = in conditions is not actually going\n\tto be removed.\n\n2016-09-11  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 39268: Src/Modules/system.c: \"zsystem flock -t 0 ...\" tries only\n\tonce to flock and immediately returns success or failure\n\n2016-09-11  Vin Shelton  <ethersoft@gmail.com>\n\n\t* 39284: Doc/Zsh/compsys.yo: Added Completion System Variables as\n\ta menu item\n\n2016-09-11  Oliver Kiddle  <opk@zsh.org>\n\n\t* 39261 (tweaked cf. Daniel: 39275): Doc/Zsh/compsys.yo:\n\tCompletion/Base/Core/_main_complete,\n\tCompletion/Base/Utility/_call_program,\n\tCompletion/Debian/Command/_dchroot,\n\tCompletion/Debian/Command/_dchroot-dsa,\n\tCompletion/Debian/Command/_schroot,\n\tCompletion/Solaris/Command/_pfexec,\n\tCompletion/Solaris/Command/_zlogin, Completion/Unix/Command/_dsh,\n\tCompletion/Unix/Command/_fsh, Completion/Unix/Command/_libvirt,\n\tCompletion/Unix/Command/_mosh, Completion/Unix/Command/_rlogin,\n\tCompletion/Unix/Command/_ssh, Completion/Unix/Command/_sudo:\n\tdon't unconditionally gain privileges with sudo for completion\n\n2016-09-11  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39252: Src/Zle/compcore.c, Src/Zle/compctl.c,\n\tSrc/Zle/computil.c, Src/Zle/zle_misc.c, Src/Zle/zle_tricky.c,\n\n\tSrc/builtin.c, Src/subst.c, Src/text.c, Src/utils.c: internal:\n\tquotestring: Drop the 'e' parameter, which no caller uses.\n\n2016-09-09  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Test/D04parameter.ztst: Add tests for ${(q)} being\n\taware of the EQUALS option.\n\n2016-09-08  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39236 (plus typo fix): Doc/Zsh/compsys.yo, README: docs: Tweak\n\t_arguments $opt_args documentation added in 39173.\n\n2016-09-08  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 39222: Test/V01zmodload.ztst: test use of module loaded math\n\tfunctions with zsh/systeme.\n\n2016-09-07  Danek Duvall  <duvall@comfychair.org>\n\n\t* 39194: Completion/Unix/Command/_man: _man (Solaris): Ignore\n\tman-index. Support multiple sections in the -s flag's argument.\n\n2016-09-07  Oliver Kiddle  <opk@zsh.org>\n\n\t* unposted: Completion/Unix/Command/_rm: fix to use ;|\n\tstyle fall-throughs in the case statement\n\n\t* 39209: Matthew Martin: Completion/BSD/Command/_chflags:\n\tUpdate options\n\n\t* 39208: Matthew Martin: Completion/BSD/Command/_chflags:\n\tUpdate flags\n\n\t* 39223: Matthew Martin: Completion/BSD/Command/_chflags:\n\tIntroduce addflags function to reduce redundancy\n\n\t* 39193: Completion/Unix/Type/_remote_files: don't pass options\n\tfrom after -- on to compadd\n\n2016-09-07  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 39185: Src/lex.c: wordbeg only set for ZLE if not alias.\n\tFixes crash on completion in some obscure alias expansions.\n\n2016-09-07  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Matthew Martin: 39221: Completion/Unix/Command/_rm: update for\n\tBSD.\n\n\t* 39218: Src/module.c: fix feature enables with math functions\n\tpresent.  This caused parameters to be miscounted.\n\n\t* 39217: Src/Modules/system.mdd: adapt zsh.mdd to avoid problems\n\twith GCC preprocessor in error names.\n\n2016-09-06  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* m0viefreak: 38153 (cf. 39135): Completion/Base/Utility/_arguments:\n\tchange the way long options are examined for \"=\" signs to more\n\taccurately identify options that take arguments\n\n2016-09-06  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39174: Completion/Unix/Command/_ssh: Fix completion of\n\tProxyCommand option.\n\n\t* 39173: Doc/Zsh/compsys.yo, README, Src/Zle/computil.c:\n\t_arguments: Escape colons and backslashes in $opt_args\n\tunambiguously.\n\n\t* 39171: Completion/Unix/Command/_libvirt: Apply\n\t$opt_args-unescaping.\n\n\t* unposted: Completion/Unix/Command/_libvirt: Escape $words\n\telements to avoid their interpretation as a pattern against\n\t$_cache_virsh_cmds.\n\n2016-09-06  Marko Myllynen  <myllynen@redhat.com>\n\n\t* unposted: Completion/Unix/Command/_libvirt: Fix leakage of\n\t$word (after 39179).\n\n2016-09-06  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 39181: Src/builtin.c, Src/zsh.h, Src/Zle/complete.c: Add\n\tPM_SINGLE for single instance and use for compstate.\n\n2016-09-06  Marko Myllynen  <myllynen@redhat.com>\n\n\t* 39179 (plus tweak): Completion/Unix/Command/_libvirt: More\n\t_libvirt (virsh) completion tweaks\n\n2016-09-05  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* Teubel György: 39167: Src/init.c, Doc/Zsh/params.yo: Make $ENV\n\tmore like POSIX.\n\n2016-09-04  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Src/Zle/comp.h, Src/Zle/complete.c: internals:\n\tDocument zshcompwid(1) parameter implementations.\n\n2016-09-03  Oliver Kiddle  <opk@zsh.org>\n\n\t* Marko Myllynen: 39158: Completion/Unix/Command/_libvirt:\n\tcleanup following review comments of function\n\n\t* 39165: Completion/Unix/Command/_dmidecode,\n\tCompletion/Unix/Command/_ant, Completion/Linux/Command/_ss,\n\tCompletion/Unix/Command/_espeak, Completion/Unix/Command/_git,\n\tCompletion/Unix/Command/_prove, Completion/Unix/Command/_tin,\n\tCompletion/Unix/Command/_patch, Completion/Unix/Command/_look,\n\tCompletion/Unix/Command/_md5sum: update options\n\n2016-09-02  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Completion/Unix/Command/_postfix: _postfix_queue_id:\n\tUnbreak completion of short queue ids of held/active messages,\n\tbroken in 39108.\n\n\t* 39154: Completion/Unix/Type/_files: -/ with list-dirs-first\n\tresulted in a bad pattern, thus aborting completion partway.\n\n2016-08-31  Oliver Kiddle  <opk@zsh.org>\n\n\t* Marko Myllynen: 39118: Completion/Unix/Command/_libvirt:\n\t(almost) complete virsh completions\n\n2016-08-31  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 39141: Test/D04parameter.ztst: use zsh in SHLVL test to remove\n\tambiguous behaviour of sh.\n\n\t* Stephane: 39125: Src/exec.c, Test/D04parameter.ztst: More care\n\tdecrementing SHLVL on exec; not needed in subshells.\n\n2016-08-31  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39122: Completion/Unix/Command/_git: __git_recent_branches:\n\tSilence warning on an edge case.\n\n2016-08-30  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 39131: Functions/Misc/add-zle-hook-widget: return on error\n\tneeds to be at the outer scope.\n\n2016-08-30  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39108 (tweaked): Completion/Unix/Command/_postfix: Support\n\t$enable_long_queue_ids.\n\n\t* 39110: Completion/Unix/Command/_postfix: Complete 'postconf'.\n\n\t* 39107: Completion/Unix/Command/_postfix: Complete\n\t'postqueue'. Also minor tweaks to 'postsuper'.\n\n\t* 39109: Completion/Unix/Command/_postfix: Use mailq to obtain\n\tqueue id's.\n\n2016-08-29  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 39112: Completion/X/Command/_x_utils: Use state_descr\n\n2016-08-28  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 39115: Src/subst.c, Test/D04parameter.ztst: repair forced\n\tjoining when (@) and (j) are used together (broken by 39019)\n\n2016-08-27  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39105: Completion/Unix/Type/_absolute_command_paths:\n\t_hashed_absolute_command_paths: Make the display string the\n\tbasename.\n\n\t* 39103: Completion/Unix/Type/_absolute_command_paths:\n\t_typed-in_absolute_command_paths: Better handle non-empty\n\targuments that don't start with a slash.\n\n\t* 39070: Completion/Unix/Command/_mount,\n\tCompletion/Unix/Type/_canonical_paths: umount: Complete /f/b<TAB>\n\t→ /foo/bar (for absolute path arguments only, for now)\n\n2016-08-26  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 39104: Src/exec.c: do not hash relative paths in findcmd()\n\n2016-08-25  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39102: Completion/Unix/Command/_git: __git_recent_branches:\n\tOptimise.\n\n2016-08-24  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39094: Completion/Unix/Command/_git: _git-config: When an\n\toption is unknown, complete its value to the set value.\n\n2016-08-23  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 39087: Src/builtin.c, Src/utils.c: fix 'conditionally\n\tuninitialized' variables\n\n\t* 39086: Src/mem.c: declare file local variables as 'static'\n\n2016-08-22  Oliver Kiddle  <opk@zsh.org>\n\n\t* unposted (c.f. Mikael: 39078): Completion/Unix/Command/_git:\n\tfix for git blame terms\n\n2016-08-22  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Completion/Unix/Command/_git: _git-config:\n\tsendemail.smtpserver: Correct tags.\n\n\t* 39046 + 39061: Completion/Base/Completer/_external_pwds,\n\tCompletion/Zsh/Type/_history_modifiers, Doc/Zsh/contrib.yo,\n\tDoc/Zsh/expn.yo, Functions/MIME/zsh-mime-handler,\n\tFunctions/VCS_Info/VCS_INFO_quilt,\n\tFunctions/Zle/expand-absolute-path, NEWS, Src/params.c,\n\tSrc/subst.c, Src/utils.c, Test/D02glob.ztst: New :P history\n\tmodifier.\n\n2016-08-20  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 39064: configure.ac, Src/Modules/mathfuc.c: use scalbn() instead\n\tof scalb()\n\n2016-08-20  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 39074: Completion/Unix/Command/_ip: _ip-neighbour: Fix typo in\n\t'lladdr'.\n\n2016-08-19  Oliver Kiddle  <opk@zsh.org>\n\n\t* 39072: Completion/Unix/Command/_git: minor tweaks\n\n\t* 39071: Completion/Solaris/Command/_beadm,\n\tCompletion/Solaris/Command/_svcs, Completion/Unix/Command/_sort\n\tCompletion/Solaris/Command/_coreadm,\n\tCompletion/Solaris/Command/_dladm,\n\tCompletion/Solaris/Command/_dumpadm,\n\tCompletion/Solaris/Command/_flowadm,\n\tCompletion/Solaris/Command/_fmadm: update for Solaris 11u3\n\n\t* 39067: Completion/Unix/Type/_diff_options:\n\tCompletion/Linux/Command/_gpasswd, Completion/Linux/Command/_ss,\n\tCompletion/Redhat/Command/_scl, Completion/Unix/Command/_arping,\n\tCompletion/Unix/Command/_augeas, Completion/Unix/Command/_dbus,\n\tCompletion/Unix/Command/_grep, Completion/Unix/Command/_less,\n\tCompletion/Unix/Command/_make, Completion/Unix/Command/_mutt,\n\tCompletion/Unix/Command/_rsync, Completion/Unix/Command/_wget,\n\tCompletion/Unix/Command/_sed, Completion/Unix/Command/_sort,\n\tCompletion/Unix/Command/_ssh, Completion/Unix/Command/_tmux,\n\tCompletion/Unix/Command/_tree, Completion/Unix/Command/_uniq,\n\tCompletion/Unix/Command/_user_admin,\n\tCompletion/Unix/Command/_xargs, Completion/Unix/Command/_zip,\n\tCompletion/Unix/Command/_readelf: update options\n\n2016-08-18  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Completion/Unix/Type/_canonical_paths: Port docstring\n\tchanges from 39044.\n\n\t* 39044 (in part, see thread): Doc/Zsh/compsys.yo: Document\n\t_canonical_paths in the manual, too.\n\n2016-08-15  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 39039: Doc/Zsh/zle.yo: fix documentation for transpose-words.\n\n2016-08-13  Oliver Kiddle  <opk@zsh.org>\n\n\t* 39036: Completion/Unix/Command/_git: update up to git 2.9.2\n\n\t* 39026: Src/Zle/computil.c: pattern specified with _arguments'\n\t-A option shouldn't be checked against words after the cursor\n\n2016-08-12  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 39035: Src/subst.c, Test/D04parameter.ztst: ${(A)name=word}\n\tshould expand as an array even when there is only one element.\n\n2016-08-12  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 39031: Src/Zle/zle_word.c: Ensure variables are initialised in\n\ttranspose-words.\n\n\t* 39029: Doc/Zsh/zle.yo: document previous change.\n\n\t* Han Pingtian: 38983: Src/Zle/zle_word.c: make transpose-words\n\thandle numeric arguments sensibly.\n\n2016-08-12  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 39028: Src/subst.c, Test/D04parameter.ztst: more join/split\n\tcases fixed and tested.\n\n2016-08-10  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 39019 (cf. PWS 39013): Src/subst.c, Test/D04parameter.ztst:\n\tfix SHWORDSPLIT regression introduced by workers/29313; add\n\ttest cases for more join/split combinations.\n\n2016-08-10  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 39014: Src/zsh_system.h, configure.ac: Use special OpenBSD\n\tinterface to get correct rand() behavior\n\n2016-08-06  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Src/Zle/zle_thingy.c: fix typo in comment\n\n\t* unposted: Etc/zsh-development-guide: fix formatting in module\n\tdiscussion; add mention of widgets and keymaps for modules.\n\n2016-08-05  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* workers/38995 (in part): Src/Zle/computil.c: compfiles:\n\tAdd reverse-engineered documentation breadcrumbs.\n\n\t* 38996: Completion/Unix/Command/_man: Support _correct_word.\n\n\t* 38994: Completion/Unix/Command/_man: Fix two bugs when\n\tcompleting manpage filenames in separate-sections mode.\n\n\t* 38993: Completion/Unix/Command/_man: Drop (b): it's incorrect\n\twhen $sect contains '|'.\n\n\t* 38991: Src/exec.c, Test/C04funcdef.ztst: Make 'whence -v\n\tautoloaded-function' shows the defining filename.\n\n\t* 38990: Completion/Debian/Type/_debbugs_bugnumber: Track bts's\n\tdata dir migration.\n\n2016-08-04  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* unposted: Doc/Zsh/zle.yo: fix format\n\n2016-08-03  Oliver Kiddle  <opk@zsh.org>\n\n\t* 38989: Completion/BSD/Command/_freebsd-update,\n\tCompletion/BSD/Command/_sockstat, Completion/Unix/Command/_cp,\n\tCompletion/Unix/Command/_getent: minor completion updates for BSD\n\n\t* 38986: Completion/Unix/Command/_gsettings: new completion\n\n2016-08-01  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 38981: Completion/Unix/Command/_man: Followup to 37634:\n\tunbreak OpenBSD 'man 3p' and Linux $MANSECT.\n\n2016-08-01  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Andy Spencer: 38982: Completion/Linux/Command/_cpupower: move\n\tto correct folder.\n\n\t* Andy Spencer: 38976: Completion/Linux/_cpupower: new\n\tcompletion.\n\n2016-08-01  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 38971: Src/Modules/terminfo.c, Src/Modules/zutil.c,\n\tSrc/builtin.c, Src/params.c, Src/prompt.c, Src/utils.c: Start\n\tusing the new arrlen_ge() / arrlen_le() helpers.\n\n\t* 38973: Src/params.c, Src/subst.c, Src/utils.c: Optimize\n\tindexing array parameters.\n\n\t* 38964: Completion/Unix/Command/_git: _git-config: Complete\n\toption names present in the config file.\n\n\t* 38963: Completion/Unix/Command/_git: _git-config: Run\n\tgettable-options earlier and in all codepaths.\n\n\t* 38961: Completion/Unix/Command/_git: _git-config: No functional\n\tchange: rename $git_options_static to $git_options in preparation\n\tfor the after-next commit.\n\n2016-07-31  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Completion/Unix/Command/_git: Clean up superfluous\n\tand missing backslashes.\n\n\t* 38967: Completion/Unix/Type/_hosts: Don't complete wildcard\n\tentries from ~/.ssh/known_hosts.\n\n\t* 38966: Completion/Unix/Command/_subversion: _svnadmin: Complete\n\tpositional arguments for 'hotcopy', 'setlog', 'setrevprop',\n\t'delrevprop'.\n\n\t* 38965: Completion/Unix/Command/_subversion: _svnadmin: Complete\n\t'freeze' as a precommand.\n\n\t* 38962: Completion/Unix/Command/_git: _git-config: Document\n\tmore line noise.\n\n\t* 38959: Doc/Zsh/compsys.yo: Document 38956 (_widgets).\n\n2016-07-29  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Completion/Unix/Command/_subversion: _svnadmin:\n\tTweak state description.\n\n2016-07-28  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 38927: Src/Zle/zle_main.c: zle-line-pre-redraw: Set $WIDGET\n\tlike other special widgets do.\n\n\t* unposted: Functions/Misc/add-zle-hook-widget,\n\tFunctions/Misc/add-zsh-hook: Avoid $0 for POSIX_ARGZERO\n\tcompatibility.\n\n2016-07-28  Oliver Kiddle  <opk@zsh.org>\n\n\t* 38957: Functions/Zle/select-word-match,\n\tCompletion/Zsh/Command/_zstyle, Doc/Zsh/contrib.yo:\n\tmake use of updates to match-words-by-style and better support\n\tcompletion of word-style styles for zstyle\n\n\t* 38956: Completion/Zsh/Command/_bindkey,\n\tCompletion/Zsh/Command/_vared, Completion/Zsh/Command/_zle,\n\tCompletion/Zsh/Function/_add-zle-hook-widget,\n\tCompletion/Zsh/Type/_widgets: factor out zle widget completion\n\tinto its own function\n\n\t* unposted: Functions/Zle/vi-pipe: fix for visual mode\n\n2016-07-28  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 38953: Doc/Zsh/contrib.yo,\n\tFunctions/Zle/delete-whole-word-match,\n\tFunctions/Zle/match-words-by-style: Fix some problems with\n\tmatch-words-by-style and add keyword retrieval of matched data.\n\n\t* users/21793: README, Src/glob.c: remove ancient undocumented\n\tpre-\"f\" glob qualifer feature that unqualified integers were\n\ttreated as octal file mode.\n\n2016-07-27  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Functions/Misc/add-zle-hook-widget: Prefix function's\n\tname to its error messages.\n\n\t* unposted (after 38939): Completion/Unix/Command/_git:\n\t_git-rebase: Unbreak.\n\n\t* 38914 (tweaked): Completion/Unix/Command/_pkg-config: Add\n\toptions, complete *.pc files for positional arguments.\n\n2016-07-26  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 38945: Doc/Zsh/expn.yo: additional notes on :a behaviour.\n\n2016-07-24  Oliver Kiddle  <opk@zsh.org>\n\n\t* 38943: Completion/Unix/Command/_texinfo: update options\n\tand improve completion of Info files, nodes and menu items\n\n\t* 38939: Completion/Unix/Command/_git: add missing options,\n\tin particular those for GPG signing a push\n\n\t* 38936: Functions/Zle/vi-pipe: fix for option compatibility\n\n\t* 38929: Doc/Zsh/contrib.yo, Functions/Zle/select-word-match:\n\tnew vim style text object using match-words-by-style mechanism\n\n\t* 38935: Matthew Martin: Completion/Unix/Command/_tcpdump:\n\tupdate for Free and Open BSD\n\n2016-07-23  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Completion/Unix/Command/_git: _git-grep: Stop\n\tleaking the parameter $i.\n\n\t* unposted: Completion/Debian/Type/_deb_packages: Minor\n\toptimization.\n\n\t* 38913: Completion/Unix/Command/_pkg-config: Complete variables\n\tfor --variable.\n\n\t* 38911: Doc/Zsh/compsys.yo: _arguments: Clarify documentation of\n\t'-s -w' switch\n\n2016-07-23  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 38923 (plus expanded comment): Src/jobs.c: zwaitjob() continues\n\twaiting for children that may have ignored the interrupt signal,\n\teven if the current shell has been interrupted.\n\n2016-07-22  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* users/21779: Doc/Zsh/expn.yo: Clarify documentation of the\n\t':a' word modifier.\n\n\t* 38890: Completion/Zsh/Function/_add-zle-hook-widget,\n\tCompletion/Zsh/Function/_add-zsh-hook: _add-zle-hook-widget:\n\tNew completion.\n\n2016-07-21  Oliver Kiddle  <opk@zsh.org>\n\n\t* 38904: Completion/Base/Core/_normal,\n\tCompletion/Unix/Command/_iostat, Completion/Unix/Command/_top:\n\tfix return status in _normal and functions erroneously using\n\tit for default completion\n\n\t* 38894: Marko Myllynen: Completion/Unix/Command/_libvirt:\n\tcompletion for virt-admin and libvirt client/server IDs/names\n\n2016-07-21  Felipe Sateler  <fsateler@debian.org>\n\n\t* 38901: Completion/Debian/Command/_schroot: Add -r/--run-session\n\n2016-07-20  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 38853: Src/glob.c: use strchr().\n\n2016-07-20  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* users/21777: Doc/Zsh/expn.yo: Clarify documentation of the\n\t':A' word modifier.\n\n2016-07-19  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 38862: Src/Modules/datetime.c: strptime(3) requires _XOPEN_SOURCE\n\ton Cygwin (newlib-2.4 or later)\n\n2016-07-18  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 38879: Src/glob.c, Test/D07multibyte.ztst: Ensure file names\n\tare sorted unmetafied.  Test using Polish UTF-8 collation\n\tsequence.\n\n2016-07-18  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 38785 (plus tweak): Completion/Zsh/Command/_print: add -v\n\n2016-07-17  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Functions/Misc/add-zle-hook-widget:  Move from Zle/.\n\n\t* 38866: Doc/Zsh/contrib.yo: update add-zle-hook-widget for 38850.\n\n\t* 38866 (+ tweak 38872): Functions/Zle/add-zle-hook-widget: fix\n\tedge case handling, wrap in anonymous function for kshautoload\n\tmanagement.\n\n2016-07-17  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* users/21752: Doc/Zsh/mod_zleparameter.yo: Extend\n\tzsh/zleparameter's $widgets' parameter's documentation.\n\n\t* unposted (cf. users/21737):: Completion/Unix/Command/_git:\n\t_git-subtree: Record technical debt in comment.\n\n\t* users/21750 (after users/21551): Completion/Unix/Command/_git:\n\t_git-subtree: Tweak -m,-P completions\n\n2016-07-17  Oliver Kiddle  <opk@zsh.org>\n\n\t* 38868: Completion/BSD/Command/_freebsd-update,\n\tCompletion/BSD/Command/_bsdconfig, Completion/BSD/Command/_fetch,\n\tCompletion/BSD/Command/_fstat, Completion/BSD/Command/_gstat,\n\tCompletion/BSD/Command/_jexec, Completion/BSD/Command/_kld,\n\tCompletion/BSD/Command/_procstat, Completion/BSD/Command/_sysrc,\n\tCompletion/BSD/Command/_systat, Completion/Unix/Command/_cat,\n\tCompletion/Unix/Command/_sysctl, Completion/Unix/Command/_vmstat,\n\tCompletion/Unix/Command/_zfs, Completion/Unix/Type/_zfs_dataset:\n\tupdate completions for new options on FreeBSD\n\n\t* 38867: Completion/Linux/Command/_ltrace,\n\tCompletion/Linux/Command/_strace, Completion/Unix/Command/_truss,\n\tCompletion/Unix/Type/_sys_calls: update strace completion\n\tfactoring out system calls and new truss and ltrace completions\n\n\t* Marko Myllynen: 38837 (tweaked c.f. 38826):\n\tCompletion/Unix/Command/_libvirt: new virsh completion\n\n\t* 38845: Src/Zle/zle_main.c, Doc/Zsh/zle.yo: reset region_active\n\tbefore entering zle - it was on exit but before zle-line-finish\n\tAlso reword documentation on region to better cover vi mode\n\n2016-07-13  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 38850: Functions/Zle/add-zle-hook-widget: Simplify indexing\n\tscheme to store hooks strictly in the order they are added;\n\tbetter handling of edge cases and autoloading/sourcing file.\n\n2016-07-13  Eric Cook  <llua@gmx.com>\n\n\t* 38833: Completion/Unix/Command/_iostat\n\tseparate iostat completion from Completion/Linux/Command/_sysstat\n\n2016-07-08  Oliver Kiddle  <opk@zsh.org>\n\n\t* 38812: Completion/BSD/Command/_chflags,\n\tCompletion/Unix/Command/_dmesg, Completion/Unix/Command/_env,\n\tCompletion/Unix/Command/_ln, Completion/Unix/Command/_xmlsoft,\n\tCompletion/Unix/Command/_ls, Completion/Unix/Command/_service,\n\tCompletion/Unix/Command/_touch, Completion/Unix/Command/_script,\n\tCompletion/X/Command/_x_utils, Completion/Zsh/Command/_vared:\n\ta few new completions and update some command options\n\n\t* 38810: Src/Zle/textobjects.c: fix cursor positioning\n\tand repeated invocations when widgets used from emacs mode\n\n\t* 38809: Src/zsh.h, Src/prompt.c, Src/Zle/zle_refresh.c:\n\tfix tracking of colour attributes and restore them when\n\tturning bold off\n\n\t* unposted: Doc/Zsh/builtins.yo, Doc/Zsh/compsys.yo,\n\tDoc/Zsh/options.yo, Doc/Zsh/zle.yo: fix duplicated words\n\n2016-07-08  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 38796: Functions/Zle/match-words-by-style: fix subword\n\tmatching on last character of subword.\n\n2016-07-05  Oliver Kiddle  <opk@zsh.org>\n\n\t* arno: 38780: Completion/X/Command/_setxkbmap: include\n\tvariants containing non alphanumeric symbols in completion\n\n\t* Jordan Klassen: users/21551 (tweaked per users/21560):\n\tCompletion/Unix/Command/_git: new git subtree completion\n\n2016-07-05  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 38728: Test/D02glob.ztst: Tests: Add tests for the ':a' and\n\t':A' modifiers.\n\n2016-07-04  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 38783: Doc/Zsh/contrib.yo, Functions/Misc/zcalc: tweaks for\n\tvariable and stack interation in RPN mode.\n\n2016-06-29  Oliver Kiddle  <opk@zsh.org>\n\n\t* 38770: Src/Zle/zle_keymap.c, Src/Zle/zle_vi.c, Doc/Zsh/zle.yo,\n\tDoc/Zsh/contrib.yo, Functions/Zle/vi-pipe: vi upper/lowercase\n\twidgets and shell widget example that reads a vi movement\n\n\t* 38752: Src/builtin.c: add comments to explain use of stdout\n\tinstead of stderr for the which builtin\n\n2016-06-27  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 38760: Completion/Unix/Command/_git: _git-config: Stop trying\n\tto execute the empty string command name upon completing values\n\tfor an unknown option.\n\n2016-06-25  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Completion/Unix/Command/_git: _git-config: Document\n\tsome line noise.\n\n\t* unposted: Completion/Unix/Command/_git: _git-config: Fix\n\tsyntax error in 'tag.sort' completion.\n\n\t* 38652: Test/ztst.zsh: test harness: Emit unified diffs instead\n\tof context diffs\n\n2016-06-22  Oliver Kiddle  <opk@zsh.org>\n\n\t* 38749: Functions/Zle/surround, Functions/Zle/select-bracketed:\n\tfixes for case at start of a line and for ksharrays\n\n2016-06-22  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* unposted: Src/lex.c: remove unused and no longer defined flag\n\tfrom experiments for previous fix.\n\n\t* 38746: Src/lex.c, Test/A02alias.ztst: Delay marking\n\ta suffix alias as free until the last minute.\n\n2016-06-22  Oliver Kiddle  <opk@zsh.org>\n\n\t* 38714: Src/Zle/complete.c, Doc/Zsh/compsys.yo,\n\tDoc/Zsh/compwid.yo: add x: syntax to match specs to make it\n\tpossible to disable match specs hardcoded in completion functions\n\n\t* 38735: Completion/Unix/Command/_find,\n\tCompletion/Zsh/Type/_globquals: support verbose style to allow\n\tclearer but less compact descriptions for time specifiers\n\n\t* 38733: Completion/X/Command/_rdesktop: completion for xfreerdp\n\n2016-06-21  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 38737: Functions/Misc/zcalc, Doc/Zsh/contrib.yo: document some\n\tzcalc variable usage and make other variables start with \"_\".\n\n\t* 38736: Completion/Zsh/Type/_module_math_func,\n\tCompletion/Zsh/Type/_user_math_func, Doc/Zsh/contrib.yo,\n\tFunctions/Misc/zcalc: various RPN mode enhancments for zcalc.\n\n\t* 38734: Src/loop.c, Test/A01grammar.ztst: fix final case\n\tclauses terminating with ;&.\n\n\t* 38692: Doc/Zsh/restricted.yo, Src/params.c: IFS can't be\n\tchanged in restricted mode.\n\n2016-06-19  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 38715: Doc/Zsh/contrib.yo, Functions/Zle/add-zle-hook-widget:\n\tassorted ksharrays fixes; assign an index to any hook that is\n\tadded without one, to preserve append ordering\n\n2016-06-18  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Functions/Misc/zed: localoptions noksharrays\n\n\t* unposted: Doc/Zsh/options.yo: when ksharrays is set, braces are\n\trequired for all parameter expansions with colon-modifiers\n\n2016-06-18  Oliver Kiddle  <opk@zsh.org>\n\n\t* 38713: Completion/Unix/Type/_dates: don't add calendar matches\n\twhen not immediately entering menu selection\n\n\t* 38707: Completion/Zsh/Type/_globquals,\n\tCompletion/Unix/Type/_files, Completion/Unix/Type/_path_files:\n\tstrip suffix for glob qualifier completion\n\n\t* 38703: Completion/Unix/Command/_su: support su options on macOS\n\n2016-06-16  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 38693: Doc/Zsh/contrib.yo, Functions/Misc/zcalc,\n\tFunctions/Zle/zcalc-auto-insert: Add RPN mode to zcalc.\n\n\t* unposted: Doc/Zsh/params.yo: fix parentheses for getrusage().\n\n2016-06-16  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 38684: Doc/Zsh/contrib.yo: fix format\n\n2016-06-14  Eric Cook  <llua@gmx.com>\n\n\t* 38676: Marko Myllynen: Completion/Linux/Command/_pidof:\n\tCompletion for pidof(1)\n\n\t* 38680: Marko Myllynen: Completion/Unix/Command/_localedef:\n\tCompletion for localedef(1)\n\n2016-06-14  Doug Kearns  <dougkearns@gmail.com>\n\n\t* unposted: Completion/Unix/Command/_cvs: remove unused parameter\n\n2016-06-13  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* users/21632: Doc/Zsh/params.yo, Src/jobs.c: REPORTMEMORY\n\tparameter gives minimum size to trigger usage report.\n\n2016-06-13  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 38653 + 38657: Doc/Zsh/builtins.yo, Src/exec.c,\n\tTest/E02xtrace.ztst: 'functions -T' tracing: recurse into\n\tanonymous functions.\n\n\t* 38651: Completion/Unix/Command/_git: Escape parameter arguments\n\tto _call_program.\n\n\t* 38665: Completion/Unix/Command/_git: config option completion:\n\tQuote properly.\n\n2016-06-12  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 38670: Doc/Zsh/contrib.yo, Functions/Zle/add-zle-hook-widget:\n\tNew function for managing ZLE special widgets, modeled after\n\tFunctions/Misc/add-zsh-hook.\n\n2016-06-09  Oliver Kiddle  <opk@zsh.org>\n\n\t* 38641: Completion/Base/Utility/_values: allow for values which\n\tresemble compadd options\n\n\t* 38639: Completion/Unix/Command/_su: fix username completion\n\tafter -, update options and get user shell with getent\n\n2016-06-07  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 38624: Completion/Unix/Command/_git: Optimize the last commit's\n\t__git_recent_branches__names as suggested by Matthew.\n\n\t* 38592 (plus tweak): Completion/Unix/Command/_git: New recent\n\tbranches completion, unused. (Joint with Nils Luxton)\n\n2016-06-07  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 38632: Completion/Linux/Command/_pkgtool: remove trailing space\n\ton #compdef line for compinit parsing\n\n\t* 38630: Src/builtin.c: fix infinite loop of \"hash =\"\n\n2016-06-06  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 38610: Functions/VCS_Info/VCS_INFO_quilt: vcs_info quilt:\n\tExtract a patch subject, 2.0.\n\n\t* 38609: Functions/VCS_Info/VCS_INFO_quilt: vcs_info quilt:\n\tFactor out a helper function. No functional change.\n\n2016-06-05  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 38622: Src/jobs.c: consistent handling of \"--\" in \"kill\" builtin\n\n2016-06-04  Eric Cook <llua@gmx.com>\n\n\t* 38547: Completion/compdump: only autoload functions\n\twhen they exist in fpath.\n\n2016-06-04  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 38593: Doc/Zsh/compsys.yo: _describe: Make documentation\n\tmore greppable.\n\n2016-06-04  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted (cf. 38612): Src/params.c: remove overeager DPUTS()\n\n\t* 38599: Src/subst.c: skip the \"no such named directory\" warning\n\twhen NO_EXEC is in effect\n\n2016-06-03  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* users/21609: Completion/Unix/Type/_path_files: do not treat\n\ttilde-expansions as quoted when inside command substitutions\n\n2016-06-03  Marko Myllynen  <myllynen@redhat.com>\n\n\t* 38587: Completion/Linux/Command/_iconvconfig: Fix iconvconfig\n\tcompletion --output handling\n\n2016-06-03  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Src/subst.c: internal: Document modify().\n\n2016-06-03  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 38586: Src/Modules/parameter.c, Test/D07multibyte.ztst:\n\tDon't unmetafy values for $functions when passing back\n\twithin parameter framework.\n\n2016-06-03  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 38577: Completion/Unix/Type/_signals: Don't complete SIGEXIT\n\tfrom _kill.\n\n\t* 38576: Completion/Unix/Command/_git: Also detect\n\t_git-${thirdparty} functions in $fpath that are symlinks.\n\n2016-06-02  Eric Cook <llua@gmx.com>\n\n\t* 38567: Marko Myllynen: Completion/Unix/Command/_locale:\n\tcompletion for locale(1)\n\n\t* 38440: Marko Myllynen: Completion/Linux/Command/_iconvconfig:\n\tcompletion for linux's iconvconfig(8)\n\n2016-06-02  Oliver Kiddle  <opk@zsh.org>\n\n\t* 38540: Src/Zle/zle_utils.c: fix undo problem by not moving\n\tthe current change when only undoing a history line change\n\n2016-06-02  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* users/21603: Src/utils.c: Don't do second attempt at read/poll\n\tfrom terminal if interrupted.\n\n2016-05-22  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 38515: Matthew Martin: Completion/Zsh/Context/_subscript:\n\tmissing -- after print and optimised array add.\n\n\t* 38514: Matthew Martin: Completion/Linux/Command/_vserver:\n\tremove unnecessary ls.\n\n\t* 38513: Matthew Martin: Src/Builtins/sched.c: cast time to long\n\tlong where possible.\n\n2015-05-12  Clint Adams  <clint@zsh.org>\n\n\t* 38482: Completion/Debian/Command/_apt: complete available packages\n\tfor apt list.\n\n2016-05-10  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 38468: Src/lex.c: wb,we values in gotword() needed assignment in\n\tadditional case to avoid core dump (bug introduced by 38248)\n\n\t* 38463: Src/Zle/zle_keymap.c: use immortal widgets in .safe keymap\n\n2016-05-10  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Functions/Math/.distfiles, Functions/Math/zmathfunc:\n\tCommit forgotten part of users/21256.\n\n\t* 38453: Completion/Debian/Command/_apt: Complete\n\t${package}/${release} for 'source' and 'build-dep', too.\n\n\t* 38452: Completion/Debian/Command/_apt: Complete releases by\n\tcodename ('jessie', 'sid', etc).\n\n\t* 38451: Completion/Debian/Command/_apt: Complete 'apt-get\n\tdownload'.\n\n2016-03-10  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* Marko Myllynen: 38458: Doc/Zsh/compsys.yo: mention the option\n\t-i of _multi_parts\n\n2016-05-09  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* Jun T.: 38445 (+tweak): Test/C02cond.ztst: subsequent tests rely\n\ton a file touched by the -N test, so it must always be touched even\n\twhen the filesystem is noatime\n\n\t* 38432: Src/zsh_system.h: avoid nonstandard setenv() on __APPLE__\n\n2016-05-09  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Functions/Zle/bracketed-paste-magic: update documentary\n\tcomments to remove references to self-insert-unmeta.\n\n2016-05-09  Frank Terbeck  <ft@bewatermyfriend.org>\n\n\t* 38422: Completion/Unix/Type/_baudrate,\n\tCompletion/Unix/Type/_baudrates: _baudrate -> _baudrates\n\n\t* 38426: Completion/Unix/Type/_baudrates: _baudrates: Use 2 space\n\tindentation\n\n\t* 38424: Completion/BSD/Command/_cu, Completion/Unix/Command/_gdb,\n\tCompletion/Unix/Command/_joe, Completion/Unix/Command/_picocom,\n\tCompletion/Unix/Command/_screen: Use _baudrates helper instead of\n\t_baudrate\n\n\t* 38421: Completion/Unix/Type/_baudrates: _baudrates: Fit better\n\tinto the general completion framework\n\n\t* 38425: Completion/BSD/Command/_cu: _cu: Remove old -d option of\n\t_baudrates\n\n\t* 38420: Completion/Unix/Type/_baudrates: _baudrates: Make style\n\tlookups fit better with the rest of compsys\n\n2016-05-06  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 38401: Completion/Debian/Type/_deb_packages: New completion\n\tfor source packages.\n\n2016-05-06  Axel Beckert  <abe@deuxchevaux.org>\n\n\t* unposted: Doc/Zsh/builtins.yo: Fix typo.\n\n2016-05-04  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 38402: Completion/Zsh/Command/_precommand: Complete\n\t'eatmydata'.\n\n\t* 38399: Completion/Debian/Command/_bts,\n\tCompletion/Debian/Command/_bug,\n\tCompletion/Debian/Type/_debbugs_bugnumber: _bts: Complete\n\tdebbugs bug numbers from `bts cache`.\n\n2016-05-03  Russell Currey  <ruscur@russell.cc>\n\n\t* 38393: Completion/Unix/Command/_git: Fix typo in completion of\n\t'--minimal'\n\n2016-05-02  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 38375 (tweaked per 38384): Test/C02cond.ztst: try harder to\n\tdetect noatime filesystems.\n\n2016-05-02  Frank Terbeck  <ft@bewatermyfriend.org>\n\n\t* 38388: Completion/BSD/Command/_cu, Completion/Unix/Command/_gdb,\n\tCompletion/Unix/Command/_joe, Completion/Unix/Command/_picocom,\n\tCompletion/Unix/Command/_screen, Completion/Unix/Type/_baudrate:\n\tRefactor baud rate completion\n\n2016-05-01  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Completion/Debian/Command/_bug: _querybts: Fix\n\tpositional arguments' description.\n\n\t* unposted: Completion/Zsh/Command/_compadd: Fix typo.\n\n2016-05-01  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* unposted: Doc/Zsh/redirect.yo: typo.\n\n2016-05-01  Frank Terbeck  <ft@bewatermyfriend.org>\n\n\t* 38381: Completion/Unix/Command/_picocom: Add completion for\n\tpicocom utility\n\n2016-05-01  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 38369: Completion/Unix/Command/_git: Complete fetchy refspecs\n\tcorrectly.\n\n\t* 38368: Completion/Unix/Command/_git: Bifurcate __git_ref_specs.\n\n\t* 38367: Completion/Unix/Command/_git: Fix an apparent typo\n\tin __git_heads().\n\n\t* 38366: Completion/Unix/Command/_git: Offer alternatives\n\tproperly.\n\n\t* 38365: Completion/Unix/Command/_git: _git-bundle: Complete\n\trequired file argument to 'git bundle' correctly.\n\n2016-04-29  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Src/builtin.c: silence spurious compiler warning\n\n\t* 38358: Test/C02cond.ztst: \"fgrep --\" for noatime check in case\n\ta mount point is named \"-\" as in Fedora mock environment\n\n2016-04-29  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Sebastian: 38356: Src/Modules/curses.c, Doc/Zsh/mod_curses.yo:\n\tallow integers as colours in curses.\n\n\t* Sebastian: 38354: Src/Modules/curses.c: alter internal return\n\tcode so as not to mask curses error code.\n\n2016-04-26  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 38350 (cf. Glenn Smith: 38348): Src/exec.c: Remove-all warning\n\tshould warn about the root directory as well\n\n2016-04-23  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 38316: Completion/Unix/Command/_git: _git-rebase: Complete\n\tany committish for the second argument\n\n2016-04-23  m0viefreak  <m0viefreak.cm@googlemail.com>\n\n\t* 38291: Doc/Zsh/zle.yo, Src/Zle/zle_params.c: Change names of\n\tISEARCH_* parameters to ISEARCHMATCH_*\n\n2016-04-23  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* Mikael Berthe: 38307: Src/Modules/pcre.c: PCRE segfault when\n\tparenthesized group matches nothing (cf. 37515)\n\n\t* unposted: Test/V07pcre.ztst: regression test for 38307\n\n2016-04-22  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 38306: Src/builtin.c: in printf formats, treat a missing\n\tprecision as zero rather than as unlimited\n\n2016-04-15  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 38289: Completion/compinit: \"builtin enable\" in $_comp_setup\n\tto avoid accidentally invoking external command of the same name\n\n2016-04-14  Oliver Kiddle  <opk@zsh.org>\n\n\t* Han Pingtian: 38219: Completion/Zsh/Context/_subscript:\n\tremove redundant left square bracket\n\n\t* 38287: Src/Zle/zle_vi.c: fix position for the end of a visual\n\tselection range for the cursor on an empty last line in the buffer\n\n\t* 38286: Src/Zle/zle_misc.c: cursor correction following\n\tyank-pop is only applicable to vi command mode\n\n\t* Christian Neukirchen: 37847: Completion/Unix/Command/_du:\n\tupdate du arguments up to GNU du 8.25\n\n2016-04-10  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* m0viefreak: 38264: Doc/Zsh/zle.yo: improve doc for 38145\n\n2016-04-09  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted:  Completion/Base/Widget/_complete_help: capture the\n\tfallback to compctl in case there is one defined\n\n2016-04-09  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 38255: Completion/Unix/Command/_git: Fix argument pastedness.\n\n2016-04-07  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 38248: Src/lex.c, Src/Zle/zle_tricky.c: fix word position\n\tcalculation when completing on or just before a redirection\n\toperator; the completion result is still in need of some repair\n\n2016-04-03  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 38229: Src/Zle/zle_tricky.c: fix cursor placement calculation\n\twhen completing in empty double quotes\n\n2016-03-26  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* Dmitry Marakasov: 38162: accept G for gigabytes in limit command\n\n2016-03-21  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 38182: Completion/Unix/Command/_git: Invoke reflog completion\n\tfrom the 'complete commit objects' codepath.\n\n\t* 38181: Completion/Unix/Command/_git: _git reflog: Complete\n\t'@{N}' instead of 'HEAD@{N}'.\n\n\t* 38180: Completion/Unix/Command/_git: Improve reflog completion.\n\n2016-03-21  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* m0viefreak: 38145: Doc/Zsh/zle.yo, Src/Zle/zle_params.c: Make\n\tisearch and completion suffix variables visible as parameters.\n\n2016-03-20  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 38191: Src/Zle/zle_main.c: in reexpandprompt(), do not free global\n\tpointers until after promptexpand() in case they are referenced from\n\tsignal handlers, and do additional re-entrancy checks in case of\n\twindow size changes during promptexpand().\n\n2016-03-20  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 38188: Src/pattern.c: signal re-entrancy, maybe\n\n2016-03-19  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 38186: Completion/Unix/Command/_adb: fix remote file completion,\n\tvarious fixes, restore 35531 again with fix from 38185\n\n\t* 38187: Completion/Unix/Command/_adb: Just check current dir\n\tinstead of recursively\n\n2016-03-18  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Doc/Zsh/contrib.yo: Document run-help-* helper\n\tfunctions.\n\n2016-03-18  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 38179: Completion/Unix/Command/_adb: Fix completion by mostly\n\treverting 35531, add missing subcommands from latest adb\n\n2016-03-16  Frank Terbeck  <ft@bewatermyfriend.org>\n\n\t* 38161: Completion/Unix/Command/_tmux: _tmux: Use a colon to\n\tterminate options to _arguments itself\n\n2016-03-15  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 38155: Doc/Zsh/compsys.yo: docs: compsys: Clarify documentation\n\tof the 'filter' style.\n\n2016-03-15  m0viefreak  <m0viefreak.cm@googlemail.com>\n\n\t* 38151: Completion/Unix/Command/_git: fix tag name of remote\n\tbranches\n\n\t* 38148: Completion/Unix/Command/_git: reflog: complete\n\treferences next to commands\n\n2016-03-11  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 38135: Src/Zle/complete.c: internal: bin_compadd: Add a\n\tfew comments.\n\n\t* 38129: Completion/Unix/Command/_git: Fix __git_ignore_line's\n\ttreatment of shell and pattern metacaracters.\n\n2016-03-10  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 38128: Completion/Unix/Command/_git: Fix completion of diffs\n\tagainst the index when treeish isn't shell-safe\n\n\t* 38123 (after 38074): Completion/Unix/Command/_git: _git reset\n\t$treeish: complete only staged files\n\n2016-03-09  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 38120: Completion/Unix/Command/_git: Document the internal\n\thelper function __git_ignore_line.\n\n2016-03-08  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 38114: Src/exec.c: In substitutions involving subshells, disable\n\tsignals that require interactive handling.\n\n2016-03-09  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* unposted: .gitignore: update for 38108\n\n2016-03-08  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 38074: Completion/Unix/Command/_git: _git reset HEAD:\n\tcomplete only staged files\n\n\t* 38108: Config/defs.mk.in, Doc/Makefile.in, Doc/ztexi.yo,\n\tconfigure.ac: enable to create both zsh_{a4,us}.pdf\n\n2016-03-07  Oliver Kiddle  <opk@zsh.org>\n\n\t* 38043: Src/Zle/compcore.c, Src/Zle/complist.c,\n\tSrc/Zle/zle_tricky.c: allow any completion widget to cycle matches\n\tfor menu completion to fix reverse menu completion\n\n2016-03-07  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 38111: Src/parse.c: remove redundant return values from\n\tpar_list() and par_list1().\n\n\t* users/21352: Src/subst.c, Test/A03quoting.ztst: use nulstring\n\tto ensure $'' isn't elided.\n\n\t* 38094: Src/signals.c, Test/C03traps.ztst: POSIX exit traps\n\taren't local so local level should be 0 so they don't\n\tget trashed if defined in a function.\n\n2016-03-06  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 38106: Src/parse.c: if...then if...else should be a parse error.\n\n\t* Greg Klanderman: 38086: Doc/Zsh/params.yo, Src/init.c,\n\tSrc/params.c: shuffle init code to localize a global, add\n\t$ZSH_ARGZERO, refine $ZSH_SCRIPT\n\n2016-03-04  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 38084: Baruch Siach: configure.ac: use the pcre-config we\n\tfound earlier for determining libs.\n\n2016-03-03  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 38048: Src/zle_refresh.c: fix \"zle redisplay\" when called while\n\ta listing is below the prompt (e.g., from interrupt handler)\n\n\t* Martijn Dekker: 38039: Src/options.c: POSIXy behavior for \"set +o\"\n\n2016-02-26  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* Stephane: 38020: fix problems with fractions of a second in\n\t$SECONDS.\n\n2016-02-25  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 38024: Src/signals.c, Test/C03traps.ztst: improve 37999 to\n\tallow nested zsh-mode EXIT traps not to remove a POSIX EXIT\n\ttrap.\n\n2016-02-19  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Etc/completion-style-guide: Clarify the term \"variant\".\n\n2016-02-17  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 37999: README, Src/signals.c, Test/C03traps.ztst: Make\n\tPOSIX-style EXIT traps behave according to POSIX_TRAPS at\n\tthe point where the trap is set.\n\n2016-02-16  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* users/21256 + workers/37965: Doc/Zsh/contrib.yo,\n\tDoc/Zsh/mod_mathfunc.yo, Src/zsh.mdd: New math functions\n\tmin(), max(), sum(), provided by a new autoloadable function\n\t'zmathfunc'.\n\n2016-02-16  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 38001: Src/Zle/zle_refresh.c: clear-screen re-expands prompts\n\n\t* 37988: Src/params.c: $0 becomes read-only under POSIXARGZERO\n\n2016-02-15  Eric Cook  <llua@gmx.com>\n\n\t* 37975: Completion/Unix/Command/_php: allow completion after\n\tthe first non-option argument.\n\n2016-02-14  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 37898: Completion/compinstall: fix typo in completer menu\n\n\t* 37898: Completion/Unix/Command/_gcc: complete linker options\n\n\t* 37972: Completion/Base/Utility/_arguments,\n\tCompletion/Base/Widget/_correct_filename,\n\tCompletion/Base/Widget/_most_recent_file,\n\tCompletion/Unix/Command/_devtodo, Completion/Unix/Command/_make,\n\tCompletion/Unix/Command/_ssh, Completion/Unix/Command/_tar,\n\tCompletion/Unix/Command/_zip,\n\tCompletion/Unix/Type/_canonical_paths: Redirect stderr to\n\t/dev/null in cases where ${~param} might generate errors\n\n\t* 37971 (cf. users/21284: Eric Freese):\n\tFunctions/Zle/bracketed-paste-magic: fix potential issues when\n\tinteracting with user-defined widgets\n\n\t* 37961: Src/Zle/complist.c: in interactive menuselection, use of\n\t\"compadd -x\" (e.g. the \"warnings\" zstyle) may have replaced the\n\tcompletion list, so skip highlighting of the current selection\n\tuntil a subsequent keystroke has regenerated the original listing;\n\tfixes crash on bad memory access\n\n2016-02-11  Eric Cook  <llua@gmx.com>\n\n\t* 37913: Completion/BSD/Command/_gstat,\n\tCompletion/BSD/Command/_sysrc, Completion/Linux/Command/_gpasswd,\n\tCompletion/Linux/Command/_htop,\tCompletion/Linux/Command/_kpartx,\n\tCompletion/Unix/Command/_top,\tCompletion/Unix/Command/_tput,\n\tCompletion/Unix/Command/_zpool: new completers and improvement\n\tfor _zpool.\n\n2016-02-11  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 37946: Src/utils.c: make rm * warnings more informative about\n\tfiles being deleted.\n\n2016-02-10  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 37927: Src/Zle/complist.c: recreate local keymaps as necessary\n\tin case the user has deleted them\n\n2016-02-09  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 37893: Doc/Zsh/builtins.yo: document behaviour of typeset -U\n\tfor parameters with multiple interfaces.\n\n2016-02-09  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 37924: Completion/Unix/Command/_git: Completion: _git:\n\tComplete files for 'check-ignore'\n\n\t* 37923: Completion/Debian/Command/_bts: Completion: _bts:\n\tFix quoting of $DEBEMAIL.\n\n\t* 37922: Util/zyodl.vim: zyodl.vim: Add alternative installation\n\tinstructions.\n\n\t* 37896: Doc/Zsh/builtins.yo: zshbuiltins: Document argv\n\tbehaviour of 'source' without arguments\n\n\t* unposted: ChangeLog: Move the 37678 entry to the correct\n\tlocation (and author).\n\n2016-02-08  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 37914: Src/builtin.c, Test/E01options.ztst: reparse associative\n\tarray subscripts in \"unset\" so keys with \"[\" or \"]\" may be\n\tbackslash-escaped.  Fix erroneous test case this revealed.\n\n2016-02-07  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 37895: Src/params.c, Doc/Zsh/parmas.yo: add ZSH_SCRIPT as\n\talways available form of POSIX $0.\n\n2016-02-07  Dominik Ritter  <dritter03@googlemail.com>\n\n\t* unposted: Doc/Zsh/mod_complist.yo: complist module docs:\n\tFix parameter name in an example.\n\n2016-02-07  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: README: Follow-up to 37833: extend description of\n\t37804 in README.\n\n2016-02-04  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 37874: Src/Builtins/sched.c: remove unused function argument.\n\n2016-02-03  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 37868: Src/Modules/curses.c, Src/Modules/param_private.c,\n\tSrc/Modules/tcp.c, Src/Modules/termcap.c, Src/Modules/zftp.c,\n\tSrc/Zle/complist.c, Src/Zle/zle_misc.c, Src/Zle/zle_utils.c,\n\tSrc/cond.c, Src/exec.c, Src/glob.c, Src/jobs.c, Src/params.c,\n\tSrc/prompt.c, Src/utils.c: add 'static' to file local variables.\n\n2016-01-31  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 37859: Src/text.c: NULL-terminate cond_binary_ops static array.\n\n2016-01-30  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 37845: Doc/Zsh/builtins.yo: Forward-reference typeset instances\n\twhere no parameter is created, and remove the obsolete statement\n\tabout array assignments separated from typeset command on -p.\n\n\t* 37844: Doc/Zsh/builtins.yo: reorder typeset introduction to keep\n\trelated concepts together.\n\n2016-01-30  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 37831: Doc/Zsh/builtins.yo: typeset: Document exit status\n\tdifference from parameter assignment statements\n\n2016-01-30  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 37838: Src/Builtins/rlimits.c, Src/Builtins/sched.c,\n\tSrc/Modules/curses.c, Src/Modules/datetime.c, Src/Modules/db_gdbm.c,\n\tSrc/Modules/files.c, Src/Modules/langinfo.c, Src/Modules/mapfile.c,\n\tSrc/Modules/mathfunc.c, Src/Modules/newuser.c, Src/Modules/parameter.c,\n\tSrc/Modules/pcre.c, Src/Modules/regex.c, Src/Modules/socket.c,\n\tSrc/Modules/stat.c, Src/Modules/system.c, Src/Modules/tcp.c,\n\tSrc/Modules/termcap.c, Src/Modules/terminfo.c, Src/Modules/zpty.c,\n\tSrc/Modules/zselect.c, Src/Modules/zutil.c, Src/Zle/compctl.c,\n\tSrc/Zle/computil.c, Src/Zle/zle_utils.c, Src/Zle/zle_word.c,\n\tSrc/hashtable.c, Src/hist.c: use UNUSED() consistently\n\n2016-01-29  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 37833: README: Document 37804 in README.\n\n\t* 37797: StartupFiles/zshrc: StartupFiles/zshrc += run-help\n\n\t* 37752: Test/D04parameter.ztst: More tests for the previous\n\tpatch.\n\n\t* 37700: Src/lex.c, Src/parse.c, Src/zsh.h,\n\tTest/D04parameter.ztst: Teach ${(z)} the 'repeat WORD SUBLIST'\n\tsyntax.\n\n\t* unposted: Completion/Unix/Command/_init_d: _init_d: Report\n\tfailure to caller.\n\n2016-01-28  Eric Cook  <llua@gmx.com>\n\n\t* 37814: Kamil Dudka: Functions/Misc/run-help-ip: use /bin/zsh\n\tas the shebang.\n\n2016-01-27  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 37804 (plus error return per 37816): Src/loop.c: first word\n\tfollowing \"repeat\" should be evaluated as math, to match docs\n\n\t* 37819: Src/hist.c: zshaddhistory hook is intended to work for\n\tany history file write, even upon keyboard interrupt\n\n\t* 37810: Src/Modules/zutil.c: repair handling of backslashes and\n\tof names starting with \"+\"/\":\"/\"=\" in zparseopts option specs\n\n2016-01-26  Eric Cook  <llua@gmx.com>\n\n\t* 37788: Completion/Zsh/Context/_subscript: fix completion of\n\tassociative array keys\n\n2016-01-26  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 37802: Doc/Zsh/mod_zutil.yo: Clarify zparseopts description.\n\n\t* 37802: Src/Modules/zutil.c: zparseopts \"X::\" specifier should\n\talso look for the optional argument in the word after \"-X\".\n\n\t* 37785: Src/params.c: skip autoload parameters for \"typeset -p\"\n\n2016-01-25  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* Jun T.: 37759: Src/Modules/param_private.c: save more function\n\tpointers from realparamtab when hacking in their replacements,\n\tbecause restoring from the original external symbols fails for\n\tsome dynamic link schemes (e.g. 64bit Cygwin).\n\n2016-01-25  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 37780: Kamil Dudka: Src/utils.c: Careful in case both argzero\n\tand scriptname are null in zerr().\n\n\t* 37765: Src/builtin.c, Test/C04funcdef.ztst: Use FS_FUNC on\n\tfuncstack to find autoload -X target rather than scriptname.\n\n\t* 37776: Src/utils.c: set errflag before calling zwarning() to\n\tavoid recursive error messages.\n\n2016-01-23  Matthew Martin  <phy1729@gmail.com>\n\n\t* 37725: Completion/Unix/Command/_init_d: Completion: _init_d:\n\tadd OpenBSD bits\n\n2016-01-23  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 37703: Completion/Unix/Command/_git: Completion: git: Also\n\tcomplete sendmail commands for send-email's configuration. (after\n\t37666)\n\n2016-01-21  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 37722: Src/builtin.c, Test/C02cond.zts: test builtin should\n\treturn status 2 on syntax error.\n\n2016-01-20  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 37705: Src/lex.c, Test/D04parameter.ztst: don't turn - to\n\tDash after start of brace parameter.\n\n\t* unspoted: Config/version.mk: incremented version to 5.2-dev-1\n\tbecause of parsing change.\n\n2016-01-20  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 37666: Completion/Unix/Command/_git: Completion: git:\n\t'send-email --smtp-server=' takes absolute path to sendmail.\n\n\t* 37665: Completion/Unix/Command/_git,\n\tCompletion/Unix/Type/_absolute_command_paths, Doc/Zsh/compsys.yo:\n\tCompletion: New helper _absolute_command_paths.\n\n\t* 37664: Completion/Unix/Type/_path_commands, Doc/Zsh/compsys.yo:\n\tdocs: Document the completion function _command_names.\n\n2016-01-19  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 37693: Src/glob.c: turn Dash into '-' in glob qualifiers.\n\n\t* 37689: README, Src/glob.c, Src/lex.c, Src/pattern.c,\n\tSrc/zsh.h, Test/D02glob.ztst: also ! and ^ need to be tokenised\n\tin character set.\n\n\t* 37678: Src/glob.c, Src/lex.c, Src/pattern.c, Src/utils.c,\n\tSrc/zsh.h, Test/D02glob.ztst: Now possible to quote \"-\" in\n\ta pattern range.\n\n2016-01-18  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 37682: Src/lex.c: when SH_GLOB is set (e.g. in \"sh\" emulation)\n\tdo not parse bare parentheses in arguments as a pattern grouping.\n\n2016-01-18  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 37634: Completion/Unix/Command/_man: _man: Support subsection\n\tnames such as '3p'.\n\n\t* 37634: Completion/Unix/Command/_man: _man: Disentangle a local\n\tvariable that had two distinct semantics. No functional change\n\n\t* 37663: Completion/Unix/Command/_bibtex: New bibtex completion\n\t(very minimal).\n\n\t* unposted: Doc/Zsh/zle.yo: docs: zshzle(1): Trivial\n\tclarification to $CONTEXT.\n\n2016-01-15  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 37646: Src/builtin.c, Test/B02typeset.ztst: typeset should\n\treturn non-zero status on attempt to set readonly variable.\n\n\t* 37643: Src/Zle/complist.c: Reset interrupt after getkeycmd()\n\tin menu selection.\n\n\t* 37512: Src/params.c: overeager WARN_CREATE_GLOBAL with\n\tstrftime.\n\n2016-01-15  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Src/utils.c: Extend docstring of callhookfunc().\n\n\t* unposted: Functions/VCS_Info/Backends/VCS_INFO_detect_p4:\n\tFix typo in comment.\n\n\t* 37612: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info git: Set $git_patches_unapplied correctly for\n\t'rebase-apply' case.\n\n2016-01-14  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 37590: Src/Zle/zle_hist.c, Src/Zle/zle_main.c: Invoke\n\tzle-line-pre-redraw during isearch.\n\n2016-01-13  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 37570: Functions/Zle/transpose-words-match: give truth to the\n\tdoc assertion this is a drop-in replacement for\ttranspose-words\n\n\t* 37567: Functions/Zle/match-words-by-style: use (Z:n:) to split\n\tthe buffer into words so line breaks are treated as whitespace\n\n2016-01-13  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 37591: Src/hashtable.c, Test/A02alias.ztst: 37591: 'alias -L':\n\tskip with a warning aliases with '=' in their LHS\n\n\t* 37550: Completion/BSD/Command/_cu: _cu: Support Linux\n\tline-device names; fail gracefully on OSes matching no known\n\tline-device name pattern.\n\n2016-01-10  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 37551: Src/builtin.c: Include the builtin's name in a \"bad\n\toption\" error message.\n\n2016-01-10  Eric Cook <llua@gmx.com>\n\t* 37534: Matthew Martin: Completion/BSD/Command/_cu,\n\tCompletion/BSD/Command/_fw_update, Completion/BSD/Command/_rcctl\n\n2016-01-08  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* Jun T.: 37515: Src/Modules/pcre.c, Test/V07pcre.ztst: multibyte\n\thandling as per 35448.\n\n\t* unposted (cf. Jun T.: 37516): Src/builtin.c: refine READ_MSTREAM\n\tto avoid unsequenced evaluation\n\n2016-01-06  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 37513 (cf. Jun T.: 37508): Src/builtin.c: fix typos; improve\n\terror cleanup in tempfile case of ASSIGN_MSTREAM(); simplify\n\tREAD_MSTREAM() and correct for signed/unsigned compiler warning\n\n2016-01-04  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 37504: Src/builtin.c: refactor code using/simulating memstream\n\tto capture output for \"print -v\"\n\n\t* 37503: Src/builtin.c: detect incompatible \"print\" options, fix\n\tmetafication and possible memory leak, miscellaneous cosmetics\n\n\t* Jun T. (+ revise test): 37501: Src/builtin.c, Test/B03print.ztst:\n\tcorrect byte counts when simulating memstream via temp file\n\n2016-01-03  Peter Stephenson <p.w.stephenson@ntlworld.com>\n\n\t* 37489, tweaked: Doc/Zsh/options.yo, Src/params.c,\n\tTest/C01arith.ztst: with POSIX_IDENTIFIERS create math var as\n\tscalar\n\n2016-01-02  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 37497: Src/builtin.c: handle NUL bytes in \"printf -v\".\n\n\t* 37493: Doc/Zsh/builtins.yo, Src/builtin.c, Src/hashtable.h,\n\tTest/B02typeset.ztst: readonly + POSIX_BUILTINS == typeset -gr\n\n2016-01-01  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 37483: Src/glob.c: save and possibly restore cshnullglob failure\n\tstate around each evaluation of an (e:...:) glob qualifier.\n\n\t* 37473: Src/exec.c: check for cshnullglob in command position.\n\n2015-12-31  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 37469: Src/parse.c: do NOT allow semicolons in place of line breaks\n\tin conditionals\n\n\t* unposted:  Src/builtin.c: enable WARN_CREATE_GLOBAL for print -v\n\n\t* 37468: Src/parse.c: allow line breaks in more places in [[ ... ]]\n\n\t* 37467: Doc/Zsh/builtins.yo, Src/builtin.c, Test/B03print.ztst:\n\tadd \"print -v var\" / \"printf -v var\"\n\n2015-12-31  Oliver Kiddle  <opk@zsh.org>\n\n\t* 37453 (with Bart, started by Baptiste Daroussin, 37315)\n\tTest/C02cond.ztst: try to improve detection of noatime filesystem\n\n\t* users/21114: Completion/Unix/Command/_dig: new completion\n\n2015-12-30  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 37460: Test/X03zlebindkey.ztst: make sure the default keymap is\n\temacs before using that keymap to test bindings\n\n2015-12-31  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: NEWS: Document how to disable paste highlighting.\n\n\t* 37456: Src/Zle/zle_refresh.c: Have zle_highlight=(none)\n\tdisable paste highlighting\n\n2015-12-30  Frank Terbeck  <ft@bewatermyfriend.org>\n\n\t* 37451: Functions/VCS_Info/vcs_info: vcs_info: Declare \"msgs\" in\n\tearly context\n\n2015-12-27  Axel Beckert  <abe@deuxchevaux.org>\n\n\t* 37438: Completion/Debian/Command/_aptitude: Also parse --help/-h\n\toutput of aptitude 0.7.5 and later.\n\n2015-12-26  Axel Beckert  <abe@deuxchevaux.org>\n\n\t* 37436: Felipe Sateler: Completion/Debian/Command/_apt:\n\tAdd missing apt purge and autoremove subcommands.\n\n2015-12-25  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 37435 (+ fix typo): Src/exec.c: allow execution of empty files\n\tas \"sh\" scripts\n\n\t* 37434: Src/exec.c: POSIXBUILTINS \"command\" should prevent shell\n\texit on errors from special builtins\n\n2015-12-23  Philip Sequeira  <phsequei@gmail.com>\n\n\t* 37345: Functions/VCS_Info/VCS_INFO_maxexports,\n\tFunctions/VCS_Info/VCS_INFO_set: VCS_INFO functions break with\n\tsetopt no_unset\n\n2015-12-19  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* users/21082 (expanded): Functions/Misc/is-at-least: do a more\n\tcomplete job of sorting version strings that are not in the form\n\tof zsh version numbers; additional explanatory comment\n\n\t* unposted (cf. 37387): Src/options.c: emulate turns off\n\tWARN_CREATE_GLOBAL\n\n\t* users/21068: Functions/Newuser/zsh-newuser-install: use emacs\n\tkeymap in vared by default (less surprising than vi modes)\n\n2015-12-19  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 36650: Doc/Zsh/zle.yo, Src/Zle/zle_main.c: Add\n\tzle-line-pre-redraw hook for highlighting\n\n2015-12-19  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted (after users/20873): Functions/Zle/edit-command-line:\n\tTheoretical fix: don't parse print/echo escape sequences in\n\t$zle_bracketed_paste.\n\n\t* 37257 (in part): Test/A06assign.ztst: Add array assignment tests.\n\n2015-12-16  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 37411: Test/X03zlebindkey.ztst: more bindkey tests.\n\n2015-12-15  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 37405: Src/Zle/zle_keymap.c, Test/X03zlebindkey.ztst: fix\n\tbinding of self-insert to full or partial multibyte sequences\n\tlonger than a one byte prefix and add test.\n\n2015-12-14  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 37401: Completion/Unix/Type/_list_files: fix pattern error\n\tcausing too much use of zstat.\n\n\t* 37400: Functions/Chpwd/zsh_directory_name_generic: fix typo\n\tthat caused unwanted error message.\n\n2015-12-13  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 37397: Adrien Vergé: Completion/Redhat/Command/_dnf: update\n\twith optimisations.\n\n2015-12-11  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Functions/Zle/url-quote-magic: match, mbegin, mend should be\n\tlocally.\n\n2015-12-11  Oliver Kiddle  <opk@zsh.org>\n\n\t* 37383: Matthew Martin: Completion/Unix/Command/_elfdump,\n\tCompletion/Unix/Command/_nm, Completion/Unix/Command/_objdump,\n\tCompletion/Unix/Command/_readelf, Completion/Unix/Type/_object_files:\n\tadd completion type for object files\n\n\t* 37260: Simon Hafner: Completion/X/Command/_mplayer:\n\tadd opus to mplayer audio completions\n\n\t* users/20873: Functions/Zle/edit-command-line: disable bracketed\n\tpaste while running external editor from zle\n\n2015-12-10  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 37378: Src/Modules/zpty.c, Test/X03zlebindkey.ztst,\n\tTest/comptest: New bindkey tests; also fix Meta bug with pattern\n\tmatch on zpty -r.\n\n2015-12-09  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 37364: Src/builtin.c, Src/text.c, Test/C02cond.ztst: \"test\"\n\tand \"[\" need to prefer binary operators to parentheses in\n\tthree-argument expressions.\n\n2015-12-08  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 37348: Src/utils.c, Test/D04parameter.ztst,\n\tTest/D07multibyte.ztst: tests for ${(q+)...} and extra\n\tdupstring() needed for empty string case.\n\n\t* 37347: Functions/VCS_Info/VCS_INFO_nvcsformats: msgs\n\tshouldn't be local here, but in caller (where it already is).\n\n\t* users/21071: Src/Zle/zle_keymap.c: Multibyte key sequences\n\tcouldn't be bound if the initial byte was the start of any\n\tself-insert sequence.\n\n2015-12-07  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 37344: Doc/Zsh/expn.yo, Src/subst.c, Src/utils.c, Src/zsh.h,\n\tTest/D04parameter.ztst, Test/V09datetime.ztst: restore old\n\tprintable quoting of characters when not used from quotedzputs()\n\tand add ${(q+)...} to output the new form.\n\n\t* 37331: Src/utils.c: use a single character to represent an\n\tMB_INCOMPLETE string even if multiple octets.\n\n2015-12-07  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 37337: Src/Zle/zle.h, Src/Zle/zle_main.c,\n\tSrc/Zle/zle_thingy.c: Delay freeing widget until not in use.\n\n\t* 37335: Test/D04parameter.ztst, Test/V09datetime.ztst: fix\n\ttests after 37314.\n\n\t* 37310: Doc/Zsh/builtins.yo: effect of disabling typeset\n\treserved word.\n\n2015-12-06  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 37326: Src/utils.c: comment how counting for multibyte string\n\tlengths and widths is supposed to work.\n\n\t* 37314: Src/utils.c, Src/zsh.h: upgrade quotedzputs() to use\n\tnicechar() where necessary.  Regularise nicechar() etc. to produce\n\t$'...' compatible output.\n\n2015-12-05  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 37150: Completion/Unix/Command/_git: _git: Autocomplete .. for\n\tcommit ranges\n\n\t* 36957: Completion/Unix/Command/_git: _git: Apply matchspecs to\n\tfilename completion such as 'git log f/b<TAB>' → 'foo/bar.txt's\n\n2015-12-04  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 37305: Src/params.c, Test/A06assign.ztst,\n\tTest/B02typeset.ztst, Test/V10private.ztst: typeset -p\n\tcan now output arrays on one line.\n\n\t* 37303: Test/E01options.ztst: test WARN_CREATE_GLOBAL negative\n\tcases.\n\n\t* 37302: Src/exec.c, Src/params.c: suppress WARN_CREATE_GLOBAL\n\twarnings after a fork\n\n\t* unposted: Src/exec.c, Src/init.c: fix up init_io() calls\n\tin previous change.\n\n\t* 37294: Doc/Zsh/params.yo, Src/init.c: Add $ZSH_EXECUTION_STRING\n\tto give argument to shell -c option.\n\n2015-12-03  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 37253: Src/params.c: Constify two local variables.\n\n\t* unposted: Completion/Unix/Command/_getent,\n\tCompletion/Unix/Command/_mtools,\n\tCompletion/Unix/Type/_mime_types,\n\tCompletion/X/Command/_kfmclient, Completion/Zsh/Command/_zed:\n\tRemove unneeded executability bits.\n\n\t* 37296: Src/utils.c: Avoid needless calloc().\n\n\t* 37295: Functions/Zle/backward-kill-word-match,\n\tFunctions/Zle/kill-word-match: Join kills\n\n2015-12-03  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* unposted: Config/version.mk: update to 5.2-dev-0.\n\n\t* unposted: Config/version.mk: release zsh 5.2 (N.B. this entry\n\tadded ex post facto as a marker).\n\n2015-11-30  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 37256: Completion/Debian/Command/_debchange: _debchange\n\t(_dch): Update completion.\n\n\t* 37252: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info git: Compute %b correctly with \"rebase --onto\" of\n\tdetached heads. (Follow-up to 36725.)\n\n\t* 37254: Src/params.c: No functional change: change code layout\n\tin preparation for 37253.\n\n\t* 37250: Src/params.c: No functional change: rename local\n\tvariables.\n\n2015-11-29  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted; Config/version.mk: 5.1.1-test-3.\n\n2015-11-28  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted (after 37243): Test/B02typeset.ztst: Explain the\n\tbreadcrumb by adding a comment.\n\n2015-11-27  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Test/V10private.ztst: %cleanup block is not called when\n\t%prep sets ZTST_unimplemented, so avoid leaving a mess\n\n\t* 37243: Test/B02typeset.ztst, Test/V10private.ztst: too many\n\tproblems with inserting a line into B02, instead add a placeholder\n\tand substitute for it.\n\n2015-11-27  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* unposted: Functions/Misc/zcalc: ZCALCPROMPT created globally.\n\n2015-11-27  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 37214: Functions/Prompts/prompt_walters_setup: 'prompt\n\twalters': Don't export PS1\n\n\t* 37163: Completion/Unix/Command/_curl,\n\tCompletion/Unix/Type/_urls: Remove curl completion\n\n\t* 37215: Completion/Base/Utility/_regex_words: _regex_words:\n\tDon't add mismatched parentheses\n\n2015-11-26  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 37229: Src/Modules/param_private.c, Test/V10private.ztst: non-\n\tlocal assignment to a parameter name whose outermost declaration\n\tis private, is an error rather than a silent no-op.  Fix %prep\n\tfrom 37225 for Solaris.\n\n\t* unposted (cf. 37226): Test/B02typeset.ztst: export == typeset -xg\n\n\t* 37225: Test/V10private.ztst: fix test from 37208\n\n\t* 37224: Test/B02typeset.ztst: delete obsolete comment\n\n2015-11-26  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Matthew Martin: 37100: Completion/Unix/Command/_sysctl:\n\tupdates.\n\n2015-11-25  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: Config/version.mk: 5.1.1-test-2\n\n2015-11-23  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 37208: Src/params.c: check for restricted parameter before\n\tchanging from unset to set; return NULL from setnparam() on\n\tfailure to retrieve value (avoids null-pointer dereference);\n\tadd some expository comments\n\n\t* 37208: Test/V10parameter.ztst: re-run the \"typeset\" tests with\n\tthe private module loaded\n\n\t* 37208: Src/Modules/param_private.c: assignment in a nested scope\n\tshould not change private parameters in the outer scope from unset\n\tto set; bug remains that the attempt does not generate a warning\n\n\t* 37206: Src/subst.c: fix ${(t)param} for \"typeset -H param\"\n\n\t* 37205: Test/B01cd.ztst: update documentary comment\n\n2015-11-23  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 37203: Src/params.c: WARN_CREATE_GLOBAL test in wrong place\n\tfor associative array.\n\n2015-11-22  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* Matthew Martin: 37201: Completion/Unix/Type/_groups: change\n\tquoting to handle group names with spaces\n\n2015-11-22  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 37192: Functions/Prompts/prompt_adam1_setup,\n\tFunctions/Prompts/prompt_adam2_setup,\n\tFunctions/Prompts/prompt_bart_setup,\n\tFunctions/Prompts/prompt_clint_setup,\n\tFunctions/Prompts/prompt_oliver_setup,\n\tFunctions/Prompts/prompt_special_chars,\n\tFunctions/Prompts/promptinit: silence WARN_CREATE_GLOBAL\n\n2015-11-22  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 37191: Src/utils.c: some locales prduce valid empty output for\n\tstrtfime escapes %p and %P.\n\n\t* 37188: Test/B09hash.ztst: new test.\n\n\t* 37187: Src/builtin.c: infinite loop in \"hash -m\".\n\n\t* 37186: Functions/VCS_Info/VCS_INFO_nvcsformats,\n\tSrc/Zle/zle_main.c: a couple of WARN_CREATE_GLOBAL fixes.\n\n2015-11-21  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 37181: Test/C02cond.ztst, Test/D07multibyte.ztst,\n\tTest/V01zmodload.ztst, Test/V02zregexparse.ztst,\n\tTest/V03mathfunc.ztst, Test/V04features.ztst, Test/V05styles.ztst,\n\tTest/V09datetime.ztst, Test/V10private.ztst, Test/X02zlevi.ztst,\n\tTest/Y01completion.ztst, Test/Y02compmatch.ztst,\n\tTest/Y03arguments.ztst, Test/comptest, Test/ztst.zsh: consistent\n\tuse of zmodload and corresponding ZTST_unimplemented or ZTST_skip\n\n2015-11-21  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: Config/version.mk, Etc/FAQ.yo, README: make\n\t5.1.1-test-1 in preparation for 5.2.\n\n2015-11-20  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Doc/Zsh/mod_paramter.yo: document order of entries\n\tfor $history and $historywords\n\n2015-11-20  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 37161: Src/init.c: Disable the heuristic setting RPROMPT_INDENT\n\tto 0\n\n2015-11-20  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 37170: Functions/Zle/smart-insert-last-word: suppress\n\tWARN_CREATE_GLOBAL for intentional creation of global variables.\n\n\t* 37168: Src/params.c: no WARN_CREATE_GLOBAL on special parameters.\n\n\t* users/20974: Src/builtin.c, Test/D04parameter.ztst: fix bug\n\twhen scalar value assigned to special array in typeset.\n\n2015-11-20  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 37164: Completion/Unix/Command/_tmux: _tmux: Complete external\n\tcommands\n\n\t* 37149: Completion/Unix/Command/_git: _git: Complete\n\t'bisect/bad' ref\n\n2015-11-19  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 37159: NEWS, README: update for next version.\n\n\t* unposted: Doc/Zsh/params.yo: describe separators between\n\tvalues in array assignment.\n\n2015-11-18  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 37145: Src/lex.c: suppress alias expansion in skipcomm() to\n\tdefer parsing aliases in $(...) et al. into the subshell\n\n2015-11-18  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 37140: Doc/Zsh/expn.yo: note that <<(...) is < <(...).\n\n2015-11-17  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 37129: Completion/Unix/Command/_git: _git: Complete 'commit -p'\n\n2015-11-17  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 37128: Src/lex.c, Test/D06subscript.ztst: work around alias\n\texpansion trashing subcript being parsed.\n\n\t* 37127 (minor tweak): Doc/Zsh/params.yo: document indexing of\n\t$signals.\n\n2015-11-16  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* Eric Cook: 36986: Functions/Misc/zed: Add -- to the `functions'\n\tbuiltin calls\n\n\t* Eric Cook: 37050: Completion/BSD/Command/_sockstat: minor improvements\n\n2015-11-15  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 37119: Doc/Zsh/expn.yo: further \"Rules\" clarifications\n\n2015-11-14  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 37115: Completion/Unix/Commmand/_git, Doc/Zsh/expn.yo: update\n\tfor changes in ${(P)...} evaluation.\n\n2015-11-13  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Src/Zle/zle_tricky.c: Make $EDITOR's\n\tjump-to-matching-brace happy.\n\n\t* 37031: Completion/Unix/Command/_git: _git-merge: Exclude\n\tancestors of HEAD from recent commit completion\n\n\t* 37025: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info git: Add a cherry-pick patch-format\n\n2015-11-13  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 37090: Doc/zman.yo, Doc/ztexi.yo: handle blank lines correctly\n\tin yodl macro example()\n\n\t* unposted: Doc/Zsh/builtins.yo, Doc/Zsh/contrib.yo,\n\tDoc/Zsh/func.yo, Doc/Zsh/grammar.yo, Doc/Zsh/mod_pcre.yo,\n\tDoc/Zsh/params.yo, Doc/Zsh/zle.yo: cosmetic format fix\n\n2015-11-12  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 37096: Src/subst.c, Test/D04parameter.ztst: make top-level\n\t${(P)...} with nested ${(P)...} do the right thing.\n\n\t* 37094: Src/subst.c, Test/D04parameter.ztst: Further tweaks to\n\tparameter name references: array safety; nested parameters; tests.\n\n2015-11-11  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 37092: Doc/Zsh/expn.yo, Src/Zle/compctl.c,\n\tSrc/Zle/zle_tricky.c, Src/cond.c, Src/exec.c, Src/glob.c,\n\tSrc/subst.c, Src/zsh.h: make a ${(P)name} subexpression properly\n\trefer to a parameter name.\n\n\t* 37091: Src/Zle/zle_utils.c: clear lastline and lastlinesz when\n\tfreeing.\n\n2015-11-10  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 37084: Test/V10private.ztst: add check for zsh/param/private\n\timplementation to test.\n\n2015-11-09  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 37085: Doc/Zsh/options.yo: DEBUG_BEFORE_CMD is set by default.\n\tAlso fix entries in the option index.\n\n2015-11-09  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted (cf. Jun T.: 37083): Doc/Zsh/mod_private.yo: proofreading\n\n2015-11-08  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 37081: Doc/Makefile.in, Doc/Zsh/mod_private.yo,\n\tSrc/Modules/param_private.c, Src/Modules/param_private.mdd,\n\tTest/V10private.ztst: new module zsh/param/private for\n\tprivate-scoped parameters in functions\n\n\t* 37080: Src/builtin.c, Src/params.c: use paramtab abstraction more\n\tconsistently, add explanatory comments\n\n\t* 37079: Etc/zsh-development-guide: better description of \"optstr\"\n\tfield in struct builtin as used in BUILTIN() macro\n\n2015-11-07  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 37074: Src/subst.c, Test/D04parameter.ztst: extend previous\n\tfix to cover whitespace at end of substitution.\n\n2015-11-06  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 37073: Src/subst.c, Test/D04parameter.ztst: fix case of\n\tSH_WORD_SPLIT with string before parameter substitution and\n\tnested string that starts with a space e.g. x${:- y}.\n\n2015-11-04  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 37062: Completion/Unix/Command/_git: allow verbose\n\tdescriptions of commits and branches using git log.  Mechanism\n\tfor turning this on subject to change.\n\n2015-11-02  Daniel Hahler  <zsh@thequod.de>\n\n\t* 35303: Completion/Unix/Command/_systemd: remove it in favour of the\n\tone from upstream.\n\n2015-11-01  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 37038: Doc/Zsh/builtins.yo, Src/builtin.c, Src/options.c: add\n\t-l option to emulate.\n\n2015-10-31  Oliver Kiddle  <opk@zsh.org>\n\n\t* 37029: Completion/Unix/Command/_date,\n\tCompletion/Unix/Command/_sed, Completion/Unix/Command/_tail,\n\tCompletion/Unix/Command/_tr: update options and new tr completion\n\n\t* 37028: Completion/Redhat/Command/_scl: new completion\n\n\t* 36993: Eric Cook: Functions/Misc/zed: fix argument parsing\n\n2015-10-31  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted (cf. 36998,36999): Src/mem.c: undo 36956 / restore 34451\n\twith expanded comment about the flip-flopping\n\n2015-10-31  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 37032: Completion/Unix/Command/_git: Temporarily revert 36959.\n\n2015-10-30  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted (after 37018): Src/params.c, Test/E01options.ztst: Fix\n\ttypo in error message.\n\n2015-10-30  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 37027: Doc/Zsh/contrib.yo, Functions/Zle/match-word-context:\n\tadd editing word context to allow detecting being between words.\n\n\t* 37022: Doc/Zsh/expn.yo, Doc/Zsh/options.yo, Src/glob.c,\n\tSrc/options.c, Src/zsh.h: add GLOB_STAR_SHORT option to\n\tallow shorthand ** for **/* and *** for ***/*.\n\n2015-10-29  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 37018: Src/math.c, Src/params.c, Test/E01options.ztst: make\n\tWARNCREATEGLOBAL consistent in all cases, outputting file name.\n\n\t* unposted: .gitignore: ignore .orig files.\n\n\t* 37014: Functions/MIME/zsh-mime-setup,\n\tFunctions/Misc/add-zsh-hook, Src/Modules/socket.c,\n\tSrc/Modules/tcp.c, Src/Modules/zpty.c, Src/builtin.c,\n\tSrc/params.c,Src/zsh.h: improved internal parameter setting.\n\tEnhance WARNCREATEGLOBAL to work in many more cases.  Don't\n\tcreate REPLY as an integer if it didn't previously exist as one,\n\teven if the value to be set is integral, as this is likely to\n\tmess up later uses of REPLY.\n\n2015-10-29  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 36983 (with fix from 36990): Completion/Unix/Command/_head,\n\tCompletion/Unix/Command/_tail: new completions for head and tail\n\n2015-10-27  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 36994: Functions/Zle/bracketed-paste-magic: declare local REPLY\n\tfor use with \"zle .read-command\"; use .self-insert instead of\n\t.self-insert-unmeta\n\n2015-10-27  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 36982: Doc/Zsh/expn.yo, Src/pattern.c, Test/D02glob.ztst,\n\tTest/D04parameter.ztst: fix actual bug with (#cN) and back off\n\tprevious change.\n\n\t* 36977: Doc/Zsh/expn.yo: note about complications of pattern\n\trepetitions (#cN).\n\n\t* 36974: Src/Modules/zftp.c, Src/Zle/complist.c,\n\tSrc/Zle/computil.c, Src/Zle/zle_thingy.c, Src/parse.c: fix empty\n\targument lists.\n\n2015-10-26  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 36906: Kamil Dudka <kdudka@redhat.com>: Src/mem.c:\n\tqueue_signals() in ZSH_MEM realloc()\n\n\t* 36968: Src/Modules/db_gdbm.c: use addmodulefd() to tell the\n\tshell about the descriptor of the dbm file\n\n\t* 36956: Src/mem.c: revert 34451, mmap() is too slow on MacOS\n\n2015-10-26  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* users/20825: Src/Zle/zle_utils.c: get_undo_current_change()\n\tneeds same protection as mkundoent() for execution within\n\tcompletion.\n\n2015-10-25  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 36962: Completion/Unix/Command/_git: _git: Fix completion of\n\tRHS of refspecs.\n\n\t* 36964: Completion/Unix/Command/_git: _git: Complete remotes\n\tbranch names with slashes correctly.\n\n\t* 36960: Completion/Unix/Command/_git: _git: Enable slash matcher\n\tfor more branch and tag completions, include 'git branch <TAB>'\n\tand 'git tag <TAB>'.\n\n\t* 36959: Completion/Unix/Command/_git: _git: Offer @~$n as\n\tcompletion of recent commits.\n\n\t* 36958: Completion/Unix/Command/_git: _git: Fix recent commit\n\tcompletion descriptions.\n\n\t* unposted: Completion/Unix/Command/_git: _git: Fix 'commit\n\tobject name' completion messages.\n\n2015-10-25  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 36911: Src/Zle/computil.c: '-optarg' should not match\n\toptspec '-opt='\n\n2015-10-24  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 36943 (with updated comment): Src/mem.c: restore scan for\n\treclaimable blocks in freeheap() [had been removed by 36834]\n\n2015-10-24  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Completion/Unix/Command/_beep: _beep completion:\n\tActually hook it for the 'beep' command.\n\n\t* 36913 + 36945: Functions/VCS_Info/VCS_INFO_quilt: vcs_info quilt:\n\tPass patch subject lines to gen-applied-string\n\n\t* 36912: Functions/VCS_Info/VCS_INFO_quilt: vcs_info quilt:\n\tTolerate being in child of .pc's parent\n\n2015-10-24  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: Src/utils.c: small typo.\n\n\t* 36944: Src/utils.c, Src/Modules/tcp.c, Src/Modules/socket.c:\n\textend the previous to zsocket, although this needs to allow the\n\tfd to be closed explicitly.\n\n\t* 36941: Src/utils.c, Src/zsh.h, Src/Modules/tcp.c: ensure shell\n\tknows about file descriptiors used by ztcp and allow such file\n\tdescriptors to be marked as internal if needed (not yet used).\n\n2015-10-22  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Doc/Zsh/contrib.yo: vcs_info docs: Typo fix.\n\n2015-10-21  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Src/math.c: strdup should be ztrdup\n\n\t* 36909: Src/hist.c: in getargs(), sanity-check the offsets for\n\tstart and end of the requested words, in case of overflow\n\n\t* 36871: Functions/Zle/bracketed-paste-magic: move initial call\n\tto \"zle .bracketed-paste-magic\" to occur earlier in the function\n\n2015-10-20  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 36900: Completion/Unix/Command/_git: _git: stash names\n\tcompletion: Display log messages\n\n2015-10-19  Oliver Kiddle  <opk@zsh.org>\n\n\t* 36642: Eric Cook: Completion/Unix/Command/_zfs:\n\tcomplete jail/unjail subcommands on freebsd\n\n\t* 36646: Eric Cook: Completion/Unix/Type/_zfs_dataset,\n\tCompletion/Unix/Command/_zpool, Completion/Unix/Command/_zfs:\n\tsolaris/openzfs differences; only use -t share solaris\n\n\t* 36889: Eric Cook: Completion/BSD/Command/_sockstat:\n\tcompletion of system specific sockstat options\n\n\t* 36869: Matthew Martin: Completion/Unix/Command/_ssh: use\n\tpermissions to limit files completed for ssh identity files\n\n2015-10-18  Frank Terbeck  <ft@bewatermyfriend.org>\n\n\t* 36888: Functions/VCS_Info/vcs_info: vcs_info: Prevent\n\twarn_create_global warning with '-preinit-' state\n\n2015-10-15  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 36864: Completion/Unix/Command/_nm,\n\tCompletion/Unix/Command/_objdump: new objdump completion plus\n\ttweak to _nm.\n\n2015-10-14  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 36853: Src/exec.c: replace pushheap/popheap by NEWHEAPS/OLDHEAPS\n\tin doshfunc() to optimize memory management\n\n2015-10-14  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 36856: Doc/Zsh/contrib.yo, Functions/Chpwd/cdr: add -p and -P\n\toptions to cdr for pruning the directory list.\n\n2015-10-11  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 36841: Completion/Base/Widget/_complete_help: factor out and\n\tupdate the patterns that filter \"uninteresting\" functions out\n\tof the $funcstack list when generating the call trace to show\n\twhere a tag is active.\n\n\t* 36836: Src/mem.c: zhalloc() avoids re-scanning all heaps when\n\tthe last known heap with free space does not have enough space\n\n\t* 36834: Src/mem.c: freeheap() preserves last allocated heap\n\n2015-10-11  Frank Terbeck  <ft@bewatermyfriend.org>\n\n\t* 36830: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info: Silence an error message with new git versions\n\n\t* 36832: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info: Remove dependency on \"seq\"\n\n2015-10-06  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 36780: Src/params.c: ensure HOME parameter is unset if\n\tcorresponding internal variable is null.\n\n2015-10-04  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 36773: Src/utils.c: limit CORRECT / CORRECT_ALL to directory\n\tnames in cases where it is obvious that a directory is expected\n\n2015-10-03  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted (cf. 36696): Test/C03traps.ztst: test case for 36766\n\n\t* unposted: Src/exec.c, Src/loop.c: back out 36707, fixed by 36766\n\n\t* 36766: Src/exec.c: fix incorrect reset of noerrexit during\n\t\"if\" conditions\n\n2015-10-03  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 36760: Src/pattern.c: ensure we don't do anything untoward\n\twith an already metafied pattern trial match.\n\n2015-10-03  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 36754: Functions/TCP/tcp_open, Functions/TCP/tcp_read,\n\tFunctions/TCP/tcp_send, Functions/TCP/tcp_shoot: Tweak some\n\tusage output in the tcp_* functions\n\n2015-10-02  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 36732: Completion/Unix/Command/_zsh: support -s and -b,\n\tand complete script arguments\n\n2015-10-01  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 36737: Src/pattern.c: Ensure we are not dereferencing\n\tzero-length unterminated string.\n\n\t* 36735: Doc/Zsh/contrib.yo, Functions/Misc/zcalc: ~/.zcalcrc.\n\n\t* Andrew Janke: 36729: MACHINES, NEWS, README: fix some typos.\n\n\t* 36722: Completion/Unix/Command/_git: allow range to complete\n\tafter ^, taking acoount of backslash quoting.\n\n2015-10-01  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 36709: Doc/Zsh/zle.yo, Functions/Zle/bracketed-paste-url-magic,\n\tSrc/Zle/zle_main.c, Src/Zle/zle_params.c, Src/Zle/zle_thingy.c:\n\tzle -f from inside widget to set flags and make yank start/end\n\tzle params writable.\n\n\t* 36692: Functions/Zle/bracketed-paste-url-magic: simpler\n\talternative for handling pasted urls\n\n2015-09-30  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* users/20672: Src/text.c: missing \"do\" in gettext2() for \"select\"\n\n\t* 36707: Src/exec.c, Src/loop.c: distinguish ERR_RETURN value\n\tof retflag so that execif() can ignore it in the test sublist\n\n\t* cf. 36690: Doc/Zsh/builtins.yo: remove sentence fragment\n\n2015-09-30  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 36725: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info git: Compute %b correctly when \"git am\"-ing onto\n\tdetached heads.\n\n\t* 36725: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info git: Compute %b correctly when rebasing detached heads.\n\n\t* 36725: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info git: Compute %b correctly when merging to detached\n\theads.\n\n2015-09-30  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 36697: Completion/Base/Utility/_arguments: handle options\n\tof _arguments correctly\n\n2015-09-30  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Matthew Martin: 36693: Doc/Zsh/arith.yo: arithmetic rounds\n\ttowards zero.\n\n\t* 36711: Src/glob.c, Src/pattern.c: Memory for early unmetafied\n\tpattern trial string is on the heap.\n\n2015-09-28  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 36682: Src/glob.c, Src/pattern.c, Src/zsh.h,\n\tSrc/Zle/complist,c, Src/Zle/zle_hist.c: expand pattern interface\n\tto allow unmetafying trial string once for reuse.\n\n2015-09-28  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Test/D04parameter.ztst: Test for 36669\n\n2015-09-28  Daniel Hahler  <git@thequod.de>\n\n\t* 36601: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info: handle missing .git/rebase-apply/{next,msg-clean}\n\n2015-09-28  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 36669: Src/lex.c: fix ${(z)...} of an incomplete math\n\texpression by restoring \"((\" at the front of the token\n\n2015-09-28  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Etc/zsh-development-guide: Update link to my\n\tChangeLog generator script, on account of patching it to handle\n\tcommas properly (thanks Mikael).\n\n2015-09-28  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* unposted: Completion/Zsh/Context/_brace_parameter,\n\tCompletion/Zsh/Type/_delimiters, Completion/Zsh/Type/_globquals,\n\tFunctions/Calendar/age: Fix broken case condition and \"qualifer\"\n\ttypo\n\n2015-09-27  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 36651: Doc/Zsh/options.yo, Src/exec.c, Src/math.c,\n\tTest/E01options.ztst: WARN_CREATE_GLOBAL += math expressions\n\n\t* Matthew Martin: 36653: Completion/Unix/Command/_user_admin:\n\tOpenBSD's usermod has no -a flag\n\n2015-09-27  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 36663: Src/mkmakemod.sh, Src/zsh.mdd: replace obsolete\n\t\"autobins\" commentary with \"autofeatures\"\n\n\t* 36661: Src/Modules/curses.mdd: replace obsolete \"autobins\"\n\tsetting with \"autofeatures\"\n\n2015-09-28  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 36631: Completion/Unix/Command/_sh,\n\tCompletion/Unix/Command/_zsh: separate _zsh from _sh\n\n2015-09-26  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 36641: Src/Modules/complist.c: fix multibyte handling in\n\tincremental search during menu selection\n\n2015-09-26  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted (see 36633): Completion/Unix/Command/_hg: _hg:\n\tEnable --option=value syntax and disable '-xy Xarg Yarg' syntax\n\n2015-09-25  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Src/Zle/zle_tricky.c Src/Zle/zle_utils.c: zle:\n\tDocument the C helper function processcmd().\n\n2015-09-25  Christoph Mathys  <eraserix@gmail.com>\n\n\t* 36626: Completion/Unix/Command/_hg: _hg: completion for\n\t'hg bookmarks'\n\n2015-09-25  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 36630: Doc/Zsh/contrib.yo, Doc/Zsh/manual.yo,\n\tFunctions/Chpwd/zsh_directory_name_generic: new helper function.\n\n2015-09-24  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 36623: Doc/Zsh/contrib.yo: document bracketed-paste-magic and\n\turl-quote-magic; add cross-reference to vim text object widgets\n\n2015-09-24  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 36603: Src/glob.c: fix dirfd leak during Y shortcut qualifier\n\n2015-09-24  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Completion/Unix/Command/_hg: Declare $expl as an array\n\n2015-09-24  Christoph Mathys  <eraserix@gmail.com>\n\n\t* 36613: Completion/Unix/Command/_hg: extend completion for hg\n\tpush to support branch and bookmark\n\n2015-09-23  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 36604: Functions/Misc/zrecompile: fix getopts+shift calculation\n\n2015-09-23  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Src/Zle/compmatch.c: Followup to 36586: Change C99\n\tcomment syntax to the C89 syntax.\n\n2015-09-23  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* Eric Cook: 36571: Completion/Linux/Command/_losetup,\n\tCompletion/Zsh/Command/_zsocket: Completion for zsocket and\n\tupdated losetup's completion\n\n2015-09-22  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 36587: Functions/Zle/edit-command-line: use +LINE:COLUMN to\n\tplace the cursor when invoking emacs variants, for emacsclient\n\n2015-09-22  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 36586: Han Pingtian: Src/Zle/compmatch.c: tweak to completion\n\tmatching with right anchor.\n\n\t* 36545: Han Pingtian: Doc/Zsh/compwid.yo: tweak doc for match\n\tanchors e and E.\n\n\t* 36538: Han Pingtian: Doc/Zsh/compwid.yo: tweak doc for match\n\tanchors to get correct difference between b and B.\n\n2015-09-22  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 36578: Doc/Zsh/compsys.yo: option in a mutually exclusive set\n\thas key \"set-opt\" in $opt_args\n\n2015-09-21  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 36580: Src/Zle/compmatch.c: don't copy empty buffer and check\n\tsize is consistent.\n\n2015-09-21  Frank Terbeck  <ft@bewatermyfriend.org>\n\n\t* 36575: Completion/Unix/Command/_tmux: _tmux: 'lock-server'\n\toption is gone in tmux.git\n\n\t* 36576: Completion/Unix/Command/_tmux: _tmux: Fix tmux homepage\n\tURI\n\n2015-09-21  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 36574: Completion/Unix/Command/_lldb: new completion for\n\tthe lldb debugger\n\n\t* 36556: Completion/Unix/Command/_sh: remove unnecessary\n\thelpspec to '_argument --'\n\n2015-09-21  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 36577: configure.ac, Src/zsh.h: supplement 36559 to\n\tuse LONG_MAX for 64-bit long.\n\n\t* unposted: Src/zsh.h: typo in 36559.\n\n2015-09-19  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Doc/Zsh/builtins.yo: zcompile prepares scripts for\n\tsourcing, not for execution\n\n\t* 36566: Src/parse.c: check for regular file before lseek()\n\n\t* 36562: Src/utils.c: sanitize $PWD on import, per POSIX\n\n2015-09-19  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 36559: Src/pattern.c: test earlier for overflow in pattern\n\trange.\n\n\t* unposted: Test/D07multibyte.ztst: fix typo.\n\n2015-09-18  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted (cf. users/20586): Doc/Zsh/builtins.yo: clean up\n\tcross-references to the \"Autoloading Functions\" section.\n\n2015-09-17  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Test/D04parameter.ztst: test for 36552\n\n\t* 36552: Src/utils.c: fix Nularg string in quotestring(QT_DOLLARS)\n\n2015-09-14  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Doc/Zsh/zle.yo README: docs: Typo fixes\n\n2015-09-13  Axel Beckert  <abe@deuxchevaux.org>\n\n\t* 36523: Thue Janus Kristensen: Completion/Unix/Command/_gphoto2:\n\tReplace --delete-files with --delete-file.\n\n2015-09-12  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 36525: Src/Zle/zle_misc.c: revert only the selfinsert() bit of\n\t36496 because selfinsert() may be called with incomplete wide\n\tcharacter processing from places other than getkeymapcmd()\n\n\t* unposted: Functions/Zle/bracketed-paste-magic: revert 36483 as\n\tmultibyte is now handled by \"zle .read-command\"; adapt to new\n\tdefault behavior of zle_highlight for paste\n\n\t* 36522: Src/Zle/zle_thingy.c: unmetafy the argument of \"zle -U\"\n\n\t* 36509: Src/Modules/curses.c: allocate hash table nodes with\n\tzshcalloc() to avoid garbage flag values\n\n2015-09-12  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 36491: Src/glob.c, Test/D07multibyte.ztst: Multibyte\n\tsupport for the parameter expansion flags B, E and N.\n\n2015-09-11  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 36443: Doc/Zsh/zle.yo Src/Zle/zle_refresh.c:\n\tHighlight pasted/yanked text as standout by default (i.e., when\n\t$zle_highlight doesn't specify otherwise).\n\n\t* 36443: Revert 35834.\n\n2015-09-11  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 36496 (plus tweak for key buffer length): Src/Zle/zle_hist.c,\n\tSrc/Zle/zle_keymap.c, Src/Zle/zle_main.c, Src/Zle/zle_misc.c,\n\tSrc/Zle/zle_vi.c: Read full multibyte string early for\n\tself-insert.\n\n\t* unposted: Config/version.mk: Update internal build to\n\t5.1.1-dev-0\n\n\t* unposted: Config/version.mk: 5.1.1\n\n\t*  Sebastian Gniazdowski: 36489: Src/Modules/curses.c: fix bug\n\twith hash table for colours.\n\n\t* 36483: Functions/Zle/bracketed-paste-magic: use\n\t[[:INCOMPLETE:]] to get rest of multibyte character.\n\n2015-09-11  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* unposted: NEWS, README: update for minor new features that\n\thave just appeared.\n\n2015-09-10  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 36445: Doc/Zsh/zle.yo Src/Zle/zle_params.c: Expose yankb,\n\tyanke, ZLE_YANK to widgets.\n\n2015-09-10  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 36478: Src/pattern.c, Src/zsh.h, Src/Zle/comp.h,\n\tDoc/Zsh/expn.yo, Test/D07multibyte.ztst: add [[:INCOMPLETE:]] and\n\t[[:INVALID:]] pattern tests.\n\n2015-09-10  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 36470: Src/Zle/zle_main.c: Auxiliary to 36468, return an empty\n\tbuffer from zleread() if a widget exits\n\n2015-09-10  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 36468: Src/hist.c: Infinite loop if we tried to exit from a\n\tZle widget but the lexer thought the current lexical expression\n\tneeded finishing.\n\n\t* 36460: Test/E01options.ztst: Discard benign error on failure\n\tto write to pipe with no one reading.\n\n2015-09-08  Oliver Kiddle  <opk@zsh.org>\n\n\t36422: Src/compat.c: add missing unmeta()\n\n2015-09-07  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 36437: Doc/Zsh/zle.yo Src/Zle/zle.h: Document interaction of\n\t$region_highlight and $zle_highlight.\n\n\t* unposted: Doc/Zsh/zle.yo: ZLE_STATE: fix obvious documentation\n\ttypo.\n\n2015-09-07  James Clarke  <jrtc27@jrtc27.com>\n\n\t* 36441: Completion/Unix/Command/_git: _git: Fixed typo in\n\t--author-date-order description\n\n2015-09-06  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: Config/versiom.mk, Etc/FAQ.yo, NEWS, README: make\n\t5.1-test-1 with updates for 5.1.1.\n\n2015-09-05  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Doc/Zsh/params.yo Doc/Zsh/zle.yo: Minor documentation\n\ttweaks.\n\n\t* 36410: Doc/Zsh/contrib.yo\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_git: vcs_info git:\n\tPresent merge heads as patches\n\n2015-09-04  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 36421: Src/pattern.c: can't-get-the-staff fix for idiocy in\n\t36415.\n\n2015-09-04  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 36417: Doc/Zsh/manual.yo: fix/update top level texinfo menu\n\n2015-09-04  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 36415: Src/pattern.c, Test/D07multibyte.ztst: remap bytes from\n\tinvalid multibyte characters to 0xDC00 + index which is invalid\n\tin Unicode.  Strictly this only works if whcar_t is\n\tISO-10646-compliant, however it ought to be at least as good as\n\tthe current fudge in any case.\n\n2015-09-03  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 36416: Src/Zle/zle_refresh.c, Src/Zle/zle_utils.c: If\n\tkeyboard interrupt during getzlequery(), don't propagate further,\n\tjust redraw the line.  Also handle logical error that we\n\tattempted to redraw the line partially if an error or interrupt\n\twas propagated.\n\n2015-09-03  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 36403: Src/hashtable.c Test/A02alias.ztst: type -w +=\n\tsuffix alias\n\n2015-09-02  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Test/A05execution.ztst: test for 36393\n\n\t* 36393: Src/signals.c: process queued signals during dotrap()\n\n2015-09-02  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 36378: Src/exec.c: skip directories when looking for autoload\n\tfiles.\n\n2015-09-02  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 36399: Src/text.c, Test/A04redirect.ztst: shell code with\n\tmultiple here documents wasn't shown properly.\n\n2015-09-01  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 36380: Src/utils.c: Avoid gcc case syntax\n\n\t* 36347: Src/params.c, Test/A06assign.ztst: Fix appending empty\n\tarray to associations\n\n2015-09-01  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 36376: Src/utils.c: handle signals during read1char() so it is\n\tpossible to interrupt correct/correctall prompts\n\n2015-09-01  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 36365: Src/Zle/zle_tricky.c: magic-space removed the rest of\n\tthe line if the lexer found something complicated.\n\n\t* unposted: Config/version.mk: update version to 5.1-dev-0 to\n\tavoid clash with 5.1 release.\n\n2015-09-01  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 36353: Completion/Unix/Command/_git: _git: Unbreak after\n\tprevious.\n\n2015-08-30  Mateusz Karbowy  <mateusz.karbowy@gmail.com>\n\n\t* 36328 + 36340: Completion/Unix/Command/_git: _git-cherry-pick:\n\tComplete other branches only\n\n2015-08-30  Axel Beckert  <abe@deuxchevaux.org>\n\n\t* 36338: Functions/Zle/*-magic: s/5.0.9/5.1/ in source comments\n\n2015-08-30  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: Config/version.mk: Release version 5.1\n\n2015-08-29  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 36321: Completion/Debian/Command/_debcheckout: _debcheckout:\n\tNew completion.\n\n2015-08-28  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 36306: Completion/Unix/Command/_subversion: _subversion:\n\tComplete --show-item values\n\n2015-08-28  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* users/20475: Doc/Zsh/contrib.yo: mention that cdr mechanism\n\tkeeps unique list with most recent use first.\n\n\t* users/20466: Test/V09datetime.ztst: make test for skipping\n\tstrftime extention tests one that is known to fail on\n\tSolaris.  Reason is not yet known, but there's no current\n\tevidence for a shell bug so replace the failure by skipping\n\ttest for the release.\n\n2015-08-28  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 36302: Src/Modules/attr.c: Fix compilation with libcap 2.24\n\n\t* 36314: Functions/Prompts/prompt_bart_setup: Avoid using\n\tshort_loops syntax in distributed files\n\n2015-08-27  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Completion/Unix/Command/_subversion: _subversion:\n\tAvoid SHORT_LOOPS\n\n\t* 36304: Completion/Unix/Command/_git: _git-cat-file: Fix\n\tregression in 36237\n\n2015-08-27  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted (cf. Axel Beckert 36292): Test/A05execution.ztst:\n\tdiscard even more extraneous stderr in \"hang\" test\n\n2015-08-26  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 36288: Src/Zle/zle_tricky.c: refine 36825, slightly different\n\ttest for redirect context\n\n\t* 36285: Src/Zle/zle_tricky.c: update 36025, context cannot be\n\tcommand and redirect at the same time, redirect wins\n\n\t* 36282: Test/A05execution.ztst: discard stderr of \"hang\" test\n\n2015-08-25  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: Config/version.mk: 5.0.8-test-3.\n\n2015-08-24  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 36277: Completion/Unix/Command/_git: _git: Updated for\n\tgit-clone 2.4.5.\n\n2015-08-24  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* unposted: Etc/FAQ.yo: replace 5.0.9 with 5.1.\n\n2015-08-23  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* users/20455: Src/Modules/zpty.c: do not use posix_openpt()\n\ton OpenBSD\n\n2015-08-22  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 36274: Src/Zle/zle_vi.c: clear virangeflag when getvirange()\n\thas an error (the next keystroke is not a motion/selection).\n\n\t* 36273: Src/Zle/zle_move.c: teach endofline() and endoflinehist()\n\tabout invicmdmode() cursor placement.\n\n2015-08-21  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: Config/version.mk, Src/parse.c, Src/Zle/zle_misc.c:\n\tupdate to 5.0.8-test-2 and fix some exports.\n\n2015-08-21  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 36266: Functions/Zle/bracketed-paste-magic: preserve emulation\n\tand setopt context for init and finish functions, handle vi modes\n\n\t* 36256: Src/builtin.c: local options should remain in effect\n\tfor \"emulate -L\" even if additional option settings are applied\n\n2015-08-21  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 36268: Test/C04funcdef.ztst: test for 36265.\n\n\t* 36265 plus FAQ: fix alias expansion after \"function\"\n\tNames after the first were treated as command words so had\n\tnon-global aliases expanded. Add an FAQ note that use of the\n\tfunction keyword works around other alias problems.  Also\n\tfixes problem that \"function { ... }\" didn't work with\n\tIGNORE_BRACES set.\n\n\t* 36264: Src/glob.c: pathbuf is apparently metafied; document\n\tthis and unmetafy for system calls.\n\n\t* unposted: README, Etc/FAQ.yo: update latest release from 5.0.8\n\tto 5.1 in descriptive text.\n\n\t* 36262: Src/builin.c, Src/compat.c, Src/utils.c,\n\tTest/D07multibyte.ztst: replace 36232: the unmeta()\n\twas needed at a place higher up.  Add test.\n\n\t* 36250, tweaked: README, NEWS: highlight bracketed paste mode;\n\tnext version will be 5.1 rather than 5.0.9.\n\n2015-08-20  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 36243: Completion/Unix/Type/_pids: fix a few problems of\n\t\"_pids -m pattern\"\n\n2015-08-19  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 36247: Completion/Unix/Command/_git: __git_objects: Complete\n\tHEAD:./foo correctly in worktree subdir\n\n\t* 36237: Completion/Unix/Command/_git: __git_objects: Complete\n\tHEAD:foo correctly in worktree subdir\n\n\t* 36236: Completion/Unix/Command/_git: _git-log: Complete\n\tmultiple revspecs\n\n\t* 36236: Completion/Unix/Command/_git: _git-log: complete\n\t'git rm'd files\n\n2015-08-19  Oliver Kiddle  <opk@zsh.org>\n\n\t* 36148: Completion/Unix/Command/_git: _git-log: Complete flags\n\tafter positional argument\n\n2015-08-19  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 36241: Test/V09datetime.ztst: Test for 36227.\n\n2015-08-19  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 36208: Completion/Unix/Command/_subversion: _subversion:\n\tComplete a few more option switches\n\n2015-08-18  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 36232: Src/compat.c: Unmeta an additional chdir().\n\n\t* 36227: Src/Builtins/sched.c, Src/Modules/datetime.c,\n\tSrc/Modules/stat.c, Src/builtin.c, Src/prompt.c, Src/utils.c,\n\tSrc/watch.c: real fix for metafication problem in ztrftime:\n\tunmetafy fmt on input and metafy return value with correct\n\tlength.\n\n\t* unposted: revert 36222, not the correct fix.\n\n\t* 36222: Src/Modules/datetime.c: unmetafy output from strftime.\n\n\t* 36218: Src/files.c: use unmetafied file name for mkdir()\n\tsystem call.\n\n\t* 36216: Doc/Zsh/zle.yo: Simpler saving of UNDO_LIMIT_NO.\n\n2015-08-17  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 36212: Functions/Zle/narrow-to-region: save and restore HISTNO\n\talong with other editor state, for sanity of \"zle undo\"\n\n2015-08-18  brian m. carlson  <sandals@crustytoothpaste.net>\n\n\t* 36209: Functions/VCS_Info/Backends/VCS_INFO_get_data_git:\n\tvcs_info: avoid grep error message when file is missing\n\n2015-08-17  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Completion/Linux/Command/_sshfs: _sshfs: Fix\n\tcompletion of options with values\n\n\t* 36158: Completion/Linux/Command/_sshfs: _sshfs: Fix completion\n\tof and after -o\n\n\t* 36109: Src/Zle/zle_misc.c: bracketed-paste: change quoting\n\tstyle\n\n\t* 36186: Etc/FAQ.yo: FAQ (3.24): Update for bracketed paste\n\n2015-08-17  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 36172: Completion/Unix/Command/_imagemagick: Use $formats a\n\tbit more correctly\n\n2015-08-17  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted (cf. 36200): Completion/Base/Completer/_expand: back out\n\tbackslash handling change from 34961.\n\n2015-08-17  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: Doc/Zsh/contrib.yo: use of $f in zmv.\n\n2015-08-17  Oliver Kiddle <opk@zsh.org>\n\n\t* 36165: Completion/Unix/Type/_files: simplify file-patterns\n\tdefault to a single pattern\n\n2015-08-17  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Functions/Zle/url-quote-magic: mention\n\tbracketed-paste-magic in comment\n\n2015-08-17  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 36177: Completion/Zsh/Command/_setopt: complete printexitvalue\n\tboth ways\n\n\t* 36183: Completion/Unix/Command/_ssh: update to 7.0\n\n2015-08-16  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 36195, 36196: Functions/Zle/bracketed-paste-magic: wrapper of\n\tbracketed-paste for compatibilty with url-quote-magic and other\n\tself-insert wrapper widgets\n\n2015-08-15  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 36180: Src/jobs.c: avoid infinite job stop/continue loop on\n\t\"wait PID\" for a background job\n\n2015-08-15  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* Eric Cook: 36091: Completion/Unix/Command/_ncftp: search\n\tXDG_DATA_HOME for bookmarks saved by lftp\n\n2015-08-14  Oliver Kiddle <opk@zsh.org>\n\n\t* 36146: Completion/Zsh/Type/_command_names,\n\tCompletion/Zsh/Command/_zmodload: avoid mix of -/ and -g with\n\t_files as that just overrides user preferences\n\n2015-08-13  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Completion/Unix/Command/_subversion: _subversion:\n\tComplete property names for propdel\n\n2015-08-13  Oliver Kiddle <opk@zsh.org>\n\n\t* 36131: Functions/Zle/narrow-to-region, Src/Zle/zle_utils.c:\n\tmake use of undo limits; call mkundoent() when $UNDO_CHANGE_NO is\n\treferenced for a clear change number marking the current state\n\n\t* Eric Cook: 36113: Completion/Unix/Type/_find_net_interfaces:\n\tip(8) may add suffixes which is not good for completion matches\n\n\t* Wieland Hoffmann: 36123: Completion/Unix/Command/_git:\n\tprotect against word splitting in __git_is_committish_range\n\n2015-08-12  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* Kamil Dudka: 36106: Src/Zle/zle_keymap.c: fix const parameter.\n\n2015-08-12  Oliver Kiddle <opk@zsh.org>\n\n\t* 36127: Completion/Zsh/Context/_brace_parameter,\n\tCompletion/Unix/Command/_git, Completion/Unix/Command/_ifconfig,\n\tCompletion/Unix/Command/_kvno, Completion/Unix/Command/_mh,\n\tCompletion/Unix/Command/_rm, Completion/Unix/Command/_ssh,\n\tCompletion/Unix/Command/_stty, Completion/Unix/Command/_vim,\n\tCompletion/Unix/Type/_pdf, Completion/Unix/Command/_clay:\n\tassorted minor completion function changes\n\n\t* 36125: Src/Zle/zle_hist.c: don't set history context in get-line\n\n\t* 35834 (tweaked): Src/Zle/zle_misc.c: strip a final newline from\n\tpasted text: inserting is hard to tell apart from accepting it\n\t[reverted in 36443]\n\n2015-08-12  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 36077: Functions/VCS_Info/Backends/VCS_INFO_get_data_bzr,\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_hg,\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_p4,\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_svk,\n\tFunctions/VCS_Info/Backends/VCS_INFO_get_data_svn,\n\tFunctions/VCS_Info/VCS_INFO_formats,\n\tFunctions/VCS_Info/VCS_INFO_hook,\n\tFunctions/VCS_Info/VCS_INFO_quilt,\n\tFunctions/VCS_Info/VCS_INFO_set, Functions/VCS_Info/vcs_info,\n\tFunctions/VCS_Info/vcs_info_lastmsg,\n\tFunctions/VCS_Info/vcs_info_printsys: vcs_info: stop exporting\n\teverything\n\n\t* 36078: Doc/Zsh/contrib.yo: vcs_info: Adjust documentation for\n\tno longer exporting\n\n\t* 36116: Completion/Unix/Command/_git: various fixes\n\n\t* 36117: Completion/Unix/Command/_wget: complete headers for\n\t--header and add --no-use-server-timestamps\n\n\t* 36120: Completion/Unix/Command/_sort: Fix syntax error\n\n\t* 36119: Completion/Zsh/Command/_strftime: Add completion for\n\tzsh/datetime's strftime builtin\n\n2015-08-11  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 36108: NEWS: list of major changes so far since 5.0.8\n\n\t* 36104: Src/exec.c, Src/jobs.c: change order of child_block()\n\tand dont_queue_signals() to resolve yet another race condition\n\n\t* 36092: Doc/Zsh/mod_zpty.yo, Src/Modules/zpty.c: return the pty\n\tmaster file descriptor in $REPLY for use with \"zle -F\" etc.\n\n\t* 36090: Src/init.c: keep signals queued for preprompt()\n\n2015-08-11  Oliver Kiddle <opk@zsh.org>\n\n\t* 36096: Src/Zle/zle_move.c: special . mark in vi mode\n\n\t* 36044: Doc/Zsh/zle.yo, Src/Zle/iwidgets.list, Src/Zle/zle_keymap.c,\n\tSrc/Zle/zle_move.c: deactivate-region widget for escape in visual mode\n\n\t* 35952: Jun-ichi Takimoto: Src/Zle/zle_bindings.c: bind escape in\n\tvi mode so it is a full key sequence and later keys aren't dropped\n\n2015-08-11  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 36067: Doc/Zsh/builtins.yo, Doc/Zsh/compsys.yo,\n\tDoc/Zsh/contrib.yo, Doc/Zsh/expn.yo: fix typo and format\n\n2015-08-10  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 36084: Src/glob.c, Src/text.c: use zrealloc() consistently\n\n\t* 36079: Src/signals.c: do not allow update_job() and its helpers\n\tto run the signal queue while we are processing a job exit.\n\n2015-08-10  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 36083: Src/builtin.c, Test/B02typeset.ztst: set array value\n\twhen consistently retying scalar and array.\n\n2015-08-10  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 36074: Src/signals.c: Don't rely on implicit value for\n\tsaving status of background process.\n\n2015-08-10  Frank Terbeck  <ft@bewatermyfriend.org>\n\n\t* 36046: Completion/Unix/Command/_tmux: _tmux: Update command line\n\toptions\n\n\t* 36048: Completion/Unix/Command/_tmux: _tmux: Update options for\n\tsupported commands\n\n\t* 36062: Completion/Unix/Command/_tmux: _tmux: Add support for new\n\tsub-commands\n\n\t* 36063: Completion/Unix/Command/_tmux: _tmux: Remove dead code\n\n\t* 36050: Completion/Unix/Command/_tmux: _tmux: Don't unset, set\n\tempty in local scope\n\n\t* 36058: Completion/Unix/Command/_tmux: _tmux: No need to unset\n\tlocal variables\n\n\t* 36057: Completion/Unix/Command/_tmux: _tmux: Replay all\n\targuments when dispatching to new _tmux()\n\n\t* 36054: Completion/Unix/Command/_tmux: _tmux: \"local -x\" serves\n\tno purpose\n\n\t* 36049: Completion/Unix/Command/_tmux: _tmux: options =>\n\tsession_options\n\n\t* 36056: Util/check-tmux-state: Add helper script to check state\n\tof _tmux completion\n\n\t* 36052: Completion/Unix/Command/_tmux: _tmux: Remove old\n\tsub-commands and their aliases\n\n\t* 36064: Completion/Unix/Command/_tmux: _tmux: Add new command\n\taliases\n\n\t* 36047: Completion/Unix/Command/_tmux: _tmux: Fix options with\n\tchanged scope\n\n\t* 36051: Completion/Unix/Command/_tmux: _tmux: Remove support for\n\told options\n\n\t* 36059: Completion/Unix/Command/_tmux: _tmux: Add new session\n\toptions\n\n\t* 36055: Completion/Unix/Command/_tmux: _tmux: Add support for new\n\tserver options\n\n\t* 36061: Completion/Unix/Command/_tmux: _tmux: Add support for new\n\twindow options\n\n\t* 36060: Completion/Unix/Command/_tmux: _tmux: Update TODO\n\n\t* 36070: Completion/Unix/Command/_tmux: _tmux: Update bell-action\n\tand prefix options\n\n\t* 36069: Completion/Unix/Command/_tmux: _tmux: Fix \\ooo display in\n\tcompletion list\n\n\t* 36075: Util/check-tmux-state: Disable \"local\" keyword in\n\tscript to make data retrieval work\n\n2015-08-10  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 36045: Test/A05execution.ztst: make effect of failures\n\tin wait test cleare.\n\n\t* not quite posted: Src/Modules/socket.c, Src/Modules/tcp.c:\n\tcheck for error return before testing for EINTR.\n\n\t* Joshua Krusell: 36039: Src/Modules/socket.c,\n\tSrc/Modules/tcp.c: Restart socket commands on EINTR.\n\n\t* 35885: Doc/Zsh/mod_system.zo: document how to close\n\tfd's opened with sysopen.\n\n2015-08-09  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 36033: Src/glob.c, Src/pattern.c: a few more queue_signals()\n\tto protect global state changes\n\n2015-08-09  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* unposted: Test/C03traps.ztst: add tests for outputting traps\n\tspecified with SIG prefix or numbers fixed by 36008.\n\n2015-08-09  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 26027: Src/builtin.c: fix retying variables in opposite\n\torder (should be an error).\n\n\t* 36025:Src/Zle/zle_tricky.c: Catch another case of context in\n\tget_comp_string():  after \"foo=bar; setopt \" we didn't recognise\n\t\"setopt\" as the command.  Attempt to do this without actually\n\tunderstanding what the command context code is attempting to do\n\tafter a command separator.\n\n2015-08-09  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 36026: Src/Modules/zftp.c: zero freed pointers in cleanup_()\n\tin case the module is re-loaded after unloading.\n\n\t* 36022: Src/loop.c: fix bug that some loop constructs could\n\tnot be interrupted if all they did was variable assignments or\n\tmath expressions\n\n\t* 36022: Src/exec.c, Src/init.c, Src/input.c, Src/parse.c,\n\tSrc/signals.c: revise signal queueing to better control the\n\tcircumtances in which trap handlers are executed\n\n2015-08-08  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 36008: Src/builtin.c: trap: Fix listing of traps created\n\tunder non-alias non-canonical signal spelling\n\n2015-08-08  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 35954: Doc/Zsh/mod_system.yo: sysopen -u is not optional\n\n2015-08-09  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 35929: Src/jobs.c: protect FDT_PROC_SUBST by #ifdef\n\n2015-08-08  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 35928: Src/utils.c, Doc/Zsh/prompt.yo: date/time format such\n\tas '%-m' should work even if strftime(3) doesn't support it.\n\tAlso clarify document.\n\n2015-08-05  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 35989: Completion/Unix/Command/_ssh: update to 6.9\n\n\t* unposted: Completion/Unix/Command/_ssh: use -q for the\n\toption suffix\n\n\t* Christian Hesse: 35991: Completion/Unix/Command/_ssh: add ssh\n\toption FingerprintHash\n\n2015-08-05  Oliver Kiddle <opk@zsh.org>\n\n\t* Eric Cook: 35973: Completion/BSD/Command/_systat,\n\tCompletion/Unix/Command/_vmstat: new completions\n\n\t* Eric Cook: 35972: Completion/Unix/Command/_ssh: allow for\n\tDirective=Value format in .ssh/config\n\n\t* Christian Hesse: 35986: Completion/Unix/Command/_ssh:\n\tadd ssh option UpdateHostKeys\n\n\t* unposted (c.f. 35902): Functions/Zle/incremental-complete-word:\n\tuse - after zle -U in case $key starts with -\n\n2015-08-04  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Src/builtin.c: Typo fix.\n\n2015-08-02  Daniel Hahler  <zsh@thequod.de>\n\n\t* 35970: Completion/Unix/Command/_git,\n\tCompletion/Zsh/Context/_brace_parameter: completion: fix typos in _git\n\tand _brace_parameter.\n\n2015-08-01  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* 35957: Completion/Unix/Command/_make: fix _make-expandVars(),\n\tand use variables set in the command line and environment.\n\n2015-07-31  Oliver Kiddle <opk@zsh.org>\n\n\t* 35963: Src/Modules/system.c: simplify condition found by\n\tcoverity scan to include tautology\n\n\t* Matthew Martin: 35960 (tweaked): Completion/Unix/Command/_find:\n\tcomplete correct options for OpenBSD's find\n\n2015-07-29  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 35953: Src/lex.c, Test/A01grammar.ztst: fix handling of command\n\tsubstitution in math context, particularly in \"for ((...))\"\n\n2015-07-28  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 35947: Etc/zsh-development-guide: update discussion of module\n\twrappers, some examples\n\n2015-07-27  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 35937: Functions/Misc/zargs: wait for process IDs instead of\n\tjob numbers in parallel mode, in case zargs is in a pipeline\n\n2015-07-26  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 35274 (plus tweaks): Completion/BSD/Command/_watch-snoop\n\tCompletion/Unix/Command/_watch: completion: Add FreeBSD's\n\twatch(1)\n\n2015-07-26  Oliver Kiddle <opk@zsh.org>\n\n\t* 35901: Completion/X/Type/_x_font: complete full names as removing\n\tlater components was broken for aliases and unwanted in any case\n\n2015-07-26  Jun-ichi Takimoto <takimoto-j@kba.biglobe.ne.jp>\n\n\t* Antony Lee: 35899: Completion/Unix/Type/_python_modules:\n\tfaster method of generating list of python modules\n\n2015-07-25  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Functions/Prompts/prompt_bart_setup: add RPS2 handling,\n\tupdate help text, clean up indentation whitespace\n\n2015-07-25  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 35910: Src/input.c: Don't add to raw lex buffer if lex\n\tstopped.  Fixes crash on completion of incomplete\n\tmath expresion e.g. '$((3*4)'.\n\n\t* 35909: Src/utils.c: fix $((...) completion in _expand by\n\tnormalising quoting of the math expression containing tokens.\n\n\t* 35908: Src/ZLe/zle_tricky.c: fix $((...)) completion\n\tby expand-or-complete widget.\n\n2015-07-24  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 35896: Doc/Zsh/params.yo, Doc/Zsh/zle.yo: index zle_highlight\n\n\t* 35882: Src/Zle/iwidgets.list: read-command has ZLE_NOTCOMMAND\n\n2015-07-24  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 35810: Etc/FAQ.yo: FAQ += edit-command-line\n\n\t* 35809: Util/zyodl.vim: zyodl.vim: Fix nested parentheses\n\n\t* 35807: Functions/Zle/edit-command-line: edit-command-line:\n\tFix for non-7bit-data (after 35769)\n\n2015-07-24  Oliver Kiddle <opk@zsh.org>\n\n\t* 35865: Doc/Zsh/prompt.yo: document %^ prompt expansion\n\n\t* 35864: Doc/Zsh/mod_system.yo, Src/Modules/system.c,\n\tSrc/Modules/system.mdd: add sysopen, sysseek and systell to\n\tsystem module\n\n\t* 35879: Eric Cook: Completion/Linux/Command/_btrfs: fix for\n\tsubcommands that don't have a second subcommand\n\n2015-07-24  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 35883: Src/hist.c: Don't attempt to back up over history if\n\texpanding alias.\n\n2015-07-23  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 35873: Test/D03procsubst.ztst: add original test from 35847:\n\n\t* 35872: Src/utils.c: protect against NULL pointers in unmeta().\n\n\t* 35849: Src/exec.c, Src/jobs.c, Test/D03procsubst.ztst: close\n\tfile descriptors from process substitution in parent after\n\tfork.\n\n\t* 35854: Stc/hist.c: ensure character unget doesn't cause\n\tinfinite recursion.\n\n\t* 35793: Src/zsh.h: avoid undefined behaviour shifting signed\n\tnumber.\n\n2015-07-23  Oliver Kiddle <opk@zsh.org>\n\n\t* 35753: Completion/Zsh/Type/_ps1234: allow for numbers after\n\tthe ( in ternary expressions and fix backslash quoting\n\n\t* 35867: Completion/Unix/Command/_patchutils: new completion\n\n\t* 35866: Completion/Unix/Command/_gzip: complete also for pigz\n\n\t* 35866: Completion/Unix/Command/_zcat: allow for NetBSD gzip\n\n\t* 35824: Doc/Zsh/zle.yo, Src/Zle/iwidgets.list, Src/Zle/zle.h,\n\tSrc/Zle/zle_misc.c, Src/Zle/zle_refresh.c: allow highlighting of\n\tjust pasted text, put text from bracketed paste in cut buffers\n\n\t* 35815: Functions/Misc/nslookup: fix for newer nslookup\n\n\t* 35814: Src/Zle/zle_main.c: POSTEDIT needs to be unmetafied\n\n2015-07-22  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 35839: Joshua Krusell <js.shirin@gmail.com>:\n\tSrc/Modules/socket.c, Src/Modules/tcp.c: fix select polling in\n\tztcp and zsocket\n\n\t* unposted: Completion/Zsh/Type/_directory_stack: move some more\n\trecent code so an old comment is connected to the correct bit of\n\tolder code\n\n\t* users/20324: Completion/Zsh/Type/_directory_stack: add (D) flag\n\tfor tilde-fied completion listing\n\n\t* 35826: Src/Modules/newuser.c, Src/Modules/zftp.c,\n\tSrc/Zle/complist.c, Src/Zle/zle_misc.c, Src/init.c, Src/params.c,\n\tSrc/utils.c, Src/watch.c: add getsparam_u() to return unmetafied\n\tstring, use it for a number of references to non-special params\n\n\t* 35823: Functions/Zle/narrow-to-region: fix handling of MARK\n\tand CURSOR, clean up documentary comment\n\n2015-07-22  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Test/B02typeset.ztst: fix another test for 35581\n\n\t* 35582: Test/A06assign.ztst, Test/B02typeset.ztst: test for 35581\n\n\t* 35581: Src/params.c: output array assignments with spaces inside\n\tthe parens\n\n2015-07-16  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 35805: Test/E01options.ztst: tests for 35799\n\n2015-07-15  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 35799: Src/params.c: with NO_EXEC, parse parameter subscript\n\texpressions to correctly balance enclosing braces, but do not\n\tperform the subscripting\n\n2015-07-15  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* unposted: Completion/Zsh/Type/_ps1234: unposted: _ps1234:\n\tFix ternary test char completion\n\n2015-07-14  Oliver Kiddle  <opk@zsh.org>\n\n\t* 35789: (tweaked c.f. Bart: 35791) Completion/Unix/Type/_files:\n\tduplicate glob qualifier handling from _path_files so it is\n\tcalled once and not for each file pattern\n\n2015-07-13  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 35790: Util/zyodl.vim: zyodl.vim: Be compatible with Vim 6.\n\n\t* 35775: Doc/Zsh/.vimrc Etc/zsh-development-guide Util/zyodl.vim:\n\tNew zsh-specific yodl vim syntax highlighting.\n\n2015-07-13  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 35769: Functions/Zle/edit-command-line: edit-command-line:\n\tGo to the right byte offset\n\n2015-07-13  Oliver Kiddle  <opk@zsh.org>\n\n\t* 35737: (tweaked c.f. Peter: 35759): Src/Zle/zle_utils.c,\n\tFunctions/Zle/read-from-minibuffer: use new undo limit for\n\tminibuffer and beep when limit is reached\n\n\t* 35756: Completion/Zsh/Type/_ps1234: use the actual\n\tcolours in the completion list for terminal colours\n\n\t* 35774: Completion/Unix/Type/_dates: fix double\n\tformatting of date explanation message\n\n2015-07-13  Daniel Hahler  <zsh@thequod.de>\n\n\t* 35779: Completion/Unix/Command/_git: _git-config: remove\n\textraneous \"local expl\".\n\n2015-07-12  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* unposted: Test/B01cd.ztst: Typo\n\n2015-07-10  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: Test/B01cd.ztst: notes on ZTST_unimplemented: and\n\tZTST_skip.\n\n2015-07-10  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 35761: Test/V09datetime.ztst: Make sure to skip alternate\n\tformat extension test properly\n\n2015-07-10  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* unposted: another ZTST_skip.\n\n\t* 35760: Test/A01grammar.ztst, Test/C02cond.ztst,\n\tTest/V09datetime.ztst, Test/ztst.zsh: ZTST_skip\n\tcan be used to skip test case.\n\n2015-07-09  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 35708: Doc/Zsh/zle.yo, Src/Zle/zle_params.c,\n\tSrc/Zle/zle_utils.c; UNDO_LIMIT_NO.\n\n2015-07-09  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* 35751: Src/exec.c, Test/C03traps.ztst: fix ERR_RETURN /\n\tERR_EXIT in else branch of if.\n\n2015-07-09  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 35745: Src/utils.c, Test/V09datetime.ztst: ztrftime: Pass\n\teverything unhandled to the system strftime()\n\n\t* unposted: (c.f. Jun T: 35754): Test/V09datetime.ztst: Make\n\tV09 set a known timezone\n\n2015-07-09  Oliver Kiddle  <opk@zsh.org>\n\n\t* 35748: Completion/Zsh/Type/_ps1234,\n\tCompletion/Zsh/Command/_print: fixes to prompt spec completion\n\twhere it contains date formats\n\n\t* 35749: (c.f. Jun T: 35732): Completion/Unix/Type/_date_formats:\n\tfix exclusion list for flags/modifiers\n\n2015-07-08  Oliver Kiddle  <opk@zsh.org>\n\n\t* 35729: Completion/Zsh/Command/_compadd: new compadd completion\n\n\t* Matthew Martin: 35727: Completion/Unix/Type/_diff_options:\n\tsupport OpenBSD for diff options\n\n2015-07-07  Oliver Kiddle  <opk@zsh.org>\n\n\t* 35700: Completion/Unix/Type/_date_formats: complete OS specific\n\tdate format specifiers and put % in a prefix\n\n\t* 35718: Completion/Unix/Command/_find, Completion/Unix/Type/_dates,\n\tCompletion/Zsh/Type/_globquals: new calendar style date completion\n\n2015-07-07  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* unposted: Src/Zle/complete.c: remove compiler warning.\n\n2015-07-06  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* unposted: Doc/Zsh/expn.yo: alphabetize ${(b)...} flag\n\n\t* 35709: Doc/Zsh/expn.yo: explain :s/// modifier contexts\n\n\t* 35694: Src/subst.c, Test/D04parameter.ztst: fix handling of\n\thistory modifiers (specifically :s/l/r/) when applied across all\n\telements of an array parameter value\n\n2015-07-06  Oliver Kiddle  <opk@zsh.org>\n\n\t* 35704: Doc/Zsh/compwid.yo, Src/Zle/compcore.c, Src/Zle/complete.c:\n\tcompadd -E 0 should imply -J and -2\n\n2015-07-06  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 35696: Completion/Unix/Type/_ps1234: complete colors for %F{\n\tand %K{\n\n\t* 35697: Completion/Unix/Type/_date_formats,\n\tCompletion/Unix/Type/_ps1234: Complete strftime formats for %D{}\n\n2015-07-06  Daniel Shahaf  <d.s@daniel.shahaf.name>\n\n\t* 35441: Etc/zsh-development-guide: Make devs' ChangeLog\n\tgenerator scripts discoverable\n\n2015-07-05  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 35692: Src/Zle/computil.c: cfp_matcher_range used wrong raw\n\tcharacter if it couldn't be converted to wchar_t.\n\n\t* 35688: Src/text.c: Slightly more nearly definitive version of\n\tturning wordcode case statements back to text.\n\n2015-07-04  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 35682: Src/text.c, plus Test/A01grammar.ztst: turning case\n\tstatements parsed as multiple alternatives back into text.\n\n2015-07-03  Oliver Kiddle  <opk@zsh.org>\n\n\t* 35681: Src/Modules/datetime.c: fix day of month initialisation\n\n\t* 35674: Src/Zle/zle_main.c: make an undo event for\n\tinitial buffer contents\n\n2015-07-03  Mikael Magnusson  <mikachu@gmail.com>\n\n\t* 35673: Completion/Zsh/Function/_zargs: Improve _zargs\n\n2015-07-02  Peter Stephenson  <p.stephenson@samsung.com>\n\n\t* Han Pingtian: 35665: Src/Zle/complete.c: better error handling\n\tfor command line match processing.\n\n\t* Eric Cook: 35663: Completion/Unix/Command/_zpool: fix for\n\tchanged interface.\n\n\t* 35668: Src/input.c, Src/lex.c, Src/zsh.h,\n\tTest/D03procsubst.ztst: replacement for 35667:\n\tuse input flag to stop unwanted backtracking,\n\tadditional test.\n\n2015-07-01  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 35667: Src/lex.c, Src/zsh.h, Test/D03procsubst.ztst,\n\tTest/D08cmdsubst.ztst: fix command expansion which\n\tstarts but does not finish within alias.\n\n2015-06-29  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* unposted: Doc/Zsh/options.yo: fix formatting typo.\n\n\t* 35655: Doc/Zsh/options.yo, Src/exec.c, Src/options.c,\n\tSrc/zsh.h: APPEND_CREATE option gives POSIX compatible behaviour\n\tfor NO_CLOBBER.\n\n2015-06-28  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 35660: Functions/Prompts/prompt_adam1_setup: avoid perl, fix help\n\n2015-06-29  Oliver Kiddle  <opk@zsh.org>\n\n\t* 35637: Src/Zle/zle.h, Src/Zle/zle_main.c, Src/Zle/zle_tricky.c:\n\tremove the now unused module hook for reverse-menu-complete\n\n\t* 35627: Src/Zle/compcore.c, Src/Zle/compctl.c, Src/Zle/complete.c,\n\tSrc/Zle/complist.c, Src/Zle/compresult.c, Src/Zle/zle_tricky.c:\n\tmake reverse-menu-complete start with last match in menu selection\n\n\t* 35623: Src/Zle/complist.c: fix menu-selection where initial\n\tselection would not be displayed without scrolling\n\n2015-06-28  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 35643: Src/parse.c: redirections after typeset assignments\n\twere broken.\n\n2015-06-27  Barton E. Schaefer  <schaefer@zsh.org>\n\n\t* 35642: Src/context.c: signal queueing in zcontext_save_partial()\n\n\t* 35634: Src/exec.c: handle failure of gettempname() in namedpipe()\n\n2015-06-27  Peter Stephenson  <p.w.stephenson@ntlworld.com>\n\n\t* 35635: Src/builtin.c: a bit more consistency about\n\tmakin"
        },
        {
          "name": "Completion",
          "type": "tree",
          "content": null
        },
        {
          "name": "Config",
          "type": "tree",
          "content": null
        },
        {
          "name": "Doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "Etc",
          "type": "tree",
          "content": null
        },
        {
          "name": "FEATURES",
          "type": "blob",
          "size": 5.19921875,
          "content": "------------\nZSH FEATURES\n------------\n\n(Note that this file only lists basic shell features, for those who\nmay not have encountered zsh before.  Those familiar with zsh are\nunlikely to find anything new here.)\n\nvery close to ksh/sh grammar, with csh additions\nmost features of ksh, bash, and tcsh\ncan emulate ksh or POSIX sh\n100 builtins, 145 options, 166 key bindings\nshort for loops, ex: for i (*.c) echo $i\nselect\nshell functions\nautoloaded functions (loaded from a file when they are first referenced)\nconditional expressions (test builtin, [ ... ], and ksh-style [[ ... ]])\nglobal aliases (may be expanded anywhere on the line)\ndirectory stack access with ~num\nprocess substitution (vi =(cmd) edits the output of cmd)\ngeneralized pipes (ls foo >>(cmd1) 2>>(cmd2) pipes stdout to cmd1\n  and stderr to cmd2)\narithmetic expressions\nadvanced globbing:\n  ls **/file  searches recursively for \"file\" in subdirectories\n  ls file<20->  matches file20, file21, file22, etc.\n  ls *.(c|pro)  matches *.c and *.pro\n  ls *(R)  matches only world-readable files\n  ls *.c~lex.c  matches all .c files except lex.c\n  ls (#a1)README  matches README with one error, e.g. RADME, REEDME, RAEDME\n  ls (#ia1)README same but case insensitive\nqualifiers in parentheses after globbing expression:\n  ls *(*@)  matches executable files/directories or symlinks\n  ls *(L0f.go-w.)  matches all zero-length files not group or world writable\n  ls *(om[1,3])  matches the three most recently modified files\n  ls *(om[2])  matches the second most recently modified file\nnull command shorthands:\n  \"< file\" is same as \"more <file\"\n  \"> file\" is same as \"cat >file\"\n  \">> file\" is same as \"cat >>file\"\nksh-style coprocesses\nautomatic file stream teeing (ls >foo >bar puts output in two places)\nchpwd() function run every time you change directory (useful for\n  updating the status line)\njob control\ncsh-style history\nfull vi line editing, including \"c2w\" and \"y$\" and such things\nfull emacs line editing\nline editor is programmable via shell functions\n  - access and manipulate editor state via builtins and parameters\n  - user-defined `widgets' behave like other editor functions\n  - keymap customisation\n  - example functions provided\nincremental history search\nmagic-space history\nspelling correction\narray parameters\nassociative array parameters\ntie parameters a la path/PATH, e.g. ld_library_path/LD_LIBRARY_PATH\n$MACHTYPE, $VENDOR and $OSTYPE identify the host machine\n$LINENO, $RANDOM, $SECONDS, $cdpath, $COLUMNS, $fignore, $HISTCHARS, $mailpath\n$UID, $EUID, $GID, $EGID and $USERNAME can be assigned to\nwith autocd option, typing a directory name by itself is the same as\n  typing \"cd dirname\"\nincremental path hashing\nautomatic process time reporting for commands that run over a certain limit\nfull tcsh-style prompt substitution plus conditional prompt expressions\nutmp login/logout reporting\nwith histverify option, performing csh-style history expansions causes the\n  input line to be brought up for editing instead of being executed\nwith sunkeyboardhack option, accidentally typed trailing ` characters\n  are removed from the input line (for those of you with Sun keyboards :-) )\nwith KEYBOARD_HACK, any accidentally typed trailing ascii character can be junked\n\"cd old new\" replaces \"old\" with \"new\" in directory string\ngeneralized argument completion, new system based on shell functions:\n  - highly context sensitive\n  - large (and I mean large) set of completions supplied, from a2ps to zstyle\n  - partial file path completion\n  - spelling correction and approximate completion of any completable word\n  - highly configurable expansion of shell arguments\n  - completion list colouring [`colorizing' for you lot over there]\n  - selection of completion elements with the cursor\n  - full scrolling of lists (in optional module)\n  - completion of words from the history list\n  - `styles' feature for versatile configuration\n  - `tags' feature for choosing completions preferentially\n  - `match' specifications, allowing e.g.\n    - variant forms:  NO_glob, noglob, _NOGLOB_ all from the keyword glob\n    - partial-word matches with arbitrary anchors, e.g.\n      z_t.c -> zle_tricky.c\n      c.u.s -> comp.unix.shell\n    - complete control over case-insensitive matching\n    - can be defined globally or for individual completions\n  - bindable special completion functions\nmenu completion: pressing TAB repeatedly cycles through the possible matches\nprompt on right side of screen\ndirectory stacks\nhistory datestamps and execution time records\ncommand scheduling (like at(1), but in the shell's context)\ntty mode freezing\nup to 9 startup files (but you only need 1 or 2)\nreally 8-bit clean, and we mean it this time\nwhich -a cmd lists all occurrences of \"cmd\" in the path\nfloating point support\ndynamically loadable binary modules, supplied modules include\n  - an FTP client which runs in the shell, with function suite\n  - math functions\n  - builtin interface to the `stat' system command\n  - builtin versions of standard commands (mv, ln, etc.) for emergencies\n  - special parameters to access internal state of hash tables etc.\n  - special associative array to access contents of files directly\n  - profiler for shell functions\n  - a pseudo-terminal handler, for purposes like `expect'\n  - builtins for interaction with termcap and terminfo\n"
        },
        {
          "name": "Functions",
          "type": "tree",
          "content": null
        },
        {
          "name": "INSTALL",
          "type": "blob",
          "size": 29.4990234375,
          "content": "                        ++++++++++++++\n                        INSTALLING ZSH\n                        ++++++++++++++\n\nThis file is divided into two parts:  making and installing the shell, a\nnote on the script run to set up the environment for new users, and\na description of various additional configuration options.  You should\nhave a look at the items in the second and third parts before following the\ninstructions in the first.\n\n\n=====================\nMAKING AND INSTALLING\n=====================\n\nDependencies\n------------\n\nThe main shell can be compiled with tools available on a typical\nUnix-like system including development packages.  However, the\ndocumentation requires various additional tools that are not so standard:\n\n- YODL, for turning the documentation source files (.yo) into manual\npages and TeXinfo source for producing PDF and .info formats;\n\n- Perl and interactive manual tools, for turning the zshbuiltins(1)\nmanual into help files that can be displayed by the run-help function.\nFor example, the colcrt or col tool, not typically required for\ninstalling software, must be available.\n\nTo avoid needing these, the source distribution is supplemented by a\ndocumentation distribution that may be downloaded from the same place as\nthe source.  This provides fully generated documentation with references\nto files in the default locations.\n\nCheck MACHINES File\n-------------------\n\nCheck the file MACHINES in the top directory to see the architectures\nthat zsh is known to compile on, as well as any special instructions\nfor your particular architecture.  Most architectures will not require any\nspecial instructions.\n\nPre-configuration\n-----------------\n\nIf you are using a normal source release, skip this section.\n\nIf the `configure' script does not already exist -- e.g., if you've got\na snapshot of the bare sources just checked out from a git repository\n-- some things need to be built before the configuration can proceed.\nRun the script `./Util/preconfig' to do this.\n\nConfiguring Zsh\n---------------\n\nTo configure zsh, from the top level directory, do the command:\n    ./configure\n\nConfigure accepts several options (explained below).  To display\ncurrently available options, do the command:\n    ./configure --help\n\nMany of the interesting configuration options can be added after running\nconfigure by editing the user configuration section of config.h and the\ntop level Makefile.  However, see the end of this file for a list of\nfeatures configurable on the command line.\n\nDynamic loading\n---------------\n\nZsh has support for dynamically loadable modules.  This is now enabled\nby default; to disable it, run configure with the --disable-dynamic option.\nNote that dynamic loading does not work on all systems.  On these systems\nthis option will have no effect.  When dynamic loading is enabled, major\nparts of zsh (including the Zsh Line Editor) are compiled into modules and\nnot included into the main zsh binary.  Zsh autoloads these modules when\nthey are required.  This means that you have to execute make\ninstall.modules before you try the newly compiled zsh executable, and hence\nalso the install paths must be correct.  The installation path for modules\nis EPREFIX/lib/zsh/<zsh-version-number>, where EPREFIX defaults to PREFIX\nunless given explicitly, and PREFIX defaults to /usr/local.  See the end of\nthis file for options to configure to change these.\n\nAdding and removing modules\n---------------------------\n\nThe zsh distribution contains several modules, in the Src/Builtins,\nSrc/Modules and Src/Zle directories.  If you have any additional zsh\nmodules that you wish to compile for this version of zsh, create another\nsubdirectory of the Src directory and put them there.  You can create\nas many extra subdirectories as you need, but currently configure will only\nsearch in immediate subdirectories of Src.  The subdirectories must be\nactual directories; symbolic links will not work.  You will then need to\nrerun configure; the easiest way is to run `config.status --recheck' from\nthe top-level build directory which retains the existing configuration as\nmuch as possible.\n\nThe key to the module system is the file config.modules, created in the\nconfiguration process.  In the normal case that dynamic loading is\navailable, all modules relevant to your configuration will be compiled and\ninstalled as separate files, so unless you want the modules to be loaded by\ndefault you don't need to do anything.  For a non-dynamic zsh, the default\nis to compile the complete, compctl, zle, computil, complist, sched,\nparameter, zleparameter and rlimits modules into the shell, and you will\nneed to edit config.modules to make any other modules available.\n\nIf you wish to change the configuration, here is how config.modules works.\nEach module has a line in the file.  Be careful to retain the (strict)\nformat for lines in the file:\nlink - `dynamic', if the module is to be dynamically linked -- meaningless\n           if this is not available on your system.\n       `static' if the module is to be linked directly into the executable.\n       `no' if the module is not to be linked at all.  In this case it will\n           not even be compiled.\nload - `yes' if the module is to be visible to the user.  This will make\n           builtins, parameters etc. visible to the user without any need\n           to use the zmodload builtin.\n       `no' if an explicit zmodload command is to be required to load the\n           utilities in the module.  Note that this applies both to\n\t   statically and dynamically linked modules.\nauto - `yes' if the entry is to be regenerated whenever configure is run.\n       `no' if you wish to retain your hand-edited version.\nDo not edit the entry for the pseudo-module zsh/main (apart from the\n`functions=' part) as this is the main shell.  After you have edited this\nfile, run `make prep' in the Src subdirectory.\n\nNote that the modules depending on zle or complete (e.g.: complist and\ndeltochar) cannot be loaded dynamically on systems which do not allow symbols\nin one dynamically loaded library to be visible from another; this is true,\nfor example, of version 4 of SunOS.  The most convenient workaround is to\ncompile zle and complete into the base executable by setting their `link'\nentries in config.modules to `static' as described above.\n\nCompiler Options or Using a Different Compiler\n----------------------------------------------\n\nBy default, configure will use the \"gcc\" compiler if found.  You can use a\ndifferent compiler, or add unusual options for compiling or linking that\nthe \"configure\" script does not know about, by either editing the user\nconfiguration section of the top level Makefile (after running configure)\nor giving \"configure\" initial values for these variables by setting them\nin the environment.  Using a Bourne-compatible shell (such as sh,ksh,zsh),\nyou can do that on the command line like this:\n    CC=c89 ./configure --enable-cflags=-O2 --enable-libs=-lposix\nThis is almost equivalent to\n    CC=c89 CFLAGS=-O2 LIBS=-lposix ./configure\nbut has the advantage that the CFLAGS and LIBS variables are remembered if\nthe configuration is recreated by means of `config.status --recheck' (this\nhappens automatically if certain configuration files change).  You can\nset the make variables CFLAGS, CPPFLAGS, LDFLAGS and LIBS in this way,\nhowever CC must appear as shown.  If you are configuring from a csh-derived\nshell, you may need to use the \"env\" program:\n    env CC=c89 ./configure --enable-cflags=-O2 --enable-libs=-lposix.\n\nYou can override the variables directly when running `make':\n    make CFLAGS=-g\nHowever, these will not be passed down via `config.status --recheck'.\n\nCheck Generated Files\n---------------------\n\nConfigure will probe your system and create a \"config.h\" header file.\nYou should  check the user configuration section at the beginning of\nthis include file.  You should also examine the values (determined by\nconfigure) of HOSTTYPE, OSTYPE, MACHTYPE, and VENDOR to make sure they\nare correct.  The value of these #defines's is used only to initialize\nthe corresponding default shell parameters.  Since these shell parameters\nare only for informational purposes, you can change them to whatever\nyou feel is appropriate.\n\nAlso, configure will create a Makefile in the top level directory as well\nas in the various subdirectories.  You should check the user configuration\nsection of the top level Makefile.\n\nCompiling Zsh\n-------------\n\nAfter configuring, to build zsh, execute the command:\n    make\n\nIt's then a good idea to check that your build is working properly:\n    make check\n\nIf you have trouble with a particular test, you can run it separately:\n    make TESTNUM=C02 check\n\nThe TESTNUM value can be a single test number, as above, or a letter to\nrun an entire category of tests:\n    make TESTNUM=Y check\n\nSee Test/README for a list of test categories.\n\nInstalling Zsh\n--------------\n\nIf no make/compilation errors occur, then execute the command\n    make install\nto install all the necessary files except for the info files.\n\nAlternatively, you can install the various parts in separate stages.  To\ninstall the zsh binary, execute the command:\n    make install.bin\nAny previous copy of zsh will be renamed \"zsh.old\"\n\nTo install the dynamically-loadable modules, execute the command:\n    make install.modules\nNote that this is required for the shell to operate properly if dynamic\nloading is enabled.\n\nTo install the zsh man page, execute the command:\n    make install.man\n\nTo install all the shell functions which come with the distribution,\nexecute the command:\n    make install.fns\n\nTo install the zsh info files (this must be done separately), execute the\ncommand:\n    make install.info\nIf the programme install-info is available, \"make install.info\" will\ninsert an entry in the file \"dir\" in the same directory as the info\nfiles.  Otherwise you will have to edit the topmost node of the info\ntree \"dir\" manually in order to have the zsh info files available to\nyour info reader.\n\nBuilding Zsh On Additional Architectures\n----------------------------------------\n\nTo build zsh on additional architectures, you can do a \"make distclean\".\nThis should restore the zsh source distribution back to its original\nstate.  You can then configure zsh as above on other architectures in\nwhich you wish to build zsh.  Or alternatively, you can use a different\nbuild directory for each architecture.\n\nUsing A Different Build Directory\n---------------------------------\n\nYou can compile the zsh in a different directory from the one containing\nthe source code.  Doing so allows you to compile it on more than one\narchitecture at the same time.  To do this, you must use a version of\n\"make\" that supports the \"VPATH\" variable, such as GNU \"make\".  \"cd\" to\nthe directory where you want the object files and executables to go and\nrun the \"configure\" script.  \"configure\" automatically checks for the\nsource code in the directory that \"configure\" is in.  For example,\n\n    cd /usr/local/SunOS/zsh\n    /usr/local/src/zsh-3.0/configure\n    make\n\nNote that this is mutually exclusive with using the source directories\nas make can become confused by build files created in the source directories.\n\nWriting third-party autoloadable functions\n------------------------------------------\n\nThird-party autoloadable functions, including but not limited to completion\nfunctions, should be installed into the share/zsh/site-functions/ directory\nunder the respective installation prefix.  That would typically be written as\n$(DESTDIR)$(PREFIX)/share/zsh/site-functions/ in a makefile.  If the\nthird-party tool's $(PREFIX) is not the same as zsh's prefix, then that\ndirectory should be added to $fpath in zsh's initialization files.\n\n\n================================\nAUTOMATIC NEW USER CONFIGURATION\n================================\n\nIn the default configuration, the shell comes with a system based around\nthe zsh/newuser add-on module that detects when a user first starts the\nshell interactively and has no initialisation files (.zshenv, .zshrc,\n.zprofile or .zlogin).  The shell then executes code in the file\nscripts/newuser in the shared library area (by default\n/usr/local/share/zsh/<VERSION>/scripts/newuser).  This feature can be\nturned off simply by removing or renaming this script.  This is the\nrecommended way of disabling the features as the function\nzsh-newuser-install (see below) remains available for users who\nwish to run it.\n\nThe module can be removed entirely from the configured shell by editing the\nline starting \"name=zsh/newuser\" in the config.modules file, which is\ngenerated in the top level distribution directory during configuration:\nchange the line to include \"link=no auto=no\".\n\nThe supplied script executes the function supplied as\nFunctions/Newuser/zsh-newuser-install, which is installed to the user's\nfunction path when the module is installed.  The function can be run by\nhand after being marked for autoload.  This is documented in the zshcontrib\nmanual or in the info node `User Configuration Functions'.\n\nzsh-newuser-install is currently under development.  It is probably\npreferable for administrators who wish to customize the system their own\nway to edit the newuser script in scripts/newuser; for example, this script\ncould copy skeleton files into place safe in the knowledge that the files\ndon't yet exist.  Also, as there is currently no internationalization\nsupport, administrators of sites with users who mostly do not speak English\nmay wish not to install the zsh/newuser module.\n\n\n=====================\nCONFIGURATION OPTIONS\n=====================\n\nModified versions of zsh\n------------------------\n\nIf you are making local modifications to zsh, you are strongly\nadvised to configure with the option\n\n  --enable-custom-patchlevel=\"<my-mod-string>\"\n\nso that the variable $ZSH_PATCHLEVEL indicates this is not a standard\nversion of the shell.  The argument is arbitrary, but should indicate\nthe entity that is customizing the shell, for example the OS vendor\nor distributor.\n\nMultibyte Character Support\n---------------------------\n\nSupport for multibyte character sets that extend ASCII, such as UTF-8, is\nnow reasonably close to complete, except that combining characters are not\nhandled properly (some assistance with this problem would be appreciated).\nThe configuration script should turn on multibyte support on all systems\nwhere it can be compiled successfully.\n\nThe support can be explicitly enabled or disabled with --enable-multibyte or\n--disable-multibyte.  The developers are not aware of any need to use\n--disable-multibyte and this should be reported as a bug.  Currently\nmultibyte mode is believed to work on at least the following:\n\n  - All(?) current GNU/Linux distributions\n  - OS X 10.4.3 (problems have been reported with multibyte characters\n    in HFS file names)\n  - NetBSD 2.0.2\n  - Solaris 8+ (inputting multibyte characters from the keyboard doesn't\n    work in some installations).\n  - Cygwin (though use of multibyte characters is somewhat non-standard).\n\nThe corresponding shell option MULTIBYTE is now on by default in all\nemulation modes when multibyte support is enabled.  Turning it off is not\nrecommended unless there is a particular need to examine single bytes\nregardless of the locale.  As the line editor bases its behaviour on the\nlocale regardless of the option (in order to correspond to the displayed\ncharacter set), the option should be left on during the execution of\nuser-defined editor and completion widgets so that the behaviour\ncorresponds to that of builtin widgets.\n\nSee chapter 5 in the FAQ for some notes on multibyte input.\n\nTerminal Handling\n-----------------\n\nHistorically, several different libraries have provided the features the\nshell needs to provide output to the terminal.  The most common have been\ntermcap, which is now largely outmoded, and curses, which supersedes\ntermcap and typically contains the same features as well as others.\nconfigure will search for an appropriate library; the default search order\nis \"ncursesw tinfo termcap ncurses curses\" except on HP-UX (\"Hcurses ncursesw\nncurses curses termcap\") and Solaris (\"ncursesw ncurses curses termcap\").\nNote that even though termcap is searched before traditional forms of curses\nzsh tries to make features from curses available and if the curses library\ncontains both curses and termcap features, as is normal, the curses variant\nis used.  ncurses is a newer version of curses and tinfo is related to it.\n\nThe library ncursesw is a variant of ncurses that supports wide characters.\nzsh attempts to use this to provide functions needed by the zsh/curses\nmodule; depending on the configuration, the main shell may not require the\nadditional functions.  As the integration of wide character support into\nncurses is continuing, it is possible that on some systems attempting to\nuse ncursesw may cause problems during building.  If so, please report this\nto the developers at zsh-workers@zsh.org and attempt to recompile with\n--with-term-lib=\"tinfo termcap ncurses curses\" (see below).\n\nNote that use of ncurses requires the header ncurses.h, so this\nneeds to be in the include path.  configure will not search for\nncurses or ncursesw unless this is the case.  If you have installed\nncurses.h in a non-standard place you may need to pass\nCPPFLAGS=-I/usr/local/include (or wherever the header is found) to\nconfigure.  Similarly, you may need to pass LDFLAGS=-L/usr/local/lib\n(or wherever) in order to find the library.\n\nYou may also need to add headers if you need to include the file term.h\nfrom an installation of an ncurses variant instead of from the system\ndirectories.  For example, CPPFLAGS=-I/usr/local/include/ncursesw will\nforce configure to search for term.h in the given directory.\n\nOn some systems a suitable development package with a name such as\ncurses-devel or ncurses-devel needs to be installed before zsh can\nbe compiled.  This is likely to be contained on any installation media,\nor available for download.  It is highly unlikely that you will need to\ncompile this from scratch.\n\nYou can tell configure which libraries to search by passing an\nargument via --with-term-lib.  This takes a space-separated list\nof libraries to try as its argument, so the default is equivalent to\n--with-term-lib=\"ncursesw tinfo termcap ncurses curses\".  It replaces the\nold option --with-curses-terminfo, which altered the search order but\ndidn't allow an explicit search list to be passed.\n\nMemory Routines\n---------------\n\nIncluded in this release are alternate malloc and associated functions\nwhich reduce memory usage on some systems. To use these, add the option\n  --enable-zsh-mem\nwhen invoking \"configure\".\n\nYou should check MACHINES to see if there are specific recommendations\nabout using the zsh malloc routines on your particular architecture.\n\nDebugging Routines\n------------------\n\nYou can turn on various debugging options when invoking \"configure\".\n\nTo turn on some extra checking in the memory management routines, you\ncan use the following options when invoking \"configure\".\n --enable-zsh-mem-warning      # turn on warnings of memory allocation errors\n --enable-zsh-secure-free      # turn on memory checking of free()\n\nIf you are using zsh's memory allocation routines (--enable-zsh-mem), you\ncan turn on debugging of this code.  This enables the builtin \"mem\".\n --enable-zsh-mem-debug        # debug zsh's memory allocators\n\nYou can turn on some debugging information of zsh's internal hash tables.\nThis enables the builtin \"hashinfo\".\n --enable-zsh-hash-debug       # turn on debugging of internal hash tables\n\nTo add some sanity checks and generate debugging information for debuggers\nyou can use the following option.  This also disables optimization.\n --enable-zsh-debug            # use it if you want to debug zsh\nIn this mode, zsh may output extra information about internal errors\nto stderr.  The shell variable ZSH_DEBUG_LOG may be set to another file\nto which errors will be appended.\n\nStartup/shutdown files\n----------------------\n\nZsh has several startup/shutdown files which are in /etc by default.  This\ncan be overridden using one of the options below when invoking \"configure\".\n\n --enable-etcdir=directory    # default directory for global zsh scripts\n --enable-zshenv=pathname     # the full pathname of the global zshenv script\n --enable-zshrc=pathname      # the full pathname of the global zshrc script\n --enable-zlogin=pathname     # the full pathname of the global zlogin script\n --enable-zprofile=pathname   # the full pathname of the global zprofile script\n --enable-zlogout=pathname    # the full pathname of the global zlogout script\n\nAny startup/shutdown script can be disabled by giving the\n--disable-SCRIPTNAME option to \"configure\".  The --disable-etcdir option\ndisables all startup/shutdown files which are not explicitly enabled.\n\nThe precompiled documentation comes with startup files listed\nas being in the /etc directory.  If yodl is available, running\n\"touch version.yo\" and \"make\" in the Doc directory should produce\ncorrectly substituted documentation.  (This has to be run by hand\nto avoid introducing a dependency on yodl on systems where the precompiled\ndocumentation is sufficient.)\n\nShell functions\n---------------\n\nBy default, the shell functions which are installed with `make install' or\n`make install.fns' go into the directory ${datadir}/zsh/functions, which\nunless you have specified --datadir is the same as\n${prefix}/share/zsh/$ZSH_VERSION/functions ($prefix itself defaults to\n/usr/local, as described below).  This directory will also be compiled into\nthe shell as the default directory for the parameters $fpath and\n$FPATH. You can override it with --enable-fndir=directory; --disable-fndir\nor --enable-fndir=no will turn off both installation of functions and the\nsetting of a default value for $fpath/$FPATH.  Note the presence of\n$ZSH_VERSION (e.g. `3.1.7') to avoid clashes between versions of zsh.\nIf you only run one version of zsh at once, installing into a common\ndirectory such as /usr/local/share/zsh/functions is fine --- note, however,\nthat uninstallation is more likely to create problems in this case.\n\nThe functions to be installed are controlled by config.modules.  These\nappear at the end of the line after `functions=': note that the rest of the\nline is taken verbatim as shell command line text, i.e. no quoting is used\naround the value as a whole and unquoted wildcards will be expanded.  To\nprevent any functions from being installed, either remove the `functions='\nentry or delete the rest of the line after it.\n\nFunctions not specific to a particular module are listed on the zsh/main\nline.  None of these are crucial to shell operation, so you may choose not\nto install them.  For other modules, the functions will be installed if and\nonly if the module itself is installed.  This will usually be what you\nwant; in particular, the zsh/complete and zsh/zftp modules are of much less\nuse without the associated functions.  The functions listed with zsh/zle\nare not used by the editor unless you explicitly load them, however.\n\nYou can also use the configure option --enable-function-subdirs to allow\nshell functions to be installed into subdirectories of the function\ndirectory, i.e. `Base/*' files will be installed into `FNDIR/Base, and so\non. This also initialises $fpath/$FPATH appropriately.\n\nThe option --enable-site-fndir controls whether to create and initialise\n$fpath to include a directory for site-specific functions.  By default this\nis created in the location ${datadir}/zsh/site-functions, i.e. parallel to\nthe version-specific functions directory, and inserted at the start of the\n$fpath array on shell startup.  This directory will not be affected by\n`make uninstall' or `make uninstall.fns', although the version-specific\ndirectory and its contents will be deleted.\n\nThe --enable-additional-fpath option may be used to add arbitrary\ndirectories to the shell's default $fpath array.  This may be useful to\nhave vendor specific function directories available for vendor specific\naddons.  You may add more than one directory this way by listing them with\nthe option separated by commas.  The additional directories will be added\nafter the site specific directory (--enable-site-fndir) in the same order\nin which they are supplied.\n\nFunction depth\n--------------\n\nShell functions may be called recursively.  In order to detect infinite\nrecursion the shell has a limit on the depth to which functions may be\ncalled:  note that this is a single limit for all functions, not a limit\nfor each function called recursively.  The default for the limit is 4096.\nThe limit may be altered to the value MAX by passing the option\n--enable-max-function-depth=MAX to configure.  Alternatively, the limit may\nbe disabled with --disable-max-function-depth.  However, this is not\nrecommended as it is likely to cause the shell to crash on an infinite\nrecursion.\n\nSupport for large files and integers\n------------------------------------\n\nSome 32-bit systems allow special compilation modes to get around the 2GB\nfile size barrier.  This is enabled by default; use --disable-largefile\nto turn it off.  Not all systems recognize the test used by zsh (via the\ngetconf command), so flags may need to be set by hand.  On HP-UX 10.20,\nzsh has been successfully compiled with large file support by configuring\nwith\n  CC=\"cc -Ae\" CPPFLAGS=\"-D_LARGEFILE_SOURCE -D_FILE64\" configure \\\n  --enable-largefile ...\n\nFurthermore, use of --enable-largefile will also enable 64-bit arithmetic\nfor shell parameters, and anywhere they are used such as in mathematical\nformulae.  This depends only on the shell finding a suitable 64-bit integer\ntype; it does not require that support for large files is actually\nenabled.  Hence --enable-largefile is useful on many 32-bit systems\nwith a suitable compiler such as gcc.\n\nAlso note that if `configure' finds out that either of the types off_t or\nino_t are 64-bit quantities, but that long integers are only 32 bits, all\nthe above will be enabled automatically.  This is necessary to ensure\ncorrect handling of these types.\n\nNone of this is relevant for 64-bit systems; zsh should compile and run\nwithout problems if (sizeof(long) == 8).\n\nSearching for additional features\n---------------------------------\n\nVarious additional features are turned off by default to avoid\ncompatibility problems.\n\n--enable-pcre:\n\nZsh has a module which allows the pcre regular expression library to be\nused via shell builtins.  Compiling this library into the shell with\ndynamic loading (the default where available) produces a dependency on the\nlibrary libpcre.so.  This is a problem on systems where zsh needs to be\navailable at boot before the directory containing libpcre.so (for example\n/usr/lib or /usr/local/lib) is mounted.  For this reason, pcre support will\nonly be searched for if the option --enable-pcre is passed to configure.\n\n(Future versions of the shell may have a better fix for this problem.)\n\n--enable-cap:\n\nThis searches for POSIX capabilities; if found, the `cap' library\nis available and the shell will use these to determine if the\nshell is running in some privileged mode.  This is turned off by\ndefault as on some systems non-standard headers (in particular AIX) are\nrequired.  A direct fix for that problem would be appreciated.\n\nOptions For Configure\n---------------------\n\nThe `configure' program accepts many options, not all of which are useful\nor relevant to zsh.  To get the complete list of configure options, run\n\"./configure --help\".  The following list should contain most of the\noptions of interest for configuring zsh.\n\nConfiguration:\n  --cache-file=FILE     # cache test results in FILE\n  --help                # print a help message\n  --version             # print the version of autoconf that create configure\n  --quiet, --silent     # do not print `checking...' messages\n  --no-create           # do not create output files\n\nDirectories:\n  --prefix=PREFIX       # install host independent files in PREFIX [/usr/local]\n  --exec-prefix=EPREFIX # install host dependent files in EPREFIX [PREFIX]\n  --bindir=DIR          # install user executables in DIR [EPREFIX/bin]\n  --infodir=DIR         # install info documentation in DIR [PREFIX/info]\n  --mandir=DIR          # install man documentation in DIR [PREFIX/man]\n  --srcdir=DIR          # find the sources in DIR [configure dir or ..]\n  --datadir=DATADIR     # install shared files in DATADIR [PREFIX/share]\n\nFeatures:\n  --enable-FEATURE      # enable use of this feature\n  --disable-FEATURE     # disable use of this feature\n\nHere is the list of FEATURES currently supported.  Defaults are shown in\nbrackets, though a value shown as `yes' (equivalent to --enable-FEATURE)\nwill be ignored if your OS doesn't support that feature.\n\nzsh-debug            # compile debugging features into zsh [no]\nzsh-mem              # use zsh's memory allocators [no]\nzsh-mem-debug        # debug zsh's memory allocators [no]\nzsh-mem-warning      # turn on warnings of memory allocation errors [no]\nzsh-secure-free      # turn on memory checking of free() [no]\nzsh-hash-debug       # turn on debugging of internal hash tables [no]\netcdir=directory     # default directory for global zsh scripts [/etc]\nzshenv=pathname      # the path to the global zshenv script [/etc/zshenv]\nzshrc=pathname       # the path to the global zshrc script [/etc/zshrc]\nzlogin=pathname      # the path to the global zlogin script [/etc/zlogin]\nzprofile=pathname    # the path to the global zprofile script [/etc/zprofile]\nzlogout=pathname     # the path to the global zlogout script [/etc/zlogout]\nfndir=directory      # the directory where shell functions will go\n                     # [DATADIR/zsh/VERSION/functions]\nsite-fndir=directory # the directory where site-specific functions can go\n                     # [DATADIR/zsh/site-functions]\nadditional-path      # add directories to default function path [<none>]\nfunction-subdirs     # if functions will be installed into subdirectories [no]\ndynamic              # allow dynamically loaded binary modules [yes]\nlargefile            # allow configure check for large files [yes]\nlocale               # allow use of locale library [yes]\n\n"
        },
        {
          "name": "LICENCE",
          "type": "blob",
          "size": 1.9169921875,
          "content": "Unless otherwise noted in the header of specific files, files in this\ndistribution have the licence shown below.\n\nHowever, note that certain shell functions are licensed under versions\nof the GNU General Public Licence.  Anyone distributing the shell as a\nbinary including those files needs to take account of this.  Search\nshell functions for \"Copyright\" for specific copyright information.\nNone of the core functions are affected by this, so those files may\nsimply be omitted.\n\n--\n\nThe Z Shell is copyright (c) 1992-2017 Paul Falstad, Richard Coleman,\nZoltán Hidvégi, Andrew Main, Peter Stephenson, Sven Wischnowsky, and\nothers.  All rights reserved.  Individual authors, whether or not\nspecifically named, retain copyright in all changes; in what follows, they\nare referred to as `the Zsh Development Group'.  This is for convenience\nonly and this body has no legal status.  The Z shell is distributed under\nthe following licence; any provisions made in individual files take\nprecedence.\n\nPermission is hereby granted, without written agreement and without\nlicence or royalty fees, to use, copy, modify, and distribute this\nsoftware and to distribute modified versions of this software for any\npurpose, provided that the above copyright notice and the following\ntwo paragraphs appear in all copies of this software.\n\nIn no event shall the Zsh Development Group be liable to any party for\ndirect, indirect, special, incidental, or consequential damages arising out\nof the use of this software and its documentation, even if the Zsh\nDevelopment Group have been advised of the possibility of such damage.\n\nThe Zsh Development Group specifically disclaim any warranties, including,\nbut not limited to, the implied warranties of merchantability and fitness\nfor a particular purpose.  The software provided hereunder is on an \"as is\"\nbasis, and the Zsh Development Group have no obligation to provide\nmaintenance, support, updates, enhancements, or modifications.\n"
        },
        {
          "name": "MACHINES",
          "type": "blob",
          "size": 0.6552734375,
          "content": "-----------------------------\nZSH ON SPECIFIC ARCHITECTURES\n-----------------------------\n\nThis file is to record difficulties in compiling and installing zsh on\nspecific architectures.\n\nThe information in this list may be out of date, as the developers do\nnot have access to all machines.  In general, GNU/Linux distributions\nand BSD derivatives including MacOS are reasonably well covered.\n\nAt the time of writing (2018/05/30, version 5.5.1) zsh is believed to\ncompile on all up-to-date Unix-like operating systems.  Please let us\nknow of any exceptions.\n\nThe intended format of entries is thus:\n\n\tVendor: OS & version (hardware type) [zsh version tried]\n\t\tinformation\n"
        },
        {
          "name": "Makefile.in",
          "type": "blob",
          "size": 5.2099609375,
          "content": "#\n# Makefile for top level of zsh distribution\n#\n# Copyright (c) 1995-1997 Richard Coleman\n# All rights reserved.\n#\n# Permission is hereby granted, without written agreement and without\n# license or royalty fees, to use, copy, modify, and distribute this\n# software and to distribute modified versions of this software for any\n# purpose, provided that the above copyright notice and the following\n# two paragraphs appear in all copies of this software.\n#\n# In no event shall Richard Coleman or the Zsh Development Group be liable\n# to any party for direct, indirect, special, incidental, or consequential\n# damages arising out of the use of this software and its documentation,\n# even if Richard Coleman and the Zsh Development Group have been advised of\n# the possibility of such damage.\n#\n# Richard Coleman and the Zsh Development Group specifically disclaim any\n# warranties, including, but not limited to, the implied warranties of\n# merchantability and fitness for a particular purpose.  The software\n# provided hereunder is on an \"as is\" basis, and Richard Coleman and the\n# Zsh Development Group have no obligation to provide maintenance,\n# support, updates, enhancements, or modifications.\n#\n\nsubdir = .\ndir_top = .\nSUBDIRS = Doc Etc Src Test\n\n@VERSION_MK@\n\n# source/build directories\nVPATH           = @srcdir@\nsdir            = @srcdir@\nsdir_top        = @top_srcdir@\nINSTALL         = @INSTALL@\n\n@DEFS_MK@\n\n# ========== DEPENDENCIES FOR BUILDING ==========\n\n# default target\nall: config.h config.modules\n\t@for subdir in Src Doc; do \\\n\t  (cd $$subdir && $(MAKE) $(MAKEDEFS) $@) || exit 1; \\\n\tdone\n\n# prepare module configuration\nprep:\n\t@cd Src && $(MAKE) $(MAKEDEFS) $@\n\nMETA-FAQ: FORCE\n\t@cd Doc && $(MAKE) $(MAKEDEFS) ../META-FAQ\n\ndvi ps html info pdf:\n\t@cd Doc && $(MAKE) $(MAKEDEFS) $@\n\n# ========== DEPENDENCIES FOR INSTALLING ==========\n\n# install stripped\ninstall-strip:\n\t$(MAKE) install STRIPFLAGS=\"-s\"\n\n# install/uninstall most things\ninstall: install.bin install.modules install.fns install.man install.runhelp\nuninstall: uninstall.bin uninstall.modules uninstall.fns uninstall.man uninstall.runhelp\n\n# install/uninstall just the binary\ninstall.bin uninstall.bin:\n\t@cd Src && $(MAKE) $(MAKEDEFS) $@\n\n# install/uninstall just the modules\ninstall.modules uninstall.modules:\n\t@cd Src && $(MAKE) $(MAKEDEFS) $@\n\n# install/uninstall just the man pages\ninstall.man uninstall.man:\n\t@cd Doc && $(MAKE) $(MAKEDEFS) $@\n\n# install/uninstall just the runhelp files\ninstall.runhelp uninstall.runhelp:\n\t@cd Doc && $(MAKE) $(MAKEDEFS) $@\n\n# install/uninstall just the shell functions\ninstall.fns:\n\tif test x$(fndir) != x && test x$(fndir) != xno; then \\\n\t  test x$(sitefndir) != xno && \\\n\t    $(SHELL) $(sdir_top)/mkinstalldirs $(DESTDIR)$(sitefndir); \\\n\t  sdir_top=\"$(sdir_top)\" fndir=\"$(fndir)\" dir_top=\"$(dir_top)\" \\\n\t  scriptdir=\"$(scriptdir)\" runhelpdir=\"$(runhelpdir)\" \\\n\t  FUNCTIONS_SUBDIRS=\"$(FUNCTIONS_SUBDIRS)\" \\\n\t  INSTALL_DATA=\"$(INSTALL_DATA)\" \\\n\t  INSTALL_PROGRAM=\"$(INSTALL_PROGRAM)\" \\\n\t  DESTDIR=\"$(DESTDIR)\" VERSION=\"$(VERSION)\" \\\n\t  $(SHELL) $(sdir_top)/Config/installfns.sh || exit 1; \\\n\tfi; \\\n\texit 0\n\nuninstall.fns:\n\tif test x$(fndir) != x && test x$(fndir) != xno; then \\\n\t  fndir=\"$(fndir)\" dir_top=\"$(dir_top)\" \\\n\t  scriptdir=\"$(scriptdir)\" \\\n\t  FUNCTIONS_SUBDIRS=\"$(FUNCTIONS_SUBDIRS)\" \\\n\t  DESTDIR=\"$(DESTDIR)\" VERSION=\"$(VERSION)\" \\\n\t  $(SHELL) $(sdir_top)/Config/uninstallfns.sh || exit 1; \\\n\tfi; \\\n\texit 0\n\n# install/uninstall just the info pages\ninstall.info uninstall.info:\n\t@cd Doc && $(MAKE) $(MAKEDEFS) $@\n\n# install/uninstall just the HTML manual\ninstall.html uninstall.html:\n\t@cd Doc && $(MAKE) $(MAKEDEFS) $@\n\n# ========== DEPENDENCIES FOR TESTING ==========\ncheck test:\n\tcd Test ; $(MAKE) check\n\n# ========== DEPENDENCIES FOR CLEANUP ==========\n\n@CLEAN_MK@\n\ndistclean-here:\n\trm -f Makefile config.h config.status config.log config.cache config.modules config.modules.sh stamp-h Config/defs.mk\n\trm -rf autom4te.cache\n\nrealclean-here:\n\tcd $(sdir) && rm -f config.h.in stamp-h.in configure\n\n# ========== DEPENDENCIES FOR MAINTENANCE ==========\n\n@CONFIG_MK@\n\nconfig: config.h\n\nconfig.status: $(sdir)/configure\n\t$(SHELL) ./config.status --recheck\n\n$(sdir)/configure: $(sdir)/aclocal.m4 $(sdir)/aczsh.m4 $(sdir)/configure.ac\n\tcd $(sdir) && autoconf\n\nconfig.h: stamp-h\nstamp-h: $(sdir)/config.h.in config.status\n\tcd $(dir_top) && $(SHELL) ./config.status config.h $@\n\nconfig.modules: $(sdir)/config.h.in config.status config.modules.sh\n\tcd $(dir_top) && $(SHELL) ./config.status $@ && \\\n\t$(SHELL) ./config.modules.sh\n\n$(sdir)/config.h.in: $(sdir)/stamp-h.in\n$(sdir)/stamp-h.in: $(sdir)/configure\n\tcd $(sdir) && autoheader\n\techo > $(sdir)/stamp-h.in\n\n# ========== DEPENDENCIES FOR DISTRIBUTION ==========\n\nDISTNAME = zsh-$(VERSION)\n\ntarxz-src: $(DISTNAME).tar.xz\n$(DISTNAME).tar.xz: FORCE\n\t@$(sdir_top)/Util/mkdisttree.sh $(DISTNAME) $(sdir_top) $(dir_top) SRC \\\n\t    $(MAKE) $(MAKEDEFS)\n\techo '#define ZSH_PATCHLEVEL \"'`cd $(sdir_top) && git describe --tags --long --abbrev=7`'\"' >$(DISTNAME)/Src/patchlevel.h.release\n\ttar cf - $(DISTNAME) | xz -9 > $@\n\trm -rf $(DISTNAME)\n\ntarxz-doc: $(DISTNAME)-doc.tar.xz\n$(DISTNAME)-doc.tar.xz: FORCE\n\t@$(sdir_top)/Util/mkdisttree.sh $(DISTNAME) $(sdir_top) $(dir_top) DOC \\\n\t    $(MAKE) $(MAKEDEFS)\n\ttar cf - $(DISTNAME) | xz -9 > $@\n\trm -rf $(DISTNAME)\n\nFORCE:\n"
        },
        {
          "name": "Misc",
          "type": "tree",
          "content": null
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 68.611328125,
          "content": "-------------------------------------\nCHANGES FROM PREVIOUS VERSIONS OF ZSH\n-------------------------------------\n\nNote also the list of incompatibilities in the README file.\n\nChanges since 5.9\n-----------------\n\nIn region_highlight and zle_highlight, italic and faint can be\nspecified as font attributes for terminals that support them.\n\nHighlighting groups can be referenced in region_highlight and\nzle_highlight for common attribute combinations and a layer can be\nspecified to indicate precedence where highlighted regions overlap.\nHighlighting groups are also supported in the prompt via a new %H\nprompt escape.\n\nEllipsis markers shown by the line editor to indicate where the line\ndoesn't fit in the terminal can be highlighted.\n\nThe ERR_EXIT and ERR_RETURN options were refined to be more self-\nconsistent and better aligned with the POSIX-2017 specification of\n`set -e`. For details on what exactly changed, see the list of\nincompatibilities in the README file.\n\nSupport for named references and namespaces has been added, similar to\nthose features in ksh but with some notable differences. The `nameref`\nbuiltin and some ksh-equivalent namespace names are available by loading\nthe zsh/ksh93 module.  See the documentation of that module for more.\n\nNon-forking command substitutions with ${ ... } and ${| ... } are now\navailable, and the latter extended with ${|param| ... } to return the\nresult via assignment to the named param rather than always via $REPLY.\n\nChanges since 5.8.1\n-------------------\n\nzsh 5.9 is dedicated to the memory of Sven Guckes, who was, amongst other\nthings, a long-time zsh advocate.  For more information, see:\n\n  https://linuxnews.de/2022/02/sven-guckes-verstorben/\n  https://groups.google.com/g/vim_announce/c/MJBKVd-xrEE/m/joVNaDgAAgAJ\n\nWhen unsetting a hash element, the string enclosed in square brackets is\ninterpreted literally after any normal command-line-argument expansions.\nThus\n  unset \"hash[$key]\"\nfirst expands $key as usual for a double-quoted string, and then interprets\nthat result as the exact hash element to unset.  This differs from previous\nversions of the shell, which would also remove a leading backslash for an\nunusual subset of characters in the expansion of $key.  Note this also\nmeans, for example, that now\n  unset 'hash[ab]cd]'\nunsets the element with key \"ab]cd\" rather than silently doing nothing.\n\nThe function command learnt a -T option to declare a function and enable\ntracing for it simultaneously.\n\nThe option SHORT_REPEAT was added to enable the short syntax of\nSHORT_LOOPS for the repeat command only. It is disabled by default.\n\nThe _arguments function now supports NUL-delimiting optargs in the\nopt_args array via the -0 option. Developers of completion functions\nshould find this easier to handle reliably than the default\ncolon-delimiting behaviour.\n\nThe zsh/system module's `zsystem flock` command learnt an -i option to\nset the wait interval used with -t. Additionally, -t now supports\nfractional seconds.\n\nThe option CLOBBER_EMPTY was added to enable the overwrite behaviour\nof CLOBBER for empty files only. It is disabled by default.\n\nA (-) expansion flag was added. It works like (n) but correctly sorts\nnegative numbers.\n\nThe (*) expansion flag enables EXTENDED_GLOB for pattern matching.\nFor example, ${(*)sample/(#b)*(pat)*/${match[1]}} uses backreferences\neven if EXTENDED_GLOB is not otherwise set.  However, this does not\ndescend into nested expansions, and doubling as (**) does not disable\nEXTENDED_GLOB.\n\nThe compinit function learnt a -w option to explain why compdump runs.\nWhen run without the -i or -u options and compaudit discovers security\nissues, answering \"y\" to the \"Ignore insecure ...\" prompt removes the\ninsecure elements (like the -i option) where previously it ignored the\nresult (thus formerly like the -u option).  Further, removing those\nelements includes dropping directories from the $fpath array.\n\nThe zsh/datetime module's strftime builtin learnt an -n option to omit\nthe trailing newline when printing a formatted time.\n\nThe XTRACE option is now disabled while running user-defined completion\nwidgets.  This corresponds to long-standing behavior of other user ZLE\nwidgets.  Use the _complete_debug widget to capture XTRACE output, or\nuse \"functions -T\" to enable tracing of specific completion functions.\n\nThe fc builtin learnt an -s option which is a POSIX equivalent to the\n`fc -e-` method of re-executing a command without invoking an editor.\n\nThe option CASE_PATHS was added to control how NO_CASE_GLOB behaves.\nNO_CASE_GLOB + NO_CASE_PATHS is equivalent to the current NO_CASE_GLOB\nbehaviour. NO_CASE_GLOB + CASE_PATHS treats only path components that\ncontain globbing characters as case-insensitive; this behaviour may\nyield more predictable results on case-sensitive file systems.\nNO_CASE_PATHS is the default.\n\nWith the new TYPESET_TO_UNSET option set, \"typeset foo\" leaves foo unset,\nin contrast to the default behavior which assigns foo=\"\".  Any parameter\nattributes such as numeric type, sorting, and padding are retained until\nthe parameter is explicitly unset or a conflicting value is assigned.\nThis is similar to default behavior of bash and ksh.  This option is\ndisabled by default.\n\nThe compadd builtin's -D option can now be specified more than once.\n\nThe zsh/zutil module's zformat builtin learnt an -F option which behaves\nlike -f except that ternary expressions check for existence instead of\ndoing math evaluation.\n\nThe conventional syntax used to indicate units, ranges, and default values\nin completion descriptions (e.g. `timeout (seconds) (0-60) [20]`) is now\nrecognised by the completion system itself. These components are parsed\nout of the description and can be individually styled. A _numbers helper\nfunction has been added to help function authors offer rich completion\nfor these values.\n\nThe log builtin, WATCH parameter, et al., have been broken out into a\nseparate module, zsh/watch. The module is enabled by default.\n\nThe zsh/watch module's WATCHFMT parameter now supports colours via the\n%F and %K escapes.\n\nThe STTY parameter can now be set to an empty string before running a\ncommand to automatically restore terminal settings after the command\nfinishes.\n\nThe \"jobs\" command and \"$jobstates\" and related parameters can report on\nparent shell jobs even in subshells.  This is a snapshot of the parent\nstate, frozen at the point the subshell started.  However, if a subshell\nstarts its own background jobs, the parent state is discarded in order\nto report on those new jobs.\n\nChanges from 5.8 to 5.8.1\n-------------------------\n\nCVE-2021-45444: Some prompt expansion sequences, such as %F, support\n'arguments' which are themselves expanded in case they contain colour\nvalues, etc. This additional expansion would trigger PROMPT_SUBST\nevaluation, if enabled. This could be abused to execute code the user\ndidn't expect. e.g., given a certain prompt configuration, an attacker\ncould trick a user into executing arbitrary code by having them check\nout a Git branch with a specially crafted name.\n\nThis is fixed in the shell itself by no longer performing PROMPT_SUBST\nevaluation on these prompt-expansion arguments.\n\nUsers who are concerned about an exploit but unable to update their\nbinaries may apply the partial work-around described in the file\nEtc/CVE-2021-45444-VCS_Info-workaround.patch included with the shell\nsource. [ Reported by RyotaK <security@ryotak.me>. Additional thanks to\nMarc Cornellà <hello@mcornella.com>. ]\n\nA regression was introduced in 5.8.1 in which, when reading a script\nfrom standard input, zsh itself would consume lines that should otherwise\nhave been consumed by commands executed earlier in the script. This was\nnot intentional and has been fixed in subsequent versions.\n\nChanges from 5.7.1-test-3 to 5.8\n--------------------------------\n\nCVE-2019-20044: When unsetting the PRIVILEGED option, the shell sets its\neffective user and group IDs to match their respective real IDs. On some\nplatforms (including Linux and macOS, but not FreeBSD), when the RUID and\nEUID were both non-zero, it was possible to regain the shell's former\nprivileges by e.g. assigning to the EUID or EGID parameter. In the course\nof investigating this issue, it was also found that the setopt built-in\ndid not correctly report errors when unsetting the option, which\nprevented users from handling them as the documentation recommended.\nsetopt now returns non-zero if it is unable to safely drop privileges.\n[ Reported by Sam Foxman <samfoxman320@gmail.com>. ]\n\nChanges from 5.7.1 to 5.7.1-test-3\n----------------------------------\n\nThe zsh/zutil module's zparseopts builtin learnt an -F option to abort\nparsing when an unrecognised option-like parameter is encountered.\n\nThe zsh/files module gained a chmod builtin.\n\nSeveral changes have been made to the way completion functions track\n'precommands' (such as `command` and `env`) and determine whether the\ncommand being completed for is a shell builtin. Developers of completion\nfunctions may wish to familiarise themselves with `_normal -p` and\n`_pick_variant -b`.\n\nThe option CD_SILENT was added to suppress all output from cd (whether\nexplicit or implicit with AUTO_CD). It is disabled by default.\n\nThe compadd builtin's -o option now takes an optional argument to\nspecify the order of completion matches. This affects the display\nof candidate matches and the order in which they are selected when\ncycling between them using menu completion.\n\nThe :h and :t modifiers in parameter expansion (if braces are present),\nglob qualifiers and history expansion may take following decimal digit\narguments in order to keep that many leading or trailing path components\ninstead of the defaults of all but one (:h) and one (:t).  In an absolute\npath the leading '/' counts as one component.\n\nThe functions builtin gained a -c option to efficiently copy functions.\n\nThe zshmisc(1) manual page incorrectly stated that when 'exit' is used\nin a `try' block inside a function, the corresponding `always' block will\nbe executed.  The manual page has been corrected.  The shell's behaviour\nhas not changed, but code such as the following:\n.\n    f() { { exit } always { echo Hello world } }\n.\nshould be changed either to use 'return' instead of 'exit', or to have\nthe try/always block outside of any function.\n\nChanges from 5.6.2 to 5.7.1\n---------------------------\n\nThere are only minor changes between 5.7 and 5.7.1.\n\nSupport for 24-bit true color terminals has been added. Hex triplets\ncan be used when specifying colours for prompts and line editor\nhighlighting. On 88 and 256 colour terminals, a new zsh/nearcolor module\nallows colours specified with hex triplets to be matched against the\nnearest available colour.\n\nThe zsh/datetime module's strftime builtin now accepts an argument\nspecifying the nanoseconds time component; both arguments can be omitted\nto use the current time.\n\nChanges from 5.6.1 to 5.6.2\n---------------------------\n\nFix another SIGTTOU case.\n\nFix SIGWINCH being ignored when zsh is not in the foreground.\n\nThe release tarballs are now compressed using xz(1), whereas previously\nboth xz(1) and gzip(1) versions were available.  If this gets in your way,\ngive us a shout.\n\nChanges from 5.6 to 5.6.1\n-------------------------\n\nFix packaging issue that broke runhelp.\n\nFix a regression with pipelines getting backgrounded and emitting SIGTTOU.\n\nChanges from 5.5.1-test-2 to 5.6\n--------------------------------\n\nCVE-2018-0502: Data from the second line of a #! script file might be passed to\nexecve().  For example, in the following situation -\n.\n    printf '#!foo\\nbar' > baz\n    ./baz\n.\nthe shell might take \"bar\" rather than \"foo\" for the argv[0] to be passed to\nexecve().  [ Reported by Anthony Sottile and Buck Evan. ]\n\nCVE-2018-13259: A shebang line longer than 64 characters would be truncated.\nFor example, in the following situation:\n.\n    ( printf '#!'; repeat 64 printf 'x'; printf 'y' ) > foo\n    ./foo\n.\nthe shell might execute x...x (64 repetitions) rather than x...xy (64 x's,\none y).  [ Reported by Daniel Shahaf. ]\n\nChanges from 5.5.1 to 5.5.1-test-2\n----------------------------------\n\nNon-stop IEEE 754 arithmetic support - Inf and NaN are now returned\nfrom floating point operations where errors were printed before.\nInf and NaN are also recognised in arithmetic expressions.\n\nIn shell patterns, [[:blank:]] now honours the locale instead of\nmatching exclusively on space and tab, like for the other POSIX\ncharacter classes or for extended regular expressions.\n\nThe zsh/system module now provides the PID of the last process\nsubstitution via $sysparams[procsubstpid].\n\nTime formatting via the %D prompt escape now offers nanosecond\nprecision with the %. and %N format specifiers. Additionally,\nnanosecond precision on file times is supported in the module\nzsh/stat.\n\nThe zsh/mathfunc module now includes a log2() function.\n\nThe parameter ZLE_RECURSIVE has been added to indicate the\ncurrent ZLE recursion level.\n\nChanges from 5.5 to 5.5.1\n-------------------------\n\nApart from a fix for a configuration problem finding signal names from\n(some) recent versions of glibc, there are only minor changes.\n\nChanges from 5.4.2 to 5.5\n-------------------------\n\nThe effect of the NO_INTERACTIVE_COMMENTS option extends into $(...) and\n`...` command substitutions when used on the command line.  Previously,\ncomments were always recognized within command substitutions unless the\ncomment character \"#\" was disabled via reset of $histchars.\n\nAn alternative assignment syntax for indicating indices for arrays\nand keys for associative arrays:\n\ntypeset -a array=([1]=first [2]=second)\ntypeset -A assoc=([key1]=val1 [key2]=val2)\n\nis allowed for compatibility with other shells.  In the case of normal\narrays the new syntax can be mixed with the old.\n\nThe %E, %S, and %U TIMEFMT specifiers now support m and u prefixes\n(e.g., %mE) to output times in milliseconds and microseconds,\nrespectively.\n\nThe option CHECK_RUNNING_JOBS was added to control whether zsh should\ncheck for running jobs in addition to suspended ones with CHECK_JOBS.\nIt is enabled by default.\n\nChanges from 5.3.1 to 5.4.2\n---------------------------\n\nThere are only minor changes between 5.4 and 5.4.2.\n\nThe 'exec' and 'command' precommand modifiers, and options to them, are\nnow parsed after parameter expansion.  Previously, both the modifier and\nany options to it were parsed between alias expansion and parameter\nexpansion (see zshexpn(1)), so they could neither be quoted nor be the\nresult of parameter expansion.  Examples: 's=command; $s -V ls' and\n'\\command -V ls' now work as expected.\n\nFunctions executed by ZLE widgets no longer have their standard input\nclosed, but redirected from /dev/null instead. That still guards\nagainst user defined widgets inadvertently reading from the tty device.\n\nThere is an option WARN_NESTED_VAR, a companion to the existing\nWARN_CREATE_GLOBAL that causes a warning if a function updates a\nvariable from an enclosing scope without using typeset -g.  It can be\nturned on for an individual function with \"functions -W\".\n\nzmodload now has an option -s to be silent on a failure to find a module\nbut still print other errors.\n\nThe autoload builtin gained several new features to load functions from a\nfile path determined at the time of definition rather than at the time of\nloading.\n\nThe zsh/parameter module now exposes the file paths associated with\nshell functions via the parameters functions_source and\ndis_functions_source.\n\nChanges from 5.2 to 5.3.1\n-------------------------\n\nThere are only minor compatibility fixes between 5.3 and 5.3.1.\n\nIt is possible to enable character width support for Unicode 9 by\nconfiguring with `--enable-unicode9'; this compiles in some additional\ntables.  At some point this support may move into a module, in which\ncase the configure option will be changed to cause the module to be\npermanently loaded.  This option is not useful unless your terminal also\nsupports Unicode 9.\n\nThe new word modifier ':P' computes the physical path of the argument.\nIt is different from the existing ':a' modifier which always resolves\n'/before/here/../after' to '/before/after', and differs from the\nexisting ':A' modifier which resolves symlinks only after 'here/..' is\nremoved, even when /before/here is itself a symbolic link.  It is\nrecommended to review uses of ':A' and, if appropriate, convert them\nto ':P' as soon as compatibility with 5.2 is no longer a requirement.\n\nThe output of \"typeset -p\" uses \"export\" commands or the \"-g\" option\nfor parameters that are not local to the current scope.  Previously,\nall output was in the form of \"typeset\" commands, never using \"-g\".\n\nvi-repeat-change can repeat user-defined widgets if the widget calls\nzle -f vichange.\n\nThe parameter $registers now makes the contents of vi register buffers\navailable to user-defined widgets.\n\nNew vi-up-case and vi-down-case builtin widgets bound to gU/gu (or U/u\nin visual mode) for doing case conversion.\n\nA new select-word-match function provides vim-style text objects with\nconfigurable word boundaries using the existing match-words-by-style\nmechanism.\n\nSupport for the conditional expression [[ -v var ]] to test if a\nvariable is set for compatibility with other shells.\n\nThe print and printf builtins have a new option -v to assign the output\nto a variable. This is for bash compatibility but with the additional\nfeature that, for an array, a separate element is used each time the\nformat is reused.\n\nNew x: syntax in completion match specifications make it possible to\ndisable match specifications hardcoded in completion functions.\n\nChanges from 5.1.1 to 5.2\n-------------------------\n\nThe new module zsh/param/private can be loaded to allow the shell\nto define parameters that are private to a function scope (i.e. are\nnot propagated to nested functions called within this function).\n\nThe parameter flag ${(P)...} is now more useful when it appears in\na nested expansion.  For example,\n\n  typeset -A assoc=(one un two deux three trois)\n  name=assoc\n  print ${${(P)name}[one]}\n\nnow prints \"un\".  In previous versions of the shell the value of the\nsubstitution was fully expanded on return from ${(P)name}, making\nassociative array subscripting difficult.  As a side effect, flags\nfor formatting appearing in the inner substitution now affect the\nsubstitution of the name (into \"assoc\" in this case), which is not\nnormally useful: flags that should apply to the value must be in the\nouter substitution.\n\nThe GLOB_STAR_SHORT option allows the pattern **/* to be shortened to\njust ** if no / follows. so **.c searches recursively for a file whose\nname has the suffix \".c\".\n\nThe effect of the WARN_CREATE_GLOBAL option has been significantly\nextended, so expect it to cause additional warning messages about\nparameters created globally within function scope.\n\nPaste highlighting (added in 5.1) is now enabled by default to signal\nthat accept-line hasn't occurred.  Paste highlighting may be disabled\nvia\n  zle_highlight+=(paste:none)\n.  Disabling paste highlighting will retain the \"bracketed paste\"\nbehaviour, unless that is separately disabled via zle_bracketed_paste.\n\nChanges from 5.1 to 5.1.1\n-------------------------\n\n5.1.1 is primarily a bug fix release; however, a few minor features were\nadded.\n\nThe ZLE variables YANK_ACTIVE, YANK_START and YANK_END have been added\nand are useful for managing highlighting.\n\nThe zsh-specific pattern match range tests have been supplemented with\n[:INCOMPLETE:] and [:INVALID:] to help detect the state of partially\nread multibyte character strings.\n\nChanges from 5.0.8 to 5.1\n-------------------------\n\nThe builtins declare, export, local, readonly and typeset\nnow have corresponding reserved words.  When used in\nthis form, the builtin syntax is extended so that assignments\nfollowing the reserved word are treated similarly to\nassignments that appear at the start of the command line.\nFor example,\n  local scalar=`echo one word` array=(several words)\ncreates a local \"scalar\" containing the text \"one word\"\nand an array \"array\" containing the words \"several\"\n\"words\".\n\n- The print builtin has new options -x and -X to expand tabs.\n\n- Several new command completions and numerous updates to others.\n\n- Options to \"fc\" to segregate internal and shared history.\n\n- All emulations including \"sh\" use multibyte by default; several\n  repairs to multibyte handling.\n\n- ZLE supports \"bracketed paste\" mode to avoid interpreting pasted\n  newlines as accept-line.  Pastes can be highlighted for visibility\n  and to make it more obvious whether accept-line has occurred.\n\n- Improved (though still not perfect) POSIX compatibility for getopts\n  builtin when POSIX_BUILTINS is set.\n\n- New setopt APPEND_CREATE for POSIX-compatible NO_CLOBBER behaviour.\n\n- Completion of date values now displays in a calendar format when\n  the complist module is available.  Controllable by zstyle.\n\n- New parameter UNDO_LIMIT_NO for more control over ZLE undo repeat.\n\n- Several repairs/improvements to the contributed narrow-to-region\n  ZLE function.\n\n- Many changes to child-process and signal handling to eliminate race\n  conditions and avoid deadlocks on descriptor and memory management.\n\n- New builtin sysopen in zsh/system module for detailed control of\n  file descriptor modes.\n\n\nChanges from 5.0.0 to 5.0.8\n---------------------------\n\n- Global aliases can be created for syntactic tokens such as command\n  separators (\";\", \"&\", \"|\", \"&&\", \"||\"), redirection operators, etc.\n  Use at your own risk!  The POSIX_ALIASES option is interpreted more\n  strictly to prevent expansion of these and other alias names containing\n  quotes, glob metacharacters, parameter references, etc.\n\n- There have been various further improvements to builtin handling\n  with the POSIX_BUILTINS option (off by default) for compatibility with\n  the POSIX standard.\n\n- 'whence -v' is now more informative, and 'whence -S' shows you\n  how a full chain of symbolic links resolves to a command.\n\n- The 'p' parameter flag now allows an argument to be specified\n  as a reference to a variable, e.g. ${(ps.$sep.)foo} to split $foo\n  on a string given by $sep.\n\n- The option FORCE_FLOAT now forces variables, not just constants,\n  to floating point in arithmetic expressions.\n\n- The type of an assignment in arithmetic expressions, e.g. the\n  type seen by the variable res in $(( res = a = b )), is now\n  more logical and C-like.\n\n- The default binding of 'u' in vi command mode has changed to undo\n  multiple changes when invoked repeatedly. '^R' is now bound to redo\n  changes. To revert to toggling of the last edit use:\n    bindkey -a u vi-undo-change\n\n- Compatibility with Vim has been improved for vi editing mode. Most\n  notably, Vim style text objects are supported and the region can be\n  manipulated with vi commands in the same manner as Vim's visual mode.\n\n- Elements of the watch variable may now be patterns.\n\n- The logic for retrying history locking has been improved.\n\n- Some rationalisations have been made to the zsh/db/gdbm module that\n  should make it more useful and predictable in operation.\n\n- Numeric constants encountered in mathematical expressions (but not other\n  contexts) can contain underscores as separators that will be ignored on\n  evaluation, as allowed in other scripting languages.  For example,\n  0xFFFF_FFFF, or 3.141_592_654.  From 5.0.6 this is also available\n  in output, e.g.\n    setopt cbases\n    zmodload zsh/mathfunc\n    print $(( [#16_4] 2**32 - 1 )) $(( [#_3] 4 * atan(1.0) ))\n\n- \"functions -T\" turns on tracing for the specified function(s) only,\n  similar to \"functions -t\" except that tracing is turned off for any\n  functions called from the specified one(s) that don't also have the -t\n  or -T flag.\n\n- The option FORCE_FLOAT has been added to force all arithmetic constants\n  to be treated as floating point.  This is most useful locally within\n  functions or scripts performing floating point calculations.\n\n- The default $fpath/$FPATH is now designed to include\n  /usr/local/share/zsh/site-functions unless the installer has\n  specifically decided to use another path, i.e. regardless of\n  the standard installation location.  This directory does not need to\n  exist.  Sites that set an explicit site directory can put that in\n  /etc/zshenv as before.  The intention of the new path element is to\n  increase the likelihood that locally added functions can be found with\n  the shell running \"out of the box\", unless the shell has been\n  deliberately configured differently by the installer for some special\n  purpose.\n\n- Individual pattern characters can be disabled.  For example, to allow '^'\n  to be an ordinary character even if the option EXTENDED_GLOB is set, use\n  \"disable -p '^'\".\n\n- The variable editing builtin vared can be given custom editing widgets\n  for initialisation and finishing.\n\n- The line editor's capability for listening on file descriptors\n  additional to the terminal has been enhanced so that the handler for\n  such file descriptors can be a line editor widget.  Previously the\n  handler always behaved as a standard shell function.\n\n- Hooks for adding history (the function zshaddhistory and the\n  array zshaddhistory_functions) can return status 2 to indicate that\n  history is to be saved internally within the shell but not written.\n\n- In file completion, the recursive-files style can be set to an array of\n  patterns to match against \"$PWD/\".  In any matched location, it is\n  possible to complete files in arbitrarily deep subdirectories without\n  needing to type the directory prefix.  See example in the zshcompsys\n  manual.\n\n- The _user_expand completer now allows expansion functions in the\n  user-expand files to return a string in REPLY that will be used to name\n  the set of expansions returned.\n\n- The parameter HISTORY_IGNORE may be set to a pattern which matches\n  lines in the internal history that are to be omitted from the history\n  file at file write time.  This differs from history changes made in\n  the zshaddhistory hook or by the HIST_IGNORE_* options, all of which\n  take effect immediately on the internal history list itself.\n\n- The parameter ZLE_RPROMPT_INDENT can be set to 0 to remove the space\n  before the right hand side of the screen (this causes problems with\n  some terminals).  It is not special and is not set by default; the\n  effect in that case is as if it was 1, as in previous versions.\n\n- If the option EXTENDED_GLOB is in effect, it is possible to force\n  globbing within conditional code using the [[ ... ]] syntax by flagging\n  that a certain string is a glob using the (#q) glob qualifier syntax.\n  The resulting glob is treated as a single argument.  For example,\n  [[ -n *.c(#qN) ]] tests whether there are any .c files in the current\n  directory.\n\n- In prompt strings, the %N(l.true.false) conditional (line length) and\n  the %N<..< and %N>..> truncation operators now accept negative values\n  of N, which count the remaining space to the opposite margin (positive\n  values of N still count the space used since the start of the prompt).\n  In PS1 and PROMPT, this counts to the right margin, whereas in RPS1 and\n  RPROMPT, it counts to the left margin (not to the opposite prompt).\n\n- Also in prompt strings, %e or the equivalent test %(e..) are used to\n  output or test the execution / evaluation depth of a shell\n  construct within functions etc.  This is useful in $PS4.\n\n- Another new prompt feature is the %. escape within time strings, for\n  example %D{%H:%M:%S.%.}.  It provides zero-padded decimal fractions of a\n  second; by default milliseconds are shown, but the number of digits may\n  be indicated from 1 to 6, e.g. \"%6.\".  (Note this is part of the\n  extensions to strftime() formats rather than basic prompt escapes.)\n\n- The operators :^ and :^^ in parameter substitution allow for array\n  zipping in the form ${name:^array}. With the :^ operator, all entries\n  in $name and $array will be output in alternating order. With :^ the\n  longer array is trimmed whereas the :^^ operator repeats the shorter\n  array enough to match the longer array.\n\n- The value of $? when a job becomes stopped is now the signal number plus\n  128, for compatibility with other shells.  Note that different operating\n  systems use different values e.g. for SIGTSTP, so it is not possible in\n  portable scripts to detect stopped jobs by comparing to a fixed number.\n  Also, the value of $pipestatus is now updated when a job stops, not just\n  when it exits.\n\n- Redirections applied to function definitions take effect when the\n  function is executed, not when it is defined.  Other shells already\n  work this way.  For example,\n    fn() { echo hello } >~/logfile\n  Running fn writes \"hello\" to logfile.  In older versions of the shell\n  it would create an empty file at the point of definition.\n\nChanges between 4.2 and 5.0.0\n-----------------------------\n\nThe following changes first appeared in the 4.3 series of releases;\nsee also the file Etc/NEWS-4.3.\n\nHere is a summary of the most significant changes:\n\n- Multibyte characters strings are supported throughout the shell.\n  Various options, editor features, and expansion flags have been\n  added to aid in using them.\n\n- The following new options have appeared: COMBINING_CHARS,\n  DEBUG_BEFORE_CMD, HASH_EXECUTABLES_ONLY, HIST_FCNTL_LOCK,\n  HIST_LEX_WORDS, HIST_SAVE_BY_COPY, MULTIBYTE, NO_MULTI_FUNCDEF,\n  PATH_SCRIPT, POSIX_ALIASES, POSIX_CD, POSIX_JOBS, POSIX_STRINGS,\n  POSIX_TRAPS, PROMPT_SP, SOURCE_TRACE.\n\n- Highlighting and colouring of the command line is supported.\n\n- Job control is supported in non-interactive shells and subshells.\n\n- The zshroadmap manual page provides a slightly more helpful\n  introduction to the shell manual than was previously available.\n\n- There have been some notable enhancements to POSIX compatibility\n  when the shell is in a corresponding emulation (e.g. \"emulate sh\").\n\nExpansion (parameters, globbing, etc.) and redirection\n-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n- The character group tests [[:IDENT:]], [[:IFS:]], [[:IFSSPACE:]],\n  [[:WORD:]] in patterns allow testing if a character can be\n  part of an identifier, is an IFS character, is an IFS whitespace\n  character, or is considered part of the word using the line editor's\n  logic based on the shell variable WORDCHARS.\n\n- In extended globbing, \"(#cN,M)\" means \"match the preceding group\n  at least N but no more than M times\".\n\n- The glob qualifier P can be used with an argument to add an extra\n  word before each glob match.\n\n- The syntax ~[...] provides dynamic directory naming by means\n  of the shell function zsh_directory_name or associated hook functions.\n  This is useful for expanding paths with many variable components as\n  commonly found in software development.\n\n- Parameter substitution has the ${NAME:OFFSET} and ${NAME:OFFSET:LENGTH}\n  syntax for compatibility with other shells (and zero-based indexing\n  is used to enhance compatibility).  LENGTH may be negative to count\n  from the end.\n\n- The arbitrary limit on parameter subscripts (262144) has been removed.\n  As it was not configurable and tested in an inconvenient place it\n  was deemed preferable to remove it completely.  The limit was originally\n  introduced to prevent accidental creation of a large parameter array\n  by typos that generated assignments along the lines of \"12345678=0\".\n  The general advice is not to do that.\n\n- The parameter substitution flag (D) abbreviates directories in parameters\n  using the familiar ~ form.\n\n- The parameter substitution flag (g) can take delimited arguments o, e and\n  c to provide echo- and print-style expansion: (g::) provides basic\n  echo-style expansion; (g:e:) provides the extended capabilities of\n  print; (g:o:) provides octal escapes without a leading zero; (g:c:)\n  additionally expands \"^c\" style control characters as for bindkey.\n  Options may be combined, e.g. (g:eoc:).\n\n- The parameter substitution flag (m) indicates that string lengths used\n  calculated by the (l) and (r) flags or the # operator should take\n  account of the printing width of characters in multibyte mode, whether\n  0, 1 or more.  (mm) causes printing characters to count as 1 and\n  non-printing characters to count as 0.\n\n- The parameter substitution flag (q-) picks the most minimal way of\n  quoting the parameter words, to make the result as readable as possible.\n\n- The parameter substitution flag (Z), a variant of (z), takes arguments\n  describing how to split a variable using shell syntax: (Z:c:) parses\n  comments as strings (the default is not to treat comment characters\n  specially); (Z:C:) parses comments and strips them; (Z:n:) treats\n  newlines as ordinary whitespace (the default is to turn unquoted\n  newlines into semicolons; this is now documented).\n\n- The parameter subscript flag (e) forces the argument to be treated\n  as a string, never a pattern, e.g. ${array[(ie)*]} looks for the\n  index of the array element containing the literal string \"*\".\n\n- The operators :| and :* in parameter substitution allow for array\n  subtraction and intersection in the form ${name:|array}. With the :|\n  operator, all entries in $name that are also in $array will be removed\n  from the substitution. Conversely for the :* operation only the\n  entries that are in both arrays will be substituted.\n\n- Numeric expansions can have a positive or negative step\n  e.g. \"{3..9..2}\".  Negative start and end of ranges are also now\n  supported.\n\n- =(<<<...) is optimised to eliminate the need for an external process.\n  It writes the given string to a file and substitutes the name on the\n  command line.\n\n- The redirection operations \"{myfd}>file\" and \"{myfd}>&-\" open and\n  close a new file descriptor (at least 10) contained in the shell\n  variable myfd, which can be written to with \">&$myfd\".  This allows\n  arbitrary file descriptors rather than the explicit range 0 to 9.\n\n- New prompt escapes:\n  %x and %I show source file and line number, useful in $PS4 (the\n    existing %N and %i show names and lines in the execution environment\n    rather than the source file).\n  %F, %K, %f, %k allow colouring of prompts both using ANSI colour names\n    and values supported by individual terminal emulators.\n\nBuiltins and shell functions\n-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n- Directory-changing builtins take an option -q to suppress side\n  effects such as printing directories or calling the chpwd hook functions.\n\n- Various enhancements have been made to traps:\n  - The option DEBUG_BEFORE_CMD is on by default, so DEBUG traps\n    can be used to debug code about to be run\n  - $ZSH_DEBUG_CMD in such a trap gives the code to be run\n  - \"setopt ERR_EXIT\" in a DEBUG trap causes the code not to be executed\n\n- The \"fc\" builtin is now more useful non-interactively.\n\nShell variables (parameters)\n-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n\n- New variables:\n  CORRECT_IGNORE can be set to a pattern to be ignored in spelling correction.\n  KEYBOARD_HACK defines characters to be ignored if typed unmatched at\n    the end of the line (an extension of the SUN_KEYBOARD_HACK option,\n    but note that setting the option will override the variable).\n  ZSH_PATCHLEVEL provides a unique indication of the code compiled to\n    make the shell, even between releases.\n  ZSH_SUBSHELL indicates the subshell level, incremented once per fork, at\n    which the code is being run.\n\nOptions\n-+-+-+-\n\n- New options:\n  COMBINING_CHARS: assume that the terminal displays combining\n    characters correctly.  The shell cannot determine this by itself,\n    hence the option.  This is highly recommended for MacOS X where\n    file names are stored with accented characters split into basic\n    and combining characters.\n  DEBUG_BEFORE_CMD (on by default): execute debug traps before the\n    code they refer to.  This is a change of the default behaviour\n    as the new behaviour is much more useful.\n  HASH_EXECUTABLES_ONLY: don't insert non-executable files into the\n    command hash used e.g. by completion; this is optional as the\n    resulting behaviour may be very slow on network paths.\n  HIST_FCNTL_LOCK: Use the system's file locking mechanism instead\n    of an ad-hoc mechanism for locking history files.\n  HIST_LEX_WORDS: Perform lexical analysis on history lines read from\n    files, so the words are more accurately determined.  May be very slow.\n  HIST_SAVE_BY_COPY (on by default): if unset, write a history file in\n    place by truncating the old one.  Only needs to be turned off in\n    special circumstances.\n  MULTIBYTE (on by default if available): both variables and editor\n    command lines are treated as sequences of multibyte characters\n    rather than raw bytes depending on the locale.  May be turned off\n    within functions to perform bytewise operations.\n  MULTI_FUNCDEF (on by default): \"foo bar () { ... }\" defines two\n    functions.  This is often found to be confusing and bug-prone,\n    so you may want to unset it.\n  PATH_SCRIPT: search the path for a script specified as the first\n    argument to the shell on invocation.\n  POSIX_ALIASES: reserved words are not candidates for alias expansion.\n  POSIX_CD: make directory changing more POSIX-compatible.\n  POSIX_JOBS: make job control more POSIX compliant.\n  POSIX_STRINGS: $'...\\0...' always processes \\0 as a NULL, but if the\n    option is set the remainder of the string is ignored.\n  POSIX_TRAPS: EXIT traps are not executed on return from shell functions.\n  PROMPT_SP: improves display of lines not ending with newlines when\n    PROMPT_CR is in effect.\n  SOURCE_TRACE: print information as files are executed with \".\",\n    \"source\", or as startup or shutdown files.\n\nLine editor\n-+-+-+-+-+-\n\n- Supports multibyte characters, including characters wider than one\n  screen cell and (with the COMBINING_CHARS option) combining characters.\n\n- New builtin widgets:\n  arguments-base: allow non-decimal numeric arguments\n  history-incremental-pattern-search-{backward,forward}: support\n    patterns in incremental searches.\n\n- New special variables:\n  region_highlight allows arbitrary highlighting of parts of the\n    command line; it is maintained dynamically.\n  UNDO_CHANGE_NO gives a unique record of the current change state of\n    the command line, for undoing back to a particular point using\n    the undo widget.\n  zle_highlight provides master control of highlighting for special\n    modes, e.g. unprintable characters.\n  ZLE_LINE_ABORTED records an editor line that was aborted by an error\n    or C-g.  It can be used to recover aborted lines.\n  ZLE_STATE give miscellaneous information, currently whether the line\n    editor is in insert or overwrite mode.\n\n- The undo widget takes an argument, a previous value of $UNDO_CHANGE_NO.\n\nCompletion\n-+-+-+-+-+\n\n- Many new and enhanced completion functions\n\n- New styles:\n  accept-exact-dirs:  suppress path expansion of directory components\n    that already exist, speeding up completion significantly on slow\n    network directories.\n  path-completion:  can be used to suppress directory components before\n    the current one completely, so e.g. /u/b<TAB> only completes after the\n    \"b\", not the \"u\".\n\n- New special variables:\n  ZLE_REMOVE_SUFFIX_CHARS, ZLE_SPACE_SUFFIX_CHARS provide enhanced\n    flexibility over suffix removal.\n\n- Matching control, typically handled with the matcher-list style,\n  supports named character ranges, such as [:upper:], wherever\n  ranges were allowed, for example 'm:{[:upper:]}={[:lower:]}'.\n  However, matching control does not yet handle multibyte characters\n  properly, so this is currently limited to ASCII.\n\nSyntax and compatibility\n-+-+-+-+-+-+-+-+-+-+-+-+\n\n- Substitutions of the form ${var:-\"$@\"} and ${var:+\"$@\"} now behave\n  much more like other shells when appropriate (e.g. with the\n  SH_WORD_SPLIT option).\n\n- Assignments within variable substitutions, such as ${var=value},\n  are also more compatible with other shells where appropriate.\n\n- The emulate command can now be passed an expression to be evaluated\n  in a \"sticky\" emulation, so that functions defined there always\n  behave in the appropriate emulation.\n\n- \"emulate sh\" and similar modes have improved compatibility with\n  respect to deciding whether the shell should exit on errors.\n\n- Signals now accept SIG as part of the name.\n\nModules\n-+-+-+-\n\n- Modules now present \"features\", specific builtins (b:), parameters\n  (p:), conditions (c:) and math functions (f:), allowing more control\n  over what is imported from a module.\n\n- The zsh/curses module provides access to the \"curses\" screen\n  manipulation package.\n\n- The zsh/datetime module has a calendar utility, although it is not\n  as robust as standalone calendar utilities.\n\n- The zsh/newuser module and associated functions has facilities for\n  setting up startup files for a first-time user.\n\n- The zsh/parameter module contains some new arrays to aid in tracing\n  of the shell's call stack: $funcsourcetrace and $funcfiletrace.\n\n- The zsh/parameter module provides $usergroups, an associative arrays\n  whose keys are the names of groups the current user belongs to, with\n  the group identifier as the corresponding value.\n\n- The zsh/system module has a zsystem builtin which provides file\n  locking and also a forward-compatible means for testing subcommands\n  supported.\n\nInternal improvements\n-+-+-+-+-+-+-+-+-+-+-\n\n- High resolution timestamps are used internally for certain\n  comparisons when available.\n\nAdd-on functions\n-+-+-+-+-+-+-+-+\n\n- The VCS_Info system provides a way of keeping track of the state\n  of numerous version control systems within the shell.\n\n- cdr etc.: change to a directory from a list that persists between\n  shell instances, with completion support.\n\n- regexp-replace replaces text in variables using regular expressions;\n  it may be used by zle function widgets based on the functions\n  replace-string and replace-string-again to provide regular expression\n  replacements in the line editor.\n\n\nChanges in 4.2 since version 4.2.0\n----------------------------------\n\n- The autoload and related builtins take options -k and -z to indicate\n  ksh or zsh autoloading style for given functions, making it possible\n  to mix and match.\n\n- Assignments to associative arrays can use the i and r index flags.\n  For example,\n    assoc[(i)alpha*]=bravo\n  sets the value for the element whose key matches the pattern `alpha*';\n    assoc[(r)activ*]=passive\n  sets the value for the element whose current value matches the pattern\n  `activ*'.\n\n- The glob qualifier F indicates a non-empty directory.  Hence *(F)\n  indicates all subdirectories with entries, *(/^F) means all\n  subdirectories with no entries.\n\n- fc -p and fc -P provide push/pop for the status of the shell's\n  history (both internal and using the history file).  With automatic\n  scoping (fc -ap) it becomes easy to use a temporary history in a\n  function.  This has been added to the calculator function zcalc to make\n  its internal history work more seamlessly.\n\n- A new `try block' and `always block' syntax has been introduced\n  to make it easier to ensure the shell runs important tidy-up code\n  in the event of an error.  It also runs after a break, continue, or\n  return, including a return forced by the ERR_RETURN option\n  (but not an exit, which is immediate).  The syntax is:\n    `{' try-block-list `}' `always' `{' always-block-list `}'\n  where no newline or semicolon may appear between `}' and `always'.\n  This is compatible with all previous valid zsh syntax as an `always'\n  at that point used to be a syntax error.  For example,\n    { echo Code run in current shell } always { echo Tidy-up code }\n\n- A new zle widget reset-prompt has been added to re-expand the current\n  prompt.  Changes to the variable in use as well as changes in its\n  expansions are both taken into account.  The same effect is now forced by\n  a job change notification, making the %j prompt escape and %(j..) ternary\n  expression more useful.\n\n- The zftp module supports ports following the hostname in the normal suffix\n  notation, `host:port'.  This requires IPv6 colon-style addresses to be\n  specified in suitably quoted square brackets, for example:\n\n  zftp open '[f000::baaa]'\n  zftp open '[f000::baaa]:ftp'\n\n  (the two are equivalent).\n\n- Special traps, those that don't correspond to signals, i.e. ZERR, DEBUG\n  and EXIT are no longer executed inside other traps.  This caused\n  unnecessary confusion if, for example, both DEBUG and EXIT traps\n  were set.  The new behaviour is more compatible with other shells.\n\n- New option TRAPS_ASYNC which if set allows traps to run while the\n  shell is waiting for a child process.  This is the traditional zsh\n  behaviour; POSIX requires the option to be unset.  In sh/ksh\n  compatibility mode the option is turned off by default and the option\n  letter -T turns it on, for compatibility with FreeBSD sh.\n\n- New WIDGETSTYLE, WIDGETFUNC parameters in ZLE.\n\n- Glob qualifier (+func) is shorthand for (e:func:) (calls a command,\n  typically a shell function, with no argument).\n\n\nNew features between zsh versions 4.0 and 4.2\n---------------------------------------------\n\nConfiguration:\n- upgraded to use autoconf post-2.50\n- improved compatibility with other shells through shell options,\n  builtin arguments and improved builtin option parsing\n\nSyntax and builtins:\n- new printf builtin\n- `+=' to append to parameters which works for scalars, arrays and (with\n  pairs) associative arrays.\n- enhanced multiple parameter `for' loops:\n    for key value in key1 value1 key2 value2 ...\n  maintaining full compatibility with POSIX syntax.\n- Suffix aliases allow the shell to run a command on a file by suffix,\n  e.g `alias -s ps=gv' makes `foo.ps' execute `gv foo.ps'.  Supplied\n  function zsh-mime-setup uses existing mailcap and mime.types files\n  to set up suitable aliases.  Supplied function pick-web-browser is\n  suitable for finding a browser to show .html etc. files by suffix alias.\n- new option `no_case_glob' for case-insensitive globbing.\n\nAdd-on modules and functions:\n- zsh/datetime modules makes date formatting and seconds since EPOCH\n  available inside the shell.\n- zsh/net/tcp module provides builtin interface to TCP through ztcp\n  builtin.  Function suite for interactive and script use with expect-style\n  pattern matching.\n- zsh/net/socket module provides zsocket builtin.\n- zcalc calculator function with full line editing.\n- builtin interface to pcre library\n- zsh/zselect module provides zselect builtin as interface to select\n  system call\n\nCompletion system:\n- general improvements to command and context support, low-level functions,\n  display code.\n- in verbose mode, matches with the same description are grouped\n- highly configurable completions for values of specific parameters,\n  specific redirections for specific commands\n- support for bash completion functions (typically zsh native functions are\n  more powerful where available)\n- New completions provided for (some of these may be in later 4.0\n  releases):  valgrind, tidy, texinfo, infocmp, Java classes, larch, limit,\n  locale parameters, netcat, mysqldiff, mt, lsof, elinks, ant, debchange\n  (dch), email addresses, file system types, Perforce, xsltproc.\n  Plus many others.\n\nLine editor:\n- special parameters $PREDISPLAY, $POSTDISPLAY available in function\n  widgets to configure uneditable text (for narrowing)\n- recursive editing\n- supplied widgets read-from-minibuffer, replace-string use these features\n  (more intuitive prompting and argument reading than 4.0)\n- access to killed text via $CUTBUFFER and $killring\n- supplied highly configurable word widgets forward-word-match etc., can\n  set what constitutes a word interactively or in startup script\n  (implement bash-style behaviour, replacing previous bash-* word widgets)\n- interface to incremental search via $LASTSEARCH\n- better handling of keymaps in zle and widgets\n- better support for output from user-defined widgets while zle is active\n- tetris game which runs entirely in zle\n- several other contributed widgets\n\nLocal internal improvements:\n- disowned jobs are automatically restarted\n- \\u and \\U print escapes for Unicode\n- read -d <delimiter> allows a custom line ending.\n- read -t <timeout>.\n- line numbers in error messages and $PS4 output are more consistent\n- `=prog' expands only paths, no longer aliases for consistency\n- job display in prompts; `jobs' command output can be piped\n- prompts: new $RPROMPT2, %^, %j, %y, enhanced %{, %}, %_.\n- rand48() function in zsh/mathfunc for better randomness in arithmetic\n  (if the corresponding math library function is present)\n- $SECONDS parameter can be made floating point via `typeset -F SECONDS'\n  for better timing accuracy\n- improvements to command line history mechanism\n- job table is dynamically sized, preventing overflow (typically seen\n  previously in complex completions).\n- many bugfixes\n\n\nNew features in zsh version 4.0.1\n---------------------------------\n\nCompared with 3.1.9, there are mostly incremental improvements to\n  - the new completion system --- more functions, completers, styles...\n  - the line editor\n  - handling of signals and traps\n  - the configuration system, particularly for modules\n  - Cygwin support (now essentially complete)\n  - arithmetic evaluation\n  - the zpty (pseudoterminal handling) module\n  - the test suite\nplus various bug fixes and compatibility improvements.\n\nThe alias modules (zle.so as an alias for zsh/zle.so, etc.) have been\nremoved; use `zmodload -A' to load modules under other names.  This is\nirrelevant if you are upgrading from 3.0.\n\nCompared with the 3.0 series of releases (the last stable set), the most\nsignificant of a large number of improvements in the shell are:\n  - Dynamically loadable modules with hierarchical naming system\n  - Shell functions as editor functions, with much additional builtin support\n  - Incredibly rich new completion system; just needs a single\n    initialization command to provide completion for all sorts of commands\n    and contexts\n  - Associative arrays\n  - Lots of new features in parameter substitution and globbing; more\n    logical handling of nested parameter substitutions\n  - Rewritten pattern-matching (globbing) code supports approximate\n    and case-insensitive matching and backreferences\n  - Various custom modules for pty's, FTP, special parameters, etc.\n  - Rewrites of many internal parts of the code: execution code to\n    provide compilation to internal representation, pattern matching\n  - Floating point arithmetic and mathematical functions module\n  - A test suite\n  - Various new options for compatibility with this, that and the other\nSee the 3.1.x changes below for more detail.\n\n\nNew features in zsh version 3.1.8 and 3.1.9\n-------------------------------------------\nThese are primarily bug-fix versions.  There are only a few user-visible\nchanges.\n - Array slices ${array[a,b]} with b < a now correctly have zero length.\n\n\nNew features in zsh version 3.1.7\n---------------------------------\nFurther enhancements to new completion system:\n - Comprehensive context-sensitive configuration via `styles', which\n   can be set by the menu-driven front end in compinstall\n - General mechanism for setting patterns to be ignored in a completion;\n   overriding  of patterns to be matched for functions\n - New completers: _prefix to complete word before cursor, _ignored\n   to complete using words so far ignored (like $fignore but more\n   powerful), _history to complete words from shell history\n - Multiple use of completers with different options, similarly splitting\n   of different types of completion (`tags') so they are considered with\n   different styles\n - Many more supplied completions for standard commands which work out of\n   the box, and better handling of command line options/arguments which\n   behave in the usual way\n - $fpath now set up to use installed functions by default; functions\n   can be loaded just by `autoload -U compinit; compinit'\n - Much improved handling of nested quoting and nested braces\n - New LIST_PACKED and LIST_ROWS_FIRST completion options and corresponding\n   styles\n - compctl library separated out (frozen but still supported)\n - User-friendly introduction available at zsh website\n   http://zsh.sourceforge.net/\n\nAdditions to complist listing library (coloured completion and menu\nselection):\n - Listings can be shown page by page (are by default for new completion)\n - Menu selection allows full up and down scrolling of long lists\n\nOther editing features:\n - new parameters $PENDING, $MARK, $BUFFERLINES\n - Easy display of a prompt from within an editing widget\n\nCode parsing, storing and execution:\n - Completely new system of storing code internally, greatly optimised\n - Much less memory for shell functions etc.\n - Can compile shell functions to .zwc `wordcode' functions for fast\n   loading\n - Can create `digest' files of entire directories in .zwc format\n\nParameters:\n - Floating point support added, similar to ksh93, `typeset -F' and\n   `typeset -E' declare floating point variables; usual C/Fortran-like\n   rules for integer/float conversion\n - Mathematical library zsh/mathfunc contains all the standard mathematical\n   functions for use in arithmetical expressions\n - Improved parsing of arithmetical expressions and better error messages\n - Special parameters can be made local\n - `typeset -h' hides specialness of parameters, either as parameter\n   attribute or when declaring new local variable\n - Local parameters can now be exported as in other shells; new option\n   GLOBAL_EXPORTS on by default provides old behaviour that `typeset -x'\n   referred to global parameters.\n - zsh/parameter module enhanced: now needed for new completion; parameters\n   provided have `-h' flag set so that they are hidden by `typeset', so\n   that existing functions don't need to be changed\n - Quotes can be stripped from parameter values with ${(Q)...}, providing\n   reverse of ${(q...)...} facility\n\nGlobbing and pattern matching:\n - Pattern matching rewritten for efficiency\n - Supports `backreferences', i.e. extracting parenthesised chunks of\n   matches, e.g.\n     [[ $foo = (#b)(*/)[^/]* ]]\n   stores the part of $foo up to the last / in $match[1] and the indexes of\n   the match in $mbegin[1], $mend[1].  (#m) is also available to set $MATCH\n   to the entire match and corresponding $MBEGIN, $MEND:  useful in\n   parameter substitutions like ${.../.../...}.\n - (#s) and (#e) match start and end of pattern like ^ and $ in regular\n   expression, useful in complex expressions such as ((#s)|/)dirname((#e)|/)\n   and in parameter expressions.\n\n - Depth-first/last listing of recursive glob lists\n\nFunctions etc.:\n - `autoload -X' inside a function body instructs the shell to\n   bootstrap the function at that point\n - `autoload +X fn' says load the function fn but don't execute it\n - Prompt `themes' make customization of prompts easier\n\nModules:\n - New hierarchical naming scheme for modules; supplied modules go into\n   zsh subdirectory, so zle becomes zsh/zle etc.; aliases supplied for\n   compatibility for existing code, but the new format should be used in\n   future.\n - zmodload is more consistent between dynamically and statically linked\n   shells\n - zsh/zftp and its function suite support multiple sessions (zfsession\n   command); zftransfer allows transfer of files between two ftp sessions\n   with no local file; use styles for e.g. progress style; IPv6 supported;\n   recursive put `zfput -r' for uploads\n - zsh/zpty module creates pseudoterminal and allows builtin `expect'-like\n   behaviour\n\nOther:\n - Test suite, not yet complete (`make test')\n - use of Linux task limits\n - Many fixes including output redirection with `setopt xtrace' and\n   other redirection fixes; NIS+ problem.\n - Better null-command behaviour in sh and csh emulation\n - Internal memory usage optimisations\n\n\nNew features in zsh version 3.1.6 (beta version)\n------------------------------------------------\nNote also the changes for 3.0.6, which include changes between 3.1.5. and\n3.1.6.\n\nNew completion system via shell functions; massive degree of\nprogrammability and configurability:\n - ready-made function suite to use, see zshcompsys(1)\n - approximate completion and spelling correction via completion\n - control over matching for case-independence, partial word completion, etc.\n - menu selection:  choose a completion by moving the cursor\n - coloured completion lists\n - completion of filenames in quotes is now more reliable; splitting\n   quoted strings into command arguments is also possible.\n\nOther editing changes:\n  - enhancements to function/editing interface:  new parameters, numeric\n    arguments, string argument passing, reading keys from widgets.\n  - the old history-search-{back,for}ward behaviour and bindings have\n    returned (up to minor details).\n  - BASH_AUTO_LIST option to show completion list only on second key press.\n  - the ZBEEP parameter gives a string to output instead of beeping,\n    allowing you to have a visual bell.\n\nHistory changes: new options HIST_NO_FUNCTIONS, HIST_EXPIRE_DUPS_FIRST,\nHIST_FIND_NO_DUPS, HIST_IGNORE_ALL_DUPS, INC_APPEND_HISTORY,\nHIST_SAVE_NO_DUPS, SHARE_HISTORY, allow better control of when history is\nread and written and how duplicates are handled.  New format for history\nsaves.\n\nAssociative arrays plus enhanced parameter substitutions to retrieve keys\nand values.\n\nGlobbing changes:\n  - Case-insensitive and approximate globbing.\n  - Ordering and indexing of globbing matches, e.g. *(om[1]) picks\n    most recently modified file.\n  - General file mode qualifier with chmod(1)-like syntax, e.g. *(f:u+wx:)\n\nNew loadable modules:\n  - zftp, plus associated function suite, for turning your zsh session\n    into an FTP session too\n  - parameter, for examining and altering shell hash tables via an\n    associative array interface.\n  - mapfile, for reading and writing external files via an associative\n    array interface.\n\nDebugging and prompt enhancements:\n  - $PS4 can contain %i for $LINENO as well as %N for script or function\n    names (default PS4 changed), also %_ for current shell structure\n    executing;\n  - Prompt truncation %<...< is now more flexible: it applies to a\n    whole section of the prompt, not just one escape.  You need to put\n    %<< after the truncated escape to get the old behaviour.\n  - %20(l.yes.no) in prompts prints yes if at least 20 characters have\n    been output, else no (e.g. for outputting extra newlines).\n\nParameter and expansion changes\n  - `typeset -t MYPATH mypath' creates tied path/PATH-like variables\n  - `typeset -g' allows operations on parameters without making them local\n  - New expansions\n    - ${(t)param} prints type information for $param\n    - ${(P)param} treats value of $param as the name of a param to\n      substitute\n    - ${foo:q} can quote replaced parameter text from expansion\n    - ${foo/old/new} substitution, like bash; also (S) flag for shortest\n      match\n    - $foo[(b.2.i)bar] starts searching $foo for bar starting at 2nd match\n\nBuiltin and function changes\n  - stat module: `stat -H hash foo' gives you e.g. $hash[mtime]\n  - `autoload -U' autoloads functions without alias expansion.\n\nOther new options:\n  - LOCAL_TRAPS allows signal traps to be local to functions (as in ksh).\n  - NO_RCS can now be turned on at any point in initialization files.\n  - NO_GLOBAL_RCS can force /etc/z* files after /etc/zshenv to be skipped.\n    (Please don't use this as an excuse to stuff more into /etc/zshenv!)\n  - Existing MAGIC_EQUAL_SUBST option is more useful; any argument containing\n    ...=~...:~... will perform filename expansion on the ~ (previously,\n    the string before `=' had to look like a parameter name).\n\nConfiguration changes:\n  - Generation of signal names should be more reliable\n  - Customizable installation of shell functions from distribution.\n\n\nNew features in zsh version 3.0.6\n---------------------------------\n\nMost of these changes are designed to improve compatibility with zsh\nversion 3.1.6, the latest development release.  However, this release also\nfixes all known Year 2000 (Y2K) bugs in zsh 3.0.\n\nHistory changes:\n  - whitespace between words is ignored in history searches.\n  - new option HIST_REDUCE_BLANKS removes extra whitespace in the stored\n    history.\n  - support for reading (but not writing) version 3.1.6 history files.\n\nGlobbing changes:\n  - the a, c, and m glob qualifiers can now test time in seconds.\n  - globbing of number ranges behaves more like character ranges in that\n    it can match a prefix of a number, e.g. `<1-5>*' matches 1, 2, 3, 4,\n    5, 17, 23skiddoo, 5986, etc., but not 6, 7, 8ball, 911, etc.\n\nParameter and expansion changes:\n  - expansion of ~ and other globbing flags via ${~param} do not depend\n    upon EXTENDED_GLOB (bug fix).\n  - nested parameter substitutions require braces (this was always the\n    documented behaviour, but previous parsers didn't enforce it).\n  - quote only nested expansion, e.g. ${(f)\"$(<file)\"} reads complete\n    `file', then splits lines into array.\n\nBuiltin and function changes:\n  - `typeset -U' works on the colon-array version of linked parameters.\n  - `typeset +f' and `functions +' output the names (only) of functions.\n  - `emulate -L' has the effect of `setopt localoptions'.\n  - in fn1() { local foo; unset foo; foo=bar; }, foo is restored at local\n    level, whereas if the `unset foo' appeared in a nested function it\n    would have been restored at global level, which was presumably wrong.\n  - `foo=bar >&file' is a redirection, not a NULLCMD.\n  - any single complex command, such as `case ... esac', parses as if\n    semicolon-terminated (bug fix).\n  - the shell function `preexec', if defined, is run after parsing each\n    command line but before executing the command.\n\nOther changes:\n  - the option PRINT_EIGHT_BIT causes zsh to emit raw bytes in prompts\n    and completion lists even if the system ctype(3) package says that\n    those bytes are not \"printable.\"\n\nDebugging enhancements:\n  - LINENO is now very much more useful in scripts and functions and is\n    reported correctly in most error messages.\n  - ERREXIT behaviour is now consistent with newer Bourne-like shells,\n    e.g. with respect to `if' tests that fail.\n\nConfiguration changes:\n  - Large file and 64-bit integers on 32-bit machines supported where\n    provided by OS.\n  - a few more system features, such as getpwnam/getpwuid, are tested for.\n\n\nNew features in zsh version 3.1 (beta version)\n----------------------------------------------\n\nOn most operating systems zsh can load binary modules dynamically at\nrun-time.  ZLE and the compctl builtin are now reside in a separate\nmodule which is loaded automatically on demand.\n\nfor ((expr; expr; expr)) do ... done loop syntax from AT&T ksh93 is\nnow supported.\n\nPOSIX globbing character classes ([:alnum:] etc.) are now supported.\n\nksh's case fall-through feature (;&) is supported.\n\nksh93's $'' quoting syntax is supported.\n\nRestricted mode is now supported.  This is controlled by the new option\nRESTRICTED (-r).\n\nNew options BARE_GLOB_QUAL, HIST_NO_FUNCTIONS (alias NO_LOG), KSH_GLOB,\nPRINT_EIGHT_BIT, PROMPT_BANG, PROMPT_PERCENT, RM_STAR_WAIT.\n\nOptions ALWAYS_LAST_PROMPT, APPEND_HISTORY, AUTO_LIST, AUTO_MENU,\nAUTO_PARAM_KEYS, AUTO_PARAM_SLASH, AUTO_REMOVE_SLASH, LIST_AMBIGUOUS\nand LIST_TYPES are now on by default.\n\nIn ZLE, arbitrarily many keymaps can be defined.  Multi-character\nkeybindings now work.\n\nCompletion can be performed within a brace expansion.\n\nEMACS-like universal-argument function.\n\n\nNew features in zsh version 3.0\n-------------------------------\n\nTrailing \"/\" in a glob pattern now works like in other shell thus it\ncan no longer be used as a shorthand for \"(/)\".\n\nMuch improved sh/ksh emulation.  When zsh is invoked as sh it mostly\nconforms to POSIX 1003.2.\n\nEnhanced parameter expansion features: new flags: A, @, e, W, p, f, F.\nExpansions can be nested.  For example,\n\"${${(M)${(f@)$(<builtin.pro)}:#char*}[2][(w)3]}\" expands to the third\nword of the second line of builtin.pro which begins with char.  See\nzshexpn(1) for the details.\n\n***/foo glob does recursive directory search following symbolic links.\n\nTraps defined by the trap builtin are now executed in the current shell\nenvironment and not as a shell function.  This means that $1 is not set\nto the signal number.  Of course the TRAPxxx functions continue working\nas before.\n\nTraps defined by the trap builtin are reset to their default values in\nsubshells.\n\nOption names can be prefixed by `no' to unset an option.\nsetopt no_option_name is the same as unsetopt option_name.\nThis change affects the output of the setopt and unsetopt\nbuiltins when these are invoked without arguments.  See\nthe zshoptions manual page for more explanation.\n\n!, {, } and [[ are now reserved words.  Things like [[-z $foo]] or {foo}\nshould not be used.  {foo} still works if the IGNORE_BRACES option is not\nset but this feature may be removed in the future.  [[ -z $foo ]] and\n{ foo } should be used instead.\n\nHOSTTYPE special parameter is removed.  The new OSTYPE, MACHTYPE and\nVENDOR parameters should be used instead.\n\nVERSION parameter is renamed to ZSH_VERSION\n\nexec now saves the history in interactive shells.  If you do not like this\nbehaviour you can alias exec to 'unset HISTFILE ; exec'.\n\n${~spec}, ${=spec} and ${^spec} used to toggle the effect of\nglobsubst/shwordsplit/rcexpandparam.  Now these force the corresponding\noption on. ~, = or ^ can be doubled to force the relevant option off for\nthe substitution.\n\nExplicitly requested word splitting like ${=spec} or ${(s:delim:)spec}\nwill be executed even if the substitution is double quoted.\n\nThe right-hand side of assignments are no longer globbed by default hence\nassignment foo=* will assign '*' as a value of foo.  Use the foo=( * )\narray assignment syntax to get the old behaviour.  Alternatively the\nGLOB_ASSIGN can be set to emulate the old behaviour but the usage of this\noption is strongly discouraged and this option may be completely removed in\nthe future.\n\nfoo=$bar no longer creates an array even if bar is an array.  Use\nfoo=( $bar ) or even better, foo=( \"$bar[@]\" ) instead.\n\nWhen foo is an array parameter ${#foo} will always return the length of the\narray even if the substitution is double quoted.  ${(c)#foo} should be used\nto get back the old behaviour.\n\nWhen the prompt_subst option is set prompts are fully expanded using\nparameter expansion, command substitution and arithmetic expansion.\nIn 2.5 backquote substitution was not performed in the prompts so this\nchange might cause problems in some startup scripts if ` is used literally\nin prompts.\n\nHistory substitution is now not performed if the history escape character\nappears in a single-quoted string.  This may break some interactive shell\nfunctions which use \\! in single-quoted strings.\n\nThe UID, EUID, GID, EGID parameters can be assigned now. The assignment\nexecutes the setuid(), seteuid(), setgid(), setegid() respectively.  On\nsystems where setuid and seteuid is not supported these functions are\nemulated using setreuid or setresuid which may result in a different\nbehaviour.\n\nAssigning the USERNAME parameter will call setuid(uid) where uid is the\nuser id of the specified user.\n\nThe privileged (-p) option is automatically set on invocation if euid != uid\nor egid != gid.  If this option is set no user startup files are sourced.\nThe shell will drop privileges when this option is unset by resetting its\neuid to uid and its egid to gid.\n\nThe =number substitution for accessing the directory stack is changed to\n~number to allow =command substitution when a command name begins with a\ndigit.\n\n<> is a redirection operator which opens the standard input for both\nreading and writing.  To match a number use <->.\n\nOption letters -1 and -C for PRINT_EXIT_VALUE and NO_CLOBBER are swapped:\n`set -C' sets NO_CLOBBER and `set -1' sets PRINT_EXIT_VALUE.\n\nAUTO_PUSHD behaviour is changed.  Now cd without arguments will always go\nto the $HOME directory even if AUTO_PUSHD is set and PUSHD_TO_HOME is not\nset.  If you preferred the old behaviour you can alias cd to pushd.\n\nIFS word splitting with SH_WORD_SPLIT and the splitting of the input in the\nread builtin has changed in cases when IFS contains characters other than\n<space>, <tab>, <newline>.  See the description of IFS in the zshparam\nmanual page for more details.\n\n\nNew features in zsh version 2.5\n-------------------------------\n\nGreatly expanded completion possibilities.  Programmable completion\nallows detailed control over what arguments of what commands can be\ncompleted to what.  See dots/zcomp in the distribution for examples.\n\nExpand filenames with ~ and = on the right hand side of parameter\nassignments.  New option MAGIC_EQUAL_SUBST to do it in all\nidentifier=expression arguments.\n\n${+name} becomes 1 or 0 if name is set or unset.  ${~spec} toggles\nGLOB_SUBST in substitution.  Parameter substitution takes lots\nof flags in the format ${(flags)name}.\n\nNew glob qualifiers for block/character special files, times in glob\nqualifiers can be in months, weeks, days, hours, minutes.  Qualifiers can\nwork on links or on what they point to.  Qualifiers separated by commas\nare or-ed.\n\nNew parameter substitution modifiers (fFwW) to repeat actions.  New\noption CSH_JUNKIE_HISTORY.\n\nNew line editor functions history-beginning-search-backward,\nhistory-beginning-search-forward, expand-or-complete-prefix, push-input,\npush-line-or-edit.\n\nAssign to part of a string, use qualifiers on string subscription with\n$foo[(qual)2,5]\n\nNew parameters: EGID, EUID, KEYTIMEOUT\n\nNew prompt escape sequence %_ to get constructs like for and while in\nthe secondary prompt.  %E in prompt clears to end of screen.\n\nConditional expressions in PROMPT and WATCHFMT.\n\nNew options ALWAYS_LAST_PROMPT, ALWAYS_TO_END, AUTO_PARAM_KEYS,\nCOMPLETE_ALIASES, COMPLETE_IN_WORD, CSH_JUNKIE_HISTORY, GLOB_SUBST,\nLIST_AMBIGUOUS, MAGIC_EQUAL_SUBST, NO_FLOW_CONTROL, PROMPT_SUBST\n\nNew option -m to many builtins makes arguments subject to pattern\nmatching.\n\nBindkey can now bind both key sequences and prefixes of those.  You can\nfor example bind ESC and function keys sending ESC sequences.\n\nAdditional options to read builtin to use in functions called by\ncompletion.\n\nNew options to print to sort arguments and print them in columns.\n\nSome additional resource limits can be specified.\n\nSome editor functions now work in the minibuffer.\n"
        },
        {
          "name": "README",
          "type": "blob",
          "size": 43.34375,
          "content": "-----------------\nTHE Z SHELL (ZSH)\n-----------------\n\nVersion\n-------\n\nThis is version 5.9 of the shell.  This is a security and feature release.\nThere are several visible improvements since 5.8.1, as well as bug fixes.\nAll zsh installations are encouraged to upgrade as soon as possible.\n\nNote in particular the changes highlighted under \"Incompatibilities since\n5.8.1\" below.  See NEWS for more information.\n\nInstalling Zsh\n--------------\n\nThe instructions for compiling zsh are in the file INSTALL.  You should\nalso check the file MACHINES in the top directory to see if there\nare any special instructions for your particular architecture.\n\nNote in particular the zsh/newuser module that guides new users through\nsetting basic shell options without the administrator's intervention.  This\nis turned on by default.  See the section AUTOMATIC NEW USER CONFIGURATION\nin INSTALL for configuration information.\n\nFeatures\n--------\n\nZsh is a shell with lots of features.  For a list of some of these, see the\nfile FEATURES, and for the latest changes see NEWS.  For more\ndetails, see the documentation.\n\nIncompatibilities since 5.9\n---------------------------\n\nThe line editor's default keymap is now the \"emacs\" keymap regardless of the\nvalue of the environment variables $VISUAL and $EDITOR.  This only affects you\nif your $VISUAL or $EDITOR environment variable is set to a value that\ncontains the string \"vi\".  To get the previous behaviour, add\n\n    bindkey -v\n\nor, if your $VISUAL and $EDITOR environment variables vary,\n\n    if [[ ${VISUAL} == *vi* || ${EDITOR} == *vi* ]]; then\n        bindkey -v\n    else\n        bindkey -e\n    fi\n\nto your .zshrc file.  These snippets are compatible with previous\nversions of the shell.\n\nThe ERR_EXIT and ERR_RETURN options were refined to be more self-\nconsistent and better aligned with the POSIX-2017 specification of\n`set -e`:\n\n  - Function calls or anonymous functions prefixed with `!` now never\n    trigger exit or return. Negated function calls or anonymous\n    functions used to trigger exit or return if ERR_EXIT or ERR_RETURN\n    was set and the function call or anonymous function returned a\n    zero exit status. Example:\n\n      setopt ERR_EXIT\n      f() { true }\n      ! f\n      echo \"This is printed only since 5.10.\"\n\n  - The `always` command now ignores ERR_EXIT and ERR_RETURN, as other\n    complex commands do, if its exit status comes from a command\n    executed while the option is ignored. Example:\n\n      setopt ERR_EXIT\n      { false && true } always { echo \"This was and still is printed.\" }\n      echo \"This is printed only since 5.10.\"\n\n  - Function calls, anonymous functions, and the `eval`, `.`, and\n    `source` builtins now never ignore ERR_EXIT and ERR_RETURN on\n    their own. These commands used to ignore ERR_EXIT and ERR_RETURN\n    if their result came from a complex command (if, for, ...) whose\n    result came from a command executed while the option is\n    ignored. Example:\n\n      setopt ERR_EXIT\n      f() { if true; then false && true; fi }\n      f\n      echo \"This is printed only prior to 5.10.\"\n\n  - The `&&` and `||` operators now always ignore ERR_RETURN in their\n    left operand. Until this version, the operators failed to ignored\n    ERR_RETURN in their left operand if they were executed as part of\n    a function call or an anonymous function that was itself executed\n    in a context where ERR_RETURN is ignored. Example:\n\n      setopt ERR_RETURN\n      f() { { false; echo \"This is printed only since 5.10.\" } || true }\n      if f; then true; fi\n\nPCRE support is now PCRE2.\n\nParameter names may begin with a \".\" and follow a relaxed implementation\nof ksh namespace syntax.  Expansion of such parameters must use braces,\nthat is, in ${.param.name} form.  Parameters so named are excluded from\n`typeset` and `set` output unless explicitly listed in `typeset` arguments\nor matched by a pattern with `typeset -m`.\n\nInterpretation of exclusion-patterns following alternation-patterns has\nbeen rationalised.  This means for example that `[[ ab = (|a*)~^(*b) ]]`\nis true where previously it was false.\n\nImprovements to handling of terminal colors and attributes in prompts\nmay change the behavior of some prompt sequences, most notably in\ncases where `esq=${(%)...}` is used to capture an escape sequence.\n\nThe `which` and `functions` commands output function definitions in a\nformat independent of the MULTI_FUNC_DEF option.\n\nMath context no longer interprets a leading underscore as part of a\nnumeric constant.\n\nNul and characters greater than \\x77 are correctly handled by `read -d`.\n\nReturn values of `sysopen` from the zsh/system module have been updated\nto be more similar to other commands in that module.\n\nTied parameters created with the zsh/db/gdbm module may not be re-tied\nas locals in nested function scope.  This prevents database corruption\nwhen a function scope ends.\n\nIncompatibilities between 5.8.1 and 5.9\n---------------------------------------\n\ncompinit: A \"y\" response to the \"Ignore ... and continue?\" prompt removes\ninsecure elements from the set of completion functions, where previously\nit ignored the compaudit result and included all elements.\n\nBuild-time change: The default value of the --enable-gdbm configure\nargument has changed from \"yes\" to \"no\".  Thus, the zsh/db/gdbm module will\nnot be built unless --enable-gdbm is passed explicitly.\n\nvcs_info quilt: The value of the 'quiltcommand' style used to be taken for the\nname of an external command.  Now it may also be a shell function.  Normal\ncommand word precedence rules apply, so if you have a function and a command\nwith the same name, the function will be used.\n\nThe \"function\" reserved word, used to define functions, gained a new -T option.\nThat affects syntaxes such as:\n\n1. \"function -T { ... }\".  It used to define a function named \"-T\".  It\nnow defines and executes an anonymous function with single-level tracing\nenabled --- same as \"function f { ... }; functions -T f; f\", but without\nnaming the function.\n\n2. \"function -T foo { ... }\".  It used to define two functions, named \"-T\"\nand \"foo\" (see the MULTI_FUNC_DEF option).  It now defines a function\n\"foo\" with tracing enabled.\n\n3. \"function -- { ... }\".  It used to define a function named \"--\".  It\nnow defines and executes an anonymous function.  The \"--\" is taken to be\nan end-of-options guard (same as \"ls --\").\n\nThe sh-compatible function definition syntax, \"f() { ... }\", is unchanged.\n\nThe time-out (-t) value given to zsh/system's `zsystem flock` command is\nnow limited to 2^30-1 seconds (= a little over 34 years).\n\nzstyle: For background, recall that the zstyle builtin associates styles with\nvalues for particular contexts, and when a context (such as ':foo:bar:baz') is\nmatched by multiple patterns (such as ':foo:*' and ':foo:bar:*'), the style's\nvalue for the more specific of the patterns is used.  In zsh 5.8 and earlier\nthe determination of which pattern is \"more specific\" used semantics slightly\ndifferent to those the documentation promised.  The implementation was changed\nto match the documentation.  The upshot of this is that if you set a single\nstyle in multiple contexts, zsh 5.9 may use the values set for a pattern other\nthan the one zsh 5.8 used.  For example, if you do\n    zstyle ':foo:bar:*'   style value1\n    zstyle ':foo:*:baz:*' style value2\nand the style is looked up under a context that both patterns match (e.g.,\n:foo:bar:baz:qux), zsh 5.9 will use value2 -- which is consistent with the\ndocumentation of both 5.8 and 5.9 -- but zsh 5.8 will use value1.  If this\naffects you, make the implied colons in the first pattern explicit, as in:\n    zstyle ':foo:bar:*:*' style value1\n    zstyle ':foo:*:baz:*' style value2\nThis will use value1 in both 5.8 and 5.9.\n\nElements of the region_highlight array have gained a fourth space-separated\nfield.  Code written against 5.9 that sets the new field may break under 5.8:\nfor example, the element \"0 20 bold memo=foo\", which is valid under 5.9, would\nnot work under 5.8.  (Under the hood, 5.8 does not recognize the space as\nterminating the highlighting specification.)  On the other hand, code that does\nnot set the new, fourth field will continue to work under both 5.8 and 5.9.\n(As it happens, adding a comma after \"bold\" will make both 5.8 and 5.9 do the\nright thing, but this should be viewed as an unsupported hack.)\n\nThe XTRACE option is now disabled while running user-defined completion\nwidgets.  See NEWS.\n\nemulate sh: When zsh emulates sh, the final command in a pipeline is now run in\na subshell.  This differs from the behavior in the native (zsh) mode, but is\nconsistent with most other sh implementations.\n\nThe export and readonly builtins now ignore the -p option when there are\noperands given and POSIX_BUILTINS is enabled. This more closely matches the\nbehaviour of bash and ksh.\n\ngetopts now calculates OPTIND in a similar manner to other shells when the\nPOSIX_BUILTINS option is enabled.\n\nIgnored-signal traps are now inherited by subshells when the POSIX_TRAPS\noption is enabled.\n\nemulate sh: Inf and NaN are now treated as parameter names in arithmetic\ncontext when zsh is emulating sh.\n\nThe ${name:offset:length} expansion syntax now behaves more similarly to\nother shells in that the offset and length are applied as array indices\nprior to scalar conversion in e.g. \"${*:0:2}\".\n\nIncompatibilities between 5.7.1 and 5.8.1\n-----------------------------------------\n\nThe history expansion !:1:t2 used to be interpreted such that the 2\nwas a separate character added after the history expansion.  Now\nit is an argument to the :t modifier.\n\nFor example\n\n% echo /my/interesting/path\n% echo !:1:t2\n\nused to echo \"path2\", but now echoes \"interesting/path\".\n\nThe behaviour of :h has similarly changed.\n\nThe behaviour has also changed in forms such as ${foo:t2) and *(:t2),\nbut in those cases the previous behaviour was not meaningful.\n\nThe vcs_info function VCS_INFO_quilt-dirfind now returns a string value\nby setting $REPLY.  Previously it printed the value to standard output.\nThis only affects you if you override that function in your dotfiles.\n\nThe cd and chdir builtins no longer interpret operands like -1 and +2 as\nstack entries when POSIX_CD is enabled.\n\nDropping privileges with `unsetopt privileged` may fail (with an error\nmessage) on some older and uncommon platforms due to library dependency\nchanges made in the course of fixing CVE-2019-20044.  Please report this\nto the zsh-workers mailing list if your system is affected.  See NEWS for\nmore.\n\nPROMPT_SUBST expansion is no longer performed on arguments to prompt-\nexpansion sequences such as %F.\n\nIncompatibilities between 5.6.2 and 5.7.1\n-----------------------------------------\n\n1) vcs_info git: The gen-unapplied-string hook receives the patches in\norder (next to be applied first).  This is consistent with the hg\nbackend and with one of two contradictory claims in the documentation\n(the other one has been corrected).  In zsh through 5.6.2, the patches\nwere passed in reverse order, next to be applied being last in the\narray.\n\nThe gen-applied-string hook is unaffected; it still receives the patches in\nreverse order, from last applied to first applied.\n\n2) The option NO_UNSET now also applies when reading values from\nvariables without a preceding '$' sign in shell arithmetic expansion\nand in the double-parentheses and 'let' arithmetic commands.\n\n3) _alternative now correctly handles the same (...) action syntax as\n_arguments; this may necessitate quoting/escaping in calls to _alternative\nand _regex_arguments that wasn't previously required.  See\nhttps://zsh.org/workers/48414 (commit zsh-5.8-348-g2c000ee7b) for details\nand an example.\n\nIncompatibilities between 5.5.1 and 5.6.2\n-----------------------------------------\n\nThe completion helper _remote_files, typically used after a hostname\nwith scp-style completion, now uses remote-files instead of files as a\ntag.  This makes it easier to restrict completions with the tag-order\nstyle.\n\nIncompatibilities between 5.4.2 and 5.5.1\n-----------------------------------------\n\n1) The default build-time maximum nested function depth has been\ndecreased from 1000 to 500 based on user experience.  However,\nit can now be changed at run time via the variable FUNCNEST.\nIf you previously configured the shell to set a different value,\nor to remove the check, this is now reflected in the default\nvalue of the variable.\n\n2) The syntax\n\nfoo=([key]=value)\n\ncan be used to set elements of arrays and associative arrays.  In the\nunlikely event that you need to set an array by matching files using a\npattern that starts with a character range followed by '=', you need to\nquote the '=', e.g.:\n\nfoo=([aeiou]\\=vowel)\n\nThis is only required for array values contained within parentheses;\ncommand line expansion for normal arguments has not changed.\n\n3) The syntax\n\n[[ -o foo ]]\n\nwhere foo is not the name of a shell option (with optional underscores\nand optional \"no\" prefix) used to be treated as a syntax error, i.e.,\nthe enclosing command line or file were aborted.  It now emits a warning\nand returns a non-zero exit code.  For further details, see the\ndocumentation of the -o switch in the chapter \"Conditional Expressions\"\nin the zshmisc(1) manual.\n\n\nIncompatibilities between 5.3.1 and 5.4.2\n-----------------------------------------\n\n1) The default behaviour of code like the following has changed:\n\n  alias foo='noglob foo'\n  foo() { print function body; }\n\nWhen this is encountered in a start-up file, or other place where input\nwas read line by line, \"foo\" is in command position and is expanded as\nan alias before the function definition takes place.  In previous\nversions of the shell, this caused two functions \"noglob\" and \"foo\" to\nbe defined.  Any expansion of an alias in a function definition is\nnearly always an unintended effect, as well as hard to detect, so has\nbeen made an error.  (The option setting NO_MULTI_FUNC_DEF turned this\ncase into an error, but did not help with other cases and is off by\ndefault.)  The alternative, of not expanding the alias, was rejected as\nit was more difficult to achieve in the parser and also would silently\nchange the shell's behaviour between versions.  A new option,\nALIAS_FUNC_DEF, has been added, which can be set to make the shell\nbehave as in previous versions.  It is in any case recommended to use\nthe \"function\" keyword, as aliases are not expanded afterwards.\n\n2) It was an undocumented, and largely useless, feature that a function\nautoloaded with an absolute path was searched for along the normal fpath\n(as if the leading / was missing) and, if found, loaded under the full\nname including the leading slash.  This has been replaced with the more\nuseful feature that the function is searched for only at the given\nabsolute path; the name of the function is the base name of the file.\nNote that functions including a non-leading / behave as before,\ne.g. if `dir/name' is found anywhere under a directory in $fpath it is\nloaded as a function named `dir/name'.\n\n3) vcs_info: When neither a set-patch-format nor a gen-applied-string\n(resp. gen-unapplied-string) hook is set, vcs_info now '%'-escapes the\napplied-string (resp. unapplied-string) before interpolating it into the\npatch-format string, to prevent literal `%' signs in the interpolated\nvalue from being interpreted as prompt escape sequences.  If you use\n${vcs_info_msg_0_} in a context other than the shell prompt, you may need\nto undo the escaping with:\n\n    print -v vcs_info_msg_0_ -Pr -- \"${vcs_info_msg_0_}\"\n\nThis is also needed if $vcs_info_msg_0_ is used to set $psvar.\n\n4) functions executed by ZLE widgets no longer have their standard input\nclosed, but redirected from /dev/null instead. That still guards\nagainst user defined widgets inadvertently reading from the tty device,\nand addresses the antisocial behaviour of running a command with its\nstdin closed.\n\n5) [New between 5.4.1 and 5.4.2] In previous versions of the shell, the\nfollowing code:\n\n    () { setopt err_return; false; echo 'oh no' } && true\n\nprinted \"oh no\", as the ERR_RETURN behaviour was suppressed when\na function was executed on the left hand side of an \"&&\" list.  This was\nundocumented and inconvenient as it is generally more useful to consider\nexecution within a function in isolation from its environment.  The shell\nnow returns from the function on executing `false'.  (This is general\nto all functions; an anonymous function is shown here for compactness.)\n\n\nIncompatibilities between 5.0.8 and 5.3\n----------------------------------------\n\n1) In character classes delimited by \"[\" and \"]\" within patterns, whether\nused for filename generation (globbing) or other forms of pattern\nmatching, it used not to be possible to quote \"-\" when used for a range,\nor \"^\" and \"!\" when used for negating a character set.  The characters can\nnow be quoted by any of the standard shell means, but note that\nthe \"[\" and \"]\" must not be quoted.  For example,\n\n  [[ $a = ['a-z'] ]]\n\nmatches if the variable a contains just one of the characters \"a\", \"-\"\nor \"z\" only.  Previously this would have matched any lower case ASCII\nletter.  Note therefore the useful fact that\n\n  [[ $a = [\"$cset\"] ]]\n\nmatches any character contained in the variable \"cset\".  A consequence\nof this change is that variables that should have active ranges need\n(with default zsh options) to be indicated explicitly, e.g.\n\n  cset=\"a-z\"\n  [[ b = [${~cset}] ]]\n\nThe \"~\" causes the \"-\" character to be active.  In sh emulation the\n\"~\" is unnecessary in this example and double quotes must be used to\nsuppress the range behaviour of the \"-\".\n\n2) The first argument to 'repeat' is now evaluated as an arithmetic\nexpression.  It was always documented to be an arithmetic expression, but\nuntil now the decimal integer at the start of the value was used and the\nremainder of the value discarded.  This could lead to different behaviour\nif the argument contains non-numeric characters, or if the argument has\nleading zeroes and the OCTAL_ZEROES option is set.\n\n3) For some time the shell has had a POSIX_TRAPS option which determines\nwhether the EXIT trap has POSIX behaviour (the trap is only run at shell\nexit) or traditional zsh behaviour (the trap is run once and discarded\nwhen the enclosing function or shell exits, whichever happens first).\nThe use of this option has now been made \"sticky\" on the EXIT trap ---\nin other words, the setting of the option at the point where the trap is\nset now determines whether the trap has POSIX or traditional zsh\nbehaviour.  This means that changing the option after the trap was set\nno longer has any effect.\n\nOther aspects of EXIT trap handling have not changed --- there is still\nonly one EXIT trap at any point in a programme, so it is not generally\nuseful to combine POSIX and non-POSIX behaviour in the same script.\n\n4) There was an undocumented feature dating from the early days of zsh\nthat glob qualifiers consisting only of the digits 0 to 7 were treated\nas an octal file mode to \"and\" with the modes of files being tested.\nThis has been removed in order to be more sensitive to syntax errors.\nThe \"f\" qualifier has for many years been the documented way of testing\nfile modes; it allows the \"and\" test (\"*(f+1)\" is the documented\nequivalent of \"*(1)\") as well as many other forms.\n\n5) The completion helper function _arguments now escapes both backslashes\nand colons in the values of option arguments when populating the $opt_args\nassociative array.  Previously, colons were escaped with a backslash but\nbackslashes were not themselves escaped with a backslash, which lead to\nambiguity: '-x foo\\:bar' (one argument with a backslashed colon) and\n'-x foo\\\\ bar' (two arguments, and the first one ends in a backslash) would\nboth set $opt_args[-x] to the same value.  This example assumes the -x\noption's spec declared two arguments, as in:\n    _arguments : -x:foo:${action}:bar:$action\n\nFor the more common case of non-repeatable options that take a single\nargument, completion functions now have to unescape not only colons but\nalso backslashes when obtaining the option's argument from $opt_args.\n\n6) Previously, if the function command_not_found_handler was run\nin place of a command-not-found error, and the function returned\nnon-zero status, zsh set the status to 127 and printed an error message\nanyway.  Now, the status from the handler is retained and no additional\nmessage is printed.  The main reasons for this change are that it was not\npossible to return a non-zero status to the parent shell from a command\nexecuted as a replacement, and the new implementation is more consistent\nwith other shells.\n\n7) The output of \"typeset -p\" (and synonyms) now takes into account the\nfunction scope and export state of each parameter.  Exported parameters\nare output as \"export\" commands unless the parameter is also local, and\nother parameters not local to the scope are output with the \"-g\" option.\nPreviously, only \"typeset\" commands were output, never using \"-g\".\n\n8) At spelling-correction prompt ($SPROMPT), where the choices offered are\n[nyae], previously <Enter> would be accepted to mean [N] and <Space> and\n<Tab> would be accepted to mean [Y].  Now <Space> and <Tab> are invalid\nchoices: typing either of them remains at the prompt.\n\n9) The $ary[i,j] subscript syntax to take a slice of an array behaves\ndifferently when both i and j are larger than the number of elements in\nthe array.  When i == j, such a slice always yields an empty array, and\nwhen i < j it always yields an array of one empty string element.  The\nfollowing example illustrates how this differs from past versions.\n\n     nargs() { print $# }\n     a=(one two)\n     for i in 1 2 3 4; do\n      for j in 1 2 3 4 5; do\n       print -n \"$i $j => \"\n       nargs \"${(@)a[i,j]}\"\n      done\n     done\n     \n     5.2       |  5.3 **\n     ----------+----------\n     1 1 => 1  |  1 1 => 1\n     1 2 => 2  |  1 2 => 2\n     1 3 => 2  |  1 3 => 2\n     1 4 => 2  |  1 4 => 2\n     1 5 => 2  |  1 5 => 2\n     2 1 => 0  |  2 1 => 0\n     2 2 => 1  |  2 2 => 1\n     2 3 => 1  |  2 3 => 1\n     2 4 => 1  |  2 4 => 1\n     2 5 => 1  |  2 5 => 1\n     3 1 => 0  |  3 1 => 0\n     3 2 => 0  |  3 2 => 0\n     3 3 => 0  |  3 3 => 0\n     3 4 => 0  |  3 4 => 1   **\n     3 5 => 0  |  3 5 => 1   **\n     4 1 => 0  |  4 1 => 0\n     4 2 => 0  |  4 2 => 0\n     4 3 => 0  |  4 3 => 0\n     4 4 => 1  |  4 4 => 0   **\n     4 5 => 1  |  4 5 => 1\n\nThe behaviour of the parameter flag (P) has changed when it appears\nin a nested parameter group, in order to make it more useful in\nsuch cases.  A (P) in the outermost parameter group behaves as\nbefore.  See NEWS for more.\n\nThe default behaviour when text is pasted into an X Windows terminal has\nchanged significantly (unless you are using a very old terminal emulator\nthat doesn't support this mode).  Now, the new \"bracketed paste mode\"\ntreats all the pasted text as literal characters.  This means, in\nparticular, that a newline is simply inserted as a visible newline; you\nneed to hit Return on the keyboard to execute the pasted text in one go.\nSee the description of zle_bracketed_paste in the zshparams manual for\nmore.  \"unset zle_bracketed_paste\" restores the previous behaviour.\n\nAs noted in NEWS, the builtins declare, export, float, integer, local,\nreadonly and typeset now have corresponding reserved words that provide\ntrue assignment semantics instead of an approximation by means of normal\ncommand line arguments.  It is hoped that this additional consistency\nprovides a more natural interface.  However, compatibility with older\nversions of zsh can be obtained by turning off the reserved word\ninterface, exposing the builtin interface:\n\n  disable -r declare export float integer local readonly typeset\n\nThis is also necessary in the unusual eventuality that the builtins are\nto be overridden by shell functions, since reserved words take\nprecedence over functions.\n\n10) For compatibility with other shells, the syntax\n\narray=([index]=value)\n\ncan be used with both associative arrays and normal arrays.  In the\nunlikely event that you wish to create an array with an entry\nmatching a file whose name consists of one of a range of characters\nmatched as a [...] expression, followed by an equal sign, followed\nby arbitrary other characters, it is now necessary to quote the equals\nsign.\n\nIncompatibilities between 5.0.7 and 5.0.8\n-----------------------------------------\n\nVarious arithmetic operations have changed, in particular with respect\nto the choice of integer or floating point operations.  The new\nbehaviour is intended to be more consistent, but is not compatible with\nthe old.\n\n1) Previously, the modulus operation, `%', implicitly converted the\noperation to integer and output an integer result, even if one\nor both of the arguments were floating point.  Now, the C math\nlibrary fmod() operator is used to implement the operation where\none of the arguments is floating point.  For example:\n\nOld behaviour:\n\n% print $(( 5.5 % 2 ))\n1\n\nNew behaviour:\n\n% print $(( 5.5 % 2 ))\n1.5\n\n\n2) Previously, assignments to variables assigned the correct type to\nvariables declared as floating point or integer, but this type was\nnot propagated to the value of the expression, as a C programmer\nwould naturally expect.  Now, the type of the variable is propagated\nso long as the variable is declared as a numeric type (however this\nhappened, e.g. the variable may have been implicitly typed by a\nprevious assignment).  For example:\n\nOld behaviour:\n\n% integer var\n% print $(( var = 5.5 / 2.0 ))\n2.75\n% print $var\n2\n\nNew behaviour:\n\n% integer var\n% print $(( var = 5.5 / 2.0 ))\n2\n% print $var\n2\n\n\n3) Previously, the FORCE_FLOAT option only forced the use of floating\npoint in arithmetic expressions for integer constants, i.e. numbers\ntyped directly into the expression, but not for variables.  Hence\nan operation involving only integer variables (or string variables\ncontaining integers) was not forced to be performed with floating point\narithmetic.  Now, operations involving variables are also forced to\nfloating point.  For example:\n\nOld behaviour:\n\n% unsetopt FORCE_FLOAT\n% print $(( 1 / 2 ))\n0\n% integer i=1 j=2\n% print $(( i / j ))\n0\n% setopt FORCE_FLOAT\n% print $(( 1 / 2 ))\n0.5\n% print $(( i / j ))\n0\n\nNew behaviour:\n\n% unsetopt FORCE_FLOAT\n% print $(( 1 / 2 ))\n0\n% integer i=1 j=2\n% print $(( i / j ))\n0\n% setopt FORCE_FLOAT\n% print $(( 1 / 2 ))\n0.5\n% print $(( i / j ))\n0.5\n\n\n4) The _git completion used to offer both local and remote heads under the\ntag 'heads'.  The tag has now been split into 'heads-local' and\n'heads-remote' in all contexts that existed in 5.0.7.  The --fixup/--squash\ncontext still uses the tag 'heads' (but this may change in a future release).\n\n\nIncompatibilities between 5.0.2 and 5.0.5\n-----------------------------------------\n\nThe \"zshaddhistory\" hook mechanism documented in the zshmisc manual page\nhas been upgraded so that a hook returning status 2 causes a history\nline to be saved on the internal history list but not written to the\nhistory file.  Previously any non-zero status return would cause\nthe line not to be saved on the history at all.  It is recommended\nto use status 1 for this (indeed most shell users would naturally do\nso).\n\nIncompatibilities between 5.0.0 and 5.0.2\n-----------------------------------------\n\nIn 5.0.0, the new \"sticky\" emulation feature was applied to functions\nexplicitly declared within an expression following `emulate ... -c', but\ndid not apply to functions marked for autoload in that expression.  This\nwas not documented and experience suggests it was inconvenient, so in\n5.0.2 autoloads also have the sticky property.\n\nIn other words,\n\n  emulate zsh -c 'func() { ... }'\n\nbehaves the same way in 5.0.0 and 5.0.2, with the function func always being\nrun in native zsh emulation regardless of the current option settings.\nHowever,\n\n  emulate zsh -c 'autoload -Uz func'\n\nbehaves differently: in 5.0.0, func was loaded with the options in\neffect at the point where it was first run, and subsequently run with\nwhatever options were in effect at that point; in 5.0.2, func is loaded\nwith native zsh emulation options and run with those same options.  This\nis now the recommended way of ensuring a function is loaded and run with\na consistent set of options.\n\nNote that the command `autoload -z' has never affected the options\napplied when the function is loaded or run, only the effect of the\nKSH_AUTOLOAD option at the point the function is loaded.\n\nPossible incompatibilities between 4.2 and 5.0\n----------------------------------------------\n\nHere are some incompatibilities in the shell since the 4.2 series of\nreleases.  It is hoped most users will not be adversely affected by these.\n\nIn previous releases of the shell, builtin commands and precommand\nmodifiers that did not accept options also did not recognize the\nargument \"--\" as marking the end of option processing without being\nconsidered an argument.  This was not documented and was incompatible\nwith other shells.  All such commands now handle this syntax.\n\nThe configuration option --enable-lfs to enable large file support has\nbeen replaced by autoconf's standard --enable-largefile mechanism.\nAs this is usually used whenever necessary, this won't usually\nbe noticeable; however, anyone configuring with --disable-lfs\nshould configure with --disable-largefile instead.\n\nThe configuration option --with-curses-terminfo has been replaced\nby the option --with-term-lib=\"LIBS\" where LIBS is a space-separated\nlist of libraries to search for termcap and curses features.\n\nThe option SH_WORD_SPLIT, used in Bourne/Korn/Posix shell compatibility\nmode, has been made more like other shells in the case of substitutions of\nthe form ${1+\"$@\"} (a common trick used to work around problems in older\nBourne shells) or any of the related forms with the + replaced by - or =\nwith an optional colon preceding.  Previously, with SH_WORD_SPLIT in\neffect, this expression would cause splitting on all white space in the\nshell arguments.  (This was always regarded as a bug but was long-standing\nbehaviour.)  Now it is treated identically to \"$@\".  The same change\napplies to expressions with forced splitting such as ${=1+\"$@\"}, but\notherwise the case where SH_WORD_SPLIT is not set is unaffected.\n\nDebug traps (`trap ... DEBUG' or the function TRAPDEBUG) now run by default\nbefore the command to which they refer instead of after.  This is almost\nalways the right behaviour for the intended purpose of debugging and is\nconsistent with recent versions of other shells.  The option\nDEBUG_BEFORE_CMD can be unset to revert to the previous behaviour.\n\nPreviously, process substitutions of the form =(...), <(...) and >(...)\nwere only handled if they appeared as separate command arguments.\n(However, the latter two forms caused the current argument to be\nterminated and a new one started even if they occurred in the middle of\na string.)  Now all three may be followed by other strings, and the\nlatter two may also be preceded by other strings.  Remaining\nlimitations on their use (to reduce incompatibilities to a minimum)\nare documented in the zshexpn.1 manual.\n\nIn previous versions of the shell it was possible to use index 0 in an\narray or string subscript to refer to the same element as index 1 if the\noption KSH_ARRAYS was not in effect.  This was a limited approximation to\nthe full KSH_ARRAYS handling and so was not very useful.  In this version\nof the shell, this behaviour is only provided when the option\nKSH_ZERO_SUBSCRIPT is set.  Note that despite the name this does not provide\ntrue compatibility with ksh or other shells and KSH_ARRAYS should still be\nused for that purpose.  By default, the option is not set; an array\nsubscript that evaluates to 0 returns an empty string or array element and\nattempts to write to an array or string range including only a zero\nsubscript are treated as an error.  Writes to otherwise valid ranges that\nalso include index zero are allowed; hence for example the assignment\n  array[(R)notfound,(r)notfound]=()\n(where the string \"notfound\" does not match an element in $array) sets the\nentire array to be empty, as in previous versions of the shell.\nKSH_ZERO_SUBSCRIPT is irrelevant when KSH_ARRAYS is set.  Also as in previous\nversions, attempts to write to non-existent elements at the end of an array\ncause the array to be suitably extended.  This difference means that, for\nexample\n  array[(R)notfound]=(replacement)\nis an error if KSH_ZERO_SUBSCRIPT is not set (new behaviour), while\n  array[(r)notfound]=(replacement)\ncauses the given value to be appended to the array (same behaviour as\nprevious versions).\n\nThe \"exec\" precommand modifier now takes various options for compatibility\nwith other shells.  This means that whereas \"exec -prog\" previously\ntried to execute a command name \"-prog\", it will now report an error\nin option handling.  \"exec -- -prog\" will execute \"-prog\".  If\nthe option EQUALS is set, as it is by default in zsh's native mode,\n\"exec =-prog\" behaves the same way in all versions of zsh provided\nthe command can be found.\n\nThe \"unset\" builtin now does not regard the unsetting of non-existent\nvariables as an error, so can still return status 0 (depending on the\nhandling of other arguments).  This appears to be the standard shell\nbehaviour.\n\nThe variable BAUD is no longer set automatically by the shell.\nIn previous versions it was set to the baud rate reported by\nthe terminal driver in order to initialise the line editor's\ncompensation mechanism for slow baud rates.  However, the baud\nrate so reported is very rarely related to the limiting speed of\nscreen updates on modern systems.  Users who need the compensation\nmechanism should set BAUD to an appropriate rate by hand.\n\nThe variable HOME is no longer set by the shell if zsh is emulating any\nother shell at startup; it must be present in the environment or set\nsubsequently by the user.  It is valid for the variable to be unset.\n\nIf the shell starts in a mode where it is emulating another shell\n(typically because the base name of the shell was \"sh\" or another known\nshell), the \"repeat\" syntax is not available by default, to avoid clashes\nwith external commands, but the \"ulimit\" command is available by default.\n\"limit\", \"sched\" and \"unlimit\" are not available by default in such modes:\nthis has been the case for many versions but is now documented for the\nfirst time.  (Users should note that emulation modes are not designed for\nbackwards compatibility with previous versions of zsh, but to maximise\ncompatibility with other shells, hence it is not safe to assume emulation\nmodes will behave consistently between zsh versions.)\n\nParameter substitutions in the form ${param//#%search/replace} match\nagainst \"search\" anchored at both ends of the parameter value.  Previously\nthis syntax would have matched against \"%search\", anchored only at the head\nof the value.  The form ${param//#$search/replace} where the value\n$search starts with \"%\" considers the \"%\" to be part of the search\nstring as before.\n\nConfigure attempts to decide if multibyte characters are supported by the\nsystem and if so sets the effect of --enable-multibyte, unless\n--disable-multibyte was passed on the command line.  When\n--enable-multibyte is in effect, the MULTIBYTE shell option is on by\ndefault; this causes many operations to recognise characters in the current\nlocale.  (Most typically this is used for a UTF-8 character set but the\nshell will work with any character set provided by the system where\nindividual octets are either US ASCII characters or have the top bit set.)\nOlder versions of the shell always assumed a character was one byte; this\nremains the case if --disable-multibyte is in effect or if the MULTIBYTE\noption is unset.  In some places the width of characters will be taken into\naccount where previously a raw string length was used; this is transparent\nin calculations of screen position, but also occurs, for example, in\ncalculations of padding width.  Note that MULTIBYTE is not automatically\nset when emulating Bourne- and POSIX-style shells; for interactive use of\nthese emulations it may be necessary to set it by hand.  Note also that the\noption COMBINING_CHARS is not set by default due to difficulties detecting\nthe ability of the terminal to display combining characters correctly; MAC\nusers in particular will probably wish to set this option.\n\nZsh has previously been lax about whether it allows octets with the\ntop bit set to be part of a shell identifier.  Older versions of the shell\nassumed all such octets were allowed in identifiers, however the POSIX\nstandard does not allow such characters in identifiers.  The older\nbehaviour is still obtained with --disable-multibyte in effect.\nWith --enable-multibyte in effect (see previous paragraph) there are three\npossible cases:\n  MULTIBYTE option unset:  only ASCII characters are allowed; the\n    shell does not attempt to identify non-ASCII characters at all.\n  MULTIBYTE option set, POSIX_IDENTIFIERS option unset: in addition\n    to the POSIX characters, any alphanumeric characters in the\n    local character set are allowed.  Note that scripts and functions that\n    take advantage of this are non-portable; however, this is in the spirit\n    of previous versions of the shell.  Note also that the options must\n    be set before the shell parses the script or function; setting\n    them during execution is not sufficient.\n  MULITBYTE option set, POSIX_IDENTIFIERS set:  only ASCII characters\n    are allowed in identifiers even though the shell will recognise\n    alphanumeric multibyte characters.\n\nThe sched builtin now keeps entries in time order.  This means that\nafter adding an entry the index of an existing entry used for deletion\nmay change, if that entry had a later time than the new entry.  However,\ndeleting a entry with a later time will now never change the index of an\nentry with an earlier time, which could happen with the previous method.\n\nThe completion style pine-directory must now be set to use completion\nfor PINE mailbox folders; previously it had the default ~/mail.  This\nchange was necessary because otherwise recursive directories under\n~/mail were searched by default, which could be a considerable unnecessary\nhit for anyone not using PINE.  The previous default can be restored with:\n  zstyle ':completion:*' pine-directory ~/mail\n\nThe completion style fake-files now allows patterns as directories,\nfor example the value '/home/*:.snapshot' is now valid.  This will\nonly cause problems in the unlikely event that a directory in the style\nhas a pattern character in it.\n\nThe default maximum function depth (configurable with\n--enable-max-function-depth) has been decreased to 1000 from 4096.  The\nprevious value was observed to be small enough that crashes still occurred\non some fairly common PC configurations.  This change is only likely to\naffect some highly specialised uses of the shell.\n\nThe variables HISTCHARS and histchars now reject any attempt to\nset non-ASCII characters for history or comments.  Multibyte characters\nhave never worked and the most consistent change was to restrict the\nset to portable characters only.\n\nWriters of add-on modules should note that the API has changed\nsignificantly to allow user control of individual features provided by\nmodules.  See the documentation for zmodload -F and\nEtc/zsh-development-guide, in that order.\n\nDocumentation\n-------------\n\nThere are a number of documents about zsh in this distribution:\n\nDoc/Zsh/*.yo\tThe master source for the zsh documentation is written in\n\t\tyodl.  Yodl is a document language written by Karel Kubat.\n\t\tIt is not required by zsh but it is a nice program so you\n\t\tmight want to get it anyway, especially if you are a zsh\n\t\tdeveloper.  It can be downloaded from\n\t\thttps://fbb-git.github.io/yodl/\n\nDoc/zsh*.1\tMan pages in nroff format.  These will be installed\n\t\tby \"make install.man\" or \"make install\".  By default,\n\t\tthese will be installed in /usr/local/man/man1, although\n\t\tyou can change this with the --mandir option to configure\n\t\tor editing the user configuration section of the top level\n\t\tMakefile.\n\nDoc/zsh.texi\tEverything the man pages have, but in texinfo format.  These\n\t\twill be installed by \"make install.info\" or \"make install\".\n\t\tBy default, these will be installed in /usr/local/info,\n\t\talthough you can change this with the --infodir option to\n\t\tconfigure or editing the user configuration section of the\n\t\ttop level Makefile.  Version 4.0 or above of the\n\t\tTexinfo tools are recommended for processing this file.\n\nAlso included in the distribution are:\n\nDoc/intro.ms\tAn introduction to zsh in troff format using the ms\n\t\tmacros.  This document explains many of the features\n\t\tthat make zsh more equal than other shells.\n\t\tUnfortunately this is based on zsh-2.5 so some examples\n\t\tmay not work without changes but it is still a good\n\t\tintroduction.\n\nFor more information, see the website, as described in the META-FAQ.\n\nIf you do not have the necessary tools to process these documents, PDF,\nInfo and DVI versions are available in the separate file zsh-doc.tar.gz at\nthe archive sites listed in the META-FAQ.\n\nThe distribution also contains a Perl script in Utils/helpfiles which\ncan be used to extract the descriptions of builtin commands from the\nzshbuiltins manual page.  See the comments at the beginning of the\nscript about its usage.  The files created by this script can be used\nby example function run-help located in the subdirectory Functions/Misc to\nshow information about zsh builtins and run `man' on external commands.\nFor this the shell variable HELPDIR should point to a directory containing\nthe files generated by the helpfiles script.  run-help should be\nunaliased before loading the run-help function.  After that this function\nwill be executed by the run-help ZLE function which is by default bound\nto ESC-h in emacs mode.\n\nExamples\n--------\n\nExamples of zsh startup files are located in the subdirectory\nStartupFiles.  Examples of zsh functions and scripts are located in\nthe subdirectory Functions.  Examples of completion control commands\n(compctl) are located in the file Misc/compctl-examples.\n\nZsh FTP Sites, Web Pages, and Mailing Lists\n-------------------------------------------\n\nThe current list of zsh FTP sites, web pages, and mailing lists can be\nfound in the META-FAQ.  A copy is included in this distribution and is\navailable separately at any of the zsh FTP sites.\n\nCommon Problems and Frequently Asked Questions\n----------------------------------------------\n\nZsh has a list of Frequently Asked Questions (FAQ) maintained by Peter\nStephenson <pws@zsh.org>.  It covers many common problems encountered\nwhen building, installing, and using zsh.  A copy is included in this\ndistribution in Etc/FAQ and is available separately at any of the zsh\nftp sites.\n\nZsh Maintenance and Bug Reports\n-------------------------------\n\nZsh is currently maintained by the members of the zsh-workers mailing list\nand coordinated by Peter Stephenson <coordinator@zsh.org>.  Please send\nany feedback and bugs reports to <zsh-workers@zsh.org>.\n\nReports are most helpful if you can reproduce the bug starting zsh with\nthe -f option.  This skips the execution of local startup files except\n/etc/zshenv.  If a bug occurs only when some options set try to locate\nthe option which triggers the bug.\n\nThere is a script \"reporter\" in the subdirectory Util which will print out\nyour current shell environment/setup.  If you cannot reproduce the bug\nwith \"zsh -f\", use this script and include the output from sourcing this\nfile.  This way, the problem you are reporting can be recreated.\n\nThe known bugs in zsh are listed in the file Etc/BUGS.  Check this as\nwell as the Frequently Asked Questions (FAQ) list before sending a bug\nreport.  Note that zsh has some features which are not compatible with\nsh but these are not bugs.  Most of these incompatibilities go away\nwhen zsh is invoked as sh or ksh (e.g. using a symbolic link).\n\nIf you send a bug report to the list and are not a subscriber, please\nmention this in your message if you want a response.\n\nIf you would like to contribute to the development and maintenance of zsh,\nthen you should join the zsh-workers mailing list (check the META-FAQ\nfor info on this).  You should also read the \"zsh-development-guide\"\nlocated in the subdirectory Etc.\n\nContributors\n------------\n\nThe people who have contributed to this software project are listed\nin Etc/CONTRIBUTORS.\n"
        },
        {
          "name": "Scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "Src",
          "type": "tree",
          "content": null
        },
        {
          "name": "StartupFiles",
          "type": "tree",
          "content": null
        },
        {
          "name": "Test",
          "type": "tree",
          "content": null
        },
        {
          "name": "Util",
          "type": "tree",
          "content": null
        },
        {
          "name": "aclocal.m4",
          "type": "blob",
          "size": 0.583984375,
          "content": "# Local additions to Autoconf macros.\n# Copyright (C) 1992, 1994 Free Software Foundation, Inc.\n# Francois Pinard <pinard@iro.umontreal.ca>, 1992.\n\nAC_DEFUN(AC_PROG_LN,\n[AC_MSG_CHECKING(whether ln works)\nAC_CACHE_VAL(ac_cv_prog_LN,\n[rm -f conftestdata conftestlink\necho > conftestdata\nif ln conftestdata conftestlink 2>/dev/null\nthen\n  rm -f conftestdata conftestlink\n  ac_cv_prog_LN=\"ln\"\nelse\n  rm -f conftestdata\n  ac_cv_prog_LN=\"cp\"\nfi])dnl\nLN=\"$ac_cv_prog_LN\"\nif test \"$ac_cv_prog_LN\" = \"ln\"; then\n  AC_MSG_RESULT(yes)\nelse\n  AC_MSG_RESULT(no)\nfi\nAC_SUBST(LN)dnl\n])\n\nbuiltin(include, aczsh.m4)\n"
        },
        {
          "name": "aczsh.m4",
          "type": "blob",
          "size": 20.2880859375,
          "content": "dnl\ndnl  Autconf tests for zsh.\ndnl\ndnl  Copyright (c) 1995-1997 Richard Coleman\ndnl  All rights reserved.\ndnl\ndnl  Permission is hereby granted, without written agreement and without\ndnl  license or royalty fees, to use, copy, modify, and distribute this\ndnl  software and to distribute modified versions of this software for any\ndnl  purpose, provided that the above copyright notice and the following\ndnl  two paragraphs appear in all copies of this software.\ndnl\ndnl  In no event shall Richard Coleman or the Zsh Development Group be liable\ndnl  to any party for direct, indirect, special, incidental, or consequential\ndnl  damages arising out of the use of this software and its documentation,\ndnl  even if Richard Coleman and the Zsh Development Group have been advised of\ndnl  the possibility of such damage.\ndnl\ndnl  Richard Coleman and the Zsh Development Group specifically disclaim any\ndnl  warranties, including, but not limited to, the implied warranties of\ndnl  merchantability and fitness for a particular purpose.  The software\ndnl  provided hereunder is on an \"as is\" basis, and Richard Coleman and the\ndnl  Zsh Development Group have no obligation to provide maintenance,\ndnl  support, updates, enhancements, or modifications.\ndnl\n\ndnl\ndnl zsh_64_BIT_TYPE\ndnl   Check whether the first argument works as a 64-bit type.\ndnl   If there is a non-zero third argument, we just assume it works\ndnl   when we're cross compiling.  This is to allow a type to be\ndnl   specified directly as --enable-lfs=\"long long\".\ndnl   Sets the variable given in the second argument to the first argument\ndnl   if the test worked, `no' otherwise.  Be careful testing this, as it\ndnl   may produce two words `long long' on an unquoted substitution.\ndnl   Also check that the compiler does not mind it being cast to int.\ndnl   This macro does not produce messages as it may be run several times\ndnl   before finding the right type.\ndnl\n\nAC_DEFUN(zsh_64_BIT_TYPE,\n[AC_RUN_IFELSE([AC_LANG_SOURCE([[\n#ifdef HAVE_SYS_TYPES_H\n#include <sys/types.h>\n#endif\n\nint\nmain()\n{\n  $1 foo = 0; \n  int bar = (int) foo;\n  return sizeof($1) != 8;\n}\n]])],[$2=\"$1\"],[$2=no],\n  [if test x$3 != x ; then\n    $2=\"$1\"\n  else\n    $2=no\n  fi])\n])\n\n\ndnl\ndnl zsh_SHARED_FUNCTION\ndnl\ndnl This is just a frontend to zsh_SHARED_SYMBOL\ndnl\ndnl Usage: zsh_SHARED_FUNCTION(name[,rettype[,paramtype]])\ndnl\n\nAC_DEFUN(zsh_SHARED_FUNCTION,\n[zsh_SHARED_SYMBOL($1, ifelse([$2], ,[int ],[$2]) $1 [(]ifelse([$3], ,[ ],[$3])[)], $1)])\n\ndnl\ndnl zsh_SHARED_VARIABLE\ndnl\ndnl This is just a frontend to zsh_SHARED_SYMBOL\ndnl\ndnl Usage: zsh_SHARED_VARIABLE(name[,type])\ndnl\n\nAC_DEFUN(zsh_SHARED_VARIABLE,\n[zsh_SHARED_SYMBOL($1, ifelse([$2], ,[int ],[$2]) $1, [&$1])])\n\ndnl\ndnl zsh_SHARED_SYMBOL\ndnl   Check whether symbol is available in static or shared library\ndnl\ndnl   On some systems, static modifiable library symbols (such as environ)\ndnl   may appear only in statically linked libraries.  If this is the case,\ndnl   then two shared libraries that reference the same symbol, each linked\ndnl   with the static library, could be given distinct copies of the symbol.\ndnl\ndnl Usage: zsh_SHARED_SYMBOL(name,declaration,address)\ndnl Sets zsh_cv_shared_$1 cache variable to yes/no\ndnl\n\nAC_DEFUN(zsh_SHARED_SYMBOL,\n[AC_CACHE_CHECK([if $1 is available in shared libraries],\nzsh_cv_shared_$1,\n[if test \"$zsh_cv_func_dlsym_needs_underscore\" = yes; then\n    us=_\nelse\n    us=\nfi\necho '\nvoid *zsh_getaddr1()\n{\n#ifdef __CYGWIN__\n\t__attribute__((__dllimport__))\t\n#endif\n\textern $2;\n\treturn $3;\n};\n' > conftest1.c\nsed 's/zsh_getaddr1/zsh_getaddr2/' < conftest1.c > conftest2.c\nif AC_TRY_COMMAND($CC -c $CFLAGS $CPPFLAGS $DLCFLAGS conftest1.c 1>&AS_MESSAGE_LOG_FD) &&\nAC_TRY_COMMAND($DLLD -o conftest1.$DL_EXT $LDFLAGS $DLLDFLAGS conftest1.o $LIBS 1>&AS_MESSAGE_LOG_FD) &&\nAC_TRY_COMMAND($CC -c $CFLAGS $CPPFLAGS $DLCFLAGS conftest2.c 1>&AS_MESSAGE_LOG_FD) &&\nAC_TRY_COMMAND($DLLD -o conftest2.$DL_EXT $LDFLAGS $DLLDFLAGS conftest2.o $LIBS 1>&AS_MESSAGE_LOG_FD); then\n    AC_RUN_IFELSE([AC_LANG_SOURCE([[\n#ifdef HPUX10DYNAMIC\n#include <dl.h>\n#define RTLD_LAZY BIND_DEFERRED\n#define RTLD_GLOBAL DYNAMIC_PATH\n\nchar *zsh_gl_sym_addr ;\n\n#define dlopen(file,mode) (void *)shl_load((file), (mode), (long) 0)\n#define dlclose(handle) shl_unload((shl_t)(handle))\n#define dlsym(handle,name) (zsh_gl_sym_addr=0,shl_findsym((shl_t *)&(handle),name,TYPE_UNDEFINED,&zsh_gl_sym_addr), (void *)zsh_gl_sym_addr)\n#define dlerror() 0\n#else\n#ifdef HAVE_DLFCN_H\n#include <dlfcn.h>\n#else\n#include <sys/types.h>\n#include <nlist.h>\n#include <link.h>\n#endif\n#endif\n#ifndef RTLD_LAZY\n#define RTLD_LAZY 1\n#endif\n#ifndef RTLD_GLOBAL\n#define RTLD_GLOBAL 0\n#endif\n\nint\nmain()\n{\n    void *handle1, *handle2;\n    void *(*zsh_getaddr1)(), *(*zsh_getaddr2)();\n    void *sym1, *sym2;\n    handle1 = dlopen(\"./conftest1.$DL_EXT\", RTLD_LAZY | RTLD_GLOBAL);\n    if(!handle1) return(1);\n    handle2 = dlopen(\"./conftest2.$DL_EXT\", RTLD_LAZY | RTLD_GLOBAL);\n    if(!handle2) return(1);\n    zsh_getaddr1 = (void *(*)()) dlsym(handle1, \"${us}zsh_getaddr1\");\n    zsh_getaddr2 = (void *(*)()) dlsym(handle2, \"${us}zsh_getaddr2\");\n    sym1 = zsh_getaddr1();\n    sym2 = zsh_getaddr2();\n    if(!sym1 || !sym2) return(1);\n    if(sym1 != sym2) return(1);\n    dlclose(handle1);\n    handle1 = dlopen(\"./conftest1.$DL_EXT\", RTLD_LAZY | RTLD_GLOBAL);\n    if(!handle1) return(1);\n    zsh_getaddr1 = (void *(*)()) dlsym(handle1, \"${us}zsh_getaddr1\");\n    sym1 = zsh_getaddr1();\n    if(!sym1) return(1);\n    if(sym1 != sym2) return(1);\n    return(0);\n}\n]])],[zsh_cv_shared_$1=yes],\n[zsh_cv_shared_$1=no],\n[zsh_cv_shared_$1=no]\n)\nelse\n    zsh_cv_shared_$1=no\nfi\n])\n])\n\ndnl\ndnl zsh_SYS_DYNAMIC_CLASH\ndnl   Check whether symbol name clashes in shared libraries are acceptable.\ndnl\n\nAC_DEFUN(zsh_SYS_DYNAMIC_CLASH,\n[AC_CACHE_CHECK([if name clashes in shared objects are OK],\nzsh_cv_sys_dynamic_clash_ok,\n[if test \"$zsh_cv_func_dlsym_needs_underscore\" = yes; then\n    us=_\nelse\n    us=\nfi\necho 'int fred () { return 42; }' > conftest1.c\necho 'int fred () { return 69; }' > conftest2.c\nif AC_TRY_COMMAND($CC -c $CFLAGS $CPPFLAGS $DLCFLAGS conftest1.c 1>&AS_MESSAGE_LOG_FD) &&\nAC_TRY_COMMAND($DLLD -o conftest1.$DL_EXT $LDFLAGS $DLLDFLAGS conftest1.o $LIBS 1>&AS_MESSAGE_LOG_FD) &&\nAC_TRY_COMMAND($CC -c $CFLAGS $CPPFLAGS $DLCFLAGS conftest2.c 1>&AS_MESSAGE_LOG_FD) &&\nAC_TRY_COMMAND($DLLD -o conftest2.$DL_EXT $LDFLAGS $DLLDFLAGS conftest2.o $LIBS 1>&AS_MESSAGE_LOG_FD); then\n    AC_RUN_IFELSE([AC_LANG_SOURCE([[\n#ifdef HPUX10DYNAMIC\n#include <dl.h>\n#define RTLD_LAZY BIND_DEFERRED\n#define RTLD_GLOBAL DYNAMIC_PATH\n\nchar *zsh_gl_sym_addr ;\n\n#define dlopen(file,mode) (void *)shl_load((file), (mode), (long) 0)\n#define dlclose(handle) shl_unload((shl_t)(handle))\n#define dlsym(handle,name) (zsh_gl_sym_addr=0,shl_findsym((shl_t *)&(handle),name,TYPE_UNDEFINED,&zsh_gl_sym_addr), (void *)zsh_gl_sym_addr)\n#define dlerror() 0\n#else\n#ifdef HAVE_DLFCN_H\n#include <dlfcn.h>\n#else\n#include <sys/types.h>\n#include <nlist.h>\n#include <link.h>\n#endif\n#endif\n#ifndef RTLD_LAZY\n#define RTLD_LAZY 1\n#endif\n#ifndef RTLD_GLOBAL\n#define RTLD_GLOBAL 0\n#endif\n\nint\nmain()\n{\n    void *handle1, *handle2;\n    int (*fred1)(), (*fred2)();\n    handle1 = dlopen(\"./conftest1.$DL_EXT\", RTLD_LAZY | RTLD_GLOBAL);\n    if(!handle1) return(1);\n    handle2 = dlopen(\"./conftest2.$DL_EXT\", RTLD_LAZY | RTLD_GLOBAL);\n    if(!handle2) return(1);\n    fred1 = (int (*)()) dlsym(handle1, \"${us}fred\");\n    fred2 = (int (*)()) dlsym(handle2, \"${us}fred\");\n    if(!fred1 || !fred2) return(1);\n    return((*fred1)() != 42 || (*fred2)() != 69);\n}\n]])],[zsh_cv_sys_dynamic_clash_ok=yes],\n[zsh_cv_sys_dynamic_clash_ok=no],\n[zsh_cv_sys_dynamic_clash_ok=no]\n)\nelse\n    zsh_cv_sys_dynamic_clash_ok=no\nfi\n])\nif test \"$zsh_cv_sys_dynamic_clash_ok\" = yes; then\n    AC_DEFINE(DYNAMIC_NAME_CLASH_OK)\nfi\n])\n\ndnl\ndnl zsh_SYS_DYNAMIC_GLOBAL\ndnl   Check whether symbols in one dynamically loaded library are\ndnl   available to another dynamically loaded library.\ndnl\n\nAC_DEFUN(zsh_SYS_DYNAMIC_GLOBAL,\n[AC_CACHE_CHECK([for working RTLD_GLOBAL],\nzsh_cv_sys_dynamic_rtld_global,\n[if test \"$zsh_cv_func_dlsym_needs_underscore\" = yes; then\n    us=_\nelse\n    us=\nfi\necho 'int fred () { return 42; }' > conftest1.c\necho 'extern int fred(); int barney () { return fred() + 27; }' > conftest2.c\nif AC_TRY_COMMAND($CC -c $CFLAGS $CPPFLAGS $DLCFLAGS conftest1.c 1>&AS_MESSAGE_LOG_FD) &&\nAC_TRY_COMMAND($DLLD -o conftest1.$DL_EXT $LDFLAGS $DLLDFLAGS conftest1.o $LIBS 1>&AS_MESSAGE_LOG_FD) &&\nAC_TRY_COMMAND($CC -c $CFLAGS $CPPFLAGS $DLCFLAGS conftest2.c 1>&AS_MESSAGE_LOG_FD) &&\nAC_TRY_COMMAND($DLLD -o conftest2.$DL_EXT $LDFLAGS $DLLDFLAGS conftest2.o $LIBS 1>&AS_MESSAGE_LOG_FD); then\n    AC_RUN_IFELSE([AC_LANG_SOURCE([[\n#ifdef HPUX10DYNAMIC\n#include <dl.h>\n#define RTLD_LAZY BIND_DEFERRED\n#define RTLD_GLOBAL DYNAMIC_PATH\n\nchar *zsh_gl_sym_addr ;\n\n#define dlopen(file,mode) (void *)shl_load((file), (mode), (long) 0)\n#define dlclose(handle) shl_unload((shl_t)(handle))\n#define dlsym(handle,name) (zsh_gl_sym_addr=0,shl_findsym((shl_t *)&(handle),name,TYPE_UNDEFINED,&zsh_gl_sym_addr), (void *)zsh_gl_sym_addr)\n#define dlerror() 0\n#else\n#ifdef HAVE_DLFCN_H\n#include <dlfcn.h>\n#else\n#include <sys/types.h>\n#include <nlist.h>\n#include <link.h>\n#endif\n#endif\n#ifndef RTLD_LAZY\n#define RTLD_LAZY 1\n#endif\n#ifndef RTLD_GLOBAL\n#define RTLD_GLOBAL 0\n#endif\n\nint\nmain()\n{\n    void *handle;\n    int (*barneysym)();\n    handle = dlopen(\"./conftest1.$DL_EXT\", RTLD_LAZY | RTLD_GLOBAL);\n    if(!handle) return(1);\n    handle = dlopen(\"./conftest2.$DL_EXT\", RTLD_LAZY | RTLD_GLOBAL);\n    if(!handle) return(1);\n    barneysym = (int (*)()) dlsym(handle, \"${us}barney\");\n    if(!barneysym) return(1);\n    return((*barneysym)() != 69);\n}\n]])],[zsh_cv_sys_dynamic_rtld_global=yes],\n[zsh_cv_sys_dynamic_rtld_global=no],\n[zsh_cv_sys_dynamic_rtld_global=no]\n)\nelse\n    zsh_cv_sys_dynamic_rtld_global=no\nfi\n])\n])\n\ndnl\ndnl zsh_SYS_DYNAMIC_EXECSYMS\ndnl   Check whether symbols in the executable are available to dynamically\ndnl   loaded libraries.\ndnl\n\nAC_DEFUN(zsh_SYS_DYNAMIC_EXECSYMS,\n[AC_CACHE_CHECK([whether symbols in the executable are available],\nzsh_cv_sys_dynamic_execsyms,\n[if test \"$zsh_cv_func_dlsym_needs_underscore\" = yes; then\n    us=_\nelse\n    us=\nfi\necho 'extern int fred(); int barney () { return fred() + 27; }' > conftest1.c\nif AC_TRY_COMMAND($CC -c $CFLAGS $CPPFLAGS $DLCFLAGS conftest1.c 1>&AS_MESSAGE_LOG_FD) &&\nAC_TRY_COMMAND($DLLD -o conftest1.$DL_EXT $LDFLAGS $DLLDFLAGS conftest1.o $LIBS 1>&AS_MESSAGE_LOG_FD); then\n    save_ldflags=$LDFLAGS\n    LDFLAGS=\"$LDFLAGS $EXTRA_LDFLAGS\"\n    AC_RUN_IFELSE([AC_LANG_SOURCE([[\n#ifdef HPUX10DYNAMIC\n#include <dl.h>\n#define RTLD_LAZY BIND_DEFERRED\n#define RTLD_GLOBAL DYNAMIC_PATH\n\nchar *zsh_gl_sym_addr ;\n\n#define dlopen(file,mode) (void *)shl_load((file), (mode), (long) 0)\n#define dlclose(handle) shl_unload((shl_t)(handle))\n#define dlsym(handle,name) (zsh_gl_sym_addr=0,shl_findsym((shl_t *)&(handle),name,TYPE_UNDEFINED,&zsh_gl_sym_addr), (void *)zsh_gl_sym_addr)\n#define dlerror() 0\n#else\n#ifdef HAVE_DLFCN_H\n#include <dlfcn.h>\n#else\n#include <sys/types.h>\n#include <nlist.h>\n#include <link.h>\n#endif\n#endif\n#ifndef RTLD_LAZY\n#define RTLD_LAZY 1\n#endif\n#ifndef RTLD_GLOBAL\n#define RTLD_GLOBAL 0\n#endif\n\nint\nmain()\n{\n    void *handle;\n    int (*barneysym)();\n    handle = dlopen(\"./conftest1.$DL_EXT\", RTLD_LAZY | RTLD_GLOBAL);\n    if(!handle) return(1);\n    barneysym = (int (*)()) dlsym(handle, \"${us}barney\");\n    if(!barneysym) return(1);\n    return((*barneysym)() != 69);\n}\n\nint fred () { return 42; }\n]])],[zsh_cv_sys_dynamic_execsyms=yes],\n[zsh_cv_sys_dynamic_execsyms=no],\n[zsh_cv_sys_dynamic_execsyms=no]\n)\n    LDFLAGS=$save_ldflags\nelse\n    zsh_cv_sys_dynamic_execsyms=no\nfi\n])\n])\n\ndnl\ndnl zsh_SYS_DYNAMIC_STRIP_EXE\ndnl   Check whether it is safe to strip executables.\ndnl\n\nAC_DEFUN(zsh_SYS_DYNAMIC_STRIP_EXE,\n[AC_REQUIRE([zsh_SYS_DYNAMIC_EXECSYMS])\nAC_CACHE_CHECK([whether executables can be stripped],\nzsh_cv_sys_dynamic_strip_exe,\n[if test \"$zsh_cv_sys_dynamic_execsyms\" != yes; then\n    zsh_cv_sys_dynamic_strip_exe=yes\nelif\n    if test \"$zsh_cv_func_dlsym_needs_underscore\" = yes; then\n\tus=_\n    else\n\tus=\n    fi\n    echo 'extern int fred(); int barney() { return fred() + 27; }' > conftest1.c\n    AC_TRY_COMMAND($CC -c $CFLAGS $CPPFLAGS $DLCFLAGS conftest1.c 1>&AS_MESSAGE_LOG_FD) &&\n    AC_TRY_COMMAND($DLLD -o conftest1.$DL_EXT $LDFLAGS $DLLDFLAGS conftest1.o $LIBS 1>&AS_MESSAGE_LOG_FD); then\n    save_ldflags=$LDFLAGS\n    LDFLAGS=\"$LDFLAGS $EXTRA_LDFLAGS -s\"\n    AC_RUN_IFELSE([AC_LANG_SOURCE([[\n#ifdef HPUX10DYNAMIC\n#include <dl.h>\n#define RTLD_LAZY BIND_DEFERRED\n#define RTLD_GLOBAL DYNAMIC_PATH\n\nchar *zsh_gl_sym_addr ;\n\n#define dlopen(file,mode) (void *)shl_load((file), (mode), (long) 0)\n#define dlclose(handle) shl_unload((shl_t)(handle))\n#define dlsym(handle,name) (zsh_gl_sym_addr=0,shl_findsym((shl_t *)&(handle),name,TYPE_UNDEFINED,&zsh_gl_sym_addr), (void *)zsh_gl_sym_addr)\n#define dlerror() 0\n#else\n#ifdef HAVE_DLFCN_H\n#include <dlfcn.h>\n#else\n#include <sys/types.h>\n#include <nlist.h>\n#include <link.h>\n#endif\n#endif\n#ifndef RTLD_LAZY\n#define RTLD_LAZY 1\n#endif\n#ifndef RTLD_GLOBAL\n#define RTLD_GLOBAL 0\n#endif\n\nint\nmain()\n{\n    void *handle;\n    int (*barneysym)();\n    handle = dlopen(\"./conftest1.$DL_EXT\", RTLD_LAZY | RTLD_GLOBAL);\n    if(!handle) return(1);\n    barneysym = (int (*)()) dlsym(handle, \"${us}barney\");\n    if(!barneysym) return(1);\n    return((*barneysym)() != 69);\n}\n\nint fred () { return 42; }\n]])],[zsh_cv_sys_dynamic_strip_exe=yes],\n[zsh_cv_sys_dynamic_strip_exe=no],\n[zsh_cv_sys_dynamic_strip_exe=no]\n)\n    LDFLAGS=$save_ldflags\nelse\n    zsh_cv_sys_dynamic_strip_exe=no\nfi\n])\n])\n\ndnl\ndnl zsh_SYS_DYNAMIC_STRIP_EXE\ndnl   Check whether it is safe to strip dynamically loaded libraries.\ndnl\n\nAC_DEFUN(zsh_SYS_DYNAMIC_STRIP_LIB,\n[AC_CACHE_CHECK([whether libraries can be stripped],\nzsh_cv_sys_dynamic_strip_lib,\n[if test \"$zsh_cv_func_dlsym_needs_underscore\" = yes; then\n    us=_\nelse\n    us=\nfi\necho 'int fred () { return 42; }' > conftest1.c\nif AC_TRY_COMMAND($CC -c $CFLAGS $CPPFLAGS $DLCFLAGS conftest1.c 1>&AS_MESSAGE_LOG_FD) &&\nAC_TRY_COMMAND($DLLD -o conftest1.$DL_EXT $LDFLAGS $DLLDFLAGS -s conftest1.o $LIBS 1>&AS_MESSAGE_LOG_FD); then\n    AC_RUN_IFELSE([AC_LANG_SOURCE([[\n#ifdef HPUX10DYNAMIC\n#include <dl.h>\n#define RTLD_LAZY BIND_DEFERRED\n#define RTLD_GLOBAL DYNAMIC_PATH\n\nchar *zsh_gl_sym_addr ;\n\n#define dlopen(file,mode) (void *)shl_load((file), (mode), (long) 0)\n#define dlclose(handle) shl_unload((shl_t)(handle))\n#define dlsym(handle,name) (zsh_gl_sym_addr=0,shl_findsym((shl_t *)&(handle),name,TYPE_UNDEFINED,&zsh_gl_sym_addr), (void *)zsh_gl_sym_addr)\n#define dlerror() 0\n#else\n#ifdef HAVE_DLFCN_H\n#include <dlfcn.h>\n#else\n#include <sys/types.h>\n#include <nlist.h>\n#include <link.h>\n#endif\n#endif\n#ifndef RTLD_LAZY\n#define RTLD_LAZY 1\n#endif\n#ifndef RTLD_GLOBAL\n#define RTLD_GLOBAL 0\n#endif\n\nint\nmain()\n{\n    void *handle;\n    int (*fredsym)();\n    handle = dlopen(\"./conftest1.$DL_EXT\", RTLD_LAZY | RTLD_GLOBAL);\n    if(!handle) return(1);\n    fredsym = (int (*)()) dlsym(handle, \"${us}fred\");\n    if(!fredsym) return(1);\n    return((*fredsym)() != 42);\n}\n]])],[zsh_cv_sys_dynamic_strip_lib=yes],\n[zsh_cv_sys_dynamic_strip_lib=no],\n[zsh_cv_sys_dynamic_strip_lib=no]\n)\nelse\n    zsh_cv_sys_dynamic_strip_lib=no\nfi\n])\n])\n\ndnl\ndnl zsh_PATH_UTMP(filename)\ndnl   Search for a specified utmp-type file.\ndnl\n\nAC_DEFUN(zsh_PATH_UTMP,\n[AC_CACHE_CHECK([for $1 file], [zsh_cv_path_$1],\n[for dir in /etc /usr/etc /var/adm /usr/adm /var/run /var/log ./conftest; do\n  m4_foreach([file],[$@],[zsh_cv_path_$1=${dir}/file\n  test -f $zsh_cv_path_$1 && break\n  ])zsh_cv_path_$1=no\ndone\n])\nAH_TEMPLATE([PATH_]translit($1, [a-z], [A-Z])[_FILE],\n[Define to be location of ]$1[ file.])\nif test $zsh_cv_path_$1 != no; then\n  AC_DEFINE_UNQUOTED([PATH_]translit($1, [a-z], [A-Z])[_FILE],\n  \"$zsh_cv_path_$1\")\nfi\n])\n\ndnl\ndnl zsh_TYPE_EXISTS(#includes, type name)\ndnl   Check whether a specified type exists.\ndnl\n\nAC_DEFUN(zsh_TYPE_EXISTS,\n[AC_CACHE_CHECK([for $2], [zsh_cv_type_exists_[]translit($2, [ ], [_])],\n[AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[$1]], [[$2 testvar;]])],\n[zsh_cv_type_exists_[]translit($2, [ ], [_])=yes],\n[zsh_cv_type_exists_[]translit($2, [ ], [_])=no])\n])\nAH_TEMPLATE([HAVE_]translit($2, [ a-z], [_A-Z]),\n[Define to 1 if ]$2[ is defined by a system header])\nif test $zsh_cv_type_exists_[]translit($2, [ ], [_]) = yes; then\n  AC_DEFINE([HAVE_]translit($2, [ a-z], [_A-Z]))\nfi\n])\n\ndnl\ndnl zsh_STRUCT_MEMBER(#includes, type name, member name)\ndnl   Check whether a specified aggregate type exists and contains\ndnl   a specified member.\ndnl\n\nAC_DEFUN(zsh_STRUCT_MEMBER,\n[AC_CACHE_CHECK([for $3 in $2], [zsh_cv_struct_member_[]translit($2, [ ], [_])_$3],\n[AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[$1]], [[$2 testvar; testvar.$3;]])],\n[zsh_cv_struct_member_[]translit($2, [ ], [_])_$3=yes],\n[zsh_cv_struct_member_[]translit($2, [ ], [_])_$3=no])\n])\nAH_TEMPLATE([HAVE_]translit($2_$3, [ a-z], [_A-Z]),\n[Define if your system's ]$2[ has a member named ]$3[.])\nif test $zsh_cv_struct_member_[]translit($2, [ ], [_])_$3 = yes; then\n  AC_DEFINE([HAVE_]translit($2_$3, [ a-z], [_A-Z]))\nfi\n])\n\ndnl\ndnl zsh_ARG_PROGRAM\ndnl   Handle AC_ARG_PROGRAM substitutions into other zsh configure macros.\ndnl   After processing this macro, the configure script may refer to\ndnl   and $tzsh_name, and @tzsh@ is defined for make substitutions.\ndnl\n\nAC_DEFUN(zsh_ARG_PROGRAM,\n[AC_ARG_PROGRAM\n# Un-double any \\ or $ (doubled by AC_ARG_PROGRAM).\ncat <<\\EOF_SED > conftestsed\ns,\\\\\\\\,\\\\,g; s,\\$\\$,$,g\nEOF_SED\nzsh_transform_name=`echo \"${program_transform_name}\" | sed -f conftestsed`\nrm -f conftestsed\ntzsh_name=`echo zsh | sed -e \"${zsh_transform_name}\"`\n# Double any \\ or $ in the transformed name that results.\ncat <<\\EOF_SED >> conftestsed\ns,\\\\,\\\\\\\\,g; s,\\$,$$,g\nEOF_SED\ntzsh=`echo ${tzsh_name} | sed -f conftestsed`\nrm -f conftestsed\nAC_SUBST(tzsh)dnl\n])\n\nAC_DEFUN(zsh_COMPILE_FLAGS,\n    [AC_ARG_ENABLE(cppflags,\n\tAS_HELP_STRING([--enable-cppflags=...], [specify C preprocessor flags]),\n\tif test \"$enableval\" = \"yes\"\n\tthen CPPFLAGS=\"$1\"\n\telse CPPFLAGS=\"$enable_cppflags\"\n\tfi)\n    AC_ARG_ENABLE(cflags,\n\tAS_HELP_STRING([--enable-cflags=...], [specify C compiler flags]),\n\tif test \"$enableval\" = \"yes\"\n\tthen CFLAGS=\"$2\"\n\telse CFLAGS=\"$enable_cflags\"\n\tfi)\n    AC_ARG_ENABLE(ldflags,\n\tAS_HELP_STRING([--enable-ldflags=...], [specify linker flags]),\n\tif test \"$enableval\" = \"yes\"\n\tthen LDFLAGS=\"$3\"\n\telse LDFLAGS=\"$enable_ldflags\"\n\tfi)\n    AC_ARG_ENABLE(libs,\n\tAS_HELP_STRING([--enable-libs=...], [specify link libraries]),\n\tif test \"$enableval\" = \"yes\"\n\tthen LIBS=\"$4\"\n\telse LIBS=\"$enable_libs\"\n\tfi)])\n\ndnl \ndnl zsh_CHECK_SOCKLEN_T\ndnl\ndnl\tcheck type of third argument of some network functions; currently\ndnl\ttested are size_t *, unsigned long *, int *.\ndnl     call the result ZSOCKLEN_T since some systems have SOCKLEN_T already\ndnl\nAC_DEFUN([zsh_CHECK_SOCKLEN_T],[\n  AC_CACHE_CHECK(\n    [base type of the third argument to accept],\n    [zsh_cv_type_socklen_t],\n    [zsh_cv_type_socklen_t=\n    for zsh_type in socklen_t int \"unsigned long\" size_t ; do\n      AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n        [[#include <sys/types.h>\n          #include <sys/socket.h>]],\n        [[extern int accept (int, struct sockaddr *, $zsh_type *);]])],\n        [zsh_cv_type_socklen_t=\"$zsh_type\"; break],\n        []\n      )\n    done\n    if test -z \"$zsh_cv_type_socklen_t\"; then\n      zsh_cv_type_socklen_t=int\n    fi]\n  )\n  AC_DEFINE_UNQUOTED([ZSOCKLEN_T], [$zsh_cv_type_socklen_t],\n  [Define to the base type of the third argument of accept])]\n)\n\ndnl Check for limit $1 e.g. RLIMIT_RSS.\nAC_DEFUN(zsh_LIMIT_PRESENT,\n[AH_TEMPLATE([HAVE_]$1,\n[Define to 1 if ]$1[ is present (whether or not as a macro).])\nAC_CACHE_CHECK([for limit $1],\nzsh_cv_have_$1,\n[AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n#include <sys/types.h>\n#ifdef HAVE_SYS_TIME_H\n#include <sys/time.h>\n#endif\n#include <sys/resource.h>]],\n[[$1]])],\n  [zsh_cv_have_$1=yes],\n  [zsh_cv_have_$1=no])])\n\nif test $zsh_cv_have_$1 = yes; then\n  AC_DEFINE(HAVE_$1)\nfi])\n\ndnl Check whether rlmit $1, e.g. AS, is the same as rlmit $3, e.g. VMEM.\ndnl $2 is lowercase $1, $4 is lowercase $3.\nAC_DEFUN(zsh_LIMITS_EQUAL,\n[AH_TEMPLATE([RLIMIT_]$1[_IS_]$3,\n[Define to 1 if RLIMIT_]$1[ and RLIMIT_]$3[ both exist and are equal.])\nAC_CACHE_CHECK([if RLIMIT_]$1[ and RLIMIT_]$3[ are the same],\nzsh_cv_rlimit_$2_is_$4,\n[AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n#include <sys/types.h>\n#ifdef HAVE_SYS_TIME_H\n#include <sys/time.h>\n#endif\n#include <sys/resource.h>]],\n[[static char x[(RLIMIT_$1 == RLIMIT_$3)? 1 : -1]]])],\n  [zsh_cv_rlimit_$2_is_$4=yes],\n  [zsh_cv_rlimit_$2_is_$4=no])])\nif test x$zsh_cv_rlimit_$2_is_$4 = xyes; then\n  AC_DEFINE(RLIMIT_$1_IS_$3)\nfi])\n"
        },
        {
          "name": "config.guess",
          "type": "blob",
          "size": 47.44921875,
          "content": "#! /bin/sh\n# Attempt to guess a canonical system name.\n#   Copyright 1992-2020 Free Software Foundation, Inc.\n\ntimestamp='2020-04-26'\n\n# This file is free software; you can redistribute it and/or modify it\n# under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, see <https://www.gnu.org/licenses/>.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that\n# program.  This Exception is an additional permission under section 7\n# of the GNU General Public License, version 3 (\"GPLv3\").\n#\n# Originally written by Per Bothner; maintained since 2000 by Ben Elliston.\n#\n# You can get the latest version of this script from:\n# https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess\n#\n# Please send patches to <config-patches@gnu.org>.\n\n\nme=`echo \"$0\" | sed -e 's,.*/,,'`\n\nusage=\"\\\nUsage: $0 [OPTION]\n\nOutput the configuration name of the system \\`$me' is run on.\n\nOptions:\n  -h, --help         print this help, then exit\n  -t, --time-stamp   print date of last modification, then exit\n  -v, --version      print version number, then exit\n\nReport bugs and patches to <config-patches@gnu.org>.\"\n\nversion=\"\\\nGNU config.guess ($timestamp)\n\nOriginally written by Per Bothner.\nCopyright 1992-2020 Free Software Foundation, Inc.\n\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n\nhelp=\"\nTry \\`$me --help' for more information.\"\n\n# Parse command line\nwhile test $# -gt 0 ; do\n  case $1 in\n    --time-stamp | --time* | -t )\n       echo \"$timestamp\" ; exit ;;\n    --version | -v )\n       echo \"$version\" ; exit ;;\n    --help | --h* | -h )\n       echo \"$usage\"; exit ;;\n    -- )     # Stop option processing\n       shift; break ;;\n    - )\t# Use stdin as input.\n       break ;;\n    -* )\n       echo \"$me: invalid option $1$help\" >&2\n       exit 1 ;;\n    * )\n       break ;;\n  esac\ndone\n\nif test $# != 0; then\n  echo \"$me: too many arguments$help\" >&2\n  exit 1\nfi\n\n# CC_FOR_BUILD -- compiler used by this script. Note that the use of a\n# compiler to aid in system detection is discouraged as it requires\n# temporary files to be created and, as you can see below, it is a\n# headache to deal with in a portable fashion.\n\n# Historically, `CC_FOR_BUILD' used to be named `HOST_CC'. We still\n# use `HOST_CC' if defined, but it is deprecated.\n\n# Portable tmp directory creation inspired by the Autoconf team.\n\ntmp=\n# shellcheck disable=SC2172\ntrap 'test -z \"$tmp\" || rm -fr \"$tmp\"' 0 1 2 13 15\n\nset_cc_for_build() {\n    # prevent multiple calls if $tmp is already set\n    test \"$tmp\" && return 0\n    : \"${TMPDIR=/tmp}\"\n    # shellcheck disable=SC2039\n    { tmp=`(umask 077 && mktemp -d \"$TMPDIR/cgXXXXXX\") 2>/dev/null` && test -n \"$tmp\" && test -d \"$tmp\" ; } ||\n\t{ test -n \"$RANDOM\" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir \"$tmp\" 2>/dev/null) ; } ||\n\t{ tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir \"$tmp\" 2>/dev/null) && echo \"Warning: creating insecure temp directory\" >&2 ; } ||\n\t{ echo \"$me: cannot create a temporary directory in $TMPDIR\" >&2 ; exit 1 ; }\n    dummy=$tmp/dummy\n    case ${CC_FOR_BUILD-},${HOST_CC-},${CC-} in\n\t,,)    echo \"int x;\" > \"$dummy.c\"\n\t       for driver in cc gcc c89 c99 ; do\n\t\t   if ($driver -c -o \"$dummy.o\" \"$dummy.c\") >/dev/null 2>&1 ; then\n\t\t       CC_FOR_BUILD=\"$driver\"\n\t\t       break\n\t\t   fi\n\t       done\n\t       if test x\"$CC_FOR_BUILD\" = x ; then\n\t\t   CC_FOR_BUILD=no_compiler_found\n\t       fi\n\t       ;;\n\t,,*)   CC_FOR_BUILD=$CC ;;\n\t,*,*)  CC_FOR_BUILD=$HOST_CC ;;\n    esac\n}\n\n# This is needed to find uname on a Pyramid OSx when run in the BSD universe.\n# (ghazi@noc.rutgers.edu 1994-08-24)\nif test -f /.attbin/uname ; then\n\tPATH=$PATH:/.attbin ; export PATH\nfi\n\nUNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown\nUNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown\nUNAME_SYSTEM=`(uname -s) 2>/dev/null`  || UNAME_SYSTEM=unknown\nUNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown\n\ncase \"$UNAME_SYSTEM\" in\nLinux|GNU|GNU/*)\n\t# If the system lacks a compiler, then just pick glibc.\n\t# We could probably try harder.\n\tLIBC=gnu\n\n\tset_cc_for_build\n\tcat <<-EOF > \"$dummy.c\"\n\t#include <features.h>\n\t#if defined(__UCLIBC__)\n\tLIBC=uclibc\n\t#elif defined(__dietlibc__)\n\tLIBC=dietlibc\n\t#else\n\tLIBC=gnu\n\t#endif\n\tEOF\n\teval \"`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^LIBC' | sed 's, ,,g'`\"\n\n\t# If ldd exists, use it to detect musl libc.\n\tif command -v ldd >/dev/null && \\\n\t\tldd --version 2>&1 | grep -q ^musl\n\tthen\n\t    LIBC=musl\n\tfi\n\t;;\nesac\n\n# Note: order is significant - the case branches are not exclusive.\n\ncase \"$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION\" in\n    *:NetBSD:*:*)\n\t# NetBSD (nbsd) targets should (where applicable) match one or\n\t# more of the tuples: *-*-netbsdelf*, *-*-netbsdaout*,\n\t# *-*-netbsdecoff* and *-*-netbsd*.  For targets that recently\n\t# switched to ELF, *-*-netbsd* would select the old\n\t# object file format.  This provides both forward\n\t# compatibility and a consistent mechanism for selecting the\n\t# object file format.\n\t#\n\t# Note: NetBSD doesn't particularly care about the vendor\n\t# portion of the name.  We always set it to \"unknown\".\n\tsysctl=\"sysctl -n hw.machine_arch\"\n\tUNAME_MACHINE_ARCH=`(uname -p 2>/dev/null || \\\n\t    \"/sbin/$sysctl\" 2>/dev/null || \\\n\t    \"/usr/sbin/$sysctl\" 2>/dev/null || \\\n\t    echo unknown)`\n\tcase \"$UNAME_MACHINE_ARCH\" in\n\t    armeb) machine=armeb-unknown ;;\n\t    arm*) machine=arm-unknown ;;\n\t    sh3el) machine=shl-unknown ;;\n\t    sh3eb) machine=sh-unknown ;;\n\t    sh5el) machine=sh5le-unknown ;;\n\t    earmv*)\n\t\tarch=`echo \"$UNAME_MACHINE_ARCH\" | sed -e 's,^e\\(armv[0-9]\\).*$,\\1,'`\n\t\tendian=`echo \"$UNAME_MACHINE_ARCH\" | sed -ne 's,^.*\\(eb\\)$,\\1,p'`\n\t\tmachine=\"${arch}${endian}\"-unknown\n\t\t;;\n\t    *) machine=\"$UNAME_MACHINE_ARCH\"-unknown ;;\n\tesac\n\t# The Operating System including object format, if it has switched\n\t# to ELF recently (or will in the future) and ABI.\n\tcase \"$UNAME_MACHINE_ARCH\" in\n\t    earm*)\n\t\tos=netbsdelf\n\t\t;;\n\t    arm*|i386|m68k|ns32k|sh3*|sparc|vax)\n\t\tset_cc_for_build\n\t\tif echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t\t\t| grep -q __ELF__\n\t\tthen\n\t\t    # Once all utilities can be ECOFF (netbsdecoff) or a.out (netbsdaout).\n\t\t    # Return netbsd for either.  FIX?\n\t\t    os=netbsd\n\t\telse\n\t\t    os=netbsdelf\n\t\tfi\n\t\t;;\n\t    *)\n\t\tos=netbsd\n\t\t;;\n\tesac\n\t# Determine ABI tags.\n\tcase \"$UNAME_MACHINE_ARCH\" in\n\t    earm*)\n\t\texpr='s/^earmv[0-9]/-eabi/;s/eb$//'\n\t\tabi=`echo \"$UNAME_MACHINE_ARCH\" | sed -e \"$expr\"`\n\t\t;;\n\tesac\n\t# The OS release\n\t# Debian GNU/NetBSD machines have a different userland, and\n\t# thus, need a distinct triplet. However, they do not need\n\t# kernel version information, so it can be replaced with a\n\t# suitable tag, in the style of linux-gnu.\n\tcase \"$UNAME_VERSION\" in\n\t    Debian*)\n\t\trelease='-gnu'\n\t\t;;\n\t    *)\n\t\trelease=`echo \"$UNAME_RELEASE\" | sed -e 's/[-_].*//' | cut -d. -f1,2`\n\t\t;;\n\tesac\n\t# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:\n\t# contains redundant information, the shorter form:\n\t# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.\n\techo \"$machine-${os}${release}${abi-}\"\n\texit ;;\n    *:Bitrig:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/Bitrig.//'`\n\techo \"$UNAME_MACHINE_ARCH\"-unknown-bitrig\"$UNAME_RELEASE\"\n\texit ;;\n    *:OpenBSD:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/OpenBSD.//'`\n\techo \"$UNAME_MACHINE_ARCH\"-unknown-openbsd\"$UNAME_RELEASE\"\n\texit ;;\n    *:LibertyBSD:*:*)\n\tUNAME_MACHINE_ARCH=`arch | sed 's/^.*BSD\\.//'`\n\techo \"$UNAME_MACHINE_ARCH\"-unknown-libertybsd\"$UNAME_RELEASE\"\n\texit ;;\n    *:MidnightBSD:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-midnightbsd\"$UNAME_RELEASE\"\n\texit ;;\n    *:ekkoBSD:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-ekkobsd\"$UNAME_RELEASE\"\n\texit ;;\n    *:SolidBSD:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-solidbsd\"$UNAME_RELEASE\"\n\texit ;;\n    *:OS108:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-os108_\"$UNAME_RELEASE\"\n\texit ;;\n    macppc:MirBSD:*:*)\n\techo powerpc-unknown-mirbsd\"$UNAME_RELEASE\"\n\texit ;;\n    *:MirBSD:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-mirbsd\"$UNAME_RELEASE\"\n\texit ;;\n    *:Sortix:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-sortix\n\texit ;;\n    *:Twizzler:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-twizzler\n\texit ;;\n    *:Redox:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-redox\n\texit ;;\n    mips:OSF1:*.*)\n\techo mips-dec-osf1\n\texit ;;\n    alpha:OSF1:*:*)\n\tcase $UNAME_RELEASE in\n\t*4.0)\n\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`\n\t\t;;\n\t*5.*)\n\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $4}'`\n\t\t;;\n\tesac\n\t# According to Compaq, /usr/sbin/psrinfo has been available on\n\t# OSF/1 and Tru64 systems produced since 1995.  I hope that\n\t# covers most systems running today.  This code pipes the CPU\n\t# types through head -n 1, so we only detect the type of CPU 0.\n\tALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \\(.*\\) processor.*$/\\1/p' | head -n 1`\n\tcase \"$ALPHA_CPU_TYPE\" in\n\t    \"EV4 (21064)\")\n\t\tUNAME_MACHINE=alpha ;;\n\t    \"EV4.5 (21064)\")\n\t\tUNAME_MACHINE=alpha ;;\n\t    \"LCA4 (21066/21068)\")\n\t\tUNAME_MACHINE=alpha ;;\n\t    \"EV5 (21164)\")\n\t\tUNAME_MACHINE=alphaev5 ;;\n\t    \"EV5.6 (21164A)\")\n\t\tUNAME_MACHINE=alphaev56 ;;\n\t    \"EV5.6 (21164PC)\")\n\t\tUNAME_MACHINE=alphapca56 ;;\n\t    \"EV5.7 (21164PC)\")\n\t\tUNAME_MACHINE=alphapca57 ;;\n\t    \"EV6 (21264)\")\n\t\tUNAME_MACHINE=alphaev6 ;;\n\t    \"EV6.7 (21264A)\")\n\t\tUNAME_MACHINE=alphaev67 ;;\n\t    \"EV6.8CB (21264C)\")\n\t\tUNAME_MACHINE=alphaev68 ;;\n\t    \"EV6.8AL (21264B)\")\n\t\tUNAME_MACHINE=alphaev68 ;;\n\t    \"EV6.8CX (21264D)\")\n\t\tUNAME_MACHINE=alphaev68 ;;\n\t    \"EV6.9A (21264/EV69A)\")\n\t\tUNAME_MACHINE=alphaev69 ;;\n\t    \"EV7 (21364)\")\n\t\tUNAME_MACHINE=alphaev7 ;;\n\t    \"EV7.9 (21364A)\")\n\t\tUNAME_MACHINE=alphaev79 ;;\n\tesac\n\t# A Pn.n version is a patched version.\n\t# A Vn.n version is a released version.\n\t# A Tn.n version is a released field test version.\n\t# A Xn.n version is an unreleased experimental baselevel.\n\t# 1.2 uses \"1.2\" for uname -r.\n\techo \"$UNAME_MACHINE\"-dec-osf\"`echo \"$UNAME_RELEASE\" | sed -e 's/^[PVTX]//' | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\"\n\t# Reset EXIT trap before exiting to avoid spurious non-zero exit code.\n\texitcode=$?\n\ttrap '' 0\n\texit $exitcode ;;\n    Amiga*:UNIX_System_V:4.0:*)\n\techo m68k-unknown-sysv4\n\texit ;;\n    *:[Aa]miga[Oo][Ss]:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-amigaos\n\texit ;;\n    *:[Mm]orph[Oo][Ss]:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-morphos\n\texit ;;\n    *:OS/390:*:*)\n\techo i370-ibm-openedition\n\texit ;;\n    *:z/VM:*:*)\n\techo s390-ibm-zvmoe\n\texit ;;\n    *:OS400:*:*)\n\techo powerpc-ibm-os400\n\texit ;;\n    arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)\n\techo arm-acorn-riscix\"$UNAME_RELEASE\"\n\texit ;;\n    arm*:riscos:*:*|arm*:RISCOS:*:*)\n\techo arm-unknown-riscos\n\texit ;;\n    SR2?01:HI-UX/MPP:*:* | SR8000:HI-UX/MPP:*:*)\n\techo hppa1.1-hitachi-hiuxmpp\n\texit ;;\n    Pyramid*:OSx*:*:* | MIS*:OSx*:*:* | MIS*:SMP_DC-OSx*:*:*)\n\t# akee@wpdis03.wpafb.af.mil (Earle F. Ake) contributed MIS and NILE.\n\tif test \"`(/bin/universe) 2>/dev/null`\" = att ; then\n\t\techo pyramid-pyramid-sysv3\n\telse\n\t\techo pyramid-pyramid-bsd\n\tfi\n\texit ;;\n    NILE*:*:*:dcosx)\n\techo pyramid-pyramid-svr4\n\texit ;;\n    DRS?6000:unix:4.0:6*)\n\techo sparc-icl-nx6\n\texit ;;\n    DRS?6000:UNIX_SV:4.2*:7* | DRS?6000:isis:4.2*:7*)\n\tcase `/usr/bin/uname -p` in\n\t    sparc) echo sparc-icl-nx7; exit ;;\n\tesac ;;\n    s390x:SunOS:*:*)\n\techo \"$UNAME_MACHINE\"-ibm-solaris2\"`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\"\n\texit ;;\n    sun4H:SunOS:5.*:*)\n\techo sparc-hal-solaris2\"`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//'`\"\n\texit ;;\n    sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)\n\techo sparc-sun-solaris2\"`echo \"$UNAME_RELEASE\" | sed -e 's/[^.]*//'`\"\n\texit ;;\n    i86pc:AuroraUX:5.*:* | i86xen:AuroraUX:5.*:*)\n\techo i386-pc-auroraux\"$UNAME_RELEASE\"\n\texit ;;\n    i86pc:SunOS:5.*:* | i86xen:SunOS:5.*:*)\n\tset_cc_for_build\n\tSUN_ARCH=i386\n\t# If there is a compiler, see if it is configured for 64-bit objects.\n\t# Note that the Sun cc does not turn __LP64__ into 1 like gcc does.\n\t# This test works for both compilers.\n\tif [ \"$CC_FOR_BUILD\" != no_compiler_found ]; then\n\t    if (echo '#ifdef __amd64'; echo IS_64BIT_ARCH; echo '#endif') | \\\n\t\t(CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n\t\tgrep IS_64BIT_ARCH >/dev/null\n\t    then\n\t\tSUN_ARCH=x86_64\n\t    fi\n\tfi\n\techo \"$SUN_ARCH\"-pc-solaris2\"`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//'`\"\n\texit ;;\n    sun4*:SunOS:6*:*)\n\t# According to config.sub, this is the proper way to canonicalize\n\t# SunOS6.  Hard to guess exactly what SunOS6 will be like, but\n\t# it's likely to be more like Solaris than SunOS4.\n\techo sparc-sun-solaris3\"`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//'`\"\n\texit ;;\n    sun4*:SunOS:*:*)\n\tcase \"`/usr/bin/arch -k`\" in\n\t    Series*|S4*)\n\t\tUNAME_RELEASE=`uname -v`\n\t\t;;\n\tesac\n\t# Japanese Language versions have a version number like `4.1.3-JL'.\n\techo sparc-sun-sunos\"`echo \"$UNAME_RELEASE\"|sed -e 's/-/_/'`\"\n\texit ;;\n    sun3*:SunOS:*:*)\n\techo m68k-sun-sunos\"$UNAME_RELEASE\"\n\texit ;;\n    sun*:*:4.2BSD:*)\n\tUNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`\n\ttest \"x$UNAME_RELEASE\" = x && UNAME_RELEASE=3\n\tcase \"`/bin/arch`\" in\n\t    sun3)\n\t\techo m68k-sun-sunos\"$UNAME_RELEASE\"\n\t\t;;\n\t    sun4)\n\t\techo sparc-sun-sunos\"$UNAME_RELEASE\"\n\t\t;;\n\tesac\n\texit ;;\n    aushp:SunOS:*:*)\n\techo sparc-auspex-sunos\"$UNAME_RELEASE\"\n\texit ;;\n    # The situation for MiNT is a little confusing.  The machine name\n    # can be virtually everything (everything which is not\n    # \"atarist\" or \"atariste\" at least should have a processor\n    # > m68000).  The system name ranges from \"MiNT\" over \"FreeMiNT\"\n    # to the lowercase version \"mint\" (or \"freemint\").  Finally\n    # the system name \"TOS\" denotes a system which is actually not\n    # MiNT.  But MiNT is downward compatible to TOS, so this should\n    # be no problem.\n    atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)\n\techo m68k-atari-mint\"$UNAME_RELEASE\"\n\texit ;;\n    atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)\n\techo m68k-atari-mint\"$UNAME_RELEASE\"\n\texit ;;\n    *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)\n\techo m68k-atari-mint\"$UNAME_RELEASE\"\n\texit ;;\n    milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)\n\techo m68k-milan-mint\"$UNAME_RELEASE\"\n\texit ;;\n    hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)\n\techo m68k-hades-mint\"$UNAME_RELEASE\"\n\texit ;;\n    *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)\n\techo m68k-unknown-mint\"$UNAME_RELEASE\"\n\texit ;;\n    m68k:machten:*:*)\n\techo m68k-apple-machten\"$UNAME_RELEASE\"\n\texit ;;\n    powerpc:machten:*:*)\n\techo powerpc-apple-machten\"$UNAME_RELEASE\"\n\texit ;;\n    RISC*:Mach:*:*)\n\techo mips-dec-mach_bsd4.3\n\texit ;;\n    RISC*:ULTRIX:*:*)\n\techo mips-dec-ultrix\"$UNAME_RELEASE\"\n\texit ;;\n    VAX*:ULTRIX*:*:*)\n\techo vax-dec-ultrix\"$UNAME_RELEASE\"\n\texit ;;\n    2020:CLIX:*:* | 2430:CLIX:*:*)\n\techo clipper-intergraph-clix\"$UNAME_RELEASE\"\n\texit ;;\n    mips:*:*:UMIPS | mips:*:*:RISCos)\n\tset_cc_for_build\n\tsed 's/^\t//' << EOF > \"$dummy.c\"\n#ifdef __cplusplus\n#include <stdio.h>  /* for printf() prototype */\n\tint main (int argc, char *argv[]) {\n#else\n\tint main (argc, argv) int argc; char *argv[]; {\n#endif\n\t#if defined (host_mips) && defined (MIPSEB)\n\t#if defined (SYSTYPE_SYSV)\n\t  printf (\"mips-mips-riscos%ssysv\\\\n\", argv[1]); exit (0);\n\t#endif\n\t#if defined (SYSTYPE_SVR4)\n\t  printf (\"mips-mips-riscos%ssvr4\\\\n\", argv[1]); exit (0);\n\t#endif\n\t#if defined (SYSTYPE_BSD43) || defined(SYSTYPE_BSD)\n\t  printf (\"mips-mips-riscos%sbsd\\\\n\", argv[1]); exit (0);\n\t#endif\n\t#endif\n\t  exit (-1);\n\t}\nEOF\n\t$CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" &&\n\t  dummyarg=`echo \"$UNAME_RELEASE\" | sed -n 's/\\([0-9]*\\).*/\\1/p'` &&\n\t  SYSTEM_NAME=`\"$dummy\" \"$dummyarg\"` &&\n\t    { echo \"$SYSTEM_NAME\"; exit; }\n\techo mips-mips-riscos\"$UNAME_RELEASE\"\n\texit ;;\n    Motorola:PowerMAX_OS:*:*)\n\techo powerpc-motorola-powermax\n\texit ;;\n    Motorola:*:4.3:PL8-*)\n\techo powerpc-harris-powermax\n\texit ;;\n    Night_Hawk:*:*:PowerMAX_OS | Synergy:PowerMAX_OS:*:*)\n\techo powerpc-harris-powermax\n\texit ;;\n    Night_Hawk:Power_UNIX:*:*)\n\techo powerpc-harris-powerunix\n\texit ;;\n    m88k:CX/UX:7*:*)\n\techo m88k-harris-cxux7\n\texit ;;\n    m88k:*:4*:R4*)\n\techo m88k-motorola-sysv4\n\texit ;;\n    m88k:*:3*:R3*)\n\techo m88k-motorola-sysv3\n\texit ;;\n    AViiON:dgux:*:*)\n\t# DG/UX returns AViiON for all architectures\n\tUNAME_PROCESSOR=`/usr/bin/uname -p`\n\tif [ \"$UNAME_PROCESSOR\" = mc88100 ] || [ \"$UNAME_PROCESSOR\" = mc88110 ]\n\tthen\n\t    if [ \"$TARGET_BINARY_INTERFACE\"x = m88kdguxelfx ] || \\\n\t       [ \"$TARGET_BINARY_INTERFACE\"x = x ]\n\t    then\n\t\techo m88k-dg-dgux\"$UNAME_RELEASE\"\n\t    else\n\t\techo m88k-dg-dguxbcs\"$UNAME_RELEASE\"\n\t    fi\n\telse\n\t    echo i586-dg-dgux\"$UNAME_RELEASE\"\n\tfi\n\texit ;;\n    M88*:DolphinOS:*:*)\t# DolphinOS (SVR3)\n\techo m88k-dolphin-sysv3\n\texit ;;\n    M88*:*:R3*:*)\n\t# Delta 88k system running SVR3\n\techo m88k-motorola-sysv3\n\texit ;;\n    XD88*:*:*:*) # Tektronix XD88 system running UTekV (SVR3)\n\techo m88k-tektronix-sysv3\n\texit ;;\n    Tek43[0-9][0-9]:UTek:*:*) # Tektronix 4300 system running UTek (BSD)\n\techo m68k-tektronix-bsd\n\texit ;;\n    *:IRIX*:*:*)\n\techo mips-sgi-irix\"`echo \"$UNAME_RELEASE\"|sed -e 's/-/_/g'`\"\n\texit ;;\n    ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.\n\techo romp-ibm-aix     # uname -m gives an 8 hex-code CPU id\n\texit ;;               # Note that: echo \"'`uname -s`'\" gives 'AIX '\n    i*86:AIX:*:*)\n\techo i386-ibm-aix\n\texit ;;\n    ia64:AIX:*:*)\n\tif [ -x /usr/bin/oslevel ] ; then\n\t\tIBM_REV=`/usr/bin/oslevel`\n\telse\n\t\tIBM_REV=\"$UNAME_VERSION.$UNAME_RELEASE\"\n\tfi\n\techo \"$UNAME_MACHINE\"-ibm-aix\"$IBM_REV\"\n\texit ;;\n    *:AIX:2:3)\n\tif grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then\n\t\tset_cc_for_build\n\t\tsed 's/^\t\t//' << EOF > \"$dummy.c\"\n\t\t#include <sys/systemcfg.h>\n\n\t\tmain()\n\t\t\t{\n\t\t\tif (!__power_pc())\n\t\t\t\texit(1);\n\t\t\tputs(\"powerpc-ibm-aix3.2.5\");\n\t\t\texit(0);\n\t\t\t}\nEOF\n\t\tif $CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" && SYSTEM_NAME=`\"$dummy\"`\n\t\tthen\n\t\t\techo \"$SYSTEM_NAME\"\n\t\telse\n\t\t\techo rs6000-ibm-aix3.2.5\n\t\tfi\n\telif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then\n\t\techo rs6000-ibm-aix3.2.4\n\telse\n\t\techo rs6000-ibm-aix3.2\n\tfi\n\texit ;;\n    *:AIX:*:[4567])\n\tIBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`\n\tif /usr/sbin/lsattr -El \"$IBM_CPU_ID\" | grep ' POWER' >/dev/null 2>&1; then\n\t\tIBM_ARCH=rs6000\n\telse\n\t\tIBM_ARCH=powerpc\n\tfi\n\tif [ -x /usr/bin/lslpp ] ; then\n\t\tIBM_REV=`/usr/bin/lslpp -Lqc bos.rte.libc |\n\t\t\t   awk -F: '{ print $3 }' | sed s/[0-9]*$/0/`\n\telse\n\t\tIBM_REV=\"$UNAME_VERSION.$UNAME_RELEASE\"\n\tfi\n\techo \"$IBM_ARCH\"-ibm-aix\"$IBM_REV\"\n\texit ;;\n    *:AIX:*:*)\n\techo rs6000-ibm-aix\n\texit ;;\n    ibmrt:4.4BSD:*|romp-ibm:4.4BSD:*)\n\techo romp-ibm-bsd4.4\n\texit ;;\n    ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC BSD and\n\techo romp-ibm-bsd\"$UNAME_RELEASE\"   # 4.3 with uname added to\n\texit ;;                             # report: romp-ibm BSD 4.3\n    *:BOSX:*:*)\n\techo rs6000-bull-bosx\n\texit ;;\n    DPX/2?00:B.O.S.:*:*)\n\techo m68k-bull-sysv3\n\texit ;;\n    9000/[34]??:4.3bsd:1.*:*)\n\techo m68k-hp-bsd\n\texit ;;\n    hp300:4.4BSD:*:* | 9000/[34]??:4.3bsd:2.*:*)\n\techo m68k-hp-bsd4.4\n\texit ;;\n    9000/[34678]??:HP-UX:*:*)\n\tHPUX_REV=`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*.[0B]*//'`\n\tcase \"$UNAME_MACHINE\" in\n\t    9000/31?)            HP_ARCH=m68000 ;;\n\t    9000/[34]??)         HP_ARCH=m68k ;;\n\t    9000/[678][0-9][0-9])\n\t\tif [ -x /usr/bin/getconf ]; then\n\t\t    sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`\n\t\t    sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`\n\t\t    case \"$sc_cpu_version\" in\n\t\t      523) HP_ARCH=hppa1.0 ;; # CPU_PA_RISC1_0\n\t\t      528) HP_ARCH=hppa1.1 ;; # CPU_PA_RISC1_1\n\t\t      532)                      # CPU_PA_RISC2_0\n\t\t\tcase \"$sc_kernel_bits\" in\n\t\t\t  32) HP_ARCH=hppa2.0n ;;\n\t\t\t  64) HP_ARCH=hppa2.0w ;;\n\t\t\t  '') HP_ARCH=hppa2.0 ;;   # HP-UX 10.20\n\t\t\tesac ;;\n\t\t    esac\n\t\tfi\n\t\tif [ \"$HP_ARCH\" = \"\" ]; then\n\t\t    set_cc_for_build\n\t\t    sed 's/^\t\t//' << EOF > \"$dummy.c\"\n\n\t\t#define _HPUX_SOURCE\n\t\t#include <stdlib.h>\n\t\t#include <unistd.h>\n\n\t\tint main ()\n\t\t{\n\t\t#if defined(_SC_KERNEL_BITS)\n\t\t    long bits = sysconf(_SC_KERNEL_BITS);\n\t\t#endif\n\t\t    long cpu  = sysconf (_SC_CPU_VERSION);\n\n\t\t    switch (cpu)\n\t\t\t{\n\t\t\tcase CPU_PA_RISC1_0: puts (\"hppa1.0\"); break;\n\t\t\tcase CPU_PA_RISC1_1: puts (\"hppa1.1\"); break;\n\t\t\tcase CPU_PA_RISC2_0:\n\t\t#if defined(_SC_KERNEL_BITS)\n\t\t\t    switch (bits)\n\t\t\t\t{\n\t\t\t\tcase 64: puts (\"hppa2.0w\"); break;\n\t\t\t\tcase 32: puts (\"hppa2.0n\"); break;\n\t\t\t\tdefault: puts (\"hppa2.0\"); break;\n\t\t\t\t} break;\n\t\t#else  /* !defined(_SC_KERNEL_BITS) */\n\t\t\t    puts (\"hppa2.0\"); break;\n\t\t#endif\n\t\t\tdefault: puts (\"hppa1.0\"); break;\n\t\t\t}\n\t\t    exit (0);\n\t\t}\nEOF\n\t\t    (CCOPTS=\"\" $CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" 2>/dev/null) && HP_ARCH=`\"$dummy\"`\n\t\t    test -z \"$HP_ARCH\" && HP_ARCH=hppa\n\t\tfi ;;\n\tesac\n\tif [ \"$HP_ARCH\" = hppa2.0w ]\n\tthen\n\t    set_cc_for_build\n\n\t    # hppa2.0w-hp-hpux* has a 64-bit kernel and a compiler generating\n\t    # 32-bit code.  hppa64-hp-hpux* has the same kernel and a compiler\n\t    # generating 64-bit code.  GNU and HP use different nomenclature:\n\t    #\n\t    # $ CC_FOR_BUILD=cc ./config.guess\n\t    # => hppa2.0w-hp-hpux11.23\n\t    # $ CC_FOR_BUILD=\"cc +DA2.0w\" ./config.guess\n\t    # => hppa64-hp-hpux11.23\n\n\t    if echo __LP64__ | (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) |\n\t\tgrep -q __LP64__\n\t    then\n\t\tHP_ARCH=hppa2.0w\n\t    else\n\t\tHP_ARCH=hppa64\n\t    fi\n\tfi\n\techo \"$HP_ARCH\"-hp-hpux\"$HPUX_REV\"\n\texit ;;\n    ia64:HP-UX:*:*)\n\tHPUX_REV=`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*.[0B]*//'`\n\techo ia64-hp-hpux\"$HPUX_REV\"\n\texit ;;\n    3050*:HI-UX:*:*)\n\tset_cc_for_build\n\tsed 's/^\t//' << EOF > \"$dummy.c\"\n\t#include <unistd.h>\n\tint\n\tmain ()\n\t{\n\t  long cpu = sysconf (_SC_CPU_VERSION);\n\t  /* The order matters, because CPU_IS_HP_MC68K erroneously returns\n\t     true for CPU_PA_RISC1_0.  CPU_IS_PA_RISC returns correct\n\t     results, however.  */\n\t  if (CPU_IS_PA_RISC (cpu))\n\t    {\n\t      switch (cpu)\n\t\t{\n\t\t  case CPU_PA_RISC1_0: puts (\"hppa1.0-hitachi-hiuxwe2\"); break;\n\t\t  case CPU_PA_RISC1_1: puts (\"hppa1.1-hitachi-hiuxwe2\"); break;\n\t\t  case CPU_PA_RISC2_0: puts (\"hppa2.0-hitachi-hiuxwe2\"); break;\n\t\t  default: puts (\"hppa-hitachi-hiuxwe2\"); break;\n\t\t}\n\t    }\n\t  else if (CPU_IS_HP_MC68K (cpu))\n\t    puts (\"m68k-hitachi-hiuxwe2\");\n\t  else puts (\"unknown-hitachi-hiuxwe2\");\n\t  exit (0);\n\t}\nEOF\n\t$CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" && SYSTEM_NAME=`\"$dummy\"` &&\n\t\t{ echo \"$SYSTEM_NAME\"; exit; }\n\techo unknown-hitachi-hiuxwe2\n\texit ;;\n    9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:*)\n\techo hppa1.1-hp-bsd\n\texit ;;\n    9000/8??:4.3bsd:*:*)\n\techo hppa1.0-hp-bsd\n\texit ;;\n    *9??*:MPE/iX:*:* | *3000*:MPE/iX:*:*)\n\techo hppa1.0-hp-mpeix\n\texit ;;\n    hp7??:OSF1:*:* | hp8?[79]:OSF1:*:*)\n\techo hppa1.1-hp-osf\n\texit ;;\n    hp8??:OSF1:*:*)\n\techo hppa1.0-hp-osf\n\texit ;;\n    i*86:OSF1:*:*)\n\tif [ -x /usr/sbin/sysversion ] ; then\n\t    echo \"$UNAME_MACHINE\"-unknown-osf1mk\n\telse\n\t    echo \"$UNAME_MACHINE\"-unknown-osf1\n\tfi\n\texit ;;\n    parisc*:Lites*:*:*)\n\techo hppa1.1-hp-lites\n\texit ;;\n    C1*:ConvexOS:*:* | convex:ConvexOS:C1*:*)\n\techo c1-convex-bsd\n\texit ;;\n    C2*:ConvexOS:*:* | convex:ConvexOS:C2*:*)\n\tif getsysinfo -f scalar_acc\n\tthen echo c32-convex-bsd\n\telse echo c2-convex-bsd\n\tfi\n\texit ;;\n    C34*:ConvexOS:*:* | convex:ConvexOS:C34*:*)\n\techo c34-convex-bsd\n\texit ;;\n    C38*:ConvexOS:*:* | convex:ConvexOS:C38*:*)\n\techo c38-convex-bsd\n\texit ;;\n    C4*:ConvexOS:*:* | convex:ConvexOS:C4*:*)\n\techo c4-convex-bsd\n\texit ;;\n    CRAY*Y-MP:*:*:*)\n\techo ymp-cray-unicos\"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    CRAY*[A-Z]90:*:*:*)\n\techo \"$UNAME_MACHINE\"-cray-unicos\"$UNAME_RELEASE\" \\\n\t| sed -e 's/CRAY.*\\([A-Z]90\\)/\\1/' \\\n\t      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/ \\\n\t      -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    CRAY*TS:*:*:*)\n\techo t90-cray-unicos\"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    CRAY*T3E:*:*:*)\n\techo alphaev5-cray-unicosmk\"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    CRAY*SV1:*:*:*)\n\techo sv1-cray-unicos\"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    *:UNICOS/mp:*:*)\n\techo craynv-cray-unicosmp\"$UNAME_RELEASE\" | sed -e 's/\\.[^.]*$/.X/'\n\texit ;;\n    F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)\n\tFUJITSU_PROC=`uname -m | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`\n\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n\tFUJITSU_REL=`echo \"$UNAME_RELEASE\" | sed -e 's/ /_/'`\n\techo \"${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n\texit ;;\n    5000:UNIX_System_V:4.*:*)\n\tFUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\\///'`\n\tFUJITSU_REL=`echo \"$UNAME_RELEASE\" | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/ /_/'`\n\techo \"sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n\texit ;;\n    i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\\ Embedded/OS:*:*)\n\techo \"$UNAME_MACHINE\"-pc-bsdi\"$UNAME_RELEASE\"\n\texit ;;\n    sparc*:BSD/OS:*:*)\n\techo sparc-unknown-bsdi\"$UNAME_RELEASE\"\n\texit ;;\n    *:BSD/OS:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-bsdi\"$UNAME_RELEASE\"\n\texit ;;\n    arm:FreeBSD:*:*)\n\tUNAME_PROCESSOR=`uname -p`\n\tset_cc_for_build\n\tif echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t    | grep -q __ARM_PCS_VFP\n\tthen\n\t    echo \"${UNAME_PROCESSOR}\"-unknown-freebsd\"`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\"-gnueabi\n\telse\n\t    echo \"${UNAME_PROCESSOR}\"-unknown-freebsd\"`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\"-gnueabihf\n\tfi\n\texit ;;\n    *:FreeBSD:*:*)\n\tUNAME_PROCESSOR=`/usr/bin/uname -p`\n\tcase \"$UNAME_PROCESSOR\" in\n\t    amd64)\n\t\tUNAME_PROCESSOR=x86_64 ;;\n\t    i386)\n\t\tUNAME_PROCESSOR=i586 ;;\n\tesac\n\techo \"$UNAME_PROCESSOR\"-unknown-freebsd\"`echo \"$UNAME_RELEASE\"|sed -e 's/[-(].*//'`\"\n\texit ;;\n    i*:CYGWIN*:*)\n\techo \"$UNAME_MACHINE\"-pc-cygwin\n\texit ;;\n    *:MINGW64*:*)\n\techo \"$UNAME_MACHINE\"-pc-mingw64\n\texit ;;\n    *:MINGW*:*)\n\techo \"$UNAME_MACHINE\"-pc-mingw32\n\texit ;;\n    *:MSYS*:*)\n\techo \"$UNAME_MACHINE\"-pc-msys\n\texit ;;\n    i*:PW*:*)\n\techo \"$UNAME_MACHINE\"-pc-pw32\n\texit ;;\n    *:Interix*:*)\n\tcase \"$UNAME_MACHINE\" in\n\t    x86)\n\t\techo i586-pc-interix\"$UNAME_RELEASE\"\n\t\texit ;;\n\t    authenticamd | genuineintel | EM64T)\n\t\techo x86_64-unknown-interix\"$UNAME_RELEASE\"\n\t\texit ;;\n\t    IA64)\n\t\techo ia64-unknown-interix\"$UNAME_RELEASE\"\n\t\texit ;;\n\tesac ;;\n    i*:UWIN*:*)\n\techo \"$UNAME_MACHINE\"-pc-uwin\n\texit ;;\n    amd64:CYGWIN*:*:* | x86_64:CYGWIN*:*:*)\n\techo x86_64-pc-cygwin\n\texit ;;\n    prep*:SunOS:5.*:*)\n\techo powerpcle-unknown-solaris2\"`echo \"$UNAME_RELEASE\"|sed -e 's/[^.]*//'`\"\n\texit ;;\n    *:GNU:*:*)\n\t# the GNU system\n\techo \"`echo \"$UNAME_MACHINE\"|sed -e 's,[-/].*$,,'`-unknown-$LIBC`echo \"$UNAME_RELEASE\"|sed -e 's,/.*$,,'`\"\n\texit ;;\n    *:GNU/*:*:*)\n\t# other systems with GNU libc and userland\n\techo \"$UNAME_MACHINE-unknown-`echo \"$UNAME_SYSTEM\" | sed 's,^[^/]*/,,' | tr \"[:upper:]\" \"[:lower:]\"``echo \"$UNAME_RELEASE\"|sed -e 's/[-(].*//'`-$LIBC\"\n\texit ;;\n    *:Minix:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-minix\n\texit ;;\n    aarch64:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    aarch64_be:Linux:*:*)\n\tUNAME_MACHINE=aarch64_be\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    alpha:Linux:*:*)\n\tcase `sed -n '/^cpu model/s/^.*: \\(.*\\)/\\1/p' /proc/cpuinfo 2>/dev/null` in\n\t  EV5)   UNAME_MACHINE=alphaev5 ;;\n\t  EV56)  UNAME_MACHINE=alphaev56 ;;\n\t  PCA56) UNAME_MACHINE=alphapca56 ;;\n\t  PCA57) UNAME_MACHINE=alphapca56 ;;\n\t  EV6)   UNAME_MACHINE=alphaev6 ;;\n\t  EV67)  UNAME_MACHINE=alphaev67 ;;\n\t  EV68*) UNAME_MACHINE=alphaev68 ;;\n\tesac\n\tobjdump --private-headers /bin/sh | grep -q ld.so.1\n\tif test \"$?\" = 0 ; then LIBC=gnulibc1 ; fi\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    arc:Linux:*:* | arceb:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    arm*:Linux:*:*)\n\tset_cc_for_build\n\tif echo __ARM_EABI__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t    | grep -q __ARM_EABI__\n\tthen\n\t    echo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\telse\n\t    if echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n\t\t| grep -q __ARM_PCS_VFP\n\t    then\n\t\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"eabi\n\t    else\n\t\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"eabihf\n\t    fi\n\tfi\n\texit ;;\n    avr32*:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    cris:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-axis-linux-\"$LIBC\"\n\texit ;;\n    crisv32:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-axis-linux-\"$LIBC\"\n\texit ;;\n    e2k:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    frv:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    hexagon:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    i*86:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-pc-linux-\"$LIBC\"\n\texit ;;\n    ia64:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    k1om:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    m32r*:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    m68*:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    mips:Linux:*:* | mips64:Linux:*:*)\n\tset_cc_for_build\n\tIS_GLIBC=0\n\ttest x\"${LIBC}\" = xgnu && IS_GLIBC=1\n\tsed 's/^\t//' << EOF > \"$dummy.c\"\n\t#undef CPU\n\t#undef mips\n\t#undef mipsel\n\t#undef mips64\n\t#undef mips64el\n\t#if ${IS_GLIBC} && defined(_ABI64)\n\tLIBCABI=gnuabi64\n\t#else\n\t#if ${IS_GLIBC} && defined(_ABIN32)\n\tLIBCABI=gnuabin32\n\t#else\n\tLIBCABI=${LIBC}\n\t#endif\n\t#endif\n\n\t#if ${IS_GLIBC} && defined(__mips64) && defined(__mips_isa_rev) && __mips_isa_rev>=6\n\tCPU=mipsisa64r6\n\t#else\n\t#if ${IS_GLIBC} && !defined(__mips64) && defined(__mips_isa_rev) && __mips_isa_rev>=6\n\tCPU=mipsisa32r6\n\t#else\n\t#if defined(__mips64)\n\tCPU=mips64\n\t#else\n\tCPU=mips\n\t#endif\n\t#endif\n\t#endif\n\n\t#if defined(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL) || defined(MIPSEL)\n\tMIPS_ENDIAN=el\n\t#else\n\t#if defined(__MIPSEB__) || defined(__MIPSEB) || defined(_MIPSEB) || defined(MIPSEB)\n\tMIPS_ENDIAN=\n\t#else\n\tMIPS_ENDIAN=\n\t#endif\n\t#endif\nEOF\n\teval \"`$CC_FOR_BUILD -E \"$dummy.c\" 2>/dev/null | grep '^CPU\\|^MIPS_ENDIAN\\|^LIBCABI'`\"\n\ttest \"x$CPU\" != x && { echo \"$CPU${MIPS_ENDIAN}-unknown-linux-$LIBCABI\"; exit; }\n\t;;\n    mips64el:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    openrisc*:Linux:*:*)\n\techo or1k-unknown-linux-\"$LIBC\"\n\texit ;;\n    or32:Linux:*:* | or1k*:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    padre:Linux:*:*)\n\techo sparc-unknown-linux-\"$LIBC\"\n\texit ;;\n    parisc64:Linux:*:* | hppa64:Linux:*:*)\n\techo hppa64-unknown-linux-\"$LIBC\"\n\texit ;;\n    parisc:Linux:*:* | hppa:Linux:*:*)\n\t# Look for CPU level\n\tcase `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in\n\t  PA7*) echo hppa1.1-unknown-linux-\"$LIBC\" ;;\n\t  PA8*) echo hppa2.0-unknown-linux-\"$LIBC\" ;;\n\t  *)    echo hppa-unknown-linux-\"$LIBC\" ;;\n\tesac\n\texit ;;\n    ppc64:Linux:*:*)\n\techo powerpc64-unknown-linux-\"$LIBC\"\n\texit ;;\n    ppc:Linux:*:*)\n\techo powerpc-unknown-linux-\"$LIBC\"\n\texit ;;\n    ppc64le:Linux:*:*)\n\techo powerpc64le-unknown-linux-\"$LIBC\"\n\texit ;;\n    ppcle:Linux:*:*)\n\techo powerpcle-unknown-linux-\"$LIBC\"\n\texit ;;\n    riscv32:Linux:*:* | riscv64:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    s390:Linux:*:* | s390x:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-ibm-linux-\"$LIBC\"\n\texit ;;\n    sh64*:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    sh*:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    sparc:Linux:*:* | sparc64:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    tile*:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    vax:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-dec-linux-\"$LIBC\"\n\texit ;;\n    x86_64:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-pc-linux-\"$LIBC\"\n\texit ;;\n    xtensa*:Linux:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-linux-\"$LIBC\"\n\texit ;;\n    i*86:DYNIX/ptx:4*:*)\n\t# ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.\n\t# earlier versions are messed up and put the nodename in both\n\t# sysname and nodename.\n\techo i386-sequent-sysv4\n\texit ;;\n    i*86:UNIX_SV:4.2MP:2.*)\n\t# Unixware is an offshoot of SVR4, but it has its own version\n\t# number series starting with 2...\n\t# I am not positive that other SVR4 systems won't match this,\n\t# I just have to hope.  -- rms.\n\t# Use sysv4.2uw... so that sysv4* matches it.\n\techo \"$UNAME_MACHINE\"-pc-sysv4.2uw\"$UNAME_VERSION\"\n\texit ;;\n    i*86:OS/2:*:*)\n\t# If we were able to find `uname', then EMX Unix compatibility\n\t# is probably installed.\n\techo \"$UNAME_MACHINE\"-pc-os2-emx\n\texit ;;\n    i*86:XTS-300:*:STOP)\n\techo \"$UNAME_MACHINE\"-unknown-stop\n\texit ;;\n    i*86:atheos:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-atheos\n\texit ;;\n    i*86:syllable:*:*)\n\techo \"$UNAME_MACHINE\"-pc-syllable\n\texit ;;\n    i*86:LynxOS:2.*:* | i*86:LynxOS:3.[01]*:* | i*86:LynxOS:4.[02]*:*)\n\techo i386-unknown-lynxos\"$UNAME_RELEASE\"\n\texit ;;\n    i*86:*DOS:*:*)\n\techo \"$UNAME_MACHINE\"-pc-msdosdjgpp\n\texit ;;\n    i*86:*:4.*:*)\n\tUNAME_REL=`echo \"$UNAME_RELEASE\" | sed 's/\\/MP$//'`\n\tif grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then\n\t\techo \"$UNAME_MACHINE\"-univel-sysv\"$UNAME_REL\"\n\telse\n\t\techo \"$UNAME_MACHINE\"-pc-sysv\"$UNAME_REL\"\n\tfi\n\texit ;;\n    i*86:*:5:[678]*)\n\t# UnixWare 7.x, OpenUNIX and OpenServer 6.\n\tcase `/bin/uname -X | grep \"^Machine\"` in\n\t    *486*)\t     UNAME_MACHINE=i486 ;;\n\t    *Pentium)\t     UNAME_MACHINE=i586 ;;\n\t    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;\n\tesac\n\techo \"$UNAME_MACHINE-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}${UNAME_VERSION}\"\n\texit ;;\n    i*86:*:3.2:*)\n\tif test -f /usr/options/cb.name; then\n\t\tUNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`\n\t\techo \"$UNAME_MACHINE\"-pc-isc\"$UNAME_REL\"\n\telif /bin/uname -X 2>/dev/null >/dev/null ; then\n\t\tUNAME_REL=`(/bin/uname -X|grep Release|sed -e 's/.*= //')`\n\t\t(/bin/uname -X|grep i80486 >/dev/null) && UNAME_MACHINE=i486\n\t\t(/bin/uname -X|grep '^Machine.*Pentium' >/dev/null) \\\n\t\t\t&& UNAME_MACHINE=i586\n\t\t(/bin/uname -X|grep '^Machine.*Pent *II' >/dev/null) \\\n\t\t\t&& UNAME_MACHINE=i686\n\t\t(/bin/uname -X|grep '^Machine.*Pentium Pro' >/dev/null) \\\n\t\t\t&& UNAME_MACHINE=i686\n\t\techo \"$UNAME_MACHINE\"-pc-sco\"$UNAME_REL\"\n\telse\n\t\techo \"$UNAME_MACHINE\"-pc-sysv32\n\tfi\n\texit ;;\n    pc:*:*:*)\n\t# Left here for compatibility:\n\t# uname -m prints for DJGPP always 'pc', but it prints nothing about\n\t# the processor, so we play safe by assuming i586.\n\t# Note: whatever this is, it MUST be the same as what config.sub\n\t# prints for the \"djgpp\" host, or else GDB configure will decide that\n\t# this is a cross-build.\n\techo i586-pc-msdosdjgpp\n\texit ;;\n    Intel:Mach:3*:*)\n\techo i386-pc-mach3\n\texit ;;\n    paragon:*:*:*)\n\techo i860-intel-osf1\n\texit ;;\n    i860:*:4.*:*) # i860-SVR4\n\tif grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then\n\t  echo i860-stardent-sysv\"$UNAME_RELEASE\" # Stardent Vistra i860-SVR4\n\telse # Add other i860-SVR4 vendors below as they are discovered.\n\t  echo i860-unknown-sysv\"$UNAME_RELEASE\"  # Unknown i860-SVR4\n\tfi\n\texit ;;\n    mini*:CTIX:SYS*5:*)\n\t# \"miniframe\"\n\techo m68010-convergent-sysv\n\texit ;;\n    mc68k:UNIX:SYSTEM5:3.51m)\n\techo m68k-convergent-sysv\n\texit ;;\n    M680?0:D-NIX:5.3:*)\n\techo m68k-diab-dnix\n\texit ;;\n    M68*:*:R3V[5678]*:*)\n\ttest -r /sysV68 && { echo 'm68k-motorola-sysv'; exit; } ;;\n    3[345]??:*:4.0:3.0 | 3[34]??A:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 3[34]??/*:*:4.0:3.0 | 4400:*:4.0:3.0 | 4850:*:4.0:3.0 | SKA40:*:4.0:3.0 | SDS2:*:4.0:3.0 | SHG2:*:4.0:3.0 | S7501*:*:4.0:3.0)\n\tOS_REL=''\n\ttest -r /etc/.relid \\\n\t&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n\t  && { echo i486-ncr-sysv4.3\"$OS_REL\"; exit; }\n\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n\t  && { echo i586-ncr-sysv4.3\"$OS_REL\"; exit; } ;;\n    3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)\n\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n\t  && { echo i486-ncr-sysv4; exit; } ;;\n    NCR*:*:4.2:* | MPRAS*:*:4.2:*)\n\tOS_REL='.3'\n\ttest -r /etc/.relid \\\n\t    && OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n\t    && { echo i486-ncr-sysv4.3\"$OS_REL\"; exit; }\n\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n\t    && { echo i586-ncr-sysv4.3\"$OS_REL\"; exit; }\n\t/bin/uname -p 2>/dev/null | /bin/grep pteron >/dev/null \\\n\t    && { echo i586-ncr-sysv4.3\"$OS_REL\"; exit; } ;;\n    m68*:LynxOS:2.*:* | m68*:LynxOS:3.0*:*)\n\techo m68k-unknown-lynxos\"$UNAME_RELEASE\"\n\texit ;;\n    mc68030:UNIX_System_V:4.*:*)\n\techo m68k-atari-sysv4\n\texit ;;\n    TSUNAMI:LynxOS:2.*:*)\n\techo sparc-unknown-lynxos\"$UNAME_RELEASE\"\n\texit ;;\n    rs6000:LynxOS:2.*:*)\n\techo rs6000-unknown-lynxos\"$UNAME_RELEASE\"\n\texit ;;\n    PowerPC:LynxOS:2.*:* | PowerPC:LynxOS:3.[01]*:* | PowerPC:LynxOS:4.[02]*:*)\n\techo powerpc-unknown-lynxos\"$UNAME_RELEASE\"\n\texit ;;\n    SM[BE]S:UNIX_SV:*:*)\n\techo mips-dde-sysv\"$UNAME_RELEASE\"\n\texit ;;\n    RM*:ReliantUNIX-*:*:*)\n\techo mips-sni-sysv4\n\texit ;;\n    RM*:SINIX-*:*:*)\n\techo mips-sni-sysv4\n\texit ;;\n    *:SINIX-*:*:*)\n\tif uname -p 2>/dev/null >/dev/null ; then\n\t\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n\t\techo \"$UNAME_MACHINE\"-sni-sysv4\n\telse\n\t\techo ns32k-sni-sysv\n\tfi\n\texit ;;\n    PENTIUM:*:4.0*:*)\t# Unisys `ClearPath HMP IX 4000' SVR4/MP effort\n\t\t\t# says <Richard.M.Bartel@ccMail.Census.GOV>\n\techo i586-unisys-sysv4\n\texit ;;\n    *:UNIX_System_V:4*:FTX*)\n\t# From Gerald Hewes <hewes@openmarket.com>.\n\t# How about differentiating between stratus architectures? -djm\n\techo hppa1.1-stratus-sysv4\n\texit ;;\n    *:*:*:FTX*)\n\t# From seanf@swdc.stratus.com.\n\techo i860-stratus-sysv4\n\texit ;;\n    i*86:VOS:*:*)\n\t# From Paul.Green@stratus.com.\n\techo \"$UNAME_MACHINE\"-stratus-vos\n\texit ;;\n    *:VOS:*:*)\n\t# From Paul.Green@stratus.com.\n\techo hppa1.1-stratus-vos\n\texit ;;\n    mc68*:A/UX:*:*)\n\techo m68k-apple-aux\"$UNAME_RELEASE\"\n\texit ;;\n    news*:NEWS-OS:6*:*)\n\techo mips-sony-newsos6\n\texit ;;\n    R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R*000:UNIX_SV:*:*)\n\tif [ -d /usr/nec ]; then\n\t\techo mips-nec-sysv\"$UNAME_RELEASE\"\n\telse\n\t\techo mips-unknown-sysv\"$UNAME_RELEASE\"\n\tfi\n\texit ;;\n    BeBox:BeOS:*:*)\t# BeOS running on hardware made by Be, PPC only.\n\techo powerpc-be-beos\n\texit ;;\n    BeMac:BeOS:*:*)\t# BeOS running on Mac or Mac clone, PPC only.\n\techo powerpc-apple-beos\n\texit ;;\n    BePC:BeOS:*:*)\t# BeOS running on Intel PC compatible.\n\techo i586-pc-beos\n\texit ;;\n    BePC:Haiku:*:*)\t# Haiku running on Intel PC compatible.\n\techo i586-pc-haiku\n\texit ;;\n    x86_64:Haiku:*:*)\n\techo x86_64-unknown-haiku\n\texit ;;\n    SX-4:SUPER-UX:*:*)\n\techo sx4-nec-superux\"$UNAME_RELEASE\"\n\texit ;;\n    SX-5:SUPER-UX:*:*)\n\techo sx5-nec-superux\"$UNAME_RELEASE\"\n\texit ;;\n    SX-6:SUPER-UX:*:*)\n\techo sx6-nec-superux\"$UNAME_RELEASE\"\n\texit ;;\n    SX-7:SUPER-UX:*:*)\n\techo sx7-nec-superux\"$UNAME_RELEASE\"\n\texit ;;\n    SX-8:SUPER-UX:*:*)\n\techo sx8-nec-superux\"$UNAME_RELEASE\"\n\texit ;;\n    SX-8R:SUPER-UX:*:*)\n\techo sx8r-nec-superux\"$UNAME_RELEASE\"\n\texit ;;\n    SX-ACE:SUPER-UX:*:*)\n\techo sxace-nec-superux\"$UNAME_RELEASE\"\n\texit ;;\n    Power*:Rhapsody:*:*)\n\techo powerpc-apple-rhapsody\"$UNAME_RELEASE\"\n\texit ;;\n    *:Rhapsody:*:*)\n\techo \"$UNAME_MACHINE\"-apple-rhapsody\"$UNAME_RELEASE\"\n\texit ;;\n    *:Darwin:*:*)\n\tUNAME_PROCESSOR=`uname -p`\n\tcase $UNAME_PROCESSOR in\n\t    unknown) UNAME_PROCESSOR=powerpc ;;\n\tesac\n\tif command -v xcode-select > /dev/null 2> /dev/null && \\\n\t\t! xcode-select --print-path > /dev/null 2> /dev/null ; then\n\t    # Avoid executing cc if there is no toolchain installed as\n\t    # cc will be a stub that puts up a graphical alert\n\t    # prompting the user to install developer tools.\n\t    CC_FOR_BUILD=no_compiler_found\n\telse\n\t    set_cc_for_build\n\tfi\n\tif [ \"$CC_FOR_BUILD\" != no_compiler_found ]; then\n\t    if (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \\\n\t\t   (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n\t\t   grep IS_64BIT_ARCH >/dev/null\n\t    then\n\t\tcase $UNAME_PROCESSOR in\n\t\t    i386) UNAME_PROCESSOR=x86_64 ;;\n\t\t    powerpc) UNAME_PROCESSOR=powerpc64 ;;\n\t\tesac\n\t    fi\n\t    # On 10.4-10.6 one might compile for PowerPC via gcc -arch ppc\n\t    if (echo '#ifdef __POWERPC__'; echo IS_PPC; echo '#endif') | \\\n\t\t   (CCOPTS=\"\" $CC_FOR_BUILD -E - 2>/dev/null) | \\\n\t\t   grep IS_PPC >/dev/null\n\t    then\n\t\tUNAME_PROCESSOR=powerpc\n\t    fi\n\telif test \"$UNAME_PROCESSOR\" = i386 ; then\n\t    # uname -m returns i386 or x86_64\n\t    UNAME_PROCESSOR=$UNAME_MACHINE\n\tfi\n\techo \"$UNAME_PROCESSOR\"-apple-darwin\"$UNAME_RELEASE\"\n\texit ;;\n    *:procnto*:*:* | *:QNX:[0123456789]*:*)\n\tUNAME_PROCESSOR=`uname -p`\n\tif test \"$UNAME_PROCESSOR\" = x86; then\n\t\tUNAME_PROCESSOR=i386\n\t\tUNAME_MACHINE=pc\n\tfi\n\techo \"$UNAME_PROCESSOR\"-\"$UNAME_MACHINE\"-nto-qnx\"$UNAME_RELEASE\"\n\texit ;;\n    *:QNX:*:4*)\n\techo i386-pc-qnx\n\texit ;;\n    NEO-*:NONSTOP_KERNEL:*:*)\n\techo neo-tandem-nsk\"$UNAME_RELEASE\"\n\texit ;;\n    NSE-*:NONSTOP_KERNEL:*:*)\n\techo nse-tandem-nsk\"$UNAME_RELEASE\"\n\texit ;;\n    NSR-*:NONSTOP_KERNEL:*:*)\n\techo nsr-tandem-nsk\"$UNAME_RELEASE\"\n\texit ;;\n    NSV-*:NONSTOP_KERNEL:*:*)\n\techo nsv-tandem-nsk\"$UNAME_RELEASE\"\n\texit ;;\n    NSX-*:NONSTOP_KERNEL:*:*)\n\techo nsx-tandem-nsk\"$UNAME_RELEASE\"\n\texit ;;\n    *:NonStop-UX:*:*)\n\techo mips-compaq-nonstopux\n\texit ;;\n    BS2000:POSIX*:*:*)\n\techo bs2000-siemens-sysv\n\texit ;;\n    DS/*:UNIX_System_V:*:*)\n\techo \"$UNAME_MACHINE\"-\"$UNAME_SYSTEM\"-\"$UNAME_RELEASE\"\n\texit ;;\n    *:Plan9:*:*)\n\t# \"uname -m\" is not consistent, so use $cputype instead. 386\n\t# is converted to i386 for consistency with other x86\n\t# operating systems.\n\t# shellcheck disable=SC2154\n\tif test \"$cputype\" = 386; then\n\t    UNAME_MACHINE=i386\n\telse\n\t    UNAME_MACHINE=\"$cputype\"\n\tfi\n\techo \"$UNAME_MACHINE\"-unknown-plan9\n\texit ;;\n    *:TOPS-10:*:*)\n\techo pdp10-unknown-tops10\n\texit ;;\n    *:TENEX:*:*)\n\techo pdp10-unknown-tenex\n\texit ;;\n    KS10:TOPS-20:*:* | KL10:TOPS-20:*:* | TYPE4:TOPS-20:*:*)\n\techo pdp10-dec-tops20\n\texit ;;\n    XKL-1:TOPS-20:*:* | TYPE5:TOPS-20:*:*)\n\techo pdp10-xkl-tops20\n\texit ;;\n    *:TOPS-20:*:*)\n\techo pdp10-unknown-tops20\n\texit ;;\n    *:ITS:*:*)\n\techo pdp10-unknown-its\n\texit ;;\n    SEI:*:*:SEIUX)\n\techo mips-sei-seiux\"$UNAME_RELEASE\"\n\texit ;;\n    *:DragonFly:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-dragonfly\"`echo \"$UNAME_RELEASE\"|sed -e 's/[-(].*//'`\"\n\texit ;;\n    *:*VMS:*:*)\n\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n\tcase \"$UNAME_MACHINE\" in\n\t    A*) echo alpha-dec-vms ; exit ;;\n\t    I*) echo ia64-dec-vms ; exit ;;\n\t    V*) echo vax-dec-vms ; exit ;;\n\tesac ;;\n    *:XENIX:*:SysV)\n\techo i386-pc-xenix\n\texit ;;\n    i*86:skyos:*:*)\n\techo \"$UNAME_MACHINE\"-pc-skyos\"`echo \"$UNAME_RELEASE\" | sed -e 's/ .*$//'`\"\n\texit ;;\n    i*86:rdos:*:*)\n\techo \"$UNAME_MACHINE\"-pc-rdos\n\texit ;;\n    i*86:AROS:*:*)\n\techo \"$UNAME_MACHINE\"-pc-aros\n\texit ;;\n    x86_64:VMkernel:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-esx\n\texit ;;\n    amd64:Isilon\\ OneFS:*:*)\n\techo x86_64-unknown-onefs\n\texit ;;\n    *:Unleashed:*:*)\n\techo \"$UNAME_MACHINE\"-unknown-unleashed\"$UNAME_RELEASE\"\n\texit ;;\nesac\n\n# No uname command or uname output not recognized.\nset_cc_for_build\ncat > \"$dummy.c\" <<EOF\n#ifdef _SEQUENT_\n#include <sys/types.h>\n#include <sys/utsname.h>\n#endif\n#if defined(ultrix) || defined(_ultrix) || defined(__ultrix) || defined(__ultrix__)\n#if defined (vax) || defined (__vax) || defined (__vax__) || defined(mips) || defined(__mips) || defined(__mips__) || defined(MIPS) || defined(__MIPS__)\n#include <signal.h>\n#if defined(_SIZE_T_) || defined(SIGLOST)\n#include <sys/utsname.h>\n#endif\n#endif\n#endif\nmain ()\n{\n#if defined (sony)\n#if defined (MIPSEB)\n  /* BFD wants \"bsd\" instead of \"newsos\".  Perhaps BFD should be changed,\n     I don't know....  */\n  printf (\"mips-sony-bsd\\n\"); exit (0);\n#else\n#include <sys/param.h>\n  printf (\"m68k-sony-newsos%s\\n\",\n#ifdef NEWSOS4\n  \"4\"\n#else\n  \"\"\n#endif\n  ); exit (0);\n#endif\n#endif\n\n#if defined (NeXT)\n#if !defined (__ARCHITECTURE__)\n#define __ARCHITECTURE__ \"m68k\"\n#endif\n  int version;\n  version=`(hostinfo | sed -n 's/.*NeXT Mach \\([0-9]*\\).*/\\1/p') 2>/dev/null`;\n  if (version < 4)\n    printf (\"%s-next-nextstep%d\\n\", __ARCHITECTURE__, version);\n  else\n    printf (\"%s-next-openstep%d\\n\", __ARCHITECTURE__, version);\n  exit (0);\n#endif\n\n#if defined (MULTIMAX) || defined (n16)\n#if defined (UMAXV)\n  printf (\"ns32k-encore-sysv\\n\"); exit (0);\n#else\n#if defined (CMU)\n  printf (\"ns32k-encore-mach\\n\"); exit (0);\n#else\n  printf (\"ns32k-encore-bsd\\n\"); exit (0);\n#endif\n#endif\n#endif\n\n#if defined (__386BSD__)\n  printf (\"i386-pc-bsd\\n\"); exit (0);\n#endif\n\n#if defined (sequent)\n#if defined (i386)\n  printf (\"i386-sequent-dynix\\n\"); exit (0);\n#endif\n#if defined (ns32000)\n  printf (\"ns32k-sequent-dynix\\n\"); exit (0);\n#endif\n#endif\n\n#if defined (_SEQUENT_)\n  struct utsname un;\n\n  uname(&un);\n  if (strncmp(un.version, \"V2\", 2) == 0) {\n    printf (\"i386-sequent-ptx2\\n\"); exit (0);\n  }\n  if (strncmp(un.version, \"V1\", 2) == 0) { /* XXX is V1 correct? */\n    printf (\"i386-sequent-ptx1\\n\"); exit (0);\n  }\n  printf (\"i386-sequent-ptx\\n\"); exit (0);\n#endif\n\n#if defined (vax)\n#if !defined (ultrix)\n#include <sys/param.h>\n#if defined (BSD)\n#if BSD == 43\n  printf (\"vax-dec-bsd4.3\\n\"); exit (0);\n#else\n#if BSD == 199006\n  printf (\"vax-dec-bsd4.3reno\\n\"); exit (0);\n#else\n  printf (\"vax-dec-bsd\\n\"); exit (0);\n#endif\n#endif\n#else\n  printf (\"vax-dec-bsd\\n\"); exit (0);\n#endif\n#else\n#if defined(_SIZE_T_) || defined(SIGLOST)\n  struct utsname un;\n  uname (&un);\n  printf (\"vax-dec-ultrix%s\\n\", un.release); exit (0);\n#else\n  printf (\"vax-dec-ultrix\\n\"); exit (0);\n#endif\n#endif\n#endif\n#if defined(ultrix) || defined(_ultrix) || defined(__ultrix) || defined(__ultrix__)\n#if defined(mips) || defined(__mips) || defined(__mips__) || defined(MIPS) || defined(__MIPS__)\n#if defined(_SIZE_T_) || defined(SIGLOST)\n  struct utsname *un;\n  uname (&un);\n  printf (\"mips-dec-ultrix%s\\n\", un.release); exit (0);\n#else\n  printf (\"mips-dec-ultrix\\n\"); exit (0);\n#endif\n#endif\n#endif\n\n#if defined (alliant) && defined (i860)\n  printf (\"i860-alliant-bsd\\n\"); exit (0);\n#endif\n\n  exit (1);\n}\nEOF\n\n$CC_FOR_BUILD -o \"$dummy\" \"$dummy.c\" 2>/dev/null && SYSTEM_NAME=`$dummy` &&\n\t{ echo \"$SYSTEM_NAME\"; exit; }\n\n# Apollos put the system type in the environment.\ntest -d /usr/apollo && { echo \"$ISP-apollo-$SYSTYPE\"; exit; }\n\necho \"$0: unable to guess system type\" >&2\n\ncase \"$UNAME_MACHINE:$UNAME_SYSTEM\" in\n    mips:Linux | mips64:Linux)\n\t# If we got here on MIPS GNU/Linux, output extra information.\n\tcat >&2 <<EOF\n\nNOTE: MIPS GNU/Linux systems require a C compiler to fully recognize\nthe system type. Please install a C compiler and try again.\nEOF\n\t;;\nesac\n\ncat >&2 <<EOF\n\nThis script (version $timestamp), has failed to recognize the\noperating system you are using. If your script is old, overwrite *all*\ncopies of config.guess and config.sub with the latest versions from:\n\n  https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess\nand\n  https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub\nEOF\n\nyear=`echo $timestamp | sed 's,-.*,,'`\n# shellcheck disable=SC2003\nif test \"`expr \"\\`date +%Y\\`\" - \"$year\"`\" -lt 3 ; then\n   cat >&2 <<EOF\n\nIf $0 has already been updated, send the following data and any\ninformation you think might be pertinent to config-patches@gnu.org to\nprovide the necessary information to handle your system.\n\nconfig.guess timestamp = $timestamp\n\nuname -m = `(uname -m) 2>/dev/null || echo unknown`\nuname -r = `(uname -r) 2>/dev/null || echo unknown`\nuname -s = `(uname -s) 2>/dev/null || echo unknown`\nuname -v = `(uname -v) 2>/dev/null || echo unknown`\n\n/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null`\n/bin/uname -X     = `(/bin/uname -X) 2>/dev/null`\n\nhostinfo               = `(hostinfo) 2>/dev/null`\n/bin/universe          = `(/bin/universe) 2>/dev/null`\n/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null`\n/bin/arch              = `(/bin/arch) 2>/dev/null`\n/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null`\n/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null`\n\nUNAME_MACHINE = \"$UNAME_MACHINE\"\nUNAME_RELEASE = \"$UNAME_RELEASE\"\nUNAME_SYSTEM  = \"$UNAME_SYSTEM\"\nUNAME_VERSION = \"$UNAME_VERSION\"\nEOF\nfi\n\nexit 1\n\n# Local variables:\n# eval: (add-hook 'before-save-hook 'time-stamp)\n# time-stamp-start: \"timestamp='\"\n# time-stamp-format: \"%:y-%02m-%02d\"\n# time-stamp-end: \"'\"\n# End:\n"
        },
        {
          "name": "config.sub",
          "type": "blob",
          "size": 30.87890625,
          "content": "#! /bin/sh\n# Configuration validation subroutine script.\n#   Copyright 1992-2020 Free Software Foundation, Inc.\n\ntimestamp='2020-05-04'\n\n# This file is free software; you can redistribute it and/or modify it\n# under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful, but\n# WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, see <https://www.gnu.org/licenses/>.\n#\n# As a special exception to the GNU General Public License, if you\n# distribute this file as part of a program that contains a\n# configuration script generated by Autoconf, you may include it under\n# the same distribution terms that you use for the rest of that\n# program.  This Exception is an additional permission under section 7\n# of the GNU General Public License, version 3 (\"GPLv3\").\n\n\n# Please send patches to <config-patches@gnu.org>.\n#\n# Configuration subroutine to validate and canonicalize a configuration type.\n# Supply the specified configuration type as an argument.\n# If it is invalid, we print an error message on stderr and exit with code 1.\n# Otherwise, we print the canonical config type on stdout and succeed.\n\n# You can get the latest version of this script from:\n# https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub\n\n# This file is supposed to be the same for all GNU packages\n# and recognize all the CPU types, system types and aliases\n# that are meaningful with *any* GNU software.\n# Each package is responsible for reporting which valid configurations\n# it does not support.  The user should be able to distinguish\n# a failure to support a valid configuration from a meaningless\n# configuration.\n\n# The goal of this file is to map all the various variations of a given\n# machine specification into a single specification in the form:\n#\tCPU_TYPE-MANUFACTURER-OPERATING_SYSTEM\n# or in some cases, the newer four-part form:\n#\tCPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM\n# It is wrong to echo any other type of specification.\n\nme=`echo \"$0\" | sed -e 's,.*/,,'`\n\nusage=\"\\\nUsage: $0 [OPTION] CPU-MFR-OPSYS or ALIAS\n\nCanonicalize a configuration name.\n\nOptions:\n  -h, --help         print this help, then exit\n  -t, --time-stamp   print date of last modification, then exit\n  -v, --version      print version number, then exit\n\nReport bugs and patches to <config-patches@gnu.org>.\"\n\nversion=\"\\\nGNU config.sub ($timestamp)\n\nCopyright 1992-2020 Free Software Foundation, Inc.\n\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n\nhelp=\"\nTry \\`$me --help' for more information.\"\n\n# Parse command line\nwhile test $# -gt 0 ; do\n  case $1 in\n    --time-stamp | --time* | -t )\n       echo \"$timestamp\" ; exit ;;\n    --version | -v )\n       echo \"$version\" ; exit ;;\n    --help | --h* | -h )\n       echo \"$usage\"; exit ;;\n    -- )     # Stop option processing\n       shift; break ;;\n    - )\t# Use stdin as input.\n       break ;;\n    -* )\n       echo \"$me: invalid option $1$help\" >&2\n       exit 1 ;;\n\n    *local*)\n       # First pass through any local machine types.\n       echo \"$1\"\n       exit ;;\n\n    * )\n       break ;;\n  esac\ndone\n\ncase $# in\n 0) echo \"$me: missing argument$help\" >&2\n    exit 1;;\n 1) ;;\n *) echo \"$me: too many arguments$help\" >&2\n    exit 1;;\nesac\n\n# Split fields of configuration type\n# shellcheck disable=SC2162\nIFS=\"-\" read field1 field2 field3 field4 <<EOF\n$1\nEOF\n\n# Separate into logical components for further validation\ncase $1 in\n\t*-*-*-*-*)\n\t\techo Invalid configuration \\`\"$1\"\\': more than four components >&2\n\t\texit 1\n\t\t;;\n\t*-*-*-*)\n\t\tbasic_machine=$field1-$field2\n\t\tos=$field3-$field4\n\t\t;;\n\t*-*-*)\n\t\t# Ambiguous whether COMPANY is present, or skipped and KERNEL-OS is two\n\t\t# parts\n\t\tmaybe_os=$field2-$field3\n\t\tcase $maybe_os in\n\t\t\tnto-qnx* | linux-gnu* | linux-android* | linux-dietlibc \\\n\t\t\t| linux-newlib* | linux-musl* | linux-uclibc* | uclinux-uclibc* \\\n\t\t\t| uclinux-gnu* | kfreebsd*-gnu* | knetbsd*-gnu* | netbsd*-gnu* \\\n\t\t\t| netbsd*-eabi* | kopensolaris*-gnu* | cloudabi*-eabi* \\\n\t\t\t| storm-chaos* | os2-emx* | rtmk-nova*)\n\t\t\t\tbasic_machine=$field1\n\t\t\t\tos=$maybe_os\n\t\t\t\t;;\n\t\t\tandroid-linux)\n\t\t\t\tbasic_machine=$field1-unknown\n\t\t\t\tos=linux-android\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tbasic_machine=$field1-$field2\n\t\t\t\tos=$field3\n\t\t\t\t;;\n\t\tesac\n\t\t;;\n\t*-*)\n\t\t# A lone config we happen to match not fitting any pattern\n\t\tcase $field1-$field2 in\n\t\t\tdecstation-3100)\n\t\t\t\tbasic_machine=mips-dec\n\t\t\t\tos=\n\t\t\t\t;;\n\t\t\t*-*)\n\t\t\t\t# Second component is usually, but not always the OS\n\t\t\t\tcase $field2 in\n\t\t\t\t\t# Prevent following clause from handling this valid os\n\t\t\t\t\tsun*os*)\n\t\t\t\t\t\tbasic_machine=$field1\n\t\t\t\t\t\tos=$field2\n\t\t\t\t\t\t;;\n\t\t\t\t\t# Manufacturers\n\t\t\t\t\tdec* | mips* | sequent* | encore* | pc533* | sgi* | sony* \\\n\t\t\t\t\t| att* | 7300* | 3300* | delta* | motorola* | sun[234]* \\\n\t\t\t\t\t| unicom* | ibm* | next | hp | isi* | apollo | altos* \\\n\t\t\t\t\t| convergent* | ncr* | news | 32* | 3600* | 3100* \\\n\t\t\t\t\t| hitachi* | c[123]* | convex* | sun | crds | omron* | dg \\\n\t\t\t\t\t| ultra | tti* | harris | dolphin | highlevel | gould \\\n\t\t\t\t\t| cbm | ns | masscomp | apple | axis | knuth | cray \\\n\t\t\t\t\t| microblaze* | sim | cisco \\\n\t\t\t\t\t| oki | wec | wrs | winbond)\n\t\t\t\t\t\tbasic_machine=$field1-$field2\n\t\t\t\t\t\tos=\n\t\t\t\t\t\t;;\n\t\t\t\t\t*)\n\t\t\t\t\t\tbasic_machine=$field1\n\t\t\t\t\t\tos=$field2\n\t\t\t\t\t\t;;\n\t\t\t\tesac\n\t\t\t;;\n\t\tesac\n\t\t;;\n\t*)\n\t\t# Convert single-component short-hands not valid as part of\n\t\t# multi-component configurations.\n\t\tcase $field1 in\n\t\t\t386bsd)\n\t\t\t\tbasic_machine=i386-pc\n\t\t\t\tos=bsd\n\t\t\t\t;;\n\t\t\ta29khif)\n\t\t\t\tbasic_machine=a29k-amd\n\t\t\t\tos=udi\n\t\t\t\t;;\n\t\t\tadobe68k)\n\t\t\t\tbasic_machine=m68010-adobe\n\t\t\t\tos=scout\n\t\t\t\t;;\n\t\t\talliant)\n\t\t\t\tbasic_machine=fx80-alliant\n\t\t\t\tos=\n\t\t\t\t;;\n\t\t\taltos | altos3068)\n\t\t\t\tbasic_machine=m68k-altos\n\t\t\t\tos=\n\t\t\t\t;;\n\t\t\tam29k)\n\t\t\t\tbasic_machine=a29k-none\n\t\t\t\tos=bsd\n\t\t\t\t;;\n\t\t\tamdahl)\n\t\t\t\tbasic_machine=580-amdahl\n\t\t\t\tos=sysv\n\t\t\t\t;;\n\t\t\tamiga)\n\t\t\t\tbasic_machine=m68k-unknown\n\t\t\t\tos=\n\t\t\t\t;;\n\t\t\tamigaos | amigados)\n\t\t\t\tbasic_machine=m68k-unknown\n\t\t\t\tos=amigaos\n\t\t\t\t;;\n\t\t\tamigaunix | amix)\n\t\t\t\tbasic_machine=m68k-unknown\n\t\t\t\tos=sysv4\n\t\t\t\t;;\n\t\t\tapollo68)\n\t\t\t\tbasic_machine=m68k-apollo\n\t\t\t\tos=sysv\n\t\t\t\t;;\n\t\t\tapollo68bsd)\n\t\t\t\tbasic_machine=m68k-apollo\n\t\t\t\tos=bsd\n\t\t\t\t;;\n\t\t\taros)\n\t\t\t\tbasic_machine=i386-pc\n\t\t\t\tos=aros\n\t\t\t\t;;\n\t\t\taux)\n\t\t\t\tbasic_machine=m68k-apple\n\t\t\t\tos=aux\n\t\t\t\t;;\n\t\t\tbalance)\n\t\t\t\tbasic_machine=ns32k-sequent\n\t\t\t\tos=dynix\n\t\t\t\t;;\n\t\t\tblackfin)\n\t\t\t\tbasic_machine=bfin-unknown\n\t\t\t\tos=linux\n\t\t\t\t;;\n\t\t\tcegcc)\n\t\t\t\tbasic_machine=arm-unknown\n\t\t\t\tos=cegcc\n\t\t\t\t;;\n\t\t\tconvex-c1)\n\t\t\t\tbasic_machine=c1-convex\n\t\t\t\tos=bsd\n\t\t\t\t;;\n\t\t\tconvex-c2)\n\t\t\t\tbasic_machine=c2-convex\n\t\t\t\tos=bsd\n\t\t\t\t;;\n\t\t\tconvex-c32)\n\t\t\t\tbasic_machine=c32-convex\n\t\t\t\tos=bsd\n\t\t\t\t;;\n\t\t\tconvex-c34)\n\t\t\t\tbasic_machine=c34-convex\n\t\t\t\tos=bsd\n\t\t\t\t;;\n\t\t\tconvex-c38)\n\t\t\t\tbasic_machine=c38-convex\n\t\t\t\tos=bsd\n\t\t\t\t;;\n\t\t\tcray)\n\t\t\t\tbasic_machine=j90-cray\n\t\t\t\tos=unicos\n\t\t\t\t;;\n\t\t\tcrds | unos)\n\t\t\t\tbasic_machine=m68k-crds\n\t\t\t\tos=\n\t\t\t\t;;\n\t\t\tda30)\n\t\t\t\tbasic_machine=m68k-da30\n\t\t\t\tos=\n\t\t\t\t;;\n\t\t\tdecstation | pmax | pmin | dec3100 | decstatn)\n\t\t\t\tbasic_machine=mips-dec\n\t\t\t\tos=\n\t\t\t\t;;\n\t\t\tdelta88)\n\t\t\t\tbasic_machine=m88k-motorola\n\t\t\t\tos=sysv3\n\t\t\t\t;;\n\t\t\tdicos)\n\t\t\t\tbasic_machine=i686-pc\n\t\t\t\tos=dicos\n\t\t\t\t;;\n\t\t\tdjgpp)\n\t\t\t\tbasic_machine=i586-pc\n\t\t\t\tos=msdosdjgpp\n\t\t\t\t;;\n\t\t\tebmon29k)\n\t\t\t\tbasic_machine=a29k-amd\n\t\t\t\tos=ebmon\n\t\t\t\t;;\n\t\t\tes1800 | OSE68k | ose68k | ose | OSE)\n\t\t\t\tbasic_machine=m68k-ericsson\n\t\t\t\tos=ose\n\t\t\t\t;;\n\t\t\tgmicro)\n\t\t\t\tbasic_machine=tron-gmicro\n\t\t\t\tos=sysv\n\t\t\t\t;;\n\t\t\tgo32)\n\t\t\t\tbasic_machine=i386-pc\n\t\t\t\tos=go32\n\t\t\t\t;;\n\t\t\th8300hms)\n\t\t\t\tbasic_machine=h8300-hitachi\n\t\t\t\tos=hms\n\t\t\t\t;;\n\t\t\th8300xray)\n\t\t\t\tbasic_machine=h8300-hitachi\n\t\t\t\tos=xray\n\t\t\t\t;;\n\t\t\th8500hms)\n\t\t\t\tbasic_machine=h8500-hitachi\n\t\t\t\tos=hms\n\t\t\t\t;;\n\t\t\tharris)\n\t\t\t\tbasic_machine=m88k-harris\n\t\t\t\tos=sysv3\n\t\t\t\t;;\n\t\t\thp300 | hp300hpux)\n\t\t\t\tbasic_machine=m68k-hp\n\t\t\t\tos=hpux\n\t\t\t\t;;\n\t\t\thp300bsd)\n\t\t\t\tbasic_machine=m68k-hp\n\t\t\t\tos=bsd\n\t\t\t\t;;\n\t\t\thppaosf)\n\t\t\t\tbasic_machine=hppa1.1-hp\n\t\t\t\tos=osf\n\t\t\t\t;;\n\t\t\thppro)\n\t\t\t\tbasic_machine=hppa1.1-hp\n\t\t\t\tos=proelf\n\t\t\t\t;;\n\t\t\ti386mach)\n\t\t\t\tbasic_machine=i386-mach\n\t\t\t\tos=mach\n\t\t\t\t;;\n\t\t\tisi68 | isi)\n\t\t\t\tbasic_machine=m68k-isi\n\t\t\t\tos=sysv\n\t\t\t\t;;\n\t\t\tm68knommu)\n\t\t\t\tbasic_machine=m68k-unknown\n\t\t\t\tos=linux\n\t\t\t\t;;\n\t\t\tmagnum | m3230)\n\t\t\t\tbasic_machine=mips-mips\n\t\t\t\tos=sysv\n\t\t\t\t;;\n\t\t\tmerlin)\n\t\t\t\tbasic_machine=ns32k-utek\n\t\t\t\tos=sysv\n\t\t\t\t;;\n\t\t\tmingw64)\n\t\t\t\tbasic_machine=x86_64-pc\n\t\t\t\tos=mingw64\n\t\t\t\t;;\n\t\t\tmingw32)\n\t\t\t\tbasic_machine=i686-pc\n\t\t\t\tos=mingw32\n\t\t\t\t;;\n\t\t\tmingw32ce)\n\t\t\t\tbasic_machine=arm-unknown\n\t\t\t\tos=mingw32ce\n\t\t\t\t;;\n\t\t\tmonitor)\n\t\t\t\tbasic_machine=m68k-rom68k\n\t\t\t\tos=coff\n\t\t\t\t;;\n\t\t\tmorphos)\n\t\t\t\tbasic_machine=powerpc-unknown\n\t\t\t\tos=morphos\n\t\t\t\t;;\n\t\t\tmoxiebox)\n\t\t\t\tbasic_machine=moxie-unknown\n\t\t\t\tos=moxiebox\n\t\t\t\t;;\n\t\t\tmsdos)\n\t\t\t\tbasic_machine=i386-pc\n\t\t\t\tos=msdos\n\t\t\t\t;;\n\t\t\tmsys)\n\t\t\t\tbasic_machine=i686-pc\n\t\t\t\tos=msys\n\t\t\t\t;;\n\t\t\tmvs)\n\t\t\t\tbasic_machine=i370-ibm\n\t\t\t\tos=mvs\n\t\t\t\t;;\n\t\t\tnacl)\n\t\t\t\tbasic_machine=le32-unknown\n\t\t\t\tos=nacl\n\t\t\t\t;;\n\t\t\tncr3000)\n\t\t\t\tbasic_machine=i486-ncr\n\t\t\t\tos=sysv4\n\t\t\t\t;;\n\t\t\tnetbsd386)\n\t\t\t\tbasic_machine=i386-pc\n\t\t\t\tos=netbsd\n\t\t\t\t;;\n\t\t\tnetwinder)\n\t\t\t\tbasic_machine=armv4l-rebel\n\t\t\t\tos=linux\n\t\t\t\t;;\n\t\t\tnews | news700 | news800 | news900)\n\t\t\t\tbasic_machine=m68k-sony\n\t\t\t\tos=newsos\n\t\t\t\t;;\n\t\t\tnews1000)\n\t\t\t\tbasic_machine=m68030-sony\n\t\t\t\tos=newsos\n\t\t\t\t;;\n\t\t\tnecv70)\n\t\t\t\tbasic_machine=v70-nec\n\t\t\t\tos=sysv\n\t\t\t\t;;\n\t\t\tnh3000)\n\t\t\t\tbasic_machine=m68k-harris\n\t\t\t\tos=cxux\n\t\t\t\t;;\n\t\t\tnh[45]000)\n\t\t\t\tbasic_machine=m88k-harris\n\t\t\t\tos=cxux\n\t\t\t\t;;\n\t\t\tnindy960)\n\t\t\t\tbasic_machine=i960-intel\n\t\t\t\tos=nindy\n\t\t\t\t;;\n\t\t\tmon960)\n\t\t\t\tbasic_machine=i960-intel\n\t\t\t\tos=mon960\n\t\t\t\t;;\n\t\t\tnonstopux)\n\t\t\t\tbasic_machine=mips-compaq\n\t\t\t\tos=nonstopux\n\t\t\t\t;;\n\t\t\tos400)\n\t\t\t\tbasic_machine=powerpc-ibm\n\t\t\t\tos=os400\n\t\t\t\t;;\n\t\t\tOSE68000 | ose68000)\n\t\t\t\tbasic_machine=m68000-ericsson\n\t\t\t\tos=ose\n\t\t\t\t;;\n\t\t\tos68k)\n\t\t\t\tbasic_machine=m68k-none\n\t\t\t\tos=os68k\n\t\t\t\t;;\n\t\t\tparagon)\n\t\t\t\tbasic_machine=i860-intel\n\t\t\t\tos=osf\n\t\t\t\t;;\n\t\t\tparisc)\n\t\t\t\tbasic_machine=hppa-unknown\n\t\t\t\tos=linux\n\t\t\t\t;;\n\t\t\tpw32)\n\t\t\t\tbasic_machine=i586-unknown\n\t\t\t\tos=pw32\n\t\t\t\t;;\n\t\t\trdos | rdos64)\n\t\t\t\tbasic_machine=x86_64-pc\n\t\t\t\tos=rdos\n\t\t\t\t;;\n\t\t\trdos32)\n\t\t\t\tbasic_machine=i386-pc\n\t\t\t\tos=rdos\n\t\t\t\t;;\n\t\t\trom68k)\n\t\t\t\tbasic_machine=m68k-rom68k\n\t\t\t\tos=coff\n\t\t\t\t;;\n\t\t\tsa29200)\n\t\t\t\tbasic_machine=a29k-amd\n\t\t\t\tos=udi\n\t\t\t\t;;\n\t\t\tsei)\n\t\t\t\tbasic_machine=mips-sei\n\t\t\t\tos=seiux\n\t\t\t\t;;\n\t\t\tsequent)\n\t\t\t\tbasic_machine=i386-sequent\n\t\t\t\tos=\n\t\t\t\t;;\n\t\t\tsps7)\n\t\t\t\tbasic_machine=m68k-bull\n\t\t\t\tos=sysv2\n\t\t\t\t;;\n\t\t\tst2000)\n\t\t\t\tbasic_machine=m68k-tandem\n\t\t\t\tos=\n\t\t\t\t;;\n\t\t\tstratus)\n\t\t\t\tbasic_machine=i860-stratus\n\t\t\t\tos=sysv4\n\t\t\t\t;;\n\t\t\tsun2)\n\t\t\t\tbasic_machine=m68000-sun\n\t\t\t\tos=\n\t\t\t\t;;\n\t\t\tsun2os3)\n\t\t\t\tbasic_machine=m68000-sun\n\t\t\t\tos=sunos3\n\t\t\t\t;;\n\t\t\tsun2os4)\n\t\t\t\tbasic_machine=m68000-sun\n\t\t\t\tos=sunos4\n\t\t\t\t;;\n\t\t\tsun3)\n\t\t\t\tbasic_machine=m68k-sun\n\t\t\t\tos=\n\t\t\t\t;;\n\t\t\tsun3os3)\n\t\t\t\tbasic_machine=m68k-sun\n\t\t\t\tos=sunos3\n\t\t\t\t;;\n\t\t\tsun3os4)\n\t\t\t\tbasic_machine=m68k-sun\n\t\t\t\tos=sunos4\n\t\t\t\t;;\n\t\t\tsun4)\n\t\t\t\tbasic_machine=sparc-sun\n\t\t\t\tos=\n\t\t\t\t;;\n\t\t\tsun4os3)\n\t\t\t\tbasic_machine=sparc-sun\n\t\t\t\tos=sunos3\n\t\t\t\t;;\n\t\t\tsun4os4)\n\t\t\t\tbasic_machine=sparc-sun\n\t\t\t\tos=sunos4\n\t\t\t\t;;\n\t\t\tsun4sol2)\n\t\t\t\tbasic_machine=sparc-sun\n\t\t\t\tos=solaris2\n\t\t\t\t;;\n\t\t\tsun386 | sun386i | roadrunner)\n\t\t\t\tbasic_machine=i386-sun\n\t\t\t\tos=\n\t\t\t\t;;\n\t\t\tsv1)\n\t\t\t\tbasic_machine=sv1-cray\n\t\t\t\tos=unicos\n\t\t\t\t;;\n\t\t\tsymmetry)\n\t\t\t\tbasic_machine=i386-sequent\n\t\t\t\tos=dynix\n\t\t\t\t;;\n\t\t\tt3e)\n\t\t\t\tbasic_machine=alphaev5-cray\n\t\t\t\tos=unicos\n\t\t\t\t;;\n\t\t\tt90)\n\t\t\t\tbasic_machine=t90-cray\n\t\t\t\tos=unicos\n\t\t\t\t;;\n\t\t\ttoad1)\n\t\t\t\tbasic_machine=pdp10-xkl\n\t\t\t\tos=tops20\n\t\t\t\t;;\n\t\t\ttpf)\n\t\t\t\tbasic_machine=s390x-ibm\n\t\t\t\tos=tpf\n\t\t\t\t;;\n\t\t\tudi29k)\n\t\t\t\tbasic_machine=a29k-amd\n\t\t\t\tos=udi\n\t\t\t\t;;\n\t\t\tultra3)\n\t\t\t\tbasic_machine=a29k-nyu\n\t\t\t\tos=sym1\n\t\t\t\t;;\n\t\t\tv810 | necv810)\n\t\t\t\tbasic_machine=v810-nec\n\t\t\t\tos=none\n\t\t\t\t;;\n\t\t\tvaxv)\n\t\t\t\tbasic_machine=vax-dec\n\t\t\t\tos=sysv\n\t\t\t\t;;\n\t\t\tvms)\n\t\t\t\tbasic_machine=vax-dec\n\t\t\t\tos=vms\n\t\t\t\t;;\n\t\t\tvsta)\n\t\t\t\tbasic_machine=i386-pc\n\t\t\t\tos=vsta\n\t\t\t\t;;\n\t\t\tvxworks960)\n\t\t\t\tbasic_machine=i960-wrs\n\t\t\t\tos=vxworks\n\t\t\t\t;;\n\t\t\tvxworks68)\n\t\t\t\tbasic_machine=m68k-wrs\n\t\t\t\tos=vxworks\n\t\t\t\t;;\n\t\t\tvxworks29k)\n\t\t\t\tbasic_machine=a29k-wrs\n\t\t\t\tos=vxworks\n\t\t\t\t;;\n\t\t\txbox)\n\t\t\t\tbasic_machine=i686-pc\n\t\t\t\tos=mingw32\n\t\t\t\t;;\n\t\t\tymp)\n\t\t\t\tbasic_machine=ymp-cray\n\t\t\t\tos=unicos\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tbasic_machine=$1\n\t\t\t\tos=\n\t\t\t\t;;\n\t\tesac\n\t\t;;\nesac\n\n# Decode 1-component or ad-hoc basic machines\ncase $basic_machine in\n\t# Here we handle the default manufacturer of certain CPU types.  It is in\n\t# some cases the only manufacturer, in others, it is the most popular.\n\tw89k)\n\t\tcpu=hppa1.1\n\t\tvendor=winbond\n\t\t;;\n\top50n)\n\t\tcpu=hppa1.1\n\t\tvendor=oki\n\t\t;;\n\top60c)\n\t\tcpu=hppa1.1\n\t\tvendor=oki\n\t\t;;\n\tibm*)\n\t\tcpu=i370\n\t\tvendor=ibm\n\t\t;;\n\torion105)\n\t\tcpu=clipper\n\t\tvendor=highlevel\n\t\t;;\n\tmac | mpw | mac-mpw)\n\t\tcpu=m68k\n\t\tvendor=apple\n\t\t;;\n\tpmac | pmac-mpw)\n\t\tcpu=powerpc\n\t\tvendor=apple\n\t\t;;\n\n\t# Recognize the various machine names and aliases which stand\n\t# for a CPU type and a company and sometimes even an OS.\n\t3b1 | 7300 | 7300-att | att-7300 | pc7300 | safari | unixpc)\n\t\tcpu=m68000\n\t\tvendor=att\n\t\t;;\n\t3b*)\n\t\tcpu=we32k\n\t\tvendor=att\n\t\t;;\n\tbluegene*)\n\t\tcpu=powerpc\n\t\tvendor=ibm\n\t\tos=cnk\n\t\t;;\n\tdecsystem10* | dec10*)\n\t\tcpu=pdp10\n\t\tvendor=dec\n\t\tos=tops10\n\t\t;;\n\tdecsystem20* | dec20*)\n\t\tcpu=pdp10\n\t\tvendor=dec\n\t\tos=tops20\n\t\t;;\n\tdelta | 3300 | motorola-3300 | motorola-delta \\\n\t      | 3300-motorola | delta-motorola)\n\t\tcpu=m68k\n\t\tvendor=motorola\n\t\t;;\n\tdpx2*)\n\t\tcpu=m68k\n\t\tvendor=bull\n\t\tos=sysv3\n\t\t;;\n\tencore | umax | mmax)\n\t\tcpu=ns32k\n\t\tvendor=encore\n\t\t;;\n\telxsi)\n\t\tcpu=elxsi\n\t\tvendor=elxsi\n\t\tos=${os:-bsd}\n\t\t;;\n\tfx2800)\n\t\tcpu=i860\n\t\tvendor=alliant\n\t\t;;\n\tgenix)\n\t\tcpu=ns32k\n\t\tvendor=ns\n\t\t;;\n\th3050r* | hiux*)\n\t\tcpu=hppa1.1\n\t\tvendor=hitachi\n\t\tos=hiuxwe2\n\t\t;;\n\thp3k9[0-9][0-9] | hp9[0-9][0-9])\n\t\tcpu=hppa1.0\n\t\tvendor=hp\n\t\t;;\n\thp9k2[0-9][0-9] | hp9k31[0-9])\n\t\tcpu=m68000\n\t\tvendor=hp\n\t\t;;\n\thp9k3[2-9][0-9])\n\t\tcpu=m68k\n\t\tvendor=hp\n\t\t;;\n\thp9k6[0-9][0-9] | hp6[0-9][0-9])\n\t\tcpu=hppa1.0\n\t\tvendor=hp\n\t\t;;\n\thp9k7[0-79][0-9] | hp7[0-79][0-9])\n\t\tcpu=hppa1.1\n\t\tvendor=hp\n\t\t;;\n\thp9k78[0-9] | hp78[0-9])\n\t\t# FIXME: really hppa2.0-hp\n\t\tcpu=hppa1.1\n\t\tvendor=hp\n\t\t;;\n\thp9k8[67]1 | hp8[67]1 | hp9k80[24] | hp80[24] | hp9k8[78]9 | hp8[78]9 | hp9k893 | hp893)\n\t\t# FIXME: really hppa2.0-hp\n\t\tcpu=hppa1.1\n\t\tvendor=hp\n\t\t;;\n\thp9k8[0-9][13679] | hp8[0-9][13679])\n\t\tcpu=hppa1.1\n\t\tvendor=hp\n\t\t;;\n\thp9k8[0-9][0-9] | hp8[0-9][0-9])\n\t\tcpu=hppa1.0\n\t\tvendor=hp\n\t\t;;\n\ti*86v32)\n\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n\t\tvendor=pc\n\t\tos=sysv32\n\t\t;;\n\ti*86v4*)\n\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n\t\tvendor=pc\n\t\tos=sysv4\n\t\t;;\n\ti*86v)\n\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n\t\tvendor=pc\n\t\tos=sysv\n\t\t;;\n\ti*86sol2)\n\t\tcpu=`echo \"$1\" | sed -e 's/86.*/86/'`\n\t\tvendor=pc\n\t\tos=solaris2\n\t\t;;\n\tj90 | j90-cray)\n\t\tcpu=j90\n\t\tvendor=cray\n\t\tos=${os:-unicos}\n\t\t;;\n\tiris | iris4d)\n\t\tcpu=mips\n\t\tvendor=sgi\n\t\tcase $os in\n\t\t    irix*)\n\t\t\t;;\n\t\t    *)\n\t\t\tos=irix4\n\t\t\t;;\n\t\tesac\n\t\t;;\n\tminiframe)\n\t\tcpu=m68000\n\t\tvendor=convergent\n\t\t;;\n\t*mint | mint[0-9]* | *MiNT | *MiNT[0-9]*)\n\t\tcpu=m68k\n\t\tvendor=atari\n\t\tos=mint\n\t\t;;\n\tnews-3600 | risc-news)\n\t\tcpu=mips\n\t\tvendor=sony\n\t\tos=newsos\n\t\t;;\n\tnext | m*-next)\n\t\tcpu=m68k\n\t\tvendor=next\n\t\tcase $os in\n\t\t    openstep*)\n\t\t        ;;\n\t\t    nextstep*)\n\t\t\t;;\n\t\t    ns2*)\n\t\t      os=nextstep2\n\t\t\t;;\n\t\t    *)\n\t\t      os=nextstep3\n\t\t\t;;\n\t\tesac\n\t\t;;\n\tnp1)\n\t\tcpu=np1\n\t\tvendor=gould\n\t\t;;\n\top50n-* | op60c-*)\n\t\tcpu=hppa1.1\n\t\tvendor=oki\n\t\tos=proelf\n\t\t;;\n\tpa-hitachi)\n\t\tcpu=hppa1.1\n\t\tvendor=hitachi\n\t\tos=hiuxwe2\n\t\t;;\n\tpbd)\n\t\tcpu=sparc\n\t\tvendor=tti\n\t\t;;\n\tpbb)\n\t\tcpu=m68k\n\t\tvendor=tti\n\t\t;;\n\tpc532)\n\t\tcpu=ns32k\n\t\tvendor=pc532\n\t\t;;\n\tpn)\n\t\tcpu=pn\n\t\tvendor=gould\n\t\t;;\n\tpower)\n\t\tcpu=power\n\t\tvendor=ibm\n\t\t;;\n\tps2)\n\t\tcpu=i386\n\t\tvendor=ibm\n\t\t;;\n\trm[46]00)\n\t\tcpu=mips\n\t\tvendor=siemens\n\t\t;;\n\trtpc | rtpc-*)\n\t\tcpu=romp\n\t\tvendor=ibm\n\t\t;;\n\tsde)\n\t\tcpu=mipsisa32\n\t\tvendor=sde\n\t\tos=${os:-elf}\n\t\t;;\n\tsimso-wrs)\n\t\tcpu=sparclite\n\t\tvendor=wrs\n\t\tos=vxworks\n\t\t;;\n\ttower | tower-32)\n\t\tcpu=m68k\n\t\tvendor=ncr\n\t\t;;\n\tvpp*|vx|vx-*)\n\t\tcpu=f301\n\t\tvendor=fujitsu\n\t\t;;\n\tw65)\n\t\tcpu=w65\n\t\tvendor=wdc\n\t\t;;\n\tw89k-*)\n\t\tcpu=hppa1.1\n\t\tvendor=winbond\n\t\tos=proelf\n\t\t;;\n\tnone)\n\t\tcpu=none\n\t\tvendor=none\n\t\t;;\n\tleon|leon[3-9])\n\t\tcpu=sparc\n\t\tvendor=$basic_machine\n\t\t;;\n\tleon-*|leon[3-9]-*)\n\t\tcpu=sparc\n\t\tvendor=`echo \"$basic_machine\" | sed 's/-.*//'`\n\t\t;;\n\n\t*-*)\n\t\t# shellcheck disable=SC2162\n\t\tIFS=\"-\" read cpu vendor <<EOF\n$basic_machine\nEOF\n\t\t;;\n\t# We use `pc' rather than `unknown'\n\t# because (1) that's what they normally are, and\n\t# (2) the word \"unknown\" tends to confuse beginning users.\n\ti*86 | x86_64)\n\t\tcpu=$basic_machine\n\t\tvendor=pc\n\t\t;;\n\t# These rules are duplicated from below for sake of the special case above;\n\t# i.e. things that normalized to x86 arches should also default to \"pc\"\n\tpc98)\n\t\tcpu=i386\n\t\tvendor=pc\n\t\t;;\n\tx64 | amd64)\n\t\tcpu=x86_64\n\t\tvendor=pc\n\t\t;;\n\t# Recognize the basic CPU types without company name.\n\t*)\n\t\tcpu=$basic_machine\n\t\tvendor=unknown\n\t\t;;\nesac\n\nunset -v basic_machine\n\n# Decode basic machines in the full and proper CPU-Company form.\ncase $cpu-$vendor in\n\t# Here we handle the default manufacturer of certain CPU types in canonical form. It is in\n\t# some cases the only manufacturer, in others, it is the most popular.\n\tcraynv-unknown)\n\t\tvendor=cray\n\t\tos=${os:-unicosmp}\n\t\t;;\n\tc90-unknown | c90-cray)\n\t\tvendor=cray\n\t\tos=${os:-unicos}\n\t\t;;\n\tfx80-unknown)\n\t\tvendor=alliant\n\t\t;;\n\tromp-unknown)\n\t\tvendor=ibm\n\t\t;;\n\tmmix-unknown)\n\t\tvendor=knuth\n\t\t;;\n\tmicroblaze-unknown | microblazeel-unknown)\n\t\tvendor=xilinx\n\t\t;;\n\trs6000-unknown)\n\t\tvendor=ibm\n\t\t;;\n\tvax-unknown)\n\t\tvendor=dec\n\t\t;;\n\tpdp11-unknown)\n\t\tvendor=dec\n\t\t;;\n\twe32k-unknown)\n\t\tvendor=att\n\t\t;;\n\tcydra-unknown)\n\t\tvendor=cydrome\n\t\t;;\n\ti370-ibm*)\n\t\tvendor=ibm\n\t\t;;\n\torion-unknown)\n\t\tvendor=highlevel\n\t\t;;\n\txps-unknown | xps100-unknown)\n\t\tcpu=xps100\n\t\tvendor=honeywell\n\t\t;;\n\n\t# Here we normalize CPU types with a missing or matching vendor\n\tdpx20-unknown | dpx20-bull)\n\t\tcpu=rs6000\n\t\tvendor=bull\n\t\tos=${os:-bosx}\n\t\t;;\n\n\t# Here we normalize CPU types irrespective of the vendor\n\tamd64-*)\n\t\tcpu=x86_64\n\t\t;;\n\tblackfin-*)\n\t\tcpu=bfin\n\t\tos=linux\n\t\t;;\n\tc54x-*)\n\t\tcpu=tic54x\n\t\t;;\n\tc55x-*)\n\t\tcpu=tic55x\n\t\t;;\n\tc6x-*)\n\t\tcpu=tic6x\n\t\t;;\n\te500v[12]-*)\n\t\tcpu=powerpc\n\t\tos=$os\"spe\"\n\t\t;;\n\tmips3*-*)\n\t\tcpu=mips64\n\t\t;;\n\tms1-*)\n\t\tcpu=mt\n\t\t;;\n\tm68knommu-*)\n\t\tcpu=m68k\n\t\tos=linux\n\t\t;;\n\tm9s12z-* | m68hcs12z-* | hcs12z-* | s12z-*)\n\t\tcpu=s12z\n\t\t;;\n\topenrisc-*)\n\t\tcpu=or32\n\t\t;;\n\tparisc-*)\n\t\tcpu=hppa\n\t\tos=linux\n\t\t;;\n\tpentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)\n\t\tcpu=i586\n\t\t;;\n\tpentiumpro-* | p6-* | 6x86-* | athlon-* | athalon_*-*)\n\t\tcpu=i686\n\t\t;;\n\tpentiumii-* | pentium2-* | pentiumiii-* | pentium3-*)\n\t\tcpu=i686\n\t\t;;\n\tpentium4-*)\n\t\tcpu=i786\n\t\t;;\n\tpc98-*)\n\t\tcpu=i386\n\t\t;;\n\tppc-* | ppcbe-*)\n\t\tcpu=powerpc\n\t\t;;\n\tppcle-* | powerpclittle-*)\n\t\tcpu=powerpcle\n\t\t;;\n\tppc64-*)\n\t\tcpu=powerpc64\n\t\t;;\n\tppc64le-* | powerpc64little-*)\n\t\tcpu=powerpc64le\n\t\t;;\n\tsb1-*)\n\t\tcpu=mipsisa64sb1\n\t\t;;\n\tsb1el-*)\n\t\tcpu=mipsisa64sb1el\n\t\t;;\n\tsh5e[lb]-*)\n\t\tcpu=`echo \"$cpu\" | sed 's/^\\(sh.\\)e\\(.\\)$/\\1\\2e/'`\n\t\t;;\n\tspur-*)\n\t\tcpu=spur\n\t\t;;\n\tstrongarm-* | thumb-*)\n\t\tcpu=arm\n\t\t;;\n\ttx39-*)\n\t\tcpu=mipstx39\n\t\t;;\n\ttx39el-*)\n\t\tcpu=mipstx39el\n\t\t;;\n\tx64-*)\n\t\tcpu=x86_64\n\t\t;;\n\txscale-* | xscalee[bl]-*)\n\t\tcpu=`echo \"$cpu\" | sed 's/^xscale/arm/'`\n\t\t;;\n\n\t# Recognize the canonical CPU Types that limit and/or modify the\n\t# company names they are paired with.\n\tcr16-*)\n\t\tos=${os:-elf}\n\t\t;;\n\tcrisv32-* | etraxfs*-*)\n\t\tcpu=crisv32\n\t\tvendor=axis\n\t\t;;\n\tcris-* | etrax*-*)\n\t\tcpu=cris\n\t\tvendor=axis\n\t\t;;\n\tcrx-*)\n\t\tos=${os:-elf}\n\t\t;;\n\tneo-tandem)\n\t\tcpu=neo\n\t\tvendor=tandem\n\t\t;;\n\tnse-tandem)\n\t\tcpu=nse\n\t\tvendor=tandem\n\t\t;;\n\tnsr-tandem)\n\t\tcpu=nsr\n\t\tvendor=tandem\n\t\t;;\n\tnsv-tandem)\n\t\tcpu=nsv\n\t\tvendor=tandem\n\t\t;;\n\tnsx-tandem)\n\t\tcpu=nsx\n\t\tvendor=tandem\n\t\t;;\n\ts390-*)\n\t\tcpu=s390\n\t\tvendor=ibm\n\t\t;;\n\ts390x-*)\n\t\tcpu=s390x\n\t\tvendor=ibm\n\t\t;;\n\ttile*-*)\n\t\tos=${os:-linux-gnu}\n\t\t;;\n\n\t*)\n\t\t# Recognize the canonical CPU types that are allowed with any\n\t\t# company name.\n\t\tcase $cpu in\n\t\t\t1750a | 580 \\\n\t\t\t| a29k \\\n\t\t\t| aarch64 | aarch64_be \\\n\t\t\t| abacus \\\n\t\t\t| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] \\\n\t\t\t| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] \\\n\t\t\t| alphapca5[67] | alpha64pca5[67] \\\n\t\t\t| am33_2.0 \\\n\t\t\t| amdgcn \\\n\t\t\t| arc | arceb \\\n\t\t\t| arm  | arm[lb]e | arme[lb] | armv* \\\n\t\t\t| avr | avr32 \\\n\t\t\t| asmjs \\\n\t\t\t| ba \\\n\t\t\t| be32 | be64 \\\n\t\t\t| bfin | bpf | bs2000 \\\n\t\t\t| c[123]* | c30 | [cjt]90 | c4x \\\n\t\t\t| c8051 | clipper | craynv | csky | cydra \\\n\t\t\t| d10v | d30v | dlx | dsp16xx \\\n\t\t\t| e2k | elxsi | epiphany \\\n\t\t\t| f30[01] | f700 | fido | fr30 | frv | ft32 | fx80 \\\n\t\t\t| h8300 | h8500 \\\n\t\t\t| hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \\\n\t\t\t| hexagon \\\n\t\t\t| i370 | i*86 | i860 | i960 | ia16 | ia64 \\\n\t\t\t| ip2k | iq2000 \\\n\t\t\t| k1om \\\n\t\t\t| le32 | le64 \\\n\t\t\t| lm32 \\\n\t\t\t| m32c | m32r | m32rle \\\n\t\t\t| m5200 | m68000 | m680[012346]0 | m68360 | m683?2 | m68k \\\n\t\t\t| m6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x \\\n\t\t\t| m88110 | m88k | maxq | mb | mcore | mep | metag \\\n\t\t\t| microblaze | microblazeel \\\n\t\t\t| mips | mipsbe | mipseb | mipsel | mipsle \\\n\t\t\t| mips16 \\\n\t\t\t| mips64 | mips64eb | mips64el \\\n\t\t\t| mips64octeon | mips64octeonel \\\n\t\t\t| mips64orion | mips64orionel \\\n\t\t\t| mips64r5900 | mips64r5900el \\\n\t\t\t| mips64vr | mips64vrel \\\n\t\t\t| mips64vr4100 | mips64vr4100el \\\n\t\t\t| mips64vr4300 | mips64vr4300el \\\n\t\t\t| mips64vr5000 | mips64vr5000el \\\n\t\t\t| mips64vr5900 | mips64vr5900el \\\n\t\t\t| mipsisa32 | mipsisa32el \\\n\t\t\t| mipsisa32r2 | mipsisa32r2el \\\n\t\t\t| mipsisa32r6 | mipsisa32r6el \\\n\t\t\t| mipsisa64 | mipsisa64el \\\n\t\t\t| mipsisa64r2 | mipsisa64r2el \\\n\t\t\t| mipsisa64r6 | mipsisa64r6el \\\n\t\t\t| mipsisa64sb1 | mipsisa64sb1el \\\n\t\t\t| mipsisa64sr71k | mipsisa64sr71kel \\\n\t\t\t| mipsr5900 | mipsr5900el \\\n\t\t\t| mipstx39 | mipstx39el \\\n\t\t\t| mmix \\\n\t\t\t| mn10200 | mn10300 \\\n\t\t\t| moxie \\\n\t\t\t| mt \\\n\t\t\t| msp430 \\\n\t\t\t| nds32 | nds32le | nds32be \\\n\t\t\t| nfp \\\n\t\t\t| nios | nios2 | nios2eb | nios2el \\\n\t\t\t| none | np1 | ns16k | ns32k | nvptx \\\n\t\t\t| open8 \\\n\t\t\t| or1k* \\\n\t\t\t| or32 \\\n\t\t\t| orion \\\n\t\t\t| picochip \\\n\t\t\t| pdp10 | pdp11 | pj | pjl | pn | power \\\n\t\t\t| powerpc | powerpc64 | powerpc64le | powerpcle | powerpcspe \\\n\t\t\t| pru \\\n\t\t\t| pyramid \\\n\t\t\t| riscv | riscv32 | riscv64 \\\n\t\t\t| rl78 | romp | rs6000 | rx \\\n\t\t\t| score \\\n\t\t\t| sh | shl \\\n\t\t\t| sh[1234] | sh[24]a | sh[24]ae[lb] | sh[23]e | she[lb] | sh[lb]e \\\n\t\t\t| sh[1234]e[lb] |  sh[12345][lb]e | sh[23]ele | sh64 | sh64le \\\n\t\t\t| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet \\\n\t\t\t| sparclite \\\n\t\t\t| sparcv8 | sparcv9 | sparcv9b | sparcv9v | sv1 | sx* \\\n\t\t\t| spu \\\n\t\t\t| tahoe \\\n\t\t\t| tic30 | tic4x | tic54x | tic55x | tic6x | tic80 \\\n\t\t\t| tron \\\n\t\t\t| ubicom32 \\\n\t\t\t| v70 | v850 | v850e | v850e1 | v850es | v850e2 | v850e2v3 \\\n\t\t\t| vax \\\n\t\t\t| visium \\\n\t\t\t| w65 \\\n\t\t\t| wasm32 | wasm64 \\\n\t\t\t| we32k \\\n\t\t\t| x86 | x86_64 | xc16x | xgate | xps100 \\\n\t\t\t| xstormy16 | xtensa* \\\n\t\t\t| ymp \\\n\t\t\t| z8k | z80)\n\t\t\t\t;;\n\n\t\t\t*)\n\t\t\t\techo Invalid configuration \\`\"$1\"\\': machine \\`\"$cpu-$vendor\"\\' not recognized 1>&2\n\t\t\t\texit 1\n\t\t\t\t;;\n\t\tesac\n\t\t;;\nesac\n\n# Here we canonicalize certain aliases for manufacturers.\ncase $vendor in\n\tdigital*)\n\t\tvendor=dec\n\t\t;;\n\tcommodore*)\n\t\tvendor=cbm\n\t\t;;\n\t*)\n\t\t;;\nesac\n\n# Decode manufacturer-specific aliases for certain operating systems.\n\nif [ x$os != x ]\nthen\ncase $os in\n\t# First match some system type aliases that might get confused\n\t# with valid system types.\n\t# solaris* is a basic system type, with this one exception.\n\tauroraux)\n\t\tos=auroraux\n\t\t;;\n\tbluegene*)\n\t\tos=cnk\n\t\t;;\n\tsolaris1 | solaris1.*)\n\t\tos=`echo $os | sed -e 's|solaris1|sunos4|'`\n\t\t;;\n\tsolaris)\n\t\tos=solaris2\n\t\t;;\n\tunixware*)\n\t\tos=sysv4.2uw\n\t\t;;\n\tgnu/linux*)\n\t\tos=`echo $os | sed -e 's|gnu/linux|linux-gnu|'`\n\t\t;;\n\t# es1800 is here to avoid being matched by es* (a different OS)\n\tes1800*)\n\t\tos=ose\n\t\t;;\n\t# Some version numbers need modification\n\tchorusos*)\n\t\tos=chorusos\n\t\t;;\n\tisc)\n\t\tos=isc2.2\n\t\t;;\n\tsco6)\n\t\tos=sco5v6\n\t\t;;\n\tsco5)\n\t\tos=sco3.2v5\n\t\t;;\n\tsco4)\n\t\tos=sco3.2v4\n\t\t;;\n\tsco3.2.[4-9]*)\n\t\tos=`echo $os | sed -e 's/sco3.2./sco3.2v/'`\n\t\t;;\n\tsco3.2v[4-9]* | sco5v6*)\n\t\t# Don't forget version if it is 3.2v4 or newer.\n\t\t;;\n\tscout)\n\t\t# Don't match below\n\t\t;;\n\tsco*)\n\t\tos=sco3.2v2\n\t\t;;\n\tpsos*)\n\t\tos=psos\n\t\t;;\n\t# Now accept the basic system types.\n\t# The portable systems comes first.\n\t# Each alternative MUST end in a * to match a version number.\n\t# sysv* is not here because it comes later, after sysvr4.\n\tgnu* | bsd* | mach* | minix* | genix* | ultrix* | irix* \\\n\t     | *vms* | esix* | aix* | cnk* | sunos | sunos[34]*\\\n\t     | hpux* | unos* | osf* | luna* | dgux* | auroraux* | solaris* \\\n\t     | sym* | kopensolaris* | plan9* \\\n\t     | amigaos* | amigados* | msdos* | newsos* | unicos* | aof* \\\n\t     | aos* | aros* | cloudabi* | sortix* | twizzler* \\\n\t     | nindy* | vxsim* | vxworks* | ebmon* | hms* | mvs* \\\n\t     | clix* | riscos* | uniplus* | iris* | isc* | rtu* | xenix* \\\n\t     | knetbsd* | mirbsd* | netbsd* \\\n\t     | bitrig* | openbsd* | solidbsd* | libertybsd* | os108* \\\n\t     | ekkobsd* | kfreebsd* | freebsd* | riscix* | lynxos* \\\n\t     | bosx* | nextstep* | cxux* | aout* | elf* | oabi* \\\n\t     | ptx* | coff* | ecoff* | winnt* | domain* | vsta* \\\n\t     | udi* | eabi* | lites* | ieee* | go32* | aux* | hcos* \\\n\t     | chorusrdb* | cegcc* | glidix* \\\n\t     | cygwin* | msys* | pe* | moss* | proelf* | rtems* \\\n\t     | midipix* | mingw32* | mingw64* | linux-gnu* | linux-android* \\\n\t     | linux-newlib* | linux-musl* | linux-uclibc* \\\n\t     | uxpv* | beos* | mpeix* | udk* | moxiebox* \\\n\t     | interix* | uwin* | mks* | rhapsody* | darwin* \\\n\t     | openstep* | oskit* | conix* | pw32* | nonstopux* \\\n\t     | storm-chaos* | tops10* | tenex* | tops20* | its* \\\n\t     | os2* | vos* | palmos* | uclinux* | nucleus* \\\n\t     | morphos* | superux* | rtmk* | windiss* \\\n\t     | powermax* | dnix* | nx6 | nx7 | sei* | dragonfly* \\\n\t     | skyos* | haiku* | rdos* | toppers* | drops* | es* \\\n\t     | onefs* | tirtos* | phoenix* | fuchsia* | redox* | bme* \\\n\t     | midnightbsd* | amdhsa* | unleashed* | emscripten* | wasi* \\\n\t     | nsk* | powerunix* | genode*)\n\t# Remember, each alternative MUST END IN *, to match a version number.\n\t\t;;\n\tqnx*)\n\t\tcase $cpu in\n\t\t    x86 | i*86)\n\t\t\t;;\n\t\t    *)\n\t\t\tos=nto-$os\n\t\t\t;;\n\t\tesac\n\t\t;;\n\thiux*)\n\t\tos=hiuxwe2\n\t\t;;\n\tnto-qnx*)\n\t\t;;\n\tnto*)\n\t\tos=`echo $os | sed -e 's|nto|nto-qnx|'`\n\t\t;;\n\tsim | xray | os68k* | v88r* \\\n\t    | windows* | osx | abug | netware* | os9* \\\n\t    | macos* | mpw* | magic* | mmixware* | mon960* | lnews*)\n\t\t;;\n\tlinux-dietlibc)\n\t\tos=linux-dietlibc\n\t\t;;\n\tlinux*)\n\t\tos=`echo $os | sed -e 's|linux|linux-gnu|'`\n\t\t;;\n\tlynx*178)\n\t\tos=lynxos178\n\t\t;;\n\tlynx*5)\n\t\tos=lynxos5\n\t\t;;\n\tlynx*)\n\t\tos=lynxos\n\t\t;;\n\tmac*)\n\t\tos=`echo \"$os\" | sed -e 's|mac|macos|'`\n\t\t;;\n\topened*)\n\t\tos=openedition\n\t\t;;\n\tos400*)\n\t\tos=os400\n\t\t;;\n\tsunos5*)\n\t\tos=`echo \"$os\" | sed -e 's|sunos5|solaris2|'`\n\t\t;;\n\tsunos6*)\n\t\tos=`echo \"$os\" | sed -e 's|sunos6|solaris3|'`\n\t\t;;\n\twince*)\n\t\tos=wince\n\t\t;;\n\tutek*)\n\t\tos=bsd\n\t\t;;\n\tdynix*)\n\t\tos=bsd\n\t\t;;\n\tacis*)\n\t\tos=aos\n\t\t;;\n\tatheos*)\n\t\tos=atheos\n\t\t;;\n\tsyllable*)\n\t\tos=syllable\n\t\t;;\n\t386bsd)\n\t\tos=bsd\n\t\t;;\n\tctix* | uts*)\n\t\tos=sysv\n\t\t;;\n\tnova*)\n\t\tos=rtmk-nova\n\t\t;;\n\tns2)\n\t\tos=nextstep2\n\t\t;;\n\t# Preserve the version number of sinix5.\n\tsinix5.*)\n\t\tos=`echo $os | sed -e 's|sinix|sysv|'`\n\t\t;;\n\tsinix*)\n\t\tos=sysv4\n\t\t;;\n\ttpf*)\n\t\tos=tpf\n\t\t;;\n\ttriton*)\n\t\tos=sysv3\n\t\t;;\n\toss*)\n\t\tos=sysv3\n\t\t;;\n\tsvr4*)\n\t\tos=sysv4\n\t\t;;\n\tsvr3)\n\t\tos=sysv3\n\t\t;;\n\tsysvr4)\n\t\tos=sysv4\n\t\t;;\n\t# This must come after sysvr4.\n\tsysv*)\n\t\t;;\n\tose*)\n\t\tos=ose\n\t\t;;\n\t*mint | mint[0-9]* | *MiNT | MiNT[0-9]*)\n\t\tos=mint\n\t\t;;\n\tzvmoe)\n\t\tos=zvmoe\n\t\t;;\n\tdicos*)\n\t\tos=dicos\n\t\t;;\n\tpikeos*)\n\t\t# Until real need of OS specific support for\n\t\t# particular features comes up, bare metal\n\t\t# configurations are quite functional.\n\t\tcase $cpu in\n\t\t    arm*)\n\t\t\tos=eabi\n\t\t\t;;\n\t\t    *)\n\t\t\tos=elf\n\t\t\t;;\n\t\tesac\n\t\t;;\n\tnacl*)\n\t\t;;\n\tios)\n\t\t;;\n\tnone)\n\t\t;;\n\t*-eabi)\n\t\t;;\n\t*)\n\t\techo Invalid configuration \\`\"$1\"\\': system \\`\"$os\"\\' not recognized 1>&2\n\t\texit 1\n\t\t;;\nesac\nelse\n\n# Here we handle the default operating systems that come with various machines.\n# The value should be what the vendor currently ships out the door with their\n# machine or put another way, the most popular os provided with the machine.\n\n# Note that if you're going to try to match \"-MANUFACTURER\" here (say,\n# \"-sun\"), then you have to tell the case statement up towards the top\n# that MANUFACTURER isn't an operating system.  Otherwise, code above\n# will signal an error saying that MANUFACTURER isn't an operating\n# system, and we'll never get to this point.\n\ncase $cpu-$vendor in\n\tscore-*)\n\t\tos=elf\n\t\t;;\n\tspu-*)\n\t\tos=elf\n\t\t;;\n\t*-acorn)\n\t\tos=riscix1.2\n\t\t;;\n\tarm*-rebel)\n\t\tos=linux\n\t\t;;\n\tarm*-semi)\n\t\tos=aout\n\t\t;;\n\tc4x-* | tic4x-*)\n\t\tos=coff\n\t\t;;\n\tc8051-*)\n\t\tos=elf\n\t\t;;\n\tclipper-intergraph)\n\t\tos=clix\n\t\t;;\n\thexagon-*)\n\t\tos=elf\n\t\t;;\n\ttic54x-*)\n\t\tos=coff\n\t\t;;\n\ttic55x-*)\n\t\tos=coff\n\t\t;;\n\ttic6x-*)\n\t\tos=coff\n\t\t;;\n\t# This must come before the *-dec entry.\n\tpdp10-*)\n\t\tos=tops20\n\t\t;;\n\tpdp11-*)\n\t\tos=none\n\t\t;;\n\t*-dec | vax-*)\n\t\tos=ultrix4.2\n\t\t;;\n\tm68*-apollo)\n\t\tos=domain\n\t\t;;\n\ti386-sun)\n\t\tos=sunos4.0.2\n\t\t;;\n\tm68000-sun)\n\t\tos=sunos3\n\t\t;;\n\tm68*-cisco)\n\t\tos=aout\n\t\t;;\n\tmep-*)\n\t\tos=elf\n\t\t;;\n\tmips*-cisco)\n\t\tos=elf\n\t\t;;\n\tmips*-*)\n\t\tos=elf\n\t\t;;\n\tor32-*)\n\t\tos=coff\n\t\t;;\n\t*-tti)\t# must be before sparc entry or we get the wrong os.\n\t\tos=sysv3\n\t\t;;\n\tsparc-* | *-sun)\n\t\tos=sunos4.1.1\n\t\t;;\n\tpru-*)\n\t\tos=elf\n\t\t;;\n\t*-be)\n\t\tos=beos\n\t\t;;\n\t*-ibm)\n\t\tos=aix\n\t\t;;\n\t*-knuth)\n\t\tos=mmixware\n\t\t;;\n\t*-wec)\n\t\tos=proelf\n\t\t;;\n\t*-winbond)\n\t\tos=proelf\n\t\t;;\n\t*-oki)\n\t\tos=proelf\n\t\t;;\n\t*-hp)\n\t\tos=hpux\n\t\t;;\n\t*-hitachi)\n\t\tos=hiux\n\t\t;;\n\ti860-* | *-att | *-ncr | *-altos | *-motorola | *-convergent)\n\t\tos=sysv\n\t\t;;\n\t*-cbm)\n\t\tos=amigaos\n\t\t;;\n\t*-dg)\n\t\tos=dgux\n\t\t;;\n\t*-dolphin)\n\t\tos=sysv3\n\t\t;;\n\tm68k-ccur)\n\t\tos=rtu\n\t\t;;\n\tm88k-omron*)\n\t\tos=luna\n\t\t;;\n\t*-next)\n\t\tos=nextstep\n\t\t;;\n\t*-sequent)\n\t\tos=ptx\n\t\t;;\n\t*-crds)\n\t\tos=unos\n\t\t;;\n\t*-ns)\n\t\tos=genix\n\t\t;;\n\ti370-*)\n\t\tos=mvs\n\t\t;;\n\t*-gould)\n\t\tos=sysv\n\t\t;;\n\t*-highlevel)\n\t\tos=bsd\n\t\t;;\n\t*-encore)\n\t\tos=bsd\n\t\t;;\n\t*-sgi)\n\t\tos=irix\n\t\t;;\n\t*-siemens)\n\t\tos=sysv4\n\t\t;;\n\t*-masscomp)\n\t\tos=rtu\n\t\t;;\n\tf30[01]-fujitsu | f700-fujitsu)\n\t\tos=uxpv\n\t\t;;\n\t*-rom68k)\n\t\tos=coff\n\t\t;;\n\t*-*bug)\n\t\tos=coff\n\t\t;;\n\t*-apple)\n\t\tos=macos\n\t\t;;\n\t*-atari*)\n\t\tos=mint\n\t\t;;\n\t*-wrs)\n\t\tos=vxworks\n\t\t;;\n\t*)\n\t\tos=none\n\t\t;;\nesac\nfi\n\n# Here we handle the case where we know the os, and the CPU type, but not the\n# manufacturer.  We pick the logical manufacturer.\ncase $vendor in\n\tunknown)\n\t\tcase $os in\n\t\t\triscix*)\n\t\t\t\tvendor=acorn\n\t\t\t\t;;\n\t\t\tsunos*)\n\t\t\t\tvendor=sun\n\t\t\t\t;;\n\t\t\tcnk*|-aix*)\n\t\t\t\tvendor=ibm\n\t\t\t\t;;\n\t\t\tbeos*)\n\t\t\t\tvendor=be\n\t\t\t\t;;\n\t\t\thpux*)\n\t\t\t\tvendor=hp\n\t\t\t\t;;\n\t\t\tmpeix*)\n\t\t\t\tvendor=hp\n\t\t\t\t;;\n\t\t\thiux*)\n\t\t\t\tvendor=hitachi\n\t\t\t\t;;\n\t\t\tunos*)\n\t\t\t\tvendor=crds\n\t\t\t\t;;\n\t\t\tdgux*)\n\t\t\t\tvendor=dg\n\t\t\t\t;;\n\t\t\tluna*)\n\t\t\t\tvendor=omron\n\t\t\t\t;;\n\t\t\tgenix*)\n\t\t\t\tvendor=ns\n\t\t\t\t;;\n\t\t\tclix*)\n\t\t\t\tvendor=intergraph\n\t\t\t\t;;\n\t\t\tmvs* | opened*)\n\t\t\t\tvendor=ibm\n\t\t\t\t;;\n\t\t\tos400*)\n\t\t\t\tvendor=ibm\n\t\t\t\t;;\n\t\t\tptx*)\n\t\t\t\tvendor=sequent\n\t\t\t\t;;\n\t\t\ttpf*)\n\t\t\t\tvendor=ibm\n\t\t\t\t;;\n\t\t\tvxsim* | vxworks* | windiss*)\n\t\t\t\tvendor=wrs\n\t\t\t\t;;\n\t\t\taux*)\n\t\t\t\tvendor=apple\n\t\t\t\t;;\n\t\t\thms*)\n\t\t\t\tvendor=hitachi\n\t\t\t\t;;\n\t\t\tmpw* | macos*)\n\t\t\t\tvendor=apple\n\t\t\t\t;;\n\t\t\t*mint | mint[0-9]* | *MiNT | MiNT[0-9]*)\n\t\t\t\tvendor=atari\n\t\t\t\t;;\n\t\t\tvos*)\n\t\t\t\tvendor=stratus\n\t\t\t\t;;\n\t\tesac\n\t\t;;\nesac\n\necho \"$cpu-$vendor-$os\"\nexit\n\n# Local variables:\n# eval: (add-hook 'before-save-hook 'time-stamp)\n# time-stamp-start: \"timestamp='\"\n# time-stamp-format: \"%:y-%02m-%02d\"\n# time-stamp-end: \"'\"\n# End:\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 100.837890625,
          "content": "dnl\ndnl  configure.ac: Configure template for zsh.\ndnl  Process this file with autoconf to produce a configure script.\ndnl\ndnl  Copyright (c) 1995-1997 Richard Coleman\ndnl  All rights reserved.\ndnl\ndnl  Permission is hereby granted, without written agreement and without\ndnl  license or royalty fees, to use, copy, modify, and distribute this\ndnl  software and to distribute modified versions of this software for any\ndnl  purpose, provided that the above copyright notice and the following\ndnl  two paragraphs appear in all copies of this software.\ndnl\ndnl  In no event shall Richard Coleman or the Zsh Development Group be liable\ndnl  to any party for direct, indirect, special, incidental, or consequential\ndnl  damages arising out of the use of this software and its documentation,\ndnl  even if Richard Coleman and the Zsh Development Group have been advised of\ndnl  the possibility of such damage.\ndnl\ndnl  Richard Coleman and the Zsh Development Group specifically disclaim any\ndnl  warranties, including, but not limited to, the implied warranties of\ndnl  merchantability and fitness for a particular purpose.  The software\ndnl  provided hereunder is on an \"as is\" basis, and Richard Coleman and the\ndnl  Zsh Development Group have no obligation to provide maintenance,\ndnl  support, updates, enhancements, or modifications.\ndnl\n\nAC_INIT\nAC_CONFIG_SRCDIR([Src/zsh.h])\nAC_PREREQ([2.69])\nAC_CONFIG_HEADERS([config.h])\n\ndnl What version of zsh are we building ?\n. ${srcdir}/Config/version.mk\necho \"configuring for zsh $VERSION\"\n\ndnl ----------------------------------------------\ndnl CHECK FOR MACHINE/VENDOR/OPERATING SYSTEM TYPE\ndnl ----------------------------------------------\ndnl Find out machine type, vendor, and operating system\ndnl What type of host is this?\nAC_CANONICAL_HOST\nAC_DEFINE_UNQUOTED(MACHTYPE, \"$host_cpu\",\n[Define to be the machine type (microprocessor class or machine model).])\nAC_DEFINE_UNQUOTED(VENDOR,   \"$host_vendor\",\n[Define to be a string corresponding the vendor of the machine.])\nAC_DEFINE_UNQUOTED(OSTYPE,   \"$host_os\",\n[Define to be the name of the operating system.])\n\ndnl -----------------------------\ndnl CHECKING COMMAND LINE OPTIONS\ndnl -----------------------------\ndnl Handle --program-prefix, --program-suffix, etc.\nzsh_ARG_PROGRAM\n\ndnl Handle setting of compile flags (CPPFLAGS, CFLAGS, LDFLAGS, LIBS).\nzsh_COMPILE_FLAGS($CPPFLAGS, $CFLAGS, $LDFLAGS, $LIBS)\n\ndnl Do you want to debug zsh?\nifdef([zsh-debug],[undefine([zsh-debug])])dnl\nAH_TEMPLATE([DEBUG],\n[Define to 1 if you want to debug zsh.])\nAC_ARG_ENABLE(zsh-debug,\nAS_HELP_STRING([--enable-zsh-debug],[compile with debug code and debugger symbols]),\n[if test x$enableval = xyes; then\n  AC_DEFINE(DEBUG)\nfi])\n\ndnl Do you want zsh memory allocation routines.\nifdef([zsh-mem],[undefine([zsh-mem])])dnl\nAH_TEMPLATE([ZSH_MEM],\n[Define to 1 if you want to use zsh's own memory allocation routines])\nAC_ARG_ENABLE(zsh-mem,\nAS_HELP_STRING([--enable-zsh-mem],[compile with zsh memory allocation routines]),\n[if test x$enableval = xyes; then\n  AC_DEFINE(ZSH_MEM)\nfi])\n\ndnl Do you want to debug zsh memory allocation routines.\nifdef([zsh-mem-debug],[undefine([zsh-mem-debug])])dnl\nAH_TEMPLATE([ZSH_MEM_DEBUG],\n[Define to 1 if you want to debug zsh memory allocation routines.])\nAC_ARG_ENABLE(zsh-mem-debug,\nAS_HELP_STRING([--enable-zsh-mem-debug],[debug zsh memory allocation routines]),\n[if test x$enableval = xyes; then\n  AC_DEFINE(ZSH_MEM_DEBUG)\nfi])\n\ndnl Do you want to print warnings when errors in memory allocation.\nAH_TEMPLATE([ZSH_MEM_WARNING],\n[Define to 1 if you want to turn on warnings of memory allocation errors])\nifdef([zsh-mem-warning],[undefine([zsh-mem-warning])])dnl\nAC_ARG_ENABLE(zsh-mem-warning,\nAS_HELP_STRING([--enable-zsh-mem-warning],[print warnings for errors in memory allocation]),\n[if test x$enableval = xyes; then\n  AC_DEFINE(ZSH_MEM_WARNING)\nfi])\n\ndnl Do you want to turn on error checking for free().\nifdef([zsh-secure-free],[undefine([zsh-secure-free])])dnl\nAH_TEMPLATE([ZSH_SECURE_FREE],\n[Define to 1 if you want to turn on memory checking for free().])\nAC_ARG_ENABLE(zsh-secure-free,\nAS_HELP_STRING([--enable-zsh-secure-free],[turn on error checking for free()]),\n[if test x$enableval = xyes; then\n  AC_DEFINE(ZSH_SECURE_FREE)\nfi])\n\ndnl Do you want to debug zsh heap allocation?\ndnl Does not depend on zsh-mem.\nifdef([zsh-heap-debug],[undefine([zsh-heap-debug])])dnl\nAH_TEMPLATE([ZSH_HEAP_DEBUG],\n[Define to 1 if you want to turn on error checking for heap allocation.])\nAC_ARG_ENABLE(zsh-heap-debug,\nAS_HELP_STRING([--enable-zsh-heap-debug],[turn on error checking for heap allocation]),\n[if test x$enableval = xyes; then\n  AC_DEFINE(ZSH_HEAP_DEBUG)\nfi])\n\ndnl Do you want to allow Valgrind to debug heap allocation?\nifdef([zsh-valgrind],[undefine([zsh-valgrind])])dnl\nAH_TEMPLATE([ZSH_VALGRIND],\n[Define to 1 if you want to add code for valgrind to debug heap memory.])\nAC_ARG_ENABLE(zsh-valgrind,\nAS_HELP_STRING([--enable-zsh-valgrind],[turn on support for valgrind debugging of heap memory]),\n[if test x$enableval = xyes;  then\n  AC_DEFINE(ZSH_VALGRIND)\nfi])\n\ndnl Do you want debugging information on internal hash tables.\ndnl This turns on the `hashinfo' builtin command.\nifdef([zsh-hash-debug],[undefine([zsh-hash-debug])])dnl\nAH_TEMPLATE([ZSH_HASH_DEBUG],\n[Define to 1 if you want to get debugging information on internal\n hash tables.  This turns on the `hashinfo' builtin.])\nAC_ARG_ENABLE(zsh-hash-debug,\nAS_HELP_STRING([--enable-zsh-hash-debug],[turn on debugging of internal hash tables]),\n[if test x$enableval = xyes; then\n  AC_DEFINE(ZSH_HASH_DEBUG)\nfi])\n\ndnl Do you want to dynamically allocate memory on the stack where possible?\nifdef([stack-allocation],[undefine([stack-allocation])])dnl\nAH_TEMPLATE([USE_STACK_ALLOCATION],\n[Define to 1 if you want to allocate stack memory e.g. with `alloca'.])\nAC_ARG_ENABLE(stack-allocation,\nAS_HELP_STRING([--enable-stack-allocation],[allocate stack memory e.g. with `alloca']),\n[if test x$enableval = xyes; then\n  AC_DEFINE(USE_STACK_ALLOCATION)\nfi])\n\ndnl Pathnames for global zsh scripts\nifdef([etcdir],[undefine([etcdir])])dnl\nAC_ARG_ENABLE(etcdir,\nAS_HELP_STRING([--enable-etcdir=DIR],[the default directory for global zsh scripts]),\n[etcdir=\"$enableval\"], [etcdir=/etc])\n\nifdef([zshenv],[undefine([zshenv])])dnl\nAC_ARG_ENABLE(zshenv,\nAS_HELP_STRING([--enable-zshenv=FILE],[the full pathname of the global zshenv script]),\n[zshenv=\"$enableval\"],\n[if test \"x$etcdir\" = xno; then\n  zshenv=no\nelse\n  zshenv=\"$etcdir/zshenv\"\nfi])\nAH_TEMPLATE([GLOBAL_ZSHENV],\n[The global file to source absolutely first whenever zsh is run;\n if undefined, don't source anything.])\nif test \"x$zshenv\" != xno; then\n  AC_DEFINE_UNQUOTED(GLOBAL_ZSHENV, \"$zshenv\")\nfi\n\nifdef([zshrc],[undefine([zshrc])])dnl\nAC_ARG_ENABLE(zshrc,\nAS_HELP_STRING([--enable-zshrc=FILE],[the full pathname of the global zshrc script]),\n[zshrc=\"$enableval\"],\n[if test \"x$etcdir\" = xno; then\n  zshrc=no\nelse\n  zshrc=\"$etcdir/zshrc\"\nfi])\nAH_TEMPLATE([GLOBAL_ZSHRC],\n[The global file to source whenever zsh is run;\n if undefined, don't source anything])\nif test \"x$zshrc\" != xno; then\n  AC_DEFINE_UNQUOTED(GLOBAL_ZSHRC, \"$zshrc\")\nfi\n\nifdef([zprofile],[undefine([zprofile])])dnl\nAC_ARG_ENABLE(zprofile,\nAS_HELP_STRING([--enable-zprofile=FILE],[the full pathname of the global zprofile script]),\n[zprofile=\"$enableval\"],\n[if test \"x$etcdir\" = xno; then\n  zprofile=no\nelse\n  zprofile=\"$etcdir/zprofile\"\nfi])\nAH_TEMPLATE([GLOBAL_ZPROFILE],\n[The global file to source whenever zsh is run as a login shell,\n before zshrc is read; if undefined, don't source anything.])\nif test \"x$zprofile\" != xno; then\n  AC_DEFINE_UNQUOTED(GLOBAL_ZPROFILE, \"$zprofile\")\nfi\n\nifdef([zlogin],[undefine([zlogin])])dnl\nAC_ARG_ENABLE(zlogin,\nAS_HELP_STRING([--enable-zlogin=FILE],[the full pathname of the global zlogin script]),\n[zlogin=\"$enableval\"],\n[if test \"x$etcdir\" = xno; then\n  zlogin=no\nelse\n  zlogin=\"$etcdir/zlogin\"\nfi])\nAH_TEMPLATE([GLOBAL_ZLOGIN],\n[The global file to source whenever zsh is run as a login shell;\n if undefined, don't source anything])\nif test \"x$zlogin\" != xno; then\n  AC_DEFINE_UNQUOTED(GLOBAL_ZLOGIN, \"$zlogin\")\nfi\n\nifdef([zlogout],[undefine([zlogout])])dnl\nAC_ARG_ENABLE(zlogout,\nAS_HELP_STRING([--enable-zlogout=FILE],[the full pathname of the global zlogout script]),\n[zlogout=\"$enableval\"],\n[if test \"x$etcdir\" = xno; then\n  zlogout=no\nelse\n  zlogout=\"$etcdir/zlogout\"\nfi])\nAH_TEMPLATE([GLOBAL_ZLOGOUT],\n[The global file to source whenever zsh was run as a login shell.\n This is sourced right before exiting.  If undefined, don't source\n anything.])\nif test \"x$zlogout\" != xno; then\n  AC_DEFINE_UNQUOTED(GLOBAL_ZLOGOUT, \"$zlogout\")\nfi\n\nAC_SUBST(zshenv)dnl\nAC_SUBST(zshrc)dnl\nAC_SUBST(zprofile)dnl\nAC_SUBST(zlogin)dnl\nAC_SUBST(zlogout)dnl\n\ndnl Do you want dynamically loaded binary modules.\nifdef([dynamic],[undefine([dynamic])])dnl\nAC_ARG_ENABLE(dynamic,\nAS_HELP_STRING([--disable-dynamic],[turn off dynamically loaded binary modules]),\n[dynamic=\"$enableval\"], [dynamic=yes])\n\ndnl Do you want to disable restricted on r* commands\nifdef([restricted-r],[undefine([restricted-r])])dnl\nAH_TEMPLATE([RESTRICTED_R],\n[Undefine this if you don't want to get a restricted shell\n when zsh is exec'd with basename that starts with r.\n By default this is defined.])\nAC_ARG_ENABLE(restricted-r,\nAS_HELP_STRING([--disable-restricted-r],[turn off r* invocation for restricted shell]),\n[if test x$enableval = xyes; then\n  AC_DEFINE(RESTRICTED_R)\nfi],\nAC_DEFINE(RESTRICTED_R)\n)\n\ndnl Do you want to disable use of locale functions\nAH_TEMPLATE([CONFIG_LOCALE],\n[Undefine if you don't want local features.  By default this is defined.])\nAC_ARG_ENABLE([locale],\nAS_HELP_STRING([--disable-locale],[turn off locale features]),\n[if test x$enableval = xyes; then\n  AC_DEFINE(CONFIG_LOCALE)\nfi],\nAC_DEFINE(CONFIG_LOCALE)\n)\n\nifdef([runhelpdir],[undefine([runhelpdir])])dnl\nAC_ARG_ENABLE(runhelpdir,\nAS_HELP_STRING([--enable-runhelpdir=DIR],[the directory in which to install run-help files]),\n[if test x\"$enableval\" = xno; then\n  runhelpdir=\nelse\n  runhelpdir=\"$enableval\"\nfi], [runhelpdir=yes])\nif test x\"$runhelpdir\" = xyes; then\n  runhelpdir=${datadir}/${tzsh_name}/'${VERSION}'/help\nfi\nif test x\"$runhelpdir\" = x; then\n  runhelp=\nelse\n  runhelp=runhelp\nfi\n\nifdef([fndir],[undefine([fndir])])dnl\nAC_ARG_ENABLE(fndir,\nAS_HELP_STRING([--enable-fndir=DIR],[the directory in which to install functions]),\ndnl ${VERSION} to be determined at compile time.\n[if test x$enableval = xyes; then\n  fndir=${datadir}/${tzsh_name}/'${VERSION}'/functions\nelse\n  fndir=\"$enableval\"\nfi], [fndir=${datadir}/${tzsh_name}/'${VERSION}'/functions])\n\nifdef([sitefndir],[undefine([sitefndir])])dnl\nAC_ARG_ENABLE(site-fndir,\nAS_HELP_STRING([--enable-site-fndir=DIR],[same for site functions (not version specific)]),\n[if test x$enableval = xyes; then\n  sitefndir=${datadir}/${tzsh_name}/site-functions\nelse\n  sitefndir=\"$enableval\"\nfi], [sitefndir=${datadir}/${tzsh_name}/site-functions])\n\ndnl Add /usr/local/share/zsh/site-functions if not yet present\ndnl owing to $sitefndir, whether or not explicitly given.\ndnl If not explicitly given, it hasn't been expanded yet.\nif test X$sitefndir = X/usr/local/share/zsh/site-functions || \\\n   test X$sitefndir = Xno\nthen fixed_sitefndir=''\nelif test X$prefix != X/usr/local; then\n  if test X$prefix = XNONE && test X$ac_default_prefix = X/usr/local; then\n    if test X$tzsh_name != Xzsh\n    then fixed_sitefndir=/usr/local/share/zsh/site-functions\n    else fixed_sitefndir=''\n    fi\n  else fixed_sitefndir=/usr/local/share/zsh/site-functions\n  fi\nelif test X$tzsh_name != Xzsh\nthen fixed_sitefndir=/usr/local/share/zsh/site-functions\nelse fixed_sitefndir=''\nfi\n\nifdef([function_subdirs],[undefine([function_subdirs])])\nAC_ARG_ENABLE(function-subdirs,\nAS_HELP_STRING([--enable-function-subdirs],[install functions in subdirectories]))\n\nif test \"x${enable_function_subdirs}\" != x &&\n  test \"x${enable_function_subdirs}\" != xno; then\n  FUNCTIONS_SUBDIRS=yes\nelse\n  FUNCTIONS_SUBDIRS=no\nfi\n\nifdef([additionalfpath],[undefine([additionalfpath])])dnl\nAC_ARG_ENABLE(additional-fpath,\nAS_HELP_STRING([--enable-additional-fpath=DIR],[add directories to default function path]),\n[if test x$enableval = xyes; then\n  additionalfpath=\"\"\nelse\n  additionalfpath=\"${enableval}\"\nfi], [additionalfpath=\"\"])\n\nAC_SUBST(runhelpdir)dnl\nAC_SUBST(runhelp)dnl\nAC_SUBST(additionalfpath)dnl\nAC_SUBST(fndir)dnl\nAC_SUBST(sitefndir)dnl\nAC_SUBST(fixed_sitefndir)dnl\nAC_SUBST(FUNCTIONS_SUBDIRS)dnl\n\ndnl Directories for scripts such as newuser.\n\nifdef([scriptdir],[undefine([scriptdir])])dnl\nAC_ARG_ENABLE(scriptdir,\nAS_HELP_STRING([--enable-scriptdir=DIR],[the directory in which to install scripts]),\ndnl ${VERSION} to be determined at compile time.\n[if test x$enableval = xyes; then\n  scriptdir=${datadir}/${tzsh_name}/'${VERSION}'/scripts\nelse\n  scriptdir=\"$enableval\"\nfi], [scriptdir=${datadir}/${tzsh_name}/'${VERSION}'/scripts])\n\nifdef([sitescriptdir],[undefine([sitescriptdir])])dnl\nAC_ARG_ENABLE(site-scriptdir,\nAS_HELP_STRING([--enable-site-scriptdir=DIR],[same for site scripts (not version specific)]),\n[if test x$enableval = xyes; then\n  sitescriptdir=${datadir}/${tzsh_name}/scripts\nelse\n  sitescriptdir=\"$enableval\"\nfi], [sitescriptdir=${datadir}/${tzsh_name}/scripts])\n\nAC_SUBST(scriptdir)dnl\nAC_SUBST(sitescriptdir)dnl\n\ndnl htmldir is already handled, but if it wasn't set, use\ndnl the standard zsh default.\nif test x$htmldir = x'${docdir}' || test x$htmldir = x; then\n  htmldir='$(datadir)/$(tzsh)/htmldoc'\nfi\n\nAH_TEMPLATE([CUSTOM_PATCHLEVEL],\n[Define to a custom value for the ZSH_PATCHLEVEL parameter])\nAC_ARG_ENABLE(custom-patchlevel,\nAS_HELP_STRING([--enable-custom-patchlevel],[set a custom ZSH_PATCHLEVEL value]),\n[if test x$enableval != x && test x$enableval != xno; then\n  AC_DEFINE_UNQUOTED([CUSTOM_PATCHLEVEL], [\"$enableval\"])\nfi])\n\ndnl Do you want maildir support?\nifdef([maildir_support],[undefine([maildir_support])])dnl\nAH_TEMPLATE([MAILDIR_SUPPORT],\n[Define for Maildir support])\nAC_ARG_ENABLE(maildir-support,\nAS_HELP_STRING([--enable-maildir-support],[enable maildir support in MAIL and MAILPATH]),\n[if test x$enableval = xyes; then\n  AC_DEFINE(MAILDIR_SUPPORT)\nfi])\n\ndnl Do you want to set a maximum function depth?\nifdef([max_function_depth],[undefine([max_function_depth])])dnl\nAH_TEMPLATE([MAX_FUNCTION_DEPTH],\n[Define for function depth limits])\nAC_ARG_ENABLE(max-function-depth,\nAS_HELP_STRING([--enable-max-function-depth=MAX],[limit function depth to MAX, default 500]),\n[if test x$enableval = xyes; then\n  AC_DEFINE(MAX_FUNCTION_DEPTH, 500)\nelif test x$enableval != xno; then\n  AC_DEFINE_UNQUOTED(MAX_FUNCTION_DEPTH, $enableval)\nfi],\n[AC_DEFINE(MAX_FUNCTION_DEPTH, 500)]\n)\n\nifdef([default_readnullcmd],[undefine([default_readnullcmd])])dnl\nAH_TEMPLATE([DEFAULT_READNULLCMD],\n[Define default pager used by readnullcmd])\nAC_ARG_ENABLE(readnullcmd,\nAS_HELP_STRING([--enable-readnullcmd=PAGER],[pager used when READNULLCMD is not set]),\n[if test x$enableval = xyes; then\n  AC_DEFINE(DEFAULT_READNULLCMD,\"more\")\nelif test x$enableval != xno; then\n  AC_DEFINE_UNQUOTED(DEFAULT_READNULLCMD,\"$enableval\")\nfi],\n[AC_DEFINE(DEFAULT_READNULLCMD,\"more\")]\n)\n\ndnl Do you want to look for pcre support?\nAC_ARG_ENABLE(pcre,\nAS_HELP_STRING([--enable-pcre],[enable the search for the pcre2 library (may create run-time library dependencies)]))\n\nAC_ARG_VAR(PCRE_CONFIG, [pathname of pcre2-config if it is not in PATH])\nif test \"x$enable_pcre\" = xyes; then\n  AC_CHECK_PROG([PCRE_CONFIG], pcre2-config, pcre2-config)\n  if test \"x$PCRE_CONFIG\" = x; then\n    enable_pcre=no\n    AC_MSG_WARN([pcre2-config not found: pcre module is disabled.])\n    AC_MSG_NOTICE(\n      [Set PCRE_CONFIG to pathname of pcre2-config if it is not in PATH.])\n  fi\nfi\n\ndnl Do you want to look for capability support?\nAC_ARG_ENABLE(cap,\nAS_HELP_STRING([--enable-cap],[enable the search for POSIX capabilities (may require additional headers to be added by hand)]))\n\n# Default off for licensing reasons\nAC_ARG_ENABLE(gdbm,\nAS_HELP_STRING([--enable-gdbm],[enable the search for the GDBM library (see the zsh/db/gdbm module)]),\n[gdbm=\"$enableval\"], [gdbm=no])\n\ndnl ------------------\ndnl CHECK THE COMPILER\ndnl ------------------\ndnl We want these before the checks, so the checks can modify their values.\ntest -z \"${CFLAGS+set}\"  && CFLAGS=  auto_cflags=1\ntest -z \"${LDFLAGS+set}\" && LDFLAGS= auto_ldflags=1\n\nAC_PROG_CC\n\ndnl Check for large file support.\n\ndnl Gross hack for ReliantUNIX - GCC does not understand getconf options\ndnl For now just disable LFS in this case\ndnl Any takers?\nif test \"$host\" = mips-sni-sysv4 && test -n \"$GCC\"; then\n  : \nelse\n  AC_SYS_LARGEFILE\nfi\n\ndnl if the user hasn't specified CFLAGS, then\ndnl   if compiler is gcc, then use -O2 and some warning flags\ndnl   else use -O\nif test -n \"$auto_cflags\"; then\n  if test \"${enable_zsh_debug}\" = yes; then\n    if test -n \"$GCC\"; then\n      CFLAGS=\"$CFLAGS -Wall -Wmissing-prototypes -ggdb\"\n    else\n      CFLAGS=\"$CFLAGS -g\"\n    fi\n  else\n    if test -n \"$GCC\"; then\n      CFLAGS=\"$CFLAGS -Wall -Wmissing-prototypes -O2\"\n    else\n      CFLAGS=\"$CFLAGS -O\"\n    fi\n  fi\nfi\nif test -n \"$auto_ldflags\"; then\n  case \"${enable_zsh_debug}$host_os\" in\n    yesaix*|yeshpux*|yesnetbsd*|yesopenbsd*) ;;  # \"ld -g\" is not valid on these systems\n    darwin*) LDFLAGS=-Wl,-x ;;\n    yes*)    LDFLAGS=-g ;;\n    *)       LDFLAGS=-s ;;\n  esac\nfi\n\ndnl ----------\ndnl SCO KLUDGE\ndnl ----------\ndnl Sco doesn't define any useful compiler symbol,\ndnl so we will check for sco and define __sco if\ndnl found.\ncase \"$host_os\" in\n  sco*) CFLAGS=\"-D__sco $CFLAGS\" ;;\nesac\n\nsed=':1\n     s/ -s / /g\n     t1\n     s/^ *//\n     s/ *$//'\n\ncase \" $LDFLAGS \" in\n  *\" -s \"*) strip_exeldflags=true strip_libldflags=true\n    LDFLAGS=`echo \" $LDFLAGS \" | sed \"$sed\"` ;;\n  *) strip_exeldflags=false strip_libldflags=false ;;\nesac\n\ncase \" ${EXELDFLAGS+$EXELDFLAGS }\" in\n  \" \") ;;\n  *\" -s \"*) strip_exeldflags=true\n    EXELDFLAGS=`echo \" $EXELDFLAGS \" | sed \"$sed\"` ;;\n  *) strip_exeldflags=false ;;\nesac\n\ncase \" ${LIBLDFLAGS+$LIBLDFLAGS }\" in\n  \" \") ;;\n  *\" -s \"*) strip_libldflags=true\n    LIBLDFLAGS=`echo \" $LIBLDFLAGS \" | sed \"$sed\"` ;;\n  *) strip_libldflags=false ;;\nesac\n\nAC_SUBST(CFLAGS)dnl\nAC_SUBST(LDFLAGS)dnl\nAC_SUBST(EXELDFLAGS)dnl\nAC_SUBST(LIBLDFLAGS)dnl\n\nAC_PROG_CPP                 dnl Figure out how to run C preprocessor.\nAC_C_CONST                  dnl Does compiler support `const'.\n\ndnl Default preprocessing on Mac OS X produces warnings\ndnl Mac OS X 10.6 (darwin10.x.x) does not need this.\ncase \"$host_os\" in\n  darwin[[0-9]].*) CPP=\"$CPP -traditional-cpp\" ;;\nesac\n\nAC_FUNC_ALLOCA              dnl Check how to get `alloca'.\n\ndnl If the compiler supports union initialisation\nAC_CACHE_CHECK(if the compiler supports union initialisation,\nzsh_cv_c_have_union_init,\n[AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[union{void *p;long l;}u={0};]], [[u.l=1;]])],[zsh_cv_c_have_union_init=yes],[zsh_cv_c_have_union_init=no])])\nAH_TEMPLATE([HAVE_UNION_INIT],\n[Define to 1 if the compiler can initialise a union.])\nif test x$zsh_cv_c_have_union_init = xyes; then\n  AC_DEFINE(HAVE_UNION_INIT)\nfi\n\ndnl Checking if the compiler supports variable-length arrays\nAC_CACHE_CHECK(if the compiler supports variable-length arrays,\nzsh_cv_c_variable_length_arrays,\n[AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[int foo(), n;]], [[int i[foo()], a[n+1];]])],[zsh_cv_c_variable_length_arrays=yes],[zsh_cv_c_variable_length_arrays=no])])\nAH_TEMPLATE([HAVE_VARIABLE_LENGTH_ARRAYS],\n[Define to 1 if compiler supports variable-length arrays])\nif test x$zsh_cv_c_variable_length_arrays = xyes; then\n  AC_DEFINE(HAVE_VARIABLE_LENGTH_ARRAYS)\nfi\n\ndnl ------------------\ndnl CHECK FOR PROGRAMS\ndnl ------------------\nAC_PROG_MAKE_SET            dnl Does make define $MAKE\nAC_PROG_INSTALL             dnl Check for BSD compatible `install'\nAC_PROG_AWK                 dnl Check for mawk,gawk,nawk, then awk.\nAC_PROG_LN                  dnl Check for working ln, for \"make install\"\nAC_PROG_LN_S                dnl Use ln -s/ln/cp for \"make install.runhelp\"\nAC_PROG_EGREP               dnl sets $EGREP to grep -E or egrep\nAC_CHECK_PROGS([YODL], [yodl], [: yodl])\n\nYODL_OPTIONS=''\nif test \"x$ac_cv_prog_YODL\" = xyodl; then\n    case `yodl --version` in\n      *\"version 2.\"*) YODL_OPTIONS='-k' ;;\n      *\"version 3.\"*) YODL_OPTIONS='-k -L' ;;\n      *\"version 4.\"*) YODL_OPTIONS='-k -L' ;;\n    esac\nfi\nAC_SUBST(YODL_OPTIONS)\n\nAC_CHECK_PROGS([TEXI2DVI], [texi2dvi], [: texi2dvi])\nAC_CHECK_PROGS([TEXI2PDF], [texi2pdf], [: texi2pdf])\nAC_CHECK_PROGS([TEXI2HTML], [texi2any texi2html], [: texi2html])\n\nif test x\"$TEXI2PDF\" != xtexi2pdf && test x\"$TEXI2DVI\" = xtexi2dvi; then\n  TEXI2PDF='texi2dvi --pdf'\nfi\n\nif test x\"$TEXI2HTML\" = xtexi2any; then\n  TEXI2HTML='texi2any -c TEXI2HTML=1'\n  case `texi2any --version 2>/dev/null | sed -e 's/^.*) *//' -e 1q` in\n    [[1-6]].*) SET_TEXI2ANY_VAR=set_from_init_file ;;\n    *) SET_TEXI2ANY_VAR=texinfo_set_from_init_file ;;\n  esac\nfi\nAC_SUBST(SET_TEXI2ANY_VAR)\n\ncase \"$LC_PAPER\" in\n  ??_US*) PAPERSIZE=us ;;\n  *)      PAPERSIZE=a4 ;;\nesac\nAC_SUBST(PAPERSIZE)\n\ndnl ------------------\ndnl CHECK HEADER FILES\ndnl ------------------\nAC_HEADER_DIRENT\nAC_HEADER_STAT\nAC_HEADER_SYS_WAIT\n\ndnl pcre2-config --cflags may produce a -I output which needs to go into\ndnl CPPFLAGS else configure's preprocessor tests don't pick it up,\ndnl producing a warning.\nif test \"x$enable_pcre\" = xyes; then\n  CPPFLAGS=\"`$PCRE_CONFIG --cflags` $CPPFLAGS\"\n  AC_CHECK_HEADERS([pcre2.h],,,[#define PCRE2_CODE_UNIT_WIDTH 8])\nfi\n\nAC_CHECK_HEADERS(sys/time.h sys/times.h sys/select.h termcap.h termio.h \\\n\t\t termios.h sys/param.h sys/filio.h \\\n\t\t limits.h fcntl.h libc.h sys/utsname.h sys/resource.h \\\n\t\t sys/sysctl.h sys/random.h \\\n\t\t locale.h errno.h stdio.h stdarg.h varargs.h stdlib.h \\\n\t\t unistd.h sys/capability.h \\\n\t\t utmp.h utmpx.h sys/types.h pwd.h grp.h poll.h sys/mman.h \\\n\t\t netinet/in_systm.h langinfo.h wchar.h stddef.h \\\n\t\t sys/stropts.h iconv.h ncurses.h ncursesw/ncurses.h \\\n\t\t ncurses/ncurses.h)\nif test x$dynamic = xyes; then\n  AC_CHECK_HEADERS(dlfcn.h)\n  AC_CHECK_HEADERS(dl.h)\nfi\n\ndnl Some SCO systems cannot include both sys/time.h and sys/select.h\nAH_TEMPLATE([TIME_H_SELECT_H_CONFLICTS],\n[Define if sys/time.h and sys/select.h cannot be both included.])\nif test x$ac_cv_header_sys_time_h = xyes && test x$ac_cv_header_sys_select_h = xyes; then\n  AC_CACHE_CHECK(for conflicts in sys/time.h and sys/select.h,\n  zsh_cv_header_time_h_select_h_conflicts,\n  [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/time.h>\n#include <sys/select.h>]], [[int i;]])],[zsh_cv_header_time_h_select_h_conflicts=no],[zsh_cv_header_time_h_select_h_conflicts=yes])])\n  if test x$zsh_cv_header_time_h_select_h_conflicts = xyes; then\n    AC_DEFINE(TIME_H_SELECT_H_CONFLICTS)\n  fi\nfi\n\nAH_TEMPLATE([GWINSZ_IN_SYS_IOCTL],\n[Define if TIOCGWINSZ is defined in sys/ioctl.h but not in termios.h.])\nif test x$ac_cv_header_termios_h = xyes; then\n  AC_CACHE_CHECK(TIOCGWINSZ in termios.h,\n  zsh_cv_header_termios_h_tiocgwinsz,\n  [AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n#ifdef HAVE_SYS_TYPES_H\n# include <sys/types.h>\n#endif\n#include <termios.h>]], [[int x = TIOCGWINSZ;]])],[zsh_cv_header_termios_h_tiocgwinsz=yes],[zsh_cv_header_termios_h_tiocgwinsz=no])])\nelse\n  zsh_cv_header_termios_h_tiocgwinsz=no\nfi\nif test x$zsh_cv_header_termios_h_tiocgwinsz = xno; then\n  AC_CACHE_CHECK(TIOCGWINSZ in sys/ioctl.h,\n  zsh_cv_header_sys_ioctl_h_tiocgwinsz,\n  [AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n#ifdef HAVE_SYS_TYPES_H\n# include <sys/types.h>\n#endif\n#include <sys/ioctl.h>]], [[int x = TIOCGWINSZ;]])],[zsh_cv_header_sys_ioctl_h_tiocgwinsz=yes],[zsh_cv_header_sys_ioctl_h_tiocgwinsz=no])])\n  if test x$zsh_cv_header_sys_ioctl_h_tiocgwinsz = xyes; then\n    AC_DEFINE(GWINSZ_IN_SYS_IOCTL)\n  fi\nfi\n \nAH_TEMPLATE([WINSIZE_IN_PTEM],\n[Define if your should include sys/stream.h and sys/ptem.h.])\nAC_CACHE_CHECK(for streams headers including struct winsize,\nac_cv_winsize_in_ptem,\n[AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/stream.h>\n#include <sys/ptem.h>]], [[struct winsize wsz]])],[ac_cv_winsize_in_ptem=yes],[ac_cv_winsize_in_ptem=no])])\nif test x$ac_cv_winsize_in_ptem = xyes; then\n  AC_DEFINE(WINSIZE_IN_PTEM)\nfi\n\ndnl -------------------\ndnl CHECK FOR LIBRARIES\ndnl -------------------\n\ndnl On some systems, modules need to be linked against libc explicitly,\ndnl in case they require objects that exist only in the static version\ndnl and might not be compiled into the zsh executable.\ndnl On ReliantUNIX -lc better be the last library, else funny things\ndnl may happen.\nAC_CHECK_LIB(c, printf, [LIBS=\"$LIBS -lc\"])\n\nAC_CHECK_LIB(m, pow)\n\nAC_CHECK_LIB(rt, clock_gettime)\n\ndnl Various features of ncurses depend on having the right header\ndnl (the system's own curses.h may well not be good enough).\ndnl So don't search for ncurses unless we found the header.\nif test x$ac_cv_header_ncurses_h = xyes || test x$ac_cv_header_ncurses_ncurses_h = xyes || test x$ac_cv_header_ncursesw_ncurses_h = xyes; then\n  ncursesw_test=ncursesw\n  ncurses_test=ncurses\nelse\n  ncursesw_test=\n  ncurses_test=\nfi\n\ndnl Prefer BSD termcap library to SysV curses library, except on certain\ndnl SYSV-derived systems.  However, if we find terminfo and termcap\ndnl stuff in the same library we will use that; typically this\ndnl is ncurses or curses.\ndnl On pre-11.11 HPUX, Hcurses is reported to work better than curses.\ndnl Prefer ncurses to curses on all systems.  tinfo isn't very common now.\nAC_ARG_WITH(term-lib,\nAS_HELP_STRING([--with-term-lib=LIBS],[search space-separated LIBS for terminal handling]),\n[if test \"x$withval\" != xno && test \"x$withval\" != x ; then\n  termcap_curses_order=\"$withval\"\n  AC_SEARCH_LIBS(tigetstr, [$termcap_curses_order])\nelse\n  termcap_curses_order=\"$ncursesw_test $ncurses_test tinfow tinfo termcap curses\"\nfi],\n[case \"$host_os\" in\n  solaris*)\n   termcap_curses_order=\"$ncursesw_test $ncurses_test curses termcap\" ;;\n  hpux10.*|hpux11.*)\n   DL_EXT=\"${DL_EXT=sl}\"\n   termcap_curses_order=\"Hcurses $ncursesw_test $ncurses_test curses termcap\" ;;\n  *)\n   termcap_curses_order=\"$ncursesw_test $ncurses_test tinfow tinfo termcap curses\" ;;\nesac])dnl\n\nAH_TEMPLATE([ZSH_NO_XOPEN],\n[Define if _XOPEN_SOURCE_EXTENDED should not be defined to avoid clashes])\nAC_CACHE_CHECK(if _XOPEN_SOURCE_EXTENDED should not be defined,\nzsh_cv_no_xopen,\n[[case \"$host_os\" in\n  *freebsd5*|*freebsd6.[012]*|*aix*)\n  zsh_cv_no_xopen=yes\n  ;;\n  *)\n  zsh_cv_no_xopen=no\n  ;;\nesac]])\nif test x$zsh_cv_no_xopen = xyes; then\n  AC_DEFINE(ZSH_NO_XOPEN)\nfi\n\ndnl Check for tigetflag (terminfo) before tgetent (termcap).\ndnl That's so that on systems where termcap and [n]curses are\ndnl both available and both contain termcap functions, while\ndnl only [n]curses contains terminfo functions, we only link against\ndnl [n]curses.\nLIBS_save_pre_term=\"$LIBS\"\nAC_SEARCH_LIBS(tigetstr, [$termcap_curses_order])\nAC_SEARCH_LIBS(tigetflag, [$termcap_curses_order])\nAC_SEARCH_LIBS(tgetent, [$termcap_curses_order],\n  true,\n  AC_MSG_FAILURE([\"No terminal handling library was found on your system.\nThis is probably a library called 'curses' or 'ncurses'.  You may\nneed to install a package called 'curses-devel' or 'ncurses-devel' on your\nsystem.\"], 255))\nAC_CHECK_HEADERS(curses.h, [],\n[AC_CACHE_CHECK(for Solaris 8 curses.h mistake, ac_cv_header_curses_solaris,\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <curses.h>]], [[]])],[ac_cv_header_curses_h=yes\nac_cv_header_curses_solaris=yes],[ac_cv_header_curses_h=no\nac_cv_header_curses_solaris=no]))\nif test x$ac_cv_header_curses_solaris = xyes; then\nAC_DEFINE(HAVE_CURSES_H)\nfi])\n\ndnl If our terminal library is not ncurses, don't try including\ndnl any ncurses headers.\nAC_CACHE_CHECK(if we need to ignore ncurses, zsh_cv_ignore_ncurses,\n[case $LIBS in\n  *-lncurses*)\n  zsh_cv_ignore_ncurses=no\n  ;;\n  *)\n    dnl The lack of -lncurses in the $LIBS might be the result of passing\n    dnl --with-term-lib=^ncurses option. To address this, a test for the tgetent\n    dnl and other functions is ran here, possibly for the second time, just to\n    dnl ensure that the ncurses library doesn't have them.\n    LIBS_save=\"$LIBS\"\n    dnl Remember (the values are used later, around line 3005) and remove the cache\n    ac_cv_search_tigetstr_SAVE=\"$ac_cv_search_tigetstr\"\n    ac_cv_search_tigetnum_SAVE=\"$ac_cv_search_tigetnum\"\n    ac_cv_search_tigetflag_SAVE=\"$ac_cv_search_tigetflag\"\n    ac_cv_search_tgetent_SAVE=\"$ac_cv_search_tgetent\"\n    unset ac_cv_search_tigetstr ac_cv_search_tigetnum ac_cv_search_tigetflag ac_cv_search_tgetent\n    LIBS=\"$LIBS_save_pre_term\"\n\n    dnl Run the checks for all four used terminal functions\n    AC_SEARCH_LIBS(tigetstr, [ncursesw ncurses curses])\n    AC_SEARCH_LIBS(tigetnum, [ncursesw ncurses curses])\n    AC_SEARCH_LIBS(tigetflag, [ncursesw ncurses curses])\n    AC_SEARCH_LIBS(tgetent, [ncursesw ncurses curses])\n    LIBS_result=\"$LIBS\"\n\n    LIBS=\"$LIBS_save\"\n    dnl Restore the cache\n    ac_cv_search_tigetstr=\"$ac_cv_search_tigetstr_SAVE\"\n    ac_cv_search_tigetnum=\"$ac_cv_search_tigetnum_SAVE\"\n    ac_cv_search_tigetflag=\"$ac_cv_search_tigetflag_SAVE\"\n    ac_cv_search_tgetent=\"$ac_cv_search_tgetent_SAVE\"\n\n    case $LIBS_result in\n      *-lncurses*|*-lcurses*)\n        dnl Yes we need to ignore ncurses, its tgetent or tigetflag might\n        dnl conflict with the one from the selected terminal library\n        zsh_cv_ignore_ncurses=yes\n        ;;\n      *)\n        dnl If the tgetent nor tigetflag weren't found in the libncurses*.so, then\n        dnl there will be no conflict with the other terminal library selected (e.g.\n        dnl libtinfo) and it's possible to link ncurses provided that it is working\n        dnl - it is here verified that it has initscr() function to check that\n        AC_SEARCH_LIBS(initscr, [ncursesw ncurses curses])\n        case $LIBS in\n          *-lncurses*|*-lcurses*)\n            dnl No need to ignore curses - it is working and it doesn't\n            dnl have tgetent nor tigetflag\n            zsh_cv_ignore_ncurses=no\n          ;;\n          *)\n            zsh_cv_ignore_ncurses=yes\n          ;;\n        esac\n    esac\n  ;;\nesac])\n\nAC_SEARCH_LIBS(getpwnam, nsl)\n\nif test \"x$dynamic\" = xyes; then\n  AC_CHECK_LIB(dl, dlopen)\nfi\n\nif test x$enable_cap = xyes; then\n  AC_CHECK_LIB(cap, cap_get_proc)\nfi\n\nAC_CHECK_LIB(socket, socket)\nAC_SEARCH_LIBS(gethostbyname2, bind)\n\ncase $LIBS in\n  *-lbind*)\n  AC_CHECK_HEADERS(bind/netdb.h)\n  ;;\nesac\n\ndnl ---------------\ndnl CHECK FOR ICONV\ndnl ---------------\n\ndnl Find iconv. It may be in libiconv and may be iconv() or libiconv()\nif test \"x$ac_cv_header_iconv_h\" = \"xyes\"; then\n  AC_CHECK_FUNC(iconv, ac_found_iconv=yes, ac_found_iconv=no)\n  if test \"x$ac_found_iconv\" = \"xno\"; then\n    AC_CHECK_LIB(iconv, iconv, ac_found_iconv=yes)\n    if test \"x$ac_found_iconv\" = \"xno\"; then\n      AC_CHECK_LIB(iconv, libiconv, ac_found_iconv=yes)\n    fi\n    if test \"x$ac_found_iconv\" != \"xno\"; then\n      LIBS=\"-liconv $LIBS\"\n    fi\n  else\n    dnl Handle case where there is a native iconv but iconv.h is from libiconv\n    AC_CHECK_DECL(_libiconv_version,\n      [ AC_CHECK_LIB(iconv, libiconv, LIBS=\"-liconv $LIBS\") ],,\n      [ #include <iconv.h> ])\n  fi\nfi\nAH_TEMPLATE([ICONV_FROM_LIBICONV],\n[Define to 1 if iconv() is linked from libiconv])\nif test \"x$ac_found_iconv\" = xyes; then\n  AC_DEFINE(HAVE_ICONV, 1, [Define if you have the iconv() function.])\n  AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <iconv.h>]], [[int myversion = _libiconv_version]])],[AC_DEFINE(ICONV_FROM_LIBICONV)],[])\nfi\n\ndnl Check if iconv uses const in prototype declaration\nif test \"x$ac_found_iconv\" = \"xyes\"; then\n  AC_CACHE_CHECK(for iconv declaration, ac_cv_iconv_const,\n    [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stdlib.h>\n        #include <iconv.h>]],\n        [[#ifdef __cplusplus\n          \"C\"\n          #endif\n          #if defined(__STDC__) || defined(__cplusplus)\n          size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);\n          #else\n          size_t iconv();\n          #endif]])],\n      [ac_cv_iconv_const=],\n      [ac_cv_iconv_const=const])])\n  AC_DEFINE_UNQUOTED([ICONV_CONST], $ac_cv_iconv_const,\n    [Define as const if the declaration of iconv() needs const.])\nfi\n\ndnl ---------------------\ndnl CHECK TERMCAP LIBRARY\ndnl ---------------------\ndnl Checks for external variable ospeed in the termcap library.\nAC_CACHE_CHECK(if an include file defines ospeed,\nzsh_cv_decl_ospeed_include_defines,\n[AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n#if HAVE_TERMIOS_H\n#include <termios.h>\n#endif\n#if HAVE_TERMCAP_H\n#include <termcap.h>\n#endif]], [[ospeed = 0;]])],[zsh_cv_decl_ospeed_include_defines=yes],[zsh_cv_decl_ospeed_include_defines=no])])\n\nif test x$zsh_cv_decl_ospeed_include_defines = xno; then\n  AC_CACHE_CHECK(if you must define ospeed,\n  zsh_cv_decl_ospeed_must_define,\n  [AC_LINK_IFELSE([AC_LANG_PROGRAM([[]], [[extern short ospeed; ospeed = 0;]])],[zsh_cv_decl_ospeed_must_define=yes],[zsh_cv_decl_ospeed_must_define=no])])\nfi\n\nAH_TEMPLATE([HAVE_OSPEED],\n[Define to 1 if your termcap library has the ospeed variable])\nAH_TEMPLATE([MUST_DEFINE_OSPEED],\n[Define to 1 if you have ospeed, but it is not defined in termcap.h])\nif test x$zsh_cv_decl_ospeed_include_defines = xyes; then\n  AC_DEFINE(HAVE_OSPEED)\nelif test x$zsh_cv_decl_ospeed_must_define = xyes; then\n  AC_DEFINE(HAVE_OSPEED)\n  AC_DEFINE(MUST_DEFINE_OSPEED)\nfi\n\nif test x$gdbm != xno; then\n  AC_CHECK_HEADERS(gdbm.h)\n  AC_CHECK_LIB(gdbm, gdbm_open)\nfi\n\nAC_CHECK_HEADERS(sys/xattr.h)\n\ndnl --------------\ndnl CHECK TYPEDEFS\ndnl --------------\n\nAC_TYPE_PID_T\nAC_TYPE_OFF_T\nAC_CHECK_TYPE(ino_t, unsigned long)\nAC_TYPE_MODE_T\nAC_TYPE_UID_T\nAC_TYPE_SIZE_T\n\ndnl ------------------------------------------------\ndnl Check size of long and try to find a 64-bit type\ndnl ------------------------------------------------\ndnl AC_CHECK_SIZEOF is no good, because we need the result here,\ndnl and that doesn't seem to define a shell parameter.\nAC_CACHE_CHECK(if long is 64 bits, zsh_cv_long_is_64_bit,\n[AC_RUN_IFELSE([AC_LANG_SOURCE([[int main() { return sizeof(long) < 8; }]])],[zsh_cv_long_is_64_bit=yes],[zsh_cv_long_is_64_bit=no],[zsh_cv_long_is_64_bit=no])])\n\nAH_TEMPLATE([ino_t],\n[Define to `unsigned long' if <sys/types.h> doesn't define.])\nAH_TEMPLATE([LONG_IS_64_BIT],\n[Definitions used when a long is less than eight byte, to try to\n provide some support for eight byte operations.\n\n Note that ZSH_64_BIT_TYPE, OFF_T_IS_64_BIT, INO_T_IS_64_BIT do *not* get\n defined if long is already 64 bits, since in that case no special handling\n is required.\n\n Define to 1 if long is 64 bits])\nAH_TEMPLATE([ZSH_64_BIT_TYPE],\n[Define to a 64 bit integer type if there is one, but long is shorter.])\nAH_TEMPLATE([ZSH_64_BIT_UTYPE],\n[Define to an unsigned variant of ZSH_64_BIT_TYPE if that is defined.])\nAH_TEMPLATE([OFF_T_IS_64_BIT],\n[Define to 1 if off_t is 64 bit (for large file support)])\nAH_TEMPLATE([INO_T_IS_64_BIT],\n[Define to 1 if ino_t is 64 bit (for large file support).])\nif test x$zsh_cv_long_is_64_bit = xyes; then\n  AC_DEFINE(LONG_IS_64_BIT)\nelse\n  AC_CACHE_CHECK(if off_t is 64 bit, zsh_cv_off_t_is_64_bit,\n  [AC_RUN_IFELSE([AC_LANG_SOURCE([[\n#include <sys/types.h>\n\nint main() { return sizeof(off_t) < 8; }\n]])],[zsh_cv_off_t_is_64_bit=yes],[zsh_cv_off_t_is_64_bit=no],[zsh_cv_off_t_is_64_bit=no])])\n  if test x$zsh_cv_off_t_is_64_bit = xyes; then\n    AC_DEFINE(OFF_T_IS_64_BIT)\n  fi\n\n  AC_CACHE_CHECK(if ino_t is 64 bit, zsh_cv_ino_t_is_64_bit,\n  [AC_RUN_IFELSE([AC_LANG_SOURCE([[\n#include <sys/types.h>\n\nint main() { return sizeof(ino_t) < 8; }\n]])],[zsh_cv_ino_t_is_64_bit=yes],[zsh_cv_ino_t_is_64_bit=no],[zsh_cv_ino_t_is_64_bit=no])])\n  if test x$zsh_cv_ino_t_is_64_bit = xyes; then\n    AC_DEFINE(INO_T_IS_64_BIT)\n  fi\n\n  if test x$enable_largefile != xno -o x$zsh_cv_off_t_is_64_bit = xyes \\\n  -o $zsh_cv_ino_t_is_64_bit = yes; then\n    AC_CACHE_CHECK(if compiler has a 64 bit type, zsh_cv_64_bit_type,\n    [zsh_64_BIT_TYPE(long long, zsh_cv_64_bit_type)\n     if test \"$zsh_cv_64_bit_type\" = no; then\n       zsh_64_BIT_TYPE(quad_t, zsh_cv_64_bit_type)\n     fi\n     if test \"$zsh_cv_64_bit_type\" = no; then\n       zsh_64_BIT_TYPE(__int64_t, zsh_cv_64_bit_type)\n     fi\n     dnl As a last resort, if we know off_t has 64 bits, use that as\n     dnl the 64-bit integer type.  I don't dare try ino_t since there's\n     dnl probably nothing to stop that being unsigned.\n     if test \"$zsh_cv_64_bit_type\" = no &&\n        test \"$zsh_cv_off_t_is_64_bit\" = yes; then\n       zsh_64_BIT_TYPE(off_t, zsh_cv_64_bit_type)\n     fi])\n    if test \"$zsh_cv_64_bit_type\" != no; then\n      AC_DEFINE_UNQUOTED(ZSH_64_BIT_TYPE, $zsh_cv_64_bit_type)\n\n      dnl Handle cases where unsigned type cannot be simply\n      dnl `unsigned ZSH_64_BIT_TYPE'.  More tests may be required.\n      AC_CACHE_CHECK(for a corresponding unsigned 64 bit type,\n      zsh_cv_64_bit_utype,\n      [zsh_64_BIT_TYPE(unsigned $zsh_cv_64_bit_type, zsh_cv_64_bit_utype,\n       force)\n       if test \"$zsh_cv_64_bit_utype\" = no; then\n         zsh_64_BIT_TYPE(__uint64_t, zsh_cv_64_bit_utype)\n       fi])\n      if test \"$zsh_cv_64_bit_utype\" != no; then\n        AC_DEFINE_UNQUOTED(ZSH_64_BIT_UTYPE, $zsh_cv_64_bit_utype)\n      fi\n    fi\n  fi\nfi\nAH_TEMPLATE([ZLONG_IS_LONG_LONG],\n[Define to 1 if the zlong type uses long long int.])\nAH_TEMPLATE([ZLONG_IS_LONG_64],\n[Define to 1 if the zlong type uses 64-bit long int.])\nif test \"$zsh_cv_64_bit_type\" = \"long long\"; then\n  dnl Remember this so we can get (s)printf output right.\n  AC_DEFINE(ZLONG_IS_LONG_LONG)\nelse\n  if test \"$zsh_cv_64_bit_type\" = \"long\"; then\n      AC_DEFINE(ZLONG_IS_LONG_64)\n  fi\nfi\n\ndnl We'll blithely assume (f)printf supports the same types as sprintf.\nAC_CACHE_CHECK(for %lld printf support, zsh_cv_printf_has_lld,\n[AC_RUN_IFELSE([AC_LANG_SOURCE([[#include <stdio.h>\n#include <string.h>\nint main(int argc, char **argv)\n{\n   long long foo = ((long long)0xdead << 40) | 0xf00d;\n   char buf[80];\n   sprintf(buf, \"before%lldafter\", foo);\n   if (!strcmp(buf, \"before62677660341432333after\")) {\n      return 0;\n   }\n   return 1;\n}\n]])],[zsh_cv_printf_has_lld=yes],[zsh_cv_printf_has_lld=no],[zsh_cv_printf_has_lld=no])])\nAH_TEMPLATE(PRINTF_HAS_LLD,\n[Define to 1 if printf and sprintf support %lld for long long.])\nif test x$zsh_cv_printf_has_lld = xyes; then\n  AC_DEFINE(PRINTF_HAS_LLD)\nfi\n\ndnl Check for sigset_t.  Currently I'm looking in\ndnl <sys/types.h> and <signal.h>.  Others might need\ndnl to be added.\nAC_CACHE_CHECK(for sigset_t, zsh_cv_type_sigset_t,\n[AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n#include <signal.h>]], [[sigset_t tempsigset;]])],[zsh_cv_type_sigset_t=yes],[zsh_cv_type_sigset_t=no])])\nAH_TEMPLATE([sigset_t],\n[Define to `unsigned int' if <sys/types.h> or <signal.h> doesn't define])\nif test x$zsh_cv_type_sigset_t = xno; then\n  AC_DEFINE(sigset_t, unsigned int)\nfi\n\ndnl check structures for high resolution timestamps\nAC_CHECK_MEMBERS([struct stat.st_atim.tv_nsec,\n                  struct stat.st_atimespec.tv_nsec,\n                  struct stat.st_atimensec,\n                  struct stat.st_mtim.tv_nsec,\n                  struct stat.st_mtimespec.tv_nsec,\n                  struct stat.st_mtimensec,\n                  struct stat.st_ctim.tv_nsec,\n                  struct stat.st_ctimespec.tv_nsec,\n                  struct stat.st_ctimensec])\n\ndnl Check for struct timezone since some old SCO versions do not define it\nzsh_TYPE_EXISTS([\n#define _GNU_SOURCE 1\n#ifdef HAVE_SYS_TIME_H\n# include <sys/time.h>\n#endif\n], struct timezone)\n\ndnl Check for struct timespec since POSIX only gained it in 2008\nzsh_TYPE_EXISTS([\n#define _GNU_SOURCE 1\n#ifdef HAVE_SYS_TIME_H\n# include <sys/time.h>\n#endif\n], struct timespec)\n\ndnl Check for utmp structures, for watch\nzsh_TYPE_EXISTS([\n#ifdef HAVE_SYS_TYPES_H\n# include <sys/types.h>\n#endif\n#ifdef HAVE_UTMP_H\n# include <utmp.h>\n#endif\n], struct utmp)\nzsh_TYPE_EXISTS([\n#ifdef HAVE_SYS_TYPES_H\n# include <sys/types.h>\n#endif\n#ifdef HAVE_UTMPX_H\n# include <utmpx.h>\n#endif\n], struct utmpx)\n\ndnl Check contents of utmp structures\nzsh_STRUCT_MEMBER([\n#ifdef HAVE_SYS_TYPES_H\n# include <sys/types.h>\n#endif\n#ifdef HAVE_UTMP_H\n# include <utmp.h>\n#endif\n], struct utmp, ut_host)\nzsh_STRUCT_MEMBER([\n#ifdef HAVE_SYS_TYPES_H\n# include <sys/types.h>\n#endif\n#ifdef HAVE_UTMPX_H\n# include <utmpx.h>\n#endif\n], struct utmpx, ut_host)\nzsh_STRUCT_MEMBER([\n#ifdef HAVE_SYS_TYPES_H\n# include <sys/types.h>\n#endif\n#ifdef HAVE_UTMPX_H\n# include <utmpx.h>\n#endif\n], struct utmpx, ut_xtime)\nzsh_STRUCT_MEMBER([\n#ifdef HAVE_SYS_TYPES_H\n# include <sys/types.h>\n#endif\n#ifdef HAVE_UTMPX_H\n# include <utmpx.h>\n#endif\n], struct utmpx, ut_tv)\n\ndnl Check for inode numbers in directory entry structures\nzsh_STRUCT_MEMBER([\n#ifdef HAVE_SYS_TYPES_H\n# include <sys/types.h>\n#endif\n#ifdef HAVE_DIRENT_H\n# include <dirent.h>\n#endif\n], struct dirent, d_ino)\nzsh_STRUCT_MEMBER([\n#ifdef HAVE_SYS_TYPES_H\n# include <sys/types.h>\n#endif\n#ifdef HAVE_DIRENT_H\n# include <dirent.h>\n#endif\n], struct dirent, d_stat)\nzsh_STRUCT_MEMBER([\n#ifdef HAVE_SYS_TYPES_H\n# include <sys/types.h>\n#endif\n#ifdef HAVE_SYS_NDIR_H\n# include <sys/ndir.h>\n#endif\n#ifdef HAVE_SYS_DIR_H\n# include <sys/dir.h>\n#endif\n#ifdef HAVE_NDIR_H\n# include <ndir.h>\n#endif\n], struct direct, d_ino)\nzsh_STRUCT_MEMBER([\n#ifdef HAVE_SYS_TYPES_H\n# include <sys/types.h>\n#endif\n#ifdef HAVE_SYS_NDIR_H\n# include <sys/ndir.h>\n#endif\n#ifdef HAVE_SYS_DIR_H\n# include <sys/dir.h>\n#endif\n#ifdef HAVE_NDIR_H\n# include <ndir.h>\n#endif\n], struct direct, d_stat)\n\ndnl Check IPv6 socket address structure type\nzsh_STRUCT_MEMBER([\n#ifdef HAVE_SYS_TYPES_H\n# include <sys/types.h>\n#endif\n#include <netinet/in.h>\n], struct sockaddr_in6, sin6_scope_id)\n\ndnl Check for h_errno external variable\nAH_TEMPLATE([USE_LOCAL_H_ERRNO],\n[Define to 1 if h_errno is not defined by the system.])\nAC_CACHE_CHECK(if we need our own h_errno,\n  zsh_cv_decl_h_errno_use_local,\n  [AC_LINK_IFELSE([AC_LANG_PROGRAM([[]], [[extern int h_errno; h_errno = 0;]])],[zsh_cv_decl_h_errno_use_local=no],[zsh_cv_decl_h_errno_use_local=yes])])\n\nif test x$zsh_cv_decl_h_errno_use_local = xyes; then\n  AC_DEFINE(USE_LOCAL_H_ERRNO)\nfi\n\ndnl ---------------\ndnl CHECK FUNCTIONS\ndnl ---------------\n\ndnl need to integrate this function\ndnl AC_FUNC_STRFTIME\n\nAC_CHECK_FUNCS(strftime strptime mktime timelocal \\\n\t       difftime gettimeofday clock_gettime \\\n\t       select poll \\\n\t       readlink faccessx fchdir ftruncate \\\n\t       fstat lstat lchown fchown fchmod \\\n\t       fpurge fseeko ftello \\\n\t       mkfifo _mktemp mkstemp \\\n\t       waitpid wait3 \\\n\t       sigqueue \\\n\t       killpg setpgid setpgrp tcsetpgrp tcgetattr nice \\\n\t       gethostname gethostbyname2 getipnodebyname \\\n\t       inet_aton inet_pton inet_ntop \\\n\t       getlogin getpwent getpwnam getpwuid getgrgid getgrnam \\\n\t       initgroups \\\n\t       setuid seteuid setreuid setresuid setsid \\\n\t       setgid setegid setregid setresgid \\\n\t       memcpy memmove strstr strerror strtoul \\\n\t       getrlimit getrusage \\\n\t       setlocale \\\n\t       isblank iswblank \\\n\t       uname \\\n\t       signgam tgamma \\\n\t       log2 \\\n\t       scalbn \\\n\t       putenv getenv setenv unsetenv \\\n\t       brk sbrk \\\n\t       pathconf sysconf \\\n\t       tgetent tigetflag tigetnum tigetstr setupterm initscr resize_term \\\n\t       getcchar setcchar waddwstr wget_wch win_wch use_default_colors \\\n\t       nl_langinfo \\\n\t       erand48 open_memstream \\\n\t       posix_openpt \\\n\t       wctomb iconv \\\n\t       grantpt unlockpt ptsname \\\n\t       htons ntohs \\\n\t       regcomp regexec regerror regfree \\\n\t       gdbm_open getxattr \\\n\t       realpath canonicalize_file_name \\\n\t       symlink getcwd \\\n\t       cygwin_conv_path \\\n\t       nanosleep \\\n\t       srand_deterministic \\\n\t       getrandom arc4random_buf \\\n\t       setutxent getutxent endutxent getutent)\nAC_FUNC_STRCOLL\n\n# isinf() and isnan() can exist as either functions or macros.\nAH_TEMPLATE([HAVE_ISINF],\n  [Define to 1 if you have the `isinf' macro or function.])\nAC_MSG_CHECKING([for isinf])\nAC_LINK_IFELSE([AC_LANG_SOURCE(\n[[#include <math.h>\nint main () { return (isinf(1.0) != 0); }]])],\n  [AC_MSG_RESULT([yes])\n   AC_DEFINE([HAVE_ISINF])],\n  [AC_MSG_RESULT([no])])\n\nAH_TEMPLATE([HAVE_ISNAN],\n  [Define to 1 if you have the `isnan' macro or function.])\nAC_MSG_CHECKING([for isnan])\nAC_LINK_IFELSE([AC_LANG_SOURCE([[\n#include <math.h>\nint main () { return (isnan(1.0) != 0); }]])],\n  [AC_MSG_RESULT([yes])\n   AC_DEFINE([HAVE_ISNAN])],\n  [AC_MSG_RESULT([no])])\n\nAH_TEMPLATE([REALPATH_ACCEPTS_NULL],\n[Define if realpath() accepts NULL as its second argument.])\nAC_CACHE_CHECK([if realpath accepts NULL],\nzsh_cv_func_realpath_accepts_null,\n[AC_RUN_IFELSE([AC_LANG_PROGRAM([\n#include <stdlib.h>\n#include <limits.h>\n],[\nreturn(!realpath(\"/\", (char*)0));\n])],\n[zsh_cv_func_realpath_accepts_null=yes],\n[zsh_cv_func_realpath_accepts_null=no],\n[zsh_cv_func_realpath_accepts_null=$ac_cv_func_canonicalize_file_name])])\nif test x$zsh_cv_func_realpath_accepts_null = xyes; then\n  AC_DEFINE(REALPATH_ACCEPTS_NULL)\nfi\n\nif test x$enable_pcre = xyes; then\n  LIBS=\"`$PCRE_CONFIG --libs8` $LIBS\"\n  AC_CHECK_FUNCS(pcre2_compile_8)\nfi\n\nif test x$enable_cap = xyes; then\n  AC_CHECK_FUNCS(cap_get_proc)\nfi\n\ndnl  Check if tgetent accepts NULL (and will allocate its own termcap buffer)\ndnl  Some termcaps reportedly accept a zero buffer, but then dump core\ndnl  in tgetstr().\ndnl  Under Cygwin test program crashes but exit code is still 0. So,\ndnl  we test for a file that porgram should create\nAH_TEMPLATE([TGETENT_ACCEPTS_NULL],\n[Define to 1 if tgetent() accepts NULL as a buffer.])\nAC_CACHE_CHECK(if tgetent accepts NULL,\nzsh_cv_func_tgetent_accepts_null,\n[AC_RUN_IFELSE([AC_LANG_SOURCE([[\n#include <fcntl.h>\nint tgetent(char *, char *);\nchar *tgetstr(char *, char **);\nint main()\n{\n    char buf[4096];\n    int r1 = tgetent(buf, \"vt100\");\n    int r2 = tgetent((char*)0,\"vt100\");\n    if (r1 >= 0 && r1 == r2) {\n        char tbuf[1024], *u;\n        u = tbuf;\n    \ttgetstr(\"cl\", &u);\n\tcreat(\"conftest.tgetent\", 0640);\n    }\n    return((r1 != r2) || r2 == -1);\n}\n]])],[if test -f conftest.tgetent; then\n    zsh_cv_func_tgetent_accepts_null=yes\n  else\n    zsh_cv_func_tgetent_accepts_null=no\n  fi],[zsh_cv_func_tgetent_accepts_null=no],[zsh_cv_func_tgetent_accepts_null=no])])\nif test x$zsh_cv_func_tgetent_accepts_null = xyes; then\n  AC_DEFINE(TGETENT_ACCEPTS_NULL)\nfi\nAC_CACHE_CHECK(if tgetent returns 0 on success,\nzsh_cv_func_tgetent_zero_success,\n[AC_RUN_IFELSE([AC_LANG_SOURCE([[\n#include <fcntl.h>\nint tgetent(char *, char*);\nchar *tgetstr(char *, char **);\nint main()\n{\n    char buf[4096];\n    int r1 = tgetent(buf, \"!@#$%^&*\");\n    int r2 = tgetent(buf, \"vt100\");\n    if (r1 < 0 && r2 == 0) {\n        char tbuf[1024], *u;\n        u = tbuf;\n    \ttgetstr(\"cl\", &u);\n\tcreat(\"conftest.tgetent0\", 0640);\n    }\n    return(r1 == r2);\n}\n]])],[if test -f conftest.tgetent0; then\n    zsh_cv_func_tgetent_zero_success=yes\n  else\n    zsh_cv_func_tgetent_zero_success=no\n  fi],[zsh_cv_func_tgetent_zero_success=no],[zsh_cv_func_tgetent_zero_success=no])])\nAH_TEMPLATE([TGETENT_SUCCESS],\n[Define to what tgetent() returns on success (0 on HP-UX X/Open curses).])\nif test x$zsh_cv_func_tgetent_zero_success = xyes; then\n  AC_DEFINE(TGETENT_SUCCESS, 0)\nelse\n  AC_DEFINE(TGETENT_SUCCESS, 1)\nfi\n\nAC_FUNC_MMAP\nif test x$ac_cv_func_mmap_fixed_mapped = xyes; then\n  AC_CHECK_FUNCS(munmap msync)\nfi\n\nif test x$ac_cv_func_setpgrp = xyes; then\n  AC_FUNC_GETPGRP\nelse\n  dnl If there is no setpgrp, the test for getpgrp(void) will fail\n  dnl because the program will not compile.  However, in that case\n  dnl we can be reasonably confident we are not dealing with a\n  dnl Berkeleyesque system, so assume getpgrp does take void.\n  ac_cv_func_getpgrp_void=yes\n  AC_DEFINE(GETPGRP_VOID)\nfi\n\nif test x$dynamic = xyes; then\n  AC_CHECK_FUNCS(dlopen dlerror dlsym dlclose load loadquery loadbind unload \\\n\t\tshl_load shl_unload shl_findsym)\nfi\n\nAH_TEMPLATE([XATTR_EXTRA_ARGS],\nDefine if getxattr() etc. require additional MacOS-style arguments)\nif test x$ac_cv_func_getxattr = xyes && test x$ac_cv_header_sys_xattr_h = xyes\nthen\n  AC_CACHE_CHECK(if getxattr etc. are Linux-like,\n  zsh_cv_getxattr_linux,\n  [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n#include <sys/xattr.h>]],\n  [[\n  (void)listxattr(\"\", 0, 0);\n  (void)getxattr(\"\", \"\", 0, 0);\n  (void)setxattr(\"\", \"\", \"\", 0, 0);\n  (void)removexattr(\"\", \"\");\n  ]])],\n  [zsh_cv_getxattr_linux=yes],\n  [zsh_cv_getxattr_linux=no])])\n\n  if test x$zsh_cv_getxattr_linux != xyes; then\n    AC_CACHE_CHECK(if getxattr etc. are MAC-like,\n    zsh_cv_getxattr_mac,\n    [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n#include <sys/xattr.h>]],\n    [[(void)listxattr(\"\", 0, 0, 0);\n    (void)getxattr(\"\", \"\", 0, 0, 0, 0);\n    (void)setxattr(\"\", \"\", \"\", 0, 0, 0);\n    (void)removexattr(\"\", \"\", 0);]])],\n    [zsh_cv_getxattr_mac=yes],\n    [zsh_cv_getxattr_mac=no])])\n\n    if test x$zsh_cv_getxattr_mac = xyes; then\n      AC_DEFINE(XATTR_EXTRA_ARGS)\n    fi\n  fi\nfi\n\nAC_CACHE_CHECK(if getxattr etc. are usable,\nzsh_cv_use_xattr,\n[if test x$zsh_cv_getxattr_linux = xyes || test x$zsh_cv_getxattr_mac = xyes\nthen\nzsh_cv_use_xattr=yes\nelse\nzsh_cv_use_xattr=no\nfi])\n\ndnl We don't want to use setenv(3) on El Capitan or older OS X because it\ndnl removes a leading '=' from the value of the environment variable\nAH_TEMPLATE([SETENV_MANGLES_EQUAL],\n[Define to 1 if setenv removes a leading =])\ncase $host_os in\n  darwin1[0-5]*) AC_DEFINE(SETENV_MANGLES_EQUAL) ;;\nesac\n\ndnl Where is <signal.h> located?  Needed as input for signals.awk\nAC_CACHE_CHECK(where signal.h is located, zsh_cv_path_signal_h,\n[dnl Look at the output from the preprocessor.\ndnl We should get lines of the form `# 1 \"/usr/include/signal.h\"'\ndnl The following assumes the real definitions are in a file which\ndnl contains the name `sig'; we could relax this if necessary,\ndnl but then you can get a rather long list of files to test.\ndnl The backslash substitution is to persuade cygwin to cough up\ndnl slashes rather than doubled backslashes in the path.\necho \"#include <signal.h>\" > nametmp.c\nsigfile_list=\"`$CPP $CPPFLAGS nametmp.c |\nsed -n -e 's/^#line[ \t].*\\\"\\(.*\\)\\\"/\\1/p' \\\n       -e 's/^#[ \t].*\\\"\\(.*\\)\\\"/\\1/p' |\nsed 's/\\\\\\\\\\\\\\\\/\\//g' |\n$AWK '{ if ($1 ~ /sig/) files[[$1]] = $1 }\n  END { for (var in files) print var }'`\"\nrm -f nametmp.c\nif test -z \"$sigfile_list\"; then\n  dnl In case we don't get the stuff from the preprocesor, use the old\n  dnl list of standard places.\n  sigfile_list=\"/usr/include/sys/iso/signal_iso.h\n/usr/include/bsd/sys/signal.h\n/usr/include/signum.h\n/usr/include/asm/signum.h\n/usr/include/asm/signal.h\n/usr/include/linux/signal.h\n/usr/include/sys/signal.h\n/usr/include/bits/signum.h\n/dev/null\"\nfi\nfor SIGNAL_TRY_H in $sigfile_list\ndo\n  dnl Try to make sure it doesn't get confused by files that don't\n  dnl have real signal definitions in, but do #define SIG* by counting\n  dnl the number of signals.  Maybe we could even check for e.g. SIGHUP?\n  nsigs=`test -f $SIGNAL_TRY_H && \\\n  grep '#[ \t]*define[ \t][ \t]*SIG[0-9A-Z]*[ \t]*[0-9][0-9]*' $SIGNAL_TRY_H | \\\n  wc -l | sed 's/[ \t]//g'`\n  if test \"x$nsigs\" != x && test \"$nsigs\" -ge 7\n  then\n    SIGNAL_H=\"$SIGNAL_H $SIGNAL_TRY_H\"\n  fi\ndone\nif test \"x$SIGNAL_H\" = x; then\n  AC_MSG_ERROR(SIGNAL MACROS NOT FOUND:  please report to developers)\nfi\nzsh_cv_path_signal_h=\"$SIGNAL_H\"\n])\nSIGNAL_H=\"$zsh_cv_path_signal_h\"\nAC_SUBST(SIGNAL_H)dnl\n\ndnl Where are error names located?  Needed as input for errnames1.awk\nAC_CACHE_CHECK(where error names are located, zsh_cv_path_errno_h,\n[dnl Look at the output from the preprocessor.\ndnl We should get lines of the form `# 1 \"/usr/include/errno.h\"'\ndnl The following assumes the real definitions are in a file which\ndnl contains the name `err'; we could relax this if necessary,\ndnl but then you can get a rather long list of files to test.\ndnl The backslash substitution is to persuade cygwin to cough up\ndnl slashes rather than doubled backslashes in the path.\necho \"#include <errno.h>\" > nametmp.c\nerrfile_list=\"`$CPP $CPPFLAGS nametmp.c |\nsed -n -e 's/^#line[ \t].*\\\"\\(.*\\)\\\"/\\1/p' \\\n       -e 's/^#[ \t0-9].*\\\"\\(.*\\)\\\"/\\1/p' |\nsed 's/\\\\\\\\\\\\\\\\/\\//g' |\n$AWK '{ if ($1 ~ /err/) files[[$1]] = $1 }\n  END { for (var in files) print var }'`\"\nrm -f nametmp.c\nfor ERRNO_TRY_H in $errfile_list /dev/null\ndo\n  dnl Try to make sure it doesn't get confused by files that don't\n  dnl have real error definitions in.  Count definitions to make sure.\n  dnl Definitions of error numbers have become more and more general, so\n  dnl make a list of files containing any definitions in and keep them all.\n  dnl Careful with cut and paste in the pattern: the square brackets\n  dnl must contain a space and a tab.\n  nerrs=`test -f $ERRNO_TRY_H && \\\n  $EGREP '#[ \t]*define[ \t][ \t]*E[0-9A-Z]*[ \t]*(_HURD_ERRNO )?\\(?[_A-Z0-9]' $ERRNO_TRY_H | \\\n  wc -l | sed 's/[ \t]//g'`\n  if test \"x$nerrs\" != x && test \"$nerrs\" -ge 1\n  then\n    ERRNO_H=\"$ERRNO_H $ERRNO_TRY_H\"\n  fi\ndone\nif test x\"$ERRNO_H\" = x; then\n  AC_MSG_ERROR(ERROR MACROS NOT FOUND:  please report to developers)\nfi\nzsh_cv_path_errno_h=\"$ERRNO_H\"\n])\nERRNO_H=\"$zsh_cv_path_errno_h\"\nAC_SUBST(ERRNO_H)dnl\n\nAC_CACHE_CHECK(location of curses header, zsh_cv_path_curses_header,\n[if test x$zsh_cv_ignore_ncurses = xyes; then\n  if test x$ac_cv_header_curses_h = xyes; then\n    zsh_cv_path_curses_header=curses.h\n  else\n    zsh_cv_path_curses_header=none\n  fi\nelif test x$ac_cv_header_ncursesw_ncurses_h = xyes; then\n  zsh_cv_path_curses_header=ncursesw/ncurses.h\nelif test x$ac_cv_header_ncurses_ncurses_h = xyes; then\n  zsh_cv_path_curses_header=ncurses/ncurses.h\nelif test x$ac_cv_header_ncurses_h = xyes; then\n  zsh_cv_path_curses_header=ncurses.h\nelif test x$ac_cv_header_curses_h = xyes; then\n  zsh_cv_path_curses_header=curses.h\nelse\n  zsh_cv_path_curses_header=none\nfi])\nAH_TEMPLATE([ZSH_HAVE_CURSES_H],\n[Define to 1 if some variant of a curses header can be included])\nif test x$zsh_cv_path_curses_header != xnone; then\n  AC_DEFINE(ZSH_HAVE_CURSES_H)\n  ZSH_CURSES_H=$zsh_cv_path_curses_header\nelse\n  ZSH_CURSES_H=\nfi\nAC_SUBST(ZSH_CURSES_H)\n\ndnl Where are curses key definitions located?  Need for keypad() mode.\nAC_CACHE_CHECK(where curses key definitions are located, zsh_cv_path_curses_keys_h,\n[dnl This is an identical trick to errno.h, except we use ncurses.h\ndnl if we can.\nif test x$zsh_cv_path_curses_header = xnone; then\n  echo >nametmp.c\nelse\n  echo \"#include <$zsh_cv_path_curses_header>\" >nametmp.c\nfi\n\ncurses_list=\"`$CPP $CPPFLAGS nametmp.c |\nsed -n -e 's/^#line[ \t].*\\\"\\(.*\\)\\\"/\\1/p' \\\n       -e 's/^#[ \t0-9].*\\\"\\(.*\\)\\\"/\\1/p' |\nsed 's/\\\\\\\\\\\\\\\\/\\//g' |\n$AWK '{ if ($1 ~ /\\.h/) files[[$1]] = $1 }\n  END { for (var in files) print var }'`\"\nrm -f nametmp.c\nfor CURSES_TRY_H in $curses_list /dev/null\ndo\n  nkeys=`test -f $CURSES_TRY_H && \\\n  $EGREP '#[ \t]*define[ \t][ \t]*KEY_' $CURSES_TRY_H | \\\n  wc -l | sed 's/[ \t]//g'`\n  if test \"x$nkeys\" != x && test \"$nkeys\" -ge 10\n  then\n    CURSES_KEYS_H=$CURSES_TRY_H\n    break\n  fi\ndone\nzsh_cv_path_curses_keys_h=\"$CURSES_KEYS_H\"\n])\nCURSES_KEYS_H=\"$zsh_cv_path_curses_keys_h\"\nAC_SUBST(CURSES_KEYS_H)dnl\n\ndnl See if there are variants of term.h.  For testing each one\ndnl we include the most likely variant of the curses header.\nAC_CHECK_HEADERS(ncursesw/term.h,\ntrue, true,\n[#include <ncursesw/ncurses.h>])\nAC_CHECK_HEADERS(ncurses/term.h,\ntrue, true,\n[#include <ncurses/ncurses.h>])\nAC_CHECK_HEADERS(term.h,\ntrue, true,\n[#include <curses.h>])\n\ndnl See if term.h is bundled along with the curses library we\ndnl are using.  If this isn't the default system curses, compilation\ndnl could barf unless we include from the right subdirectory.\nAC_CACHE_CHECK(where term.h is located, zsh_cv_path_term_header,\n[case x$zsh_cv_path_curses_header in\n  xncursesw/*)\n  if test x$ac_cv_header_ncursesw_term_h = xyes; then\n    zsh_cv_path_term_header=ncursesw/term.h\n  fi\n  ;;\n  xncurses/*)\n  if test x$ac_cv_header_ncurses_term_h = xyes; then\n    zsh_cv_path_term_header=ncurses/term.h\n  fi\n  ;;\nesac\nif test x$zsh_cv_path_term_header = x; then\n  if test x$ac_cv_header_term_h = xyes; then\n    zsh_cv_path_term_header=term.h\n  else\n    zsh_cv_path_term_header=none\n  fi\nfi])\n\nAH_TEMPLATE([ZSH_HAVE_TERM_H],\n[Define to 1 if some variant of term.h can be included])\nAH_TEMPLATE([HAVE_BOOLCODES],\n[Define if you have the termcap boolcodes symbol.])\nAH_TEMPLATE([HAVE_NUMCODES],\n[Define if you have the termcap numcodes symbol.])\nAH_TEMPLATE([HAVE_STRCODES],\n[Define if you have the termcap strcodes symbol.])\nAH_TEMPLATE([HAVE_BOOLNAMES],\n[Define if you have the terminfo boolnames symbol.])\nAH_TEMPLATE([HAVE_NUMNAMES],\n[Define if you have the terminfo numnames symbol.])\nAH_TEMPLATE([HAVE_STRNAMES],\n[Define if you have the terminfo strnames symbol.])\nAH_TEMPLATE([TGOTO_PROTO_MISSING],\n[Define if there is no prototype for the tgoto() terminal function.])\n\nif test x$zsh_cv_path_term_header != xnone; then\n  AC_DEFINE(ZSH_HAVE_TERM_H)\n  ZSH_TERM_H=$zsh_cv_path_term_header\n  if test x$zsh_cv_path_curses_header != xnone; then\n    term_includes=\"#include <$zsh_cv_path_curses_header>\n#include <$zsh_cv_path_term_header>\"\n  else\n    term_includes=\"#include <$zsh_cv_path_term_header>\"\n  fi\n\n  AC_MSG_CHECKING(if boolcodes is available)\n  AC_LINK_IFELSE([AC_LANG_PROGRAM([[$term_includes]], [[char **test = (char **)boolcodes; puts(*test);]])],[AC_DEFINE(HAVE_BOOLCODES) boolcodes=yes],[boolcodes=no])\n  AC_MSG_RESULT($boolcodes)\n\n  AC_MSG_CHECKING(if numcodes is available)\n  AC_LINK_IFELSE([AC_LANG_PROGRAM([[$term_includes]], [[char **test = (char **)numcodes; puts(*test);]])],[AC_DEFINE(HAVE_NUMCODES) numcodes=yes],[numcodes=no])\n  AC_MSG_RESULT($numcodes)\n\n  AC_MSG_CHECKING(if strcodes is available)\n  AC_LINK_IFELSE([AC_LANG_PROGRAM([[$term_includes]], [[char **test = (char **)strcodes; puts(*test);]])],[AC_DEFINE(HAVE_STRCODES) strcodes=yes],[strcodes=no])\n  AC_MSG_RESULT($strcodes)\n\n  AC_MSG_CHECKING(if boolnames is available)\n  AC_LINK_IFELSE([AC_LANG_PROGRAM([[$term_includes]], [[char **test = (char **)boolnames; puts(*test);]])],[AC_DEFINE(HAVE_BOOLNAMES) boolnames=yes],[boolnames=no])\n  AC_MSG_RESULT($boolnames)\n\n  AC_MSG_CHECKING(if numnames is available)\n  AC_LINK_IFELSE([AC_LANG_PROGRAM([[$term_includes]], [[char **test = (char **)numnames; puts(*test);]])],[AC_DEFINE(HAVE_NUMNAMES) numnames=yes],[numnames=no])\n  AC_MSG_RESULT($numnames)\n\n  AC_MSG_CHECKING(if strnames is available)\n  AC_LINK_IFELSE([AC_LANG_PROGRAM([[$term_includes]], [[char **test = (char **)strnames; puts(*test);]])],[AC_DEFINE(HAVE_STRNAMES) strnames=yes],[strnames=no])\n  AC_MSG_RESULT($strnames)\n\n  dnl There are apparently defective terminal library headers on some\n  dnl versions of Solaris before 11.\n  AC_MSG_CHECKING(if tgoto prototype is missing)\n  tgoto_includes=\"$term_includes\n/* guaranteed to clash with any valid tgoto prototype */\nextern void tgoto(int **stuff, float **more_stuff);\"\n  AC_LINK_IFELSE([AC_LANG_PROGRAM([[$tgoto_includes]], [[int *stuff; float *more_stuff; tgoto(&stuff, &more_stuff);]])],[AC_DEFINE(TGOTO_PROTO_MISSING) tgotoprotomissing=yes],[tgotoprotomissing=no])\n  AC_MSG_RESULT($tgotoprotomissing)\nelse\n  ZSH_TERM_H=\nfi\nAC_SUBST(ZSH_TERM_H)\n\n\ndnl -----------------------------------------------------\ndnl Look for the file containing the RLIMIT_* definitions\ndnl -----------------------------------------------------\ndnl CALL FOR MORE (FEWER?) LOCATIONS:  I've just copied the signal checking.\nAC_CACHE_CHECK(where the RLIMIT macros are located,zsh_cv_path_rlimit_h,\n[dnl Look at the output from the preprocessor.\ndnl Copied from the search for the signal names above.\necho \"#include <sys/resource.h>\" >restmp.c\nresourcefile_list=\"`$CPP $CPPFLAGS restmp.c |\nsed -n -e 's/^#line[ \t].*\\\"\\(.*\\)\\\"/\\1/p' \\\n       -e 's/^#[ \t].*\\\"\\(.*\\)\\\"/\\1/p' |\nsed 's/\\\\\\\\\\\\\\\\/\\//g' |\n$AWK '{ if ($1 ~ /resource/) files[[$1]] = $1 }\n  END { for (var in files) print var }'`\"\nrm -f restmp.c\nif test -z \"$resourcefile_list\"; then\n  dnl No list: look at standard places.\n  resourcefile_list=\"/usr/include/bsd/sys/resource.h\n/usr/include/asm/resource.h\n/usr/include/linux/resource.h\n/usr/include/sys/resource.h\n/usr/include/bits/resource.h\n/usr/include/resourcebits.h\"\nfi\nfor RESOURCE_H in $resourcefile_list /dev/null;\ndo\n  test -f $RESOURCE_H && \\\n  grep '#[ \t]*define[ \t][ \t]*RLIMIT_[A-Z]*[ \t]*[0-9A-Z][0-9]*' $RESOURCE_H > /dev/null && \\\n  break\ndone\nzsh_cv_path_rlimit_h=$RESOURCE_H\nif test x$RESOURCE_H = x\"/dev/null\" && test x$ac_cv_func_getrlimit = xyes; then\n  AC_MSG_WARN(RLIMIT MACROS NOT FOUND:  please report to developers)\nfi])\nRLIMITS_INC_H=$zsh_cv_path_rlimit_h\nif test \"$RLIMITS_INC_H\" = \"/dev/null\"; then\n  RLIMITS_INC_H=''\nfi\ndnl rlimits.h only appears in dependencies if we are actually using it.\ndnl We are using it any time we have getrlimit, though if the macros were\ndnl not found we simply awk through /dev/null and fail to find them.\ndnl Thus, limit won't work, but at least the shell will compile.\nAC_SUBST(RLIMITS_INC_H)dnl\n\ndnl ------------------\ndnl rlimit type checks\ndnl ------------------\nAH_TEMPLATE([RLIM_T_IS_QUAD_T],\n[Define to 1 if struct rlimit uses quad_t.])\nAH_TEMPLATE([RLIM_T_IS_LONG_LONG],\n[Define to 1 if struct rlimit uses long long])\nAH_TEMPLATE([RLIM_T_IS_UNSIGNED],\n[Define to 1 if struct rlimit uses unsigned.])\nAH_TEMPLATE([rlim_t],\n[Define to the type used in struct rlimit.])\nDEFAULT_RLIM_T=long\nAC_CACHE_CHECK(if rlim_t is longer than a long,\nzsh_cv_rlim_t_is_longer,\n[AC_RUN_IFELSE([AC_LANG_SOURCE([[\n#ifdef HAVE_SYS_TIME_H\n#include <sys/time.h>\n#endif\n#include <sys/resource.h>\nint main(){struct rlimit r;return(sizeof(r.rlim_cur) <= sizeof(long));}]])],[zsh_cv_rlim_t_is_longer=yes],[zsh_cv_rlim_t_is_longer=no],[zsh_cv_rlim_t_is_longer=yes])])\nif test x$zsh_cv_rlim_t_is_longer = xyes; then\n  AC_CACHE_CHECK(if rlim_t is a quad,\n  zsh_cv_rlim_t_is_quad_t,\n  [AC_RUN_IFELSE([AC_LANG_SOURCE([[\n#ifdef HAVE_SYS_TIME_H\n#include <sys/time.h>\n#endif\n#include <stdio.h>\n#include <sys/resource.h>\nint main() {\n  struct rlimit r;\n  char buf[20];\n  r.rlim_cur = 0;\n  sprintf(buf, \"%qd\", r.rlim_cur);\n  return(strcmp(buf, \"0\"));\n}]])],[zsh_cv_rlim_t_is_quad_t=yes],[zsh_cv_rlim_t_is_quad_t=no],[zsh_cv_rlim_t_is_quad_t=no])])\n  if test x$zsh_cv_rlim_t_is_quad_t = xyes; then\n    AC_DEFINE(RLIM_T_IS_QUAD_T)\n    DEFAULT_RLIM_T=quad_t\n  else\n    AC_DEFINE(RLIM_T_IS_LONG_LONG)\n    DEFAULT_RLIM_T='long long'\n  fi\nelse\n  AC_CACHE_CHECK(if the rlim_t is unsigned,\n  zsh_cv_type_rlim_t_is_unsigned,\n  [AC_RUN_IFELSE([AC_LANG_SOURCE([[\n#ifdef HAVE_SYS_TIME_H\n#include <sys/time.h>\n#endif\n#include <sys/resource.h>\n  int main(){struct rlimit r;r.rlim_cur=-1;return(r.rlim_cur<0);}]])],[zsh_cv_type_rlim_t_is_unsigned=yes],[zsh_cv_type_rlim_t_is_unsigned=no],[zsh_cv_type_rlim_t_is_unsigned=no])])\n  if test x$zsh_cv_type_rlim_t_is_unsigned = xyes; then\n    AC_DEFINE(RLIM_T_IS_UNSIGNED)\n    DEFAULT_RLIM_T=\"unsigned $DEFAULT_RLIM_T\"\n  fi\nfi\n\nAC_CACHE_CHECK(for rlim_t, zsh_cv_type_rlim_t,\n[AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n#include <sys/types.h>\n#ifdef HAVE_SYS_TIME_H\n#include <sys/time.h>\n#endif\n#include <sys/resource.h>]], [[rlim_t l;]])],[zsh_cv_type_rlim_t=yes],[zsh_cv_type_rlim_t=no])])\nif test x$zsh_cv_type_rlim_t = xno; then\n  AC_DEFINE_UNQUOTED(rlim_t, $DEFAULT_RLIM_T)\nfi\n\n\ndnl On some systems the RLIMIT_* don't evaluate to integers at compile time\ndnl (they may be enums).  In this case we are not able to do preprocessor\ndnl comparisons and need our tests to determine what values exist and\ndnl if there are clashing definitions.\n\nzsh_LIMIT_PRESENT(RLIMIT_AIO_MEM)\nzsh_LIMIT_PRESENT(RLIMIT_AIO_OPS)\nzsh_LIMIT_PRESENT(RLIMIT_AS)\nzsh_LIMIT_PRESENT(RLIMIT_LOCKS)\nzsh_LIMIT_PRESENT(RLIMIT_MEMLOCK)\nzsh_LIMIT_PRESENT(RLIMIT_NPROC)\nzsh_LIMIT_PRESENT(RLIMIT_NTHR)\nzsh_LIMIT_PRESENT(RLIMIT_NOFILE)\nzsh_LIMIT_PRESENT(RLIMIT_PTHREAD)\nzsh_LIMIT_PRESENT(RLIMIT_RSS)\nzsh_LIMIT_PRESENT(RLIMIT_SBSIZE)\nzsh_LIMIT_PRESENT(RLIMIT_TCACHE)\nzsh_LIMIT_PRESENT(RLIMIT_VMEM)\nzsh_LIMIT_PRESENT(RLIMIT_SIGPENDING)\nzsh_LIMIT_PRESENT(RLIMIT_MSGQUEUE)\nzsh_LIMIT_PRESENT(RLIMIT_NICE)\nzsh_LIMIT_PRESENT(RLIMIT_RTPRIO)\nzsh_LIMIT_PRESENT(RLIMIT_RTTIME)\nzsh_LIMIT_PRESENT(RLIMIT_POSIXLOCKS)\nzsh_LIMIT_PRESENT(RLIMIT_NPTS)\nzsh_LIMIT_PRESENT(RLIMIT_SWAP)\nzsh_LIMIT_PRESENT(RLIMIT_KQUEUES)\nzsh_LIMIT_PRESENT(RLIMIT_UMTXP)\nzsh_LIMIT_PRESENT(RLIMIT_NOVMON)\n\nzsh_LIMITS_EQUAL(VMEM, vmem, RSS, rss)\nzsh_LIMITS_EQUAL(VMEM, vmem, AS, as)\nzsh_LIMITS_EQUAL(RSS, rss, AS, as)\n\ndnl --------------------------------------------\ndnl Check for members of struct rusage\ndnl --------------------------------------------\nif test x$ac_cv_func_getrusage = xyes; then\n  AC_CHECK_MEMBERS([struct rusage.ru_maxrss,\n\t\t    struct rusage.ru_ixrss,\n\t\t    struct rusage.ru_idrss,\n\t\t    struct rusage.ru_isrss,\n\t\t    struct rusage.ru_minflt,\n\t\t    struct rusage.ru_majflt,\n\t\t    struct rusage.ru_nswap,\n\t\t    struct rusage.ru_inblock,\n\t\t    struct rusage.ru_oublock,\n\t\t    struct rusage.ru_msgsnd,\n\t\t    struct rusage.ru_msgrcv,\n\t\t    struct rusage.ru_nsignals,\n\t\t    struct rusage.ru_nvcsw,\n\t\t    struct rusage.ru_nivcsw],,,\n[#include <sys/types.h>\n#ifdef HAVE_SYS_TIME_H\n#include <sys/time.h>\n#endif\n#include <sys/resource.h>])\nfi\ndnl On some OSes (only macOS?) ru_maxrss is in bytes (not in kilobytes).\ndnl Solaris uses pages as the unit, but ru_maxrss is set to zero anyway.\nAH_TEMPLATE(RU_MAXRSS_IS_IN_BYTES,\n[Define to 1 if ru_maxrss in struct rusage is in bytes.])\ncase \"$host_os\" in\n  darwin*)\n    AC_DEFINE(RU_MAXRSS_IS_IN_BYTES)\n  ;;\nesac\n\n\ndnl --------------------------------------------\ndnl CHECK FOR DEFAULT PATH (used for command -p)\ndnl --------------------------------------------\nAC_CACHE_VAL(zsh_cv_cs_path,\n[if getconf _CS_PATH >/dev/null 2>&1; then\n  zsh_cv_cs_path=`getconf _CS_PATH`\nelif getconf CS_PATH >/dev/null 2>&1; then\n  zsh_cv_cs_path=`getconf CS_PATH`\nelif getconf PATH >/dev/null 2>&1; then\n  zsh_cv_cs_path=`getconf PATH`\nelse\n  zsh_cv_cs_path=\"/bin:/usr/bin\"\nfi])\nAC_DEFINE_UNQUOTED(DEFAULT_PATH, \"$zsh_cv_cs_path\",\n[The default path; used when running commands with command -p])\n\n\ndnl ----------------------------\ndnl CHECK FOR /dev/fd FILESYSTEM\ndnl ----------------------------\ndnl FreeBSD 5 only supports /dev/fd/0 to /dev/fd/2 without mounting\ndnl a special file system.  As zsh needs arbitrary /dev/fd (typically\ndnl >10) for its own use, we need to make sure higher fd's are available.\ndnl Since we're using the shell, we're restricted to 0 to 9 but 3 should\ndnl be good enough.\nAH_TEMPLATE([PATH_DEV_FD],\n[Define to the path of the /dev/fd filesystem.])\nAC_CACHE_CHECK(for /dev/fd filesystem, zsh_cv_sys_path_dev_fd,\n[for zsh_cv_sys_path_dev_fd in /proc/self/fd /dev/fd no; do\n   test x`echo ok|(cat $zsh_cv_sys_path_dev_fd/3 3<&0 2>/dev/null;)` = xok && break\n done])\nif test x$zsh_cv_sys_path_dev_fd != xno; then\n  AC_DEFINE_UNQUOTED(PATH_DEV_FD, \"$zsh_cv_sys_path_dev_fd\")\nfi\n\ndnl ----------------------------------------------------\ndnl CHECK FOR SYMLINK TO THE CURRENT EXECUTABLE IN /proc\ndnl ----------------------------------------------------\ndnl Linux: /proc/self/exe\ndnl NetBSD: /proc/curproc/exe (or /proc/self/exe, but not /proc/curproc/file)\ndnl DragonFly: /proc/curproc/file\ndnl Solaris: /proc/self/path/a.out\nAH_TEMPLATE([PROC_SELF_EXE],\n[Define to the path of the symlink to the current executable file.])\nAC_CACHE_CHECK(for symlink to the current executable in /proc,\nzsh_cv_proc_self_exe,\n[for zsh_cv_proc_self_exe in /proc/self/exe /proc/curproc/exe \\\n                             /proc/curproc/file /proc/self/path/a.out no; do\n   test -L $zsh_cv_proc_self_exe && break\ndone])\nif test x$zsh_cv_proc_self_exe != xno; then\n  AC_DEFINE_UNQUOTED(PROC_SELF_EXE, \"$zsh_cv_proc_self_exe\")\nfi\n\ndnl ---------------------------------\ndnl CHECK FOR RFS SUPERROOT DIRECTORY\ndnl ---------------------------------\nAC_CACHE_CHECK(for RFS superroot directory, zsh_cv_sys_superroot,\n[test -d /../.LOCALROOT && zsh_cv_sys_superroot=yes || zsh_cv_sys_superroot=no])\nAH_TEMPLATE([HAVE_SUPERROOT],\n[Define to 1 if you have RFS superroot directory.])\nif test x$zsh_cv_sys_superroot = xyes; then\n  AC_DEFINE(HAVE_SUPERROOT)\nfi\n\ndnl CHECK FOR SYSTEMS REQUIRING GETCWD\ndnl This is now turned on by default, as we expect modern getcwd\ndnl implementations to work correctly.  Any exceptions should be added\ndnl to the first case.  Currently there are none, hence it is forced\ndnl not to match.\nAC_CACHE_CHECK(whether we should use the native getcwd,\nzsh_cv_use_getcwd,\n[case \"${host_cpu}-${host_vendor}-${host_os}\" in\n    *NOMATCH*) zsh_cv_use_getcwd=no ;;\n    *) zsh_cv_use_getcwd=yes ;;\n esac])\nAH_TEMPLATE([USE_GETCWD],\n[Define to 1 if you need to use the native getcwd.])\nif test x$zsh_cv_use_getcwd = xyes; then\n  AC_DEFINE(USE_GETCWD)\nfi\n\ndnl GNU getcwd() can allocate as much space as necessary for a\ndnl directory name, preventing guessing games.\nAH_TEMPLATE([GETCWD_CALLS_MALLOC],\n[Define to 1 if getcwd() calls malloc to allocate memory.])\nif test x$ac_cv_func_getcwd = xyes; then\n  AC_CACHE_CHECK(whether getcwd calls malloc to allocate memory,\n  zsh_cv_getcwd_malloc,\n  [AC_RUN_IFELSE([AC_LANG_SOURCE([[\n#include <unistd.h>\n#include <string.h>\nint main() {\n    char buf[1024], *ptr1, *ptr2;\n    ptr1 = getcwd(buf, 1024);\n    ptr2 = getcwd(NULL, 0);\n    if (ptr1 && ptr2 && !strcmp(ptr1, ptr2)) {\n      return 0;\n    }\n    return 1;\n}\n]])],[zsh_cv_getcwd_malloc=yes],[zsh_cv_getcwd_malloc=no],[zsh_cv_getcwd_malloc=no])])\n  if test x$zsh_cv_getcwd_malloc = xyes; then\n    AC_DEFINE(GETCWD_CALLS_MALLOC)\n  fi\nfi\n\ndnl CHECK FOR setproctitle() FOR jobs -Z / ARGV0\nAH_TEMPLATE([HAVE_SETPROCTITLE],\n[Define to 1 if the system supports `setproctitle' to change process name])\nAC_CHECK_FUNC(setproctitle,AC_DEFINE(HAVE_SETPROCTITLE),\nAC_SEARCH_LIBS(setproctitle,util,AC_DEFINE(HAVE_SETPROCTITLE)))\n\ndnl CHECK FOR prctl() FOR jobs -Z / ARGV0 when checking with ps -e\nAH_TEMPLATE([HAVE_PRCTL],\n[Define to 1 if the system supports `prctl' to change process name])\nAC_CHECK_FUNC(prctl,AC_DEFINE(HAVE_PRCTL),\nAC_SEARCH_LIBS(prctl,c,AC_DEFINE(HAVE_PRCTL)))\n\ndnl ----------------------------------------\ndnl CHECK FOR LOCATION OF {U,W}TMP{,X} FILES\ndnl ----------------------------------------\nzsh_PATH_UTMP(utmp)\nzsh_PATH_UTMP(wtmp)\nzsh_PATH_UTMP(utmpx,utx.active)\nzsh_PATH_UTMP(wtmpx)\n\ndnl -------------------\ndnl brk/sbrk PROTOTYPES\ndnl -------------------\nAC_CACHE_CHECK(for brk() prototype in <unistd.h>,\nzsh_cv_header_unistd_h_brk_proto,\n[AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\ndouble brk();]], [[int i;]])],[zsh_cv_header_unistd_h_brk_proto=no],[zsh_cv_header_unistd_h_brk_proto=yes])])\nAH_TEMPLATE([HAVE_BRK_PROTO],\n[Define to 1 if there is a prototype defined for brk() on your system.])\nif test x$zsh_cv_header_unistd_h_brk_proto = xyes; then\n  AC_DEFINE(HAVE_BRK_PROTO)\nfi\n\nAC_CACHE_CHECK(for sbrk() prototype in <unistd.h>,\nzsh_cv_header_unistd_h_sbrk_proto,\n[AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\ndouble sbrk();]], [[int i;]])],[zsh_cv_header_unistd_h_sbrk_proto=no],[zsh_cv_header_unistd_h_sbrk_proto=yes])])\nAH_TEMPLATE([HAVE_SBRK_PROTO],\n[Define to 1 if there is a prototype defined for sbrk() on your system.])\nif test x$zsh_cv_header_unistd_h_sbrk_proto = xyes; then\n  AC_DEFINE(HAVE_SBRK_PROTO)\nfi\n\ndnl -----------------------\ndnl mknod prototype for OSF\ndnl -----------------------\nAH_TEMPLATE([HAVE_MKNOD_PROTO],\n[Define to 1 if there is a prototype defined for mknod() on your system.])\nif test \"$ac_cv_prog_cc_stdc\" != no; then\n  AC_CACHE_CHECK(for mknod prototype in <sys/stat.h>,\n  zsh_cv_header_sys_stat_h_mknod_proto,\n  [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/stat.h>\n   int mknod(double x);]], [[int i;]])],[zsh_cv_header_sys_stat_h_mknod_proto=no],[zsh_cv_header_sys_stat_h_mknod_proto=yes])])\n  if test x$zsh_cv_header_sys_stat_h_mknod_proto = xyes; then\n    AC_DEFINE(HAVE_MKNOD_PROTO)\n  fi\nfi\n\ndnl ----------------------------------------\ndnl presence and location of ioctl prototype\ndnl ----------------------------------------\nAC_CACHE_CHECK(for ioctl prototype in <unistd.h> or <termios.h>,\nzsh_cv_header_unistd_h_termios_h_ioctl_proto,\n[AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n#ifdef HAVE_UNISTD_H\n# include <unistd.h>\n#endif\n#ifdef HAVE_TERMIOS_H\n# include <termios.h>\n#endif\ndouble ioctl();]], [[int i;]])],[zsh_cv_header_unistd_h_termios_h_ioctl_proto=no],[zsh_cv_header_unistd_h_termios_h_ioctl_proto=yes])])\n\nif test x$zsh_cv_header_unistd_h_termios_h_ioctl_proto = xno; then\n  AC_CACHE_CHECK(for ioctl prototype in <sys/ioctl.h>,\n  zsh_cv_header_sys_ioctl_h_ioctl_proto,\n  [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/ioctl.h>\n  double ioctl();]], [[int i;]])],[zsh_cv_header_sys_ioctl_h_ioctl_proto=no],[zsh_cv_header_sys_ioctl_h_ioctl_proto=yes])])\nelse\n  zsh_cv_header_sys_ioctl_h_ioctl_proto=no\nfi\n\nAH_TEMPLATE([HAVE_IOCTL_PROTO],\n[Define to 1 if there is a prototype defined for ioctl() on your system.])\nif test x$zsh_cv_header_unistd_h_termios_h_ioctl_proto = xyes || \\\n   test x$zsh_cv_header_sys_ioctl_h_ioctl_proto = xyes; then\n  AC_DEFINE(HAVE_IOCTL_PROTO)\nfi\nAH_TEMPLATE([IOCTL_IN_SYS_IOCTL],\n[Define to 1 if we must include <sys/ioctl.h> to get a prototype for ioctl().])\nif test x$zsh_cv_header_sys_ioctl_h_ioctl_proto = xyes; then\n  AC_DEFINE(IOCTL_IN_SYS_IOCTL)\nfi\n\ndnl -----------\ndnl named FIFOs\ndnl -----------\ndnl\nAC_CACHE_CHECK(if named FIFOs work,\nzsh_cv_sys_fifo,\n[AC_RUN_IFELSE([AC_LANG_SOURCE([[\n#include <fcntl.h>\n#include <signal.h>\n#include <unistd.h>\n#include <sys/stat.h>\nint main()\n{\n    char c;\n    int fd;\n    int pid, ret;\n    unlink(\"/tmp/fifo$$\");\n#ifdef HAVE_MKFIFO\n    if(mkfifo(\"/tmp/fifo$$\", 0600) < 0)\n#else\n    if(mknod(\"/tmp/fifo$$\", 0010600, 0) < 0)\n#endif\n\treturn(1);\n    pid = fork();\n    if(pid < 0)\n\treturn(1);\n    if(pid) {\n\tfd = open(\"/tmp/fifo$$\", O_RDONLY);\n\treturn(fd < 0 || read(fd, &c, 1) != 1 || c != 'x');\n    }\n    fd = open(\"/tmp/fifo$$\", O_WRONLY);\n    ret = (fd < 0 || write(fd, \"x\", 1) < 1);\n    unlink(\"/tmp/fifo$$\");\n    return(ret);\n}\n]])],[zsh_cv_sys_fifo=yes],[zsh_cv_sys_fifo=no],[zsh_cv_sys_fifo=yes])\n])\nAH_TEMPLATE([HAVE_FIFOS],\n[Define to 1 if system has working FIFOs.])\nif test x$zsh_cv_sys_fifo = xyes; then\n  AC_DEFINE(HAVE_FIFOS)\nfi\n\ndnl -----------\ndnl check that lseek() correctly reports seekability.\ndnl -----------\nAC_CACHE_CHECK(if lseek() correctly reports seekability,\nzsh_cv_sys_lseek,\n[AC_RUN_IFELSE([AC_LANG_SOURCE([[\n#include <stdio.h>\n#include <sys/types.h>\n#include <fcntl.h>\n#include <unistd.h>\n#include <sys/socket.h>\n#include <sys/stat.h>\nint main() {\n    int pipefd[2], fd;\n    off_t ret;\n    char* tmpfile = \"seekfiletest.tmp\";\n    if ((fd = open(tmpfile, O_CREAT, S_IRUSR)) < 0) {\n\tfprintf(stderr, \"creating file failed\\n\");\n\treturn 1;\n    }\n    ret = lseek(fd, 0, SEEK_CUR);\n    close(fd);\n    unlink(tmpfile);\n    if (ret == (off_t)-1) {\n\tfprintf(stderr, \"lseek on regular file failed\\n\");\n\treturn 1;\n    }\n    if (pipe(pipefd) < 0) {\n\tfprintf(stderr, \"creating pipe failed\\n\");\n\treturn 1;\n    }\n    write(pipefd[1], \"abcdefgh\", 8);\n    ret = lseek(pipefd[0], 0, SEEK_CUR);\n    close(pipefd[0]);\n    close(pipefd[1]);\n    if (ret != (off_t)-1) {\n\tfprintf(stderr, \"lseek on pipe succeeded\\n\");\n\treturn 1;\n    }\n    if ((fd = socket(AF_UNIX, SOCK_STREAM, 0)) < 0) {\n\tfprintf(stderr, \"creating UNIX domain socket failed\\n\");\n\treturn 1;\n    }\n    ret = lseek(fd, 0, SEEK_CUR);\n    close(fd);\n    if (ret != (off_t)-1) {\n\tfprintf(stderr, \"lseek on UNIX domain socket succeeded\\n\");\n\treturn 1;\n    }\n    return 0;\n}\n]])],[zsh_cv_sys_lseek=yes],[zsh_cv_sys_lseek=no],[zsh_cv_sys_lseek=yes])\n])\nAH_TEMPLATE([USE_LSEEK],\n[Define to 1 if lseek() can be used for SHIN.])\nif test x$zsh_cv_sys_lseek = xyes; then\n  AC_DEFINE(USE_LSEEK)\nfi\n\ndnl -----------\ndnl test for whether link() works\ndnl for instance, BeOS R4.51 doesn't support hard links yet\ndnl -----------\nAC_CACHE_CHECK(if link() works,\nzsh_cv_sys_link,\n[AC_RUN_IFELSE([AC_LANG_SOURCE([[\n#include <unistd.h>\n#include <fcntl.h>\nint main()\n{\n    int ret;\n    char *tmpfile, *newfile;\n    tmpfile=\"/tmp/zsh.linktest$$\";\n    newfile=\"/tmp/zsh.linktest2$$\";\n    unlink(tmpfile);\n    unlink(newfile);\n    if(creat(tmpfile, 0644) < 0)\n\treturn(1);\n    ret = link(tmpfile, newfile);\n    unlink(tmpfile);\n    unlink(newfile);\n    return(ret<0);\n}\n]])],[zsh_cv_sys_link=yes],[zsh_cv_sys_link=no],[zsh_cv_sys_link=yes])])\nAH_TEMPLATE([HAVE_LINK],\n[Define to 1 if system has working link().])\nif test x$zsh_cv_sys_link = xyes; then\n  AC_DEFINE(HAVE_LINK)\nfi\n\ndnl ---------------\ndnl check for the type of third argument of accept\ndnl ---------------\n\nzsh_CHECK_SOCKLEN_T\n\ndnl ---------------\ndnl Check for pty multiplexer for use in pty module.\ndnl We need to open it read/write, so make sure it is writeable.\ndnl Yet another test which won't work when cross-compiling.\ndnl ---------------\nAC_CACHE_CHECK(if your system has /dev/ptmx,\nac_cv_have_dev_ptmx,\n[if test -w /dev/ptmx; then\n  ac_cv_have_dev_ptmx=yes\nelse\n  ac_cv_have_dev_ptmx=no\nfi])\n\ndnl --------\ndnl Check if the ptmx functions are usable.\ndnl We need to be able to find the prototypes, which may\ndnl require non-POSIX source definitions.  So test to see\ndnl if ptsname is correctly recognised as returning a char *.\ndnl We do this by making sure a program where ptsname() is declared\ndnl as returning int does *not* compile.\ndnl On Linux we need the XOPEN extensions.  The easiest way to get\ndnl these is by defining _GNU_SOURCE.\ndnl -------\nAH_TEMPLATE([USE_DEV_PTMX],\n[Define to 1 if all the kit for using /dev/ptmx for ptys is available.])\nif test x$ac_cv_have_dev_ptmx = xyes -o x$ac_cv_func_posix_openpt = xyes && \\\n   test x$ac_cv_func_grantpt = xyes && \\\n   test x$ac_cv_func_unlockpt = xyes && \\\n   test x$ac_cv_func_ptsname = xyes; then\n   AC_CACHE_CHECK([if /dev/ptmx is usable],\n   ac_cv_use_dev_ptmx,\n   [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#if defined(__linux) || defined(__CYGWIN__)\n#define _GNU_SOURCE 1\n#endif\n#include <stdlib.h>\nint ptsname();]], [[]])],[ac_cv_use_dev_ptmx=no],[ac_cv_use_dev_ptmx=yes])])\n   if test x$ac_cv_use_dev_ptmx = xyes; then\n     AC_DEFINE(USE_DEV_PTMX)\n   fi\nfi\n\ndnl -----------------\ndnl multibyte support\ndnl -----------------\nAC_ARG_ENABLE(multibyte,\nAS_HELP_STRING([--enable-multibyte],[support multibyte characters]),\n[zsh_cv_c_unicode_support=$enableval],\n[AC_CACHE_VAL(zsh_cv_c_unicode_support,\n  AC_MSG_NOTICE([checking for functions supporting multibyte characters])\n  [zfuncs_absent=\ndnl\ndnl Note that iswblank is not included and checked separately.\ndnl As iswblank() was added to C long after the others, we still\ndnl want to enabled unicode support even if iswblank is not available\ndnl (we then just do the SPC+TAB approximation)\ndnl\n   for zfunc in iswalnum iswcntrl iswdigit iswgraph iswlower iswprint \\\niswpunct iswspace iswupper iswxdigit mbrlen mbrtowc towupper towlower \\\nwcschr wcscpy wcslen wcsncmp wcsncpy wcrtomb wcwidth wmemchr wmemcmp \\\nwmemcpy wmemmove wmemset; do\n     AC_CHECK_FUNC($zfunc,\n     [:], [zfuncs_absent=\"$zfuncs_absent $zfunc\"])\n    done\n    if test x\"$zfuncs_absent\" = x; then\n      AC_MSG_NOTICE([all functions found, multibyte support enabled])\n      zsh_cv_c_unicode_support=yes\n    else\n      # Warns at the end of configure\n      AC_MSG_NOTICE([missing functions, multibyte support disabled])\n      zsh_cv_c_unicode_support=no\n    fi\n  ])\n])\nAH_TEMPLATE([MULTIBYTE_SUPPORT],\n[Define to 1 if you want support for multibyte character sets.])\n\ndnl\ndnl unicode9 support\ndnl\nAH_TEMPLATE([ENABLE_UNICODE9],\n[Define to 1 if you want use unicode9 character widths.])\nAC_ARG_ENABLE(unicode9,\nAS_HELP_STRING([--enable-unicode9],[compile with unicode9 character widths]),\n[if test x$enableval = xyes; then\n  AC_DEFINE(ENABLE_UNICODE9)\nfi])\n\nAH_TEMPLATE([BROKEN_ISPRINT],\n[Define to 1 if the isprint() function is broken under UTF-8 locale.])\n\nif test x$zsh_cv_c_unicode_support = xyes; then\n  AC_DEFINE(MULTIBYTE_SUPPORT)\n\n  dnl Test if wcwidth() and/or iswprint() is broken for\n  dnl   zero-width combining characters, or\n  dnl   some characters in the Latin Extended-B.\n  dnl If either of the functions is broken, both functions will be replaced\n  dnl by the ones from wcwidth9.h by defining ENABLE_UNICODE9. We will do\n  dnl this only if __STDC_ISO_10646__ is defined (or if building on macOS,\n  dnl where __STDC_ISO_10646__ is not defined but wchar_t is UCS).\n  dnl For the test we use a combining acute accent (\\u0301) or\n  dnl a LATIN SMALL LETTER L WITH CURL (\\u0234).\n  dnl We input it as UTF-8 since that is the standard we can rely\n  dnl upon most:  we can't rely on a wchar_t being stored as a\n  dnl Unicode code point on all systems.\n  dnl The programme returns 0 only if all the conditions for brokenness\n  dnl are met:\n  dnl - the programme compiled, linked and ran\n  dnl - we successfully set a UTF-8 locale\n  dnl - the locale we set plausibly converted the UTF-8 string\n  dnl   into the correct wide character\n  dnl - but wcwidth() or iswprint() is broken for the converted wide character.\n  dnl locale -a is a fallback; on most systems we should find en_US.UTF-8.\n  [locale_prog='char *my_locales[] = {\n  \"en_US.UTF-8\", \"en_GB.UTF-8\", \"en.UTF-8\", '\n  locale_prog=\"$locale_prog\"`locale -a 2>/dev/null | \\\n    sed -e 's/utf8/UTF-8/' | grep UTF-8 | \\\n    while read line; do echo \" \\\"$line\\\",\"; done;`\n  locale_prog=\"$locale_prog 0 };\n  #define _XOPEN_SOURCE\n  #include <stdlib.h>\n  #include <locale.h>\n  #include <wchar.h>\n  #include <wctype.h>\n\n  int main() {\n    char **localep;\n    char comb_acute_mb[] = { (char)0xcc, (char)0x81 };\n    char u_0234[] = { (char)0xc8, (char)0xb4 };\n    wchar_t wc;\n  #if !defined(__STDC_ISO_10646__) && !defined(__APPLE__)\n    return 1;\n  #endif\n\n    for (localep = my_locales; *localep; localep++)\n      if (setlocale(LC_ALL, *localep))\n\t  break;\n    if (!*localep)\n      return 1;\n    if (mbtowc(&wc, comb_acute_mb, 2) == 2 && (wcwidth(wc) != 0 || !iswprint(wc)))\n      return 0;\n    if (mbtowc(&wc, u_0234, 2) == 2 && (wcwidth(wc) != 1 || !iswprint(wc)))\n      return 0;\n    return 1;\n  }\n  \"]\n\n  AC_CACHE_CHECK(if the wcwidth() and/or iswprint() functions are broken,\n  zsh_cv_c_broken_wcwidth,\n  [AC_RUN_IFELSE([AC_LANG_SOURCE([[$locale_prog]])],[zsh_cv_c_broken_wcwidth=yes],[zsh_cv_c_broken_wcwidth=no],[zsh_cv_c_broken_wcwidth=no])])\n  if test x$zsh_cv_c_broken_wcwidth = xyes; then\n    AC_DEFINE(ENABLE_UNICODE9)\n  fi\n\n  dnl Check if isprint() behaves correctly under UTF-8 locale.\n  dnl On some platform (maybe only on Mac OS X), isprint() returns\n  dnl true for all characters in the range from 0xa0 to 0xff if\n  dnl called under UTF-8 locale.\n  [locale_prog='char *my_locales[] = {\n  \"en_US.UTF-8\", \"en_GB.UTF-8\", \"en.UTF-8\", '\n  locale_prog=\"$locale_prog\"`locale -a 2>/dev/null | \\\n    sed -e 's/utf8/UTF-8/' | grep UTF-8 | \\\n    while read line; do echo \" \\\"$line\\\",\"; done;`\n  locale_prog=\"$locale_prog 0 };\n  #include <locale.h>\n  #include <ctype.h>\n\n  int main() {\n    char **localep;\n    for (localep = my_locales; *localep; localep++)\n      if (setlocale(LC_ALL, *localep) && isprint(0xa0))\n\treturn 0;\n    return 1;\n  }\n  \"]\n\n  AC_CACHE_CHECK(if the isprint() function is broken,\n  zsh_cv_c_broken_isprint,\n  [AC_RUN_IFELSE([AC_LANG_SOURCE([[$locale_prog]])],[zsh_cv_c_broken_isprint=yes],[zsh_cv_c_broken_isprint=no],[zsh_cv_c_broken_isprint=no])])\n  if test x$zsh_cv_c_broken_isprint = xyes; then\n    AC_DEFINE(BROKEN_ISPRINT)\n  fi\nfi\n\ndnl\ndnl musl support\ndnl\nAH_TEMPLATE([LIBC_MUSL],\n[Define to 1 if musl is being used as the C library])\nAC_ARG_ENABLE(libc-musl,\nAS_HELP_STRING([--enable-libc-musl],[compile with musl as the C library]),\n[if test x$enableval = xyes; then\n  AC_DEFINE(LIBC_MUSL)\nfi])\n\ndnl\ndnl static user lookup\ndnl\nAC_ARG_ENABLE(dynamic-nss,\n\t      AS_HELP_STRING([--disable-dynamic-nss],[do not call\n\t\t\t      functions that will require dynamic NSS\n\t\t\t      modules]),\n[zsh_cv_c_dynamic_nss=$enableval],\n[])\n\nAH_TEMPLATE([DISABLE_DYNAMIC_NSS],\n[Define to 1 if you want to avoid calling functions that will require\n dynamic NSS modules.])\nif test x$zsh_cv_c_dynamic_nss = xno; then\n  AC_DEFINE(DISABLE_DYNAMIC_NSS)\nfi\n\ndnl ---------------\ndnl dynamic loading\ndnl ---------------\nAH_TEMPLATE([HPUX10DYNAMIC],\n[Define to 1 if you want to use dynamically loaded modules on HPUX 10.])\nL=N\nINSTLIB=\"install.bin-\\$(L)\"\nUNINSTLIB=\"uninstall.bin-\\$(L)\"\nLINKMODS=NOLINKMODS\nMOD_EXPORT=\nMOD_IMPORT_VARIABLE=\nMOD_IMPORT_FUNCTION=\naixdynamic=no\nhpuxdynamic=no\nif test \"$ac_cv_func_load\"      = yes &&\n   test \"$ac_cv_func_unload\"    = yes &&\n   test \"$ac_cv_func_loadbind\"  = yes &&\n   test \"$ac_cv_func_loadquery\" = yes; then\n  dnl Force AIXDYNAMIC even on newer versions that have dl family\n  if test \"x$dynamic\" = xyes; then\n    aixdynamic=yes\n  fi\nelif test \"$ac_cv_func_dlopen\"  != yes ||\n     test \"$ac_cv_func_dlsym\"   != yes ||\n     test \"$ac_cv_func_dlerror\" != yes; then\n  if test \"$ac_cv_func_shl_load\" != yes ||\n     test \"$ac_cv_func_shl_unload\" != yes ||\n     test \"$ac_cv_func_shl_findsym\" != yes; then\n    dynamic=no\n  elif test \"x$dynamic\" = xyes; then\n    hpuxdynamic=yes\n    DL_EXT=\"${DL_EXT=sl}\"\n    dnl autoheader won't allow us to define anything which isn't\n    dnl going into a header, and we can't undefine anything, so\n    dnl just define this anyway and rely on the later tests to\n    dnl define DYNAMIC or not.\n    AC_DEFINE(HPUX10DYNAMIC)dnl\n  fi\nfi\n\ntest -n \"$GCC\" && LDARG=-Wl,\n\nAH_TEMPLATE([DLSYM_NEEDS_UNDERSCORE],\n[Define to 1 if an underscore has to be prepended to dlsym() argument.])\nAH_TEMPLATE([DYNAMIC_NAME_CLASH_OK],\n[Define to 1 if multiple modules defining the same symbol are OK.])\nif test \"x$aixdynamic\" = xyes; then\n  DL_EXT=\"${DL_EXT=so}\"\n  DLLD=\"${DLLD=$CC}\"\n  zsh_cv_func_dlsym_needs_underscore=no\n  if test -n \"$GCC\"; then\n    DLLDFLAGS=${DLLDFLAGS=-shared}\n  else\n    DLLDFLAGS=${DLLDFLAGS=-bM:SRE}\n  fi\n  DLLDFLAGS=${DLLDFLAGS=}\n  EXTRA_LDFLAGS=${EXTRA_LDFLAGS=}\n  EXPOPT=${LDARG}-bE:\n  IMPOPT=${LDARG}-bI:\n  zsh_cv_sys_dynamic_clash_ok=\"${zsh_cv_sys_dynamic_clash_ok=yes}\"\n  zsh_cv_sys_dynamic_rtld_global=\"${zsh_cv_sys_dynamic_rtld_global=yes}\"\n  zsh_cv_sys_dynamic_execsyms=\"${zsh_cv_sys_dynamic_execsyms=yes}\"\n  zsh_cv_sys_dynamic_strip_exe=\"${zsh_cv_sys_dynamic_strip_exe=yes}\"\n  zsh_cv_sys_dynamic_strip_lib=\"${zsh_cv_sys_dynamic_strip_lib=yes}\"\n  zsh_cv_shared_environ=\"${zsh_cv_shared_environ=yes}\"\nelif test \"$host_os\" = cygwin; then\n  DL_EXT=\"${DL_EXT=dll}\"\n##DLLD=\"${DLLD=dllwrap}\"\n  DLLD=\"${DLLD=$CC}\"\n##DLLDFLAGS=\"${DLLDFLAGS=--export-all-symbols}\"\n  DLLDFLAGS=${DLLDFLAGS=-shared -Wl,--export-all-symbols}\n  zsh_cv_func_dlsym_needs_underscore=no\n  DLLDFLAGS=${DLLDFLAGS=}\n  EXTRA_LDFLAGS=${EXTRA_LDFLAGS=}\n  zsh_cv_sys_dynamic_clash_ok=\"${zsh_cv_sys_dynamic_clash_ok=no}\"\n  zsh_cv_sys_dynamic_rtld_global=\"${zsh_cv_sys_dynamic_rtld_global=yes}\"\n  zsh_cv_sys_dynamic_execsyms=\"${zsh_cv_sys_dynamic_execsyms=no}\"\n  zsh_cv_sys_dynamic_strip_exe=\"${zsh_cv_sys_dynamic_strip_exe=yes}\"\n  zsh_cv_sys_dynamic_strip_lib=\"${zsh_cv_sys_dynamic_strip_lib=yes}\"\n  #\n  # THAT SUCKS! and must be changed\n  #\n  zsh_cv_shared_environ=\"${zsh_cv_shared_environ=yes}\"\n  LINKMODS=LINKMODS\n  MOD_EXPORT=\"__attribute__((__dllexport__))\"\n  MOD_IMPORT_VARIABLE=\"__attribute__((__dllimport__))\"\n  MOD_IMPORT_FUNCTION=\nelif test \"x$dynamic\" = xyes; then\n  AC_CACHE_CHECK(if your system uses ELF binaries,\n   zsh_cv_sys_elf,\n   [AC_RUN_IFELSE([AC_LANG_SOURCE([[/* Test for whether ELF binaries are produced */\n#include <fcntl.h>\n#include <unistd.h>\nint main(int argc, char *argv[])\n{\n\tchar b[4];\n\tint i = open(argv[0],O_RDONLY);\n\tif(i == -1) \n\t\treturn(1); /* fail */\n\tif(read(i,b,4)==4 && b[0]==127 && b[1]=='E' && b[2]=='L' && b[3]=='F')\n\t\treturn(0); /* succeed (yes, it's ELF) */\n\telse\n\t\treturn(1); /* fail */\n}]])],[zsh_cv_sys_elf=yes],[zsh_cv_sys_elf=no],[zsh_cv_sys_elf=yes])])\n\n  # We use [0-9]* in case statements, so need to change quoting\n  changequote(, )\n\n  DL_EXT=\"${DL_EXT=so}\"\n  if test x$zsh_cv_sys_elf = xyes; then\n    case \"$host\" in\n      mips-sni-sysv4*)\n        # Forcibly set ld to native compiler to avoid obscure GCC problems\n\tDLLD=\"${DLLD=/usr/ccs/bin/cc}\"\n\tDLLDARG=\"${LDARG}\"\n      ;;\n      * )\n\tDLLD=\"${DLLD=$CC}\"\n\tDLLDARG=\"${LDARG}\"\n      ;;\n    esac\n  else\n    case \"$host\" in\n      *openbsd*)\n\tcase \"$host_os\" in\n\t  openbsd[01].* | openbsd2.[0-7] | openbsd2.[0-7].*)\n\t    DLLD=\"${DLLD=ld}\"\n\t  ;;\n\t  *)\n\t    DLLD=\"${DLLD=$CC}\"\n\t  ;;\n\tesac\n\tDLLDARG=\"${LDARG}\"\n      ;;\n      *darwin*)\n        DLLD=\"${DLLD=$CC}\"\n        DLLDARG=\"\"\n      ;;\n      *interix*)\n        DLLD=\"${DLLD=$CC}\"\n        DLLDARG=\"\"\n      ;;\n      * )\n\tDLLD=\"${DLLD=ld}\"\n\tDLLDARG=\"\"\n      ;;\n    esac\n  fi\n  if test -n \"$GCC\"; then\n    case \"$host_os\" in\n      hpux*)   DLLDFLAGS=\"${DLLDFLAGS=-shared}\" ;;\n      darwin*) DLCFLAGS=\"${DLCFLAGS=-fno-common}\" ;;\n      interix*) DLCFLAGS=\"${DLCFLAGS=}\" ;;\n      *)       DLCFLAGS=\"${DLCFLAGS=-fPIC}\" ;;\n    esac\n  else\n    case \"$host_os\" in\n      hpux*)\n        DLCFLAGS=\"${DLCFLAGS=+z}\"\n        DLLDFLAGS=\"${DLLDFLAGS=-b}\"\n      ;;\n      sunos*)                DLCFLAGS=\"${DLCFLAGS=-pic}\" ;;\n      solaris*|sysv4*|esix*) DLCFLAGS=\"${DLCFLAGS=-KPIC}\" ;;\n    esac\n  fi\n  case \"$host_os\" in\n    osf*) DLLDFLAGS=\"${DLLDFLAGS=-shared -expect_unresolved '*'}\" ;;\n    *freebsd*|*netbsd*|linux*|irix*|gnu*|interix*|dragonfly*|haiku*) DLLDFLAGS=\"${DLLDFLAGS=-shared}\" ;;\n    sunos*)       DLLDFLAGS=\"${DLLDFLAGS=-assert nodefinitions}\" ;;\n    sysv4*|esix*) DLLDFLAGS=\"${DLLDFLAGS=-G $ldflags}\" ;;\n    aix*)         DLLDFLAGS=\"${DLLDFLAGS=-G -bexpall -lc}\" ;;\n    solaris*|sysv4*|esix*) DLLDFLAGS=\"${DLLDFLAGS=-G}\" ;;\n    darwin[[0-9]].*|darwin1?.*|darwin2[01].*)\n                  DLLDFLAGS=\"${DLLDFLAGS=-bundle -flat_namespace -undefined suppress}\" ;;\n    darwin*)      DLLDFLAGS=\"${DLLDFLAGS=-bundle -flat_namespace -undefined dynamic_lookup}\" ;;\n    beos*) DLLDFLAGS=\"${DLLDFLAGS=-nostart}\" ;;\n    openbsd*)\n      if test x$zsh_cv_sys_elf = xyes; then\n\tDLLDFLAGS=\"${DLLDFLAGS=-shared -fPIC}\"\n      else\n\tcase \"$host_os\" in\n\t  openbsd[01].* | openbsd2.[0-7] | openbsd2.[0-7].*)\n\t   DLLDFLAGS=\"${DLLDFLAGS=-Bshareable}\"\n\t  ;;\n\t  *)\n\t    DLLDFLAGS=\"${DLLDFLAGS=-shared -fPIC}\"\n\t  ;;\n\tesac\n      fi\n    ;;\n  esac\n  case \"$host\" in\n    *-hpux*)  EXTRA_LDFLAGS=\"${EXTRA_LDFLAGS=-Wl,-E}\" ;;\n    *openbsd*)\n       if test x$zsh_cv_sys_elf = xyes; then\n\t EXTRA_LDFLAGS=\"${EXTRA_LDFLAGS=-Wl,-E}\"\n       fi\n    ;;\n    mips-sni-sysv4)\n      #\n      # unfortunately, we have different compilers\n      # that need different flags\n      #\n      if test -n \"$GCC\"; then\n        sni_cc_version=GCC\n      else\n        sni_cc_version=`$CC -V 2>&1 | head -1`\n      fi\n      case \"$sni_cc_version\" in\n        *CDS*|GCC )\n         EXTRA_LDFLAGS=\"${EXTRA_LDFLAGS=-Wl,-Blargedynsym}\"\n       ;;\n       * )\n         EXTRA_LDFLAGS=\"${EXTRA_LDFLAGS=-LD-Blargedynsym}\"\n       ;;\n      esac\n    ;;\n    *-beos*)\n      # gcc on BeOS doesn't like -rdynamic...\n      EXTRA_LDFLAGS=\"${EXTRA_LDFLAGS= }\"\n      # also, dlopen() at least in Zeta respects $LIBRARY_PATH, so needs %A added to it.\n      export LIBRARY_PATH=\"$LIBRARY_PATH:%A/\"\n    ;;\n    *-haiku*)\n      # \n    ;;\n  esac\n\n  # Done with our shell code, so restore autotools quoting\n  changequote([, ])\n\nAC_CACHE_CHECK(if we can use -rdynamic, zsh_cv_rdynamic_available,\nold_LDFLAGS=\"$LDFLAGS\"\nLDFLAGS=\"$LDFLAGS -rdynamic\"\nAC_LINK_IFELSE([AC_LANG_PROGRAM([[]], [[]])],[zsh_cv_rdynamic_available=yes\nEXTRA_LDFLAGS=\"${EXTRA_LDFLAGS=-rdynamic}\"],[zsh_cvs_rdynamic_available=no])\nLDFLAGS=\"$old_LDFLAGS\")\n  AC_CACHE_CHECK(if your dlsym() needs a leading underscore,\n   zsh_cv_func_dlsym_needs_underscore,\n   [echo failed >conftestval && cat >conftest.c <<EOM\nvoid fred () { }\nEOM\n    AC_TRY_COMMAND($CC -c $CFLAGS $CPPFLAGS $DLCFLAGS conftest.c 1>&AS_MESSAGE_LOG_FD) &&\n    AC_TRY_COMMAND($DLLD $LDFLAGS $DLLDFLAGS -o conftest.$DL_EXT conftest.o 1>&AS_MESSAGE_LOG_FD) &&\n    AC_RUN_IFELSE([AC_LANG_SOURCE([[\n#include <stdio.h>\n#ifdef HPUX10DYNAMIC\n#include <dl.h>\n#define RTLD_LAZY BIND_DEFERRED\n#define RTLD_GLOBAL DYNAMIC_PATH\n\nchar *zsh_gl_sym_addr ;\n\n#define dlopen(file,mode) (void *)shl_load((file), (mode), (long) 0)\n#define dlclose(handle) shl_unload((shl_t)(handle))\n#define dlsym(handle,name) (zsh_gl_sym_addr=0,shl_findsym((shl_t *)&(handle),name,TYPE_UNDEFINED,&zsh_gl_sym_addr), (void *)zsh_gl_sym_addr)\n#define dlerror() 0\n#else\n#ifdef HAVE_DLFCN_H\n#include <dlfcn.h>\n#else\n#include <sys/types.h>\n#include <nlist.h>\n#include <link.h>\n#endif\n#endif\n#ifndef RTLD_LAZY\n#define RTLD_LAZY 1\n#endif\n\nextern int fred() ;\n\nint main()\n{\n    void * handle ;\n    void * symbol ;\n    FILE *f=fopen(\"conftestval\", \"w\");\n    if (!f) return(1);\n    handle = dlopen(\"./conftest.$DL_EXT\", RTLD_LAZY) ;\n    if (handle == NULL) {\n        fprintf (f, \"dlopen failed\") ;\n            return(1);\n    }\n    symbol = dlsym(handle, \"fred\") ;\n    if (symbol == NULL) {\n                /* try putting a leading underscore */\n        symbol = dlsym(handle, \"_fred\") ;\n        if (symbol == NULL) {\n            fprintf (f, \"dlsym failed\") ;\n                return(1);\n                }\n        fprintf (f, \"yes\") ;\n    }\n    else\n        fprintf (f, \"no\") ;\n    return(0);\n}]])],[zsh_cv_func_dlsym_needs_underscore=`cat conftestval`],[zsh_cv_func_dlsym_needs_underscore=failed\n    dynamic=no],[zsh_cv_func_dlsym_needs_underscore=no])])\n  if test \"x$zsh_cv_func_dlsym_needs_underscore\" = xyes; then\n    AC_DEFINE(DLSYM_NEEDS_UNDERSCORE)\n  elif test \"x$zsh_cv_func_dlsym_needs_underscore\" != xno; then\n    dnl Do not cache failed value\n    unset zsh_cv_func_dlsym_needs_underscore\n  fi\nfi\n\nif test \"x$dynamic\" = xyes; then\n  zsh_SHARED_VARIABLE([environ], [char **])\n  test \"$zsh_cv_shared_environ\" = yes || dynamic=no\n  if test \"$ac_cv_func_tgetent\" = yes; then\n    zsh_SHARED_FUNCTION([tgetent])\n  fi\n  if test \"$ac_cv_func_tigetstr\" = yes; then\n    zsh_SHARED_FUNCTION([tigetstr])\n  fi\nfi\n\nif test \"x$dynamic\" = xyes; then\n  zsh_SYS_DYNAMIC_CLASH\n  zsh_SYS_DYNAMIC_GLOBAL\n  RTLD_GLOBAL_OK=$zsh_cv_sys_dynamic_rtld_global\n  zsh_SYS_DYNAMIC_EXECSYMS\n  if test \"$zsh_cv_sys_dynamic_execsyms\" != yes; then\n    L=L\n  fi\n  zsh_SYS_DYNAMIC_STRIP_EXE\n  zsh_SYS_DYNAMIC_STRIP_LIB\n  if $strip_exeldflags && test \"$zsh_cv_sys_dynamic_strip_exe\" = yes; then\n    EXELDFLAGS=\"$EXELDFLAGS -s\"\n  fi\n  if $strip_libldflags && test \"$zsh_cv_sys_dynamic_strip_lib\" = yes; then\n    LIBLDFLAGS=\"$LIBLDFLAGS -s\"\n  fi\n  if test \"$host_os\" = cygwin; then\n    INSTLIB=\"install.cygwin-lib\"\n    UNINSTLIB=\"uninstall.cygwin-lib\"\n  fi\nelse\n  $strip_exeldflags && EXELDFLAGS=\"$EXELDFLAGS -s\"\n  $strip_libldflags && LIBLDFLAGS=\"$LIBLDFLAGS -s\"\n  RTLD_GLOBAL_OK=no\nfi\n\nAH_TEMPLATE([DYNAMIC],\n[Define to 1 if you want to use dynamically loaded modules.])\nif test \"x$dynamic\" = xyes; then\n  D=D\n  AC_DEFINE(DYNAMIC)dnl\nelse\n  D=N\nfi\n\nAH_TEMPLATE([AIXDYNAMIC],\n[Define to 1 if you want to use dynamically loaded modules on AIX.])\nif test \"x$aixdynamic\" = xyes; then\n  E=E\n  AC_DEFINE(AIXDYNAMIC)dnl\nelse\n  E=N\nfi\n\nif test \"x$zsh_cv_sys_dynamic_clash_ok\" = xyes; then\n  SHORTBOOTNAMES=yes\nelse\n  SHORTBOOTNAMES=no\nfi\nAC_SUBST(SHORTBOOTNAMES)\n\nAC_SUBST(INSTLIB)dnl\nAC_SUBST(UNINSTLIB)dnl\n\nif test \"$host_os\" = cygwin; then\n  EXTRAZSHOBJS=\"$EXTRAZSHOBJS zsh.res.o\"\nfi\n\nAC_DEFINE_UNQUOTED(DL_EXT, \"$DL_EXT\",\n[The extension used for dynamically loaded modules.])dnl\nAC_SUBST(D)dnl\nAC_SUBST(DL_EXT)dnl\nAC_SUBST(DLLD)dnl\nAC_SUBST(DLCFLAGS)dnl\nAC_SUBST(DLLDFLAGS)dnl\nAC_SUBST(E)dnl\nAC_SUBST(EXTRA_LDFLAGS)dnl\nAC_SUBST(EXPOPT)dnl\nAC_SUBST(IMPOPT)dnl\nAC_SUBST(L)dnl\nAC_SUBST(LINKMODS)dnl\nAC_SUBST(MOD_EXPORT)dnl\nAC_SUBST(MOD_IMPORT_VARIABLE)dnl\nAC_SUBST(MOD_IMPORT_FUNCTION)dnl\nAC_SUBST(EXTRAZSHOBJS)dnl\n\n# Generate config.modules.  We look for *.mdd files in first and second\n# level subdirectories.  Any existing line not containing 'auto=y' will be\n# retained, provided the .mdd file itself was found.\nCONFIG_MODULES=./config.modules\ncat <<EOM > ${CONFIG_MODULES}.sh\nsrcdir=\"$srcdir\"\ndynamic=\"$dynamic\"\nCONFIG_MODULES=\"${CONFIG_MODULES}\"\nEOM\ncat <<\\EOM >> ${CONFIG_MODULES}.sh\necho \"creating ${CONFIG_MODULES}\"\nuserlist=\" \"\nif test -f ${CONFIG_MODULES}; then\n  userlist=\"`sed -e '/^#/d' -e '/auto=y/d' -e 's/ .*/ /' -e 's/^name=/ /' \\\n        ${CONFIG_MODULES}`\"\n  mv ${CONFIG_MODULES} ${CONFIG_MODULES}.old\nelse\n  # Save testing for existence each time.\n  echo > ${CONFIG_MODULES}.old\nfi\n(echo \"# Edit this file to change the way modules are loaded.\"\necho \"# The format is strict; do not break lines or add extra spaces.\"\necho \"# Run \\`make prep' if you change anything here after compiling\"\necho \"# (there is no need if you change this just after the first time\"\necho \"# you run \\`configure').\"\necho \"#\"\necho \"# Values of \\`link' are \\`static', \\`dynamic' or \\`no' to compile the\"\necho \"# module into the shell, link it in at run time, or not use it at all.\"\necho \"# In the final case, no attempt will be made to compile it.\"\necho \"# Use \\`static' or \\`no' if you do not have dynamic loading.\"\necho \"#\"\necho \"# Values of \\`load' are \\`yes' or \\`no'; if yes, any builtins etc.\"\necho \"# provided by the module will be autoloaded by the main shell\"\necho \"# (so long as \\`link' is not set to \\`no').\"\necho \"#\"\necho \"# Values of \\`auto' are \\`yes' or \\`no'. configure sets the value to\"\necho \"# \\`yes'.  If you set it by hand to \\`no', the line will be retained\"\necho \"# when the file is regenerated in future.\"\necho \"#\"\necho \"# Note that the \\`functions' entry extends to the end of the line.\"\necho \"# It should not be quoted; it is used verbatim to find files to install.\"\necho \"#\"\necho \"# You will need to run \\`config.status --recheck' if you add a new\"\necho \"# module.\"\necho \"#\"\necho \"# You should not change the values for the pseudo-module zsh/main,\"\necho \"# which is the main shell (apart from the functions entry).\"\nEOM\ndnl The autoconf macros are only available in configure, not\ndnl config.status, and only change when configure is rerun.\ndnl So we need to run the autoconf tests here and store the results.\ndnl We then generate config.modules, preserving any user-generated\ndnl information, from config.status.\nfor modfile in `cd ${srcdir}; echo */*.mdd */*/*.mdd`; do\n  name=\n  link=\n  load=\n  functions=\n  result=\n  . ${srcdir}/$modfile\n  if test x$name != x && test x\"$link\" != x; then\n    case \"$link\" in\n      *\\ *) eval \"link=\\`$link\\`\"\n\t    ;;\n    esac\n    case \"${load}\" in\n      y*) load=\" load=yes\"\n\t  ;;\n      *) load=\" load=no\"\n\t ;;\n    esac\n    if test \"x$functions\" != x; then\n      # N.B. no additional quotes\n      f=\" functions=$functions\"\n    else\n      f=\n    fi\n    case \"$link\" in\n      static) result=\"name=$name modfile=$modfile link=static auto=yes${load}$f\"\n\t      ;;\n      dynamic) if test x$dynamic != xno; then\n\t\t  result=\"name=$name modfile=$modfile link=dynamic\\\n auto=yes${load}$f\"\n\t       else\n\t\t result=\"name=$name modfile=$modfile link=no\\\n auto=yes load=no$f\"\n\t       fi\n\t       ;;\n      either) if test x$dynamic != xno; then\n\t\tresult=\"name=$name modfile=$modfile link=dynamic\\\n auto=yes${load}$f\"\n\t      else\n\t\tresult=\"name=$name modfile=$modfile link=static\\\n auto=yes${load}$f\"\n\t      fi\n\t      ;;\n       *) result=\"name=$name modfile=$modfile link=no auto=yes load=no$f\"\n\t  ;;\n    esac\ndnl $result is the default output for config.modules.  We generate\ndnl code to check if we should use this.\ncat <<EOM >> ${CONFIG_MODULES}.sh\ncase \"\\$userlist\" in\n  *\" $name \"*) grep \"^name=$name \" \\${CONFIG_MODULES}.old;;\n  *) echo \"$result\";;\nesac\nEOM\n  fi\ndone\ncat <<\\EOM >> ${CONFIG_MODULES}.sh\n) >${CONFIG_MODULES}\nrm -f ${CONFIG_MODULES}.old\nEOM\n\ndnl AH_TOP replaces the code which used to appear at the top\ndnl of acconfig.h.\nAH_TOP([/***** begin user configuration section *****/\n\n/* Define this to be the location of your password file */\n#define PASSWD_FILE \"/etc/passwd\"\n\n/* Define this if you use \"suspended\" instead of \"stopped\" */\n#define USE_SUSPENDED 1\n \n/* The default history buffer size in lines */\n#define DEFAULT_HISTSIZE 30\n\n/* The default editor for the fc builtin */\n#define DEFAULT_FCEDIT \"vi\"\n\n/* The default prefix for temporary files */\n#define DEFAULT_TMPPREFIX \"/tmp/zsh\"\n\n/***** end of user configuration section            *****/\n/***** shouldn't have to change anything below here *****/\n\n])\n\nCLEAN_MK=\"${srcdir}/Config/clean.mk\"\nCONFIG_MK=\"${srcdir}/Config/config.mk\"\ndnl defs.mk is in the build tree, not the source tree\nDEFS_MK=\"Config/defs.mk\"\nVERSION_MK=\"${srcdir}/Config/version.mk\"\n\nAC_SUBST_FILE(CLEAN_MK)dnl\nAC_SUBST_FILE(CONFIG_MK)dnl\nAC_SUBST_FILE(DEFS_MK)dnl\nAC_SUBST_FILE(VERSION_MK)dnl\n\nAC_CONFIG_FILES(Config/defs.mk Makefile Doc/Makefile Etc/Makefile \\\nSrc/Makefile Test/Makefile)\nAC_CONFIG_COMMANDS([config.modules], [. ./config.modules.sh])\nAC_CONFIG_COMMANDS([stamp-h], [echo >stamp-h])\n\nAC_OUTPUT\n\ndnl Copy pre-built man pages and help files, for tarball out-of-tree builds.\nfor manpage in `cd ${srcdir} && echo Doc/*.1`; do\n  if test x\"$manpage\" != x\"Doc/*.1\" && ! test -e \"${manpage}\"; then\n    cp ${srcdir}/${manpage} ./Doc/\n  fi\ndone\nif ! test -e Doc/help.txt; then\n  cp ${srcdir}/Doc/help.txt ./Doc/\nfi\nmkdir -p ./Doc/help\nfor helpfile in `cd ${srcdir} && echo Doc/help/*`; do\n  if test x\"$helpfile\" != x\"Doc/help/*\" && ! test -e \"${helpfile}\"; then\n    cp ${srcdir}/${helpfile} ./Doc/help/\n  fi\ndone\n\neval \"zshbin1=${bindir}\"\neval \"zshbin2=${zshbin1}\"\neval \"zshman1=${mandir}\"\neval \"zshman2=${zshman1}\"\neval \"zshinfo1=${infodir}\"\neval \"zshinfo2=${zshinfo1}\"\neval \"zshfndir1=${fndir}\"\neval \"zshfndir2=${zshfndir1}\"\n\necho \"\nzsh configuration\n-----------------\nzsh version               : ${VERSION}\nhost operating system     : ${host_cpu}-${host_vendor}-${host_os}\nsource code location      : ${srcdir}\ncompiler                  : ${CC}\npreprocessor flags        : ${CPPFLAGS}\nexecutable compiler flags : ${CFLAGS}\"\nif test \"x$dynamic\" = xyes; then\n  echo \"\\\nmodule compiler flags     : ${CFLAGS} ${DLCFLAGS}\"\nfi\necho \"\\\nexecutable linker flags   : ${LDFLAGS} ${EXELDFLAGS} ${EXTRA_LDFLAGS}\"\nif test \"x$dynamic\" = xyes; then\n  echo \"\\\nmodule linker flags       : ${LDFLAGS} ${LIBLDFLAGS} ${DLLDFLAGS}\"\nfi\necho \"\\\nlibrary flags             : ${LIBS}\ninstallation basename     : ${tzsh_name}\nbinary install path       : ${zshbin2}\nman page install path     : ${zshman2}\ninfo install path         : ${zshinfo2}\"\nif test \"$zshfndir2\" != no; then\n  echo \"functions install path    : ${zshfndir2}\"\nfi\nif test \"x$additionalfpath\" != x; then\n  echo \"additional fpath entries  : ${additionalfpath}\"\nfi\necho \"See config.modules for installed modules and functions.\n\"\n\nif test x$zsh_cv_c_unicode_support != xyes; then\n  if test \"x$zfuncs_absent\" = x; then\n    # The user opted out.\n    AC_MSG_WARN([You have chosen to build without multibyte support.])\n    AC_MSG_WARN([This configuration may not be suitable for production use. It is known to cause errors in 'make test'. We strongly recommend to re-run configure with --enable-multibyte.])\n  else\n    # Some requisite functions are missing.\n    AC_MSG_WARN([Multibyte support cannot be enabled: some standard library functions are missing: $zfuncs_absent])\n    AC_MSG_WARN([This configuration may not be suitable for production use. It is known to cause errors in 'make test'. If your system provides those functions, we recommend to re-run configure appropriately.])\n    # If your system doesn't have those functions, consider patching the\n    # test suite and sending the patch to zsh-workers@ for inclusion.\n  fi\nfi\n\nexit 0\n"
        },
        {
          "name": "install-sh",
          "type": "blob",
          "size": 12.875,
          "content": "#!/bin/sh\n# install - install a program, script, or datafile\n\nscriptversion=2006-10-14.15\n\n# This originates from X11R5 (mit/util/scripts/install.sh), which was\n# later released in X11R6 (xc/config/util/install.sh) with the\n# following copyright and license.\n#\n# Copyright (C) 1994 X Consortium\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to\n# deal in the Software without restriction, including without limitation the\n# rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n# sell copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in\n# all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n# X CONSORTIUM BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN\n# AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNEC-\n# TION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n#\n# Except as contained in this notice, the name of the X Consortium shall not\n# be used in advertising or otherwise to promote the sale, use or other deal-\n# ings in this Software without prior written authorization from the X Consor-\n# tium.\n#\n#\n# FSF changes to this file are in the public domain.\n#\n# Calling this script install-sh is preferred over install.sh, to prevent\n# `make' implicit rules from creating a file called install from it\n# when there is no Makefile.\n#\n# This script is compatible with the BSD install script, but was written\n# from scratch.\n\nnl='\n'\nIFS=\" \"\"\t$nl\"\n\n# set DOITPROG to echo to test this script\n\n# Don't use :- since 4.3BSD and earlier shells don't like it.\ndoit=\"${DOITPROG-}\"\nif test -z \"$doit\"; then\n  doit_exec=exec\nelse\n  doit_exec=$doit\nfi\n\n# Put in absolute file names if you don't have them in your path;\n# or use environment vars.\n\nmvprog=\"${MVPROG-mv}\"\ncpprog=\"${CPPROG-cp}\"\nchmodprog=\"${CHMODPROG-chmod}\"\nchownprog=\"${CHOWNPROG-chown}\"\nchgrpprog=\"${CHGRPPROG-chgrp}\"\nstripprog=\"${STRIPPROG-strip}\"\nrmprog=\"${RMPROG-rm}\"\nmkdirprog=\"${MKDIRPROG-mkdir}\"\n\nposix_glob=\nposix_mkdir=\n\n# Desired mode of installed file.\nmode=0755\n\nchmodcmd=$chmodprog\nchowncmd=\nchgrpcmd=\nstripcmd=\nrmcmd=\"$rmprog -f\"\nmvcmd=\"$mvprog\"\nsrc=\ndst=\ndir_arg=\ndstarg=\nno_target_directory=\n\nusage=\"Usage: $0 [OPTION]... [-T] SRCFILE DSTFILE\n   or: $0 [OPTION]... SRCFILES... DIRECTORY\n   or: $0 [OPTION]... -t DIRECTORY SRCFILES...\n   or: $0 [OPTION]... -d DIRECTORIES...\n\nIn the 1st form, copy SRCFILE to DSTFILE.\nIn the 2nd and 3rd, copy all SRCFILES to DIRECTORY.\nIn the 4th, create DIRECTORIES.\n\nOptions:\n-c         (ignored)\n-d         create directories instead of installing files.\n-g GROUP   $chgrpprog installed files to GROUP.\n-m MODE    $chmodprog installed files to MODE.\n-o USER    $chownprog installed files to USER.\n-s         $stripprog installed files.\n-t DIRECTORY  install into DIRECTORY.\n-T         report an error if DSTFILE is a directory.\n--help     display this help and exit.\n--version  display version info and exit.\n\nEnvironment variables override the default commands:\n  CHGRPPROG CHMODPROG CHOWNPROG CPPROG MKDIRPROG MVPROG RMPROG STRIPPROG\n\"\n\nwhile test $# -ne 0; do\n  case $1 in\n    -c) shift\n        continue;;\n\n    -d) dir_arg=true\n        shift\n        continue;;\n\n    -g) chgrpcmd=\"$chgrpprog $2\"\n        shift\n        shift\n        continue;;\n\n    --help) echo \"$usage\"; exit $?;;\n\n    -m) mode=$2\n        shift\n        shift\n\tcase $mode in\n\t  *' '* | *'\t'* | *'\n'*\t  | *'*'* | *'?'* | *'['*)\n\t    echo \"$0: invalid mode: $mode\" >&2\n\t    exit 1;;\n\tesac\n        continue;;\n\n    -o) chowncmd=\"$chownprog $2\"\n        shift\n        shift\n        continue;;\n\n    -s) stripcmd=$stripprog\n        shift\n        continue;;\n\n    -t) dstarg=$2\n\tshift\n\tshift\n\tcontinue;;\n\n    -T) no_target_directory=true\n\tshift\n\tcontinue;;\n\n    --version) echo \"$0 $scriptversion\"; exit $?;;\n\n    --)\tshift\n\tbreak;;\n\n    -*)\techo \"$0: invalid option: $1\" >&2\n\texit 1;;\n\n    *)  break;;\n  esac\ndone\n\nif test $# -ne 0 && test -z \"$dir_arg$dstarg\"; then\n  # When -d is used, all remaining arguments are directories to create.\n  # When -t is used, the destination is already specified.\n  # Otherwise, the last argument is the destination.  Remove it from $@.\n  for arg\n  do\n    if test -n \"$dstarg\"; then\n      # $@ is not empty: it contains at least $arg.\n      set fnord \"$@\" \"$dstarg\"\n      shift # fnord\n    fi\n    shift # arg\n    dstarg=$arg\n  done\nfi\n\nif test $# -eq 0; then\n  if test -z \"$dir_arg\"; then\n    echo \"$0: no input file specified.\" >&2\n    exit 1\n  fi\n  # It's OK to call `install-sh -d' without argument.\n  # This can happen when creating conditional directories.\n  exit 0\nfi\n\nif test -z \"$dir_arg\"; then\n  trap '(exit $?); exit' 1 2 13 15\n\n  # Set umask so as not to create temps with too-generous modes.\n  # However, 'strip' requires both read and write access to temps.\n  case $mode in\n    # Optimize common cases.\n    *644) cp_umask=133;;\n    *755) cp_umask=22;;\n\n    *[0-7])\n      if test -z \"$stripcmd\"; then\n\tu_plus_rw=\n      else\n\tu_plus_rw='% 200'\n      fi\n      cp_umask=`expr '(' 777 - $mode % 1000 ')' $u_plus_rw`;;\n    *)\n      if test -z \"$stripcmd\"; then\n\tu_plus_rw=\n      else\n\tu_plus_rw=,u+rw\n      fi\n      cp_umask=$mode$u_plus_rw;;\n  esac\nfi\n\nfor src\ndo\n  # Protect names starting with `-'.\n  case $src in\n    -*) src=./$src ;;\n  esac\n\n  if test -n \"$dir_arg\"; then\n    dst=$src\n    dstdir=$dst\n    test -d \"$dstdir\"\n    dstdir_status=$?\n  else\n\n    # Waiting for this to be detected by the \"$cpprog $src $dsttmp\" command\n    # might cause directories to be created, which would be especially bad\n    # if $src (and thus $dsttmp) contains '*'.\n    if test ! -f \"$src\" && test ! -d \"$src\"; then\n      echo \"$0: $src does not exist.\" >&2\n      exit 1\n    fi\n\n    if test -z \"$dstarg\"; then\n      echo \"$0: no destination specified.\" >&2\n      exit 1\n    fi\n\n    dst=$dstarg\n    # Protect names starting with `-'.\n    case $dst in\n      -*) dst=./$dst ;;\n    esac\n\n    # If destination is a directory, append the input filename; won't work\n    # if double slashes aren't ignored.\n    if test -d \"$dst\"; then\n      if test -n \"$no_target_directory\"; then\n\techo \"$0: $dstarg: Is a directory\" >&2\n\texit 1\n      fi\n      dstdir=$dst\n      dst=$dstdir/`basename \"$src\"`\n      dstdir_status=0\n    else\n      # Prefer dirname, but fall back on a substitute if dirname fails.\n      dstdir=`\n\t(dirname \"$dst\") 2>/dev/null ||\n\texpr X\"$dst\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t     X\"$dst\" : 'X\\(//\\)[^/]' \\| \\\n\t     X\"$dst\" : 'X\\(//\\)$' \\| \\\n\t     X\"$dst\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n\techo X\"$dst\" |\n\t    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t\t   s//\\1/\n\t\t   q\n\t\t }\n\t\t /^X\\(\\/\\/\\)[^/].*/{\n\t\t   s//\\1/\n\t\t   q\n\t\t }\n\t\t /^X\\(\\/\\/\\)$/{\n\t\t   s//\\1/\n\t\t   q\n\t\t }\n\t\t /^X\\(\\/\\).*/{\n\t\t   s//\\1/\n\t\t   q\n\t\t }\n\t\t s/.*/./; q'\n      `\n\n      test -d \"$dstdir\"\n      dstdir_status=$?\n    fi\n  fi\n\n  obsolete_mkdir_used=false\n\n  if test $dstdir_status != 0; then\n    case $posix_mkdir in\n      '')\n\t# Create intermediate dirs using mode 755 as modified by the umask.\n\t# This is like FreeBSD 'install' as of 1997-10-28.\n\tumask=`umask`\n\tcase $stripcmd.$umask in\n\t  # Optimize common cases.\n\t  *[2367][2367]) mkdir_umask=$umask;;\n\t  .*0[02][02] | .[02][02] | .[02]) mkdir_umask=22;;\n\n\t  *[0-7])\n\t    mkdir_umask=`expr $umask + 22 \\\n\t      - $umask % 100 % 40 + $umask % 20 \\\n\t      - $umask % 10 % 4 + $umask % 2\n\t    `;;\n\t  *) mkdir_umask=$umask,go-w;;\n\tesac\n\n\t# With -d, create the new directory with the user-specified mode.\n\t# Otherwise, rely on $mkdir_umask.\n\tif test -n \"$dir_arg\"; then\n\t  mkdir_mode=-m$mode\n\telse\n\t  mkdir_mode=\n\tfi\n\n\tposix_mkdir=false\n\tcase $umask in\n\t  *[123567][0-7][0-7])\n\t    # POSIX mkdir -p sets u+wx bits regardless of umask, which\n\t    # is incompatible with FreeBSD 'install' when (umask & 300) != 0.\n\t    ;;\n\t  *)\n\t    tmpdir=${TMPDIR-/tmp}/ins$RANDOM-$$\n\t    trap 'ret=$?; rmdir \"$tmpdir/d\" \"$tmpdir\" 2>/dev/null; exit $ret' 0\n\n\t    if (umask $mkdir_umask &&\n\t\texec $mkdirprog $mkdir_mode -p -- \"$tmpdir/d\") >/dev/null 2>&1\n\t    then\n\t      if test -z \"$dir_arg\" || {\n\t\t   # Check for POSIX incompatibilities with -m.\n\t\t   # HP-UX 11.23 and IRIX 6.5 mkdir -m -p sets group- or\n\t\t   # other-writeable bit of parent directory when it shouldn't.\n\t\t   # FreeBSD 6.1 mkdir -m -p sets mode of existing directory.\n\t\t   ls_ld_tmpdir=`ls -ld \"$tmpdir\"`\n\t\t   case $ls_ld_tmpdir in\n\t\t     d????-?r-*) different_mode=700;;\n\t\t     d????-?--*) different_mode=755;;\n\t\t     *) false;;\n\t\t   esac &&\n\t\t   $mkdirprog -m$different_mode -p -- \"$tmpdir\" && {\n\t\t     ls_ld_tmpdir_1=`ls -ld \"$tmpdir\"`\n\t\t     test \"$ls_ld_tmpdir\" = \"$ls_ld_tmpdir_1\"\n\t\t   }\n\t\t }\n\t      then posix_mkdir=:\n\t      fi\n\t      rmdir \"$tmpdir/d\" \"$tmpdir\"\n\t    else\n\t      # Remove any dirs left behind by ancient mkdir implementations.\n\t      rmdir ./$mkdir_mode ./-p ./-- 2>/dev/null\n\t    fi\n\t    trap '' 0;;\n\tesac;;\n    esac\n\n    if\n      $posix_mkdir && (\n\tumask $mkdir_umask &&\n\t$doit_exec $mkdirprog $mkdir_mode -p -- \"$dstdir\"\n      )\n    then :\n    else\n\n      # The umask is ridiculous, or mkdir does not conform to POSIX,\n      # or it failed possibly due to a race condition.  Create the\n      # directory the slow way, step by step, checking for races as we go.\n\n      case $dstdir in\n\t/*) prefix=/ ;;\n\t-*) prefix=./ ;;\n\t*)  prefix= ;;\n      esac\n\n      case $posix_glob in\n        '')\n\t  if (set -f) 2>/dev/null; then\n\t    posix_glob=true\n\t  else\n\t    posix_glob=false\n\t  fi ;;\n      esac\n\n      oIFS=$IFS\n      IFS=/\n      $posix_glob && set -f\n      set fnord $dstdir\n      shift\n      $posix_glob && set +f\n      IFS=$oIFS\n\n      prefixes=\n\n      for d\n      do\n\ttest -z \"$d\" && continue\n\n\tprefix=$prefix$d\n\tif test -d \"$prefix\"; then\n\t  prefixes=\n\telse\n\t  if $posix_mkdir; then\n\t    (umask=$mkdir_umask &&\n\t     $doit_exec $mkdirprog $mkdir_mode -p -- \"$dstdir\") && break\n\t    # Don't fail if two instances are running concurrently.\n\t    test -d \"$prefix\" || exit 1\n\t  else\n\t    case $prefix in\n\t      *\\'*) qprefix=`echo \"$prefix\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"`;;\n\t      *) qprefix=$prefix;;\n\t    esac\n\t    prefixes=\"$prefixes '$qprefix'\"\n\t  fi\n\tfi\n\tprefix=$prefix/\n      done\n\n      if test -n \"$prefixes\"; then\n\t# Don't fail if two instances are running concurrently.\n\t(umask $mkdir_umask &&\n\t eval \"\\$doit_exec \\$mkdirprog $prefixes\") ||\n\t  test -d \"$dstdir\" || exit 1\n\tobsolete_mkdir_used=true\n      fi\n    fi\n  fi\n\n  if test -n \"$dir_arg\"; then\n    { test -z \"$chowncmd\" || $doit $chowncmd \"$dst\"; } &&\n    { test -z \"$chgrpcmd\" || $doit $chgrpcmd \"$dst\"; } &&\n    { test \"$obsolete_mkdir_used$chowncmd$chgrpcmd\" = false ||\n      test -z \"$chmodcmd\" || $doit $chmodcmd $mode \"$dst\"; } || exit 1\n  else\n\n    # Make a couple of temp file names in the proper directory.\n    dsttmp=$dstdir/_inst.$$_\n    rmtmp=$dstdir/_rm.$$_\n\n    # Trap to clean up those temp files at exit.\n    trap 'ret=$?; rm -f \"$dsttmp\" \"$rmtmp\" && exit $ret' 0\n\n    # Copy the file name to the temp name.\n    (umask $cp_umask && $doit_exec $cpprog \"$src\" \"$dsttmp\") &&\n\n    # and set any options; do chmod last to preserve setuid bits.\n    #\n    # If any of these fail, we abort the whole thing.  If we want to\n    # ignore errors from any of these, just make sure not to ignore\n    # errors from the above \"$doit $cpprog $src $dsttmp\" command.\n    #\n    { test -z \"$chowncmd\" || $doit $chowncmd \"$dsttmp\"; } \\\n      && { test -z \"$chgrpcmd\" || $doit $chgrpcmd \"$dsttmp\"; } \\\n      && { test -z \"$stripcmd\" || $doit $stripcmd \"$dsttmp\"; } \\\n      && { test -z \"$chmodcmd\" || $doit $chmodcmd $mode \"$dsttmp\"; } &&\n\n    # Now rename the file to the real destination.\n    { $doit $mvcmd -f \"$dsttmp\" \"$dst\" 2>/dev/null \\\n      || {\n\t   # The rename failed, perhaps because mv can't rename something else\n\t   # to itself, or perhaps because mv is so ancient that it does not\n\t   # support -f.\n\n\t   # Now remove or move aside any old file at destination location.\n\t   # We try this two ways since rm can't unlink itself on some\n\t   # systems and the destination file might be busy for other\n\t   # reasons.  In this case, the final cleanup might fail but the new\n\t   # file should still install successfully.\n\t   {\n\t     if test -f \"$dst\"; then\n\t       $doit $rmcmd -f \"$dst\" 2>/dev/null \\\n\t       || { $doit $mvcmd -f \"$dst\" \"$rmtmp\" 2>/dev/null \\\n\t\t     && { $doit $rmcmd -f \"$rmtmp\" 2>/dev/null; :; }; }\\\n\t       || {\n\t\t echo \"$0: cannot unlink or rename $dst\" >&2\n\t\t (exit 1); exit 1\n\t       }\n\t     else\n\t       :\n\t     fi\n\t   } &&\n\n\t   # Now rename the file to the real destination.\n\t   $doit $mvcmd \"$dsttmp\" \"$dst\"\n\t }\n    } || exit 1\n\n    trap '' 0\n  fi\ndone\n\n# Local variables:\n# eval: (add-hook 'write-file-hooks 'time-stamp)\n# time-stamp-start: \"scriptversion=\"\n# time-stamp-format: \"%:y-%02m-%02d.%02H\"\n# time-stamp-end: \"$\"\n# End:\n"
        },
        {
          "name": "mkinstalldirs",
          "type": "blob",
          "size": 3.4873046875,
          "content": "#! /bin/sh\n# mkinstalldirs --- make directory hierarchy\n\nscriptversion=2006-05-11.19\n\n# Original author: Noah Friedman <friedman@prep.ai.mit.edu>\n# Created: 1993-05-16\n# Public domain.\n#\n# This file is maintained in Automake, please report\n# bugs to <bug-automake@gnu.org> or send patches to\n# <automake-patches@gnu.org>.\n\nnl='\n'\nIFS=\" \"\"\t$nl\"\nerrstatus=0\n# Default directory mode for all zsh files is world read- and executable\ndirmode=755\n\nusage=\"\\\nUsage: mkinstalldirs [-h] [--help] [--version] [-m MODE] DIR ...\n\nCreate each directory DIR (with mode MODE, if specified), including all\nleading file name components.\n\nReport bugs to <bug-automake@gnu.org>.\"\n\n# process command line arguments\nwhile test $# -gt 0 ; do\n  case $1 in\n    -h | --help | --h*)         # -h for help\n      echo \"$usage\"\n      exit $?\n      ;;\n    -m)                         # -m PERM arg\n      shift\n      test $# -eq 0 && { echo \"$usage\" 1>&2; exit 1; }\n      dirmode=$1\n      shift\n      ;;\n    --version)\n      echo \"$0 $scriptversion\"\n      exit $?\n      ;;\n    --)                         # stop option processing\n      shift\n      break\n      ;;\n    -*)                         # unknown option\n      echo \"$usage\" 1>&2\n      exit 1\n      ;;\n    *)                          # first non-opt arg\n      break\n      ;;\n  esac\ndone\n\nfor file\ndo\n  if test -d \"$file\"; then\n    shift\n  else\n    break\n  fi\ndone\n\ncase $# in\n  0) exit 0 ;;\nesac\n\n# Solaris 8's mkdir -p isn't thread-safe.  If you mkdir -p a/b and\n# mkdir -p a/c at the same time, both will detect that a is missing,\n# one will create a, then the other will try to create a and die with\n# a \"File exists\" error.  This is a problem when calling mkinstalldirs\n# from a parallel make.  We use --version in the probe to restrict\n# ourselves to GNU mkdir, which is thread-safe.\ncase $dirmode in\n  '')\n    if mkdir -p --version . >/dev/null 2>&1 && test ! -d ./--version; then\n      echo \"mkdir -p -- $*\"\n      exec mkdir -p -- \"$@\"\n    else\n      # On NextStep and OpenStep, the `mkdir' command does not\n      # recognize any option.  It will interpret all options as\n      # directories to create, and then abort because `.' already\n      # exists.\n      test -d ./-p && rmdir ./-p\n      test -d ./--version && rmdir ./--version\n    fi\n    ;;\n  *)\n    if mkdir -m \"$dirmode\" -p --version . >/dev/null 2>&1 &&\n       test ! -d ./--version; then\n      echo \"mkdir -m $dirmode -p -- $*\"\n      exec mkdir -m \"$dirmode\" -p -- \"$@\"\n    else\n      # Clean up after NextStep and OpenStep mkdir.\n      for d in ./-m ./-p ./--version \"./$dirmode\";\n      do\n        test -d $d && rmdir $d\n      done\n    fi\n    ;;\nesac\n\nfor file\ndo\n  case $file in\n    /*) pathcomp=/ ;;\n    *)  pathcomp= ;;\n  esac\n  oIFS=$IFS\n  IFS=/\n  set fnord $file\n  shift\n  IFS=$oIFS\n\n  for d\n  do\n    test \"x$d\" = x && continue\n\n    pathcomp=$pathcomp$d\n    case $pathcomp in\n      -*) pathcomp=./$pathcomp ;;\n    esac\n\n    if test ! -d \"$pathcomp\"; then\n      echo \"mkdir $pathcomp\"\n\n      mkdir \"$pathcomp\" || lasterr=$?\n\n      if test ! -d \"$pathcomp\"; then\n\terrstatus=$lasterr\n      else\n\tif test ! -z \"$dirmode\"; then\n\t  echo \"chmod $dirmode $pathcomp\"\n\t  lasterr=\n\t  chmod \"$dirmode\" \"$pathcomp\" || lasterr=$?\n\n\t  if test ! -z \"$lasterr\"; then\n\t    errstatus=$lasterr\n\t  fi\n\tfi\n      fi\n    fi\n\n    pathcomp=$pathcomp/\n  done\ndone\n\nexit $errstatus\n\n# Local Variables:\n# mode: shell-script\n# sh-indentation: 2\n# eval: (add-hook 'write-file-hooks 'time-stamp)\n# time-stamp-start: \"scriptversion=\"\n# time-stamp-format: \"%:y-%02m-%02d.%02H\"\n# time-stamp-end: \"$\"\n# End:\n"
        }
      ]
    }
  ]
}