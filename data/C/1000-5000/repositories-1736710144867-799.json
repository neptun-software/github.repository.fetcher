{
  "metadata": {
    "timestamp": 1736710144867,
    "page": 799,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "johnfanv2/LenovoLegionLinux",
      "stars": 1766,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 20.146484375,
          "content": "# This is the clang format of the kernel\n#\n# https://github.com/torvalds/linux/blob/master/.clang-format\n#\n# SPDX-License-Identifier: GPL-2.0\n#\n# clang-format configuration file. Intended for clang-format >= 11.\n#\n# For more information, see:\n#\n#   Documentation/process/clang-format.rst\n#   https://clang.llvm.org/docs/ClangFormat.html\n#   https://clang.llvm.org/docs/ClangFormatStyleOptions.html\n#\n---\nAccessModifierOffset: -4\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlines: Left\nAlignOperands: true\nAlignTrailingComments: false\nAllowAllParametersOfDeclarationOnNextLine: false\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: None\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: false\nBinPackArguments: true\nBinPackParameters: true\nBraceWrapping:\n  AfterClass: false\n  AfterControlStatement: false\n  AfterEnum: false\n  AfterFunction: true\n  AfterNamespace: true\n  AfterObjCDeclaration: false\n  AfterStruct: false\n  AfterUnion: false\n  AfterExternBlock: false\n  BeforeCatch: false\n  BeforeElse: false\n  IndentBraces: false\n  SplitEmptyFunction: true\n  SplitEmptyRecord: true\n  SplitEmptyNamespace: true\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Custom\nBreakBeforeInheritanceComma: false\nBreakBeforeTernaryOperators: false\nBreakConstructorInitializersBeforeComma: false\nBreakConstructorInitializers: BeforeComma\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: false\nColumnLimit: 80\nCommentPragmas: '^ IWYU pragma:'\nCompactNamespaces: false\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nConstructorInitializerIndentWidth: 8\nContinuationIndentWidth: 8\nCpp11BracedListStyle: false\nDerivePointerAlignment: false\nDisableFormat: false\nExperimentalAutoDetectBinPacking: false\nFixNamespaceComments: false\n\n# Taken from:\n#   git grep -h '^#define [^[:space:]]*for_each[^[:space:]]*(' include/ tools/ \\\n#   | sed \"s,^#define \\([^[:space:]]*for_each[^[:space:]]*\\)(.*$,  - '\\1',\" \\\n#   | LC_ALL=C sort -u\nForEachMacros:\n  - '__ata_qc_for_each'\n  - '__bio_for_each_bvec'\n  - '__bio_for_each_segment'\n  - '__evlist__for_each_entry'\n  - '__evlist__for_each_entry_continue'\n  - '__evlist__for_each_entry_from'\n  - '__evlist__for_each_entry_reverse'\n  - '__evlist__for_each_entry_safe'\n  - '__for_each_mem_range'\n  - '__for_each_mem_range_rev'\n  - '__for_each_thread'\n  - '__hlist_for_each_rcu'\n  - '__map__for_each_symbol_by_name'\n  - '__perf_evlist__for_each_entry'\n  - '__perf_evlist__for_each_entry_reverse'\n  - '__perf_evlist__for_each_entry_safe'\n  - '__rq_for_each_bio'\n  - '__shost_for_each_device'\n  - 'apei_estatus_for_each_section'\n  - 'ata_for_each_dev'\n  - 'ata_for_each_link'\n  - 'ata_qc_for_each'\n  - 'ata_qc_for_each_raw'\n  - 'ata_qc_for_each_with_internal'\n  - 'ax25_for_each'\n  - 'ax25_uid_for_each'\n  - 'bio_for_each_bvec'\n  - 'bio_for_each_bvec_all'\n  - 'bio_for_each_folio_all'\n  - 'bio_for_each_integrity_vec'\n  - 'bio_for_each_segment'\n  - 'bio_for_each_segment_all'\n  - 'bio_list_for_each'\n  - 'bip_for_each_vec'\n  - 'bond_for_each_slave'\n  - 'bond_for_each_slave_rcu'\n  - 'bpf__perf_for_each_map'\n  - 'bpf__perf_for_each_map_named'\n  - 'bpf_for_each_spilled_reg'\n  - 'bpf_object__for_each_map'\n  - 'bpf_object__for_each_program'\n  - 'bpf_object__for_each_safe'\n  - 'bpf_perf_object__for_each'\n  - 'btree_for_each_safe128'\n  - 'btree_for_each_safe32'\n  - 'btree_for_each_safe64'\n  - 'btree_for_each_safel'\n  - 'card_for_each_dev'\n  - 'cgroup_taskset_for_each'\n  - 'cgroup_taskset_for_each_leader'\n  - 'cpufreq_for_each_efficient_entry_idx'\n  - 'cpufreq_for_each_entry'\n  - 'cpufreq_for_each_entry_idx'\n  - 'cpufreq_for_each_valid_entry'\n  - 'cpufreq_for_each_valid_entry_idx'\n  - 'css_for_each_child'\n  - 'css_for_each_descendant_post'\n  - 'css_for_each_descendant_pre'\n  - 'damon_for_each_region'\n  - 'damon_for_each_region_safe'\n  - 'damon_for_each_scheme'\n  - 'damon_for_each_scheme_safe'\n  - 'damon_for_each_target'\n  - 'damon_for_each_target_safe'\n  - 'data__for_each_file'\n  - 'data__for_each_file_new'\n  - 'data__for_each_file_start'\n  - 'device_for_each_child_node'\n  - 'displayid_iter_for_each'\n  - 'dma_fence_array_for_each'\n  - 'dma_fence_chain_for_each'\n  - 'dma_fence_unwrap_for_each'\n  - 'dma_resv_for_each_fence'\n  - 'dma_resv_for_each_fence_unlocked'\n  - 'do_for_each_ftrace_op'\n  - 'drm_atomic_crtc_for_each_plane'\n  - 'drm_atomic_crtc_state_for_each_plane'\n  - 'drm_atomic_crtc_state_for_each_plane_state'\n  - 'drm_atomic_for_each_plane_damage'\n  - 'drm_client_for_each_connector_iter'\n  - 'drm_client_for_each_modeset'\n  - 'drm_connector_for_each_possible_encoder'\n  - 'drm_for_each_bridge_in_chain'\n  - 'drm_for_each_connector_iter'\n  - 'drm_for_each_crtc'\n  - 'drm_for_each_crtc_reverse'\n  - 'drm_for_each_encoder'\n  - 'drm_for_each_encoder_mask'\n  - 'drm_for_each_fb'\n  - 'drm_for_each_legacy_plane'\n  - 'drm_for_each_plane'\n  - 'drm_for_each_plane_mask'\n  - 'drm_for_each_privobj'\n  - 'drm_mm_for_each_hole'\n  - 'drm_mm_for_each_node'\n  - 'drm_mm_for_each_node_in_range'\n  - 'drm_mm_for_each_node_safe'\n  - 'dsa_switch_for_each_available_port'\n  - 'dsa_switch_for_each_cpu_port'\n  - 'dsa_switch_for_each_port'\n  - 'dsa_switch_for_each_port_continue_reverse'\n  - 'dsa_switch_for_each_port_safe'\n  - 'dsa_switch_for_each_user_port'\n  - 'dsa_tree_for_each_user_port'\n  - 'dso__for_each_symbol'\n  - 'dsos__for_each_with_build_id'\n  - 'elf_hash_for_each_possible'\n  - 'elf_section__for_each_rel'\n  - 'elf_section__for_each_rela'\n  - 'elf_symtab__for_each_symbol'\n  - 'evlist__for_each_cpu'\n  - 'evlist__for_each_entry'\n  - 'evlist__for_each_entry_continue'\n  - 'evlist__for_each_entry_from'\n  - 'evlist__for_each_entry_reverse'\n  - 'evlist__for_each_entry_safe'\n  - 'flow_action_for_each'\n  - 'for_each_acpi_dev_match'\n  - 'for_each_active_dev_scope'\n  - 'for_each_active_drhd_unit'\n  - 'for_each_active_iommu'\n  - 'for_each_aggr_pgid'\n  - 'for_each_available_child_of_node'\n  - 'for_each_bench'\n  - 'for_each_bio'\n  - 'for_each_board_func_rsrc'\n  - 'for_each_btf_ext_rec'\n  - 'for_each_btf_ext_sec'\n  - 'for_each_bvec'\n  - 'for_each_card_auxs'\n  - 'for_each_card_auxs_safe'\n  - 'for_each_card_components'\n  - 'for_each_card_dapms'\n  - 'for_each_card_pre_auxs'\n  - 'for_each_card_prelinks'\n  - 'for_each_card_rtds'\n  - 'for_each_card_rtds_safe'\n  - 'for_each_card_widgets'\n  - 'for_each_card_widgets_safe'\n  - 'for_each_cgroup_storage_type'\n  - 'for_each_child_of_node'\n  - 'for_each_clear_bit'\n  - 'for_each_clear_bit_from'\n  - 'for_each_clear_bitrange'\n  - 'for_each_clear_bitrange_from'\n  - 'for_each_cmd'\n  - 'for_each_cmsghdr'\n  - 'for_each_collection'\n  - 'for_each_comp_order'\n  - 'for_each_compatible_node'\n  - 'for_each_component_dais'\n  - 'for_each_component_dais_safe'\n  - 'for_each_console'\n  - 'for_each_console_srcu'\n  - 'for_each_cpu'\n  - 'for_each_cpu_and'\n  - 'for_each_cpu_not'\n  - 'for_each_cpu_wrap'\n  - 'for_each_dapm_widgets'\n  - 'for_each_dedup_cand'\n  - 'for_each_dev_addr'\n  - 'for_each_dev_scope'\n  - 'for_each_dma_cap_mask'\n  - 'for_each_dpcm_be'\n  - 'for_each_dpcm_be_rollback'\n  - 'for_each_dpcm_be_safe'\n  - 'for_each_dpcm_fe'\n  - 'for_each_drhd_unit'\n  - 'for_each_dss_dev'\n  - 'for_each_efi_memory_desc'\n  - 'for_each_efi_memory_desc_in_map'\n  - 'for_each_element'\n  - 'for_each_element_extid'\n  - 'for_each_element_id'\n  - 'for_each_endpoint_of_node'\n  - 'for_each_event'\n  - 'for_each_event_tps'\n  - 'for_each_evictable_lru'\n  - 'for_each_fib6_node_rt_rcu'\n  - 'for_each_fib6_walker_rt'\n  - 'for_each_free_mem_pfn_range_in_zone'\n  - 'for_each_free_mem_pfn_range_in_zone_from'\n  - 'for_each_free_mem_range'\n  - 'for_each_free_mem_range_reverse'\n  - 'for_each_func_rsrc'\n  - 'for_each_group_evsel'\n  - 'for_each_group_member'\n  - 'for_each_hstate'\n  - 'for_each_if'\n  - 'for_each_inject_fn'\n  - 'for_each_insn'\n  - 'for_each_insn_prefix'\n  - 'for_each_intid'\n  - 'for_each_iommu'\n  - 'for_each_ip_tunnel_rcu'\n  - 'for_each_irq_nr'\n  - 'for_each_lang'\n  - 'for_each_link_codecs'\n  - 'for_each_link_cpus'\n  - 'for_each_link_platforms'\n  - 'for_each_lru'\n  - 'for_each_matching_node'\n  - 'for_each_matching_node_and_match'\n  - 'for_each_mem_pfn_range'\n  - 'for_each_mem_range'\n  - 'for_each_mem_range_rev'\n  - 'for_each_mem_region'\n  - 'for_each_member'\n  - 'for_each_memory'\n  - 'for_each_migratetype_order'\n  - 'for_each_missing_reg'\n  - 'for_each_net'\n  - 'for_each_net_continue_reverse'\n  - 'for_each_net_rcu'\n  - 'for_each_netdev'\n  - 'for_each_netdev_continue'\n  - 'for_each_netdev_continue_rcu'\n  - 'for_each_netdev_continue_reverse'\n  - 'for_each_netdev_feature'\n  - 'for_each_netdev_in_bond_rcu'\n  - 'for_each_netdev_rcu'\n  - 'for_each_netdev_reverse'\n  - 'for_each_netdev_safe'\n  - 'for_each_new_connector_in_state'\n  - 'for_each_new_crtc_in_state'\n  - 'for_each_new_mst_mgr_in_state'\n  - 'for_each_new_plane_in_state'\n  - 'for_each_new_plane_in_state_reverse'\n  - 'for_each_new_private_obj_in_state'\n  - 'for_each_new_reg'\n  - 'for_each_node'\n  - 'for_each_node_by_name'\n  - 'for_each_node_by_type'\n  - 'for_each_node_mask'\n  - 'for_each_node_state'\n  - 'for_each_node_with_cpus'\n  - 'for_each_node_with_property'\n  - 'for_each_nonreserved_multicast_dest_pgid'\n  - 'for_each_of_allnodes'\n  - 'for_each_of_allnodes_from'\n  - 'for_each_of_cpu_node'\n  - 'for_each_of_pci_range'\n  - 'for_each_old_connector_in_state'\n  - 'for_each_old_crtc_in_state'\n  - 'for_each_old_mst_mgr_in_state'\n  - 'for_each_old_plane_in_state'\n  - 'for_each_old_private_obj_in_state'\n  - 'for_each_oldnew_connector_in_state'\n  - 'for_each_oldnew_crtc_in_state'\n  - 'for_each_oldnew_mst_mgr_in_state'\n  - 'for_each_oldnew_plane_in_state'\n  - 'for_each_oldnew_plane_in_state_reverse'\n  - 'for_each_oldnew_private_obj_in_state'\n  - 'for_each_online_cpu'\n  - 'for_each_online_node'\n  - 'for_each_online_pgdat'\n  - 'for_each_path'\n  - 'for_each_pci_bridge'\n  - 'for_each_pci_dev'\n  - 'for_each_pcm_streams'\n  - 'for_each_physmem_range'\n  - 'for_each_populated_zone'\n  - 'for_each_possible_cpu'\n  - 'for_each_present_cpu'\n  - 'for_each_prime_number'\n  - 'for_each_prime_number_from'\n  - 'for_each_probe_cache_entry'\n  - 'for_each_process'\n  - 'for_each_process_thread'\n  - 'for_each_prop_codec_conf'\n  - 'for_each_prop_dai_codec'\n  - 'for_each_prop_dai_cpu'\n  - 'for_each_prop_dlc_codecs'\n  - 'for_each_prop_dlc_cpus'\n  - 'for_each_prop_dlc_platforms'\n  - 'for_each_property_of_node'\n  - 'for_each_reg'\n  - 'for_each_reg_filtered'\n  - 'for_each_registered_fb'\n  - 'for_each_requested_gpio'\n  - 'for_each_requested_gpio_in_range'\n  - 'for_each_reserved_mem_range'\n  - 'for_each_reserved_mem_region'\n  - 'for_each_rtd_codec_dais'\n  - 'for_each_rtd_components'\n  - 'for_each_rtd_cpu_dais'\n  - 'for_each_rtd_dais'\n  - 'for_each_script'\n  - 'for_each_sec'\n  - 'for_each_set_bit'\n  - 'for_each_set_bit_from'\n  - 'for_each_set_bitrange'\n  - 'for_each_set_bitrange_from'\n  - 'for_each_set_clump8'\n  - 'for_each_sg'\n  - 'for_each_sg_dma_page'\n  - 'for_each_sg_page'\n  - 'for_each_sgtable_dma_page'\n  - 'for_each_sgtable_dma_sg'\n  - 'for_each_sgtable_page'\n  - 'for_each_sgtable_sg'\n  - 'for_each_shell_test'\n  - 'for_each_sibling_event'\n  - 'for_each_subelement'\n  - 'for_each_subelement_extid'\n  - 'for_each_subelement_id'\n  - 'for_each_sublist'\n  - 'for_each_subsystem'\n  - 'for_each_supported_activate_fn'\n  - 'for_each_supported_inject_fn'\n  - 'for_each_test'\n  - 'for_each_thread'\n  - 'for_each_token'\n  - 'for_each_unicast_dest_pgid'\n  - 'for_each_vsi'\n  - 'for_each_wakeup_source'\n  - 'for_each_zone'\n  - 'for_each_zone_zonelist'\n  - 'for_each_zone_zonelist_nodemask'\n  - 'func_for_each_insn'\n  - 'fwnode_for_each_available_child_node'\n  - 'fwnode_for_each_child_node'\n  - 'fwnode_graph_for_each_endpoint'\n  - 'gadget_for_each_ep'\n  - 'genradix_for_each'\n  - 'genradix_for_each_from'\n  - 'hash_for_each'\n  - 'hash_for_each_possible'\n  - 'hash_for_each_possible_rcu'\n  - 'hash_for_each_possible_rcu_notrace'\n  - 'hash_for_each_possible_safe'\n  - 'hash_for_each_rcu'\n  - 'hash_for_each_safe'\n  - 'hashmap__for_each_entry'\n  - 'hashmap__for_each_entry_safe'\n  - 'hashmap__for_each_key_entry'\n  - 'hashmap__for_each_key_entry_safe'\n  - 'hctx_for_each_ctx'\n  - 'hists__for_each_format'\n  - 'hists__for_each_sort_list'\n  - 'hlist_bl_for_each_entry'\n  - 'hlist_bl_for_each_entry_rcu'\n  - 'hlist_bl_for_each_entry_safe'\n  - 'hlist_for_each'\n  - 'hlist_for_each_entry'\n  - 'hlist_for_each_entry_continue'\n  - 'hlist_for_each_entry_continue_rcu'\n  - 'hlist_for_each_entry_continue_rcu_bh'\n  - 'hlist_for_each_entry_from'\n  - 'hlist_for_each_entry_from_rcu'\n  - 'hlist_for_each_entry_rcu'\n  - 'hlist_for_each_entry_rcu_bh'\n  - 'hlist_for_each_entry_rcu_notrace'\n  - 'hlist_for_each_entry_safe'\n  - 'hlist_for_each_entry_srcu'\n  - 'hlist_for_each_safe'\n  - 'hlist_nulls_for_each_entry'\n  - 'hlist_nulls_for_each_entry_from'\n  - 'hlist_nulls_for_each_entry_rcu'\n  - 'hlist_nulls_for_each_entry_safe'\n  - 'i3c_bus_for_each_i2cdev'\n  - 'i3c_bus_for_each_i3cdev'\n  - 'idr_for_each_entry'\n  - 'idr_for_each_entry_continue'\n  - 'idr_for_each_entry_continue_ul'\n  - 'idr_for_each_entry_ul'\n  - 'in_dev_for_each_ifa_rcu'\n  - 'in_dev_for_each_ifa_rtnl'\n  - 'inet_bind_bucket_for_each'\n  - 'inet_lhash2_for_each_icsk'\n  - 'inet_lhash2_for_each_icsk_continue'\n  - 'inet_lhash2_for_each_icsk_rcu'\n  - 'interval_tree_for_each_double_span'\n  - 'interval_tree_for_each_span'\n  - 'intlist__for_each_entry'\n  - 'intlist__for_each_entry_safe'\n  - 'iopt_for_each_contig_area'\n  - 'kcore_copy__for_each_phdr'\n  - 'key_for_each'\n  - 'key_for_each_safe'\n  - 'klp_for_each_func'\n  - 'klp_for_each_func_safe'\n  - 'klp_for_each_func_static'\n  - 'klp_for_each_object'\n  - 'klp_for_each_object_safe'\n  - 'klp_for_each_object_static'\n  - 'kunit_suite_for_each_test_case'\n  - 'kvm_for_each_memslot'\n  - 'kvm_for_each_memslot_in_gfn_range'\n  - 'kvm_for_each_vcpu'\n  - 'libbpf_nla_for_each_attr'\n  - 'list_for_each'\n  - 'list_for_each_codec'\n  - 'list_for_each_codec_safe'\n  - 'list_for_each_continue'\n  - 'list_for_each_entry'\n  - 'list_for_each_entry_continue'\n  - 'list_for_each_entry_continue_rcu'\n  - 'list_for_each_entry_continue_reverse'\n  - 'list_for_each_entry_from'\n  - 'list_for_each_entry_from_rcu'\n  - 'list_for_each_entry_from_reverse'\n  - 'list_for_each_entry_lockless'\n  - 'list_for_each_entry_rcu'\n  - 'list_for_each_entry_reverse'\n  - 'list_for_each_entry_safe'\n  - 'list_for_each_entry_safe_continue'\n  - 'list_for_each_entry_safe_from'\n  - 'list_for_each_entry_safe_reverse'\n  - 'list_for_each_entry_srcu'\n  - 'list_for_each_from'\n  - 'list_for_each_prev'\n  - 'list_for_each_prev_safe'\n  - 'list_for_each_safe'\n  - 'llist_for_each'\n  - 'llist_for_each_entry'\n  - 'llist_for_each_entry_safe'\n  - 'llist_for_each_safe'\n  - 'map__for_each_symbol'\n  - 'map__for_each_symbol_by_name'\n  - 'map_for_each_event'\n  - 'map_for_each_metric'\n  - 'maps__for_each_entry'\n  - 'maps__for_each_entry_safe'\n  - 'mci_for_each_dimm'\n  - 'media_device_for_each_entity'\n  - 'media_device_for_each_intf'\n  - 'media_device_for_each_link'\n  - 'media_device_for_each_pad'\n  - 'msi_for_each_desc'\n  - 'nanddev_io_for_each_page'\n  - 'netdev_for_each_lower_dev'\n  - 'netdev_for_each_lower_private'\n  - 'netdev_for_each_lower_private_rcu'\n  - 'netdev_for_each_mc_addr'\n  - 'netdev_for_each_uc_addr'\n  - 'netdev_for_each_upper_dev_rcu'\n  - 'netdev_hw_addr_list_for_each'\n  - 'nft_rule_for_each_expr'\n  - 'nla_for_each_attr'\n  - 'nla_for_each_nested'\n  - 'nlmsg_for_each_attr'\n  - 'nlmsg_for_each_msg'\n  - 'nr_neigh_for_each'\n  - 'nr_neigh_for_each_safe'\n  - 'nr_node_for_each'\n  - 'nr_node_for_each_safe'\n  - 'of_for_each_phandle'\n  - 'of_property_for_each_string'\n  - 'of_property_for_each_u32'\n  - 'pci_bus_for_each_resource'\n  - 'pci_doe_for_each_off'\n  - 'pcl_for_each_chunk'\n  - 'pcl_for_each_segment'\n  - 'pcm_for_each_format'\n  - 'perf_config_items__for_each_entry'\n  - 'perf_config_sections__for_each_entry'\n  - 'perf_config_set__for_each_entry'\n  - 'perf_cpu_map__for_each_cpu'\n  - 'perf_evlist__for_each_entry'\n  - 'perf_evlist__for_each_entry_reverse'\n  - 'perf_evlist__for_each_entry_safe'\n  - 'perf_evlist__for_each_evsel'\n  - 'perf_evlist__for_each_mmap'\n  - 'perf_hpp_list__for_each_format'\n  - 'perf_hpp_list__for_each_format_safe'\n  - 'perf_hpp_list__for_each_sort_list'\n  - 'perf_hpp_list__for_each_sort_list_safe'\n  - 'perf_pmu__for_each_hybrid_pmu'\n  - 'ping_portaddr_for_each_entry'\n  - 'ping_portaddr_for_each_entry_rcu'\n  - 'plist_for_each'\n  - 'plist_for_each_continue'\n  - 'plist_for_each_entry'\n  - 'plist_for_each_entry_continue'\n  - 'plist_for_each_entry_safe'\n  - 'plist_for_each_safe'\n  - 'pnp_for_each_card'\n  - 'pnp_for_each_dev'\n  - 'protocol_for_each_card'\n  - 'protocol_for_each_dev'\n  - 'queue_for_each_hw_ctx'\n  - 'radix_tree_for_each_slot'\n  - 'radix_tree_for_each_tagged'\n  - 'rb_for_each'\n  - 'rbtree_postorder_for_each_entry_safe'\n  - 'rdma_for_each_block'\n  - 'rdma_for_each_port'\n  - 'rdma_umem_for_each_dma_block'\n  - 'resort_rb__for_each_entry'\n  - 'resource_list_for_each_entry'\n  - 'resource_list_for_each_entry_safe'\n  - 'rhl_for_each_entry_rcu'\n  - 'rhl_for_each_rcu'\n  - 'rht_for_each'\n  - 'rht_for_each_entry'\n  - 'rht_for_each_entry_from'\n  - 'rht_for_each_entry_rcu'\n  - 'rht_for_each_entry_rcu_from'\n  - 'rht_for_each_entry_safe'\n  - 'rht_for_each_from'\n  - 'rht_for_each_rcu'\n  - 'rht_for_each_rcu_from'\n  - 'rq_for_each_bvec'\n  - 'rq_for_each_segment'\n  - 'rq_list_for_each'\n  - 'rq_list_for_each_safe'\n  - 'scsi_for_each_prot_sg'\n  - 'scsi_for_each_sg'\n  - 'sctp_for_each_hentry'\n  - 'sctp_skb_for_each'\n  - 'sec_for_each_insn'\n  - 'sec_for_each_insn_continue'\n  - 'sec_for_each_insn_from'\n  - 'shdma_for_each_chan'\n  - 'shost_for_each_device'\n  - 'sk_for_each'\n  - 'sk_for_each_bound'\n  - 'sk_for_each_entry_offset_rcu'\n  - 'sk_for_each_from'\n  - 'sk_for_each_rcu'\n  - 'sk_for_each_safe'\n  - 'sk_nulls_for_each'\n  - 'sk_nulls_for_each_from'\n  - 'sk_nulls_for_each_rcu'\n  - 'snd_array_for_each'\n  - 'snd_pcm_group_for_each_entry'\n  - 'snd_soc_dapm_widget_for_each_path'\n  - 'snd_soc_dapm_widget_for_each_path_safe'\n  - 'snd_soc_dapm_widget_for_each_sink_path'\n  - 'snd_soc_dapm_widget_for_each_source_path'\n  - 'strlist__for_each_entry'\n  - 'strlist__for_each_entry_safe'\n  - 'sym_for_each_insn'\n  - 'sym_for_each_insn_continue_reverse'\n  - 'symbols__for_each_entry'\n  - 'tb_property_for_each'\n  - 'tcf_act_for_each_action'\n  - 'tcf_exts_for_each_action'\n  - 'udp_portaddr_for_each_entry'\n  - 'udp_portaddr_for_each_entry_rcu'\n  - 'usb_hub_for_each_child'\n  - 'v4l2_device_for_each_subdev'\n  - 'v4l2_m2m_for_each_dst_buf'\n  - 'v4l2_m2m_for_each_dst_buf_safe'\n  - 'v4l2_m2m_for_each_src_buf'\n  - 'v4l2_m2m_for_each_src_buf_safe'\n  - 'virtio_device_for_each_vq'\n  - 'while_for_each_ftrace_op'\n  - 'xa_for_each'\n  - 'xa_for_each_marked'\n  - 'xa_for_each_range'\n  - 'xa_for_each_start'\n  - 'xas_for_each'\n  - 'xas_for_each_conflict'\n  - 'xas_for_each_marked'\n  - 'xbc_array_for_each_value'\n  - 'xbc_for_each_key_value'\n  - 'xbc_node_for_each_array_value'\n  - 'xbc_node_for_each_child'\n  - 'xbc_node_for_each_key_value'\n  - 'xbc_node_for_each_subkey'\n  - 'zorro_for_each_dev'\n\nIncludeBlocks: Preserve\nIncludeCategories:\n  - Regex: '.*'\n    Priority: 1\nIncludeIsMainRegex: '(Test)?$'\nIndentCaseLabels: false\nIndentGotoLabels: false\nIndentPPDirectives: None\nIndentWidth: 8\nIndentWrappedFunctionNames: false\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: false\nMacroBlockBegin: ''\nMacroBlockEnd: ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBinPackProtocolList: Auto\nObjCBlockIndentWidth: 8\nObjCSpaceAfterProperty: true\nObjCSpaceBeforeProtocolList: true\n\n# Taken from git's rules\nPenaltyBreakAssignment: 10\nPenaltyBreakBeforeFirstCallParameter: 30\nPenaltyBreakComment: 10\nPenaltyBreakFirstLessLess: 0\nPenaltyBreakString: 10\nPenaltyExcessCharacter: 100\nPenaltyReturnTypeOnItsOwnLine: 60\n\nPointerAlignment: Right\nReflowComments: false\nSortIncludes: false\nSortUsingDeclarations: false\nSpaceAfterCStyleCast: false\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCtorInitializerColon: true\nSpaceBeforeInheritanceColon: true\nSpaceBeforeParens: ControlStatementsExceptForEachMacros\nSpaceBeforeRangeBasedForLoopColon: true\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles: false\nSpacesInContainerLiterals: false\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard: Cpp03\nTabWidth: 8\nUseTab: Always\n...\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.4189453125,
          "content": "# Prerequisites\n*.d\n\n# Object files\n*.o\n*.ko\n*.obj\n*.elf\n\n# Linker output\n*.ilk\n*.map\n*.exp\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Libraries\n*.lib\n*.a\n*.la\n*.lo\n\n# Shared objects (inc. Windows DLLs)\n*.dll\n*.so\n*.so.*\n*.dylib\n\n# Executables\n*.exe\n*.out\n*.app\n*.i*86\n*.x86_64\n*.hex\n\n# Debug files\n*.dSYM/\n*.su\n*.idb\n*.pdb\n\n# Kernel Module Compile Results\n*.mod*\n*.cmd\n.tmp_versions/\nmodules.order\nModule.symvers\nMkfile.old\ndkms.conf"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6337890625,
          "content": "# Vscode\n.vscode/\n\n# Python\n__pycache__/\n\nlegion_linux.egg-info/\n\ndeb_dist\n\nreverse_engineer\n\n# Prerequisites\n*.d\n\n# Object files\n*.o\n*.ko\n*.obj\n*.elf\n\n# Linker output\n*.ilk\n*.map\n*.exp\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Libraries\n*.lib\n*.a\n*.la\n*.lo\n\n# Shared objects (inc. Windows DLLs)\n*.dll\n*.so\n*.so.*\n*.dylib\n\n# Executables\n*.exe\n*.out\n*.app\n*.i*86\n*.x86_64\n*.hex\n\n# Debug files\n*.dSYM/\n*.su\n*.idb\n*.pdb\n\n# Kernel Module Compile Results\n*.mod*\n*.cmd\n.tmp_versions/\nmodules.order\nModule.symvers\nMkfile.old\ndkms.conf\n\nbuild/\ndist/\n\n# Legiond\nextra/service/legiond/legiond\nextra/service/legiond/legiond-ctl\nextra/service/legiond/.cache/clangd\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.3017578125,
          "content": "[submodule \"deploy/lenovolegionlinux-git\"]\n\tpath = subprojects/lenovolegionlinux-git\n\turl = https://aur.archlinux.org/lenovolegionlinux-git.git\n\n[submodule \"subprojects/lenovolegionlinux-dkms-git\"]\n\tpath = subprojects/lenovolegionlinux-dkms-git\n\turl = https://aur.archlinux.org/lenovolegionlinux-dkms-git.git\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.080078125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.0673828125,
          "content": "## Welcome to Lenvo Legion Toolkit contributing guide\n\nSee README.md\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 17.5615234375,
          "content": "   GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\n\t    How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 49.2861328125,
          "content": "<h1 align=\"left\">\n  <a href=\"https://github.com/johnfanv2/LenovoLegionLinux\" target=\"_blank\">\n    <picture>\n      <source media=\"(prefers-color-scheme: light)\" srcset=\"https://raw.githubusercontent.com/johnfanv2/LenovoLegionLinux/HEAD/doc/assets/legion_logo_dark.svg\">\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://raw.githubusercontent.com/johnfanv2/LenovoLegionLinux/HEAD/doc/assets/legion_logo_light.svg\">\n      <img alt=\"LenovoLegionLinux\" src=\"https://raw.githubusercontent.com/johnfanv2/LenovoLegionLinux/HEAD/doc/assets/legion_logo_dark.svg\" height=\"50\" style=\"max-width: 100%;\">\n    </picture>\n  </a>\n    <strong> Lenovo Legion Linux Support </strong>\n</h1>\n\n[![Build](https://github.com/johnfanv2/LenovoLegionLinux/actions/workflows/build.yml/badge.svg?branch=main)](https://github.com/johnfanv2/LenovoLegionLinux/actions/workflows/build.yml)\n[![Join Discord](https://img.shields.io/discord/761178912230473768?label=Legion%20Series%20Discord)](https://discord.com/invite/legionseries)\n[![Check Reddit](https://img.shields.io/static/v1?label=Reddit&message=LenovoLegion&color=green)](https://www.reddit.com/r/LenovoLegion/)\n[![More Reddit](https://img.shields.io/static/v1?label=Reddit&message=linuxhardware&color=blueviolet)](https://www.reddit.com/r/linuxhardware/)\n</br>\n[![Unbutu and Debian PPA](https://img.shields.io/badge/Ubuntu%2FDebian-Debian_Repo-red)](https://tracker.debian.org/pkg/lenovolegionlinux)\n[![Fedora Copr](https://img.shields.io/badge/Nobara%2FFedora-LenovoLegionLinux-blue)](https://copr.fedorainfracloud.org/coprs/mrduarte/LenovoLegionLinux/)\n[![AUR](https://img.shields.io/aur/version/lenovolegionlinux-git?label=AUR%20Package)](https://aur.archlinux.org/packages/lenovolegionlinux-git)\n[![AUR DKMS](https://img.shields.io/aur/version/lenovolegionlinux-dkms-git?label=AUR%20Package%20%28dkms%29)](https://aur.archlinux.org/packages/lenovolegionlinux-dkms-git)\n[![GURU Overlay](https://img.shields.io/badge/Gentoo_Overlay-GURU-blueviolet)](https://gitweb.gentoo.org/repo/proj/guru.git/)\n[![LLL Package](https://img.shields.io/badge/Live%20Ebuild-sys--firmware%2Flenovolegionlinux-blueviolet)](https://gpo.zugaina.org/sys-firmware/lenovolegionlinux)\n[![NixOS](https://img.shields.io/badge/NixOS--package-lenovo--legion-9cf)](https://search.nixos.org/packages?channel=unstable&from=0&size=50&sort=relevance&type=packages&query=lenovo-legion)\n</br>\n[![Nobara](https://img.shields.io/badge/Nobara_Linux-Kernel_Patched-green)](https://nobaraproject.org/)\n[![PikaOS](https://img.shields.io/badge/PikaOS_Linux-Kernel_Patched-green)](https://pika-os.com/)\n---\n\n#### Other language versions of this README file:\n\n* [简体中文版简介](README_zh-hans.md)\n\n---\n\n**This project is not affiliated with Lenovo in any way**\n\n<!-- # If you have a 2022 or 2023 model, please help testing the new features [here](https://github.com/johnfanv2/LenovoLegionLinux/issues/46).\n\n# If you have a light in the lid (Y-logo) or at the IO-ports (all Legion 7), please help testing controlling it  [here](https://github.com/johnfanv2/LenovoLegionLinux/issues/54). -->\n\nLenovo Legion Linux (LLL) brings additional drivers and tools for Lenovo Legion series laptops to Linux. It\nis the alternative to Lenovo Vantage or Legion Zone (both Windows only).\n\nIt allows you to control features like the fan curve, power mode, power limits, rapid charging, and more. This has been achieved through reverse engineering and disassembling the ACPI firmware, as well as the firmware and memory of the embedded controller (EC).\n\n:star: **Please star this repository if this is useful or might be useful in the future.**\n\n:star2: **My goal is to merge the driver into the main Linux kernel so it comes automatically with Linux and no recompilation is required after a Linux update**\n\n:boom: **Starring shows that this is useful to me and the Linux community so hopefully a merge into the Kernel is possible.**\n\n## :rocket: Features\n\n<p align=\"center\">\n    <img height=\"300\" style=\"float: center;\" src=\"doc/assets/fancurve_gui.jpg\" alt=\"fancurve\">\n    <img height=\"300\" style=\"float: center;\" src=\"doc/assets/psensor.png\" alt=\"psensor\">\n    <img height=\"300\" style=\"float: center;\" src=\"doc/assets/powermode.png\" alt=\"powermode\">\n</p>\n\n- [X] Light on RAM and CPU and without telemetry\n- [X] Fully controllable using scripts or from the command-line\n- [X] Simple GUI replacement for Lenovo Vantage: Fan curve, FN Lock, Win Key, Touchpad Power, Camera Power, Battery Conservation, Rapid Charging, Charge output from always on USB, Display Overdrive, Y-Logo LED Light, IO-Port LED Light, Hybrid Mode (GSync), CPU and GPU Overclock:\n    - Switch battery conservation mode; keep battery at 60% when on AC to prolong battery life (https://bugs.kde.org/show_bug.cgi?id=441057)\n    - Toggle Fn lock; Use special function on F1-F12 keys without pressing the Fn key\n    - Enable or disable touchpad\n- [X] Set a fully featured custom fan curve with up to 10 points:\n  - Set temperature points for when the fan speed (level) should change\n  - Use CPU, GPU and IC temperature to control the fan all at the same it\n  - Set the fan speed (RPM) at each level\n  - Even allows speed below 1600 RPM\n  - Set minimum temperature for each level that must be fallen below before slowing down the fans again\n  - Set acceleration and deceleration for each the fan when the fan speed should increase or decrease\n  - Save and load presets for different modes\n- [X] Lock and unlock the fan controller and fan speed\n- [X] Switch power mode (quiet, balanced, performance) using software\n  - Now you can do it using software in your system settings\n  - Changing with `Fn+Q` is also possible\n  - Depending on your desktop environment, you could automatically switch to quiet mode if you are on battery or performance mode when on AC power (e.g. KDE's Energy Saving settings)\n  - Switch between different fan profiles depending on the power profile (See: [Lenovo Legion Laptop Support Daemon](#lenovo-legion-laptop-support-daemonlegiond))\n- [X] Monitor fan speeds and temperatures (CPU, GPU, IC) using the now available sensors\n- [X] Enable or disable automatic switching to a \"Mini Fan Curve\" if temperatures are low for a long time\n\n## :mega: Overview\n\n- it comes with a driver (kernel module) that implements the Linux standard interfaces (sysfs, debugfs, hwmon)\n- using standard Linux interfaces makes it is compatible with the command line/file interface or standard GUI tools like psensor\n- compared to vendor tools for Windows, it even allows to set the fan curve. This allows to keep the fans\n  slowly and quietly running instead of constantly switching between fans off and loud fans. Perfect for quiet office work. :office:\n\n## :package: Available Packages\n\n- Debian/Ubuntu:\n  - Debian repo (for now): [here](https://tracker.debian.org/pkg/lenovolegionlinux)\n- Fedora/RHEL Base Distros:\n    - Official Fedora COPR: [here](https://copr.fedorainfracloud.org/coprs/mrduarte/LenovoLegionLinux/)\n- Arch Base Distros:\n    - [lenovolegionlinux-git](https://aur.archlinux.org/packages/lenovolegionlinux-git)\n    - [lenovolegionlinux-dkms-git](https://aur.archlinux.org/packages/lenovolegionlinux-dkms-git)\n- Gentoo Base Distros:\n    - [GURU Overlay](https://gitweb.gentoo.org/repo/proj/guru.git)\n    - [ebuild](https://gpo.zugaina.org/sys-firmware/lenovolegionlinux)\n- [NixOS](https://search.nixos.org/packages?channel=unstable&from=0&size=50&sort=relevance&type=packages&query=lenovo-legion)\n\n[^1]: Build with latest commit every day at midnight GMT\n\n## :pushpin: Confirmed Compatible Models\n\n# If you have a 2022 or 2023 model, please help testing the new features [here](https://github.com/johnfanv2/LenovoLegionLinux/issues/46).\n\n# If you have a light in the lid (Y-logo) or at the IO-ports (all Legion 7), please help testing controlling it  [here](https://github.com/johnfanv2/LenovoLegionLinux/issues/54).\n\n**Other Lenovo Legion models from 2020 to 2023 probably also work. The following models were confirmed. If you have a model with a BIOS version with the same leading letters, e.g. EFCN (like EFCN54WW) then it will probably work. If you want to confirm that your model works or if it does not work, please raise a issue.**\n\n- Lenovo Legion 5 15IMH05, 15IMH05H (BIOS EFCN54WW): sensors, fan curve, power profile\n- Lenovo Legion 5 15ACH6H (BIOS GKCN58WW or GKCN57WW), Gen 6: sensors, fan curve, power profile\n- Lenovo Legion R9000 (R9000K2021H) (BIOS GKCN59WW): sensors, fan curve, power profile\n- Lenovo Legion 5 Pro 16ACH6H (82JQ) (BIOS GKCN58WW) x 2: sensors, fan curve, power profile\n- Legion 5 Pro 16ACH6H (AMD 5800H + Nvidia RTX 3070): sensors, fan curve, power profile\n- Lenovo Legion 5 15ARH05A (BIOS FSCN14WW), Gen 5: sensors, fan curve\n- Lenovo Legion 5 15ARH05H (BIOS FSCN14WW or FSCN26WW), Gen 5: sensors, fan curve, power profile\n- Lenovo Legion 5 15ITH6H (BIOS H1CN49WW, Intel): sensors, fan curve, power profile\n- Lenovo Legion 5 15ARH7H (BIOS JUCN55WW), Gen7: sensors, fan curve, power profile\n- Lenovo Legion 5 15ACH6 (BIOS HHCN31WW): sensors, fan curve, power profile\n- Lenovo Legion S7 16ARHA7 (BIOS KFCN32WW): sensors, fan curve (no minifancurve), power profile\n- Lenovo Legion 5 Pro 16ITH6 (BIOS H1CN52WW (there was an error in CPU temp with H1CN51WW)): sensors, fan curve, power profile\n- Lenovo Legion 5 15ACH6A (BIOS G9CN30WW), all AMD variant: sensors, fan curve (with mini fan curve), power profile\n- Lenovo Legion 5 17ACH6 (BIOS HHCN31WW): sensors, fan curve, power profile\n- Lenovo Legion 7i 16ITHG6 (BIOS H1CN35WW): sensors, fan curve, power profile\n- Lenovo Legion 7 Pro 16ARX8H (BIOS LPCN47WW): sensors, fan curve, power profile\n\n*Note:* Features that are not confirmed probably also work. They were just not tested.\n\nCurrently fan control is not working for the following models. Other features, probably work:\n\n- Legion with BIOS HACN*, e.g. S7-15ACH6: [Issue](https://github.com/johnfanv2/LenovoLegionLinux/issues/13)\n- Legion Y530 and Legion Y540: [Issue](https://github.com/johnfanv2/LenovoLegionLinux/issues/16)\n\n- Mostly of Legion gen 8 (2023)\n\n## :warning: Disclaimer\n\n- **the tool comes with no warranty. Use at your own risk.**\n- **this project is not affiliated with Lenovo in any way.**\n- this is a small hobby project; please be patient and read through this readme carefully before you ask for support\n- if your Lenovo Legion laptop is not supported and you are ready to perform some tests please notify me\n- this is a Linux only tool and will probably not run in WSL; for Windows use one of the available Windows tools\n  - [LenovoLegionToolkit](https://github.com/BartoszCichecki/LenovoLegionToolkit)\n  - [LegionFanControl](https://www.legionfancontrol.com/)\n\n## :bulb: Instructions\n\nPlease do the following:\n\n- **follow installation instructions**\n- **then make the test**\n- **if tests are successful, install permanently**\n- **create your fan curve**\n\n### Requirements\n\nYou will need to install the following to download and build it. If there is an error of any package, find the alternative name in your distribution and install them.\n\n**Ubuntu/Debian/Pop!_OS/Mint/elementary OS/Zorin**\n\n```bash\nsudo apt-get update\nsudo apt-get install -y make gcc linux-headers-$(uname -r) build-essential git lm-sensors wget python3-pyqt6 python3-yaml python3-venv python3-pip python3-argcomplete python3-darkdetect\n# Install the following for installation with DKMS\nsudo apt-get install dkms openssl mokutil\n```\n\n**RHEL/CentOS/RockyLinux/Fedora/AlmaLinux**\n\n```bash\nsudo dnf install -y kernel-headers kernel-devel dmidecode lm_sensors python3-PyQt6 python3-yaml python3-pip python3-argcomplete python3-darkdetect\nsudo dnf groupinstall \"Development Tools\"\nsudo dnf group install \"C Development Tools and Libraries\"\n# Install the following for installation with DKMS\nsudo dnf install dkms openssl mokutil\n```\n\nAlternatively, you might use `yum` instead of `dnf` and start with `sudo yum update`. Installing \"C Development Tools and Libraries\" might not be needed depending of your distribution.\n\n**openSUSE**\n\n```bash\nsudo zypper install make gcc kernel-devel kernel-default-devel git libopenssl-devel sensors dmidecode python3-qt5 python3-pip python3-PyYAML python3-argcomplete python3-darkdetect\n# Install the following for installation with DKMS\nsudo zypper install dkms openssl mokutil\n```\n\n*Note:* Check for the correct Header package.\n\n**Arch/Manjaro/EndeavourOS**\n\n```bash\nsudo pacman -S linux-headers base-devel lm_sensors git dmidecode python-pyqt6 python-yaml python-argcomplete python-darkdetect\n# Install the following for installation with DKMS\nsudo pacman -S dkms openssl mokutil\n```\n\n*Note:* Check for the correct Header package.\n\nTroubleshooting:\n\n- Got error `ERROR: Kernel configuration is invalid.`. Just reinstall kernel headers, e.g. in Debian:\n\n```bash\nsudo apt install --reinstall linux-headers-$(uname -r)\n```\n\n### Build and Test Instruction\n\n```bash\ngit clone https://github.com/johnfanv2/LenovoLegionLinux.git\ncd LenovoLegionLinux/kernel_module\nmake\nsudo make reloadmodule\n```\n\n**For further instructions, problems, and tests see `Initial Usage Testing` below. Do them first before a permanent installation.**\n\nExpected result:\n\n- `make` finishes without displaying `Error`\n\nUnexpected result:\n\n- `make` aborts with an error\n- an error of kind `/lib/modules/XXXXXXXX/build: No such file or directory` like the following below. This means that the linux-headers are not installed properly for the current kernel. Please check your currrent kernel with `uname -r` and install linux-headers for it. Then there will be a directory `/lib/modules/XXXXXXXX/` where XXXXXX is the current kernel version, e.g. `5.19.0-28-generic` or `6.2.9-arch1-1`. If you have just updated your packages a restart might help or see https://bbs.archlinux.org/viewtopic.php?id=135931, https://forum.manjaro.org/t/missing-build-directory-in-5-15-16-1-manjaro-headers/101793.\n\n```text\nmake[1]: *** /lib/modules/6.2.9-arch1-1/build: No such file or directory.  Stop.\nmake[1]: Leaving directory '/home/user/LenovoLegionLinux/kernel_module'\nmake: *** [Makefile:13: all] Error 2\n```\n\n### Permanent Install Instruction\n\nAfter successfully building and testing (see below), run from the folder `LenovoLegionLinux/kernel_module`\n\n```bash\nmake\nsudo make install\n```\n\n**You must recompile and reinstall it again with above commands after each kernel update, as usual for external kernel modules.**\nI want to get it merged into the mainline Linux kernel, so this is not needed anymore. So please star this repository :)\n\n### Uninstall Instruction\n\nGo to the folder `LenovoLegionLinux/kernel_module`\n\n```bash\nmake\nsudo make uninstall\n```\n\n### Installing via DKMS\n\n> DKMS is a utility that eliminates the need to manually rebuild and reinstall the driver after every kernel update. DKMS will do the reinstallation automatically.\n\nYou must first install the package to with DKMS. See Requirements section.\n\n```\nsudo mkdir -p /usr/src/LenovoLegionLinux-1.0.0\nsudo cp ./kernel_module/* /usr/src/LenovoLegionLinux-1.0.0 -r\nsudo dkms add -m LenovoLegionLinux -v 1.0.0\nsudo dkms build -m LenovoLegionLinux -v 1.0.0\n```\n\nOr via makefile\n\n```\ncd kernel_module\nsudo make dkms # Don't forget to run as root\n```\n\n#### Secure boot\n\nIf you want the driver to work with secure boot, then follow the steps described here\nhttps://github.com/dell/dkms#secure-boot or here https://wiki.archlinux.org/title/User:Krin/Secure_Boot,_full_disk_encryption,_and_TPM2_unlocking_install#Secure_boot. Note that this is a little more advanced. For initial testing, just load the module as described in the steps above or disable secure boot.\n\n### Uninstalling via DKMS\n\n```\nsudo dkms remove -m LenovoLegionLinux -v 1.0.0\nreboot\n```\n\n### Permanently Patching the Kernel\n\nThis is only useful for advanced users that build there own kernel.\nA automatically generated patch is provided on the release page whenver a stable milestone has been reached: [Releases](https://github.com/johnfanv2/LenovoLegionLinux/releases)\n\n## :octocat: Initial Usage Testing\n\nPlease note:\n\n- Please test in the given order; try to fix a failed text before going to the next.\n- These tests are manual and in the terminal because this is an early version of this tool\n- You can copy-and-paste the commands. Paste with `Ctrl+Shift+V` inside the terminal.\n\n### Quick Test: Module is properly loaded\n\n```bash\n# After you have run from folder LenovoLegionLinux/kernel_module (for non DKMS)\nsudo make reloadmodule \n\n# Check the kernel log\nsudo dmesg\n```\n\nExpected result:\n\n- You should see a line like the following like `legion PNP0C09:00: legion_laptop loaded for this device`. `PNP0C09` might be replaced by other text.\n\nUnexpected result:\n\n- `insmod: ERROR: could not insert module legion-laptop.ko: Invalid module format` after running `make reloadmodule`\n- `legion PNP0C09:00: legion_laptop not loaded for this device`. The kernel module was not loaded properly. Redo first test.\n- `insmod: ERROR: could not insert module legion-laptop.ko: Key was rejected by service`: because you enable secure boot, you cannot load kernel modules.   Disable secure boot (in BIOS) or sign the kernel module with a private key.\n- if you see the following, the driver was not tested for your laptop model; please raise an issue with the maintainer if you think it should be compatible. If you want to try it anyhow with your model use `sudo make forcereloadmodule`\n\n```text\n[126675.495983] legion PNP0C09:00: Module not usable for this laptop because it is not in allowlist. Notify maintainer if you want to add your device or force load with param force.\n[126675.495984] legion PNP0C09:00: legion_laptop not loaded for this device\n[126675.496014] legion: probe of PNP0C09:00 failed with error -12\n```\n\n### Quick Test: Reading Current Fancurve from Hardware\n\n```bash\n# Read the current fancurve and other debug output\nsudo cat /sys/kernel/debug/legion/fancurve\n```\n\nExpected output:\n\n- EC Chip ID should be 8227\n- \"fan curve points\" size must NOT be 0\n- the table that shows the current fan curve must NOT be only zeros, the actual values might change\n- \"fan curve current point id\" and \"EC Chip Version\" might differ from the example\n\nExample:\n\n```text\nEC Chip ID: 8227 \nEC Chip Version: 2a4 \nfan curve current point id: 0 \nfan curve points size: 8 \nCurrent fan curve in UEFI\nrpm1|rpm2|acceleration|deceleration|cpu_min_temp|cpu_max_temp|gpu_min_temp|gpu_max_temp|ic_min_temp|ic_max_temp\n0 0 2 2 0 48 0 59 0 41\n1700 1900 2 2 45 54 55 59 39 44\n1900 2000 2 2 51 58 55 59 42 50\n2200 2100 2 2 55 62 55 59 46 127\n2300 2400 2 2 59 71 55 59 127 127\n2600 2700 2 2 68 76 55 64 127 127\n2900 3000 2 2 72 81 60 68 127 127\n3500 3500 2 2 78 127 65 127 127 127\n```\n\nThe fan curve is displayed as a table with the following columns:\n\n```text\nrpm1: speed in rpm for fan1 at this point\nrpm2: speed in rpm for fan1 at this point\nacceleration: acceleration time (higher = slower)\ndeceleration: deceleration time (higher = slower)\ncpu_min_temp: CPU temperature must go below this before leaving this point\ncpu_max_temp: if CPU temperature is above this value, go to next point \ngpu_min_temp: GPU temp must go below this before leaving this level\ngpu_max_temp: if GPU temperature is above this value, go to next point \nic_min_temp: IC temp must go below this before leaving this level\nic_max_temp: if IC temperature above this value, go to next point \n\nAll temperatures are in degree Celsius.\n```\n\n**Note**: This is just a debug output. The fan curve is configured as usual using the standard `hwmon` interface.\n\nUnexpected:\n\n- `/sys/kernel/debug/legion/fancurve: No such file or directory`: Kernel module was not loaded properly\n- `cat: /sys/kernel/debug/legion/fancurve: Permission denied` you have forgot sudo\n\n### Quick Test: Read Sensor Values from Hardware\n\n- display sensor values and check that it contains lines with \"Fan 1\", \"Fan 2\", \"CPU Temperature\", \"GPU Temperature\":\n\n```bash\n# Run the command sensors\nsensors\n```\n\n- display sensor values\n- increase the CPU load and check if\n  - displayed CPU temperature increases\n  - displayed fan speed increases\n- display sensor values\n- increase the GPU load and check if GPU temperature changes\n  - displayed CPU temperature increases\n  - displayed fan speed increases\n\nExpected output:\n\n- Output of `sensors` contains something like\n  ```text\n  legion_hwmon-isa-0000\n  Adapter: ISA adapter\n  Fan 1:           1737 RPM\n  Fan 2:           1921 RPM\n  CPU Temperature:  +42.0°C  \n  GPU Temperature:  +30.0°C  \n  IC Temperature:   +41.0°C  \n  ```\n- if GPU is in deep sleep, its reported temperature is 0; run something on the GPU to test it\n- temperatures are valid: in particular not 0 (except GPU see above)\n- fan speeds are valid: if fan is off it is 0, otherwise greater than 1000 rpm\n- temperatures and fan speeds increase as expected\n\nUnexpected output:\n\n- `Command 'sensors' not found`: Install `sensors` from the package `lm-sensors`\n- no entries for \"Fan 1\", \"Fan 2\" etc. are shown. The kernel module was not loaded properly. Redo first test.\n\n### Quick Test: Change Current Fan Curve from Hardware with hwmon\n\n```bash\n# Change the RPM of fans at the second and third point of the fan curve to 1500 rpm, 1600 rpm, 1700 rpm, 1800 rpm.\n# Get root\nsudo su\n# As root enter\n# 2. point, 1. fan\necho 1500 > /sys/module/legion_laptop/drivers/platform:legion/PNP0C09:00/hwmon/hwmon*/pwm1_auto_point2_pwm\n# 2. point, 2.fan\necho 1600 > /sys/module/legion_laptop/drivers/platform:legion/PNP0C09:00/hwmon/hwmon*/pwm2_auto_point2_pwm\n# 3. point, 1. fan\necho 1700 > /sys/module/legion_laptop/drivers/platform:legion/PNP0C09:00/hwmon/hwmon*/pwm1_auto_point3_pwm\n# 3. point, 2.fan\necho 1800 > /sys/module/legion_laptop/drivers/platform:legion/PNP0C09:00/hwmon/hwmon*/pwm2_auto_point3_pwm\n\n\n# Read the current fancurve and check if changes were made\ncat /sys/kernel/debug/legion/fancurve\n```\n\nExpected:\n\n- the controller might have loaded default values if you pressed Ctrl+Q(or FN+Q on certain devices) to change the power mode or waited too long; then try again\n- The entries in the fan curve are set to their values. The other values are not relevant (marked with XXXX)\n\n```\nrpm1|rpm2|acceleration|deceleration|cpu_min_temp|cpu_max_temp|gpu_min_temp|gpu_max_temp|ic_min_temp|ic_max_temp\nXXXX XXXX XXXX XXXX XXXX XXXX XXXX XXXX XXXX XXXX\n1500 1600 XXXX XXXX XXXX XXXX XXXX XXXX XXXX XXXX\n1700 1800 XXXX XXXX XXXX XXXX XXXX XXXX XXXX XXXX\nXXXX XXXX XXXX XXXX XXXX XXXX XXXX XXXX XXXX XXXX\nXXXX XXXX XXXX XXXX XXXX XXXX XXXX XXXX XXXX XXXX\nXXXX XXXX XXXX XXXX XXXX XXXX XXXX XXXX XXXX XXXX\nXXXX XXXX XXXX XXXX XXXX XXXX XXXX XXXX XXXX XXXX\nXXXX XXXX XXXX XXXX XXXX XXXX XXXX XXXX XXXX XXXX\n```\n\n**If you want to reset your fan curve, just toggle with Ctrl+Q or Fn+Q the power mode or restart and everything is gone.**\n\nUnexpected:\n\n- `file not found`: please report your problem as a Github Issue\n- the values have not changed\n- there are different values\n\n### Quick Test: Set your custom fan curve\n\nSet a custom fan curve with the provided script. See `Creating and Setting your own Fan Curve` below.\n\n### Test: Finish\n\n- If you are satisfied with the test results, then you can install the kernel module permanently (see above).\n- Create a GitHub Issue and report if the test work or fail.\n  - Please include exact laptop model\n  - If errors occurred, include output of commands.\n- You also might to want to star this repository\n\n## :computer: Normal Usage\n\n**you have to install the kernel module permanently (see above), otherwise you must reload it manually after each restart**\n\n### Temperature and Fan Monitoring\n\nThe temperatures and fan speeds should be displayed in any graphical tool that monitors them, e.g. psensor. You have to install it first before running:\n\n```bash\npsensor\n```\n\n<p align=\"center\">\n    <img height=\"450\" style=\"float: center;\" src=\"doc/assets/psensor.png\" alt=\"psensor\">\n</p>\n\n### Changing and Setting your own Fan Curve with the Python GUI\n\nStart the GUI as root\n\n```bash\n# run from folder LenovoLegionLinux\nsudo python/legion_linux/legion_linux/legion_gui.py\n```\n\n<p align=\"center\">\n    <img height=\"450\" style=\"float: center;\" src=\"doc/assets/fancurve_gui.jpg\" alt=\"fancurve\">\n</p>\n\n- with `Read from HW` you can read the current fan curve that is saved in the hardware and display it.\n- you can edit the values of the fancurve. They will not applied to hardware until your press `Apply to HW`\n- press `Apply to HW` to write the currently displayed fancurve to hardware and activate it\n- you can load and save a fancurve to a preset. Select the preset with the drop-down menu and press `Load from Preset` or `Save to preset`.\n- loading a preset will just display it. You still have to press `Apply to HW` to activate it\n- presets are stored in a yaml file in `/root/.config/legion_linux/`. You can edit them also manually.\n- the number of points is fixed depending on power mode. Deactivated points are currently displayed as `0`s.\n- lock fan controller: enabling this will freeze the current fan speed and the temperatures used to control the fan controller\n\nUnexpected:\n\n- an error is displayed or everything is `0`: kernel module not loaded or installed (see above) or not compatible (do manual tests from above)\n- an value is not accepted when `Write to HW`: the value is out-of-range and was not accepted by hardware\n\n### Changing and Setting your own Fan Curve with the Python CLI\n\nYou can do the same as the GUI from a CLI program. It will access the same presets.\n\n```bash\n# run from folder LenovoLegionLinux\nsudo python/legion_linux/legion_linux/legion_cli.py\n```\n\n```text\nusage: legion_cli.py [-h] {fancurve-write-preset-to-hw,fancurve-write-hw-to-preset,fancurve-write-file-to-hw,fancurve-write-hw-to-file} ...\n\nLegion CLI\n\noptions:\n  -h, --help            show this help message and exit\n\nsubcommands:\n  {fancurve-write-preset-to-hw,fancurve-write-hw-to-preset,fancurve-write-file-to-hw,fancurve-write-hw-to-file}\n    fancurve-write-preset-to-hw\n                        Write fan curve from preset to hardware\n    fancurve-write-hw-to-preset\n                        Write fan curve from hardware to preset\n    fancurve-write-file-to-hw\n                        Write fan curve from file to hardware\n    fancurve-write-hw-to-file\n                        Write fan curve from hardware to file\n```\n\n### Creating and Setting your own Fan Curve with Script\n\nJust run the script to set the fan curve. It is in the folder `LenovoLegionLinux`.\n\n```bash\n# Go to folder LenovoLegionLinux and run it. It should output \"Writing fancurve successful!\" if it finishes successful\nsudo ./setmyfancurve.sh\n# And check new fan curve\nsudo cat /sys/kernel/debug/legion/fancurve\n```\n\nOpen the file `setmyfancurve.sh` and edit it to adapt the values in the script to create your own fan curve. Follow the description in the file.\n\nUnexpected output:\n\n- `bash: ./setmyfancurve.sh: Permission denied`: You have to make the script executable with `chmod +x ./setmyfancurve` first\n- script does not end with \"fancurve set\": maybe path to hwmon changed; Please report this\n\nNote:\n\n- **If you want to reset your fan curve, just toggle with Ctrl+Q or Fn+Q the power mode or restart and everything is gone.**\n- Currently, there is no GUI available.\n- Currently, the hardware resets the fan curve randomly or if you change power mode, suspend, or restart. Just run the script again.\n- You might want to create different scripts for different usages. Just copy it and adapt the values.\n\n### Change power mode from software\n\nFor this to work, you must install the kernel module permanently (see above). Alternatively, you can restart the the power daemon (`systemctl restart power-profiles-daemon.service` in Ubuntu) after reloading the kernel module (see above).\n\n#### Modify/Control with GUI\n\nWith the GUI, the current power mode can be changed by selecting the mode in the box labeled with `Power mode/platform profile`.\n\n#### Modify/Control with Widget\n\nIn Ubuntu/Gnome go to `Settings->Power->Power Mode/Power Saving Option` or the applet in the top right.\n\n<p align=\"center\">\n    <img height=\"450\" style=\"float: center;\" src=\"doc/assets/powermode.png\" alt=\"psensor\">\n</p>\nAutomatic change of power mode can be changed in the settings of the distribution ( in Ubuntu).\n\n#### Modify with CLI\n\n```bash\n# List all profiles (power-saver = quiet= blue)\npowerprofilesctl list\n\n#   performance:\n#     Driver:     platform_profile\n#     Degraded:   no\n\n#   balanced:\n#     Driver:     platform_profile\n\n# * power-saver:\n#     Driver:     platform_profile\n\n# Set a profile, e.g. power-saver=quiet\npowerprofilesctl set power-saver\n# or balanced\npowerprofilesctl set balanced\n# or performance\npowerprofilesctl set performance\n```\n\nAlternatively, you can also directly access it on a lower level:\n\n```bash\n# Access current profile\ncat /sys/firmware/acpi/platform_profile\n\n# Change current profile (AS ROOT): available modes quiet, balanced, performance, balanced-performance\n# quiet = power-saver\necho quiet > /sys/firmware/acpi/platform_profile\n# or balanced\necho balanced > /sys/firmware/acpi/platform_profile\n# or performance\necho performance > /sys/firmware/acpi/platform_profile\n# or custom-mode = balanced-performance (not available on all models); the LED should turn pink/purple\necho balanced-performance > /sys/firmware/acpi/platform_profile\n```\n\n#### Custom Power Mode\n\nIf you model support the custom power mode, then you can:\n\n- enter custom power mode\n- LED should turn pink/purple\n- customnize CPU/GPU boost and TGP settings\n\nYou can change to it with in the GUI: Open the GUI and select \"Custom Mode\" for power profile. Alternativley, you can change to it with in the command line with:\n\n```bash\necho balanced-performance > /sys/firmware/acpi/platform_profile\n```\n\nUnfortunately, the `power-profile-deamon` or `powerprofilesctl` currently do not support this mode.\n\n### Enable or disable the mini fan curve\n\nIf the laptop stays cool for a longer time, it will enable the \"mini fan curve\", a special fan curve with only a few points. It will usually spin the fans. You can enable or disable that. If you want to use your configured fan curve in any case, disable it. The mini fan curve is not available on all models (you will see error for mini fan curve when running `cat /sys/kernel/debug/legion/fancurve`).\n\nWith the GUI, the mini fan curve is enabled/disabled by checking/unchecking the box `Minifancurve if cold` and pressing `Apply to HW`.\n\n### Lenovo Legion Laptop Support Daemon(legiond)\n\nThe LLL Daemon is supported in Systemd and OpenRC(Experimental).\nIf you install LLL manually(not throngh the package manager), you may need to run the [systemd_install.sh](extra/systemd_install.sh) unside the extra folder.\n\nThis Daemon allow to chnage automatically bettwen fan profiles set in the gui depending of the power mode and if the laptop is or not plug in:\nThese are the profiles avaiable:\n\n- quiet-battery - Fan Profile on quiet mode on battery\n- balance-battery - Fan Profile on balance mode on battery\n- balanced-performance-battery - Fan Profile on custom mode on battery\n- quiet-ac - Fan Profile on quiet mode on charger\n- balance-ac - Fan Profile on balance mode on charger\n- balanced-performance-ac - Fan Profile on custom mode on charger\n- performance-ac - Fan Profile on performance mode on charger\n\nExemple profiles are [here](extra/service/profiles) can also be set via the gui for easy set up:\n1 - Set the `Fan Curve` you like to use\n2 - Chose on the profile above in `Fancurve Preset` and hit Sate to Preset (will ask for you password)\n3 - Set all the profiles\n4 - Go to the `Automation` tab and enable the option `Lenovo Legion Laptop Support Daemon Enable`\n\nThis systemd service also have extras features that can be activated by editing [legiond.ini](extra/service/legiond.ini) located /etc/legion_linux/legiond.ini:\n\n- cpu_control - activate use of RyzenADJ on AMD or undervolt on Intel to make custom cpu setting for each power mode\n  - bat_bp - Custom Cpu setting for custom mode on battery\n  - ac_bp - Custom Cpu setting for custom mode on charger\n  - bat_q - Custom Cpu setting for quiet mode on battery\n  - ac_q - Custom Cpu setting for quiet mode on charger\n  - bat_b - Custom Cpu setting for balance mode on battery\n  - ac_b - Custom Cpu setting for balance mode on charger\n  - ac_p - Custom Cpu setting for performance mode on charger\n- gpu_control:\n  - nvidia - use ```nvidia-smi -pl``` command to change the TDP of the GPU (only work on driver 525 and lower)\n  - radeon - use ```rocm-smi --setpoweroverdrive``` command to change the TDP of the GPU\n\n    - tdp_bat_bp - Custom GPU TDP for custom mode on battery\n    - tdp_ac_bp - Custom GPU TDP for custom mode on charger\n    - tdp_bat_q - Custom GPU TDP for quiet mode on battery\n    - tdp_ac_q - Custom GPU TDP for quiet mode on charger\n    - tdp_bat_b - Custom GPU TDP for balance mode on battery\n    - tdp_ac_b - Custom GPU TDP for balance mode on charger\n    - tdp_ac_p - Custom GPU TDP for performance mode on charger\n  - Note: The default values in the .env file are from RTX 3070\n\nNOTE: `legiond.service` depends on `acpid.service` and if you enable `legiond.service`, `acpid.service` should be started automatically.\nIf your CPU tweaks often get reset to default, enable `legiond-cpuset.timer` to override it.\n\nSee [README.org](extra/service/legiond/README.org)\n\n### Lock and Unlock the Fan Controller and Fan Speed\n\nYou can lock the current fan speed. If it is locked, the fan speed will stays constant and does not react to temperature changes. You might want to lock the fan at a high speed during a game. I would not recommend keeping it locked all the time. If your fan controller gets locked accidentally, e.g. by Windows tools, you can unlock it. A locked fan controller might be the reason for a non-working fan control. If the fan controller is locked, the additional temperature sensors are not updated anymore and also stay constant.\n\nWith the GUI, the fan controller is locked by checking the box `Lock fan controller` and pressing `Apply to HW`.\n\n### Set Speed to Maximum Fan Speed\n\nThe fan can be set to maximum fan speed regardless of temperature. This is sometimes called extreme cooling mode or dust cleaning mode. Do not enable this for long periods of time, because it might degrade your fans faster.\n\nWith the GUI, the current fan speed is set to the maximum possible value by checking `Set speed to maximum fan speed` and pressing `Apply to HW`.\n\nThis is currently not available in many models.\n\n### Set Battery Conservation Mode to Prolong Battery Life when AC is plugged in\n\nYou can enable battery conservation mode. When conservation mode is enabled, the constant charging of the battery is disabled when the AC (charger) is plugged in. It will try to keep your battery state of charge at around 50%. This is said to prolong the battery life.\n\nWith the GUI, the battery conservation is enabled by checking the box `Battery conservation` (changes should apply immediately).\n\n### Toggle Fn lock to use special functions on F1-F12 keys without pressing Fn key\n\nYou can lock the Fn keys. You can do it by pressing Fn+Esc. This should also toggle the light in the Esc key (if available in your model).\nIf enabled, the special functions, e.g. increase sound volume on F3, is triggered without pressing Fn.\n\nWith the GUI, the Fn-lock is enabled/disabled by checking/unchecking the box `Fn Lock` (changes should apply immediately).\n\n### Enable/Disable Touch Pad\n\nYou can enable or disable the touch pad. You can do it by pressing Fn+F10 (or similar).\n\nWith the GUI, the touch pad is enabled/disabled by checking/unchecking the box `Touch Pad Enabled` (changes should apply immediately).\n\n### Keyboard Backlight\n\n- 4 Zone RGB backlight: please use https://github.com/4JX/L5P-Keyboard-RGB\n- off/on white backlight or off/medium/bright white backlight: supported by this software but can be controlled by all programs for LED control in linux\n\n## Known Bugs\n\nSome bugs cannot be fixed due to the firmware in the hardware:\n\n- size of fan curve cannot be changed (size is 10 on performance mode, 9 otherwise) but you can practically disable points by setting the temperature limits to 127, as already done when writing to `auto_points_size`\n\n## :clap: Credits\n\n### Basis of this work\n\nThank you for your work on Windows tools that were the basis of the Linux support:\n\n* [SmokelessCPU](https://github.com/SmokelessCPUv2), for reverse engineering the embedded controller firmware\n  and finding the direct IO control method to communicate with the embedded controller\n* [FanFella](https://github.com/SmokelessCPUv2), for finding the address to lock or unlock the fan controller\n* [Bartosz Cichecki](https://github.com/BartoszCichecki), for creating [LenovoLegionToolkit](https://github.com/BartoszCichecki/LenovoLegionToolkit), a Windows tool for newer Legion models that controls the Laptop with ACPI/WMI methods. Even this README is heavily inspired on it.\n* [0x1F9F1](https://github.com/0x1F9F1), for reverse engineering the fan curve in the embedded controller firmware\n  and creating the Windows tool [LegionFanControl](https://github.com/0x1F9F1/LegionFanControl)\n* [ViRb3](https://github.com/ViRb3), for creating [Lenovo Controller](https://github.com/ViRb3/LenovoController), which was used as a base\n  for [LenovoLegionToolkit]\n* [Luke Cama](https://www.legionfancontrol.com/), for his closed-source tool [LegionFanControl](https://www.legionfancontrol.com/) that controls older laptops by directly interacting with the embedded controller\n* David Woodhouse, for his work on the ideapad Linux driver [ideapad-laptop](https://github.com/torvalds/linux/blob/0ec5a38bf8499f403f81cb81a0e3a60887d1993c/drivers/platform/x86/ideapad-laptop.c), which was a heavy inspiration for this Linux driver\n\n### Contributors to Lenovo Legion Laptop Support\n\nThank you for your contribution for the Linux support:\n\n* [normaneye](https://github.com/normaneye), fixing GPU temperature bug in GUI\n* [Petingoso](https://github.com/Petingoso), fix script to run withou sudo\n* [XenHat](https://github.com/XenHat), fix README\n\nAlso please tell me if it works or does not work on your laptop.\n\n### Tools that are based on LenovoLegionLinux\n#### Plasma Vantage\nPlasmaVantage is a Plasma Widget for KDE. It is an alternative GUI for the LenovoLegionLinux kernel module. It is availabe in the [KDE stroe](https://store.kde.org/p/2150610/) or with source [here](https://gitlab.com/Scias/plasmavantage).\n\n\n## :interrobang: Frequency Asked Questions\n\n### What are the new temperatures?\n\nThese are the temperatures measured and used by the embedded controller. Only they are relevant for the fan controller.\nThey are provided by the new kernel module and otherwise not accessible because they are read from the embedded controller.\n\n### What are the new fan speed sensors?\n\nThey report the fan speed in revolutions per minute (rpm). They are provided by the new kernel module and otherwise not accessible because they are read from the embedded controller.\n\n### What temperatures are used for controlling the fan speed?\n\nThe CPU, GPU, and \"IC\" temperature is used. These are (usually) additional sensors that are different from the temperature sensors that are reported when you do not use the kernel model. In particular, the \"IC\" temperature limit might be set to a low value which results in almost-always running fans.\n\n### My CPU and GPU temperatures are low but the fan is still running?\n\nSee above. In particular, the  \"IC\" temperature sensor.\n\n### Is the fan speed controlled by power consumption?\n\nI have no reason to believe that. As far as I know and observed, only the temperatures are used.\n\n### My fans do not spin up, never stop, or never change speed (after using other tools)?\n\nIf they always have roughly constant speed, maybe you have locked the fan controller, often called locking fan speed.\nYou can unlock/lock the fan speed controller in the GUI (see above). I would recommend not locking them. Doing\na BIOS/UEFI update usually also unlocks it. But beware and consider making a BIOS (re)-update.\n\nIf the fans never spin up fast even under hight load, the fan controller might be locked (above). Additionally,\nalso check that the reported temperatures for CPU (or GPU) really increase under load. Only, the temperatures\n\"CPU Temperature\", \"GPU Temperature\", and \"IC Temperature\" are used for fan control. These, are used internally\nby the fan controller in hardware.\n\nIf otherwise the fans never stop, you might have set a very low upper temperature limit for CPU, GPU or IC. Many\nmodels also come with a low temperature limit even on quiet mode, so fans never really turn off. You can just increase the temperature\nlimits for the lowest level.\n\n### The fans are loud when idle.\n\nSee above.\n\n### The fans turn on when doing light work like browsing.\n\nEven when browsing there might be small bursts of work for the CPU. So it gets hot for a short time and the fans turn on. You can:\n\n- Change the fan curve, in particular increase temperature limit and increase acceleration time\n- Disable CPU boost mode\n- Also see above\n\n### The reported temperatures do not change or seem wrong.\n\nSee above.\n\n### Even under high load, the fans are not going fast enough.\n\nSee above.\n\n### After a BIOS update something, e.g. the fan controls, does not work anymore?\n\nMaybe there was a problem during the BIOS update. Downgrade to an older version again. Then test it with the old version. Then do the BIOS upgrade again and check with the version.\n\n### How to do a BIOS upgrade or reset the embedded controller to fix a problem?\n\nThe easiest way is to downgrade to a older version and then upgrade to the current version again. Also test it with the old version.\nYou can also just try reset the embedded controller by:\n\n- Shutdown laptop, unplug everything (charger, USB, ...)\n- Press AND hold power button for 60 seconds; keep holding even if it turns on\n- After 60 seconds, release power button\n- Press power button shortly to turn laptop on\n\n### What does quiet, balanced, or performance mode do?\n\nYou can switch the mode by pressing Fn+Q and it will change the mode in the firmware and the color of the LED, even without any driver support (= without this kernel module).\n\nChanging power mode without Lenovo Legion Linux is purely implemented in hardware:\n\n- The color of LED changes.\n- Fan curve in embedded controller changes.\n- Other purely hardware configs might also change, but I have not observed one.\n- ~~As far as I know, power saving or performance of CPU does not change, as this is controlled by kernel or tools like cpupower~~\n- An analysis of the ACPI firmware, which is \"stored in hardware\", shows that some power options, e.g. the STAPM limit, of the CPU and GPU are changed via ACPI calls. This can be observed by changing power mode with Fn+Q and checking CPU power limits, e.g. with `ryzenadj` for AMD CPUs. ~~However, no changes to the GPU power limits are observed on NVIDIA GPUs, which might indicate that the integration of ACPI and GPU driver is faulty on Linux~~ On driver 535+, GPU power limits for nvidia changes on battery power (40w on quiet and 50w on balanced for RTX 3070), on power adapter, the power limit are allways set to max on peformance (reported by `nvidia-smi`), but more power is allowed to the GPU on performance or custom mode in demanding GPU tasks. If the GPU power limit on performance mode is stuck on 80W compared to 115W/130W on Windows, you're affected by this bug: [NVIDIA/open-gpu-kernel-modules#483](https://github.com/NVIDIA/open-gpu-kernel-modules/issues/483).\n- Without Lenovo Legion Linux, the kernel or other system tools will not know that you have changed the power mode.\n\nChanging power mode **with** Lenovo Legion Linux:\n\n- It changes all of the above.\n- Additionally the driver in Lenovo Legion Linux makes this information available to the kernel and other services like the Power Profiles daemon; Those can, if configured, change the performance of the CPU or GPU.\n\nOn Windows it is similar: Changing the power mode is reported to the system or tools like Vantage which change the power plan.\n\n### Should I use balanced mode or performance for gaming?\n\nThe difference in usable performance (FPS) is minimal. Use performance mode to get the utmost highest performance, otherwise use the balanced mode.\n\n### One fan runs at full speed all the time. What should I do?\n\nFirst check that the fan curve is set properly and this is **not** a misconfiguration. Then check if the temperatures used for fan control (see: [\"new temperatures\"](#what-are-the-new-fan-speed-sensors)) have low values on idle. If just one fan is on full speed but the other one is controlled according to fan curve, then you should [reset the BIOS and EC controller](#how-to-do-a-bios-upgrade-or-reset-the-embedded-controller-to-fix-a-problem).\n\n### What is \"advanced thermal optimization\" in the BIOS?\n\nYou can change the fan curve and minimal fan speed that are programmed into the hardware:\n\n- `off`: Turn off the fan if cold enough\n- `level 1`: Minimal fan speed level 1\n- `level 2`: Minimal fan speed level 2\n- `level 3`: Minimal fan speed level 3\n\nAlso see: https://forums.lenovo.com/t5/Gaming-Laptops/Legion-7-Bios-What-is-advanced-thermal-optimization/m-p/5079357\n\n### I don't use GNOME. How do I get a nice widget for changing the power mode?\n\nThe power mode can be changed using Fn+Q.\n\nIf you use KDE, the power mode can be changed from the \"Battery And Brightness\" icon.\n\nIf you don't need a GUI, you could [use the commandline](#modify-with-cli).\n\nFor other desktop environments:\nThis driver makes power mode changing available to tools like `power-profiles-daemon`.\n\nFirst you should try changing from the terminal, see [\"Powermode -> Modify with CLI\"](#modify-with-cli). If it works, then install `power-profiles-daemon`.\n\nA graphical GNOME applet uses `power-profiles-daemon` to change the power mode using software. It is not provided by this tool, but is a standard tool already integrated into GNOME.\n\nFor KDE, there is the graphical tool `powerdevil`, which also uses `power-profiles-daemon` internally.\n\n### It almost works, but (some) temperature sensor/changing point in fan control or (some) fan speed is not working. What should I do?\n\nFirst, try to [reset the embedded controller](#how-to-do-a-bios-upgrade-or-reset-the-embedded-controller-to-fix-a-problem) OR do a BIOS update/downgrade to reset everything.\n\n### It does not work after a kernel update.\n\nOption 1: Recompile/reinstall the module, see: [Permanent Install Instructions](#permanent-install-instruction).\nOption 2: Use DKMS to automate this process for every kernel update, see: [Installing via DKMS](#installing-via-dkms)\n\n### My screen is dimmed after a time of inactivity even if I disabled that in Ubuntu. How to fix that? (GNOME)\n\n```bash\ngsettings set org.gnome.settings-daemon.plugins.power idle-brightness 100\n```\n\nSee: https://old.reddit.com/r/linuxquestions/comments/utle2w/ubuntu_2204_is_there_a_way_to_disable_screen/\n\n### How to power down the dGPU while not in use and use the iGPU for power saving instead?\n\nThis describes _a way_ to configure and use it on Ubuntu using X11. It configures it such that\neverything runs on iGPU if not otherwise selected.\n- Check that Hybrid Mode is enabled in the BIOS.\n- Check that X11 is used and not Wayland:\n```bash\n# It should output something like: \"x11\"\necho $XDG_SESSION_TYPE\n```\n- Install `prime` and select \"on-demand\". A restart might be needed:\n```bash\nsudo prime-select on-demand\n```\n- Check with `nvidia-smi` that no programs run on the dGPU:\n```bash\nsudo nvidia-smi\n```\n  Note that the one process `0   N/A  N/A  ***  G   /usr/lib/xorg/Xorg   4MiB` is ok. Moreover, note\n  that running `nvidia-smi` powers up the GPU for some time.\n- Allow `d3cold` mode:\n```bash\n# Note: Only one of the commands would work; depending on the path to the device which is your GPU\necho 1 > /sys/devices/pci0000\\:00/0000\\:00\\:01.1/d3cold_allowed \necho 1 > /sys/devices/pci0000\\:00/0000\\:00\\:01.0/d3cold_allowed \n```\nCheck that GPU Runtime `D3` status is enabled:\n```bash\nsudo cat /proc/driver/nvidia/gpus/0000:01:00.0/power\n```\n- Check the current state of the GPU:\n```bash\n# Note: Only one of the commands would work; depending on the path to the device which is your GPU\n# It should output \"D3cold\":\ncat /sys/devices/pci0000\\:00/0000\\:00\\:01.0/power_state\ncat /sys/devices/pci0000\\:00/0000\\:00\\:01.1/power_state \n```\n- Run `nvidia-smi`, which powers the GPU up for some time. Check the `power_state` again. It should go to `D0` and then go to `D3cold` after some time. Compared to `nvidia-smi`, running `cat /sys/devices/pci0000\\:00/0000\\:00\\:01.1/power_state ` does not seem to wake up the GPU.\n\n\n```bash\nsudo cat /proc/driver/nvidia/gpus/0000:01:00.0/power\n```\n\n\n\n## :question: Unanswered Questions\n\n- What exactly is the third temperature? Currently, it is currently called IC Temperature.\n- Is \"quiet mode\" suitable for gaming?\n\n## :information_desk_person: Overview for Developers\n\nThe software consists of two parts:\n\n- Kernel module in the `kernel_module` folder:\n  - Accesses the embedded controller by writing to its memory\n  - Creates new \"files\": `/sys/kernel/debug/legion/fancurve`, `/sys/module/legion_laptop/drivers/platform\\:legion/PNP0C09\\:00/powermode` ,\n    `/sys/class/hwmon/X/temp1_input`, `/sys/class/hwmon/X/pwmY_auto_pointZ_pwm`, ... that allows to\n    read the temperatue sensors, control the fan curve, change power mode etc.\n- Python packages in the `python` folder:\n  - `legion.py`: A Python module to modify the fan curve and other settings from Python; Encapsulate reading and writing to the \"files\" provided by the above kernel module and other modules like `ideapad_laptop`; All changes from `legion_gui.py` and `legion_cli.py` goes through this Python module.\n  - `legion_gui.py`: a GUI program that uses `legion.py` to change setttings.\n  - `legion_cli.py`: a CLI program that uses `legion.py` to change setttings.\n\n## Legal Matters\n\nReference to any Lenovo products, services, processes, or other information and/or use of Lenovo Trademarks does not constitute or imply endorsement, sponsorship, or recommendation thereof by Lenovo.\n\nThe use of Lenovo®, Lenovo Legion™, Yoga®, IdeaPad® or other trademarks within this website and associated tools and libraries is only to provide a recognisable identifier to users to enable them to associate that these tools will work with Lenovo laptops.\n"
        },
        {
          "name": "README_zh-hans.md",
          "type": "blob",
          "size": 8.54296875,
          "content": "<h1 align=\"left\">\n  <a href=\"https://github.com/johnfanv2/LenovoLegionLinux\" target=\"_blank\">\n    <picture>\n      <source media=\"(prefers-color-scheme: light)\" srcset=\"https://raw.githubusercontent.com/johnfanv2/LenovoLegionLinux/HEAD/doc/assets/legion_logo_dark.svg\">\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://raw.githubusercontent.com/johnfanv2/LenovoLegionLinux/HEAD/doc/assets/legion_logo_light.svg\">\n      <img alt=\"LenovoLegionLinux\" src=\"https://raw.githubusercontent.com/johnfanv2/LenovoLegionLinux/HEAD/doc/assets/legion_logo_dark.svg\" height=\"50\" style=\"max-width: 100%;\">\n    </picture>\n  </a>\n    <strong> 联想Legion Linux支持 </strong>\n</h1> \n\n[![Build](https://github.com/johnfanv2/LenovoLegionLinux/actions/workflows/build.yml/badge.svg?branch=main)](https://github.com/johnfanv2/LenovoLegionLinux/actions/workflows/build.yml)\n[![Join Discord](https://img.shields.io/discord/761178912230473768?label=Legion%20Series%20Discord)](https://discord.com/invite/legionseries)\n[![Check Reddit](https://img.shields.io/static/v1?label=Reddit&message=LenovoLegion&color=green)](https://www.reddit.com/r/LenovoLegion/)\n[![More Reddit](https://img.shields.io/static/v1?label=Reddit&message=linuxhardware&color=blueviolet)](https://www.reddit.com/r/linuxhardware/)\n</br>\n[![Unbutu and Debian PPA](https://img.shields.io/badge/Ubuntu%2FDebian-Debian_Repo-red)](https://tracker.debian.org/pkg/lenovolegionlinux)\n[![Fedora Copr](https://img.shields.io/badge/Nobara%2FFedora-LenovoLegionLinux-blue)](https://copr.fedorainfracloud.org/coprs/mrduarte/LenovoLegionLinux/)\n[![AUR](https://img.shields.io/aur/version/lenovolegionlinux-git?label=AUR%20Package)](https://aur.archlinux.org/packages/lenovolegionlinux-git)\n[![AUR DKMS](https://img.shields.io/aur/version/lenovolegionlinux-dkms-git?label=AUR%20Package%20%28dkms%29)](https://aur.archlinux.org/packages/lenovolegionlinux-dkms-git)\n[![GURU Overlay](https://img.shields.io/badge/Gentoo_Overlay-GURU-blueviolet)](https://gitweb.gentoo.org/repo/proj/guru.git/)\n[![LLL Package](https://img.shields.io/badge/Live%20Ebuild-sys--firmware%2Flenovolegionlinux-blueviolet)](https://gpo.zugaina.org/sys-firmware/lenovolegionlinux)\n[![NixOS](https://img.shields.io/badge/NixOS--package-lenovo--legion-9cf)](https://search.nixos.org/packages?channel=unstable&from=0&size=50&sort=relevance&type=packages&query=lenovo-legion)\n</br>\n[![Nobara](https://img.shields.io/badge/Nobara_Linux-Kernel_Patched-green)](https://nobaraproject.org/)\n[![CachyOS](https://img.shields.io/badge/CachyOS_Linux-Kernel_Patched-green)](https://cachyos.org)\n[![PikaOS](https://img.shields.io/badge/PikaOS_Linux-Kernel_Patched-green)](https://pika-os.com/)\n---\n**本项目与联想没有任何关系**。\n\n\n# 如果你有 2022 或 2023 型号的机器，请帮忙在[这里](https://github.com/johnfanv2/LenovoLegionLinux/issues/46)测试新功能。\n# 如果你的机器的盖子（A 面 的 Y-logo）或 IO-ports（所有 Legion 7）上有灯，请帮忙在[这里](https://github.com/johnfanv2/LenovoLegionLinux/issues/54)测试对它的控制。\n\n\n联想 Legion Linux (LLL) 为联想 Legion 系列笔记本电脑带来了更多的 Linux 驱动和工具，其为 Lenovo Vantage 或 Legion Zone（都是 Windows 系统）的替代品。\n\n其允许控制一些功能，如风扇曲线和电源模式。\n\n⭐ **如果这个库有用或将来可能有用，请 star 这个仓库**。\n\n🌟 **我的目标是把驱动合并到 Linux 的主线内核中，这样它就会自动与 Linux 一起出现，在 Linux 更新后不需要重新编译**。\n\n💥 **Starring 表明这对我和 Linux 社区是有用的，由此便有希望合并到内核中去。**\n\n## 🚀 特点\n<p align=\"center\">\n    <img height=\"300\" style=\"float: center;\" src=\"doc/assets/fancurve_gui.jpg\" alt=\"fancurve\">。\n    <img height=\"300\" style=\"float: center;\" src=\"doc/assets/psensor.png\" alt=\"psensor\">\n    <img height=\"300\" style=\"float: center;\" src=\"doc/assets/powermode.png\" alt=\"powermode\"> </p\n</p>\n\n- [x] 对内存和 CPU 的光照，没有遥测。\n- [x] 用于风扇曲线的小型 GUI ；其他功能由分布的 GUI 工具提供\n- [x] 也可以通过脚本或终端进行完全控制\n- [x] 设置一个功能齐全的自定义风扇曲线，最多 10 个点\n    - 甚至允许速度低于1600RPM\n    - 当风扇速度（水平）应该改变时设置温度点\n    - 你可以用 CPU、GPU 和 IC 的温度来同时控制风扇\n    - 设置每个级别的风扇速度(RPM)\n    - 为每个级别设置最低温度，在再次降低风扇速度之前必须低于该温度。\n    - 当风扇速度应该增加或减少时为每个风扇设置加速和减速。\n    - 保存和加载不同模式的预设值\n- [x] 用软件切换电源模式（安静、平衡、性能）。\n    - 也可以用`Fn+Q`来改变\n    - 现在你可以用常规系统设置中的软件来完成\n    - 决定于你的分布，例如，你可以在使用电池时自动切换到安静模式。\n    - 允许根据功率分布来改变不同的风扇分布（[Lenovo Legion Laptop Support Daemon](https://github.com/arttnba3/LenovoLegionLinux/tree/main#lenovo-legion-laptop-support-daemon)）\n- [x] 通过额外的传感器监测风扇速度和 CPU、GPU、IC 的温度。\n- [x] 锁定与解锁风扇控制器和风扇速度\n- [x] 如果温度长时间处于低水平，启用或禁用自动切换到 \"迷你风扇曲线\"。\n- [x] 通过软件切换电池保护模式；在交流电时将电池保持在50%左右，以延长电池寿命\n- [x] 通过软件切换Fn锁；使用F1-F12键的特殊功能而不按Fn键\n- [x] 通过软件启用或禁用触摸板\n\n## :mega: 概述\n- 其带有一个驱动（内核模块），实现了 Linux 的标准接口（sysfs, debugfs, hwmon）。\n- 其使用标准的 Linux 接口从而与命令行/文件接口或标准的 GUI 工具（如 psensor）兼容。\n- 相较于 Windows 的供应商工具，其甚至允许设置风扇曲线。这可以使风扇保持\n    缓慢而安静地运行，而不是不断地在风扇关闭和较吵的风扇之间切换。非常适合在安静的办公室工作🏢。\n  \n  \n\n## 📌 已确认的兼容型号\n\n# 如果你有 2022 或 2023 型号的机器，请帮忙在[这里](https://github.com/johnfanv2/LenovoLegionLinux/issues/46)测试新功能。\n# 如果你的机器的盖子（A 面 的 Y-logo）或 IO-ports（所有 Legion 7）上有灯，请帮忙在[这里](https://github.com/johnfanv2/LenovoLegionLinux/issues/54)测试对它的控制。\n\n其他从 2020 年到 2023 年的联想 Legion 机型也可能可用。以下型号已经过验证。如果你的机型的 BIOS 版本有相同的前导字母，例如 EFCN（如EFCN54WW），那么它可能是可用的。如果你的型号不在列表中，或者不可用，请提出问题。\n- 联想 Legion 5 15IMH05、15IMH05H（BIOS EFCN54WW）：传感器、风扇曲线、电源配置文件\n- 联 想Legion 5 15ACH6H（BIOS GKCN58WW或GKCN57WW），第六代：传感器、风扇曲线、电源配置文件\n- 联想军团 R9000（R9000K2021H）（BIOS GKCN59WW）：传感器、风扇曲线、电源配置文件\n- 联想 Legion 5 Pro 16ACH6H (82JQ) (BIOS GKCN58WW) x 2：传感器、风扇曲线、电源配置文件\n- Legion 5 Pro 16ACH6H (AMD 5800H + Nvidia RTX 3070)：传感器、风扇曲线、电源配置文件\n- 联想 Legion 5 15ARH05A（BIOS FSCN14WW），第5代：传感器、风扇曲线\n- 联想 Legion 5 15ARH05H（BIOS FSCN14WW），第5代：传感器、风扇曲线\n- 联想 Legion 5 15ITH6H（BIOS H1CN49WW，Intel）：传感器、风扇曲线、电源配置文件\n- 联想 Legion 5 15ARH7H（BIOS JUCN55WW），第7代：传感器、风扇曲线、电源配置文件\n- 联想 Legion 5 15ACH6（BIOS HHCN31WW）：传感器、风扇曲线、电源配置文件\n- 联想 Legion S7 16ARHA7（BIOS KFCN32WW）：传感器、风扇曲线（无迷你曲线）、电源配置文件\n- 联想 Legion 5 Pro 16ITH6（BIOS H1CN52WW（H1CN51WW的CPU温度有错误））：传感器、风扇曲线、电源配置文件\n- 联想 Legion 5 15ACH6A（BIOS G9CN30WW），所有AMD变体：传感器、风扇曲线（带迷你风扇曲线）、电源配置文件\n- 联想军团5 17ACH6（BIOS HHCN31WW）：传感器、风扇曲线、电源配置文件\n- 联想 Legion 7i 16ITHG6（BIOS H1CN35WW）：传感器、风扇曲线、电源配置文件\n\n*注：*未被确认的功能可能也可用，只是尚未进行测试。\n\n目前风扇控制对以下型号不起作用。其他功能，可能工作：\n- 带有 BIOS HACN*的 Legion，例如 S7-15ACH6：[问题](https://github.com/johnfanv2/LenovoLegionLinux/issues/13)\n- Legion Y530 和 Legion Y540：[问题](https://github.com/johnfanv2/LenovoLegionLinux/issues/16)\n"
        },
        {
          "name": "deploy",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "extra",
          "type": "tree",
          "content": null
        },
        {
          "name": "kernel_module",
          "type": "tree",
          "content": null
        },
        {
          "name": "python",
          "type": "tree",
          "content": null
        },
        {
          "name": "setmyfancurve.sh",
          "type": "blob",
          "size": 4.091796875,
          "content": "#!/bin/bash\nset -e\n\necho \"MODEL\"\ndmidecode -s system-version\necho \"BIOS\"\ndmidecode -s bios-version\necho \"\"\n\nhwmondir=`find /sys/module/legion_laptop/drivers/platform:legion/PNP0C09:00/hwmon -mindepth 1 -name \"hwmon*\"`\necho \"Using hwmon directory: ${hwmondir}\" \n\n# Disable (0) or Enable (1) switching to minifancurve when everything seems very cool\n# echo 1    > ${hwmondir}/minifancurve\n\n# 1. Fan: Set the fan speed (rmp) of the first fan for the first 6 points (first must be 0)\n# If you want more, just continue \necho 0    > ${hwmondir}/pwm1_auto_point1_pwm\necho 1500 > ${hwmondir}/pwm1_auto_point2_pwm\necho 1900 > ${hwmondir}/pwm1_auto_point3_pwm\necho 2100 > ${hwmondir}/pwm1_auto_point4_pwm\necho 2200 > ${hwmondir}/pwm1_auto_point5_pwm\necho 2500 > ${hwmondir}/pwm1_auto_point6_pwm\n\n# 2. Fan: Set the fan speed (rmp) of the first fan for the first 6 points; first must be 0)\n# If you want more, just continue \necho 0    > ${hwmondir}/pwm2_auto_point1_pwm\necho 1600 > ${hwmondir}/pwm2_auto_point2_pwm\necho 2000 > ${hwmondir}/pwm2_auto_point3_pwm\necho 2200 > ${hwmondir}/pwm2_auto_point4_pwm\necho 2300 > ${hwmondir}/pwm2_auto_point5_pwm\necho 2500 > ${hwmondir}/pwm2_auto_point6_pwm\n\n\n# CPU lower temperature for each level for the first 6 points; first must be 0\necho 0  > ${hwmondir}/pwm1_auto_point1_temp_hyst\necho 46 > ${hwmondir}/pwm1_auto_point2_temp_hyst\necho 52 > ${hwmondir}/pwm1_auto_point3_temp_hyst\necho 56 > ${hwmondir}/pwm1_auto_point4_temp_hyst\necho 58 > ${hwmondir}/pwm1_auto_point5_temp_hyst\necho 67 > ${hwmondir}/pwm1_auto_point6_temp_hyst\n\n# CPU upper temperature for each level for the first 6 points; \necho 49 > ${hwmondir}/pwm1_auto_point1_temp\necho 55 > ${hwmondir}/pwm1_auto_point2_temp\necho 59 > ${hwmondir}/pwm1_auto_point3_temp\necho 63 > ${hwmondir}/pwm1_auto_point4_temp\necho 72 > ${hwmondir}/pwm1_auto_point5_temp\necho 77 > ${hwmondir}/pwm1_auto_point6_temp\n\n# GPU lower temperature for each level for the first 6 points; first must be 0\necho 0  > ${hwmondir}/pwm2_auto_point1_temp_hyst\necho 56 > ${hwmondir}/pwm2_auto_point2_temp_hyst\necho 57 > ${hwmondir}/pwm2_auto_point3_temp_hyst\necho 58 > ${hwmondir}/pwm2_auto_point4_temp_hyst\necho 59 > ${hwmondir}/pwm2_auto_point5_temp_hyst\necho 60 > ${hwmondir}/pwm2_auto_point6_temp_hyst\n\n# GPU upper temperature for each level for the first 6 points; \necho 59 > ${hwmondir}/pwm2_auto_point1_temp\necho 60 > ${hwmondir}/pwm2_auto_point2_temp\necho 61 > ${hwmondir}/pwm2_auto_point3_temp\necho 62 > ${hwmondir}/pwm2_auto_point4_temp\necho 63 > ${hwmondir}/pwm2_auto_point5_temp\necho 64 > ${hwmondir}/pwm2_auto_point6_temp\n\n# IC lower temperature for each level for the first 6 points; first must be 0\necho 0  > ${hwmondir}/pwm3_auto_point1_temp_hyst\necho 56 > ${hwmondir}/pwm3_auto_point2_temp_hyst\necho 57 > ${hwmondir}/pwm3_auto_point3_temp_hyst\necho 58 > ${hwmondir}/pwm3_auto_point4_temp_hyst\necho 59 > ${hwmondir}/pwm3_auto_point5_temp_hyst\necho 60 > ${hwmondir}/pwm3_auto_point6_temp_hyst\n\n# IC upper temperature for each level for the first 6 points; \necho 59 > ${hwmondir}/pwm3_auto_point1_temp\necho 60 > ${hwmondir}/pwm3_auto_point2_temp\necho 61 > ${hwmondir}/pwm3_auto_point3_temp\necho 62 > ${hwmondir}/pwm3_auto_point4_temp\necho 63 > ${hwmondir}/pwm3_auto_point5_temp\necho 64 > ${hwmondir}/pwm3_auto_point6_temp\n\n# Acceleration time (larger = slower acceleartion) for each level for the first 6 points; \necho 5 > ${hwmondir}/pwm1_auto_point1_accel\necho 5 > ${hwmondir}/pwm1_auto_point2_accel\necho 5 > ${hwmondir}/pwm1_auto_point3_accel\necho 4 > ${hwmondir}/pwm1_auto_point4_accel\necho 2 > ${hwmondir}/pwm1_auto_point5_accel\necho 2 > ${hwmondir}/pwm1_auto_point6_accel\n\n# Decleration time (larger = slower acceleartion) for each level for the first 6 points; \necho 4 > ${hwmondir}/pwm1_auto_point1_decel\necho 4 > ${hwmondir}/pwm1_auto_point2_decel\necho 4 > ${hwmondir}/pwm1_auto_point3_decel\necho 3 > ${hwmondir}/pwm1_auto_point4_decel\necho 2 > ${hwmondir}/pwm1_auto_point5_decel\necho 2 > ${hwmondir}/pwm1_auto_point6_decel\n\necho \"Writing fancurve succesful!\"\ncat /sys/kernel/debug/legion/fancurve\necho \"Writing fancurve succesful!\"\necho \"MODEL\"\ndmidecode -s system-version\necho \"BIOS\"\ndmidecode -s bios-version\n"
        },
        {
          "name": "subprojects",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}