{
  "metadata": {
    "timestamp": 1736709832005,
    "page": 299,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "weechat/weechat",
      "stars": 3011,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.380859375,
          "content": "# To use this config on you editor, follow the instructions at:\n# https://editorconfig.org\n\nroot = true\n\n[*]\ncharset = utf-8\ninsert_final_newline = true\nindent_size = 4\nindent_style = space\ntab_width = 8\ntrim_trailing_whitespace = true\n\n[{*.{c,cpp,h}}]\nmax_line_length = 80\n\n[{CMakeLists.txt,*.cmake}]\nmax_line_length = 80\nindent_size = 2\n\n[*.html]\nindent_size = 2\n\n[*.yml]\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2236328125,
          "content": "# files/directories excluded from tarballs\n\n.git*                  export-ignore\ndebian-devel           export-ignore\ndebian-stable          export-ignore\n.mailmap               export-ignore\ntools/build_debian.sh  export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1650390625,
          "content": "# ignored files for Git\n\n/build\n/builddir\n/debian\n/debian-devel/changelog\n/debian-devel/*.log\n/debian-devel/*-stamp\n/debian-stable/*.log\n/debian-stable/*-stamp\n/release\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 0.857421875,
          "content": "# Map author and committer names and email addresses to canonical real names\n# and email addresses.\n#\n# For example with these commands:\n#   git shortlog -nse\n#   git shortlog -se | cut -f2 | sort\n\nSébastien Helleu <flashcode@flashtux.org>\nSébastien Helleu <flashcode@flashtux.org> <flashcode@krypton>\nSébastien Helleu <flashcode@flashtux.org> <flashcode>\nSébastien Helleu <flashcode@flashtux.org> <uid67137>\nNils Görs <weechatter@arcor.de>\nRyuunosuke Ayanokouzi <i38w7i3@yahoo.co.jp>\nKrzysztof Korościk <soltys@soltys.info>\nKrzysztof Korościk <soltys@soltys.info> <soltys1@gmail.com>\nKrzysztof Korościk <soltys@soltys.info> <soltys@szluug.org>\nMarco Paolone <marcopaolone@gmail.com>\n<marcopaolone@gmail.com> <marco@DrB4tch.sitecomwl601>\n<mikaela.suomalainen@outlook.com> <mkaysi@outlook.com>\n<simon@arlott.org> <sa.me.uk>\n<Simon.Kuhnle@cs.fau.de> <simon@blarzwurst.de>\n"
        },
        {
          "name": "AUTHORS.md",
          "type": "blob",
          "size": 2.8662109375,
          "content": "# WeeChat Authors\n\n## Developers\n\n- General code\n  - [Sébastien Helleu](https://github.com/flashcode) (FlashCode)\n- Scripts plugins, debian packager\n  - [Emmanuel Bouthenot](https://github.com/k0lter) (kolter)\n\n## Contributors\n\nAlphabetically:\n\n- Adam Saponara (adsr)\n- Adrian Bjugård\n- Ailin Nemui (Nei)\n- Aleksey V Zapparov\n- Alex Tarkovsky\n- Anders Bergh\n- Andrew Potter (talisein)\n- Antoine Pietri (seirl)\n- Arvydas Sidorenko\n- Asakura\n- Bazerka\n- Benoit Papillault (benoit)\n- Chris Hills\n- Christian Duerr\n- Christian Heinz\n- Christopher O'Neill (deltafire)\n- coypoop\n- Danilo Spinella\n- David Flatz\n- Dmitry Kobylin\n- Dominik Honnef\n- Dominique Martinet\n- dotflac\n- Eduardo Elias\n- Eli Schwartz\n- Elizabeth Myers (Elizacat)\n- Elián Hanisch (m4v)\n- Emanuele Giaquinta\n- Emil Velikov\n- Emir Sarı\n- emk\n- Érico Nogueira\n- Esteban I. Ruiz Moreno (Exio)\n- Evgeny Shmarnev\n- Felix Eckhofer\n- Frank Zacharias\n- Fredrik Fornwall\n- Grant Wu\n- Gu1ll4um3r0m41n\n- Guido Berhoerster\n- Gwenn\n- Hasan Kiran (turgay)\n- Ivan Pešić\n- Ivan Sichmann Freitas\n- Jakub Jirutka\n- James C. Morey\n- Jan Palus\n- Jason A. Donenfeld (zx2c4)\n- JD Horelick (jdhore)\n- jesopo\n- Jim Ramsay (lack)\n- Jiri Golembiovsky (GolemJ)\n- Joey Pabalinas (alyptik)\n- Johan Rylander\n- Johannes Kuhn\n- Joram Schrijver\n- Jos Ahrens\n- Joseph Kichline\n- Josh Soref\n- Juan Francisco Cantero Hurtado\n- Julien Louis (ptitlouis)\n- Karthik K\n- Koka El Kiwi (KiwiDash)\n- Krzysztof Koroscik (soltys)\n- Kyle Fuller (kylef)\n- Kyle Sabo\n- Latchezar Tzvetkoff\n- Lázaro A.\n- Leonid Evdokimov\n- Linus Heckemann\n- LuK1337\n- Maarten de Vries\n- Mantas Mikulėnas (grawity)\n- Marco Paolone\n- Marco Sirabella\n- Mario Campos\n- Mateusz Poszwa\n- Matt Robinson\n- Matthew Horan\n- Matthew Martin\n- Matti Virkkunen\n- Max Anton Teufel\n- Maxim Baz\n- Michael Siegel\n- Miko\n- Miroslav Koskar\n- Murilo Opsfelder Araujo\n- Neui\n- Nick (SolitaryCipher)\n- Nicolas Cavigneaux\n- Nils Görs (nils_2)\n- nyuszika7h\n- Odin\n- Ondřej Súkup\n- Patrick Steinhardt\n- Patrik Janoušek\n- Paul Komkoff\n- Pavel Shevchuk (Stalwart)\n- Peter Boström (pbos)\n- Phillip Sz\n- Pierre Carru\n- Piotr Szymaniak\n- Pistos\n- Quentin Glidic (SardemFF7)\n- Quentin Pradet\n- Quico Noizeux\n- rafasc\n- Raghavendra Prabhu\n- raspbeguy\n- Rettub\n- Rob Campbell\n- Romero B. de S. Malaquias\n- Rudolf Polzer (divVerent)\n- Ruslan Bekenev\n- Ryan Farley\n- Ryan Qian\n- Ryuunosuke Ayanokouzi\n- scumjr\n- Sergio Durigan Junior\n- Shane McCarron\n- Shawn Smith\n- Shun Sakai\n- Simmo Saan (sim642)\n- Simon Arlott\n- Simon Kuhnle\n- Simon Ser\n- Stefano Pigozzi\n- Stfn\n- Sven Knurr (Cthulhux)\n- Tim D. Smith\n- Tim Harder\n- Tobias Stoeckmann\n- Tom Alsberg\n- Tom Fitzhenry\n- Tomoe Mami\n- Tor Hveem (xt)\n- Trevor Bergeron\n- Valentin Lorentz (progval)\n- Vasco Almeida\n- Victorhck\n- Voroskoi\n- wfrsk\n- Wojciech Kwolek\n- W. Trevor King\n- Yannick Palanque\n- Yiheng Cao\n- ZethJack\n- Ørjan Malde\n\n## Contact\n\nSee the [support page](https://weechat.org/about/support/).\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 327.5390625,
          "content": "# WeeChat ChangeLog\n\n## Version 4.6.0 (under dev)\n\n### Changed\n\n- core: add option `-v` to display upgrades in command `/version`\n\n### Added\n\n- core: add command `/pipe`\n- relay/api: add resource `POST /api/completion` ([#2207](https://github.com/weechat/weechat/issues/2207))\n\n### Fixed\n\n- relay: fix crash after `/upgrade` when relay clients are connected\n- api: fix creation of empty buffer in function infolist_new_var_buffer\n- core: fix detection of dl library ([#2218](https://github.com/weechat/weechat/issues/2218))\n- logger: fix path displayed when the logs directory can not be created\n- perl: fix build with Perl < 5.7.29 ([#2219](https://github.com/weechat/weechat/issues/2219), [#2220](https://github.com/weechat/weechat/issues/2220))\n- python: enable subinterpreters ([#2222](https://github.com/weechat/weechat/issues/2222))\n\n## Version 4.5.1 (2024-12-23)\n\n### Fixed\n\n- relay: fix crash after `/upgrade` when relay clients are connected\n- api: fix creation of empty buffer in function infolist_new_var_buffer\n- core: fix detection of dl library ([#2218](https://github.com/weechat/weechat/issues/2218))\n- logger: fix path displayed when the logs directory can not be created\n- perl: fix build with Perl < 5.7.29 ([#2219](https://github.com/weechat/weechat/issues/2219), [#2220](https://github.com/weechat/weechat/issues/2220))\n\n## Version 4.5.0 (2024-12-15)\n\n### Changed\n\n- api: return the buffer input callback return code in functions command and command_options\n- api: add special value `-` (hyphen-minus) in options of function command_options to prevent execution of commands\n- api: add property `hotlist_conditions` in function buffer_set\n- api: add support of flags in functions hook_signal_send and hook_hsignal_send\n- relay/api: allow array with multiple requests in websocket frame received from client\n- relay/api: support passing authentication in sub protocol header ([#2205](https://github.com/weechat/weechat/issues/2205))\n- relay/api: combine request headers with the same name ([#2206](https://github.com/weechat/weechat/issues/2206))\n- core, plugins: simplify help on parameters that can be repeated in commands\n- core: add optional hook types in command `/debug hooks`\n- php: add detection of PHP 8.3 and 8.4\n- ruby: fix detection of Ruby on macOS 14, require CMake ≥ 3.18 ([#1156](https://github.com/weechat/weechat/issues/1156))\n- build: require Curl ≥ 7.47.0 ([#2195](https://github.com/weechat/weechat/issues/2195))\n- build: require GnuTLS ≥ 3.3.0 ([#2193](https://github.com/weechat/weechat/issues/2193))\n\n### Added\n\n- relay: display connection status in input prompt of remote buffers, if not connected or if fetching data from remote\n- irc: add option irc.look.notice_nicks_disable_notify\n- irc: add infos \"irc_ptr_server\", \"irc_ptr_channel\" and \"irc_ptr_nick\"\n\n### Fixed\n\n- core, plugins: fix integer overflow in loops ([#2178](https://github.com/weechat/weechat/issues/2178), [CVE-2024-46613](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-46613))\n- irc: decode IRC colors only when displaying messages in buffer, store nick info with IRC colors (host, account, real name)\n- irc: do not strip trailing spaces from incoming IRC messages\n- irc: fix crash on /list buffer when a filter is set ([#2197](https://github.com/weechat/weechat/issues/2197))\n- script: fix crash on /script buffer when a filter is set ([#2214](https://github.com/weechat/weechat/issues/2214), [#2215](https://github.com/weechat/weechat/issues/2215))\n- exec: fix unexpected execution of command with `/exec -o` when the command starts with two command chars ([#2199](https://github.com/weechat/weechat/issues/2199))\n- relay/api: fix empty nicklist in remote buffers after connection or reconnection\n- relay/api: reply HTTP 400 (Bad Request) when the body received is not a dict in websocket data\n- core: fix too many sorts of hotlist when buffers are moved ([#2097](https://github.com/weechat/weechat/issues/2097))\n- core: always send the signal \"buffer_switch\", even when the buffer is opening ([#2198](https://github.com/weechat/weechat/issues/2198))\n- core, plugins: abort upgrade immediately if any upgrade file fails to be written\n- core: reload all plugins with command `/plugin reload *`\n- relay, xfer: fix letters with actions displayed on top of buffer\n- perl: fix crash when unloading Perl scripts with Perl 5.38 ([#2209](https://github.com/weechat/weechat/issues/2209), [#2213](https://github.com/weechat/weechat/issues/2213))\n- lua: fix compilation on Fedora with Lua < 5.2.0 ([#2173](https://github.com/weechat/weechat/issues/2173), [#2174](https://github.com/weechat/weechat/issues/2174))\n- core: fix build on Darwin ([#2216](https://github.com/weechat/weechat/issues/2216))\n- core: fix build on Android ([#2180](https://github.com/weechat/weechat/issues/2180))\n\n## Version 4.4.4 (2024-11-30)\n\n### Fixed\n\n- script: fix crash on /script buffer when a filter is set ([#2214](https://github.com/weechat/weechat/issues/2214), [#2215](https://github.com/weechat/weechat/issues/2215))\n- core: fix too many sorts of hotlist when buffers are moved ([#2097](https://github.com/weechat/weechat/issues/2097))\n- relay, xfer: fix letters with actions displayed on top of buffer\n- build: fix detection of Ruby on macOS 14, require CMake ≥ 3.18 ([#1156](https://github.com/weechat/weechat/issues/1156))\n- perl: fix crash when unloading Perl scripts with Perl 5.38 ([#2209](https://github.com/weechat/weechat/issues/2209), [#2213](https://github.com/weechat/weechat/issues/2213))\n\n## Version 4.4.3 (2024-10-30)\n\n### Fixed\n\n- irc: fix crash on /list buffer when a filter is set ([#2197](https://github.com/weechat/weechat/issues/2197))\n- core: always send the signal \"buffer_switch\", even when the buffer is opening ([#2198](https://github.com/weechat/weechat/issues/2198))\n- core: fix build on Android ([#2180](https://github.com/weechat/weechat/issues/2180))\n\n## Version 4.4.2 (2024-09-08)\n\n### Fixed\n\n- core, plugins: fix integer overflow in loops ([#2178](https://github.com/weechat/weechat/issues/2178), [CVE-2024-46613](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-46613))\n\n## Version 4.4.1 (2024-08-19)\n\n### Fixed\n\n- lua: fix compilation on Fedora with Lua < 5.2.0 ([#2173](https://github.com/weechat/weechat/issues/2173), [#2174](https://github.com/weechat/weechat/issues/2174))\n\n## Version 4.4.0 (2024-08-17)\n\n### Changed\n\n- **breaking:** relay/api: flatten JSON event object sent to clients, always set \"body_type\" and \"body\" (null if there is no body) in websocket frame, add body types `buffers` and `lines` (array), add field \"request_id\" in websocket frame (request and response)\n- **breaking:** core, plugins: force \"short_name\" in buffers to non-empty value (name by default), remove buffer property \"short_name_is_set\"\n- **breaking:** alias: display an error with `/alias add` or `/alias addcompletion` when the alias already exists, add options `addreplace` and `addreplacecompletion` in command `/alias` ([#2095](https://github.com/weechat/weechat/issues/2095))\n- **breaking:** irc: rename parameter `-re` to `-raw` in command `/list` ([#2124](https://github.com/weechat/weechat/issues/2124))\n- **breaking:** api: add constants for IPv6 and allow force of IPv6 in function hook_connect ([#2164](https://github.com/weechat/weechat/issues/2164))\n- **breaking:** irc: convert server option `ipv6` from boolean to enum (disable, auto, force) ([#2164](https://github.com/weechat/weechat/issues/2164))\n- **breaking:** core: convert proxy option `ipv6` from boolean to enum (disable, auto, force), set option to `auto` by default when creating a new proxy ([#2164](https://github.com/weechat/weechat/issues/2164))\n- core: add option `addreplace` in commands `/bar` and `/proxy` ([#2095](https://github.com/weechat/weechat/issues/2095))\n- irc: add option `addreplace` in commands `/ignore`, `/notify` and `/server` ([#2095](https://github.com/weechat/weechat/issues/2095))\n- relay: add option `addreplace` in commands `/relay` and `/remote` ([#2095](https://github.com/weechat/weechat/issues/2095))\n- core: allow buffer id in commands `/buffer` and `/print`, in addition to number and name\n- core: allow mask in command `/item refresh`\n- relay: enable websocket extension \"permessage-deflate\" with \"api\" relay only ([#1549](https://github.com/weechat/weechat/issues/1549))\n- relay/api: add automatic reconnection to remote, add remote option \"autoreconnect_delay\" in remote, add options relay.api.remote_autoreconnect_delay_growing and relay.api.remote_autoreconnect_delay_max ([#2166](https://github.com/weechat/weechat/issues/2166))\n- relay/api: automatically reconnect to remotes with \"autoconnect\" enabled after `/upgrade`\n- relay/api: add field \"hidden\" in GET /api/buffers, add support of hidden buffers in remote client ([#2159](https://github.com/weechat/weechat/issues/2159))\n- relay/api: add field \"time_displayed\" in GET /api/buffers, add support of time displayed in remote client buffers\n- relay/weechat: add line id in buffer lines sent to clients\n- relay: display connection status in output of commands `/remote list` and `/remote listfull`\n- relay: add option `reconnect` in command `/remote` ([#2160](https://github.com/weechat/weechat/issues/2160))\n- irc: add support of message 569 (whois, connecting from) ([#2162](https://github.com/weechat/weechat/issues/2162))\n- api: allow NULL value for key in hashtable\n- doc: rename doc \"weechat_relay_protocol\" to \"weechat_relay_weechat\"\n\n### Added\n\n- core: add command line option `--build-info` / `-i` to display information about build options ([#449](https://github.com/weechat/weechat/issues/449))\n- irc: add option `-export` in command `/list`, add option irc.look.list_buffer_format_export\n- relay: add option relay.network.websocket_permessage_deflate ([#1549](https://github.com/weechat/weechat/issues/1549))\n- relay: add option relay.look.raw_messages_max_length ([#2122](https://github.com/weechat/weechat/issues/2122))\n- relay: add infos \"relay_api_version\" and \"relay_api_version_number\"\n- relay/api: add event \"quit\", sent to clients when WeeChat is quitting ([#2168](https://github.com/weechat/weechat/issues/2168))\n- script: add info \"script_info\"\n- core: add hdata count in evaluation of expressions with `hdata_count:name[list]` or `hdata_count:name[pointer]`\n- core: add info \"window\" ([#2141](https://github.com/weechat/weechat/issues/2141))\n- core: add completion \"bars_items\"\n- core: add signals \"layout_buffers_applied\" and \"layout_windows_applied\" ([#2167](https://github.com/weechat/weechat/issues/2167))\n- core: add signal \"buffer_time_for_each_line_changed\"\n- api, relay: send new signal \"buffer_line_data_changed\" when a line is updated in a buffer via hdata, send event \"buffer_line_data_changed\" to clients of \"api\" and \"weechat\" protocols\n- api: add hashtable type \"longlong\"\n- api: add function line_search_by_id\n- doc: add doc on \"api\" relay\n\n### Fixed\n\n- python: fix crash on quit with Python 3.12 ([#2046](https://github.com/weechat/weechat/issues/2046), [#2126](https://github.com/weechat/weechat/issues/2126))\n- core: fix crash when deleting a bar that has no items ([#2138](https://github.com/weechat/weechat/issues/2138))\n- relay/api: fix crash when sending data to a remote buffer when the remote has been deleted ([#2157](https://github.com/weechat/weechat/issues/2157))\n- irc, xfer: fix display of input prompt in IRC private buffers and DCC chat buffers ([#2128](https://github.com/weechat/weechat/issues/2128))\n- irc: fix send of split messages when server option \"anti_flood\" set to 0 ([#2172](https://github.com/weechat/weechat/issues/2172))\n- core: fix generation of TOTP on FreeBSD ([#2171](https://github.com/weechat/weechat/issues/2171))\n- core: apply buffer properties (options weechat.buffer.*) when a buffer name is changed\n- irc: fix property \"short_name\" of channel buffer when the joined channel has a different case than the `/join` command\n- irc: close /list buffer when the server buffer is closed ([#2121](https://github.com/weechat/weechat/issues/2121))\n- irc: clear /list buffer when disconnecting from server ([#2133](https://github.com/weechat/weechat/issues/2133))\n- irc: display an explicit message on /list buffer when the list of channels is empty ([#2133](https://github.com/weechat/weechat/issues/2133))\n- xfer: fix send of data on the DCC chat buffer after `/upgrade` if the buffer was opened before the upgrade ([#2092](https://github.com/weechat/weechat/issues/2092))\n- core: fix refresh of bar item \"scroll\" in root bar after `/buffer clear` ([#590](https://github.com/weechat/weechat/issues/590))\n- core, plugins: return \"0x0\" instead of \"(nil)\" for pointers formatted in strings\n- core: send signal \"buffer_moved\" for all buffers affected by merge/unmerge\n- ruby: fix builtin functions not available ([#2109](https://github.com/weechat/weechat/issues/2109))\n- php: fix return value of function hdata_longlong\n- tcl: fix return value of function hdata_longlong ([#2119](https://github.com/weechat/weechat/issues/2119))\n- relay/api: fix connection to remote using an IPv6 address with square brackets ([#2156](https://github.com/weechat/weechat/issues/2156))\n- relay/api: allow clients without authentication when no relay password is defined and option relay.network.allow_empty_password is on ([#2158](https://github.com/weechat/weechat/issues/2158))\n- relay/api: fix connection to remote without password ([#2158](https://github.com/weechat/weechat/issues/2158))\n- relay/api: fix timezone of dates sent to clients ([#2151](https://github.com/weechat/weechat/issues/2151))\n- relay/api: clear lines and nicklist on all remote buffers upon successful connection to the remote ([#2161](https://github.com/weechat/weechat/issues/2161))\n- relay/api: fix buffers synchronization with existing buffers that have been renamed on remote in the meanwhile ([#2169](https://github.com/weechat/weechat/issues/2169))\n- relay/api: do not reset input text on existing buffers when reconnecting to the remote\n- relay/api: close obsolete buffers when reconnecting to the remote\n- relay/api: fix \"body_type\" returned when lines or nicks of a buffer are requested\n- relay/api: fix read of one buffer line\n- relay/api: automatically disconnect when the command `/upgrade` is executed on the remote\n- relay/api: fix send of data to remote after command `/upgrade` executed in the remote client\n- relay/api: disconnect from remote in case of error when sending data\n- relay/api: disconnect cleanly when the remote is quitting ([#2168](https://github.com/weechat/weechat/issues/2168))\n- relay: fix websocket permessage-deflate extension when the client doesn't send the max window bits parameters ([#1549](https://github.com/weechat/weechat/issues/1549))\n- relay: fix allocation and reinit of field \"client_context_takeover\" in websocket deflate structure ([#1549](https://github.com/weechat/weechat/issues/1549))\n- spell: improve error displayed when a word cannot be added to the dictionary ([#2144](https://github.com/weechat/weechat/issues/2144))\n- core: fix completion of command `/item refresh`\n- lua: remote string \"Lua\" from Lua version in output of `/debug libs`\n- core: fix detection of libgcrypt ≥ 1.11 ([debian #1071960](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1071960))\n- core, relay: fix include directory of libcjson and libzstd\n- tests: fix relay tests on s390x ([#2118](https://github.com/weechat/weechat/issues/2118))\n- tests: fix check of php plugin ([#2117](https://github.com/weechat/weechat/issues/2117))\n- tests: fix compilation of tests on Fedora 40 ([#2116](https://github.com/weechat/weechat/issues/2116))\n- tests: fix compilation of tests on Rocky 9.4\n\n## Version 4.3.6 (2024-08-15)\n\n### Fixed\n\n- core: fix generation of TOTP on FreeBSD ([#2171](https://github.com/weechat/weechat/issues/2171))\n- relay/api: fix crash when sending data to a remote buffer when the remote has been deleted ([#2157](https://github.com/weechat/weechat/issues/2157))\n- relay/api: fix timezone of dates sent to clients ([#2151](https://github.com/weechat/weechat/issues/2151))\n\n## Version 4.3.5 (2024-07-16)\n\n### Fixed\n\n- ruby: fix crash in plugin initialization ([#2163](https://github.com/weechat/weechat/issues/2163))\n\n## Version 4.3.4 (2024-07-03)\n\n### Fixed\n\n- python: fix crash on quit with Python 3.12 ([#2046](https://github.com/weechat/weechat/issues/2046), [#2126](https://github.com/weechat/weechat/issues/2126))\n- core: fix crash when deleting a bar that has no items ([#2138](https://github.com/weechat/weechat/issues/2138))\n- ruby: fix builtin functions not available ([#2109](https://github.com/weechat/weechat/issues/2109))\n- relay/api: fix \"body_type\" returned when lines or nicks of a buffer are requested\n\n## Version 4.3.3 (2024-06-22)\n\n### Fixed\n\n- core, plugins: return \"0x0\" instead of \"(nil)\" for pointers formatted in strings\n\n## Version 4.3.2 (2024-06-06)\n\n### Changed\n\n- relay: enable websocket extension \"permessage-deflate\" with \"api\" relay only ([#1549](https://github.com/weechat/weechat/issues/1549))\n\n### Added\n\n- relay: add option relay.look.raw_messages_max_length ([#2122](https://github.com/weechat/weechat/issues/2122))\n\n### Fixed\n\n- irc, xfer: fix display of input prompt in IRC private buffers and DCC chat buffers ([#2128](https://github.com/weechat/weechat/issues/2128))\n- irc: don't return pointer to irc server if the channel or nick is not found in info \"irc_buffer\"\n- relay: fix websocket permessage-deflate extension when the client doesn't send the max window bits parameters ([#1549](https://github.com/weechat/weechat/issues/1549))\n- relay: fix allocation and reinit of field \"client_context_takeover\" in websocket deflate structure ([#1549](https://github.com/weechat/weechat/issues/1549))\n\n## Version 4.3.1 (2024-05-31)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### Fixed\n\n- irc: don't return pointer to irc server if the channel or nick is not found in info \"irc_buffer\"\n- irc: close /list buffer when the server buffer is closed ([#2121](https://github.com/weechat/weechat/issues/2121))\n- xfer: fix send of data on the DCC chat buffer after `/upgrade` if the buffer was opened before the upgrade ([#2092](https://github.com/weechat/weechat/issues/2092))\n- php: fix return value of function hdata_longlong\n- tcl: fix return value of function hdata_longlong ([#2119](https://github.com/weechat/weechat/issues/2119))\n- core: fix detection of libgcrypt ≥ 1.11 ([debian #1071960](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1071960))\n- core, relay: fix include directory of libcjson and libzstd\n- tests: fix relay tests on s390x ([#2118](https://github.com/weechat/weechat/issues/2118))\n- tests: fix check of php plugin ([#2117](https://github.com/weechat/weechat/issues/2117))\n- tests: fix compilation of tests on Fedora 40 ([#2116](https://github.com/weechat/weechat/issues/2116))\n- tests: fix compilation of tests on Rocky 9.4\n\n## Version 4.3.0 (2024-05-26)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### Changed\n\n- **breaking:** irc: add server option \"autojoin_delay\" (delay before autojoin), use option \"command_delay\" before execution of the command ([#862](https://github.com/weechat/weechat/issues/862))\n- **breaking:** irc: rename option irc.color.item_channel_modes to weechat.color.status_modes\n- **breaking:** irc: add option `-all` in command `/allchan`, do not execute command on parted channels by default ([#2085](https://github.com/weechat/weechat/issues/2085))\n- **breaking:** relay: rename option relay.weechat.commands to relay.network.commands and change default to `*,!quit` ([#2066](https://github.com/weechat/weechat/issues/2066))\n- **breaking:** relay: change option type relay.look.auto_open_buffer to string ([#2066](https://github.com/weechat/weechat/issues/2066))\n- **breaking:** core: add buffer properties \"input_prompt\" and \"modes\", used to display bar items ([#2066](https://github.com/weechat/weechat/issues/2066))\n- **breaking:** core: add bar item \"lag\" to display lag on relay remote buffers ([#2066](https://github.com/weechat/weechat/issues/2066))\n- **breaking:** core: send signal \"buffer_line_added\" on buffers with free content\n- **breaking:** core: convert option weechat.look.hotlist_sort to a list of fields ([#2097](https://github.com/weechat/weechat/issues/2097))\n- **breaking:** core: rename variables with creation time in hdata \"hotlist\": \"creation_time.tv_sec\" to \"time\" and \"creation_time.tv_usec\" to \"time_usec\"\n- **breaking:** api: return `-1` or `1` if one input string is NULL and not the other in string comparison functions\n- **breaking:** api: use whole replacement string instead of first char in function string_remove_color\n- core: use nick offline color for nick in action message ([#446](https://github.com/weechat/weechat/issues/446))\n- core: display a specific message when the value of option is unchanged after `/set` command\n- core: add variable `${highlight}` in option weechat.look.buffer_time_format ([#2079](https://github.com/weechat/weechat/issues/2079))\n- core: reintroduce help on the variables and operators in `/help eval` ([#2005](https://github.com/weechat/weechat/issues/2005))\n- core: allow case-insensitive search of partial buffer name with `(?i)name` in command `/buffer`\n- core: use function util_strftimeval in evaluation of expression `date:xxx`\n- fset: allow filename starting with \"~\" in command `/fset -export`\n- irc: store lag in channel and private buffers (local variable \"lag\"), in addition to the server buffer\n- irc: allow range in commands `/unban` and `/unquiet` ([#2113](https://github.com/weechat/weechat/issues/2113))\n- tcl: add support of Tcl 9.0 ([#2075](https://github.com/weechat/weechat/issues/2075))\n\n### Added\n\n- relay: add \"api\" protocol (HTTP REST API), add options relay.look.display_clients, relay.api.remote_get_lines and relay.network.time_window ([#2066](https://github.com/weechat/weechat/issues/2066))\n- relay: add command `/remote` to connect to remote WeeChat relay servers ([#2066](https://github.com/weechat/weechat/issues/2066))\n- relay: add support of websocket extension \"permessage-deflate\" ([#1549](https://github.com/weechat/weechat/issues/1549))\n- core, api: add unique identifier \"id\" in buffer and nicklist (group and nick), add function \"hdata_longlong\", allow search by buffer id in function buffer_search, allow search by group and nick id in functions nicklist_search_group and nicklist_search_nick ([#2081](https://github.com/weechat/weechat/issues/2081))\n- core: add support of XDG \"state\" directory ([#2106](https://github.com/weechat/weechat/issues/2106), [#1747](https://github.com/weechat/weechat/issues/1747))\n- core: add support of SGR mouse events ([#2082](https://github.com/weechat/weechat/issues/2082))\n- fset: add option `-import` in command `/fset`\n- core: add option `-s` in command `/command` to execute multiple commands separated by semicolons\n- core: add option `malloc_trim` in command `/sys`\n- core: add option weechat.look.config_permissions ([#2057](https://github.com/weechat/weechat/issues/2057))\n- core: add option weechat.look.highlight_prefix ([#2079](https://github.com/weechat/weechat/issues/2079))\n- core: add option weechat.completion.case_sensitive\n- api: add functions config_option_get_{string|pointer} and config_{boolean|integer|string|color|enum}_inherited in scripting API\n- api: add modifier \"color_decode\" to decode WeeChat colors with a replacement string\n- api: add support of base64url in encode/decode functions\n- api: add support of specifier `%!` for timestamp in function util_strftimeval\n- api: add info \"plugin_loaded\"\n- script: add option `enable` in command `/script`\n- script: add info \"script_loaded\"\n\n### Fixed\n\n- core: fix conversion of WeeChat colors to ANSI colors: \"default\", \"bar_fg\", \"bar_bg\", \"bar_delim\"\n- core: fix recursive search of group in nicklist\n- core: use nick offline highlight color for prefix of action message when the nick is offline with a highlight\n- core: add missing hdata name \"buffer\" in hdata \"hotlist\"\n- core: fix reset to initial scroll position after search of text in buffer ([#2093](https://github.com/weechat/weechat/issues/2093))\n- core: add missing mouse events \"alt-ctrl-button2\" and \"alt-ctrl-button3\"\n- core: remove trailing directory separators in home directories ([#2070](https://github.com/weechat/weechat/issues/2070))\n- exec: remove trailing space on buffers with free content when line numbers are not displayed\n- exec: add missing exec tags in lines of buffers with free content ([#2086](https://github.com/weechat/weechat/issues/2086))\n- irc: fix crash in split of IRC message containing a newline if the server is not given\n- irc: fix display of reply for CTCP request received on a channel when capability echo-message is enabled\n- irc: display CTCP reply to a nick in server buffer instead of channel\n- irc: add missing tags on self action messages when capability echo-message is enabled ([#2074](https://github.com/weechat/weechat/issues/2074))\n- irc: don't strip monospace color code 0x11 from incoming messages ([#2073](https://github.com/weechat/weechat/issues/2073))\n- irc: fix random date displayed when a received message contains tags but no \"time\" ([#2064](https://github.com/weechat/weechat/issues/2064))\n- lua: fix freeze on call to \"debug.debug\" ([#1906](https://github.com/weechat/weechat/issues/1906), [#1907](https://github.com/weechat/weechat/issues/1907))\n- python: fix truncation of unsigned long long integer returned by function string_parse_size\n- relay: set the last IRC client disconnection time only after a successful connection ([#2103](https://github.com/weechat/weechat/issues/2103))\n- script: always display list of scripts when searching scripts with `/script search` ([#2077](https://github.com/weechat/weechat/issues/2077))\n- script: fix default mouse keys ([#2076](https://github.com/weechat/weechat/issues/2076))\n- scripts: fix crash on script unload when a hook is created in a buffer close callback ([#2067](https://github.com/weechat/weechat/issues/2067))\n- tcl: fix truncation of long integer returned by function hdata_long\n- trigger: fix memory leak when adding a new trigger with `/trigger` command\n\n## Version 4.2.3 (2024-05-31)\n\n### Fixed\n\n- xfer: fix send of data on the DCC chat buffer after `/upgrade` if the buffer was opened before the upgrade ([#2092](https://github.com/weechat/weechat/issues/2092))\n- irc: fix crash in split of IRC message containing a newline if the server is not given\n- core, relay: fix include directory of libzstd\n\n## Version 4.2.2 (2024-04-07)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### Bug fixes\n\n- core: fix reset to initial scroll position after search of text in buffer ([#2093](https://github.com/weechat/weechat/issues/2093))\n- core: add missing mouse events \"alt-ctrl-button2\" and \"alt-ctrl-button3\"\n- exec: remove trailing space on buffers with free content when line numbers are not displayed\n- exec: add missing exec tags in lines of buffers with free content ([#2086](https://github.com/weechat/weechat/issues/2086))\n- irc: add missing tags on self action messages when capability echo-message is enabled ([#2074](https://github.com/weechat/weechat/issues/2074))\n- python: fix truncation of unsigned long long integer returned by function string_parse_size\n- relay: set the last IRC client disconnection time only after a successful connection ([#2103](https://github.com/weechat/weechat/issues/2103))\n- script: always display list of scripts when searching scripts with `/script search` ([#2077](https://github.com/weechat/weechat/issues/2077))\n- script: fix default mouse keys ([#2076](https://github.com/weechat/weechat/issues/2076))\n- scripts: fix crash on script unload when a hook is created in a buffer close callback ([#2067](https://github.com/weechat/weechat/issues/2067))\n- tcl: fix truncation of long integer returned by function hdata_long\n- trigger: fix memory leak when adding a new trigger with `/trigger` command\n\n### Tests\n\n- core: fix tests on function strftimeval on Alpine\n\n## Version 4.2.1 (2024-01-22)\n\n### Bug fixes\n\n- irc: fix random date displayed when a received message contains tags but no \"time\" ([#2064](https://github.com/weechat/weechat/issues/2064))\n\n## Version 4.2.0 (2024-01-21)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add variable \"opening\" in buffer, do not send buffer signals when the buffer is opening\n- core: store microseconds in buffer lines ([#649](https://github.com/weechat/weechat/issues/649))\n- core: evaluate expressions even when the suffix is missing (`}` by default) ([#2042](https://github.com/weechat/weechat/issues/2042), [#1714](https://github.com/weechat/weechat/issues/1714))\n- core: add syntax highlighting in evaluation of expressions with `raw_hl:string` and `hl:string`, add option weechat.color.eval_syntax_colors ([#2042](https://github.com/weechat/weechat/issues/2042))\n- core: add option `search_history` in command `/input`, add key `Ctrl`+`r` to search in commands history, add key context \"histsearch\" ([#2040](https://github.com/weechat/weechat/issues/2040))\n- core: add option weechat.look.buffer_search_history ([#2040](https://github.com/weechat/weechat/issues/2040))\n- core: add key `Ctrl`+`o` to send command found and insert next one in input ([#2040](https://github.com/weechat/weechat/issues/2040))\n- core: add buffer variables \"text_search_direction\", \"text_search_history\" and \"text_search_ptr_history\" ([#2040](https://github.com/weechat/weechat/issues/2040))\n- core: move key `Ctrl`+`r` to `Ctrl`+`s` ([#2040](https://github.com/weechat/weechat/issues/2040))\n- core: move key `Ctrl`+`s`, `Ctrl`+`u` to `Alt`+`Shift`+`U` ([#2040](https://github.com/weechat/weechat/issues/2040))\n- core: display only version with command `/version`, add options `-o` and `-ol` in command `/upgrade`\n- core: add number of processes in command `/sys waitpid`\n- core, alias, trigger: allow wildcard in commands `/bar`, `/filter`, `/item`, `/proxy`, `/alias` and `/trigger` ([#1956](https://github.com/weechat/weechat/issues/1956))\n- api: add support of format/translation of command arguments description line by line ([#2005](https://github.com/weechat/weechat/issues/2005))\n- api: add function string_concat ([#2005](https://github.com/weechat/weechat/issues/2005))\n- api: add functions util_strftimeval, util_parse_time, printf_datetime_tags, printf_y_datetime_tags ([#649](https://github.com/weechat/weechat/issues/649))\n- api: add argument \"date_usec\" in hook_print callback ([#649](https://github.com/weechat/weechat/issues/649))\n- api: add property \"type\" in function buffer_get_string\n- api: add info \"mouse\"\n- buflist: jump to previous/next buffer displayed in buflist item with ctrl+wheel up/down on a buflist item ([#1473](https://github.com/weechat/weechat/issues/1473))\n- irc: add option irc.look.display_host_wallops\n- irc: add server option \"anti_flood\" (now in milliseconds), remove server options \"anti_flood_prio_{high|low}\" ([#1039](https://github.com/weechat/weechat/issues/1039))\n- irc: add option irc.look.list_buffer\n- irc: change default value of server option \"tls_priorities\" to `NORMAL`\n- irc: add support of RGB colors in messages, add option irc.color.term_remap ([#2025](https://github.com/weechat/weechat/issues/2025))\n- irc: add tags \"nick_xxx\" and \"host_xxx\" in all messages, including self and server messages\n- irc: add option irc.look.ignore_tag_messages ([#989](https://github.com/weechat/weechat/issues/989))\n- relay: change default value of option relay.network.tls_priorities to `NORMAL`\n- trigger: change format of variables `${tg_date}` from \"%Y-%m-%d %H:%M:%S\" to \"%FT%T.%f\" ([#649](https://github.com/weechat/weechat/issues/649))\n- trigger: rename local variable \"trigger_filter\" to \"filter\" on monitor buffer ([#2037](https://github.com/weechat/weechat/issues/2037))\n\n### Bug fixes\n\n- core: fix crash on plugin reload when using musl libc ([#2052](https://github.com/weechat/weechat/issues/2052))\n- core: fix infinite loop in display when the chat area is too small ([#2053](https://github.com/weechat/weechat/issues/2053))\n- core: fix value of buffer variable \"num_history\" when the value defined in option weechat.history.max_commands is reached\n- core: remove incorrect warning when binding keys `F10` to `F20` ([#2039](https://github.com/weechat/weechat/issues/2039))\n- core: call hook config when options are removed\n- core: display an error with command `/history N` when N is not a valid integer\n- core: fix memory leak when config version is invalid or not supported\n- core: fix crash when \"config_version\" is present in a configuration file without a value\n- core: display an error on startup if environment variable \"HOME\" is not set\n- core: fix crash when a custom bar item name is already used by a default bar item ([#2034](https://github.com/weechat/weechat/issues/2034))\n- core: fix random timeouts when a lot of concurrent processes are launched with hook_process ([#2033](https://github.com/weechat/weechat/issues/2033))\n- api: return NULL instead of empty infolist \"key\" when context is not found\n- irc: check if arguments are not NULL in some infos\n- irc: fix info \"irc_is_message_ignored\" ([#2059](https://github.com/weechat/weechat/issues/2059))\n- irc: fix display of self messages when the message split fails due to inconsistent max lengths sent by the server in message 005\n- irc: display messages 730/731 (monitored nicks online/offline) even if command `/notify` was not used ([#2049](https://github.com/weechat/weechat/issues/2049))\n- irc: remove trailing \"\\r\\n\" in signals \"irc_out\" and \"irc_outtags\" when messages are queued\n- irc: fix target buffer of IRC message 337 (whois reply: \"is hiding their idle time\")\n- irc: revert compute of nick colors to case-sensitive way, deprecate again infos \"irc_nick_color\" and \"irc_nick_color_name\" ([#194](https://github.com/weechat/weechat/issues/194), [#2032](https://github.com/weechat/weechat/issues/2032))\n- relay: close properly connection with the IRC client in case of server disconnection ([#2038](https://github.com/weechat/weechat/issues/2038))\n- ruby: fix use of NULL variable when displaying exception\n\n### Tests\n\n- core: add tests on plugin config and plugin API info functions\n- irc: add tests on info functions\n\n### Build\n\n- core: make libintl.h required if CMake option ENABLE_NLS is enabled ([#2031](https://github.com/weechat/weechat/issues/2031))\n- ruby: add detection of Ruby 3.3\n\n## Version 4.1.3 (2024-01-20)\n\n### Bug fixes\n\n- core: fix crash on plugin reload when using musl libc ([#2052](https://github.com/weechat/weechat/issues/2052))\n- core: fix infinite loop in display when the chat area is too small ([#2053](https://github.com/weechat/weechat/issues/2053))\n- irc: check if arguments are not NULL in some infos\n- irc: fix info \"irc_is_message_ignored\" ([#2059](https://github.com/weechat/weechat/issues/2059))\n- irc: fix display of self messages when the message split fails due to inconsistent max lengths sent by the server in message 005\n\n## Version 4.1.2 (2023-12-03)\n\n### Bug fixes\n\n- core: fix value of buffer variable \"num_history\" when the value defined in option weechat.history.max_commands is reached\n- core: remove incorrect warning when binding keys `F10` to `F20` ([#2039](https://github.com/weechat/weechat/issues/2039))\n- core: fix memory leak when config version is invalid or not supported\n- core: fix crash when \"config_version\" is present in a configuration file without a value\n- core: display an error on startup if environment variable \"HOME\" is not set\n- irc: remove trailing \"\\r\\n\" in signals \"irc_out\" and \"irc_outtags\" when messages are queued\n- irc: fix target buffer of IRC message 337 (whois reply: \"is hiding their idle time\")\n- relay: close properly connection with the IRC client in case of server disconnection ([#2038](https://github.com/weechat/weechat/issues/2038))\n- ruby: fix use of NULL variable when displaying exception\n\n## Version 4.1.1 (2023-10-26)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### Bug fixes\n\n- core: fix crash when a custom bar item name is already used by a default bar item ([#2034](https://github.com/weechat/weechat/issues/2034))\n- core: fix random timeouts when a lot of concurrent processes are launched with hook_process ([#2033](https://github.com/weechat/weechat/issues/2033))\n- irc: revert compute of nick colors to case-sensitive way, deprecate again infos \"irc_nick_color\" and \"irc_nick_color_name\" ([#194](https://github.com/weechat/weechat/issues/194), [#2032](https://github.com/weechat/weechat/issues/2032))\n\n### Build\n\n- core: make libintl.h required if CMake option ENABLE_NLS is enabled ([#2031](https://github.com/weechat/weechat/issues/2031))\n\n## Version 4.1.0 (2023-10-15)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add completion \"eval_variables\", used in completion of `/eval`\n- core: add command `/sys` to show resource limits/usage and suspend WeeChat process, add key `Ctrl`+`z` to suspend WeeChat ([#985](https://github.com/weechat/weechat/issues/985))\n- core: ignore key bindings with empty command\n- core: add support of quotes in commands `/key bind` and `/key bindctxt`\n- core: evaluate command given to `/repeat` with contextual variables ([#2007](https://github.com/weechat/weechat/issues/2007))\n- core: add option `callbacks` in command `/debug`\n- core: add option type \"enum\" ([#1973](https://github.com/weechat/weechat/issues/1973))\n- core: add options weechat.buffer.* to save buffer properties set by user, add option `setauto` in command `/buffer` ([#352](https://github.com/weechat/weechat/issues/352))\n- core: add parameters and key bindings to move to edges of current area with commands `/cursor go` and `/cursor move` ([#1282](https://github.com/weechat/weechat/issues/1282))\n- core: add variables \"_chat_focused_line_bol\" and \"_chat_focused_line_eol\" in focus data ([#1955](https://github.com/weechat/weechat/issues/1955))\n- api: add function hook_url, add option `url` in command `/debug` ([#1723](https://github.com/weechat/weechat/issues/1723))\n- api: add support of path to variable and hashtable comparison in function hdata_compare ([#1066](https://github.com/weechat/weechat/issues/1066))\n- api: add infos \"nick_color_ignore_case\" and \"nick_color_name_ignore_case\" ([#194](https://github.com/weechat/weechat/issues/194))\n- api: add info \"buffer\" ([#1962](https://github.com/weechat/weechat/issues/1962))\n- buflist: add support of item names in command `/buflist refresh`, add completions \"buflist_items\" and \"buflist_items_used\"\n- buflist: increase max number of buflist items from 3 to 5 ([#1703](https://github.com/weechat/weechat/issues/1703))\n- fset: add variable `allowed_values` in options, add options fset.color.allowed_values and fset.color.allowed_values_selected\n- fset: allow long type name in type filter\n- irc: add count for all nick modes in output of `/names` ([#97](https://github.com/weechat/weechat/issues/97), [#2020](https://github.com/weechat/weechat/issues/2020))\n- irc: add count and mode filter in command `/names` ([#98](https://github.com/weechat/weechat/issues/98))\n- irc: compute color in case-insensitive way, reintroduce infos \"irc_nick_color\" and \"irc_nick_color_name\", add support of server name ([#194](https://github.com/weechat/weechat/issues/194))\n- irc: add buffer for /list reply, add options irc.color.list_buffer_line_selected, irc.color.list_buffer_line_selected_bg, irc.look.list_buffer_sort, irc.look.list_buffer_scroll_horizontal, irc.look.new_list_position, irc.look.list_buffer_topic_strip_colors ([#1972](https://github.com/weechat/weechat/issues/1972))\n- irc: display commands 716/717 in private buffer (if present) ([#146](https://github.com/weechat/weechat/issues/146))\n- irc: create default options irc.ctcp.* when file irc.conf is created ([#1974](https://github.com/weechat/weechat/issues/1974))\n- irc: evaluate options irc.ctcp.* ([#1974](https://github.com/weechat/weechat/issues/1974))\n- irc: build dynamically the list of CTCPs supported in reply to \"CTCP CLIENTINFO\" ([#1974](https://github.com/weechat/weechat/issues/1974))\n- irc: remove Git revision and compilation date from CTCP VERSION reply ([#1974](https://github.com/weechat/weechat/issues/1974))\n- irc: remove default CTCP replies FINGER and USERINFO ([#1974](https://github.com/weechat/weechat/issues/1974))\n- irc, xfer: add support of passive DCC ([#2004](https://github.com/weechat/weechat/issues/2004), [#487](https://github.com/weechat/weechat/issues/487))\n- script: rename parameters up/down/go to -up/-down/-go in command `/script`\n- script: allow jump to the last script with command `/script -go end`\n- script: allow commands `/script autoload`, `/script noautoload`, `/script toggleautoload` with scripts not present in the repository ([#1980](https://github.com/weechat/weechat/issues/1980))\n- trigger: add options `-o`, `-ol`, `-i` and `-il` in command `/trigger list` ([#1953](https://github.com/weechat/weechat/issues/1953))\n\n### Bug fixes\n\n- core: fix zombie processes after fork (hook process or connect) ([#1994](https://github.com/weechat/weechat/issues/1994))\n- core: fix generation of TOTP on Big Endian systems ([#2021](https://github.com/weechat/weechat/issues/2021))\n- core: fix cursor position after `/plugin list -i` or `/plugin list -il`\n- core: display focus hashtable for debug even if no key is matching\n- fset: add local key bindings during the buffer creation\n- fset: remove extra spaces between min and max values when second format is used\n- fset: fix mouse actions when second format is used\n- fset: apply option fset.color.help_description ([#1988](https://github.com/weechat/weechat/issues/1988))\n- irc: move value `-all` at the end of completions for command `/ignore del`\n- irc: fix memory leak when joining channels with keys\n- irc: fix unexpected message sent to server when part of the second line of an IRC command ([#1992](https://github.com/weechat/weechat/issues/1992))\n- irc: fix display of country code in message 344 received as whois geo info ([#1736](https://github.com/weechat/weechat/issues/1736))\n- irc: add missing \"account-tag\" in list of supported capabilities\n- irc: add channel in \"autojoin\" server option only when the channel is actually joined ([#1990](https://github.com/weechat/weechat/issues/1990))\n- relay: synchronize nick modes with IRC client upon connection ([#1984](https://github.com/weechat/weechat/issues/1984))\n- script: add local key bindings during the buffer creation\n- script: add parameters up/down/go in `/help script` and command completion\n- script: fix cursor position after `/script list -i` or `/script list -il`\n- script: fix buffer used by command `/script list -i|-il|-o|-ol`\n- xfer: display an error message when opening file for read or write fails ([#2010](https://github.com/weechat/weechat/issues/2010))\n\n### Tests\n\n- core: add tests on GUI buffer functions\n\n### Build\n\n- core: fix build error if CMake option ENABLE_NLS is turned to off or if required dependencies are not found ([#2026](https://github.com/weechat/weechat/issues/2026))\n- core, logger, relay: make zstd dependency optional ([#2024](https://github.com/weechat/weechat/issues/2024))\n\n## Version 4.0.8 (2024-01-20)\n\n### Bug fixes\n\n- core: fix crash on plugin reload when using musl libc ([#2052](https://github.com/weechat/weechat/issues/2052))\n- core: fix infinite loop in display when the chat area is too small ([#2053](https://github.com/weechat/weechat/issues/2053))\n- irc: check if arguments are not NULL in some infos\n- irc: fix info \"irc_is_message_ignored\" ([#2059](https://github.com/weechat/weechat/issues/2059))\n- irc: fix display of self messages when the message split fails due to inconsistent max lengths sent by the server in message 005\n\n## Version 4.0.7 (2023-12-03)\n\n### Bug fixes\n\n- core: fix value of buffer variable \"num_history\" when the value defined in option weechat.history.max_commands is reached\n- core: remove incorrect warning when binding keys `F10` to `F20` ([#2039](https://github.com/weechat/weechat/issues/2039))\n- core: fix memory leak when config version is invalid or not supported\n- core: fix crash when \"config_version\" is present in a configuration file without a value\n- core: display an error on startup if environment variable \"HOME\" is not set\n- irc: remove trailing \"\\r\\n\" in signals \"irc_out\" and \"irc_outtags\" when messages are queued\n- irc: fix target buffer of IRC message 337 (whois reply: \"is hiding their idle time\")\n- relay: close properly connection with the IRC client in case of server disconnection ([#2038](https://github.com/weechat/weechat/issues/2038))\n- ruby: fix use of NULL variable when displaying exception\n\n## Version 4.0.6 (2023-10-26)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### Bug fixes\n\n- core: fix crash when a custom bar item name is already used by a default bar item ([#2034](https://github.com/weechat/weechat/issues/2034))\n- core: fix generation of TOTP on Big Endian systems ([#2021](https://github.com/weechat/weechat/issues/2021))\n- irc: move value `-all` at the end of completions for command `/ignore del`\n- irc: fix memory leak when joining channels with keys\n\n### Build\n\n- core: fix build error if CMake option ENABLE_NLS is turned to off or if required dependencies are not found ([#2026](https://github.com/weechat/weechat/issues/2026), [#2031](https://github.com/weechat/weechat/issues/2031))\n\n## Version 4.0.5 (2023-09-24)\n\n### New features\n\n- core: automatically backup config file read if it has an unsupported version ([#2013](https://github.com/weechat/weechat/issues/2013))\n- core: display a message when a configuration file is updated to a newer version\n- python: make stub (weechat.pyi) compatible with Python 3.8 and 3.9 ([#2006](https://github.com/weechat/weechat/issues/2006))\n\n### Bug fixes\n\n- irc: add option irc.look.open_pv_buffer_echo_msg to open private buffer on self message when capability echo-message is enabled ([#2016](https://github.com/weechat/weechat/issues/2016))\n- irc: fix title of private buffers wrongly set to own address when capability echo-message is enabled ([#2016](https://github.com/weechat/weechat/issues/2016))\n- irc: fix autojoin of channels when private buffers are opened ([#2012](https://github.com/weechat/weechat/issues/2012))\n- irc: fix string comparison when CASEMAPPING is set to \"ascii\"\n- script: fix removal of script in system directory while trying to install a script ([#2019](https://github.com/weechat/weechat/issues/2019))\n- script: fix autoload of multiple scripts at once with `/script autoload` ([#2018](https://github.com/weechat/weechat/issues/2018))\n- script: fix crash when a `/script` command triggers another `/script` command ([#923](https://github.com/weechat/weechat/issues/923))\n- xfer: fix memory leak on plugin unload\n\n### Tests\n\n- irc: add tests on server functions\n\n## Version 4.0.4 (2023-08-22)\n\n### Bug fixes\n\n- core: fix integer overflow when setting integer option with `++N` or `--N`\n- core: fix increment/decrement of options weechat.notify.*\n- irc: add missing tags on multiline messages ([#1987](https://github.com/weechat/weechat/issues/1987))\n- irc: fix redirection of command `/list` when the reply doesn't start with message 321 (start of /list)\n- irc: fix wrong time displayed for CTCP messages received from self nick ([#2000](https://github.com/weechat/weechat/issues/2000))\n- logger: remove trailing empty line in display of backlog ([#2002](https://github.com/weechat/weechat/issues/2002))\n- perl: fix display of non-ASCII chars after load of a script with Perl >= 5.38 ([#1996](https://github.com/weechat/weechat/issues/1996))\n- script: adjust scroll after command `/script go N`\n- scripts: fix function string_parse_size on 32-bit systems (python and ruby) ([#1999](https://github.com/weechat/weechat/issues/1999))\n- xfer: fix conversion of string to IPv4 on 32-bit systems ([#1999](https://github.com/weechat/weechat/issues/1999))\n\n### Tests\n\n- irc: fix tests on function irc_join_compare_join_channel ([#1997](https://github.com/weechat/weechat/issues/1997))\n- scripts: fix tests of functions print_date_tag, print_y_date_tags and hook_timer on 32-bit systems ([#1999](https://github.com/weechat/weechat/issues/1999))\n\n## Version 4.0.3 (2023-08-08)\n\n### Bug fixes\n\n- core: fix input length and crash after delete of line ([#1989](https://github.com/weechat/weechat/issues/1989))\n- irc: fix display of self CTCP message containing bold attribute ([#1981](https://github.com/weechat/weechat/issues/1981))\n- irc: fix memory leak in IRC message parser\n- irc: fix switch to channel manually joined when server option autojoin_dynamic is on and option irc.look.buffer_switch_autojoin is off ([#1982](https://github.com/weechat/weechat/issues/1982))\n- irc: fix display of outgoing notice with channel when capability \"echo-message\" is enabled ([#1991](https://github.com/weechat/weechat/issues/1991))\n- relay: fix display of IRC CTCP messages received from client ([#1986](https://github.com/weechat/weechat/issues/1986))\n\n### Build\n\n- doc: display a warning if a locale is missing with fallback to English for auto-generated content ([#1985](https://github.com/weechat/weechat/issues/1985))\n\n## Version 4.0.2 (2023-07-12)\n\n### Bug fixes\n\n- core: fix renaming of options with command `/item rename` ([#1978](https://github.com/weechat/weechat/issues/1978))\n- core: don't send \"key_pressed\" signal again for the same key press ([#1976](https://github.com/weechat/weechat/issues/1976))\n- core: don't send \"key_combo_*\" signals for incomplete keys ([#1976](https://github.com/weechat/weechat/issues/1976))\n- core: add key `Ctrl`+`Backspace` in /help key ([#1975](https://github.com/weechat/weechat/issues/1975))\n- core: keep keys `ctrl-H` and `ctrl-?` (in lower case) if they were manually bound to custom commands in a previous version\n\n### Tests\n\n- core: fix hdata tests failure on Alpine 3.18\n- relay: fix crash in tests on Alpine 3.18\n\n### Build\n\n- php: fix detection of PHP 8.2 on Alpine 3.18\n\n## Version 4.0.1 (2023-06-30)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### Bug fixes\n\n- core: force key \"return\" to command \"/input return\" when migrating legacy keys\n- core: display actual key name and command with key `Alt`+`k`, remove key `Alt`+`K` (grab raw key) and associated commands `/input grab_raw_key` and `/input grab_raw_key_command`\n- core: check for newline characters in string_is_whitespace_char ([#1968](https://github.com/weechat/weechat/issues/1968))\n- api: do not convert option name to lower case in API functions config_set_plugin and config_set_desc_plugin\n- guile: fix crash on quit with Guile < 3 ([#1965](https://github.com/weechat/weechat/issues/1965))\n- irc: reply to a CTCP request sent to self nick ([#1966](https://github.com/weechat/weechat/issues/1966))\n- irc: sent \"QUIT\" message to servers connected with TLS on `/upgrade`\n\n## Version 4.0.0 (2023-06-24)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: use human readable key bindings, separate keys with comma in combos, remove modifier \"meta2-\", add option `legacy` in command `/key` ([#1238](https://github.com/weechat/weechat/issues/1238), [task #10317](https://savannah.nongnu.org/task/?10317))\n- core: make keys normal options, so they are shown and can be updated with `/set` and `/fset` commands ([task #12427](https://savannah.nongnu.org/task/?12427), [task #11783](https://savannah.nongnu.org/task/?11783))\n- core: add key `Alt`+`K` (upper case) to grab raw key and its command ([#1238](https://github.com/weechat/weechat/issues/1238))\n- core: add option `key` in command `/debug` ([#1238](https://github.com/weechat/weechat/issues/1238))\n- core: force ctrl keys to lower case when they are added ([#1875](https://github.com/weechat/weechat/issues/1875))\n- core: use 256 colors by default and always allow 256 colors, find nearest color if less colors are available in terminal ([#1920](https://github.com/weechat/weechat/issues/1920))\n- core: insert multiple pasted lines in input instead of sending immediately, add keys to move and delete in a single line and whole input, add option weechat.look.input_multiline_lead_linebreak ([#1502](https://github.com/weechat/weechat/issues/1502), [#1503](https://github.com/weechat/weechat/issues/1503), [#1504](https://github.com/weechat/weechat/issues/1504))\n- core: render newline characters in chat line messages ([#1908](https://github.com/weechat/weechat/issues/1908))\n- core: don't split on newline characters in printf_date_tags when input_multiline is set ([#1909](https://github.com/weechat/weechat/issues/1909))\n- core: add key `l` (lower `L`) in cursor mode to quote line, add variable \"_chat_focused_line\" in function hashtable sent to hook_focus callback ([#1913](https://github.com/weechat/weechat/issues/1913), [#1914](https://github.com/weechat/weechat/issues/1914))\n- core: add option `split_return` in command `/input` ([#1916](https://github.com/weechat/weechat/issues/1916))\n- core: send all command line parameters not beginning with a dash to all plugins\n- core: add command `/reset` to reset options to their default values\n- core: add option `rename` in command `/bar`\n- core: add relative move of read marker with `/buffer set unread [+/-]N` ([#1895](https://github.com/weechat/weechat/issues/1895))\n- core: add access to hashtable properties in evaluation of expressions ([#1888](https://github.com/weechat/weechat/issues/1888))\n- core: display similar command names when a command is unknown ([#1877](https://github.com/weechat/weechat/issues/1877))\n- core: rename option weechat.color.status_name_ssl to weechat.color.status_name_tls ([#1903](https://github.com/weechat/weechat/issues/1903))\n- core: add option weechat.color.status_name_insecure to display buffer name with a specific color when not connected with TLS to the server\n- core, plugins: make many identifiers case-sensitive ([#1872](https://github.com/weechat/weechat/issues/1872), [#398](https://github.com/weechat/weechat/issues/398), [bug #32213](https://savannah.nongnu.org/bugs/?32213))\n- core: add item \"mouse_status\" in default status bar, change default color to lightgreen\n- core, trigger: add options weechat.color.chat_status_disabled and weechat.color.chat_status_enabled, remove options trigger.color.trigger and trigger.color.trigger_disabled, add enabled/disabled status color in output of `/filter list` ([#1820](https://github.com/weechat/weechat/issues/1820))\n- core: add completions \"filters_names_disabled\" and \"filters_names_enabled\", used in completion of `/filter disable` and `/filter enable`\n- api: add function config_set_version ([#1238](https://github.com/weechat/weechat/issues/1238))\n- api: don't split on newline by default in functions `command` and `command_options` when `input_multiline` is set to 0\n- api: add optional argument with version in info \"version_number\"\n- api: add info \"auto_load_scripts\"\n- alias: use lower case for default aliases, rename all aliases to lower case on upgrade ([#1872](https://github.com/weechat/weechat/issues/1872))\n- alias: add `$&` to replace all arguments with double quotes escaped ([#1140](https://github.com/weechat/weechat/issues/1140), [#1190](https://github.com/weechat/weechat/issues/1190))\n- alias: add options `missing` and `rename` in command `/alias`\n- fifo: add support of escaped chars in text or commands sent ([#1950](https://github.com/weechat/weechat/issues/1950))\n- fset: add options fset.color.color_name and fset.color.color_name_selected ([#1920](https://github.com/weechat/weechat/issues/1920))\n- irc: rename \"ssl\" options to \"tls\", connect with TLS and port 6697 by default ([#1903](https://github.com/weechat/weechat/issues/1903))\n- irc: add support of capabilities \"batch\" and \"draft/multiline\" ([#1292](https://github.com/weechat/weechat/issues/1292), [#1923](https://github.com/weechat/weechat/issues/1923))\n- irc: add support of capability \"echo-message\" ([#139](https://github.com/weechat/weechat/issues/139))\n- irc: display CTCP ACTION to channel on the channel buffer ([#207](https://github.com/weechat/weechat/issues/207))\n- irc: display STATUSMSG actions differently from standard actions on channels ([#1577](https://github.com/weechat/weechat/issues/1577))\n- irc: add modifier \"irc_cap_sync_req\" ([#1767](https://github.com/weechat/weechat/issues/1767))\n- irc: add support of \"LINELEN\" in message 005 (max message length in bytes) ([#1927](https://github.com/weechat/weechat/issues/1927))\n- irc: add support of \"UTF8ONLY\" in message 005 ([#1688](https://github.com/weechat/weechat/issues/1688))\n- irc: add command `/action` ([#201](https://github.com/weechat/weechat/issues/201), [#1577](https://github.com/weechat/weechat/issues/1577))\n- irc: add command `/rules` ([#1864](https://github.com/weechat/weechat/issues/1864))\n- irc: add command `/knock` ([#7](https://github.com/weechat/weechat/issues/7))\n- irc: add server option \"registered_mode\", add fields \"authentication_method\" and \"sasl_mechanism_used\" in server ([#1625](https://github.com/weechat/weechat/issues/1625))\n- irc: add option `join` in command `/autojoin`\n- irc: use key when /joining in open channel buffer ([#1260](https://github.com/weechat/weechat/issues/1260))\n- irc: add option `buffer` in command `/autojoin sort` ([#1876](https://github.com/weechat/weechat/issues/1876))\n- irc: add `${username}` in server options \"nicks\" and \"username\", change their default values to use it\n- irc: add infos \"irc_server_cap\" and \"irc_server_cap_value\"\n- irc: add option irc.look.display_host_notice\n- irc: add tag \"new_host_xxx\" in message displayed for command CHGHOST ([#1808](https://github.com/weechat/weechat/issues/1808))\n- logger: add option logger.file.log_conditions ([#1942](https://github.com/weechat/weechat/issues/1942))\n- logger: add info \"logger_log_file\"\n- relay: rename \"ssl\" options and protocol to \"tls\" ([#1903](https://github.com/weechat/weechat/issues/1903))\n- relay: make TLS certificate/key loading error handling more verbose ([#1558](https://github.com/weechat/weechat/issues/1558))\n- relay: add modifiers \"relay_client_irc_in\", \"relay_client_irc_out1\" and \"relay_client_irc_out\" in irc protocol\n- relay: add support of capability \"echo-message\" in irc protocol ([#1949](https://github.com/weechat/weechat/issues/1949))\n- relay: add handshake option \"escape_commands\" in weechat protocol\n- trigger: add completions \"trigger_names_disabled\" and \"trigger_names_enabled\", used in completion of `/trigger disable` and `/trigger enable`\n\n### Bug fixes\n\n- core: fix refresh of bar item \"input_search\" after buffer switch in root bars ([#1939](https://github.com/weechat/weechat/issues/1939))\n- core: fix completion after newline in input ([#1925](https://github.com/weechat/weechat/issues/1925))\n- core: fix partial completion when the common prefix found is empty ([#340](https://github.com/weechat/weechat/issues/340))\n- core: display a specific error when trying to bind a key without area in mouse context\n- core: fix display of key with command `/key bindctxt <context> <key>`\n- core: fix default value of bar options ([#846](https://github.com/weechat/weechat/issues/846))\n- core: allow any valid boolean value in command `/bar set <name> separator xxx`\n- core: run config hooks only when value or default value is actually changed in set/reset/unset functions\n- core: fix crash in case of NULL message sent to function gui_chat_printf_y_date_tags ([#1883](https://github.com/weechat/weechat/issues/1883))\n- core: allow command `/input move_next_word` going to the end of line ([#1881](https://github.com/weechat/weechat/issues/1881))\n- core: ignore incomplete ctrl/meta/meta2 codes in keys\n- core: fix display glitch in command errors when a wide char is set in option weechat.look.command_chars ([#1871](https://github.com/weechat/weechat/issues/1871))\n- core: fix update of terminal title in some terminals like suckless terminal (stterm) ([#1882](https://github.com/weechat/weechat/issues/1882))\n- core: fix infinite loop on startup when running some gui commands before the switch to core buffer is performed ([#1917](https://github.com/weechat/weechat/issues/1917))\n- api: readjust string size in function string_dyn_free when string is not freed\n- buflist: do not display keys added in default context on first load\n- exec: remove trailing \"M\" (carriage return) in output of commands\n- fset: remove scroll to top of fset buffer when options are added or removed ([#1892](https://github.com/weechat/weechat/issues/1892))\n- guile: fix crash when plugin is loaded on GNU/Hurd ([#1951](https://github.com/weechat/weechat/issues/1951))\n- irc: fix format of IRC tags displayed in messages (use \"=\" to separate key from value, do not convert \"_\" to \"-\") ([#1929](https://github.com/weechat/weechat/issues/1929))\n- irc: reset all internal servers variables when disconnecting\n- irc: start from the beginning of nicks at automatic reconnection ([#337](https://github.com/weechat/weechat/issues/337), [#965](https://github.com/weechat/weechat/issues/965))\n- irc: fix join of channels in \"autojoin\" server option on first connection to server if auto reconnection is performed ([#1873](https://github.com/weechat/weechat/issues/1873))\n- irc: update autojoin option with redirected channels when autojoin_dynamic is enabled ([#1898](https://github.com/weechat/weechat/issues/1898))\n- irc: update secure data when server autojoin option contains `${sec.data.xxx}` and option autojoin_dynamic is enabled ([#1934](https://github.com/weechat/weechat/issues/1934))\n- irc: don't switch to buffer of joined channel if it was neither manually joined nor present in server autojoin option\n- irc: fix target buffer for commands 432/433 (erroneous nickname/nickname already in use) when the nickname looks like a channel\n- irc: display command 437 on server buffer when nickname cannot change while banned on channel ([#88](https://github.com/weechat/weechat/issues/88))\n- irc: add messages 415 (cannot send message to channel) and 742 (mode cannot be set)\n- irc: add missing tag \"log3\" in notify messages\n- irc: add missing tags \"irc_cap\" and \"log3\" in cap messages (client capability)\n- irc: fix split of CTCP message with no arguments\n- irc: remove extra space in CTCP ACTION message sent without arguments\n- logger: fix display of multiline messages in backlog ([#1926](https://github.com/weechat/weechat/issues/1926))\n- lua: fix crash with print when the value to print is not a string ([#1904](https://github.com/weechat/weechat/issues/1904), [#1905](https://github.com/weechat/weechat/issues/1905))\n- relay: fix crash on `/upgrade` when at least a client is connected with weechat protocol\n- relay: fix connection with IRC clients sending \"CAP REQ :\" (without capability) and not sending \"CAP END\" ([#1040](https://github.com/weechat/weechat/issues/1040))\n- ruby: fix crash on quit when a child process is still running ([#1889](https://github.com/weechat/weechat/issues/1889), [#1915](https://github.com/weechat/weechat/issues/1915))\n- ruby: fix crash in display of exception backtrace with Ruby 3 ([#1631](https://github.com/weechat/weechat/issues/1631), [#1886](https://github.com/weechat/weechat/issues/1886))\n- script: remove trailing \"J\" (line feed char) in source of scripts displayed\n- spell: check buffer pointer received in info \"spell_dict\"\n- trigger: make default triggers \"cmd_pass\", \"cmd_pass_register\" and \"server_pass\" compatible with multiline input ([#1935](https://github.com/weechat/weechat/issues/1935))\n- typing: fix crash when pointer buffer is not received in callback for signal \"input_text_changed\" ([#1869](https://github.com/weechat/weechat/issues/1869))\n- typing: remove nicks typing even when option typing.look.enabled_self is off ([#1718](https://github.com/weechat/weechat/issues/1718))\n\n### Tests\n\n- core: add tests on URL functions\n- gui: add tests on bar and key functions\n- alias: add tests on alias functions\n- irc: check tags in messages displayed by IRC plugin\n- irc: add tests on function irc_server_alloc_with_url\n- irc: add tests on message/notice/action/CTCP sent\n- logger: add tests on tail functions\n- relay: add tests on \"irc\" protocol\n\n### Build\n\n- core: remove build with autotools ([#1860](https://github.com/weechat/weechat/issues/1860))\n- core: remove RPM packaging\n- core: remove build of .bz2 and .zst files in `make dist`\n- core: remove obsolete cpack config\n- core: add \"stable-number\" and \"devel-number\" in script version.sh\n- core: add quotes around paths in CMake files ([#29](https://github.com/weechat/weechat/issues/29))\n- doc: convert docgen.py to C, remove autogen files from repository, add parameter `--doc-gen` to `weechat-headless` binary, add CMake option \"ENABLE_DOC_INCOMPLETE\"\n\n## Version 3.8 (2023-01-08)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add option weechat.look.chat_space_right ([#1862](https://github.com/weechat/weechat/issues/1862))\n- core: allow value \"0\" in buffer property \"unread\" to remove read marker from buffer\n- core: add command `/allbuf`\n- core: add command `/hotlist`\n- core: move some `/input` actions to commands `/allbuf`, `/buffer` and `/hotlist`\n- core: improve case convert and insensitive char comparisons ([#258](https://github.com/weechat/weechat/issues/258))\n- core: add color attributes \"blink\" and \"dim\" (half bright) ([#1855](https://github.com/weechat/weechat/issues/1855))\n- core: allow command `/toggle` to create option before setting the value, if allowed in the section ([#1837](https://github.com/weechat/weechat/issues/1837))\n- core: add signals \"buffer_user_input_xxx\" and \"buffer_user_closing_xxx\" for buffers created with `/buffer add` ([#1848](https://github.com/weechat/weechat/issues/1848))\n- core: add identifier in buffer lines ([#901](https://github.com/weechat/weechat/issues/901))\n- core: add option `unicode` in command `/debug`\n- api: add Curl options for versions 7.64.0 to 7.87.0\n- api: add functions string_strcmp and string_strncmp\n- api: rename char comparison functions \"utf8_char*\" to \"string_char*\"\n- api: return arithmetic difference between chars in functions string_charcmp, string_charcasecmp, string_charcasecmp_range, string_strcasecmp, string_strcasecmp_range, string_strncasecmp, string_strncasecmp_range, string_strcmp_ignore_chars\n- api: return newly allocated string in functions string_tolower and string_toupper\n- api: add function utf8_strncpy\n- trigger: add regex command \"y\" to translate chars, set default regex command to \"s\" (regex replace) ([#1510](https://github.com/weechat/weechat/issues/1510))\n\n### Bug fixes\n\n- core: fix color when the delimiter is not followed by a background color ([#1867](https://github.com/weechat/weechat/issues/1867))\n- core: display chars the same way in chat and bars, replace tabulations by spaces in bars, display chars < 32 with letter in chat, do not display soft hyphens, zero width spaces and all non-printable chars ([#1659](https://github.com/weechat/weechat/issues/1659), [#1669](https://github.com/weechat/weechat/issues/1669), [#1770](https://github.com/weechat/weechat/issues/1770))\n- core: fix context info in buffers with free content ([#1832](https://github.com/weechat/weechat/issues/1832))\n- core: keep terminal title unchanged when option weechat.look.window_title is set to empty value ([#1835](https://github.com/weechat/weechat/issues/1835), [#1836](https://github.com/weechat/weechat/issues/1836))\n- core: fix crash when setting invalid color in option with null value ([#1844](https://github.com/weechat/weechat/issues/1844))\n- api: do not check conditions defined in option weechat.look.hotlist_add_conditions when adding buffer in hotlist with function buffer_set\n- api: fix function strcmp_ignore_chars with case-sensitive comparison and wide chars starting with the same byte\n- api: send NULL values to config section callbacks in scripting API ([#1843](https://github.com/weechat/weechat/issues/1843))\n- api: fix function string_cut when there are non printable chars in suffix\n- api: do not expect any return value in callbacks \"callback_change\" and \"callback_delete\" of function config_new_option (scripting API)\n- irc: properly rename private buffer on nick changes or privmsg/notice message when new nick is the same with different case\n- irc: do not join channels in server autojoin option after reconnection to the server ([#560](https://github.com/weechat/weechat/issues/560), [bug #21529](https://savannah.nongnu.org/bugs/?21529))\n- irc: escape backslashes in raw buffer ([#1838](https://github.com/weechat/weechat/issues/1838))\n- trigger: fix variables sent to focus callback ([#1858](https://github.com/weechat/weechat/issues/1858))\n\n### Tests\n\n- ci: remove use of repository ppa:ondrej/php, use standard PHP version (8.1) from Ubuntu 22.04\n- core: add script check_scripts.sh\n- core: add script check_curl_symbols.py\n- gui: add tests on input functions\n- scripts: add tests on config functions\n\n### Build\n\n- core: add CMake test called \"notests\" when tests are not compiled\n- core: rename scripts: build-debian.sh to build_debian.sh, build-test.sh to build_test.sh, git-version.sh to set_git_version.sh\n- debian: change dependency guile-2.2-dev to guile-3.0-dev\n- python: remove support of Python 2.x\n- ruby: add detection of Ruby 3.2\n- spell: add detection of enchant-2 ([#1859](https://github.com/weechat/weechat/issues/1859))\n\n## Version 3.7.1 (2022-10-21)\n\n### Bug fixes\n\n- trigger: execute trigger command on appropriate buffer for hooks command, command_run, line, modifier and print ([#1841](https://github.com/weechat/weechat/issues/1841))\n\n## Version 3.7 (2022-10-09)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add option `-save` in command `/upgrade` ([#1630](https://github.com/weechat/weechat/issues/1630))\n- core: add option weechat.look.highlight_disable_regex and buffer property \"highlight_disable_regex\" ([#1798](https://github.com/weechat/weechat/issues/1798))\n- core: sort filters by name ([#1695](https://github.com/weechat/weechat/issues/1695))\n- core: add key `Alt`+`Backspace` to delete previous word, change key `Ctrl`+`w` to delete previous word until whitespace ([#559](https://github.com/weechat/weechat/issues/559))\n- api: rename function string_build_with_split_string to string_rebuild_split_string, add arguments \"index_start\" and \"index_end\"\n- api: add info \"uptime_current\"\n- api: add function crypto_hash_file\n- api: add support of priority in function hook_line ([#1821](https://github.com/weechat/weechat/issues/1821))\n- api: add function string_parse_size\n- api: add function file_compress\n- buflist: add variable `${hotlist_priority_number}` (integer version of `${hotlist_priority}`)\n- irc: display SETNAME command in channels and private buffers, add options irc.color.message_setname and irc.look.smart_filter_setname ([#1805](https://github.com/weechat/weechat/issues/1805))\n- irc: add option irc.look.display_pv_nick_change\n- logger: add options to rotate and compress log files: logger.file.rotation_compression_level, logger.file.rotation_compression_type and logger.file.rotation_size_max ([#314](https://github.com/weechat/weechat/issues/314))\n- spell: allow special dict value \"-\" to disable spell checking on a specific buffer ([#1699](https://github.com/weechat/weechat/issues/1699))\n- trigger: add elapsed time for trigger execution on monitor buffer when trigger debug is set, add option trigger.color.identifier ([#1806](https://github.com/weechat/weechat/issues/1806))\n- trigger: add variable `${tg_hook_type}` ([#1765](https://github.com/weechat/weechat/issues/1765))\n\n### Bug fixes\n\n- core: fix wrong terminal title on terminal resize ([#1702](https://github.com/weechat/weechat/issues/1702))\n- core: fix page scroll in bare display ([#1830](https://github.com/weechat/weechat/issues/1830))\n- api: change type of argument remaining_calls in hook_timer callback from string to integer (in scripts)\n- api: change type of argument object_id in upgrade_new callback from string to integer (in scripts)\n- irc: fix duplicated channels in autojoin option when autojoin_dynamic is enabled ([#1795](https://github.com/weechat/weechat/issues/1795))\n- irc: fix display of TOPIC and QUIT messages with an empty trailing parameter ([#1797](https://github.com/weechat/weechat/issues/1797))\n- irc: fix parsing of messages with trailing spaces and no trailing parameter ([#1803](https://github.com/weechat/weechat/issues/1803))\n- irc: add missing tag \"irc_numeric\" in all numeric IRC commands ([#1804](https://github.com/weechat/weechat/issues/1804))\n- irc: display an error message when using command `/dcc` without xfer plugin loaded\n- irc: display ACCOUNT and CHGHOST commands in private buffers\n- irc: fix extract of isupport value when it is last in list and without value ([#1807](https://github.com/weechat/weechat/issues/1807))\n- irc: fix target buffer of generic errors when they contain a target nick ([#1814](https://github.com/weechat/weechat/issues/1814))\n- irc: fix display of message 350 (whois, gateway) ([#1815](https://github.com/weechat/weechat/issues/1815))\n- irc: replace chars \"\\01\" by spaces in CTCP replies ([#1819](https://github.com/weechat/weechat/issues/1819))\n- irc: fix message when disconnecting from server in case of high lag when server option autoreconnect is off ([#1708](https://github.com/weechat/weechat/issues/1708))\n- irc: set local variable \"filter\" when doing `/server raw xxx` with raw buffer already opened ([#1448](https://github.com/weechat/weechat/issues/1448))\n- guile: fix function hdata_get_string\n- javascript: fix return of long value in functions infolist_time, hdata_long and hdata_time\n- php: fix function hdata_compare\n- relay: fix parsing of IRC messages received from clients ([#1796](https://github.com/weechat/weechat/issues/1796))\n- relay: fix refresh of relay buffer after `/upgrade`\n- ruby: fix function hdata_get_string\n- scripts: fix issue with year ≥ 2038 in functions infolist_new_var_time, print_date_tags and print_y_date_tags (plugins: python/lua/tcl/guile/javascript)\n- scripts: fix issue with long interval in function hook_timer (plugins: python/ruby/lua/tcl/guile/javascript/php)\n- trigger: fix error on monitor buffer creation when trigger debug is >= 1 and monitor buffer is closed\n- trigger: escape arguments with double quotes in output of `/trigger input|output|recreate` ([#190](https://github.com/weechat/weechat/issues/190))\n- xfer: fix crash when closing DCC chat buffer\n- xfer: disconnect all active DCC chats and files on `/upgrade`\n- xfer: fix refresh of xfer buffer after `/upgrade`\n- xfer: fix DCC file receive on Termux ([#1811](https://github.com/weechat/weechat/issues/1811))\n\n### Tests\n\n- ci: switch from Ubuntu 20.04 to 22.04\n- ci: remove macOS 10.15, add macOS 12\n- core: add tests on filter functions\n- scripts: add tests on hdata functions\n- scripts: fix run of Guile test script\n- xfer: add tests on file functions\n\n## Version 3.6 (2022-07-10)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add command `/item` to create custom bar items ([#808](https://github.com/weechat/weechat/issues/808))\n- core: add bar item \"spacer\" ([#1700](https://github.com/weechat/weechat/issues/1700))\n- core: add case conversion in evaluation of expressions with `lower:string` and `upper:string` ([#1778](https://github.com/weechat/weechat/issues/1778))\n- core: move detailed list of hooks from command `/plugin listfull` to `/debug hooks <plugin>`\n- core: allow to remove multiple filters at once with command `/filter del`\n- api: allow to catch multiple signals in functions hook_signal and hook_hsignal ([#1780](https://github.com/weechat/weechat/issues/1780))\n- irc: rename option `save` to `apply` in command `/autojoin`\n- irc: add support of RPL_HELPSTART, RPL_HELPTXT and RPL_ENDOFHELP (messages 524, 704, 705, 706) ([#1772](https://github.com/weechat/weechat/issues/1772))\n- php: add support of PHP 8.2 ([#1787](https://github.com/weechat/weechat/issues/1787))\n\n### Bug fixes\n\n- core: fix bad window size on startup with some terminals like [kitty](https://github.com/kovidgoyal/kitty) ([#1769](https://github.com/weechat/weechat/issues/1769))\n- api: run hook_print callback also on empty messages\n- buflist: fix memory leak when reading config and changing option buflist.look.sort\n- irc: remove channel from autojoin option when manually closing a buffer with `/buffer close` or `/close`\n- irc: fix add of channel to autojoin option when joining a channel with a buffer still opened\n- relay: fix save of channels in autojoin option when JOIN and PART commands are received from an IRC relay client ([#1771](https://github.com/weechat/weechat/issues/1771))\n- trigger: add `${buffer.notify} > 0` in conditions of default trigger \"beep\"\n- trigger: fix completion of command `/trigger add` when there are spaces in the following arguments\n- trigger: fix memory leak in command `/trigger addinput`\n\n## Version 3.5 (2022-03-27)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: search in message tags when tags are displayed with `/debug tags`\n- core: add support of date and tags in messages displayed in buffers with free content, add function printf_y_date_tags ([#1746](https://github.com/weechat/weechat/issues/1746))\n- irc: add command `/autojoin`, add server option \"autojoin_dynamic\"\n- irc: add IRC message tags in messages displayed ([#1680](https://github.com/weechat/weechat/issues/1680))\n- relay: add `zstd` ([Zstandard](https://facebook.github.io/zstd/)) compression in weechat protocol, remove option `compression` from `init` command, rename option relay.network.compression_level to relay.network.compression\n- trigger: add variables `${tg_tag_irc_xxx}` containing IRC message tags ([#1680](https://github.com/weechat/weechat/issues/1680))\n\n### Bug fixes\n\n- core: fix memory leak when removing a line on a buffer with free content\n- core: remove obsolete option weechat.plugin.debug ([#1744](https://github.com/weechat/weechat/issues/1744))\n- core: fix search of commands with UTF-8 chars in name when option weechat.look.command_incomplete is on ([#1739](https://github.com/weechat/weechat/issues/1739))\n- core: fix display of hotlist in buflist after changing value of option weechat.look.hotlist_sort ([#1733](https://github.com/weechat/weechat/issues/1733))\n- api: add function buffer_new_props ([#1759](https://github.com/weechat/weechat/issues/1759))\n- api: fix add of infolist items in hashtable when prefix contains UTF-8 chars in function hashtable_add_from_infolist ([#1739](https://github.com/weechat/weechat/issues/1739))\n- guile: remove disabling of guile gmp allocator with Guile ≥ 3.0.8\n- irc: fix completion of channel topic with UTF-8 chars ([#1739](https://github.com/weechat/weechat/issues/1739))\n- irc: fix parsing of messages 311, 312, 327 (whois) and 314 (whowas) in case of missing parameters\n- irc: fix parsing of message 223 (m_filter) sent by InspIRCd server ([#1751](https://github.com/weechat/weechat/issues/1751))\n- irc: fix parsing of message 338 (whois, host) sent by Rizon server ([#1737](https://github.com/weechat/weechat/issues/1737))\n- irc: fix display of message 344 received as whois geo info ([#1736](https://github.com/weechat/weechat/issues/1736))\n- irc: fix display of message 901 (you are now logged out) ([#1758](https://github.com/weechat/weechat/issues/1758))\n- irc: fix display of IRC numeric messages with no parameters\n- python: fix crash in hook callbacks after script loading failure ([#1740](https://github.com/weechat/weechat/issues/1740))\n- scripts: allow NULL in parameters \"default_value\" and \"value\" of function config_new_option ([#1761](https://github.com/weechat/weechat/issues/1761))\n- scripts: auto-load scripts with supported extensions only ([#1698](https://github.com/weechat/weechat/issues/1698))\n- tcl: add constant `$::weechat::WEECHAT_NULL` ([#1761](https://github.com/weechat/weechat/issues/1761))\n- trigger: fix search of triggers with UTF-8 chars in name ([#1739](https://github.com/weechat/weechat/issues/1739))\n- xfer: fix auto-accept of server/nick when the server name contains UTF-8 chars ([#1739](https://github.com/weechat/weechat/issues/1739))\n\n### Tests\n\n- ci: add build of Debian packages\n- core: add tests on GUI chat functions\n\n### Build\n\n- debian: change dependency libargon2-0-dev to libargon2-dev ([debian #1005703](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1005703))\n- ruby: add detection of Ruby 3.1\n\n## Version 3.4.1 (2022-03-13)\n\n### Bug fixes\n\n- core: set again TLS verification functions after options weechat.network.gnutls_ca_system and weechat.network.gnutls_ca_user are changed ([#1763](https://github.com/weechat/weechat/issues/1763), [CVE-2022-28352](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-28352))\n\n## Version 3.4 (2021-12-18)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add support of static arrays in hdata\n- core: add command `/toggle`\n- api: add parameters pointers, extra_vars and options in function hdata_search\n- api: add user variables in evaluation of expressions with `define:name,value`\n- api: add IRC message parameters `param1` to `paramN` and `num_params` in output of irc_message_parse\n- irc: allow quotes around IRC message in command `/server fakerecv`\n- trigger: hide key and password in command `/msg nickserv setpass nick key password`\n- trigger: add support of option `-server` when hiding passwords in command `/msg nickserv register`\n\n### Bug fixes\n\n- core: fix memory leak in evaluated expression `split:number,seps,flags,xxx` when multiple \"strip_items\" are given\n- core: fix random integer number with large range in evaluation of expressions on GNU/Hurd\n- core: fix access to integer/long/time arrays in hdata\n- api: fix search of option when the section is not given in functions config_search_option and config_search_section_option\n- irc: fix join of channels with long name ([#1717](https://github.com/weechat/weechat/issues/1717))\n- irc: fix parsing of parameters in all IRC messages ([#1666](https://github.com/weechat/weechat/issues/1666))\n- irc: fix parsing of CAP message when there is no prefix ([#1707](https://github.com/weechat/weechat/issues/1707))\n- irc: fix parsing of TAGMSG message when there is a colon before the channel\n\n### Documentation\n\n- doc: remove tester's guide\n- doc: add dark theme (automatic, following browser/desktop settings)\n- doc: make build reproducible\n- doc: disable web fonts\n- doc: switch from prettify to pygments for syntax highlighting\n\n### Tests\n\n- ci: add build with CMake and Ninja\n- ci: add build on macOS 11\n\n### Build\n\n- ruby: add detection of Ruby 3.0 ([#1721](https://github.com/weechat/weechat/issues/1721), [#1605](https://github.com/weechat/weechat/issues/1605))\n- core: add targets \"changelog\" and \"rn\" to build HTML version of ChangeLog and release notes (CMake build only)\n\n## Version 3.3 (2021-09-19)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: change key `Alt`+`h` to `Alt`+`h`, `Alt`+`c` (clear hotlist)\n- core: add options `hotlist_remove_buffer`, `hotlist_restore_buffer` and `hotlist_restore_all` in command `/input`, add default keys `Alt`+`h`, `Alt`+`m` (remove buffer), `Alt`+`h`, `Alt`+`r` (restore hotlist in current buffer) and `Alt`+`h`, `Alt`+`Shift`+`R` (restore hotlist in all buffers)\n- core: add option `certs` in command `/debug`\n- core: add options `-o`, `-ol`, `-i` and `-il` in command `/plugin list`\n- api: add split of string and shell arguments in evaluation of expressions with `split:number,seps,flags,xxx` and `split_shell:number,xxx`\n- api: add `${re:repl_index}` to get the index of replacement in function string_eval_expression ([#1689](https://github.com/weechat/weechat/issues/1689))\n- api: add random integer number in evaluation of expressions with `random:min,max`\n- api: add function string_cut\n- api: add function file_copy ([#1667](https://github.com/weechat/weechat/issues/1667))\n- api: remember insertion order in hashtables\n- api: add keys/values with tags in output of irc_message_parse_to_hashtable ([#1654](https://github.com/weechat/weechat/issues/1654))\n- irc: add option `-parted` in command `/allchan` ([#1685](https://github.com/weechat/weechat/issues/1685))\n- irc: allow signals \"irc_raw_in\" and \"irc_in\" to eat messages ([#1657](https://github.com/weechat/weechat/issues/1657))\n- irc: implement IRCv3.2 SASL authentication, add command `/auth`, reconnect by default to the server in case of SASL authentication failure ([#413](https://github.com/weechat/weechat/issues/413))\n- irc: add support of capability \"message-tags\" and TAGMSG messages ([#1654](https://github.com/weechat/weechat/issues/1654))\n- irc: enable all capabilities by default (if supported by server and WeeChat), change default value of option irc.server_default.capabilities to `*` ([#320](https://github.com/weechat/weechat/issues/320))\n- irc: add options irc.look.display_account_message and irc.look.display_extended_join ([#320](https://github.com/weechat/weechat/issues/320))\n- irc: add command `/setname`, add support of message and capability \"setname\" ([#1653](https://github.com/weechat/weechat/issues/1653))\n- irc: always set realname in nicks even when extended-join capability is not enabled ([#1653](https://github.com/weechat/weechat/issues/1653))\n- irc: add support of FAIL/WARN/NOTE messages ([#1653](https://github.com/weechat/weechat/issues/1653))\n- irc: drop support of DH-BLOWFISH and DH-AES SASL mechanisms ([#175](https://github.com/weechat/weechat/issues/175))\n- typing: new plugin \"typing\": display users currently writing messages on IRC channel/private buffers\n\n### Bug fixes\n\n- core: fix decoding of attributes in basic ANSI colors ([#1678](https://github.com/weechat/weechat/issues/1678))\n- api: fix function string_match with joker in the string if multiple words matched in input string\n- irc: fix send of empty JOIN when connecting to a server with only parted channels ([#1638](https://github.com/weechat/weechat/issues/1638))\n- irc: fix SASL authentication when AUTHENTICATE message is received with a server name ([#1679](https://github.com/weechat/weechat/issues/1679))\n- irc: remove unneeded message about Diffie-Hellman shared secret exchange during SSL connection to server ([#857](https://github.com/weechat/weechat/issues/857))\n- irc: escape/unescape IRC message tags values ([#1654](https://github.com/weechat/weechat/issues/1654))\n- irc: set notify level to \"private\" for received WALLOPS\n- script: fix move of installed script on another filesystem ([#1667](https://github.com/weechat/weechat/issues/1667))\n\n### Documentation\n\n- add Spanish FAQ ([#1656](https://github.com/weechat/weechat/issues/1656))\n- add Serbian translations ([#1655](https://github.com/weechat/weechat/issues/1655))\n\n### Tests\n\n- ci: switch to PHP 8.0\n- ci: add build on macOS\n\n### Build\n\n- core: fix build on macOS ([#1662](https://github.com/weechat/weechat/issues/1662))\n- lua: add detection of Lua 5.4\n- php: add support of PHP 8.0 and 8.1 ([#1599](https://github.com/weechat/weechat/issues/1599), [#1668](https://github.com/weechat/weechat/issues/1668))\n\n## Version 3.2.1 (2021-09-04)\n\n### Bug fixes\n\n- relay: fix crash when decoding a malformed websocket frame ([CVE-2021-40516](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-40516))\n\n## Version 3.2 (2021-06-13)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: use XDG directories by default (config, data, cache, runtime) ([#1285](https://github.com/weechat/weechat/issues/1285))\n- core: add option weechat.network.gnutls_ca_system, rename option weechat.network.gnutls_ca_file to weechat.network.gnutls_ca_user (now evaluated), delete and reload certificates when options are changed ([#972](https://github.com/weechat/weechat/issues/972))\n- core: evaluate option weechat.plugin.path, change default value to `${weechat_data_dir}/plugins`\n- core: add options to customize commands executed on system signals received (SIGHUP, SIGQUIT, SIGTERM, SIGUSR1, SIGUSR2) ([#1595](https://github.com/weechat/weechat/issues/1595))\n- core: quit WeeChat by default when signal SIGHUP is received in normal run, reload configuration in weechat-headless ([#1595](https://github.com/weechat/weechat/issues/1595))\n- core: add signals \"cursor_start\" and \"cursor_end\"\n- api: add function crypto_hmac ([#1628](https://github.com/weechat/weechat/issues/1628))\n- api: add translated string in evaluation of expressions with `translate:xxx`\n- api: add evaluation of WeeChat directories with `${weechat_xxx_dir}` in evaluated strings\n- api: add optional key \"directory\" in hashtable options of function/modifier string_eval_path_home\n- api: add supported prefixes `${weechat_xxx_dir}` in function mkdir_home\n- api: add infos \"weechat_config_dir\", \"weechat_data_dir\", \"weechat_cache_dir\" and \"weechat_runtime_dir\"\n- api: add support of pointer names in function string_eval_expression (direct and in hdata)\n- api: add info \"weechat_daemon\"\n- buflist: add option buflist.format.tls_version\n- fifo: change default value of option fifo.file.path to `${weechat_runtime_dir}/weechat_fifo_${info:pid}`\n- irc: add support of SASL mechanisms SCRAM-SHA-1, SCRAM-SHA-256 and SCRAM-SHA-512 ([#1628](https://github.com/weechat/weechat/issues/1628))\n- irc: add variable `${target}` (target nick) in commands `/kick` and `/kickban`\n- irc: add bar item \"tls_version\", add options irc.color.item_tls_version_ok, irc.color.item_tls_version_deprecated and irc.color.item_tls_version_insecure ([#1622](https://github.com/weechat/weechat/issues/1622))\n- irc: evaluate server options \"sasl_key\" and \"ssl_cert\"\n- logger: change default value of option logger.file.path to `${weechat_data_dir}/logs`\n- python: add stub for WeeChat API ([#1377](https://github.com/weechat/weechat/issues/1377))\n- relay: evaluate option relay.network.ssl_cert_key, change default value to `${weechat_config_dir}/ssl/relay.pem`\n- script: change default value of option script.scripts.path to `${weechat_cache_dir}/script`\n- trigger: add variables `${tg_shell_argc}` and `${tg_shell_argvN}` in command trigger evaluated strings ([#1624](https://github.com/weechat/weechat/issues/1624))\n- xfer: change default value of option xfer.file.download_path to `${weechat_data_dir}/xfer`\n\n### Bug fixes\n\n- core: split startup commands before evaluating them ([#1643](https://github.com/weechat/weechat/issues/1643))\n- core: set server name when connecting to server with TLS (SNI extension) only if it's not an IPV4/IPv6 ([#1635](https://github.com/weechat/weechat/issues/1635))\n- core: use function mallinfo2 instead of mallinfo when available ([#1636](https://github.com/weechat/weechat/issues/1636))\n- core: display a warning when the file with certificate authorities is not found (option weechat.network.gnutls_ca_file)\n- core: evaluate left/right part of comparison after split on the comparison operator in `${if:xxx}` ([#1627](https://github.com/weechat/weechat/issues/1627))\n- core: prevent switching to start of visited buffers when jumping to next ([#1591](https://github.com/weechat/weechat/issues/1591), [#1592](https://github.com/weechat/weechat/issues/1592))\n- core: recreate buflist and fset bars on `/reload` when WeeChat is started without configuration files ([#1618](https://github.com/weechat/weechat/issues/1618))\n- buflist: fix comparison of hotlists in option buflist.look.sort ([#1621](https://github.com/weechat/weechat/issues/1621))\n- irc: split server command before evaluating it ([#1643](https://github.com/weechat/weechat/issues/1643))\n- xfer: make file transfer fail when option xfer.file.auto_rename is off and file already exists ([#1633](https://github.com/weechat/weechat/issues/1633))\n\n### Tests\n\n- ci: switch from Ubuntu 18.04 to 20.04\n- trigger: add tests on main trigger functions\n\n### Build\n\n- core: remove build option CA_FILE\n- core: set WeeChat home to empty string by default in CMake and autotools\n\n## Version 3.1 (2021-03-07)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add options weechat.look.hotlist_update_on_buffer_switch and weechat.look.read_marker_update_on_buffer_switch ([#992](https://github.com/weechat/weechat/issues/992), [#993](https://github.com/weechat/weechat/issues/993))\n- core: add option sec.crypt.passphrase_command to read passphrase from an external program on startup, remove option sec.crypt.passphrase_file ([#141](https://github.com/weechat/weechat/issues/141))\n- core: improve debug in command `/eval`: display more verbose debug with two `-d`, add indentation and colors\n- core: add options `setvar` and `delvar` in command `/buffer`, rename option `localvar` to `listvar`\n- core: add buffer local variable \"completion_default_template\" (evaluated) to override the value of option \"weechat.completion.default_template\" ([#1600](https://github.com/weechat/weechat/issues/1600))\n- core: add option `recreate` in command `/filter`\n- core: add raw string in evaluation of expressions with `raw:xxx` ([#1611](https://github.com/weechat/weechat/issues/1611))\n- core: add evaluation of conditions in evaluation of expressions with `eval_cond:xxx` ([#1582](https://github.com/weechat/weechat/issues/1582))\n- api: add info_hashtable \"secured_data\"\n- irc: add info \"irc_is_message_ignored\"\n- irc: add server option \"default_chantypes\", used when the server does not send them in message 005 ([#1610](https://github.com/weechat/weechat/issues/1610))\n- trigger: add variable `${tg_trigger_name}` in command trigger evaluated strings ([#1580](https://github.com/weechat/weechat/issues/1580))\n\n### Bug fixes\n\n- core: fix quoted line in cursor mode ([#1602](https://github.com/weechat/weechat/issues/1602))\n- core: fix wrong size of the new window after vertical split ([#1612](https://github.com/weechat/weechat/issues/1612))\n- core: do not remove quotes in arguments of command `/eval` as they can be part of the evaluated expression/condition ([#1601](https://github.com/weechat/weechat/issues/1601))\n- core: display an error when the buffer is not found with command `/command -buffer`\n- buflist: add option buflist.look.use_items to speed up display of buflist ([#1613](https://github.com/weechat/weechat/issues/1613))\n- irc: add bar item \"irc_nick_prefix\"\n- irc: fix separator between nick and host in bar item \"irc_nick_host\"\n- irc: fix completion of commands `/halfop` and `/dehalfop`\n\n### Documentation\n\n- do not build weechat-headless man page if headless binary is disabled ([#1607](https://github.com/weechat/weechat/issues/1607))\n\n## Version 3.0.1 (2021-01-31)\n\n### Bug fixes\n\n- exec: fix search of command by identifier\n- spell: fix refresh of bar item \"spell_suggest\" when the input becomes empty ([#1586](https://github.com/weechat/weechat/issues/1586))\n- spell: fix crash with IRC color codes in command line ([#1589](https://github.com/weechat/weechat/issues/1589))\n\n## Version 3.0 (2020-11-11)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- api: add optional list of colors in infos \"nick_color\" and \"nick_color_name\" ([#1565](https://github.com/weechat/weechat/issues/1565))\n- api: add argument \"bytes\" in function string_dyn_concat\n- api: add function string_color_code_size ([#1547](https://github.com/weechat/weechat/issues/1547))\n- exec: add option `-oerr` to send stderr to buffer (now disabled by default) ([#1566](https://github.com/weechat/weechat/issues/1566))\n- fset: add option fset.look.auto_refresh ([#1553](https://github.com/weechat/weechat/issues/1553))\n- irc: add pointer to irc_nick in focus of bar item \"buffer_nicklist\" ([#1535](https://github.com/weechat/weechat/issues/1535), [#1538](https://github.com/weechat/weechat/issues/1538))\n- irc: allow to send text on buffers with commands `/allchan`, `/allpv` and `/allserv`\n- irc: evaluate command executed by commands `/allchan`, `/allpv` and `/allserv` ([#1536](https://github.com/weechat/weechat/issues/1536))\n- script: add option script.scripts.download_enabled ([#1548](https://github.com/weechat/weechat/issues/1548))\n- trigger: add variable \"tg_argc\" in data set by command trigger ([#1576](https://github.com/weechat/weechat/issues/1576))\n- trigger: add variable \"tg_trigger_name\" in data set by all triggers ([#1567](https://github.com/weechat/weechat/issues/1567), [#1568](https://github.com/weechat/weechat/issues/1568))\n\n### Bug fixes\n\n- core: set \"notify_level\" to 3 if there is a highlight in the line ([#1529](https://github.com/weechat/weechat/issues/1529))\n- core: do not add line with highlight and tag \"notify_none\" to hotlist ([#1529](https://github.com/weechat/weechat/issues/1529))\n- irc: remove SASL timeout message displayed by error after successful SASL authentication ([#1515](https://github.com/weechat/weechat/issues/1515))\n- irc: send all channels in a single JOIN command when reconnecting to the server ([#1551](https://github.com/weechat/weechat/issues/1551))\n- script: do not automatically download list of scripts on startup if the file is too old ([#1548](https://github.com/weechat/weechat/issues/1548))\n- spell: properly skip WeeChat and IRC color codes when checking words in input ([#1547](https://github.com/weechat/weechat/issues/1547))\n- trigger: fix recursive calls to triggers using regex ([#1546](https://github.com/weechat/weechat/issues/1546))\n- trigger: add `${tg_tags} !!- ,notify_none,` in conditions of default trigger \"beep\" ([#1529](https://github.com/weechat/weechat/issues/1529))\n\n### Tests\n\n- core: add tests on GUI line functions\n\n### Build\n\n- core: disable debug by default in autotools build\n- tests: fix compilation with CppUTest ≥ 4.0\n\n## Version 2.9 (2020-07-18)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add bar option \"color_bg_inactive\": color for window bars in inactive window ([#732](https://github.com/weechat/weechat/issues/732))\n- core: add Alacritty title escape sequence support ([#1517](https://github.com/weechat/weechat/issues/1517))\n- core: display notify level for current buffer with command `/buffer notify` ([#1505](https://github.com/weechat/weechat/issues/1505))\n- core: count only visible nicks in bar item \"buffer_nicklist_count\", add bar items \"buffer_nicklist_count_groups\" and \"buffer_nicklist_count_all\" ([#1506](https://github.com/weechat/weechat/issues/1506))\n- core: set default size for input bar to 0 (automatic) ([#1498](https://github.com/weechat/weechat/issues/1498))\n- core: add default key `Alt`+`Enter` to insert a newline ([#1498](https://github.com/weechat/weechat/issues/1498))\n- core: add flag \"input_multiline\" in buffer ([#984](https://github.com/weechat/weechat/issues/984), [#1063](https://github.com/weechat/weechat/issues/1063))\n- core: add a scalable WeeChat logo (SVG) ([#1454](https://github.com/weechat/weechat/issues/1454), [#1456](https://github.com/weechat/weechat/issues/1456))\n- core: add base 16/32/64 encoding/decoding in evaluation of expressions with `base_encode:base,xxx` and `base_decode:base,xxx`\n- core: add case-sensitive wildcard matching comparison operator (`+==*+` and `+!!*+`) and case-sensitive/insensitive include comparison operators (`+==-+`, `+!!-+`, `+=-+`, `+!-+`) in evaluation of expressions\n- core: add default key `Alt`+`Shift`+`N` to toggle nicklist bar\n- core: add command line option `--stdout` in weechat-headless binary to log to stdout rather than ~/.weechat/weechat.log ([#1475](https://github.com/weechat/weechat/issues/1475), [#1477](https://github.com/weechat/weechat/issues/1477))\n- core: reload configuration files on SIGHUP ([#1476](https://github.com/weechat/weechat/issues/1476))\n- api: add pointer \"_bar_window\" in hashtable sent to hook focus callback ([#1450](https://github.com/weechat/weechat/issues/1450))\n- api: add info_hashtable \"focus_info\" ([#1245](https://github.com/weechat/weechat/issues/1245), [#1257](https://github.com/weechat/weechat/issues/1257))\n- api: rename function hook_completion_get_string to completion_get_string and hook_completion_list_add to completion_list_add\n- api: add functions completion_new, completion_search and completion_free\n- api: add hdata \"completion_word\"\n- buflist: add default key `Alt`+`Shift`+`B` to toggle buflist\n- buflist: add options enable/disable/toggle in command `/buflist`\n- buflist: evaluate option buflist.look.sort so that sort can be customized for each of the three buflist bar items ([#1465](https://github.com/weechat/weechat/issues/1465))\n- irc: add support of UTF8MAPPING ([#1528](https://github.com/weechat/weechat/issues/1528))\n- irc: display account messages in buffers ([#1250](https://github.com/weechat/weechat/issues/1250))\n- python: add WeeChat sharedir python directory to PYTHONPATH ([#1537](https://github.com/weechat/weechat/issues/1537))\n- relay: increase default limits for IRC backlog options\n- relay: add command \"handshake\" in weechat relay protocol and nonce to prevent replay attacks, add options relay.network.password_hash_algo, relay.network.password_hash_iterations, relay.network.nonce_size ([#1474](https://github.com/weechat/weechat/issues/1474))\n- relay: add command \"completion\" in weechat relay protocol to perform a completion on a string at a given position ([#1484](https://github.com/weechat/weechat/issues/1484))\n- relay: add option relay.network.auth_timeout\n- relay: update default colors for client status\n- relay: add status \"waiting_auth\" in irc and weechat protocols ([#1358](https://github.com/weechat/weechat/issues/1358))\n- trigger: evaluate arguments of command when the trigger is created ([#1472](https://github.com/weechat/weechat/issues/1472))\n\n### Bug fixes\n\n- core: fix command `/window scroll_beyond_end` when buffer has fewer lines than chat height ([#1509](https://github.com/weechat/weechat/issues/1509))\n- core: force buffer property \"time_for_each_line\" to 0 for buffers with free content ([#1485](https://github.com/weechat/weechat/issues/1485))\n- core: don't collapse consecutive newlines in lines displayed before the first buffer is created\n- core: don't remove consecutive newlines when pasting text ([#1500](https://github.com/weechat/weechat/issues/1500))\n- core: don't collapse consecutive newlines in bar content ([#1500](https://github.com/weechat/weechat/issues/1500))\n- core: fix WEECHAT_SHAREDIR with CMake build ([#1461](https://github.com/weechat/weechat/issues/1461))\n- core: fix memory leak in calculation of expression on FreeBSD ([#1469](https://github.com/weechat/weechat/issues/1469))\n- core: fix resize of a bar when its size is 0 (automatic) ([#1470](https://github.com/weechat/weechat/issues/1470))\n- api: fix use of pointer after free in function key_unbind\n- api: replace plugin and buffer name by buffer pointer in argument \"modifier_data\" sent to weechat_print modifier callback ([#42](https://github.com/weechat/weechat/issues/42))\n- buflist: add \"window\" pointer in bar item evaluation only if it's not NULL (if bar type is \"window\")\n- exec: fix use of same task id for different tasks ([#1491](https://github.com/weechat/weechat/issues/1491))\n- fifo: fix errors when writing in the FIFO pipe ([#713](https://github.com/weechat/weechat/issues/713))\n- guile: enable again `/guile` eval ([#1514](https://github.com/weechat/weechat/issues/1514))\n- irc: use new default chantypes \"#&\" when the server does not send it\n- irc: add support of optional server in info \"irc_is_nick\", fix check of nick using UTF8MAPPING isupport value ([#1528](https://github.com/weechat/weechat/issues/1528))\n- irc: fix add of ignore with flags in regex, display full ignore mask in list of ignores ([#1518](https://github.com/weechat/weechat/issues/1518))\n- irc: do not remove spaces at the end of users messages received ([#1513](https://github.com/weechat/weechat/issues/1513))\n- irc: fix realname delimiter color in WHO/WHOX response ([#1497](https://github.com/weechat/weechat/issues/1497))\n- irc: reuse a buffer with wrong type \"channel\" when a private message is received ([#869](https://github.com/weechat/weechat/issues/869))\n- python: fix crash when invalid UTF-8 string is in a WeeChat hashtable converted to a Python dict ([#1463](https://github.com/weechat/weechat/issues/1463))\n- relay: add missing field \"notify_level\" in message \"_buffer_line_added\" ([#1529](https://github.com/weechat/weechat/issues/1529))\n- relay: fix slow send of data to clients when SSL is enabled\n- trigger: only return trigger's return code when condition evaluates to true ([#592](https://github.com/weechat/weechat/issues/592))\n- trigger: fix truncated trigger command with commands `/trigger` input|output|recreate\n- trigger: do not hide values of options with `/set` command in cmd_pass trigger\n\n### Documentation\n\n- add includes directory\n- merge 53 auto-generated files into 11 files\n- fix broken literal blocks in Japanese docs with Firefox ([#1466](https://github.com/weechat/weechat/issues/1466))\n\n### Tests\n\n- ci: add CI with GitHub Actions, move codecov.io upload to GitHub Actions\n- ci: switch to Ubuntu Bionic on Travis CI, use pylint3 to lint Python scripts\n- core: run tests on plugins only if the plugins are enabled and compiled\n- irc: add tests on IRC color and channel functions\n\n### Build\n\n- javascript: disable build by default and remove Debian packaging of JavaScript plugin ([#360](https://github.com/weechat/weechat/issues/360))\n- core: make GnuTLS a required dependency\n- core: fix build with CMake 3.17.0\n- core: fix build with cygport on Cygwin\n\n## Version 2.8 (2020-03-29)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add variable \"old_full_name\" in buffer, set during buffer renaming ([#1428](https://github.com/weechat/weechat/issues/1428))\n- core: add debug option `-d` in command `/eval` ([#1434](https://github.com/weechat/weechat/issues/1434))\n- api: add functions crypto_hash and crypto_hash_pbkdf2\n- api: add info \"auto_connect\" ([#1453](https://github.com/weechat/weechat/issues/1453))\n- api: add info \"weechat_headless\" ([#1433](https://github.com/weechat/weechat/issues/1433))\n- buflist: add pointer \"window\" in bar item evaluation\n- irc: add support of fake servers (no I/O, for testing purposes)\n- relay: accept hash of password in init command of weechat protocol with option \"password_hash\" (PBKDF2, SHA256, SHA512)\n- relay: reject client with weechat protocol if password or TOTP is received in init command but not set in WeeChat ([#1435](https://github.com/weechat/weechat/issues/1435))\n\n### Bug fixes\n\n- core: fix memory leak in completion\n- core: flush stdout/stderr before forking in hook_process function ([#1441](https://github.com/weechat/weechat/issues/1441))\n- core: fix evaluation of condition with nested \"if\" ([#1434](https://github.com/weechat/weechat/issues/1434))\n- irc: split AUTHENTICATE message in 400-byte chunks ([#1459](https://github.com/weechat/weechat/issues/1459))\n- irc: copy temporary server flag in command `/server copy`\n- irc: add nick changes in the hotlist (except self nick change)\n- irc: case-insensitive comparison on incoming CTCP command, force upper case on CTCP replies ([#1439](https://github.com/weechat/weechat/issues/1439))\n- irc: fix memory leak when the channel topic is changed\n- logger: fix crash when logging is disabled on a buffer and the log file was deleted in the meanwhile, when option logger.file.info_lines is on ([#1444](https://github.com/weechat/weechat/issues/1444))\n- php: fix crash when loading script with PHP 7.4 ([#1452](https://github.com/weechat/weechat/issues/1452))\n- relay: update buffers synchronization when buffers are renamed ([#1428](https://github.com/weechat/weechat/issues/1428))\n- script: fix memory leak in read of script repository file if it has invalid content\n- script: fix unexpected display of scripts list in buffer with command `/script list -i`\n- xfer: send signal \"xfer_ended\" after the received file has been renamed ([#1438](https://github.com/weechat/weechat/issues/1438))\n\n### Tests\n\n- scripts: fix generation of test scripts with Python 3.8\n- core: add tests on function secure_derive_key\n- core: add tests on functions util_get_time_diff and util_file_get_content\n- irc: add tests on IRC protocol functions and callbacks\n\n### Build\n\n- core: fix Cygwin build\n- guile: add detection of Guile 3.0.0 ([#1442](https://github.com/weechat/weechat/issues/1442))\n- irc: fix build with GnuTLS < 3.1.0 ([#1431](https://github.com/weechat/weechat/issues/1431))\n- php: add detection of PHP 7.4\n- ruby: add detection of Ruby 2.7 ([#1455](https://github.com/weechat/weechat/issues/1455))\n\n## Version 2.7.1 (2020-02-20)\n\n### Bug fixes\n\n- irc: fix crash when a new message 005 is received with longer nick prefixes ([CVE-2020-9760](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-9760))\n- irc: fix crash when receiving a malformed message 352 (who) ([CVE-2020-9759](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-9759))\n- irc: fix crash when receiving a malformed message 324 (channel mode) ([CVE-2020-8955](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8955))\n\n## Version 2.7 (2019-12-08)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add option weechat.look.nick_color_hash_salt to shuffle nick colors ([#635](https://github.com/weechat/weechat/issues/635))\n- core: add different icons sizes (16x16 to 512x512) ([#1347](https://github.com/weechat/weechat/issues/1347))\n- core: add file weechat.desktop\n- core: add reverse of string for screen in evaluation of expressions with `revscr:xxx`\n- core: add length of string (number of chars and on screen) in evaluation of expressions with `length:xxx` and `lengthscr:xxx`\n- core: add calculation of expression in evaluation of expressions with `calc:xxx` ([#997](https://github.com/weechat/weechat/issues/997))\n- core: add optional default path (evaluated) in completion \"filename\"\n- core: add support of modifiers in evaluation of expressions with `modifier:name,data,string`\n- api: add modifier \"color_encode_ansi\" ([#528](https://github.com/weechat/weechat/issues/528))\n- api: add modifier \"eval_path_home\"\n- irc: add filters on raw buffer ([#1000](https://github.com/weechat/weechat/issues/1000))\n- irc: add option irc.look.display_pv_warning_address to display a warning in private buffer if the remote nick address has changed ([#892](https://github.com/weechat/weechat/issues/892))\n- irc: add server option \"ssl_password\" ([#115](https://github.com/weechat/weechat/issues/115), [#1416](https://github.com/weechat/weechat/issues/1416))\n- irc: add \"user\" in output of irc_message_parse ([#136](https://github.com/weechat/weechat/issues/136))\n- irc: add options irc.color.message_kick and irc.color.reason_kick ([#683](https://github.com/weechat/weechat/issues/683), [#684](https://github.com/weechat/weechat/issues/684))\n- logger: add option logger.file.color_lines ([#528](https://github.com/weechat/weechat/issues/528), [#621](https://github.com/weechat/weechat/issues/621))\n- script: add options `-ol` and `-il` in command `/script list` to send translated string with list of scripts loaded, display \"No scripts loaded\" if no scripts are loaded\n- xfer: add option xfer.file.download_temporary_suffix with default value \".part\" ([#1237](https://github.com/weechat/weechat/issues/1237))\n\n### Bug fixes\n\n- core: set buffer name, short name and title only if the value has changed\n- core: fix scrolling up in bare mode when switched to bare mode at the top of the buffer ([#899](https://github.com/weechat/weechat/issues/899), [#978](https://github.com/weechat/weechat/issues/978))\n- core: optimize load of configuration files\n- core: fix window separators not respecting window splits ([#630](https://github.com/weechat/weechat/issues/630))\n- core: fix cursor mode info when prefix_align is none and with words split across lines ([#610](https://github.com/weechat/weechat/issues/610), [#617](https://github.com/weechat/weechat/issues/617), [#619](https://github.com/weechat/weechat/issues/619))\n- core: add support of reverse video in ANSI color codes\n- core: fixed segfault during excessive evaluation in function string_repeat ([#1400](https://github.com/weechat/weechat/issues/1400))\n- buflist: fix extra spaces between buffers when conditions are used to hide buffers (regression introduced in version 2.6) ([#1403](https://github.com/weechat/weechat/issues/1403))\n- irc: do not automatically open a channel with name \"0\" ([#1429](https://github.com/weechat/weechat/issues/1429))\n- irc: remove option irc.network.channel_encode, add server option \"charset_message\" to control which part of the IRC message is decoded/encoded to the target charset ([#832](https://github.com/weechat/weechat/issues/832))\n- irc: use path from option xfer.file.upload_path to complete filename in command `/dcc send` ([#60](https://github.com/weechat/weechat/issues/60))\n- logger: fix write in log file if it has been deleted or renamed ([#123](https://github.com/weechat/weechat/issues/123))\n- python: send \"bytes\" instead of \"str\" to callbacks in Python 3 when the string is not UTF-8 valid ([#1389](https://github.com/weechat/weechat/issues/1389))\n- relay: send message \"_buffer_title_changed\" to clients only when the title is changed\n- xfer: fix memory leak when a xfer is freed and when the plugin is unloaded\n\n### Tests\n\n- core: add tests on GUI color functions\n\n### Build\n\n- core: fix build on Haiku ([#1420](https://github.com/weechat/weechat/issues/1420))\n- core: fix build on Alpine\n- core: remove file FindTCL.cmake\n- core: display an error on missing dependency in CMake ([#916](https://github.com/weechat/weechat/issues/916), [#956](https://github.com/weechat/weechat/issues/956))\n- debian: disable JavaScript plugin on Debian Sid and Ubuntu Eoan\n- debian: build with Guile 2.2\n- guile: add support of Guile 2.2, disable `/guile eval` ([#1098](https://github.com/weechat/weechat/issues/1098))\n- python: add detection of Python 3.8\n\n## Version 2.6 (2019-09-08)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add support of 32767 color pairs ([#1343](https://github.com/weechat/weechat/issues/1343), [#1345](https://github.com/weechat/weechat/issues/1345))\n- core: add option `close` in command `/window` ([#853](https://github.com/weechat/weechat/issues/853))\n- api: add infos \"term_colors\" and \"term_color_pairs\"\n- api: add function list_user_data ([#666](https://github.com/weechat/weechat/issues/666))\n- api: add argument \"strip_items\" in function string_split\n- buflist: add infolist \"buflist\" with list of buffer pointers ([#1375](https://github.com/weechat/weechat/issues/1375))\n- exec: evaluate option exec.command.shell, change default value to `${env:SHELL}` ([#1356](https://github.com/weechat/weechat/issues/1356))\n- fset: add filters `h=xxx` and `he=xxx` to filter options by description (translated or in English)\n- irc: make command char optional in server option \"command\" ([#615](https://github.com/weechat/weechat/issues/615))\n- irc: add variables \"user_max_length\" and \"host_max_length\" in server structure ([#1387](https://github.com/weechat/weechat/issues/1387))\n\n### Bug fixes\n\n- core: use fixed-width integer for computing nick and hashtable DJB2 key hashes, add values \"djb2_32\" and \"sum_32\" for option weechat.look.nick_color_hash ([#1394](https://github.com/weechat/weechat/issues/1394))\n- core: create or update option weechat.notify.xxx when function buffer_set is called with \"notify\" property ([#1390](https://github.com/weechat/weechat/issues/1390))\n- core: fix memory leak in case of error when building content of bar item for display ([#1384](https://github.com/weechat/weechat/issues/1384))\n- core: send command line parameter to plugins only if the name starts with the plugin name followed by a colon\n- core: auto disable upgrade process (command line option `--upgrade`) if the file weechat.upgrade is not found\n- core: replace newlines by spaces in argument \"completion\" of function hook_command ([#538](https://github.com/weechat/weechat/issues/538))\n- core: replace char \",\" by \"~\" in color codes to separate foreground from background ([#1264](https://github.com/weechat/weechat/issues/1264))\n- alias: remove default aliases `/AME` and `/AMSG` ([#1355](https://github.com/weechat/weechat/issues/1355))\n- buflist: use extra variables in option buflist.look.display_conditions ([#1393](https://github.com/weechat/weechat/issues/1393))\n- irc: fix parsing of messages 346 (invite list), 348 (exception list), 367 (ban list) and 728 (quiet list) when there is a colon before the timestamp ([#1396](https://github.com/weechat/weechat/issues/1396))\n- irc: fix memory leak when removing a server\n- irc: fix length of user/nick/host in split of messages ([#1387](https://github.com/weechat/weechat/issues/1387))\n- irc: quote NICK command argument sent to the server only if there's a \":\" in the nick ([#1376](https://github.com/weechat/weechat/issues/1376), [#1319](https://github.com/weechat/weechat/issues/1319))\n- irc: return all arguments in the PONG response to a PING ([#1369](https://github.com/weechat/weechat/issues/1369))\n- irc: disable server reconnection when the server buffer is closed ([#236](https://github.com/weechat/weechat/issues/236))\n- irc: strip spaces at beginning/end of addresses in server option \"addresses\" ([#195](https://github.com/weechat/weechat/issues/195))\n- irc: fix display of enabled/disabled client capabilities received in command CAP ACK ([#151](https://github.com/weechat/weechat/issues/151))\n- ruby: fix conversion of big integers on 32bit architecture ([#1395](https://github.com/weechat/weechat/issues/1395))\n\n### Tests\n\n- irc: add tests on IRC ignore, message and nick functions\n\n### Build\n\n- core: fix compilation with autotools on FreeBSD 12.0\n- debian: disable JavaScript plugin on Debian Buster/Bullseye ([#1374](https://github.com/weechat/weechat/issues/1374))\n- python: compile with Python 3 by default\n- python: use pkg-config to detect Python ([#1382](https://github.com/weechat/weechat/issues/1382))\n\n## Version 2.5 (2019-06-06)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: use getopt to parse command line arguments\n- core: add option weechat.look.prefix_same_nick_middle ([#930](https://github.com/weechat/weechat/issues/930), [#931](https://github.com/weechat/weechat/issues/931))\n- core: add option weechat.look.buffer_time_same ([#1127](https://github.com/weechat/weechat/issues/1127))\n- core: use seconds by default in `/repeat` interval, allow unit for the interval\n- core: allow text in addition to a command in command `/repeat`\n- core: add option `addreplace` in command `/filter` ([#1055](https://github.com/weechat/weechat/issues/1055), [#1312](https://github.com/weechat/weechat/issues/1312))\n- api: return allocated string in hook_info callback and function info_get\n- api: replace argument \"keep_eol\" by \"flags\" in function string_split ([#1322](https://github.com/weechat/weechat/issues/1322))\n- api: add function command_options ([#928](https://github.com/weechat/weechat/issues/928))\n- api: add function string_match_list\n- irc: add bar items \"irc_nick\", \"irc_host\" and \"irc_nick_host\"\n- irc: add variable \"host\" in server structure\n- relay: add support of UNIX socket ([#733](https://github.com/weechat/weechat/issues/733), [#1333](https://github.com/weechat/weechat/issues/1333))\n- relay: add option relay.weechat.commands ([#928](https://github.com/weechat/weechat/issues/928))\n- script: use SHA-512 instead of MD5 for script checksum\n- spell: rename aspell plugin to spell ([#1299](https://github.com/weechat/weechat/issues/1299))\n- trigger: add hooks \"info\" and \"info_hashtable\"\n- xfer: rename option xfer.network.speed_limit to xfer.network.speed_limit_send, add option xfer.network.speed_limit_recv ([#269](https://github.com/weechat/weechat/issues/269))\n\n### Bug fixes\n\n- core: don't execute command scheduled by `/repeat` and `/wait` if the buffer does not exist anymore\n- core: set max length to 4096 for `/secure passphrase` ([#1323](https://github.com/weechat/weechat/issues/1323))\n- core: refilter only affected buffers on filter change ([#1309](https://github.com/weechat/weechat/issues/1309), [#1311](https://github.com/weechat/weechat/issues/1311))\n- fset: fix slow refresh of fset buffer during `/reload` ([#1313](https://github.com/weechat/weechat/issues/1313))\n- irc: fix parsing of MODE command when there are colons after the first mode argument ([#1296](https://github.com/weechat/weechat/issues/1296))\n- irc: fix memory leak in infos \"irc_server_isupport\" and \"irc_server_isupport_value\"\n- irc: fix length of string for SHA-512, SHA-256 and SHA-1 in help on ssl_fingerprint option\n- irc: display an error with `/allchan -current` or `/allpv -current` if the current buffer is not an irc buffer ([#1325](https://github.com/weechat/weechat/issues/1325))\n- irc: fix update of channels modes with arguments when joining a channel ([#1324](https://github.com/weechat/weechat/issues/1324))\n- irc: quote NICK command argument sent to the server ([#1319](https://github.com/weechat/weechat/issues/1319))\n- php: fix memory leak in functions string_eval_expression, string_eval_path_home, key_bind, hook_process_hashtable, hook_hsignal_send, info_get_hashtable, hdata_update\n- relay: fix crash when a weechat relay client reloads the relay plugin with `/plugin reload relay` ([#1327](https://github.com/weechat/weechat/issues/1327))\n- spell: fix detection of nick followed by the nick completer ([#1306](https://github.com/weechat/weechat/issues/1306), [#1307](https://github.com/weechat/weechat/issues/1307))\n- trigger: fix split of hook arguments ([#1322](https://github.com/weechat/weechat/issues/1322))\n\n### Tests\n\n- core: add tests on function util_signal_search\n\n### Build\n\n- core: fix value of libdir in file weechat.pc ([#1341](https://github.com/weechat/weechat/issues/1341), [#1342](https://github.com/weechat/weechat/issues/1342))\n- core: fix generation of man page weechat-headless with autotools\n- core: add CMake option \"ENABLE_CODE_COVERAGE\" to compile with code coverage options (CMake ≥ 3.0 is now required)\n- core: fix compilation on macOS ([#1308](https://github.com/weechat/weechat/issues/1308))\n- lua: add detection of Lua 5.3 with autotools\n- ruby: add detection of Ruby 2.6 ([#1346](https://github.com/weechat/weechat/issues/1346))\n- tests: fix compilation of tests on FreeBSD\n\n## Version 2.4 (2019-02-17)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: do not automatically add a space when completing \"nick:\" at the beginning of command line (the space can be added in option weechat.completion.nick_completer)\n- core: add default keys `Ctrl`+`F11` / `Ctrl`+`F12` to scroll up/down one page in nicklist (same action as `F11` / `F12`)\n- core: add command line option `-t` (or `--temp-dir`) to create a temporary WeeChat home (deleted on exit)\n- api: add functions string_base_encode and string_base_decode, remove functions string_encode_base64 and string_decode_base64\n- api: add support of Time-based One-Time Password (TOTP), add infos \"totp_generate\" and \"totp_validate\"\n- buflist: add default keys `Ctrl`+`F1` / `Ctrl`+`F2` to scroll up/down one page in buflist (same action as `F1` / `F2`)\n- buflist: add variable `${number2}`, always set with the indented buffer number\n- exec: add option exec.command.shell to customize the shell used with `/exec -sh`\n- relay: add support of close frame in websocket connection ([#1281](https://github.com/weechat/weechat/issues/1281))\n- relay: add support of Time-based One-Time Password (TOTP) as second authentication factor in weechat protocol\n\n### Bug fixes\n\n- core: fix compilation of empty regular expression (not allowed on FreeBSD)\n- core: fix forced highlight on messages sent to other buffers ([#1277](https://github.com/weechat/weechat/issues/1277))\n- aspell: look for suggestions only if the misspelled word has changed ([#1175](https://github.com/weechat/weechat/issues/1175))\n- buflist: add alternate key codes for `F1` / `F2` and `Alt`+`F1` / `Alt`+`F2` (compatibility with terminals)\n- buflist: fix warning displayed when script buffers.pl is loaded ([#1274](https://github.com/weechat/weechat/issues/1274))\n- irc: fix parsing of whois messages in notify\n- irc: fix parsing of MODE, 341 (invite) and CHGHOST commands when there are colons ([#1296](https://github.com/weechat/weechat/issues/1296))\n- irc: return IRC color code instead of WeeChat color code when decoding a too short ANSI color sequence\n- irc: fix encoding of italic attribute when colors are removed\n- irc: fix parsing of \"time\" message tag on FreeBSD ([#1289](https://github.com/weechat/weechat/issues/1289))\n- relay: fix crash on `/upgrade` when the real IP is not set ([#1294](https://github.com/weechat/weechat/issues/1294))\n- relay: fix memory leak in connection of client\n\n### Tests\n\n- core: fix UTF-8 and evaluation tests on FreeBSD\n- irc: add tests on IRC configuration and protocol functions\n\n### Build\n\n- core: add C compiler flag \"-fsigned--char\" to force \"char\" data type to be always signed ([#1277](https://github.com/weechat/weechat/issues/1277))\n\n## Version 2.3 (2018-10-21)\n\n### New features\n\n- core: add repeat of string in evaluation of expressions with `repeat:count,string` ([#958](https://github.com/weechat/weechat/issues/958))\n- core: allow specifying buffer number/name for `/buffer localvar` ([#1259](https://github.com/weechat/weechat/issues/1259))\n- core: allow multiple arguments in command `/buffer close`\n- core: allow multiple options `-r` (or `--run-command`) in command line arguments ([#1248](https://github.com/weechat/weechat/issues/1248))\n- core: add command line option `-P` (or `--plugins`) to customize the plugins to load at startup\n- core: allow partial buffer name in command `/buffer close` ([#1226](https://github.com/weechat/weechat/issues/1226))\n- api: add function hook_line ([#66](https://github.com/weechat/weechat/issues/66))\n- irc: display a warning when the value of option irc.server.xxx.autojoin is set to an invalid value\n- relay: add real IP in client description ([#1256](https://github.com/weechat/weechat/issues/1256))\n- trigger: allow creation of temporary variables with the regex\n- trigger: add hook \"line\"\n\n### Bug fixes\n\n- core: fix evaluation of nested ternary operators ([#1263](https://github.com/weechat/weechat/issues/1263))\n- core: fix evaluation of condition when the left operand is an empty string\n- core: fix string evaluation with regex replacement when the string is empty\n- core: fix check of tags in lines (command `/filter` and hook_print)\n- core: fix clear of completion item in case of partial completion ([#1162](https://github.com/weechat/weechat/issues/1162))\n- core: send signal \"key_pressed\" for mouse code only if the string is UTF-8 valid ([#1220](https://github.com/weechat/weechat/issues/1220))\n- api: fix memory leak in function string_split\n- lua: fix return code of mkdir functions in case of error ([#1267](https://github.com/weechat/weechat/issues/1267))\n- scripts: fix duplicated lines in output of script eval (python, perl, ruby, lua and guile)\n\n### Tests\n\n- core: add tests on line and hook functions\n\n### Build\n\n- php: add detection of PHP 7.3\n\n## Version 2.2 (2018-07-14)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: change default value of option weechat.look.hotlist_add_conditions to check connected relay clients via weechat protocol ([#1206](https://github.com/weechat/weechat/issues/1206))\n- core: add reverse of string in evaluation of expressions with `rev:xxx` ([#1200](https://github.com/weechat/weechat/issues/1200))\n- core: send buffer pointer (when possible) in signal \"hotlist_changed\" ([#1133](https://github.com/weechat/weechat/issues/1133))\n- core: add support of list options in curl ([#826](https://github.com/weechat/weechat/issues/826), [#219](https://github.com/weechat/weechat/issues/219))\n- core: allow merge of buffers by name in command `/buffer` ([#1108](https://github.com/weechat/weechat/issues/1108), [#1159](https://github.com/weechat/weechat/issues/1159))\n- api: add function hashtable_add_from_infolist\n- api: add function string_format_size in scripting API\n- irc: add nick, host and log tags in message displayed in private buffer when the nick comes back on the server ([#1221](https://github.com/weechat/weechat/issues/1221))\n- irc: add support for IRCv3.2 chghost, add options irc.look.smart_filter_chghost and irc.color.message_chghost ([#640](https://github.com/weechat/weechat/issues/640))\n- irc: add support for IRCv3.2 invite-notify ([#639](https://github.com/weechat/weechat/issues/639))\n- irc: add support for IRCv3.2 Client Capability Negotiation ([#586](https://github.com/weechat/weechat/issues/586), [#623](https://github.com/weechat/weechat/issues/623))\n- irc: display current nick on connected servers in output of `/server list|listfull` ([#1193](https://github.com/weechat/weechat/issues/1193))\n- irc: add option `-server` in command `/list` ([#1165](https://github.com/weechat/weechat/issues/1165))\n- irc: add indexed ban list, add completion for `/unban` and `/unquiet` ([#597](https://github.com/weechat/weechat/issues/597), [task #11374](https://savannah.nongnu.org/task/?11374), [task #10876](https://savannah.nongnu.org/task/?10876))\n- relay: add filtering on protocol in info \"relay_client_count\"\n- trigger: hide password in command `/msg nickserv set password`\n- xfer: add option xfer.network.send_ack ([#1171](https://github.com/weechat/weechat/issues/1171))\n\n### Bug fixes\n\n- core: fix TLS handshake failure on server connection when there are multiple addresses in the server ([#1196](https://github.com/weechat/weechat/issues/1196))\n- core: count number of chars instead of bytes for suffix in function string_cut\n- core: fix delete of previous/next word (keys `Ctrl`+`w` and `Alt`+`d`) ([#1195](https://github.com/weechat/weechat/issues/1195))\n- core: fix infinite loop in evaluation of strings ([#1183](https://github.com/weechat/weechat/issues/1183))\n- core: change default value of option weechat.look.window_title from \"WeeChat ${info:version}\" to empty string ([#1182](https://github.com/weechat/weechat/issues/1182))\n- buflist: fix crash when setting the option buflist.look.signals_refresh with a list of signals\n- fset: fix memory leak when switching the format with `Ctrl`+`x`\n- fset: fix truncation of option values when the length is greater than 4096 ([#1218](https://github.com/weechat/weechat/issues/1218))\n- fset: fix crash when applying filters after closing the fset buffer ([#1204](https://github.com/weechat/weechat/issues/1204))\n- irc: display message 354 (WHOX) received with missing parameters ([#1212](https://github.com/weechat/weechat/issues/1212))\n- irc: always set nick away status on WHO response (sent manually or automatically with server option \"away_check\")\n- irc: fix a crash when calling the function hdata_string on the \"prefix\" variable in the nick\n- irc: fix split of messages when server option \"split_msg_max_length\" is set to 0 (no split) ([#1173](https://github.com/weechat/weechat/issues/1173))\n- irc: send whole IRC message including IRCv3 tags in the signals irc_in, irc_in2, irc_raw_in and irc_raw_in2 ([#787](https://github.com/weechat/weechat/issues/787))\n- irc: fix memory leak when receiving a message with IRCv3 tags\n- guile: fix memory leak in 7 functions returning allocated strings\n- lua: fix macros used to return values\n- php: fix return code of functions config_write_option and config_write_line\n- php: fix memory leak in 72 functions returning allocated strings\n- python: fix crash when loading a script with Python ≥ 3.7 ([#1219](https://github.com/weechat/weechat/issues/1219))\n- relay: fix socket creation for relay server on OpenBSD ([#1213](https://github.com/weechat/weechat/issues/1213))\n- ruby: fix memory leak in 7 functions returning allocated strings\n- script: fix memory leak in case of invalid XML content in list of scripts\n- scripts: fix memory leak in hook_info callback\n- scripts: fix return value of hook_infolist callback (pointer instead of string)\n- scripts: return long integer instead of string in function infolist_time\n- xfer: set option TCP_NODELAY on socket when receiving a file via DCC ([#1171](https://github.com/weechat/weechat/issues/1171))\n\n### Documentation\n\n- core: split man pages weechat and weechat-headless\n\n### Tests\n\n- core, scripts: add tests on infolists\n\n### Build\n\n- core: fix build with CMake and Ninja\n- debian: add package weechat-headless with the headless binary and its man page\n- javascript: fix compilation of javascript plugin with autotools on some Linux distributions ([#1208](https://github.com/weechat/weechat/issues/1208))\n- python: add detection of Python 3.7\n\n## Version 2.1 (2018-03-18)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add binary weechat-headless to run WeeChat without interface, with optional daemon mode (command line option `--daemon`) ([#1120](https://github.com/weechat/weechat/issues/1120))\n- core: add options `-newbuffer`, `-free` and `-switch` in command `/print` ([#1113](https://github.com/weechat/weechat/issues/1113))\n- core: add option `-y` in command `/print`, add support of buffers with free content\n- core: add option `add` in command `/buffer` ([#1113](https://github.com/weechat/weechat/issues/1113))\n- core: add option weechat.completion.partial_completion_templates to force partial completion on specific templates\n- api: add hashtable with variables in plugin structure\n- api: add time in info \"date\" (WeeChat compilation date/time) ([#1138](https://github.com/weechat/weechat/issues/1138))\n- irc: add server option \"split_msg_max_length\"\n- irc: allow `${irc_server.xxx}` and `${server}` in server evaluated options ([#1144](https://github.com/weechat/weechat/issues/1144))\n- logger: add option logger.file.fsync ([#1145](https://github.com/weechat/weechat/issues/1145))\n- logger: add option logger.look.backlog_conditions ([#1132](https://github.com/weechat/weechat/issues/1132))\n- script: change default value of option script.look.sort from \"p,n\" to \"i,p,n\"\n- scripts: add configuration file for each script plugin (python.conf, perl.conf, etc.)\n- scripts: add `eval` option in script commands and info \"xxx_eval\" (python, perl, ruby, lua and guile) ([#128](https://github.com/weechat/weechat/issues/128))\n- scripts: add infos \"xxx_interpreter\" and \"xxx_version\" in script plugins ([#1075](https://github.com/weechat/weechat/issues/1075))\n- scripts: add option `version` in script commands ([#1075](https://github.com/weechat/weechat/issues/1075))\n- scripts: display the script name in stdout/stderr output from scripts\n\n### Bug fixes\n\n- core: fix regression on execution of hook_print callbacks (introduced in version 2.0)\n\n### Build\n\n- ruby: add detection of Ruby 2.5 ([#1122](https://github.com/weechat/weechat/issues/1122))\n\n## Version 2.0.1 (2017-12-20)\n\n### Bug fixes\n\n- python: fix arguments status/gnutls_rc/sock in hook_connect callback\n- python: fix argument fd in hook_fd callback\n\n## Version 2.0 (2017-12-03)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add flag \"input_get_empty\" in buffer\n- core: add signals \"buffer_filters_enabled\" and \"buffer_filters_disabled\"\n- core: support loading of plugins from path in environment variable \"WEECHAT_EXTRA_LIBDIR\" ([#971](https://github.com/weechat/weechat/issues/971), [#979](https://github.com/weechat/weechat/issues/979))\n- core: make value optional in command `/buffer set` ([#746](https://github.com/weechat/weechat/issues/746), [#1088](https://github.com/weechat/weechat/issues/1088))\n- core: allow floating point and hexadecimal numbers in comparison of evaluated values\n- core: add option weechat.look.save_config_with_fsync ([#1083](https://github.com/weechat/weechat/issues/1083))\n- api: add support of prefix \"quiet:\" in function key_unbind to quietly remove keys\n- api: add argument \"recurse_subdirs\" in function exec_on_files\n- alias: add infolist \"alias_default\" (list of default aliases)\n- buflist: add two new bar items (\"buflist2\" and \"buflist3\") using the same format configuration options ([#990](https://github.com/weechat/weechat/issues/990))\n- buflist: add option buflist.look.add_newline ([#1027](https://github.com/weechat/weechat/issues/1027))\n- fset: new plugin \"fset\" (fast set of WeeChat and plugins options) ([#584](https://github.com/weechat/weechat/issues/584))\n- php: new plugin \"php\" ([#909](https://github.com/weechat/weechat/issues/909))\n- script: add local variable \"filter\" in the script buffer ([#1037](https://github.com/weechat/weechat/issues/1037))\n\n### Bug fixes\n\n- core: do not change the chat prefix size when a filtered line is added ([#1092](https://github.com/weechat/weechat/issues/1092))\n- core: fix display of nicks in nicklist when they are in a group with sub-groups ([#1079](https://github.com/weechat/weechat/issues/1079))\n- core, plugins: check return code of strftime function\n- core: fix cast of time_t (to \"long long\" instead of \"long\") ([#1051](https://github.com/weechat/weechat/issues/1051))\n- core: call the config hook when options are renamed or removed\n- api: change type of arguments status/gnutls_rc/sock in hook_connect callback from string to integer (in scripts)\n- api: change type of argument fd in hook_fd callback from string to integer (in scripts)\n- buflist: remove recursive evaluation of extra variables ([#1060](https://github.com/weechat/weechat/issues/1060))\n- guile: return integer (0/1) instead of boolean in API functions\n- guile: fix return value of static strings in API functions\n- irc: do not clear nicklist when joining an already joined channel if the option irc.look.buffer_open_before_join is on ([#1081](https://github.com/weechat/weechat/issues/1081))\n- irc: fix CTCP PING reply when the option irc.ctcp.ping is set to non-empty value\n- lua: fix boolean return value (as integer) in API functions\n- relay: fix parsing of CAP command without arguments in irc protocol, send ACK only if all capabilities received are OK and NAK otherwise ([#1040](https://github.com/weechat/weechat/issues/1040))\n\n### Tests\n\n- core: display an error if the required locale en_US.UTF-8 is not installed\n- scripts: add scripting API tests ([#104](https://github.com/weechat/weechat/issues/104))\n\n### Build\n\n- core: fix build with ncurses and separate tinfo ([bug #41245](https://savannah.nongnu.org/bugs/?41245), [#1090](https://github.com/weechat/weechat/issues/1090))\n- javascript: fix detection of libv8 with autotools on Ubuntu Trusty\n\n## Version 1.9.1 (2017-09-23)\n\n### Bug fixes\n\n- buflist: fix crash in auto-scroll of bar when the buflist item is not the first item in the bar\n- logger: call strftime before replacing buffer local variables ([CVE-2017-14727](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-14727))\n- relay: fix send of \"PART\" command in backlog (irc protocol)\n\n## Version 1.9 (2017-06-25)\n\n### New features\n\n- core: improve speed of nicklist bar item callback\n- core: allow index for hdata arrays in evaluation of expressions\n- api: allow update of variables \"scroll_x\" and \"scroll_y\" in bar_window with function hdata_update\n- api: add functions config_option_get_string and hdata_compare\n- buflist: add option buflist.look.auto_scroll ([#332](https://github.com/weechat/weechat/issues/332))\n- buflist: add keys `F1` / `F2`, `Alt`+`F1` / `Alt`+`F2` to scroll the buflist bar\n- buflist: display a warning when the script \"buffers.pl\" is loaded\n- buflist: add support of char \"~\" in option buflist.look.sort for case-insensitive comparison\n- buflist: add variable `${format_name}` in bar item evaluation and option buflist.format.name ([#1020](https://github.com/weechat/weechat/issues/1020))\n- buflist: add variables `${current_buffer}` and `${merged}` (booleans \"0\" / \"1\") in bar item evaluation\n- relay: add option `start` in command `/relay`\n- trigger: add \"irc_server\" and \"irc_channel\" pointers in data for IRC signal/modifier hooks\n\n### Bug fixes\n\n- core: fix bind of keys with space key, like `Alt`+`Space` ([#603](https://github.com/weechat/weechat/issues/603), [bug #32133](https://savannah.nongnu.org/bugs/?32133))\n- core: fix infinite loop when the terminal is closed on the secure password prompt ([#1010](https://github.com/weechat/weechat/issues/1010))\n- buflist: fix long mouse gestures\n- buflist: fix slow switch of buffer when there are a lot of buffers opened ([#998](https://github.com/weechat/weechat/issues/998))\n- buflist: add option `bar` in command `/buflist`, do not automatically add the \"buflist\" bar when the option buflist.look.enabled is off ([#994](https://github.com/weechat/weechat/issues/994))\n- buflist: fix crash on drag & drop of buffers\n- irc: don't reset nick properties (prefixes/away/account/realname) on `/names` when the nick already exists ([#1019](https://github.com/weechat/weechat/issues/1019))\n- irc: fix memory leak in case of error in \"ecdsa-nist256p-challenge\" SASL mechanism\n- relay: rebind on address after option relay.network.bind_address is changed\n- relay: fix parsing of CAP command arguments in irc protocol ([#995](https://github.com/weechat/weechat/issues/995))\n\n## Version 1.8 (2017-05-13)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add option weechat.completion.nick_case_sensitive ([#981](https://github.com/weechat/weechat/issues/981))\n- core: add wildcard matching operator (`+=*+` and `+!*+`) in evaluation of expressions ([#611](https://github.com/weechat/weechat/issues/611))\n- core: add cut of string in evaluation of expressions with `cut:xxx` (number of chars) and `cutscr:xxx` (number of chars displayed on screen)\n- core: add ternary operator (condition) in evaluation of expressions (`${if:condition?value_if_true:value_if_false}`)\n- core: add resize of window parents with `/window resize [h/v]size` ([task #11461](https://savannah.nongnu.org/task/?11461), [#893](https://github.com/weechat/weechat/issues/893))\n- core: add hotlist pointer in buffer structure\n- core: add last start date in output of command `/version` after at least one `/upgrade` ([#903](https://github.com/weechat/weechat/issues/903))\n- api: add arraylist functions: arraylist_new, arraylist_size, arraylist_get, arraylist_search, arraylist_insert, arraylist_add, arraylist_remove, arraylist_clear, arraylist_free\n- api: add dynamic string functions: string_dyn_alloc, string_dyn_copy, string_dyn_concat, string_dyn_free\n- api: add special key \"__quiet\" in hashtable for function key_bind\n- api: add `${re:#}` to get the index of last group captured in function string_eval_expression\n- aspell: add options to control delimiters in suggestions: aspell.color.suggestion_delimiter_{dict|word} and aspell.look.suggestion_delimiter_{dict|word} ([#940](https://github.com/weechat/weechat/issues/940))\n- buflist: new plugin \"buflist\" (bar item with list of buffers)\n- irc: add option `open` in command `/server` ([#966](https://github.com/weechat/weechat/issues/966))\n- irc: send signal \"irc_server_lag_changed\" and store the lag in the server buffer (local variable)\n- irc: send multiple masks by message in commands `/ban`, `/unban`, `/quiet` and `/unquiet`, use ban mask default for nicks in `/quiet` and `/unquiet`, display an error if `/quiet` and `/unquiet` are not supported by server ([#579](https://github.com/weechat/weechat/issues/579), [#15](https://github.com/weechat/weechat/issues/15), [#577](https://github.com/weechat/weechat/issues/577))\n- irc: add option `-include` in commands `/allchan`, `/allpv` and `/allserv` ([#572](https://github.com/weechat/weechat/issues/572))\n- irc: don't smart filter modes given to you ([#530](https://github.com/weechat/weechat/issues/530), [#897](https://github.com/weechat/weechat/issues/897))\n- script: remove option script.scripts.url_force_https, use HTTPS by default in option script.scripts.url\n\n### Bug fixes\n\n- core: fix memory leak in display of mouse event debug info\n- core: fix command `/cursor stop` (do not toggle cursor mode) ([#964](https://github.com/weechat/weechat/issues/964))\n- core: fix delayed refresh when the signal SIGWINCH is received (terminal resized), send signal \"signal_sigwinch\" after refreshes ([#902](https://github.com/weechat/weechat/issues/902))\n- irc: fix update of server addresses on reconnection when the evaluated content has changed ([#925](https://github.com/weechat/weechat/issues/925))\n- irc: fix crash in case of invalid server reply during SASL authentication with DH-BLOWFISH or DH-AES mechanism\n- irc: fix double decoding of IRC colors in messages sent/displayed by commands `/msg` and `/query` ([#943](https://github.com/weechat/weechat/issues/943))\n- irc: fix parsing of message 324 (modes) when there is a colon before the modes ([#913](https://github.com/weechat/weechat/issues/913))\n- relay: check buffer pointer received in \"sync\" and \"desync\" commands (weechat protocol) ([#936](https://github.com/weechat/weechat/issues/936))\n- relay: remove buffer from synchronized buffers when it is closed (fix memory leak)\n\n### Build\n\n- core: fix compilation on FreeBSD with autotools ([#276](https://github.com/weechat/weechat/issues/276))\n- python: add detection of Python 3.6\n- ruby: add detection of Ruby 2.4 ([#895](https://github.com/weechat/weechat/issues/895))\n\n## Version 1.7.1 (2017-04-22)\n\n### Bug fixes\n\n- irc: fix parsing of DCC filename ([CVE-2017-8073](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-8073))\n\n## Version 1.7 (2017-01-15)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add option weechat.look.align_multiline_words ([#411](https://github.com/weechat/weechat/issues/411), [#802](https://github.com/weechat/weechat/issues/802))\n- core: add optional command prefix in completion templates \"commands\", \"plugins_commands\" and \"weechat_commands\"\n- core: add optional arguments in completion template, sent to the callback\n- core: add option `time` in command `/debug`\n- core, xfer: display more information on fork errors ([#573](https://github.com/weechat/weechat/issues/573))\n- core: add a slash before commands completed in arguments of `/command`, `/debug time`, `/key bind`, `/key bindctxt`, `/mute`, `/repeat`, `/wait`\n- core: add a warning in header of configuration files to not edit by hand ([#851](https://github.com/weechat/weechat/issues/851))\n- api: add info \"uptime\" (WeeChat uptime)\n- api: add info \"pid\" (WeeChat PID) ([#850](https://github.com/weechat/weechat/issues/850))\n- alias: add a slash before commands completed in arguments of `/alias`\n- exec: add option `-oc` in command `/exec` to execute commands in process output, don't execute commands by default with `-o` ([#877](https://github.com/weechat/weechat/issues/877))\n- fifo: add file fifo.conf and option fifo.file.path to customize FIFO pipe path/filename ([#850](https://github.com/weechat/weechat/issues/850), [#122](https://github.com/weechat/weechat/issues/122))\n- irc: add server option \"usermode\" ([#377](https://github.com/weechat/weechat/issues/377), [#820](https://github.com/weechat/weechat/issues/820))\n- irc: add tag \"self_msg\" on self messages ([#840](https://github.com/weechat/weechat/issues/840))\n- irc: evaluate content of server option \"ssl_fingerprint\" ([#858](https://github.com/weechat/weechat/issues/858))\n- irc: change default value of option irc.network.lag_reconnect from 0 to 300 ([#818](https://github.com/weechat/weechat/issues/818))\n- trigger: do not hide email in command `/msg nickserv register password email` ([#849](https://github.com/weechat/weechat/issues/849))\n\n### Bug fixes\n\n- core: fix deadlock when quitting after a signal SIGHUP/SIGQUIT/SIGTERM is received ([#32](https://github.com/weechat/weechat/issues/32))\n- core: fix display of empty lines in search mode ([#829](https://github.com/weechat/weechat/issues/829))\n- api: fix crash in function string_expand_home when the HOME environment variable is not set ([#827](https://github.com/weechat/weechat/issues/827))\n- exec: fix memory leak in display of process output\n- irc: fix option `-temp` in command `/server` ([#880](https://github.com/weechat/weechat/issues/880))\n- irc: fix close of server channels which are waiting for the JOIN when the server buffer is closed ([#873](https://github.com/weechat/weechat/issues/873))\n- irc: fix buffer switching on manual join for forwarded channels ([#876](https://github.com/weechat/weechat/issues/876))\n- irc: add missing tags on CTCP message sent\n- lua: fix integers returned in Lua ≥ 5.3 ([#834](https://github.com/weechat/weechat/issues/834))\n- relay: make HTTP headers case-insensitive for WebSocket connections ([#888](https://github.com/weechat/weechat/issues/888))\n- relay: set status to \"authentication failed\" and close immediately connection in case of authentication failure in weechat and irc protocols ([#825](https://github.com/weechat/weechat/issues/825))\n- script: reload a script after upgrade only if it was loaded, set autoload only if the script was auto-loaded ([#855](https://github.com/weechat/weechat/issues/855))\n\n### Build\n\n- core, irc, xfer: fix compilation on macOS (add link with resolv) ([#276](https://github.com/weechat/weechat/issues/276))\n- core: add build of xz package with make dist (CMake)\n- tests: fix compilation of tests on FreeBSD 11.0\n\n## Version 1.6 (2016-10-02)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add optional argument `lowest`, `highest` or level mask in command `/input hotlist_clear`\n- core: add option `cycle` in command `/buffer`\n- core, irc, xfer: display more information on memory allocation errors ([#573](https://github.com/weechat/weechat/issues/573))\n- api: add \"extra\" argument to evaluate extra variables in function string_eval_expression ([#534](https://github.com/weechat/weechat/issues/534))\n- api: remove functions printf_date and printf_tags\n- irc: rename server options \"default_msg_{kick|part|quit}\" to \"msg_{kick|part|quit}\", evaluate them\n- relay: add option relay.network.allow_empty_password ([#735](https://github.com/weechat/weechat/issues/735))\n- relay: allow escape of comma in command \"init\" (weechat protocol) ([#730](https://github.com/weechat/weechat/issues/730))\n- trigger: add support for one-time triggers ([#399](https://github.com/weechat/weechat/issues/399), [#509](https://github.com/weechat/weechat/issues/509))\n\n### Bug fixes\n\n- core, irc, xfer: refresh domain name and name server addresses before connection to servers (fix connection to servers after suspend mode) ([#771](https://github.com/weechat/weechat/issues/771))\n- api: fix return of function string_match when there are multiple masks in the string ([#812](https://github.com/weechat/weechat/issues/812))\n- api: fix crash in function network_connect_to if address is NULL\n- api: fix connection to servers with hook_connect on Windows 10 with Windows subsystem for Linux ([#770](https://github.com/weechat/weechat/issues/770))\n- api: fix crash in function string_split_command when the separator is not a semicolon ([#731](https://github.com/weechat/weechat/issues/731))\n- irc: fix socket leak in connection to server ([#358](https://github.com/weechat/weechat/issues/358), [#801](https://github.com/weechat/weechat/issues/801))\n- irc: fix display of service notice mask (message 008) ([#429](https://github.com/weechat/weechat/issues/429))\n- irc: fix NULL pointer dereference in 734 command callback ([#738](https://github.com/weechat/weechat/issues/738))\n- relay: return an empty hdata when the requested hdata or pointer is not found ([#767](https://github.com/weechat/weechat/issues/767))\n- xfer: fix crash on DCC send if option xfer.file.auto_accept_nicks is set ([#781](https://github.com/weechat/weechat/issues/781))\n\n### Documentation\n\n- switch to asciidoctor to build docs and man page ([#722](https://github.com/weechat/weechat/issues/722))\n\n### Build\n\n- python: add detection of Python 3.5\n\n## Version 1.5 (2016-05-01)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: evaluate content of option \"weechat.look.item_time_format\" ([#791](https://github.com/weechat/weechat/issues/791))\n- core: change default value of option weechat.look.nick_color_hash to \"djb2\"\n- core: move nick coloring from irc plugin to core, move options irc.look.nick_color_force, irc.look.nick_color_hash and irc.look.nick_color_stop_chars to core, add info \"nick_color\" and \"nick_color_name\", deprecate info \"irc_nick_color\" and \"irc_color_name\" ([#262](https://github.com/weechat/weechat/issues/262))\n- core: move irc bar item \"away\" to core, move options irc.look.item_away_message and irc.color.item_away to core ([#692](https://github.com/weechat/weechat/issues/692))\n- api: add support of functions in hook_process\n- api: add pointer in callbacks used in scripting API ([#406](https://github.com/weechat/weechat/issues/406))\n- irc: add option irc.network.sasl_fail_unavailable ([#600](https://github.com/weechat/weechat/issues/600), [#697](https://github.com/weechat/weechat/issues/697))\n- irc: add multiple targets and support of `-server` in command `/ctcp` ([#204](https://github.com/weechat/weechat/issues/204), [#493](https://github.com/weechat/weechat/issues/493))\n- trigger: add \"recover\" in default triggers cmd_pass/msg_auth, and \"regain\" in default trigger \"msg_auth\" ([#511](https://github.com/weechat/weechat/issues/511))\n\n### Internationalization\n\n- add Portuguese translations\n\n### Bug fixes\n\n- core: fix nick coloring when stop chars and a forced color are used: first remove chars then look for forced color\n- core: check that pointers received in arguments are not NULL in buffers and windows functions\n- core: fix truncation of buffer names in hotlist ([#668](https://github.com/weechat/weechat/issues/668))\n- core: fix update of window title under Tmux ([#685](https://github.com/weechat/weechat/issues/685))\n- api: fix number of arguments returned by function string_split when keep_eol is 2 and the string ends with separators\n- irc: fix first message displayed in raw buffer when the message is modified by a modifier ([#719](https://github.com/weechat/weechat/issues/719))\n- irc: add missing completion \"*\" for target in command `/msg`\n- irc: fix `/msg` command with multiple targets including \"*\"\n- lua: fix crash when a lua function doesn't return a value and a string was expected ([#718](https://github.com/weechat/weechat/issues/718))\n- relay: do not execute any command received in a PRIVMSG message from an irc relay client ([#699](https://github.com/weechat/weechat/issues/699))\n- relay: fix the max number of clients connected on a port, allow value 0 for \"no limit\" ([#669](https://github.com/weechat/weechat/issues/669))\n- relay: fix decoding of multiple frames in a single websocket message, send PONG on PING received in a websocket frame ([#675](https://github.com/weechat/weechat/issues/675))\n- relay: fix command \"input\" received from clients with only spaces in content of message (weechat protocol) ([#663](https://github.com/weechat/weechat/issues/663))\n- script: force refresh of scripts buffer after download of scripts list ([#693](https://github.com/weechat/weechat/issues/693))\n- xfer: fix DCC file received when the terminal is resized ([#677](https://github.com/weechat/weechat/issues/677), [#680](https://github.com/weechat/weechat/issues/680))\n\n### Build\n\n- python: fix detection of Python shared libraries ([#676](https://github.com/weechat/weechat/issues/676))\n- ruby: add detection of Ruby 2.3 ([#698](https://github.com/weechat/weechat/issues/698))\n\n## Version 1.4 (2016-01-10)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add a parent name in options, display inherited values if null in `/set` output, add option weechat.color.chat_value_null ([#629](https://github.com/weechat/weechat/issues/629))\n- core: add tag \"term_warning\" in warnings about wrong $TERM on startup\n- core: add option weechat.look.paste_auto_add_newline ([#543](https://github.com/weechat/weechat/issues/543))\n- core: display a more explicit error when a filter fails to be added ([#522](https://github.com/weechat/weechat/issues/522))\n- api: add function string_hex_dump\n- api: add argument \"length\" in function utf8_is_valid\n- alias: display completion in `/alias list` ([#518](https://github.com/weechat/weechat/issues/518))\n- fifo: add `/fifo` command\n- irc: track real names using extended-join and WHO ([#351](https://github.com/weechat/weechat/issues/351))\n- irc: add support of SNI (Server Name Indication) in SSL connection to IRC server ([#620](https://github.com/weechat/weechat/issues/620))\n- irc: add support of \"cap-notify\" capability ([#182](https://github.com/weechat/weechat/issues/182), [#477](https://github.com/weechat/weechat/issues/477))\n- irc: add command `/cap` ([#8](https://github.com/weechat/weechat/issues/8))\n- irc: add hex dump of messages in raw buffer when debug is enabled for irc plugin (level 2 or more)\n- irc: evaluate content of server option \"addresses\"\n- irc: move option irc.network.alternate_nick into servers (irc.server.xxx.nicks_alternate) ([#633](https://github.com/weechat/weechat/issues/633))\n- irc: use current channel and current server channels first in completions \"irc_server_channels\" and \"irc_channels\" ([task #12923](https://savannah.nongnu.org/task/?12923), [#260](https://github.com/weechat/weechat/issues/260), [#392](https://github.com/weechat/weechat/issues/392))\n- logger: display system error when the log file cannot be written ([#541](https://github.com/weechat/weechat/issues/541))\n- relay: add option relay.irc.backlog_since_last_message ([#347](https://github.com/weechat/weechat/issues/347))\n- script: add option script.scripts.download_timeout\n- script: add completion with languages and extensions, support search by language/extension in `/script search`\n\n### Bug fixes\n\n- core: fix execution of empty command name (\"/\" and \"/ \" are not valid commands)\n- core: fix memory leak when using multiple `-d` or `-r` in command line arguments\n- core: don't complain anymore about \"tmux\" and \"tmux-256color\" $TERM values when WeeChat is running under Tmux ([#519](https://github.com/weechat/weechat/issues/519))\n- core: fix truncated messages after a word with a length of zero on screen (for example a zero width space: U+200B) ([bug #40985](https://savannah.nongnu.org/bugs/?40985), [#502](https://github.com/weechat/weechat/issues/502))\n- api: fix handle of invalid escape in function string_convert_escaped_chars\n- alias: do not allow slashes and spaces in alias name ([#646](https://github.com/weechat/weechat/issues/646))\n- irc: fix channel forwarding when option irc.look.buffer_open_before_{autojoin|join} is on ([#643](https://github.com/weechat/weechat/issues/643))\n- irc: add a missing colon before the password in PASS message, if the password has spaces or begins with a colon ([#602](https://github.com/weechat/weechat/issues/602))\n- irc: fix charset decoding in incoming private messages ([#520](https://github.com/weechat/weechat/issues/520))\n- irc: display the arrow before server name in raw buffer\n- irc: fix display of messages sent to server in raw buffer\n- irc: fix display of invalid UTF-8 chars in raw buffer\n- relay: display the arrow before client id and protocol in raw buffer\n- ruby: fix load of scripts requiring \"uri\" ([#433](https://github.com/weechat/weechat/issues/433))\n\n### Documentation\n\n- add Czech man page and quickstart guide ([#490](https://github.com/weechat/weechat/issues/490))\n\n### Tests\n\n- core: add a test to check if all plugins are loaded\n- core: fix locale used to execute tests ([#631](https://github.com/weechat/weechat/issues/631))\n\n### Build\n\n- core: add scripts version.sh and build-debian.sh, separate stable from devel Debian packaging\n- ruby: fix Ruby detection when pkg-config is not installed\n\n## Version 1.3 (2015-08-16)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add completion \"colors\" ([#481](https://github.com/weechat/weechat/issues/481))\n- core: start/stop search in buffer at current scroll position by default, add key `Ctrl`+`q` to stop search and reset scroll ([#76](https://github.com/weechat/weechat/issues/76), [#393](https://github.com/weechat/weechat/issues/393))\n- core: add option weechat.look.key_grab_delay to set the default delay when grabbing a key with `Alt`+`k`\n- core: add option weechat.look.confirm_upgrade ([#463](https://github.com/weechat/weechat/issues/463))\n- core: add signal \"signal_sighup\"\n- core: allow `Ctrl`+`c` to exit WeeChat when the passphrase is asked on startup ([#452](https://github.com/weechat/weechat/issues/452))\n- core: allow pointer as list name in evaluation of hdata ([#450](https://github.com/weechat/weechat/issues/450))\n- api: add support of evaluated sub-strings and current date/time in function string_eval_expression and command `/eval`\n- api: add function string_eval_path_home\n- alias: add options `add`, `addcompletion` and `del` in command `/alias`, remove command `/unalias` ([#458](https://github.com/weechat/weechat/issues/458))\n- irc: add option irc.network.channel_encode ([#218](https://github.com/weechat/weechat/issues/218), [#482](https://github.com/weechat/weechat/issues/482))\n- irc: add option irc.color.topic_current ([#475](https://github.com/weechat/weechat/issues/475))\n- irc: evaluate content of server option \"nicks\"\n- logger: evaluate content of option logger.file.path ([#388](https://github.com/weechat/weechat/issues/388))\n- script: rename option script.scripts.dir to script.scripts.path, evaluate content of option ([#388](https://github.com/weechat/weechat/issues/388))\n- relay: display value of HTTP header \"X-Real-IP\" for websocket connections ([#440](https://github.com/weechat/weechat/issues/440))\n- xfer: evaluate content of options xfer.file.download_path and xfer.file.upload_path ([#388](https://github.com/weechat/weechat/issues/388))\n\n### Bug fixes\n\n- core: flush stdout/stderr after sending text directly on them (fix corrupted data sent to hook_process callback) ([#442](https://github.com/weechat/weechat/issues/442))\n- core: allow execution of command `/input return` on a buffer which is not displayed in a window\n- core: allow jump from current to previous buffer with default keys `Alt`+`j`, `01`…`99` ([#466](https://github.com/weechat/weechat/issues/466))\n- core: fix crash if a file descriptor used in hook_fd is too high (> 1024 on Linux/BSD) ([#465](https://github.com/weechat/weechat/issues/465))\n- core: fix display of invalid UTF-8 chars in bars\n- core: fix bar item \"scroll\" after `/buffer clear` ([#448](https://github.com/weechat/weechat/issues/448))\n- core: fix display of time in bare display when option weechat.look.buffer_time_format is set to empty string ([#441](https://github.com/weechat/weechat/issues/441))\n- api: add missing function infolist_search_var in script API ([#484](https://github.com/weechat/weechat/issues/484))\n- api: add missing function hook_completion_get_string in script API ([#484](https://github.com/weechat/weechat/issues/484))\n- api: fix type of value returned by functions strcasestr, utf8_prev_char, utf8_next_char, utf8_add_offset and util_get_time_string\n- api: fix type of value returned by function strcasestr\n- fifo: fix send error on Cygwin when something is received in the pipe ([#436](https://github.com/weechat/weechat/issues/436))\n- irc: fix update of lag item when the server lag changes\n- irc: do not allow command `/query` with a channel name ([#459](https://github.com/weechat/weechat/issues/459))\n- irc: decode/encode only text in IRC messages and not the headers ([bug #29886](https://savannah.nongnu.org/bugs/?29886), [#218](https://github.com/weechat/weechat/issues/218), [#451](https://github.com/weechat/weechat/issues/451))\n- irc: fix crash with commands `/allchan`, `/allpv` and `/allserv` if the executed command closes buffers ([#445](https://github.com/weechat/weechat/issues/445))\n- irc: do not open auto-joined channels buffers when option \"-nojoin\" is used in command `/connect` (even if the option irc.look.buffer_open_before_autojoin is on)\n- irc: fix errors displayed on WHOX messages received ([#376](https://github.com/weechat/weechat/issues/376))\n- xfer: fix crash if the DCC file socket number is too high (> 1024 on Linux/BSD) ([#465](https://github.com/weechat/weechat/issues/465))\n- xfer: fix parsing of DCC chat messages (handle \"\\r\\n\" at the end of messages) ([#425](https://github.com/weechat/weechat/issues/425), [#426](https://github.com/weechat/weechat/issues/426))\n\n### Documentation\n\n- replace PREFIX with CMAKE_INSTALL_PREFIX in CMake instructions ([#354](https://github.com/weechat/weechat/issues/354))\n\n### Build\n\n- lua: add detection of Lua 5.3\n- ruby: add detection of Ruby 2.2\n\n## Version 1.2 (2015-05-10)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add signals \"signal_sigterm\" and \"signal_sigquit\" ([#114](https://github.com/weechat/weechat/issues/114))\n- core: use environment variable WEECHAT_HOME on startup ([#391](https://github.com/weechat/weechat/issues/391))\n- core: add options weechat.look.quote_{nick_prefix|nick_suffix|time_format} to customize quoted messages in cursor mode ([#403](https://github.com/weechat/weechat/issues/403))\n- core: add a welcome message on first WeeChat run ([#318](https://github.com/weechat/weechat/issues/318))\n- core: add options weechat.look.word_chars_{highlight|input} ([#55](https://github.com/weechat/weechat/issues/55), [task #9459](https://savannah.nongnu.org/task/?9459))\n- core: remove WeeChat version from config files ([#407](https://github.com/weechat/weechat/issues/407))\n- core: display a warning on startup if the locale cannot be set ([#373](https://github.com/weechat/weechat/issues/373))\n- core: allow \"*\" as plugin name in command `/plugin reload` to reload all plugins with options\n- core: add option `-s` in command `/eval` to split expression before evaluating it (no more split by default) ([#324](https://github.com/weechat/weechat/issues/324))\n- core: add priority in plugins to initialize them in order\n- api: add support of environment variables in function string_eval_expression and command `/eval`\n- api: add support of full color option name in functions color and string_eval_expression and in command `/eval`\n- api: add \"_chat_line\" (line pointer) in hashtable of hook_focus\n- irc: add support of \"account-notify\" capability ([#11](https://github.com/weechat/weechat/issues/11), [#246](https://github.com/weechat/weechat/issues/246))\n- irc: add support of \"ecdsa-nist256p-challenge\" SASL mechanism ([#251](https://github.com/weechat/weechat/issues/251))\n- irc: display a warning when the option irc.look.display_away is set to \"channel\"\n- irc: optimize search of a nick in nicklist (up to 3x faster)\n- irc: add support of SHA-256 and SHA-512 algorithms in server option \"ssl_fingerprint\" ([#281](https://github.com/weechat/weechat/issues/281))\n- irc: add option `-noswitch` in command `/query` ([#394](https://github.com/weechat/weechat/issues/394))\n- irc: format message 008 (RPL_SNOMASK) ([#144](https://github.com/weechat/weechat/issues/144))\n- irc: remove server \"freenode\" from default config file ([#309](https://github.com/weechat/weechat/issues/309))\n- javascript: new script plugin for JavaScript\n\n### Bug fixes\n\n- core: add missing completions in command `/input`\n- guile: fix value returned in case of error in functions: config_option_reset, config_color, config_color_default, config_write, config_read, config_reload, hook_command, buffer_string_replace_local_var, command\n- irc: fix color of new nick in nick changes messages when option irc.look.color_nicks_in_server_messages is off\n- irc: fix crash when setting an invalid regex with `/list -re` during a `/list` server response ([#412](https://github.com/weechat/weechat/issues/412))\n- irc: fix display of PART messages on channels with +a (anonymous flag) ([#396](https://github.com/weechat/weechat/issues/396))\n- irc: remove useless rename of channel buffer on JOIN received with different case ([#336](https://github.com/weechat/weechat/issues/336))\n- irc: fix completion of commands `/allchan` and `/allpv`\n- lua: fix wrong argument usage in functions nicklist_remove_group, nicklist_remove_nick and nicklist_remove_all ([#346](https://github.com/weechat/weechat/issues/346))\n- lua: fix value returned in case of error in functions: config_option_reset, config_string, config_string_default, config_color, config_color_default, config_write, config_read, config_reload, hook_modifier_exec, buffer_string_replace_local_var, nicklist_group_set, nicklist_nick_set, command, upgrade_read, upgrade_close\n- relay: fix up/down keys on relay buffer ([#335](https://github.com/weechat/weechat/issues/335))\n- relay: remove v4-mapped addresses in `/help relay.network.allowed_ips` ([#325](https://github.com/weechat/weechat/issues/325))\n- perl: fix value returned in case of error in functions: config_option_reset, config_color, config_color_default, config_write, config_read, config_reload, buffer_string_replace_local_var, command\n- python: fix value returned in case of error in functions: config_option_reset, config_color, config_color_default, config_write, config_read, config_reload, config_is_set_plugin, buffer_get_string, buffer_string_replace_local_var, nicklist_group_get_string, nicklist_nick_get_string, command, hdata_time\n- python: fix name of function \"bar_update\" in case of error\n- python: fix restore of old interpreter when a function is not found in the script\n- ruby: fix crash on `/plugin reload` ([#364](https://github.com/weechat/weechat/issues/364))\n- ruby: fix value returned in case of error in functions: config_option_reset, config_color, config_color_default, config_write, config_read, config_reload, buffer_string_replace_local_var, command\n- script: fix state of script plugins when list of scripts has not been downloaded\n- scripts: reset current script pointer when load of script fails in python/perl/ruby/lua/tcl plugins\n- scripts: fix return code of function bar_set in python/perl/ruby/lua/tcl/guile plugins\n- scripts: fix type of value returned by function hdata_time (from string to long integer) in perl/ruby/lua/tcl/guile plugins\n- tcl: fix value returned in case of error in functions: mkdir_home, mkdir, mkdir_parents, config_option_reset, config_color, config_color_default, config_write, config_read, config_reload, print_date_tags, buffer_string_replace_local_var, command, infolist_new_item, infolist_new_var_integer, infolist_new_var_string, infolist_new_var_pointer, infolist_new_var_time, upgrade_write_object, upgrade_read, upgrade_close\n- trigger: do not hook anything if the trigger is disabled ([#405](https://github.com/weechat/weechat/issues/405))\n\n### Documentation\n\n- add Russian man page\n\n## Version 1.1.1 (2015-01-25)\n\n### Bug fixes\n\n- core: fix crash when a root bar has conditions different from active/inactive/nicklist ([#317](https://github.com/weechat/weechat/issues/317))\n- irc: don't close channel buffer on second `/part` when option irc.look.part_closes_buffer is off ([#313](https://github.com/weechat/weechat/issues/313))\n- irc: fix `/join` on a channel buffer opened with autojoin but which failed to join\n- irc: send QUIT to server and no PART for channels when the server buffer is closed ([#294](https://github.com/weechat/weechat/issues/294))\n- irc: fix order of channel buffers opened when option irc.look.server_buffer is set to \"independent\", irc.look.buffer_open_before_autojoin to \"on\" and irc.look.new_channel_position to \"near_server\" ([#303](https://github.com/weechat/weechat/issues/303))\n- irc: fix crash in buffer close when server name is the same as a channel name ([#305](https://github.com/weechat/weechat/issues/305))\n\n### Build\n\n- core: fix random error when creating symbolic link weechat-curses on make install with CMake ([bug #40313](https://savannah.nongnu.org/bugs/?40313))\n\n## Version 1.1 (2015-01-11)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add option weechat.completion.command_inline ([task #12491](https://savannah.nongnu.org/task/?12491))\n- core: add bar item \"mouse_status\", new options weechat.look.item_mouse_status and weechat.color.status_mouse ([#247](https://github.com/weechat/weechat/issues/247))\n- core: add signals \"mouse_enabled\" and \"mouse_disabled\" ([#244](https://github.com/weechat/weechat/issues/244))\n- core: add hide of chars in string in evaluation of expressions\n- core: add arraylists, improve speed of completions (about 50x faster)\n- core: allow incomplete commands if unambiguous, new option weechat.look.command_incomplete ([task #5419](https://savannah.nongnu.org/task/?5419))\n- core: check bar conditions in root bars and on each update of a bar item\n- core: fully evaluate commands bound to keys in cursor and mouse contexts\n- core: move bar item \"scroll\" between buffer name and lag in default bar items of status bar\n- api: add regex replace feature in function string_eval_expression\n- api: send value returned by command callback in function command, remove WeeChat error after command callback if return code is WEECHAT_RC_ERROR\n- api: use microseconds instead of milliseconds in functions util_timeval_diff and util_timeval_add\n- irc: add option `reorder` in command `/server` ([#229](https://github.com/weechat/weechat/issues/229))\n- irc: open channel buffers before the JOIN is received from server (autojoin and manual joins), new options irc.look.buffer_open_before_{autojoin|join} ([#216](https://github.com/weechat/weechat/issues/216))\n- irc: add server option \"sasl_fail\" (continue/reconnect/disconnect if SASL fails) ([#265](https://github.com/weechat/weechat/issues/265), [task #12204](https://savannah.nongnu.org/task/?12204))\n- irc: add support for color codes 16-99 in IRC messages ([#228](https://github.com/weechat/weechat/issues/228)), add infolist \"irc_color_weechat\"\n- irc: add support of \"extended-join\" capability ([#143](https://github.com/weechat/weechat/issues/143), [#212](https://github.com/weechat/weechat/issues/212))\n- irc: display own nick changes in server buffer ([#188](https://github.com/weechat/weechat/issues/188))\n- irc: disable creation of temporary servers by default with command `/connect`, new option irc.look.temporary_servers\n- irc: disable SSLv3 by default in server option \"ssl_priorities\" ([#248](https://github.com/weechat/weechat/issues/248))\n- irc: automatically add current channel in command `/samode` ([#241](https://github.com/weechat/weechat/issues/241))\n- irc: add tag \"nick_xxx\" in invite messages\n- relay: add options `stop` and `restart` in command `/relay`\n- relay: add option relay.network.ssl_priorities ([#234](https://github.com/weechat/weechat/issues/234))\n- relay: add host in sender for IRC backlog PRIVMSG messages sent to clients\n- script: add option script.scripts.url_force_https ([#253](https://github.com/weechat/weechat/issues/253))\n- trigger: evaluate and replace regex groups at same time, new format for regex option in triggers (incompatible with version 1.0) ([#224](https://github.com/weechat/weechat/issues/224))\n- trigger: add option `restore` in command `/trigger`\n- trigger: add `${tg_displayed}` in conditions of default trigger \"beep\"\n\n### Bug fixes\n\n- core: fix display bug when scrolling in buffer on a filtered line ([#240](https://github.com/weechat/weechat/issues/240))\n- core: send mouse code only one time to terminal with command `/mouse enable|disable|toggle`\n- core: fix buffer property \"lines_hidden\" when merging buffers or when a line is removed from a buffer ([#226](https://github.com/weechat/weechat/issues/226))\n- core: display time in bare display only if option weechat.look.buffer_time_format is not an empty string\n- core: fix translation of message displayed after `/upgrade`\n- api: fix truncated process output in hook_process ([#266](https://github.com/weechat/weechat/issues/266))\n- api: fix crash when reading config options with NULL value ([#238](https://github.com/weechat/weechat/issues/238))\n- irc: defer the auto-connection to servers with a timer ([#279](https://github.com/weechat/weechat/issues/279), [task #13038](https://savannah.nongnu.org/task/?13038))\n- irc: add missing server options \"sasl_timeout\" and \"notify\" in output of `/server listfull`\n- irc: use option irc.look.nick_mode_empty to display nick prefix in bar item \"input_prompt\"\n- irc: remove IRC color codes from buffer title in channels ([#237](https://github.com/weechat/weechat/issues/237))\n- irc: fix completion of commands `/msg`, `/notice` and `/query`\n- irc: fix translation of CTCP PING reply ([#137](https://github.com/weechat/weechat/issues/137))\n- relay: wait for message CAP END before sending join of channels and backlog to the client ([#223](https://github.com/weechat/weechat/issues/223))\n- relay: send messages \"_buffer_localvar_*\" and \"_buffer_type_changed\" with sync \"buffers\" ([#191](https://github.com/weechat/weechat/issues/191))\n- relay: don't remove relay from config when the binding fails ([#225](https://github.com/weechat/weechat/issues/225))\n- relay: use comma separator in option relay.irc.backlog_tags, check the value of option when it is changed with `/set`\n- relay: remove \"::ffff:\" from IPv4-mapped IPv6 client address ([#111](https://github.com/weechat/weechat/issues/111))\n- trigger: fix memory leak when allocating a new trigger with several regex\n- xfer: fix freeze when accepting DCC ([#160](https://github.com/weechat/weechat/issues/160), [#174](https://github.com/weechat/weechat/issues/174))\n- xfer: bind to wildcard address when sending ([#173](https://github.com/weechat/weechat/issues/173))\n\n### Build\n\n- core: fix compilation of man pages with autotools in source directory\n- core: fix compilation of plugins with CMake ≥ 3.1 ([#287](https://github.com/weechat/weechat/issues/287))\n- lua: add detection of Lua 5.2\n- python: fix Python detection with Homebrew ([#217](https://github.com/weechat/weechat/issues/217))\n- tests: fix compilation of tests with clang ([#275](https://github.com/weechat/weechat/issues/275))\n\n## Version 1.0.1 (2014-09-28)\n\n### Bug fixes\n\n- core: fix crash on buffer close when option weechat.look.hotlist_remove is set to \"merged\" ([#199](https://github.com/weechat/weechat/issues/199))\n- core: fix highlight of IRC action messages when option irc.look.nick_mode is set to \"action\" or \"both\" ([#206](https://github.com/weechat/weechat/issues/206))\n- core: fix compilation of plugin API functions (macros) when compiler optimizations are enabled ([#200](https://github.com/weechat/weechat/issues/200))\n- core: fix window/buffer pointers used in command `/eval`\n- core: fix modifier \"weechat_print\": discard only one line when several lines are displayed in same message ([#171](https://github.com/weechat/weechat/issues/171))\n- api: fix bug in function hdata_move when absolute value of count is greater than 1\n- aspell: fix crash with command `/aspell addword` if no word is given ([#164](https://github.com/weechat/weechat/issues/164), [#165](https://github.com/weechat/weechat/issues/165))\n- irc: fix display of channel exception list (348) with 6 arguments (date missing)\n- irc: fix type of value stored in hashtable when joining a channel ([#211](https://github.com/weechat/weechat/issues/211))\n- relay: fix send of signals \"relay_client_xxx\" ([#214](https://github.com/weechat/weechat/issues/214))\n- script: fix crash on `/script update` if a script detail is displayed in buffer ([#177](https://github.com/weechat/weechat/issues/177))\n- trigger: do not allow any changes on a trigger when it is currently running ([#189](https://github.com/weechat/weechat/issues/189))\n- trigger: fix regex used in default triggers to hide passwords (\"\\S\" is not supported on *BSD) ([#172](https://github.com/weechat/weechat/issues/172))\n\n### Tests\n\n- core: fix memory leak in tests launcher\n\n### Build\n\n- aspell: fix compilation with Enchant < 1.6.0 ([#192](https://github.com/weechat/weechat/issues/192))\n- guile: fix compilation with Guile < 2.0.4 ([#198](https://github.com/weechat/weechat/issues/198))\n- perl: fix detection of Perl ≥ 5.20 with autotools\n- tests: fix build of tests when the build directory is outside source tree ([#178](https://github.com/weechat/weechat/issues/178))\n\n## Version 1.0 (2014-08-15)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: display a warning on startup if $TERM does not start with \"screen\" under Screen/Tmux\n- core: add option weechat.color.status_nicklist_count ([#109](https://github.com/weechat/weechat/issues/109), [#110](https://github.com/weechat/weechat/issues/110))\n- core: add option `env` in command `/set` (manage environment variables)\n- core: add bar item \"buffer_short_name\" ([task #10882](https://savannah.nongnu.org/task/?10882))\n- core: add option `send` in command `/input` (send text to a buffer)\n- core: add support of negated tags in filters (with \"!\") ([#72](https://github.com/weechat/weechat/issues/72), [#74](https://github.com/weechat/weechat/issues/74))\n- core: add hidden buffers, add options hide/unhide in command `/buffer`\n- core: add default key `Alt`+`-` (toggle filters in current buffer) ([#17](https://github.com/weechat/weechat/issues/17))\n- core: add non-active merged buffers with activity in hotlist (if another merged buffer is zoomed) ([task #12845](https://savannah.nongnu.org/task/?12845))\n- core: add text search in buffers with free content ([task #13051](https://savannah.nongnu.org/task/?13051))\n- core: add buffer property \"clear\"\n- core: add option weechat.look.hotlist_add_conditions, remove option weechat.look.hotlist_add_buffer_if_away\n- core: add option weechat.look.hotlist_remove ([#99](https://github.com/weechat/weechat/issues/99))\n- core: add options `-beep` and `-current` in command `/print`\n- core: add bare display mode for easy text selection and click on URLs, new key: `Alt`+`l` (lower `L`), new option \"bare\" in command `/window`, new options: weechat.look.bare_display_exit_on_input and weechat.look.bare_display_time_format\n- core: add signals \"key_combo_{default|search|cursor}\"\n- core: add terabyte unit for size displayed\n- core: display a warning in case of inconsistency between the options weechat.look.save_{config|layout}_on_exit\n- core: add option `-mask` in command `/unset` ([#112](https://github.com/weechat/weechat/issues/112))\n- core: set option weechat.look.buffer_search_where to prefix_message by default\n- core: mute all buffers by default in command `/mute` (replace option -all by -core)\n- api: allow value \"-1\" for property \"hotlist\" in function buffer_set (to remove a buffer from hotlist)\n- api: add option \"buffer_flush\" in function hook_process_hashtable\n- api: add support of case-insensitive search and search by buffer full name in function buffer_search ([bug #34318](https://savannah.nongnu.org/bugs/?34318))\n- api: add option \"detached\" in function hook_process_hashtable\n- api: add option \"signal\" in function hook_set to send a signal to the child process\n- api: add support of nested variables in function string_eval_expression and command `/eval` ([#35](https://github.com/weechat/weechat/issues/35))\n- api: add support of escaped strings with format `${esc:xxx}` or `${\\xxx}` in function string_eval_expression and command `/eval`\n- api: add functions hashtable_dup, string_replace_regex, string_split_shell, string_convert_escaped_chars\n- api: add integer return code for functions hook_{signal|hsignal}_send\n- api: add argument \"flags\" in function hdata_new_list\n- api: allow wildcard \"*\" inside the mask in function string_match\n- api: allow negative value for y in function printf_y\n- alias: add default alias `msgbuf` (send text to a buffer)\n- exec: add exec plugin: new command `/exec` and file exec.conf\n- irc: add bar item \"irc_nick_modes\" ([#71](https://github.com/weechat/weechat/issues/71))\n- irc: add support of message 324 (channel modes) in option irc.look.display_join_message ([#75](https://github.com/weechat/weechat/issues/75))\n- irc: add option irc.look.join_auto_add_chantype ([#65](https://github.com/weechat/weechat/issues/65))\n- irc: add tag with host (\"host_xxx\") in IRC messages displayed ([task #12018](https://savannah.nongnu.org/task/?12018))\n- irc: add option irc.color.item_nick_modes ([#47](https://github.com/weechat/weechat/issues/47))\n- irc: add support of \"away-notify\" capability ([#12](https://github.com/weechat/weechat/issues/12))\n- irc: add command `/remove` ([#91](https://github.com/weechat/weechat/issues/91))\n- irc: add command `/unquiet` ([#36](https://github.com/weechat/weechat/issues/36))\n- irc: add command `/allpv` ([task #13111](https://savannah.nongnu.org/task/?13111))\n- irc: display locally away status changes in private buffers (in addition to channels) ([#117](https://github.com/weechat/weechat/issues/117))\n- irc: allow many fingerprints in server option ssl_fingerprint ([#49](https://github.com/weechat/weechat/issues/49))\n- irc: rename option irc.look.item_channel_modes_hide_key to irc.look.item_channel_modes_hide_args, value is now a string ([task #12070](https://savannah.nongnu.org/task/?12070), [task #12163](https://savannah.nongnu.org/task/?12163), [#48](https://github.com/weechat/weechat/issues/48))\n- irc: add value \"+\" for option irc.look.smart_filter_mode to use modes from server prefixes (this is now the default value) ([#90](https://github.com/weechat/weechat/issues/90))\n- irc: allow \"$ident\" in option irc.network.ban_mask_default ([#18](https://github.com/weechat/weechat/issues/18))\n- irc: evaluate content of server options \"username\" and \"realname\"\n- irc: set option irc.network.autoreconnect_delay_max to 600 by default, increase max value to 604800 seconds (7 days)\n- irc: set option irc.network.whois_double_nick to \"off\" by default\n- relay: add messages \"_buffer_cleared\", \"_buffer_hidden\" and \"_buffer_unhidden\"\n- relay: add info \"relay_client_count\" with optional status name as argument\n- relay: add signals \"relay_client_xxx\" for client status changes ([#2](https://github.com/weechat/weechat/issues/2))\n- relay: add option relay.network.clients_purge_delay\n- rmodifier: remove plugin (replaced by trigger)\n- script: set option script.scripts.cache_expire to 1440 by default\n- trigger: add trigger plugin: new command `/trigger` and file trigger.conf\n\n### Bug fixes\n\n- core: fix zero-length malloc of an hashtable item with type \"buffer\"\n- core: fix memory leak on `/upgrade` when file signature in upgrade file is invalid\n- core: fix memory leak in completion of config options values\n- core: fix memory leak when removing script files\n- core: fix result of hash function (in hashtables) on 32-bit systems\n- core: fix insert of mouse code in input line after a partial key combo ([#130](https://github.com/weechat/weechat/issues/130))\n- core: check code point value in UTF-8 check function ([#108](https://github.com/weechat/weechat/issues/108))\n- core: fix socks5 proxy for curl downloads ([#119](https://github.com/weechat/weechat/issues/119))\n- core: display curl error after a failed download\n- core: do not display content of passphrase on `/secure` buffer\n- core: fix potential memory leak with infolists not freed in plugins ([debian #751108](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=751108))\n- core: fix color display of last terminal color number + 1 ([#101](https://github.com/weechat/weechat/issues/101))\n- core: add option \"-buffer\" in command `/command` ([#67](https://github.com/weechat/weechat/issues/67))\n- core: fix restoration of core buffer properties after `/upgrade`\n- core: fix `/buffer clear` with a name (don't clear all merged buffers with same number)\n- core: fix evaluation of expression with regex: when a comparison char is in the regex and don't evaluate the regex itself ([#63](https://github.com/weechat/weechat/issues/63))\n- core: close .upgrade files before deleting them after `/upgrade`\n- core: fix refresh of bar item \"buffer_zoom\" on buffer switch\n- core: fix reset of attributes in bars when \"resetcolor\" is used ([#41](https://github.com/weechat/weechat/issues/41))\n- core: fix alignment of lines in merged buffers when options weechat.look.prefix_align and weechat.look.prefix_buffer_align are set to \"none\" ([#43](https://github.com/weechat/weechat/issues/43))\n- core: quit WeeChat on signal SIGHUP, remove signal \"signal_sighup\"\n- core: fix add of filter on macOS when regex for message is empty (filter regex ending with \"\\t\")\n- core: check validity of buffer pointer when data is sent to a buffer (command/text from user and API function command)\n- core: fix crash when buffer is closed during execution of multiple commands ([#27](https://github.com/weechat/weechat/issues/27))\n- core: fix compilation on SmartOS ([bug #40981](https://savannah.nongnu.org/bugs/?40981), [#23](https://github.com/weechat/weechat/issues/23))\n- core: add missing \\0 at the end of stderr buffer in function hook_process\n- core: fix highlight problem with \"(?-i)\" and upper case letters in option weechat.look.highlight ([#24](https://github.com/weechat/weechat/issues/24))\n- core: fix detection of terminated process in function hook_process\n- core: fix `/window scroll -N` on a buffer with free content\n- core: fix recursive calls to function eval_expression\n- core: save and restore mute state in command `/mute` ([bug #41748](https://savannah.nongnu.org/bugs/?41748))\n- core: fix memory leak when removing a hdata\n- core: fix memory leak in evaluation of sub-conditions\n- core: fix memory leak in function gui_key_add_to_infolist (in case of insufficient memory)\n- core: fix use of invalid pointer in function gui_bar_window_content_alloc (in case of insufficient memory)\n- core: fix uninitialized value in function string_decode_base64\n- core: fix memory leak and use of invalid pointer in split of string (in case of insufficient memory)\n- core: fix potential NULL pointer in function gui_color_emphasize\n- core: use same return code and message in all commands when arguments are wrong/missing\n- core: allow empty arguments for command `/print`\n- core: fix freeze/crash in GnuTLS ([bug #41576](https://savannah.nongnu.org/bugs/?41576))\n- api: fix function string_decode_base64\n- api: fix function string_format_size on 32-bit systems\n- api: change type of arguments displayed/highlight in hook_print callback from string to integer (in scripts)\n- alias: change default command for alias `/beep` to `/print -beep`\n- guile: fix module used after unload of a script\n- irc: fix memory leak in CTCP answer\n- irc: fix duplicate sender name in display of wallops ([#142](https://github.com/weechat/weechat/issues/142), [#145](https://github.com/weechat/weechat/issues/145))\n- irc: fix extract of channel in parser for JOIN/PART messages when there is a colon before the channel name ([#83](https://github.com/weechat/weechat/issues/83))\n- irc: fix duplicate sender name in display of notice ([#87](https://github.com/weechat/weechat/issues/87))\n- irc: fix refresh of buffer name in bar items after join/part/kick/kill ([#86](https://github.com/weechat/weechat/issues/86))\n- irc: display message 936 (censored word) on channel instead of server buffer\n- irc: make reason optional in command `/kill`\n- irc: add alias `whois` for target buffer of messages 401/402 ([#54](https://github.com/weechat/weechat/issues/54))\n- irc: fix truncated read on socket with SSL ([bug #41558](https://savannah.nongnu.org/bugs/?41558))\n- irc: display output of CAP LIST in server buffer\n- irc: fix colors in message with CTCP reply sent to another user\n- irc: fix read of MODES server value when in commands `/op`, `/deop`, `/voice`, `/devoice`, `/halfop`, `/dehalfop`\n- irc: fix parsing of nick in host when \"!\" is not found ([bug #41640](https://savannah.nongnu.org/bugs/?41640))\n- lua: fix interpreter used after unload of a script\n- perl: fix context used after unload of a script\n- python: fix read of return value for callbacks returning an integer in Python 2.x ([#125](https://github.com/weechat/weechat/issues/125))\n- python: fix interpreter used after unload of a script\n- relay: fix memory leak during handshake on websocket\n- relay: fix memory leak when receiving commands from client (weechat protocol)\n- relay: fix crash when an IRC \"MODE\" command is received from client without arguments\n- relay: fix number of bytes sent/received on 32-bit systems\n- relay: fix crash when closing relay buffers ([#57](https://github.com/weechat/weechat/issues/57), [#78](https://github.com/weechat/weechat/issues/78))\n- relay: check pointers received in hdata command to prevent crashes with bad pointers (WeeChat protocol)\n- relay: remove warning on `/reload` of relay.conf when ports are defined\n- relay: fix client disconnection on empty websocket frames received (PONG)\n- relay: add support of Internet Explorer websocket ([#73](https://github.com/weechat/weechat/issues/73))\n- relay: fix crash on `/upgrade` received from a client (weechat protocol)\n- relay: fix freeze after `/upgrade` when many disconnected clients still exist\n- relay: fix NULL pointer when reading buffer lines for irc backlog\n- ruby: fix crash when trying to load a directory with `/ruby load`\n- script: fix display of curl errors\n- script: fix scroll on script buffer in the detailed view of script ([#6](https://github.com/weechat/weechat/issues/6))\n- scripts: fix crash when a signal is received with type \"int\" and NULL pointer in signal_data\n- xfer: fix problem with option xfer.file.auto_accept_nicks when the server name contains dots\n- xfer: fix freeze/problems when sending empty files with DCC ([#53](https://github.com/weechat/weechat/issues/53))\n- xfer: fix connection to remote host in DCC receive on macOS ([#25](https://github.com/weechat/weechat/issues/25))\n- xfer: remove bind on xfer.network.own_ip ([#5](https://github.com/weechat/weechat/issues/5))\n\n### Build\n\n- core: fix CMake warning CMP0007 on \"make uninstall\" ([bug #41528](https://savannah.nongnu.org/bugs/?41528))\n- core: use glibtoolize on macOS (autotools) ([#22](https://github.com/weechat/weechat/issues/22))\n- ruby: add detection of Ruby 2.1\n\n### Tests\n\n- core: add unit tests using CppUTest ([#104](https://github.com/weechat/weechat/issues/104))\n\n## Version 0.4.3 (2014-02-09)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add signals \"signal_sighup\" and \"signal_sigwinch\" (terminal resized)\n- core: add command `/print`, add support of more escaped chars in command `/input insert`\n- core: add option weechat.look.tab_width\n- core: add completion \"plugins_installed\"\n- core: add option weechat.look.window_auto_zoom, disable automatic zoom by default when terminal becomes too small for windows\n- core: use \"+\" separator to make a logical \"and\" between tags in command `/filter`, option weechat.look.highlight_tags and buffer property \"highlight_tags\"\n- core: add options weechat.look.buffer_auto_renumber and weechat.look.buffer_position, add option `renumber` in command `/buffer`, add bar item \"buffer_last_number\" ([task #12766](https://savannah.nongnu.org/task/?12766))\n- core: add signal \"buffer_cleared\"\n- core: add buffer property \"day_change\" to hide messages for the day change in specific buffers\n- core: add option \"libs\" in command `/debug`\n- core: add infos \"term_width\" and \"term_height\"\n- core: add bar item \"buffer_zoom\", add signals \"buffer_{zoomed|unzoomed}\" ([patch #8204](https://savannah.nongnu.org/patch/?8204))\n- core: add default keys `Alt`+`Home` / `Alt`+`End` (`meta2-1;3H` / `meta2-1;3F`) and `Alt`+`F11` / `Alt`+`F12` (`meta2-23;3~` / `meta2-24;3~`) for xterm\n- core: add support of italic text (requires ncurses ≥ 5.9 patch 20130831)\n- core: add options to customize default text search in buffers: weechat.look.buffer_search_{case_sensitive|force_default|regex|where}\n- core: add support of UTF-8 chars in horizontal/vertical separators (options weechat.look.separator_{horizontal|vertical})\n- core: add support of logical and/or for argument \"tags\" in function hook_print\n- core: rename buffer property \"highlight_tags\" to \"highlight_tags_restrict\", new behavior for buffer property \"highlight_tags\" (force highlight on tags), rename option irc.look.highlight_tags to irc.look.highlight_tags_restrict\n- core: rename options save/reset to store/del in command `/layout`\n- core: replace default key `Ctrl`+`c`, `r` by `Ctrl`+`c`, `v` for reverse video in messages\n- core: replace default key `Ctrl`+`c`, `u` by `Ctrl`+`c`, `_` for underlined text in messages\n- core: rename option weechat.look.set_title to weechat.look.window_title, value is now a string (evaluated)\n- core: set option weechat.look.paste_bracketed to \"on\" by default\n- core: use one date format when day changes from day to day+1\n- api: add function infolist_search_var\n- api: add stdin options in functions hook_process_hashtable and hook_set to send data on stdin of child process, add function hook_set in script API ([task #10847](https://savannah.nongnu.org/task/?10847), [task #13031](https://savannah.nongnu.org/task/?13031))\n- api: add hdata \"buffer_visited\"\n- api: add support of infos with format `${info:name,arguments}` in function string_eval_expression and command `/eval`\n- api: add support for C++ plugins\n- alias: add default alias `/beep` to `/print -stderr \\a`\n- irc: add server option \"ssl_fingerprint\" ([task #12724](https://savannah.nongnu.org/task/?12724))\n- irc: add option irc.look.smart_filter_mode ([task #12499](https://savannah.nongnu.org/task/?12499))\n- irc: add option irc.network.ban_mask_default ([bug #26571](https://savannah.nongnu.org/bugs/?26571))\n- irc: add option irc.network.lag_max\n- irc: add option irc.look.notice_welcome_tags\n- irc: add server option \"default_msg_kick\" to customize default kick/kickban message ([task #12777](https://savannah.nongnu.org/task/?12777))\n- irc: use MONITOR instead of ISON for `/notify` when it is available on server ([task #11477](https://savannah.nongnu.org/task/?11477))\n- relay: send backlog for irc private buffers\n- xfer: add support of IPv6 for DCC chat/file ([patch #7992](https://savannah.nongnu.org/patch/?7992))\n- xfer: add option xfer.file.auto_check_crc32 ([patch #7963](https://savannah.nongnu.org/patch/?7963))\n\n### Bug fixes\n\n- core: fix hotlist problems after apply of a layout ([bug #41481](https://savannah.nongnu.org/bugs/?41481))\n- core: fix crash when creating two bars with same name but different case ([bug #41418](https://savannah.nongnu.org/bugs/?41418))\n- core: fix display of read marker when all buffer lines are unread and that option weechat.look.read_marker_always_show is on\n- core: fix memory leak in regex matching when evaluating expression\n- core: fix crash in `/eval` when config option has a NULL value\n- core: fix crash with hdata_update on shared strings, add hdata type \"shared_string\" ([bug #41104](https://savannah.nongnu.org/bugs/?41104))\n- core: fix text emphasis with wide chars on screen like Japanese ([patch #8253](https://savannah.nongnu.org/patch/?8253))\n- core: remove option on `/unset` of plugin description option (plugins.desc.xxx) ([bug #40768](https://savannah.nongnu.org/bugs/?40768))\n- core: fix random crash when closing a buffer\n- core: fix crash on `/buffer close core.weechat`\n- core: apply color attributes when clearing a window ([patch #8236](https://savannah.nongnu.org/patch/?8236))\n- core: fix truncated text when pasting several long lines ([bug #40210](https://savannah.nongnu.org/bugs/?40210))\n- core: create .conf file with default options only if the file does not exist (and not on read error with existing file)\n- core: fix highlight on action messages: skip the nick at beginning to prevent highlight on it ([bug #40516](https://savannah.nongnu.org/bugs/?40516))\n- core: fix bind of keys in cursor/mouse context when key starts with \"@\" (remove the warning about unsafe key)\n- core: fix truncated prefix when filters are toggled ([bug #40204](https://savannah.nongnu.org/bugs/?40204))\n- api: fix read of arrays in hdata functions hdata_<type> ([bug #40354](https://savannah.nongnu.org/bugs/?40354))\n- aspell: fix detection of nicks with non-alphanumeric chars\n- guile: disable guile gmp allocator (fix crash on unload of relay plugin) ([bug #40628](https://savannah.nongnu.org/bugs/?40628))\n- irc: clear the GnuTLS session in all cases after SSL connection error\n- irc: do not display names by default when joining a channel ([task #13045](https://savannah.nongnu.org/task/?13045))\n- irc: display PONG answer when resulting from manual `/ping` command\n- irc: fix time parsed in tag of messages on Cygwin\n- irc: use statusmsg from message 005 to check prefix char in status notices/messages\n- irc: remove display of channel in channel notices, display \"PvNotice\" for channel welcome notices\n- irc: fix ignore on a host without nick\n- irc: use color code 0x1F (`ctrl-_`) for underlined text in input line (same code as messages) ([bug #40756](https://savannah.nongnu.org/bugs/?40756))\n- irc: use color code 0x16 (`ctrl-v`) for reverse video in messages\n- irc: use option irc.network.colors_send instead of irc.network.colors_receive when displaying messages sent by commands `/away`, `/me`, `/msg`, `/notice`, `/query`\n- irc: fix memory leak when checking the value of ssl_priorities option in servers\n- irc: fix memory leak when a channel is deleted\n- irc: fix groups in channel nicklist when reconnecting to a server that supports more nick prefixes than the previously connected server\n- irc: fix auto-switch to channel buffer when doing `/join channel` (without \"#\")\n- logger: fix memory leaks in backlog\n- logger: replace backslashes in name by logger replacement char under Cygwin ([bug #41207](https://savannah.nongnu.org/bugs/?41207))\n- lua: fix crash on calls to callbacks during load of script\n- python: fix load of scripts with Python ≥ 3.3\n- relay: fix memory leak on unload of relay plugin\n- ruby: fix ruby init with Ruby ≥ 2.0 ([bug #41115](https://savannah.nongnu.org/bugs/?41115))\n- scripts: fix script interpreter used after register during load of script in python/perl/ruby/lua/guile plugins ([bug #41345](https://savannah.nongnu.org/bugs/?41345))\n- xfer: use same infolist for hook and signals ([patch #7974](https://savannah.nongnu.org/patch/?7974))\n\n### Documentation\n\n- add French developer's guide and relay protocol\n- add Japanese plugin API reference and developer's guide\n- add Polish man page and user's guide\n\n### Build\n\n- core: fix installation of weechat-plugin.h with autotools ([patch #8305](https://savannah.nongnu.org/patch/?8305))\n- core: fix compilation on Android ([bug #41420](https://savannah.nongnu.org/bugs/?41420), [patch #8301](https://savannah.nongnu.org/patch/?8301), [bug #41434](https://savannah.nongnu.org/bugs/?41434))\n- lua: fix detection of Lua 5.2 in autotools ([patch #8270](https://savannah.nongnu.org/patch/?8270))\n- ruby: add detection and fix compilation with Ruby 2.0 ([patch #8209](https://savannah.nongnu.org/patch/?8209))\n\n## Version 0.4.2 (2013-10-06)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: display day change message dynamically (do not store it as a line in buffer), split option weechat.look.day_change_time_format into two options weechat.look.day_change_message_{1date|2dates}, new option weechat.color.chat_day_change ([task #12775](https://savannah.nongnu.org/task/?12775))\n- core: add syntax \"@buffer:item\" in bar items to force the buffer used when displaying the bar item ([task #12717](https://savannah.nongnu.org/task/?12717))\n- core: add search of regular expression in buffer, don't reset search type on a new search, select where to search (messages/prefixes), add keys in search context: `Alt`+`c` (case (in)sensitive search), `Tab` (search in messages/prefixes)\n- core: add text emphasis in messages when searching text in buffer, new options: weechat.look.emphasized_attributes, weechat.color.emphasized, weechat.color.emphasized_bg\n- core: add secured data (encryption of passwords or private data): add new command `/secure` and new file sec.conf ([task #7395](https://savannah.nongnu.org/task/?7395))\n- core: rename binary and man page from \"weechat-curses\" to \"weechat\" ([task #11027](https://savannah.nongnu.org/task/?11027))\n- core: add option `-o` in command `/color`\n- core: add option `scroll_beyond_end` for command `/window` ([task #6745](https://savannah.nongnu.org/task/?6745))\n- core: add options weechat.look.hotlist_prefix and weechat.look.hotlist_suffix ([task #12730](https://savannah.nongnu.org/task/?12730))\n- core: add option weechat.look.key_bind_safe\n- core: add option weechat.network.proxy_curl ([task #12651](https://savannah.nongnu.org/task/?12651))\n- core: add \"proxy\" infolist and hdata\n- core: add infolist \"layout\" and hdata \"layout\", \"layout_buffer\" and \"layout_window\"\n- core: reduce memory used by using shared strings for nicklist and lines in buffers\n- core: change color format for options weechat.look.buffer_time_format and weechat.look.prefix_{action|error|join|network|quit} from `${xxx}` to `${color:xxx}`\n- core: optimize the removal of lines in buffers (a lot faster to clear/close buffers with lot of lines)\n- core: set options weechat.look.color_inactive_{buffer|window} to \"on\" by default\n- api: return hashtable item pointer in functions hashtable_set and hashtable_set_with_size\n- api: add \"callback_free_key\" in hashtable\n- api: add support of colors with format `${color:xxx}` in function string_eval_expression and command `/eval`\n- api: add argument \"options\" in function string_eval_expression, add option `-c` in command `/eval` (to evaluate a condition)\n- api: add new function strlen_screen\n- aspell: rename option aspell.look.color to aspell.color.misspelled, add option aspell.color.suggestions\n- aspell: add support of enchant library ([patch #6858](https://savannah.nongnu.org/patch/?6858))\n- irc: add option irc.look.notice_welcome_redirect to automatically redirect channel welcome notices to the channel buffer\n- irc: add support of wildcards in commands (de)op/halfop/voice, split IRC message sent if number of nicks is greater than server MODES (from message 005) ([task #9221](https://savannah.nongnu.org/task/?9221))\n- irc: add option irc.look.pv_tags\n- irc: add support of special variables $nick/$channel/$server in commands `/allchan` and `/allserv`\n- irc: add option irc.look.nick_color_hash: hash algorithm to find nick color ([patch #8062](https://savannah.nongnu.org/patch/?8062))\n- logger: add option `flush` in command `/logger`\n- plugins: remove the demo plugin\n- relay: add command \"ping\" in weechat protocol ([task #12689](https://savannah.nongnu.org/task/?12689))\n- rmodifier: add option \"missing\" in command `/rmodifier`\n- script: add info about things defined by script (like commands, options, ...) in the detailed view of script (`/script show`)\n- scripts: add hdata with script callback\n- xfer: add option xfer.look.pv_tags\n\n### Bug fixes\n\n- core: clear whole line before displaying content instead of clearing after the end of content ([bug #40115](https://savannah.nongnu.org/bugs/?40115))\n- core: fix time displayed in status bar (it was one second late) ([bug #40097](https://savannah.nongnu.org/bugs/?40097))\n- core: fix memory leak on unhook of a print hook (if using tags)\n- core: fix computation of columns in output of `/help` (take care about size of time/buffer/prefix)\n- core: fix random crash on `/buffer close` with a buffer number (or a range of buffers)\n- core: fix priority of logical operators in evaluation of expression (AND takes precedence over the OR) and first evaluate sub-expressions between parentheses\n- core: remove gap after read marker line when there is no bar on the right ([bug #39548](https://savannah.nongnu.org/bugs/?39548))\n- core: use \"/dev/null\" for stdin in hook_process instead of closing stdin ([bug #39538](https://savannah.nongnu.org/bugs/?39538))\n- core: fix char displayed at the intersection of three windows ([bug #39331](https://savannah.nongnu.org/bugs/?39331))\n- core: fix crash in evaluation of expression when reading a string in hdata with a NULL value ([bug #39419](https://savannah.nongnu.org/bugs/?39419))\n- core: fix display bugs with some UTF-8 chars that truncates messages displayed (for example U+26C4) ([bug #39201](https://savannah.nongnu.org/bugs/?39201))\n- core: remove extra space after empty prefix (when prefix for action, error, join, network or quit is set to empty string) ([bug #39218](https://savannah.nongnu.org/bugs/?39218))\n- core: fix random crash on mouse actions ([bug #39094](https://savannah.nongnu.org/bugs/?39094))\n- core: fix line alignment when option weechat.look.buffer_time_format is set to empty string\n- api: change type of hashtable key hash to unsigned long\n- api: use pointer for infolist \"hook\" to return only one hook\n- aspell: fix detection of word start/end when there are apostrophes or minus chars before/after word\n- irc: fix reconnection to server using IPv6 ([bug #38819](https://savannah.nongnu.org/bugs/?38819), [bug #40166](https://savannah.nongnu.org/bugs/?40166))\n- irc: replace default prefix modes \"qaohvu\" by the standard ones \"ov\" when PREFIX is not sent by server ([bug #39802](https://savannah.nongnu.org/bugs/?39802))\n- irc: use 6697 as default port for SSL servers created with URL \"ircs://\" ([bug #39621](https://savannah.nongnu.org/bugs/?39621))\n- irc: display number of ops/halfops/voices on channel join only for supported modes on server ([bug #39582](https://savannah.nongnu.org/bugs/?39582))\n- irc: fix self nick color in server messages after nick is changed with `/nick` ([bug #39415](https://savannah.nongnu.org/bugs/?39415))\n- irc: fix error message on `/invite` without arguments ([bug #39272](https://savannah.nongnu.org/bugs/?39272))\n- irc: fix multiple nicks in command `/query` (separated by commas): open one buffer per nick\n- lua: fix interpreter used in API functions ([bug #39470](https://savannah.nongnu.org/bugs/?39470))\n- relay: fix decoding of websocket frames when there are multiple frames in a single message received (only the first one was decoded)\n- relay: fix binding to an IP address ([bug #39119](https://savannah.nongnu.org/bugs/?39119))\n\n### Documentation\n\n- update man page and add translations (in French, German, Italian, and Japanese)\n\n### Build\n\n- core: add CA_FILE option in CMake and configure to setup default value of option weechat.network.gnutls_ca_file (default is \"/etc/ssl/certs/ca-certificates.crt\") ([task #12725](https://savannah.nongnu.org/task/?12725))\n- core: disable build of doc by default, add CMake option \"ENABLE_MAN\" to compile man page (off by default)\n- xfer: fix compilation on OpenBSD ([bug #39071](https://savannah.nongnu.org/bugs/?39071))\n\n## Version 0.4.1 (2013-05-20)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: make nick prefix/suffix dynamic (not stored in the line): move options irc.look.nick_{prefix|suffix} to weechat.look.nick_{prefix|suffix} and options irc.color.nick_{prefix|suffix} to weechat.color.chat_nick_{prefix|suffix}, add new options weechat.look.prefix_align_more_after, weechat.look.prefix_buffer_align_more_after, logger.file.nick_{prefix|suffix} ([bug #37531](https://savannah.nongnu.org/bugs/?37531))\n- core: add support of multiple layouts ([task #11274](https://savannah.nongnu.org/task/?11274))\n- core: add signals nicklist_{group|nick}_removing and hsignals nicklist_{group|nick}_{added|removing|changed}\n- core: add count for groups, nicks, and total in nicklist\n- core: add option `dirs` in command `/debug`\n- core: add signal \"window_opened\" ([task #12464](https://savannah.nongnu.org/task/?12464))\n- core: allow read of array in hdata without using index\n- api: add new function hdata_search\n- api: add property \"completion_freeze\" for function buffer_set: do not stop completion when command line is updated\n- aspell: add completion \"aspell_dicts\" (list of aspell installed dictionaries)\n- aspell: add info \"aspell_dict\" (dictionaries used on a buffer)\n- aspell: optimization on spellers to improve speed (save state by buffer)\n- irc: add support of DH-AES SASL mechanism ([patch #8020](https://savannah.nongnu.org/patch/?8020))\n- irc: add support of UHNAMES (capability \"userhost-in-names\") ([task #9353](https://savannah.nongnu.org/task/?9353))\n- irc: add tag \"irc_nick_back\" for messages displayed in private buffer when a nick is back on server ([task #12576](https://savannah.nongnu.org/task/?12576))\n- irc: add option irc.look.display_join_message ([task #10895](https://savannah.nongnu.org/task/?10895))\n- irc: add option irc.look.pv_buffer: automatically merge private buffers (optionally by server) ([task #11924](https://savannah.nongnu.org/task/?11924))\n- irc: hide passwords in commands or messages sent to nickserv (`/msg nickserv`) with new modifiers \"irc_command_auth\" and \"irc_message_auth\", remove option irc.look.hide_nickserv_pwd, add option irc.look.nicks_hide_password ([bug #38346](https://savannah.nongnu.org/bugs/?38346))\n- irc: unmask smart filtered join if nick speaks in channel some minutes after the join, new option irc.look.smart_filter_join_unmask ([task #12405](https://savannah.nongnu.org/task/?12405))\n- irc: rename option irc.network.lag_disconnect to irc.network.lag_reconnect, value is now a number of seconds\n- relay: add message \"_nicklist_diff\" (differences between old and current nicklist)\n- relay: add support of multiple servers on same port for irc protocol (the client must send the server in the \"PASS\" command)\n- relay: add WebSocket server support (RFC 6455) for irc and weechat protocols, new option relay.network.websocket_allowed_origins\n- relay: add options \"buffers\" and \"upgrade\" in commands sync/desync (weechat protocol)\n- rmodifier: rename default rmodifier \"nickserv\" to \"command_auth\" (with new modifier \"irc_command_auth\"), add default rmodifier \"message_auth\" (modifier \"irc_message_auth\")\n- script: add option script.scripts.autoload, add options \"autoload\", \"noautoload\" and \"toggleautoload\" for command `/script`, add action \"A\" (`Alt`+`a`) on script buffer (toggle autoload) ([task #12393](https://savannah.nongnu.org/task/?12393))\n- xfer: add option xfer.file.auto_accept_nicks ([patch #7962](https://savannah.nongnu.org/patch/?7962))\n\n### Bug fixes\n\n- core: fix display of long lines without time (message beginning with two tabs)\n- core: reset scroll in window before zooming on a merged buffer ([bug #38207](https://savannah.nongnu.org/bugs/?38207))\n- core: fix refresh of item \"completion\": clear it after any action that is changing content of command line and after switch of buffer ([bug #38214](https://savannah.nongnu.org/bugs/?38214))\n- core: fix structures before buffer data when a buffer is closed\n- core: fix refresh of line after changes with hdata_update (update flag \"displayed\" according to filters)\n- core: fix hidden lines for messages without date when option weechat.history.max_buffer_lines_minutes is set ([bug #38197](https://savannah.nongnu.org/bugs/?38197))\n- core: use default hash/comparison callback for keys of type integer/pointer/time in hashtable\n- api: do not display a warning by default when loading a script with a license different from GPL\n- api: fix connection to servers with hook_connect on macOS ([bug #38496](https://savannah.nongnu.org/bugs/?38496))\n- api: fix bug in function string_match when mask begins and ends with \"*\"\n- api: allow hashtable with keys that are not strings in function hashtable_add_to_infolist\n- api: fix function string_mask_to_regex: escape all special chars used in regex ([bug #38398](https://savannah.nongnu.org/bugs/?38398))\n- guile: fix crash in function hdata_move\n- guile: fix arguments given to callbacks (separate arguments instead of one list with arguments inside), Guile ≥ 2.0 is now required ([bug #38350](https://savannah.nongnu.org/bugs/?38350))\n- guile: fix crash on calls to callbacks during load of script ([bug #38343](https://savannah.nongnu.org/bugs/?38343))\n- irc: fix name of server buffer after `/server rename` (set name \"server.name\" instead of \"name\")\n- irc: fix uncontrolled format string when sending unknown irc commands (if option irc.network.send_unknown_commands is on)\n- irc: fix uncontrolled format string when sending ison command (for nicks monitored by `/notify`)\n- irc: fix refresh of nick in input bar when joining a new channel with op status ([bug #38969](https://savannah.nongnu.org/bugs/?38969))\n- irc: fix display of CTCP messages that contain bold attribute ([bug #38895](https://savannah.nongnu.org/bugs/?38895))\n- irc: fix duplicate nick completion when someone rejoins the channel with same nick but a different case ([bug #38841](https://savannah.nongnu.org/bugs/?38841))\n- irc: fix crash on command `/allchan /close`\n- irc: fix default completion (like nicks) in commands `/msg`, `/notice`, `/query` and `/topic`\n- irc: fix prefix color for nick when the prefix is not in irc.color.nick_prefixes: use default color (key \"*\")\n- irc: fix display of malformed CTCP (without closing char) ([bug #38347](https://savannah.nongnu.org/bugs/?38347))\n- irc: fix memory leak in purge of hashtables with joins (it was done only for the first server in the list)\n- irc: add color in output of `/names` when result is on server buffer (channel not joined) ([bug #38070](https://savannah.nongnu.org/bugs/?38070))\n- lua: remove use of functions for API constants\n- lua: fix crash on stack overflow: call lua_pop for values returned by lua functions ([bug #38510](https://savannah.nongnu.org/bugs/?38510))\n- perl: simplify code to load scripts\n- python: fix crash when loading scripts with Python 3.x ([patch #8044](https://savannah.nongnu.org/patch/?8044))\n- relay: fix uncontrolled format string in redirection of irc commands\n- relay: rename compression \"gzip\" to \"zlib\" (compression is zlib, not gzip)\n- relay: fix commands sync/desync in weechat protocol ([bug #38215](https://savannah.nongnu.org/bugs/?38215))\n- ruby: fix crash in function hdata_move\n- ruby: fix crash with Ruby 2.0: use one array for the last 6 arguments of function config_new_option ([bug #31050](https://savannah.nongnu.org/bugs/?31050))\n- script: create \"script\" directory on each action, just in case it has been removed ([bug #38472](https://savannah.nongnu.org/bugs/?38472))\n- scripts: create directories (language and language/autoload) on each action (install/remove/autoload), just in case they have been removed ([bug #38473](https://savannah.nongnu.org/bugs/?38473))\n- scripts: do not allow empty script name in function register\n- xfer: fix freeze of DCC file received: use non-blocking socket after connection to sender and ensure the ACK is properly sent ([bug #38340](https://savannah.nongnu.org/bugs/?38340))\n\n### Build\n\n- core: install icon file ([patch #7972](https://savannah.nongnu.org/patch/?7972))\n- core: fix detection of iconv with CMake on macOS ([bug #38321](https://savannah.nongnu.org/bugs/?38321))\n- guile: fix compilation with Guile 2.0\n- python: fix detection of Python on Ubuntu Raring\n- script: fix compilation on GNU/Hurd ([patch #7977](https://savannah.nongnu.org/patch/?7977))\n\n## Version 0.4.0 (2013-01-20)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add buffer pointer in arguments for signals \"input_search\", \"input_text_changed\" and \"input_text_cursor_moved\"\n- core: add option `diff` in command `/set` (list options with changed value)\n- core: add color support in options weechat.look.prefix_{action|error|join|network|quit} ([task #9555](https://savannah.nongnu.org/task/?9555))\n- core: display default values for changed config options in output of `/set`\n- core: add command `/eval`, use expression in conditions for bars\n- core: add option `-quit` in command `/upgrade` (save session and quit without restarting WeeChat, for delayed restoration)\n- core: add incomplete mouse events \"event-down\" and \"event-drag\" ([task #11840](https://savannah.nongnu.org/task/?11840))\n- api: allow return code WEECHAT_RC_OK_EAT in callbacks of hook_signal and hook_hsignal (stop sending the signal immediately)\n- api: allow creation of structure with hdata_update (allowed for hdata \"history\")\n- api: use hashtable \"options\" for command arguments in function hook_process_hashtable (optional, default is a split of string with command)\n- api: add new function string_eval_expression\n- api: connect with IPv6 by default in hook_connect (with fallback to IPv4), shuffle list of hosts for a same address, add argument \"retry\" for hook_connect, move \"sock\" from hook_connect arguments to callback of hook_connect ([task #11205](https://savannah.nongnu.org/task/?11205))\n- aspell: add signal \"aspell_suggest\" (sent when new suggestions are displayed)\n- aspell: add bar items \"aspell_dict\" (dictionary used on current buffer) and \"aspell_suggest\" (suggestions for misspelled word at cursor), add option aspell.check.suggestions ([task #12061](https://savannah.nongnu.org/task/?12061))\n- irc: add tags \"irc_nick1_xxx\" and \"irc_nick2_yyy\" in message displayed for command \"NICK\"\n- irc: return git version in CTCP VERSION and FINGER by default, add \"$git\" and \"$versiongit\" in format of CTCP replies\n- irc: read local variable \"autorejoin\" in buffer to override server option \"autorejoin\" ([task #12256](https://savannah.nongnu.org/task/?12256))\n- irc: add option `-auto` in command `/connect` ([task #9340](https://savannah.nongnu.org/task/?9340))\n- irc: add support of \"server-time\" capability ([task #12255](https://savannah.nongnu.org/task/?12255))\n- irc: add support of tags in messages\n- irc: add command `/quiet`, fix display of messages 728/729 (quiet list, end of quiet list) ([task #12278](https://savannah.nongnu.org/task/?12278))\n- irc: add option irc.network.alternate_nick to disable dynamic nick generation when all nicks are already in use on server ([task #12281](https://savannah.nongnu.org/task/?12281))\n- irc: add option irc.network.whois_double_nick to double nick in command `/whois`\n- irc: add option `-noswitch` in command `/join` ([task #12275](https://savannah.nongnu.org/task/?12275))\n- perl: display script filename in error messages\n- relay: add backlog and server capability \"server-time\" for irc protocol, add new options relay.irc.backlog_max_minutes, relay.irc.backlog_max_number, relay.irc.backlog_since_last_disconnect, relay.irc.backlog_tags, relay.irc.backlog_time_format ([task #12076](https://savannah.nongnu.org/task/?12076))\n- relay: add support of IPv6, new option relay.network.ipv6, add support of \"ipv4.\" and/or \"ipv6.\" before protocol name, to force IPv4/IPv6 ([task #12270](https://savannah.nongnu.org/task/?12270))\n- xfer: display remote IP address for DCC chat/file ([task #12289](https://savannah.nongnu.org/task/?12289))\n\n### Bug fixes\n\n- core: fix infinite loop when a regex gives an empty match ([bug #38112](https://savannah.nongnu.org/bugs/?38112))\n- core: fix click in item \"buffer_nicklist\" when nicklist is a root bar ([bug #38080](https://savannah.nongnu.org/bugs/?38080))\n- core: fix line returned when clicking on a bar (according to position and filling) ([bug #38069](https://savannah.nongnu.org/bugs/?38069))\n- core: fix refresh of bars when applying layout ([bug #37944](https://savannah.nongnu.org/bugs/?37944), [bug #37952](https://savannah.nongnu.org/bugs/?37952))\n- core: fix scroll to bottom of window (default key: `Alt`+`End`) when line displayed is bigger than chat area\n- core: fix scroll in buffer after enabling/disabling some filters (if scroll is on a hidden line) ([bug #37885](https://savannah.nongnu.org/bugs/?37885))\n- core: fix memory leak in case of error when building content of bar item for display\n- core: fix detection of command in input: a single command char is considered as a command (API function string_input_for_buffer)\n- core: search for a fallback template when a no template is matching command arguments\n- core: fix refresh of windows after split (fix bug with horizontal separator between windows) ([bug #37874](https://savannah.nongnu.org/bugs/?37874))\n- core: fix stuck mouse ([bug #36533](https://savannah.nongnu.org/bugs/?36533))\n- core: fix default mouse buttons actions for script buffer (focus the window before executing action)\n- core: fix scroll of one page down when weechat.look.scroll_page_percent is less than 100 ([bug #37875](https://savannah.nongnu.org/bugs/?37875))\n- core: disable paste detection and confirmation if bar item \"input_paste\" is not used in a visible bar ([task #12327](https://savannah.nongnu.org/task/?12327))\n- core: use high priority (50000) for commands `/command` and `/input` so that an alias will not take precedence over these commands ([bug #36353](https://savannah.nongnu.org/bugs/?36353))\n- core: execute command with higher priority when many commands with same name are found with different priorities\n- core: fix display of combining chars ([bug #37775](https://savannah.nongnu.org/bugs/?37775))\n- core: fix display of zoomed/merged buffer (with number ≥ 2) after switching to it ([bug #37593](https://savannah.nongnu.org/bugs/?37593))\n- core: fix display problem when option weechat.look.prefix_same_nick is set (problem with nick displayed in first line of screen) ([bug #37556](https://savannah.nongnu.org/bugs/?37556))\n- core: fix wrapping of words with wide chars (the break was made before the correct position)\n- api: do not call shell to execute command in hook_process (fix security problem when a plugin/script gives untrusted command) ([bug #37764](https://savannah.nongnu.org/bugs/?37764))\n- alias: give higher priority to aliases (2000) so that they take precedence over an existing command\n- aspell: ignore self and remote nicks in private buffers\n- aspell: fix creation of spellers when number of dictionaries is different between two buffers\n- guile: fix bad conversion of shared strings (replace calls to scm_i_string_chars by scm_to_locale_string) ([bug #38067](https://savannah.nongnu.org/bugs/?38067))\n- irc: fix display of actions (`/me`) when they are received from a relay client (in channel and private buffers) ([bug #38027](https://savannah.nongnu.org/bugs/?38027))\n- irc: fix memory leak when updating modes of channel\n- irc: fix crash on `/upgrade` (free channels before server data when a server is destroyed) ([bug #37736](https://savannah.nongnu.org/bugs/?37736))\n- irc: fix crash when decoding IRC colors in strings ([bug #37704](https://savannah.nongnu.org/bugs/?37704))\n- irc: fix refresh of bar item \"away\" after command `/away` or `/disconnect`\n- irc: send whois on self nick when `/whois` is done without argument on a channel ([task #12273](https://savannah.nongnu.org/task/?12273))\n- irc: remove local variable \"away\" in server/channels buffers after server disconnection ([bug #37582](https://savannah.nongnu.org/bugs/?37582))\n- irc: fix crash when message 352 has too few arguments ([bug #37513](https://savannah.nongnu.org/bugs/?37513))\n- irc: remove unneeded server disconnect when server buffer is closed and server is already disconnected\n- perl: fix calls to callbacks during load of script when multiplicity is disabled ([bug #38044](https://savannah.nongnu.org/bugs/?38044))\n- relay: fix duplicated messages sent to irc clients (when messages are redirected) ([bug #37870](https://savannah.nongnu.org/bugs/?37870))\n- relay: fix memory leak when adding hdata to a message (weechat protocol)\n- relay: fix crash after `/upgrade` when a client is connected\n- relay: add missing \"ssl.\" in output of `/relay listrelay`\n- script: fix scroll with mouse when window with script buffer is not the current window (do not force a switch to script buffer in current window)\n- xfer: fix memory leak when refreshing xfer buffer\n- xfer: add missing tags in DCC chat messages: nick_xxx, prefix_nick_ccc, logN\n- xfer: limit bytes received to file size (for DCC file received), fix crash when displaying a xfer file with pos greater than size\n\n### Build\n\n- core: add git version in build, display it in `weechat-curses --help` and `/version`\n- core: stop CMake if gcrypt lib is not found ([bug #37671](https://savannah.nongnu.org/bugs/?37671))\n- guile: fix detection of Guile in configure\n- script: fix compilation on macOS\n\n## Version 0.3.9.2 (2012-11-18)\n\n### Bug fixes\n\n- core: do not call shell to execute command in hook_process (fix security problem when a plugin/script gives untrusted command) ([bug #37764](https://savannah.nongnu.org/bugs/?37764), [CVE-2012-5534](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-5534))\n\n## Version 0.3.9.1 (2012-11-09)\n\n### Bug fixes\n\n- irc: fix crash when decoding IRC colors in strings ([bug #37704](https://savannah.nongnu.org/bugs/?37704), [CVE-2012-5854](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-5854))\n\n## Version 0.3.9 (2012-09-29)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add signals for plugins loaded/unloaded\n- core: add default key `Alt`+`x` (zoom on merged buffer) ([task #11029](https://savannah.nongnu.org/task/?11029))\n- core: add mouse bindings `Ctrl` + wheel up/down to scroll horizontally buffers with free content\n- core: add option weechat.startup.sys_rlimit to set system resource limits for WeeChat process\n- core: add option `swap` in command `/buffer` ([task #11373](https://savannah.nongnu.org/task/?11373))\n- core: add hdata \"hotlist\"\n- core: add support of arrays in hdata variables\n- core: add command line option `-r` (or `--run-command`) to run command(s) after startup of WeeChat\n- core: add function hook_set in plugin API, add \"subplugin\" in hooks (set by script plugins), display subplugin in `/help` on commands ([task #12049](https://savannah.nongnu.org/task/?12049))\n- core: add option weechat.look.jump_smart_back_to_buffer (jump back to initial buffer after reaching end of hotlist, on by default, which is old behavior)\n- core: add default key `Alt`+`s` (toggle aspell)\n- core: add callback \"nickcmp\" in buffers\n- core: add horizontal separator between windows, new options weechat.look.window_separator_{horizontal|vertical}\n- core: add options weechat.look.color_nick_offline and weechat.color.chat_nick_offline{_highlight|_highlight_bg} to use different color for offline nicks in prefix ([task #11109](https://savannah.nongnu.org/task/?11109))\n- api: allow update for some variables of hdata, add new functions hdata_update and hdata_set\n- api: add info \"locale\" for info_get (locale used to translate messages)\n- api: add new function util_version_number\n- aspell: add option aspell.check.enabled, add options enable/disable/toggle for command `/aspell` (rename options enable/disable/dictlist to setdict/deldict/listdict), display aspell status with `/aspell` ([task #11988](https://savannah.nongnu.org/task/?11988))\n- irc: generate alternate nicks dynamically when all nicks are already in use ([task #12209](https://savannah.nongnu.org/task/?12209))\n- irc: add bar item \"buffer_modes\", remove option irc.look.item_channel_modes ([task #12022](https://savannah.nongnu.org/task/?12022))\n- irc: add option irc.look.ctcp_time_format to customize reply to CTCP TIME ([task #12150](https://savannah.nongnu.org/task/?12150))\n- irc: move options from core to irc plugin: weechat.look.nickmode to irc.look.nick_mode (new type: integer with values: none/prefix/action/both) and weechat.look.nickmode_empty to irc.look.nick_mode_empty\n- logger: add tags in backlog lines displayed when opening buffer\n- logger: add messages \"Day changed to\" in backlog ([task #12187](https://savannah.nongnu.org/task/?12187))\n- relay: add support of SSL (for irc and weechat protocols), new option relay.network.ssl_cert_key ([task #12044](https://savannah.nongnu.org/task/?12044))\n- relay: add option relay.color.client\n- relay: add object type \"arr\" (array) in WeeChat protocol\n- script: new plugin \"script\" (script manager, replacing scripts weeget.py and script.pl)\n- scripts: add signals for scripts loaded/unloaded/installed/removed\n- scripts: add hdata with list of scripts for each language\n\n### Bug fixes\n\n- core: fix display bug when end of a line is displayed on top of chat (last line truncated and MORE(0) in status bar) ([bug #37203](https://savannah.nongnu.org/bugs/?37203))\n- core: fix IP address returned by hook_connect (return IP really used, not first IP for hostname)\n- core: display spaces at the end of messages in chat area ([bug #37024](https://savannah.nongnu.org/bugs/?37024))\n- core: fix infinite loop in display when chat area has width of 1 with a bar displayed on the right (nicklist by default) ([bug #37089](https://savannah.nongnu.org/bugs/?37089))\n- core: fix display of \"bar more down\" char when text is truncated by size_max in bars with vertical filling ([bug #37054](https://savannah.nongnu.org/bugs/?37054))\n- core: fix color of long lines (displayed on more than one line on screen) under FreeBSD ([bug #36999](https://savannah.nongnu.org/bugs/?36999))\n- core: return error string to callback of hook_connect if getaddrinfo fails in child process\n- core: scroll to bottom of window after reaching first or last highlight with keys `Alt`+`p` / `Alt`+`n`\n- core: fix refresh of bar items when switching window\n- core: fix refresh of bar items \"buffer_filter\" and \"scroll\" in root bars ([bug #36816](https://savannah.nongnu.org/bugs/?36816))\n- core: allow again names beginning with \"#\" for bars, proxies and filters\n- core: escape special chars (`#[\\`) in configuration files for name of options ([bug #36584](https://savannah.nongnu.org/bugs/?36584))\n- aspell: add missing dictionaries (ast/grc/hus/kn/ky)\n- charset: do not allow \"UTF-8\" in charset decoding options (useless because UTF-8 is the internal WeeChat charset)\n- fifo: ignore read failing with error EAGAIN ([bug #37019](https://savannah.nongnu.org/bugs/?37019))\n- guile: fix crash when unloading a script without pointer to interpreter\n- irc: fix rejoin of channels with a key, ignore value \"*\" sent by server for key ([bug #24131](https://savannah.nongnu.org/bugs/?24131))\n- irc: fix SASL mechanism \"external\" ([bug #37274](https://savannah.nongnu.org/bugs/?37274))\n- irc: fix parsing of message 346 when no nick/time are given ([bug #37266](https://savannah.nongnu.org/bugs/?37266))\n- irc: switch to next address after a timeout when connecting to server ([bug #37216](https://savannah.nongnu.org/bugs/?37216))\n- irc: fix bug when changing server option \"addresses\" with less addresses ([bug #37215](https://savannah.nongnu.org/bugs/?37215))\n- irc: add network prefix in irc (dis)connection messages\n- irc: fix split of received IRC message: keep spaces at the end of message\n- irc: fix bug with prefix chars which are in chanmodes with a type different from \"B\" ([bug #36996](https://savannah.nongnu.org/bugs/?36996))\n- irc: fix format of message \"USER\" (according to RFC 2812) ([bug #36825](https://savannah.nongnu.org/bugs/?36825))\n- irc: fix parsing of user modes (ignore everything after first space) ([bug #36756](https://savannah.nongnu.org/bugs/?36756), [bug #31572](https://savannah.nongnu.org/bugs/?31572))\n- irc: fix freeze when reading on socket with SSL enabled (use non-blocking sockets) ([bug #35097](https://savannah.nongnu.org/bugs/?35097))\n- irc: allow again names beginning with \"#\" for servers\n- lua: fix crash when unloading a script without pointer to interpreter\n- python: fix crash when unloading a script without pointer to interpreter\n- relay: fix freeze when writing on relay socket (use non-blocking sockets in relay for irc and weechat protocols) ([bug #36655](https://savannah.nongnu.org/bugs/?36655))\n- scripts: fix deletion of configuration files when script is unloaded ([bug #36977](https://savannah.nongnu.org/bugs/?36977))\n- scripts: fix function unhook_all: delete only callbacks of hooks and add missing call to unhook\n- scripts: ignore call to register (with a warning) if script is already registered\n- xfer: fix DCC transfer error ([bug #37432](https://savannah.nongnu.org/bugs/?37432))\n\n### Documentation\n\n- add Japanese user's guide ([patch #7827](https://savannah.nongnu.org/patch/?7827)), scripting guide and tester's guide\n\n### Build\n\n- core: move the set of CMake policy CMP0003 in directory src (so it applies to all plugins) ([bug #37311](https://savannah.nongnu.org/bugs/?37311))\n- core: fix names of cache variables in configure.in ([bug #36971](https://savannah.nongnu.org/bugs/?36971))\n- core: add CMake option \"MANDIR\" ([bug #36776](https://savannah.nongnu.org/bugs/?36776))\n- guile: fix path of Guile include dirs in CMake build ([patch #7790](https://savannah.nongnu.org/patch/?7790))\n- lua: add support of Lua 5.2\n- python: fix detection of Python (first try \"python2.x\" and then \"python\") ([bug #36835](https://savannah.nongnu.org/bugs/?36835))\n- ruby: add detection of Ruby 1.9.3\n\n## Version 0.3.8 (2012-06-03)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add option weechat.look.prefix_same_nick (hide or change prefix on messages whose nick is the same as previous message) ([task #11965](https://savannah.nongnu.org/task/?11965))\n- core: convert tabs to spaces in text pasted ([bug #25028](https://savannah.nongnu.org/bugs/?25028))\n- core: add a connection timeout for child process in hook_connect ([bug #35966](https://savannah.nongnu.org/bugs/?35966))\n- core: add support of terminal \"bracketed paste mode\", new options weechat.look.paste_bracketed and weechat.look.paste_bracketed_timer_delay ([task #11316](https://savannah.nongnu.org/task/?11316))\n- core: support lines of 16 Kb long in configuration files (instead of 1 Kb)\n- core: convert options weechat.look.prefix_align_more and weechat.look.prefix_buffer_align_more from boolean to string ([task #11197](https://savannah.nongnu.org/task/?11197))\n- core: follow symbolic links when writing configuration files (.conf) ([task #11779](https://savannah.nongnu.org/task/?11779))\n- api: add list \"gui_buffer_last_displayed\" in hdata \"buffer\"\n- irc: add option `fakerecv` in command `/server` to simulate a received IRC message (not documented, for debug only)\n- irc: add option `-pending` in command `/disconnect` (cancel auto-reconnection on servers currently reconnecting) ([task #11985](https://savannah.nongnu.org/task/?11985))\n- irc: add signals and tags in messages for irc notify ([task #11887](https://savannah.nongnu.org/task/?11887))\n- irc: add support of \"external\" SASL mechanism ([task #11864](https://savannah.nongnu.org/task/?11864))\n- irc: allow more than one nick in command `/invite`\n- logger: add colors for backlog lines and end of backlog, new options: logger.color.backlog_line and logger.color.backlog_end ([task #11966](https://savannah.nongnu.org/task/?11966))\n- relay: add signals \"upgrade\" and \"upgrade_ended\" in WeeChat protocol\n- relay: add \"date_printed\" and \"highlight\" in signal \"_buffer_line_added\" (WeeChat protocol)\n- rmodifier: add default rmodifier \"quote_pass\" to hide password in command `/quote pass` ([bug #36250](https://savannah.nongnu.org/bugs/?36250))\n- rmodifier: add default rmodifier \"server\" to hide passwords in commands `/server` and `/connect` ([task #11993](https://savannah.nongnu.org/task/?11993))\n- rmodifier: add option \"release\" in default rmodifier \"nickserv\" (used to hide passwords in command `/msg nickserv`) ([bug #35705](https://savannah.nongnu.org/bugs/?35705))\n\n### Bug fixes\n\n- core: fix crash in focus hook for nicklist ([bug #36271](https://savannah.nongnu.org/bugs/?36271))\n- core: fix truncated configuration files (zero-length) after system crash ([bug #36383](https://savannah.nongnu.org/bugs/?36383))\n- core: fix display bugs and crashes with small windows ([bug #36107](https://savannah.nongnu.org/bugs/?36107))\n- core: fix display bug with prefix when length is greater than max and prefix is ending with a wide char ([bug #36032](https://savannah.nongnu.org/bugs/?36032))\n- core: fix lost scroll when switching to a buffer with a pending search\n- core: fix display of wide chars on last column of chat area ([patch #7733](https://savannah.nongnu.org/patch/?7733))\n- api: display warning in scripts when invalid pointers (malformed strings) are given to plugin API functions (warning displayed if debug for plugin is ≥ 1)\n- scripts: fix type of argument \"rc\" in callback of hook_process (from string to integer)\n- guile: fix crash on ARM when loading guile plugin ([bug #36479](https://savannah.nongnu.org/bugs/?36479))\n- guile: add missing function hook_process_hashtable in API\n- irc: update channel modes by using chanmodes from message 005 (do not send extra command \"MODE\" to server), fix parsing of modes ([bug #36215](https://savannah.nongnu.org/bugs/?36215))\n- irc: hide everything after \"identify\" or \"register\" in messages to nickserv when option irc.look.hide_nickserv_pwd is on ([bug #36362](https://savannah.nongnu.org/bugs/?36362))\n- irc: set user modes only if target nick is self nick in message 221 ([patch #7754](https://savannah.nongnu.org/patch/?7754))\n- irc: force the clear of nicklist when joining a channel (nicklist was not sync after znc reconnection) ([bug #36008](https://savannah.nongnu.org/bugs/?36008))\n- irc: do not send command \"MODE #channel\" on manual `/names` (do it only when names are received on join of channel) ([bug #35930](https://savannah.nongnu.org/bugs/?35930))\n- irc: do not allow the creation of two servers with same name but different case (fix error when writing file irc.conf) ([bug #35840](https://savannah.nongnu.org/bugs/?35840))\n- irc: update away flag for nicks on manual `/who`\n- irc: display privmsg messages to \"@#channel\" and \"+#channel\" in channel buffer ([bug #35331](https://savannah.nongnu.org/bugs/?35331))\n- irc: fix redirection of message when message is queued for sending on server\n- irc: check notify immediately when adding a nick to notify list, improve first notify message for a nick ([bug #35731](https://savannah.nongnu.org/bugs/?35731))\n- irc: fix display of color in hostname (join/part/quit messages)\n- irc: compute hash to find nick color for nick in server message when nick is not in nicklist\n- irc: close server buffer when server is deleted\n- irc: add search for lower case nicks in option irc.look.nick_color_force\n- logger: fix charset of lines displayed in backlog when terminal charset is different from UTF-8 ([bug #36379](https://savannah.nongnu.org/bugs/?36379))\n- perl: fix crash on quit on macOS\n- relay: keep spaces in beginning of \"input\" received from client (WeeChat protocol)\n- relay: fix crash on `/upgrade` when client is connected using WeeChat protocol\n- relay: redirect some irc messages from clients to hide output (messages: mode, ison, list, names, topic, who, whois, whowas, time, userhost) ([bug #33516](https://savannah.nongnu.org/bugs/?33516))\n- tcl: add missing function hdata_char in API\n- tcl: fix pointer sent to function hook_signal_send when type of data is a pointer\n\n### Documentation\n\n- add Japanese FAQ ([patch #7781](https://savannah.nongnu.org/patch/?7781))\n\n### Build\n\n- perl: fix compilation on macOS ([bug #30701](https://savannah.nongnu.org/bugs/?30701))\n\n## Version 0.3.7 (2012-02-26)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add support of flags in regular expressions and highlight options\n- core: add type \"hashtable\" for hdata\n- core: add signals \"buffer_line_added\" and \"window_switch\"\n- core: add default keys `Ctrl`+`Left` / `Ctrl`+`Right` (`meta2-1;5D` / `meta2-1;5C`) for gnome-terminal\n- core: add option `hooks` in command `/debug`\n- core: add option weechat.look.scroll_bottom_after_switch (if enabled, restore old behavior before fix of [bug #25555](https://savannah.nongnu.org/bugs/?25555) in version 0.3.5)\n- core: add new option weechat.completion.base_word_until_cursor: allow completion in middle of words (enabled by default) ([task #9771](https://savannah.nongnu.org/task/?9771))\n- core: add option `jump_last_buffer_displayed` in command `/input` (key: `Alt`+`/`) ([task #11553](https://savannah.nongnu.org/task/?11553))\n- core: add option weechat.history.max_buffer_lines_minutes: maximum number of minutes in history per buffer ([task #10900](https://savannah.nongnu.org/task/?10900)), rename option weechat.history.max_lines to weechat.history.max_buffer_lines_number\n- core: add optional arguments for command `/plugin load/reload/autoload`\n- core: use extended regex in filters ([task #9497](https://savannah.nongnu.org/task/?9497), [patch #7616](https://savannah.nongnu.org/patch/?7616))\n- api: add modifier \"input_text_for_buffer\" ([bug #35317](https://savannah.nongnu.org/bugs/?35317))\n- api: add support of URL in hook_process / hook_process_hashtable ([task #10247](https://savannah.nongnu.org/task/?10247))\n- api: add new functions strcasecmp_range, strncasecmp_range, string_regex_flags, string_regcomp, hashtable_map_string, hook_process_hashtable, hdata_check_pointer, hdata_char, hdata_hashtable and nicklist_get_next_item\n- alias: add default alias `/umode` to `/mode $nick`\n- irc: add option \"capabilities\" in servers to enable client capabilities on connection\n- irc: add signal \"irc_server_opened\"\n- irc: add signal \"xxx,irc_out1_yyy\" and modifier \"irc_out1_xxx\" (outgoing message before automatic split to fit in 512 bytes)\n- irc: add alias \"ctcp\" for target buffer of CTCP messages\n- irc: add options irc.look.highlight_{server|channel|pv} to customize or disable default nick highlight ([task #11128](https://savannah.nongnu.org/task/?11128))\n- irc: use redirection to get channel modes after update of modes on channel, display output of `/mode #channel`, allow `/mode` without argument (display modes of current channel or user modes on server buffer)\n- irc: add optional server in info \"irc_is_channel\" (before channel name) ([bug #35124](https://savannah.nongnu.org/bugs/?35124)), add optional server in info_hashtable \"irc_message_parse\"\n- irc: add case-insensitive string comparison based on casemapping of server (rfc1459, strict-rfc1459, ascii) ([bug #34239](https://savannah.nongnu.org/bugs/?34239))\n- irc: add option irc.color.mirc_remap to remap mirc colors in messages to WeeChat colors\n- irc: allow URL \"irc://\" in command `/connect`\n- irc: use extended regex in commands `/ignore` and `/list`\n- guile: new script plugin for scheme ([task #7289](https://savannah.nongnu.org/task/?7289))\n- python: add support of Python 3.x ([task #11704](https://savannah.nongnu.org/task/?11704))\n- relay: add WeeChat protocol for remote GUI\n- xfer: display origin of xfer in core and xfer buffers ([task #10956](https://savannah.nongnu.org/task/?10956))\n\n### Internationalization\n\n- add Japanese translations\n\n### Bug fixes\n\n- core: fix expand of path `~` to home of user in function string_expand_home (`~/xxx` was OK, but not `~`)\n- core: fix memory leak when closing buffer\n- core: fix memory leak in function util_search_full_lib_name\n- core: automatically add newline char after last pasted line (when pasting many lines with confirmation) ([task #10703](https://savannah.nongnu.org/task/?10703))\n- core: fix bug with layout: assign layout number in buffers when doing `/layout save`\n- core: do not auto add space after nick completer if option weechat.completion.nick_add_space is off\n- core: fix signal \"buffer_switch\": send it only once when switching buffer ([bug #31158](https://savannah.nongnu.org/bugs/?31158))\n- core: move option `scroll_unread` from command `/input` to `/window`\n- core: save current mouse state in option weechat.look.mouse (set option when mouse state is changed with command `/mouse`)\n- core: apply filters after full reload of configuration files (with `/reload`) ([bug #31182](https://savannah.nongnu.org/bugs/?31182))\n- core: allow list for option weechat.plugin.extension (makes weechat.conf portable across Un*x and Windows) ([task #11479](https://savannah.nongnu.org/task/?11479))\n- core: display error in command `/buffer` if arguments are wrong ([bug #34180](https://savannah.nongnu.org/bugs/?34180))\n- core: fix help on plugin option when config_set_desc_plugin is called to set help on newly created option\n- core: enable background process under Cygwin to connect to servers, fix reconnection problem ([bug #34626](https://savannah.nongnu.org/bugs/?34626))\n- aspell: fix URL detection (do not check spelling of URLs) ([bug #34040](https://savannah.nongnu.org/bugs/?34040))\n- irc: fix memory leak in SASL DH-BLOWFISH authentication\n- irc: fix memory leak when a server is deleted\n- irc: fix self-highlight when using `/me` with an IRC bouncer like znc ([bug #35123](https://savannah.nongnu.org/bugs/?35123))\n- irc: use low priority for MODE sent automatically by WeeChat (when joining channel)\n- irc: do not use option irc.look.nick_color_stop_chars for forced nick colors ([bug #33480](https://savannah.nongnu.org/bugs/?33480))\n- irc: reset read marker of current buffer on manual `/join`\n- irc: fix crash when signon time in message 317 (whois, idle) is invalid (too large) ([bug #34905](https://savannah.nongnu.org/bugs/?34905))\n- irc: do not delete servers added in irc.conf on `/reload` ([bug #34872](https://savannah.nongnu.org/bugs/?34872))\n- irc: remove autorejoin on channels when disconnected from server ([bug #32207](https://savannah.nongnu.org/bugs/?32207))\n- irc: display messages kick/kill/mode/topic even if nick is ignored ([bug #34853](https://savannah.nongnu.org/bugs/?34853))\n- irc: display channel voice notices received in channel buffer ([bug #34762](https://savannah.nongnu.org/bugs/?34762)), display channel/op notices sent in channel buffer\n- irc: auto-connect to servers created with \"irc://\" on command line but not other servers if `-a` (`--no-connect`) is given\n- perl: increment count of hash returned by API (fix crash when script tries to read hash without making a copy)\n- relay: do not create relay if there is a problem with socket creation ([bug #35345](https://savannah.nongnu.org/bugs/?35345))\n- ruby: fix crash when reloading ruby plugin ([bug #34474](https://savannah.nongnu.org/bugs/?34474))\n\n### Documentation\n\n- add developer's guide ([task #5416](https://savannah.nongnu.org/task/?5416))\n\n### Build\n\n- core: add library \"pthread\" in CMake file for link on OpenBSD\n- core: add WEECHAT_HOME option in CMake and configure to setup default WeeChat home (default is \"~/.weechat\") ([task #11266](https://savannah.nongnu.org/task/?11266))\n- core: fix compilation under OpenBSD 5.0 (lib utf8 not needed anymore) ([bug #34727](https://savannah.nongnu.org/bugs/?34727))\n- core: fix compilation error with \"pid_t\" on macOS ([bug #34639](https://savannah.nongnu.org/bugs/?34639))\n\n## Version 0.3.6 (2011-10-22)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add color attribute \"|\" (keep attributes) and value \"resetcolor\" for function color in plugin API (used by irc plugin to keep bold/reverse/underlined in message when changing color) ([bug #34550](https://savannah.nongnu.org/bugs/?34550))\n- core: add new option weechat.look.color_basic_force_bold, off by default: bold is used only if terminal has less than 16 colors ([patch #7621](https://savannah.nongnu.org/patch/?7621))\n- core: add default key `F5` (`meta2-[E`) for Linux console\n- core: add \"inactive\" colors for inactive windows and lines in merged buffers, new options: weechat.look.color_inactive_window, weechat.look.color_inactive_buffer, weechat.look.color_inactive_message, weechat.look.color_inactive_prefix, weechat.look.color_inactive_prefix_buffer, weechat.look.color_inactive_time, weechat.color.chat_inactive_line, weechat.color.chat_inactive_window, weechat.color.chat_prefix_buffer_inactive_line\n- core: do automatic zoom on current window when terminal becomes too small for windows\n- core: add new options weechat.look.bar_more_left/right/up/down\n- core: add new option weechat.look.item_buffer_filter\n- core: allow name of buffer for command `/buffer clear` ([task #11269](https://savannah.nongnu.org/task/?11269))\n- core: add new command `/repeat` (execute a command several times)\n- core: save and restore layout for buffers and windows on `/upgrade`\n- core: add option `-all` in command `/buffer unmerge`\n- core: add number in windows (add optional argument `-window` so some actions for command `/window`)\n- core: allow buffer name in `/buffer close`\n- core: add support of mouse: new command `/mouse`, new key context \"mouse\", new options weechat.look.mouse and weechat.look.mouse_timer_delay ([task #5435](https://savannah.nongnu.org/task/?5435))\n- core: add command `/cursor` (free movement of cursor on screen), with key context \"cursor\"\n- core: automatic scroll direction in `/bar scroll` (x/y is now optional)\n- core: add optional delay for key grab (commands `/input grab_key` and `/input grab_key_command`, default is 500 milliseconds)\n- core: allow plugin name in command `/buffer name`\n- core: add context \"search\" for keys (to define keys used during search in buffer with `Ctrl`+`r`)\n- core: add new option weechat.look.separator_vertical, rename option weechat.look.hline_char to weechat.look.separator_horizontal\n- core: add local variable \"highlight_regex\" in buffers\n- core: add \"hdata\" (direct access to WeeChat/plugin data)\n- core: add option weechat.look.eat_newline_glitch (do not add new line at end of each line displayed)\n- core: add options `infolists`, `hdata` and `tags` for command `/debug`\n- core: add horizontal scrolling for buffers with free content (command `/window scroll_horiz`) ([task #11112](https://savannah.nongnu.org/task/?11112))\n- core: change default value of option weechat.network.gnutls_ca_file to \"/etc/ssl/certs/ca-certificates.crt\"\n- api: add info \"cursor_mode\"\n- api: add new functions key_bind, key_unbind, hook_focus, hdata_new, hdata_new_var, hdata_new_list, hdata_get, hdata_get_var_offset, hdata_get_var_type, hdata_get_var_type_string, hdata_get_var_hdata, hdata_get_var, hdata_get_var_at_offset, hdata_get_list, hdata_move, hdata_integer, hdata_string, hdata_pointer, hdata_time, hdata_get_string\n- irc: allow reason for command `/disconnect`\n- irc: allow server name for commands `/die` and `/restart`\n- irc: add new info_hashtable \"irc_message_split\"\n- irc: add prefix \"#\" for all channels on join (if no prefix given)\n- irc: improve split of privmsg message (keep ctcp), add split of ison, join, notice, wallops, 005, 353 ([bug #29879](https://savannah.nongnu.org/bugs/?29879), [bug #33448](https://savannah.nongnu.org/bugs/?33448), [bug #33592](https://savannah.nongnu.org/bugs/?33592))\n- logger: add option logger.file.flush_delay ([task #11118](https://savannah.nongnu.org/task/?11118))\n\n### Bug fixes\n\n- core: fix freeze when calling function util_file_get_content with a directory instead of a filename\n- core: display timeout for hook_process command only if debug for core is enabled ([task #11401](https://savannah.nongnu.org/task/?11401))\n- core: bufferize lines displayed before core buffer is created, to display them in buffer when it is created\n- core: fix display of background color in chat area after line feed\n- core: fix paste detection (problem with end of lines)\n- core: fix display of paste multi-line prompt with a root input bar ([bug #34305](https://savannah.nongnu.org/bugs/?34305))\n- core: replace deprecated GnuTLS function gnutls_certificate_client_set_retrieve_function by new function gnutls_certificate_set_retrieve_function (GnuTLS ≥ 2.11.0)\n- core: use dynamic buffer size for calls to vsnprintf\n- core: fix memory leak in unhook of hook_connect\n- core: fix memory leak in display of empty bar items\n- core: fix input of wide UTF-8 chars under Cygwin ([bug #34061](https://savannah.nongnu.org/bugs/?34061))\n- core: fix bugs with automatic layout ([bug #26110](https://savannah.nongnu.org/bugs/?26110)), add support of merged buffers in layout ([task #10893](https://savannah.nongnu.org/task/?10893))\n- core: fix crash when invalid UTF-8 chars are inserted in command line ([bug #33471](https://savannah.nongnu.org/bugs/?33471))\n- core: stop horizontal bar scroll at the end of content (for bars with horizontal filling) ([bug #27908](https://savannah.nongnu.org/bugs/?27908))\n- core: fix crash when building hashtable string with keys and values\n- core: replace buffer name by window number in `/bar scroll`\n- core: fix bugs with key \"^\" ([bug #32072](https://savannah.nongnu.org/bugs/?32072), [bug #21381](https://savannah.nongnu.org/bugs/?21381))\n- core: fix bugs with bar windows: do not create bar windows for hidden bars\n- core: fix completion bug when two words for completion are equal but with different case\n- core: fix completion for command arguments when same command exists in many plugins ([bug #33753](https://savannah.nongnu.org/bugs/?33753))\n- core: fix freeze when hook_fd is called with a bad file/socket ([bug #33619](https://savannah.nongnu.org/bugs/?33619))\n- core: fix bug with option weechat.look.hotlist_count_max (value+1 was used)\n- api: use arguments for infolist \"window\" to return only one window by number\n- api: fix bug with function config_set_desc_plugin (use immediately description for option when function is called)\n- scripts: fix crash with scripts not auto-loaded having a buffer opened after `/upgrade` (input/close callbacks for buffer not set properly)\n- irc: fix display of items \"away\" and \"lag\" in root bars, refresh all irc bar items on signal \"buffer_switch\" ([bug #34466](https://savannah.nongnu.org/bugs/?34466))\n- irc: fix crash on malformed irc notice received (without message after target)\n- irc: add missing messages for whois: 223, 264, 343\n- irc: use high priority queue for sending modes and wallchops messages\n- irc: rename info_hashtable \"irc_parse_message\" to \"irc_message_parse\"\n- irc: use color \"default\" for any invalid color in option weechat.color.chat_nick_colors\n- irc: send WHO command to check away nicks only if channel was not parted\n- irc: fix crash when malformed IRC message 352 (WHO) is received ([bug #33790](https://savannah.nongnu.org/bugs/?33790))\n- irc: fix crash when command `/buffer close` is used in a server command to close server buffer during connection ([bug #33763](https://savannah.nongnu.org/bugs/?33763))\n- irc: fix crash when `/join` command is executed on a non-irc buffer ([bug #33742](https://savannah.nongnu.org/bugs/?33742))\n- irc: fix bug with comma in irc color code: do not strip comma if it is not followed by a digit ([bug #33662](https://savannah.nongnu.org/bugs/?33662))\n- irc: switch to buffer on `/join #channel` if channel buffer already exists\n- irc: set host for nick on each channel message and nick change (if not already set)\n- irc: update host of nicks on manual `/who`\n- irc: fix memory leak on plugin unload (free ignores)\n- irc: fix memory leak in message parser (when called from other plugins like relay) ([bug #33387](https://savannah.nongnu.org/bugs/?33387))\n- relay: fix bug with self nick when someone changes its nick on channel ([bug #33739](https://savannah.nongnu.org/bugs/?33739))\n- relay: fix memory leak (free some parsed messages) ([bug #33387](https://savannah.nongnu.org/bugs/?33387))\n- relay: fix memory leak on plugin load (free raw messages)\n- perl: replace calls to SvPV by SvPV_nolen ([patch #7436](https://savannah.nongnu.org/patch/?7436))\n\n### Build\n\n- core: fix compilation error (INSTALLPREFIX undeclared) on macOS and when compiling with included gettext ([bug #26690](https://savannah.nongnu.org/bugs/?26690))\n\n## Version 0.3.5 (2011-05-15)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add buffer to hotlist if away is set on buffer (even if buffer is displayed), new option weechat.look.hotlist_add_buffer_if_away ([task #10948](https://savannah.nongnu.org/task/?10948))\n- core: add option `balance` in command `/window` (key: `Alt`+`w`, `Alt`+`b`)\n- core: add option `swap` in command `/window` (key: `Alt`+`w`, `Alt`+`s`) ([task #11001](https://savannah.nongnu.org/task/?11001))\n- core: add option weechat.look.hotlist_buffer_separator\n- core: add messages counts in hotlist for each buffer, new options: weechat.look.hotlist_count_max, weechat.look.hotlist_count_min_msg and weechat.color.status_count_{msg|private|highlight|other}\n- core: add tag \"notify_none\" (line with this tag will not update hotlist)\n- core: add optional bar name in command `/bar default`\n- core: add new option weechat.look.highlight_tags (force highlight on tags)\n- core: allow list of buffers in command `/filter` (exclusion with prefix \"!\") ([task #10880](https://savannah.nongnu.org/task/?10880))\n- core: allow relative size for command `/window resize`\n- core: add some default keys for gnome-terminal (`Home` / `End`, `Ctrl`+`Up` / `Ctrl`+`Down`, `Alt`+`PgUp` / `Alt`+`PgDn`)\n- core: add option `memory` in command `/debug`\n- core: add option weechat.look.read_marker_string\n- core: add some chars after cursor when scrolling input line: new option weechat.look.input_cursor_scroll ([bug #21391](https://savannah.nongnu.org/bugs/?21391))\n- core: add color \"gray\"\n- core: add attributes for colors (\"*\": bold, \"!\": reverse, \"_\": underline)\n- core: dynamically allocate color pairs (extended colors can be used without being added with command `/color`), auto reset of color pairs with option weechat.look.color_pairs_auto_reset\n- core: allow background for nick colors (using \":\")\n- core: remember scroll position for all buffers in windows ([bug #25555](https://savannah.nongnu.org/bugs/?25555))\n- core: improve display of commands lists in `/help` (add arguments -list and -listfull) ([task #10299](https://savannah.nongnu.org/task/?10299))\n- core: improve arguments displayed in `/help` of commands\n- api: add new function config_set_desc_plugin ([task #10925](https://savannah.nongnu.org/task/?10925))\n- api: add new functions buffer_match_list and window_search_with_buffer\n- aspell: add section \"option\" in aspell.conf for speller options ([task #11083](https://savannah.nongnu.org/task/?11083))\n- irc: add new options irc.color.topic_old and irc.color.topic_new\n- irc: add option \"ssl_priorities\" in servers ([task #10106](https://savannah.nongnu.org/task/?10106), [debian #624055](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=624055))\n- irc: add modifier \"irc_in2_xxx\" (called after charset decoding)\n- irc: add new options irc.look.buffer_switch_autojoin and irc.look.buffer_switch_join ([task #8542](https://savannah.nongnu.org/task/?8542), [task #10506](https://savannah.nongnu.org/task/?10506))\n- irc: add new option irc.look.smart_filter_nick\n- irc: add new options irc.look.color_nicks_in_nicklist and irc.look.color_nicks_in_names\n- irc: replace options irc.color.nick_prefix_{op|halfop|voice|user} by a single option irc.color.nick_prefixes ([task #10888](https://savannah.nongnu.org/task/?10888))\n\n### Bug fixes\n\n- core: fix scroll in windows with `/window scroll` (skip lines \"Day changed to\")\n- core: recalculate buffer_max_length when buffer short name is changed ([patch #7441](https://savannah.nongnu.org/patch/?7441))\n- core: do not update hotlist during upgrade\n- core: apply new value of option weechat.look.buffer_notify_default to all opened buffers\n- core: prohibit names beginning with \"#\" for bars, proxies, filters and IRC servers ([bug #33020](https://savannah.nongnu.org/bugs/?33020))\n- core: create default bars only if no bar is defined in configuration file\n- core: fix bug with repeat of last completion (\"%*\"), which failed when many templates are used in completion\n- core: reload file with certificate authorities when option weechat.network.gnutls_ca_file is changed\n- core: rebuild bar content when items are changed in an hidden bar\n- core: fix verification of SSL certificates by calling GnuTLS verify callback ([patch #7459](https://savannah.nongnu.org/patch/?7459), [CVE-2011-1428](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-1428))\n- core: fix crash when using column filling in bars with some empty items ([bug #32565](https://savannah.nongnu.org/bugs/?32565))\n- core: fix terminal title when $TERM starts with \"screen\"\n- plugins: fix memory leaks when setting buffer callbacks after `/upgrade` (plugins: irc, relay, xfer, scripts)\n- aspell: fix spellers used after switch of window ([bug #32811](https://savannah.nongnu.org/bugs/?32811))\n- irc: fix parsing of message 332 when no topic neither colon are found (bug with bip proxy)\n- irc: fix nick color in private when option irc.look.nick_color_force is changed\n- irc: fix tags for messages sent with `/msg` command ([bug #33169](https://savannah.nongnu.org/bugs/?33169))\n- irc: fix memory leak when copying or renaming server\n- irc: do not rejoin channels where `/part` has been issued before reconnection to server ([bug #33029](https://savannah.nongnu.org/bugs/?33029))\n- irc: use nick color for users outside the channel\n- irc: update short name of server buffer when server is renamed\n- irc: fix local variable \"away\" on server buffer (set/delete it each time away is set or removed on server)\n- irc: ignore join if nick is not self nick and if channel buffer does not exist ([bug #32667](https://savannah.nongnu.org/bugs/?32667))\n- irc: fix crash when setting wrong value in option irc.server.xxx.sasl_mechanism ([bug #32670](https://savannah.nongnu.org/bugs/?32670))\n- irc: fix crash when completing `/part` command on a non-irc buffer ([bug #32402](https://savannah.nongnu.org/bugs/?32402))\n- irc: add many missing commands for target buffer (options irc.msgbuffer.xxx) ([bug #32216](https://savannah.nongnu.org/bugs/?32216))\n- lua: fix crash when many scripts are executing callbacks at same time\n- perl: fix memory leak when calling Perl functions ([bug #32895](https://savannah.nongnu.org/bugs/?32895))\n- relay: fix crash on `/upgrade` when nick in irc client is not yet set\n- relay: allow colon in server password received from client\n- relay: do not send join for private buffers to client\n- rmodifier: fix reload of file rmodifier.conf\n- rmodifier: fix crash when adding rmodifier with invalid regex\n- xfer: do not close chat buffers when removing xfer from list ([bug #32271](https://savannah.nongnu.org/bugs/?32271))\n\n### Build\n\n- tcl: fix Tcl detection on some 64-bits systems ([bug #32915](https://savannah.nongnu.org/bugs/?32915))\n\n## Version 0.3.4 (2011-01-16)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add 256 colors support, new command `/color`, new section \"palette\" in weechat.conf ([task #6834](https://savannah.nongnu.org/task/?6834))\n- core: add info \"weechat_upgrading\", signal \"upgrade_ended\", display duration of upgrade\n- core: add new option weechat.look.highlight_regex and function string_has_highlight_regex in plugin API ([task #10321](https://savannah.nongnu.org/task/?10321))\n- core: add new option weechat.look.hotlist_unique_numbers ([task #10691](https://savannah.nongnu.org/task/?10691))\n- core: add property \"hotlist_max_level_nicks\" in buffers to set max hotlist level for some nicks in buffer\n- core: add new options weechat.look.input_share and weechat.look.input_share_overwrite ([task #9228](https://savannah.nongnu.org/task/?9228))\n- core: add new option weechat.look.prefix_align_min ([task #10650](https://savannah.nongnu.org/task/?10650))\n- core: replace the 10 nick color options and number of nick colors by a single option weechat.color.chat_nick_colors (comma separated list of colors)\n- core: add color support in option weechat.look.buffer_time_format\n- api: add priority for hooks ([task #10550](https://savannah.nongnu.org/task/?10550))\n- api: add new functions: list_search_pos, list_casesearch_pos, hashtable_get_string, hashtable_set_pointer, hook_info_hashtable, info_get_hashtable, hook_hsignal, hook_hsignal_send, hook_completion_get_string, nicklist_group_get_integer, nicklist_group_get_string, nicklist_group_get_pointer, nicklist_group_set, nicklist_nick_get_integer, nicklist_nick_get_string, nicklist_nick_get_pointer, nicklist_nick_set\n- irc: add option `-server` in command `/join` ([task #10837](https://savannah.nongnu.org/task/?10837))\n- irc: add option `-switch` in commands `/connect` and `/reconnect`\n- irc: add command `/notify`, new options irc.look.notify_tags_ison, irc.look.notify_tags_whois, irc.network.notify_check_ison, irc.network.notify_check_whois, new option \"notify\" in servers, new infolist \"irc_notify\" ([task #5441](https://savannah.nongnu.org/task/?5441))\n- irc: add new option irc.look.nick_color_force ([task #7374](https://savannah.nongnu.org/task/?7374))\n- irc: add command redirection with hsignals irc_redirect_pattern and irc_redirect_command ([task #6703](https://savannah.nongnu.org/task/?6703))\n- irc: add new options irc.color.nick_prefix and irc.color.nick_suffix\n- irc: add new option irc.look.item_away_message\n- irc: add tag \"nick_xxx\" in user messages\n- irc: move options from network section to server section: connection_timeout, anti_flood_prio_high, anti_flood_prio_low, away_check, away_check_max_nicks, default_msg_part, default_msg_quit ([task #10664](https://savannah.nongnu.org/task/?10664), [task #10668](https://savannah.nongnu.org/task/?10668))\n- irc: display old channel topic when topic is unset ([task #9780](https://savannah.nongnu.org/task/?9780))\n- irc: add new info_hashtable \"irc_parse_message\"\n- irc: add signal \"irc_input_send\"\n- irc: rename options irc.look.open_channel_near_server and irc.look.open_pv_near_server to irc.look.new_channel_position and irc.look.new_pv_position with new values (none, next or near_server)\n- rmodifier: new plugin \"rmodifier\": alter modifier strings with regular expressions ([bug #26964](https://savannah.nongnu.org/bugs/?26964))\n- relay: beta version of IRC proxy, now relay plugin is compiled by default\n- python: add info \"python2_bin\" (path to Python 2.x interpreter)\n\n### Bug fixes\n\n- core: fix scroll problem on buffers with free content and non-allocated lines ([bug #32039](https://savannah.nongnu.org/bugs/?32039))\n- core: call to function hook_config when config option is created\n- core: fix infinite loop on GnuTLS handshake when connecting with SSL to server on wrong port or server with SSL problems ([bug #27487](https://savannah.nongnu.org/bugs/?27487))\n- core: fix data sent to callback of hook_process (some data was sometimes missing), use a 64KB buffer for child output and send data to callback only when buffer is full\n- core: fix crash when displaying groups in buffer nicklist\n- core: fix bug with message \"day changed to\", sometimes displayed several times wrongly\n- core: fix default value of bar items options ([bug #31422](https://savannah.nongnu.org/bugs/?31422))\n- core: fix bug with buffer name in `/bar scroll` command\n- core: optimize incremental search in buffer: do not search anymore when chars are added to a text not found ([bug #31167](https://savannah.nongnu.org/bugs/?31167))\n- core: fix memory leaks when removing item in hashtable and when setting highlight words in buffer\n- core: use similar behavior for keys bound to local or global history ([bug #30759](https://savannah.nongnu.org/bugs/?30759))\n- alias: complete with alias value for second argument of command `/alias`\n- irc: differentiate notices from messages in private buffer ([bug #31980](https://savannah.nongnu.org/bugs/?31980))\n- irc: update nick modes with message 221 ([bug #32038](https://savannah.nongnu.org/bugs/?32038))\n- irc: fix bug with charset decoding on private buffers (decoding was made for local nick instead of remote nick) ([bug #31890](https://savannah.nongnu.org/bugs/?31890))\n- irc: allow command `/reconnect` on servers that are not currently connected ([bug #30726](https://savannah.nongnu.org/bugs/?30726))\n- irc: fix topic completion in command `/topic` when channel topic starts with channel name\n- irc: improve nick prefixes, all modes (even unknown) are used with PREFIX value from message 005\n- irc: fix crash/bug when option \"addresses\" for a server is unset or changed when WeeChat is connected to this server ([bug #31268](https://savannah.nongnu.org/bugs/?31268))\n- irc: switch to next server address when IRC error is received after TCP connection but before message 001 ([bug #30884](https://savannah.nongnu.org/bugs/?30884))\n- irc: fix bug with hostmasks in command `/ignore` ([bug #30716](https://savannah.nongnu.org/bugs/?30716))\n- relay: split of messages sent to clients of irc proxy\n- scripts: add missing function infolist_reset_item_cursor in API ([bug #31057](https://savannah.nongnu.org/bugs/?31057))\n- lua: fix crash when unloading script\n- xfer: fix dcc chat buffer name (use irc server in name) ([bug #29925](https://savannah.nongnu.org/bugs/?29925))\n- xfer: fix dcc file transfer for large files (more than 4 GB) on 32-bit systems ([bug #31531](https://savannah.nongnu.org/bugs/?31531))\n- xfer: fix bug at end of file sent, sometimes transfer is still active although file was successfully sent\n\n### Build\n\n- core: add support of Python 2.7 in CMake and configure ([debian #606989](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=606989))\n- ruby: fix compilation with Ruby 1.9.2 ([patch #7316](https://savannah.nongnu.org/patch/?7316))\n\n## Version 0.3.3 (2010-08-07)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: use \"!\" to reverse a regex in a filter (to keep lines matching regex and hide other lines) ([task #10032](https://savannah.nongnu.org/task/?10032))\n- core: add keys for undo/redo changes on command line (default: `Ctrl`+`_` and `Alt`+`_`) ([task #9483](https://savannah.nongnu.org/task/?9483))\n- core: add new option weechat.look.align_end_of_lines\n- core: add new option weechat.look.confirm_quit\n- core: add new option weechat.color.status_name_ssl ([task #10339](https://savannah.nongnu.org/task/?10339))\n- core: add hashtables with new functions in plugin API\n- api: add function string_expand_home, fix bug with replacement of home in paths\n- irc: add new option irc.look.nick_color_stop_chars\n- irc: add new options irc.look.display_host_join/join_local/quit and irc.color.reason_quit\n- irc: add command `/wallchops`, fix bug with display of notice for ops ([task #10021](https://savannah.nongnu.org/task/?10021), [bug #29932](https://savannah.nongnu.org/bugs/?29932))\n- irc: add isupport value in servers (content of IRC message 005), with new infos: irc_server_isupport and irc_server_isupport_value\n- irc: add message in private buffer when nick is back on server after a `/quit`\n- irc: add new options irc.network.autoreconnect_delay_growing and irc.network.autoreconnect_delay_max ([task #10338](https://savannah.nongnu.org/task/?10338))\n- irc: add missing commands 346, 347 (channel invite list)\n- irc: improve lag indicator: two colors (counting and finished), update item even when pong has not been received, lag_min_show is now in milliseconds\n- irc: move options weechat.color.nicklist_prefix to irc plugin\n- logger: use tag \"no_log\" to prevent a line from being written in log file\n\n### Bug fixes\n\n- core: fix bug with scroll_unread: do not scroll to a filtered line ([bug #29991](https://savannah.nongnu.org/bugs/?29991))\n- core: fix crash with hook_process (when timer is called on a deleted hook process)\n- core: fix display bug with special chars (ascii value below 32) ([bug #30602](https://savannah.nongnu.org/bugs/?30602))\n- core: fix display bug with attributes like underlined in bars ([bug #29889](https://savannah.nongnu.org/bugs/?29889))\n- api: fix bug with replacement char in function string_remove_color ([bug #30296](https://savannah.nongnu.org/bugs/?30296))\n- irc: fix bug in parser when no argument is received after command, no callback was called, and message was silently ignored ([bug #30640](https://savannah.nongnu.org/bugs/?30640))\n- irc: fix import of certificates created by OpenSSL ≥ 1.0.0 ([bug #30316](https://savannah.nongnu.org/bugs/?30316))\n- irc: fix display of local SSL certificate when it is sent to server ([patch #7218](https://savannah.nongnu.org/patch/?7218))\n- irc: use empty real name by default in config, instead of reading real name in /etc/passwd ([bug #30111](https://savannah.nongnu.org/bugs/?30111))\n- irc: fix bug with command line option \"irc://\" ([bug #29990](https://savannah.nongnu.org/bugs/?29990)), new format for port and channels\n- irc: fix display of messages 330 and 333 on some servers\n- irc: fix bug with nick prefix \"*\" (chan founder) on some IRC servers ([bug #29890](https://savannah.nongnu.org/bugs/?29890))\n- irc: fix bug with option irc.network.lag_check when value is 0 (zero)\n- irc: try other nick when connecting to server and receiving message 437 (nick unavailable)\n- irc: set buffer local variable \"away\" when opening new channel ([bug #29618](https://savannah.nongnu.org/bugs/?29618))\n- fifo: fix bug with fifo pipe when setting fifo option to \"on\"\n- xfer: fix bug with double quotes in DCC filenames ([bug #30471](https://savannah.nongnu.org/bugs/?30471))\n\n## Version 0.3.2 (2010-04-18)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add new options for command `/key`: `listdefault`, `listdiff` and `reset`\n- core: add new command `/mute`\n- core: add command line option `-s` (or `--no-script`) to start WeeChat without loading any script\n- core: improve plugins autoload (option weechat.plugin.autoload): allow to use \"*\" as wildcard and \"!\" to prevent a plugin from being autoloaded ([task #6361](https://savannah.nongnu.org/task/?6361))\n- core: add option \"switch_active_buffer_previous\" in command `/input` ([task #10141](https://savannah.nongnu.org/task/?10141))\n- core: add new option weechat.look.time_format to customize default format for date/time displayed (localized date by default), add function util_get_time_string in plugin API ([patch #6914](https://savannah.nongnu.org/patch/?6914))\n- core: add new option weechat.look.command_chars, add functions string_is_command_char and string_input_for_buffer in plugin and script API\n- core: add new option weechat.look.read_marker_always_show\n- api: add \"version_number\" for function info_get to get WeeChat version as number\n- api: add \"irc_is_nick\" for function info_get to check if a string is a valid IRC nick name ([patch #7133](https://savannah.nongnu.org/patch/?7133))\n- api: add functions string_encode_base64 and string_decode_base64, fix bug with base64 encoding\n- api: add functions string_match, string_has_highlight and string_mask_to_regex in script plugin API\n- api: add description of arguments for functions hook_info and hook_infolist\n- api: add signals \"day_changed\", \"nicklist_group_added/removed\", \"nicklist_nick_added/removed\"\n- alias: add custom completion for aliases ([task #9479](https://savannah.nongnu.org/task/?9479))\n- scripts: allow script commands to reload only one script\n- irc: add SASL authentication, with PLAIN and DH-BLOWFISH mechanisms ([task #8829](https://savannah.nongnu.org/task/?8829))\n- irc: add new option irc.look.part_closes_buffer to close buffer when `/part` is issued on channel ([task #10295](https://savannah.nongnu.org/task/?10295))\n- irc: add option `-open` in command `/connect`\n- irc: add option irc.network.connection_timeout (timeout between TCP connection to server and reception of message 001)\n- irc: add options irc.look.smart_filter_join and irc.look.smart_filter_quit\n- irc: add option irc.look.item_channel_modes_hide_key to hide channel key in channel modes ([bug #23961](https://savannah.nongnu.org/bugs/?23961))\n- irc: add option irc.look.item_nick_prefix\n- irc: add command `/map`\n- irc: add missing commands 276, 343\n- logger: allow date format in logger options path and mask ([task #9430](https://savannah.nongnu.org/task/?9430))\n- xfer: add signal \"xfer_ended\" ([patch #7081](https://savannah.nongnu.org/patch/?7081))\n\n### Bug fixes\n\n- core: remove unneeded space after time on each line if option weechat.look.buffer_time_format is set to empty value ([bug #28751](https://savannah.nongnu.org/bugs/?28751))\n- core: use arguments for infolist \"nicklist\" to return only one nick or group\n- core: fix bug with writing of configuration files when disk is full ([bug #29331](https://savannah.nongnu.org/bugs/?29331))\n- core: fix infinite loop with `/layout apply` and bug when applying layout, sometimes many `/layout apply` were needed ([bug #26110](https://savannah.nongnu.org/bugs/?26110))\n- gui: refresh screen when exiting WeeChat (to display messages printed after `/quit`)\n- gui: fix bug with global history, reset pointer to last entry after each user input ([bug #28754](https://savannah.nongnu.org/bugs/?28754))\n- gui: fix bug with bar background after text with background color ([bug #28157](https://savannah.nongnu.org/bugs/?28157))\n- gui: fix bug with cursor when position is last char of terminal\n- api: add missing infos in functions buffer_get_{integer|string} and in buffer infolist\n- api: fix function color in Lua script API\n- api: fix \"inactivity\" value when no key has been pressed since WeeChat started ([bug #28930](https://savannah.nongnu.org/bugs/?28930))\n- api: return absolute path for info_get of \"weechat_dir\" ([bug #27936](https://savannah.nongnu.org/bugs/?27936))\n- scripts: fix bug with callbacks when loading a script already loaded\n- perl: fix crash when multiplicity is disabled\n- perl: fix crash when callbacks are called during script initialization ([bug #29018](https://savannah.nongnu.org/bugs/?29018))\n- perl: fix crash on `/quit` or unload of plugin under FreeBSD and Cygwin ([bug #29467](https://savannah.nongnu.org/bugs/?29467))\n- perl: fix bug with script filename when multiplicity is disabled ([bug #29530](https://savannah.nongnu.org/bugs/?29530))\n- irc: fix crash with SSL connection if option ssl_cert is set ([bug #28752](https://savannah.nongnu.org/bugs/?28752))\n- irc: fix bug with SSL connection (fails sometimes when ssl_verify is on) ([bug #28741](https://savannah.nongnu.org/bugs/?28741))\n- irc: fix bug with nicks on reconnection: try all nicks in list, even if nick used was not the first in list of nicks\n- irc: fix command `/list`: send channel and server name given as argument, and use separate option `-re` to allow a regex\n- irc: fix PART message received on Undernet server ([bug #28825](https://savannah.nongnu.org/bugs/?28825))\n- irc: fix bug with `/away -all`: set or unset future away for disconnected servers ([bug #29022](https://savannah.nongnu.org/bugs/?29022))\n- irc: fix bug with prefix \"!\" for mode \"a\" (channel admin) ([bug #29109](https://savannah.nongnu.org/bugs/?29109))\n- irc: do not send signals \"irc_in\" and \"irc_in2\" when messages are ignored, add new signals \"irc_raw_in\" and \"irc_raw_in2\"\n- irc: apply smart filter only on channels, not private buffers ([bug #28841](https://savannah.nongnu.org/bugs/?28841))\n- xfer: fix crash when purging old xfer chats ([bug #28764](https://savannah.nongnu.org/bugs/?28764))\n\n### Build\n\n- irc: fix compilation with old GnuTLS versions ([bug #28723](https://savannah.nongnu.org/bugs/?28723))\n\n## Version 0.3.1.1 (2010-01-31)\n\n### Bug fixes\n\n- irc: fix crash with SSL connection if option ssl_cert is set ([bug #28752](https://savannah.nongnu.org/bugs/?28752))\n- irc: fix bug with SSL connection (fails sometimes when ssl_verify is on) ([bug #28741](https://savannah.nongnu.org/bugs/?28741))\n- xfer: fix crash when purging old xfer chats ([bug #28764](https://savannah.nongnu.org/bugs/?28764))\n\n### Build\n\n- irc: fix compilation with old GnuTLS versions ([bug #28723](https://savannah.nongnu.org/bugs/?28723))\n\n## Version 0.3.1 (2010-01-23)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add option \"grab_key_command\" in command `/input` (bound by default to `Alt`+`k`)\n- alias: new expansions for alias arguments ($n, $-m, $n-, $n-m, $*, $~) ([patch #6917](https://savannah.nongnu.org/patch/?6917))\n- alias: allow use of wildcards for `/alias list` ([patch #6925](https://savannah.nongnu.org/patch/?6925))\n- alias: allow `/unalias` to remove multiple aliases ([patch #6926](https://savannah.nongnu.org/patch/?6926))\n- irc: add new commands `/allchan` and `/allserv` with excluding option, commands `/ame` and `/amsg` are now aliases, new aliases `/aaway` and `/anick`\n- irc: add options to customize target buffer for messages ([task #7381](https://savannah.nongnu.org/task/?7381))\n- irc: add new output queue for messages with low priority (like automatic CTCP replies), high priority is given to user messages or commands\n- irc: use self-signed certificate to auto identify on IRC server (CertFP) ([task #7492](https://savannah.nongnu.org/task/?7492), [debian #453348](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=453348))\n- irc: check SSL certificates ([task #7492](https://savannah.nongnu.org/task/?7492))\n- irc: add option \"autorejoin_delay\" for servers ([task #8771](https://savannah.nongnu.org/task/?8771))\n- irc: add option to use same nick color in channel and private ([task #9870](https://savannah.nongnu.org/task/?9870))\n- irc: add missing command 275 ([patch #6952](https://savannah.nongnu.org/patch/?6952))\n- irc: add commands `/sajoin`, `/samode`, `/sanick`, `/sapart`, `/saquit` ([task #9770](https://savannah.nongnu.org/task/?9770))\n- irc: add options for CTCP, to block/customize CTCP reply ([task #9693](https://savannah.nongnu.org/task/?9693))\n- irc: add missing CTCP: clientinfo, finger, source, time, userinfo ([task #7270](https://savannah.nongnu.org/task/?7270))\n- irc: add all server options for commands `/server` and `/connect`\n- irc: add arguments for command `/rehash`\n- irc: improve mask used by command `/kickban`\n- xfer: add color for nicks in chat\n- xfer: add missing command `/me` ([bug #28658](https://savannah.nongnu.org/bugs/?28658))\n- gui: add color \"darkgray\", add support for background with light color\n\n### Bug fixes\n\n- core: fix bug with script installation on BSD/macOS ([patch #6980](https://savannah.nongnu.org/patch/?6980))\n- core: fix compilation under Cygwin ([patch #6916](https://savannah.nongnu.org/patch/?6916))\n- core: fix plural form in translation files ([bug #27430](https://savannah.nongnu.org/bugs/?27430))\n- core: fix terminal title bug: do not reset it when option weechat.look.set_title is off ([bug #27399](https://savannah.nongnu.org/bugs/?27399))\n- core: fix buffer used by some input functions called via plugin API with buffer pointer ([bug #28152](https://savannah.nongnu.org/bugs/?28152))\n- alias: fix bug with buffer for execution of alias, when called from plugin API with function command ([bug #27697](https://savannah.nongnu.org/bugs/?27697))\n- alias: fix bug with arguments ([bug #27440](https://savannah.nongnu.org/bugs/?27440))\n- irc: improve error management on socket error (recv/send)\n- irc: fix nick color for nicks with wide chars ([bug #28547](https://savannah.nongnu.org/bugs/?28547))\n- irc: fix autorejoin on channels with key\n- irc: fix command `/connect` (options -ssl, -ipv6 and -port) ([bug #27486](https://savannah.nongnu.org/bugs/?27486))\n- xfer: add missing charset decoding/encoding for IRC DCC chat ([bug #27482](https://savannah.nongnu.org/bugs/?27482))\n- fifo: remove old pipes before creating new pipe\n- gui: fix color \"black\" ([bug #23882](https://savannah.nongnu.org/bugs/?23882), [debian #512957](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=512957))\n- gui: fix message \"Day changed to\", sometimes displayed at wrong time ([bug #26959](https://savannah.nongnu.org/bugs/?26959))\n- gui: fix bug with URL selection in some terminals (caused by horizontal lines) ([bug #27700](https://savannah.nongnu.org/bugs/?27700))\n- gui: use default auto completion for arguments of unknown commands\n- gui: fix alignment problem for buffer name when a merged buffer is closed ([bug #27617](https://savannah.nongnu.org/bugs/?27617))\n- gui: update hotlist when a buffer is closed ([bug #27470](https://savannah.nongnu.org/bugs/?27470)), remove buffer from hotlist when buffer is cleared ([bug #27530](https://savannah.nongnu.org/bugs/?27530))\n- gui: fix `/input history_global_next`: reset input content when last command in history is reached\n- api: fix function bar_set for python/lua/ruby ([patch #6912](https://savannah.nongnu.org/patch/?6912))\n\n### Build\n\n- core: fix CMake directories: let user customize lib, share, locale and include directories ([patch #6922](https://savannah.nongnu.org/patch/?6922))\n- ruby: add support of Ruby ≥ 1.9.1 ([patch #6989](https://savannah.nongnu.org/patch/?6989))\n\n## Version 0.3.0 (2009-09-06)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- core: add group support in nicklist\n- core: add `/reload` command to reload WeeChat and plugins config files (signal SIGHUP is caught to reload config files)\n- core: add new `/layout` command and save_layout_on_exit config option, to save/restore windows and buffers order ([task #5453](https://savannah.nongnu.org/task/?5453))\n- core: add new options for completion, optional stop instead of cycling with words found ([task #5909](https://savannah.nongnu.org/task/?5909))\n- core: new name for configuration files (*.conf instead of *.rc)\n- core: improve `/set` command, new command `/unset` ([task #6085](https://savannah.nongnu.org/task/?6085))\n- core: add new input action \"set_unread_current_buffer\" to set unread marker for current buffer only ([task #7286](https://savannah.nongnu.org/task/?7286))\n- core: remove key functions, replaced by `/input` command\n- core: add argument with buffer number/range for command `/buffer close` ([task #9390](https://savannah.nongnu.org/task/?9390), [task #7239](https://savannah.nongnu.org/task/?7239))\n- core: add new command `/wait` (schedule a command execution in future)\n- core: improve main loop: higher timeout in select, less CPU usage\n- gui: new display engine, with prefix and message for each line\n- gui: add new type of buffer, with free content\n- gui: add tags for lines and custom filtering by tags or regex ([task #7674](https://savannah.nongnu.org/task/?7674))\n- gui: add buffer merging ([task #7404](https://savannah.nongnu.org/task/?7404))\n- gui: add custom bars, with custom items\n- gui: add key to zoom a window ([task #7470](https://savannah.nongnu.org/task/?7470))\n- gui: add keys to move into last visited buffers: `Alt`+`<` and `Alt`+`>`\n- gui: come back to last visited buffer when closing a buffer\n- gui: add new option scroll_page_percent to choose percent of height to scroll with `PgUp` and `PgDn` keys ([task #8702](https://savannah.nongnu.org/task/?8702))\n- gui: add number of lines remaining after last line displayed in \"-MORE-\" indicator ([task #6702](https://savannah.nongnu.org/task/?6702))\n- network: add support for more than one proxy, with proxy selection for each IRC server ([task #6859](https://savannah.nongnu.org/task/?6859))\n- aspell: improve plugin: use of many dictionaries, global dictionary, real time checking (optional), fix bugs with utf-8\n- irc: add irc plugin (replaces old IRC code in core) ([task #6217](https://savannah.nongnu.org/task/?6217))\n- irc: add smart join/part/quit message filter ([task #8503](https://savannah.nongnu.org/task/?8503))\n- irc: use of many addresses for servers (auto-switch when a connection fails), nicks are now set with one option \"nicks\" ([task #6088](https://savannah.nongnu.org/task/?6088))\n- irc: add some colors in messages from server (for text and nicks) ([task #8926](https://savannah.nongnu.org/task/?8926))\n- irc: add color decoding in title for IRC channels ([task #6030](https://savannah.nongnu.org/task/?6030))\n- irc: add missing commands (328, 369)\n- logger: add logger plugin with new features: backlog, level for messages to log ([task #8592](https://savannah.nongnu.org/task/?8592)), level by buffer ([task #6687](https://savannah.nongnu.org/task/?6687)), filename mask by buffer, option \"name_lower_case\" ([bug #19522](https://savannah.nongnu.org/bugs/?19522))\n- relay: add relay plugin (network communication between WeeChat and remote application)\n- xfer: add speed limit for DCC files sending ([task #6178](https://savannah.nongnu.org/task/?6178))\n- xfer: add new option xfer.file.use_nick_in_filename for Xfer files ([task #7140](https://savannah.nongnu.org/task/?7140))\n- plugins: add some other plugins: alias, demo, fifo, tcl, xfer\n- scripts: new scripts: weeget.py (script manager), jabber.py (jabber/XMPP protocol), go.py (quick jump to buffers), buffers.pl (sidebar with list of buffers), iset.pl (set options interactively), weetris.pl (tetris-like game), mastermind.pl, ...\n- api: add hooks: command, timer, file descriptor, process, connection, print, signal, config, completion, modifier, info, infolist\n- api: new plugin API with many new functions: hooks, buffer management and nicklist, bars, configuration files, network, infos/infolists, lists, upgrade\n\n### Internationalization\n\n- add Polish translations\n\n### Bug fixes\n\n- core: fix nick completion bug (missing space after nick)\n- gui: fix completion with non-latin nicks ([bug #18993](https://savannah.nongnu.org/bugs/?18993))\n- gui: fix display bug with some weird UTF-8 chars ([bug #19687](https://savannah.nongnu.org/bugs/?19687))\n- gui: fix bug with wide chars in input ([bug #16356](https://savannah.nongnu.org/bugs/?16356))\n- gui: fix bug when switching window, scrollback is now preserved ([task #7680](https://savannah.nongnu.org/task/?7680))\n- network: fix network connection for hostnames resolving to several IPs: try all IPs in list until one succeeds ([bug #21473](https://savannah.nongnu.org/bugs/?21473), [debian #498610](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=498610))\n- alias: fix bug with alias, use current buffer to run commands ([bug #22876](https://savannah.nongnu.org/bugs/?22876))\n- irc: fix lock with SSL servers when connection fails, and when disconnecting during connection problem ([bug #17584](https://savannah.nongnu.org/bugs/?17584))\n- irc: command `/whois` is now authorized in private without argument ([task #7482](https://savannah.nongnu.org/task/?7482))\n- irc: fix private buffer name with Irssi proxy ([bug #26589](https://savannah.nongnu.org/bugs/?26589))\n- irc: remove kernel info in CTCP VERSION reply ([task #7494](https://savannah.nongnu.org/task/?7494))\n- irc: fix mode parsing when receiving modes with arguments ([bug #26793](https://savannah.nongnu.org/bugs/?26793))\n- scripts: do not auto-load hidden files ([bug #21390](https://savannah.nongnu.org/bugs/?21390))\n\n## Version 0.2.6.3 (2009-06-13)\n\n### Bug fixes\n\n- fix GnuTLS detection (use pkg-config instead of libgnutls-config) ([bug #26790](https://savannah.nongnu.org/bugs/?26790))\n\n## Version 0.2.6.2 (2009-04-18)\n\n### Bug fixes\n\n- fix bug with charset decoding (for example with iso2022jp) ([bug #26228](https://savannah.nongnu.org/bugs/?26228))\n\n## Version 0.2.6.1 (2009-03-14)\n\n### Bug fixes\n\n- fix crash with some special chars in IRC messages ([bug #25862](https://savannah.nongnu.org/bugs/?25862), [CVE-2009-0661](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-0661))\n\n## Version 0.2.6 (2007-09-06)\n\n### New features\n\n- add new option `deloutq` to `/server` command to delete all servers messages out queues ([task #7221](https://savannah.nongnu.org/task/?7221))\n- add string length limit for setup file options\n- add option to align text of messages (except first lines) ([task #7246](https://savannah.nongnu.org/task/?7246))\n- add paste detection, new options look_paste_max_lines and col_input_actions ([task #5442](https://savannah.nongnu.org/task/?5442))\n- add support of channel mode +u (channel user) ([bug #20717](https://savannah.nongnu.org/bugs/?20717))\n- improve `/connect` command to connect to a host by creating a temporary server, add option to `/server` to create temporary server ([task #7095](https://savannah.nongnu.org/task/?7095))\n- add `copy`, `rename` and `keep` options to `/server` command\n- allow clear of multiple selected buffers with `/clear` ([patch #6112](https://savannah.nongnu.org/patch/?6112))\n- add key for setting unread marker on all buffers (default: `Ctrl`+`s`, `Ctrl`+`u`) ([task #7180](https://savannah.nongnu.org/task/?7180))\n- improve command `/server` ant its output\n- add 3 default new keys: `Ctrl`+`b` (left), `Ctrl`+`f` (right), `Ctrl`+`d` (delete)\n- add \"buffer_move\" event handler to plugins API ([task #6708](https://savannah.nongnu.org/task/?6708))\n- add key function \"jump_previous_buffer\" to jump to buffer previously displayed (new key: `Alt`+`j`, `Alt`+`p`) ([task #7085](https://savannah.nongnu.org/task/?7085))\n- add \"%*\" to completion template, to repeat last completion\n- add `-nojoin` option for `/connect` and `/reconnect` commands ([task #7074](https://savannah.nongnu.org/task/?7074))\n- add `scroll` option to `/buffer` command\n- down key now saves input to history and clears input line ([task #7049](https://savannah.nongnu.org/task/?7049))\n- command `/away` allowed when not connected to server (internally stored and AWAY command is sent when connecting to server) ([task #7003](https://savannah.nongnu.org/task/?7003))\n- add argument for `/upgrade` command (path to binary)\n- add hotlist sort with new option \"look_hotlist_sort\" ([task #5870](https://savannah.nongnu.org/task/?5870))\n\n### Bug fixes\n\n- fix bug with log of plugin messages (option log_plugin_msg)\n- fix display bug with some special chars in messages (some words were truncated on screen) ([bug #20944](https://savannah.nongnu.org/bugs/?20944))\n- fix UTF-8 bug with color encoding/decoding\n- fix crash when searching text in buffer with `Ctrl`+`r` ([bug #20938](https://savannah.nongnu.org/bugs/?20938))\n- fix bug with flock when home is on NFS filesystem ([bug #20913](https://savannah.nongnu.org/bugs/?20913))\n- fix user modes in nicklist when ban and nick mode are received in the same MODE message ([bug #20870](https://savannah.nongnu.org/bugs/?20870))\n- fix IRC message 333: silently ignore message if error when parsing it\n- fix server option \"command_delay\": does not freeze WeeChat anymore\n- fix bug with highlight and UTF-8 chars around word ([bug #20753](https://savannah.nongnu.org/bugs/?20753))\n- fix nick prefix display on servers that doesn't support all prefixes ([bug #20025](https://savannah.nongnu.org/bugs/?20025))\n- fix terminal encoding detection when NLS is disabled ([bug #20646](https://savannah.nongnu.org/bugs/?20646))\n- fix crash when sending data to channel or pv on disconnected server ([bug #20524](https://savannah.nongnu.org/bugs/?20524))\n- fix bugs with IRC color in messages, now color codes are inserted in command line with `Ctrl`+`c`, `Ctrl`+`b` instead of `%C,%B` ([bug #20222](https://savannah.nongnu.org/bugs/?20222), [task #7060](https://savannah.nongnu.org/task/?7060))\n- fix bug with smart nick completion (last speakers first) when a nick is changed\n- fix charset bug with channel names in status bar ([bug #20400](https://savannah.nongnu.org/bugs/?20400))\n- fix log file when channel name contains \"/\" ([bug #20072](https://savannah.nongnu.org/bugs/?20072))\n- fix bug with `/topic` when channel not open and topic not defined ([bug #20141](https://savannah.nongnu.org/bugs/?20141))\n\n### Documentation\n\n- add Swedish quickstart guide\n\n## Version 0.2.5 (2007-06-07)\n\n### New features\n\n- add missing IRC commands (327, 378, 379) ([bug #20091](https://savannah.nongnu.org/bugs/?20091))\n- add \"%M\" for completion with nicks of current server (nicks on open channels) ([task #6931](https://savannah.nongnu.org/task/?6931))\n- improve key bindings: now possible to bind a key on many commands, separated by semicolon ([task #5444](https://savannah.nongnu.org/task/?5444))\n- improve IRC long message split: use word boundary ([task #6685](https://savannah.nongnu.org/task/?6685))\n- add protocol priority for GnuTLS ([patch #5915](https://savannah.nongnu.org/patch/?5915))\n- add channel admin mode \"!\" for some IRC servers\n- add `/reconnect` command ([task #5448](https://savannah.nongnu.org/task/?5448))\n- add `-all` option for `/connect` and `/disconnect` commands ([task #6232](https://savannah.nongnu.org/task/?6232))\n- improve nick completion: completion with last speakers first and self nick at the end; add option look_nick_completion_smart, enabled by default ([task #5896](https://savannah.nongnu.org/task/?5896))\n- add color for input text not found in buffer history\n\n### Bug fixes\n\n- fix `/quote` command: now allowed when socket is OK (even if IRC connection to server is not OK) ([bug #20113](https://savannah.nongnu.org/bugs/?20113))\n- fix hotlist when exiting search mode: current buffer is removed from hotlist\n- remove \":\" for unknown IRC commands before arguments ([bug #19929](https://savannah.nongnu.org/bugs/?19929))\n- fix \"%C\" completion: now completes with all channels of all servers\n- fix bug with `/buffer query_name`, add server and channel completion for `/buffer` command ([bug #19928](https://savannah.nongnu.org/bugs/?19928))\n- fix IRC mode parsing when receiving modes with arguments ([bug #19902](https://savannah.nongnu.org/bugs/?19902))\n- fix crash with IRC JOIN malformed message ([bug #19891](https://savannah.nongnu.org/bugs/?19891))\n- fix bug with nick prefixes on some IRC servers ([bug #19854](https://savannah.nongnu.org/bugs/?19854))\n- improve setup file save: now writes temporary file, then rename it ([task #6847](https://savannah.nongnu.org/task/?6847))\n- fix bug with $nick/$channel/$server variables in commands\n- forget current nick when user manually disconnects from server\n- fix nick display in input window\n- fix bug with erroneous nickname when connecting to server ([bug #19812](https://savannah.nongnu.org/bugs/?19812))\n- fix display bugs in IRC error messages\n- fix bug with iso2022jp locale ([bug #18719](https://savannah.nongnu.org/bugs/?18719))\n- fix string format bug when displaying string through plugin script API\n- fix nick completion in command arguments ([bug #19590](https://savannah.nongnu.org/bugs/?19590))\n- fix possible crash with nick completion when a nick leaves channel ([bug #19589](https://savannah.nongnu.org/bugs/?19589))\n- fix USER message when connecting to IRC server ([patch #5835](https://savannah.nongnu.org/patch/?5835))\n\n### Build\n\n- add CMake for weechat compilation ([patch #5943](https://savannah.nongnu.org/patch/?5943))\n\n## Version 0.2.4 (2007-03-29)\n\n### New features\n\n- rename log file for DCC chat (now <server>.dcc.<nick>.weechatlog)\n- add current buffer in hotlist when scrolling up in buffer ([task #6664](https://savannah.nongnu.org/task/?6664))\n- improve password hiding, code cleanup ([bug #19229](https://savannah.nongnu.org/bugs/?19229))\n- add new return code in plugin API to force highlight (for message handlers only)\n- add `call` option to `/key` command, add new key function \"insert\" to insert text on command line ([task #6468](https://savannah.nongnu.org/task/?6468))\n- add event handler to plugin API\n- add numeric argument for `/clear` command (buffer number) ([patch #5372](https://savannah.nongnu.org/patch/?5372))\n- add new key (`Ctrl`+`r`) for interactive and incremental search in buffer history ([task #6628](https://savannah.nongnu.org/task/?6628))\n\n### Bug fixes\n\n- fix color bug with IRC messages displayed by plugins ([bug #19442](https://savannah.nongnu.org/bugs/?19442))\n- fix topic charset, now using channel charset if defined ([bug #19386](https://savannah.nongnu.org/bugs/?19386))\n- fix crash when closing a pv if a DCC chat is open on same nick ([bug #19147](https://savannah.nongnu.org/bugs/?19147))\n- fix bug with channel topic after reconnection (not erased) ([bug #19384](https://savannah.nongnu.org/bugs/?19384))\n- fix bug with explode_string / free_exploded_string when max_items > 0\n- fix `/topic` completion when no topic set on current channel ([bug #19322](https://savannah.nongnu.org/bugs/?19322))\n- fix bug with server buffer when \"look_one_server_buffer\" is ON and server buffer is moved to any number > 1 ([bug #19219](https://savannah.nongnu.org/bugs/?19219))\n- fix `/help` command: displays plugin help for redefined commands ([bug #19166](https://savannah.nongnu.org/bugs/?19166))\n- prefix \"/\" disabled in commands ([patch #5769](https://savannah.nongnu.org/patch/?5769))\n- fix completion of redefined commands removed by plugins ([bug #19176](https://savannah.nongnu.org/bugs/?19176))\n- fix memory leaks in perl and python plugins ([bug #19163](https://savannah.nongnu.org/bugs/?19163))\n- fix permissions on \"dcc\" and \"logs\" directories ([bug #18978](https://savannah.nongnu.org/bugs/?18978))\n- fix crash when `/away` command is issued with no server connection ([bug #18839](https://savannah.nongnu.org/bugs/?18839))\n- fix crash when closing a buffer opened on many windows\n- fix freeze with SSL server when disconnecting after connection loss ([bug #18735](https://savannah.nongnu.org/bugs/?18735))\n\n### Documentation\n\n- add Scots quickstart guide\n\n## Version 0.2.3 (2007-01-10)\n\n### Bug fixes\n\n- fix display bugs with nicklist at top/bottom when look_nicklist_separator is OFF ([bug #18737](https://savannah.nongnu.org/bugs/?18737))\n- fix iconv problem, causing truncated words when using iso locale\n- fix topic scroll when topic has multi-bytes chars\n- fix bugs with charset: now decodes/encodes nicks and channels in IRC messages ([bug #18716](https://savannah.nongnu.org/bugs/?18716))\n\n### Build\n\n- fix compilation problem with iconv under FreeBSD\n\n## Version 0.2.2 (2007-01-06)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- add anti-flood option (irc_anti_flood) ([task #5442](https://savannah.nongnu.org/task/?5442))\n- plugins: \"add_message_handler\" now accepts \"*\" for all IRC messages\n- add keys (`F9` / `F10`) to scroll topic ([task #6030](https://savannah.nongnu.org/task/?6030))\n- add auto completion with channels and filenames ([task #5423](https://savannah.nongnu.org/task/?5423))\n- add option \"look_nicklist_separator\" ([task #5437](https://savannah.nongnu.org/task/?5437))\n- add \"irc_send_unknown_commands\" option to send unknown commands to IRC server (OFF by default) ([task #5947](https://savannah.nongnu.org/task/?5947))\n- `/charset` command and charset conversions now made by \"charset\" plugin\n- add filename completion ([task #5425](https://savannah.nongnu.org/task/?5425))\n- add \"modifier\" in plugins API\n- improve `/plugin` command\n- add date in plugin function get_buffer_data\n- add more values for config boolean values: y/true/t/1 and n/false/f/0\n\n### Bug fixes\n\n- fix bug with status bar (missing refresh) when closing a buffer\n- fix bug with use of first buffer for a channel if not connected to server (now allowed only for a server buffer)\n- fix refresh bug with private buffer title\n- fix bug with nick completion in command arguments (now uses option look_nick_completion_ignore)\n- fix display bug with color for first line on screen ([bug #17719](https://savannah.nongnu.org/bugs/?17719))\n- fix bug with set_config function in plugins API ([bug #18448](https://savannah.nongnu.org/bugs/?18448))\n- fix memory leak in keyboard input\n- fix refresh bug when changing config options if window is split\n- add space between chat and nicklist when position is \"right\" ([bug #17852](https://savannah.nongnu.org/bugs/?17852))\n- fix bug with DCC SEND when filename begins with \"~\"\n- fix display bug in status bar, wrong length when using UTF-8\n- fix bug with ignore: now any IRC command is allowed\n- fix crash with `Ctrl`+`t` (transpose) and one char on line ([bug #18153](https://savannah.nongnu.org/bugs/?18153))\n- fix bug on ignore with \"mode\" IRC command ([bug #18058](https://savannah.nongnu.org/bugs/?18058))\n- fix crash when loading ruby script if file does not exist, with Ruby ≥ 1.9 only ([bug #18064](https://savannah.nongnu.org/bugs/?18064))\n- mode changes with `/op`, `/deop`, `/voice`, `/devoice`, `/halfop`, `/dehalfop` are now sent in one mode command to server ([task #5968](https://savannah.nongnu.org/task/?5968))\n- fix bug with `/alias` and arguments (like $1), now text after argument(s) is used ([bug #17944](https://savannah.nongnu.org/bugs/?17944))\n- fix minor display bug with special chars on some arch like PPC\n\n### Build\n\n- fix some portability bugs ([patch #5271](https://savannah.nongnu.org/patch/?5271))\n- fix iconv detection for BSD ([patch #5456](https://savannah.nongnu.org/patch/?5456))\n- fix typo in configure.in (bash specific test) ([patch #5450](https://savannah.nongnu.org/patch/?5450))\n\n## Version 0.2.1 (2006-10-01)\n\n### New features\n\n- command `/away -all` now allowed when not connected to current server\n- new signals handled: SIGTERM and SIGHUP (received when terminal is closed): clean WeeChat quit (send quit to irc servers then quit WeeChat)\n- add some new default key bindings for existing keys (for some OS)\n- command `/key` now OK with one argument (key name): display key if found\n- add current channel completion for `/ctcp` command\n- values yes/no accepted (as on/off) for config boolean values ([task #5454](https://savannah.nongnu.org/task/?5454))\n- add server default notify level (set by `/buffer notify` on server buffer) ([task #5634](https://savannah.nongnu.org/task/?5634))\n- add special vars $nick/$channel/$server for server_command, alias and plugin command handlers\n- add arguments $1,$2,..,$9 and $* for alias ([task #5831](https://savannah.nongnu.org/task/?5831))\n- add hotlist in session file when using `/upgrade` command ([task #5449](https://savannah.nongnu.org/task/?5449))\n\n### Bug fixes\n\n- fix crash for DCC receiver when resuming a file ([bug #17885](https://savannah.nongnu.org/bugs/?17885))\n- fix DCC error for sender when receiver cancels DCC ([bug #17838](https://savannah.nongnu.org/bugs/?17838))\n- fix random crash with `/upgrade` command (error when loading buffers)\n- fix buffer search by server/channel: now if only channel is specified, a channel of another server can be found\n- fix highlight for DCC, invite and notice: when a window is displaying buffer, there's no highlight\n- fix bug with CTCP VERSION sent on channels ([bug #17547](https://savannah.nongnu.org/bugs/?17547))\n- fix bugs in get_buffer_data which breaks the retrieval of buffer content (perl, lua)\n- fix nicklist display bug when top/bottom (not enough lines) ([bug #17537](https://savannah.nongnu.org/bugs/?17537))\n- fix bug with auto-rejoin of keyed channels ([bug #17534](https://savannah.nongnu.org/bugs/?17534))\n- add default nick completion when line starts with \"//\" ([bug #17535](https://savannah.nongnu.org/bugs/?17535))\n- fix crashes with `/buffer` and `/charset` commands when not connected to any server ([bug #17525](https://savannah.nongnu.org/bugs/?17525))\n- fix nick refresh problem with unrealircd specific modes: chan owner (~) and chan admin (&) ([bug #17340](https://savannah.nongnu.org/bugs/?17340))\n\n## Version 0.2.0 (2006-08-19)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- add \"C\"lear option on IRC raw buffer\n- IRC raw buffer now uses join/part prefix with color to display messages\n- add send of \"quit\" message to server when using `/disconnect`\n- add \"%m\" for completion with self nick (on current server)\n- add missing IRC commands (310, 326, 329, 338)\n- improve DCC speed (up to x5 on LAN) by forking for DCC files and a new option \"dcc_fast_send\" (does not wait for ACK) ([task #5758](https://savannah.nongnu.org/task/?5758))\n- add \"look_save_on_exit\" option (patch from Emanuele Giaquinta)\n- add new functions in plugin/script API: get window info, get buffer info, get buffer content\n- add color encoding for some commands like `/me`\n- add aspell plugin\n\n### Bug fixes\n\n- fix \"wallops\" command when received, now displayed by WeeChat ([bug #17441](https://savannah.nongnu.org/bugs/?17441))\n- fix `/wallops` command (now many words are correctly sent)\n- fix command 348 (channel exception list, received by `/mode #chan e`)\n- add missing modes (channel & user), now all modes are allowed ([bug #16606](https://savannah.nongnu.org/bugs/?16606))\n- fix DCC restore after `/upgrade` (order is now correctly saved)\n- fix away after server disconnection (now away is set again when reconnecting) ([bug #16359](https://savannah.nongnu.org/bugs/?16359))\n- fix DCC file connection problem (connection from receiver to sender)\n- fix crash when purging DCC with high number of DCC (> window size)\n- fix completion for command handlers (now empty completion_template means nick completion, \"-\" string means no completion at all)\n- fix nick alignment problem when look_nickmode is off\n- add generic function for incoming numeric IRC commands ([bug #16611](https://savannah.nongnu.org/bugs/?16611))\n- fix crash when doing `/part something` on a server buffer ([bug #17201](https://savannah.nongnu.org/bugs/?17201))\n- charsets are now checked when set by `/charset` command\n- fix crash on DCC buffer under Darwin 8 ([bug #17115](https://savannah.nongnu.org/bugs/?17115))\n- fix bug with spaces in script names ([bug #16957](https://savannah.nongnu.org/bugs/?16957))\n- fix random crash when \"MODE #chan -l\" is received\n- fix bug in IRC parser (random crash with malformed IRC messages)\n- fix refresh bugs when terminal is resized: too many refreshes, display bug with split windows\n- case ignored for channel names in charset options ([bug #16858](https://savannah.nongnu.org/bugs/?16858))\n- fix crash when setting look_one_server_buffer to ON ([bug #16932](https://savannah.nongnu.org/bugs/?16932))\n- fix display bug with special char ([bug #16732](https://savannah.nongnu.org/bugs/?16732))\n- rename plugins names (remove \"lib\" prefix in name)\n- fix crash when closing DCC/raw buffer if 2 are open ([bug #16808](https://savannah.nongnu.org/bugs/?16808))\n- fix crashes with DCC chat remove/purge on DCC view ([bug #16775](https://savannah.nongnu.org/bugs/?16775))\n- fix bug with connection to bnc ([bug #16760](https://savannah.nongnu.org/bugs/?16760))\n- command `/save` now writes plugins options (~/.weechat/plugins.rc)\n- fix crash with register function in plugin scripts ([bug #16701](https://savannah.nongnu.org/bugs/?16701))\n- fix random crash at exit (`/quit` or `/upgrade`) with split windows\n\n### Documentation\n\n- add Polish, Russian and Czech quickstart guide\n\n### Build\n\n- add configure option for doc XSL prefix ([bug #16991](https://savannah.nongnu.org/bugs/?16991))\n\n## Version 0.1.9 (2006-05-25)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- add backtrace when WeeChat crashes, log file automatically renamed\n- add new key to find previous completion (`Shift`+`Tab` by default)\n- add missing IRC commands (006, 007, 290, 292, 310, 379, 437, 974)\n- add new option to customize input prompt\n- add nick modes\n- add hostnames associated to nicks (available for `/ban` completion)\n- add \"+p\" mode for channels, fix mode display in status bar\n- add nick alignment options\n- add keyboard handler to plugin API\n- improve script plugin loader\n- add hostname/IP option for connection to server\n- add `/setp` command (set plugin options)\n- aliases are executed before WeeChat/IRC commands, add `/builtin` command\n- add `/cycle` command, `/part` command does close buffer anymore\n\n### Internationalization\n\n- add Russian translations (thanks to Pavel Shevchuk)\n\n### Bug fixes\n\n- fix `/squery` command (message sent to server, now OK with more than two arguments)\n- fix `/alias` command (with an alias name, display content)\n- add lock for log file (~/.weechat/weechat.log), only one WeeChat process can use this file ([bug #16382](https://savannah.nongnu.org/bugs/?16382))\n- fix crash with malformed UTF-8 strings\n- fix crash with ncurses color when too many colors defined in ncurses ([bug #16556](https://savannah.nongnu.org/bugs/?16556))\n- fix bug with long outgoing IRC messages (> 512 bytes) ([bug #16358](https://savannah.nongnu.org/bugs/?16358))\n- fix Ruby crash when handler does not return OK or KO ([bug #16552](https://savannah.nongnu.org/bugs/?16552))\n- fix UTF-8 display bug with chars using more than one cell on screen ([bug #16356](https://savannah.nongnu.org/bugs/?16356))\n- fix display bug with DCC file size when > 1 GB\n- fix refresh bug (deadlock in curses) when terminal is resized ([bug #16542](https://savannah.nongnu.org/bugs/?16542))\n- fix nicklist sort bug\n- fix crash when multiple pv have same name: now it's forbidden and pv buffer is not renamed (when a nick changes) if another exists with same name ([bug #16369](https://savannah.nongnu.org/bugs/?16369))\n- command `/clear [-all]` now clears hotlist\n- fix crash after `/upgrade` if a line in history is empty ([bug #16379](https://savannah.nongnu.org/bugs/?16379))\n- fix many crashes with DCC chat ([bug #16416](https://savannah.nongnu.org/bugs/?16416))\n- fix commands 332, 333 (`/topic` now OK when channel is not opened)\n- remove color encoding and charset conversion for commands (only allowed in text sent to channel/private)\n- fix `/names` command: now displays result when not on a channel\n- fix refresh bug (too many refresh) when terminal is resized\n- fix nicklist display bugs when on top or bottom of chat window\n- fix high CPU usage when running under a Screen that has been killed\n\n### Documentation\n\n- add German doc (thanks to Frank Zacharias)\n\n### Build\n\n- fix --disable-plugins option in configure script\n- improve Lua detection ([bug #16574](https://savannah.nongnu.org/bugs/?16574))\n\n## Version 0.1.8 (2006-03-18)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- improve alias completion (now uses target command for completion)\n- add missing IRC command (487)\n- add inactivity time, available for plugins via get_info(\"inactivity\")\n- add keys `Alt`+`Home` / `Alt`+`End` to scroll top/bottom, `Alt`+`F11` / `Alt`+`F12` to scroll nicklist top/bottom\n- add special names for plugin message handlers: weechat_pv, weechat_highlight, weechat_ctcp, weechat_dcc\n- add IRC raw data buffer (new key: `Alt`+`j`, `Alt`+`r`)\n- add new plugins functions: add_timer_handler, remove_timer_handler, remove_infobar\n- plugin messages handlers now called when message is ignored (by `/ignore`)\n- new behavior for messages ignored by a message handler: now WeeChat executes standard handler, treating message as \"ignored\"\n- many commands allowed for aliases\n- many commands allowed when connecting to server\n- add Lua script plugin\n- add functions in plugins API: get_server_info, free_server_info, get_channel_info, free_channel_info, get_nick_info, free_nick_info\n- add option \"look_nick_complete_first\" (patch from Gwenn)\n- add option \"look_open_near_server\" (patch from Gwenn)\n- add new scroll keys for a few lines up/down (default: `Alt`+`PgUp` / `Alt`+`PgDn`) (patch from Pistos)\n- add new option \"irc_away_check_max_nicks\" to disable away check on channels with high number of nicks (patch from Gwenn)\n- add new command line argument for setting WeeChat home dir (-d or --dir) (patch from Gwenn)\n- add option \"irc_show_away_once\", to show away message only once in pv\n\n### Internationalization\n\n- add partial Hungarian translations\n\n### Bug fixes\n\n- improve Ruby plugin\n- fix `/set` command when internal server name contains one or many dots\n- fix get_info plugin API function when no server at all is opened\n- fix display bug when top of buffer is displayed and first line is removed (according to \"history_max_lines\" setting)\n- fix `/mode` command output\n- fix completion problem in private with nicks\n- script plugins now load scripts in WeeChat system share directory\n- `/msg` command does not open any buffer anymore\n- fix crash when using global history (when older entry is removed)\n- fix display bug with `/kill` command\n- fix bug with `/upgrade` and servers buffer\n- fix bug with get_dcc_info plugin interface function\n- fix bug with charset in infobar highlights\n- fix bug with buffer detection in plugins/scripts commands\n- fix bug with `/history` command\n\n## Version 0.1.7 (2006-01-14)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- remove \"irc_default_msg_away\" setting, for RFC 2812 conformity (`/away` command without argument only removes away status), new values for \"irc_display_away\" (off, local, channel)\n- add color for window separators (when split)\n- add completion system for plugins/scripts commands\n- add charset by server and channel, new command: `/charset`\n- add Ruby script plugin\n- add `/upgrade` command\n- add ETA (Estimated Time of Arrival) for DCC files\n- `/nick` command is now allowed when not connected to server\n- add server/channel argument to `/buffer` command for jumping to buffer\n- add new keys for switching to other windows: `Alt`+`w`, `Alt`+`Arrow`\n- add new keys for scrolling to previous/next highlight: `Alt`+`p` / `Alt`+`n`\n- add \"read marker\": an indicator for first unread line in a server or channel buffer (new key `Alt`+`u` to scroll to marker)\n- new window management: custom size for windows, auto resize when terminal is resized\n- add `/history` command\n\n### Bug fixes\n\n- fix msg command (now allowed in private buffer with \"*\" as target)\n- fix refresh bug with Solaris when term size is changed\n- fix plugins autoload\n- fix display bug in chat window when a message length equals to window width\n- fix infinite loop when resizing term to small size\n\n### Build\n\n- replace Texinfo doc by XML Docbook\n\n## Version 0.1.6 (2005-11-11)\n\n_If you are upgrading: please see [UPGRADING.md](UPGRADING.md)._\n\n### New features\n\n- new color management system, IRC colors are now correctly displayed and can be removed by new options irc_colors_receive and irc_colors_send\n- add setting for having one server buffer for all servers (look_one_server_buffer)\n- add setting for ignoring some chars when completing nicks\n- signal SIGPIPE is now ignored\n- add partial match for highlights\n- add dcc_own_ip and dcc_port_range settings\n- full UTF-8 support, auto-detection of UTF-8 usage (locale)\n- add \"Day changed to [date]\" message when day changes\n- new plugin interface, rewritten from scratch: now loads dynamic C library, and perl/python are script plugins\n- log options (for server/channel/private) can now be set while WeeChat is running\n- add channel modes +e and +f\n- add some missing IRC commands, fix command 367\n- add colors for input buffer and current channel of status bar\n- add online help for config options (with `/set` full_option_name)\n- enhanced \"smart\" hotlist, with names (new options: look_hotlist_names_{count|level|length})\n\n### Bug fixes\n\n- fix scroll problem when one line is bigger than screen size\n- fix IRC message parser bug\n\n## Version 0.1.5 (2005-09-24)\n\n### New features\n\n- add `/ame` command (send CTCP action to all channels of all connected servers)\n- add setting \"irc_notice_as_pv\" to see notices as pv\n- add nicks colors in setup file\n- add some missing IRC commands\n- add `/ignore` and `/unignore` commands\n- signal SIGQUIT is now ignored\n- jump to next server now saves current channel buffer for each server\n- add keys `Ctrl`+`Up` / `Ctrl`+`Down` to call previous/next command in global history (common to all buffers)\n\n### Bug fixes\n\n- fix DCC bug: delete failed file only if really empty (on disk)\n- fix IRC message parser bug\n- fix scroll problem (screen moving when scrolling and new line displayed)\n- fix infinite loop when scrolling back and displaying long lines\n- fix crash when closing a buffer used by more than one window\n- fix DCC display bug (now decodes string according to charset)\n- fix bug with strings comparison (str[n]casecmp) and some locales (like Turkish), now using ASCII comparison (thanks to roktas)\n- fix refresh bug when one line is bigger than screen size\n- fix look_nicklist_min_size and look_nicklist_max_size options\n- fix refresh bug when changing channel modes\n\n## Version 0.1.4 (2005-07-30)\n\n### New features\n\n- join and part/quit prefixes (arrows) now displayed with different colors\n- add \"irc_highlight\" setting, to get highlight with any word\n- add `/amsg` command (send text to all channels of all connected servers)\n- add color for private in hotlist (different than color for highlight)\n- add DCC resume and timeout\n- add function for Perl/Python to get DCC list\n- new keyboard management: keys are setup in config file, add new command `/key`, add some new default keys, `Alt`+`k` is used to grab key (useful for `/key` command)\n- add seconds in infobar time (optional thanks to new setting)\n- add auto-prefix with \"#\" for channels (if no prefix found), with `/join` command\n\n### Bug fixes\n\n- fix auto-rejoin for channels with key\n- fix `/ctcp` command (now any command/data allowed)\n- fix SIGSEGV handler (now write a core file by aborting program)\n- fix statusbar & infobar background refresh problem with some systems\n- fix FIFO pipe (command now authorized on a buffer not connected to an IRC server)\n- topic completion now decodes UTF-8 string\n- fix bug with IRC URL on command line (irc://)\n- fix some curses refreshes\n\n## Version 0.1.3 (2005-07-02)\n\n### New features\n\n- proxy support (http, socks4, socks5) with authentication (http, socks5) and ipv6 support (client to proxy)\n- add completion for config option (with `/set` command)\n- commands from users outside channel now authorized (if special user or channel without \"n\" flag)\n- add IPv6 support\n- kill command now received and displayed\n- add SSL support\n- channel notify levels are saved in config file (new option \"server_notify_levels\" for server sections)\n- part message now accepts %v (replaced by WeeChat version), like quit message\n\n### Bug fixes\n\n- errors while loading perl scripts are now displayed in server buffer (instead of current buffer)\n- in python scripts, all messages written in stdin and stderr are redirected in server buffer\n- fix a filename error while loading a python script manually\n- fix plugins print and prnt functions: now OK for writing on server buffers\n- fix color problem with new libcurses version\n- fix crash when using `Alt`+`s` or `Alt`+`x` on DCC buffer (`Alt`+`d`)\n- fix startup crash when config file (~/.weechat/weechat.rc) is not found\n\n### Build\n\n- improve Perl/Python libs detection for ./configure script\n\n## Version 0.1.2 (2005-05-21)\n\n### New features\n\n- add Python plugin support, improve Perl interface (and now Perl/Python libraries are checked by configure script)\n- add nicklist scroll keys (`Alt`+`Home` / `Alt`+`End` / `Alt`+`PgUp` / `Alt`+`PgDn` or `F11` / `F12`)\n- add transfer rate for DCC files\n- add `-all` option for `/nick` command\n- buffers timestamp can now be changed (new option in config file)\n- add missing IRC commands (307, 341, 485, 671)\n\n### Bug fixes\n\n- fix nicklist sort\n- fix crash when purging old DCC\n- fix crash with 64-bits arch (like AMD64) when converting UTF-8\n\n### Build\n\n- WeeChat now OK under *BSD and macOS\n\n## Version 0.1.1 (2005-03-20)\n\n### New features\n\n- add nicks count for channel buffers\n- add FIFO pipe for remote control\n- add crash dump when WeeChat receives SIGSEGV (Segmentation fault)\n- add new display engine: doesn't cut words at end of lines\n- add DCC send and DCC chat\n- add `/halfop` and `/dehalfop` commands, fix halfop display bug in nicklist\n- add `/ban`, `/unban` and `/kickban` commands\n- add --irc-commands and --weechat-commands command line options\n- connection to IRC server is now made by child process (non blocking)\n- add support for UnrealIrcd (\"~\" for chan owner, \"&\" for chan admin)\n- new key for window switch (now: `F5` / `F6` = switch buffer, `F7` / `F8` = switch window)\n- on server buffer, only server messages are logged\n- improve `/help` command output\n- plugins messages are logged with new config option (log_plugin_msg)\n\n### Internationalization\n\n- add Spanish translations\n\n### Bug fixes\n\n- fix `/kick` command\n- fix `/invite` command (and now invite requests are displayed)\n- fix `/buffer close` command (now OK when disconnected from server)\n- fix display bugs when many windows are opened\n\n## Version 0.1.0 (2005-02-12)\n\n### New features\n\n- improve `/window` command: now split and merge are OK\n- away nicks are now displayed with another color (new option: \"irc_away_check\")\n- add away indicator in status bar\n- add lag indicator (and auto-disconnect after a delay if important lag)\n- improve completion: now completes commands arguments (IRC and internal), when only one completion matches, completion mechanism is stopped (to complete command argument for example)\n- improve `/set` command: empty strings are allowed, new colors, server options can be changed while WeeChat is running\n- add default away/part/quit messages in config file\n- new [irc] section in config file, move option \"look_display_away\" to \"irc_display_away\"\n- server messages & errors are all prefixed (by 3 chars, like \"-@-\")\n- add new options for charset (UTF-8 support): look_charset_decode, look_charset_encode and look_charset_internal\n\n### Bug fixes\n\n- fix many memory leaks\n- fix colors bug: remove \"gray\" color (replaced by \"default\"), colors are OK when terminal has white (or light) background\n- fix crash when resizing terminal to small size\n- fix crash when multiple servers and big messages received from server\n- fix crash when closing some private buffers\n- fix crash when unknown section with option(s) in config file\n- fix `/op`, `/deop`, `/voice`, `/devoice` (now OK with many nicks)\n- fix `/me` command (now OK without parameter)\n- fix `/away` command (now OK if not away)\n- logs are now disabled by default (server/channel/private)\n\n## Version 0.0.9 (2005-01-01)\n\n### New features\n\n- auto-reconnection to server (new options: server_autoreconnect (on/off), server_autoreconnect_delay (in seconds))\n- new command `/buffer close` (close any server/channel/private buffer)\n- new keys: `Ctrl`+`a` (home), `Ctrl`+`e` (end), `Ctrl`+`w` (same as `Ctrl`+`Backspace`), `Alt`+`s` (switch to server buffer), `Alt`+`x` (switch to first channel of next server)\n- add new config option: \"server_command_delay\" (delay in seconds after startup command for each server)\n\n### Bug fixes\n\n- fix major bug when socket is closed by server (100% CPU usage), and disconnections are now OK (all channels are \"closed\", history is still visible, and buffer will be used again if reconnection to server)\n- option \"look_remove_colors_from_msgs\" is now working\n- fix display of nick mode changes\n- fix `/notice` command (and display when received from server)\n\n## Version 0.0.8 (2004-10-30)\n\n### New features\n\n- nickserv passwords hidden (new config option: log_hide_nickserv_pwd on/off)\n- auto-rejoin channels when kicked (new config option: server_autorejoin on/off)\n- add IRC::command function for Perl scripts\n- `/buffer` command developed (buffers list, move and notify)\n- logging buffers to disk (server/channel/private according to user preferences)\n- add config option \"look_display_away\" to announce away in channels\n- DCC file receive OK (`Alt`+`d` for DCC view)\n- add key `Ctrl`+`l` (`L`) for redrawing terminal\n- add key `Alt`+`r` for clearing hotlist\n\n### Bug fixes\n\n- fix `/kick` command: now OK with many words as reason\n- fix bug when adding alias with same name as other\n- fix crash when resizing terminal to very small size\n- \"-MORE-\" message is now erased when switching to another buffer\n- `/query` command now reopens private buffer if already opened\n\n## Version 0.0.7 (2004-08-08)\n\n### New features\n\n- new \"col_status_delimiters\" config option\n- add command `/buffer`, buffers ordered by number, auto-jump to active buffers (`Alt`+`a`), jump to buffers by number (`Alt`+`0`…`9`)\n- add command `/window`, split terminal horizontally/vertically\n- unique color for each nick (based on nickname)\n- add history limit (text buffer and commands)\n\n### Bug fixes\n\n- action messages are now considered as messages, not crappy joins/parts\n- fix display bug when nicklist is displayed at bottom of screen\n\n### Build\n\n- replace --enable-debug with --with-debug option for ./configure\n\n## Version 0.0.6 (2004-06-05)\n\n### New features\n\n- improve channel highlight (priority to message vs join/part)\n- add command `/query` (starts private conversation)\n- add IRC messages 476, 477\n\n### Bug fixes\n\n- fix bug when opened private win and remote user changes his nick\n- `/mode` command is now OK and channel flags are displayed in status bar\n- fix display bug (text was blinking when scrolling)\n- CTCP Version reply is now in English only and doesn't show host (security reason)\n\n## Version 0.0.5 (2004-02-07)\n\n### New features\n\n- `/set` command to modify config options when WeeChat is running\n- URL command line parameter to connect to server(s)\n- new Perl script function to display message in info bar (\"IRC::print_infobar\")\n- info bar highlight notifications\n- add info bar timestamp in config (\"look_infobar_timestamp\")\n- add info bar (optional, \"look_infobar\" to enable it, \"on\" by default)\n- add -c (or --config) command line parameter to see config file options\n\n### Bug fixes\n\n- fix look_nicklist config option, now enables/disables nicklist\n- secure code to prevent buffer overflows and memory leaks\n- fix QUIT IRC command: now sent to all connected servers (not only current)\n- fix crash with `/oper` command\n- for default config file, nick is now based on un*x username\n- fix crash when config file cannot be written\n- add highlight on action messages\n\n## Version 0.0.4 (2004-01-01)\n\n### New features\n\n- add Perl plugin\n\n### Bug fixes\n\n- fix switch to private buffer\n- add highlight when our nick is written in a channel/private window\n- catch `Ctrl`+`c` (ignored)\n\n### Build\n\n- debug messages can be enabled via ./configure --enable-debug option\n\n## Version 0.0.3 (2003-11-03)\n\n### New features\n\n- add new IRC commands: stats, service, squit, motd, lusers, links, time, trace, admin, info, servlist, squery, who, whowas, die, summon, users, wallops, userhost, ison, ctcp ping\n\n### Internationalization\n\n- add French translations\n\n### Bug fixes\n\n- for sort of nicks (op, halfop, voice, other)\n- fix problem with \"353\" IRC message (nicklist)\n- fix problem when nick is truncated by server\n- fix crash when entering text without any server connection\n- fix crash when `/set` command is executed\n- fix display bug (text was blinking when scrolling)\n- code cleanup\n\n### Build\n\n- add ./configure script to build WeeChat\n\n## Version 0.0.2 (2003-10-05)\n\n### New features\n\n- add commands `/rehash` and `/restart`\n- and command and auto-join channels when connected to server\n- new commands for alias: `/alias`, `/unalias` (new section in config file)\n- config is now saved automatically when quitting WeeChat, add `/save` command\n- new commands for servers: `/server`, `/connect`, `/disconnect`\n- add autoconnect flag for each server in config file\n- add \"look_set_title\" option in config file\n- term window title is modified with WeeChat name and version\n- CTCP version returns more info (about OS)\n\n### Bug fixes\n\n- fix nicklist display bug\n- fix crash when sending command which can only be received\n\n## Version 0.0.1 (2003-09-27)\n\n### New features\n\n- ncurses GUI with color output\n- multi-servers\n- channel windows, with nicklist (position: top, bottom, left or right)\n- private windows\n- IRC commands: away, ctcp, deop, devoice, invite, join, kick, kill, list, me, mode, msg, names, nick, notice, op, oper, part, ping, pong, quit, quote, topic, version, voice, whois\n- WeeChat commands: clear, help, set (partial)\n- many config options\n- log file (~/.weechat/weechat.log)\n- nicklist can be moved on top, bottom, left or right of window\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 11.6328125,
          "content": "#\n# Copyright (C) 2003-2024 Sébastien Helleu <flashcode@flashtux.org>\n# Copyright (C) 2007-2008 Julien Louis <ptitlouis@sysif.net>\n# Copyright (C) 2008-2009 Emmanuel Bouthenot <kolter@openics.org>\n#\n# This file is part of WeeChat, the extensible chat client.\n#\n# WeeChat is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 3 of the License, or\n# (at your option) any later version.\n#\n# WeeChat is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with WeeChat.  If not, see <https://www.gnu.org/licenses/>.\n#\n\ncmake_minimum_required(VERSION 3.18)\n\nproject(weechat C)\n\n# CMake options\nset(CMAKE_VERBOSE_MAKEFILE OFF)\nset(CMAKE_MODULE_PATH \"${CMAKE_SOURCE_DIR}/cmake\" \"${CMAKE_MODULE_PATH}\")\nset(CMAKE_SKIP_RPATH ON)\n\n# compiler options\nset(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fsigned-char -fms-extensions -Wall -Wextra -Werror-implicit-function-declaration -Wformat -Werror=format-security\")\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fsigned-char -fms-extensions -Wall -Wextra\")\nif (CMAKE_C_COMPILER_ID STREQUAL \"GNU\")\n  # extra options specific to gcc/g++\n  set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wformat-overflow=2 -Wformat-truncation=2\")\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wformat-overflow=2 -Wformat-truncation=2\")\nendif()\n\n# version\nexecute_process(COMMAND \"${CMAKE_SOURCE_DIR}/version.sh\" devel-major OUTPUT_VARIABLE VERSION_MAJOR)\nexecute_process(COMMAND \"${CMAKE_SOURCE_DIR}/version.sh\" devel-minor OUTPUT_VARIABLE VERSION_MINOR)\nexecute_process(COMMAND \"${CMAKE_SOURCE_DIR}/version.sh\" devel-patch OUTPUT_VARIABLE VERSION_PATCH)\nstring(REGEX REPLACE \"\\n\" \"\" VERSION_MAJOR \"${VERSION_MAJOR}\")\nstring(REGEX REPLACE \"\\n\" \"\" VERSION_MINOR \"${VERSION_MINOR}\")\nstring(REGEX REPLACE \"\\n\" \"\" VERSION_PATCH \"${VERSION_PATCH}\")\nif(VERSION_PATCH STREQUAL \"\")\n  set(VERSION \"${VERSION_MAJOR}.${VERSION_MINOR}\")\nelse()\n  set(VERSION \"${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}\")\nendif()\n\n# license\nset(LICENSE \"GPL3\")\n\n# add definitions for version and license\nif(COMMAND cmake_policy)\n  cmake_policy(SET CMP0005 NEW)\n  add_definitions(-DWEECHAT_VERSION=\"${VERSION}\" -DWEECHAT_LICENSE=\"${LICENSE}\")\nelse()\n  add_definitions(-DWEECHAT_VERSION='\"${VERSION}\"' -DWEECHAT_LICENSE='\"${LICENSE}\"')\nendif()\n\n# package string\nset(PKG_STRING \"${PROJECT_NAME} ${VERSION}\")\nstring(REPLACE \"\\\";\\\"\" \"\\ \" PKG_STRING ${PKG_STRING})\n\nif(NOT DEFINED LIBDIR)\n  set(LIBDIR \"${CMAKE_INSTALL_PREFIX}/lib\")\nendif()\n\nif(NOT DEFINED WEECHAT_LIBDIR)\n  set(WEECHAT_LIBDIR \"${LIBDIR}/${PROJECT_NAME}\")\nendif()\n\nif(NOT DEFINED DATAROOTDIR)\n  set(DATAROOTDIR \"${CMAKE_INSTALL_PREFIX}/share\")\nendif()\n\nif(NOT DEFINED WEECHAT_SHAREDIR)\n  set(WEECHAT_SHAREDIR \"${DATAROOTDIR}/weechat\")\nendif()\n\nif(NOT DEFINED MANDIR)\n  set(MANDIR \"${DATAROOTDIR}/man\")\nendif()\n\nif(NOT DEFINED LOCALEDIR)\n  set(LOCALEDIR \"${DATAROOTDIR}/locale\")\nendif()\n\nif(DEFINED INCLUDEDIR)\n  set(INCLUDEDIR \"${INCLUDEDIR}/${PROJECT_NAME}\")\nelse()\n  set(INCLUDEDIR \"${CMAKE_INSTALL_PREFIX}/include/${PROJECT_NAME}\")\nendif()\n\noption(ENABLE_NCURSES        \"Compile the Ncurses interface\"            ON)\noption(ENABLE_HEADLESS       \"Compile the headless binary\"              ON)\noption(ENABLE_NLS            \"Enable Native Language Support\"           ON)\noption(ENABLE_LARGEFILE      \"Enable Large File Support\"                ON)\noption(ENABLE_ZSTD           \"Enable Zstandard compression\"             ON)\noption(ENABLE_CJSON          \"Enable cJSON support\"                     ON)\noption(ENABLE_ALIAS          \"Enable Alias plugin\"                      ON)\noption(ENABLE_BUFLIST        \"Enable Buflist plugin\"                    ON)\noption(ENABLE_CHARSET        \"Enable Charset plugin\"                    ON)\noption(ENABLE_EXEC           \"Enable Exec plugin\"                       ON)\noption(ENABLE_FIFO           \"Enable FIFO plugin\"                       ON)\noption(ENABLE_FSET           \"Enable Fast Set plugin\"                   ON)\noption(ENABLE_IRC            \"Enable IRC plugin\"                        ON)\noption(ENABLE_LOGGER         \"Enable Logger plugin\"                     ON)\noption(ENABLE_RELAY          \"Enable Relay plugin\"                      ON)\noption(ENABLE_SCRIPT         \"Enable Script plugin (script manager)\"    ON)\noption(ENABLE_SCRIPTS        \"Enable script plugins (perl, python, …)\"  ON)\noption(ENABLE_PERL           \"Enable Perl scripting language\"           ON)\noption(ENABLE_PYTHON         \"Enable Python scripting language\"         ON)\noption(ENABLE_RUBY           \"Enable Ruby scripting language\"           ON)\noption(ENABLE_LUA            \"Enable Lua scripting language\"            ON)\noption(ENABLE_TCL            \"Enable Tcl scripting language\"            ON)\noption(ENABLE_GUILE          \"Enable Scheme (guile) scripting language\" ON)\noption(ENABLE_JAVASCRIPT     \"Enable JavaScript scripting language\"     OFF)\noption(ENABLE_PHP            \"Enable PHP scripting language\"            ON)\noption(ENABLE_SPELL          \"Enable Spell checker plugin\"              ON)\noption(ENABLE_ENCHANT        \"Use Enchant lib in Spell checker plugin\"  OFF)\noption(ENABLE_TRIGGER        \"Enable Trigger plugin\"                    ON)\noption(ENABLE_TYPING         \"Enable Typing plugin\"                     ON)\noption(ENABLE_XFER           \"Enable Xfer plugin\"                       ON)\noption(ENABLE_MAN            \"Enable build of man page\"                 OFF)\noption(ENABLE_DOC            \"Enable build of documentation\"            OFF)\noption(ENABLE_DOC_INCOMPLETE \"Enable incomplete doc\"                    OFF)\noption(ENABLE_TESTS          \"Enable tests\"                             OFF)\noption(ENABLE_CODE_COVERAGE  \"Enable code coverage\"                     OFF)\n\n# code coverage\nadd_library(coverage_config INTERFACE)\nif(ENABLE_CODE_COVERAGE)\n  target_compile_options(coverage_config INTERFACE -O0 -g --coverage)\n  target_link_libraries(coverage_config INTERFACE --coverage)\nendif()\n\n# headless mode is required for documentation\nif(ENABLE_DOC AND NOT ENABLE_HEADLESS)\n  message(FATAL_ERROR \"Headless mode is required to build documentation.\")\nendif()\n\n# all plugins (except javascript) are required for documentation\nif(ENABLE_DOC AND NOT ENABLE_DOC_INCOMPLETE\n    AND (NOT ENABLE_NLS OR NOT ENABLE_ALIAS OR NOT ENABLE_BUFLIST\n      OR NOT ENABLE_CHARSET OR NOT ENABLE_EXEC OR NOT ENABLE_FIFO\n      OR NOT ENABLE_FSET OR NOT ENABLE_IRC OR NOT ENABLE_LOGGER\n      OR NOT ENABLE_RELAY OR NOT ENABLE_SCRIPT OR NOT ENABLE_SCRIPTS\n      OR NOT ENABLE_PERL OR NOT ENABLE_PYTHON OR NOT ENABLE_RUBY\n      OR NOT ENABLE_LUA OR NOT ENABLE_TCL OR NOT ENABLE_GUILE\n      OR NOT ENABLE_PHP OR NOT ENABLE_SPELL OR NOT ENABLE_TRIGGER\n      OR NOT ENABLE_TYPING OR NOT ENABLE_XFER))\n  message(\n    FATAL_ERROR\n    \" All plugins are required to build documentation.\\n\"\n    \" If you really want to build incomplete docs, enable this option:\\n\"\n    \"   -DENABLE_DOC_INCOMPLETE=ON\"\n  )\nendif()\n\n# headless mode is required for tests\nif(ENABLE_TESTS AND NOT ENABLE_HEADLESS)\n  message(FATAL_ERROR \"Headless mode is required for tests.\")\nendif()\n\n# option WEECHAT_HOME\nset(WEECHAT_HOME \"${WEECHAT_HOME}\" CACHE\n  STRING \"Force a single WeeChat home directory for config, logs, scripts, etc.\"\n  FORCE)\nmark_as_advanced(CLEAR WEECHAT_HOME)\n\nif(COMMAND cmake_policy)\n  if(POLICY CMP0003)\n    cmake_policy(SET CMP0003 NEW)\n  endif()\n  if(POLICY CMP0017)\n    cmake_policy(SET CMP0017 NEW)\n  endif()\nendif()\n\nadd_definitions(-DHAVE_CONFIG_H)\n\ninclude(FindPkgConfig)\n\ninclude(CheckIncludeFiles)\ninclude(CheckFunctionExists)\ninclude(CheckSymbolExists)\n\ncheck_include_files(\"langinfo.h\" HAVE_LANGINFO_CODESET)\ncheck_include_files(\"sys/resource.h\" HAVE_SYS_RESOURCE_H)\n\ncheck_include_files(\"malloc.h\" HAVE_MALLOC_H)\ncheck_symbol_exists(\"malloc_trim\" \"malloc.h\" HAVE_MALLOC_TRIM)\n\ncheck_function_exists(mallinfo HAVE_MALLINFO)\ncheck_function_exists(mallinfo2 HAVE_MALLINFO2)\n\ncheck_symbol_exists(\"eat_newline_glitch\" \"term.h\" HAVE_EAT_NEWLINE_GLITCH)\n\n# Check for Large File Support\nif(ENABLE_LARGEFILE)\n  add_definitions(-D_FILE_OFFSET_BITS=64 -D_LARGEFILE64_SOURCE -D_LARGEFILE_SOURCE -D_LARGE_FILES)\nendif()\n\n# Check for libgcrypt\npkg_check_modules(LIBGCRYPT REQUIRED libgcrypt)\ninclude_directories(${LIBGCRYPT_INCLUDE_DIRS})\nlist(APPEND EXTRA_LIBS ${LIBGCRYPT_LDFLAGS})\n\n# Check for GnuTLS\npkg_check_modules(GNUTLS REQUIRED gnutls>=3.3.0)\ninclude_directories(${GNUTLS_INCLUDE_DIRS})\nlist(APPEND EXTRA_LIBS ${GNUTLS_LDFLAGS})\n\n# Check for zlib\nfind_package(ZLIB REQUIRED)\n\n# Check for zstd\nif(ENABLE_ZSTD)\n  pkg_check_modules(LIBZSTD REQUIRED libzstd)\n  add_definitions(-DHAVE_ZSTD)\nendif()\n\n# Check for cJSON\nif(ENABLE_CJSON)\n  pkg_check_modules(LIBCJSON REQUIRED libcjson)\n  add_definitions(-DHAVE_CJSON)\nendif()\n\n# Check for iconv\nfind_package(Iconv)\nif(ICONV_FOUND)\n  add_definitions(-DHAVE_ICONV)\nendif()\n\n# Check for CURL\n# NOTE: keep version in sync with tools/check_curl_symbols.py\npkg_check_modules(LIBCURL REQUIRED libcurl>=7.47.0)\ninclude_directories(${LIBCURL_INCLUDE_DIRS})\nlist(APPEND EXTRA_LIBS ${LIBCURL_LDFLAGS})\n\nfind_library(DL_LIBRARY\n  NAMES dl\n  PATHS /lib /usr/lib /usr/libexec /usr/local/lib /usr/local/libexec\n)\nif(DL_LIBRARY)\n  list(APPEND EXTRA_LIBS ${DL_LIBRARY})\nendif()\n\nadd_subdirectory(icons)\n\nif(ENABLE_NLS)\n  find_package(Gettext REQUIRED)\n  find_package(Intl REQUIRED)\n  include_directories(${Intl_INCLUDE_DIRS})\n  list(APPEND EXTRA_LIBS \"${Intl_LIBRARIES}\")\n  add_subdirectory(po)\nelse()\n  add_custom_target(translations COMMAND true)\nendif()\n\nadd_subdirectory(src)\nadd_subdirectory(doc)\n\nif(ENABLE_TESTS)\n  find_package(CppUTest)\n  if(CPPUTEST_FOUND)\n    enable_testing()\n    add_subdirectory(tests)\n  else()\n    message(SEND_ERROR \"CppUTest not found\")\n  endif()\nelse()\n  enable_testing()\n  add_test(NAME notests COMMAND true)\nendif()\n\nconfigure_file(config.h.cmake config.h @ONLY)\n\n# set the git version in \"config-git.h\"\nadd_custom_target(version_git ALL\n  COMMAND \"${CMAKE_CURRENT_SOURCE_DIR}/tools/set_git_version.sh\" \"${CMAKE_CURRENT_SOURCE_DIR}\" \"${VERSION}\" \"config-git.h\"\n  WORKING_DIRECTORY \"${CMAKE_CURRENT_BINARY_DIR}\"\n)\n\nconfigure_file(\n  \"${CMAKE_CURRENT_SOURCE_DIR}/cmake/cmake_uninstall.cmake.in\"\n  \"${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake\"\n  IMMEDIATE @ONLY\n)\n\nadd_custom_target(uninstall\n  \"${CMAKE_COMMAND}\" -P \"${CMAKE_CURRENT_BINARY_DIR}/cmake_uninstall.cmake\"\n)\n\nadd_custom_target(dist\n  \"${CMAKE_CURRENT_SOURCE_DIR}/tools/makedist.sh\" \"${VERSION}\" \"HEAD\" \"${CMAKE_CURRENT_BINARY_DIR}\"\n  WORKING_DIRECTORY \"${CMAKE_CURRENT_SOURCE_DIR}\"\n)\n\n# pkgconfig file\nset(PACKAGE \"${PROJECT_NAME}\")\nset(prefix \"${CMAKE_INSTALL_PREFIX}\")\nset(exec_prefix \"\\${prefix}\")\nstring(REPLACE \"${CMAKE_INSTALL_PREFIX}\" \"\\${prefix}\" libdir \"${LIBDIR}\")\nset(includedir \"\\${prefix}/include\")\nconfigure_file(\"${CMAKE_CURRENT_SOURCE_DIR}/weechat.pc.in\" \"${CMAKE_CURRENT_BINARY_DIR}/weechat.pc\" @ONLY)\ninstall(FILES \"${CMAKE_CURRENT_BINARY_DIR}/weechat.pc\" DESTINATION \"${LIBDIR}/pkgconfig\")\n\n# cygport file (used to build Cygwin packages)\nconfigure_file(\"${CMAKE_CURRENT_SOURCE_DIR}/weechat.cygport.in\" \"${CMAKE_CURRENT_BINARY_DIR}/weechat-${VERSION}-1.cygport\" @ONLY)\n\n# install some files (only on Cygwin)\nif(CYGWIN)\n  install(FILES\n    \"${CMAKE_CURRENT_SOURCE_DIR}/AUTHORS.md\"\n    \"${CMAKE_CURRENT_SOURCE_DIR}/CHANGELOG.md\"\n    \"${CMAKE_CURRENT_SOURCE_DIR}/CONTRIBUTING.md\"\n    \"${CMAKE_CURRENT_SOURCE_DIR}/README.md\"\n    \"${CMAKE_CURRENT_SOURCE_DIR}/UPGRADING.md\"\n    DESTINATION \"${DATAROOTDIR}/doc/${PROJECT_NAME}\"\n  )\nendif()\n\n# desktop file\ninstall(FILES \"${CMAKE_CURRENT_SOURCE_DIR}/weechat.desktop\" DESTINATION \"${DATAROOTDIR}/applications\")\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.6103515625,
          "content": "# Contributing to WeeChat\n\n## Reporting bugs\n\nFirst, some basic things:\n\n- Use only English to communicate with developers.\n- Search in issues if the same problem or feature request has already been\n  reported (a duplicate is waste of time for you and the developers!).\n- If you can, please check if the problem has been fixed in development version\n  (if you are using a stable release or old version).\n- Report only one bug or feature request per issue.\n\n### Security reports\n\nPlease **DO NOT** file a GitHub issue for security related problems, but send an\nemail to [security@weechat.org](mailto:security@weechat.org) instead.\n\n### Required info\n\nWhen reporting [issues](https://github.com/weechat/weechat/issues) on GitHub,\nplease include:\n\n- Your **WeeChat version**: the output of `/v` in WeeChat, for example:\n  `WeeChat 1.7-dev (git: v1.6-6-g997f47f)`.\\\n  If WeeChat does not start at all, please include the version displayed by\n  `weechat --help` (or the version installed with your package manager).\n- Your **operating system**: its name and version (examples: Linux Debian Bookworm,\n  FreeBSD 13.0, Windows/Cygwin 64-bit, Windows/Ubuntu 64-bit…).\n- The **steps to reproduce**: if possible, please include a reproducible example:\n  explain the steps which led you to the problem.\\\n  It's even better if you can reproduce the problem with a new config (and no\n  scripts loaded): try `weechat --dir /tmp/weechat` and check if you have the\n  problem here.\n- The **gdb's backtrace** (only for a crash): if you can reproduce the crash\n  (or if you have a core file), please include the backtrace from gdb (look at\n  [User's guide](https://weechat.org/doc/weechat/user/#report_crashes) for more info).\n- The **actual result**.\n- The **expected result**: the correct result you are expecting.\n\n> [!IMPORTANT]\n> Most of times, the WeeChat crash log file (_weechat_crash_YYYYMMDD_xxx.log_)\nis **NOT USEFUL** to fix the bug, so please report this file **ONLY** if a developer\nasked you to send it (and be extremely careful, this file can contain personal\ndata like passwords and contents of your chats).\n\n### Scripts related issues\n\nIf you are using scripts, they can cause problems/crashes. To check if the\nproblem is related to one script, try to unload them one by one (using\ncommand `/script unload <name>`).\n\nMany issues reported are in fact related to bugs in scripts, so please first\ncheck that before reporting any issue on WeeChat itself.\n\nIf you think the problem comes from a specific script, please report the issue\nin the [scripts git repository](https://github.com/weechat/scripts/issues) instead.\n\n## Translations\n\nPull requests on GitHub for fixes or new translations are welcome at any\ntime, for [WeeChat](https://github.com/weechat/weechat) and the website\n[weechat.org](https://github.com/weechat/weechat.org).\n\nTo start a translation in a new language (not yet supported), please look at\n[translations](https://weechat.org/doc/weechat/dev/#translations)\nin Developer's guide.\n\n## Feature requests\n\nWeeChat is under active development, so your idea may already have been\nimplemented, or scheduled for a future version (you can check in\n[roadmap](https://weechat.org/dev/) or\n[milestones](https://github.com/weechat/weechat/milestones) on GitHub.\n\nPull requests on GitHub are welcome for minor new features.\n\nFor major new features, it's better to discuss about it in IRC\n(server: `irc.libera.chat`, channel `#weechat`).\n\nBefore submitting any pull request, be sure you have read the\n[coding rules](https://weechat.org/doc/weechat/dev/#coding_rules)\nin Developer's guide, which contains info about styles used, naming convention\nand other useful info.\n\n## Semantic versioning\n\nSince version 4.0.0, WeeChat is following a \"practical\" semantic versioning.\n\nIt is based on [Semantic Versioning](https://semver.org/) but in a less strict way:\nbreaking changes in API with low user impact don't bump the major version.\n\nThe version number is on three digits `X.Y.Z`, where:\n\n- `X` is the major version\n- `Y` is the minor version\n- `Z` is the patch version.\n\nRules to increment the version number:\n\n- the **major version** number (`X`) is incremented only when intentional breaking changes\n  target feature areas that are actively consumed by users, scripts or C plugin API\n- the **minor version** number (`Y`) is incremented for any new release of WeeChat\n  that includes new features and bug fixes, possibly breaking API with low impact on users\n- the **patch version** number (`Z`) is reserved for releases that address severe bugs\n  or security issues found after the release.\n\nFor more information, see the\n[specification](https://specs.weechat.org/specs/2023-003-practical-semantic-versioning.html).\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 34.3251953125,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.43359375,
          "content": "# WeeChat\n\n<p align=\"center\">\n  <img src=\"https://weechat.org/media/images/weechat_logo_large.png\" alt=\"WeeChat\" />\n</p>\n\n[![Mastodon](https://img.shields.io/badge/mastodon-follow-blue.svg)](https://hostux.social/@weechat)\n[![Diaspora*](https://img.shields.io/badge/diaspora*-follow-blue.svg)](https://diasp.eu/u/weechat)\n[![X](https://img.shields.io/badge/x-follow-blue.svg)](https://x.com/WeeChatClient)\n[![Devel blog](https://img.shields.io/badge/devel%20blog-follow-blue.svg)](https://blog.weechat.org/)\n[![Slant](https://img.shields.io/badge/slant-recommend-28acad.svg)](https://www.slant.co/topics/1323/~best-irc-clients-for-linux)\n[![Donate](https://img.shields.io/badge/help-donate%20%E2%9D%A4-ff69b4.svg)](https://weechat.org/donate/)\n\n[![CI](https://github.com/weechat/weechat/workflows/CI/badge.svg)](https://github.com/weechat/weechat/actions)\n[![Code coverage](https://codecov.io/gh/weechat/weechat/branch/main/graph/badge.svg)](https://codecov.io/gh/weechat/weechat)\n\n**WeeChat** (Wee Enhanced Environment for Chat) is a free chat client, fast and light, designed for many operating systems.\\\nIt is highly customizable and extensible with scripts.\n\nHomepage: [https://weechat.org/](https://weechat.org/)\n\n## Features\n\n- **Modular chat client**: WeeChat has a lightweight core and optional [plugins](https://weechat.org/doc/weechat/user/#plugins). All plugins (including [IRC](https://weechat.org/doc/weechat/user/#irc)) are independent and can be unloaded.\n- **Multi-platform**: WeeChat runs on GNU/Linux, *BSD, GNU/Hurd, Haiku, macOS and Windows (Bash/Ubuntu and Cygwin).\n- **Multi-protocols**: WeeChat is designed to support multiple protocols by plugins, like IRC.\n- **Standards-compliant**: the IRC plugin is compliant with RFCs [1459](https://datatracker.ietf.org/doc/html/rfc1459), [2810](https://datatracker.ietf.org/doc/html/rfc2810), [2811](https://datatracker.ietf.org/doc/html/rfc2811), [2812](https://datatracker.ietf.org/doc/html/rfc2812), [2813](https://datatracker.ietf.org/doc/html/rfc2813) and [7194](https://datatracker.ietf.org/doc/html/rfc7194).\n- **Small, fast, and very light**: the core is and should stay as light and fast as possible.\n- **Customizable and extensible**: there are a lot of options to customize WeeChat, and it is extensible with C plugins and [scripts](https://weechat.org/scripts/) ([Perl](https://weechat.org/scripts/language/perl/), [Python](https://weechat.org/scripts/language/python/), [Ruby](https://weechat.org/scripts/language/ruby), [Lua](https://weechat.org/scripts/language/lua/), [Tcl](https://weechat.org/scripts/language/tcl/), [Scheme](https://weechat.org/scripts/language/guile/), [JavaScript](https://weechat.org/scripts/language/javascript/) and [PHP](https://weechat.org/scripts/language/php/)).\n- **Fully documented**: there is comprehensive [documentation](https://weechat.org/doc/weechat/), which is [translated](https://weechat.org/doc/weechat/dev/#translations) into several languages.\n- **Developed from scratch**: WeeChat was built from scratch and is not based on any other client.\n- **Free software**: WeeChat is released under [GPLv3](https://www.gnu.org/licenses/gpl-3.0.html).\n\n<p align=\"center\">\n  <img src=\"https://weechat.org/media/images/screenshots/weechat/medium/weechat_2013-04-27_phlux_shadow.png\" alt=\"WeeChat\" />\n</p>\n\nOn WeeChat's website you can find [more screenshots](https://weechat.org/about/screenshots/).\n\n## Installation\n\nWeeChat can be installed using your favorite package manager (recommended) or by compiling it yourself.\\\nFor detailed instructions, please check the [WeeChat user's guide](https://weechat.org/doc/weechat/user/#install).\n\n## Semantic versioning\n\nWeeChat is following a \"practical\" semantic versioning, see file [CONTRIBUTING.md](CONTRIBUTING.md#semantic-versioning).\n\n## Copyright\n\nCopyright © 2003-2024 [Sébastien Helleu](https://github.com/flashcode)\n\nThis file is part of WeeChat, the extensible chat client.\n\nWeeChat is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 3 of the License, or\n(at your option) any later version.\n\nWeeChat is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with WeeChat.  If not, see <https://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "UPGRADING.md",
          "type": "blob",
          "size": 102.80859375,
          "content": "# WeeChat Upgrade guidelines\n\nThese upgrade guidelines only contain instructions for version upgrades which require manual actions.\\\nIf a version is not listed here, that means no particular action is required for this version.\n\nWhen upgrading from version X to Y, please read and apply all instructions from version X+1 to version Y (both included).\n\nFor a list of all changes in each version, please see [CHANGELOG.md](CHANGELOG.md).\n\n## Version 4.3.1\n\n### Detection of libgcrypt\n\nThe detection of libgcrypt has been fixed to properly detect libgcrypt ≥ 1.11.\\\nAs a consequence, the detection of an old version of libgcrypt is failing if the\nfile `libgcrypt.pc` is not found.\\\nThis affects old distributions like Debian Buster and Ubuntu Bionic.\n\n## Version 4.3.0\n\n### Relay options\n\nThe following relay options have been renamed:\n\n- relay.color.status_waiting_auth → relay.color.status_authenticating\n- relay.weechat.commands → relay.network.commands (new default value: `*,!quit`)\n\n### Lag in buflist\n\nThe lag is now stored in all IRC buffers: server (like it always has been),\nchannels and private buffers.\n\nConsequently, if you use `${format_lag}` in buflist options, this lag will be\ndisplayed on server and all channels and private buffers.\n\nIf you want to display the lag only on server buffer in buflist, you can use\nsuch format:\n\n```text\n${if:${type}==server?${format_lag}}\n```\n\n### Color of IRC channel modes\n\nThe option `irc.color.item_channel_modes` has been moved to core and renamed to\n`weechat.color.status_modes`.\n\n### Signal \"buffer_line_added\"\n\nThe signal \"buffer_line_added\" is now sent for every line added or modified\non a buffer with free content.\n\n## Version 4.2.2\n\n### Script keys\n\nSome arguments to the `/script` command were renamed in version 4.1.0, but the\nkeys using these arguments were not changed at same time.\n\nThey're now using the new arguments by default, but you must reset manually\nthe keys with the following commands:\n\n```text\n/reset weechat.key_mouse.@chat(script.scripts):button1\n/reset weechat.key_mouse.@chat(script.scripts):button2\n/reset weechat.key_mouse.@chat(script.scripts):wheeldown\n/reset weechat.key_mouse.@chat(script.scripts):wheelup\n```\n\n## Version 4.2.0\n\n### Microseconds in buffer lines\n\nMicroseconds have been added in buffer lines (for both date and printed date).\n\nHere are the changes that could affect plugins and scripts:\n\n- hook_print: the C callback receives a new argument \"date_usec\" (microseconds\n  of date), after the argument \"date\" (scripting API is unchanged: the\n  microseconds are not available)\n- trigger of types \"print\" and \"timer\": the format of variable `${tg_date}` is\n  changed from `%Y-%m-%d %H:%M:%S` to `%FT%T.%f` (where `%f` is the number of\n  microseconds on 6 digits)\n\n### IRC anti-flood\n\nThe anti-flood mechanism in IRC plugin has been improved and is now configured\nin milliseconds instead of seconds.\\\nIt is done with a single option `irc.server_default.anti_flood` (and same option\nin servers), which replaces both options `anti_flood_prio_high` and\n`anti_flood_prio_low`.\n\nThe default value is 2000 (2 seconds), and for example if you want to set\na delay of 0.5 seconds between your messages sent:\n\n```text\n/set irc.server_default.anti_flood 500\n```\n\nWhen upgrading from an old WeeChat version, you'll see such messages, which are\nperfectly normal (they're displayed to warn you about unknown options, and then\nyou have to set the new option if needed):\n\n```text\n=!= | Warning: /home/user/.config/weechat/irc.conf, line 131: ignoring unknown option for section \"server_default\": anti_flood_prio_high = 2\n=!= | Warning: /home/user/.config/weechat/irc.conf, line 132: ignoring unknown option for section \"server_default\": anti_flood_prio_low = 2\n=!= | Warning: /home/user/.config/weechat/irc.conf, line 212: ignoring invalid value for option in section \"server\": libera.anti_flood_prio_high\n=!= | Warning: //home/user/.config/weechat/irc.conf, line 213: ignoring invalid value for option in section \"server\": libera.anti_flood_prio_low\n```\n\n### Search in commands history\n\nSearch in commands history has been added with new keys and a new key context\ncalled \"histsearch\".\n\nSome existing keys have been moved as well.\n\nNew keys can be changed and added with the following commands after upgrade\nfrom an old WeeChat version:\n\n```text\n/key missing\n/key unbind ctrl-s,ctrl-u\n/key bind meta-U /allbuf /buffer set unread\n/key bind ctrl-r /input search_history\n/key bindctxt search ctrl-r /input search_previous\n```\n\n### RGB colors in IRC messages\n\nSupport for RGB colors in IRC messages has been added and a new key\n`Ctrl`+`c`, `d` is available to insert this color code in command line.\n\nYou can add this key with this command:\n\n```text\n/key missing\n```\n\n### Custom bar items\n\nCustom bar items must now have a different name than default bar items\n(for example the custom bar item name `time` is now forbidden).\\\nIf you have such names in your config, WeeChat will now fail to load them\n(this should not happen anyway, since such bar items cannot be properly used\nor can cause a crash of WeeChat).\n\n### Nick color infos\n\nThe infos irc_nick_color and irc_nick_color_name are deprecated again, and the\nalgorithm to compute IRC nick colors has been reverted to case-sensitive.\\\nThe server name has been removed from arguments.\n\n## Version 4.1.1\n\n### Custom bar items\n\nCustom bar items must now have a different name than default bar items\n(for example the custom bar item name `time` is now forbidden).\\\nIf you have such names in your config, WeeChat will now fail to load them\n(this should not happen anyway, since such bar items cannot be properly used\nor can cause a crash of WeeChat).\n\n## Version 4.1.0\n\n### New keys to move in cursor mode\n\nNew keys have been added to move in cursor mode, and existing keys to move to\nanother area have been changed: modifier is now `Alt`+`Shift` instead of\n`Alt`.\n\nYou can change existing keys and add new ones with these commands:\n\n```text\n/key bindctxt cursor meta-up /cursor move edge_top\n/key bindctxt cursor meta-down /cursor move edge_bottom\n/key bindctxt cursor meta-left /cursor move edge_left\n/key bindctxt cursor meta-right /cursor move edge_right\n/key bindctxt cursor meta-end /cursor move bottom_right\n/key bindctxt cursor meta-home /cursor move top_left\n/key bindctxt cursor meta-shift-up /cursor move area_up\n/key bindctxt cursor meta-shift-down /cursor move area_down\n/key bindctxt cursor meta-shift-left /cursor move area_left\n/key bindctxt cursor meta-shift-right /cursor move area_right\n```\n\n### IRC CTCP replies\n\nIRC CTCP replies are now evaluated, with the same variables available, so now\nthe syntax is for example `${version}` instead of `$version`.\\\nThe existing options `irc.ctcp.*` are automatically converted on upgrade.\n\nIn addition, for privacy reasons, these default CTCP replies have been removed:\n\n- FINGER\n- USERINFO\n\nIf ever you want that WeeChat replies to these CTCP requests, you can add them\nback with the two following commands:\n\n```text\n/set irc.ctcp.finger \"WeeChat ${version}\"\n/set irc.ctcp.userinfo \"${username} (${realname})\"\n```\n\nThey will then be advertised in reply to \"CTCP CLIENTINFO\", which is now built\ndynamically with these options.\n\n### Nick color infos\n\nTwo infos to get nick colors have been added: nick_color_ignore_case and\nnick_color_name_ignore_case.\\\nThey are similar to nick_color and nick_color_name, except they take as second\nargument a range of chars to apply on the nick: the nick is converted to lower\ncase using this range of chars.\n\nThe infos irc_nick_color and irc_nick_color_name, that were deprecated since\nversion 1.5 are now used again, with a change in parameter: the server is now\noptional before the nick: \"server,nick\".\\\nThe nick is first converted to lower case, following the value of CASEMAPPING\non the server, then hashed to compute the color.\\\nThat means the color for a nick is now case-insensitive (in the way IRC servers\nare case-insensitive, so with a limited range of chars only).\n\nIf a script was using this info with a comma in nickname (which should not happen\nanyway), this is now interpreted as the server name, and the script must be\nmodified.\\\nAnyway, it is recommended to always give the server name to respect the\nCASEMAPPING of the server and prevent any issue with a comma in the nickname.\n\nFor example nick color of \"alice\" and \"ALICE\" is now always guaranteed to be the\nsame:\n\n```python\n# with server name (recommended)\nweechat.info_get(\"irc_nick_color\", \"libera,alice\") == weechat.info_get(\"irc_nick_color\", \"libera,ALICE\")\nweechat.info_get(\"irc_nick_color_name\", \"libera,alice\") == weechat.info_get(\"irc_nick_color_name\", \"libera,ALICE\")\n\n# without server name (allowed but not recommended, kept for compatibility)\nweechat.info_get(\"irc_nick_color\", \"alice\") == weechat.info_get(\"irc_nick_color\", \"ALICE\")\nweechat.info_get(\"irc_nick_color_name\", \"alice\") == weechat.info_get(\"irc_nick_color_name\", \"ALICE\")\n```\n\n### Allowed values for options on fset buffer\n\nA new variable `allowed_values` has been added in fset options.\n\nThe default value for the second format has changed.\\\nYou can reset it with this command:\n\n```text\n/reset fset.format.option2\n```\n\n### Mouse actions on fset buffer\n\nMouse actions on fset buffer has been fixed when option `fset.look.format_number`\nis set to 2.\n\nThe key for button 1 on fset buffer has been fixed.\\\nYou can reset it with this command:\n\n```text\n/reset weechat.key_mouse.@chat(fset.fset):button1\n```\n\n## Version 4.0.6\n\n### Custom bar items\n\nCustom bar items must now have a different name than default bar items\n(for example the custom bar item name `time` is now forbidden).\n\nIf you have such names in your config, WeeChat will now fail to load them\n(this should not happen anyway, since such bar items cannot be properly used\nand can cause a crash of WeeChat).\n\n## Version 4.0.1\n\n### Functions config_set_plugin and config_set_desc_plugin\n\nThe functions [config_set_plugin](https://weechat.org/doc/weechat/plugin/#_config_set_plugin)\nand [config_set_desc_plugin](https://weechat.org/doc/weechat/plugin/#_config_set_desc_plugin)\nare not converting anymore the option name to lower case because since version 4.0.0,\nthe name of options is case-sensitive.\n\n### Grab raw key and command\n\nKey `Alt`+`K` (upper case) has been removed, as well as commands\n`/input grab_raw_key` and `/input grab_raw_key_command`.\n\nNow the key `Alt`+`k` displays the actual key name and command, possibly\nraw key.\n\n## Version 4.0.0\n\nThis is a major version that includes breaking changes described below.\n\n### Support of new IRC capabilities\n\nSupport of new capabilities has been introduced in this version and are all\nenabled by default, if the server supports them:\n\n- batch\n- draft/multiline\n- echo-message\n\nWhen the capability \"echo-message\" is enabled, you may notice time before your\nown IRC messages are displayed in the buffer, this is normal : the capability\nforces the server to sent back messages, and WeeChat displays messages only\nwhen they are received from the server.\n\nIf you want to disable this capability on all servers, you can do:\n\n```text\n/set irc.server_default.capabilities \"*,!echo-message\"\n```\n\nIf you are already connected to a server with echo-message enabled, just ask\nthe server to disable the capability on-the-fly (no need to reconnect):\n\n```text\n/cap req -echo-message\n```\n\n### Configuration file version\n\nA version has been introduced in configuration file, and due to the many\nbreaking changes (listed in the chapters below), the following files are\nautomatically upgraded to a new version:\n\n- weechat.conf: new key names\n  (see <<v4.0.0_key_bindings_improvements,Key bindings improvements>>)\n- alias.conf: aliases converted to lower case\n  (see <<v4.0.0_case_sensitive_identifiers,Case-sensitive identifiers>>)\n- irc.conf: options `ssl*` renamed to `tls*`\n  (see <<v4.0.0_tls,TLS options and connections>>)\n- relay.conf: options and protocol `ssl*` renamed to `tls*`\n  (see <<v4.0.0_tls,TLS options and connections>>)\n\n> [!WARNING]\n> Because of this new format, you must **NOT** load the new configuration\nfiles in any older WeeChat version < 4.0.0 once you have run any version ≥ 4.0.0\nat least one time.\\\nFor example the new key names make the input completely broken (you cannot\nenter most chars in input anymore and Enter key does not work).\n\n### Key bindings improvements\n\nThe format of key bindings has changed to be more user-friendly, and this is\na breaking change: legacy keys are automatically converted, but some triggers,\nplugins or scripts might need manual changes.\n\nOverview of new features:\n\n- use of alias for keys (`meta-left` instead of `meta2-1;3D`)\n- use comma to separate keys in combos (`meta-w,meta-up` instead of\n  `meta-wmeta-meta2-A`)\n- control keys are converted to lower keys (`ctrl-a` instead of `ctrl-A`)\n- keys are normal options, so they are shown and can be updated with `/set`\n  and `/fset` commands\n- command `/key` without arguments opens the fset buffer with all keys\n\nSee [Key bindings improvements specification](https://specs.weechat.org/specs/2023-002-key-bindings-improvements.html)\nfor more information.\n\n#### New key format\n\nAliases are now used for keys, like `f1`, `home`, `return`, etc.\\\nIn addition, a comma is now required between different keys, for example `ctrl-cb`\nis not valid anymore and must be replaced by `ctrl-c,b`.\n\nThe keys in weechat.conf are automatically converted from legacy format on first\nrun or upgrade with a legacy configuration file.\n\nFor keys bound in external plugins or scripts, WeeChat tries to convert them\non-the-fly to stay compatible, but this cannot work in all cases (this is a\nbreaking change).\n\nThe following fixes are done on keys when they are defined:\n\n- transform upper case ctrl keys to lower case\n- replace space char by `space`\n- replace `meta2-` by `meta-[` (modifier `meta2-` doesn't exist anymore)\n- mouse modifiers are now in this order: `alt-` then `ctrl-`.\n\nA warning is displayed when a raw key or invalid key is added.\\\nFor example `meta-[A` (which should be `up`) or `ctrl-ca` (missing comma, it\nshould be `ctrl-c,a`).\n\n#### Grab raw key and command\n\nNew key `Alt`+`K` (upper case) is added to grab raw key and its command.\n\nMost of times this command is not needed, and the existing key `Alt`+`k`\n(lower case) is preferred, as it returns the key using the new aliases.\n\nFor example:\n\n- key `Alt`+`k` then up arrow displays: `up /input history_previous`\n- key `Alt`+`K` then up arrow displays: `meta-[A`\n\nRaw keys have higher priority than key with alias (they are looked first);\nthey can still be used and bound, but this is not recommended.\\\nThey should be used only in case of problem with the new aliases or with your\nterminal.\n\n#### Control keys as lower case\n\nKeys using the `Ctrl` key and a letter are now automatically converted to\nlower case.\\\nThat means for example keys `ctrl-q` and `ctrl-Q` are the same and saved as\n`ctrl-q` (lower case).\n\nExample of key being automatically converted to lower case:\n\n```text\n/key bind ctrl-Q /print test\n```\n\nOutput is now:\n\n```text\nNew key binding (context \"default\"): ctrl-q => /print test\n```\n\nWith older releases, upper case was mandatory and lower case letter for control\nkeys were not working at all.\n\n### Case-sensitive identifiers\n\nMany identifiers are made case-sensitive, including among others:\n\n- configuration files, sections, options\n- commands, aliases\n- completion (except nick completion)\n- bars, bar items\n- colors\n- filters\n- IRC servers\n- scripts\n- triggers.\n\nSee [Case-sensitive identifiers specification](https://specs.weechat.org/specs/2023-001-case-sensitive-identifiers.html)\nfor more information.\n\nAccordingly, default aliases are now in lower case.\\\nAll aliases (default ones and those added manually) are automatically converted\nto lower case with a message like this one:\n\n```text\nAlias converted to lower case: \"CLOSE\" => \"close\"\n```\n\n### TLS options and connections\n\nOption `weechat.color.status_name_insecure` has been added, the buffer name\nis now displayed with color `lightmagenta` by default if the connection with\nthe server is **NOT** made with TLS.\n\nOptions, commands and documentation have been updated to \"TLS\" instead of \"SSL\":\n\n- core option:\n  - weechat.color.status_name_ssl → weechat.color.status_name_tls\n- IRC server default options:\n  - irc.server_default.ssl → irc.server_default.tls\n  - irc.server_default.ssl_cert → irc.server_default.tls_cert\n  - irc.server_default.ssl_dhkey_size → irc.server_default.tls_dhkey_size\n  - irc.server_default.ssl_fingerprint → irc.server_default.tls_fingerprint\n  - irc.server_default.ssl_password → irc.server_default.tls_password\n  - irc.server_default.ssl_priorities → irc.server_default.tls_priorities\n  - irc.server_default.ssl_verify → irc.server_default.tls_verify\n- IRC options for a specific server:\n  - irc.server.xxx.ssl → irc.server.xxx.tls\n  - irc.server.xxx.ssl_cert → irc.server.xxx.tls_cert\n  - irc.server.xxx.ssl_dhkey_size → irc.server.xxx.tls_dhkey_size\n  - irc.server.xxx.ssl_fingerprint → irc.server.xxx.tls_fingerprint\n  - irc.server.xxx.ssl_password → irc.server.xxx.tls_password\n  - irc.server.xxx.ssl_priorities → irc.server.xxx.tls_priorities\n  - irc.server.xxx.ssl_verify → irc.server.xxx.tls_verify\n- Relay options:\n  - relay.network.ssl_cert_key → relay.network.tls_cert_key\n  - relay.network.ssl_priorities → relay.network.tls_priorities\n- Relay:\n  - protocol `ssl` → `tls`\n- Relay command:\n  - `/relay sslcertkey` → `/relay tlscertkey`\n\nDefault value of option `irc.server_default.tls` is now `on`.\\\nConnection to IRC servers is done with TLS and port 6697 by default.\n\nFor example to create libera.chat server, using TLS (if option\n`irc.server_default.tls` is `on`) and default port 6697:\n\n```text\n/server add libera irc.libera.chat\n\nirc: server added: libera -> irc.libera.chat/6697 (TLS: enabled)\n```\n\nTo force non-TLS connection (with default port 6667):\n\n```text\n/server add libera irc.libera.chat -notls\n\nirc: server added: libera -> irc.libera.chat/6667 (TLS: disabled)\n```\n\n### Insert of multiple pasted lines in input\n\nBy default multiple pasted lines are now inserted in input and not sent immediately.\n\nTo enable this feature, the default value of option `weechat.look.paste_max_lines`\nhas been changed to `100` (it was `1`).\\\nIf needed, you can reset the option to the new default value after upgrade:\n\n```text\n/reset weechat.look.paste_max_lines\n```\n\nThe option `weechat.look.paste_auto_add_newline` has been removed.\n\n### Default triggers\n\nThe default triggers \"cmd_pass\", \"cmd_pass_register\" and \"server_pass\" have\nbeen updated to be compatible with multiline input.\n\nYou can restore these default triggers with the following command:\n\n```text\n/trigger restore cmd_pass cmd_pass_register server_pass\n```\n\n### Build\n\n#### Autotools\n\nThe autotools support for build of WeeChat has been removed.\\\nWeeChat must now be built with CMake.\n\n#### Documentation\n\nThe auto-generated files for documentation are now built with `weechat-headless`,\nafter compilation of WeeChat and the plugins (the files are not in repository\nanymore).\\\nThis implies all plugins must be compiled and loaded in order to have complete docs\n(User's guide and Plugin API reference).\n\nIf ever you want to disable some plugins and force the build of incomplete docs,\na new option has been added: `ENABLE_DOC_INCOMPLETE` (`OFF` by default).\n\nFor example if you disable PHP plugin but still want docs where PHP options,\ncommands, etc. are missing:\n\n```bash\ncmake .. -DENABLE_PHP=OFF -DENABLE_DOC=ON -DENABLE_DOC_INCOMPLETE=ON\n```\n\n### Packaging\n\n#### Tarballs\n\nThe command `make dist` now builds only `.gz` and `.xz` compressed tarballs.\\\nFormats `.bz2` and `.zst` are not built anymore.\n\n#### RPM packaging\n\nThe file `weechat.spec` used for RPM packaging has been removed.\\\nopenSUSE has its own here:\nhttps://build.opensuse.org/package/view_file/server:irc/weechat/weechat.spec?expand=1\n\n#### cpack\n\nThe configuration for cpack has been removed.\\\nIt was used to build binary package of WeeChat, which has never been released\nin this format.\n\n### Function bar_new\n\nWhen the bar name already exists, the API function\n[bar_new](https://weechat.org/doc/weechat/plugin/#_bar_new) returns the pointer to\nthe bar (instead of NULL) and sets the default value for all options with the\nvalues received.\\\nIf you don't want to set default values in an existing bar, it is recommended\nto first check if the bar exists with the API function\n[bar_search](https://weechat.org/doc/weechat/plugin/#_bar_search).\n\n## Version 3.8\n\n### Move of options out of command /input\n\nSome options of `/input` command have been moved to other commands (they can\nstill be used with `/input` but marked as deprecated and completion has been\nremoved):\n\nOld command                             | New command                   | Default key\n--------------------------------------- | ----------------------------- | ----------------------\n`/input jump_smart`                     | `/buffer jump smart`          | `Alt`+`a`\n`/input jump_previously_visited_buffer` | `/buffer jump prev_visited`   | `Alt`+`<`\n`/input jump_next_visited_buffer`       | `/buffer jump next_visited`   | `Alt`+`>`\n`/input jump_last_buffer_displayed`     | `/buffer jump last_displayed` | `Alt`+`/`\n`/input hotlist_clear`                  | `/hotlist clear`              | `Alt`+`h`, `Alt`+`c`\n`/input hotlist_remove_buffer`          | `/hotlist remove`             | `Alt`+`h`, `Alt`+`m`\n`/input hotlist_restore_buffer`         | `/hotlist restore`            | `Alt`+`h`, `Alt`+`r`\n`/input hotlist_restore_all`            | `/hotlist restore -all`       | `Alt`+`h`, `Alt`+`Shift`+`R`\n`/input set_unread`                     | `/allbuf /buffer set unread`  | `Ctrl`+`s`, `Ctrl`+`u`\n`/input set_unread_current_buffer`      | `/buffer set unread`          | (none)\n`/input switch_active_buffer`           | `/buffer switch`              | `Ctrl`+`x`\n`/input switch_active_buffer_previous`  | `/buffer switch -previous`    | (none)\n`/input zoom_merged_buffer`             | `/buffer zoom`                | `Alt`+`x`\n\nThe following default keys can be reset to use the new command:\n\n```text\n/key reset meta-a\n/key reset meta-<\n/key reset meta->\n/key reset meta-/\n/key reset meta-hmeta-c\n/key reset meta-hmeta-m\n/key reset meta-hmeta-r\n/key reset meta-hmeta-R\n/key reset ctrl-Sctrl-U\n/key reset ctrl-X\n/key reset meta-x\n```\n\n### Return code of string comparison functions\n\nThe following functions now return arithmetic result of subtracting the last\ncompared UTF-8 char in string2 from the last compared UTF-8 char in string1:\n\n- string_charcmp\n- string_charcasecmp\n- string_charcasecmp_range\n- string_strcasecmp\n- string_strcasecmp_range\n- string_strncasecmp\n- string_strncasecmp_range\n- string_strcmp_ignore_chars\n\nIn addition, the case conversion has been extended, now in addition to range\nA-Z, all chars that have a lower case version are handled.\\\nThat means for example the case-insensitive comparison of \"é\" and \"É\" is 0\n(chars are considered equal).\n\nExample with WeeChat 3.8:\n\n```c\nint diff = string_strcasecmp (\"aaa\", \"CCC\");  /* == -2 */\n```\n\nWith older releases:\n\n```c\nint diff = string_strcasecmp (\"aaa\", \"CCC\");  /* == -1 */\n```\n\n### API functions string_tolower and string_toupper\n\nThe functions [string_tolower](https://weechat.org/doc/weechat/plugin/#_string_tolower)\nand [string_toupper](https://weechat.org/doc/weechat/plugin/#_string_toupper)\nnow return newly allocated string instead of doing the change in place.\\\nThe returned string must then be freed after use.\n\n### Trigger regex command\n\nThe trigger regex now starts with a command, which is \"s\" (regex replace, default)\nor \"y\" (translate chars).\n\nFor compatibility, any regex starting with a delimiter different from a letter\nwill still work.\n\nIf you defined some triggers with a regex starting with a letter (used as delimiter),\nthen you must change them **before** upgrading WeeChat, otherwise they'll be lost\nafter upgrade (with an error when WeeChat tries to load them from configuration file).\n\nFor example this regex is now invalid:\n\n```text\nXabcXdefX\n```\n\nAnd must be replaced by:\n\n```text\nsXabcXdefX\n```\n\nFor more information on the regex format, see the trigger chapter in the\n_WeeChat User's guide_.\n\n### Remove Python 2 support\n\nThe CMake option `ENABLE_PYTHON2` and autotools option `--enable-python2`\nhave been removed, and WeeChat cannot be compiled with Python 2.x anymore.\n\n### Callbacks of function config_new_option\n\nThe two callbacks \"callback_change\" and \"callback_delete\" in scripting API function\nconfig_new_option have been changed: an integer return value was expected by error,\nnow any return value is ignored (like it has always been in the C API).\n\n## Version 3.7\n\n### Argument \"object_id\" in callback of upgrade_new\n\nIn all script languages (except PHP), the argument \"object_id\" sent to the\ncallback of \"upgrade_new\" is now an integer (it was a string in older releases).\n\nTo be compatible with all versions, it is recommended to convert the argument\nto integer before testing it, for example in Python:\n\n```python\nif int(object_id) == 1:\n    # ...\n```\n\n### Argument \"remaining_calls\" in callback of hook_timer\n\nIn all script languages (except PHP), the argument \"remaining_calls\" sent to the\ncallback of \"hook_timer\" is now an integer (it was a string in older releases).\n\nTo be compatible with all versions, it is recommended to convert the argument\nto integer before testing it, for example in Python:\n\n```python\nif int(remaining_calls) > 0:\n    # ...\n```\n\n### Delete previous word until whitespace\n\nA new parameter `delete_previous_word_whitespace` has been added in `/input`\ncommand to delete previous word until backspace.\\\nThis is now bound by default to the key `Ctrl`+`w`\n(see issue [#559](https://github.com/weechat/weechat/issues/559)).\n\nA new key kbd:[Alt+Backspace] has been added to delete word, like `Ctrl`+`w`\ndid in previous releases.\n\nYou can get the new behavior for `Ctrl`+`w` with this command:\n\n```text\n/key bind ctrl-W /input delete_previous_word_whitespace\n```\n\nAnd add the new key `Alt`+`Backspace` with this command:\n\n```text\n/key missing\n```\n\n### Function string_rebuild_split_string\n\nThe API function string_build_with_split_string has been renamed to\n[string_rebuild_split_string](https://weechat.org/doc/weechat/plugin/#_string_rebuild_split_string)\nand two new arguments have been added: _index_start_ and _index_end_.\n\nTo stay compatible, the existing calls to the function must be done with the\nnew function name and these values:\n\n- _index_start_: `0`\n- _index_end_: `-1`\n\n## Version 3.6\n\n### Hook print on empty messages\n\nThe \"hook_print\" callback is now called even when an empty message is displayed\n(with or without prefix).\n\nThis was a bug, but is mentioned here just in case some scripts callbacks\nwould be surprised to be called with such empty messages.\n\n### Default trigger \"beep\"\n\nThe command of \"beep\" trigger is now executed only if the buffer notify is NOT\nset to `none` (in addition to existing conditions).\n\nYou can restore the default trigger \"beep\" with the following command:\n\n```text\n/trigger restore beep\n```\n\n## Version 3.5\n\n### Compression \"zstandard\" in relay\n\nRelay of type \"weechat\" now offers a compression with [Zstandard](https://facebook.github.io/zstd/),\nwhich allows better compression and is much faster than zlib for both compression and decompression.\n\nThe new compression type is `zstd`, and the default compression is now `off`\ninstead of `zlib`: the compression must now be explicitly given in the\n[handshake](https://weechat.org/doc/weechat/relay/#command_handshake) command.\n\nThe option `compression` in [init](https://weechat.org/doc/weechat/relay/#command_handshake)\ncommand has been removed, it is now ignored and must be given in the\n[handshake](https://weechat.org/doc/weechat/relay/#command_handshake) command\n(it was deprecated since WeeChat 2.9).\n\nThe option relay.network.compression_level has been renamed to relay.network.compression\nand is now a percentage between `0` and `100`:\n\n- `0`: disable compression\n- `1`: low compression (fast)\n- `100`: best compression (slow)\n\n## Version 3.4\n\n### Default triggers\n\nThe existing triggers \"cmd_pass\" and \"cmd_pass_register\" have been updated to\nhide key and password in command `/msg nickserv setpass <nick> <key> <password>`\nand support the option `-server <name>`.\n\nYou can restore the default triggers with the following command:\n\n```text\n/trigger restore cmd_pass cmd_pass_register\n```\n\n### New parameters in function hdata_search\n\nNew parameters have been added in function\n[hdata_search](https://weechat.org/doc/weechat/plugin/#_hdata_search), used for the\nevaluation of expression.\n\nNew parameters are the same as function\n[string_eval_expression](https://weechat.org/doc/weechat/plugin/#_string_eval_expression):\n\n- pointers: hashtable with pointers (pointers)\n- extra_vars: hashtable with extra variables (strings)\n- options: hashtable with options (strings).\n\nThe following scripts are updated consequently to be compatible with all\nWeeChat versions:\n\n- [autoauth.py](https://weechat.org/scripts/source/autoauth.py/) 1.3\n- [buffer_open.py](https://weechat.org/scripts/source/buffer_open.py/) 0.3\n- [collapse_channel.py](https://weechat.org/scripts/source/collapse_channel.py/) 0.9\n- [grep_filter.py](https://weechat.org/scripts/source/grep_filter.py/) 0.11\n- [samechannel.rb](https://weechat.org/scripts/source/samechannel.rb/) 0.2\n- [soju.py](https://weechat.org/scripts/source/soju.py/) 0.1.4\n- [stalker.pl](https://weechat.org/scripts/source/stalker.pl/) 1.6.3\n\n### Static array support in hdata\n\nSupport of static array in hdata has been added.\nFor pointers to arrays, a prefix `*,` must be added in parameter `array_size`\nof API function [hdata_new_var](https://weechat.org/doc/weechat/plugin/#_hdata_new_var).\n\n## Version 3.3\n\n### New keys for hotlist\n\nNew keys have been added to manipulate the hotlist:\n\n- `Alt`+`h`, `Alt`+`c`: clear the whole hotlist (former key: `Alt`+`h`)\n- `Alt`+`h`, `Alt`+`m`: mark the current buffer as read by removing it from the hotlist\n- `Alt`+`h`, `Alt`+`r`: restore latest hotlist removed in the current buffer\n- `Alt`+`h`, `Alt`+`Shift`+`R`: restore latest hotlist removed in all buffers\n\nYou can add them with the following command:\n\n```text\n/key missing\n```\n\nSince the key `Alt`+`h` has been moved to `Alt`+`h`, `Alt`+`c`, you must\nmanually remove the old key:\n\n```text\n/key unbind meta-h\n```\n\n### Bar item \"typing\"\n\nA bar item called \"typing\" has been added to status bar by default. It is used\nto display users that are currently typing a message on the current IRC channel\nor private buffer.\n\nIf you want to display typing notifications in the status bar, add `,[typing]`\nin your option weechat.bar.status.items.\n\n### Ordered hashtables\n\nHashtables entries are now ordered by creation date, the following functions\nare now returning entries sorted by insertion order:\n\n- hashtable_map\n- hashtable_map_string\n- hashtable_get_string (all properties except \"keys_sorted\" and \"keys_values_sorted\")\n- hashtable_add_to_infolist\n\n### IRC default capabilities\n\nAll supported capabilities are now enabled by default if the server support\nthem:\n\n- account-notify\n- away-notify\n- cap-notify\n- chghost\n- extended-join\n- invite-notify\n- message-tags\n- multi-prefix\n- server-time\n- setname\n- userhost-in-names\n\nTwo new options have been added and enabled by default to customize the behavior\nof capabilities \"account-notify\" and \"extended-join\":\n\n- irc.look.display_account_message: display ACCOUNT messages received\n- irc.look.display_extended_join: display extended join info in the JOIN\n  messages: account name and real name\n\nThe default value of option irc.server_default.capabilities is now `*` which\nmeans that all capabilities supported by both WeeChat and the server are enabled\nby default.\n\nAfter upgrade, to enable all capabilities and remove custom capabilities you\nhave set, you can do:\n\n```text\n/set irc.server_default.capabilities \"*\"\n/unset irc.server.example.capabilities\n```\n\nYou can also explicitly disable some capabilities with this syntax\n(see `/help irc.server_default.capabilities`):\n\n```text\n/set irc.server_default.capabilities \"*,!away-notify,!extended-join\"\n```\n\n### IRC SASL DH-BLOWFISH and DH-AES mechanisms removed\n\nThe SASL mechanisms DH-BLOWFISH and DH-AES have been removed, because they\nare insecure and already removed from most IRC servers.\\\nIf you were using one of these mechanisms, it is highly recommended to switch\nto any other supported SASL mechanism.\n\nFor example:\n\n```text\n/set irc.server.example.sasl_mechanism scram-sha-256\n```\n\n## Version 3.2\n\n### XDG directories\n\nSupport of XDG directories has been added.\n\nFor compatibility, if the XDG directories are not found but `~/.weechat` exists,\nthis single directory is used for all files.\n\nIf you want to switch to XDG directories, you must create and move manually\nall files in the appropriate directories.\\\nSee [WeeChat XDG specification](https://specs.weechat.org/specs/001285-follow-xdg-base-dir-spec.html#weechat-home)\nfor more information.\n\nSome options have new default value: `%h` is replaced by `${weechat_xxx_dir}`.\\\nIf you didn't change the value, it is recommended to set the new default value,\nby doing `/unset <option>` on each option:\n\nOption                     | Old default value   | New default value\n-------------------------- | ------------------- | -------------------------------------------------\nfifo.file.path             | `%h/weechat_fifo`   | `${weechat_runtime_dir}/weechat_fifo_${info:pid}`\nlogger.file.path           | `%h/logs/`          | `${weechat_data_dir}/logs`\nrelay.network.ssl_cert_key | `%h/ssl/relay.pem`  | `${weechat_config_dir}/ssl/relay.pem`\nscript.scripts.path        | `%h/script`         | `${weechat_cache_dir}/script`\nweechat.plugin.path        | `%h/plugins`        | `${weechat_data_dir}/plugins`\nxfer.file.download_path    | `%h/xfer`           | `${weechat_data_dir}/xfer`\n\nThe following scripts are updated to take care of XDG directories, be sure\nthey are all up-to-date, otherwise files may be saved in wrong directories or\nthe script may not find some files:\n\n- [autoconf.py](https://weechat.org/scripts/source/autoconf.py/) 0.4\n- [axolotl.py](https://weechat.org/scripts/source/axolotl.py/) 0.1.1\n- [beinc.py](https://weechat.org/scripts/source/beinc.py/) 4.2\n- [buddylist.pl](https://weechat.org/scripts/source/buddylist.pl/) 2.1\n- [bufsave.py](https://weechat.org/scripts/source/bufsave.py/) 0.5\n- [chanop.py](https://weechat.org/scripts/source/chanop.py/) 0.3.4\n- [chanstat.py](https://weechat.org/scripts/source/chanstat.py/) 0.2\n- [colorize_lines.pl](https://weechat.org/scripts/source/colorize_lines.pl/) 4.0\n- [confversion.py](https://weechat.org/scripts/source/confversion.py/) 0.4\n- [country.py](https://weechat.org/scripts/source/country.py/) 0.6.2\n- [cron.py](https://weechat.org/scripts/source/cron.py/) 0.5\n- [crypt.py](https://weechat.org/scripts/source/crypt.py/) 1.4.5\n- [grep.py](https://weechat.org/scripts/source/grep.py/) 0.8.5\n- [growl.py](https://weechat.org/scripts/source/growl.py/) 1.0.7\n- [histman.py](https://weechat.org/scripts/source/histman.py/) 0.8.2\n- [hl2file.py](https://weechat.org/scripts/source/hl2file.py/) 0.3\n- [hotlist2extern.pl](https://weechat.org/scripts/source/hotlist2extern.pl/) 1.0\n- [jnotify.pl](https://weechat.org/scripts/source/jnotify.pl/) 1.2\n- [latex_unicode.py](https://weechat.org/scripts/source/latex_unicode.py/) 1.2\n- [luanma.pl](https://weechat.org/scripts/source/luanma.pl/) 0.3\n- [otr.py](https://weechat.org/scripts/source/otr.py/) 1.9.3\n- [pop3_mail.pl](https://weechat.org/scripts/source/pop3_mail.pl/) 0.4\n- [purgelogs.py](https://weechat.org/scripts/source/purgelogs.py/) 0.5\n- [query_blocker.pl](https://weechat.org/scripts/source/query_blocker.pl/) 1.3\n- [queryman.py](https://weechat.org/scripts/source/queryman.py/) 0.6\n- [queue.py](https://weechat.org/scripts/source/queue.py/) 0.4.3\n- [rslap.pl](https://weechat.org/scripts/source/rslap.pl/) 1.4\n- [rssagg.pl](https://weechat.org/scripts/source/rssagg.pl/) 1.3\n- [slack.py](https://weechat.org/scripts/source/slack.py/) 2.8.0\n- [stalker.pl](https://weechat.org/scripts/source/stalker.pl/) 1.6.2\n- [substitution.rb](https://weechat.org/scripts/source/substitution.rb/) 0.0.2\n- [triggerreply.py](https://weechat.org/scripts/source/triggerreply.py/) 0.4.3\n- [update_notifier.py](https://weechat.org/scripts/source/update_notifier.py/) 0.6\n- [url_olde.py](https://weechat.org/scripts/source/url_olde.py/) 0.8\n- [urlserver.py](https://weechat.org/scripts/source/urlserver.py/) 2.6\n- [weetext.py](https://weechat.org/scripts/source/weetext.py/) 0.1.3\n- [zncplayback.py](https://weechat.org/scripts/source/zncplayback.py/) 0.2.1\n\nTo check if XDG directories are used, you can run command `/debug dirs`, which\nshould show different directories for config/data/cache/runtime, like this:\n\n```text\nDirectories:\n  home:\n    config: /home/user/.config/weechat\n    data: /home/user/.local/share/weechat\n    cache: /home/user/.cache/weechat\n    runtime: /run/user/1000/weechat\n  lib: /usr/lib/x86_64-linux-gnu/weechat\n  lib (extra): -\n  share: /usr/share/weechat\n  locale: /usr/share/locale\n```\n\nWith the legacy `~/.weechat` directory, the output would be:\n\n```text\nDirectories:\n  home:\n    config: /home/user/.weechat\n    data: /home/user/.weechat\n    cache: /home/user/.weechat\n    runtime: /home/user/.weechat\n  lib: /usr/lib/x86_64-linux-gnu/weechat\n  lib (extra): -\n  share: /usr/share/weechat\n  locale: /usr/share/locale\n```\n\n### GnuTLS certificate authorities\n\nA new option has been added to load system's default trusted certificate\nauthorities on startup: weechat.network.gnutls_ca_system (boolean, enabled\nby default).\n\nThe option weechat.network.gnutls_ca_file has been renamed to\nweechat.network.gnutls_ca_user and is now used for extra certificates\n(not the system ones).\\\nThis option now supports multiple files, separated by colons.\n\nIf you have set a user CA file in option weechat.network.gnutls_ca_file,\nthen you must set this same value in the new option weechat.network.gnutls_ca_user.\n\nWhen one of these options are changed, all certificates are purged and reloaded\nfrom files.\n\n### Split of commands before evaluation\n\nThe split of commands is now performed before the evaluation of string, in the\nfollowing cases:\n\n- IRC server option irc.server_default.command or irc.server.xxx.command\n- startup option with command line parameter `-r` / `--run-command`\n- options weechat.startup.command_before_plugins and weechat.startup.command_after_plugins.\n\nIf ever you used here multiple commands that are found by evaluation, then\nyou must use multiple commands directly.\n\nFor example if you did this:\n\n```text\n/secure set commands \"/command1 secret1;/command2 secret2\"\n/set irc.server.libera.command \"${sec.data.commands}\"\n```\n\nThis will now execute a single command: `/command1` with two parameters:\n`secret1;/command2` and `secret2`, which is not what you expect.\n\nSo you must now do this instead:\n\n```text\n/secure set command1 \"/command1 secret1\"\n/secure set command2 \"/command2 secret2\"\n/set irc.server.libera.command \"${sec.data.command1};${sec.data.command2}\"\n```\n\nYou could also do this, but be careful, there are two evaluations of strings\n(the secured data itself is evaluated as well):\n\n```text\n/secure set commands \"/command1 secret1;/command2 secret2\"\n/set irc.server.libera.command \"/eval -s ${sec.data.commands}\"\n```\n\n## Version 3.1\n\n### External program to read secured data passphrase\n\nA new option `sec.crypt.passphrase_command` has been added to read the passphrase\nfrom the output of an external program (like a password manager).\n\nThe option `sec.crypt.passphrase_file` has been removed, because the command\ncan now read a file as well. If you used a file to read the passphrase, you\nmust now setup the command like this:\n\n```text\n/set sec.crypt.passphrase_command \"cat ~/.weechat-passphrase\"\n```\n\nFor security reasons, it is of course highly recommended to use a password manager\nor a program to decrypt a file with your passphrase rather than using a file with\nthe clear password.\\\nFor example with password-store (command `pass`):\n\n```text\n/set sec.crypt.passphrase_command \"/usr/bin/pass show weechat/passphrase\"\n```\n\n### Vertical split of windows\n\nThe vertical split of windows has been fixed\n(see issue [#1612](https://github.com/weechat/weechat/issues/1612)): now the new\nwindow has the asked size, instead of the original window.\n\nFor example with this command the new window (on the right) has size 80% instead\nof 20% in previous releases:\n\n```text\n/window splitv 80\n```\n\n### List of buffer local variables\n\nThe command `/buffer localvar` has been renamed to `/buffer listvar`.\n\nThe option `localvar` is still supported to stay compatible with scripts\ncalling it or referencing it in the documentation.\\\nIt is deprecated and will be removed in a future release.\n\nNew options `setvar` and `delvar` were also added in command `/buffer`,\nsee `/help buffer`.\n\n### Buflist option buflist.look.use_items\n\nA new buflist option `buflist.look.use_items` has been added to speed up\ndisplay of buflist, in case you use a single buflist item (the most common use case).\n\nIf ever you use more than one item (item \"buflist2\" or even \"buflist3\"), you\nmust adjust the value of the new option, which defaults to 1:\n\n```text\n/set buflist.look.use_items 2\n```\n\n## Version 3.0\n\n### New option to enable download of scripts\n\nA new option has been added to allow the script plugin to download the list of\nscripts and the scripts themselves (on weechat.org by default).\n\nThis option is `off` by default, so you must opt in if you want to use the\n`/script` command, even if you upgraded from an old WeeChat version:\n\n```text\n/set script.scripts.download_enabled on\n```\n\nNote: when this option is enabled, WeeChat can sometimes download again the list\nof scripts when you use the `/script` command, even if you don't install a script.\n\n### IRC commands /allchan, /allpv and /allserv\n\nThe command and arguments given to commands `/allchan`, `/allpv` and `/allserv`\nare now evaluated (see `/help` on the commands for more information).\n\nAdditionally, a breaking change has been introduced: the leading `/` is now\nrequired in these commands, so this allows to send text to buffers without\nusing the command `/msg * xxx`.\n\nSo with previous releases, to say \"hello\" on all channels:\n\n```text\n/allchan msg * hello\n```\n\nNow it can be done like this:\n\n```text\n/allchan hello\n```\n\nIf you want to use a command, you must add explicitly the leading `/`:\n\n```text\n/allchan /msg * hello\n```\n\n### Default trigger \"beep\"\n\nThe command of \"beep\" trigger is now executed only if the message does NOT\ncontain the tag \"notify_none\" (in addition to existing conditions).\n\nYou can restore the default trigger \"beep\" with the following command:\n\n```text\n/trigger restore beep\n```\n\n## Version 2.9\n\n### New background color for inactive bars\n\nA new option has been added in bar: \"color_bg_inactive\". It is used for window\nbars, when the window is not the active window.\n\nBy default this color is set to \"default\" for default bars, except for status\nand title: the color is set to \"darkgray\".\n\nIf you upgrade from a previous release, the color will be \"default\" for all\nbars, so if you want to use the new default settings, you can do:\n\n```text\n/set weechat.bar.title.color_bg_inactive darkgray\n/set weechat.bar.status.color_bg_inactive darkgray\n```\n\nIf you changed the option \"color_bg\" in some bars, you should also adjust\nthe new option \"color_bg_inactive\", depending on your needs.\n\nThe function [bar_new](https://weechat.org/doc/weechat/plugin/#_bar_new) in API is updated,\nso this is an incompatible change: all plugins and scripts calling this function must be updated.\n\nThe following scripts are updated consequently to be compatible with all\nWeeChat versions:\n\n- [buddylist.pl](https://weechat.org/scripts/source/buddylist.pl/) 2.0\n- [buffers.pl](https://weechat.org/scripts/source/buffers.pl/) 5.7\n- [chanmon.pl](https://weechat.org/scripts/source/chanmon.pl/) 2.6\n- [chanop.py](https://weechat.org/scripts/source/chanop.py/) 0.3.2\n- [highmon.pl](https://weechat.org/scripts/source/highmon.pl/) 2.7\n- [iset.pl](https://weechat.org/scripts/source/iset.pl/) 4.4\n- [menu.pl](https://weechat.org/scripts/source/menu.pl/) 1.0\n- [moc_control.py](https://weechat.org/scripts/source/moc_control.py/) 1.9\n- [newsbar.pl](https://weechat.org/scripts/source/newsbar.pl/) 0.19\n- [pv_info.pl](https://weechat.org/scripts/source/pv_info.pl/) 0.0.6\n- [rssagg.pl](https://weechat.org/scripts/source/rssagg.pl/) 1.2\n- [urlbar.py](https://weechat.org/scripts/source/urlbar.py/) 14\n- [urlselect.lua](https://weechat.org/scripts/source/urlselect.lua/) 0.5\n- [vimode.py](https://weechat.org/scripts/source/vimode.py/) 0.8\n\n### New modifier_data for modifier \"weechat_print\"\n\nThe modifier \"weechat_print\" has been fixed and the content of \"modifier_data\"\nsent to the callback has changed (see issue [#42](https://github.com/weechat/weechat/issues/42)).\n\nThis is an incompatible change, therefore all plugins, scripts and triggers\nusing this modifier and the \"modifier_data\" argument must be updated.\n\nThe old format contained plugin name + \";\" + buffer name + \";\" + tags:\n\n```text\nirc;libera.#weechat;tag1,tag2,tag3\n```\n\nThe new format contains buffer pointer + \";\" + tags:\n\n```text\n0x123abc;tag1,tag2,tag3\n```\n\nThe following scripts are updated consequently to be compatible with all\nWeeChat versions:\n\n- [colorize_lines.pl](https://weechat.org/scripts/source/colorize_lines.pl/) 3.9\n- [colorize_nicks.py](https://weechat.org/scripts/source/colorize_nicks.py/) 27\n- [colorizer.rb](https://weechat.org/scripts/source/colorizer.rb/) 0.2\n- [curiousignore.pl](https://weechat.org/scripts/source/curiousignore.pl/) 0.4\n- [format_lines.pl](https://weechat.org/scripts/source/format_lines.pl/) 1.6\n- [identica.py](https://weechat.org/scripts/source/identica.py/) 0.4.3\n- [mass_hl_blocker.pl](https://weechat.org/scripts/source/mass_hl_blocker.pl/) 0.2\n- [noirccolors.py](https://weechat.org/scripts/source/noirccolors.py/) 0.4\n- [parse_relayed_msg.pl](https://weechat.org/scripts/source/parse_relayed_msg.pl/) 1.9.3\n- [unhighlight.py](https://weechat.org/scripts/source/unhighlight.py/) 0.1.3\n- [weemoticons.py](https://weechat.org/scripts/source/weemoticons.py/) 0.3\n\n### Move of API completion functions\n\nCompletion functions have been added in WeeChat 2.9, to allow relay clients or\nplugins/scripts to complete a string, without using the buffer input.\n\nTherefore two functions have been renamed in API and moved to the new\n\"completion\" category:\n\n- hook_completion_get_string → [completion_get_string](https://weechat.org/doc/weechat/plugin/#_completion_get_string)\n- hook_completion_list_add → [completion_list_add](https://weechat.org/doc/weechat/plugin/#_completion_list_add)\n\nNote: the old names are still valid for compatibility reasons, but it is recommended\nto use only the new names as the old ones may be removed in an upcoming release.\n\n### GnuTLS is now a required dependency\n\nThe build options `ENABLE_GNUTLS` (in CMake) and `--disable-gnutls` (in autotools)\nhave been removed. That means now GnuTLS is always compiled and used in WeeChat.\n\nMotivations:\n\n- communications encryption should be built-in, not optional\n- GnuTLS library should be available everywhere\n- reduce complexity of code and tests of builds.\n\n### The trigger \"cmd_pass\" does not hide anymore values of /set command\n\nThe default trigger \"cmd_pass\" does not hide anymore values of options in `/set`\ncommand which contain \"password\" in the name.\n\nThe reason is that it was masking values of options that contains the word\n\"password\" but the value is not a password and does not contain sensitive data,\nfor example these options were affected:\n\n- irc.look.nicks_hide_password\n- relay.network.allow_empty_password\n- relay.network.password_hash_algo\n- relay.network.password_hash_iterations\n\nSince all real password options are now evaluated, it is recommended to use\nsecure data to store the passwords ciphered in config file.\\\nBy using secure data, the passwords are never displayed on screen (even with\n`/set` command) nor written in log files.\n\nFor example you can do that:\n\n```text\n/secure passphrase my_secret_passphrase\n/secure set libera my_password\n/set irc.server.libera.sasl_password \"${sec.data.libera}\"\n```\n\nThis will be displayed like that in WeeChat, using the new regex value of\n\"cmd_pass\" trigger:\n\n```text\n/secure passphrase ********************\n/secure set libera ***********\n/set irc.server.libera.sasl_password \"${sec.data.libera}\"\n```\n\nIf you want to use the new trigger regex after upgrade, you can do:\n\n```text\n/trigger restore cmd_pass\n```\n\nIf ever you prefer the old trigger regex, you can change it like that:\n\n```text\n/set trigger.trigger.cmd_pass.regex  \"==^((/(msg|m|quote) +(-server +[^ ]+ +)?nickserv +(id|identify|set +password|ghost +[^ ]+|release +[^ ]+|regain +[^ ]+|recover +[^ ]+) +)|/oper +[^ ]+ +|/quote +pass +|/set +[^ ]*password[^ ]* +|/secure +(passphrase|decrypt|set +[^ ]+) +)(.*)==${re:1}${hide:*,${re:+}}\"\n```\n\n### Evaluation of trigger command arguments\n\nThe arguments for a trigger command (except the command itself) are now evaluated.\n\nThat means you can use for example new lines in the command description, like that:\n\n```text\n/trigger add test command \"test;test command;arg1 arg2;arg1: description 1${\\n}arg2: description 2\"\n```\n\nThe command `/help test` will display this help in WeeChat:\n\n```text\n[trigger]  /test  arg1 arg2\n\ntest command\n\narg1: description 1\narg2: description 2\n```\n\n### Add of handshake and nonce in weechat relay protocol\n\n#### Handshake\n\nA `handshake` command has been added in weechat relay protocol.\\\nThe client should send this command before the `init` to negotiate the way to\nauthenticate with the relay server.\n\nSee the [handshake command](https://weechat.org/doc/weechat/relay/#command_handshake)\nin Relay protocol doc for more information.\n\n#### Server \"nonce\"\n\nFurthermore, a \"nonce\" is now generated for each client connecting and must be\nused by the client in case of hashed password in the `init` command.\\\nThe goal is to prevent replay attacks in case someone manages to read exchanges\nbetween the client and relay.\n\nWhen hashing the password, the client must use salt composed by this nonce\nas binary (it is hexadecimal and must be base16-decoded), concatenated with\na client nonce after this one.\\\nSo the hash is computed on: (`server nonce` + `client nonce` + `password`).\n\nThis salt is now mandatory even for algorithms `SHA256` and `SHA512`; this is\na breaking change in protocol, needed for security reasons.\n\nSee the [init command](https://weechat.org/doc/weechat/relay/#command_init)\nin Relay protocol doc for more information.\n\n## Version 2.8\n\n### Auto connection to servers\n\nThe command line option `-a` (or `--no-connect`), which can also be used in the\n`/plugin` command, is now used to set a new info called `auto_connect`\n(see the function [info_get](https://weechat.org/doc/weechat/plugin/#_info_get) in the Plugin API reference).\n\nTherefore, the option is not sent anymore to the function `weechat_plugin_init`\nof plugins.\\\nThe plugins using this option must now get the info `auto_connect` and check\nif the value is \"1\" (a string with just `1`).\n\nThe purpose of this change is to allow scripts as well to check this info on\nstartup, and connect or not, depending on the value\n(see issue [#1453](https://github.com/weechat/weechat/issues/1453)).\n\nTo be compatible with WeeChat ≤ 2.7, the script can do this, for example\nin Python:\n\n```python\nauto_connect = weechat.info_get(\"auto_connect\", \"\") != \"0\"\n```\n\nThe variable `auto_connect` will be set like that, depending on the WeeChat\nversion:\n\n- WeeChat ≤ 2.7: always `True` because the info is an empty string (it does not\n  exist), which is different from \"0\",\n- WeeChat ≥ 2.8: `True` by default, and `False` if `-a` or `--no-connect` is\n  given by the user (either on command line or when loading the plugin).\n\n## Version 2.7\n\n### CMake errors on missing dependencies\n\nWhen compiling WeeChat with CMake (which is the recommended way), errors are\nnow displayed on any missing dependency, if the optional feature was enabled\n(most features are automatically enabled, except documentation, man page and\ntests).\n\nAny error on a missing dependency is fatal, so WeeChat cannot be compiled.\nThis is a new behavior compared to old versions, where any missing dependency\nwas silently ignored and the compilation was possible anyway.\n\nFor example if PHP is not installed on your system, CMake will display an error\non missing PHP library:\n\n```text\n-- checking for one of the modules 'php7'\nCMake Warning at cmake/FindPHP.cmake:57 (message):\n  Could not find libphp7.  Ensure PHP >=7.0.0 development libraries are\n  installed and compiled with `--enable-embed`.  Ensure `php-config` is in\n  `PATH`.  You may set `-DCMAKE_LIBRARY_PATH=...` to the directory containing\n  libphp7.\nCall Stack (most recent call first):\n  src/plugins/CMakeLists.txt:157 (find_package)\n\n\nCMake Error at src/plugins/CMakeLists.txt:161 (message):\n  Php not found\n```\n\nThen you can either install PHP or explicitly disable PHP if you don't need this\nplugin, using this cmake option:\n\n```bash\ncmake .. -DENABLE_PHP=OFF\n```\n\n### Strings received in Python 3 callbacks\n\nThe strings sent to script callbacks in Python 3 are now automatically converted\naccording to the content:\n\n- if the string is valid UTF-8, it is sent as `str` (legacy behavior)\n- if the string is not valid UTF-8, it is sent as `bytes` (new).\n\nIn some cases only, the string may not be valid UTF-8, so it is received as\n`bytes` in the callback, which must take care of that.\n\nFor more information, see the WeeChat scripting guide: chapter about strings\nreceived in callbacks (see also issue [#1389](https://github.com/weechat/weechat/issues/1389)).\n\nNote: there are no changes for Python 2 (which is now deprecated and should not\nbe used anymore), the strings sent to callbacks are always of type `str`, and\nmay contain invalid UTF-8 data, in the cases mentioned in the WeeChat scripting\nguide.\n\n### IRC message decoding/encoding\n\nA new server option called \"charset_message\" has been added, replacing the\noption irc.network.channel_encode.\n\nThis new server option has three possible values:\n\n- _message_ (default): the whole IRC message is decoded/encoded, this is the\n  new default behavior; in case of problem with channel names, try to use\n  _text_ instead\n- _channel_: the message is decoded/encoded starting at the channel name (or\n  the text if no channel is present); this is like setting the old option\n  irc.network.channel_encode to `on`\n- _text_: the message is decoded/encoded starting from the text (for example\n  the user message); this is like setting the old option\n  irc.network.channel_encode to `off` (so this was the default behavior\n  in previous versions)\n\n### Suffix for files received via DCC\n\nFiles received via DCC (xfer plugin) now have a suffix \".part\" during the\ntransfer. When the transfer is successful, the suffix is removed.\n\nThis suffix can be customized with the new option xfer.file.download_temporary_suffix.\n\nIf you prefer the legacy behavior (no suffix added), you can set an empty value\nin the new option:\n\n```text\n/set xfer.file.download_temporary_suffix \"\"\n```\n\n## Version 2.6\n\n### Python 3 by default\n\nPython 3 is now used by default to compile the \"python\" plugin (no fallback\non Python 2).\n\nThe CMake option `ENABLE_PYTHON3` has been renamed to `ENABLE_PYTHON2`\n(configure option `--enable-python2`). If this option is enabled, the \"python\"\nplugin is built with Python 2 (no fallback on Python 3).\n\n### Nick colors\n\nThe function to compute the colors based on the nick letters has been fixed\n(now the function uses only a 64-bit integer even if the underlying architecture\nis 32-bit).\n\nIf you're running WeeChat on a 32-bit architecture and want to keep same colors\nas the previous releases, you can use one of the two new hash values.\n\nIf you were using \"djb2\", you can switch to \"djb2_32\":\n\n```text\n/set weechat.look.nick_color_hash djb2_32\n```\n\nIf you were using \"sum\", you can switch to \"sum_32\":\n\n```text\n/set weechat.look.nick_color_hash sum_32\n```\n\n## Version 2.5\n\n### Aspell plugin renamed to Spell\n\nThe \"aspell\" plugin has been renamed to \"spell\", a more generic term, because\nit supports aspell and also enchant.\n\nConsequently, the following things have been renamed as well:\n\n- file aspell.conf → spell.conf (the content of the file has not changed, so you can just rename the file to keep your changes)\n- options `aspell.*` → `spell.*`\n- command `/aspell` → `/spell`\n- default key `Alt`+`s` → `/mute spell toggle`\n- bar item aspell_dict → spell_dict\n- bar item aspell_suggest → spell_suggest\n- info aspell_dict → spell_dict\n\nIf you are upgrading from a previous release, you can copy the config file\nbefore doing `/upgrade`, in WeeChat:\n\n```text\n/save aspell\n/exec -sh cp ~/.weechat/aspell.conf ~/.weechat/spell.conf\n/upgrade\n```\n\nIf you already upgraded WeeChat:\n\n```text\n/exec -sh cp ~/.weechat/aspell.conf ~/.weechat/spell.conf\n/reload spell\n```\n\nOnce configuration is OK, you can delete the file `~/.weechat/aspell.conf`.\n\nThen you can search if you are using \"aspell\" in values of options:\n\n```text\n/fset =aspell\n```\n\nIf there are options displayed, replace \"aspell\" by \"spell\" in values.\n\nThe default key `Alt`+`s` can be changed to the new `/spell` command:\n\n```text\n/key bind meta-s /mute spell toggle\n```\n\n### Speed limit option for DCC files\n\nThe option xfer.network.speed_limit has been renamed to xfer.network.speed_limit_send.\n\nIf you changed the value of this option, you must set it again after upgrade.\n\nA new option xfer.network.speed_limit_recv has been added to limit the\nspeed of received files.\n\n### Allocated string in hook info and function info_get\n\nThe hook info callback now returns an allocated string, which must be freed\nafter use (in previous versions, a pointer to a static string was returned).\n\nConsequently, the function info_get returns an allocated string, which must\nbe freed after use.\n\nThis affects only C code, no changes are required in scripts.\n\n## Version 2.4\n\n### Nick completer\n\nA space is not added automatically anymore when you complete a nick at the\nbeginning of command line.\\\nPurpose of this change is to be more flexible: you can choose whether the space\nis added or not (it was always added in previous releases).\n\nThe default value of option `weechat.completion.nick_completer` has been changed\nto add the space by default, but the value of option is not changed automatically\non upgrade.\n\nSo you can run this command if you upgraded from an old version\nand want the space still added automatically:\n\n```text\n/set weechat.completion.nick_completer \": \"\n```\n\n### Base64 API functions\n\nThe functions to encode/decode base64 strings have been renamed and now support\nbase 16, 32, and 64.\n\nNew functions in C API, supporting base 16, 32, and 64:\n\n- [string_base_encode](https://weechat.org/doc/weechat/plugin/#_string_base_encode)\n- [string_base_decode](https://weechat.org/doc/weechat/plugin/#_string_base_decode)\n\nFunctions removed from C API:\n\n- string_encode_base64\n- string_decode_base64\n\n## Version 2.2\n\n### Default conditions for hotlist\n\nThe default value for option `weechat.look.hotlist_add_conditions` has been\nchanged to take care about the number of connected clients on the relay\nwith weechat protocol: if at least one client is connected, the buffer is\nalways added to the hotlist.\n\nThe new value contains three conditions, if one of them is true, the buffer\nis added to the hotlist:\n\n- `${away}`: true if you are away on the server matching the buffer,\n- `${buffer.num_displayed} == 0`: true if the buffer is not displayed in any\n  window\n- `${info:relay_client_count,weechat,connected} > 0`: true if at least\n  one client is connected on a weechat relay (new condition).\n\nTo use the new default value, you can reset the option with this command:\n\n```text\n/unset weechat.look.hotlist_add_conditions\n```\n\nOr set explicitly the value:\n\n```text\n/set weechat.look.hotlist_add_conditions \"${away} || ${buffer.num_displayed} == 0 || ${info:relay_client_count,weechat,connected} > 0\"\n```\n\n### Default triggers\n\nThe existing triggers \"cmd_pass\" and \"msg_auth\" have been updated to hide\npassword in command `/msg nickserv set password` and support the option\n`-server <name>`.\n\nYou can restore the default triggers with the following command:\n\n```text\n/trigger restore cmd_pass msg_auth\n```\n\n### Tags in IRC \"in\" signals\n\nThe IRCv3 tags are now sent in these IRC signals for received messages\n(`xxx` is IRC server name, `yyy` is IRC command name):\n\n- `xxx,irc_in_yyy`\n- `xxx,irc_in2_yyy`\n- `xxx,irc_raw_in_yyy`\n- `xxx,irc_raw_in2_yyy`\n\nThis could break plugins or scripts that parse IRC messages and don't expect\nto receive tags (even if tags **are** part of the IRC message, so this was a bug\nin the IRC signals).\n\nSee issue [#787](https://github.com/weechat/weechat/issues/787) for more information.\n\nNote: it is recommended for plugins and scripts to use the WeeChat IRC parser:\nsee the function [info_get_hashtable](https://weechat.org/doc/weechat/plugin/#_info_get_hashtable)\nin the Plugin API reference.\n\nNow the whole IRC message is received by the signal callback, for example:\n\n```text\n@tag1=abc;tag2=def :nick!user@host PRIVMSG #test :this is a test\n```\n\nIn older releases, this message was received:\n\n```text\n:nick!user@host PRIVMSG #test :this is a test\n```\n\n### New Debian package for headless version\n\nA new Debian package has been added: \"weechat-headless\" which contains the\nbinary \"weechat-headless\" and its man page.\n\nIn version 2.1, this binary was in the package \"weechat-curses\".\n\n## Version 2.1\n\n### Completion for /set and /help commands\n\nA new option weechat.completion.partial_completion_templates has been added to\nforce partial completion on some templates.  By default, the option name\ncompleted in `/set` and `/help` commands are now using partial completion.\n\nIf you prefer old behavior, you can remove the templates from the new option\nwith this command:\n\n```text\n/set weechat.completion.partial_completion_templates \"\"\n```\n\nFor more information about this feature, you can read help with:\n\n```text\n/help weechat.completion.partial_completion_templates\n```\n\n### Option to check license of scripts loaded\n\nA configuration file has been added for each script plugin: python.conf,\nperl.conf, ruby.conf, ...\n\nTherefore the option to check license of loaded scripts has been moved from\n`plugins.var.<language>.check_license` (type: string) to the plugin\nconfiguration file (type: boolean, default is `off`).\n\nList of options moved:\n\n- plugins.var.python.check_license (string) → python.look.check_license (boolean)\n- plugins.var.perl.check_license (string) → perl.look.check_license (boolean)\n- plugins.var.ruby.check_license (string) → ruby.look.check_license (boolean)\n- plugins.var.lua.check_license (string) → lua.look.check_license (boolean)\n- plugins.var.tcl.check_license (string) → tcl.look.check_license (boolean)\n- plugins.var.guile.check_license (string) → guile.look.check_license (boolean)\n- plugins.var.javascript.check_license (string) → javascript.look.check_license (boolean)\n- plugins.var.php.check_license (string) → php.look.check_license (boolean)\n\n## Version 2.0\n\n### Fset plugin\n\nA new plugin \"fset\" has been added, it replaces the script iset.pl and has many\nnew features.\n\nBy default the fset plugin changes the behavior of `/set` command when it is\nused with only an option name: it opens the fset buffer if at least one option\nis found.\n\nThe old behavior was to display the list of options in the core buffer.\n\nIf you prefer the old behavior, you can restore it with this command:\n\n```text\n/set fset.look.condition_catch_set \"\"\n```\n\nFor more information about this feature, you can read help with:\n\n```text\n/help fset.look.condition_catch_set\n```\n\n### Split of scripting Debian packages\n\nThe Debian packaging has changed (for now only on weechat.org repositories,\nnot in Debian official repositories).\\\nThe package \"weechat-plugins\" has been split into 9 packages:\n\n- weechat-plugins (with only the following plugins: aspell, exec, fifo, relay,\n  script, trigger)\n- weechat-python\n- weechat-perl\n- weechat-ruby\n- weechat-lua\n- weechat-tcl\n- weechat-guile\n- weechat-javascript\n- weechat-php.\n\nIf you are using the packages from weechat.org, you will have to install\nmanually the scripting packages (according to the languages you'll use\nin WeeChat), for example Python/Perl only:\n\n```bash\nsudo apt-get install weechat-python weechat-perl\n```\n\nFor development packages:\n\n```bash\nsudo apt-get install weechat-devel-python weechat-devel-perl\n```\n\n### Evaluation in buflist\n\nThe evaluation of expressions in buflist options is not recursive anymore,\nto prevent too many evaluations, for example in buffer variables\n(see issue [#1060](https://github.com/weechat/weechat/issues/1060) for more information).\\\nIf you are using custom variables/options containing evaluated expressions,\nlike `${some.config.option}`, and if this option contains evaluated strings (`${...}`),\nyou must evaluate them with: `${eval:${some.config.option}}`.\n\nNote: the default buflist formats (`${format_buffer}`, `${format_name}`,\n`${format_hotlist}`, ...) are automatically evaluated in options buflist.format.buffer,\nbuflist.format.buffer_current and buflist.format.hotlist.\n\n### Function hook_connect\n\nIn scripts, the arguments \"status\", \"gnutls_rc\" and \"sock\" sent to the callback\nof \"hook_connect\" are now integers (they were strings in older releases).\\\nTo be compatible with all versions, it is recommended to convert the argument\nto integer before using it, for example in Python: `int(sock)`.\n\n### Function hook_fd\n\nIn scripts, the argument \"fd\" sent to the callback of \"hook_fd\" is now\nan integer (it was a string in older releases).\\\nTo be compatible with all versions, it is recommended to convert the argument\nto integer before using it, for example in Python: `int(fd)`.\n\n## Version 1.8\n\n### Buflist plugin\n\nA new plugin called \"buflist\" has been added, it replaces the script \"buffers.pl\".\n\nIf the script is installed, you will see two sidebars with list of buffers.\n\nIf you fell in love with buflist and that the script buffers.pl is installed,\nyou can uninstall the script and remove its bar with these commands:\n\n```text\n/script remove buffers.pl\n/bar del buffers\n```\n\nIf you don't want the list of buffers, you can disable buflist:\n\n```text\n/set buflist.look.enabled off\n```\n\nTo save extra memory, you can even unload the buflist plugin, remove the bar and\nprevent the plugin from loading on next startup:\n\n```text\n/plugin unload buflist\n/bar del buflist\n/set weechat.plugin.autoload \"*,!buflist\"\n```\n\n### Options\n\nThe option script.scripts.url_force_https has been removed because now the\nsite weechat.org can only be used with HTTPS.\\\nBoth HTTP and HTTPS protocols are allowed in the option script.scripts.url.\\\nFor `http://weechat.org/` an automatic redirection to `https://weechat.org/`\nwill occur, so you should check that the CA certificates are properly installed\non your machine.\n\nAspell option with color for suggestion on a misspelled word has been renamed:\n\n- aspell.color.suggestions has been renamed to aspell.color.suggestion\n\n## Version 1.7\n\n### FIFO options\n\nA new configuration file \"fifo.conf\" has been added and the old option\nplugins.var.fifo.fifo has been moved to fifo.file.enabled.\n\nA new option fifo.file.path can be used to customize the FIFO pipe\npath/filename.\n\n### Default triggers\n\nA new trigger \"cmd_pass_register\" has been added to hide only password and not\nemail in command `/msg nickserv register password email`.\\\nThe existing trigger \"cmd_pass\" has been updated to hide password in all\ncommands except `/msg nickserv register`.\n\nYou can add the new trigger and restore the other one with the following\ncommand:\n\n```text\n/trigger restore cmd_pass_register cmd_pass\n```\n\n## Version 1.6\n\n### IRC kick/part/quit default messages\n\nServer options with default messages for kick/part/quit have been renamed:\n\n- options by default for all servers:\n  - irc.server_default.default_msg_kick → irc.server_default.msg_kick\n  - irc.server_default.default_msg_part → irc.server_default.msg_part\n  - irc.server_default.default_msg_quit → irc.server_default.msg_quit\n- options in each server:\n  - irc.server.xxx.default_msg_kick → irc.server.xxx.msg_kick\n  - irc.server.xxx.default_msg_part → irc.server.xxx.msg_part\n  - irc.server.xxx.default_msg_quit → irc.server.xxx.msg_quit\n\nIf you changed the value of these options, you must set them again after upgrade.\n\n### Printf API functions\n\nSome \"printf\" functions have been removed from C API (there were not in scripting API):\n\n- printf_date\n- printf_tags\n\nThe function \"printf_date_tags\" must now be used instead of these functions\n(the two functions removed were just C macros on function \"printf_date_tags\"\nwith tags set to NULL for \"printf_date\" and date set to 0 for \"printf_tags\").\n\n## Version 1.5\n\n### Nick coloring moved to core\n\nThe nick coloring feature has been moved from irc plugin to core.\n\nTwo options have been moved from irc plugin (irc.conf) to core (weechat.conf),\nand you must set new value if you customized them:\n\n- irc.look.nick_color_force → weechat.look.nick_color_force\n- irc.look.nick_color_hash → weechat.look.nick_color_hash\n- irc.look.nick_color_stop_chars → weechat.look.nick_color_stop_chars\n\nThe default value for option weechat.look.nick_color_hash is now `djb2`\ninstead of `sum`.\n\nThe following info names (used by API function \"info_get\") are renamed as well:\n\n- irc_nick_color → nick_color\n- irc_nick_color_name → nick_color_name\n\nNote: the old info irc_nick_color and irc_nick_color_name are kept for\ncompatibility (especially scripts) and will be removed in an upcoming release.\n\n### Pointer in callbacks\n\nA pointer has been added in all callbacks used by scripts, so the callbacks\nwill receive an extra `const void *pointer` before the `void *data`\n(in the C API only, not scripting API).\n\nThis is used to remove linked list of callbacks in scrips (improve speed,\nreduce memory usage).\n\nFollowing functions are changed in the C API:\n\n- [exec_on_files](https://weechat.org/doc/weechat/plugin/#_exec_on_files)\n- [config_new](https://weechat.org/doc/weechat/plugin/#_config_new)\n- [config_new_section](https://weechat.org/doc/weechat/plugin/#_config_new_section)\n- [config_new_option](https://weechat.org/doc/weechat/plugin/#_config_new_option)\n- [hook_command](https://weechat.org/doc/weechat/plugin/#_hook_command)\n- [hook_command_run](https://weechat.org/doc/weechat/plugin/#_hook_command_run)\n- [hook_timer](https://weechat.org/doc/weechat/plugin/#_hook_timer)\n- [hook_fd](https://weechat.org/doc/weechat/plugin/#_hook_fd)\n- [hook_process](https://weechat.org/doc/weechat/plugin/#_hook_process)\n- [hook_process_hashtable](https://weechat.org/doc/weechat/plugin/#_hook_process_hashtable)\n- [hook_connect](https://weechat.org/doc/weechat/plugin/#_hook_connect)\n- [hook_print](https://weechat.org/doc/weechat/plugin/#_hook_print)\n- [hook_signal](https://weechat.org/doc/weechat/plugin/#_hook_signal)\n- [hook_hsignal](https://weechat.org/doc/weechat/plugin/#_hook_hsignal)\n- [hook_config](https://weechat.org/doc/weechat/plugin/#_hook_config)\n- [hook_completion](https://weechat.org/doc/weechat/plugin/#_hook_completion)\n- [hook_modifier](https://weechat.org/doc/weechat/plugin/#_hook_modifier)\n- [hook_info](https://weechat.org/doc/weechat/plugin/#_hook_info)\n- [hook_info_hashtable](https://weechat.org/doc/weechat/plugin/#_hook_info_hashtable)\n- [hook_infolist](https://weechat.org/doc/weechat/plugin/#_hook_infolist)\n- [hook_hdata](https://weechat.org/doc/weechat/plugin/#_hook_hdata)\n- [hook_focus](https://weechat.org/doc/weechat/plugin/#_hook_focus)\n- [unhook_all](https://weechat.org/doc/weechat/plugin/#_unhook_all)\n- [buffer_new](https://weechat.org/doc/weechat/plugin/#_buffer_new)\n- [bar_item_new](https://weechat.org/doc/weechat/plugin/#_bar_item_new)\n- [upgrade_new](https://weechat.org/doc/weechat/plugin/#_upgrade_new)\n- [upgrade_read](https://weechat.org/doc/weechat/plugin/#_upgrade_read)\n\nThe function `unhook_all` has a new argument `const char *subplugin` to remove\nonly hooks created by this \"subplugin\" (script).\n\n### Bar item \"away\"\n\nThe bar item \"away\" has been moved from irc plugin to core (so that away status\ncan be displayed for any plugin, using the buffer local variable \"away\").\n\nTwo options have been moved from irc plugin (irc.conf) to core (weechat.conf):\n\n- irc.look.item_away_message → weechat.look.item_away_message\n- irc.color.item_away → weechat.color.item_away\n\n### Default triggers\n\nThe default triggers \"cmd_pass\" and \"msg_auth\" have been updated to include\nnickserv commands \"recover\" and \"regain\".\n\nYou can restore them with the following command:\n\n```text\n/trigger restore cmd_pass msg_auth\n```\n\n## Version 1.4\n\n### IRC alternate nicks\n\nThe option irc.network.alternate_nick has been moved into servers\n(irc.server_default.nicks_alternate and irc.server.xxx.nicks_alternate).\n\nIf you disabled this option, you must switch it off again, globally or by\nserver.\n\nGlobally (default value for all servers):\n\n```text\n/set irc.server_default.nicks_alternate off\n```\n\nFor a specific server:\n\n```text\n/set irc.server.libera.nicks_alternate off\n```\n\n## Version 1.3\n\n### IRC channels encoding\n\nIf you are using exotic charsets in your channel names (anything different from\nUTF-8, like ISO charset), you should turn on a new option:\n\n```text\n/set irc.network.channel_encode on\n```\n\nThis will force WeeChat to decode/encode the channel name\n(like WeeChat 1.2 or older did).\n\nSee these issues for more information: [#482](https://github.com/weechat/weechat/issues/482)\nand [#218](https://github.com/weechat/weechat/issues/218).\n\nNote: it is **highly recommended** to use only UTF-8 in WeeChat (wherever you can),\nbecause everything is stored as UTF-8 internally.\n\n### Alias command\n\nThe command `/alias` has been updated to list, add and remove aliases.\nTherefore the command `/unalias` has been removed.\n\nTo add an alias, the argument `add` must be used in command `/alias` before the\nname, for example:\n\n```text\n/alias add split /window splith\n```\n\nAnd the alias is removed with this command:\n\n```text\n/alias del split\n```\n\n### Script path\n\nThe option script.scripts.dir has been renamed to script.scripts.path\n(and the content is now evaluated, see `/help eval`).\n\nIf you changed the value of this option, you must set it again after upgrade.\n\n## Version 1.2\n\nThe word chars are now customizable with two options:\n\n- weechat.look.word_chars_highlight\n- weechat.look.word_chars_input\n\nThe behavior has changed for command line: now any non-word char is used as\ndelimiter for keys to move to previous/next word or delete previous/next word.\n\nYou can restore the old behavior (only use spaces as delimiters) with this\ncommand:\n\n```text\n/set weechat.look.word_chars_input \"!\\u00A0,!\\x20,*\"\n```\n\n## Version 1.1\n\n### New format for regex replacement in triggers\n\nA new format is used in regex replacement to use regex groups, this format\nis incompatible with version 1.0.\n\nThe existing triggers are **NOT automatically updated**.\n\nOld format     | New format               | Examples (new format)\n-------------- | ------------------------ | ----------------------------------------\n`$0` ... `$99` | `${re:0}` ... `${re:99}` | `${re:1}`\n`$+`           | `${re:+}`                | `${re:+}`\n`$.*N`         | `${hide:*,${re:N}}`      | `${hide:*,${re:2}}`, `${hide:-,${re:+}}`\n\nMoreover, default triggers used to hide passwords have been fixed for BSD operating systems.\n\nYou can restore them with the following command:\n\n```text\n/trigger restore cmd_pass msg_auth server_pass\n```\n\nIf you added triggers with the old regex replacement format, you must update\nthem manually.\n\n### Default \"beep\" trigger\n\nThe command of \"beep\" trigger is now executed only if the message is displayed\n(not filtered with `/filter`).\n\nYou can restore the default \"beep\" trigger with the following command:\n\n```text\n/trigger restore beep\n```\n\n### Return code of commands\n\nThe API function [command](https://weechat.org/doc/weechat/plugin/#_command)\nnow sends the value returned return by command callback.\n\nWeeChat does not display anymore an error when a command returns\n`WEECHAT_RC_ERROR`. Consequently, all plugins/scripts should display an\nexplicit error message before returning `WEECHAT_RC_ERROR`.\n\nFor C plugins, two macros have been added in weechat-plugin.h:\n`WEECHAT_COMMAND_MIN_ARGS` and `WEECHAT_COMMAND_ERROR`.\n\n### Completion of inline commands\n\nWeeChat now completes by default inline commands (not only at beginning of\nline).\n\nWhen this feature is enabled, there is no more automatic completion of\nabsolute paths (except if you are completing a path inside a command argument,\nlike `/dcc send <nick> <path>`).\n\nTo restore the old behavior (no completion of inline commands):\n\n```text\n/set weechat.completion.command_inline off\n```\n\n### Relay option relay.irc.backlog_tags\n\nThe option relay.irc.backlog_tags is now a list separated by commas\n(it was separated by semicolons in older versions).\n\nIf you are using a list of tags in this option, you must adjust the value\nmanually.\n\n### IPv4-mapped IPv6 client address in relay\n\nThe string \"::ffff:\" has been removed from IPv4-mapped IPv6 client address\nin relay plugin.\n\nIf you are using \"::ffff:\" in option relay.network.allowed_ips, you can\nremove it.\n\n### Temporary servers disabled by default with /connect\n\nCreating a temporary server with command `+/connect <address>+` or\n`+/connect irc://...+` is now forbidden by default.\n\nA new option has been added to unlock the feature, you can do that for\nthe old behavior in command `/connect`:\n\n```text\n/set irc.look.temporary_servers on\n```\n\n### Microseconds in API timeval functions\n\nThe API functions using timeval are now using or returning microseconds,\ninstead of milliseconds:\n\n- function [util_timeval_diff](https://weechat.org/doc/weechat/plugin/#_util_timeval_diff):\n  returns microseconds\n- function [util_timeval_add](https://weechat.org/doc/weechat/plugin/#_util_timeval_add):\n  the argument \"interval\" is now expressed in microseconds.\n\n## Version 1.0\n\n### Channel type not added by default on /join\n\nThe channel type is not anymore automatically added to a channel name on join\n(for example `/join weechat` will not send `/join #weechat`).\n\nIf you are lazy and want to automatically add the channel type, you can turn on\nthe new option:\n\n```text\n/set irc.look.join_auto_add_chantype on\n```\n\n### Hide IRC channel modes arguments\n\nThe option irc.look.item_channel_modes_hide_key has been renamed to\nirc.look.item_channel_modes_hide_args and is now a string.\\\nIt can now hide arguments for multiple channel modes.\n\nBy default, a channel key (mode \"k\") will hide channel arguments. For old\nbehavior (never hide arguments, even with a channel key), you can do:\n\n```text\n/set irc.look.item_channel_modes_hide_args \"\"\n```\n\n### Jump to first/last buffer\n\nThe command `/input jump_last_buffer` has been replaced by `/buffer +`.\nYou can rebind the key `Alt`+`j`, `Alt`+`l` (`L`):\n\n```text\n/key bind meta-jmeta-l /buffer +\n```\n\nNote: the command `/input jump_last_buffer` still works for compatibility reasons,\nbut it should not be used anymore.\n\nSimilarly, a new key has been added to jump to first buffer: `Alt`+`j`, `Alt`+`f`.\nYou can add it with the following command:\n\n```text\n/key missing\n```\n\n### Hotlist conditions\n\nA new option weechat.look.hotlist_add_conditions has been added. This option\nreplaces the option weechat.look.hotlist_add_buffer_if_away, which has been\nremoved.\n\nDefault conditions are `${away} || ${buffer.num_displayed} == 0`, which means\nthat a buffer is added in hotlist if you are away (\"away\" local variable is\nset), or if the buffer is not visible on screen (not displayed in any window).\n\nIf you have set weechat.look.hotlist_add_buffer_if_away to `off` (to not add\ncurrent buffer in hotlist when you are away), then you must manually change the\ndefault conditions with the following command:\n\n```text\n/set weechat.look.hotlist_add_conditions \"${buffer.num_displayed} == 0\"\n```\n\n### Rmodifier replaced by Trigger plugin\n\nThe trigger plugin replaces the rmodifier plugin, which has been removed\n(and trigger has much more features than rmodifier).\n\nDefault triggers have same features as default rmodifiers (to hide passwords\nin commands and output).\n\nIf you added some custom rmodifiers, you must create similar triggers, see\n`/help trigger` and the complete trigger doc in the _WeeChat User's guide_.\n\nNote: if on startup you have an error about API mismatch in plugin \"rmodifier.so\",\nyou can manually remove the file (the command `make install` does not remove\nobsolete plugins).\n\n### Bare display\n\nA bare display mode has been added (for easy text selection and click on URLs),\nthe new default key is `Alt`+`l` (`L`).\n\nUse command `/key missing` to add the key or `/key listdiff` to see differences\nbetween your current keys and WeeChat default keys.\n\n### Function hook_print\n\nIn scripts, the arguments \"displayed\" and \"highlight\" sent to the callback of\n\"hook_print\" are now integers (they were strings in older releases).\n\nTo be compatible with all versions, it is recommended to convert the argument\nto integer before testing it, for example in Python:\n\n```python\nif int(highlight):\n    # ...\n```\n\n## Version 0.4.3\n\n### Colors in messages\n\nThe color code for \"reverse video\" in IRC message has been fixed: now WeeChat\nuses 0x16 like other clients (and not 0x12 anymore).\\\nThe code 0x12 is not decoded anymore, so if it is received (for example from\nan old WeeChat version), it is not displayed as reverse video.\n\nThe color code for \"underlined text\" in input line has been fixed: now WeeChat\nuses 0x1F, the same code sent to IRC server.\n\nThe default keys for \"reverse video\" and \"underlined text\" have changed:\n\n- reverse video: key `Ctrl`+`c`, `r` is replaced by `Ctrl`+`c`, `v`\n- underlined text: key `Ctrl`+`c`, `u` is replaced by `Ctrl`+`c`, `_`\n\nYou can remove the old keys and add the new ones with these commands:\n\n```text\n/key unbind ctrl-Cr\n/key unbind ctrl-Cu\n/key missing\n```\n\n### Terminal title\n\nThe boolean option weechat.look.set_title has been renamed to\nweechat.look.window_title and is now a string.\n\nThe content is evaluated and the default value is `WeeChat ${info:version}`.\n\nNote: only static content should be used in this option, because the title is\nrefreshed only when the option is changed.\n\n### New bar item buffer_last_number\n\nThe bar item \"buffer_count\" now displays the number of opened buffers (each\nmerged buffer counts 1).\n\nThe new bar item \"buffer_last_number\" displays the highest buffer number\ncurrently used.\n\nIf you want to display last number in the status bar, replace \"buffer_count\"\nby \"buffer_last_number\" in your option weechat.bar.status.items.\n\n### New bar item buffer_zoom\n\nA new bar item has been added: \"buffer_zoom\".\nThe default value for status bar items becomes:\n\n```text\n/set weechat.bar.status.items \"[time],[buffer_count],[buffer_plugin],buffer_number+:+buffer_name+(buffer_modes)+{buffer_nicklist_count}+buffer_zoom+buffer_filter,[lag],[hotlist],completion,scroll\"\n```\n\n### IRC messages on channel join\n\nThe names are not displayed anymore by default on channel join (they are in\nnicklist anyway).\n\nNames can be displayed with the value \"353\" in option\nirc.look.display_join_message (which is not in default value).\\\nThe value \"366\" shows only names count on channel.\n\nIf you want to display all messages on join (including names), you can do:\n\n```text\n/set irc.look.display_join_message \"329,332,333,353,366\"\n```\n\n### Maximum lag in IRC\n\nOption irc.network.lag_max has been added.\n\nThe value of option irc.network.lag_reconnect (if set to non-zero value) must\nbe less than or equal to irc.network.lag_max, otherwise the reconnection will\nnever occur.\n\nYou should check the value of both options and fix them if needed.\n\n## Version 0.4.2\n\n### Day change message\n\nThe day change message is now dynamically displayed, and therefore is not stored\nas a line in buffer anymore.\n\nOption weechat.look.day_change_time_format has been split into two options\nweechat.look.day_change_message_{1date|2dates} (color codes are allowed in\nthese options, see `/help eval`).\n\nNew color option weechat.color.chat_day_change has been added.\n\nAfter `/upgrade` from an old version, you will see two messages for each day\nchange. This is a normal behavior and will not happen again with the next day\nchanges.\n\n### Regex search in buffer\n\nSearch with regular expression has been added, and therefore some keys in search\ncontext have been changed.\n\nThe key `Ctrl`+`r` in search context is now used to switch string/regex search\n(instead of searching exact text).\n\nIf you never changed keys in search context, you can reset them all with one\ncommand:\n\n```text\n/key resetall -yes search\n```\n\nOr the manual method:\n\n```text\n/key missing search\n/key bindctxt search ctrl-R /input search_switch_regex\n```\n\nTo view keys in search context:\n\n```text\n/key list search\n```\n\nFor more information, see the chapter about keys in the _WeeChat User's guide_.\n\n### New rmodifier\n\nA new rmodifier \"secure\" has been added to hide passphrase and passwords\ndisplayed by command `/secure`. Use command `/rmodifier missing` to add it.\n\n### Color codes in options\n\nThe format for color codes in some options has changed. The options are\nevaluated with the function \"string_eval_expression\", which uses the format\n`${color:xxx}`.\n\nFollowing options are affected:\n\n- weechat.look.buffer_time_format\n- weechat.look.prefix_action\n- weechat.look.prefix_error\n- weechat.look.prefix_join\n- weechat.look.prefix_network\n- weechat.look.prefix_quit\n\nThe options using old format `${xxx}` must be changed with new format\n`${color:xxx}` (where xxx is a color name or number, with optional color\nattributes).\n\nExample:\n\n```text\n/set weechat.look.buffer_time_format \"${color:251}%H${color:243}%M${color:238}%S\"\n```\n\n### Binary and man page\n\nWeeChat binary and man page have been renamed from `weechat-curses` to\n`weechat`.\n\nA symbolic link has been added for binary: `weechat-curses` → `weechat`\n(so that the `/upgrade` from a old version will still work).\n\nIf you upgrade from an old version, it is recommended to force the use of the\nnew binary name with the command: `/upgrade /path/to/weechat` (replace the path\naccordingly).\n\nNote: for packagers: you should create the link `weechat-curses` → `weechat`\nif it's not automatically created in the package (both CMake and configure are\ncreating this link on make install).\n\n### Man page / documentation\n\nDocumentation is not built by default anymore, you have to use option\n`-DENABLE_DOC=ON` in cmake command to enable it.\n\nThe man page is now built with asciidoc and translated in several\nlanguages. A new CMake option `ENABLE_MAN` has been added to compile man page\n(`OFF` by default).\n\n### Aspell colors\n\nOption aspell.look.color has been renamed to aspell.color.misspelled.\n\nIf you changed the value of this option, you must set it again after upgrade.\n\n## Version 0.4.1\n\n### Nicklist diff in relay\n\nA new message with identifier \"_nicklist_diff\" has been added in relay (WeeChat\nprotocol). WeeChat may decide to send full nicklist or this nicklist diff at\nany time (depending on size of message, the smaller is sent).\n\nClients using nicklist must implement it.\n\nFor more info about content of message, see document _WeeChat Relay Protocol_.\n\n### Dynamic nick prefix/suffix\n\nThe nick prefix/suffix (for example: \"<\" and \">\") are now dynamic and used on\ndisplay (not stored anymore in the line).\n\nOptions moved from irc plugin (irc.conf) to core (weechat.conf):\n\n- irc.look.nick_prefix → weechat.look.nick_prefix\n- irc.look.nick_suffix → weechat.look.nick_suffix\n- irc.color.nick_prefix → weechat.color.chat_nick_prefix\n- irc.color.nick_suffix → weechat.color.chat_nick_suffix\n\nTypes and default values for these four options remain unchanged.\n\nTwo new options to customize the truncature char (by default \"`+`\"):\n\n- weechat.look.prefix_align_more_after (boolean, `on` by default)\n- weechat.look.prefix_buffer_align_more_after (boolean, `on` by default)\n\nWhen these options are enabled (default), the \"`+`\" is displayed after the\ntext, replacing the space that should be displayed there.\\\nWhen turned off, the \"`+`\" will replace last char of text.\n\nExample for a nicks \"FlashCode\" and \"fc\" with different values for options\nweechat.look.prefix_align_max, weechat.look.prefix_align_more_after,\nweechat.look.nick_prefix and weechat.look.nick_suffix:\n\n```text\n                      # align_max, more_after, prefix/suffix\n\nFlashCode │ test      # 0, on\n       fc │ test\n\nFlashCod+│ test       # 8, on\n      fc │ test\n\nFlashCo+ │ test       # 8, off\n      fc │ test\n\n<FlashCode> │ test    # 0, on,  < >\n       <fc> │ test\n\n<FlashC>+│ test       # 8, on,  < >\n    <fc> │ test\n\n<Flash+> │ test       # 8, off, < >\n    <fc> │ test\n```\n\nAfter `/upgrade`, if you set new options to non-empty strings, and if old\noptions were set to non-empty strings too, you will see double prefix/suffix\non old messages, this is normal behavior (lines displayed before `/upgrade`\nhave prefix/suffix saved in prefix, but new lines don't have them anymore).\n\nNew options in logger plugin (logger.conf):\n\n- logger.file.nick_prefix: prefix for nicks in log files (default: empty string)\n- logger.file.nick_suffix: suffix for nicks in log files (default: empty string)\n\n### IRC reconnection on important lag\n\nOption irc.network.lag_disconnect has been renamed to irc.network.lag_reconnect\nand value is now a number of seconds (instead of minutes).\n\nIf you changed the value of this option, you must set it again after upgrade.\n\n### IRC passwords hidden\n\nIRC plugin is now using modifiers \"irc_command_auth\" and \"irc_message_auth\" to\nhide passwords.\n\nThe option irc.look.hide_nickserv_pwd has been removed, and a new option\nirc.look.nicks_hide_password has been added (by default passwords are hidden\nonly for \"nickserv\").\n\nA new rmodifier \"message_auth\" has been added to hide passwords displayed by\ncommand `/msg nickserv identify|register|ghost|release` and the rmodifier\n\"nickserv\" has been renamed to \"command_auth\".\n\nIf you never added/changed rmodifiers, you can just reset all rmodifiers:\n\n```text\n/rmodifier default -yes\n```\n\nIf you added/changed some rmodifiers, do it manually with these commands:\n\n```text\n/rmodifier del nickserv\n/rmodifier add command_auth history_add,input_text_display,irc_command_auth 1,4* ^(/(msg|quote) +nickserv +(id|identify|register|ghost \\S+|release \\S+) +)(.*)\n/rmodifier add message_auth irc_message_auth 1,3* ^(.*(id|identify|register|ghost \\S+|release \\S+) +)(.*)\n```\n\n### Lua constants\n\nFor consistency with other supported languages, the API constants in Lua have\nbeen redefined as constants instead of functions.\n\nTherefore, the use of a constant must be changed: the parentheses must be\nremoved.\n\nThe old syntax was:\n\n```lua\nreturn weechat.WEECHAT_RC_OK()\n```\n\nThe new syntax is:\n\n```lua\nreturn weechat.WEECHAT_RC_OK\n```\n\n### Guile callbacks\n\nThe way to give arguments for guile callbacks has been fixed: now arguments are\nsent individually (instead of a list with all arguments inside).\n\nTherefore, existing guile scripts must be modified accordingly. Moreover,\nWeeChat now requires Guile ≥ 2.0 to compile.\n\n## Version 0.4.0\n\n### Conditions in bars\n\nConditions in bars have changed, and now an expression is evaluated.\n\nIf you have a value with many conditions in a bar, like: `nicklist,active`, you\nmust now use an expression like: `${nicklist} && ${active}` (see the chapter\nabout bars in the _WeeChat User's guide_).\n\n### IPv6 by default\n\n#### IRC\n\nIPv6 is now used by default to connect to IRC servers, with fallback to\nIPv4. The option irc.server_default.ipv6 is now `on` by default. If IPv6 is\nnot enabled or fails, IPv4 will be used. The \"ipv6\" option in server is now\nused to disable IPv6 and force IPv4 (if option is turned off).\n\n#### Relay\n\nRelay plugin is now listening by default on an IPv6 socket (new option\nrelay.network.ipv6, `on` by default), so connections with IPv4 will have\nIPv4-mapped IPv6 addresses, like: \"::ffff:127.0.0.1\" (for \"127.0.0.1\"); check\nthat value of option relay.network.allowed_ips supports this mapping, or\ndisable IPv6 in relay if you don't plan to use it at all:\n\n```text\n/set relay.network.ipv6 off\n```\n\n## Version 0.3.9\n\n### Options moved\n\nOptions moved from core (weechat.conf) to irc plugin (irc.conf):\n\n- weechat.look.nickmode → irc.look.nick_mode (new type: integer with values: none/prefix/action/both)\n- weechat.look.nickmode_empty → irc.look.nick_mode_empty\n\n### New bar item buffer_modes\n\nA new bar item has been added: \"buffer_modes\" and irc option irc.look.item_channel_modes\nhas been removed; to display irc channel modes in status bar (after channel name),\nyou have to manually add the new item \"buffer_modes\" (this is now used by default\nin status bar items), default value for status bar items becomes:\n\n```text\n/set weechat.bar.status.items \"[time],[buffer_count],[buffer_plugin],buffer_number+:+buffer_name+(buffer_modes)+{buffer_nicklist_count}+buffer_filter,[lag],[hotlist],completion,scroll\"\n```\n\n### Command /aspell\n\nNew options in command `/aspell`:\n\n- `enable`: enable aspell\n- `disable`: disable aspell\n- `toggle`: toggle aspell (new default key: `Alt`+`s`)\n\nOptions renamed in command `/aspell`:\n\n- `enable` → `setdict` (set dictionary for current buffer)\n- `disable` → `deldict` (delete dictionary used on current buffer)\n- `dictlist` → `listdict` (show installed dictionaries)\n\n### Horizontal separator\n\nAn horizontal separator has been added between split windows, and two options\nhave been added to toggle separators (both are enabled by default):\n\n- weechat.look.window_separator_horizontal\n- weechat.look.window_separator_vertical\n\n### New keys\n\nNew keys were added, use command `/key missing` to add them or `/key listdiff`\nto see differences between your current keys and WeeChat default keys.\n\n## Version 0.3.8\n\n### Options\n\nOptions weechat.look.prefix_align_more and weechat.look.prefix_buffer_align_more\nhave been converted from type boolean to string:\n\n- If the value was `on` (default), new value is \"+\" and you can now customize\n  this char.\n- If the value was `off`, you have to set \" \" (string with one space).\n\n### Paste detection\n\nOption weechat.look.paste_max_lines can now be used with value 0 to detect\npaste with one line (only if terminal \"bracketed paste mode\" is enabled when\noption weechat.look.paste_bracketed is `on`); so now the value -1 is used to\ndisable paste detection: if your value was 0, you should set it to -1:\n\n```text\n/set weechat.look.paste_max_lines -1\n```\n\n### Rmodifier\n\nRmodifier \"nickserv\" has a new default regex which includes option \"release\"\nfor command `/msg nickserv`.\n\nIf you never added/changed rmodifiers, you can just reset all rmodifiers:\n\n```text\n/rmodifier default -yes\n```\n\nIf you added/changed some rmodifiers, do it manually with these commands:\n\n```text\n/rmodifier del nickserv\n/rmodifier add nickserv history_add,input_text_display 1,4* ^(/(msg|quote) +nickserv +(id|identify|ghost \\S+|release \\S+) +)(.*)\n```\n\n## Version 0.3.7\n\n### Options\n\nOption `scroll_unread` has been moved from command `/input` to `/window`,\ntherefore default command of key `Alt`+`u` has been updated. To bind key with\nnew default value:\n\n```text\n/key bind meta-u /window scroll_unread\n```\n\nOption weechat.history.max_lines has been renamed to weechat.history.max_buffer_lines_number.\n\nIf you changed the value of this option, you must set it again after upgrade.\n\nOption weechat.plugin.extension now supports list of extensions, and new\ndefault value is \".so,.dll\" (with this value, weechat.conf is compatible with\nCygwin).\n\n### Extended regex\n\nExtended regex is used in filters and irc ignore, so some chars that needed\nescape in past do not need anymore (for example `[0-9]\\+` becomes `[0-9]+`),\nfilters and ignore have to be manually fixed.\n\nOption weechat.look.highlight_regex becomes case-insensitive by default, to\nmake it case-sensitive, use \"(?-i)\" at beginning of string, for example:\n\"(?-i)FlashCode|flashy\".\n\n## Version 0.3.6\n\n### Options\n\nOption weechat.look.hline_char has been renamed to weechat.look.separator_horizontal.\n\nIf you changed the value of this option, you must set it again after upgrade.\n\n### Bold in colors\n\nBold is not used anymore for basic colors (used only if terminal has less than\n16 colors), a new option has been added to force bold if needed:\nweechat.look.color_basic_force_bold.\n\n## Version 0.3.5\n\n### Colors\n\nIf you have some colors defined in section \"palette\" with version 0.3.4, you\nshould remove all colors defined, and add new aliases (it's not needed anymore\nto add colors before using them).\n\nColors for nick prefixes (char for op, voice, ..) are defined in a single\noption irc.color.nick_prefixes, therefore following options will be lost:\nirc.color.nick_prefix_op, irc.color.nick_prefix_halfop,\nirc.color.nick_prefix_voice, irc.color.nick_prefix_user .\n\n### Hotlist\n\n#### Counters\n\nCount of messages have been added to hotlist by default, if you want to come\nback to old behavior, do that:\n\n```text\n/set weechat.look.hotlist_count_max 0\n/set weechat.look.hotlist_buffer_separator \",\"\n```\n\n#### Away and current buffer\n\nWhen you are away, all buffers are now added to hotlist by default (even if\nthey are displayed in a window), if you want to come back to old behavior, do\nthat:\n\n```text\n/set weechat.look.hotlist_add_buffer_if_away off\n```\n\n### New keys\n\nNew keys were added, use command `/key missing` to add them or `/key listdiff`\nto see differences between your current keys and WeeChat default keys.\n\n## Version 0.3.4\n\n### After /upgrade\n\nIf you are using `/upgrade` from a previous release:\n\n- Some nick prefixes can be wrong, so it is recommended to do `/allchan names`.\n- Nick colors are defined with a new option weechat.color.chat_nick_colors ,\n  therefore old options weechat.color.chat_nick_color1..10 will be lost when\n  upgrading.\n- Nick colors in messages displayed will be wrong if you changed some nick\n  colors (old default colors will be used).\n\n### Options\n\nSome IRC options have been renamed, before upgrading to this version, note\nvalue for old options, and set them again with new name:\n\n- options moved from \"network\" section to servers (with global value, and\n  server value, like other server options):\n  - irc.network.connection_timeout → irc.server_default.connection_timeout\n  - irc.network.anti_flood_prio_high → irc.server_default.anti_flood_prio_high\n  - irc.network.anti_flood_prio_low → irc.server_default.anti_flood_prio_low\n  - irc.network.away_check → irc.server_default.away_check\n  - irc.network.away_check_max_nicks → irc.server_default.away_check_max_nicks\n  - irc.network.default_msg_part → irc.server_default.default_msg_part\n  - irc.network.default_msg_quit → irc.server_default.default_msg_quit\n- other IRC options renamed:\n  - irc.look.open_channel_near_server → irc.look.new_channel_position\n    (old option was boolean, new is integer with value as string)\n  - irc.look.open_pv_near_server → irc.look.new_pv_position\n    (old option was boolean, new is integer with value as string)\n\n## Version 0.3.3\n\n### After /upgrade\n\nIf you are using `/upgrade` from a previous release, then you must reconnect to\nIRC servers in order to use new command `/wallchops`.\n\n### Options\n\nOption irc.look.show_away_once has been renamed to irc.look.display_pv_away_once.\n\nOption irc.network.lag_min_show is now in milliseconds, you should set new\nvalue: your current value multiplied by 1000 (new default value is `500`).\n\n## Version 0.3.2\n\n### After /upgrade\n\nIf you are using `/upgrade` from a previous release, then you must execute this\ncommand on all IRC servers/channels/private buffers and xfer DCC chats (not\nneeded on WeeChat core buffer or buffers from other plugins/scripts):\n\n```text\n/buffer set highlight_words $nick\n```\n\n## Version 0.3.1.1\n\nThis version fixes crashes with SSL connection and purge of old DCC chats.\n\nAll users of version 0.3.1 should upgrade to this version.\n\n## Version 0.3.1\n\n### Aliases\n\nIRC commands `/ame` and `/amsg` are now aliases, if you are upgrading from version\n0.3.0, you must create aliases with the following commands:\n\n```text\n/alias aaway allserv /away\n/alias ame allchan /me\n/alias amsg allchan /amsg *\n/alias anick allserv /nick\n```\n\n## Version 0.3.0\n\nThis version brings **MAJOR** changes, especially for configuration files and\nplugin API and is not compatible with previous versions.\n\nMajor differences:\n\n- It is **NOT POSSIBLE** to use command `/upgrade` from a version 0.2.x to 0.3.x;\n  you have to quit your old WeeChat, then run new version.\n- New configuration files (`*.conf`) are not compatible with old files\n  (`*.rc`).\n- Name of options is similar to old versions, but there is now one\n  configuration file by plugin, and one file for WeeChat core; there is\n  **no automatic conversion** for your old options to new configuration files,\n  so you'll have to setup again your IRC servers and all other options.\n- Plugin API has been rewritten and is not compatible with previous versions;\n  accordingly, scripts and plugins must have been designed for version 0.3.x to\n  be loaded into WeeChat.\n\n## Version 0.2.2\n\n### Charset plugin\n\nFor users of any previous version, all your charset settings in weechat.rc will\nbe LOST! You should save your weechat.rc to keep your values and set them again\nwith new _charset_ plugin.\n\nFor ISO users: history of channels may be without accents (after `/upgrade`),\nthis is not recoverable, but this is not a bug. All new messages should be OK.\n\nBe careful, now default encode is UTF-8 for all channels (before it was\nterminal charset). If you still want to send messages as \"ISO-8859-1\", you\nshould set either global encode or server specific encode to `ISO-8859-1`.\n\nFor global encode:\n\n```text\n/setp charset.global.encode = \"ISO-8859-1\"\n```\n\nFor server encode (on server buffer):\n\n```text\n/charset encode ISO-8859-1\n```\n\n### New keys\n\nNew keys for topic scroll: `F9` / `F10`.\n\nKey `F10` was used for `infobar_clear` in previous WeeChat versions, you\nhave to manually rebind this key (except for new WeeChat users):\n\n```text\n/key <press alt+\"k\" then F10> scroll_topic_right\n```\n\nWhich gives something like:\n\n```text\n/key meta2-21~ scroll_topic_right\n```\n\n## Version 0.2.0\n\n### After /upgrade\n\nIf you upgraded with `/upgrade` in WeeChat, you should `/disconnect` and then\n`/reconnect` on each server, to display properly channel/user modes.\n\n### Plugins\n\nIf you're using plugins, you should remove some old plugins libraries in\nWeeChat system library directory (commonly `/usr/local/lib/weechat/plugins`):\nremove `lib*` files (like `libperl.*`, `libpython.*`, ..) and keep only new\nlibraries (`perl.*`, `python.*`, ..).\n\n## Version 0.1.9\n\n### DCC chat\n\nPlease close all DCC chat buffers before using `/upgrade` command, otherwise you\nmay experience problems with DCC chats.\n\n### Script API\n\nSome changes in script API: now timer handlers functions takes exactly 0 (zero)\nargument (in version 0.1.8, two arguments were mandatory but not used: server\nand arguments).\n\n## Version 0.1.8\n\n### After /upgrade\n\nAfter installing 0.1.8 (or with `/upgrade`), issue both commands (if you didn't\nredefine these keys (`Alt`+`Home` / `Alt`+`End`):\n\n```text\n/key unbind meta-meta2-1~\n/key unbind meta-meta2-4~\n```\n\nThen launch again WeeChat (or issue `/upgrade`).\n\n### Configuration files\n\nIt is recommended for users of version 0.1.7 (or any older), to replace values\nin setup file (_~/.weechat/weechat.rc_):\n\n- option: log_path: replace `~/.weechat/logs` by `%h/logs`\n- option: plugins_path: replace `~/.weechat/plugins` by `%h/plugins`\n\nThe string `%h` is replaced by WeeChat home (default: `~/.weechat`, may be\noverridden by new command line argument `--dir`).\n\n### Keys\n\nKeys `Alt`+`Home` / `Alt`+`End` were used for nicklist scroll, they're now\nreplaced by `Alt`+`F11` / `Alt`+`F12`.\n\n## Version 0.1.7\n\n### Ruby\n\nRuby script plugin has been added but is experimental in this release. You're\nwarned!\n\n### Command /away\n\nCommand `/away` was changed to be RFC 2812 compliant. Now argument is required\nto set away, and no argument means remove away (\"back\").\n\nOption irc_default_msg_away has been removed.\n\n## Version 0.1.6\n\n### Script API\n\nIncompatibility with some old scripts: now all handlers have to return a code\nfor completion, and to do some actions about message to ignore (please look at\ndocumentation for detail).\n\n### OpenBSD\n\nOn OpenBSD, the new option plugins_extension should be set to `.so.0.0` since\nthe plugins names are ending by `.so.0.0` and not `.so`.\n\n### UTF-8\n\nWith new and full UTF-8 support, the option look_charset_internal should be\nset to blank for most cases. Forces it only if your locale is not properly\ndetected by WeeChat (you can set `UTF-8` or `ISO-8859-15` for example,\ndepending on your locale). WeeChat is looking for \"UTF-8\" in your locale name\nat startup.\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.h.cmake",
          "type": "blob",
          "size": 1.8154296875,
          "content": "#cmakedefine01 ENABLE_NCURSES\n#cmakedefine01 ENABLE_HEADLESS\n#cmakedefine01 ENABLE_NLS\n#cmakedefine01 ENABLE_LARGEFILE\n#cmakedefine01 ENABLE_ZSTD\n#cmakedefine01 ENABLE_CJSON\n#cmakedefine01 ENABLE_ALIAS\n#cmakedefine01 ENABLE_BUFLIST\n#cmakedefine01 ENABLE_CHARSET\n#cmakedefine01 ENABLE_EXEC\n#cmakedefine01 ENABLE_FIFO\n#cmakedefine01 ENABLE_FSET\n#cmakedefine01 ENABLE_IRC\n#cmakedefine01 ENABLE_LOGGER\n#cmakedefine01 ENABLE_RELAY\n#cmakedefine01 ENABLE_SCRIPT\n#cmakedefine01 ENABLE_SCRIPTS\n#cmakedefine01 ENABLE_PERL\n#cmakedefine01 ENABLE_PYTHON\n#cmakedefine01 ENABLE_RUBY\n#cmakedefine01 ENABLE_LUA\n#cmakedefine01 ENABLE_TCL\n#cmakedefine01 ENABLE_GUILE\n#cmakedefine01 ENABLE_JAVASCRIPT\n#cmakedefine01 ENABLE_PHP\n#cmakedefine01 ENABLE_SPELL\n#cmakedefine01 ENABLE_ENCHANT\n#cmakedefine01 ENABLE_TRIGGER\n#cmakedefine01 ENABLE_TYPING\n#cmakedefine01 ENABLE_XFER\n#cmakedefine01 ENABLE_MAN\n#cmakedefine01 ENABLE_DOC\n#cmakedefine01 ENABLE_DOC_INCOMPLETE\n#cmakedefine01 ENABLE_TESTS\n#cmakedefine01 ENABLE_CODE_COVERAGE\n\n#cmakedefine HAVE_SYS_RESOURCE_H\n#cmakedefine HAVE_FLOCK\n#cmakedefine HAVE_LANGINFO_CODESET\n#cmakedefine HAVE_BACKTRACE\n#cmakedefine ICONV_2ARG_IS_CONST 1\n#cmakedefine HAVE_MALLINFO\n#cmakedefine HAVE_MALLINFO2\n#cmakedefine HAVE_MALLOC_H\n#cmakedefine HAVE_MALLOC_TRIM\n#cmakedefine HAVE_EAT_NEWLINE_GLITCH\n#cmakedefine HAVE_ASPELL_VERSION_STRING\n#cmakedefine HAVE_ENCHANT_GET_VERSION\n#cmakedefine HAVE_GUILE_GMP_MEMORY_FUNCTIONS\n\n#define CMAKE_BUILD_TYPE \"@CMAKE_BUILD_TYPE@\"\n#define CMAKE_INSTALL_PREFIX \"@CMAKE_INSTALL_PREFIX@\"\n\n#define PACKAGE_VERSION \"@VERSION@\"\n#define PACKAGE \"@PROJECT_NAME@\"\n#define PACKAGE_NAME \"@PROJECT_NAME@\"\n#define PACKAGE_STRING \"@PKG_STRING@\"\n#define WEECHAT_LIBDIR \"@WEECHAT_LIBDIR@\"\n#define WEECHAT_SHAREDIR \"@WEECHAT_SHAREDIR@\"\n#define LOCALEDIR \"@LOCALEDIR@\"\n#define WEECHAT_HOME \"@WEECHAT_HOME@\"\n#define _GNU_SOURCE 1\n"
        },
        {
          "name": "debian-devel",
          "type": "tree",
          "content": null
        },
        {
          "name": "debian-stable",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "icons",
          "type": "tree",
          "content": null
        },
        {
          "name": "po",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "version.sh",
          "type": "blob",
          "size": 3.1044921875,
          "content": "#!/bin/sh\n#\n# Copyright (C) 2015-2024 Sébastien Helleu <flashcode@flashtux.org>\n#\n# This file is part of WeeChat, the extensible chat client.\n#\n# WeeChat is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 3 of the License, or\n# (at your option) any later version.\n#\n# WeeChat is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with WeeChat.  If not, see <https://www.gnu.org/licenses/>.\n#\n\n#\n# Returns current stable or devel version of WeeChat.\n#\n# Syntax:\n#   version.sh <name>\n#\n#   name is one of:\n#\n#     stable         the current stable (e.g. \"4.0.2\")\n#     stable-major   the major version of stable (\"4\" for \"4.0.2\")\n#     stable-minor   the minor version of stable (\"0\" for \"4.0.2\")\n#     stable-patch   the patch version of stable (\"2\" for \"4.0.2\")\n#     stable-number  the stable version as hex number (\"0x04000200\" for \"4.0.2\")\n#     devel          the devel with only digits/dots (e.g. \"4.1.0\")\n#     devel-full     the full devel (e.g. \"4.1.0-dev\")\n#     devel-major    the major version of devel (\"4\" for \"4.1.0-dev\")\n#     devel-minor    the minor version of devel (\"1\" for \"4.1.0-dev\")\n#     devel-patch    the patch version of devel (\"0-dev\" for \"4.1.0-dev\")\n#     devel-number   the devel version as hex number (\"0x04010000\" for \"4.1.0-dev\")\n#\n\nweechat_stable=\"4.5.1\"\nweechat_devel=\"4.6.0-dev\"\n\nstable_major=$(echo \"${weechat_stable}\" | cut -d\".\" -f1)\nstable_minor=$(echo \"${weechat_stable}\" | cut -d\".\" -f2)\nstable_patch=$(echo \"${weechat_stable}\" | cut -d\".\" -f3-)\nstable_patch_digits=$(echo \"${weechat_stable}\" | cut -d\".\" -f3- | cut -d\"-\" -f1)\n\ndevel_major=$(echo \"${weechat_devel}\" | cut -d\".\" -f1)\ndevel_minor=$(echo \"${weechat_devel}\" | cut -d\".\" -f2)\ndevel_patch=$(echo \"${weechat_devel}\" | cut -d\".\" -f3-)\ndevel_patch_digits=$(echo \"${weechat_devel}\" | cut -d\".\" -f3- | cut -d\"-\" -f1)\n\nif [ $# -lt 1 ]; then\n    echo >&2 \"Syntax: $0 <name>\"\n    echo >&2 \"name: stable, stable-major, stable-minor, stable-patch, stable-number,\"\n    echo >&2 \"      devel, devel-full, devel-major, devel-minor, devel-patch, devel-number\"\n    exit 1\nfi\n\ncase $1 in\n    # stable\n    stable ) echo \"${weechat_stable}\" ;;\n    stable-major ) echo \"${stable_major}\" ;;\n    stable-minor ) echo \"${stable_minor}\" ;;\n    stable-patch ) echo \"${stable_patch}\" ;;\n    stable-number ) printf \"0x%02d%02d%02d00\\n\" \"${stable_major}\" \"${stable_minor}\" \"${stable_patch_digits}\" ;;\n    # devel\n    devel ) echo \"${weechat_devel}\" | cut -d\"-\" -f1 ;;\n    devel-full ) echo \"${weechat_devel}\" ;;\n    devel-major ) echo \"${devel_major}\" ;;\n    devel-minor ) echo \"${devel_minor}\" ;;\n    devel-patch ) echo \"${devel_patch}\" ;;\n    devel-number ) printf \"0x%02d%02d%02d00\\n\" \"${devel_major}\" \"${devel_minor}\" \"${devel_patch_digits}\" ;;\n    # error\n    * ) echo >&2 \"ERROR: unknown version.\"\n        exit 1 ;;\nesac\n"
        },
        {
          "name": "weechat.cygport.in",
          "type": "blob",
          "size": 5.841796875,
          "content": "#\n# Copyright (C) 2013-2024 Sébastien Helleu <flashcode@flashtux.org>\n#\n# This file is part of WeeChat, the extensible chat client.\n#\n# WeeChat is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 3 of the License, or\n# (at your option) any later version.\n#\n# WeeChat is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with WeeChat.  If not, see <https://www.gnu.org/licenses/>.\n#\n\n#\n# This file is used to build Cygwin packages using the \"cygport\" command.\n#\n# It must be used *ONLY* for a stable release (version \"X.Y.Z\"),\n# not for a development version (version \"X.Y.Z-dev\" or \"X.Y.Z-rcN\").\n#\n# Instructions:\n#\n#   1. install asciidoctor (to build man page/docs):\n#\n#      $ gem install -n /usr/local/bin asciidoctor\n#\n#   2. execute these commands inside your build directory, after running cmake\n#      (replace X.Y.Z by WeeChat version):\n#\n#      $ make dist\n#      $ cygport weechat-X.Y.Z-1.cygport all\n#\n#      Packages are built in directory: ./weechat-X.Y.Z-1.<arch>/dist/weechat/\n#\n\ninherit cmake\n\nNAME=\"weechat\"\nVERSION=@VERSION@\nRELEASE=1\n\n# Default category (some packages have extra category)\nCATEGORY=\"Net\"\n\nHOMEPAGE=\"https://weechat.org/\"\nLICENSE=\"GPL-3.0-or-later\"\nSRC_URI=\"weechat-${VERSION}.tar.xz\"\n\n# Build dependencies only\nBUILD_REQUIRES=\"cmake gettext gettext-devel libgnutls-devel libaspell-devel \\\nlibcurl-devel libgcrypt-devel libncurses-devel lua perl pkg-config \\\npython3-devel ruby tcl-devel libguile3.0-devel php-devel libzstd-devel \\\nzlib-devel\"\n\n#\n# CMake compilation of WeeChat:\n#   1. set prefix to /usr\n#   2. enable build of man pages and documentation\n#\nCYGCMAKE_ARGS=\"-DCMAKE_INSTALL_PREFIX=/usr \\\n-DENABLE_CJSON=OFF \\\n-DENABLE_MAN=ON \\\n-DENABLE_DOC=ON\"\n\nPKG_IGNORE=\"\n    etc/postinstall/weechat.sh\n    usr/share/applications/weechat.desktop\n\"\n\n#\n# Build 10 Cygwin packages:\n#   weechat\n#   weechat-python\n#   weechat-perl\n#   weechat-ruby\n#   weechat-lua\n#   weechat-tcl\n#   weechat-guile\n#   weechat-php\n#   weechat-devel\n#   weechat-doc\n#\nPKG_NAMES=\"${PN} ${PN}-python ${PN}-perl ${PN}-ruby ${PN}-lua ${PN}-tcl \\\n${PN}-guile ${PN}-php ${PN}-devel ${PN}-doc\"\nPKG_HINTS=\"setup python perl ruby lua tcl guile php devel doc\"\n\n#\n# Package \"weechat\": binary, all plugins except scripting languages,\n# translations, icon, man pages\n#\nweechat_SUMMARY=\"Fast, light and extensible chat client\"\nweechat_DESCRIPTION=\"WeeChat (Wee Enhanced Environment for Chat) is a fast, \\\nlight and extensible chat client. Everything can be done with a keyboard, \\\nit is customizable and extensible with plugins/scripts.\"\nweechat_CONTENTS=\"\n    usr/bin/\n    usr/lib/weechat/plugins/alias.dll\n    usr/lib/weechat/plugins/buflist.dll\n    usr/lib/weechat/plugins/charset.dll\n    usr/lib/weechat/plugins/exec.dll\n    usr/lib/weechat/plugins/fifo.dll\n    usr/lib/weechat/plugins/fset.dll\n    usr/lib/weechat/plugins/irc.dll\n    usr/lib/weechat/plugins/logger.dll\n    usr/lib/weechat/plugins/relay.dll\n    usr/lib/weechat/plugins/script.dll\n    usr/lib/weechat/plugins/spell.dll\n    usr/lib/weechat/plugins/trigger.dll\n    usr/lib/weechat/plugins/typing.dll\n    usr/lib/weechat/plugins/xfer.dll\n    usr/share/icons/\n    usr/share/locale/\n    usr/share/man/\n    usr/share/doc/weechat/AUTHORS.md\n    usr/share/doc/weechat/CHANGELOG.md\n    usr/share/doc/weechat/CONTRIBUTING.md\n    usr/share/doc/weechat/COPYING\n    usr/share/doc/weechat/README.md\n    usr/share/doc/weechat/UPGRADING.md\n\"\n\n#\n# Package \"weechat-python\": python scripting plugin\n#\nweechat_python_SUMMARY=\"Python scripting plugin for WeeChat\"\nweechat_python_DESCRIPTION=\"Python scripting plugin for WeeChat\"\nweechat_python_CONTENTS=\"usr/lib/weechat/plugins/python.dll\"\nweechat_python_REQUIRES=\"weechat\"\n\n#\n# Package \"weechat-perl\": perl scripting plugin\n#\nweechat_perl_SUMMARY=\"Perl scripting plugin for WeeChat\"\nweechat_perl_DESCRIPTION=\"Perl scripting plugin for WeeChat\"\nweechat_perl_CONTENTS=\"usr/lib/weechat/plugins/perl.dll\"\nweechat_perl_REQUIRES=\"weechat\"\n\n#\n# Package \"weechat-ruby\": ruby scripting plugin\n#\nweechat_ruby_SUMMARY=\"Ruby scripting plugin for WeeChat\"\nweechat_ruby_DESCRIPTION=\"Ruby scripting plugin for WeeChat\"\nweechat_ruby_CONTENTS=\"usr/lib/weechat/plugins/ruby.dll\"\nweechat_ruby_REQUIRES=\"weechat\"\n\n#\n# Package \"weechat-lua\": lua scripting plugin\n#\nweechat_lua_SUMMARY=\"Lua scripting plugin for WeeChat\"\nweechat_lua_DESCRIPTION=\"Lua scripting plugin for WeeChat\"\nweechat_lua_CONTENTS=\"usr/lib/weechat/plugins/lua.dll\"\nweechat_lua_REQUIRES=\"weechat\"\n\n#\n# Package \"weechat-tcl\": tcl scripting plugin\n#\nweechat_tcl_SUMMARY=\"Tcl scripting plugin for WeeChat\"\nweechat_tcl_DESCRIPTION=\"Tcl scripting plugin for WeeChat\"\nweechat_tcl_CONTENTS=\"usr/lib/weechat/plugins/tcl.dll\"\nweechat_tcl_REQUIRES=\"weechat\"\n\n#\n# Package \"weechat-guile\": guile scripting plugin\n#\nweechat_guile_SUMMARY=\"Guile scripting plugin for WeeChat\"\nweechat_guile_DESCRIPTION=\"Guile scripting plugin for WeeChat\"\nweechat_guile_CONTENTS=\"usr/lib/weechat/plugins/guile.dll\"\nweechat_guile_REQUIRES=\"weechat\"\n\n#\n# Package \"weechat-php\": php scripting plugin\n#\nweechat_php_SUMMARY=\"PHP scripting plugin for WeeChat\"\nweechat_php_DESCRIPTION=\"PHP scripting plugin for WeeChat\"\nweechat_php_CONTENTS=\"usr/lib/weechat/plugins/php.dll\"\nweechat_php_REQUIRES=\"weechat\"\n\n#\n# Package \"weechat-devel\": header to build plugins\n#\nweechat_devel_CATEGORY=\"Net Devel\"\nweechat_devel_SUMMARY=\"Development files to build WeeChat plugins\"\nweechat_devel_CONTENTS=\"usr/include/ usr/lib/pkgconfig/\"\n\n#\n# Package \"weechat-doc\": documentation\n#\nweechat_doc_CATEGORY=\"Net Doc\"\nweechat_doc_SUMMARY=\"Documentation for WeeChat\"\nweechat_doc_CONTENTS=\"usr/share/doc/weechat/*.html\"\n"
        },
        {
          "name": "weechat.desktop",
          "type": "blob",
          "size": 0.583984375,
          "content": "[Desktop Entry]\nName=WeeChat\nGenericName=Chat client\nGenericName[de]=Chat-Client\nGenericName[fr]=Client de discussion\nComment=Extensible chat client\nComment[de]=erweiterbarer Chat-Client\nComment[fr]=Client de discussion extensible\nKeywords=WeeChat;extensible;chat;IRC;client;console;terminal;\nKeywords[de]=WeeChat;erweiterbar;Diskussion;IRC;Client;console;terminal;\nKeywords[fr]=WeeChat;extensible;discussion;IRC;client;console;terminal;\nExec=weechat %u\nTerminal=true\nIcon=weechat\nType=Application\nCategories=Network;Chat;IRCClient;ConsoleOnly;\nMimeType=x-scheme-handler/irc;x-scheme-handler/ircs;\n"
        },
        {
          "name": "weechat.pc.in",
          "type": "blob",
          "size": 0.1826171875,
          "content": "prefix=@prefix@\nexec_prefix=@exec_prefix@\nlibdir=@libdir@\nincludedir=@includedir@\n\nName: weechat\nDescription: WeeChat plugins headers\nVersion: @VERSION@\nCflags: -I${includedir}/@PACKAGE@\n"
        }
      ]
    }
  ]
}