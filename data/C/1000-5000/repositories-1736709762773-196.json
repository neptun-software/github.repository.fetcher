{
  "metadata": {
    "timestamp": 1736709762773,
    "page": 196,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "openai/retro",
      "stars": 3429,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 2.8134765625,
          "content": "---\nLanguage:        Cpp\nAccessModifierOffset: -4\nAlignAfterOpenBracket: DontAlign\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlines: Left\nAlignOperands:   true\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: false\nBinPackArguments: true\nBinPackParameters: true\nBraceWrapping:   \n  AfterClass:      false\n  AfterControlStatement: false\n  AfterEnum:       false\n  AfterFunction:   false\n  AfterNamespace:  false\n  AfterObjCDeclaration: false\n  AfterStruct:     false\n  AfterUnion:      false\n  BeforeCatch:     false\n  BeforeElse:      false\n  IndentBraces:    false\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Attach\nBreakBeforeInheritanceComma: false\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: true\nBreakConstructorInitializers: BeforeColon\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: true\nColumnLimit:     0\nCommentPragmas:  '^ IWYU pragma:'\nCompactNamespaces: false\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: false\nDerivePointerAlignment: false\nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nFixNamespaceComments: false\nForEachMacros:   [ foreach, Q_FOREACH, BOOST_FOREACH ]\nIncludeCategories: \n  - Regex:           '^\"(llvm|llvm-c|clang|clang-c)/'\n    Priority:        2\n  - Regex:           '^(<|\"(gtest|isl|json)/)'\n    Priority:        3\n  - Regex:           '.*'\n    Priority:        1\nIncludeIsMainRegex: '$'\nIndentCaseLabels: false\nIndentWidth:     4\nIndentWrappedFunctionNames: false\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: true\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nPenaltyBreakAssignment: 2\nPenaltyBreakBeforeFirstCallParameter: 19\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 60\nPointerAlignment: Left\nReflowComments:  true\nSortIncludes:    false\nSpaceAfterCStyleCast: true\nSpaceAfterTemplateKeyword: false\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard:        Cpp11\nTabWidth:        4\nUseTab:          ForContinuationAndIndentation\n...\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.486328125,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n*.dylib\n*.dll\n*.o\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*,cover\n.hypothesis/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# IPython Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# dotenv\n.env\n\n# virtualenv\nvenv/\nENV/\n\n# Spyder project settings\n.spyderproject\n\n# Rope project settings\n.ropeproject\n\n# Emacs #\n#########\n*~\n\\#*\\#\n/.emacs.desktop\n/.emacs.desktop.lock\n.elc\nauto-save-list\ntramp\n.\\#*\n\n# PyCharm\n*.idea\n\n.DS_Store\n\n# CMake\nCMakeFiles\nCMakeCache.txt\nCTestTestfile.cmake\n/Makefile\ncmake_*.cmake\ninstall_manifest.txt\n\n# CPack\n_CPack_Packages\nCPack*Config.cmake\n*.dmg\n*.tar.*\n*.deb\n*.rpm\n\n# Build products\ntests/test-*\nlib*.a\n*.app\n*_autogen\n*.capnp.*\nretro/cores/*-version\nretro/cores/*.json\nretro/VERSION.txt\n\n# Test stuff\nTemporary\n*.mkv\n*.search\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.6357421875,
          "content": "git:\n  depth: false\ncache:\n  - ccache\n  - directories:\n    - $HOME/roms/\nlanguage: cpp # Needed for ccache\nenv:\n  - PYVER=3.6\n  - PYVER=3.7\n  - PYVER=3.8\nos:\n  - linux\n  - osx\nservices:\n  - docker\nosx_image: xcode9.4 # OS X 10.13\n\nmatrix:\n  include:\n    - os: linux\n      env:\n        - CROSS=win64\n        - PYVER=3.6\n    - os: linux\n      env:\n        - CROSS=win64\n        - PYVER=3.7\n    - os: linux\n      env:\n        - CROSS=win64\n        - PYVER=3.8\n\nbefore_script:\n  - mkdir -p $HOME/roms\nscript:\n  - |\n    if [ -n \"$CROSS\" ]; then\n    TAG=$CROSS\n    else\n    TAG=$TRAVIS_OS_NAME\n    fi\n    TAG=${TAG}-v2\n  - >\n    if [ \"$TRAVIS_OS_NAME\" == \"linux\" ]; then\n    docker run\n    --env PYVER=\"$PYVER\"\n    --env CROSS=\"$CROSS\"\n    --env TRAVIS_OS_NAME=\"$TRAVIS_OS_NAME\"\n    --env TRAVIS_TAG=\"$TRAVIS_TAG\"\n    --env TRAVIS_BRANCH=\"$TRAVIS_BRANCH\"\n    --env TRAVIS_PULL_REQUEST=\"$TRAVIS_PULL_REQUEST\"\n    --env GOOGLE_APPLICATION_CREDENTIALS_DATA=\"$GOOGLE_APPLICATION_CREDENTIALS_DATA\"\n    --volume /home/travis/build/openai/retro:/root/code/retro\n    --volume /home/travis/.ccache:/root/.ccache\n    --workdir /root/code/retro\n    openai/retro-build:$TAG\n    python travis.py;\n    fi\n  - |\n    if [ \"$TRAVIS_OS_NAME\" == \"osx\" ]; then\n    brew update > /dev/null\n    brew install qt5 capnp lua@5.1 ccache\n    curl -o miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh\n    bash miniconda.sh -b\n    export PATH=/usr/local/opt/ccache/libexec:$HOME/miniconda3/bin:$PATH\n    hash -r\n    conda create -y -q -n venv python=$PYVER pip\n    source activate venv\n    pip install wheel google-auth google-cloud-storage pytest\n    python travis.py\n    fi\n"
        },
        {
          "name": "CHANGES.md",
          "type": "blob",
          "size": 2.779296875,
          "content": "# Changelog\n\n## 0.8.0\n\n* add python 3.8 support\n* drop python 3.5 due to build issues on windows\n\n## 0.7.1\n\n* fix discrete and multi-discrete action space filtering\n* fix random printfs when making environments\n* data fixes for AeroStar-GameBoy, ChaseHQII-Genesis, Geimos-Nes, MagicalTaruruutoKun-Genesis,  KanshakudamaNageKantarouNoToukaidouGojuusanTsugi-Nes, TigerHeli-Nes (may change reward for these games, mostly these are bug fixes)\n# python 3.5 compatibility fix (thanks @kieran-lemayai!)\n* fix for new pyglet minor version that breaks backward compatibility (thanks @fsimond!)\n* json parsing fix (thanks @eaplatanios!)\n* minor memory leak fix (thanks @eaplatanios!)\n\n## 0.7.0\n\n* move some buggy games from the `stable` integrations folder to `experimental`\n* minor bug fixes including fixes to a few game scenarios\n* more docs\n* add ability to use arbitrary additional integration directories\n* integration UI searches for current Python's Gym Retro data directory\n* import script can now accept files in addition to directories\n* you can now use RAM observations by sending `obs_type=retro.Observations.RAM` to `retro.make`\n* update Atari 2600 emulator\n\n## 0.6.0\n\n* add cores for GB/C, GBA, GG, NES, SMS, SNES, TurboGrafx\n* add integration UI and searching\n* add basic scenario access to Lua\n* improve testing tooling\n* multi-agent support\n* cleaned up API:\n  * everything involving data, e.g. game and state listing, file lookup and data path handling, has been moved into retro.data\n  * importing retro.data.experiment or retro.data.contrib includes additional games and data that may not be as well-tested\n  * retro.ACTIONS_* and retro.STATE_* have been replaced with retro.Actions.* and retro.State.* enums\n  * retro.data.GameData objects no longer need an associated RetroEmulator object, though some functionality will not work\n* add screen cropping\n* added RetroEnv.get_action_meaning to describe the correlation between actions and buttons\n* fixed d-pad action filtering so e.g. UP+DOWN+LEFT reduces to LEFT instead of NOOP\n* add parallelism, lossless videos, info dict, disabling audio and numpy action dumping to playback_movies\n* update LuaJIT to 2.1.0-beta3\n\n## 0.5.6\n\n* fix generating corrupted bk2s\n* reliabilty fixes and minor enhancements to playback_movies\n\n## 0.5.5\n\n* allow Atari height to be different per game\n* update pybind11 dependency\n* add parallelism, lossless videos, info dict and numpy action dumping to playback_movies\n* fix crashes with TensorFlow\n\n## 0.5.4\n\n* improved Windows support\n* refreshed Python memory access\n* build manylinux1-compatible wheels\n* minor documentation fixes\n* minor fixes to playback_movie script\n* update Atari 2600 emulator\n\n## 0.5.3\n\n* fix Lua on Windows\n* add Windows support to import.sega_classics\n* only use system libzip if compatible\n\n## 0.5.2\n\n* initial public release\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 10.45703125,
          "content": "cmake_minimum_required(VERSION 3.2)\nif(POLICY CMP0048)\n    cmake_policy(SET CMP0048 NEW)\nendif()\n\nfind_package(Git QUIET)\n\nfind_package(PythonInterp REQUIRED)\n\nfile(READ \"${CMAKE_SOURCE_DIR}/VERSION\" PROJECT_VERSION)\nstring(REGEX REPLACE \"\\n$\" \"\" PROJECT_VERSION \"${PROJECT_VERSION}\")\nset_property(DIRECTORY APPEND PROPERTY CMAKE_CONFIGURE_DEPENDS \"$CMAKE_SOURCE_DIR}/VERSION\")\n\nproject(\"Gym Retro\" VERSION ${PROJECT_VERSION})\nset(CMAKE_CXX_STANDARD 14)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\nset(CMAKE_POSITION_INDEPENDENT_CODE ON)\nset(CMAKE_MACOSX_DEPLOYMENT_TARGET 10.7)\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wall -Wextra -Wno-sign-compare -Wno-missing-field-initializers -fvisibility=hidden\")\nif(CMAKE_SYSTEM_PROCESSOR STREQUAL \"x86_64\" OR CMAKE_SYSTEM_PROCESSOR STREQUAL \"AMD64\")\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -mssse3\")\nendif()\nif(NOT CMAKE_BUILD_TYPE)\n    set(CMAKE_BUILD_TYPE RelWithDebInfo)\nendif()\noption(BUILD_TESTS \"Should tests be built\" ON)\noption(BUILD_UI \"Should integration UI be built\" OFF)\noption(BUILD_LUAJIT \"Should static LuaJIT be used instead of system Lua\" ON)\noption(BUILD_MANYLINUX \"Should use static libraries compatible with manylinux1\" OFF)\n\nset(BUILD_PYTHON ON CACHE BOOL \"Build Python module\")\nmark_as_advanced(BUILD_PYTHON)\n\nif(BUILD_PYTHON)\n    find_package(PythonLibs REQUIRED)\nendif()\nif(WIN32 OR BUILD_MANYLINUX)\n    set(CMAKE_FIND_LIBRARY_SUFFIXES .a ${CMAKE_FIND_LIBRARY_SUFFIXES})\nendif()\nfind_package(ZLIB REQUIRED)\nfind_package(PkgConfig)\nif(NOT BUILD_MANYLINUX)\n    # CapnProto requires a newer kernel than manylinux1 provides\n    find_package(CapnProto QUIET)\nendif()\n\npkg_search_module(LIBZIP QUIET libzip)\n\nif(NOT BUILD_LUAJIT)\n    find_package(Lua 5.1 EXACT REQUIRED)\n    set(LUA_INCLUDE_DIRS \"${LUA_INCLUDE_DIR}\")\nelse()\n    set(LUA_INCLUDE_DIRS \"${CMAKE_SOURCE_DIR}/third-party/luajit/src\")\n    if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\n        set(LUA_FLAGS ${LUA_FLAGS} CC=${CMAKE_C_COMPILER} LDFLAGS=-mmacosx-version-min=10.7)\n        set(LUA_CFLAGS -mmacosx-version-min=10.7)\n    endif()\n    if(CMAKE_SYSTEM_PROCESSOR STREQUAL \"x86_64\" OR CMAKE_SYSTEM_PROCESSOR STREQUAL \"AMD64\")\n        set(LUA_FLAGS ${LUA_FLAGS} \"CFLAGS=-fPIC -DLUAJIT_ENABLE_GC64 ${LUA_CFLAGS}\")\n    endif()\n    if(CMAKE_CROSSCOMPILING)\n        if(CMAKE_SYSTEM_PROCESSOR STREQUAL \"x86_64\" OR CMAKE_SYSTEM_PROCESSOR STREQUAL \"AMD64\")\n            set(BITS 64)\n        else()\n            set(BITS 32)\n        endif()\n        set(LUA_FLAGS ${LUA_FLAGS} \"HOST_CC=gcc -m${BITS}\" CROSS=\"${cross_prefix}\" TARGET_SYS=\"${CMAKE_SYSTEM_NAME}\")\n    endif()\n    set(LUA_LIBRARY \"${LUA_INCLUDE_DIRS}/libluajit.a\")\n    add_custom_command(OUTPUT \"${LUA_LIBRARY}\"\n        COMMAND $(MAKE) ${LUA_FLAGS} libluajit.a\n        WORKING_DIRECTORY \"${LUA_INCLUDE_DIRS}\")\n    add_custom_target(clean-luajit\n        COMMAND $(MAKE) clean\n        WORKING_DIRECTORY \"${LUA_INCLUDE_DIRS}\")\nendif()\n\nif(NOT WIN32)\n    set(PYEXT_SUFFIX \".so\" CACHE STRING \"Suffix for Python extension modules\")\nelse()\n    set(PYEXT_SUFFIX \".pyd\" CACHE STRING \"Suffix for Python extension modules\" FORCE)\nendif()\n\nif(CMAKE_C_COMPILER_ID STREQUAL \"GNU\")\n    set(STATIC_LDFLAGS \"-static-libstdc++ -Wl,--exclude-libs,ALL\")\nendif()\n\nset(PYLIB_DIRECTORY \"${CMAKE_CURRENT_BINARY_DIR}\" CACHE PATH \"Build directory that contains retro module\")\nfile(MAKE_DIRECTORY \"${PYLIB_DIRECTORY}/retro/cores\")\n\nset(CORES)\nset(COREINFO)\nset(CORE_TARGETS)\n\nfunction(add_core PLATFORM CORE_NAME)\n    set(TARGET_NAME ${CORE_NAME}_libretro${CMAKE_SHARED_LIBRARY_SUFFIX})\n    get_filename_component(TARGET_PATH \"${PYLIB_DIRECTORY}/retro/cores/${TARGET_NAME}\" ABSOLUTE)\n    list(APPEND CORES \"${TARGET_PATH}\")\n    list(APPEND COREINFO \"${CMAKE_CURRENT_SOURCE_DIR}/retro/cores/${CORE_NAME}.json\")\n    set(CORES \"${CORES}\" PARENT_SCOPE)\n    set(COREINFO \"${COREINFO}\" PARENT_SCOPE)\n    set(SUBDIR)\n    if(EXISTS \"cores/${PLATFORM}/Makefile.libretro\")\n        set(MAKEFILE Makefile.libretro)\n    elseif(EXISTS \"cores/${PLATFORM}/Makefile\")\n        set(MAKEFILE Makefile)\n    elseif(EXISTS \"cores/${PLATFORM}/libretro/Makefile\")\n        set(MAKEFILE Makefile)\n        set(SUBDIR libretro)\n    else()\n        message(FATAL_ERROR \"Could not find Makefile.\")\n    endif()\n\n    add_custom_command(OUTPUT \"${CMAKE_CURRENT_SOURCE_DIR}/retro/cores/${CORE_NAME}-version\"\n        COMMAND ${CMAKE_COMMAND} -E touch \"${CMAKE_CURRENT_SOURCE_DIR}/retro/cores/${CORE_NAME}-version\")\n    if(WIN32)\n        set(LIBRETRO_PLATFORM platform=win)\n    endif()\n    set(CORE_LDFLAGS \"-w ${STATIC_LDFLAGS}\")\n    set(CORE_CFLAGS \"-w\")\n    set(CORE_CXXFLAGS \"-w\")\n    if(WIN32 AND NOT CMAKE_CROSSCOMPILING)\n        set(CORE_LDFLAGS \"${CORE_LDFLAGS} ${STATIC_LDFLAGS}\")\n    endif()\n    if(NOT WIN32)\n        set(CORE_FPIC_FLAGS \"-fPIC\")\n    endif()\n    if(CMAKE_SYSTEM_NAME STREQUAL \"Darwin\")\n        set(CORE_FPIC_FLAGS \"${CORE_FPIC_FLAGS} -mmacosx-version-min=10.7 -stdlib=libc++\")\n    endif()\n    add_custom_command(OUTPUT \"${TARGET_PATH}\"\n        COMMAND ${CMAKE_COMMAND} -E env CFLAGS=${CORE_CFLAGS} CXXFLAGS=${CORE_CXXFLAGS} LDFLAGS=${CORE_LDFLAGS} $(MAKE) -f ${MAKEFILE} CC=\"${CMAKE_C_COMPILER}\" CXX=\"${CMAKE_CXX_COMPILER}\" fpic=${CORE_FPIC_FLAGS} ${LIBRETRO_PLATFORM}\n        COMMAND ${CMAKE_COMMAND} -E copy \"${CORE_NAME}_libretro*\" \"${TARGET_PATH}\"\n        WORKING_DIRECTORY \"cores/${PLATFORM}/${SUBDIR}\"\n        DEPENDS \"${CMAKE_CURRENT_SOURCE_DIR}/retro/cores/${CORE_NAME}-version\")\n    unset(CORE_LDFLAGS)\n    add_custom_command(OUTPUT \"${CMAKE_CURRENT_SOURCE_DIR}/retro/cores/${CORE_NAME}.json\"\n        COMMAND ${CMAKE_COMMAND} -E copy \"${CMAKE_CURRENT_SOURCE_DIR}/cores/${PLATFORM}.json\" \"${CMAKE_CURRENT_SOURCE_DIR}/retro/cores/${CORE_NAME}.json\"\n        DEPENDS \"${CMAKE_CURRENT_SOURCE_DIR}/retro/cores/${CORE_NAME}-version\")\n\n    add_custom_target(${PLATFORM} ALL DEPENDS \"${CMAKE_CURRENT_SOURCE_DIR}/retro/cores/${CORE_NAME}-version\" \"${CMAKE_CURRENT_SOURCE_DIR}/retro/cores/${CORE_NAME}.json\" \"${TARGET_PATH}\")\n    list(APPEND CORE_TARGETS \"${PLATFORM}\")\n    set(CORE_TARGETS \"${CORE_TARGETS}\" PARENT_SCOPE)\n\n    add_custom_target(clean-${PLATFORM}\n        COMMAND $(MAKE) -f ${MAKEFILE} clean\n        COMMAND ${CMAKE_COMMAND} -E remove \"${TARGET_PATH}\"\n        WORKING_DIRECTORY \"cores/${PLATFORM}/${SUBDIR}\")\nendfunction()\n\nadd_core(snes snes9x)\nadd_core(genesis genesis_plus_gx)\nadd_core(nes fceumm)\nadd_core(atari2600 stella)\nadd_core(gb gambatte)\nadd_core(gba mgba)\nadd_core(pce mednafen_pce_fast)\n\nset(CLEAN_CORES)\nforeach(CORE IN LISTS CORE_TARGETS)\n    list(APPEND CLEAN_CORES \"clean-${CORE}\")\nendforeach()\n\nadd_custom_target(clean-cores DEPENDS ${CLEAN_CORES})\nadd_custom_target(cores DEPENDS ${CORE_TARGETS})\nunset(CLEAN_CORES)\n\nif(CMAKE_CROSSCOMPILING)\n    find_program(CAPNP_EXECUTABLE capnp)\n    find_program(CAPNPC_CXX_EXECUTABLE capnpc-c++)\nendif()\n\nif(NOT CapnProto_FOUND AND NOT BUILD_MANYLINUX)\n    if (NOT CMAKE_CROSSCOMPILING OR CAPNP_EXECUTABLE)\n        set(CapnProto_FOUND ON)\n        set(BUILD_TESTING OFF CACHE BOOL \"\" FORCE)\n        if(CAPNP_EXECUTABLE)\n            set(CAPNP_LITE ON)\n        endif()\n        set(CAPNP_INCLUDE_DIRECTORY third-party/capnproto/c++/src)\n        add_subdirectory(third-party/capnproto/c++)\n    endif()\nendif()\nif(CapnProto_FOUND)\n    add_definitions(-DUSE_CAPNP)\n    if(CAPNP_LIB_CAPNP)\n        add_library(CapnProto::capnp SHARED IMPORTED)\n        add_library(CapnProto::kj SHARED IMPORTED)\n        set_target_properties(CapnProto::kj PROPERTIES IMPORTED_LOCATION \"${CAPNP_LIB_KJ}\")\n        set_target_properties(CapnProto::capnp PROPERTIES\n            IMPORTED_LOCATION \"${CAPNP_LIB_CAPNP}\"\n            INTERFACE_LINK_LIBRARIES CapnProto::kj)\n    endif()\n    if(CMAKE_CROSSCOMPILING)\n        if(TARGET CapnProto::capnp_tool)\n            set_target_properties(CapnProto::capnp_tool PROPERTIES IMPORTED_LOCATION \"${CAPNP_EXECUTABLE}\")\n        endif()\n        if(TARGET CapnProto::capnpc_cpp)\n            set_target_properties(CapnProto::capnpc_cpp PROPERTIES IMPORTED_LOCATION \"${CAPNPC_CXX_EXECUTABLE}\")\n        endif()\n    endif()\nelse()\n    message(WARNING \"Could not find CapnProto, disabling search save/load\")\nendif()\n\nset(BUILD_SHARED_LIBS OFF CACHE BOOL \"\" FORCE)\nset(BUILD_STATIC_LIBS ON CACHE BOOL \"\" FORCE)\n\nif(LIBZIP_FOUND AND NOT LIBZIP_VERSION VERSION_LESS 1.0.0)\n    include_directories(${LIBZIP_INCLUDE_DIRS})\n    link_directories(${LIBZIP_LIBRARY_DIRS})\nelse()\n    set(LIBZIP_LIBRARIES zip)\n    add_subdirectory(third-party/libzip)\n    include_directories(third-party/libzip third-party/libzip/lib)\nendif()\n\ninclude_directories(${LUA_INCLUDE_DIRS})\n\nadd_library(retro-base STATIC\n    src/coreinfo.cpp\n    src/data.cpp\n    src/emulator.cpp\n    src/imageops.cpp\n    src/memory.cpp\n    src/movie.cpp\n    src/movie-bk2.cpp\n    src/movie-fm2.cpp\n    src/script.cpp\n    src/script-lua.cpp\n    src/search.cpp\n    src/utils.cpp\n    src/zipfile.cpp\n    ${LUA_LIBRARY})\ntarget_link_libraries(retro-base ${ZLIB_LIBRARY} ${LIBZIP_LIBRARIES} ${LUA_LIBRARY} ${LUA_LIBRRAY})\nadd_dependencies(retro-base ${CORE_TARGETS})\nif(CMAKE_SYSTEM_NAME STREQUAL \"Linux\")\n    target_link_libraries(retro-base dl)\nendif()\n\nif(CapnProto_FOUND)\n    capnp_generate_cpp(CAPNP_SRC CAPNP_H src/serialize.capnp)\n    add_library(retro-capnp STATIC ${CAPNP_SRC} src/data-capnp.cpp)\n    target_link_libraries(retro-capnp retro-base CapnProto::capnp)\nendif()\n\ninclude_directories(src retro third-party/pybind11/include third-party third-party/gtest/googletest/include ${PYTHON_INCLUDE_DIRS})\nif(BUILD_PYTHON)\n    add_library(retro SHARED src/retro.cpp)\n    set_target_properties(retro PROPERTIES\n        LIBRARY_OUTPUT_DIRECTORY \"${PYLIB_DIRECTORY}/retro\"\n        RUNTIME_OUTPUT_DIRECTORY \"${PYLIB_DIRECTORY}/retro\"\n        OUTPUT_NAME _retro\n        PREFIX \"\"\n        SUFFIX ${PYEXT_SUFFIX})\n    if(APPLE)\n        set(PYBIND_LIBS \"-undefined dynamic_lookup\")\n    elseif(WIN32)\n        if(CMAKE_SYSTEM_PROCESSOR STREQUAL \"x86_64\" OR CMAKE_SYSTEM_PROCESSOR STREQUAL \"AMD64\")\n            add_definitions(-DMS_WIN64)\n        endif()\n        set(PYBIND_LIBS \"${PYTHON_LIBRARY}\")\n    endif()\n    target_link_libraries(retro retro-base ${PYBIND_LIBS} ${STATIC_LDFLAGS})\nendif()\n\nif(BUILD_TESTS)\n    enable_testing()\n    add_subdirectory(third-party/gtest/googlemock)\n    add_subdirectory(tests)\nendif()\n\nif(BUILD_UI)\n    add_subdirectory(src/ui)\nendif()\n\nexecute_process(COMMAND ${PYTHON_EXECUTABLE} ${CMAKE_SOURCE_DIR}/setup.py --version OUTPUT_VARIABLE CPACK_PACKAGE_VERSION OUTPUT_STRIP_TRAILING_WHITESPACE)\nset(CPACK_PACKAGE_VENDOR OpenAI)\nset(CPACK_ZIP_COMPONENT_INSTALL ON)\nif(APPLE)\n    set(CPACK_GENERATOR DragNDrop)\nelseif(WIN32)\n    set(CPACK_GENERATOR ZIP)\nendif()\nset(CPACK_COMPONENTS_ALL gym-retro-integration)\ninclude(CPack)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.138671875,
          "content": "# Gym Retro Contribution Guidelines\n\nAt this time we are currently accepting the current forms of contributions:\n\n- Bug reports in either the core functionality or game integrations\n- Pull requests for core functionality bug fixes\n\nNotably, we are not accepting these forms of contributions:\n\n- New game integrations\n- New features\n\nThis may change in the future.\nIn the meantime if you wish to integrate new games you are more than welcome to maintain unofficial repositories of additional games.\n\n## Issue reports\n\nPlease include the following information in your issue reports:\n\n- Operating system\n- Python version\n- Gym Retro version or git commit\n- A detailed description of the issue\n\n## Code contributions\n\nPlease try to adhere to the existing code style. There is a linter script included at `scripts/lint.sh`.\n\n### Python\n\nGym Retro is written in a [PEP 8-compliant code style](https://www.python.org/dev/peps/pep-0008/) (minus the line length restriction). Please make sure to maintain this style in any contributions.\n\n### C++\n\nThere is a `.clang-format` file that documents as best as possible the code style for Gym Retro. Please make sure to follow it."
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.06640625,
          "content": "The MIT License\n\nCopyright (c) 2017-2018 OpenAI (http://openai.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "LICENSES.md",
          "type": "blob",
          "size": 86.2470703125,
          "content": "# Gym Retro\n\nThe MIT License\n\nCopyright (c) 2017-2018 OpenAI (http://openai.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n# Libraries used\n\n## JSON\n```\n    __ _____ _____ _____\n __|  |   __|     |   | |  JSON for Modern C++\n|  |  |__   |  |  | | | |  version 3.1.2\n|_____|_____|_____|_|___|  https://github.com/nlohmann/json\n```\nLicensed under the MIT License <http://opensource.org/licenses/MIT>.\n\nCopyright (c) 2013-2018 Niels Lohmann <http://nlohmann.me>.\n\nPermission is hereby  granted, free of charge, to any  person obtaining a copy\nof this software and associated  documentation files (the \"Software\"), to deal\nin the Software  without restriction, including without  limitation the rights\nto  use, copy,  modify, merge,  publish, distribute,  sublicense, and/or  sell\ncopies  of  the Software,  and  to  permit persons  to  whom  the Software  is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE  IS PROVIDED \"AS  IS\", WITHOUT WARRANTY  OF ANY KIND,  EXPRESS OR\nIMPLIED,  INCLUDING BUT  NOT  LIMITED TO  THE  WARRANTIES OF  MERCHANTABILITY,\nFITNESS FOR  A PARTICULAR PURPOSE AND  NONINFRINGEMENT. IN NO EVENT  SHALL THE\nAUTHORS  OR COPYRIGHT  HOLDERS  BE  LIABLE FOR  ANY  CLAIM,  DAMAGES OR  OTHER\nLIABILITY, WHETHER IN AN ACTION OF  CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE  OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n## pybind11\n\nCopyright (c) 2016 Wenzel Jakob <wenzel.jakob@epfl.ch>, All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors\n   may be used to endorse or promote products derived from this software\n   without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nYou are under no obligation whatsoever to provide any bug fixes, patches, or\nupgrades to the features, functionality or performance of the source code\n(\"Enhancements\") to anyone; however, if you choose to make your Enhancements\navailable either publicly, or directly to the author of this software, without\nimposing a separate written license agreement for such Enhancements, then you\nhereby grant the following license: a non-exclusive, royalty-free perpetual\nlicense to install, use, modify, prepare derivative works, incorporate into\nother computer software, distribute, and sublicense such enhancements or\nderivative works thereof, in binary and source code form.\n\n## LuaJIT\n\nLuaJIT -- a Just-In-Time Compiler for Lua. http://luajit.org/\n\nCopyright (C) 2005-2017 Mike Pall. All rights reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n[ MIT license: http://www.opensource.org/licenses/mit-license.php ]\n\n---\n\n[ LuaJIT includes code from Lua 5.1/5.2, which has this license statement: ]\n\nCopyright (C) 1994-2012 Lua.org, PUC-Rio.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n---\n\n[ LuaJIT includes code from dlmalloc, which has this license statement: ]\n\nThis is a version (aka dlmalloc) of malloc/free/realloc written by\nDoug Lea and released to the public domain, as explained at\nhttp://creativecommons.org/licenses/publicdomain\n\n## libzip\n\nCopyright (C) 1999-2017 Dieter Baron and Thomas Klausner\n\nThe authors can be contacted at <libzip@nih.at>\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n1. Redistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright\n  notice, this list of conditions and the following disclaimer in\n  the documentation and/or other materials provided with the\n  distribution.\n\n3. The names of the authors may not be used to endorse or promote\n  products derived from this software without specific prior\n  written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS\nOR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\nGOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER\nIN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\nOTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\nIF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n\nFor AES encryption support, files under the following license are used:\n\n---\n\nCopyright (c) 2002, Dr Brian Gladman <                 >, Worcester, UK.\nAll rights reserved.\n\nLICENSE TERMS\n\nThe free distribution and use of this software in both source and binary\nform is allowed (with or without changes) provided that:\n\n  1. distributions of this source code include the above copyright\n     notice, this list of conditions and the following disclaimer;\n\n  2. distributions in binary form include the above copyright\n     notice, this list of conditions and the following disclaimer\n     in the documentation and/or other associated materials;\n\n  3. the copyright holder's name is not used to endorse products\n     built using this software without specific written permission.\n\nALTERNATIVELY, provided that this notice is retained in full, this product\nmay be distributed under the terms of the GNU General Public License (GPL),\nin which case the provisions of the GPL apply INSTEAD OF those given above.\n\nDISCLAIMER\n\nThis software is provided 'as is' with no explicit or implied warranties\nin respect of its properties, including, but not limited to, correctness\nand/or fitness for purpose.\n\n---\n\nIssue Date: 18th November 2008\n\n\n# Cores\n\n## Stella\n\nCopyright (c) 1995-2014 by Bradford W. Mott, Stephen Anthony and the Stella Team, licensed under the [GPLv2](https://github.com/libretro/stella-libretro/blob/979e4ac57686ee38a19571fbbba3574cdb6003b7/stella/license.txt).  See full text at the bottom.\n\n## gambatte\n\nCopyright (C) 2008 by Sindre Aamå, licensed under the [GPLv2](https://github.com/libretro/gambatte-libretro/blob/4b98cd4d8ad13de9e08fe583ed814f76d800a0d1/COPYING). See full text at the bottom.\n\n## mGBA\n\nCopyright (c) 2013-2018 by Jeffrey Pfau, licensed under the [MPLv2](https://github.com/endrift/mgba/blob/5b7917b6ccb92203cd6af2f5f350d048e377692d/LICENSE).\n\n```\nMozilla Public License Version 2.0\n==================================\n\n1. Definitions\n--------------\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n\n    (a) that the initial Contributor has attached the notice described\n        in Exhibit B to the Covered Software; or\n\n    (b) that the Covered Software was made available under the terms of\n        version 1.1 or earlier of the License, but not also under the\n        terms of a Secondary License.\n\n1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in \n    a separate file or files, that is not Covered Software.\n\n1.8. \"License\"\n    means this document.\n\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n\n1.10. \"Modifications\"\n    means any of the following:\n\n    (a) any file in Source Code Form that results from an addition to,\n        deletion from, or modification of the contents of Covered\n        Software; or\n\n    (b) any new file in Source Code Form that contains any Covered\n        Software.\n\n1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\n2. License Grants and Conditions\n--------------------------------\n\n2.1. Grants\n\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n\n2.2. Effective Date\n\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n\n2.3. Limitations on Grant Scope\n\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n\n2.4. Subsequent Licenses\n\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n\n2.5. Representation\n\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n\n2.6. Fair Use\n\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n\n2.7. Conditions\n\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\n3. Responsibilities\n-------------------\n\n3.1. Distribution of Source Form\n\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n\n3.2. Distribution of Executable Form\n\nIf You distribute Covered Software in Executable Form then:\n\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\n\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n\n3.4. Notices\n\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n\n3.5. Application of Additional Terms\n\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\n4. Inability to Comply Due to Statute or Regulation\n---------------------------------------------------\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\n5. Termination\n--------------\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n************************************************************************\n*                                                                      *\n*  6. Disclaimer of Warranty                                           *\n*  -------------------------                                           *\n*                                                                      *\n*  Covered Software is provided under this License on an \"as is\"       *\n*  basis, without warranty of any kind, either expressed, implied, or  *\n*  statutory, including, without limitation, warranties that the       *\n*  Covered Software is free of defects, merchantable, fit for a        *\n*  particular purpose or non-infringing. The entire risk as to the     *\n*  quality and performance of the Covered Software is with You.        *\n*  Should any Covered Software prove defective in any respect, You     *\n*  (not any Contributor) assume the cost of any necessary servicing,   *\n*  repair, or correction. This disclaimer of warranty constitutes an   *\n*  essential part of this License. No use of any Covered Software is   *\n*  authorized under this License except under this disclaimer.         *\n*                                                                      *\n************************************************************************\n\n************************************************************************\n*                                                                      *\n*  7. Limitation of Liability                                          *\n*  --------------------------                                          *\n*                                                                      *\n*  Under no circumstances and under no legal theory, whether tort      *\n*  (including negligence), contract, or otherwise, shall any           *\n*  Contributor, or anyone who distributes Covered Software as          *\n*  permitted above, be liable to You for any direct, indirect,         *\n*  special, incidental, or consequential damages of any character      *\n*  including, without limitation, damages for lost profits, loss of    *\n*  goodwill, work stoppage, computer failure or malfunction, or any    *\n*  and all other commercial damages or losses, even if such party      *\n*  shall have been informed of the possibility of such damages. This   *\n*  limitation of liability shall not apply to liability for death or   *\n*  personal injury resulting from such party's negligence to the       *\n*  extent applicable law prohibits such limitation. Some               *\n*  jurisdictions do not allow the exclusion or limitation of           *\n*  incidental or consequential damages, so this exclusion and          *\n*  limitation may not apply to You.                                    *\n*                                                                      *\n************************************************************************\n\n8. Litigation\n-------------\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\n9. Miscellaneous\n----------------\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\n10. Versions of the License\n---------------------------\n\n10.1. New Versions\n\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n\n10.2. Effect of New Versions\n\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n\n10.3. Modified Versions\n\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\n\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\n\nExhibit A - Source Code Form License Notice\n-------------------------------------------\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n---------------------------------------------------------\n\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n```\n\n## Genesis Plus GX\n\nUnless otherwise explicitly stated, all code in Genesis Plus GX is released\nunder the following license:\n\nCopyright (c) 1998-2003 Charles MacDonald\nCopyright (c) 2007-2017 Eke-Eke\nSome portions copyright Nicola Salmoria and the MAME team\nAll rights reserved.\n\nRedistribution and use of this code or any derivative works are permitted\nprovided that the following conditions are met:\n\n* Redistributions may not be sold, nor may they be used in a commercial\nproduct or activity.\n\n* Redistributions that are modified from the original source must include the\ncomplete source code, including the source code for all components used by a\nbinary built from the modified sources. However, as a special exception, the\nsource code distributed need not include anything that is normally distributed\n(in either source or binary form) with the major components (compiler, kernel,\nand so on) of the operating system on which the executable runs, unless that\ncomponent itself accompanies the executable.\n\n* Redistributions must reproduce the above copyright notice, this list of\nconditions and the following disclaimer in the documentation and/or other\nmaterials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n\n---\n\nTREMOR library is distributed under the following license:\n\nCopyright (c) 2002, Xiph.org Foundation\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n- Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n\n- Redistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.\n\n- Neither the name of the Xiph.org Foundation nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION\nOR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n---\n\nLIBCHDR is distributed under following licenses:\n\n\n### MAME CHD interface \n\nCopyright Aaron Giles\nCopyright Romain Tisserand\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n   Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n   Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n   Neither the name of the <organization> nor the\n      names of its contributors may be used to endorse or promote products\n      derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n### FLAC - Free Lossless Audio Codec\n\nCopyright (C) 2000-2009  Josh Coalson\nCopyright (C) 2011-2016  Xiph.Org Foundation\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n- Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n\n- Redistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.\n\n- Neither the name of the Xiph.org Foundation nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n### ZLIB DATA COMPRESSION LIBRARY\n\n(C) 1995-2017 Jean-loup Gailly and Mark Adler\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n\n\nLZMA SDK is written and placed in the public domain by Igor Pavlov.\nAnyone is free to copy, modify, publish, use, compile, sell, or distribute the \noriginal LZMA SDK code, either in source code form or as a compiled binary, for \nany purpose, commercial or non-commercial, and by any means.\n\n---\n\n```\nNTSC Filter and Blip Buffer libraries are distributed under the \nterms of the GNU Lesser General Public License (LGPL)\n\n\n\t\t  GNU LESSER GENERAL PUBLIC LICENSE\n\t\t       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\f\n\t\t  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n  \n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\f\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\f\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\f\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\f\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\f\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n```\n\n---\n\nGamecube & Wii ports are linked with LIBASND library and includes code distributed under\nthe following license:\n\nCopyright (c) 2008 Hermes <www.entuwii.net>\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are \npermitted provided that the following conditions are met:\n\n- Redistributions of source code must retain the above copyright notice, this list of \n  conditions and the following disclaimer. \n- Redistributions in binary form must reproduce the above copyright notice, this list \n  of conditions and the following disclaimer in the documentation and/or other \n  materials provided with the distribution. \n- The names of the contributors may not be used to endorse or promote products derived \n  from this software without specific prior written permission. \n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \nEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL \nTHE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, \nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, \nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS \nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \nSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF \nTHE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n## FCEUmm\n\nCopyright (C) 2002-2003 Xodnizel, licensed under the [GPLv2](https://github.com/libretro/libretro-fceumm/blob/fdf6993b6cd68e62e03d1c7cc0e87ed3ee7e0483/Copying). See full text at the bottom. \n\n## Mednafen/Beetle PCE Fast\n\nLicensed under the [GPLv2](https://github.com/libretro/beetle-pce-fast-libretro/blob/35e96c44b6d43c8ff48d5484331ecdd9ad4dfc03/COPYING). See full text at the bottom.\n\n## Snes9x\n\n```\n  Snes9x - Portable Super Nintendo Entertainment System (TM) emulator.\n  (c) Copyright 1996 - 2002  Gary Henderson (gary.henderson@ntlworld.com),\n                             Jerremy Koot (jkoot@snes9x.com)\n  (c) Copyright 2002 - 2004  Matthew Kendora\n  (c) Copyright 2002 - 2005  Peter Bortas (peter@bortas.org)\n  (c) Copyright 2004 - 2005  Joel Yliluoma (http://iki.fi/bisqwit/)\n  (c) Copyright 2001 - 2006  John Weidman (jweidman@slip.net)\n  (c) Copyright 2002 - 2006  funkyass (funkyass@spam.shaw.ca),\n                             Kris Bleakley (codeviolation@hotmail.com)\n  (c) Copyright 2002 - 2010  Brad Jorsch (anomie@users.sourceforge.net),\n                             Nach (n-a-c-h@users.sourceforge.net),\n  (c) Copyright 2002 - 2011  zones (kasumitokoduck@yahoo.com)\n  (c) Copyright 2006 - 2007  nitsuja\n  (c) Copyright 2009 - 2011  BearOso,\n                             OV2\n  (c) Copyright 2011 - 2016  Hans-Kristian Arntzen,\n                             Daniel De Matteis\n                             (Under no circumstances will commercial rights be given)\n  BS-X C emulator code\n  (c) Copyright 2005 - 2006  Dreamer Nom,\n                             zones\n  C4 x86 assembler and some C emulation code\n  (c) Copyright 2000 - 2003  _Demo_ (_demo_@zsnes.com),\n                             Nach,\n                             zsKnight (zsknight@zsnes.com)\n  C4 C++ code\n  (c) Copyright 2003 - 2006  Brad Jorsch,\n                             Nach\n  DSP-1 emulator code\n  (c) Copyright 1998 - 2006  _Demo_,\n                             Andreas Naive (andreasnaive@gmail.com),\n                             Gary Henderson,\n                             Ivar (ivar@snes9x.com),\n                             John Weidman,\n                             Kris Bleakley,\n                             Matthew Kendora,\n                             Nach,\n                             neviksti (neviksti@hotmail.com)\n  DSP-2 emulator code\n  (c) Copyright 2003         John Weidman,\n                             Kris Bleakley,\n                             Lord Nightmare (lord_nightmare@users.sourceforge.net),\n                             Matthew Kendora,\n                             neviksti\n  DSP-3 emulator code\n  (c) Copyright 2003 - 2006  John Weidman,\n                             Kris Bleakley,\n                             Lancer,\n                             z80 gaiden\n  DSP-4 emulator code\n  (c) Copyright 2004 - 2006  Dreamer Nom,\n                             John Weidman,\n                             Kris Bleakley,\n                             Nach,\n                             z80 gaiden\n  OBC1 emulator code\n  (c) Copyright 2001 - 2004  zsKnight,\n                             pagefault (pagefault@zsnes.com),\n                             Kris Bleakley\n                             Ported from x86 assembler to C by sanmaiwashi\n  SPC7110 and RTC C++ emulator code used in 1.39-1.51\n  (c) Copyright 2002         Matthew Kendora with research by\n                             zsKnight,\n                             John Weidman,\n                             Dark Force\n  SPC7110 and RTC C++ emulator code used in 1.52+\n  (c) Copyright 2009         byuu,\n                             neviksti\n  S-DD1 C emulator code\n  (c) Copyright 2003         Brad Jorsch with research by\n                             Andreas Naive,\n                             John Weidman\n  S-RTC C emulator code\n  (c) Copyright 2001 - 2006  byuu,\n                             John Weidman\n  ST010 C++ emulator code\n  (c) Copyright 2003         Feather,\n                             John Weidman,\n                             Kris Bleakley,\n                             Matthew Kendora\n  Super FX x86 assembler emulator code\n  (c) Copyright 1998 - 2003  _Demo_,\n                             pagefault,\n                             zsKnight\n  Super FX C emulator code\n  (c) Copyright 1997 - 1999  Ivar,\n                             Gary Henderson,\n                             John Weidman\n  Sound emulator code used in 1.5-1.51\n  (c) Copyright 1998 - 2003  Brad Martin\n  (c) Copyright 1998 - 2006  Charles Bilyue'\n  Sound emulator code used in 1.52+\n  (c) Copyright 2004 - 2007  Shay Green (gblargg@gmail.com)\n  SH assembler code partly based on x86 assembler code\n  (c) Copyright 2002 - 2004  Marcus Comstedt (marcus@mc.pp.se)\n  2xSaI filter\n  (c) Copyright 1999 - 2001  Derek Liauw Kie Fa\n  HQ2x, HQ3x, HQ4x filters\n  (c) Copyright 2003         Maxim Stepin (maxim@hiend3d.com)\n  NTSC filter\n  (c) Copyright 2006 - 2007  Shay Green\n  GTK+ GUI code\n  (c) Copyright 2004 - 2011  BearOso\n  Win32 GUI code\n  (c) Copyright 2003 - 2006  blip,\n                             funkyass,\n                             Matthew Kendora,\n                             Nach,\n                             nitsuja\n  (c) Copyright 2009 - 2011  OV2\n  Mac OS GUI code\n  (c) Copyright 1998 - 2001  John Stiles\n  (c) Copyright 2001 - 2011  zones\n  Libretro port\n  (c) Copyright 2011 - 2016  Hans-Kristian Arntzen,\n                             Daniel De Matteis\n                             (Under no circumstances will commercial rights be given)\n  Specific ports contains the works of other authors. See headers in\n  individual files.\n  Snes9x homepage: http://www.snes9x.com/\n  Permission to use, copy, modify and/or distribute Snes9x in both binary\n  and source form, for non-commercial purposes, is hereby granted without\n  fee, providing that this license information and copyright notice appear\n  with all copies and any derived work.\n  This software is provided 'as-is', without any express or implied\n  warranty. In no event shall the authors be held liable for any damages\n  arising from the use of this software or it's derivatives.\n  Snes9x is freeware for PERSONAL USE only. Commercial users should\n  seek permission of the copyright holders first. Commercial use includes,\n  but is not limited to, charging money for Snes9x or software derived from\n  Snes9x, including Snes9x or derivatives in commercial game bundles, and/or\n  using Snes9x as a promotion for your commercial product.\n  The copyright holders request that bug fixes and improvements to the code\n  should be forwarded to them so everyone can benefit from the modifications\n  in future versions.\n  Super NES and Super Nintendo Entertainment System are trademarks of\n  Nintendo Co., Limited and its subsidiary companies.\n```\n\n# GPLv2 full text\n\nThe GPLv2 is used by Stella, gambatte, FCEUmm and Mednafen/Beetle PCE Fast.\n\n```\n\n\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n                       59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Library General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\f\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\f\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\f\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\f\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\f\n\t    How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Library General\nPublic License instead of this License.\n```\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.1865234375,
          "content": "recursive-include third-party **\nrecursive-include cores **\nglobal-exclude .git* .*.yml *.o *.a *.dylib *.so *.dll\nexclude travis.py retro/VERSION.txt\nrecursive-exclude retro/cores *-version\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.0498046875,
          "content": "**Status:** Maintenance (expect bug fixes and minor updates)\n\n# Gym Retro\n\nGym Retro lets you turn classic video games into [Gym](https://gym.openai.com/) environments for reinforcement learning and comes with integrations for ~1000 games.  It uses various emulators that support the [Libretro API](https://www.libretro.com/index.php/api/), making it fairly easy to add new emulators.\n\nSupported platforms:\n\n- Windows 7, 8, 10\n- macOS 10.13 (High Sierra), 10.14 (Mojave)\n- Linux (manylinux1)\n\nCPU with `SSSE3` or better\n\nSupported Pythons:\n\n- 3.6\n- 3.7\n- 3.8\n\nEach game integration has files listing memory locations for in-game variables, reward functions based on those variables, episode end conditions, savestates at the beginning of levels and a file containing hashes of ROMs that work with these files.\n\nPlease note that ROMs are not included and you must obtain them yourself.  Most ROM hashes are sourced from their respective No-Intro SHA-1 sums.\n\n# Documentation\n\nDocumentation is available at https://retro.readthedocs.io/en/latest/\n\nYou should probably start with the [Getting Started Guide](https://retro.readthedocs.io/en/latest/getting_started.html).\n\n# Contributing\n\n[See CONTRIBUTING.md](https://github.com/openai/retro/blob/master/CONTRIBUTING.md)\n\n# Changelog\n\n[See CHANGES.md](https://github.com/openai/retro/blob/master/CHANGES.md)\n\n# Emulated Systems\n\n- Atari\n\t- Atari2600 (via Stella)\n- NEC\n\t- TurboGrafx-16/PC Engine (via Mednafen/Beetle PCE Fast)\n- Nintendo\n\t- Game Boy/Game Boy Color (via gambatte)\n\t- Game Boy Advance (via mGBA)\n\t- Nintendo Entertainment System (via FCEUmm)\n\t- Super Nintendo Entertainment System (via Snes9x)\n- Sega\n\t- GameGear (via Genesis Plus GX)\n\t- Genesis/Mega Drive (via Genesis Plus GX)\n\t- Master System (via Genesis Plus GX)\n\nSee [LICENSES.md](https://github.com/openai/retro/blob/master/LICENSES.md) for information on the licenses of the individual cores.\n\n# Included ROMs\n\nThe following non-commercial ROMs are included with Gym Retro for testing purposes:\n\n- [the 128 sine-dot](http://www.pouet.net/prod.php?which=2762) by Anthrox\n- [Sega Tween](https://pdroms.de/files/gamegear/sega-tween) by Ben Ryves\n- [Happy 10!](http://www.pouet.net/prod.php?which=52716) by Blind IO\n- [512-Colour Test Demo](https://pdroms.de/files/pcengine/512-colour-test-demo) by Chris Covell\n- [Dekadrive](http://www.pouet.net/prod.php?which=67142) by Dekadence\n- [Automaton](https://pdroms.de/files/atari2600/automaton-minigame-compo-2003) by Derek Ledbetter\n- [Fire](http://privat.bahnhof.se/wb800787/gb/demo/64/) by dox\n- [FamiCON intro](http://www.pouet.net/prod.php?which=53497) by dr88\n- [Airstriker](https://pdroms.de/genesis/airstriker-v1-50-genesis-game) by Electrokinesis\n- [Lost Marbles](https://pdroms.de/files/gameboyadvance/lost-marbles) by Vantage\n\n# Citation\n\nPlease cite using the following BibTeX entry:\n\n```\n@article{nichol2018retro,\n  title={Gotta Learn Fast: A New Benchmark for Generalization in RL},\n  author={Nichol, Alex and Pfau, Vicki and Hesse, Christopher and Klimov, Oleg and Schulman, John},\n  journal={arXiv preprint arXiv:1804.03720},\n  year={2018}\n}\n```\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.005859375,
          "content": "0.8.0\n"
        },
        {
          "name": "conftest.py",
          "type": "blob",
          "size": 0.845703125,
          "content": "import pytest\nimport retro.data\n\ninttypes = {\n    'exp': retro.data.Integrations.EXPERIMENTAL_ONLY,\n    'contrib': retro.data.Integrations.CONTRIB_ONLY,\n}\n\n\ndef pytest_collection_modifyitems(items):\n    def test(*args, **kwargs):\n        print(kwargs)\n        return False\n\n    for item in items:\n        if item.originalname in ('test_load', 'test_rom', 'test_state', 'test_hash'):\n            for key in item.keywords.keys():\n                if '[' + key + ']' not in item.nodeid:\n                    continue\n\n                game = key.split('_')\n                gamename = '%s-%s' % (game[0], game[1])\n                try:\n                    retro.data.get_romfile_path(gamename, inttypes[game[2]] if len(game) > 2 else retro.data.Integrations.STABLE)\n                except (FileNotFoundError, KeyError):\n                    item.add_marker(pytest.mark.skip)\n"
        },
        {
          "name": "cores",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "retro",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.115234375,
          "content": "[pycodestyle]\nexclude = third-party,cores,docker/linux\nignore = E501\n\n[tool:pytest]\nnorecursedirs = third-party cores\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 3.68359375,
          "content": "from distutils.spawn import find_executable\nfrom setuptools import setup, Extension, __version__ as setuptools_version\nfrom setuptools.command.build_ext import build_ext\nimport subprocess\nimport sys\nimport os\nimport shutil\n\nVERSION_PATH = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'VERSION')\n\nSCRIPT_DIR = os.path.dirname(os.path.abspath(__file__))\nREADME = open(os.path.join(SCRIPT_DIR, \"README.md\")).read()\n\nif not os.path.exists(os.path.join(os.path.dirname(__file__), '.git')):\n    use_scm_version = False\n    shutil.copy('VERSION', 'retro/VERSION.txt')\nelse:\n    def version_scheme(version):\n        with open(VERSION_PATH) as v:\n            version_file = v.read().strip()\n        if version.distance:\n            version_file += '.dev%d' % version.distance\n        return version_file\n\n    def local_scheme(version):\n        v = ''\n        if version.distance:\n            v = '+' + version.node\n        return v\n    use_scm_version = {'write_to': 'retro/VERSION.txt',\n                       'version_scheme': version_scheme,\n                       'local_scheme': local_scheme}\n\n\nclass CMakeBuild(build_ext):\n    def run(self):\n        suffix = super(CMakeBuild, self).get_ext_filename('')\n        pyext_suffix = '-DPYEXT_SUFFIX:STRING=%s' % suffix\n        pylib_dir = ''\n        if not self.inplace:\n            pylib_dir = '-DPYLIB_DIRECTORY:PATH=%s' % self.build_lib\n        if self.debug:\n            build_type = '-DCMAKE_BUILD_TYPE=Debug'\n        else:\n            build_type = ''\n        python_executable = '-DPYTHON_EXECUTABLE:STRING=%s' % sys.executable\n        cmake_exe = find_executable('cmake')\n        if not cmake_exe:\n            try:\n                import cmake\n            except ImportError:\n                subprocess.check_call([sys.executable, '-m', 'pip', 'install', 'cmake'])\n                import cmake\n            cmake_exe = os.path.join(cmake.CMAKE_BIN_DIR, 'cmake')\n        subprocess.check_call([cmake_exe, '.', '-G', 'Unix Makefiles', build_type, pyext_suffix, pylib_dir, python_executable])\n        if self.parallel:\n            jobs = '-j%d' % self.parallel\n        else:\n            import multiprocessing\n            jobs = '-j%d' % multiprocessing.cpu_count()\n        make_exe = find_executable('make')\n        if not make_exe:\n            raise RuntimeError('Could not find Make executable. Is it installed?')\n        subprocess.check_call([make_exe, jobs, 'retro'])\n\n\nplatform_globs = ['*-%s/*' % plat for plat in ['Nes', 'Snes', 'Genesis', 'Atari2600', 'GameBoy', 'Sms', 'GameGear', 'PCEngine', 'GbColor', 'GbAdvance']]\n\nkwargs = {}\nif tuple(int(v) for v in setuptools_version.split('.')[:3]) >= (24, 2, 0):\n    kwargs['python_requires'] = '>=3.6.0'\n\n\nsetup(\n    name='gym-retro',\n    long_description=README,\n    long_description_content_type=\"text/markdown\",\n    author='OpenAI',\n    author_email='csh@openai.com',\n    url='https://github.com/openai/retro',\n    version=open(VERSION_PATH, 'r').read().strip(),\n    license='MIT',\n    install_requires=['gym', 'pyglet>=1.3.2,==1.*'],\n    ext_modules=[Extension('retro._retro', ['CMakeLists.txt', 'src/*.cpp'])],\n    cmdclass={'build_ext': CMakeBuild},\n    packages=['retro', 'retro.data', 'retro.data.stable', 'retro.data.experimental', 'retro.data.contrib', 'retro.scripts', 'retro.import', 'retro.examples'],\n    package_data={\n        'retro': ['cores/*.json', 'cores/*_libretro*', 'VERSION.txt', 'README.md', 'LICENSES.md'],\n        'retro.data.stable': platform_globs,\n        'retro.data.experimental': platform_globs,\n        'retro.data.contrib': platform_globs,\n    },\n    extras_require={'docs': ['sphinx', 'sphinx_rtd_theme', 'sphinx-autobuild', 'm2r']},\n    setup_requires=['setuptools_scm'],\n    use_scm_version=use_scm_version,\n    **kwargs\n)\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "third-party",
          "type": "tree",
          "content": null
        },
        {
          "name": "travis.py",
          "type": "blob",
          "size": 4.7470703125,
          "content": "import subprocess\nimport os\nimport shlex\nimport json\nimport glob\nimport sys\nimport re\nimport shutil\nfrom google.oauth2 import service_account\nfrom google.cloud import storage\n\n\n\nclass Fold:\n    def __init__(self, name, description=None):\n        self.fold_name = name\n        self.description = description or name\n\n    def __enter__(self):\n        print('travis_fold:start:%s\\033[33;1m%s\\033[0m' % (self.fold_name, self.description), flush=True)\n\n    def __exit__(self, exc_type, exc_value, traceback):\n        print('\\ntravis_fold:end:%s\\r' % self.fold_name, end='', flush=True)\n\n\ndef call(cmd):\n    print(' '.join(shlex.quote(p) for p in cmd), flush=True)\n    subprocess.check_call(cmd)\n\n\ndef get_bucket():\n    credentials_info = json.loads(os.environ['GOOGLE_APPLICATION_CREDENTIALS_DATA'])\n    credentials = service_account.Credentials.from_service_account_info(credentials_info)\n    client = storage.Client(credentials=credentials, project=credentials_info['project_id'])\n    return client.get_bucket('gym-retro')\n\n\ndef upload_to_gcs(patterns, dest):\n    bucket = get_bucket()\n    for pattern in patterns:\n        print('uploading %s to %s' % (pattern, dest), flush=True)\n        for filepath in glob.glob(pattern):\n            blob_name = '%s/%s' % (dest, os.path.basename(filepath))\n            blob = bucket.blob(blob_name)\n            blob.upload_from_filename(filename=filepath)\n            blob.make_public()\n            print('uploaded ', blob.public_url.replace('%2F', '/'))  # public_url escapes slashes but that breaks pip install\n\n\ndef test():\n    import pytest\n    import retro.testing as testdata\n    args = []\n    if os.environ['TRAVIS_BRANCH'] != 'master' or os.environ['TRAVIS_PULL_REQUEST'] != 'false':\n        check = testdata.branch_new('origin/master')\n        if check:\n            args.extend(['-k', ' or '.join(check)])\n    pytest.main(args)\n    return not testdata.errors\n\n\ndef main():\n    os_name = os.environ['TRAVIS_OS_NAME']\n    cross = os.environ.get('CROSS')\n    bdist_options = []\n    with Fold('script.build', 'Building'):\n        if os_name == 'osx':\n            cmake_options = ['-DCMAKE_PREFIX_PATH=/usr/local/opt/qt', '-DBUILD_UI=ON']\n        elif os_name == 'linux':\n            include_suffix = \"m\" if float(os.environ['PYVER']) < 3.8 else \"\"\n            cmake_options = ['-DBUILD_MANYLINUX=ON',\n                             '-DPYTHON_INCLUDE_DIR=%s/include/python%s%s' % (sys.base_prefix, os.environ['PYVER'], include_suffix)]\n            if cross in ('win32', 'win64'):\n                cmake_options = ['-DCMAKE_TOOLCHAIN_FILE=docker/cmake/%s.cmake' % cross, '-DBUILD_UI=ON']\n            if cross == 'win32':\n                bdist_options = ['--plat-name', 'win32']\n            if cross == 'win64':\n                bdist_options = ['--plat-name', 'win_amd64']\n        else:\n            raise Exception('unrecognized os name')\n\n        call(['cmake', '.', '-DBUILD_TESTS=ON'] + cmake_options)\n        call(['python', 'setup.py', '-q', 'build_ext', '-i', '-j3'])\n        if cross not in ('win64', 'win32'):\n            call(['pip', 'install', '-e', '.'])\n        call(['make', '-j3'])\n\n    if os.environ['TRAVIS_PULL_REQUEST'] == 'false':\n        with Fold('script.package', 'Packaging binaries'):\n            call(['python', 'setup.py', '-q', 'bdist_wheel'] + bdist_options)\n\n            if os.environ['TRAVIS_BRANCH'] == 'master':\n                upload_dir = 'builds'\n            else:\n                upload_dir = 'builds/%s' % os.environ['TRAVIS_BRANCH']\n            if os_name == 'osx' or cross in ('win32', 'win64'):\n                # package the UI for uploading\n                call(['cpack'])\n                # assuming this is running on the latest commit, rename\n                # the UI so that we can easily link to the latest version\n                for filepath in glob.glob('Gym Retro-*.*'):\n                    basename = os.path.basename(filepath)\n                    m = re.match(r'Gym Retro-.*-([^-]+)', basename)\n                    new_basename = 'Gym Retro-latest-' + m.group(1)\n                    new_filepath = os.path.join(os.path.dirname(filepath), new_basename)\n                    shutil.copy(filepath, new_filepath)\n                upload_to_gcs(['Gym Retro-*.*'], upload_dir)\n            elif not cross and os_name == 'linux':\n                call(['auditwheel', 'repair', '-w', 'dist'] + glob.glob('dist/*.whl'))\n\n            upload_to_gcs(['dist/*.whl'], upload_dir)\n\n    if cross not in ('win64', 'win32'):\n        with Fold('script.test', 'Running tests'):\n            call(['ctest', '--verbose', '-E', '\\.test'])  # Exclude libzip tests\n\n            if os_name == 'linux' and not cross:\n                try:\n                    passed = test()\n                    assert passed\n                except ImportError:\n                    pass\n\n\nif __name__ == '__main__':\n    main()\n"
        }
      ]
    }
  ]
}