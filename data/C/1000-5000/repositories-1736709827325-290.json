{
  "metadata": {
    "timestamp": 1736709827325,
    "page": 290,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "checkpoint-restore/criu",
      "stars": 3042,
      "defaultBranch": "criu-dev",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".cirrus.yml",
          "type": "blob",
          "size": 4.1806640625,
          "content": "task:\n  name: Vagrant Fedora based test (no VDSO)\n  environment:\n    HOME: \"/root\"\n    CIRRUS_WORKING_DIR: \"/tmp/criu\"\n\n  compute_engine_instance:\n    image_project: cirrus-images\n    image: family/docker-kvm\n    platform: linux\n    cpu: 4\n    memory: 16G\n    nested_virtualization: true\n\n  setup_script: |\n    scripts/ci/apt-install make gcc pkg-config git perl-modules iproute2 kmod wget cpu-checker\n    sudo kvm-ok\n    ln -sf /usr/include/google/protobuf/descriptor.proto images/google/protobuf/descriptor.proto\n  build_script: |\n    make -C scripts/ci vagrant-fedora-no-vdso\n\ntask:\n  name: CentOS Stream 9 based test\n  environment:\n    HOME: \"/root\"\n    CIRRUS_WORKING_DIR: \"/tmp/criu\"\n\n  compute_engine_instance:\n    image_project: centos-cloud\n    image: family/centos-stream-9\n    platform: linux\n    cpu: 4\n    memory: 8G\n\n  setup_script: |\n    ln -sf /usr/include/google/protobuf/descriptor.proto images/google/protobuf/descriptor.proto\n    dnf config-manager --set-enabled crb # Same as CentOS 8 powertools\n    dnf -y install epel-release epel-next-release\n    dnf -y install --allowerasing asciidoc gcc git gnutls-devel libaio-devel libasan libcap-devel libnet-devel libnl3-devel libbsd-devel libselinux-devel make protobuf-c-devel protobuf-devel python-devel python-PyYAML python-protobuf python-junit_xml python3-importlib-metadata xmlto libdrm-devel\n    # The image has a too old version of nettle which does not work with gnutls.\n    # Just upgrade to the latest to make the error go away.\n    dnf -y upgrade nettle nettle-devel\n    systemctl stop sssd\n    # Even with selinux in permissive mode the selinux tests will be executed.\n    # The Cirrus CI user runs as a service from selinux point of view and is\n    # much more restricted than a normal shell (system_u:system_r:unconfined_service_t:s0).\n    # The test case above (vagrant-fedora-no-vdso) should run selinux tests in enforcing mode.\n    setenforce 0\n\n  build_script: |\n    make -C scripts/ci local SKIP_CI_PREP=1 CC=gcc CD_TO_TOP=1 ZDTM_OPTS=\"-x zdtm/static/socket-raw\"\n\ntask:\n  name: Vagrant Fedora Rawhide based test\n  environment:\n    HOME: \"/root\"\n    CIRRUS_WORKING_DIR: \"/tmp/criu\"\n\n  compute_engine_instance:\n    image_project: cirrus-images\n    image: family/docker-kvm\n    platform: linux\n    cpu: 4\n    memory: 16G\n    nested_virtualization: true\n\n  setup_script: |\n    scripts/ci/apt-install make gcc pkg-config git perl-modules iproute2 kmod wget cpu-checker\n    sudo kvm-ok\n    ln -sf /usr/include/google/protobuf/descriptor.proto images/google/protobuf/descriptor.proto\n  build_script: |\n    make -C scripts/ci vagrant-fedora-rawhide\n\ntask:\n  name: Vagrant Fedora based test (non-root)\n  environment:\n    HOME: \"/root\"\n    CIRRUS_WORKING_DIR: \"/tmp/criu\"\n\n  compute_engine_instance:\n    image_project: cirrus-images\n    image: family/docker-kvm\n    platform: linux\n    cpu: 4\n    memory: 16G\n    nested_virtualization: true\n\n  setup_script: |\n    scripts/ci/apt-install make gcc pkg-config git perl-modules iproute2 kmod wget cpu-checker\n    sudo kvm-ok\n    ln -sf /usr/include/google/protobuf/descriptor.proto images/google/protobuf/descriptor.proto\n  build_script: |\n    make -C scripts/ci vagrant-fedora-non-root\n\ntask:\n  name: aarch64 build GCC (native)\n  arm_container:\n    image: docker.io/library/ubuntu:jammy\n    cpu: 4\n    memory: 4G\n  script: uname -a\n  build_script: |\n    scripts/ci/apt-install make\n    ln -sf /usr/include/google/protobuf/descriptor.proto images/google/protobuf/descriptor.proto\n    make -C scripts/ci local\n\ntask:\n  name: aarch64 build CLANG (native)\n  arm_container:\n    image: docker.io/library/ubuntu:jammy\n    cpu: 4\n    memory: 4G\n  script: uname -a\n  build_script: |\n    scripts/ci/apt-install make\n    ln -sf /usr/include/google/protobuf/descriptor.proto images/google/protobuf/descriptor.proto\n    make -C scripts/ci local CLANG=1\n\ntask:\n  name: aarch64 Fedora Rawhide\n  arm_container:\n    image: registry.fedoraproject.org/fedora:rawhide\n    cpu: 4\n    memory: 4G\n  script: uname -a\n  build_script: |\n    scripts/ci/prepare-for-fedora-rawhide.sh\n    ln -sf /usr/include/google/protobuf/descriptor.proto images/google/protobuf/descriptor.proto\n    make -C scripts/ci/ local CC=gcc SKIP_CI_PREP=1 SKIP_CI_TEST=1 CD_TO_TOP=1\n    make -C test/zdtm -j 4\n"
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 16.7177734375,
          "content": "# SPDX-License-Identifier: GPL-2.0\n#\n# clang-format configuration file. Intended for clang-format >= 11.\n#\n# For more information, see:\n#\n#   Documentation/process/clang-format.rst\n#   https://clang.llvm.org/docs/ClangFormat.html\n#   https://clang.llvm.org/docs/ClangFormatStyleOptions.html\n#\n---\nAccessModifierOffset: -4\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlines: Left # Unknown to clang-format-4.0\nAlignOperands: true\nAlignTrailingComments: true\nAlignConsecutiveMacros: true\nAllowAllParametersOfDeclarationOnNextLine: false\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: None\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: false\nAlwaysBreakTemplateDeclarations: false\nBinPackArguments: true\nBinPackParameters: true\nBraceWrapping:\n  AfterClass: false\n  AfterControlStatement: false\n  AfterEnum: false\n  AfterFunction: true\n  AfterNamespace: true\n  AfterObjCDeclaration: false\n  AfterStruct: false\n  AfterUnion: false\n  AfterExternBlock: false # Unknown to clang-format-5.0\n  BeforeCatch: false\n  BeforeElse: false\n  IndentBraces: false\n  SplitEmptyFunction: true # Unknown to clang-format-4.0\n  SplitEmptyRecord: true # Unknown to clang-format-4.0\n  SplitEmptyNamespace: true # Unknown to clang-format-4.0\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Custom\nBreakBeforeInheritanceComma: false # Unknown to clang-format-4.0\nBreakBeforeTernaryOperators: false\nBreakConstructorInitializersBeforeComma: false\nBreakConstructorInitializers: BeforeComma # Unknown to clang-format-4.0\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: false\nColumnLimit: 0\nCommentPragmas: '^ IWYU pragma:'\nCompactNamespaces: false # Unknown to clang-format-4.0\nConstructorInitializerAllOnOneLineOrOnePerLine: false\nConstructorInitializerIndentWidth: 8\nContinuationIndentWidth: 8\nCpp11BracedListStyle: false\nDerivePointerAlignment: false\nDisableFormat: false\nExperimentalAutoDetectBinPacking: false\nFixNamespaceComments: false # Unknown to clang-format-4.0\n\n# Taken from:\n#   git grep -h '^#define [^[:space:]]*for_each[^[:space:]]*(' include/ \\\n#   | sed \"s,^#define \\([^[:space:]]*for_each[^[:space:]]*\\)(.*$,  - '\\1',\" \\\n#   | sort | uniq\nForEachMacros:\n  - 'for_each_pstree_item'\n  - 'for_each_bit'\n  - 'apei_estatus_for_each_section'\n  - 'ata_for_each_dev'\n  - 'ata_for_each_link'\n  - '__ata_qc_for_each'\n  - 'ata_qc_for_each'\n  - 'ata_qc_for_each_raw'\n  - 'ata_qc_for_each_with_internal'\n  - 'ax25_for_each'\n  - 'ax25_uid_for_each'\n  - '__bio_for_each_bvec'\n  - 'bio_for_each_bvec'\n  - 'bio_for_each_bvec_all'\n  - 'bio_for_each_integrity_vec'\n  - '__bio_for_each_segment'\n  - 'bio_for_each_segment'\n  - 'bio_for_each_segment_all'\n  - 'bio_list_for_each'\n  - 'bip_for_each_vec'\n  - 'bitmap_for_each_clear_region'\n  - 'bitmap_for_each_set_region'\n  - 'blkg_for_each_descendant_post'\n  - 'blkg_for_each_descendant_pre'\n  - 'blk_queue_for_each_rl'\n  - 'bond_for_each_slave'\n  - 'bond_for_each_slave_rcu'\n  - 'bpf_for_each_spilled_reg'\n  - 'btree_for_each_safe128'\n  - 'btree_for_each_safe32'\n  - 'btree_for_each_safe64'\n  - 'btree_for_each_safel'\n  - 'card_for_each_dev'\n  - 'cgroup_taskset_for_each'\n  - 'cgroup_taskset_for_each_leader'\n  - 'cpufreq_for_each_entry'\n  - 'cpufreq_for_each_entry_idx'\n  - 'cpufreq_for_each_valid_entry'\n  - 'cpufreq_for_each_valid_entry_idx'\n  - 'css_for_each_child'\n  - 'css_for_each_descendant_post'\n  - 'css_for_each_descendant_pre'\n  - 'device_for_each_child_node'\n  - 'displayid_iter_for_each'\n  - 'dma_fence_chain_for_each'\n  - 'do_for_each_ftrace_op'\n  - 'drm_atomic_crtc_for_each_plane'\n  - 'drm_atomic_crtc_state_for_each_plane'\n  - 'drm_atomic_crtc_state_for_each_plane_state'\n  - 'drm_atomic_for_each_plane_damage'\n  - 'drm_client_for_each_connector_iter'\n  - 'drm_client_for_each_modeset'\n  - 'drm_connector_for_each_possible_encoder'\n  - 'drm_for_each_bridge_in_chain'\n  - 'drm_for_each_connector_iter'\n  - 'drm_for_each_crtc'\n  - 'drm_for_each_crtc_reverse'\n  - 'drm_for_each_encoder'\n  - 'drm_for_each_encoder_mask'\n  - 'drm_for_each_fb'\n  - 'drm_for_each_legacy_plane'\n  - 'drm_for_each_plane'\n  - 'drm_for_each_plane_mask'\n  - 'drm_for_each_privobj'\n  - 'drm_mm_for_each_hole'\n  - 'drm_mm_for_each_node'\n  - 'drm_mm_for_each_node_in_range'\n  - 'drm_mm_for_each_node_safe'\n  - 'flow_action_for_each'\n  - 'for_each_acpi_dev_match'\n  - 'for_each_active_dev_scope'\n  - 'for_each_active_drhd_unit'\n  - 'for_each_active_iommu'\n  - 'for_each_aggr_pgid'\n  - 'for_each_available_child_of_node'\n  - 'for_each_bio'\n  - 'for_each_board_func_rsrc'\n  - 'for_each_bvec'\n  - 'for_each_card_auxs'\n  - 'for_each_card_auxs_safe'\n  - 'for_each_card_components'\n  - 'for_each_card_dapms'\n  - 'for_each_card_pre_auxs'\n  - 'for_each_card_prelinks'\n  - 'for_each_card_rtds'\n  - 'for_each_card_rtds_safe'\n  - 'for_each_card_widgets'\n  - 'for_each_card_widgets_safe'\n  - 'for_each_cgroup_storage_type'\n  - 'for_each_child_of_node'\n  - 'for_each_clear_bit'\n  - 'for_each_clear_bit_from'\n  - 'for_each_cmsghdr'\n  - 'for_each_compatible_node'\n  - 'for_each_component_dais'\n  - 'for_each_component_dais_safe'\n  - 'for_each_comp_order'\n  - 'for_each_console'\n  - 'for_each_cpu'\n  - 'for_each_cpu_and'\n  - 'for_each_cpu_not'\n  - 'for_each_cpu_wrap'\n  - 'for_each_dapm_widgets'\n  - 'for_each_dev_addr'\n  - 'for_each_dev_scope'\n  - 'for_each_dma_cap_mask'\n  - 'for_each_dpcm_be'\n  - 'for_each_dpcm_be_rollback'\n  - 'for_each_dpcm_be_safe'\n  - 'for_each_dpcm_fe'\n  - 'for_each_drhd_unit'\n  - 'for_each_dss_dev'\n  - 'for_each_dtpm_table'\n  - 'for_each_efi_memory_desc'\n  - 'for_each_efi_memory_desc_in_map'\n  - 'for_each_element'\n  - 'for_each_element_extid'\n  - 'for_each_element_id'\n  - 'for_each_endpoint_of_node'\n  - 'for_each_evictable_lru'\n  - 'for_each_fib6_node_rt_rcu'\n  - 'for_each_fib6_walker_rt'\n  - 'for_each_free_mem_pfn_range_in_zone'\n  - 'for_each_free_mem_pfn_range_in_zone_from'\n  - 'for_each_free_mem_range'\n  - 'for_each_free_mem_range_reverse'\n  - 'for_each_func_rsrc'\n  - 'for_each_hstate'\n  - 'for_each_if'\n  - 'for_each_iommu'\n  - 'for_each_ip_tunnel_rcu'\n  - 'for_each_irq_nr'\n  - 'for_each_link_codecs'\n  - 'for_each_link_cpus'\n  - 'for_each_link_platforms'\n  - 'for_each_lru'\n  - 'for_each_matching_node'\n  - 'for_each_matching_node_and_match'\n  - 'for_each_member'\n  - 'for_each_memcg_cache_index'\n  - 'for_each_mem_pfn_range'\n  - '__for_each_mem_range'\n  - 'for_each_mem_range'\n  - '__for_each_mem_range_rev'\n  - 'for_each_mem_range_rev'\n  - 'for_each_mem_region'\n  - 'for_each_migratetype_order'\n  - 'for_each_msi_entry'\n  - 'for_each_msi_entry_safe'\n  - 'for_each_msi_vector'\n  - 'for_each_net'\n  - 'for_each_net_continue_reverse'\n  - 'for_each_netdev'\n  - 'for_each_netdev_continue'\n  - 'for_each_netdev_continue_rcu'\n  - 'for_each_netdev_continue_reverse'\n  - 'for_each_netdev_feature'\n  - 'for_each_netdev_in_bond_rcu'\n  - 'for_each_netdev_rcu'\n  - 'for_each_netdev_reverse'\n  - 'for_each_netdev_safe'\n  - 'for_each_net_rcu'\n  - 'for_each_new_connector_in_state'\n  - 'for_each_new_crtc_in_state'\n  - 'for_each_new_mst_mgr_in_state'\n  - 'for_each_new_plane_in_state'\n  - 'for_each_new_private_obj_in_state'\n  - 'for_each_node'\n  - 'for_each_node_by_name'\n  - 'for_each_node_by_type'\n  - 'for_each_node_mask'\n  - 'for_each_node_state'\n  - 'for_each_node_with_cpus'\n  - 'for_each_node_with_property'\n  - 'for_each_nonreserved_multicast_dest_pgid'\n  - 'for_each_of_allnodes'\n  - 'for_each_of_allnodes_from'\n  - 'for_each_of_cpu_node'\n  - 'for_each_of_pci_range'\n  - 'for_each_old_connector_in_state'\n  - 'for_each_old_crtc_in_state'\n  - 'for_each_old_mst_mgr_in_state'\n  - 'for_each_oldnew_connector_in_state'\n  - 'for_each_oldnew_crtc_in_state'\n  - 'for_each_oldnew_mst_mgr_in_state'\n  - 'for_each_oldnew_plane_in_state'\n  - 'for_each_oldnew_plane_in_state_reverse'\n  - 'for_each_oldnew_private_obj_in_state'\n  - 'for_each_old_plane_in_state'\n  - 'for_each_old_private_obj_in_state'\n  - 'for_each_online_cpu'\n  - 'for_each_online_node'\n  - 'for_each_online_pgdat'\n  - 'for_each_pci_bridge'\n  - 'for_each_pci_dev'\n  - 'for_each_pci_msi_entry'\n  - 'for_each_pcm_streams'\n  - 'for_each_physmem_range'\n  - 'for_each_populated_zone'\n  - 'for_each_possible_cpu'\n  - 'for_each_present_cpu'\n  - 'for_each_prime_number'\n  - 'for_each_prime_number_from'\n  - 'for_each_process'\n  - 'for_each_process_thread'\n  - 'for_each_prop_codec_conf'\n  - 'for_each_prop_dai_codec'\n  - 'for_each_prop_dai_cpu'\n  - 'for_each_prop_dlc_codecs'\n  - 'for_each_prop_dlc_cpus'\n  - 'for_each_prop_dlc_platforms'\n  - 'for_each_property_of_node'\n  - 'for_each_registered_fb'\n  - 'for_each_requested_gpio'\n  - 'for_each_requested_gpio_in_range'\n  - 'for_each_reserved_mem_range'\n  - 'for_each_reserved_mem_region'\n  - 'for_each_rtd_codec_dais'\n  - 'for_each_rtd_components'\n  - 'for_each_rtd_cpu_dais'\n  - 'for_each_rtd_dais'\n  - 'for_each_set_bit'\n  - 'for_each_set_bit_from'\n  - 'for_each_set_clump8'\n  - 'for_each_sg'\n  - 'for_each_sg_dma_page'\n  - 'for_each_sg_page'\n  - 'for_each_sgtable_dma_page'\n  - 'for_each_sgtable_dma_sg'\n  - 'for_each_sgtable_page'\n  - 'for_each_sgtable_sg'\n  - 'for_each_sibling_event'\n  - 'for_each_subelement'\n  - 'for_each_subelement_extid'\n  - 'for_each_subelement_id'\n  - '__for_each_thread'\n  - 'for_each_thread'\n  - 'for_each_unicast_dest_pgid'\n  - 'for_each_vsi'\n  - 'for_each_wakeup_source'\n  - 'for_each_zone'\n  - 'for_each_zone_zonelist'\n  - 'for_each_zone_zonelist_nodemask'\n  - 'fwnode_for_each_available_child_node'\n  - 'fwnode_for_each_child_node'\n  - 'fwnode_graph_for_each_endpoint'\n  - 'gadget_for_each_ep'\n  - 'genradix_for_each'\n  - 'genradix_for_each_from'\n  - 'hash_for_each'\n  - 'hash_for_each_possible'\n  - 'hash_for_each_possible_rcu'\n  - 'hash_for_each_possible_rcu_notrace'\n  - 'hash_for_each_possible_safe'\n  - 'hash_for_each_rcu'\n  - 'hash_for_each_safe'\n  - 'hctx_for_each_ctx'\n  - 'hlist_bl_for_each_entry'\n  - 'hlist_bl_for_each_entry_rcu'\n  - 'hlist_bl_for_each_entry_safe'\n  - 'hlist_for_each'\n  - 'hlist_for_each_entry'\n  - 'hlist_for_each_entry_continue'\n  - 'hlist_for_each_entry_continue_rcu'\n  - 'hlist_for_each_entry_continue_rcu_bh'\n  - 'hlist_for_each_entry_from'\n  - 'hlist_for_each_entry_from_rcu'\n  - 'hlist_for_each_entry_rcu'\n  - 'hlist_for_each_entry_rcu_bh'\n  - 'hlist_for_each_entry_rcu_notrace'\n  - 'hlist_for_each_entry_safe'\n  - 'hlist_for_each_entry_srcu'\n  - '__hlist_for_each_rcu'\n  - 'hlist_for_each_safe'\n  - 'hlist_nulls_for_each_entry'\n  - 'hlist_nulls_for_each_entry_from'\n  - 'hlist_nulls_for_each_entry_rcu'\n  - 'hlist_nulls_for_each_entry_safe'\n  - 'i3c_bus_for_each_i2cdev'\n  - 'i3c_bus_for_each_i3cdev'\n  - 'ide_host_for_each_port'\n  - 'ide_port_for_each_dev'\n  - 'ide_port_for_each_present_dev'\n  - 'idr_for_each_entry'\n  - 'idr_for_each_entry_continue'\n  - 'idr_for_each_entry_continue_ul'\n  - 'idr_for_each_entry_ul'\n  - 'in_dev_for_each_ifa_rcu'\n  - 'in_dev_for_each_ifa_rtnl'\n  - 'inet_bind_bucket_for_each'\n  - 'inet_lhash2_for_each_icsk_rcu'\n  - 'key_for_each'\n  - 'key_for_each_safe'\n  - 'klp_for_each_func'\n  - 'klp_for_each_func_safe'\n  - 'klp_for_each_func_static'\n  - 'klp_for_each_object'\n  - 'klp_for_each_object_safe'\n  - 'klp_for_each_object_static'\n  - 'kunit_suite_for_each_test_case'\n  - 'kvm_for_each_memslot'\n  - 'kvm_for_each_vcpu'\n  - 'list_for_each'\n  - 'list_for_each_codec'\n  - 'list_for_each_codec_safe'\n  - 'list_for_each_continue'\n  - 'list_for_each_entry'\n  - 'list_for_each_entry_continue'\n  - 'list_for_each_entry_continue_rcu'\n  - 'list_for_each_entry_continue_reverse'\n  - 'list_for_each_entry_from'\n  - 'list_for_each_entry_from_rcu'\n  - 'list_for_each_entry_from_reverse'\n  - 'list_for_each_entry_lockless'\n  - 'list_for_each_entry_rcu'\n  - 'list_for_each_entry_reverse'\n  - 'list_for_each_entry_safe'\n  - 'list_for_each_entry_safe_continue'\n  - 'list_for_each_entry_safe_from'\n  - 'list_for_each_entry_safe_reverse'\n  - 'list_for_each_entry_srcu'\n  - 'list_for_each_prev'\n  - 'list_for_each_prev_safe'\n  - 'list_for_each_safe'\n  - 'llist_for_each'\n  - 'llist_for_each_entry'\n  - 'llist_for_each_entry_safe'\n  - 'llist_for_each_safe'\n  - 'mci_for_each_dimm'\n  - 'media_device_for_each_entity'\n  - 'media_device_for_each_intf'\n  - 'media_device_for_each_link'\n  - 'media_device_for_each_pad'\n  - 'nanddev_io_for_each_page'\n  - 'netdev_for_each_lower_dev'\n  - 'netdev_for_each_lower_private'\n  - 'netdev_for_each_lower_private_rcu'\n  - 'netdev_for_each_mc_addr'\n  - 'netdev_for_each_uc_addr'\n  - 'netdev_for_each_upper_dev_rcu'\n  - 'netdev_hw_addr_list_for_each'\n  - 'nft_rule_for_each_expr'\n  - 'nla_for_each_attr'\n  - 'nla_for_each_nested'\n  - 'nlmsg_for_each_attr'\n  - 'nlmsg_for_each_msg'\n  - 'nr_neigh_for_each'\n  - 'nr_neigh_for_each_safe'\n  - 'nr_node_for_each'\n  - 'nr_node_for_each_safe'\n  - 'of_for_each_phandle'\n  - 'of_property_for_each_string'\n  - 'of_property_for_each_u32'\n  - 'pci_bus_for_each_resource'\n  - 'pcl_for_each_chunk'\n  - 'pcl_for_each_segment'\n  - 'pcm_for_each_format'\n  - 'ping_portaddr_for_each_entry'\n  - 'plist_for_each'\n  - 'plist_for_each_continue'\n  - 'plist_for_each_entry'\n  - 'plist_for_each_entry_continue'\n  - 'plist_for_each_entry_safe'\n  - 'plist_for_each_safe'\n  - 'pnp_for_each_card'\n  - 'pnp_for_each_dev'\n  - 'protocol_for_each_card'\n  - 'protocol_for_each_dev'\n  - 'queue_for_each_hw_ctx'\n  - 'radix_tree_for_each_slot'\n  - 'radix_tree_for_each_tagged'\n  - 'rb_for_each'\n  - 'rbtree_postorder_for_each_entry_safe'\n  - 'rdma_for_each_block'\n  - 'rdma_for_each_port'\n  - 'rdma_umem_for_each_dma_block'\n  - 'resource_list_for_each_entry'\n  - 'resource_list_for_each_entry_safe'\n  - 'rhl_for_each_entry_rcu'\n  - 'rhl_for_each_rcu'\n  - 'rht_for_each'\n  - 'rht_for_each_entry'\n  - 'rht_for_each_entry_from'\n  - 'rht_for_each_entry_rcu'\n  - 'rht_for_each_entry_rcu_from'\n  - 'rht_for_each_entry_safe'\n  - 'rht_for_each_from'\n  - 'rht_for_each_rcu'\n  - 'rht_for_each_rcu_from'\n  - '__rq_for_each_bio'\n  - 'rq_for_each_bvec'\n  - 'rq_for_each_segment'\n  - 'scsi_for_each_prot_sg'\n  - 'scsi_for_each_sg'\n  - 'sctp_for_each_hentry'\n  - 'sctp_skb_for_each'\n  - 'shdma_for_each_chan'\n  - '__shost_for_each_device'\n  - 'shost_for_each_device'\n  - 'sk_for_each'\n  - 'sk_for_each_bound'\n  - 'sk_for_each_entry_offset_rcu'\n  - 'sk_for_each_from'\n  - 'sk_for_each_rcu'\n  - 'sk_for_each_safe'\n  - 'sk_nulls_for_each'\n  - 'sk_nulls_for_each_from'\n  - 'sk_nulls_for_each_rcu'\n  - 'snd_array_for_each'\n  - 'snd_pcm_group_for_each_entry'\n  - 'snd_soc_dapm_widget_for_each_path'\n  - 'snd_soc_dapm_widget_for_each_path_safe'\n  - 'snd_soc_dapm_widget_for_each_sink_path'\n  - 'snd_soc_dapm_widget_for_each_source_path'\n  - 'tb_property_for_each'\n  - 'tcf_exts_for_each_action'\n  - 'udp_portaddr_for_each_entry'\n  - 'udp_portaddr_for_each_entry_rcu'\n  - 'usb_hub_for_each_child'\n  - 'v4l2_device_for_each_subdev'\n  - 'v4l2_m2m_for_each_dst_buf'\n  - 'v4l2_m2m_for_each_dst_buf_safe'\n  - 'v4l2_m2m_for_each_src_buf'\n  - 'v4l2_m2m_for_each_src_buf_safe'\n  - 'virtio_device_for_each_vq'\n  - 'while_for_each_ftrace_op'\n  - 'xa_for_each'\n  - 'xa_for_each_marked'\n  - 'xa_for_each_range'\n  - 'xa_for_each_start'\n  - 'xas_for_each'\n  - 'xas_for_each_conflict'\n  - 'xas_for_each_marked'\n  - 'xbc_array_for_each_value'\n  - 'xbc_for_each_key_value'\n  - 'xbc_node_for_each_array_value'\n  - 'xbc_node_for_each_child'\n  - 'xbc_node_for_each_key_value'\n  - 'zorro_for_each_dev'\n\nIncludeBlocks: Preserve # Unknown to clang-format-5.0\nIncludeCategories:\n  - Regex: '.*'\n    Priority: 1\nIncludeIsMainRegex: '(Test)?$'\nIndentCaseLabels: false\nIndentGotoLabels: false\nIndentPPDirectives: None # Unknown to clang-format-5.0\nIndentWidth: 8\nIndentWrappedFunctionNames: false\nJavaScriptQuotes: Leave\nJavaScriptWrapImports: true\nKeepEmptyLinesAtTheStartOfBlocks: false\nMacroBlockBegin: ''\nMacroBlockEnd: ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBinPackProtocolList: Auto # Unknown to clang-format-5.0\nObjCBlockIndentWidth: 8\nObjCSpaceAfterProperty: true\nObjCSpaceBeforeProtocolList: true\n\n# Taken from git's rules\nPenaltyBreakAssignment: 10 # Unknown to clang-format-4.0\nPenaltyBreakBeforeFirstCallParameter: 30\nPenaltyBreakComment: 10\nPenaltyBreakFirstLessLess: 0\nPenaltyBreakString: 10\nPenaltyExcessCharacter: 100\nPenaltyReturnTypeOnItsOwnLine: 60\n\nPointerAlignment: Right\nReflowComments: false\nSortIncludes: false\nSortUsingDeclarations: false # Unknown to clang-format-4.0\nSpaceAfterCStyleCast: false\nSpaceAfterTemplateKeyword: true\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCtorInitializerColon: true # Unknown to clang-format-5.0\nSpaceBeforeInheritanceColon: true # Unknown to clang-format-5.0\nSpaceBeforeParens: ControlStatementsExceptForEachMacros\nSpaceBeforeRangeBasedForLoopColon: true # Unknown to clang-format-5.0\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles: false\nSpacesInContainerLiterals: false\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard: Cpp03\nTabWidth: 8\nUseTab: Always\n...\n"
        },
        {
          "name": ".codespellrc",
          "type": "blob",
          "size": 0.123046875,
          "content": "[codespell]\nskip = ./.git,./test/pki\nignore-words-list = creat,fpr,fle,ue,bord,parms,nd,te,testng,inh,wronly,renderd,bui,clen\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4560546875,
          "content": ".config\n*.o\n*.d\n*.a\n*.img\n*.bin\n*.elf\n*.out\n*.swp\n*.swo\n*.so\n.git-ignore\n*.patch\n*.pyc\ncscope*\ntags\nTAGS\nMakefile.local\ncompel/compel\ncompel/compel-host-bin\nimages/*.c\nimages/*.h\nimages/google/protobuf/*.c\nimages/google/protobuf/*.h\n.gitid\ncriu/criu\ncriu/unittest/unittest\ncriu/include/version.h\ncriu/pie/restorer-blob.h\ncriu/pie/parasite-blob.h\ncriu/protobuf-desc-gen.h\nlib/build/\nlib/c/criu.pc\ncompel/include/asm\ninclude/common/asm\ninclude/common/config.h\nbuild/**\n"
        },
        {
          "name": ".lgtm.yml",
          "type": "blob",
          "size": 0.732421875,
          "content": "extraction:\n  cpp:\n    prepare:\n      packages:\n      - \"protobuf-c-compiler\"\n      - \"libprotobuf-c-dev\"\n      - \"libprotobuf-dev\"\n      - \"build-essential\"\n      - \"libprotobuf-dev\"\n      - \"libprotobuf-c-dev\"\n      - \"protobuf-c-compiler\"\n      - \"protobuf-compiler\"\n      - \"python3-protobuf\"\n      - \"libnet-dev\"\n      - \"pkg-config\"\n      - \"libnl-3-dev\"\n      - \"libbsd0\"\n      - \"libbsd-dev\"\n      - \"iproute2\"\n      - \"libcap-dev\"\n      - \"libaio-dev\"\n      - \"libbsd-dev\"\n      - \"python3-yaml\"\n      - \"libnl-route-3-dev\"\n      - \"gnutls-dev\"\n    configure:\n      command:\n      - \"ls -laR images/google\"\n      - \"ln -s /usr/include/google/protobuf/descriptor.proto images/google/protobuf/descriptor.proto\"\n      - \"ls -laR images/google\"\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 0.611328125,
          "content": "Stanislav Kinsbursky <skinsbursky@parallels.com> <skinsbursky@openvz.org>\nPavel Emelyanov <xemul@parallels.com> <xemul@openvz.org>\nAndrei Vagin <avagin@gmail.com> <avagin@openvz.org>\nAndrei Vagin <avagin@gmail.com> <avagin@parallels.com>\nAndrei Vagin <avagin@gmail.com> <avagin@virtuozzo.com>\nAndrei Vagin <avagin@gmail.com> <avagin@odin.com>\nAndrei Vagin <avagin@gmail.com> <avagin@google.com>\nCyrill Gorcunov <gorcunov@openvz.org> <gorcunov@gmail.com>\nAlexander Mikhalitsyn <alexander@mihalicyn.com> <alexander.mikhalitsyn@virtuozzo.com>\nAlexander Mikhalitsyn <alexander@mihalicyn.com> <aleksandr.mikhalitsyn@canonical.com>\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.6728515625,
          "content": "language: c\nos: linux\ndist: bionic\nservices:\n  - docker\njobs:\n  include:\n    - os: linux\n      arch: ppc64le\n      env: TR_ARCH=local\n      dist: bionic\n    - os: linux\n      arch: ppc64le\n      env: TR_ARCH=local CLANG=1\n      dist: bionic\n    - os: linux\n      arch: s390x\n      env: TR_ARCH=local\n      dist: bionic\n    - os: linux\n      arch: arm64-graviton2\n      env: TR_ARCH=local RUN_TESTS=1\n      dist: focal\n      group: edge\n      virt: vm\n    - os: linux\n      arch: arm64-graviton2\n      env: TR_ARCH=local CLANG=1 RUN_TESTS=1\n      group: edge\n      virt: vm\n      dist: bionic\nscript:\n  - sudo make -C scripts/ci $TR_ARCH\nafter_success:\n  - make -C scripts/ci after_success\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 17.4111328125,
          "content": "## How to contribute to CRIU\n\nCRIU project is (almost) the never-ending story, because we have to always keep up with the\nLinux kernel supporting checkpoint and restore for all the features it provides. Thus we're\nlooking for contributors of all kinds -- feedback, bug reports, testing, coding, writing, etc.\nHere are some useful hints to get involved.\n\n* We have both -- [very simple](https://github.com/checkpoint-restore/criu/issues?q=is%3Aissue+is%3Aopen+label%3Aenhancement) and [more sophisticated](https://github.com/checkpoint-restore/criu/issues?q=is%3Aissue+is%3Aopen+label%3A%22new+feature%22) coding tasks;\n* CRIU does need [extensive testing](https://github.com/checkpoint-restore/criu/issues?q=is%3Aissue+is%3Aopen+label%3Atesting);\n* Documentation is always hard, we have [some information](https://criu.org/Category:Empty_articles) that is to be extracted from people's heads into wiki pages as well as [some texts](https://criu.org/Category:Editor_help_needed) that all need to be converted into useful articles;\n* Feedback is expected on the GitHub issues page and on the [mailing list](https://lists.openvz.org/mailman/listinfo/criu);\n* We accept GitHub pull requests and this is the preferred way to contribute to CRIU. If you prefer to send patches by email, you are welcome to send them to [CRIU development mailing list](https://lists.openvz.org/mailman/listinfo/criu).\nBelow we describe in more detail recommend practices for CRIU development.\n* Spread the word about CRIU in [social networks](http://criu.org/Contacts);\n* If you're giving a talk about CRIU -- let us know, we'll mention it on the [wiki main page](https://criu.org/News/events);\n\n### Setting up the development environment\n\nAlthough `criu` could be run as non-root (see [Security](https://criu.org/Security)), development is better to be done as root. For example, some tests require root. So, it would be a good idea to set up some recent Linux distro on a virtual machine.\n\n### Get the source code\n\nThe CRIU sources are tracked by Git. Official CRIU repo is at https://github.com/checkpoint-restore/criu.\n\nThe repository may contain multiple branches. Development happens in the **criu-dev** branch.\n\nTo clone CRIU repo and switch to the proper branch, run:\n\n```\n        git clone https://github.com/checkpoint-restore/criu criu\n        cd criu\n        git checkout criu-dev\n```\n\n### Compile\n\nFirst, you need to install compile-time dependencies. Check [Installation dependencies](https://criu.org/Installation#Dependencies) for more info.\n\nTo compile CRIU, run:\n\n```\n        make\n```\n\nThis should create the `./criu/criu` executable.\n\n## Edit the source code\n\nWhen you change the source code, please keep in mind the following code conventions:\n\n* code is written to be read, so the code readability is the most important thing you need to have in mind when preparing patches\n* we prefer tabs and indentations to be 8 characters width\n* we prefer line length of 80 characters or less, more is allowed if it helps with code readability\n* CRIU mostly follows [Linux kernel coding style](https://www.kernel.org/doc/Documentation/process/coding-style.rst), but we are less strict than the kernel community\n\nOther conventions can be learned from the source code itself. In short, make sure your new code looks similar to what is already there.\n\n## Automatic tools to fix coding-style\n\nImportant: These tools are there to advise you, but should not be considered as a \"source of truth\", as tools also make nasty mistakes from time to time which can completely break code readability.\n\nThe following command can be used to automatically run a code linter for Python files (ruff), Shell scripts (shellcheck),\ntext spelling (codespell), and a number of CRIU-specific checks (usage of print macros and EOL whitespace for C files).\n\n```\n         make lint\n```\n\nIn addition, we have adopted a [clang-format configuration file](https://www.kernel.org/doc/Documentation/process/clang-format.rst)\nbased on the kernel source tree. However, compliance with the clang-format autoformat rules is optional. If the automatic code formatting\nresults in decreased readability, we may choose to ignore these errors.\n\nRun the following command to check if your changes are compliant with the clang-format rules:\n\n```\n         make indent\n```\n\nThis command is built upon the `git-clang-format` tool and supports two options `BASE` and `OPTS`. The `BASE` option allows you to\nspecify a range of commits to check for coding style issues. By default, it is set to `HEAD~1`, so that only the last commit is checked.\nIf you are developing on top of the criu-dev branch and want to check all your commits for compliance with the clang-format rules, you\ncan use `BASE=origin/criu-dev`. The `OPTS` option can be used to pass additional options to `git-clang-format`. For example, if you want\nto check the last *N* commits for formatting errors, without applying the changes to the codebase you can use the following command.\n\n```\n         make indent OPTS=--diff BASE=HEAD~N\n```\n\nNote that for pull requests, the \"Run code linter\" workflow runs these checks for all commits. If a clang-format error is detected\nwe need to review the suggested changes and decide if they should be fixed before merging.\n\nHere are some bad examples of clang-format-ing:\n\n* if clang-format tries to force 120 characters and breaks readability - it is wrong:\n\n```\n@@ -58,8 +59,7 @@ static int register_membarriers(void)\n         }\n \n         if (!all_ok) {\n-                fail(\"can't register membarrier()s - tried %#x, kernel %#x\",\n-                     barriers_registered, barriers_supported);\n+                fail(\"can't register membarrier()s - tried %#x, kernel %#x\", barriers_registered, barriers_supported);\n                 return -1;\n         }\n```\n\n* if clang-format breaks your beautiful readability friendly alignment in structures, comments or defines - it is wrong:\n\n```\n--- a/test/zdtm/static/membarrier.c\n+++ b/test/zdtm/static/membarrier.c\n@@ -27,9 +27,10 @@ static const struct {\n        int register_cmd;\n        int execute_cmd;\n } membarrier_cmds[] = {\n-       { \"\",           MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED,           MEMBARRIER_CMD_PRIVATE_EXPEDITED },\n-       { \"_SYNC_CORE\", MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_SYNC_CORE, MEMBARRIER_CMD_PRIVATE_EXPEDITED_SYNC_CORE },\n-       { \"_RSEQ\",      MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_RSEQ,      MEMBARRIER_CMD_PRIVATE_EXPEDITED_RSEQ },\n+       { \"\", MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED, MEMBARRIER_CMD_PRIVATE_EXPEDITED },\n+       { \"_SYNC_CORE\", MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_SYNC_CORE,\n+         MEMBARRIER_CMD_PRIVATE_EXPEDITED_SYNC_CORE },\n+       { \"_RSEQ\", MEMBARRIER_CMD_REGISTER_PRIVATE_EXPEDITED_RSEQ, MEMBARRIER_CMD_PRIVATE_EXPEDITED_RSEQ },\n };\n```\n\n## Test your changes\n\nCRIU comes with an extensive test suite. To check whether your changes introduce any regressions, run\n\n```\n         make test\n```\n\nThe command runs [ZDTM Test Suite](https://criu.org/ZDTM_Test_Suite). Check for any error messages produced by it.\n\nIn case you'd rather have someone else run the tests, you can use travis-ci for your\nown GitHub fork of CRIU. It will check the compilation for various supported platforms,\nas well as run most of the tests from the suite. See https://travis-ci.org/checkpoint-restore/criu\nfor more details.\n\n## Describe your changes\n\nDescribe your problem.  Whether your change is a one-line bug fix or\n5000 lines of a new feature, there must be an underlying problem that\nmotivated you to do this work.  Convince the reviewer that there is a\nproblem worth fixing and that it makes sense for them to read past the\nfirst paragraph.\n\nOnce the problem is established, describe what you are actually doing\nabout it in technical detail. It's important to describe the change\nin plain English for the reviewer to verify that the code is behaving\nas you intend it to.\n\nSolve only one problem per commit. If your description starts to get\nlong, that's a sign that you probably need to split up your commit.\nSee [Separate your changes](#separate-your-changes).\n\nDescribe your changes in imperative mood, e.g. \"make xyzzy do frotz\"\ninstead of \"[This commit] makes xyzzy do frotz\" or \"[I] changed xyzzy\nto do frotz\", as if you are giving orders to the codebase to change\nits behaviour.\n\nIf your change fixes a bug in a specific commit, e.g. you found an issue using\n`git bisect`, please use the `Fixes:` tag with the abbreviation of\nthe SHA-1 ID, and the one line summary. For example:\n\n```\n\tFixes: 9433b7b9db3e (\"make: use cflags/ldflags for config.h detection mechanism\")\n```\n\nThe following `git config` settings can be used to add a pretty format for\noutputting the above style in the `git log` or `git show` commands:\n\n```\n\t[pretty]\n\t\tfixes = Fixes: %h (\\\"%s\\\")\n```\n\nIf your change address an issue listed in GitHub, please use `Fixes:` tag with the number of the issue. For instance:\n\n```\n\tFixes: #339\n```\n\nThe `Fixes:` tags should be put at the end of the detailed description.\n\nPlease add a prefix to your commit subject line describing the part of the\nproject your change is related to. This can be either the name of the file or\ndirectory you changed, or just a general word. If your patch is touching\nmultiple components you may separate prefixes with \"/\"-es. Here are some good\nexamples of subject lines from git log:\n\n```\ncriu-ns: Convert to python3 style print() syntax\ncompel: Calculate sh_addr if not provided by linker\nstyle: Enforce kernel style -Wstrict-prototypes\nrpc/libcriu: Add lsm-profile option\n```\n\nYou may refer to [How to Write a Git Commit\nMessage](https://chris.beams.io/posts/git-commit/) article for\nrecommendations for good commit message.\n\n## Separate your changes\n\nSeparate each **logical change** into a separate commit.\n\nFor example, if your changes include both bug fixes and performance\nenhancements for a single driver, separate those changes into two\nor more commits.  If your changes include an API update, and a new\ndriver which uses that new API, separate those into two commits.\n\nOn the other hand, if you make a single change to numerous files,\ngroup those changes into a single commit.  Thus a single logical change\nis contained within a single commit.\n\nThe point to remember is that each commit should make an easily understood\nchange that can be verified by reviewers.  Each commit should be justifiable\non its own merits.\n\nWhen dividing your change into a series of commits, take special care to\nensure that CRIU builds and runs properly after each commit in the\nseries.  Developers using `git bisect` to track down a problem can end up\nsplitting your patch series at any point; they will not thank you if you\nintroduce bugs in the middle.\n\n## Sign your work\n\nTo improve tracking of who did what, we ask you to sign off the commits in\nyour fork of CRIU or the patches that are to be emailed.\n\nThe sign-off is a simple line at the end of the explanation for the\npatch, which certifies that you wrote it or otherwise have the right to\npass it on as an open-source patch.  The rules are pretty simple: if you\ncan certify the below:\n\n### Developer's Certificate of Origin 1.1\n    By making a contribution to this project, I certify that:\n\n    (a) The contribution was created in whole or in part by me and I\n        have the right to submit it under the open source license\n        indicated in the file; or\n\n    (b) The contribution is based upon previous work that, to the best\n        of my knowledge, is covered under an appropriate open source\n        license and I have the right under that license to submit that\n        work with modifications, whether created in whole or in part\n        by me, under the same open source license (unless I am\n        permitted to submit under a different license), as indicated\n        in the file; or\n\n    (c) The contribution was provided directly to me by some other\n        person who certified (a), (b) or (c) and I have not modified\n        it.\n\n    (d) I understand and agree that this project and the contribution\n        are public and that a record of the contribution (including all\n        personal information I submit with it, including my sign-off) is\n        maintained indefinitely and may be redistributed consistent with\n        this project or the open source license(s) involved.\n\nthen you just add a line saying\n\n```\n        Signed-off-by: Random J Developer <random at developer.example.org>\n```\n\nusing your real name (please, no pseudonyms or anonymous contributions if\nit possible).\n\nHint: you can use `git commit -s` to add Signed-off-by line to your\ncommit message. To append such line to a commit you already made, use\n`git commit --amend -s`.\n\n```\n From: Random J Developer <random at developer.example.org>\n Subject: [PATCH] component: Short patch description\n\n Long patch description (could be skipped if patch\n is trivial enough)\n\n Signed-off-by: Random J Developer <random at developer.example.org>\n ---\n Patch body here\n```\n\n## Submit your work upstream\n\nWe accept GitHub pull requests and this is the preferred way to contribute to CRIU.\nFor that you should push your work to your fork of CRIU at [GitHub](https://github.com) and create a [pull request](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests)\n\n### Pull request guidelines\n\nPull request comment should contain description of the problem your changes\nsolve and a brief outline of the changes included in the pull request.\n\nPlease avoid pushing fixup commits to an existent pull request. Each commit\nshould be self contained and there should not be fixup commits in a patch\nseries. Pull requests that contain one commit which breaks something\nand another commit which fixes it, will be rejected.\n\nPlease merge the fixup commits into the commits that has introduced the\nproblem before creating a pull request.\n\nIt may happen that the reviewers were not completely happy with your\nchanges and requested changes to your patches. After you updated your\nchanges please close the old pull request and create a new one that\ncontains the following:\n\n* Description of the problem your changes solve and a brief outline of the\n  changes\n* Link to the previous version of the pull request\n* Brief description of the changes between old and new versions of the pull\n  request. If there were more than one previous pull request, all the\n  revisions should be listed. For example:\n\n```\n\tv3: rebase on the current criu-dev\n\tv2: add commit to foo() and update bar() coding style\n```\n\nIf there are only minor updates to the commits in a pull request, it is\npossible to force-push them into an existing pull request. This only applies\nto small changes and should be used with care. If you update an existing\npull request, remember to add the description of the changes from the\nprevious version.\n\n### Mailing list submission\n\nHistorically, CRIU worked with mailing lists and patches so if you still prefer this way continue reading till the end of this section.\n\n### Make a patch\n\nTo create a patch, run\n\n```\n    git format-patch --signoff origin/criu-dev\n```\n\nYou might need to read GIT documentation on how to prepare patches\nfor mail submission. Take a look at http://book.git-scm.com/ and/or\nhttp://git-scm.com/documentation for details. It should not be hard\nat all.\n\nWe recommend to post patches using `git send-email`\n\n```\n  git send-email --cover-letter --no-chain-reply-to --annotate \\\n                 --confirm=always --to=criu@openvz.org criu-dev\n```\n\nNote that the `git send-email` subcommand may not be in\nthe main git package and using it may require installation of a\nseparate package, for example the \"git-email\" package in Fedora and\nDebian.\n\nIf this is your first time using git send-email, you might need to\nconfigure it to point it to your SMTP server with something like:\n\n```\n    git config --global sendemail.smtpServer stmp.example.net\n```\n\nIf you get tired of typing `--to=criu@openvz.org` all the time,\nyou can configure that to be automatically handled as well:\n\n```\n    git config sendemail.to criu@openvz.org\n```\n\nIf a developer is sending another version of the patch (e.g. to address\nreview comments), they are advised to note differences to previous versions\nafter the `---` line in the patch so that it helps reviewers but\ndoesn't become part of git history. Moreover, such patch needs to be prefixed\ncorrectly with `--subject-prefix=PATCHv2` appended to\n`git send-email` (substitute `v2` with the correct\nversion if needed though).\n\n### Mail patches\n\nThe patches should be sent to CRIU development mailing list, `criu AT openvz.org`. Note that you need to be subscribed first in order to post. The list web interface is available at https://openvz.org/mailman/listinfo/criu; you can also use standard mailman aliases to work with it.\n\nPlease make sure the email client you're using doesn't screw your patch (line wrapping and so on).\n\n>  **Note:** When sending a patch set that consists of more than one patch, please, push your changes in your local repo and provide the URL of the branch in the cover-letter\n\n### Wait for response\n\nBe patient. Most CRIU developers are pretty busy people so if\nthere is no immediate response on your patch — don't be surprised,\nsometimes a patch may fly around a week before it gets reviewed.\n\n## Continuous integration\n\nWiki article: [Continuous integration](https://criu.org/Continuous_integration)\n\nCRIU tests are run for each series sent to the mailing list. If you get a message from our patchwork that patches failed to pass the tests, you have to investigate what is wrong.\n\nWe also recommend you to [enable Travis CI for your repo](https://criu.org/Continuous_integration#Enable_Travis_CI_for_your_repo) to check patches in your git branch, before sending them to the mailing list.\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 44.345703125,
          "content": "This software is licensed under the GNU GENERAL PUBLIC LICENCE Version\n2. Except that any software in the lib/ directory is for the creation of a\nlinkable library to the tools and is licensed under the GNU LESSER GENERAL\nPUBLIC LICENCE Version 2.1.  Contributing Authors agree that their code is\nsubmitted under the licence appropriate for its location within the source\ntree (GPL except for LGPL in lib/) and agree that any future patches, provided\nthey are accepted into the project, may change the licence of their code from\nGPL to LGPL by moving pieces of it into lib/ or LGPL to GPL by moving pieces\nof it out of lib/\n\nNote that the only valid version of the GPL is THIS particular version\nof the license (ie v2, not v2.2 or v3.x or whatever), unless explicitly\notherwise stated.\n----------------------------------------\n\n\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n                       51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Library General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\f\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\f\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\f\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\f\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\f\n\t    How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Library General\nPublic License instead of this License.\n\n---------------------------------------\n\n                  GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\f\n                  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\f\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\f\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\f\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\f\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n                            NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\f\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n"
        },
        {
          "name": "CREDITS",
          "type": "blob",
          "size": 0.3046875,
          "content": "The following people provided invaluable help to CRIU project\n(in alphabetical order)\n-------------------------------------------------------------------\n\nAndrew Morton\nDavid Miller\nEric Dumazet\nEric W. Biederman\nH. Peter Anvin\nKees Cook\nKOSAKI Motohiro\nLi Yu\nLinus Torvalds\nOleg Nesterov\nSerge Hallyn\nTejun Heo\n"
        },
        {
          "name": "Documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "INSTALL.md",
          "type": "blob",
          "size": 1.2060546875,
          "content": "## Installing CRIU from source code\n\nOnce CRIU is built one can easily setup the complete CRIU package\n(which includes executable itself, CRIT tool, libraries, manual\nand etc) simply typing\n\n    make install\n\nthis command accepts the following variables:\n\n * **DESTDIR**, to specify global root where all components will be placed under (empty by default);\n * **PREFIX**, to specify additional prefix for path of every component installed (`/usr/local` by default);\n * **BINDIR**, to specify where to put CRIT tool (`$(PREFIX)/bin` by default);\n * **SBINDIR**, to specify where to put CRIU executable (`$(PREFIX)/sbin` by default);\n * **MANDIR**, to specify directory for manual pages (`$(PREFIX)/share/man` by default);\n * **LIBDIR**, to specify directory where to put libraries (guess the correct path  by default).\n\nThus one can type\n\n    make DESTDIR=/some/new/place install\n\nand get everything installed under `/some/new/place`.\n\n## Uninstalling CRIU\n\nTo clean up previously installed CRIU instance one can type\n\n    make uninstall\n\nand everything should be removed. Note though that if some variable (**DESTDIR**, **BINDIR**\nand such) has been used during installation procedure, the same *must* be passed with\nuninstall action.\n"
        },
        {
          "name": "MAINTAINERS",
          "type": "blob",
          "size": 0.3134765625,
          "content": "Pavel Emelyanov <ovzxemul@gmail.com> (chief)\nAndrey Vagin <avagin@gmail.com>\nMike Rapoport <rppt@kernel.org>\nDmitry Safonov <0x7f454c46@gmail.com>\nAdrian Reber <areber@redhat.com>\nPavel Tikhomirov <ptikhomirov@virtuozzo.com>\nRadostin Stoyanov <rstoyanov@fedoraproject.org>\nAlexander Mikhalitsyn <alexander@mihalicyn.com>\n"
        },
        {
          "name": "MAINTAINERS_GUIDE.md",
          "type": "blob",
          "size": 6.2568359375,
          "content": "## Introduction\n\nDear maintainer. Thank you for investing the time and energy to help\nmake CRIU as useful as possible. Maintaining a project is difficult,\nsometimes unrewarding work. Sure, you will contribute cool features\nto the project, but most of your time will be spent reviewing patches,\ncleaning things up, documenting, answering questions, justifying design\ndecisions - while everyone else will just have fun! But remember -- the\nquality of the maintainers work is what distinguishes the good projects\nfrom the great. So please be proud of your work, even the unglamorous\nparts, and encourage a culture of appreciation and respect for *every*\naspect of improving the project -- not just the hot new features.\n\nBeing a maintainer is a time consuming commitment and should not be\ntaken lightly. This document is a manual for maintainers old and new.\nIt explains what is expected of maintainers, how they should work, and\nwhat tools are available to them.\n\nThis is a living document - if you see something out of date or missing,\nspeak up!\n\n## What are a maintainer's responsibility?\n\nPart of a healthy project is to have active maintainers to support the\ncommunity in contributions and perform tasks to keep the project running.\nIt is every maintainer's responsibility to:\n\n  * Keep the community a friendly place\n  * Deliver prompt feedback and decisions on pull requests and mailing\n    list threads\n  * Encourage other members to help each other, especially in cases the\n    maintainer is overloaded or feels the lack of needed expertise\n  * Make sure the changes made respects the philosophy, design and\n    roadmap of the project\n\n## How are decisions made?\n\nCRIU is an open-source project with an open design philosophy. This\nmeans that the repository is the source of truth for EVERY aspect of the\nproject. *If it's part of the project, it's in the repo. It's in the\nrepo, it's part of the project.*\n\nAll decisions affecting CRIU, big and small, follow the same 3 steps:\n\n  * Submit a change. Anyone can do this\n\n  * Discuss it. Anyone can and is encouraged to do this\n\n  * Accept or decline it. Only maintainers do this\n\n*I'm a maintainer, should I make pull requests / send patches too?*\n\nYes. Nobody should ever push to the repository directly. All changes\nshould be made through submitting (and accepting) the change.\n\n### Two-steps decision making ###\n\nSince CRIU is extremely complex piece of software we try double hard\nnot to make mistakes, that would be hard to fix in the future. In order\nto facilitate this, the \"final\" decision is made in two stages:\n\n  * We definitely want to try something out\n\n  * We think that the attempt was successful\n\nRespectively, new features get accepted first into the *criu-dev* branch and\nafter they have been validated they are merged into the *master* branch. Yet,\nurgent bug fixes may land directly in the master branch. If a change in\nthe criu-dev branch is considered to be bad (whatever it means), then it\ncan be reverted without propagation to the master branch. Reverting from\nthe master branch is expected not to happen at all, but if such an\nextraordinary case occurs, the impact of this step, especially the question\nof backward compatibility, should be considered in the most careful manner.\n\n## Who decides what?\n\nAll decisions can be expressed as changes to the repository (either in the\nform of pull requests, or patches sent to the mailing list), and maintainers\nmake decisions by merging or rejecting them. Review and approval or\ndisagreement can be done by anyone and is denoted by adding a respective\ncomment in the pull request. However, merging the change into either branch\nonly happens after approvals from maintainers.\n\nIn order for a patch to be merged into the criu-dev branch at least two\nmaintainers should accept it. In order for a patch to be merged into the\nmaster branch the majority of maintainers should decide that (then prepare\na pull request, submit it, etc.).\n\nOverall the maintainer system works because of mutual respect across the\nmaintainers of the project. The maintainers trust one another to make\ndecisions in the best interests of the project. Sometimes maintainers\ncan disagree and this is part of a healthy project to represent the point\nof views of various people. In the case where maintainers cannot find\nagreement on a specific change the role of a Chief Maintainer comes into\nplay.\n\n### Chief maintainer\n\nThe chief maintainer for the project is responsible for overall architecture\nof the project to maintain conceptual integrity. Large decisions and\narchitecture changes should be reviewed by the chief maintainer.\n\nAlso the chief maintainer has the veto power on any change submitted\nto any branch. Naturally, a change in the criu-dev branch can be reverted\nafter a chief maintainer veto, a change in the master branch must be\ncarefully reviewed by the chief maintainer and vetoed in advance.\n\n### How are maintainers added (and removed)?\n\nThe best maintainers have a vested interest in the project. Maintainers\nare first and foremost contributors that have shown they are committed to\nthe long term success of the project. Contributors wanting to become\nmaintainers are expected to be deeply involved in contributing code,\npatches review, and paying needed attention to the issues in the project.\nJust contributing does not make you a maintainer, it is about building trust\nwith the current maintainers of the project and being a person that they can\nrely on and trust to make decisions in the best interest of the project.\n\nWhen a contributor wants to become a maintainer or nominate someone as a\nmaintainer, one can submit a \"nomination\", which technically is the\nrespective modification to the `MAINTAINERS` file. When a maintainer feels\nthey is unable to perform the required duties, or someone else wants to draw\nthe community attention to this fact, one can submit a \"(self-)removing\"\nchange.\n\nThe final vote to add or to remove a maintainer is to be approved by the\nmajority of current maintainers (with the chief maintainer having veto power\non that too).\n\nOne might have noticed, that the chief maintainer (re-)assignment is not\nregulated by this document. That's true :) However, this can be done. If\nthe community decides that the chief maintainer needs to be changed the\nrespective \"decision making rules\" are to be prepared, submitted and\naccepted into this file first.\n\nGood luck!\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 13.51171875,
          "content": "__nmk_dir=$(CURDIR)/scripts/nmk/scripts/\nexport __nmk_dir\n\n#\n# No need to try to remake our Makefiles\nMakefile: ;\nMakefile.%: ;\nscripts/%.mak: ;\n$(__nmk_dir)%.mk: ;\n\n#\n# Import the build engine\ninclude $(__nmk_dir)include.mk\ninclude $(__nmk_dir)macro.mk\n\nifeq ($(origin HOSTCFLAGS), undefined)\n        HOSTCFLAGS := $(CFLAGS) $(USERCFLAGS)\nendif\n\n#\n# Supported Architectures\nifneq ($(filter-out x86 arm aarch64 ppc64 s390 mips loongarch64 riscv64,$(ARCH)),)\n        $(error \"The architecture $(ARCH) isn't supported\")\nendif\n\n# The PowerPC 64 bits architecture could be big or little endian.\n# They are handled in the same way.\nifeq ($(SUBARCH),ppc64)\n        error := $(error ppc64 big endian is not yet supported)\nendif\n\n#\n# Architecture specific options.\nifeq ($(ARCH),arm)\n        ARMV\t\t:= $(shell echo $(SUBARCH) | sed -nr 's/armv([[:digit:]]).*/\\1/p; t; i7')\n\n        ifeq ($(ARMV),6)\n                ARCHCFLAGS += -march=armv6\n        endif\n\n        ifeq ($(ARMV),7)\n                ARCHCFLAGS += -march=armv7-a+fp\n        endif\n\n        ifeq ($(ARMV),8)\n                # Running 'setarch linux32 uname -m' returns armv8l on travis aarch64.\n                # This tells CRIU to handle armv8l just as armv7hf. Right now this is\n                # only used for compile testing. No further verification of armv8l exists.\n                ARCHCFLAGS += -march=armv7-a\n                ARMV := 7\n        endif\n\n        DEFINES\t\t:= -DCONFIG_ARMV$(ARMV) -DCONFIG_VDSO_32\n\n        PROTOUFIX\t:= y\n\t# For simplicity - compile code in Arm mode without interwork.\n\t# We could choose Thumb mode as default instead - but a dirty\n\t# experiment shows that with 90Kb PIEs Thumb code doesn't save\n\t# even one page. So, let's stick so far to Arm mode as it's more\n\t# universal around all different Arm variations, until someone\n\t# will find any use for Thumb mode. -dima\n        CFLAGS_PIE\t:= -marm\nendif\n\nifeq ($(ARCH),aarch64)\n        DEFINES\t\t:= -DCONFIG_AARCH64\nendif\n\nifeq ($(ARCH),ppc64)\n        LDARCH\t\t:= powerpc:common64\n        DEFINES\t\t:= -DCONFIG_PPC64 -D__SANE_USERSPACE_TYPES__\nendif\n\nifeq ($(ARCH),x86)\n        LDARCH\t\t:= i386:x86-64\n        DEFINES\t\t:= -DCONFIG_X86_64\nendif\n\nifeq ($(ARCH),mips)\n        DEFINES\t\t:= -DCONFIG_MIPS\nendif\n\nifeq ($(ARCH),loongarch64)\n        DEFINES\t\t:= -DCONFIG_LOONGARCH64\nendif\n\nifeq ($(ARCH),riscv64)\n        DEFINES\t\t:= -DCONFIG_RISCV64\nendif\n\n#\n# CFLAGS_PIE:\n#\n# Ensure with -fno-optimize-sibling-calls that we don't create GOT\n# (Global Offset Table) relocations with gcc compilers that don't have\n# commit \"S/390: Fix 64 bit sibcall\".\nifeq ($(ARCH),s390)\n        ARCH\t\t:= s390\n        DEFINES\t\t:= -DCONFIG_S390\n        CFLAGS_PIE\t:= -fno-optimize-sibling-calls\nendif\n\nCFLAGS_PIE\t\t+= -DCR_NOGLIBC\nexport CFLAGS_PIE\n\nLDARCH ?= $(ARCH)\nexport LDARCH\nexport PROTOUFIX DEFINES\n\n#\n# Independent options for all tools.\nDEFINES\t\t\t+= -D_FILE_OFFSET_BITS=64\nDEFINES\t\t\t+= -D_LARGEFILE64_SOURCE\nDEFINES\t\t\t+= -D_GNU_SOURCE\n\nWARNINGS\t\t:= -Wall -Wformat-security -Wdeclaration-after-statement -Wstrict-prototypes\n\n# -Wdangling-pointer results in false warning when we add a list element to\n# local list head variable. It is false positive because before leaving the\n# function we always check that local list head variable is empty, thus\n# insuring that pointer to it is not dangling anywhere, but gcc can't\n# understand it.\n# Note: There is similar problem with kernel list, where this warning is also\n# disabled: https://github.com/torvalds/linux/commit/49beadbd47c2\nWARNINGS\t\t+= -Wno-dangling-pointer -Wno-unknown-warning-option\n\nCFLAGS-GCOV\t\t:= --coverage -fno-exceptions -fno-inline -fprofile-update=atomic\nexport CFLAGS-GCOV\n\nifeq ($(ARCH),mips)\nWARNINGS\t\t:= -rdynamic\nendif\n\nifeq ($(ARCH),loongarch64)\nWARNINGS\t\t+= -Wno-implicit-function-declaration\nendif\n\nifneq ($(GCOV),)\n        LDFLAGS         += -lgcov\n        CFLAGS          += $(CFLAGS-GCOV)\nendif\n\nifeq ($(ASAN),1)\n\tCFLAGS-ASAN\t:= -fsanitize=address\n\texport\t\tCFLAGS-ASAN\n\tCFLAGS\t\t+= $(CFLAGS-ASAN)\nendif\n\nifneq ($(WERROR),0)\n        WARNINGS\t+= -Werror\nendif\n\nifeq ($(DEBUG),1)\n        DEFINES\t\t+= -DCR_DEBUG\n        CFLAGS\t\t+= -O0 -ggdb3\nelse\n        CFLAGS\t\t+= -O2 -g\nendif\n\nifeq ($(GMON),1)\n        CFLAGS\t\t+= -pg\n        GMONLDOPT\t+= -pg\nexport GMON GMONLDOPT\nendif\n\nAFLAGS\t\t\t+= -D__ASSEMBLY__\nCFLAGS\t\t\t+= $(USERCFLAGS) $(ARCHCFLAGS) $(WARNINGS) $(DEFINES) -iquote include/\nHOSTCFLAGS\t\t+= $(WARNINGS) $(DEFINES) -iquote include/\nexport AFLAGS CFLAGS USERCLFAGS HOSTCFLAGS\n\n# Default target\nall: criu lib crit cuda_plugin\n.PHONY: all\n\n#\n# Version headers.\ninclude Makefile.versions\n\nVERSION_HEADER\t\t:= criu/include/version.h\nGITID_FILE\t\t:= .gitid\nGITID\t\t:= $(shell if [ -d \".git\" ]; then git describe --always; fi)\n\n# Git repository wasn't inited in CRIU folder\nifeq ($(GITID),)\n        GITID := 0\nelse\n        GITID_FILE_VALUE := $(shell if [ -f '$(GITID_FILE)' ]; then if [ `cat '$(GITID_FILE)'` = $(GITID) ]; then echo y; fi; fi)\n        ifneq ($(GITID_FILE_VALUE),y)\n                .PHONY: $(GITID_FILE)\n        endif\nendif\n\n$(GITID_FILE):\n\t$(call msg-gen, $@)\n\t$(Q) echo \"$(GITID)\" > $(GITID_FILE)\n\n$(VERSION_HEADER): Makefile.versions $(GITID_FILE)\n\t$(call msg-gen, $@)\n\t$(Q) echo \"/* Autogenerated, do not edit */\"\t\t\t \t > $@\n\t$(Q) echo \"#ifndef __CR_VERSION_H__\"\t\t\t\t\t>> $@\n\t$(Q) echo \"#define __CR_VERSION_H__\"\t\t\t\t\t>> $@\n\t$(Q) echo \"#define CRIU_VERSION \\\"$(CRIU_VERSION)\\\"\"\t\t\t>> $@\n\t$(Q) echo \"#define CRIU_VERSION_MAJOR \" $(CRIU_VERSION_MAJOR)\t\t>> $@\n\t$(Q) echo \"#define CRIU_VERSION_MINOR \" $(CRIU_VERSION_MINOR)\t\t>> $@\nifneq ($(CRIU_VERSION_SUBLEVEL),)\n\t$(Q) echo \"#define CRIU_VERSION_SUBLEVEL \" $(CRIU_VERSION_SUBLEVEL)\t>> $@\nendif\nifneq ($(CRIU_VERSION_EXTRA),)\n\t$(Q) echo \"#define CRIU_VERSION_EXTRA \" $(CRIU_VERSION_EXTRA)\t\t>> $@\nendif\n\t$(Q) echo \"#define CRIU_GITID \\\"$(GITID)\\\"\"\t\t\t\t>> $@\n\t$(Q) echo \"#endif /* __CR_VERSION_H__ */\"\t\t\t\t>> $@\n\ncriu-deps\t+= $(VERSION_HEADER)\n\n#\n# Setup proper link for asm headers in common code.\ninclude/common/asm: include/common/arch/$(ARCH)/asm\n\t$(call msg-gen, $@)\n\t$(Q) ln -s ./arch/$(ARCH)/asm $@\n\ncriu-deps\t+= include/common/asm\n\n#\n# Configure variables.\nexport CONFIG_HEADER := include/common/config.h\nifeq ($(filter tags etags cscope clean lint indent fetch-clang-format help mrproper,$(MAKECMDGOALS)),)\ninclude Makefile.config\nelse\n# To clean all files, enable make/build options here\nexport CONFIG_COMPAT := y\nexport CONFIG_GNUTLS := y\nexport CONFIG_HAS_LIBBPF := y\nendif\n\n#\n# Protobuf images first, they are not depending\n# on anything else.\n$(eval $(call gen-built-in,images))\ncriu-deps\t+= images/built-in.o\n\n#\n# Compel get used by CRIU, build it earlier\ninclude Makefile.compel\n\n#\n# Next the socket CR library\n#\nSOCCR_A := soccr/libsoccr.a\nsoccr/Makefile: ;\nsoccr/%: $(CONFIG_HEADER) .FORCE\n\t$(Q) $(MAKE) $(build)=soccr $@\nsoccr/built-in.o: $(CONFIG_HEADER) .FORCE\n\t$(Q) $(MAKE) $(build)=soccr all\n$(SOCCR_A): |soccr/built-in.o\ncriu-deps\t+= $(SOCCR_A)\n\n#\n# CRIU building done in own directory\n# with slightly different rules so we\n# can't use nmk engine directly (we\n# build syscalls library and such).\n#\n# But note that we're already included\n# the nmk so we can reuse it there.\ncriu/Makefile: ;\ncriu/Makefile.packages: ;\ncriu/Makefile.crtools: ;\ncriu/%: $(criu-deps) .FORCE\n\t$(Q) $(MAKE) $(build)=criu $@\ncriu: $(criu-deps)\n\t$(Q) $(MAKE) $(build)=criu all\n.PHONY: criu\n\nunittest: $(criu-deps)\n\t$(Q) $(MAKE) $(build)=criu unittest\n.PHONY: unittest\n\n\n#\n# Libraries next once criu is ready\n# (we might generate headers and such\n# when building criu itself).\nlib/Makefile: ;\nlib/%: criu .FORCE\n\t$(Q) $(MAKE) $(build)=lib $@\nlib: criu\n\t$(Q) $(MAKE) $(build)=lib all\n.PHONY: lib\n\nclean mrproper:\n\t$(Q) $(MAKE) $(build)=images $@\n\t$(Q) $(MAKE) $(build)=criu $@\n\t$(Q) $(MAKE) $(build)=soccr $@\n\t$(Q) $(MAKE) $(build)=lib $@\n\t$(Q) $(MAKE) $(build)=crit $@\n\t$(Q) $(MAKE) $(build)=compel $@\n\t$(Q) $(MAKE) $(build)=compel/plugins $@\n.PHONY: clean mrproper\n\nclean-amdgpu_plugin:\n\t$(Q) $(MAKE) -C plugins/amdgpu clean\n.PHONY: clean-amdgpu_plugin\n\nclean-cuda_plugin:\n\t$(Q) $(MAKE) -C plugins/cuda clean\n.PHONY: clean-cuda_plugin\n\nclean-top:\n\t$(Q) $(MAKE) -C Documentation clean\n\t$(Q) $(MAKE) $(build)=test/compel clean\n\t$(Q) $(RM) .gitid\n.PHONY: clean-top\n\nclean: clean-top clean-amdgpu_plugin clean-cuda_plugin\n\nmrproper-top: clean-top clean-amdgpu_plugin clean-cuda_plugin\n\t$(Q) $(RM) $(CONFIG_HEADER)\n\t$(Q) $(RM) $(VERSION_HEADER)\n\t$(Q) $(RM) $(COMPEL_VERSION_HEADER)\n\t$(Q) $(RM) include/common/asm\n\t$(Q) $(RM) compel/include/asm\n\t$(Q) $(RM) cscope.*\n\t$(Q) $(RM) tags TAGS\n.PHONY: mrproper-top\n\nmrproper: mrproper-top\n\n#\n# Non-CRIU stuff.\n#\n\ndocs:\n\t$(Q) $(MAKE) -s -C Documentation all\n.PHONY: docs\n\nzdtm: all\n\t$(Q) $(MAKE) -C test/zdtm all\n.PHONY: zdtm\n\ntest: zdtm\n\t$(Q) $(MAKE) -C test\n.PHONY: test\n\namdgpu_plugin: criu\n\t$(Q) $(MAKE) -C plugins/amdgpu all\n.PHONY: amdgpu_plugin\n\ncuda_plugin: criu\n\t$(Q) $(MAKE) -C plugins/cuda all\n.PHONY: cuda_plugin\n\ncrit: lib\n\t$(Q) $(MAKE) -C crit\n.PHONY: crit\n\n#\n# Generating tar requires tag matched CRIU_VERSION.\n# If not found then simply use GIT's describe with\n# \"v\" prefix stripped.\nhead-name := $(shell git tag -l v$(CRIU_VERSION))\nifeq ($(head-name),)\n        head-name := $(shell git describe 2>/dev/null)\nendif\n# If no git tag could describe current commit,\n# use pre-defined CRIU_VERSION with GITID (if any).\nifeq ($(head-name),)\n        ifneq ($(GITID),)\n                head-name := $(CRIU_VERSION)-$(GITID)\n        else\n                head-name := $(CRIU_VERSION)\n        endif\nendif\ntar-name := $(shell echo $(head-name) | sed -e 's/^v//g')\ncriu-$(tar-name).tar.bz2:\n\tgit archive --format tar --prefix 'criu-$(tar-name)/' $(head-name) | bzip2 > $@\ndist tar: criu-$(tar-name).tar.bz2 ;\n.PHONY: dist tar\n\nTAGS_FILES_REGEXP := . -name '*.[hcS]' ! -path './.*' \\( ! -path './test/*' -o -path './test/zdtm/lib/*' \\)\ntags:\n\t$(call msg-gen, $@)\n\t$(Q) $(RM) tags\n\t$(Q) $(FIND) $(TAGS_FILES_REGEXP) -print | xargs $(CTAGS) -a\n.PHONY: tags\n\netags:\n\t$(call msg-gen, $@)\n\t$(Q) $(RM) TAGS\n\t$(Q) $(FIND) $(TAGS_FILES_REGEXP) -print | xargs $(ETAGS) -a\n.PHONY: etags\n\n\ncscope:\n\t$(call msg-gen, $@)\n\t$(Q) $(FIND) $(TAGS_FILES_REGEXP) ! -type l -print > cscope.files\n\t$(Q) $(CSCOPE) -bkqu\n.PHONY: cscope\n\ngcov:\n\t$(E) \" GCOV\"\n\t$(Q) test -d gcov || mkdir gcov && \\\n\tgeninfo --output-filename gcov/criu.info --no-recursion criu/ && \\\n\tcd gcov && \\\n\tgenhtml --rc lcov_branch_coverage=1 --output-directory html criu.info\n\t@echo \"Code coverage report is in `pwd`/gcov/html/ directory.\"\n.PHONY: gcov\n\ndocker-build:\n\t$(MAKE) -C scripts/build/ x86_64\n.PHONY: docker-build\n\ndocker-test:\n\tdocker run --rm --privileged -v /lib/modules:/lib/modules --network=host --cgroupns=host criu-x86_64 \\\n\t\t./test/zdtm.py run -a --keep-going --ignore-taint\n.PHONY: docker-test\n\nhelp:\n\t@echo '    Targets:'\n\t@echo '      all             - Build all [*] targets'\n\t@echo '    * criu            - Build criu'\n\t@echo '    * crit            - Build crit'\n\t@echo '      zdtm            - Build zdtm test-suite'\n\t@echo '      docs            - Build documentation'\n\t@echo '      install         - Install CRIU (see INSTALL.md)'\n\t@echo '      uninstall       - Uninstall CRIU'\n\t@echo '      dist            - Create a source tarball'\n\t@echo '      clean           - Clean most, but leave enough to navigate'\n\t@echo '      mrproper        - Delete all compiled/generated files'\n\t@echo '      tags            - Generate tags file (ctags)'\n\t@echo '      etags           - Generate TAGS file (etags)'\n\t@echo '      cscope          - Generate cscope database'\n\t@echo '      test            - Run zdtm test-suite'\n\t@echo '      gcov            - Make code coverage report'\n\t@echo '      unittest        - Run unit tests'\n\t@echo '      lint            - Run code linters'\n\t@echo '      indent          - Indent C code'\n\t@echo '      amdgpu_plugin   - Make AMD GPU plugin'\n\t@echo '      cuda_plugin     - Make NVIDIA CUDA plugin'\n.PHONY: help\n\nruff:\n\t@ruff --version\n\truff check ${RUFF_FLAGS} --config=scripts/ruff.toml \\\n\t\ttest/zdtm.py \\\n\t\ttest/inhfd/*.py \\\n\t\ttest/others/rpc/config_file.py \\\n\t\tlib/pycriu/images/pb2dict.py \\\n\t\tlib/pycriu/images/images.py \\\n\t\tscripts/criu-ns \\\n\t\ttest/others/criu-ns/run.py \\\n\t\tcrit/*.py \\\n\t\tcrit/crit/*.py \\\n\t\tscripts/uninstall_module.py \\\n\t\tcoredump/ coredump/coredump \\\n\t\tscripts/github-indent-warnings.py\n\nshellcheck:\n\tshellcheck --version\n\tshellcheck scripts/*.sh\n\tshellcheck scripts/ci/*.sh scripts/ci/apt-install\n\tshellcheck -x test/others/crit/*.sh\n\tshellcheck -x test/others/libcriu/*.sh\n\tshellcheck -x test/others/crit/*.sh test/others/criu-coredump/*.sh\n\tshellcheck -x test/others/config-file/*.sh\n\tshellcheck -x test/others/action-script/*.sh\n\ncodespell:\n\tcodespell -S tags\n\nlint: ruff shellcheck codespell\n\t# Do not append \\n to pr_perror, pr_pwarn or fail\n\t! git --no-pager grep -E '^\\s*\\<(pr_perror|pr_pwarn|fail)\\>.*\\\\n\"'\n\t# Do not use %m with pr_* or fail\n\t! git --no-pager grep -E '^\\s*\\<(pr_(err|perror|warn|pwarn|debug|info|msg)|fail)\\>.*%m'\n\t# Do not use errno with pr_perror, pr_pwarn or fail\n\t! git --no-pager grep -E '^\\s*\\<(pr_perror|pr_pwarn|fail)\\>\\(\".*\".*errno'\n\t# End pr_(err|warn|msg|info|debug) with \\n\n\t! git --no-pager grep -En '^\\s*\\<pr_(err|warn|msg|info|debug)\\>.*);$$' | grep -v '\\\\n'\n\t# No EOL whitespace for C files\n\t! git --no-pager grep -E '\\s+$$' \\*.c \\*.h\n.PHONY: lint ruff shellcheck codespell\n\ncodecov: SHELL := $(shell which bash)\ncodecov:\n\tcurl -Os https://uploader.codecov.io/latest/linux/codecov\n\tchmod +x codecov\n\t./codecov\n.PHONY: codecov\n\nfetch-clang-format: .FORCE\n\t$(E) \".clang-format\"\n\t$(Q) scripts/fetch-clang-format.sh\n\nBASE ?= \"HEAD~1\"\nOPTS ?= \"--quiet\"\nindent:\n\tgit clang-format --style file --extensions c,h $(OPTS) $(BASE)\n.PHONY: indent\n\ninclude Makefile.install\n\n.DEFAULT_GOAL := all\n\n# Disable implicit rules in _this_ Makefile.\n.SUFFIXES:\n\n#\n# Optional local include.\n-include Makefile.local\n"
        },
        {
          "name": "Makefile.compel",
          "type": "blob",
          "size": 2.783203125,
          "content": "COMPEL_BIN\t\t:= ./compel/compel-host\nexport COMPEL_BIN\n\nCOMPEL_VERSION_HEADER\t:= compel/include/version.h\n\n$(COMPEL_VERSION_HEADER): Makefile.versions\n\t$(call msg-gen, $(COMPEL_VERSION_HEADER))\n\t$(Q) echo \"/* Autogenerated, do not edit */\"\t \t\t\t \t > $(COMPEL_VERSION_HEADER)\n\t$(Q) echo \"#ifndef COMPEL_SO_VERSION_H__\"\t\t\t\t\t>> $(COMPEL_VERSION_HEADER)\n\t$(Q) echo \"#define COMPEL_SO_VERSION_H__\"\t\t\t\t\t>> $(COMPEL_VERSION_HEADER)\n\t$(Q) echo \"#define COMPEL_SO_VERSION \\\"$(COMPEL_SO_VERSION)\\\"\"\t\t\t>> $(COMPEL_VERSION_HEADER)\n\t$(Q) echo \"#define COMPEL_SO_VERSION_MAJOR \" $(COMPEL_SO_VERSION_MAJOR)\t\t>> $(COMPEL_VERSION_HEADER)\n\t$(Q) echo \"#define COMPEL_SO_VERSION_MINOR \" $(COMPEL_SO_VERSION_MINOR)\t\t>> $(COMPEL_VERSION_HEADER)\n\t$(Q) echo \"#define COMPEL_SO_VERSION_SUBLEVEL \" $(COMPEL_SO_VERSION_SUBLEVEL)\t>> $(COMPEL_VERSION_HEADER)\n\t$(Q) echo \"#endif /* COMPEL_SO_VERSION_H__ */\"\t\t\t\t\t>> $(COMPEL_VERSION_HEADER)\n\ncompel/include/asm:\n\t$(call msg-gen, $@)\n\t$(Q) ln -s ../arch/$(ARCH)/src/lib/include $@\n\ncompel-deps\t\t+= compel/include/asm\ncompel-deps\t\t+= $(COMPEL_VERSION_HEADER)\ncompel-deps\t\t+= $(CONFIG_HEADER)\ncompel-deps\t\t+= include/common/asm\ncompel-plugins\t\t+= compel/plugins/std.lib.a compel/plugins/fds.lib.a\n\nLIBCOMPEL_SO\t\t:= libcompel.so\nLIBCOMPEL_A\t\t:= libcompel.a\nexport LIBCOMPEL_SO LIBCOMPEL_A\n\n#\n# Compel itself.\ncompel/Makefile: ;\ncompel/%: $(compel-deps) $(compel-plugins) .FORCE\n\t$(Q) $(MAKE) $(build)=compel $@\n\ncriu-deps\t\t+= compel/compel-host-bin\n\n#\n# Make sure the host program is ready after the\n# library and plugins are built.\ncompel/compel-host-bin: | compel/$(LIBCOMPEL_A) $(compel-plugins)\n$(COMPEL_BIN): compel/compel-host-bin\n\n#\n# Plugins\ncompel/plugins/Makefile: ;\ncompel/plugins/%: $(compel-deps) .FORCE\n\t$(Q) $(MAKE) $(build)=compel/plugins $@\n\n#\n# GNU make 4.x supports targets matching via wide\n# match targeting, where GNU make 3.x series (used on\n# Travis) is not, so we have to write them here explicitly.\ncompel/plugins/std.lib.a: $(compel-deps) .FORCE\n\t$(Q) $(MAKE) $(build)=compel/plugins $@\n\ncompel/plugins/shmem.lib.a: $(compel-deps) compel/plugins/std.lib.a .FORCE\n\t$(Q) $(MAKE) $(build)=compel/plugins $@\n\ncompel/plugins/fds.lib.a: $(compel-deps) compel/plugins/std.lib.a .FORCE\n\t$(Q) $(MAKE) $(build)=compel/plugins $@\n\ncompel/compel: compel/built-in.o compel/$(LIBCOMPEL_A) | $(compel-deps)\n\t$(call msg-link, $@)\n\t$(Q) $(CC) $(CFLAGS) $^ $(WRAPFLAGS) $(LDFLAGS) -rdynamic -o $@\n\n#\n# And compel library.\nLIBCOMPEL_SO_CFLAGS\t+= $(CFLAGS) -rdynamic -Wl,-soname,$(LIBCOMPEL_SO).$(COMPEL_SO_VERSION_MAJOR)\ncompel/$(LIBCOMPEL_SO): compel/$(LIBCOMPEL_A)\n\t$(call msg-link, $@)\n\t$(Q) $(CC) -shared $(LIBCOMPEL_SO_CFLAGS) -o $@ -Wl,--whole-archive $^ -Wl,--no-whole-archive $(LDFLAGS)\n\ncompel-install-targets\t+= compel/$(LIBCOMPEL_SO)\ncompel-install-targets\t+= compel/compel\ncompel-install-targets\t+= $(compel-plugins)\n"
        },
        {
          "name": "Makefile.config",
          "type": "blob",
          "size": 3.693359375,
          "content": "include $(__nmk_dir)utils.mk\ninclude $(__nmk_dir)msg.mk\ninclude scripts/feature-tests.mak\n\n# This is a kludge for $(info ...) to not eat spaces.\nS :=\n\nifeq ($(call try-cc,$(FEATURE_TEST_LIBBSD_DEV),-lbsd),true)\n        LIBS_FEATURES\t+= -lbsd\n        FEATURE_DEFINES\t+= -DCONFIG_HAS_LIBBSD\nelse\n        $(info Note: Building without setproctitle() and strlcpy() support.)\n        $(info $S      Install libbsd-devel (RPM) / libbsd-dev (DEB) to fix.)\nendif\n\nifeq ($(call pkg-config-check,libselinux),y)\n        LIBS_FEATURES\t+= -lselinux\n        FEATURE_DEFINES\t+= -DCONFIG_HAS_SELINUX\nendif\n\nifeq ($(call pkg-config-check,libbpf),y)\n        LIBS_FEATURES\t+= -lbpf\n        FEATURE_DEFINES\t+= -DCONFIG_HAS_LIBBPF\n        export CONFIG_HAS_LIBBPF := y\nendif\n\nifeq ($(call pkg-config-check,libdrm),y)\n        export CONFIG_AMDGPU := y\n        $(info Note: Building with amdgpu_plugin.)\nelse\n        $(info Note: Building without amdgpu_plugin.)\n        $(info $S      Install libdrm-devel (RPM) or libdrm-dev (DEB) to fix.)\nendif\n\nifeq ($(NO_GNUTLS)x$(call pkg-config-check,gnutls),xy)\n        LIBS_FEATURES\t+= -lgnutls\n        export CONFIG_GNUTLS := y\n        FEATURE_DEFINES\t+= -DCONFIG_GNUTLS\nelse\n        $(info Note: Building without GnuTLS support.)\n        $(info $S      Install gnutls-devel (RPM) or gnutls-dev (DEB) to fix.)\nendif\n\nifeq ($(call pkg-config-check,libnftables),y)\n        LIB_NFTABLES\t:= $(shell $(PKG_CONFIG) --libs libnftables)\n        ifeq ($(call try-cc,$(FEATURE_TEST_NFTABLES_LIB_API_0),$(LIB_NFTABLES)),true)\n                LIBS_FEATURES\t+= $(LIB_NFTABLES)\n                FEATURE_DEFINES\t+= -DCONFIG_HAS_NFTABLES_LIB_API_0\n        else ifeq ($(call try-cc,$(FEATURE_TEST_NFTABLES_LIB_API_1),$(LIB_NFTABLES)),true)\n                LIBS_FEATURES\t+= $(LIB_NFTABLES)\n                FEATURE_DEFINES\t+= -DCONFIG_HAS_NFTABLES_LIB_API_1\n        else\n                $(info Warn: Building without nftables support (incompatible API version).)\n        endif\nelse\n        $(info Warn: Building without nftables support.)\n        $(info $S      Install nftables-devel (RPM) or libnftables-dev (DEB) to fix.)\nendif\n\nexport LIBS += $(LIBS_FEATURES)\n\nifneq ($(PLUGINDIR),)\n                FEATURE_DEFINES\t+= -DCR_PLUGIN_DEFAULT=\"\\\"$(PLUGINDIR)\\\"\"\nendif\n\nCONFIG_FILE = .config\n\n$(CONFIG_FILE):\n\ttouch $(CONFIG_FILE)\n\nifeq ($(ARCH),x86)\n# CONFIG_COMPAT is only for x86 now, no need for compile-test other archs\nifeq ($(call try-asm,$(FEATURE_TEST_X86_COMPAT)),true)\n        export CONFIG_COMPAT := y\n        FEATURE_DEFINES\t+= -DCONFIG_COMPAT\nelse\n        $(info Note: Building without ia32 C/R, missing ia32 support in gcc.)\n        $(info $S      It may be related to missing gcc-multilib in your)\n        $(info $S      distribution, or you may have Debian with buggy toolchain.)\n        $(info $S      See https://github.com/checkpoint-restore/criu/issues/315.)\nendif\nendif\n\nexport DEFINES += $(FEATURE_DEFINES)\nexport CFLAGS += $(FEATURE_DEFINES)\n\nFEATURES_LIST\t:= TCP_REPAIR STRLCPY STRLCAT PTRACE_PEEKSIGINFO \\\n\tSETPROCTITLE_INIT TCP_REPAIR_WINDOW MEMFD_CREATE \\\n\tOPENAT2 NO_LIBC_RSEQ_DEFS\n\n# $1 - config name\ndefine gen-feature-test\nifeq ($$(call try-cc,$$(FEATURE_TEST_$(1)),$$(LIBS_FEATURES),$$(DEFINES)),true)\n\t$(Q) echo '#define CONFIG_HAS_$(1)' >> $$@\nelse\n\t$(Q) echo '// CONFIG_HAS_$(1) is not set' >> $$@\nendif\nendef\n\ndefine config-header-rule\n$(CONFIG_HEADER): scripts/feature-tests.mak $(CONFIG_FILE)\n\t$(call msg-gen, $$@)\n\t$(Q) echo '#ifndef __CR_CONFIG_H__'\t\t\t\t> $$@\n\t$(Q) echo '#define __CR_CONFIG_H__'\t\t\t\t>> $$@\n\t$(Q) echo ''\t\t\t\t\t\t\t>> $$@\n$(call map,gen-feature-test,$(FEATURES_LIST))\n\t$(Q) cat $(CONFIG_FILE) | sed -n -e '/^[^#]/s/^/#define CONFIG_/p' >> $$@\n\t$(Q) echo '#endif /* __CR_CONFIG_H__ */'\t\t\t>> $$@\nendef\n\n$(eval $(config-header-rule))\n"
        },
        {
          "name": "Makefile.install",
          "type": "blob",
          "size": 2.6240234375,
          "content": "#\n# Installation paths.\nPREFIX\t\t?= /usr/local\nBINDIR\t\t?= $(PREFIX)/bin\nSBINDIR\t\t?= $(PREFIX)/sbin\nMANDIR\t\t?= $(PREFIX)/share/man\nINCLUDEDIR\t?= $(PREFIX)/include\nLIBEXECDIR\t?= $(PREFIX)/libexec\nRUNDIR\t\t?= /run\nPLUGINDIR\t?= $(PREFIX)/lib/criu\n\n#\n# For recent Debian/Ubuntu with multiarch support.\nDEB_HOST_MULTIARCH := $(shell dpkg-architecture -qDEB_HOST_MULTIARCH 2>/dev/null)\nifneq \"$(DEB_HOST_MULTIARCH)\" \"\"\n        LIBDIR\t\t\t?= $(PREFIX)/lib/$(DEB_HOST_MULTIARCH)\nelse\n        #\n        # For most other systems\n        ifeq \"$(shell uname -m)\" \"x86_64\"\n                LIBDIR\t\t?= $(PREFIX)/lib64\n        endif\nendif\n\n#\n# LIBDIR falls back to the standard path.\nLIBDIR ?= $(PREFIX)/lib\n\nexport PREFIX BINDIR SBINDIR MANDIR RUNDIR\nexport LIBDIR INCLUDEDIR LIBEXECDIR PLUGINDIR\n\n# Detect externally managed Python environment (PEP 668).\nPYTHON_EXTERNALLY_MANAGED := $(shell $(PYTHON) -c 'import os, sysconfig; print(int(os.path.isfile(os.path.join(sysconfig.get_path(\"stdlib\"), \"EXTERNALLY-MANAGED\"))))')\nPIP_BREAK_SYSTEM_PACKAGES ?= 0\n\n# If Python environment is externally managed and PIP_BREAK_SYSTEM_PACKAGES is not set, skip pip install.\nSKIP_PIP_INSTALL := 0\nifeq ($(PYTHON_EXTERNALLY_MANAGED),1)\nifeq ($(PIP_BREAK_SYSTEM_PACKAGES),0)\n\nSKIP_PIP_INSTALL := 1\n$(info Warn: Externally managed python environment)\n$(info Consider using PIP_BREAK_SYSTEM_PACKAGES=1)\n\nendif\nendif\n\n# Default flags for pip install:\n# --upgrade: Upgrade crit/pycriu packages\n# --ignore-installed: Ignore existing packages and reinstall them\nPIPFLAGS ?= --upgrade --ignore-installed\n\nexport SKIP_PIP_INSTALL PIPFLAGS\n\ninstall-man:\n\t$(Q) $(MAKE) -C Documentation install\n.PHONY: install-man\n\ninstall-lib: lib\n\t$(Q) $(MAKE) $(build)=lib install\n.PHONY: install-lib\n\ninstall-crit: lib\n\t$(Q) $(MAKE) $(build)=crit install\n.PHONY: install-crit\n\ninstall-criu: criu\n\t$(Q) $(MAKE) $(build)=criu install\n.PHONY: install-criu\n\ninstall-amdgpu_plugin: amdgpu_plugin\n\t$(Q) $(MAKE) -C plugins/amdgpu install\n.PHONY: install-amdgpu_plugin\n\ninstall-cuda_plugin: cuda_plugin\n\t$(Q) $(MAKE) -C plugins/cuda install\n.PHONY: install-cuda_plugin\n\ninstall-compel: $(compel-install-targets)\n\t$(Q) $(MAKE) $(build)=compel install\n\t$(Q) $(MAKE) $(build)=compel/plugins install\n.PHONY: install-compel\n\ninstall: install-man install-lib install-crit install-criu install-compel install-amdgpu_plugin install-cuda_plugin ;\n.PHONY: install\n\nuninstall:\n\t$(Q) $(MAKE) -C Documentation $@\n\t$(Q) $(MAKE) $(build)=lib $@\n\t$(Q) $(MAKE) $(build)=crit $@\n\t$(Q) $(MAKE) $(build)=criu $@\n\t$(Q) $(MAKE) $(build)=compel $@\n\t$(Q) $(MAKE) $(build)=compel/plugins $@\n\t$(Q) $(MAKE) -C plugins/amdgpu $@\n\t$(Q) $(MAKE) -C plugins/cuda $@\n.PHONY: uninstall\n"
        },
        {
          "name": "Makefile.versions",
          "type": "blob",
          "size": 0.875,
          "content": "#\n# CRIU version.\nCRIU_VERSION_MAJOR\t:= 4\nCRIU_VERSION_MINOR\t:= 0\nCRIU_VERSION_SUBLEVEL\t:=\nCRIU_VERSION_EXTRA\t:=\nCRIU_VERSION_NAME\t:= CRIUDA\nCRIU_VERSION\t\t:= $(CRIU_VERSION_MAJOR)$(if $(CRIU_VERSION_MINOR),.$(CRIU_VERSION_MINOR))$(if $(CRIU_VERSION_SUBLEVEL),.$(CRIU_VERSION_SUBLEVEL))$(if $(CRIU_VERSION_EXTRA),.$(CRIU_VERSION_EXTRA))\n\nexport CRIU_VERSION_MAJOR CRIU_VERSION_MINOR CRIU_VERSION_SUBLEVEL\nexport CRIU_VERSION_EXTRA CRIU_VERSION_NAME CRIU_VERSION\n\n#\n# C library for CRIU.\nCRIU_SO_VERSION_MAJOR\t:= 2\nCRIU_SO_VERSION_MINOR\t:= 0\n\nexport CRIU_SO_VERSION_MAJOR CRIU_SO_VERSION_MINOR\n\n#\n# SOCCR library.\nSOCCR_SO_VERSION_MAJOR\t:= 1\nSOCCR_SO_VERSION_MINOR\t:= 0\n\nexport SOCCR_SO_VERSION_MAJOR SOCCR_SO_VERSION_MINOR\n\nCOMPEL_SO_VERSION_MAJOR\t:= 1\nCOMPEL_SO_VERSION_MINOR\t:= 0\nCOMPEL_SO_VERSION_SUBLEVEL := 0\n\nexport COMPEL_SO_VERSION_MAJOR COMPEL_SO_VERSION_MINOR COMPEL_SO_VERSION_SUBLEVEL\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.40625,
          "content": "[![X86_64 GCC Test](https://github.com/checkpoint-restore/criu/workflows/X86_64%20GCC%20Test/badge.svg)](\n    https://github.com/checkpoint-restore/criu/actions/workflows/x86-64-gcc-test.yml)\n[![Docker Test](https://github.com/checkpoint-restore/criu/actions/workflows/docker-test.yml/badge.svg)](\n    https://github.com/checkpoint-restore/criu/actions/workflows/docker-test.yml)\n[![Podman Test](https://github.com/checkpoint-restore/criu/actions/workflows/podman-test.yml/badge.svg)](\n    https://github.com/checkpoint-restore/criu/actions/workflows/podman-test.yml)\n[![CircleCI](https://circleci.com/gh/checkpoint-restore/criu.svg?style=svg)](\n    https://circleci.com/gh/checkpoint-restore/criu)\n\n<p align=\"center\"><img src=\"https://criu.org/w/images/1/1c/CRIU.svg\" width=\"256px\"/></p>\n\n## CRIU -- A project to implement checkpoint/restore functionality for Linux\n\nCRIU (stands for Checkpoint and Restore in Userspace) is a utility to checkpoint/restore Linux tasks.\n\nUsing this tool, you can freeze a running application (or part of it) and checkpoint\nit to a hard drive as a collection of files. You can then use the files to restore and run the\napplication from the point it was frozen at. The distinctive feature of the CRIU\nproject is that it is mainly implemented in user space. There are some more projects\ndoing C/R for Linux, and so far CRIU [appears to be](https://criu.org/Comparison_to_other_CR_projects)\nthe most feature-rich and up-to-date with the kernel.\n\nCRIU project is (almost) the never-ending story, because we have to always keep up with the\nLinux kernel supporting checkpoint and restore for all the features it provides. Thus we're\nlooking for contributors of all kinds -- feedback, bug reports, testing, coding, writing, etc.\nPlease refer to [CONTRIBUTING.md](CONTRIBUTING.md) if you would like to get involved.\n\nThe project [started](https://criu.org/History) as the way to do live migration for OpenVZ\nLinux containers, but later grew to more sophisticated and flexible tool. It is currently\nused by (integrated into) OpenVZ, LXC/LXD, Docker, and other software, project gets tremendous\nhelp from the community, and its packages are included into many Linux distributions.\n\nThe project home is at http://criu.org. This wiki contains all the knowledge base for CRIU we have.\nPages worth starting with are:\n- [Installation instructions](http://criu.org/Installation)\n- [A simple example of usage](http://criu.org/Simple_loop)\n- [Examples of more advanced usage](https://criu.org/Category:HOWTO)\n- Troubleshooting can be hard, some help can be found [here](https://criu.org/When_C/R_fails), [here](https://criu.org/What_cannot_be_checkpointed) and [here](https://criu.org/index.php?title=FAQ)\n\n### Checkpoint and restore of simple loop process\n<p align=\"center\"><a href=\"https://asciinema.org/a/232445\"><img src=\"https://asciinema.org/a/232445.png\" width=\"572px\" height=\"412px\"/></a></p>\n\n## Advanced features\n\nAs main usage for CRIU is live migration, there's a library for it called P.Haul. Also the\nproject exposes two cool core features as standalone libraries. These are libcompel for parasite code\ninjection and libsoccr for TCP connections checkpoint-restore.\n\n### Live migration\n\nTrue [live migration](https://criu.org/Live_migration) using CRIU is possible, but doing\nall the steps by hands might be complicated. The [phaul sub-project](https://criu.org/P.Haul)\nprovides a Go library that encapsulates most of the complexity. This library and the Go bindings\nfor CRIU are stored in the [go-criu](https://github.com/checkpoint-restore/go-criu) repository.\n\n\n### Parasite code injection\n\nIn order to get state of the running process CRIU needs to make this process execute\nsome code, that would fetch the required information. To make this happen without\nkilling the application itself, CRIU uses the [parasite code injection](https://criu.org/Parasite_code)\ntechnique, which is also available as a standalone library called [libcompel](https://criu.org/Compel).\n\n### TCP sockets checkpoint-restore\n\nOne of the CRIU features is the ability to save and restore state of a TCP socket\nwithout breaking the connection. This functionality is considered to be useful by\nitself, and we have it available as the [libsoccr library](https://criu.org/Libsoccr).\n\n## Licence\n\nThe project is licensed under GPLv2 (though files sitting in the lib/ directory are LGPLv2.1).\n\nAll files in the images/ directory are licensed under the Expat license (so-called MIT).\nSee the images/LICENSE file.\n"
        },
        {
          "name": "compel",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "coredump",
          "type": "tree",
          "content": null
        },
        {
          "name": "crit",
          "type": "tree",
          "content": null
        },
        {
          "name": "criu",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "soccr",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}