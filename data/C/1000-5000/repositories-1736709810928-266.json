{
  "metadata": {
    "timestamp": 1736709810928,
    "page": 266,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pgbouncer/pgbouncer",
      "stars": 3102,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".cirrus.yml",
          "type": "blob",
          "size": 8.931640625,
          "content": "env:\n  CIRRUS_CLONE_SUBMODULES: true\n  DEBIAN_FRONTEND: noninteractive\n  LANG: C\n  PGVERSION: 16\n\ntask:\n  name: Linux (Debian/Ubuntu)\n  matrix:\n    # - container:\n    #     image: ubuntu:20.04\n    - container:\n        image: ubuntu:22.04\n      env:\n        configure_args: '--with-cares --with-pam'\n    - container:\n        image: ubuntu:22.04\n      env:\n        configure_args: '--without-openssl'\n    # - container:\n    #     image: ubuntu:20.04\n    #   env:\n    #     configure_args: '--disable-evdns'\n    # - container:\n    #     image: ubuntu:20.04\n    #   env:\n    #     CC: clang\n    # - container:\n    #     image: ubuntu:20.04\n    #   env:\n    #     CFLAGS: -fno-sanitize-recover=all -fsanitize=undefined -fsanitize-address-use-after-scope -fno-sanitize=shift\n    - container:\n        image: ubuntu:22.04\n      env:\n        ENABLE_VALGRIND: yes\n        CFLAGS: -O0 -g\n        PGVERSION: 17\n    # - container:\n    #     image: ubuntu:20.04\n    #   env:\n    #     ENABLE_VALGRIND: yes\n    #     CFLAGS: -O0 -g\n    #     PGVERSION: 9.6\n    # - container:\n    #     image: ubuntu:20.04\n    #   env:\n    #     use_scan_build: yes\n    # - arm_container:\n    #     image: ubuntu:20.04\n    # - container:\n    #     image: ubuntu:22.04\n    # - container:\n    #     image: debian:stable\n    #   env:\n    #     PGVERSION: 13\n    # - container:\n    #     image: debian:oldstable\n    #   env:\n    #     PGVERSION: 11\n  setup_script:\n    - apt-get update\n    - apt-get -y install curl gnupg lsb-release\n    - curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -\n    - echo \"deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main $PGVERSION\" | tee /etc/apt/sources.list.d/pgdg.list\n    - apt-get update\n    - pkgs=\"autoconf automake ca-certificates cpio libc-ares-dev libevent-dev libpam0g-dev libssl-dev libsystemd-dev libtool make pandoc postgresql-$PGVERSION pkg-config python3 python3-pip python3-venv sudo iptables\"\n    - case $CC in clang) pkgs=\"$pkgs clang\";; esac\n    - if [ x\"$ENABLE_VALGRIND\" = x\"yes\" ]; then pkgs=\"$pkgs valgrind\"; fi\n    - if [ x\"$use_scan_build\" = x\"yes\" ]; then pkgs=\"$pkgs clang-tools\"; fi\n    - apt-get -y install $pkgs\n    - python3 -m venv /venv\n    - /venv/bin/pip install -r requirements.txt\n    - useradd user\n    - chown -R user .\n    - echo 'user ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers\n  build_script:\n    - su user -c \"./autogen.sh\"\n    - su user -c \"${use_scan_build:+scan-build} ./configure --prefix=$HOME/install --enable-cassert --enable-werror --without-cares --with-systemd $configure_args\"\n    - su user -c \"${use_scan_build:+scan-build} make -j4\"\n  test_script:\n    - source /venv/bin/activate && su user -c \"PATH=/usr/lib/postgresql/${PGVERSION}/bin:$PATH make -j4 check CONCURRENCY=4\"\n  install_script:\n    - make -j4 install\n  dist_script:\n    - make -j4 dist\n    - PACKAGE_VERSION=$(sed -n 's/PACKAGE_VERSION = //p' config.mak)\n    - tar -x -v -f pgbouncer-${PACKAGE_VERSION}.tar.gz\n    - cd pgbouncer-${PACKAGE_VERSION}/\n    - ./configure --prefix=$HOME/install2 --enable-werror --without-cares $configure_args\n    - make -j4\n    - make -j4 install\n  tarball_artifacts:\n    path: \"pgbouncer-*.tar.gz\"\n  always:\n    configure_artifacts:\n      path: \"config.log\"\n      type: text/plain\n\ntask:\n  name: Linux (Red Hat)\n  trigger_type: manual\n  container:\n    matrix:\n      - image: rockylinux:9\n      - image: rockylinux:8\n  setup_script:\n    - yum -y install autoconf automake diffutils file libevent-devel libtool make openssl-devel pkg-config postgresql-server postgresql-contrib systemd-devel wget\n    - yum -y install python3 python3-pip sudo iptables\n    - wget -O /tmp/pandoc.tar.gz https://github.com/jgm/pandoc/releases/download/2.10.1/pandoc-2.10.1-linux-amd64.tar.gz\n    - tar xvzf /tmp/pandoc.tar.gz --strip-components 1 -C /usr/local/\n    - pip3 install -r requirements.txt\n    - useradd user\n    - chown -R user .\n    - echo 'user ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers\n  build_script:\n    - su user -c \"./autogen.sh\"\n    - su user -c \"./configure --prefix=$HOME/install --enable-cassert --enable-werror --with-systemd\"\n    - su user -c \"make -j4\"\n  test_script:\n    - su user -c \"make -j4 check CONCURRENCY=4\"\n  install_script:\n    - make -j4 install\n  always:\n    configure_artifacts:\n      path: \"config.log\"\n      type: text/plain\n\ntask:\n  name: Linux (Alpine)\n  trigger_type: manual\n  container:\n    matrix:\n      - image: alpine:latest\n  setup_script:\n    - apk update\n    - apk add autoconf automake bash build-base libevent-dev libtool openssl openssl-dev pkgconf postgresql postgresql-contrib python3 py3-pip wget sudo iptables\n    - wget -O /tmp/pandoc.tar.gz https://github.com/jgm/pandoc/releases/download/2.10.1/pandoc-2.10.1-linux-amd64.tar.gz\n    - tar xvzf /tmp/pandoc.tar.gz --strip-components 1 -C /usr/local/\n    - python3 -m venv /venv\n    - /venv/bin/pip install -r requirements.txt\n    - adduser --disabled-password user\n    - chown -R user .\n    - echo 'user ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers\n  build_script:\n    - su user -c \"./autogen.sh\"\n    - su user -c \"./configure --prefix=$HOME/install --enable-cassert --enable-werror\"\n    - su user -c \"make -j4\"\n  test_script:\n    - source /venv/bin/activate && su user -c \"make -j4 check CONCURRENCY=4\"\n  install_script:\n    - make -j4 install\n  always:\n    configure_artifacts:\n      path: \"config.log\"\n      type: text/plain\n\ntask:\n  name: FreeBSD\n  freebsd_instance:\n    image_family: freebsd-14-1\n  env:\n    HAVE_IPV6_LOCALHOST: yes\n    USE_SUDO: true\n  setup_script:\n    - pkg install -y autoconf automake bash gmake hs-pandoc libevent libtool pkgconf postgresql${PGVERSION}-server postgresql${PGVERSION}-contrib python devel/py-pip sudo\n    - pip install -r requirements.txt\n    - kldload pf\n    - echo 'anchor \"pgbouncer_test/*\"' >> /etc/pf.conf\n    - echo 'pf_enable=\"YES\"' >> /etc/rc.conf\n    - service pf start\n    - pw useradd user\n    - chown -R user .\n    - echo 'user ALL=(ALL) NOPASSWD: ALL' >> /usr/local/etc/sudoers\n  env:\n    CPPFLAGS: -I/usr/local/include\n    LDFLAGS: -L/usr/local/lib\n    M4: /usr/local/bin/gm4\n  build_script:\n    - su user -c \"./autogen.sh\"\n    - su user -c \"./configure --prefix=$HOME/install --enable-werror\"\n    - su user -c \"gmake -j4\"\n  test_script:\n    - su user -c \"gmake -j4 check CONCURRENCY=4\"\n  install_script:\n    - gmake -j4 install\n  always:\n    configure_artifacts:\n      path: \"config.log\"\n      type: text/plain\n\ntask:\n  name: macOS\n  macos_instance:\n    image: ghcr.io/cirruslabs/macos-runner:sonoma\n  env:\n    HAVE_IPV6_LOCALHOST: yes\n    USE_SUDO: true\n    CPPFLAGS: -I/opt/homebrew/opt/openssl@3/include\n    LDFLAGS: -L/opt/homebrew/opt/openssl@3/lib\n    PATH: /opt/homebrew/opt/postgresql@${PGVERSION}/bin:$PATH\n  setup_script:\n    - brew install autoconf automake bash libevent libtool openssl pandoc pkg-config postgresql@${PGVERSION}\n    - python3 -m venv venv\n    - venv/bin/pip install -r requirements.txt\n    - echo 'anchor \"pgbouncer_test/*\"' | sudo tee -a /etc/pf.conf\n    - sudo pfctl -f /etc/pf.conf\n  build_script:\n    - ./autogen.sh\n    - ./configure --prefix=$HOME/install --enable-werror\n    - make -j4\n  test_script:\n    - source venv/bin/activate && make -j4 check CONCURRENCY=4\n  install_script:\n    - make -j4 install\n  always:\n    configure_artifacts:\n      path: \"config.log\"\n      type: text/plain\n\ntask:\n  name: Windows\n  windows_container:\n    image: cirrusci/windowsservercore:cmake\n  env:\n    PATH: C:/tools/msys64/usr/bin;%PATH%\n    HOME: .\n    HAVE_IPV6_LOCALHOST: yes\n  matrix:\n    - env:\n        MSYSTEM: MINGW64\n    # - env:\n    #     MSYSTEM: MINGW32\n  setup_script:\n    - choco install -y --no-progress msys2\n    - sh -l -c \"pacman --noconfirm -S --needed base-devel ${MINGW_PACKAGE_PREFIX}-gcc ${MINGW_PACKAGE_PREFIX}-libevent ${MINGW_PACKAGE_PREFIX}-openssl ${MINGW_PACKAGE_PREFIX}-postgresql autoconf automake libtool pkg-config ${MINGW_PACKAGE_PREFIX}-python ${MINGW_PACKAGE_PREFIX}-python-pip zip\"\n    - sh -l -c 'pip install -r requirements.txt'\n    - echo 127.0.0.1 localhost >> c:\\Windows\\System32\\Drivers\\etc\\hosts\n    - sh -l -c 'echo \"127.0.0.1   localhost\" >> /etc/hosts'\n    - choco install -y --no-progress pandoc\n  build_script:\n    - sh -l -c \"./autogen.sh\"\n    - sh -l -c \"./configure --prefix=$HOME/install --enable-werror PANDOC=/c/programdata/chocolatey/bin/pandoc LDFLAGS=-static \\\"LIBS=-liphlpapi $(pkgconf -libs -static openssl)\\\" PKG_CONFIG='pkg-config --static'\"\n    - sh -l -c \"make -j4\"\n  test_script:\n    - sh -l -c \"make -j4 check CONCURRENCY=3\"\n    - sh -l -c \"windres pgbouncer.exe\"\n  install_script:\n    - sh -l -c \"make -j4 install\"\n  dist_script:\n    - sh -l -c \"make -j4 zip\"\n  zip_artifacts:\n    path: \"pgbouncer-*.zip\"\n  always:\n    configure_artifacts:\n      path: \"config.log\"\n      type: text/plain\n\ntask:\n  name: Formatting checks & linting\n  container:\n    image: ubuntu:22.04\n  setup_script:\n    - apt-get update\n    - apt-get install -y python3 python3-pip cmake curl\n    - pip install -r dev_requirements.txt\n  build_script:\n    - touch config.mak # Fake that configure has run\n  test_script:\n    - make format-check\n    - make lint\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.5791015625,
          "content": "# top-most EditorConfig file\nroot = true\n\n# basic rules for all files\n[*]\nend_of_line = lf\ninsert_final_newline = true\ncharset = utf-8\ntrim_trailing_whitespace = true\n\n[*.{c,h}]\nindent_style = tab\nindent_size = 8\n\n[hba_test.{eval,rules}]\nindent_style = tab\nindent_size = 8\n\n[hba_test.rules]\n# Disable automatic trailing whitespace trimming for hba_test.rules, because\n# one of the tests in that file is that parsing doesn't break in case of\n# trailing whitespace.\ntrim_trailing_whitespace = false\n\n[*.py]\nindent_style = space\nindent_size = 4\n\n[*.{yml,sh}]\nindent_style = space\nindent_size = 2\n"
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.1240234375,
          "content": "[flake8]\nextend-ignore = E203, E265, F401, F541\nmax-line-length = 150\nexclude =\n    .git,\n    __pycache__,\n    lib,\n    uthash\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.111328125,
          "content": "*.[ch]\t\t\t\twhitespace=indent-with-non-tab\ntest/hba_test.rules\t\t-whitespace\nwin32/eventmsg.rc\t\twhitespace=cr-at-eol\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.416015625,
          "content": "/aclocal.m4\n/config.guess\n/config.log\n/config.mak\n/config.status\n/config.sub\n/configure\n/doc/pgbouncer_1.md\n/doc/pgbouncer_5.md\n/install-sh\n/pgbouncer\n/.objs\n/tags\n/test/.objs\n/test/hba_test\n/test/log\n/test/pgdata/\n/test/test.log\n/test/test.pid\n/test/ssl/log\n/test/ssl/tmp/\n/test/ssl/pgdata/\n/test/ssl/test.log\n/test/ssl/test.pid\n/test/ssl/TestCA[1-9]/\n\n*.html\n*.xml\n*.exe\n*.gz\n*.swp\nenv\nvenv\n.venv\n\n/uncrustify\n\n__pycache__/\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1591796875,
          "content": "[submodule \"lib\"]\n\tpath = lib\n\turl = https://github.com/libusual/libusual.git\n[submodule \"uthash\"]\n\tpath = uthash\n\turl = https://github.com/troydhanson/uthash.git\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.796875,
          "content": "Maintainers\n-----------\nPeter Eisentraut\n\nMaintainers emeriti\n-------------------\nMarko Kreen\nPetr Jelinek\n\nContributors\n------------\nAlexander Schöcke\nAndrew Dunstan\nBjoern Metzdorf\nBob Poekert\nChristoph Berg\nCody Cutrer\nDan McGee\nDavid Fetter\nDavid Galoyan\nDavid Sommerseth\nDevrim GÜNDÜZ\nDimitri Fontaine\nDmitriy Olshevskiy\nDominique Hermsdorff\nEmmanuel Courreges\nEric Radman\nEuler Taveira\nFilip Rembiałkowski\nGiorgio Valoti\nGuillaume Aubert\nGuillaume Lelarge\nGreg Sabino Mullane\nHannu Krosing\nHeikki Linnakangas\nHiroshi Saito\nHubert Depesz Lubaczewski\nJacob Coby\nJames Pye\nJørgen Austvik\nLou Picciano\nMagne Mæhre\nMagnus Hagander\nMartin Pihlak\nMathieu Fenniak\nMichael Tharp\nMichał Trojnara\nMatan Ryngler\nPavel Stehule\nPierre-Emmanuel André\nRich Schaaf\nRobert Gogolok\nSam McLeod\nTeodor Sigaev\nWilliam Grant\n"
        },
        {
          "name": "COPYRIGHT",
          "type": "blob",
          "size": 0.8115234375,
          "content": "PgBouncer - Lightweight connection pooler for PostgreSQL.\n\nISC License\n\nCopyright (c) 2007-2009  Marko Kreen, Skype Technologies OÜ\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 5.3466796875,
          "content": "\ninclude config.mak\n\nbin_PROGRAMS = pgbouncer\n\npgbouncer_SOURCES = \\\n\tsrc/admin.c \\\n\tsrc/client.c \\\n\tsrc/dnslookup.c \\\n\tsrc/hba.c \\\n\tsrc/janitor.c \\\n\tsrc/loader.c \\\n\tsrc/messages.c \\\n\tsrc/main.c \\\n\tsrc/objects.c \\\n\tsrc/pam.c \\\n\tsrc/pktbuf.c \\\n\tsrc/pooler.c \\\n\tsrc/proto.c \\\n\tsrc/prepare.c \\\n\tsrc/sbuf.c \\\n\tsrc/scram.c \\\n\tsrc/server.c \\\n\tsrc/stats.c \\\n\tsrc/system.c \\\n\tsrc/takeover.c \\\n\tsrc/util.c \\\n\tsrc/varcache.c \\\n\tsrc/common/base64.c \\\n\tsrc/common/bool.c \\\n\tsrc/common/pgstrcasecmp.c \\\n\tsrc/common/saslprep.c \\\n\tsrc/common/scram-common.c \\\n\tsrc/common/unicode_norm.c \\\n\tsrc/common/wchar.c \\\n\tinclude/admin.h \\\n\tinclude/bouncer.h \\\n\tinclude/client.h \\\n\tinclude/dnslookup.h \\\n\tinclude/hba.h \\\n\tinclude/iobuf.h \\\n\tinclude/janitor.h \\\n\tinclude/loader.h \\\n\tinclude/messages.h \\\n\tinclude/objects.h \\\n\tinclude/pam.h \\\n\tinclude/pktbuf.h \\\n\tinclude/pooler.h \\\n\tinclude/proto.h \\\n\tinclude/prepare.h \\\n\tinclude/sbuf.h \\\n\tinclude/scram.h \\\n\tinclude/server.h \\\n\tinclude/stats.h \\\n\tinclude/system.h \\\n\tinclude/takeover.h \\\n\tinclude/util.h \\\n\tinclude/varcache.h \\\n\tinclude/common/base64.h \\\n\tinclude/common/builtins.h \\\n\tinclude/common/pg_wchar.h \\\n\tinclude/common/postgres_compat.h \\\n\tinclude/common/protocol.h \\\n\tinclude/common/saslprep.h \\\n\tinclude/common/scram-common.h \\\n\tinclude/common/unicode_combining_table.h \\\n\tinclude/common/unicode_norm.h \\\n\tinclude/common/unicode_norm_table.h \\\n\tinclude/common/uthash_lowercase.h\n\nUTHASH = uthash\npgbouncer_CPPFLAGS = -Iinclude $(CARES_CFLAGS) $(LIBEVENT_CFLAGS) $(TLS_CPPFLAGS)\npgbouncer_CPPFLAGS += -I$(UTHASH)/src\n\n# include libusual sources directly\nAM_FEATURES = libusual\npgbouncer_EMBED_LIBUSUAL = 1\n\n# docs to install as-is\ndist_doc_DATA = README.md NEWS.md \\\n\tetc/pgbouncer-minimal.ini \\\n\tetc/pgbouncer.ini \\\n\tetc/pgbouncer.service \\\n\tetc/pgbouncer.socket \\\n\tetc/userlist.txt\n\nDISTCLEANFILES = config.mak config.status lib/usual/config.h config.log\n\nDIST_SUBDIRS = doc test\ndist_man_MANS = doc/pgbouncer.1 doc/pgbouncer.5\n\n# files in tgz\nEXTRA_DIST = AUTHORS COPYRIGHT Makefile config.mak.in config.sub config.guess \\\n\t     pyproject.toml requirements.txt \\\n\t     install-sh autogen.sh configure configure.ac \\\n\t     etc/mkauth.py etc/optscan.sh etc/example.debian.init.sh \\\n\t     win32/Makefile \\\n\t     $(LIBUSUAL_DIST) \\\n\t     $(UTHASH_DIST) \\\n\n# libusual files (FIXME: list should be provided by libusual...)\nLIBUSUAL_DIST = $(filter-out %/config.h, $(sort $(wildcard \\\n\t\tlib/usual/*.[chg] \\\n\t\tlib/usual/*/*.[ch] \\\n\t\tlib/m4/*.m4 \\\n\t\tlib/usual/config.h.in \\\n\t\tlib/mk/*.mk \\\n\t\tlib/mk/antimake.mk lib/mk/antimake.txt \\\n\t\tlib/mk/install-sh lib/mk/std-autogen.sh \\\n\t\tlib/README lib/COPYRIGHT \\\n\t\tlib/find_modules.sh )))\n\nUTHASH_DIST = $(UTHASH)/src/uthash.h \\\n              $(UTHASH)/LICENSE\n\npgbouncer_LDFLAGS := $(TLS_LDFLAGS)\npgbouncer_LDADD := $(CARES_LIBS) $(LIBEVENT_LIBS) $(TLS_LIBS) $(LIBS)\nLIBS :=\n\n#\n# win32\n#\n\nEXTRA_pgbouncer_SOURCES = win32/win32support.c win32/win32support.h win32/win32ver.rc\nEXTRA_PROGRAMS = pgbevent\nifeq ($(PORTNAME),win32)\npgbouncer_CPPFLAGS += -Iwin32\npgbouncer_SOURCES += $(EXTRA_pgbouncer_SOURCES)\nbin_PROGRAMS += pgbevent\nendif\n\npgbevent_SOURCES = win32/pgbevent.c win32/eventmsg.rc \\\n\t\t   win32/eventmsg.mc win32/MSG00001.bin\npgbevent_EXT = .dll\npgbevent_LINK = $(CC) -shared -Wl,--export-all-symbols -Wl,--add-stdcall-alias -o $@ $^\n\n# .rc->.o\nAM_LANGUAGES = RC\nAM_LANG_RC_SRCEXTS = .rc\nAM_LANG_RC_COMPILE = $(WINDRES) $< -o $@ --include-dir=$(srcdir)/win32 --include-dir=lib\nAM_LANG_RC_LINK = false\n\n#\n# now load antimake\n#\n\nUSUAL_DIR = lib\n\nabs_top_srcdir ?= $(CURDIR)\ninclude $(abs_top_srcdir)/lib/mk/antimake.mk\n\nconfig.mak:\n\t@echo \"Please run ./configure\"\n\t@exit 1\n\nPYTEST = $(shell command -v pytest || echo '$(PYTHON) -m pytest')\n\nCONCURRENCY = auto\n\ncheck: all\n\tetc/optscan.sh\n\tif [ $(CONCURRENCY) = 1 ]; then \\\n\t\tPYTHONIOENCODING=utf8 $(PYTEST); \\\n\telse \\\n\t\tPYTHONIOENCODING=utf8 $(PYTEST) -n $(CONCURRENCY); \\\n\tfi\n\t$(MAKE) -C test check\n\nw32zip = $(PACKAGE_TARNAME)-$(PACKAGE_VERSION)-windows-$(host_cpu).zip\nzip: $(w32zip)\n\n$(w32zip): pgbouncer.exe pgbevent.dll etc/pgbouncer.ini etc/userlist.txt README.md COPYRIGHT\n\trm -rf $(basename $@)\n\tmkdir $(basename $@)\n\tcp $^ $(basename $@)\n\t$(STRIP) $(addprefix $(basename $@)/,$(filter %.exe %.dll,$(^F)))\n\tzip -MM $@ $(addprefix $(basename $@)/,$(filter %.exe %.dll,$(^F)))\n# NB: zip -l for text files for end-of-line conversion\n\tzip -MM -l $@ $(addprefix $(basename $@)/,$(filter-out %.exe %.dll,$(^F)))\n\n.PHONY: tags\ntags:\n\tctags src/*.c include/*.h lib/usual/*.[ch] lib/usual/*/*.[ch]\n\nhtmls:\n\tfor f in *.md doc/*.md; do \\\n\t\tmkdir -p html && $(PANDOC) $$f -o html/`basename $$f`.html; \\\n\tdone\n\ndoc/pgbouncer.1 doc/pgbouncer.5:\n\t$(MAKE) -C doc $(@F)\n\nlint:\n\tflake8\n\nformat-check: uncrustify\n\tblack --check --diff .\n\tisort --check --diff .\n\t./uncrustify -c uncrustify.cfg --check include/*.h src/*.c -L WARN\n\nformat: uncrustify\n\t$(MAKE) format-c\n\t$(MAKE) format-python\n\nformat-python: uncrustify\n\tblack .\n\tisort .\n\nformat-c: uncrustify\n\t./uncrustify -c uncrustify.cfg --replace --no-backup include/*.h src/*.c -L WARN\n\nUNCRUSTIFY_VERSION=0.77.1\n\nuncrustify:\n\ttemp=$$(mktemp -d) \\\n\t\t&& cd $$temp \\\n\t\t&& curl -L https://github.com/uncrustify/uncrustify/archive/refs/tags/uncrustify-$(UNCRUSTIFY_VERSION).tar.gz --output uncrustify.tar.gz \\\n\t\t&& tar xzf uncrustify.tar.gz \\\n\t\t&& cd uncrustify-uncrustify-$(UNCRUSTIFY_VERSION) \\\n\t\t&& mkdir -p build \\\n\t\t&& cd build \\\n\t\t&& cmake .. \\\n\t\t&& $(MAKE) \\\n\t\t&& cp uncrustify $(CURDIR)/uncrustify\n"
        },
        {
          "name": "NEWS.md",
          "type": "blob",
          "size": 75.017578125,
          "content": "PgBouncer changelog\n===================\n\nPgBouncer 1.24.x\n----------------\n\n**2025-01-10  -  PgBouncer 1.24.0  -  \"New year, new bouncer\"**\n\n- Features\n  * Add support for `Type=notify-reload` for systemd. This requires systemd\n    version 253 or later. ([#1148])\n  * Add `KILL_CLIENT` command to the admin console. This allows terminating a\n    client connection by force. ([#1147])\n  * Add `max_user_client_connections` setting, both globally and at the user level. ([#1137])\n  * Add `max_db_client_connections` setting, both globally and at the database level. ([#1138])\n  * Add `current_client_connections` counter to `SHOW USERS` and `SHOW DATABASES` output. ([#1137], [#1138])\n  * Add `load_balance_hosts` parameter, to support **not** load balancing between hosts. ([#736])\n  * Expose prepared statement usage counters in `SHOW STATS`. ([#1192])\n  * Add `client_idle_timeout` setting. ([#1189])\n  * Add user level `query_timeout` and `reserve_pool_size`. ([#1180], [#1228])\n  * Enable `pam` authentication support in HBA file. ([#326])\n\n- Changes\n  * Don't recycle connections on RELOAD if TLS config is unchanged. Previously\n    if you had TLS connections they would all be recycled on RELOAD, which could\n    cause a temporary but serious performance degradation. Now this only\n    happens when the TLS settings are actually changed. ([#1157])\n  * Enable prepared statement support by default, `max_prepared_statements` is\n    now set to 200 by default. This change in defaultls should only impact\n    clients that actually use prepared statements. If you do use prepared\n    statements it's recommended to read about the limitations of the prepared\n    statement support in [our documentation][prepared-docs] ([#1144])\n  * Sockets/clients/servers can now be identified by a unique ID in the admin\n    output. Previously they could be identified by their pointer, but these\n    would often be reused by new clients after disconnect. ([#1172])\n  * Clearer error for empty pidfile. ([#1195])\n  * Return original error to client in case of `server_login_retry` failure. ([#1152])\n  * Log original server error in case of error from `auth_query`. ([#1187])\n  * Setting `default_pool_size` to 0 means unlimited size. ([#1227])\n  * Change the name of the `reserve_pool` setting for databases, to\n    `reserve_pool_size`. The previous name is still an alias for the new name.\n    ([#1232])\n\n- Fixes\n  * Handle various unlikely error cases better, such as OOM errors. These could\n    previously cause crashes or memory leaks. ([#1108], [#1101], [#1099], [#1169], [#1202])\n  * Correct default value for `server_tls_sslmode` in sample config file. ([#1133])\n  * Remove mention in docs of invalid alias for `server_tls_protocols`. ([#1155])\n  * Fix bug when using `auth_query` and replication connections together. This\n    bug would cause connection failures in such setups. ([#1166])\n  * Ignore client cancel requests while PgBouncer is configuring server setting. ([#298])\n\n[prepared-docs]: https://www.pgbouncer.org/config.html#max_prepared_statements\n\n[#1148]: https://github.com/pgbouncer/pgbouncer/pull/1148\n[#1147]: https://github.com/pgbouncer/pgbouncer/pull/1147\n[#1137]: https://github.com/pgbouncer/pgbouncer/pull/1137\n[#1138]: https://github.com/pgbouncer/pgbouncer/pull/1138\n[#736]: https://github.com/pgbouncer/pgbouncer/pull/736\n[#1192]: https://github.com/pgbouncer/pgbouncer/pull/1192\n[#1189]: https://github.com/pgbouncer/pgbouncer/pull/1189\n[#1180]: https://github.com/pgbouncer/pgbouncer/pull/1180\n[#1228]: https://github.com/pgbouncer/pgbouncer/pull/1228\n[#326]: https://github.com/pgbouncer/pgbouncer/pull/326\n[#1157]: https://github.com/pgbouncer/pgbouncer/pull/1157\n[#1144]: https://github.com/pgbouncer/pgbouncer/pull/1144\n[#1172]: https://github.com/pgbouncer/pgbouncer/pull/1172\n[#1195]: https://github.com/pgbouncer/pgbouncer/pull/1195\n[#1152]: https://github.com/pgbouncer/pgbouncer/pull/1152\n[#1187]: https://github.com/pgbouncer/pgbouncer/pull/1187\n[#1227]: https://github.com/pgbouncer/pgbouncer/pull/1227\n[#1232]: https://github.com/pgbouncer/pgbouncer/pull/1232\n[#1108]: https://github.com/pgbouncer/pgbouncer/pull/1108\n[#1101]: https://github.com/pgbouncer/pgbouncer/pull/1101\n[#1099]: https://github.com/pgbouncer/pgbouncer/pull/1099\n[#1169]: https://github.com/pgbouncer/pgbouncer/pull/1169\n[#1202]: https://github.com/pgbouncer/pgbouncer/pull/1202\n[#1133]: https://github.com/pgbouncer/pgbouncer/pull/1133\n[#1155]: https://github.com/pgbouncer/pgbouncer/pull/1155\n[#1166]: https://github.com/pgbouncer/pgbouncer/pull/1166\n[#298]: https://github.com/pgbouncer/pgbouncer/pull/298\n\n\nPgBouncer 1.23.x\n----------------\n\n**2024-08-02  -  PgBouncer 1.23.1  -  \"Everything is put back in order\"**\n\n- Fixes\n  * Fix a possible segmentation fault after PgBouncer reloads its\n    configuration. ([#1105]) (bug introduced in 1.23.0)\n  * Fix all known put_in_order crashes. ([#1120])\n    (new crashes were introduced in 1.23.0)\n  * Add missing files to release tarball that are required for testing.\n    ([#1124]) (missing files were introduced in 1.23.0)\n\n[#1120]: https://github.com/pgbouncer/pgbouncer/pull/1120\n[#1105]: https://github.com/pgbouncer/pgbouncer/pull/1105\n[#1124]: https://github.com/pgbouncer/pgbouncer/pull/1124\n\n**2024-07-03  -  PgBouncer 1.23.0  -  \"Into the new beginnings\"**\n\n- Features\n  * Add support for rolling restarts. SIGTERM doesn't cause immediate shutdown\n    of the PgBouncer process anymore. It now does a \"super safe shutdown\":\n    waiting for all clients to disconnect before shutting down. The new SIGTERM\n    behaviour allows rolling restarts of multiple PgBouncer processes behind a\n    load balancer, or listening on the same port using `so_reuseport`.\n    This is a **minor breaking change**. If you relied on the old behaviour of\n    SIGTERM in your Dockerfile or Systemd service file you should now use SIGQUIT.\n    ([#902])\n  * Add support for user name maps for `cert` and `peer` authentication\n    methods. This feature provides the flexibility that the user initiating\n    the connection does not have to be the database user. PgBouncer support\n    for user name maps works very similar to the postgres with the exceptions\n    listed in the docs. ([#996])\n  * Add support for replication connections through PgBouncer. ([#876])\n\n- Changes\n  * Improve `SHOW USERS` output listing the connections. ([#1040])\n  * Allow `pool_size` configuration per user. ([#1049])\n  * Allow `server_lifetime` configuration per database. ([#1057])\n  * Add support for listing dynamically created users in the output of `SHOW USERS`. ([#1052])\n  * Add support for `all` address type in hba configuration. ([#1078])\n  * Add support for automatically restarting when using systemd. ([#1080])\n  * Increase c-ares minimum version requirement to 1.9.0 ([#1076])\n\n- Fixes\n  * Fix issues handling large and partial startup packets. ([#1058])\n  * Add support for `--config=value` format in options startup parameter. ([#1064])\n  * Fix `avg_wait_time` metric calculation. ([#727])\n  * Add support for negotiating the postgres protocol version with the client. ([#1007])\n  * Add outstanding request for `auth_query`. ([#1034])\n  * Multiple documentation and CI improvements.\n\n[#996]: https://github.com/pgbouncer/pgbouncer/pull/996\n[#1040]: https://github.com/pgbouncer/pgbouncer/pull/1040\n[#1049]: https://github.com/pgbouncer/pgbouncer/pull/1049\n[#1057]: https://github.com/pgbouncer/pgbouncer/pull/1057\n[#1052]: https://github.com/pgbouncer/pgbouncer/pull/1052\n[#1058]: https://github.com/pgbouncer/pgbouncer/pull/1058\n[#1007]: https://github.com/pgbouncer/pgbouncer/pull/1007\n[#876]: https://github.com/pgbouncer/pgbouncer/pull/876\n[#902]: https://github.com/pgbouncer/pgbouncer/pull/902\n[#1064]: https://github.com/pgbouncer/pgbouncer/pull/1064\n[#1078]: https://github.com/pgbouncer/pgbouncer/pull/1078\n[#1080]: https://github.com/pgbouncer/pgbouncer/pull/1080\n[#727]: https://github.com/pgbouncer/pgbouncer/pull/727\n[#1076]: https://github.com/pgbouncer/pgbouncer/pull/1076\n[#1034]: https://github.com/pgbouncer/pgbouncer/pull/1034\n\n\nPgBouncer 1.22.x\n----------------\n\n**2024-03-04  -  PgBouncer 1.22.1  -  \"It's summer in Bangalore\"**\n\n- Fixes\n  * Fix issues caused by some clients using `COPY FROM STDIN` queries. Such\n    queries could introduce memory leaks, performance regressions and prepared\n    statement misbehavior. ([#1025])\n    (bug introduced in 1.21.0)\n  * Add missing tests to release tarball ([#1026])\n    (missing tests were introduced in 1.19.0 & 1.21.0)\n\n[#1025]: https://github.com/pgbouncer/pgbouncer/pull/1025\n[#1026]: https://github.com/pgbouncer/pgbouncer/pull/1026\n\n**2024-01-31  -  PgBouncer 1.22.0  -  \"DEALLOCATE ALL\"**\n\n- Features\n  * Adds support for `DEALLOCATE ALL` and `DISCARD ALL` when\n    `max_prepared_statements` is set to a non-zero value (normal `DEALLOCATE`\n    is still unsupported) ([#972])\n  * Support configuring `auth_query` per database ([#979])\n\n- Changes\n  * Improve settings in the recommended systemd unit file ([#983])\n  * Make fail fast logic handle all scenarios where no working connections to\n    the database exist anymore and none can be established ([#998])\n  * Multiple documentation improvements\n\n- Fixes\n  * Fix issue in PG14+ where PgBouncer would send `SET DateStyle='ISO'` for\n    every transaction ([#879])\n  * Fix handling of empty `application_name` ([#999])\n  * Fix building on Windows with OpenSSL 3.2.0 ([#1009])\n\n[#972]: https://github.com/pgbouncer/pgbouncer/pull/972\n[#979]: https://github.com/pgbouncer/pgbouncer/pull/979\n[#983]: https://github.com/pgbouncer/pgbouncer/pull/983\n[#998]: https://github.com/pgbouncer/pgbouncer/pull/998\n[#879]: https://github.com/pgbouncer/pgbouncer/pull/879\n[#999]: https://github.com/pgbouncer/pgbouncer/pull/999\n[#1009]: https://github.com/pgbouncer/pgbouncer/pull/1009\n\n\nPgBouncer 1.21.x\n----------------\n\n**2023-10-16  -  PgBouncer 1.21.0  -  \"The one with prepared statements\"**\n\n- Features\n  * Add support for protocol-level named prepared statements! This is probably\n    one of the most requested features for PgBouncer. Using prepared statements\n    together with PgBouncer can reduce the CPU load on your system a lot (both\n    at the PgBouncer side and the PostgreSQL side). In synthetic benchmarks\n    this feature was able to increase query throughput anywhere from 15% to\n    250%, depending on the workload. To benefit from this new feature you need\n    to change the new `max_prepared_statements` setting to a non-zero value\n    (the exact value depends on your workload, but 100 is probably reasonable).\n    See [the docs on\n    `max_prepared_statements`](https://pgbouncer.org/config.html#max_prepared_statements)\n    for details on how the feature works, its limitations, and how to tune the\n    value. After doing that you need to make sure your client library\n    actually uses prepared statements. How to do that differs for each client,\n    so you should look at the docs for the client you're using. This feature\n    has been tested very well before releasing, but performance issues or\n    bugs might very well exist due to the complexity of the feature. If you\n    find those, please report them. ([#845])\n\n- Changes\n  * Improve security of OpenSSL settings, the defaults used were VERY outdated.\n    With this release the defaults are now the same as the OpenSSL defaults of the\n    system that runs PgBouncer. ([#948] & [libusual/#41])\n  * PgBouncer now uses OpenSSL to calculate MD5 hashes when possible. This is\n    necessary to use PgBouncer in a FIPS compliant way. ([#949])\n  * Maintain `min_pool_size` for pools with a forced user even if no clients\n    are connected to PgBouncer ([#947])\n  * The way a `peer_id` is encoded in the cancellation token by PgBouncer has\n    changed, this means that peering between different PgBouncer versions will\n    not work if not all of them are on the same side of the v1.21.0 version\n    boundary. ([#945])\n\n- Fixes\n  * Fix crash with error message: \"FATAL in function client\\_proto(): bad\n    client state: 6/7\" ([#928]) (bug introduced in 1.18.0)\n  * Fix crash with error message: \"FATAL in function server\\_proto(): server in\n    bad state: 11\" ([#927]) (bug introduced in 1.18.0)\n  * Reduce cancellation sending log level ([#903])\n  * Fix slog log prefix for peers ([#922])\n  * Fix typos in docs ([#932])\n  * Fix errors pointed out by static analyzer ([#943])\n  * Don't kill all waiting clients on temporary FATAL errors during login ([#946])\n  * Use auto-database when database in `auth_dbname` is not explicitly configured\n    ([#921])\n\n- Cleanup\n  * Remove support for udns ([#938])\n\n[#845]: https://github.com/pgbouncer/pgbouncer/pull/845\n[#948]: https://github.com/pgbouncer/pgbouncer/pull/948\n[#949]: https://github.com/pgbouncer/pgbouncer/pull/949\n[#947]: https://github.com/pgbouncer/pgbouncer/pull/947\n[#945]: https://github.com/pgbouncer/pgbouncer/pull/945\n[#903]: https://github.com/pgbouncer/pgbouncer/pull/903\n[#922]: https://github.com/pgbouncer/pgbouncer/pull/922\n[#932]: https://github.com/pgbouncer/pgbouncer/pull/932\n[#928]: https://github.com/pgbouncer/pgbouncer/pull/928\n[#927]: https://github.com/pgbouncer/pgbouncer/pull/927\n[#943]: https://github.com/pgbouncer/pgbouncer/pull/943\n[#946]: https://github.com/pgbouncer/pgbouncer/pull/946\n[#921]: https://github.com/pgbouncer/pgbouncer/pull/921\n[#938]: https://github.com/pgbouncer/pgbouncer/pull/938\n[libusual/#41]: https://github.com/libusual/libusual/pull/41\n\n\nPgBouncer 1.20.x\n----------------\n\n**2023-08-09  -  PgBouncer 1.20.1  -  \"Optional options\"**\n\n- Fixes\n  * Fix regression where putting `options` inside `ignore_startup_parameters`\n    would not ignore unknown parameters inside the `options` startup parameter\n    anymore. ([#908]) (regression was introduced in 1.20.0)\n  * Fix confusing typo in the docs ([#917])\n\n[#908]: https://github.com/pgbouncer/pgbouncer/pull/908\n[#917]: https://github.com/pgbouncer/pgbouncer/pull/917\n\n**2023-07-20  -  PgBouncer 1.20.0  -  \"A funny name goes here\"**\n\n- Deprecations\n  * Online restart option is now considered deprecated. The feature has\n    received very little love in recent years. There are multiple known issues\n    with it and newly added features often don't support it. The recommended\n    method to do online restarts these days is using the `so_reuseport` and\n    `peers` feature. That way you can have multiple different PgBouncer\n    processes running on the same port. Then by restarting those processes\n    one-by-one, you can make sure there's always a PgBouncer process listening\n    on the desired port. ([#894])\n\n- Features\n  * Introduce the `track_extra_parameters` which allows tracking of more\n    parameters in transaction pooling mode. Previously, PgBouncer only tracked\n    `application_name`, `DateStyle`, `TimeZone` and\n    `standard_conforming_strings`. Now PgBouncer also tracks `IntervalStyle` by\n    default. And by changing `track_extra_parameters` you can track even more\n    settings, but only [ones that PostgreSQL reports back to the\n    client][guc_report]. If you're using Citus 12.0+, then Citus will make sure\n    that PostgreSQL also reports `search_path` back to the client. So if you use\n    Citus you can add `search_path` to the `track_extra_parameters` setting.\n    ([#867])\n  * Forward SQLSTATE in authentication phase. This allows the detection of\n    database not existing, which is done by Npgsql (a .NET data provider for\n    PostgreSQL). ([#814])\n  * Change default `server_tls_sslmode` to `prefer`. ([#866])\n  * Add support for the `options` startup parameter. This allows usage of [the\n    `PGOPTIONS` environment variable that `psql` and `libpq` know\n    about][pgoptions]. Using this variable you can set any PostgreSQL parameter at\n    startup. This only works for PostgreSQL parameters that PgBouncer tracks\n    through `track_extra_parameters`. ([#878])\n\n- Fixes\n  * Don't crash when the `pgbouncer` admin database is used as auth_dbname. It's\n    still not supported, but this now gives a clear error instead of crashing.\n    ([#817])\n  * Fix name of `peer_cache` in `SHOW MEM`. It was incorrectly showing up as\n    `db_cache` before. ([#864])\n  * Fix src/dst confusion in log. PgBouncer was logging a source IP when it\n    meant to log the destination IP. ([#880])\n  * Only log admin connections over unix sockets when `log_connections` is set\n    to `1`. ([#883])\n\n[guc_report]: https://www.postgresql.org/docs/15/protocol-flow.html#PROTOCOL-ASYNC\n[pgoptions]: https://www.postgresql.org/docs/current/config-setting.html#id-1.6.7.4.5\n[#867]: https://github.com/pgbouncer/pgbouncer/pull/867\n[#814]: https://github.com/pgbouncer/pgbouncer/pull/814\n[#866]: https://github.com/pgbouncer/pgbouncer/pull/866\n[#878]: https://github.com/pgbouncer/pgbouncer/pull/878\n[#817]: https://github.com/pgbouncer/pgbouncer/pull/817\n[#864]: https://github.com/pgbouncer/pgbouncer/pull/864\n[#880]: https://github.com/pgbouncer/pgbouncer/pull/880\n[#883]: https://github.com/pgbouncer/pgbouncer/pull/883\n[#894]: https://github.com/pgbouncer/pgbouncer/pull/894\n\nPgBouncer 1.19.x\n----------------\n\n**2023-05-31  -  PgBouncer 1.19.1  -  \"Sunny Spring\"**\n\nThis is a minor release that fixes a few recently introduced bugs:\n\n- Fixes\n  * Fix: FATAL in function disconnect_client(): bad client state: 0 ([#846])\n    (bug introduced in 1.18.0)\n  * Fix: FATAL in function server_proto(): server in bad state: 14 ([#849])\n    (bug introduced in 1.18.0)\n  * Add files required to run python based tests to release tarball ([#852])\n    (new tests introduced in 1.19.0)\n\n[#846]: https://github.com/pgbouncer/pgbouncer/pull/846\n[#849]: https://github.com/pgbouncer/pgbouncer/pull/849\n[#852]: https://github.com/pgbouncer/pgbouncer/pull/852\n\n**2023-05-04  -  PgBouncer 1.19.0  -  \"The old-fashioned, human-generated kind\"**\n\n- Features\n  * Add `auth_dbname` option, which specifies against which database\n    to run the `auth_query`. ([#764])\n  * Add the `SHOW STATE` command, which shows if PgBouncer is active,\n    paused or suspended. ([#528])\n  * Add support for peering between PgBouncer processes.  This allows\n    configuring PgBouncer such that cancellation requests continue to\n    work when multiple different PgBouncer processes are behind a\n    single load balancer. ([#666])\n  * Add a dedicated `cancel_wait_timeout` setting, which determines\n    after how long to give up on forwarding a cancel request.  Default\n    is 10 seconds. ([#833])\n  * New testing framework ([#792])\n\n- Fixes\n  * Fix possible memory leak on TLS handshake failure. ([#796])\n  * Give more accurate error messages for unsupported command-line\n    options on Windows. ([#620])\n  * Fix calling `disconnect_server` on a server in `BEING_CANCELED`\n    state. ([#815]) (introduced in 1.18.0)\n  * Don't exit with a non-zero status when a `SIGTERM` is\n    received. ([#834])\n  * Fail hard during startup when a socket could not be created in\n    `unix_socket_dir`. ([#830])\n  * Fail hard during startup when none of the addresses in\n    `listen_addr` could be listened on. ([#838])\n  * Give more warning messages with more information when\n    `sbuf_connect` fails.  This is especially useful when failing to\n    create Unix sockets. ([#837])\n\n- Cleanups\n  * Various CI updates for better performance\n  * Removed AppVeyor\n\n[#528]: https://github.com/pgbouncer/pgbouncer/issues/528\n[#620]: https://github.com/pgbouncer/pgbouncer/pull/620\n[#666]: https://github.com/pgbouncer/pgbouncer/pull/666\n[#764]: https://github.com/pgbouncer/pgbouncer/pull/764\n[#792]: https://github.com/pgbouncer/pgbouncer/pull/792\n[#796]: https://github.com/pgbouncer/pgbouncer/pull/796\n[#815]: https://github.com/pgbouncer/pgbouncer/pull/815\n[#830]: https://github.com/pgbouncer/pgbouncer/pull/830\n[#833]: https://github.com/pgbouncer/pgbouncer/pull/833\n[#834]: https://github.com/pgbouncer/pgbouncer/pull/834\n[#837]: https://github.com/pgbouncer/pgbouncer/pull/837\n[#838]: https://github.com/pgbouncer/pgbouncer/pull/838\n\nPgBouncer 1.18.x\n----------------\n\n**2022-12-12  -  PgBouncer 1.18.0  -  \"No real mystery\"**\n\n- Features\n  * Add `application_name` to `SHOW CLIENTS`/`SERVERS`/`SOCKETS`\n    output ([#449](https://github.com/pgbouncer/pgbouncer/pull/449))\n  * Add information about cancel requests to `SHOW\n    CLIENTS`/`SERVERS`/`POOLS` output\n    ([#782](https://github.com/pgbouncer/pgbouncer/pull/782))\n\n- Fixes\n  * Fail `sbuf_send_pending` operation if destination socket is closed\n    ([#652](https://github.com/pgbouncer/pgbouncer/pull/652))\n  * Fix a few possible crashes\n    ([#700](https://github.com/pgbouncer/pgbouncer/pull/700),\n    [#730](https://github.com/pgbouncer/pgbouncer/pull/730))\n  * Fix for overflow bug in comma-separated host list feature, causing\n    connection to get re-routed to Unix socket\n    ([#747](https://github.com/pgbouncer/pgbouncer/pull/747))\n  * Don't evict connections to achieve `min_pool_size`\n    ([#648](https://github.com/pgbouncer/pgbouncer/pull/648))\n  * Fix `SHOW HELP` with PostgreSQL 15\n    ([#769](https://github.com/pgbouncer/pgbouncer/issues/769))\n  * Fix race condition in query cancellation handling.  It was possible\n    that a query cancellation for one client canceled a query for\n    another one.  This could happen when a cancel request was received\n    by PgBouncer when the query it was meant to cancel already\n    completed by itself.\n    ([#717](https://github.com/pgbouncer/pgbouncer/pull/717))\n\n- Cleanups\n  * Various CI updates\n\nPgBouncer 1.17.x\n----------------\n\n**2022-03-23  -  PgBouncer 1.17.0  -  \"A line has been drawn\"**\n\n- Features\n  * A database definition can specify a comma-separated host list.\n    The hosts will be connected to in a round-robin manner.\n  * When connecting to a non-existing database, the error (\"no such\n    database\") is now reported after authentication.  This prevents\n    unauthenticated clients from probing what databases exist.  (This\n    is similar to the change in version 1.15.0 to report missing users\n    after authentication.)\n  * Don't send server disconnect errors to the client before login.\n    This could reveal not-quite-public information, such as\n    configuration details, to a client that is not logged in yet.\n  * Increase maximum password length again.  Apparently, the last\n    increase wasn't enough for long enough.\n  * Remove automatic `auth_file` reload.  The `auth_file` is now\n    reread only on configuration file reload, no longer automatically\n    as soon as it is changed.\n  * The Windows build now includes a version-information resource\n    file.\n  * The Windows builds created on CI are now statically linked, so\n    they can be used directly without requiring any dependencies.\n\n- Fixes\n  * OpenSSL 3 support has been fixed.  Previous releases would crash.\n  * Don't apply fast-fail at connect time.  This is part of the\n    above-mentioned change to not report server errors before\n    authentication.  It also fixes a particular situation with SCRAM\n    pass-through authentication, where we need to allow the\n    client-side authentication exchange in order to be able to fix the\n    server-side connection by re-authenticating.  The fast-fail\n    mechanism still applies right after authentication, so the\n    effective observed behavior will be the same in most situations.\n  * Change `auth_type` in sample `pgbouncer.ini` to `md5` to match the\n    built-in default.  Some deploy this file as the default\n    configuration file, so check if this changed configuration still\n    makes sense for you.\n  * Fix crash at exit in assert-enabled builds.\n  * Improve `tcp_defer_accept` documentation and behavior.  The\n    documentation was incorrect and misleading about the default.  In\n    some cases the wrong value was showing in \"show config\".  Also, if\n    it's set but not supported, give an error instead of ignoring,\n    similar to how other platform-specific socket options are handled.\n  * Fix build with c-ares on Windows.  c-ares >=1.18.0 is now required\n    on Windows.\n\n- Cleanups\n  * Most deprecation warnings from Autoconf >=2.70 have been cleaned\n    up.  Older Autoconf versions are still supported.\n  * Cirrus CI use has been expanded to more platforms.\n  * Travis CI support has been removed.\n  * Update locations to search for default root CA file, to cover more\n    platforms, such as Fedora/RHEL/CentOS.\n  * Python scripts now all use `python3` by default.  Python 2\n    compatibility is no longer maintained.\n  * The test suite scripts use `command -v` instead of `which`, which\n    is deprecated.\n  * Several error messages have been reworded to make it clearer which\n    command or configuration setting they relate to.\n  * The test suite scripts no longer require GNU sed.\n  * `make check` now works on Windows (but not the SSL test suite\n    yet).\n  * Document that the admin console only supports the simple query\n    protocol, and give better error messages about this.\n\nPgBouncer 1.16.x\n----------------\n\n**2021-11-11  -  PgBouncer 1.16.1  -  \"Test of depth against quiet efficiency\"**\n\nThis is a minor release with a security fix.\n\n* Make PgBouncer acting as a server reject extraneous data after an\n  SSL or GSS encryption handshake.\n\n  A man-in-the-middle with the ability to inject data into the TCP\n  connection could stuff some cleartext data into the start of a\n  supposedly encryption-protected database session.  This could be\n  abused to send faked SQL commands to the server, although that would\n  only work if PgBouncer did not demand any authentication data.\n  (However, a PgBouncer setup relying on SSL certificate\n  authentication might well not do so.)  (CVE-2021-3935)\n\n**2021-08-09  -  PgBouncer 1.16.0  -  \"Fended off a jaguar\"**\n\n- Features\n  * Support hot reloading of TLS settings.  When the configuration\n    file is reloaded, changed TLS settings automatically take effect.\n  * Add support for abstract Unix-domain sockets.  Prefix a\n    Unix-domain socket path with `@` to use a socket in the abstract\n    namespace.  This matches the corresponding PostgreSQL 14 feature.\n  * The maximum lengths of passwords and user names have been\n    increased to 996 and 128, respectively.  Various cloud services\n    require this.\n  * The minimum pool size can now be set per database, similar to the\n    regular pool size and the reserve pool size.\n  * The number of pending query cancellations is shown in `SHOW\n    POOLS`.\n\n- Fixes\n  * Configuration parsing now has tighter error handling in many\n    places.  Where previously it might have logged an error and\n    proceeded, those configuration errors would now result in startup\n    failures.  This is what always should have happened, but some code\n    didn't do this right.  Some users might discover that their\n    configurations have been faulty all along and will not work\n    anymore.\n  * Query cancel handling has been fixed.  Under some circumstances,\n    cancel requests would seemingly get stuck for a long time.  This\n    should no longer happen.  In fact, cancel requests can now exceed\n    the pool size by a factor of two, so they really shouldn't get\n    stuck\n    anymore. ([#542](https://github.com/pgbouncer/pgbouncer/pull/542),\n    [#543](https://github.com/pgbouncer/pgbouncer/pull/543))\n  * Mixed use of md5 and scram via hba has been fixed.\n  * The build with c-ares on Windows has been fixed.\n  * The dreaded \"FIXME: query end, but query_start == 0\" messages have\n    been fixed.  We now know why they happen, and you shouldn't see\n    them anymore. ([#565](https://github.com/pgbouncer/pgbouncer/pull/565))\n  * Fix reloading of `default_pool_size`, `min_pool_size`, and\n    `res_pool_size`.  Reloading these settings previously didn't work.\n\n- Cleanups\n  * Cirrus CI is now\n    [used](https://cirrus-ci.com/github/pgbouncer/pgbouncer) instead\n    of Travis CI.\n  * As usual, many tests have been added.\n  * The \"unclean server\" log message has been clarified a bit.  It now\n    says \"client disconnect while server was not ready\" or \"client\n    disconnect before everything was sent to the server\".  The former\n    can happen if the client connection is closed when the server has\n    a transaction block open, which confused some users.\n  * You can no longer use \"pgbouncer\" as a database name.  This name\n    is reserved for the admin console, and using it as a normal\n    database name never really worked right.  This is now explicitly\n    prohibited.\n  * Errors sent to clients before the connection is closed are now\n    labeled as FATAL instead of just ERROR.  Some clients were\n    confused\n    otherwise. ([#564](https://github.com/pgbouncer/pgbouncer/pull/564))\n  * Fix compiler warnings with GCC 11.\n    ([#623](https://github.com/pgbouncer/pgbouncer/issues/623))\n\nPgBouncer 1.15.x\n----------------\n\n**2020-11-19  -  PgBouncer 1.15.0  -  \"Ich hab noch einen Koffer in Berlin\"**\n\n- Features\n  * Improve authentication failure reporting.  The authentication\n    failure messages sent to the client now only state that\n    authentication failed but give no further details.  Details are\n    available in the PgBouncer log.  Also, if the requested user does\n    not exist, the authentication is still processed to the end and\n    will result in the same generic failure message.  All this\n    prevents clients from probing the PgBouncer instance for user\n    names and other authentication-related insights.  This is similar\n    to how PostgreSQL behaves.\n  * Don't log anything if client disconnects immediately.  This avoids\n    log spam when monitoring systems just open a TCP/IP connection but\n    don't send anything before disconnecting.\n  * Use systemd journal for logging when in use.  When we detect that\n    stderr is going to the systemd journal, we use systemd native\n    functions for log output.  This avoids printing duplicate\n    timestamp and pid, thus making the log a bit cleaner.  Also, this\n    adds metadata such as the severity to the logs, so that if the\n    journal gets sent on to syslog, the messages have useful metadata\n    attached.\n  * A subset of the test suite can now be run under Windows.\n  * `SHOW CONFIG` now also shows the default values of the settings.\n\n- Fixes\n  * Fix the `so_reuseport` option on FreeBSD.  The original code in\n    PgBouncer 1.12.0 didn't actually work on FreeBSD.\n    ([#504](https://github.com/pgbouncer/pgbouncer/pull/504))\n  * Repair compilation on systems with older systemd versions.  This\n    was broken in 1.14.0.\n    ([#505](https://github.com/pgbouncer/pgbouncer/issues/505))\n  * The makefile target to build Windows binary zip packages has been\n    repaired.\n  * Long command-line options now also work on Windows.\n  * Fix the behavior of the global `auth_user` setting.  The old\n    behavior was confusing and fragile as it depended on the order in\n    the configuration file.  This is no longer the\n    case. ([#391](https://github.com/pgbouncer/pgbouncer/issues/391),\n    [#393](https://github.com/pgbouncer/pgbouncer/issues/393))\n\n- Cleanups\n  * Improve test stability and portability.\n  * Modernize Autoconf-related code.\n  * Disable deprecation compiler warnings from OpenSSL 3.0.0.\n\nPgBouncer 1.14.x\n----------------\n\n**2020-06-11  -  PgBouncer 1.14.0  -  \"La ritrovata magia\"**\n\n- Features\n  * Add SCRAM authentication pass-through.  This allows using\n    encrypted SCRAM secrets in PgBouncer (either in `userlist.txt` or\n    from `auth_query`) for logging into servers.\n  * Add support for systemd socket activation.  This is especially\n    useful to let systemd handle the creation of the Unix-domain\n    sockets on systems where access to `/var/run/postgresql` is\n    restricted.\n  * Add support for Unix-domain sockets on Windows.\n\n- Cleanups\n  * Add an alternative smaller sample configuration file\n    `pgbouncer-minimal.ini` for testing or deployment.\n\nPgBouncer 1.13.x\n----------------\n\n**2020-04-27  -  PgBouncer 1.13.0  -  \"My favourite game\"**\n\n- Features\n  * Add configuration setting `tcp_user_timeout`, to set the\n    corresponding socket option.\n  * `client_tls_protocols` and `server_tls_protocols` now default to\n    `secure`, which means only TLS 1.2 and TLS 1.3 are enabled.  Older\n    versions are still supported, they are just not turned on by\n    default.\n  * Add support for systemd service notifications.  Right now, this\n    allows using `Type=notify` service units.  More integration is\n    planned for future versions.\n\n- Fixes\n  * Fix multiline log messages\n    ([libusual #24](https://github.com/libusual/libusual/pull/24))\n  * Handle null user names returned from `auth_query` properly\n    ([#340](https://github.com/pgbouncer/pgbouncer/pull/340))\n\n- Cleanups\n  * The Debian packaging files under `debian` have been removed.  It\n    is recommended to use the packages from https://apt.postgresql.org/.\n  * Numerous fixes and improvements in the test suite\n  * The tests no longer try to use sudo by default.  This can now be\n    activated explicitly by setting the environment variable\n    `USE_SUDO`.\n  * The libevent API use was updated to use version 2 style interfaces\n    and to no longer use deprecated interfaces from version 1.\n\nPgBouncer 1.12.x\n----------------\n\n**2019-10-17  -  PgBouncer 1.12.0  -  \"It's about learning and getting better\"**\n\nThis release contains a variety of minor enhancements and fixes.\n\n- Features\n  * Add a setting to turn on the `SO_REUSEPORT` socket option.  On\n    some operating systems, this allows running multiple PgBouncer\n    instances on the same host listening on the same port and having\n    the kernel distribute the connections automatically.\n  * Add a setting to use a `resolv.conf` file separate from the\n    operating system.  This allows setting custom DNS servers and\n    perhaps other DNS options.\n  * Send the output of `SHOW VERSION` as a normal result row instead\n    of a NOTICE message.  This makes it easier to consume and is\n    consistent with other `SHOW` commands.\n\n- Fixes\n  * Send statistics columns as `numeric` instead of `bigint`.  This\n    avoids some client libraries failing on values that overflow the\n    `bigint`\n    range. ([#360](https://github.com/pgbouncer/pgbouncer/pull/360),\n    [#401](https://github.com/pgbouncer/pgbouncer/pull/401))\n  * Fix issue with PAM users losing their\n    password. ([#285](https://github.com/pgbouncer/pgbouncer/issues/285))\n  * Accept SCRAM channel binding enabled clients.  Previously, a\n    client supporting channel binding (that is, PostgreSQL 11+) would\n    get a connection failure when connecting to PgBouncer in certain\n    situations.  (PgBouncer does not support channel binding.  This\n    change just fixes support for clients that offer it.)\n  * Fix compilation with newer versions of musl-libc (used by Alpine\n    Linux).\n\n- Cleanups\n  * Add `make check` target.  This allows running all the tests from a\n    single command.\n  * Remove references to the PostgreSQL wiki.  All information is now\n    either in the PgBouncer documentation or on the web site.\n  * Remove support for Libevent version 1.x.  Libevent 2.x is now\n    required.  Libevent is now detected using pkg-config.\n  * Fix compiler warnings on macOS and Windows.  The build on these\n    platforms should now be free of warnings.\n  * Fix some warnings from LLVM scan-build.\n\nPgBouncer 1.11.x\n----------------\n\n**2019-08-27  -  PgBouncer 1.11.0  -  \"Instinct for Greatness\"**\n\n- Features\n  * Add support for SCRAM authentication for clients and servers.  A\n    new authentication type `scram-sha-256` is added.\n  * Handle `auth_type=password` when the stored password is md5, like\n    a PostgreSQL server\n    would. ([#129](https://github.com/pgbouncer/pgbouncer/pull/129))\n  * Add option `log_stats` to disable printing stats to\n    log. ([#287](https://github.com/pgbouncer/pgbouncer/pull/287))\n  * Add time zone to log timestamps.\n  * Put PID into [brackets] in log prefix.\n- Fixes\n  * Fix OpenSSL configure test when running against newer OpenSSL with\n    `-Werror`.\n  * Fix wait time computation with `auth_user`.  This would either\n    crash or report garbage values for wait\n    time. ([#393](https://github.com/pgbouncer/pgbouncer/pull/393))\n  * Handle GSSENCRequest packet, added in PostgreSQL 12.  It doesn't\n    do anything right now, but it avoids confusing error messages\n    about \"bad packet header\".\n- Cleanups\n  * Many improvements in the test suite and several new tests\n  * Fix several compiler warnings on Windows.\n  * Expand documentation of the `[users]` section and add to example\n    config\n    file. ([#330](https://github.com/pgbouncer/pgbouncer/pull/330))\n\nPgBouncer 1.10.x\n----------------\n\n**2019-07-01  -  PgBouncer 1.10.0  -  \"Afraid of the World\"**\n\n- Features\n  * Add support for enabling and disabling TLS 1.3.  (TLS 1.3 was\n    already supported, depending on the OpenSSL library, but now the\n    configuration settings to pick the TLS protocol versions also\n    support it.)\n- Fixes\n  * Fix TLS 1.3 support.  This was broken with OpenSSL 1.1.1 and\n    1.1.1a (but not before or after).\n  * Fix a rare crash in `SHOW FDS`\n    ([#311](https://github.com/pgbouncer/pgbouncer/issues/311)).\n  * Fix an issue that could lead to prolonged downtime if many cancel\n    requests arrive\n    ([#329](https://github.com/pgbouncer/pgbouncer/issues/329)).\n  * Avoid \"unexpected response from login query\" after a postgres\n    reload\n    ([#220](https://github.com/pgbouncer/pgbouncer/issues/220)).\n  * Fix `idle_transaction_timeout` calculation\n    ([#125](https://github.com/pgbouncer/pgbouncer/issues/125)).  The\n    bug would lead to premature timeouts in specific situations.\n- Cleanups\n  * Make various log and error messages more precise.\n  * Fix issues found by Coverity (none had a significant impact in\n    practice).\n  * Improve and document all test scripts.\n  * Add additional SHOW commands to the documentation.\n  * Convert the documentation from rst to Markdown.\n  * Python scripts in the source tree are all compatible with Python 3\n    now.\n\nPgBouncer 1.9.x\n---------------\n\n**2018-08-13  -  PgBouncer 1.9.0  -  \"Chaos Survival\"**\n\n- Features\n  * RECONNECT command\n  * WAIT_CLOSE command\n  * Fast close - Disconnect a server in session pool mode immediately if\n    it is in \"close_needed\" (reconnect) mode.\n  * Add close_needed column to SHOW SERVERS\n- Fixes\n  * Avoid double-free in parse_filename\n  * Avoid NULL pointer deref in parse_line\n- Cleanups\n  * Port mkauth.py to Python 3\n  * Improve signals documentation\n  * Improve quick start documentation\n  * Document SET command\n  * Correct list of required software\n  * Fix -Wimplicit-fallthrough warnings\n  * Add missing documentation for various SHOW fields\n  * Document reconnect behavior on reload and DNS change\n  * Document that KILL requires RESUME afterwards\n  * Clarify documentation of server_lifetime\n  * Typos and capitalization fixes in messages and docs\n  * Fix psql invocation in tests\n  * Various other test setup improvements\n\nPgBouncer 1.8.x\n---------------\n\n**2017-12-20  -  PgBouncer 1.8.1  -  \"Ground-and-pound Mentality\"**\n\n- Fixes\n  * Include file `include/pam.h` into distribution tarball.  This\n    prevented the 1.8 tarball from building at all.\n\n**2017-12-19  -  PgBouncer 1.8  -  \"Confident at the Helm\"**\n\n- Features\n  * Support PAM authentication.  (Enable with `--with-pam`.)\n  * Add `paused` and `disabled` fields to `SHOW DATABASES` output.\n  * Add `maxwait_us` field to `SHOW POOLS` output.\n  * Add `wait` and `wait_us` fields to `SHOW` commands output.\n  * Add new commands `SHOW STATS_TOTALS` and `SHOW STATS_AVERAGES`.\n  * Track queries and transactions separately in `SHOW STATS`.  The\n    fields `total_requests`, `avg_req`, and\n    `avg_query` have been replaced by new fields.\n  * Add `wait_time` to `SHOW STATS`.\n- Fixes\n  * Updated libusual supports OpenSSL 1.1.\n  * Do not attempt to use TLS on Unix sockets.\n  * When parsing `pg_hba.conf`, keep parsing after erroneous lines instead of rejecting the whole file.\n    ([#118](https://github.com/pgbouncer/pgbouncer/issues/118))\n  * Several other hba parsing fixes.\n  * Fix race condition when canceling query.\n    ([#141](https://github.com/pgbouncer/pgbouncer/issues/141))\n- Cleanups\n  * `auth_user` setting is now also allowed globally, not only per database.\n    ([#142](https://github.com/pgbouncer/pgbouncer/issues/142))\n  * Set console client and server encoding to `UTF8`.\n\nPgBouncer 1.7.x\n---------------\n\n**2016-02-26  -  PgBouncer 1.7.2  -  \"Finally Airborne\"**\n\n- Fixes\n  * Fix crash on stale pidfile removal.  Problem introduced in 1.7.1.\n  * Disable cleanup - it breaks takeover and is not useful\n    for production loads.  Problem introduced in 1.7.1.\n  * After takeover, wait until pidfile is gone before booting.\n    Slow shutdown due to memory cleanup exposed existing race.\n    ([#113](https://github.com/pgbouncer/pgbouncer/issues/113))\n- Cleanups\n  * Make build reproducible by dropping DBGVER handling.\n    ([#112](https://github.com/pgbouncer/pgbouncer/issues/112))\n  * Antimake: Sort file list from $(wildcard), newer gmake does not\n    sort it anymore.\n    ([#111](https://github.com/pgbouncer/pgbouncer/issues/111))\n  * Show libssl version in log.\n  * deb: Turn on full hardening.\n\n**2016-02-18  -  PgBouncer 1.7.1  -  \"Forward To Five Friends Or Else\"**\n\nWARNING: Since version 1.7, `server_reset_query` is not executed when\ndatabase is in transaction-pooling mode.  Seems this was not highlighted\nenough in 1.7 announcement.  If your apps depend on that happening, use\n`server_reset_query_always` to restore previous behaviour.\n\nOtherwise main work of this release was to track down TLS-related memory\nleak, which turned out to not exist.  Instead there is libssl build in\nDebian/wheezy which has 600k overhead per connection (without leaking)\ninstead expected 20-30k.  Something to keep an eye on when using TLS.\n\n- Fixes\n  * TLS: Rename sslmode \"disabled\" to \"disable\" as that is what\n    PostgreSQL uses.\n  * TLS: `client_tls_sslmode=verify-ca/-full` now reject\n    connections without client certificate.\n    ([#104](https://github.com/pgbouncer/pgbouncer/issues/104))\n  * TLS: `client_tls_sslmode=allow/require` do validate client\n    certificate if sent.  Previously they left cert validation\n    unconfigured so connections with client cert failed.\n    ([#105](https://github.com/pgbouncer/pgbouncer/issues/105))\n  * Fix memleak when freeing database.\n  * Fix potential memleak in tls_handshake().\n  * Fix EOF handling in tls_handshake().\n  * Fix too small memset in asn1_time_parse compat.\n  * Fix non-TLS (`--without-openssl`) build.\n    ([#101](https://github.com/pgbouncer/pgbouncer/issues/101))\n  * Fix various issues with Windows build.\n    ([#100](https://github.com/pgbouncer/pgbouncer/issues/100))\n- Cleanups\n  * TLS: Use SSL_MODE_RELEASE_BUFFERS to decrease memory usage\n    of inactive connections.\n  * Clean allocated memory on exit.  Helps to run memory-leak checkers.\n  * Improve `server_reset_query` documentation.\n    ([#110](https://github.com/pgbouncer/pgbouncer/issues/110))\n  * Add TLS options to sample config.\n\n**2015-12-18  -  PgBouncer 1.7  -  \"Colors Vary After Resurrection\"**\n\n- Features\n  * Support TLS connections.  OpenSSL/LibreSSL is used\n    as backend implementation.\n  * Support authentication via TLS client certificate.\n  * Support \"peer\" authentication on Unix sockets.\n  * Support Host Based Access control file, like\n    [pg_hba.conf](http://www.postgresql.org/docs/9.4/static/auth-pg-hba-conf.html)\n    in Postgres.  This allows to configure TLS for network connections and \"peer\"\n    authentication for local connections.\n- Cleanups\n  * Set `query_wait_timeout` to 120s by default.  Current default\n    (0) causes infinite queueing, which is not useful.  That\n    means if client has pending query and has not been\n    assigned to server connection, the client connection will\n    be dropped.\n  * Disable `server_reset_query_always` by default.  Now reset\n    query is used only in pools that are in session mode.\n  * Increase pkt_buf to 4096 bytes.  Improves performance with TLS.\n    The behaviour is probably load-specific, but it should be\n    safe to do as since v1.2 the packet buffers are split\n    from connections and used lazily from pool.\n  * Support pipelining count expected ReadyForQuery packets.\n    This avoids releasing server too early.  Fixes\n    [#52](https://github.com/pgbouncer/pgbouncer/issues/52).\n  * Improved sbuf_loopcnt logic - socket is guarateed to be\n    reprocessed even if there are no event from socket.\n    Required for TLS as it has it's own buffering.\n  * Adapt system tests to work with modern BSD and MacOS.\n    (Eric Radman)\n  * Remove **crypt** auth.  It's obsolete and not supported\n    by PostgreSQL since 8.4.\n  * Fix plain \"--with-cares\" configure option - without argument\n    it was broken.\n\nPgBouncer 1.6.x\n---------------\n\n**2015-09-03  -  PgBouncer 1.6.1  -  \"Studio Audience Approves\"**\n\n- Features\n  * New setting: `server_reset_query_always`.  When set,\n    disables `server_reset_query` use on non-session pools.\n    PgBouncer introduces per-pool pool_mode, but session-pooling\n    and transaction-pooling should not use same reset query.\n    In fact, transaction-pooling should not use any reset query.\n\n    It is set in 1.6.x, but will be disabled in 1.7.\n\n- Fixes\n  * [SECURITY]  Remove invalid assignment of `auth_user`. (#69)\n    When `auth_user` is set and client asks non-existing username,\n    client will log in as `auth_user`.  Not good.\n\n    [CVE-2015-6817](https://access.redhat.com/security/cve/cve-2015-6817)\n\n  * Skip NoticeResponse in handle_auth_response.  Otherwise verbose\n    log levels on server cause login failures.\n\n  * console: Fill `auth_user` when auth_type=any.  Otherwise\n    logging can crash (#67).\n\n  * Various portability fixes (OpenBSD, Solaris, OSX).\n\n**2015-08-01  -  PgBouncer 1.6  -  \"Zombies of the future\"**\n\n- Features\n\n  * Load user password hash from postgres database.\n    New parameters:\n\n    auth_user\n        user to use for connecting same db and fetching user info.\n        Can be set per-database too.\n\n    auth_query\n        SQL query to run under auth_user.\n        Default: \"SELECT usename, passwd FROM pg_shadow WHERE usename=$1\"\n\n    (Cody Cutrer)\n\n  * Pooling mode can be configured both per-database and per-user.\n    (Cody Cutrer)\n\n  * Per-database and per-user connection limits: max_db_connections and\n    max_user_connections.\n    (Cody Cutrer / Pavel Stehule)\n\n  * Add DISABLE/ENABLE commands to prevent new connections.\n    (William Grant)\n\n  * New DNS backend: c-ares.  Only DNS backend that supports all\n    interesting features:  /etc/hosts with refresh, SOA lookup,\n    large replies (via TCP/EDNS+UDP), IPv6.  It is the preferred\n    backend now, and probably will be **only** backend in the future,\n    as it's pointless to support zoo of inadequate libraries.\n\n    SNAFU: c-ares versions <= 1.10 have bug which breaks CNAME-s support\n    when IPv6 has been enabled.  (Fixed upstream.)  As a workaround,\n    c-ares <= 1.10 is used IPv4-only.  So PgBouncer will drop other backends\n    only when c-ares >1.10 (still unreleased) has been out some time...\n\n  * Show remote_pid in SHOW CLIENTS/SERVERS.  Available for clients that\n    connect over unix sockets and both tcp and unix socket server.\n    In case of tcp-server, the pid is taken from cancel key.\n\n  * Add separate config param (dns_nxdomain_ttl) for controlling\n    negative dns caching.\n    (Cody Cutrer)\n\n  * Add the client host IP address and port to application_name.\n    This is enabled by a config parameter application_name_add_host\n    which defaults to 'off'.\n    (Andrew Dunstan)\n\n  * Config files have '%include FILENAME' directive to allow configuration\n    to be split into several files.\n    (Andrew Dunstan)\n\n- Cleanups\n\n  * log: wrap ipv6 address with []\n  * log: On connect to server, show local ip and port\n  * win32: use gnu-style for long args: --foo\n  * Allow numbers in hostname, always try to parse with inet_pton\n  * Fix deallocate_all() in FAQ\n  * Fix incorrect keyword in example config file\n    (Magnus Hagander)\n  * Allow comments (with ';') in auth files.\n    (Guillaume Aubert)\n  * Fix spelling mistakes in log messages and comments.\n    (Dmitriy Olshevskiy)\n\n- Fixes\n\n  * fix launching new connections during maintenance\n    (Cody Cutrer)\n  * don't load auth file twice at boot\n    (Cody Cutrer)\n  * Proper invalidation for autodbs\n  * ipv6: Set IPV6_V6ONLY on listen socket.\n  * win32: Don't set SO_REUSEADDR on listen socket.\n  * Fix IPv6 address memcpy\n  * Fix cancellation of of waiting clients.\n    (Mathieu Fenniak)\n  * Small bug fix, must check calloc result\n    (Heikki Linnakangas)\n  * Add newline at the end of the PID file\n    (Peter Eisentraut)\n  * Don't allow new server connections when PAUSE <db> was issued.\n    (Petr Jelinek)\n  * Fix 'bad packet' during login when header is delayed.\n    (Michał Trojnara, Marko Kreen)\n  * Fix errors detected by Coverty.\n    (Euler Taveira)\n  * Disable server_idle_timeout when server count gets below min_pool (#60)\n    (Marko Kreen)\n\nPgBouncer 1.5.x\n---------------\n\n**2015-04-09  -  PgBouncer 1.5.5  -  \"Play Dead To Win\"**\n\n- Fixes\n  * Fix remote crash - invalid packet order causes lookup of NULL\n    pointer.  Not exploitable, just DoS.\n\n**2012-11-28  -  PgBouncer 1.5.4  -  \"No Leaks, Potty-Training Successful\"**\n\n- Fixes\n  * DNS: Fix memory leak in getaddrinfo_a() backend.\n  * DNS: Fix memory leak in udns backend.\n  * DNS: Fix stats calculation.\n  * DNS: Improve error message handling for getaddrinfo_a().\n  * Fix win32 compile.\n  * Fix compiler dependency support check in configure.\n  * Few documentation fixes.\n\n**2012-09-12  -  PgBouncer 1.5.3  -  \"Quantum Toaster\"**\n\n- Critical fix\n\n  * Too long database names can lead to crash, which\n    is remotely triggerable if autodbs are enabled.\n\n    The original checks assumed all names come from config files,\n    thus using fatal() was fine, but when autodbs are enabled\n    - by '*' in [databases] section - the database name can come\n    from network thus making remote shutdown possible.\n\n    [CVE-2012-4575](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-4575)\n\n- Minor Features\n\n  * max_packet_size - config parameter to tune maximum packet size\n    that is allowed through.  Default is kept same: (2G-1), but now\n    it can be made smaller.\n  * In case of unparsable packet header, show it in hex in log and\n    error message.\n\n- Fixes\n\n  * AntiMake: it used $(relpath) and $(abspath) to manipulate pathnames,\n    but the result was build failure when source tree path contained\n    symlinks.  The code is now changed to work on plain strings only.\n  * console: now SET can be used to set empty string values.\n  * config.txt: show that all timeouts can be set in floats.\n    This is well-hidden feature introduced in 1.4.\n\n**2012-05-29  -  PgBouncer 1.5.2  -  \"Don't Chew, Just Swallow\"**\n\n- Fixes\n  * Due to mistake, reserve_pool_timeout was taken in microseconds,\n    not seconds, effectively activating reserve pool immediately\n    when pool got full.  Now use it as seconds, as was intended.\n    (Noticed by Keyur Govande)\n\n**2012-04-17  -  PgBouncer 1.5.1  -  \"Abort, Retry, Ignore?\"**\n\n- Features\n  * Parameters to tune permissions on unix socket:\n    unix_socket_mode=0777, unix_socket_group=''.\n- Fixes\n  * Allow empty string for server-side variable - this is\n    needed to get \"application_name\" properly working, as it's\n    the only parameter that does not have server-side default.\n  * If connect string changes, require refresh of server parameters.\n    Previously PgBouncer continued with old parameters,\n    which breaks in case of Postgres upgrade.\n  * If autodb connect string changes, drop old connections.\n  * cf_setint: Use strtol() instead atoi() to parse integer config\n    parameters.  It allows hex, octal and better error detection.\n  * Use sigqueue() to detect union sigval existence - fixes\n    compilation on HPUX.\n  * Remove 'git' command from Makefile, it throws random errors\n    in case of plain-tarball build.\n  * Document stats_period parameter.  This tunes the period for\n    stats output.\n  * Require Asciidoc >= 8.4, seems docs are not compatible with\n    earlier versions anymore.\n  * Stop trying to retry on EINTR from close().\n\n**2012-01-05  -  PgBouncer 1.5  -  \"Bouncing Satisfied Clients Since 2007\"**\n\nIf you use more than 8 IPs behind one DNS name, you now need to\nuse EDNS0 protocol to query.  Only getaddrinfo_a()/getaddrinfo()\nand UDNS backends support it, libevent 1.x/2.x does not.\nTo enable it for libc, add 'options edns0' to /etc/resolv.conf.\n\nGNU Make 3.81+ is required for building.\n\n- Features\n  * Detect DNS reply changes and invalidate connections to IPs no longer\n    present in latest reply.\n    (Petr Jelinek)\n  * DNS zone serial based hostname invalidation.  When option\n    dns_zone_check_period is set, all DNS zones will be queried\n    for SOA, and when serial has changed, all hostnames\n    will be queried.  This is needed to get deterministic\n    connection invalidation, because invalidation on lookup\n    is useless when no lookups are performed.\n    Works only with new UDNS backend.\n  * New SHOW DNS_HOSTS, SHOW DNS_ZONES commands to examine DNS cache.\n  * New param: min_pool_size - avoids dropping all connections\n    when there is no load.\n    (Filip Rembiałkowski)\n  * idle_in_transaction_timeout - kill transaction if idle too long.\n    Not set by default.\n  * New libudns backend for DNS lookups.  More featureful than evdns.\n    Use --with-udns to activate.  Does not work with IPv6 yet.\n  * KILL command, to immediately kill all connections for one database.\n    (Michael Tharp)\n  * Move to Antimake build system to have better looking Makefiles.\n    Now GNU Make 3.81+ is required for building.\n- Fixes\n  * DNS now works with IPv6 hostnames.\n  * Don't change connection state when NOTIFY arrives from server.\n  * Various documentation fixes.\n    (Dan McGee)\n  * Console: Support ident quoting with \"\".  Originally we did not\n    have any commands that took database names, so no quoting was needed.\n  * Console: allow numbers at the start of word regex.  Trying\n    to use strict parser makes things too complex here.\n  * Don't expire auto DBs that are paused.\n    (Michael Tharp)\n  * Create auto databases as needed when doing PAUSE.\n    (Michael Tharp)\n  * Fix wrong log message issued by RESUME command.\n    (Peter Eisentraut)\n  * When user= without password= is in database connect string,\n    password will be taken from userlist.\n  * Parse '*' properly in takeover code.\n  * autogen.sh: work with older autoconf/automake.\n  * Fix run-as-service crash on win32 due to bad basename() from\n    mingw/msvc runtime.  Now compat basename() is always used.\n\nPgBouncer 1.4.x\n---------------\n\n**2011-06-16  -  PgBouncer 1.4.2  -  \"Strike-First Algorithm\"**\n\nAffected OS-es: \\*BSD, Solaris, Win32.\n\n- Portability Fixes\n  * Give CFLAGS to linker.  Needed when using pthread-based\n    getaddrinfo_a() fallback.\n  * lib/find_modules.sh: Replace split() with index()+substr().\n    This should make it work with older AWKs.\n  * <usual/endian.h>: Ignore system htoX/Xtoh defines.  There\n    may be only subset of macros defined.\n  * <usual/signal.h>: Separate compat sigval from compat sigevent\n  * <usual/socket.h>: Include <sys/uio.h> to get iovec\n  * <usual/time.h>: Better function autodetection on win32\n  * <usual/base_win32.h>: Remove duplicate sigval/sigevent declaration\n\n**2011-04-01  -  PgBouncer 1.4.1  -  \"It Was All An Act\"**\n\n- Features\n\n  * Support listening/connect for IPv6 addresses.\n    (Hannu Krosing)\n  * Multiple listen addresses in 'listen_addr'.  For each getaddrinfo()\n    is called, so names can also be used.\n  * console: Send PgBouncer version as 'server_version' to client.\n\n- Important Fixes\n\n  * Disable getaddrinfo_a() on glibc < 2.9 as it crashes on older versions.\n\n    Notable affected OS'es: RHEL/CentOS 5.x (glibc 2.5), Ubuntu 8.04 (glibc 2.7).\n    Also Debian/lenny (glibc 2.7) which has non-crashing getaddrinfo_a()\n    but we have no good way to detect it.\n\n    Please use libevent 2.x on such OS'es, fallback getaddrinfo_a() is not\n    meant for production systems.  And read new 'DNS lookup support' section\n    in README to see how DNS backend is picked.\n\n    (Hubert Depesz Lubaczewski, Dominique Hermsdorff, David Sommerseth)\n\n  * Default to --enable-evdns if libevent 2.x is used.\n\n  * Turn on tcp_keepalive by default, as that's what Postgres also does.\n    (Hubert Depesz Lubaczewski)\n\n  * Set default server_reset_query to DISCARD ALL to be compatible\n    with Postgres by default.\n\n  * win32: Fix crashes with NULL unix socket addr.\n    (Hiroshi Saito)\n\n  * Fix autodb cleanup: old cleanup code was mixing up databases and pools:\n    as soon as one empty pool was found, the database was tagged as 'idle',\n    potentially later killing database with active users.\n\n    Reported-By: Hubert Depesz Lubaczewski\n\n- Fixes\n\n  * Make compat getaddrinfo_a() non-blocking, by using single parallel\n    thread to do lookups.\n  * Enable pthread compilation if compat getaddrinfo_a is used.\n  * release_server missed setting ->last_lifetime_disconnect on lifetime disconnect.\n    (Emmanuel Courreges)\n  * win32: fix auth file on DOS line endings - load_file() did not take\n    account of file shringage when loading.\n    (Rich Schaaf)\n  * <usual/endian.h>: add autoconf detection for enc/dec functions\n    so it would not create conflicts on BSD.\n    (James Pye)\n  * Don't crash when config file does not exist.\n    (Lou Picciano)\n  * Don't crash on DNS lookup failure when logging on noise level (-v -v).\n    (Hubert Depesz Lubaczewski, Dominique Hermsdorff)\n  * Use backticks instead of $(cmd) in find_modules.sh to make it more portable.\n    (Lou Picciano)\n  * Use 'awk' instead of 'sed' in find_modules.sh to make it more portable.\n    (Giorgio Valoti)\n  * Log active async DNS backend info on startup.\n  * Fix --disable-evdns to mean 'no' instead 'yes'.\n  * Mention in docs that -R requires unix_socket_dir.\n  * Discuss server_reset_query in faq.txt.\n  * Restore lost memset in slab allocator\n  * Various minor portability fixes in libusual.\n\n**2011-01-11  -  PgBouncer 1.4  -  \"Gore Code\"**\n\n- Features\n\n  * Async DNS lookup - instead of resolving hostnames at reload time,\n    the names are now resolved at connect time, with configurable caching.\n    (See dns_max_ttl parameter.)\n\n    By default it uses getaddrinfo_a() (glibc) as backend, if it does not\n    exist, then getaddrinfo_a() is emulated via blocking(!) getaddrinfo().\n\n    When --enable-evdns argument to configure, libevent's evdns is used\n    as backend.  It is not used by default, because libevent 1.3/1.4\n    contain buggy implementation.  Only evdns in libevent 2.0 seems OK.\n\n  * New config var: syslog_ident, to tune syslog name.\n\n  * Proper support for `application_name` startup parameter.\n\n  * Command line long options (Guillaume Lelarge)\n\n  * Solaris portability fixes (Hubert Depesz Lubaczewski)\n\n  * New config var: disable_pqexec.  Highly-paranoid environments\n    can disable Simple Query Protocol with that.  Requires apps\n    that use only Extended Query Protocol.\n\n  * Postgres compat: if database name is empty in startup packet,\n    use user name as database.\n\n- Fixes\n\n  * DateStyle and TimeZone server params need to use exact case.\n  * Console: send datetime, timezone and stdstr server params to client.\n\n- Internal cleanups\n\n  * Use libusual library for low-level utility functions.\n  * Remove fixed-length limit from server params.\n\nPgBouncer 1.3.x\n---------------\n\n**2010-09-09  -  PgBouncer 1.3.4  -  \"Bouncer is always right\"**\n\n- Fixes\n  * Apply fast-fail logic at connect time.  So if server is failing,\n    the clients get error when connecting.\n  * Don't tag automatically generated databases for checking on reload time,\n    otherwise they get killed, because they don't exist in config.\n  * Ignore application_name parameter by default.  This avoids the need\n    for all Postgres 9.0 users to add it into ignore_startup_parameters=\n    themselves.\n  * Correct pg_auth quoting.  '\\' is not used there.\n  * Better error reporting on console, show incoming query to user.\n  * Support OS'es (OpenBSD) where tv_sec is not time_t.\n  * Avoid too noisy warnings on gcc 4.5.\n\n**2010-05-10  -  PgBouncer 1.3.3  -  \"NSFW\"**\n\n- Improvements\n  * Make listen(2) argument configurable: listen_backlog.  This is\n    useful on OS'es, where system max allowed is configurable.\n  * Improve disconnect messages to show what username or dbname caused\n    login to fail.\n- Fixes\n  * Move fast-fail relaunch logic around.  Old one was annoying in case of\n    permanently broken databases or users, by trying to retry even if\n    there is no clients who want to login.\n  * Make logging functions keep old errno, otherwise pgbouncer may act funny\n    on higher loglevels and logging problems.\n  * Increase the size of various startup-related buffers to handle\n    EDB more noisy startup.\n  * Detect V2 protocol startup request and give clear reason for disconnect.\n\n**2010-03-15  -  PgBouncer 1.3.2  -  \"Boomerang Bullet\"**\n\n- Fixes\n\n  * New config var 'query_wait_timeout'.  If client does not get\n    server connection in this many seconds, it will be killed.\n\n  * If no server connection in pool and last connect failed, then\n    don't put client connections on hold but send error immediately.\n\n    This together with previous fix avoids unnecessary stalls if\n    a database has gone down.\n\n  * Track libevent state in sbuf.c to avoid double event_del().  Although\n    it usually is safe, it does not seem to work 100%.  Now we should always\n    know whether it has been called or not.\n\n  * Disable maintenance during SUSPEND.  Otherwise with short timeouts\n    the old bouncer could close few connections after sending them over.\n\n  * Apply client_login_timeout to clients waiting for welcome packet\n    (first server connection).  Otherwise they can stay waiting\n    infinitely, unless there is query_timeout set.\n\n  * win32: Add switch -U/-P to -regservice to let user pick account\n    to run service under.  Old automatic choice between Local Service and\n    Local System was not reliable enough.\n\n  * console: Remove \\0 from end of text columns.  It was hard to notice,\n    as C clients were fine with it.\n\n  * Documentation improvements.  (Greg Sabino Mullane)\n\n  * Clarify few login-related log messages.\n\n  * Change logging level for pooler-sent errors (usually on disconnect) from INFO\n    to WARNING, as they signify problems.\n\n  * Change log message for query_timeout to \"query timeout\".\n\n**2009-07-06  -  PgBouncer 1.3.1  -  \"Now fully conforming to NSA monitoring requirements\"**\n\n- Fixes\n  * Fix problem with sbuf_loopcnt which could make connections hang.\n    If query or result length is nearby of multiple of (pktlen*sbuf_loopcnt)\n    [10k by default], it could stay waiting for more data which will not\n    appear.\n  * Make database reconfigure immediate.  Currently old connections\n    could be reused after SIGHUP.\n  * Fix SHOW DATABASES which was broken due to column addition.\n  * Console access was disabled when \"auth_type=any\" as pgbouncer dropped username.\n    Fix: if \"auth_type=any\", allow any user to console as admin.\n  * Fix bad CUSTOM_ALIGN macro.  Luckily it's unused if OS already\n    defines ALIGN macro thus seems the bug has not happened in wild.\n  * win32: call WSAStartup() always, not only in daemon mode\n    as config parsing wants to resolve hosts.\n  * win32: put quotes around config filename in service\n    cmdline to allow spaces in paths.  Executable path\n    does not seem to need it due to some win32 magic.\n  * Add STATS to SHOW HELP text.\n  * doc/usage.txt: the time units in console results are in\n    microseconds, not milliseconds.\n\n**2009-02-18  -  PgBouncer 1.3 -  \"New Ki-Smash Finishing Move\"**\n\n- Features\n\n  * IANA has assigned port 6432 to be official port for PgBouncer.\n    Thus the default port number has changed to 6432.  Existing\n    individual users do not need to change, but if you distribute\n    packages of PgBouncer, please change the package default\n    to official port.\n\n  * Dynamic database creation (David Galoyan)\n\n    Now you can define database with name \"*\".  If defined, it's connect\n    string will be used for all undefined databases.  Useful mostly\n    for test / dev environments.\n\n  * Windows support (Hiroshi Saito)\n\n    PgBouncer runs on Windows 2000+ now.  Command line usage stays same,\n    except it cannot run as daemon and cannot do online reboot.\n    To run as service, define parameter service_name in config. Then:\n\n        > pgbouncer.exe config.ini -regservice\n        > net start SERVICE_NAME\n\n    To stop and unregister:\n\n        > net stop SERVICE_NAME\n        > pgbouncer.exe config.ini -unregservice\n\n    To use Windows Event Log, event DLL needs to be registered first:\n\n        > regsrv32 pgbevent.dll\n\n    Afterwards you can set \"syslog = 1\" in config.\n\n- Minor features\n\n  * Database names in config file can now be quoted with standard SQL\n    ident quoting, to allow non-standard characters in db names.\n\n  * New tunables: 'reserve_pool_size' and 'reserve_pool_timeout'.\n    In case there are clients in pool that have waited more that\n    'reserve_pool_timeout' seconds, 'reserve_pool_size' specifies\n    the number of connections that can be added to pool.  It can also\n    set per-pool with 'reserve_pool' connection variable.\n\n  * New tunable 'sbuf_loopcnt' to limit time spent on one socket.\n\n    In some situations - eg SMP server, local Postgres and fast network -\n    pgbouncer can run recv()->send() loop many times without blocking\n    on either side.  But that means other connections will stall for\n    a long time.  To make processing more fair, limit the times\n    of doing recv()->send() one socket.  If count reaches limit,\n    just proceed processing other sockets.  The processing for\n    that socket will resume on next event loop.\n\n    Thanks to Alexander Schöcke for report and testing.\n\n  * crypt() authentication is now optional, as it was removed from Postgres.\n    If OS does not provide it, pgbouncer works fine without it.\n\n  * Add milliseconds to log timestamps.\n\n  * Replace old MD5 implementation with more compact one.\n\n  * Update ISC licence with the FSF clarification.\n\n- Fixes\n\n  * In case event_del() reports failure, just proceed with cleanup.\n    Previously pgbouncer retried it, in case the failure was due ENOMEM.\n    But this has caused log floods with infinite repeats, so it seems\n    libevent does not like it.\n\n    Why event_del() report failure first time is still mystery.\n\n  * --enable-debug now just toggles whether debug info is stripped from binary.\n    It no longer plays with -fomit-frame-pointer as it's dangerous.\n\n  * Fix include order, as otherwise system includes could come before\n    internal ones.  Was problem for new md5.h include file.\n\n  * Include COPYRIGHT file in .tgz...\n\nPgBouncer 1.2.x\n---------------\n\n**2008-08-08  -  PgBouncer 1.2.3  -  \"Carefully Selected Bytes\"**\n\n- Fixes\n  * Disable SO_ACCEPTFILTER code for BSDs which did not work.\n  * Include example etc/userlist.txt in tgz.\n  * Use '$(MAKE)' instead 'make' for recursion (Jørgen Austvik)\n  * Define _GNU_SOURCE as glibc is useless otherwise.\n  * Let the libevent 1.1 pass link test so we can later report \"1.3b+ needed\"\n  * Detect stale pidfile and remove it.\n\nThanks to Devrim GÜNDÜZ and Bjoern Metzdorf for problem reports and testing.\n\n**2008-08-06  -  PgBouncer 1.2.2  -  \"Barf-bag Included\"**\n\n- Fixes\n  * Remove 'drop_on_error', it was a bad idea.  It was added as workaround\n    for broken plan cache behaviour in Postgres, but can cause damage\n    in common case when some queries always return error.\n\n**2008-08-04  -  PgBouncer 1.2.1  -  \"Waterproof\"**\n\n- Features\n  * New parameter 'drop_on_error' - if server throws error the connection\n    will not be reused but dropped after client finished with it.  This is\n    needed to refresh plan cache.  Automatic refresh does not work even in 8.3.\n    Defaults to 1.\n- Fixes\n  * SHOW SOCKETS/CLIENTS/SERVERS: Don't crash if socket has no buffer.\n  * Fix infinite loop on SUSPEND if suspend_timeout triggers.\n- Minor cleanups\n  * Use <sys/uio.h> for 'struct iovec'.\n  * Cancel shutdown (from SIGINT) on RESUME/SIGUSR2,\n    otherwise it will trigger on next PAUSE.\n  * Proper log message if console operation is canceled.\n\n**2008-07-29  -  PgBouncer 1.2  -  \"Ordinary Magic Flute\"**\n\nPgBouncer 1.2 now requires libevent version 1.3b or newer.\nOlder libevent versions crash with new restart code.\n\n- Features\n\n  * Command line option (-u) and config parameter (user=) to support user\n    switching at startup.  Also now pgbouncer refuses to run as root.\n\n    (Jacob Coby)\n\n  * More descriptive usage text (-h).  (Jacob Coby)\n\n  * New database option: connect_query to allow run a query on new\n    connections before they are taken into use.\n\n    (Teodor Sigaev)\n\n  * New config var 'ignore_startup_parameters' to allow and ignore\n    extra parameters in startup packet.  By default only 'database'\n    and 'user' are allowed, all others raise error.  This is needed\n    to tolerate overenthusiastic JDBC wanting to unconditionally\n    set 'extra_float_digits=2' in startup packet.\n\n  * Logging to syslog: new parameters syslog=0/1 and\n    syslog_facility=daemon/user/local0.\n\n  * Less scary online restart (-R)\n\n    - Move FD loading before fork, so it logs to console and can be canceled by ^C\n\n    - Keep SHUTDOWN after fork, so ^C would be safe\n\n    - A connect() is attempted to unix socket to see if anyone is listening.\n      Now -R can be used even when no previous process was running.  If there\n      is previous process, but -R is not used, startup fails.\n\n  * New console commands:\n\n    - SHOW TOTALS that shows stats summary (as goes to log) plus mem usage.\n\n    - SHOW ACTIVE_SOCKETS - like show sockets; but filter only active ones.\n\n- Less visible features\n\n  * suspend_timeout - drop stalled conns and long logins. This brings\n    additional safety to reboot.\n\n  * When remote database throws error on logging in, notify clients.\n\n  * Removing a database from config and reloading works - all connections\n    are killed and the database is removed.\n\n  * Fake some parameters on console SHOW/SET commands to be more Postgres-like.\n    That was needed to allow psycopg to connect to console.\n    (client_encoding/default_transaction_isolation/datestyle/timezone)\n\n  * Make server_lifetime=0 disconnect server connection immediately\n    after first use.  Previously \"0\" made PgBouncer ignore server age.\n    As this behavior was undocumented, there should not be any users\n    depending on it.\n\n  * Internal improvements:\n\n    - Packet buffers are allocated lazily and reused.  This should bring\n      huge decrease in memory usage.  This also makes realistic to use\n      big pktbuf with lot of connections.\n\n    - Lot's of error handling improvements, PgBouncer should now\n      survive OOM situations gracefully.\n\n    - Use slab allocator for memory management.\n\n    - Lots of code cleanups.\n\n- Fixes\n\n  * Only single accept() was issued per event loop which could\n    cause connection backlog when having high amount of connection\n    attempts.  Now the listening socket is always drained fully,\n    which should fix this.\n  * Handle EINTR from connect().\n  * Make configure.ac compatible with autoconf 2.59.\n  * Solaris compatibility fixes (Magne Mæhre)\n\nPgBouncer 1.1.x\n---------------\n\n**2007-12-10  -  PgBouncer 1.1.2  -  \"The Hammer\"**\n\n- Features\n  * Disconnects because of server_lifetime are now separated by\n    (server_lifetime / pool_size) seconds.  This avoids pgbouncer\n    causing reconnect floods.\n- Fixes\n  * Online upgrade 1.0 -> 1.1 problems:\n    - 1.0 does not track server parameters, so they stay NULL\n      but 1.1 did not expect it and crashed.\n    - If server params are unknown, but client ones are set,\n      then issue a SET for them, instead complaining.\n  * Remove temp debug statements that were accidentally left\n    in code on INFO level, so they polluted logs.\n  * Unbroke debian/changelog\n- Cleanup\n  * reorder struct SBuf fields to get better alignment for buffer.\n\n**2007-10-26  -  PgBouncer 1.1.1  -  \"Breakdancing Bee\"**\n\n- Fixes\n  * Server parameter cache could stay uninitialized, which caused\n    unnecessary SET of them.  This caused problem on 8.1 which\n    does not allow touching standard_conforming_strings.\n    (Thanks to Dimitri Fontaine for report & testing.)\n  * Some doc fixes.\n  * Include doc/fixman.py in .tgz.\n\n**2007-10-09  -  PgBouncer 1.1  -  \"Mad-Hat Toolbox\"**\n\n- Features\n\n  * Keep track of following server parameters:\n\n        client_encoding  datestyle, timezone, standard_conforming_strings\n\n  * Database connect string enhancements:\n\n    - Accept hostname in host=\n    - Accept custom unix socket location in host=\n    - Accept quoted values: password=' asd''foo'\n\n  * New config var: server_reset_query, to be sent immediately after release\n  * New config var: server_round_robin, to switch between LIFO and RR.\n  * Cancel pkt sent for idle connection does not drop it anymore.\n  * Cancel with ^C from psql works for SUSPEND / PAUSE.\n  * Print FD limits on startup.\n  * When suspending, try to hit packet boundary ASAP.\n  * Add 'timezone' to database parameters.\n  * Use longlived logfile fd.  Reopened on SIGHUP / RELOAD;\n  * Local connection endpoint info in SHOW SERVERS/CLIENTS/SOCKETS.\n\n- Code cleanup\n\n  * More debug log messages include socket info.\n  * Magic number removal and error message cleanup. (David Fetter)\n  * Wrapper struct for current pkt info.  Removes lot of compexity.\n\n- Fixes\n\n  * Detect invalid pkt headers better.\n  * auth_file modification check was broken, which made pgbouncer\n    reload it too often.\n\nPgBouncer 1.0.x\n---------------\n\n**2007-06-18  -  PgBouncer 1.0.8  -  \"Undead Shovel Jutsu\"**\n\n- Fixes\n  * Fix crash in cancel packet handling. (^C from psql)\n- Features\n  * PAUSE <db>; RESUME <db>; works now.\n  * Cleanup of console command parsing.\n  * Disable expensive in-list assert check.\n\n**2007-04-19  -  PgBouncer 1.0.7  -  \"With Vitamin A-Z\"**\n\n- Fixes\n  * Several error/notice packets with send() blocking between\n    triggered assert.  Fix it by removing flushing logic altogether.\n    As pgbouncer does not actively buffer anything, its not needed.\n    It was a remnant from the time when buffering was pushed to\n    kernel with MSG_MORE.\n  * Additionally avoid calling recv() logic when sending unblocks.\n  * List search code for admin_users and stats_users\n    mishandled partial finds.  Fix it.\n  * Standardise UNIX socket peer UID finding to getpeereid().\n\n**2007-04-12  -  PgBouncer 1.0.6  -  \"Daily Dose\"**\n\n- Fixes\n  * The \"Disable maintenance during the takeover\" fix could\n    disable maintenance altogether.  Fix it.\n  * Compilation fix for FreeBSD, <sys/ucred.h> requires <sys/param.h> there.\n    Thanks go to Robert Gogolok for report.\n\n**2007-04-11  -  PgBouncer 1.0.5  -  \"Enough for today\"**\n\n- Fixes\n  * Fix online-restart bugs:\n    - Set ->ready for idle servers.\n    - Remove obsolete code from use_client_socket()\n    - Disable maintenance during the takeover.\n\n**2007-04-11  -  PgBouncer 1.0.4  -  \"Last 'last' bug\"**\n\n- Fixes\n  * Notice from idle server tagged server dirty.\n    release_server() did not expect it.  Fix it\n    by dropping them.\n\n**2007-04-11  -  PgBouncer 1.0.3  -  \"Fearless Fork\"**\n\n- Fixes\n  * Some error handling was missing in login path, so dying\n    connection there could trigger asserts.\n  * Cleanup of asserts in sbuf.c to catch problems earlier.\n  * Create core when Assert() triggers.\n\n- New stuff\n  * New config vars: log_connections, log_disconnections,\n    log_pooler_errors to turn on/off noise.\n  * Config var: client_login_timeout to kill dead connections\n    in login phase that could stall SUSPEND and thus online restart.\n\n**2007-03-28  -  PgBouncer 1.0.2  -  \"Supersonic Spoon\"**\n\n- Fixes\n  * libevent may report a deleted event inside same loop.\n    Avoid socket reuse for one loop.\n  * release_server() from disconnect_client() didn't look\n    it the packet was actually sent.\n\n**2007-03-15  -  PgBouncer 1.0.1  -  \"Alien technology\"**\n\n- Fixes\n  * Mixed usage of cached and non-cached time, plus unsigned usec_t typedef\n    created spurious query_timeout errors.\n  * Fix rare case when socket woken up from send-wait could stay stalling.\n  * More fair queueing of server connections.  Before, a new query could\n    get a server connections before older one.\n  * Delay server release until everything is guaranteed to be sent.\n\n- Features\n  * SHOW SOCKETS command to have detailed info about state state.\n  * Put PgSocket ptr to log, to help tracking one connection.\n  * In console, allow SELECT in place of SHOW.\n  * Various code cleanups.\n\n**2007-03-13  -  PgBouncer 1.0  -  \"Tuunitud bemm\"**\n\n- First public release.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.9189453125,
          "content": "PgBouncer\n=========\n\nLightweight connection pooler for PostgreSQL.\n\nHomepage: <https://www.pgbouncer.org/>\n\nSources, bug tracking: <https://github.com/pgbouncer/pgbouncer>\n\nBuilding\n---------\n\nPgBouncer depends on few things to get compiled:\n\n* [GNU Make] 3.81+\n* [Libevent] 2.0+\n* [pkg-config]\n* [OpenSSL] 1.0.1+ for TLS support\n* (optional) [c-ares] as alternative to Libevent's evdns\n* (optional) PAM libraries\n\n[GNU Make]: https://www.gnu.org/software/make/\n[Libevent]: http://libevent.org/\n[pkg-config]: https://www.freedesktop.org/wiki/Software/pkg-config/\n[OpenSSL]: https://www.openssl.org/\n[c-ares]: http://c-ares.haxx.se/\n\nWhen dependencies are installed just run:\n\n    $ ./configure --prefix=/usr/local\n    $ make\n    $ make install\n\nIf you are building from Git, or are building for Windows, please see\nseparate build instructions below.\n\nDNS lookup support\n------------------\n\nPgBouncer does host name lookups at connect time instead of just once\nat configuration load time.  This requires an asynchronous DNS\nimplementation.  The following table shows supported backends and\ntheir probing order:\n\n| backend                    | parallel | EDNS0 (1) | /etc/hosts | SOA lookup (2) | note                                  |\n|----------------------------|----------|-----------|------------|----------------|---------------------------------------|\n| c-ares                     | yes      | yes       | yes        | yes            | IPv6+CNAME buggy in <=1.10            |\n| evdns, libevent 2.x        | yes      | no        | yes        | no             | does not check /etc/hosts updates     |\n| getaddrinfo_a, glibc 2.9+  | yes      | yes (3)   | yes        | no             | N/A on non-glibc                      |\n| getaddrinfo, libc          | no       | yes (3)   | yes        | no             | requires pthreads                     |\n\n1. EDNS0 is required to have more than 8 addresses behind one host name.\n2. SOA lookup is needed to re-check host names on zone serial change.\n3. To enable EDNS0, add `options edns0` to `/etc/resolv.conf`.\n\nc-ares is the most fully-featured implementation and is recommended\nfor most uses and binary packaging (if a sufficiently new version is\navailable).  Libevent's built-in evdns is also suitable for many uses,\nwith the listed restrictions.  The other backends are mostly legacy\noptions at this point and don't receive much testing anymore.\n\nBy default, c-ares is used if it can be found.  Its use can be forced\nwith `configure --with-cares` or disabled with `--without-cares`.  If\nc-ares is not used (not found or disabled), then Libevent is used.  Specify\n`--disable-evdns` to disable the use of Libevent's evdns and fall back to a\nlibc-based implementation.\n\nPAM authentication\n------------------\n\nTo enable PAM authentication, `./configure` has a flag `--with-pam`\n(default value is no).  When compiled with PAM support, a new global\nauthentication type `pam` is available to validate users through PAM.\n\nsystemd integration\n-------------------\n\nTo enable systemd integration, use the `configure` option\n`--with-systemd`.  This allows using `Type=notify` (or `Type=notify-reload` if\nyou are using systemd 253 or later) as well as socket activation.  See\n`etc/pgbouncer.service` and `etc/pgbouncer.socket` for examples.\n\nBuilding from Git\n-----------------\n\nBuilding PgBouncer from Git requires that you fetch the libusual and\nuthash submodules and generate the header and configuration files before\nyou can run `configure`:\n\n\t$ git clone https://github.com/pgbouncer/pgbouncer.git\n\t$ cd pgbouncer\n\t$ git submodule init\n\t$ git submodule update\n\t$ ./autogen.sh\n\t$ ./configure\n\t$ make\n\t$ make install\n\nAll files will be installed under `/usr/local` by default. You can\nsupply one or more command-line options to `configure`. Run\n`./configure --help` to list the available options and the environment\nvariables that customizes the configuration.\n\nAdditional packages required: autoconf, automake, libtool, pandoc\n\nTesting\n-------\n\nSee the [`README.md` file in the test directory][1] on how to run the tests.\n\n[1]: https://github.com/pgbouncer/pgbouncer/blob/master/test/README.md\n\nBuilding on Windows\n-------------------\n\nThe only supported build environment on Windows is MinGW.  Cygwin and\nVisual $ANYTHING are not supported.\n\nTo build on MinGW, do the usual:\n\n\t$ ./configure\n\t$ make\n\nIf cross-compiling from Unix:\n\n\t$ ./configure --host=i586-mingw32msvc\n\nRunning on Windows\n------------------\n\nRunning from the command line goes as usual, except that the `-d` (daemonize),\n`-R` (reboot), and `-u` (switch user) switches will not work.\n\nTo run PgBouncer as a Windows service, you need to configure the\n`service_name` parameter to set a name for the service.  Then:\n\n\t$ pgbouncer -regservice config.ini\n\nTo uninstall the service:\n\n\t$ pgbouncer -unregservice config.ini\n\nTo use the Windows event log, set `syslog = 1` in the configuration file.\nBut before that, you need to register `pgbevent.dll`:\n\n\t$ regsvr32 pgbevent.dll\n\nTo unregister it, do:\n\n\t$ regsvr32 /u pgbevent.dll\n"
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 0.041015625,
          "content": "#! /bin/sh\n\n./lib/mk/std-autogen.sh ./lib\n"
        },
        {
          "name": "config.mak.in",
          "type": "blob",
          "size": 1.56640625,
          "content": "PACKAGE_NAME = @PACKAGE_NAME@\nPACKAGE_TARNAME = @PACKAGE_TARNAME@\nPACKAGE_VERSION = @PACKAGE_VERSION@\nPACKAGE_STRING = @PACKAGE_STRING@\nPACKAGE_URL = @PACKAGE_URL@\nPACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@\nPORTNAME = @PORTNAME@\nEXEEXT = @EXEEXT@\nHAVE_CC_DEPFLAG = @HAVE_CC_DEPFLAG@\nCC = @CC@\nCPP = @CPP@\nCPPFLAGS = @CPPFLAGS@\nCFLAGS = @CFLAGS@\nDEFS = @DEFS@\nWFLAGS = @WFLAGS@\nCXX = @CXX@\nCXXFLAGS = @CXXFLAGS@\nLD = @LD@\nLDFLAGS = @LDFLAGS@\nLIBS = @LIBS@\nAR = @AR@\nARFLAGS = @ARFLAGS@\nRANLIB = @RANLIB@\nLIBTOOL = @LIBTOOL@\nINSTALL = @INSTALL@\nINSTALL_PROGRAM = @INSTALL_PROGRAM@\nINSTALL_SCRIPT = @INSTALL_SCRIPT@\nINSTALL_DATA = @INSTALL_DATA@\nMKDIR_P = @MKDIR_P@\nSED = @SED@\nAWK = @AWK@\nGREP = @GREP@\nEGREP = @EGREP@\nSTRIP = @STRIP@\nprefix = @prefix@\nexec_prefix = @exec_prefix@\nbindir = @bindir@\nincludedir = @includedir@\nsbindir = @sbindir@\nlibexecdir = @libexecdir@\ndatarootdir = @datarootdir@\ndatadir = @datadir@\nsysconfdir = @sysconfdir@\ndocdir = @docdir@\nmandir = @mandir@\nlibdir = @libdir@\nlocaledir = @localedir@\npkgdatadir = @pkgdatadir@\npkgconfigdir = @pkgconfigdir@\nabs_top_srcdir ?= @abs_top_srcdir@\nabs_top_builddir ?= @abs_top_builddir@\nnosub_top_srcdir ?= @top_srcdir@\nnosub_top_builddir ?= @top_builddir@\n\nCARES_CFLAGS = @CARES_CFLAGS@\nCARES_LIBS = @CARES_LIBS@\n\nLIBEVENT_CFLAGS = @LIBEVENT_CFLAGS@\nLIBEVENT_LIBS = @LIBEVENT_LIBS@\n\nTLS_CPPFLAGS = @TLS_CPPFLAGS@\nTLS_LDFLAGS = @TLS_LDFLAGS@\nTLS_LIBS = @TLS_LIBS@\n\nPANDOC = @PANDOC@\nPYTHON = @PYTHON@\nDLLWRAP = @DLLWRAP@\nDLLTOOL = @DLLTOOL@\nWINDRES = @WINDRES@\n\nenable_debug = @enable_debug@\ntls_support = @tls_support@\n\nhost_cpu = @host_cpu@\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 5.3974609375,
          "content": "dnl Process this file with autoconf to produce a configure script.\n\nAC_INIT([PgBouncer],\n        [1.24.0],\n        [https://github.com/pgbouncer/pgbouncer/issues], [],\n        [https://www.pgbouncer.org/])\nAC_CONFIG_SRCDIR(src/janitor.c)\nAC_CONFIG_HEADERS([lib/usual/config.h])\nAC_PREREQ([2.59])\n\ndnl basic init\nAC_USUAL_INIT\n\ndnl Checks for programs.\nAC_USUAL_PROGRAM_CHECK\n\nPKG_PROG_PKG_CONFIG\n\nAC_CHECK_PROGS(PANDOC, pandoc, pandoc)\nAC_CHECK_PROGS(PYTHON, [python3 python], python3)\n\ndnl check for windows tools\nif test \"$PORTNAME\" = \"win32\"; then\n  AC_CHECK_TOOL([WINDRES], [windres])\n  AC_CHECK_TOOL([DLLWRAP], [dllwrap])\n  AC_CHECK_TOOL([DLLTOOL], [dlltool])\nfi\nAC_CHECK_TOOL([STRIP], [strip])\n\ndnl Checks for header files.\nAC_USUAL_HEADER_CHECK\nAC_CHECK_HEADERS([sys/resource.h sys/wait.h])\n\ndnl Checks for typedefs, structures, and compiler characteristics.\nAC_USUAL_TYPE_CHECK\n\ndnl autoconf 2.59 does not have UINT macros nor docdir\nm4_ifdef([AC_TYPE_UINT8_T], [\n  AC_TYPE_UINT8_T\n  AC_TYPE_UINT32_T\n  AC_TYPE_UINT64_T\n], [\n  datarootdir='${prefix}/share'\n  docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'\n  AC_SUBST(datarootdir)\n  AC_SUBST(docdir)\n])\n\ndnl Checks for library functions.\nAC_USUAL_FUNCTION_CHECK\nAC_SEARCH_LIBS(clock_gettime, rt)\nAC_SEARCH_LIBS(getsockname, socket)\nAC_SEARCH_LIBS(gethostbyname, nsl)\nAC_SEARCH_LIBS(hstrerror, resolv)\nAC_CHECK_FUNCS(lstat)\n\ndnl Find libevent\nPKG_CHECK_MODULES(LIBEVENT, libevent)\n\ndnl Check for PAM authentication support\npam_support=no\nAC_ARG_WITH(pam,\n  AS_HELP_STRING([--with-pam], [build with PAM support]),\n  [ PAM=\n    if test \"$withval\" != no; then\n        have_pthreads=no\n        # Look for PAM header and lib\n        AC_CHECK_HEADERS(security/pam_appl.h, [have_pam_header=t])\n        AC_CHECK_HEADERS(pthread.h, [have_pthreads=yes])\n        AC_SEARCH_LIBS(pam_start, pam, [have_libpam=t])\n        AC_SEARCH_LIBS(pthread_create, pthread, [], [have_pthreads=no])\n        if test x\"${have_pthreads}\" != xyes; then\n           AC_MSG_ERROR([pthread library should be available for PAM support])\n        fi\n        if test x\"${have_pam_header}\" != x -a x\"${have_libpam}\" != x -a x\"${have_pthreads}\" = xyes; then\n          pam_support=yes\n          AC_DEFINE(HAVE_PAM, 1, [PAM support])\n        fi\n    fi\n  ], [])\n\ndnl Check for systemd support\nAC_MSG_CHECKING([whether to build with systemd support])\nAC_ARG_WITH(systemd,\n            [AS_HELP_STRING([--with-systemd], [build with systemd support])],\n            [if test \"$withval\" != no; then with_systemd=yes; else with_systemd=no; fi],\n            [with_systemd=no])\nAC_MSG_RESULT([$with_systemd])\nAC_SUBST(with_systemd)[]dnl\nif test \"$with_systemd\" = yes; then\n  AC_DEFINE([USE_SYSTEMD], 1, [Define to build with systemd support. (--with-systemd)])\n  AC_CHECK_HEADER(systemd/sd-daemon.h, [], [AC_MSG_ERROR([header file <systemd/sd-daemon.h> is required for systemd support])])\n  AC_SEARCH_LIBS(sd_notify, systemd)\nfi\n\n##\n## DNS backend\n##\n\n# make sure all vars are set\nuse_cares=no\nuse_evdns=no\n\ndnl Find c-ares\nAC_MSG_CHECKING([whether to use c-ares for DNS lookups])\nAC_ARG_WITH(cares,\n  AS_HELP_STRING([--with-cares@<:@=PREFIX@:>@], [build with c-ares support]),\n  [ if test \"$withval\" = \"no\"; then\n      use_cares=no\n    elif test \"$withval\" = \"yes\"; then\n      use_cares=\"$withval\"\n      CARES_CFLAGS=\"\"\n      CARES_LIBS=\"-lcares\"\n    elif test \"$withval\" = \"auto\"; then\n      use_cares=\"$withval\"\n    else\n      use_cares=yes\n      CARES_CFLAGS=\"-I$withval/include\"\n      CARES_LIBS=\"-L$withval/lib -lcares\"\n    fi\n  ], [use_cares=auto])\nAC_MSG_RESULT([$use_cares])\n\nif test \"$use_cares\" = \"auto\"; then\n  PKG_CHECK_MODULES(CARES, [libcares >= 1.9.0], [use_cares=yes], [use_cares=no])\nfi\n\nif test \"$use_cares\" = \"yes\"; then\n  AC_DEFINE(USE_CARES, 1, [Use c-ares for name resolution.])\n\n  tmp_CFLAGS=\"$CFLAGS\"\n  tmp_LIBS=\"$LIBS\"\n  CFLAGS=\"$CARES_CFLAGS $CFLAGS\"\n  LIBS=\"$CARES_LIBS $LIBS\"\n  # portability substitute for arpa/nameser.h, needed mainly for Windows\n  AC_CHECK_HEADERS([ares_nameser.h])\n  LIBS=\"$tmp_LIBS\"\n  CFLAGS=\"$tmp_CFLAGS\"\n\nelse # !cares\n\ndnl Allow user to override the decision\nAC_ARG_ENABLE(evdns, AS_HELP_STRING([--disable-evdns], [do not use libevent for DNS lookups]),\n              [use_evdns=$enableval], [use_evdns=yes])\nAC_MSG_CHECKING([whether to use libevent for DNS lookups])\nif test \"$use_evdns\" = \"yes\"; then\n  AC_DEFINE(USE_EVDNS, 1, [Use libevent for DNS lookups.])\n  AC_MSG_RESULT([yes])\nelse\n  AC_MSG_RESULT([no])\nfi\n\ndnl Check if need getaddinfo_a compat\nif test \"$use_cares.$use_evdns\" = \"no.no\"; then\n  AC_USUAL_GETADDRINFO_A\nfi\n\nfi # !cares\n\n## end of DNS\n\nAC_USUAL_TLS\n\nAC_USUAL_DEBUG\nAC_USUAL_CASSERT\nAC_USUAL_WERROR\n\nPACKAGE_VERSION_4B=`echo \"${PACKAGE_VERSION}.0\" | sed -e 's/\\./,/g'`\nAC_DEFINE_UNQUOTED(PACKAGE_VERSION_4B, [$PACKAGE_VERSION_4B],\n                   [Define to the version of this package for Windows resource file (1,2,3,4).])dnl\n\ndnl Output findings\nAC_CONFIG_FILES([config.mak])\nAC_OUTPUT\n\ndnl If separate build dir, link Makefile over\ntest -f Makefile || {\n  echo \"Linking Makefile\"\n  ln -s $srcdir/Makefile\n}\n\necho \"\"\necho \"Results:\"\ndnl Note: Report here should match selection in src/dnslookup.c\nif test \"$use_cares\" = \"yes\"; then\n  echo \"  adns    = c-ares\"\nelif test \"$use_evdns\" = \"yes\"; then\n  echo \"  adns    = evdns2\"\nelif test \"$ac_cv_usual_glibc_gaia\" = \"yes\"; then\n  echo \"  adns    = libc\"\nelse\n  echo \"  adns    = compat\"\nfi\necho \"  pam     = $pam_support\"\necho \"  systemd = $with_systemd\"\necho \"  tls     = $tls_support\"\necho \"\"\n"
        },
        {
          "name": "dev_requirements.txt",
          "type": "blob",
          "size": 0.033203125,
          "content": "black\nflake8\nflake8-bugbear\nisort\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "etc",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "commit",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.1953125,
          "content": "[tool.pytest.ini_options]\naddopts = [\n    \"--import-mode=prepend\",\n    \"--showlocals\",\n    \"--tb=short\",\n]\nmarkers = [\n    \"md5: uses MD5, will fail in FIPS mode\",\n]\ntimeout = 30\n\n# The asyncio_mode setting doesn't work on outdated versions of pytest-asyncio.\n# For python 3.6 no version is available that supports the asyncio_mode\n# setting, and for some of the older OSes Python 3.6 is the newest python\n# available. So @pytest.mark.asyncio is used everywhere instead. Once none of\n# our supported OSes require usage we can drop those marks and rely on the\n# asyncio_mode setting instead.\n# On these outdated versions having this setting in the config will throw a\n# warning, but we still add it anyway. The reason is that by adding it async\n# fixtures work on all versions, and are pretty much impossible to make work\n# otherwise without lots of version checks. So having a warning on outdated\n# versions is a small price to pay to not have to worry about that.\nasyncio_mode = 'auto'\n\n# Make test discovery quicker\nnorecursedirs = [\n    '*.egg',\n    '.*',\n    '__pycache__',\n    'venv',\n    'src',\n    'lib',\n    'uthash',\n]\n\n[tool.isort]\nprofile = 'black'\nskip = 'lib,uthash'\n\n[tool.black]\nextend-exclude = 'lib|uthash'\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.1005859375,
          "content": "pytest\npytest-asyncio\npytest-timeout\npytest-xdist\npsycopg\nfilelock\ncontextlib2; python_version < \"3.7\"\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "uncrustify.cfg",
          "type": "blob",
          "size": 2.1240234375,
          "content": "# indent and align with tabs, only uses spaces if tab is too large\nindent_with_tabs = 2\nindent_cmt_with_tabs = true\n\n# No newlines between type name and brace\nnl_enum_brace = remove\nnl_struct_brace = remove\nnl_union_brace = remove\n\n# No newlines before block\nnl_assign_brace = remove\nnl_fcall_brace = remove\nnl_if_brace = remove\nnl_brace_else = remove\nnl_elseif_brace = remove\nnl_for_brace = remove\nnl_while_brace = remove\nnl_do_brace = remove\nnl_brace_while = remove\n\n# Consistent newline behavior in function definitions\nnl_fdef_brace = add\nnl_func_type_name = remove\n\n# Use consistent spacing\nsp_arith_additive = force\nsp_assign = force\nsp_enum_paren = force\nsp_enum_assign = force\nsp_bool = force\nsp_compare = force\nsp_inside_paren = remove\nsp_paren_paren = remove\nsp_cparen_oparen = remove\nsp_paren_brace = force\nsp_brace_brace = remove\nsp_before_ptr_star = force\nsp_between_ptr_star = remove\nsp_after_ptr_star = remove\nsp_after_byref = remove\nsp_before_sparen = force\nsp_inside_sparen = remove\nsp_inside_for = remove\nsp_after_sparen = force\nsp_sparen_brace = force\nsp_do_brace_open = force\nsp_while_paren_open = force\nsp_before_semi_for = remove\nsp_after_semi_for = force\nsp_inside_square = remove\nsp_after_comma = force\nsp_after_cast = ignore  # XXX: We're not very consistent with this, do we want to be?\nsp_inside_paren_cast = remove\nsp_sizeof_paren = remove\nsp_inside_braces_empty = remove\nsp_else_brace = force\nsp_brace_else = force\nsp_brace_typedef = force\nsp_cond_colon = force\nsp_cond_question = force\nsp_case_label = force\nsp_endif_cmt = force\nsp_before_ellipsis = remove\nsp_func_def_paren = remove\nsp_func_type_paren = remove\n\n# Do not use force for these because we often manually align these\nsp_macro = add\nsp_before_tr_cmt = add\n\nmod_remove_duplicate_include = true\nmod_remove_extra_semicolon = true\neat_blanks_before_close_brace = true\neat_blanks_after_open_brace = true\n\n# Don't have braces for single line if/else body, unless there's an\n# if/else in the chain that requires braces\nmod_full_brace_if = remove\nmod_full_brace_if_chain = 1\nmod_full_brace_nl = 1\n\n# Trailing commas are great, but for now we don't use them yet\n# mod_enum_last_comma = force\n"
        },
        {
          "name": "uthash",
          "type": "commit",
          "content": null
        },
        {
          "name": "win32",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}